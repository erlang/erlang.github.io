module compile_SUITE.
exports [{all,0},
         {annotations_pp,1},
         {app_test,1},
         {appup_test,1},
         {asm,1},
         {asm_labels,1},
         {bc_options,1},
         {beam_ssa_pp_smoke_test,1},
         {bigE_roundtrip,1},
         {binary,1},
         {bs_init_writable,1},
         {compile_attribute,1},
         {cond_and_ifdef,1},
         {core_pp,1},
         {core_roundtrip,1},
         {cover,1},
         {custom_compile_info,1},
         {custom_debug_info,1},
         {debug_info,4},
         {deterministic_docs,1},
         {deterministic_include,1},
         {deterministic_paths,1},
         {dialyzer,1},
         {encrypted_abstr,1},
         {end_per_group,2},
         {end_per_suite,1},
         {env,1},
         {env_compiler_options,1},
         {erl_compile_api,1},
         {extra_chunks,1},
         {file_1,1},
         {forms_2,1},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {listings,1},
         {listings_big,1},
         {makedep,1},
         {message_printing,1},
         {module_info,0},
         {module_info,1},
         {module_mismatch,1},
         {no_core_prepare,1},
         {option_order,1},
         {other_options,1},
         {other_output,1},
         {outdir,1},
         {pre_load_check,1},
         {strict_record,1},
         {suite,0},
         {sys_pre_attributes,1},
         {transforms,1},
         {tuple_calls,1},
         {types_pp,1},
         {utf8_atoms,1},
         {utf8_functions,1},
         {warnings,1}].
attributes [].

%% compile_SUITE.erl:47
%% Counter = 4
%% bs_ensure_opt: true
function `compile_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')})
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% compile_SUITE.erl:53
%% Counter = 4
%% bs_ensure_opt: true
function `compile_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list(atom())
  ret `[app_test,appup_test,bigE_roundtrip,file_1,forms_2,module_mismatch,outdir,
  binary,makedep,cond_and_ifdef,listings,listings_big,other_output,
  encrypted_abstr,tuple_calls,strict_record,utf8_atoms,utf8_functions,
  extra_chunks,cover,env,core_pp,core_roundtrip,asm,asm_labels,
  no_core_prepare,sys_pre_attributes,dialyzer,beam_ssa_pp_smoke_test,warnings,
  pre_load_check,env_compiler_options,custom_debug_info,bc_options,
  custom_compile_info,deterministic_include,deterministic_paths,
  deterministic_docs,compile_attribute,message_printing,other_options,
  transforms,erl_compile_api,types_pp,bs_init_writable,annotations_pp,
  option_order]`
}

%% compile_SUITE.erl:69
%% Counter = 4
%% bs_ensure_opt: true
function `compile_SUITE`:`groups`() {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% compile_SUITE.erl:72
%% Counter = 6
%% bs_ensure_opt: true
function `compile_SUITE`:`init_per_suite`(_0) {
0:
  %% compile_SUITE.erl:73
  _2 = call (`test_lib`:`recompile`/1), `compile_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:76
%% Counter = 4
%% bs_ensure_opt: true
function `compile_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% compile_SUITE.erl:79
%% Counter = 4
%% bs_ensure_opt: true
function `compile_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% compile_SUITE.erl:82
%% Counter = 4
%% bs_ensure_opt: true
function `compile_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% compile_SUITE.erl:88
%% Counter = 10
%% bs_ensure_opt: true
function `compile_SUITE`:`app_test`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compile_SUITE.erl:89
  _2 = call (`test_server`:`app_test`/1), `compiler`

  %% Aliased:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Aliased:
  %%    _2
  ret _2

6:
  %% compile_SUITE.erl:88
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-app_test/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compile_SUITE.erl:92
%% Counter = 17
%% bs_ensure_opt: true
function `compile_SUITE`:`appup_test`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% compile_SUITE.erl:93
  _3 = call (`test_server`:`appup_test`/1), `compiler`

  %% Aliased:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _14 = bif:'=:=' _3, `ok`
  br _14, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _3
  ret _3

12:
  %% compile_SUITE.erl:93
  %% Aliased:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _15 = succeeded:body _4
  br ^1

8:
  %% compile_SUITE.erl:92
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-appup_test/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% compile_SUITE.erl:98
%% Counter = 93
%% bs_ensure_opt: true
function `compile_SUITE`:`bigE_roundtrip`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _45 = bif:is_list _0
  br _45, ^45, ^44

45:
  %% compile_SUITE.erl:99
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _46 = succeeded:body DataDir
  br _46, ^46, ^1

46:
  %% compile_SUITE.erl:100
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _47 = succeeded:body PrivDir
  br _47, ^47, ^1

47:
  %% compile_SUITE.erl:101
  %% Aliased:
  %%    DataDir
  Source = call (`filename`:`join`/2), DataDir, `"bigE.erl"`

  %% Aliased:
  %%    Source
  _48 = succeeded:body Source
  br _48, ^48, ^1

48:
  %% compile_SUITE.erl:102
  %% Aliased:
  %%    PrivDir
  TargetDir = call (`filename`:`join`/2), PrivDir, `"bigE"`

  %% Aliased:
  %%    TargetDir
  _49 = succeeded:body TargetDir
  br _49, ^49, ^1

49:
  %% compile_SUITE.erl:103
  %% Aliased:
  %%    TargetDir
  Target = call (`filename`:`join`/2), TargetDir, `"bigE.E"`

  %% Aliased:
  %%    Target
  _50 = succeeded:body Target
  br _50, ^50, ^1

50:
  %% compile_SUITE.erl:104
  %% Aliased:
  %%    TargetDir
  TargetSource = call (`filename`:`join`/2), TargetDir, `"bigE.erl"`

  %% Aliased:
  %%    TargetSource
  _51 = succeeded:body TargetSource
  br _51, ^51, ^1

51:
  %% compile_SUITE.erl:105
  %% Aliased:
  %%    TargetDir
  _14 = call (`file`:`make_dir`/1), TargetDir

  %% Aliased:
  %%    _14
  _52 = succeeded:body _14
  br _52, ^52, ^1

52:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _85 = bif:'=:=' _14, `ok`
  br _85, ^84, ^54

84:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Target
  _15 = put_list Target, `[]`

  %% Argument types:
  %%    _15 => nonempty_list(any())
  %% Aliased:
  %%    TargetDir
  %% Unique:
  %%    _15
  _16 = put_list TargetDir, _15

  %% Argument types:
  %%    _16 => nonempty_list(any())
  %% Aliased:
  %%    Source
  %% Unique:
  %%    _16
  _17 = put_list Source, _16

  %% compile_SUITE.erl:106
  %% Unique:
  %%    _17
  _34 = call (`io`:`format`/2), `"Source: ~p~nTargetDir: ~p~nTarget: ~p\n"`, _17

  %% Aliased:
  %%    _34
  _55 = succeeded:body _34
  br _55, ^55, ^1

55:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _18 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _18 => {'outdir', any()}
  %% Unique:
  %%    _18
  _19 = put_list _18, `[]`

  %% Argument types:
  %%    _19 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _19
  _20 = put_list `warnings_as_errors`, _19

  %% Argument types:
  %%    _20 => nonempty_list('warnings_as_errors' | {'outdir', any()})
  %% Unique:
  %%    _20
  _21 = put_list `'E'`, _20

  %% compile_SUITE.erl:108
  %% Aliased:
  %%    Source
  %% Unique:
  %%    _21
  _22 = call (`compile`:`file`/2), Source, _21

  %% Aliased:
  %%    _22
  _56 = succeeded:body _22
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _62 = is_tagged_tuple _22, `2`, `ok`
  br _62, ^57, ^58

58:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _23 = put_tuple `unexpected_result`, _22

  %% compile_SUITE.erl:111
  %% Unique:
  %%    _23
  _35 = call (`ct`:`fail`/1), _23

  %% Aliased:
  %%    _35
  _65 = succeeded:body _35
  br _65, ^57, ^1

57:
  %% compile_SUITE.erl:116
  %% Aliased:
  %%    Target, 
  %%    TargetSource
  _26 = call (`file`:`rename`/2), Target, TargetSource

  %% Aliased:
  %%    _26
  _66 = succeeded:body _26
  br _66, ^66, ^1

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _82 = bif:'=:=' _26, `ok`
  br _82, ^81, ^68

81:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _27 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _27 => {'outdir', any()}
  %% Unique:
  %%    _27
  _28 = put_list _27, `[]`

  %% Argument types:
  %%    _28 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _28
  _29 = put_list `warnings_as_errors`, _28

  %% compile_SUITE.erl:117
  %% Aliased:
  %%    TargetSource
  %% Unique:
  %%    _29
  _30 = call (`compile`:`file`/2), TargetSource, _29

  %% Aliased:
  %%    _30
  _69 = succeeded:body _30
  br _69, ^69, ^1

69:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _75 = is_tagged_tuple _30, `2`, `ok`
  br _75, ^70, ^71

71:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _31 = put_tuple `unexpected_result`, _30

  %% compile_SUITE.erl:120
  %% Unique:
  %%    _31
  _36 = call (`ct`:`fail`/1), _31

  %% Aliased:
  %%    _36
  _78 = succeeded:body _36
  br _78, ^70, ^1

70:
  %% compile_SUITE.erl:122
  %% Aliased:
  %%    TargetSource
  _37 = call (`file`:`delete`/1), TargetSource

  %% Aliased:
  %%    _37
  _79 = succeeded:body _37
  br _79, ^79, ^1

79:
  %% compile_SUITE.erl:123
  %% Aliased:
  %%    TargetDir
  _38 = call (`file`:`del_dir`/1), TargetDir

  %% Aliased:
  %%    _38
  _80 = succeeded:body _38
  br _80, ^80, ^1

80:
  %% Result type:
  %%    'ok'
  ret `ok`

68:
  %% compile_SUITE.erl:116
  %% Aliased:
  %%    _26
  _39 = match_fail `badmatch`, _26

  %% Unique:
  %%    _39
  _83 = succeeded:body _39
  br ^1

54:
  %% compile_SUITE.erl:105
  %% Aliased:
  %%    _14
  _40 = match_fail `badmatch`, _14

  %% Unique:
  %%    _40
  _86 = succeeded:body _40
  br ^1

44:
  %% compile_SUITE.erl:98
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-bigE_roundtrip/1-',1}}
  _41 = match_fail `function_clause`, _0

  %% Unique:
  %%    _41
  _87 = succeeded:body _41
  br ^1

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _42
}

%% compile_SUITE.erl:129
%% Counter = 577
%% bs_ensure_opt: true
function `compile_SUITE`:`file_1`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _246 = bif:is_list _0
  br _246, ^246, ^245

246:
  %% compile_SUITE.erl:130
  _181 = call (`erlang`:`process_flag`/2), `trap_exit`, `true`

  %% Aliased:
  %%    _181
  _247 = succeeded:body _181
  br _247, ^247, ^1

247:
  %% compile_SUITE.erl:132
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _248 = succeeded:body DataDir
  br _248, ^248, ^1

248:
  %% compile_SUITE.erl:133
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _249 = succeeded:body PrivDir
  br _249, ^249, ^1

249:
  %% compile_SUITE.erl:135
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _94 = call (`get_files`/3), _0, `simple`, `"file_1"`

  %% Aliased:
  %%    _94
  _250 = succeeded:body _94
  br _250, ^548, ^1

548:
  %% Argument types:
  %%    _94 => {any(), any()}
  %% Aliased:
  %%    _94
  _96 = get_tuple_element _94, `0`

  %% compile_SUITE.erl:136
  _97 = call (`file`:`get_cwd`/0)

  %% Aliased:
  %%    _97
  _253 = succeeded:body _97
  br _253, ^253, ^1

253:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _544 = is_tagged_tuple _97, `2`, `ok`
  br _544, ^541, ^255

541:
  %% Argument types:
  %%    _94 => {any(), any()}
  %% Aliased:
  %%    _94
  _95 = get_tuple_element _94, `1`

  %% compile_SUITE.erl:137
  %% Aliased:
  %%    _95
  _5 = call (`filename`:`dirname`/1), _95

  %% Aliased:
  %%    _5
  _256 = succeeded:body _5
  br _256, ^256, ^1

256:
  %% compile_SUITE.erl:137
  %% Aliased:
  %%    _5
  _100 = call (`file`:`set_cwd`/1), _5

  %% Aliased:
  %%    _100
  _257 = succeeded:body _100
  br _257, ^257, ^1

257:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _539 = bif:'=:=' _100, `ok`
  br _539, ^538, ^259

538:
  %% compile_SUITE.erl:139
  %% Aliased:
  %%    _96
  _101 = call (`compile`:`file`/2), _96, `[slim]`

  %% Aliased:
  %%    _101
  _260 = succeeded:body _101
  br _260, ^260, ^1

260:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _536 = bif:'=:=' _101, `{ok,simple}`
  br _536, ^536, ^262

536:
  %% compile_SUITE.erl:140
  %% Aliased:
  %%    _96
  _102 = call (`compile`:`file`/1), _96

  %% Aliased:
  %%    _102
  _263 = succeeded:body _102
  br _263, ^263, ^1

263:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _534 = bif:'=:=' _102, `{ok,simple}`
  br _534, ^534, ^265

534:
  %% compile_SUITE.erl:142
  %% Result type:
  %%    list('debug_info' | 'no_postopt')
  %% Aliased:
  %%    _95, 
  %%    _96
  _182 = call (`compile_and_verify`/3), _96, _95, `[]`

  %% Aliased:
  %%    _182
  _266 = succeeded:body _182
  br _266, ^266, ^1

266:
  %% compile_SUITE.erl:143
  %% Result type:
  %%    list('debug_info' | 'no_postopt')
  %% Aliased:
  %%    _95, 
  %%    _96
  _183 = call (`compile_and_verify`/3), _96, _95, `[debug_info]`

  %% Aliased:
  %%    _183
  _267 = succeeded:body _183
  br _267, ^267, ^1

267:
  %% compile_SUITE.erl:144
  %% Result type:
  %%    list('debug_info' | 'no_postopt')
  %% Aliased:
  %%    _95, 
  %%    _96
  _184 = call (`compile_and_verify`/3), _96, _95, `[no_postopt]`

  %% Aliased:
  %%    _184
  _268 = succeeded:body _184
  br _268, ^268, ^1

268:
  %% compile_SUITE.erl:146
  %% Aliased:
  %%    _96
  _103 = call (`compile`:`file`/2), _96, `[no_line_info]`

  %% Aliased:
  %%    _103
  _269 = succeeded:body _103
  br _269, ^269, ^1

269:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _532 = bif:'=:=' _103, `{ok,simple}`
  br _532, ^532, ^271

532:
  %% compile_SUITE.erl:147
  %% Aliased:
  %%    _96
  _104 = call (`compile`:`file`/2), _96, `[{eprof,beam_z}]`

  %% Aliased:
  %%    _104
  _272 = succeeded:body _104
  br _272, ^272, ^1

272:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _530 = bif:'=:=' _104, `{ok,simple}`
  br _530, ^530, ^274

530:
  %% compile_SUITE.erl:148
  %% Aliased:
  %%    _96
  _105 = call (`compile`:`file`/2), _96, `[{call_time,beam_z}]`

  %% Aliased:
  %%    _105
  _275 = succeeded:body _105
  br _275, ^275, ^1

275:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _528 = bif:'=:=' _105, `{ok,simple}`
  br _528, ^528, ^277

528:
  %% compile_SUITE.erl:149
  %% Aliased:
  %%    _96
  _106 = call (`compile`:`file`/2), _96, `[{call_memory,beam_z}]`

  %% Aliased:
  %%    _106
  _278 = succeeded:body _106
  br _278, ^278, ^1

278:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _106
  _526 = bif:'=:=' _106, `{ok,simple}`
  br _526, ^526, ^280

526:
  %% compile_SUITE.erl:152
  %% Aliased:
  %%    _96
  _107 = call (`compile`:`file`/2), _96, `no_postopt`

  %% Aliased:
  %%    _107
  _281 = succeeded:body _107
  br _281, ^281, ^1

281:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _524 = bif:'=:=' _107, `{ok,simple}`
  br _524, ^524, ^283

524:
  %% compile_SUITE.erl:155
  %% Aliased:
  %%    _96
  _108 = call (`compile`:`file`/2), _96, `[dabstr]`

  %% Aliased:
  %%    _108
  _284 = succeeded:body _108
  br _284, ^284, ^1

284:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _522 = bif:'=:=' _108, `{ok,[]}`
  br _522, ^522, ^286

522:
  %% compile_SUITE.erl:156
  %% Aliased:
  %%    _95
  _15 = call (`filename`:`rootname`/1), _95

  %% Aliased:
  %%    _15
  _287 = succeeded:body _15
  br _287, ^287, ^1

287:
  %% compile_SUITE.erl:156
  %% Aliased:
  %%    _15
  _109 = call (`compile`:`file`/2), _15, `[from_abstr]`

  %% Aliased:
  %%    _109
  _288 = succeeded:body _109
  br _288, ^288, ^1

288:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _520 = bif:'=:=' _109, `{ok,simple}`
  br _520, ^520, ^290

520:
  %% compile_SUITE.erl:157
  %% Aliased:
  %%    _95
  _17 = call (`filename`:`rootname`/1), _95

  %% Aliased:
  %%    _17
  _291 = succeeded:body _17
  br _291, ^291, ^1

291:
  %% compile_SUITE.erl:157
  %% Aliased:
  %%    _17
  _18 = call (`erlang`:`'++'`/2), _17, `".abstr"`

  %% Aliased:
  %%    _18
  _292 = succeeded:body _18
  br _292, ^292, ^1

292:
  %% compile_SUITE.erl:157
  %% Aliased:
  %%    _18
  _110 = call (`file`:`delete`/1), _18

  %% Aliased:
  %%    _110
  _293 = succeeded:body _110
  br _293, ^293, ^1

293:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _518 = bif:'=:=' _110, `ok`
  br _518, ^517, ^295

517:
  %% compile_SUITE.erl:160
  %% Aliased:
  %%    _96
  _111 = call (`compile`:`file`/2), _96, `[deterministic]`

  %% Aliased:
  %%    _111
  _296 = succeeded:body _111
  br _296, ^296, ^1

296:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _515 = bif:'=:=' _111, `{ok,simple}`
  br _515, ^515, ^298

515:
  %% compile_SUITE.erl:161
  _112 = call (`c`:`l`/1), `simple`

  %% Aliased:
  %%    _112
  _299 = succeeded:body _112
  br _299, ^299, ^1

299:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _513 = bif:'=:=' _112, `{module,simple}`
  br _513, ^513, ^301

513:
  %% compile_SUITE.erl:162
  _113 = call (`simple`:`module_info`/1), `compile`

  %% Aliased:
  %%    _113
  _302 = succeeded:body _113
  br _302, ^302, ^1

302:
  %% Aliased:
  %%    _113
  _511 = is_nonempty_list _113
  br _511, ^511, ^304

511:
  %% Argument types:
  %%    _113 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _113
  _115 = get_hd _113

  %% Argument types:
  %%    _113 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _113
  _114 = get_tl _113

  %% Argument types:
  %%    
  %% Aliased:
  %%    _115
  _508 = is_tagged_tuple _115, `2`, `version`
  br _508, ^505, ^304

505:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _504 = bif:'=:=' _114, `[]`
  br _504, ^504, ^304

504:
  %% compile_SUITE.erl:163
  _118 = call (`code`:`delete`/1), `simple`

  %% Aliased:
  %%    _118
  _305 = succeeded:body _118
  br _305, ^305, ^1

305:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _502 = bif:'=:=' _118, `true`
  br _502, ^501, ^307

501:
  %% compile_SUITE.erl:164
  _119 = call (`code`:`purge`/1), `simple`

  %% Aliased:
  %%    _119
  _308 = succeeded:body _119
  br _308, ^308, ^1

308:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _499 = bif:'=:=' _119, `false`
  br _499, ^498, ^310

498:
  %% Argument types:
  %%    _97 => {'ok', any()}
  %% Aliased:
  %%    _97
  _98 = get_tuple_element _97, `1`

  %% compile_SUITE.erl:166
  %% Aliased:
  %%    _98
  _120 = call (`file`:`set_cwd`/1), _98

  %% Aliased:
  %%    _120
  _311 = succeeded:body _120
  br _311, ^311, ^1

311:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _496 = bif:'=:=' _120, `ok`
  br _496, ^495, ^313

495:
  %% compile_SUITE.erl:167
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _95
  _121 = call (`exists`/1), _95

  %% Unique:
  %%    _121
  _314 = succeeded:body _121
  br _314, ^314, ^1

314:
  br _121, ^492, ^316

492:
  %% compile_SUITE.erl:168
  %% Aliased:
  %%    _95
  _122 = call (`run`/3), _95, `test`, `[]`

  %% Aliased:
  %%    _122
  _317 = succeeded:body _122
  br _317, ^317, ^1

317:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _490 = bif:'=:=' _122, `passed`
  br _490, ^489, ^319

489:
  %% compile_SUITE.erl:172
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _123 = call (`get_files`/3), _0, `deterministic_module`, `"det_target"`

  %% Aliased:
  %%    _123
  _320 = succeeded:body _123
  br _320, ^484, ^1

484:
  %% Argument types:
  %%    _123 => {any(), any()}
  %% Aliased:
  %%    _123
  _125 = get_tuple_element _123, `0`

  %% Argument types:
  %%    _123 => {any(), any()}
  %% Aliased:
  %%    _123
  _124 = get_tuple_element _123, `1`

  %% compile_SUITE.erl:173
  %% Aliased:
  %%    _125
  _126 = call (`compile`:`file`/2), _125, `[binary]`

  %% Aliased:
  %%    _126
  _323 = succeeded:body _126
  br _323, ^323, ^1

323:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _126
  _480 = is_tagged_tuple _126, `3`, `ok`
  br _480, ^477, ^325

477:
  %% Argument types:
  %%    _126 => {'ok', any(), any()}
  %% Aliased:
  %%    _126
  _128 = get_tuple_element _126, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _128
  _326 = bif:'=:=' _128, `deterministic_module`
  br _326, ^326, ^325

326:
  %% Argument types:
  %%    _126 => {'ok', 'deterministic_module', any()}
  %% Aliased:
  %%    _126
  _127 = get_tuple_element _126, `2`

  %% compile_SUITE.erl:174
  %% Aliased:
  %%    _127
  _130 = call (`code`:`load_binary`/3), `deterministic_module`, `[]`, _127

  %% Aliased:
  %%    _130
  _327 = succeeded:body _130
  br _327, ^327, ^1

327:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _473 = is_tagged_tuple _130, `2`, `module`
  br _473, ^470, ^329

470:
  %% Argument types:
  %%    _130 => {'module', any()}
  %% Aliased:
  %%    _130
  _131 = get_tuple_element _130, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _330 = bif:'=:=' _131, `deterministic_module`
  br _330, ^330, ^329

330:
  %% compile_SUITE.erl:175
  _133 = call (`deterministic_module`:`module_info`/1), `compile`

  %% Aliased:
  %%    _133
  _331 = succeeded:body _133
  br _331, ^331, ^1

331:
  %% Aliased:
  %%    _133
  _468 = is_nonempty_list _133
  br _468, ^468, ^333

468:
  %% Argument types:
  %%    _133 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _133
  _135 = get_hd _133

  %% Argument types:
  %%    _133 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _133
  _134 = get_tl _133

  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _465 = is_tagged_tuple _135, `2`, `version`
  br _465, ^462, ^333

462:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _134
  _461 = bif:'=:=' _134, `[]`
  br _461, ^461, ^333

461:
  %% compile_SUITE.erl:176
  _138 = call (`code`:`delete`/1), `deterministic_module`

  %% Aliased:
  %%    _138
  _334 = succeeded:body _138
  br _334, ^334, ^1

334:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _138
  _459 = bif:'=:=' _138, `true`
  br _459, ^458, ^336

458:
  %% compile_SUITE.erl:177
  _139 = call (`code`:`purge`/1), `deterministic_module`

  %% Aliased:
  %%    _139
  _337 = succeeded:body _139
  br _337, ^337, ^1

337:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _456 = bif:'=:=' _139, `false`
  br _456, ^455, ^339

455:
  %% compile_SUITE.erl:181
  _140 = call (`compile`:`file`/2), `definitely__no__such__module`, `[report]`

  %% Aliased:
  %%    _140
  _340 = succeeded:body _140
  br _340, ^340, ^1

340:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _140
  _453 = bif:'=:=' _140, `error`
  br _453, ^452, ^342

452:
  %% compile_SUITE.erl:182
  _141 = call (`compile`:`file`/2), `definitely__no__such__module`, `[from_abstr,report]`

  %% Aliased:
  %%    _141
  _343 = succeeded:body _141
  br _343, ^343, ^1

343:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _450 = bif:'=:=' _141, `error`
  br _450, ^449, ^345

449:
  %% compile_SUITE.erl:183
  _142 = call (`compile`:`file`/2), `definitely__no__such__module`, `[from_core,report]`

  %% Aliased:
  %%    _142
  _346 = succeeded:body _142
  br _346, ^346, ^1

346:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _142
  _447 = bif:'=:=' _142, `error`
  br _447, ^446, ^348

446:
  %% compile_SUITE.erl:184
  _143 = call (`compile`:`file`/2), `definitely__no__such__module`, `[from_asm,report]`

  %% Aliased:
  %%    _143
  _349 = succeeded:body _143
  br _349, ^349, ^1

349:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _444 = bif:'=:=' _143, `error`
  br _444, ^443, ^351

443:
  %% compile_SUITE.erl:186
  %% Aliased:
  %%    DataDir
  _40 = call (`filename`:`join`/2), DataDir, `"bad_core"`

  %% Aliased:
  %%    _40
  _352 = succeeded:body _40
  br _352, ^352, ^1

352:
  %% compile_SUITE.erl:186
  %% Aliased:
  %%    _40
  _144 = call (`compile`:`file`/2), _40, `[from_core,report]`

  %% Aliased:
  %%    _144
  _353 = succeeded:body _144
  br _353, ^353, ^1

353:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _144
  _441 = bif:'=:=' _144, `error`
  br _441, ^440, ^355

440:
  %% compile_SUITE.erl:187
  %% Aliased:
  %%    DataDir
  _42 = call (`filename`:`join`/2), DataDir, `"bad_core_tokens"`

  %% Aliased:
  %%    _42
  _356 = succeeded:body _42
  br _356, ^356, ^1

356:
  %% compile_SUITE.erl:187
  %% Aliased:
  %%    _42
  _145 = call (`compile`:`file`/2), _42, `[from_core,report]`

  %% Aliased:
  %%    _145
  _357 = succeeded:body _145
  br _357, ^357, ^1

357:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _438 = bif:'=:=' _145, `error`
  br _438, ^437, ^359

437:
  %% compile_SUITE.erl:199
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _96
  _189 = call (`'-file_1/1-lc$^0/1-0-'`/2), `[r18,r19,r20,r21,r22,r23,no_bsm3,no_get_hd_tl,no_put_tuple2,no_utf8_atoms,
  no_swap,no_init_yregs,no_shared_fun_wrappers,no_make_fun3]`, _96

  %% Unique:
  %%    _189
  _360 = succeeded:body _189
  br _360, ^360, ^1

360:
  %% compile_SUITE.erl:203
  %% Aliased:
  %%    DataDir
  _168 = call (`filename`:`join`/2), DataDir, `"simple"`

  %% Aliased:
  %%    _168
  _361 = succeeded:body _168
  br _361, ^361, ^1

361:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96, 
  %%    _168
  _364 = bif:'=:=' _168, _96
  br _364, ^364, ^363

364:
  %% compile_SUITE.erl:204
  %% Aliased:
  %%    PrivDir
  SimpleTempFile = call (`filename`:`join`/2), PrivDir, `"simple.bea#"`

  %% Aliased:
  %%    SimpleTempFile
  _365 = succeeded:body SimpleTempFile
  br _365, ^365, ^1

365:
  %% compile_SUITE.erl:205
  %% Aliased:
  %%    PrivDir
  SimpleOutputFile = call (`filename`:`join`/2), PrivDir, `"simple.beam"`

  %% Aliased:
  %%    SimpleOutputFile
  _366 = succeeded:body SimpleOutputFile
  br _366, ^366, ^1

366:
  %% compile_SUITE.erl:206
  %% Aliased:
  %%    SimpleTempFile
  _169 = call (`file`:`make_dir`/1), SimpleTempFile

  %% Aliased:
  %%    _169
  _367 = succeeded:body _169
  br _367, ^367, ^1

367:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _169
  _434 = bif:'=:=' _169, `ok`
  br _434, ^433, ^369

433:
  %% compile_SUITE.erl:207
  %% Aliased:
  %%    SimpleOutputFile
  _170 = call (`file`:`make_dir`/1), SimpleOutputFile

  %% Aliased:
  %%    _170
  _370 = succeeded:body _170
  br _370, ^370, ^1

370:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _170
  _431 = bif:'=:=' _170, `ok`
  br _431, ^430, ^372

430:
  %% Argument types:
  %%    
  %% Aliased:
  %%    PrivDir
  _171 = put_tuple `outdir`, PrivDir

  %% Argument types:
  %%    _171 => {'outdir', any()}
  %% Unique:
  %%    _171
  _172 = put_list _171, `[report]`
  _377 = new_try_tag `'try'`
  br _377, ^556, ^374

556:
  %% compile_SUITE.erl:209
  %% Aliased:
  %%    _96
  %% Unique:
  %%    _172
  _173 = call (`compile`:`file`/2), _96, _172

  %% Aliased:
  %%    _173
  _378 = succeeded:body _173
  br _378, ^378, ^374

378:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _173
  _389 = bif:'=:=' _173, `error`
  br _389, ^388, ^380

388:
  %% compile_SUITE.erl:210
  %% Aliased:
  %%    SimpleTempFile
  _192 = call (`file`:`del_dir`/1), SimpleTempFile

  %% Aliased:
  %%    _192
  _381 = succeeded:body _192
  br _381, ^381, ^374

381:
  %% Argument types:
  %%    
  %% Aliased:
  %%    PrivDir
  _174 = put_tuple `outdir`, PrivDir

  %% Argument types:
  %%    _174 => {'outdir', any()}
  %% Unique:
  %%    _174
  _175 = put_list _174, `[report]`

  %% compile_SUITE.erl:211
  %% Aliased:
  %%    _96
  %% Unique:
  %%    _175
  _84 = call (`compile`:`file`/2), _96, _175

  %% Aliased:
  %%    _84
  _382 = succeeded:body _84
  br _382, ^382, ^374

382:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _386 = bif:'=:=' _84, `error`
  br _386, ^379, ^384

379:
  %% Unique:
  %%    _377
  _398 = kill_try_tag _377

  %% compile_SUITE.erl:213
  %% Aliased:
  %%    SimpleTempFile
  _196 = call (`file`:`del_dir`/1), SimpleTempFile

  %% Aliased:
  %%    _196
  _391 = succeeded:body _196
  br _391, ^391, ^1

391:
  %% compile_SUITE.erl:214
  %% Aliased:
  %%    SimpleOutputFile
  _197 = call (`file`:`del_dir`/1), SimpleOutputFile

  %% Aliased:
  %%    _197
  _392 = succeeded:body _197
  br _392, ^375, ^1

375:
  %% compile_SUITE.erl:218
  %% Aliased:
  %%    _95
  _176 = call (`file`:`delete`/1), _95

  %% Aliased:
  %%    _176
  _399 = succeeded:body _176
  br _399, ^399, ^1

399:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _176
  _428 = bif:'=:=' _176, `ok`
  br _428, ^427, ^401

427:
  %% compile_SUITE.erl:219
  %% Aliased:
  %%    _95
  _72 = call (`filename`:`dirname`/1), _95

  %% Aliased:
  %%    _72
  _402 = succeeded:body _72
  br _402, ^402, ^1

402:
  %% compile_SUITE.erl:219
  %% Aliased:
  %%    _72
  _177 = call (`file`:`del_dir`/1), _72

  %% Aliased:
  %%    _177
  _403 = succeeded:body _177
  br _403, ^403, ^1

403:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _177
  _425 = bif:'=:=' _177, `ok`
  br _425, ^424, ^405

424:
  %% compile_SUITE.erl:220
  %% Aliased:
  %%    _124
  _74 = call (`filename`:`dirname`/1), _124

  %% Aliased:
  %%    _74
  _406 = succeeded:body _74
  br _406, ^406, ^1

406:
  %% compile_SUITE.erl:220
  %% Aliased:
  %%    _74
  _178 = call (`file`:`del_dir`/1), _74

  %% Aliased:
  %%    _178
  _407 = succeeded:body _178
  br _407, ^407, ^1

407:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _178
  _422 = bif:'=:=' _178, `ok`
  br _422, ^421, ^409

421:
  br ^179

179:
  %% compile_SUITE.erl:223
  _91 = peek_message `none`

  %% Aliased:
  %%    _91
  _420 = succeeded:guard _91
  br _420, ^418, ^419

418:
  _201 = remove_message

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _180 = put_tuple `unexpected`, _91

  %% compile_SUITE.erl:225
  %% Unique:
  %%    _180
  _202 = call (`ct`:`fail`/1), _180

  %% Aliased:
  %%    _202
  _417 = succeeded:body _202
  br _417, ^411, ^1

419:
  _412 = wait_timeout `10`

  %% Unique:
  %%    _412
  _413 = succeeded:body _412
  br _413, ^413, ^1

413:
  br _412, ^411, ^416

411:
  %% Result type:
  %%    'ok'
  ret `ok`

416:
  br ^179

409:
  %% compile_SUITE.erl:220
  %% Aliased:
  %%    _178
  _203 = match_fail `badmatch`, _178

  %% Unique:
  %%    _203
  _423 = succeeded:body _203
  br ^1

405:
  %% compile_SUITE.erl:219
  %% Aliased:
  %%    _177
  _204 = match_fail `badmatch`, _177

  %% Unique:
  %%    _204
  _426 = succeeded:body _204
  br ^1

401:
  %% compile_SUITE.erl:218
  %% Aliased:
  %%    _176
  _205 = match_fail `badmatch`, _176

  %% Unique:
  %%    _205
  _429 = succeeded:body _205
  br ^1

384:
  %% compile_SUITE.erl:211
  %% Aliased:
  %%    _84
  _194 = match_fail `badmatch`, _84

  %% Unique:
  %%    _194
  _387 = succeeded:body _194
  br ^374

380:
  %% compile_SUITE.erl:209
  %% Aliased:
  %%    _173
  _195 = match_fail `badmatch`, _173

  %% Unique:
  %%    _195
  _390 = succeeded:body _195
  br ^374

374:
  %% Unique:
  %%    _377
  _396 = landingpad `'try'`, _377

  %% Aliased:
  %%    _396
  _69 = extract _396, `1`

  %% Aliased:
  %%    _396
  _68 = extract _396, `2`

  %% Unique:
  %%    _377
  _397 = kill_try_tag _377
  br ^559

559:
  %% compile_SUITE.erl:213
  %% Aliased:
  %%    SimpleTempFile
  _198 = call (`file`:`del_dir`/1), SimpleTempFile

  %% Aliased:
  %%    _198
  _393 = succeeded:body _198
  br _393, ^393, ^1

393:
  %% compile_SUITE.erl:214
  %% Aliased:
  %%    SimpleOutputFile
  _199 = call (`file`:`del_dir`/1), SimpleOutputFile

  %% Aliased:
  %%    _199
  _394 = succeeded:body _199
  br _394, ^394, ^1

394:
  %% Aliased:
  %%    _68, 
  %%    _69
  _200 = resume _68, _69

  %% Unique:
  %%    _200
  _395 = succeeded:body _200
  br ^1

372:
  %% compile_SUITE.erl:207
  %% Aliased:
  %%    _170
  _206 = match_fail `badmatch`, _170

  %% Unique:
  %%    _206
  _432 = succeeded:body _206
  br ^1

369:
  %% compile_SUITE.erl:206
  %% Aliased:
  %%    _169
  _207 = match_fail `badmatch`, _169

  %% Unique:
  %%    _207
  _435 = succeeded:body _207
  br ^1

363:
  %% compile_SUITE.erl:203
  %% Aliased:
  %%    _168
  _208 = match_fail `badmatch`, _168

  %% Unique:
  %%    _208
  _436 = succeeded:body _208
  br ^1

359:
  %% compile_SUITE.erl:187
  %% Aliased:
  %%    _145
  _209 = match_fail `badmatch`, _145

  %% Unique:
  %%    _209
  _439 = succeeded:body _209
  br ^1

355:
  %% compile_SUITE.erl:186
  %% Aliased:
  %%    _144
  _210 = match_fail `badmatch`, _144

  %% Unique:
  %%    _210
  _442 = succeeded:body _210
  br ^1

351:
  %% compile_SUITE.erl:184
  %% Aliased:
  %%    _143
  _211 = match_fail `badmatch`, _143

  %% Unique:
  %%    _211
  _445 = succeeded:body _211
  br ^1

348:
  %% compile_SUITE.erl:183
  %% Aliased:
  %%    _142
  _212 = match_fail `badmatch`, _142

  %% Unique:
  %%    _212
  _448 = succeeded:body _212
  br ^1

345:
  %% compile_SUITE.erl:182
  %% Aliased:
  %%    _141
  _213 = match_fail `badmatch`, _141

  %% Unique:
  %%    _213
  _451 = succeeded:body _213
  br ^1

342:
  %% compile_SUITE.erl:181
  %% Aliased:
  %%    _140
  _214 = match_fail `badmatch`, _140

  %% Unique:
  %%    _214
  _454 = succeeded:body _214
  br ^1

339:
  %% compile_SUITE.erl:177
  %% Aliased:
  %%    _139
  _215 = match_fail `badmatch`, _139

  %% Unique:
  %%    _215
  _457 = succeeded:body _215
  br ^1

336:
  %% compile_SUITE.erl:176
  %% Aliased:
  %%    _138
  _216 = match_fail `badmatch`, _138

  %% Unique:
  %%    _216
  _460 = succeeded:body _216
  br ^1

333:
  %% compile_SUITE.erl:175
  %% Aliased:
  %%    _133
  _217 = match_fail `badmatch`, _133

  %% Unique:
  %%    _217
  _469 = succeeded:body _217
  br ^1

329:
  %% compile_SUITE.erl:174
  %% Aliased:
  %%    _130
  _218 = match_fail `badmatch`, _130

  %% Unique:
  %%    _218
  _476 = succeeded:body _218
  br ^1

325:
  %% compile_SUITE.erl:173
  %% Aliased:
  %%    _126
  _219 = match_fail `badmatch`, _126

  %% Unique:
  %%    _219
  _483 = succeeded:body _219
  br ^1

319:
  %% compile_SUITE.erl:168
  %% Aliased:
  %%    _122
  _221 = match_fail `badmatch`, _122

  %% Unique:
  %%    _221
  _491 = succeeded:body _221
  br ^1

316:
  %% compile_SUITE.erl:167
  _222 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _222
  _494 = succeeded:body _222
  br ^1

313:
  %% compile_SUITE.erl:166
  %% Aliased:
  %%    _120
  _223 = match_fail `badmatch`, _120

  %% Unique:
  %%    _223
  _497 = succeeded:body _223
  br ^1

310:
  %% compile_SUITE.erl:164
  %% Aliased:
  %%    _119
  _224 = match_fail `badmatch`, _119

  %% Unique:
  %%    _224
  _500 = succeeded:body _224
  br ^1

307:
  %% compile_SUITE.erl:163
  %% Aliased:
  %%    _118
  _225 = match_fail `badmatch`, _118

  %% Unique:
  %%    _225
  _503 = succeeded:body _225
  br ^1

304:
  %% compile_SUITE.erl:162
  %% Aliased:
  %%    _113
  _226 = match_fail `badmatch`, _113

  %% Unique:
  %%    _226
  _512 = succeeded:body _226
  br ^1

301:
  %% compile_SUITE.erl:161
  %% Aliased:
  %%    _112
  _227 = match_fail `badmatch`, _112

  %% Unique:
  %%    _227
  _514 = succeeded:body _227
  br ^1

298:
  %% compile_SUITE.erl:160
  %% Aliased:
  %%    _111
  _228 = match_fail `badmatch`, _111

  %% Unique:
  %%    _228
  _516 = succeeded:body _228
  br ^1

295:
  %% compile_SUITE.erl:157
  %% Aliased:
  %%    _110
  _229 = match_fail `badmatch`, _110

  %% Unique:
  %%    _229
  _519 = succeeded:body _229
  br ^1

290:
  %% compile_SUITE.erl:156
  %% Aliased:
  %%    _109
  _230 = match_fail `badmatch`, _109

  %% Unique:
  %%    _230
  _521 = succeeded:body _230
  br ^1

286:
  %% compile_SUITE.erl:155
  %% Aliased:
  %%    _108
  _231 = match_fail `badmatch`, _108

  %% Unique:
  %%    _231
  _523 = succeeded:body _231
  br ^1

283:
  %% compile_SUITE.erl:152
  %% Aliased:
  %%    _107
  _232 = match_fail `badmatch`, _107

  %% Unique:
  %%    _232
  _525 = succeeded:body _232
  br ^1

280:
  %% compile_SUITE.erl:149
  %% Aliased:
  %%    _106
  _233 = match_fail `badmatch`, _106

  %% Unique:
  %%    _233
  _527 = succeeded:body _233
  br ^1

277:
  %% compile_SUITE.erl:148
  %% Aliased:
  %%    _105
  _234 = match_fail `badmatch`, _105

  %% Unique:
  %%    _234
  _529 = succeeded:body _234
  br ^1

274:
  %% compile_SUITE.erl:147
  %% Aliased:
  %%    _104
  _235 = match_fail `badmatch`, _104

  %% Unique:
  %%    _235
  _531 = succeeded:body _235
  br ^1

271:
  %% compile_SUITE.erl:146
  %% Aliased:
  %%    _103
  _236 = match_fail `badmatch`, _103

  %% Unique:
  %%    _236
  _533 = succeeded:body _236
  br ^1

265:
  %% compile_SUITE.erl:140
  %% Aliased:
  %%    _102
  _237 = match_fail `badmatch`, _102

  %% Unique:
  %%    _237
  _535 = succeeded:body _237
  br ^1

262:
  %% compile_SUITE.erl:139
  %% Aliased:
  %%    _101
  _238 = match_fail `badmatch`, _101

  %% Unique:
  %%    _238
  _537 = succeeded:body _238
  br ^1

259:
  %% compile_SUITE.erl:137
  %% Aliased:
  %%    _100
  _239 = match_fail `badmatch`, _100

  %% Unique:
  %%    _239
  _540 = succeeded:body _239
  br ^1

255:
  %% compile_SUITE.erl:136
  %% Aliased:
  %%    _97
  _240 = match_fail `badmatch`, _97

  %% Unique:
  %%    _240
  _547 = succeeded:body _240
  br ^1

245:
  %% compile_SUITE.erl:129
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-file_1/1-',1}}
  _242 = match_fail `function_clause`, _0

  %% Unique:
  %%    _242
  _553 = succeeded:body _242
  br ^1

1:
  _243 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _243
}

%% compile_SUITE.erl:232
%% Counter = 288
%% bs_ensure_opt: true
function `compile_SUITE`:`forms_2`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _113 = bif:is_list _0
  br _113, ^113, ^112

113:
  %% compile_SUITE.erl:233
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _33 = call (`get_files`/3), _0, `simple`, `"file_1"`

  %% Aliased:
  %%    _33
  _114 = succeeded:body _33
  br _114, ^278, ^1

278:
  %% Argument types:
  %%    _33 => {any(), any()}
  %% Aliased:
  %%    _33
  _35 = get_tuple_element _33, `0`

  %% Argument types:
  %%    _33 => {any(), any()}
  %% Aliased:
  %%    _33
  _34 = get_tuple_element _33, `1`

  %% compile_SUITE.erl:234
  %% Aliased:
  %%    _34
  _2 = call (`filename`:`dirname`/1), _34

  %% Aliased:
  %%    _2
  _117 = succeeded:body _2
  br _117, ^117, ^1

117:
  %% compile_SUITE.erl:234
  %% Aliased:
  %%    _2
  _36 = call (`file`:`del_dir`/1), _2

  %% Aliased:
  %%    _36
  _118 = succeeded:body _36
  br _118, ^118, ^1

118:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _276 = bif:'=:=' _36, `ok`
  br _276, ^275, ^120

275:
  %% compile_SUITE.erl:237
  %% Aliased:
  %%    _35
  AbsSrc = call (`filename`:`absname`/1), _35

  %% Aliased:
  %%    AbsSrc
  _121 = succeeded:body AbsSrc
  br _121, ^121, ^1

121:
  %% compile_SUITE.erl:238
  %% Aliased:
  %%    _35
  _37 = call (`compile`:`file`/2), _35, `[dabstr,binary]`

  %% Aliased:
  %%    _37
  _122 = succeeded:body _37
  br _122, ^122, ^1

122:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _271 = is_tagged_tuple _37, `3`, `ok`
  br _271, ^268, ^124

268:
  %% Argument types:
  %%    _37 => {'ok', any(), any()}
  %% Aliased:
  %%    _37
  _39 = get_tuple_element _37, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _267 = bif:'=:=' _39, `[]`
  br _267, ^267, ^124

267:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _41 = put_tuple `source`, _35

  %% Argument types:
  %%    _41 => {'source', any()}
  %% Unique:
  %%    _41
  _42 = put_list _41, `[]`

  %% Argument types:
  %%    _42 => nonempty_list({'source', any()})
  %% Unique:
  %%    _42
  _43 = put_list `binary`, _42

  %% Argument types:
  %%    _37 => {'ok', nil(), any()}
  %% Aliased:
  %%    _37
  _38 = get_tuple_element _37, `2`

  %% compile_SUITE.erl:240
  %% Aliased:
  %%    _38
  %% Unique:
  %%    _43
  _44 = call (`compile`:`forms`/2), _38, _43

  %% Aliased:
  %%    _44
  _125 = succeeded:body _44
  br _125, ^125, ^1

125:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _263 = is_tagged_tuple _44, `3`, `ok`
  br _263, ^262, ^127

262:
  %% Argument types:
  %%    _44 => {'ok', any(), any()}
  %% Aliased:
  %%    _44
  _46 = get_tuple_element _44, `1`

  %% Argument types:
  %%    _44 => {'ok', any(), any()}
  %% Aliased:
  %%    _44
  _45 = get_tuple_element _44, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _259 = bif:'=:=' _46, `simple`
  br _259, ^258, ^127

258:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _48 = put_tuple `source`, _35

  %% Argument types:
  %%    _48 => {'source', any()}
  %% Unique:
  %%    _48
  _49 = put_list _48, `[]`

  %% Argument types:
  %%    _49 => nonempty_list({'source', any()})
  %% Unique:
  %%    _49
  _50 = put_list `{error_location,line}`, _49

  %% Argument types:
  %%    _50 => nonempty_list({'error_location', 'line'} | {'source', any()})
  %% Unique:
  %%    _50
  _51 = put_list `binary`, _50

  %% compile_SUITE.erl:241
  %% Aliased:
  %%    _38
  %% Unique:
  %%    _51
  _52 = call (`compile`:`forms`/2), _38, _51

  %% Aliased:
  %%    _52
  _128 = succeeded:body _52
  br _128, ^128, ^1

128:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _254 = is_tagged_tuple _52, `3`, `ok`
  br _254, ^251, ^130

251:
  %% Argument types:
  %%    _52 => {'ok', any(), any()}
  %% Aliased:
  %%    _52
  _54 = get_tuple_element _52, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _250 = bif:'=:=' _54, `simple`
  br _250, ^249, ^130

249:
  %% compile_SUITE.erl:245
  %% Aliased:
  %%    _38
  _56 = call (`compile`:`forms`/2), _38, `no_postopt`

  %% Aliased:
  %%    _56
  _131 = succeeded:body _56
  br _131, ^131, ^1

131:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _245 = is_tagged_tuple _56, `3`, `ok`
  br _245, ^242, ^133

242:
  %% Argument types:
  %%    _56 => {'ok', any(), any()}
  %% Aliased:
  %%    _56
  _58 = get_tuple_element _56, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _241 = bif:'=:=' _58, `simple`
  br _241, ^240, ^133

240:
  %% compile_SUITE.erl:248
  %% Aliased:
  %%    _35, 
  %%    _45
  _60 = call (`forms_load_code`/3), `simple`, _35, _45

  %% Aliased:
  %%    _60
  _134 = succeeded:body _60
  br _134, ^134, ^1

134:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _60, 
  %%    AbsSrc
  _137 = bif:'=:=' _60, AbsSrc
  br _137, ^137, ^136

137:
  %% compile_SUITE.erl:251
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _138 = succeeded:body PrivDir
  br _138, ^138, ^1

138:
  %% compile_SUITE.erl:252
  %% Aliased:
  %%    PrivDir
  WorkDir = call (`filename`:`join`/2), PrivDir, `forms_2`

  %% Aliased:
  %%    WorkDir
  _139 = succeeded:body WorkDir
  br _139, ^139, ^1

139:
  %% compile_SUITE.erl:253
  %% Aliased:
  %%    WorkDir
  _61 = call (`file`:`make_dir`/1), WorkDir

  %% Aliased:
  %%    _61
  _140 = succeeded:body _61
  br _140, ^140, ^1

140:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _237 = bif:'=:=' _61, `ok`
  br _237, ^236, ^142

236:
  %% compile_SUITE.erl:254
  %% Aliased:
  %%    WorkDir
  _62 = call (`file`:`set_cwd`/1), WorkDir

  %% Aliased:
  %%    _62
  _143 = succeeded:body _62
  br _143, ^143, ^1

143:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _234 = bif:'=:=' _62, `ok`
  br _234, ^233, ^145

233:
  %% compile_SUITE.erl:255
  _63 = call (`os`:`type`/0)

  %% Aliased:
  %%    _63
  _146 = succeeded:body _63
  br _146, ^146, ^1

146:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _154 = is_tagged_tuple _63, `2`, `unix`
  br _154, ^151, ^147

151:
  %% compile_SUITE.erl:256
  %% Aliased:
  %%    WorkDir
  _15 = call (`erlang`:`'++'`/2), `"rm -rf "`, WorkDir

  %% compile_SUITE.erl:256
  %% Aliased:
  %%    _15
  _88 = call (`os`:`cmd`/1), _15

  %% Aliased:
  %%    _88
  _150 = succeeded:body _88
  br _150, ^147, ^1

147:
  %% compile_SUITE.erl:259
  %% Aliased:
  %%    _38
  _66 = call (`compile`:`forms`/1), _38

  %% Aliased:
  %%    _66
  _157 = succeeded:body _66
  br _157, ^157, ^1

157:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _229 = is_tagged_tuple _66, `3`, `ok`
  br _229, ^226, ^159

226:
  %% Argument types:
  %%    _66 => {'ok', any(), any()}
  %% Aliased:
  %%    _66
  _68 = get_tuple_element _66, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _225 = bif:'=:=' _68, `simple`
  br _225, ^224, ^159

224:
  %% Argument types:
  %%    _66 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _66
  _67 = get_tuple_element _66, `2`

  %% compile_SUITE.erl:260
  %% Aliased:
  %%    _67
  _70 = call (`forms_load_code`/3), `simple`, `"ignore"`, _67

  %% Aliased:
  %%    _70
  _160 = succeeded:body _70
  br _160, ^160, ^1

160:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _222 = bif:'=:=' _70, `undefined`
  br _222, ^221, ^162

221:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _71 = put_tuple `source`, _35

  %% Argument types:
  %%    _71 => {'source', any()}
  %% Unique:
  %%    _71
  _72 = put_list _71, `[report]`

  %% compile_SUITE.erl:262
  %% Aliased:
  %%    _38
  %% Unique:
  %%    _72
  _73 = call (`compile`:`forms`/2), _38, _72

  %% Aliased:
  %%    _73
  _163 = succeeded:body _73
  br _163, ^163, ^1

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _217 = is_tagged_tuple _73, `3`, `ok`
  br _217, ^214, ^165

214:
  %% Argument types:
  %%    _73 => {'ok', any(), any()}
  %% Aliased:
  %%    _73
  _75 = get_tuple_element _73, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _213 = bif:'=:=' _75, `simple`
  br _213, ^212, ^165

212:
  %% Argument types:
  %%    _73 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _73
  _74 = get_tuple_element _73, `2`

  %% compile_SUITE.erl:263
  %% Aliased:
  %%    _74
  _77 = call (`forms_load_code`/3), `simple`, `"ignore"`, _74

  %% Aliased:
  %%    _77
  _166 = succeeded:body _77
  br _166, ^166, ^1

166:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35, 
  %%    _77
  _170 = bif:'=:=' _77, _35
  br _170, ^167, ^169

169:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _77, 
  %%    AbsSrc
  _171 = bif:'=:=' _77, AbsSrc
  br _171, ^167, ^168

167:
  %% compile_SUITE.erl:270
  %% Aliased:
  %%    _38
  _78 = call (`compile`:`forms`/2), _38, `[to_core0,binary]`

  %% Aliased:
  %%    _78
  _173 = succeeded:body _78
  br _173, ^173, ^1

173:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _208 = is_tagged_tuple _78, `3`, `ok`
  br _208, ^205, ^175

205:
  %% Argument types:
  %%    _78 => {'ok', any(), any()}
  %% Aliased:
  %%    _78
  _80 = get_tuple_element _78, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _204 = bif:'=:=' _80, `simple`
  br _204, ^203, ^175

203:
  %% Argument types:
  %%    _78 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _78
  _79 = get_tuple_element _78, `2`

  %% compile_SUITE.erl:271
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _79
  _90 = call (`forms_compile_and_load`/2), _79, `[from_core]`

  %% Unique:
  %%    _90
  _176 = succeeded:body _90
  br _176, ^176, ^1

176:
  %% compile_SUITE.erl:273
  %% Aliased:
  %%    _38
  _82 = call (`compile`:`forms`/2), _38, `[to_asm,binary]`

  %% Aliased:
  %%    _82
  _177 = succeeded:body _82
  br _177, ^177, ^1

177:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _199 = is_tagged_tuple _82, `3`, `ok`
  br _199, ^196, ^179

196:
  %% Argument types:
  %%    _82 => {'ok', any(), any()}
  %% Aliased:
  %%    _82
  _84 = get_tuple_element _82, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _195 = bif:'=:=' _84, `simple`
  br _195, ^194, ^179

194:
  %% Argument types:
  %%    _82 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _82
  _83 = get_tuple_element _82, `2`

  %% compile_SUITE.erl:274
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _83
  _91 = call (`forms_compile_and_load`/2), _83, `[from_asm]`

  %% Unique:
  %%    _91
  _180 = succeeded:body _91
  br _180, ^180, ^1

180:
  %% compile_SUITE.erl:278
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _38
  _92 = call (`forms_compile_and_load`/2), _38, `[from_abstr]`

  %% Unique:
  %%    _92
  _181 = succeeded:body _92
  br _181, ^181, ^1

181:
  %% compile_SUITE.erl:281
  _86 = call (`compile`:`forms`/2), `bad_core`, `[from_core,report]`

  %% Aliased:
  %%    _86
  _182 = succeeded:body _86
  br _182, ^182, ^1

182:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _192 = bif:'=:=' _86, `error`
  br _192, ^191, ^184

191:
  %% compile_SUITE.erl:282
  _87 = call (`compile`:`forms`/2), `bad_asm`, `[from_asm,report]`

  %% Aliased:
  %%    _87
  _185 = succeeded:body _87
  br _185, ^185, ^1

185:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _189 = bif:'=:=' _87, `error`
  br _189, ^188, ^187

188:
  %% Result type:
  %%    'ok'
  ret `ok`

187:
  %% compile_SUITE.erl:282
  %% Aliased:
  %%    _87
  _93 = match_fail `badmatch`, _87

  %% Unique:
  %%    _93
  _190 = succeeded:body _93
  br ^1

184:
  %% compile_SUITE.erl:281
  %% Aliased:
  %%    _86
  _94 = match_fail `badmatch`, _86

  %% Unique:
  %%    _94
  _193 = succeeded:body _94
  br ^1

179:
  %% compile_SUITE.erl:273
  %% Aliased:
  %%    _82
  _95 = match_fail `badmatch`, _82

  %% Unique:
  %%    _95
  _202 = succeeded:body _95
  br ^1

175:
  %% compile_SUITE.erl:270
  %% Aliased:
  %%    _78
  _96 = match_fail `badmatch`, _78

  %% Unique:
  %%    _96
  _211 = succeeded:body _96
  br ^1

168:
  %% compile_SUITE.erl:263
  %% Aliased:
  %%    _77
  _89 = match_fail `case_clause`, _77

  %% Unique:
  %%    _89
  _172 = succeeded:body _89
  br ^1

165:
  %% compile_SUITE.erl:262
  %% Aliased:
  %%    _73
  _97 = match_fail `badmatch`, _73

  %% Unique:
  %%    _97
  _220 = succeeded:body _97
  br ^1

162:
  %% compile_SUITE.erl:260
  %% Aliased:
  %%    _70
  _98 = match_fail `badmatch`, _70

  %% Unique:
  %%    _98
  _223 = succeeded:body _98
  br ^1

159:
  %% compile_SUITE.erl:259
  %% Aliased:
  %%    _66
  _99 = match_fail `badmatch`, _66

  %% Unique:
  %%    _99
  _232 = succeeded:body _99
  br ^1

145:
  %% compile_SUITE.erl:254
  %% Aliased:
  %%    _62
  _100 = match_fail `badmatch`, _62

  %% Unique:
  %%    _100
  _235 = succeeded:body _100
  br ^1

142:
  %% compile_SUITE.erl:253
  %% Aliased:
  %%    _61
  _101 = match_fail `badmatch`, _61

  %% Unique:
  %%    _101
  _238 = succeeded:body _101
  br ^1

136:
  %% compile_SUITE.erl:248
  %% Aliased:
  %%    _60
  _102 = match_fail `badmatch`, _60

  %% Unique:
  %%    _102
  _239 = succeeded:body _102
  br ^1

133:
  %% compile_SUITE.erl:245
  %% Aliased:
  %%    _56
  _103 = match_fail `badmatch`, _56

  %% Unique:
  %%    _103
  _248 = succeeded:body _103
  br ^1

130:
  %% compile_SUITE.erl:241
  %% Aliased:
  %%    _52
  _104 = match_fail `badmatch`, _52

  %% Unique:
  %%    _104
  _257 = succeeded:body _104
  br ^1

127:
  %% compile_SUITE.erl:240
  %% Aliased:
  %%    _44
  _105 = match_fail `badmatch`, _44

  %% Unique:
  %%    _105
  _266 = succeeded:body _105
  br ^1

124:
  %% compile_SUITE.erl:238
  %% Aliased:
  %%    _37
  _106 = match_fail `badmatch`, _37

  %% Unique:
  %%    _106
  _274 = succeeded:body _106
  br ^1

120:
  %% compile_SUITE.erl:234
  %% Aliased:
  %%    _36
  _107 = match_fail `badmatch`, _36

  %% Unique:
  %%    _107
  _277 = succeeded:body _107
  br ^1

112:
  %% compile_SUITE.erl:232
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-forms_2/1-',1}}
  _109 = match_fail `function_clause`, _0

  %% Unique:
  %%    _109
  _283 = succeeded:body _109
  br ^1

1:
  _110 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _110
}

%% compile_SUITE.erl:287
%% Counter = 55
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'simple'
function `compile_SUITE`:`forms_load_code`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:288
  %% Aliased:
  %%    _1, 
  %%    _2
  _13 = call (`code`:`load_binary`/3), _0, _1, _2

  %% Aliased:
  %%    _13
  _25 = succeeded:body _13
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _51 = is_tagged_tuple _13, `2`, `module`
  br _51, ^48, ^27

48:
  %% Argument types:
  %%    _13 => {'module', any()}
  %% Aliased:
  %%    _13
  _14 = get_tuple_element _13, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _28 = bif:'=:=' _14, `simple`
  br _28, ^28, ^27

28:
  %% compile_SUITE.erl:289
  Info = call (`simple`:`module_info`/1), `compile`

  %% Aliased:
  %%    Info
  _29 = succeeded:body Info
  br _29, ^29, ^1

29:
  %% compile_SUITE.erl:290
  %% Aliased:
  %%    Info
  SourceOption = call (`proplists`:`get_value`/2), `source`, Info

  %% Aliased:
  %%    SourceOption
  _30 = succeeded:body SourceOption
  br _30, ^30, ^1

30:
  %% compile_SUITE.erl:293
  %% Aliased:
  %%    Info
  _16 = call (`proplists`:`get_value`/2), `options`, Info

  %% Aliased:
  %%    _16
  _31 = succeeded:body _16
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _46 = bif:'=:=' _16, `[]`
  br _46, ^46, ^33

46:
  %% compile_SUITE.erl:296
  _17 = call (`code`:`delete`/1), `simple`

  %% Aliased:
  %%    _17
  _34 = succeeded:body _17
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _44 = bif:'=:=' _17, `true`
  br _44, ^43, ^36

43:
  %% compile_SUITE.erl:297
  _18 = call (`code`:`purge`/1), `simple`

  %% Aliased:
  %%    _18
  _37 = succeeded:body _18
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _41 = bif:'=:=' _18, `false`
  br _41, ^40, ^39

40:
  %% Aliased:
  %%    SourceOption
  ret SourceOption

39:
  %% compile_SUITE.erl:297
  %% Aliased:
  %%    _18
  _19 = match_fail `badmatch`, _18

  %% Unique:
  %%    _19
  _42 = succeeded:body _19
  br ^1

36:
  %% compile_SUITE.erl:296
  %% Aliased:
  %%    _17
  _20 = match_fail `badmatch`, _17

  %% Unique:
  %%    _20
  _45 = succeeded:body _20
  br ^1

33:
  %% compile_SUITE.erl:293
  %% Aliased:
  %%    _16
  _21 = match_fail `badmatch`, _16

  %% Unique:
  %%    _21
  _47 = succeeded:body _21
  br ^1

27:
  %% compile_SUITE.erl:288
  %% Aliased:
  %%    _13
  _22 = match_fail `badmatch`, _13

  %% Unique:
  %%    _22
  _54 = succeeded:body _22
  br ^1

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% compile_SUITE.erl:301
%% Counter = 63
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list('from_abstr' | 'from_asm' | 'from_core')
function `compile_SUITE`:`forms_compile_and_load`(_0, _1) {
0:
  %% compile_SUITE.erl:303
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  _12 = call (`compile`:`forms`/2), _0, _1

  %% Aliased:
  %%    _12
  _28 = succeeded:body _12
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _59 = is_tagged_tuple _12, `3`, `ok`
  br _59, ^56, ^30

56:
  %% Argument types:
  %%    _12 => {'ok', any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _31 = bif:'=:=' _14, `simple`
  br _31, ^31, ^30

31:
  %% Argument types:
  %%    _12 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `2`

  %% compile_SUITE.erl:304
  %% Aliased:
  %%    _13
  _16 = call (`code`:`load_binary`/3), `simple`, `"ignore"`, _13

  %% Aliased:
  %%    _16
  _32 = succeeded:body _16
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _52 = is_tagged_tuple _16, `2`, `module`
  br _52, ^49, ^34

49:
  %% Argument types:
  %%    _16 => {'module', any()}
  %% Aliased:
  %%    _16
  _17 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _35 = bif:'=:=' _17, `simple`
  br _35, ^35, ^34

35:
  %% compile_SUITE.erl:305
  _21 = call (`simple`:`module_info`/0)

  %% Aliased:
  %%    _21
  _36 = succeeded:body _21
  br _36, ^36, ^1

36:
  %% compile_SUITE.erl:306
  _19 = call (`code`:`delete`/1), `simple`

  %% Aliased:
  %%    _19
  _37 = succeeded:body _19
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _47 = bif:'=:=' _19, `true`
  br _47, ^46, ^39

46:
  %% compile_SUITE.erl:307
  _20 = call (`code`:`purge`/1), `simple`

  %% Aliased:
  %%    _20
  _40 = succeeded:body _20
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _44 = bif:'=:=' _20, `false`
  br _44, ^43, ^42

43:
  %% Result type:
  %%    'ok'
  ret `ok`

42:
  %% compile_SUITE.erl:307
  %% Aliased:
  %%    _20
  _22 = match_fail `badmatch`, _20

  %% Unique:
  %%    _22
  _45 = succeeded:body _22
  br ^1

39:
  %% compile_SUITE.erl:306
  %% Aliased:
  %%    _19
  _23 = match_fail `badmatch`, _19

  %% Unique:
  %%    _23
  _48 = succeeded:body _23
  br ^1

34:
  %% compile_SUITE.erl:304
  %% Aliased:
  %%    _16
  _24 = match_fail `badmatch`, _16

  %% Unique:
  %%    _24
  _55 = succeeded:body _24
  br ^1

30:
  %% compile_SUITE.erl:303
  %% Aliased:
  %%    _12
  _25 = match_fail `badmatch`, _12

  %% Unique:
  %%    _25
  _62 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% compile_SUITE.erl:310
%% Counter = 37
%% bs_ensure_opt: true
function `compile_SUITE`:`module_mismatch`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _17 = bif:is_list _0
  br _17, ^17, ^16

17:
  %% compile_SUITE.erl:311
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _18 = succeeded:body DataDir
  br _18, ^18, ^1

18:
  %% compile_SUITE.erl:312
  %% Aliased:
  %%    DataDir
  File = call (`filename`:`join`/2), DataDir, `"wrong_module_name.erl"`

  %% Aliased:
  %%    File
  _19 = succeeded:body File
  br _19, ^19, ^1

19:
  %% compile_SUITE.erl:315
  %% Aliased:
  %%    File
  _7 = call (`compile`:`file`/2), File, `[return]`

  %% Aliased:
  %%    _7
  _20 = succeeded:body _7
  br _20, ^20, ^1

20:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _34 = bif:'=:=' _7, `{error,[{"wrong_module_name.beam",
          [{none,compile,{module_name,arne,"wrong_module_name"}}]}],
        []}`
  br _34, ^34, ^22

34:
  %% compile_SUITE.erl:316
  %% Aliased:
  %%    File
  _8 = call (`compile`:`file`/2), File, `[report]`

  %% Aliased:
  %%    _8
  _23 = succeeded:body _8
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _32 = bif:'=:=' _8, `error`
  br _32, ^31, ^25

31:
  %% compile_SUITE.erl:318
  %% Aliased:
  %%    File
  _9 = call (`compile`:`file`/2), File, `[return,no_error_module_mismatch]`

  %% Aliased:
  %%    _9
  _26 = succeeded:body _9
  br _26, ^26, ^1

26:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _29 = bif:'=:=' _9, `{ok,arne,[]}`
  br _29, ^29, ^28

29:
  %% Result type:
  %%    'ok'
  ret `ok`

28:
  %% compile_SUITE.erl:318
  %% Aliased:
  %%    _9
  _10 = match_fail `badmatch`, _9

  %% Unique:
  %%    _10
  _30 = succeeded:body _10
  br ^1

25:
  %% compile_SUITE.erl:316
  %% Aliased:
  %%    _8
  _11 = match_fail `badmatch`, _8

  %% Unique:
  %%    _11
  _33 = succeeded:body _11
  br ^1

22:
  %% compile_SUITE.erl:313
  %% Aliased:
  %%    _7
  _12 = match_fail `badmatch`, _7

  %% Unique:
  %%    _12
  _35 = succeeded:body _12
  br ^1

16:
  %% compile_SUITE.erl:310
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-module_mismatch/1-',1}}
  _13 = match_fail `function_clause`, _0

  %% Unique:
  %%    _13
  _36 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% compile_SUITE.erl:325
%% Counter = 73
%% bs_ensure_opt: true
function `compile_SUITE`:`outdir`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _30 = bif:is_list _0
  br _30, ^30, ^29

30:
  %% compile_SUITE.erl:326
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _10 = call (`get_files`/3), _0, `simple`, `"outdir"`

  %% Aliased:
  %%    _10
  _31 = succeeded:body _10
  br _31, ^65, ^1

65:
  %% Argument types:
  %%    _10 => {any(), any()}
  %% Aliased:
  %%    _10
  _12 = get_tuple_element _10, `0`

  %% Argument types:
  %%    _10 => {any(), any()}
  %% Aliased:
  %%    _10
  _11 = get_tuple_element _10, `1`

  %% compile_SUITE.erl:327
  %% Aliased:
  %%    _11
  _2 = call (`filename`:`dirname`/1), _11

  %% Aliased:
  %%    _2
  _34 = succeeded:body _2
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _13 = put_tuple `outdir`, _2

  %% Argument types:
  %%    _13 => {'outdir', any()}
  %% Unique:
  %%    _13
  _14 = put_list _13, `[]`

  %% compile_SUITE.erl:327
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _14
  _15 = call (`compile`:`file`/2), _12, _14

  %% Aliased:
  %%    _15
  _35 = succeeded:body _15
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _63 = bif:'=:=' _15, `{ok,simple}`
  br _63, ^63, ^37

63:
  %% compile_SUITE.erl:328
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _11
  _16 = call (`exists`/1), _11

  %% Unique:
  %%    _16
  _38 = succeeded:body _16
  br _38, ^38, ^1

38:
  br _16, ^60, ^40

60:
  %% compile_SUITE.erl:329
  %% Aliased:
  %%    _11
  _17 = call (`run`/3), _11, `test`, `[]`

  %% Aliased:
  %%    _17
  _41 = succeeded:body _17
  br _41, ^41, ^1

41:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _58 = bif:'=:=' _17, `passed`
  br _58, ^57, ^43

57:
  %% compile_SUITE.erl:330
  %% Aliased:
  %%    _11
  _18 = call (`file`:`delete`/1), _11

  %% Aliased:
  %%    _18
  _44 = succeeded:body _18
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _55 = bif:'=:=' _18, `ok`
  br _55, ^54, ^46

54:
  %% compile_SUITE.erl:331
  %% Aliased:
  %%    _11
  _7 = call (`filename`:`dirname`/1), _11

  %% Aliased:
  %%    _7
  _47 = succeeded:body _7
  br _47, ^47, ^1

47:
  %% compile_SUITE.erl:331
  %% Aliased:
  %%    _7
  _19 = call (`file`:`del_dir`/1), _7

  %% Aliased:
  %%    _19
  _48 = succeeded:body _19
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _52 = bif:'=:=' _19, `ok`
  br _52, ^51, ^50

51:
  %% Result type:
  %%    'ok'
  ret `ok`

50:
  %% compile_SUITE.erl:331
  %% Aliased:
  %%    _19
  _20 = match_fail `badmatch`, _19

  %% Unique:
  %%    _20
  _53 = succeeded:body _20
  br ^1

46:
  %% compile_SUITE.erl:330
  %% Aliased:
  %%    _18
  _21 = match_fail `badmatch`, _18

  %% Unique:
  %%    _21
  _56 = succeeded:body _21
  br ^1

43:
  %% compile_SUITE.erl:329
  %% Aliased:
  %%    _17
  _22 = match_fail `badmatch`, _17

  %% Unique:
  %%    _22
  _59 = succeeded:body _22
  br ^1

40:
  %% compile_SUITE.erl:328
  _23 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _23
  _62 = succeeded:body _23
  br ^1

37:
  %% compile_SUITE.erl:327
  %% Aliased:
  %%    _15
  _24 = match_fail `badmatch`, _15

  %% Unique:
  %%    _24
  _64 = succeeded:body _24
  br ^1

29:
  %% compile_SUITE.erl:325
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-outdir/1-',1}}
  _26 = match_fail `function_clause`, _0

  %% Unique:
  %%    _26
  _70 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% compile_SUITE.erl:336
%% Counter = 80
%% bs_ensure_opt: true
function `compile_SUITE`:`binary`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _31 = bif:is_list _0
  br _31, ^31, ^30

31:
  %% compile_SUITE.erl:337
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _9 = call (`get_files`/3), _0, `simple`, `"binary"`

  %% Aliased:
  %%    _9
  _32 = succeeded:body _9
  br _32, ^73, ^1

73:
  %% Argument types:
  %%    _9 => {any(), any()}
  %% Aliased:
  %%    _9
  _11 = get_tuple_element _9, `0`

  %% Argument types:
  %%    _9 => {any(), any()}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `1`

  %% compile_SUITE.erl:338
  %% Aliased:
  %%    _11
  _12 = call (`compile`:`file`/2), _11, `[binary]`

  %% Aliased:
  %%    _12
  _35 = succeeded:body _12
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _69 = is_tagged_tuple _12, `3`, `ok`
  br _69, ^66, ^37

66:
  %% Argument types:
  %%    _12 => {'ok', any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _65 = bif:'=:=' _14, `simple`
  br _65, ^64, ^37

64:
  %% Argument types:
  %%    _12 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `2`

  %% compile_SUITE.erl:339
  %% Aliased:
  %%    _10, 
  %%    _13
  _20 = call (`code`:`load_binary`/3), `simple`, _10, _13

  %% Aliased:
  %%    _20
  _38 = succeeded:body _20
  br _38, ^38, ^1

38:
  %% compile_SUITE.erl:340
  _16 = call (`simple`:`test`/0)

  %% Aliased:
  %%    _16
  _39 = succeeded:body _16
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _62 = bif:'=:=' _16, `passed`
  br _62, ^61, ^41

61:
  %% compile_SUITE.erl:341
  _17 = call (`code`:`delete`/1), `simple`

  %% Aliased:
  %%    _17
  _42 = succeeded:body _17
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _59 = bif:'=:=' _17, `true`
  br _59, ^58, ^44

58:
  %% compile_SUITE.erl:342
  _18 = call (`code`:`purge`/1), `simple`

  %% Aliased:
  %%    _18
  _45 = succeeded:body _18
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _56 = bif:'=:=' _18, `false`
  br _56, ^55, ^47

55:
  %% compile_SUITE.erl:343
  %% Aliased:
  %%    _10
  _6 = call (`filename`:`dirname`/1), _10

  %% Aliased:
  %%    _6
  _48 = succeeded:body _6
  br _48, ^48, ^1

48:
  %% compile_SUITE.erl:343
  %% Aliased:
  %%    _6
  _19 = call (`file`:`del_dir`/1), _6

  %% Aliased:
  %%    _19
  _49 = succeeded:body _19
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _53 = bif:'=:=' _19, `ok`
  br _53, ^52, ^51

52:
  %% Result type:
  %%    'ok'
  ret `ok`

51:
  %% compile_SUITE.erl:343
  %% Aliased:
  %%    _19
  _21 = match_fail `badmatch`, _19

  %% Unique:
  %%    _21
  _54 = succeeded:body _21
  br ^1

47:
  %% compile_SUITE.erl:342
  %% Aliased:
  %%    _18
  _22 = match_fail `badmatch`, _18

  %% Unique:
  %%    _22
  _57 = succeeded:body _22
  br ^1

44:
  %% compile_SUITE.erl:341
  %% Aliased:
  %%    _17
  _23 = match_fail `badmatch`, _17

  %% Unique:
  %%    _23
  _60 = succeeded:body _23
  br ^1

41:
  %% compile_SUITE.erl:340
  %% Aliased:
  %%    _16
  _24 = match_fail `badmatch`, _16

  %% Unique:
  %%    _24
  _63 = succeeded:body _24
  br ^1

37:
  %% compile_SUITE.erl:338
  %% Aliased:
  %%    _12
  _25 = match_fail `badmatch`, _12

  %% Unique:
  %%    _25
  _72 = succeeded:body _25
  br ^1

30:
  %% compile_SUITE.erl:336
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-binary/1-',1}}
  _27 = match_fail `function_clause`, _0

  %% Unique:
  %%    _27
  _78 = succeeded:body _27
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% compile_SUITE.erl:348
%% Counter = 663
%% bs_ensure_opt: true
function `compile_SUITE`:`makedep`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _280 = bif:is_list _0
  br _280, ^280, ^279

280:
  %% compile_SUITE.erl:349
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _281 = succeeded:body DataDir
  br _281, ^281, ^1

281:
  %% compile_SUITE.erl:350
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _282 = succeeded:body PrivDir
  br _282, ^282, ^1

282:
  %% compile_SUITE.erl:352
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _92 = call (`get_files`/3), _0, `simple`, `"makedep"`

  %% Aliased:
  %%    _92
  _283 = succeeded:body _92
  br _283, ^623, ^1

623:
  %% Argument types:
  %%    _92 => {any(), any()}
  %% Aliased:
  %%    _92
  _94 = get_tuple_element _92, `0`

  %% Argument types:
  %%    _92 => {any(), any()}
  %% Aliased:
  %%    _92
  _93 = get_tuple_element _92, `1`

  %% compile_SUITE.erl:353
  %% Aliased:
  %%    _94
  SimpleRootname = call (`filename`:`rootname`/1), _94

  %% Aliased:
  %%    SimpleRootname
  _286 = succeeded:body SimpleRootname
  br _286, ^286, ^1

286:
  %% compile_SUITE.erl:354
  %% Aliased:
  %%    _94
  _5 = call (`filename`:`dirname`/1), _94

  %% Aliased:
  %%    _5
  _287 = succeeded:body _5
  br _287, ^287, ^1

287:
  %% compile_SUITE.erl:354
  %% Aliased:
  %%    _5
  IncludeDir = call (`filename`:`join`/2), _5, `"include"`

  %% Aliased:
  %%    IncludeDir
  _288 = succeeded:body IncludeDir
  br _288, ^288, ^1

288:
  %% Argument types:
  %%    
  %% Aliased:
  %%    IncludeDir
  _95 = put_tuple `i`, IncludeDir

  %% Argument types:
  %%    _95 => {'i', any()}
  %% Aliased:
  %%    _95
  _96 = put_list _95, `[]`

  %% Argument types:
  %%    _96 => nonempty_list({'i', any()})
  %% Aliased:
  %%    _96
  _97 = put_list `{d,include_generated}`, _96

  %% Argument types:
  %%    _97 => nonempty_list({'d', 'include_generated'} | {'i', any()})
  %% Aliased:
  %%    _97
  _98 = put_list `{d,foo_value,42}`, _97

  %% Argument types:
  %%    _98 => nonempty_list({'d', 'include_generated'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    _98
  IncludeOptions = put_list `{d,need_foo}`, _98

  %% compile_SUITE.erl:363
  %% Aliased:
  %%    SimpleRootname
  BasicMf1Name = call (`erlang`:`'++'`/2), SimpleRootname, `"-basic1.mk"`

  %% Aliased:
  %%    BasicMf1Name
  _289 = succeeded:body BasicMf1Name
  br _289, ^289, ^1

289:
  %% compile_SUITE.erl:364
  %% Aliased:
  %%    BasicMf1Name
  _99 = call (`file`:`read_file`/1), BasicMf1Name

  %% Aliased:
  %%    _99
  _290 = succeeded:body _99
  br _290, ^290, ^1

290:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _619 = is_tagged_tuple _99, `2`, `ok`
  br _619, ^616, ^292

616:
  %% compile_SUITE.erl:365
  %% Aliased:
  %%    _94
  _102 = call (`compile`:`file`/2), _94, `[binary,makedep]`

  %% Aliased:
  %%    _102
  _293 = succeeded:body _102
  br _293, ^293, ^1

293:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _612 = is_tagged_tuple _102, `3`, `ok`
  br _612, ^609, ^295

609:
  %% Argument types:
  %%    _102 => {'ok', any(), any()}
  %% Aliased:
  %%    _102
  _103 = get_tuple_element _102, `2`

  %% compile_SUITE.erl:366
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _103, 
  %%    DataDir
  _106 = call (`makedep_canonicalize_result`/2), _103, DataDir

  %% Aliased:
  %%    _106
  _296 = succeeded:body _106
  br _296, ^296, ^1

296:
  %% Argument types:
  %%    _99 => {'ok', any()}
  %% Aliased:
  %%    _99
  _100 = get_tuple_element _99, `1`

  %% Argument types:
  %%    _106 => bitstring(8)
  %% Aliased:
  %%    _100, 
  %%    _106
  _299 = bif:'=:=' _106, _100
  br _299, ^299, ^298

299:
  %% compile_SUITE.erl:369
  %% Aliased:
  %%    SimpleRootname
  BasicMf2Name = call (`erlang`:`'++'`/2), SimpleRootname, `"-basic2.mk"`

  %% Aliased:
  %%    BasicMf2Name
  _300 = succeeded:body BasicMf2Name
  br _300, ^300, ^1

300:
  %% compile_SUITE.erl:370
  %% Aliased:
  %%    BasicMf2Name
  _107 = call (`file`:`read_file`/1), BasicMf2Name

  %% Aliased:
  %%    _107
  _301 = succeeded:body _107
  br _301, ^301, ^1

301:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _604 = is_tagged_tuple _107, `2`, `ok`
  br _604, ^601, ^303

601:
  %% Argument types:
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  _110 = put_list `makedep`, IncludeOptions

  %% Argument types:
  %%    _110 => nonempty_list('makedep' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _110
  _111 = put_list `binary`, _110

  %% compile_SUITE.erl:371
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _111
  _112 = call (`compile`:`file`/2), _94, _111

  %% Aliased:
  %%    _112
  _304 = succeeded:body _112
  br _304, ^304, ^1

304:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _597 = is_tagged_tuple _112, `3`, `ok`
  br _597, ^594, ^306

594:
  %% Argument types:
  %%    _112 => {'ok', any(), any()}
  %% Aliased:
  %%    _112
  _113 = get_tuple_element _112, `2`

  %% compile_SUITE.erl:372
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _113, 
  %%    DataDir
  _116 = call (`makedep_canonicalize_result`/2), _113, DataDir

  %% Aliased:
  %%    _116
  _307 = succeeded:body _116
  br _307, ^307, ^1

307:
  %% Argument types:
  %%    _107 => {'ok', any()}
  %% Aliased:
  %%    _107
  _108 = get_tuple_element _107, `1`

  %% Argument types:
  %%    _116 => bitstring(8)
  %% Aliased:
  %%    _108, 
  %%    _116
  _310 = bif:'=:=' _116, _108
  br _310, ^310, ^309

310:
  %% compile_SUITE.erl:375
  %% Aliased:
  %%    SimpleRootname
  MissingMfName = call (`erlang`:`'++'`/2), SimpleRootname, `"-missing.mk"`

  %% Aliased:
  %%    MissingMfName
  _311 = succeeded:body MissingMfName
  br _311, ^311, ^1

311:
  %% compile_SUITE.erl:376
  %% Aliased:
  %%    MissingMfName
  _117 = call (`file`:`read_file`/1), MissingMfName

  %% Aliased:
  %%    _117
  _312 = succeeded:body _117
  br _312, ^312, ^1

312:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _589 = is_tagged_tuple _117, `2`, `ok`
  br _589, ^586, ^314

586:
  %% Argument types:
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  _120 = put_list `makedep_add_missing`, IncludeOptions

  %% Argument types:
  %%    _120 => nonempty_list('makedep_add_missing' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _120
  _121 = put_list `makedep`, _120

  %% Argument types:
  %%    _121 => nonempty_list('makedep' | 'makedep_add_missing' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _121
  _122 = put_list `binary`, _121

  %% compile_SUITE.erl:377
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _122
  _123 = call (`compile`:`file`/2), _94, _122

  %% Aliased:
  %%    _123
  _315 = succeeded:body _123
  br _315, ^315, ^1

315:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _582 = is_tagged_tuple _123, `3`, `ok`
  br _582, ^579, ^317

579:
  %% Argument types:
  %%    _123 => {'ok', any(), any()}
  %% Aliased:
  %%    _123
  _124 = get_tuple_element _123, `2`

  %% compile_SUITE.erl:379
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _124, 
  %%    DataDir
  _127 = call (`makedep_canonicalize_result`/2), _124, DataDir

  %% Aliased:
  %%    _127
  _318 = succeeded:body _127
  br _318, ^318, ^1

318:
  %% Argument types:
  %%    _117 => {'ok', any()}
  %% Aliased:
  %%    _117
  _118 = get_tuple_element _117, `1`

  %% Argument types:
  %%    _127 => bitstring(8)
  %% Aliased:
  %%    _118, 
  %%    _127
  _321 = bif:'=:=' _127, _118
  br _321, ^321, ^320

321:
  %% compile_SUITE.erl:382
  %% Aliased:
  %%    SimpleRootname
  TargetMf1Name = call (`erlang`:`'++'`/2), SimpleRootname, `"-target1.mk"`

  %% Aliased:
  %%    TargetMf1Name
  _322 = succeeded:body TargetMf1Name
  br _322, ^322, ^1

322:
  %% compile_SUITE.erl:383
  %% Aliased:
  %%    TargetMf1Name
  _128 = call (`file`:`read_file`/1), TargetMf1Name

  %% Aliased:
  %%    _128
  _323 = succeeded:body _128
  br _323, ^323, ^1

323:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _128
  _574 = is_tagged_tuple _128, `2`, `ok`
  br _574, ^571, ^325

571:
  %% Argument types:
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  _131 = put_list `{makedep_target,"$target"}`, IncludeOptions

  %% Argument types:
  %%    _131 => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_target', nonempty_list(36..116)} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _131
  _132 = put_list `makedep`, _131

  %% Argument types:
  %%    _132 => nonempty_list('makedep' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_target', nonempty_list(36..116)} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _132
  _133 = put_list `binary`, _132

  %% compile_SUITE.erl:384
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _133
  _134 = call (`compile`:`file`/2), _94, _133

  %% Aliased:
  %%    _134
  _326 = succeeded:body _134
  br _326, ^326, ^1

326:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _134
  _567 = is_tagged_tuple _134, `3`, `ok`
  br _567, ^564, ^328

564:
  %% Argument types:
  %%    _134 => {'ok', any(), any()}
  %% Aliased:
  %%    _134
  _135 = get_tuple_element _134, `2`

  %% compile_SUITE.erl:387
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _135, 
  %%    DataDir
  _23 = call (`makedep_canonicalize_result`/2), _135, DataDir

  %% Aliased:
  %%    _23
  _329 = succeeded:body _23
  br _329, ^329, ^1

329:
  %% compile_SUITE.erl:386
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _23
  _138 = call (`makedep_modify_target`/2), _23, `"$$target"`

  %% Aliased:
  %%    _138
  _330 = succeeded:body _138
  br _330, ^330, ^1

330:
  %% Argument types:
  %%    _128 => {'ok', any()}
  %% Aliased:
  %%    _128
  _129 = get_tuple_element _128, `1`

  %% Argument types:
  %%    _138 => bitstring(8)
  %% Aliased:
  %%    _129, 
  %%    _138
  _333 = bif:'=:=' _138, _129
  br _333, ^333, ^332

333:
  %% compile_SUITE.erl:390
  %% Aliased:
  %%    SimpleRootname
  TargetMf2Name = call (`erlang`:`'++'`/2), SimpleRootname, `"-target2.mk"`

  %% Aliased:
  %%    TargetMf2Name
  _334 = succeeded:body TargetMf2Name
  br _334, ^334, ^1

334:
  %% compile_SUITE.erl:391
  %% Aliased:
  %%    TargetMf2Name
  _139 = call (`file`:`read_file`/1), TargetMf2Name

  %% Aliased:
  %%    _139
  _335 = succeeded:body _139
  br _335, ^335, ^1

335:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _559 = is_tagged_tuple _139, `2`, `ok`
  br _559, ^556, ^337

556:
  %% Argument types:
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  _142 = put_list `makedep_quote_target`, IncludeOptions

  %% Argument types:
  %%    _142 => nonempty_list('makedep_quote_target' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _142
  _143 = put_list `{makedep_target,"$target"}`, _142

  %% Argument types:
  %%    _143 => nonempty_list('makedep_quote_target' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_target', nonempty_list(36..116)} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _143
  _144 = put_list `makedep`, _143

  %% Argument types:
  %%    _144 => nonempty_list('makedep' | 'makedep_quote_target' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_target', nonempty_list(36..116)} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _144
  _145 = put_list `binary`, _144

  %% compile_SUITE.erl:392
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _145
  _146 = call (`compile`:`file`/2), _94, _145

  %% Aliased:
  %%    _146
  _338 = succeeded:body _146
  br _338, ^338, ^1

338:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _146
  _552 = is_tagged_tuple _146, `3`, `ok`
  br _552, ^549, ^340

549:
  %% Argument types:
  %%    _146 => {'ok', any(), any()}
  %% Aliased:
  %%    _146
  _147 = get_tuple_element _146, `2`

  %% compile_SUITE.erl:396
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _147, 
  %%    DataDir
  _28 = call (`makedep_canonicalize_result`/2), _147, DataDir

  %% Aliased:
  %%    _28
  _341 = succeeded:body _28
  br _341, ^341, ^1

341:
  %% compile_SUITE.erl:395
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _28
  _150 = call (`makedep_modify_target`/2), _28, `"$$target"`

  %% Aliased:
  %%    _150
  _342 = succeeded:body _150
  br _342, ^342, ^1

342:
  %% Argument types:
  %%    _139 => {'ok', any()}
  %% Aliased:
  %%    _139
  _140 = get_tuple_element _139, `1`

  %% Argument types:
  %%    _150 => bitstring(8)
  %% Aliased:
  %%    _140, 
  %%    _150
  _345 = bif:'=:=' _150, _140
  br _345, ^345, ^344

345:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _151 = put_tuple `makedep_output`, _93

  %% Argument types:
  %%    _151 => {'makedep_output', any()}
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  %% Unique:
  %%    _151
  _152 = put_list _151, IncludeOptions

  %% Argument types:
  %%    _152 => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_output', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _152
  _153 = put_list `makedep`, _152

  %% compile_SUITE.erl:399
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _153
  _154 = call (`compile`:`file`/2), _94, _153

  %% Aliased:
  %%    _154
  _346 = succeeded:body _154
  br _346, ^346, ^1

346:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _154
  _544 = is_tagged_tuple _154, `2`, `ok`
  br _544, ^541, ^348

541:
  %% compile_SUITE.erl:401
  %% Aliased:
  %%    _93
  _157 = call (`file`:`read_file`/1), _93

  %% Aliased:
  %%    _157
  _349 = succeeded:body _157
  br _349, ^349, ^1

349:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _537 = is_tagged_tuple _157, `2`, `ok`
  br _537, ^534, ^351

534:
  %% Argument types:
  %%    _157 => {'ok', any()}
  %% Aliased:
  %%    _157
  _158 = get_tuple_element _157, `1`

  %% compile_SUITE.erl:402
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _158, 
  %%    DataDir
  _160 = call (`makedep_canonicalize_result`/2), _158, DataDir

  %% Aliased:
  %%    _160
  _352 = succeeded:body _160
  br _352, ^352, ^1

352:
  %% Argument types:
  %%    _160 => bitstring(8)
  %%    _108 => bitstring(8)
  %% Aliased:
  %%    _108, 
  %%    _160
  _355 = bif:'=:=' _160, _108
  br _355, ^355, ^354

355:
  %% compile_SUITE.erl:405
  %% Aliased:
  %%    SimpleRootname
  PhonyMfName = call (`erlang`:`'++'`/2), SimpleRootname, `"-phony.mk"`

  %% Aliased:
  %%    PhonyMfName
  _356 = succeeded:body PhonyMfName
  br _356, ^356, ^1

356:
  %% compile_SUITE.erl:406
  %% Aliased:
  %%    PhonyMfName
  _161 = call (`file`:`read_file`/1), PhonyMfName

  %% Aliased:
  %%    _161
  _357 = succeeded:body _161
  br _357, ^357, ^1

357:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _529 = is_tagged_tuple _161, `2`, `ok`
  br _529, ^526, ^359

526:
  %% Argument types:
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  _164 = put_list `makedep_phony`, IncludeOptions

  %% Argument types:
  %%    _164 => nonempty_list('makedep_phony' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _164
  _165 = put_list `makedep`, _164

  %% Argument types:
  %%    _165 => nonempty_list('makedep' | 'makedep_phony' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _165
  _166 = put_list `binary`, _165

  %% compile_SUITE.erl:407
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _166
  _167 = call (`compile`:`file`/2), _94, _166

  %% Aliased:
  %%    _167
  _360 = succeeded:body _167
  br _360, ^360, ^1

360:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _522 = is_tagged_tuple _167, `3`, `ok`
  br _522, ^519, ^362

519:
  %% Argument types:
  %%    _167 => {'ok', any(), any()}
  %% Aliased:
  %%    _167
  _168 = get_tuple_element _167, `2`

  %% compile_SUITE.erl:409
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _168, 
  %%    DataDir
  _171 = call (`makedep_canonicalize_result`/2), _168, DataDir

  %% Aliased:
  %%    _171
  _363 = succeeded:body _171
  br _363, ^363, ^1

363:
  %% Argument types:
  %%    _161 => {'ok', any()}
  %% Aliased:
  %%    _161
  _162 = get_tuple_element _161, `1`

  %% Argument types:
  %%    _171 => bitstring(8)
  %% Aliased:
  %%    _162, 
  %%    _171
  _366 = bif:'=:=' _171, _162
  br _366, ^366, ^365

366:
  %% Argument types:
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  _172 = put_list `makedep`, IncludeOptions

  %% compile_SUITE.erl:412
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _172
  _173 = call (`compile`:`file`/2), _94, _172

  %% Aliased:
  %%    _173
  _367 = succeeded:body _173
  br _367, ^367, ^1

367:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _173
  _514 = is_tagged_tuple _173, `2`, `ok`
  br _514, ^511, ^369

511:
  %% compile_SUITE.erl:413
  %% Aliased:
  %%    _93
  _176 = call (`file`:`read_file`/1), _93

  %% Aliased:
  %%    _176
  _370 = succeeded:body _176
  br _370, ^370, ^1

370:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _176
  _507 = is_tagged_tuple _176, `2`, `ok`
  br _507, ^504, ^372

504:
  %% Argument types:
  %%    _176 => {'ok', any()}
  %% Aliased:
  %%    _176
  _177 = get_tuple_element _176, `1`

  %% compile_SUITE.erl:414
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _177, 
  %%    DataDir
  _179 = call (`makedep_canonicalize_result`/2), _177, DataDir

  %% Aliased:
  %%    _179
  _373 = succeeded:body _179
  br _373, ^373, ^1

373:
  %% Argument types:
  %%    _179 => bitstring(8)
  %%    _108 => bitstring(8)
  %% Aliased:
  %%    _108, 
  %%    _179
  _376 = bif:'=:=' _179, _108
  br _376, ^376, ^375

376:
  %% compile_SUITE.erl:417
  %% Aliased:
  %%    PrivDir
  GeneratedHrl = call (`filename`:`join`/2), PrivDir, `"generated.hrl"`

  %% Aliased:
  %%    GeneratedHrl
  _377 = succeeded:body GeneratedHrl
  br _377, ^377, ^1

377:
  %% compile_SUITE.erl:418
  %% Aliased:
  %%    _0
  _41 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _41
  _378 = succeeded:body _41
  br _378, ^378, ^1

378:
  %% compile_SUITE.erl:418
  %% Aliased:
  %%    _41
  GeneratedDoc = call (`filename`:`join`/2), _41, `"foo.md"`

  %% Aliased:
  %%    GeneratedDoc
  _379 = succeeded:body GeneratedDoc
  br _379, ^661, ^1

661:
  br ^662

662:
  _384 = new_try_tag `'try'`
  br _384, ^383, ^381

383:
  %% compile_SUITE.erl:420
  %% Aliased:
  %%    GeneratedHrl
  _180 = call (`file`:`write_file`/2), GeneratedHrl, `[]`

  %% Aliased:
  %%    _180
  _385 = succeeded:body _180
  br _385, ^385, ^381

385:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _180
  _424 = bif:'=:=' _180, `ok`
  br _424, ^423, ^387

423:
  %% compile_SUITE.erl:421
  %% Aliased:
  %%    GeneratedDoc
  _181 = call (`file`:`write_file`/2), GeneratedDoc, `[]`

  %% Aliased:
  %%    _181
  _388 = succeeded:body _181
  br _388, ^388, ^381

388:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _181
  _421 = bif:'=:=' _181, `ok`
  br _421, ^420, ^390

420:
  %% Argument types:
  %%    
  %% Aliased:
  %%    PrivDir
  _182 = put_tuple `i`, PrivDir

  %% Argument types:
  %%    _182 => {'i', any()}
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  %% Unique:
  %%    _182
  _183 = put_list _182, IncludeOptions

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _184 = put_tuple `makedep_output`, _93

  %% Argument types:
  %%    _184 => {'makedep_output', any()}
  %%    _183 => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _183, 
  %%    _184
  _185 = put_list _184, _183

  %% Argument types:
  %%    _185 => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_output', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _185
  _186 = put_list `makedep_side_effect`, _185

  %% Argument types:
  %%    _186 => nonempty_list('makedep_side_effect' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_output', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _186
  _187 = put_list `report`, _186

  %% compile_SUITE.erl:422
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _187
  _188 = call (`compile`:`file`/2), _94, _187

  %% Aliased:
  %%    _188
  _391 = succeeded:body _188
  br _391, ^391, ^381

391:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _188
  _418 = bif:'=:=' _188, `{ok,simple}`
  br _418, ^418, ^393

418:
  %% compile_SUITE.erl:425
  %% Aliased:
  %%    _93
  _189 = call (`file`:`read_file`/1), _93

  %% Aliased:
  %%    _189
  _394 = succeeded:body _189
  br _394, ^394, ^381

394:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _189
  _414 = is_tagged_tuple _189, `2`, `ok`
  br _414, ^411, ^396

411:
  %% compile_SUITE.erl:426
  %% Aliased:
  %%    _108
  _48 = call (`string`:`trim`/1), _108

  %% Aliased:
  %%    _48
  _397 = succeeded:body _48
  br _397, ^397, ^381

397:
  %% compile_SUITE.erl:426
  %% Aliased:
  %%    PrivDir
  _47 = call (`filename`:`join`/2), PrivDir, `"generated.hrl"`

  %% Aliased:
  %%    _47
  _398 = succeeded:body _47
  br _398, ^398, ^381

398:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _192 = put_list _47, `["\n"]`

  %% Argument types:
  %%    _192 => nonempty_list(any())
  %% Unique:
  %%    _192
  _193 = put_list `" $(srcdir)/foo.md "`, _192

  %% Argument types:
  %%    _193 => nonempty_list(any())
  %% Aliased:
  %%    _48
  %% Unique:
  %%    _193
  _194 = put_list _48, _193

  %% compile_SUITE.erl:426
  %% Unique:
  %%    _194
  BasicMf3 = call (`erlang`:`iolist_to_binary`/1), _194

  %% Aliased:
  %%    BasicMf3
  _399 = succeeded:body BasicMf3
  br _399, ^399, ^381

399:
  %% Argument types:
  %%    _189 => {'ok', any()}
  %% Aliased:
  %%    _189
  _190 = get_tuple_element _189, `1`

  %% compile_SUITE.erl:427
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _190, 
  %%    DataDir
  _195 = call (`makedep_canonicalize_result`/2), _190, DataDir

  %% Aliased:
  %%    _195
  _400 = succeeded:body _195
  br _400, ^400, ^381

400:
  %% Argument types:
  %%    _195 => bitstring(8)
  %%    BasicMf3 => bitstring(8)
  %% Aliased:
  %%    _195, 
  %%    BasicMf3
  _403 = bif:'=:=' _195, BasicMf3
  br _403, ^403, ^402

403:
  %% Argument types:
  %%    
  %% Aliased:
  %%    PrivDir
  _196 = put_tuple `makedep_output`, PrivDir

  %% Argument types:
  %%    _196 => {'makedep_output', any()}
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  %% Unique:
  %%    _196
  _197 = put_list _196, IncludeOptions

  %% Argument types:
  %%    _197 => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_output', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _197
  _198 = put_list `makedep_side_effect`, _197

  %% Argument types:
  %%    _198 => nonempty_list('makedep_side_effect' | {'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_output', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _198
  _199 = put_list `report`, _198

  %% compile_SUITE.erl:428
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _199
  _89 = call (`compile`:`file`/2), _94, _199

  %% Aliased:
  %%    _89
  _404 = succeeded:body _89
  br _404, ^404, ^381

404:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _408 = bif:'=:=' _89, `error`
  br _408, ^386, ^406

386:
  %% Unique:
  %%    _384
  _453 = kill_try_tag _384

  %% compile_SUITE.erl:431
  %% Aliased:
  %%    GeneratedHrl
  _200 = call (`file`:`delete`/1), GeneratedHrl

  %% Aliased:
  %%    _200
  _426 = succeeded:body _200
  br _426, ^426, ^1

426:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _200
  _436 = bif:'=:=' _200, `ok`
  br _436, ^435, ^428

435:
  %% compile_SUITE.erl:432
  %% Aliased:
  %%    GeneratedDoc
  _201 = call (`file`:`delete`/1), GeneratedDoc

  %% Aliased:
  %%    _201
  _429 = succeeded:body _201
  br _429, ^429, ^1

429:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _201
  _433 = bif:'=:=' _201, `ok`
  br _433, ^382, ^431

382:
  %% compile_SUITE.erl:436
  _60 = call (`code`:`lib_dir`/1), `compiler`

  %% Aliased:
  %%    _60
  _454 = succeeded:body _60
  br _454, ^454, ^1

454:
  %% compile_SUITE.erl:436
  %% Aliased:
  %%    _60
  CompileModule = call (`filename`:`join`/2), _60, `"src/compile.erl"`

  %% Aliased:
  %%    CompileModule
  _455 = succeeded:body CompileModule
  br _455, ^455, ^1

455:
  %% compile_SUITE.erl:439
  _62 = call (`code`:`lib_dir`/1), `stdlib`

  %% Aliased:
  %%    _62
  _456 = succeeded:body _62
  br _456, ^456, ^1

456:
  %% compile_SUITE.erl:439
  %% Aliased:
  %%    _62
  _63 = call (`filename`:`join`/2), _62, `"include"`

  %% Aliased:
  %%    _63
  _457 = succeeded:body _63
  br _457, ^457, ^1

457:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _206 = put_tuple `i`, _63

  %% Argument types:
  %%    _206 => {'i', any()}
  %% Unique:
  %%    _206
  _207 = put_list _206, `[]`

  %% Argument types:
  %%    _207 => nonempty_list({'i', any()})
  %% Unique:
  %%    _207
  _208 = put_list `{makedep_output,standard_io}`, _207

  %% Argument types:
  %%    _208 => nonempty_list({'i', any()} | {'makedep_output', 'standard_io'})
  %% Unique:
  %%    _208
  _209 = put_list `makedep`, _208

  %% Argument types:
  %%    _209 => nonempty_list('makedep' | {'i', any()} | {'makedep_output', 'standard_io'})
  %% Unique:
  %%    _209
  _210 = put_list `report`, _209

  %% compile_SUITE.erl:437
  %% Aliased:
  %%    CompileModule
  %% Unique:
  %%    _210
  _211 = call (`compile`:`file`/2), CompileModule, _210

  %% Aliased:
  %%    _211
  _458 = succeeded:body _211
  br _458, ^458, ^1

458:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _211
  _499 = is_tagged_tuple _211, `2`, `ok`
  br _499, ^496, ^460

496:
  %% Argument types:
  %%    IncludeOptions => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Aliased:
  %%    IncludeOptions
  _214 = put_list `{makedep_output,standard_io}`, IncludeOptions

  %% Argument types:
  %%    _214 => nonempty_list({'d', 'include_generated' | 'need_foo'} | {'i', any()} | {'makedep_output', 'standard_io'} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _214
  _215 = put_list `makedep`, _214

  %% compile_SUITE.erl:442
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _215
  _216 = call (`compile`:`file`/2), _94, _215

  %% Aliased:
  %%    _216
  _461 = succeeded:body _216
  br _461, ^461, ^1

461:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _216
  _492 = is_tagged_tuple _216, `2`, `ok`
  br _492, ^489, ^463

489:
  %% Argument types:
  %%    
  %% Aliased:
  %%    DataDir
  _219 = put_tuple `makedep_output`, DataDir

  %% Argument types:
  %%    _219 => {'makedep_output', any()}
  %% Unique:
  %%    _219
  _220 = put_list _219, `[]`

  %% Argument types:
  %%    _220 => nonempty_list({'makedep_output', any()})
  %% Unique:
  %%    _220
  _221 = put_list `makedep`, _220

  %% Argument types:
  %%    _221 => nonempty_list('makedep' | {'makedep_output', any()})
  %% Unique:
  %%    _221
  _222 = put_list `report`, _221

  %% compile_SUITE.erl:445
  %% Aliased:
  %%    _94
  %% Unique:
  %%    _222
  _223 = call (`compile`:`file`/2), _94, _222

  %% Aliased:
  %%    _223
  _464 = succeeded:body _223
  br _464, ^464, ^1

464:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _223
  _487 = bif:'=:=' _223, `error`
  br _487, ^486, ^466

486:
  %% compile_SUITE.erl:446
  %% Aliased:
  %%    _94
  _224 = call (`compile`:`file`/2), _94, `[report,makedep,{makedep_output,a_bad_output_device}]`

  %% Aliased:
  %%    _224
  _467 = succeeded:body _224
  br _467, ^467, ^1

467:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _224
  _484 = bif:'=:=' _224, `error`
  br _484, ^483, ^469

483:
  %% compile_SUITE.erl:448
  %% Aliased:
  %%    _93
  _225 = call (`file`:`delete`/1), _93

  %% Aliased:
  %%    _225
  _470 = succeeded:body _225
  br _470, ^470, ^1

470:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _225
  _481 = bif:'=:=' _225, `ok`
  br _481, ^480, ^472

480:
  %% compile_SUITE.erl:449
  %% Aliased:
  %%    _93
  _69 = call (`filename`:`dirname`/1), _93

  %% Aliased:
  %%    _69
  _473 = succeeded:body _69
  br _473, ^473, ^1

473:
  %% compile_SUITE.erl:449
  %% Aliased:
  %%    _69
  _226 = call (`file`:`del_dir`/1), _69

  %% Aliased:
  %%    _226
  _474 = succeeded:body _226
  br _474, ^474, ^1

474:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _226
  _478 = bif:'=:=' _226, `ok`
  br _478, ^477, ^476

477:
  %% Result type:
  %%    'ok'
  ret `ok`

476:
  %% compile_SUITE.erl:449
  %% Aliased:
  %%    _226
  _245 = match_fail `badmatch`, _226

  %% Unique:
  %%    _245
  _479 = succeeded:body _245
  br ^1

472:
  %% compile_SUITE.erl:448
  %% Aliased:
  %%    _225
  _246 = match_fail `badmatch`, _225

  %% Unique:
  %%    _246
  _482 = succeeded:body _246
  br ^1

469:
  %% compile_SUITE.erl:446
  %% Aliased:
  %%    _224
  _247 = match_fail `badmatch`, _224

  %% Unique:
  %%    _247
  _485 = succeeded:body _247
  br ^1

466:
  %% compile_SUITE.erl:445
  %% Aliased:
  %%    _223
  _248 = match_fail `badmatch`, _223

  %% Unique:
  %%    _248
  _488 = succeeded:body _248
  br ^1

463:
  %% compile_SUITE.erl:442
  %% Aliased:
  %%    _216
  _249 = match_fail `badmatch`, _216

  %% Unique:
  %%    _249
  _495 = succeeded:body _249
  br ^1

460:
  %% compile_SUITE.erl:437
  %% Aliased:
  %%    _211
  _250 = match_fail `badmatch`, _211

  %% Unique:
  %%    _250
  _502 = succeeded:body _250
  br ^1

431:
  %% compile_SUITE.erl:419
  %% Aliased:
  %%    _201
  _240 = match_fail `badmatch`, _201

  %% Unique:
  %%    _240
  _434 = succeeded:body _240
  br ^1

428:
  %% compile_SUITE.erl:431
  %% Aliased:
  %%    _200
  _241 = match_fail `badmatch`, _200

  %% Unique:
  %%    _241
  _437 = succeeded:body _241
  br ^1

406:
  %% compile_SUITE.erl:428
  %% Aliased:
  %%    _89
  _234 = match_fail `badmatch`, _89

  %% Unique:
  %%    _234
  _409 = succeeded:body _234
  br ^381

402:
  %% compile_SUITE.erl:427
  %% Aliased:
  %%    _195
  _235 = match_fail `badmatch`, _195

  %% Unique:
  %%    _235
  _410 = succeeded:body _235
  br ^381

396:
  %% compile_SUITE.erl:425
  %% Aliased:
  %%    _189
  _236 = match_fail `badmatch`, _189

  %% Unique:
  %%    _236
  _417 = succeeded:body _236
  br ^381

393:
  %% compile_SUITE.erl:422
  %% Aliased:
  %%    _188
  _237 = match_fail `badmatch`, _188

  %% Unique:
  %%    _237
  _419 = succeeded:body _237
  br ^381

390:
  %% compile_SUITE.erl:421
  %% Aliased:
  %%    _181
  _238 = match_fail `badmatch`, _181

  %% Unique:
  %%    _238
  _422 = succeeded:body _238
  br ^381

387:
  %% compile_SUITE.erl:420
  %% Aliased:
  %%    _180
  _239 = match_fail `badmatch`, _180

  %% Unique:
  %%    _239
  _425 = succeeded:body _239
  br ^381

381:
  %% Unique:
  %%    _384
  _451 = landingpad `'try'`, _384

  %% Aliased:
  %%    _451
  _58 = extract _451, `1`

  %% Aliased:
  %%    _451
  _57 = extract _451, `2`

  %% Unique:
  %%    _384
  _452 = kill_try_tag _384
  br ^642

642:
  %% compile_SUITE.erl:431
  %% Aliased:
  %%    GeneratedHrl
  _202 = call (`file`:`delete`/1), GeneratedHrl

  %% Aliased:
  %%    _202
  _438 = succeeded:body _202
  br _438, ^438, ^1

438:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _202
  _449 = bif:'=:=' _202, `ok`
  br _449, ^448, ^440

448:
  %% compile_SUITE.erl:432
  %% Aliased:
  %%    GeneratedDoc
  _204 = call (`file`:`delete`/1), GeneratedDoc

  %% Aliased:
  %%    _204
  _441 = succeeded:body _204
  br _441, ^441, ^1

441:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _204
  _446 = bif:'=:=' _204, `ok`
  br _446, ^445, ^443

445:
  %% Aliased:
  %%    _57, 
  %%    _58
  _242 = resume _57, _58

  %% Unique:
  %%    _242
  _444 = succeeded:body _242
  br ^1

443:
  %% compile_SUITE.erl:419
  %% Aliased:
  %%    _204
  _243 = match_fail `badmatch`, _204

  %% Unique:
  %%    _243
  _447 = succeeded:body _243
  br ^1

440:
  %% compile_SUITE.erl:431
  %% Aliased:
  %%    _202
  _244 = match_fail `badmatch`, _202

  %% Unique:
  %%    _244
  _450 = succeeded:body _244
  br ^1

375:
  %% compile_SUITE.erl:414
  %% Aliased:
  %%    _179
  _251 = match_fail `badmatch`, _179

  %% Unique:
  %%    _251
  _503 = succeeded:body _251
  br ^1

372:
  %% compile_SUITE.erl:413
  %% Aliased:
  %%    _176
  _252 = match_fail `badmatch`, _176

  %% Unique:
  %%    _252
  _510 = succeeded:body _252
  br ^1

369:
  %% compile_SUITE.erl:412
  %% Aliased:
  %%    _173
  _253 = match_fail `badmatch`, _173

  %% Unique:
  %%    _253
  _517 = succeeded:body _253
  br ^1

365:
  %% compile_SUITE.erl:409
  %% Aliased:
  %%    _171
  _254 = match_fail `badmatch`, _171

  %% Unique:
  %%    _254
  _518 = succeeded:body _254
  br ^1

362:
  %% compile_SUITE.erl:407
  %% Aliased:
  %%    _167
  _255 = match_fail `badmatch`, _167

  %% Unique:
  %%    _255
  _525 = succeeded:body _255
  br ^1

359:
  %% compile_SUITE.erl:406
  %% Aliased:
  %%    _161
  _256 = match_fail `badmatch`, _161

  %% Unique:
  %%    _256
  _532 = succeeded:body _256
  br ^1

354:
  %% compile_SUITE.erl:402
  %% Aliased:
  %%    _160
  _257 = match_fail `badmatch`, _160

  %% Unique:
  %%    _257
  _533 = succeeded:body _257
  br ^1

351:
  %% compile_SUITE.erl:401
  %% Aliased:
  %%    _157
  _258 = match_fail `badmatch`, _157

  %% Unique:
  %%    _258
  _540 = succeeded:body _258
  br ^1

348:
  %% compile_SUITE.erl:399
  %% Aliased:
  %%    _154
  _259 = match_fail `badmatch`, _154

  %% Unique:
  %%    _259
  _547 = succeeded:body _259
  br ^1

344:
  %% compile_SUITE.erl:395
  %% Aliased:
  %%    _150
  _260 = match_fail `badmatch`, _150

  %% Unique:
  %%    _260
  _548 = succeeded:body _260
  br ^1

340:
  %% compile_SUITE.erl:392
  %% Aliased:
  %%    _146
  _261 = match_fail `badmatch`, _146

  %% Unique:
  %%    _261
  _555 = succeeded:body _261
  br ^1

337:
  %% compile_SUITE.erl:391
  %% Aliased:
  %%    _139
  _262 = match_fail `badmatch`, _139

  %% Unique:
  %%    _262
  _562 = succeeded:body _262
  br ^1

332:
  %% compile_SUITE.erl:386
  %% Aliased:
  %%    _138
  _263 = match_fail `badmatch`, _138

  %% Unique:
  %%    _263
  _563 = succeeded:body _263
  br ^1

328:
  %% compile_SUITE.erl:384
  %% Aliased:
  %%    _134
  _264 = match_fail `badmatch`, _134

  %% Unique:
  %%    _264
  _570 = succeeded:body _264
  br ^1

325:
  %% compile_SUITE.erl:383
  %% Aliased:
  %%    _128
  _265 = match_fail `badmatch`, _128

  %% Unique:
  %%    _265
  _577 = succeeded:body _265
  br ^1

320:
  %% compile_SUITE.erl:379
  %% Aliased:
  %%    _127
  _266 = match_fail `badmatch`, _127

  %% Unique:
  %%    _266
  _578 = succeeded:body _266
  br ^1

317:
  %% compile_SUITE.erl:377
  %% Aliased:
  %%    _123
  _267 = match_fail `badmatch`, _123

  %% Unique:
  %%    _267
  _585 = succeeded:body _267
  br ^1

314:
  %% compile_SUITE.erl:376
  %% Aliased:
  %%    _117
  _268 = match_fail `badmatch`, _117

  %% Unique:
  %%    _268
  _592 = succeeded:body _268
  br ^1

309:
  %% compile_SUITE.erl:372
  %% Aliased:
  %%    _116
  _269 = match_fail `badmatch`, _116

  %% Unique:
  %%    _269
  _593 = succeeded:body _269
  br ^1

306:
  %% compile_SUITE.erl:371
  %% Aliased:
  %%    _112
  _270 = match_fail `badmatch`, _112

  %% Unique:
  %%    _270
  _600 = succeeded:body _270
  br ^1

303:
  %% compile_SUITE.erl:370
  %% Aliased:
  %%    _107
  _271 = match_fail `badmatch`, _107

  %% Unique:
  %%    _271
  _607 = succeeded:body _271
  br ^1

298:
  %% compile_SUITE.erl:366
  %% Aliased:
  %%    _106
  _272 = match_fail `badmatch`, _106

  %% Unique:
  %%    _272
  _608 = succeeded:body _272
  br ^1

295:
  %% compile_SUITE.erl:365
  %% Aliased:
  %%    _102
  _273 = match_fail `badmatch`, _102

  %% Unique:
  %%    _273
  _615 = succeeded:body _273
  br ^1

292:
  %% compile_SUITE.erl:364
  %% Aliased:
  %%    _99
  _274 = match_fail `badmatch`, _99

  %% Unique:
  %%    _274
  _622 = succeeded:body _274
  br ^1

279:
  %% compile_SUITE.erl:348
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-makedep/1-',1}}
  _276 = match_fail `function_clause`, _0

  %% Unique:
  %%    _276
  _628 = succeeded:body _276
  br ^1

1:
  _277 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _277
}

%% compile_SUITE.erl:452
%% Counter = 9
%% bs_ensure_opt: true
function `compile_SUITE`:`makedep_canonicalize_result`(_0, _1) {
0:
  %% compile_SUITE.erl:453
  %% Aliased:
  %%    _0
  Mf0 = call (`erlang`:`binary_to_list`/1), _0

  %% Aliased:
  %%    Mf0
  _5 = succeeded:body Mf0
  br _5, ^5, ^1

5:
  %% compile_SUITE.erl:455
  %% Aliased:
  %%    _1, 
  %%    Mf0
  Mf1 = call (`re`:`replace`/4), Mf0, _1, `"$(srcdir)/"`, `[global,multiline,{return,list}]`

  %% Aliased:
  %%    Mf1
  _6 = succeeded:body Mf1
  br _6, ^6, ^1

6:
  %% compile_SUITE.erl:458
  %% Aliased:
  %%    Mf1
  Mf2 = call (`re`:`replace`/4), Mf1, `"\\\\\n  "`, `[]`, `[global,multiline,{return,list}]`

  %% Aliased:
  %%    Mf2
  _7 = succeeded:body Mf2
  br _7, ^7, ^1

7:
  %% compile_SUITE.erl:459
  %% Aliased:
  %%    Mf2
  _2 = call (`erlang`:`list_to_binary`/1), Mf2

  %% Aliased:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:461
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(8)
%%    _1 =>
%%     nonempty_list(36..116)
function `compile_SUITE`:`makedep_modify_target`(_0, _1) {
0:
  %% compile_SUITE.erl:462
  %% Aliased:
  %%    _0
  Mf0 = call (`erlang`:`binary_to_list`/1), _0

  %% Aliased:
  %%    Mf0
  _5 = succeeded:body Mf0
  br _5, ^5, ^1

5:
  %% compile_SUITE.erl:463
  %% Aliased:
  %%    Mf0
  %% Unique:
  %%    _1
  Mf1 = call (`re`:`replace`/4), Mf0, _1, `"$target"`, `[{return,list}]`

  %% Aliased:
  %%    Mf1
  _6 = succeeded:body Mf1
  br _6, ^6, ^1

6:
  %% compile_SUITE.erl:464
  %% Aliased:
  %%    Mf1
  _2 = call (`erlang`:`list_to_binary`/1), Mf1

  %% Aliased:
  %%    _2
  _7 = succeeded:body _2
  br _7, ^7, ^1

7:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:468
%% Counter = 44
%% bs_ensure_opt: true
function `compile_SUITE`:`no_core_prepare`(_0) {
0:
  %% compile_SUITE.erl:481
  _9 = call (`compile`:`forms`/2), `{c_module,[],
     {c_literal,[],sample_receive},
     [{c_var,[],{discard,0}}],
     [],
     [{{c_var,[],{discard,0}},
       {c_fun,[],[],
           {c_case,[],
               {c_values,[],[]},
               [{c_clause,[],[],
                    {c_literal,[],true},
                    {c_receive,[],[],
                        {c_literal,[],0},
                        {c_literal,[],ok}}}]}}}]}`, `[from_core,binary,return]`

  %% Aliased:
  %%    _9
  _22 = succeeded:body _9
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _40 = is_tagged_tuple _9, `4`, `ok`
  br _40, ^37, ^24

37:
  %% Argument types:
  %%    _9 => {'ok', any(), any(), any()}
  %% Aliased:
  %%    _9
  _12 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _36 = bif:'=:=' _12, `sample_receive`
  br _36, ^35, ^24

35:
  %% compile_SUITE.erl:482
  _14 = call (`compile`:`forms`/2), `{c_module,[],
     {c_literal,[],sample_receive},
     [{c_var,[],{discard,0}}],
     [],
     [{{c_var,[],{discard,0}},
       {c_fun,[],[],
           {c_case,[],
               {c_values,[],[]},
               [{c_clause,[],[],
                    {c_literal,[],true},
                    {c_receive,[],[],
                        {c_literal,[],0},
                        {c_literal,[],ok}}}]}}}]}`, `[from_core,binary,return,no_core_prepare]`

  %% Aliased:
  %%    _14
  _25 = succeeded:body _14
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _31 = is_tagged_tuple _14, `3`, `error`
  br _31, ^28, ^27

28:
  %% Result type:
  %%    'ok'
  ret `ok`

27:
  %% compile_SUITE.erl:482
  %% Aliased:
  %%    _14
  _18 = match_fail `badmatch`, _14

  %% Unique:
  %%    _18
  _34 = succeeded:body _18
  br ^1

24:
  %% compile_SUITE.erl:481
  %% Aliased:
  %%    _9
  _19 = match_fail `badmatch`, _9

  %% Unique:
  %%    _19
  _43 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% compile_SUITE.erl:485
%% Counter = 80
%% bs_ensure_opt: true
function `compile_SUITE`:`cond_and_ifdef`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _36 = bif:is_list _0
  br _36, ^36, ^35

36:
  %% compile_SUITE.erl:486
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _13 = call (`get_files`/3), _0, `simple`, `"cond_and_ifdef"`

  %% Aliased:
  %%    _13
  _37 = succeeded:body _13
  br _37, ^72, ^1

72:
  %% Argument types:
  %%    _13 => {any(), any()}
  %% Aliased:
  %%    _13
  _15 = get_tuple_element _13, `0`

  %% Argument types:
  %%    _13 => {any(), any()}
  %% Aliased:
  %%    _13
  _14 = get_tuple_element _13, `1`

  %% compile_SUITE.erl:487
  %% Aliased:
  %%    _15
  _2 = call (`filename`:`dirname`/1), _15

  %% Aliased:
  %%    _2
  _40 = succeeded:body _2
  br _40, ^40, ^1

40:
  %% compile_SUITE.erl:487
  %% Aliased:
  %%    _2
  IncludeDir = call (`filename`:`join`/2), _2, `"include"`

  %% Aliased:
  %%    IncludeDir
  _41 = succeeded:body IncludeDir
  br _41, ^41, ^1

41:
  %% compile_SUITE.erl:488
  %% Aliased:
  %%    _14
  _4 = call (`filename`:`dirname`/1), _14

  %% Aliased:
  %%    _4
  _42 = succeeded:body _4
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    IncludeDir
  _16 = put_tuple `i`, IncludeDir

  %% Argument types:
  %%    _16 => {'i', any()}
  %% Unique:
  %%    _16
  _17 = put_list _16, `[report]`

  %% Argument types:
  %%    _17 => nonempty_list('report' | {'i', any()})
  %% Unique:
  %%    _17
  _18 = put_list `{d,foo_value,42}`, _17

  %% Argument types:
  %%    _18 => nonempty_list('report' | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _18
  _19 = put_list `{d,need_foo}`, _18

  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _20 = put_tuple `outdir`, _4

  %% Argument types:
  %%    _20 => {'outdir', any()}
  %%    _19 => nonempty_list('report' | {'d', 'need_foo'} | {'i', any()} | {'d', 'foo_value', 42})
  %% Unique:
  %%    _19, 
  %%    _20
  Options = put_list _20, _19

  %% compile_SUITE.erl:491
  %% Aliased:
  %%    _15
  %% Unique:
  %%    Options
  _21 = call (`compile`:`file`/2), _15, Options

  %% Aliased:
  %%    _21
  _43 = succeeded:body _21
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _70 = bif:'=:=' _21, `{ok,simple}`
  br _70, ^70, ^45

70:
  %% compile_SUITE.erl:492
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _14
  _22 = call (`exists`/1), _14

  %% Unique:
  %%    _22
  _46 = succeeded:body _22
  br _46, ^46, ^1

46:
  br _22, ^67, ^48

67:
  %% compile_SUITE.erl:493
  %% Aliased:
  %%    _14
  _23 = call (`run`/3), _14, `foo`, `[]`

  %% Aliased:
  %%    _23
  _49 = succeeded:body _23
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _65 = bif:'=:=' _23, `{hiker,42}`
  br _65, ^65, ^51

65:
  %% compile_SUITE.erl:494
  %% Aliased:
  %%    _14
  _24 = call (`file`:`delete`/1), _14

  %% Aliased:
  %%    _24
  _52 = succeeded:body _24
  br _52, ^52, ^1

52:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _63 = bif:'=:=' _24, `ok`
  br _63, ^62, ^54

62:
  %% compile_SUITE.erl:495
  %% Aliased:
  %%    _14
  _10 = call (`filename`:`dirname`/1), _14

  %% Aliased:
  %%    _10
  _55 = succeeded:body _10
  br _55, ^55, ^1

55:
  %% compile_SUITE.erl:495
  %% Aliased:
  %%    _10
  _25 = call (`file`:`del_dir`/1), _10

  %% Aliased:
  %%    _25
  _56 = succeeded:body _25
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _60 = bif:'=:=' _25, `ok`
  br _60, ^59, ^58

59:
  %% Result type:
  %%    'ok'
  ret `ok`

58:
  %% compile_SUITE.erl:495
  %% Aliased:
  %%    _25
  _26 = match_fail `badmatch`, _25

  %% Unique:
  %%    _26
  _61 = succeeded:body _26
  br ^1

54:
  %% compile_SUITE.erl:494
  %% Aliased:
  %%    _24
  _27 = match_fail `badmatch`, _24

  %% Unique:
  %%    _27
  _64 = succeeded:body _27
  br ^1

51:
  %% compile_SUITE.erl:493
  %% Aliased:
  %%    _23
  _28 = match_fail `badmatch`, _23

  %% Unique:
  %%    _28
  _66 = succeeded:body _28
  br ^1

48:
  %% compile_SUITE.erl:492
  _29 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _29
  _69 = succeeded:body _29
  br ^1

45:
  %% compile_SUITE.erl:491
  %% Aliased:
  %%    _21
  _30 = match_fail `badmatch`, _21

  %% Unique:
  %%    _30
  _71 = succeeded:body _30
  br ^1

35:
  %% compile_SUITE.erl:485
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-cond_and_ifdef/1-',1}}
  _32 = match_fail `function_clause`, _0

  %% Unique:
  %%    _32
  _77 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% compile_SUITE.erl:498
%% Counter = 101
%% bs_ensure_opt: true
function `compile_SUITE`:`listings`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _37 = bif:is_list _0
  br _37, ^37, ^36

37:
  %% compile_SUITE.erl:499
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _38 = succeeded:body DataDir
  br _38, ^38, ^1

38:
  %% compile_SUITE.erl:500
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _39 = succeeded:body PrivDir
  br _39, ^39, ^1

39:
  %% compile_SUITE.erl:501
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    DataDir, 
  %%    PrivDir
  _17 = call (`do_file_listings`/3), DataDir, PrivDir, `["simple","small","small_maps"]`

  %% Unique:
  %%    _17
  _40 = succeeded:body _17
  br _40, ^78, ^1

78:
  %% compile_SUITE.erl:508
  %% Aliased:
  %%    DataDir
  Simple = call (`filename`:`join`/2), DataDir, `"simple"`

  %% Aliased:
  %%    Simple
  _43 = succeeded:body Simple
  br _43, ^43, ^1

43:
  %% compile_SUITE.erl:509
  %% Aliased:
  %%    PrivDir
  SimpleTarget = call (`filename`:`join`/2), PrivDir, `"simple.S"`

  %% Aliased:
  %%    SimpleTarget
  _44 = succeeded:body SimpleTarget
  br _44, ^44, ^1

44:
  %% compile_SUITE.erl:510
  %% Aliased:
  %%    SimpleTarget
  _18 = call (`file`:`make_dir`/1), SimpleTarget

  %% Aliased:
  %%    _18
  _45 = succeeded:body _18
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _76 = bif:'=:=' _18, `ok`
  br _76, ^75, ^47

75:
  %% Argument types:
  %%    
  %% Aliased:
  %%    PrivDir
  _19 = put_tuple `outdir`, PrivDir

  %% Argument types:
  %%    _19 => {'outdir', any()}
  %% Unique:
  %%    _19
  _20 = put_list _19, `[report]`

  %% Argument types:
  %%    _20 => nonempty_list('report' | {'outdir', any()})
  %% Unique:
  %%    _20
  _21 = put_list `'S'`, _20
  _52 = new_try_tag `'try'`
  br _52, ^82, ^49

82:
  %% compile_SUITE.erl:512
  %% Aliased:
  %%    Simple
  %% Unique:
  %%    _21
  _16 = call (`compile`:`file`/2), Simple, _21

  %% Aliased:
  %%    _16
  _53 = succeeded:body _16
  br _53, ^53, ^49

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _57 = bif:'=:=' _16, `error`
  br _57, ^54, ^55

54:
  %% Unique:
  %%    _52
  _74 = kill_try_tag _52

  %% compile_SUITE.erl:514
  %% Aliased:
  %%    SimpleTarget
  _22 = call (`file`:`del_dir`/1), SimpleTarget

  %% Aliased:
  %%    _22
  _59 = succeeded:body _22
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _63 = bif:'=:=' _22, `ok`
  br _63, ^50, ^61

50:
  %% Result type:
  %%    'ok'
  ret `ok`

61:
  %% compile_SUITE.erl:511
  %% Aliased:
  %%    _22
  _28 = match_fail `badmatch`, _22

  %% Unique:
  %%    _28
  _64 = succeeded:body _28
  br ^1

55:
  %% compile_SUITE.erl:512
  %% Aliased:
  %%    _16
  _27 = match_fail `badmatch`, _16

  %% Unique:
  %%    _27
  _58 = succeeded:body _27
  br ^49

49:
  %% Unique:
  %%    _52
  _72 = landingpad `'try'`, _52

  %% Aliased:
  %%    _72
  _13 = extract _72, `1`

  %% Aliased:
  %%    _72
  _12 = extract _72, `2`

  %% Unique:
  %%    _52
  _73 = kill_try_tag _52
  br ^84

84:
  %% compile_SUITE.erl:514
  %% Aliased:
  %%    SimpleTarget
  _23 = call (`file`:`del_dir`/1), SimpleTarget

  %% Aliased:
  %%    _23
  _65 = succeeded:body _23
  br _65, ^65, ^1

65:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _70 = bif:'=:=' _23, `ok`
  br _70, ^69, ^67

69:
  %% Aliased:
  %%    _12, 
  %%    _13
  _29 = resume _12, _13

  %% Unique:
  %%    _29
  _68 = succeeded:body _29
  br ^1

67:
  %% compile_SUITE.erl:511
  %% Aliased:
  %%    _23
  _30 = match_fail `badmatch`, _23

  %% Unique:
  %%    _30
  _71 = succeeded:body _30
  br ^1

47:
  %% compile_SUITE.erl:510
  %% Aliased:
  %%    _18
  _31 = match_fail `badmatch`, _18

  %% Unique:
  %%    _31
  _77 = succeeded:body _31
  br ^1

36:
  %% compile_SUITE.erl:498
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-listings/1-',1}}
  _33 = match_fail `function_clause`, _0

  %% Unique:
  %%    _33
  _81 = succeeded:body _33
  br ^1

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _34
}

%% compile_SUITE.erl:519
%% Counter = 82
%% bs_ensure_opt: true
%% Parameters
%%    _2 =>
%%     list(nonempty_list(95..115))
function `compile_SUITE`:`do_file_listings`(_0, _1, _2) {
0:
  %% Unique:
  %%    _2
  _77 = is_nonempty_list _2
  br _77, ^77, ^78

77:
  %% Argument types:
  %%    _2 => nonempty_list(nonempty_list(95..115))
  %% Unique:
  %%    _2
  _24 = get_hd _2

  %% Argument types:
  %%    _2 => nonempty_list(nonempty_list(95..115))
  %% Unique:
  %%    _2
  _23 = get_tl _2

  %% compile_SUITE.erl:521
  %% Aliased:
  %%    _0, 
  %%    _24
  Simple = call (`filename`:`join`/2), _0, _24

  %% Aliased:
  %%    Simple
  _45 = succeeded:body Simple
  br _45, ^45, ^1

45:
  %% compile_SUITE.erl:522
  %% Aliased:
  %%    _1
  TargetDir = call (`filename`:`join`/2), _1, `listings`

  %% Aliased:
  %%    TargetDir
  _46 = succeeded:body TargetDir
  br _46, ^46, ^1

46:
  %% compile_SUITE.erl:523
  %% Aliased:
  %%    TargetDir
  _25 = call (`file`:`make_dir`/1), TargetDir

  %% Aliased:
  %%    _25
  _47 = succeeded:body _25
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _75 = bif:'=:=' _25, `ok`
  br _75, ^74, ^49

74:
  %% compile_SUITE.erl:548
  %% Aliased:
  %%    Simple, 
  %%    TargetDir
  _28 = call (`p_listings`/3), `[{'S',".S"},
  {'E',".E"},
  {'P',".P"},
  {dpp,".pp"},
  {dabstr,".abstr"},
  {dexp,".expand"},
  {dcore,".core"},
  {doldinline,".oldinline"},
  {dinline,".inline"},
  {dcore,".core"},
  {dcopt,".copt"},
  {dcbsm,".core_bsm"},
  {dssa,".ssa"},
  {dbool,".bool"},
  {dssashare,".ssashare"},
  {dssaopt,".ssaopt"},
  {dprecg,".precodegen"},
  {dcg,".codegen"},
  {dblk,".block"},
  {djmp,".jump"},
  {dclean,".clean"},
  {dopt,".optimize"},
  {diffable,".S"}]`, Simple, TargetDir

  %% Aliased:
  %%    _28
  _50 = succeeded:body _28
  br _50, ^50, ^1

50:
  %% compile_SUITE.erl:551
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    Simple, 
  %%    TargetDir
  _29 = call (`do_listing`/4), Simple, TargetDir, `to_pp`, `".P"`

  %% Unique:
  %%    _29
  _51 = succeeded:body _29
  br _51, ^51, ^1

51:
  %% compile_SUITE.erl:552
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    Simple, 
  %%    TargetDir
  _30 = call (`do_listing`/4), Simple, TargetDir, `to_exp`, `".E"`

  %% Unique:
  %%    _30
  _52 = succeeded:body _30
  br _52, ^52, ^1

52:
  %% compile_SUITE.erl:553
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    Simple, 
  %%    TargetDir
  _31 = call (`do_listing`/4), Simple, TargetDir, `to_core0`, `".core"`

  %% Unique:
  %%    _31
  _53 = succeeded:body _31
  br _53, ^53, ^1

53:
  %% compile_SUITE.erl:554
  %% Aliased:
  %%    _24
  _7 = call (`erlang`:`'++'`/2), _24, `".core"`

  %% compile_SUITE.erl:554
  %% Aliased:
  %%    _7, 
  %%    TargetDir
  _8 = call (`filename`:`join`/2), TargetDir, _7

  %% Aliased:
  %%    _8
  _55 = succeeded:body _8
  br _55, ^55, ^1

55:
  %% compile_SUITE.erl:554
  %% Aliased:
  %%    _8
  _26 = call (`file`:`delete`/1), _8

  %% Aliased:
  %%    _26
  _56 = succeeded:body _26
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _72 = bif:'=:=' _26, `ok`
  br _72, ^71, ^58

71:
  %% compile_SUITE.erl:555
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    Simple, 
  %%    TargetDir
  _32 = call (`do_listing`/4), Simple, TargetDir, `to_core`, `".core"`

  %% Unique:
  %%    _32
  _59 = succeeded:body _32
  br _59, ^59, ^1

59:
  %% compile_SUITE.erl:556
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    Simple, 
  %%    TargetDir
  _33 = call (`do_listing`/4), Simple, TargetDir, `to_dis`, `".dis"`

  %% Unique:
  %%    _33
  _60 = succeeded:body _33
  br _60, ^60, ^1

60:
  %% Result type:
  %%    'ok'
  _15 = make_fun (`'-do_file_listings/3-fun-0-'`/1)

  %% compile_SUITE.erl:560
  %% Aliased:
  %%    TargetDir
  _10 = call (`filename`:`join`/2), TargetDir, `"*"`

  %% Aliased:
  %%    _10
  _61 = succeeded:body _10
  br _61, ^61, ^1

61:
  %% compile_SUITE.erl:560
  %% Aliased:
  %%    _10
  _11 = call (`filelib`:`wildcard`/1), _10

  %% Aliased:
  %%    _11
  _62 = succeeded:body _11
  br _62, ^62, ^1

62:
  %% compile_SUITE.erl:559
  %% Aliased:
  %%    _11, 
  %%    _15
  _35 = call (`lists`:`foreach`/2), _15, _11

  %% Aliased:
  %%    _35
  _63 = succeeded:body _35
  br _63, ^63, ^1

63:
  %% compile_SUITE.erl:561
  %% Aliased:
  %%    TargetDir
  _27 = call (`file`:`del_dir`/1), TargetDir

  %% Aliased:
  %%    _27
  _64 = succeeded:body _27
  br _64, ^64, ^1

64:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _69 = bif:'=:=' _27, `ok`
  br _69, ^68, ^66

68:
  %% compile_SUITE.erl:563
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Unique:
  %%    _23
  _36 = call (`do_file_listings`/3), _0, _1, _23

  %% Unique:
  %%    _36
  _67 = succeeded:body _36
  br _67, ^67, ^1

67:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _36
  ret _36

66:
  %% compile_SUITE.erl:561
  %% Aliased:
  %%    _27
  _37 = match_fail `badmatch`, _27

  %% Unique:
  %%    _37
  _70 = succeeded:body _37
  br ^1

58:
  %% compile_SUITE.erl:554
  %% Aliased:
  %%    _26
  _38 = match_fail `badmatch`, _26

  %% Unique:
  %%    _38
  _73 = succeeded:body _38
  br ^1

49:
  %% compile_SUITE.erl:523
  %% Aliased:
  %%    _25
  _39 = match_fail `badmatch`, _25

  %% Unique:
  %%    _39
  _76 = succeeded:body _39
  br ^1

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _41

78:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% compile_SUITE.erl:565
%% Counter = 27
%% bs_ensure_opt: true
function `compile_SUITE`:`listings_big`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _14 = bif:is_list _0
  br _14, ^14, ^13

14:
  %% compile_SUITE.erl:566
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _5 = call (`get_files`/3), _0, `big`, `listings_big`

  %% Aliased:
  %%    _5
  _15 = succeeded:body _5
  br _15, ^20, ^1

20:
  %% Argument types:
  %%    _5 => {any(), any()}
  %% Aliased:
  %%    _5
  _7 = get_tuple_element _5, `0`

  %% Argument types:
  %%    _5 => {any(), any()}
  %% Aliased:
  %%    _5
  _6 = get_tuple_element _5, `1`

  %% compile_SUITE.erl:567
  %% Aliased:
  %%    _6
  TargetDir = call (`filename`:`dirname`/1), _6

  %% Aliased:
  %%    TargetDir
  _18 = succeeded:body TargetDir
  br _18, ^18, ^1

18:
  %% compile_SUITE.erl:575
  %% Aliased:
  %%    _7, 
  %%    TargetDir
  _8 = call (`p_listings`/3), `[{'S',".S"},
  {'E',".E"},
  {'P',".P"},
  {dssa,".ssa"},
  {dssaopt,".ssaopt"},
  {dprecg,".precodegen"},
  {to_dis,".dis"}]`, _7, TargetDir

  %% Aliased:
  %%    _8
  _19 = succeeded:body _8
  br _19, ^19, ^1

19:
  %% Aliased:
  %%    _8
  ret _8

13:
  %% compile_SUITE.erl:565
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-listings_big/1-',1}}
  _10 = match_fail `function_clause`, _0

  %% Unique:
  %%    _10
  _25 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% compile_SUITE.erl:577
%% Counter = 81
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list({atom(), nonempty_list(46..122)})
function `compile_SUITE`:`p_listings`(_0, _1, _2) {
0:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  Run = make_fun (`'-p_listings/3-fun-1-'`/3), _1, _2

  %% compile_SUITE.erl:595
  %% Aliased:
  %%    Run
  %% Unique:
  %%    _0
  _76 = call (`test_lib`:`p_run`/2), Run, _0

  %% Aliased:
  %%    _76
  _79 = succeeded:body _76
  br _79, ^79, ^1

79:
  %% Aliased:
  %%    _76
  ret _76

1:
  _77 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _77
}

%% compile_SUITE.erl:597
%% Counter = 268
%% bs_ensure_opt: true
function `compile_SUITE`:`other_output`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _115 = bif:is_list _0
  br _115, ^115, ^114

115:
  %% compile_SUITE.erl:598
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _34 = call (`get_files`/3), _0, `simple`, `"other_output"`

  %% Aliased:
  %%    _34
  _116 = succeeded:body _34
  br _116, ^267, ^1

267:
  %% compile_SUITE.erl:600
  _85 = call (`io`:`put_chars`/1), `"to_pp"`

  %% Aliased:
  %%    _85
  _119 = succeeded:body _85
  br _119, ^119, ^1

119:
  %% Argument types:
  %%    _34 => {any(), any()}
  %% Aliased:
  %%    _34
  _36 = get_tuple_element _34, `0`

  %% compile_SUITE.erl:601
  %% Aliased:
  %%    _36
  _37 = call (`compile`:`file`/2), _36, `[to_pp,binary,time]`

  %% Aliased:
  %%    _37
  _120 = succeeded:body _37
  br _120, ^120, ^1

120:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _255 = is_tagged_tuple _37, `3`, `ok`
  br _255, ^252, ^122

252:
  %% Argument types:
  %%    _37 => {'ok', any(), any()}
  %% Aliased:
  %%    _37
  _39 = get_tuple_element _37, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _251 = bif:'=:=' _39, `[]`
  br _251, ^251, ^122

251:
  %% Argument types:
  %%    _37 => {'ok', nil(), any()}
  %% Aliased:
  %%    _37
  _38 = get_tuple_element _37, `2`

  %% compile_SUITE.erl:602
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _38
  _11 = call (`'-other_output/1-lc$^0/1-0-'`/1), _38

  %% Unique:
  %%    _11
  _123 = succeeded:body _11
  br _123, ^249, ^1

249:
  %% compile_SUITE.erl:611
  _91 = call (`io`:`put_chars`/1), `"to_exp (file)"`

  %% Aliased:
  %%    _91
  _126 = succeeded:body _91
  br _126, ^126, ^1

126:
  %% compile_SUITE.erl:612
  %% Aliased:
  %%    _36
  _46 = call (`compile`:`file`/2), _36, `[to_exp,binary,time]`

  %% Aliased:
  %%    _46
  _127 = succeeded:body _46
  br _127, ^127, ^1

127:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _245 = is_tagged_tuple _46, `3`, `ok`
  br _245, ^242, ^129

242:
  %% Argument types:
  %%    _46 => {'ok', any(), any()}
  %% Aliased:
  %%    _46
  _48 = get_tuple_element _46, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _241 = bif:'=:=' _48, `[]`
  br _241, ^241, ^129

241:
  %% Argument types:
  %%    _46 => {'ok', nil(), any()}
  %% Aliased:
  %%    _46
  _47 = get_tuple_element _46, `2`

  %% compile_SUITE.erl:613
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _50 = bif:is_list _47
  br _50, ^238, ^131

238:
  %% compile_SUITE.erl:614
  %% Aliased:
  %%    _47
  _51 = call (`lists`:`keyfind`/3), `module`, `3`, _47

  %% Aliased:
  %%    _51
  _132 = succeeded:body _51
  br _132, ^132, ^1

132:
  %% Argument types:
  %%    _51 => 'false' | {any(), any(), 'module', ...}
  %% Aliased:
  %%    _51
  _234 = is_tagged_tuple _51, `4`, `attribute`
  br _234, ^229, ^134

229:
  %% Argument types:
  %%    _51 => {'attribute', any(), 'module', any()}
  %% Aliased:
  %%    _51
  _52 = get_tuple_element _51, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _228 = bif:'=:=' _52, `simple`
  br _228, ^227, ^134

227:
  %% compile_SUITE.erl:615
  _92 = call (`io`:`put_chars`/1), `"to_exp (forms)"`

  %% Aliased:
  %%    _92
  _135 = succeeded:body _92
  br _135, ^135, ^1

135:
  %% compile_SUITE.erl:616
  %% Aliased:
  %%    _38
  _56 = call (`compile`:`forms`/2), _38, `[to_exp,binary,time]`

  %% Aliased:
  %%    _56
  _136 = succeeded:body _56
  br _136, ^136, ^1

136:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _223 = is_tagged_tuple _56, `3`, `ok`
  br _223, ^220, ^138

220:
  %% Argument types:
  %%    _56 => {'ok', any(), any()}
  %% Aliased:
  %%    _56
  _58 = get_tuple_element _56, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _219 = bif:'=:=' _58, `[]`
  br _219, ^219, ^138

219:
  %% Argument types:
  %%    _56 => {'ok', nil(), any()}
  %% Aliased:
  %%    _56
  _57 = get_tuple_element _56, `2`

  %% Argument types:
  %%    _47 => maybe_improper_list(any(), any())
  %% Aliased:
  %%    _47, 
  %%    _57
  _139 = bif:'=:=' _57, _47
  br _139, ^139, ^138

139:
  %% compile_SUITE.erl:618
  _93 = call (`io`:`put_chars`/1), `"to_core (file)"`

  %% Aliased:
  %%    _93
  _140 = succeeded:body _93
  br _140, ^140, ^1

140:
  %% compile_SUITE.erl:619
  %% Aliased:
  %%    _36
  _60 = call (`compile`:`file`/2), _36, `[to_core,binary,time]`

  %% Aliased:
  %%    _60
  _141 = succeeded:body _60
  br _141, ^141, ^1

141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _215 = is_tagged_tuple _60, `3`, `ok`
  br _215, ^212, ^143

212:
  %% Argument types:
  %%    _60 => {'ok', any(), any()}
  %% Aliased:
  %%    _60
  _62 = get_tuple_element _60, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _211 = bif:'=:=' _62, `simple`
  br _211, ^210, ^143

210:
  %% Argument types:
  %%    _60 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _60
  _61 = get_tuple_element _60, `2`

  %% compile_SUITE.erl:620
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _64 = bif:element `1`, _61

  %% Aliased:
  %%    _64
  _144 = succeeded:body _64
  br _144, ^144, ^1

144:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _208 = bif:'=:=' _64, `c_module`
  br _208, ^207, ^146

207:
  %% compile_SUITE.erl:621
  %% Aliased:
  %%    _61
  _65 = call (`core_lint`:`module`/1), _61

  %% Aliased:
  %%    _65
  _147 = succeeded:body _65
  br _147, ^147, ^1

147:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _203 = is_tagged_tuple _65, `2`, `ok`
  br _203, ^200, ^149

200:
  %% compile_SUITE.erl:622
  _94 = call (`io`:`put_chars`/1), `"to_core (forms)"`

  %% Aliased:
  %%    _94
  _150 = succeeded:body _94
  br _150, ^150, ^1

150:
  %% compile_SUITE.erl:623
  %% Aliased:
  %%    _38
  _68 = call (`compile`:`forms`/2), _38, `[to_core,binary,time]`

  %% Aliased:
  %%    _68
  _151 = succeeded:body _68
  br _151, ^151, ^1

151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _196 = is_tagged_tuple _68, `3`, `ok`
  br _196, ^193, ^153

193:
  %% Argument types:
  %%    _68 => {'ok', any(), any()}
  %% Aliased:
  %%    _68
  _70 = get_tuple_element _68, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _192 = bif:'=:=' _70, `simple`
  br _192, ^191, ^153

191:
  %% Argument types:
  %%    _68 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _68
  _69 = get_tuple_element _68, `2`

  %% Argument types:
  %%    _61 => {any(), ...}
  %% Aliased:
  %%    _61, 
  %%    _69
  _154 = bif:'=:=' _69, _61
  br _154, ^154, ^153

154:
  %% compile_SUITE.erl:625
  _95 = call (`io`:`put_chars`/1), `"to_asm (file)"`

  %% Aliased:
  %%    _95
  _155 = succeeded:body _95
  br _155, ^155, ^1

155:
  %% compile_SUITE.erl:626
  %% Aliased:
  %%    _36
  _72 = call (`compile`:`file`/2), _36, `[to_asm,binary,time]`

  %% Aliased:
  %%    _72
  _156 = succeeded:body _72
  br _156, ^156, ^1

156:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _187 = is_tagged_tuple _72, `3`, `ok`
  br _187, ^184, ^158

184:
  %% Argument types:
  %%    _72 => {'ok', any(), any()}
  %% Aliased:
  %%    _72
  _74 = get_tuple_element _72, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _183 = bif:'=:=' _74, `simple`
  br _183, ^182, ^158

182:
  %% Argument types:
  %%    _72 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _72
  _73 = get_tuple_element _72, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _178 = is_tagged_tuple _73, `5`, `simple`
  br _178, ^175, ^160

175:
  %% compile_SUITE.erl:628
  _96 = call (`io`:`put_chars`/1), `"to_asm (forms)"`

  %% Aliased:
  %%    _96
  _161 = succeeded:body _96
  br _161, ^161, ^1

161:
  %% compile_SUITE.erl:629
  %% Aliased:
  %%    _38
  _81 = call (`compile`:`forms`/2), _38, `[to_asm,binary,time]`

  %% Aliased:
  %%    _81
  _162 = succeeded:body _81
  br _162, ^162, ^1

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _171 = is_tagged_tuple _81, `3`, `ok`
  br _171, ^168, ^164

168:
  %% Argument types:
  %%    _81 => {'ok', any(), any()}
  %% Aliased:
  %%    _81
  _83 = get_tuple_element _81, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _167 = bif:'=:=' _83, `simple`
  br _167, ^166, ^164

166:
  %% Argument types:
  %%    _81 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _81
  _82 = get_tuple_element _81, `2`

  %% Argument types:
  %%    _73 => {'simple', any(), any(), any(), any()}
  %% Aliased:
  %%    _73, 
  %%    _82
  _165 = bif:'=:=' _82, _73
  br _165, ^165, ^164

165:
  %% Result type:
  %%    'ok'
  ret `ok`

164:
  %% compile_SUITE.erl:629
  %% Aliased:
  %%    _81
  _97 = match_fail `badmatch`, _81

  %% Unique:
  %%    _97
  _174 = succeeded:body _97
  br ^1

160:
  %% compile_SUITE.erl:627
  %% Aliased:
  %%    _73
  _98 = match_fail `badmatch`, _73

  %% Unique:
  %%    _98
  _181 = succeeded:body _98
  br ^1

158:
  %% compile_SUITE.erl:626
  %% Aliased:
  %%    _72
  _99 = match_fail `badmatch`, _72

  %% Unique:
  %%    _99
  _190 = succeeded:body _99
  br ^1

153:
  %% compile_SUITE.erl:623
  %% Aliased:
  %%    _68
  _100 = match_fail `badmatch`, _68

  %% Unique:
  %%    _100
  _199 = succeeded:body _100
  br ^1

149:
  %% compile_SUITE.erl:621
  %% Aliased:
  %%    _65
  _101 = match_fail `badmatch`, _65

  %% Unique:
  %%    _101
  _206 = succeeded:body _101
  br ^1

146:
  %% compile_SUITE.erl:620
  %% Aliased:
  %%    _64
  _102 = match_fail `badmatch`, _64

  %% Unique:
  %%    _102
  _209 = succeeded:body _102
  br ^1

143:
  %% compile_SUITE.erl:619
  %% Aliased:
  %%    _60
  _103 = match_fail `badmatch`, _60

  %% Unique:
  %%    _103
  _218 = succeeded:body _103
  br ^1

138:
  %% compile_SUITE.erl:616
  %% Aliased:
  %%    _56
  _104 = match_fail `badmatch`, _56

  %% Unique:
  %%    _104
  _226 = succeeded:body _104
  br ^1

134:
  %% compile_SUITE.erl:614
  %% Aliased:
  %%    _51
  _105 = match_fail `badmatch`, _51

  %% Unique:
  %%    _105
  _237 = succeeded:body _105
  br ^1

131:
  %% compile_SUITE.erl:613
  _106 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _106
  _240 = succeeded:body _106
  br ^1

129:
  %% compile_SUITE.erl:612
  %% Aliased:
  %%    _46
  _107 = match_fail `badmatch`, _46

  %% Unique:
  %%    _107
  _248 = succeeded:body _107
  br ^1

122:
  %% compile_SUITE.erl:601
  %% Aliased:
  %%    _37
  _109 = match_fail `badmatch`, _37

  %% Unique:
  %%    _109
  _258 = succeeded:body _109
  br ^1

114:
  %% compile_SUITE.erl:597
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-other_output/1-',1}}
  _111 = match_fail `function_clause`, _0

  %% Unique:
  %%    _111
  _264 = succeeded:body _111
  br ^1

1:
  _112 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _112
}

%% compile_SUITE.erl:633
%% Counter = 136
%% bs_ensure_opt: true
function `compile_SUITE`:`encrypted_abstr`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _44 = bif:is_list _0
  br _44, ^44, ^43

44:
  %% compile_SUITE.erl:634
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _18 = call (`get_files`/3), _0, `simple`, `"encrypted_abstr"`

  %% Aliased:
  %%    _18
  _45 = succeeded:body _18
  br _45, ^98, ^1

98:
  %% compile_SUITE.erl:636
  %% Result type:
  %%    'false' | 'true'
  _21 = call (`has_crypto`/0)

  %% Unique:
  %%    _21
  _48 = succeeded:body _21
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    _18 => {any(), any()}
  %% Aliased:
  %%    _18
  _20 = get_tuple_element _18, `0`

  %% Argument types:
  %%    _18 => {any(), any()}
  %% Aliased:
  %%    _18
  _19 = get_tuple_element _18, `1`
  br _21, ^90, ^89

90:
  %% compile_SUITE.erl:644
  OldPath = call (`code`:`get_path`/0)

  %% Aliased:
  %%    OldPath
  _52 = succeeded:body OldPath
  br _52, ^132, ^1

132:
  br ^134

134:
  _57 = new_try_tag `'try'`
  br _57, ^56, ^54

56:
  %% compile_SUITE.erl:646
  _3 = call (`code`:`which`/1), `crypto`

  %% Aliased:
  %%    _3
  _58 = succeeded:body _3
  br _58, ^58, ^54

58:
  %% compile_SUITE.erl:646
  %% Aliased:
  %%    _3
  _4 = call (`filename`:`dirname`/1), _3

  %% Aliased:
  %%    _4
  _59 = succeeded:body _4
  br _59, ^59, ^54

59:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _22 = put_list _4, `[]`

  %% compile_SUITE.erl:646
  %% Aliased:
  %%    OldPath
  %% Unique:
  %%    _22
  NewPath = call (`erlang`:`'--'`/2), OldPath, _22

  %% Aliased:
  %%    NewPath
  _60 = succeeded:body NewPath
  br _60, ^133, ^54

133:
  br ^135

135:
  _65 = new_try_tag `'try'`
  br _65, ^64, ^62

64:
  %% compile_SUITE.erl:647
  _26 = call (`crypto`:`stop`/0)

  %% Aliased:
  %%    _26
  _66 = succeeded:body _26
  br _66, ^66, ^62

66:
  %% Unique:
  %%    _65
  _69 = kill_try_tag _65
  br ^63

62:
  %% Unique:
  %%    _65
  _67 = landingpad `'try'`, _65

  %% Unique:
  %%    _65
  _68 = kill_try_tag _65
  br ^63

63:
  %% compile_SUITE.erl:648
  _27 = call (`code`:`delete`/1), `crypto`

  %% Aliased:
  %%    _27
  _70 = succeeded:body _27
  br _70, ^70, ^54

70:
  %% compile_SUITE.erl:649
  _28 = call (`code`:`purge`/1), `crypto`

  %% Aliased:
  %%    _28
  _71 = succeeded:body _28
  br _71, ^71, ^54

71:
  %% compile_SUITE.erl:650
  %% Aliased:
  %%    NewPath
  _29 = call (`code`:`set_path`/1), NewPath

  %% Aliased:
  %%    _29
  _72 = succeeded:body _29
  br _72, ^72, ^54

72:
  %% compile_SUITE.erl:651
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _19, 
  %%    _20
  _30 = call (`encrypted_abstr_no_crypto`/2), _20, _19

  %% Unique:
  %%    _30
  _73 = succeeded:body _30
  br _73, ^73, ^54

73:
  %% Unique:
  %%    _57
  _79 = kill_try_tag _57

  %% compile_SUITE.erl:653
  %% Aliased:
  %%    OldPath
  _31 = call (`code`:`set_path`/1), OldPath

  %% Aliased:
  %%    _31
  _74 = succeeded:body _31
  br _74, ^55, ^1

55:
  %% compile_SUITE.erl:657
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _19, 
  %%    _20
  _34 = call (`encrypted_abstr_1`/2), _20, _19

  %% Unique:
  %%    _34
  _80 = succeeded:body _34
  br _80, ^80, ^1

80:
  %% compile_SUITE.erl:658
  %% Aliased:
  %%    _19
  _23 = call (`file`:`delete`/1), _19

  %% Aliased:
  %%    _23
  _81 = succeeded:body _23
  br _81, ^81, ^1

81:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _87 = bif:'=:=' _23, `ok`
  br _87, ^86, ^83

86:
  %% compile_SUITE.erl:659
  %% Aliased:
  %%    _19
  _12 = call (`filename`:`dirname`/1), _19

  %% Aliased:
  %%    _12
  _84 = succeeded:body _12
  br _84, ^84, ^1

84:
  %% compile_SUITE.erl:659
  %% Aliased:
  %%    _12
  _35 = call (`file`:`del_dir_r`/1), _12

  %% Aliased:
  %%    _35
  _85 = succeeded:body _35
  br _85, ^85, ^1

85:
  %% Aliased:
  %%    _35
  ret _35

83:
  %% compile_SUITE.erl:658
  %% Aliased:
  %%    _23
  _36 = match_fail `badmatch`, _23

  %% Unique:
  %%    _36
  _88 = succeeded:body _36
  br ^1

54:
  %% Unique:
  %%    _57
  _77 = landingpad `'try'`, _57

  %% Aliased:
  %%    _77
  _9 = extract _77, `1`

  %% Aliased:
  %%    _77
  _8 = extract _77, `2`

  %% Unique:
  %%    _57
  _78 = kill_try_tag _57
  br ^101

101:
  %% compile_SUITE.erl:653
  %% Aliased:
  %%    OldPath
  _32 = call (`code`:`set_path`/1), OldPath

  %% Aliased:
  %%    _32
  _75 = succeeded:body _32
  br _75, ^75, ^1

75:
  %% Aliased:
  %%    _8, 
  %%    _9
  _33 = resume _8, _9

  %% Unique:
  %%    _33
  _76 = succeeded:body _33
  br ^1

89:
  %% compile_SUITE.erl:639
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _19, 
  %%    _20
  _37 = call (`encrypted_abstr_no_crypto`/2), _20, _19

  %% Unique:
  %%    _37
  _51 = succeeded:body _37
  br _51, ^51, ^1

51:
  %% Result type:
  %%    {'comment', nonempty_list(32..121)}
  ret `{comment,"The crypto application is missing or broken"}`

43:
  %% compile_SUITE.erl:633
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-encrypted_abstr/1-',1}}
  _40 = match_fail `function_clause`, _0

  %% Unique:
  %%    _40
  _97 = succeeded:body _40
  br ^1

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _41
}

%% compile_SUITE.erl:665
%% Counter = 338
%% bs_ensure_opt: true
function `compile_SUITE`:`encrypted_abstr_1`(_0, _1) {
0:
  %% compile_SUITE.erl:666
  %% Aliased:
  %%    _1
  TargetDir = call (`filename`:`dirname`/1), _1

  %% Aliased:
  %%    TargetDir
  _177 = succeeded:body TargetDir
  br _177, ^177, ^1

177:
  %% compile_SUITE.erl:668
  %% Result type:
  %%    'ok'
  _128 = call (`install_crypto_key`/1), `"ablurf123BX#$;3"`

  %% Aliased:
  %%    _128
  _178 = succeeded:body _128
  br _178, ^178, ^1

178:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _54 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _54 => {'outdir', any()}
  %% Unique:
  %%    _54
  _55 = put_list _54, `[]`

  %% Argument types:
  %%    _55 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _55
  _56 = put_list `{debug_info_key,"ablurf123BX#$;3"}`, _55

  %% Argument types:
  %%    _56 => nonempty_list({'debug_info_key', nonempty_list(35..117)} | {'outdir', any()})
  %% Unique:
  %%    _56
  _57 = put_list `debug_info`, _56

  %% compile_SUITE.erl:669
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _57
  _58 = call (`compile`:`file`/2), _0, _57

  %% Aliased:
  %%    _58
  _179 = succeeded:body _58
  br _179, ^179, ^1

179:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _328 = bif:'=:=' _58, `{ok,simple}`
  br _328, ^328, ^181

328:
  %% compile_SUITE.erl:672
  %% Result type:
  %%    {'debug_info', any()}
  %% Aliased:
  %%    _1
  _129 = call (`verify_abstract`/2), _1, `erl_abstract_code`

  %% Aliased:
  %%    _129
  _182 = succeeded:body _129
  br _182, ^182, ^1

182:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _59 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _59 => {'outdir', any()}
  %% Unique:
  %%    _59
  _60 = put_list _59, `[]`

  %% Argument types:
  %%    _60 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _60
  _61 = put_list `{debug_info_key,"ablurf123BX#$;3"}`, _60

  %% compile_SUITE.erl:674
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _61
  _62 = call (`compile`:`file`/2), _0, _61

  %% Aliased:
  %%    _62
  _183 = succeeded:body _62
  br _183, ^183, ^1

183:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _326 = bif:'=:=' _62, `{ok,simple}`
  br _326, ^326, ^185

326:
  %% compile_SUITE.erl:677
  %% Result type:
  %%    {'debug_info', any()}
  %% Aliased:
  %%    _1
  _130 = call (`verify_abstract`/2), _1, `erl_abstract_code`

  %% Aliased:
  %%    _130
  _186 = succeeded:body _130
  br _186, ^186, ^1

186:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _63 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _63 => {'outdir', any()}
  %% Unique:
  %%    _63
  _64 = put_list _63, `[]`

  %% Argument types:
  %%    _64 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _64
  _65 = put_list `{debug_info_key,{des3_cbc,"ablurf123BX#$;3"}}`, _64

  %% Argument types:
  %%    _65 => nonempty_list({'debug_info_key', {'des3_cbc', nonempty_list(35..117)}} | {'outdir', any()})
  %% Unique:
  %%    _65
  _66 = put_list `debug_info`, _65

  %% compile_SUITE.erl:679
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _66
  _67 = call (`compile`:`file`/2), _0, _66

  %% Aliased:
  %%    _67
  _187 = succeeded:body _67
  br _187, ^187, ^1

187:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _324 = bif:'=:=' _67, `{ok,simple}`
  br _324, ^324, ^189

324:
  %% compile_SUITE.erl:682
  %% Result type:
  %%    {'debug_info', any()}
  %% Aliased:
  %%    _1
  _131 = call (`verify_abstract`/2), _1, `erl_abstract_code`

  %% Aliased:
  %%    _131
  _190 = succeeded:body _131
  br _190, ^190, ^1

190:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _68 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _68 => {'outdir', any()}
  %% Unique:
  %%    _68
  _69 = put_list _68, `[]`

  %% Argument types:
  %%    _69 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _69
  _70 = put_list `{debug_info_key,"ablurf123BX#$;3"}`, _69

  %% Argument types:
  %%    _70 => nonempty_list({'debug_info_key', nonempty_list(35..117)} | {'outdir', any()})
  %% Unique:
  %%    _70
  _71 = put_list `{debug_info,{compile_SUITE,ok}}`, _70

  %% compile_SUITE.erl:684
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _71
  _72 = call (`compile`:`file`/2), _0, _71

  %% Aliased:
  %%    _72
  _191 = succeeded:body _72
  br _191, ^191, ^1

191:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _322 = bif:'=:=' _72, `{ok,simple}`
  br _322, ^322, ^193

322:
  %% compile_SUITE.erl:688
  %% Result type:
  %%    {'debug_info', any()}
  %% Aliased:
  %%    _1
  _132 = call (`verify_abstract`/2), _1, `compile_SUITE`

  %% Aliased:
  %%    _132
  _194 = succeeded:body _132
  br _194, ^194, ^1

194:
  %% compile_SUITE.erl:691
  %% Aliased:
  %%    _1
  _73 = call (`beam_lib`:`chunks`/2), _1, `[compile_info]`

  %% Aliased:
  %%    _73
  _195 = succeeded:body _73
  br _195, ^195, ^1

195:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _318 = is_tagged_tuple _73, `2`, `ok`
  br _318, ^315, ^197

315:
  %% Argument types:
  %%    _73 => {'ok', any()}
  %% Aliased:
  %%    _73
  _74 = get_tuple_element _73, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _312 = is_tagged_tuple _74, `2`, `simple`
  br _312, ^309, ^197

309:
  %% Argument types:
  %%    _74 => {'simple', any()}
  %% Aliased:
  %%    _74
  _76 = get_tuple_element _74, `1`

  %% Aliased:
  %%    _76
  _308 = is_nonempty_list _76
  br _308, ^308, ^197

308:
  %% Argument types:
  %%    _76 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _76
  _79 = get_hd _76

  %% Argument types:
  %%    _76 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _76
  _78 = get_tl _76

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _305 = is_tagged_tuple _79, `2`, `compile_info`
  br _305, ^302, ^197

302:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _301 = bif:'=:=' _78, `[]`
  br _301, ^301, ^197

301:
  %% Argument types:
  %%    _79 => {'compile_info', any()}
  %% Aliased:
  %%    _79
  _80 = get_tuple_element _79, `1`

  %% compile_SUITE.erl:692
  %% Aliased:
  %%    _80
  _82 = call (`lists`:`keyfind`/3), `options`, `1`, _80

  %% Aliased:
  %%    _82
  _198 = succeeded:body _82
  br _198, ^198, ^1

198:
  %% Argument types:
  %%    _82 => 'false' | {'options', ...}
  %% Aliased:
  %%    _82
  _297 = bif:is_tuple _82
  br _297, ^297, ^200

297:
  %% Argument types:
  %%    _82 => {'options', ...}
  %% Aliased:
  %%    _82
  _298 = bif:tuple_size _82

  %% Argument types:
  %%    _298 => 1..16777215
  %% Unique:
  %%    _298
  _299 = bif:'=:=' _298, `2`
  br _299, ^334, ^200

334:
  %% Argument types:
  %%    _82 => {'options', any()}
  %% Aliased:
  %%    _82
  _83 = get_tuple_element _82, `1`

  %% compile_SUITE.erl:693
  %% Aliased:
  %%    _83
  _85 = call (`lists`:`keyfind`/3), `debug_info_key`, `1`, _83

  %% Aliased:
  %%    _85
  _201 = succeeded:body _85
  br _201, ^201, ^1

201:
  %% Argument types:
  %%    _85 => 'false' | {'debug_info_key', ...}
  %% Aliased:
  %%    _85
  _292 = bif:is_tuple _85
  br _292, ^292, ^203

292:
  %% Argument types:
  %%    _85 => {'debug_info_key', ...}
  %% Aliased:
  %%    _85
  _293 = bif:tuple_size _85

  %% Argument types:
  %%    _293 => 1..16777215
  %% Unique:
  %%    _293
  _294 = bif:'=:=' _293, `2`
  br _294, ^291, ^203

291:
  %% Argument types:
  %%    _85 => {'debug_info_key', any()}
  %% Aliased:
  %%    _85
  _86 = get_tuple_element _85, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _290 = bif:'=:=' _86, `'********'`
  br _290, ^289, ^203

289:
  %% compile_SUITE.erl:696
  %% Aliased:
  %%    _0
  _88 = call (`compile`:`file`/2), _0, `[debug_info,{debug_info_key,{blurf,"ss"}},report]`

  %% Aliased:
  %%    _88
  _204 = succeeded:body _88
  br _204, ^204, ^1

204:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _287 = bif:'=:=' _88, `error`
  br _287, ^286, ^206

286:
  %% compile_SUITE.erl:698
  %% Aliased:
  %%    _0
  _89 = call (`compile`:`file`/2), _0, `[debug_info,{debug_info_key,{blurf,1,"ss"}},report]`

  %% Aliased:
  %%    _89
  _207 = succeeded:body _89
  br _207, ^207, ^1

207:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _284 = bif:'=:=' _89, `error`
  br _284, ^283, ^209

283:
  %% compile_SUITE.erl:700
  %% Aliased:
  %%    _0
  _90 = call (`compile`:`file`/2), _0, `[debug_info,{debug_info_key,42},report]`

  %% Aliased:
  %%    _90
  _210 = succeeded:body _90
  br _210, ^210, ^1

210:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _281 = bif:'=:=' _90, `error`
  br _281, ^280, ^212

280:
  %% compile_SUITE.erl:703
  _133 = call (`beam_lib`:`clear_crypto_key_fun`/0)

  %% Aliased:
  %%    _133
  _213 = succeeded:body _133
  br _213, ^213, ^1

213:
  %% compile_SUITE.erl:707
  %% Aliased:
  %%    TargetDir
  TestHome = call (`filename`:`join`/2), TargetDir, `"home"`

  %% Aliased:
  %%    TestHome
  _214 = succeeded:body TestHome
  br _214, ^214, ^1

214:
  %% compile_SUITE.erl:708
  %% Aliased:
  %%    TestHome
  _134 = call (`filelib`:`ensure_dir`/1), TestHome

  %% Aliased:
  %%    _134
  _215 = succeeded:body _134
  br _215, ^215, ^1

215:
  %% compile_SUITE.erl:709
  _91 = call (`os`:`type`/0)

  %% Aliased:
  %%    _91
  _216 = succeeded:body _91
  br _216, ^216, ^1

216:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _229 = is_tagged_tuple _91, `2`, `win32`
  br _229, ^226, ^218

226:
  %% compile_SUITE.erl:711
  %% Aliased:
  %%    TestHome
  _95 = call (`filename`:`split`/1), TestHome

  %% Aliased:
  %%    _95
  _219 = succeeded:body _95
  br _219, ^219, ^1

219:
  %% Aliased:
  %%    _95
  _224 = is_nonempty_list _95
  br _224, ^224, ^221

224:
  %% Argument types:
  %%    _95 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _95
  _97 = get_hd _95

  %% Argument types:
  %%    _95 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _95
  _96 = get_tl _95

  %% compile_SUITE.erl:712
  %% Aliased:
  %%    TestHome
  _17 = call (`filename`:`join`/2), TestHome, `"AppData"`

  %% Aliased:
  %%    _17
  _222 = succeeded:body _17
  br _222, ^222, ^1

222:
  %% compile_SUITE.erl:713
  %% Aliased:
  %%    _96
  _16 = call (`filename`:`join`/1), _96

  %% Aliased:
  %%    _16
  _223 = succeeded:body _16
  br _223, ^223, ^1

223:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _98 = put_tuple `"HOMEPATH"`, _16

  %% Argument types:
  %%    _98 => {nonempty_list(65..84), any()}
  %% Unique:
  %%    _98
  _99 = put_list _98, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _100 = put_tuple `"HOMEDRIVE"`, _97

  %% Argument types:
  %%    _100 => {nonempty_list(68..86), any()}
  %%    _99 => nonempty_list({nonempty_list(65..84), any()})
  %% Unique:
  %%    _99, 
  %%    _100
  _101 = put_list _100, _99

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _102 = put_tuple `"APPDATA"`, _17

  %% Argument types:
  %%    _102 => {nonempty_list(65..84), any()}
  %%    _101 => nonempty_list({nonempty_list(65..86), any()})
  %% Unique:
  %%    _101, 
  %%    _102
  _136 = put_list _102, _101
  br ^217

221:
  %% compile_SUITE.erl:711
  %% Aliased:
  %%    _95
  _137 = match_fail `badmatch`, _95

  %% Unique:
  %%    _137
  _225 = succeeded:body _137
  br ^1

218:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TestHome
  _92 = put_tuple `"HOME"`, TestHome

  %% Argument types:
  %%    _92 => {nonempty_list(69..79), any()}
  %% Unique:
  %%    _92
  _138 = put_list _92, `[]`
  br ^217

217:
  _19 = phi { _138, ^218 }, { _136, ^223 }

  %% compile_SUITE.erl:718
  %% Unique:
  %%    _19
  _21 = put_map `assoc`, `#{}`, `env`, _19

  %% compile_SUITE.erl:718
  %% Unique:
  %%    _21
  _103 = call (`test_server`:`start_peer`/3), _21, `compile_SUITE`, `encrypted_abstr_1`

  %% Aliased:
  %%    _103
  _232 = succeeded:body _103
  br _232, ^232, ^1

232:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _276 = is_tagged_tuple _103, `3`, `ok`
  br _276, ^275, ^234

275:
  %% Argument types:
  %%    _103 => {'ok', any(), any()}
  %% Aliased:
  %%    _103
  _105 = get_tuple_element _103, `1`

  %% Result type:
  %%    {'error', 'beam_lib', {'key_missing_or_invalid', nonempty_list(46..115), 'abstract_code'}}
  %% Aliased:
  %%    _0, 
  %%    TargetDir, 
  %%    TestHome
  _41 = make_fun (`'-encrypted_abstr_1/2-fun-0-'`/3), _0, TargetDir, TestHome

  %% Argument types:
  %%    _103 => {'ok', any(), any()}
  %% Aliased:
  %%    _103
  _104 = get_tuple_element _103, `2`

  %% compile_SUITE.erl:720
  %% Aliased:
  %%    _41, 
  %%    _104
  _159 = call (`erpc`:`call`/2), _104, _41

  %% Aliased:
  %%    _159
  _235 = succeeded:body _159
  br _235, ^235, ^1

235:
  %% compile_SUITE.erl:772
  %% Aliased:
  %%    _105
  _160 = call (`peer`:`stop`/1), _105

  %% Aliased:
  %%    _160
  _236 = succeeded:body _160
  br _236, ^236, ^1

236:
  %% compile_SUITE.erl:776
  %% Result type:
  %%    'ok'
  _161 = call (`install_crypto_key`/1), `"an old key"`

  %% Aliased:
  %%    _161
  _237 = succeeded:body _161
  br _237, ^237, ^1

237:
  %% compile_SUITE.erl:777
  %% Aliased:
  %%    _0
  _42 = call (`filename`:`dirname`/1), _0

  %% Aliased:
  %%    _42
  _238 = succeeded:body _42
  br _238, ^238, ^1

238:
  %% compile_SUITE.erl:777
  %% Aliased:
  %%    _42
  KeyCompat = call (`filename`:`join`/2), _42, `"key_compatibility"`

  %% Aliased:
  %%    KeyCompat
  _239 = succeeded:body KeyCompat
  br _239, ^239, ^1

239:
  %% compile_SUITE.erl:779
  %% Aliased:
  %%    KeyCompat
  _117 = call (`beam_lib`:`chunks`/2), KeyCompat, `[abstract_code]`

  %% Aliased:
  %%    _117
  _240 = succeeded:body _117
  br _240, ^240, ^1

240:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _269 = is_tagged_tuple _117, `2`, `ok`
  br _269, ^266, ^242

266:
  %% Argument types:
  %%    _117 => {'ok', any()}
  %% Aliased:
  %%    _117
  _118 = get_tuple_element _117, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _263 = is_tagged_tuple _118, `2`, `key_compatibility`
  br _263, ^260, ^242

260:
  %% Argument types:
  %%    _118 => {'key_compatibility', any()}
  %% Aliased:
  %%    _118
  _120 = get_tuple_element _118, `1`

  %% Aliased:
  %%    _120
  _259 = is_nonempty_list _120
  br _259, ^259, ^242

259:
  %% Argument types:
  %%    _120 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _120
  _123 = get_hd _120

  %% Argument types:
  %%    _120 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _120
  _122 = get_tl _120

  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _258 = bif:'=:=' _122, `[]`
  br _258, ^258, ^242

258:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _254 = is_tagged_tuple _123, `2`, `abstract_code`
  br _254, ^251, ^244

251:
  %% Argument types:
  %%    _123 => {'abstract_code', any()}
  %% Aliased:
  %%    _123
  _124 = get_tuple_element _123, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _124
  _248 = is_tagged_tuple _124, `2`, `raw_abstract_v1`
  br _248, ^245, ^244

245:
  %% Result type:
  %%    'ok'
  ret `ok`

244:
  %% compile_SUITE.erl:781
  %% Aliased:
  %%    _123
  _162 = match_fail `badmatch`, _123

  %% Unique:
  %%    _162
  _257 = succeeded:body _162
  br ^1

242:
  %% compile_SUITE.erl:779
  %% Aliased:
  %%    _117
  _163 = match_fail `badmatch`, _117

  %% Unique:
  %%    _163
  _272 = succeeded:body _163
  br ^1

234:
  %% compile_SUITE.erl:718
  %% Aliased:
  %%    _103
  _164 = match_fail `badmatch`, _103

  %% Unique:
  %%    _164
  _279 = succeeded:body _164
  br ^1

212:
  %% compile_SUITE.erl:700
  %% Aliased:
  %%    _90
  _165 = match_fail `badmatch`, _90

  %% Unique:
  %%    _165
  _282 = succeeded:body _165
  br ^1

209:
  %% compile_SUITE.erl:698
  %% Aliased:
  %%    _89
  _166 = match_fail `badmatch`, _89

  %% Unique:
  %%    _166
  _285 = succeeded:body _166
  br ^1

206:
  %% compile_SUITE.erl:696
  %% Aliased:
  %%    _88
  _167 = match_fail `badmatch`, _88

  %% Unique:
  %%    _167
  _288 = succeeded:body _167
  br ^1

203:
  %% compile_SUITE.erl:693
  %% Aliased:
  %%    _85
  _168 = match_fail `badmatch`, _85

  %% Unique:
  %%    _168
  _295 = succeeded:body _168
  br ^1

200:
  %% compile_SUITE.erl:692
  %% Aliased:
  %%    _82
  _169 = match_fail `badmatch`, _82

  %% Unique:
  %%    _169
  _300 = succeeded:body _169
  br ^1

197:
  %% compile_SUITE.erl:690
  %% Aliased:
  %%    _73
  _170 = match_fail `badmatch`, _73

  %% Unique:
  %%    _170
  _321 = succeeded:body _170
  br ^1

193:
  %% compile_SUITE.erl:684
  %% Aliased:
  %%    _72
  _171 = match_fail `badmatch`, _72

  %% Unique:
  %%    _171
  _323 = succeeded:body _171
  br ^1

189:
  %% compile_SUITE.erl:679
  %% Aliased:
  %%    _67
  _172 = match_fail `badmatch`, _67

  %% Unique:
  %%    _172
  _325 = succeeded:body _172
  br ^1

185:
  %% compile_SUITE.erl:674
  %% Aliased:
  %%    _62
  _173 = match_fail `badmatch`, _62

  %% Unique:
  %%    _173
  _327 = succeeded:body _173
  br ^1

181:
  %% compile_SUITE.erl:669
  %% Aliased:
  %%    _58
  _174 = match_fail `badmatch`, _58

  %% Unique:
  %%    _174
  _329 = succeeded:body _174
  br ^1

1:
  _175 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _175
}

%% compile_SUITE.erl:785
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(32..121)
function `compile_SUITE`:`write_crypt_file`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => nonempty_list(32..121)
  %% Aliased:
  %%    _1
  _8 = put_list _1, `["\"}].\n"]`

  %% Argument types:
  %%    _8 => nonempty_list(nonempty_list(10..125))
  %% Aliased:
  %%    _8
  Contents = put_list `"[{debug_info,des3_cbc,simple,\""`, _8

  %% Argument types:
  %%    Contents => nonempty_list(nonempty_list(10..125))
  %% Aliased:
  %%    Contents
  _9 = put_list Contents, `[]`

  %% Argument types:
  %%    _9 => nonempty_list(nonempty_list(nonempty_list(10..125)))
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _9
  _10 = put_list _0, _9

  %% compile_SUITE.erl:787
  %% Unique:
  %%    _10
  _12 = call (`io`:`format`/2), `"~s: ~s\n"`, _10

  %% Aliased:
  %%    _12
  _17 = succeeded:body _12
  br _17, ^17, ^1

17:
  %% compile_SUITE.erl:788
  %% Aliased:
  %%    _0
  _11 = call (`filelib`:`ensure_dir`/1), _0

  %% Aliased:
  %%    _11
  _18 = succeeded:body _11
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _28 = bif:'=:=' _11, `ok`
  br _28, ^27, ^20

27:
  %% compile_SUITE.erl:789
  %% Aliased:
  %%    _0, 
  %%    Contents
  _7 = call (`file`:`write_file`/2), _0, Contents

  %% Aliased:
  %%    _7
  _21 = succeeded:body _7
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _25 = bif:'=:=' _7, `ok`
  br _25, ^24, ^23

24:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _7
  ret _7

23:
  %% compile_SUITE.erl:789
  %% Aliased:
  %%    _7
  _13 = match_fail `badmatch`, _7

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br ^1

20:
  %% compile_SUITE.erl:788
  %% Aliased:
  %%    _11
  _14 = match_fail `badmatch`, _11

  %% Unique:
  %%    _14
  _29 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% compile_SUITE.erl:791
%% Counter = 25
%% bs_ensure_opt: true
function `compile_SUITE`:`encrypted_abstr_no_crypto`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = put_list _0, `[]`

  %% compile_SUITE.erl:792
  %% Unique:
  %%    _5
  _11 = call (`io`:`format`/2), `"simpe: ~p~n"`, _5

  %% Aliased:
  %%    _11
  _15 = succeeded:body _11
  br _15, ^15, ^1

15:
  %% compile_SUITE.erl:793
  %% Aliased:
  %%    _1
  TargetDir = call (`filename`:`dirname`/1), _1

  %% Aliased:
  %%    TargetDir
  _16 = succeeded:body TargetDir
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _6 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _6 => {'outdir', any()}
  %% Unique:
  %%    _6
  _7 = put_list _6, `[report]`

  %% Argument types:
  %%    _7 => nonempty_list('report' | {'outdir', any()})
  %% Unique:
  %%    _7
  _8 = put_list `{debug_info_key,"ablurf123BX#$;3"}`, _7

  %% Argument types:
  %%    _8 => nonempty_list('report' | {'debug_info_key', nonempty_list(35..117)} | {'outdir', any()})
  %% Unique:
  %%    _8
  _9 = put_list `debug_info`, _8

  %% compile_SUITE.erl:795
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _9
  _10 = call (`compile`:`file`/2), _0, _9

  %% Aliased:
  %%    _10
  _17 = succeeded:body _10
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _21 = bif:'=:=' _10, `error`
  br _21, ^20, ^19

20:
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  %% compile_SUITE.erl:795
  %% Aliased:
  %%    _10
  _12 = match_fail `badmatch`, _10

  %% Unique:
  %%    _12
  _22 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compile_SUITE.erl:800
%% Counter = 83
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     'compile_SUITE' | 'erl_abstract_code'
function `compile_SUITE`:`verify_abstract`(_0, _1) {
0:
  %% compile_SUITE.erl:801
  %% Aliased:
  %%    _0
  _10 = call (`beam_lib`:`chunks`/2), _0, `[abstract_code,debug_info]`

  %% Aliased:
  %%    _10
  _33 = succeeded:body _10
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _79 = is_tagged_tuple _10, `2`, `ok`
  br _79, ^76, ^35

76:
  %% Argument types:
  %%    _10 => {'ok', any()}
  %% Aliased:
  %%    _10
  _11 = get_tuple_element _10, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _73 = is_tagged_tuple _11, `2`, `simple`
  br _73, ^70, ^35

70:
  %% Argument types:
  %%    _11 => {'simple', any()}
  %% Aliased:
  %%    _11
  _13 = get_tuple_element _11, `1`

  %% Aliased:
  %%    _13
  _69 = is_nonempty_list _13
  br _69, ^69, ^35

69:
  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _16 = get_hd _13

  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _15 = get_tl _13

  %% Aliased:
  %%    _15
  _68 = is_nonempty_list _15
  br _68, ^68, ^35

68:
  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _18 = get_hd _15

  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _17 = get_tl _15

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _67 = bif:'=:=' _17, `[]`
  br _67, ^67, ^35

67:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _63 = is_tagged_tuple _16, `2`, `abstract_code`
  br _63, ^60, ^37

60:
  %% Argument types:
  %%    _16 => {'abstract_code', any()}
  %% Aliased:
  %%    _16
  _19 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _57 = is_tagged_tuple _19, `2`, `raw_abstract_v1`
  br _57, ^54, ^37

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _50 = is_tagged_tuple _18, `2`, `debug_info`
  br _50, ^47, ^39

47:
  %% Argument types:
  %%    _18 => {'debug_info', any()}
  %% Aliased:
  %%    _18
  _23 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _44 = is_tagged_tuple _23, `3`, `debug_info_v1`
  br _44, ^41, ^39

41:
  %% Argument types:
  %%    _23 => {'debug_info_v1', any(), any()}
  %% Aliased:
  %%    _23
  _26 = get_tuple_element _23, `1`

  %% Argument types:
  %%    _1 => 'compile_SUITE' | 'erl_abstract_code'
  %% Aliased:
  %%    _26
  %% Unique:
  %%    _1
  _40 = bif:'=:=' _26, _1
  br _40, ^40, ^39

40:
  %% Result type:
  %%    {'debug_info', any()}
  %% Aliased:
  %%    _18
  ret _18

39:
  %% compile_SUITE.erl:803
  %% Aliased:
  %%    _18
  _28 = match_fail `badmatch`, _18

  %% Unique:
  %%    _28
  _53 = succeeded:body _28
  br ^1

37:
  %% compile_SUITE.erl:802
  %% Aliased:
  %%    _16
  _29 = match_fail `badmatch`, _16

  %% Unique:
  %%    _29
  _66 = succeeded:body _29
  br ^1

35:
  %% compile_SUITE.erl:801
  %% Aliased:
  %%    _10
  _30 = match_fail `badmatch`, _10

  %% Unique:
  %%    _30
  _82 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% compile_SUITE.erl:805
%% Counter = 47
%% bs_ensure_opt: true
function `compile_SUITE`:`has_crypto`() {
0:
  br ^46

46:
  _19 = new_try_tag `'try'`
  br _19, ^18, ^16

18:
  %% compile_SUITE.erl:807
  _10 = call (`crypto`:`start`/0)

  %% Aliased:
  %%    _10
  _20 = succeeded:body _10
  br _20, ^20, ^16

20:
  %% compile_SUITE.erl:808
  _11 = call (`crypto`:`stop`/0)

  %% Aliased:
  %%    _11
  _21 = succeeded:body _11
  br _21, ^15, ^16

15:
  %% Unique:
  %%    _19
  _29 = kill_try_tag _19
  %% Result type:
  %%    'true'
  ret `true`

16:
  %% Unique:
  %%    _19
  _27 = landingpad `'try'`, _19

  %% Aliased:
  %%    _27
  _3 = extract _27, `0`

  %% Aliased:
  %%    _27
  _2 = extract _27, `1`

  %% Aliased:
  %%    _27
  _1 = extract _27, `2`

  %% Unique:
  %%    _19
  _28 = kill_try_tag _19

  %% Argument types:
  %%    _3 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _3
  _25 = bif:'=:=' _3, `error`
  br _25, ^24, ^23

24:
  %% Result type:
  %%    'false'
  ret `false`

23:
  %% Aliased:
  %%    _1, 
  %%    _2
  _12 = resume _1, _2

  %% Unique:
  %%    _12
  _26 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compile_SUITE.erl:814
%% Counter = 24
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(32..121)
function `compile_SUITE`:`install_crypto_key`(_0) {
0:
  %% Result type:
  %%    'ok' | nonempty_list(32..121)
  %% Aliased:
  %%    _0
  F = make_fun (`'-install_crypto_key/1-fun-0-'`/2), _0

  %% compile_SUITE.erl:819
  %% Aliased:
  %%    F
  _8 = call (`beam_lib`:`crypto_key_fun`/1), F

  %% Aliased:
  %%    _8
  _17 = succeeded:body _8
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _21 = bif:'=:=' _8, `ok`
  br _21, ^20, ^19

20:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _8
  ret _8

19:
  %% compile_SUITE.erl:819
  %% Aliased:
  %%    _8
  _14 = match_fail `badmatch`, _8

  %% Unique:
  %%    _14
  _22 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% compile_SUITE.erl:822
%% Counter = 20
%% bs_ensure_opt: true
function `compile_SUITE`:`debug_info`(_0, _1, _2, _3) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _18 = bif:'=:=' _0, `erlang_v1`
  br _18, ^17, ^14

17:
  switch _2, ^14, [
    { `error`, ^15 },
    { `ok`, ^16 }
  ]

16:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _9 = put_list _1, `[]`

  %% Argument types:
  %%    _9 => nonempty_list(any())
  %% Unique:
  %%    _9
  _10 = put_tuple `ok`, _9
  %% Result type:
  %%    {'ok', nonempty_list(any())}
  %% Unique:
  %%    _10
  ret _10

15:
  %% Result type:
  %%    {'error', 'unknown_format'}
  ret `{error,unknown_format}`

14:
  %% compile_SUITE.erl:822
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2, 
  %%    _3
  %% Anno: #{inlined => {'-inlined-debug_info/4-',4}}
  _11 = match_fail `function_clause`, _0, _1, _2, _3

  %% Unique:
  %%    _11
  _19 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% compile_SUITE.erl:827
%% Counter = 91
%% bs_ensure_opt: true
function `compile_SUITE`:`custom_debug_info`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _36 = bif:is_list _0
  br _36, ^36, ^35

36:
  %% compile_SUITE.erl:828
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _11 = call (`get_files`/3), _0, `simple`, `"file_1"`

  %% Aliased:
  %%    _11
  _37 = succeeded:body _11
  br _37, ^90, ^1

90:
  %% Argument types:
  %%    _11 => {any(), any()}
  %% Aliased:
  %%    _11
  _13 = get_tuple_element _11, `0`

  %% compile_SUITE.erl:830
  %% Aliased:
  %%    _13
  _14 = call (`compile`:`file`/2), _13, `[binary,{debug_info,{compile_SUITE,ok}}]`

  %% Aliased:
  %%    _14
  _40 = succeeded:body _14
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _80 = is_tagged_tuple _14, `3`, `ok`
  br _80, ^77, ^42

77:
  %% Argument types:
  %%    _14 => {'ok', any(), any()}
  %% Aliased:
  %%    _14
  _16 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _76 = bif:'=:=' _16, `simple`
  br _76, ^75, ^42

75:
  %% Argument types:
  %%    _14 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `2`

  %% compile_SUITE.erl:832
  %% Aliased:
  %%    _15
  _18 = call (`beam_lib`:`chunks`/2), _15, `[abstract_code]`

  %% Aliased:
  %%    _18
  _43 = succeeded:body _18
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _73 = bif:'=:=' _18, `{ok,{simple,[{abstract_code,{raw_abstract_v1,[simple]}}]}}`
  br _73, ^73, ^45

73:
  %% compile_SUITE.erl:834
  %% Aliased:
  %%    _15
  _19 = call (`beam_lib`:`chunks`/2), _15, `[debug_info]`

  %% Aliased:
  %%    _19
  _46 = succeeded:body _19
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _71 = bif:'=:=' _19, `{ok,{simple,[{debug_info,{debug_info_v1,compile_SUITE,ok}}]}}`
  br _71, ^71, ^48

71:
  %% compile_SUITE.erl:836
  %% Aliased:
  %%    _13
  _20 = call (`compile`:`file`/2), _13, `[binary,{debug_info,{compile_SUITE,error}}]`

  %% Aliased:
  %%    _20
  _49 = succeeded:body _20
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _67 = is_tagged_tuple _20, `3`, `ok`
  br _67, ^64, ^51

64:
  %% Argument types:
  %%    _20 => {'ok', any(), any()}
  %% Aliased:
  %%    _20
  _22 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _63 = bif:'=:=' _22, `simple`
  br _63, ^62, ^51

62:
  %% Argument types:
  %%    _20 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `2`

  %% compile_SUITE.erl:838
  %% Aliased:
  %%    _21
  _24 = call (`beam_lib`:`chunks`/2), _21, `[abstract_code]`

  %% Aliased:
  %%    _24
  _52 = succeeded:body _24
  br _52, ^52, ^1

52:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _60 = bif:'=:=' _24, `{ok,{simple,[{abstract_code,no_abstract_code}]}}`
  br _60, ^60, ^54

60:
  %% compile_SUITE.erl:840
  %% Aliased:
  %%    _21
  _10 = call (`beam_lib`:`chunks`/2), _21, `[debug_info]`

  %% Aliased:
  %%    _10
  _55 = succeeded:body _10
  br _55, ^55, ^1

55:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _58 = bif:'=:=' _10, `{ok,{simple,[{debug_info,{debug_info_v1,compile_SUITE,error}}]}}`
  br _58, ^58, ^57

58:
  %% Result type:
  %%    {'ok', {'simple', nonempty_list({'debug_info', {'debug_info_v1', 'compile_SUITE', 'error'}})}}
  %% Aliased:
  %%    _10
  ret _10

57:
  %% compile_SUITE.erl:839
  %% Aliased:
  %%    _10
  _25 = match_fail `badmatch`, _10

  %% Unique:
  %%    _25
  _59 = succeeded:body _25
  br ^1

54:
  %% compile_SUITE.erl:837
  %% Aliased:
  %%    _24
  _26 = match_fail `badmatch`, _24

  %% Unique:
  %%    _26
  _61 = succeeded:body _26
  br ^1

51:
  %% compile_SUITE.erl:836
  %% Aliased:
  %%    _20
  _27 = match_fail `badmatch`, _20

  %% Unique:
  %%    _27
  _70 = succeeded:body _27
  br ^1

48:
  %% compile_SUITE.erl:833
  %% Aliased:
  %%    _19
  _28 = match_fail `badmatch`, _19

  %% Unique:
  %%    _28
  _72 = succeeded:body _28
  br ^1

45:
  %% compile_SUITE.erl:831
  %% Aliased:
  %%    _18
  _29 = match_fail `badmatch`, _18

  %% Unique:
  %%    _29
  _74 = succeeded:body _29
  br ^1

42:
  %% compile_SUITE.erl:830
  %% Aliased:
  %%    _14
  _30 = match_fail `badmatch`, _14

  %% Unique:
  %%    _30
  _83 = succeeded:body _30
  br ^1

35:
  %% compile_SUITE.erl:827
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-custom_debug_info/1-',1}}
  _32 = match_fail `function_clause`, _0

  %% Unique:
  %%    _32
  _89 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% compile_SUITE.erl:842
%% Counter = 149
%% bs_ensure_opt: true
function `compile_SUITE`:`custom_compile_info`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _54 = bif:is_list _0
  br _54, ^54, ^53

54:
  %% compile_SUITE.erl:843
  Anno = call (`erl_anno`:`new`/1), `1`

  %% Aliased:
  %%    Anno
  _55 = succeeded:body Anno
  br _55, ^55, ^1

55:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _14 = put_tuple `attribute`, Anno, `module`, `custom_compile_info`

  %% Argument types:
  %%    _14 => {'attribute', any(), 'module', 'custom_compile_info'}
  %% Aliased:
  %%    _14
  Forms = put_list _14, `[]`

  %% compile_SUITE.erl:847
  %% Aliased:
  %%    Forms
  _15 = call (`compile`:`forms`/2), Forms, `[binary,{compile_info,[{another,version}]}]`

  %% Aliased:
  %%    _15
  _56 = succeeded:body _15
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _143 = is_tagged_tuple _15, `3`, `ok`
  br _143, ^140, ^58

140:
  %% Argument types:
  %%    _15 => {'ok', any(), any()}
  %% Aliased:
  %%    _15
  _17 = get_tuple_element _15, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _139 = bif:'=:=' _17, `custom_compile_info`
  br _139, ^138, ^58

138:
  %% Argument types:
  %%    _15 => {'ok', 'custom_compile_info', any()}
  %% Aliased:
  %%    _15
  _16 = get_tuple_element _15, `2`

  %% compile_SUITE.erl:849
  %% Aliased:
  %%    _16
  _19 = call (`beam_lib`:`chunks`/2), _16, `[compile_info]`

  %% Aliased:
  %%    _19
  _59 = succeeded:body _19
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _134 = is_tagged_tuple _19, `2`, `ok`
  br _134, ^131, ^61

131:
  %% Argument types:
  %%    _19 => {'ok', any()}
  %% Aliased:
  %%    _19
  _20 = get_tuple_element _19, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _128 = is_tagged_tuple _20, `2`, `custom_compile_info`
  br _128, ^125, ^61

125:
  %% Argument types:
  %%    _20 => {'custom_compile_info', any()}
  %% Aliased:
  %%    _20
  _22 = get_tuple_element _20, `1`

  %% Aliased:
  %%    _22
  _124 = is_nonempty_list _22
  br _124, ^124, ^61

124:
  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _25 = get_hd _22

  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _24 = get_tl _22

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _121 = is_tagged_tuple _25, `2`, `compile_info`
  br _121, ^118, ^61

118:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _117 = bif:'=:=' _24, `[]`
  br _117, ^117, ^61

117:
  %% Argument types:
  %%    _25 => {'compile_info', any()}
  %% Aliased:
  %%    _25
  _26 = get_tuple_element _25, `1`

  %% compile_SUITE.erl:850
  %% Aliased:
  %%    _26
  _28 = call (`proplists`:`get_value`/2), `another`, _26

  %% Aliased:
  %%    _28
  _62 = succeeded:body _28
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _115 = bif:'=:=' _28, `version`
  br _115, ^114, ^64

114:
  %% compile_SUITE.erl:851
  %% Aliased:
  %%    _26
  CompileOpts = call (`proplists`:`get_value`/2), `options`, _26

  %% Aliased:
  %%    CompileOpts
  _65 = succeeded:body CompileOpts
  br _65, ^65, ^1

65:
  %% compile_SUITE.erl:852
  %% Aliased:
  %%    CompileOpts
  _29 = call (`proplists`:`get_value`/2), `compile_info`, CompileOpts

  %% Aliased:
  %%    _29
  _66 = succeeded:body _29
  br _66, ^66, ^1

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _112 = bif:'=:=' _29, `undefined`
  br _112, ^111, ^68

111:
  %% compile_SUITE.erl:854
  %% Aliased:
  %%    Forms
  _30 = call (`compile`:`forms`/2), Forms, `[deterministic,binary,{compile_info,[{another,version}]}]`

  %% Aliased:
  %%    _30
  _69 = succeeded:body _30
  br _69, ^69, ^1

69:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _107 = is_tagged_tuple _30, `3`, `ok`
  br _107, ^104, ^71

104:
  %% Argument types:
  %%    _30 => {'ok', any(), any()}
  %% Aliased:
  %%    _30
  _32 = get_tuple_element _30, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _103 = bif:'=:=' _32, `custom_compile_info`
  br _103, ^102, ^71

102:
  %% Argument types:
  %%    _30 => {'ok', 'custom_compile_info', any()}
  %% Aliased:
  %%    _30
  _31 = get_tuple_element _30, `2`

  %% compile_SUITE.erl:856
  %% Aliased:
  %%    _31
  _34 = call (`beam_lib`:`chunks`/2), _31, `[compile_info]`

  %% Aliased:
  %%    _34
  _72 = succeeded:body _34
  br _72, ^72, ^1

72:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _98 = is_tagged_tuple _34, `2`, `ok`
  br _98, ^95, ^74

95:
  %% Argument types:
  %%    _34 => {'ok', any()}
  %% Aliased:
  %%    _34
  _35 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _92 = is_tagged_tuple _35, `2`, `custom_compile_info`
  br _92, ^89, ^74

89:
  %% Argument types:
  %%    _35 => {'custom_compile_info', any()}
  %% Aliased:
  %%    _35
  _37 = get_tuple_element _35, `1`

  %% Aliased:
  %%    _37
  _88 = is_nonempty_list _37
  br _88, ^88, ^74

88:
  %% Argument types:
  %%    _37 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _37
  _40 = get_hd _37

  %% Argument types:
  %%    _37 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _37
  _39 = get_tl _37

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _85 = is_tagged_tuple _40, `2`, `compile_info`
  br _85, ^82, ^74

82:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _81 = bif:'=:=' _39, `[]`
  br _81, ^81, ^74

81:
  %% Argument types:
  %%    _40 => {'compile_info', any()}
  %% Aliased:
  %%    _40
  _41 = get_tuple_element _40, `1`

  %% compile_SUITE.erl:857
  %% Aliased:
  %%    _41
  _13 = call (`proplists`:`get_value`/2), `another`, _41

  %% Aliased:
  %%    _13
  _75 = succeeded:body _13
  br _75, ^75, ^1

75:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _79 = bif:'=:=' _13, `version`
  br _79, ^78, ^77

78:
  %% Result type:
  %%    'version'
  %% Aliased:
  %%    _13
  ret _13

77:
  %% compile_SUITE.erl:857
  %% Aliased:
  %%    _13
  _43 = match_fail `badmatch`, _13

  %% Unique:
  %%    _43
  _80 = succeeded:body _43
  br ^1

74:
  %% compile_SUITE.erl:855
  %% Aliased:
  %%    _34
  _44 = match_fail `badmatch`, _34

  %% Unique:
  %%    _44
  _101 = succeeded:body _44
  br ^1

71:
  %% compile_SUITE.erl:854
  %% Aliased:
  %%    _30
  _45 = match_fail `badmatch`, _30

  %% Unique:
  %%    _45
  _110 = succeeded:body _45
  br ^1

68:
  %% compile_SUITE.erl:852
  %% Aliased:
  %%    _29
  _46 = match_fail `badmatch`, _29

  %% Unique:
  %%    _46
  _113 = succeeded:body _46
  br ^1

64:
  %% compile_SUITE.erl:850
  %% Aliased:
  %%    _28
  _47 = match_fail `badmatch`, _28

  %% Unique:
  %%    _47
  _116 = succeeded:body _47
  br ^1

61:
  %% compile_SUITE.erl:848
  %% Aliased:
  %%    _19
  _48 = match_fail `badmatch`, _19

  %% Unique:
  %%    _48
  _137 = succeeded:body _48
  br ^1

58:
  %% compile_SUITE.erl:847
  %% Aliased:
  %%    _15
  _49 = match_fail `badmatch`, _15

  %% Unique:
  %%    _49
  _146 = succeeded:body _49
  br ^1

53:
  %% compile_SUITE.erl:842
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-custom_compile_info/1-',1}}
  _50 = match_fail `function_clause`, _0

  %% Unique:
  %%    _50
  _147 = succeeded:body _50
  br ^1

1:
  _51 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _51
}

%% compile_SUITE.erl:859
%% Counter = 14
%% bs_ensure_opt: true
function `compile_SUITE`:`cover`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% compile_SUITE.erl:860
  _1 = call (`compile`:`options`/0)

  %% Aliased:
  %%    _1
  _10 = succeeded:body _1
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = put_list _1, `[]`

  %% compile_SUITE.erl:860
  %% Unique:
  %%    _3
  _4 = call (`io`:`format`/2), `"~p\n"`, _3

  %% Aliased:
  %%    _4
  _11 = succeeded:body _4
  br _11, ^11, ^1

11:
  %% Result type:
  %%    'ok'
  ret `ok`

8:
  %% compile_SUITE.erl:859
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-cover/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _12 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% compile_SUITE.erl:863
%% Counter = 57
%% bs_ensure_opt: true
function `compile_SUITE`:`do_listing`(_0, _1, _2, _3) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _16 = put_list _3, `[]`

  %% Argument types:
  %%    _16 => nonempty_list(any())
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _16
  _17 = put_list _2, _16

  %% Argument types:
  %%    _17 => nonempty_list(any())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _17
  _18 = put_list _1, _17

  %% Argument types:
  %%    _18 => nonempty_list(any())
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _18
  _19 = put_list _0, _18

  %% compile_SUITE.erl:864
  %% Unique:
  %%    _19
  _28 = call (`io`:`format`/2), `"Source: ~p TargetDir: ~p\n  Type: ~p Ext: ~p\n"`, _19

  %% Aliased:
  %%    _28
  _33 = succeeded:body _28
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _20 = put_tuple `outdir`, _1

  %% Argument types:
  %%    _20 => {'outdir', any()}
  %% Unique:
  %%    _20
  _21 = put_list _20, `[]`

  %% Argument types:
  %%    _21 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _21
  _22 = put_list `time`, _21

  %% Argument types:
  %%    _22 => nonempty_list('time' | {'outdir', any()})
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _22
  _23 = put_list _2, _22

  %% compile_SUITE.erl:866
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _23
  _24 = call (`compile`:`file`/2), _0, _23

  %% Aliased:
  %%    _24
  _34 = succeeded:body _24
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _40 = is_tagged_tuple _24, `2`, `ok`
  br _40, ^35, ^36

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _25 = put_tuple `unexpected_result`, _24

  %% compile_SUITE.erl:868
  %% Unique:
  %%    _25
  _29 = call (`ct`:`fail`/1), _25

  %% Aliased:
  %%    _29
  _43 = succeeded:body _29
  br _43, ^35, ^1

35:
  %% compile_SUITE.erl:870
  %% Aliased:
  %%    _0
  _5 = call (`filename`:`basename`/1), _0

  %% Aliased:
  %%    _5
  _44 = succeeded:body _5
  br _44, ^44, ^1

44:
  %% compile_SUITE.erl:870
  %% Aliased:
  %%    _5
  SourceBase = call (`filename`:`rootname`/1), _5

  %% Aliased:
  %%    SourceBase
  _45 = succeeded:body SourceBase
  br _45, ^45, ^1

45:
  %% compile_SUITE.erl:872
  %% Aliased:
  %%    _3, 
  %%    SourceBase
  _7 = call (`erlang`:`'++'`/2), SourceBase, _3

  %% Aliased:
  %%    _7
  _46 = succeeded:body _7
  br _46, ^46, ^1

46:
  %% compile_SUITE.erl:872
  %% Aliased:
  %%    _1, 
  %%    _7
  Target = call (`filename`:`join`/2), _1, _7

  %% Aliased:
  %%    Target
  _47 = succeeded:body Target
  br _47, ^47, ^1

47:
  %% compile_SUITE.erl:873
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    Target
  _15 = call (`exists`/1), Target

  %% Unique:
  %%    _15
  _48 = succeeded:body _15
  br _48, ^48, ^1

48:
  br _15, ^51, ^50

51:
  %% Result type:
  %%    'true'
  %% Unique:
  %%    _15
  ret _15

50:
  %% compile_SUITE.erl:873
  _30 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _30
  _53 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% compile_SUITE.erl:875
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     maybe_improper_list(any(), any())
%%    _1 =>
%%     'big' | 'deterministic_module' | 'simple'
%%    _2 =>
%%     'env' | 'listings_big' | nonempty_list(49..121)
function `compile_SUITE`:`get_files`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:876
  %% Aliased:
  %%    _1
  _12 = call (`code`:`delete`/1), _1

  %% Aliased:
  %%    _12
  _18 = succeeded:body _12
  br _18, ^18, ^1

18:
  %% compile_SUITE.erl:877
  %% Aliased:
  %%    _1
  _13 = call (`code`:`purge`/1), _1

  %% Aliased:
  %%    _13
  _19 = succeeded:body _13
  br _19, ^19, ^1

19:
  %% compile_SUITE.erl:878
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _20 = succeeded:body DataDir
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:879
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _21 = succeeded:body PrivDir
  br _21, ^21, ^1

21:
  %% compile_SUITE.erl:880
  %% Aliased:
  %%    _1
  _5 = call (`erlang`:`atom_to_list`/1), _1

  %% Aliased:
  %%    _5
  _22 = succeeded:body _5
  br _22, ^22, ^1

22:
  %% compile_SUITE.erl:880
  %% Aliased:
  %%    _5, 
  %%    DataDir
  Src = call (`filename`:`join`/2), DataDir, _5

  %% Aliased:
  %%    Src
  _23 = succeeded:body Src
  br _23, ^23, ^1

23:
  %% compile_SUITE.erl:881
  %% Aliased:
  %%    PrivDir
  %% Unique:
  %%    _2
  TargetDir = call (`filename`:`join`/2), PrivDir, _2

  %% Aliased:
  %%    TargetDir
  _24 = succeeded:body TargetDir
  br _24, ^24, ^1

24:
  %% compile_SUITE.erl:882
  %% Aliased:
  %%    TargetDir
  _11 = call (`file`:`make_dir`/1), TargetDir

  %% Aliased:
  %%    _11
  _25 = succeeded:body _11
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _33 = bif:'=:=' _11, `ok`
  br _33, ^32, ^27

32:
  %% compile_SUITE.erl:883
  %% Aliased:
  %%    _1
  _10 = call (`erlang`:`atom_to_list`/1), _1

  %% Aliased:
  %%    _10
  _28 = succeeded:body _10
  br _28, ^28, ^1

28:
  %% compile_SUITE.erl:883
  _9 = call (`code`:`objfile_extension`/0)

  %% Aliased:
  %%    _9
  _29 = succeeded:body _9
  br _29, ^29, ^1

29:
  %% compile_SUITE.erl:883
  %% Aliased:
  %%    _9, 
  %%    _10
  File = call (`erlang`:`'++'`/2), _10, _9

  %% compile_SUITE.erl:884
  %% Aliased:
  %%    File, 
  %%    TargetDir
  Target = call (`filename`:`join`/2), TargetDir, File

  %% Aliased:
  %%    Target
  _31 = succeeded:body Target
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Src, 
  %%    Target
  _14 = put_tuple Src, Target
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _14
  ret _14

27:
  %% compile_SUITE.erl:882
  %% Aliased:
  %%    _11
  _15 = match_fail `badmatch`, _11

  %% Unique:
  %%    _15
  _34 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compile_SUITE.erl:887
%% Counter = 83
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     'foo' | 'test'
%%    _2 =>
%%     nil()
function `compile_SUITE`:`run`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:888
  %% Aliased:
  %%    _0
  _3 = call (`filename`:`basename`/1), _0

  %% Aliased:
  %%    _3
  _28 = succeeded:body _3
  br _28, ^28, ^1

28:
  %% compile_SUITE.erl:888
  %% Aliased:
  %%    _3
  _4 = call (`filename`:`rootname`/1), _3

  %% Aliased:
  %%    _4
  _29 = succeeded:body _4
  br _29, ^29, ^1

29:
  %% compile_SUITE.erl:888
  %% Aliased:
  %%    _4
  Module = call (`erlang`:`list_to_atom`/1), _4

  %% Aliased:
  %%    Module
  _30 = succeeded:body Module
  br _30, ^30, ^1

30:
  %% compile_SUITE.erl:889
  %% Aliased:
  %%    _0
  _6 = call (`filename`:`rootname`/1), _0

  %% Aliased:
  %%    _6
  _31 = succeeded:body _6
  br _31, ^31, ^1

31:
  %% compile_SUITE.erl:889
  %% Aliased:
  %%    _6
  _16 = call (`code`:`load_abs`/1), _6

  %% Aliased:
  %%    _16
  _32 = succeeded:body _16
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _61 = is_tagged_tuple _16, `2`, `module`
  br _61, ^58, ^34

58:
  %% Argument types:
  %%    _16 => {'module', any()}
  %% Aliased:
  %%    _16
  _17 = get_tuple_element _16, `1`

  %% Argument types:
  %%    Module => atom()
  %% Aliased:
  %%    _17
  %% Unique:
  %%    Module
  _35 = bif:'=:=' _17, Module
  br _35, ^81, ^34

81:
  br ^82

82:
  _39 = new_try_tag `'catch'`
  br _39, ^37, ^38

37:
  %% compile_SUITE.erl:890
  %% Aliased:
  %%    Module
  %% Unique:
  %%    _1
  _22 = call (`erlang`:`apply`/3), Module, _1, `[]`

  %% Aliased:
  %%    _22
  _41 = succeeded:body _22
  br _41, ^41, ^38

41:
  br ^36

38:
  %% Unique:
  %%    _39
  _44 = landingpad `'catch'`, _39

  %% Aliased:
  %%    _44
  _42 = extract _44, `0`
  br ^36

36:
  _45 = phi { _42, ^38 }, { _22, ^41 }

  %% Aliased:
  %%    _45
  %% Unique:
  %%    _39
  _8 = catch_end _39, _45

  %% compile_SUITE.erl:891
  %% Aliased:
  %%    Module
  _19 = call (`code`:`delete`/1), Module

  %% Aliased:
  %%    _19
  _46 = succeeded:body _19
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _56 = bif:'=:=' _19, `true`
  br _56, ^55, ^48

55:
  %% compile_SUITE.erl:892
  %% Aliased:
  %%    Module
  _20 = call (`code`:`purge`/1), Module

  %% Aliased:
  %%    _20
  _49 = succeeded:body _20
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _53 = bif:'=:=' _20, `false`
  br _53, ^52, ^51

52:
  %% Aliased:
  %%    _8
  ret _8

51:
  %% compile_SUITE.erl:892
  %% Aliased:
  %%    _20
  _23 = match_fail `badmatch`, _20

  %% Unique:
  %%    _23
  _54 = succeeded:body _23
  br ^1

48:
  %% compile_SUITE.erl:891
  %% Aliased:
  %%    _19
  _24 = match_fail `badmatch`, _19

  %% Unique:
  %%    _24
  _57 = succeeded:body _24
  br ^1

34:
  %% compile_SUITE.erl:889
  %% Aliased:
  %%    _16
  _25 = match_fail `badmatch`, _16

  %% Unique:
  %%    _25
  _64 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% compile_SUITE.erl:895
%% Counter = 21
%% bs_ensure_opt: true
function `compile_SUITE`:`exists`(_0) {
0:
  %% compile_SUITE.erl:896
  %% Aliased:
  %%    _0
  _5 = call (`file`:`read_file_info`/1), _0

  %% Aliased:
  %%    _5
  _11 = succeeded:body _5
  br _11, ^11, ^1

11:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _17 = bif:is_tuple _5
  br _17, ^17, ^13

17:
  %% Argument types:
  %%    _5 => {...}
  %% Aliased:
  %%    _5
  _18 = bif:tuple_size _5

  %% Argument types:
  %%    _18 => 0..16777215
  %% Unique:
  %%    _18
  _19 = bif:'=:=' _18, `2`
  br _19, ^16, ^13

16:
  %% Argument types:
  %%    _5 => {any(), any()}
  %% Aliased:
  %%    _5
  _7 = get_tuple_element _5, `0`
  switch _7, ^13, [
    { `error`, ^14 },
    { `ok`, ^15 }
  ]

15:
  %% Result type:
  %%    'true'
  ret `true`

14:
  %% Result type:
  %%    'false'
  ret `false`

13:
  %% compile_SUITE.erl:896
  %% Aliased:
  %%    _5
  _8 = match_fail `case_clause`, _5

  %% Unique:
  %%    _8
  _20 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% compile_SUITE.erl:902
%% Counter = 210
%% bs_ensure_opt: true
function `compile_SUITE`:`strict_record`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _82 = bif:is_list _0
  br _82, ^82, ^81

82:
  %% compile_SUITE.erl:903
  %% Aliased:
  %%    _0
  Priv = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    Priv
  _83 = succeeded:body Priv
  br _83, ^83, ^1

83:
  %% compile_SUITE.erl:904
  %% Aliased:
  %%    _0
  _2 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _2
  _84 = succeeded:body _2
  br _84, ^84, ^1

84:
  %% compile_SUITE.erl:904
  %% Aliased:
  %%    _2
  _34 = call (`file`:`set_cwd`/1), _2

  %% Aliased:
  %%    _34
  _85 = succeeded:body _34
  br _85, ^85, ^1

85:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _185 = bif:'=:=' _34, `ok`
  br _185, ^184, ^87

184:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Priv
  _35 = put_tuple `outdir`, Priv

  %% Argument types:
  %%    _35 => {'outdir', any()}
  %% Aliased:
  %%    _35
  Opts = put_list _35, `[report_errors]`

  %% Argument types:
  %%    Opts => nonempty_list('report_errors' | {'outdir', any()})
  %% Aliased:
  %%    Opts
  _36 = put_list `strict_record_tests`, Opts

  %% compile_SUITE.erl:908
  %% Unique:
  %%    _36
  _37 = call (`c`:`c`/2), `record_access`, _36

  %% Aliased:
  %%    _37
  _88 = succeeded:body _37
  br _88, ^88, ^1

88:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _180 = is_tagged_tuple _37, `2`, `ok`
  br _180, ^177, ^90

177:
  %% Argument types:
  %%    _37 => {'ok', any()}
  %% Aliased:
  %%    _37
  _38 = get_tuple_element _37, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _91 = bif:'=:=' _38, `record_access`
  br _91, ^91, ^90

91:
  %% compile_SUITE.erl:909
  Turtle = call (`test_strict`/0)

  %% Aliased:
  %%    Turtle
  _92 = succeeded:body Turtle
  br _92, ^92, ^1

92:
  %% Argument types:
  %%    Opts => nonempty_list('report_errors' | {'outdir', any()})
  %% Aliased:
  %%    Opts
  _40 = put_list `no_strict_record_tests`, Opts

  %% compile_SUITE.erl:911
  %% Unique:
  %%    _40
  _41 = call (`c`:`c`/2), `record_access`, _40

  %% Aliased:
  %%    _41
  _93 = succeeded:body _41
  br _93, ^93, ^1

93:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _173 = is_tagged_tuple _41, `2`, `ok`
  br _173, ^170, ^95

170:
  %% Argument types:
  %%    _41 => {'ok', any()}
  %% Aliased:
  %%    _41
  _42 = get_tuple_element _41, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _96 = bif:'=:=' _42, `record_access`
  br _96, ^96, ^95

96:
  %% compile_SUITE.erl:912
  _44 = call (`test_sloppy`/0)

  %% Aliased:
  %%    _44
  _97 = succeeded:body _44
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44, 
  %%    Turtle
  _100 = bif:'=:=' _44, Turtle
  br _100, ^100, ^99

100:
  %% Argument types:
  %%    Opts => nonempty_list('report_errors' | {'outdir', any()})
  %% Aliased:
  %%    Opts
  _45 = put_list `no_strict_record_tests`, Opts

  %% Argument types:
  %%    _45 => nonempty_list('no_strict_record_tests' | 'report_errors' | {'outdir', any()})
  %% Unique:
  %%    _45
  _46 = put_list `strict_record_tests`, _45

  %% compile_SUITE.erl:915
  %% Unique:
  %%    _46
  _47 = call (`c`:`c`/2), `record_access`, _46

  %% Aliased:
  %%    _47
  _101 = succeeded:body _47
  br _101, ^101, ^1

101:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _165 = is_tagged_tuple _47, `2`, `ok`
  br _165, ^162, ^103

162:
  %% Argument types:
  %%    _47 => {'ok', any()}
  %% Aliased:
  %%    _47
  _48 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _104 = bif:'=:=' _48, `record_access`
  br _104, ^104, ^103

104:
  %% compile_SUITE.erl:916
  _50 = call (`test_sloppy`/0)

  %% Aliased:
  %%    _50
  _105 = succeeded:body _50
  br _105, ^105, ^1

105:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50, 
  %%    Turtle
  _108 = bif:'=:=' _50, Turtle
  br _108, ^108, ^107

108:
  %% Argument types:
  %%    Opts => nonempty_list('report_errors' | {'outdir', any()})
  %% Aliased:
  %%    Opts
  _51 = put_list `strict_record_tests`, Opts

  %% Argument types:
  %%    _51 => nonempty_list('report_errors' | 'strict_record_tests' | {'outdir', any()})
  %% Unique:
  %%    _51
  _52 = put_list `no_strict_record_tests`, _51

  %% compile_SUITE.erl:917
  %% Unique:
  %%    _52
  _53 = call (`c`:`c`/2), `record_access`, _52

  %% Aliased:
  %%    _53
  _109 = succeeded:body _53
  br _109, ^109, ^1

109:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _157 = is_tagged_tuple _53, `2`, `ok`
  br _157, ^154, ^111

154:
  %% Argument types:
  %%    _53 => {'ok', any()}
  %% Aliased:
  %%    _53
  _54 = get_tuple_element _53, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _112 = bif:'=:=' _54, `record_access`
  br _112, ^112, ^111

112:
  %% compile_SUITE.erl:918
  _56 = call (`test_strict`/0)

  %% Aliased:
  %%    _56
  _113 = succeeded:body _56
  br _113, ^113, ^1

113:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56, 
  %%    Turtle
  _116 = bif:'=:=' _56, Turtle
  br _116, ^116, ^115

116:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Priv
  _57 = put_tuple `outdir`, Priv

  %% Argument types:
  %%    _57 => {'outdir', any()}
  %% Unique:
  %%    _57
  _58 = put_list _57, `[report_errors]`

  %% compile_SUITE.erl:921
  %% Unique:
  %%    _58
  _59 = call (`c`:`c`/2), `record_access`, _58

  %% Aliased:
  %%    _59
  _117 = succeeded:body _59
  br _117, ^117, ^1

117:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _149 = is_tagged_tuple _59, `2`, `ok`
  br _149, ^146, ^119

146:
  %% Argument types:
  %%    _59 => {'ok', any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _120 = bif:'=:=' _60, `record_access`
  br _120, ^208, ^119

208:
  br ^209

209:
  _125 = new_try_tag `'try'`
  br _125, ^124, ^122

124:
  %% compile_SUITE.erl:923
  %% Aliased:
  %%    Turtle
  _62 = call (`record_access`:`test`/1), Turtle

  %% Aliased:
  %%    _62
  _126 = succeeded:body _62
  br _126, ^126, ^122

126:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _129 = bif:'=:=' _62, `{1,2}`
  br _129, ^127, ^128

127:
  %% Unique:
  %%    _125
  _145 = kill_try_tag _125
  %% Result type:
  %%    {'comment', nonempty_list(32..117)}
  ret `{comment,"Default: no_strict_record_tests"}`

128:
  %% compile_SUITE.erl:923
  %% Aliased:
  %%    _62
  _67 = match_fail `badmatch`, _62

  %% Unique:
  %%    _67
  _130 = succeeded:body _67
  br ^122

122:
  %% Unique:
  %%    _125
  _143 = landingpad `'try'`, _125

  %% Aliased:
  %%    _143
  _19 = extract _143, `0`

  %% Aliased:
  %%    _143
  _18 = extract _143, `1`

  %% Aliased:
  %%    _143
  _17 = extract _143, `2`

  %% Unique:
  %%    _125
  _144 = kill_try_tag _125

  %% Argument types:
  %%    _19 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _19
  _141 = bif:'=:=' _19, `error`
  br _141, ^140, ^132

140:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _137 = is_tagged_tuple _18, `2`, `badrecord`
  br _137, ^134, ^132

134:
  %% Argument types:
  %%    _18 => {'badrecord', any()}
  %% Aliased:
  %%    _18
  _63 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _63, 
  %%    Turtle
  _133 = bif:'=:=' _63, Turtle
  br _133, ^133, ^132

133:
  %% Result type:
  %%    {'comment', nonempty_list(32..117)}
  ret `{comment,"Default: strict_record_tests"}`

132:
  %% Aliased:
  %%    _17, 
  %%    _18
  _68 = resume _17, _18

  %% Unique:
  %%    _68
  _142 = succeeded:body _68
  br ^1

119:
  %% compile_SUITE.erl:921
  %% Aliased:
  %%    _59
  _69 = match_fail `badmatch`, _59

  %% Unique:
  %%    _69
  _152 = succeeded:body _69
  br ^1

115:
  %% compile_SUITE.erl:918
  %% Aliased:
  %%    _56
  _70 = match_fail `badmatch`, _56

  %% Unique:
  %%    _70
  _153 = succeeded:body _70
  br ^1

111:
  %% compile_SUITE.erl:917
  %% Aliased:
  %%    _53
  _71 = match_fail `badmatch`, _53

  %% Unique:
  %%    _71
  _160 = succeeded:body _71
  br ^1

107:
  %% compile_SUITE.erl:916
  %% Aliased:
  %%    _50
  _72 = match_fail `badmatch`, _50

  %% Unique:
  %%    _72
  _161 = succeeded:body _72
  br ^1

103:
  %% compile_SUITE.erl:915
  %% Aliased:
  %%    _47
  _73 = match_fail `badmatch`, _47

  %% Unique:
  %%    _73
  _168 = succeeded:body _73
  br ^1

99:
  %% compile_SUITE.erl:912
  %% Aliased:
  %%    _44
  _74 = match_fail `badmatch`, _44

  %% Unique:
  %%    _74
  _169 = succeeded:body _74
  br ^1

95:
  %% compile_SUITE.erl:911
  %% Aliased:
  %%    _41
  _75 = match_fail `badmatch`, _41

  %% Unique:
  %%    _75
  _176 = succeeded:body _75
  br ^1

90:
  %% compile_SUITE.erl:908
  %% Aliased:
  %%    _37
  _76 = match_fail `badmatch`, _37

  %% Unique:
  %%    _76
  _183 = succeeded:body _76
  br ^1

87:
  %% compile_SUITE.erl:904
  %% Aliased:
  %%    _34
  _77 = match_fail `badmatch`, _34

  %% Unique:
  %%    _77
  _186 = succeeded:body _77
  br ^1

81:
  %% compile_SUITE.erl:902
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-strict_record/1-',1}}
  _78 = match_fail `function_clause`, _0

  %% Unique:
  %%    _78
  _187 = succeeded:body _78
  br ^1

1:
  _79 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _79
}

%% compile_SUITE.erl:930
%% Counter = 56
%% bs_ensure_opt: true
function `compile_SUITE`:`test_strict`() {
0:
  %% compile_SUITE.erl:931
  Turtle = call (`record_access`:`turtle`/0)

  %% Aliased:
  %%    Turtle
  _17 = succeeded:body Turtle
  br _17, ^54, ^1

54:
  br ^55

55:
  _22 = new_try_tag `'try'`
  br _22, ^21, ^19

21:
  %% compile_SUITE.erl:933
  %% Aliased:
  %%    Turtle
  _13 = call (`record_access`:`test`/1), Turtle

  %% Aliased:
  %%    _13
  _23 = succeeded:body _13
  br _23, ^23, ^19

23:
  %% Unique:
  %%    _22
  _38 = kill_try_tag _22
  br ^20

19:
  %% Unique:
  %%    _22
  _36 = landingpad `'try'`, _22

  %% Aliased:
  %%    _36
  _4 = extract _36, `0`

  %% Aliased:
  %%    _36
  _3 = extract _36, `1`

  %% Aliased:
  %%    _36
  _2 = extract _36, `2`

  %% Unique:
  %%    _22
  _37 = kill_try_tag _22

  %% Argument types:
  %%    _4 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _4
  _34 = bif:'=:=' _4, `error`
  br _34, ^33, ^25

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _30 = is_tagged_tuple _3, `2`, `badrecord`
  br _30, ^27, ^25

27:
  %% Argument types:
  %%    _3 => {'badrecord', any()}
  %% Aliased:
  %%    _3
  _10 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10, 
  %%    Turtle
  _26 = bif:'=:=' _10, Turtle
  br _26, ^20, ^25

20:
  %% Aliased:
  %%    Turtle
  ret Turtle

25:
  %% Aliased:
  %%    _2, 
  %%    _3
  _14 = resume _2, _3

  %% Unique:
  %%    _14
  _35 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% compile_SUITE.erl:940
%% Counter = 12
%% bs_ensure_opt: true
function `compile_SUITE`:`test_sloppy`() {
0:
  %% compile_SUITE.erl:941
  Turtle = call (`record_access`:`turtle`/0)

  %% Aliased:
  %%    Turtle
  _6 = succeeded:body Turtle
  br _6, ^6, ^1

6:
  %% compile_SUITE.erl:942
  %% Aliased:
  %%    Turtle
  _2 = call (`record_access`:`test`/1), Turtle

  %% Aliased:
  %%    _2
  _7 = succeeded:body _2
  br _7, ^7, ^1

7:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _10 = bif:'=:=' _2, `{1,2}`
  br _10, ^10, ^9

10:
  %% Aliased:
  %%    Turtle
  ret Turtle

9:
  %% compile_SUITE.erl:942
  %% Aliased:
  %%    _2
  _3 = match_fail `badmatch`, _2

  %% Unique:
  %%    _3
  _11 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compile_SUITE.erl:945
%% Counter = 88
%% bs_ensure_opt: true
function `compile_SUITE`:`utf8_atoms`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _42 = bif:is_list _0
  br _42, ^42, ^41

42:
  %% compile_SUITE.erl:946
  Anno = call (`erl_anno`:`new`/1), `1`

  %% Aliased:
  %%    Anno
  _43 = succeeded:body Anno
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _12 = put_tuple `atom`, Anno, `'\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'`

  %% Argument types:
  %%    _12 => {'atom', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}''}
  %% Unique:
  %%    _12
  _13 = put_list _12, `[]`

  %% Argument types:
  %%    _13 => nonempty_list({'atom', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}''})
  %% Aliased:
  %%    Anno
  %% Unique:
  %%    _13
  _14 = put_tuple `clause`, Anno, `[]`, `[]`, _13

  %% Argument types:
  %%    _14 => {'clause', any(), nil(), nil(), nonempty_list({'atom', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}''})}
  %% Unique:
  %%    _14
  _15 = put_list _14, `[]`

  %% Argument types:
  %%    _15 => nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}''})})
  %% Aliased:
  %%    Anno
  %% Unique:
  %%    _15
  _16 = put_tuple `function`, Anno, `atom`, `0`, _15

  %% Argument types:
  %%    _16 => {'function', any(), 'atom', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}''})})}
  %% Unique:
  %%    _16
  _17 = put_list _16, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _18 = put_tuple `attribute`, Anno, `compile`, `[export_all]`

  %% Argument types:
  %%    _18 => {'attribute', any(), 'compile', nonempty_list('export_all')}
  %%    _17 => nonempty_list({'function', any(), 'atom', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}''})})})
  %% Unique:
  %%    _17, 
  %%    _18
  Forms = put_list _18, _17

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _19 = put_tuple `attribute`, Anno, `module`, `utf8_atom`

  %% Argument types:
  %%    _19 => {'attribute', any(), 'module', 'utf8_atom'}
  %%    Forms => nonempty_list({'attribute', any(), 'compile', nonempty_list('export_all')} | {'function', any(), 'atom', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}''})})})
  %% Unique:
  %%    _19, 
  %%    Forms
  Utf8AtomForms = put_list _19, Forms

  %% compile_SUITE.erl:953
  %% Unique:
  %%    Utf8AtomForms
  _20 = call (`compile`:`forms`/2), Utf8AtomForms, `[binary]`

  %% Aliased:
  %%    _20
  _44 = succeeded:body _20
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _82 = is_tagged_tuple _20, `3`, `ok`
  br _82, ^79, ^46

79:
  %% Argument types:
  %%    _20 => {'ok', any(), any()}
  %% Aliased:
  %%    _20
  _22 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _78 = bif:'=:=' _22, `utf8_atom`
  br _78, ^77, ^46

77:
  %% Argument types:
  %%    _20 => {'ok', 'utf8_atom', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `2`

  %% compile_SUITE.erl:955
  %% Aliased:
  %%    _21
  _24 = call (`beam_lib`:`chunks`/2), _21, `[atoms]`

  %% Aliased:
  %%    _24
  _47 = succeeded:body _24
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _73 = is_tagged_tuple _24, `2`, `ok`
  br _73, ^70, ^49

70:
  %% Argument types:
  %%    _24 => {'ok', any()}
  %% Aliased:
  %%    _24
  _25 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _67 = is_tagged_tuple _25, `2`, `utf8_atom`
  br _67, ^64, ^49

64:
  %% Argument types:
  %%    _25 => {'utf8_atom', any()}
  %% Aliased:
  %%    _25
  _27 = get_tuple_element _25, `1`

  %% Aliased:
  %%    _27
  _63 = is_nonempty_list _27
  br _63, ^63, ^49

63:
  %% Argument types:
  %%    _27 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _27
  _30 = get_hd _27

  %% Argument types:
  %%    _27 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _27
  _29 = get_tl _27

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _60 = is_tagged_tuple _30, `2`, `atoms`
  br _60, ^57, ^49

57:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _56 = bif:'=:=' _29, `[]`
  br _56, ^56, ^49

56:
  %% compile_SUITE.erl:956
  %% Aliased:
  %%    _21
  _34 = call (`code`:`load_binary`/3), `utf8_atom`, `"compile_SUITE"`, _21

  %% Aliased:
  %%    _34
  _50 = succeeded:body _34
  br _50, ^50, ^1

50:
  %% compile_SUITE.erl:957
  _33 = call (`utf8_atom`:`atom`/0)

  %% Aliased:
  %%    _33
  _51 = succeeded:body _33
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _54 = bif:'=:=' _33, `'\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'`
  br _54, ^54, ^53

54:
  %% Result type:
  %%    'ok'
  ret `ok`

53:
  %% compile_SUITE.erl:957
  %% Aliased:
  %%    _33
  _35 = match_fail `badmatch`, _33

  %% Unique:
  %%    _35
  _55 = succeeded:body _35
  br ^1

49:
  %% compile_SUITE.erl:954
  %% Aliased:
  %%    _24
  _36 = match_fail `badmatch`, _24

  %% Unique:
  %%    _36
  _76 = succeeded:body _36
  br ^1

46:
  %% compile_SUITE.erl:952
  %% Aliased:
  %%    _20
  _37 = match_fail `badmatch`, _20

  %% Unique:
  %%    _37
  _85 = succeeded:body _37
  br ^1

41:
  %% compile_SUITE.erl:945
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-utf8_atoms/1-',1}}
  _38 = match_fail `function_clause`, _0

  %% Unique:
  %%    _38
  _86 = succeeded:body _38
  br ^1

1:
  _39 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _39
}

%% compile_SUITE.erl:961
%% Counter = 99
%% bs_ensure_opt: true
function `compile_SUITE`:`utf8_functions`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _45 = bif:is_list _0
  br _45, ^45, ^44

45:
  %% compile_SUITE.erl:962
  Anno = call (`erl_anno`:`new`/1), `1`

  %% Aliased:
  %%    Anno
  _46 = succeeded:body Anno
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _13 = put_tuple `atom`, Anno, `world`

  %% Argument types:
  %%    _13 => {'atom', any(), 'world'}
  %% Aliased:
  %%    _13
  _14 = put_list _13, `[]`

  %% Argument types:
  %%    _14 => nonempty_list({'atom', any(), 'world'})
  %% Aliased:
  %%    _14, 
  %%    Anno
  _15 = put_tuple `clause`, Anno, `[]`, `[]`, _14

  %% Argument types:
  %%    _15 => {'clause', any(), nil(), nil(), nonempty_list({'atom', any(), 'world'})}
  %% Aliased:
  %%    _15
  _16 = put_list _15, `[]`

  %% Argument types:
  %%    _16 => nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), 'world'})})
  %% Aliased:
  %%    _16, 
  %%    Anno
  _17 = put_tuple `function`, Anno, `'\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'`, `0`, _16

  %% Argument types:
  %%    _17 => {'function', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), 'world'})})}
  %% Aliased:
  %%    _17
  _18 = put_list _17, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _19 = put_tuple `attribute`, Anno, `compile`, `[export_all]`

  %% Argument types:
  %%    _19 => {'attribute', any(), 'compile', nonempty_list('export_all')}
  %%    _18 => nonempty_list({'function', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), 'world'})})})
  %% Aliased:
  %%    _18, 
  %%    _19
  Forms = put_list _19, _18

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _20 = put_tuple `attribute`, Anno, `module`, `utf8_function`

  %% Argument types:
  %%    _20 => {'attribute', any(), 'module', 'utf8_function'}
  %%    Forms => nonempty_list({'attribute', any(), 'compile', nonempty_list('export_all')} | {'function', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), 'world'})})})
  %% Aliased:
  %%    Forms
  %% Unique:
  %%    _20
  Utf8FunctionForms = put_list _20, Forms

  %% compile_SUITE.erl:969
  %% Unique:
  %%    Utf8FunctionForms
  _21 = call (`compile`:`forms`/2), Utf8FunctionForms, `[binary]`

  %% Aliased:
  %%    _21
  _47 = succeeded:body _21
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _92 = is_tagged_tuple _21, `3`, `ok`
  br _92, ^89, ^49

89:
  %% Argument types:
  %%    _21 => {'ok', any(), any()}
  %% Aliased:
  %%    _21
  _23 = get_tuple_element _21, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _88 = bif:'=:=' _23, `utf8_function`
  br _88, ^87, ^49

87:
  %% Argument types:
  %%    _21 => {'ok', 'utf8_function', any()}
  %% Aliased:
  %%    _21
  _22 = get_tuple_element _21, `2`

  %% compile_SUITE.erl:971
  %% Aliased:
  %%    _22
  _25 = call (`beam_lib`:`chunks`/2), _22, `[atoms]`

  %% Aliased:
  %%    _25
  _50 = succeeded:body _25
  br _50, ^50, ^1

50:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _83 = is_tagged_tuple _25, `2`, `ok`
  br _83, ^80, ^52

80:
  %% Argument types:
  %%    _25 => {'ok', any()}
  %% Aliased:
  %%    _25
  _26 = get_tuple_element _25, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _77 = is_tagged_tuple _26, `2`, `utf8_function`
  br _77, ^74, ^52

74:
  %% Argument types:
  %%    _26 => {'utf8_function', any()}
  %% Aliased:
  %%    _26
  _28 = get_tuple_element _26, `1`

  %% Aliased:
  %%    _28
  _73 = is_nonempty_list _28
  br _73, ^73, ^52

73:
  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _31 = get_hd _28

  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _30 = get_tl _28

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _70 = is_tagged_tuple _31, `2`, `atoms`
  br _70, ^67, ^52

67:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _66 = bif:'=:=' _30, `[]`
  br _66, ^66, ^52

66:
  %% compile_SUITE.erl:972
  %% Aliased:
  %%    _22
  _36 = call (`code`:`load_binary`/3), `utf8_function`, `"compile_SUITE"`, _22

  %% Aliased:
  %%    _36
  _53 = succeeded:body _36
  br _53, ^53, ^1

53:
  %% compile_SUITE.erl:973
  _34 = call (`utf8_function`:`'\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'`/0)

  %% Aliased:
  %%    _34
  _54 = succeeded:body _34
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _64 = bif:'=:=' _34, `world`
  br _64, ^63, ^56

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _35 = put_tuple `attribute`, Anno, `module`, `no_utf8_function`

  %% Argument types:
  %%    _35 => {'attribute', any(), 'module', 'no_utf8_function'}
  %%    Forms => nonempty_list({'attribute', any(), 'compile', nonempty_list('export_all')} | {'function', any(), ''\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'atom', any(), 'world'})})})
  %% Aliased:
  %%    Forms
  %% Unique:
  %%    _35
  NoUtf8FunctionForms = put_list _35, Forms

  %% compile_SUITE.erl:976
  %% Unique:
  %%    NoUtf8FunctionForms
  _12 = call (`compile`:`forms`/2), NoUtf8FunctionForms, `[binary,r19]`

  %% Aliased:
  %%    _12
  _57 = succeeded:body _12
  br _57, ^57, ^1

57:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _61 = bif:'=:=' _12, `error`
  br _61, ^60, ^59

60:
  %% Result type:
  %%    'error'
  %% Aliased:
  %%    _12
  ret _12

59:
  %% compile_SUITE.erl:976
  %% Aliased:
  %%    _12
  _37 = match_fail `badmatch`, _12

  %% Unique:
  %%    _37
  _62 = succeeded:body _37
  br ^1

56:
  %% compile_SUITE.erl:973
  %% Aliased:
  %%    _34
  _38 = match_fail `badmatch`, _34

  %% Unique:
  %%    _38
  _65 = succeeded:body _38
  br ^1

52:
  %% compile_SUITE.erl:970
  %% Aliased:
  %%    _25
  _39 = match_fail `badmatch`, _25

  %% Unique:
  %%    _39
  _86 = succeeded:body _39
  br ^1

49:
  %% compile_SUITE.erl:968
  %% Aliased:
  %%    _21
  _40 = match_fail `badmatch`, _21

  %% Unique:
  %%    _40
  _95 = succeeded:body _40
  br ^1

44:
  %% compile_SUITE.erl:961
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-utf8_functions/1-',1}}
  _41 = match_fail `function_clause`, _0

  %% Unique:
  %%    _41
  _96 = succeeded:body _41
  br ^1

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _42
}

%% compile_SUITE.erl:978
%% Counter = 39
%% bs_ensure_opt: true
function `compile_SUITE`:`extra_chunks`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _18 = bif:is_list _0
  br _18, ^18, ^17

18:
  %% compile_SUITE.erl:979
  Anno = call (`erl_anno`:`new`/1), `1`

  %% Aliased:
  %%    Anno
  _19 = succeeded:body Anno
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _7 = put_tuple `attribute`, Anno, `module`, `extra_chunks`

  %% Argument types:
  %%    _7 => {'attribute', any(), 'module', 'extra_chunks'}
  %% Unique:
  %%    _7
  Forms = put_list _7, `[]`

  %% compile_SUITE.erl:983
  %% Unique:
  %%    Forms
  _8 = call (`compile`:`forms`/2), Forms, `[binary,{extra_chunks,[{<<"ExCh">>,<<"Contents">>}]}]`

  %% Aliased:
  %%    _8
  _20 = succeeded:body _8
  br _20, ^20, ^1

20:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _33 = is_tagged_tuple _8, `3`, `ok`
  br _33, ^30, ^22

30:
  %% Argument types:
  %%    _8 => {'ok', any(), any()}
  %% Aliased:
  %%    _8
  _10 = get_tuple_element _8, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _29 = bif:'=:=' _10, `extra_chunks`
  br _29, ^28, ^22

28:
  %% Argument types:
  %%    _8 => {'ok', 'extra_chunks', any()}
  %% Aliased:
  %%    _8
  _9 = get_tuple_element _8, `2`

  %% compile_SUITE.erl:985
  %% Aliased:
  %%    _9
  _6 = call (`beam_lib`:`chunks`/2), _9, `["ExCh"]`

  %% Aliased:
  %%    _6
  _23 = succeeded:body _6
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _26 = bif:'=:=' _6, `{ok,{extra_chunks,[{"ExCh",<<"Contents">>}]}}`
  br _26, ^26, ^25

26:
  %% Result type:
  %%    {'ok', {'extra_chunks', nonempty_list({nonempty_list(67..120), bitstring(64)})}}
  %% Aliased:
  %%    _6
  ret _6

25:
  %% compile_SUITE.erl:984
  %% Aliased:
  %%    _6
  _12 = match_fail `badmatch`, _6

  %% Unique:
  %%    _12
  _27 = succeeded:body _12
  br ^1

22:
  %% compile_SUITE.erl:982
  %% Aliased:
  %%    _8
  _13 = match_fail `badmatch`, _8

  %% Unique:
  %%    _13
  _36 = succeeded:body _13
  br ^1

17:
  %% compile_SUITE.erl:978
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-extra_chunks/1-',1}}
  _14 = match_fail `function_clause`, _0

  %% Unique:
  %%    _14
  _37 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% compile_SUITE.erl:987
%% Counter = 311
%% bs_ensure_opt: true
function `compile_SUITE`:`tuple_calls`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _104 = bif:is_list _0
  br _104, ^104, ^103

104:
  %% compile_SUITE.erl:988
  Anno = call (`erl_anno`:`new`/1), `1`

  %% Aliased:
  %%    Anno
  _105 = succeeded:body Anno
  br _105, ^105, ^1

105:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _34 = put_tuple `var`, Anno, `mod`

  %% Argument types:
  %%    _34 => {'var', any(), 'mod'}
  %% Aliased:
  %%    _34
  _35 = put_list _34, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _29 = put_tuple `atom`, Anno, `size`

  %% Argument types:
  %%    _34 => {'var', any(), 'mod'}
  %%    _29 => {'atom', any(), 'size'}
  %% Aliased:
  %%    _29, 
  %%    _34, 
  %%    Anno
  _31 = put_tuple `remote`, Anno, _34, _29

  %% Argument types:
  %%    _31 => {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size'}}
  %% Aliased:
  %%    _31, 
  %%    Anno
  _32 = put_tuple `call`, Anno, _31, `[]`

  %% Argument types:
  %%    _32 => {'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size'}}, nil()}
  %% Aliased:
  %%    _32
  _33 = put_list _32, `[]`

  %% Argument types:
  %%    _35 => nonempty_list({'var', any(), 'mod'})
  %%    _33 => nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size'}}, nil()})
  %% Aliased:
  %%    _33, 
  %%    _35, 
  %%    Anno
  _36 = put_tuple `clause`, Anno, _35, `[]`, _33

  %% Argument types:
  %%    _36 => {'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size'}}, nil()})}
  %% Aliased:
  %%    _36
  _37 = put_list _36, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _42 = put_tuple `atom`, Anno, `store`

  %% Argument types:
  %%    _34 => {'var', any(), 'mod'}
  %%    _42 => {'atom', any(), 'store'}
  %% Aliased:
  %%    _34, 
  %%    _42, 
  %%    Anno
  _44 = put_tuple `remote`, Anno, _34, _42

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _38 = put_tuple `atom`, Anno, `value`

  %% Argument types:
  %%    _38 => {'atom', any(), 'value'}
  %% Aliased:
  %%    _38
  _39 = put_list _38, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _40 = put_tuple `atom`, Anno, `key`

  %% Argument types:
  %%    _40 => {'atom', any(), 'key'}
  %%    _39 => nonempty_list({'atom', any(), 'value'})
  %% Aliased:
  %%    _39, 
  %%    _40
  _41 = put_list _40, _39

  %% Argument types:
  %%    _44 => {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'store'}}
  %%    _41 => nonempty_list({'atom', any(), 'key' | 'value'})
  %% Aliased:
  %%    _41, 
  %%    _44, 
  %%    Anno
  _45 = put_tuple `call`, Anno, _44, _41

  %% Argument types:
  %%    _45 => {'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'store'}}, nonempty_list({'atom', any(), 'key' | 'value'})}
  %% Aliased:
  %%    _45
  _46 = put_list _45, `[]`

  %% Argument types:
  %%    _35 => nonempty_list({'var', any(), 'mod'})
  %%    _46 => nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'store'}}, nonempty_list({'atom', any(), 'key' | 'value'})})
  %% Aliased:
  %%    _35, 
  %%    _46, 
  %%    Anno
  _49 = put_tuple `clause`, Anno, _35, `[]`, _46

  %% Argument types:
  %%    _49 => {'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'store'}}, nonempty_list({'atom', any(), 'key' | 'value'})})}
  %% Aliased:
  %%    _49
  _50 = put_list _49, `[]`

  %% Argument types:
  %%    _50 => nonempty_list({'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'store'}}, nonempty_list({'atom', any(), 'key' | 'value'})})})
  %% Aliased:
  %%    _50, 
  %%    Anno
  _51 = put_tuple `function`, Anno, `store`, `1`, _50

  %% Argument types:
  %%    _51 => {'function', any(), 'store', 1, nonempty_list({'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'store'}}, nonempty_list({'atom', any(), 'key' | 'value'})})})}
  %% Aliased:
  %%    _51
  _52 = put_list _51, `[]`

  %% Argument types:
  %%    _37 => nonempty_list({'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size'}}, nil()})})
  %% Aliased:
  %%    _37, 
  %%    Anno
  _53 = put_tuple `function`, Anno, `size`, `1`, _37

  %% Argument types:
  %%    _53 => {'function', any(), 'size', 1, nonempty_list({'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size'}}, nil()})})}
  %%    _52 => nonempty_list({'function', any(), 'store', 1, nonempty_list({'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'store'}}, nonempty_list({'atom', any(), 'key' | 'value'})})})})
  %% Aliased:
  %%    _52, 
  %%    _53
  _54 = put_list _53, _52

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _55 = put_tuple `attribute`, Anno, `export`, `[{size,1},{store,1}]`

  %% Argument types:
  %%    _55 => {'attribute', any(), 'export', nonempty_list({'size', 1} | {'store', 1})}
  %%    _54 => nonempty_list({'function', any(), 'size' | 'store', 1, nonempty_list({'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size' | 'store'}}, list({'atom', any(), 'key' | 'value'})})})})
  %% Aliased:
  %%    _54, 
  %%    _55
  Forms = put_list _55, _54

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _56 = put_tuple `attribute`, Anno, `module`, `tuple_calls_false`

  %% Argument types:
  %%    _56 => {'attribute', any(), 'module', 'tuple_calls_false'}
  %%    Forms => nonempty_list({'attribute', any(), 'export', nonempty_list({'size', 1} | {'store', 1})} | {'function', any(), 'size' | 'store', 1, nonempty_list({'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size' | 'store'}}, list({'atom', any(), 'key' | 'value'})})})})
  %% Aliased:
  %%    Forms
  %% Unique:
  %%    _56
  TupleCallsFalse = put_list _56, Forms

  %% compile_SUITE.erl:1000
  %% Unique:
  %%    TupleCallsFalse
  _57 = call (`compile`:`forms`/2), TupleCallsFalse, `[binary]`

  %% Aliased:
  %%    _57
  _106 = succeeded:body _57
  br _106, ^106, ^1

106:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _236 = is_tagged_tuple _57, `3`, `ok`
  br _236, ^233, ^108

233:
  %% Argument types:
  %%    _57 => {'ok', any(), any()}
  %% Aliased:
  %%    _57
  _58 = get_tuple_element _57, `2`

  %% compile_SUITE.erl:1001
  %% Aliased:
  %%    _58
  _83 = call (`code`:`load_binary`/3), `tuple_calls_false`, `"compile_SUITE.erl"`, _58

  %% Aliased:
  %%    _83
  _109 = succeeded:body _83
  br _109, ^303, ^1

303:
  br ^307

307:
  _113 = new_try_tag `'catch'`
  br _113, ^111, ^112

111:
  %% compile_SUITE.erl:1002
  _5 = call (`dict`/0)

  %% Aliased:
  %%    _5
  _115 = succeeded:body _5
  br _115, ^115, ^112

115:
  %% compile_SUITE.erl:1002
  %% Aliased:
  %%    _5
  _85 = call (`tuple_calls_false`:`store`/1), _5

  %% Aliased:
  %%    _85
  _116 = succeeded:body _85
  br _116, ^116, ^112

116:
  br ^110

112:
  %% Unique:
  %%    _113
  _119 = landingpad `'catch'`, _113

  %% Aliased:
  %%    _119
  _117 = extract _119, `0`
  br ^110

110:
  _120 = phi { _117, ^112 }, { _85, ^116 }

  %% Aliased:
  %%    _120
  %% Unique:
  %%    _113
  _6 = catch_end _113, _120

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _229 = is_tagged_tuple _6, `2`, `'EXIT'`
  br _229, ^226, ^122

226:
  %% Argument types:
  %%    _6 => {''EXIT'', any()}
  %% Aliased:
  %%    _6
  _61 = get_tuple_element _6, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _223 = is_tagged_tuple _61, `2`, `badarg`
  br _223, ^304, ^122

304:
  br ^308

308:
  _126 = new_try_tag `'catch'`
  br _126, ^124, ^125

124:
  %% compile_SUITE.erl:1003
  _8 = call (`dict`/0)

  %% Aliased:
  %%    _8
  _128 = succeeded:body _8
  br _128, ^128, ^125

128:
  %% compile_SUITE.erl:1003
  %% Aliased:
  %%    _8
  _87 = call (`tuple_calls_false`:`size`/1), _8

  %% Aliased:
  %%    _87
  _129 = succeeded:body _87
  br _129, ^129, ^125

129:
  br ^123

125:
  %% Unique:
  %%    _126
  _132 = landingpad `'catch'`, _126

  %% Aliased:
  %%    _132
  _130 = extract _132, `0`
  br ^123

123:
  _133 = phi { _130, ^125 }, { _87, ^129 }

  %% Aliased:
  %%    _133
  %% Unique:
  %%    _126
  _9 = catch_end _126, _133

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _216 = is_tagged_tuple _9, `2`, `'EXIT'`
  br _216, ^213, ^135

213:
  %% Argument types:
  %%    _9 => {''EXIT'', any()}
  %% Aliased:
  %%    _9
  _65 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _210 = is_tagged_tuple _65, `2`, `badarg`
  br _210, ^305, ^135

305:
  br ^309

309:
  _139 = new_try_tag `'catch'`
  br _139, ^137, ^138

137:
  %% compile_SUITE.erl:1004
  %% Result type:
  %%    {}
  _11 = call (`empty_tuple`/0)

  %% Unique:
  %%    _11
  _141 = succeeded:body _11
  br _141, ^141, ^138

141:
  %% compile_SUITE.erl:1004
  _89 = call (`tuple_calls_false`:`size`/1), `{}`

  %% Aliased:
  %%    _89
  _142 = succeeded:body _89
  br _142, ^142, ^138

142:
  br ^136

138:
  %% Unique:
  %%    _139
  _145 = landingpad `'catch'`, _139

  %% Aliased:
  %%    _145
  _143 = extract _145, `0`
  br ^136

136:
  _146 = phi { _143, ^138 }, { _89, ^142 }

  %% Aliased:
  %%    _146
  %% Unique:
  %%    _139
  _12 = catch_end _139, _146

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _203 = is_tagged_tuple _12, `2`, `'EXIT'`
  br _203, ^200, ^148

200:
  %% Argument types:
  %%    _12 => {''EXIT'', any()}
  %% Aliased:
  %%    _12
  _69 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _197 = is_tagged_tuple _69, `2`, `badarg`
  br _197, ^194, ^148

194:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _73 = put_tuple `attribute`, Anno, `module`, `tuple_calls_true`

  %% Argument types:
  %%    _73 => {'attribute', any(), 'module', 'tuple_calls_true'}
  %%    Forms => nonempty_list({'attribute', any(), 'export', nonempty_list({'size', 1} | {'store', 1})} | {'function', any(), 'size' | 'store', 1, nonempty_list({'clause', any(), nonempty_list({'var', any(), 'mod'}), nil(), nonempty_list({'call', any(), {'remote', any(), {'var', any(), 'mod'}, {'atom', any(), 'size' | 'store'}}, list({'atom', any(), 'key' | 'value'})})})})
  %% Aliased:
  %%    Forms
  %% Unique:
  %%    _73
  TupleCallsTrue = put_list _73, Forms

  %% compile_SUITE.erl:1007
  %% Unique:
  %%    TupleCallsTrue
  _74 = call (`compile`:`forms`/2), TupleCallsTrue, `[binary,tuple_calls]`

  %% Aliased:
  %%    _74
  _149 = succeeded:body _74
  br _149, ^149, ^1

149:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _190 = is_tagged_tuple _74, `3`, `ok`
  br _190, ^187, ^151

187:
  %% Argument types:
  %%    _74 => {'ok', any(), any()}
  %% Aliased:
  %%    _74
  _75 = get_tuple_element _74, `2`

  %% compile_SUITE.erl:1008
  %% Aliased:
  %%    _75
  _90 = call (`code`:`load_binary`/3), `tuple_calls_true`, `"compile_SUITE.erl"`, _75

  %% Aliased:
  %%    _90
  _152 = succeeded:body _90
  br _152, ^152, ^1

152:
  %% compile_SUITE.erl:1009
  _16 = call (`dict`/0)

  %% Aliased:
  %%    _16
  _153 = succeeded:body _16
  br _153, ^153, ^1

153:
  %% compile_SUITE.erl:1009
  %% Aliased:
  %%    _16
  Dict = call (`tuple_calls_true`:`store`/1), _16

  %% Aliased:
  %%    Dict
  _154 = succeeded:body Dict
  br _154, ^154, ^1

154:
  %% compile_SUITE.erl:1010
  %% Aliased:
  %%    Dict
  _78 = call (`tuple_calls_true`:`size`/1), Dict

  %% Aliased:
  %%    _78
  _155 = succeeded:body _78
  br _155, ^155, ^1

155:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _185 = bif:'=:=' _78, `1`
  br _185, ^306, ^157

306:
  br ^310

310:
  _161 = new_try_tag `'catch'`
  br _161, ^159, ^160

159:
  %% compile_SUITE.erl:1011
  %% Result type:
  %%    {}
  _19 = call (`empty_tuple`/0)

  %% Unique:
  %%    _19
  _163 = succeeded:body _19
  br _163, ^163, ^160

163:
  %% compile_SUITE.erl:1011
  _92 = call (`tuple_calls_true`:`size`/1), `{}`

  %% Aliased:
  %%    _92
  _164 = succeeded:body _92
  br _164, ^164, ^160

164:
  br ^158

160:
  %% Unique:
  %%    _161
  _167 = landingpad `'catch'`, _161

  %% Aliased:
  %%    _167
  _165 = extract _167, `0`
  br ^158

158:
  _168 = phi { _165, ^160 }, { _92, ^164 }

  %% Aliased:
  %%    _168
  %% Unique:
  %%    _161
  _20 = catch_end _161, _168

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _180 = is_tagged_tuple _20, `2`, `'EXIT'`
  br _180, ^177, ^170

177:
  %% Argument types:
  %%    _20 => {''EXIT'', any()}
  %% Aliased:
  %%    _20
  _79 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _174 = is_tagged_tuple _79, `2`, `badarg`
  br _174, ^171, ^170

171:
  %% Result type:
  %%    'ok'
  ret `ok`

170:
  %% compile_SUITE.erl:1011
  %% Aliased:
  %%    _20
  _93 = match_fail `badmatch`, _20

  %% Unique:
  %%    _93
  _183 = succeeded:body _93
  br ^1

157:
  %% compile_SUITE.erl:1010
  %% Aliased:
  %%    _78
  _94 = match_fail `badmatch`, _78

  %% Unique:
  %%    _94
  _186 = succeeded:body _94
  br ^1

151:
  %% compile_SUITE.erl:1007
  %% Aliased:
  %%    _74
  _95 = match_fail `badmatch`, _74

  %% Unique:
  %%    _95
  _193 = succeeded:body _95
  br ^1

148:
  %% compile_SUITE.erl:1004
  %% Aliased:
  %%    _12
  _96 = match_fail `badmatch`, _12

  %% Unique:
  %%    _96
  _206 = succeeded:body _96
  br ^1

135:
  %% compile_SUITE.erl:1003
  %% Aliased:
  %%    _9
  _97 = match_fail `badmatch`, _9

  %% Unique:
  %%    _97
  _219 = succeeded:body _97
  br ^1

122:
  %% compile_SUITE.erl:1002
  %% Aliased:
  %%    _6
  _98 = match_fail `badmatch`, _6

  %% Unique:
  %%    _98
  _232 = succeeded:body _98
  br ^1

108:
  %% compile_SUITE.erl:1000
  %% Aliased:
  %%    _57
  _99 = match_fail `badmatch`, _57

  %% Unique:
  %%    _99
  _239 = succeeded:body _99
  br ^1

103:
  %% compile_SUITE.erl:987
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-tuple_calls/1-',1}}
  _100 = match_fail `function_clause`, _0

  %% Unique:
  %%    _100
  _240 = succeeded:body _100
  br ^1

1:
  _101 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _101
}

%% compile_SUITE.erl:1015
%% Counter = 6
%% bs_ensure_opt: true
function `compile_SUITE`:`dict`() {
0:
  %% compile_SUITE.erl:1016
  _2 = call (`dict`:`new`/0)

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:1017
%% Counter = 4
%% bs_ensure_opt: true
function `compile_SUITE`:`empty_tuple`() {
0:
  %% Result type:
  %%    {}
  ret `{}`
}

%% compile_SUITE.erl:1020
%% Counter = 111
%% bs_ensure_opt: true
function `compile_SUITE`:`env`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _45 = bif:is_list _0
  br _45, ^45, ^44

45:
  %% compile_SUITE.erl:1021
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _14 = call (`get_files`/3), _0, `simple`, `env`

  %% Aliased:
  %%    _14
  _46 = succeeded:body _14
  br _46, ^102, ^1

102:
  %% Argument types:
  %%    _14 => {any(), any()}
  %% Aliased:
  %%    _14
  _16 = get_tuple_element _14, `0`

  %% compile_SUITE.erl:1022
  _17 = call (`file`:`get_cwd`/0)

  %% Aliased:
  %%    _17
  _49 = succeeded:body _17
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _98 = is_tagged_tuple _17, `2`, `ok`
  br _98, ^95, ^51

95:
  %% Argument types:
  %%    _14 => {any(), any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `1`

  %% compile_SUITE.erl:1023
  %% Aliased:
  %%    _15
  _3 = call (`filename`:`dirname`/1), _15

  %% Aliased:
  %%    _3
  _52 = succeeded:body _3
  br _52, ^52, ^1

52:
  %% compile_SUITE.erl:1023
  %% Aliased:
  %%    _3
  _20 = call (`file`:`set_cwd`/1), _3

  %% Aliased:
  %%    _20
  _53 = succeeded:body _20
  br _53, ^53, ^1

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _93 = bif:'=:=' _20, `ok`
  br _93, ^92, ^55

92:
  %% compile_SUITE.erl:1025
  _21 = call (`os`:`putenv`/2), `"ERL_COMPILER_OPTIONS"`, `"binary"`

  %% Aliased:
  %%    _21
  _56 = succeeded:body _21
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _90 = bif:'=:=' _21, `true`
  br _90, ^89, ^58

89:
  %% Argument types:
  %%    _17 => {'ok', any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`
  _63 = new_try_tag `'try'`
  br _63, ^62, ^60

62:
  %% compile_SUITE.erl:1027
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _15, 
  %%    _16
  _27 = call (`env_1`/2), _16, _15

  %% Unique:
  %%    _27
  _64 = succeeded:body _27
  br _64, ^64, ^60

64:
  %% Unique:
  %%    _63
  _88 = kill_try_tag _63

  %% compile_SUITE.erl:1029
  _22 = call (`os`:`putenv`/2), `"ERL_COMPILER_OPTIONS"`, `"ignore_me"`

  %% Aliased:
  %%    _22
  _65 = succeeded:body _22
  br _65, ^65, ^1

65:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _73 = bif:'=:=' _22, `true`
  br _73, ^72, ^67

72:
  %% compile_SUITE.erl:1030
  %% Aliased:
  %%    _18
  _28 = call (`file`:`set_cwd`/1), _18

  %% Aliased:
  %%    _28
  _68 = succeeded:body _28
  br _68, ^68, ^1

68:
  %% compile_SUITE.erl:1031
  %% Aliased:
  %%    _15
  _29 = call (`file`:`delete`/1), _15

  %% Aliased:
  %%    _29
  _69 = succeeded:body _29
  br _69, ^69, ^1

69:
  %% compile_SUITE.erl:1032
  %% Aliased:
  %%    _15
  _7 = call (`filename`:`dirname`/1), _15

  %% Aliased:
  %%    _7
  _70 = succeeded:body _7
  br _70, ^70, ^1

70:
  %% compile_SUITE.erl:1032
  %% Aliased:
  %%    _7
  _30 = call (`file`:`del_dir`/1), _7

  %% Aliased:
  %%    _30
  _71 = succeeded:body _30
  br _71, ^61, ^1

61:
  %% Result type:
  %%    'ok'
  ret `ok`

67:
  %% compile_SUITE.erl:1029
  %% Aliased:
  %%    _22
  _31 = match_fail `badmatch`, _22

  %% Unique:
  %%    _31
  _74 = succeeded:body _31
  br ^1

60:
  %% Unique:
  %%    _63
  _86 = landingpad `'try'`, _63

  %% Aliased:
  %%    _86
  _11 = extract _86, `1`

  %% Aliased:
  %%    _86
  _10 = extract _86, `2`

  %% Unique:
  %%    _63
  _87 = kill_try_tag _63
  br ^110

110:
  %% compile_SUITE.erl:1029
  _23 = call (`os`:`putenv`/2), `"ERL_COMPILER_OPTIONS"`, `"ignore_me"`

  %% Aliased:
  %%    _23
  _75 = succeeded:body _23
  br _75, ^75, ^1

75:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _84 = bif:'=:=' _23, `true`
  br _84, ^83, ^77

83:
  %% compile_SUITE.erl:1030
  %% Aliased:
  %%    _18
  _32 = call (`file`:`set_cwd`/1), _18

  %% Aliased:
  %%    _32
  _78 = succeeded:body _32
  br _78, ^78, ^1

78:
  %% compile_SUITE.erl:1031
  %% Aliased:
  %%    _15
  _33 = call (`file`:`delete`/1), _15

  %% Aliased:
  %%    _33
  _79 = succeeded:body _33
  br _79, ^79, ^1

79:
  %% compile_SUITE.erl:1032
  %% Aliased:
  %%    _15
  _25 = call (`filename`:`dirname`/1), _15

  %% Aliased:
  %%    _25
  _80 = succeeded:body _25
  br _80, ^80, ^1

80:
  %% compile_SUITE.erl:1032
  %% Aliased:
  %%    _25
  _34 = call (`file`:`del_dir`/1), _25

  %% Aliased:
  %%    _34
  _81 = succeeded:body _34
  br _81, ^81, ^1

81:
  %% Aliased:
  %%    _10, 
  %%    _11
  _35 = resume _10, _11

  %% Unique:
  %%    _35
  _82 = succeeded:body _35
  br ^1

77:
  %% compile_SUITE.erl:1029
  %% Aliased:
  %%    _23
  _36 = match_fail `badmatch`, _23

  %% Unique:
  %%    _36
  _85 = succeeded:body _36
  br ^1

58:
  %% compile_SUITE.erl:1025
  %% Aliased:
  %%    _21
  _37 = match_fail `badmatch`, _21

  %% Unique:
  %%    _37
  _91 = succeeded:body _37
  br ^1

55:
  %% compile_SUITE.erl:1023
  %% Aliased:
  %%    _20
  _38 = match_fail `badmatch`, _20

  %% Unique:
  %%    _38
  _94 = succeeded:body _38
  br ^1

51:
  %% compile_SUITE.erl:1022
  %% Aliased:
  %%    _17
  _39 = match_fail `badmatch`, _17

  %% Unique:
  %%    _39
  _101 = succeeded:body _39
  br ^1

44:
  %% compile_SUITE.erl:1020
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-env/1-',1}}
  _41 = match_fail `function_clause`, _0

  %% Unique:
  %%    _41
  _107 = succeeded:body _41
  br ^1

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _42
}

%% compile_SUITE.erl:1036
%% Counter = 248
%% bs_ensure_opt: true
function `compile_SUITE`:`env_1`(_0, _1) {
0:
  %% compile_SUITE.erl:1038
  %% Aliased:
  %%    _0
  _24 = call (`compile`:`file`/1), _0

  %% Aliased:
  %%    _24
  _91 = succeeded:body _24
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _233 = is_tagged_tuple _24, `3`, `ok`
  br _233, ^230, ^93

230:
  %% Argument types:
  %%    _24 => {'ok', any(), any()}
  %% Aliased:
  %%    _24
  _26 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _229 = bif:'=:=' _26, `simple`
  br _229, ^228, ^93

228:
  %% Argument types:
  %%    _24 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _24
  _25 = get_tuple_element _24, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _28 = bs_start_match `new`, _25

  %% Aliased:
  %%    _28
  _227 = succeeded:guard _28
  br _227, ^227, ^93

227:
  _240 = bs_ensure _28, `0`, `8`
  _241 = succeeded:guard _240
  br _241, ^239, ^93

239:
  %% compile_SUITE.erl:1038
  %% Aliased:
  %%    _28
  %% Anno: #{ensured => true}
  _29 = bs_match `skip`, _240, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _29
  _94 = succeeded:guard _29
  br _94, ^237, ^93

237:
  %% compile_SUITE.erl:1039
  %% Aliased:
  %%    _0
  _31 = call (`compile`:`noenv_file`/2), _0, `[debug_info]`

  %% Aliased:
  %%    _31
  _95 = succeeded:body _31
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _225 = bif:'=:=' _31, `{ok,simple}`
  br _225, ^225, ^97

225:
  %% compile_SUITE.erl:1040
  %% Aliased:
  %%    _0
  _32 = call (`compile`:`noenv_file`/2), _0, `debug_info`

  %% Aliased:
  %%    _32
  _98 = succeeded:body _32
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _223 = bif:'=:=' _32, `{ok,simple}`
  br _223, ^223, ^100

223:
  %% compile_SUITE.erl:1042
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1
  _33 = call (`exists`/1), _1

  %% Unique:
  %%    _33
  _101 = succeeded:body _33
  br _101, ^101, ^1

101:
  br _33, ^220, ^103

220:
  %% compile_SUITE.erl:1044
  %% Aliased:
  %%    _1
  _34 = call (`beam_lib`:`chunks`/2), _1, `[abstract_code]`

  %% Aliased:
  %%    _34
  _104 = succeeded:body _34
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _216 = is_tagged_tuple _34, `2`, `ok`
  br _216, ^213, ^106

213:
  %% Argument types:
  %%    _34 => {'ok', any()}
  %% Aliased:
  %%    _34
  _35 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _210 = is_tagged_tuple _35, `2`, `simple`
  br _210, ^207, ^106

207:
  %% Argument types:
  %%    _35 => {'simple', any()}
  %% Aliased:
  %%    _35
  _37 = get_tuple_element _35, `1`

  %% Aliased:
  %%    _37
  _206 = is_nonempty_list _37
  br _206, ^206, ^106

206:
  %% Argument types:
  %%    _37 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _37
  _40 = get_hd _37

  %% Argument types:
  %%    _37 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _37
  _39 = get_tl _37

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _203 = is_tagged_tuple _40, `2`, `abstract_code`
  br _203, ^200, ^106

200:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _199 = bif:'=:=' _39, `[]`
  br _199, ^199, ^106

199:
  %% Argument types:
  %%    _40 => {'abstract_code', any()}
  %% Aliased:
  %%    _40
  _41 = get_tuple_element _40, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _195 = is_tagged_tuple _41, `2`, `raw_abstract_v1`
  br _195, ^192, ^108

192:
  %% compile_SUITE.erl:1048
  _45 = call (`os`:`putenv`/2), `"ERL_COMPILER_OPTIONS"`, `"strong_validation"`

  %% Aliased:
  %%    _45
  _109 = succeeded:body _45
  br _109, ^109, ^1

109:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _190 = bif:'=:=' _45, `true`
  br _190, ^189, ^111

189:
  %% Argument types:
  %%    _41 => {'raw_abstract_v1', any()}
  %% Aliased:
  %%    _41
  _43 = get_tuple_element _41, `1`

  %% compile_SUITE.erl:1049
  %% Aliased:
  %%    _43
  _46 = call (`compile`:`forms`/1), _43

  %% Aliased:
  %%    _46
  _112 = succeeded:body _46
  br _112, ^112, ^1

112:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _187 = bif:'=:=' _46, `{ok,simple}`
  br _187, ^187, ^114

187:
  %% compile_SUITE.erl:1050
  %% Aliased:
  %%    _43
  _47 = call (`compile`:`noenv_forms`/2), _43, `[]`

  %% Aliased:
  %%    _47
  _115 = succeeded:body _47
  br _115, ^115, ^1

115:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _183 = is_tagged_tuple _47, `3`, `ok`
  br _183, ^180, ^117

180:
  %% Argument types:
  %%    _47 => {'ok', any(), any()}
  %% Aliased:
  %%    _47
  _49 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _179 = bif:'=:=' _49, `simple`
  br _179, ^178, ^117

178:
  %% Argument types:
  %%    _47 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _47
  _48 = get_tuple_element _47, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _51 = bs_start_match `new`, _48

  %% Aliased:
  %%    _51
  _177 = succeeded:guard _51
  br _177, ^177, ^117

177:
  _243 = bs_ensure _51, `32`, `8`
  _244 = succeeded:guard _243
  br _244, ^242, ^117

242:
  %% Argument types:
  %%    _243 => bs_context(1)
  %% Aliased:
  %%    _51
  %% Anno: #{ensured => true}
  _53 = bs_match `string`, _243, `<<"FOR1">>`

  %% Aliased:
  %%    _53
  _119 = succeeded:guard _53
  br _119, ^119, ^117

119:
  %% compile_SUITE.erl:1050
  %% Aliased:
  %%    _53
  %% Anno: #{ensured => true}
  _54 = bs_match `skip`, _53, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _54
  _120 = succeeded:guard _54
  br _120, ^238, ^117

238:
  %% compile_SUITE.erl:1053
  _56 = call (`compile`:`output_generated`/1), `[]`

  %% Aliased:
  %%    _56
  _121 = succeeded:body _56
  br _121, ^121, ^1

121:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _175 = bif:'=:=' _56, `false`
  br _175, ^174, ^123

174:
  %% compile_SUITE.erl:1054
  _57 = call (`compile`:`noenv_output_generated`/1), `[]`

  %% Aliased:
  %%    _57
  _124 = succeeded:body _57
  br _124, ^124, ^1

124:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _172 = bif:'=:=' _57, `true`
  br _172, ^171, ^126

171:
  %% compile_SUITE.erl:1056
  %% Aliased:
  %%    _1
  _58 = call (`file`:`delete`/1), _1

  %% Aliased:
  %%    _58
  _127 = succeeded:body _58
  br _127, ^127, ^1

127:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _169 = bif:'=:=' _58, `ok`
  br _169, ^168, ^129

168:
  %% compile_SUITE.erl:1059
  _59 = call (`os`:`putenv`/2), `"ERL_COMPILER_OPTIONS"`, `"'unterminated_atom"`

  %% Aliased:
  %%    _59
  _130 = succeeded:body _59
  br _130, ^130, ^1

130:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _166 = bif:'=:=' _59, `true`
  br _166, ^165, ^132

165:
  %% compile_SUITE.erl:1060
  %% Aliased:
  %%    _43
  _60 = call (`compile`:`forms`/2), _43, `[basic_validation]`

  %% Aliased:
  %%    _60
  _133 = succeeded:body _60
  br _133, ^133, ^1

133:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _163 = bif:'=:=' _60, `{ok,[]}`
  br _163, ^163, ^135

163:
  %% compile_SUITE.erl:1061
  _61 = call (`os`:`putenv`/2), `"ERL_COMPILER_OPTIONS"`, `",,,"`

  %% Aliased:
  %%    _61
  _136 = succeeded:body _61
  br _136, ^136, ^1

136:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _161 = bif:'=:=' _61, `true`
  br _161, ^160, ^138

160:
  %% compile_SUITE.erl:1062
  %% Aliased:
  %%    _43
  _62 = call (`compile`:`forms`/2), _43, `[basic_validation]`

  %% Aliased:
  %%    _62
  _139 = succeeded:body _62
  br _139, ^139, ^1

139:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _158 = bif:'=:=' _62, `{ok,[]}`
  br _158, ^158, ^141

158:
  %% compile_SUITE.erl:1063
  %% Aliased:
  %%    _43
  _63 = call (`compile`:`noenv_forms`/2), _43, `no_postopt`

  %% Aliased:
  %%    _63
  _142 = succeeded:body _63
  br _142, ^142, ^1

142:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _154 = is_tagged_tuple _63, `3`, `ok`
  br _154, ^151, ^144

151:
  %% Argument types:
  %%    _63 => {'ok', any(), any()}
  %% Aliased:
  %%    _63
  _65 = get_tuple_element _63, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _150 = bif:'=:=' _65, `simple`
  br _150, ^149, ^144

149:
  %% Argument types:
  %%    _63 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _63
  _64 = get_tuple_element _63, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _67 = bs_start_match `new`, _64

  %% Aliased:
  %%    _67
  _148 = succeeded:guard _67
  br _148, ^148, ^144

148:
  _246 = bs_ensure _67, `32`, `8`
  _247 = succeeded:guard _246
  br _247, ^245, ^144

245:
  %% Argument types:
  %%    _246 => bs_context(1)
  %% Aliased:
  %%    _67
  %% Anno: #{ensured => true}
  _69 = bs_match `string`, _246, `<<"FOR1">>`

  %% Aliased:
  %%    _69
  _146 = succeeded:guard _69
  br _146, ^146, ^144

146:
  %% compile_SUITE.erl:1063
  %% Aliased:
  %%    _69
  %% Anno: #{ensured => true}
  _70 = bs_match `skip`, _69, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _70
  _147 = succeeded:guard _70
  br _147, ^147, ^144

147:
  %% Result type:
  %%    'ok'
  ret `ok`

144:
  %% compile_SUITE.erl:1063
  %% Aliased:
  %%    _63
  _72 = match_fail `badmatch`, _63

  %% Unique:
  %%    _72
  _157 = succeeded:body _72
  br ^1

141:
  %% compile_SUITE.erl:1062
  %% Aliased:
  %%    _62
  _73 = match_fail `badmatch`, _62

  %% Unique:
  %%    _73
  _159 = succeeded:body _73
  br ^1

138:
  %% compile_SUITE.erl:1061
  %% Aliased:
  %%    _61
  _74 = match_fail `badmatch`, _61

  %% Unique:
  %%    _74
  _162 = succeeded:body _74
  br ^1

135:
  %% compile_SUITE.erl:1060
  %% Aliased:
  %%    _60
  _75 = match_fail `badmatch`, _60

  %% Unique:
  %%    _75
  _164 = succeeded:body _75
  br ^1

132:
  %% compile_SUITE.erl:1059
  %% Aliased:
  %%    _59
  _76 = match_fail `badmatch`, _59

  %% Unique:
  %%    _76
  _167 = succeeded:body _76
  br ^1

129:
  %% compile_SUITE.erl:1056
  %% Aliased:
  %%    _58
  _77 = match_fail `badmatch`, _58

  %% Unique:
  %%    _77
  _170 = succeeded:body _77
  br ^1

126:
  %% compile_SUITE.erl:1054
  %% Aliased:
  %%    _57
  _78 = match_fail `badmatch`, _57

  %% Unique:
  %%    _78
  _173 = succeeded:body _78
  br ^1

123:
  %% compile_SUITE.erl:1053
  %% Aliased:
  %%    _56
  _79 = match_fail `badmatch`, _56

  %% Unique:
  %%    _79
  _176 = succeeded:body _79
  br ^1

117:
  %% compile_SUITE.erl:1050
  %% Aliased:
  %%    _47
  _80 = match_fail `badmatch`, _47

  %% Unique:
  %%    _80
  _186 = succeeded:body _80
  br ^1

114:
  %% compile_SUITE.erl:1049
  %% Aliased:
  %%    _46
  _81 = match_fail `badmatch`, _46

  %% Unique:
  %%    _81
  _188 = succeeded:body _81
  br ^1

111:
  %% compile_SUITE.erl:1048
  %% Aliased:
  %%    _45
  _82 = match_fail `badmatch`, _45

  %% Unique:
  %%    _82
  _191 = succeeded:body _82
  br ^1

108:
  %% compile_SUITE.erl:1045
  %% Aliased:
  %%    _41
  _83 = match_fail `badmatch`, _41

  %% Unique:
  %%    _83
  _198 = succeeded:body _83
  br ^1

106:
  %% compile_SUITE.erl:1043
  %% Aliased:
  %%    _34
  _84 = match_fail `badmatch`, _34

  %% Unique:
  %%    _84
  _219 = succeeded:body _84
  br ^1

103:
  %% compile_SUITE.erl:1042
  _85 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _85
  _222 = succeeded:body _85
  br ^1

100:
  %% compile_SUITE.erl:1040
  %% Aliased:
  %%    _32
  _86 = match_fail `badmatch`, _32

  %% Unique:
  %%    _86
  _224 = succeeded:body _86
  br ^1

97:
  %% compile_SUITE.erl:1039
  %% Aliased:
  %%    _31
  _87 = match_fail `badmatch`, _31

  %% Unique:
  %%    _87
  _226 = succeeded:body _87
  br ^1

93:
  %% compile_SUITE.erl:1038
  %% Aliased:
  %%    _24
  _88 = match_fail `badmatch`, _24

  %% Unique:
  %%    _88
  _236 = succeeded:body _88
  br ^1

1:
  _89 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _89
}

%% compile_SUITE.erl:1070
%% Counter = 59
%% bs_ensure_opt: true
function `compile_SUITE`:`core_pp`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _45 = bif:is_list _0
  br _45, ^45, ^44

45:
  %% compile_SUITE.erl:1071
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _46 = succeeded:body PrivDir
  br _46, ^46, ^1

46:
  %% compile_SUITE.erl:1072
  %% Aliased:
  %%    PrivDir
  Outdir = call (`filename`:`join`/2), PrivDir, `"core_pp"`

  %% Aliased:
  %%    Outdir
  _47 = succeeded:body Outdir
  br _47, ^47, ^1

47:
  %% compile_SUITE.erl:1073
  %% Aliased:
  %%    Outdir
  _18 = call (`file`:`make_dir`/1), Outdir

  %% Aliased:
  %%    _18
  _48 = succeeded:body _18
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _55 = bif:'=:=' _18, `ok`
  br _55, ^54, ^50

54:
  %% compile_SUITE.erl:1075
  %% Result type:
  %%    list(any())
  TestBeams = call (`get_unique_beam_files`/0)

  %% Aliased:
  %%    TestBeams
  _51 = succeeded:body TestBeams
  br _51, ^51, ^1

51:
  %% compile_SUITE.erl:1079
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    TestBeams
  _12 = call (`'-core_pp/1-lc$^0/1-0-'`/1), TestBeams

  %% Aliased:
  %%    _12
  _52 = succeeded:body _12
  br _52, ^52, ^1

52:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Outdir
  _16 = make_fun (`'-core_pp/1-fun-1-'`/2), Outdir

  %% compile_SUITE.erl:1080
  %% Aliased:
  %%    _12, 
  %%    _16
  _39 = call (`test_lib`:`p_run`/2), _16, _12

  %% Aliased:
  %%    _39
  _53 = succeeded:body _39
  br _53, ^53, ^1

53:
  %% Aliased:
  %%    _39
  ret _39

50:
  %% compile_SUITE.erl:1073
  %% Aliased:
  %%    _18
  _40 = match_fail `badmatch`, _18

  %% Unique:
  %%    _40
  _56 = succeeded:body _40
  br ^1

44:
  %% compile_SUITE.erl:1070
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-core_pp/1-',1}}
  _41 = match_fail `function_clause`, _0

  %% Unique:
  %%    _41
  _57 = succeeded:body _41
  br ^1

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _42
}

%% compile_SUITE.erl:1082
%% Counter = 57
%% bs_ensure_opt: true
function `compile_SUITE`:`do_core_pp`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _51 = bif:is_tuple _0
  br _51, ^51, ^28

51:
  %% Argument types:
  %%    _0 => {...}
  %% Aliased:
  %%    _0
  _52 = bif:tuple_size _0

  %% Argument types:
  %%    _52 => 0..16777215
  %% Unique:
  %%    _52
  _53 = bif:'=:=' _52, `2`
  br _53, ^50, ^28

50:
  %% Argument types:
  %%    _0 => {any(), any()}
  %% Aliased:
  %%    _0
  _11 = get_tuple_element _0, `0`
  _33 = new_try_tag `'try'`
  br _33, ^32, ^30

32:
  %% Argument types:
  %%    _0 => {any(), any()}
  %% Aliased:
  %%    _0
  _10 = get_tuple_element _0, `1`

  %% compile_SUITE.erl:1084
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _1, 
  %%    _10, 
  %%    _11
  _22 = call (`do_core_pp_1`/3), _11, _10, _1

  %% Unique:
  %%    _22
  _34 = succeeded:body _22
  br _34, ^34, ^30

34:
  %% Unique:
  %%    _33
  _49 = kill_try_tag _33
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _22
  ret _22

30:
  %% Unique:
  %%    _33
  _47 = landingpad `'try'`, _33

  %% Aliased:
  %%    _47
  _5 = extract _47, `0`

  %% Aliased:
  %%    _47
  _4 = extract _47, `1`

  %% Aliased:
  %%    _47
  _3 = extract _47, `2`

  %% Unique:
  %%    _33
  _48 = kill_try_tag _33

  %% Argument types:
  %%    _5 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _5
  _45 = bif:'=:=' _5, `throw`
  br _45, ^44, ^36

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _41 = is_tagged_tuple _4, `2`, `error`
  br _41, ^38, ^36

38:
  %% Argument types:
  %%    _4 => {'error', any()}
  %% Aliased:
  %%    _4
  _17 = get_tuple_element _4, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _19 = put_list _11, `[]`

  %% Argument types:
  %%    _19 => nonempty_list(any())
  %% Aliased:
  %%    _17
  %% Unique:
  %%    _19
  _20 = put_list _17, _19

  %% compile_SUITE.erl:1087
  %% Unique:
  %%    _20
  _23 = call (`io`:`format`/2), `"*** compilation failure '~p' for module ~s\n"`, _20

  %% Aliased:
  %%    _23
  _37 = succeeded:body _23
  br _37, ^37, ^1

37:
  %% Result type:
  %%    'error'
  ret `error`

36:
  %% Aliased:
  %%    _3
  Stk = build_stacktrace _3

  %% Argument types:
  %%    
  %% Aliased:
  %%    Stk
  _13 = put_list Stk, `[]`

  %% Argument types:
  %%    _13 => nonempty_list(any())
  %% Aliased:
  %%    _4
  %% Unique:
  %%    _13
  _14 = put_list _4, _13

  %% Argument types:
  %%    _5 => 'error' | 'exit' | 'throw'
  %%    _14 => nonempty_list(any())
  %% Unique:
  %%    _5, 
  %%    _14
  _15 = put_list _5, _14

  %% Argument types:
  %%    _15 => nonempty_list(any())
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _15
  _16 = put_list _11, _15

  %% compile_SUITE.erl:1091
  %% Unique:
  %%    _16
  _24 = call (`io`:`format`/2), `"~p: ~p ~p\n~p\n"`, _16

  %% Aliased:
  %%    _24
  _46 = succeeded:body _24
  br _46, ^46, ^1

46:
  %% Result type:
  %%    'error'
  ret `error`

28:
  %% compile_SUITE.erl:1082
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-do_core_pp/2-',2}}
  _25 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _25
  _54 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% compile_SUITE.erl:1095
%% Counter = 82
%% bs_ensure_opt: true
function `compile_SUITE`:`do_core_pp_1`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:1096
  %% Aliased:
  %%    _1
  _19 = call (`compile`:`forms`/2), _1, `[to_core]`

  %% Aliased:
  %%    _19
  _38 = succeeded:body _19
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _75 = is_tagged_tuple _19, `3`, `ok`
  br _75, ^74, ^40

74:
  %% Argument types:
  %%    _19 => {'ok', any(), any()}
  %% Aliased:
  %%    _19
  _21 = get_tuple_element _19, `1`

  %% Argument types:
  %%    _19 => {'ok', any(), any()}
  %% Aliased:
  %%    _19
  _20 = get_tuple_element _19, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _21
  _41 = bif:'=:=' _21, _0
  br _41, ^41, ^40

41:
  %% compile_SUITE.erl:1097
  %% Aliased:
  %%    _0
  _4 = call (`erlang`:`atom_to_list`/1), _0

  %% Aliased:
  %%    _4
  _42 = succeeded:body _4
  br _42, ^42, ^1

42:
  %% compile_SUITE.erl:1097
  %% Aliased:
  %%    _4
  _5 = call (`erlang`:`'++'`/2), _4, `".core"`

  %% compile_SUITE.erl:1097
  %% Aliased:
  %%    _2, 
  %%    _5
  CoreFile = call (`filename`:`join`/2), _2, _5

  %% Aliased:
  %%    CoreFile
  _44 = succeeded:body CoreFile
  br _44, ^44, ^1

44:
  %% compile_SUITE.erl:1098
  %% Aliased:
  %%    _20
  CorePP = call (`core_pp`:`format`/1), _20

  %% Aliased:
  %%    CorePP
  _45 = succeeded:body CorePP
  br _45, ^45, ^1

45:
  %% compile_SUITE.erl:1099
  %% Aliased:
  %%    CorePP
  _8 = call (`unicode`:`characters_to_binary`/1), CorePP

  %% Aliased:
  %%    _8
  _46 = succeeded:body _8
  br _46, ^46, ^1

46:
  %% compile_SUITE.erl:1099
  %% Aliased:
  %%    _8, 
  %%    CoreFile
  _23 = call (`file`:`write_file`/2), CoreFile, _8

  %% Aliased:
  %%    _23
  _47 = succeeded:body _23
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _70 = bif:'=:=' _23, `ok`
  br _70, ^69, ^49

69:
  %% compile_SUITE.erl:1102
  %% Aliased:
  %%    CoreFile
  _24 = call (`compile`:`file`/2), CoreFile, `[report_errors,from_core,no_copt,to_core,binary]`

  %% Aliased:
  %%    _24
  _50 = succeeded:body _24
  br _50, ^50, ^1

50:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _57 = is_tagged_tuple _24, `3`, `ok`
  br _57, ^56, ^52

56:
  %% Argument types:
  %%    _24 => {'ok', any(), any()}
  %% Aliased:
  %%    _24
  _27 = get_tuple_element _24, `1`

  %% Argument types:
  %%    _24 => {'ok', any(), any()}
  %% Aliased:
  %%    _24
  _26 = get_tuple_element _24, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _27
  _53 = bif:'=:=' _27, _0
  br _53, ^80, ^52

80:
  %% compile_SUITE.erl:1106
  %% Aliased:
  %%    CoreFile
  _29 = call (`file`:`delete`/1), CoreFile

  %% Aliased:
  %%    _29
  _61 = succeeded:body _29
  br _61, ^61, ^1

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _67 = bif:'=:=' _29, `ok`
  br _67, ^66, ^63

66:
  %% compile_SUITE.erl:1109
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _26
  _31 = call (`compile_forms`/3), _0, _26, `[clint,ssalint,from_core,binary]`

  %% Unique:
  %%    _31
  _64 = succeeded:body _31
  br _64, ^64, ^1

64:
  %% compile_SUITE.erl:1118
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _26
  _32 = call (`compile_forms`/3), _0, _26, `[clint,ssalint,from_core,no_copt,binary]`

  %% Unique:
  %%    _32
  _65 = succeeded:body _32
  br _65, ^81, ^1

81:
  ret _32

63:
  %% compile_SUITE.erl:1106
  %% Aliased:
  %%    _29
  _33 = match_fail `badmatch`, _29

  %% Unique:
  %%    _33
  _68 = succeeded:body _33
  br ^1

52:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _25 = put_tuple `error`, _24

  %% compile_SUITE.erl:1104
  %% Unique:
  %%    _25
  %% Anno: #{thrown_type => {t_tuple,2,true,#{1 => {t_atom,[error]}}}}
  _30 = call (`erlang`:`throw`/1), _25

  %% Aliased:
  %%    _30
  _60 = succeeded:body _30
  br ^1

49:
  %% compile_SUITE.erl:1099
  %% Aliased:
  %%    _23
  _34 = match_fail `badmatch`, _23

  %% Unique:
  %%    _34
  _71 = succeeded:body _34
  br ^1

40:
  %% compile_SUITE.erl:1096
  %% Aliased:
  %%    _19
  _35 = match_fail `badmatch`, _19

  %% Unique:
  %%    _35
  _78 = succeeded:body _35
  br ^1

1:
  _36 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _36
}

%% compile_SUITE.erl:1122
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _2 =>
%%     nonempty_list('binary' | 'clint' | 'from_core' | 'no_copt' | 'ssalint')
function `compile_SUITE`:`compile_forms`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _2 => nonempty_list('binary' | 'clint' | 'from_core' | 'no_copt' | 'ssalint')
  %% Unique:
  %%    _2
  _9 = put_list `report_errors`, _2

  %% compile_SUITE.erl:1123
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _9
  _10 = call (`compile`:`forms`/2), _1, _9

  %% Aliased:
  %%    _10
  _18 = succeeded:body _10
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _25 = is_tagged_tuple _10, `3`, `ok`
  br _25, ^22, ^20

22:
  %% Argument types:
  %%    _10 => {'ok', any(), any()}
  %% Aliased:
  %%    _10
  _13 = get_tuple_element _10, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _13
  _21 = bif:'=:=' _13, _0
  br _21, ^21, ^20

21:
  %% Result type:
  %%    'ok'
  ret `ok`

20:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _11 = put_tuple `error`, _10

  %% compile_SUITE.erl:1125
  %% Unique:
  %%    _11
  %% Anno: #{thrown_type => {t_tuple,2,true,#{1 => {t_atom,[error]}}}}
  _15 = call (`erlang`:`throw`/1), _11

  %% Aliased:
  %%    _15
  _28 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compile_SUITE.erl:1130
%% Counter = 37
%% bs_ensure_opt: true
function `compile_SUITE`:`core_roundtrip`(_0) {
0:
  %% compile_SUITE.erl:1131
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _19 = succeeded:body PrivDir
  br _19, ^19, ^1

19:
  %% compile_SUITE.erl:1132
  %% Aliased:
  %%    PrivDir
  Outdir = call (`filename`:`join`/2), PrivDir, `"core_roundtrip"`

  %% Aliased:
  %%    Outdir
  _20 = succeeded:body Outdir
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:1133
  %% Aliased:
  %%    Outdir
  _10 = call (`file`:`make_dir`/1), Outdir

  %% Aliased:
  %%    _10
  _21 = succeeded:body _10
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _34 = bif:'=:=' _10, `ok`
  br _34, ^33, ^23

33:
  %% compile_SUITE.erl:1135
  %% Result type:
  %%    list(any())
  TestBeams = call (`get_unique_beam_files`/0)

  %% Aliased:
  %%    TestBeams
  _24 = succeeded:body TestBeams
  br _24, ^24, ^1

24:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Outdir
  Test = make_fun (`'-core_roundtrip/1-fun-0-'`/2), Outdir

  %% compile_SUITE.erl:1138
  _11 = call (`erlang`:`system_info`/1), `wordsize`

  %% Aliased:
  %%    _11
  _25 = succeeded:body _11
  br _25, ^25, ^1

25:
  switch _11, ^27, [
    { `4`, ^30 },
    { `8`, ^31 }
  ]

31:
  %% compile_SUITE.erl:1144
  %% Aliased:
  %%    Test, 
  %%    TestBeams
  _13 = call (`test_lib`:`p_run`/2), Test, TestBeams

  %% Aliased:
  %%    _13
  _29 = succeeded:body _13
  br _29, ^29, ^1

29:
  %% Aliased:
  %%    _13
  ret _13

30:
  %% compile_SUITE.erl:1142
  %% Aliased:
  %%    Test, 
  %%    TestBeams
  _14 = call (`test_lib`:`p_run`/3), Test, TestBeams, `1`

  %% Aliased:
  %%    _14
  _28 = succeeded:body _14
  br _28, ^28, ^1

28:
  %% Aliased:
  %%    _14
  ret _14

27:
  %% compile_SUITE.erl:1138
  %% Aliased:
  %%    _11
  _15 = match_fail `case_clause`, _11

  %% Unique:
  %%    _15
  _32 = succeeded:body _15
  br ^1

23:
  %% compile_SUITE.erl:1133
  %% Aliased:
  %%    _10
  _16 = match_fail `badmatch`, _10

  %% Unique:
  %%    _16
  _35 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% compile_SUITE.erl:1147
%% Counter = 107
%% bs_ensure_opt: true
function `compile_SUITE`:`do_core_roundtrip`(_0, _1) {
0:
  br ^106

106:
  _43 = new_try_tag `'try'`
  br _43, ^42, ^40

42:
  %% compile_SUITE.erl:1150
  %% Aliased:
  %%    _0
  _11 = call (`beam_lib`:`chunks`/2), _0, `[abstract_code]`

  %% Aliased:
  %%    _11
  _44 = succeeded:body _11
  br _44, ^44, ^40

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _69 = is_tagged_tuple _11, `2`, `ok`
  br _69, ^66, ^46

66:
  %% Argument types:
  %%    _11 => {'ok', any()}
  %% Aliased:
  %%    _11
  _12 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _63 = bif:is_tuple _12
  br _63, ^63, ^46

63:
  %% Argument types:
  %%    _12 => {...}
  %% Aliased:
  %%    _12
  _64 = bif:tuple_size _12

  %% Argument types:
  %%    _64 => 0..16777215
  %% Unique:
  %%    _64
  _65 = bif:'=:=' _64, `2`
  br _65, ^62, ^46

62:
  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `1`

  %% Aliased:
  %%    _14
  _61 = is_nonempty_list _14
  br _61, ^61, ^46

61:
  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _17 = get_hd _14

  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _16 = get_tl _14

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _58 = is_tagged_tuple _17, `2`, `abstract_code`
  br _58, ^55, ^46

55:
  %% Argument types:
  %%    _17 => {'abstract_code', any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _52 = is_tagged_tuple _18, `2`, `raw_abstract_v1`
  br _52, ^49, ^46

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _48 = bif:'=:=' _16, `[]`
  br _48, ^48, ^46

48:
  %% Argument types:
  %%    _18 => {'raw_abstract_v1', any()}
  %% Aliased:
  %%    _18
  _20 = get_tuple_element _18, `1`

  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _15 = get_tuple_element _12, `0`

  %% compile_SUITE.erl:1151
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _15, 
  %%    _20
  _33 = call (`do_core_roundtrip_1`/3), _15, _20, _1

  %% Unique:
  %%    _33
  _47 = succeeded:body _33
  br _47, ^45, ^40

45:
  %% Unique:
  %%    _43
  _87 = kill_try_tag _43
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _33
  ret _33

46:
  %% compile_SUITE.erl:1149
  %% Aliased:
  %%    _11
  _34 = match_fail `badmatch`, _11

  %% Unique:
  %%    _34
  _72 = succeeded:body _34
  br ^40

40:
  %% Unique:
  %%    _43
  _85 = landingpad `'try'`, _43

  %% Aliased:
  %%    _85
  _6 = extract _85, `0`

  %% Aliased:
  %%    _85
  _5 = extract _85, `1`

  %% Aliased:
  %%    _85
  _4 = extract _85, `2`

  %% Unique:
  %%    _43
  _86 = kill_try_tag _43

  %% Argument types:
  %%    _6 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _6
  _83 = bif:'=:=' _6, `throw`
  br _83, ^82, ^74

82:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _79 = is_tagged_tuple _5, `2`, `error`
  br _79, ^76, ^74

76:
  %% Argument types:
  %%    _5 => {'error', any()}
  %% Aliased:
  %%    _5
  _27 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _29 = put_list _0, `[]`

  %% Argument types:
  %%    _29 => nonempty_list(any())
  %% Aliased:
  %%    _27
  %% Unique:
  %%    _29
  _30 = put_list _27, _29

  %% compile_SUITE.erl:1154
  %% Unique:
  %%    _30
  _35 = call (`io`:`format`/2), `"*** compilation failure '~p' for file ~s\n"`, _30

  %% Aliased:
  %%    _35
  _75 = succeeded:body _35
  br _75, ^75, ^1

75:
  %% Result type:
  %%    'error'
  ret `error`

74:
  %% Aliased:
  %%    _4
  Stk = build_stacktrace _4

  %% Argument types:
  %%    
  %% Aliased:
  %%    Stk
  _23 = put_list Stk, `[]`

  %% Argument types:
  %%    _23 => nonempty_list(any())
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _23
  _24 = put_list _5, _23

  %% Argument types:
  %%    _6 => 'error' | 'exit' | 'throw'
  %%    _24 => nonempty_list(any())
  %% Unique:
  %%    _6, 
  %%    _24
  _25 = put_list _6, _24

  %% Argument types:
  %%    _25 => nonempty_list(any())
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _25
  _26 = put_list _0, _25

  %% compile_SUITE.erl:1158
  %% Unique:
  %%    _26
  _36 = call (`io`:`format`/2), `"~p: ~p ~p\n~p\n"`, _26

  %% Aliased:
  %%    _36
  _84 = succeeded:body _36
  br _84, ^84, ^1

84:
  %% Result type:
  %%    'error'
  ret `error`

1:
  _37 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _37
}

%% compile_SUITE.erl:1162
%% Counter = 65
%% bs_ensure_opt: true
function `compile_SUITE`:`do_core_roundtrip_1`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:1163
  %% Aliased:
  %%    _1
  _12 = call (`compile`:`forms`/2), _1, `[to_core0]`

  %% Aliased:
  %%    _12
  _31 = succeeded:body _12
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _60 = is_tagged_tuple _12, `3`, `ok`
  br _60, ^57, ^33

57:
  %% Argument types:
  %%    _12 => {'ok', any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _14
  _34 = bif:'=:=' _14, _0
  br _34, ^34, ^33

34:
  %% Argument types:
  %%    _12 => {'ok', any(), any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `2`

  %% compile_SUITE.erl:1164
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0, 
  %%    _2, 
  %%    _13
  _23 = call (`do_core_roundtrip_2`/3), _0, _13, _2

  %% Unique:
  %%    _23
  _35 = succeeded:body _23
  br _35, ^35, ^1

35:
  %% compile_SUITE.erl:1168
  %% Aliased:
  %%    _13
  _16 = call (`cerl_trees`:`label`/1), _13

  %% Aliased:
  %%    _16
  _36 = succeeded:body _16
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _53 = bif:is_tuple _16
  br _53, ^53, ^38

53:
  %% Argument types:
  %%    _16 => {...}
  %% Aliased:
  %%    _16
  _54 = bif:tuple_size _16

  %% Argument types:
  %%    _54 => 0..16777215
  %% Unique:
  %%    _54
  _55 = bif:'=:=' _54, `2`
  br _55, ^64, ^38

64:
  %% Argument types:
  %%    _16 => {any(), any()}
  %% Aliased:
  %%    _16
  _18 = get_tuple_element _16, `0`

  %% compile_SUITE.erl:1169
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0, 
  %%    _2, 
  %%    _18
  _24 = call (`do_core_roundtrip_2`/3), _0, _18, _2

  %% Unique:
  %%    _24
  _39 = succeeded:body _24
  br _39, ^39, ^1

39:
  %% compile_SUITE.erl:1173
  %% Aliased:
  %%    _1
  _19 = call (`compile`:`forms`/2), _1, `[inline,to_core]`

  %% Aliased:
  %%    _19
  _40 = succeeded:body _19
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _48 = is_tagged_tuple _19, `3`, `ok`
  br _48, ^45, ^42

45:
  %% Argument types:
  %%    _19 => {'ok', any(), any()}
  %% Aliased:
  %%    _19
  _21 = get_tuple_element _19, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _21
  _43 = bif:'=:=' _21, _0
  br _43, ^43, ^42

43:
  %% Argument types:
  %%    _19 => {'ok', any(), any()}
  %% Aliased:
  %%    _19
  _20 = get_tuple_element _19, `2`

  %% compile_SUITE.erl:1174
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0, 
  %%    _2, 
  %%    _20
  _25 = call (`do_core_roundtrip_2`/3), _0, _20, _2

  %% Unique:
  %%    _25
  _44 = succeeded:body _25
  br _44, ^44, ^1

44:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _25
  ret _25

42:
  %% compile_SUITE.erl:1173
  %% Aliased:
  %%    _19
  _26 = match_fail `badmatch`, _19

  %% Unique:
  %%    _26
  _51 = succeeded:body _26
  br ^1

38:
  %% compile_SUITE.erl:1168
  %% Aliased:
  %%    _16
  _27 = match_fail `badmatch`, _16

  %% Unique:
  %%    _27
  _56 = succeeded:body _27
  br ^1

33:
  %% compile_SUITE.erl:1163
  %% Aliased:
  %%    _12
  _28 = match_fail `badmatch`, _12

  %% Unique:
  %%    _28
  _63 = succeeded:body _28
  br ^1

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% compile_SUITE.erl:1176
%% Counter = 70
%% bs_ensure_opt: true
function `compile_SUITE`:`do_core_roundtrip_2`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:1177
  %% Aliased:
  %%    _0
  _3 = call (`erlang`:`atom_to_list`/1), _0

  %% Aliased:
  %%    _3
  _33 = succeeded:body _3
  br _33, ^33, ^1

33:
  %% compile_SUITE.erl:1177
  %% Aliased:
  %%    _3
  _4 = call (`erlang`:`'++'`/2), _3, `".core"`

  %% compile_SUITE.erl:1177
  %% Aliased:
  %%    _2, 
  %%    _4
  CoreFile = call (`filename`:`join`/2), _2, _4

  %% Aliased:
  %%    CoreFile
  _35 = succeeded:body CoreFile
  br _35, ^35, ^1

35:
  %% compile_SUITE.erl:1178
  %% Aliased:
  %%    _1
  CorePP = call (`core_pp`:`format_all`/1), _1

  %% Aliased:
  %%    CorePP
  _36 = succeeded:body CorePP
  br _36, ^36, ^1

36:
  %% compile_SUITE.erl:1179
  %% Aliased:
  %%    CorePP
  _7 = call (`unicode`:`characters_to_binary`/1), CorePP

  %% Aliased:
  %%    _7
  _37 = succeeded:body _7
  br _37, ^37, ^1

37:
  %% compile_SUITE.erl:1179
  %% Aliased:
  %%    _7, 
  %%    CoreFile
  _19 = call (`file`:`write_file`/2), CoreFile, _7

  %% Aliased:
  %%    _19
  _38 = succeeded:body _19
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _66 = bif:'=:=' _19, `ok`
  br _66, ^65, ^40

65:
  %% compile_SUITE.erl:1182
  %% Aliased:
  %%    CoreFile
  _20 = call (`compile`:`file`/2), CoreFile, `[report_errors,from_core,no_copt,to_core,binary]`

  %% Aliased:
  %%    _20
  _41 = succeeded:body _20
  br _41, ^41, ^1

41:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _48 = is_tagged_tuple _20, `3`, `ok`
  br _48, ^45, ^43

45:
  %% Argument types:
  %%    _20 => {'ok', any(), any()}
  %% Aliased:
  %%    _20
  _23 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _23
  _44 = bif:'=:=' _23, _0
  br _44, ^69, ^43

69:
  %% Argument types:
  %%    _20 => {'ok', any(), any()}
  %% Aliased:
  %%    _20
  _22 = get_tuple_element _20, `2`

  %% compile_SUITE.erl:1187
  %% Aliased:
  %%    _22
  Core = call (`undo_var_translation`/1), _22

  %% Aliased:
  %%    Core
  _52 = succeeded:body Core
  br _52, ^52, ^1

52:
  %% compile_SUITE.erl:1188
  %% Aliased:
  %%    CoreFile
  _25 = call (`file`:`delete`/1), CoreFile

  %% Aliased:
  %%    _25
  _53 = succeeded:body _25
  br _53, ^53, ^1

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _63 = bif:'=:=' _25, `ok`
  br _63, ^62, ^55

62:
  %% compile_SUITE.erl:1190
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    Core
  _26 = call (`cmp_core`/3), _1, Core, _0

  %% Unique:
  %%    _26
  _56 = succeeded:body _26
  br _56, ^56, ^1

56:
  br _26, ^60, ^59

60:
  %% Result type:
  %%    'ok'
  ret `ok`

59:
  %% Result type:
  %%    'error'
  ret `error`

55:
  %% compile_SUITE.erl:1188
  %% Aliased:
  %%    _25
  _29 = match_fail `badmatch`, _25

  %% Unique:
  %%    _29
  _64 = succeeded:body _29
  br ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _21 = put_tuple `error`, _20

  %% compile_SUITE.erl:1185
  %% Unique:
  %%    _21
  %% Anno: #{thrown_type => {t_tuple,2,true,#{1 => {t_atom,[error]}}}}
  _27 = call (`erlang`:`throw`/1), _21

  %% Aliased:
  %%    _27
  _51 = succeeded:body _27
  br ^1

40:
  %% compile_SUITE.erl:1179
  %% Aliased:
  %%    _19
  _30 = match_fail `badmatch`, _19

  %% Unique:
  %%    _30
  _67 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% compile_SUITE.erl:1195
%% Counter = 36
%% bs_ensure_opt: true
function `compile_SUITE`:`undo_var_translation`(_0) {
0:
  F = make_fun (`'-undo_var_translation/1-fun-0-'`/1)

  %% compile_SUITE.erl:1216
  %% Aliased:
  %%    _0, 
  %%    F
  _31 = call (`cerl_trees`:`map`/2), F, _0

  %% Aliased:
  %%    _31
  _34 = succeeded:body _31
  br _34, ^34, ^1

34:
  %% Aliased:
  %%    _31
  ret _31

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32
}

%% compile_SUITE.erl:1218
%% Counter = 17
%% bs_ensure_opt: true
function `compile_SUITE`:`cmp_core`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _13 = bif:'=:=' _1, _0
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'true'
  ret `true`

12:
  %% compile_SUITE.erl:1221
  %% Aliased:
  %%    _0
  _4 = call (`cerl`:`module_defs`/1), _0

  %% Aliased:
  %%    _4
  _14 = succeeded:body _4
  br _14, ^14, ^1

14:
  %% compile_SUITE.erl:1221
  %% Aliased:
  %%    _1
  _3 = call (`cerl`:`module_defs`/1), _1

  %% Aliased:
  %%    _3
  _15 = succeeded:body _3
  br _15, ^15, ^1

15:
  %% compile_SUITE.erl:1221
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _2, 
  %%    _3, 
  %%    _4
  _9 = call (`cmp_core_fs`/3), _4, _3, _2

  %% Unique:
  %%    _9
  _16 = succeeded:body _9
  br _16, ^16, ^1

16:
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% compile_SUITE.erl:1223
%% Counter = 36
%% bs_ensure_opt: true
function `compile_SUITE`:`cmp_core_fs`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _0
  _31 = is_nonempty_list _0
  br _31, ^31, ^22

31:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _12 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _11 = get_tl _0

  %% Aliased:
  %%    _1
  _30 = is_nonempty_list _1
  br _30, ^30, ^21

30:
  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _14 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _13 = get_tl _1

  %% compile_SUITE.erl:1224
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _2, 
  %%    _12, 
  %%    _14
  _15 = call (`cmp_core_f`/3), _12, _14, _2

  %% Unique:
  %%    _15
  _23 = succeeded:body _15
  br _23, ^23, ^1

23:
  br _15, ^28, ^27

28:
  %% compile_SUITE.erl:1224
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _2, 
  %%    _11, 
  %%    _13
  _17 = call (`cmp_core_fs`/3), _11, _13, _2

  %% Unique:
  %%    _17
  _26 = succeeded:body _17
  br _26, ^26, ^1

26:
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _17
  ret _17

27:
  %% Result type:
  %%    'false'
  ret `false`

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _33 = bif:'=:=' _0, `[]`
  br _33, ^33, ^21

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _32 = bif:'=:=' _1, `[]`
  ret _32

21:
  %% Result type:
  %%    'false'
  ret `false`
}

%% compile_SUITE.erl:1230
%% Counter = 41
%% bs_ensure_opt: true
function `compile_SUITE`:`cmp_core_f`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _23 = bif:'=:=' _1, _0
  br _23, ^23, ^22

23:
  %% Result type:
  %%    'true'
  ret `true`

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _36 = bif:is_tuple _0
  br _36, ^36, ^24

36:
  %% Argument types:
  %%    _0 => {...}
  %% Aliased:
  %%    _0
  _37 = bif:tuple_size _0

  %% Argument types:
  %%    _37 => 0..16777215
  %% Unique:
  %%    _37
  _38 = bif:'=:=' _37, `2`
  br _38, ^35, ^24

35:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _32 = bif:is_tuple _1
  br _32, ^32, ^24

32:
  %% Argument types:
  %%    _1 => {...}
  %% Aliased:
  %%    _1
  _33 = bif:tuple_size _1

  %% Argument types:
  %%    _33 => 0..16777215
  %% Unique:
  %%    _33
  _34 = bif:'=:=' _33, `2`
  br _34, ^31, ^24

31:
  %% Argument types:
  %%    _0 => {any(), any()}
  %% Aliased:
  %%    _0
  _11 = get_tuple_element _0, `0`

  %% Argument types:
  %%    _1 => {any(), any()}
  %% Aliased:
  %%    _1
  _13 = get_tuple_element _1, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11, 
  %%    _13
  _25 = bif:'=:=' _13, _11
  br _25, ^25, ^24

25:
  %% Argument types:
  %%    _1 => {any(), any()}
  %% Aliased:
  %%    _1
  _12 = get_tuple_element _1, `1`

  %% Argument types:
  %%    _0 => {any(), any()}
  %% Aliased:
  %%    _0
  _10 = get_tuple_element _0, `1`

  %% compile_SUITE.erl:1233
  %% Aliased:
  %%    _10, 
  %%    _12
  _14 = call (`diff`/2), _10, _12

  %% Aliased:
  %%    _14
  _26 = succeeded:body _14
  br _26, ^26, ^1

26:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10, 
  %%    _14
  _29 = bif:'=:=' _14, _10
  br _29, ^29, ^28

29:
  %% Result type:
  %%    'true'
  ret `true`

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _15 = put_list _14, `[]`

  %% Argument types:
  %%    _15 => nonempty_list(any())
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _15
  _16 = put_list _11, _15

  %% Argument types:
  %%    _16 => nonempty_list(any())
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _16
  _17 = put_list _2, _16

  %% compile_SUITE.erl:1237
  %% Unique:
  %%    _17
  _18 = call (`io`:`format`/2), `"~p ~p:\n~p\n"`, _17

  %% Aliased:
  %%    _18
  _30 = succeeded:body _18
  br _30, ^30, ^1

30:
  %% Result type:
  %%    'false'
  ret `false`

24:
  %% compile_SUITE.erl:1230
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-cmp_core_f/3-',3}}
  _19 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _19
  _39 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% compile_SUITE.erl:1241
%% Counter = 82
%% bs_ensure_opt: true
function `compile_SUITE`:`diff`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _41 = bif:'=:=' _1, _0
  br _41, ^41, ^40

41:
  %% Aliased:
  %%    _0
  ret _0

40:
  %% Aliased:
  %%    _0
  _46 = is_nonempty_list _0
  br _46, ^46, ^42

46:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _24 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _23 = get_tl _0

  %% Aliased:
  %%    _1
  _45 = is_nonempty_list _1
  br _45, ^45, ^42

45:
  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _26 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _25 = get_tl _1

  %% compile_SUITE.erl:1244
  %% Aliased:
  %%    _24, 
  %%    _26
  _3 = call (`diff`/2), _24, _26

  %% Aliased:
  %%    _3
  _43 = succeeded:body _3
  br _43, ^43, ^1

43:
  %% compile_SUITE.erl:1244
  %% Aliased:
  %%    _23, 
  %%    _25
  _2 = call (`diff`/2), _23, _25

  %% Aliased:
  %%    _2
  _44 = succeeded:body _2
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _27 = put_list _3, _2
  %% Result type:
  %%    nonempty_improper_list(any(), any())
  %% Unique:
  %%    _27
  ret _27

42:
  %% compile_SUITE.erl:1245
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = bif:tuple_size _0

  %% Unique:
  %%    _5
  _49 = succeeded:guard _5
  br _49, ^49, ^47

49:
  %% compile_SUITE.erl:1245
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _4 = bif:tuple_size _1

  %% Unique:
  %%    _4
  _50 = succeeded:guard _4
  br _50, ^50, ^47

50:
  %% Argument types:
  %%    _5 => 0..16777215
  %%    _4 => 0..16777215
  %% Unique:
  %%    _4, 
  %%    _5
  _51 = bif:'=:=' _5, _4
  br _51, ^51, ^47

51:
  %% compile_SUITE.erl:1246
  %% Aliased:
  %%    _0
  _19 = call (`cerl`:`is_c_var`/1), _0

  %% Aliased:
  %%    _19
  _52 = succeeded:body _19
  br _52, ^52, ^1

52:
  switch _19, ^54, [
    { `false`, ^77 },
    { `true`, ^57 }
  ]

57:
  %% compile_SUITE.erl:1246
  %% Aliased:
  %%    _1
  _28 = call (`cerl`:`is_c_var`/1), _1

  %% Aliased:
  %%    _28
  _55 = succeeded:body _28
  br _55, ^53, ^1

53:
  switch _28, ^60, [
    { `false`, ^77 },
    { `true`, ^76 }
  ]

76:
  %% compile_SUITE.erl:1248
  %% Aliased:
  %%    _0, 
  %%    _1
  _35 = call (`diff_var`/2), _0, _1

  %% Aliased:
  %%    _35
  _61 = succeeded:body _35
  br _61, ^61, ^1

61:
  %% Aliased:
  %%    _35
  ret _35

60:
  %% compile_SUITE.erl:1246
  %% Aliased:
  %%    _28
  _36 = match_fail `case_clause`, _28

  %% Unique:
  %%    _36
  _78 = succeeded:body _36
  br ^1

77:
  %% compile_SUITE.erl:1250
  %% Aliased:
  %%    _0
  _21 = call (`cerl`:`is_c_map`/1), _0

  %% Aliased:
  %%    _21
  _62 = succeeded:body _21
  br _62, ^62, ^1

62:
  switch _21, ^64, [
    { `false`, ^74 },
    { `true`, ^67 }
  ]

67:
  %% compile_SUITE.erl:1250
  %% Aliased:
  %%    _1
  _30 = call (`cerl`:`is_c_map`/1), _1

  %% Aliased:
  %%    _30
  _65 = succeeded:body _30
  br _65, ^63, ^1

63:
  switch _30, ^70, [
    { `false`, ^74 },
    { `true`, ^73 }
  ]

73:
  %% compile_SUITE.erl:1252
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _0, 
  %%    _1
  _33 = call (`diff_map`/2), _0, _1

  %% Aliased:
  %%    _33
  _71 = succeeded:body _33
  br _71, ^71, ^1

71:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _33
  ret _33

70:
  %% compile_SUITE.erl:1250
  %% Aliased:
  %%    _30
  _34 = match_fail `case_clause`, _30

  %% Unique:
  %%    _34
  _75 = succeeded:body _34
  br ^1

74:
  %% compile_SUITE.erl:1254
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _0, 
  %%    _1
  _32 = call (`diff_tuple`/2), _0, _1

  %% Aliased:
  %%    _32
  _72 = succeeded:body _32
  br _72, ^72, ^1

72:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _32
  ret _32

64:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _22 = put_tuple `badarg`, _21

  %% compile_SUITE.erl:1250
  %% Unique:
  %%    _22
  _31 = call (`erlang`:`error`/1), _22

  %% Aliased:
  %%    _31
  _68 = succeeded:body _31
  br ^1

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _20 = put_tuple `badarg`, _19

  %% compile_SUITE.erl:1246
  %% Unique:
  %%    _20
  _29 = call (`erlang`:`error`/1), _20

  %% Aliased:
  %%    _29
  _58 = succeeded:body _29
  br ^1

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _38

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _37 = put_tuple `'DIFF'`, _0, _1
  %% Result type:
  %%    {''DIFF'', any(), any()}
  %% Unique:
  %%    _37
  ret _37
}

%% compile_SUITE.erl:1260
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {...}
%%    _1 =>
%%     {...}
function `compile_SUITE`:`diff_var`(_0, _1) {
0:
  %% compile_SUITE.erl:1261
  %% Aliased:
  %%    _0
  _3 = call (`cerl`:`var_name`/1), _0

  %% Aliased:
  %%    _3
  _21 = succeeded:body _3
  br _21, ^21, ^1

21:
  %% compile_SUITE.erl:1261
  %% Aliased:
  %%    _1
  _2 = call (`cerl`:`var_name`/1), _1

  %% Aliased:
  %%    _2
  _22 = succeeded:body _2
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _25 = bif:'=:=' _2, _3
  br _25, ^25, ^24

25:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _0
  ret _0

24:
  %% compile_SUITE.erl:1267
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _15 = bif:is_integer _3
  br _15, ^30, ^32

30:
  %% compile_SUITE.erl:1268
  %% Aliased:
  %%    _3
  _5 = call (`erlang`:`integer_to_list`/1), _3

  %% Aliased:
  %%    _5
  _27 = succeeded:body _5
  br _27, ^27, ^1

27:
  %% compile_SUITE.erl:1268
  %% Aliased:
  %%    _5
  _6 = call (`erlang`:`list_to_atom`/1), _5

  %% Aliased:
  %%    _6
  _28 = succeeded:body _6
  br _28, ^28, ^1

28:
  %% compile_SUITE.erl:1268
  %% Argument types:
  %%    _6 => atom()
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _6
  _17 = bif:'=:=' _6, _2
  br _17, ^33, ^32

33:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _0
  ret _0

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _16 = put_tuple `'DIFF'`, _3, _2

  %% compile_SUITE.erl:1272
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _16
  _18 = call (`cerl`:`update_c_var`/2), _0, _16

  %% Aliased:
  %%    _18
  _35 = succeeded:body _18
  br _35, ^35, ^1

35:
  %% Aliased:
  %%    _18
  ret _18

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% compile_SUITE.erl:1280
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {...}
%%    _1 =>
%%     {...}
function `compile_SUITE`:`diff_map`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => {...}
  %%    _0 => {...}
  %% Aliased:
  %%    _0, 
  %%    _1
  _18 = bif:'=:=' _1, _0
  br _18, ^18, ^17

18:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _0
  ret _0

17:
  %% compile_SUITE.erl:1283
  %% Aliased:
  %%    _0
  _3 = call (`cerl`:`get_ann`/1), _0

  %% Aliased:
  %%    _3
  _19 = succeeded:body _3
  br _19, ^19, ^1

19:
  %% compile_SUITE.erl:1283
  %% Aliased:
  %%    _1
  _2 = call (`cerl`:`get_ann`/1), _1

  %% Aliased:
  %%    _2
  _20 = succeeded:body _2
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:1283
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _11 = bif:'=:=' _3, _2
  br _11, ^30, ^29

30:
  %% compile_SUITE.erl:1287
  %% Aliased:
  %%    _0
  _5 = call (`remove_compiler_gen`/1), _0

  %% Aliased:
  %%    _5
  _23 = succeeded:body _5
  br _23, ^23, ^1

23:
  %% compile_SUITE.erl:1287
  %% Aliased:
  %%    _1
  _4 = call (`remove_compiler_gen`/1), _1

  %% Aliased:
  %%    _4
  _24 = succeeded:body _4
  br _24, ^24, ^1

24:
  %% compile_SUITE.erl:1287
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4, 
  %%    _5
  _12 = bif:'=:=' _5, _4
  br _12, ^27, ^28

27:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _0
  ret _0

28:
  %% compile_SUITE.erl:1291
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _0, 
  %%    _1
  _13 = call (`diff_tuple`/2), _0, _1

  %% Aliased:
  %%    _13
  _26 = succeeded:body _13
  br _26, ^26, ^1

26:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _13
  ret _13

29:
  %% compile_SUITE.erl:1285
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _0, 
  %%    _1
  _14 = call (`diff_tuple`/2), _0, _1

  %% Aliased:
  %%    _14
  _22 = succeeded:body _14
  br _22, ^22, ^1

22:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _14
  ret _14

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% compile_SUITE.erl:1295
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {...}
%%    _1 =>
%%     {...}
function `compile_SUITE`:`diff_tuple`(_0, _1) {
0:
  %% compile_SUITE.erl:1296
  %% Aliased:
  %%    _0
  _3 = call (`erlang`:`tuple_to_list`/1), _0

  %% Aliased:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^7, ^1

7:
  %% compile_SUITE.erl:1296
  %% Aliased:
  %%    _1
  _2 = call (`erlang`:`tuple_to_list`/1), _1

  %% Aliased:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% compile_SUITE.erl:1296
  %% Aliased:
  %%    _2, 
  %%    _3
  L = call (`diff`/2), _3, _2

  %% Aliased:
  %%    L
  _9 = succeeded:body L
  br _9, ^9, ^1

9:
  %% compile_SUITE.erl:1297
  %% Aliased:
  %%    L
  _4 = call (`erlang`:`list_to_tuple`/1), L

  %% Aliased:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Result type:
  %%    {...}
  %% Aliased:
  %%    _4
  ret _4

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% compile_SUITE.erl:1299
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {...}
function `compile_SUITE`:`remove_compiler_gen`(_0) {
0:
  %% compile_SUITE.erl:1300
  %% Aliased:
  %%    _0
  Arg0 = call (`cerl`:`map_arg`/1), _0

  %% Aliased:
  %%    Arg0
  _20 = succeeded:body Arg0
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:1301
  %% Aliased:
  %%    Arg0
  Arg = call (`cerl`:`set_ann`/2), Arg0, `[]`

  %% Aliased:
  %%    Arg
  _21 = succeeded:body Arg
  br _21, ^21, ^1

21:
  %% compile_SUITE.erl:1302
  %% Aliased:
  %%    _0
  Es0 = call (`cerl`:`map_es`/1), _0

  %% Aliased:
  %%    Es0
  _22 = succeeded:body Es0
  br _22, ^22, ^1

22:
  %% compile_SUITE.erl:1303
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    Es0
  _10 = call (`'-remove_compiler_gen/1-lc$^0/1-0-'`/1), Es0

  %% Aliased:
  %%    _10
  _23 = succeeded:body _10
  br _23, ^23, ^1

23:
  %% compile_SUITE.erl:1304
  %% Aliased:
  %%    _0, 
  %%    _10, 
  %%    Arg
  _17 = call (`cerl`:`update_c_map`/3), _0, Arg, _10

  %% Aliased:
  %%    _17
  _24 = succeeded:body _17
  br _24, ^24, ^1

24:
  %% Aliased:
  %%    _17
  ret _17

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% compile_SUITE.erl:1306
%% Counter = 16
%% bs_ensure_opt: true
function `compile_SUITE`:`remove_compiler_gen_1`(_0) {
0:
  %% compile_SUITE.erl:1307
  %% Aliased:
  %%    _0
  Op0 = call (`cerl`:`map_pair_op`/1), _0

  %% Aliased:
  %%    Op0
  _9 = succeeded:body Op0
  br _9, ^9, ^1

9:
  %% compile_SUITE.erl:1308
  %% Aliased:
  %%    Op0
  Op = call (`cerl`:`set_ann`/2), Op0, `[]`

  %% Aliased:
  %%    Op
  _10 = succeeded:body Op
  br _10, ^10, ^1

10:
  %% compile_SUITE.erl:1309
  %% Aliased:
  %%    _0
  _3 = call (`cerl`:`map_pair_key`/1), _0

  %% Aliased:
  %%    _3
  _11 = succeeded:body _3
  br _11, ^11, ^1

11:
  %% compile_SUITE.erl:1309
  %% Aliased:
  %%    _3
  K = call (`map_var`/1), _3

  %% Aliased:
  %%    K
  _12 = succeeded:body K
  br _12, ^12, ^1

12:
  %% compile_SUITE.erl:1310
  %% Aliased:
  %%    _0
  _5 = call (`cerl`:`map_pair_val`/1), _0

  %% Aliased:
  %%    _5
  _13 = succeeded:body _5
  br _13, ^13, ^1

13:
  %% compile_SUITE.erl:1310
  %% Aliased:
  %%    _5
  V = call (`map_var`/1), _5

  %% Aliased:
  %%    V
  _14 = succeeded:body V
  br _14, ^14, ^1

14:
  %% compile_SUITE.erl:1311
  %% Aliased:
  %%    _0, 
  %%    K, 
  %%    Op, 
  %%    V
  _6 = call (`cerl`:`update_c_map_pair`/4), _0, Op, K, V

  %% Aliased:
  %%    _6
  _15 = succeeded:body _6
  br _15, ^15, ^1

15:
  %% Aliased:
  %%    _6
  ret _6

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% compile_SUITE.erl:1313
%% Counter = 70
%% bs_ensure_opt: true
function `compile_SUITE`:`map_var`(_0) {
0:
  %% compile_SUITE.erl:1314
  %% Aliased:
  %%    _0
  _17 = call (`cerl`:`is_c_var`/1), _0

  %% Aliased:
  %%    _17
  _26 = succeeded:body _17
  br _26, ^26, ^1

26:
  switch _17, ^28, [
    { `false`, ^49 },
    { `true`, ^50 }
  ]

50:
  %% compile_SUITE.erl:1316
  %% Aliased:
  %%    _0
  _18 = call (`cerl`:`var_name`/1), _0

  %% Aliased:
  %%    _18
  _29 = succeeded:body _18
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _32 = bif:is_atom _18
  br _32, ^32, ^31

32:
  %% compile_SUITE.erl:1318
  %% Aliased:
  %%    _18
  L = call (`erlang`:`atom_to_list`/1), _18

  %% Aliased:
  %%    L
  _33 = succeeded:body L
  br _33, ^68, ^1

68:
  br ^69

69:
  _38 = new_try_tag `'try'`
  br _38, ^37, ^35

37:
  %% compile_SUITE.erl:1319
  %% Aliased:
  %%    L
  _20 = call (`erlang`:`list_to_integer`/1), L

  %% Aliased:
  %%    _20
  _39 = succeeded:body _20
  br _39, ^39, ^35

39:
  %% Unique:
  %%    _38
  _48 = kill_try_tag _38

  %% compile_SUITE.erl:1321
  %% Aliased:
  %%    _0, 
  %%    _20
  _21 = call (`cerl`:`update_c_var`/2), _0, _20

  %% Aliased:
  %%    _21
  _40 = succeeded:body _21
  br _40, ^40, ^1

40:
  %% Aliased:
  %%    _21
  ret _21

35:
  %% Unique:
  %%    _38
  _46 = landingpad `'try'`, _38

  %% Aliased:
  %%    _46
  _6 = extract _46, `0`

  %% Aliased:
  %%    _46
  _5 = extract _46, `1`

  %% Aliased:
  %%    _46
  _4 = extract _46, `2`

  %% Unique:
  %%    _38
  _47 = kill_try_tag _38

  %% Argument types:
  %%    _6 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _6
  _44 = bif:'=:=' _6, `error`
  br _44, ^43, ^42

43:
  %% Aliased:
  %%    _0
  ret _0

42:
  %% Aliased:
  %%    _4, 
  %%    _5
  _22 = resume _4, _5

  %% Unique:
  %%    _22
  _45 = succeeded:body _22
  br ^1

31:
  %% Aliased:
  %%    _0
  ret _0

49:
  %% Aliased:
  %%    _0
  ret _0

28:
  %% compile_SUITE.erl:1314
  %% Aliased:
  %%    _17
  _23 = match_fail `case_clause`, _17

  %% Unique:
  %%    _23
  _51 = succeeded:body _23
  br ^1

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% compile_SUITE.erl:1336
%% Counter = 31
%% bs_ensure_opt: true
function `compile_SUITE`:`asm`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _18 = bif:is_list _0
  br _18, ^18, ^17

18:
  %% compile_SUITE.erl:1337
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _19 = succeeded:body PrivDir
  br _19, ^19, ^1

19:
  %% compile_SUITE.erl:1338
  %% Aliased:
  %%    PrivDir
  Outdir = call (`filename`:`join`/2), PrivDir, `"asm"`

  %% Aliased:
  %%    Outdir
  _20 = succeeded:body Outdir
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:1339
  %% Aliased:
  %%    Outdir
  _10 = call (`file`:`make_dir`/1), Outdir

  %% Aliased:
  %%    _10
  _21 = succeeded:body _10
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _27 = bif:'=:=' _10, `ok`
  br _27, ^26, ^23

26:
  %% compile_SUITE.erl:1341
  %% Result type:
  %%    list(any())
  TestBeams = call (`get_unique_beam_files`/0)

  %% Aliased:
  %%    TestBeams
  _24 = succeeded:body TestBeams
  br _24, ^24, ^1

24:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Outdir
  _7 = make_fun (`'-asm/1-fun-0-'`/2), Outdir

  %% compile_SUITE.erl:1342
  %% Aliased:
  %%    _7, 
  %%    TestBeams
  _12 = call (`test_lib`:`p_run`/2), _7, TestBeams

  %% Aliased:
  %%    _12
  _25 = succeeded:body _12
  br _25, ^25, ^1

25:
  %% Aliased:
  %%    _12
  ret _12

23:
  %% compile_SUITE.erl:1339
  %% Aliased:
  %%    _10
  _13 = match_fail `badmatch`, _10

  %% Unique:
  %%    _13
  _28 = succeeded:body _13
  br ^1

17:
  %% compile_SUITE.erl:1336
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-asm/1-',1}}
  _14 = match_fail `function_clause`, _0

  %% Unique:
  %%    _14
  _29 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% compile_SUITE.erl:1346
%% Counter = 161
%% bs_ensure_opt: true
function `compile_SUITE`:`do_asm`(_0, _1) {
0:
  %% compile_SUITE.erl:1348
  %% Aliased:
  %%    _0
  _22 = call (`beam_lib`:`chunks`/2), _0, `[abstract_code]`

  %% Aliased:
  %%    _22
  _71 = succeeded:body _22
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _153 = is_tagged_tuple _22, `2`, `ok`
  br _153, ^150, ^73

150:
  %% Argument types:
  %%    _22 => {'ok', any()}
  %% Aliased:
  %%    _22
  _23 = get_tuple_element _22, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _147 = bif:is_tuple _23
  br _147, ^147, ^73

147:
  %% Argument types:
  %%    _23 => {...}
  %% Aliased:
  %%    _23
  _148 = bif:tuple_size _23

  %% Argument types:
  %%    _148 => 0..16777215
  %% Unique:
  %%    _148
  _149 = bif:'=:=' _148, `2`
  br _149, ^146, ^73

146:
  %% Argument types:
  %%    _23 => {any(), any()}
  %% Aliased:
  %%    _23
  _25 = get_tuple_element _23, `1`

  %% Aliased:
  %%    _25
  _145 = is_nonempty_list _25
  br _145, ^145, ^73

145:
  %% Argument types:
  %%    _25 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _25
  _28 = get_hd _25

  %% Argument types:
  %%    _25 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _25
  _27 = get_tl _25

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _142 = is_tagged_tuple _28, `2`, `abstract_code`
  br _142, ^139, ^73

139:
  %% Argument types:
  %%    _28 => {'abstract_code', any()}
  %% Aliased:
  %%    _28
  _29 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _136 = is_tagged_tuple _29, `2`, `raw_abstract_v1`
  br _136, ^133, ^73

133:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _132 = bif:'=:=' _27, `[]`
  br _132, ^132, ^73

132:
  %% Argument types:
  %%    _23 => {any(), any()}
  %% Aliased:
  %%    _23
  _26 = get_tuple_element _23, `0`
  _78 = new_try_tag `'try'`
  br _78, ^77, ^75

77:
  %% compile_SUITE.erl:1350
  %% Aliased:
  %%    _26
  Opts = call (`test_lib`:`opt_opts`/1), _26

  %% Aliased:
  %%    Opts
  _79 = succeeded:body Opts
  br _79, ^79, ^75

79:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Opts
  _33 = put_list `'S'`, Opts

  %% Argument types:
  %%    _29 => {'raw_abstract_v1', any()}
  %% Aliased:
  %%    _29
  _31 = get_tuple_element _29, `1`

  %% compile_SUITE.erl:1351
  %% Aliased:
  %%    _31
  %% Unique:
  %%    _33
  _34 = call (`compile`:`forms`/2), _31, _33

  %% Aliased:
  %%    _34
  _80 = succeeded:body _34
  br _80, ^80, ^75

80:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _124 = is_tagged_tuple _34, `3`, `ok`
  br _124, ^123, ^82

123:
  %% Argument types:
  %%    _34 => {'ok', any(), any()}
  %% Aliased:
  %%    _34
  _36 = get_tuple_element _34, `1`

  %% Argument types:
  %%    _34 => {'ok', any(), any()}
  %% Aliased:
  %%    _34
  _35 = get_tuple_element _34, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26, 
  %%    _36
  _83 = bif:'=:=' _36, _26
  br _83, ^83, ^82

83:
  %% compile_SUITE.erl:1352
  %% Aliased:
  %%    _26
  _5 = call (`erlang`:`atom_to_list`/1), _26

  %% Aliased:
  %%    _5
  _84 = succeeded:body _5
  br _84, ^84, ^75

84:
  %% compile_SUITE.erl:1352
  %% Aliased:
  %%    _5
  _6 = call (`erlang`:`'++'`/2), _5, `".S"`

  %% compile_SUITE.erl:1352
  %% Aliased:
  %%    _1, 
  %%    _6
  AsmFile = call (`filename`:`join`/2), _1, _6

  %% Aliased:
  %%    AsmFile
  _86 = succeeded:body AsmFile
  br _86, ^86, ^75

86:
  %% compile_SUITE.erl:1353
  %% Aliased:
  %%    AsmFile
  _38 = call (`file`:`open`/2), AsmFile, `[write,{encoding,utf8}]`

  %% Aliased:
  %%    _38
  _87 = succeeded:body _38
  br _87, ^87, ^75

87:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _117 = is_tagged_tuple _38, `2`, `ok`
  br _117, ^114, ^89

114:
  %% Argument types:
  %%    _38 => {'ok', any()}
  %% Aliased:
  %%    _38
  _39 = get_tuple_element _38, `1`

  %% compile_SUITE.erl:1354
  %% Aliased:
  %%    _35, 
  %%    _39
  _58 = call (`beam_listing`:`module`/2), _39, _35

  %% Aliased:
  %%    _58
  _90 = succeeded:body _58
  br _90, ^90, ^75

90:
  %% compile_SUITE.erl:1355
  %% Aliased:
  %%    _39
  _41 = call (`file`:`close`/1), _39

  %% Aliased:
  %%    _41
  _91 = succeeded:body _41
  br _91, ^91, ^75

91:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _112 = bif:'=:=' _41, `ok`
  br _112, ^111, ^93

111:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Opts
  _42 = put_list `report`, Opts

  %% Argument types:
  %%    _42 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _42
  _43 = put_list `binary`, _42

  %% Argument types:
  %%    _43 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _43
  _44 = put_list `from_asm`, _43

  %% compile_SUITE.erl:1356
  %% Aliased:
  %%    AsmFile
  %% Unique:
  %%    _44
  _45 = call (`compile`:`file`/2), AsmFile, _44

  %% Aliased:
  %%    _45
  _94 = succeeded:body _45
  br _94, ^94, ^75

94:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _107 = is_tagged_tuple _45, `3`, `ok`
  br _107, ^104, ^96

104:
  %% Argument types:
  %%    _45 => {'ok', any(), any()}
  %% Aliased:
  %%    _45
  _49 = get_tuple_element _45, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26, 
  %%    _49
  _97 = bif:'=:=' _49, _26
  br _97, ^97, ^96

97:
  %% compile_SUITE.erl:1358
  %% Aliased:
  %%    AsmFile
  _21 = call (`file`:`delete`/1), AsmFile

  %% Aliased:
  %%    _21
  _98 = succeeded:body _21
  br _98, ^98, ^75

98:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _102 = bif:'=:=' _21, `ok`
  br _102, ^101, ^100

101:
  br ^81

100:
  %% compile_SUITE.erl:1358
  %% Aliased:
  %%    _21
  _62 = match_fail `badmatch`, _21

  %% Unique:
  %%    _62
  _103 = succeeded:body _62
  br ^75

96:
  %% Argument types:
  %%    
  %% Aliased:
  %%    AsmFile
  _46 = put_list AsmFile, `[]`

  %% Argument types:
  %%    _46 => nonempty_list(any())
  %% Aliased:
  %%    _45
  %% Unique:
  %%    _46
  _47 = put_list _45, _46

  %% compile_SUITE.erl:1360
  %% Unique:
  %%    _47
  _63 = call (`io`:`format`/2), `"*** failure '~p' for ~s\n"`, _47

  %% Aliased:
  %%    _63
  _110 = succeeded:body _63
  br _110, ^110, ^75

110:
  br ^81

81:
  _56 = phi { `ok`, ^101 }, { `error`, ^110 }

  %% Unique:
  %%    _78
  _131 = kill_try_tag _78
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _56
  ret _56

93:
  %% compile_SUITE.erl:1355
  %% Aliased:
  %%    _41
  _64 = match_fail `badmatch`, _41

  %% Unique:
  %%    _64
  _113 = succeeded:body _64
  br ^75

89:
  %% compile_SUITE.erl:1353
  %% Aliased:
  %%    _38
  _65 = match_fail `badmatch`, _38

  %% Unique:
  %%    _65
  _120 = succeeded:body _65
  br ^75

82:
  %% compile_SUITE.erl:1351
  %% Aliased:
  %%    _34
  _66 = match_fail `badmatch`, _34

  %% Unique:
  %%    _66
  _127 = succeeded:body _66
  br ^75

75:
  %% Aliased:
  %%    _78
  _129 = landingpad `'try'`, _78

  %% Aliased:
  %%    _129
  _15 = extract _129, `0`

  %% Aliased:
  %%    _129
  _14 = extract _129, `1`

  %% Aliased:
  %%    _129
  _13 = extract _129, `2`

  %% Aliased:
  %%    _78
  _130 = kill_try_tag _78

  %% Aliased:
  %%    _13
  Stk = build_stacktrace _13

  %% Argument types:
  %%    
  %% Aliased:
  %%    Stk
  _51 = put_list Stk, `[]`

  %% Argument types:
  %%    _51 => nonempty_list(any())
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _51
  _52 = put_list _14, _51

  %% Argument types:
  %%    _15 => 'error' | 'exit' | 'throw'
  %%    _52 => nonempty_list(any())
  %% Unique:
  %%    _15, 
  %%    _52
  _53 = put_list _15, _52

  %% Argument types:
  %%    _53 => nonempty_list(any())
  %% Aliased:
  %%    _26
  %% Unique:
  %%    _53
  _54 = put_list _26, _53
  br ^160

160:
  %% compile_SUITE.erl:1365
  %% Unique:
  %%    _54
  _67 = call (`io`:`format`/2), `"~p: ~p ~p\n~p\n"`, _54

  %% Aliased:
  %%    _67
  _128 = succeeded:body _67
  br _128, ^128, ^1

128:
  %% Result type:
  %%    'error'
  ret `error`

73:
  %% compile_SUITE.erl:1347
  %% Aliased:
  %%    _22
  _68 = match_fail `badmatch`, _22

  %% Unique:
  %%    _68
  _156 = succeeded:body _68
  br ^1

1:
  _69 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _69
}

%% compile_SUITE.erl:1374
%% Counter = 120
%% bs_ensure_opt: true
function `compile_SUITE`:`asm_labels`(_0) {
0:
  %% compile_SUITE.erl:1375
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _51 = succeeded:body DataDir
  br _51, ^51, ^1

51:
  %% compile_SUITE.erl:1376
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _52 = succeeded:body PrivDir
  br _52, ^52, ^1

52:
  %% compile_SUITE.erl:1377
  %% Aliased:
  %%    DataDir
  InFile = call (`filename`:`join`/2), DataDir, `"asm_labels.erl"`

  %% Aliased:
  %%    InFile
  _53 = succeeded:body InFile
  br _53, ^53, ^1

53:
  %% compile_SUITE.erl:1378
  %% Aliased:
  %%    PrivDir
  OutDir = call (`filename`:`join`/2), PrivDir, `"asm_labels"`

  %% Aliased:
  %%    OutDir
  _54 = succeeded:body OutDir
  br _54, ^54, ^1

54:
  %% compile_SUITE.erl:1379
  %% Aliased:
  %%    OutDir
  OutFile = call (`filename`:`join`/2), OutDir, `"asm_labels.S"`

  %% Aliased:
  %%    OutFile
  _55 = succeeded:body OutFile
  br _55, ^55, ^1

55:
  %% compile_SUITE.erl:1380
  %% Aliased:
  %%    OutDir
  _19 = call (`file`:`make_dir`/1), OutDir

  %% Aliased:
  %%    _19
  _56 = succeeded:body _19
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _117 = bif:'=:=' _19, `ok`
  br _117, ^116, ^58

116:
  %% Argument types:
  %%    
  %% Aliased:
  %%    OutDir
  _20 = put_tuple `outdir`, OutDir

  %% Argument types:
  %%    _20 => {'outdir', any()}
  %% Unique:
  %%    _20
  _21 = put_list _20, `[]`

  %% Argument types:
  %%    _21 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _21
  _22 = put_list `'S'`, _21

  %% compile_SUITE.erl:1381
  %% Aliased:
  %%    InFile
  %% Unique:
  %%    _22
  _23 = call (`compile`:`file`/2), InFile, _22

  %% Aliased:
  %%    _23
  _59 = succeeded:body _23
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _114 = bif:'=:=' _23, `{ok,asm_labels}`
  br _114, ^114, ^61

114:
  %% compile_SUITE.erl:1382
  %% Aliased:
  %%    OutFile
  _24 = call (`file`:`read_file`/1), OutFile

  %% Aliased:
  %%    _24
  _62 = succeeded:body _24
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _110 = is_tagged_tuple _24, `2`, `ok`
  br _110, ^107, ^64

107:
  %% Argument types:
  %%    _24 => {'ok', any()}
  %% Aliased:
  %%    _24
  _25 = get_tuple_element _24, `1`

  %% compile_SUITE.erl:1384
  %% Aliased:
  %%    _25
  _27 = call (`re`:`run`/3), _25, `"({call,.+,{f,.+}}\\. % foo/1)"`, `[global,multiline,{capture,all_but_first,list}]`

  %% Aliased:
  %%    _27
  _65 = succeeded:body _27
  br _65, ^65, ^1

65:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _103 = is_tagged_tuple _27, `2`, `match`
  br _103, ^100, ^67

100:
  %% Argument types:
  %%    _27 => {'match', any()}
  %% Aliased:
  %%    _27
  _28 = get_tuple_element _27, `1`

  %% Aliased:
  %%    _28
  _99 = is_nonempty_list _28
  br _99, ^99, ^67

99:
  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _30 = get_tl _28

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _98 = bif:'=:=' _30, `[]`
  br _98, ^98, ^67

98:
  %% compile_SUITE.erl:1385
  %% Aliased:
  %%    _25
  _32 = call (`re`:`run`/3), _25, `"({call_only,.+,{f,.+}}\\. % foo/1)"`, `[global,multiline,{capture,all_but_first,list}]`

  %% Aliased:
  %%    _32
  _68 = succeeded:body _32
  br _68, ^68, ^1

68:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _94 = is_tagged_tuple _32, `2`, `match`
  br _94, ^91, ^70

91:
  %% Argument types:
  %%    _32 => {'match', any()}
  %% Aliased:
  %%    _32
  _33 = get_tuple_element _32, `1`

  %% Aliased:
  %%    _33
  _90 = is_nonempty_list _33
  br _90, ^90, ^70

90:
  %% Argument types:
  %%    _33 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _33
  _35 = get_tl _33

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _89 = bif:'=:=' _35, `[]`
  br _89, ^89, ^70

89:
  %% compile_SUITE.erl:1386
  %% Aliased:
  %%    _25
  _37 = call (`re`:`run`/3), _25, `"({call_last,.+,{f,.+},.+}\\. % bar/1)"`, `[global,multiline,{capture,all_but_first,list}]`

  %% Aliased:
  %%    _37
  _71 = succeeded:body _37
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _85 = is_tagged_tuple _37, `2`, `match`
  br _85, ^82, ^73

82:
  %% Argument types:
  %%    _37 => {'match', any()}
  %% Aliased:
  %%    _37
  _38 = get_tuple_element _37, `1`

  %% Aliased:
  %%    _38
  _81 = is_nonempty_list _38
  br _81, ^81, ^73

81:
  %% Argument types:
  %%    _38 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _38
  _40 = get_tl _38

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _80 = bif:'=:=' _40, `[]`
  br _80, ^80, ^73

80:
  %% compile_SUITE.erl:1387
  %% Aliased:
  %%    OutDir
  _18 = call (`file`:`del_dir_r`/1), OutDir

  %% Aliased:
  %%    _18
  _74 = succeeded:body _18
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _78 = bif:'=:=' _18, `ok`
  br _78, ^77, ^76

77:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _18
  ret _18

76:
  %% compile_SUITE.erl:1387
  %% Aliased:
  %%    _18
  _42 = match_fail `badmatch`, _18

  %% Unique:
  %%    _42
  _79 = succeeded:body _42
  br ^1

73:
  %% compile_SUITE.erl:1386
  %% Aliased:
  %%    _37
  _43 = match_fail `badmatch`, _37

  %% Unique:
  %%    _43
  _88 = succeeded:body _43
  br ^1

70:
  %% compile_SUITE.erl:1385
  %% Aliased:
  %%    _32
  _44 = match_fail `badmatch`, _32

  %% Unique:
  %%    _44
  _97 = succeeded:body _44
  br ^1

67:
  %% compile_SUITE.erl:1384
  %% Aliased:
  %%    _27
  _45 = match_fail `badmatch`, _27

  %% Unique:
  %%    _45
  _106 = succeeded:body _45
  br ^1

64:
  %% compile_SUITE.erl:1382
  %% Aliased:
  %%    _24
  _46 = match_fail `badmatch`, _24

  %% Unique:
  %%    _46
  _113 = succeeded:body _46
  br ^1

61:
  %% compile_SUITE.erl:1381
  %% Aliased:
  %%    _23
  _47 = match_fail `badmatch`, _23

  %% Unique:
  %%    _47
  _115 = succeeded:body _47
  br ^1

58:
  %% compile_SUITE.erl:1380
  %% Aliased:
  %%    _19
  _48 = match_fail `badmatch`, _19

  %% Unique:
  %%    _48
  _118 = succeeded:body _48
  br ^1

1:
  _49 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _49
}

%% compile_SUITE.erl:1389
%% Counter = 177
%% bs_ensure_opt: true
function `compile_SUITE`:`sys_pre_attributes`(_0) {
0:
  %% compile_SUITE.erl:1390
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _84 = succeeded:body DataDir
  br _84, ^84, ^1

84:
  %% compile_SUITE.erl:1391
  %% Aliased:
  %%    DataDir
  File = call (`filename`:`join`/2), DataDir, `"attributes.erl"`

  %% Aliased:
  %%    File
  _85 = succeeded:body File
  br _85, ^85, ^1

85:
  %% compile_SUITE.erl:1399
  %% Aliased:
  %%    File
  _41 = call (`compile`:`file`/2), File, `[{attribute,replace,replaced,42},
  {attribute,replace,replace_nonexisting,new},
  {attribute,delete,deleted},
  {attribute,insert,inserted,"value"},
  binary,report,verbose,
  {parse_transform,sys_pre_attributes}]`

  %% Aliased:
  %%    _41
  _86 = succeeded:body _41
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _172 = is_tagged_tuple _41, `3`, `ok`
  br _172, ^169, ^88

169:
  %% Argument types:
  %%    _41 => {'ok', any(), any()}
  %% Aliased:
  %%    _41
  _43 = get_tuple_element _41, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _89 = bif:'=:=' _43, `attributes`
  br _89, ^89, ^88

89:
  %% Argument types:
  %%    _41 => {'ok', 'attributes', any()}
  %% Aliased:
  %%    _41
  _42 = get_tuple_element _41, `2`

  %% compile_SUITE.erl:1401
  %% Aliased:
  %%    _42, 
  %%    File
  _70 = call (`code`:`load_binary`/3), `attributes`, File, _42

  %% Aliased:
  %%    _70
  _90 = succeeded:body _70
  br _90, ^90, ^1

90:
  %% compile_SUITE.erl:1402
  Attr = call (`attributes`:`module_info`/1), `attributes`

  %% Aliased:
  %%    Attr
  _91 = succeeded:body Attr
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Attr
  _45 = put_list Attr, `[]`

  %% compile_SUITE.erl:1403
  %% Unique:
  %%    _45
  _71 = call (`io`:`format`/2), `"~p"`, _45

  %% Aliased:
  %%    _71
  _92 = succeeded:body _71
  br _92, ^92, ^1

92:
  %% compile_SUITE.erl:1404
  %% Aliased:
  %%    Attr
  _46 = call (`lists`:`keyfind`/3), `inserted`, `1`, Attr

  %% Aliased:
  %%    _46
  _93 = succeeded:body _46
  br _93, ^93, ^1

93:
  %% Argument types:
  %%    _46 => 'false' | {'inserted', ...}
  %% Aliased:
  %%    _46
  _167 = bif:'=:=' _46, `{inserted,"value"}`
  br _167, ^167, ^95

167:
  %% compile_SUITE.erl:1405
  %% Aliased:
  %%    Attr
  _47 = call (`lists`:`keyfind`/3), `replaced`, `1`, Attr

  %% Aliased:
  %%    _47
  _96 = succeeded:body _47
  br _96, ^96, ^1

96:
  %% Argument types:
  %%    _47 => 'false' | {'replaced', ...}
  %% Aliased:
  %%    _47
  _165 = bif:'=:=' _47, `{replaced,"*"}`
  br _165, ^165, ^98

165:
  %% compile_SUITE.erl:1406
  %% Aliased:
  %%    Attr
  _48 = call (`lists`:`keyfind`/3), `replace_nonexisting`, `1`, Attr

  %% Aliased:
  %%    _48
  _99 = succeeded:body _48
  br _99, ^99, ^1

99:
  %% Argument types:
  %%    _48 => 'false' | {'replace_nonexisting', ...}
  %% Aliased:
  %%    _48
  _163 = bif:'=:=' _48, `{replace_nonexisting,[new]}`
  br _163, ^163, ^101

163:
  %% compile_SUITE.erl:1407
  %% Aliased:
  %%    Attr
  _49 = call (`lists`:`keymember`/3), `deleted`, `1`, Attr

  %% Aliased:
  %%    _49
  _102 = succeeded:body _49
  br _102, ^102, ^1

102:
  br _49, ^104, ^160

104:
  %% compile_SUITE.erl:1407
  _77 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _77
  _162 = succeeded:body _77
  br ^1

160:
  %% compile_SUITE.erl:1410
  %% Aliased:
  %%    File
  _50 = call (`compile`:`file`/2), File, `[{attribute,insert,inserted,"value"},
  binary,report,verbose,
  {parse_transform,sys_pre_attributes}]`

  %% Aliased:
  %%    _50
  _105 = succeeded:body _50
  br _105, ^105, ^1

105:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _156 = is_tagged_tuple _50, `3`, `ok`
  br _156, ^153, ^107

153:
  %% Argument types:
  %%    _50 => {'ok', any(), any()}
  %% Aliased:
  %%    _50
  _52 = get_tuple_element _50, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _108 = bif:'=:=' _52, `attributes`
  br _108, ^108, ^107

108:
  %% compile_SUITE.erl:1411
  %% Aliased:
  %%    File
  _54 = call (`compile`:`file`/2), File, `[binary,report,{parse_transform,sys_pre_attributes}]`

  %% Aliased:
  %%    _54
  _109 = succeeded:body _54
  br _109, ^109, ^1

109:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _149 = is_tagged_tuple _54, `3`, `ok`
  br _149, ^146, ^111

146:
  %% Argument types:
  %%    _54 => {'ok', any(), any()}
  %% Aliased:
  %%    _54
  _56 = get_tuple_element _54, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _112 = bif:'=:=' _56, `attributes`
  br _112, ^112, ^111

112:
  %% compile_SUITE.erl:1412
  %% Aliased:
  %%    File
  _58 = call (`compile`:`file`/2), File, `[{attribute,delete,deleted},
  binary,report,verbose,
  {parse_transform,sys_pre_attributes}]`

  %% Aliased:
  %%    _58
  _113 = succeeded:body _58
  br _113, ^113, ^1

113:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _142 = is_tagged_tuple _58, `3`, `ok`
  br _142, ^139, ^115

139:
  %% Argument types:
  %%    _58 => {'ok', any(), any()}
  %% Aliased:
  %%    _58
  _60 = get_tuple_element _58, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _116 = bif:'=:=' _60, `attributes`
  br _116, ^116, ^115

116:
  %% compile_SUITE.erl:1413
  %% Aliased:
  %%    File
  _62 = call (`compile`:`file`/2), File, `[{attribute,replace,replaced,42},
  binary,report,verbose,
  {parse_transform,sys_pre_attributes}]`

  %% Aliased:
  %%    _62
  _117 = succeeded:body _62
  br _117, ^117, ^1

117:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _135 = is_tagged_tuple _62, `3`, `ok`
  br _135, ^132, ^119

132:
  %% Argument types:
  %%    _62 => {'ok', any(), any()}
  %% Aliased:
  %%    _62
  _64 = get_tuple_element _62, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _120 = bif:'=:=' _64, `attributes`
  br _120, ^120, ^119

120:
  %% compile_SUITE.erl:1415
  %% Aliased:
  %%    File
  _66 = call (`compile`:`file`/2), File, `[{attribute,replace,replaced,42},
  {attribute,replace,replace_nonexisting,new},
  {attribute,delete,deleted},
  {attribute,insert,inserted,"value"},
  binary,
  {parse_transform,sys_pre_attributes}]`

  %% Aliased:
  %%    _66
  _121 = succeeded:body _66
  br _121, ^121, ^1

121:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _128 = is_tagged_tuple _66, `3`, `ok`
  br _128, ^125, ^123

125:
  %% Argument types:
  %%    _66 => {'ok', any(), any()}
  %% Aliased:
  %%    _66
  _68 = get_tuple_element _66, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _124 = bif:'=:=' _68, `attributes`
  br _124, ^124, ^123

124:
  %% Result type:
  %%    'ok'
  ret `ok`

123:
  %% compile_SUITE.erl:1415
  %% Aliased:
  %%    _66
  _72 = match_fail `badmatch`, _66

  %% Unique:
  %%    _72
  _131 = succeeded:body _72
  br ^1

119:
  %% compile_SUITE.erl:1413
  %% Aliased:
  %%    _62
  _73 = match_fail `badmatch`, _62

  %% Unique:
  %%    _73
  _138 = succeeded:body _73
  br ^1

115:
  %% compile_SUITE.erl:1412
  %% Aliased:
  %%    _58
  _74 = match_fail `badmatch`, _58

  %% Unique:
  %%    _74
  _145 = succeeded:body _74
  br ^1

111:
  %% compile_SUITE.erl:1411
  %% Aliased:
  %%    _54
  _75 = match_fail `badmatch`, _54

  %% Unique:
  %%    _75
  _152 = succeeded:body _75
  br ^1

107:
  %% compile_SUITE.erl:1410
  %% Aliased:
  %%    _50
  _76 = match_fail `badmatch`, _50

  %% Unique:
  %%    _76
  _159 = succeeded:body _76
  br ^1

101:
  %% compile_SUITE.erl:1406
  %% Aliased:
  %%    _48
  _78 = match_fail `badmatch`, _48

  %% Unique:
  %%    _78
  _164 = succeeded:body _78
  br ^1

98:
  %% compile_SUITE.erl:1405
  %% Aliased:
  %%    _47
  _79 = match_fail `badmatch`, _47

  %% Unique:
  %%    _79
  _166 = succeeded:body _79
  br ^1

95:
  %% compile_SUITE.erl:1404
  %% Aliased:
  %%    _46
  _80 = match_fail `badmatch`, _46

  %% Unique:
  %%    _80
  _168 = succeeded:body _80
  br ^1

88:
  %% compile_SUITE.erl:1399
  %% Aliased:
  %%    _41
  _81 = match_fail `badmatch`, _41

  %% Unique:
  %%    _81
  _175 = succeeded:body _81
  br ^1

1:
  _82 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _82
}

%% compile_SUITE.erl:1421
%% Counter = 72
%% bs_ensure_opt: true
function `compile_SUITE`:`dialyzer`(_0) {
0:
  %% compile_SUITE.erl:1422
  %% Aliased:
  %%    _0
  Priv = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    Priv
  _31 = succeeded:body Priv
  br _31, ^31, ^1

31:
  %% compile_SUITE.erl:1423
  %% Aliased:
  %%    _0
  _2 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _2
  _32 = succeeded:body _2
  br _32, ^32, ^1

32:
  %% compile_SUITE.erl:1423
  %% Aliased:
  %%    _2
  _13 = call (`file`:`set_cwd`/1), _2

  %% Aliased:
  %%    _13
  _33 = succeeded:body _13
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _69 = bif:'=:=' _13, `ok`
  br _69, ^68, ^35

68:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Priv
  _14 = put_tuple `outdir`, Priv

  %% Argument types:
  %%    _14 => {'outdir', any()}
  %% Aliased:
  %%    _14
  Opts = put_list _14, `[report_errors]`

  %% Argument types:
  %%    Opts => nonempty_list('report_errors' | {'outdir', any()})
  %% Aliased:
  %%    Opts
  _15 = put_list `dialyzer`, Opts

  %% compile_SUITE.erl:1426
  %% Unique:
  %%    _15
  _16 = call (`c`:`c`/2), `dialyzer_test`, _15

  %% Aliased:
  %%    _16
  _36 = succeeded:body _16
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _64 = is_tagged_tuple _16, `2`, `ok`
  br _64, ^61, ^38

61:
  %% Argument types:
  %%    _16 => {'ok', any()}
  %% Aliased:
  %%    _16
  _17 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _39 = bif:'=:=' _17, `dialyzer_test`
  br _39, ^39, ^38

39:
  %% compile_SUITE.erl:1427
  _19 = call (`dialyzer_test`:`dialyzer_test`/0)

  %% Aliased:
  %%    _19
  _40 = succeeded:body _19
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _59 = bif:'=:=' _19, `[{a,b,c}]`
  br _59, ^59, ^42

59:
  %% compile_SUITE.erl:1430
  %% Aliased:
  %%    Opts
  _20 = call (`c`:`c`/2), `dialyzer_test`, Opts

  %% Aliased:
  %%    _20
  _43 = succeeded:body _20
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _55 = is_tagged_tuple _20, `2`, `ok`
  br _55, ^52, ^45

52:
  %% Argument types:
  %%    _20 => {'ok', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _46 = bif:'=:=' _21, `dialyzer_test`
  br _46, ^46, ^45

46:
  %% compile_SUITE.erl:1431
  _23 = call (`dialyzer_test`:`dialyzer_test`/0)

  %% Aliased:
  %%    _23
  _47 = succeeded:body _23
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _50 = bif:'=:=' _23, `[{a,b,c}]`
  br _50, ^50, ^49

50:
  %% Result type:
  %%    'ok'
  ret `ok`

49:
  %% compile_SUITE.erl:1431
  %% Aliased:
  %%    _23
  _24 = match_fail `badmatch`, _23

  %% Unique:
  %%    _24
  _51 = succeeded:body _24
  br ^1

45:
  %% compile_SUITE.erl:1430
  %% Aliased:
  %%    _20
  _25 = match_fail `badmatch`, _20

  %% Unique:
  %%    _25
  _58 = succeeded:body _25
  br ^1

42:
  %% compile_SUITE.erl:1427
  %% Aliased:
  %%    _19
  _26 = match_fail `badmatch`, _19

  %% Unique:
  %%    _26
  _60 = succeeded:body _26
  br ^1

38:
  %% compile_SUITE.erl:1426
  %% Aliased:
  %%    _16
  _27 = match_fail `badmatch`, _16

  %% Unique:
  %%    _27
  _67 = succeeded:body _27
  br ^1

35:
  %% compile_SUITE.erl:1423
  %% Aliased:
  %%    _13
  _28 = match_fail `badmatch`, _13

  %% Unique:
  %%    _28
  _70 = succeeded:body _28
  br ^1

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% compile_SUITE.erl:1434
%% Counter = 26
%% bs_ensure_opt: true
function `compile_SUITE`:`beam_ssa_pp_smoke_test`(_0) {
0:
  %% compile_SUITE.erl:1435
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _15 = succeeded:body PrivDir
  br _15, ^15, ^1

15:
  %% compile_SUITE.erl:1436
  %% Aliased:
  %%    PrivDir
  Outdir = call (`filename`:`join`/2), PrivDir, `"beam_ssa_pp_smoke_test"`

  %% Aliased:
  %%    Outdir
  _16 = succeeded:body Outdir
  br _16, ^16, ^1

16:
  %% compile_SUITE.erl:1437
  %% Aliased:
  %%    Outdir
  _9 = call (`file`:`make_dir`/1), Outdir

  %% Aliased:
  %%    _9
  _17 = succeeded:body _9
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _23 = bif:'=:=' _9, `ok`
  br _23, ^22, ^19

22:
  %% compile_SUITE.erl:1438
  %% Result type:
  %%    list(any())
  TestBeams = call (`get_unique_beam_files`/0)

  %% Aliased:
  %%    TestBeams
  _20 = succeeded:body TestBeams
  br _20, ^20, ^1

20:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Outdir
  _8 = make_fun (`'-beam_ssa_pp_smoke_test/1-fun-0-'`/2), Outdir

  %% compile_SUITE.erl:1439
  %% Aliased:
  %%    _8, 
  %%    TestBeams
  _11 = call (`test_lib`:`p_run`/2), _8, TestBeams

  %% Aliased:
  %%    _11
  _21 = succeeded:body _11
  br _21, ^21, ^1

21:
  %% Aliased:
  %%    _11
  ret _11

19:
  %% compile_SUITE.erl:1437
  %% Aliased:
  %%    _9
  _12 = match_fail `badmatch`, _9

  %% Unique:
  %%    _12
  _24 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compile_SUITE.erl:1441
%% Counter = 107
%% bs_ensure_opt: true
function `compile_SUITE`:`beam_ssa_pp`(_0, _1) {
0:
  br ^106

106:
  _43 = new_try_tag `'try'`
  br _43, ^42, ^40

42:
  %% compile_SUITE.erl:1444
  %% Aliased:
  %%    _0
  _11 = call (`beam_lib`:`chunks`/2), _0, `[abstract_code]`

  %% Aliased:
  %%    _11
  _44 = succeeded:body _11
  br _44, ^44, ^40

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _69 = is_tagged_tuple _11, `2`, `ok`
  br _69, ^66, ^46

66:
  %% Argument types:
  %%    _11 => {'ok', any()}
  %% Aliased:
  %%    _11
  _12 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _63 = bif:is_tuple _12
  br _63, ^63, ^46

63:
  %% Argument types:
  %%    _12 => {...}
  %% Aliased:
  %%    _12
  _64 = bif:tuple_size _12

  %% Argument types:
  %%    _64 => 0..16777215
  %% Unique:
  %%    _64
  _65 = bif:'=:=' _64, `2`
  br _65, ^62, ^46

62:
  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `1`

  %% Aliased:
  %%    _14
  _61 = is_nonempty_list _14
  br _61, ^61, ^46

61:
  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _17 = get_hd _14

  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _16 = get_tl _14

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _58 = is_tagged_tuple _17, `2`, `abstract_code`
  br _58, ^55, ^46

55:
  %% Argument types:
  %%    _17 => {'abstract_code', any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _52 = is_tagged_tuple _18, `2`, `raw_abstract_v1`
  br _52, ^49, ^46

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _48 = bif:'=:=' _16, `[]`
  br _48, ^48, ^46

48:
  %% Argument types:
  %%    _18 => {'raw_abstract_v1', any()}
  %% Aliased:
  %%    _18
  _20 = get_tuple_element _18, `1`

  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _15 = get_tuple_element _12, `0`

  %% compile_SUITE.erl:1445
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _1, 
  %%    _15, 
  %%    _20
  _33 = call (`beam_ssa_pp_1`/3), _15, _20, _1

  %% Aliased:
  %%    _33
  _47 = succeeded:body _33
  br _47, ^45, ^40

45:
  %% Unique:
  %%    _43
  _87 = kill_try_tag _43
  %% Result type:
  %%    'ok'
  ret `ok`

46:
  %% compile_SUITE.erl:1443
  %% Aliased:
  %%    _11
  _34 = match_fail `badmatch`, _11

  %% Unique:
  %%    _34
  _72 = succeeded:body _34
  br ^40

40:
  %% Unique:
  %%    _43
  _85 = landingpad `'try'`, _43

  %% Aliased:
  %%    _85
  _6 = extract _85, `0`

  %% Aliased:
  %%    _85
  _5 = extract _85, `1`

  %% Aliased:
  %%    _85
  _4 = extract _85, `2`

  %% Unique:
  %%    _43
  _86 = kill_try_tag _43

  %% Argument types:
  %%    _6 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _6
  _83 = bif:'=:=' _6, `throw`
  br _83, ^82, ^74

82:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _79 = is_tagged_tuple _5, `2`, `error`
  br _79, ^76, ^74

76:
  %% Argument types:
  %%    _5 => {'error', any()}
  %% Aliased:
  %%    _5
  _27 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _29 = put_list _0, `[]`

  %% Argument types:
  %%    _29 => nonempty_list(any())
  %% Aliased:
  %%    _27
  %% Unique:
  %%    _29
  _30 = put_list _27, _29

  %% compile_SUITE.erl:1448
  %% Unique:
  %%    _30
  _35 = call (`io`:`format`/2), `"*** compilation failure '~p' for file ~s\n"`, _30

  %% Aliased:
  %%    _35
  _75 = succeeded:body _35
  br _75, ^75, ^1

75:
  %% Result type:
  %%    'error'
  ret `error`

74:
  %% Aliased:
  %%    _4
  Stk = build_stacktrace _4

  %% Argument types:
  %%    
  %% Aliased:
  %%    Stk
  _23 = put_list Stk, `[]`

  %% Argument types:
  %%    _23 => nonempty_list(any())
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _23
  _24 = put_list _5, _23

  %% Argument types:
  %%    _6 => 'error' | 'exit' | 'throw'
  %%    _24 => nonempty_list(any())
  %% Unique:
  %%    _6, 
  %%    _24
  _25 = put_list _6, _24

  %% Argument types:
  %%    _25 => nonempty_list(any())
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _25
  _26 = put_list _0, _25

  %% compile_SUITE.erl:1452
  %% Unique:
  %%    _26
  _36 = call (`io`:`format`/2), `"~p: ~p ~p\n~p\n"`, _26

  %% Aliased:
  %%    _36
  _84 = succeeded:body _36
  br _84, ^84, ^1

84:
  %% Result type:
  %%    'error'
  ret `error`

1:
  _37 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _37
}

%% compile_SUITE.erl:1456
%% Counter = 62
%% bs_ensure_opt: true
function `compile_SUITE`:`beam_ssa_pp_1`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:1457
  %% Aliased:
  %%    _0
  Opts = call (`test_lib`:`opt_opts`/1), _0

  %% Aliased:
  %%    Opts
  _29 = succeeded:body Opts
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Opts
  _15 = put_list `dssaopt`, Opts

  %% compile_SUITE.erl:1458
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _15
  _16 = call (`compile`:`forms`/2), _1, _15

  %% Aliased:
  %%    _16
  _30 = succeeded:body _16
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _57 = is_tagged_tuple _16, `3`, `ok`
  br _57, ^56, ^32

56:
  %% Argument types:
  %%    _16 => {'ok', any(), any()}
  %% Aliased:
  %%    _16
  _18 = get_tuple_element _16, `1`

  %% Argument types:
  %%    _16 => {'ok', any(), any()}
  %% Aliased:
  %%    _16
  _17 = get_tuple_element _16, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _18
  _33 = bif:'=:=' _18, _0
  br _33, ^33, ^32

33:
  %% compile_SUITE.erl:1459
  %% Aliased:
  %%    _0
  _5 = call (`erlang`:`atom_to_list`/1), _0

  %% Aliased:
  %%    _5
  _34 = succeeded:body _5
  br _34, ^34, ^1

34:
  %% compile_SUITE.erl:1459
  %% Aliased:
  %%    _5
  _6 = call (`erlang`:`'++'`/2), _5, `".ssaopt"`

  %% compile_SUITE.erl:1459
  %% Aliased:
  %%    _2, 
  %%    _6
  ListFile = call (`filename`:`join`/2), _2, _6

  %% Aliased:
  %%    ListFile
  _36 = succeeded:body ListFile
  br _36, ^36, ^1

36:
  %% compile_SUITE.erl:1460
  %% Aliased:
  %%    ListFile
  _20 = call (`file`:`open`/2), ListFile, `[write,{encoding,utf8}]`

  %% Aliased:
  %%    _20
  _37 = succeeded:body _20
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _50 = is_tagged_tuple _20, `2`, `ok`
  br _50, ^47, ^39

47:
  %% Argument types:
  %%    _20 => {'ok', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `1`

  %% compile_SUITE.erl:1461
  %% Aliased:
  %%    _17, 
  %%    _21
  _23 = call (`beam_listing`:`module`/2), _21, _17

  %% Aliased:
  %%    _23
  _40 = succeeded:body _23
  br _40, ^40, ^1

40:
  %% compile_SUITE.erl:1462
  %% Aliased:
  %%    _21
  _14 = call (`file`:`close`/1), _21

  %% Aliased:
  %%    _14
  _41 = succeeded:body _14
  br _41, ^41, ^1

41:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _45 = bif:'=:=' _14, `ok`
  br _45, ^44, ^43

44:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _14
  ret _14

43:
  %% compile_SUITE.erl:1462
  %% Aliased:
  %%    _14
  _24 = match_fail `badmatch`, _14

  %% Unique:
  %%    _24
  _46 = succeeded:body _24
  br ^1

39:
  %% compile_SUITE.erl:1460
  %% Aliased:
  %%    _20
  _25 = match_fail `badmatch`, _20

  %% Unique:
  %%    _25
  _53 = succeeded:body _25
  br ^1

32:
  %% compile_SUITE.erl:1458
  %% Aliased:
  %%    _16
  _26 = match_fail `badmatch`, _16

  %% Unique:
  %%    _26
  _60 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% compile_SUITE.erl:1465
%% Counter = 9
%% bs_ensure_opt: true
function `compile_SUITE`:`warnings`(_0) {
0:
  %% compile_SUITE.erl:1466
  %% Result type:
  %%    list(any())
  Files = call (`get_unique_files`/1), `".erl"`

  %% Aliased:
  %%    Files
  _6 = succeeded:body Files
  br _6, ^6, ^1

6:
  %% Result type:
  %%    'error' | 'ok'
  _2 = make_fun (`do_warnings`/1)

  %% compile_SUITE.erl:1467
  %% Aliased:
  %%    _2, 
  %%    Files
  _3 = call (`test_lib`:`p_run`/2), _2, Files

  %% Aliased:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^7, ^1

7:
  %% Aliased:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compile_SUITE.erl:1469
%% Counter = 26
%% bs_ensure_opt: true
function `compile_SUITE`:`do_warnings`(_0) {
0:
  %% compile_SUITE.erl:1471
  %% Aliased:
  %%    _0
  _6 = call (`compile`:`file`/2), _0, `[{feature,maybe_expr,enable},binary,bin_opt_info,recv_opt_info,return]`

  %% Aliased:
  %%    _6
  _15 = succeeded:body _6
  br _15, ^15, ^1

15:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _22 = is_tagged_tuple _6, `4`, `ok`
  br _22, ^19, ^17

19:
  %% Argument types:
  %%    _6 => {'ok', any(), any(), any()}
  %% Aliased:
  %%    _6
  _7 = get_tuple_element _6, `3`

  %% compile_SUITE.erl:1472
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0, 
  %%    _7
  _11 = call (`do_warnings_1`/2), _7, _0

  %% Unique:
  %%    _11
  _18 = succeeded:body _11
  br _18, ^18, ^1

18:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _11
  ret _11

17:
  %% compile_SUITE.erl:1471
  %% Aliased:
  %%    _6
  _12 = match_fail `badmatch`, _6

  %% Unique:
  %%    _12
  _25 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compile_SUITE.erl:1474
%% Counter = 44
%% bs_ensure_opt: true
function `compile_SUITE`:`do_warnings_1`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _39 = is_nonempty_list _0
  br _39, ^39, ^25

39:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _11 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _10 = get_tl _0

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _36 = bif:is_tuple _11
  br _36, ^36, ^24

36:
  %% Argument types:
  %%    _11 => {...}
  %% Aliased:
  %%    _11
  _37 = bif:tuple_size _11

  %% Argument types:
  %%    _37 => 0..16777215
  %% Unique:
  %%    _37
  _38 = bif:'=:=' _37, `2`
  br _38, ^35, ^24

35:
  %% Argument types:
  %%    _11 => {any(), any()}
  %% Aliased:
  %%    _11
  _13 = get_tuple_element _11, `0`

  %% Argument types:
  %%    _11 => {any(), any()}
  %% Aliased:
  %%    _11
  _12 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _28 = bif:'=:=' _13, `"no_file"`
  br _28, ^28, ^26

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _16 = put_list _12, `[]`

  %% Argument types:
  %%    _16 => nonempty_list(any())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _16
  _17 = put_list _1, _16

  %% compile_SUITE.erl:1475
  %% Unique:
  %%    _17
  _18 = call (`io`:`format`/2), `"~s:\nMissing file for warnings: ~p\n"`, _17

  %% Aliased:
  %%    _18
  _27 = succeeded:body _18
  br _27, ^27, ^1

27:
  %% Result type:
  %%    'error'
  ret `error`

26:
  %% compile_SUITE.erl:1479
  %% Aliased:
  %%    _13
  _14 = call (`filename`:`extension`/1), _13

  %% Aliased:
  %%    _14
  _29 = succeeded:body _14
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _33 = bif:'=:=' _14, `".erl"`
  br _33, ^33, ^31

33:
  %% compile_SUITE.erl:1481
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _10, 
  %%    _12
  _19 = call (`do_warnings_2`/3), _12, _10, _1

  %% Unique:
  %%    _19
  _32 = succeeded:body _19
  br _32, ^32, ^1

32:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _19
  ret _19

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _15 = put_list _1, `[]`

  %% compile_SUITE.erl:1483
  %% Unique:
  %%    _15
  _20 = call (`io`:`format`/2), `"~s:\nNo .erl extension\n"`, _15

  %% Aliased:
  %%    _20
  _34 = succeeded:body _20
  br _34, ^34, ^1

34:
  %% Result type:
  %%    'error'
  ret `error`

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _40 = bif:'=:=' _0, `[]`
  br _40, ^40, ^24

40:
  %% Result type:
  %%    'ok'
  ret `ok`

24:
  %% compile_SUITE.erl:1474
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-do_warnings_1/2-',2}}
  _21 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _21
  _41 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% compile_SUITE.erl:1488
%% Counter = 64
%% bs_ensure_opt: true
function `compile_SUITE`:`do_warnings_2`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _0
  _55 = is_nonempty_list _0
  br _55, ^55, ^33

55:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _14 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _13 = get_tl _0

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _52 = bif:is_tuple _14
  br _52, ^52, ^32

52:
  %% Argument types:
  %%    _14 => {...}
  %% Aliased:
  %%    _14
  _53 = bif:tuple_size _14

  %% Argument types:
  %%    _53 => 0..16777215
  %% Unique:
  %%    _53
  _54 = bif:'=:=' _53, `3`
  br _54, ^51, ^32

51:
  %% Argument types:
  %%    _14 => {any(), any(), any()}
  %% Aliased:
  %%    _14
  _17 = get_tuple_element _14, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _36 = bif:is_integer _17
  br _36, ^36, ^35

36:
  %% compile_SUITE.erl:1491
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _13
  _25 = call (`do_warnings_2`/3), _13, _1, _2

  %% Unique:
  %%    _25
  _37 = succeeded:body _25
  br _37, ^37, ^1

37:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _25
  ret _25

35:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _44 = bif:is_tuple _17
  br _44, ^44, ^39

44:
  %% Argument types:
  %%    _17 => {...}
  %% Aliased:
  %%    _17
  _45 = bif:tuple_size _17

  %% Argument types:
  %%    _45 => 0..16777215
  %% Unique:
  %%    _45
  _46 = bif:'=:=' _45, `2`
  br _46, ^43, ^38

43:
  %% Argument types:
  %%    _17 => {any(), any()}
  %% Aliased:
  %%    _17
  _20 = get_tuple_element _17, `0`

  %% compile_SUITE.erl:1492
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _3 = bif:is_integer _20
  br _3, ^61, ^38

61:
  %% Argument types:
  %%    _17 => {any(), any()}
  %% Aliased:
  %%    _17
  _19 = get_tuple_element _17, `1`

  %% compile_SUITE.erl:1492
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _4 = bif:is_integer _19
  br _4, ^41, ^38

41:
  %% compile_SUITE.erl:1493
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _13
  _27 = call (`do_warnings_2`/3), _13, _1, _2

  %% Unique:
  %%    _27
  _42 = succeeded:body _27
  br _42, ^42, ^1

42:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _27
  ret _27

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _49 = bif:'=:=' _17, `true`
  br _49, ^48, ^38

48:
  %% Argument types:
  %%    _14 => {'true', any(), any()}
  %% Aliased:
  %%    _14
  _22 = put_list _14, `[]`

  %% Argument types:
  %%    _22 => nonempty_list({'true', any(), any()})
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _22
  _23 = put_list _2, _22

  %% compile_SUITE.erl:1495
  %% Unique:
  %%    _23
  _26 = call (`io`:`format`/2), `"~s:\nMissing line number: ~p\n"`, _23

  %% Aliased:
  %%    _26
  _47 = succeeded:body _26
  br _47, ^47, ^1

47:
  %% Result type:
  %%    'error'
  ret `error`

38:
  %% compile_SUITE.erl:1489
  %% Aliased:
  %%    _17
  _28 = match_fail `case_clause`, _17

  %% Unique:
  %%    _28
  _50 = succeeded:body _28
  br ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _57 = bif:'=:=' _0, `[]`
  br _57, ^57, ^32

57:
  %% compile_SUITE.erl:1500
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _24 = call (`do_warnings_1`/2), _1, _2

  %% Unique:
  %%    _24
  _56 = succeeded:body _24
  br _56, ^56, ^1

56:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _24
  ret _24

32:
  %% compile_SUITE.erl:1488
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-do_warnings_2/3-',3}}
  _29 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _29
  _58 = succeeded:body _29
  br ^1

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% compile_SUITE.erl:1502
%% Counter = 215
%% bs_ensure_opt: true
function `compile_SUITE`:`message_printing`(_0) {
0:
  %% compile_SUITE.erl:1503
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _88 = succeeded:body DataDir
  br _88, ^88, ^1

88:
  %% compile_SUITE.erl:1504
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _89 = succeeded:body PrivDir
  br _89, ^89, ^1

89:
  %% compile_SUITE.erl:1506
  %% Aliased:
  %%    DataDir
  BadEncFile = call (`filename`:`join`/2), DataDir, `"bad_enc.erl"`

  %% Aliased:
  %%    BadEncFile
  _90 = succeeded:body BadEncFile
  br _90, ^90, ^1

90:
  %% compile_SUITE.erl:1507
  %% Aliased:
  %%    BadEncFile
  _33 = call (`compile`:`file`/2), BadEncFile, `[return]`

  %% Aliased:
  %%    _33
  _91 = succeeded:body _33
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _208 = is_tagged_tuple _33, `3`, `error`
  br _208, ^205, ^93

205:
  %% Argument types:
  %%    _33 => {'error', any(), any()}
  %% Aliased:
  %%    _33
  _34 = get_tuple_element _33, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _204 = bif:'=:=' _34, `[]`
  br _204, ^204, ^93

204:
  %% Argument types:
  %%    _33 => {'error', any(), nil()}
  %% Aliased:
  %%    _33
  _35 = get_tuple_element _33, `1`

  %% compile_SUITE.erl:1516
  %% Aliased:
  %%    _35
  _37 = call (`messages`/1), _35

  %% Aliased:
  %%    _37
  _94 = succeeded:body _37
  br _94, ^94, ^1

94:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _202 = bif:'=:=' _37, `[":7:15: cannot parse file, giving up\n%    7| \t    {ok, \"xyz\n%     | \t             ^\n\n",
  ":7:15: cannot translate from UTF-8\n%    7| \t    {ok, \"xyz\n%     | \t             ^\n\n"]`
  br _202, ^202, ^96

202:
  %% compile_SUITE.erl:1518
  %% Aliased:
  %%    DataDir
  UTF8File = call (`filename`:`join`/2), DataDir, `"col_utf8.erl"`

  %% Aliased:
  %%    UTF8File
  _97 = succeeded:body UTF8File
  br _97, ^97, ^1

97:
  %% compile_SUITE.erl:1519
  %% Aliased:
  %%    UTF8File
  _38 = call (`compile`:`file`/2), UTF8File, `[return]`

  %% Aliased:
  %%    _38
  _98 = succeeded:body _38
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _198 = is_tagged_tuple _38, `3`, `ok`
  br _198, ^195, ^100

195:
  %% Argument types:
  %%    _38 => {'ok', any(), any()}
  %% Aliased:
  %%    _38
  _39 = get_tuple_element _38, `2`

  %% compile_SUITE.erl:1523
  %% Aliased:
  %%    _39
  _42 = call (`messages`/1), _39

  %% Aliased:
  %%    _42
  _101 = succeeded:body _42
  br _101, ^101, ^1

101:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _193 = bif:'=:=' _42, `[":5:23: a term is constructed, but never used\n%    5|     B = <<\"xyzåäö\">>,\t<<\"12345\">>,\n%     |                      \t^\n\n"]`
  br _193, ^193, ^103

193:
  %% compile_SUITE.erl:1525
  %% Aliased:
  %%    DataDir
  Latin1File = call (`filename`:`join`/2), DataDir, `"col_lat1.erl"`

  %% Aliased:
  %%    Latin1File
  _104 = succeeded:body Latin1File
  br _104, ^104, ^1

104:
  %% compile_SUITE.erl:1526
  %% Aliased:
  %%    Latin1File
  _43 = call (`compile`:`file`/2), Latin1File, `[return]`

  %% Aliased:
  %%    _43
  _105 = succeeded:body _43
  br _105, ^105, ^1

105:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _189 = is_tagged_tuple _43, `3`, `ok`
  br _189, ^186, ^107

186:
  %% Argument types:
  %%    _43 => {'ok', any(), any()}
  %% Aliased:
  %%    _43
  _44 = get_tuple_element _43, `2`

  %% compile_SUITE.erl:1530
  %% Aliased:
  %%    _44
  _47 = call (`messages`/1), _44

  %% Aliased:
  %%    _47
  _108 = succeeded:body _47
  br _108, ^108, ^1

108:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _184 = bif:'=:=' _47, `[":6:23: a term is constructed, but never used\n%    6|     B = <<\"xyzåäö\">>,\t<<\"12345\">>,\n%     |                      \t^\n\n"]`
  br _184, ^184, ^110

184:
  %% compile_SUITE.erl:1532
  %% Aliased:
  %%    PrivDir
  LongFile = call (`filename`:`join`/2), PrivDir, `"long.erl"`

  %% Aliased:
  %%    LongFile
  _111 = succeeded:body LongFile
  br _111, ^111, ^1

111:
  %% compile_SUITE.erl:1536
  _13 = call (`lists`:`duplicate`/2), `10000`, `10`

  %% Aliased:
  %%    _13
  _112 = succeeded:body _13
  br _112, ^112, ^1

112:
  %% Argument types:
  %%    _13 => list(10)
  %% Aliased:
  %%    _13
  _48 = put_list _13, `["foo() -> bar().\n"]`

  %% Argument types:
  %%    _48 => nonempty_list(list(10..114))
  %% Unique:
  %%    _48
  _49 = put_list `"unused() -> ok.\n"`, _48

  %% Argument types:
  %%    _49 => nonempty_list(list(10..117))
  %% Unique:
  %%    _49
  _50 = put_list `"-export([foo/0]).\n"`, _49

  %% Argument types:
  %%    _50 => nonempty_list(list(10..120))
  %% Unique:
  %%    _50
  Long = put_list `"-module(long).\n"`, _50

  %% compile_SUITE.erl:1538
  %% Aliased:
  %%    LongFile
  %% Unique:
  %%    Long
  _51 = call (`file`:`write_file`/2), LongFile, Long

  %% Aliased:
  %%    _51
  _113 = succeeded:body _51
  br _113, ^113, ^1

113:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _182 = bif:'=:=' _51, `ok`
  br _182, ^181, ^115

181:
  %% compile_SUITE.erl:1539
  %% Aliased:
  %%    LongFile
  _52 = call (`compile`:`file`/2), LongFile, `[return]`

  %% Aliased:
  %%    _52
  _116 = succeeded:body _52
  br _116, ^116, ^1

116:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _177 = is_tagged_tuple _52, `3`, `error`
  br _177, ^176, ^118

176:
  %% Argument types:
  %%    _52 => {'error', any(), any()}
  %% Aliased:
  %%    _52
  _54 = get_tuple_element _52, `1`

  %% Argument types:
  %%    _52 => {'error', any(), any()}
  %% Aliased:
  %%    _52
  _53 = get_tuple_element _52, `2`

  %% compile_SUITE.erl:1543
  %% Aliased:
  %%    _54
  _56 = call (`messages`/1), _54

  %% Aliased:
  %%    _56
  _119 = succeeded:body _56
  br _119, ^119, ^1

119:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _172 = bif:'=:=' _56, `[":10004:10: function bar/0 undefined\n% 10004| foo() -> bar().\n%      |          ^\n\n"]`
  br _172, ^172, ^121

172:
  %% compile_SUITE.erl:1547
  %% Aliased:
  %%    _53
  _57 = call (`messages`/1), _53

  %% Aliased:
  %%    _57
  _122 = succeeded:body _57
  br _122, ^122, ^1

122:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _170 = bif:'=:=' _57, `[":3:1: function unused/0 is unused\n%    3| unused() -> ok.\n%     | ^\n\n"]`
  br _170, ^170, ^124

170:
  %% compile_SUITE.erl:1548
  %% Aliased:
  %%    LongFile
  _58 = call (`file`:`delete`/1), LongFile

  %% Aliased:
  %%    _58
  _125 = succeeded:body _58
  br _125, ^125, ^1

125:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _168 = bif:'=:=' _58, `ok`
  br _168, ^167, ^127

167:
  %% compile_SUITE.erl:1550
  _59 = call (`file`:`get_cwd`/0)

  %% Aliased:
  %%    _59
  _128 = succeeded:body _59
  br _128, ^128, ^1

128:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _163 = is_tagged_tuple _59, `2`, `ok`
  br _163, ^160, ^130

160:
  %% Argument types:
  %%    _59 => {'ok', any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `1`
  _135 = new_try_tag `'try'`
  br _135, ^134, ^132

134:
  %% compile_SUITE.erl:1552
  %% Aliased:
  %%    DataDir
  _62 = call (`file`:`set_cwd`/1), DataDir

  %% Aliased:
  %%    _62
  _136 = succeeded:body _62
  br _136, ^136, ^132

136:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _152 = bif:'=:=' _62, `ok`
  br _152, ^151, ^138

151:
  %% compile_SUITE.erl:1553
  _31 = call (`compile`:`file`/2), `cover_messages`, `[report,binary]`

  %% Aliased:
  %%    _31
  _139 = succeeded:body _31
  br _139, ^139, ^132

139:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _147 = is_tagged_tuple _31, `3`, `ok`
  br _147, ^144, ^141

144:
  %% Argument types:
  %%    _31 => {'ok', any(), any()}
  %% Aliased:
  %%    _31
  _64 = get_tuple_element _31, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _143 = bif:'=:=' _64, `cover_messages`
  br _143, ^137, ^141

137:
  %% Unique:
  %%    _135
  _159 = kill_try_tag _135

  %% compile_SUITE.erl:1555
  %% Aliased:
  %%    _60
  _71 = call (`file`:`set_cwd`/1), _60

  %% Aliased:
  %%    _71
  _154 = succeeded:body _71
  br _154, ^133, ^1

133:
  %% Result type:
  %%    'ok'
  ret `ok`

141:
  %% compile_SUITE.erl:1553
  %% Aliased:
  %%    _31
  _69 = match_fail `badmatch`, _31

  %% Unique:
  %%    _69
  _150 = succeeded:body _69
  br ^132

138:
  %% compile_SUITE.erl:1552
  %% Aliased:
  %%    _62
  _70 = match_fail `badmatch`, _62

  %% Unique:
  %%    _70
  _153 = succeeded:body _70
  br ^132

132:
  %% Unique:
  %%    _135
  _157 = landingpad `'try'`, _135

  %% Aliased:
  %%    _157
  _26 = extract _157, `1`

  %% Aliased:
  %%    _157
  _25 = extract _157, `2`

  %% Unique:
  %%    _135
  _158 = kill_try_tag _135
  br ^214

214:
  %% compile_SUITE.erl:1555
  %% Aliased:
  %%    _60
  _72 = call (`file`:`set_cwd`/1), _60

  %% Aliased:
  %%    _72
  _155 = succeeded:body _72
  br _155, ^155, ^1

155:
  %% Aliased:
  %%    _25, 
  %%    _26
  _73 = resume _25, _26

  %% Unique:
  %%    _73
  _156 = succeeded:body _73
  br ^1

130:
  %% compile_SUITE.erl:1550
  %% Aliased:
  %%    _59
  _74 = match_fail `badmatch`, _59

  %% Unique:
  %%    _74
  _166 = succeeded:body _74
  br ^1

127:
  %% compile_SUITE.erl:1548
  %% Aliased:
  %%    _58
  _75 = match_fail `badmatch`, _58

  %% Unique:
  %%    _75
  _169 = succeeded:body _75
  br ^1

124:
  %% compile_SUITE.erl:1544
  %% Aliased:
  %%    _57
  _76 = match_fail `badmatch`, _57

  %% Unique:
  %%    _76
  _171 = succeeded:body _76
  br ^1

121:
  %% compile_SUITE.erl:1540
  %% Aliased:
  %%    _56
  _77 = match_fail `badmatch`, _56

  %% Unique:
  %%    _77
  _173 = succeeded:body _77
  br ^1

118:
  %% compile_SUITE.erl:1539
  %% Aliased:
  %%    _52
  _78 = match_fail `badmatch`, _52

  %% Unique:
  %%    _78
  _180 = succeeded:body _78
  br ^1

115:
  %% compile_SUITE.erl:1538
  %% Aliased:
  %%    _51
  _79 = match_fail `badmatch`, _51

  %% Unique:
  %%    _79
  _183 = succeeded:body _79
  br ^1

110:
  %% compile_SUITE.erl:1527
  %% Aliased:
  %%    _47
  _80 = match_fail `badmatch`, _47

  %% Unique:
  %%    _80
  _185 = succeeded:body _80
  br ^1

107:
  %% compile_SUITE.erl:1526
  %% Aliased:
  %%    _43
  _81 = match_fail `badmatch`, _43

  %% Unique:
  %%    _81
  _192 = succeeded:body _81
  br ^1

103:
  %% compile_SUITE.erl:1520
  %% Aliased:
  %%    _42
  _82 = match_fail `badmatch`, _42

  %% Unique:
  %%    _82
  _194 = succeeded:body _82
  br ^1

100:
  %% compile_SUITE.erl:1519
  %% Aliased:
  %%    _38
  _83 = match_fail `badmatch`, _38

  %% Unique:
  %%    _83
  _201 = succeeded:body _83
  br ^1

96:
  %% compile_SUITE.erl:1509
  %% Aliased:
  %%    _37
  _84 = match_fail `badmatch`, _37

  %% Unique:
  %%    _84
  _203 = succeeded:body _84
  br ^1

93:
  %% compile_SUITE.erl:1507
  %% Aliased:
  %%    _33
  _85 = match_fail `badmatch`, _33

  %% Unique:
  %%    _85
  _211 = succeeded:body _85
  br ^1

1:
  _86 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _86
}

%% compile_SUITE.erl:1560
%% Counter = 18
%% bs_ensure_opt: true
function `compile_SUITE`:`messages`(_0) {
0:
  %% Result type:
  %%    list(any())
  _3 = make_fun (`'-messages/1-fun-0-'`/1)

  %% compile_SUITE.erl:1561
  %% Aliased:
  %%    _0, 
  %%    _3
  _13 = call (`lists`:`flatmap`/2), _3, _0

  %% Aliased:
  %%    _13
  _16 = succeeded:body _13
  br _16, ^16, ^1

16:
  %% Aliased:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% compile_SUITE.erl:1566
%% Counter = 24
%% bs_ensure_opt: true
function `compile_SUITE`:`format_descs`(_0, _1) {
0:
  %% compile_SUITE.erl:1568
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = call (`sys_messages`:`format_messages`/4), _0, `[]`, _1, `[]`

  %% Aliased:
  %%    _4
  _22 = succeeded:body _4
  br _22, ^22, ^1

22:
  %% compile_SUITE.erl:1568
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _4
  _19 = call (`'-format_descs/2-lc$^0/1-0-'`/2), _4, _0

  %% Aliased:
  %%    _19
  _23 = succeeded:body _19
  br _23, ^23, ^1

23:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _19
  ret _19

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% compile_SUITE.erl:1570
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     list(any())
function `compile_SUITE`:`strip_prefix`(_0, _1) {
0:
  %% compile_SUITE.erl:1571
  %% Aliased:
  %%    _0, 
  %%    _1
  _2 = call (`string`:`prefix`/2), _1, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _9 = bif:'=:=' _2, `nomatch`
  br _9, ^8, ^7

8:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _1
  ret _1

7:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:1579
%% Counter = 53
%% bs_ensure_opt: true
function `compile_SUITE`:`pre_load_check`(_0) {
0:
  %% compile_SUITE.erl:1580
  _7 = call (`test_server`:`is_cover`/0)

  %% Aliased:
  %%    _7
  _16 = succeeded:body _7
  br _16, ^16, ^1

16:
  switch _7, ^18, [
    { `false`, ^51 },
    { `true`, ^31 }
  ]

31:
  %% Result type:
  %%    {'skip', nonempty_list(32..118)}
  ret `{skip,"Cover is running"}`

51:
  br ^52

52:
  _23 = new_try_tag `'try'`
  br _23, ^22, ^20

22:
  %% compile_SUITE.erl:1585
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _9 = call (`do_pre_load_check`/1), _0

  %% Unique:
  %%    _9
  _24 = succeeded:body _9
  br _24, ^19, ^20

19:
  %% Unique:
  %%    _23
  _30 = kill_try_tag _23

  %% compile_SUITE.erl:1587
  _10 = call (`dbg`:`stop`/0)

  %% Aliased:
  %%    _10
  _25 = succeeded:body _10
  br _25, ^25, ^1

25:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _9
  ret _9

20:
  %% Unique:
  %%    _23
  _28 = landingpad `'try'`, _23

  %% Aliased:
  %%    _28
  _4 = extract _28, `1`

  %% Aliased:
  %%    _28
  _3 = extract _28, `2`

  %% Unique:
  %%    _23
  _29 = kill_try_tag _23
  br ^35

35:
  %% compile_SUITE.erl:1587
  _11 = call (`dbg`:`stop`/0)

  %% Aliased:
  %%    _11
  _26 = succeeded:body _11
  br _26, ^26, ^1

26:
  %% Aliased:
  %%    _3, 
  %%    _4
  _12 = resume _3, _4

  %% Unique:
  %%    _12
  _27 = succeeded:body _12
  br ^1

18:
  %% compile_SUITE.erl:1580
  %% Aliased:
  %%    _7
  _13 = match_fail `case_clause`, _7

  %% Unique:
  %%    _13
  _33 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% compile_SUITE.erl:1591
%% Counter = 274
%% bs_ensure_opt: true
function `compile_SUITE`:`do_pre_load_check`(_0) {
0:
  %% compile_SUITE.erl:1592
  %% Aliased:
  %%    _0
  DataDir = call (`test_server`:`lookup_config`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _138 = succeeded:body DataDir
  br _138, ^138, ^1

138:
  %% compile_SUITE.erl:1593
  %% Aliased:
  %%    DataDir
  Simple = call (`filename`:`join`/2), DataDir, `"simple.erl"`

  %% Aliased:
  %%    Simple
  _139 = succeeded:body Simple
  br _139, ^139, ^1

139:
  %% compile_SUITE.erl:1594
  %% Aliased:
  %%    DataDir
  Big = call (`filename`:`join`/2), DataDir, `"big.erl"`

  %% Aliased:
  %%    Big
  _140 = succeeded:body Big
  br _140, ^140, ^1

140:
  %% Result type:
  %%    maybe_improper_list(any(), any())
  _4 = make_fun (`pre_load_trace`/2)

  %% Argument types:
  %%    _4 => fun((_, _) -> maybe_improper_list(any(), any()))
  %% Aliased:
  %%    _4
  _52 = put_tuple _4, `[]`

  %% compile_SUITE.erl:1595
  %% Unique:
  %%    _52
  _53 = call (`dbg`:`tracer`/2), `process`, _52

  %% Aliased:
  %%    _53
  _141 = succeeded:body _53
  br _141, ^141, ^1

141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _264 = is_tagged_tuple _53, `2`, `ok`
  br _264, ^261, ^143

261:
  %% compile_SUITE.erl:1596
  %% Argument types:
  %%    
  _6 = bif:self

  %% compile_SUITE.erl:1596
  %% Unique:
  %%    _6
  _109 = call (`dbg`:`p`/2), _6, `call`

  %% Aliased:
  %%    _109
  _144 = succeeded:body _109
  br _144, ^144, ^1

144:
  %% compile_SUITE.erl:1597
  _110 = call (`dbg`:`p`/2), `new`, `call`

  %% Aliased:
  %%    _110
  _145 = succeeded:body _110
  br _145, ^145, ^1

145:
  %% compile_SUITE.erl:1598
  _56 = call (`dbg`:`tpl`/2), `{compile_SUITE,get_trace_data,0}`, `[]`

  %% Aliased:
  %%    _56
  _146 = succeeded:body _56
  br _146, ^146, ^1

146:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _257 = is_tagged_tuple _56, `2`, `ok`
  br _257, ^254, ^148

254:
  %% compile_SUITE.erl:1599
  _59 = call (`dbg`:`tp`/2), `{code,ensure_modules_loaded,1}`, `[]`

  %% Aliased:
  %%    _59
  _149 = succeeded:body _59
  br _149, ^149, ^1

149:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _250 = is_tagged_tuple _59, `2`, `ok`
  br _250, ^247, ^151

247:
  %% compile_SUITE.erl:1605
  %% Aliased:
  %%    Simple
  _62 = call (`compile`:`compile`/3), Simple, `[]`, `{options,[],".",undefined,[],1,false,999,[binary],[],undefined}`

  %% Aliased:
  %%    _62
  _152 = succeeded:body _62
  br _152, ^152, ^1

152:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _243 = is_tagged_tuple _62, `3`, `ok`
  br _243, ^240, ^154

240:
  %% Argument types:
  %%    _62 => {'ok', any(), any()}
  %% Aliased:
  %%    _62
  _64 = get_tuple_element _62, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _239 = bif:'=:=' _64, `simple`
  br _239, ^238, ^154

238:
  %% compile_SUITE.erl:1606
  _66 = call (`get_trace_data`/0)

  %% Aliased:
  %%    _66
  _155 = succeeded:body _66
  br _155, ^155, ^1

155:
  %% Aliased:
  %%    _66
  _236 = is_nonempty_list _66
  br _236, ^236, ^157

236:
  %% Argument types:
  %%    _66 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _66
  _68 = get_hd _66

  %% Argument types:
  %%    _66 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _66
  _67 = get_tl _66

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _233 = is_tagged_tuple _68, `3`, `code`
  br _233, ^230, ^157

230:
  %% Argument types:
  %%    _68 => {'code', any(), any()}
  %% Aliased:
  %%    _68
  _70 = get_tuple_element _68, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _229 = bif:'=:=' _70, `ensure_modules_loaded`
  br _229, ^228, ^157

228:
  %% Argument types:
  %%    _68 => {'code', 'ensure_modules_loaded', any()}
  %% Aliased:
  %%    _68
  _69 = get_tuple_element _68, `2`

  %% Aliased:
  %%    _69
  _227 = is_nonempty_list _69
  br _227, ^227, ^157

227:
  %% Argument types:
  %%    _69 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _69
  _73 = get_hd _69

  %% Argument types:
  %%    _69 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _69
  _72 = get_tl _69

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _226 = bif:'=:=' _72, `[]`
  br _226, ^226, ^157

226:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _225 = bif:'=:=' _67, `[]`
  br _225, ^225, ^157

225:
  %% compile_SUITE.erl:1607
  %% Aliased:
  %%    _73
  PreLoaded1 = call (`ordsets`:`from_list`/1), _73

  %% Aliased:
  %%    PreLoaded1
  _158 = succeeded:body PreLoaded1
  br _158, ^158, ^1

158:
  %% compile_SUITE.erl:1611
  %% Aliased:
  %%    PreLoaded1
  _74 = call (`ordsets`:`is_element`/2), `compile`, PreLoaded1

  %% Aliased:
  %%    _74
  _159 = succeeded:body _74
  br _159, ^159, ^1

159:
  switch _74, ^161, [
    { `false`, ^160 },
    { `true`, ^165 }
  ]

165:
  %% compile_SUITE.erl:1613
  _111 = call (`io`:`put_chars`/1), `"The 'compile' module should not be included in the list of modules to be pre-loaded."`

  %% Aliased:
  %%    _111
  _162 = succeeded:body _111
  br _162, ^162, ^1

162:
  %% compile_SUITE.erl:1615
  _112 = call (`ct`:`fail`/1), `compile`

  %% Aliased:
  %%    _112
  _163 = succeeded:body _112
  br _163, ^160, ^1

160:
  %% compile_SUITE.erl:1619
  %% Aliased:
  %%    PreLoaded1
  PreLoaded = call (`ordsets`:`add_element`/2), `compile`, PreLoaded1

  %% Aliased:
  %%    PreLoaded
  _167 = succeeded:body PreLoaded
  br _167, ^167, ^1

167:
  %% compile_SUITE.erl:1624
  %% Result type:
  %%    list(atom())
  CompilerMods = call (`compiler_modules`/0)

  %% Unique:
  %%    CompilerMods
  _168 = succeeded:body CompilerMods
  br _168, ^168, ^1

168:
  %% compile_SUITE.erl:1625
  %% Unique:
  %%    CompilerMods
  _16 = call (`ordsets`:`from_list`/1), CompilerMods

  %% Aliased:
  %%    _16
  _169 = succeeded:body _16
  br _169, ^169, ^1

169:
  %% compile_SUITE.erl:1625
  %% Aliased:
  %%    _16, 
  %%    PreLoaded
  Unload = call (`ordsets`:`union`/2), _16, PreLoaded

  %% Aliased:
  %%    Unload
  _170 = succeeded:body Unload
  br _170, ^170, ^1

170:
  %% compile_SUITE.erl:1629
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    Unload
  _118 = call (`'-do_pre_load_check/1-lc$^0/1-0-'`/1), Unload

  %% Unique:
  %%    _118
  _171 = succeeded:body _118
  br _171, ^171, ^1

171:
  %% compile_SUITE.erl:1631
  _79 = call (`dbg`:`ctp`/1), `{code,ensure_modules_loaded,1}`

  %% Aliased:
  %%    _79
  _172 = succeeded:body _79
  br _172, ^172, ^1

172:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _221 = is_tagged_tuple _79, `2`, `ok`
  br _221, ^218, ^174

218:
  %% compile_SUITE.erl:1632
  _82 = call (`dbg`:`tp`/2), `{code,ensure_loaded,1}`, `[]`

  %% Aliased:
  %%    _82
  _175 = succeeded:body _82
  br _175, ^175, ^1

175:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _214 = is_tagged_tuple _82, `2`, `ok`
  br _214, ^211, ^177

211:
  %% compile_SUITE.erl:1633
  %% Aliased:
  %%    Big
  _85 = call (`compile`:`file`/2), Big, `[binary]`

  %% Aliased:
  %%    _85
  _178 = succeeded:body _85
  br _178, ^178, ^1

178:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _207 = is_tagged_tuple _85, `3`, `ok`
  br _207, ^204, ^180

204:
  %% Argument types:
  %%    _85 => {'ok', any(), any()}
  %% Aliased:
  %%    _85
  _87 = get_tuple_element _85, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _203 = bif:'=:=' _87, `big`
  br _203, ^202, ^180

202:
  %% compile_SUITE.erl:1634
  WasLoaded0 = call (`get_trace_data`/0)

  %% Aliased:
  %%    WasLoaded0
  _181 = succeeded:body WasLoaded0
  br _181, ^181, ^1

181:
  %% compile_SUITE.erl:1635
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    WasLoaded0
  _35 = call (`'-do_pre_load_check/1-lc$^1/1-1-'`/1), WasLoaded0

  %% Aliased:
  %%    _35
  _182 = succeeded:body _35
  br _182, ^182, ^1

182:
  %% compile_SUITE.erl:1636
  %% Aliased:
  %%    _35
  WasLoaded = call (`ordsets`:`from_list`/1), _35

  %% Aliased:
  %%    WasLoaded
  _183 = succeeded:body WasLoaded
  br _183, ^183, ^1

183:
  %% compile_SUITE.erl:1639
  %% Aliased:
  %%    PreLoaded, 
  %%    WasLoaded
  _99 = call (`ordsets`:`subtract`/2), WasLoaded, PreLoaded

  %% Aliased:
  %%    _99
  _184 = succeeded:body _99
  br _184, ^184, ^1

184:
  %% Aliased:
  %%    _99
  _190 = is_nonempty_list _99
  br _190, ^190, ^187

190:
  %% Argument types:
  %%    _99 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _99
  _102 = put_list _99, `[]`

  %% compile_SUITE.erl:1643
  %% Unique:
  %%    _102
  _122 = call (`io`:`format`/2), `"The following modules were used but not pre-loaded:\n~p\n"`, _102

  %% Aliased:
  %%    _122
  _188 = succeeded:body _122
  br _188, ^188, ^1

188:
  %% Argument types:
  %%    _99 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _99
  _103 = put_tuple `not_preload`, _99

  %% compile_SUITE.erl:1646
  %% Unique:
  %%    _103
  _123 = call (`ct`:`fail`/1), _103

  %% Aliased:
  %%    _123
  _189 = succeeded:body _123
  br _189, ^185, ^1

187:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _191 = bif:'=:=' _99, `[]`
  br _191, ^185, ^186

185:
  %% compile_SUITE.erl:1650
  %% Aliased:
  %%    PreLoaded, 
  %%    WasLoaded
  _104 = call (`ordsets`:`subtract`/2), PreLoaded, WasLoaded

  %% Aliased:
  %%    _104
  _193 = succeeded:body _104
  br _193, ^193, ^1

193:
  %% Aliased:
  %%    _104
  _199 = is_nonempty_list _104
  br _199, ^199, ^196

199:
  %% Argument types:
  %%    _104 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _104
  _107 = put_list _104, `[]`

  %% compile_SUITE.erl:1654
  %% Unique:
  %%    _107
  _125 = call (`io`:`format`/2), `"The following modules were pre-loaded but not used:\n~p\n"`, _107

  %% Aliased:
  %%    _125
  _197 = succeeded:body _125
  br _197, ^197, ^1

197:
  %% Argument types:
  %%    _104 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _104
  _108 = put_tuple `not_used`, _104

  %% compile_SUITE.erl:1657
  %% Unique:
  %%    _108
  _126 = call (`ct`:`fail`/1), _108

  %% Aliased:
  %%    _126
  _198 = succeeded:body _126
  br _198, ^194, ^1

196:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _200 = bif:'=:=' _104, `[]`
  br _200, ^194, ^195

194:
  %% Result type:
  %%    'ok'
  ret `ok`

195:
  %% compile_SUITE.erl:1650
  %% Aliased:
  %%    _104
  _127 = match_fail `case_clause`, _104

  %% Unique:
  %%    _127
  _201 = succeeded:body _127
  br ^1

186:
  %% compile_SUITE.erl:1639
  %% Aliased:
  %%    _99
  _124 = match_fail `case_clause`, _99

  %% Unique:
  %%    _124
  _192 = succeeded:body _124
  br ^1

180:
  %% compile_SUITE.erl:1633
  %% Aliased:
  %%    _85
  _128 = match_fail `badmatch`, _85

  %% Unique:
  %%    _128
  _210 = succeeded:body _128
  br ^1

177:
  %% compile_SUITE.erl:1632
  %% Aliased:
  %%    _82
  _129 = match_fail `badmatch`, _82

  %% Unique:
  %%    _129
  _217 = succeeded:body _129
  br ^1

174:
  %% compile_SUITE.erl:1631
  %% Aliased:
  %%    _79
  _130 = match_fail `badmatch`, _79

  %% Unique:
  %%    _130
  _224 = succeeded:body _130
  br ^1

161:
  %% compile_SUITE.erl:1611
  %% Aliased:
  %%    _74
  _113 = match_fail `case_clause`, _74

  %% Unique:
  %%    _113
  _166 = succeeded:body _113
  br ^1

157:
  %% compile_SUITE.erl:1606
  %% Aliased:
  %%    _66
  _131 = match_fail `badmatch`, _66

  %% Unique:
  %%    _131
  _237 = succeeded:body _131
  br ^1

154:
  %% compile_SUITE.erl:1605
  %% Aliased:
  %%    _62
  _132 = match_fail `badmatch`, _62

  %% Unique:
  %%    _132
  _246 = succeeded:body _132
  br ^1

151:
  %% compile_SUITE.erl:1599
  %% Aliased:
  %%    _59
  _133 = match_fail `badmatch`, _59

  %% Unique:
  %%    _133
  _253 = succeeded:body _133
  br ^1

148:
  %% compile_SUITE.erl:1598
  %% Aliased:
  %%    _56
  _134 = match_fail `badmatch`, _56

  %% Unique:
  %%    _134
  _260 = succeeded:body _134
  br ^1

143:
  %% compile_SUITE.erl:1595
  %% Aliased:
  %%    _53
  _135 = match_fail `badmatch`, _53

  %% Unique:
  %%    _135
  _267 = succeeded:body _135
  br ^1

1:
  _136 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _136
}

%% compile_SUITE.erl:1662
%% Counter = 6
%% bs_ensure_opt: true
function `compile_SUITE`:`get_trace_data`() {
0:
  %% compile_SUITE.erl:1666
  _2 = call (`do_get_trace_data`/0)

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:1668
%% Counter = 28
%% bs_ensure_opt: true
function `compile_SUITE`:`do_get_trace_data`() {
0:
  br ^3

3:
  %% compile_SUITE.erl:1669
  _0 = peek_message `none`

  %% Aliased:
  %%    _0
  _27 = succeeded:guard _0
  br _27, ^25, ^26

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _17 = is_tagged_tuple _0, `2`, `trace_data`
  br _17, ^14, ^13

14:
  %% Argument types:
  %%    _0 => {'trace_data', any()}
  %% Aliased:
  %%    _0
  _4 = get_tuple_element _0, `1`
  _6 = remove_message
  %% Aliased:
  %%    _4
  ret _4

13:
  _7 = recv_next
  br ^3

26:
  _20 = wait_timeout `infinity`

  %% Unique:
  %%    _20
  _21 = succeeded:body _20
  br _21, ^24, ^1

24:
  br ^3

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% compile_SUITE.erl:1673
%% Counter = 30
%% bs_ensure_opt: true
function `compile_SUITE`:`pre_load_trace`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _25 = is_tagged_tuple _0, `4`, `trace`
  br _25, ^22, ^16

22:
  %% Argument types:
  %%    _0 => {'trace', any(), any(), any()}
  %% Aliased:
  %%    _0
  _7 = get_tuple_element _0, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _21 = bif:'=:=' _7, `call`
  br _21, ^20, ^16

20:
  %% Argument types:
  %%    _0 => {'trace', any(), 'call', any()}
  %% Aliased:
  %%    _0
  _6 = get_tuple_element _0, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _19 = bif:'=:=' _6, `{compile_SUITE,get_trace_data,[]}`
  br _19, ^19, ^17

19:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _10 = put_tuple `trace_data`, _1

  %% Argument types:
  %%    _0 => {'trace', any(), 'call', {'compile_SUITE', 'get_trace_data', nil()}}
  %% Aliased:
  %%    _0
  _8 = get_tuple_element _0, `1`

  %% compile_SUITE.erl:1674
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _10
  _11 = call (`erlang`:`'!'`/2), _8, _10

  %% Aliased:
  %%    _11
  _18 = succeeded:body _11
  br _18, ^18, ^1

18:
  %% Result type:
  %%    nil()
  ret `[]`

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _6
  _12 = put_list _6, _1
  %% Result type:
  %%    nonempty_improper_list(any(), any())
  %% Unique:
  %%    _12
  ret _12

16:
  %% compile_SUITE.erl:1673
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-pre_load_trace/2-',2}}
  _13 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _13
  _28 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% compile_SUITE.erl:1679
%% Counter = 27
%% bs_ensure_opt: true
function `compile_SUITE`:`compiler_modules`() {
0:
  %% compile_SUITE.erl:1680
  _0 = call (`code`:`lib_dir`/1), `compiler`

  %% Aliased:
  %%    _0
  _22 = succeeded:body _0
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _12 = put_list _0, `["ebin","*.beam"]`

  %% compile_SUITE.erl:1680
  %% Unique:
  %%    _12
  Wc = call (`filename`:`join`/1), _12

  %% Aliased:
  %%    Wc
  _23 = succeeded:body Wc
  br _23, ^23, ^1

23:
  %% compile_SUITE.erl:1681
  %% Aliased:
  %%    Wc
  Ms = call (`filelib`:`wildcard`/1), Wc

  %% Aliased:
  %%    Ms
  _24 = succeeded:body Ms
  br _24, ^24, ^1

24:
  %% compile_SUITE.erl:1683
  %% Result type:
  %%    list(atom())
  %% Aliased:
  %%    Ms
  _19 = call (`'-compiler_modules/0-lc$^0/1-0-'`/1), Ms

  %% Unique:
  %%    _19
  _25 = succeeded:body _19
  br _25, ^25, ^1

25:
  %% Result type:
  %%    list(atom())
  %% Unique:
  %%    _19
  ret _19

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% compile_SUITE.erl:1688
%% Counter = 21
%% bs_ensure_opt: true
function `compile_SUITE`:`env_compiler_options`(_0) {
0:
  F = make_fun (`'-env_compiler_options/1-fun-0-'`/1)

  %% compile_SUITE.erl:1701
  %% Aliased:
  %%    F
  _16 = call (`lists`:`foreach`/2), F, `[{"bin_opt_info",[bin_opt_info]},
  {"recv_opt_info",[recv_opt_info]},
  {"'S'",['S']},
  {"{source, \"test.erl\"}",[{source,"test.erl"}]},
  {"[{d,macro_one,1},{d,macro_two}]",[{d,macro_one,1},{d,macro_two}]},
  {"[warn_export_all, warn_export_vars]",[warn_export_all,warn_export_vars]}]`

  %% Aliased:
  %%    _16
  _19 = succeeded:body _16
  br _19, ^19, ^1

19:
  %% Aliased:
  %%    _16
  ret _16

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% compile_SUITE.erl:1705
%% Counter = 34
%% bs_ensure_opt: true
function `compile_SUITE`:`bc_options`(_0) {
0:
  %% compile_SUITE.erl:1706
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _26 = succeeded:body DataDir
  br _26, ^26, ^1

26:
  %% compile_SUITE.erl:1708
  %% Aliased:
  %%    _0
  _11 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _11
  _27 = succeeded:body _11
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11, 
  %%    DataDir
  _30 = bif:'=:=' _11, DataDir
  br _30, ^30, ^29

30:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    DataDir
  Test = make_fun (`'-bc_options/1-fun-0-'`/2), DataDir

  %% compile_SUITE.erl:1759
  %% Aliased:
  %%    Test
  _22 = call (`test_lib`:`p_run`/2), Test, `[{171,small_float,[no_line_info,no_ssa_opt_float,no_type_opt]},
  {171,small_float,[no_line_info]},
  {171,small_float,[]},
  {171,small_float,[r24]},
  {171,small_float,[r25]},
  {172,small,
   [no_ssa_opt_record,no_ssa_opt_float,no_line_info,no_type_opt,no_bs_match]},
  {172,small,[r24]},
  {172,funs,[no_ssa_opt_record,no_ssa_opt_float,no_line_info,no_type_opt]},
  {172,funs,[no_ssa_opt_record,no_line_info,no_stack_trimming,no_type_opt]},
  {172,funs,[r24]},
  {172,small_maps,[r24]},
  {172,small_maps,[no_type_opt]},
  {172,big,[no_ssa_opt_record,no_ssa_opt_float,no_line_info,no_type_opt]},
  {172,big,[r24]},
  {178,small,[r25]},
  {178,big,[r25]},
  {178,funs,[]},
  {178,big,[]}]`

  %% Aliased:
  %%    _22
  _31 = succeeded:body _22
  br _31, ^31, ^1

31:
  %% Result type:
  %%    'ok'
  ret `ok`

29:
  %% compile_SUITE.erl:1708
  %% Aliased:
  %%    _11
  _23 = match_fail `badmatch`, _11

  %% Unique:
  %%    _23
  _32 = succeeded:body _23
  br ^1

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% compile_SUITE.erl:1762
%% Counter = 37
%% bs_ensure_opt: true
function `compile_SUITE`:`highest_opcode`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:1763
  %% Aliased:
  %%    _1
  _3 = call (`erlang`:`atom_to_list`/1), _1

  %% Aliased:
  %%    _3
  _21 = succeeded:body _3
  br _21, ^21, ^1

21:
  %% compile_SUITE.erl:1763
  %% Aliased:
  %%    _3
  _4 = call (`erlang`:`'++'`/2), _3, `".erl"`

  %% compile_SUITE.erl:1763
  %% Aliased:
  %%    _0, 
  %%    _4
  Src = call (`filename`:`join`/2), _0, _4

  %% Aliased:
  %%    Src
  _23 = succeeded:body Src
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _11 = put_list `report_errors`, _2

  %% Argument types:
  %%    _11 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _11
  _12 = put_list `binary`, _11

  %% compile_SUITE.erl:1764
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _12
  _13 = call (`compile`:`file`/2), Src, _12

  %% Aliased:
  %%    _13
  _24 = succeeded:body _13
  br _24, ^24, ^1

24:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _32 = is_tagged_tuple _13, `3`, `ok`
  br _32, ^29, ^26

29:
  %% Argument types:
  %%    _13 => {'ok', any(), any()}
  %% Aliased:
  %%    _13
  _15 = get_tuple_element _13, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _15
  _27 = bif:'=:=' _15, _1
  br _27, ^27, ^26

27:
  %% Argument types:
  %%    _13 => {'ok', any(), any()}
  %% Aliased:
  %%    _13
  _14 = get_tuple_element _13, `2`

  %% compile_SUITE.erl:1765
  %% Aliased:
  %%    _14
  _17 = call (`test_lib`:`highest_opcode`/1), _14

  %% Aliased:
  %%    _17
  _28 = succeeded:body _17
  br _28, ^28, ^1

28:
  %% Aliased:
  %%    _17
  ret _17

26:
  %% compile_SUITE.erl:1764
  %% Aliased:
  %%    _13
  _18 = match_fail `badmatch`, _13

  %% Unique:
  %%    _18
  _35 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% compile_SUITE.erl:1767
%% Counter = 100
%% bs_ensure_opt: true
function `compile_SUITE`:`deterministic_include`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _42 = bif:is_list _0
  br _42, ^42, ^41

42:
  %% compile_SUITE.erl:1768
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _43 = succeeded:body DataDir
  br _43, ^43, ^1

43:
  %% compile_SUITE.erl:1769
  %% Aliased:
  %%    DataDir
  Simple = call (`filename`:`join`/2), DataDir, `"simple"`

  %% Aliased:
  %%    Simple
  _44 = succeeded:body Simple
  br _44, ^44, ^1

44:
  %% compile_SUITE.erl:1773
  %% Aliased:
  %%    Simple
  _14 = call (`compile`:`file`/2), Simple, `[binary,{i,"gurka"}]`

  %% Aliased:
  %%    _14
  _45 = succeeded:body _14
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _91 = is_tagged_tuple _14, `3`, `ok`
  br _91, ^88, ^47

88:
  %% compile_SUITE.erl:1774
  %% Aliased:
  %%    Simple
  _18 = call (`compile`:`file`/2), Simple, `[binary,{i,"gaffel"}]`

  %% Aliased:
  %%    _18
  _48 = succeeded:body _18
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _84 = is_tagged_tuple _18, `3`, `ok`
  br _84, ^81, ^50

81:
  %% Argument types:
  %%    _18 => {'ok', any(), any()}
  %% Aliased:
  %%    _18
  _19 = get_tuple_element _18, `2`

  %% Argument types:
  %%    _14 => {'ok', any(), any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `2`

  %% compile_SUITE.erl:1775
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15, 
  %%    _19
  _22 = bif:'=:=' _15, _19
  br _22, ^52, ^78

52:
  %% compile_SUITE.erl:1775
  _35 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _35
  _80 = succeeded:body _35
  br ^1

78:
  %% compile_SUITE.erl:1778
  %% Aliased:
  %%    Simple
  _23 = call (`compile`:`file`/2), Simple, `[binary,deterministic,{i,"gurka"}]`

  %% Aliased:
  %%    _23
  _53 = succeeded:body _23
  br _53, ^53, ^1

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _74 = is_tagged_tuple _23, `3`, `ok`
  br _74, ^71, ^55

71:
  %% compile_SUITE.erl:1779
  %% Aliased:
  %%    Simple
  _27 = call (`compile`:`file`/2), Simple, `[binary,deterministic,{i,"gaffel"}]`

  %% Aliased:
  %%    _27
  _56 = succeeded:body _27
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _67 = is_tagged_tuple _27, `3`, `ok`
  br _67, ^64, ^58

64:
  %% Argument types:
  %%    _27 => {'ok', any(), any()}
  %% Aliased:
  %%    _27
  _28 = get_tuple_element _27, `2`

  %% Argument types:
  %%    _23 => {'ok', any(), any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `2`

  %% compile_SUITE.erl:1780
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24, 
  %%    _28
  _31 = bif:'=:=' _24, _28
  br _31, ^61, ^60

61:
  %% Result type:
  %%    'ok'
  ret `ok`

60:
  %% compile_SUITE.erl:1780
  _32 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _32
  _63 = succeeded:body _32
  br ^1

58:
  %% compile_SUITE.erl:1779
  %% Aliased:
  %%    _27
  _33 = match_fail `badmatch`, _27

  %% Unique:
  %%    _33
  _70 = succeeded:body _33
  br ^1

55:
  %% compile_SUITE.erl:1778
  %% Aliased:
  %%    _23
  _34 = match_fail `badmatch`, _23

  %% Unique:
  %%    _34
  _77 = succeeded:body _34
  br ^1

50:
  %% compile_SUITE.erl:1774
  %% Aliased:
  %%    _18
  _36 = match_fail `badmatch`, _18

  %% Unique:
  %%    _36
  _87 = succeeded:body _36
  br ^1

47:
  %% compile_SUITE.erl:1773
  %% Aliased:
  %%    _14
  _37 = match_fail `badmatch`, _14

  %% Unique:
  %%    _37
  _94 = succeeded:body _37
  br ^1

41:
  %% compile_SUITE.erl:1767
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-deterministic_include/1-',1}}
  _38 = match_fail `function_clause`, _0

  %% Unique:
  %%    _38
  _95 = succeeded:body _38
  br ^1

1:
  _39 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _39
}

%% compile_SUITE.erl:1784
%% Counter = 28
%% bs_ensure_opt: true
function `compile_SUITE`:`deterministic_paths`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _13 = bif:is_list _0
  br _13, ^13, ^12

13:
  %% compile_SUITE.erl:1785
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _14 = succeeded:body DataDir
  br _14, ^14, ^1

14:
  %% compile_SUITE.erl:1789
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    DataDir
  _5 = call (`deterministic_paths_1`/3), DataDir, `"simple"`, `[]`

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br _15, ^15, ^1

15:
  br _5, ^24, ^17

24:
  %% compile_SUITE.erl:1792
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    DataDir
  _6 = call (`deterministic_paths_1`/3), DataDir, `"simple"`, `[deterministic]`

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^18, ^1

18:
  br _6, ^20, ^21

20:
  %% compile_SUITE.erl:1792
  _7 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br ^1

21:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% compile_SUITE.erl:1789
  _8 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _8
  _26 = succeeded:body _8
  br ^1

12:
  %% compile_SUITE.erl:1784
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-deterministic_paths/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _27 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% compile_SUITE.erl:1796
%% Counter = 98
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(101..115)
%%    _2 =>
%%     list('deterministic')
function `compile_SUITE`:`deterministic_paths_1`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:1797
  %% Aliased:
  %%    _0
  Simple = call (`filename`:`join`/2), _0, `"simple"`

  %% Aliased:
  %%    Simple
  _46 = succeeded:body Simple
  br _46, ^46, ^1

46:
  %% compile_SUITE.erl:1798
  _18 = call (`file`:`get_cwd`/0)

  %% Aliased:
  %%    _18
  _47 = succeeded:body _18
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _90 = is_tagged_tuple _18, `2`, `ok`
  br _90, ^87, ^49

87:
  %% Argument types:
  %%    _18 => {'ok', any()}
  %% Aliased:
  %%    _18
  _19 = get_tuple_element _18, `1`
  _54 = new_try_tag `'try'`
  br _54, ^53, ^51

53:
  %% Argument types:
  %%    _2 => list('deterministic')
  %% Aliased:
  %%    _2
  _21 = put_list `binary`, _2

  %% compile_SUITE.erl:1800
  %% Aliased:
  %%    Simple
  %% Unique:
  %%    _21
  _22 = call (`compile`:`file`/2), Simple, _21

  %% Aliased:
  %%    _22
  _55 = succeeded:body _22
  br _55, ^55, ^51

55:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _77 = is_tagged_tuple _22, `3`, `ok`
  br _77, ^74, ^57

74:
  %% compile_SUITE.erl:1801
  %% Aliased:
  %%    _0
  _26 = call (`file`:`set_cwd`/1), _0

  %% Aliased:
  %%    _26
  _58 = succeeded:body _26
  br _58, ^58, ^51

58:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _72 = bif:'=:=' _26, `ok`
  br _72, ^71, ^60

71:
  %% Argument types:
  %%    _2 => list('deterministic')
  %% Aliased:
  %%    _2
  _27 = put_list `binary`, _2

  %% compile_SUITE.erl:1802
  %% Unique:
  %%    _1, 
  %%    _27
  _28 = call (`compile`:`file`/2), _1, _27

  %% Aliased:
  %%    _28
  _61 = succeeded:body _28
  br _61, ^61, ^51

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _67 = is_tagged_tuple _28, `3`, `ok`
  br _67, ^64, ^63

64:
  %% Unique:
  %%    _54
  _86 = kill_try_tag _54

  %% Argument types:
  %%    _28 => {'ok', any(), any()}
  %% Aliased:
  %%    _28
  _29 = get_tuple_element _28, `2`

  %% Argument types:
  %%    _22 => {'ok', any(), any()}
  %% Aliased:
  %%    _22
  _23 = get_tuple_element _22, `2`

  %% compile_SUITE.erl:1803
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23, 
  %%    _29
  _36 = bif:'=/=' _23, _29

  %% compile_SUITE.erl:1805
  %% Aliased:
  %%    _19
  _40 = call (`file`:`set_cwd`/1), _19

  %% Aliased:
  %%    _40
  _81 = succeeded:body _40
  br _81, ^81, ^1

81:
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _36
  ret _36

63:
  %% compile_SUITE.erl:1802
  %% Aliased:
  %%    _28
  _37 = match_fail `badmatch`, _28

  %% Unique:
  %%    _37
  _70 = succeeded:body _37
  br ^51

60:
  %% compile_SUITE.erl:1801
  %% Aliased:
  %%    _26
  _38 = match_fail `badmatch`, _26

  %% Unique:
  %%    _38
  _73 = succeeded:body _38
  br ^51

57:
  %% compile_SUITE.erl:1800
  %% Aliased:
  %%    _22
  _39 = match_fail `badmatch`, _22

  %% Unique:
  %%    _39
  _80 = succeeded:body _39
  br ^51

51:
  %% Unique:
  %%    _54
  _84 = landingpad `'try'`, _54

  %% Aliased:
  %%    _84
  _11 = extract _84, `1`

  %% Aliased:
  %%    _84
  _10 = extract _84, `2`

  %% Unique:
  %%    _54
  _85 = kill_try_tag _54
  br ^97

97:
  %% compile_SUITE.erl:1805
  %% Aliased:
  %%    _19
  _41 = call (`file`:`set_cwd`/1), _19

  %% Aliased:
  %%    _41
  _82 = succeeded:body _41
  br _82, ^82, ^1

82:
  %% Aliased:
  %%    _10, 
  %%    _11
  _42 = resume _10, _11

  %% Unique:
  %%    _42
  _83 = succeeded:body _42
  br ^1

49:
  %% compile_SUITE.erl:1798
  %% Aliased:
  %%    _18
  _43 = match_fail `badmatch`, _18

  %% Unique:
  %%    _43
  _93 = succeeded:body _43
  br ^1

1:
  _44 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _44
}

%% compile_SUITE.erl:1809
%% Counter = 30
%% bs_ensure_opt: true
function `compile_SUITE`:`deterministic_docs`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _14 = bif:is_list _0
  br _14, ^14, ^13

14:
  %% compile_SUITE.erl:1810
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _15 = succeeded:body DataDir
  br _15, ^15, ^1

15:
  %% compile_SUITE.erl:1811
  %% Aliased:
  %%    DataDir
  Filepath = call (`filename`:`join`/2), DataDir, `"ssh"`

  %% Aliased:
  %%    Filepath
  _16 = succeeded:body Filepath
  br _16, ^16, ^1

16:
  %% compile_SUITE.erl:1812
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    Filepath
  _6 = call (`deterministic_docs_1`/3), Filepath, `[binary]`, `100`

  %% Aliased:
  %%    _6
  _17 = succeeded:body _6
  br _17, ^17, ^1

17:
  br _6, ^19, ^26

19:
  %% compile_SUITE.erl:1812
  _9 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _9
  _28 = succeeded:body _9
  br ^1

26:
  %% compile_SUITE.erl:1813
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    Filepath
  _7 = call (`deterministic_docs_1`/3), Filepath, `[binary,deterministic]`, `100`

  %% Aliased:
  %%    _7
  _20 = succeeded:body _7
  br _20, ^20, ^1

20:
  br _7, ^23, ^22

23:
  %% Result type:
  %%    'ok'
  ret `ok`

22:
  %% compile_SUITE.erl:1813
  _8 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _8
  _25 = succeeded:body _8
  br ^1

13:
  %% compile_SUITE.erl:1809
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-deterministic_docs/1-',1}}
  _10 = match_fail `function_clause`, _0

  %% Unique:
  %%    _10
  _29 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% compile_SUITE.erl:1816
%% Counter = 51
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list('binary' | 'deterministic')
%%    _2 =>
%%     100
function `compile_SUITE`:`deterministic_docs_1`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:1817
  %% Aliased:
  %%    _0, 
  %%    _1
  _17 = call (`compile`:`file`/2), _0, _1

  %% Aliased:
  %%    _17
  _38 = succeeded:body _17
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _46 = is_tagged_tuple _17, `3`, `ok`
  br _46, ^43, ^40

43:
  %% Argument types:
  %%    _17 => {'ok', any(), any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `2`

  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _18
  _10 = make_fun (`'-deterministic_docs_1/3-fun-1-'`/4), _0, _1, _18

  %% compile_SUITE.erl:1829
  _4 = call (`lists`:`seq`/2), `1`, `100`

  %% Aliased:
  %%    _4
  _41 = succeeded:body _4
  br _41, ^41, ^1

41:
  %% compile_SUITE.erl:1818
  %% Aliased:
  %%    _4, 
  %%    _10
  _34 = call (`lists`:`all`/2), _10, _4

  %% Aliased:
  %%    _34
  _42 = succeeded:body _34
  br _42, ^42, ^1

42:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _34
  ret _34

40:
  %% compile_SUITE.erl:1817
  %% Aliased:
  %%    _17
  _35 = match_fail `badmatch`, _17

  %% Unique:
  %%    _35
  _49 = succeeded:body _35
  br ^1

1:
  _36 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _36
}

%% compile_SUITE.erl:1832
%% Counter = 15
%% bs_ensure_opt: true
function `compile_SUITE`:`compile_attribute`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% compile_SUITE.erl:1833
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _10 = succeeded:body DataDir
  br _10, ^10, ^1

10:
  %% compile_SUITE.erl:1837
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    DataDir
  _3 = call (`debug_info_attribute`/3), DataDir, `"debug_info"`, `[debug_info]`

  %% Unique:
  %%    _3
  _11 = succeeded:body _3
  br _11, ^11, ^1

11:
  %% compile_SUITE.erl:1838
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    DataDir
  _4 = call (`debug_info_attribute`/3), DataDir, `"debug_info"`, `[]`

  %% Unique:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^14, ^1

14:
  ret _4

8:
  %% compile_SUITE.erl:1832
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-compile_attribute/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _13 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% compile_SUITE.erl:1842
%% Counter = 139
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(95..117)
%%    _2 =>
%%     list('debug_info')
function `compile_SUITE`:`debug_info_attribute`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:1843
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  File = call (`filename`:`join`/2), _0, _1

  %% Aliased:
  %%    File
  _58 = succeeded:body File
  br _58, ^58, ^1

58:
  %% Argument types:
  %%    _2 => list('debug_info')
  %% Unique:
  %%    _2
  _16 = put_list `binary`, _2

  %% compile_SUITE.erl:1844
  %% Aliased:
  %%    File
  %% Unique:
  %%    _16
  _17 = call (`compile`:`file`/2), File, _16

  %% Aliased:
  %%    _17
  _59 = succeeded:body _17
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _134 = is_tagged_tuple _17, `3`, `ok`
  br _134, ^131, ^61

131:
  %% Argument types:
  %%    _17 => {'ok', any(), any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `2`

  %% compile_SUITE.erl:1845
  %% Aliased:
  %%    _18
  _21 = call (`beam_lib`:`chunks`/2), _18, `[debug_info]`

  %% Aliased:
  %%    _21
  _62 = succeeded:body _21
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _127 = is_tagged_tuple _21, `2`, `ok`
  br _127, ^124, ^64

124:
  %% Argument types:
  %%    _21 => {'ok', any()}
  %% Aliased:
  %%    _21
  _22 = get_tuple_element _21, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _121 = bif:is_tuple _22
  br _121, ^121, ^64

121:
  %% Argument types:
  %%    _22 => {...}
  %% Aliased:
  %%    _22
  _122 = bif:tuple_size _22

  %% Argument types:
  %%    _122 => 0..16777215
  %% Unique:
  %%    _122
  _123 = bif:'=:=' _122, `2`
  br _123, ^120, ^64

120:
  %% Argument types:
  %%    _22 => {any(), any()}
  %% Aliased:
  %%    _22
  _24 = get_tuple_element _22, `1`

  %% Aliased:
  %%    _24
  _118 = is_nonempty_list _24
  br _118, ^118, ^66

118:
  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _27 = get_hd _24

  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _26 = get_tl _24

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _115 = is_tagged_tuple _27, `2`, `debug_info`
  br _115, ^112, ^66

112:
  %% Argument types:
  %%    _27 => {'debug_info', any()}
  %% Aliased:
  %%    _27
  _28 = get_tuple_element _27, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _109 = is_tagged_tuple _28, `3`, `debug_info_v1`
  br _109, ^106, ^66

106:
  %% Argument types:
  %%    _28 => {'debug_info_v1', any(), any()}
  %% Aliased:
  %%    _28
  _31 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _105 = bif:'=:=' _31, `erl_abstract_code`
  br _105, ^104, ^66

104:
  %% Argument types:
  %%    _28 => {'debug_info_v1', 'erl_abstract_code', any()}
  %% Aliased:
  %%    _28
  _30 = get_tuple_element _28, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _101 = bif:is_tuple _30
  br _101, ^101, ^66

101:
  %% Argument types:
  %%    _30 => {...}
  %% Aliased:
  %%    _30
  _102 = bif:tuple_size _30

  %% Argument types:
  %%    _102 => 0..16777215
  %% Unique:
  %%    _102
  _103 = bif:'=:=' _102, `2`
  br _103, ^100, ^66

100:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _99 = bif:'=:=' _26, `[]`
  br _99, ^99, ^66

99:
  %% Argument types:
  %%    _30 => {any(), any()}
  %% Aliased:
  %%    _30
  _34 = get_tuple_element _30, `0`

  %% compile_SUITE.erl:1851
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _34
  _35 = call (`forms_to_terms`/1), _34

  %% Aliased:
  %%    _35
  _67 = succeeded:body _35
  br _67, ^67, ^1

67:
  %% Aliased:
  %%    _35
  _97 = is_nonempty_list _35
  br _97, ^97, ^69

97:
  %% Argument types:
  %%    _35 => nonempty_list(any())
  %% Aliased:
  %%    _35
  _37 = get_hd _35

  %% Argument types:
  %%    _35 => nonempty_list(any())
  %% Aliased:
  %%    _35
  _36 = get_tl _35

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _94 = is_tagged_tuple _37, `4`, `attribute`
  br _94, ^91, ^69

91:
  %% Argument types:
  %%    _37 => {'attribute', any(), any(), any()}
  %% Aliased:
  %%    _37
  _40 = get_tuple_element _37, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _90 = bif:'=:=' _40, `{1,1}`
  br _90, ^90, ^69

90:
  %% Argument types:
  %%    _37 => {'attribute', {1, 1}, any(), any()}
  %% Aliased:
  %%    _37
  _39 = get_tuple_element _37, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _89 = bif:'=:=' _39, `file`
  br _89, ^88, ^69

88:
  %% Argument types:
  %%    _37 => {'attribute', {1, 1}, 'file', any()}
  %% Aliased:
  %%    _37
  _38 = get_tuple_element _37, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _85 = bif:is_tuple _38
  br _85, ^85, ^69

85:
  %% Argument types:
  %%    _38 => {...}
  %% Aliased:
  %%    _38
  _86 = bif:tuple_size _38

  %% Argument types:
  %%    _86 => 0..16777215
  %% Unique:
  %%    _86
  _87 = bif:'=:=' _86, `2`
  br _87, ^84, ^69

84:
  %% Argument types:
  %%    _38 => {any(), any()}
  %% Aliased:
  %%    _38
  _42 = get_tuple_element _38, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _83 = bif:'=:=' _42, `1`
  br _83, ^82, ^69

82:
  %% Aliased:
  %%    _36
  _81 = is_nonempty_list _36
  br _81, ^81, ^69

81:
  %% Argument types:
  %%    _36 => nonempty_list(any())
  %% Aliased:
  %%    _36
  _45 = get_hd _36

  %% Argument types:
  %%    _36 => nonempty_list(any())
  %% Aliased:
  %%    _36
  _44 = get_tl _36

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _80 = bif:'=:=' _45, `{attribute,{1,2},module,debug_info}`
  br _80, ^80, ^69

80:
  %% Aliased:
  %%    _44
  _79 = is_nonempty_list _44
  br _79, ^79, ^69

79:
  %% Argument types:
  %%    _44 => nonempty_list(any())
  %% Aliased:
  %%    _44
  _47 = get_hd _44

  %% Argument types:
  %%    _44 => nonempty_list(any())
  %% Aliased:
  %%    _44
  _46 = get_tl _44

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _78 = bif:'=:=' _47, `{attribute,{2,2},compile,[debug_info]}`
  br _78, ^78, ^69

78:
  %% Aliased:
  %%    _46
  _77 = is_nonempty_list _46
  br _77, ^77, ^69

77:
  %% Argument types:
  %%    _46 => nonempty_list(any())
  %% Aliased:
  %%    _46
  _49 = get_hd _46

  %% Argument types:
  %%    _46 => nonempty_list(any())
  %% Aliased:
  %%    _46
  _48 = get_tl _46

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _74 = is_tagged_tuple _49, `2`, `eof`
  br _74, ^71, ^69

71:
  %% Argument types:
  %%    _48 => list(any())
  %% Aliased:
  %%    _48
  _70 = bif:'=:=' _48, `[]`
  br _70, ^70, ^69

70:
  %% Result type:
  %%    'ok'
  ret `ok`

69:
  %% compile_SUITE.erl:1848
  %% Aliased:
  %%    _35
  _52 = match_fail `badmatch`, _35

  %% Unique:
  %%    _52
  _98 = succeeded:body _52
  br ^1

66:
  %% compile_SUITE.erl:1847
  %% Aliased:
  %%    _24
  _53 = match_fail `badmatch`, _24

  %% Unique:
  %%    _53
  _119 = succeeded:body _53
  br ^1

64:
  %% compile_SUITE.erl:1845
  %% Aliased:
  %%    _21
  _54 = match_fail `badmatch`, _21

  %% Unique:
  %%    _54
  _130 = succeeded:body _54
  br ^1

61:
  %% compile_SUITE.erl:1844
  %% Aliased:
  %%    _17
  _55 = match_fail `badmatch`, _17

  %% Unique:
  %%    _55
  _137 = succeeded:body _55
  br ^1

1:
  _56 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _56
}

%% compile_SUITE.erl:1855
%% Counter = 17
%% bs_ensure_opt: true
function `compile_SUITE`:`forms_to_terms`(_0) {
0:
  %% compile_SUITE.erl:1856
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0
  _13 = call (`'-forms_to_terms/1-lc$^0/1-0-'`/1), _0

  %% Aliased:
  %%    _13
  _16 = succeeded:body _13
  br _16, ^16, ^1

16:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% compile_SUITE.erl:1859
%% Counter = 46
%% bs_ensure_opt: true
function `compile_SUITE`:`other_options`(_0) {
0:
  %% compile_SUITE.erl:1860
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _20 = succeeded:body DataDir
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:1864
  %% Aliased:
  %%    DataDir
  Big = call (`filename`:`join`/2), DataDir, `"big"`

  %% Aliased:
  %%    Big
  _21 = succeeded:body Big
  br _21, ^21, ^1

21:
  %% compile_SUITE.erl:1866
  %% Aliased:
  %%    Big
  _8 = call (`compile`:`file`/2), Big, `[binary,no_spawn_compiler_process,brief,absolute_source,report]`

  %% Aliased:
  %%    _8
  _22 = succeeded:body _8
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _38 = is_tagged_tuple _8, `3`, `ok`
  br _38, ^35, ^24

35:
  %% Argument types:
  %%    _8 => {'ok', any(), any()}
  %% Aliased:
  %%    _8
  _10 = get_tuple_element _8, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _34 = bif:'=:=' _10, `big`
  br _34, ^33, ^24

33:
  %% Argument types:
  %%    _8 => {'ok', 'big', any()}
  %% Aliased:
  %%    _8
  _9 = get_tuple_element _8, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _12 = bs_start_match `new`, _9

  %% Aliased:
  %%    _12
  _32 = succeeded:guard _12
  br _32, ^32, ^24

32:
  _44 = bs_ensure _12, `0`, `8`
  _45 = succeeded:guard _44
  br _45, ^43, ^24

43:
  %% compile_SUITE.erl:1865
  %% Aliased:
  %%    _12
  %% Anno: #{ensured => true}
  _13 = bs_match `skip`, _44, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _13
  _25 = succeeded:guard _13
  br _25, ^42, ^24

42:
  %% compile_SUITE.erl:1874
  %% Aliased:
  %%    DataDir
  Small = call (`filename`:`join`/2), DataDir, `"small"`

  %% Aliased:
  %%    Small
  _26 = succeeded:body Small
  br _26, ^26, ^1

26:
  %% compile_SUITE.erl:1875
  %% Aliased:
  %%    Small
  _15 = call (`compile`:`file`/2), Small, `[report,no_inline,compressed,beam]`

  %% Aliased:
  %%    _15
  _27 = succeeded:body _15
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _30 = bif:'=:=' _15, `{ok,small}`
  br _30, ^30, ^29

30:
  %% Result type:
  %%    'ok'
  ret `ok`

29:
  %% compile_SUITE.erl:1875
  %% Aliased:
  %%    _15
  _16 = match_fail `badmatch`, _15

  %% Unique:
  %%    _16
  _31 = succeeded:body _16
  br ^1

24:
  %% compile_SUITE.erl:1865
  %% Aliased:
  %%    _8
  _17 = match_fail `badmatch`, _8

  %% Unique:
  %%    _17
  _41 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% compile_SUITE.erl:1880
%% Counter = 42
%% bs_ensure_opt: true
function `compile_SUITE`:`transforms`(_0) {
0:
  %% compile_SUITE.erl:1881
  _7 = call (`file`:`get_cwd`/0)

  %% Aliased:
  %%    _7
  _18 = succeeded:body _7
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _36 = is_tagged_tuple _7, `2`, `ok`
  br _36, ^33, ^20

33:
  %% Argument types:
  %%    _7 => {'ok', any()}
  %% Aliased:
  %%    _7
  _8 = get_tuple_element _7, `1`
  _25 = new_try_tag `'try'`
  br _25, ^24, ^22

24:
  %% compile_SUITE.erl:1883
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _11 = call (`do_transforms`/1), _0

  %% Unique:
  %%    _11
  _26 = succeeded:body _11
  br _26, ^26, ^22

26:
  %% Unique:
  %%    _25
  _32 = kill_try_tag _25

  %% compile_SUITE.erl:1885
  %% Aliased:
  %%    _8
  _12 = call (`file`:`set_cwd`/1), _8

  %% Aliased:
  %%    _12
  _27 = succeeded:body _12
  br _27, ^27, ^1

27:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _11
  ret _11

22:
  %% Unique:
  %%    _25
  _30 = landingpad `'try'`, _25

  %% Aliased:
  %%    _30
  _5 = extract _30, `1`

  %% Aliased:
  %%    _30
  _4 = extract _30, `2`

  %% Unique:
  %%    _25
  _31 = kill_try_tag _25
  br ^41

41:
  %% compile_SUITE.erl:1885
  %% Aliased:
  %%    _8
  _13 = call (`file`:`set_cwd`/1), _8

  %% Aliased:
  %%    _13
  _28 = succeeded:body _13
  br _28, ^28, ^1

28:
  %% Aliased:
  %%    _4, 
  %%    _5
  _14 = resume _4, _5

  %% Unique:
  %%    _14
  _29 = succeeded:body _14
  br ^1

20:
  %% compile_SUITE.erl:1881
  %% Aliased:
  %%    _7
  _15 = match_fail `badmatch`, _7

  %% Unique:
  %%    _15
  _39 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compile_SUITE.erl:1888
%% Counter = 527
%% bs_ensure_opt: true
function `compile_SUITE`:`do_transforms`(_0) {
0:
  %% compile_SUITE.erl:1889
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _224 = succeeded:body DataDir
  br _224, ^224, ^1

224:
  %% compile_SUITE.erl:1890
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _225 = succeeded:body PrivDir
  br _225, ^225, ^1

225:
  %% compile_SUITE.erl:1891
  %% Aliased:
  %%    PrivDir
  TargetDir = call (`filename`:`join`/2), PrivDir, `do_transforms`

  %% Aliased:
  %%    TargetDir
  _226 = succeeded:body TargetDir
  br _226, ^226, ^1

226:
  %% compile_SUITE.erl:1892
  %% Aliased:
  %%    TargetDir
  _73 = call (`file`:`make_dir`/1), TargetDir

  %% Aliased:
  %%    _73
  _227 = succeeded:body _73
  br _227, ^227, ^1

227:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _513 = bif:'=:=' _73, `ok`
  br _513, ^512, ^229

512:
  %% compile_SUITE.erl:1893
  %% Aliased:
  %%    TargetDir
  _74 = call (`file`:`set_cwd`/1), TargetDir

  %% Aliased:
  %%    _74
  _230 = succeeded:body _74
  br _230, ^230, ^1

230:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _510 = bif:'=:=' _74, `ok`
  br _510, ^509, ^232

509:
  %% compile_SUITE.erl:1896
  %% Aliased:
  %%    DataDir
  LinePt = call (`filename`:`join`/2), DataDir, `"line_pt"`

  %% Aliased:
  %%    LinePt
  _233 = succeeded:body LinePt
  br _233, ^233, ^1

233:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _75 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _75 => {'outdir', any()}
  %% Unique:
  %%    _75
  _76 = put_list _75, `[]`

  %% Argument types:
  %%    _76 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _76
  _77 = put_list `report`, _76

  %% compile_SUITE.erl:1897
  %% Aliased:
  %%    LinePt
  %% Unique:
  %%    _77
  _78 = call (`compile`:`file`/2), LinePt, _77

  %% Aliased:
  %%    _78
  _234 = succeeded:body _78
  br _234, ^234, ^1

234:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _507 = bif:'=:=' _78, `{ok,line_pt}`
  br _507, ^507, ^236

507:
  %% compile_SUITE.erl:1898
  %% Aliased:
  %%    DataDir
  ColumnPt = call (`filename`:`join`/2), DataDir, `"column_pt"`

  %% Aliased:
  %%    ColumnPt
  _237 = succeeded:body ColumnPt
  br _237, ^237, ^1

237:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _79 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _79 => {'outdir', any()}
  %% Unique:
  %%    _79
  _80 = put_list _79, `[]`

  %% Argument types:
  %%    _80 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _80
  _81 = put_list `report`, _80

  %% compile_SUITE.erl:1899
  %% Aliased:
  %%    ColumnPt
  %% Unique:
  %%    _81
  _82 = call (`compile`:`file`/2), ColumnPt, _81

  %% Aliased:
  %%    _82
  _238 = succeeded:body _82
  br _238, ^238, ^1

238:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _505 = bif:'=:=' _82, `{ok,column_pt}`
  br _505, ^505, ^240

505:
  %% compile_SUITE.erl:1900
  %% Aliased:
  %%    DataDir
  GenericPt = call (`filename`:`join`/2), DataDir, `"generic_pt"`

  %% Aliased:
  %%    GenericPt
  _241 = succeeded:body GenericPt
  br _241, ^241, ^1

241:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _83 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _83 => {'outdir', any()}
  %% Unique:
  %%    _83
  _84 = put_list _83, `[]`

  %% Argument types:
  %%    _84 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _84
  _85 = put_list `report`, _84

  %% compile_SUITE.erl:1901
  %% Aliased:
  %%    GenericPt
  %% Unique:
  %%    _85
  _86 = call (`compile`:`file`/2), GenericPt, _85

  %% Aliased:
  %%    _86
  _242 = succeeded:body _86
  br _242, ^242, ^1

242:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _503 = bif:'=:=' _86, `{ok,generic_pt}`
  br _503, ^503, ^244

503:
  %% compile_SUITE.erl:1905
  %% Aliased:
  %%    DataDir
  Big = call (`filename`:`join`/2), DataDir, `"big"`

  %% Aliased:
  %%    Big
  _245 = succeeded:body Big
  br _245, ^245, ^1

245:
  %% compile_SUITE.erl:1906
  %% Aliased:
  %%    Big
  _87 = call (`compile_partition_warnings`/2), Big, `[{parse_transform,line_pt}]`

  %% Aliased:
  %%    _87
  _246 = succeeded:body _87
  br _246, ^246, ^1

246:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _499 = bif:is_tuple _87
  br _499, ^499, ^248

499:
  %% Argument types:
  %%    _87 => {...}
  %% Aliased:
  %%    _87
  _500 = bif:tuple_size _87

  %% Argument types:
  %%    _500 => 0..16777215
  %% Unique:
  %%    _500
  _501 = bif:'=:=' _500, `2`
  br _501, ^498, ^248

498:
  %% Argument types:
  %%    _87 => {any(), any()}
  %% Aliased:
  %%    _87
  _89 = get_tuple_element _87, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _497 = bif:'=:=' _89, `[]`
  br _497, ^497, ^248

497:
  %% Argument types:
  %%    _87 => {nil(), any()}
  %% Aliased:
  %%    _87
  _88 = get_tuple_element _87, `1`

  %% Aliased:
  %%    _88
  _496 = is_nonempty_list _88
  br _496, ^520, ^248

520:
  %% compile_SUITE.erl:1910
  %% Aliased:
  %%    Big
  _92 = call (`compile_partition_warnings`/2), Big, `[{parse_transform,column_pt}]`

  %% Aliased:
  %%    _92
  _249 = succeeded:body _92
  br _249, ^249, ^1

249:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _492 = bif:is_tuple _92
  br _492, ^492, ^251

492:
  %% Argument types:
  %%    _92 => {...}
  %% Aliased:
  %%    _92
  _493 = bif:tuple_size _92

  %% Argument types:
  %%    _493 => 0..16777215
  %% Unique:
  %%    _493
  _494 = bif:'=:=' _493, `2`
  br _494, ^491, ^251

491:
  %% Argument types:
  %%    _92 => {any(), any()}
  %% Aliased:
  %%    _92
  _94 = get_tuple_element _92, `0`

  %% Aliased:
  %%    _94
  _490 = is_nonempty_list _94
  br _490, ^490, ^251

490:
  %% Argument types:
  %%    _92 => {any(), any()}
  %% Aliased:
  %%    _92
  _93 = get_tuple_element _92, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _489 = bif:'=:=' _93, `[]`
  br _489, ^489, ^251

489:
  %% compile_SUITE.erl:1914
  %% Aliased:
  %%    Big
  _97 = call (`compile_partition_warnings`/2), Big, `[{error_location,line},{parse_transform,column_pt}]`

  %% Aliased:
  %%    _97
  _252 = succeeded:body _97
  br _252, ^252, ^1

252:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _485 = bif:is_tuple _97
  br _485, ^485, ^254

485:
  %% Argument types:
  %%    _97 => {...}
  %% Aliased:
  %%    _97
  _486 = bif:tuple_size _97

  %% Argument types:
  %%    _486 => 0..16777215
  %% Unique:
  %%    _486
  _487 = bif:'=:=' _486, `2`
  br _487, ^484, ^254

484:
  %% Argument types:
  %%    _97 => {any(), any()}
  %% Aliased:
  %%    _97
  _99 = get_tuple_element _97, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _483 = bif:'=:=' _99, `[]`
  br _483, ^483, ^254

483:
  %% Argument types:
  %%    _97 => {nil(), any()}
  %% Aliased:
  %%    _97
  _98 = get_tuple_element _97, `1`

  %% Aliased:
  %%    _98
  _482 = is_nonempty_list _98
  br _482, ^521, ^254

521:
  %% compile_SUITE.erl:1919
  %% Aliased:
  %%    Big
  _102 = call (`compile_partition_warnings`/2), Big, `[{parse_transform,column_pt},{parse_transform,line_pt}]`

  %% Aliased:
  %%    _102
  _255 = succeeded:body _102
  br _255, ^255, ^1

255:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _478 = bif:is_tuple _102
  br _478, ^478, ^257

478:
  %% Argument types:
  %%    _102 => {...}
  %% Aliased:
  %%    _102
  _479 = bif:tuple_size _102

  %% Argument types:
  %%    _479 => 0..16777215
  %% Unique:
  %%    _479
  _480 = bif:'=:=' _479, `2`
  br _480, ^477, ^257

477:
  %% Argument types:
  %%    _102 => {any(), any()}
  %% Aliased:
  %%    _102
  _104 = get_tuple_element _102, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _476 = bif:'=:=' _104, `[]`
  br _476, ^476, ^257

476:
  %% Argument types:
  %%    _102 => {nil(), any()}
  %% Aliased:
  %%    _102
  _103 = get_tuple_element _102, `1`

  %% Aliased:
  %%    _103
  _475 = is_nonempty_list _103
  br _475, ^522, ^257

522:
  %% compile_SUITE.erl:1924
  %% Aliased:
  %%    Big
  _107 = call (`compile_partition_warnings`/2), Big, `[{error_location,line},add_columns,{parse_transform,column_pt}]`

  %% Aliased:
  %%    _107
  _258 = succeeded:body _107
  br _258, ^258, ^1

258:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _471 = bif:is_tuple _107
  br _471, ^471, ^260

471:
  %% Argument types:
  %%    _107 => {...}
  %% Aliased:
  %%    _107
  _472 = bif:tuple_size _107

  %% Argument types:
  %%    _472 => 0..16777215
  %% Unique:
  %%    _472
  _473 = bif:'=:=' _472, `2`
  br _473, ^470, ^260

470:
  %% Argument types:
  %%    _107 => {any(), any()}
  %% Aliased:
  %%    _107
  _109 = get_tuple_element _107, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _469 = bif:'=:=' _109, `[]`
  br _469, ^469, ^260

469:
  %% Argument types:
  %%    _107 => {nil(), any()}
  %% Aliased:
  %%    _107
  _108 = get_tuple_element _107, `1`

  %% Aliased:
  %%    _108
  _468 = is_nonempty_list _108
  br _468, ^523, ^260

523:
  %% compile_SUITE.erl:1931
  %% Aliased:
  %%    Big
  _112 = call (`compile_partition_warnings`/2), Big, `[{error_location,line},
  add_columns,
  {parse_transform,column_pt},
  {parse_transform,column_pt}]`

  %% Aliased:
  %%    _112
  _261 = succeeded:body _112
  br _261, ^261, ^1

261:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _464 = bif:is_tuple _112
  br _464, ^464, ^263

464:
  %% Argument types:
  %%    _112 => {...}
  %% Aliased:
  %%    _112
  _465 = bif:tuple_size _112

  %% Argument types:
  %%    _465 => 0..16777215
  %% Unique:
  %%    _465
  _466 = bif:'=:=' _465, `2`
  br _466, ^463, ^263

463:
  %% Argument types:
  %%    _112 => {any(), any()}
  %% Aliased:
  %%    _112
  _114 = get_tuple_element _112, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _462 = bif:'=:=' _114, `[]`
  br _462, ^462, ^263

462:
  %% Argument types:
  %%    _112 => {nil(), any()}
  %% Aliased:
  %%    _112
  _113 = get_tuple_element _112, `1`

  %% Aliased:
  %%    _113
  _461 = is_nonempty_list _113
  br _461, ^524, ^263

524:
  %% compile_SUITE.erl:1939
  %% Aliased:
  %%    Big
  _117 = call (`compile_partition_warnings`/2), Big, `[{error_location,line},add_columns,add_error,{parse_transform,column_pt}]`

  %% Aliased:
  %%    _117
  _264 = succeeded:body _117
  br _264, ^264, ^1

264:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _457 = is_tagged_tuple _117, `3`, `error`
  br _457, ^454, ^266

454:
  %% Argument types:
  %%    _117 => {'error', any(), any()}
  %% Aliased:
  %%    _117
  _119 = get_tuple_element _117, `1`

  %% Aliased:
  %%    _119
  _453 = is_nonempty_list _119
  br _453, ^453, ^266

453:
  %% Argument types:
  %%    _119 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _119
  _122 = get_hd _119

  %% Argument types:
  %%    _119 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _119
  _121 = get_tl _119

  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _450 = bif:is_tuple _122
  br _450, ^450, ^266

450:
  %% Argument types:
  %%    _122 => {...}
  %% Aliased:
  %%    _122
  _451 = bif:tuple_size _122

  %% Argument types:
  %%    _451 => 0..16777215
  %% Unique:
  %%    _451
  _452 = bif:'=:=' _451, `2`
  br _452, ^449, ^266

449:
  %% Argument types:
  %%    _122 => {any(), any()}
  %% Aliased:
  %%    _122
  _123 = get_tuple_element _122, `1`

  %% Aliased:
  %%    _123
  _448 = is_nonempty_list _123
  br _448, ^448, ^266

448:
  %% Argument types:
  %%    _123 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _123
  _126 = get_hd _123

  %% Argument types:
  %%    _123 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _123
  _125 = get_tl _123

  %% Argument types:
  %%    
  %% Aliased:
  %%    _126
  _445 = bif:is_tuple _126
  br _445, ^445, ^266

445:
  %% Argument types:
  %%    _126 => {...}
  %% Aliased:
  %%    _126
  _446 = bif:tuple_size _126

  %% Argument types:
  %%    _446 => 0..16777215
  %% Unique:
  %%    _446
  _447 = bif:'=:=' _446, `3`
  br _447, ^444, ^266

444:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _443 = bif:'=:=' _125, `[]`
  br _443, ^443, ^266

443:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _442 = bif:'=:=' _121, `[]`
  br _442, ^442, ^266

442:
  %% Argument types:
  %%    _117 => {'error', any(), any()}
  %% Aliased:
  %%    _117
  _118 = get_tuple_element _117, `2`

  %% Aliased:
  %%    _118
  _441 = is_nonempty_list _118
  br _441, ^441, ^266

441:
  %% Argument types:
  %%    _126 => {any(), any(), any()}
  %% Aliased:
  %%    _126
  _129 = get_tuple_element _126, `0`

  %% compile_SUITE.erl:1943
  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _132 = bif:is_integer _129
  br _132, ^438, ^268

438:
  %% compile_SUITE.erl:1946
  %% Aliased:
  %%    Big
  _133 = call (`compile`:`file`/2), Big, `[binary,time,report,{core_transform,generic_pt},{parse_transform,generic_pt}]`

  %% Aliased:
  %%    _133
  _269 = succeeded:body _133
  br _269, ^269, ^1

269:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _133
  _434 = is_tagged_tuple _133, `3`, `ok`
  br _434, ^431, ^271

431:
  %% Argument types:
  %%    _133 => {'ok', any(), any()}
  %% Aliased:
  %%    _133
  _135 = get_tuple_element _133, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _430 = bif:'=:=' _135, `big`
  br _430, ^429, ^271

429:
  %% compile_SUITE.erl:1951
  %% Aliased:
  %%    DataDir
  Simple = call (`filename`:`join`/2), DataDir, `simple`

  %% Aliased:
  %%    Simple
  _272 = succeeded:body Simple
  br _272, ^272, ^1

272:
  %% compile_SUITE.erl:1952
  %% Aliased:
  %%    Simple
  _137 = call (`compile`:`file`/2), Simple, `[report,{core_transform,generic_pt},{action,crash}]`

  %% Aliased:
  %%    _137
  _273 = succeeded:body _137
  br _273, ^273, ^1

273:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _427 = bif:'=:=' _137, `error`
  br _427, ^426, ^275

426:
  %% compile_SUITE.erl:1953
  %% Aliased:
  %%    Simple
  _138 = call (`compile`:`file`/2), Simple, `[return,{core_transform,generic_pt},{action,crash}]`

  %% Aliased:
  %%    _138
  _276 = succeeded:body _138
  br _276, ^276, ^1

276:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _138
  _422 = is_tagged_tuple _138, `3`, `error`
  br _422, ^419, ^278

419:
  %% Argument types:
  %%    _138 => {'error', any(), any()}
  %% Aliased:
  %%    _138
  _139 = get_tuple_element _138, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _418 = bif:'=:=' _139, `[]`
  br _418, ^418, ^278

418:
  %% compile_SUITE.erl:1955
  %% Aliased:
  %%    Simple
  _142 = call (`compile`:`file`/2), Simple, `[report,{core_transform,generic_pt},{action,throw}]`

  %% Aliased:
  %%    _142
  _279 = succeeded:body _142
  br _279, ^279, ^1

279:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _142
  _416 = bif:'=:=' _142, `error`
  br _416, ^415, ^281

415:
  %% compile_SUITE.erl:1956
  %% Aliased:
  %%    Simple
  _143 = call (`compile`:`file`/2), Simple, `[return,{core_transform,generic_pt},{action,throw}]`

  %% Aliased:
  %%    _143
  _282 = succeeded:body _143
  br _282, ^282, ^1

282:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _411 = is_tagged_tuple _143, `3`, `error`
  br _411, ^408, ^284

408:
  %% Argument types:
  %%    _143 => {'error', any(), any()}
  %% Aliased:
  %%    _143
  _144 = get_tuple_element _143, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _144
  _407 = bif:'=:=' _144, `[]`
  br _407, ^407, ^284

407:
  %% compile_SUITE.erl:1958
  %% Aliased:
  %%    Simple
  _147 = call (`compile`:`file`/2), Simple, `[report,{core_transform,generic_pt},{action,exit}]`

  %% Aliased:
  %%    _147
  _285 = succeeded:body _147
  br _285, ^285, ^1

285:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _147
  _405 = bif:'=:=' _147, `error`
  br _405, ^404, ^287

404:
  %% compile_SUITE.erl:1959
  %% Aliased:
  %%    Simple
  _148 = call (`compile`:`file`/2), Simple, `[return,{core_transform,generic_pt},{action,exit}]`

  %% Aliased:
  %%    _148
  _288 = succeeded:body _148
  br _288, ^288, ^1

288:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _400 = is_tagged_tuple _148, `3`, `error`
  br _400, ^397, ^290

397:
  %% Argument types:
  %%    _148 => {'error', any(), any()}
  %% Aliased:
  %%    _148
  _149 = get_tuple_element _148, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _149
  _396 = bif:'=:=' _149, `[]`
  br _396, ^396, ^290

396:
  %% compile_SUITE.erl:1962
  %% Aliased:
  %%    Simple
  _152 = call (`compile`:`file`/2), Simple, `[report,{parse_transform,generic_pt},{action,crash}]`

  %% Aliased:
  %%    _152
  _291 = succeeded:body _152
  br _291, ^291, ^1

291:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _152
  _394 = bif:'=:=' _152, `error`
  br _394, ^393, ^293

393:
  %% compile_SUITE.erl:1963
  %% Aliased:
  %%    Simple
  _153 = call (`compile`:`file`/2), Simple, `[return,{parse_transform,generic_pt},{action,crash}]`

  %% Aliased:
  %%    _153
  _294 = succeeded:body _153
  br _294, ^294, ^1

294:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _389 = is_tagged_tuple _153, `3`, `error`
  br _389, ^386, ^296

386:
  %% Argument types:
  %%    _153 => {'error', any(), any()}
  %% Aliased:
  %%    _153
  _154 = get_tuple_element _153, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _154
  _385 = bif:'=:=' _154, `[]`
  br _385, ^385, ^296

385:
  %% compile_SUITE.erl:1965
  %% Aliased:
  %%    Simple
  _157 = call (`compile`:`file`/2), Simple, `[report,{parse_transform,generic_pt},{action,throw}]`

  %% Aliased:
  %%    _157
  _297 = succeeded:body _157
  br _297, ^297, ^1

297:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _383 = bif:'=:=' _157, `error`
  br _383, ^382, ^299

382:
  %% compile_SUITE.erl:1966
  %% Aliased:
  %%    Simple
  _158 = call (`compile`:`file`/2), Simple, `[return,{parse_transform,generic_pt},{action,throw}]`

  %% Aliased:
  %%    _158
  _300 = succeeded:body _158
  br _300, ^300, ^1

300:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _158
  _378 = is_tagged_tuple _158, `3`, `error`
  br _378, ^375, ^302

375:
  %% Argument types:
  %%    _158 => {'error', any(), any()}
  %% Aliased:
  %%    _158
  _159 = get_tuple_element _158, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _374 = bif:'=:=' _159, `[]`
  br _374, ^374, ^302

374:
  %% compile_SUITE.erl:1968
  %% Aliased:
  %%    Simple
  _162 = call (`compile`:`file`/2), Simple, `[report,{parse_transform,generic_pt},{action,exit}]`

  %% Aliased:
  %%    _162
  _303 = succeeded:body _162
  br _303, ^303, ^1

303:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _162
  _372 = bif:'=:=' _162, `error`
  br _372, ^371, ^305

371:
  %% compile_SUITE.erl:1969
  %% Aliased:
  %%    Simple
  _163 = call (`compile`:`file`/2), Simple, `[return,{parse_transform,generic_pt},{action,exit}]`

  %% Aliased:
  %%    _163
  _306 = succeeded:body _163
  br _306, ^306, ^1

306:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _163
  _367 = is_tagged_tuple _163, `3`, `error`
  br _367, ^364, ^308

364:
  %% Argument types:
  %%    _163 => {'error', any(), any()}
  %% Aliased:
  %%    _163
  _164 = get_tuple_element _163, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _164
  _363 = bif:'=:=' _164, `[]`
  br _363, ^363, ^308

363:
  %% compile_SUITE.erl:1972
  %% Aliased:
  %%    Simple
  _167 = call (`compile`:`file`/2), Simple, `[report,{parse_transform,generic_pt},{action,warning}]`

  %% Aliased:
  %%    _167
  _309 = succeeded:body _167
  br _309, ^309, ^1

309:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _361 = bif:'=:=' _167, `{ok,simple}`
  br _361, ^361, ^311

361:
  %% compile_SUITE.erl:1973
  %% Aliased:
  %%    Simple
  _168 = call (`compile`:`file`/2), Simple, `[return,{parse_transform,generic_pt},{action,warning}]`

  %% Aliased:
  %%    _168
  _312 = succeeded:body _168
  br _312, ^312, ^1

312:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _168
  _357 = is_tagged_tuple _168, `3`, `ok`
  br _357, ^354, ^314

354:
  %% Argument types:
  %%    _168 => {'ok', any(), any()}
  %% Aliased:
  %%    _168
  _170 = get_tuple_element _168, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _170
  _353 = bif:'=:=' _170, `simple`
  br _353, ^352, ^314

352:
  %% Argument types:
  %%    _168 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _168
  _169 = get_tuple_element _168, `2`

  %% Aliased:
  %%    _169
  _351 = is_nonempty_list _169
  br _351, ^525, ^314

525:
  %% compile_SUITE.erl:1974
  %% Aliased:
  %%    Simple
  _174 = call (`compile`:`file`/2), Simple, `[report,{parse_transform,generic_pt},{action,error}]`

  %% Aliased:
  %%    _174
  _315 = succeeded:body _174
  br _315, ^315, ^1

315:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _174
  _349 = bif:'=:=' _174, `error`
  br _349, ^348, ^317

348:
  %% compile_SUITE.erl:1975
  %% Aliased:
  %%    Simple
  _175 = call (`compile`:`file`/2), Simple, `[return,{parse_transform,generic_pt},{action,error}]`

  %% Aliased:
  %%    _175
  _318 = succeeded:body _175
  br _318, ^318, ^1

318:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _175
  _344 = is_tagged_tuple _175, `3`, `error`
  br _344, ^341, ^320

341:
  %% Argument types:
  %%    _175 => {'error', any(), any()}
  %% Aliased:
  %%    _175
  _177 = get_tuple_element _175, `1`

  %% Aliased:
  %%    _177
  _340 = is_nonempty_list _177
  br _340, ^340, ^320

340:
  %% Argument types:
  %%    _175 => {'error', any(), any()}
  %% Aliased:
  %%    _175
  _176 = get_tuple_element _175, `2`

  %% Aliased:
  %%    _176
  _339 = is_nonempty_list _176
  br _339, ^526, ^320

526:
  %% compile_SUITE.erl:1976
  %% Aliased:
  %%    Simple
  _183 = call (`compile`:`file`/2), Simple, `[report,{parse_transform,generic_pt},{action,undefined_error}]`

  %% Aliased:
  %%    _183
  _321 = succeeded:body _183
  br _321, ^321, ^1

321:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _183
  _337 = bif:'=:=' _183, `error`
  br _337, ^336, ^323

336:
  %% compile_SUITE.erl:1977
  %% Aliased:
  %%    Simple
  _184 = call (`compile`:`file`/2), Simple, `[return,{parse_transform,generic_pt},{action,undefined_error}]`

  %% Aliased:
  %%    _184
  _324 = succeeded:body _184
  br _324, ^324, ^1

324:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _184
  _332 = is_tagged_tuple _184, `3`, `error`
  br _332, ^329, ^326

329:
  %% Argument types:
  %%    _184 => {'error', any(), any()}
  %% Aliased:
  %%    _184
  _186 = get_tuple_element _184, `1`

  %% Aliased:
  %%    _186
  _328 = is_nonempty_list _186
  br _328, ^328, ^326

328:
  %% Argument types:
  %%    _184 => {'error', any(), any()}
  %% Aliased:
  %%    _184
  _185 = get_tuple_element _184, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _185
  _327 = bif:'=:=' _185, `[]`
  br _327, ^327, ^326

327:
  %% Result type:
  %%    'ok'
  ret `ok`

326:
  %% compile_SUITE.erl:1977
  %% Aliased:
  %%    _184
  _190 = match_fail `badmatch`, _184

  %% Unique:
  %%    _190
  _335 = succeeded:body _190
  br ^1

323:
  %% compile_SUITE.erl:1976
  %% Aliased:
  %%    _183
  _191 = match_fail `badmatch`, _183

  %% Unique:
  %%    _191
  _338 = succeeded:body _191
  br ^1

320:
  %% compile_SUITE.erl:1975
  %% Aliased:
  %%    _175
  _192 = match_fail `badmatch`, _175

  %% Unique:
  %%    _192
  _347 = succeeded:body _192
  br ^1

317:
  %% compile_SUITE.erl:1974
  %% Aliased:
  %%    _174
  _193 = match_fail `badmatch`, _174

  %% Unique:
  %%    _193
  _350 = succeeded:body _193
  br ^1

314:
  %% compile_SUITE.erl:1973
  %% Aliased:
  %%    _168
  _194 = match_fail `badmatch`, _168

  %% Unique:
  %%    _194
  _360 = succeeded:body _194
  br ^1

311:
  %% compile_SUITE.erl:1972
  %% Aliased:
  %%    _167
  _195 = match_fail `badmatch`, _167

  %% Unique:
  %%    _195
  _362 = succeeded:body _195
  br ^1

308:
  %% compile_SUITE.erl:1969
  %% Aliased:
  %%    _163
  _196 = match_fail `badmatch`, _163

  %% Unique:
  %%    _196
  _370 = succeeded:body _196
  br ^1

305:
  %% compile_SUITE.erl:1968
  %% Aliased:
  %%    _162
  _197 = match_fail `badmatch`, _162

  %% Unique:
  %%    _197
  _373 = succeeded:body _197
  br ^1

302:
  %% compile_SUITE.erl:1966
  %% Aliased:
  %%    _158
  _198 = match_fail `badmatch`, _158

  %% Unique:
  %%    _198
  _381 = succeeded:body _198
  br ^1

299:
  %% compile_SUITE.erl:1965
  %% Aliased:
  %%    _157
  _199 = match_fail `badmatch`, _157

  %% Unique:
  %%    _199
  _384 = succeeded:body _199
  br ^1

296:
  %% compile_SUITE.erl:1963
  %% Aliased:
  %%    _153
  _200 = match_fail `badmatch`, _153

  %% Unique:
  %%    _200
  _392 = succeeded:body _200
  br ^1

293:
  %% compile_SUITE.erl:1962
  %% Aliased:
  %%    _152
  _201 = match_fail `badmatch`, _152

  %% Unique:
  %%    _201
  _395 = succeeded:body _201
  br ^1

290:
  %% compile_SUITE.erl:1959
  %% Aliased:
  %%    _148
  _202 = match_fail `badmatch`, _148

  %% Unique:
  %%    _202
  _403 = succeeded:body _202
  br ^1

287:
  %% compile_SUITE.erl:1958
  %% Aliased:
  %%    _147
  _203 = match_fail `badmatch`, _147

  %% Unique:
  %%    _203
  _406 = succeeded:body _203
  br ^1

284:
  %% compile_SUITE.erl:1956
  %% Aliased:
  %%    _143
  _204 = match_fail `badmatch`, _143

  %% Unique:
  %%    _204
  _414 = succeeded:body _204
  br ^1

281:
  %% compile_SUITE.erl:1955
  %% Aliased:
  %%    _142
  _205 = match_fail `badmatch`, _142

  %% Unique:
  %%    _205
  _417 = succeeded:body _205
  br ^1

278:
  %% compile_SUITE.erl:1953
  %% Aliased:
  %%    _138
  _206 = match_fail `badmatch`, _138

  %% Unique:
  %%    _206
  _425 = succeeded:body _206
  br ^1

275:
  %% compile_SUITE.erl:1952
  %% Aliased:
  %%    _137
  _207 = match_fail `badmatch`, _137

  %% Unique:
  %%    _207
  _428 = succeeded:body _207
  br ^1

271:
  %% compile_SUITE.erl:1946
  %% Aliased:
  %%    _133
  _208 = match_fail `badmatch`, _133

  %% Unique:
  %%    _208
  _437 = succeeded:body _208
  br ^1

268:
  %% compile_SUITE.erl:1943
  _209 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _209
  _440 = succeeded:body _209
  br ^1

266:
  %% compile_SUITE.erl:1938
  %% Aliased:
  %%    _117
  _210 = match_fail `badmatch`, _117

  %% Unique:
  %%    _210
  _460 = succeeded:body _210
  br ^1

263:
  %% compile_SUITE.erl:1931
  %% Aliased:
  %%    _112
  _211 = match_fail `badmatch`, _112

  %% Unique:
  %%    _211
  _467 = succeeded:body _211
  br ^1

260:
  %% compile_SUITE.erl:1924
  %% Aliased:
  %%    _107
  _212 = match_fail `badmatch`, _107

  %% Unique:
  %%    _212
  _474 = succeeded:body _212
  br ^1

257:
  %% compile_SUITE.erl:1919
  %% Aliased:
  %%    _102
  _213 = match_fail `badmatch`, _102

  %% Unique:
  %%    _213
  _481 = succeeded:body _213
  br ^1

254:
  %% compile_SUITE.erl:1914
  %% Aliased:
  %%    _97
  _214 = match_fail `badmatch`, _97

  %% Unique:
  %%    _214
  _488 = succeeded:body _214
  br ^1

251:
  %% compile_SUITE.erl:1910
  %% Aliased:
  %%    _92
  _215 = match_fail `badmatch`, _92

  %% Unique:
  %%    _215
  _495 = succeeded:body _215
  br ^1

248:
  %% compile_SUITE.erl:1906
  %% Aliased:
  %%    _87
  _216 = match_fail `badmatch`, _87

  %% Unique:
  %%    _216
  _502 = succeeded:body _216
  br ^1

244:
  %% compile_SUITE.erl:1901
  %% Aliased:
  %%    _86
  _217 = match_fail `badmatch`, _86

  %% Unique:
  %%    _217
  _504 = succeeded:body _217
  br ^1

240:
  %% compile_SUITE.erl:1899
  %% Aliased:
  %%    _82
  _218 = match_fail `badmatch`, _82

  %% Unique:
  %%    _218
  _506 = succeeded:body _218
  br ^1

236:
  %% compile_SUITE.erl:1897
  %% Aliased:
  %%    _78
  _219 = match_fail `badmatch`, _78

  %% Unique:
  %%    _219
  _508 = succeeded:body _219
  br ^1

232:
  %% compile_SUITE.erl:1893
  %% Aliased:
  %%    _74
  _220 = match_fail `badmatch`, _74

  %% Unique:
  %%    _220
  _511 = succeeded:body _220
  br ^1

229:
  %% compile_SUITE.erl:1892
  %% Aliased:
  %%    _73
  _221 = match_fail `badmatch`, _73

  %% Unique:
  %%    _221
  _514 = succeeded:body _221
  br ^1

1:
  _222 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _222
}

%% compile_SUITE.erl:1981
%% Counter = 70
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list('add_columns' | 'add_error' | {'error_location', 'line'} | {'parse_transform', 'column_pt' | 'line_pt'})
function `compile_SUITE`:`compile_partition_warnings`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => nonempty_list('add_columns' | 'add_error' | {'error_location', 'line'} | {'parse_transform', 'column_pt' | 'line_pt'})
  %% Unique:
  %%    _1
  _16 = put_list `return`, _1

  %% Argument types:
  %%    _16 => nonempty_list('add_columns' | 'add_error' | 'return' | {'error_location', 'line'} | {'parse_transform', 'column_pt' | 'line_pt'})
  %% Unique:
  %%    _16
  _17 = put_list `binary`, _16

  %% compile_SUITE.erl:1982
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _17
  _18 = call (`compile`:`file`/2), _0, _17

  %% Aliased:
  %%    _18
  _42 = succeeded:body _18
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _62 = is_tagged_tuple _18, `4`, `ok`
  br _62, ^59, ^44

59:
  %% Argument types:
  %%    _18 => {'ok', any(), any(), any()}
  %% Aliased:
  %%    _18
  _21 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _58 = bif:'=:=' _21, `big`
  br _58, ^57, ^44

57:
  %% Argument types:
  %%    _18 => {'ok', 'big', any(), any()}
  %% Aliased:
  %%    _18
  _20 = get_tuple_element _18, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _23 = bs_start_match `new`, _20

  %% Aliased:
  %%    _23
  _56 = succeeded:guard _23
  br _56, ^56, ^44

56:
  _68 = bs_ensure _23, `0`, `8`
  _69 = succeeded:guard _68
  br _69, ^67, ^44

67:
  %% compile_SUITE.erl:1983
  %% Aliased:
  %%    _23
  %% Anno: #{ensured => true}
  _24 = bs_match `skip`, _68, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _24
  _45 = succeeded:guard _24
  br _45, ^45, ^44

45:
  %% Argument types:
  %%    _18 => {'ok', 'big', any(), any()}
  %% Aliased:
  %%    _18
  _19 = get_tuple_element _18, `3`

  %% Aliased:
  %%    _19
  _54 = is_nonempty_list _19
  br _54, ^54, ^47

54:
  %% Argument types:
  %%    _19 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _19
  _27 = get_hd _19

  %% Argument types:
  %%    _19 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _19
  _26 = get_tl _19

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _51 = bif:is_tuple _27
  br _51, ^51, ^47

51:
  %% Argument types:
  %%    _27 => {...}
  %% Aliased:
  %%    _27
  _52 = bif:tuple_size _27

  %% Argument types:
  %%    _52 => 0..16777215
  %% Unique:
  %%    _52
  _53 = bif:'=:=' _52, `2`
  br _53, ^50, ^47

50:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _49 = bif:'=:=' _26, `[]`
  br _49, ^49, ^47

49:
  %% Result type:
  %%    'false' | 'true'
  _7 = make_fun (`'-compile_partition_warnings/2-fun-0-'`/1)

  %% Argument types:
  %%    _27 => {any(), any()}
  %% Aliased:
  %%    _27
  _28 = get_tuple_element _27, `1`

  %% compile_SUITE.erl:1987
  %% Aliased:
  %%    _7, 
  %%    _28
  _38 = call (`lists`:`partition`/2), _7, _28

  %% Aliased:
  %%    _38
  _48 = succeeded:body _38
  br _48, ^48, ^1

48:
  %% Result type:
  %%    {list(any()), list(any())}
  %% Aliased:
  %%    _38
  ret _38

47:
  %% compile_SUITE.erl:1984
  %% Aliased:
  %%    _19
  _39 = match_fail `badmatch`, _19

  %% Unique:
  %%    _39
  _55 = succeeded:body _39
  br ^1

44:
  %% Aliased:
  %%    _18
  ret _18

1:
  _40 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _40
}

%% compile_SUITE.erl:1995
%% Counter = 337
%% bs_ensure_opt: true
function `compile_SUITE`:`erl_compile_api`(_0) {
0:
  %% compile_SUITE.erl:1996
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _169 = succeeded:body DataDir
  br _169, ^169, ^1

169:
  %% compile_SUITE.erl:1997
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _170 = succeeded:body PrivDir
  br _170, ^170, ^1

170:
  %% compile_SUITE.erl:1998
  %% Aliased:
  %%    DataDir
  Simple = call (`filename`:`join`/2), DataDir, `"simple.erl"`

  %% Aliased:
  %%    Simple
  _171 = succeeded:body Simple
  br _171, ^171, ^1

171:
  %% Argument types:
  %%    
  %% Aliased:
  %%    PrivDir
  Opts = put_tuple `options`, `[]`, PrivDir, `undefined`, `[]`, `1`, `false`, `999`, `[]`, `[]`, `undefined`

  %% Argument types:
  %%    
  %% Aliased:
  %%    PrivDir
  _7 = put_tuple `options`, `[]`, PrivDir, `undefined`, `[]`, `1`, `false`, `999`, `[binary]`, `[]`, `undefined`

  %% compile_SUITE.erl:2003
  %% Aliased:
  %%    Opts, 
  %%    Simple
  _110 = call (`compile`:`compile`/3), Simple, `"ignored"`, Opts

  %% Aliased:
  %%    _110
  _173 = succeeded:body _110
  br _173, ^173, ^1

173:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _321 = bif:'=:=' _110, `ok`
  br _321, ^320, ^175

320:
  %% Argument types:
  %%    
  %% Aliased:
  %%    PrivDir
  rec1 = put_list PrivDir, `[]`

  %% compile_SUITE.erl:2004
  %% Argument types:
  %%    Opts => {'options', nil(), any(), 'undefined', nil(), 1, 'false', 999, nil(), nil(), 'undefined'}
  %%    rec1 => nonempty_list(any())
  %% Aliased:
  %%    Opts, 
  %%    PrivDir
  %% Unique:
  %%    rec1
  %% Anno: #{source_dies => false}
  _14 = update_record `copy`, `11`, Opts, `11`, PrivDir, `2`, rec1

  %% compile_SUITE.erl:2004
  %% Aliased:
  %%    Simple
  %% Unique:
  %%    _14
  _111 = call (`compile`:`compile`/3), Simple, `"ignored"`, _14

  %% Aliased:
  %%    _111
  _178 = succeeded:body _111
  br _178, ^178, ^1

178:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _318 = bif:'=:=' _111, `ok`
  br _318, ^317, ^180

317:
  %% compile_SUITE.erl:2005
  %% Aliased:
  %%    _7, 
  %%    Simple
  _112 = call (`compile`:`compile`/3), Simple, `"ignored"`, _7

  %% Aliased:
  %%    _112
  _181 = succeeded:body _112
  br _181, ^181, ^1

181:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _313 = is_tagged_tuple _112, `3`, `ok`
  br _313, ^310, ^183

310:
  %% Argument types:
  %%    _112 => {'ok', any(), any()}
  %% Aliased:
  %%    _112
  _114 = get_tuple_element _112, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _309 = bif:'=:=' _114, `simple`
  br _309, ^308, ^183

308:
  %% compile_SUITE.erl:2007
  %% Argument types:
  %%    Opts => {'options', nil(), any(), 'undefined', nil(), 1, 'false', 999, nil(), nil(), 'undefined'}
  %% Aliased:
  %%    Opts
  %% Anno: #{source_dies => false}
  _19 = update_record `copy`, `11`, Opts, `9`, `[dabstr]`

  %% compile_SUITE.erl:2007
  %% Aliased:
  %%    Simple
  %% Unique:
  %%    _19
  _116 = call (`compile`:`compile`/3), Simple, `"ignored"`, _19

  %% Aliased:
  %%    _116
  _185 = succeeded:body _116
  br _185, ^185, ^1

185:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _306 = bif:'=:=' _116, `ok`
  br _306, ^305, ^187

305:
  %% compile_SUITE.erl:2008
  %% Argument types:
  %%    Opts => {'options', nil(), any(), 'undefined', nil(), 1, 'false', 999, nil(), nil(), 'undefined'}
  %% Aliased:
  %%    Opts
  %% Anno: #{source_dies => false}
  _23 = update_record `copy`, `11`, Opts, `9`, `[to_core]`

  %% compile_SUITE.erl:2008
  %% Aliased:
  %%    Simple
  %% Unique:
  %%    _23
  _117 = call (`compile`:`compile`/3), Simple, `"ignored"`, _23

  %% Aliased:
  %%    _117
  _189 = succeeded:body _117
  br _189, ^189, ^1

189:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _303 = bif:'=:=' _117, `ok`
  br _303, ^302, ^191

302:
  %% compile_SUITE.erl:2009
  %% Argument types:
  %%    Opts => {'options', nil(), any(), 'undefined', nil(), 1, 'false', 999, nil(), nil(), 'undefined'}
  %% Aliased:
  %%    Opts
  %% Anno: #{source_dies => false}
  _27 = update_record `copy`, `11`, Opts, `9`, `[to_asm]`

  %% compile_SUITE.erl:2009
  %% Aliased:
  %%    Simple
  %% Unique:
  %%    _27
  _118 = call (`compile`:`compile`/3), Simple, `"ignored"`, _27

  %% Aliased:
  %%    _118
  _193 = succeeded:body _118
  br _193, ^193, ^1

193:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _300 = bif:'=:=' _118, `ok`
  br _300, ^299, ^195

299:
  %% compile_SUITE.erl:2011
  %% Aliased:
  %%    PrivDir
  SimpleAbstr = call (`filename`:`join`/2), PrivDir, `"simple.abstr"`

  %% Aliased:
  %%    SimpleAbstr
  _196 = succeeded:body SimpleAbstr
  br _196, ^196, ^1

196:
  %% compile_SUITE.erl:2012
  %% Aliased:
  %%    PrivDir
  SimpleCore = call (`filename`:`join`/2), PrivDir, `"simple.core"`

  %% Aliased:
  %%    SimpleCore
  _197 = succeeded:body SimpleCore
  br _197, ^197, ^1

197:
  %% compile_SUITE.erl:2013
  %% Aliased:
  %%    PrivDir
  SimpleAsm = call (`filename`:`join`/2), PrivDir, `"simple.S"`

  %% Aliased:
  %%    SimpleAsm
  _198 = succeeded:body SimpleAsm
  br _198, ^198, ^1

198:
  %% compile_SUITE.erl:2015
  %% Aliased:
  %%    Opts, 
  %%    SimpleAbstr
  _119 = call (`compile`:`compile_abstr`/3), SimpleAbstr, `"ignored"`, Opts

  %% Aliased:
  %%    _119
  _199 = succeeded:body _119
  br _199, ^199, ^1

199:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _297 = bif:'=:=' _119, `ok`
  br _297, ^296, ^201

296:
  %% compile_SUITE.erl:2016
  %% Aliased:
  %%    Opts, 
  %%    SimpleCore
  _120 = call (`compile`:`compile_core`/3), SimpleCore, `"ignored"`, Opts

  %% Aliased:
  %%    _120
  _202 = succeeded:body _120
  br _202, ^202, ^1

202:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _294 = bif:'=:=' _120, `ok`
  br _294, ^293, ^204

293:
  %% compile_SUITE.erl:2017
  %% Aliased:
  %%    Opts, 
  %%    SimpleAsm
  _121 = call (`compile`:`compile_asm`/3), SimpleAsm, `"ignored"`, Opts

  %% Aliased:
  %%    _121
  _205 = succeeded:body _121
  br _205, ^205, ^1

205:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _291 = bif:'=:=' _121, `ok`
  br _291, ^290, ^207

290:
  %% compile_SUITE.erl:2019
  %% Aliased:
  %%    _7, 
  %%    SimpleAbstr
  _122 = call (`compile`:`compile_abstr`/3), SimpleAbstr, `"ignored"`, _7

  %% Aliased:
  %%    _122
  _208 = succeeded:body _122
  br _208, ^208, ^1

208:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _286 = is_tagged_tuple _122, `3`, `ok`
  br _286, ^283, ^210

283:
  %% Argument types:
  %%    _122 => {'ok', any(), any()}
  %% Aliased:
  %%    _122
  _124 = get_tuple_element _122, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _124
  _282 = bif:'=:=' _124, `simple`
  br _282, ^281, ^210

281:
  %% Argument types:
  %%    _122 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _122
  _123 = get_tuple_element _122, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _126 = bs_start_match `new`, _123

  %% Aliased:
  %%    _126
  _280 = succeeded:guard _126
  br _280, ^280, ^210

280:
  _329 = bs_ensure _126, `0`, `8`
  _330 = succeeded:guard _329
  br _330, ^328, ^210

328:
  %% compile_SUITE.erl:2019
  %% Aliased:
  %%    _126
  %% Anno: #{ensured => true}
  _127 = bs_match `skip`, _329, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _127
  _211 = succeeded:guard _127
  br _211, ^325, ^210

325:
  %% compile_SUITE.erl:2020
  %% Aliased:
  %%    _7, 
  %%    SimpleCore
  _129 = call (`compile`:`compile_core`/3), SimpleCore, `"ignored"`, _7

  %% Aliased:
  %%    _129
  _212 = succeeded:body _129
  br _212, ^212, ^1

212:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _276 = is_tagged_tuple _129, `3`, `ok`
  br _276, ^273, ^214

273:
  %% Argument types:
  %%    _129 => {'ok', any(), any()}
  %% Aliased:
  %%    _129
  _131 = get_tuple_element _129, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _272 = bif:'=:=' _131, `simple`
  br _272, ^271, ^214

271:
  %% Argument types:
  %%    _129 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _129
  _130 = get_tuple_element _129, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _133 = bs_start_match `new`, _130

  %% Aliased:
  %%    _133
  _270 = succeeded:guard _133
  br _270, ^270, ^214

270:
  _332 = bs_ensure _133, `0`, `8`
  _333 = succeeded:guard _332
  br _333, ^331, ^214

331:
  %% compile_SUITE.erl:2020
  %% Aliased:
  %%    _133
  %% Anno: #{ensured => true}
  _134 = bs_match `skip`, _332, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _134
  _215 = succeeded:guard _134
  br _215, ^326, ^214

326:
  %% compile_SUITE.erl:2021
  %% Aliased:
  %%    _7, 
  %%    SimpleAsm
  _136 = call (`compile`:`compile_asm`/3), SimpleAsm, `"ignored"`, _7

  %% Aliased:
  %%    _136
  _216 = succeeded:body _136
  br _216, ^216, ^1

216:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _136
  _266 = is_tagged_tuple _136, `3`, `ok`
  br _266, ^263, ^218

263:
  %% Argument types:
  %%    _136 => {'ok', any(), any()}
  %% Aliased:
  %%    _136
  _138 = get_tuple_element _136, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _138
  _262 = bif:'=:=' _138, `simple`
  br _262, ^261, ^218

261:
  %% Argument types:
  %%    _136 => {'ok', 'simple', any()}
  %% Aliased:
  %%    _136
  _137 = get_tuple_element _136, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _140 = bs_start_match `new`, _137

  %% Aliased:
  %%    _140
  _260 = succeeded:guard _140
  br _260, ^260, ^218

260:
  _335 = bs_ensure _140, `0`, `8`
  _336 = succeeded:guard _335
  br _336, ^334, ^218

334:
  %% compile_SUITE.erl:2021
  %% Aliased:
  %%    _140
  %% Anno: #{ensured => true}
  _141 = bs_match `skip`, _335, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _141
  _219 = succeeded:guard _141
  br _219, ^327, ^218

327:
  %% compile_SUITE.erl:2023
  %% Aliased:
  %%    DataDir
  NeedsDefines = call (`filename`:`join`/2), DataDir, `"needs_defines.erl"`

  %% Aliased:
  %%    NeedsDefines
  _220 = succeeded:body NeedsDefines
  br _220, ^220, ^1

220:
  %% compile_SUITE.erl:2024
  %% Argument types:
  %%    Opts => {'options', nil(), any(), 'undefined', nil(), 1, 'false', 999, nil(), nil(), 'undefined'}
  %% Aliased:
  %%    Opts
  %% Anno: #{source_dies => true}
  _41 = update_record `copy`, `11`, Opts, `5`, `[compile_this,{'TEST_RESULT',whatever}]`

  %% compile_SUITE.erl:2024
  %% Aliased:
  %%    NeedsDefines
  %% Unique:
  %%    _41
  _143 = call (`compile`:`compile`/3), NeedsDefines, `"ignored"`, _41

  %% Aliased:
  %%    _143
  _222 = succeeded:body _143
  br _222, ^222, ^1

222:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _258 = bif:'=:=' _143, `ok`
  br _258, ^257, ^224

257:
  %% compile_SUITE.erl:2026
  %% Aliased:
  %%    SimpleAbstr
  _144 = call (`file`:`delete`/1), SimpleAbstr

  %% Aliased:
  %%    _144
  _225 = succeeded:body _144
  br _225, ^225, ^1

225:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _144
  _255 = bif:'=:=' _144, `ok`
  br _255, ^254, ^227

254:
  %% compile_SUITE.erl:2027
  %% Aliased:
  %%    SimpleCore
  _145 = call (`file`:`delete`/1), SimpleCore

  %% Aliased:
  %%    _145
  _228 = succeeded:body _145
  br _228, ^228, ^1

228:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _252 = bif:'=:=' _145, `ok`
  br _252, ^251, ^230

251:
  %% compile_SUITE.erl:2028
  %% Aliased:
  %%    SimpleAsm
  _146 = call (`file`:`delete`/1), SimpleAsm

  %% Aliased:
  %%    _146
  _231 = succeeded:body _146
  br _231, ^231, ^1

231:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _146
  _249 = bif:'=:=' _146, `ok`
  br _249, ^248, ^233

248:
  %% compile_SUITE.erl:2029
  %% Aliased:
  %%    PrivDir
  _46 = call (`filename`:`join`/2), PrivDir, `"simple.beam"`

  %% Aliased:
  %%    _46
  _234 = succeeded:body _46
  br _234, ^234, ^1

234:
  %% compile_SUITE.erl:2029
  %% Aliased:
  %%    _46
  _147 = call (`file`:`delete`/1), _46

  %% Aliased:
  %%    _147
  _235 = succeeded:body _147
  br _235, ^235, ^1

235:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _147
  _246 = bif:'=:=' _147, `ok`
  br _246, ^245, ^237

245:
  %% compile_SUITE.erl:2030
  %% Aliased:
  %%    PrivDir
  _48 = call (`filename`:`join`/2), PrivDir, `"needs_defines.beam"`

  %% Aliased:
  %%    _48
  _238 = succeeded:body _48
  br _238, ^238, ^1

238:
  %% compile_SUITE.erl:2030
  %% Aliased:
  %%    _48
  _148 = call (`file`:`delete`/1), _48

  %% Aliased:
  %%    _148
  _239 = succeeded:body _148
  br _239, ^239, ^1

239:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _243 = bif:'=:=' _148, `ok`
  br _243, ^242, ^241

242:
  %% Result type:
  %%    'ok'
  ret `ok`

241:
  %% compile_SUITE.erl:2030
  %% Aliased:
  %%    _148
  _149 = match_fail `badmatch`, _148

  %% Unique:
  %%    _149
  _244 = succeeded:body _149
  br ^1

237:
  %% compile_SUITE.erl:2029
  %% Aliased:
  %%    _147
  _150 = match_fail `badmatch`, _147

  %% Unique:
  %%    _150
  _247 = succeeded:body _150
  br ^1

233:
  %% compile_SUITE.erl:2028
  %% Aliased:
  %%    _146
  _151 = match_fail `badmatch`, _146

  %% Unique:
  %%    _151
  _250 = succeeded:body _151
  br ^1

230:
  %% compile_SUITE.erl:2027
  %% Aliased:
  %%    _145
  _152 = match_fail `badmatch`, _145

  %% Unique:
  %%    _152
  _253 = succeeded:body _152
  br ^1

227:
  %% compile_SUITE.erl:2026
  %% Aliased:
  %%    _144
  _153 = match_fail `badmatch`, _144

  %% Unique:
  %%    _153
  _256 = succeeded:body _153
  br ^1

224:
  %% compile_SUITE.erl:2024
  %% Aliased:
  %%    _143
  _154 = match_fail `badmatch`, _143

  %% Unique:
  %%    _154
  _259 = succeeded:body _154
  br ^1

218:
  %% compile_SUITE.erl:2021
  %% Aliased:
  %%    _136
  _155 = match_fail `badmatch`, _136

  %% Unique:
  %%    _155
  _269 = succeeded:body _155
  br ^1

214:
  %% compile_SUITE.erl:2020
  %% Aliased:
  %%    _129
  _156 = match_fail `badmatch`, _129

  %% Unique:
  %%    _156
  _279 = succeeded:body _156
  br ^1

210:
  %% compile_SUITE.erl:2019
  %% Aliased:
  %%    _122
  _157 = match_fail `badmatch`, _122

  %% Unique:
  %%    _157
  _289 = succeeded:body _157
  br ^1

207:
  %% compile_SUITE.erl:2017
  %% Aliased:
  %%    _121
  _158 = match_fail `badmatch`, _121

  %% Unique:
  %%    _158
  _292 = succeeded:body _158
  br ^1

204:
  %% compile_SUITE.erl:2016
  %% Aliased:
  %%    _120
  _159 = match_fail `badmatch`, _120

  %% Unique:
  %%    _159
  _295 = succeeded:body _159
  br ^1

201:
  %% compile_SUITE.erl:2015
  %% Aliased:
  %%    _119
  _160 = match_fail `badmatch`, _119

  %% Unique:
  %%    _160
  _298 = succeeded:body _160
  br ^1

195:
  %% compile_SUITE.erl:2009
  %% Aliased:
  %%    _118
  _161 = match_fail `badmatch`, _118

  %% Unique:
  %%    _161
  _301 = succeeded:body _161
  br ^1

191:
  %% compile_SUITE.erl:2008
  %% Aliased:
  %%    _117
  _162 = match_fail `badmatch`, _117

  %% Unique:
  %%    _162
  _304 = succeeded:body _162
  br ^1

187:
  %% compile_SUITE.erl:2007
  %% Aliased:
  %%    _116
  _163 = match_fail `badmatch`, _116

  %% Unique:
  %%    _163
  _307 = succeeded:body _163
  br ^1

183:
  %% compile_SUITE.erl:2005
  %% Aliased:
  %%    _112
  _164 = match_fail `badmatch`, _112

  %% Unique:
  %%    _164
  _316 = succeeded:body _164
  br ^1

180:
  %% compile_SUITE.erl:2004
  %% Aliased:
  %%    _111
  _165 = match_fail `badmatch`, _111

  %% Unique:
  %%    _165
  _319 = succeeded:body _165
  br ^1

175:
  %% compile_SUITE.erl:2003
  %% Aliased:
  %%    _110
  _166 = match_fail `badmatch`, _110

  %% Unique:
  %%    _166
  _322 = succeeded:body _166
  br ^1

1:
  _167 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _167
}

%% compile_SUITE.erl:2041
%% Counter = 100
%% bs_ensure_opt: true
function `compile_SUITE`:`types_pp`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _53 = bif:is_list _0
  br _53, ^53, ^52

53:
  %% compile_SUITE.erl:2042
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _54 = succeeded:body DataDir
  br _54, ^54, ^1

54:
  %% compile_SUITE.erl:2043
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _55 = succeeded:body PrivDir
  br _55, ^55, ^1

55:
  %% compile_SUITE.erl:2044
  %% Aliased:
  %%    PrivDir
  TargetDir = call (`filename`:`join`/2), PrivDir, `types_pp`

  %% Aliased:
  %%    TargetDir
  _56 = succeeded:body TargetDir
  br _56, ^56, ^1

56:
  %% compile_SUITE.erl:2045
  %% Aliased:
  %%    DataDir
  File = call (`filename`:`join`/2), DataDir, `"types_pp.erl"`

  %% Aliased:
  %%    File
  _57 = succeeded:body File
  br _57, ^57, ^1

57:
  %% compile_SUITE.erl:2046
  %% Aliased:
  %%    TargetDir
  Listing = call (`filename`:`join`/2), TargetDir, `"types_pp.ssaopt"`

  %% Aliased:
  %%    Listing
  _58 = succeeded:body Listing
  br _58, ^58, ^1

58:
  %% compile_SUITE.erl:2047
  %% Aliased:
  %%    TargetDir
  _24 = call (`file`:`make_dir`/1), TargetDir

  %% Aliased:
  %%    _24
  _59 = succeeded:body _24
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _94 = bif:'=:=' _24, `ok`
  br _94, ^93, ^61

93:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _25 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _25 => {'outdir', any()}
  %% Unique:
  %%    _25
  _26 = put_list _25, `[]`

  %% Argument types:
  %%    _26 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _26
  _27 = put_list `dssaopt`, _26

  %% compile_SUITE.erl:2049
  %% Aliased:
  %%    File
  %% Unique:
  %%    _27
  _28 = call (`compile`:`file`/2), File, _27

  %% Aliased:
  %%    _28
  _62 = succeeded:body _28
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _89 = is_tagged_tuple _28, `2`, `ok`
  br _89, ^86, ^64

86:
  %% compile_SUITE.erl:2050
  %% Aliased:
  %%    Listing
  _31 = call (`file`:`read_file`/1), Listing

  %% Aliased:
  %%    _31
  _65 = succeeded:body _31
  br _65, ^65, ^1

65:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _82 = is_tagged_tuple _31, `2`, `ok`
  br _82, ^79, ^67

79:
  %% Argument types:
  %%    _31 => {'ok', any()}
  %% Aliased:
  %%    _31
  _32 = get_tuple_element _31, `1`

  %% compile_SUITE.erl:2051
  %% Aliased:
  %%    _32
  _9 = call (`erlang`:`binary_to_list`/1), _32

  %% Aliased:
  %%    _9
  _68 = succeeded:body _9
  br _68, ^68, ^1

68:
  %% compile_SUITE.erl:2051
  %% Aliased:
  %%    _9
  Lines = call (`string`:`split`/3), _9, `"\n"`, `all`

  %% Aliased:
  %%    Lines
  _69 = succeeded:body Lines
  br _69, ^69, ^1

69:
  %% compile_SUITE.erl:2052
  %% Result type:
  %%    map()
  %% Aliased:
  %%    Lines
  ResultTypes = call (`get_result_types`/1), Lines

  %% Aliased:
  %%    ResultTypes
  _70 = succeeded:body ResultTypes
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    ResultTypes => map()
  %% Aliased:
  %%    ResultTypes
  _34 = put_list ResultTypes, `[]`

  %% compile_SUITE.erl:2053
  %% Unique:
  %%    _34
  _41 = call (`io`:`format`/2), `"Calls: ~p~n"`, _34

  %% Aliased:
  %%    _41
  _71 = succeeded:body _41
  br _71, ^71, ^1

71:
  %% Aliased:
  %%    ResultTypes
  _18 = make_fun (`'-types_pp/1-fun-0-'`/2), ResultTypes

  %% compile_SUITE.erl:2088
  %% Aliased:
  %%    _18
  _44 = call (`lists`:`foreach`/2), _18, `[{make_atom,"'an_atom'"},
  {make_number,"number()"},
  {make_float,"3.14"},
  {make_integer,"17"},
  {make_integer_range,"0..3"},
  {make_nil,"nil()"},
  {make_list,"list(any())"},
  {make_list_of_ints,"list(integer())"},
  {make_maybe_improper_list,"maybe_improper_list(any(), any())"},
  {make_nonempty_list,"nonempty_list(any())"},
  {make_nonempty_improper_list,"nonempty_improper_list(any(), ''end'')"},
  {make_empty_map,"#{}"},
  {make_map,"map()"},
  {make_map_known_types,"#{integer()=>float()}"},
  {make_fun_unknown_arity_known_type,"fun((...) -> number())"},
  {make_fun_known_arity_known_type,"fun((_, _) -> number())"},
  {make_fun_unknown_arity_unknown_type,"fun()"},
  {make_fun_known_arity_unknown_type,"fun((_, _))"},
  {make_unconstrained_tuple,"{...}"},
  {make_known_size_tuple,"{any(), any(), any(), any(), any()}"},
  {make_inexact_tuple,"{any(), any(), any(), ...}"},
  {make_union,"'foo' | nonempty_list(1..3) | number(3, 7) | {'tag0', 1, 2} | {'tag1', 3, 4} | bitstring(8)"},
  {make_bitstring,"bitstring(8)"},
  {make_none,"none()"}]`

  %% Aliased:
  %%    _44
  _72 = succeeded:body _44
  br _72, ^72, ^1

72:
  %% compile_SUITE.erl:2098
  %% Aliased:
  %%    TargetDir
  _40 = call (`file`:`del_dir_r`/1), TargetDir

  %% Aliased:
  %%    _40
  _73 = succeeded:body _40
  br _73, ^73, ^1

73:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _77 = bif:'=:=' _40, `ok`
  br _77, ^76, ^75

76:
  %% Result type:
  %%    'ok'
  ret `ok`

75:
  %% compile_SUITE.erl:2098
  %% Aliased:
  %%    _40
  _45 = match_fail `badmatch`, _40

  %% Unique:
  %%    _45
  _78 = succeeded:body _45
  br ^1

67:
  %% compile_SUITE.erl:2050
  %% Aliased:
  %%    _31
  _46 = match_fail `badmatch`, _31

  %% Unique:
  %%    _46
  _85 = succeeded:body _46
  br ^1

64:
  %% compile_SUITE.erl:2049
  %% Aliased:
  %%    _28
  _47 = match_fail `badmatch`, _28

  %% Unique:
  %%    _47
  _92 = succeeded:body _47
  br ^1

61:
  %% compile_SUITE.erl:2047
  %% Aliased:
  %%    _24
  _48 = match_fail `badmatch`, _24

  %% Unique:
  %%    _48
  _95 = succeeded:body _48
  br ^1

52:
  %% compile_SUITE.erl:2041
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-types_pp/1-',1}}
  _49 = match_fail `function_clause`, _0

  %% Unique:
  %%    _49
  _96 = succeeded:body _49
  br ^1

1:
  _50 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _50
}

%% compile_SUITE.erl:2104
%% Counter = 6
%% bs_ensure_opt: true
function `compile_SUITE`:`get_result_types`(_0) {
0:
  %% compile_SUITE.erl:2105
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _0
  _2 = call (`get_result_types`/3), _0, `none`, `#{}`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:2107
%% Counter = 223
%% bs_ensure_opt: true
%% Parameters
%%    _2 =>
%%     map()
function `compile_SUITE`:`get_result_types`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _0
  _219 = is_nonempty_list _0
  br _219, ^219, ^107

219:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _23 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _22 = get_tl _0

  %% Aliased:
  %%    _23
  _185 = is_nonempty_list _23
  br _185, ^185, ^108

185:
  %% Argument types:
  %%    _23 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _23
  _46 = get_hd _23

  %% Argument types:
  %%    _23 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _23
  _45 = get_tl _23

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _184 = bif:'=:=' _46, `32`
  br _184, ^183, ^108

183:
  %% Aliased:
  %%    _45
  _182 = is_nonempty_list _45
  br _182, ^182, ^108

182:
  %% Argument types:
  %%    _45 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _45
  _48 = get_hd _45

  %% Argument types:
  %%    _45 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _45
  _47 = get_tl _45

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _181 = bif:'=:=' _48, `32`
  br _181, ^180, ^108

180:
  %% Aliased:
  %%    _47
  _179 = is_nonempty_list _47
  br _179, ^179, ^108

179:
  %% Argument types:
  %%    _47 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _47
  _50 = get_hd _47

  %% Argument types:
  %%    _47 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _47
  _49 = get_tl _47

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _178 = bif:'=:=' _50, `37`
  br _178, ^177, ^108

177:
  %% Aliased:
  %%    _49
  _176 = is_nonempty_list _49
  br _176, ^176, ^108

176:
  %% Argument types:
  %%    _49 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _49
  _52 = get_hd _49

  %% Argument types:
  %%    _49 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _49
  _51 = get_tl _49

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _175 = bif:'=:=' _52, `37`
  br _175, ^174, ^108

174:
  %% Aliased:
  %%    _51
  _173 = is_nonempty_list _51
  br _173, ^173, ^108

173:
  %% Argument types:
  %%    _51 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _51
  _54 = get_hd _51

  %% Argument types:
  %%    _51 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _51
  _53 = get_tl _51

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _172 = bif:'=:=' _54, `32`
  br _172, ^171, ^108

171:
  %% Aliased:
  %%    _53
  _170 = is_nonempty_list _53
  br _170, ^170, ^108

170:
  %% Argument types:
  %%    _53 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _53
  _56 = get_hd _53

  %% Argument types:
  %%    _53 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _53
  _55 = get_tl _53

  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _169 = bif:'=:=' _56, `82`
  br _169, ^168, ^108

168:
  %% Aliased:
  %%    _55
  _167 = is_nonempty_list _55
  br _167, ^167, ^108

167:
  %% Argument types:
  %%    _55 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _55
  _58 = get_hd _55

  %% Argument types:
  %%    _55 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _55
  _57 = get_tl _55

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _166 = bif:'=:=' _58, `101`
  br _166, ^165, ^108

165:
  %% Aliased:
  %%    _57
  _164 = is_nonempty_list _57
  br _164, ^164, ^108

164:
  %% Argument types:
  %%    _57 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _57
  _60 = get_hd _57

  %% Argument types:
  %%    _57 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _57
  _59 = get_tl _57

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _163 = bif:'=:=' _60, `115`
  br _163, ^162, ^108

162:
  %% Aliased:
  %%    _59
  _161 = is_nonempty_list _59
  br _161, ^161, ^108

161:
  %% Argument types:
  %%    _59 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _59
  _62 = get_hd _59

  %% Argument types:
  %%    _59 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _59
  _61 = get_tl _59

  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _160 = bif:'=:=' _62, `117`
  br _160, ^159, ^108

159:
  %% Aliased:
  %%    _61
  _158 = is_nonempty_list _61
  br _158, ^158, ^108

158:
  %% Argument types:
  %%    _61 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _61
  _64 = get_hd _61

  %% Argument types:
  %%    _61 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _61
  _63 = get_tl _61

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _157 = bif:'=:=' _64, `108`
  br _157, ^156, ^108

156:
  %% Aliased:
  %%    _63
  _155 = is_nonempty_list _63
  br _155, ^155, ^108

155:
  %% Argument types:
  %%    _63 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _63
  _66 = get_hd _63

  %% Argument types:
  %%    _63 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _63
  _65 = get_tl _63

  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _154 = bif:'=:=' _66, `116`
  br _154, ^153, ^108

153:
  %% Aliased:
  %%    _65
  _152 = is_nonempty_list _65
  br _152, ^152, ^108

152:
  %% Argument types:
  %%    _65 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _65
  _68 = get_hd _65

  %% Argument types:
  %%    _65 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _65
  _67 = get_tl _65

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _151 = bif:'=:=' _68, `32`
  br _151, ^150, ^108

150:
  %% Aliased:
  %%    _67
  _149 = is_nonempty_list _67
  br _149, ^149, ^108

149:
  %% Argument types:
  %%    _67 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _67
  _70 = get_hd _67

  %% Argument types:
  %%    _67 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _67
  _69 = get_tl _67

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _148 = bif:'=:=' _70, `116`
  br _148, ^147, ^108

147:
  %% Aliased:
  %%    _69
  _146 = is_nonempty_list _69
  br _146, ^146, ^108

146:
  %% Argument types:
  %%    _69 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _69
  _72 = get_hd _69

  %% Argument types:
  %%    _69 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _69
  _71 = get_tl _69

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _145 = bif:'=:=' _72, `121`
  br _145, ^144, ^108

144:
  %% Aliased:
  %%    _71
  _143 = is_nonempty_list _71
  br _143, ^143, ^108

143:
  %% Argument types:
  %%    _71 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _71
  _74 = get_hd _71

  %% Argument types:
  %%    _71 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _71
  _73 = get_tl _71

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _142 = bif:'=:=' _74, `112`
  br _142, ^141, ^108

141:
  %% Aliased:
  %%    _73
  _140 = is_nonempty_list _73
  br _140, ^140, ^108

140:
  %% Argument types:
  %%    _73 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _73
  _76 = get_hd _73

  %% Argument types:
  %%    _73 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _73
  _75 = get_tl _73

  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _139 = bif:'=:=' _76, `101`
  br _139, ^138, ^108

138:
  %% Aliased:
  %%    _75
  _137 = is_nonempty_list _75
  br _137, ^137, ^108

137:
  %% Argument types:
  %%    _75 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _75
  _78 = get_hd _75

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _136 = bif:'=:=' _78, `58`
  br _136, ^135, ^108

135:
  %% Aliased:
  %%    _22
  _134 = is_nonempty_list _22
  br _134, ^134, ^108

134:
  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _80 = get_hd _22

  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _79 = get_tl _22

  %% Aliased:
  %%    _80
  _133 = is_nonempty_list _80
  br _133, ^133, ^108

133:
  %% Argument types:
  %%    _80 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _80
  _82 = get_hd _80

  %% Argument types:
  %%    _80 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _80
  _81 = get_tl _80

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _132 = bif:'=:=' _82, `32`
  br _132, ^131, ^108

131:
  %% Aliased:
  %%    _81
  _130 = is_nonempty_list _81
  br _130, ^130, ^108

130:
  %% Argument types:
  %%    _81 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _81
  _84 = get_hd _81

  %% Argument types:
  %%    _81 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _81
  _83 = get_tl _81

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _129 = bif:'=:=' _84, `32`
  br _129, ^128, ^108

128:
  %% Aliased:
  %%    _83
  _127 = is_nonempty_list _83
  br _127, ^127, ^108

127:
  %% Argument types:
  %%    _83 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _83
  _86 = get_hd _83

  %% Argument types:
  %%    _83 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _83
  _85 = get_tl _83

  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _126 = bif:'=:=' _86, `37`
  br _126, ^125, ^108

125:
  %% Aliased:
  %%    _85
  _124 = is_nonempty_list _85
  br _124, ^124, ^108

124:
  %% Argument types:
  %%    _85 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _85
  _88 = get_hd _85

  %% Argument types:
  %%    _85 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _85
  _87 = get_tl _85

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _123 = bif:'=:=' _88, `37`
  br _123, ^122, ^108

122:
  %% Aliased:
  %%    _87
  _121 = is_nonempty_list _87
  br _121, ^121, ^108

121:
  %% Argument types:
  %%    _87 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _87
  _90 = get_hd _87

  %% Argument types:
  %%    _87 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _87
  _89 = get_tl _87

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _120 = bif:'=:=' _90, `32`
  br _120, ^119, ^108

119:
  %% Aliased:
  %%    _89
  _118 = is_nonempty_list _89
  br _118, ^118, ^108

118:
  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _92 = get_hd _89

  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _91 = get_tl _89

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _117 = bif:'=:=' _92, `32`
  br _117, ^116, ^108

116:
  %% Aliased:
  %%    _91
  _115 = is_nonempty_list _91
  br _115, ^115, ^108

115:
  %% Argument types:
  %%    _91 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _91
  _94 = get_hd _91

  %% Argument types:
  %%    _91 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _91
  _93 = get_tl _91

  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _114 = bif:'=:=' _94, `32`
  br _114, ^113, ^108

113:
  %% Aliased:
  %%    _93
  _112 = is_nonempty_list _93
  br _112, ^112, ^108

112:
  %% Argument types:
  %%    _93 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _93
  _96 = get_hd _93

  %% Argument types:
  %%    _93 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _93
  _95 = get_tl _93

  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _111 = bif:'=:=' _96, `32`
  br _111, ^110, ^108

110:
  %% compile_SUITE.erl:2108
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _2, 
  %%    _79, 
  %%    _95
  _97 = call (`get_result_types`/3), _79, _95, _2

  %% Aliased:
  %%    _97
  _109 = succeeded:body _97
  br _109, ^109, ^1

109:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _97
  ret _97

108:
  %% compile_SUITE.erl:2110
  %% Aliased:
  %%    _23
  Split = call (`string`:`split`/2), _23, `"="`

  %% Aliased:
  %%    Split
  _186 = succeeded:body Split
  br _186, ^186, ^1

186:
  %% Aliased:
  %%    Split
  _217 = is_nonempty_list Split
  br _217, ^217, ^188

217:
  %% Argument types:
  %%    Split => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    Split
  _24 = get_tl Split

  %% Aliased:
  %%    _24
  _216 = is_nonempty_list _24
  br _216, ^216, ^188

216:
  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _27 = get_hd _24

  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _26 = get_tl _24

  %% Aliased:
  %%    _27
  _215 = is_nonempty_list _27
  br _215, ^215, ^188

215:
  %% Argument types:
  %%    _27 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _27
  _29 = get_hd _27

  %% Argument types:
  %%    _27 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _27
  _28 = get_tl _27

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _214 = bif:'=:=' _29, `32`
  br _214, ^213, ^188

213:
  %% Aliased:
  %%    _28
  _212 = is_nonempty_list _28
  br _212, ^212, ^188

212:
  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _31 = get_hd _28

  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _30 = get_tl _28

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _211 = bif:'=:=' _31, `99`
  br _211, ^210, ^188

210:
  %% Aliased:
  %%    _30
  _209 = is_nonempty_list _30
  br _209, ^209, ^188

209:
  %% Argument types:
  %%    _30 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _30
  _33 = get_hd _30

  %% Argument types:
  %%    _30 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _30
  _32 = get_tl _30

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _208 = bif:'=:=' _33, `97`
  br _208, ^207, ^188

207:
  %% Aliased:
  %%    _32
  _206 = is_nonempty_list _32
  br _206, ^206, ^188

206:
  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _35 = get_hd _32

  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _34 = get_tl _32

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _205 = bif:'=:=' _35, `108`
  br _205, ^204, ^188

204:
  %% Aliased:
  %%    _34
  _203 = is_nonempty_list _34
  br _203, ^203, ^188

203:
  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _37 = get_hd _34

  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _36 = get_tl _34

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _202 = bif:'=:=' _37, `108`
  br _202, ^201, ^188

201:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _200 = bif:'=:=' _26, `[]`
  br _200, ^200, ^188

200:
  %% compile_SUITE.erl:2113
  %% Aliased:
  %%    _36
  _38 = call (`string`:`split`/3), _36, `"`"`, `all`

  %% Aliased:
  %%    _38
  _189 = succeeded:body _38
  br _189, ^189, ^1

189:
  %% Aliased:
  %%    _38
  _199 = is_nonempty_list _38
  br _199, ^199, ^191

199:
  %% Argument types:
  %%    _38 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _38
  _39 = get_tl _38

  %% Aliased:
  %%    _39
  _198 = is_nonempty_list _39
  br _198, ^198, ^191

198:
  %% Argument types:
  %%    _39 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _39
  _42 = get_hd _39

  %% Argument types:
  %%    _39 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _39
  _41 = get_tl _39

  %% Aliased:
  %%    _41
  _197 = is_nonempty_list _41
  br _197, ^197, ^191

197:
  %% Argument types:
  %%    _41 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _41
  _43 = get_tl _41

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _196 = bif:'=:=' _43, `[]`
  br _196, ^194, ^191

194:
  %% compile_SUITE.erl:2115
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _42
  _100 = put_map `assoc`, _2, _42, _1
  br ^187

191:
  br ^187

188:
  br ^187

187:
  _6 = phi { _2, ^188 }, { _2, ^191 }, { _100, ^194 }

  %% compile_SUITE.erl:2122
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _1, 
  %%    _6, 
  %%    _22
  _102 = call (`get_result_types`/3), _22, _1, _6

  %% Aliased:
  %%    _102
  _218 = succeeded:body _102
  br _218, ^218, ^1

218:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _102
  ret _102

107:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _220 = bif:'=:=' _0, `[]`
  br _220, ^220, ^106

220:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _2
  ret _2

106:
  %% compile_SUITE.erl:2107
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-get_result_types/3-',3}}
  _103 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _103
  _221 = succeeded:body _103
  br ^1

1:
  _104 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _104
}

%% compile_SUITE.erl:2127
%% Counter = 78
%% bs_ensure_opt: true
function `compile_SUITE`:`bs_init_writable`(_0) {
0:
  %% compile_SUITE.erl:2128
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _33 = succeeded:body DataDir
  br _33, ^33, ^1

33:
  %% compile_SUITE.erl:2129
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _34 = succeeded:body PrivDir
  br _34, ^34, ^1

34:
  %% compile_SUITE.erl:2130
  %% Aliased:
  %%    DataDir
  InFile = call (`filename`:`join`/2), DataDir, `"bs_init_writable.erl"`

  %% Aliased:
  %%    InFile
  _35 = succeeded:body InFile
  br _35, ^35, ^1

35:
  %% compile_SUITE.erl:2131
  %% Aliased:
  %%    PrivDir
  OutDir = call (`filename`:`join`/2), PrivDir, `"bs_init_writable"`

  %% Aliased:
  %%    OutDir
  _36 = succeeded:body OutDir
  br _36, ^36, ^1

36:
  %% compile_SUITE.erl:2132
  %% Aliased:
  %%    OutDir
  OutFile = call (`filename`:`join`/2), OutDir, `"bs_init_writable.S"`

  %% Aliased:
  %%    OutFile
  _37 = succeeded:body OutFile
  br _37, ^37, ^1

37:
  %% compile_SUITE.erl:2133
  %% Aliased:
  %%    OutDir
  _15 = call (`file`:`make_dir`/1), OutDir

  %% Aliased:
  %%    _15
  _38 = succeeded:body _15
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _75 = bif:'=:=' _15, `ok`
  br _75, ^74, ^40

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    OutDir
  _16 = put_tuple `outdir`, OutDir

  %% Argument types:
  %%    _16 => {'outdir', any()}
  %% Unique:
  %%    _16
  _17 = put_list _16, `[]`

  %% Argument types:
  %%    _17 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _17
  _18 = put_list `'S'`, _17

  %% compile_SUITE.erl:2134
  %% Aliased:
  %%    InFile
  %% Unique:
  %%    _18
  _19 = call (`compile`:`file`/2), InFile, _18

  %% Aliased:
  %%    _19
  _41 = succeeded:body _19
  br _41, ^41, ^1

41:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _72 = bif:'=:=' _19, `{ok,bs_init_writable}`
  br _72, ^72, ^43

72:
  %% compile_SUITE.erl:2135
  %% Aliased:
  %%    OutFile
  _20 = call (`file`:`read_file`/1), OutFile

  %% Aliased:
  %%    _20
  _44 = succeeded:body _20
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _68 = is_tagged_tuple _20, `2`, `ok`
  br _68, ^65, ^46

65:
  %% Argument types:
  %%    _20 => {'ok', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `1`

  %% compile_SUITE.erl:2138
  %% Aliased:
  %%    _21
  _23 = call (`re`:`run`/3), _21, `"({test,is_bitstr,.+})"`, `[global,multiline,{capture,all_but_first,list}]`

  %% Aliased:
  %%    _23
  _47 = succeeded:body _23
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _63 = bif:'=:=' _23, `nomatch`
  br _63, ^62, ^49

62:
  %% compile_SUITE.erl:2140
  %% Aliased:
  %%    _21
  _24 = call (`re`:`run`/3), _21, `"({test,is_binary,.+})"`, `[global,multiline,{capture,all_but_first,list}]`

  %% Aliased:
  %%    _24
  _50 = succeeded:body _24
  br _50, ^50, ^1

50:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _60 = bif:'=:=' _24, `nomatch`
  br _60, ^59, ^52

59:
  %% compile_SUITE.erl:2141
  %% Aliased:
  %%    OutDir
  _14 = call (`file`:`del_dir_r`/1), OutDir

  %% Aliased:
  %%    _14
  _53 = succeeded:body _14
  br _53, ^53, ^1

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _57 = bif:'=:=' _14, `ok`
  br _57, ^56, ^55

56:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _14
  ret _14

55:
  %% compile_SUITE.erl:2141
  %% Aliased:
  %%    _14
  _25 = match_fail `badmatch`, _14

  %% Unique:
  %%    _25
  _58 = succeeded:body _25
  br ^1

52:
  %% compile_SUITE.erl:2140
  %% Aliased:
  %%    _24
  _26 = match_fail `badmatch`, _24

  %% Unique:
  %%    _26
  _61 = succeeded:body _26
  br ^1

49:
  %% compile_SUITE.erl:2138
  %% Aliased:
  %%    _23
  _27 = match_fail `badmatch`, _23

  %% Unique:
  %%    _27
  _64 = succeeded:body _27
  br ^1

46:
  %% compile_SUITE.erl:2135
  %% Aliased:
  %%    _20
  _28 = match_fail `badmatch`, _20

  %% Unique:
  %%    _28
  _71 = succeeded:body _28
  br ^1

43:
  %% compile_SUITE.erl:2134
  %% Aliased:
  %%    _19
  _29 = match_fail `badmatch`, _19

  %% Unique:
  %%    _29
  _73 = succeeded:body _29
  br ^1

40:
  %% compile_SUITE.erl:2133
  %% Aliased:
  %%    _15
  _30 = match_fail `badmatch`, _15

  %% Unique:
  %%    _30
  _76 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% compile_SUITE.erl:2149
%% Counter = 108
%% bs_ensure_opt: true
function `compile_SUITE`:`annotations_pp`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _45 = bif:is_list _0
  br _45, ^45, ^44

45:
  %% compile_SUITE.erl:2150
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _46 = succeeded:body DataDir
  br _46, ^46, ^1

46:
  %% compile_SUITE.erl:2151
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _47 = succeeded:body PrivDir
  br _47, ^47, ^1

47:
  %% compile_SUITE.erl:2152
  %% Aliased:
  %%    PrivDir
  TargetDir = call (`filename`:`join`/2), PrivDir, `types_pp`

  %% Aliased:
  %%    TargetDir
  _48 = succeeded:body TargetDir
  br _48, ^48, ^1

48:
  %% compile_SUITE.erl:2153
  %% Aliased:
  %%    DataDir
  File = call (`filename`:`join`/2), DataDir, `"annotations_pp.erl"`

  %% Aliased:
  %%    File
  _49 = succeeded:body File
  br _49, ^49, ^1

49:
  %% compile_SUITE.erl:2154
  %% Aliased:
  %%    TargetDir
  Listing = call (`filename`:`join`/2), TargetDir, `"annotations_pp.ssaopt"`

  %% Aliased:
  %%    Listing
  _50 = succeeded:body Listing
  br _50, ^50, ^1

50:
  %% compile_SUITE.erl:2155
  %% Aliased:
  %%    TargetDir
  _20 = call (`file`:`make_dir`/1), TargetDir

  %% Aliased:
  %%    _20
  _51 = succeeded:body _20
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _104 = bif:'=:=' _20, `ok`
  br _104, ^103, ^53

103:
  %% Argument types:
  %%    
  %% Aliased:
  %%    TargetDir
  _21 = put_tuple `outdir`, TargetDir

  %% Argument types:
  %%    _21 => {'outdir', any()}
  %% Unique:
  %%    _21
  _22 = put_list _21, `[]`

  %% Argument types:
  %%    _22 => nonempty_list({'outdir', any()})
  %% Unique:
  %%    _22
  _23 = put_list `dssaopt`, _22

  %% compile_SUITE.erl:2157
  %% Aliased:
  %%    File
  %% Unique:
  %%    _23
  _24 = call (`compile`:`file`/2), File, _23

  %% Aliased:
  %%    _24
  _54 = succeeded:body _24
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _99 = is_tagged_tuple _24, `2`, `ok`
  br _99, ^96, ^56

96:
  %% compile_SUITE.erl:2158
  %% Aliased:
  %%    Listing
  _27 = call (`file`:`read_file`/1), Listing

  %% Aliased:
  %%    _27
  _57 = succeeded:body _27
  br _57, ^57, ^1

57:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _92 = is_tagged_tuple _27, `2`, `ok`
  br _92, ^89, ^59

89:
  %% Argument types:
  %%    _27 => {'ok', any()}
  %% Aliased:
  %%    _27
  _28 = get_tuple_element _27, `1`

  %% compile_SUITE.erl:2159
  %% Aliased:
  %%    _28
  _9 = call (`erlang`:`binary_to_list`/1), _28

  %% Aliased:
  %%    _9
  _60 = succeeded:body _9
  br _60, ^60, ^1

60:
  %% compile_SUITE.erl:2159
  %% Aliased:
  %%    _9
  Lines = call (`string`:`split`/3), _9, `"\n"`, `all`

  %% Aliased:
  %%    Lines
  _61 = succeeded:body Lines
  br _61, ^61, ^1

61:
  %% compile_SUITE.erl:2161
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    Lines
  ResultTypes = call (`get_annotations`/2), `"  %% Result type:"`, Lines

  %% Aliased:
  %%    ResultTypes
  _62 = succeeded:body ResultTypes
  br _62, ^62, ^1

62:
  %% compile_SUITE.erl:2162
  %% Argument types:
  %%    ResultTypes => list(any())
  %% Aliased:
  %%    ResultTypes
  _30 = bif:length ResultTypes

  %% Argument types:
  %%    _30 => 0..288230376151711743
  %% Unique:
  %%    _30
  _87 = bif:'=:=' _30, `10`
  br _87, ^86, ^65

86:
  %% compile_SUITE.erl:2164
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    Lines
  Uniques = call (`get_annotations`/2), `"  %% Unique:"`, Lines

  %% Aliased:
  %%    Uniques
  _66 = succeeded:body Uniques
  br _66, ^66, ^1

66:
  %% compile_SUITE.erl:2165
  %% Argument types:
  %%    Uniques => list(any())
  %% Aliased:
  %%    Uniques
  _31 = bif:length Uniques

  %% Argument types:
  %%    _31 => 0..288230376151711743
  %% Unique:
  %%    _31
  _84 = bif:'=:=' _31, `10`
  br _84, ^83, ^69

83:
  %% compile_SUITE.erl:2167
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    Lines
  Aliased = call (`get_annotations`/2), `"  %% Aliased:"`, Lines

  %% Aliased:
  %%    Aliased
  _70 = succeeded:body Aliased
  br _70, ^70, ^1

70:
  %% compile_SUITE.erl:2168
  %% Argument types:
  %%    Aliased => list(any())
  %% Aliased:
  %%    Aliased
  _32 = bif:length Aliased

  %% Argument types:
  %%    _32 => 0..288230376151711743
  %% Unique:
  %%    _32
  _81 = bif:'=:=' _32, `13`
  br _81, ^80, ^73

80:
  %% compile_SUITE.erl:2170
  %% Aliased:
  %%    TargetDir
  _33 = call (`file`:`del_dir_r`/1), TargetDir

  %% Aliased:
  %%    _33
  _74 = succeeded:body _33
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _78 = bif:'=:=' _33, `ok`
  br _78, ^77, ^76

77:
  %% Result type:
  %%    'ok'
  ret `ok`

76:
  %% compile_SUITE.erl:2170
  %% Aliased:
  %%    _33
  _34 = match_fail `badmatch`, _33

  %% Unique:
  %%    _34
  _79 = succeeded:body _34
  br ^1

73:
  %% compile_SUITE.erl:2168
  %% Unique:
  %%    _32
  _35 = match_fail `badmatch`, _32

  %% Unique:
  %%    _35
  _82 = succeeded:body _35
  br ^1

69:
  %% compile_SUITE.erl:2165
  %% Unique:
  %%    _31
  _36 = match_fail `badmatch`, _31

  %% Unique:
  %%    _36
  _85 = succeeded:body _36
  br ^1

65:
  %% compile_SUITE.erl:2162
  %% Unique:
  %%    _30
  _37 = match_fail `badmatch`, _30

  %% Unique:
  %%    _37
  _88 = succeeded:body _37
  br ^1

59:
  %% compile_SUITE.erl:2158
  %% Aliased:
  %%    _27
  _38 = match_fail `badmatch`, _27

  %% Unique:
  %%    _38
  _95 = succeeded:body _38
  br ^1

56:
  %% compile_SUITE.erl:2157
  %% Aliased:
  %%    _24
  _39 = match_fail `badmatch`, _24

  %% Unique:
  %%    _39
  _102 = succeeded:body _39
  br ^1

53:
  %% compile_SUITE.erl:2155
  %% Aliased:
  %%    _20
  _40 = match_fail `badmatch`, _20

  %% Unique:
  %%    _40
  _105 = succeeded:body _40
  br ^1

44:
  %% compile_SUITE.erl:2149
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-annotations_pp/1-',1}}
  _41 = match_fail `function_clause`, _0

  %% Unique:
  %%    _41
  _106 = succeeded:body _41
  br ^1

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _42
}

%% compile_SUITE.erl:2173
%% Counter = 69
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(32..121)
function `compile_SUITE`:`get_annotations`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  _66 = is_nonempty_list _1
  br _66, ^66, ^36

66:
  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _11 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _10 = get_tl _1

  %% Aliased:
  %%    _10
  _64 = is_nonempty_list _10
  br _64, ^64, ^37

64:
  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _13 = get_hd _10

  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _12 = get_tl _10

  %% Aliased:
  %%    _13
  _63 = is_nonempty_list _13
  br _63, ^63, ^37

63:
  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _15 = get_hd _13

  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _14 = get_tl _13

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _62 = bif:'=:=' _15, `32`
  br _62, ^61, ^37

61:
  %% Aliased:
  %%    _14
  _60 = is_nonempty_list _14
  br _60, ^60, ^37

60:
  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _17 = get_hd _14

  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _16 = get_tl _14

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _59 = bif:'=:=' _17, `32`
  br _59, ^58, ^37

58:
  %% Aliased:
  %%    _16
  _57 = is_nonempty_list _16
  br _57, ^57, ^37

57:
  %% Argument types:
  %%    _16 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _16
  _19 = get_hd _16

  %% Argument types:
  %%    _16 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _16
  _18 = get_tl _16

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _56 = bif:'=:=' _19, `37`
  br _56, ^55, ^37

55:
  %% Aliased:
  %%    _18
  _54 = is_nonempty_list _18
  br _54, ^54, ^37

54:
  %% Argument types:
  %%    _18 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _18
  _21 = get_hd _18

  %% Argument types:
  %%    _18 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _18
  _20 = get_tl _18

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _53 = bif:'=:=' _21, `37`
  br _53, ^52, ^37

52:
  %% Aliased:
  %%    _20
  _51 = is_nonempty_list _20
  br _51, ^51, ^37

51:
  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _23 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _22 = get_tl _20

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _50 = bif:'=:=' _23, `32`
  br _50, ^49, ^37

49:
  %% Aliased:
  %%    _22
  _48 = is_nonempty_list _22
  br _48, ^48, ^37

48:
  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _25 = get_hd _22

  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _24 = get_tl _22

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _47 = bif:'=:=' _25, `32`
  br _47, ^46, ^37

46:
  %% Aliased:
  %%    _24
  _45 = is_nonempty_list _24
  br _45, ^45, ^37

45:
  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _27 = get_hd _24

  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _26 = get_tl _24

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _44 = bif:'=:=' _27, `32`
  br _44, ^43, ^37

43:
  %% Aliased:
  %%    _26
  _42 = is_nonempty_list _26
  br _42, ^42, ^37

42:
  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _29 = get_hd _26

  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _28 = get_tl _26

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _41 = bif:'=:=' _29, `32`
  br _41, ^40, ^37

40:
  %% Argument types:
  %%    _0 => nonempty_list(32..121)
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _0
  _38 = bif:'=:=' _11, _0
  br _38, ^38, ^37

38:
  %% compile_SUITE.erl:2174
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _0
  _2 = call (`get_annotations`/2), _0, _12

  %% Aliased:
  %%    _2
  _39 = succeeded:body _2
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    _2 => list(any())
  %% Aliased:
  %%    _2, 
  %%    _28
  _30 = put_list _28, _2
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _30
  ret _30

37:
  %% compile_SUITE.erl:2176
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _0
  _31 = call (`get_annotations`/2), _0, _10

  %% Aliased:
  %%    _31
  _65 = succeeded:body _31
  br _65, ^65, ^1

65:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _31
  ret _31

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _67 = bif:'=:=' _1, `[]`
  br _67, ^67, ^35

67:
  %% Result type:
  %%    nil()
  ret `[]`

35:
  %% compile_SUITE.erl:2173
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-get_annotations/2-',2}}
  _32 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _32
  _68 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% compile_SUITE.erl:2180
%% Counter = 113
%% bs_ensure_opt: true
function `compile_SUITE`:`option_order`(_0) {
0:
  _40 = make_fun (`'-option_order/1-fun-6-'`/1)

  %% Result type:
  %%    'ok'
  _32 = make_fun (`'-option_order/1-fun-5-'`/1)

  %% Result type:
  %%    'ok'
  _28 = make_fun (`'-option_order/1-fun-4-'`/1)
  _24 = make_fun (`'-option_order/1-fun-3-'`/1)

  %% Result type:
  %%    'ok'
  _16 = make_fun (`'-option_order/1-fun-2-'`/1)

  %% Result type:
  %%    'ok'
  _12 = make_fun (`'-option_order/1-fun-1-'`/1)
  _8 = make_fun (`'-option_order/1-fun-0-'`/1)

  %% Argument types:
  %%    _8 => fun((_))
  %% Aliased:
  %%    _8
  _65 = put_tuple `records7`, `<<"-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>`, `[{"ERL_COMPILER_OPTIONS","no_strict_record_tests"}]`, `[no_strict_record_tests,strict_record_tests]`, _8

  %% Argument types:
  %%    _65 => {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))}
  %% Unique:
  %%    _65
  _66 = put_list _65, `[]`

  %% Argument types:
  %%    _12 => fun((_) -> 'ok')
  %% Aliased:
  %%    _12
  _67 = put_tuple `records6`, `<<"-compile(no_strict_record_tests).\n-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>`, `[{"ERL_COMPILER_OPTIONS","strict_record_tests"}]`, `[]`, _12

  %% Argument types:
  %%    _67 => {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')}
  %%    _66 => nonempty_list({'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))})
  %% Unique:
  %%    _66, 
  %%    _67
  _68 = put_list _67, _66

  %% Argument types:
  %%    _16 => fun((_) -> 'ok')
  %% Aliased:
  %%    _16
  _69 = put_tuple `records5`, `<<"-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>`, `[{"ERL_COMPILER_OPTIONS","strict_record_tests"}]`, `[no_strict_record_tests]`, _16

  %% Argument types:
  %%    _69 => {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')}
  %%    _68 => nonempty_list({'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))})
  %% Unique:
  %%    _68, 
  %%    _69
  _70 = put_list _69, _68

  %% Argument types:
  %%    _24 => fun((_))
  %% Aliased:
  %%    _24
  _71 = put_tuple `records4`, `<<"-record(r, {x,y}).\nrec_test(#r{x=X,y=Y}) -> X + Y.">>`, `[{"ERL_COMPILER_OPTIONS","strict_record_tests"}]`, `[]`, _24

  %% Argument types:
  %%    _71 => {'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))}
  %%    _70 => nonempty_list({'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))})
  %% Unique:
  %%    _70, 
  %%    _71
  _72 = put_list _71, _70

  %% Argument types:
  %%    _28 => fun((_) -> 'ok')
  %% Aliased:
  %%    _28
  _73 = put_tuple `records3`, `<<"-compile(no_strict_record_tests).\n-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>`, `[]`, `[strict_record_tests]`, _28

  %% Argument types:
  %%    _73 => {'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')}
  %%    _72 => nonempty_list({'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))})
  %% Unique:
  %%    _72, 
  %%    _73
  _74 = put_list _73, _72

  %% Argument types:
  %%    _32 => fun((_) -> 'ok')
  %% Aliased:
  %%    _32
  _75 = put_tuple `records2`, `<<"-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>`, `[]`, `[no_strict_record_tests]`, _32

  %% Argument types:
  %%    _75 => {'records2', bitstring(128), nil(), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')}
  %%    _74 => nonempty_list({'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')} | {'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))})
  %% Unique:
  %%    _74, 
  %%    _75
  _76 = put_list _75, _74

  %% Argument types:
  %%    _40 => fun((_))
  %% Aliased:
  %%    _40
  _77 = put_tuple `records1`, `<<"-record(r, {x,y}).\nrec_test(#r{x=X,y=Y}) -> X + Y.">>`, `[]`, `[strict_record_tests]`, _40

  %% Argument types:
  %%    _77 => {'records1', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_))}
  %%    _76 => nonempty_list({'records2', bitstring(128), nil(), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')} | {'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))})
  %% Unique:
  %%    _76, 
  %%    _77
  _78 = put_list _77, _76

  %% Argument types:
  %%    _78 => nonempty_list({'records1', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_))} | {'records2', bitstring(128), nil(), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')} | {'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))})
  %% Unique:
  %%    _78
  _79 = put_list `{spec5,<<"-compile([warn_missing_spec,nowarn_missing_spec]).\nfoo() -> ok.">>,
        [{"ERL_COMPILER_OPTIONS","nowarn_missing_spec"}],
        [warn_missing_spec],
        []}`, _78

  %% Argument types:
  %%    _79 => nonempty_list({'records1', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_))} | {'records2', bitstring(128), nil(), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')} | {'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))} | {'spec5', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nonempty_list('warn_missing_spec'), nil()})
  %% Unique:
  %%    _79
  _80 = put_list `{spec4,<<"-compile(warn_missing_spec).\nfoo() -> ok.">>,
        [{"ERL_COMPILER_OPTIONS","nowarn_missing_spec"}],
        [],
        {warnings,[{{2,1},erl_lint,{missing_spec,{foo,0}}}]}}`, _79

  %% Argument types:
  %%    _80 => nonempty_list({'records1', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_))} | {'records2', bitstring(128), nil(), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')} | {'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))} | {'spec4', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nil(), {'warnings', nonempty_list({{2, 1}, 'erl_lint', {'missing_spec', {'foo', 0}}})}} | {'spec5', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nonempty_list('warn_missing_spec'), nil()})
  %% Unique:
  %%    _80
  _81 = put_list `{spec3,<<"-compile(nowarn_missing_spec).\nfoo() -> ok.">>,
        [{"ERL_COMPILER_OPTIONS","nowarn_missing_spec"}],
        [warn_missing_spec],
        []}`, _80

  %% Argument types:
  %%    _81 => nonempty_list({'records1', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_))} | {'records2', bitstring(128), nil(), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')} | {'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))} | {'spec3', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nonempty_list('warn_missing_spec'), nil()} | {'spec4', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nil(), {'warnings', nonempty_list({{2, 1}, 'erl_lint', {'missing_spec', {'foo', 0}}})}} | {'spec5', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nonempty_list('warn_missing_spec'), nil()})
  %% Unique:
  %%    _81
  _82 = put_list `{spec2,<<"foo() -> ok.">>,
        [{"ERL_COMPILER_OPTIONS","warn_missing_spec"}],
        [nowarn_missing_spec],
        []}`, _81

  %% Argument types:
  %%    _82 => nonempty_list({'records1', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_))} | {'records2', bitstring(128), nil(), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')} | {'records4', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_list(67..95), nonempty_list(95..116)}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))} | {'spec2', bitstring(32), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nonempty_list('nowarn_missing_spec'), nil()} | {'spec3', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nonempty_list('warn_missing_spec'), nil()} | {'spec4', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nil(), {'warnings', nonempty_list({{2, 1}, 'erl_lint', {'missing_spec', {'foo', 0}}})}} | {'spec5', bitstring(8), nonempty_list({nonempty_list(67..95), nonempty_list(95..119)}), nonempty_list('warn_missing_spec'), nil()})
  %% Unique:
  %%    _82
  Ts = put_list `{spec1,<<"-compile(nowarn_missing_spec).\nfoo() -> ok.">>,[],
        [warn_missing_spec],
        []}`, _82

  %% compile_SUITE.erl:2317
  %% Aliased:
  %%    _0
  %% Unique:
  %%    Ts
  _102 = call (`run`/2), _0, Ts

  %% Aliased:
  %%    _102
  _105 = succeeded:body _102
  br _105, ^105, ^1

105:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _103 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _103
}

%% compile_SUITE.erl:2324
%% Counter = 86
%% bs_ensure_opt: true
%% Parameters
%%    _2 =>
%%     list('debug_info' | 'no_postopt')
function `compile_SUITE`:`compile_and_verify`(_0, _1, _2) {
0:
  %% compile_SUITE.erl:2325
  %% Aliased:
  %%    _0
  _3 = call (`filename`:`basename`/2), _0, `".erl"`

  %% Aliased:
  %%    _3
  _36 = succeeded:body _3
  br _36, ^36, ^1

36:
  %% compile_SUITE.erl:2325
  %% Aliased:
  %%    _3
  Mod = call (`erlang`:`list_to_atom`/1), _3

  %% Aliased:
  %%    Mod
  _37 = succeeded:body Mod
  br _37, ^37, ^1

37:
  %% compile_SUITE.erl:2326
  %% Aliased:
  %%    _0, 
  %%    _2
  _15 = call (`compile`:`file`/2), _0, _2

  %% Aliased:
  %%    _15
  _38 = succeeded:body _15
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _82 = is_tagged_tuple _15, `2`, `ok`
  br _82, ^79, ^40

79:
  %% Argument types:
  %%    _15 => {'ok', any()}
  %% Aliased:
  %%    _15
  _16 = get_tuple_element _15, `1`

  %% Argument types:
  %%    Mod => atom()
  %% Aliased:
  %%    _16
  %% Unique:
  %%    Mod
  _41 = bif:'=:=' _16, Mod
  br _41, ^41, ^40

41:
  %% compile_SUITE.erl:2328
  %% Aliased:
  %%    _1
  _18 = call (`beam_lib`:`chunks`/2), _1, `[compile_info]`

  %% Aliased:
  %%    _18
  _42 = succeeded:body _18
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _75 = is_tagged_tuple _18, `2`, `ok`
  br _75, ^72, ^44

72:
  %% Argument types:
  %%    _18 => {'ok', any()}
  %% Aliased:
  %%    _18
  _19 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _69 = bif:is_tuple _19
  br _69, ^69, ^44

69:
  %% Argument types:
  %%    _19 => {...}
  %% Aliased:
  %%    _19
  _70 = bif:tuple_size _19

  %% Argument types:
  %%    _70 => 0..16777215
  %% Unique:
  %%    _70
  _71 = bif:'=:=' _70, `2`
  br _71, ^68, ^44

68:
  %% Argument types:
  %%    _19 => {any(), any()}
  %% Aliased:
  %%    _19
  _21 = get_tuple_element _19, `1`

  %% Aliased:
  %%    _21
  _67 = is_nonempty_list _21
  br _67, ^67, ^44

67:
  %% Argument types:
  %%    _21 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _21
  _24 = get_hd _21

  %% Argument types:
  %%    _21 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _21
  _23 = get_tl _21

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _64 = is_tagged_tuple _24, `2`, `compile_info`
  br _64, ^61, ^44

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _60 = bif:'=:=' _23, `[]`
  br _60, ^60, ^44

60:
  %% Argument types:
  %%    _19 => {any(), any()}
  %% Aliased:
  %%    _19
  _22 = get_tuple_element _19, `0`

  %% Argument types:
  %%    Mod => atom()
  %% Aliased:
  %%    _22
  %% Unique:
  %%    Mod
  _45 = bif:'=:=' _22, Mod
  br _45, ^45, ^44

45:
  %% Argument types:
  %%    _24 => {'compile_info', any()}
  %% Aliased:
  %%    _24
  _25 = get_tuple_element _24, `1`

  %% compile_SUITE.erl:2329
  %% Aliased:
  %%    _25
  _27 = call (`lists`:`keyfind`/3), `options`, `1`, _25

  %% Aliased:
  %%    _27
  _46 = succeeded:body _27
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    _27 => 'false' | {'options', ...}
  %% Aliased:
  %%    _27
  %% Anno: #{constraints => tuple_arity}
  _56 = is_tagged_tuple _27, `2`, `options`
  br _56, ^53, ^48

53:
  %% Argument types:
  %%    _27 => {'options', any()}
  %% Aliased:
  %%    _27
  _28 = get_tuple_element _27, `1`

  %% Argument types:
  %%    _2 => list('debug_info' | 'no_postopt')
  %% Aliased:
  %%    _2, 
  %%    _28
  _51 = bif:'=:=' _28, _2
  br _51, ^51, ^50

51:
  %% Result type:
  %%    list('debug_info' | 'no_postopt')
  %% Aliased:
  %%    _28
  ret _28

50:
  %% compile_SUITE.erl:2330
  %% Aliased:
  %%    _28
  _30 = match_fail `badmatch`, _28

  %% Unique:
  %%    _30
  _52 = succeeded:body _30
  br ^1

48:
  %% compile_SUITE.erl:2329
  %% Aliased:
  %%    _27
  _31 = match_fail `badmatch`, _27

  %% Unique:
  %%    _31
  _59 = succeeded:body _31
  br ^1

44:
  %% compile_SUITE.erl:2327
  %% Aliased:
  %%    _18
  _32 = match_fail `badmatch`, _18

  %% Unique:
  %%    _32
  _78 = succeeded:body _32
  br ^1

40:
  %% compile_SUITE.erl:2326
  %% Aliased:
  %%    _15
  _33 = match_fail `badmatch`, _15

  %% Unique:
  %%    _33
  _85 = succeeded:body _33
  br ^1

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _34
}

%% compile_SUITE.erl:2332
%% Counter = 6
%% bs_ensure_opt: true
function `compile_SUITE`:`get_unique_beam_files`() {
0:
  %% compile_SUITE.erl:2333
  %% Result type:
  %%    list(any())
  _2 = call (`get_unique_files`/1), `".beam"`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:2335
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(46..114)
function `compile_SUITE`:`get_unique_files`(_0) {
0:
  %% compile_SUITE.erl:2336
  _2 = call (`code`:`which`/1), `compile_SUITE`

  %% Aliased:
  %%    _2
  _29 = succeeded:body _2
  br _29, ^29, ^1

29:
  %% compile_SUITE.erl:2336
  %% Aliased:
  %%    _2
  _3 = call (`filename`:`dirname`/1), _2

  %% Aliased:
  %%    _3
  _30 = succeeded:body _3
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    _0 => nonempty_list(46..114)
  %% Aliased:
  %%    _0
  _1 = put_list `42`, _0

  %% compile_SUITE.erl:2336
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _1
  Wc = call (`filename`:`join`/2), _3, _1

  %% Aliased:
  %%    Wc
  _31 = succeeded:body Wc
  br _31, ^31, ^1

31:
  %% compile_SUITE.erl:2337
  %% Aliased:
  %%    Wc
  _7 = call (`filelib`:`wildcard`/1), Wc

  %% Aliased:
  %%    _7
  _32 = succeeded:body _7
  br _32, ^32, ^1

32:
  %% compile_SUITE.erl:2337
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _7
  _26 = call (`'-get_unique_files/1-lc$^0/1-0-'`/2), _7, _0

  %% Aliased:
  %%    _26
  _33 = succeeded:body _26
  br _33, ^33, ^1

33:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _26
  ret _26

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% compile_SUITE.erl:2340
%% Counter = 9
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(46..114)
function `compile_SUITE`:`is_cloned`(_0, _1) {
0:
  %% compile_SUITE.erl:2341
  %% Aliased:
  %%    _0, 
  %%    _1
  _2 = call (`filename`:`basename`/2), _0, _1

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% compile_SUITE.erl:2341
  %% Aliased:
  %%    _2
  Mod = call (`erlang`:`list_to_atom`/1), _2

  %% Aliased:
  %%    Mod
  _7 = succeeded:body Mod
  br _7, ^7, ^1

7:
  %% compile_SUITE.erl:2342
  %% Aliased:
  %%    Mod
  _3 = call (`test_lib`:`is_cloned_mod`/1), Mod

  %% Aliased:
  %%    _3
  _8 = succeeded:body _3
  br _8, ^8, ^1

8:
  %% Aliased:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compile_SUITE.erl:2344
%% Counter = 33
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(46..114)
function `compile_SUITE`:`is_lfe_module`(_0, _1) {
0:
  %% compile_SUITE.erl:2345
  %% Aliased:
  %%    _0, 
  %%    _1
  _7 = call (`filename`:`basename`/2), _0, _1

  %% Aliased:
  %%    _7
  _18 = succeeded:body _7
  br _18, ^18, ^1

18:
  %% Aliased:
  %%    _7
  _32 = is_nonempty_list _7
  br _32, ^32, ^20

32:
  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _9 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _8 = get_tl _7

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _31 = bif:'=:=' _9, `108`
  br _31, ^30, ^20

30:
  %% Aliased:
  %%    _8
  _29 = is_nonempty_list _8
  br _29, ^29, ^20

29:
  %% Argument types:
  %%    _8 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _8
  _11 = get_hd _8

  %% Argument types:
  %%    _8 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _8
  _10 = get_tl _8

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _28 = bif:'=:=' _11, `102`
  br _28, ^27, ^20

27:
  %% Aliased:
  %%    _10
  _26 = is_nonempty_list _10
  br _26, ^26, ^20

26:
  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _13 = get_hd _10

  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _12 = get_tl _10

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _25 = bif:'=:=' _13, `101`
  br _25, ^24, ^20

24:
  %% Aliased:
  %%    _12
  _23 = is_nonempty_list _12
  br _23, ^23, ^20

23:
  %% Argument types:
  %%    _12 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _12
  _15 = get_hd _12

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _22 = bif:'=:=' _15, `95`
  ret _22

20:
  %% Result type:
  %%    'false'
  ret `false`

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compile_SUITE.erl:2352
%% Counter = 50
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list({'records1', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_))} | {'records2', bitstring(128), nil(), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records3', bitstring(16), nil(), nonempty_list('strict_record_tests'), fun((_) -> 'ok')} | {'records4', bitstring(16), nonempty_list({nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}), nil(), fun((_))} | {'records5', bitstring(128), nonempty_list({nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}), nonempty_list('no_strict_record_tests'), fun((_) -> 'ok')} | {'records6', bitstring(16), nonempty_list({nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}), nil(), fun((_) -> 'ok')} | {'records7', bitstring(128), nonempty_list({nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}), nonempty_list('no_strict_record_tests' | 'strict_record_tests'), fun((_))} | {'spec1', bitstring(8), nil(), nonempty_list('warn_missing_spec'), nil()} | {'spec2', bitstring(32), nonempty_list({nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}), nonempty_list('nowarn_missing_spec'), nil()} | {'spec3', bitstring(8), nonempty_list({nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}), nonempty_list('warn_missing_spec'), nil()} | {'spec4', bitstring(8), nonempty_list({nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}), nil(), {'warnings', nonempty_list({...})}} | {'spec5', bitstring(8), nonempty_list({nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}), nonempty_list('warn_missing_spec'), nil()})
function `compile_SUITE`:`run`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  F = make_fun (`'-run/2-fun-0-'`/3), _0

  %% compile_SUITE.erl:2374
  %% Aliased:
  %%    F
  %% Unique:
  %%    _1
  _45 = call (`lists`:`foldl`/3), F, `[]`, _1

  %% Aliased:
  %%    _45
  _48 = succeeded:body _45
  br _48, ^48, ^1

48:
  %% Aliased:
  %%    _45
  ret _45

1:
  _46 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _46
}

%% compile_SUITE.erl:2376
%% Counter = 147
%% bs_ensure_opt: true
%% Parameters
%%    _4 =>
%%     'none' | fun((_))
function `compile_SUITE`:`run_test`(_0, _1, _2, _3, _4) {
0:
  %% compile_SUITE.erl:2377
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2
  _54 = call (`run_test_putenv`/1), _2

  %% Unique:
  %%    _54
  _70 = succeeded:body _54
  br _70, ^70, ^1

70:
  %% compile_SUITE.erl:2378
  _5 = call (`test_lib`:`uniq`/0)

  %% Aliased:
  %%    _5
  _71 = succeeded:body _5
  br _71, ^71, ^1

71:
  %% compile_SUITE.erl:2378
  %% Aliased:
  %%    _5
  Module = call (`erlang`:`'++'`/2), `"warnings"`, _5

  %% compile_SUITE.erl:2379
  %% Aliased:
  %%    Module
  Filename = call (`erlang`:`'++'`/2), Module, `".erl"`

  %% Aliased:
  %%    Filename
  _73 = succeeded:body Filename
  br _73, ^73, ^1

73:
  %% compile_SUITE.erl:2380
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    DataDir
  _74 = succeeded:body DataDir
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _31 = put_list _1, `[]`

  %% Argument types:
  %%    _31 => nonempty_list(any())
  %% Unique:
  %%    _31
  _32 = put_list `"\", 1). "`, _31

  %% Argument types:
  %%    Filename => list(any())
  %%    _32 => nonempty_list(any())
  %% Aliased:
  %%    Filename
  %% Unique:
  %%    _32
  _33 = put_list Filename, _32

  %% Argument types:
  %%    _33 => nonempty_list(any())
  %% Unique:
  %%    _33
  _34 = put_list `"). -file( \""`, _33

  %% Argument types:
  %%    _34 => nonempty_list(any())
  %% Aliased:
  %%    Module
  %% Unique:
  %%    _34
  _35 = put_list Module, _34

  %% Argument types:
  %%    _35 => nonempty_list(any())
  %% Unique:
  %%    _35
  Test1 = put_list `"-module("`, _35

  %% compile_SUITE.erl:2382
  %% Unique:
  %%    Test1
  Test = call (`erlang`:`iolist_to_binary`/1), Test1

  %% Aliased:
  %%    Test
  _75 = succeeded:body Test
  br _75, ^75, ^1

75:
  %% compile_SUITE.erl:2383
  %% Aliased:
  %%    DataDir, 
  %%    Filename
  File = call (`filename`:`join`/2), DataDir, Filename

  %% Aliased:
  %%    File
  _76 = succeeded:body File
  br _76, ^76, ^1

76:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _36 = put_list `return`, _3

  %% Argument types:
  %%    _36 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _36
  _37 = put_list `export_all`, _36

  %% Argument types:
  %%    _37 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _37
  Opts = put_list `binary`, _37

  %% compile_SUITE.erl:2385
  %% Aliased:
  %%    File, 
  %%    Test
  _38 = call (`file`:`write_file`/2), File, Test

  %% Aliased:
  %%    _38
  _77 = succeeded:body _38
  br _77, ^77, ^1

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _140 = bif:'=:=' _38, `ok`
  br _140, ^139, ^79

139:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _39 = put_list `report`, _3

  %% Argument types:
  %%    _39 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _39
  _40 = put_list `export_all`, _39

  %% Argument types:
  %%    _40 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _40
  _41 = put_list `binary`, _40

  %% compile_SUITE.erl:2388
  %% Aliased:
  %%    File
  %% Unique:
  %%    _41
  _55 = call (`compile`:`file`/2), File, _41

  %% Aliased:
  %%    _55
  _80 = succeeded:body _55
  br _80, ^80, ^1

80:
  %% compile_SUITE.erl:2391
  %% Aliased:
  %%    File
  %% Unique:
  %%    Opts
  _42 = call (`compile`:`file`/2), File, Opts

  %% Aliased:
  %%    _42
  _81 = succeeded:body _42
  br _81, ^81, ^1

81:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _135 = is_tagged_tuple _42, `4`, `ok`
  br _135, ^132, ^83

132:
  %% compile_SUITE.erl:2392
  %% Aliased:
  %%    File
  _56 = call (`file`:`delete`/1), File

  %% Aliased:
  %%    _56
  _84 = succeeded:body _56
  br _84, ^84, ^1

84:
  %% compile_SUITE.erl:2395
  %% Argument types:
  %%    _4 => 'none' | fun((_))
  %% Aliased:
  %%    _4
  _17 = bif:is_function _4, `1`
  br _17, ^90, ^116

90:
  %% Argument types:
  %%    _42 => {'ok', any(), any(), any()}
  %% Aliased:
  %%    _42
  _45 = get_tuple_element _42, `1`

  %% Argument types:
  %%    _42 => {'ok', any(), any(), any()}
  %% Aliased:
  %%    _42
  _44 = get_tuple_element _42, `2`

  %% compile_SUITE.erl:2396
  %% Aliased:
  %%    _44, 
  %%    _45
  _47 = call (`code`:`load_binary`/3), _45, `[]`, _44

  %% Aliased:
  %%    _47
  _91 = succeeded:body _47
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _112 = is_tagged_tuple _47, `2`, `module`
  br _112, ^109, ^93

109:
  %% Argument types:
  %%    _47 => {'module', any()}
  %% Aliased:
  %%    _47
  _48 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45, 
  %%    _48
  _94 = bif:'=:=' _48, _45
  br _94, ^94, ^93

94:
  %% compile_SUITE.erl:2397
  %% Argument types:
  %%    _4 => fun((_))
  %% Aliased:
  %%    _4, 
  %%    _45
  _50 = call _4, _45

  %% Aliased:
  %%    _50
  _95 = succeeded:body _50
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _107 = bif:'=:=' _50, `ok`
  br _107, ^106, ^97

106:
  %% compile_SUITE.erl:2398
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2
  _60 = call (`run_test_unsetenv`/1), _2

  %% Unique:
  %%    _60
  _98 = succeeded:body _60
  br _98, ^98, ^1

98:
  %% compile_SUITE.erl:2399
  %% Aliased:
  %%    _45
  _51 = call (`code`:`delete`/1), _45

  %% Aliased:
  %%    _51
  _99 = succeeded:body _51
  br _99, ^99, ^1

99:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _104 = bif:'=:=' _51, `true`
  br _104, ^103, ^101

103:
  %% compile_SUITE.erl:2400
  %% Aliased:
  %%    _45
  _61 = call (`code`:`purge`/1), _45

  %% Aliased:
  %%    _61
  _102 = succeeded:body _61
  br _102, ^102, ^1

102:
  %% Result type:
  %%    'ok'
  ret `ok`

101:
  %% compile_SUITE.erl:2399
  %% Aliased:
  %%    _51
  _62 = match_fail `badmatch`, _51

  %% Unique:
  %%    _62
  _105 = succeeded:body _62
  br ^1

97:
  %% compile_SUITE.erl:2397
  %% Aliased:
  %%    _50
  _63 = match_fail `badmatch`, _50

  %% Unique:
  %%    _63
  _108 = succeeded:body _63
  br ^1

93:
  %% compile_SUITE.erl:2396
  %% Aliased:
  %%    _47
  _64 = match_fail `badmatch`, _47

  %% Unique:
  %%    _64
  _115 = succeeded:body _64
  br ^1

116:
  %% compile_SUITE.erl:2403
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2
  _57 = call (`run_test_unsetenv`/1), _2

  %% Unique:
  %%    _57
  _117 = succeeded:body _57
  br _117, ^117, ^1

117:
  %% Argument types:
  %%    _42 => {'ok', any(), any(), any()}
  %% Aliased:
  %%    _42
  _43 = get_tuple_element _42, `3`

  %% compile_SUITE.erl:2404
  %% Result type:
  %%    nil() | {'warnings', any()}
  %% Aliased:
  %%    _43
  Res = call (`get_warnings`/1), _43

  %% Aliased:
  %%    Res
  _118 = succeeded:body Res
  br _118, ^118, ^1

118:
  %% Argument types:
  %%    Res => nil() | {'warnings', any()}
  %% Aliased:
  %%    Res
  _126 = bif:is_tuple Res
  br _126, ^123, ^129

123:
  %% Argument types:
  %%    Res => {'warnings', any()}
  %% Aliased:
  %%    Res
  _52 = get_tuple_element Res, `1`

  %% compile_SUITE.erl:2409
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _52, 
  %%    Test
  _58 = call (`print_warnings`/2), _52, Test

  %% Unique:
  %%    _58
  _122 = succeeded:body _58
  br _122, ^122, ^1

122:
  %% Result type:
  %%    {'warnings', any()}
  %% Aliased:
  %%    Res
  ret Res

129:
  %% Result type:
  %%    nil()
  ret `[]`

83:
  %% compile_SUITE.erl:2391
  %% Aliased:
  %%    _42
  _66 = match_fail `badmatch`, _42

  %% Unique:
  %%    _66
  _138 = succeeded:body _66
  br ^1

79:
  %% compile_SUITE.erl:2385
  %% Aliased:
  %%    _38
  _67 = match_fail `badmatch`, _38

  %% Unique:
  %%    _67
  _141 = succeeded:body _67
  br ^1

1:
  _68 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _68
}

%% compile_SUITE.erl:2414
%% Counter = 19
%% bs_ensure_opt: true
function `compile_SUITE`:`run_test_putenv`(_0) {
0:
  %% compile_SUITE.erl:2415
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _0
  _15 = call (`'-run_test_putenv/1-lc$^0/1-0-'`/1), _0

  %% Unique:
  %%    _15
  _18 = succeeded:body _15
  br _18, ^18, ^1

18:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compile_SUITE.erl:2418
%% Counter = 19
%% bs_ensure_opt: true
function `compile_SUITE`:`run_test_unsetenv`(_0) {
0:
  %% compile_SUITE.erl:2419
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _0
  _15 = call (`'-run_test_unsetenv/1-lc$^0/1-0-'`/1), _0

  %% Unique:
  %%    _15
  _18 = succeeded:body _15
  br _18, ^18, ^1

18:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compile_SUITE.erl:2422
%% Counter = 22
%% bs_ensure_opt: true
function `compile_SUITE`:`get_warnings`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _13 = bif:'=:=' _0, `[]`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    nil()
  ret `[]`

12:
  %% Aliased:
  %%    _0
  _21 = is_nonempty_list _0
  br _21, ^21, ^15

21:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _5 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _4 = get_tl _0

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _18 = bif:is_tuple _5
  br _18, ^18, ^15

18:
  %% Argument types:
  %%    _5 => {...}
  %% Aliased:
  %%    _5
  _19 = bif:tuple_size _5

  %% Argument types:
  %%    _19 => 0..16777215
  %% Unique:
  %%    _19
  _20 = bif:'=:=' _19, `2`
  br _20, ^17, ^15

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _16 = bif:'=:=' _4, `[]`
  br _16, ^16, ^15

16:
  %% Argument types:
  %%    _5 => {any(), any()}
  %% Aliased:
  %%    _5
  _6 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _8 = put_tuple `warnings`, _6
  %% Result type:
  %%    {'warnings', any()}
  %% Unique:
  %%    _8
  ret _8

15:
  %% Argument types:
  %%    _0 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _9 = put_tuple `warnings`, _0
  %% Result type:
  %%    {'warnings', atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()}
  %% Unique:
  %%    _9
  ret _9
}

%% compile_SUITE.erl:2430
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     bitstring(8)
function `compile_SUITE`:`print_warnings`(_0, _1) {
0:
  %% compile_SUITE.erl:2431
  %% Aliased:
  %%    _1
  Lines = call (`binary`:`split`/3), _1, `<<"\n">>`, `[global]`

  %% Aliased:
  %%    Lines
  _19 = succeeded:body Lines
  br _19, ^19, ^1

19:
  %% compile_SUITE.erl:2432
  %% Result type:
  %%    list(list(any()))
  %% Aliased:
  %%    _0, 
  %%    Lines
  _9 = call (`'-print_warnings/2-lc$^0/1-0-'`/2), _0, Lines

  %% Aliased:
  %%    _9
  _20 = succeeded:body _9
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:2433
  %% Aliased:
  %%    _9
  _16 = call (`io`:`put_chars`/1), _9

  %% Aliased:
  %%    _16
  _21 = succeeded:body _16
  br _21, ^21, ^1

21:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% compile_SUITE.erl:2436
%% Counter = 81
%% bs_ensure_opt: true
function `compile_SUITE`:`print_warning`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _71 = bif:is_tuple _0
  br _71, ^71, ^47

71:
  %% Argument types:
  %%    _0 => {...}
  %% Aliased:
  %%    _0
  _72 = bif:tuple_size _0

  %% Argument types:
  %%    _72 => 0..16777215
  %% Unique:
  %%    _72
  _73 = bif:'=:=' _72, `3`
  br _73, ^70, ^47

70:
  %% Argument types:
  %%    _0 => {any(), any(), any()}
  %% Aliased:
  %%    _0
  _22 = get_tuple_element _0, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _67 = bif:is_tuple _22
  br _67, ^67, ^47

67:
  %% Argument types:
  %%    _22 => {...}
  %% Aliased:
  %%    _22
  _68 = bif:tuple_size _22

  %% Argument types:
  %%    _68 => 0..16777215
  %% Unique:
  %%    _68
  _69 = bif:'=:=' _68, `2`
  br _69, ^66, ^47

66:
  %% Argument types:
  %%    _22 => {any(), any()}
  %% Aliased:
  %%    _22
  _24 = get_tuple_element _22, `0`

  %% Argument types:
  %%    _22 => {any(), any()}
  %% Aliased:
  %%    _22
  _23 = get_tuple_element _22, `1`

  %% compile_SUITE.erl:2437
  %% Aliased:
  %%    _1, 
  %%    _24
  Line0 = call (`lists`:`nth`/2), _24, _1

  %% Aliased:
  %%    Line0
  _48 = succeeded:body Line0
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Line0
  _26 = bs_start_match `new`, Line0

  %% Aliased:
  %%    _26
  _64 = succeeded:guard _26
  br _64, ^52, ^25

52:
  %% compile_SUITE.erl:2438
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _42 = bif:'-' _23, `1`

  %% Aliased:
  %%    _42
  _55 = succeeded:guard _42
  br _55, ^55, ^54

55:
  br ^53

54:
  br ^53

53:
  _29 = phi { `bad_size`, ^54 }, { _42, ^55 }

  %% compile_SUITE.erl:2438
  %% Argument types:
  %%    _26 => bs_context(1)
  %%    _29 => 'bad_size' | number()
  %% Aliased:
  %%    _26, 
  %%    _29
  _31 = bs_match `binary`, _26, `[unsigned,big]`, _29, `8`

  %% Aliased:
  %%    _31
  _58 = succeeded:guard _31
  br _58, ^58, ^25

58:
  %% Aliased:
  %%    _31
  _32 = bs_extract _31
  _79 = bs_ensure _31, `0`, `8`
  _80 = succeeded:guard _79
  br _80, ^78, ^25

78:
  %% compile_SUITE.erl:2438
  %% Aliased:
  %%    _31
  %% Anno: #{ensured => true}
  _33 = bs_match `skip`, _79, `binary`, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _33
  _59 = succeeded:guard _33
  br _59, ^75, ^25

75:
  %% compile_SUITE.erl:2439
  %% Aliased:
  %%    _32
  Spaces = call (`re`:`replace`/4), _32, `<<"[^\t]">>`, `<<" ">>`, `[global]`

  %% Aliased:
  %%    Spaces
  _60 = succeeded:body Spaces
  br _60, ^60, ^1

60:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Spaces
  CaretLine = put_list Spaces, `["^"]`

  %% Argument types:
  %%    _0 => {any(), any(), any()}
  %% Aliased:
  %%    _0
  _21 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _0 => {any(), any(), any()}
  %% Aliased:
  %%    _0
  _20 = get_tuple_element _0, `2`

  %% compile_SUITE.erl:2442
  %% Aliased:
  %%    _20
  _6 = call (_21:`format_error`/1), _20

  %% Aliased:
  %%    _6
  _61 = succeeded:body _6
  br _61, ^61, ^1

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _35 = put_list _6, `[]`

  %% Argument types:
  %%    _35 => nonempty_list(any())
  %% Aliased:
  %%    _23
  %% Unique:
  %%    _35
  _36 = put_list _23, _35

  %% Argument types:
  %%    _36 => nonempty_list(any())
  %% Aliased:
  %%    _24
  %% Unique:
  %%    _36
  _37 = put_list _24, _36

  %% compile_SUITE.erl:2441
  %% Unique:
  %%    _37
  _7 = call (`io_lib`:`format`/2), `"~p:~p: ~ts\n"`, _37

  %% Aliased:
  %%    _7
  _62 = succeeded:body _7
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    CaretLine => nonempty_list(any())
  %% Unique:
  %%    CaretLine
  _38 = put_list CaretLine, `["\n\n"]`

  %% Argument types:
  %%    _38 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _38
  _39 = put_list `"\n"`, _38

  %% Argument types:
  %%    Line0 => bs_matchable(1)
  %%    _39 => nonempty_list(nonempty_list(any()))
  %% Aliased:
  %%    Line0
  %% Unique:
  %%    _39
  _40 = put_list Line0, _39

  %% Argument types:
  %%    _40 => nonempty_list(nonempty_list(any()) | bs_matchable(1))
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _40
  _43 = put_list _7, _40
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _43
  ret _43

25:
  %% compile_SUITE.erl:2438
  %% Aliased:
  %%    Line0
  _44 = match_fail `badmatch`, Line0

  %% Unique:
  %%    _44
  _65 = succeeded:body _44
  br ^1

1:
  _45 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _45

47:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% compile_SUITE.erl:2448
%% Counter = 6
%% bs_ensure_opt: true
function `compile_SUITE`:`fail`() {
0:
  %% compile_SUITE.erl:2449
  _2 = call (`ct`:`fail`/1), `failed`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `compile_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `compile_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `compile_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `compile_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compile_SUITE.erl:2432
%% Counter = 27
%% bs_ensure_opt: true
function `compile_SUITE`:`'-print_warnings/2-lc$^0/1-0-'`(_5, Lines) {
0:
  %% Aliased:
  %%    _5
  _22 = is_nonempty_list _5
  br _22, ^22, ^19

22:
  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _13 = get_hd _5

  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _12 = get_tl _5

  %% compile_SUITE.erl:2432
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _13, 
  %%    Lines
  _7 = call (`print_warning`/2), _13, Lines

  %% Aliased:
  %%    _7
  _20 = succeeded:body _7
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:2432
  %% Result type:
  %%    list(list(any()))
  %% Aliased:
  %%    _12, 
  %%    Lines
  _8 = call (`'-print_warnings/2-lc$^0/1-0-'`/2), _12, Lines

  %% Aliased:
  %%    _8
  _21 = succeeded:body _8
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    _7 => list(any())
  %%    _8 => list(list(any()))
  %% Aliased:
  %%    _7, 
  %%    _8
  _14 = put_list _7, _8
  %% Result type:
  %%    nonempty_list(list(any()))
  %% Unique:
  %%    _14
  ret _14

19:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _23 = bif:'=:=' _5, `[]`
  br _23, ^23, ^18

23:
  %% Result type:
  %%    nil()
  ret `[]`

18:
  %% Argument types:
  %%    _5 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _5
  _11 = put_tuple `bad_generator`, _5

  %% compile_SUITE.erl:2432
  %% Unique:
  %%    _11
  _15 = call (`erlang`:`error`/1), _11

  %% Aliased:
  %%    _15
  _24 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compile_SUITE.erl:2419
%% Counter = 32
%% bs_ensure_opt: true
function `compile_SUITE`:`'-run_test_unsetenv/1-lc$^0/1-0-'`(_3) {
0:
  %% Aliased:
  %%    _3
  _27 = is_nonempty_list _3
  br _27, ^27, ^18

27:
  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _8 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _7 = get_tl _3

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _23 = bif:is_tuple _8
  br _23, ^23, ^19

23:
  %% Argument types:
  %%    _8 => {...}
  %% Aliased:
  %%    _8
  _24 = bif:tuple_size _8

  %% Argument types:
  %%    _24 => 0..16777215
  %% Unique:
  %%    _24
  _25 = bif:'=:=' _24, `2`
  br _25, ^30, ^19

30:
  %% Argument types:
  %%    _8 => {any(), any()}
  %% Aliased:
  %%    _8
  _10 = get_tuple_element _8, `0`

  %% compile_SUITE.erl:2419
  %% Aliased:
  %%    _10
  _11 = call (`os`:`unsetenv`/1), _10

  %% Aliased:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:2419
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _7
  _12 = call (`'-run_test_unsetenv/1-lc$^0/1-0-'`/1), _7

  %% Unique:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _12
  ret _12

19:
  %% compile_SUITE.erl:2419
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _7
  _13 = call (`'-run_test_unsetenv/1-lc$^0/1-0-'`/1), _7

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br _26, ^26, ^1

26:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _13
  ret _13

18:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _28 = bif:'=:=' _3, `[]`
  br _28, ^28, ^17

28:
  %% Result type:
  %%    nil()
  ret `[]`

17:
  %% Argument types:
  %%    _3 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _3
  _6 = put_tuple `bad_generator`, _3

  %% compile_SUITE.erl:2419
  %% Unique:
  %%    _6
  _14 = call (`erlang`:`error`/1), _6

  %% Aliased:
  %%    _14
  _29 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% compile_SUITE.erl:2415
%% Counter = 32
%% bs_ensure_opt: true
function `compile_SUITE`:`'-run_test_putenv/1-lc$^0/1-0-'`(_3) {
0:
  %% Aliased:
  %%    _3
  _27 = is_nonempty_list _3
  br _27, ^27, ^18

27:
  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _8 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _7 = get_tl _3

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _23 = bif:is_tuple _8
  br _23, ^23, ^19

23:
  %% Argument types:
  %%    _8 => {...}
  %% Aliased:
  %%    _8
  _24 = bif:tuple_size _8

  %% Argument types:
  %%    _24 => 0..16777215
  %% Unique:
  %%    _24
  _25 = bif:'=:=' _24, `2`
  br _25, ^30, ^19

30:
  %% Argument types:
  %%    _8 => {any(), any()}
  %% Aliased:
  %%    _8
  _10 = get_tuple_element _8, `0`

  %% Argument types:
  %%    _8 => {any(), any()}
  %% Aliased:
  %%    _8
  _9 = get_tuple_element _8, `1`

  %% compile_SUITE.erl:2415
  %% Aliased:
  %%    _9, 
  %%    _10
  _11 = call (`os`:`putenv`/2), _10, _9

  %% Aliased:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% compile_SUITE.erl:2415
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _7
  _12 = call (`'-run_test_putenv/1-lc$^0/1-0-'`/1), _7

  %% Unique:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _12
  ret _12

19:
  %% compile_SUITE.erl:2415
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _7
  _13 = call (`'-run_test_putenv/1-lc$^0/1-0-'`/1), _7

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br _26, ^26, ^1

26:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _13
  ret _13

18:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _28 = bif:'=:=' _3, `[]`
  br _28, ^28, ^17

28:
  %% Result type:
  %%    nil()
  ret `[]`

17:
  %% Argument types:
  %%    _3 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _3
  _6 = put_tuple `bad_generator`, _3

  %% compile_SUITE.erl:2415
  %% Unique:
  %%    _6
  _14 = call (`erlang`:`error`/1), _6

  %% Aliased:
  %%    _14
  _29 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% compile_SUITE.erl:2353
%% Counter = 134
%% bs_ensure_opt: true
function `compile_SUITE`:`'-run/2-fun-0-'`(_10, _9, _0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _87 = bif:is_tuple _10
  br _87, ^87, ^47

87:
  %% Argument types:
  %%    _10 => {...}
  %% Aliased:
  %%    _10
  _88 = bif:tuple_size _10

  %% Argument types:
  %%    _88 => 0..16777215
  %% Unique:
  %%    _88
  _89 = bif:'=:=' _88, `5`
  br _89, ^86, ^47

86:
  %% Argument types:
  %%    _10 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _10
  _25 = get_tuple_element _10, `0`

  %% Argument types:
  %%    _10 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _10
  _24 = get_tuple_element _10, `1`

  %% Argument types:
  %%    _10 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _10
  _23 = get_tuple_element _10, `2`

  %% Argument types:
  %%    _10 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _10
  _22 = get_tuple_element _10, `3`

  %% Argument types:
  %%    _10 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _10
  _21 = get_tuple_element _10, `4`

  %% compile_SUITE.erl:2353
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _2 = bif:is_function _21, `1`
  br _2, ^130, ^48

130:
  br ^132

132:
  _55 = new_try_tag `'catch'`
  br _55, ^53, ^54

53:
  %% compile_SUITE.erl:2354
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _21, 
  %%    _22, 
  %%    _23, 
  %%    _24
  _41 = call (`run_test`/5), _0, _24, _23, _22, _21

  %% Unique:
  %%    _41
  _57 = succeeded:body _41
  br _57, ^57, ^54

57:
  br ^52

54:
  %% Unique:
  %%    _55
  _60 = landingpad `'catch'`, _55

  %% Aliased:
  %%    _60
  _58 = extract _60, `0`
  br ^52

52:
  _61 = phi { _58, ^54 }, { `ok`, ^57 }

  %% Aliased:
  %%    _61
  %% Unique:
  %%    _55
  _3 = catch_end _55, _61

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _65 = bif:'=:=' _3, `ok`
  br _65, ^64, ^63

64:
  %% Result type:
  %%    'ok'
  ret `ok`

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _26 = put_list _3, `[]`

  %% Argument types:
  %%    _26 => nonempty_list(any())
  %% Unique:
  %%    _26
  _27 = put_list `ok`, _26

  %% Argument types:
  %%    _27 => nonempty_list(any())
  %% Aliased:
  %%    _25
  %% Unique:
  %%    _27
  _28 = put_list _25, _27

  %% compile_SUITE.erl:2358
  %% Unique:
  %%    _28
  _42 = call (`io`:`format`/2), `"~nTest ~p failed. Expected~n  ~p~nbut got~n  ~p~n"`, _28

  %% Aliased:
  %%    _42
  _66 = succeeded:body _42
  br _66, ^66, ^1

66:
  %% compile_SUITE.erl:2360
  _43 = call (`fail`/0)

  %% Aliased:
  %%    _43
  _67 = succeeded:body _43
  br _67, ^67, ^1

67:
  %% Aliased:
  %%    _43
  ret _43

48:
  %% compile_SUITE.erl:2363
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _5 = bif:is_list _21
  br _5, ^69, ^93

93:
  %% compile_SUITE.erl:2363
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _6 = bif:is_tuple _21
  br _6, ^69, ^47

69:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _30 = put_list _25, `[]`

  %% compile_SUITE.erl:2364
  %% Unique:
  %%    _30
  _35 = call (`io`:`format`/2), `"### ~s\n"`, _30

  %% Aliased:
  %%    _35
  _70 = succeeded:body _35
  br _70, ^131, ^1

131:
  br ^133

133:
  _74 = new_try_tag `'catch'`
  br _74, ^72, ^73

72:
  %% compile_SUITE.erl:2365
  %% Result type:
  %%    nil() | {'warnings', any()}
  %% Aliased:
  %%    _0, 
  %%    _22, 
  %%    _23, 
  %%    _24
  _37 = call (`run_test`/5), _0, _24, _23, _22, `none`

  %% Aliased:
  %%    _37
  _76 = succeeded:body _37
  br _76, ^76, ^73

76:
  br ^71

73:
  %% Unique:
  %%    _74
  _79 = landingpad `'catch'`, _74

  %% Aliased:
  %%    _79
  _77 = extract _79, `0`
  br ^71

71:
  _80 = phi { _77, ^73 }, { _37, ^76 }

  %% Aliased:
  %%    _80
  %% Unique:
  %%    _74
  _7 = catch_end _74, _80

  %% Argument types:
  %%    _21 => maybe_improper_list(any(), any()) | {...}
  %% Aliased:
  %%    _7, 
  %%    _21
  _83 = bif:'=:=' _7, _21
  br _83, ^83, ^82

83:
  %% Aliased:
  %%    _9
  ret _9

82:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _32 = put_list _7, `[]`

  %% Argument types:
  %%    _21 => maybe_improper_list(any(), any()) | {...}
  %%    _32 => nonempty_list(any())
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _32
  _33 = put_list _21, _32

  %% Argument types:
  %%    _33 => nonempty_list(any())
  %% Aliased:
  %%    _25
  %% Unique:
  %%    _33
  _34 = put_list _25, _33

  %% compile_SUITE.erl:2369
  %% Unique:
  %%    _34
  _38 = call (`io`:`format`/2), `"~nTest ~p failed. Expected~n  ~p~nbut got~n  ~p~n"`, _34

  %% Aliased:
  %%    _38
  _84 = succeeded:body _38
  br _84, ^84, ^1

84:
  %% compile_SUITE.erl:2371
  _39 = call (`fail`/0)

  %% Aliased:
  %%    _39
  _85 = succeeded:body _39
  br _85, ^85, ^1

85:
  %% Aliased:
  %%    _39
  ret _39

47:
  %% compile_SUITE.erl:2353
  %% Aliased:
  %%    _9, 
  %%    _10
  %% Anno: #{inlined => {'-run/2-inlined-0-',2}}
  _44 = match_fail `function_clause`, _10, _9

  %% Unique:
  %%    _44
  _90 = succeeded:body _44
  br ^1

1:
  _45 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _45
}

%% compile_SUITE.erl:2337
%% Counter = 50
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(46..114)
function `compile_SUITE`:`'-get_unique_files/1-lc$^0/1-0-'`(_10, _0) {
0:
  %% Aliased:
  %%    _10
  _45 = is_nonempty_list _10
  br _45, ^45, ^29

45:
  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _16 = get_hd _10

  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _15 = get_tl _10

  %% compile_SUITE.erl:2338
  %% Aliased:
  %%    _0, 
  %%    _16
  _17 = call (`is_cloned`/2), _16, _0

  %% Aliased:
  %%    _17
  _30 = succeeded:body _17
  br _30, ^30, ^1

30:
  switch _17, ^32, [
    { `false`, ^43 },
    { `true`, ^42 }
  ]

42:
  %% compile_SUITE.erl:2337
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _15
  _23 = call (`'-get_unique_files/1-lc$^0/1-0-'`/2), _15, _0

  %% Aliased:
  %%    _23
  _33 = succeeded:body _23
  br _33, ^33, ^1

33:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _23
  ret _23

43:
  %% compile_SUITE.erl:2338
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _16
  _18 = call (`is_lfe_module`/2), _16, _0

  %% Unique:
  %%    _18
  _34 = succeeded:body _18
  br _34, ^34, ^1

34:
  br _18, ^40, ^39

40:
  %% compile_SUITE.erl:2337
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _15
  _21 = call (`'-get_unique_files/1-lc$^0/1-0-'`/2), _15, _0

  %% Aliased:
  %%    _21
  _37 = succeeded:body _21
  br _37, ^37, ^1

37:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _21
  ret _21

39:
  %% compile_SUITE.erl:2337
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _15
  _12 = call (`'-get_unique_files/1-lc$^0/1-0-'`/2), _15, _0

  %% Aliased:
  %%    _12
  _38 = succeeded:body _12
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    _12 => list(any())
  %% Aliased:
  %%    _12, 
  %%    _16
  _20 = put_list _16, _12
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _20
  ret _20

32:
  %% compile_SUITE.erl:2338
  _24 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _24
  _44 = succeeded:body _24
  br ^1

29:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _46 = bif:'=:=' _10, `[]`
  br _46, ^46, ^28

46:
  %% Result type:
  %%    nil()
  ret `[]`

28:
  %% Argument types:
  %%    _10 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _10
  _14 = put_tuple `bad_generator`, _10

  %% compile_SUITE.erl:2337
  %% Unique:
  %%    _14
  _25 = call (`erlang`:`error`/1), _14

  %% Aliased:
  %%    _25
  _47 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% compile_SUITE.erl:2306
%% Counter = 142
%% bs_ensure_opt: true
function `compile_SUITE`:`'-option_order/1-fun-0-'`(_6) {
0:
  br ^141

141:
  _108 = new_try_tag `'try'`
  br _108, ^107, ^105

107:
  %% compile_SUITE.erl:2307
  _98 = call (_6:`rec_test`/1), `{r,1,2,3}`

  %% Aliased:
  %%    _98
  _109 = succeeded:body _98
  br _109, ^109, ^105

109:
  %% Unique:
  %%    _108
  _124 = kill_try_tag _108

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _114 = bif:'=:=' _98, `3`
  br _114, ^113, ^111

113:
  %% compile_SUITE.erl:2309
  _99 = call (`fail`/0)

  %% Aliased:
  %%    _99
  _112 = succeeded:body _99
  br _112, ^112, ^1

112:
  %% Aliased:
  %%    _99
  ret _99

111:
  %% compile_SUITE.erl:2307
  %% Aliased:
  %%    _98
  _100 = match_fail `try_clause`, _98

  %% Unique:
  %%    _100
  _115 = succeeded:body _100
  br ^1

105:
  %% Unique:
  %%    _108
  _122 = landingpad `'try'`, _108

  %% Aliased:
  %%    _122
  _5 = extract _122, `0`

  %% Aliased:
  %%    _122
  _4 = extract _122, `1`

  %% Aliased:
  %%    _122
  _3 = extract _122, `2`

  %% Unique:
  %%    _108
  _123 = kill_try_tag _108

  %% Argument types:
  %%    _5 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _5
  _120 = bif:'=:=' _5, `error`
  br _120, ^119, ^117

119:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _118 = bif:'=:=' _4, `{badrecord,{r,1,2,3}}`
  br _118, ^118, ^117

118:
  %% Result type:
  %%    'ok'
  ret `ok`

117:
  %% Aliased:
  %%    _3, 
  %%    _4
  _101 = resume _3, _4

  %% Unique:
  %%    _101
  _121 = succeeded:body _101
  br ^1

1:
  _102 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _102
}

%% compile_SUITE.erl:2295
%% Counter = 105
%% bs_ensure_opt: true
function `compile_SUITE`:`'-option_order/1-fun-1-'`(_10) {
0:
  %% compile_SUITE.erl:2296
  _64 = call (_10:`rec_test`/1), `{r,1,2,3}`

  %% Aliased:
  %%    _64
  _99 = succeeded:body _64
  br _99, ^99, ^1

99:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _103 = bif:'=:=' _64, `3`
  br _103, ^102, ^101

102:
  %% Result type:
  %%    'ok'
  ret `ok`

101:
  %% compile_SUITE.erl:2296
  %% Aliased:
  %%    _64
  _96 = match_fail `badmatch`, _64

  %% Unique:
  %%    _96
  _104 = succeeded:body _96
  br ^1

1:
  _97 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _97
}

%% compile_SUITE.erl:2283
%% Counter = 104
%% bs_ensure_opt: true
function `compile_SUITE`:`'-option_order/1-fun-2-'`(_14) {
0:
  %% compile_SUITE.erl:2284
  _63 = call (_14:`rec_test`/1), `{r,1,2,3}`

  %% Aliased:
  %%    _63
  _98 = succeeded:body _63
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _102 = bif:'=:=' _63, `3`
  br _102, ^101, ^100

101:
  %% Result type:
  %%    'ok'
  ret `ok`

100:
  %% compile_SUITE.erl:2284
  %% Aliased:
  %%    _63
  _95 = match_fail `badmatch`, _63

  %% Unique:
  %%    _95
  _103 = succeeded:body _95
  br ^1

1:
  _96 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _96
}

%% compile_SUITE.erl:2267
%% Counter = 136
%% bs_ensure_opt: true
function `compile_SUITE`:`'-option_order/1-fun-3-'`(_22) {
0:
  br ^135

135:
  _101 = new_try_tag `'try'`
  br _101, ^100, ^98

100:
  %% compile_SUITE.erl:2268
  _91 = call (_22:`rec_test`/1), `{r,1,2,3}`

  %% Aliased:
  %%    _91
  _102 = succeeded:body _91
  br _102, ^102, ^98

102:
  %% Unique:
  %%    _101
  _118 = kill_try_tag _101

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _107 = bif:'=:=' _91, `3`
  br _107, ^106, ^104

106:
  %% compile_SUITE.erl:2270
  _92 = call (`fail`/0)

  %% Aliased:
  %%    _92
  _105 = succeeded:body _92
  br _105, ^105, ^1

105:
  %% Aliased:
  %%    _92
  ret _92

104:
  %% compile_SUITE.erl:2268
  %% Aliased:
  %%    _91
  _93 = match_fail `try_clause`, _91

  %% Unique:
  %%    _93
  _108 = succeeded:body _93
  br ^1

98:
  %% Unique:
  %%    _101
  _116 = landingpad `'try'`, _101

  %% Aliased:
  %%    _116
  _21 = extract _116, `0`

  %% Aliased:
  %%    _116
  _20 = extract _116, `1`

  %% Aliased:
  %%    _116
  _19 = extract _116, `2`

  %% Unique:
  %%    _101
  _117 = kill_try_tag _101

  %% Argument types:
  %%    _21 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _21
  _114 = bif:'=:=' _21, `error`
  br _114, ^113, ^110

113:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _112 = bif:'=:=' _20, `function_clause`
  br _112, ^111, ^110

111:
  %% Result type:
  %%    'ok'
  ret `ok`

110:
  %% Aliased:
  %%    _19, 
  %%    _20
  _94 = resume _19, _20

  %% Unique:
  %%    _94
  _115 = succeeded:body _94
  br ^1

1:
  _95 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _95
}

%% compile_SUITE.erl:2256
%% Counter = 98
%% bs_ensure_opt: true
function `compile_SUITE`:`'-option_order/1-fun-4-'`(_26) {
0:
  %% compile_SUITE.erl:2257
  _62 = call (_26:`rec_test`/1), `{r,1,2,3}`

  %% Aliased:
  %%    _62
  _92 = succeeded:body _62
  br _92, ^92, ^1

92:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _96 = bif:'=:=' _62, `3`
  br _96, ^95, ^94

95:
  %% Result type:
  %%    'ok'
  ret `ok`

94:
  %% compile_SUITE.erl:2257
  %% Aliased:
  %%    _62
  _89 = match_fail `badmatch`, _62

  %% Unique:
  %%    _89
  _97 = succeeded:body _89
  br ^1

1:
  _90 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _90
}

%% compile_SUITE.erl:2244
%% Counter = 97
%% bs_ensure_opt: true
function `compile_SUITE`:`'-option_order/1-fun-5-'`(_30) {
0:
  %% compile_SUITE.erl:2245
  _61 = call (_30:`rec_test`/1), `{r,1,2,3}`

  %% Aliased:
  %%    _61
  _91 = succeeded:body _61
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _95 = bif:'=:=' _61, `3`
  br _95, ^94, ^93

94:
  %% Result type:
  %%    'ok'
  ret `ok`

93:
  %% compile_SUITE.erl:2245
  %% Aliased:
  %%    _61
  _88 = match_fail `badmatch`, _61

  %% Unique:
  %%    _88
  _96 = succeeded:body _88
  br ^1

1:
  _89 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _89
}

%% compile_SUITE.erl:2228
%% Counter = 129
%% bs_ensure_opt: true
function `compile_SUITE`:`'-option_order/1-fun-6-'`(_38) {
0:
  br ^128

128:
  _94 = new_try_tag `'try'`
  br _94, ^93, ^91

93:
  %% compile_SUITE.erl:2229
  _84 = call (_38:`rec_test`/1), `{r,1,2,3}`

  %% Aliased:
  %%    _84
  _95 = succeeded:body _84
  br _95, ^95, ^91

95:
  %% Unique:
  %%    _94
  _111 = kill_try_tag _94

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _100 = bif:'=:=' _84, `3`
  br _100, ^99, ^97

99:
  %% compile_SUITE.erl:2231
  _85 = call (`fail`/0)

  %% Aliased:
  %%    _85
  _98 = succeeded:body _85
  br _98, ^98, ^1

98:
  %% Aliased:
  %%    _85
  ret _85

97:
  %% compile_SUITE.erl:2229
  %% Aliased:
  %%    _84
  _86 = match_fail `try_clause`, _84

  %% Unique:
  %%    _86
  _101 = succeeded:body _86
  br ^1

91:
  %% Unique:
  %%    _94
  _109 = landingpad `'try'`, _94

  %% Aliased:
  %%    _109
  _37 = extract _109, `0`

  %% Aliased:
  %%    _109
  _36 = extract _109, `1`

  %% Aliased:
  %%    _109
  _35 = extract _109, `2`

  %% Unique:
  %%    _94
  _110 = kill_try_tag _94

  %% Argument types:
  %%    _37 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _37
  _107 = bif:'=:=' _37, `error`
  br _107, ^106, ^103

106:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _105 = bif:'=:=' _36, `function_clause`
  br _105, ^104, ^103

104:
  %% Result type:
  %%    'ok'
  ret `ok`

103:
  %% Aliased:
  %%    _35, 
  %%    _36
  _87 = resume _35, _36

  %% Unique:
  %%    _87
  _108 = succeeded:body _87
  br ^1

1:
  _88 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _88
}

%% compile_SUITE.erl:2088
%% Counter = 60
%% bs_ensure_opt: true
%% Parameters
%%    ResultTypes =>
%%     map()
function `compile_SUITE`:`'-types_pp/1-fun-0-'`(_16, ResultTypes) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _54 = bif:is_tuple _16
  br _54, ^54, ^46

54:
  %% Argument types:
  %%    _16 => {...}
  %% Aliased:
  %%    _16
  _55 = bif:tuple_size _16

  %% Argument types:
  %%    _55 => 0..16777215
  %% Unique:
  %%    _55
  _56 = bif:'=:=' _55, `2`
  br _56, ^58, ^46

58:
  %% Argument types:
  %%    _16 => {any(), any()}
  %% Aliased:
  %%    _16
  _36 = get_tuple_element _16, `0`

  %% compile_SUITE.erl:2089
  %% Aliased:
  %%    _36
  _13 = call (`erlang`:`atom_to_list`/1), _36

  %% Aliased:
  %%    _13
  _47 = succeeded:body _13
  br _47, ^47, ^1

47:
  %% compile_SUITE.erl:2089
  %% Argument types:
  %%    _13 => list(0..1114111)
  %%    ResultTypes => map()
  %% Aliased:
  %%    _13, 
  %%    ResultTypes
  Actual = bif:map_get _13, ResultTypes

  %% Aliased:
  %%    Actual
  _48 = succeeded:body Actual
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    _16 => {any(), any()}
  %% Aliased:
  %%    _16
  _35 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35, 
  %%    Actual
  _51 = bif:'=:=' Actual, _35
  br _51, ^51, ^50

51:
  %% Result type:
  %%    'ok'
  ret `ok`

50:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Actual
  _37 = put_list Actual, `[]`

  %% Argument types:
  %%    _37 => nonempty_list(any())
  %% Aliased:
  %%    _35
  %% Unique:
  %%    _37
  _38 = put_list _35, _37

  %% Argument types:
  %%    _38 => nonempty_list(any())
  %% Aliased:
  %%    _36
  %% Unique:
  %%    _38
  _39 = put_list _36, _38

  %% compile_SUITE.erl:2094
  %% Unique:
  %%    _39
  _42 = call (`ct`:`fail`/2), `"Expected type of ~p is ~s, found ~s"`, _39

  %% Aliased:
  %%    _42
  _52 = succeeded:body _42
  br _52, ^52, ^1

52:
  %% Aliased:
  %%    _42
  ret _42

46:
  %% compile_SUITE.erl:2088
  %% Aliased:
  %%    _16
  %% Anno: #{inlined => {'-types_pp/1-inlined-0-',1}}
  _43 = match_fail `function_clause`, _16

  %% Unique:
  %%    _43
  _57 = succeeded:body _43
  br ^1

1:
  _44 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _44
}

%% compile_SUITE.erl:1987
%% Counter = 58
%% bs_ensure_opt: true
function `compile_SUITE`:`'-compile_partition_warnings/2-fun-0-'`(_5) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _50 = bif:is_tuple _5
  br _50, ^50, ^40

50:
  %% Argument types:
  %%    _5 => {...}
  %% Aliased:
  %%    _5
  _51 = bif:tuple_size _5

  %% Argument types:
  %%    _51 => 0..16777215
  %% Unique:
  %%    _51
  _52 = bif:'=:=' _51, `3`
  br _52, ^49, ^40

49:
  %% Argument types:
  %%    _5 => {any(), any(), any()}
  %% Aliased:
  %%    _5
  _33 = get_tuple_element _5, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _45 = bif:is_tuple _33
  br _45, ^45, ^41

45:
  %% Argument types:
  %%    _33 => {...}
  %% Aliased:
  %%    _33
  _46 = bif:tuple_size _33

  %% Argument types:
  %%    _46 => 0..16777215
  %% Unique:
  %%    _46
  _47 = bif:'=:=' _46, `2`
  br _47, ^44, ^41

44:
  %% Argument types:
  %%    _33 => {any(), any()}
  %% Aliased:
  %%    _33
  _35 = get_tuple_element _33, `0`

  %% compile_SUITE.erl:1987
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _3 = bif:is_integer _35
  br _3, ^56, ^41

56:
  %% Argument types:
  %%    _33 => {any(), any()}
  %% Aliased:
  %%    _33
  _34 = get_tuple_element _33, `1`

  %% compile_SUITE.erl:1987
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _4 = bif:is_integer _34
  br _4, ^43, ^41

43:
  %% Result type:
  %%    'true'
  ret `true`

41:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _48 = bif:is_integer _33
  br _48, ^48, ^40

48:
  %% Result type:
  %%    'false'
  ret `false`

40:
  %% compile_SUITE.erl:1987
  %% Aliased:
  %%    _5
  %% Anno: #{inlined => {'-compile_partition_warnings/2-inlined-0-',1}}
  _37 = match_fail `function_clause`, _5

  %% Unique:
  %%    _37
  _53 = succeeded:body _37
  br ^1

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _38
}

%% compile_SUITE.erl:1856
%% Counter = 24
%% bs_ensure_opt: true
function `compile_SUITE`:`'-forms_to_terms/1-lc$^0/1-0-'`(_3) {
0:
  %% Aliased:
  %%    _3
  _19 = is_nonempty_list _3
  br _19, ^19, ^16

19:
  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _10 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _9 = get_tl _3

  %% compile_SUITE.erl:1856
  %% Aliased:
  %%    _10
  _5 = call (`erl_parse`:`anno_to_term`/1), _10

  %% Aliased:
  %%    _5
  _17 = succeeded:body _5
  br _17, ^17, ^1

17:
  %% compile_SUITE.erl:1856
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _9
  _6 = call (`'-forms_to_terms/1-lc$^0/1-0-'`/1), _9

  %% Aliased:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _6 => list(any())
  %% Aliased:
  %%    _5, 
  %%    _6
  _11 = put_list _5, _6
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _11
  ret _11

16:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _20 = bif:'=:=' _3, `[]`
  br _20, ^20, ^15

20:
  %% Result type:
  %%    nil()
  ret `[]`

15:
  %% Argument types:
  %%    _3 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _3
  _8 = put_tuple `bad_generator`, _3

  %% compile_SUITE.erl:1856
  %% Unique:
  %%    _8
  _12 = call (`erlang`:`error`/1), _8

  %% Aliased:
  %%    _12
  _21 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compile_SUITE.erl:1819
%% Counter = 58
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list('binary' | 'deterministic')
function `compile_SUITE`:`'-deterministic_docs_1/3-fun-1-'`(_8, _0, _1, _18) {
0:
  %% compile_SUITE.erl:1820
  _21 = call (`test_server`:`start_peer`/3), `#{}`, `compile_SUITE`, `deterministic_docs_1`

  %% Aliased:
  %%    _21
  _36 = succeeded:body _21
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _53 = is_tagged_tuple _21, `3`, `ok`
  br _53, ^52, ^38

52:
  %% Argument types:
  %%    _21 => {'ok', any(), any()}
  %% Aliased:
  %%    _21
  _23 = get_tuple_element _21, `1`

  %% Aliased:
  %%    _0, 
  %%    _1
  _6 = make_fun (`'-deterministic_docs_1/3-fun-0-'`/2), _0, _1

  %% Argument types:
  %%    _21 => {'ok', any(), any()}
  %% Aliased:
  %%    _21
  _22 = get_tuple_element _21, `2`

  %% compile_SUITE.erl:1822
  %% Aliased:
  %%    _6, 
  %%    _22
  _25 = call (`erpc`:`call`/2), _22, _6

  %% Aliased:
  %%    _25
  _39 = succeeded:body _25
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _46 = is_tagged_tuple _25, `3`, `ok`
  br _46, ^43, ^41

43:
  %% compile_SUITE.erl:1827
  %% Aliased:
  %%    _23
  _30 = call (`peer`:`stop`/1), _23

  %% Aliased:
  %%    _30
  _42 = succeeded:body _30
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    _25 => {'ok', any(), any()}
  %% Aliased:
  %%    _25
  _26 = get_tuple_element _25, `2`

  %% compile_SUITE.erl:1828
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18, 
  %%    _26
  _31 = bif:'=:=' _26, _18
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _31
  ret _31

41:
  %% compile_SUITE.erl:1821
  %% Aliased:
  %%    _25
  _32 = match_fail `badmatch`, _25

  %% Unique:
  %%    _32
  _49 = succeeded:body _32
  br ^1

38:
  %% compile_SUITE.erl:1820
  %% Aliased:
  %%    _21
  _33 = match_fail `badmatch`, _21

  %% Unique:
  %%    _33
  _56 = succeeded:body _33
  br ^1

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _34
}

%% compile_SUITE.erl:1824
%% Counter = 33
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list('binary' | 'deterministic')
function `compile_SUITE`:`'-deterministic_docs_1/3-fun-0-'`(_0, _1) {
0:
  %% compile_SUITE.erl:1825
  %% Aliased:
  %%    _0, 
  %%    _1
  _29 = call (`compile`:`file`/2), _0, _1

  %% Aliased:
  %%    _29
  _32 = succeeded:body _29
  br _32, ^32, ^1

32:
  %% Aliased:
  %%    _29
  ret _29

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% compile_SUITE.erl:1749
%% Counter = 37
%% bs_ensure_opt: true
function `compile_SUITE`:`'-bc_options/1-fun-0-'`(_5, DataDir) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _31 = bif:is_tuple _5
  br _31, ^31, ^24

31:
  %% Argument types:
  %%    _5 => {...}
  %% Aliased:
  %%    _5
  _32 = bif:tuple_size _5

  %% Argument types:
  %%    _32 => 0..16777215
  %% Unique:
  %%    _32
  _33 = bif:'=:=' _32, `3`
  br _33, ^30, ^24

30:
  %% Argument types:
  %%    _5 => {any(), any(), any()}
  %% Aliased:
  %%    _5
  _14 = get_tuple_element _5, `0`

  %% Argument types:
  %%    _5 => {any(), any(), any()}
  %% Aliased:
  %%    _5
  _13 = get_tuple_element _5, `1`

  %% Argument types:
  %%    _5 => {any(), any(), any()}
  %% Aliased:
  %%    _5
  _12 = get_tuple_element _5, `2`

  %% compile_SUITE.erl:1750
  %% Aliased:
  %%    _12, 
  %%    _13, 
  %%    DataDir
  _15 = call (`highest_opcode`/3), DataDir, _13, _12

  %% Aliased:
  %%    _15
  _25 = succeeded:body _15
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14, 
  %%    _15
  _28 = bif:'=:=' _15, _14
  br _28, ^28, ^27

28:
  %% Result type:
  %%    'ok'
  ret `ok`

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _16 = put_list _14, `[]`

  %% Argument types:
  %%    _16 => nonempty_list(any())
  %% Aliased:
  %%    _15
  %% Unique:
  %%    _16
  _17 = put_list _15, _16

  %% Argument types:
  %%    _17 => nonempty_list(any())
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _17
  _18 = put_list _12, _17

  %% Argument types:
  %%    _18 => nonempty_list(any())
  %% Aliased:
  %%    _13
  %% Unique:
  %%    _18
  _19 = put_list _13, _18

  %% compile_SUITE.erl:1754
  %% Unique:
  %%    _19
  _20 = call (`io`:`format`/2), `"*** module ~p, options ~p => got ~p; expected ~p\n"`, _19

  %% Aliased:
  %%    _20
  _29 = succeeded:body _20
  br _29, ^29, ^1

29:
  %% Result type:
  %%    'error'
  ret `error`

24:
  %% compile_SUITE.erl:1749
  %% Aliased:
  %%    _5
  %% Anno: #{inlined => {'-bc_options/1-inlined-0-',1}}
  _21 = match_fail `function_clause`, _5

  %% Unique:
  %%    _21
  _34 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% compile_SUITE.erl:1697
%% Counter = 36
%% bs_ensure_opt: true
function `compile_SUITE`:`'-env_compiler_options/1-fun-0-'`(_4) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _31 = bif:is_tuple _4
  br _31, ^31, ^18

31:
  %% Argument types:
  %%    _4 => {...}
  %% Aliased:
  %%    _4
  _32 = bif:tuple_size _4

  %% Argument types:
  %%    _32 => 0..16777215
  %% Unique:
  %%    _32
  _33 = bif:'=:=' _32, `2`
  br _33, ^30, ^18

30:
  %% Argument types:
  %%    _4 => {any(), any()}
  %% Aliased:
  %%    _4
  _11 = get_tuple_element _4, `0`

  %% Argument types:
  %%    _4 => {any(), any()}
  %% Aliased:
  %%    _4
  _10 = get_tuple_element _4, `1`

  %% compile_SUITE.erl:1698
  %% Aliased:
  %%    _11
  _12 = call (`os`:`putenv`/2), `"ERL_COMPILER_OPTIONS"`, _11

  %% Aliased:
  %%    _12
  _19 = succeeded:body _12
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _28 = bif:'=:=' _12, `true`
  br _28, ^27, ^21

27:
  %% compile_SUITE.erl:1699
  _8 = call (`compile`:`env_compiler_options`/0)

  %% Aliased:
  %%    _8
  _22 = succeeded:body _8
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8, 
  %%    _10
  _25 = bif:'=:=' _8, _10
  br _25, ^25, ^24

25:
  %% Aliased:
  %%    _8
  ret _8

24:
  %% compile_SUITE.erl:1699
  %% Aliased:
  %%    _8
  _13 = match_fail `badmatch`, _8

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br ^1

21:
  %% compile_SUITE.erl:1698
  %% Aliased:
  %%    _12
  _14 = match_fail `badmatch`, _12

  %% Unique:
  %%    _14
  _29 = succeeded:body _14
  br ^1

18:
  %% compile_SUITE.erl:1697
  %% Aliased:
  %%    _4
  %% Anno: #{inlined => {'-env_compiler_options/1-inlined-0-',1}}
  _15 = match_fail `function_clause`, _4

  %% Unique:
  %%    _15
  _34 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compile_SUITE.erl:1683
%% Counter = 32
%% bs_ensure_opt: true
function `compile_SUITE`:`'-compiler_modules/0-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _27 = is_nonempty_list _6
  br _27, ^27, ^22

27:
  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _16 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _15 = get_tl _6

  %% compile_SUITE.erl:1683
  %% Aliased:
  %%    _16
  _8 = call (`filename`:`basename`/1), _16

  %% Aliased:
  %%    _8
  _23 = succeeded:body _8
  br _23, ^23, ^1

23:
  %% compile_SUITE.erl:1683
  %% Aliased:
  %%    _8
  _9 = call (`filename`:`rootname`/2), _8, `".beam"`

  %% Aliased:
  %%    _9
  _24 = succeeded:body _9
  br _24, ^24, ^1

24:
  %% compile_SUITE.erl:1683
  %% Aliased:
  %%    _9
  _10 = call (`erlang`:`list_to_atom`/1), _9

  %% Aliased:
  %%    _10
  _25 = succeeded:body _10
  br _25, ^25, ^1

25:
  %% compile_SUITE.erl:1683
  %% Result type:
  %%    list(atom())
  %% Aliased:
  %%    _15
  _11 = call (`'-compiler_modules/0-lc$^0/1-0-'`/1), _15

  %% Unique:
  %%    _11
  _26 = succeeded:body _11
  br _26, ^26, ^1

26:
  %% Argument types:
  %%    _10 => atom()
  %%    _11 => list(atom())
  %% Unique:
  %%    _10, 
  %%    _11
  _17 = put_list _10, _11
  %% Result type:
  %%    nonempty_list(atom())
  %% Unique:
  %%    _17
  ret _17

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _28 = bif:'=:=' _6, `[]`
  br _28, ^28, ^21

28:
  %% Result type:
  %%    nil()
  ret `[]`

21:
  %% Argument types:
  %%    _6 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _6
  _14 = put_tuple `bad_generator`, _6

  %% compile_SUITE.erl:1683
  %% Unique:
  %%    _14
  _18 = call (`erlang`:`error`/1), _14

  %% Aliased:
  %%    _18
  _29 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% compile_SUITE.erl:1635
%% Counter = 143
%% bs_ensure_opt: true
function `compile_SUITE`:`'-do_pre_load_check/1-lc$^1/1-1-'`(_32) {
0:
  %% Aliased:
  %%    _32
  _139 = is_nonempty_list _32
  br _139, ^139, ^125

139:
  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _93 = get_hd _32

  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _92 = get_tl _32

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _135 = is_tagged_tuple _93, `3`, `code`
  br _135, ^132, ^126

132:
  %% Argument types:
  %%    _93 => {'code', any(), any()}
  %% Aliased:
  %%    _93
  _95 = get_tuple_element _93, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _131 = bif:'=:=' _95, `ensure_loaded`
  br _131, ^130, ^126

130:
  %% Argument types:
  %%    _93 => {'code', 'ensure_loaded', any()}
  %% Aliased:
  %%    _93
  _94 = get_tuple_element _93, `2`

  %% Aliased:
  %%    _94
  _129 = is_nonempty_list _94
  br _129, ^129, ^126

129:
  %% Argument types:
  %%    _94 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _94
  _98 = get_hd _94

  %% Argument types:
  %%    _94 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _94
  _97 = get_tl _94

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _128 = bif:'=:=' _97, `[]`
  br _128, ^128, ^126

128:
  %% compile_SUITE.erl:1635
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _92
  _34 = call (`'-do_pre_load_check/1-lc$^1/1-1-'`/1), _92

  %% Aliased:
  %%    _34
  _127 = succeeded:body _34
  br _127, ^127, ^1

127:
  %% Argument types:
  %%    _34 => list(any())
  %% Aliased:
  %%    _34, 
  %%    _98
  _119 = put_list _98, _34
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _119
  ret _119

126:
  %% compile_SUITE.erl:1635
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _92
  _120 = call (`'-do_pre_load_check/1-lc$^1/1-1-'`/1), _92

  %% Aliased:
  %%    _120
  _138 = succeeded:body _120
  br _138, ^138, ^1

138:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _120
  ret _120

125:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _140 = bif:'=:=' _32, `[]`
  br _140, ^140, ^124

140:
  %% Result type:
  %%    nil()
  ret `[]`

124:
  %% Argument types:
  %%    _32 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _32
  _91 = put_tuple `bad_generator`, _32

  %% compile_SUITE.erl:1635
  %% Unique:
  %%    _91
  _121 = call (`erlang`:`error`/1), _91

  %% Aliased:
  %%    _121
  _141 = succeeded:body _121
  br ^1

1:
  _122 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _122
}

%% compile_SUITE.erl:1629
%% Counter = 130
%% bs_ensure_opt: true
function `compile_SUITE`:`'-do_pre_load_check/1-lc$^0/1-0-'`(_20) {
0:
  %% Aliased:
  %%    _20
  _125 = is_nonempty_list _20
  br _125, ^125, ^121

125:
  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _78 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _77 = get_tl _20

  %% compile_SUITE.erl:1627
  %% Aliased:
  %%    _78
  _114 = call (`code`:`delete`/1), _78

  %% Aliased:
  %%    _114
  _122 = succeeded:body _114
  br _122, ^122, ^1

122:
  %% compile_SUITE.erl:1628
  %% Aliased:
  %%    _78
  _115 = call (`code`:`purge`/1), _78

  %% Aliased:
  %%    _115
  _123 = succeeded:body _115
  br _123, ^123, ^1

123:
  %% compile_SUITE.erl:1629
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _77
  _116 = call (`'-do_pre_load_check/1-lc$^0/1-0-'`/1), _77

  %% Unique:
  %%    _116
  _124 = succeeded:body _116
  br _124, ^124, ^1

124:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _116
  ret _116

121:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _126 = bif:'=:=' _20, `[]`
  br _126, ^126, ^120

126:
  %% Result type:
  %%    nil()
  ret `[]`

120:
  %% Argument types:
  %%    _20 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _20
  _76 = put_tuple `bad_generator`, _20

  %% compile_SUITE.erl:1629
  %% Unique:
  %%    _76
  _117 = call (`erlang`:`error`/1), _76

  %% Aliased:
  %%    _117
  _127 = succeeded:body _117
  br ^1

1:
  _118 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _118
}

%% compile_SUITE.erl:1568
%% Counter = 37
%% bs_ensure_opt: true
function `compile_SUITE`:`'-format_descs/2-lc$^0/1-0-'`(_5, _0) {
0:
  %% Aliased:
  %%    _5
  _32 = is_nonempty_list _5
  br _32, ^32, ^22

32:
  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _13 = get_hd _5

  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _12 = get_tl _5

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _28 = bif:is_tuple _13
  br _28, ^28, ^23

28:
  %% Argument types:
  %%    _13 => {...}
  %% Aliased:
  %%    _13
  _29 = bif:tuple_size _13

  %% Argument types:
  %%    _29 => 0..16777215
  %% Unique:
  %%    _29
  _30 = bif:'=:=' _29, `2`
  br _30, ^35, ^23

35:
  %% Argument types:
  %%    _13 => {any(), any()}
  %% Aliased:
  %%    _13
  _14 = get_tuple_element _13, `1`

  %% compile_SUITE.erl:1567
  %% Aliased:
  %%    _14
  _7 = call (`lists`:`flatten`/1), _14

  %% Aliased:
  %%    _7
  _24 = succeeded:body _7
  br _24, ^24, ^1

24:
  %% compile_SUITE.erl:1567
  %% Aliased:
  %%    _0, 
  %%    _7
  _8 = call (`strip_prefix`/2), _0, _7

  %% Aliased:
  %%    _8
  _25 = succeeded:body _8
  br _25, ^25, ^1

25:
  %% compile_SUITE.erl:1568
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _12
  _9 = call (`'-format_descs/2-lc$^0/1-0-'`/2), _12, _0

  %% Aliased:
  %%    _9
  _26 = succeeded:body _9
  br _26, ^26, ^1

26:
  %% Argument types:
  %%    _9 => list(any())
  %% Aliased:
  %%    _8, 
  %%    _9
  _16 = put_list _8, _9
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _16
  ret _16

23:
  %% compile_SUITE.erl:1568
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _12
  _17 = call (`'-format_descs/2-lc$^0/1-0-'`/2), _12, _0

  %% Aliased:
  %%    _17
  _31 = succeeded:body _17
  br _31, ^31, ^1

31:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _17
  ret _17

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _33 = bif:'=:=' _5, `[]`
  br _33, ^33, ^21

33:
  %% Result type:
  %%    nil()
  ret `[]`

21:
  %% Argument types:
  %%    _5 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _5
  _11 = put_tuple `bad_generator`, _5

  %% compile_SUITE.erl:1568
  %% Unique:
  %%    _11
  _18 = call (`erlang`:`error`/1), _11

  %% Aliased:
  %%    _18
  _34 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% compile_SUITE.erl:1561
%% Counter = 29
%% bs_ensure_opt: true
function `compile_SUITE`:`'-messages/1-fun-0-'`(_1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _24 = bif:is_tuple _1
  br _24, ^24, ^15

24:
  %% Argument types:
  %%    _1 => {...}
  %% Aliased:
  %%    _1
  _25 = bif:tuple_size _1

  %% Argument types:
  %%    _25 => 0..16777215
  %% Unique:
  %%    _25
  _26 = bif:'=:=' _25, `2`
  br _26, ^23, ^15

23:
  %% Argument types:
  %%    _1 => {any(), any()}
  %% Aliased:
  %%    _1
  _7 = get_tuple_element _1, `0`

  %% Argument types:
  %%    _1 => {any(), any()}
  %% Aliased:
  %%    _1
  _6 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _19 = bif:is_tuple _7
  br _19, ^19, ^16

19:
  %% Argument types:
  %%    _7 => {...}
  %% Aliased:
  %%    _7
  _20 = bif:tuple_size _7

  %% Argument types:
  %%    _20 => 0..16777215
  %% Unique:
  %%    _20
  _21 = bif:'=:=' _20, `2`
  br _21, ^28, ^16

28:
  %% Argument types:
  %%    _7 => {any(), any()}
  %% Aliased:
  %%    _7
  _9 = get_tuple_element _7, `0`

  %% compile_SUITE.erl:1561
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _6, 
  %%    _9
  _10 = call (`format_descs`/2), _9, _6

  %% Aliased:
  %%    _10
  _17 = succeeded:body _10
  br _17, ^17, ^1

17:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _10
  ret _10

16:
  %% compile_SUITE.erl:1562
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _6, 
  %%    _7
  _11 = call (`format_descs`/2), _7, _6

  %% Aliased:
  %%    _11
  _22 = succeeded:body _11
  br _22, ^22, ^1

22:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _11
  ret _11

15:
  %% compile_SUITE.erl:1561
  %% Aliased:
  %%    _1
  %% Anno: #{inlined => {'-messages/1-inlined-0-',1}}
  _12 = match_fail `function_clause`, _1

  %% Unique:
  %%    _12
  _27 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compile_SUITE.erl:1439
%% Counter = 14
%% bs_ensure_opt: true
function `compile_SUITE`:`'-beam_ssa_pp_smoke_test/1-fun-0-'`(_6, Outdir) {
0:
  %% compile_SUITE.erl:1439
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _6, 
  %%    Outdir
  _10 = call (`beam_ssa_pp`/2), _6, Outdir

  %% Unique:
  %%    _10
  _13 = succeeded:body _10
  br _13, ^13, ^1

13:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _10
  ret _10

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% compile_SUITE.erl:1342
%% Counter = 15
%% bs_ensure_opt: true
function `compile_SUITE`:`'-asm/1-fun-0-'`(_5, Outdir) {
0:
  %% compile_SUITE.erl:1342
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _5, 
  %%    Outdir
  _11 = call (`do_asm`/2), _5, Outdir

  %% Unique:
  %%    _11
  _14 = succeeded:body _11
  br _14, ^14, ^1

14:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _11
  ret _11

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% compile_SUITE.erl:1303
%% Counter = 28
%% bs_ensure_opt: true
function `compile_SUITE`:`'-remove_compiler_gen/1-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _23 = is_nonempty_list _6
  br _23, ^23, ^20

23:
  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _14 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _13 = get_tl _6

  %% compile_SUITE.erl:1303
  %% Aliased:
  %%    _14
  _8 = call (`remove_compiler_gen_1`/1), _14

  %% Aliased:
  %%    _8
  _21 = succeeded:body _8
  br _21, ^21, ^1

21:
  %% compile_SUITE.erl:1303
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _13
  _9 = call (`'-remove_compiler_gen/1-lc$^0/1-0-'`/1), _13

  %% Aliased:
  %%    _9
  _22 = succeeded:body _9
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    _9 => list(any())
  %% Aliased:
  %%    _8, 
  %%    _9
  _15 = put_list _8, _9
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _15
  ret _15

20:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _24 = bif:'=:=' _6, `[]`
  br _24, ^24, ^19

24:
  %% Result type:
  %%    nil()
  ret `[]`

19:
  %% Argument types:
  %%    _6 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _6
  _12 = put_tuple `bad_generator`, _6

  %% compile_SUITE.erl:1303
  %% Unique:
  %%    _12
  _16 = call (`erlang`:`error`/1), _12

  %% Aliased:
  %%    _16
  _25 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% compile_SUITE.erl:1196
%% Counter = 86
%% bs_ensure_opt: true
function `compile_SUITE`:`'-undo_var_translation/1-fun-0-'`(_10) {
0:
  %% compile_SUITE.erl:1197
  %% Aliased:
  %%    _10
  _19 = call (`cerl`:`is_c_var`/1), _10

  %% Aliased:
  %%    _19
  _33 = succeeded:body _19
  br _33, ^33, ^1

33:
  switch _19, ^35, [
    { `false`, ^66 },
    { `true`, ^67 }
  ]

67:
  %% compile_SUITE.erl:1199
  %% Aliased:
  %%    _10
  Name0 = call (`cerl`:`var_name`/1), _10

  %% Aliased:
  %%    Name0
  _36 = succeeded:body Name0
  br _36, ^84, ^1

84:
  br ^85

85:
  _41 = new_try_tag `'try'`
  br _41, ^40, ^38

40:
  %% compile_SUITE.erl:1200
  %% Aliased:
  %%    Name0
  _26 = call (`erlang`:`atom_to_list`/1), Name0

  %% Aliased:
  %%    _26
  _42 = succeeded:body _26
  br _42, ^42, ^38

42:
  %% Unique:
  %%    _41
  _65 = kill_try_tag _41

  %% Aliased:
  %%    _26
  _55 = is_nonempty_list _26
  br _55, ^55, ^44

55:
  %% Argument types:
  %%    _26 => nonempty_list(0..1114111)
  %% Aliased:
  %%    _26
  _22 = get_hd _26

  %% Argument types:
  %%    _26 => nonempty_list(0..1114111)
  %% Aliased:
  %%    _26
  _21 = get_tl _26

  %% Argument types:
  %%    _22 => 0..1114111
  %% Unique:
  %%    _22
  _54 = bif:'=:=' _22, `95`
  br _54, ^53, ^44

53:
  %% Aliased:
  %%    _21
  _50 = is_nonempty_list _21
  br _50, ^50, ^45

50:
  %% Argument types:
  %%    _21 => nonempty_list(0..1114111)
  %% Aliased:
  %%    _21
  _24 = get_hd _21

  %% Argument types:
  %%    _21 => nonempty_list(0..1114111)
  %% Aliased:
  %%    _21
  _23 = get_tl _21

  %% Argument types:
  %%    _24 => 0..1114111
  %% Unique:
  %%    _24
  _49 = bif:'=:=' _24, `88`
  br _49, ^48, ^45

48:
  %% compile_SUITE.erl:1202
  %% Aliased:
  %%    _23
  _3 = call (`erlang`:`list_to_atom`/1), _23

  %% Aliased:
  %%    _3
  _46 = succeeded:body _3
  br _46, ^46, ^1

46:
  %% compile_SUITE.erl:1202
  %% Aliased:
  %%    _3, 
  %%    _10
  _27 = call (`cerl`:`update_c_var`/2), _10, _3

  %% Aliased:
  %%    _27
  _47 = succeeded:body _27
  br _47, ^47, ^1

47:
  %% Aliased:
  %%    _27
  ret _27

45:
  %% compile_SUITE.erl:1204
  %% Aliased:
  %%    _21
  _4 = call (`erlang`:`list_to_atom`/1), _21

  %% Aliased:
  %%    _4
  _51 = succeeded:body _4
  br _51, ^51, ^1

51:
  %% compile_SUITE.erl:1204
  %% Aliased:
  %%    _4, 
  %%    _10
  _28 = call (`cerl`:`update_c_var`/2), _10, _4

  %% Aliased:
  %%    _28
  _52 = succeeded:body _28
  br _52, ^52, ^1

52:
  %% Aliased:
  %%    _28
  ret _28

44:
  %% Aliased:
  %%    _10
  ret _10

38:
  %% Unique:
  %%    _41
  _63 = landingpad `'try'`, _41

  %% Aliased:
  %%    _63
  _8 = extract _63, `0`

  %% Aliased:
  %%    _63
  _7 = extract _63, `1`

  %% Aliased:
  %%    _63
  _6 = extract _63, `2`

  %% Unique:
  %%    _41
  _64 = kill_try_tag _41

  %% Argument types:
  %%    _8 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _8
  _61 = bif:'=:=' _8, `error`
  br _61, ^60, ^57

60:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _59 = bif:'=:=' _7, `badarg`
  br _59, ^58, ^57

58:
  %% Aliased:
  %%    _10
  ret _10

57:
  %% Aliased:
  %%    _6, 
  %%    _7
  _29 = resume _6, _7

  %% Unique:
  %%    _29
  _62 = succeeded:body _29
  br ^1

66:
  %% Aliased:
  %%    _10
  ret _10

35:
  %% compile_SUITE.erl:1197
  %% Aliased:
  %%    _19
  _30 = match_fail `case_clause`, _19

  %% Unique:
  %%    _30
  _68 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% compile_SUITE.erl:1137
%% Counter = 16
%% bs_ensure_opt: true
function `compile_SUITE`:`'-core_roundtrip/1-fun-0-'`(_6, Outdir) {
0:
  %% compile_SUITE.erl:1137
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _6, 
  %%    Outdir
  _12 = call (`do_core_roundtrip`/2), _6, Outdir

  %% Unique:
  %%    _12
  _15 = succeeded:body _12
  br _15, ^15, ^1

15:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _12
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compile_SUITE.erl:1080
%% Counter = 42
%% bs_ensure_opt: true
function `compile_SUITE`:`'-core_pp/1-fun-1-'`(_14, Outdir) {
0:
  %% compile_SUITE.erl:1080
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _14, 
  %%    Outdir
  _38 = call (`do_core_pp`/2), _14, Outdir

  %% Unique:
  %%    _38
  _41 = succeeded:body _38
  br _41, ^41, ^1

41:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _38
  ret _38

1:
  _39 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _39
}

%% compile_SUITE.erl:1079
%% Counter = 76
%% bs_ensure_opt: true
%% Parameters
%%    _8 =>
%%     list(any())
function `compile_SUITE`:`'-core_pp/1-lc$^0/1-0-'`(_8) {
0:
  %% Aliased:
  %%    _8
  _71 = is_nonempty_list _8
  br _71, ^71, ^72

71:
  %% Argument types:
  %%    _8 => nonempty_list(any())
  %% Aliased:
  %%    _8
  _22 = get_hd _8

  %% Argument types:
  %%    _8 => nonempty_list(any())
  %% Aliased:
  %%    _8
  _21 = get_tl _8

  %% compile_SUITE.erl:1078
  %% Aliased:
  %%    _22
  _23 = call (`beam_lib`:`chunks`/2), _22, `[abstract_code]`

  %% Aliased:
  %%    _23
  _42 = succeeded:body _23
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _67 = is_tagged_tuple _23, `2`, `ok`
  br _67, ^64, ^44

64:
  %% Argument types:
  %%    _23 => {'ok', any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _61 = bif:is_tuple _24
  br _61, ^61, ^44

61:
  %% Argument types:
  %%    _24 => {...}
  %% Aliased:
  %%    _24
  _62 = bif:tuple_size _24

  %% Argument types:
  %%    _62 => 0..16777215
  %% Unique:
  %%    _62
  _63 = bif:'=:=' _62, `2`
  br _63, ^60, ^44

60:
  %% Argument types:
  %%    _24 => {any(), any()}
  %% Aliased:
  %%    _24
  _27 = get_tuple_element _24, `0`

  %% Argument types:
  %%    _24 => {any(), any()}
  %% Aliased:
  %%    _24
  _26 = get_tuple_element _24, `1`

  %% Aliased:
  %%    _26
  _59 = is_nonempty_list _26
  br _59, ^59, ^44

59:
  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _29 = get_hd _26

  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _28 = get_tl _26

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _56 = is_tagged_tuple _29, `2`, `abstract_code`
  br _56, ^53, ^44

53:
  %% Argument types:
  %%    _29 => {'abstract_code', any()}
  %% Aliased:
  %%    _29
  _30 = get_tuple_element _29, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _50 = is_tagged_tuple _30, `2`, `raw_abstract_v1`
  br _50, ^47, ^44

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _46 = bif:'=:=' _28, `[]`
  br _46, ^46, ^44

46:
  %% compile_SUITE.erl:1079
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _21
  _11 = call (`'-core_pp/1-lc$^0/1-0-'`/1), _21

  %% Aliased:
  %%    _11
  _45 = succeeded:body _11
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    _30 => {'raw_abstract_v1', any()}
  %% Aliased:
  %%    _30
  _32 = get_tuple_element _30, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27, 
  %%    _32
  _34 = put_tuple _27, _32

  %% Argument types:
  %%    _34 => {any(), any()}
  %%    _11 => list({any(), any()})
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _34
  _35 = put_list _34, _11
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _35
  ret _35

44:
  %% compile_SUITE.erl:1076
  %% Aliased:
  %%    _23
  _36 = match_fail `badmatch`, _23

  %% Unique:
  %%    _36
  _70 = succeeded:body _36
  br ^1

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _38

72:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% compile_SUITE.erl:815
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(32..121)
function `compile_SUITE`:`'-install_crypto_key/1-fun-0-'`(_1, _0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _23 = bif:is_tuple _1
  br _23, ^23, ^17

23:
  %% Argument types:
  %%    _1 => {...}
  %% Aliased:
  %%    _1
  _25 = is_tagged_tuple _1, `4`, `debug_info`
  br _25, ^20, ^16

20:
  %% Argument types:
  %%    _1 => {'debug_info', any(), any(), any()}
  %% Aliased:
  %%    _1
  _11 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _19 = bif:'=:=' _11, `des3_cbc`
  br _19, ^18, ^16

18:
  %% Result type:
  %%    nonempty_list(32..121)
  %% Aliased:
  %%    _0
  ret _0

17:
  switch _1, ^16, [
    { `clear`, ^26 },
    { `init`, ^26 }
  ]

26:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% compile_SUITE.erl:815
  %% Aliased:
  %%    _1
  %% Anno: #{inlined => {'-install_crypto_key/1-inlined-0-',1}}
  _13 = match_fail `function_clause`, _1

  %% Unique:
  %%    _13
  _27 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% compile_SUITE.erl:722
%% Counter = 233
%% bs_ensure_opt: true
function `compile_SUITE`:`'-encrypted_abstr_1/2-fun-0-'`(_0, TargetDir, TestHome) {
0:
  %% compile_SUITE.erl:723
  %% Aliased:
  %%    TargetDir
  _107 = call (`file`:`set_cwd`/1), TargetDir

  %% Aliased:
  %%    _107
  _161 = succeeded:body _107
  br _161, ^161, ^1

161:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _231 = bif:'=:=' _107, `ok`
  br _231, ^230, ^163

230:
  %% compile_SUITE.erl:725
  %% Aliased:
  %%    _0
  _108 = call (`compile`:`file`/2), _0, `[encrypt_debug_info,report]`

  %% Aliased:
  %%    _108
  _164 = succeeded:body _108
  br _164, ^164, ^1

164:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _228 = bif:'=:=' _108, `error`
  br _228, ^227, ^166

227:
  %% compile_SUITE.erl:731
  _28 = call (`filename`:`basedir`/2), `user_config`, `"erlang"`

  %% Aliased:
  %%    _28
  _167 = succeeded:body _28
  br _167, ^167, ^1

167:
  %% compile_SUITE.erl:730
  %% Aliased:
  %%    _28
  XDGFile = call (`filename`:`join`/2), _28, `".erlang.crypt"`

  %% Aliased:
  %%    XDGFile
  _168 = succeeded:body XDGFile
  br _168, ^168, ^1

168:
  %% compile_SUITE.erl:734
  %% Aliased:
  %%    TestHome
  HOMEFile = call (`filename`:`join`/2), TestHome, `".erlang.crypt"`

  %% Aliased:
  %%    HOMEFile
  _169 = succeeded:body HOMEFile
  br _169, ^169, ^1

169:
  %% compile_SUITE.erl:736
  %% Result type:
  %%    'ok'
  _139 = call (`write_crypt_file`/2), `".erlang.crypt"`, `"better use another key here"`

  %% Aliased:
  %%    _139
  _170 = succeeded:body _139
  br _170, ^170, ^1

170:
  %% compile_SUITE.erl:737
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    XDGFile
  _140 = call (`write_crypt_file`/2), XDGFile, `"better use yet another key here"`

  %% Aliased:
  %%    _140
  _171 = succeeded:body _140
  br _171, ^171, ^1

171:
  %% compile_SUITE.erl:738
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    HOMEFile
  _141 = call (`write_crypt_file`/2), HOMEFile, `"better use the home key here"`

  %% Aliased:
  %%    _141
  _172 = succeeded:body _141
  br _172, ^172, ^1

172:
  %% compile_SUITE.erl:741
  %% Aliased:
  %%    _0
  _109 = call (`compile`:`file`/2), _0, `[encrypt_debug_info,report]`

  %% Aliased:
  %%    _109
  _173 = succeeded:body _109
  br _173, ^173, ^1

173:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _225 = bif:'=:=' _109, `{ok,simple}`
  br _225, ^225, ^175

225:
  %% compile_SUITE.erl:742
  %% Result type:
  %%    {'debug_info', any()}
  _142 = call (`verify_abstract`/2), `"simple.beam"`, `erl_abstract_code`

  %% Aliased:
  %%    _142
  _176 = succeeded:body _142
  br _176, ^176, ^1

176:
  %% compile_SUITE.erl:743
  _110 = call (`file`:`delete`/1), `".erlang.crypt"`

  %% Aliased:
  %%    _110
  _177 = succeeded:body _110
  br _177, ^177, ^1

177:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _223 = bif:'=:=' _110, `ok`
  br _223, ^222, ^179

222:
  %% compile_SUITE.erl:744
  _143 = call (`beam_lib`:`clear_crypto_key_fun`/0)

  %% Aliased:
  %%    _143
  _180 = succeeded:body _143
  br _180, ^180, ^1

180:
  %% compile_SUITE.erl:748
  _111 = call (`beam_lib`:`chunks`/2), `"simple.beam"`, `[abstract_code]`

  %% Aliased:
  %%    _111
  _181 = succeeded:body _111
  br _181, ^181, ^1

181:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _220 = bif:'=:=' _111, `{error,beam_lib,{key_missing_or_invalid,"simple.beam",abstract_code}}`
  br _220, ^220, ^183

220:
  %% compile_SUITE.erl:751
  %% Aliased:
  %%    _0
  _112 = call (`compile`:`file`/2), _0, `[encrypt_debug_info,report]`

  %% Aliased:
  %%    _112
  _184 = succeeded:body _112
  br _184, ^184, ^1

184:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _218 = bif:'=:=' _112, `{ok,simple}`
  br _218, ^218, ^186

218:
  %% compile_SUITE.erl:752
  %% Result type:
  %%    {'debug_info', any()}
  _144 = call (`verify_abstract`/2), `"simple.beam"`, `erl_abstract_code`

  %% Aliased:
  %%    _144
  _187 = succeeded:body _144
  br _187, ^187, ^1

187:
  %% compile_SUITE.erl:753
  %% Aliased:
  %%    HOMEFile
  _113 = call (`file`:`delete`/1), HOMEFile

  %% Aliased:
  %%    _113
  _188 = succeeded:body _113
  br _188, ^188, ^1

188:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _216 = bif:'=:=' _113, `ok`
  br _216, ^215, ^190

215:
  %% compile_SUITE.erl:754
  _145 = call (`beam_lib`:`clear_crypto_key_fun`/0)

  %% Aliased:
  %%    _145
  _191 = succeeded:body _145
  br _191, ^191, ^1

191:
  %% compile_SUITE.erl:758
  _114 = call (`beam_lib`:`chunks`/2), `"simple.beam"`, `[abstract_code]`

  %% Aliased:
  %%    _114
  _192 = succeeded:body _114
  br _192, ^192, ^1

192:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _213 = bif:'=:=' _114, `{error,beam_lib,{key_missing_or_invalid,"simple.beam",abstract_code}}`
  br _213, ^213, ^194

213:
  %% compile_SUITE.erl:762
  %% Aliased:
  %%    _0
  _115 = call (`compile`:`file`/2), _0, `[encrypt_debug_info,report]`

  %% Aliased:
  %%    _115
  _195 = succeeded:body _115
  br _195, ^195, ^1

195:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _115
  _211 = bif:'=:=' _115, `{ok,simple}`
  br _211, ^211, ^197

211:
  %% compile_SUITE.erl:763
  %% Result type:
  %%    {'debug_info', any()}
  _146 = call (`verify_abstract`/2), `"simple.beam"`, `erl_abstract_code`

  %% Aliased:
  %%    _146
  _198 = succeeded:body _146
  br _198, ^198, ^1

198:
  %% compile_SUITE.erl:764
  %% Aliased:
  %%    XDGFile
  _116 = call (`file`:`delete`/1), XDGFile

  %% Aliased:
  %%    _116
  _199 = succeeded:body _116
  br _199, ^199, ^1

199:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _209 = bif:'=:=' _116, `ok`
  br _209, ^208, ^201

208:
  %% compile_SUITE.erl:766
  _147 = call (`beam_lib`:`clear_crypto_key_fun`/0)

  %% Aliased:
  %%    _147
  _202 = succeeded:body _147
  br _202, ^202, ^1

202:
  %% compile_SUITE.erl:768
  _52 = call (`beam_lib`:`chunks`/2), `"simple.beam"`, `[abstract_code]`

  %% Aliased:
  %%    _52
  _203 = succeeded:body _52
  br _203, ^203, ^1

203:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _206 = bif:'=:=' _52, `{error,beam_lib,{key_missing_or_invalid,"simple.beam",abstract_code}}`
  br _206, ^206, ^205

206:
  %% Result type:
  %%    {'error', 'beam_lib', {'key_missing_or_invalid', nonempty_list(46..115), 'abstract_code'}}
  %% Aliased:
  %%    _52
  ret _52

205:
  %% compile_SUITE.erl:767
  %% Aliased:
  %%    _52
  _148 = match_fail `badmatch`, _52

  %% Unique:
  %%    _148
  _207 = succeeded:body _148
  br ^1

201:
  %% compile_SUITE.erl:764
  %% Aliased:
  %%    _116
  _149 = match_fail `badmatch`, _116

  %% Unique:
  %%    _149
  _210 = succeeded:body _149
  br ^1

197:
  %% compile_SUITE.erl:762
  %% Aliased:
  %%    _115
  _150 = match_fail `badmatch`, _115

  %% Unique:
  %%    _150
  _212 = succeeded:body _150
  br ^1

194:
  %% compile_SUITE.erl:757
  %% Aliased:
  %%    _114
  _151 = match_fail `badmatch`, _114

  %% Unique:
  %%    _151
  _214 = succeeded:body _151
  br ^1

190:
  %% compile_SUITE.erl:753
  %% Aliased:
  %%    _113
  _152 = match_fail `badmatch`, _113

  %% Unique:
  %%    _152
  _217 = succeeded:body _152
  br ^1

186:
  %% compile_SUITE.erl:751
  %% Aliased:
  %%    _112
  _153 = match_fail `badmatch`, _112

  %% Unique:
  %%    _153
  _219 = succeeded:body _153
  br ^1

183:
  %% compile_SUITE.erl:747
  %% Aliased:
  %%    _111
  _154 = match_fail `badmatch`, _111

  %% Unique:
  %%    _154
  _221 = succeeded:body _154
  br ^1

179:
  %% compile_SUITE.erl:743
  %% Aliased:
  %%    _110
  _155 = match_fail `badmatch`, _110

  %% Unique:
  %%    _155
  _224 = succeeded:body _155
  br ^1

175:
  %% compile_SUITE.erl:741
  %% Aliased:
  %%    _109
  _156 = match_fail `badmatch`, _109

  %% Unique:
  %%    _156
  _226 = succeeded:body _156
  br ^1

166:
  %% compile_SUITE.erl:725
  %% Aliased:
  %%    _108
  _157 = match_fail `badmatch`, _108

  %% Unique:
  %%    _157
  _229 = succeeded:body _157
  br ^1

163:
  %% compile_SUITE.erl:723
  %% Aliased:
  %%    _107
  _158 = match_fail `badmatch`, _107

  %% Unique:
  %%    _158
  _232 = succeeded:body _158
  br ^1

1:
  _159 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _159
}

%% compile_SUITE.erl:602
%% Counter = 112
%% bs_ensure_opt: true
function `compile_SUITE`:`'-other_output/1-lc$^0/1-0-'`(_7) {
0:
  %% Aliased:
  %%    _7
  _107 = is_nonempty_list _7
  br _107, ^107, ^94

107:
  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _44 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _43 = get_tl _7

  %% compile_SUITE.erl:604
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _45 = bif:element `1`, _44

  %% Aliased:
  %%    _45
  _95 = succeeded:body _45
  br _95, ^95, ^1

95:
  switch _45, ^97, [
    { `attribute`, ^105 },
    { `eof`, ^105 },
    { `function`, ^105 }
  ]

105:
  %% compile_SUITE.erl:602
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _43
  _88 = call (`'-other_output/1-lc$^0/1-0-'`/1), _43

  %% Unique:
  %%    _88
  _102 = succeeded:body _88
  br _102, ^102, ^1

102:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _88
  ret _88

97:
  %% compile_SUITE.erl:604
  %% Aliased:
  %%    _45
  _86 = match_fail `case_clause`, _45

  %% Unique:
  %%    _86
  _99 = succeeded:body _86
  br ^1

94:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _108 = bif:'=:=' _7, `[]`
  br _108, ^108, ^93

108:
  %% Result type:
  %%    nil()
  ret `[]`

93:
  %% Argument types:
  %%    _7 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _7
  _42 = put_tuple `bad_generator`, _7

  %% compile_SUITE.erl:602
  %% Unique:
  %%    _42
  _90 = call (`erlang`:`error`/1), _42

  %% Aliased:
  %%    _90
  _109 = succeeded:body _90
  br ^1

1:
  _91 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _91
}

%% compile_SUITE.erl:578
%% Counter = 168
%% bs_ensure_opt: true
function `compile_SUITE`:`'-p_listings/3-fun-1-'`(_29, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _126 = bif:is_tuple _29
  br _126, ^126, ^78

126:
  %% Argument types:
  %%    _29 => {...}
  %% Aliased:
  %%    _29
  _127 = bif:tuple_size _29

  %% Argument types:
  %%    _127 => 0..16777215
  %% Unique:
  %%    _127
  _128 = bif:'=:=' _127, `2`
  br _128, ^130, ^78

130:
  %% compile_SUITE.erl:579
  Uniq = call (`erlang`:`unique_integer`/1), `[positive]`

  %% Aliased:
  %%    Uniq
  _79 = succeeded:body Uniq
  br _79, ^79, ^1

79:
  %% compile_SUITE.erl:580
  %% Aliased:
  %%    Uniq
  _4 = call (`erlang`:`integer_to_list`/1), Uniq

  %% Aliased:
  %%    _4
  _80 = succeeded:body _4
  br _80, ^80, ^1

80:
  %% compile_SUITE.erl:580
  %% Aliased:
  %%    _2, 
  %%    _4
  Dir = call (`filename`:`join`/2), _2, _4

  %% Aliased:
  %%    Dir
  _81 = succeeded:body Dir
  br _81, ^81, ^1

81:
  %% compile_SUITE.erl:581
  %% Aliased:
  %%    Dir
  _33 = call (`file`:`make_dir`/1), Dir

  %% Aliased:
  %%    _33
  _82 = succeeded:body _33
  br _82, ^82, ^1

82:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _123 = bif:'=:=' _33, `ok`
  br _123, ^164, ^84

164:
  br ^166

166:
  _89 = new_try_tag `'try'`
  br _89, ^163, ^86

163:
  %% Argument types:
  %%    _29 => {any(), any()}
  %% Aliased:
  %%    _29
  _32 = get_tuple_element _29, `0`

  %% Argument types:
  %%    _29 => {any(), any()}
  %% Aliased:
  %%    _29
  _31 = get_tuple_element _29, `1`
  br ^167

167:
  _94 = new_try_tag `'try'`
  br _94, ^93, ^91

93:
  %% compile_SUITE.erl:583
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _1, 
  %%    _31, 
  %%    _32, 
  %%    Dir
  _61 = call (`do_listing`/4), _1, Dir, _32, _31

  %% Unique:
  %%    _61
  _95 = succeeded:body _61
  br _95, ^95, ^91

95:
  %% Unique:
  %%    _94
  _99 = kill_try_tag _94
  br ^92

91:
  %% Aliased:
  %%    _94
  _97 = landingpad `'try'`, _94

  %% Aliased:
  %%    _97
  _10 = extract _97, `0`

  %% Aliased:
  %%    _97
  _9 = extract _97, `1`

  %% Aliased:
  %%    _97
  _8 = extract _97, `2`

  %% Aliased:
  %%    _94
  _98 = kill_try_tag _94

  %% Aliased:
  %%    _8
  Stk = build_stacktrace _8

  %% Argument types:
  %%    
  %% Aliased:
  %%    Stk
  _34 = put_list Stk, `[]`

  %% Argument types:
  %%    _34 => nonempty_list(any())
  %% Aliased:
  %%    _9
  %% Unique:
  %%    _34
  _35 = put_list _9, _34

  %% Argument types:
  %%    _10 => 'error' | 'exit' | 'throw'
  %%    _35 => nonempty_list(any())
  %% Unique:
  %%    _10, 
  %%    _35
  _36 = put_list _10, _35
  br ^131

131:
  %% compile_SUITE.erl:587
  %% Unique:
  %%    _36
  _62 = call (`io`:`format`/2), `"~p:~p\n~p\n"`, _36

  %% Aliased:
  %%    _62
  _96 = succeeded:body _62
  br _96, ^96, ^86

96:
  br ^92

92:
  _59 = phi { `ok`, ^95 }, { `error`, ^96 }

  %% Aliased:
  %%    _89
  _121 = kill_try_tag _89

  %% compile_SUITE.erl:591
  %% Aliased:
  %%    Dir
  _13 = call (`filename`:`join`/2), Dir, `"*"`

  %% Aliased:
  %%    _13
  _100 = succeeded:body _13
  br _100, ^100, ^1

100:
  %% compile_SUITE.erl:591
  %% Aliased:
  %%    _13
  _14 = call (`filelib`:`wildcard`/1), _13

  %% Aliased:
  %%    _14
  _101 = succeeded:body _14
  br _101, ^101, ^1

101:
  %% compile_SUITE.erl:591
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _14
  _66 = call (`'-p_listings/3-lc$^0/1-1-'`/1), _14

  %% Unique:
  %%    _66
  _102 = succeeded:body _66
  br _102, ^102, ^1

102:
  %% compile_SUITE.erl:592
  %% Aliased:
  %%    Dir
  _42 = call (`file`:`del_dir`/1), Dir

  %% Aliased:
  %%    _42
  _103 = succeeded:body _42
  br _103, ^103, ^1

103:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _107 = bif:'=:=' _42, `ok`
  br _107, ^106, ^105

106:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _59
  ret _59

105:
  %% compile_SUITE.erl:582
  %% Aliased:
  %%    _42
  _67 = match_fail `badmatch`, _42

  %% Unique:
  %%    _67
  _108 = succeeded:body _67
  br ^1

86:
  %% Aliased:
  %%    _89
  _119 = landingpad `'try'`, _89

  %% Aliased:
  %%    _119
  _27 = extract _119, `1`

  %% Aliased:
  %%    _119
  _26 = extract _119, `2`

  %% Aliased:
  %%    _89
  _120 = kill_try_tag _89
  br ^133

133:
  %% compile_SUITE.erl:591
  %% Aliased:
  %%    Dir
  _54 = call (`filename`:`join`/2), Dir, `"*"`

  %% Aliased:
  %%    _54
  _109 = succeeded:body _54
  br _109, ^109, ^1

109:
  %% compile_SUITE.erl:591
  %% Aliased:
  %%    _54
  _55 = call (`filelib`:`wildcard`/1), _54

  %% Aliased:
  %%    _55
  _110 = succeeded:body _55
  br _110, ^110, ^1

110:
  %% compile_SUITE.erl:591
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _55
  _71 = call (`'-p_listings/3-lc$^0/1-2-'`/1), _55

  %% Unique:
  %%    _71
  _111 = succeeded:body _71
  br _111, ^111, ^1

111:
  %% compile_SUITE.erl:592
  %% Aliased:
  %%    Dir
  _56 = call (`file`:`del_dir`/1), Dir

  %% Aliased:
  %%    _56
  _112 = succeeded:body _56
  br _112, ^112, ^1

112:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _117 = bif:'=:=' _56, `ok`
  br _117, ^116, ^114

116:
  %% Aliased:
  %%    _26, 
  %%    _27
  _72 = resume _26, _27

  %% Unique:
  %%    _72
  _115 = succeeded:body _72
  br ^1

114:
  %% compile_SUITE.erl:582
  %% Aliased:
  %%    _56
  _73 = match_fail `badmatch`, _56

  %% Unique:
  %%    _73
  _118 = succeeded:body _73
  br ^1

84:
  %% compile_SUITE.erl:581
  %% Aliased:
  %%    _33
  _74 = match_fail `badmatch`, _33

  %% Unique:
  %%    _74
  _124 = succeeded:body _74
  br ^1

78:
  %% compile_SUITE.erl:578
  %% Aliased:
  %%    _29
  %% Anno: #{inlined => {'-p_listings/3-inlined-0-',1}}
  _75 = match_fail `function_clause`, _29

  %% Unique:
  %%    _75
  _129 = succeeded:body _75
  br ^1

1:
  _76 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _76
}

%% compile_SUITE.erl:591
%% Counter = 87
%% bs_ensure_opt: true
function `compile_SUITE`:`'-p_listings/3-lc$^0/1-2-'`(_43) {
0:
  %% Aliased:
  %%    _43
  _82 = is_nonempty_list _43
  br _82, ^82, ^74

82:
  %% Argument types:
  %%    _43 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _43
  _51 = get_hd _43

  %% Argument types:
  %%    _43 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _43
  _50 = get_tl _43

  %% compile_SUITE.erl:590
  %% Aliased:
  %%    _51
  _52 = call (`file`:`delete`/1), _51

  %% Aliased:
  %%    _52
  _75 = succeeded:body _52
  br _75, ^75, ^1

75:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _80 = bif:'=:=' _52, `ok`
  br _80, ^79, ^77

79:
  %% compile_SUITE.erl:591
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _50
  _68 = call (`'-p_listings/3-lc$^0/1-2-'`/1), _50

  %% Unique:
  %%    _68
  _78 = succeeded:body _68
  br _78, ^78, ^1

78:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _68
  ret _68

77:
  %% compile_SUITE.erl:590
  %% Aliased:
  %%    _52
  _69 = match_fail `badmatch`, _52

  %% Unique:
  %%    _69
  _81 = succeeded:body _69
  br ^1

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _83 = bif:'=:=' _43, `[]`
  br _83, ^83, ^73

83:
  %% Result type:
  %%    nil()
  ret `[]`

73:
  %% Argument types:
  %%    _43 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _43
  _49 = put_tuple `bad_generator`, _43

  %% compile_SUITE.erl:591
  %% Unique:
  %%    _49
  _70 = call (`erlang`:`error`/1), _49

  %% Aliased:
  %%    _70
  _84 = succeeded:body _70
  br ^1

1:
  _71 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _71
}

%% compile_SUITE.erl:591
%% Counter = 82
%% bs_ensure_opt: true
function `compile_SUITE`:`'-p_listings/3-lc$^0/1-1-'`(_15) {
0:
  %% Aliased:
  %%    _15
  _77 = is_nonempty_list _15
  br _77, ^77, ^69

77:
  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _40 = get_hd _15

  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _39 = get_tl _15

  %% compile_SUITE.erl:590
  %% Aliased:
  %%    _40
  _41 = call (`file`:`delete`/1), _40

  %% Aliased:
  %%    _41
  _70 = succeeded:body _41
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _75 = bif:'=:=' _41, `ok`
  br _75, ^74, ^72

74:
  %% compile_SUITE.erl:591
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _39
  _63 = call (`'-p_listings/3-lc$^0/1-1-'`/1), _39

  %% Unique:
  %%    _63
  _73 = succeeded:body _63
  br _73, ^73, ^1

73:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _63
  ret _63

72:
  %% compile_SUITE.erl:590
  %% Aliased:
  %%    _41
  _64 = match_fail `badmatch`, _41

  %% Unique:
  %%    _64
  _76 = succeeded:body _64
  br ^1

69:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _78 = bif:'=:=' _15, `[]`
  br _78, ^78, ^68

78:
  %% Result type:
  %%    nil()
  ret `[]`

68:
  %% Argument types:
  %%    _15 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _15
  _38 = put_tuple `bad_generator`, _15

  %% compile_SUITE.erl:591
  %% Unique:
  %%    _38
  _65 = call (`erlang`:`error`/1), _38

  %% Aliased:
  %%    _65
  _79 = succeeded:body _65
  br ^1

1:
  _66 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _66
}

%% compile_SUITE.erl:559
%% Counter = 43
%% bs_ensure_opt: true
function `compile_SUITE`:`'-do_file_listings/3-fun-0-'`(_13) {
0:
  %% compile_SUITE.erl:559
  %% Aliased:
  %%    _13
  _22 = call (`file`:`delete`/1), _13

  %% Aliased:
  %%    _22
  _37 = succeeded:body _22
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _41 = bif:'=:=' _22, `ok`
  br _41, ^40, ^39

40:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _22
  ret _22

39:
  %% compile_SUITE.erl:559
  %% Aliased:
  %%    _22
  _34 = match_fail `badmatch`, _22

  %% Unique:
  %%    _34
  _42 = succeeded:body _34
  br ^1

1:
  _35 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _35
}

%% compile_SUITE.erl:199
%% Counter = 240
%% bs_ensure_opt: true
%% Parameters
%%    _47 =>
%%     list(atom())
function `compile_SUITE`:`'-file_1/1-lc$^0/1-0-'`(_47, _96) {
0:
  %% Unique:
  %%    _47
  _234 = is_nonempty_list _47
  br _234, ^234, ^235

234:
  %% Argument types:
  %%    _47 => nonempty_list(atom())
  %% Unique:
  %%    _47
  _149 = get_hd _47

  %% Argument types:
  %%    _47 => nonempty_list(atom())
  %% Unique:
  %%    _47
  _148 = get_tl _47

  %% Argument types:
  %%    _149 => atom()
  %% Unique:
  %%    _149
  _150 = put_list _149, `[return]`

  %% compile_SUITE.erl:197
  %% Aliased:
  %%    _96
  %% Unique:
  %%    _150
  _151 = call (`compile`:`file`/2), _96, _150

  %% Aliased:
  %%    _151
  _193 = succeeded:body _151
  br _193, ^193, ^1

193:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _151
  _230 = is_tagged_tuple _151, `3`, `error`
  br _230, ^227, ^195

227:
  %% Argument types:
  %%    _151 => {'error', any(), any()}
  %% Aliased:
  %%    _151
  _153 = get_tuple_element _151, `1`

  %% Aliased:
  %%    _153
  _226 = is_nonempty_list _153
  br _226, ^226, ^195

226:
  %% Argument types:
  %%    _153 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _153
  _156 = get_hd _153

  %% Argument types:
  %%    _153 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _153
  _155 = get_tl _153

  %% Argument types:
  %%    
  %% Aliased:
  %%    _156
  _223 = bif:is_tuple _156
  br _223, ^223, ^195

223:
  %% Argument types:
  %%    _156 => {...}
  %% Aliased:
  %%    _156
  _224 = bif:tuple_size _156

  %% Argument types:
  %%    _224 => 0..16777215
  %% Unique:
  %%    _224
  _225 = bif:'=:=' _224, `2`
  br _225, ^222, ^195

222:
  %% Argument types:
  %%    _156 => {any(), any()}
  %% Aliased:
  %%    _156
  _157 = get_tuple_element _156, `1`

  %% Aliased:
  %%    _157
  _221 = is_nonempty_list _157
  br _221, ^221, ^195

221:
  %% Argument types:
  %%    _157 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _157
  _160 = get_hd _157

  %% Argument types:
  %%    _157 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _157
  _159 = get_tl _157

  %% Argument types:
  %%    
  %% Aliased:
  %%    _160
  _218 = is_tagged_tuple _160, `3`, `none`
  br _218, ^215, ^195

215:
  %% Argument types:
  %%    _160 => {'none', any(), any()}
  %% Aliased:
  %%    _160
  _162 = get_tuple_element _160, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _162
  _214 = bif:'=:=' _162, `compile`
  br _214, ^213, ^195

213:
  %% Argument types:
  %%    _160 => {'none', 'compile', any()}
  %% Aliased:
  %%    _160
  _161 = get_tuple_element _160, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _210 = is_tagged_tuple _161, `2`, `obsolete_option`
  br _210, ^207, ^195

207:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _206 = bif:'=:=' _159, `[]`
  br _206, ^206, ^195

206:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _155
  _205 = bif:'=:=' _155, `[]`
  br _205, ^205, ^195

205:
  %% Argument types:
  %%    _151 => {'error', any(), any()}
  %% Aliased:
  %%    _151
  _152 = get_tuple_element _151, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _152
  _204 = bif:'=:=' _152, `[]`
  br _204, ^204, ^195

204:
  %% Argument types:
  %%    _161 => {'obsolete_option', any()}
  %% Aliased:
  %%    _161
  _164 = get_tuple_element _161, `1`

  %% Argument types:
  %%    _149 => atom()
  %% Aliased:
  %%    _164
  %% Unique:
  %%    _149
  _196 = bif:'=:=' _164, _149
  br _196, ^196, ^195

196:
  %% Argument types:
  %%    _149 => atom()
  %% Unique:
  %%    _149
  _166 = put_list _149, `[report]`

  %% compile_SUITE.erl:198
  %% Aliased:
  %%    _96
  %% Unique:
  %%    _166
  _167 = call (`compile`:`file`/2), _96, _166

  %% Aliased:
  %%    _167
  _197 = succeeded:body _167
  br _197, ^197, ^1

197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _202 = bif:'=:=' _167, `error`
  br _202, ^201, ^199

201:
  %% compile_SUITE.erl:199
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _96
  %% Unique:
  %%    _148
  _185 = call (`'-file_1/1-lc$^0/1-0-'`/2), _148, _96

  %% Unique:
  %%    _185
  _200 = succeeded:body _185
  br _200, ^200, ^1

200:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _185
  ret _185

199:
  %% compile_SUITE.erl:198
  %% Aliased:
  %%    _167
  _186 = match_fail `badmatch`, _167

  %% Unique:
  %%    _186
  _203 = succeeded:body _186
  br ^1

195:
  %% compile_SUITE.erl:194
  %% Aliased:
  %%    _151
  _187 = match_fail `badmatch`, _151

  %% Unique:
  %%    _187
  _233 = succeeded:body _187
  br ^1

1:
  _189 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _189

235:
  %% Result type:
  %%    nil()
  ret `[]`
}
