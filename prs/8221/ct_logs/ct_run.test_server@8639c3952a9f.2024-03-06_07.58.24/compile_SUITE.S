{module, compile_SUITE}.  %% version = 0

{exports, [{all,0},
           {annotations_pp,1},
           {app_test,1},
           {appup_test,1},
           {asm,1},
           {asm_labels,1},
           {bc_options,1},
           {bigE_roundtrip,1},
           {binary,1},
           {bs_init_writable,1},
           {compile_attribute,1},
           {cond_and_ifdef,1},
           {core_pp,1},
           {core_roundtrip,1},
           {cover,1},
           {custom_compile_info,1},
           {custom_debug_info,1},
           {debug_info,4},
           {deterministic_include,1},
           {deterministic_paths,1},
           {dialyzer,1},
           {encrypted_abstr,1},
           {end_per_group,2},
           {end_per_suite,1},
           {env,1},
           {env_compiler_options,1},
           {erl_compile_api,1},
           {extra_chunks,1},
           {file_1,1},
           {forms_2,1},
           {groups,0},
           {init_per_group,2},
           {init_per_suite,1},
           {listings,1},
           {listings_big,1},
           {makedep,1},
           {message_printing,1},
           {module_info,0},
           {module_info,1},
           {module_mismatch,1},
           {no_core_prepare,1},
           {option_order,1},
           {other_options,1},
           {other_output,1},
           {outdir,1},
           {pre_load_check,1},
           {strict_record,1},
           {suite,0},
           {sys_pre_attributes,1},
           {transforms,1},
           {tuple_calls,1},
           {types_pp,1},
           {utf8_atoms,1},
           {utf8_functions,1},
           {warnings,1}]}.

{attributes, []}.

{labels, 955}.


{function, suite, 0, 2}.
  {label,1}.
    {line,[{location,"compile_SUITE.erl",45}]}.
    {func_info,{atom,compile_SUITE},{atom,suite},0}.
  {label,2}.
    {move,{literal,[{ct_hooks,[ts_install_cth]}]},{x,0}}.
    return.


{function, all, 0, 4}.
  {label,3}.
    {line,[{location,"compile_SUITE.erl",51}]}.
    {func_info,{atom,compile_SUITE},{atom,all},0}.
  {label,4}.
    {move,{literal,[app_test,appup_test,bigE_roundtrip,file_1,forms_2,
                    module_mismatch,outdir,binary,makedep,cond_and_ifdef,
                    listings,listings_big,other_output,encrypted_abstr,
                    tuple_calls,strict_record,utf8_atoms,utf8_functions,
                    extra_chunks,cover,env,core_pp,core_roundtrip,asm,
                    asm_labels,no_core_prepare,sys_pre_attributes,dialyzer,
                    warnings,pre_load_check,env_compiler_options,
                    custom_debug_info,bc_options,custom_compile_info,
                    deterministic_include,deterministic_paths,
                    compile_attribute,message_printing,other_options,
                    transforms,erl_compile_api,types_pp,bs_init_writable,
                    annotations_pp,option_order]},
          {x,0}}.
    return.


{function, groups, 0, 6}.
  {label,5}.
    {line,[{location,"compile_SUITE.erl",65}]}.
    {func_info,{atom,compile_SUITE},{atom,groups},0}.
  {label,6}.
    {move,nil,{x,0}}.
    return.


{function, init_per_suite, 1, 8}.
  {label,7}.
    {line,[{location,"compile_SUITE.erl",68}]}.
    {func_info,{atom,compile_SUITE},{atom,init_per_suite},1}.
  {label,8}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {move,{atom,compile_SUITE},{x,0}}.
    {line,[{location,"compile_SUITE.erl",69}]}.
    {call_ext,1,{extfunc,test_lib,recompile,1}}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.


{function, end_per_suite, 1, 10}.
  {label,9}.
    {line,[{location,"compile_SUITE.erl",72}]}.
    {func_info,{atom,compile_SUITE},{atom,end_per_suite},1}.
  {label,10}.
    {move,{atom,ok},{x,0}}.
    return.


{function, init_per_group, 2, 12}.
  {label,11}.
    {line,[{location,"compile_SUITE.erl",75}]}.
    {func_info,{atom,compile_SUITE},{atom,init_per_group},2}.
  {label,12}.
    {move,{x,1},{x,0}}.
    return.


{function, end_per_group, 2, 14}.
  {label,13}.
    {line,[{location,"compile_SUITE.erl",78}]}.
    {func_info,{atom,compile_SUITE},{atom,end_per_group},2}.
  {label,14}.
    {move,{x,1},{x,0}}.
    return.


{function, app_test, 1, 16}.
  {label,15}.
    {line,[{location,"compile_SUITE.erl",84}]}.
    {func_info,{atom,compile_SUITE},{atom,app_test},1}.
  {label,16}.
    {test,is_list,{f,15},[{x,0}]}.
    {move,{atom,compiler},{x,0}}.
    {line,[{location,"compile_SUITE.erl",85}]}.
    {call_ext_only,1,{extfunc,test_server,app_test,1}}.


{function, appup_test, 1, 18}.
  {label,17}.
    {line,[{location,"compile_SUITE.erl",88}]}.
    {func_info,{atom,compile_SUITE},{atom,appup_test},1}.
  {label,18}.
    {test,is_list,{f,17},[{x,0}]}.
    {allocate,0,0}.
    {move,{atom,compiler},{x,0}}.
    {line,[{location,"compile_SUITE.erl",89}]}.
    {call_ext,1,{extfunc,test_server,appup_test,1}}.
    {test,is_eq_exact,{f,19},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,19}.
    {badmatch,{x,0}}.


{function, bigE_roundtrip, 1, 21}.
  {label,20}.
    {line,[{location,"compile_SUITE.erl",94}]}.
    {func_info,{atom,compile_SUITE},{atom,bigE_roundtrip},1}.
  {label,21}.
    {test,is_list,{f,20},[{x,0}]}.
    {allocate,4,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {move,{x,0},{y,3}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",95}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,3},{x,1}}.
    {move,{x,0},{y,3}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",96}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {swap,{y,3},{x,0}}.
    {move,{literal,"bigE.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",97}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {swap,{y,3},{x,0}}.
    {move,{literal,"bigE"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",98}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,2}}.
    {move,{literal,"bigE.E"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",99}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{y,2},{x,0}}.
    {move,{literal,"bigE.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",100}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",101}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,27},[{x,0},{atom,ok}]}.
    {test_heap,6,0}.
    {put_list,{y,1},nil,{x,0}}.
    {put_list,{y,2},{x,0},{x,0}}.
    {put_list,{y,3},{x,0},{x,1}}.
    {move,{literal,"Source: ~p~nTargetDir: ~p~nTarget: ~p\n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",102}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {test_heap,9,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,warnings_as_errors},{x,0},{x,0}}.
    {put_list,{atom,'E'},{x,0},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {line,[{location,"compile_SUITE.erl",104}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,22},[{x,0},2,{atom,ok}]}.
    {jump,{f,23}}.
  {label,22}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,unexpected_result},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",107}]}.
    {call_ext,1,{extfunc,ct,fail,1}}.
  {label,23}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",112}]}.
    {call_ext,2,{extfunc,file,rename,2}}.
    {test,is_eq_exact,{f,26},[{x,0},{atom,ok}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,warnings_as_errors},{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",113}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,24},[{x,0},2,{atom,ok}]}.
    {jump,{f,25}}.
  {label,24}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,unexpected_result},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",116}]}.
    {call_ext,1,{extfunc,ct,fail,1}}.
  {label,25}.
    {move,{y,0},{x,0}}.
    {move,{y,2},{y,3}}.
    {trim,3,1}.
    {line,[{location,"compile_SUITE.erl",118}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",119}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,26}.
    {line,[{location,"compile_SUITE.erl",112}]}.
    {badmatch,{x,0}}.
  {label,27}.
    {line,[{location,"compile_SUITE.erl",101}]}.
    {badmatch,{x,0}}.


{function, file_1, 1, 29}.
  {label,28}.
    {line,[{location,"compile_SUITE.erl",125}]}.
    {func_info,{atom,compile_SUITE},{atom,file_1},1}.
  {label,29}.
    {test,is_list,{f,28},[{x,0}]}.
    {allocate,7,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2},{y,3},{y,4},{y,5}]}}.
    {move,{x,0},{y,6}}.
    {move,{atom,true},{x,1}}.
    {move,{atom,trap_exit},{x,0}}.
    {line,[{location,"compile_SUITE.erl",126}]}.
    {call_ext,2,{extfunc,erlang,process_flag,2}}.
    {move,{y,6},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",128}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,5}}.
    {move,{y,6},{x,1}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",129}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,4}}.
    {move,{y,6},{x,1}}.
    {move,{literal,"file_1"},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",131}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{y,3}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"compile_SUITE.erl",132}]}.
    {call_ext,0,{extfunc,file,get_cwd,0}}.
    {move,{x,0},{y,1}}.
    {test,is_tagged_tuple,{f,72},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{y,2},1,{y,2}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",133}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,71},[{x,0},{atom,ok}]}.
    {move,{literal,[slim]},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",135}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,70},[{x,0},{literal,{ok,simple}}]}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",136}]}.
    {call_ext,1,{extfunc,compile,file,1}}.
    {test,is_eq_exact,{f,69},[{x,0},{literal,{ok,simple}}]}.
    {move,{y,2},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",138}]}.
    {call,3,{f,726}}. % compile_and_verify/3
    {'%',{var_info,{x,0},
                   [{type,{t_list,{t_atom,[debug_info,no_postopt]},nil}}]}}.
    {move,{y,2},{x,1}}.
    {move,{literal,[debug_info]},{x,2}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",139}]}.
    {call,3,{f,726}}. % compile_and_verify/3
    {'%',{var_info,{x,0},
                   [{type,{t_list,{t_atom,[debug_info,no_postopt]},nil}}]}}.
    {move,{y,2},{x,1}}.
    {move,{literal,[no_postopt]},{x,2}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",140}]}.
    {call,3,{f,726}}. % compile_and_verify/3
    {'%',{var_info,{x,0},
                   [{type,{t_list,{t_atom,[debug_info,no_postopt]},nil}}]}}.
    {move,{literal,[no_line_info]},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",142}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,68},[{x,0},{literal,{ok,simple}}]}.
    {move,{literal,[{eprof,beam_z}]},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",143}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,67},[{x,0},{literal,{ok,simple}}]}.
    {move,{literal,[{call_time,beam_z}]},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",144}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,66},[{x,0},{literal,{ok,simple}}]}.
    {move,{literal,[{call_memory,beam_z}]},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",145}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,65},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,no_postopt},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",148}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,64},[{x,0},{literal,{ok,simple}}]}.
    {move,{literal,[dabstr]},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",151}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,63},[{x,0},{literal,{ok,[]}}]}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",152}]}.
    {call_ext,1,{extfunc,filename,rootname,1}}.
    {move,{literal,[from_abstr]},{x,1}}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,62},[{x,0},{literal,{ok,simple}}]}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",153}]}.
    {call_ext,1,{extfunc,filename,rootname,1}}.
    {move,{literal,".abstr"},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,61},[{x,0},{atom,ok}]}.
    {move,{literal,[deterministic]},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",156}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,60},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,simple},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",157}]}.
    {call_ext,1,{extfunc,c,l,1}}.
    {test,is_eq_exact,{f,59},[{x,0},{literal,{module,simple}}]}.
    {move,{atom,compile},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",158}]}.
    {call_ext,1,{extfunc,simple,module_info,1}}.
    {test,is_nonempty_list,{f,58},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tagged_tuple,{f,58},[{x,1},2,{atom,version}]}.
    {test,is_nil,{f,58},[{x,2}]}.
    {move,{atom,simple},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",159}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {test,is_eq_exact,{f,57},[{x,0},{atom,true}]}.
    {move,{atom,simple},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",160}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {test,is_eq_exact,{f,56},[{x,0},{atom,false}]}.
    {get_tuple_element,{y,1},1,{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",162}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,55},[{x,0},{atom,ok}]}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",163}]}.
    {call,1,{f,295}}. % exists/1
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,54},[{x,0},{atom,true}]}.
    {move,{atom,test},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",164}]}.
    {call,3,{f,289}}. % run/3
    {test,is_eq_exact,{f,53},[{x,0},{atom,passed}]}.
    {move,{atom,deterministic_module},{x,1}}.
    {move,{literal,"det_target"},{x,2}}.
    {move,{y,6},{x,0}}.
    {init_yregs,{list,[{y,6}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",168}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {move,{x,1},{x,0}}.
    {move,{literal,[binary]},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",169}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,52},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,52},[{x,1},{atom,deterministic_module}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {move,nil,{x,1}}.
    {move,{atom,deterministic_module},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",170}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {test,is_tagged_tuple,{f,51},[{x,0},2,{atom,module}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,51},[{x,1},{atom,deterministic_module}]}.
    {move,{atom,compile},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",171}]}.
    {call_ext,1,{extfunc,deterministic_module,module_info,1}}.
    {test,is_nonempty_list,{f,50},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tagged_tuple,{f,50},[{x,1},2,{atom,version}]}.
    {test,is_nil,{f,50},[{x,2}]}.
    {move,{atom,deterministic_module},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",172}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {test,is_eq_exact,{f,49},[{x,0},{atom,true}]}.
    {move,{atom,deterministic_module},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",173}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {test,is_eq_exact,{f,48},[{x,0},{atom,false}]}.
    {move,{literal,[report]},{x,1}}.
    {move,{atom,definitely__no__such__module},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",177}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,47},[{x,0},{atom,error}]}.
    {move,{literal,[from_abstr,report]},{x,1}}.
    {move,{atom,definitely__no__such__module},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",178}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,46},[{x,0},{atom,error}]}.
    {move,{literal,[from_core,report]},{x,1}}.
    {move,{atom,definitely__no__such__module},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",179}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,45},[{x,0},{atom,error}]}.
    {move,{literal,[from_asm,report]},{x,1}}.
    {move,{atom,definitely__no__such__module},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",180}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,44},[{x,0},{atom,error}]}.
    {move,{literal,"bad_core"},{x,1}}.
    {move,{y,5},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",182}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{literal,[from_core,report]},{x,1}}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,43},[{x,0},{atom,error}]}.
    {move,{literal,"bad_core_tokens"},{x,1}}.
    {move,{y,5},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",183}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{literal,[from_core,report]},{x,1}}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,42},[{x,0},{atom,error}]}.
    {move,{y,3},{x,1}}.
    {move,{literal,[r18,r19,r20,r21,r22,r23,no_bsm3,no_get_hd_tl,
                    no_put_tuple2,no_utf8_atoms,no_swap,no_init_yregs,
                    no_shared_fun_wrappers,no_make_fun3]},
          {x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",195}]}.
    {call,2,{f,941}}. % '-file_1/1-lc$^0/1-0-'/2
    {'%',{var_info,{x,0},[{type,nil}]}}.
    {move,{literal,"simple"},{x,1}}.
    {move,{y,5},{x,0}}.
    {init_yregs,{list,[{y,5}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",199}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test,is_eq_exact,{f,41},[{x,0},{y,3}]}.
    {move,{literal,"simple.bea#"},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",200}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,5}}.
    {move,{y,4},{x,0}}.
    {move,{literal,"simple.beam"},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",201}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,5},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",202}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,40},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",203}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,39},[{x,0},{atom,ok}]}.
    {test_heap,5,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,4}]}}.
    {put_list,{x,0},{literal,[report]},{x,1}}.
    {'try',{y,6},{f,33}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",205}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,38},[{x,0},{atom,error}]}.
    {move,{y,5},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",206}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test_heap,5,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,4}]}}.
    {put_list,{x,0},{literal,[report]},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3},{y,4}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",207}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,37},[{x,0},{atom,error}]}.
    {try_end,{y,6}}.
    {move,{y,5},{x,0}}.
    {init_yregs,{list,[{y,5}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",209}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",210}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",214}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,36},[{x,0},{atom,ok}]}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",215}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,35},[{x,0},{atom,ok}]}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",216}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,34},[{x,0},{atom,ok}]}.
  {label,30}.
    {loop_rec,{f,31},{x,0}}.
    {test_heap,3,1}.
    remove_message.
    {put_tuple2,{x,0},{list,[{atom,unexpected},{x,0}]}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",221}]}.
    {call_ext,1,{extfunc,ct,fail,1}}.
    {jump,{f,32}}.
  {label,31}.
    {wait_timeout,{f,30},{integer,10}}.
    timeout.
  {label,32}.
    {move,{atom,ok},{x,0}}.
    {deallocate,7}.
    return.
  {label,33}.
    {try_case,{y,6}}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {move,{y,5},{x,0}}.
    {move,{y,0},{y,6}}.
    {move,{y,3},{y,5}}.
    {trim,4,3}.
    {line,[{scope,[1,3]},{location,"compile_SUITE.erl",209}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {move,{y,2},{x,0}}.
    {move,{y,0},{y,2}}.
    {trim,1,2}.
    {line,[{scope,[1,3]},{location,"compile_SUITE.erl",210}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {bif,raise,{f,0},[{y,0},{y,1}],{x,0}}.
  {label,34}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",216}]}.
    {badmatch,{x,0}}.
  {label,35}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",215}]}.
    {badmatch,{x,0}}.
  {label,36}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",214}]}.
    {badmatch,{x,0}}.
  {label,37}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",207}]}.
    {badmatch,{x,0}}.
  {label,38}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",205}]}.
    {badmatch,{x,0}}.
  {label,39}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",203}]}.
    {badmatch,{x,0}}.
  {label,40}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",202}]}.
    {badmatch,{x,0}}.
  {label,41}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",199}]}.
    {badmatch,{x,0}}.
  {label,42}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",183}]}.
    {badmatch,{x,0}}.
  {label,43}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",182}]}.
    {badmatch,{x,0}}.
  {label,44}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",180}]}.
    {badmatch,{x,0}}.
  {label,45}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",179}]}.
    {badmatch,{x,0}}.
  {label,46}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",178}]}.
    {badmatch,{x,0}}.
  {label,47}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",177}]}.
    {badmatch,{x,0}}.
  {label,48}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",173}]}.
    {badmatch,{x,0}}.
  {label,49}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",172}]}.
    {badmatch,{x,0}}.
  {label,50}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",171}]}.
    {badmatch,{x,0}}.
  {label,51}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",170}]}.
    {badmatch,{x,0}}.
  {label,52}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",169}]}.
    {badmatch,{x,0}}.
  {label,53}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",164}]}.
    {badmatch,{x,0}}.
  {label,54}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",163}]}.
    {badmatch,{atom,false}}.
  {label,55}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",162}]}.
    {badmatch,{x,0}}.
  {label,56}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",160}]}.
    {badmatch,{x,0}}.
  {label,57}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",159}]}.
    {badmatch,{x,0}}.
  {label,58}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",158}]}.
    {badmatch,{x,0}}.
  {label,59}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",157}]}.
    {badmatch,{x,0}}.
  {label,60}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",156}]}.
    {badmatch,{x,0}}.
  {label,61}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",153}]}.
    {badmatch,{x,0}}.
  {label,62}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",152}]}.
    {badmatch,{x,0}}.
  {label,63}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",151}]}.
    {badmatch,{x,0}}.
  {label,64}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",148}]}.
    {badmatch,{x,0}}.
  {label,65}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",145}]}.
    {badmatch,{x,0}}.
  {label,66}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",144}]}.
    {badmatch,{x,0}}.
  {label,67}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",143}]}.
    {badmatch,{x,0}}.
  {label,68}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",142}]}.
    {badmatch,{x,0}}.
  {label,69}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",136}]}.
    {badmatch,{x,0}}.
  {label,70}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",135}]}.
    {badmatch,{x,0}}.
  {label,71}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",133}]}.
    {badmatch,{x,0}}.
  {label,72}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",132}]}.
    {badmatch,{x,0}}.


{function, forms_2, 1, 74}.
  {label,73}.
    {line,[{location,"compile_SUITE.erl",228}]}.
    {func_info,{atom,compile_SUITE},{atom,forms_2},1}.
  {label,74}.
    {test,is_list,{f,73},[{x,0}]}.
    {allocate,5,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2},{y,3}]}}.
    {move,{x,0},{y,4}}.
    {move,{literal,"file_1"},{x,2}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",229}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{y,3}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {line,[{location,"compile_SUITE.erl",230}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,92},[{x,0},{atom,ok}]}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",233}]}.
    {call_ext,1,{extfunc,filename,absname,1}}.
    {move,{x,0},{y,2}}.
    {move,{y,3},{x,0}}.
    {move,{literal,[dabstr,binary]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",234}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,91},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nil,{f,91},[{x,1}]}.
    {test_heap,7,1}.
    {put_tuple2,{x,1},{list,[{atom,source},{y,3}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{atom,binary},{x,1},{x,1}}.
    {get_tuple_element,{x,0},2,{y,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",236}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,90},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {test,is_eq_exact,{f,90},[{x,1},{atom,simple}]}.
    {test_heap,9,0}.
    {put_tuple2,{x,0},{list,[{atom,source},{y,3}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{literal,{error_location,line}},{x,0},{x,0}}.
    {put_list,{atom,binary},{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",237}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,89},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,89},[{x,1},{atom,simple}]}.
    {move,{atom,no_postopt},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",241}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,88},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,88},[{x,1},{atom,simple}]}.
    {move,{y,0},{x,2}}.
    {move,{y,3},{x,1}}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",244}]}.
    {call,3,{f,94}}. % forms_load_code/3
    {test,is_eq_exact,{f,87},[{x,0},{y,2}]}.
    {move,{y,4},{x,1}}.
    {init_yregs,{list,[{y,4}]}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",247}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{atom,forms_2},{x,1}}.
    {line,[{location,"compile_SUITE.erl",248}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,4}}.
    {line,[{location,"compile_SUITE.erl",249}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,86},[{x,0},{atom,ok}]}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",250}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,85},[{x,0},{atom,ok}]}.
    {line,[{location,"compile_SUITE.erl",251}]}.
    {call_ext,0,{extfunc,os,type,0}}.
    {test,is_tagged_tuple,{f,75},[{x,0},2,{atom,unix}]}.
    {move,{y,4},{x,1}}.
    {init_yregs,{list,[{y,4}]}}.
    {move,{literal,"rm -rf "},{x,0}}.
    {line,[{location,"compile_SUITE.erl",252}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {call_ext,1,{extfunc,os,cmd,1}}.
  {label,75}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",255}]}.
    {call_ext,1,{extfunc,compile,forms,1}}.
    {test,is_tagged_tuple,{f,84},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,84},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {move,{literal,"ignore"},{x,1}}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",256}]}.
    {call,3,{f,94}}. % forms_load_code/3
    {test,is_eq_exact,{f,83},[{x,0},{atom,undefined}]}.
    {test_heap,5,0}.
    {put_tuple2,{x,0},{list,[{atom,source},{y,3}]}}.
    {put_list,{x,0},{literal,[report]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",258}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,82},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,82},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {move,{literal,"ignore"},{x,1}}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",259}]}.
    {call,3,{f,94}}. % forms_load_code/3
    {test,is_ne_exact,{f,76},[{x,0},{y,3}]}.
    {test,is_eq_exact,{f,81},[{x,0},{y,2}]}.
  {label,76}.
    {move,{literal,[to_core0,binary]},{x,1}}.
    {move,{y,1},{y,4}}.
    {trim,4,1}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",266}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,80},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,80},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{literal,[from_core]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",267}]}.
    {call,2,{f,100}}. % forms_compile_and_load/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,[to_asm,binary]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",269}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,79},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,79},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{literal,[from_asm]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",270}]}.
    {call,2,{f,100}}. % forms_compile_and_load/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,[from_abstr]},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",274}]}.
    {call,2,{f,100}}. % forms_compile_and_load/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,[from_core,report]},{x,1}}.
    {move,{atom,bad_core},{x,0}}.
    {line,[{location,"compile_SUITE.erl",277}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_eq_exact,{f,78},[{x,0},{atom,error}]}.
    {move,{literal,[from_asm,report]},{x,1}}.
    {move,{atom,bad_asm},{x,0}}.
    {line,[{location,"compile_SUITE.erl",278}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_eq_exact,{f,77},[{x,0},{atom,error}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,77}.
    {badmatch,{x,0}}.
  {label,78}.
    {line,[{location,"compile_SUITE.erl",277}]}.
    {badmatch,{x,0}}.
  {label,79}.
    {line,[{location,"compile_SUITE.erl",269}]}.
    {badmatch,{x,0}}.
  {label,80}.
    {line,[{location,"compile_SUITE.erl",266}]}.
    {badmatch,{x,0}}.
  {label,81}.
    {line,[{location,"compile_SUITE.erl",259}]}.
    {case_end,{x,0}}.
  {label,82}.
    {line,[{location,"compile_SUITE.erl",258}]}.
    {badmatch,{x,0}}.
  {label,83}.
    {line,[{location,"compile_SUITE.erl",256}]}.
    {badmatch,{x,0}}.
  {label,84}.
    {line,[{location,"compile_SUITE.erl",255}]}.
    {badmatch,{x,0}}.
  {label,85}.
    {line,[{location,"compile_SUITE.erl",250}]}.
    {badmatch,{x,0}}.
  {label,86}.
    {line,[{location,"compile_SUITE.erl",249}]}.
    {badmatch,{x,0}}.
  {label,87}.
    {line,[{location,"compile_SUITE.erl",244}]}.
    {badmatch,{x,0}}.
  {label,88}.
    {line,[{location,"compile_SUITE.erl",241}]}.
    {badmatch,{x,0}}.
  {label,89}.
    {line,[{location,"compile_SUITE.erl",237}]}.
    {badmatch,{x,0}}.
  {label,90}.
    {line,[{location,"compile_SUITE.erl",236}]}.
    {badmatch,{x,0}}.
  {label,91}.
    {line,[{location,"compile_SUITE.erl",234}]}.
    {badmatch,{x,0}}.
  {label,92}.
    {line,[{location,"compile_SUITE.erl",230}]}.
    {badmatch,{x,0}}.


{function, forms_load_code, 3, 94}.
  {label,93}.
    {line,[{location,"compile_SUITE.erl",283}]}.
    {func_info,{atom,compile_SUITE},{atom,forms_load_code},3}.
  {label,94}.
    {'%',{var_info,{x,0},[{type,{t_atom,[simple]}}]}}.
    {allocate,1,3}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",284}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {test,is_tagged_tuple,{f,98},[{x,0},2,{atom,module}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,98},[{x,1},{atom,simple}]}.
    {move,{atom,compile},{x,0}}.
    {line,[{location,"compile_SUITE.erl",285}]}.
    {call_ext,1,{extfunc,simple,module_info,1}}.
    {move,{x,0},{y,0}}.
    {move,{x,0},{x,1}}.
    {move,{atom,source},{x,0}}.
    {line,[{location,"compile_SUITE.erl",286}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{atom,options},{x,0}}.
    {line,[{location,"compile_SUITE.erl",289}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {test,is_nil,{f,97},[{x,0}]}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",292}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {test,is_eq_exact,{f,96},[{x,0},{atom,true}]}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",293}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {test,is_eq_exact,{f,95},[{x,0},{atom,false}]}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,95}.
    {badmatch,{x,0}}.
  {label,96}.
    {line,[{location,"compile_SUITE.erl",292}]}.
    {badmatch,{x,0}}.
  {label,97}.
    {line,[{location,"compile_SUITE.erl",289}]}.
    {badmatch,{x,0}}.
  {label,98}.
    {line,[{location,"compile_SUITE.erl",284}]}.
    {badmatch,{x,0}}.


{function, forms_compile_and_load, 2, 100}.
  {label,99}.
    {line,[{location,"compile_SUITE.erl",297}]}.
    {func_info,{atom,compile_SUITE},{atom,forms_compile_and_load},2}.
  {label,100}.
    {'%',{var_info,{x,1},
                   [{type,{t_cons,{t_atom,[from_abstr,from_asm,from_core]},
                                  nil}}]}}.
    {allocate,0,2}.
    {line,[{location,"compile_SUITE.erl",299}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,104},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,104},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {move,{literal,"ignore"},{x,1}}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",300}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {test,is_tagged_tuple,{f,103},[{x,0},2,{atom,module}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,103},[{x,1},{atom,simple}]}.
    {line,[{location,"compile_SUITE.erl",301}]}.
    {call_ext,0,{extfunc,simple,module_info,0}}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",302}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {test,is_eq_exact,{f,102},[{x,0},{atom,true}]}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",303}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {test,is_eq_exact,{f,101},[{x,0},{atom,false}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,101}.
    {badmatch,{x,0}}.
  {label,102}.
    {line,[{location,"compile_SUITE.erl",302}]}.
    {badmatch,{x,0}}.
  {label,103}.
    {line,[{location,"compile_SUITE.erl",300}]}.
    {badmatch,{x,0}}.
  {label,104}.
    {line,[{location,"compile_SUITE.erl",299}]}.
    {badmatch,{x,0}}.


{function, module_mismatch, 1, 106}.
  {label,105}.
    {line,[{location,"compile_SUITE.erl",306}]}.
    {func_info,{atom,compile_SUITE},{atom,module_mismatch},1}.
  {label,106}.
    {test,is_list,{f,105},[{x,0}]}.
    {allocate,1,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",307}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{literal,"wrong_module_name.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",308}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{literal,[return]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",311}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,
          {f,109},
          [{x,0},
           {literal,{error,[{"wrong_module_name.beam",
                             [{none,compile,
                                    {module_name,arne,"wrong_module_name"}}]}],
                           []}}]}.
    {move,{literal,[report]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",312}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,108},[{x,0},{atom,error}]}.
    {move,{literal,[return,no_error_module_mismatch]},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",314}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,107},[{x,0},{literal,{ok,arne,[]}}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,107}.
    {badmatch,{x,0}}.
  {label,108}.
    {line,[{location,"compile_SUITE.erl",312}]}.
    {badmatch,{x,0}}.
  {label,109}.
    {line,[{location,"compile_SUITE.erl",309}]}.
    {badmatch,{x,0}}.


{function, outdir, 1, 111}.
  {label,110}.
    {line,[{location,"compile_SUITE.erl",321}]}.
    {func_info,{atom,compile_SUITE},{atom,outdir},1}.
  {label,111}.
    {test,is_list,{f,110},[{x,0}]}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{literal,"outdir"},{x,2}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",322}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{y,1}}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",323}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {test_heap,5,1}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{x,0}]}}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,116},[{x,0},{literal,{ok,simple}}]}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",324}]}.
    {call,1,{f,295}}. % exists/1
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,115},[{x,0},{atom,true}]}.
    {move,{atom,test},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",325}]}.
    {call,3,{f,289}}. % run/3
    {test,is_eq_exact,{f,114},[{x,0},{atom,passed}]}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",326}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,113},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",327}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,112},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,112}.
    {badmatch,{x,0}}.
  {label,113}.
    {line,[{location,"compile_SUITE.erl",326}]}.
    {badmatch,{x,0}}.
  {label,114}.
    {line,[{location,"compile_SUITE.erl",325}]}.
    {badmatch,{x,0}}.
  {label,115}.
    {line,[{location,"compile_SUITE.erl",324}]}.
    {badmatch,{atom,false}}.
  {label,116}.
    {line,[{location,"compile_SUITE.erl",323}]}.
    {badmatch,{x,0}}.


{function, binary, 1, 118}.
  {label,117}.
    {line,[{location,"compile_SUITE.erl",332}]}.
    {func_info,{atom,compile_SUITE},{atom,binary},1}.
  {label,118}.
    {test,is_list,{f,117},[{x,0}]}.
    {allocate,1,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{literal,"binary"},{x,2}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",333}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {move,{x,1},{x,0}}.
    {move,{literal,[binary]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",334}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,123},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,123},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",335}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {line,[{location,"compile_SUITE.erl",336}]}.
    {call_ext,0,{extfunc,simple,test,0}}.
    {test,is_eq_exact,{f,122},[{x,0},{atom,passed}]}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",337}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {test,is_eq_exact,{f,121},[{x,0},{atom,true}]}.
    {move,{atom,simple},{x,0}}.
    {line,[{location,"compile_SUITE.erl",338}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {test,is_eq_exact,{f,120},[{x,0},{atom,false}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",339}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,119},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,119}.
    {badmatch,{x,0}}.
  {label,120}.
    {line,[{location,"compile_SUITE.erl",338}]}.
    {badmatch,{x,0}}.
  {label,121}.
    {line,[{location,"compile_SUITE.erl",337}]}.
    {badmatch,{x,0}}.
  {label,122}.
    {line,[{location,"compile_SUITE.erl",336}]}.
    {badmatch,{x,0}}.
  {label,123}.
    {line,[{location,"compile_SUITE.erl",334}]}.
    {badmatch,{x,0}}.


{function, makedep, 1, 125}.
  {label,124}.
    {line,[{location,"compile_SUITE.erl",344}]}.
    {func_info,{atom,compile_SUITE},{atom,makedep},1}.
  {label,125}.
    {test,is_list,{f,124},[{x,0}]}.
    {allocate,10,1}.
    {init_yregs,{list,[{y,0},
                       {y,1},
                       {y,2},
                       {y,3},
                       {y,4},
                       {y,5},
                       {y,6},
                       {y,7},
                       {y,8}]}}.
    {move,{x,0},{y,9}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",345}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,8}}.
    {move,{y,9},{x,1}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",346}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,7}}.
    {move,{y,9},{x,1}}.
    {move,{literal,"makedep"},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",348}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{y,6}}.
    {get_tuple_element,{x,0},1,{y,5}}.
    {move,{y,6},{x,0}}.
    {line,[{location,"compile_SUITE.erl",349}]}.
    {call_ext,1,{extfunc,filename,rootname,1}}.
    {move,{x,0},{y,4}}.
    {move,{y,6},{x,0}}.
    {line,[{location,"compile_SUITE.erl",350}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {move,{literal,"include"},{x,1}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,11,1}.
    {put_tuple2,{x,0},{list,[{atom,i},{x,0}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{literal,{d,include_generated}},{x,0},{x,0}}.
    {put_list,{literal,{d,foo_value,42}},{x,0},{x,0}}.
    {put_list,{literal,{d,need_foo}},{x,0},{y,3}}.
    {move,{literal,"-basic1.mk"},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",359}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {line,[{location,"compile_SUITE.erl",360}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {move,{x,0},{y,2}}.
    {test,is_tagged_tuple,{f,166},[{x,0},2,{atom,ok}]}.
    {move,{literal,[binary,makedep]},{x,1}}.
    {move,{y,6},{x,0}}.
    {line,[{location,"compile_SUITE.erl",361}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,165},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{y,8},{x,1}}.
    {line,[{location,"compile_SUITE.erl",362}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {get_tuple_element,{y,2},1,{x,1}}.
    {test,is_eq_exact,{f,164},[{tr,{x,0},{t_bitstring,8,false}},{x,1}]}.
    {move,{literal,"-basic2.mk"},{x,1}}.
    {init_yregs,{list,[{y,2}]}}.
    {move,{y,4},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",365}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",366}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {move,{x,0},{y,2}}.
    {test,is_tagged_tuple,{f,163},[{x,0},2,{atom,ok}]}.
    {test_heap,4,0}.
    {put_list,{atom,makedep},{y,3},{x,0}}.
    {put_list,{atom,binary},{x,0},{x,1}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",367}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,162},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{y,8},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",368}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {get_tuple_element,{y,2},1,{y,2}}.
    {test,is_eq_exact,{f,161},[{tr,{x,0},{t_bitstring,8,false}},{y,2}]}.
    {move,{literal,"-missing.mk"},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",371}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",372}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {move,{x,0},{y,1}}.
    {test,is_tagged_tuple,{f,160},[{x,0},2,{atom,ok}]}.
    {test_heap,6,0}.
    {put_list,{atom,makedep_add_missing},{y,3},{x,0}}.
    {put_list,{atom,makedep},{x,0},{x,0}}.
    {put_list,{atom,binary},{x,0},{x,1}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",373}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,159},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{y,8},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",375}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {get_tuple_element,{y,1},1,{x,1}}.
    {test,is_eq_exact,{f,158},[{tr,{x,0},{t_bitstring,8,false}},{x,1}]}.
    {move,{literal,"-target1.mk"},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{y,4},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",378}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",379}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {move,{x,0},{y,1}}.
    {test,is_tagged_tuple,{f,157},[{x,0},2,{atom,ok}]}.
    {test_heap,6,0}.
    {put_list,{literal,{makedep_target,"$target"}},{y,3},{x,0}}.
    {put_list,{atom,makedep},{x,0},{x,0}}.
    {put_list,{atom,binary},{x,0},{x,1}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",380}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,156},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{y,8},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",383}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {move,{literal,"$$target"},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",382}]}.
    {call,2,{f,170}}. % makedep_modify_target/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {get_tuple_element,{y,1},1,{x,1}}.
    {test,is_eq_exact,{f,155},[{tr,{x,0},{t_bitstring,8,false}},{x,1}]}.
    {move,{literal,"-target2.mk"},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{y,4},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",386}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",387}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {move,{x,0},{y,1}}.
    {test,is_tagged_tuple,{f,154},[{x,0},2,{atom,ok}]}.
    {test_heap,8,0}.
    {put_list,{atom,makedep_quote_target},{y,3},{x,0}}.
    {put_list,{literal,{makedep_target,"$target"}},{x,0},{x,0}}.
    {put_list,{atom,makedep},{x,0},{x,0}}.
    {put_list,{atom,binary},{x,0},{x,1}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",388}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,153},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{y,8},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",392}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {move,{literal,"$$target"},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",391}]}.
    {call,2,{f,170}}. % makedep_modify_target/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {get_tuple_element,{y,1},1,{x,1}}.
    {test,is_eq_exact,{f,152},[{tr,{x,0},{t_bitstring,8,false}},{x,1}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,makedep_output},{y,5}]}}.
    {put_list,{x,0},{y,3},{x,0}}.
    {put_list,{atom,makedep},{x,0},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",395}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,151},[{x,0},2,{atom,ok}]}.
    {move,{y,5},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",397}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {test,is_tagged_tuple,{f,150},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {move,{y,8},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",398}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {test,is_eq_exact,
          {f,149},
          [{tr,{x,0},{t_bitstring,8,false}},{tr,{y,2},{t_bitstring,8,false}}]}.
    {move,{literal,"-phony.mk"},{x,1}}.
    {move,{y,4},{x,0}}.
    {init_yregs,{list,[{y,4}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",401}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",402}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {move,{x,0},{y,4}}.
    {test,is_tagged_tuple,{f,148},[{x,0},2,{atom,ok}]}.
    {test_heap,6,0}.
    {put_list,{atom,makedep_phony},{y,3},{x,0}}.
    {put_list,{atom,makedep},{x,0},{x,0}}.
    {put_list,{atom,binary},{x,0},{x,1}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",403}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,147},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{y,8},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",405}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {get_tuple_element,{y,4},1,{x,1}}.
    {test,is_eq_exact,{f,146},[{tr,{x,0},{t_bitstring,8,false}},{x,1}]}.
    {test_heap,2,0}.
    {put_list,{atom,makedep},{y,3},{x,1}}.
    {init_yregs,{list,[{y,4}]}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",408}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,145},[{x,0},2,{atom,ok}]}.
    {move,{y,5},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",409}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {test,is_tagged_tuple,{f,144},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {move,{y,8},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",410}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {test,is_eq_exact,
          {f,143},
          [{tr,{x,0},{t_bitstring,8,false}},{tr,{y,2},{t_bitstring,8,false}}]}.
    {move,{literal,"generated.hrl"},{x,1}}.
    {move,{y,7},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",413}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,4}}.
    {move,{y,9},{x,1}}.
    {init_yregs,{list,[{y,9}]}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",414}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{literal,"foo.md"},{x,1}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {'try',{y,9},{f,126}}.
    {move,nil,{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",416}]}.
    {call_ext,2,{extfunc,file,write_file,2}}.
    {test,is_eq_exact,{f,140},[{x,0},{atom,ok}]}.
    {move,nil,{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",417}]}.
    {call_ext,2,{extfunc,file,write_file,2}}.
    {test,is_eq_exact,{f,139},[{x,0},{atom,ok}]}.
    {test_heap,14,0}.
    {put_tuple2,{x,0},{list,[{atom,i},{y,7}]}}.
    {put_list,{x,0},{y,3},{x,0}}.
    {put_tuple2,{x,1},{list,[{atom,makedep_output},{y,5}]}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {put_list,{atom,makedep_side_effect},{x,0},{x,0}}.
    {put_list,{atom,report},{x,0},{x,1}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",418}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,138},[{x,0},{literal,{ok,simple}}]}.
    {move,{y,5},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",421}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {move,{x,0},{y,0}}.
    {test,is_tagged_tuple,{f,137},[{x,0},2,{atom,ok}]}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",422}]}.
    {call_ext,1,{extfunc,string,trim,1}}.
    {move,{x,0},{y,2}}.
    {move,{literal,"generated.hrl"},{x,1}}.
    {move,{y,7},{x,0}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,6,1}.
    {put_list,{x,0},{literal,["\n"]},{x,0}}.
    {put_list,{literal," $(srcdir)/foo.md "},{x,0},{x,0}}.
    {put_list,{y,2},{x,0},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {call_ext,1,{extfunc,erlang,iolist_to_binary,1}}.
    {move,{x,0},{y,2}}.
    {get_tuple_element,{y,0},1,{x,0}}.
    {move,{y,8},{x,1}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",423}]}.
    {call,2,{f,168}}. % makedep_canonicalize_result/2
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {test,is_eq_exact,
          {f,136},
          [{tr,{x,0},{t_bitstring,8,false}},{tr,{y,2},{t_bitstring,8,false}}]}.
    {test_heap,9,0}.
    {put_tuple2,{x,0},{list,[{atom,makedep_output},{y,7}]}}.
    {put_list,{x,0},{y,3},{x,0}}.
    {put_list,{atom,makedep_side_effect},{x,0},{x,0}}.
    {put_list,{atom,report},{x,0},{x,1}}.
    {init_yregs,{list,[{y,2},{y,7}]}}.
    {move,{y,6},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",424}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,135},[{x,0},{atom,error}]}.
    {try_end,{y,9}}.
    {move,{y,4},{x,0}}.
    {init_yregs,{list,[{y,4}]}}.
    {trim,1,9}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",427}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,134},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,2,7}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",428}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,133},[{x,0},{atom,ok}]}.
    {move,{atom,compiler},{x,0}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",432}]}.
    {call_ext,1,{extfunc,code,lib_dir,1}}.
    {move,{literal,"src/compile.erl"},{x,1}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,6}}.
    {move,{atom,stdlib},{x,0}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",435}]}.
    {call_ext,1,{extfunc,code,lib_dir,1}}.
    {move,{literal,"include"},{x,1}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,11,1}.
    {put_tuple2,{x,0},{list,[{atom,i},{x,0}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{literal,{makedep_output,standard_io}},{x,0},{x,0}}.
    {put_list,{atom,makedep},{x,0},{x,0}}.
    {put_list,{atom,report},{x,0},{x,1}}.
    {move,{y,6},{x,0}}.
    {move,{y,0},{y,6}}.
    {trim,2,5}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",433}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,132},[{x,0},2,{atom,ok}]}.
    {test_heap,4,0}.
    {put_list,{literal,{makedep_output,standard_io}},{y,4},{x,0}}.
    {put_list,{atom,makedep},{x,0},{x,1}}.
    {move,{y,0},{y,4}}.
    {trim,1,4}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",438}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,131},[{x,0},2,{atom,ok}]}.
    {test_heap,9,0}.
    {put_tuple2,{x,0},{list,[{atom,makedep_output},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,makedep},{x,0},{x,0}}.
    {put_list,{atom,report},{x,0},{x,1}}.
    {move,{y,0},{y,2}}.
    {trim,2,2}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",441}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,130},[{x,0},{atom,error}]}.
    {move,{literal,[report,makedep,{makedep_output,a_bad_output_device}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",442}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,129},[{x,0},{atom,error}]}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",444}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,128},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",445}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,127},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,126}.
    {try_case,{y,9}}.
    {move,{x,2},{y,7}}.
    {move,{x,1},{y,8}}.
    {move,{y,4},{x,0}}.
    {move,{y,1},{y,9}}.
    {trim,7,3}.
    {line,[{scope,[1,3]},{location,"compile_SUITE.erl",427}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,142},[{x,0},{atom,ok}]}.
    {move,{y,2},{x,0}}.
    {move,{y,0},{y,2}}.
    {trim,1,2}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",428}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,141},[{x,0},{atom,ok}]}.
    {bif,raise,{f,0},[{y,1},{y,0}],{x,0}}.
  {label,127}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",445}]}.
    {badmatch,{x,0}}.
  {label,128}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",444}]}.
    {badmatch,{x,0}}.
  {label,129}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",442}]}.
    {badmatch,{x,0}}.
  {label,130}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",441}]}.
    {badmatch,{x,0}}.
  {label,131}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",438}]}.
    {badmatch,{x,0}}.
  {label,132}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",433}]}.
    {badmatch,{x,0}}.
  {label,133}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",415}]}.
    {badmatch,{x,0}}.
  {label,134}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",427}]}.
    {badmatch,{x,0}}.
  {label,135}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",424}]}.
    {badmatch,{x,0}}.
  {label,136}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",423}]}.
    {badmatch,{x,0}}.
  {label,137}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",421}]}.
    {badmatch,{x,0}}.
  {label,138}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",418}]}.
    {badmatch,{x,0}}.
  {label,139}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",417}]}.
    {badmatch,{x,0}}.
  {label,140}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",416}]}.
    {badmatch,{x,0}}.
  {label,141}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",415}]}.
    {badmatch,{x,0}}.
  {label,142}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",427}]}.
    {badmatch,{x,0}}.
  {label,143}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",410}]}.
    {badmatch,{x,0}}.
  {label,144}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",409}]}.
    {badmatch,{x,0}}.
  {label,145}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",408}]}.
    {badmatch,{x,0}}.
  {label,146}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",405}]}.
    {badmatch,{x,0}}.
  {label,147}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",403}]}.
    {badmatch,{x,0}}.
  {label,148}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",402}]}.
    {badmatch,{x,0}}.
  {label,149}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",398}]}.
    {badmatch,{x,0}}.
  {label,150}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",397}]}.
    {badmatch,{x,0}}.
  {label,151}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",395}]}.
    {badmatch,{x,0}}.
  {label,152}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",391}]}.
    {badmatch,{x,0}}.
  {label,153}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",388}]}.
    {badmatch,{x,0}}.
  {label,154}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",387}]}.
    {badmatch,{x,0}}.
  {label,155}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",382}]}.
    {badmatch,{x,0}}.
  {label,156}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",380}]}.
    {badmatch,{x,0}}.
  {label,157}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",379}]}.
    {badmatch,{x,0}}.
  {label,158}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",375}]}.
    {badmatch,{x,0}}.
  {label,159}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",373}]}.
    {badmatch,{x,0}}.
  {label,160}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",372}]}.
    {badmatch,{x,0}}.
  {label,161}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",368}]}.
    {badmatch,{x,0}}.
  {label,162}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",367}]}.
    {badmatch,{x,0}}.
  {label,163}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",366}]}.
    {badmatch,{x,0}}.
  {label,164}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",362}]}.
    {badmatch,{x,0}}.
  {label,165}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",361}]}.
    {badmatch,{x,0}}.
  {label,166}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",360}]}.
    {badmatch,{x,0}}.


{function, makedep_canonicalize_result, 2, 168}.
  {label,167}.
    {line,[{location,"compile_SUITE.erl",448}]}.
    {func_info,{atom,compile_SUITE},{atom,makedep_canonicalize_result},2}.
  {label,168}.
    {allocate,1,2}.
    {move,{x,1},{y,0}}.
    {line,[{location,"compile_SUITE.erl",449}]}.
    {call_ext,1,{extfunc,erlang,binary_to_list,1}}.
    {move,{literal,"$(srcdir)/"},{x,2}}.
    {move,{literal,[global,multiline,{return,list}]},{x,3}}.
    {move,{y,0},{x,1}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",451}]}.
    {call_ext,4,{extfunc,re,replace,4}}.
    {move,nil,{x,2}}.
    {move,{literal,[global,multiline,{return,list}]},{x,3}}.
    {move,{literal,"\\\\\n  "},{x,1}}.
    {line,[{location,"compile_SUITE.erl",454}]}.
    {call_ext,4,{extfunc,re,replace,4}}.
    {line,[{location,"compile_SUITE.erl",455}]}.
    {call_ext_last,1,{extfunc,erlang,list_to_binary,1},0}.


{function, makedep_modify_target, 2, 170}.
  {label,169}.
    {line,[{location,"compile_SUITE.erl",457}]}.
    {func_info,{atom,compile_SUITE},{atom,makedep_modify_target},2}.
  {label,170}.
    {'%',{var_info,{x,0},[{type,{t_bitstring,8,false}}]}}.
    {'%',{var_info,{x,1},[{type,{t_cons,{t_integer,{36,116}},nil}}]}}.
    {allocate,1,2}.
    {move,{x,1},{y,0}}.
    {line,[{location,"compile_SUITE.erl",458}]}.
    {call_ext,1,{extfunc,erlang,binary_to_list,1}}.
    {move,{literal,"$target"},{x,2}}.
    {move,{literal,[{return,list}]},{x,3}}.
    {move,{y,0},{x,1}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",459}]}.
    {call_ext,4,{extfunc,re,replace,4}}.
    {line,[{location,"compile_SUITE.erl",460}]}.
    {call_ext_last,1,{extfunc,erlang,list_to_binary,1},0}.


{function, no_core_prepare, 1, 172}.
  {label,171}.
    {line,[{location,"compile_SUITE.erl",464}]}.
    {func_info,{atom,compile_SUITE},{atom,no_core_prepare},1}.
  {label,172}.
    {allocate,0,0}.
    {move,{literal,[from_core,binary,return]},{x,1}}.
    {move,
        {literal,
            {c_module,[],
                {c_literal,[],sample_receive},
                [{c_var,[],{discard,0}}],
                [],
                [{{c_var,[],{discard,0}},
                  {c_fun,[],[],
                      {c_case,[],
                          {c_values,[],[]},
                          [{c_clause,[],[],
                               {c_literal,[],true},
                               {c_receive,[],[],
                                   {c_literal,[],0},
                                   {c_literal,[],ok}}}]}}}]}},
        {x,0}}.
    {line,[{location,"compile_SUITE.erl",477}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,174},[{x,0},4,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,174},[{x,1},{atom,sample_receive}]}.
    {move,{literal,[from_core,binary,return,no_core_prepare]},{x,1}}.
    {move,
        {literal,
            {c_module,[],
                {c_literal,[],sample_receive},
                [{c_var,[],{discard,0}}],
                [],
                [{{c_var,[],{discard,0}},
                  {c_fun,[],[],
                      {c_case,[],
                          {c_values,[],[]},
                          [{c_clause,[],[],
                               {c_literal,[],true},
                               {c_receive,[],[],
                                   {c_literal,[],0},
                                   {c_literal,[],ok}}}]}}}]}},
        {x,0}}.
    {line,[{location,"compile_SUITE.erl",478}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,173},[{x,0},3,{atom,error}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,173}.
    {badmatch,{x,0}}.
  {label,174}.
    {line,[{location,"compile_SUITE.erl",477}]}.
    {badmatch,{x,0}}.


{function, cond_and_ifdef, 1, 176}.
  {label,175}.
    {line,[{location,"compile_SUITE.erl",481}]}.
    {func_info,{atom,compile_SUITE},{atom,cond_and_ifdef},1}.
  {label,176}.
    {test,is_list,{f,175},[{x,0}]}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {move,{literal,"cond_and_ifdef"},{x,2}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",482}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{y,2}}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",483}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {move,{literal,"include"},{x,1}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",484}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {test_heap,14,1}.
    {put_tuple2,{x,1},{list,[{atom,i},{y,0}]}}.
    {put_list,{x,1},{literal,[report]},{x,1}}.
    {put_list,{literal,{d,foo_value,42}},{x,1},{x,1}}.
    {put_list,{literal,{d,need_foo}},{x,1},{x,1}}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{x,0}]}}.
    {put_list,{x,0},{x,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {move,{y,1},{y,2}}.
    {trim,2,1}.
    {line,[{location,"compile_SUITE.erl",487}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,181},[{x,0},{literal,{ok,simple}}]}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",488}]}.
    {call,1,{f,295}}. % exists/1
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,180},[{x,0},{atom,true}]}.
    {move,{atom,foo},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",489}]}.
    {call,3,{f,289}}. % run/3
    {test,is_eq_exact,{f,179},[{x,0},{literal,{hiker,42}}]}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",490}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,178},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",491}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,177},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,177}.
    {badmatch,{x,0}}.
  {label,178}.
    {line,[{location,"compile_SUITE.erl",490}]}.
    {badmatch,{x,0}}.
  {label,179}.
    {line,[{location,"compile_SUITE.erl",489}]}.
    {badmatch,{x,0}}.
  {label,180}.
    {line,[{location,"compile_SUITE.erl",488}]}.
    {badmatch,{atom,false}}.
  {label,181}.
    {line,[{location,"compile_SUITE.erl",487}]}.
    {badmatch,{x,0}}.


{function, listings, 1, 183}.
  {label,182}.
    {line,[{location,"compile_SUITE.erl",494}]}.
    {func_info,{atom,compile_SUITE},{atom,listings},1}.
  {label,183}.
    {test,is_list,{f,182},[{x,0}]}.
    {allocate,4,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {move,{x,0},{y,3}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",495}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,3},{x,1}}.
    {move,{x,0},{y,3}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",496}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,2}}.
    {move,{y,3},{x,1}}.
    {move,{literal,["simple","small","small_maps"]},{x,2}}.
    {swap,{x,0},{x,1}}.
    {line,[{location,"compile_SUITE.erl",497}]}.
    {call,3,{f,190}}. % do_file_listings/3
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,"simple"},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {line,[{location,"compile_SUITE.erl",504}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{y,2},{x,0}}.
    {move,{literal,"simple.S"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",505}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",506}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,188},[{x,0},{atom,ok}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},{literal,[report]},{x,0}}.
    {put_list,{atom,'S'},{x,0},{x,1}}.
    {'try',{y,3},{f,184}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1},{y,2}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",508}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,186},[{x,0},{atom,error}]}.
    {try_end,{y,3}}.
    {move,{y,0},{x,0}}.
    {trim,4,0}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",510}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,185},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,184}.
    {try_case,{y,3}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{y,0},{x,0}}.
    {move,{y,1},{y,3}}.
    {trim,2,2}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",510}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,187},[{x,0},{atom,ok}]}.
    {bif,raise,{f,0},[{y,1},{y,0}],{x,0}}.
  {label,185}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",507}]}.
    {badmatch,{x,0}}.
  {label,186}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",508}]}.
    {badmatch,{x,0}}.
  {label,187}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",507}]}.
    {badmatch,{x,0}}.
  {label,188}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",506}]}.
    {badmatch,{x,0}}.


{function, do_file_listings, 3, 190}.
  {label,189}.
    {line,[{location,"compile_SUITE.erl",515}]}.
    {func_info,{atom,compile_SUITE},{atom,do_file_listings},3}.
  {label,190}.
    {'%',{var_info,{x,2},
                   [{type,{t_list,{t_cons,{t_integer,{95,115}},nil},nil}}]}}.
    {test,is_nonempty_list,{f,191},[{x,2}]}.
    {allocate,6,3}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,1},{y,4}}.
    {move,{x,0},{y,5}}.
    {get_list,{x,2},{y,3},{y,2}}.
    {move,{y,3},{x,1}}.
    {line,[{location,"compile_SUITE.erl",517}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{y,4},{x,0}}.
    {move,{atom,listings},{x,1}}.
    {line,[{location,"compile_SUITE.erl",518}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",519}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,194},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{literal,[{'S',".S"},
                    {'E',".E"},
                    {'P',".P"},
                    {dpp,".pp"},
                    {dabstr,".abstr"},
                    {dexp,".expand"},
                    {dcore,".core"},
                    {doldinline,".oldinline"},
                    {dinline,".inline"},
                    {dcore,".core"},
                    {dcopt,".copt"},
                    {dcbsm,".core_bsm"},
                    {dssa,".ssa"},
                    {dbool,".bool"},
                    {dssashare,".ssashare"},
                    {dssaopt,".ssaopt"},
                    {dprecg,".precodegen"},
                    {dcg,".codegen"},
                    {dblk,".block"},
                    {djmp,".jump"},
                    {dclean,".clean"},
                    {dopt,".optimize"},
                    {diffable,".S"}]},
          {x,0}}.
    {line,[{location,"compile_SUITE.erl",544}]}.
    {call,3,{f,198}}. % p_listings/3
    {move,{atom,to_pp},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{literal,".P"},{x,3}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",547}]}.
    {call,4,{f,281}}. % do_listing/4
    {'%',{var_info,{x,0},[{type,{t_atom,[true]}}]}}.
    {move,{atom,to_exp},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{literal,".E"},{x,3}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",548}]}.
    {call,4,{f,281}}. % do_listing/4
    {'%',{var_info,{x,0},[{type,{t_atom,[true]}}]}}.
    {move,{atom,to_core0},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{literal,".core"},{x,3}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",549}]}.
    {call,4,{f,281}}. % do_listing/4
    {'%',{var_info,{x,0},[{type,{t_atom,[true]}}]}}.
    {move,{literal,".core"},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {line,[{location,"compile_SUITE.erl",550}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,193},[{x,0},{atom,ok}]}.
    {move,{atom,to_core},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{literal,".core"},{x,3}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",551}]}.
    {call,4,{f,281}}. % do_listing/4
    {'%',{var_info,{x,0},[{type,{t_atom,[true]}}]}}.
    {move,{atom,to_dis},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{literal,".dis"},{x,3}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",552}]}.
    {call,4,{f,281}}. % do_listing/4
    {'%',{var_info,{x,0},[{type,{t_atom,[true]}}]}}.
    {test_heap,{alloc,[{words,0},{floats,0},{funs,1}]},0}.
    {make_fun3,{f,938},0,0,{y,3},{list,[]}}.
    {'%',{var_info,{y,3},[{fun_type,{t_atom,[ok]}}]}}.
    {move,{literal,"*"},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",556}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {call_ext,1,{extfunc,filelib,wildcard,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,3},{x,0}}.
    {move,{y,0},{y,3}}.
    {trim,2,4}.
    {line,[{location,"compile_SUITE.erl",555}]}.
    {call_ext,2,{extfunc,lists,foreach,2}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,3}.
    {line,[{location,"compile_SUITE.erl",557}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,192},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{f,190},3}. % do_file_listings/3
  {label,191}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,192}.
    {badmatch,{x,0}}.
  {label,193}.
    {line,[{location,"compile_SUITE.erl",550}]}.
    {badmatch,{x,0}}.
  {label,194}.
    {line,[{location,"compile_SUITE.erl",519}]}.
    {badmatch,{x,0}}.


{function, listings_big, 1, 196}.
  {label,195}.
    {line,[{location,"compile_SUITE.erl",561}]}.
    {func_info,{atom,compile_SUITE},{atom,listings_big},1}.
  {label,196}.
    {test,is_list,{f,195},[{x,0}]}.
    {allocate,1,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{atom,listings_big},{x,2}}.
    {move,{atom,big},{x,1}}.
    {line,[{location,"compile_SUITE.erl",562}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{y,0}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {line,[{location,"compile_SUITE.erl",563}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{literal,[{'S',".S"},
                    {'E',".E"},
                    {'P',".P"},
                    {dssa,".ssa"},
                    {dssaopt,".ssaopt"},
                    {dprecg,".precodegen"},
                    {to_dis,".dis"}]},
          {x,0}}.
    {call_last,3,{f,198},1}. % p_listings/3


{function, p_listings, 3, 198}.
  {label,197}.
    {line,[{location,"compile_SUITE.erl",573}]}.
    {func_info,{atom,compile_SUITE},{atom,p_listings},3}.
  {label,198}.
    {'%',
        {var_info,
            {x,0},
            [{type,
                 {t_cons,
                     {t_tuple,2,true,
                         #{1 => {t_atom,any},
                           2 => {t_cons,{t_integer,{46,122}},nil}}},
                     nil}}]}}.
    {test_heap,{alloc,[{words,2},{floats,0},{funs,1}]},3}.
    {make_fun3,{f,919},0,0,{x,1},{list,[{x,1},{x,2}]}}.
    {'%',{var_info,{x,1},[{fun_type,{t_atom,[error,ok]}}]}}.
    {swap,{x,0},{x,1}}.
    {line,[{location,"compile_SUITE.erl",591}]}.
    {call_ext_only,2,{extfunc,test_lib,p_run,2}}.


{function, other_output, 1, 200}.
  {label,199}.
    {line,[{location,"compile_SUITE.erl",593}]}.
    {func_info,{atom,compile_SUITE},{atom,other_output},1}.
  {label,200}.
    {test,is_list,{f,199},[{x,0}]}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {move,{literal,"other_output"},{x,2}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",594}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {move,{x,0},{y,2}}.
    {move,{literal,"to_pp"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",596}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {get_tuple_element,{y,2},0,{y,2}}.
    {move,{literal,[to_pp,binary,time]},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",597}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,212},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nil,{f,212},[{x,1}]}.
    {get_tuple_element,{x,0},2,{y,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",598}]}.
    {call,1,{f,913}}. % '-other_output/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,nil}]}}.
    {move,{literal,"to_exp (file)"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",607}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {move,{literal,[to_exp,binary,time]},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",608}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,211},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nil,{f,211},[{x,1}]}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {test,is_list,{f,210},[{y,0}]}.
    {move,{integer,3},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{atom,module},{x,0}}.
    {line,[{location,"compile_SUITE.erl",610}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_tagged_tuple,
          {f,209},
          [{tr,{x,0},
               {t_union,{t_atom,[false]},
                        none,none,
                        {t_tuple,3,false,#{3 => {t_atom,[module]}}},
                        none}},
           4,
           {atom,attribute}]}.
    {get_tuple_element,{x,0},3,{x,1}}.
    {test,is_eq_exact,{f,209},[{x,1},{atom,simple}]}.
    {move,{literal,"to_exp (forms)"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",611}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {move,{literal,[to_exp,binary,time]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",612}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,208},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nil,{f,208},[{x,1}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_eq_exact,{f,208},[{x,1},{tr,{y,0},{t_list,any,any}}]}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{literal,"to_core (file)"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",614}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {move,{literal,[to_core,binary,time]},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",615}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,207},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,207},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {line,[{location,"compile_SUITE.erl",616}]}.
    {bif,element,{f,0},[{integer,1},{y,0}],{x,0}}.
    {test,is_eq_exact,{f,206},[{x,0},{atom,c_module}]}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",617}]}.
    {call_ext,1,{extfunc,core_lint,module,1}}.
    {test,is_tagged_tuple,{f,205},[{x,0},2,{atom,ok}]}.
    {move,{literal,"to_core (forms)"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",618}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {move,{literal,[to_core,binary,time]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",619}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,204},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,204},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_eq_exact,{f,204},[{x,1},{tr,{y,0},{t_tuple,1,false,#{}}}]}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{literal,"to_asm (file)"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",621}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {move,{literal,[to_asm,binary,time]},{x,1}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",622}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,203},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,203},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{y,2}}.
    {test,is_tagged_tuple,{f,202},[{y,2},5,{atom,simple}]}.
    {move,{literal,"to_asm (forms)"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",624}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {move,{literal,[to_asm,binary,time]},{x,1}}.
    {move,{y,1},{x,0}}.
    {trim,2,1}.
    {line,[{location,"compile_SUITE.erl",625}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,201},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,201},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_eq_exact,
          {f,201},
          [{x,1},{tr,{y,0},{t_tuple,5,true,#{1 => {t_atom,[simple]}}}}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,201}.
    {badmatch,{x,0}}.
  {label,202}.
    {line,[{location,"compile_SUITE.erl",623}]}.
    {badmatch,{y,2}}.
  {label,203}.
    {line,[{location,"compile_SUITE.erl",622}]}.
    {badmatch,{x,0}}.
  {label,204}.
    {line,[{location,"compile_SUITE.erl",619}]}.
    {badmatch,{x,0}}.
  {label,205}.
    {line,[{location,"compile_SUITE.erl",617}]}.
    {badmatch,{x,0}}.
  {label,206}.
    {line,[{location,"compile_SUITE.erl",616}]}.
    {badmatch,{x,0}}.
  {label,207}.
    {line,[{location,"compile_SUITE.erl",615}]}.
    {badmatch,{x,0}}.
  {label,208}.
    {line,[{location,"compile_SUITE.erl",612}]}.
    {badmatch,{x,0}}.
  {label,209}.
    {line,[{location,"compile_SUITE.erl",610}]}.
    {badmatch,{x,0}}.
  {label,210}.
    {line,[{location,"compile_SUITE.erl",609}]}.
    {badmatch,{atom,false}}.
  {label,211}.
    {line,[{location,"compile_SUITE.erl",608}]}.
    {badmatch,{x,0}}.
  {label,212}.
    {line,[{location,"compile_SUITE.erl",597}]}.
    {badmatch,{x,0}}.


{function, encrypted_abstr, 1, 214}.
  {label,213}.
    {line,[{location,"compile_SUITE.erl",629}]}.
    {func_info,{atom,compile_SUITE},{atom,encrypted_abstr},1}.
  {label,214}.
    {test,is_list,{f,213},[{x,0}]}.
    {allocate,6,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2},{y,3},{y,4},{y,5}]}}.
    {move,{literal,"encrypted_abstr"},{x,2}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",630}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {move,{x,0},{y,5}}.
    {line,[{location,"compile_SUITE.erl",632}]}.
    {call,0,{f,251}}. % has_crypto/0
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {get_tuple_element,{y,5},0,{y,3}}.
    {get_tuple_element,{y,5},1,{y,2}}.
    {test,is_eq_exact,{f,218},[{x,0},{atom,true}]}.
    {init_yregs,{list,[{y,5}]}}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",640}]}.
    {call_ext,0,{extfunc,code,get_path,0}}.
    {move,{x,0},{y,1}}.
    {'try',{y,5},{f,217}}.
    {move,{atom,crypto},{x,0}}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",642}]}.
    {call_ext,1,{extfunc,code,which,1}}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{y,1},{x,0}}.
    {call_ext,2,{extfunc,erlang,'--',2}}.
    {move,{x,0},{y,0}}.
    {'try',{y,4},{f,215}}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",643}]}.
    {call_ext,0,{extfunc,crypto,stop,0}}.
    {try_end,{y,4}}.
    {jump,{f,216}}.
  {label,215}.
    {try_case,{y,4}}.
  {label,216}.
    {move,{atom,crypto},{x,0}}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",644}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {move,{atom,crypto},{x,0}}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",645}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",646}]}.
    {call_ext,1,{extfunc,code,set_path,1}}.
    {move,{y,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",647}]}.
    {call,2,{f,243}}. % encrypted_abstr_no_crypto/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {try_end,{y,5}}.
    {move,{y,1},{x,0}}.
    {move,{y,2},{y,5}}.
    {trim,3,3}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",649}]}.
    {call_ext,1,{extfunc,code,set_path,1}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,2,1}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",653}]}.
    {call,2,{f,221}}. % encrypted_abstr_1/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",654}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,219},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",655}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext_last,1,{extfunc,file,del_dir_r,1},0}.
  {label,217}.
    {try_case,{y,5}}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {move,{y,1},{x,0}}.
    {move,{y,3},{y,5}}.
    {trim,4,2}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",649}]}.
    {call_ext,1,{extfunc,code,set_path,1}}.
    {bif,raise,{f,0},[{y,1},{y,0}],{x,0}}.
  {label,218}.
    {move,{y,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {trim,6,0}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",635}]}.
    {call,2,{f,243}}. % encrypted_abstr_no_crypto/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,{comment,"The crypto application is missing or broken"}},
          {x,0}}.
    {deallocate,0}.
    return.
  {label,219}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",654}]}.
    {badmatch,{x,0}}.


{function, encrypted_abstr_1, 2, 221}.
  {label,220}.
    {line,[{location,"compile_SUITE.erl",661}]}.
    {func_info,{atom,compile_SUITE},{atom,encrypted_abstr_1},2}.
  {label,221}.
    {allocate,5,2}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {move,{x,1},{y,3}}.
    {move,{x,0},{y,4}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",662}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {move,{x,0},{y,2}}.
    {move,{literal,"ablurf123BX#$;3"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",664}]}.
    {call,1,{f,255}}. % install_crypto_key/1
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {test_heap,9,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{literal,{debug_info_key,"ablurf123BX#$;3"}},{x,0},{x,0}}.
    {put_list,{atom,debug_info},{x,0},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",665}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,237},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,erl_abstract_code},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",668}]}.
    {call,2,{f,246}}. % verify_abstract/2
    {'%',{var_info,{x,0},
                   [{type,{t_tuple,2,true,#{1 => {t_atom,[debug_info]}}}}]}}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{literal,{debug_info_key,"ablurf123BX#$;3"}},{x,0},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",670}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,236},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,erl_abstract_code},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",673}]}.
    {call,2,{f,246}}. % verify_abstract/2
    {'%',{var_info,{x,0},
                   [{type,{t_tuple,2,true,#{1 => {t_atom,[debug_info]}}}}]}}.
    {test_heap,9,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{literal,{debug_info_key,{des3_cbc,"ablurf123BX#$;3"}}},
              {x,0},
              {x,0}}.
    {put_list,{atom,debug_info},{x,0},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",675}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,235},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,erl_abstract_code},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",678}]}.
    {call,2,{f,246}}. % verify_abstract/2
    {'%',{var_info,{x,0},
                   [{type,{t_tuple,2,true,#{1 => {t_atom,[debug_info]}}}}]}}.
    {test_heap,9,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{literal,{debug_info_key,"ablurf123BX#$;3"}},{x,0},{x,0}}.
    {put_list,{literal,{debug_info,{compile_SUITE,ok}}},{x,0},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",680}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,234},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,compile_SUITE},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",684}]}.
    {call,2,{f,246}}. % verify_abstract/2
    {'%',{var_info,{x,0},
                   [{type,{t_tuple,2,true,#{1 => {t_atom,[debug_info]}}}}]}}.
    {move,{literal,[compile_info]},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {line,[{location,"compile_SUITE.erl",687}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,233},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,233},[{x,1},2,{atom,simple}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,233},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tagged_tuple,{f,233},[{x,2},2,{atom,compile_info}]}.
    {test,is_nil,{f,233},[{x,1}]}.
    {get_tuple_element,{x,2},1,{x,2}}.
    {move,{integer,1},{x,1}}.
    {move,{atom,options},{x,0}}.
    {line,[{location,"compile_SUITE.erl",688}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_tuple,
          {f,232},
          [{tr,{x,0},
               {t_union,{t_atom,[false]},
                        none,none,
                        {t_tuple,1,false,#{1 => {t_atom,[options]}}},
                        none}}]}.
    {test,test_arity,{f,232},[{x,0},2]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{integer,1},{x,1}}.
    {move,{atom,debug_info_key},{x,0}}.
    {line,[{location,"compile_SUITE.erl",689}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_tuple,
          {f,231},
          [{tr,{x,0},
               {t_union,{t_atom,[false]},
                        none,none,
                        {t_tuple,1,false,#{1 => {t_atom,[debug_info_key]}}},
                        none}}]}.
    {test,test_arity,{f,231},[{x,0},2]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,231},[{x,1},{atom,'********'}]}.
    {move,{literal,[debug_info,{debug_info_key,{blurf,"ss"}},report]},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",692}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,230},[{x,0},{atom,error}]}.
    {move,{literal,[debug_info,{debug_info_key,{blurf,1,"ss"}},report]},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",694}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,229},[{x,0},{atom,error}]}.
    {move,{literal,[debug_info,{debug_info_key,42},report]},{x,1}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"compile_SUITE.erl",696}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,228},[{x,0},{atom,error}]}.
    {line,[{location,"compile_SUITE.erl",699}]}.
    {call_ext,0,{extfunc,beam_lib,clear_crypto_key_fun,0}}.
    {move,{literal,"home"},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",703}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,3}}.
    {line,[{location,"compile_SUITE.erl",704}]}.
    {call_ext,1,{extfunc,filelib,ensure_dir,1}}.
    {line,[{location,"compile_SUITE.erl",705}]}.
    {call_ext,0,{extfunc,os,type,0}}.
    {test,is_tagged_tuple,{f,222},[{x,0},2,{atom,win32}]}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",707}]}.
    {call_ext,1,{extfunc,filename,split,1}}.
    {test,is_nonempty_list,{f,224},[{x,0}]}.
    {get_list,{x,0},{y,1},{y,0}}.
    {move,{literal,"AppData"},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",708}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {swap,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",709}]}.
    {call_ext,1,{extfunc,filename,join,1}}.
    {test_heap,15,1}.
    {put_tuple2,{x,0},{list,[{literal,"HOMEPATH"},{x,0}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_tuple2,{x,1},{list,[{literal,"HOMEDRIVE"},{y,1}]}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {put_tuple2,{x,1},{list,[{literal,"APPDATA"},{y,0}]}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {jump,{f,223}}.
  {label,222}.
    {test_heap,5,0}.
    {put_tuple2,{x,0},{list,[{literal,"HOME"},{y,3}]}}.
    {put_list,{x,0},nil,{x,0}}.
  {label,223}.
    {put_map_assoc,{f,0},{literal,#{}},{x,0},1,{list,[{atom,env},{x,0}]}}.
    {move,{atom,encrypted_abstr_1},{x,2}}.
    {move,{atom,compile_SUITE},{x,1}}.
    {line,[{location,"compile_SUITE.erl",714}]}.
    {call_ext,3,{extfunc,test_server,start_peer,3}}.
    {test,is_tagged_tuple,{f,227},[{x,0},3,{atom,ok}]}.
    {test_heap,{alloc,[{words,3},{floats,0},{funs,1}]},1}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {make_fun3,{f,900},0,0,{x,1},{list,[{y,4},{y,2},{y,3}]}}.
    {'%',
        {var_info,
            {x,1},
            [{fun_type,
                 {t_tuple,3,true,
                     #{1 => {t_atom,[error]},
                       2 => {t_atom,[beam_lib]},
                       3 =>
                           {t_tuple,3,true,
                               #{1 => {t_atom,[key_missing_or_invalid]},
                                 2 => {t_cons,{t_integer,{46,115}},nil},
                                 3 => {t_atom,[abstract_code]}}}}}}]}}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{y,1},{y,3}}.
    {trim,3,2}.
    {line,[{location,"compile_SUITE.erl",716}]}.
    {call_ext,2,{extfunc,erpc,call,2}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",768}]}.
    {call_ext,1,{extfunc,peer,stop,1}}.
    {move,{literal,"an old key"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",772}]}.
    {call,1,{f,255}}. % install_crypto_key/1
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",773}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {move,{literal,"key_compatibility"},{x,1}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",775}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,226},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,226},[{x,1},2,{atom,key_compatibility}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,226},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_nil,{f,226},[{x,1}]}.
    {test,is_tagged_tuple,{f,225},[{x,2},2,{atom,abstract_code}]}.
    {get_tuple_element,{x,2},1,{x,0}}.
    {test,is_tagged_tuple,{f,225},[{x,0},2,{atom,raw_abstract_v1}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,224}.
    {line,[{location,"compile_SUITE.erl",707}]}.
    {badmatch,{x,0}}.
  {label,225}.
    {line,[{location,"compile_SUITE.erl",777}]}.
    {badmatch,{x,2}}.
  {label,226}.
    {line,[{location,"compile_SUITE.erl",775}]}.
    {badmatch,{x,0}}.
  {label,227}.
    {line,[{location,"compile_SUITE.erl",714}]}.
    {badmatch,{x,0}}.
  {label,228}.
    {line,[{location,"compile_SUITE.erl",696}]}.
    {badmatch,{x,0}}.
  {label,229}.
    {line,[{location,"compile_SUITE.erl",694}]}.
    {badmatch,{x,0}}.
  {label,230}.
    {line,[{location,"compile_SUITE.erl",692}]}.
    {badmatch,{x,0}}.
  {label,231}.
    {line,[{location,"compile_SUITE.erl",689}]}.
    {badmatch,{x,0}}.
  {label,232}.
    {line,[{location,"compile_SUITE.erl",688}]}.
    {badmatch,{x,0}}.
  {label,233}.
    {line,[{location,"compile_SUITE.erl",686}]}.
    {badmatch,{x,0}}.
  {label,234}.
    {line,[{location,"compile_SUITE.erl",680}]}.
    {badmatch,{x,0}}.
  {label,235}.
    {line,[{location,"compile_SUITE.erl",675}]}.
    {badmatch,{x,0}}.
  {label,236}.
    {line,[{location,"compile_SUITE.erl",670}]}.
    {badmatch,{x,0}}.
  {label,237}.
    {line,[{location,"compile_SUITE.erl",665}]}.
    {badmatch,{x,0}}.


{function, write_crypt_file, 2, 239}.
  {label,238}.
    {line,[{location,"compile_SUITE.erl",781}]}.
    {func_info,{atom,compile_SUITE},{atom,write_crypt_file},2}.
  {label,239}.
    {'%',{var_info,{x,1},[{type,{t_cons,{t_integer,{32,121}},nil}}]}}.
    {allocate_heap,2,8,2}.
    {move,{x,0},{y,1}}.
    {put_list,{x,1},{literal,["\"}].\n"]},{x,0}}.
    {put_list,{literal,"[{debug_info,des3_cbc,simple,\""},{x,0},{y,0}}.
    {put_list,{y,0},nil,{x,0}}.
    {put_list,{y,1},{x,0},{x,1}}.
    {move,{literal,"~s: ~s\n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",783}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",784}]}.
    {call_ext,1,{extfunc,filelib,ensure_dir,1}}.
    {test,is_eq_exact,{f,241},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {trim,2,0}.
    {line,[{location,"compile_SUITE.erl",785}]}.
    {call_ext,2,{extfunc,file,write_file,2}}.
    {test,is_eq_exact,{f,240},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,240}.
    {badmatch,{x,0}}.
  {label,241}.
    {line,[{location,"compile_SUITE.erl",784}]}.
    {badmatch,{x,0}}.


{function, encrypted_abstr_no_crypto, 2, 243}.
  {label,242}.
    {line,[{location,"compile_SUITE.erl",787}]}.
    {func_info,{atom,compile_SUITE},{atom,encrypted_abstr_no_crypto},2}.
  {label,243}.
    {allocate_heap,2,2,2}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{literal,"simpe: ~p~n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",788}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",789}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {test_heap,9,1}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{x,0}]}}.
    {put_list,{x,0},{literal,[report]},{x,0}}.
    {put_list,{literal,{debug_info_key,"ablurf123BX#$;3"}},{x,0},{x,0}}.
    {put_list,{atom,debug_info},{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",791}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,244},[{x,0},{atom,error}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,244}.
    {badmatch,{x,0}}.


{function, verify_abstract, 2, 246}.
  {label,245}.
    {line,[{location,"compile_SUITE.erl",796}]}.
    {func_info,{atom,compile_SUITE},{atom,verify_abstract},2}.
  {label,246}.
    {'%',{var_info,{x,1},[{type,{t_atom,[compile_SUITE,erl_abstract_code]}}]}}.
    {allocate,1,2}.
    {move,{x,1},{y,0}}.
    {move,{literal,[abstract_code,debug_info]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",797}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,249},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,249},[{x,1},2,{atom,simple}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,249},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_nonempty_list,{f,249},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,1}}.
    {test,is_nil,{f,249},[{x,1}]}.
    {test,is_tagged_tuple,{f,248},[{x,2},2,{atom,abstract_code}]}.
    {get_tuple_element,{x,2},1,{x,0}}.
    {test,is_tagged_tuple,{f,248},[{x,0},2,{atom,raw_abstract_v1}]}.
    {test,is_tagged_tuple,{f,247},[{x,3},2,{atom,debug_info}]}.
    {get_tuple_element,{x,3},1,{x,0}}.
    {test,is_tagged_tuple,{f,247},[{x,0},3,{atom,debug_info_v1}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {test,is_eq_exact,
          {f,247},
          [{x,0},{tr,{y,0},{t_atom,[compile_SUITE,erl_abstract_code]}}]}.
    {move,{x,3},{x,0}}.
    {deallocate,1}.
    return.
  {label,247}.
    {line,[{location,"compile_SUITE.erl",799}]}.
    {badmatch,{x,3}}.
  {label,248}.
    {line,[{location,"compile_SUITE.erl",798}]}.
    {badmatch,{x,2}}.
  {label,249}.
    {line,[{location,"compile_SUITE.erl",797}]}.
    {badmatch,{x,0}}.


{function, has_crypto, 0, 251}.
  {label,250}.
    {line,[{location,"compile_SUITE.erl",801}]}.
    {func_info,{atom,compile_SUITE},{atom,has_crypto},0}.
  {label,251}.
    {allocate,1,0}.
    {'try',{y,0},{f,252}}.
    {line,[{location,"compile_SUITE.erl",803}]}.
    {call_ext,0,{extfunc,crypto,start,0}}.
    {line,[{location,"compile_SUITE.erl",804}]}.
    {call_ext,0,{extfunc,crypto,stop,0}}.
    {try_end,{y,0}}.
    {move,{atom,true},{x,0}}.
    {deallocate,1}.
    return.
  {label,252}.
    {try_case,{y,0}}.
    {test,is_eq_exact,
          {f,253},
          [{tr,{x,0},{t_atom,[error,exit,throw]}},{atom,error}]}.
    {move,{atom,false},{x,0}}.
    {deallocate,1}.
    return.
  {label,253}.
    {bif,raise,{f,0},[{x,2},{x,1}],{x,0}}.


{function, install_crypto_key, 1, 255}.
  {label,254}.
    {line,[{location,"compile_SUITE.erl",810}]}.
    {func_info,{atom,compile_SUITE},{atom,install_crypto_key},1}.
  {label,255}.
    {'%',{var_info,{x,0},[{type,{t_cons,{t_integer,{32,121}},nil}}]}}.
    {allocate_heap,0,{alloc,[{words,1},{floats,0},{funs,1}]},1}.
    {make_fun3,{f,895},0,0,{x,0},{list,[{x,0}]}}.
    {'%',
        {var_info,
            {x,0},
            [{fun_type,
                 {t_union,
                     {t_atom,[ok]},
                     {t_cons,{t_integer,{32,121}},nil},
                     none,none,none}}]}}.
    {line,[{location,"compile_SUITE.erl",815}]}.
    {call_ext,1,{extfunc,beam_lib,crypto_key_fun,1}}.
    {test,is_eq_exact,{f,256},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,256}.
    {badmatch,{x,0}}.


{function, debug_info, 4, 258}.
  {label,257}.
    {line,[{location,"compile_SUITE.erl",818}]}.
    {func_info,{atom,compile_SUITE},{atom,debug_info},4}.
  {label,258}.
    {test,is_eq_exact,{f,257},[{x,0},{atom,erlang_v1}]}.
    {select_val,{x,2},{f,257},{list,[{atom,error},{f,260},{atom,ok},{f,259}]}}.
  {label,259}.
    {test_heap,5,2}.
    {put_list,{x,1},nil,{x,0}}.
    {put_tuple2,{x,0},{list,[{atom,ok},{x,0}]}}.
    return.
  {label,260}.
    {move,{literal,{error,unknown_format}},{x,0}}.
    return.


{function, custom_debug_info, 1, 262}.
  {label,261}.
    {line,[{location,"compile_SUITE.erl",823}]}.
    {func_info,{atom,compile_SUITE},{atom,custom_debug_info},1}.
  {label,262}.
    {test,is_list,{f,261},[{x,0}]}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{literal,"file_1"},{x,2}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",824}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{y,1}}.
    {move,{literal,[binary,{debug_info,{compile_SUITE,ok}}]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",826}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,268},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,268},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",828}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_eq_exact,
        {f,267},
        [{x,0},
         {literal,
             {ok,{simple,[{abstract_code,{raw_abstract_v1,[simple]}}]}}}]}.
    {move,{literal,[debug_info]},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",830}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_eq_exact,
        {f,266},
        [{x,0},
         {literal,
             {ok,{simple,[{debug_info,{debug_info_v1,compile_SUITE,ok}}]}}}]}.
    {move,{literal,[binary,{debug_info,{compile_SUITE,error}}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",832}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,265},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,265},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",834}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_eq_exact,
          {f,264},
          [{x,0},{literal,{ok,{simple,[{abstract_code,no_abstract_code}]}}}]}.
    {move,{literal,[debug_info]},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",836}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_eq_exact,
        {f,263},
        [{x,0},
         {literal,
             {ok,{simple,
                     [{debug_info,{debug_info_v1,compile_SUITE,error}}]}}}]}.
    {deallocate,0}.
    return.
  {label,263}.
    {line,[{location,"compile_SUITE.erl",835}]}.
    {badmatch,{x,0}}.
  {label,264}.
    {line,[{location,"compile_SUITE.erl",833}]}.
    {badmatch,{x,0}}.
  {label,265}.
    {line,[{location,"compile_SUITE.erl",832}]}.
    {badmatch,{x,0}}.
  {label,266}.
    {line,[{location,"compile_SUITE.erl",829}]}.
    {badmatch,{x,0}}.
  {label,267}.
    {line,[{location,"compile_SUITE.erl",827}]}.
    {badmatch,{x,0}}.
  {label,268}.
    {line,[{location,"compile_SUITE.erl",826}]}.
    {badmatch,{x,0}}.


{function, custom_compile_info, 1, 270}.
  {label,269}.
    {line,[{location,"compile_SUITE.erl",838}]}.
    {func_info,{atom,compile_SUITE},{atom,custom_compile_info},1}.
  {label,270}.
    {test,is_list,{f,269},[{x,0}]}.
    {allocate,2,0}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{integer,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",839}]}.
    {call_ext,1,{extfunc,erl_anno,new,1}}.
    {test_heap,7,1}.
    {put_tuple2,{x,0},
                {list,[{atom,attribute},
                       {x,0},
                       {atom,module},
                       {atom,custom_compile_info}]}}.
    {put_list,{x,0},nil,{y,1}}.
    {move,{literal,[binary,{compile_info,[{another,version}]}]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",843}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,277},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,277},[{x,1},{atom,custom_compile_info}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{literal,[compile_info]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",845}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,276},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,276},[{x,1},2,{atom,custom_compile_info}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,276},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tagged_tuple,{f,276},[{x,2},2,{atom,compile_info}]}.
    {test,is_nil,{f,276},[{x,1}]}.
    {get_tuple_element,{x,2},1,{y,0}}.
    {move,{y,0},{x,1}}.
    {move,{atom,another},{x,0}}.
    {line,[{location,"compile_SUITE.erl",846}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {test,is_eq_exact,{f,275},[{x,0},{atom,version}]}.
    {move,{y,0},{x,1}}.
    {trim,1,1}.
    {move,{atom,options},{x,0}}.
    {line,[{location,"compile_SUITE.erl",847}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{x,1}}.
    {move,{atom,compile_info},{x,0}}.
    {line,[{location,"compile_SUITE.erl",848}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {test,is_eq_exact,{f,274},[{x,0},{atom,undefined}]}.
    {move,{literal,[deterministic,binary,{compile_info,[{another,version}]}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",850}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,273},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,273},[{x,1},{atom,custom_compile_info}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{literal,[compile_info]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",852}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,272},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,272},[{x,1},2,{atom,custom_compile_info}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,272},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tagged_tuple,{f,272},[{x,2},2,{atom,compile_info}]}.
    {test,is_nil,{f,272},[{x,1}]}.
    {get_tuple_element,{x,2},1,{x,1}}.
    {move,{atom,another},{x,0}}.
    {line,[{location,"compile_SUITE.erl",853}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {test,is_eq_exact,{f,271},[{x,0},{atom,version}]}.
    {deallocate,0}.
    return.
  {label,271}.
    {badmatch,{x,0}}.
  {label,272}.
    {line,[{location,"compile_SUITE.erl",851}]}.
    {badmatch,{x,0}}.
  {label,273}.
    {line,[{location,"compile_SUITE.erl",850}]}.
    {badmatch,{x,0}}.
  {label,274}.
    {line,[{location,"compile_SUITE.erl",848}]}.
    {badmatch,{x,0}}.
  {label,275}.
    {line,[{location,"compile_SUITE.erl",846}]}.
    {badmatch,{x,0}}.
  {label,276}.
    {line,[{location,"compile_SUITE.erl",844}]}.
    {badmatch,{x,0}}.
  {label,277}.
    {line,[{location,"compile_SUITE.erl",843}]}.
    {badmatch,{x,0}}.


{function, cover, 1, 279}.
  {label,278}.
    {line,[{location,"compile_SUITE.erl",855}]}.
    {func_info,{atom,compile_SUITE},{atom,cover},1}.
  {label,279}.
    {test,is_list,{f,278},[{x,0}]}.
    {allocate,0,0}.
    {line,[{location,"compile_SUITE.erl",856}]}.
    {call_ext,0,{extfunc,compile,options,0}}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{literal,"~p\n"},{x,0}}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, do_listing, 4, 281}.
  {label,280}.
    {line,[{location,"compile_SUITE.erl",859}]}.
    {func_info,{atom,compile_SUITE},{atom,do_listing},4}.
  {label,281}.
    {allocate_heap,4,8,4}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,3}}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{x,2},{x,0},{x,0}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {put_list,{y,3},{x,0},{x,1}}.
    {move,{literal,"Source: ~p TargetDir: ~p\n  Type: ~p Ext: ~p\n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",860}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {test_heap,9,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,time},{x,0},{x,0}}.
    {put_list,{y,1},{x,0},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",862}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,282},[{x,0},2,{atom,ok}]}.
    {jump,{f,283}}.
  {label,282}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,unexpected_result},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",864}]}.
    {call_ext,1,{extfunc,ct,fail,1}}.
  {label,283}.
    {move,{y,3},{x,0}}.
    {move,{y,0},{y,3}}.
    {trim,2,2}.
    {line,[{location,"compile_SUITE.erl",866}]}.
    {call_ext,1,{extfunc,filename,basename,1}}.
    {call_ext,1,{extfunc,filename,rootname,1}}.
    {move,{y,1},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",868}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,2,0}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {line,[{location,"compile_SUITE.erl",869}]}.
    {call,1,{f,295}}. % exists/1
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,284},[{x,0},{atom,true}]}.
    {deallocate,0}.
    return.
  {label,284}.
    {badmatch,{atom,false}}.


{function, get_files, 3, 286}.
  {label,285}.
    {line,[{location,"compile_SUITE.erl",871}]}.
    {func_info,{atom,compile_SUITE},{atom,get_files},3}.
  {label,286}.
    {'%',{var_info,{x,0},[{type,{t_list,any,any}}]}}.
    {'%',{var_info,{x,1},[{type,{t_atom,[big,deterministic_module,simple]}}]}}.
    {'%',{var_info,{x,2},
                   [{type,{t_union,{t_atom,[env,listings_big]},
                                   {t_cons,{t_integer,{49,121}},nil},
                                   none,none,none}}]}}.
    {allocate,4,3}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,3}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",872}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",873}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {move,{y,3},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",874}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,3},{x,1}}.
    {move,{x,0},{y,3}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",875}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",876}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{y,0},{x,2}}.
    {move,{x,0},{y,3}}.
    {move,{y,1},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {trim,1,3}.
    {move,{x,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",877}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",878}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,287},[{x,0},{atom,ok}]}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",879}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{y,1}}.
    {call_ext,0,{extfunc,code,objfile_extension,0}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,2,1}.
    {line,[{location,"compile_SUITE.erl",880}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{y,0},{x,0}]}}.
    {deallocate,1}.
    return.
  {label,287}.
    {line,[{location,"compile_SUITE.erl",878}]}.
    {badmatch,{x,0}}.


{function, run, 3, 289}.
  {label,288}.
    {line,[{location,"compile_SUITE.erl",883}]}.
    {func_info,{atom,compile_SUITE},{atom,run},3}.
  {label,289}.
    {'%',{var_info,{x,1},[{type,{t_atom,[foo,test]}}]}}.
    {'%',{var_info,{x,2},[{type,nil}]}}.
    {allocate,3,2}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"compile_SUITE.erl",884}]}.
    {call_ext,1,{extfunc,filename,basename,1}}.
    {call_ext,1,{extfunc,filename,rootname,1}}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {move,{x,0},{y,0}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",885}]}.
    {call_ext,1,{extfunc,filename,rootname,1}}.
    {call_ext,1,{extfunc,code,load_abs,1}}.
    {test,is_tagged_tuple,{f,293},[{x,0},2,{atom,module}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,293},[{x,1},{tr,{y,0},{t_atom,any}}]}.
    {'catch',{y,2},{f,290}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,2}}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",886}]}.
    {call_ext,3,{extfunc,erlang,apply,3}}.
  {label,290}.
    {catch_end,{y,2}}.
    {move,{x,0},{y,2}}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[1,2]},{location,"compile_SUITE.erl",887}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {test,is_eq_exact,{f,292},[{x,0},{atom,true}]}.
    {move,{y,0},{x,0}}.
    {trim,2,1}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",888}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {test,is_eq_exact,{f,291},[{x,0},{atom,false}]}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,291}.
    {badmatch,{x,0}}.
  {label,292}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",887}]}.
    {badmatch,{x,0}}.
  {label,293}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",885}]}.
    {badmatch,{x,0}}.


{function, exists, 1, 295}.
  {label,294}.
    {line,[{location,"compile_SUITE.erl",891}]}.
    {func_info,{atom,compile_SUITE},{atom,exists},1}.
  {label,295}.
    {allocate,0,1}.
    {line,[{location,"compile_SUITE.erl",892}]}.
    {call_ext,1,{extfunc,file,read_file_info,1}}.
    {test,is_tuple,{f,298},[{x,0}]}.
    {test,test_arity,{f,298},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {select_val,{x,1},{f,298},{list,[{atom,error},{f,297},{atom,ok},{f,296}]}}.
  {label,296}.
    {move,{atom,true},{x,0}}.
    {deallocate,0}.
    return.
  {label,297}.
    {move,{atom,false},{x,0}}.
    {deallocate,0}.
    return.
  {label,298}.
    {case_end,{x,0}}.


{function, strict_record, 1, 300}.
  {label,299}.
    {line,[{location,"compile_SUITE.erl",898}]}.
    {func_info,{atom,compile_SUITE},{atom,strict_record},1}.
  {label,300}.
    {test,is_list,{f,299},[{x,0}]}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{y,2}}.
    {move,{x,0},{x,1}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",899}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,2},{x,1}}.
    {move,{x,0},{y,2}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",900}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,312},[{x,0},{atom,ok}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},{literal,[report_errors]},{y,1}}.
    {put_list,{atom,strict_record_tests},{y,1},{x,1}}.
    {move,{atom,record_access},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",904}]}.
    {call_ext,2,{extfunc,c,c,2}}.
    {test,is_tagged_tuple,{f,311},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,311},[{x,1},{atom,record_access}]}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",905}]}.
    {call,0,{f,314}}. % test_strict/0
    {test_heap,2,1}.
    {put_list,{atom,no_strict_record_tests},{y,1},{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{atom,record_access},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",907}]}.
    {call_ext,2,{extfunc,c,c,2}}.
    {test,is_tagged_tuple,{f,310},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,310},[{x,1},{atom,record_access}]}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",908}]}.
    {call,0,{f,319}}. % test_sloppy/0
    {test,is_eq_exact,{f,309},[{x,0},{y,0}]}.
    {test_heap,4,0}.
    {put_list,{atom,no_strict_record_tests},{y,1},{x,0}}.
    {put_list,{atom,strict_record_tests},{x,0},{x,1}}.
    {move,{atom,record_access},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",911}]}.
    {call_ext,2,{extfunc,c,c,2}}.
    {test,is_tagged_tuple,{f,308},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,308},[{x,1},{atom,record_access}]}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",912}]}.
    {call,0,{f,319}}. % test_sloppy/0
    {test,is_eq_exact,{f,307},[{x,0},{y,0}]}.
    {test_heap,4,0}.
    {put_list,{atom,strict_record_tests},{y,1},{x,0}}.
    {put_list,{atom,no_strict_record_tests},{x,0},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{atom,record_access},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",913}]}.
    {call_ext,2,{extfunc,c,c,2}}.
    {test,is_tagged_tuple,{f,306},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,306},[{x,1},{atom,record_access}]}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",914}]}.
    {call,0,{f,314}}. % test_strict/0
    {test,is_eq_exact,{f,305},[{x,0},{y,0}]}.
    {test_heap,5,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},{literal,[report_errors]},{x,1}}.
    {init_yregs,{list,[{y,2}]}}.
    {move,{atom,record_access},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",917}]}.
    {call_ext,2,{extfunc,c,c,2}}.
    {test,is_tagged_tuple,{f,304},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,304},[{x,1},{atom,record_access}]}.
    {'try',{y,2},{f,301}}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",919}]}.
    {call_ext,1,{extfunc,record_access,test,1}}.
    {test,is_eq_exact,{f,303},[{x,0},{literal,{1,2}}]}.
    {try_end,{y,2}}.
    {move,{literal,{comment,"Default: no_strict_record_tests"}},{x,0}}.
    {deallocate,3}.
    return.
  {label,301}.
    {try_case,{y,2}}.
    {test,is_eq_exact,
          {f,302},
          [{tr,{x,0},{t_atom,[error,exit,throw]}},{atom,error}]}.
    {test,is_tagged_tuple,{f,302},[{x,1},2,{atom,badrecord}]}.
    {get_tuple_element,{x,1},1,{x,0}}.
    {test,is_eq_exact,{f,302},[{x,0},{y,0}]}.
    {move,{literal,{comment,"Default: strict_record_tests"}},{x,0}}.
    {deallocate,3}.
    return.
  {label,302}.
    {bif,raise,{f,0},[{x,2},{x,1}],{x,0}}.
  {label,303}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",919}]}.
    {badmatch,{x,0}}.
  {label,304}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",917}]}.
    {badmatch,{x,0}}.
  {label,305}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",914}]}.
    {badmatch,{x,0}}.
  {label,306}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",913}]}.
    {badmatch,{x,0}}.
  {label,307}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",912}]}.
    {badmatch,{x,0}}.
  {label,308}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",911}]}.
    {badmatch,{x,0}}.
  {label,309}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",908}]}.
    {badmatch,{x,0}}.
  {label,310}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",907}]}.
    {badmatch,{x,0}}.
  {label,311}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",904}]}.
    {badmatch,{x,0}}.
  {label,312}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",900}]}.
    {badmatch,{x,0}}.


{function, test_strict, 0, 314}.
  {label,313}.
    {line,[{location,"compile_SUITE.erl",926}]}.
    {func_info,{atom,compile_SUITE},{atom,test_strict},0}.
  {label,314}.
    {allocate,2,0}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",927}]}.
    {call_ext,0,{extfunc,record_access,turtle,0}}.
    {move,{x,0},{y,0}}.
    {'try',{y,1},{f,315}}.
    {line,[{location,"compile_SUITE.erl",929}]}.
    {call_ext,1,{extfunc,record_access,test,1}}.
    {try_end,{y,1}}.
    {jump,{f,316}}.
  {label,315}.
    {try_case,{y,1}}.
    {test,is_eq_exact,
          {f,317},
          [{tr,{x,0},{t_atom,[error,exit,throw]}},{atom,error}]}.
    {test,is_tagged_tuple,{f,317},[{x,1},2,{atom,badrecord}]}.
    {get_tuple_element,{x,1},1,{x,0}}.
    {test,is_eq_exact,{f,317},[{x,0},{y,0}]}.
  {label,316}.
    {move,{y,0},{x,0}}.
    {deallocate,2}.
    return.
  {label,317}.
    {bif,raise,{f,0},[{x,2},{x,1}],{x,0}}.


{function, test_sloppy, 0, 319}.
  {label,318}.
    {line,[{location,"compile_SUITE.erl",936}]}.
    {func_info,{atom,compile_SUITE},{atom,test_sloppy},0}.
  {label,319}.
    {allocate,1,0}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",937}]}.
    {call_ext,0,{extfunc,record_access,turtle,0}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",938}]}.
    {call_ext,1,{extfunc,record_access,test,1}}.
    {test,is_eq_exact,{f,320},[{x,0},{literal,{1,2}}]}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,320}.
    {badmatch,{x,0}}.


{function, utf8_atoms, 1, 322}.
  {label,321}.
    {line,[{location,"compile_SUITE.erl",941}]}.
    {func_info,{atom,compile_SUITE},{atom,utf8_atoms},1}.
  {label,322}.
    {test,is_list,{f,321},[{x,0}]}.
    {allocate,1,0}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{integer,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",942}]}.
    {call_ext,1,{extfunc,erl_anno,new,1}}.
    {test_heap,36,1}.
    {put_tuple2,{x,1},
                {list,[{atom,atom},
                       {x,0},
                       {atom,'\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,1},{list,[{atom,clause},{x,0},nil,nil,{x,1}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,1},
                {list,[{atom,function},{x,0},{atom,atom},{integer,0},{x,1}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,2},
                {list,[{atom,attribute},
                       {x,0},
                       {atom,compile},
                       {literal,[export_all]}]}}.
    {put_list,{x,2},{x,1},{x,1}}.
    {put_tuple2,{x,0},
                {list,[{atom,attribute},
                       {x,0},
                       {atom,module},
                       {atom,utf8_atom}]}}.
    {put_list,{x,0},{x,1},{x,0}}.
    {move,{literal,[binary]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",949}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,325},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,325},[{x,1},{atom,utf8_atom}]}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {move,{literal,[atoms]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",951}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,324},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,324},[{x,1},2,{atom,utf8_atom}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,324},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tagged_tuple,{f,324},[{x,2},2,{atom,atoms}]}.
    {test,is_nil,{f,324},[{x,1}]}.
    {move,{literal,"compile_SUITE"},{x,1}}.
    {move,{y,0},{x,2}}.
    {trim,1,0}.
    {move,{atom,utf8_atom},{x,0}}.
    {line,[{location,"compile_SUITE.erl",952}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {line,[{location,"compile_SUITE.erl",953}]}.
    {call_ext,0,{extfunc,utf8_atom,atom,0}}.
    {test,is_eq_exact,
          {f,323},
          [{x,0},{atom,'\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,323}.
    {badmatch,{x,0}}.
  {label,324}.
    {line,[{location,"compile_SUITE.erl",950}]}.
    {badmatch,{x,0}}.
  {label,325}.
    {line,[{location,"compile_SUITE.erl",948}]}.
    {badmatch,{x,0}}.


{function, utf8_functions, 1, 327}.
  {label,326}.
    {line,[{location,"compile_SUITE.erl",957}]}.
    {func_info,{atom,compile_SUITE},{atom,utf8_functions},1}.
  {label,327}.
    {test,is_list,{f,326},[{x,0}]}.
    {allocate,3,0}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {move,{integer,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",958}]}.
    {call_ext,1,{extfunc,erl_anno,new,1}}.
    {test_heap,36,1}.
    {put_tuple2,{x,1},{list,[{atom,atom},{x,0},{atom,world}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,1},{list,[{atom,clause},{x,0},nil,nil,{x,1}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,1},
                {list,[{atom,function},
                       {x,0},
                       {atom,'\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}'},
                       {integer,0},
                       {x,1}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,2},
                {list,[{atom,attribute},
                       {x,0},
                       {atom,compile},
                       {literal,[export_all]}]}}.
    {put_list,{x,2},{x,1},{y,2}}.
    {put_tuple2,{x,1},
                {list,[{atom,attribute},
                       {x,0},
                       {atom,module},
                       {atom,utf8_function}]}}.
    {put_list,{x,1},{y,2},{x,1}}.
    {move,{x,0},{y,1}}.
    {move,{x,1},{x,0}}.
    {move,{literal,[binary]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",965}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,331},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,331},[{x,1},{atom,utf8_function}]}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {move,{literal,[atoms]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",967}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,330},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,330},[{x,1},2,{atom,utf8_function}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,330},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tagged_tuple,{f,330},[{x,2},2,{atom,atoms}]}.
    {test,is_nil,{f,330},[{x,1}]}.
    {move,{literal,"compile_SUITE"},{x,1}}.
    {move,{y,0},{x,2}}.
    {trim,1,2}.
    {move,{atom,utf8_function},{x,0}}.
    {line,[{location,"compile_SUITE.erl",968}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {line,[{location,"compile_SUITE.erl",969}]}.
    {call_ext,0,
              {extfunc,utf8_function,
                       '\x{3053}\x{3093}\x{306B}\x{3061}\x{306F}',0}}.
    {test,is_eq_exact,{f,329},[{x,0},{atom,world}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},
                {list,[{atom,attribute},
                       {y,0},
                       {atom,module},
                       {atom,no_utf8_function}]}}.
    {put_list,{x,0},{y,1},{x,0}}.
    {move,{literal,[binary,r19]},{x,1}}.
    {trim,2,0}.
    {line,[{location,"compile_SUITE.erl",972}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_eq_exact,{f,328},[{x,0},{atom,error}]}.
    {deallocate,0}.
    return.
  {label,328}.
    {badmatch,{x,0}}.
  {label,329}.
    {line,[{location,"compile_SUITE.erl",969}]}.
    {badmatch,{x,0}}.
  {label,330}.
    {line,[{location,"compile_SUITE.erl",966}]}.
    {badmatch,{x,0}}.
  {label,331}.
    {line,[{location,"compile_SUITE.erl",964}]}.
    {badmatch,{x,0}}.


{function, extra_chunks, 1, 333}.
  {label,332}.
    {line,[{location,"compile_SUITE.erl",974}]}.
    {func_info,{atom,compile_SUITE},{atom,extra_chunks},1}.
  {label,333}.
    {test,is_list,{f,332},[{x,0}]}.
    {allocate,0,0}.
    {move,{integer,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",975}]}.
    {call_ext,1,{extfunc,erl_anno,new,1}}.
    {test_heap,7,1}.
    {put_tuple2,{x,0},
                {list,[{atom,attribute},
                       {x,0},
                       {atom,module},
                       {atom,extra_chunks}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {move,{literal,[binary,{extra_chunks,[{<<"ExCh">>,<<"Contents">>}]}]},
          {x,1}}.
    {line,[{location,"compile_SUITE.erl",979}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,335},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,335},[{x,1},{atom,extra_chunks}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{literal,["ExCh"]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",981}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_eq_exact,
          {f,334},
          [{x,0},{literal,{ok,{extra_chunks,[{"ExCh",<<"Contents">>}]}}}]}.
    {deallocate,0}.
    return.
  {label,334}.
    {line,[{location,"compile_SUITE.erl",980}]}.
    {badmatch,{x,0}}.
  {label,335}.
    {line,[{location,"compile_SUITE.erl",978}]}.
    {badmatch,{x,0}}.


{function, tuple_calls, 1, 337}.
  {label,336}.
    {line,[{location,"compile_SUITE.erl",983}]}.
    {func_info,{atom,compile_SUITE},{atom,tuple_calls},1}.
  {label,337}.
    {test,is_list,{f,336},[{x,0}]}.
    {allocate,5,0}.
    {init_yregs,{list,[{y,0},{y,1},{y,2},{y,3},{y,4}]}}.
    {move,{integer,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",984}]}.
    {call_ext,1,{extfunc,erl_anno,new,1}}.
    {test_heap,96,1}.
    {put_tuple2,{x,1},{list,[{atom,var},{x,0},{atom,mod}]}}.
    {put_list,{x,1},nil,{x,2}}.
    {put_tuple2,{x,3},{list,[{atom,atom},{x,0},{atom,size}]}}.
    {put_tuple2,{x,3},{list,[{atom,remote},{x,0},{x,1},{x,3}]}}.
    {put_tuple2,{x,3},{list,[{atom,call},{x,0},{x,3},nil]}}.
    {put_list,{x,3},nil,{x,3}}.
    {put_tuple2,{x,3},{list,[{atom,clause},{x,0},{x,2},nil,{x,3}]}}.
    {put_list,{x,3},nil,{x,3}}.
    {put_tuple2,{x,4},{list,[{atom,atom},{x,0},{atom,store}]}}.
    {put_tuple2,{x,1},{list,[{atom,remote},{x,0},{x,1},{x,4}]}}.
    {put_tuple2,{x,4},{list,[{atom,atom},{x,0},{atom,value}]}}.
    {put_list,{x,4},nil,{x,4}}.
    {put_tuple2,{x,5},{list,[{atom,atom},{x,0},{atom,key}]}}.
    {put_list,{x,5},{x,4},{x,4}}.
    {put_tuple2,{x,1},{list,[{atom,call},{x,0},{x,1},{x,4}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,1},{list,[{atom,clause},{x,0},{x,2},nil,{x,1}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,1},
                {list,[{atom,function},{x,0},{atom,store},{integer,1},{x,1}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_tuple2,{x,2},
                {list,[{atom,function},{x,0},{atom,size},{integer,1},{x,3}]}}.
    {put_list,{x,2},{x,1},{x,1}}.
    {put_tuple2,{x,2},
                {list,[{atom,attribute},
                       {x,0},
                       {atom,export},
                       {literal,[{size,1},{store,1}]}]}}.
    {put_list,{x,2},{x,1},{y,1}}.
    {put_tuple2,{x,1},
                {list,[{atom,attribute},
                       {x,0},
                       {atom,module},
                       {atom,tuple_calls_false}]}}.
    {put_list,{x,1},{y,1},{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,0}}.
    {move,{literal,[binary]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",996}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,348},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {move,{literal,"compile_SUITE.erl"},{x,1}}.
    {move,{atom,tuple_calls_false},{x,0}}.
    {line,[{location,"compile_SUITE.erl",997}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {'catch',{y,4},{f,338}}.
    {line,[{location,"compile_SUITE.erl",998}]}.
    {call,0,{f,350}}. % dict/0
    {call_ext,1,{extfunc,tuple_calls_false,store,1}}.
  {label,338}.
    {catch_end,{y,4}}.
    {test,is_tagged_tuple,{f,347},[{x,0},2,{atom,'EXIT'}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,347},[{x,1},2,{atom,badarg}]}.
    {'catch',{y,3},{f,339}}.
    {line,[{scope,[7,8]},{location,"compile_SUITE.erl",999}]}.
    {call,0,{f,350}}. % dict/0
    {call_ext,1,{extfunc,tuple_calls_false,size,1}}.
  {label,339}.
    {catch_end,{y,3}}.
    {test,is_tagged_tuple,{f,346},[{x,0},2,{atom,'EXIT'}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,346},[{x,1},2,{atom,badarg}]}.
    {'catch',{y,2},{f,340}}.
    {line,[{scope,[5,6]},{location,"compile_SUITE.erl",1000}]}.
    {call,0,{f,352}}. % empty_tuple/0
    {'%',{var_info,{x,0},[{type,{t_tuple,0,true,#{}}}]}}.
    {call_ext,1,{extfunc,tuple_calls_false,size,1}}.
  {label,340}.
    {catch_end,{y,2}}.
    {test,is_tagged_tuple,{f,345},[{x,0},2,{atom,'EXIT'}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,345},[{x,1},2,{atom,badarg}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},
                {list,[{atom,attribute},
                       {y,0},
                       {atom,module},
                       {atom,tuple_calls_true}]}}.
    {put_list,{x,0},{y,1},{x,0}}.
    {move,{literal,[binary,tuple_calls]},{x,1}}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {line,[{scope,[3,4]},{location,"compile_SUITE.erl",1003}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,344},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {move,{literal,"compile_SUITE.erl"},{x,1}}.
    {move,{atom,tuple_calls_true},{x,0}}.
    {line,[{scope,[3,4]},{location,"compile_SUITE.erl",1004}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {line,[{scope,[3,4]},{location,"compile_SUITE.erl",1005}]}.
    {call,0,{f,350}}. % dict/0
    {call_ext,1,{extfunc,tuple_calls_true,store,1}}.
    {line,[{scope,[3,4]},{location,"compile_SUITE.erl",1006}]}.
    {call_ext,1,{extfunc,tuple_calls_true,size,1}}.
    {test,is_eq_exact,{f,343},[{x,0},{integer,1}]}.
    {'catch',{y,1},{f,341}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1007}]}.
    {call,0,{f,352}}. % empty_tuple/0
    {'%',{var_info,{x,0},[{type,{t_tuple,0,true,#{}}}]}}.
    {call_ext,1,{extfunc,tuple_calls_true,size,1}}.
  {label,341}.
    {catch_end,{y,1}}.
    {test,is_tagged_tuple,{f,342},[{x,0},2,{atom,'EXIT'}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,342},[{x,1},2,{atom,badarg}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,5}.
    return.
  {label,342}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1007}]}.
    {badmatch,{x,0}}.
  {label,343}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1006}]}.
    {badmatch,{x,0}}.
  {label,344}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1003}]}.
    {badmatch,{x,0}}.
  {label,345}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1000}]}.
    {badmatch,{x,0}}.
  {label,346}.
    {line,[{scope,[4]},{location,"compile_SUITE.erl",999}]}.
    {badmatch,{x,0}}.
  {label,347}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",998}]}.
    {badmatch,{x,0}}.
  {label,348}.
    {line,[{scope,"\b"},{location,"compile_SUITE.erl",996}]}.
    {badmatch,{x,0}}.


{function, dict, 0, 350}.
  {label,349}.
    {line,[{location,"compile_SUITE.erl",1011}]}.
    {func_info,{atom,compile_SUITE},{atom,dict},0}.
  {label,350}.
    {line,[{location,"compile_SUITE.erl",1012}]}.
    {call_ext_only,0,{extfunc,dict,new,0}}.


{function, empty_tuple, 0, 352}.
  {label,351}.
    {line,[{location,"compile_SUITE.erl",1013}]}.
    {func_info,{atom,compile_SUITE},{atom,empty_tuple},0}.
  {label,352}.
    {move,{literal,{}},{x,0}}.
    return.


{function, env, 1, 354}.
  {label,353}.
    {line,[{location,"compile_SUITE.erl",1016}]}.
    {func_info,{atom,compile_SUITE},{atom,env},1}.
  {label,354}.
    {test,is_list,{f,353},[{x,0}]}.
    {allocate,5,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2},{y,3},{y,4}]}}.
    {move,{atom,env},{x,2}}.
    {move,{atom,simple},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1017}]}.
    {call,3,{f,286}}. % get_files/3
    {'%',{var_info,{x,0},[{type,{t_tuple,2,true,#{}}}]}}.
    {get_tuple_element,{x,0},0,{y,3}}.
    {move,{x,0},{y,4}}.
    {line,[{location,"compile_SUITE.erl",1018}]}.
    {call_ext,0,{extfunc,file,get_cwd,0}}.
    {move,{x,0},{y,2}}.
    {test,is_tagged_tuple,{f,360},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{y,4},1,{y,1}}.
    {init_yregs,{list,[{y,4}]}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1019}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,359},[{x,0},{atom,ok}]}.
    {move,{literal,"binary"},{x,1}}.
    {move,{literal,"ERL_COMPILER_OPTIONS"},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1021}]}.
    {call_ext,2,{extfunc,os,putenv,2}}.
    {test,is_eq_exact,{f,358},[{x,0},{atom,true}]}.
    {get_tuple_element,{y,2},1,{y,2}}.
    {'try',{y,4},{f,355}}.
    {move,{y,1},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1023}]}.
    {call,2,{f,362}}. % env_1/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {try_end,{y,4}}.
    {move,{literal,"ignore_me"},{x,1}}.
    {move,{literal,"ERL_COMPILER_OPTIONS"},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1025}]}.
    {call_ext,2,{extfunc,os,putenv,2}}.
    {test,is_eq_exact,{f,356},[{x,0},{atom,true}]}.
    {move,{y,2},{x,0}}.
    {move,{y,1},{y,4}}.
    {trim,4,1}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",1026}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",1027}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",1028}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,355}.
    {try_case,{y,4}}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,3}}.
    {move,{literal,"ignore_me"},{x,1}}.
    {move,{literal,"ERL_COMPILER_OPTIONS"},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1025}]}.
    {call_ext,2,{extfunc,os,putenv,2}}.
    {test,is_eq_exact,{f,357},[{x,0},{atom,true}]}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1026}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {move,{y,1},{x,0}}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1027}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,4}}.
    {trim,3,2}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1028}]}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {bif,raise,{f,0},[{y,1},{y,0}],{x,0}}.
  {label,356}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",1025}]}.
    {badmatch,{x,0}}.
  {label,357}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1025}]}.
    {badmatch,{x,0}}.
  {label,358}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1021}]}.
    {badmatch,{x,0}}.
  {label,359}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1019}]}.
    {badmatch,{x,0}}.
  {label,360}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1018}]}.
    {badmatch,{x,0}}.


{function, env_1, 2, 362}.
  {label,361}.
    {line,[{location,"compile_SUITE.erl",1032}]}.
    {func_info,{atom,compile_SUITE},{atom,env_1},2}.
  {label,362}.
    {allocate,2,2}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"compile_SUITE.erl",1034}]}.
    {call_ext,1,{extfunc,compile,file,1}}.
    {test,is_tagged_tuple,{f,379},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,379},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,bs_start_match3,{f,379},2,[{x,1}],{x,1}}.
    {bs_match,{f,379},{x,1},{commands,[{ensure_at_least,0,8}]}}.
    {move,{literal,[debug_info]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1035}]}.
    {call_ext,2,{extfunc,compile,noenv_file,2}}.
    {test,is_eq_exact,{f,378},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,debug_info},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",1036}]}.
    {call_ext,2,{extfunc,compile,noenv_file,2}}.
    {test,is_eq_exact,{f,377},[{x,0},{literal,{ok,simple}}]}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1038}]}.
    {call,1,{f,295}}. % exists/1
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,376},[{x,0},{atom,true}]}.
    {move,{literal,[abstract_code]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1040}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,375},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tagged_tuple,{f,375},[{x,1},2,{atom,simple}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,375},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tagged_tuple,{f,375},[{x,2},2,{atom,abstract_code}]}.
    {test,is_nil,{f,375},[{x,1}]}.
    {get_tuple_element,{x,2},1,{y,1}}.
    {test,is_tagged_tuple,{f,374},[{y,1},2,{atom,raw_abstract_v1}]}.
    {move,{literal,"strong_validation"},{x,1}}.
    {move,{literal,"ERL_COMPILER_OPTIONS"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1044}]}.
    {call_ext,2,{extfunc,os,putenv,2}}.
    {test,is_eq_exact,{f,373},[{x,0},{atom,true}]}.
    {get_tuple_element,{y,1},1,{y,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1045}]}.
    {call_ext,1,{extfunc,compile,forms,1}}.
    {test,is_eq_exact,{f,372},[{x,0},{literal,{ok,simple}}]}.
    {move,nil,{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1046}]}.
    {call_ext,2,{extfunc,compile,noenv_forms,2}}.
    {test,is_tagged_tuple,{f,371},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,371},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,bs_start_match3,{f,371},2,[{x,1}],{x,1}}.
    {bs_match,{f,371},
              {x,1},
              {commands,[{ensure_at_least,32,8},
                         {'=:=',nil,31,589801752},
                         {'=:=',nil,1,1}]}}.
    {move,nil,{x,0}}.
    {line,[{location,"compile_SUITE.erl",1049}]}.
    {call_ext,1,{extfunc,compile,output_generated,1}}.
    {test,is_eq_exact,{f,370},[{x,0},{atom,false}]}.
    {move,nil,{x,0}}.
    {line,[{location,"compile_SUITE.erl",1050}]}.
    {call_ext,1,{extfunc,compile,noenv_output_generated,1}}.
    {test,is_eq_exact,{f,369},[{x,0},{atom,true}]}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",1052}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,368},[{x,0},{atom,ok}]}.
    {move,{literal,"'unterminated_atom"},{x,1}}.
    {move,{literal,"ERL_COMPILER_OPTIONS"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1055}]}.
    {call_ext,2,{extfunc,os,putenv,2}}.
    {test,is_eq_exact,{f,367},[{x,0},{atom,true}]}.
    {move,{literal,[basic_validation]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1056}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_eq_exact,{f,366},[{x,0},{literal,{ok,[]}}]}.
    {move,{literal,",,,"},{x,1}}.
    {move,{literal,"ERL_COMPILER_OPTIONS"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1057}]}.
    {call_ext,2,{extfunc,os,putenv,2}}.
    {test,is_eq_exact,{f,365},[{x,0},{atom,true}]}.
    {move,{literal,[basic_validation]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1058}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_eq_exact,{f,364},[{x,0},{literal,{ok,[]}}]}.
    {move,{atom,no_postopt},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",1059}]}.
    {call_ext,2,{extfunc,compile,noenv_forms,2}}.
    {test,is_tagged_tuple,{f,363},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,363},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,bs_start_match3,{f,363},2,[{x,1}],{x,1}}.
    {bs_match,{f,363},
              {x,1},
              {commands,[{ensure_at_least,32,8},
                         {'=:=',nil,31,589801752},
                         {'=:=',nil,1,1}]}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,2}.
    return.
  {label,363}.
    {badmatch,{x,0}}.
  {label,364}.
    {line,[{location,"compile_SUITE.erl",1058}]}.
    {badmatch,{x,0}}.
  {label,365}.
    {line,[{location,"compile_SUITE.erl",1057}]}.
    {badmatch,{x,0}}.
  {label,366}.
    {line,[{location,"compile_SUITE.erl",1056}]}.
    {badmatch,{x,0}}.
  {label,367}.
    {line,[{location,"compile_SUITE.erl",1055}]}.
    {badmatch,{x,0}}.
  {label,368}.
    {line,[{location,"compile_SUITE.erl",1052}]}.
    {badmatch,{x,0}}.
  {label,369}.
    {line,[{location,"compile_SUITE.erl",1050}]}.
    {badmatch,{x,0}}.
  {label,370}.
    {line,[{location,"compile_SUITE.erl",1049}]}.
    {badmatch,{x,0}}.
  {label,371}.
    {line,[{location,"compile_SUITE.erl",1046}]}.
    {badmatch,{x,0}}.
  {label,372}.
    {line,[{location,"compile_SUITE.erl",1045}]}.
    {badmatch,{x,0}}.
  {label,373}.
    {line,[{location,"compile_SUITE.erl",1044}]}.
    {badmatch,{x,0}}.
  {label,374}.
    {line,[{location,"compile_SUITE.erl",1041}]}.
    {badmatch,{y,1}}.
  {label,375}.
    {line,[{location,"compile_SUITE.erl",1039}]}.
    {badmatch,{x,0}}.
  {label,376}.
    {line,[{location,"compile_SUITE.erl",1038}]}.
    {badmatch,{atom,false}}.
  {label,377}.
    {line,[{location,"compile_SUITE.erl",1036}]}.
    {badmatch,{x,0}}.
  {label,378}.
    {line,[{location,"compile_SUITE.erl",1035}]}.
    {badmatch,{x,0}}.
  {label,379}.
    {line,[{location,"compile_SUITE.erl",1034}]}.
    {badmatch,{x,0}}.


{function, core_pp, 1, 381}.
  {label,380}.
    {line,[{location,"compile_SUITE.erl",1066}]}.
    {func_info,{atom,compile_SUITE},{atom,core_pp},1}.
  {label,381}.
    {test,is_list,{f,380},[{x,0}]}.
    {allocate,1,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1067}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{literal,"core_pp"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1068}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",1069}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,382},[{x,0},{atom,ok}]}.
    {line,[{location,"compile_SUITE.erl",1071}]}.
    {call,0,{f,732}}. % get_unique_beam_files/0
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {line,[{location,"compile_SUITE.erl",1075}]}.
    {call,1,{f,891}}. % '-core_pp/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,{t_list,{t_tuple,2,true,#{}},nil}}]}}.
    {test_heap,{alloc,[{words,1},{floats,0},{funs,1}]},1}.
    {make_fun3,{f,889},0,0,{x,1},{list,[{y,0}]}}.
    {'%',{var_info,{x,1},[{fun_type,{t_atom,[error,ok]}}]}}.
    {swap,{x,0},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1076}]}.
    {call_ext_last,2,{extfunc,test_lib,p_run,2},1}.
  {label,382}.
    {line,[{location,"compile_SUITE.erl",1069}]}.
    {badmatch,{x,0}}.


{function, do_core_pp, 2, 384}.
  {label,383}.
    {line,[{location,"compile_SUITE.erl",1078}]}.
    {func_info,{atom,compile_SUITE},{atom,do_core_pp},2}.
  {label,384}.
    {test,is_tuple,{f,383},[{x,0}]}.
    {test,test_arity,{f,383},[{x,0},2]}.
    {allocate,4,2}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {get_tuple_element,{x,0},0,{y,2}}.
    {'try',{y,3},{f,385}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1080}]}.
    {call,3,{f,388}}. % do_core_pp_1/3
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {try_end,{y,3}}.
    {deallocate,4}.
    return.
  {label,385}.
    {try_case,{y,3}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {move,{x,2},{x,0}}.
    {test,is_eq_exact,
          {f,386},
          [{tr,{y,1},{t_atom,[error,exit,throw]}},{atom,throw}]}.
    {test,is_tagged_tuple,{f,386},[{y,0},2,{atom,error}]}.
    {test_heap,4,0}.
    {get_tuple_element,{y,0},1,{x,0}}.
    {put_list,{y,2},nil,{x,1}}.
    {put_list,{x,0},{x,1},{x,1}}.
    {trim,4,0}.
    {move,{literal,"*** compilation failure '~p' for module ~s\n"},{x,0}}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1083}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,386}.
    build_stacktrace.
    {test_heap,8,1}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{y,0},{x,0},{x,0}}.
    {put_list,{y,1},{x,0},{x,0}}.
    {put_list,{y,2},{x,0},{x,1}}.
    {trim,4,0}.
    {move,{literal,"~p: ~p ~p\n~p\n"},{x,0}}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1087}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.


{function, do_core_pp_1, 3, 388}.
  {label,387}.
    {line,[{location,"compile_SUITE.erl",1091}]}.
    {func_info,{atom,compile_SUITE},{atom,do_core_pp_1},3}.
  {label,388}.
    {allocate,3,3}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{x,0}}.
    {move,{literal,[to_core]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1092}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,392},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {test,is_eq_exact,{f,392},[{x,1},{y,2}]}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1093}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{literal,".core"},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",1094}]}.
    {call_ext,1,{extfunc,core_pp,format,1}}.
    {line,[{location,"compile_SUITE.erl",1095}]}.
    {call_ext,1,{extfunc,unicode,characters_to_binary,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_ext,2,{extfunc,file,write_file,2}}.
    {test,is_eq_exact,{f,391},[{x,0},{atom,ok}]}.
    {move,{literal,[report_errors,from_core,no_copt,to_core,binary]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1098}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,389},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {test,is_eq_exact,{f,389},[{x,1},{y,2}]}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",1102}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,390},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,1}}.
    {move,{literal,[clint,ssalint,from_core,binary]},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1105}]}.
    {call,3,{f,394}}. % compile_forms/3
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{y,0},{x,1}}.
    {move,{literal,[clint,ssalint,from_core,no_copt,binary]},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,394},2}. % compile_forms/3
  {label,389}.
    {test_heap,3,1}.
    {put_tuple2,{x,1},{list,[{atom,error},{x,0}]}}.
    {move,nil,{x,2}}.
    {move,{atom,throw},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1100}]}.
    {call_ext_last,3,{extfunc,erlang,raise,3},3}.
  {label,390}.
    {line,[{location,"compile_SUITE.erl",1102}]}.
    {badmatch,{x,0}}.
  {label,391}.
    {line,[{location,"compile_SUITE.erl",1095}]}.
    {badmatch,{x,0}}.
  {label,392}.
    {line,[{location,"compile_SUITE.erl",1092}]}.
    {badmatch,{x,0}}.


{function, compile_forms, 3, 394}.
  {label,393}.
    {line,[{location,"compile_SUITE.erl",1118}]}.
    {func_info,{atom,compile_SUITE},{atom,compile_forms},3}.
  {label,394}.
    {'%',
        {var_info,
            {x,2},
            [{type,
                 {t_cons,
                     {t_atom,[binary,clint,from_core,no_copt,ssalint]},
                     nil}}]}}.
    {allocate_heap,1,2,3}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,0}}.
    {put_list,{atom,report_errors},{x,2},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1119}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,395},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,395},[{x,1},{y,0}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,395}.
    {test_heap,3,1}.
    {put_tuple2,{x,1},{list,[{atom,error},{x,0}]}}.
    {move,nil,{x,2}}.
    {move,{atom,throw},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1121}]}.
    {call_ext_last,3,{extfunc,erlang,raise,3},1}.


{function, core_roundtrip, 1, 397}.
  {label,396}.
    {line,[{location,"compile_SUITE.erl",1126}]}.
    {func_info,{atom,compile_SUITE},{atom,core_roundtrip},1}.
  {label,397}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1127}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{literal,"core_roundtrip"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1128}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"compile_SUITE.erl",1129}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,401},[{x,0},{atom,ok}]}.
    {line,[{location,"compile_SUITE.erl",1131}]}.
    {call,0,{f,732}}. % get_unique_beam_files/0
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,{alloc,[{words,1},{floats,0},{funs,1}]},1}.
    {make_fun3,{f,887},0,0,{y,1},{list,[{y,1}]}}.
    {'%',{var_info,{y,1},[{fun_type,{t_atom,[error,ok]}}]}}.
    {move,{x,0},{y,0}}.
    {move,{atom,wordsize},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1134}]}.
    {call_ext,1,{extfunc,erlang,system_info,1}}.
    {select_val,{x,0},
                {f,400},
                {list,[{integer,4},{f,399},{integer,8},{f,398}]}}.
  {label,398}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1140}]}.
    {call_ext_last,2,{extfunc,test_lib,p_run,2},2}.
  {label,399}.
    {move,{y,0},{x,1}}.
    {move,{integer,1},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1138}]}.
    {call_ext_last,3,{extfunc,test_lib,p_run,3},2}.
  {label,400}.
    {line,[{location,"compile_SUITE.erl",1134}]}.
    {case_end,{x,0}}.
  {label,401}.
    {line,[{location,"compile_SUITE.erl",1129}]}.
    {badmatch,{x,0}}.


{function, do_core_roundtrip, 2, 403}.
  {label,402}.
    {line,[{location,"compile_SUITE.erl",1143}]}.
    {func_info,{atom,compile_SUITE},{atom,do_core_roundtrip},2}.
  {label,403}.
    {allocate,4,2}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {'try',{y,3},{f,404}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1146}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,406},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tuple,{f,406},[{x,1}]}.
    {test,test_arity,{f,406},[{x,1},2]}.
    {get_tuple_element,{x,1},1,{x,2}}.
    {test,is_nonempty_list,{f,406},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,2}}.
    {test,is_tagged_tuple,{f,406},[{x,3},2,{atom,abstract_code}]}.
    {get_tuple_element,{x,3},1,{x,3}}.
    {test,is_tagged_tuple,{f,406},[{x,3},2,{atom,raw_abstract_v1}]}.
    {test,is_nil,{f,406},[{x,2}]}.
    {get_tuple_element,{x,3},1,{x,0}}.
    {get_tuple_element,{x,1},0,{x,1}}.
    {move,{y,1},{x,2}}.
    {swap,{x,0},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1147}]}.
    {call,3,{f,408}}. % do_core_roundtrip_1/3
    {'%',{var_info,{x,0},[{type,{t_atom,[error,ok]}}]}}.
    {try_end,{y,3}}.
    {deallocate,4}.
    return.
  {label,404}.
    {try_case,{y,3}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {move,{x,2},{x,0}}.
    {test,is_eq_exact,
          {f,405},
          [{tr,{y,1},{t_atom,[error,exit,throw]}},{atom,throw}]}.
    {test,is_tagged_tuple,{f,405},[{y,0},2,{atom,error}]}.
    {test_heap,4,0}.
    {get_tuple_element,{y,0},1,{x,0}}.
    {put_list,{y,2},nil,{x,1}}.
    {put_list,{x,0},{x,1},{x,1}}.
    {trim,4,0}.
    {move,{literal,"*** compilation failure '~p' for file ~s\n"},{x,0}}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1150}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,405}.
    build_stacktrace.
    {test_heap,8,1}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{y,0},{x,0},{x,0}}.
    {put_list,{y,1},{x,0},{x,0}}.
    {put_list,{y,2},{x,0},{x,1}}.
    {trim,4,0}.
    {move,{literal,"~p: ~p ~p\n~p\n"},{x,0}}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",1154}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,406}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1145}]}.
    {badmatch,{x,0}}.


{function, do_core_roundtrip_1, 3, 408}.
  {label,407}.
    {line,[{location,"compile_SUITE.erl",1158}]}.
    {func_info,{atom,compile_SUITE},{atom,do_core_roundtrip_1},3}.
  {label,408}.
    {allocate,4,3}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,3}}.
    {move,{x,1},{x,0}}.
    {move,{literal,[to_core0]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1159}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,411},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,411},[{x,1},{y,3}]}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1160}]}.
    {call,3,{f,413}}. % do_core_roundtrip_2/3
    {'%',{var_info,{x,0},[{type,{t_atom,[error,ok]}}]}}.
    {move,{y,0},{x,0}}.
    {trim,1,3}.
    {line,[{location,"compile_SUITE.erl",1164}]}.
    {call_ext,1,{extfunc,cerl_trees,label,1}}.
    {test,is_tuple,{f,410},[{x,0}]}.
    {test,test_arity,{f,410},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1165}]}.
    {call,3,{f,413}}. % do_core_roundtrip_2/3
    {'%',{var_info,{x,0},[{type,{t_atom,[error,ok]}}]}}.
    {move,{literal,[inline,to_core]},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",1169}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,409},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,409},[{x,1},{y,1}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,413},2}. % do_core_roundtrip_2/3
  {label,409}.
    {badmatch,{x,0}}.
  {label,410}.
    {line,[{location,"compile_SUITE.erl",1164}]}.
    {badmatch,{x,0}}.
  {label,411}.
    {line,[{location,"compile_SUITE.erl",1159}]}.
    {badmatch,{x,0}}.


{function, do_core_roundtrip_2, 3, 413}.
  {label,412}.
    {line,[{location,"compile_SUITE.erl",1172}]}.
    {func_info,{atom,compile_SUITE},{atom,do_core_roundtrip_2},3}.
  {label,413}.
    {allocate,3,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"compile_SUITE.erl",1173}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{literal,".core"},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1174}]}.
    {call_ext,1,{extfunc,core_pp,format_all,1}}.
    {line,[{location,"compile_SUITE.erl",1175}]}.
    {call_ext,1,{extfunc,unicode,characters_to_binary,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext,2,{extfunc,file,write_file,2}}.
    {test,is_eq_exact,{f,417},[{x,0},{atom,ok}]}.
    {move,{literal,[report_errors,from_core,no_copt,to_core,binary]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1178}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,415},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,415},[{x,1},{y,2}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {line,[{location,"compile_SUITE.erl",1183}]}.
    {call,1,{f,419}}. % undo_var_translation/1
    {swap,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1184}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,416},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",1186}]}.
    {call,3,{f,421}}. % cmp_core/3
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,414},[{x,0},{atom,true}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,3}.
    return.
  {label,414}.
    {move,{atom,error},{x,0}}.
    {deallocate,3}.
    return.
  {label,415}.
    {test_heap,3,1}.
    {put_tuple2,{x,1},{list,[{atom,error},{x,0}]}}.
    {move,nil,{x,2}}.
    {move,{atom,throw},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1181}]}.
    {call_ext_last,3,{extfunc,erlang,raise,3},3}.
  {label,416}.
    {line,[{location,"compile_SUITE.erl",1184}]}.
    {badmatch,{x,0}}.
  {label,417}.
    {line,[{location,"compile_SUITE.erl",1175}]}.
    {badmatch,{x,0}}.


{function, undo_var_translation, 1, 419}.
  {label,418}.
    {line,[{location,"compile_SUITE.erl",1191}]}.
    {func_info,{atom,compile_SUITE},{atom,undo_var_translation},1}.
  {label,419}.
    {test_heap,{alloc,[{words,0},{floats,0},{funs,1}]},1}.
    {move,{x,0},{x,1}}.
    {make_fun3,{f,879},0,0,{x,0},{list,[]}}.
    {line,[{location,"compile_SUITE.erl",1212}]}.
    {call_ext_only,2,{extfunc,cerl_trees,map,2}}.


{function, cmp_core, 3, 421}.
  {label,420}.
    {line,[{location,"compile_SUITE.erl",1214}]}.
    {func_info,{atom,compile_SUITE},{atom,cmp_core},3}.
  {label,421}.
    {test,is_eq_exact,{f,422},[{x,1},{x,0}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,422}.
    {allocate,2,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {line,[{location,"compile_SUITE.erl",1217}]}.
    {call_ext,1,{extfunc,cerl,module_defs,1}}.
    {swap,{y,1},{x,0}}.
    {call_ext,1,{extfunc,cerl,module_defs,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,424},2}. % cmp_core_fs/3


{function, cmp_core_fs, 3, 424}.
  {label,423}.
    {line,[{location,"compile_SUITE.erl",1219}]}.
    {func_info,{atom,compile_SUITE},{atom,cmp_core_fs},3}.
  {label,424}.
    {test,is_nonempty_list,{f,426},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,0}}.
    {test,is_nonempty_list,{f,427},[{x,1}]}.
    {allocate,3,4}.
    {move,{x,0},{y,1}}.
    {move,{x,2},{y,2}}.
    {get_list,{x,1},{x,1},{y,0}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1220}]}.
    {call,3,{f,429}}. % cmp_core_f/3
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,425},[{x,0},{atom,true}]}.
    {move,{y,0},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,424},3}. % cmp_core_fs/3
  {label,425}.
    {move,{atom,false},{x,0}}.
    {deallocate,3}.
    return.
  {label,426}.
    {test,is_nil,{f,427},[{x,0}]}.
    {bif,'=:=',{f,0},[{x,1},nil],{x,0}}.
    return.
  {label,427}.
    {move,{atom,false},{x,0}}.
    return.


{function, cmp_core_f, 3, 429}.
  {label,428}.
    {line,[{location,"compile_SUITE.erl",1226}]}.
    {func_info,{atom,compile_SUITE},{atom,cmp_core_f},3}.
  {label,429}.
    {test,is_eq_exact,{f,430},[{x,1},{x,0}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,430}.
    {test,is_tuple,{f,428},[{x,0}]}.
    {test,test_arity,{f,428},[{x,0},2]}.
    {test,is_tuple,{f,428},[{x,1}]}.
    {test,test_arity,{f,428},[{x,1},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,1},0,{x,4}}.
    {test,is_eq_exact,{f,428},[{x,4},{x,3}]}.
    {allocate,3,4}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1229}]}.
    {call,2,{f,433}}. % diff/2
    {test,is_eq_exact,{f,431},[{x,0},{y,0}]}.
    {move,{atom,true},{x,0}}.
    {deallocate,3}.
    return.
  {label,431}.
    {test_heap,6,1}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{y,1},{x,0},{x,0}}.
    {put_list,{y,2},{x,0},{x,1}}.
    {trim,3,0}.
    {move,{literal,"~p ~p:\n~p\n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1233}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,false},{x,0}}.
    {deallocate,0}.
    return.


{function, diff, 2, 433}.
  {label,432}.
    {line,[{location,"compile_SUITE.erl",1237}]}.
    {func_info,{atom,compile_SUITE},{atom,diff},2}.
  {label,433}.
    {test,is_eq_exact,{f,434},[{x,1},{x,0}]}.
    return.
  {label,434}.
    {test,is_nonempty_list,{f,435},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_nonempty_list,{f,435},[{x,1}]}.
    {allocate,2,4}.
    {move,{x,3},{y,1}}.
    {get_list,{x,1},{x,1},{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1240}]}.
    {call,2,{f,433}}. % diff/2
    {swap,{y,1},{x,0}}.
    {move,{y,0},{x,1}}.
    {trim,1,1}.
    {call,2,{f,433}}. % diff/2
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,435}.
    {bif,tuple_size,{f,444},[{x,0}],{x,2}}.
    {bif,tuple_size,{f,444},[{x,1}],{x,3}}.
    {test,is_eq_exact,
          {f,444},
          [{tr,{x,2},{t_integer,{0,16777215}}},
           {tr,{x,3},{t_integer,{0,16777215}}}]}.
    {allocate,2,2}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"compile_SUITE.erl",1242}]}.
    {call_ext,1,{extfunc,cerl,is_c_var,1}}.
    {select_val,{x,0},
                {f,443},
                {list,[{atom,false},{f,438},{atom,true},{f,436}]}}.
  {label,436}.
    {move,{y,0},{x,0}}.
    {call_ext,1,{extfunc,cerl,is_c_var,1}}.
    {select_val,{x,0},
                {f,445},
                {list,[{atom,false},{f,438},{atom,true},{f,437}]}}.
  {label,437}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,448},2}. % diff_var/2
  {label,438}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1246}]}.
    {call_ext,1,{extfunc,cerl,is_c_map,1}}.
    {select_val,{x,0},
                {f,442},
                {list,[{atom,false},{f,441},{atom,true},{f,439}]}}.
  {label,439}.
    {move,{y,0},{x,0}}.
    {call_ext,1,{extfunc,cerl,is_c_map,1}}.
    {select_val,{x,0},
                {f,446},
                {list,[{atom,false},{f,441},{atom,true},{f,440}]}}.
  {label,440}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,452},2}. % diff_map/2
  {label,441}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,456},2}. % diff_tuple/2
  {label,442}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,badarg},{x,0}]}}.
    {call_ext_last,1,{extfunc,erlang,error,1},2}.
  {label,443}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,badarg},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",1242}]}.
    {call_ext_last,1,{extfunc,erlang,error,1},2}.
  {label,444}.
    {test_heap,4,2}.
    {put_tuple2,{x,0},{list,[{atom,'DIFF'},{x,0},{x,1}]}}.
    return.
  {label,445}.
    {case_end,{x,0}}.
  {label,446}.
    {line,[{location,"compile_SUITE.erl",1246}]}.
    {case_end,{x,0}}.


{function, diff_var, 2, 448}.
  {label,447}.
    {line,[{location,"compile_SUITE.erl",1256}]}.
    {func_info,{atom,compile_SUITE},{atom,diff_var},2}.
  {label,448}.
    {'%',{var_info,{x,0},[{type,{t_tuple,0,false,#{}}}]}}.
    {'%',{var_info,{x,1},[{type,{t_tuple,0,false,#{}}}]}}.
    {allocate,3,2}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"compile_SUITE.erl",1257}]}.
    {call_ext,1,{extfunc,cerl,var_name,1}}.
    {swap,{y,1},{x,0}}.
    {call_ext,1,{extfunc,cerl,var_name,1}}.
    {move,{x,0},{y,0}}.
    {test,is_ne_exact,{f,449},[{x,0},{y,1}]}.
    {test,is_integer,{f,450},[{y,1}]}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1264}]}.
    {call_ext,1,{extfunc,erlang,integer_to_list,1}}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {test,is_eq_exact,{f,450},[{tr,{x,0},{t_atom,any}},{y,0}]}.
  {label,449}.
    {move,{y,2},{x,0}}.
    {deallocate,3}.
    return.
  {label,450}.
    {test_heap,4,0}.
    {put_tuple2,{x,1},{list,[{atom,'DIFF'},{y,1},{y,0}]}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1268}]}.
    {call_ext_last,2,{extfunc,cerl,update_c_var,2},3}.


{function, diff_map, 2, 452}.
  {label,451}.
    {line,[{location,"compile_SUITE.erl",1276}]}.
    {func_info,{atom,compile_SUITE},{atom,diff_map},2}.
  {label,452}.
    {'%',{var_info,{x,0},[{type,{t_tuple,0,false,#{}}}]}}.
    {'%',{var_info,{x,1},[{type,{t_tuple,0,false,#{}}}]}}.
    {test,is_eq_exact,
          {f,453},
          [{tr,{x,1},{t_tuple,0,false,#{}}},{tr,{x,0},{t_tuple,0,false,#{}}}]}.
    return.
  {label,453}.
    {allocate,3,2}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"compile_SUITE.erl",1279}]}.
    {call_ext,1,{extfunc,cerl,get_ann,1}}.
    {move,{x,0},{y,0}}.
    {move,{y,1},{x,0}}.
    {call_ext,1,{extfunc,cerl,get_ann,1}}.
    {test,is_eq_exact,{f,454},[{y,0},{x,0}]}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1283}]}.
    {call,1,{f,458}}. % remove_compiler_gen/1
    {move,{x,0},{y,0}}.
    {move,{y,1},{x,0}}.
    {call,1,{f,458}}. % remove_compiler_gen/1
    {test,is_eq_exact,{f,454},[{y,0},{x,0}]}.
    {move,{y,2},{x,0}}.
    {deallocate,3}.
    return.
  {label,454}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,2,{f,456},3}. % diff_tuple/2


{function, diff_tuple, 2, 456}.
  {label,455}.
    {line,[{location,"compile_SUITE.erl",1291}]}.
    {func_info,{atom,compile_SUITE},{atom,diff_tuple},2}.
  {label,456}.
    {'%',{var_info,{x,0},[{type,{t_tuple,0,false,#{}}}]}}.
    {'%',{var_info,{x,1},[{type,{t_tuple,0,false,#{}}}]}}.
    {allocate,1,2}.
    {move,{x,1},{y,0}}.
    {line,[{location,"compile_SUITE.erl",1292}]}.
    {call_ext,1,{extfunc,erlang,tuple_to_list,1}}.
    {swap,{y,0},{x,0}}.
    {call_ext,1,{extfunc,erlang,tuple_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {call,2,{f,433}}. % diff/2
    {line,[{location,"compile_SUITE.erl",1293}]}.
    {call_ext_last,1,{extfunc,erlang,list_to_tuple,1},0}.


{function, remove_compiler_gen, 1, 458}.
  {label,457}.
    {line,[{location,"compile_SUITE.erl",1295}]}.
    {func_info,{atom,compile_SUITE},{atom,remove_compiler_gen},1}.
  {label,458}.
    {'%',{var_info,{x,0},[{type,{t_tuple,0,false,#{}}}]}}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"compile_SUITE.erl",1296}]}.
    {call_ext,1,{extfunc,cerl,map_arg,1}}.
    {move,nil,{x,1}}.
    {line,[{location,"compile_SUITE.erl",1297}]}.
    {call_ext,2,{extfunc,cerl,set_ann,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1298}]}.
    {call_ext,1,{extfunc,cerl,map_es,1}}.
    {line,[{location,"compile_SUITE.erl",1299}]}.
    {call,1,{f,875}}. % '-remove_compiler_gen/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1300}]}.
    {call_ext_last,3,{extfunc,cerl,update_c_map,3},2}.


{function, remove_compiler_gen_1, 1, 460}.
  {label,459}.
    {line,[{location,"compile_SUITE.erl",1302}]}.
    {func_info,{atom,compile_SUITE},{atom,remove_compiler_gen_1},1}.
  {label,460}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"compile_SUITE.erl",1303}]}.
    {call_ext,1,{extfunc,cerl,map_pair_op,1}}.
    {move,nil,{x,1}}.
    {line,[{location,"compile_SUITE.erl",1304}]}.
    {call_ext,2,{extfunc,cerl,set_ann,2}}.
    {move,{x,0},{y,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1305}]}.
    {call_ext,1,{extfunc,cerl,map_pair_key,1}}.
    {call,1,{f,462}}. % map_var/1
    {move,{x,0},{y,0}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1306}]}.
    {call_ext,1,{extfunc,cerl,map_pair_val,1}}.
    {call,1,{f,462}}. % map_var/1
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{x,0},{x,3}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1307}]}.
    {call_ext_last,4,{extfunc,cerl,update_c_map_pair,4},3}.


{function, map_var, 1, 462}.
  {label,461}.
    {line,[{location,"compile_SUITE.erl",1309}]}.
    {func_info,{atom,compile_SUITE},{atom,map_var},1}.
  {label,462}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",1310}]}.
    {call_ext,1,{extfunc,cerl,is_c_var,1}}.
    {select_val,{x,0},
                {f,466},
                {list,[{atom,false},{f,465},{atom,true},{f,463}]}}.
  {label,463}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1312}]}.
    {call_ext,1,{extfunc,cerl,var_name,1}}.
    {test,is_atom,{f,465},[{x,0}]}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1314}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {'try',{y,1},{f,464}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1315}]}.
    {call_ext,1,{extfunc,erlang,list_to_integer,1}}.
    {try_end,{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1317}]}.
    {call_ext_last,2,{extfunc,cerl,update_c_var,2},2}.
  {label,464}.
    {try_case,{y,1}}.
    {test,is_ne_exact,
          {f,465},
          [{tr,{x,0},{t_atom,[error,exit,throw]}},{atom,error}]}.
    {bif,raise,{f,0},[{x,2},{x,1}],{x,0}}.
  {label,465}.
    {move,{y,0},{x,0}}.
    {deallocate,2}.
    return.
  {label,466}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1310}]}.
    {case_end,{x,0}}.


{function, asm, 1, 468}.
  {label,467}.
    {line,[{location,"compile_SUITE.erl",1332}]}.
    {func_info,{atom,compile_SUITE},{atom,asm},1}.
  {label,468}.
    {test,is_list,{f,467},[{x,0}]}.
    {allocate,1,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1333}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{literal,"asm"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1334}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",1335}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,469},[{x,0},{atom,ok}]}.
    {line,[{location,"compile_SUITE.erl",1337}]}.
    {call,0,{f,732}}. % get_unique_beam_files/0
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,{alloc,[{words,1},{floats,0},{funs,1}]},1}.
    {make_fun3,{f,873},0,0,{x,1},{list,[{y,0}]}}.
    {'%',{var_info,{x,1},[{fun_type,{t_atom,[error,ok]}}]}}.
    {swap,{x,0},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1338}]}.
    {call_ext_last,2,{extfunc,test_lib,p_run,2},1}.
  {label,469}.
    {line,[{location,"compile_SUITE.erl",1335}]}.
    {badmatch,{x,0}}.


{function, do_asm, 2, 471}.
  {label,470}.
    {line,[{location,"compile_SUITE.erl",1342}]}.
    {func_info,{atom,compile_SUITE},{atom,do_asm},2}.
  {label,471}.
    {allocate,6,2}.
    {init_yregs,{list,[{y,0},{y,1},{y,2},{y,3},{y,5}]}}.
    {move,{x,1},{y,4}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1344}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,479},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tuple,{f,479},[{x,1}]}.
    {test,test_arity,{f,479},[{x,1},2]}.
    {get_tuple_element,{x,1},1,{x,2}}.
    {test,is_nonempty_list,{f,479},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,2}}.
    {test,is_tagged_tuple,{f,479},[{x,3},2,{atom,abstract_code}]}.
    {get_tuple_element,{x,3},1,{y,3}}.
    {test,is_tagged_tuple,{f,479},[{y,3},2,{atom,raw_abstract_v1}]}.
    {test,is_nil,{f,479},[{x,2}]}.
    {get_tuple_element,{x,1},0,{y,2}}.
    {'try',{y,5},{f,474}}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1346}]}.
    {call_ext,1,{extfunc,test_lib,opt_opts,1}}.
    {move,{x,0},{y,1}}.
    {test_heap,2,0}.
    {put_list,{atom,'S'},{y,1},{x,1}}.
    {get_tuple_element,{y,3},1,{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1347}]}.
    {call_ext,2,{extfunc,compile,forms,2}}.
    {test,is_tagged_tuple,{f,478},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {get_tuple_element,{x,0},2,{y,3}}.
    {test,is_eq_exact,{f,478},[{x,1},{y,2}]}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1348}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{literal,".S"},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,4},{x,0}}.
    {init_yregs,{list,[{y,4}]}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,4}}.
    {move,{literal,[write,{encoding,utf8}]},{x,1}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1349}]}.
    {call_ext,2,{extfunc,file,open,2}}.
    {test,is_tagged_tuple,{f,477},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {move,{y,3},{x,1}}.
    {init_yregs,{list,[{y,3}]}}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1350}]}.
    {call_ext,2,{extfunc,beam_listing,module,2}}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1351}]}.
    {call_ext,1,{extfunc,file,close,1}}.
    {test,is_eq_exact,{f,476},[{x,0},{atom,ok}]}.
    {test_heap,6,0}.
    {put_list,{atom,report},{y,1},{x,0}}.
    {put_list,{atom,binary},{x,0},{x,0}}.
    {put_list,{atom,from_asm},{x,0},{x,1}}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{y,4},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1352}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,472},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,472},[{x,1},{y,2}]}.
    {move,{y,4},{x,0}}.
    {init_yregs,{list,[{y,4}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1354}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,475},[{x,0},{atom,ok}]}.
    {jump,{f,473}}.
  {label,472}.
    {test_heap,4,1}.
    {put_list,{y,4},nil,{x,1}}.
    {put_list,{x,0},{x,1},{x,1}}.
    {init_yregs,{list,[{y,4}]}}.
    {move,{literal,"*** failure '~p' for ~s\n"},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1356}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
  {label,473}.
    {try_end,{y,5}}.
    {deallocate,6}.
    return.
  {label,474}.
    {try_case,{y,5}}.
    {move,{x,1},{y,3}}.
    {move,{x,0},{y,4}}.
    {move,{x,2},{x,0}}.
    build_stacktrace.
    {test_heap,8,1}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{y,3},{x,0},{x,0}}.
    {put_list,{y,4},{x,0},{x,0}}.
    {put_list,{y,2},{x,0},{x,1}}.
    {trim,6,0}.
    {move,{literal,"~p: ~p ~p\n~p\n"},{x,0}}.
    {line,[{scope,[1,2,3]},{location,"compile_SUITE.erl",1361}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,475}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1354}]}.
    {badmatch,{x,0}}.
  {label,476}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1351}]}.
    {badmatch,{x,0}}.
  {label,477}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1349}]}.
    {badmatch,{x,0}}.
  {label,478}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1347}]}.
    {badmatch,{x,0}}.
  {label,479}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1343}]}.
    {badmatch,{x,0}}.


{function, asm_labels, 1, 481}.
  {label,480}.
    {line,[{location,"compile_SUITE.erl",1370}]}.
    {func_info,{atom,compile_SUITE},{atom,asm_labels},1}.
  {label,481}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{y,2}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1371}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,2},{x,1}}.
    {move,{x,0},{y,2}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1372}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {swap,{y,2},{x,0}}.
    {move,{literal,"asm_labels.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1373}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {swap,{y,2},{x,0}}.
    {move,{literal,"asm_labels"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1374}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{literal,"asm_labels.S"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1375}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1376}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,488},[{x,0},{atom,ok}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,1}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,'S'},{x,0},{x,1}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",1377}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,487},[{x,0},{literal,{ok,asm_labels}}]}.
    {move,{y,0},{x,0}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",1378}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {test,is_tagged_tuple,{f,486},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {move,{literal,"({call,.+,{f,.+}}\\. % foo/1)"},{x,1}}.
    {move,{literal,[global,multiline,{capture,all_but_first,list}]},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1380}]}.
    {call_ext,3,{extfunc,re,run,3}}.
    {test,is_tagged_tuple,{f,485},[{x,0},2,{atom,match}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,485},[{x,1}]}.
    {get_tl,{x,1},{x,1}}.
    {test,is_nil,{f,485},[{x,1}]}.
    {move,{literal,"({call_only,.+,{f,.+}}\\. % foo/1)"},{x,1}}.
    {move,{literal,[global,multiline,{capture,all_but_first,list}]},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1381}]}.
    {call_ext,3,{extfunc,re,run,3}}.
    {test,is_tagged_tuple,{f,484},[{x,0},2,{atom,match}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,484},[{x,1}]}.
    {get_tl,{x,1},{x,1}}.
    {test,is_nil,{f,484},[{x,1}]}.
    {move,{literal,"({call_last,.+,{f,.+},.+}\\. % bar/1)"},{x,1}}.
    {move,{literal,[global,multiline,{capture,all_but_first,list}]},{x,2}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",1382}]}.
    {call_ext,3,{extfunc,re,run,3}}.
    {test,is_tagged_tuple,{f,483},[{x,0},2,{atom,match}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,483},[{x,1}]}.
    {get_tl,{x,1},{x,1}}.
    {test,is_nil,{f,483},[{x,1}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",1383}]}.
    {call_ext,1,{extfunc,file,del_dir_r,1}}.
    {test,is_eq_exact,{f,482},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,482}.
    {badmatch,{x,0}}.
  {label,483}.
    {line,[{location,"compile_SUITE.erl",1382}]}.
    {badmatch,{x,0}}.
  {label,484}.
    {line,[{location,"compile_SUITE.erl",1381}]}.
    {badmatch,{x,0}}.
  {label,485}.
    {line,[{location,"compile_SUITE.erl",1380}]}.
    {badmatch,{x,0}}.
  {label,486}.
    {line,[{location,"compile_SUITE.erl",1378}]}.
    {badmatch,{x,0}}.
  {label,487}.
    {line,[{location,"compile_SUITE.erl",1377}]}.
    {badmatch,{x,0}}.
  {label,488}.
    {line,[{location,"compile_SUITE.erl",1376}]}.
    {badmatch,{x,0}}.


{function, sys_pre_attributes, 1, 490}.
  {label,489}.
    {line,[{location,"compile_SUITE.erl",1385}]}.
    {func_info,{atom,compile_SUITE},{atom,sys_pre_attributes},1}.
  {label,490}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1386}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{literal,"attributes.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1387}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{literal,[{attribute,replace,replaced,42},
                    {attribute,replace,replace_nonexisting,new},
                    {attribute,delete,deleted},
                    {attribute,insert,inserted,"value"},
                    binary,report,verbose,
                    {parse_transform,sys_pre_attributes}]},
          {x,1}}.
    {line,[{location,"compile_SUITE.erl",1395}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,500},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,500},[{x,1},{atom,attributes}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{atom,attributes},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1397}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {move,{atom,attributes},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1398}]}.
    {call_ext,1,{extfunc,attributes,module_info,1}}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{literal,"~p"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1399}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{integer,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{atom,inserted},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1400}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_eq_exact,
          {f,499},
          [{tr,{x,0},
               {t_union,{t_atom,[false]},
                        none,none,
                        {t_tuple,1,false,#{1 => {t_atom,[inserted]}}},
                        none}},
           {literal,{inserted,"value"}}]}.
    {move,{integer,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{atom,replaced},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1401}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_eq_exact,
          {f,498},
          [{tr,{x,0},
               {t_union,{t_atom,[false]},
                        none,none,
                        {t_tuple,1,false,#{1 => {t_atom,[replaced]}}},
                        none}},
           {literal,{replaced,"*"}}]}.
    {move,{integer,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{atom,replace_nonexisting},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1402}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_eq_exact,
          {f,497},
          [{tr,{x,0},
               {t_union,{t_atom,[false]},
                        none,none,
                        {t_tuple,1,false,
                                 #{1 => {t_atom,[replace_nonexisting]}}},
                        none}},
           {literal,{replace_nonexisting,[new]}}]}.
    {move,{integer,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{atom,deleted},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1403}]}.
    {call_ext,3,{extfunc,lists,keymember,3}}.
    {test,is_eq_exact,{f,491},[{x,0},{atom,true}]}.
    {badmatch,{atom,true}}.
  {label,491}.
    {move,{literal,[{attribute,insert,inserted,"value"},
                    binary,report,verbose,
                    {parse_transform,sys_pre_attributes}]},
          {x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1406}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,496},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,496},[{x,1},{atom,attributes}]}.
    {move,{literal,[binary,report,{parse_transform,sys_pre_attributes}]},
          {x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1407}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,495},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,495},[{x,1},{atom,attributes}]}.
    {move,{literal,[{attribute,delete,deleted},
                    binary,report,verbose,
                    {parse_transform,sys_pre_attributes}]},
          {x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1408}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,494},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,494},[{x,1},{atom,attributes}]}.
    {move,{literal,[{attribute,replace,replaced,42},
                    binary,report,verbose,
                    {parse_transform,sys_pre_attributes}]},
          {x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1409}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,493},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,493},[{x,1},{atom,attributes}]}.
    {move,{literal,[{attribute,replace,replaced,42},
                    {attribute,replace,replace_nonexisting,new},
                    {attribute,delete,deleted},
                    {attribute,insert,inserted,"value"},
                    binary,
                    {parse_transform,sys_pre_attributes}]},
          {x,1}}.
    {move,{y,1},{x,0}}.
    {trim,2,0}.
    {line,[{location,"compile_SUITE.erl",1411}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,492},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,492},[{x,1},{atom,attributes}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,492}.
    {badmatch,{x,0}}.
  {label,493}.
    {line,[{location,"compile_SUITE.erl",1409}]}.
    {badmatch,{x,0}}.
  {label,494}.
    {line,[{location,"compile_SUITE.erl",1408}]}.
    {badmatch,{x,0}}.
  {label,495}.
    {line,[{location,"compile_SUITE.erl",1407}]}.
    {badmatch,{x,0}}.
  {label,496}.
    {line,[{location,"compile_SUITE.erl",1406}]}.
    {badmatch,{x,0}}.
  {label,497}.
    {line,[{location,"compile_SUITE.erl",1402}]}.
    {badmatch,{x,0}}.
  {label,498}.
    {line,[{location,"compile_SUITE.erl",1401}]}.
    {badmatch,{x,0}}.
  {label,499}.
    {line,[{location,"compile_SUITE.erl",1400}]}.
    {badmatch,{x,0}}.
  {label,500}.
    {line,[{location,"compile_SUITE.erl",1395}]}.
    {badmatch,{x,0}}.


{function, dialyzer, 1, 502}.
  {label,501}.
    {line,[{location,"compile_SUITE.erl",1417}]}.
    {func_info,{atom,compile_SUITE},{atom,dialyzer},1}.
  {label,502}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {move,{x,0},{x,1}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1418}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1419}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,507},[{x,0},{atom,ok}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,0}]}}.
    {put_list,{x,0},{literal,[report_errors]},{y,0}}.
    {put_list,{atom,dialyzer},{y,0},{x,1}}.
    {move,{atom,dialyzer_test},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1422}]}.
    {call_ext,2,{extfunc,c,c,2}}.
    {test,is_tagged_tuple,{f,506},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,506},[{x,1},{atom,dialyzer_test}]}.
    {line,[{location,"compile_SUITE.erl",1423}]}.
    {call_ext,0,{extfunc,dialyzer_test,dialyzer_test,0}}.
    {test,is_eq_exact,{f,505},[{x,0},{literal,[{a,b,c}]}]}.
    {move,{y,0},{x,1}}.
    {trim,1,0}.
    {move,{atom,dialyzer_test},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1426}]}.
    {call_ext,2,{extfunc,c,c,2}}.
    {test,is_tagged_tuple,{f,504},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,504},[{x,1},{atom,dialyzer_test}]}.
    {line,[{location,"compile_SUITE.erl",1427}]}.
    {call_ext,0,{extfunc,dialyzer_test,dialyzer_test,0}}.
    {test,is_eq_exact,{f,503},[{x,0},{literal,[{a,b,c}]}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,503}.
    {badmatch,{x,0}}.
  {label,504}.
    {line,[{location,"compile_SUITE.erl",1426}]}.
    {badmatch,{x,0}}.
  {label,505}.
    {line,[{location,"compile_SUITE.erl",1423}]}.
    {badmatch,{x,0}}.
  {label,506}.
    {line,[{location,"compile_SUITE.erl",1422}]}.
    {badmatch,{x,0}}.
  {label,507}.
    {line,[{location,"compile_SUITE.erl",1419}]}.
    {badmatch,{x,0}}.


{function, warnings, 1, 509}.
  {label,508}.
    {line,[{location,"compile_SUITE.erl",1432}]}.
    {func_info,{atom,compile_SUITE},{atom,warnings},1}.
  {label,509}.
    {allocate,0,0}.
    {move,{literal,".erl"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1433}]}.
    {call,1,{f,734}}. % get_unique_files/1
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,{alloc,[{words,0},{floats,0},{funs,1}]},1}.
    {make_fun3,{f,511},0,0,{x,1},{list,[]}}.
    {'%',{var_info,{x,1},[{fun_type,{t_atom,[error,ok]}}]}}.
    {swap,{x,0},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1434}]}.
    {call_ext_last,2,{extfunc,test_lib,p_run,2},0}.


{function, do_warnings, 1, 511}.
  {label,510}.
    {line,[{location,"compile_SUITE.erl",1436}]}.
    {func_info,{atom,compile_SUITE},{atom,do_warnings},1}.
  {label,511}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {move,{literal,[{feature,maybe_expr,enable},
                    binary,bin_opt_info,recv_opt_info,return]},
          {x,1}}.
    {line,[{location,"compile_SUITE.erl",1438}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,512},[{x,0},4,{atom,ok}]}.
    {get_tuple_element,{x,0},3,{x,0}}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,514},1}. % do_warnings_1/2
  {label,512}.
    {badmatch,{x,0}}.


{function, do_warnings_1, 2, 514}.
  {label,513}.
    {line,[{location,"compile_SUITE.erl",1441}]}.
    {func_info,{atom,compile_SUITE},{atom,do_warnings_1},2}.
  {label,514}.
    {test,is_nonempty_list,{f,517},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_tuple,{f,513},[{x,2}]}.
    {test,test_arity,{f,513},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{x,2}}.
    {test,is_eq_exact,{f,515},[{x,0},{literal,"no_file"}]}.
    {allocate_heap,0,4,3}.
    {put_list,{x,2},nil,{x,0}}.
    {put_list,{x,1},{x,0},{x,1}}.
    {move,{literal,"~s:\nMissing file for warnings: ~p\n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1442}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,515}.
    {allocate,3,4}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,1},{y,2}}.
    {line,[{location,"compile_SUITE.erl",1446}]}.
    {call_ext,1,{extfunc,filename,extension,1}}.
    {test,is_eq_exact,{f,516},[{x,0},{literal,".erl"}]}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,0},{x,0}}.
    {call_last,3,{f,519},3}. % do_warnings_2/3
  {label,516}.
    {test_heap,2,0}.
    {put_list,{y,2},nil,{x,1}}.
    {trim,3,0}.
    {move,{literal,"~s:\nNo .erl extension\n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1450}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,517}.
    {test,is_nil,{f,513},[{x,0}]}.
    {move,{atom,ok},{x,0}}.
    return.


{function, do_warnings_2, 3, 519}.
  {label,518}.
    {line,[{location,"compile_SUITE.erl",1455}]}.
    {func_info,{atom,compile_SUITE},{atom,do_warnings_2},3}.
  {label,519}.
    {test,is_nonempty_list,{f,522},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_tuple,{f,518},[{x,3}]}.
    {test,test_arity,{f,518},[{x,3},3]}.
    {get_tuple_element,{x,3},0,{x,0}}.
    {test,is_integer,{f,520},[{x,0}]}.
    {move,{x,4},{x,0}}.
    {call_only,3,{f,519}}. % do_warnings_2/3
  {label,520}.
    {test,is_tuple,{f,521},[{x,0}]}.
    {test,test_arity,{f,523},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {test,is_integer,{f,523},[{x,3}]}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {test,is_integer,{f,523},[{x,3}]}.
    {move,{x,4},{x,0}}.
    {call_only,3,{f,519}}. % do_warnings_2/3
  {label,521}.
    {test,is_eq_exact,{f,523},[{x,0},{atom,true}]}.
    {allocate_heap,0,4,4}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{x,2},{x,0},{x,1}}.
    {move,{literal,"~s:\nMissing line number: ~p\n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1462}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,522}.
    {test,is_nil,{f,518},[{x,0}]}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {call_only,2,{f,514}}. % do_warnings_1/2
  {label,523}.
    {line,[{location,"compile_SUITE.erl",1456}]}.
    {case_end,{x,0}}.


{function, message_printing, 1, 525}.
  {label,524}.
    {line,[{location,"compile_SUITE.erl",1469}]}.
    {func_info,{atom,compile_SUITE},{atom,message_printing},1}.
  {label,525}.
    {allocate,4,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {move,{x,0},{y,3}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1470}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,2}}.
    {move,{y,3},{x,1}}.
    {init_yregs,{list,[{y,3}]}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1471}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,3}}.
    {move,{y,2},{x,0}}.
    {move,{literal,"bad_enc.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1473}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{literal,[return]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1474}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,540},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,540},[{x,1}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1483}]}.
    {call,1,{f,542}}. % messages/1
    {test,is_eq_exact,
          {f,539},
          [{x,0},
           {literal,[":7:15: cannot parse file, giving up\n%    7| \t    {ok, \"xyz\n%     | \t             ^\n\n",
                     ":7:15: cannot translate from UTF-8\n%    7| \t    {ok, \"xyz\n%     | \t             ^\n\n"]}]}.
    {move,{literal,"col_utf8.erl"},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1485}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{literal,[return]},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1486}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,538},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1490}]}.
    {call,1,{f,542}}. % messages/1
    {test,is_eq_exact,
          {f,537},
          [{x,0},
           {literal,[":5:23: a term is constructed, but never used\n%    5|     B = <<\"xyzåäö\">>,\t<<\"12345\">>,\n%     |                      \t^\n\n"]}]}.
    {move,{literal,"col_lat1.erl"},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1492}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{literal,[return]},{x,1}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1493}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,536},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1497}]}.
    {call,1,{f,542}}. % messages/1
    {test,is_eq_exact,
          {f,535},
          [{x,0},
           {literal,[":6:23: a term is constructed, but never used\n%    6|     B = <<\"xyzåäö\">>,\t<<\"12345\">>,\n%     |                      \t^\n\n"]}]}.
    {move,{literal,"long.erl"},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1499}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,3}}.
    {move,{integer,10},{x,1}}.
    {move,{integer,10000},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1503}]}.
    {call_ext,2,{extfunc,lists,duplicate,2}}.
    {test_heap,8,1}.
    {put_list,{x,0},{literal,["foo() -> bar().\n"]},{x,0}}.
    {put_list,{literal,"unused() -> ok.\n"},{x,0},{x,0}}.
    {put_list,{literal,"-export([foo/0]).\n"},{x,0},{x,0}}.
    {put_list,{literal,"-module(long).\n"},{x,0},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1505}]}.
    {call_ext,2,{extfunc,file,write_file,2}}.
    {test,is_eq_exact,{f,534},[{x,0},{atom,ok}]}.
    {move,{literal,[return]},{x,1}}.
    {move,{y,3},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1506}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,533},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {get_tuple_element,{x,0},2,{y,1}}.
    {move,{x,1},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1510}]}.
    {call,1,{f,542}}. % messages/1
    {test,is_eq_exact,
          {f,532},
          [{x,0},
           {literal,[":10004:10: function bar/0 undefined\n% 10004| foo() -> bar().\n%      |          ^\n\n"]}]}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1514}]}.
    {call,1,{f,542}}. % messages/1
    {test,is_eq_exact,
          {f,531},
          [{x,0},
           {literal,[":3:1: function unused/0 is unused\n%    3| unused() -> ok.\n%     | ^\n\n"]}]}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,3}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1515}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,530},[{x,0},{atom,ok}]}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1517}]}.
    {call_ext,0,{extfunc,file,get_cwd,0}}.
    {test,is_tagged_tuple,{f,529},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {'try',{y,3},{f,526}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1519}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,528},[{x,0},{atom,ok}]}.
    {move,{literal,[report,binary]},{x,1}}.
    {move,{atom,cover_messages},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1520}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,527},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,527},[{x,1},{atom,cover_messages}]}.
    {try_end,{y,3}}.
    {move,{y,1},{x,0}}.
    {trim,4,0}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1522}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,526}.
    {try_case,{y,3}}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,3}}.
    {trim,2,2}.
    {line,[{scope,[1,3]},{location,"compile_SUITE.erl",1522}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {bif,raise,{f,0},[{y,1},{y,0}],{x,0}}.
  {label,527}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1520}]}.
    {badmatch,{x,0}}.
  {label,528}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1519}]}.
    {badmatch,{x,0}}.
  {label,529}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1517}]}.
    {badmatch,{x,0}}.
  {label,530}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1515}]}.
    {badmatch,{x,0}}.
  {label,531}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1511}]}.
    {badmatch,{x,0}}.
  {label,532}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1507}]}.
    {badmatch,{x,0}}.
  {label,533}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1506}]}.
    {badmatch,{x,0}}.
  {label,534}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1505}]}.
    {badmatch,{x,0}}.
  {label,535}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1494}]}.
    {badmatch,{x,0}}.
  {label,536}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1493}]}.
    {badmatch,{x,0}}.
  {label,537}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1487}]}.
    {badmatch,{x,0}}.
  {label,538}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1486}]}.
    {badmatch,{x,0}}.
  {label,539}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1476}]}.
    {badmatch,{x,0}}.
  {label,540}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1474}]}.
    {badmatch,{x,0}}.


{function, messages, 1, 542}.
  {label,541}.
    {line,[{location,"compile_SUITE.erl",1527}]}.
    {func_info,{atom,compile_SUITE},{atom,messages},1}.
  {label,542}.
    {test_heap,{alloc,[{words,0},{floats,0},{funs,1}]},1}.
    {make_fun3,{f,870},0,0,{x,1},{list,[]}}.
    {'%',{var_info,{x,1},[{fun_type,{t_list,any,nil}}]}}.
    {swap,{x,0},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1528}]}.
    {call_ext_only,2,{extfunc,lists,flatmap,2}}.


{function, format_descs, 2, 544}.
  {label,543}.
    {line,[{location,"compile_SUITE.erl",1533}]}.
    {func_info,{atom,compile_SUITE},{atom,format_descs},2}.
  {label,544}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,2}}.
    {move,nil,{x,3}}.
    {move,nil,{x,1}}.
    {line,[{location,"compile_SUITE.erl",1535}]}.
    {call_ext,4,{extfunc,sys_messages,format_messages,4}}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,865},1}. % '-format_descs/2-lc$^0/1-0-'/2


{function, strip_prefix, 2, 546}.
  {label,545}.
    {line,[{location,"compile_SUITE.erl",1537}]}.
    {func_info,{atom,compile_SUITE},{atom,strip_prefix},2}.
  {label,546}.
    {'%',{var_info,{x,1},[{type,{t_list,any,nil}}]}}.
    {allocate,1,2}.
    {move,{x,1},{y,0}}.
    {swap,{x,0},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1538}]}.
    {call_ext,2,{extfunc,string,prefix,2}}.
    {test,is_eq_exact,{f,547},[{x,0},{atom,nomatch}]}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,547}.
    {deallocate,1}.
    return.


{function, pre_load_check, 1, 549}.
  {label,548}.
    {line,[{location,"compile_SUITE.erl",1546}]}.
    {func_info,{atom,compile_SUITE},{atom,pre_load_check},1}.
  {label,549}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,2}]}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"compile_SUITE.erl",1547}]}.
    {call_ext,0,{extfunc,test_server,is_cover,0}}.
    {select_val,{x,0},
                {f,553},
                {list,[{atom,false},{f,551},{atom,true},{f,550}]}}.
  {label,550}.
    {move,{literal,{skip,"Cover is running"}},{x,0}}.
    {deallocate,3}.
    return.
  {label,551}.
    {'try',{y,2},{f,552}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1552}]}.
    {call,1,{f,555}}. % do_pre_load_check/1
    {move,{x,0},{y,1}}.
    {'%',{var_info,{y,1},[{type,{t_atom,[ok]}}]}}.
    {try_end,{y,2}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1554}]}.
    {call_ext,0,{extfunc,dbg,stop,0}}.
    {move,{y,1},{x,0}}.
    {deallocate,3}.
    return.
  {label,552}.
    {try_case,{y,2}}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {call_ext,0,{extfunc,dbg,stop,0}}.
    {bif,raise,{f,0},[{y,0},{y,1}],{x,0}}.
  {label,553}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1547}]}.
    {case_end,{x,0}}.


{function, do_pre_load_check, 1, 555}.
  {label,554}.
    {line,[{location,"compile_SUITE.erl",1558}]}.
    {func_info,{atom,compile_SUITE},{atom,do_pre_load_check},1}.
  {label,555}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1559}]}.
    {call_ext,2,{extfunc,test_server,lookup_config,2}}.
    {move,{x,0},{y,2}}.
    {move,{literal,"simple.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1560}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {swap,{y,2},{x,0}}.
    {move,{literal,"big.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1561}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,{alloc,[{words,3},{floats,0},{funs,1}]},1}.
    {make_fun3,{f,581},0,0,{x,1},{list,[]}}.
    {'%',{var_info,{x,1},[{fun_type,{t_list,any,any}}]}}.
    {put_tuple2,{x,1},{list,[{x,1},nil]}}.
    {move,{x,0},{y,1}}.
    {move,{atom,process},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1562}]}.
    {call_ext,2,{extfunc,dbg,tracer,2}}.
    {test,is_tagged_tuple,{f,572},[{x,0},2,{atom,ok}]}.
    {bif,self,{f,0},[],{x,0}}.
    {move,{atom,call},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1563}]}.
    {call_ext,2,{extfunc,dbg,p,2}}.
    {move,{atom,call},{x,1}}.
    {move,{atom,new},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1564}]}.
    {call_ext,2,{extfunc,dbg,p,2}}.
    {move,nil,{x,1}}.
    {move,{literal,{compile_SUITE,get_trace_data,0}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1565}]}.
    {call_ext,2,{extfunc,dbg,tpl,2}}.
    {test,is_tagged_tuple,{f,571},[{x,0},2,{atom,ok}]}.
    {move,nil,{x,1}}.
    {move,{literal,{code,ensure_modules_loaded,1}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1566}]}.
    {call_ext,2,{extfunc,dbg,tp,2}}.
    {test,is_tagged_tuple,{f,570},[{x,0},2,{atom,ok}]}.
    {move,nil,{x,1}}.
    {move,{literal,{options,[],".",undefined,[],1,false,999,
                            [binary],
                            [],undefined}},
          {x,2}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",1572}]}.
    {call_ext,3,{extfunc,compile,compile,3}}.
    {test,is_tagged_tuple,{f,569},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,569},[{x,1},{atom,simple}]}.
    {line,[{location,"compile_SUITE.erl",1573}]}.
    {call,0,{f,574}}. % get_trace_data/0
    {test,is_nonempty_list,{f,568},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tagged_tuple,{f,568},[{x,1},3,{atom,code}]}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {test,is_eq_exact,{f,568},[{x,3},{atom,ensure_modules_loaded}]}.
    {get_tuple_element,{x,1},2,{x,1}}.
    {test,is_nonempty_list,{f,568},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,1}}.
    {test,is_nil,{f,568},[{x,1}]}.
    {test,is_nil,{f,568},[{x,2}]}.
    {move,{x,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1574}]}.
    {call_ext,1,{extfunc,ordsets,from_list,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,0},{x,1}}.
    {move,{atom,compile},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1578}]}.
    {call_ext,2,{extfunc,ordsets,is_element,2}}.
    {select_val,{x,0},
                {f,567},
                {list,[{atom,false},{f,557},{atom,true},{f,556}]}}.
  {label,556}.
    {move,{literal,"The 'compile' module should not be included in the list of modules to be pre-loaded."},
          {x,0}}.
    {line,[{location,"compile_SUITE.erl",1580}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {move,{atom,compile},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1582}]}.
    {call_ext,1,{extfunc,ct,fail,1}}.
  {label,557}.
    {move,{y,2},{x,1}}.
    {init_yregs,{list,[{y,2}]}}.
    {move,{atom,compile},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1586}]}.
    {call_ext,2,{extfunc,ordsets,add_element,2}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"compile_SUITE.erl",1591}]}.
    {call,0,{f,584}}. % compiler_modules/0
    {'%',{var_info,{x,0},[{type,{t_list,{t_atom,any},nil}}]}}.
    {line,[{location,"compile_SUITE.erl",1592}]}.
    {call_ext,1,{extfunc,ordsets,from_list,1}}.
    {move,{y,2},{x,1}}.
    {call_ext,2,{extfunc,ordsets,union,2}}.
    {line,[{location,"compile_SUITE.erl",1596}]}.
    {call,1,{f,861}}. % '-do_pre_load_check/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,nil}]}}.
    {move,{literal,{code,ensure_modules_loaded,1}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1598}]}.
    {call_ext,1,{extfunc,dbg,ctp,1}}.
    {test,is_tagged_tuple,{f,566},[{x,0},2,{atom,ok}]}.
    {move,nil,{x,1}}.
    {move,{literal,{code,ensure_loaded,1}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1599}]}.
    {call_ext,2,{extfunc,dbg,tp,2}}.
    {test,is_tagged_tuple,{f,565},[{x,0},2,{atom,ok}]}.
    {move,{literal,[binary]},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",1600}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,564},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,564},[{x,1},{atom,big}]}.
    {line,[{location,"compile_SUITE.erl",1601}]}.
    {call,0,{f,574}}. % get_trace_data/0
    {line,[{location,"compile_SUITE.erl",1602}]}.
    {call,1,{f,856}}. % '-do_pre_load_check/1-lc$^1/1-1-'/1
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {line,[{location,"compile_SUITE.erl",1603}]}.
    {call_ext,1,{extfunc,ordsets,from_list,1}}.
    {move,{x,0},{y,1}}.
    {move,{y,2},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1606}]}.
    {call_ext,2,{extfunc,ordsets,subtract,2}}.
    {move,{x,0},{y,0}}.
    {test,is_nonempty_list,{f,558},[{x,0}]}.
    {test_heap,2,0}.
    {put_list,{y,0},nil,{x,1}}.
    {move,{literal,"The following modules were used but not pre-loaded:\n~p\n"},
          {x,0}}.
    {line,[{location,"compile_SUITE.erl",1610}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {test_heap,3,0}.
    {put_tuple2,{x,0},{list,[{atom,not_preload},{y,0}]}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",1613}]}.
    {call_ext,1,{extfunc,ct,fail,1}}.
    {jump,{f,559}}.
  {label,558}.
    {test,is_nil,{f,563},[{x,0}]}.
  {label,559}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,1},{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",1617}]}.
    {call_ext,2,{extfunc,ordsets,subtract,2}}.
    {move,{x,0},{y,2}}.
    {test,is_nonempty_list,{f,560},[{x,0}]}.
    {test_heap,2,0}.
    {put_list,{y,2},nil,{x,1}}.
    {move,{literal,"The following modules were pre-loaded but not used:\n~p\n"},
          {x,0}}.
    {line,[{location,"compile_SUITE.erl",1621}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {test_heap,3,0}.
    {put_tuple2,{x,0},{list,[{atom,not_used},{y,2}]}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",1624}]}.
    {call_ext,1,{extfunc,ct,fail,1}}.
    {jump,{f,561}}.
  {label,560}.
    {test,is_nil,{f,562},[{x,0}]}.
  {label,561}.
    {move,{atom,ok},{x,0}}.
    {deallocate,3}.
    return.
  {label,562}.
    {line,[{location,"compile_SUITE.erl",1617}]}.
    {case_end,{x,0}}.
  {label,563}.
    {line,[{location,"compile_SUITE.erl",1606}]}.
    {case_end,{x,0}}.
  {label,564}.
    {line,[{location,"compile_SUITE.erl",1600}]}.
    {badmatch,{x,0}}.
  {label,565}.
    {line,[{location,"compile_SUITE.erl",1599}]}.
    {badmatch,{x,0}}.
  {label,566}.
    {line,[{location,"compile_SUITE.erl",1598}]}.
    {badmatch,{x,0}}.
  {label,567}.
    {line,[{location,"compile_SUITE.erl",1578}]}.
    {case_end,{x,0}}.
  {label,568}.
    {line,[{location,"compile_SUITE.erl",1573}]}.
    {badmatch,{x,0}}.
  {label,569}.
    {line,[{location,"compile_SUITE.erl",1572}]}.
    {badmatch,{x,0}}.
  {label,570}.
    {line,[{location,"compile_SUITE.erl",1566}]}.
    {badmatch,{x,0}}.
  {label,571}.
    {line,[{location,"compile_SUITE.erl",1565}]}.
    {badmatch,{x,0}}.
  {label,572}.
    {line,[{location,"compile_SUITE.erl",1562}]}.
    {badmatch,{x,0}}.


{function, get_trace_data, 0, 574}.
  {label,573}.
    {line,[{location,"compile_SUITE.erl",1629}]}.
    {func_info,{atom,compile_SUITE},{atom,get_trace_data},0}.
  {label,574}.
    {call_only,0,{f,576}}. % do_get_trace_data/0


{function, do_get_trace_data, 0, 576}.
  {label,575}.
    {line,[{location,"compile_SUITE.erl",1635}]}.
    {func_info,{atom,compile_SUITE},{atom,do_get_trace_data},0}.
  {label,576}.
    {allocate,0,0}.
  {label,577}.
    {loop_rec,{f,579},{x,0}}.
    {test,is_tagged_tuple,{f,578},[{x,0},2,{atom,trace_data}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    remove_message.
    {deallocate,0}.
    return.
  {label,578}.
    {loop_rec_end,{f,577}}.
  {label,579}.
    {wait,{f,577}}.


{function, pre_load_trace, 2, 581}.
  {label,580}.
    {line,[{location,"compile_SUITE.erl",1640}]}.
    {func_info,{atom,compile_SUITE},{atom,pre_load_trace},2}.
  {label,581}.
    {test,is_tagged_tuple,{f,580},[{x,0},4,{atom,trace}]}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {test,is_eq_exact,{f,580},[{x,2},{atom,call}]}.
    {get_tuple_element,{x,0},3,{x,2}}.
    {test,is_eq_exact,
          {f,582},
          [{x,2},{literal,{compile_SUITE,get_trace_data,[]}}]}.
    {allocate_heap,0,3,2}.
    {put_tuple2,{x,1},{list,[{atom,trace_data},{x,1}]}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {line,[{location,"compile_SUITE.erl",1641}]}.
    send.
    {move,nil,{x,0}}.
    {deallocate,0}.
    return.
  {label,582}.
    {test_heap,2,3}.
    {put_list,{x,2},{x,1},{x,0}}.
    return.


{function, compiler_modules, 0, 584}.
  {label,583}.
    {line,[{location,"compile_SUITE.erl",1646}]}.
    {func_info,{atom,compile_SUITE},{atom,compiler_modules},0}.
  {label,584}.
    {allocate,0,0}.
    {move,{atom,compiler},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1647}]}.
    {call_ext,1,{extfunc,code,lib_dir,1}}.
    {test_heap,2,1}.
    {put_list,{x,0},{literal,["ebin","*.beam"]},{x,0}}.
    {call_ext,1,{extfunc,filename,join,1}}.
    {line,[{location,"compile_SUITE.erl",1648}]}.
    {call_ext,1,{extfunc,filelib,wildcard,1}}.
    {call_last,1,{f,852},0}. % '-compiler_modules/0-lc$^0/1-0-'/1


{function, env_compiler_options, 1, 586}.
  {label,585}.
    {line,[{location,"compile_SUITE.erl",1655}]}.
    {func_info,{atom,compile_SUITE},{atom,env_compiler_options},1}.
  {label,586}.
    {test_heap,{alloc,[{words,0},{floats,0},{funs,1}]},0}.
    {make_fun3,{f,848},0,0,{x,0},{list,[]}}.
    {move,{literal,[{"bin_opt_info",[bin_opt_info]},
                    {"recv_opt_info",[recv_opt_info]},
                    {"'S'",['S']},
                    {"{source, \"test.erl\"}",[{source,"test.erl"}]},
                    {"[{d,macro_one,1},{d,macro_two}]",
                     [{d,macro_one,1},{d,macro_two}]},
                    {"[warn_export_all, warn_export_vars]",
                     [warn_export_all,warn_export_vars]}]},
          {x,1}}.
    {line,[{location,"compile_SUITE.erl",1668}]}.
    {call_ext_only,2,{extfunc,lists,foreach,2}}.


{function, bc_options, 1, 588}.
  {label,587}.
    {line,[{location,"compile_SUITE.erl",1672}]}.
    {func_info,{atom,compile_SUITE},{atom,bc_options},1}.
  {label,588}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1673}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1675}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {test,is_eq_exact,{f,589},[{x,0},{y,0}]}.
    {test_heap,{alloc,[{words,1},{floats,0},{funs,1}]},0}.
    {make_fun3,{f,844},0,0,{x,0},{list,[{y,0}]}}.
    {'%',{var_info,{x,0},[{fun_type,{t_atom,[error,ok]}}]}}.
    {move,{literal,[{171,small_float,
                     [no_line_info,no_ssa_opt_float,no_type_opt]},
                    {171,small_float,[no_line_info]},
                    {171,small_float,[]},
                    {171,small_float,[r24]},
                    {171,small_float,[r25]},
                    {172,small,
                     [no_ssa_opt_record,no_ssa_opt_float,no_line_info,
                      no_type_opt,no_bs_match]},
                    {172,small,[r24]},
                    {172,funs,
                     [no_ssa_opt_record,no_ssa_opt_float,no_line_info,
                      no_type_opt]},
                    {172,funs,
                     [no_ssa_opt_record,no_line_info,no_stack_trimming,
                      no_type_opt]},
                    {172,funs,[r24]},
                    {172,small_maps,[r24]},
                    {172,small_maps,[no_type_opt]},
                    {172,big,
                     [no_ssa_opt_record,no_ssa_opt_float,no_line_info,
                      no_type_opt]},
                    {172,big,[r24]},
                    {178,small,[r25]},
                    {178,big,[r25]},
                    {178,funs,[]},
                    {178,big,[]}]},
          {x,1}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",1726}]}.
    {call_ext,2,{extfunc,test_lib,p_run,2}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,589}.
    {line,[{location,"compile_SUITE.erl",1675}]}.
    {badmatch,{x,0}}.


{function, highest_opcode, 3, 591}.
  {label,590}.
    {line,[{location,"compile_SUITE.erl",1729}]}.
    {func_info,{atom,compile_SUITE},{atom,highest_opcode},3}.
  {label,591}.
    {allocate,3,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1730}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{literal,".erl"},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,2},{x,0}}.
    {move,{y,0},{y,2}}.
    {trim,1,2}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,4,1}.
    {put_list,{atom,report_errors},{y,1},{x,1}}.
    {put_list,{atom,binary},{x,1},{x,1}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",1731}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,592},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,592},[{x,1},{y,0}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {line,[{location,"compile_SUITE.erl",1732}]}.
    {call_ext_last,1,{extfunc,test_lib,highest_opcode,1},1}.
  {label,592}.
    {line,[{location,"compile_SUITE.erl",1731}]}.
    {badmatch,{x,0}}.


{function, deterministic_include, 1, 594}.
  {label,593}.
    {line,[{location,"compile_SUITE.erl",1734}]}.
    {func_info,{atom,compile_SUITE},{atom,deterministic_include},1}.
  {label,594}.
    {test,is_list,{f,593},[{x,0}]}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1735}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{literal,"simple"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1736}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{literal,[binary,{i,"gurka"}]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1740}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {move,{x,0},{y,0}}.
    {test,is_tagged_tuple,{f,600},[{x,0},3,{atom,ok}]}.
    {move,{literal,[binary,{i,"gaffel"}]},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1741}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,599},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {get_tuple_element,{y,0},2,{x,1}}.
    {test,is_eq_exact,{f,595},[{x,1},{x,0}]}.
    {line,[{location,"compile_SUITE.erl",1742}]}.
    {badmatch,{atom,false}}.
  {label,595}.
    {move,{literal,[binary,deterministic,{i,"gurka"}]},{x,1}}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1745}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {move,{x,0},{y,0}}.
    {test,is_tagged_tuple,{f,598},[{x,0},3,{atom,ok}]}.
    {move,{literal,[binary,deterministic,{i,"gaffel"}]},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",1746}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,597},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {get_tuple_element,{y,0},2,{x,1}}.
    {test,is_eq_exact,{f,596},[{x,1},{x,0}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,596}.
    {line,[{location,"compile_SUITE.erl",1747}]}.
    {badmatch,{atom,false}}.
  {label,597}.
    {line,[{location,"compile_SUITE.erl",1746}]}.
    {badmatch,{x,0}}.
  {label,598}.
    {line,[{location,"compile_SUITE.erl",1745}]}.
    {badmatch,{x,0}}.
  {label,599}.
    {line,[{location,"compile_SUITE.erl",1741}]}.
    {badmatch,{x,0}}.
  {label,600}.
    {line,[{location,"compile_SUITE.erl",1740}]}.
    {badmatch,{x,0}}.


{function, deterministic_paths, 1, 602}.
  {label,601}.
    {line,[{location,"compile_SUITE.erl",1751}]}.
    {func_info,{atom,compile_SUITE},{atom,deterministic_paths},1}.
  {label,602}.
    {test,is_list,{f,601},[{x,0}]}.
    {allocate,1,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1752}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,0}}.
    {move,nil,{x,2}}.
    {move,{literal,"simple"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1756}]}.
    {call,3,{f,606}}. % deterministic_paths_1/3
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,604},[{x,0},{atom,true}]}.
    {move,{literal,"simple"},{x,1}}.
    {move,{literal,[deterministic]},{x,2}}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",1759}]}.
    {call,3,{f,606}}. % deterministic_paths_1/3
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,603},[{x,0},{atom,true}]}.
    {badmatch,{atom,true}}.
  {label,603}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,604}.
    {line,[{location,"compile_SUITE.erl",1756}]}.
    {badmatch,{atom,false}}.


{function, deterministic_paths_1, 3, 606}.
  {label,605}.
    {line,[{location,"compile_SUITE.erl",1763}]}.
    {func_info,{atom,compile_SUITE},{atom,deterministic_paths_1},3}.
  {label,606}.
    {'%',{var_info,{x,1},[{type,{t_cons,{t_integer,{101,115}},nil}}]}}.
    {'%',{var_info,{x,2},[{type,{t_list,{t_atom,[deterministic]},nil}}]}}.
    {allocate,6,3}.
    {init_yregs,{list,[{y,0},{y,1},{y,5}]}}.
    {move,{x,2},{y,2}}.
    {move,{x,1},{y,3}}.
    {move,{x,0},{y,4}}.
    {move,{literal,"simple"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1764}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"compile_SUITE.erl",1765}]}.
    {call_ext,0,{extfunc,file,get_cwd,0}}.
    {test,is_tagged_tuple,{f,611},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {'try',{y,5},{f,607}}.
    {test_heap,2,0}.
    {put_list,{atom,binary},{y,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",1767}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {move,{x,0},{y,1}}.
    {test,is_tagged_tuple,{f,610},[{x,0},3,{atom,ok}]}.
    {move,{y,4},{x,0}}.
    {init_yregs,{list,[{y,4}]}}.
    {line,[{location,"compile_SUITE.erl",1768}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,609},[{x,0},{atom,ok}]}.
    {test_heap,2,0}.
    {put_list,{atom,binary},{y,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,2},{y,3}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1769}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,608},[{x,0},3,{atom,ok}]}.
    {try_end,{y,5}}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {get_tuple_element,{y,1},2,{x,1}}.
    {bif,'=/=',{f,0},[{x,1},{x,0}],{y,5}}.
    {move,{y,0},{x,0}}.
    {trim,5,1}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1772}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,607}.
    {try_case,{y,5}}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {move,{y,0},{x,0}}.
    {move,{y,3},{y,5}}.
    {trim,4,2}.
    {line,[{scope,[1,3]},{location,"compile_SUITE.erl",1772}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {bif,raise,{f,0},[{y,1},{y,0}],{x,0}}.
  {label,608}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1769}]}.
    {badmatch,{x,0}}.
  {label,609}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1768}]}.
    {badmatch,{x,0}}.
  {label,610}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",1767}]}.
    {badmatch,{x,0}}.
  {label,611}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1765}]}.
    {badmatch,{x,0}}.


{function, compile_attribute, 1, 613}.
  {label,612}.
    {line,[{location,"compile_SUITE.erl",1776}]}.
    {func_info,{atom,compile_SUITE},{atom,compile_attribute},1}.
  {label,613}.
    {test,is_list,{f,612},[{x,0}]}.
    {allocate,1,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1777}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,0}}.
    {move,{literal,[debug_info]},{x,2}}.
    {move,{literal,"debug_info"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1781}]}.
    {call,3,{f,615}}. % debug_info_attribute/3
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,"debug_info"},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,0},{x,0}}.
    {call_last,3,{f,615},1}. % debug_info_attribute/3


{function, debug_info_attribute, 3, 615}.
  {label,614}.
    {line,[{location,"compile_SUITE.erl",1786}]}.
    {func_info,{atom,compile_SUITE},{atom,debug_info_attribute},3}.
  {label,615}.
    {'%',{var_info,{x,1},[{type,{t_cons,{t_integer,{95,117}},nil}}]}}.
    {'%',{var_info,{x,2},[{type,{t_list,{t_atom,[debug_info]},nil}}]}}.
    {allocate,1,3}.
    {move,{x,2},{y,0}}.
    {line,[{location,"compile_SUITE.erl",1787}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,2,1}.
    {put_list,{atom,binary},{y,0},{x,1}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",1788}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,619},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},2,{x,0}}.
    {move,{literal,[debug_info]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1789}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,618},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tuple,{f,618},[{x,1}]}.
    {test,test_arity,{f,618},[{x,1},2]}.
    {get_tuple_element,{x,1},1,{x,0}}.
    {test,is_nonempty_list,{f,617},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tagged_tuple,{f,617},[{x,1},2,{atom,debug_info}]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_tagged_tuple,{f,617},[{x,1},3,{atom,debug_info_v1}]}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {test,is_eq_exact,{f,617},[{x,3},{atom,erl_abstract_code}]}.
    {get_tuple_element,{x,1},2,{x,1}}.
    {test,is_tuple,{f,617},[{x,1}]}.
    {test,test_arity,{f,617},[{x,1},2]}.
    {test,is_nil,{f,617},[{x,2}]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {line,[{location,"compile_SUITE.erl",1795}]}.
    {call,1,{f,621}}. % forms_to_terms/1
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test,is_nonempty_list,{f,616},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tagged_tuple,{f,616},[{x,1},4,{atom,attribute}]}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {test,is_eq_exact,{f,616},[{x,3},{literal,{1,1}}]}.
    {get_tuple_element,{x,1},2,{x,3}}.
    {test,is_eq_exact,{f,616},[{x,3},{atom,file}]}.
    {get_tuple_element,{x,1},3,{x,1}}.
    {test,is_tuple,{f,616},[{x,1}]}.
    {test,test_arity,{f,616},[{x,1},2]}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_eq_exact,{f,616},[{x,1},{integer,1}]}.
    {test,is_nonempty_list,{f,616},[{x,2}]}.
    {get_list,{x,2},{x,1},{x,2}}.
    {test,is_eq_exact,
          {f,616},
          [{x,1},{literal,{attribute,{1,2},module,debug_info}}]}.
    {test,is_nonempty_list,{f,616},[{x,2}]}.
    {get_list,{x,2},{x,1},{x,2}}.
    {test,is_eq_exact,
          {f,616},
          [{x,1},{literal,{attribute,{2,2},compile,[debug_info]}}]}.
    {test,is_nonempty_list,{f,616},[{x,2}]}.
    {get_list,{x,2},{x,1},{x,2}}.
    {test,is_tagged_tuple,{f,616},[{x,1},2,{atom,eof}]}.
    {test,is_nil,{f,616},[{tr,{x,2},{t_list,any,nil}}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,616}.
    {line,[{location,"compile_SUITE.erl",1792}]}.
    {badmatch,{x,0}}.
  {label,617}.
    {line,[{location,"compile_SUITE.erl",1791}]}.
    {badmatch,{x,0}}.
  {label,618}.
    {line,[{location,"compile_SUITE.erl",1789}]}.
    {badmatch,{x,0}}.
  {label,619}.
    {line,[{location,"compile_SUITE.erl",1788}]}.
    {badmatch,{x,0}}.


{function, forms_to_terms, 1, 621}.
  {label,620}.
    {line,[{location,"compile_SUITE.erl",1799}]}.
    {func_info,{atom,compile_SUITE},{atom,forms_to_terms},1}.
  {label,621}.
    {call_only,1,{f,840}}. % '-forms_to_terms/1-lc$^0/1-0-'/1


{function, other_options, 1, 623}.
  {label,622}.
    {line,[{location,"compile_SUITE.erl",1803}]}.
    {func_info,{atom,compile_SUITE},{atom,other_options},1}.
  {label,623}.
    {allocate,1,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1804}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,0}}.
    {move,{literal,"big"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1808}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{literal,[binary,no_spawn_compiler_process,brief,absolute_source,
                    report]},
          {x,1}}.
    {line,[{location,"compile_SUITE.erl",1810}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,625},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,625},[{x,1},{atom,big}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,bs_start_match3,{f,625},2,[{x,1}],{x,1}}.
    {bs_match,{f,625},{x,1},{commands,[{ensure_at_least,0,8}]}}.
    {move,{literal,"small"},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",1818}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{literal,[report,no_inline,compressed,beam]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1819}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,624},[{x,0},{literal,{ok,small}}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,624}.
    {badmatch,{x,0}}.
  {label,625}.
    {line,[{location,"compile_SUITE.erl",1809}]}.
    {badmatch,{x,0}}.


{function, transforms, 1, 627}.
  {label,626}.
    {line,[{location,"compile_SUITE.erl",1824}]}.
    {func_info,{atom,compile_SUITE},{atom,transforms},1}.
  {label,627}.
    {allocate,4,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,3}]}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"compile_SUITE.erl",1825}]}.
    {call_ext,0,{extfunc,file,get_cwd,0}}.
    {test,is_tagged_tuple,{f,629},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {'try',{y,3},{f,628}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",1827}]}.
    {call,1,{f,631}}. % do_transforms/1
    {move,{x,0},{y,2}}.
    {'%',{var_info,{y,2},[{type,{t_atom,[ok]}}]}}.
    {try_end,{y,3}}.
    {move,{y,1},{x,0}}.
    {move,{y,2},{y,3}}.
    {trim,3,1}.
    {line,[{location,"compile_SUITE.erl",1829}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,628}.
    {try_case,{y,3}}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,3}}.
    {trim,2,2}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1829}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {bif,raise,{f,0},[{y,1},{y,0}],{x,0}}.
  {label,629}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1825}]}.
    {badmatch,{x,0}}.


{function, do_transforms, 1, 631}.
  {label,630}.
    {line,[{location,"compile_SUITE.erl",1832}]}.
    {func_info,{atom,compile_SUITE},{atom,do_transforms},1}.
  {label,631}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,0},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1833}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,1},{x,1}}.
    {move,{x,0},{y,1}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1834}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{atom,do_transforms},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1835}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",1836}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,663},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1837}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,662},[{x,0},{atom,ok}]}.
    {move,{literal,"line_pt"},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1840}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,7,1}.
    {put_tuple2,{x,1},{list,[{atom,outdir},{y,0}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{atom,report},{x,1},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1841}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,661},[{x,0},{literal,{ok,line_pt}}]}.
    {move,{literal,"column_pt"},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1842}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,7,1}.
    {put_tuple2,{x,1},{list,[{atom,outdir},{y,0}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{atom,report},{x,1},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1843}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,660},[{x,0},{literal,{ok,column_pt}}]}.
    {move,{literal,"generic_pt"},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1844}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,7,1}.
    {put_tuple2,{x,1},{list,[{atom,outdir},{y,0}]}}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{atom,report},{x,1},{x,1}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",1845}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,659},[{x,0},{literal,{ok,generic_pt}}]}.
    {move,{literal,"big"},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1849}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{literal,[{parse_transform,line_pt}]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1850}]}.
    {call,2,{f,665}}. % compile_partition_warnings/2
    {test,is_tuple,{f,658},[{x,0}]}.
    {test,test_arity,{f,658},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_nil,{f,658},[{x,1}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,658},[{x,1}]}.
    {move,{literal,[{parse_transform,column_pt}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1854}]}.
    {call,2,{f,665}}. % compile_partition_warnings/2
    {test,is_tuple,{f,657},[{x,0}]}.
    {test,test_arity,{f,657},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_nonempty_list,{f,657},[{x,1}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nil,{f,657},[{x,1}]}.
    {move,{literal,[{error_location,line},{parse_transform,column_pt}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1858}]}.
    {call,2,{f,665}}. % compile_partition_warnings/2
    {test,is_tuple,{f,656},[{x,0}]}.
    {test,test_arity,{f,656},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_nil,{f,656},[{x,1}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,656},[{x,1}]}.
    {move,{literal,[{parse_transform,column_pt},{parse_transform,line_pt}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1863}]}.
    {call,2,{f,665}}. % compile_partition_warnings/2
    {test,is_tuple,{f,655},[{x,0}]}.
    {test,test_arity,{f,655},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_nil,{f,655},[{x,1}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,655},[{x,1}]}.
    {move,{literal,[{error_location,line},
                    add_columns,
                    {parse_transform,column_pt}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1868}]}.
    {call,2,{f,665}}. % compile_partition_warnings/2
    {test,is_tuple,{f,654},[{x,0}]}.
    {test,test_arity,{f,654},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_nil,{f,654},[{x,1}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,654},[{x,1}]}.
    {move,{literal,[{error_location,line},
                    add_columns,
                    {parse_transform,column_pt},
                    {parse_transform,column_pt}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1875}]}.
    {call,2,{f,665}}. % compile_partition_warnings/2
    {test,is_tuple,{f,653},[{x,0}]}.
    {test,test_arity,{f,653},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_nil,{f,653},[{x,1}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,653},[{x,1}]}.
    {move,{literal,[{error_location,line},
                    add_columns,add_error,
                    {parse_transform,column_pt}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1883}]}.
    {call,2,{f,665}}. % compile_partition_warnings/2
    {test,is_tagged_tuple,{f,652},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,652},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tuple,{f,652},[{x,2}]}.
    {test,test_arity,{f,652},[{x,2},2]}.
    {get_tuple_element,{x,2},1,{x,2}}.
    {test,is_nonempty_list,{f,652},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,2}}.
    {test,is_tuple,{f,652},[{x,3}]}.
    {test,test_arity,{f,652},[{x,3},3]}.
    {test,is_nil,{f,652},[{x,2}]}.
    {test,is_nil,{f,652},[{x,1}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nonempty_list,{f,652},[{x,1}]}.
    {get_tuple_element,{x,3},0,{x,0}}.
    {test,is_integer,{f,651},[{x,0}]}.
    {move,{literal,[binary,time,report,
                    {core_transform,generic_pt},
                    {parse_transform,generic_pt}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",1890}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,650},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,650},[{x,1},{atom,big}]}.
    {move,{atom,simple},{x,1}}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",1895}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{literal,[report,{core_transform,generic_pt},{action,crash}]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1896}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,649},[{x,0},{atom,error}]}.
    {move,{literal,[return,{core_transform,generic_pt},{action,crash}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1897}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,648},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,648},[{x,1}]}.
    {move,{literal,[report,{core_transform,generic_pt},{action,throw}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1899}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,647},[{x,0},{atom,error}]}.
    {move,{literal,[return,{core_transform,generic_pt},{action,throw}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1900}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,646},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,646},[{x,1}]}.
    {move,{literal,[report,{core_transform,generic_pt},{action,exit}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1902}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,645},[{x,0},{atom,error}]}.
    {move,{literal,[return,{core_transform,generic_pt},{action,exit}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1903}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,644},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,644},[{x,1}]}.
    {move,{literal,[report,{parse_transform,generic_pt},{action,crash}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1906}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,643},[{x,0},{atom,error}]}.
    {move,{literal,[return,{parse_transform,generic_pt},{action,crash}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1907}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,642},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,642},[{x,1}]}.
    {move,{literal,[report,{parse_transform,generic_pt},{action,throw}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1909}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,641},[{x,0},{atom,error}]}.
    {move,{literal,[return,{parse_transform,generic_pt},{action,throw}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1910}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,640},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,640},[{x,1}]}.
    {move,{literal,[report,{parse_transform,generic_pt},{action,exit}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1912}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,639},[{x,0},{atom,error}]}.
    {move,{literal,[return,{parse_transform,generic_pt},{action,exit}]},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1913}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,638},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,638},[{x,1}]}.
    {move,{literal,[report,{parse_transform,generic_pt},{action,warning}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1916}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,637},[{x,0},{literal,{ok,simple}}]}.
    {move,{literal,[return,{parse_transform,generic_pt},{action,warning}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1917}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,636},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,636},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nonempty_list,{f,636},[{x,1}]}.
    {move,{literal,[report,{parse_transform,generic_pt},{action,error}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1918}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,635},[{x,0},{atom,error}]}.
    {move,{literal,[return,{parse_transform,generic_pt},{action,error}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1919}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,634},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,634},[{x,1}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nonempty_list,{f,634},[{x,1}]}.
    {move,{literal,[report,
                    {parse_transform,generic_pt},
                    {action,undefined_error}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1920}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,633},[{x,0},{atom,error}]}.
    {move,{literal,[return,
                    {parse_transform,generic_pt},
                    {action,undefined_error}]},
          {x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",1921}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,632},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,632},[{x,1}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,632},[{x,1}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,632}.
    {badmatch,{x,0}}.
  {label,633}.
    {line,[{location,"compile_SUITE.erl",1920}]}.
    {badmatch,{x,0}}.
  {label,634}.
    {line,[{location,"compile_SUITE.erl",1919}]}.
    {badmatch,{x,0}}.
  {label,635}.
    {line,[{location,"compile_SUITE.erl",1918}]}.
    {badmatch,{x,0}}.
  {label,636}.
    {line,[{location,"compile_SUITE.erl",1917}]}.
    {badmatch,{x,0}}.
  {label,637}.
    {line,[{location,"compile_SUITE.erl",1916}]}.
    {badmatch,{x,0}}.
  {label,638}.
    {line,[{location,"compile_SUITE.erl",1913}]}.
    {badmatch,{x,0}}.
  {label,639}.
    {line,[{location,"compile_SUITE.erl",1912}]}.
    {badmatch,{x,0}}.
  {label,640}.
    {line,[{location,"compile_SUITE.erl",1910}]}.
    {badmatch,{x,0}}.
  {label,641}.
    {line,[{location,"compile_SUITE.erl",1909}]}.
    {badmatch,{x,0}}.
  {label,642}.
    {line,[{location,"compile_SUITE.erl",1907}]}.
    {badmatch,{x,0}}.
  {label,643}.
    {line,[{location,"compile_SUITE.erl",1906}]}.
    {badmatch,{x,0}}.
  {label,644}.
    {line,[{location,"compile_SUITE.erl",1903}]}.
    {badmatch,{x,0}}.
  {label,645}.
    {line,[{location,"compile_SUITE.erl",1902}]}.
    {badmatch,{x,0}}.
  {label,646}.
    {line,[{location,"compile_SUITE.erl",1900}]}.
    {badmatch,{x,0}}.
  {label,647}.
    {line,[{location,"compile_SUITE.erl",1899}]}.
    {badmatch,{x,0}}.
  {label,648}.
    {line,[{location,"compile_SUITE.erl",1897}]}.
    {badmatch,{x,0}}.
  {label,649}.
    {line,[{location,"compile_SUITE.erl",1896}]}.
    {badmatch,{x,0}}.
  {label,650}.
    {line,[{location,"compile_SUITE.erl",1890}]}.
    {badmatch,{x,0}}.
  {label,651}.
    {line,[{location,"compile_SUITE.erl",1887}]}.
    {badmatch,{atom,false}}.
  {label,652}.
    {line,[{location,"compile_SUITE.erl",1882}]}.
    {badmatch,{x,0}}.
  {label,653}.
    {line,[{location,"compile_SUITE.erl",1875}]}.
    {badmatch,{x,0}}.
  {label,654}.
    {line,[{location,"compile_SUITE.erl",1868}]}.
    {badmatch,{x,0}}.
  {label,655}.
    {line,[{location,"compile_SUITE.erl",1863}]}.
    {badmatch,{x,0}}.
  {label,656}.
    {line,[{location,"compile_SUITE.erl",1858}]}.
    {badmatch,{x,0}}.
  {label,657}.
    {line,[{location,"compile_SUITE.erl",1854}]}.
    {badmatch,{x,0}}.
  {label,658}.
    {line,[{location,"compile_SUITE.erl",1850}]}.
    {badmatch,{x,0}}.
  {label,659}.
    {line,[{location,"compile_SUITE.erl",1845}]}.
    {badmatch,{x,0}}.
  {label,660}.
    {line,[{location,"compile_SUITE.erl",1843}]}.
    {badmatch,{x,0}}.
  {label,661}.
    {line,[{location,"compile_SUITE.erl",1841}]}.
    {badmatch,{x,0}}.
  {label,662}.
    {line,[{location,"compile_SUITE.erl",1837}]}.
    {badmatch,{x,0}}.
  {label,663}.
    {line,[{location,"compile_SUITE.erl",1836}]}.
    {badmatch,{x,0}}.


{function, compile_partition_warnings, 2, 665}.
  {label,664}.
    {line,[{location,"compile_SUITE.erl",1925}]}.
    {func_info,{atom,compile_SUITE},{atom,compile_partition_warnings},2}.
  {label,665}.
    {'%',
        {var_info,
            {x,1},
            [{type,
                 {t_cons,
                     {t_union,
                         {t_atom,[add_columns,add_error]},
                         none,none,
                         [{{2,{t_atom,[error_location]}},
                           {t_tuple,2,true,
                               #{1 => {t_atom,[error_location]},
                                 2 => {t_atom,[line]}}}},
                          {{2,{t_atom,[parse_transform]}},
                           {t_tuple,2,true,
                               #{1 => {t_atom,[parse_transform]},
                                 2 => {t_atom,[column_pt,line_pt]}}}}],
                         none},
                     nil}}]}}.
    {allocate_heap,0,4,2}.
    {put_list,{atom,return},{x,1},{x,1}}.
    {put_list,{atom,binary},{x,1},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1926}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,666},[{x,0},4,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,666},[{x,1},{atom,big}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,bs_start_match3,{f,666},2,[{x,1}],{x,1}}.
    {bs_match,{f,666},{x,1},{commands,[{ensure_at_least,0,8}]}}.
    {get_tuple_element,{x,0},3,{x,0}}.
    {test,is_nonempty_list,{f,667},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,667},[{x,1}]}.
    {test,test_arity,{f,667},[{x,1},2]}.
    {test,is_nil,{f,667},[{x,2}]}.
    {test_heap,{alloc,[{words,0},{floats,0},{funs,1}]},2}.
    {make_fun3,{f,837},0,0,{x,0},{list,[]}}.
    {'%',{var_info,{x,0},[{fun_type,{t_atom,[false,true]}}]}}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {line,[{location,"compile_SUITE.erl",1931}]}.
    {call_ext_last,2,{extfunc,lists,partition,2},0}.
  {label,666}.
    {deallocate,0}.
    return.
  {label,667}.
    {line,[{location,"compile_SUITE.erl",1928}]}.
    {badmatch,{x,0}}.


{function, erl_compile_api, 1, 669}.
  {label,668}.
    {line,[{location,"compile_SUITE.erl",1939}]}.
    {func_info,{atom,compile_SUITE},{atom,erl_compile_api},1}.
  {label,669}.
    {allocate,7,1}.
    {init_yregs,{list,[{y,0},{y,1},{y,2},{y,3},{y,4},{y,5}]}}.
    {move,{x,0},{y,6}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1940}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,6},{x,1}}.
    {move,{x,0},{y,6}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1941}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{x,0},{y,5}}.
    {move,{y,6},{x,0}}.
    {move,{literal,"simple.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1942}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,24,1}.
    {put_tuple2,{y,4},
                {list,[{atom,options},
                       nil,
                       {y,5},
                       {atom,undefined},
                       nil,
                       {integer,1},
                       {atom,false},
                       {integer,999},
                       nil,nil,
                       {atom,undefined}]}}.
    {put_tuple2,{y,3},
                {list,[{atom,options},
                       nil,
                       {y,5},
                       {atom,undefined},
                       nil,
                       {integer,1},
                       {atom,false},
                       {integer,999},
                       {literal,[binary]},
                       nil,
                       {atom,undefined}]}}.
    {move,{x,0},{y,2}}.
    {move,{y,4},{x,2}}.
    {move,{literal,"ignored"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1947}]}.
    {call_ext,3,{extfunc,compile,compile,3}}.
    {test,is_eq_exact,{f,687},[{x,0},{atom,ok}]}.
    {test_heap,14,0}.
    {put_list,{y,5},nil,{x,0}}.
    {update_record,{atom,copy},
                   11,
                   {tr,{y,4},
                       {t_tuple,11,true,
                                #{1 => {t_atom,[options]},
                                  2 => nil,
                                  4 => {t_atom,[undefined]},
                                  5 => nil,
                                  6 => {t_integer,{1,1}},
                                  7 => {t_atom,[false]},
                                  8 => {t_integer,{999,999}},
                                  9 => nil,10 => nil,
                                  11 => {t_atom,[undefined]}}}},
                   {x,2},
                   {list,[2,{tr,{x,0},{t_cons,any,nil}},11,{y,5}]}}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1948}]}.
    {call_ext,3,{extfunc,compile,compile,3}}.
    {test,is_eq_exact,{f,686},[{x,0},{atom,ok}]}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1949}]}.
    {call_ext,3,{extfunc,compile,compile,3}}.
    {test,is_tagged_tuple,{f,685},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,685},[{x,1},{atom,simple}]}.
    {test_heap,12,0}.
    {update_record,{atom,copy},
                   11,
                   {tr,{y,4},
                       {t_tuple,11,true,
                                #{1 => {t_atom,[options]},
                                  2 => nil,
                                  4 => {t_atom,[undefined]},
                                  5 => nil,
                                  6 => {t_integer,{1,1}},
                                  7 => {t_atom,[false]},
                                  8 => {t_integer,{999,999}},
                                  9 => nil,10 => nil,
                                  11 => {t_atom,[undefined]}}}},
                   {x,2},
                   {list,[9,{literal,[dabstr]}]}}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1951}]}.
    {call_ext,3,{extfunc,compile,compile,3}}.
    {test,is_eq_exact,{f,684},[{x,0},{atom,ok}]}.
    {test_heap,12,0}.
    {update_record,{atom,copy},
                   11,
                   {tr,{y,4},
                       {t_tuple,11,true,
                                #{1 => {t_atom,[options]},
                                  2 => nil,
                                  4 => {t_atom,[undefined]},
                                  5 => nil,
                                  6 => {t_integer,{1,1}},
                                  7 => {t_atom,[false]},
                                  8 => {t_integer,{999,999}},
                                  9 => nil,10 => nil,
                                  11 => {t_atom,[undefined]}}}},
                   {x,2},
                   {list,[9,{literal,[to_core]}]}}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1952}]}.
    {call_ext,3,{extfunc,compile,compile,3}}.
    {test,is_eq_exact,{f,683},[{x,0},{atom,ok}]}.
    {test_heap,12,0}.
    {update_record,{atom,copy},
                   11,
                   {tr,{y,4},
                       {t_tuple,11,true,
                                #{1 => {t_atom,[options]},
                                  2 => nil,
                                  4 => {t_atom,[undefined]},
                                  5 => nil,
                                  6 => {t_integer,{1,1}},
                                  7 => {t_atom,[false]},
                                  8 => {t_integer,{999,999}},
                                  9 => nil,10 => nil,
                                  11 => {t_atom,[undefined]}}}},
                   {x,2},
                   {list,[9,{literal,[to_asm]}]}}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",1953}]}.
    {call_ext,3,{extfunc,compile,compile,3}}.
    {test,is_eq_exact,{f,682},[{x,0},{atom,ok}]}.
    {move,{literal,"simple.abstr"},{x,1}}.
    {move,{y,5},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1955}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,2}}.
    {move,{y,5},{x,0}}.
    {move,{literal,"simple.core"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1956}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{y,5},{x,0}}.
    {move,{literal,"simple.S"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1957}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{y,2},{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{y,4},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{literal,"ignored"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1959}]}.
    {call_ext,3,{extfunc,compile,compile_abstr,3}}.
    {test,is_eq_exact,{f,681},[{x,0},{atom,ok}]}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,4},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1960}]}.
    {call_ext,3,{extfunc,compile,compile_core,3}}.
    {test,is_eq_exact,{f,680},[{x,0},{atom,ok}]}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,4},{x,2}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1961}]}.
    {call_ext,3,{extfunc,compile,compile_asm,3}}.
    {test,is_eq_exact,{f,679},[{x,0},{atom,ok}]}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1963}]}.
    {call_ext,3,{extfunc,compile,compile_abstr,3}}.
    {test,is_tagged_tuple,{f,678},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,678},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,bs_start_match3,{f,678},2,[{x,1}],{x,1}}.
    {bs_match,{f,678},{x,1},{commands,[{ensure_at_least,0,8}]}}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1964}]}.
    {call_ext,3,{extfunc,compile,compile_core,3}}.
    {test,is_tagged_tuple,{f,677},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,677},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,bs_start_match3,{f,677},2,[{x,1}],{x,1}}.
    {bs_match,{f,677},{x,1},{commands,[{ensure_at_least,0,8}]}}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,3},{x,2}}.
    {init_yregs,{list,[{y,3}]}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1965}]}.
    {call_ext,3,{extfunc,compile,compile_asm,3}}.
    {test,is_tagged_tuple,{f,676},[{x,0},3,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,676},[{x,1},{atom,simple}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,bs_start_match3,{f,676},2,[{x,1}],{x,1}}.
    {bs_match,{f,676},{x,1},{commands,[{ensure_at_least,0,8}]}}.
    {move,{literal,"needs_defines.erl"},{x,1}}.
    {move,{y,6},{x,0}}.
    {move,{y,0},{y,6}}.
    {trim,1,6}.
    {line,[{location,"compile_SUITE.erl",1967}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,12,1}.
    {update_record,{atom,copy},
                   11,
                   {tr,{y,3},
                       {t_tuple,11,true,
                                #{1 => {t_atom,[options]},
                                  2 => nil,
                                  4 => {t_atom,[undefined]},
                                  5 => nil,
                                  6 => {t_integer,{1,1}},
                                  7 => {t_atom,[false]},
                                  8 => {t_integer,{999,999}},
                                  9 => nil,10 => nil,
                                  11 => {t_atom,[undefined]}}}},
                   {x,2},
                   {list,[5,
                          {literal,[compile_this,{'TEST_RESULT',whatever}]}]}}.
    {move,{literal,"ignored"},{x,1}}.
    {move,{y,0},{y,3}}.
    {trim,1,5}.
    {line,[{location,"compile_SUITE.erl",1968}]}.
    {call_ext,3,{extfunc,compile,compile,3}}.
    {test,is_eq_exact,{f,675},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,2,3}.
    {line,[{location,"compile_SUITE.erl",1970}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,674},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",1971}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,673},[{x,0},{atom,ok}]}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",1972}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,672},[{x,0},{atom,ok}]}.
    {move,{literal,"simple.beam"},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1973}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,671},[{x,0},{atom,ok}]}.
    {move,{literal,"needs_defines.beam"},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",1974}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,670},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,670}.
    {badmatch,{x,0}}.
  {label,671}.
    {line,[{location,"compile_SUITE.erl",1973}]}.
    {badmatch,{x,0}}.
  {label,672}.
    {line,[{location,"compile_SUITE.erl",1972}]}.
    {badmatch,{x,0}}.
  {label,673}.
    {line,[{location,"compile_SUITE.erl",1971}]}.
    {badmatch,{x,0}}.
  {label,674}.
    {line,[{location,"compile_SUITE.erl",1970}]}.
    {badmatch,{x,0}}.
  {label,675}.
    {line,[{location,"compile_SUITE.erl",1968}]}.
    {badmatch,{x,0}}.
  {label,676}.
    {line,[{location,"compile_SUITE.erl",1965}]}.
    {badmatch,{x,0}}.
  {label,677}.
    {line,[{location,"compile_SUITE.erl",1964}]}.
    {badmatch,{x,0}}.
  {label,678}.
    {line,[{location,"compile_SUITE.erl",1963}]}.
    {badmatch,{x,0}}.
  {label,679}.
    {line,[{location,"compile_SUITE.erl",1961}]}.
    {badmatch,{x,0}}.
  {label,680}.
    {line,[{location,"compile_SUITE.erl",1960}]}.
    {badmatch,{x,0}}.
  {label,681}.
    {line,[{location,"compile_SUITE.erl",1959}]}.
    {badmatch,{x,0}}.
  {label,682}.
    {line,[{location,"compile_SUITE.erl",1953}]}.
    {badmatch,{x,0}}.
  {label,683}.
    {line,[{location,"compile_SUITE.erl",1952}]}.
    {badmatch,{x,0}}.
  {label,684}.
    {line,[{location,"compile_SUITE.erl",1951}]}.
    {badmatch,{x,0}}.
  {label,685}.
    {line,[{location,"compile_SUITE.erl",1949}]}.
    {badmatch,{x,0}}.
  {label,686}.
    {line,[{location,"compile_SUITE.erl",1948}]}.
    {badmatch,{x,0}}.
  {label,687}.
    {line,[{location,"compile_SUITE.erl",1947}]}.
    {badmatch,{x,0}}.


{function, types_pp, 1, 689}.
  {label,688}.
    {line,[{location,"compile_SUITE.erl",1985}]}.
    {func_info,{atom,compile_SUITE},{atom,types_pp},1}.
  {label,689}.
    {test,is_list,{f,688},[{x,0}]}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{y,2}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1986}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,2},{x,1}}.
    {move,{x,0},{y,2}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1987}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{atom,types_pp},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1988}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {swap,{y,2},{x,0}}.
    {move,{literal,"types_pp.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1989}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{y,2},{x,0}}.
    {move,{literal,"types_pp.ssaopt"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1990}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1991}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,693},[{x,0},{atom,ok}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,dssaopt},{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",1993}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,692},[{x,0},2,{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",1994}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {test,is_tagged_tuple,{f,691},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {line,[{location,"compile_SUITE.erl",1995}]}.
    {call_ext,1,{extfunc,erlang,binary_to_list,1}}.
    {move,{atom,all},{x,2}}.
    {move,{literal,"\n"},{x,1}}.
    {call_ext,3,{extfunc,string,split,3}}.
    {line,[{location,"compile_SUITE.erl",1996}]}.
    {call,1,{f,695}}. % get_result_types/1
    {'%',{var_info,{x,0},[{type,{t_map,any,any}}]}}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{literal,"Calls: ~p~n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1997}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {test_heap,{alloc,[{words,1},{floats,0},{funs,1}]},0}.
    {make_fun3,{f,833},0,0,{x,0},{list,[{y,0}]}}.
    {move,
        {literal,
            [{make_atom,"'an_atom'"},
             {make_number,"number()"},
             {make_float,"3.14"},
             {make_integer,"17"},
             {make_integer_range,"0..3"},
             {make_nil,"nil()"},
             {make_list,"list(any())"},
             {make_list_of_ints,"list(integer())"},
             {make_maybe_improper_list,"maybe_improper_list(any(), any())"},
             {make_nonempty_list,"nonempty_list(any())"},
             {make_nonempty_improper_list,
                 "nonempty_improper_list(any(), ''end'')"},
             {make_empty_map,"#{}"},
             {make_map,"map()"},
             {make_map_known_types,"#{integer()=>float()}"},
             {make_fun_unknown_arity_known_type,"fun((...) -> number())"},
             {make_fun_known_arity_known_type,"fun((_, _) -> number())"},
             {make_fun_unknown_arity_unknown_type,"fun()"},
             {make_fun_known_arity_unknown_type,"fun((_, _))"},
             {make_unconstrained_tuple,"{...}"},
             {make_known_size_tuple,"{any(), any(), any(), any(), any()}"},
             {make_inexact_tuple,"{any(), any(), any(), ...}"},
             {make_union,
                 "'foo' | nonempty_list(1..3) | number(3, 7) | {'tag0', 1, 2} | {'tag1', 3, 4} | bitstring(8)"},
             {make_bitstring,"bitstring(8)"},
             {make_none,"none()"}]},
        {x,1}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",2032}]}.
    {call_ext,2,{extfunc,lists,foreach,2}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",2042}]}.
    {call_ext,1,{extfunc,file,del_dir_r,1}}.
    {test,is_eq_exact,{f,690},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,690}.
    {badmatch,{x,0}}.
  {label,691}.
    {line,[{location,"compile_SUITE.erl",1994}]}.
    {badmatch,{x,0}}.
  {label,692}.
    {line,[{location,"compile_SUITE.erl",1993}]}.
    {badmatch,{x,0}}.
  {label,693}.
    {line,[{location,"compile_SUITE.erl",1991}]}.
    {badmatch,{x,0}}.


{function, get_result_types, 1, 695}.
  {label,694}.
    {line,[{location,"compile_SUITE.erl",2048}]}.
    {func_info,{atom,compile_SUITE},{atom,get_result_types},1}.
  {label,695}.
    {move,{literal,#{}},{x,2}}.
    {move,{atom,none},{x,1}}.
    {call_only,3,{f,697}}. % get_result_types/3


{function, get_result_types, 3, 697}.
  {label,696}.
    {line,[{location,"compile_SUITE.erl",2051}]}.
    {func_info,{atom,compile_SUITE},{atom,get_result_types},3}.
  {label,697}.
    {'%',{var_info,{x,2},[{type,{t_map,any,any}}]}}.
    {test,is_nonempty_list,{f,701},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,0}}.
    {test,is_nonempty_list,{f,698},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,37}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,37}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,82}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,101}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,115}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,117}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,108}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,116}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,116}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,121}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,112}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_list,{x,5},{x,4},{x,5}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,101}]}.
    {test,is_nonempty_list,{f,698},[{x,5}]}.
    {get_hd,{x,5},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,4},{integer,58}]}.
    {test,is_nonempty_list,{f,698},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,698},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,6},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,6},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,6},{integer,37}]}.
    {test,is_nonempty_list,{f,698},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,6},{integer,37}]}.
    {test,is_nonempty_list,{f,698},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,6},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,6},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,6},{integer,32}]}.
    {test,is_nonempty_list,{f,698},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,4}}.
    {test,is_eq_exact,{f,698},[{x,6},{integer,32}]}.
    {move,{x,4},{x,1}}.
    {move,{x,5},{x,0}}.
    {call_only,3,{f,697}}. % get_result_types/3
  {label,698}.
    {allocate,3,4}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{literal,"="},{x,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2054}]}.
    {call_ext,2,{extfunc,string,split,2}}.
    {test,is_nonempty_list,{f,699},[{x,0}]}.
    {get_tl,{x,0},{x,0}}.
    {test,is_nonempty_list,{f,699},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_nonempty_list,{f,699},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_eq_exact,{f,699},[{x,2},{integer,32}]}.
    {test,is_nonempty_list,{f,699},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_eq_exact,{f,699},[{x,2},{integer,99}]}.
    {test,is_nonempty_list,{f,699},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_eq_exact,{f,699},[{x,2},{integer,97}]}.
    {test,is_nonempty_list,{f,699},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_eq_exact,{f,699},[{x,2},{integer,108}]}.
    {test,is_nonempty_list,{f,699},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_eq_exact,{f,699},[{x,2},{integer,108}]}.
    {test,is_nil,{f,699},[{x,0}]}.
    {move,{atom,all},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{literal,"`"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2057}]}.
    {call_ext,3,{extfunc,string,split,3}}.
    {test,is_nonempty_list,{f,699},[{x,0}]}.
    {get_tl,{x,0},{x,0}}.
    {test,is_nonempty_list,{f,699},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_nonempty_list,{f,699},[{x,0}]}.
    {get_tl,{x,0},{x,0}}.
    {test,is_nil,{f,699},[{x,0}]}.
    {put_map_assoc,{f,0},{y,1},{x,2},2,{list,[{x,1},{y,2}]}}.
    {jump,{f,700}}.
  {label,699}.
    {move,{y,1},{x,2}}.
  {label,700}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,3,{f,697},3}. % get_result_types/3
  {label,701}.
    {test,is_nil,{f,696},[{x,0}]}.
    {move,{x,2},{x,0}}.
    return.


{function, bs_init_writable, 1, 703}.
  {label,702}.
    {line,[{location,"compile_SUITE.erl",2071}]}.
    {func_info,{atom,compile_SUITE},{atom,bs_init_writable},1}.
  {label,703}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{y,2}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2072}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,2},{x,1}}.
    {move,{x,0},{y,2}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2073}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {swap,{y,2},{x,0}}.
    {move,{literal,"bs_init_writable.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2074}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {swap,{y,2},{x,0}}.
    {move,{literal,"bs_init_writable"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2075}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{literal,"bs_init_writable.S"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2076}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2077}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,709},[{x,0},{atom,ok}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,1}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,'S'},{x,0},{x,1}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{location,"compile_SUITE.erl",2078}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,708},[{x,0},{literal,{ok,bs_init_writable}}]}.
    {move,{y,0},{x,0}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",2079}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {test,is_tagged_tuple,{f,707},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {move,{literal,"({test,is_bitstr,.+})"},{x,1}}.
    {move,{literal,[global,multiline,{capture,all_but_first,list}]},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2082}]}.
    {call_ext,3,{extfunc,re,run,3}}.
    {test,is_eq_exact,{f,706},[{x,0},{atom,nomatch}]}.
    {move,{literal,"({test,is_binary,.+})"},{x,1}}.
    {move,{literal,[global,multiline,{capture,all_but_first,list}]},{x,2}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",2084}]}.
    {call_ext,3,{extfunc,re,run,3}}.
    {test,is_eq_exact,{f,705},[{x,0},{atom,nomatch}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",2085}]}.
    {call_ext,1,{extfunc,file,del_dir_r,1}}.
    {test,is_eq_exact,{f,704},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,704}.
    {badmatch,{x,0}}.
  {label,705}.
    {line,[{location,"compile_SUITE.erl",2084}]}.
    {badmatch,{x,0}}.
  {label,706}.
    {line,[{location,"compile_SUITE.erl",2082}]}.
    {badmatch,{x,0}}.
  {label,707}.
    {line,[{location,"compile_SUITE.erl",2079}]}.
    {badmatch,{x,0}}.
  {label,708}.
    {line,[{location,"compile_SUITE.erl",2078}]}.
    {badmatch,{x,0}}.
  {label,709}.
    {line,[{location,"compile_SUITE.erl",2077}]}.
    {badmatch,{x,0}}.


{function, annotations_pp, 1, 711}.
  {label,710}.
    {line,[{location,"compile_SUITE.erl",2093}]}.
    {func_info,{atom,compile_SUITE},{atom,annotations_pp},1}.
  {label,711}.
    {test,is_list,{f,710},[{x,0}]}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{y,2}}.
    {move,{x,0},{x,1}}.
    {move,{atom,data_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2094}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{y,2},{x,1}}.
    {move,{x,0},{y,2}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2095}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {move,{atom,types_pp},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2096}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {swap,{y,2},{x,0}}.
    {move,{literal,"annotations_pp.erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2097}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {move,{y,2},{x,0}}.
    {move,{literal,"annotations_pp.ssaopt"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2098}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2099}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,718},[{x,0},{atom,ok}]}.
    {test_heap,7,0}.
    {put_tuple2,{x,0},{list,[{atom,outdir},{y,2}]}}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,dssaopt},{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {init_yregs,{list,[{y,1}]}}.
    {line,[{location,"compile_SUITE.erl",2101}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,717},[{x,0},2,{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",2102}]}.
    {call_ext,1,{extfunc,file,read_file,1}}.
    {test,is_tagged_tuple,{f,716},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {line,[{location,"compile_SUITE.erl",2103}]}.
    {call_ext,1,{extfunc,erlang,binary_to_list,1}}.
    {move,{atom,all},{x,2}}.
    {move,{literal,"\n"},{x,1}}.
    {call_ext,3,{extfunc,string,split,3}}.
    {move,{x,0},{y,0}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"  %% Result type:"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2105}]}.
    {call,2,{f,720}}. % get_annotations/2
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {line,[{location,"compile_SUITE.erl",2106}]}.
    {gc_bif,length,{f,0},1,[{tr,{x,0},{t_list,any,nil}}],{x,0}}.
    {test,is_eq_exact,
          {f,715},
          [{tr,{x,0},{t_integer,{0,288230376151711743}}},{integer,10}]}.
    {move,{y,0},{x,1}}.
    {move,{literal,"  %% Unique:"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2108}]}.
    {call,2,{f,720}}. % get_annotations/2
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {line,[{location,"compile_SUITE.erl",2109}]}.
    {gc_bif,length,{f,0},1,[{tr,{x,0},{t_list,any,nil}}],{x,0}}.
    {test,is_eq_exact,
          {f,714},
          [{tr,{x,0},{t_integer,{0,288230376151711743}}},{integer,10}]}.
    {move,{y,0},{x,1}}.
    {trim,1,1}.
    {move,{literal,"  %% Aliased:"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2111}]}.
    {call,2,{f,720}}. % get_annotations/2
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {line,[{location,"compile_SUITE.erl",2112}]}.
    {gc_bif,length,{f,0},1,[{tr,{x,0},{t_list,any,nil}}],{x,0}}.
    {test,is_eq_exact,
          {f,713},
          [{tr,{x,0},{t_integer,{0,288230376151711743}}},{integer,13}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",2114}]}.
    {call_ext,1,{extfunc,file,del_dir_r,1}}.
    {test,is_eq_exact,{f,712},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,712}.
    {badmatch,{x,0}}.
  {label,713}.
    {line,[{location,"compile_SUITE.erl",2112}]}.
    {badmatch,{x,0}}.
  {label,714}.
    {line,[{location,"compile_SUITE.erl",2109}]}.
    {badmatch,{x,0}}.
  {label,715}.
    {line,[{location,"compile_SUITE.erl",2106}]}.
    {badmatch,{x,0}}.
  {label,716}.
    {line,[{location,"compile_SUITE.erl",2102}]}.
    {badmatch,{x,0}}.
  {label,717}.
    {line,[{location,"compile_SUITE.erl",2101}]}.
    {badmatch,{x,0}}.
  {label,718}.
    {line,[{location,"compile_SUITE.erl",2099}]}.
    {badmatch,{x,0}}.


{function, get_annotations, 2, 720}.
  {label,719}.
    {line,[{location,"compile_SUITE.erl",2117}]}.
    {func_info,{atom,compile_SUITE},{atom,get_annotations},2}.
  {label,720}.
    {'%',{var_info,{x,0},[{type,{t_cons,{t_integer,{32,121}},nil}}]}}.
    {test,is_nonempty_list,{f,722},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_nonempty_list,{f,721},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,721},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,3}}.
    {test,is_eq_exact,{f,721},[{x,5},{integer,32}]}.
    {test,is_nonempty_list,{f,721},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,3}}.
    {test,is_eq_exact,{f,721},[{x,5},{integer,32}]}.
    {test,is_nonempty_list,{f,721},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,3}}.
    {test,is_eq_exact,{f,721},[{x,5},{integer,37}]}.
    {test,is_nonempty_list,{f,721},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,3}}.
    {test,is_eq_exact,{f,721},[{x,5},{integer,37}]}.
    {test,is_nonempty_list,{f,721},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,3}}.
    {test,is_eq_exact,{f,721},[{x,5},{integer,32}]}.
    {test,is_nonempty_list,{f,721},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,3}}.
    {test,is_eq_exact,{f,721},[{x,5},{integer,32}]}.
    {test,is_nonempty_list,{f,721},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,3}}.
    {test,is_eq_exact,{f,721},[{x,5},{integer,32}]}.
    {test,is_nonempty_list,{f,721},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,3}}.
    {test,is_eq_exact,{f,721},[{x,5},{integer,32}]}.
    {test,is_eq_exact,
          {f,721},
          [{x,2},{tr,{x,0},{t_cons,{t_integer,{32,121}},nil}}]}.
    {allocate,1,5}.
    {move,{x,3},{y,0}}.
    {move,{x,4},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2118}]}.
    {call,2,{f,720}}. % get_annotations/2
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,721}.
    {call_only,2,{f,720}}. % get_annotations/2
  {label,722}.
    {test,is_nil,{f,719},[{x,1}]}.
    {move,nil,{x,0}}.
    return.


{function, option_order, 1, 724}.
  {label,723}.
    {line,[{location,"compile_SUITE.erl",2124}]}.
    {func_info,{atom,compile_SUITE},{atom,option_order},1}.
  {label,724}.
    {allocate_heap,0,{alloc,[{words,66},{floats,0},{funs,7}]},1}.
    {make_fun3,{f,828},0,0,{x,1},{list,[]}}.
    {make_fun3,{f,825},0,0,{x,2},{list,[]}}.
    {'%',{var_info,{x,2},[{fun_type,{t_atom,[ok]}}]}}.
    {make_fun3,{f,822},0,0,{x,3},{list,[]}}.
    {'%',{var_info,{x,3},[{fun_type,{t_atom,[ok]}}]}}.
    {make_fun3,{f,817},0,0,{x,4},{list,[]}}.
    {make_fun3,{f,814},0,0,{x,5},{list,[]}}.
    {'%',{var_info,{x,5},[{fun_type,{t_atom,[ok]}}]}}.
    {make_fun3,{f,811},0,0,{x,6},{list,[]}}.
    {'%',{var_info,{x,6},[{fun_type,{t_atom,[ok]}}]}}.
    {make_fun3,{f,806},0,0,{x,7},{list,[]}}.
    {put_tuple2,{x,7},
                {list,[{atom,records7},
                       {literal,<<"-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>},
                       {literal,[{"ERL_COMPILER_OPTIONS",
                                  "no_strict_record_tests"}]},
                       {literal,[no_strict_record_tests,strict_record_tests]},
                       {x,7}]}}.
    {put_list,{x,7},nil,{x,7}}.
    {put_tuple2,{x,6},
                {list,[{atom,records6},
                       {literal,<<"-compile(no_strict_record_tests).\n-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>},
                       {literal,[{"ERL_COMPILER_OPTIONS",
                                  "strict_record_tests"}]},
                       nil,
                       {x,6}]}}.
    {put_list,{x,6},{x,7},{x,6}}.
    {put_tuple2,{x,5},
                {list,[{atom,records5},
                       {literal,<<"-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>},
                       {literal,[{"ERL_COMPILER_OPTIONS",
                                  "strict_record_tests"}]},
                       {literal,[no_strict_record_tests]},
                       {x,5}]}}.
    {put_list,{x,5},{x,6},{x,5}}.
    {put_tuple2,{x,4},
                {list,[{atom,records4},
                       {literal,<<"-record(r, {x,y}).\nrec_test(#r{x=X,y=Y}) -> X + Y.">>},
                       {literal,[{"ERL_COMPILER_OPTIONS",
                                  "strict_record_tests"}]},
                       nil,
                       {x,4}]}}.
    {put_list,{x,4},{x,5},{x,4}}.
    {put_tuple2,{x,3},
                {list,[{atom,records3},
                       {literal,<<"-compile(no_strict_record_tests).\n-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>},
                       nil,
                       {literal,[strict_record_tests]},
                       {x,3}]}}.
    {put_list,{x,3},{x,4},{x,3}}.
    {put_tuple2,{x,2},
                {list,[{atom,records2},
                       {literal,<<"-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y.">>},
                       nil,
                       {literal,[no_strict_record_tests]},
                       {x,2}]}}.
    {put_list,{x,2},{x,3},{x,2}}.
    {put_tuple2,{x,1},
                {list,[{atom,records1},
                       {literal,<<"-record(r, {x,y}).\nrec_test(#r{x=X,y=Y}) -> X + Y.">>},
                       nil,
                       {literal,[strict_record_tests]},
                       {x,1}]}}.
    {put_list,{x,1},{x,2},{x,1}}.
    {put_list,{literal,{spec5,<<"-compile([warn_missing_spec,nowarn_missing_spec]).\nfoo() -> ok.">>,
                              [{"ERL_COMPILER_OPTIONS","nowarn_missing_spec"}],
                              [warn_missing_spec],
                              []}},
              {x,1},
              {x,1}}.
    {put_list,
        {literal,
            {spec4,<<"-compile(warn_missing_spec).\nfoo() -> ok.">>,
                [{"ERL_COMPILER_OPTIONS","nowarn_missing_spec"}],
                [],
                {warnings,[{{2,1},erl_lint,{missing_spec,{foo,0}}}]}}},
        {x,1},
        {x,1}}.
    {put_list,{literal,{spec3,<<"-compile(nowarn_missing_spec).\nfoo() -> ok.">>,
                              [{"ERL_COMPILER_OPTIONS","nowarn_missing_spec"}],
                              [warn_missing_spec],
                              []}},
              {x,1},
              {x,1}}.
    {put_list,{literal,{spec2,<<"foo() -> ok.">>,
                              [{"ERL_COMPILER_OPTIONS","warn_missing_spec"}],
                              [nowarn_missing_spec],
                              []}},
              {x,1},
              {x,1}}.
    {put_list,{literal,{spec1,<<"-compile(nowarn_missing_spec).\nfoo() -> ok.">>,
                              [],
                              [warn_missing_spec],
                              []}},
              {x,1},
              {x,1}}.
    {line,[{location,"compile_SUITE.erl",2261}]}.
    {call,2,{f,741}}. % run/2
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, compile_and_verify, 3, 726}.
  {label,725}.
    {line,[{location,"compile_SUITE.erl",2268}]}.
    {func_info,{atom,compile_SUITE},{atom,compile_and_verify},3}.
  {label,726}.
    {'%',{var_info,{x,2},
                   [{type,{t_list,{t_atom,[debug_info,no_postopt]},nil}}]}}.
    {allocate,3,3}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{literal,".erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2269}]}.
    {call_ext,2,{extfunc,filename,basename,2}}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {swap,{y,2},{x,0}}.
    {move,{y,0},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2270}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,730},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,730},[{x,1},{tr,{y,2},{t_atom,any}}]}.
    {move,{literal,[compile_info]},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",2272}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,729},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tuple,{f,729},[{x,1}]}.
    {test,test_arity,{f,729},[{x,1},2]}.
    {get_tuple_element,{x,1},1,{x,2}}.
    {test,is_nonempty_list,{f,729},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,2}}.
    {test,is_tagged_tuple,{f,729},[{x,3},2,{atom,compile_info}]}.
    {test,is_nil,{f,729},[{x,2}]}.
    {get_tuple_element,{x,1},0,{x,1}}.
    {test,is_eq_exact,{f,729},[{x,1},{tr,{y,1},{t_atom,any}}]}.
    {get_tuple_element,{x,3},1,{x,2}}.
    {move,{integer,1},{x,1}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {move,{atom,options},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2273}]}.
    {call_ext,3,{extfunc,lists,keyfind,3}}.
    {test,is_tuple,{f,728},[{x,0}]}.
    {test,test_arity,{f,728},[{x,0},2]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {test,is_eq_exact,
          {f,727},
          [{x,0},{tr,{y,0},{t_list,{t_atom,[debug_info,no_postopt]},nil}}]}.
    {deallocate,1}.
    return.
  {label,727}.
    {line,[{location,"compile_SUITE.erl",2274}]}.
    {badmatch,{x,0}}.
  {label,728}.
    {line,[{location,"compile_SUITE.erl",2273}]}.
    {badmatch,{x,0}}.
  {label,729}.
    {line,[{location,"compile_SUITE.erl",2271}]}.
    {badmatch,{x,0}}.
  {label,730}.
    {line,[{location,"compile_SUITE.erl",2270}]}.
    {badmatch,{x,0}}.


{function, get_unique_beam_files, 0, 732}.
  {label,731}.
    {line,[{location,"compile_SUITE.erl",2276}]}.
    {func_info,{atom,compile_SUITE},{atom,get_unique_beam_files},0}.
  {label,732}.
    {move,{literal,".beam"},{x,0}}.
    {call_only,1,{f,734}}. % get_unique_files/1


{function, get_unique_files, 1, 734}.
  {label,733}.
    {line,[{location,"compile_SUITE.erl",2279}]}.
    {func_info,{atom,compile_SUITE},{atom,get_unique_files},1}.
  {label,734}.
    {'%',{var_info,{x,0},[{type,{t_cons,{t_integer,{46,114}},nil}}]}}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {move,{atom,compile_SUITE},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2280}]}.
    {call_ext,1,{extfunc,code,which,1}}.
    {call_ext,1,{extfunc,filename,dirname,1}}.
    {test_heap,2,1}.
    {put_list,{integer,42},{y,0},{x,1}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {line,[{location,"compile_SUITE.erl",2281}]}.
    {call_ext,1,{extfunc,filelib,wildcard,1}}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,798},1}. % '-get_unique_files/1-lc$^0/1-0-'/2


{function, is_cloned, 2, 736}.
  {label,735}.
    {line,[{location,"compile_SUITE.erl",2284}]}.
    {func_info,{atom,compile_SUITE},{atom,is_cloned},2}.
  {label,736}.
    {'%',{var_info,{x,1},[{type,{t_cons,{t_integer,{46,114}},nil}}]}}.
    {allocate,0,2}.
    {line,[{location,"compile_SUITE.erl",2285}]}.
    {call_ext,2,{extfunc,filename,basename,2}}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {line,[{location,"compile_SUITE.erl",2286}]}.
    {call_ext_last,1,{extfunc,test_lib,is_cloned_mod,1},0}.


{function, is_lfe_module, 2, 738}.
  {label,737}.
    {line,[{location,"compile_SUITE.erl",2288}]}.
    {func_info,{atom,compile_SUITE},{atom,is_lfe_module},2}.
  {label,738}.
    {'%',{var_info,{x,1},[{type,{t_cons,{t_integer,{46,114}},nil}}]}}.
    {allocate,0,2}.
    {line,[{location,"compile_SUITE.erl",2289}]}.
    {call_ext,2,{extfunc,filename,basename,2}}.
    {test,is_nonempty_list,{f,739},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_eq_exact,{f,739},[{x,1},{integer,108}]}.
    {test,is_nonempty_list,{f,739},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_eq_exact,{f,739},[{x,1},{integer,102}]}.
    {test,is_nonempty_list,{f,739},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_eq_exact,{f,739},[{x,1},{integer,101}]}.
    {test,is_nonempty_list,{f,739},[{x,0}]}.
    {get_hd,{x,0},{x,0}}.
    {bif,'=:=',{f,0},[{x,0},{integer,95}],{x,0}}.
    {deallocate,0}.
    return.
  {label,739}.
    {move,{atom,false},{x,0}}.
    {deallocate,0}.
    return.


{function, run, 2, 741}.
  {label,740}.
    {line,[{location,"compile_SUITE.erl",2296}]}.
    {func_info,{atom,compile_SUITE},{atom,run},2}.
  {label,741}.
    {'%',
     {var_info,
      {x,1},
      [{type,
        {t_cons,
         {t_union,none,none,none,
          [{{5,{t_atom,[records1]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[records1]},
               2 => {t_bitstring,16,false},
               3 => nil,
               4 => {t_cons,{t_atom,[strict_record_tests]},nil},
               5 => {t_fun,1,{'-option_order/1-fun-6-',1},any}}}},
           {{5,{t_atom,[records2]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[records2]},
               2 => {t_bitstring,128,false},
               3 => nil,
               4 => {t_cons,{t_atom,[no_strict_record_tests]},nil},
               5 => {t_fun,1,{'-option_order/1-fun-5-',1},{t_atom,[ok]}}}}},
           {{5,{t_atom,[records3]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[records3]},
               2 => {t_bitstring,16,false},
               3 => nil,
               4 => {t_cons,{t_atom,[strict_record_tests]},nil},
               5 => {t_fun,1,{'-option_order/1-fun-4-',1},{t_atom,[ok]}}}}},
           {{5,{t_atom,[records4]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[records4]},
               2 => {t_bitstring,16,false},
               3 =>
                {t_cons,
                 {t_tuple,2,true,
                  #{1 => {t_cons,any,any},2 => {t_cons,any,any}}},
                 nil},
               4 => nil,
               5 => {t_fun,1,{'-option_order/1-fun-3-',1},any}}}},
           {{5,{t_atom,[records5]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[records5]},
               2 => {t_bitstring,128,false},
               3 =>
                {t_cons,
                 {t_tuple,2,true,
                  #{1 => {t_cons,any,any},2 => {t_cons,any,any}}},
                 nil},
               4 => {t_cons,{t_atom,[no_strict_record_tests]},nil},
               5 => {t_fun,1,{'-option_order/1-fun-2-',1},{t_atom,[ok]}}}}},
           {{5,{t_atom,[records6]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[records6]},
               2 => {t_bitstring,16,false},
               3 =>
                {t_cons,
                 {t_tuple,2,true,
                  #{1 => {t_cons,any,any},2 => {t_cons,any,any}}},
                 nil},
               4 => nil,
               5 => {t_fun,1,{'-option_order/1-fun-1-',1},{t_atom,[ok]}}}}},
           {{5,{t_atom,[records7]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[records7]},
               2 => {t_bitstring,128,false},
               3 =>
                {t_cons,
                 {t_tuple,2,true,
                  #{1 => {t_cons,any,any},2 => {t_cons,any,any}}},
                 nil},
               4 =>
                {t_cons,
                 {t_atom,[no_strict_record_tests,strict_record_tests]},
                 nil},
               5 => {t_fun,1,{'-option_order/1-fun-0-',1},any}}}},
           {{5,{t_atom,[spec1]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[spec1]},
               2 => {t_bitstring,8,false},
               3 => nil,
               4 => {t_cons,{t_atom,[warn_missing_spec]},nil},
               5 => nil}}},
           {{5,{t_atom,[spec2]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[spec2]},
               2 => {t_bitstring,32,false},
               3 =>
                {t_cons,
                 {t_tuple,2,true,
                  #{1 => {t_cons,any,any},2 => {t_cons,any,any}}},
                 nil},
               4 => {t_cons,{t_atom,[nowarn_missing_spec]},nil},
               5 => nil}}},
           {{5,{t_atom,[spec3]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[spec3]},
               2 => {t_bitstring,8,false},
               3 =>
                {t_cons,
                 {t_tuple,2,true,
                  #{1 => {t_cons,any,any},2 => {t_cons,any,any}}},
                 nil},
               4 => {t_cons,{t_atom,[warn_missing_spec]},nil},
               5 => nil}}},
           {{5,{t_atom,[spec4]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[spec4]},
               2 => {t_bitstring,8,false},
               3 =>
                {t_cons,
                 {t_tuple,2,true,
                  #{1 => {t_cons,any,any},2 => {t_cons,any,any}}},
                 nil},
               4 => nil,
               5 =>
                {t_tuple,2,true,
                 #{1 => {t_atom,[warnings]},
                   2 => {t_cons,{t_tuple,0,false,#{}},nil}}}}}},
           {{5,{t_atom,[spec5]}},
            {t_tuple,5,true,
             #{1 => {t_atom,[spec5]},
               2 => {t_bitstring,8,false},
               3 =>
                {t_cons,
                 {t_tuple,2,true,
                  #{1 => {t_cons,any,any},2 => {t_cons,any,any}}},
                 nil},
               4 => {t_cons,{t_atom,[warn_missing_spec]},nil},
               5 => nil}}}],
          none},
         nil}}]}}.
    {test_heap,{alloc,[{words,1},{floats,0},{funs,1}]},2}.
    {make_fun3,{f,788},0,0,{x,0},{list,[{x,0}]}}.
    {move,{x,1},{x,2}}.
    {move,nil,{x,1}}.
    {line,[{location,"compile_SUITE.erl",2318}]}.
    {call_ext_only,3,{extfunc,lists,foldl,3}}.


{function, run_test, 5, 743}.
  {label,742}.
    {line,[{location,"compile_SUITE.erl",2320}]}.
    {func_info,{atom,compile_SUITE},{atom,run_test},5}.
  {label,743}.
    {'%',{var_info,{x,4},
                   [{type,{t_union,{t_atom,[none]},
                                   none,none,none,
                                   {t_fun,1,any,any}}}]}}.
    {allocate,6,5}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,4},{y,1}}.
    {move,{x,3},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {move,{x,0},{y,5}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2321}]}.
    {call,1,{f,752}}. % run_test_putenv/1
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {line,[{location,"compile_SUITE.erl",2322}]}.
    {call_ext,0,{extfunc,test_lib,uniq,0}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"warnings"},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{y,0}}.
    {move,{literal,".erl"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2323}]}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{y,5},{x,1}}.
    {move,{x,0},{y,5}}.
    {move,{atom,priv_dir},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2324}]}.
    {call_ext,2,{extfunc,proplists,get_value,2}}.
    {test_heap,12,1}.
    {put_list,{y,4},nil,{x,1}}.
    {put_list,{literal,"\", 1). "},{x,1},{x,1}}.
    {put_list,{y,5},{x,1},{x,1}}.
    {put_list,{literal,"). -file( \""},{x,1},{x,1}}.
    {put_list,{y,0},{x,1},{x,1}}.
    {put_list,{literal,"-module("},{x,1},{x,1}}.
    {move,{x,0},{y,4}}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2326}]}.
    {call_ext,1,{extfunc,erlang,iolist_to_binary,1}}.
    {move,{y,4},{x,2}}.
    {move,{y,5},{x,1}}.
    {move,{x,0},{y,5}}.
    {init_yregs,{list,[{y,4}]}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2327}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {test_heap,6,1}.
    {put_list,{atom,return},{y,2},{x,1}}.
    {put_list,{atom,export_all},{x,1},{x,1}}.
    {put_list,{atom,binary},{x,1},{y,4}}.
    {move,{x,0},{y,0}}.
    {move,{y,5},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2329}]}.
    {call_ext,2,{extfunc,file,write_file,2}}.
    {test,is_eq_exact,{f,750},[{x,0},{atom,ok}]}.
    {test_heap,6,0}.
    {put_list,{atom,report},{y,2},{x,0}}.
    {put_list,{atom,export_all},{x,0},{x,0}}.
    {put_list,{atom,binary},{x,0},{x,1}}.
    {init_yregs,{list,[{y,2}]}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2332}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {move,{y,4},{x,1}}.
    {init_yregs,{list,[{y,4}]}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2335}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {move,{x,0},{y,4}}.
    {test,is_tagged_tuple,{f,749},[{x,0},4,{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {init_yregs,{list,[{y,0}]}}.
    {line,[{location,"compile_SUITE.erl",2336}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_function2,
          {f,744},
          [{tr,{y,1},
               {t_union,{t_atom,[none]},none,none,none,{t_fun,1,any,any}}},
           {integer,1}]}.
    {get_tuple_element,{y,4},1,{y,5}}.
    {get_tuple_element,{y,4},2,{x,2}}.
    {move,nil,{x,1}}.
    {move,{y,1},{y,4}}.
    {trim,3,3}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2340}]}.
    {call_ext,3,{extfunc,code,load_binary,3}}.
    {test,is_tagged_tuple,{f,748},[{x,0},2,{atom,module}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_eq_exact,{f,748},[{x,1},{y,2}]}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{y,1}}.
    {trim,1,2}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2341}]}.
    {call_fun2,{atom,safe},1,{tr,{x,1},{t_fun,1,any,any}}}.
    {test,is_eq_exact,{f,747},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",2342}]}.
    {call,1,{f,754}}. % run_test_unsetenv/1
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2343}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {test,is_eq_exact,{f,746},[{x,0},{atom,true}]}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",2344}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,744}.
    {move,{y,3},{x,0}}.
    {init_yregs,{list,[{y,1},{y,3}]}}.
    {line,[{location,"compile_SUITE.erl",2347}]}.
    {call,1,{f,754}}. % run_test_unsetenv/1
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {get_tuple_element,{y,4},3,{x,0}}.
    {init_yregs,{list,[{y,4}]}}.
    {line,[{location,"compile_SUITE.erl",2348}]}.
    {call,1,{f,756}}. % get_warnings/1
    {'%',
        {var_info,
            {x,0},
            [{type,
                 {t_union,none,nil,none,
                     [{{2,{t_atom,[warnings]}},
                       {t_tuple,2,true,#{1 => {t_atom,[warnings]}}}}],
                     none}}]}}.
    {move,{x,0},{y,4}}.
    {test,is_tuple,
          {f,745},
          [{tr,{x,0},
               {t_union,none,nil,none,
                        [{{2,{t_atom,[warnings]}},
                          {t_tuple,2,true,#{1 => {t_atom,[warnings]}}}}],
                        none}}]}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {move,{y,5},{x,1}}.
    {move,{y,4},{y,5}}.
    {trim,5,1}.
    {line,[{location,"compile_SUITE.erl",2353}]}.
    {call,2,{f,760}}. % print_warnings/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,745}.
    {move,nil,{x,0}}.
    {deallocate,6}.
    return.
  {label,746}.
    {line,[{location,"compile_SUITE.erl",2343}]}.
    {badmatch,{x,0}}.
  {label,747}.
    {line,[{location,"compile_SUITE.erl",2341}]}.
    {badmatch,{x,0}}.
  {label,748}.
    {line,[{location,"compile_SUITE.erl",2340}]}.
    {badmatch,{x,0}}.
  {label,749}.
    {line,[{location,"compile_SUITE.erl",2335}]}.
    {badmatch,{x,0}}.
  {label,750}.
    {line,[{location,"compile_SUITE.erl",2329}]}.
    {badmatch,{x,0}}.


{function, run_test_putenv, 1, 752}.
  {label,751}.
    {line,[{location,"compile_SUITE.erl",2358}]}.
    {func_info,{atom,compile_SUITE},{atom,run_test_putenv},1}.
  {label,752}.
    {allocate,0,1}.
    {line,[{location,"compile_SUITE.erl",2359}]}.
    {call,1,{f,783}}. % '-run_test_putenv/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,nil}]}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, run_test_unsetenv, 1, 754}.
  {label,753}.
    {line,[{location,"compile_SUITE.erl",2362}]}.
    {func_info,{atom,compile_SUITE},{atom,run_test_unsetenv},1}.
  {label,754}.
    {allocate,0,1}.
    {line,[{location,"compile_SUITE.erl",2363}]}.
    {call,1,{f,778}}. % '-run_test_unsetenv/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,nil}]}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, get_warnings, 1, 756}.
  {label,755}.
    {line,[{location,"compile_SUITE.erl",2366}]}.
    {func_info,{atom,compile_SUITE},{atom,get_warnings},1}.
  {label,756}.
    {test,is_nil,{f,757},[{x,0}]}.
    return.
  {label,757}.
    {test,is_nonempty_list,{f,758},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,758},[{x,1}]}.
    {test,test_arity,{f,758},[{x,1},2]}.
    {test,is_nil,{f,758},[{x,2}]}.
    {test_heap,3,2}.
    {get_tuple_element,{x,1},1,{x,0}}.
    {put_tuple2,{x,0},{list,[{atom,warnings},{x,0}]}}.
    return.
  {label,758}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,warnings},{x,0}]}}.
    return.


{function, print_warnings, 2, 760}.
  {label,759}.
    {line,[{location,"compile_SUITE.erl",2374}]}.
    {func_info,{atom,compile_SUITE},{atom,print_warnings},2}.
  {label,760}.
    {'%',{var_info,{x,1},[{type,{t_bitstring,8,false}}]}}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {move,{literal,[global]},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{literal,<<"\n">>},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2375}]}.
    {call_ext,3,{extfunc,binary,split,3}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",2376}]}.
    {call,2,{f,774}}. % '-print_warnings/2-lc$^0/1-0-'/2
    {'%',{var_info,{x,0},[{type,{t_list,{t_list,any,nil},nil}}]}}.
    {line,[{location,"compile_SUITE.erl",2377}]}.
    {call_ext,1,{extfunc,io,put_chars,1}}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, print_warning, 2, 762}.
  {label,761}.
    {line,[{location,"compile_SUITE.erl",2380}]}.
    {func_info,{atom,compile_SUITE},{atom,print_warning},2}.
  {label,762}.
    {test,is_tuple,{f,765},[{x,0}]}.
    {test,test_arity,{f,765},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {test,is_tuple,{f,765},[{x,2}]}.
    {test,test_arity,{f,765},[{x,2},2]}.
    {allocate,5,3}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,0},{y,4}}.
    {get_tuple_element,{x,2},0,{y,3}}.
    {get_tuple_element,{x,2},1,{y,2}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2381}]}.
    {call_ext,2,{extfunc,lists,nth,2}}.
    {move,{x,0},{y,1}}.
    {test,bs_start_match3,{f,766},1,[{x,0}],{x,0}}.
    {gc_bif,'-',{f,763},1,[{y,2},{integer,1}],{x,1}}.
    {jump,{f,764}}.
  {label,763}.
    {move,{atom,bad_size},{x,1}}.
  {label,764}.
    {test,bs_get_binary2,
          {f,766},
          2,
          [{tr,{x,0},{t_bs_context,1}},
           {tr,{x,1},
               {t_union,{t_atom,[bad_size]},none,{t_number,any},none,none}},
           8,
           {field_flags,[{anno,[2382,{file,"compile_SUITE.erl"}]},
                         unsigned,big]}],
          {x,1}}.
    {bs_match,{f,766},{x,0},{commands,[{ensure_at_least,0,8}]}}.
    {move,{literal,<<" ">>},{x,2}}.
    {move,{literal,[global]},{x,3}}.
    {move,{x,1},{x,0}}.
    {move,{literal,<<"[^\t]">>},{x,1}}.
    {line,[{location,"compile_SUITE.erl",2383}]}.
    {call_ext,4,{extfunc,re,replace,4}}.
    {test_heap,2,1}.
    {put_list,{x,0},{literal,["^"]},{y,0}}.
    {get_tuple_element,{y,4},1,{x,0}}.
    {get_tuple_element,{y,4},2,{x,1}}.
    {move,{atom,format_error},{x,2}}.
    {swap,{x,0},{x,1}}.
    {move,{y,0},{y,4}}.
    {trim,1,4}.
    {line,[{location,"compile_SUITE.erl",2386}]}.
    {apply,1}.
    {test_heap,6,1}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{y,1},{x,0},{x,0}}.
    {put_list,{y,2},{x,0},{x,1}}.
    {move,{y,0},{y,2}}.
    {trim,2,2}.
    {move,{literal,"~p:~p: ~ts\n"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2385}]}.
    {call_ext,2,{extfunc,io_lib,format,2}}.
    {test_heap,8,1}.
    {put_list,{y,1},{literal,["\n\n"]},{x,1}}.
    {put_list,{literal,"\n"},{x,1},{x,1}}.
    {put_list,{y,0},{x,1},{x,1}}.
    {put_list,{x,0},{x,1},{x,0}}.
    {deallocate,2}.
    return.
  {label,765}.
    {move,nil,{x,0}}.
    return.
  {label,766}.
    {line,[{location,"compile_SUITE.erl",2382}]}.
    {badmatch,{y,1}}.


{function, fail, 0, 768}.
  {label,767}.
    {line,[{location,"compile_SUITE.erl",2392}]}.
    {func_info,{atom,compile_SUITE},{atom,fail},0}.
  {label,768}.
    {move,{atom,failed},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2393}]}.
    {call_ext_only,1,{extfunc,ct,fail,1}}.


{function, module_info, 0, 770}.
  {label,769}.
    {line,[]}.
    {func_info,{atom,compile_SUITE},{atom,module_info},0}.
  {label,770}.
    {move,{atom,compile_SUITE},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,get_module_info,1}}.


{function, module_info, 1, 772}.
  {label,771}.
    {line,[]}.
    {func_info,{atom,compile_SUITE},{atom,module_info},1}.
  {label,772}.
    {move,{x,0},{x,1}}.
    {move,{atom,compile_SUITE},{x,0}}.
    {call_ext_only,2,{extfunc,erlang,get_module_info,2}}.


{function, '-print_warnings/2-lc$^0/1-0-', 2, 774}.
  {label,773}.
    {line,[{location,"compile_SUITE.erl",2376}]}.
    {func_info,{atom,compile_SUITE},{atom,'-print_warnings/2-lc$^0/1-0-'},2}.
  {label,774}.
    {test,is_nonempty_list,{f,775},[{x,0}]}.
    {allocate,2,2}.
    {move,{x,1},{y,1}}.
    {get_list,{x,0},{x,0},{y,0}}.
    {call,2,{f,762}}. % print_warning/2
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{x,0},{y,1}}.
    {trim,1,1}.
    {move,{x,2},{x,0}}.
    {call,2,{f,774}}. % '-print_warnings/2-lc$^0/1-0-'/2
    {'%',{var_info,{x,0},[{type,{t_list,{t_list,any,nil},nil}}]}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,775}.
    {test,is_nil,{f,776},[{x,0}]}.
    return.
  {label,776}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-run_test_unsetenv/1-lc$^0/1-0-', 1, 778}.
  {label,777}.
    {line,[{location,"compile_SUITE.erl",2363}]}.
    {func_info,{atom,compile_SUITE},
               {atom,'-run_test_unsetenv/1-lc$^0/1-0-'},
               1}.
  {label,778}.
    {test,is_nonempty_list,{f,780},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_tuple,{f,779},[{x,1}]}.
    {test,test_arity,{f,779},[{x,1},2]}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {call_ext,1,{extfunc,os,unsetenv,1}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,778},1}. % '-run_test_unsetenv/1-lc$^0/1-0-'/1
  {label,779}.
    {call_only,1,{f,778}}. % '-run_test_unsetenv/1-lc$^0/1-0-'/1
  {label,780}.
    {test,is_nil,{f,781},[{x,0}]}.
    return.
  {label,781}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-run_test_putenv/1-lc$^0/1-0-', 1, 783}.
  {label,782}.
    {line,[{location,"compile_SUITE.erl",2359}]}.
    {func_info,{atom,compile_SUITE},{atom,'-run_test_putenv/1-lc$^0/1-0-'},1}.
  {label,783}.
    {test,is_nonempty_list,{f,785},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_tuple,{f,784},[{x,1}]}.
    {test,test_arity,{f,784},[{x,1},2]}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {call_ext,2,{extfunc,os,putenv,2}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,783},1}. % '-run_test_putenv/1-lc$^0/1-0-'/1
  {label,784}.
    {call_only,1,{f,783}}. % '-run_test_putenv/1-lc$^0/1-0-'/1
  {label,785}.
    {test,is_nil,{f,786},[{x,0}]}.
    return.
  {label,786}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-run/2-fun-0-', 3, 788}.
  {label,787}.
    {line,[{location,"compile_SUITE.erl",2297}]}.
    {func_info,{atom,compile_SUITE},{atom,'-run/2-fun-0-'},3}.
  {label,788}.
    {test,is_tuple,{f,796},[{x,0}]}.
    {test,test_arity,{f,796},[{x,0},5]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,4}}.
    {get_tuple_element,{x,0},2,{x,5}}.
    {get_tuple_element,{x,0},3,{x,6}}.
    {get_tuple_element,{x,0},4,{x,7}}.
    {test,is_function2,{f,791},[{x,7},{integer,1}]}.
    {allocate,2,8}.
    {move,{x,3},{y,0}}.
    {'catch',{y,1},{f,789}}.
    {move,{x,6},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,{x,7},{x,4}}.
    {move,{x,2},{x,0}}.
    {move,{x,5},{x,2}}.
    {line,[{location,"compile_SUITE.erl",2298}]}.
    {call,5,{f,743}}. % run_test/5
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
  {label,789}.
    {catch_end,{y,1}}.
    {test,is_eq_exact,{f,790},[{x,0},{atom,ok}]}.
    {deallocate,2}.
    return.
  {label,790}.
    {test_heap,6,1}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{atom,ok},{x,0},{x,0}}.
    {put_list,{y,0},{x,0},{x,1}}.
    {trim,2,0}.
    {move,{literal,"~nTest ~p failed. Expected~n  ~p~nbut got~n  ~p~n"},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",2302}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {call_last,0,{f,768},0}. % fail/0
  {label,791}.
    {test,is_list,{f,792},[{x,7}]}.
    {jump,{f,793}}.
  {label,792}.
    {test,is_tuple,{f,796},[{x,7}]}.
  {label,793}.
    {allocate_heap,8,2,8}.
    {init_yregs,{list,[{y,7}]}}.
    {move,{x,3},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,5},{y,2}}.
    {move,{x,6},{y,3}}.
    {move,{x,7},{y,4}}.
    {move,{x,1},{y,5}}.
    {move,{x,2},{y,6}}.
    {put_list,{x,3},nil,{x,1}}.
    {move,{literal,"### ~s\n"},{x,0}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",2308}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {'catch',{y,7},{f,794}}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,3},{x,3}}.
    {move,{atom,none},{x,4}}.
    {move,{y,6},{x,0}}.
    {init_yregs,{list,[{y,1},{y,2},{y,3},{y,6}]}}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",2309}]}.
    {call,5,{f,743}}. % run_test/5
    {'%',
        {var_info,
            {x,0},
            [{type,
                 {t_union,none,nil,none,
                     [{{2,{t_atom,[warnings]}},
                       {t_tuple,2,true,#{1 => {t_atom,[warnings]}}}}],
                     none}}]}}.
  {label,794}.
    {catch_end,{y,7}}.
    {test,is_eq_exact,
          {f,795},
          [{x,0},
           {tr,{y,4},
               {t_union,none,
                        {t_list,any,any},
                        none,
                        {t_tuple,0,false,#{}},
                        none}}]}.
    {move,{y,5},{x,0}}.
    {deallocate,8}.
    return.
  {label,795}.
    {test_heap,6,1}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{y,4},{x,0},{x,0}}.
    {put_list,{y,0},{x,0},{x,1}}.
    {trim,8,0}.
    {move,{literal,"~nTest ~p failed. Expected~n  ~p~nbut got~n  ~p~n"},{x,0}}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",2313}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {call_last,0,{f,768},0}. % fail/0
  {label,796}.
    {call_only,2,{f,952}}. % '-run/2-inlined-0-'/2


{function, '-get_unique_files/1-lc$^0/1-0-', 2, 798}.
  {label,797}.
    {line,[{location,"compile_SUITE.erl",2281}]}.
    {func_info,{atom,compile_SUITE},{atom,'-get_unique_files/1-lc$^0/1-0-'},2}.
  {label,798}.
    {'%',{var_info,{x,1},[{type,{t_cons,{t_integer,{46,114}},nil}}]}}.
    {test,is_nonempty_list,{f,803},[{x,0}]}.
    {allocate,3,2}.
    {move,{x,1},{y,2}}.
    {get_list,{x,0},{y,1},{y,0}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2282}]}.
    {call,2,{f,736}}. % is_cloned/2
    {select_val,{x,0},
                {f,802},
                {list,[{atom,false},{f,799},{atom,true},{f,800}]}}.
  {label,799}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,738}}. % is_lfe_module/2
    {'%',{var_info,{x,0},[{type,{t_atom,[false,true]}}]}}.
    {test,is_eq_exact,{f,801},[{x,0},{atom,true}]}.
  {label,800}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,798},3}. % '-get_unique_files/1-lc$^0/1-0-'/2
  {label,801}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{y,1},{y,2}}.
    {trim,2,1}.
    {line,[{location,"compile_SUITE.erl",2281}]}.
    {call,2,{f,798}}. % '-get_unique_files/1-lc$^0/1-0-'/2
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,802}.
    {move,{atom,badarg},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2282}]}.
    {call_ext_last,1,{extfunc,erlang,error,1},3}.
  {label,803}.
    {test,is_nil,{f,804},[{x,0}]}.
    return.
  {label,804}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",2281}]}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-option_order/1-fun-0-', 1, 806}.
  {label,805}.
    {line,[{location,"compile_SUITE.erl",2250}]}.
    {func_info,{atom,compile_SUITE},{atom,'-option_order/1-fun-0-'},1}.
  {label,806}.
    {allocate,1,1}.
    {'try',{y,0},{f,807}}.
    {move,{x,0},{x,1}}.
    {move,{atom,rec_test},{x,2}}.
    {move,{literal,{r,1,2,3}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2251}]}.
    {apply,1}.
    {try_end,{y,0}}.
    {test,is_eq_exact,{f,809},[{x,0},{integer,3}]}.
    {call_last,0,{f,768},1}. % fail/0
  {label,807}.
    {try_case,{y,0}}.
    {test,is_eq_exact,
          {f,808},
          [{tr,{x,0},{t_atom,[error,exit,throw]}},{atom,error}]}.
    {test,is_eq_exact,{f,808},[{x,1},{literal,{badrecord,{r,1,2,3}}}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,808}.
    {bif,raise,{f,0},[{x,2},{x,1}],{x,0}}.
  {label,809}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",2251}]}.
    {try_case_end,{x,0}}.


{function, '-option_order/1-fun-1-', 1, 811}.
  {label,810}.
    {line,[{location,"compile_SUITE.erl",2239}]}.
    {func_info,{atom,compile_SUITE},{atom,'-option_order/1-fun-1-'},1}.
  {label,811}.
    {allocate,0,1}.
    {move,{x,0},{x,1}}.
    {move,{atom,rec_test},{x,2}}.
    {move,{literal,{r,1,2,3}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2240}]}.
    {apply,1}.
    {test,is_eq_exact,{f,812},[{x,0},{integer,3}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,812}.
    {badmatch,{x,0}}.


{function, '-option_order/1-fun-2-', 1, 814}.
  {label,813}.
    {line,[{location,"compile_SUITE.erl",2227}]}.
    {func_info,{atom,compile_SUITE},{atom,'-option_order/1-fun-2-'},1}.
  {label,814}.
    {allocate,0,1}.
    {move,{x,0},{x,1}}.
    {move,{atom,rec_test},{x,2}}.
    {move,{literal,{r,1,2,3}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2228}]}.
    {apply,1}.
    {test,is_eq_exact,{f,815},[{x,0},{integer,3}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,815}.
    {badmatch,{x,0}}.


{function, '-option_order/1-fun-3-', 1, 817}.
  {label,816}.
    {line,[{location,"compile_SUITE.erl",2211}]}.
    {func_info,{atom,compile_SUITE},{atom,'-option_order/1-fun-3-'},1}.
  {label,817}.
    {allocate,1,1}.
    {'try',{y,0},{f,818}}.
    {move,{x,0},{x,1}}.
    {move,{atom,rec_test},{x,2}}.
    {move,{literal,{r,1,2,3}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2212}]}.
    {apply,1}.
    {try_end,{y,0}}.
    {test,is_eq_exact,{f,820},[{x,0},{integer,3}]}.
    {call_last,0,{f,768},1}. % fail/0
  {label,818}.
    {try_case,{y,0}}.
    {test,is_eq_exact,
          {f,819},
          [{tr,{x,0},{t_atom,[error,exit,throw]}},{atom,error}]}.
    {test,is_eq_exact,{f,819},[{x,1},{atom,function_clause}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,819}.
    {bif,raise,{f,0},[{x,2},{x,1}],{x,0}}.
  {label,820}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",2212}]}.
    {try_case_end,{x,0}}.


{function, '-option_order/1-fun-4-', 1, 822}.
  {label,821}.
    {line,[{location,"compile_SUITE.erl",2200}]}.
    {func_info,{atom,compile_SUITE},{atom,'-option_order/1-fun-4-'},1}.
  {label,822}.
    {allocate,0,1}.
    {move,{x,0},{x,1}}.
    {move,{atom,rec_test},{x,2}}.
    {move,{literal,{r,1,2,3}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2201}]}.
    {apply,1}.
    {test,is_eq_exact,{f,823},[{x,0},{integer,3}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,823}.
    {badmatch,{x,0}}.


{function, '-option_order/1-fun-5-', 1, 825}.
  {label,824}.
    {line,[{location,"compile_SUITE.erl",2188}]}.
    {func_info,{atom,compile_SUITE},{atom,'-option_order/1-fun-5-'},1}.
  {label,825}.
    {allocate,0,1}.
    {move,{x,0},{x,1}}.
    {move,{atom,rec_test},{x,2}}.
    {move,{literal,{r,1,2,3}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2189}]}.
    {apply,1}.
    {test,is_eq_exact,{f,826},[{x,0},{integer,3}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.
  {label,826}.
    {badmatch,{x,0}}.


{function, '-option_order/1-fun-6-', 1, 828}.
  {label,827}.
    {line,[{location,"compile_SUITE.erl",2172}]}.
    {func_info,{atom,compile_SUITE},{atom,'-option_order/1-fun-6-'},1}.
  {label,828}.
    {allocate,1,1}.
    {'try',{y,0},{f,829}}.
    {move,{x,0},{x,1}}.
    {move,{atom,rec_test},{x,2}}.
    {move,{literal,{r,1,2,3}},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2173}]}.
    {apply,1}.
    {try_end,{y,0}}.
    {test,is_eq_exact,{f,831},[{x,0},{integer,3}]}.
    {call_last,0,{f,768},1}. % fail/0
  {label,829}.
    {try_case,{y,0}}.
    {test,is_eq_exact,
          {f,830},
          [{tr,{x,0},{t_atom,[error,exit,throw]}},{atom,error}]}.
    {test,is_eq_exact,{f,830},[{x,1},{atom,function_clause}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,830}.
    {bif,raise,{f,0},[{x,2},{x,1}],{x,0}}.
  {label,831}.
    {line,[{scope,[2]},{location,"compile_SUITE.erl",2173}]}.
    {try_case_end,{x,0}}.


{function, '-types_pp/1-fun-0-', 2, 833}.
  {label,832}.
    {line,[{location,"compile_SUITE.erl",2032}]}.
    {func_info,{atom,compile_SUITE},{atom,'-types_pp/1-fun-0-'},2}.
  {label,833}.
    {'%',{var_info,{x,1},[{type,{t_map,any,any}}]}}.
    {test,is_tuple,{f,835},[{x,0}]}.
    {test,test_arity,{f,835},[{x,0},2]}.
    {allocate,3,2}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {get_tuple_element,{x,0},0,{y,0}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2033}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {bif,map_get,
         {f,0},
         [{tr,{x,0},{t_list,{t_integer,{0,1114111}},nil}},
          {tr,{y,1},{t_map,any,any}}],
         {x,0}}.
    {get_tuple_element,{y,2},1,{x,1}}.
    {test,is_eq_exact,{f,834},[{x,0},{x,1}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,3}.
    return.
  {label,834}.
    {test_heap,6,2}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {put_list,{y,0},{x,0},{x,1}}.
    {move,{literal,"Expected type of ~p is ~s, found ~s"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",2038}]}.
    {call_ext_last,2,{extfunc,ct,fail,2},3}.
  {label,835}.
    {call_only,1,{f,954}}. % '-types_pp/1-inlined-0-'/1


{function, '-compile_partition_warnings/2-fun-0-', 1, 837}.
  {label,836}.
    {line,[{location,"compile_SUITE.erl",1931}]}.
    {func_info,{atom,compile_SUITE},
               {atom,'-compile_partition_warnings/2-fun-0-'},
               1}.
  {label,837}.
    {test,is_tuple,{f,836},[{x,0}]}.
    {test,test_arity,{f,836},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_tuple,{f,838},[{x,1}]}.
    {test,test_arity,{f,838},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,2}}.
    {test,is_integer,{f,838},[{x,2}]}.
    {get_tuple_element,{x,1},1,{x,2}}.
    {test,is_integer,{f,838},[{x,2}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,838}.
    {test,is_integer,{f,836},[{x,1}]}.
    {move,{atom,false},{x,0}}.
    return.


{function, '-forms_to_terms/1-lc$^0/1-0-', 1, 840}.
  {label,839}.
    {line,[{location,"compile_SUITE.erl",1800}]}.
    {func_info,{atom,compile_SUITE},{atom,'-forms_to_terms/1-lc$^0/1-0-'},1}.
  {label,840}.
    {test,is_nonempty_list,{f,841},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {call_ext,1,{extfunc,erl_parse,anno_to_term,1}}.
    {swap,{y,0},{x,0}}.
    {call,1,{f,840}}. % '-forms_to_terms/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,841}.
    {test,is_nil,{f,842},[{x,0}]}.
    return.
  {label,842}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-bc_options/1-fun-0-', 2, 844}.
  {label,843}.
    {line,[{location,"compile_SUITE.erl",1716}]}.
    {func_info,{atom,compile_SUITE},{atom,'-bc_options/1-fun-0-'},2}.
  {label,844}.
    {test,is_tuple,{f,846},[{x,0}]}.
    {test,test_arity,{f,846},[{x,0},3]}.
    {allocate,3,2}.
    {get_tuple_element,{x,0},0,{y,2}}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {move,{y,0},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{y,1},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1717}]}.
    {call,3,{f,591}}. % highest_opcode/3
    {test,is_eq_exact,{f,845},[{x,0},{y,2}]}.
    {move,{atom,ok},{x,0}}.
    {deallocate,3}.
    return.
  {label,845}.
    {test_heap,8,1}.
    {put_list,{y,2},nil,{x,1}}.
    {put_list,{x,0},{x,1},{x,0}}.
    {put_list,{y,0},{x,0},{x,0}}.
    {put_list,{y,1},{x,0},{x,1}}.
    {trim,3,0}.
    {move,{literal,"*** module ~p, options ~p => got ~p; expected ~p\n"},
          {x,0}}.
    {line,[{location,"compile_SUITE.erl",1721}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,846}.
    {call_only,1,{f,946}}. % '-bc_options/1-inlined-0-'/1


{function, '-env_compiler_options/1-fun-0-', 1, 848}.
  {label,847}.
    {line,[{location,"compile_SUITE.erl",1664}]}.
    {func_info,{atom,compile_SUITE},{atom,'-env_compiler_options/1-fun-0-'},1}.
  {label,848}.
    {test,is_tuple,{f,847},[{x,0}]}.
    {test,test_arity,{f,847},[{x,0},2]}.
    {allocate,1,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{y,0}}.
    {move,{literal,"ERL_COMPILER_OPTIONS"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1665}]}.
    {call_ext,2,{extfunc,os,putenv,2}}.
    {test,is_eq_exact,{f,850},[{x,0},{atom,true}]}.
    {line,[{location,"compile_SUITE.erl",1666}]}.
    {call_ext,0,{extfunc,compile,env_compiler_options,0}}.
    {test,is_eq_exact,{f,849},[{x,0},{y,0}]}.
    {deallocate,1}.
    return.
  {label,849}.
    {badmatch,{x,0}}.
  {label,850}.
    {line,[{location,"compile_SUITE.erl",1665}]}.
    {badmatch,{x,0}}.


{function, '-compiler_modules/0-lc$^0/1-0-', 1, 852}.
  {label,851}.
    {line,[{location,"compile_SUITE.erl",1650}]}.
    {func_info,{atom,compile_SUITE},{atom,'-compiler_modules/0-lc$^0/1-0-'},1}.
  {label,852}.
    {test,is_nonempty_list,{f,853},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {call_ext,1,{extfunc,filename,basename,1}}.
    {move,{literal,".beam"},{x,1}}.
    {call_ext,2,{extfunc,filename,rootname,2}}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {swap,{y,0},{x,0}}.
    {call,1,{f,852}}. % '-compiler_modules/0-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,{t_list,{t_atom,any},nil}}]}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,853}.
    {test,is_nil,{f,854},[{x,0}]}.
    return.
  {label,854}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-do_pre_load_check/1-lc$^1/1-1-', 1, 856}.
  {label,855}.
    {line,[{location,"compile_SUITE.erl",1602}]}.
    {func_info,{atom,compile_SUITE},
               {atom,'-do_pre_load_check/1-lc$^1/1-1-'},
               1}.
  {label,856}.
    {test,is_nonempty_list,{f,858},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_tagged_tuple,{f,857},[{x,1},3,{atom,code}]}.
    {get_tuple_element,{x,1},1,{x,2}}.
    {test,is_eq_exact,{f,857},[{x,2},{atom,ensure_loaded}]}.
    {get_tuple_element,{x,1},2,{x,1}}.
    {test,is_nonempty_list,{f,857},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_nil,{f,857},[{x,1}]}.
    {allocate,1,3}.
    {move,{x,2},{y,0}}.
    {call,1,{f,856}}. % '-do_pre_load_check/1-lc$^1/1-1-'/1
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,857}.
    {call_only,1,{f,856}}. % '-do_pre_load_check/1-lc$^1/1-1-'/1
  {label,858}.
    {test,is_nil,{f,859},[{x,0}]}.
    return.
  {label,859}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-do_pre_load_check/1-lc$^0/1-0-', 1, 861}.
  {label,860}.
    {line,[{location,"compile_SUITE.erl",1596}]}.
    {func_info,{atom,compile_SUITE},
               {atom,'-do_pre_load_check/1-lc$^0/1-0-'},
               1}.
  {label,861}.
    {test,is_nonempty_list,{f,862},[{x,0}]}.
    {allocate,2,1}.
    {get_list,{x,0},{y,1},{y,0}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1594}]}.
    {call_ext,1,{extfunc,code,delete,1}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",1595}]}.
    {call_ext,1,{extfunc,code,purge,1}}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,861},1}. % '-do_pre_load_check/1-lc$^0/1-0-'/1
  {label,862}.
    {test,is_nil,{f,863},[{x,0}]}.
    return.
  {label,863}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",1596}]}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-format_descs/2-lc$^0/1-0-', 2, 865}.
  {label,864}.
    {line,[{location,"compile_SUITE.erl",1535}]}.
    {func_info,{atom,compile_SUITE},{atom,'-format_descs/2-lc$^0/1-0-'},2}.
  {label,865}.
    {test,is_nonempty_list,{f,867},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,0}}.
    {test,is_tuple,{f,866},[{x,2}]}.
    {test,test_arity,{f,866},[{x,2},2]}.
    {allocate,2,3}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{y,1}}.
    {get_tuple_element,{x,2},1,{x,0}}.
    {line,[{location,"compile_SUITE.erl",1534}]}.
    {call_ext,1,{extfunc,lists,flatten,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,546}}. % strip_prefix/2
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{x,0},{y,1}}.
    {trim,1,1}.
    {move,{x,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",1535}]}.
    {call,2,{f,865}}. % '-format_descs/2-lc$^0/1-0-'/2
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,866}.
    {call_only,2,{f,865}}. % '-format_descs/2-lc$^0/1-0-'/2
  {label,867}.
    {test,is_nil,{f,868},[{x,0}]}.
    return.
  {label,868}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-messages/1-fun-0-', 1, 870}.
  {label,869}.
    {line,[{location,"compile_SUITE.erl",1528}]}.
    {func_info,{atom,compile_SUITE},{atom,'-messages/1-fun-0-'},1}.
  {label,870}.
    {test,is_tuple,{f,869},[{x,0}]}.
    {test,test_arity,{f,869},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,0}}.
    {test,is_tuple,{f,871},[{x,1}]}.
    {test,test_arity,{f,871},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,1}}.
    {swap,{x,0},{x,1}}.
    {call_only,2,{f,544}}. % format_descs/2
  {label,871}.
    {swap,{x,0},{x,1}}.
    {call_only,2,{f,544}}. % format_descs/2


{function, '-asm/1-fun-0-', 2, 873}.
  {label,872}.
    {line,[{location,"compile_SUITE.erl",1338}]}.
    {func_info,{atom,compile_SUITE},{atom,'-asm/1-fun-0-'},2}.
  {label,873}.
    {call_only,2,{f,471}}. % do_asm/2


{function, '-remove_compiler_gen/1-lc$^0/1-0-', 1, 875}.
  {label,874}.
    {line,[{location,"compile_SUITE.erl",1299}]}.
    {func_info,{atom,compile_SUITE},
               {atom,'-remove_compiler_gen/1-lc$^0/1-0-'},
               1}.
  {label,875}.
    {test,is_nonempty_list,{f,876},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {call,1,{f,460}}. % remove_compiler_gen_1/1
    {swap,{y,0},{x,0}}.
    {call,1,{f,875}}. % '-remove_compiler_gen/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,876}.
    {test,is_nil,{f,877},[{x,0}]}.
    return.
  {label,877}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, '-undo_var_translation/1-fun-0-', 1, 879}.
  {label,878}.
    {line,[{location,"compile_SUITE.erl",1192}]}.
    {func_info,{atom,compile_SUITE},{atom,'-undo_var_translation/1-fun-0-'},1}.
  {label,879}.
    {allocate,2,1}.
    {init_yregs,{list,[{y,1}]}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",1193}]}.
    {call_ext,1,{extfunc,cerl,is_c_var,1}}.
    {select_val,{x,0},
                {f,885},
                {list,[{atom,false},{f,884},{atom,true},{f,880}]}}.
  {label,880}.
    {move,{y,0},{x,0}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1195}]}.
    {call_ext,1,{extfunc,cerl,var_name,1}}.
    {'try',{y,1},{f,882}}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1196}]}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {try_end,{y,1}}.
    {test,is_nonempty_list,{f,884},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {test,is_eq_exact,
          {f,884},
          [{tr,{x,1},{t_integer,{0,1114111}}},{integer,95}]}.
    {test,is_nonempty_list,{f,881},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_eq_exact,
          {f,881},
          [{tr,{x,1},{t_integer,{0,1114111}}},{integer,88}]}.
    {move,{x,2},{x,0}}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",1198}]}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,cerl,update_c_var,2},2}.
  {label,881}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",1200}]}.
    {call_ext,1,{extfunc,erlang,list_to_atom,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,cerl,update_c_var,2},2}.
  {label,882}.
    {try_case,{y,1}}.
    {test,is_eq_exact,
          {f,883},
          [{tr,{x,0},{t_atom,[error,exit,throw]}},{atom,error}]}.
    {test,is_ne_exact,{f,884},[{x,1},{atom,badarg}]}.
  {label,883}.
    {bif,raise,{f,0},[{x,2},{x,1}],{x,0}}.
  {label,884}.
    {move,{y,0},{x,0}}.
    {deallocate,2}.
    return.
  {label,885}.
    {line,[{scope,[3]},{location,"compile_SUITE.erl",1193}]}.
    {case_end,{x,0}}.


{function, '-core_roundtrip/1-fun-0-', 2, 887}.
  {label,886}.
    {line,[{location,"compile_SUITE.erl",1133}]}.
    {func_info,{atom,compile_SUITE},{atom,'-core_roundtrip/1-fun-0-'},2}.
  {label,887}.
    {call_only,2,{f,403}}. % do_core_roundtrip/2


{function, '-core_pp/1-fun-1-', 2, 889}.
  {label,888}.
    {line,[{location,"compile_SUITE.erl",1076}]}.
    {func_info,{atom,compile_SUITE},{atom,'-core_pp/1-fun-1-'},2}.
  {label,889}.
    {call_only,2,{f,384}}. % do_core_pp/2


{function, '-core_pp/1-lc$^0/1-0-', 1, 891}.
  {label,890}.
    {line,[{location,"compile_SUITE.erl",1075}]}.
    {func_info,{atom,compile_SUITE},{atom,'-core_pp/1-lc$^0/1-0-'},1}.
  {label,891}.
    {'%',{var_info,{x,0},[{type,{t_list,any,nil}}]}}.
    {test,is_nonempty_list,{f,892},[{x,0}]}.
    {allocate,3,1}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {get_list,{x,0},{x,0},{y,2}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {line,[{location,"compile_SUITE.erl",1074}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_tagged_tuple,{f,893},[{x,0},2,{atom,ok}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tuple,{f,893},[{x,1}]}.
    {test,test_arity,{f,893},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{y,1}}.
    {get_tuple_element,{x,1},1,{x,1}}.
    {test,is_nonempty_list,{f,893},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tagged_tuple,{f,893},[{x,2},2,{atom,abstract_code}]}.
    {get_tuple_element,{x,2},1,{y,0}}.
    {test,is_tagged_tuple,{f,893},[{y,0},2,{atom,raw_abstract_v1}]}.
    {test,is_nil,{f,893},[{x,1}]}.
    {move,{y,2},{x,0}}.
    {move,{y,0},{y,2}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",1075}]}.
    {call,1,{f,891}}. % '-core_pp/1-lc$^0/1-0-'/1
    {'%',{var_info,{x,0},[{type,{t_list,{t_tuple,2,true,#{}},nil}}]}}.
    {test_heap,5,1}.
    {get_tuple_element,{y,1},1,{x,1}}.
    {put_tuple2,{x,1},{list,[{y,0},{x,1}]}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {deallocate,2}.
    return.
  {label,892}.
    return.
  {label,893}.
    {line,[{location,"compile_SUITE.erl",1072}]}.
    {badmatch,{x,0}}.


{function, '-install_crypto_key/1-fun-0-', 2, 895}.
  {label,894}.
    {line,[{location,"compile_SUITE.erl",811}]}.
    {func_info,{atom,compile_SUITE},{atom,'-install_crypto_key/1-fun-0-'},2}.
  {label,895}.
    {'%',{var_info,{x,1},[{type,{t_cons,{t_integer,{32,121}},nil}}]}}.
    {test,is_tuple,{f,896},[{x,0}]}.
    {test,is_tagged_tuple,
          {f,898},
          [{tr,{x,0},{t_tuple,0,false,#{}}},4,{atom,debug_info}]}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,898},[{x,2},{atom,des3_cbc}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,896}.
    {select_val,{x,0},
                {f,898},
                {list,[{atom,clear},{f,897},{atom,init},{f,897}]}}.
  {label,897}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,898}.
    {call_only,1,{f,948}}. % '-install_crypto_key/1-inlined-0-'/1


{function, '-encrypted_abstr_1/2-fun-0-', 3, 900}.
  {label,899}.
    {line,[{location,"compile_SUITE.erl",718}]}.
    {func_info,{atom,compile_SUITE},{atom,'-encrypted_abstr_1/2-fun-0-'},3}.
  {label,900}.
    {allocate,3,3}.
    {init_yregs,{list,[{y,0}]}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",719}]}.
    {call_ext,1,{extfunc,file,set_cwd,1}}.
    {test,is_eq_exact,{f,911},[{x,0},{atom,ok}]}.
    {move,{literal,[encrypt_debug_info,report]},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",721}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,910},[{x,0},{atom,error}]}.
    {move,{literal,"erlang"},{x,1}}.
    {move,{atom,user_config},{x,0}}.
    {line,[{location,"compile_SUITE.erl",727}]}.
    {call_ext,2,{extfunc,filename,basedir,2}}.
    {move,{literal,".erlang.crypt"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",726}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {swap,{y,1},{x,0}}.
    {move,{literal,".erlang.crypt"},{x,1}}.
    {line,[{location,"compile_SUITE.erl",730}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,0}}.
    {move,{literal,"better use another key here"},{x,1}}.
    {move,{literal,".erlang.crypt"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",732}]}.
    {call,2,{f,239}}. % write_crypt_file/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,"better use yet another key here"},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",733}]}.
    {call,2,{f,239}}. % write_crypt_file/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,"better use the home key here"},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"compile_SUITE.erl",734}]}.
    {call,2,{f,239}}. % write_crypt_file/2
    {'%',{var_info,{x,0},[{type,{t_atom,[ok]}}]}}.
    {move,{literal,[encrypt_debug_info,report]},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",737}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,909},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,erl_abstract_code},{x,1}}.
    {move,{literal,"simple.beam"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",738}]}.
    {call,2,{f,246}}. % verify_abstract/2
    {'%',{var_info,{x,0},
                   [{type,{t_tuple,2,true,#{1 => {t_atom,[debug_info]}}}}]}}.
    {move,{literal,".erlang.crypt"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",739}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,908},[{x,0},{atom,ok}]}.
    {line,[{location,"compile_SUITE.erl",740}]}.
    {call_ext,0,{extfunc,beam_lib,clear_crypto_key_fun,0}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {move,{literal,"simple.beam"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",744}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_eq_exact,
        {f,907},
        [{x,0},
         {literal,
             {error,beam_lib,
                 {key_missing_or_invalid,"simple.beam",abstract_code}}}]}.
    {move,{literal,[encrypt_debug_info,report]},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",747}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,906},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,erl_abstract_code},{x,1}}.
    {move,{literal,"simple.beam"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",748}]}.
    {call,2,{f,246}}. % verify_abstract/2
    {'%',{var_info,{x,0},
                   [{type,{t_tuple,2,true,#{1 => {t_atom,[debug_info]}}}}]}}.
    {move,{y,0},{x,0}}.
    {trim,1,2}.
    {line,[{location,"compile_SUITE.erl",749}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,905},[{x,0},{atom,ok}]}.
    {line,[{location,"compile_SUITE.erl",750}]}.
    {call_ext,0,{extfunc,beam_lib,clear_crypto_key_fun,0}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {move,{literal,"simple.beam"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",754}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_eq_exact,
        {f,904},
        [{x,0},
         {literal,
             {error,beam_lib,
                 {key_missing_or_invalid,"simple.beam",abstract_code}}}]}.
    {move,{literal,[encrypt_debug_info,report]},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{y,0},{y,1}}.
    {trim,1,1}.
    {line,[{location,"compile_SUITE.erl",758}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,903},[{x,0},{literal,{ok,simple}}]}.
    {move,{atom,erl_abstract_code},{x,1}}.
    {move,{literal,"simple.beam"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",759}]}.
    {call,2,{f,246}}. % verify_abstract/2
    {'%',{var_info,{x,0},
                   [{type,{t_tuple,2,true,#{1 => {t_atom,[debug_info]}}}}]}}.
    {move,{y,0},{x,0}}.
    {trim,1,0}.
    {line,[{location,"compile_SUITE.erl",760}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,902},[{x,0},{atom,ok}]}.
    {line,[{location,"compile_SUITE.erl",762}]}.
    {call_ext,0,{extfunc,beam_lib,clear_crypto_key_fun,0}}.
    {move,{literal,[abstract_code]},{x,1}}.
    {move,{literal,"simple.beam"},{x,0}}.
    {line,[{location,"compile_SUITE.erl",764}]}.
    {call_ext,2,{extfunc,beam_lib,chunks,2}}.
    {test,is_eq_exact,
        {f,901},
        [{x,0},
         {literal,
             {error,beam_lib,
                 {key_missing_or_invalid,"simple.beam",abstract_code}}}]}.
    {deallocate,0}.
    return.
  {label,901}.
    {line,[{location,"compile_SUITE.erl",763}]}.
    {badmatch,{x,0}}.
  {label,902}.
    {line,[{location,"compile_SUITE.erl",760}]}.
    {badmatch,{x,0}}.
  {label,903}.
    {line,[{location,"compile_SUITE.erl",758}]}.
    {badmatch,{x,0}}.
  {label,904}.
    {line,[{location,"compile_SUITE.erl",753}]}.
    {badmatch,{x,0}}.
  {label,905}.
    {line,[{location,"compile_SUITE.erl",749}]}.
    {badmatch,{x,0}}.
  {label,906}.
    {line,[{location,"compile_SUITE.erl",747}]}.
    {badmatch,{x,0}}.
  {label,907}.
    {line,[{location,"compile_SUITE.erl",743}]}.
    {badmatch,{x,0}}.
  {label,908}.
    {line,[{location,"compile_SUITE.erl",739}]}.
    {badmatch,{x,0}}.
  {label,909}.
    {line,[{location,"compile_SUITE.erl",737}]}.
    {badmatch,{x,0}}.
  {label,910}.
    {line,[{location,"compile_SUITE.erl",721}]}.
    {badmatch,{x,0}}.
  {label,911}.
    {line,[{location,"compile_SUITE.erl",719}]}.
    {badmatch,{x,0}}.


{function, '-other_output/1-lc$^0/1-0-', 1, 913}.
  {label,912}.
    {line,[{location,"compile_SUITE.erl",598}]}.
    {func_info,{atom,compile_SUITE},{atom,'-other_output/1-lc$^0/1-0-'},1}.
  {label,913}.
    {test,is_nonempty_list,{f,915},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",600}]}.
    {bif,element,{f,0},[{integer,1},{x,1}],{x,1}}.
    {select_val,{x,1},
                {f,917},
                {list,[{atom,attribute},
                       {f,914},
                       {atom,eof},
                       {f,914},
                       {atom,function},
                       {f,914}]}}.
  {label,914}.
    {call_only,1,{f,913}}. % '-other_output/1-lc$^0/1-0-'/1
  {label,915}.
    {test,is_nil,{f,916},[{x,0}]}.
    return.
  {label,916}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",598}]}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.
  {label,917}.
    {line,[{location,"compile_SUITE.erl",600}]}.
    {case_end,{x,1}}.


{function, '-p_listings/3-fun-1-', 3, 919}.
  {label,918}.
    {line,[{location,"compile_SUITE.erl",574}]}.
    {func_info,{atom,compile_SUITE},{atom,'-p_listings/3-fun-1-'},3}.
  {label,919}.
    {test,is_tuple,{f,923},[{x,0}]}.
    {test,test_arity,{f,923},[{x,0},2]}.
    {allocate,5,3}.
    {init_yregs,{list,[{y,0},{y,1}]}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,3}}.
    {move,{x,2},{y,4}}.
    {move,{literal,[positive]},{x,0}}.
    {line,[{location,"compile_SUITE.erl",575}]}.
    {call_ext,1,{extfunc,erlang,unique_integer,1}}.
    {line,[{location,"compile_SUITE.erl",576}]}.
    {call_ext,1,{extfunc,erlang,integer_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,4},{x,0}}.
    {init_yregs,{list,[{y,4}]}}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"compile_SUITE.erl",577}]}.
    {call_ext,1,{extfunc,file,make_dir,1}}.
    {test,is_eq_exact,{f,926},[{x,0},{atom,ok}]}.
    {'try',{y,4},{f,922}}.
    {get_tuple_element,{y,3},0,{x,2}}.
    {get_tuple_element,{y,3},1,{x,3}}.
    {'try',{y,3},{f,920}}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {init_yregs,{list,[{y,2}]}}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",579}]}.
    {call,4,{f,281}}. % do_listing/4
    {'%',{var_info,{x,0},[{type,{t_atom,[true]}}]}}.
    {try_end,{y,3}}.
    {move,{atom,ok},{y,3}}.
    {jump,{f,921}}.
  {label,920}.
    {try_case,{y,3}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,2}}.
    {move,{x,2},{x,0}}.
    build_stacktrace.
    {test_heap,6,1}.
    {put_list,{x,0},nil,{x,0}}.
    {put_list,{y,0},{x,0},{x,0}}.
    {put_list,{y,2},{x,0},{x,1}}.
    {init_yregs,{list,[{y,0},{y,2},{y,3}]}}.
    {move,{literal,"~p:~p\n~p\n"},{x,0}}.
    {line,[{scope,[5]},{location,"compile_SUITE.erl",583}]}.
    {call_ext,2,{extfunc,io,format,2}}.
    {move,{atom,error},{y,3}}.
  {label,921}.
    {try_end,{y,4}}.
    {move,{literal,"*"},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",587}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {call_ext,1,{extfunc,filelib,wildcard,1}}.
    {call,1,{f,933}}. % '-p_listings/3-lc$^0/1-1-'/1
    {'%',{var_info,{x,0},[{type,nil}]}}.
    {move,{y,1},{x,0}}.
    {move,{y,3},{y,4}}.
    {trim,4,1}.
    {line,[{scope,[2,3]},{location,"compile_SUITE.erl",588}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,924},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,922}.
    {try_case,{y,4}}.
    {move,{x,2},{y,2}}.
    {move,{x,1},{y,3}}.
    {move,{literal,"*"},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",587}]}.
    {call_ext,2,{extfunc,filename,join,2}}.
    {call_ext,1,{extfunc,filelib,wildcard,1}}.
    {call,1,{f,928}}. % '-p_listings/3-lc$^0/1-2-'/1
    {'%',{var_info,{x,0},[{type,nil}]}}.
    {move,{y,1},{x,0}}.
    {move,{y,2},{y,4}}.
    {trim,3,2}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",588}]}.
    {call_ext,1,{extfunc,file,del_dir,1}}.
    {test,is_eq_exact,{f,925},[{x,0},{atom,ok}]}.
    {bif,raise,{f,0},[{y,1},{y,0}],{x,0}}.
  {label,923}.
    {call_only,1,{f,950}}. % '-p_listings/3-inlined-0-'/1
  {label,924}.
    {line,[{scope,[1]},{location,"compile_SUITE.erl",578}]}.
    {badmatch,{x,0}}.
  {label,925}.
    {line,[{scope,[0]},{location,"compile_SUITE.erl",578}]}.
    {badmatch,{x,0}}.
  {label,926}.
    {line,[{scope,[6]},{location,"compile_SUITE.erl",577}]}.
    {badmatch,{x,0}}.


{function, '-p_listings/3-lc$^0/1-2-', 1, 928}.
  {label,927}.
    {line,[{location,"compile_SUITE.erl",587}]}.
    {func_info,{atom,compile_SUITE},{atom,'-p_listings/3-lc$^0/1-2-'},1}.
  {label,928}.
    {test,is_nonempty_list,{f,929},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",586}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,931},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,928},1}. % '-p_listings/3-lc$^0/1-2-'/1
  {label,929}.
    {test,is_nil,{f,930},[{x,0}]}.
    return.
  {label,930}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",587}]}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.
  {label,931}.
    {line,[{location,"compile_SUITE.erl",586}]}.
    {badmatch,{x,0}}.


{function, '-p_listings/3-lc$^0/1-1-', 1, 933}.
  {label,932}.
    {line,[{location,"compile_SUITE.erl",587}]}.
    {func_info,{atom,compile_SUITE},{atom,'-p_listings/3-lc$^0/1-1-'},1}.
  {label,933}.
    {test,is_nonempty_list,{f,934},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,0},{y,0}}.
    {line,[{location,"compile_SUITE.erl",586}]}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,936},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,933},1}. % '-p_listings/3-lc$^0/1-1-'/1
  {label,934}.
    {test,is_nil,{f,935},[{x,0}]}.
    return.
  {label,935}.
    {test_heap,3,1}.
    {put_tuple2,{x,0},{list,[{atom,bad_generator},{x,0}]}}.
    {line,[{location,"compile_SUITE.erl",587}]}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.
  {label,936}.
    {line,[{location,"compile_SUITE.erl",586}]}.
    {badmatch,{x,0}}.


{function, '-do_file_listings/3-fun-0-', 1, 938}.
  {label,937}.
    {line,[{location,"compile_SUITE.erl",555}]}.
    {func_info,{atom,compile_SUITE},{atom,'-do_file_listings/3-fun-0-'},1}.
  {label,938}.
    {allocate,0,1}.
    {call_ext,1,{extfunc,file,delete,1}}.
    {test,is_eq_exact,{f,939},[{x,0},{atom,ok}]}.
    {deallocate,0}.
    return.
  {label,939}.
    {badmatch,{x,0}}.


{function, '-file_1/1-lc$^0/1-0-', 2, 941}.
  {label,940}.
    {line,[{location,"compile_SUITE.erl",195}]}.
    {func_info,{atom,compile_SUITE},{atom,'-file_1/1-lc$^0/1-0-'},2}.
  {label,941}.
    {'%',{var_info,{x,0},[{type,{t_list,{t_atom,any},nil}}]}}.
    {test,is_nonempty_list,{f,942},[{x,0}]}.
    {allocate_heap,3,2,2}.
    {move,{x,1},{y,2}}.
    {get_list,{x,0},{y,1},{y,0}}.
    {put_list,{y,1},{literal,[return]},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"compile_SUITE.erl",193}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_tagged_tuple,{f,944},[{x,0},3,{atom,error}]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_nonempty_list,{f,944},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,1}}.
    {test,is_tuple,{f,944},[{x,2}]}.
    {test,test_arity,{f,944},[{x,2},2]}.
    {get_tuple_element,{x,2},1,{x,2}}.
    {test,is_nonempty_list,{f,944},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,2}}.
    {test,is_tagged_tuple,{f,944},[{x,3},3,{atom,none}]}.
    {get_tuple_element,{x,3},1,{x,4}}.
    {test,is_eq_exact,{f,944},[{x,4},{atom,compile}]}.
    {get_tuple_element,{x,3},2,{x,3}}.
    {test,is_tagged_tuple,{f,944},[{x,3},2,{atom,obsolete_option}]}.
    {test,is_nil,{f,944},[{x,2}]}.
    {test,is_nil,{f,944},[{x,1}]}.
    {get_tuple_element,{x,0},2,{x,1}}.
    {test,is_nil,{f,944},[{x,1}]}.
    {get_tuple_element,{x,3},1,{x,1}}.
    {test,is_eq_exact,{f,944},[{x,1},{tr,{y,1},{t_atom,any}}]}.
    {test_heap,2,0}.
    {put_list,{y,1},{literal,[report]},{x,1}}.
    {move,{y,0},{y,1}}.
    {trim,1,2}.
    {move,{y,1},{x,0}}.
    {line,[{location,"compile_SUITE.erl",194}]}.
    {call_ext,2,{extfunc,compile,file,2}}.
    {test,is_eq_exact,{f,943},[{x,0},{atom,error}]}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,941},2}. % '-file_1/1-lc$^0/1-0-'/2
  {label,942}.
    return.
  {label,943}.
    {badmatch,{x,0}}.
  {label,944}.
    {line,[{location,"compile_SUITE.erl",190}]}.
    {badmatch,{x,0}}.


{function, '-bc_options/1-inlined-0-', 1, 946}.
  {label,945}.
    {line,[{location,"compile_SUITE.erl",1716}]}.
    {func_info,{atom,compile_SUITE},{atom,'-bc_options/1-inlined-0-'},1}.
  {label,946}.
    {jump,{f,945}}.


{function, '-install_crypto_key/1-inlined-0-', 1, 948}.
  {label,947}.
    {line,[{location,"compile_SUITE.erl",811}]}.
    {func_info,{atom,compile_SUITE},
               {atom,'-install_crypto_key/1-inlined-0-'},
               1}.
  {label,948}.
    {jump,{f,947}}.


{function, '-p_listings/3-inlined-0-', 1, 950}.
  {label,949}.
    {line,[{location,"compile_SUITE.erl",574}]}.
    {func_info,{atom,compile_SUITE},{atom,'-p_listings/3-inlined-0-'},1}.
  {label,950}.
    {jump,{f,949}}.


{function, '-run/2-inlined-0-', 2, 952}.
  {label,951}.
    {line,[{location,"compile_SUITE.erl",2297}]}.
    {func_info,{atom,compile_SUITE},{atom,'-run/2-inlined-0-'},2}.
  {label,952}.
    {jump,{f,951}}.


{function, '-types_pp/1-inlined-0-', 1, 954}.
  {label,953}.
    {line,[{location,"compile_SUITE.erl",2032}]}.
    {func_info,{atom,compile_SUITE},{atom,'-types_pp/1-inlined-0-'},1}.
  {label,954}.
    {jump,{f,953}}.
