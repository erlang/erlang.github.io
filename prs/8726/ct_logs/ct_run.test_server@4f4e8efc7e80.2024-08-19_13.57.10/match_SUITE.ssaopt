module match_SUITE.
exports [{aliases,1},
         {all,0},
         {coverage,1},
         {deselectify,1},
         {end_per_group,2},
         {end_per_suite,1},
         {eq_types,1},
         {grab_bag,1},
         {groups,0},
         {heisen_variables,1},
         {init_per_group,2},
         {init_per_suite,1},
         {letify_guard,1},
         {literal_binary,1},
         {map_vars_used,1},
         {match_after_return,1},
         {match_boolean_list,1},
         {match_in_call,1},
         {match_map,1},
         {match_right_tuple,1},
         {mixed,1},
         {module_info,0},
         {module_info,1},
         {mutable_variables,1},
         {non_matching_aliases,1},
         {pmatch,1},
         {selectify,1},
         {shortcut_boolean,1},
         {suite,0},
         {tuple_size_in_try,1},
         {unary_op,1},
         {underscore,1},
         {untuplify,1}].
attributes [].

%% match_SUITE.erl:35
%% Counter = 4
%% bs_ensure_opt: true
function `match_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')})
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% match_SUITE.erl:37
%% Counter = 4
%% bs_ensure_opt: true
function `match_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'p'})
  ret `[{group,p}]`
}

%% match_SUITE.erl:40
%% Counter = 4
%% bs_ensure_opt: true
function `match_SUITE`:`groups`() {
0:
  %% Result type:
  %%    nonempty_list({'p', nonempty_list('parallel'), nonempty_list(atom())})
  ret `[{p,[parallel],
     [pmatch,mixed,aliases,non_matching_aliases,match_in_call,untuplify,
      shortcut_boolean,letify_guard,selectify,deselectify,underscore,
      match_map,map_vars_used,coverage,grab_bag,literal_binary,unary_op,
      eq_types,match_after_return,match_right_tuple,tuple_size_in_try,
      match_boolean_list,heisen_variables,mutable_variables]}]`
}

%% match_SUITE.erl:52
%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`init_per_suite`(_0) {
0:
  %% match_SUITE.erl:53
  _2 = call (`test_lib`:`recompile`/1), `match_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:56
%% Counter = 4
%% bs_ensure_opt: true
function `match_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% match_SUITE.erl:59
%% Counter = 4
%% bs_ensure_opt: true
function `match_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% match_SUITE.erl:62
%% Counter = 4
%% bs_ensure_opt: true
function `match_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% match_SUITE.erl:66
%% Counter = 42
%% bs_ensure_opt: true
function `match_SUITE`:`pmatch`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _18 = bif:is_list _0
  br _18, ^18, ^17

18:
  %% match_SUITE.erl:67
  %% Result type:
  %%    'ok'
  _6 = call (`doit`/1), `1`

  %% Unique:
  %%    _6
  _19 = succeeded:body _6
  br _19, ^38, ^1

38:
  %% match_SUITE.erl:68
  %% Result type:
  %%    'ok'
  _7 = call (`doit`/1), `2`

  %% Unique:
  %%    _7
  _22 = succeeded:body _7
  br _22, ^35, ^1

35:
  %% match_SUITE.erl:69
  %% Result type:
  %%    'ok' | {'error', 'baz' | 'foobar'}
  _8 = call (`doit`/1), `3`

  %% Unique:
  %%    _8
  _25 = succeeded:body _8
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    _8 => 'ok' | {'error', 'baz' | 'foobar'}
  %% Unique:
  %%    _8
  _33 = bif:'=:=' _8, `{error,baz}`
  br _33, ^33, ^27

33:
  %% match_SUITE.erl:70
  %% Result type:
  %%    {'error', 'baz' | 'foobar'}
  _9 = call (`doit`/1), `4`

  %% Unique:
  %%    _9
  _28 = succeeded:body _9
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _9 => {'error', 'baz' | 'foobar'}
  %% Unique:
  %%    _9
  _31 = bif:'=:=' _9, `{error,foobar}`
  br _31, ^31, ^30

31:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% match_SUITE.erl:70
  %% Unique:
  %%    _9
  _10 = match_fail `badmatch`, _9

  %% Unique:
  %%    _10
  _32 = succeeded:body _10
  br ^1

27:
  %% match_SUITE.erl:69
  %% Unique:
  %%    _8
  _11 = match_fail `badmatch`, _8

  %% Unique:
  %%    _11
  _34 = succeeded:body _11
  br ^1

17:
  %% match_SUITE.erl:66
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-pmatch/1-',1}}
  _14 = match_fail `function_clause`, _0

  %% Unique:
  %%    _14
  _41 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% match_SUITE.erl:82
%% Counter = 17
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..4
function `match_SUITE`:`doit`(_0) {
0:
  %% Argument types:
  %%    
  switch _0, ^16, [
    { `3`, ^10 },
    { `4`, ^12 }
  ]

12:
  br ^7

10:
  br ^7

7:
  _2 = phi { `baz`, ^10 }, { `foobar`, ^12 }

  %% Argument types:
  %%    _2 => 'baz' | 'foobar'
  %% Unique:
  %%    _2
  _4 = put_tuple `error`, _2
  %% Result type:
  %%    {'error', 'baz' | 'foobar'}
  %% Unique:
  %%    _4
  ret _4

16:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% match_SUITE.erl:89
%% Counter = 77
%% bs_ensure_opt: true
function `match_SUITE`:`mixed`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _30 = bif:is_list _0
  br _30, ^30, ^29

30:
  %% match_SUITE.erl:90
  %% Result type:
  %%    'glufs'
  _10 = call (`mixit`/1), `1`

  %% Unique:
  %%    _10
  _31 = succeeded:body _10
  br _31, ^73, ^1

73:
  %% match_SUITE.erl:91
  %% Result type:
  %%    'glufs' | 'klafs'
  _11 = call (`mixit`/1), `2`

  %% Unique:
  %%    _11
  _34 = succeeded:body _11
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _11 => 'glufs' | 'klafs'
  %% Unique:
  %%    _11
  _71 = bif:'=:=' _11, `klafs`
  br _71, ^70, ^36

70:
  %% match_SUITE.erl:92
  %% Result type:
  %%    'fnurra' | 'glufs'
  _12 = call (`mixit`/1), `3`

  %% Unique:
  %%    _12
  _37 = succeeded:body _12
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    _12 => 'fnurra' | 'glufs'
  %% Unique:
  %%    _12
  _68 = bif:'=:=' _12, `fnurra`
  br _68, ^67, ^39

67:
  %% match_SUITE.erl:93
  %% Result type:
  %%    'glufs' | 'usch'
  _13 = call (`mixit`/1), `4`

  %% Unique:
  %%    _13
  _40 = succeeded:body _13
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    _13 => 'glufs' | 'usch'
  %% Unique:
  %%    _13
  _65 = bif:'=:=' _13, `usch`
  br _65, ^64, ^42

64:
  %% match_SUITE.erl:94
  %% Result type:
  %%    'glufs' | {'error', 'blurf' | 87987987 | {'a', 'b', 'c'}}
  _14 = call (`mixit`/1), `5`

  %% Unique:
  %%    _14
  _43 = succeeded:body _14
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    _14 => 'glufs' | {'error', 'blurf' | 87987987 | {'a', 'b', 'c'}}
  %% Unique:
  %%    _14
  _62 = bif:'=:=' _14, `{error,blurf}`
  br _62, ^62, ^45

62:
  %% match_SUITE.erl:95
  %% Result type:
  %%    'glufs' | {'error', 'blurf' | 87987987 | {'a', 'b', 'c'}}
  _15 = call (`mixit`/1), `6`

  %% Unique:
  %%    _15
  _46 = succeeded:body _15
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    _15 => 'glufs' | {'error', 'blurf' | 87987987 | {'a', 'b', 'c'}}
  %% Unique:
  %%    _15
  _60 = bif:'=:=' _15, `{error,87987987}`
  br _60, ^60, ^48

60:
  %% match_SUITE.erl:96
  %% Result type:
  %%    {'error', 'blurf' | 87987987 | {'a', 'b', 'c'}}
  _16 = call (`mixit`/1), `7`

  %% Unique:
  %%    _16
  _49 = succeeded:body _16
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    _16 => {'error', 'blurf' | 87987987 | {'a', 'b', 'c'}}
  %% Unique:
  %%    _16
  _58 = bif:'=:=' _16, `{error,{a,b,c}}`
  br _58, ^58, ^51

58:
  %% match_SUITE.erl:97
  %% Result type:
  %%    'no_match'
  _17 = call (`mixed_1`/0)

  %% Unique:
  %%    _17
  _52 = succeeded:body _17
  br _52, ^55, ^1

55:
  %% Result type:
  %%    'ok'
  ret `ok`

51:
  %% match_SUITE.erl:96
  %% Unique:
  %%    _16
  _19 = match_fail `badmatch`, _16

  %% Unique:
  %%    _19
  _59 = succeeded:body _19
  br ^1

48:
  %% match_SUITE.erl:95
  %% Unique:
  %%    _15
  _20 = match_fail `badmatch`, _15

  %% Unique:
  %%    _20
  _61 = succeeded:body _20
  br ^1

45:
  %% match_SUITE.erl:94
  %% Unique:
  %%    _14
  _21 = match_fail `badmatch`, _14

  %% Unique:
  %%    _21
  _63 = succeeded:body _21
  br ^1

42:
  %% match_SUITE.erl:93
  _22 = match_fail `badmatch`, `glufs`

  %% Unique:
  %%    _22
  _66 = succeeded:body _22
  br ^1

39:
  %% match_SUITE.erl:92
  _23 = match_fail `badmatch`, `glufs`

  %% Unique:
  %%    _23
  _69 = succeeded:body _23
  br ^1

36:
  %% match_SUITE.erl:91
  _24 = match_fail `badmatch`, `glufs`

  %% Unique:
  %%    _24
  _72 = succeeded:body _24
  br ^1

29:
  %% match_SUITE.erl:89
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-mixed/1-',1}}
  _26 = match_fail `function_clause`, _0

  %% Unique:
  %%    _26
  _76 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% match_SUITE.erl:100
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..7
function `match_SUITE`:`mixit`(_0) {
0:
  %% Argument types:
  %%    
  switch _0, ^20, [
    { `2`, ^21 },
    { `3`, ^23 },
    { `4`, ^24 },
    { `5`, ^14 },
    { `6`, ^11 },
    { `7`, ^15 }
  ]

15:
  br ^7

11:
  br ^7

14:
  br ^7

7:
  _2 = phi { `87987987`, ^11 }, { `blurf`, ^14 }, { `{a,b,c}`, ^15 }

  %% Argument types:
  %%    _2 => 'blurf' | 87987987 | {'a', 'b', 'c'}
  %% Unique:
  %%    _2
  _4 = put_tuple `error`, _2
  %% Result type:
  %%    {'error', 'blurf' | 87987987 | {'a', 'b', 'c'}}
  %% Unique:
  %%    _4
  ret _4

24:
  %% Result type:
  %%    'usch'
  ret `usch`

23:
  %% Result type:
  %%    'fnurra'
  ret `fnurra`

21:
  %% Result type:
  %%    'klafs'
  ret `klafs`

20:
  %% Result type:
  %%    'glufs'
  ret `glufs`
}

%% match_SUITE.erl:117
%% Counter = 4
%% bs_ensure_opt: true
function `match_SUITE`:`mixed_1`() {
0:
  %% Result type:
  %%    'no_match'
  ret `no_match`
}

%% match_SUITE.erl:128
%% Counter = 482
%% bs_ensure_opt: true
function `match_SUITE`:`aliases`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _166 = bif:is_list _0
  br _166, ^166, ^165

166:
  %% match_SUITE.erl:130
  %% Result type:
  %%    'error' | 'ok'
  _73 = call (`str_alias`/1), `"abc"`

  %% Unique:
  %%    _73
  _167 = succeeded:body _73
  br _167, ^167, ^1

167:
  %% Argument types:
  %%    _73 => 'error' | 'ok'
  %% Unique:
  %%    _73
  _426 = bif:'=:=' _73, `ok`
  br _426, ^425, ^169

425:
  %% match_SUITE.erl:131
  %% Result type:
  %%    'error' | 'ok'
  _74 = call (`str_alias`/1), `"def"`

  %% Unique:
  %%    _74
  _170 = succeeded:body _74
  br _170, ^170, ^1

170:
  %% Argument types:
  %%    _74 => 'error' | 'ok'
  %% Unique:
  %%    _74
  _423 = bif:'=:=' _74, `ok`
  br _423, ^422, ^172

422:
  %% match_SUITE.erl:132
  %% Result type:
  %%    'error' | 'ok'
  _75 = call (`str_alias`/1), `"ghi"`

  %% Unique:
  %%    _75
  _173 = succeeded:body _75
  br _173, ^173, ^1

173:
  %% Argument types:
  %%    _75 => 'error' | 'ok'
  %% Unique:
  %%    _75
  _420 = bif:'=:=' _75, `ok`
  br _420, ^419, ^175

419:
  %% match_SUITE.erl:133
  %% Result type:
  %%    'error' | 'ok'
  _76 = call (`str_alias`/1), `"klm"`

  %% Unique:
  %%    _76
  _176 = succeeded:body _76
  br _176, ^176, ^1

176:
  %% Argument types:
  %%    _76 => 'error' | 'ok'
  %% Unique:
  %%    _76
  _417 = bif:'=:=' _76, `ok`
  br _417, ^416, ^178

416:
  %% match_SUITE.erl:134
  %% Result type:
  %%    'error' | 'ok'
  _77 = call (`str_alias`/1), `"qrs"`

  %% Unique:
  %%    _77
  _179 = succeeded:body _77
  br _179, ^179, ^1

179:
  %% Argument types:
  %%    _77 => 'error' | 'ok'
  %% Unique:
  %%    _77
  _414 = bif:'=:=' _77, `ok`
  br _414, ^413, ^181

413:
  %% match_SUITE.erl:135
  %% Result type:
  %%    'error' | 'ok'
  _78 = call (`str_alias`/1), `"xy"`

  %% Unique:
  %%    _78
  _182 = succeeded:body _78
  br _182, ^182, ^1

182:
  %% Argument types:
  %%    _78 => 'error' | 'ok'
  %% Unique:
  %%    _78
  _411 = bif:'=:=' _78, `ok`
  br _411, ^410, ^184

410:
  %% match_SUITE.erl:136
  %% Result type:
  %%    'error' | 'ok'
  _79 = call (`str_alias`/1), `[]`

  %% Unique:
  %%    _79
  _185 = succeeded:body _79
  br _185, ^185, ^1

185:
  %% Argument types:
  %%    _79 => 'error' | 'ok'
  %% Unique:
  %%    _79
  _408 = bif:'=:=' _79, `ok`
  br _408, ^407, ^187

407:
  %% match_SUITE.erl:137
  %% Result type:
  %%    'error' | 'ok'
  _80 = call (`str_alias`/1), `[]`

  %% Unique:
  %%    _80
  _188 = succeeded:body _80
  br _188, ^188, ^1

188:
  %% Argument types:
  %%    _80 => 'error' | 'ok'
  %% Unique:
  %%    _80
  _405 = bif:'=:=' _80, `ok`
  br _405, ^404, ^190

404:
  %% match_SUITE.erl:138
  %% Result type:
  %%    'error' | 'ok'
  _81 = call (`str_alias`/1), `"blurf"`

  %% Unique:
  %%    _81
  _191 = succeeded:body _81
  br _191, ^191, ^1

191:
  %% Argument types:
  %%    _81 => 'error' | 'ok'
  %% Unique:
  %%    _81
  _402 = bif:'=:=' _81, `error`
  br _402, ^401, ^193

401:
  %% match_SUITE.erl:141
  %% Result type:
  %%    'error' | 'ok'
  _82 = call (`char_alias`/1), `118`

  %% Unique:
  %%    _82
  _194 = succeeded:body _82
  br _194, ^194, ^1

194:
  %% Argument types:
  %%    _82 => 'error' | 'ok'
  %% Unique:
  %%    _82
  _399 = bif:'=:=' _82, `ok`
  br _399, ^398, ^196

398:
  %% match_SUITE.erl:142
  %% Result type:
  %%    'error' | 'ok'
  _83 = call (`char_alias`/1), `118`

  %% Unique:
  %%    _83
  _197 = succeeded:body _83
  br _197, ^197, ^1

197:
  %% Argument types:
  %%    _83 => 'error' | 'ok'
  %% Unique:
  %%    _83
  _396 = bif:'=:=' _83, `ok`
  br _396, ^395, ^199

395:
  %% match_SUITE.erl:143
  %% Result type:
  %%    'error' | 'ok'
  _84 = call (`char_alias`/1), `119`

  %% Unique:
  %%    _84
  _200 = succeeded:body _84
  br _200, ^200, ^1

200:
  %% Argument types:
  %%    _84 => 'error' | 'ok'
  %% Unique:
  %%    _84
  _393 = bif:'=:=' _84, `ok`
  br _393, ^392, ^202

392:
  %% match_SUITE.erl:144
  %% Result type:
  %%    'error' | 'ok'
  _85 = call (`char_alias`/1), `119`

  %% Unique:
  %%    _85
  _203 = succeeded:body _85
  br _203, ^203, ^1

203:
  %% Argument types:
  %%    _85 => 'error' | 'ok'
  %% Unique:
  %%    _85
  _390 = bif:'=:=' _85, `ok`
  br _390, ^389, ^205

389:
  %% match_SUITE.erl:145
  %% Result type:
  %%    'error' | 'ok'
  _86 = call (`char_alias`/1), `42`

  %% Unique:
  %%    _86
  _206 = succeeded:body _86
  br _206, ^206, ^1

206:
  %% Argument types:
  %%    _86 => 'error' | 'ok'
  %% Unique:
  %%    _86
  _387 = bif:'=:=' _86, `ok`
  br _387, ^386, ^208

386:
  %% match_SUITE.erl:146
  %% Result type:
  %%    'error' | 'ok'
  _87 = call (`char_alias`/1), `3.0`

  %% Unique:
  %%    _87
  _209 = succeeded:body _87
  br _209, ^209, ^1

209:
  %% Argument types:
  %%    _87 => 'error' | 'ok'
  %% Unique:
  %%    _87
  _384 = bif:'=:=' _87, `ok`
  br _384, ^383, ^211

383:
  %% match_SUITE.erl:147
  %% Result type:
  %%    'error' | 'ok'
  _88 = call (`char_alias`/1), `95`

  %% Unique:
  %%    _88
  _212 = succeeded:body _88
  br _212, ^212, ^1

212:
  %% Argument types:
  %%    _88 => 'error' | 'ok'
  %% Unique:
  %%    _88
  _381 = bif:'=:=' _88, `error`
  br _381, ^380, ^214

380:
  %% match_SUITE.erl:148
  %% Result type:
  %%    'error' | 'ok'
  _89 = call (`char_alias`/1), `0`

  %% Unique:
  %%    _89
  _215 = succeeded:body _89
  br _215, ^215, ^1

215:
  %% Argument types:
  %%    _89 => 'error' | 'ok'
  %% Unique:
  %%    _89
  _378 = bif:'=:=' _89, `error`
  br _378, ^377, ^217

377:
  %% match_SUITE.erl:150
  %% Result type:
  %%    {42, 42, 42}
  _90 = call (`three`/1), `42`

  %% Unique:
  %%    _90
  _218 = succeeded:body _90
  br _218, ^375, ^1

375:
  %% match_SUITE.erl:152
  %% Result type:
  %%    {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  _91 = call (`tuple_alias`/1), `{1,42,99}`

  %% Unique:
  %%    _91
  _221 = succeeded:body _91
  br _221, ^221, ^1

221:
  %% Argument types:
  %%    _91 => {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  %% Unique:
  %%    _91
  _373 = bif:'=:=' _91, `{1,42,99,1,42,99}`
  br _373, ^373, ^223

373:
  %% match_SUITE.erl:153
  %% Result type:
  %%    {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  _92 = call (`tuple_alias`/1), `{-10,20}`

  %% Unique:
  %%    _92
  _224 = succeeded:body _92
  br _224, ^224, ^1

224:
  %% Argument types:
  %%    _92 => {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  %% Unique:
  %%    _92
  _371 = bif:'=:=' _92, `{-10,20,-10,20,-10,20}`
  br _371, ^371, ^226

371:
  %% match_SUITE.erl:154
  %% Result type:
  %%    6
  _93 = call (`tup_lit_alias`/1), `{1,2,3}`

  %% Unique:
  %%    _93
  _227 = succeeded:body _93
  br _227, ^368, ^1

368:
  %% match_SUITE.erl:155
  %% Result type:
  %%    6
  _94 = call (`tup_lit_alias_rev`/1), `{1,2,3}`

  %% Unique:
  %%    _94
  _230 = succeeded:body _94
  br _230, ^365, ^1

365:
  %% match_SUITE.erl:157
  %% Result type:
  %%    {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  _95 = call (`list_in_tuple`/1), `{container,[1,2,3],4}`

  %% Unique:
  %%    _95
  _233 = succeeded:body _95
  br _233, ^233, ^1

233:
  %% Argument types:
  %%    _95 => {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %% Unique:
  %%    _95
  _363 = bif:'=:=' _95, `{1,2,3,4}`
  br _363, ^363, ^235

363:
  %% match_SUITE.erl:158
  %% Result type:
  %%    {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  _96 = call (`list_in_tuple`/1), `{container,[a,b,c],d}`

  %% Unique:
  %%    _96
  _236 = succeeded:body _96
  br _236, ^236, ^1

236:
  %% Argument types:
  %%    _96 => {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %% Unique:
  %%    _96
  _361 = bif:'=:=' _96, `{a,b,c,d}`
  br _361, ^361, ^238

361:
  %% match_SUITE.erl:160
  %% Result type:
  %%    {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  _97 = call (`tuple_in_tuple`/1), `{x,{y,13},17}`

  %% Unique:
  %%    _97
  _239 = succeeded:body _97
  br _239, ^239, ^1

239:
  %% Argument types:
  %%    _97 => {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %% Unique:
  %%    _97
  _359 = bif:'=:=' _97, `{13,y,13,17,x,{y,13},17}`
  br _359, ^359, ^241

359:
  %% match_SUITE.erl:161
  %% Result type:
  %%    {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  _98 = call (`tuple_in_tuple`/1), `{x,{y,a},b}`

  %% Unique:
  %%    _98
  _242 = succeeded:body _98
  br _242, ^242, ^1

242:
  %% Argument types:
  %%    _98 => {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %% Unique:
  %%    _98
  _357 = bif:'=:=' _98, `{a,y,a,b,x,{y,a},b}`
  br _357, ^357, ^244

357:
  %% match_SUITE.erl:163
  _28 = call (`id`/1), `42`

  %% Aliased:
  %%    _28
  _245 = succeeded:body _28
  br _245, ^245, ^1

245:
  %% match_SUITE.erl:163
  %% Result type:
  %%    {any(), any(), any(), any()}
  %% Aliased:
  %%    _28
  _99 = call (`multiple_aliases_1`/1), _28

  %% Unique:
  %%    _99
  _246 = succeeded:body _99
  br _246, ^246, ^1

246:
  %% Argument types:
  %%    _99 => {any(), any(), any(), any()}
  %% Unique:
  %%    _99
  _355 = bif:'=:=' _99, `{42,42,42,42}`
  br _355, ^355, ^248

355:
  %% match_SUITE.erl:164
  _30 = call (`id`/1), `7`

  %% Aliased:
  %%    _30
  _249 = succeeded:body _30
  br _249, ^249, ^1

249:
  %% match_SUITE.erl:164
  %% Result type:
  %%    {any(), any(), any()}
  %% Aliased:
  %%    _30
  _100 = call (`multiple_aliases_2`/1), _30

  %% Unique:
  %%    _100
  _250 = succeeded:body _100
  br _250, ^250, ^1

250:
  %% Argument types:
  %%    _100 => {any(), any(), any()}
  %% Unique:
  %%    _100
  _353 = bif:'=:=' _100, `{7,7,7}`
  br _353, ^353, ^252

353:
  %% match_SUITE.erl:165
  _32 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _32
  _253 = succeeded:body _32
  br _253, ^253, ^1

253:
  %% match_SUITE.erl:165
  %% Result type:
  %%    {{any(), any()}, {any(), any()}, {any(), any()}}
  %% Aliased:
  %%    _32
  _101 = call (`multiple_aliases_3`/1), _32

  %% Unique:
  %%    _101
  _254 = succeeded:body _101
  br _254, ^254, ^1

254:
  %% Argument types:
  %%    _101 => {{any(), any()}, {any(), any()}, {any(), any()}}
  %% Unique:
  %%    _101
  _351 = bif:'=:=' _101, `{{a,b},{a,b},{a,b}}`
  br _351, ^351, ^256

351:
  %% match_SUITE.erl:166
  _34 = call (`id`/1), `[x,y,z]`

  %% Aliased:
  %%    _34
  _257 = succeeded:body _34
  br _257, ^257, ^1

257:
  %% match_SUITE.erl:166
  %% Result type:
  %%    {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %% Aliased:
  %%    _34
  _102 = call (`multiple_aliases_4`/1), _34

  %% Unique:
  %%    _102
  _258 = succeeded:body _102
  br _258, ^258, ^1

258:
  %% Argument types:
  %%    _102 => {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %% Unique:
  %%    _102
  _349 = bif:'=:=' _102, `{[x,y,z],[x,y,z],[x,y,z]}`
  br _349, ^349, ^260

349:
  %% match_SUITE.erl:169
  _36 = call (`id`/1), `[a,b]`

  %% Aliased:
  %%    _36
  _261 = succeeded:body _36
  br _261, ^261, ^1

261:
  %% match_SUITE.erl:169
  %% Result type:
  %%    {'a', 'b'}
  %% Aliased:
  %%    _36
  _103 = call (`list_alias`/1), _36

  %% Unique:
  %%    _103
  _262 = succeeded:body _103
  br _262, ^476, ^1

476:
  br ^479

479:
  _268 = new_try_tag `'catch'`
  br _268, ^266, ^267

266:
  %% match_SUITE.erl:174
  _119 = match_fail `badmatch`, `home`

  %% Unique:
  %%    _119
  _270 = succeeded:body _119
  br ^267

267:
  %% Unique:
  %%    _268
  _273 = landingpad `'catch'`, _268

  %% Aliased:
  %%    _273
  _271 = extract _273, `0`
  br ^265

265:
  %% Aliased:
  %%    _271
  %% Unique:
  %%    _268
  _42 = catch_end _268, _271

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _343 = is_tagged_tuple _42, `2`, `'EXIT'`
  br _343, ^340, ^276

340:
  %% Argument types:
  %%    _42 => {''EXIT'', any()}
  %% Aliased:
  %%    _42
  _104 = get_tuple_element _42, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _337 = bif:is_tuple _104
  br _337, ^337, ^276

337:
  %% Argument types:
  %%    _104 => {...}
  %% Aliased:
  %%    _104
  _338 = bif:tuple_size _104

  %% Argument types:
  %%    _338 => 0..16777215
  %% Unique:
  %%    _338
  _339 = bif:'=:=' _338, `2`
  br _339, ^336, ^276

336:
  %% Argument types:
  %%    _104 => {any(), any()}
  %% Aliased:
  %%    _104
  _107 = get_tuple_element _104, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _335 = bif:'=:=' _107, `{badmatch,home}`
  br _335, ^429, ^276

429:
  %% match_SUITE.erl:178
  %% Result type:
  %%    {'home', 'home'}
  %% Argument types:
  %%    (`'-aliases/1-fun-1-'`/0) => fun(() -> {'home', 'home'})
  _108 = call (`'-aliases/1-fun-1-'`/0)

  %% Unique:
  %%    _108
  _277 = succeeded:body _108
  br _277, ^477, ^1

477:
  br ^480

480:
  _283 = new_try_tag `'catch'`
  br _283, ^281, ^282

281:
  %% match_SUITE.erl:184
  _121 = match_fail `badmatch`, `16`

  %% Unique:
  %%    _121
  _285 = succeeded:body _121
  br ^282

282:
  %% Unique:
  %%    _283
  _288 = landingpad `'catch'`, _283

  %% Aliased:
  %%    _288
  _286 = extract _288, `0`
  br ^280

280:
  %% Aliased:
  %%    _286
  %% Unique:
  %%    _283
  _54 = catch_end _283, _286

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _329 = is_tagged_tuple _54, `2`, `'EXIT'`
  br _329, ^326, ^291

326:
  %% Argument types:
  %%    _54 => {''EXIT'', any()}
  %% Aliased:
  %%    _54
  _109 = get_tuple_element _54, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _323 = bif:is_tuple _109
  br _323, ^323, ^291

323:
  %% Argument types:
  %%    _109 => {...}
  %% Aliased:
  %%    _109
  _324 = bif:tuple_size _109

  %% Argument types:
  %%    _324 => 0..16777215
  %% Unique:
  %%    _324
  _325 = bif:'=:=' _324, `2`
  br _325, ^322, ^291

322:
  %% Argument types:
  %%    _109 => {any(), any()}
  %% Aliased:
  %%    _109
  _112 = get_tuple_element _109, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _321 = bif:'=:=' _112, `{badmatch,16}`
  br _321, ^478, ^291

478:
  br ^481

481:
  _295 = new_try_tag `'catch'`
  br _295, ^293, ^294

293:
  %% match_SUITE.erl:188
  _123 = match_fail `badmatch`, `0`

  %% Unique:
  %%    _123
  _297 = succeeded:body _123
  br ^294

294:
  %% Unique:
  %%    _295
  _300 = landingpad `'catch'`, _295

  %% Aliased:
  %%    _300
  _298 = extract _300, `0`
  br ^292

292:
  %% Aliased:
  %%    _298
  %% Unique:
  %%    _295
  _60 = catch_end _295, _298

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _317 = is_tagged_tuple _60, `2`, `'EXIT'`
  br _317, ^314, ^303

314:
  %% Argument types:
  %%    _60 => {''EXIT'', any()}
  %% Aliased:
  %%    _60
  _113 = get_tuple_element _60, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _311 = bif:is_tuple _113
  br _311, ^311, ^303

311:
  %% Argument types:
  %%    _113 => {...}
  %% Aliased:
  %%    _113
  _312 = bif:tuple_size _113

  %% Argument types:
  %%    _312 => 0..16777215
  %% Unique:
  %%    _312
  _313 = bif:'=:=' _312, `2`
  br _313, ^310, ^303

310:
  %% Argument types:
  %%    _113 => {any(), any()}
  %% Aliased:
  %%    _113
  _116 = get_tuple_element _113, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _309 = bif:'=:=' _116, `{badmatch,0}`
  br _309, ^430, ^303

430:
  %% match_SUITE.erl:191
  %% Result type:
  %%    {42, 42}
  %% Argument types:
  %%    (`'-aliases/1-fun-4-'`/1) => fun((_) -> {42, 42})
  _117 = call (`'-aliases/1-fun-4-'`/1), `42`

  %% Unique:
  %%    _117
  _304 = succeeded:body _117
  br _304, ^307, ^1

307:
  %% Result type:
  %%    'ok'
  ret `ok`

303:
  %% match_SUITE.erl:186
  %% Aliased:
  %%    _60
  _127 = match_fail `badmatch`, _60

  %% Unique:
  %%    _127
  _320 = succeeded:body _127
  br ^1

291:
  %% match_SUITE.erl:182
  %% Aliased:
  %%    _54
  _128 = match_fail `badmatch`, _54

  %% Unique:
  %%    _128
  _332 = succeeded:body _128
  br ^1

276:
  %% match_SUITE.erl:172
  %% Aliased:
  %%    _42
  _130 = match_fail `badmatch`, _42

  %% Unique:
  %%    _130
  _346 = succeeded:body _130
  br ^1

260:
  %% match_SUITE.erl:166
  %% Unique:
  %%    _102
  _132 = match_fail `badmatch`, _102

  %% Unique:
  %%    _132
  _350 = succeeded:body _132
  br ^1

256:
  %% match_SUITE.erl:165
  %% Unique:
  %%    _101
  _133 = match_fail `badmatch`, _101

  %% Unique:
  %%    _133
  _352 = succeeded:body _133
  br ^1

252:
  %% match_SUITE.erl:164
  %% Unique:
  %%    _100
  _134 = match_fail `badmatch`, _100

  %% Unique:
  %%    _134
  _354 = succeeded:body _134
  br ^1

248:
  %% match_SUITE.erl:163
  %% Unique:
  %%    _99
  _135 = match_fail `badmatch`, _99

  %% Unique:
  %%    _135
  _356 = succeeded:body _135
  br ^1

244:
  %% match_SUITE.erl:161
  %% Unique:
  %%    _98
  _136 = match_fail `badmatch`, _98

  %% Unique:
  %%    _136
  _358 = succeeded:body _136
  br ^1

241:
  %% match_SUITE.erl:160
  %% Unique:
  %%    _97
  _137 = match_fail `badmatch`, _97

  %% Unique:
  %%    _137
  _360 = succeeded:body _137
  br ^1

238:
  %% match_SUITE.erl:158
  %% Unique:
  %%    _96
  _138 = match_fail `badmatch`, _96

  %% Unique:
  %%    _138
  _362 = succeeded:body _138
  br ^1

235:
  %% match_SUITE.erl:157
  %% Unique:
  %%    _95
  _139 = match_fail `badmatch`, _95

  %% Unique:
  %%    _139
  _364 = succeeded:body _139
  br ^1

226:
  %% match_SUITE.erl:153
  _142 = match_fail `badmatch`, `{1,42,99,1,42,99}`

  %% Unique:
  %%    _142
  _372 = succeeded:body _142
  br ^1

223:
  %% match_SUITE.erl:152
  _143 = match_fail `badmatch`, `{-10,20,-10,20,-10,20}`

  %% Unique:
  %%    _143
  _374 = succeeded:body _143
  br ^1

217:
  %% match_SUITE.erl:148
  _145 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _145
  _379 = succeeded:body _145
  br ^1

214:
  %% match_SUITE.erl:147
  _146 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _146
  _382 = succeeded:body _146
  br ^1

211:
  %% match_SUITE.erl:146
  _147 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _147
  _385 = succeeded:body _147
  br ^1

208:
  %% match_SUITE.erl:145
  _148 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _148
  _388 = succeeded:body _148
  br ^1

205:
  %% match_SUITE.erl:144
  _149 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _149
  _391 = succeeded:body _149
  br ^1

202:
  %% match_SUITE.erl:143
  _150 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _150
  _394 = succeeded:body _150
  br ^1

199:
  %% match_SUITE.erl:142
  _151 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _151
  _397 = succeeded:body _151
  br ^1

196:
  %% match_SUITE.erl:141
  _152 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _152
  _400 = succeeded:body _152
  br ^1

193:
  %% match_SUITE.erl:138
  _153 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _153
  _403 = succeeded:body _153
  br ^1

190:
  %% match_SUITE.erl:137
  _154 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _154
  _406 = succeeded:body _154
  br ^1

187:
  %% match_SUITE.erl:136
  _155 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _155
  _409 = succeeded:body _155
  br ^1

184:
  %% match_SUITE.erl:135
  _156 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _156
  _412 = succeeded:body _156
  br ^1

181:
  %% match_SUITE.erl:134
  _157 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _157
  _415 = succeeded:body _157
  br ^1

178:
  %% match_SUITE.erl:133
  _158 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _158
  _418 = succeeded:body _158
  br ^1

175:
  %% match_SUITE.erl:132
  _159 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _159
  _421 = succeeded:body _159
  br ^1

172:
  %% match_SUITE.erl:131
  _160 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _160
  _424 = succeeded:body _160
  br ^1

169:
  %% match_SUITE.erl:130
  _161 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _161
  _427 = succeeded:body _161
  br ^1

165:
  %% match_SUITE.erl:128
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-aliases/1-',1}}
  _162 = match_fail `function_clause`, _0

  %% Unique:
  %%    _162
  _428 = succeeded:body _162
  br ^1

1:
  _163 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _163
}

%% match_SUITE.erl:198
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(97..121)
function `match_SUITE`:`str_alias`(_0) {
0:
  %% match_SUITE.erl:199
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0
  Res = call (`str_alias_1`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:200
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0
  _4 = call (`str_alias_2`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:200
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:202
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(97..121)
function `match_SUITE`:`str_alias_1`(_0) {
0:
  %% Aliased:
  %%    _0
  _21 = is_nonempty_list _0
  br _21, ^21, ^22

21:
  %% Argument types:
  %%    _0 => nonempty_list(97..121)
  %% Aliased:
  %%    _0
  _4 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(97..121)
  %% Aliased:
  %%    _0
  _3 = get_tl _0
  %% Argument types:
  %%    
  switch _4, ^7, [
    { `97`, ^15 },
    { `100`, ^16 },
    { `103`, ^17 },
    { `107`, ^18 },
    { `113`, ^19 },
    { `120`, ^20 }
  ]

20:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _14 = bif:'=:=' _3, `"y"`
  br _14, ^14, ^7

14:
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _13 = bif:'=:=' _3, `"rs"`
  br _13, ^13, ^7

13:
  %% Result type:
  %%    'ok'
  ret `ok`

18:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _12 = bif:'=:=' _3, `"lm"`
  br _12, ^12, ^7

12:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _11 = bif:'=:=' _3, `"hi"`
  br _11, ^11, ^7

11:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _10 = bif:'=:=' _3, `"ef"`
  br _10, ^10, ^7

10:
  %% Result type:
  %%    'ok'
  ret `ok`

15:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _9 = bif:'=:=' _3, `"bc"`
  br _9, ^9, ^7

9:
  %% Result type:
  %%    'ok'
  ret `ok`

7:
  %% Result type:
  %%    'error'
  ret `error`

22:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% match_SUITE.erl:213
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(97..121)
function `match_SUITE`:`str_alias_2`(_0) {
0:
  %% Aliased:
  %%    _0
  _21 = is_nonempty_list _0
  br _21, ^21, ^22

21:
  %% Argument types:
  %%    _0 => nonempty_list(97..121)
  %% Aliased:
  %%    _0
  _4 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(97..121)
  %% Aliased:
  %%    _0
  _3 = get_tl _0
  %% Argument types:
  %%    
  switch _4, ^7, [
    { `97`, ^15 },
    { `100`, ^16 },
    { `103`, ^17 },
    { `107`, ^18 },
    { `113`, ^19 },
    { `120`, ^20 }
  ]

20:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _14 = bif:'=:=' _3, `"y"`
  br _14, ^14, ^7

14:
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _13 = bif:'=:=' _3, `"rs"`
  br _13, ^13, ^7

13:
  %% Result type:
  %%    'ok'
  ret `ok`

18:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _12 = bif:'=:=' _3, `"lm"`
  br _12, ^12, ^7

12:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _11 = bif:'=:=' _3, `"hi"`
  br _11, ^11, ^7

11:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _10 = bif:'=:=' _3, `"ef"`
  br _10, ^10, ^7

10:
  %% Result type:
  %%    'ok'
  ret `ok`

15:
  %% Argument types:
  %%    _3 => list(97..121)
  %% Aliased:
  %%    _3
  _9 = bif:'=:=' _3, `"bc"`
  br _9, ^9, ^7

9:
  %% Result type:
  %%    'ok'
  ret `ok`

7:
  %% Result type:
  %%    'error'
  ret `error`

22:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% match_SUITE.erl:238
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number(0, 119)
function `match_SUITE`:`char_alias`(_0) {
0:
  %% match_SUITE.erl:239
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0
  Res = call (`char_alias_1`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:240
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0
  _4 = call (`char_alias_2`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:240
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:242
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number(0, 119)
function `match_SUITE`:`char_alias_1`(_0) {
0:
  %% Argument types:
  %%    _0 => number(0, 119)
  %% Unique:
  %%    _0
  _8 = bif:is_float _0
  br _8, ^8, ^6

8:
  %% Argument types:
  %%    _0 => -0.0..119.0
  %% Unique:
  %%    _0
  _9 = bif:'=:=' _0, `3.0`
  br _9, ^7, ^5

7:
  %% Result type:
  %%    'ok'
  ret `ok`

6:
  %% Argument types:
  %%    
  switch _0, ^5, [
    { `42`, ^10 },
    { `118`, ^10 },
    { `119`, ^10 }
  ]

10:
  %% Result type:
  %%    'ok'
  ret `ok`

5:
  %% Result type:
  %%    'error'
  ret `error`
}

%% match_SUITE.erl:248
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number(0, 119)
function `match_SUITE`:`char_alias_2`(_0) {
0:
  %% Argument types:
  %%    _0 => number(0, 119)
  %% Unique:
  %%    _0
  _8 = bif:is_float _0
  br _8, ^8, ^6

8:
  %% Argument types:
  %%    _0 => -0.0..119.0
  %% Unique:
  %%    _0
  _9 = bif:'=:=' _0, `3.0`
  br _9, ^7, ^5

7:
  %% Result type:
  %%    'ok'
  ret `ok`

6:
  %% Argument types:
  %%    
  switch _0, ^5, [
    { `42`, ^10 },
    { `118`, ^10 },
    { `119`, ^10 }
  ]

10:
  %% Result type:
  %%    'ok'
  ret `ok`

5:
  %% Result type:
  %%    'error'
  ret `error`
}

%% match_SUITE.erl:258
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
function `match_SUITE`:`three`(_0) {
0:
  %% match_SUITE.erl:259
  %% Result type:
  %%    {42, 42, 42}
  Res = call (`three_1`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:260
  %% Result type:
  %%    {42, 42, 42}
  _4 = call (`three_2`/1), `42`

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^13, ^1

13:
  %% Result type:
  %%    {42, 42, 42}
  %% Unique:
  %%    _4
  ret _4

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:262
%% Counter = 5
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
function `match_SUITE`:`three_1`(_0) {
0:
  %% Result type:
  %%    {42, 42, 42}
  ret `{42,42,42}`
}

%% match_SUITE.erl:265
%% Counter = 5
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
function `match_SUITE`:`three_2`(_0) {
0:
  %% Result type:
  %%    {42, 42, 42}
  ret `{42,42,42}`
}

%% match_SUITE.erl:270
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {-10, 20} | {1, 42, 99}
function `match_SUITE`:`tuple_alias`(_0) {
0:
  %% match_SUITE.erl:271
  %% Result type:
  %%    {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  %% Aliased:
  %%    _0
  Res = call (`tuple_alias_a`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:272
  %% Result type:
  %%    {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  %% Aliased:
  %%    _0
  _4 = call (`tuple_alias_b`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  %%    Res => {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    {-10, 20, -10, 20, -10, 20} | {1, 42, 99, 1, 42, 99}
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:272
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:274
%% Counter = 21
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {-10, 20} | {1, 42, 99}
function `match_SUITE`:`tuple_alias_a`(_0) {
0:
  %% Argument types:
  %%    _0 => {-10, 20} | {1, 42, 99}
  %% Aliased:
  %%    _0
  _19 = bif:tuple_size _0
  %% Argument types:
  %%    
  switch _19, ^15, [
    { `2`, ^17 },
    { `3`, ^16 }
  ]

16:
  %% Result type:
  %%    {1, 42, 99, 1, 42, 99}
  ret `{1,42,99,1,42,99}`

17:
  %% Result type:
  %%    {-10, 20, -10, 20, -10, 20}
  ret `{-10,20,-10,20,-10,20}`

15:
  %% match_SUITE.erl:274
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-tuple_alias_a/1-',1}}
  _12 = match_fail `function_clause`, _0

  %% Unique:
  %%    _12
  _20 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% match_SUITE.erl:279
%% Counter = 84
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {-10, 20} | {1, 42, 99}
function `match_SUITE`:`tuple_alias_b`(_0) {
0:
  %% Argument types:
  %%    _0 => {-10, 20} | {1, 42, 99}
  %% Aliased:
  %%    _0
  _82 = bif:tuple_size _0
  %% Argument types:
  %%    
  switch _82, ^43, [
    { `2`, ^64 },
    { `3`, ^48 }
  ]

48:
  %% Result type:
  %%    {1, 42, 99, 1, 42, 99}
  ret `{1,42,99,1,42,99}`

64:
  %% Result type:
  %%    {-10, 20, -10, 20, -10, 20}
  ret `{-10,20,-10,20,-10,20}`

43:
  %% match_SUITE.erl:279
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-tuple_alias_b/1-',1}}
  _40 = match_fail `function_clause`, _0

  %% Unique:
  %%    _40
  _83 = succeeded:body _40
  br ^1

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _41
}

%% match_SUITE.erl:286
%% Counter = 24
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {1, 2, 3}
function `match_SUITE`:`tup_lit_alias`(_0) {
0:
  %% Result type:
  %%    6
  ret `6`
}

%% match_SUITE.erl:289
%% Counter = 24
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {1, 2, 3}
function `match_SUITE`:`tup_lit_alias_rev`(_0) {
0:
  %% Result type:
  %%    6
  ret `6`
}

%% match_SUITE.erl:292
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'container', nonempty_list('a' | 'b' | 'c' | 1..3), 'd' | 4}
function `match_SUITE`:`list_in_tuple`(_0) {
0:
  %% match_SUITE.erl:293
  %% Result type:
  %%    {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %% Aliased:
  %%    _0
  Res = call (`list_in_tuple_a`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:294
  %% Result type:
  %%    {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %% Aliased:
  %%    _0
  _4 = call (`list_in_tuple_b`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %%    Res => {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:294
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:296
%% Counter = 30
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'container', nonempty_list('a' | 'b' | 'c' | 1..3), 'd' | 4}
function `match_SUITE`:`list_in_tuple_a`(_0) {
0:
  %% Argument types:
  %%    _0 => {'container', nonempty_list('a' | 'b' | 'c' | 1..3), 'd' | 4}
  %% Aliased:
  %%    _0
  _6 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _6 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _6
  _9 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _6
  _8 = get_tl _6

  %% Aliased:
  %%    _8
  _21 = is_nonempty_list _8
  br _21, ^21, ^18

21:
  %% Argument types:
  %%    _8 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _8
  _11 = get_hd _8

  %% Argument types:
  %%    _8 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _8
  _10 = get_tl _8

  %% Aliased:
  %%    _10
  _20 = is_nonempty_list _10
  br _20, ^20, ^18

20:
  %% Argument types:
  %%    _10 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _10
  _13 = get_hd _10

  %% Argument types:
  %%    _10 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _10
  _12 = get_tl _10

  %% Argument types:
  %%    _12 => list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _12
  _19 = bif:'=:=' _12, `[]`
  br _19, ^19, ^18

19:
  %% Argument types:
  %%    _0 => {'container', nonempty_list('a' | 'b' | 'c' | 1..3), 'd' | 4}
  %% Aliased:
  %%    _0
  _5 = get_tuple_element _0, `2`

  %% Argument types:
  %%    _9 => 'a' | 'b' | 'c' | 1..3
  %%    _11 => 'a' | 'b' | 'c' | 1..3
  %%    _13 => 'a' | 'b' | 'c' | 1..3
  %%    _5 => 'd' | 4
  %% Aliased:
  %%    _5, 
  %%    _9, 
  %%    _11, 
  %%    _13
  _14 = put_tuple _9, _11, _13, _5
  %% Result type:
  %%    {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %% Unique:
  %%    _14
  ret _14

18:
  %% match_SUITE.erl:296
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-list_in_tuple_a/1-',1}}
  _15 = match_fail `function_clause`, _0

  %% Unique:
  %%    _15
  _29 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% match_SUITE.erl:299
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'container', nonempty_list('a' | 'b' | 'c' | 1..3), 'd' | 4}
function `match_SUITE`:`list_in_tuple_b`(_0) {
0:
  %% Argument types:
  %%    _0 => {'container', nonempty_list('a' | 'b' | 'c' | 1..3), 'd' | 4}
  %% Aliased:
  %%    _0
  _7 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _7 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _7
  _10 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _7
  _9 = get_tl _7

  %% Aliased:
  %%    _9
  _22 = is_nonempty_list _9
  br _22, ^22, ^19

22:
  %% Argument types:
  %%    _9 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _9
  _12 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _9
  _11 = get_tl _9

  %% Aliased:
  %%    _11
  _21 = is_nonempty_list _11
  br _21, ^21, ^19

21:
  %% Argument types:
  %%    _11 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _11
  _14 = get_hd _11

  %% Argument types:
  %%    _11 => nonempty_list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _11
  _13 = get_tl _11

  %% Argument types:
  %%    _13 => list('a' | 'b' | 'c' | 1..3)
  %% Aliased:
  %%    _13
  _20 = bif:'=:=' _13, `[]`
  br _20, ^20, ^19

20:
  %% Argument types:
  %%    _0 => {'container', nonempty_list('a' | 'b' | 'c' | 1..3), 'd' | 4}
  %% Aliased:
  %%    _0
  _6 = get_tuple_element _0, `2`

  %% Argument types:
  %%    _10 => 'a' | 'b' | 'c' | 1..3
  %%    _12 => 'a' | 'b' | 'c' | 1..3
  %%    _14 => 'a' | 'b' | 'c' | 1..3
  %%    _6 => 'd' | 4
  %% Aliased:
  %%    _6, 
  %%    _10, 
  %%    _12, 
  %%    _14
  _15 = put_tuple _10, _12, _14, _6
  %% Result type:
  %%    {'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'a' | 'b' | 'c' | 1..3, 'd' | 4}
  %% Unique:
  %%    _15
  ret _15

19:
  %% match_SUITE.erl:300
  %% Aliased:
  %%    _0
  _16 = match_fail `badmatch`, _0

  %% Unique:
  %%    _16
  _30 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% match_SUITE.erl:303
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'x', {'y', 'a' | 13}, 'b' | 17}
function `match_SUITE`:`tuple_in_tuple`(_0) {
0:
  %% match_SUITE.erl:304
  %% Result type:
  %%    {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %% Aliased:
  %%    _0
  Res = call (`tuple_in_tuple_a`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:305
  %% Result type:
  %%    {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %% Aliased:
  %%    _0
  _4 = call (`tuple_in_tuple_b`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %%    Res => {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:305
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:307
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'x', {'y', 'a' | 13}, 'b' | 17}
function `match_SUITE`:`tuple_in_tuple_a`(_0) {
0:
  %% Argument types:
  %%    _0 => {'x', {'y', 'a' | 13}, 'b' | 17}
  %% Aliased:
  %%    _0
  _3 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _3 => {'y', 'a' | 13}
  %% Aliased:
  %%    _3
  _5 = get_tuple_element _3, `1`

  %% Argument types:
  %%    _0 => {'x', {'y', 'a' | 13}, 'b' | 17}
  %% Aliased:
  %%    _0
  _2 = get_tuple_element _0, `2`

  %% Argument types:
  %%    _5 => 'a' | 13
  %%    _5 => 'a' | 13
  %%    _2 => 'b' | 17
  %%    _3 => {'y', 'a' | 13}
  %%    _2 => 'b' | 17
  %% Aliased:
  %%    _2, 
  %%    _3, 
  %%    _5
  _7 = put_tuple _5, `y`, _5, _2, `x`, _3, _2
  %% Result type:
  %%    {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %% Unique:
  %%    _7
  ret _7
}

%% match_SUITE.erl:310
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'x', {'y', 'a' | 13}, 'b' | 17}
function `match_SUITE`:`tuple_in_tuple_b`(_0) {
0:
  %% Argument types:
  %%    _0 => {'x', {'y', 'a' | 13}, 'b' | 17}
  %% Aliased:
  %%    _0
  _4 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _4 => {'y', 'a' | 13}
  %% Aliased:
  %%    _4
  _9 = get_tuple_element _4, `1`

  %% Argument types:
  %%    _0 => {'x', {'y', 'a' | 13}, 'b' | 17}
  %% Aliased:
  %%    _0
  _3 = get_tuple_element _0, `2`

  %% Argument types:
  %%    _9 => 'a' | 13
  %%    _9 => 'a' | 13
  %%    _3 => 'b' | 17
  %%    _4 => {'y', 'a' | 13}
  %%    _3 => 'b' | 17
  %% Aliased:
  %%    _3, 
  %%    _4, 
  %%    _9
  _11 = put_tuple _9, `y`, _9, _3, `x`, _4, _3
  %% Result type:
  %%    {'a' | 13, 'y', 'a' | 13, 'b' | 17, 'x', {'y', 'a' | 13}, 'b' | 17}
  %% Unique:
  %%    _11
  ret _11
}

%% match_SUITE.erl:314
%% Counter = 15
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_1`(_0) {
0:
  %% match_SUITE.erl:315
  %% Result type:
  %%    {any(), any(), any(), any()}
  %% Aliased:
  %%    _0
  Res = call (`multiple_aliases_1a`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:316
  %% Result type:
  %%    {any(), any(), any(), any()}
  %% Aliased:
  %%    _0
  _4 = call (`multiple_aliases_1b`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => {any(), any(), any(), any()}
  %%    Res => {any(), any(), any(), any()}
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    {any(), any(), any(), any()}
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:316
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:318
%% Counter = 5
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_1a`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple _0, _0, _0, _0
  %% Result type:
  %%    {any(), any(), any(), any()}
  %% Unique:
  %%    _2
  ret _2
}

%% match_SUITE.erl:321
%% Counter = 5
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_1b`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple _0, _0, _0, _0
  %% Result type:
  %%    {any(), any(), any(), any()}
  %% Unique:
  %%    _2
  ret _2
}

%% match_SUITE.erl:325
%% Counter = 5
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_2`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple _0, _0, _0
  %% Result type:
  %%    {any(), any(), any()}
  %% Unique:
  %%    _2
  ret _2
}

%% match_SUITE.erl:328
%% Counter = 15
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_3`(_0) {
0:
  %% match_SUITE.erl:329
  %% Result type:
  %%    {{any(), any()}, {any(), any()}, {any(), any()}}
  %% Aliased:
  %%    _0
  Res = call (`multiple_aliases_3a`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:330
  %% Result type:
  %%    {{any(), any()}, {any(), any()}, {any(), any()}}
  %% Aliased:
  %%    _0
  _4 = call (`multiple_aliases_3b`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => {{any(), any()}, {any(), any()}, {any(), any()}}
  %%    Res => {{any(), any()}, {any(), any()}, {any(), any()}}
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    {{any(), any()}, {any(), any()}, {any(), any()}}
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:330
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:332
%% Counter = 16
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_3a`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _12 = bif:is_tuple _0
  br _12, ^12, ^10

12:
  %% Argument types:
  %%    _0 => {...}
  %% Aliased:
  %%    _0
  _13 = bif:tuple_size _0

  %% Argument types:
  %%    _13 => 0..16777215
  %% Unique:
  %%    _13
  _14 = bif:'=:=' _13, `2`
  br _14, ^11, ^10

11:
  %% Argument types:
  %%    _0 => {any(), any()}
  %%    _0 => {any(), any()}
  %%    _0 => {any(), any()}
  %% Aliased:
  %%    _0
  _6 = put_tuple _0, _0, _0
  %% Result type:
  %%    {{any(), any()}, {any(), any()}, {any(), any()}}
  %% Unique:
  %%    _6
  ret _6

10:
  %% match_SUITE.erl:332
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-multiple_aliases_3a/1-',1}}
  _7 = match_fail `function_clause`, _0

  %% Unique:
  %%    _7
  _15 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% match_SUITE.erl:335
%% Counter = 31
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_3b`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _27 = bif:is_tuple _0
  br _27, ^27, ^18

27:
  %% Argument types:
  %%    _0 => {...}
  %% Aliased:
  %%    _0
  _28 = bif:tuple_size _0

  %% Argument types:
  %%    _28 => 0..16777215
  %% Unique:
  %%    _28
  _29 = bif:'=:=' _28, `2`
  br _29, ^21, ^18

21:
  %% Argument types:
  %%    _0 => {any(), any()}
  %%    _0 => {any(), any()}
  %%    _0 => {any(), any()}
  %% Aliased:
  %%    _0
  _13 = put_tuple _0, _0, _0
  %% Result type:
  %%    {{any(), any()}, {any(), any()}, {any(), any()}}
  %% Unique:
  %%    _13
  ret _13

18:
  %% match_SUITE.erl:336
  %% Aliased:
  %%    _0
  _15 = match_fail `badmatch`, _0

  %% Unique:
  %%    _15
  _30 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% match_SUITE.erl:339
%% Counter = 15
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_4`(_0) {
0:
  %% match_SUITE.erl:340
  %% Result type:
  %%    {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %% Aliased:
  %%    _0
  Res = call (`multiple_aliases_4a`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:341
  %% Result type:
  %%    {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %% Aliased:
  %%    _0
  _4 = call (`multiple_aliases_4b`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %%    Res => {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:341
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:343
%% Counter = 21
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_4a`(_0) {
0:
  %% Aliased:
  %%    _0
  _19 = is_nonempty_list _0
  br _19, ^19, ^15

19:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _5 = get_tl _0

  %% Aliased:
  %%    _5
  _18 = is_nonempty_list _5
  br _18, ^18, ^15

18:
  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _7 = get_tl _5

  %% Aliased:
  %%    _7
  _17 = is_nonempty_list _7
  br _17, ^17, ^15

17:
  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _9 = get_tl _7

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _16 = bif:'=:=' _9, `[]`
  br _16, ^16, ^15

16:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %%    _0 => nonempty_improper_list(any(), any())
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _11 = put_tuple _0, _0, _0
  %% Result type:
  %%    {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %% Unique:
  %%    _11
  ret _11

15:
  %% match_SUITE.erl:343
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-multiple_aliases_4a/1-',1}}
  _12 = match_fail `function_clause`, _0

  %% Unique:
  %%    _12
  _20 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% match_SUITE.erl:346
%% Counter = 41
%% bs_ensure_opt: true
function `match_SUITE`:`multiple_aliases_4b`(_0) {
0:
  %% Aliased:
  %%    _0
  _39 = is_nonempty_list _0
  br _39, ^39, ^28

39:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _11 = get_tl _0

  %% Aliased:
  %%    _11
  _38 = is_nonempty_list _11
  br _38, ^38, ^28

38:
  %% Argument types:
  %%    _11 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _11
  _13 = get_tl _11

  %% Aliased:
  %%    _13
  _37 = is_nonempty_list _13
  br _37, ^37, ^28

37:
  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _15 = get_tl _13

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _36 = bif:'=:=' _15, `[]`
  br _36, ^31, ^28

31:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %%    _0 => nonempty_improper_list(any(), any())
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _23 = put_tuple _0, _0, _0
  %% Result type:
  %%    {nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any()), nonempty_improper_list(any(), any())}
  %% Unique:
  %%    _23
  ret _23

28:
  %% match_SUITE.erl:347
  %% Aliased:
  %%    _0
  _25 = match_fail `badmatch`, _0

  %% Unique:
  %%    _25
  _40 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% match_SUITE.erl:350
%% Counter = 51
%% bs_ensure_opt: true
function `match_SUITE`:`list_alias`(_0) {
0:
  %% match_SUITE.erl:351
  %% Result type:
  %%    {'a', 'b'}
  %% Aliased:
  %%    _0
  Res = call (`list_alias1a`/1), _0

  %% Unique:
  %%    Res
  _25 = succeeded:body Res
  br _25, ^25, ^1

25:
  %% match_SUITE.erl:352
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _0
  _14 = call (`list_alias1b`/1), _0

  %% Unique:
  %%    _14
  _26 = succeeded:body _14
  br _26, ^26, ^1

26:
  %% Argument types:
  %%    _14 => {any(), any()}
  %% Unique:
  %%    _14
  _29 = bif:'=:=' _14, `{a,b}`
  br _29, ^29, ^28

29:
  %% match_SUITE.erl:353
  %% Result type:
  %%    {'a', 'b'}
  %% Aliased:
  %%    _0
  _15 = call (`list_alias2a`/1), _0

  %% Unique:
  %%    _15
  _30 = succeeded:body _15
  br _30, ^33, ^1

33:
  %% match_SUITE.erl:354
  %% Result type:
  %%    {'a' | 'b', 'a' | 'b'}
  %% Aliased:
  %%    _0
  _16 = call (`list_alias2b`/1), _0

  %% Unique:
  %%    _16
  _34 = succeeded:body _16
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _16 => {'a' | 'b', 'a' | 'b'}
  %% Unique:
  %%    _16
  _37 = bif:'=:=' _16, `{a,b}`
  br _37, ^37, ^36

37:
  %% match_SUITE.erl:355
  %% Result type:
  %%    {'a', 'b'}
  %% Aliased:
  %%    _0
  _17 = call (`list_alias3a`/1), _0

  %% Unique:
  %%    _17
  _38 = succeeded:body _17
  br _38, ^41, ^1

41:
  %% match_SUITE.erl:356
  %% Result type:
  %%    {'a', any()}
  %% Aliased:
  %%    _0
  _12 = call (`list_alias3b`/1), _0

  %% Unique:
  %%    _12
  _42 = succeeded:body _12
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    _12 => {'a', any()}
  %% Unique:
  %%    _12
  _45 = bif:'=:=' _12, `{a,b}`
  br _45, ^45, ^44

45:
  %% Result type:
  %%    {'a', 'b'}
  %% Unique:
  %%    _12
  ret _12

44:
  %% match_SUITE.erl:356
  %% Unique:
  %%    _12
  _18 = match_fail `badmatch`, _12

  %% Unique:
  %%    _18
  _46 = succeeded:body _18
  br ^1

36:
  %% match_SUITE.erl:354
  %% Unique:
  %%    _16
  _20 = match_fail `badmatch`, _16

  %% Unique:
  %%    _20
  _48 = succeeded:body _20
  br ^1

28:
  %% match_SUITE.erl:352
  %% Unique:
  %%    _14
  _22 = match_fail `badmatch`, _14

  %% Unique:
  %%    _22
  _50 = succeeded:body _22
  br ^1

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% match_SUITE.erl:358
%% Counter = 19
%% bs_ensure_opt: true
function `match_SUITE`:`list_alias1a`(_0) {
0:
  %% Aliased:
  %%    _0
  _17 = is_nonempty_list _0
  br _17, ^17, ^10

17:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _3 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _2 = get_tl _0

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _16 = bif:'=:=' _3, `a`
  br _16, ^15, ^10

15:
  %% Aliased:
  %%    _2
  _14 = is_nonempty_list _2
  br _14, ^14, ^10

14:
  %% Argument types:
  %%    _2 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _2
  _5 = get_hd _2

  %% Argument types:
  %%    _2 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _2
  _4 = get_tl _2

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _13 = bif:'=:=' _5, `b`
  br _13, ^12, ^10

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _11 = bif:'=:=' _4, `[]`
  br _11, ^11, ^10

11:
  %% Result type:
  %%    {'a', 'b'}
  ret `{a,b}`

10:
  %% match_SUITE.erl:358
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-list_alias1a/1-',1}}
  _7 = match_fail `function_clause`, _0

  %% Unique:
  %%    _7
  _18 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% match_SUITE.erl:361
%% Counter = 21
%% bs_ensure_opt: true
function `match_SUITE`:`list_alias1b`(_0) {
0:
  %% Aliased:
  %%    _0
  _19 = is_nonempty_list _0
  br _19, ^19, ^12

19:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _4 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _3 = get_tl _0

  %% Aliased:
  %%    _3
  _18 = is_nonempty_list _3
  br _18, ^18, ^12

18:
  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _6 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _5 = get_tl _3

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _17 = bif:'=:=' _5, `[]`
  br _17, ^17, ^12

17:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _15 = bif:'=:=' _0, `[a,b]`
  br _15, ^15, ^14

15:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4, 
  %%    _6
  _7 = put_tuple _4, _6
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _7
  ret _7

14:
  %% match_SUITE.erl:362
  %% Aliased:
  %%    _0
  _8 = match_fail `badmatch`, _0

  %% Unique:
  %%    _8
  _16 = succeeded:body _8
  br ^1

12:
  %% match_SUITE.erl:362
  %% Aliased:
  %%    _0
  _9 = match_fail `badmatch`, _0

  %% Unique:
  %%    _9
  _20 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% match_SUITE.erl:365
%% Counter = 19
%% bs_ensure_opt: true
function `match_SUITE`:`list_alias2a`(_0) {
0:
  %% Aliased:
  %%    _0
  _17 = is_nonempty_list _0
  br _17, ^17, ^10

17:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _3 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _2 = get_tl _0

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _16 = bif:'=:=' _3, `a`
  br _16, ^15, ^10

15:
  %% Aliased:
  %%    _2
  _14 = is_nonempty_list _2
  br _14, ^14, ^10

14:
  %% Argument types:
  %%    _2 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _2
  _5 = get_hd _2

  %% Argument types:
  %%    _2 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _2
  _4 = get_tl _2

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _13 = bif:'=:=' _5, `b`
  br _13, ^12, ^10

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _11 = bif:'=:=' _4, `[]`
  br _11, ^11, ^10

11:
  %% Result type:
  %%    {'a', 'b'}
  ret `{a,b}`

10:
  %% match_SUITE.erl:365
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-list_alias2a/1-',1}}
  _7 = match_fail `function_clause`, _0

  %% Unique:
  %%    _7
  _18 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% match_SUITE.erl:368
%% Counter = 21
%% bs_ensure_opt: true
function `match_SUITE`:`list_alias2b`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _19 = bif:'=:=' _0, `[a,b]`
  br _19, ^17, ^12

17:
  %% Argument types:
  %%    _0 => nonempty_list('a' | 'b')
  %% Aliased:
  %%    _0
  _4 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list('a' | 'b')
  %% Aliased:
  %%    _0
  _3 = get_tl _0

  %% Aliased:
  %%    _3
  _16 = is_nonempty_list _3
  br _16, ^16, ^14

16:
  %% Argument types:
  %%    _3 => nonempty_list('a' | 'b')
  %% Aliased:
  %%    _3
  _6 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_list('a' | 'b')
  %% Aliased:
  %%    _3
  _5 = get_tl _3

  %% Argument types:
  %%    _5 => list('a' | 'b')
  %% Aliased:
  %%    _5
  _15 = bif:'=:=' _5, `[]`
  br _15, ^15, ^14

15:
  %% Argument types:
  %%    _4 => 'a' | 'b'
  %%    _6 => 'a' | 'b'
  %% Unique:
  %%    _4, 
  %%    _6
  _7 = put_tuple _4, _6
  %% Result type:
  %%    {'a' | 'b', 'a' | 'b'}
  %% Unique:
  %%    _7
  ret _7

14:
  %% match_SUITE.erl:369
  %% Aliased:
  %%    _0
  _8 = match_fail `badmatch`, _0

  %% Unique:
  %%    _8
  _18 = succeeded:body _8
  br ^1

12:
  %% match_SUITE.erl:369
  %% Aliased:
  %%    _0
  _9 = match_fail `badmatch`, _0

  %% Unique:
  %%    _9
  _20 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% match_SUITE.erl:372
%% Counter = 19
%% bs_ensure_opt: true
function `match_SUITE`:`list_alias3a`(_0) {
0:
  %% Aliased:
  %%    _0
  _17 = is_nonempty_list _0
  br _17, ^17, ^10

17:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _3 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _2 = get_tl _0

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _16 = bif:'=:=' _3, `a`
  br _16, ^15, ^10

15:
  %% Aliased:
  %%    _2
  _14 = is_nonempty_list _2
  br _14, ^14, ^10

14:
  %% Argument types:
  %%    _2 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _2
  _5 = get_hd _2

  %% Argument types:
  %%    _2 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _2
  _4 = get_tl _2

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _13 = bif:'=:=' _5, `b`
  br _13, ^12, ^10

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _11 = bif:'=:=' _4, `[]`
  br _11, ^11, ^10

11:
  %% Result type:
  %%    {'a', 'b'}
  ret `{a,b}`

10:
  %% match_SUITE.erl:372
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-list_alias3a/1-',1}}
  _7 = match_fail `function_clause`, _0

  %% Unique:
  %%    _7
  _18 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% match_SUITE.erl:375
%% Counter = 26
%% bs_ensure_opt: true
function `match_SUITE`:`list_alias3b`(_0) {
0:
  %% Aliased:
  %%    _0
  _24 = is_nonempty_list _0
  br _24, ^24, ^14

24:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _4 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _3 = get_tl _0

  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _23 = bif:'=:=' _4, `a`
  br _23, ^22, ^14

22:
  %% Aliased:
  %%    _3
  _21 = is_nonempty_list _3
  br _21, ^21, ^14

21:
  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _6 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _5 = get_tl _3

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _20 = bif:'=:=' _5, `[]`
  br _20, ^18, ^14

18:
  %% Argument types:
  %%    _3 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _3
  _17 = bif:'=:=' _3, `[b]`
  br _17, ^17, ^16

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _9 = put_tuple `a`, _6
  %% Result type:
  %%    {'a', any()}
  %% Unique:
  %%    _9
  ret _9

16:
  %% match_SUITE.erl:376
  %% Aliased:
  %%    _0
  _10 = match_fail `badmatch`, _0

  %% Unique:
  %%    _10
  _19 = succeeded:body _10
  br ^1

14:
  %% match_SUITE.erl:376
  %% Aliased:
  %%    _0
  _11 = match_fail `badmatch`, _0

  %% Unique:
  %%    _11
  _25 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% match_SUITE.erl:379
%% Counter = 780
%% bs_ensure_opt: true
function `match_SUITE`:`non_matching_aliases`(_0) {
0:
  %% match_SUITE.erl:380
  %% Result type:
  %%    'none'
  _53 = call (`mixed_aliases`/1), `<<"*">>`

  %% Unique:
  %%    _53
  _173 = succeeded:body _53
  br _173, ^556, ^1

556:
  %% match_SUITE.erl:381
  %% Result type:
  %%    'none'
  _54 = call (`mixed_aliases`/1), `[b]`

  %% Unique:
  %%    _54
  _176 = succeeded:body _54
  br _176, ^553, ^1

553:
  %% match_SUITE.erl:382
  %% Result type:
  %%    'none'
  _55 = call (`mixed_aliases`/1), `[d]`

  %% Unique:
  %%    _55
  _179 = succeeded:body _55
  br _179, ^550, ^1

550:
  %% match_SUITE.erl:383
  %% Result type:
  %%    'none'
  _56 = call (`mixed_aliases`/1), `{a,42}`

  %% Unique:
  %%    _56
  _182 = succeeded:body _56
  br _182, ^547, ^1

547:
  %% match_SUITE.erl:384
  %% Result type:
  %%    'none'
  _57 = call (`mixed_aliases`/1), `42`

  %% Unique:
  %%    _57
  _185 = succeeded:body _57
  br _185, ^544, ^1

544:
  %% match_SUITE.erl:385
  %% Result type:
  %%    'none'
  _58 = call (`mixed_aliases`/1), `<<26,133>>`

  %% Unique:
  %%    _58
  _188 = succeeded:body _58
  br _188, ^541, ^1

541:
  %% match_SUITE.erl:386
  %% Result type:
  %%    'none' | {'i', map()}
  _59 = call (`mixed_aliases`/1), `#{key => value}`

  %% Unique:
  %%    _59
  _191 = succeeded:body _59
  br _191, ^191, ^1

191:
  %% Argument types:
  %%    _59 => 'none' | {'i', map()}
  %% Unique:
  %%    _59
  _539 = bif:'=:=' _59, `none`
  br _539, ^754, ^193

754:
  br ^767

767:
  _197 = new_try_tag `'catch'`
  br _197, ^195, ^196

195:
  %% match_SUITE.erl:388
  %% Result type:
  %%    none()
  _120 = call (`plus_plus_prefix`/0)

  %% Aliased:
  %%    _120
  _199 = succeeded:body _120
  br ^196

196:
  %% Unique:
  %%    _197
  _202 = landingpad `'catch'`, _197

  %% Aliased:
  %%    _202
  _200 = extract _202, `0`
  br ^194

194:
  %% Aliased:
  %%    _200
  %% Unique:
  %%    _197
  _8 = catch_end _197, _200

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _534 = is_tagged_tuple _8, `2`, `'EXIT'`
  br _534, ^531, ^205

531:
  %% Argument types:
  %%    _8 => {''EXIT'', any()}
  %% Aliased:
  %%    _8
  _60 = get_tuple_element _8, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _528 = bif:is_tuple _60
  br _528, ^528, ^205

528:
  %% Argument types:
  %%    _60 => {...}
  %% Aliased:
  %%    _60
  _529 = bif:tuple_size _60

  %% Argument types:
  %%    _529 => 0..16777215
  %% Unique:
  %%    _529
  _530 = bif:'=:=' _529, `2`
  br _530, ^527, ^205

527:
  %% Argument types:
  %%    _60 => {any(), any()}
  %% Aliased:
  %%    _60
  _63 = get_tuple_element _60, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _526 = bif:'=:=' _63, `{badmatch,bar}`
  br _526, ^755, ^205

755:
  br ^768

768:
  _209 = new_try_tag `'catch'`
  br _209, ^207, ^208

207:
  %% match_SUITE.erl:389
  %% Result type:
  %%    none()
  _122 = call (`nomatch_alias`/1), `42`

  %% Aliased:
  %%    _122
  _211 = succeeded:body _122
  br ^208

208:
  %% Unique:
  %%    _209
  _214 = landingpad `'catch'`, _209

  %% Aliased:
  %%    _214
  _212 = extract _214, `0`
  br ^206

206:
  %% Aliased:
  %%    _212
  %% Unique:
  %%    _209
  _10 = catch_end _209, _212

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _522 = is_tagged_tuple _10, `2`, `'EXIT'`
  br _522, ^519, ^217

519:
  %% Argument types:
  %%    _10 => {''EXIT'', any()}
  %% Aliased:
  %%    _10
  _64 = get_tuple_element _10, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _516 = bif:is_tuple _64
  br _516, ^516, ^217

516:
  %% Argument types:
  %%    _64 => {...}
  %% Aliased:
  %%    _64
  _517 = bif:tuple_size _64

  %% Argument types:
  %%    _517 => 0..16777215
  %% Unique:
  %%    _517
  _518 = bif:'=:=' _517, `2`
  br _518, ^515, ^217

515:
  %% Argument types:
  %%    _64 => {any(), any()}
  %% Aliased:
  %%    _64
  _67 = get_tuple_element _64, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _514 = bif:'=:=' _67, `{badmatch,42}`
  br _514, ^756, ^217

756:
  br ^769

769:
  _221 = new_try_tag `'catch'`
  br _221, ^219, ^220

219:
  %% match_SUITE.erl:390
  %% Result type:
  %%    none()
  _124 = call (`entirely`/0)

  %% Aliased:
  %%    _124
  _223 = succeeded:body _124
  br ^220

220:
  %% Unique:
  %%    _221
  _226 = landingpad `'catch'`, _221

  %% Aliased:
  %%    _226
  _224 = extract _226, `0`
  br ^218

218:
  %% Aliased:
  %%    _224
  %% Unique:
  %%    _221
  _12 = catch_end _221, _224

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _510 = is_tagged_tuple _12, `2`, `'EXIT'`
  br _510, ^507, ^229

507:
  %% Argument types:
  %%    _12 => {''EXIT'', any()}
  %% Aliased:
  %%    _12
  _68 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _504 = bif:is_tuple _68
  br _504, ^504, ^229

504:
  %% Argument types:
  %%    _68 => {...}
  %% Aliased:
  %%    _68
  _505 = bif:tuple_size _68

  %% Argument types:
  %%    _505 => 0..16777215
  %% Unique:
  %%    _505
  _506 = bif:'=:=' _505, `2`
  br _506, ^503, ^229

503:
  %% Argument types:
  %%    _68 => {any(), any()}
  %% Aliased:
  %%    _68
  _71 = get_tuple_element _68, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _502 = bif:'=:=' _71, `{badmatch,job}`
  br _502, ^757, ^229

757:
  br ^770

770:
  _233 = new_try_tag `'catch'`
  br _233, ^231, ^232

231:
  %% match_SUITE.erl:391
  %% Result type:
  %%    none()
  _126 = call (`printer`/0)

  %% Aliased:
  %%    _126
  _235 = succeeded:body _126
  br ^232

232:
  %% Unique:
  %%    _233
  _238 = landingpad `'catch'`, _233

  %% Aliased:
  %%    _238
  _236 = extract _238, `0`
  br ^230

230:
  %% Aliased:
  %%    _236
  %% Unique:
  %%    _233
  _14 = catch_end _233, _236

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _498 = is_tagged_tuple _14, `2`, `'EXIT'`
  br _498, ^495, ^241

495:
  %% Argument types:
  %%    _14 => {''EXIT'', any()}
  %% Aliased:
  %%    _14
  _72 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _492 = bif:is_tuple _72
  br _492, ^492, ^241

492:
  %% Argument types:
  %%    _72 => {...}
  %% Aliased:
  %%    _72
  _493 = bif:tuple_size _72

  %% Argument types:
  %%    _493 => 0..16777215
  %% Unique:
  %%    _493
  _494 = bif:'=:=' _493, `2`
  br _494, ^491, ^241

491:
  %% Argument types:
  %%    _72 => {any(), any()}
  %% Aliased:
  %%    _72
  _75 = get_tuple_element _72, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _490 = bif:'=:=' _75, `{badmatch,associates}`
  br _490, ^758, ^241

758:
  br ^771

771:
  _245 = new_try_tag `'catch'`
  br _245, ^243, ^244

243:
  %% match_SUITE.erl:392
  %% Result type:
  %%    none()
  _128 = call (`tench`/0)

  %% Aliased:
  %%    _128
  _247 = succeeded:body _128
  br ^244

244:
  %% Unique:
  %%    _245
  _250 = landingpad `'catch'`, _245

  %% Aliased:
  %%    _250
  _248 = extract _250, `0`
  br ^242

242:
  %% Aliased:
  %%    _248
  %% Unique:
  %%    _245
  _16 = catch_end _245, _248

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _486 = is_tagged_tuple _16, `2`, `'EXIT'`
  br _486, ^483, ^253

483:
  %% Argument types:
  %%    _16 => {''EXIT'', any()}
  %% Aliased:
  %%    _16
  _76 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _480 = bif:is_tuple _76
  br _480, ^480, ^253

480:
  %% Argument types:
  %%    _76 => {...}
  %% Aliased:
  %%    _76
  _481 = bif:tuple_size _76

  %% Argument types:
  %%    _481 => 0..16777215
  %% Unique:
  %%    _481
  _482 = bif:'=:=' _481, `2`
  br _482, ^479, ^253

479:
  %% Argument types:
  %%    _76 => {any(), any()}
  %% Aliased:
  %%    _76
  _79 = get_tuple_element _76, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _478 = bif:'=:=' _79, `{badmatch,borogoves}`
  br _478, ^478, ^253

478:
  %% match_SUITE.erl:394
  _129 = call (`erlang`:`put`/2), `perch`, `0`

  %% Aliased:
  %%    _129
  _254 = succeeded:body _129
  br _254, ^759, ^1

759:
  br ^772

772:
  _258 = new_try_tag `'catch'`
  br _258, ^256, ^257

256:
  %% match_SUITE.erl:395
  %% Result type:
  %%    none()
  _131 = call (`perch`/1), `42`

  %% Aliased:
  %%    _131
  _260 = succeeded:body _131
  br ^257

257:
  %% Unique:
  %%    _258
  _263 = landingpad `'catch'`, _258

  %% Aliased:
  %%    _263
  _261 = extract _263, `0`
  br ^255

255:
  %% Aliased:
  %%    _261
  %% Unique:
  %%    _258
  _18 = catch_end _258, _261

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _474 = is_tagged_tuple _18, `2`, `'EXIT'`
  br _474, ^471, ^266

471:
  %% Argument types:
  %%    _18 => {''EXIT'', any()}
  %% Aliased:
  %%    _18
  _80 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _468 = bif:is_tuple _80
  br _468, ^468, ^266

468:
  %% Argument types:
  %%    _80 => {...}
  %% Aliased:
  %%    _80
  _469 = bif:tuple_size _80

  %% Argument types:
  %%    _469 => 0..16777215
  %% Unique:
  %%    _469
  _470 = bif:'=:=' _469, `2`
  br _470, ^467, ^266

467:
  %% Argument types:
  %%    _80 => {any(), any()}
  %% Aliased:
  %%    _80
  _83 = get_tuple_element _80, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _466 = bif:'=:=' _83, `{badmatch,{spine,42}}`
  br _466, ^466, ^266

466:
  %% match_SUITE.erl:396
  _84 = call (`erlang`:`erase`/1), `perch`

  %% Aliased:
  %%    _84
  _267 = succeeded:body _84
  br _267, ^267, ^1

267:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _464 = bif:'=:=' _84, `1`
  br _464, ^463, ^269

463:
  %% match_SUITE.erl:398
  _132 = call (`erlang`:`put`/2), `salmon`, `0`

  %% Aliased:
  %%    _132
  _270 = succeeded:body _132
  br _270, ^760, ^1

760:
  br ^773

773:
  _274 = new_try_tag `'catch'`
  br _274, ^272, ^273

272:
  %% match_SUITE.erl:399
  %% Result type:
  %%    none()
  _134 = call (`salmon`/0)

  %% Aliased:
  %%    _134
  _276 = succeeded:body _134
  br ^273

273:
  %% Unique:
  %%    _274
  _279 = landingpad `'catch'`, _274

  %% Aliased:
  %%    _279
  _277 = extract _279, `0`
  br ^271

271:
  %% Aliased:
  %%    _277
  %% Unique:
  %%    _274
  _21 = catch_end _274, _277

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _459 = is_tagged_tuple _21, `2`, `'EXIT'`
  br _459, ^456, ^282

456:
  %% Argument types:
  %%    _21 => {''EXIT'', any()}
  %% Aliased:
  %%    _21
  _85 = get_tuple_element _21, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _453 = bif:is_tuple _85
  br _453, ^453, ^282

453:
  %% Argument types:
  %%    _85 => {...}
  %% Aliased:
  %%    _85
  _454 = bif:tuple_size _85

  %% Argument types:
  %%    _454 => 0..16777215
  %% Unique:
  %%    _454
  _455 = bif:'=:=' _454, `2`
  br _455, ^452, ^282

452:
  %% Argument types:
  %%    _85 => {any(), any()}
  %% Aliased:
  %%    _85
  _88 = get_tuple_element _85, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _451 = bif:'=:=' _88, `{badmatch,mimsy}`
  br _451, ^451, ^282

451:
  %% match_SUITE.erl:400
  _89 = call (`erlang`:`erase`/1), `salmon`

  %% Aliased:
  %%    _89
  _283 = succeeded:body _89
  br _283, ^283, ^1

283:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _449 = bif:'=:=' _89, `1`
  br _449, ^448, ^285

448:
  %% match_SUITE.erl:402
  _135 = call (`erlang`:`put`/2), `shark`, `0`

  %% Aliased:
  %%    _135
  _286 = succeeded:body _135
  br _286, ^761, ^1

761:
  br ^774

774:
  _290 = new_try_tag `'catch'`
  br _290, ^288, ^289

288:
  %% match_SUITE.erl:403
  %% Result type:
  %%    none()
  _137 = call (`shark`/0)

  %% Aliased:
  %%    _137
  _292 = succeeded:body _137
  br ^289

289:
  %% Unique:
  %%    _290
  _295 = landingpad `'catch'`, _290

  %% Aliased:
  %%    _295
  _293 = extract _295, `0`
  br ^287

287:
  %% Aliased:
  %%    _293
  %% Unique:
  %%    _290
  _24 = catch_end _290, _293

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _444 = is_tagged_tuple _24, `2`, `'EXIT'`
  br _444, ^441, ^298

441:
  %% Argument types:
  %%    _24 => {''EXIT'', any()}
  %% Aliased:
  %%    _24
  _90 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _438 = bif:is_tuple _90
  br _438, ^438, ^298

438:
  %% Argument types:
  %%    _90 => {...}
  %% Aliased:
  %%    _90
  _439 = bif:tuple_size _90

  %% Argument types:
  %%    _439 => 0..16777215
  %% Unique:
  %%    _439
  _440 = bif:'=:=' _439, `2`
  br _440, ^437, ^298

437:
  %% Argument types:
  %%    _90 => {any(), any()}
  %% Aliased:
  %%    _90
  _93 = get_tuple_element _90, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _434 = is_tagged_tuple _93, `2`, `badmatch`
  br _434, ^431, ^298

431:
  %% match_SUITE.erl:404
  _96 = call (`erlang`:`erase`/1), `shark`

  %% Aliased:
  %%    _96
  _299 = succeeded:body _96
  br _299, ^299, ^1

299:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _429 = bif:'=:=' _96, `1`
  br _429, ^762, ^301

762:
  br ^775

775:
  _305 = new_try_tag `'catch'`
  br _305, ^303, ^304

303:
  %% match_SUITE.erl:406
  %% Result type:
  %%    none()
  _139 = call (`radio`/1), `research`

  %% Aliased:
  %%    _139
  _307 = succeeded:body _139
  br ^304

304:
  %% Unique:
  %%    _305
  _310 = landingpad `'catch'`, _305

  %% Aliased:
  %%    _310
  _308 = extract _310, `0`
  br ^302

302:
  %% Aliased:
  %%    _308
  %% Unique:
  %%    _305
  _27 = catch_end _305, _308

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _424 = is_tagged_tuple _27, `2`, `'EXIT'`
  br _424, ^421, ^313

421:
  %% Argument types:
  %%    _27 => {''EXIT'', any()}
  %% Aliased:
  %%    _27
  _97 = get_tuple_element _27, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _418 = bif:is_tuple _97
  br _418, ^418, ^313

418:
  %% Argument types:
  %%    _97 => {...}
  %% Aliased:
  %%    _97
  _419 = bif:tuple_size _97

  %% Argument types:
  %%    _419 => 0..16777215
  %% Unique:
  %%    _419
  _420 = bif:'=:=' _419, `2`
  br _420, ^417, ^313

417:
  %% Argument types:
  %%    _97 => {any(), any()}
  %% Aliased:
  %%    _97
  _100 = get_tuple_element _97, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _414 = is_tagged_tuple _100, `2`, `badmatch`
  br _414, ^763, ^313

763:
  br ^776

776:
  _317 = new_try_tag `'catch'`
  br _317, ^315, ^316

315:
  %% match_SUITE.erl:408
  %% Result type:
  %%    none()
  _141 = call (`pike1`/1), `whatever`

  %% Aliased:
  %%    _141
  _319 = succeeded:body _141
  br ^316

316:
  %% Unique:
  %%    _317
  _322 = landingpad `'catch'`, _317

  %% Aliased:
  %%    _322
  _320 = extract _322, `0`
  br ^314

314:
  %% Aliased:
  %%    _320
  %% Unique:
  %%    _317
  _29 = catch_end _317, _320

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _407 = is_tagged_tuple _29, `2`, `'EXIT'`
  br _407, ^404, ^325

404:
  %% Argument types:
  %%    _29 => {''EXIT'', any()}
  %% Aliased:
  %%    _29
  _103 = get_tuple_element _29, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _401 = bif:is_tuple _103
  br _401, ^401, ^325

401:
  %% Argument types:
  %%    _103 => {...}
  %% Aliased:
  %%    _103
  _402 = bif:tuple_size _103

  %% Argument types:
  %%    _402 => 0..16777215
  %% Unique:
  %%    _402
  _403 = bif:'=:=' _402, `2`
  br _403, ^400, ^325

400:
  %% Argument types:
  %%    _103 => {any(), any()}
  %% Aliased:
  %%    _103
  _106 = get_tuple_element _103, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _106
  _399 = bif:'=:=' _106, `{case_clause,whatever}`
  br _399, ^764, ^325

764:
  br ^777

777:
  _329 = new_try_tag `'catch'`
  br _329, ^327, ^328

327:
  %% match_SUITE.erl:409
  %% Result type:
  %%    none()
  _143 = call (`pike2`/1), `whatever`

  %% Aliased:
  %%    _143
  _331 = succeeded:body _143
  br ^328

328:
  %% Unique:
  %%    _329
  _334 = landingpad `'catch'`, _329

  %% Aliased:
  %%    _334
  _332 = extract _334, `0`
  br ^326

326:
  %% Aliased:
  %%    _332
  %% Unique:
  %%    _329
  _31 = catch_end _329, _332

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _395 = is_tagged_tuple _31, `2`, `'EXIT'`
  br _395, ^392, ^337

392:
  %% Argument types:
  %%    _31 => {''EXIT'', any()}
  %% Aliased:
  %%    _31
  _107 = get_tuple_element _31, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _389 = bif:is_tuple _107
  br _389, ^389, ^337

389:
  %% Argument types:
  %%    _107 => {...}
  %% Aliased:
  %%    _107
  _390 = bif:tuple_size _107

  %% Argument types:
  %%    _390 => 0..16777215
  %% Unique:
  %%    _390
  _391 = bif:'=:=' _390, `2`
  br _391, ^388, ^337

388:
  %% Argument types:
  %%    _107 => {any(), any()}
  %% Aliased:
  %%    _107
  _110 = get_tuple_element _107, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _387 = bif:'=:=' _110, `{case_clause,whatever}`
  br _387, ^765, ^337

765:
  br ^778

778:
  _341 = new_try_tag `'catch'`
  br _341, ^339, ^340

339:
  %% match_SUITE.erl:411
  %% Result type:
  %%    none()
  _145 = call (`squid`/1), `a`

  %% Aliased:
  %%    _145
  _343 = succeeded:body _145
  br ^340

340:
  %% Unique:
  %%    _341
  _346 = landingpad `'catch'`, _341

  %% Aliased:
  %%    _346
  _344 = extract _346, `0`
  br ^338

338:
  %% Aliased:
  %%    _344
  %% Unique:
  %%    _341
  _33 = catch_end _341, _344

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _383 = is_tagged_tuple _33, `2`, `'EXIT'`
  br _383, ^380, ^349

380:
  %% Argument types:
  %%    _33 => {''EXIT'', any()}
  %% Aliased:
  %%    _33
  _111 = get_tuple_element _33, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _377 = is_tagged_tuple _111, `2`, `badarith`
  br _377, ^766, ^349

766:
  br ^779

779:
  _353 = new_try_tag `'catch'`
  br _353, ^351, ^352

351:
  %% match_SUITE.erl:412
  %% Result type:
  %%    none()
  _147 = call (`squid`/1), `42`

  %% Aliased:
  %%    _147
  _355 = succeeded:body _147
  br ^352

352:
  %% Unique:
  %%    _353
  _358 = landingpad `'catch'`, _353

  %% Aliased:
  %%    _358
  _356 = extract _358, `0`
  br ^350

350:
  %% Aliased:
  %%    _356
  %% Unique:
  %%    _353
  _35 = catch_end _353, _356

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _370 = is_tagged_tuple _35, `2`, `'EXIT'`
  br _370, ^367, ^361

367:
  %% Argument types:
  %%    _35 => {''EXIT'', any()}
  %% Aliased:
  %%    _35
  _115 = get_tuple_element _35, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _115
  _364 = bif:is_tuple _115
  br _364, ^364, ^361

364:
  %% Argument types:
  %%    _115 => {...}
  %% Aliased:
  %%    _115
  _365 = bif:tuple_size _115

  %% Argument types:
  %%    _365 => 0..16777215
  %% Unique:
  %%    _365
  _366 = bif:'=:=' _365, `2`
  br _366, ^363, ^361

363:
  %% Argument types:
  %%    _115 => {any(), any()}
  %% Aliased:
  %%    _115
  _118 = get_tuple_element _115, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _362 = bif:'=:=' _118, `{badmatch,43}`
  br _362, ^362, ^361

362:
  %% Result type:
  %%    'ok'
  ret `ok`

361:
  %% match_SUITE.erl:412
  %% Aliased:
  %%    _35
  _148 = match_fail `badmatch`, _35

  %% Unique:
  %%    _148
  _373 = succeeded:body _148
  br ^1

349:
  %% match_SUITE.erl:411
  %% Aliased:
  %%    _33
  _149 = match_fail `badmatch`, _33

  %% Unique:
  %%    _149
  _386 = succeeded:body _149
  br ^1

337:
  %% match_SUITE.erl:409
  %% Aliased:
  %%    _31
  _150 = match_fail `badmatch`, _31

  %% Unique:
  %%    _150
  _398 = succeeded:body _150
  br ^1

325:
  %% match_SUITE.erl:408
  %% Aliased:
  %%    _29
  _151 = match_fail `badmatch`, _29

  %% Unique:
  %%    _151
  _410 = succeeded:body _151
  br ^1

313:
  %% match_SUITE.erl:406
  %% Aliased:
  %%    _27
  _152 = match_fail `badmatch`, _27

  %% Unique:
  %%    _152
  _427 = succeeded:body _152
  br ^1

301:
  %% match_SUITE.erl:404
  %% Aliased:
  %%    _96
  _153 = match_fail `badmatch`, _96

  %% Unique:
  %%    _153
  _430 = succeeded:body _153
  br ^1

298:
  %% match_SUITE.erl:403
  %% Aliased:
  %%    _24
  _154 = match_fail `badmatch`, _24

  %% Unique:
  %%    _154
  _447 = succeeded:body _154
  br ^1

285:
  %% match_SUITE.erl:400
  %% Aliased:
  %%    _89
  _155 = match_fail `badmatch`, _89

  %% Unique:
  %%    _155
  _450 = succeeded:body _155
  br ^1

282:
  %% match_SUITE.erl:399
  %% Aliased:
  %%    _21
  _156 = match_fail `badmatch`, _21

  %% Unique:
  %%    _156
  _462 = succeeded:body _156
  br ^1

269:
  %% match_SUITE.erl:396
  %% Aliased:
  %%    _84
  _157 = match_fail `badmatch`, _84

  %% Unique:
  %%    _157
  _465 = succeeded:body _157
  br ^1

266:
  %% match_SUITE.erl:395
  %% Aliased:
  %%    _18
  _158 = match_fail `badmatch`, _18

  %% Unique:
  %%    _158
  _477 = succeeded:body _158
  br ^1

253:
  %% match_SUITE.erl:392
  %% Aliased:
  %%    _16
  _159 = match_fail `badmatch`, _16

  %% Unique:
  %%    _159
  _489 = succeeded:body _159
  br ^1

241:
  %% match_SUITE.erl:391
  %% Aliased:
  %%    _14
  _160 = match_fail `badmatch`, _14

  %% Unique:
  %%    _160
  _501 = succeeded:body _160
  br ^1

229:
  %% match_SUITE.erl:390
  %% Aliased:
  %%    _12
  _161 = match_fail `badmatch`, _12

  %% Unique:
  %%    _161
  _513 = succeeded:body _161
  br ^1

217:
  %% match_SUITE.erl:389
  %% Aliased:
  %%    _10
  _162 = match_fail `badmatch`, _10

  %% Unique:
  %%    _162
  _525 = succeeded:body _162
  br ^1

205:
  %% match_SUITE.erl:388
  %% Aliased:
  %%    _8
  _163 = match_fail `badmatch`, _8

  %% Unique:
  %%    _163
  _537 = succeeded:body _163
  br ^1

193:
  %% match_SUITE.erl:386
  %% Unique:
  %%    _59
  _164 = match_fail `badmatch`, _59

  %% Unique:
  %%    _164
  _540 = succeeded:body _164
  br ^1

1:
  _171 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _171
}

%% match_SUITE.erl:416
%% Counter = 144
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list('b' | 'd') | 42 | {'a', 42} | other()
%%     accepts_match_context
function `match_SUITE`:`mixed_aliases`(_0) {
0:
  %% Argument types:
  %%    _0 => nonempty_list('b' | 'd') | 42 | {'a', 42} | other()
  %% Aliased:
  %%    _0
  %% Anno: #{accepts_match_contexts => true}
  _91 = bif:is_bitstring _0
  br _91, ^79, ^80

80:
  %% Argument types:
  %%    _0 => nonempty_list('b' | 'd') | 42 | {'a', 42} | other()
  %% Aliased:
  %%    _0
  _134 = bif:is_tuple _0
  br _134, ^79, ^92

92:
  %% Argument types:
  %%    _0 => nonempty_list('b' | 'd') | 42 | other()
  %% Aliased:
  %%    _0
  _141 = bif:is_map _0
  br _141, ^141, ^79

141:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _64 = get_map_element _0, `key`

  %% Aliased:
  %%    _64
  _137 = succeeded:guard _64
  br _137, ^137, ^79

137:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0, 
  %%    _64
  _139 = bif:'=:=' _64, _0
  br _139, ^139, ^79

139:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _66 = put_tuple `i`, _0
  %% Result type:
  %%    {'i', map()}
  %% Unique:
  %%    _66
  ret _66

79:
  %% Result type:
  %%    'none'
  ret `none`
}

%% match_SUITE.erl:433
%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`plus_plus_prefix`() {
0:
  %% match_SUITE.erl:434
  _2 = match_fail `badmatch`, `bar`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:436
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
function `match_SUITE`:`nomatch_alias`(_0) {
0:
  %% match_SUITE.erl:437
  _2 = call (`id`/1), _0

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% match_SUITE.erl:437
  %% Aliased:
  %%    _2
  _3 = match_fail `badmatch`, _2

  %% Unique:
  %%    _3
  _7 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% match_SUITE.erl:440
%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`entirely`() {
0:
  %% match_SUITE.erl:441
  _2 = match_fail `badmatch`, `job`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:444
%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`printer`() {
0:
  %% match_SUITE.erl:445
  _2 = match_fail `badmatch`, `associates`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:448
%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`tench`() {
0:
  %% match_SUITE.erl:450
  _2 = match_fail `badmatch`, `borogoves`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:455
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
function `match_SUITE`:`perch`(_0) {
0:
  %% match_SUITE.erl:457
  %% Argument types:
  %%    
  _1 = bif:get `perch`

  %% match_SUITE.erl:457
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _2 = bif:'+' _1, `1`

  %% Unique:
  %%    _2
  _9 = succeeded:body _2
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:457
  %% Unique:
  %%    _2
  _5 = call (`erlang`:`put`/2), `perch`, _2

  %% Aliased:
  %%    _5
  _10 = succeeded:body _5
  br _10, ^10, ^1

10:
  %% match_SUITE.erl:458
  _6 = match_fail `badmatch`, `{spine,42}`

  %% Unique:
  %%    _6
  _11 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:461
%% Counter = 12
%% bs_ensure_opt: true
function `match_SUITE`:`salmon`() {
0:
  %% match_SUITE.erl:462
  %% Argument types:
  %%    
  _3 = bif:get `salmon`

  %% match_SUITE.erl:462
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _4 = bif:'+' _3, `1`

  %% Unique:
  %%    _4
  _9 = succeeded:body _4
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:462
  %% Unique:
  %%    _4
  _5 = call (`erlang`:`put`/2), `salmon`, _4

  %% Aliased:
  %%    _5
  _10 = succeeded:body _5
  br _10, ^10, ^1

10:
  %% match_SUITE.erl:462
  _6 = match_fail `badmatch`, `mimsy`

  %% Unique:
  %%    _6
  _11 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:465
%% Counter = 41
%% bs_ensure_opt: true
function `match_SUITE`:`shark`() {
0:
  %% match_SUITE.erl:466
  %% Argument types:
  %%    
  _2 = bif:get `shark`
  _15 = new_try_tag `'catch'`
  br _15, ^13, ^14

13:
  %% match_SUITE.erl:466
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _3 = bif:'+' _2, `1`

  %% Unique:
  %%    _3
  _17 = succeeded:body _3
  br _17, ^17, ^14

17:
  %% match_SUITE.erl:466
  %% Unique:
  %%    _3
  _7 = call (`erlang`:`put`/2), `shark`, _3

  %% Aliased:
  %%    _7
  _18 = succeeded:body _7
  br _18, ^18, ^14

18:
  %% match_SUITE.erl:466
  _8 = match_fail `badmatch`, `b`

  %% Unique:
  %%    _8
  _19 = succeeded:body _8
  br ^14

14:
  %% Unique:
  %%    _15
  _22 = landingpad `'catch'`, _15

  %% Aliased:
  %%    _22
  _20 = extract _22, `0`
  br ^12

12:
  %% Aliased:
  %%    _20
  %% Unique:
  %%    _15
  _5 = catch_end _15, _20

  %% match_SUITE.erl:466
  %% Aliased:
  %%    _5
  _9 = match_fail `badmatch`, _5

  %% Unique:
  %%    _9
  _24 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% match_SUITE.erl:471
%% Counter = 50
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'research'
function `match_SUITE`:`radio`(_0) {
0:
  br ^49

49:
  _19 = new_try_tag `'catch'`
  br _19, ^17, ^18

17:
  %% match_SUITE.erl:474
  _10 = match_fail `badmatch`, `mechanisms`

  %% Unique:
  %%    _10
  _24 = succeeded:body _10
  br ^18

18:
  %% Unique:
  %%    _19
  _27 = landingpad `'catch'`, _19

  %% Aliased:
  %%    _27
  _25 = extract _27, `0`
  br ^16

16:
  %% Aliased:
  %%    _25
  %% Unique:
  %%    _19
  _4 = catch_end _19, _25

  %% match_SUITE.erl:472
  %% Aliased:
  %%    _4
  _11 = match_fail `badmatch`, _4

  %% Unique:
  %%    _11
  _29 = succeeded:body _11
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% match_SUITE.erl:476
%% Counter = 21
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'whatever'
function `match_SUITE`:`pike1`(_0) {
0:
  %% match_SUITE.erl:477
  _8 = call (`id`/1), `[]`

  %% Aliased:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _19 = bif:'=:=' _8, `[]`
  br _19, ^19, ^17

19:
  %% match_SUITE.erl:479
  _10 = match_fail `case_clause`, `whatever`

  %% Unique:
  %%    _10
  _18 = succeeded:body _10
  br ^1

17:
  %% match_SUITE.erl:477
  %% Aliased:
  %%    _8
  _12 = match_fail `case_clause`, _8

  %% Unique:
  %%    _12
  _20 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% match_SUITE.erl:486
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'whatever'
function `match_SUITE`:`pike2`(_0) {
0:
  %% match_SUITE.erl:487
  _10 = call (`id`/1), `[]`

  %% Aliased:
  %%    _10
  _17 = succeeded:body _10
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _21 = bif:'=:=' _10, `[]`
  br _21, ^21, ^19

21:
  %% match_SUITE.erl:489
  _12 = match_fail `case_clause`, `whatever`

  %% Unique:
  %%    _12
  _20 = succeeded:body _12
  br ^1

19:
  %% match_SUITE.erl:487
  %% Aliased:
  %%    _10
  _14 = match_fail `case_clause`, _10

  %% Unique:
  %%    _14
  _22 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% match_SUITE.erl:496
%% Counter = 7
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 42
function `match_SUITE`:`squid`(_0) {
0:
  %% match_SUITE.erl:497
  %% Argument types:
  %%    _0 => 'a' | 42
  %% Unique:
  %%    _0
  _1 = bif:'+' _0, `1`

  %% Unique:
  %%    _1
  _5 = succeeded:body _1
  br _5, ^5, ^1

5:
  %% match_SUITE.erl:497
  %% Unique:
  %%    _1
  _2 = match_fail `badmatch`, _1

  %% Unique:
  %%    _2
  _6 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:503
%% Counter = 70
%% bs_ensure_opt: true
function `match_SUITE`:`match_in_call`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _22 = bif:is_list _0
  br _22, ^22, ^21

22:
  %% match_SUITE.erl:504
  %% Result type:
  %%    'ok'
  _9 = call (`mac_a`/1), `0`

  %% Unique:
  %%    _9
  _23 = succeeded:body _9
  br _23, ^23, ^1

23:
  %% match_SUITE.erl:505
  %% Result type:
  %%    'ok'
  _10 = call (`mac_b`/1), `1`

  %% Unique:
  %%    _10
  _24 = succeeded:body _10
  br _24, ^24, ^1

24:
  %% match_SUITE.erl:506
  %% Result type:
  %%    'ok'
  _11 = call (`mac_c`/1), `42`

  %% Unique:
  %%    _11
  _25 = succeeded:body _11
  br _25, ^25, ^1

25:
  %% match_SUITE.erl:507
  %% Result type:
  %%    'ok'
  _12 = call (`mac_d`/1), `42`

  %% Unique:
  %%    _12
  _26 = succeeded:body _12
  br _26, ^26, ^1

26:
  %% match_SUITE.erl:508
  %% Result type:
  %%    'ok'
  _13 = call (`mac_e`/1), `{gurka,42}`

  %% Unique:
  %%    _13
  _27 = succeeded:body _13
  br _27, ^27, ^1

27:
  %% match_SUITE.erl:510
  %% Result type:
  %%    nonempty_list({2, 2})
  _6 = call (`mac_lc`/1), `[{2,any},{2,2}]`

  %% Unique:
  %%    _6
  _28 = succeeded:body _6
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _6 => nonempty_list({2, 2})
  %% Unique:
  %%    _6
  _50 = bif:'=:=' _6, `[{2,2},{2,2}]`
  br _50, ^68, ^30

68:
  br ^69

69:
  _34 = new_try_tag `'catch'`
  br _34, ^32, ^33

32:
  %% match_SUITE.erl:511
  %% Result type:
  %%    nonempty_list({2, 2})
  _15 = call (`mac_lc`/1), `[{1,1}]`

  %% Unique:
  %%    _15
  _36 = succeeded:body _15
  br _36, ^36, ^33

36:
  br ^31

33:
  %% Unique:
  %%    _34
  _39 = landingpad `'catch'`, _34

  %% Aliased:
  %%    _39
  _37 = extract _39, `0`
  br ^31

31:
  _40 = phi { _37, ^33 }, { _15, ^36 }

  %% Aliased:
  %%    _40
  %% Unique:
  %%    _34
  _2 = catch_end _34, _40

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _46 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _46, ^43, ^42

43:
  %% Result type:
  %%    'ok'
  ret `ok`

42:
  %% match_SUITE.erl:511
  %% Aliased:
  %%    _2
  _16 = match_fail `badmatch`, _2

  %% Unique:
  %%    _16
  _49 = succeeded:body _16
  br ^1

30:
  %% match_SUITE.erl:510
  %% Unique:
  %%    _6
  _17 = match_fail `badmatch`, _6

  %% Unique:
  %%    _17
  _51 = succeeded:body _17
  br ^1

21:
  %% match_SUITE.erl:503
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-match_in_call/1-',1}}
  _18 = match_fail `function_clause`, _0

  %% Unique:
  %%    _18
  _52 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% match_SUITE.erl:515
%% Counter = 7
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0
function `match_SUITE`:`mac_a`(_0) {
0:
  %% match_SUITE.erl:516
  _2 = call (`id`/1), `{gurka,0}`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:519
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
function `match_SUITE`:`mac_b`(_0) {
0:
  %% match_SUITE.erl:520
  _2 = call (`id`/1), `{gurka,1}`

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% match_SUITE.erl:521
  %% Result type:
  %%    'ok'
  _3 = call (`gurka`/2), `{gurka,1}`, `1`

  %% Unique:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^9, ^1

9:
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% match_SUITE.erl:524
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
function `match_SUITE`:`mac_c`(_0) {
0:
  %% match_SUITE.erl:525
  _3 = call (`id`/1), `{gurka,42}`

  %% Aliased:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^10, ^1

10:
  %% match_SUITE.erl:526
  _4 = call (`id`/1), `{{gurka,42},{gurka,42}}`

  %% Aliased:
  %%    _4
  _8 = succeeded:body _4
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% match_SUITE.erl:529
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
function `match_SUITE`:`mac_d`(_0) {
0:
  %% match_SUITE.erl:530
  _6 = call (`id`/1), `{gurka,42}`

  %% Aliased:
  %%    _6
  _11 = succeeded:body _6
  br _11, ^11, ^1

11:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% match_SUITE.erl:533
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'gurka', 42}
function `match_SUITE`:`mac_e`(_0) {
0:
  %% match_SUITE.erl:534
  _2 = call (`id`/1), _0

  %% Aliased:
  %%    _2
  _7 = succeeded:body _2
  br _7, ^7, ^1

7:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% match_SUITE.erl:537
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list({1, 1} | {2, 'any' | 2})
function `match_SUITE`:`mac_lc`(_0) {
0:
  %% match_SUITE.erl:538
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Aliased:
  %%    _0
  Res = call (`mac_lc1`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% match_SUITE.erl:539
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Aliased:
  %%    _0
  _4 = call (`mac_lc2`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => nonempty_list({2, 2})
  %%    Res => nonempty_list({2, 2})
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:539
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:541
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list({1, 1} | {2, 'any' | 2})
function `match_SUITE`:`mac_lc1`(_0) {
0:
  %% match_SUITE.erl:543
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Aliased:
  %%    _0
  _25 = call (`'-mac_lc1/1-lc$^0/1-0-'`/1), _0

  %% Unique:
  %%    _25
  _28 = succeeded:body _25
  br _28, ^28, ^1

28:
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Unique:
  %%    _25
  ret _25

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% match_SUITE.erl:546
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list({1, 1} | {2, 'any' | 2})
function `match_SUITE`:`mac_lc2`(_0) {
0:
  %% match_SUITE.erl:548
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Aliased:
  %%    _0
  _25 = call (`'-mac_lc2/1-lc$^0/1-0-'`/1), _0

  %% Unique:
  %%    _25
  _28 = succeeded:body _25
  br _28, ^28, ^1

28:
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Unique:
  %%    _25
  ret _25

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% match_SUITE.erl:551
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'gurka', 1}
%%    _1 =>
%%     1
function `match_SUITE`:`gurka`(_0, _1) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% match_SUITE.erl:554
%% Counter = 41
%% bs_ensure_opt: true
function `match_SUITE`:`untuplify`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _18 = bif:is_list _0
  br _18, ^18, ^17

18:
  %% match_SUITE.erl:556
  %% Result type:
  %%    'error' | {1..2, 1..2, 3, 4, 'alias', {nonempty_list(1..2), {3, 4}, 'alias'}}
  _6 = call (`untuplify_1`/3), `[1,2]`, `{3,4}`, `alias`

  %% Unique:
  %%    _6
  _19 = succeeded:body _6
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    _6 => 'error' | {1..2, 1..2, 3, 4, 'alias', {nonempty_list(1..2), {3, 4}, 'alias'}}
  %% Unique:
  %%    _6
  _38 = bif:'=:=' _6, `{1,2,3,4,alias,{[1,2],{3,4},alias}}`
  br _38, ^38, ^21

38:
  %% match_SUITE.erl:557
  %% Result type:
  %%    'error'
  _7 = call (`untuplify_1`/3), `[1,2]`, `{3,4}`, `42`

  %% Unique:
  %%    _7
  _22 = succeeded:body _7
  br _22, ^35, ^1

35:
  %% match_SUITE.erl:562
  %% Result type:
  %%    nonempty_list('-inf'..33) | {'-inf'..33, 0..1, '-inf'..33, -1..0}
  _8 = call (`untuplify_2`/2), `32`, `65`

  %% Unique:
  %%    _8
  _25 = succeeded:body _8
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    _8 => nonempty_list('-inf'..33) | {'-inf'..33, 0..1, '-inf'..33, -1..0}
  %% Unique:
  %%    _8
  _33 = bif:'=:=' _8, `[33,-1,-33,1]`
  br _33, ^33, ^27

33:
  %% match_SUITE.erl:563
  %% Result type:
  %%    nonempty_list('-inf'..33) | {'-inf'..33, 0..1, '-inf'..33, -1..0}
  _9 = call (`untuplify_2`/2), `65`, `32`

  %% Unique:
  %%    _9
  _28 = succeeded:body _9
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _9 => nonempty_list('-inf'..33) | {'-inf'..33, 0..1, '-inf'..33, -1..0}
  %% Unique:
  %%    _9
  _31 = bif:'=:=' _9, `{33,1,-33,-1}`
  br _31, ^31, ^30

31:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% match_SUITE.erl:563
  %% Unique:
  %%    _9
  _10 = match_fail `badmatch`, _9

  %% Unique:
  %%    _10
  _32 = succeeded:body _10
  br ^1

27:
  %% match_SUITE.erl:562
  %% Unique:
  %%    _8
  _11 = match_fail `badmatch`, _8

  %% Unique:
  %%    _11
  _34 = succeeded:body _11
  br ^1

21:
  %% match_SUITE.erl:556
  %% Unique:
  %%    _6
  _13 = match_fail `badmatch`, _6

  %% Unique:
  %%    _13
  _39 = succeeded:body _13
  br ^1

17:
  %% match_SUITE.erl:554
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-untuplify/1-',1}}
  _14 = match_fail `function_clause`, _0

  %% Unique:
  %%    _14
  _40 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% match_SUITE.erl:567
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(1..2)
%%    _1 =>
%%     {3, 4}
%%    _2 =>
%%     'alias' | 42
function `match_SUITE`:`untuplify_1`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _0 => nonempty_list(1..2)
  %% Unique:
  %%    _0
  _14 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(1..2)
  %% Unique:
  %%    _0
  _13 = get_tl _0

  %% Unique:
  %%    _13
  _30 = is_nonempty_list _13
  br _30, ^30, ^22

30:
  %% Argument types:
  %%    _13 => nonempty_list(1..2)
  %% Unique:
  %%    _13
  _16 = get_hd _13

  %% Argument types:
  %%    _13 => nonempty_list(1..2)
  %% Unique:
  %%    _13
  _15 = get_tl _13

  %% Argument types:
  %%    _15 => list(1..2)
  %% Unique:
  %%    _15
  _29 = bif:'=:=' _15, `[]`
  br _29, ^25, ^22

25:
  %% Argument types:
  %%    _2 => 'alias' | 42
  %% Unique:
  %%    _2
  _24 = bif:'=:=' _2, `alias`
  br _24, ^23, ^22

23:
  %% Argument types:
  %%    _0 => nonempty_list(1..2)
  %% Unique:
  %%    _0
  Top = put_tuple _0, `{3,4}`, `alias`

  %% Argument types:
  %%    _14 => 1..2
  %%    _16 => 1..2
  %%    Top => {nonempty_list(1..2), {3, 4}, 'alias'}
  %% Unique:
  %%    _14, 
  %%    _16, 
  %%    Top
  _19 = put_tuple _14, _16, `3`, `4`, `alias`, Top
  %% Result type:
  %%    {1..2, 1..2, 3, 4, 'alias', {nonempty_list(1..2), {3, 4}, 'alias'}}
  %% Unique:
  %%    _19
  ret _19

22:
  %% Result type:
  %%    'error'
  ret `error`
}

%% match_SUITE.erl:577
%% Counter = 33
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     32..65
%%    _1 =>
%%     32..65
function `match_SUITE`:`untuplify_2`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 32..65
  %%    _1 => 32..65
  %% Unique:
  %%    _0, 
  %%    _1
  _25 = bif:'>' _0, _1
  br _25, ^25, ^24

25:
  %% match_SUITE.erl:581
  %% Argument types:
  %%    _0 => 33..65
  %%    _1 => 32..64
  %% Unique:
  %%    _0, 
  %%    _1
  _4 = bif:'-' _0, _1

  %% match_SUITE.erl:581
  %% Argument types:
  %%    _1 => 32..64
  %%    _0 => 33..65
  %% Unique:
  %%    _0, 
  %%    _1
  _3 = bif:'-' _1, _0
  br ^23

24:
  %% match_SUITE.erl:583
  %% Argument types:
  %%    _1 => 32..65
  %%    _0 => 32..65
  %% Unique:
  %%    _0, 
  %%    _1
  _7 = bif:'-' _1, _0

  %% match_SUITE.erl:583
  %% Argument types:
  %%    _0 => 32..65
  %%    _1 => 32..65
  %% Unique:
  %%    _0, 
  %%    _1
  _5 = bif:'-' _0, _1
  br ^23

23:
  _12 = phi { _4, ^25 }, { _7, ^24 }
  _13 = phi { `1`, ^25 }, { `-1`, ^24 }
  _14 = phi { _3, ^25 }, { _5, ^24 }
  _15 = phi { `-1`, ^25 }, { `1`, ^24 }

  %% Argument types:
  %%    _13 => -1..1
  %%    _15 => -1..1
  %% Unique:
  %%    _13, 
  %%    _15
  _32 = bif:'>' _13, _15
  br _32, ^32, ^31

32:
  %% Argument types:
  %%    _12 => '-inf'..33
  %%    _13 => 0..1
  %%    _14 => '-inf'..33
  %%    _15 => -1..0
  %% Unique:
  %%    _12, 
  %%    _13, 
  %%    _14, 
  %%    _15
  _19 = put_tuple _12, _13, _14, _15
  %% Result type:
  %%    {'-inf'..33, 0..1, '-inf'..33, -1..0}
  %% Unique:
  %%    _19
  ret _19

31:
  %% Argument types:
  %%    _15 => -1..1
  %% Unique:
  %%    _15
  _16 = put_list _15, `[]`

  %% Argument types:
  %%    _14 => '-inf'..33
  %%    _16 => nonempty_list(-1..1)
  %% Unique:
  %%    _14, 
  %%    _16
  _17 = put_list _14, _16

  %% Argument types:
  %%    _13 => -1..1
  %%    _17 => nonempty_list('-inf'..33)
  %% Unique:
  %%    _13, 
  %%    _17
  _18 = put_list _13, _17

  %% Argument types:
  %%    _12 => '-inf'..33
  %%    _18 => nonempty_list('-inf'..33)
  %% Unique:
  %%    _12, 
  %%    _18
  _20 = put_list _12, _18
  %% Result type:
  %%    nonempty_list('-inf'..33)
  %% Unique:
  %%    _20
  ret _20
}

%% match_SUITE.erl:593
%% Counter = 125
%% bs_ensure_opt: true
function `match_SUITE`:`shortcut_boolean`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _32 = bif:is_list _0
  br _32, ^32, ^31

32:
  %% match_SUITE.erl:594
  _12 = call (`shortcut_boolean_1`/1), `[0]`

  %% Aliased:
  %%    _12
  _33 = succeeded:body _12
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _87 = bif:'=:=' _12, `false`
  br _87, ^86, ^35

86:
  %% match_SUITE.erl:595
  _13 = call (`shortcut_boolean_1`/1), `{42}`

  %% Aliased:
  %%    _13
  _36 = succeeded:body _13
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _84 = bif:'=:=' _13, `true`
  br _84, ^83, ^38

83:
  %% match_SUITE.erl:596
  %% Argument types:
  %%    
  _3 = bif:self

  %% match_SUITE.erl:596
  %% Unique:
  %%    _3
  _14 = call (`shortcut_boolean_1`/1), _3

  %% Aliased:
  %%    _14
  _39 = succeeded:body _14
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _81 = bif:'=:=' _14, `'maybe'`
  br _81, ^121, ^41

121:
  br ^123

123:
  _45 = new_try_tag `'catch'`
  br _45, ^43, ^44

43:
  %% match_SUITE.erl:597
  _20 = call (`shortcut_boolean_1`/1), `[a,b]`

  %% Aliased:
  %%    _20
  _47 = succeeded:body _20
  br _47, ^47, ^44

47:
  br ^42

44:
  %% Unique:
  %%    _45
  _50 = landingpad `'catch'`, _45

  %% Aliased:
  %%    _50
  _48 = extract _50, `0`
  br ^42

42:
  _51 = phi { _48, ^44 }, { _20, ^47 }

  %% Aliased:
  %%    _51
  %% Unique:
  %%    _45
  _5 = catch_end _45, _51

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _76 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _76, ^122, ^53

122:
  br ^124

124:
  _57 = new_try_tag `'catch'`
  br _57, ^55, ^56

55:
  %% match_SUITE.erl:598
  %% Result type:
  %%    none()
  _22 = call (`shortcut_boolean_1`/1), `{a,b}`

  %% Aliased:
  %%    _22
  _59 = succeeded:body _22
  br ^56

56:
  %% Unique:
  %%    _57
  _62 = landingpad `'catch'`, _57

  %% Aliased:
  %%    _62
  _60 = extract _62, `0`
  br ^54

54:
  %% Aliased:
  %%    _60
  %% Unique:
  %%    _57
  _7 = catch_end _57, _60

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _69 = is_tagged_tuple _7, `2`, `'EXIT'`
  br _69, ^66, ^65

66:
  %% Result type:
  %%    'ok'
  ret `ok`

65:
  %% match_SUITE.erl:598
  %% Aliased:
  %%    _7
  _23 = match_fail `badmatch`, _7

  %% Unique:
  %%    _23
  _72 = succeeded:body _23
  br ^1

53:
  %% match_SUITE.erl:597
  %% Aliased:
  %%    _5
  _24 = match_fail `badmatch`, _5

  %% Unique:
  %%    _24
  _79 = succeeded:body _24
  br ^1

41:
  %% match_SUITE.erl:596
  %% Aliased:
  %%    _14
  _25 = match_fail `badmatch`, _14

  %% Unique:
  %%    _25
  _82 = succeeded:body _25
  br ^1

38:
  %% match_SUITE.erl:595
  %% Aliased:
  %%    _13
  _26 = match_fail `badmatch`, _13

  %% Unique:
  %%    _26
  _85 = succeeded:body _26
  br ^1

35:
  %% match_SUITE.erl:594
  %% Aliased:
  %%    _12
  _27 = match_fail `badmatch`, _12

  %% Unique:
  %%    _27
  _88 = succeeded:body _27
  br ^1

31:
  %% match_SUITE.erl:593
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-shortcut_boolean/1-',1}}
  _28 = match_fail `function_clause`, _0

  %% Unique:
  %%    _28
  _89 = succeeded:body _28
  br ^1

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% match_SUITE.erl:601
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list('a' | 'b' | 0) | {42} | {'a', 'b'} | pid()
function `match_SUITE`:`shortcut_boolean_1`(_0) {
0:
  %% match_SUITE.erl:602
  %% Argument types:
  %%    _0 => nonempty_list('a' | 'b' | 0) | {42} | {'a', 'b'} | pid()
  %% Unique:
  %%    _0
  _1 = bif:is_pid _0
  br _1, ^32, ^33

32:
  br ^20

33:
  %% Unique:
  %%    _0
  _26 = is_nonempty_list _0
  br _26, ^26, ^28

26:
  %% Argument types:
  %%    _0 => nonempty_list('a' | 'b' | 0)
  %% Unique:
  %%    _0
  _11 = get_tl _0

  %% Argument types:
  %%    _11 => list('a' | 'b' | 0)
  %% Unique:
  %%    _11
  _25 = bif:'=:=' _11, `[]`
  br _25, ^25, ^23

25:
  br ^20

28:
  %% Argument types:
  %%    _0 => {42} | {'a', 'b'}
  %% Unique:
  %%    _0
  _29 = bif:tuple_size _0

  %% Argument types:
  %%    _29 => 1..16777215
  %% Unique:
  %%    _29
  _30 = bif:'=:=' _29, `1`
  br _30, ^27, ^23

27:
  br ^20

20:
  _6 = phi { `false`, ^25 }, { `true`, ^27 }, { `'maybe'`, ^32 }

  %% match_SUITE.erl:612
  %% Unique:
  %%    _6
  _17 = call (`id`/1), _6

  %% Aliased:
  %%    _17
  _35 = succeeded:body _17
  br _35, ^35, ^1

35:
  %% Aliased:
  %%    _17
  ret _17

23:
  %% match_SUITE.erl:604
  %% Unique:
  %%    _0
  _15 = match_fail `case_clause`, _0

  %% Unique:
  %%    _15
  _31 = succeeded:body _15
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% match_SUITE.erl:616
%% Counter = 26
%% bs_ensure_opt: true
function `match_SUITE`:`letify_guard`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _13 = bif:is_list _0
  br _13, ^13, ^12

13:
  %% match_SUITE.erl:617
  %% Result type:
  %%    {-15..2, 'a' | 3}
  _5 = call (`letify_guard`/2), `-15`, `a`

  %% Unique:
  %%    _5
  _14 = succeeded:body _5
  br _14, ^14, ^1

14:
  %% Argument types:
  %%    _5 => {-15..2, 'a' | 3}
  %% Unique:
  %%    _5
  _23 = bif:'=:=' _5, `{-15,a}`
  br _23, ^23, ^16

23:
  %% match_SUITE.erl:618
  %% Result type:
  %%    3..'+inf'
  _6 = call (`letify_guard`/2), `2`, `3`

  %% Unique:
  %%    _6
  _17 = succeeded:body _6
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    _6 => 3..'+inf'
  %% Unique:
  %%    _6
  _21 = bif:'=:=' _6, `5`
  br _21, ^20, ^19

20:
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  %% match_SUITE.erl:618
  %% Unique:
  %%    _6
  _7 = match_fail `badmatch`, _6

  %% Unique:
  %%    _7
  _22 = succeeded:body _7
  br ^1

16:
  %% match_SUITE.erl:617
  %% Unique:
  %%    _5
  _8 = match_fail `badmatch`, _5

  %% Unique:
  %%    _8
  _24 = succeeded:body _8
  br ^1

12:
  %% match_SUITE.erl:616
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-letify_guard/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _25 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% match_SUITE.erl:621
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     -15..2
%%    _1 =>
%%     'a' | 3
function `match_SUITE`:`letify_guard`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => -15..2
  %%    _1 => 'a' | 3
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _0
  Z = put_tuple _0, _1

  %% match_SUITE.erl:624
  %% Argument types:
  %%    _0 => -15..2
  %% Unique:
  %%    _0
  _5 = bif:'<' _0, `0`
  br _5, ^21, ^16

21:
  %% Result type:
  %%    {-15..2, 'a' | 3}
  %% Unique:
  %%    Z
  ret Z

16:
  %% match_SUITE.erl:627
  %% Argument types:
  %%    _0 => 0..2
  %%    _1 => 'a' | 3
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _0
  _13 = bif:'+' _0, _1

  %% Unique:
  %%    _13
  _22 = succeeded:body _13
  br _22, ^22, ^1

22:
  %% Result type:
  %%    3..'+inf'
  %% Unique:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% match_SUITE.erl:633
%% Counter = 142
%% bs_ensure_opt: true
function `match_SUITE`:`selectify`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _44 = bif:is_list _0
  br _44, ^44, ^43

44:
  %% match_SUITE.erl:634
  %% Result type:
  %%    'integer' | 'none'
  _15 = call (`sel_different_types`/1), `{r,42}`

  %% Unique:
  %%    _15
  _45 = succeeded:body _15
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    _15 => 'integer' | 'none'
  %% Unique:
  %%    _15
  _122 = bif:'=:=' _15, `integer`
  br _122, ^121, ^47

121:
  %% match_SUITE.erl:635
  %% Result type:
  %%    'atom' | 'none'
  _16 = call (`sel_different_types`/1), `{r,forty_two}`

  %% Unique:
  %%    _16
  _48 = succeeded:body _16
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    _16 => 'atom' | 'none'
  %% Unique:
  %%    _16
  _119 = bif:'=:=' _16, `atom`
  br _119, ^118, ^50

118:
  %% match_SUITE.erl:636
  %% Result type:
  %%    'float' | 'none'
  _17 = call (`sel_different_types`/1), `{r,100.0}`

  %% Unique:
  %%    _17
  _51 = succeeded:body _17
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    _17 => 'float' | 'none'
  %% Unique:
  %%    _17
  _116 = bif:'=:=' _17, `float`
  br _116, ^115, ^53

115:
  %% match_SUITE.erl:637
  %% Result type:
  %%    'none'
  _18 = call (`sel_different_types`/1), `{r,18}`

  %% Unique:
  %%    _18
  _54 = succeeded:body _18
  br _54, ^140, ^1

140:
  br ^141

141:
  _60 = new_try_tag `'catch'`
  br _60, ^58, ^59

58:
  %% match_SUITE.erl:638
  %% Result type:
  %%    none()
  _28 = call (`sel_different_types`/1), `[a,b,c]`

  %% Aliased:
  %%    _28
  _62 = succeeded:body _28
  br ^59

59:
  %% Unique:
  %%    _60
  _65 = landingpad `'catch'`, _60

  %% Aliased:
  %%    _65
  _63 = extract _65, `0`
  br ^57

57:
  %% Aliased:
  %%    _63
  %% Unique:
  %%    _60
  _5 = catch_end _60, _63

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _108 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _108, ^105, ^68

105:
  %% match_SUITE.erl:640
  %% Result type:
  %%    'error' | 'integer'
  _21 = call (`sel_same_value`/1), `{r,42}`

  %% Unique:
  %%    _21
  _69 = succeeded:body _21
  br _69, ^69, ^1

69:
  %% Argument types:
  %%    _21 => 'error' | 'integer'
  %% Unique:
  %%    _21
  _103 = bif:'=:=' _21, `integer`
  br _103, ^102, ^71

102:
  %% match_SUITE.erl:641
  %% Result type:
  %%    'error'
  _22 = call (`sel_same_value`/1), `{r,100}`

  %% Unique:
  %%    _22
  _72 = succeeded:body _22
  br _72, ^99, ^1

99:
  %% match_SUITE.erl:642
  %% Result type:
  %%    'error'
  _23 = call (`sel_same_value`/1), `a`

  %% Unique:
  %%    _23
  _75 = succeeded:body _23
  br _75, ^96, ^1

96:
  %% match_SUITE.erl:644
  %% Result type:
  %%    'integer42'
  _24 = call (`sel_same_value2`/1), `42`

  %% Unique:
  %%    _24
  _78 = succeeded:body _24
  br _78, ^93, ^1

93:
  %% match_SUITE.erl:645
  %% Result type:
  %%    'integer43'
  _25 = call (`sel_same_value2`/1), `43`

  %% Unique:
  %%    _25
  _81 = succeeded:body _25
  br _81, ^90, ^1

90:
  %% match_SUITE.erl:646
  %% Result type:
  %%    'error'
  _26 = call (`sel_same_value2`/1), `44`

  %% Unique:
  %%    _26
  _84 = succeeded:body _26
  br _84, ^87, ^1

87:
  %% Result type:
  %%    'ok'
  ret `ok`

71:
  %% match_SUITE.erl:640
  _34 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _34
  _104 = succeeded:body _34
  br ^1

68:
  %% match_SUITE.erl:638
  %% Aliased:
  %%    _5
  _35 = match_fail `badmatch`, _5

  %% Unique:
  %%    _35
  _111 = succeeded:body _35
  br ^1

53:
  %% match_SUITE.erl:636
  _37 = match_fail `badmatch`, `none`

  %% Unique:
  %%    _37
  _117 = succeeded:body _37
  br ^1

50:
  %% match_SUITE.erl:635
  _38 = match_fail `badmatch`, `none`

  %% Unique:
  %%    _38
  _120 = succeeded:body _38
  br ^1

47:
  %% match_SUITE.erl:634
  _39 = match_fail `badmatch`, `none`

  %% Unique:
  %%    _39
  _123 = succeeded:body _39
  br ^1

43:
  %% match_SUITE.erl:633
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-selectify/1-',1}}
  _40 = match_fail `function_clause`, _0

  %% Unique:
  %%    _40
  _124 = succeeded:body _40
  br ^1

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _41
}

%% match_SUITE.erl:650
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list('a' | 'b' | 'c') | {'r', 'forty_two' | number(18, 100)}
function `match_SUITE`:`sel_different_types`(_0) {
0:
  %% Argument types:
  %%    _0 => nonempty_list('a' | 'b' | 'c') | {'r', 'forty_two' | number(18, 100)}
  %% Unique:
  %%    _0
  _39 = bif:is_tuple _0
  br _39, ^27, ^23

27:
  %% match_SUITE.erl:650
  %% Argument types:
  %%    _0 => {'r', 'forty_two' | number(18, 100)}
  %% Unique:
  %%    _0
  _1 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _1 => 'forty_two' | number(18, 100)
  %% Unique:
  %%    _1
  _28 = bif:'=:=' _1, `forty_two`
  br _28, ^28, ^31

28:
  %% Result type:
  %%    'atom'
  ret `atom`

31:
  %% Argument types:
  %%    _1 => number(18, 100)
  %% Unique:
  %%    _1
  _32 = bif:'=:=' _1, `42`
  br _32, ^32, ^34

32:
  %% Result type:
  %%    'integer'
  ret `integer`

34:
  %% Argument types:
  %%    _1 => number(18, 100)
  %% Unique:
  %%    _1
  _35 = bif:'=:=' _1, `100.0`
  br _35, ^35, ^24

35:
  %% Result type:
  %%    'float'
  ret `float`

24:
  %% Result type:
  %%    'none'
  ret `none`

23:
  %% match_SUITE.erl:650
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-sel_different_types/1-',1}}
  _20 = match_fail `function_clause`, _0

  %% Unique:
  %%    _20
  _42 = succeeded:body _20
  br ^1

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _21
}

%% match_SUITE.erl:659
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | {'r', 42..100}
function `match_SUITE`:`sel_same_value`(_0) {
0:
  %% Argument types:
  %%    _0 => 'a' | {'r', 42..100}
  %% Unique:
  %%    _0
  _15 = bif:is_tuple _0
  br _15, ^12, ^8

12:
  %% Argument types:
  %%    _0 => {'r', 42..100}
  %% Unique:
  %%    _0
  _4 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _4 => 42..100
  %% Unique:
  %%    _4
  _10 = bif:'=:=' _4, `42`
  br _10, ^10, ^8

10:
  %% Result type:
  %%    'integer'
  ret `integer`

8:
  %% Result type:
  %%    'error'
  ret `error`
}

%% match_SUITE.erl:666
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42..44
function `match_SUITE`:`sel_same_value2`(_0) {
0:
  %% Argument types:
  %%    
  switch _0, ^9, [
    { `42`, ^11 },
    { `43`, ^13 }
  ]

13:
  %% Result type:
  %%    'integer43'
  ret `integer43`

11:
  %% Result type:
  %%    'integer42'
  ret `integer42`

9:
  %% Result type:
  %%    'error'
  ret `error`
}

%% match_SUITE.erl:676
%% Counter = 259
%% bs_ensure_opt: true
function `match_SUITE`:`deselectify`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _93 = bif:is_list _0
  br _93, ^93, ^92

93:
  %% match_SUITE.erl:677
  %% Result type:
  %%    'one_or_other'
  _33 = call (`desel_tuple_arity`/1), `{1}`

  %% Unique:
  %%    _33
  _94 = succeeded:body _33
  br _94, ^255, ^1

255:
  %% match_SUITE.erl:678
  %% Result type:
  %%    'one_or_other' | 'two'
  _34 = call (`desel_tuple_arity`/1), `{1,1}`

  %% Unique:
  %%    _34
  _97 = succeeded:body _34
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    _34 => 'one_or_other' | 'two'
  %% Unique:
  %%    _34
  _253 = bif:'=:=' _34, `two`
  br _253, ^252, ^99

252:
  %% match_SUITE.erl:679
  %% Result type:
  %%    'one_or_other'
  _35 = call (`desel_tuple_arity`/1), `{1,1,1}`

  %% Unique:
  %%    _35
  _100 = succeeded:body _35
  br _100, ^249, ^1

249:
  %% match_SUITE.erl:681
  %% Result type:
  %%    'one_or_other'
  _36 = call (`dsel_integer`/1), `1`

  %% Unique:
  %%    _36
  _103 = succeeded:body _36
  br _103, ^246, ^1

246:
  %% match_SUITE.erl:682
  %% Result type:
  %%    'one_or_other' | 'two'
  _37 = call (`dsel_integer`/1), `2`

  %% Unique:
  %%    _37
  _106 = succeeded:body _37
  br _106, ^106, ^1

106:
  %% Argument types:
  %%    _37 => 'one_or_other' | 'two'
  %% Unique:
  %%    _37
  _244 = bif:'=:=' _37, `two`
  br _244, ^243, ^108

243:
  %% match_SUITE.erl:683
  %% Result type:
  %%    'one_or_other'
  _38 = call (`dsel_integer`/1), `3`

  %% Unique:
  %%    _38
  _109 = succeeded:body _38
  br _109, ^240, ^1

240:
  %% match_SUITE.erl:685
  %% Result type:
  %%    'one_or_other'
  _39 = call (`dsel_integer_typecheck`/1), `1`

  %% Unique:
  %%    _39
  _112 = succeeded:body _39
  br _112, ^237, ^1

237:
  %% match_SUITE.erl:686
  %% Result type:
  %%    'one_or_other' | 'two'
  _40 = call (`dsel_integer_typecheck`/1), `2`

  %% Unique:
  %%    _40
  _115 = succeeded:body _40
  br _115, ^115, ^1

115:
  %% Argument types:
  %%    _40 => 'one_or_other' | 'two'
  %% Unique:
  %%    _40
  _235 = bif:'=:=' _40, `two`
  br _235, ^234, ^117

234:
  %% match_SUITE.erl:687
  %% Result type:
  %%    'one_or_other'
  _41 = call (`dsel_integer_typecheck`/1), `3`

  %% Unique:
  %%    _41
  _118 = succeeded:body _41
  br _118, ^231, ^1

231:
  %% match_SUITE.erl:689
  %% Result type:
  %%    'one_or_other'
  _42 = call (`dsel_atom`/1), `one`

  %% Unique:
  %%    _42
  _121 = succeeded:body _42
  br _121, ^228, ^1

228:
  %% match_SUITE.erl:690
  %% Result type:
  %%    'two'
  _43 = call (`dsel_atom`/1), `two`

  %% Unique:
  %%    _43
  _124 = succeeded:body _43
  br _124, ^225, ^1

225:
  %% match_SUITE.erl:691
  %% Result type:
  %%    'one_or_other'
  _44 = call (`dsel_atom`/1), `three`

  %% Unique:
  %%    _44
  _127 = succeeded:body _44
  br _127, ^222, ^1

222:
  %% match_SUITE.erl:693
  %% Result type:
  %%    'one_or_other'
  _45 = call (`dsel_atom_typecheck`/1), `one`

  %% Unique:
  %%    _45
  _130 = succeeded:body _45
  br _130, ^219, ^1

219:
  %% match_SUITE.erl:694
  %% Result type:
  %%    'two'
  _46 = call (`dsel_atom_typecheck`/1), `two`

  %% Unique:
  %%    _46
  _133 = succeeded:body _46
  br _133, ^216, ^1

216:
  %% match_SUITE.erl:695
  %% Result type:
  %%    'one_or_other'
  _47 = call (`dsel_atom_typecheck`/1), `three`

  %% Unique:
  %%    _47
  _136 = succeeded:body _47
  br _136, ^213, ^1

213:
  %% match_SUITE.erl:700
  _48 = call (`dsel_peek_0`/1), `stop`

  %% Aliased:
  %%    _48
  _139 = succeeded:body _48
  br _139, ^139, ^1

139:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _211 = bif:'=:=' _48, `stop`
  br _211, ^210, ^141

210:
  %% match_SUITE.erl:701
  _49 = call (`dsel_peek_0`/1), `ignore`

  %% Aliased:
  %%    _49
  _142 = succeeded:body _49
  br _142, ^142, ^1

142:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _208 = bif:'=:=' _49, `ignore`
  br _208, ^207, ^144

207:
  %% match_SUITE.erl:702
  %% Aliased:
  %%    _0
  _50 = call (`dsel_peek_0`/1), _0

  %% Aliased:
  %%    _50
  _145 = succeeded:body _50
  br _145, ^145, ^1

145:
  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any())
  %% Aliased:
  %%    _0, 
  %%    _50
  _148 = bif:'=:=' _50, _0
  br _148, ^148, ^147

148:
  %% match_SUITE.erl:704
  _51 = call (`dsel_peek_1`/2), `stop`, `any`

  %% Aliased:
  %%    _51
  _149 = succeeded:body _51
  br _149, ^149, ^1

149:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _204 = bif:'=:=' _51, `stop`
  br _204, ^203, ^151

203:
  %% match_SUITE.erl:705
  %% Aliased:
  %%    _0
  _52 = call (`dsel_peek_1`/2), `ignore`, _0

  %% Aliased:
  %%    _52
  _152 = succeeded:body _52
  br _152, ^152, ^1

152:
  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any())
  %% Aliased:
  %%    _0, 
  %%    _52
  _155 = bif:'=:=' _52, _0
  br _155, ^155, ^154

155:
  %% match_SUITE.erl:706
  _53 = call (`dsel_peek_1`/2), `other`, `ignored`

  %% Aliased:
  %%    _53
  _156 = succeeded:body _53
  br _156, ^156, ^1

156:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _200 = bif:'=:=' _53, `other`
  br _200, ^199, ^158

199:
  %% match_SUITE.erl:708
  _54 = call (`dsel_peek_2`/2), `0`, `any`

  %% Aliased:
  %%    _54
  _159 = succeeded:body _54
  br _159, ^159, ^1

159:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _197 = bif:'=:=' _54, `0`
  br _197, ^196, ^161

196:
  %% match_SUITE.erl:709
  %% Aliased:
  %%    _0
  _55 = call (`dsel_peek_2`/2), `1`, _0

  %% Aliased:
  %%    _55
  _162 = succeeded:body _55
  br _162, ^162, ^1

162:
  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any())
  %% Aliased:
  %%    _0, 
  %%    _55
  _165 = bif:'=:=' _55, _0
  br _165, ^165, ^164

165:
  %% match_SUITE.erl:710
  _56 = call (`dsel_peek_2`/2), `2`, `ignored`

  %% Aliased:
  %%    _56
  _166 = succeeded:body _56
  br _166, ^166, ^1

166:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _193 = bif:'=:=' _56, `2`
  br _193, ^192, ^168

192:
  %% match_SUITE.erl:712
  %% Result type:
  %%    'false' | 'true' | {'error', any()}
  _57 = call (`dsel_peek_3`/1), `true`

  %% Unique:
  %%    _57
  _169 = succeeded:body _57
  br _169, ^169, ^1

169:
  %% Argument types:
  %%    _57 => 'false' | 'true' | {'error', any()}
  %% Unique:
  %%    _57
  _190 = bif:'=:=' _57, `true`
  br _190, ^189, ^171

189:
  %% match_SUITE.erl:713
  %% Result type:
  %%    'false' | 'true' | {'error', any()}
  _58 = call (`dsel_peek_3`/1), `false`

  %% Unique:
  %%    _58
  _172 = succeeded:body _58
  br _172, ^172, ^1

172:
  %% Argument types:
  %%    _58 => 'false' | 'true' | {'error', any()}
  %% Unique:
  %%    _58
  _187 = bif:'=:=' _58, `false`
  br _187, ^186, ^174

186:
  %% match_SUITE.erl:714
  %% Result type:
  %%    'false' | 'true' | {'error', any()}
  %% Aliased:
  %%    _0
  _59 = call (`dsel_peek_3`/1), _0

  %% Unique:
  %%    _59
  _175 = succeeded:body _59
  br _175, ^175, ^1

175:
  %% Argument types:
  %%    _59 => 'false' | 'true' | {'error', any()}
  %% Unique:
  %%    _59
  _182 = bif:is_tuple _59
  br _182, ^179, ^177

179:
  %% Argument types:
  %%    _59 => {'error', any()}
  %% Unique:
  %%    _59
  _60 = get_tuple_element _59, `1`

  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any())
  %% Aliased:
  %%    _0, 
  %%    _60
  _178 = bif:'=:=' _60, _0
  br _178, ^178, ^177

178:
  %% Result type:
  %%    'ok'
  ret `ok`

177:
  %% match_SUITE.erl:714
  %% Unique:
  %%    _59
  _62 = match_fail `badmatch`, _59

  %% Unique:
  %%    _62
  _185 = succeeded:body _62
  br ^1

174:
  %% match_SUITE.erl:713
  %% Unique:
  %%    _58
  _63 = match_fail `badmatch`, _58

  %% Unique:
  %%    _63
  _188 = succeeded:body _63
  br ^1

171:
  %% match_SUITE.erl:712
  %% Unique:
  %%    _57
  _64 = match_fail `badmatch`, _57

  %% Unique:
  %%    _64
  _191 = succeeded:body _64
  br ^1

168:
  %% match_SUITE.erl:710
  %% Aliased:
  %%    _56
  _65 = match_fail `badmatch`, _56

  %% Unique:
  %%    _65
  _194 = succeeded:body _65
  br ^1

164:
  %% match_SUITE.erl:709
  %% Aliased:
  %%    _55
  _66 = match_fail `badmatch`, _55

  %% Unique:
  %%    _66
  _195 = succeeded:body _66
  br ^1

161:
  %% match_SUITE.erl:708
  %% Aliased:
  %%    _54
  _67 = match_fail `badmatch`, _54

  %% Unique:
  %%    _67
  _198 = succeeded:body _67
  br ^1

158:
  %% match_SUITE.erl:706
  %% Aliased:
  %%    _53
  _68 = match_fail `badmatch`, _53

  %% Unique:
  %%    _68
  _201 = succeeded:body _68
  br ^1

154:
  %% match_SUITE.erl:705
  %% Aliased:
  %%    _52
  _69 = match_fail `badmatch`, _52

  %% Unique:
  %%    _69
  _202 = succeeded:body _69
  br ^1

151:
  %% match_SUITE.erl:704
  %% Aliased:
  %%    _51
  _70 = match_fail `badmatch`, _51

  %% Unique:
  %%    _70
  _205 = succeeded:body _70
  br ^1

147:
  %% match_SUITE.erl:702
  %% Aliased:
  %%    _50
  _71 = match_fail `badmatch`, _50

  %% Unique:
  %%    _71
  _206 = succeeded:body _71
  br ^1

144:
  %% match_SUITE.erl:701
  %% Aliased:
  %%    _49
  _72 = match_fail `badmatch`, _49

  %% Unique:
  %%    _72
  _209 = succeeded:body _72
  br ^1

141:
  %% match_SUITE.erl:700
  %% Aliased:
  %%    _48
  _73 = match_fail `badmatch`, _48

  %% Unique:
  %%    _73
  _212 = succeeded:body _73
  br ^1

117:
  %% match_SUITE.erl:686
  _81 = match_fail `badmatch`, `one_or_other`

  %% Unique:
  %%    _81
  _236 = succeeded:body _81
  br ^1

108:
  %% match_SUITE.erl:682
  _84 = match_fail `badmatch`, `one_or_other`

  %% Unique:
  %%    _84
  _245 = succeeded:body _84
  br ^1

99:
  %% match_SUITE.erl:678
  _87 = match_fail `badmatch`, `one_or_other`

  %% Unique:
  %%    _87
  _254 = succeeded:body _87
  br ^1

92:
  %% match_SUITE.erl:676
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-deselectify/1-',1}}
  _89 = match_fail `function_clause`, _0

  %% Unique:
  %%    _89
  _258 = succeeded:body _89
  br ^1

1:
  _90 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _90
}

%% match_SUITE.erl:721
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {1} | {1, 1} | {1, 1, 1}
function `match_SUITE`:`desel_tuple_arity`(_0) {
0:
  %% Argument types:
  %%    _0 => {1} | {1, 1} | {1, 1, 1}
  %% Unique:
  %%    _0
  _20 = bif:tuple_size _0

  %% Unique:
  %%    _20
  _22 = bif:'=:=' _20, `2`
  br _22, ^18, ^16

18:
  %% Result type:
  %%    'two'
  ret `two`

16:
  %% Result type:
  %%    'one_or_other'
  ret `one_or_other`
}

%% match_SUITE.erl:728
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..3
function `match_SUITE`:`dsel_integer`(_0) {
0:
  %% Unique:
  %%    _0
  _9 = bif:'=:=' _0, `2`
  br _9, ^8, ^6

8:
  %% Result type:
  %%    'two'
  ret `two`

6:
  %% Result type:
  %%    'one_or_other'
  ret `one_or_other`
}

%% match_SUITE.erl:735
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..3
function `match_SUITE`:`dsel_integer_typecheck`(_0) {
0:
  %% Unique:
  %%    _0
  _14 = bif:'=:=' _0, `2`
  br _14, ^12, ^10

12:
  %% Result type:
  %%    'two'
  ret `two`

10:
  %% Result type:
  %%    'one_or_other'
  ret `one_or_other`
}

%% match_SUITE.erl:742
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'one' | 'three' | 'two'
function `match_SUITE`:`dsel_atom`(_0) {
0:
  %% Unique:
  %%    _0
  _9 = bif:'=:=' _0, `two`
  br _9, ^8, ^6

8:
  %% Result type:
  %%    'two'
  ret `two`

6:
  %% Result type:
  %%    'one_or_other'
  ret `one_or_other`
}

%% match_SUITE.erl:749
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'one' | 'three' | 'two'
function `match_SUITE`:`dsel_atom_typecheck`(_0) {
0:
  %% Unique:
  %%    _0
  _14 = bif:'=:=' _0, `two`
  br _14, ^12, ^10

12:
  %% Result type:
  %%    'two'
  ret `two`

10:
  %% Result type:
  %%    'one_or_other'
  ret `one_or_other`
}

%% match_SUITE.erl:761
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'ignore' | 'stop' | maybe_improper_list(any(), any())
function `match_SUITE`:`dsel_peek_0`(_0) {
0:
  %% match_SUITE.erl:762
  %% Aliased:
  %%    _0
  _2 = call (`id`/1), _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  switch _2, ^7, [
    { `ignore`, ^8 },
    { `stop`, ^9 }
  ]

9:
  %% Result type:
  %%    'stop'
  ret `stop`

8:
  %% Result type:
  %%    'ignore'
  ret `ignore`

7:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:768
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'ignore' | 'other' | 'stop'
%%    _1 =>
%%     'any' | 'ignored' | maybe_improper_list(any(), any())
function `match_SUITE`:`dsel_peek_1`(_0, _1) {
0:
  %% match_SUITE.erl:769
  %% Unique:
  %%    _0
  _2 = call (`id`/1), _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  switch _2, ^7, [
    { `ignore`, ^9 },
    { `stop`, ^8 }
  ]

8:
  %% Result type:
  %%    'stop'
  ret `stop`

9:
  %% Result type:
  %%    'any' | 'ignored' | maybe_improper_list(any(), any())
  %% Aliased:
  %%    _1
  ret _1

7:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:775
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0..2
%%    _1 =>
%%     'any' | 'ignored' | maybe_improper_list(any(), any())
function `match_SUITE`:`dsel_peek_2`(_0, _1) {
0:
  %% match_SUITE.erl:776
  %% Unique:
  %%    _0
  _2 = call (`id`/1), _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  switch _2, ^7, [
    { `0`, ^8 },
    { `1`, ^9 }
  ]

9:
  %% Result type:
  %%    'any' | 'ignored' | maybe_improper_list(any(), any())
  %% Aliased:
  %%    _1
  ret _1

8:
  %% Result type:
  %%    0
  ret `0`

7:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:782
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true' | maybe_improper_list(any(), any())
function `match_SUITE`:`dsel_peek_3`(_0) {
0:
  %% match_SUITE.erl:783
  %% Aliased:
  %%    _0
  _2 = call (`id`/1), _0

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  switch _2, ^8, [
    { `false`, ^9 },
    { `true`, ^10 }
  ]

10:
  %% Result type:
  %%    'true'
  ret `true`

9:
  %% Result type:
  %%    'false'
  ret `false`

8:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _3 = put_tuple `error`, _2
  %% Result type:
  %%    {'error', any()}
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% match_SUITE.erl:789
%% Counter = 28
%% bs_ensure_opt: true
function `match_SUITE`:`underscore`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _17 = bif:is_list _0
  br _17, ^17, ^16

17:
  %% Aliased:
  %%    _0
  _22 = is_nonempty_list _0
  br _22, ^27, ^18

27:
  %% match_SUITE.erl:796
  %% Aliased:
  %%    _0
  _11 = call (`erlang`:`list_to_tuple`/1), _0

  %% Aliased:
  %%    _11
  _21 = succeeded:body _11
  br _21, ^18, ^1

18:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% match_SUITE.erl:789
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-underscore/1-',1}}
  _13 = match_fail `function_clause`, _0

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% match_SUITE.erl:803
%% Counter = 101
%% bs_ensure_opt: true
function `match_SUITE`:`match_map`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _31 = bif:is_list _0
  br _31, ^31, ^30

31:
  _99 = put_tuple `s`, `#{ignore => anything,key => {x,y}}`, `undefined`

  %% match_SUITE.erl:805
  %% Result type:
  %%    {'s', #{'ignore' | 'key'=>'anything' | {'x', 'y'}}, 'anything' | {'x', 'y'}}
  _10 = call (`do_match_map`/1), _99

  %% Unique:
  %%    _10
  _32 = succeeded:body _10
  br _32, ^75, ^1

75:
  %% Argument types:
  %%    _10 => {'s', #{'ignore' | 'key'=>'anything' | {'x', 'y'}}, 'anything' | {'x', 'y'}}
  %% Unique:
  %%    _10
  _11 = get_tuple_element _10, `2`

  %% Argument types:
  %%    _11 => 'anything' | {'x', 'y'}
  %% Aliased:
  %%    _11
  _74 = bif:'=:=' _11, `{x,y}`
  br _74, ^74, ^34

74:
  %% Argument types:
  %%    _10 => {'s', #{'ignore' | 'key'=>'anything' | {'x', 'y'}}, {'x', 'y'}}
  %% Unique:
  %%    _10
  _12 = get_tuple_element _10, `1`

  %% Argument types:
  %%    _12 => #{'ignore' | 'key'=>'anything' | {'x', 'y'}}
  %% Aliased:
  %%    _12
  _35 = bif:'=:=' _12, `#{ignore => anything,key => {x,y}}`
  br _35, ^35, ^34

35:
  %% match_SUITE.erl:806
  %% Result type:
  %%    {'a', #{'k'=>{'a', 'b', 'c'}}}
  _14 = call (`do_match_map_2`/1), `#{k => {a,b,c}}`

  %% Unique:
  %%    _14
  _36 = succeeded:body _14
  br _36, ^66, ^1

66:
  %% Argument types:
  %%    _14 => {'a', #{'k'=>{'a', 'b', 'c'}}}
  %% Unique:
  %%    _14
  _15 = get_tuple_element _14, `1`

  %% Argument types:
  %%    _15 => #{'k'=>{'a', 'b', 'c'}}
  %% Aliased:
  %%    _15
  _39 = has_map_field _15, `k`
  br _39, ^98, ^38

98:
  br ^100

100:
  _43 = new_try_tag `'catch'`
  br _43, ^41, ^42

41:
  %% match_SUITE.erl:807
  _4 = call (`id`/1), `whatever`

  %% Aliased:
  %%    _4
  _45 = succeeded:body _4
  br _45, ^45, ^42

45:
  %% match_SUITE.erl:807
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _4
  _23 = call (`do_match_map_none`/1), _4

  %% Aliased:
  %%    _23
  _46 = succeeded:body _23
  br _46, ^46, ^42

46:
  br ^40

42:
  %% Unique:
  %%    _43
  _49 = landingpad `'catch'`, _43

  %% Aliased:
  %%    _49
  _47 = extract _49, `0`
  br ^40

40:
  _50 = phi { _47, ^42 }, { _23, ^46 }

  %% Aliased:
  %%    _50
  %% Unique:
  %%    _43
  _5 = catch_end _43, _50

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _61 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _61, ^58, ^52

58:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _18 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _55 = bif:is_tuple _18
  br _55, ^55, ^52

55:
  %% Argument types:
  %%    _18 => {...}
  %% Aliased:
  %%    _18
  _56 = bif:tuple_size _18

  %% Argument types:
  %%    _56 => 0..16777215
  %% Unique:
  %%    _56
  _57 = bif:'=:=' _56, `2`
  br _57, ^54, ^52

54:
  %% Argument types:
  %%    _18 => {any(), any()}
  %% Aliased:
  %%    _18
  _21 = get_tuple_element _18, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _53 = bif:'=:=' _21, `{badmatch,whatever}`
  br _53, ^53, ^52

53:
  %% Result type:
  %%    'ok'
  ret `ok`

52:
  %% match_SUITE.erl:807
  %% Aliased:
  %%    _5
  _24 = match_fail `badmatch`, _5

  %% Unique:
  %%    _24
  _64 = succeeded:body _24
  br ^1

38:
  %% match_SUITE.erl:806
  %% Unique:
  %%    _14
  _25 = match_fail `badmatch`, _14

  %% Unique:
  %%    _25
  _73 = succeeded:body _25
  br ^1

34:
  %% match_SUITE.erl:805
  %% Unique:
  %%    _10
  _26 = match_fail `badmatch`, _10

  %% Unique:
  %%    _26
  _81 = succeeded:body _26
  br ^1

30:
  %% match_SUITE.erl:803
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-match_map/1-',1}}
  _27 = match_fail `function_clause`, _0

  %% Unique:
  %%    _27
  _82 = succeeded:body _27
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% match_SUITE.erl:810
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'s', #{'ignore' | 'key'=>'anything' | {'x', 'y'}}, 'undefined'}
function `match_SUITE`:`do_match_map`(_0) {
0:
  %% Argument types:
  %%    _0 => {'s', #{'ignore' | 'key'=>'anything' | {'x', 'y'}}, 'undefined'}
  %% Unique:
  %%    _0
  _9 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _9 => #{'ignore' | 'key'=>'anything' | {'x', 'y'}}
  %% Aliased:
  %%    _9
  _11 = get_map_element _9, `key`

  %% Aliased:
  %%    _11
  _21 = succeeded:guard _11
  br _21, ^25, ^20

25:
  %% match_SUITE.erl:812
  %% Argument types:
  %%    _0 => {'s', #{'ignore' | 'key'=>'anything' | {'x', 'y'}}, 'undefined'}
  %%    _11 => 'anything' | {'x', 'y'}
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _0
  %% Anno: #{source_dies => true}
  _15 = update_record `inplace`, `3`, _0, `3`, _11
  %% Result type:
  %%    {'s', #{'ignore' | 'key'=>'anything' | {'x', 'y'}}, 'anything' | {'x', 'y'}}
  %% Unique:
  %%    _15
  ret _15

20:
  %% match_SUITE.erl:810
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-do_match_map/1-',1}}
  _17 = match_fail `function_clause`, _0

  %% Unique:
  %%    _17
  _39 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% match_SUITE.erl:814
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'k'=>{'a', 'b', 'c'}}
function `match_SUITE`:`do_match_map_2`(_0) {
0:
  %% Argument types:
  %%    _0 => #{'k'=>{'a', 'b', 'c'}}
  %% Aliased:
  %%    _0
  _4 = put_tuple `a`, _0

  %% Argument types:
  %%    _0 => #{'k'=>{'a', 'b', 'c'}}
  %% Aliased:
  %%    _0
  _13 = has_map_field _0, `k`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    {'a', #{'k'=>{'a', 'b', 'c'}}}
  %% Unique:
  %%    _4
  ret _4

12:
  %% match_SUITE.erl:815
  %% Unique:
  %%    _4
  _8 = match_fail `case_clause`, _4

  %% Unique:
  %%    _8
  _21 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% match_SUITE.erl:820
%% Counter = 71
%% bs_ensure_opt: true
function `match_SUITE`:`do_match_map_none`(_0) {
0:
  br ^70

70:
  _33 = new_try_tag `'try'`
  br _33, ^32, ^30

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _37 = bif:'=:=' _0, `{}`
  br _37, ^37, ^35

37:
  %% match_SUITE.erl:823
  _22 = match_fail `badmatch`, `{{}}`

  %% Unique:
  %%    _22
  _36 = succeeded:body _22
  br ^30

35:
  %% match_SUITE.erl:823
  %% Aliased:
  %%    _0
  _23 = match_fail `badmatch`, _0

  %% Unique:
  %%    _23
  _38 = succeeded:body _23
  br ^30

30:
  %% Unique:
  %%    _33
  _46 = landingpad `'try'`, _33

  %% Aliased:
  %%    _46
  _6 = extract _46, `0`

  %% Aliased:
  %%    _46
  _5 = extract _46, `1`

  %% Aliased:
  %%    _46
  _4 = extract _46, `2`

  %% Unique:
  %%    _33
  _47 = kill_try_tag _33

  %% Argument types:
  %%    _6 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _6
  _44 = bif:'=:=' _6, `throw`
  br _44, ^43, ^40

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _5
  _42 = bif:'=:=' _5, _0
  br _42, ^42, ^41

42:
  br ^31

41:
  br ^31

31:
  _7 = phi { _0, ^41 }, { `#{}`, ^42 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _52 = bif:is_map _7
  br _52, ^52, ^50

52:
  %% Argument types:
  %%    _7 => map()
  %% Aliased:
  %%    _7
  _51 = has_map_field _7, `42`
  br _51, ^51, ^50

51:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _7
  ret _7

50:
  %% match_SUITE.erl:822
  %% Aliased:
  %%    _7
  _26 = match_fail `badmatch`, _7

  %% Unique:
  %%    _26
  _53 = succeeded:body _26
  br ^1

40:
  %% Aliased:
  %%    _4, 
  %%    _5
  _25 = resume _4, _5

  %% Unique:
  %%    _25
  _45 = succeeded:body _25
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% match_SUITE.erl:831
%% Counter = 16
%% bs_ensure_opt: true
function `match_SUITE`:`map_vars_used`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% match_SUITE.erl:832
  %% Result type:
  %%    42 | {'some', 'value'}
  _3 = call (`do_map_vars_used`/3), `a`, `b`, `#{v => {some,value},{a,b} => 42}`

  %% Aliased:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => 42 | {'some', 'value'}
  %% Aliased:
  %%    _3
  _13 = bif:'=:=' _3, `{some,value}`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% match_SUITE.erl:832
  _4 = match_fail `badmatch`, `42`

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

8:
  %% match_SUITE.erl:831
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-map_vars_used/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% match_SUITE.erl:835
%% Counter = 17
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'b'
%%    _2 =>
%%     #{'v' | {'a', 'b'}=>42 | {'some', 'value'}}
function `match_SUITE`:`do_map_vars_used`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _2 => #{'v' | {'a', 'b'}=>42 | {'some', 'value'}}
  %% Aliased:
  %%    _2
  _5 = get_map_element _2, `v`

  %% Aliased:
  %%    _5
  _11 = succeeded:guard _5
  br _11, ^11, ^10

11:
  %% Argument types:
  %%    _2 => #{'v' | {'a', 'b'}=>42 | {'some', 'value'}}
  %% Aliased:
  %%    _2
  _4 = get_map_element _2, `{a,b}`

  %% Aliased:
  %%    _4
  _12 = succeeded:guard _4
  br _12, ^12, ^10

12:
  %% Argument types:
  %%    _4 => 42 | {'some', 'value'}
  %% Aliased:
  %%    _4
  _14 = bif:'=:=' _4, `42`
  br _14, ^13, ^10

13:
  %% Result type:
  %%    42 | {'some', 'value'}
  %% Aliased:
  %%    _5
  ret _5

10:
  %% match_SUITE.erl:839
  %% Aliased:
  %%    _2
  _6 = match_fail `badmatch`, _2

  %% Unique:
  %%    _6
  _16 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:844
%% Counter = 175
%% bs_ensure_opt: true
function `match_SUITE`:`coverage`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _57 = bif:is_list _0
  br _57, ^57, ^56

57:
  %% match_SUITE.erl:846
  %% Result type:
  %%    'ok'
  _22 = call (`coverage_1`/2), `x`, `a`

  %% Unique:
  %%    _22
  _58 = succeeded:body _22
  br _58, ^154, ^1

154:
  %% match_SUITE.erl:847
  %% Result type:
  %%    'ok'
  _23 = call (`coverage_1`/2), `x`, `b`

  %% Unique:
  %%    _23
  _61 = succeeded:body _23
  br _61, ^151, ^1

151:
  %% match_SUITE.erl:850
  %% Result type:
  %%    'ok'
  _24 = call (`coverage_3`/1), `"abc"`

  %% Unique:
  %%    _24
  _64 = succeeded:body _24
  br _64, ^148, ^1

148:
  %% match_SUITE.erl:853
  %% Result type:
  %%    {'expr' | 'get' | 'key' | 'literal', 'expr' | 'get' | 'key' | 'literal'}
  _25 = call (`coverage_4`/2), `[literal,get]`, `[[expr,key]]`

  %% Unique:
  %%    _25
  _67 = succeeded:body _25
  br _67, ^67, ^1

67:
  %% Argument types:
  %%    _25 => {'expr' | 'get' | 'key' | 'literal', 'expr' | 'get' | 'key' | 'literal'}
  %% Unique:
  %%    _25
  _146 = bif:'=:=' _25, `{expr,key}`
  br _146, ^146, ^69

146:
  %% match_SUITE.erl:854
  %% Result type:
  %%    {'expr' | 'get' | 'key' | 'literal', 'expr' | 'get' | 'key' | 'literal'}
  _26 = call (`coverage_4`/2), `[expr,key]`, `[]`

  %% Unique:
  %%    _26
  _70 = succeeded:body _26
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    _26 => {'expr' | 'get' | 'key' | 'literal', 'expr' | 'get' | 'key' | 'literal'}
  %% Unique:
  %%    _26
  _144 = bif:'=:=' _26, `{expr,key}`
  br _144, ^144, ^72

144:
  %% match_SUITE.erl:856
  %% Result type:
  %%    'a' | 'b'
  _27 = call (`coverage_5`/2), `"\b\b\b"`, `{coverage_id,true,undefined}`

  %% Unique:
  %%    _27
  _73 = succeeded:body _27
  br _73, ^73, ^1

73:
  %% Argument types:
  %%    _27 => 'a' | 'b'
  %% Unique:
  %%    _27
  _142 = bif:'=:=' _27, `a`
  br _142, ^141, ^75

141:
  %% match_SUITE.erl:857
  %% Result type:
  %%    'b'
  _28 = call (`coverage_5`/2), `[]`, `{coverage_id,true,undefined}`

  %% Unique:
  %%    _28
  _76 = succeeded:body _28
  br _76, ^138, ^1

138:
  %% match_SUITE.erl:860
  %% Result type:
  %%    'ok'
  _29 = call (`coverage_6`/0)

  %% Unique:
  %%    _29
  _79 = succeeded:body _29
  br _79, ^135, ^1

135:
  %% match_SUITE.erl:863
  _9 = call (`id`/1), `true`

  %% Aliased:
  %%    _9
  _82 = succeeded:body _9
  br _82, ^82, ^1

82:
  %% match_SUITE.erl:863
  %% Result type:
  %%    'a' | 'c'
  %% Aliased:
  %%    _9
  _30 = call (`coverage_7`/3), `x`, `x`, _9

  %% Unique:
  %%    _30
  _83 = succeeded:body _30
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _30 => 'a' | 'c'
  %% Unique:
  %%    _30
  _133 = bif:'=:=' _30, `a`
  br _133, ^132, ^85

132:
  %% match_SUITE.erl:864
  _11 = call (`id`/1), `false`

  %% Aliased:
  %%    _11
  _86 = succeeded:body _11
  br _86, ^86, ^1

86:
  %% match_SUITE.erl:864
  %% Result type:
  %%    'a' | 'b'
  %% Aliased:
  %%    _11
  _31 = call (`coverage_7`/3), `x`, `0`, _11

  %% Unique:
  %%    _31
  _87 = succeeded:body _31
  br _87, ^87, ^1

87:
  %% Argument types:
  %%    _31 => 'a' | 'b'
  %% Unique:
  %%    _31
  _130 = bif:'=:=' _31, `b`
  br _130, ^173, ^89

173:
  br ^174

174:
  _93 = new_try_tag `'catch'`
  br _93, ^91, ^92

91:
  %% match_SUITE.erl:866
  _13 = call (`id`/1), `42`

  %% Aliased:
  %%    _13
  _95 = succeeded:body _13
  br _95, ^95, ^92

95:
  %% match_SUITE.erl:866
  %% Result type:
  %%    'false'
  %% Aliased:
  %%    _13
  _39 = call (`coverage_8`/1), _13

  %% Unique:
  %%    _39
  _96 = succeeded:body _39
  br _96, ^96, ^92

96:
  br ^90

92:
  %% Unique:
  %%    _93
  _99 = landingpad `'catch'`, _93

  %% Aliased:
  %%    _99
  _97 = extract _99, `0`
  br ^90

90:
  _100 = phi { _97, ^92 }, { `false`, ^96 }

  %% Aliased:
  %%    _100
  %% Unique:
  %%    _93
  _14 = catch_end _93, _100

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _125 = is_tagged_tuple _14, `2`, `'EXIT'`
  br _125, ^122, ^102

122:
  %% Argument types:
  %%    _14 => {''EXIT'', any()}
  %% Aliased:
  %%    _14
  _32 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _119 = bif:is_tuple _32
  br _119, ^119, ^102

119:
  %% Argument types:
  %%    _32 => {...}
  %% Aliased:
  %%    _32
  _120 = bif:tuple_size _32

  %% Argument types:
  %%    _120 => 0..16777215
  %% Unique:
  %%    _120
  _121 = bif:'=:=' _120, `2`
  br _121, ^118, ^102

118:
  %% Argument types:
  %%    _32 => {any(), any()}
  %% Aliased:
  %%    _32
  _35 = get_tuple_element _32, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _117 = bif:'=:=' _35, `{badmatch,{42}}`
  br _117, ^117, ^102

117:
  %% match_SUITE.erl:868
  _16 = call (`id`/1), `1`

  %% Aliased:
  %%    _16
  _103 = succeeded:body _16
  br _103, ^103, ^1

103:
  %% match_SUITE.erl:868
  %% Result type:
  %%    'error' | 'false' | 'true'
  %% Aliased:
  %%    _16
  _36 = call (`coverage_9`/1), _16

  %% Unique:
  %%    _36
  _104 = succeeded:body _36
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    _36 => 'error' | 'false' | 'true'
  %% Unique:
  %%    _36
  _115 = bif:'=:=' _36, `error`
  br _115, ^114, ^106

114:
  %% match_SUITE.erl:869
  _18 = call (`id`/1), `0`

  %% Aliased:
  %%    _18
  _107 = succeeded:body _18
  br _107, ^107, ^1

107:
  %% match_SUITE.erl:869
  %% Result type:
  %%    'error' | 'false' | 'true'
  %% Aliased:
  %%    _18
  _37 = call (`coverage_9`/1), _18

  %% Unique:
  %%    _37
  _108 = succeeded:body _37
  br _108, ^108, ^1

108:
  %% Argument types:
  %%    _37 => 'error' | 'false' | 'true'
  %% Unique:
  %%    _37
  _112 = bif:'=:=' _37, `true`
  br _112, ^111, ^110

111:
  %% Result type:
  %%    'ok'
  ret `ok`

110:
  %% match_SUITE.erl:869
  %% Unique:
  %%    _37
  _40 = match_fail `badmatch`, _37

  %% Unique:
  %%    _40
  _113 = succeeded:body _40
  br ^1

106:
  %% match_SUITE.erl:868
  %% Unique:
  %%    _36
  _41 = match_fail `badmatch`, _36

  %% Unique:
  %%    _41
  _116 = succeeded:body _41
  br ^1

102:
  %% match_SUITE.erl:866
  %% Aliased:
  %%    _14
  _42 = match_fail `badmatch`, _14

  %% Unique:
  %%    _42
  _128 = succeeded:body _42
  br ^1

89:
  %% match_SUITE.erl:864
  _43 = match_fail `badmatch`, `a`

  %% Unique:
  %%    _43
  _131 = succeeded:body _43
  br ^1

85:
  %% match_SUITE.erl:863
  _44 = match_fail `badmatch`, `c`

  %% Unique:
  %%    _44
  _134 = succeeded:body _44
  br ^1

75:
  %% match_SUITE.erl:856
  _47 = match_fail `badmatch`, `b`

  %% Unique:
  %%    _47
  _143 = succeeded:body _47
  br ^1

72:
  %% match_SUITE.erl:854
  %% Unique:
  %%    _26
  _48 = match_fail `badmatch`, _26

  %% Unique:
  %%    _48
  _145 = succeeded:body _48
  br ^1

69:
  %% match_SUITE.erl:853
  %% Unique:
  %%    _25
  _49 = match_fail `badmatch`, _25

  %% Unique:
  %%    _49
  _147 = succeeded:body _49
  br ^1

56:
  %% match_SUITE.erl:844
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-coverage/1-',1}}
  _53 = match_fail `function_clause`, _0

  %% Unique:
  %%    _53
  _157 = succeeded:body _53
  br ^1

1:
  _54 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _54
}

%% match_SUITE.erl:873
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'x'
%%    _1 =>
%%     'a' | 'b'
function `match_SUITE`:`coverage_1`(_0, _1) {
0:
  %% Unique:
  %%    _1
  _14 = bif:'=:=' _1, `b`
  br _14, ^12, ^11

12:
  %% match_SUITE.erl:876
  %% Result type:
  %%    'ok'
  _3 = call (`coverage_2`/3), `2`, `b`, `x`

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _3
  ret _3

11:
  %% match_SUITE.erl:875
  %% Result type:
  %%    'ok'
  _4 = call (`coverage_2`/3), `1`, `a`, `x`

  %% Unique:
  %%    _4
  _9 = succeeded:body _4
  br _9, ^9, ^1

9:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _4
  ret _4

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% match_SUITE.erl:879
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..2
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'x'
function `match_SUITE`:`coverage_2`(_0, _1, _2) {
0:
  %% Unique:
  %%    _0
  _21 = bif:'=:=' _0, `2`
  br _21, ^19, ^18

19:
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _17 = bif:'=:=' _1, `b`
  br _17, ^14, ^9

14:
  %% Result type:
  %%    'ok'
  ret `ok`

18:
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _13 = bif:'=:=' _1, `a`
  br _13, ^10, ^9

10:
  %% Result type:
  %%    'ok'
  ret `ok`

9:
  %% match_SUITE.erl:879
  %% Unique:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-coverage_2/3-',3}}
  _6 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:882
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(97..99)
function `match_SUITE`:`coverage_3`(_0) {
0:
  %% Argument types:
  %%    _0 => nonempty_list(97..99)
  %% Unique:
  %%    _0
  _6 = bif:'=:=' _0, `"abc"`
  br _6, ^6, ^5

6:
  %% Result type:
  %%    'ok'
  ret `ok`

5:
  %% match_SUITE.erl:882
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-coverage_3/1-',1}}
  _2 = match_fail `function_clause`, _0

  %% Unique:
  %%    _2
  _7 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:885
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list('expr' | 'get' | 'key' | 'literal')
%%    _1 =>
%%     list(nonempty_list('expr' | 'key'))
function `match_SUITE`:`coverage_4`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => nonempty_list('expr' | 'get' | 'key' | 'literal')
  %% Unique:
  %%    _0
  _6 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list('expr' | 'get' | 'key' | 'literal')
  %% Unique:
  %%    _0
  _5 = get_tl _0

  %% Argument types:
  %%    _6 => 'expr' | 'get' | 'key' | 'literal'
  %% Unique:
  %%    _6
  _23 = bif:'=:=' _6, `literal`
  br _23, ^22, ^17

22:
  %% Argument types:
  %%    _5 => list('expr' | 'get' | 'key' | 'literal')
  %% Unique:
  %%    _5
  _21 = bif:'=:=' _5, `[get]`
  br _21, ^21, ^17

21:
  %% Unique:
  %%    _1
  _20 = is_nonempty_list _1
  br _20, ^20, ^17

20:
  %% Argument types:
  %%    _1 => nonempty_list(nonempty_list('expr' | 'key'))
  %% Unique:
  %%    _1
  _10 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_list(nonempty_list('expr' | 'key'))
  %% Unique:
  %%    _1
  _9 = get_tl _1

  %% Argument types:
  %%    _9 => list(nonempty_list('expr' | 'key'))
  %% Unique:
  %%    _9
  _19 = bif:'=:=' _9, `[]`
  br _19, ^19, ^17

19:
  %% match_SUITE.erl:886
  %% Result type:
  %%    {'expr' | 'get' | 'key' | 'literal', 'expr' | 'get' | 'key' | 'literal'}
  %% Unique:
  %%    _10
  _11 = call (`coverage_4`/2), _10, `[]`

  %% Unique:
  %%    _11
  _18 = succeeded:body _11
  br _18, ^18, ^1

18:
  %% Result type:
  %%    {'expr' | 'get' | 'key' | 'literal', 'expr' | 'get' | 'key' | 'literal'}
  %% Unique:
  %%    _11
  ret _11

17:
  %% Unique:
  %%    _5
  _26 = is_nonempty_list _5
  br _26, ^26, ^16

26:
  %% Argument types:
  %%    _5 => nonempty_list('expr' | 'get' | 'key' | 'literal')
  %% Unique:
  %%    _5
  _8 = get_hd _5

  %% Argument types:
  %%    _5 => nonempty_list('expr' | 'get' | 'key' | 'literal')
  %% Unique:
  %%    _5
  _7 = get_tl _5

  %% Argument types:
  %%    _7 => list('expr' | 'get' | 'key' | 'literal')
  %% Unique:
  %%    _7
  _25 = bif:'=:=' _7, `[]`
  br _25, ^25, ^16

25:
  %% Argument types:
  %%    _1 => list(nonempty_list('expr' | 'key'))
  %% Unique:
  %%    _1
  _24 = bif:'=:=' _1, `[]`
  br _24, ^24, ^16

24:
  %% Argument types:
  %%    _6 => 'expr' | 'get' | 'key' | 'literal'
  %%    _8 => 'expr' | 'get' | 'key' | 'literal'
  %% Unique:
  %%    _6, 
  %%    _8
  _12 = put_tuple _6, _8
  %% Result type:
  %%    {'expr' | 'get' | 'key' | 'literal', 'expr' | 'get' | 'key' | 'literal'}
  %% Unique:
  %%    _12
  ret _12

16:
  %% match_SUITE.erl:885
  %% Unique:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-coverage_4/2-',2}}
  _13 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _13
  _28 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% match_SUITE.erl:891
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(8)
%%    _1 =>
%%     {'coverage_id', 'true', 'undefined'}
function `match_SUITE`:`coverage_5`(_0, _1) {
0:
  %% match_SUITE.erl:893
  %% Argument types:
  %%    _0 => list(8)
  %% Unique:
  %%    _0
  _3 = bif:'=:=' _0, `"\b\b\b"`
  br _3, ^16, ^18

16:
  %% Result type:
  %%    'a'
  ret `a`

18:
  %% Result type:
  %%    'b'
  ret `b`
}

%% match_SUITE.erl:898
%% Counter = 22
%% bs_ensure_opt: true
function `match_SUITE`:`coverage_6`() {
0:
  %% match_SUITE.erl:901
  _1 = call (`id`/1), `1`

  %% Aliased:
  %%    _1
  _13 = succeeded:body _1
  br _13, ^13, ^1

13:
  %% match_SUITE.erl:901
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _6 = bif:'>' _1, `0`
  br _6, ^19, ^21

19:
  %% Result type:
  %%    'ok'
  ret `ok`

21:
  %% match_SUITE.erl:912
  _10 = call (`erlang`:`error`/1), `[error,17,42]`

  %% Aliased:
  %%    _10
  _20 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% match_SUITE.erl:916
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'x'
%%    _1 =>
%%     'x' | 0
function `match_SUITE`:`coverage_7`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _16 = bif:'=:=' _2, `true`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'a'
  ret `a`

14:
  %% Argument types:
  %%    _1 => 'x' | 0
  %% Unique:
  %%    _1
  _21 = bif:'=:=' _1, `0`
  br _21, ^20, ^17

20:
  %% Aliased:
  %%    _2
  _26 = bif:'=:=' _2, `false`
  br _26, ^18, ^22

18:
  %% Result type:
  %%    'b'
  ret `b`

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _24 = bif:'=:=' _2, `true`
  br _24, ^23, ^22

23:
  %% Result type:
  %%    'c'
  ret `c`

22:
  %% match_SUITE.erl:916
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-coverage_7/3-',3}}
  _11 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _11
  _25 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% match_SUITE.erl:924
%% Counter = 15
%% bs_ensure_opt: true
function `match_SUITE`:`coverage_8`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _4 = put_tuple _0

  %% Argument types:
  %%    _4 => {any()}
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _4
  _13 = bif:'=:=' _4, _0
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'false'
  ret `false`

12:
  %% match_SUITE.erl:925
  %% Unique:
  %%    _4
  _9 = match_fail `badmatch`, _4

  %% Unique:
  %%    _9
  _14 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% match_SUITE.erl:927
%% Counter = 18
%% bs_ensure_opt: true
function `match_SUITE`:`coverage_9`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _17 = bif:'==' _0, `0`
  br _17, ^17, ^16

17:
  %% match_SUITE.erl:928
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _13 = bif:'/=' _0, `-1`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _13
  ret _13

16:
  %% Result type:
  %%    'error'
  ret `error`
}

%% match_SUITE.erl:938
%% Counter = 163
%% bs_ensure_opt: true
function `match_SUITE`:`grab_bag`(_0) {
0:
  %% match_SUITE.erl:939
  _43 = call (`id`/1), `[a,b,c]`

  %% Aliased:
  %%    _43
  _74 = succeeded:body _43
  br _74, ^74, ^1

74:
  %% Aliased:
  %%    _43
  _142 = is_nonempty_list _43
  br _142, ^142, ^76

142:
  %% Argument types:
  %%    _43 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _43
  _44 = get_tl _43

  %% match_SUITE.erl:940
  %% Aliased:
  %%    _44
  _46 = call (`id`/1), _44

  %% Aliased:
  %%    _46
  _77 = succeeded:body _46
  br _77, ^77, ^1

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _140 = bif:'=:=' _46, `[b,c]`
  br _140, ^161, ^79

161:
  br ^162

162:
  _83 = new_try_tag `'catch'`
  br _83, ^81, ^82

81:
  %% match_SUITE.erl:945
  %% Result type:
  %%    none()
  %% Argument types:
  %%    (`'-grab_bag/1-fun-0-'`/0) => fun(() -> none())
  _59 = call (`'-grab_bag/1-fun-0-'`/0)

  %% Aliased:
  %%    _59
  _85 = succeeded:body _59
  br ^82

82:
  %% Unique:
  %%    _83
  _88 = landingpad `'catch'`, _83

  %% Aliased:
  %%    _88
  _86 = extract _88, `0`
  br ^80

80:
  %% Aliased:
  %%    _86
  %% Unique:
  %%    _83
  _5 = catch_end _83, _86

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _136 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _136, ^145, ^91

145:
  %% match_SUITE.erl:955
  %% Argument types:
  %%    (`'-grab_bag/1-fun-1-'`/2) => fun((_, _))
  _50 = call (`'-grab_bag/1-fun-1-'`/2), `{a,a,z,z}`, `{z,a,z}`

  %% Aliased:
  %%    _50
  _92 = succeeded:body _50
  br _92, ^92, ^1

92:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _131 = bif:'=:=' _50, `ok`
  br _131, ^130, ^94

130:
  %% match_SUITE.erl:956
  %% Argument types:
  %%    (`'-grab_bag/1-fun-1-'`/2) => fun((_, _))
  _51 = call (`'-grab_bag/1-fun-1-'`/2), `{0,up}`, `{zzz,1}`

  %% Aliased:
  %%    _51
  _95 = succeeded:body _51
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _128 = bif:'=:=' _51, `1`
  br _128, ^127, ^97

127:
  %% match_SUITE.erl:957
  %% Argument types:
  %%    (`'-grab_bag/1-fun-1-'`/2) => fun((_, _))
  _52 = call (`'-grab_bag/1-fun-1-'`/2), `{x,y}`, `{a,z,z}`

  %% Aliased:
  %%    _52
  _98 = succeeded:body _52
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _125 = bif:'=:=' _52, `y`
  br _125, ^124, ^100

124:
  %% match_SUITE.erl:966
  %% Result type:
  %%    'atom' | 'ok' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010
  _53 = call (`grab_bag_remove_failure`/3), `[{stretch,0,0},
  {bad,[]},
  {bad,atom},
  {bad,0},
  {bad,17140672472095896272447595651639067760236831933683123576548010},
  {bad,8570336236047948136223797825819533880118415966841561788274005}]`, `unit`, `0`

  %% Aliased:
  %%    _53
  _101 = succeeded:body _53
  br _101, ^101, ^1

101:
  %% Argument types:
  %%    _53 => 'atom' | 'ok' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010
  %% Aliased:
  %%    _53
  _122 = bif:'=:=' _53, `ok`
  br _122, ^121, ^103

121:
  %% match_SUITE.erl:968
  %% Result type:
  %%    {0..255, bitstring(8)}
  _54 = call (`grab_bag_single_valued`/1), `<<"*+,">>`

  %% Unique:
  %%    _54
  _104 = succeeded:body _54
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    _54 => {0..255, bitstring(8)}
  %% Unique:
  %%    _54
  _119 = bif:'=:=' _54, `{42,<<"+,">>}`
  br _119, ^119, ^106

119:
  %% match_SUITE.erl:969
  %% Result type:
  %%    'empty_list'
  _55 = call (`grab_bag_single_valued`/1), `[]`

  %% Unique:
  %%    _55
  _107 = succeeded:body _55
  br _107, ^116, ^1

116:
  %% match_SUITE.erl:970
  %% Result type:
  %%    'empty_tuple'
  _56 = call (`grab_bag_single_valued`/1), `{}`

  %% Unique:
  %%    _56
  _110 = succeeded:body _56
  br _110, ^113, ^1

113:
  %% Result type:
  %%    'ok'
  ret `ok`

106:
  %% match_SUITE.erl:968
  %% Unique:
  %%    _54
  _64 = match_fail `badmatch`, _54

  %% Unique:
  %%    _64
  _120 = succeeded:body _64
  br ^1

103:
  %% match_SUITE.erl:966
  %% Aliased:
  %%    _53
  _65 = match_fail `badmatch`, _53

  %% Unique:
  %%    _65
  _123 = succeeded:body _65
  br ^1

100:
  %% match_SUITE.erl:957
  %% Aliased:
  %%    _52
  _66 = match_fail `badmatch`, _52

  %% Unique:
  %%    _66
  _126 = succeeded:body _66
  br ^1

97:
  %% match_SUITE.erl:956
  %% Aliased:
  %%    _51
  _67 = match_fail `badmatch`, _51

  %% Unique:
  %%    _67
  _129 = succeeded:body _67
  br ^1

94:
  %% match_SUITE.erl:955
  %% Aliased:
  %%    _50
  _68 = match_fail `badmatch`, _50

  %% Unique:
  %%    _68
  _132 = succeeded:body _68
  br ^1

91:
  %% match_SUITE.erl:945
  %% Aliased:
  %%    _5
  _69 = match_fail `badmatch`, _5

  %% Unique:
  %%    _69
  _139 = succeeded:body _69
  br ^1

79:
  %% match_SUITE.erl:940
  %% Aliased:
  %%    _46
  _70 = match_fail `badmatch`, _46

  %% Unique:
  %%    _70
  _141 = succeeded:body _70
  br ^1

76:
  %% match_SUITE.erl:939
  %% Aliased:
  %%    _43
  _71 = match_fail `badmatch`, _43

  %% Unique:
  %%    _71
  _143 = succeeded:body _71
  br ^1

1:
  _72 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _72
}

%% match_SUITE.erl:974
%% Counter = 81
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list({'bad', 'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010} | {'stretch', 0, 0})
%%    _1 =>
%%     'unit'
function `match_SUITE`:`grab_bag_remove_failure`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _0
  _76 = is_nonempty_list _0
  br _76, ^76, ^77

76:
  %% Argument types:
  %%    _0 => nonempty_list({'bad', 'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010} | {'stretch', 0, 0})
  %% Aliased:
  %%    _0
  _21 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list({'bad', 'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010} | {'stretch', 0, 0})
  %% Aliased:
  %%    _0
  _20 = get_tl _0

  %% Argument types:
  %%    _21 => {'bad', 'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010} | {'stretch', 0, 0}
  %% Aliased:
  %%    _21
  _75 = bif:tuple_size _21
  %% Argument types:
  %%    
  switch _75, ^42, [
    { `2`, ^44 },
    { `3`, ^70 }
  ]

70:
  %% match_SUITE.erl:979
  _27 = call (`id`/1), `{min,1}`

  %% Aliased:
  %%    _27
  _46 = succeeded:body _27
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _66 = bif:is_tuple _27
  br _66, ^66, ^48

66:
  %% Argument types:
  %%    _27 => {...}
  %% Aliased:
  %%    _27
  _67 = bif:tuple_size _27

  %% Argument types:
  %%    _67 => 0..16777215
  %% Unique:
  %%    _67
  _68 = bif:'=:=' _67, `2`
  br _68, ^65, ^48

65:
  %% Argument types:
  %%    _27 => {any(), any()}
  %% Aliased:
  %%    _27
  _29 = get_tuple_element _27, `0`

  %% Argument types:
  %%    _27 => {any(), any()}
  %% Aliased:
  %%    _27
  _28 = get_tuple_element _27, `1`

  %% match_SUITE.erl:980
  %% Result type:
  %%    'atom' | 'ok' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010
  %% Aliased:
  %%    _20, 
  %%    _28
  _4 = call (`grab_bag_remove_failure`/3), _20, `unit`, _28

  %% Aliased:
  %%    _4
  _49 = succeeded:body _4
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _63 = bif:'=:=' _29, `min`
  br _63, ^52, ^51

52:
  %% Argument types:
  %%    _20 => list({'bad', 'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010} | {'stretch', 0, 0})
  %% Aliased:
  %%    _20
  _59 = bif:'=:=' _20, `[]`
  br _59, ^58, ^59

58:
  %% Result type:
  %%    'ok'
  ret `ok`

59:
  %% match_SUITE.erl:984
  %% Argument types:
  %%    _20 => nonempty_list({'bad', 'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010} | {'stretch', 0, 0})
  %% Aliased:
  %%    _20
  _5 = get_tl _20

  %% Argument types:
  %%    _5 => list({'bad', 'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010} | {'stretch', 0, 0})
  %% Aliased:
  %%    _5
  _30 = put_list `{stretch,0,0}`, _5

  %% match_SUITE.erl:984
  %% Result type:
  %%    'atom' | 'ok' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010
  %% Aliased:
  %%    _28
  %% Unique:
  %%    _30
  _36 = call (`grab_bag_remove_failure`/3), _30, `unit`, _28

  %% Aliased:
  %%    _36
  _61 = succeeded:body _36
  br _61, ^61, ^1

61:
  %% Result type:
  %%    'atom' | 'ok' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010
  %% Aliased:
  %%    _36
  ret _36

51:
  %% Argument types:
  %%    _4 => 'atom' | 'ok' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010
  %% Aliased:
  %%    _4, 
  %%    _29
  _6 = put_tuple _29, _4

  %% match_SUITE.erl:980
  %% Unique:
  %%    _6
  _37 = match_fail `case_clause`, _6

  %% Unique:
  %%    _37
  _64 = succeeded:body _37
  br ^1

48:
  %% match_SUITE.erl:979
  %% Aliased:
  %%    _27
  _38 = match_fail `badmatch`, _27

  %% Unique:
  %%    _38
  _69 = succeeded:body _38
  br ^1

44:
  %% Argument types:
  %%    _21 => {'bad', 'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010}
  %% Aliased:
  %%    _21
  _22 = get_tuple_element _21, `1`
  %% Result type:
  %%    'atom' | nil() | 0..17140672472095896272447595651639067760236831933683123576548010
  %% Aliased:
  %%    _22
  ret _22

42:
  %% match_SUITE.erl:974
  %% Aliased:
  %%    _0, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-grab_bag_remove_failure/3-',3}}
  _39 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _39
  _78 = succeeded:body _39
  br ^1

1:
  _40 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _40

77:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% match_SUITE.erl:990
%% Counter = 39
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nil() | {} | bitstring(8)
%%     accepts_match_context
function `match_SUITE`:`grab_bag_single_valued`(_0) {
0:
  %% Argument types:
  %%    _0 => nil() | {} | bitstring(8)
  %% Aliased:
  %%    _0
  %% Anno: #{accepts_match_contexts => true}
  _2 = bs_start_match `new`, _0

  %% Aliased:
  %%    _2
  _15 = succeeded:guard _2
  br _15, ^20, ^12

20:
  _37 = bs_ensure _2, `8`, `1`
  _38 = succeeded:guard _37
  br _38, ^36, ^23

36:
  %% match_SUITE.erl:990
  %% Argument types:
  %%    _37 => bs_context(8)
  %% Aliased:
  %%    _2
  %% Anno: #{ensured => true}
  _25 = bs_match `integer`, _37, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _25
  _26 = succeeded:guard _25
  br _26, ^21, ^23

21:
  %% Aliased:
  %%    _25
  _27 = bs_extract _25

  %% match_SUITE.erl:990
  %% Aliased:
  %%    _25
  _28 = bs_get_tail _25

  %% Argument types:
  %%    _27 => 0..255
  %%    _28 => bitstring(8)
  %% Aliased:
  %%    _28
  %% Unique:
  %%    _27
  _31 = put_tuple _27, _28
  %% Result type:
  %%    {0..255, bitstring(8)}
  %% Unique:
  %%    _31
  ret _31

23:
  %% Aliased:
  %%    _2
  _35 = bs_get_tail _2

  %% match_SUITE.erl:990
  %% Aliased:
  %%    _35
  %% Anno: #{inlined => {'-inlined-grab_bag_single_valued/1-',1}}
  _32 = match_fail `function_clause`, _35

  %% Unique:
  %%    _32
  _33 = succeeded:body _32
  br ^1

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _34

12:
  %% Argument types:
  %%    _0 => nil() | {}
  %% Aliased:
  %%    _0
  _17 = bif:'=:=' _0, `{}`
  br _17, ^17, ^18

17:
  %% Result type:
  %%    'empty_tuple'
  ret `empty_tuple`

18:
  %% Result type:
  %%    'empty_list'
  ret `empty_list`
}

%% match_SUITE.erl:996
%% Counter = 57
%% bs_ensure_opt: true
function `match_SUITE`:`literal_binary`(_0) {
0:
  %% match_SUITE.erl:997
  %% Result type:
  %%    'fail' | 1..3
  _7 = call (`literal_binary_match`/2), `bar`, `<<"y">>`

  %% Unique:
  %%    _7
  _21 = succeeded:body _7
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    _7 => 'fail' | 1..3
  %% Unique:
  %%    _7
  _55 = bif:'=:=' _7, `3`
  br _55, ^54, ^23

54:
  %% match_SUITE.erl:1001
  %% Result type:
  %%    'fail' | 1..3
  _8 = call (`literal_binary_match`/2), `bar`, `<<"x">>`

  %% Unique:
  %%    _8
  _24 = succeeded:body _8
  br _24, ^24, ^1

24:
  %% Argument types:
  %%    _8 => 'fail' | 1..3
  %% Unique:
  %%    _8
  _52 = bif:'=:=' _8, `1`
  br _52, ^51, ^26

51:
  %% match_SUITE.erl:1002
  %% Result type:
  %%    'fail' | 2..3
  _9 = call (`literal_binary_match`/2), `foo`, `<<"x">>`

  %% Unique:
  %%    _9
  _27 = succeeded:body _9
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    _9 => 'fail' | 2..3
  %% Unique:
  %%    _9
  _49 = bif:'=:=' _9, `2`
  br _49, ^48, ^29

48:
  %% match_SUITE.erl:1003
  %% Result type:
  %%    'fail' | 2..3
  _10 = call (`literal_binary_match`/2), `foo`, `<<"y">>`

  %% Unique:
  %%    _10
  _30 = succeeded:body _10
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    _10 => 'fail' | 2..3
  %% Unique:
  %%    _10
  _46 = bif:'=:=' _10, `3`
  br _46, ^45, ^32

45:
  %% match_SUITE.erl:1004
  %% Result type:
  %%    'fail' | 1..3
  _11 = call (`literal_binary_match`/2), `bar`, `<<"z">>`

  %% Unique:
  %%    _11
  _33 = succeeded:body _11
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    _11 => 'fail' | 1..3
  %% Unique:
  %%    _11
  _43 = bif:'=:=' _11, `fail`
  br _43, ^42, ^35

42:
  %% match_SUITE.erl:1005
  %% Result type:
  %%    'fail' | 2..3
  _12 = call (`literal_binary_match`/2), `foo`, `<<"z">>`

  %% Unique:
  %%    _12
  _36 = succeeded:body _12
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    _12 => 'fail' | 2..3
  %% Unique:
  %%    _12
  _40 = bif:'=:=' _12, `fail`
  br _40, ^39, ^38

39:
  %% Result type:
  %%    'ok'
  ret `ok`

38:
  %% match_SUITE.erl:1005
  %% Unique:
  %%    _12
  _13 = match_fail `badmatch`, _12

  %% Unique:
  %%    _13
  _41 = succeeded:body _13
  br ^1

35:
  %% match_SUITE.erl:1004
  %% Unique:
  %%    _11
  _14 = match_fail `badmatch`, _11

  %% Unique:
  %%    _14
  _44 = succeeded:body _14
  br ^1

32:
  %% match_SUITE.erl:1003
  %% Unique:
  %%    _10
  _15 = match_fail `badmatch`, _10

  %% Unique:
  %%    _15
  _47 = succeeded:body _15
  br ^1

29:
  %% match_SUITE.erl:1002
  %% Unique:
  %%    _9
  _16 = match_fail `badmatch`, _9

  %% Unique:
  %%    _16
  _50 = succeeded:body _16
  br ^1

26:
  %% match_SUITE.erl:1001
  %% Unique:
  %%    _8
  _17 = match_fail `badmatch`, _8

  %% Unique:
  %%    _17
  _53 = succeeded:body _17
  br ^1

23:
  %% match_SUITE.erl:997
  %% Unique:
  %%    _7
  _18 = match_fail `badmatch`, _7

  %% Unique:
  %%    _18
  _56 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% match_SUITE.erl:1008
%% Counter = 26
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'bar' | 'foo'
%%    _1 =>
%%     bitstring(8)
%%     accepts_match_context
function `match_SUITE`:`literal_binary_match`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => bitstring(8)
  %% Aliased:
  %%    _1
  %% Anno: #{accepts_match_contexts => true}
  _8 = bs_start_match `new`, _1
  _24 = bs_ensure _8, `8`, `1`
  _25 = succeeded:guard _24
  br _25, ^23, ^13

23:
  %% match_SUITE.erl:1008
  %% Argument types:
  %%    _24 => bs_context(8)
  %% Aliased:
  %%    _8
  %% Anno: #{ensured => true}
  _9 = bs_match `integer`, _24, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _9
  _14 = succeeded:guard _9
  br _14, ^14, ^13

14:
  %% Aliased:
  %%    _9
  _10 = bs_extract _9
  %% Argument types:
  %%    
  switch _10, ^13, [
    { `120`, ^20 },
    { `121`, ^21 }
  ]

21:
  %% Aliased:
  %%    _9
  _19 = bs_test_tail _9, `0`
  br _19, ^19, ^13

19:
  %% Result type:
  %%    3
  ret `3`

20:
  %% Aliased:
  %%    _9
  _18 = bs_test_tail _9, `0`
  br _18, ^18, ^13

18:
  %% Argument types:
  %%    _0 => 'bar' | 'foo'
  %% Unique:
  %%    _0
  _17 = bif:'=:=' _0, `bar`
  br _17, ^16, ^15

16:
  %% Result type:
  %%    1
  ret `1`

15:
  %% Result type:
  %%    2
  ret `2`

13:
  %% Result type:
  %%    'fail'
  ret `fail`
}

%% match_SUITE.erl:1013
%% Counter = 94
%% bs_ensure_opt: true
function `match_SUITE`:`unary_op`(_0) {
0:
  %% match_SUITE.erl:1018
  %% Result type:
  %%    'error' | {'non_associative', 30..300}
  _12 = call (`unary_op_1`/1), `'&'`

  %% Unique:
  %%    _12
  _36 = succeeded:body _12
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    _12 => 'error' | {'non_associative', 30..300}
  %% Unique:
  %%    _12
  _92 = bif:'=:=' _12, `{non_associative,30}`
  br _92, ^92, ^38

92:
  %% match_SUITE.erl:1019
  %% Result type:
  %%    'error' | {'non_associative', 300}
  _13 = call (`unary_op_1`/1), `'^'`

  %% Unique:
  %%    _13
  _39 = succeeded:body _13
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    _13 => 'error' | {'non_associative', 300}
  %% Unique:
  %%    _13
  _90 = bif:'=:=' _13, `{non_associative,300}`
  br _90, ^90, ^41

90:
  %% match_SUITE.erl:1020
  %% Result type:
  %%    'error' | {'non_associative', 300}
  _14 = call (`unary_op_1`/1), `'not'`

  %% Unique:
  %%    _14
  _42 = succeeded:body _14
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    _14 => 'error' | {'non_associative', 300}
  %% Unique:
  %%    _14
  _88 = bif:'=:=' _14, `{non_associative,300}`
  br _88, ^88, ^44

88:
  %% match_SUITE.erl:1021
  %% Result type:
  %%    'error' | {'non_associative', 300}
  _15 = call (`unary_op_1`/1), `'+'`

  %% Unique:
  %%    _15
  _45 = succeeded:body _15
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    _15 => 'error' | {'non_associative', 300}
  %% Unique:
  %%    _15
  _86 = bif:'=:=' _15, `{non_associative,300}`
  br _86, ^86, ^47

86:
  %% match_SUITE.erl:1022
  %% Result type:
  %%    'error' | {'non_associative', 300}
  _16 = call (`unary_op_1`/1), `'-'`

  %% Unique:
  %%    _16
  _48 = succeeded:body _16
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    _16 => 'error' | {'non_associative', 300}
  %% Unique:
  %%    _16
  _84 = bif:'=:=' _16, `{non_associative,300}`
  br _84, ^84, ^50

84:
  %% match_SUITE.erl:1023
  %% Result type:
  %%    'error' | {'non_associative', 300}
  _17 = call (`unary_op_1`/1), `'~~~'`

  %% Unique:
  %%    _17
  _51 = succeeded:body _17
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    _17 => 'error' | {'non_associative', 300}
  %% Unique:
  %%    _17
  _82 = bif:'=:=' _17, `{non_associative,300}`
  br _82, ^82, ^53

82:
  %% match_SUITE.erl:1024
  %% Result type:
  %%    'error' | {'non_associative', 300}
  _18 = call (`unary_op_1`/1), `'!'`

  %% Unique:
  %%    _18
  _54 = succeeded:body _18
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _18 => 'error' | {'non_associative', 300}
  %% Unique:
  %%    _18
  _80 = bif:'=:=' _18, `{non_associative,300}`
  br _80, ^80, ^56

80:
  %% match_SUITE.erl:1025
  %% Result type:
  %%    'error' | {'non_associative', 300..320}
  _19 = call (`unary_op_1`/1), `'@'`

  %% Unique:
  %%    _19
  _57 = succeeded:body _19
  br _57, ^57, ^1

57:
  %% Argument types:
  %%    _19 => 'error' | {'non_associative', 300..320}
  %% Unique:
  %%    _19
  _78 = bif:'=:=' _19, `{non_associative,320}`
  br _78, ^78, ^59

78:
  %% match_SUITE.erl:1027
  %% Result type:
  %%    'error' | {'non_associative', 30..320}
  %% Aliased:
  %%    _0
  _20 = call (`unary_op_1`/1), _0

  %% Unique:
  %%    _20
  _60 = succeeded:body _20
  br _60, ^60, ^1

60:
  %% Argument types:
  %%    _20 => 'error' | {'non_associative', 30..320}
  %% Unique:
  %%    _20
  _76 = bif:'=:=' _20, `error`
  br _76, ^75, ^62

75:
  %% match_SUITE.erl:1028
  %% Result type:
  %%    'error' | {'non_associative', 300}
  _21 = call (`unary_op_1`/1), `abc`

  %% Unique:
  %%    _21
  _63 = succeeded:body _21
  br _63, ^63, ^1

63:
  %% Argument types:
  %%    _21 => 'error' | {'non_associative', 300}
  %% Unique:
  %%    _21
  _73 = bif:'=:=' _21, `error`
  br _73, ^72, ^65

72:
  %% match_SUITE.erl:1029
  %% Result type:
  %%    'error'
  _22 = call (`unary_op_1`/1), `42`

  %% Unique:
  %%    _22
  _66 = succeeded:body _22
  br _66, ^69, ^1

69:
  %% Result type:
  %%    'ok'
  ret `ok`

65:
  %% match_SUITE.erl:1028
  _24 = match_fail `badmatch`, `{non_associative,300}`

  %% Unique:
  %%    _24
  _74 = succeeded:body _24
  br ^1

62:
  %% match_SUITE.erl:1027
  %% Unique:
  %%    _20
  _25 = match_fail `badmatch`, _20

  %% Unique:
  %%    _25
  _77 = succeeded:body _25
  br ^1

59:
  %% match_SUITE.erl:1025
  %% Unique:
  %%    _19
  _26 = match_fail `badmatch`, _19

  %% Unique:
  %%    _26
  _79 = succeeded:body _26
  br ^1

56:
  %% match_SUITE.erl:1024
  _27 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _27
  _81 = succeeded:body _27
  br ^1

53:
  %% match_SUITE.erl:1023
  _28 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _28
  _83 = succeeded:body _28
  br ^1

50:
  %% match_SUITE.erl:1022
  _29 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _29
  _85 = succeeded:body _29
  br ^1

47:
  %% match_SUITE.erl:1021
  _30 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _30
  _87 = succeeded:body _30
  br ^1

44:
  %% match_SUITE.erl:1020
  _31 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _31
  _89 = succeeded:body _31
  br ^1

41:
  %% match_SUITE.erl:1019
  _32 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _32
  _91 = succeeded:body _32
  br ^1

38:
  %% match_SUITE.erl:1018
  %% Unique:
  %%    _12
  _33 = match_fail `badmatch`, _12

  %% Unique:
  %%    _33
  _93 = succeeded:body _33
  br ^1

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _34
}

%% match_SUITE.erl:1033
%% Counter = 50
%% bs_ensure_opt: true
function `match_SUITE`:`unary_op_1`(_0) {
0:
  switch _0, ^43, [
    { `'!'`, ^45 },
    { `'&'`, ^48 },
    { `'+'`, ^45 },
    { `'-'`, ^45 },
    { `'@'`, ^44 },
    { `'^'`, ^45 },
    { `'not'`, ^45 },
    { `'~~~'`, ^45 }
  ]

44:
  %% Result type:
  %%    {'non_associative', 320}
  ret `{non_associative,320}`

48:
  %% Result type:
  %%    {'non_associative', 30}
  ret `{non_associative,30}`

45:
  %% Result type:
  %%    {'non_associative', 300}
  ret `{non_associative,300}`

43:
  %% Result type:
  %%    'error'
  ret `error`
}

%% match_SUITE.erl:1082
%% Counter = 15
%% bs_ensure_opt: true
function `match_SUITE`:`eq_types`(_0) {
0:
  %% match_SUITE.erl:1083
  Ref = call (`erlang`:`make_ref`/0)

  %% match_SUITE.erl:1084
  %% Result type:
  %%    reference()
  %% Aliased:
  %%    Ref
  _5 = call (`eq_types`/2), Ref, `any`

  %% Unique:
  %%    _5
  _10 = succeeded:body _5
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _5 => reference()
  %%    Ref => reference()
  %% Unique:
  %%    _5, 
  %%    Ref
  _13 = bif:'=:=' _5, Ref
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% match_SUITE.erl:1084
  %% Unique:
  %%    _5
  _6 = match_fail `badmatch`, _5

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% match_SUITE.erl:1087
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     reference()
%%    _1 =>
%%     'any'
function `match_SUITE`:`eq_types`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => reference()
  %% Unique:
  %%    _0
  Term0 = put_tuple _0, `any`

  %% match_SUITE.erl:1090
  %% Aliased:
  %%    Term0
  Term = call (`id`/1), Term0

  %% Aliased:
  %%    Term
  _16 = succeeded:body Term
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    Term0 => {reference(), 'any'}
  %% Aliased:
  %%    Term, 
  %%    Term0
  _19 = bif:'=:=' Term0, Term
  br _19, ^22, ^18

22:
  %% Argument types:
  %%    Term => {reference(), 'any'}
  %% Aliased:
  %%    Term
  _11 = get_tuple_element Term, `0`
  %% Result type:
  %%    reference()
  %% Unique:
  %%    _11
  ret _11

18:
  %% match_SUITE.erl:1095
  %% Aliased:
  %%    Term0
  _13 = match_fail `badmatch`, Term0

  %% Unique:
  %%    _13
  _27 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% match_SUITE.erl:1102
%% Counter = 36
%% bs_ensure_opt: true
function `match_SUITE`:`match_after_return`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _17 = bif:is_list _0
  br _17, ^17, ^16

17:
  %% match_SUITE.erl:1106
  _1 = call (`erlang`:`unique_integer`/0)

  %% Aliased:
  %%    _1
  _18 = succeeded:body _1
  br _18, ^18, ^1

18:
  %% match_SUITE.erl:1106
  %% Result type:
  %%    {'gurka', integer()}
  %% Aliased:
  %%    _1
  _7 = call (`mar_test_tuple`/1), _1

  %% Unique:
  %%    _7
  _19 = succeeded:body _7
  br _19, ^32, ^1

32:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% match_SUITE.erl:1102
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-match_after_return/1-',1}}
  _13 = match_fail `function_clause`, _0

  %% Unique:
  %%    _13
  _35 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% match_SUITE.erl:1111
%% Counter = 5
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     integer()
function `match_SUITE`:`mar_test_tuple`(_0) {
0:
  %% Argument types:
  %%    _0 => integer()
  %% Unique:
  %%    _0
  _2 = put_tuple `gurka`, _0
  %% Result type:
  %%    {'gurka', integer()}
  %% Unique:
  %%    _2
  ret _2
}

%% match_SUITE.erl:1113
%% Counter = 27
%% bs_ensure_opt: true
function `match_SUITE`:`match_right_tuple`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _14 = bif:is_list _0
  br _14, ^14, ^13

14:
  %% match_SUITE.erl:1121
  _2 = call (`id`/1), `wrong_element`

  %% Aliased:
  %%    _2
  _15 = succeeded:body _2
  br _15, ^15, ^1

15:
  %% match_SUITE.erl:1121
  _1 = call (`id`/1), `ok`

  %% Aliased:
  %%    _1
  _16 = succeeded:body _1
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  Inner = put_tuple _2, _1

  %% match_SUITE.erl:1122
  _4 = call (`id`/1), `wrong_tuple`

  %% Aliased:
  %%    _4
  _17 = succeeded:body _4
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    Inner => {any(), any()}
  %% Aliased:
  %%    _4
  %% Unique:
  %%    Inner
  Outer = put_tuple Inner, _4

  %% match_SUITE.erl:1123
  %% Unique:
  %%    Outer
  _8 = call (`match_right_tuple_1`/1), Outer

  %% Aliased:
  %%    _8
  _18 = succeeded:body _8
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _22 = bif:'=:=' _8, `ok`
  br _22, ^21, ^20

21:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _8
  ret _8

20:
  %% match_SUITE.erl:1123
  %% Aliased:
  %%    _8
  _9 = match_fail `badmatch`, _8

  %% Unique:
  %%    _9
  _23 = succeeded:body _9
  br ^1

13:
  %% match_SUITE.erl:1113
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-match_right_tuple/1-',1}}
  _10 = match_fail `function_clause`, _0

  %% Unique:
  %%    _10
  _24 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% match_SUITE.erl:1125
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {{any(), any()}, any()}
function `match_SUITE`:`match_right_tuple_1`(_0) {
0:
  %% Argument types:
  %%    _0 => {{any(), any()}, any()}
  %% Unique:
  %%    _0
  _8 = get_tuple_element _0, `0`

  %% Argument types:
  %%    _8 => {any(), any()}
  %% Unique:
  %%    _8
  _9 = get_tuple_element _8, `1`

  %% match_SUITE.erl:1129
  %% Aliased:
  %%    _9
  %% Unique:
  %%    _8
  _3 = call (`force_succ_regs`/2), _8, _9

  %% Aliased:
  %%    _3
  _19 = succeeded:body _3
  br _19, ^19, ^1

19:
  %% match_SUITE.erl:1129
  %% Aliased:
  %%    _3
  _11 = call (`id`/1), _3

  %% Aliased:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% Aliased:
  %%    _11
  ret _11

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% match_SUITE.erl:1131
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {any(), any()}
function `match_SUITE`:`force_succ_regs`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% match_SUITE.erl:1133
%% Counter = 26
%% bs_ensure_opt: true
function `match_SUITE`:`tuple_size_in_try`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _12 = bif:is_list _0
  br _12, ^12, ^11

12:
  %% match_SUITE.erl:1136
  %% Result type:
  %%    'ok'
  _5 = call (`tsit`/1), `gurka`

  %% Unique:
  %%    _5
  _13 = succeeded:body _5
  br _13, ^22, ^1

22:
  %% match_SUITE.erl:1137
  %% Result type:
  %%    'ok'
  _4 = call (`tsit`/1), `gaffel`

  %% Unique:
  %%    _4
  _16 = succeeded:body _4
  br _16, ^19, ^1

19:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _4
  ret _4

11:
  %% match_SUITE.erl:1133
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-tuple_size_in_try/1-',1}}
  _8 = match_fail `function_clause`, _0

  %% Unique:
  %%    _8
  _25 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% match_SUITE.erl:1139
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'gaffel' | 'gurka'
function `match_SUITE`:`tsit`(_0) {
0:
  br ^44

44:
  _17 = new_try_tag `'try'`
  br _17, ^16, ^14

16:
  %% match_SUITE.erl:1141
  _8 = call (`id`/1), `ignored`

  %% Aliased:
  %%    _8
  _18 = succeeded:body _8
  br _18, ^18, ^14

18:
  %% match_SUITE.erl:1142
  %% Argument types:
  %%    _0 => 'gaffel' | 'gurka'
  %% Unique:
  %%    _0
  _6 = bif:tuple_size _0

  %% Unique:
  %%    _6
  _19 = succeeded:body _6
  br ^14

14:
  %% Unique:
  %%    _17
  _25 = landingpad `'try'`, _17

  %% Unique:
  %%    _17
  _26 = kill_try_tag _17
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% match_SUITE.erl:1148
%% Counter = 46
%% bs_ensure_opt: true
function `match_SUITE`:`match_boolean_list`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _31 = bif:is_list _0
  br _31, ^31, ^30

31:
  %% match_SUITE.erl:1149
  _3 = call (`lists`:`seq`/2), `1`, `8`

  %% Aliased:
  %%    _3
  _32 = succeeded:body _3
  br _32, ^32, ^1

32:
  %% match_SUITE.erl:1149
  %% Result type:
  %%    list('false' | 'true')
  %% Aliased:
  %%    _3
  _9 = call (`'-match_boolean_list/1-lc$^0/1-0-'`/1), _3

  %% Unique:
  %%    _9
  _33 = succeeded:body _9
  br _33, ^33, ^1

33:
  %% Unique:
  %%    _9
  _38 = is_nonempty_list _9
  br _38, ^38, ^35

38:
  %% Argument types:
  %%    _9 => nonempty_list('false' | 'true')
  %% Unique:
  %%    _9
  _22 = get_hd _9
  br _22, ^41, ^42

41:
  %% match_SUITE.erl:1156
  _26 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _26
  _44 = succeeded:body _26
  br ^1

42:
  %% Result type:
  %%    'ok'
  ret `ok`

35:
  %% match_SUITE.erl:1156
  _25 = match_fail `case_clause`, `[]`

  %% Unique:
  %%    _25
  _39 = succeeded:body _25
  br ^1

30:
  %% match_SUITE.erl:1148
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-match_boolean_list/1-',1}}
  _27 = match_fail `function_clause`, _0

  %% Unique:
  %%    _27
  _45 = succeeded:body _27
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% match_SUITE.erl:1162
%% Counter = 106
%% bs_ensure_opt: true
function `match_SUITE`:`heisen_variables`(_0) {
0:
  br ^104

104:
  _27 = new_try_tag `'catch'`
  br _27, ^25, ^26

25:
  %% match_SUITE.erl:1163
  %% Result type:
  %%    none()
  _17 = call (`gh_6516_scope1`/0)

  %% Aliased:
  %%    _17
  _29 = succeeded:body _17
  br ^26

26:
  %% Unique:
  %%    _27
  _32 = landingpad `'catch'`, _27

  %% Aliased:
  %%    _32
  _30 = extract _32, `0`
  br ^24

24:
  %% Aliased:
  %%    _30
  %% Unique:
  %%    _27
  _1 = catch_end _27, _30

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _68 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _68, ^65, ^35

65:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _8 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _62 = bif:is_tuple _8
  br _62, ^62, ^35

62:
  %% Argument types:
  %%    _8 => {...}
  %% Aliased:
  %%    _8
  _63 = bif:tuple_size _8

  %% Argument types:
  %%    _63 => 0..16777215
  %% Unique:
  %%    _63
  _64 = bif:'=:=' _63, `2`
  br _64, ^61, ^35

61:
  %% Argument types:
  %%    _8 => {any(), any()}
  %% Aliased:
  %%    _8
  _11 = get_tuple_element _8, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _60 = bif:'=:=' _11, `{badmatch,3}`
  br _60, ^103, ^35

103:
  br ^105

105:
  _39 = new_try_tag `'catch'`
  br _39, ^37, ^38

37:
  %% match_SUITE.erl:1164
  %% Result type:
  %%    none()
  _19 = call (`gh_6516_scope2`/0)

  %% Aliased:
  %%    _19
  _41 = succeeded:body _19
  br ^38

38:
  %% Unique:
  %%    _39
  _44 = landingpad `'catch'`, _39

  %% Aliased:
  %%    _44
  _42 = extract _44, `0`
  br ^36

36:
  %% Aliased:
  %%    _42
  %% Unique:
  %%    _39
  _3 = catch_end _39, _42

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _56 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _56, ^53, ^47

53:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _12 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _50 = bif:is_tuple _12
  br _50, ^50, ^47

50:
  %% Argument types:
  %%    _12 => {...}
  %% Aliased:
  %%    _12
  _51 = bif:tuple_size _12

  %% Argument types:
  %%    _51 => 0..16777215
  %% Unique:
  %%    _51
  _52 = bif:'=:=' _51, `2`
  br _52, ^49, ^47

49:
  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _15 = get_tuple_element _12, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _48 = bif:'=:=' _15, `{badmatch,3}`
  br _48, ^48, ^47

48:
  %% Result type:
  %%    'ok'
  ret `ok`

47:
  %% match_SUITE.erl:1164
  %% Aliased:
  %%    _3
  _20 = match_fail `badmatch`, _3

  %% Unique:
  %%    _20
  _59 = succeeded:body _20
  br ^1

35:
  %% match_SUITE.erl:1163
  %% Aliased:
  %%    _1
  _21 = match_fail `badmatch`, _1

  %% Unique:
  %%    _21
  _71 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% match_SUITE.erl:1168
%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`gh_6516_scope1`() {
0:
  %% match_SUITE.erl:1169
  _2 = match_fail `badmatch`, `3`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:1171
%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`gh_6516_scope2`() {
0:
  %% match_SUITE.erl:1172
  _2 = match_fail `badmatch`, `3`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:1175
%% Counter = 122
%% bs_ensure_opt: true
function `match_SUITE`:`mutable_variables`(_0) {
0:
  br ^120

120:
  _34 = new_try_tag `'catch'`
  br _34, ^32, ^33

32:
  %% match_SUITE.erl:1176
  %% Result type:
  %%    none()
  _22 = call (`mutable_variables_1`/0)

  %% Aliased:
  %%    _22
  _36 = succeeded:body _22
  br ^33

33:
  %% Unique:
  %%    _34
  _39 = landingpad `'catch'`, _34

  %% Aliased:
  %%    _39
  _37 = extract _39, `0`
  br ^31

31:
  %% Aliased:
  %%    _37
  %% Unique:
  %%    _34
  _1 = catch_end _34, _37

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _83 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _83, ^80, ^42

80:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _12 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _77 = bif:is_tuple _12
  br _77, ^77, ^42

77:
  %% Argument types:
  %%    _12 => {...}
  %% Aliased:
  %%    _12
  _78 = bif:tuple_size _12

  %% Argument types:
  %%    _78 => 0..16777215
  %% Unique:
  %%    _78
  _79 = bif:'=:=' _78, `2`
  br _79, ^76, ^42

76:
  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _15 = get_tuple_element _12, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _75 = bif:'=:=' _15, `{badmatch,0}`
  br _75, ^75, ^42

75:
  F = make_fun (`'-mutable_variables/1-fun-0-'`/0)

  %% match_SUITE.erl:1179
  _4 = call (`id`/1), `{tag,whatever}`

  %% Aliased:
  %%    _4
  _43 = succeeded:body _4
  br _43, ^43, ^1

43:
  %% match_SUITE.erl:1179
  %% Aliased:
  %%    _4, 
  %%    F
  _16 = call (`mutable_variables_2`/2), _4, F

  %% Aliased:
  %%    _16
  _44 = succeeded:body _16
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _73 = bif:'=:=' _16, `whatever`
  br _73, ^119, ^46

119:
  br ^121

121:
  _50 = new_try_tag `'catch'`
  br _50, ^48, ^49

48:
  %% match_SUITE.erl:1180
  _6 = call (`id`/1), `a`

  %% Aliased:
  %%    _6
  _52 = succeeded:body _6
  br _52, ^52, ^49

52:
  %% match_SUITE.erl:1180
  %% Aliased:
  %%    _6, 
  %%    F
  _25 = call (`mutable_variables_2`/2), _6, F

  %% Aliased:
  %%    _25
  _53 = succeeded:body _25
  br _53, ^53, ^49

53:
  br ^47

49:
  %% Unique:
  %%    _50
  _56 = landingpad `'catch'`, _50

  %% Aliased:
  %%    _56
  _54 = extract _56, `0`
  br ^47

47:
  _57 = phi { _54, ^49 }, { _25, ^53 }

  %% Aliased:
  %%    _57
  %% Unique:
  %%    _50
  _7 = catch_end _50, _57

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _68 = is_tagged_tuple _7, `2`, `'EXIT'`
  br _68, ^65, ^59

65:
  %% Argument types:
  %%    _7 => {''EXIT'', any()}
  %% Aliased:
  %%    _7
  _17 = get_tuple_element _7, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _62 = bif:is_tuple _17
  br _62, ^62, ^59

62:
  %% Argument types:
  %%    _17 => {...}
  %% Aliased:
  %%    _17
  _63 = bif:tuple_size _17

  %% Argument types:
  %%    _63 => 0..16777215
  %% Unique:
  %%    _63
  _64 = bif:'=:=' _63, `2`
  br _64, ^61, ^59

61:
  %% Argument types:
  %%    _17 => {any(), any()}
  %% Aliased:
  %%    _17
  _20 = get_tuple_element _17, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _60 = bif:'=:=' _20, `{badmatch,{tag,whatever}}`
  br _60, ^60, ^59

60:
  %% Result type:
  %%    'ok'
  ret `ok`

59:
  %% match_SUITE.erl:1180
  %% Aliased:
  %%    _7
  _26 = match_fail `badmatch`, _7

  %% Unique:
  %%    _26
  _71 = succeeded:body _26
  br ^1

46:
  %% match_SUITE.erl:1179
  %% Aliased:
  %%    _16
  _27 = match_fail `badmatch`, _16

  %% Unique:
  %%    _27
  _74 = succeeded:body _27
  br ^1

42:
  %% match_SUITE.erl:1176
  %% Aliased:
  %%    _1
  _28 = match_fail `badmatch`, _1

  %% Unique:
  %%    _28
  _86 = succeeded:body _28
  br ^1

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% match_SUITE.erl:1184
%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`mutable_variables_1`() {
0:
  %% match_SUITE.erl:1187
  _2 = match_fail `badmatch`, `0`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:1190
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     fun(())
function `match_SUITE`:`mutable_variables_2`(_0, _1) {
0:
  %% match_SUITE.erl:1191
  %% Argument types:
  %%    (`'-mutable_variables/1-fun-0-'`/0) => fun(())
  _2 = call (`'-mutable_variables/1-fun-0-'`/0)

  %% Aliased:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _2
  _17 = bif:'=:=' _2, _0
  br _17, ^17, ^16

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _23 = is_tagged_tuple _2, `2`, `tag`
  br _23, ^20, ^19

20:
  %% Argument types:
  %%    _2 => {'tag', any()}
  %% Aliased:
  %%    _2
  _8 = get_tuple_element _2, `1`
  %% Aliased:
  %%    _8
  ret _8

19:
  %% match_SUITE.erl:1191
  %% Aliased:
  %%    _2
  _10 = match_fail `badmatch`, _2

  %% Unique:
  %%    _10
  _26 = succeeded:body _10
  br ^1

16:
  %% match_SUITE.erl:1191
  %% Aliased:
  %%    _2
  _11 = match_fail `badmatch`, _2

  %% Unique:
  %%    _11
  _27 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% match_SUITE.erl:1195
%% Counter = 4
%% bs_ensure_opt: true
function `match_SUITE`:`id`(_0) {
0:
  %% Aliased:
  %%    _0
  ret _0
}

%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `match_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `match_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `match_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% match_SUITE.erl:1178
%% Counter = 27
%% bs_ensure_opt: true
function `match_SUITE`:`'-mutable_variables/1-fun-0-'`() {
0:
  %% match_SUITE.erl:1178
  _23 = call (`id`/1), `{tag,whatever}`

  %% Aliased:
  %%    _23
  _26 = succeeded:body _23
  br _26, ^26, ^1

26:
  %% Aliased:
  %%    _23
  ret _23

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% match_SUITE.erl:1149
%% Counter = 36
%% bs_ensure_opt: true
function `match_SUITE`:`'-match_boolean_list/1-lc$^0/1-0-'`(_4) {
0:
  %% Aliased:
  %%    _4
  _31 = is_nonempty_list _4
  br _31, ^31, ^28

31:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _20 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _19 = get_tl _4

  %% match_SUITE.erl:1149
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _6 = bif:'rem' _20, `2`

  %% Unique:
  %%    _6
  _29 = succeeded:body _6
  br _29, ^29, ^1

29:
  %% match_SUITE.erl:1149
  %% Argument types:
  %%    _6 => -1..1
  %% Unique:
  %%    _6
  _7 = bif:'=:=' _6, `0`

  %% match_SUITE.erl:1149
  %% Result type:
  %%    list('false' | 'true')
  %% Aliased:
  %%    _19
  _8 = call (`'-match_boolean_list/1-lc$^0/1-0-'`/1), _19

  %% Unique:
  %%    _8
  _30 = succeeded:body _8
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    _7 => 'false' | 'true'
  %%    _8 => list('false' | 'true')
  %% Unique:
  %%    _7, 
  %%    _8
  _23 = put_list _7, _8
  %% Result type:
  %%    nonempty_list('false' | 'true')
  %% Unique:
  %%    _23
  ret _23

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _32 = bif:'=:=' _4, `[]`
  br _32, ^32, ^27

32:
  %% Result type:
  %%    nil()
  ret `[]`

27:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _18 = put_tuple `bad_generator`, _4

  %% match_SUITE.erl:1149
  %% Unique:
  %%    _18
  _24 = call (`erlang`:`error`/1), _18

  %% Aliased:
  %%    _24
  _33 = succeeded:body _24
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% match_SUITE.erl:947
%% Counter = 80
%% bs_ensure_opt: true
function `match_SUITE`:`'-grab_bag/1-fun-1-'`(_13, _12) {
0:
  %% match_SUITE.erl:948
  %% Argument types:
  %%    
  %% Unique:
  %%    _13
  _10 = bif:element `1`, _13

  %% Aliased:
  %%    _10
  _64 = succeeded:body _10
  br _64, ^64, ^1

64:
  %% match_SUITE.erl:948
  %% Argument types:
  %%    
  %% Unique:
  %%    _12
  _9 = bif:element `2`, _12

  %% Aliased:
  %%    _9
  _65 = succeeded:body _9
  br _65, ^65, ^1

65:
  %% match_SUITE.erl:949
  %% Argument types:
  %%    _13 => {any(), ...}
  %% Unique:
  %%    _13
  _8 = bif:element `2`, _13

  %% Aliased:
  %%    _8
  _66 = succeeded:body _8
  br _66, ^67, ^1

67:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8, 
  %%    _9
  _30 = put_tuple _8, _9

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9, 
  %%    _10
  Same = put_tuple _10, _9

  %% Argument types:
  %%    _30 => {any(), any()}
  %%    Same => {any(), any()}
  %% Unique:
  %%    _30, 
  %%    Same
  _70 = bif:'=:=' _30, Same
  br _70, ^70, ^69

70:
  %% Result type:
  %%    'ok'
  ret `ok`

69:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _78 = bif:'=:=' _10, `0`
  br _78, ^77, ^71

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _76 = bif:'=:=' _9, `1`
  br _76, ^75, ^71

75:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _74 = bif:'=:=' _8, `up`
  br _74, ^73, ^71

73:
  %% match_SUITE.erl:951
  _60 = call (`id`/1), `1`

  %% Aliased:
  %%    _60
  _72 = succeeded:body _60
  br _72, ^72, ^1

72:
  %% Aliased:
  %%    _60
  ret _60

71:
  %% match_SUITE.erl:952
  %% Aliased:
  %%    _8
  _61 = call (`id`/1), _8

  %% Aliased:
  %%    _61
  _79 = succeeded:body _61
  br _79, ^79, ^1

79:
  %% Aliased:
  %%    _61
  ret _61

1:
  _62 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _62
}

%% match_SUITE.erl:942
%% Counter = 61
%% bs_ensure_opt: true
function `match_SUITE`:`'-grab_bag/1-fun-0-'`() {
0:
  %% match_SUITE.erl:943
  _57 = match_fail `badmatch`, `x`

  %% Unique:
  %%    _57
  _60 = succeeded:body _57
  br ^1

1:
  _58 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _58
}

%% match_SUITE.erl:548
%% Counter = 48
%% bs_ensure_opt: true
%% Parameters
%%    _6 =>
%%     list({1, 1} | {2, 'any' | 2})
function `match_SUITE`:`'-mac_lc2/1-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _44 = is_nonempty_list _6
  br _44, ^44, ^45

44:
  %% Argument types:
  %%    _6 => nonempty_list({1, 1} | {2, 'any' | 2})
  %% Aliased:
  %%    _6
  _15 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_list({1, 1} | {2, 'any' | 2})
  %% Aliased:
  %%    _6
  _14 = get_tl _6

  %% Argument types:
  %%    _15 => {1, 1} | {2, 'any' | 2}
  %% Aliased:
  %%    _15
  _17 = get_tuple_element _15, `0`

  %% Argument types:
  %%    _17 => 1..2
  %% Unique:
  %%    _17
  _32 = bif:'=:=' _17, `2`
  br _32, ^36, ^31

36:
  %% match_SUITE.erl:548
  %% Result type:
  %%    list({2, 2})
  %% Aliased:
  %%    _14
  _8 = call (`'-mac_lc2/1-lc$^0/1-0-'`/1), _14

  %% Unique:
  %%    _8
  _35 = succeeded:body _8
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    _8 => list({2, 2})
  %% Unique:
  %%    _8
  _20 = put_list `{2,2}`, _8
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Unique:
  %%    _20
  ret _20

31:
  %% match_SUITE.erl:549
  _22 = match_fail `badmatch`, `2`

  %% Unique:
  %%    _22
  _38 = succeeded:body _22
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25

45:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% match_SUITE.erl:543
%% Counter = 48
%% bs_ensure_opt: true
%% Parameters
%%    _6 =>
%%     list({1, 1} | {2, 'any' | 2})
function `match_SUITE`:`'-mac_lc1/1-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _44 = is_nonempty_list _6
  br _44, ^44, ^45

44:
  %% Argument types:
  %%    _6 => nonempty_list({1, 1} | {2, 'any' | 2})
  %% Aliased:
  %%    _6
  _15 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_list({1, 1} | {2, 'any' | 2})
  %% Aliased:
  %%    _6
  _14 = get_tl _6

  %% Argument types:
  %%    _15 => {1, 1} | {2, 'any' | 2}
  %% Aliased:
  %%    _15
  _17 = get_tuple_element _15, `0`

  %% Argument types:
  %%    _17 => 1..2
  %% Unique:
  %%    _17
  _32 = bif:'=:=' _17, `2`
  br _32, ^36, ^31

36:
  %% match_SUITE.erl:543
  %% Result type:
  %%    list({2, 2})
  %% Aliased:
  %%    _14
  _8 = call (`'-mac_lc1/1-lc$^0/1-0-'`/1), _14

  %% Unique:
  %%    _8
  _35 = succeeded:body _8
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    _8 => list({2, 2})
  %% Unique:
  %%    _8
  _20 = put_list `{2,2}`, _8
  %% Result type:
  %%    nonempty_list({2, 2})
  %% Unique:
  %%    _20
  ret _20

31:
  %% match_SUITE.erl:544
  _22 = match_fail `badmatch`, `2`

  %% Unique:
  %%    _22
  _38 = succeeded:body _22
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25

45:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% match_SUITE.erl:191
%% Counter = 134
%% bs_ensure_opt: true
function `match_SUITE`:`'-aliases/1-fun-4-'`(_65) {
0:
  %% match_SUITE.erl:192
  %% Unique:
  %%    _65
  _62 = call (`id`/1), _65

  %% Aliased:
  %%    _62
  _128 = succeeded:body _62
  br _128, ^128, ^1

128:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _132 = bif:'=:=' _62, `42`
  br _132, ^131, ^130

131:
  %% Result type:
  %%    {42, 42}
  ret `{42,42}`

130:
  %% match_SUITE.erl:192
  %% Aliased:
  %%    _62
  _125 = match_fail `badmatch`, _62

  %% Unique:
  %%    _125
  _133 = succeeded:body _125
  br ^1

1:
  _126 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _126
}

%% match_SUITE.erl:178
%% Counter = 122
%% bs_ensure_opt: true
function `match_SUITE`:`'-aliases/1-fun-1-'`() {
0:
  %% Result type:
  %%    {'home', 'home'}
  ret `{home,home}`
}
