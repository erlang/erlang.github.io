module bs_construct_SUITE.
exports [{all,0},
         {bad_size,1},
         {coerce_to_float,1},
         {end_per_group,2},
         {end_per_suite,1},
         {end_per_testcase,2},
         {fail,1},
         {float_arith,1},
         {float_bin,1},
         {groups,0},
         {in_catch,1},
         {in_guard,1},
         {init_per_group,2},
         {init_per_suite,1},
         {init_per_testcase,2},
         {module_info,0},
         {module_info,1},
         {nasty_literals,1},
         {opt,1},
         {otp_7556,1},
         {otp_8054,1},
         {private_append,1},
         {side_effect,1},
         {strings,1},
         {suite,0},
         {test1,1},
         {two,1},
         {verify_highest_opcode,1}].
attributes [].

%% bs_construct_SUITE.erl:38
%% Counter = 4
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')} | {'timetrap', {'minutes', 1}})
  ret `[{ct_hooks,[ts_install_cth]},{timetrap,{minutes,1}}]`
}

%% bs_construct_SUITE.erl:42
%% Counter = 4
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'p'})
  ret `[{group,p}]`
}

%% bs_construct_SUITE.erl:45
%% Counter = 4
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`groups`() {
0:
  %% Result type:
  %%    nonempty_list({'p', nonempty_list('parallel'), nonempty_list(atom())})
  ret `[{p,[parallel],
     [verify_highest_opcode,two,test1,fail,float_bin,in_guard,in_catch,
      nasty_literals,side_effect,opt,otp_7556,float_arith,otp_8054,strings,
      bad_size,private_append]}]`
}

%% bs_construct_SUITE.erl:53
%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`init_per_suite`(_0) {
0:
  %% bs_construct_SUITE.erl:54
  _2 = call (`test_lib`:`recompile`/1), `bs_construct_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:57
%% Counter = 4
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% bs_construct_SUITE.erl:60
%% Counter = 4
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% bs_construct_SUITE.erl:63
%% Counter = 4
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% bs_construct_SUITE.erl:67
%% Counter = 18
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`init_per_testcase`(_0, _1) {
0:
  %% bs_construct_SUITE.erl:67
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:is_atom _0
  br _2, ^16, ^10

16:
  %% bs_construct_SUITE.erl:67
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = bif:is_list _1
  br _3, ^12, ^10

12:
  %% Result type:
  %%    maybe_improper_list(any(), any())
  %% Aliased:
  %%    _1
  ret _1

10:
  %% bs_construct_SUITE.erl:67
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-init_per_testcase/2-',2}}
  _7 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% bs_construct_SUITE.erl:70
%% Counter = 18
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`end_per_testcase`(_0, _1) {
0:
  %% bs_construct_SUITE.erl:70
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:is_atom _0
  br _2, ^16, ^10

16:
  %% bs_construct_SUITE.erl:70
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = bif:is_list _1
  br _3, ^12, ^10

12:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% bs_construct_SUITE.erl:70
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-end_per_testcase/2-',2}}
  _7 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% bs_construct_SUITE.erl:73
%% Counter = 4
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`verify_highest_opcode`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% bs_construct_SUITE.erl:87
%% Counter = 16
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`two`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% bs_construct_SUITE.erl:88
  %% Result type:
  %%    bitstring(8)
  _3 = call (`two_1`/2), `[0]`, `[<<1,2,3,4>>,<<6,7,8,9>>]`

  %% Aliased:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => bitstring(8)
  %% Aliased:
  %%    _3
  _13 = bif:'=:=' _3, `<<0,1,2,3,4,6,7,8,9>>`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% bs_construct_SUITE.erl:88
  %% Aliased:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

8:
  %% bs_construct_SUITE.erl:87
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-two/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% bs_construct_SUITE.erl:91
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(0)
%%    _1 =>
%%     nonempty_list(bitstring(32))
function `bs_construct_SUITE`:`two_1`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => nonempty_list(0)
  %%    _1 => nonempty_list(bitstring(32))
  %% Unique:
  %%    _0, 
  %%    _1
  _2 = put_list _0, _1

  %% bs_construct_SUITE.erl:92
  %% Unique:
  %%    _2
  _3 = call (`erlang`:`list_to_binary`/1), _2

  %% Aliased:
  %%    _3
  _6 = succeeded:body _3
  br _6, ^6, ^1

6:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% bs_construct_SUITE.erl:95
%% Counter = 9
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
function `bs_construct_SUITE`:`big`(_0) {
0:
  %% Result type:
  %%    57285702734876389752897683
  ret `57285702734876389752897683`
}

%% bs_construct_SUITE.erl:98
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_a_number' | -2047..16 | bitstring(1)
function `bs_construct_SUITE`:`i`(_0) {
0:
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  %% Unique:
  %%    _0
  ret _0
}

%% bs_construct_SUITE.erl:100
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true' | 42..100 | bitstring(4)
function `bs_construct_SUITE`:`id`(_0) {
0:
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _0
  ret _0
}

%% bs_construct_SUITE.erl:107
%% Counter = 131
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_a_number' | -2047..16 | bitstring(1)
%%    _1 =>
%%     57285702734876389752897683
%%    _2 =>
%%     'not_a_number' | -2047..16 | bitstring(1)
%%    _3 =>
%%     'not_a_number' | -2047..16 | bitstring(1)
function `bs_construct_SUITE`:`l`(_0, _1, _2, _3) {
0:
  %% bs_construct_SUITE.erl:109
  %% Argument types:
  %%    _0 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _0
  %% Anno: #{unit => 256}
  _43 = bs_create_bin `integer`, `[1,{segment,1}]`, _0, `0`

  %% Aliased:
  %%    _43
  _101 = succeeded:body _43
  br _101, ^101, ^1

101:
  %% bs_construct_SUITE.erl:115
  %% Argument types:
  %%    _2 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _2
  %% Anno: #{unit => 1}
  _37 = bs_create_bin `integer`, `[1,little,{segment,1}]`, `45`, _2

  %% Aliased:
  %%    _37
  _102 = succeeded:body _37
  br _102, ^102, ^1

102:
  %% bs_construct_SUITE.erl:119
  %% Argument types:
  %%    _0 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _0
  %% Anno: #{unit => 1}
  _36 = bs_create_bin `integer`, `[1,{segment,1}]`, `777`, _0, `binary`, `[1]`, `<<5:3>>`, `all`

  %% Aliased:
  %%    _36
  _103 = succeeded:body _36
  br _103, ^103, ^1

103:
  %% bs_construct_SUITE.erl:121
  %% Argument types:
  %%    _0 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _0
  %% Anno: #{unit => 1}
  _35 = bs_create_bin `binary`, `[1]`, `<<5:4>>`, `all`, `integer`, `[1,{segment,2}]`, `987`, _0, `binary`, `[1]`, `<<25:7>>`, `all`

  %% Aliased:
  %%    _35
  _104 = succeeded:body _35
  br _104, ^105, ^1

105:
  %% bs_construct_SUITE.erl:131
  %% Argument types:
  %%    _2 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _2
  _32 = bif:'+' _2, `16`

  %% Aliased:
  %%    _32
  _106 = succeeded:body _32
  br _106, ^106, ^1

106:
  %% bs_construct_SUITE.erl:131
  %% Argument types:
  %%    _32 => -2031..32
  %% Unique:
  %%    _32
  %% Anno: #{unit => 1}
  _33 = bs_create_bin `integer`, `[1,{segment,1}]`, `57285702734876389752897684`, _32

  %% Aliased:
  %%    _33
  _107 = succeeded:body _33
  br _107, ^107, ^1

107:
  %% bs_construct_SUITE.erl:134
  _29 = call (`lists`:`duplicate`/2), `17`, `255`

  %% Aliased:
  %%    _29
  _108 = succeeded:body _29
  br _108, ^108, ^1

108:
  %% bs_construct_SUITE.erl:136
  _26 = call (`lists`:`duplicate`/2), `17`, `255`

  %% Aliased:
  %%    _26
  _109 = succeeded:body _26
  br _109, ^109, ^1

109:
  %% bs_construct_SUITE.erl:137
  %% Argument types:
  %%    _2 => -2047..16
  %% Unique:
  %%    _2
  _24 = bif:'-' _2, `8`

  %% bs_construct_SUITE.erl:137
  %% Argument types:
  %%    _24 => -2055..8
  %% Unique:
  %%    _24
  %% Anno: #{unit => 2}
  _25 = bs_create_bin `integer`, `[2,{segment,1}]`, `4`, _24, `binary`, `[1]`, `<<0,5>>`, `all`

  %% Aliased:
  %%    _25
  _111 = succeeded:body _25
  br _111, ^111, ^1

111:
  %% bs_construct_SUITE.erl:139
  %% Argument types:
  %%    _0 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _0
  _22 = bif:'-' _0, `7`

  %% Aliased:
  %%    _22
  _112 = succeeded:body _22
  br _112, ^112, ^1

112:
  %% bs_construct_SUITE.erl:139
  %% Argument types:
  %%    _22 => -2054..9
  %% Unique:
  %%    _22
  %% Anno: #{unit => 1}
  _23 = bs_create_bin `binary`, `[1]`, `<<1:1>>`, `all`, `integer`, `[1,{segment,2}]`, `0`, _22, `binary`, `[1]`, `<<1:1>>`, `all`

  %% Aliased:
  %%    _23
  _113 = succeeded:body _23
  br _113, ^113, ^1

113:
  %% bs_construct_SUITE.erl:145
  %% Argument types:
  %%    
  %% Anno: #{unit => 64}
  _21 = bs_create_bin `float`, `[1,native,{segment,1}]`, `37.98`, `64`

  %% Aliased:
  %%    _21
  _114 = succeeded:body _21
  br _114, ^114, ^1

114:
  %% bs_construct_SUITE.erl:146
  %% Result type:
  %%    nonempty_list(10..253)
  _20 = call (`native_3798`/0)

  %% Unique:
  %%    _20
  _115 = succeeded:body _20
  br _115, ^115, ^1

115:
  %% bs_construct_SUITE.erl:147
  %% Argument types:
  %%    
  %% Anno: #{unit => 128}
  _19 = bs_create_bin `integer`, `[1,native,{segment,1}]`, `32978297842987249827298387697777669766334937`, `128`

  %% Aliased:
  %%    _19
  _116 = succeeded:body _19
  br _116, ^116, ^1

116:
  %% bs_construct_SUITE.erl:148
  %% Result type:
  %%    nonempty_list(1..231)
  _18 = call (`native_bignum`/0)

  %% Unique:
  %%    _18
  _117 = succeeded:body _18
  br _117, ^117, ^1

117:
  %% bs_construct_SUITE.erl:149
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _17 = bs_create_bin `utf16`, `[0,native,{segment,1}]`, `1101`, `undefined`, `utf16`, `[0,native,{segment,2}]`, `1090`, `undefined`, `utf16`, `[0,native,{segment,3}]`, `1086`, `undefined`, `utf16`, `[0,native]`, `32`, `undefined`, `utf16`, `[0,native]`, `1089`, `undefined`, `utf16`, `[0,native]`, `1087`, `undefined`, `utf16`, `[0,native]`, `1091`, `undefined`, `utf16`, `[0,native]`, `1090`, `undefined`, `utf16`, `[0,native]`, `1085`, `undefined`, `utf16`, `[0,native]`, `1080`, `undefined`, `utf16`, `[0,native]`, `1082`, `undefined`

  %% Aliased:
  %%    _17
  _118 = succeeded:body _17
  br _118, ^118, ^1

118:
  %% bs_construct_SUITE.erl:150
  %% Result type:
  %%    nonempty_list(0..77)
  _16 = call (`native_utf16`/0)

  %% Unique:
  %%    _16
  _119 = succeeded:body _16
  br _119, ^119, ^1

119:
  %% bs_construct_SUITE.erl:151
  %% Argument types:
  %%    
  %% Anno: #{unit => 128}
  _15 = bs_create_bin `utf32`, `[0,native,{segment,1}]`, `1074`, `undefined`, `utf32`, `[0,native]`, `1086`, `undefined`, `utf32`, `[0,native]`, `1076`, `undefined`, `utf32`, `[0,native]`, `1072`, `undefined`

  %% Aliased:
  %%    _15
  _120 = succeeded:body _15
  br _120, ^120, ^1

120:
  %% bs_construct_SUITE.erl:152
  %% Result type:
  %%    nonempty_list(0..62)
  _14 = call (`native_utf32`/0)

  %% Unique:
  %%    _14
  _121 = succeeded:body _14
  br _121, ^121, ^1

121:
  %% bs_construct_SUITE.erl:154
  %% Argument types:
  %%    _3 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _3
  %% Anno: #{first_fragment_dies => false,unit => 8}
  _13 = bs_create_bin `append`, `[8,{segment,1}]`, _3, `all`

  %% Aliased:
  %%    _13
  _122 = succeeded:body _13
  br _122, ^122, ^1

122:
  %% bs_construct_SUITE.erl:156
  %% Argument types:
  %%    _3 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _3
  %% Anno: #{unit => 8}
  _12 = bs_create_bin `binary`, `[1]`, `<<"O">>`, `all`, `binary`, `[8,{segment,2}]`, _3, `all`

  %% Aliased:
  %%    _12
  _123 = succeeded:body _12
  br _123, ^123, ^1

123:
  %% bs_construct_SUITE.erl:158
  %% Argument types:
  %%    _0 => -2047..16
  %%    _3 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _0
  %% Anno: #{unit => 1}
  _11 = bs_create_bin `integer`, `[1,{segment,1}]`, `3479`, _0, `binary`, `[8,{segment,2}]`, _3, `all`, `binary`, `[1]`, `<<7:3>>`, `all`

  %% Aliased:
  %%    _11
  _124 = succeeded:body _11
  br _124, ^124, ^1

124:
  %% bs_construct_SUITE.erl:160
  %% Argument types:
  %%    _0 => -2047..16
  %%    _3 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _0
  %% Anno: #{unit => 1}
  _10 = bs_create_bin `integer`, `[1,{segment,1}]`, `3479`, _0, `binary`, `[8,{segment,2}]`, _3, `all`, `binary`, `[1]`, `<<7:3>>`, `all`

  %% Aliased:
  %%    _10
  _125 = succeeded:body _10
  br _125, ^125, ^1

125:
  %% bs_construct_SUITE.erl:162
  %% Argument types:
  %%    _0 => -2047..16
  %%    _3 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _0
  %% Anno: #{unit => 1}
  _9 = bs_create_bin `binary`, `[1]`, `<<101,3>>`, `all`, `integer`, `[1,{segment,2}]`, `3479`, _0, `binary`, `[8,{segment,3}]`, _3, `all`, `binary`, `[1]`, `<<7:3>>`, `all`

  %% Aliased:
  %%    _9
  _126 = succeeded:body _9
  br _126, ^126, ^1

126:
  %% bs_construct_SUITE.erl:164
  %% Argument types:
  %%    _0 => -2047..16
  %%    _3 => 'not_a_number' | -2047..16 | bitstring(1)
  %%    _3 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _0
  %% Anno: #{unit => 1}
  _8 = bs_create_bin `binary`, `[1]`, `<<101,3>>`, `all`, `integer`, `[1,{segment,2}]`, `3479`, _0, `binary`, `[8,{segment,3}]`, _3, `all`, `binary`, `[1]`, `<<7:3>>`, `all`, `binary`, `[8,{segment,5}]`, _3, `all`

  %% Aliased:
  %%    _8
  _127 = succeeded:body _8
  br _127, ^127, ^1

127:
  %% bs_construct_SUITE.erl:168
  %% Argument types:
  %%    _0 => -2047..16
  %% Unique:
  %%    _0
  %% Anno: #{unit => 8}
  _7 = bs_create_bin `integer`, `[8,{segment,1}]`, `0`, _0, `binary`, `[1]`, `<<4>>`, `all`

  %% Aliased:
  %%    _7
  _128 = succeeded:body _7
  br _128, ^128, ^1

128:
  %% bs_construct_SUITE.erl:182
  %% Argument types:
  %%    _2 => -2047..16
  %% Unique:
  %%    _2
  _4 = bif:'-' _2, `12`

  %% bs_construct_SUITE.erl:182
  %% Argument types:
  %%    _4 => -2059..4
  %% Unique:
  %%    _4
  %% Anno: #{unit => 1}
  _5 = bs_create_bin `integer`, `[8,{segment,1}]`, `37558955`, _4, `binary`, `[1]`, `<<1:1>>`, `all`

  %% Aliased:
  %%    _5
  _130 = succeeded:body _5
  br _130, ^130, ^1

130:
  %% Argument types:
  %%    _5 => bitstring(1)
  %% Aliased:
  %%    _5
  _44 = put_tuple _5, `"<< 37558955 : ( I_16 - 12 ) / unit : 8 , 1 : 1 >>"`, `[2,61,26,171,<<1:1>>]`

  %% Argument types:
  %%    _44 => {bitstring(1), nonempty_list(32..117), nonempty_list(2..171 | bitstring(1))}
  %% Unique:
  %%    _44
  _45 = put_list _44, `[]`

  %% Argument types:
  %%    _45 => nonempty_list({bitstring(1), nonempty_list(32..117), nonempty_list(2..171 | bitstring(1))})
  %% Unique:
  %%    _45
  _46 = put_list `{<<"abc">>,"<< ( << \"abc\" , 7 : 3 >> ) : 3 / binary >>","abc"}`, _45

  %% Argument types:
  %%    _46 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(2..171 | bitstring(1))})
  %% Unique:
  %%    _46
  _47 = put_list `{<<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,255,255,255,255,255,255,255,255,255,
    255,255,255,255,255,255,255>>,
  "<< 40833884030512615615604952891812185374719 : 264 >>",
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,255,255,255,255,255,255,255,255,255,
   255,255,255,255,255,255,255]}`, _46

  %% Argument types:
  %%    _47 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _47
  _48 = put_list `{<<0,7>>,"<< 0 : 13 / little , 7 : 3 >>",[0,7]}`, _47

  %% Argument types:
  %%    _48 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _48
  _49 = put_list `{<<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>>,
  "<< 0 : 128 >>",
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}`, _48

  %% Argument types:
  %%    _7 => bitstring(8)
  %% Aliased:
  %%    _7
  _50 = put_tuple _7, `"<< 0 : I_13 / unit : 8 , 1 : 6 , 0 : 2 >>"`, `[0,0,0,0,0,0,0,0,0,0,0,0,0,4]`

  %% Argument types:
  %%    _50 => {bitstring(8), nonempty_list(32..117), nonempty_list(0..4)}
  %%    _49 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _49, 
  %%    _50
  _51 = put_list _50, _49

  %% Argument types:
  %%    _8 => bitstring(1)
  %% Aliased:
  %%    _8
  _52 = put_tuple _8, `"<< 869 : 16 / little , 3479 : I_13 , Bin / binary , 7 : 1 / unit : 3 , Bin / binary >>"`, `[101,3,108,189,42,214,31,165,90,195]`

  %% Argument types:
  %%    _52 => {bitstring(1), nonempty_list(32..121), nonempty_list(3..214)}
  %%    _51 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _51, 
  %%    _52
  _53 = put_list _52, _51

  %% Argument types:
  %%    _9 => bitstring(1)
  %% Aliased:
  %%    _9
  _54 = put_tuple _9, `"<< 869 : 16 / little , 3479 : I_13 , Bin / binary , 7 : 1 / unit : 3 >>"`, `[101,3,108,189,42,214,31]`

  %% Argument types:
  %%    _54 => {bitstring(1), nonempty_list(32..121), nonempty_list(3..214)}
  %%    _53 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _53, 
  %%    _54
  _55 = put_list _54, _53

  %% Argument types:
  %%    _10 => bitstring(1)
  %% Aliased:
  %%    _10
  _56 = put_tuple _10, `"<< 3479 : I_13 , Bin / binary , 7 : 1 / unit : 3 >>"`, `[108,189,42,214,31]`

  %% Argument types:
  %%    _56 => {bitstring(1), nonempty_list(32..121), nonempty_list(31..214)}
  %%    _55 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _55, 
  %%    _56
  _57 = put_list _56, _55

  %% Argument types:
  %%    _11 => bitstring(1)
  %% Aliased:
  %%    _11
  _58 = put_tuple _11, `"<< 3479 : I_13 , Bin / binary , 7 : 3 >>"`, `[108,189,42,214,31]`

  %% Argument types:
  %%    _58 => {bitstring(1), nonempty_list(32..121), nonempty_list(31..214)}
  %%    _57 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _57, 
  %%    _58
  _59 = put_list _58, _57

  %% Argument types:
  %%    _12 => bitstring(8)
  %% Aliased:
  %%    _12
  _60 = put_tuple _12, `"<< 79 , Bin / binary >>"`, `"O¥ZÃ"`

  %% Argument types:
  %%    _60 => {bitstring(8), nonempty_list(32..121), nonempty_list(79..195)}
  %%    _59 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _59, 
  %%    _60
  _61 = put_list _60, _59

  %% Argument types:
  %%    _13 => bitstring(8)
  %% Aliased:
  %%    _13
  _62 = put_tuple _13, `"<< Bin / binary >>"`, `"¥ZÃ"`

  %% Argument types:
  %%    _62 => {bitstring(8), nonempty_list(32..121), nonempty_list(90..195)}
  %%    _61 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _61, 
  %%    _62
  _63 = put_list _62, _61

  %% Argument types:
  %%    _15 => bitstring(128)
  %%    _14 => nonempty_list(0..62)
  %% Aliased:
  %%    _15
  %% Unique:
  %%    _14
  _64 = put_tuple _15, `[60,60,32,36,1074,32,47,32,110,97,116,105,118,101,32,45,32,117,116,102,51,50,
  32,44,32,34,1086,1076,1072,34,32,47,32,110,97,116,105,118,101,32,45,32,117,
  116,102,51,50,32,62,62]`, _14

  %% Argument types:
  %%    _64 => {bitstring(128), nonempty_list(32..1086), nonempty_list(0..62)}
  %%    _63 => nonempty_list({bitstring(1), nonempty_list(32..121), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _63, 
  %%    _64
  _65 = put_list _64, _63

  %% Argument types:
  %%    _17 => bitstring(16)
  %%    _16 => nonempty_list(0..77)
  %% Aliased:
  %%    _17
  %% Unique:
  %%    _16
  _66 = put_tuple _17, `[60,60,32,36,1101,32,47,32,110,97,116,105,118,101,32,45,32,117,116,102,49,54,
  32,44,32,36,1090,32,47,32,110,97,116,105,118,101,32,45,32,117,116,102,49,54,
  32,44,32,36,1086,32,47,32,110,97,116,105,118,101,32,45,32,117,116,102,49,54,
  32,44,32,34,32,1089,1087,1091,1090,1085,1080,1082,34,32,47,32,110,97,116,
  105,118,101,32,45,32,117,116,102,49,54,32,62,62]`, _16

  %% Argument types:
  %%    _66 => {bitstring(16), nonempty_list(32..1101), nonempty_list(0..77)}
  %%    _65 => nonempty_list({bitstring(1), nonempty_list(32..1086), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _65, 
  %%    _66
  _67 = put_list _66, _65

  %% Argument types:
  %%    _19 => bitstring(128)
  %%    _18 => nonempty_list(1..231)
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _18
  _68 = put_tuple _19, `"<< 32978297842987249827298387697777669766334937 : 128 / native - integer >>"`, _18

  %% Argument types:
  %%    _68 => {bitstring(128), nonempty_list(32..118), nonempty_list(1..231)}
  %%    _67 => nonempty_list({bitstring(1), nonempty_list(32..1101), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _67, 
  %%    _68
  _69 = put_list _68, _67

  %% Argument types:
  %%    _21 => bitstring(64)
  %%    _20 => nonempty_list(10..253)
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _20
  _70 = put_tuple _21, `"<< 37.98 : 64 / native - float >>"`, _20

  %% Argument types:
  %%    _70 => {bitstring(64), nonempty_list(32..118), nonempty_list(10..253)}
  %%    _69 => nonempty_list({bitstring(1), nonempty_list(32..1101), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _69, 
  %%    _70
  _71 = put_list _70, _69

  %% Argument types:
  %%    _71 => nonempty_list({bitstring(1), nonempty_list(32..1101), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _71
  _72 = put_list `{<<46,110,142,77,45,204,233>>,
  "<< 1 : 3 , \"string\" , 9 : 5 >>",
  [46,110,142,77,45,204,233]}`, _71

  %% Argument types:
  %%    _23 => bitstring(1)
  %% Aliased:
  %%    _23
  _73 = put_tuple _23, `"<< 1 : 1 , 0 : ( I_13 - 7 ) , 1 : 1 >>"`, `[129]`

  %% Argument types:
  %%    _73 => {bitstring(1), nonempty_list(32..95), nonempty_list(129)}
  %%    _72 => nonempty_list({bitstring(1), nonempty_list(32..1101), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _72, 
  %%    _73
  _74 = put_list _73, _72

  %% Argument types:
  %%    _25 => bitstring(2)
  %% Aliased:
  %%    _25
  _75 = put_tuple _25, `"<< 4 : ( I_16 - 8 ) / unit : 2 , 5 : 2 / unit : 8 >>"`, `[0,4,0,5]`

  %% Argument types:
  %%    _75 => {bitstring(2), nonempty_list(32..117), nonempty_list(0..5)}
  %%    _74 => nonempty_list({bitstring(1), nonempty_list(32..1101), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _74, 
  %%    _75
  _76 = put_list _75, _74

  %% Argument types:
  %%    _26 => list(255)
  %% Aliased:
  %%    _26
  _77 = put_tuple `<<"ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ">>`, `"<< - 1 : 8 / unit : 17 >>"`, _26

  %% Argument types:
  %%    _77 => {bitstring(8), nonempty_list(32..117), list(255)}
  %%    _76 => nonempty_list({bitstring(1), nonempty_list(32..1101), nonempty_list(0..255 | bitstring(1))})
  %% Unique:
  %%    _76, 
  %%    _77
  _78 = put_list _77, _76

  %% Argument types:
  %%    _29 => list(255)
  %% Aliased:
  %%    _29
  _79 = put_tuple `<<"ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ">>`, `"<< - 1 : 17 / unit : 8 >>"`, _29

  %% Argument types:
  %%    _79 => {bitstring(8), nonempty_list(32..117), list(255)}
  %%    _78 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _78, 
  %%    _79
  _80 = put_list _79, _78

  %% Argument types:
  %%    _33 => bitstring(1)
  %% Aliased:
  %%    _33
  _81 = put_tuple _33, `"<< 57285702734876389752897684 : ( I_16 + 16 ) >>"`, `[138,99,0,148]`

  %% Argument types:
  %%    _81 => {bitstring(1), nonempty_list(32..95), nonempty_list(0..148)}
  %%    _80 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _80, 
  %%    _81
  _82 = put_list _81, _80

  %% Argument types:
  %%    _82 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _82
  _84 = put_list `{<<138,99,0,147>>,"<< I_big1 : 32 >>",[138,99,0,147]}`, _82

  %% Argument types:
  %%    _84 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _84
  _85 = put_list `{<<0,0,128,63>>,"<< 1.0 : 32 / little - float >>",[0,0,128,63]}`, _84

  %% Argument types:
  %%    _85 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _85
  _86 = put_list `{<<62,0,0,0>>,"<< 0.125 : 32 / float >>",[62,0,0,0]}`, _85

  %% Argument types:
  %%    _86 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _86
  _87 = put_list `{<<0,0,0,0>>,"<< 0.0 : 32 / float >>",[0,0,0,0]}`, _86

  %% Argument types:
  %%    _35 => bitstring(1)
  %% Aliased:
  %%    _35
  _88 = put_tuple _35, `"<< 5 : 4 , 987 : I_13 , 537 : 7 >>"`, `[81,237,153]`

  %% Argument types:
  %%    _88 => {bitstring(1), nonempty_list(32..95), nonempty_list(81..237)}
  %%    _87 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _87, 
  %%    _88
  _89 = put_list _88, _87

  %% Argument types:
  %%    _36 => bitstring(1)
  %% Aliased:
  %%    _36
  _90 = put_tuple _36, `"<< 777 : I_13 , 13 : 3 >>"`, `[24,77]`

  %% Argument types:
  %%    _90 => {bitstring(1), nonempty_list(32..95), nonempty_list(24..77)}
  %%    _89 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _89, 
  %%    _90
  _91 = put_list _90, _89

  %% Argument types:
  %%    _91 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _91
  _92 = put_list `{<<9,3>>,"<< 777 : 16 / little >>",[9,3]}`, _91

  %% Argument types:
  %%    _37 => bitstring(1)
  %% Aliased:
  %%    _37
  _93 = put_tuple _37, `"<< 45 : I_16 / little >>"`, `[45,0]`

  %% Argument types:
  %%    _93 => {bitstring(1), nonempty_list(32..116), nonempty_list(0..45)}
  %%    _92 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _92, 
  %%    _93
  _94 = put_list _93, _92

  %% Argument types:
  %%    _94 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _94
  _95 = put_list `{<<"G">>,"<< 4 : 4 , 7 : 4 >>","G"}`, _94

  %% Argument types:
  %%    _95 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _95
  _96 = put_list `{<<"Õ">>,"<< - 43 >>","Õ"}`, _95

  %% Argument types:
  %%    _43 => bitstring(256)
  %% Aliased:
  %%    _43
  _97 = put_tuple _43, `"<< I_13 : 0 >>"`, `[]`

  %% Argument types:
  %%    _97 => {bitstring(256), nonempty_list(32..95), nil()}
  %%    _96 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _96, 
  %%    _97
  _98 = put_list _97, _96
  %% Result type:
  %%    nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _98
  ret _98

1:
  _99 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _99
}

%% bs_construct_SUITE.erl:186
%% Counter = 22
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`native_3798`() {
0:
  %% bs_construct_SUITE.erl:187
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _2 = bs_create_bin `integer`, `[1,native,{segment,1}]`, `1`, `16`

  %% Aliased:
  %%    _2
  _9 = succeeded:body _2
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    _2 => bitstring(16)
  %% Aliased:
  %%    _2
  _3 = bs_start_match `new`, _2
  _20 = bs_ensure _3, `16`, `1`
  _21 = succeeded:guard _20
  br _21, ^19, ^11

19:
  %% bs_construct_SUITE.erl:188
  %% Argument types:
  %%    _20 => bs_context(16)
  %% Aliased:
  %%    _3
  %% Anno: #{ensured => true}
  _4 = bs_match `integer`, _20, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _4
  _12 = succeeded:guard _4
  br _12, ^12, ^11

12:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4
  %% Argument types:
  %%    
  switch _5, ^11, [
    { `1`, ^15 },
    { `256`, ^16 }
  ]

16:
  %% Aliased:
  %%    _4
  _14 = bs_test_tail _4, `0`
  br _14, ^14, ^11

14:
  %% Result type:
  %%    nonempty_list(10..253)
  ret `"=\n×£pýB@"`

15:
  %% Aliased:
  %%    _4
  _13 = bs_test_tail _4, `0`
  br _13, ^13, ^11

13:
  %% Result type:
  %%    nonempty_list(10..253)
  ret `"@Býp£×\n="`

11:
  %% bs_construct_SUITE.erl:187
  %% Aliased:
  %%    _2
  _6 = match_fail `case_clause`, _2

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% bs_construct_SUITE.erl:192
%% Counter = 22
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`native_bignum`() {
0:
  %% bs_construct_SUITE.erl:193
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _2 = bs_create_bin `integer`, `[1,native,{segment,1}]`, `1`, `16`

  %% Aliased:
  %%    _2
  _9 = succeeded:body _2
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    _2 => bitstring(16)
  %% Aliased:
  %%    _2
  _3 = bs_start_match `new`, _2
  _20 = bs_ensure _3, `16`, `1`
  _21 = succeeded:guard _20
  br _21, ^19, ^11

19:
  %% bs_construct_SUITE.erl:194
  %% Argument types:
  %%    _20 => bs_context(16)
  %% Aliased:
  %%    _3
  %% Anno: #{ensured => true}
  _4 = bs_match `integer`, _20, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _4
  _12 = succeeded:guard _4
  br _12, ^12, ^11

12:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4
  %% Argument types:
  %%    
  switch _5, ^11, [
    { `1`, ^15 },
    { `256`, ^16 }
  ]

16:
  %% Aliased:
  %%    _4
  _14 = bs_test_tail _4, `0`
  br _14, ^14, ^11

14:
  %% Result type:
  %%    nonempty_list(1..231)
  ret `[217,73,11,176,128,109,231,39,101,170,213,1,177,18,205,129]`

15:
  %% Aliased:
  %%    _4
  _13 = bs_test_tail _4, `0`
  br _13, ^13, ^11

13:
  %% Result type:
  %%    nonempty_list(1..231)
  ret `[129,205,18,177,1,213,170,101,39,231,109,128,176,11,73,217]`

11:
  %% bs_construct_SUITE.erl:193
  %% Aliased:
  %%    _2
  _6 = match_fail `case_clause`, _2

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% bs_construct_SUITE.erl:198
%% Counter = 22
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`native_utf16`() {
0:
  %% bs_construct_SUITE.erl:199
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _2 = bs_create_bin `integer`, `[1,native,{segment,1}]`, `1`, `16`

  %% Aliased:
  %%    _2
  _9 = succeeded:body _2
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    _2 => bitstring(16)
  %% Aliased:
  %%    _2
  _3 = bs_start_match `new`, _2
  _20 = bs_ensure _3, `16`, `1`
  _21 = succeeded:guard _20
  br _21, ^19, ^11

19:
  %% bs_construct_SUITE.erl:200
  %% Argument types:
  %%    _20 => bs_context(16)
  %% Aliased:
  %%    _3
  %% Anno: #{ensured => true}
  _4 = bs_match `integer`, _20, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _4
  _12 = succeeded:guard _4
  br _12, ^12, ^11

12:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4
  %% Argument types:
  %%    
  switch _5, ^11, [
    { `1`, ^15 },
    { `256`, ^16 }
  ]

16:
  %% Aliased:
  %%    _4
  _14 = bs_test_tail _4, `0`
  br _14, ^14, ^11

14:
  %% Result type:
  %%    nonempty_list(0..77)
  ret `[77,4,66,4,62,4,32,0,65,4,63,4,67,4,66,4,61,4,56,4,58,4]`

15:
  %% Aliased:
  %%    _4
  _13 = bs_test_tail _4, `0`
  br _13, ^13, ^11

13:
  %% Result type:
  %%    nonempty_list(0..77)
  ret `[4,77,4,66,4,62,0,32,4,65,4,63,4,67,4,66,4,61,4,56,4,58]`

11:
  %% bs_construct_SUITE.erl:199
  %% Aliased:
  %%    _2
  _6 = match_fail `case_clause`, _2

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% bs_construct_SUITE.erl:204
%% Counter = 22
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`native_utf32`() {
0:
  %% bs_construct_SUITE.erl:205
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _2 = bs_create_bin `integer`, `[1,native,{segment,1}]`, `1`, `16`

  %% Aliased:
  %%    _2
  _9 = succeeded:body _2
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    _2 => bitstring(16)
  %% Aliased:
  %%    _2
  _3 = bs_start_match `new`, _2
  _20 = bs_ensure _3, `16`, `1`
  _21 = succeeded:guard _20
  br _21, ^19, ^11

19:
  %% bs_construct_SUITE.erl:206
  %% Argument types:
  %%    _20 => bs_context(16)
  %% Aliased:
  %%    _3
  %% Anno: #{ensured => true}
  _4 = bs_match `integer`, _20, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _4
  _12 = succeeded:guard _4
  br _12, ^12, ^11

12:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4
  %% Argument types:
  %%    
  switch _5, ^11, [
    { `1`, ^15 },
    { `256`, ^16 }
  ]

16:
  %% Aliased:
  %%    _4
  _14 = bs_test_tail _4, `0`
  br _14, ^14, ^11

14:
  %% Result type:
  %%    nonempty_list(0..62)
  ret `[50,4,0,0,62,4,0,0,52,4,0,0,48,4,0,0]`

15:
  %% Aliased:
  %%    _4
  _13 = bs_test_tail _4, `0`
  br _13, ^13, ^11

13:
  %% Result type:
  %%    nonempty_list(0..62)
  ret `[0,0,4,50,0,0,4,62,0,0,4,52,0,0,4,48]`

11:
  %% bs_construct_SUITE.erl:205
  %% Aliased:
  %%    _2
  _6 = match_fail `case_clause`, _2

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% bs_construct_SUITE.erl:210
%% Counter = 61
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(32..1101)
%%    _1 =>
%%     nonempty_list({''Bin'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_13'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_16'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_big1'', 57285702734876389752897683})
function `bs_construct_SUITE`:`evaluate`(_0, _1) {
0:
  %% bs_construct_SUITE.erl:212
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`'++'`/2), _0, `" . "`

  %% bs_construct_SUITE.erl:212
  %% Aliased:
  %%    _2
  _10 = call (`erl_scan`:`string`/1), _2

  %% Aliased:
  %%    _10
  _29 = succeeded:body _10
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _57 = is_tagged_tuple _10, `3`, `ok`
  br _57, ^54, ^31

54:
  %% Argument types:
  %%    _10 => {'ok', any(), any()}
  %% Aliased:
  %%    _10
  _12 = get_tuple_element _10, `1`

  %% bs_construct_SUITE.erl:213
  %% Aliased:
  %%    _12
  _14 = call (`erl_parse`:`parse_exprs`/1), _12

  %% Aliased:
  %%    _14
  _32 = succeeded:body _14
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _50 = is_tagged_tuple _14, `2`, `ok`
  br _50, ^47, ^34

47:
  %% Argument types:
  %%    _14 => {'ok', any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `1`

  %% Aliased:
  %%    _15
  _46 = is_nonempty_list _15
  br _46, ^46, ^34

46:
  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _18 = get_hd _15

  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _17 = get_tl _15

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _45 = bif:'=:=' _17, `[]`
  br _45, ^45, ^34

45:
  %% bs_construct_SUITE.erl:214
  %% Aliased:
  %%    _1, 
  %%    _18
  _19 = call (`erl_eval`:`expr`/2), _18, _1

  %% Aliased:
  %%    _19
  _35 = succeeded:body _19
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _41 = is_tagged_tuple _19, `3`, `value`
  br _41, ^38, ^37

38:
  %% Argument types:
  %%    _19 => {'value', any(), any()}
  %% Aliased:
  %%    _19
  _21 = get_tuple_element _19, `1`
  %% Aliased:
  %%    _21
  ret _21

37:
  %% bs_construct_SUITE.erl:214
  %% Aliased:
  %%    _19
  _23 = match_fail `case_clause`, _19

  %% Unique:
  %%    _23
  _44 = succeeded:body _23
  br ^1

34:
  %% bs_construct_SUITE.erl:213
  %% Aliased:
  %%    _14
  _24 = match_fail `badmatch`, _14

  %% Unique:
  %%    _24
  _53 = succeeded:body _24
  br ^1

31:
  %% bs_construct_SUITE.erl:211
  %% Aliased:
  %%    _10
  _25 = match_fail `badmatch`, _10

  %% Unique:
  %%    _25
  _60 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% bs_construct_SUITE.erl:219
%% Counter = 57
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
%%    _1 =>
%%     nonempty_list({''Bin'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_13'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_16'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_big1'', 57285702734876389752897683})
function `bs_construct_SUITE`:`eval_list`(_0, _1) {
0:
  %% Unique:
  %%    _0
  _53 = is_nonempty_list _0
  br _53, ^53, ^54

53:
  %% Argument types:
  %%    _0 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _0
  _8 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _0
  _7 = get_tl _0

  %% Argument types:
  %%    _8 => {bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))}
  %% Unique:
  %%    _8
  _10 = get_tuple_element _8, `1`
  _31 = new_try_tag `'catch'`
  br _31, ^29, ^30

29:
  %% bs_construct_SUITE.erl:222
  %% Aliased:
  %%    _1, 
  %%    _10
  _19 = call (`evaluate`/2), _10, _1

  %% Aliased:
  %%    _19
  _33 = succeeded:body _19
  br _33, ^33, ^30

33:
  br ^28

30:
  %% Unique:
  %%    _31
  _36 = landingpad `'catch'`, _31

  %% Aliased:
  %%    _36
  _34 = extract _36, `0`
  br ^28

28:
  _37 = phi { _34, ^30 }, { _19, ^33 }

  %% Aliased:
  %%    _37
  %% Unique:
  %%    _31
  _2 = catch_end _31, _37

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _45 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _45, ^42, ^39

42:
  %% Argument types:
  %%    _2 => {''EXIT'', any()}
  %% Aliased:
  %%    _2
  _13 = get_tuple_element _2, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _15 = put_list _13, `[]`

  %% Argument types:
  %%    _1 => nonempty_list({''Bin'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_13'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_16'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_big1'', 57285702734876389752897683})
  %%    _15 => nonempty_list(any())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _15
  _16 = put_list _1, _15

  %% Argument types:
  %%    _10 => nonempty_list(32..1101)
  %%    _16 => nonempty_list(any())
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _16
  _17 = put_list _10, _16

  %% bs_construct_SUITE.erl:224
  %% Unique:
  %%    _17
  _20 = call (`io`:`format`/2), `"Evaluation error: ~p, ~p, ~p~n"`, _17

  %% Aliased:
  %%    _20
  _40 = succeeded:body _20
  br _40, ^40, ^1

40:
  %% bs_construct_SUITE.erl:225
  %% Aliased:
  %%    _13
  _21 = call (`erlang`:`exit`/1), _13

  %% Unique:
  %%    _21
  _41 = succeeded:body _21
  br ^1

39:
  %% bs_construct_SUITE.erl:227
  %% Result type:
  %%    list({bitstring(1), any(), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _7
  _3 = call (`eval_list`/2), _7, _1

  %% Unique:
  %%    _3
  _48 = succeeded:body _3
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    _8 => {bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))}
  %% Unique:
  %%    _8
  _11 = get_tuple_element _8, `0`

  %% Argument types:
  %%    _8 => {bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))}
  %% Unique:
  %%    _8
  _9 = get_tuple_element _8, `2`

  %% Argument types:
  %%    _11 => bitstring(1)
  %%    _10 => nonempty_list(32..1101)
  %%    _9 => list(0..255 | bitstring(1))
  %% Aliased:
  %%    _2, 
  %%    _10, 
  %%    _11
  %% Unique:
  %%    _9
  _12 = put_tuple _11, _2, _10, _9

  %% Argument types:
  %%    _12 => {bitstring(1), any(), nonempty_list(32..1101), list(0..255 | bitstring(1))}
  %%    _3 => list({bitstring(1), any(), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _3, 
  %%    _12
  _22 = put_list _12, _3
  %% Result type:
  %%    nonempty_list({bitstring(1), any(), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Unique:
  %%    _22
  ret _22

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24

54:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% bs_construct_SUITE.erl:230
%% Counter = 111
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`one_test`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _100 = bif:is_tuple _0
  br _100, ^100, ^52

100:
  %% Argument types:
  %%    _0 => {...}
  %% Aliased:
  %%    _0
  _101 = bif:tuple_size _0

  %% Argument types:
  %%    _101 => 0..16777215
  %% Unique:
  %%    _101
  _102 = bif:'=:=' _101, `4`
  br _102, ^99, ^52

99:
  %% Argument types:
  %%    _0 => {any(), any(), any(), any()}
  %% Aliased:
  %%    _0
  _22 = get_tuple_element _0, `0`

  %% Argument types:
  %%    _0 => {any(), any(), any(), any()}
  %% Aliased:
  %%    _0
  _21 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _0 => {any(), any(), any(), any()}
  %% Aliased:
  %%    _0
  _20 = get_tuple_element _0, `2`

  %% Argument types:
  %%    _0 => {any(), any(), any(), any()}
  %% Aliased:
  %%    _0
  _19 = get_tuple_element _0, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _54 = bif:is_list _19
  br _54, ^54, ^53

54:
  %% Argument types:
  %%    _19 => maybe_improper_list(any(), any())
  %% Aliased:
  %%    _19
  _23 = put_list _19, `[]`

  %% Argument types:
  %%    _23 => nonempty_list(maybe_improper_list(any(), any()))
  %% Aliased:
  %%    _20
  %% Unique:
  %%    _23
  _24 = put_list _20, _23

  %% bs_construct_SUITE.erl:231
  %% Unique:
  %%    _24
  _38 = call (`io`:`format`/2), `"  ~ts, ~p~n"`, _24

  %% Aliased:
  %%    _38
  _55 = succeeded:body _38
  br _55, ^55, ^1

55:
  %% bs_construct_SUITE.erl:232
  %% Aliased:
  %%    _19
  Bin = call (`erlang`:`list_to_bitstring`/1), _19

  %% Aliased:
  %%    Bin
  _56 = succeeded:body Bin
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    Bin => bitstring(1)
  %% Aliased:
  %%    _22, 
  %%    Bin
  _59 = bif:'=:=' _22, Bin
  br _59, ^57, ^58

58:
  %% bs_construct_SUITE.erl:238
  %% Aliased:
  %%    _22
  _2 = call (`erlang`:`bitstring_to_list`/1), _22

  %% Aliased:
  %%    _2
  _60 = succeeded:body _2
  br _60, ^60, ^1

60:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _25 = put_list _2, `[]`

  %% Argument types:
  %%    _19 => maybe_improper_list(any(), any())
  %%    _25 => nonempty_list(any())
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _25
  _26 = put_list _19, _25

  %% Argument types:
  %%    _26 => nonempty_list(any())
  %% Aliased:
  %%    _20
  %% Unique:
  %%    _26
  _27 = put_list _20, _26

  %% bs_construct_SUITE.erl:237
  %% Unique:
  %%    _27
  _39 = call (`io`:`format`/2), `"ERROR: Compiled: ~p.~nExpected ~p.~nGot ~p.~n"`, _27

  %% Aliased:
  %%    _39
  _61 = succeeded:body _39
  br _61, ^61, ^1

61:
  %% bs_construct_SUITE.erl:239
  _40 = call (`ct`:`fail`/1), `comp`

  %% Aliased:
  %%    _40
  _62 = succeeded:body _40
  br _62, ^57, ^1

57:
  %% Argument types:
  %%    Bin => bitstring(1)
  %% Aliased:
  %%    _21, 
  %%    Bin
  _65 = bif:'=:=' _21, Bin
  br _65, ^65, ^64

65:
  %% Result type:
  %%    'ok'
  ret `ok`

64:
  %% bs_construct_SUITE.erl:246
  %% Aliased:
  %%    _21
  _3 = call (`erlang`:`bitstring_to_list`/1), _21

  %% Aliased:
  %%    _3
  _66 = succeeded:body _3
  br _66, ^66, ^1

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _28 = put_list _3, `[]`

  %% Argument types:
  %%    _19 => maybe_improper_list(any(), any())
  %%    _28 => nonempty_list(any())
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _28
  _29 = put_list _19, _28

  %% Argument types:
  %%    _29 => nonempty_list(any())
  %% Aliased:
  %%    _20
  %% Unique:
  %%    _29
  _30 = put_list _20, _29

  %% bs_construct_SUITE.erl:245
  %% Unique:
  %%    _30
  _41 = call (`io`:`format`/2), `"ERROR: Interpreted: ~p.~nExpected ~p.~nGot ~p.~n"`, _30

  %% Aliased:
  %%    _41
  _67 = succeeded:body _41
  br _67, ^67, ^1

67:
  %% bs_construct_SUITE.erl:247
  _42 = call (`ct`:`fail`/1), `comp`

  %% Aliased:
  %%    _42
  _68 = succeeded:body _42
  br _68, ^68, ^1

68:
  %% Aliased:
  %%    _42
  ret _42

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _31 = put_list _22, `[]`

  %% Argument types:
  %%    _31 => nonempty_list(any())
  %% Aliased:
  %%    _20
  %% Unique:
  %%    _31
  _32 = put_list _20, _31

  %% bs_construct_SUITE.erl:250
  %% Unique:
  %%    _32
  _43 = call (`io`:`format`/2), `"  ~ts ~p~n"`, _32

  %% Aliased:
  %%    _43
  _69 = succeeded:body _43
  br _69, ^69, ^1

69:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21, 
  %%    _22
  _72 = bif:'==' _22, _21
  br _72, ^72, ^71

72:
  %% Result type:
  %%    'ok'
  ret `ok`

71:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _77 = bif:'=:=' _19, `unknown`
  br _77, ^76, ^74

76:
  %% bs_construct_SUITE.erl:257
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _44 = bif:size _22

  %% Unique:
  %%    _44
  _75 = succeeded:body _44
  br _75, ^75, ^1

75:
  br ^73

74:
  br ^73

73:
  _5 = phi { _19, ^74 }, { _44, ^75 }

  %% bs_construct_SUITE.erl:261
  %% Aliased:
  %%    _22
  _8 = call (`erlang`:`bitstring_to_list`/1), _22

  %% Aliased:
  %%    _8
  _78 = succeeded:body _8
  br _78, ^78, ^1

78:
  %% bs_construct_SUITE.erl:262
  %% Aliased:
  %%    _21
  _7 = call (`erlang`:`bitstring_to_list`/1), _21

  %% Aliased:
  %%    _7
  _79 = succeeded:body _7
  br _79, ^79, ^1

79:
  %% bs_construct_SUITE.erl:261
  %% Result type:
  %%    atom() | maybe_improper_list(any(), any()) | number(0, '+inf') | {...} | other()
  %% Aliased:
  %%    _5, 
  %%    _7, 
  %%    _8
  _33 = call (`equal_lists`/3), _8, _7, _5

  %% Aliased:
  %%    _33
  _80 = succeeded:body _33
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    _33 => atom() | maybe_improper_list(any(), any()) | number(0, '+inf') | {...} | other()
  %% Aliased:
  %%    _33
  _89 = bif:is_atom _33
  br _89, ^89, ^83

89:
  %% Argument types:
  %%    _33 => atom()
  %% Unique:
  %%    _33
  _90 = bif:'=:=' _33, `false`
  br _90, ^88, ^82

88:
  %% bs_construct_SUITE.erl:267
  %% Aliased:
  %%    _22
  _10 = call (`erlang`:`bitstring_to_list`/1), _22

  %% Aliased:
  %%    _10
  _84 = succeeded:body _10
  br _84, ^84, ^1

84:
  %% bs_construct_SUITE.erl:267
  %% Aliased:
  %%    _21
  _9 = call (`erlang`:`bitstring_to_list`/1), _21

  %% Aliased:
  %%    _9
  _85 = succeeded:body _9
  br _85, ^85, ^1

85:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _36 = put_list _9, `[]`

  %% Argument types:
  %%    _36 => nonempty_list(any())
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _36
  _37 = put_list _10, _36

  %% bs_construct_SUITE.erl:265
  %% Unique:
  %%    _37
  _45 = call (`io`:`format`/2), `"ERROR: Compiled not equal to interpreted:~n ~p, ~p.~n"`, _37

  %% Aliased:
  %%    _45
  _86 = succeeded:body _45
  br _86, ^86, ^1

86:
  %% bs_construct_SUITE.erl:268
  _46 = call (`ct`:`fail`/1), `comp`

  %% Aliased:
  %%    _46
  _87 = succeeded:body _46
  br _87, ^87, ^1

87:
  %% Aliased:
  %%    _46
  ret _46

83:
  %% Argument types:
  %%    _33 => maybe_improper_list(any(), any()) | number(0, '+inf') | {...} | other()
  %% Aliased:
  %%    _33
  _92 = bif:'=:=' _33, `0`
  br _92, ^91, ^82

91:
  %% Result type:
  %%    'ok'
  ret `ok`

82:
  %% Argument types:
  %%    _33 => atom() | maybe_improper_list(any(), any()) | number(0, '+inf') | {...} | other()
  %% Aliased:
  %%    _33
  _94 = bif:is_integer _33
  br _94, ^94, ^93

94:
  %% bs_construct_SUITE.erl:276
  %% Aliased:
  %%    _22
  _12 = call (`erlang`:`bitstring_to_list`/1), _22

  %% Aliased:
  %%    _12
  _95 = succeeded:body _12
  br _95, ^95, ^1

95:
  %% bs_construct_SUITE.erl:276
  %% Aliased:
  %%    _21
  _11 = call (`erlang`:`bitstring_to_list`/1), _21

  %% Aliased:
  %%    _11
  _96 = succeeded:body _11
  br _96, ^96, ^1

96:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _34 = put_list _11, `[]`

  %% Argument types:
  %%    _34 => nonempty_list(any())
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _34
  _35 = put_list _12, _34

  %% bs_construct_SUITE.erl:274
  %% Unique:
  %%    _35
  _47 = call (`io`:`format`/2), `"Info: compiled and interpreted differ in the last bytes:~n ~p, ~p.~n"`, _35

  %% Aliased:
  %%    _47
  _97 = succeeded:body _47
  br _97, ^97, ^1

97:
  %% Result type:
  %%    'ok'
  ret `ok`

93:
  %% bs_construct_SUITE.erl:261
  %% Aliased:
  %%    _33
  _48 = match_fail `case_clause`, _33

  %% Unique:
  %%    _48
  _98 = succeeded:body _48
  br ^1

52:
  %% bs_construct_SUITE.erl:230
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-one_test/1-',1}}
  _49 = match_fail `function_clause`, _0

  %% Unique:
  %%    _49
  _103 = succeeded:body _49
  br ^1

1:
  _50 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _50
}

%% bs_construct_SUITE.erl:281
%% Counter = 49
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`equal_lists`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _31 = bif:'=:=' _0, `[]`
  br _31, ^31, ^28

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _30 = bif:'=:=' _1, `[]`
  br _30, ^30, ^29

30:
  %% Result type:
  %%    0
  ret `0`

29:
  %% Result type:
  %%    'false'
  ret `false`

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _33 = bif:'=:=' _1, `[]`
  br _33, ^33, ^32

33:
  %% Result type:
  %%    'false'
  ret `false`

32:
  %% Aliased:
  %%    _0
  _38 = is_nonempty_list _0
  br _38, ^38, ^34

38:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _22 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _21 = get_tl _0

  %% Aliased:
  %%    _1
  _37 = is_nonempty_list _1
  br _37, ^37, ^34

37:
  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _24 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _23 = get_tl _1

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22, 
  %%    _24
  _35 = bif:'=:=' _24, _22
  br _35, ^35, ^34

35:
  %% bs_construct_SUITE.erl:288
  %% Result type:
  %%    atom() | maybe_improper_list(any(), any()) | number(0, '+inf') | {...} | other()
  %% Aliased:
  %%    _2, 
  %%    _21, 
  %%    _23
  _25 = call (`equal_lists`/3), _21, _23, _2

  %% Aliased:
  %%    _25
  _36 = succeeded:body _25
  br _36, ^36, ^1

36:
  %% Result type:
  %%    atom() | maybe_improper_list(any(), any()) | number(0, '+inf') | {...} | other()
  %% Aliased:
  %%    _25
  ret _25

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26

34:
  %% bs_construct_SUITE.erl:291
  %% Argument types:
  %%    _0 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _4 = bif:length _0

  %% Unique:
  %%    _4
  _43 = succeeded:guard _4
  br _43, ^43, ^41

43:
  %% bs_construct_SUITE.erl:291
  %% Argument types:
  %%    _1 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _1
  _3 = bif:length _1

  %% Unique:
  %%    _3
  _44 = succeeded:guard _3
  br _44, ^44, ^41

44:
  %% Argument types:
  %%    _4 => 0..288230376151711743
  %%    _3 => 0..288230376151711743
  %% Unique:
  %%    _3, 
  %%    _4
  _45 = bif:'=:=' _4, _3
  br _45, ^41, ^45

45:
  %% Result type:
  %%    'false'
  ret `false`

41:
  %% bs_construct_SUITE.erl:293
  %% Argument types:
  %%    _0 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _5 = bif:length _0

  %% Unique:
  %%    _5
  _47 = succeeded:guard _5
  br _47, ^47, ^40

47:
  %% Argument types:
  %%    _5 => 0..288230376151711743
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _5
  _48 = bif:'=<' _5, _2
  br _48, ^48, ^40

48:
  %% Result type:
  %%    atom() | maybe_improper_list(any(), any()) | number(0, '+inf') | {...} | other()
  %% Aliased:
  %%    _2
  ret _2

40:
  %% Result type:
  %%    'false'
  ret `false`
}

%% bs_construct_SUITE.erl:299
%% Counter = 35
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`test1`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _23 = bif:is_list _0
  br _23, ^23, ^22

23:
  %% bs_construct_SUITE.erl:300
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  I_13 = call (`i`/1), `13`

  %% Aliased:
  %%    I_13
  _24 = succeeded:body I_13
  br _24, ^24, ^1

24:
  %% bs_construct_SUITE.erl:301
  %% Result type:
  %%    57285702734876389752897683
  I_big1 = call (`big`/1), `1`

  %% Unique:
  %%    I_big1
  _25 = succeeded:body I_big1
  br _25, ^25, ^1

25:
  %% bs_construct_SUITE.erl:302
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  I_16 = call (`i`/1), `16`

  %% Aliased:
  %%    I_16
  _26 = succeeded:body I_16
  br _26, ^26, ^1

26:
  %% bs_construct_SUITE.erl:303
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  Bin = call (`i`/1), `<<"¥ZÃ">>`

  %% Aliased:
  %%    Bin
  _27 = succeeded:body Bin
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    Bin => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    Bin
  _10 = put_tuple `'Bin'`, Bin

  %% Argument types:
  %%    _10 => {''Bin'', 'not_a_number' | -2047..16 | bitstring(1)}
  %% Unique:
  %%    _10
  _11 = put_list _10, `[]`

  %% Argument types:
  %%    I_16 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    I_16
  _12 = put_tuple `'I_16'`, I_16

  %% Argument types:
  %%    _12 => {''I_16'', 'not_a_number' | -2047..16 | bitstring(1)}
  %%    _11 => nonempty_list({''Bin'', 'not_a_number' | -2047..16 | bitstring(1)})
  %% Unique:
  %%    _11, 
  %%    _12
  _13 = put_list _12, _11

  %% Argument types:
  %%    _13 => nonempty_list({''Bin'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_16'', 'not_a_number' | -2047..16 | bitstring(1)})
  %% Unique:
  %%    _13
  _15 = put_list `{'I_big1',57285702734876389752897683}`, _13

  %% Argument types:
  %%    I_13 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    I_13
  _16 = put_tuple `'I_13'`, I_13

  %% Argument types:
  %%    _16 => {''I_13'', 'not_a_number' | -2047..16 | bitstring(1)}
  %%    _15 => nonempty_list({''Bin'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_16'', 'not_a_number' | -2047..16 | bitstring(1)} | {''I_big1'', 57285702734876389752897683})
  %% Unique:
  %%    _15, 
  %%    _16
  _17 = put_list _16, _15

  %% bs_construct_SUITE.erl:304
  %% Unique:
  %%    _17
  Vars = call (`lists`:`sort`/1), _17

  %% Aliased:
  %%    Vars
  _28 = succeeded:body Vars
  br _28, ^28, ^1

28:
  _8 = make_fun (`one_test`/1)

  %% bs_construct_SUITE.erl:308
  %% Result type:
  %%    nonempty_list({bitstring(1), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Aliased:
  %%    Bin, 
  %%    I_13, 
  %%    I_16
  _6 = call (`l`/4), I_13, `57285702734876389752897683`, I_16, Bin

  %% Unique:
  %%    _6
  _29 = succeeded:body _6
  br _29, ^29, ^1

29:
  %% bs_construct_SUITE.erl:308
  %% Result type:
  %%    nonempty_list({bitstring(1), any(), nonempty_list(32..1101), list(0..255 | bitstring(1))})
  %% Aliased:
  %%    Vars
  %% Unique:
  %%    _6
  _7 = call (`eval_list`/2), _6, Vars

  %% Unique:
  %%    _7
  _30 = succeeded:body _7
  br _30, ^30, ^1

30:
  %% bs_construct_SUITE.erl:308
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _7
  _18 = call (`lists`:`foreach`/2), _8, _7

  %% Aliased:
  %%    _18
  _31 = succeeded:body _18
  br _31, ^31, ^1

31:
  %% Aliased:
  %%    _18
  ret _18

22:
  %% bs_construct_SUITE.erl:299
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-test1/1-',1}}
  _19 = match_fail `function_clause`, _0

  %% Unique:
  %%    _19
  _32 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% bs_construct_SUITE.erl:310
%% Counter = 1188
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`fail`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _280 = bif:is_list _0
  br _280, ^280, ^279

280:
  %% bs_construct_SUITE.erl:311
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  I_minus_777 = call (`i`/1), `-777`

  %% Aliased:
  %%    I_minus_777
  _281 = succeeded:body I_minus_777
  br _281, ^281, ^1

281:
  %% bs_construct_SUITE.erl:312
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  I_minus_2047 = call (`i`/1), `-2047`

  %% Aliased:
  %%    I_minus_2047
  _282 = succeeded:body I_minus_2047
  br _282, ^1146, ^1

1146:
  br ^1167

1167:
  _286 = new_try_tag `'catch'`
  br _286, ^284, ^285

284:
  %% bs_construct_SUITE.erl:317
  %% Argument types:
  %%    I_minus_777 => 'not_a_number' | -2047..16 | bitstring(1)
  %%    I_minus_2047 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    I_minus_2047, 
  %%    I_minus_777
  %% Anno: #{unit => 8}
  _205 = bs_create_bin `integer`, `[8,{segment,1}]`, I_minus_777, `2048`, `integer`, `[8,{segment,2}]`, `57`, I_minus_2047

  %% Aliased:
  %%    _205
  _288 = succeeded:body _205
  br _288, ^288, ^285

288:
  br ^283

285:
  %% Unique:
  %%    _286
  _291 = landingpad `'catch'`, _286

  %% Aliased:
  %%    _291
  _289 = extract _291, `0`
  br ^283

283:
  _292 = phi { _289, ^285 }, { _205, ^288 }

  %% Aliased:
  %%    _292
  %% Unique:
  %%    _286
  _5 = catch_end _286, _292

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _826 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _826, ^823, ^294

823:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _105 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _820 = is_tagged_tuple _105, `2`, `badarg`
  br _820, ^1147, ^294

1147:
  br ^1168

1168:
  _298 = new_try_tag `'catch'`
  br _298, ^296, ^297

296:
  %% bs_construct_SUITE.erl:321
  _207 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _207
  _300 = succeeded:body _207
  br ^297

297:
  %% Unique:
  %%    _298
  _303 = landingpad `'catch'`, _298

  %% Aliased:
  %%    _303
  _301 = extract _303, `0`
  br ^295

295:
  %% Aliased:
  %%    _301
  %% Unique:
  %%    _298
  _8 = catch_end _298, _301

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _813 = is_tagged_tuple _8, `2`, `'EXIT'`
  br _813, ^810, ^306

810:
  %% Argument types:
  %%    _8 => {''EXIT'', any()}
  %% Aliased:
  %%    _8
  _109 = get_tuple_element _8, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _807 = is_tagged_tuple _109, `2`, `badarg`
  br _807, ^1148, ^306

1148:
  br ^1169

1169:
  _310 = new_try_tag `'catch'`
  br _310, ^308, ^309

308:
  %% bs_construct_SUITE.erl:325
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  _10 = call (`i`/1), `not_a_number`

  %% Aliased:
  %%    _10
  _312 = succeeded:body _10
  br _312, ^312, ^309

312:
  %% bs_construct_SUITE.erl:325
  %% Argument types:
  %%    _10 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _10
  %% Anno: #{unit => 1}
  _209 = bs_create_bin `integer`, `[1,{segment,1}]`, `45`, _10

  %% Aliased:
  %%    _209
  _313 = succeeded:body _209
  br _313, ^313, ^309

313:
  br ^307

309:
  %% Unique:
  %%    _310
  _316 = landingpad `'catch'`, _310

  %% Aliased:
  %%    _316
  _314 = extract _316, `0`
  br ^307

307:
  _317 = phi { _314, ^309 }, { _209, ^313 }

  %% Aliased:
  %%    _317
  %% Unique:
  %%    _310
  _11 = catch_end _310, _317

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _800 = is_tagged_tuple _11, `2`, `'EXIT'`
  br _800, ^797, ^319

797:
  %% Argument types:
  %%    _11 => {''EXIT'', any()}
  %% Aliased:
  %%    _11
  _113 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _794 = is_tagged_tuple _113, `2`, `badarg`
  br _794, ^1149, ^319

1149:
  br ^1170

1170:
  _323 = new_try_tag `'catch'`
  br _323, ^321, ^322

321:
  %% bs_construct_SUITE.erl:326
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  _13 = call (`i`/1), `not_a_number`

  %% Aliased:
  %%    _13
  _325 = succeeded:body _13
  br _325, ^325, ^322

325:
  %% bs_construct_SUITE.erl:326
  %% Argument types:
  %%    _13 => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    _13
  %% Anno: #{unit => 1}
  _211 = bs_create_bin `binary`, `[1]`, `<<"\r">>`, `all`, `integer`, `[1,{segment,2}]`, `45`, _13

  %% Aliased:
  %%    _211
  _326 = succeeded:body _211
  br _326, ^326, ^322

326:
  br ^320

322:
  %% Unique:
  %%    _323
  _329 = landingpad `'catch'`, _323

  %% Aliased:
  %%    _329
  _327 = extract _329, `0`
  br ^320

320:
  _330 = phi { _327, ^322 }, { _211, ^326 }

  %% Aliased:
  %%    _330
  %% Unique:
  %%    _323
  _14 = catch_end _323, _330

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _787 = is_tagged_tuple _14, `2`, `'EXIT'`
  br _787, ^784, ^332

784:
  %% Argument types:
  %%    _14 => {''EXIT'', any()}
  %% Aliased:
  %%    _14
  _117 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _781 = is_tagged_tuple _117, `2`, `badarg`
  br _781, ^778, ^332

778:
  %% bs_construct_SUITE.erl:329
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  BadSz = call (`i`/1), `7`

  %% Aliased:
  %%    BadSz
  _333 = succeeded:body BadSz
  br _333, ^333, ^1

333:
  %% bs_construct_SUITE.erl:330
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  Bitstr = call (`i`/1), `<<0,21,0:1>>`

  %% Aliased:
  %%    Bitstr
  _334 = succeeded:body Bitstr
  br _334, ^1150, ^1

1150:
  br ^1171

1171:
  _338 = new_try_tag `'catch'`
  br _338, ^336, ^337

336:
  %% bs_construct_SUITE.erl:332
  %% Argument types:
  %%    Bitstr => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    Bitstr
  %% Anno: #{unit => 32}
  _213 = bs_create_bin `binary`, `[8,{segment,1}]`, Bitstr, `4`

  %% Aliased:
  %%    _213
  _340 = succeeded:body _213
  br _340, ^340, ^337

340:
  br ^335

337:
  %% Unique:
  %%    _338
  _343 = landingpad `'catch'`, _338

  %% Aliased:
  %%    _343
  _341 = extract _343, `0`
  br ^335

335:
  _344 = phi { _341, ^337 }, { _213, ^340 }

  %% Aliased:
  %%    _344
  %% Unique:
  %%    _338
  _18 = catch_end _338, _344

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _774 = is_tagged_tuple _18, `2`, `'EXIT'`
  br _774, ^771, ^346

771:
  %% Argument types:
  %%    _18 => {''EXIT'', any()}
  %% Aliased:
  %%    _18
  _121 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _768 = is_tagged_tuple _121, `2`, `badarg`
  br _768, ^1151, ^346

1151:
  br ^1172

1172:
  _350 = new_try_tag `'catch'`
  br _350, ^348, ^349

348:
  %% bs_construct_SUITE.erl:333
  %% Argument types:
  %%    Bitstr => 'not_a_number' | -2047..16 | bitstring(1)
  %%    BadSz => 'not_a_number' | -2047..16 | bitstring(1)
  %% Aliased:
  %%    BadSz, 
  %%    Bitstr
  %% Anno: #{unit => 8}
  _215 = bs_create_bin `binary`, `[8,{segment,1}]`, Bitstr, BadSz

  %% Aliased:
  %%    _215
  _352 = succeeded:body _215
  br _352, ^352, ^349

352:
  br ^347

349:
  %% Unique:
  %%    _350
  _355 = landingpad `'catch'`, _350

  %% Aliased:
  %%    _355
  _353 = extract _355, `0`
  br ^347

347:
  _356 = phi { _353, ^349 }, { _215, ^352 }

  %% Aliased:
  %%    _356
  %% Unique:
  %%    _350
  _20 = catch_end _350, _356

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _761 = is_tagged_tuple _20, `2`, `'EXIT'`
  br _761, ^758, ^358

758:
  %% Argument types:
  %%    _20 => {''EXIT'', any()}
  %% Aliased:
  %%    _20
  _125 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _755 = is_tagged_tuple _125, `2`, `badarg`
  br _755, ^752, ^358

752:
  %% bs_construct_SUITE.erl:335
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    BadSz, 
  %%    Bitstr
  _28 = call (`'-fail/1-lc$^0/1-0-'`/3), `[]`, BadSz, Bitstr

  %% Unique:
  %%    _28
  _359 = succeeded:body _28
  br _359, ^750, ^1

750:
  %% bs_construct_SUITE.erl:336
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    Bitstr
  _36 = call (`'-fail/1-lc$^1/1-1-'`/2), `[]`, Bitstr

  %% Unique:
  %%    _36
  _362 = succeeded:body _36
  br _362, ^1152, ^1

1152:
  br ^1173

1173:
  _368 = new_try_tag `'catch'`
  br _368, ^366, ^367

366:
  %% bs_construct_SUITE.erl:339
  _223 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _223
  _370 = succeeded:body _223
  br ^367

367:
  %% Unique:
  %%    _368
  _373 = landingpad `'catch'`, _368

  %% Aliased:
  %%    _373
  _371 = extract _373, `0`
  br ^365

365:
  %% Aliased:
  %%    _371
  %% Unique:
  %%    _368
  _38 = catch_end _368, _371

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _744 = is_tagged_tuple _38, `2`, `'EXIT'`
  br _744, ^741, ^376

741:
  %% Argument types:
  %%    _38 => {''EXIT'', any()}
  %% Aliased:
  %%    _38
  _143 = get_tuple_element _38, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _738 = is_tagged_tuple _143, `2`, `badarg`
  br _738, ^1153, ^376

1153:
  br ^1174

1174:
  _380 = new_try_tag `'catch'`
  br _380, ^378, ^379

378:
  %% bs_construct_SUITE.erl:340
  _225 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _225
  _382 = succeeded:body _225
  br ^379

379:
  %% Unique:
  %%    _380
  _385 = landingpad `'catch'`, _380

  %% Aliased:
  %%    _385
  _383 = extract _385, `0`
  br ^377

377:
  %% Aliased:
  %%    _383
  %% Unique:
  %%    _380
  _40 = catch_end _380, _383

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _731 = is_tagged_tuple _40, `2`, `'EXIT'`
  br _731, ^728, ^388

728:
  %% Argument types:
  %%    _40 => {''EXIT'', any()}
  %% Aliased:
  %%    _40
  _147 = get_tuple_element _40, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _147
  _725 = is_tagged_tuple _147, `2`, `badarg`
  br _725, ^1154, ^388

1154:
  br ^1175

1175:
  _392 = new_try_tag `'catch'`
  br _392, ^390, ^391

390:
  %% bs_construct_SUITE.erl:341
  _227 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _227
  _394 = succeeded:body _227
  br ^391

391:
  %% Unique:
  %%    _392
  _397 = landingpad `'catch'`, _392

  %% Aliased:
  %%    _397
  _395 = extract _397, `0`
  br ^389

389:
  %% Aliased:
  %%    _395
  %% Unique:
  %%    _392
  _42 = catch_end _392, _395

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _718 = is_tagged_tuple _42, `2`, `'EXIT'`
  br _718, ^715, ^400

715:
  %% Argument types:
  %%    _42 => {''EXIT'', any()}
  %% Aliased:
  %%    _42
  _151 = get_tuple_element _42, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _151
  _712 = is_tagged_tuple _151, `2`, `badarg`
  br _712, ^709, ^400

709:
  %% bs_construct_SUITE.erl:344
  %% Result type:
  %%    'not_a_number' | -2047..16 | bitstring(1)
  Bin = call (`i`/1), `<<>>`

  %% Unique:
  %%    Bin
  _401 = succeeded:body Bin
  br _401, ^1155, ^1

1155:
  br ^1176

1176:
  _405 = new_try_tag `'catch'`
  br _405, ^403, ^404

403:
  %% bs_construct_SUITE.erl:345
  _229 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _229
  _407 = succeeded:body _229
  br ^404

404:
  %% Unique:
  %%    _405
  _410 = landingpad `'catch'`, _405

  %% Aliased:
  %%    _410
  _408 = extract _410, `0`
  br ^402

402:
  %% Aliased:
  %%    _408
  %% Unique:
  %%    _405
  _46 = catch_end _405, _408

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _705 = is_tagged_tuple _46, `2`, `'EXIT'`
  br _705, ^702, ^413

702:
  %% Argument types:
  %%    _46 => {''EXIT'', any()}
  %% Aliased:
  %%    _46
  _155 = get_tuple_element _46, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _155
  _699 = is_tagged_tuple _155, `2`, `badarg`
  br _699, ^1156, ^413

1156:
  br ^1177

1177:
  _417 = new_try_tag `'catch'`
  br _417, ^415, ^416

415:
  %% bs_construct_SUITE.erl:346
  _231 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _231
  _419 = succeeded:body _231
  br ^416

416:
  %% Unique:
  %%    _417
  _422 = landingpad `'catch'`, _417

  %% Aliased:
  %%    _422
  _420 = extract _422, `0`
  br ^414

414:
  %% Aliased:
  %%    _420
  %% Unique:
  %%    _417
  _49 = catch_end _417, _420

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _692 = is_tagged_tuple _49, `2`, `'EXIT'`
  br _692, ^689, ^425

689:
  %% Argument types:
  %%    _49 => {''EXIT'', any()}
  %% Aliased:
  %%    _49
  _159 = get_tuple_element _49, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _686 = is_tagged_tuple _159, `2`, `badarg`
  br _686, ^1157, ^425

1157:
  br ^1178

1178:
  _429 = new_try_tag `'catch'`
  br _429, ^427, ^428

427:
  %% bs_construct_SUITE.erl:347
  _233 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _233
  _431 = succeeded:body _233
  br ^428

428:
  %% Unique:
  %%    _429
  _434 = landingpad `'catch'`, _429

  %% Aliased:
  %%    _434
  _432 = extract _434, `0`
  br ^426

426:
  %% Aliased:
  %%    _432
  %% Unique:
  %%    _429
  _53 = catch_end _429, _432

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _679 = is_tagged_tuple _53, `2`, `'EXIT'`
  br _679, ^676, ^437

676:
  %% Argument types:
  %%    _53 => {''EXIT'', any()}
  %% Aliased:
  %%    _53
  _163 = get_tuple_element _53, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _163
  _673 = is_tagged_tuple _163, `2`, `badarg`
  br _673, ^1158, ^437

1158:
  br ^1179

1179:
  _441 = new_try_tag `'catch'`
  br _441, ^439, ^440

439:
  %% bs_construct_SUITE.erl:348
  _235 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _235
  _443 = succeeded:body _235
  br ^440

440:
  %% Unique:
  %%    _441
  _446 = landingpad `'catch'`, _441

  %% Aliased:
  %%    _446
  _444 = extract _446, `0`
  br ^438

438:
  %% Aliased:
  %%    _444
  %% Unique:
  %%    _441
  _57 = catch_end _441, _444

  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _666 = is_tagged_tuple _57, `2`, `'EXIT'`
  br _666, ^663, ^449

663:
  %% Argument types:
  %%    _57 => {''EXIT'', any()}
  %% Aliased:
  %%    _57
  _167 = get_tuple_element _57, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _660 = is_tagged_tuple _167, `2`, `badarg`
  br _660, ^1159, ^449

1159:
  br ^1180

1180:
  _453 = new_try_tag `'catch'`
  br _453, ^451, ^452

451:
  %% bs_construct_SUITE.erl:351
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _237 = bs_create_bin `binary`, `[1]`, `<<0>>`, `all`, `binary`, `[8,{segment,2}]`, `<<15,48,1:1>>`, `all`

  %% Aliased:
  %%    _237
  _455 = succeeded:body _237
  br _455, ^455, ^452

455:
  br ^450

452:
  %% Unique:
  %%    _453
  _458 = landingpad `'catch'`, _453

  %% Aliased:
  %%    _458
  _456 = extract _458, `0`
  br ^450

450:
  _459 = phi { _456, ^452 }, { _237, ^455 }

  %% Aliased:
  %%    _459
  %% Unique:
  %%    _453
  _59 = catch_end _453, _459

  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _653 = is_tagged_tuple _59, `2`, `'EXIT'`
  br _653, ^650, ^461

650:
  %% Argument types:
  %%    _59 => {''EXIT'', any()}
  %% Aliased:
  %%    _59
  _171 = get_tuple_element _59, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _171
  _647 = is_tagged_tuple _171, `2`, `badarg`
  br _647, ^1160, ^461

1160:
  br ^1181

1181:
  _465 = new_try_tag `'catch'`
  br _465, ^463, ^464

463:
  %% bs_construct_SUITE.erl:355
  _239 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _239
  _467 = succeeded:body _239
  br ^464

464:
  %% Unique:
  %%    _465
  _470 = landingpad `'catch'`, _465

  %% Aliased:
  %%    _470
  _468 = extract _470, `0`
  br ^462

462:
  %% Aliased:
  %%    _468
  %% Unique:
  %%    _465
  _64 = catch_end _465, _468

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _640 = is_tagged_tuple _64, `2`, `'EXIT'`
  br _640, ^637, ^473

637:
  %% Argument types:
  %%    _64 => {''EXIT'', any()}
  %% Aliased:
  %%    _64
  _175 = get_tuple_element _64, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _175
  _634 = is_tagged_tuple _175, `2`, `badarg`
  br _634, ^1161, ^473

1161:
  br ^1182

1182:
  _477 = new_try_tag `'catch'`
  br _477, ^475, ^476

475:
  %% bs_construct_SUITE.erl:358
  _241 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _241
  _479 = succeeded:body _241
  br ^476

476:
  %% Unique:
  %%    _477
  _482 = landingpad `'catch'`, _477

  %% Aliased:
  %%    _482
  _480 = extract _482, `0`
  br ^474

474:
  %% Aliased:
  %%    _480
  %% Unique:
  %%    _477
  _69 = catch_end _477, _480

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _627 = is_tagged_tuple _69, `2`, `'EXIT'`
  br _627, ^624, ^485

624:
  %% Argument types:
  %%    _69 => {''EXIT'', any()}
  %% Aliased:
  %%    _69
  _179 = get_tuple_element _69, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _179
  _621 = is_tagged_tuple _179, `2`, `badarg`
  br _621, ^1162, ^485

1162:
  br ^1183

1183:
  _489 = new_try_tag `'catch'`
  br _489, ^487, ^488

487:
  %% bs_construct_SUITE.erl:362
  _71 = call (`erlang`:`put`/2), `fail`, `17`

  %% Aliased:
  %%    _71
  _491 = succeeded:body _71
  br _491, ^491, ^488

491:
  %% bs_construct_SUITE.erl:362
  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  %% Anno: #{unit => 1}
  _243 = bs_create_bin `integer`, `[1,{segment,1}]`, `13`, _71

  %% Aliased:
  %%    _243
  _492 = succeeded:body _243
  br _492, ^492, ^488

492:
  br ^486

488:
  %% Unique:
  %%    _489
  _495 = landingpad `'catch'`, _489

  %% Aliased:
  %%    _495
  _493 = extract _495, `0`
  br ^486

486:
  _496 = phi { _493, ^488 }, { _243, ^492 }

  %% Aliased:
  %%    _496
  %% Unique:
  %%    _489
  _72 = catch_end _489, _496

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _614 = is_tagged_tuple _72, `2`, `'EXIT'`
  br _614, ^611, ^498

611:
  %% Argument types:
  %%    _72 => {''EXIT'', any()}
  %% Aliased:
  %%    _72
  _183 = get_tuple_element _72, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _183
  _608 = is_tagged_tuple _183, `2`, `badarg`
  br _608, ^605, ^498

605:
  %% bs_construct_SUITE.erl:363
  _187 = call (`erlang`:`erase`/1), `fail`

  %% Aliased:
  %%    _187
  _499 = succeeded:body _187
  br _499, ^499, ^1

499:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _187
  _603 = bif:'=:=' _187, `17`
  br _603, ^1163, ^501

1163:
  br ^1184

1184:
  _505 = new_try_tag `'catch'`
  br _505, ^503, ^504

503:
  %% bs_construct_SUITE.erl:364
  %% Result type:
  %%    none()
  _245 = call (`fail_1`/0)

  %% Aliased:
  %%    _245
  _507 = succeeded:body _245
  br ^504

504:
  %% Unique:
  %%    _505
  _510 = landingpad `'catch'`, _505

  %% Aliased:
  %%    _510
  _508 = extract _510, `0`
  br ^502

502:
  %% Aliased:
  %%    _508
  %% Unique:
  %%    _505
  _75 = catch_end _505, _508

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _598 = is_tagged_tuple _75, `2`, `'EXIT'`
  br _598, ^595, ^513

595:
  %% Argument types:
  %%    _75 => {''EXIT'', any()}
  %% Aliased:
  %%    _75
  _188 = get_tuple_element _75, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _188
  _592 = is_tagged_tuple _188, `2`, `badarg`
  br _592, ^1164, ^513

1164:
  br ^1185

1185:
  _517 = new_try_tag `'catch'`
  br _517, ^515, ^516

515:
  %% bs_construct_SUITE.erl:369
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _247 = bs_create_bin `binary`, `[8,native,{segment,1}]`, `<<"t">>`, `42`

  %% Aliased:
  %%    _247
  _519 = succeeded:body _247
  br _519, ^519, ^516

519:
  br ^514

516:
  %% Unique:
  %%    _517
  _522 = landingpad `'catch'`, _517

  %% Aliased:
  %%    _522
  _520 = extract _522, `0`
  br ^514

514:
  _523 = phi { _520, ^516 }, { _247, ^519 }

  %% Aliased:
  %%    _523
  %% Unique:
  %%    _517
  _77 = catch_end _517, _523

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _585 = is_tagged_tuple _77, `2`, `'EXIT'`
  br _585, ^582, ^525

582:
  %% Argument types:
  %%    _77 => {''EXIT'', any()}
  %% Aliased:
  %%    _77
  _192 = get_tuple_element _77, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _192
  _579 = is_tagged_tuple _192, `2`, `badarg`
  br _579, ^1165, ^525

1165:
  br ^1186

1186:
  _529 = new_try_tag `'catch'`
  br _529, ^527, ^528

527:
  %% bs_construct_SUITE.erl:370
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _249 = bs_create_bin `binary`, `[8,{segment,1}]`, `<<"t">>`, `42`

  %% Aliased:
  %%    _249
  _531 = succeeded:body _249
  br _531, ^531, ^528

531:
  br ^526

528:
  %% Unique:
  %%    _529
  _534 = landingpad `'catch'`, _529

  %% Aliased:
  %%    _534
  _532 = extract _534, `0`
  br ^526

526:
  _535 = phi { _532, ^528 }, { _249, ^531 }

  %% Aliased:
  %%    _535
  %% Unique:
  %%    _529
  _79 = catch_end _529, _535

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _572 = is_tagged_tuple _79, `2`, `'EXIT'`
  br _572, ^569, ^537

569:
  %% Argument types:
  %%    _79 => {''EXIT'', any()}
  %% Aliased:
  %%    _79
  _196 = get_tuple_element _79, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _196
  _566 = is_tagged_tuple _196, `2`, `badarg`
  br _566, ^1166, ^537

1166:
  br ^1187

1187:
  _541 = new_try_tag `'catch'`
  br _541, ^539, ^540

539:
  %% bs_construct_SUITE.erl:372
  %% Result type:
  %%    bitstring(1)
  _251 = call (`fail_2`/1), `true`

  %% Aliased:
  %%    _251
  _543 = succeeded:body _251
  br _543, ^543, ^540

543:
  br ^538

540:
  %% Unique:
  %%    _541
  _546 = landingpad `'catch'`, _541

  %% Aliased:
  %%    _546
  _544 = extract _546, `0`
  br ^538

538:
  _547 = phi { _544, ^540 }, { _251, ^543 }

  %% Aliased:
  %%    _547
  %% Unique:
  %%    _541
  _81 = catch_end _541, _547

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _559 = is_tagged_tuple _81, `2`, `'EXIT'`
  br _559, ^556, ^549

556:
  %% Argument types:
  %%    _81 => {''EXIT'', any()}
  %% Aliased:
  %%    _81
  _200 = get_tuple_element _81, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _200
  _553 = is_tagged_tuple _200, `2`, `badarg`
  br _553, ^550, ^549

550:
  %% Result type:
  %%    'ok'
  ret `ok`

549:
  %% bs_construct_SUITE.erl:372
  %% Aliased:
  %%    _81
  _252 = match_fail `badmatch`, _81

  %% Unique:
  %%    _252
  _562 = succeeded:body _252
  br ^1

537:
  %% bs_construct_SUITE.erl:370
  %% Aliased:
  %%    _79
  _253 = match_fail `badmatch`, _79

  %% Unique:
  %%    _253
  _575 = succeeded:body _253
  br ^1

525:
  %% bs_construct_SUITE.erl:369
  %% Aliased:
  %%    _77
  _254 = match_fail `badmatch`, _77

  %% Unique:
  %%    _254
  _588 = succeeded:body _254
  br ^1

513:
  %% bs_construct_SUITE.erl:364
  %% Aliased:
  %%    _75
  _255 = match_fail `badmatch`, _75

  %% Unique:
  %%    _255
  _601 = succeeded:body _255
  br ^1

501:
  %% bs_construct_SUITE.erl:363
  %% Aliased:
  %%    _187
  _256 = match_fail `badmatch`, _187

  %% Unique:
  %%    _256
  _604 = succeeded:body _256
  br ^1

498:
  %% bs_construct_SUITE.erl:362
  %% Aliased:
  %%    _72
  _257 = match_fail `badmatch`, _72

  %% Unique:
  %%    _257
  _617 = succeeded:body _257
  br ^1

485:
  %% bs_construct_SUITE.erl:358
  %% Aliased:
  %%    _69
  _258 = match_fail `badmatch`, _69

  %% Unique:
  %%    _258
  _630 = succeeded:body _258
  br ^1

473:
  %% bs_construct_SUITE.erl:355
  %% Aliased:
  %%    _64
  _259 = match_fail `badmatch`, _64

  %% Unique:
  %%    _259
  _643 = succeeded:body _259
  br ^1

461:
  %% bs_construct_SUITE.erl:351
  %% Aliased:
  %%    _59
  _260 = match_fail `badmatch`, _59

  %% Unique:
  %%    _260
  _656 = succeeded:body _260
  br ^1

449:
  %% bs_construct_SUITE.erl:348
  %% Aliased:
  %%    _57
  _261 = match_fail `badmatch`, _57

  %% Unique:
  %%    _261
  _669 = succeeded:body _261
  br ^1

437:
  %% bs_construct_SUITE.erl:347
  %% Aliased:
  %%    _53
  _262 = match_fail `badmatch`, _53

  %% Unique:
  %%    _262
  _682 = succeeded:body _262
  br ^1

425:
  %% bs_construct_SUITE.erl:346
  %% Aliased:
  %%    _49
  _263 = match_fail `badmatch`, _49

  %% Unique:
  %%    _263
  _695 = succeeded:body _263
  br ^1

413:
  %% bs_construct_SUITE.erl:345
  %% Aliased:
  %%    _46
  _264 = match_fail `badmatch`, _46

  %% Unique:
  %%    _264
  _708 = succeeded:body _264
  br ^1

400:
  %% bs_construct_SUITE.erl:341
  %% Aliased:
  %%    _42
  _265 = match_fail `badmatch`, _42

  %% Unique:
  %%    _265
  _721 = succeeded:body _265
  br ^1

388:
  %% bs_construct_SUITE.erl:340
  %% Aliased:
  %%    _40
  _266 = match_fail `badmatch`, _40

  %% Unique:
  %%    _266
  _734 = succeeded:body _266
  br ^1

376:
  %% bs_construct_SUITE.erl:339
  %% Aliased:
  %%    _38
  _267 = match_fail `badmatch`, _38

  %% Unique:
  %%    _267
  _747 = succeeded:body _267
  br ^1

358:
  %% bs_construct_SUITE.erl:333
  %% Aliased:
  %%    _20
  _270 = match_fail `badmatch`, _20

  %% Unique:
  %%    _270
  _764 = succeeded:body _270
  br ^1

346:
  %% bs_construct_SUITE.erl:332
  %% Aliased:
  %%    _18
  _271 = match_fail `badmatch`, _18

  %% Unique:
  %%    _271
  _777 = succeeded:body _271
  br ^1

332:
  %% bs_construct_SUITE.erl:326
  %% Aliased:
  %%    _14
  _272 = match_fail `badmatch`, _14

  %% Unique:
  %%    _272
  _790 = succeeded:body _272
  br ^1

319:
  %% bs_construct_SUITE.erl:325
  %% Aliased:
  %%    _11
  _273 = match_fail `badmatch`, _11

  %% Unique:
  %%    _273
  _803 = succeeded:body _273
  br ^1

306:
  %% bs_construct_SUITE.erl:321
  %% Aliased:
  %%    _8
  _274 = match_fail `badmatch`, _8

  %% Unique:
  %%    _274
  _816 = succeeded:body _274
  br ^1

294:
  %% bs_construct_SUITE.erl:317
  %% Aliased:
  %%    _5
  _275 = match_fail `badmatch`, _5

  %% Unique:
  %%    _275
  _829 = succeeded:body _275
  br ^1

279:
  %% bs_construct_SUITE.erl:310
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-fail/1-',1}}
  _276 = match_fail `function_clause`, _0

  %% Unique:
  %%    _276
  _830 = succeeded:body _276
  br ^1

1:
  _277 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _277
}

%% bs_construct_SUITE.erl:376
%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`fail_1`() {
0:
  %% bs_construct_SUITE.erl:377
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:381
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'true'
function `bs_construct_SUITE`:`fail_2`(_0) {
0:
  %% bs_construct_SUITE.erl:382
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _2 = bs_create_bin `binary`, `[1]`, `<<0>>`, `all`, `binary`, `[1,{segment,2}]`, `true`, `all`

  %% Aliased:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    bitstring(1)
  %% Aliased:
  %%    _2
  ret _2

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% bs_construct_SUITE.erl:384
%% Counter = 27
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`float_bin`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _14 = bif:is_list _0
  br _14, ^14, ^13

14:
  %% bs_construct_SUITE.erl:386
  %% Result type:
  %%    {bitstring(8), 7.0}
  _6 = call (`float_bin_1`/1), `4`

  %% Unique:
  %%    _6
  _15 = succeeded:body _6
  br _15, ^15, ^1

15:
  %% Argument types:
  %%    _6 => {bitstring(8), 7.0}
  %% Unique:
  %%    _6
  _24 = bif:'=:=' _6, `{<<1,2,3>>,7.0}`
  br _24, ^24, ^17

24:
  %% bs_construct_SUITE.erl:388
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _3 = call (`id`/1), `42`

  %% Aliased:
  %%    _3
  _18 = succeeded:body _3
  br _18, ^18, ^1

18:
  %% bs_construct_SUITE.erl:388
  %% Argument types:
  %%    _3 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _3
  %% Anno: #{unit => 8}
  _7 = bs_create_bin `integer`, `[1,{segment,1}]`, _3, `8`, `binary`, `[1]`, `<<0,0,0,0,0,0,69,64>>`, `all`

  %% Aliased:
  %%    _7
  _19 = succeeded:body _7
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    _7 => bitstring(8)
  %% Aliased:
  %%    _7
  _22 = bif:'=:=' _7, `<<42,0,0,0,0,0,0,69,64>>`
  br _22, ^22, ^21

22:
  %% Result type:
  %%    'ok'
  ret `ok`

21:
  %% bs_construct_SUITE.erl:388
  %% Aliased:
  %%    _7
  _8 = match_fail `badmatch`, _7

  %% Unique:
  %%    _8
  _23 = succeeded:body _8
  br ^1

17:
  %% bs_construct_SUITE.erl:386
  %% Unique:
  %%    _6
  _9 = match_fail `badmatch`, _6

  %% Unique:
  %%    _9
  _25 = succeeded:body _9
  br ^1

13:
  %% bs_construct_SUITE.erl:384
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-float_bin/1-',1}}
  _10 = match_fail `function_clause`, _0

  %% Unique:
  %%    _10
  _26 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% bs_construct_SUITE.erl:391
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     4
function `bs_construct_SUITE`:`float_bin_1`(_0) {
0:
  %% Result type:
  %%    {bitstring(8), 7.0}
  ret `{<<1,2,3>>,7.0}`
}

%% bs_construct_SUITE.erl:394
%% Counter = 229
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`in_guard`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _74 = bif:is_list _0
  br _74, ^74, ^73

74:
  %% bs_construct_SUITE.erl:395
  %% Result type:
  %%    'nope' | 1..3
  _27 = call (`in_guard_1`/3), `<<"t­">>`, `3733`, `5`

  %% Unique:
  %%    _27
  _75 = succeeded:body _27
  br _75, ^75, ^1

75:
  %% Argument types:
  %%    _27 => 'nope' | 1..3
  %% Unique:
  %%    _27
  _209 = bif:'=:=' _27, `1`
  br _209, ^208, ^77

208:
  %% bs_construct_SUITE.erl:396
  %% Result type:
  %%    'nope' | 1..3
  _28 = call (`in_guard_1`/3), `<<":÷hello">>`, `15095`, `<<"hello">>`

  %% Unique:
  %%    _28
  _78 = succeeded:body _28
  br _78, ^78, ^1

78:
  %% Argument types:
  %%    _28 => 'nope' | 1..3
  %% Unique:
  %%    _28
  _206 = bif:'=:=' _28, `2`
  br _206, ^205, ^80

205:
  %% bs_construct_SUITE.erl:397
  %% Result type:
  %%    'nope' | 1..3
  _29 = call (`in_guard_1`/3), `<<239,53,0,36,135,43,2,12,73,191>>`, `64461`, `3.1415`

  %% Unique:
  %%    _29
  _81 = succeeded:body _29
  br _81, ^81, ^1

81:
  %% Argument types:
  %%    _29 => 'nope' | 1..3
  %% Unique:
  %%    _29
  _203 = bif:'=:=' _29, `3`
  br _203, ^202, ^83

202:
  %% bs_construct_SUITE.erl:398
  %% Result type:
  %%    'nope' | 1..3
  _30 = call (`in_guard_1`/3), `<<239,53,0,32,0,0,0,0,0,3>>`, `64461`, `3`

  %% Unique:
  %%    _30
  _84 = succeeded:body _30
  br _84, ^84, ^1

84:
  %% Argument types:
  %%    _30 => 'nope' | 1..3
  %% Unique:
  %%    _30
  _200 = bif:'=:=' _30, `3`
  br _200, ^87, ^86

87:
  %% bs_construct_SUITE.erl:399
  %% Result type:
  %%    'nope' | 1..3
  _31 = call (`in_guard_1`/3), `<<239,53,56,128,0,0,0,0,0,3>>`, `64461`, `215679573337205118357336120696157045389097155380324579848828881993728`

  %% Unique:
  %%    _31
  _88 = succeeded:body _31
  br _88, ^88, ^1

88:
  %% Argument types:
  %%    _31 => 'nope' | 1..3
  %% Unique:
  %%    _31
  _197 = bif:'=:=' _31, `3`
  br _197, ^196, ^90

196:
  %% bs_construct_SUITE.erl:400
  %% Result type:
  %%    'nope' | 1..3
  _32 = call (`in_guard_1`/3), `<<1>>`, `42`, `b`

  %% Unique:
  %%    _32
  _91 = succeeded:body _32
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    _32 => 'nope' | 1..3
  %% Unique:
  %%    _32
  _194 = bif:'=:=' _32, `nope`
  br _194, ^193, ^93

193:
  %% bs_construct_SUITE.erl:401
  %% Result type:
  %%    'nope' | 1..3
  _33 = call (`in_guard_1`/3), `<<1>>`, `a`, `b`

  %% Unique:
  %%    _33
  _94 = succeeded:body _33
  br _94, ^94, ^1

94:
  %% Argument types:
  %%    _33 => 'nope' | 1..3
  %% Unique:
  %%    _33
  _191 = bif:'=:=' _33, `nope`
  br _191, ^190, ^96

190:
  %% bs_construct_SUITE.erl:402
  %% Result type:
  %%    'nope' | 1..3
  _34 = call (`in_guard_1`/3), `<<1,2>>`, `1`, `1`

  %% Unique:
  %%    _34
  _97 = succeeded:body _34
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    _34 => 'nope' | 1..3
  %% Unique:
  %%    _34
  _188 = bif:'=:=' _34, `nope`
  br _188, ^187, ^99

187:
  %% bs_construct_SUITE.erl:403
  %% Result type:
  %%    'nope' | 1..3
  _35 = call (`in_guard_1`/3), `<<4,5>>`, `1`, `2.71`

  %% Unique:
  %%    _35
  _100 = succeeded:body _35
  br _100, ^100, ^1

100:
  %% Argument types:
  %%    _35 => 'nope' | 1..3
  %% Unique:
  %%    _35
  _185 = bif:'=:=' _35, `nope`
  br _185, ^184, ^102

184:
  %% bs_construct_SUITE.erl:404
  %% Result type:
  %%    'nope' | 1..3
  _36 = call (`in_guard_1`/3), `<<4,5>>`, `1`, `<<"\f\r">>`

  %% Unique:
  %%    _36
  _103 = succeeded:body _36
  br _103, ^103, ^1

103:
  %% Argument types:
  %%    _36 => 'nope' | 1..3
  %% Unique:
  %%    _36
  _182 = bif:'=:=' _36, `nope`
  br _182, ^181, ^105

181:
  %% bs_construct_SUITE.erl:406
  %% Result type:
  %%    'nope' | 1..3
  _37 = call (`in_guard_2`/3), `<<0,56>>`, `7`, `blurf`

  %% Unique:
  %%    _37
  _106 = succeeded:body _37
  br _106, ^106, ^1

106:
  %% Argument types:
  %%    _37 => 'nope' | 1..3
  %% Unique:
  %%    _37
  _179 = bif:'=:=' _37, `1`
  br _179, ^178, ^108

178:
  %% bs_construct_SUITE.erl:407
  %% Result type:
  %%    'nope' | 1..3
  _38 = call (`in_guard_2`/3), `<<1,255>>`, `511`, `blurf`

  %% Unique:
  %%    _38
  _109 = succeeded:body _38
  br _109, ^109, ^1

109:
  %% Argument types:
  %%    _38 => 'nope' | 1..3
  %% Unique:
  %%    _38
  _176 = bif:'=:=' _38, `2`
  br _176, ^175, ^111

175:
  %% bs_construct_SUITE.erl:408
  %% Result type:
  %%    'nope' | 1..3
  _39 = call (`in_guard_2`/3), `<<0,3>>`, `0`, `blurf`

  %% Unique:
  %%    _39
  _112 = succeeded:body _39
  br _112, ^112, ^1

112:
  %% Argument types:
  %%    _39 => 'nope' | 1..3
  %% Unique:
  %%    _39
  _173 = bif:'=:=' _39, `3`
  br _173, ^172, ^114

172:
  %% bs_construct_SUITE.erl:409
  %% Result type:
  %%    'nope' | 1..4
  _40 = call (`in_guard_2`/3), `<<>>`, `1`, `{<<0,7>>}`

  %% Unique:
  %%    _40
  _115 = succeeded:body _40
  br _115, ^115, ^1

115:
  %% Argument types:
  %%    _40 => 'nope' | 1..4
  %% Unique:
  %%    _40
  _170 = bif:'=:=' _40, `4`
  br _170, ^169, ^117

169:
  %% bs_construct_SUITE.erl:410
  %% Result type:
  %%    'nope' | 1..3
  _41 = call (`in_guard_2`/3), `<<4,5>>`, `1`, `blurf`

  %% Unique:
  %%    _41
  _118 = succeeded:body _41
  br _118, ^118, ^1

118:
  %% Argument types:
  %%    _41 => 'nope' | 1..3
  %% Unique:
  %%    _41
  _167 = bif:'=:=' _41, `nope`
  br _167, ^166, ^120

166:
  %% bs_construct_SUITE.erl:412
  %% Result type:
  %%    'nope' | 42
  _42 = call (`in_guard_3`/2), `<<1,2,3,42>>`, `<<1,2,3>>`

  %% Unique:
  %%    _42
  _121 = succeeded:body _42
  br _121, ^121, ^1

121:
  %% Argument types:
  %%    _42 => 'nope' | 42
  %% Unique:
  %%    _42
  _164 = bif:'=:=' _42, `42`
  br _164, ^163, ^123

163:
  %% bs_construct_SUITE.erl:413
  %% Result type:
  %%    'nope' | 42
  _43 = call (`in_guard_3`/2), `<<1,2,3,42>>`, `<<1,2,3>>`

  %% Unique:
  %%    _43
  _124 = succeeded:body _43
  br _124, ^124, ^1

124:
  %% Argument types:
  %%    _43 => 'nope' | 42
  %% Unique:
  %%    _43
  _161 = bif:'=:=' _43, `42`
  br _161, ^160, ^126

160:
  %% bs_construct_SUITE.erl:414
  %% Result type:
  %%    'nope' | 42
  _44 = call (`in_guard_3`/2), `<<>>`, `<<>>`

  %% Unique:
  %%    _44
  _127 = succeeded:body _44
  br _127, ^127, ^1

127:
  %% Argument types:
  %%    _44 => 'nope' | 42
  %% Unique:
  %%    _44
  _158 = bif:'=:=' _44, `nope`
  br _158, ^157, ^129

157:
  %% bs_construct_SUITE.erl:416
  %% Result type:
  %%    'nope' | 'ok'
  _45 = call (`in_guard_4`/2), `<<15:4>>`, `255`

  %% Unique:
  %%    _45
  _130 = succeeded:body _45
  br _130, ^130, ^1

130:
  %% Argument types:
  %%    _45 => 'nope' | 'ok'
  %% Unique:
  %%    _45
  _155 = bif:'=:=' _45, `ok`
  br _155, ^154, ^132

154:
  %% bs_construct_SUITE.erl:417
  %% Result type:
  %%    'nope' | 'ok'
  _46 = call (`in_guard_4`/2), `<<15>>`, `255`

  %% Unique:
  %%    _46
  _133 = succeeded:body _46
  br _133, ^133, ^1

133:
  %% Argument types:
  %%    _46 => 'nope' | 'ok'
  %% Unique:
  %%    _46
  _152 = bif:'=:=' _46, `nope`
  br _152, ^227, ^135

227:
  br ^228

228:
  _139 = new_try_tag `'catch'`
  br _139, ^137, ^138

137:
  %% bs_construct_SUITE.erl:419
  %% Result type:
  %%    'nope'
  _48 = call (`in_guard_5`/0)

  %% Unique:
  %%    _48
  _141 = succeeded:body _48
  br _141, ^141, ^138

141:
  br ^136

138:
  %% Unique:
  %%    _139
  _144 = landingpad `'catch'`, _139

  %% Aliased:
  %%    _144
  _142 = extract _144, `0`
  br ^136

136:
  _145 = phi { _142, ^138 }, { `nope`, ^141 }

  %% Aliased:
  %%    _145
  %% Unique:
  %%    _139
  _24 = catch_end _139, _145

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _149 = bif:'=:=' _24, `nope`
  br _149, ^148, ^147

148:
  %% Result type:
  %%    'ok'
  ret `ok`

147:
  %% bs_construct_SUITE.erl:419
  %% Aliased:
  %%    _24
  _49 = match_fail `badmatch`, _24

  %% Unique:
  %%    _49
  _150 = succeeded:body _49
  br ^1

135:
  %% bs_construct_SUITE.erl:417
  _50 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _50
  _153 = succeeded:body _50
  br ^1

132:
  %% bs_construct_SUITE.erl:416
  _51 = match_fail `badmatch`, `nope`

  %% Unique:
  %%    _51
  _156 = succeeded:body _51
  br ^1

129:
  %% bs_construct_SUITE.erl:414
  _52 = match_fail `badmatch`, `42`

  %% Unique:
  %%    _52
  _159 = succeeded:body _52
  br ^1

126:
  %% bs_construct_SUITE.erl:413
  _53 = match_fail `badmatch`, `nope`

  %% Unique:
  %%    _53
  _162 = succeeded:body _53
  br ^1

123:
  %% bs_construct_SUITE.erl:412
  _54 = match_fail `badmatch`, `nope`

  %% Unique:
  %%    _54
  _165 = succeeded:body _54
  br ^1

120:
  %% bs_construct_SUITE.erl:410
  %% Unique:
  %%    _41
  _55 = match_fail `badmatch`, _41

  %% Unique:
  %%    _55
  _168 = succeeded:body _55
  br ^1

117:
  %% bs_construct_SUITE.erl:409
  %% Unique:
  %%    _40
  _56 = match_fail `badmatch`, _40

  %% Unique:
  %%    _56
  _171 = succeeded:body _56
  br ^1

114:
  %% bs_construct_SUITE.erl:408
  %% Unique:
  %%    _39
  _57 = match_fail `badmatch`, _39

  %% Unique:
  %%    _57
  _174 = succeeded:body _57
  br ^1

111:
  %% bs_construct_SUITE.erl:407
  %% Unique:
  %%    _38
  _58 = match_fail `badmatch`, _38

  %% Unique:
  %%    _58
  _177 = succeeded:body _58
  br ^1

108:
  %% bs_construct_SUITE.erl:406
  %% Unique:
  %%    _37
  _59 = match_fail `badmatch`, _37

  %% Unique:
  %%    _59
  _180 = succeeded:body _59
  br ^1

105:
  %% bs_construct_SUITE.erl:404
  %% Unique:
  %%    _36
  _60 = match_fail `badmatch`, _36

  %% Unique:
  %%    _60
  _183 = succeeded:body _60
  br ^1

102:
  %% bs_construct_SUITE.erl:403
  %% Unique:
  %%    _35
  _61 = match_fail `badmatch`, _35

  %% Unique:
  %%    _61
  _186 = succeeded:body _61
  br ^1

99:
  %% bs_construct_SUITE.erl:402
  %% Unique:
  %%    _34
  _62 = match_fail `badmatch`, _34

  %% Unique:
  %%    _62
  _189 = succeeded:body _62
  br ^1

96:
  %% bs_construct_SUITE.erl:401
  %% Unique:
  %%    _33
  _63 = match_fail `badmatch`, _33

  %% Unique:
  %%    _63
  _192 = succeeded:body _63
  br ^1

93:
  %% bs_construct_SUITE.erl:400
  %% Unique:
  %%    _32
  _64 = match_fail `badmatch`, _32

  %% Unique:
  %%    _64
  _195 = succeeded:body _64
  br ^1

90:
  %% bs_construct_SUITE.erl:399
  %% Unique:
  %%    _31
  _65 = match_fail `badmatch`, _31

  %% Unique:
  %%    _65
  _198 = succeeded:body _65
  br ^1

86:
  %% bs_construct_SUITE.erl:398
  %% Unique:
  %%    _30
  _66 = match_fail `badmatch`, _30

  %% Unique:
  %%    _66
  _201 = succeeded:body _66
  br ^1

83:
  %% bs_construct_SUITE.erl:397
  %% Unique:
  %%    _29
  _67 = match_fail `badmatch`, _29

  %% Unique:
  %%    _67
  _204 = succeeded:body _67
  br ^1

80:
  %% bs_construct_SUITE.erl:396
  %% Unique:
  %%    _28
  _68 = match_fail `badmatch`, _28

  %% Unique:
  %%    _68
  _207 = succeeded:body _68
  br ^1

77:
  %% bs_construct_SUITE.erl:395
  %% Unique:
  %%    _27
  _69 = match_fail `badmatch`, _27

  %% Unique:
  %%    _69
  _210 = succeeded:body _69
  br ^1

73:
  %% bs_construct_SUITE.erl:394
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-in_guard/1-',1}}
  _70 = match_fail `function_clause`, _0

  %% Unique:
  %%    _70
  _211 = succeeded:body _70
  br ^1

1:
  _71 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _71
}

%% bs_construct_SUITE.erl:423
%% Counter = 50
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(8)
%%    _1 =>
%%     'a' | 1..64461
%%    _2 =>
%%     'b' | number(1, 215679573337205118357336120696157045389097155380324579848828881993728) | bitstring(8)
function `bs_construct_SUITE`:`in_guard_1`(_0, _1, _2) {
0:
  %% bs_construct_SUITE.erl:423
  %% Argument types:
  %%    _1 => 'a' | 1..64461
  %%    _2 => 'b' | number(1, 215679573337205118357336120696157045389097155380324579848828881993728) | bitstring(8)
  %% Aliased:
  %%    _1, 
  %%    _2
  %% Anno: #{unit => 16}
  _3 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `13`, `integer`, `[1,{segment,2}]`, _2, `3`

  %% Aliased:
  %%    _3
  _37 = succeeded:guard _3
  br _37, ^37, ^35

37:
  %% Argument types:
  %%    _3 => bitstring(16)
  %%    _0 => bitstring(8)
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _0
  _38 = bif:'=:=' _3, _0
  br _38, ^38, ^35

38:
  %% Result type:
  %%    1
  ret `1`

35:
  %% bs_construct_SUITE.erl:424
  %% Argument types:
  %%    _1 => 'a' | 1..64461
  %%    _2 => 'b' | number(1, 215679573337205118357336120696157045389097155380324579848828881993728) | bitstring(8)
  %% Aliased:
  %%    _1, 
  %%    _2
  %% Anno: #{unit => 8}
  _4 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `16`, `binary`, `[8,{segment,2}]`, _2, `all`

  %% Aliased:
  %%    _4
  _41 = succeeded:guard _4
  br _41, ^41, ^39

41:
  %% Argument types:
  %%    _4 => bitstring(8)
  %%    _0 => bitstring(8)
  %% Aliased:
  %%    _4
  %% Unique:
  %%    _0
  _42 = bif:'=:=' _4, _0
  br _42, ^42, ^39

42:
  %% Result type:
  %%    2
  ret `2`

39:
  %% bs_construct_SUITE.erl:425
  %% Argument types:
  %%    _1 => 'a' | 1..64461
  %%    _2 => 'b' | number(1, 215679573337205118357336120696157045389097155380324579848828881993728) | bitstring(8)
  %% Aliased:
  %%    _1, 
  %%    _2
  %% Anno: #{unit => 16}
  _5 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `14`, `float`, `[1,{segment,2}]`, _2, `64`, `binary`, `[1]`, `<<3:2>>`, `all`

  %% Aliased:
  %%    _5
  _45 = succeeded:guard _5
  br _45, ^45, ^34

45:
  %% Argument types:
  %%    _5 => bitstring(16)
  %%    _0 => bitstring(8)
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _0
  _46 = bif:'=:=' _5, _0
  br _46, ^46, ^34

46:
  %% Result type:
  %%    3
  ret `3`

34:
  %% Result type:
  %%    'nope'
  ret `nope`
}

%% bs_construct_SUITE.erl:429
%% Counter = 61
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(16)
%%    _1 =>
%%     0..511
%%    _2 =>
%%     'blurf' | {bitstring(16)}
function `bs_construct_SUITE`:`in_guard_2`(_0, _1, _2) {
0:
  %% bs_construct_SUITE.erl:429
  %% Argument types:
  %%    _1 => 0..511
  %% Unique:
  %%    _1
  %% Anno: #{unit => 16}
  _3 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `13`, `binary`, `[1]`, `<<0:3>>`, `all`

  %% Aliased:
  %%    _3
  _40 = succeeded:guard _3
  br _40, ^40, ^38

40:
  %% Argument types:
  %%    _3 => bitstring(16)
  %%    _0 => bitstring(16)
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _0
  _41 = bif:'=:=' _3, _0
  br _41, ^41, ^38

41:
  %% Result type:
  %%    1
  ret `1`

38:
  %% bs_construct_SUITE.erl:430
  %% Argument types:
  %%    _1 => 0..511
  %% Unique:
  %%    _1
  %% Anno: #{unit => 16}
  _4 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `16`

  %% Aliased:
  %%    _4
  _44 = succeeded:guard _4
  br _44, ^44, ^42

44:
  %% Argument types:
  %%    _4 => bitstring(16)
  %%    _0 => bitstring(16)
  %% Aliased:
  %%    _4
  %% Unique:
  %%    _0
  _45 = bif:'=:=' _4, _0
  br _45, ^45, ^42

45:
  %% Result type:
  %%    2
  ret `2`

42:
  %% bs_construct_SUITE.erl:431
  %% Argument types:
  %%    _1 => 0..511
  %% Unique:
  %%    _1
  %% Anno: #{unit => 16}
  _5 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `14`, `binary`, `[1]`, `<<3:2>>`, `all`

  %% Aliased:
  %%    _5
  _48 = succeeded:guard _5
  br _48, ^48, ^46

48:
  %% Argument types:
  %%    _5 => bitstring(16)
  %%    _0 => bitstring(16)
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _0
  _49 = bif:'=:=' _5, _0
  br _49, ^49, ^46

49:
  %% Result type:
  %%    3
  ret `3`

46:
  %% Argument types:
  %%    _1 => 0..511
  %% Unique:
  %%    _1
  _29 = put_tuple _1, `b`

  %% bs_construct_SUITE.erl:432
  %% Argument types:
  %%    _29 => {0..511, 'b'}
  %% Unique:
  %%    _29
  _6 = bif:'>' _29, `{0,1}`
  br _6, ^59, ^37

59:
  %% bs_construct_SUITE.erl:432
  %% Argument types:
  %%    _1 => 0..511
  %% Unique:
  %%    _1
  %% Anno: #{unit => 16}
  _7 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `14`, `binary`, `[1]`, `<<3:2>>`, `all`

  %% Aliased:
  %%    _7
  _51 = succeeded:guard _7
  br _51, ^55, ^37

55:
  %% Argument types:
  %%    _7 => bitstring(16)
  %% Aliased:
  %%    _7
  _30 = put_tuple _7

  %% bs_construct_SUITE.erl:432
  %% Argument types:
  %%    _30 => {bitstring(16)}
  %%    _2 => 'blurf' | {bitstring(16)}
  %% Unique:
  %%    _2, 
  %%    _30
  _8 = bif:'=:=' _30, _2
  br _8, ^53, ^37

53:
  %% Result type:
  %%    4
  ret `4`

37:
  %% Result type:
  %%    'nope'
  ret `nope`
}

%% bs_construct_SUITE.erl:435
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(32)
%%    _1 =>
%%     bitstring(8)
function `bs_construct_SUITE`:`in_guard_3`(_0, _1) {
0:
  %% bs_construct_SUITE.erl:435
  %% Argument types:
  %%    _1 => bitstring(8)
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true,unit => 8}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `binary`, `[1]`, `<<"*">>`, `all`

  %% Unique:
  %%    _2
  _11 = succeeded:guard _2
  br _11, ^11, ^9

11:
  %% Argument types:
  %%    _2 => bitstring(8)
  %%    _0 => bitstring(32)
  %% Unique:
  %%    _0, 
  %%    _2
  _12 = bif:'=:=' _2, _0
  br _12, ^10, ^9

10:
  %% Result type:
  %%    42
  ret `42`

9:
  %% Result type:
  %%    'nope'
  ret `nope`
}

%% bs_construct_SUITE.erl:438
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(4)
%%    _1 =>
%%     255
function `bs_construct_SUITE`:`in_guard_4`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => bitstring(4)
  %% Unique:
  %%    _0
  _12 = bif:'=:=' _0, `<<15:4>>`
  br _12, ^10, ^9

10:
  %% Result type:
  %%    'ok'
  ret `ok`

9:
  %% Result type:
  %%    'nope'
  ret `nope`
}

%% bs_construct_SUITE.erl:442
%% Counter = 18
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`in_guard_5`() {
0:
  %% Result type:
  %%    'nope'
  ret `nope`
}

%% bs_construct_SUITE.erl:445
%% Counter = 90
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`in_catch`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _36 = bif:is_list _0
  br _36, ^36, ^35

36:
  %% bs_construct_SUITE.erl:446
  %% Result type:
  %%    bitstring(8)
  _10 = call (`small`/2), `42`, `5`

  %% Aliased:
  %%    _10
  _37 = succeeded:body _10
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    _10 => bitstring(8)
  %% Aliased:
  %%    _10
  _81 = bif:'=:=' _10, `<<42,0,5>>`
  br _81, ^81, ^39

81:
  %% bs_construct_SUITE.erl:447
  %% Result type:
  %%    bitstring(8)
  _11 = call (`small`/2), `255`, `<<1,2,3,4,5,6,7,8,9>>`

  %% Aliased:
  %%    _11
  _40 = succeeded:body _11
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    _11 => bitstring(8)
  %% Aliased:
  %%    _11
  _79 = bif:'=:=' _11, `<<"ÿ">>`
  br _79, ^79, ^42

79:
  %% bs_construct_SUITE.erl:448
  %% Result type:
  %%    bitstring(8)
  _12 = call (`small`/2), `<<7,8,9,10>>`, `258`

  %% Aliased:
  %%    _12
  _43 = succeeded:body _12
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    _12 => bitstring(8)
  %% Aliased:
  %%    _12
  _77 = bif:'=:=' _12, `<<1,2>>`
  br _77, ^77, ^45

77:
  %% bs_construct_SUITE.erl:449
  %% Result type:
  %%    bitstring(8)
  _13 = call (`small`/2), `<<1,2,3,4,5>>`, `<<7,8,9,10>>`

  %% Aliased:
  %%    _13
  _46 = succeeded:body _13
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    _13 => bitstring(8)
  %% Aliased:
  %%    _13
  _75 = bif:'=:=' _13, `<<>>`
  br _75, ^75, ^48

75:
  %% bs_construct_SUITE.erl:451
  %% Result type:
  %%    bitstring(1)
  _14 = call (`small2`/2), `255`, `42`

  %% Aliased:
  %%    _14
  _49 = succeeded:body _14
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    _14 => bitstring(1)
  %% Aliased:
  %%    _14
  _73 = bif:'=:=' _14, `<<15,240,0,42>>`
  br _73, ^73, ^51

73:
  %% bs_construct_SUITE.erl:452
  %% Result type:
  %%    bitstring(1)
  _15 = call (`small2`/2), `<<1,2,3>>`, `7`

  %% Aliased:
  %%    _15
  _52 = succeeded:body _15
  br _52, ^52, ^1

52:
  %% Argument types:
  %%    _15 => bitstring(1)
  %% Aliased:
  %%    _15
  _16 = bs_start_match `new`, _15
  _85 = bs_ensure _16, `20`, `1`
  _86 = succeeded:guard _85
  br _86, ^84, ^54

84:
  %% Argument types:
  %%    _85 => bs_context(1)
  %% Aliased:
  %%    _16
  %% Anno: #{ensured => true}
  _18 = bs_match `string`, _85, `<<0,0,7:4>>`

  %% Aliased:
  %%    _18
  _56 = succeeded:guard _18
  br _56, ^56, ^54

56:
  %% Aliased:
  %%    _18
  _70 = bs_test_tail _18, `0`
  br _70, ^70, ^54

70:
  %% bs_construct_SUITE.erl:453
  %% Result type:
  %%    bitstring(1)
  _19 = call (`small2`/2), `300`, `<<1,2,3>>`

  %% Aliased:
  %%    _19
  _57 = succeeded:body _19
  br _57, ^57, ^1

57:
  %% Argument types:
  %%    _19 => bitstring(1)
  %% Aliased:
  %%    _19
  _20 = bs_start_match `new`, _19
  _88 = bs_ensure _20, `12`, `1`
  _89 = succeeded:guard _88
  br _89, ^87, ^59

87:
  %% Argument types:
  %%    _88 => bs_context(1)
  %% Aliased:
  %%    _20
  %% Anno: #{ensured => true}
  _22 = bs_match `string`, _88, `<<18,12:4>>`

  %% Aliased:
  %%    _22
  _61 = succeeded:guard _22
  br _61, ^61, ^59

61:
  %% Aliased:
  %%    _22
  _67 = bs_test_tail _22, `0`
  br _67, ^67, ^59

67:
  %% bs_construct_SUITE.erl:454
  %% Result type:
  %%    bitstring(1)
  _23 = call (`small2`/2), `<<1>>`, `<<2>>`

  %% Aliased:
  %%    _23
  _62 = succeeded:body _23
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    _23 => bitstring(1)
  %% Aliased:
  %%    _23
  _65 = bif:'=:=' _23, `<<>>`
  br _65, ^65, ^64

65:
  %% Result type:
  %%    'ok'
  ret `ok`

64:
  %% bs_construct_SUITE.erl:454
  %% Aliased:
  %%    _23
  _24 = match_fail `badmatch`, _23

  %% Unique:
  %%    _24
  _66 = succeeded:body _24
  br ^1

59:
  %% bs_construct_SUITE.erl:453
  %% Aliased:
  %%    _19
  _25 = match_fail `badmatch`, _19

  %% Unique:
  %%    _25
  _69 = succeeded:body _25
  br ^1

54:
  %% bs_construct_SUITE.erl:452
  %% Aliased:
  %%    _15
  _26 = match_fail `badmatch`, _15

  %% Unique:
  %%    _26
  _72 = succeeded:body _26
  br ^1

51:
  %% bs_construct_SUITE.erl:451
  %% Aliased:
  %%    _14
  _27 = match_fail `badmatch`, _14

  %% Unique:
  %%    _27
  _74 = succeeded:body _27
  br ^1

48:
  %% bs_construct_SUITE.erl:449
  %% Aliased:
  %%    _13
  _28 = match_fail `badmatch`, _13

  %% Unique:
  %%    _28
  _76 = succeeded:body _28
  br ^1

45:
  %% bs_construct_SUITE.erl:448
  %% Aliased:
  %%    _12
  _29 = match_fail `badmatch`, _12

  %% Unique:
  %%    _29
  _78 = succeeded:body _29
  br ^1

42:
  %% bs_construct_SUITE.erl:447
  %% Aliased:
  %%    _11
  _30 = match_fail `badmatch`, _11

  %% Unique:
  %%    _30
  _80 = succeeded:body _30
  br ^1

39:
  %% bs_construct_SUITE.erl:446
  %% Aliased:
  %%    _10
  _31 = match_fail `badmatch`, _10

  %% Unique:
  %%    _31
  _82 = succeeded:body _31
  br ^1

35:
  %% bs_construct_SUITE.erl:445
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-in_catch/1-',1}}
  _32 = match_fail `function_clause`, _0

  %% Unique:
  %%    _32
  _83 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% bs_construct_SUITE.erl:457
%% Counter = 79
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42..255 | bitstring(8)
%%    _1 =>
%%     5..258 | bitstring(8)
function `bs_construct_SUITE`:`small`(_0, _1) {
0:
  br ^78

78:
  _28 = new_try_tag `'catch'`
  br _28, ^26, ^27

26:
  %% bs_construct_SUITE.erl:459
  %% Argument types:
  %%    _0 => 42..255 | bitstring(8)
  %% Aliased:
  %%    _0
  %% Anno: #{unit => 8}
  _19 = bs_create_bin `integer`, `[1,{segment,1}]`, _0, `8`

  %% Aliased:
  %%    _19
  _30 = succeeded:body _19
  br _30, ^30, ^27

30:
  br ^25

27:
  %% Unique:
  %%    _28
  _33 = landingpad `'catch'`, _28

  %% Aliased:
  %%    _33
  _31 = extract _33, `0`
  br ^25

25:
  _34 = phi { _31, ^27 }, { _19, ^30 }

  %% Aliased:
  %%    _34
  %% Unique:
  %%    _28
  _2 = catch_end _28, _34

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _40 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _40, ^37, ^36

37:
  br ^35

36:
  br ^35

35:
  _4 = phi { _2, ^36 }, { `<<>>`, ^37 }
  _46 = new_try_tag `'catch'`
  br _46, ^44, ^45

44:
  %% bs_construct_SUITE.erl:467
  %% Argument types:
  %%    _1 => 5..258 | bitstring(8)
  %% Aliased:
  %%    _1
  %% Anno: #{unit => 16}
  _21 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `16`

  %% Aliased:
  %%    _21
  _48 = succeeded:body _21
  br _48, ^48, ^45

48:
  br ^43

45:
  %% Unique:
  %%    _46
  _51 = landingpad `'catch'`, _46

  %% Aliased:
  %%    _51
  _49 = extract _51, `0`
  br ^43

43:
  _52 = phi { _49, ^45 }, { _21, ^48 }

  %% Aliased:
  %%    _52
  %% Unique:
  %%    _46
  _6 = catch_end _46, _52

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _58 = is_tagged_tuple _6, `2`, `'EXIT'`
  br _58, ^55, ^54

55:
  br ^53

54:
  br ^53

53:
  _8 = phi { _6, ^54 }, { `<<>>`, ^55 }

  %% bs_construct_SUITE.erl:474
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4, 
  %%    _8
  %% Anno: #{first_fragment_dies => true,unit => 8}
  _22 = bs_create_bin `append`, `[8,{segment,1}]`, _4, `all`, `binary`, `[8,{segment,2}]`, _8, `all`

  %% Aliased:
  %%    _22
  _61 = succeeded:body _22
  br _61, ^61, ^1

61:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _22
  ret _22

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% bs_construct_SUITE.erl:476
%% Counter = 79
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     255..300 | bitstring(8)
%%    _1 =>
%%     7..42 | bitstring(8)
function `bs_construct_SUITE`:`small2`(_0, _1) {
0:
  br ^78

78:
  _28 = new_try_tag `'catch'`
  br _28, ^26, ^27

26:
  %% bs_construct_SUITE.erl:478
  %% Argument types:
  %%    _0 => 255..300 | bitstring(8)
  %% Aliased:
  %%    _0
  %% Anno: #{unit => 4}
  _19 = bs_create_bin `integer`, `[1,{segment,1}]`, _0, `12`

  %% Aliased:
  %%    _19
  _30 = succeeded:body _19
  br _30, ^30, ^27

30:
  br ^25

27:
  %% Unique:
  %%    _28
  _33 = landingpad `'catch'`, _28

  %% Aliased:
  %%    _33
  _31 = extract _33, `0`
  br ^25

25:
  _34 = phi { _31, ^27 }, { _19, ^30 }

  %% Aliased:
  %%    _34
  %% Unique:
  %%    _28
  _2 = catch_end _28, _34

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _40 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _40, ^37, ^36

37:
  br ^35

36:
  br ^35

35:
  _4 = phi { _2, ^36 }, { `<<>>`, ^37 }
  _46 = new_try_tag `'catch'`
  br _46, ^44, ^45

44:
  %% bs_construct_SUITE.erl:486
  %% Argument types:
  %%    _1 => 7..42 | bitstring(8)
  %% Aliased:
  %%    _1
  %% Anno: #{unit => 4}
  _21 = bs_create_bin `integer`, `[1,{segment,1}]`, _1, `20`

  %% Aliased:
  %%    _21
  _48 = succeeded:body _21
  br _48, ^48, ^45

48:
  br ^43

45:
  %% Unique:
  %%    _46
  _51 = landingpad `'catch'`, _46

  %% Aliased:
  %%    _51
  _49 = extract _51, `0`
  br ^43

43:
  _52 = phi { _49, ^45 }, { _21, ^48 }

  %% Aliased:
  %%    _52
  %% Unique:
  %%    _46
  _6 = catch_end _46, _52

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _58 = is_tagged_tuple _6, `2`, `'EXIT'`
  br _58, ^55, ^54

55:
  br ^53

54:
  br ^53

53:
  _8 = phi { _6, ^54 }, { `<<>>`, ^55 }

  %% bs_construct_SUITE.erl:493
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4, 
  %%    _8
  %% Anno: #{first_fragment_dies => true,unit => 1}
  _22 = bs_create_bin `append`, `[1,{segment,1}]`, _4, `all`, `binary`, `[1,{segment,2}]`, _8, `all`

  %% Aliased:
  %%    _22
  _61 = succeeded:body _22
  br _61, ^61, ^1

61:
  %% Result type:
  %%    bitstring(1)
  %% Aliased:
  %%    _22
  ret _22

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% bs_construct_SUITE.erl:495
%% Counter = 204
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`nasty_literals`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _65 = bif:is_list _0
  br _65, ^65, ^64

65:
  %% bs_construct_SUITE.erl:496
  _24 = call (`erlang`:`system_info`/1), `endian`

  %% Aliased:
  %%    _24
  _66 = succeeded:body _24
  br _66, ^66, ^1

66:
  switch _24, ^68, [
    { `big`, ^83 },
    { `little`, ^84 }
  ]

84:
  %% bs_construct_SUITE.erl:500
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _4 = bs_create_bin `integer`, `[1,native,{segment,1}]`, `42`, `16`

  %% Aliased:
  %%    _4
  _76 = succeeded:body _4
  br _76, ^76, ^1

76:
  %% bs_construct_SUITE.erl:500
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _4
  _5 = call (`id`/1), _4

  %% Aliased:
  %%    _5
  _77 = succeeded:body _5
  br _77, ^77, ^1

77:
  %% bs_construct_SUITE.erl:500
  %% Aliased:
  %%    _5
  _26 = call (`erlang`:`binary_to_list`/1), _5

  %% Aliased:
  %%    _26
  _78 = succeeded:body _26
  br _78, ^78, ^1

78:
  %% Argument types:
  %%    _26 => list(any())
  %% Aliased:
  %%    _26
  _81 = bif:'=:=' _26, `[42,0]`
  br _81, ^67, ^80

80:
  %% bs_construct_SUITE.erl:500
  %% Aliased:
  %%    _26
  _48 = match_fail `badmatch`, _26

  %% Unique:
  %%    _48
  _82 = succeeded:body _48
  br ^1

83:
  %% bs_construct_SUITE.erl:498
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _1 = bs_create_bin `integer`, `[1,native,{segment,1}]`, `42`, `16`

  %% Aliased:
  %%    _1
  _69 = succeeded:body _1
  br _69, ^69, ^1

69:
  %% bs_construct_SUITE.erl:498
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _1
  _2 = call (`id`/1), _1

  %% Aliased:
  %%    _2
  _70 = succeeded:body _2
  br _70, ^70, ^1

70:
  %% bs_construct_SUITE.erl:498
  %% Aliased:
  %%    _2
  _25 = call (`erlang`:`binary_to_list`/1), _2

  %% Aliased:
  %%    _25
  _71 = succeeded:body _25
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    _25 => list(any())
  %% Aliased:
  %%    _25
  _74 = bif:'=:=' _25, `[0,42]`
  br _74, ^67, ^73

67:
  %% bs_construct_SUITE.erl:503
  %% Argument types:
  %%    
  %% Anno: #{unit => 16}
  _8 = bs_create_bin `binary`, `[1]`, `<<1,2,3>>`, `all`, `integer`, `[1,{segment,4}]`, `0`, `10000000`, `binary`, `[1]`, `<<4,5,6>>`, `all`

  %% Aliased:
  %%    _8
  _86 = succeeded:body _8
  br _86, ^86, ^1

86:
  %% bs_construct_SUITE.erl:503
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _8
  Bin0 = call (`id`/1), _8

  %% Aliased:
  %%    Bin0
  _87 = succeeded:body Bin0
  br _87, ^87, ^1

87:
  %% bs_construct_SUITE.erl:504
  %% Argument types:
  %%    Bin0 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    Bin0
  _27 = bif:size Bin0

  %% Unique:
  %%    _27
  _88 = succeeded:body _27
  br _88, ^88, ^1

88:
  %% Argument types:
  %%    _27 => integer()
  %% Unique:
  %%    _27
  _152 = bif:'=:=' _27, `1250006`
  br _152, ^151, ^90

151:
  %% Argument types:
  %%    Bin0 => bitstring(4)
  %% Aliased:
  %%    Bin0
  _28 = bs_start_match `new`, Bin0
  _188 = bs_ensure _28, `10000024`, `1`
  _189 = succeeded:guard _188
  br _189, ^187, ^92

187:
  %% Argument types:
  %%    _188 => bs_context(4)
  %% Aliased:
  %%    _28
  %% Anno: #{ensured => true}
  _29 = bs_match `string`, _188, `<<1,2,3>>`

  %% Aliased:
  %%    _29
  _93 = succeeded:guard _29
  br _93, ^93, ^92

93:
  %% bs_construct_SUITE.erl:505
  %% Argument types:
  %%    _29 => bs_context(4)
  %% Aliased:
  %%    _29
  %% Anno: #{ensured => true}
  _30 = bs_match `integer`, _29, `[unsigned,big]`, `10000000`, `1`

  %% Aliased:
  %%    _30
  _94 = succeeded:guard _30
  br _94, ^94, ^92

94:
  %% Aliased:
  %%    _30
  _31 = bs_extract _30

  %% Argument types:
  %%    _31 => 0..'+inf'
  %% Unique:
  %%    _31
  _148 = bif:'=:=' _31, `0`
  br _148, ^147, ^92

147:
  _191 = bs_ensure _30, `24`, `1`
  _192 = succeeded:guard _191
  br _192, ^190, ^92

190:
  %% Argument types:
  %%    _191 => bs_context(4)
  %% Aliased:
  %%    _30
  %% Anno: #{ensured => true}
  _32 = bs_match `string`, _191, `<<4,5,6>>`

  %% Aliased:
  %%    _32
  _95 = succeeded:guard _32
  br _95, ^95, ^92

95:
  %% Aliased:
  %%    _32
  _146 = bs_test_tail _32, `0`
  br _146, ^146, ^92

146:
  %% bs_construct_SUITE.erl:507
  %% Argument types:
  %%    
  %% Anno: #{unit => 32}
  _13 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `10000000`, `binary`, `[1]`, `<<7,8>>`, `all`, `integer`, `[1,{segment,4}]`, `-1`, `10000000`, `binary`, `[1]`, `<<"\t\n">>`, `all`, `integer`, `[1,{segment,7}]`, `0`, `10000000`

  %% Aliased:
  %%    _13
  _96 = succeeded:body _13
  br _96, ^96, ^1

96:
  %% bs_construct_SUITE.erl:507
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _13
  Bin1 = call (`id`/1), _13

  %% Aliased:
  %%    Bin1
  _97 = succeeded:body Bin1
  br _97, ^97, ^1

97:
  %% bs_construct_SUITE.erl:508
  %% Argument types:
  %%    Bin1 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    Bin1
  _33 = bif:size Bin1

  %% Unique:
  %%    _33
  _98 = succeeded:body _33
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    _33 => integer()
  %% Unique:
  %%    _33
  _144 = bif:'=:=' _33, `3750004`
  br _144, ^143, ^100

143:
  %% Argument types:
  %%    Bin1 => bitstring(4)
  %% Aliased:
  %%    Bin1
  _34 = bs_start_match `new`, Bin1
  _194 = bs_ensure _34, `10000000`, `1`
  _195 = succeeded:guard _194
  br _195, ^193, ^102

193:
  %% bs_construct_SUITE.erl:509
  %% Argument types:
  %%    _194 => bs_context(4)
  %% Aliased:
  %%    _34
  %% Anno: #{ensured => true}
  _35 = bs_match `integer`, _194, `[unsigned,big]`, `10000000`, `1`

  %% Aliased:
  %%    _35
  _103 = succeeded:guard _35
  br _103, ^103, ^102

103:
  %% Aliased:
  %%    _35
  _36 = bs_extract _35

  %% Argument types:
  %%    _36 => 0..'+inf'
  %% Unique:
  %%    _36
  _140 = bif:'=:=' _36, `0`
  br _140, ^139, ^102

139:
  _197 = bs_ensure _35, `10000016`, `1`
  _198 = succeeded:guard _197
  br _198, ^196, ^102

196:
  %% Argument types:
  %%    _197 => bs_context(4)
  %% Aliased:
  %%    _35
  %% Anno: #{ensured => true}
  _37 = bs_match `string`, _197, `<<7,8>>`

  %% Aliased:
  %%    _37
  _104 = succeeded:guard _37
  br _104, ^104, ^102

104:
  %% bs_construct_SUITE.erl:509
  %% Argument types:
  %%    _37 => bs_context(4)
  %% Aliased:
  %%    _37
  %% Anno: #{ensured => true}
  _38 = bs_match `integer`, _37, `[signed,big]`, `10000000`, `1`

  %% Aliased:
  %%    _38
  _105 = succeeded:guard _38
  br _105, ^105, ^102

105:
  %% Aliased:
  %%    _38
  _39 = bs_extract _38

  %% Argument types:
  %%    _39 => integer()
  %% Unique:
  %%    _39
  _138 = bif:'=:=' _39, `-1`
  br _138, ^137, ^102

137:
  _200 = bs_ensure _38, `10000016`, `1`
  _201 = succeeded:guard _200
  br _201, ^199, ^102

199:
  %% Argument types:
  %%    _200 => bs_context(4)
  %% Aliased:
  %%    _38
  %% Anno: #{ensured => true}
  _40 = bs_match `string`, _200, `<<"\t\n">>`

  %% Aliased:
  %%    _40
  _106 = succeeded:guard _40
  br _106, ^106, ^102

106:
  %% bs_construct_SUITE.erl:509
  %% Argument types:
  %%    _40 => bs_context(4)
  %% Aliased:
  %%    _40
  %% Anno: #{ensured => true}
  _41 = bs_match `integer`, _40, `[unsigned,big]`, `10000000`, `1`

  %% Aliased:
  %%    _41
  _107 = succeeded:guard _41
  br _107, ^107, ^102

107:
  %% Aliased:
  %%    _41
  _42 = bs_extract _41

  %% Argument types:
  %%    _42 => 0..'+inf'
  %% Unique:
  %%    _42
  _136 = bif:'=:=' _42, `0`
  br _136, ^135, ^102

135:
  %% Aliased:
  %%    _41
  _134 = bs_test_tail _41, `0`
  br _134, ^134, ^102

134:
  %% bs_construct_SUITE.erl:511
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _43 = call (`id`/1), `<<255,255,0,0,0>>`

  %% Aliased:
  %%    _43
  _108 = succeeded:body _43
  br _108, ^108, ^1

108:
  %% Argument types:
  %%    _43 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _43
  _132 = bif:'=:=' _43, `<<255,255,0,0,0>>`
  br _132, ^132, ^110

132:
  %% bs_construct_SUITE.erl:515
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _51 = call (`id`/1), `<<0,0,0,0,0,0,0,0,7,119,127,255,247,119,127,255,247,119,127,255,247,119,127,
   255,247,119,127,255,247,119,127,255,15:4>>`

  %% Aliased:
  %%    _51
  _111 = succeeded:body _51
  br _111, ^185, ^1

185:
  br ^202

202:
  _116 = new_try_tag `'try'`
  br _116, ^115, ^113

115:
  %% bs_construct_SUITE.erl:519
  %% Argument types:
  %%    
  %% Anno: #{unit => 256}
  _20 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `16777216`

  %% Aliased:
  %%    _20
  _117 = succeeded:body _20
  br _117, ^117, ^113

117:
  %% bs_construct_SUITE.erl:519
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _20
  _53 = call (`id`/1), _20

  %% Aliased:
  %%    _53
  _118 = succeeded:body _53
  br _118, ^118, ^113

118:
  %% Unique:
  %%    _116
  _121 = kill_try_tag _116
  br ^184

113:
  %% Unique:
  %%    _116
  _119 = landingpad `'try'`, _116

  %% Unique:
  %%    _116
  _120 = kill_try_tag _116
  br ^184

184:
  br ^203

203:
  _126 = new_try_tag `'try'`
  br _126, ^125, ^123

125:
  %% bs_construct_SUITE.erl:520
  %% Argument types:
  %%    
  %% Anno: #{unit => 256}
  _22 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `33554432`

  %% Aliased:
  %%    _22
  _127 = succeeded:body _22
  br _127, ^127, ^123

127:
  %% bs_construct_SUITE.erl:520
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _22
  _55 = call (`id`/1), _22

  %% Aliased:
  %%    _55
  _128 = succeeded:body _55
  br _128, ^128, ^123

128:
  %% Unique:
  %%    _126
  _131 = kill_try_tag _126
  br ^124

123:
  %% Unique:
  %%    _126
  _129 = landingpad `'try'`, _126

  %% Unique:
  %%    _126
  _130 = kill_try_tag _126
  br ^124

124:
  %% Result type:
  %%    'ok'
  ret `ok`

110:
  %% bs_construct_SUITE.erl:511
  %% Aliased:
  %%    _43
  _56 = match_fail `badmatch`, _43

  %% Unique:
  %%    _56
  _133 = succeeded:body _56
  br ^1

102:
  %% bs_construct_SUITE.erl:509
  %% Aliased:
  %%    Bin1
  _57 = match_fail `badmatch`, Bin1

  %% Unique:
  %%    _57
  _142 = succeeded:body _57
  br ^1

100:
  %% bs_construct_SUITE.erl:508
  %% Unique:
  %%    _33
  _58 = match_fail `badmatch`, _33

  %% Unique:
  %%    _58
  _145 = succeeded:body _58
  br ^1

92:
  %% bs_construct_SUITE.erl:505
  %% Aliased:
  %%    Bin0
  _59 = match_fail `badmatch`, Bin0

  %% Unique:
  %%    _59
  _150 = succeeded:body _59
  br ^1

90:
  %% bs_construct_SUITE.erl:504
  %% Unique:
  %%    _27
  _60 = match_fail `badmatch`, _27

  %% Unique:
  %%    _60
  _153 = succeeded:body _60
  br ^1

73:
  %% bs_construct_SUITE.erl:498
  %% Aliased:
  %%    _25
  _49 = match_fail `badmatch`, _25

  %% Unique:
  %%    _49
  _75 = succeeded:body _49
  br ^1

68:
  %% bs_construct_SUITE.erl:496
  %% Aliased:
  %%    _24
  _50 = match_fail `case_clause`, _24

  %% Unique:
  %%    _50
  _85 = succeeded:body _50
  br ^1

64:
  %% bs_construct_SUITE.erl:495
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-nasty_literals/1-',1}}
  _61 = match_fail `function_clause`, _0

  %% Unique:
  %%    _61
  _154 = succeeded:body _61
  br ^1

1:
  _62 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _62
}

%% bs_construct_SUITE.erl:548
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
function `bs_construct_SUITE`:`nonliteral`(_0) {
0:
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _0
  ret _0
}

%% bs_construct_SUITE.erl:550
%% Counter = 570
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`coerce_to_float`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _433 = bif:is_list _0
  br _433, ^557, ^432

557:
  %% bs_construct_SUITE.erl:551
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _16 = call (`nonliteral`/1), `0`

  %% Unique:
  %%    _16
  _434 = succeeded:body _16
  br _434, ^434, ^1

434:
  %% bs_construct_SUITE.erl:551
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-0-'`/1) => fun((_) -> 'true')
  %%    _16 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _16
  _374 = call (`'-coerce_to_float/1-fun-0-'`/1), _16

  %% Unique:
  %%    _374
  _435 = succeeded:body _374
  br _435, ^558, ^1

558:
  %% bs_construct_SUITE.erl:552
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _42 = call (`nonliteral`/1), `-1`

  %% Unique:
  %%    _42
  _436 = succeeded:body _42
  br _436, ^436, ^1

436:
  %% bs_construct_SUITE.erl:552
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-1-'`/1) => fun((_) -> 'true')
  %%    _42 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _42
  _378 = call (`'-coerce_to_float/1-fun-1-'`/1), _42

  %% Unique:
  %%    _378
  _437 = succeeded:body _378
  br _437, ^559, ^1

559:
  %% bs_construct_SUITE.erl:553
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _76 = call (`nonliteral`/1), `1`

  %% Unique:
  %%    _76
  _447 = succeeded:body _76
  br _447, ^447, ^1

447:
  %% bs_construct_SUITE.erl:553
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-2-'`/1) => fun((_) -> 'true')
  %%    _76 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _76
  _382 = call (`'-coerce_to_float/1-fun-2-'`/1), _76

  %% Unique:
  %%    _382
  _448 = succeeded:body _382
  br _448, ^560, ^1

560:
  %% bs_construct_SUITE.erl:554
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _101 = call (`nonliteral`/1), `42`

  %% Unique:
  %%    _101
  _449 = succeeded:body _101
  br _449, ^449, ^1

449:
  %% bs_construct_SUITE.erl:554
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-3-'`/1) => fun((_) -> 'true')
  %%    _101 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _101
  _386 = call (`'-coerce_to_float/1-fun-3-'`/1), _101

  %% Unique:
  %%    _386
  _450 = succeeded:body _386
  br _450, ^561, ^1

561:
  %% bs_construct_SUITE.erl:555
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _126 = call (`nonliteral`/1), `255`

  %% Unique:
  %%    _126
  _451 = succeeded:body _126
  br _451, ^451, ^1

451:
  %% bs_construct_SUITE.erl:555
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-4-'`/1) => fun((_) -> 'true')
  %%    _126 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _126
  _390 = call (`'-coerce_to_float/1-fun-4-'`/1), _126

  %% Unique:
  %%    _390
  _452 = succeeded:body _390
  br _452, ^562, ^1

562:
  %% bs_construct_SUITE.erl:556
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _152 = call (`nonliteral`/1), `-255`

  %% Unique:
  %%    _152
  _453 = succeeded:body _152
  br _453, ^453, ^1

453:
  %% bs_construct_SUITE.erl:556
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-5-'`/1) => fun((_) -> 'true')
  %%    _152 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _152
  _394 = call (`'-coerce_to_float/1-fun-5-'`/1), _152

  %% Unique:
  %%    _394
  _454 = succeeded:body _394
  br _454, ^563, ^1

563:
  %% bs_construct_SUITE.erl:557
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _186 = call (`nonliteral`/1), `38474`

  %% Unique:
  %%    _186
  _464 = succeeded:body _186
  br _464, ^464, ^1

464:
  %% bs_construct_SUITE.erl:557
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-6-'`/1) => fun((_) -> 'true')
  %%    _186 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _186
  _398 = call (`'-coerce_to_float/1-fun-6-'`/1), _186

  %% Unique:
  %%    _398
  _465 = succeeded:body _398
  br _465, ^564, ^1

564:
  %% bs_construct_SUITE.erl:558
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _211 = call (`nonliteral`/1), `65504`

  %% Unique:
  %%    _211
  _466 = succeeded:body _211
  br _466, ^466, ^1

466:
  %% bs_construct_SUITE.erl:558
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-7-'`/1) => fun((_) -> 'true')
  %%    _211 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _211
  _402 = call (`'-coerce_to_float/1-fun-7-'`/1), _211

  %% Unique:
  %%    _402
  _467 = succeeded:body _402
  br _467, ^565, ^1

565:
  %% bs_construct_SUITE.erl:559
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _237 = call (`nonliteral`/1), `-65504`

  %% Unique:
  %%    _237
  _468 = succeeded:body _237
  br _468, ^468, ^1

468:
  %% bs_construct_SUITE.erl:559
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-8-'`/1) => fun((_) -> 'true')
  %%    _237 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _237
  _406 = call (`'-coerce_to_float/1-fun-8-'`/1), _237

  %% Unique:
  %%    _406
  _469 = succeeded:body _406
  br _469, ^566, ^1

566:
  %% bs_construct_SUITE.erl:560
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _267 = call (`nonliteral`/1), `387498738948729893849444444443`

  %% Unique:
  %%    _267
  _479 = succeeded:body _267
  br _479, ^479, ^1

479:
  %% bs_construct_SUITE.erl:560
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-9-'`/1) => fun((_) -> 'true')
  %%    _267 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _267
  _409 = call (`'-coerce_to_float/1-fun-9-'`/1), _267

  %% Unique:
  %%    _409
  _480 = succeeded:body _409
  br _480, ^567, ^1

567:
  %% bs_construct_SUITE.erl:561
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _286 = call (`nonliteral`/1), `-37489378937773899999999999999993`

  %% Unique:
  %%    _286
  _481 = succeeded:body _286
  br _481, ^481, ^1

481:
  %% bs_construct_SUITE.erl:561
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-10-'`/1) => fun((_) -> 'true')
  %%    _286 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _286
  _412 = call (`'-coerce_to_float/1-fun-10-'`/1), _286

  %% Unique:
  %%    _412
  _482 = succeeded:body _412
  br _482, ^568, ^1

568:
  %% bs_construct_SUITE.erl:562
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _306 = call (`nonliteral`/1), `298748888888888888888888888883478264866528467367364766666666666666663`

  %% Unique:
  %%    _306
  _489 = succeeded:body _306
  br _489, ^489, ^1

489:
  %% bs_construct_SUITE.erl:562
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-11-'`/1) => fun((_) -> 'true')
  %%    _306 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _306
  _414 = call (`'-coerce_to_float/1-fun-11-'`/1), _306

  %% Unique:
  %%    _414
  _490 = succeeded:body _414
  br _490, ^569, ^1

569:
  %% bs_construct_SUITE.erl:563
  %% Result type:
  %%    -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  _318 = call (`nonliteral`/1), `-367546729879999999999947826486652846736736476555566666663`

  %% Unique:
  %%    _318
  _491 = succeeded:body _318
  br _491, ^491, ^1

491:
  %% bs_construct_SUITE.erl:563
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-coerce_to_float/1-fun-12-'`/1) => fun((_) -> 'true')
  %%    _318 => -367546729879999999999947826486652846736736476555566666663..298748888888888888888888888883478264866528467367364766666666666666663
  %% Unique:
  %%    _318
  _416 = call (`'-coerce_to_float/1-fun-12-'`/1), _318

  %% Unique:
  %%    _416
  _492 = succeeded:body _416
  br _492, ^496, ^1

496:
  %% Result type:
  %%    'ok'
  ret `ok`

432:
  %% bs_construct_SUITE.erl:550
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-coerce_to_float/1-',1}}
  _429 = match_fail `function_clause`, _0

  %% Unique:
  %%    _429
  _532 = succeeded:body _429
  br ^1

1:
  _430 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _430
}

%% bs_construct_SUITE.erl:566
%% Counter = 122
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`side_effect`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _29 = bif:is_list _0
  br _29, ^117, ^28

117:
  br ^119

119:
  _33 = new_try_tag `'catch'`
  br _33, ^31, ^32

31:
  %% bs_construct_SUITE.erl:567
  %% Result type:
  %%    'ok'
  _19 = call (`side_effect_1`/1), `a`

  %% Unique:
  %%    _19
  _35 = succeeded:body _19
  br _35, ^35, ^32

35:
  br ^30

32:
  %% Unique:
  %%    _33
  _38 = landingpad `'catch'`, _33

  %% Aliased:
  %%    _38
  _36 = extract _38, `0`
  br ^30

30:
  _39 = phi { _36, ^32 }, { `ok`, ^35 }

  %% Aliased:
  %%    _39
  %% Unique:
  %%    _33
  _1 = catch_end _33, _39

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _82 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _82, ^79, ^41

79:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _9 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _76 = is_tagged_tuple _9, `2`, `badarg`
  br _76, ^118, ^41

118:
  br ^120

120:
  _45 = new_try_tag `'catch'`
  br _45, ^43, ^44

43:
  %% bs_construct_SUITE.erl:568
  %% Result type:
  %%    'ok'
  _21 = call (`side_effect_1`/1), `<<>>`

  %% Unique:
  %%    _21
  _47 = succeeded:body _21
  br _47, ^47, ^44

47:
  br ^42

44:
  %% Unique:
  %%    _45
  _50 = landingpad `'catch'`, _45

  %% Aliased:
  %%    _50
  _48 = extract _50, `0`
  br ^42

42:
  _51 = phi { _48, ^44 }, { `ok`, ^47 }

  %% Aliased:
  %%    _51
  %% Unique:
  %%    _45
  _3 = catch_end _45, _51

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _69 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _69, ^66, ^53

66:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _13 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _63 = is_tagged_tuple _13, `2`, `badarg`
  br _63, ^60, ^53

60:
  %% bs_construct_SUITE.erl:569
  %% Result type:
  %%    'ok'
  _17 = call (`side_effect_1`/1), `42`

  %% Unique:
  %%    _17
  _54 = succeeded:body _17
  br _54, ^121, ^1

121:
  ret _17

53:
  %% bs_construct_SUITE.erl:568
  %% Aliased:
  %%    _3
  _23 = match_fail `badmatch`, _3

  %% Unique:
  %%    _23
  _72 = succeeded:body _23
  br ^1

41:
  %% bs_construct_SUITE.erl:567
  %% Aliased:
  %%    _1
  _24 = match_fail `badmatch`, _1

  %% Unique:
  %%    _24
  _85 = succeeded:body _24
  br ^1

28:
  %% bs_construct_SUITE.erl:566
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-side_effect/1-',1}}
  _25 = match_fail `function_clause`, _0

  %% Unique:
  %%    _25
  _86 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% bs_construct_SUITE.erl:572
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 42 | bitstring(256,appendable)
function `bs_construct_SUITE`:`side_effect_1`(_0) {
0:
  %% bs_construct_SUITE.erl:573
  %% Argument types:
  %%    _0 => 'a' | 42 | bitstring(256,appendable)
  %% Aliased:
  %%    _0
  %% Anno: #{unit => 1}
  _2 = bs_create_bin `integer`, `[1,{segment,1}]`, _0, `17`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:578
%% Counter = 368
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`opt`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _97 = bif:is_list _0
  br _97, ^97, ^96

97:
  %% bs_construct_SUITE.erl:579
  %% Result type:
  %%    42
  _42 = call (`otp_7029`/1), `{otp_7029,<<>>,42}`

  %% Unique:
  %%    _42
  _98 = succeeded:body _42
  br _98, ^262, ^1

262:
  %% bs_construct_SUITE.erl:581
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _43 = call (`id`/1), `<<1,3,65>>`

  %% Aliased:
  %%    _43
  _101 = succeeded:body _43
  br _101, ^101, ^1

101:
  %% Argument types:
  %%    _43 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _43
  _260 = bif:'=:=' _43, `<<1,3,65>>`
  br _260, ^260, ^103

260:
  %% bs_construct_SUITE.erl:582
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _44 = call (`id`/1), `<<1,66,3>>`

  %% Aliased:
  %%    _44
  _104 = succeeded:body _44
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    _44 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _44
  _258 = bif:'=:=' _44, `<<1,66,3>>`
  br _258, ^258, ^106

258:
  %% bs_construct_SUITE.erl:583
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _45 = call (`id`/1), `<<1,65,136,0,0>>`

  %% Aliased:
  %%    _45
  _107 = succeeded:body _45
  br _107, ^107, ^1

107:
  %% Argument types:
  %%    _45 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _45
  _256 = bif:'=:=' _45, `<<1,65,136,0,0>>`
  br _256, ^256, ^109

256:
  %% bs_construct_SUITE.erl:584
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _46 = call (`id`/1), `<<1,64,8,0,0,0,0,0,0>>`

  %% Aliased:
  %%    _46
  _110 = succeeded:body _46
  br _110, ^110, ^1

110:
  %% Argument types:
  %%    _46 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _46
  _254 = bif:'=:=' _46, `<<1,64,8,0,0,0,0,0,0>>`
  br _254, ^254, ^112

254:
  %% bs_construct_SUITE.erl:585
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _47 = call (`id`/1), `<<1,0,0,0,0,0,0,8,64>>`

  %% Aliased:
  %%    _47
  _113 = succeeded:body _47
  br _113, ^113, ^1

113:
  %% Argument types:
  %%    _47 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _47
  _252 = bif:'=:=' _47, `<<1,0,0,0,0,0,0,8,64>>`
  br _252, ^252, ^115

252:
  %% bs_construct_SUITE.erl:588
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _48 = call (`id`/1), `<<0,1,2,3,4,5>>`

  %% Aliased:
  %%    _48
  _116 = succeeded:body _48
  br _116, ^116, ^1

116:
  %% Argument types:
  %%    _48 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _48
  _250 = bif:'=:=' _48, `<<0,1,2,3,4,5>>`
  br _250, ^250, ^118

250:
  %% bs_construct_SUITE.erl:589
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _49 = call (`id`/1), `<<1,2,3,4,5,19>>`

  %% Aliased:
  %%    _49
  _119 = succeeded:body _49
  br _119, ^119, ^1

119:
  %% Argument types:
  %%    _49 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _49
  _248 = bif:'=:=' _49, `<<1,2,3,4,5,19>>`
  br _248, ^248, ^121

248:
  %% bs_construct_SUITE.erl:590
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _50 = call (`id`/1), `<<1,2,3,42>>`

  %% Aliased:
  %%    _50
  _122 = succeeded:body _50
  br _122, ^122, ^1

122:
  %% Argument types:
  %%    _50 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _50
  _246 = bif:'=:=' _50, `<<1,2,3,42>>`
  br _246, ^356, ^124

356:
  br ^362

362:
  _128 = new_try_tag `'catch'`
  br _128, ^126, ^127

126:
  %% bs_construct_SUITE.erl:592
  _65 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _65
  _130 = succeeded:body _65
  br ^127

127:
  %% Unique:
  %%    _128
  _133 = landingpad `'catch'`, _128

  %% Aliased:
  %%    _133
  _131 = extract _133, `0`
  br ^125

125:
  %% Aliased:
  %%    _131
  %% Unique:
  %%    _128
  _19 = catch_end _128, _131

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _242 = is_tagged_tuple _19, `2`, `'EXIT'`
  br _242, ^357, ^136

357:
  br ^363

363:
  _140 = new_try_tag `'catch'`
  br _140, ^138, ^139

138:
  %% bs_construct_SUITE.erl:593
  _67 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _67
  _142 = succeeded:body _67
  br ^139

139:
  %% Unique:
  %%    _140
  _145 = landingpad `'catch'`, _140

  %% Aliased:
  %%    _145
  _143 = extract _145, `0`
  br ^137

137:
  %% Aliased:
  %%    _143
  %% Unique:
  %%    _140
  _22 = catch_end _140, _143

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _235 = is_tagged_tuple _22, `2`, `'EXIT'`
  br _235, ^358, ^148

358:
  br ^364

364:
  _152 = new_try_tag `'catch'`
  br _152, ^150, ^151

150:
  %% bs_construct_SUITE.erl:594
  _69 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _69
  _154 = succeeded:body _69
  br ^151

151:
  %% Unique:
  %%    _152
  _157 = landingpad `'catch'`, _152

  %% Aliased:
  %%    _157
  _155 = extract _157, `0`
  br ^149

149:
  %% Aliased:
  %%    _155
  %% Unique:
  %%    _152
  _24 = catch_end _152, _155

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _228 = is_tagged_tuple _24, `2`, `'EXIT'`
  br _228, ^359, ^160

359:
  br ^365

365:
  _164 = new_try_tag `'catch'`
  br _164, ^162, ^163

162:
  %% bs_construct_SUITE.erl:595
  _71 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _71
  _166 = succeeded:body _71
  br ^163

163:
  %% Unique:
  %%    _164
  _169 = landingpad `'catch'`, _164

  %% Aliased:
  %%    _169
  _167 = extract _169, `0`
  br ^161

161:
  %% Aliased:
  %%    _167
  %% Unique:
  %%    _164
  _26 = catch_end _164, _167

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _221 = is_tagged_tuple _26, `2`, `'EXIT'`
  br _221, ^360, ^172

360:
  br ^366

366:
  _176 = new_try_tag `'catch'`
  br _176, ^174, ^175

174:
  %% bs_construct_SUITE.erl:596
  %% Argument types:
  %%    
  %% Anno: #{first_fragment_dies => false,unit => 1}
  _73 = bs_create_bin `append`, `[8,{segment,1}]`, `<<23,56,0,2:7>>`, `all`

  %% Unique:
  %%    _73
  _178 = succeeded:body _73
  br _178, ^178, ^175

178:
  br ^173

175:
  %% Unique:
  %%    _176
  _181 = landingpad `'catch'`, _176

  %% Aliased:
  %%    _181
  _179 = extract _181, `0`
  br ^173

173:
  _182 = phi { _179, ^175 }, { _73, ^178 }

  %% Aliased:
  %%    _182
  %% Unique:
  %%    _176
  _28 = catch_end _176, _182

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _214 = is_tagged_tuple _28, `2`, `'EXIT'`
  br _214, ^361, ^184

361:
  br ^367

367:
  _188 = new_try_tag `'catch'`
  br _188, ^186, ^187

186:
  %% bs_construct_SUITE.erl:600
  _75 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _75
  _190 = succeeded:body _75
  br ^187

187:
  %% Unique:
  %%    _188
  _193 = landingpad `'catch'`, _188

  %% Aliased:
  %%    _193
  _191 = extract _193, `0`
  br ^185

185:
  %% Aliased:
  %%    _191
  %% Unique:
  %%    _188
  _32 = catch_end _188, _191

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _207 = is_tagged_tuple _32, `2`, `'EXIT'`
  br _207, ^204, ^196

204:
  %% bs_construct_SUITE.erl:602
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _63 = call (`id`/1), `false`

  %% Aliased:
  %%    _63
  _197 = succeeded:body _63
  br _197, ^197, ^1

197:
  %% Argument types:
  %%    
  switch _63, ^199, [
    { `false`, ^198 },
    { `true`, ^202 }
  ]

202:
  %% bs_construct_SUITE.erl:603
  %% Result type:
  %%    bitstring(8)
  _76 = call (`opt_dont_call_me`/0)

  %% Aliased:
  %%    _76
  _200 = succeeded:body _76
  br _200, ^198, ^1

198:
  %% Result type:
  %%    'ok'
  ret `ok`

199:
  %% bs_construct_SUITE.erl:602
  %% Aliased:
  %%    _63
  _77 = match_fail `case_clause`, _63

  %% Unique:
  %%    _77
  _203 = succeeded:body _77
  br ^1

196:
  %% bs_construct_SUITE.erl:600
  %% Aliased:
  %%    _32
  _78 = match_fail `badmatch`, _32

  %% Unique:
  %%    _78
  _210 = succeeded:body _78
  br ^1

184:
  %% bs_construct_SUITE.erl:596
  %% Aliased:
  %%    _28
  _79 = match_fail `badmatch`, _28

  %% Unique:
  %%    _79
  _217 = succeeded:body _79
  br ^1

172:
  %% bs_construct_SUITE.erl:595
  %% Aliased:
  %%    _26
  _80 = match_fail `badmatch`, _26

  %% Unique:
  %%    _80
  _224 = succeeded:body _80
  br ^1

160:
  %% bs_construct_SUITE.erl:594
  %% Aliased:
  %%    _24
  _81 = match_fail `badmatch`, _24

  %% Unique:
  %%    _81
  _231 = succeeded:body _81
  br ^1

148:
  %% bs_construct_SUITE.erl:593
  %% Aliased:
  %%    _22
  _82 = match_fail `badmatch`, _22

  %% Unique:
  %%    _82
  _238 = succeeded:body _82
  br ^1

136:
  %% bs_construct_SUITE.erl:592
  %% Aliased:
  %%    _19
  _83 = match_fail `badmatch`, _19

  %% Unique:
  %%    _83
  _245 = succeeded:body _83
  br ^1

124:
  %% bs_construct_SUITE.erl:590
  %% Aliased:
  %%    _50
  _84 = match_fail `badmatch`, _50

  %% Unique:
  %%    _84
  _247 = succeeded:body _84
  br ^1

121:
  %% bs_construct_SUITE.erl:589
  %% Aliased:
  %%    _49
  _85 = match_fail `badmatch`, _49

  %% Unique:
  %%    _85
  _249 = succeeded:body _85
  br ^1

118:
  %% bs_construct_SUITE.erl:588
  %% Aliased:
  %%    _48
  _86 = match_fail `badmatch`, _48

  %% Unique:
  %%    _86
  _251 = succeeded:body _86
  br ^1

115:
  %% bs_construct_SUITE.erl:585
  %% Aliased:
  %%    _47
  _87 = match_fail `badmatch`, _47

  %% Unique:
  %%    _87
  _253 = succeeded:body _87
  br ^1

112:
  %% bs_construct_SUITE.erl:584
  %% Aliased:
  %%    _46
  _88 = match_fail `badmatch`, _46

  %% Unique:
  %%    _88
  _255 = succeeded:body _88
  br ^1

109:
  %% bs_construct_SUITE.erl:583
  %% Aliased:
  %%    _45
  _89 = match_fail `badmatch`, _45

  %% Unique:
  %%    _89
  _257 = succeeded:body _89
  br ^1

106:
  %% bs_construct_SUITE.erl:582
  %% Aliased:
  %%    _44
  _90 = match_fail `badmatch`, _44

  %% Unique:
  %%    _90
  _259 = succeeded:body _90
  br ^1

103:
  %% bs_construct_SUITE.erl:581
  %% Aliased:
  %%    _43
  _91 = match_fail `badmatch`, _43

  %% Unique:
  %%    _91
  _261 = succeeded:body _91
  br ^1

96:
  %% bs_construct_SUITE.erl:578
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-opt/1-',1}}
  _93 = match_fail `function_clause`, _0

  %% Unique:
  %%    _93
  _265 = succeeded:body _93
  br ^1

1:
  _94 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _94
}

%% bs_construct_SUITE.erl:609
%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`opt_dont_call_me`() {
0:
  %% bs_construct_SUITE.erl:611
  %% Argument types:
  %%    
  %% Anno: #{unit => 8}
  _2 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `305419896`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:613
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'otp_7029', bitstring(256,appendable), 42}
function `bs_construct_SUITE`:`otp_7029`(_0) {
0:
  %% Argument types:
  %%    _0 => {'otp_7029', bitstring(256,appendable), 42}
  %% Unique:
  %%    _0
  _7 = get_tuple_element _0, `1`

  %% Argument types:
  %%    _7 => bitstring(256,appendable)
  %% Unique:
  %%    _7
  _27 = bif:'=:=' _7, `<<>>`
  br _27, ^20, ^17

20:
  %% Result type:
  %%    42
  ret `42`

17:
  %% bs_construct_SUITE.erl:614
  %% Unique:
  %%    _0
  _14 = match_fail `badmatch`, _0

  %% Unique:
  %%    _14
  _34 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% bs_construct_SUITE.erl:617
%% Counter = 26
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`otp_7556`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _22 = bif:is_list _0
  br _22, ^22, ^21

22:
  %% bs_construct_SUITE.erl:618
  _3 = call (`lists`:`seq`/2), `0`, `1023`

  %% Aliased:
  %%    _3
  _23 = succeeded:body _3
  br _23, ^23, ^1

23:
  %% bs_construct_SUITE.erl:618
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _3
  _17 = call (`'-otp_7556/1-lc$^0/1-0-'`/1), _3

  %% Unique:
  %%    _17
  _24 = succeeded:body _17
  br _24, ^24, ^1

24:
  %% Result type:
  %%    'ok'
  ret `ok`

21:
  %% bs_construct_SUITE.erl:617
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_7556/1-',1}}
  _18 = match_fail `function_clause`, _0

  %% Unique:
  %%    _18
  _25 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% bs_construct_SUITE.erl:621
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(256,appendable)
%%    _1 =>
%%     1024
%%    _2 =>
%%     1024
%%    _3 =>
%%     1024
function `bs_construct_SUITE`:`otp_7556`(_0, _1, _2, _3) {
0:
  %% bs_construct_SUITE.erl:624
  %% Result type:
  %%    bitstring(256,appendable)
  %% Argument types:
  %%    _0 => bitstring(256,appendable)
  %% Unique:
  %%    _0
  %% Anno: #{first_fragment_dies => true,unit => 256}
  _4 = bs_create_bin `private_append`, `[8,{segment,1}]`, _0, `all`, `integer`, `[16,{segment,2}]`, `-1`, `1024`, `integer`, `[16,{segment,3}]`, `0`, `1024`, `integer`, `[16,{segment,4}]`, `-1`, `1024`

  %% Unique:
  %%    _4
  _7 = succeeded:body _4
  br _7, ^7, ^1

7:
  %% Result type:
  %%    bitstring(256,appendable)
  %% Unique:
  %%    _4
  ret _4

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% bs_construct_SUITE.erl:630
%% Counter = 16
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`float_arith`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% bs_construct_SUITE.erl:631
  %% Result type:
  %%    {bitstring(8), 21.0}
  _3 = call (`do_float_arith`/3), `<<1,2,3>>`, `42`, `2`

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => {bitstring(8), 21.0}
  %% Unique:
  %%    _3
  _13 = bif:'=:=' _3, `{<<1,2,3,64,69,0,0,0,0,0,0>>,21.0}`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% bs_construct_SUITE.erl:631
  %% Unique:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

8:
  %% bs_construct_SUITE.erl:630
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-float_arith/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% bs_construct_SUITE.erl:635
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(8)
%%    _1 =>
%%     42
%%    _2 =>
%%     2
function `bs_construct_SUITE`:`do_float_arith`(_0, _1, _2) {
0:
  %% bs_construct_SUITE.erl:636
  %% Argument types:
  %%    _0 => bitstring(8)
  %% Unique:
  %%    _0
  %% Anno: #{first_fragment_dies => true,unit => 8}
  Bin = bs_create_bin `append`, `[8,{segment,1}]`, _0, `all`, `binary`, `[1]`, `<<64,69,0,0,0,0,0,0>>`, `all`

  %% Unique:
  %%    Bin
  _8 = succeeded:body Bin
  br _8, ^9, ^1

9:
  %% Argument types:
  %%    Bin => bitstring(8)
  %% Unique:
  %%    Bin
  _5 = put_tuple Bin, `21.0`
  %% Result type:
  %%    {bitstring(8), 21.0}
  %% Unique:
  %%    _5
  ret _5

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% bs_construct_SUITE.erl:639
%% Counter = 16
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`otp_8054`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% bs_construct_SUITE.erl:640
  %% Result type:
  %%    bitstring(8)
  _3 = call (`otp_8054_1`/2), `[null,1,2,3]`, `<<"abc">>`

  %% Aliased:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => bitstring(8)
  %% Aliased:
  %%    _3
  _13 = bif:'=:=' _3, `<<"abc">>`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% bs_construct_SUITE.erl:640
  %% Aliased:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

8:
  %% bs_construct_SUITE.erl:639
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_8054/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% bs_construct_SUITE.erl:643
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list('null' | 1..3)
%%    _1 =>
%%     bitstring(8)
function `bs_construct_SUITE`:`otp_8054_1`(_0, _1) {
0:
  %% Unique:
  %%    _0
  _24 = is_nonempty_list _0
  br _24, ^24, ^25

24:
  %% Argument types:
  %%    _0 => nonempty_list('null' | 1..3)
  %% Unique:
  %%    _0
  _10 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list('null' | 1..3)
  %% Unique:
  %%    _0
  _9 = get_tl _0

  %% Argument types:
  %%    _10 => 'null' | 1..3
  %% Unique:
  %%    _10
  _22 = bif:'=:=' _10, `null`
  br _22, ^21, ^18

21:
  %% bs_construct_SUITE.erl:649
  %% Argument types:
  %%    _1 => bitstring(8)
  %% Aliased:
  %%    _1
  %% Anno: #{first_fragment_dies => false,unit => 8}
  _11 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`

  %% Aliased:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^18, ^1

18:
  %% bs_construct_SUITE.erl:653
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _9
  _12 = call (`otp_8054_1`/2), _9, _1

  %% Aliased:
  %%    _12
  _23 = succeeded:body _12
  br _23, ^23, ^1

23:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _12
  ret _12

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14

25:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _1
  ret _1
}

%% bs_construct_SUITE.erl:665
%% Counter = 774
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`strings`(_0) {
0:
  %% bs_construct_SUITE.erl:666
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  L = bif:length _0

  %% Aliased:
  %%    L
  _322 = succeeded:body L
  br _322, ^322, ^1

322:
  %% bs_construct_SUITE.erl:668
  %% Argument types:
  %%    L => 0..288230376151711743
  %% Unique:
  %%    L
  %% Anno: #{unit => 16}
  _70 = bs_create_bin `binary`, `[1]`, `<<0,97,0,98,0,99>>`, `all`, `integer`, `[1,{segment,2}]`, L, `32`

  %% Aliased:
  %%    _70
  _323 = succeeded:body _70
  br _323, ^323, ^1

323:
  %% Argument types:
  %%    _70 => bitstring(16)
  %% Aliased:
  %%    _70
  _71 = bs_start_match `new`, _70
  _750 = bs_ensure _71, `80`, `1`
  _751 = succeeded:guard _750
  br _751, ^749, ^325

749:
  %% Argument types:
  %%    _750 => bs_context(16)
  %% Aliased:
  %%    _71
  %% Anno: #{ensured => true}
  _74 = bs_match `string`, _750, `<<0,97,0,98,0,99>>`

  %% Aliased:
  %%    _74
  _328 = succeeded:guard _74
  br _328, ^328, ^325

328:
  %% bs_construct_SUITE.erl:668
  %% Argument types:
  %%    _74 => bs_context(16)
  %% Aliased:
  %%    _74
  %% Anno: #{ensured => true}
  _75 = bs_match `integer`, _74, `[unsigned,big]`, `32`, `1`

  %% Aliased:
  %%    _75
  _329 = succeeded:guard _75
  br _329, ^329, ^325

329:
  %% Aliased:
  %%    _75
  _76 = bs_extract _75

  %% Aliased:
  %%    _75
  _682 = bs_test_tail _75, `0`
  br _682, ^682, ^325

682:
  %% Argument types:
  %%    _76 => 0..4294967295
  %%    L => 0..288230376151711743
  %% Unique:
  %%    _76, 
  %%    L
  _330 = bif:'=:=' _76, L
  br _330, ^330, ^325

330:
  %% bs_construct_SUITE.erl:671
  %% Argument types:
  %%    L => 0..4294967295
  %% Unique:
  %%    L
  %% Anno: #{unit => 16}
  _77 = bs_create_bin `integer`, `[1,{segment,1}]`, L, `16`

  %% Aliased:
  %%    _77
  _331 = succeeded:body _77
  br _331, ^331, ^1

331:
  %% Argument types:
  %%    _77 => bitstring(16)
  %% Aliased:
  %%    _77
  _78 = bs_start_match `new`, _77
  _753 = bs_ensure _78, `16`, `1`
  _754 = succeeded:guard _753
  br _754, ^752, ^333

752:
  %% bs_construct_SUITE.erl:671
  %% Argument types:
  %%    _753 => bs_context(16)
  %% Aliased:
  %%    _78
  %% Anno: #{ensured => true}
  _79 = bs_match `integer`, _753, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _79
  _334 = succeeded:guard _79
  br _334, ^334, ^333

334:
  %% Aliased:
  %%    _79
  _80 = bs_extract _79

  %% Aliased:
  %%    _79
  _679 = bs_test_tail _79, `0`
  br _679, ^679, ^333

679:
  %% Argument types:
  %%    _80 => 0..65535
  %%    L => 0..4294967295
  %% Unique:
  %%    _80, 
  %%    L
  _335 = bif:'=:=' _80, L
  br _335, ^342, ^333

342:
  %% bs_construct_SUITE.erl:672
  %% Argument types:
  %%    L => 0..65535
  %% Unique:
  %%    L
  %% Anno: #{unit => 16}
  _83 = bs_create_bin `integer`, `[1,{segment,1}]`, L, `16`

  %% Aliased:
  %%    _83
  _348 = succeeded:body _83
  br _348, ^348, ^1

348:
  %% Argument types:
  %%    _83 => bitstring(16)
  %% Aliased:
  %%    _83
  _84 = bs_start_match `new`, _83
  _756 = bs_ensure _84, `16`, `1`
  _757 = succeeded:guard _756
  br _757, ^755, ^350

755:
  %% bs_construct_SUITE.erl:672
  %% Argument types:
  %%    _756 => bs_context(16)
  %% Aliased:
  %%    _84
  %% Anno: #{ensured => true}
  _85 = bs_match `integer`, _756, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _85
  _351 = succeeded:guard _85
  br _351, ^351, ^350

351:
  %% Aliased:
  %%    _85
  _86 = bs_extract _85

  %% Aliased:
  %%    _85
  _676 = bs_test_tail _85, `0`
  br _676, ^676, ^350

676:
  %% Argument types:
  %%    _86 => 0..65535
  %%    L => 0..65535
  %% Unique:
  %%    _86, 
  %%    L
  _352 = bif:'=:=' _86, L
  br _352, ^352, ^350

352:
  %% bs_construct_SUITE.erl:673
  %% Argument types:
  %%    L => 0..65535
  %% Unique:
  %%    L
  %% Anno: #{unit => 16}
  _87 = bs_create_bin `integer`, `[1,{segment,1}]`, L, `16`

  %% Aliased:
  %%    _87
  _353 = succeeded:body _87
  br _353, ^353, ^1

353:
  %% Argument types:
  %%    _87 => bitstring(16)
  %% Aliased:
  %%    _87
  _88 = bs_start_match `new`, _87
  _759 = bs_ensure _88, `16`, `1`
  _760 = succeeded:guard _759
  br _760, ^758, ^355

758:
  %% bs_construct_SUITE.erl:673
  %% Argument types:
  %%    _759 => bs_context(16)
  %% Aliased:
  %%    _88
  %% Anno: #{ensured => true}
  _89 = bs_match `integer`, _759, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _89
  _356 = succeeded:guard _89
  br _356, ^356, ^355

356:
  %% Aliased:
  %%    _89
  _90 = bs_extract _89

  %% Aliased:
  %%    _89
  _673 = bs_test_tail _89, `0`
  br _673, ^673, ^355

673:
  %% Argument types:
  %%    _90 => 0..65535
  %%    L => 0..65535
  %% Unique:
  %%    _90, 
  %%    L
  _357 = bif:'=:=' _90, L
  br _357, ^357, ^355

357:
  %% bs_construct_SUITE.erl:675
  %% Argument types:
  %%    L => 0..65535
  %% Unique:
  %%    L
  %% Anno: #{unit => 16}
  _91 = bs_create_bin `integer`, `[1,{segment,2}]`, L, `16`

  %% Aliased:
  %%    _91
  _358 = succeeded:body _91
  br _358, ^358, ^1

358:
  %% Argument types:
  %%    _91 => bitstring(16)
  %% Aliased:
  %%    _91
  _92 = bs_start_match `new`, _91
  _762 = bs_ensure _92, `16`, `1`
  _763 = succeeded:guard _762
  br _763, ^761, ^360

761:
  %% bs_construct_SUITE.erl:675
  %% Argument types:
  %%    _762 => bs_context(16)
  %% Aliased:
  %%    _92
  %% Anno: #{ensured => true}
  _93 = bs_match `integer`, _762, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _93
  _361 = succeeded:guard _93
  br _361, ^361, ^360

361:
  %% Aliased:
  %%    _93
  _94 = bs_extract _93

  %% Aliased:
  %%    _93
  _670 = bs_test_tail _93, `0`
  br _670, ^670, ^360

670:
  %% Argument types:
  %%    _94 => 0..65535
  %%    L => 0..65535
  %% Unique:
  %%    _94, 
  %%    L
  _362 = bif:'=:=' _94, L
  br _362, ^362, ^360

362:
  %% bs_construct_SUITE.erl:676
  %% Argument types:
  %%    L => 0..65535
  %% Unique:
  %%    L
  %% Anno: #{unit => 16}
  _95 = bs_create_bin `integer`, `[1,{segment,1}]`, L, `16`

  %% Aliased:
  %%    _95
  _363 = succeeded:body _95
  br _363, ^363, ^1

363:
  %% Argument types:
  %%    _95 => bitstring(16)
  %% Aliased:
  %%    _95
  _96 = bs_start_match `new`, _95
  _765 = bs_ensure _96, `16`, `1`
  _766 = succeeded:guard _765
  br _766, ^764, ^365

764:
  %% bs_construct_SUITE.erl:676
  %% Argument types:
  %%    _765 => bs_context(16)
  %% Aliased:
  %%    _96
  %% Anno: #{ensured => true}
  _97 = bs_match `integer`, _765, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _97
  _366 = succeeded:guard _97
  br _366, ^366, ^365

366:
  %% Aliased:
  %%    _97
  _98 = bs_extract _97

  %% Aliased:
  %%    _97
  _667 = bs_test_tail _97, `0`
  br _667, ^667, ^365

667:
  %% Argument types:
  %%    _98 => 0..65535
  %%    L => 0..65535
  %% Unique:
  %%    _98, 
  %%    L
  _367 = bif:'=:=' _98, L
  br _367, ^367, ^365

367:
  %% bs_construct_SUITE.erl:679
  %% Argument types:
  %%    L => 0..65535
  %% Unique:
  %%    L
  %% Anno: #{unit => 32}
  _32 = bs_create_bin `integer`, `[1,{segment,1}]`, L, `32`, `binary`, `[1]`, `<<"3lz7Q4au2i3DJWNlNhWuzmvA7gYWGXG+LAPtgtlEO2VGSxRqL2WOoHWQxORTQfJw17mNEU8i87UKvEPbo9YY8ppiM7vfaG88TTyfEzgUMTgY3IvsikMBELPz2AayVz5aaMh9PBFTZ4DkBIFxURBUKHho4Vgt7IzYnWNgn3ON5D9VS89TPANK5/PwSUoMQYZ2fk5VLbq7D1ExlnCScvTDnF/WHMQ3m2GUcQWb+ajfOf3bnP7EX4f1Q3d/1Soe6lEpf1KN/5S7A/ugjMhy4+HZuo1J1J6CCwEVZ/wDc79OpDPPj/qOGhDK73F8DaMcynZ91El+01vfTnuUxNFUHLpuoQ==">>`, `all`

  %% Aliased:
  %%    _32
  _368 = succeeded:body _32
  br _368, ^368, ^1

368:
  %% bs_construct_SUITE.erl:679
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _32
  _99 = call (`id`/1), _32

  %% Aliased:
  %%    _99
  _369 = succeeded:body _99
  br _369, ^369, ^1

369:
  %% Argument types:
  %%    _99 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _99
  _100 = bs_start_match `new`, _99

  %% Aliased:
  %%    _100
  _665 = succeeded:guard _100
  br _665, ^665, ^371

665:
  _768 = bs_ensure _100, `32`, `1`
  _769 = succeeded:guard _768
  br _769, ^767, ^371

767:
  %% bs_construct_SUITE.erl:680
  %% Argument types:
  %%    _768 => bs_context(4)
  %% Aliased:
  %%    _100
  %% Anno: #{ensured => true}
  _101 = bs_match `integer`, _768, `[unsigned,big]`, `32`, `1`

  %% Aliased:
  %%    _101
  _372 = succeeded:guard _101
  br _372, ^372, ^371

372:
  %% Aliased:
  %%    _101
  _102 = bs_extract _101

  %% Argument types:
  %%    _101 => bs_context(4)
  %% Aliased:
  %%    _101
  _274 = bs_match `string`, _101, `<<"3lz7Q4au2i3DJWNlNhWuzmvA7gYWGXG+LAPtgtlEO2VGSxRqL2WOoHWQxORTQfJw17mNEU8i87UKvEPbo9YY8ppiM7vfaG88TTyfEzgUMTgY3IvsikMBELPz2AayVz5aaMh9PBFTZ4DkBIFxURBUKHho4Vgt7IzYnWNgn3ON5D9VS89TPANK5/PwSUoMQYZ2fk5VLbq7D1ExlnCScvTDnF/WHMQ3m2GUcQWb+ajfOf3bnP7EX4f1Q3d/1Soe6lEpf1KN/5S7A/ugjMhy4+HZuo1J1J6CCwEVZ/wDc79OpDPPj/qOGhDK73F8DaMcynZ91El+01vfTnuUxNFUHLpuoQ==">>`

  %% Aliased:
  %%    _274
  _544 = succeeded:guard _274
  br _544, ^544, ^371

544:
  %% Aliased:
  %%    _274
  _664 = bs_test_tail _274, `0`
  br _664, ^664, ^371

664:
  %% Argument types:
  %%    _102 => 0..4294967295
  %%    L => 0..65535
  %% Unique:
  %%    _102, 
  %%    L
  _545 = bif:'=:=' _102, L
  br _545, ^745, ^371

745:
  br ^770

770:
  _549 = new_try_tag `'catch'`
  br _549, ^547, ^548

547:
  %% bs_construct_SUITE.erl:683
  _299 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _299
  _551 = succeeded:body _299
  br ^548

548:
  %% Unique:
  %%    _549
  _554 = landingpad `'catch'`, _549

  %% Aliased:
  %%    _554
  _552 = extract _554, `0`
  br ^546

546:
  %% Aliased:
  %%    _552
  %% Unique:
  %%    _549
  _45 = catch_end _549, _552

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _660 = is_tagged_tuple _45, `2`, `'EXIT'`
  br _660, ^657, ^557

657:
  %% Argument types:
  %%    _45 => {''EXIT'', any()}
  %% Aliased:
  %%    _45
  _275 = get_tuple_element _45, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _275
  _654 = is_tagged_tuple _275, `2`, `badarg`
  br _654, ^746, ^557

746:
  br ^771

771:
  _561 = new_try_tag `'catch'`
  br _561, ^559, ^560

559:
  %% bs_construct_SUITE.erl:684
  _301 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _301
  _563 = succeeded:body _301
  br ^560

560:
  %% Unique:
  %%    _561
  _566 = landingpad `'catch'`, _561

  %% Aliased:
  %%    _566
  _564 = extract _566, `0`
  br ^558

558:
  %% Aliased:
  %%    _564
  %% Unique:
  %%    _561
  _47 = catch_end _561, _564

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _647 = is_tagged_tuple _47, `2`, `'EXIT'`
  br _647, ^644, ^569

644:
  %% Argument types:
  %%    _47 => {''EXIT'', any()}
  %% Aliased:
  %%    _47
  _279 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _279
  _641 = is_tagged_tuple _279, `2`, `badarg`
  br _641, ^747, ^569

747:
  br ^772

772:
  _573 = new_try_tag `'catch'`
  br _573, ^571, ^572

571:
  %% bs_construct_SUITE.erl:685
  %% Result type:
  %%    none()
  _303 = call (`bad_empty_string_1`/0)

  %% Aliased:
  %%    _303
  _575 = succeeded:body _303
  br ^572

572:
  %% Unique:
  %%    _573
  _578 = landingpad `'catch'`, _573

  %% Aliased:
  %%    _578
  _576 = extract _578, `0`
  br ^570

570:
  %% Aliased:
  %%    _576
  %% Unique:
  %%    _573
  _49 = catch_end _573, _576

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _634 = is_tagged_tuple _49, `2`, `'EXIT'`
  br _634, ^631, ^581

631:
  %% Argument types:
  %%    _49 => {''EXIT'', any()}
  %% Aliased:
  %%    _49
  _283 = get_tuple_element _49, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _283
  _628 = is_tagged_tuple _283, `2`, `badarg`
  br _628, ^748, ^581

748:
  br ^773

773:
  _585 = new_try_tag `'catch'`
  br _585, ^583, ^584

583:
  %% bs_construct_SUITE.erl:686
  %% Result type:
  %%    none()
  _305 = call (`bad_empty_string_2`/0)

  %% Aliased:
  %%    _305
  _587 = succeeded:body _305
  br ^584

584:
  %% Unique:
  %%    _585
  _590 = landingpad `'catch'`, _585

  %% Aliased:
  %%    _590
  _588 = extract _590, `0`
  br ^582

582:
  %% Aliased:
  %%    _588
  %% Unique:
  %%    _585
  _51 = catch_end _585, _588

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _621 = is_tagged_tuple _51, `2`, `'EXIT'`
  br _621, ^618, ^593

618:
  %% Argument types:
  %%    _51 => {''EXIT'', any()}
  %% Aliased:
  %%    _51
  _287 = get_tuple_element _51, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _287
  _615 = is_tagged_tuple _287, `2`, `badarg`
  br _615, ^612, ^593

612:
  %% bs_construct_SUITE.erl:687
  %% Result type:
  %%    'error'
  _291 = call (`bad_empty_string_3`/0)

  %% Unique:
  %%    _291
  _594 = succeeded:body _291
  br _594, ^609, ^1

609:
  %% bs_construct_SUITE.erl:688
  %% Result type:
  %%    'error'
  _292 = call (`bad_empty_string_4`/1), `true`

  %% Unique:
  %%    _292
  _597 = succeeded:body _292
  br _597, ^606, ^1

606:
  %% bs_construct_SUITE.erl:689
  %% Result type:
  %%    'error'
  _293 = call (`bad_empty_string_4`/1), `false`

  %% Unique:
  %%    _293
  _600 = succeeded:body _293
  br _600, ^603, ^1

603:
  %% Result type:
  %%    'ok'
  ret `ok`

593:
  %% bs_construct_SUITE.erl:686
  %% Aliased:
  %%    _51
  _309 = match_fail `badmatch`, _51

  %% Unique:
  %%    _309
  _624 = succeeded:body _309
  br ^1

581:
  %% bs_construct_SUITE.erl:685
  %% Aliased:
  %%    _49
  _310 = match_fail `badmatch`, _49

  %% Unique:
  %%    _310
  _637 = succeeded:body _310
  br ^1

569:
  %% bs_construct_SUITE.erl:684
  %% Aliased:
  %%    _47
  _311 = match_fail `badmatch`, _47

  %% Unique:
  %%    _311
  _650 = succeeded:body _311
  br ^1

557:
  %% bs_construct_SUITE.erl:683
  %% Aliased:
  %%    _45
  _312 = match_fail `badmatch`, _45

  %% Unique:
  %%    _312
  _663 = succeeded:body _312
  br ^1

371:
  %% bs_construct_SUITE.erl:680
  %% Aliased:
  %%    _99
  _313 = match_fail `badmatch`, _99

  %% Unique:
  %%    _313
  _666 = succeeded:body _313
  br ^1

365:
  %% bs_construct_SUITE.erl:676
  %% Aliased:
  %%    _95
  _314 = match_fail `badmatch`, _95

  %% Unique:
  %%    _314
  _669 = succeeded:body _314
  br ^1

360:
  %% bs_construct_SUITE.erl:675
  %% Aliased:
  %%    _91
  _315 = match_fail `badmatch`, _91

  %% Unique:
  %%    _315
  _672 = succeeded:body _315
  br ^1

355:
  %% bs_construct_SUITE.erl:673
  %% Aliased:
  %%    _87
  _316 = match_fail `badmatch`, _87

  %% Unique:
  %%    _316
  _675 = succeeded:body _316
  br ^1

350:
  %% bs_construct_SUITE.erl:672
  %% Aliased:
  %%    _83
  _317 = match_fail `badmatch`, _83

  %% Unique:
  %%    _317
  _678 = succeeded:body _317
  br ^1

333:
  %% bs_construct_SUITE.erl:671
  %% Aliased:
  %%    _77
  _318 = match_fail `badmatch`, _77

  %% Unique:
  %%    _318
  _681 = succeeded:body _318
  br ^1

325:
  %% bs_construct_SUITE.erl:668
  %% Aliased:
  %%    _70
  _319 = match_fail `badmatch`, _70

  %% Unique:
  %%    _319
  _684 = succeeded:body _319
  br ^1

1:
  _320 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _320
}

%% bs_construct_SUITE.erl:693
%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_empty_string_1`() {
0:
  %% bs_construct_SUITE.erl:694
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:697
%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_empty_string_2`() {
0:
  %% bs_construct_SUITE.erl:698
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:701
%% Counter = 4
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_empty_string_3`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% bs_construct_SUITE.erl:704
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true'
function `bs_construct_SUITE`:`bad_empty_string_4`(_0) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% bs_construct_SUITE.erl:707
%% Counter = 474
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_size`(_0) {
0:
  br ^465

465:
  _98 = new_try_tag `'catch'`
  br _98, ^96, ^97

96:
  %% bs_construct_SUITE.erl:708
  %% Result type:
  %%    none()
  _67 = call (`bad_float_size`/0)

  %% Aliased:
  %%    _67
  _100 = succeeded:body _67
  br ^97

97:
  %% Unique:
  %%    _98
  _103 = landingpad `'catch'`, _98

  %% Aliased:
  %%    _103
  _101 = extract _103, `0`
  br ^95

95:
  %% Aliased:
  %%    _101
  %% Unique:
  %%    _98
  _1 = catch_end _98, _101

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _317 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _317, ^314, ^106

314:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _30 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _311 = is_tagged_tuple _30, `2`, `badarg`
  br _311, ^457, ^106

457:
  br ^466

466:
  _110 = new_try_tag `'catch'`
  br _110, ^108, ^109

108:
  %% bs_construct_SUITE.erl:709
  %% Result type:
  %%    none()
  _69 = call (`bad_float_size`/1), `<<"abc">>`

  %% Aliased:
  %%    _69
  _112 = succeeded:body _69
  br ^109

109:
  %% Unique:
  %%    _110
  _115 = landingpad `'catch'`, _110

  %% Aliased:
  %%    _115
  _113 = extract _115, `0`
  br ^107

107:
  %% Aliased:
  %%    _113
  %% Unique:
  %%    _110
  _3 = catch_end _110, _113

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _304 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _304, ^301, ^118

301:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _34 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _298 = is_tagged_tuple _34, `2`, `badarg`
  br _298, ^458, ^118

458:
  br ^467

467:
  _122 = new_try_tag `'catch'`
  br _122, ^120, ^121

120:
  %% bs_construct_SUITE.erl:710
  %% Result type:
  %%    none()
  _71 = call (`bad_integer_size`/0)

  %% Aliased:
  %%    _71
  _124 = succeeded:body _71
  br ^121

121:
  %% Unique:
  %%    _122
  _127 = landingpad `'catch'`, _122

  %% Aliased:
  %%    _127
  _125 = extract _127, `0`
  br ^119

119:
  %% Aliased:
  %%    _125
  %% Unique:
  %%    _122
  _5 = catch_end _122, _125

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _291 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _291, ^288, ^130

288:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _38 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _285 = is_tagged_tuple _38, `2`, `badarg`
  br _285, ^459, ^130

459:
  br ^468

468:
  _134 = new_try_tag `'catch'`
  br _134, ^132, ^133

132:
  %% bs_construct_SUITE.erl:711
  %% Result type:
  %%    none()
  _73 = call (`bad_integer_size`/1), `<<"xyz">>`

  %% Aliased:
  %%    _73
  _136 = succeeded:body _73
  br ^133

133:
  %% Unique:
  %%    _134
  _139 = landingpad `'catch'`, _134

  %% Aliased:
  %%    _139
  _137 = extract _139, `0`
  br ^131

131:
  %% Aliased:
  %%    _137
  %% Unique:
  %%    _134
  _7 = catch_end _134, _137

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _278 = is_tagged_tuple _7, `2`, `'EXIT'`
  br _278, ^275, ^142

275:
  %% Argument types:
  %%    _7 => {''EXIT'', any()}
  %% Aliased:
  %%    _7
  _42 = get_tuple_element _7, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _272 = is_tagged_tuple _42, `2`, `badarg`
  br _272, ^460, ^142

460:
  br ^469

469:
  _146 = new_try_tag `'catch'`
  br _146, ^144, ^145

144:
  %% bs_construct_SUITE.erl:712
  %% Result type:
  %%    bitstring(1)
  _75 = call (`bad_integer_size2`/0)

  %% Aliased:
  %%    _75
  _148 = succeeded:body _75
  br _148, ^148, ^145

148:
  br ^143

145:
  %% Unique:
  %%    _146
  _151 = landingpad `'catch'`, _146

  %% Aliased:
  %%    _151
  _149 = extract _151, `0`
  br ^143

143:
  _152 = phi { _149, ^145 }, { _75, ^148 }

  %% Aliased:
  %%    _152
  %% Unique:
  %%    _146
  _9 = catch_end _146, _152

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _265 = is_tagged_tuple _9, `2`, `'EXIT'`
  br _265, ^262, ^154

262:
  %% Argument types:
  %%    _9 => {''EXIT'', any()}
  %% Aliased:
  %%    _9
  _46 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _259 = is_tagged_tuple _46, `2`, `badarg`
  br _259, ^461, ^154

461:
  br ^470

470:
  _158 = new_try_tag `'catch'`
  br _158, ^156, ^157

156:
  %% bs_construct_SUITE.erl:713
  %% Result type:
  %%    none()
  _77 = call (`bad_binary_size`/0)

  %% Aliased:
  %%    _77
  _160 = succeeded:body _77
  br ^157

157:
  %% Unique:
  %%    _158
  _163 = landingpad `'catch'`, _158

  %% Aliased:
  %%    _163
  _161 = extract _163, `0`
  br ^155

155:
  %% Aliased:
  %%    _161
  %% Unique:
  %%    _158
  _11 = catch_end _158, _161

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _252 = is_tagged_tuple _11, `2`, `'EXIT'`
  br _252, ^249, ^166

249:
  %% Argument types:
  %%    _11 => {''EXIT'', any()}
  %% Aliased:
  %%    _11
  _50 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _246 = is_tagged_tuple _50, `2`, `badarg`
  br _246, ^462, ^166

462:
  br ^471

471:
  _170 = new_try_tag `'catch'`
  br _170, ^168, ^169

168:
  %% bs_construct_SUITE.erl:714
  %% Result type:
  %%    none()
  _79 = call (`bad_binary_size`/1), `<<"xyz">>`

  %% Aliased:
  %%    _79
  _172 = succeeded:body _79
  br ^169

169:
  %% Unique:
  %%    _170
  _175 = landingpad `'catch'`, _170

  %% Aliased:
  %%    _175
  _173 = extract _175, `0`
  br ^167

167:
  %% Aliased:
  %%    _173
  %% Unique:
  %%    _170
  _13 = catch_end _170, _173

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _239 = is_tagged_tuple _13, `2`, `'EXIT'`
  br _239, ^236, ^178

236:
  %% Argument types:
  %%    _13 => {''EXIT'', any()}
  %% Aliased:
  %%    _13
  _54 = get_tuple_element _13, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _233 = is_tagged_tuple _54, `2`, `badarg`
  br _233, ^463, ^178

463:
  br ^472

472:
  _182 = new_try_tag `'catch'`
  br _182, ^180, ^181

180:
  %% bs_construct_SUITE.erl:715
  %% Result type:
  %%    bitstring(1)
  _81 = call (`bad_binary_size2`/0)

  %% Aliased:
  %%    _81
  _184 = succeeded:body _81
  br _184, ^184, ^181

184:
  br ^179

181:
  %% Unique:
  %%    _182
  _187 = landingpad `'catch'`, _182

  %% Aliased:
  %%    _187
  _185 = extract _187, `0`
  br ^179

179:
  _188 = phi { _185, ^181 }, { _81, ^184 }

  %% Aliased:
  %%    _188
  %% Unique:
  %%    _182
  _15 = catch_end _182, _188

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _226 = is_tagged_tuple _15, `2`, `'EXIT'`
  br _226, ^223, ^190

223:
  %% Argument types:
  %%    _15 => {''EXIT'', any()}
  %% Aliased:
  %%    _15
  _58 = get_tuple_element _15, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _220 = is_tagged_tuple _58, `2`, `badarg`
  br _220, ^464, ^190

464:
  br ^473

473:
  _194 = new_try_tag `'catch'`
  br _194, ^192, ^193

192:
  %% bs_construct_SUITE.erl:716
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _17 = call (`id`/1), `<<"abc">>`

  %% Aliased:
  %%    _17
  _196 = succeeded:body _17
  br _196, ^196, ^193

196:
  %% bs_construct_SUITE.erl:716
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _17
  _83 = call (`bad_binary_size3`/1), _17

  %% Aliased:
  %%    _83
  _197 = succeeded:body _83
  br ^193

193:
  %% Unique:
  %%    _194
  _200 = landingpad `'catch'`, _194

  %% Aliased:
  %%    _200
  _198 = extract _200, `0`
  br ^191

191:
  %% Aliased:
  %%    _198
  %% Unique:
  %%    _194
  _18 = catch_end _194, _198

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _213 = is_tagged_tuple _18, `2`, `'EXIT'`
  br _213, ^210, ^203

210:
  %% Argument types:
  %%    _18 => {''EXIT'', any()}
  %% Aliased:
  %%    _18
  _62 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _207 = is_tagged_tuple _62, `2`, `badarg`
  br _207, ^204, ^203

204:
  %% Result type:
  %%    'ok'
  ret `ok`

203:
  %% bs_construct_SUITE.erl:716
  %% Aliased:
  %%    _18
  _84 = match_fail `badmatch`, _18

  %% Unique:
  %%    _84
  _216 = succeeded:body _84
  br ^1

190:
  %% bs_construct_SUITE.erl:715
  %% Aliased:
  %%    _15
  _85 = match_fail `badmatch`, _15

  %% Unique:
  %%    _85
  _229 = succeeded:body _85
  br ^1

178:
  %% bs_construct_SUITE.erl:714
  %% Aliased:
  %%    _13
  _86 = match_fail `badmatch`, _13

  %% Unique:
  %%    _86
  _242 = succeeded:body _86
  br ^1

166:
  %% bs_construct_SUITE.erl:713
  %% Aliased:
  %%    _11
  _87 = match_fail `badmatch`, _11

  %% Unique:
  %%    _87
  _255 = succeeded:body _87
  br ^1

154:
  %% bs_construct_SUITE.erl:712
  %% Aliased:
  %%    _9
  _88 = match_fail `badmatch`, _9

  %% Unique:
  %%    _88
  _268 = succeeded:body _88
  br ^1

142:
  %% bs_construct_SUITE.erl:711
  %% Aliased:
  %%    _7
  _89 = match_fail `badmatch`, _7

  %% Unique:
  %%    _89
  _281 = succeeded:body _89
  br ^1

130:
  %% bs_construct_SUITE.erl:710
  %% Aliased:
  %%    _5
  _90 = match_fail `badmatch`, _5

  %% Unique:
  %%    _90
  _294 = succeeded:body _90
  br ^1

118:
  %% bs_construct_SUITE.erl:709
  %% Aliased:
  %%    _3
  _91 = match_fail `badmatch`, _3

  %% Unique:
  %%    _91
  _307 = succeeded:body _91
  br ^1

106:
  %% bs_construct_SUITE.erl:708
  %% Aliased:
  %%    _1
  _92 = match_fail `badmatch`, _1

  %% Unique:
  %%    _92
  _320 = succeeded:body _92
  br ^1

1:
  _93 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _93
}

%% bs_construct_SUITE.erl:719
%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_float_size`() {
0:
  %% bs_construct_SUITE.erl:720
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:722
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(8)
function `bs_construct_SUITE`:`bad_float_size`(_0) {
0:
  %% bs_construct_SUITE.erl:723
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:725
%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_integer_size`() {
0:
  %% bs_construct_SUITE.erl:726
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:728
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(8)
function `bs_construct_SUITE`:`bad_integer_size`(_0) {
0:
  %% bs_construct_SUITE.erl:729
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:731
%% Counter = 24
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_integer_size2`() {
0:
  %% bs_construct_SUITE.erl:733
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _2 = call (`id`/1), `42`

  %% Aliased:
  %%    _2
  _18 = succeeded:body _2
  br _18, ^18, ^1

18:
  %% bs_construct_SUITE.erl:733
  %% Argument types:
  %%    _2 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _2
  %% Anno: #{unit => 8}
  _3 = bs_create_bin `integer`, `[1,{segment,1}]`, _2, `8`

  %% Aliased:
  %%    _3
  _19 = succeeded:body _3
  br _19, ^19, ^1

19:
  %% bs_construct_SUITE.erl:733
  %% Result type:
  %%    nil()
  _9 = call (`'-bad_integer_size2/0-lc$^0/1-0-'`/1), `<<>>`

  %% Unique:
  %%    _9
  _20 = succeeded:body _9
  br _20, ^20, ^1

20:
  %% bs_construct_SUITE.erl:734
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _0 = call (`id`/1), `100`

  %% Aliased:
  %%    _0
  _21 = succeeded:body _0
  br _21, ^21, ^1

21:
  %% bs_construct_SUITE.erl:734
  %% Argument types:
  %%    _0 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _0
  %% Anno: #{unit => 8}
  _1 = bs_create_bin `integer`, `[1,{segment,1}]`, _0, `8`

  %% Aliased:
  %%    _1
  _22 = succeeded:body _1
  br _22, ^22, ^1

22:
  %% bs_construct_SUITE.erl:732
  %% Argument types:
  %%    _3 => bitstring(8)
  %%    _1 => bitstring(8)
  %% Aliased:
  %%    _1, 
  %%    _3
  %% Anno: #{unit => 1}
  _15 = bs_create_bin `integer`, `[1,{segment,1}]`, _3, `[]`, `integer`, `[1,{segment,2}]`, _1, `7`

  %% Aliased:
  %%    _15
  _23 = succeeded:body _15
  br _23, ^23, ^1

23:
  %% Result type:
  %%    bitstring(1)
  %% Aliased:
  %%    _15
  ret _15

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% bs_construct_SUITE.erl:736
%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_binary_size`() {
0:
  %% bs_construct_SUITE.erl:737
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:739
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(8)
function `bs_construct_SUITE`:`bad_binary_size`(_0) {
0:
  %% bs_construct_SUITE.erl:740
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:742
%% Counter = 24
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`bad_binary_size2`() {
0:
  %% bs_construct_SUITE.erl:744
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _2 = call (`id`/1), `42`

  %% Aliased:
  %%    _2
  _18 = succeeded:body _2
  br _18, ^18, ^1

18:
  %% bs_construct_SUITE.erl:744
  %% Argument types:
  %%    _2 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _2
  %% Anno: #{unit => 8}
  _3 = bs_create_bin `integer`, `[1,{segment,1}]`, _2, `8`

  %% Aliased:
  %%    _3
  _19 = succeeded:body _3
  br _19, ^19, ^1

19:
  %% bs_construct_SUITE.erl:744
  %% Result type:
  %%    nil()
  _9 = call (`'-bad_binary_size2/0-lc$^0/1-0-'`/1), `<<>>`

  %% Unique:
  %%    _9
  _20 = succeeded:body _9
  br _20, ^20, ^1

20:
  %% bs_construct_SUITE.erl:745
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  _0 = call (`id`/1), `100`

  %% Aliased:
  %%    _0
  _21 = succeeded:body _0
  br _21, ^21, ^1

21:
  %% bs_construct_SUITE.erl:745
  %% Argument types:
  %%    _0 => 'false' | 'true' | 42..100 | bitstring(4)
  %% Aliased:
  %%    _0
  %% Anno: #{unit => 8}
  _1 = bs_create_bin `integer`, `[1,{segment,1}]`, _0, `8`

  %% Aliased:
  %%    _1
  _22 = succeeded:body _1
  br _22, ^22, ^1

22:
  %% bs_construct_SUITE.erl:743
  %% Argument types:
  %%    _3 => bitstring(8)
  %%    _1 => bitstring(8)
  %% Aliased:
  %%    _1, 
  %%    _3
  %% Anno: #{unit => 1}
  _15 = bs_create_bin `binary`, `[8,{segment,1}]`, _3, `[]`, `integer`, `[1,{segment,2}]`, _1, `7`

  %% Aliased:
  %%    _15
  _23 = succeeded:body _15
  br _23, ^23, ^1

23:
  %% Result type:
  %%    bitstring(1)
  %% Aliased:
  %%    _15
  ret _15

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% bs_construct_SUITE.erl:747
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true' | 42..100 | bitstring(4)
function `bs_construct_SUITE`:`bad_binary_size3`(_0) {
0:
  %% bs_construct_SUITE.erl:748
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:750
%% Counter = 64
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`private_append`(_0) {
0:
  %% bs_construct_SUITE.erl:752
  %% Result type:
  %%    bitstring(8)
  _7 = call (`private_append_1`/1), `#{<<"alpha">> => <<"alpha">>,<<"beta">> => <<"beta">>}`

  %% Aliased:
  %%    _7
  _18 = succeeded:body _7
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _7 => bitstring(8)
  %% Aliased:
  %%    _7
  _45 = bif:'=:=' _7, `<<"alpha=\"alpha\",beta=\"beta\"">>`
  br _45, ^45, ^20

45:
  %% bs_construct_SUITE.erl:755
  %% Result type:
  %%    bitstring(8,appendable)
  _8 = call (`private_append_2`/1), `false`

  %% Unique:
  %%    _8
  _21 = succeeded:body _8
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    _8 => bitstring(8,appendable)
  %% Unique:
  %%    _8
  _43 = bif:'=:=' _8, `<<>>`
  br _43, ^62, ^23

62:
  br ^63

63:
  _27 = new_try_tag `'catch'`
  br _27, ^25, ^26

25:
  %% bs_construct_SUITE.erl:756
  %% Result type:
  %%    bitstring(8,appendable)
  _12 = call (`private_append_2`/1), `true`

  %% Unique:
  %%    _12
  _29 = succeeded:body _12
  br _29, ^29, ^26

29:
  br ^24

26:
  %% Unique:
  %%    _27
  _32 = landingpad `'catch'`, _27

  %% Aliased:
  %%    _32
  _30 = extract _32, `0`
  br ^24

24:
  _33 = phi { _30, ^26 }, { _12, ^29 }

  %% Aliased:
  %%    _33
  %% Unique:
  %%    _27
  _3 = catch_end _27, _33

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _39 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _39, ^36, ^35

36:
  %% Result type:
  %%    'ok'
  ret `ok`

35:
  %% bs_construct_SUITE.erl:756
  %% Aliased:
  %%    _3
  _13 = match_fail `badmatch`, _3

  %% Unique:
  %%    _13
  _42 = succeeded:body _13
  br ^1

23:
  %% bs_construct_SUITE.erl:755
  %% Unique:
  %%    _8
  _14 = match_fail `badmatch`, _8

  %% Unique:
  %%    _14
  _44 = succeeded:body _14
  br ^1

20:
  %% bs_construct_SUITE.erl:751
  %% Aliased:
  %%    _7
  _15 = match_fail `badmatch`, _7

  %% Unique:
  %%    _15
  _46 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% bs_construct_SUITE.erl:762
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{bitstring(8)=>bitstring(8)}
function `bs_construct_SUITE`:`private_append_1`(_0) {
0:
  %% Result type:
  %%    bitstring(8)
  _7 = make_fun (`'-private_append_1/1-fun-0-'`/3)

  %% bs_construct_SUITE.erl:763
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _0
  _14 = call (`maps`:`fold`/3), _7, `<<>>`, _0

  %% Aliased:
  %%    _14
  _20 = succeeded:body _14
  br _20, ^20, ^1

20:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _14
  ret _14

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% bs_construct_SUITE.erl:770
%% Counter = 21
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true'
function `bs_construct_SUITE`:`private_append_2`(_0) {
0:
  %% bs_construct_SUITE.erl:771
  %% Result type:
  %%    'false' | 'true' | 42..100 | bitstring(4)
  %% Unique:
  %%    _0
  _5 = call (`id`/1), _0

  %% Aliased:
  %%    _5
  _11 = succeeded:body _5
  br _11, ^11, ^1

11:
  %% Argument types:
  %%    
  switch _5, ^13, [
    { `false`, ^15 },
    { `true`, ^14 }
  ]

14:
  br ^12

15:
  _20 = bs_init_writable `256`
  br ^12

12:
  _3 = phi { `true`, ^14 }, { _20, ^15 }

  %% bs_construct_SUITE.erl:771
  %% Result type:
  %%    bitstring(8,appendable)
  %% Argument types:
  %%    _3 => 'true' | bitstring(256,appendable)
  %% Unique:
  %%    _3
  %% Anno: #{first_fragment_dies => true,unit => 8}
  _4 = bs_create_bin `append`, `[8,{segment,1}]`, _3, `all`

  %% Unique:
  %%    _4
  _17 = succeeded:body _4
  br _17, ^17, ^1

17:
  %% bs_construct_SUITE.erl:771
  %% Result type:
  %%    bitstring(8,appendable)
  %% Argument types:
  %%    _4 => bitstring(8,appendable)
  %% Unique:
  %%    _4
  %% Anno: #{first_fragment_dies => true,unit => 8}
  _8 = bs_create_bin `private_append`, `[8,{segment,1}]`, _4, `all`

  %% Unique:
  %%    _8
  _18 = succeeded:body _8
  br _18, ^18, ^1

18:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _8
  ret _8

13:
  %% Argument types:
  %%    _5 => 42..100 | bitstring(4)
  %% Aliased:
  %%    _5
  _6 = put_tuple `badarg`, _5

  %% bs_construct_SUITE.erl:771
  %% Unique:
  %%    _6
  _7 = call (`erlang`:`error`/1), _6

  %% Aliased:
  %%    _7
  _16 = succeeded:body _7
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `bs_construct_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `bs_construct_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bs_construct_SUITE.erl:763
%% Counter = 20
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-private_append_1/1-fun-0-'`(_3, _2, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _18 = bif:'=:=' _1, `<<>>`
  br _18, ^18, ^16

18:
  %% bs_construct_SUITE.erl:764
  %% Result type:
  %%    bitstring(8,appendable)
  %% Argument types:
  %%    _1 => bitstring(256,appendable)
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3
  %% Anno: #{first_fragment_dies => true,unit => 8}
  _12 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `binary`, `[8,{segment,2}]`, _3, `all`, `binary`, `[1]`, `<<"=\"">>`, `all`, `binary`, `[8,{segment,4}]`, _2, `all`, `binary`, `[1]`, `<<"\"">>`, `all`

  %% Aliased:
  %%    _12
  _17 = succeeded:body _12
  br _17, ^17, ^1

17:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _12
  ret _12

16:
  %% bs_construct_SUITE.erl:766
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3
  %% Anno: #{first_fragment_dies => true,unit => 8}
  _13 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `binary`, `[1]`, `<<",">>`, `all`, `binary`, `[8,{segment,3}]`, _3, `all`, `binary`, `[1]`, `<<"=\"">>`, `all`, `binary`, `[8,{segment,5}]`, _2, `all`, `binary`, `[1]`, `<<"\"">>`, `all`

  %% Aliased:
  %%    _13
  _19 = succeeded:body _13
  br _19, ^19, ^1

19:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% bs_construct_SUITE.erl:744
%% Counter = 30
%% bs_ensure_opt: true
%% Parameters
%%    _6 =>
%%     bitstring(256,appendable)
%%     accepts_match_context
function `bs_construct_SUITE`:`'-bad_binary_size2/0-lc$^0/1-0-'`(_6) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% bs_construct_SUITE.erl:733
%% Counter = 30
%% bs_ensure_opt: true
%% Parameters
%%    _6 =>
%%     bitstring(256,appendable)
%%     accepts_match_context
function `bs_construct_SUITE`:`'-bad_integer_size2/0-lc$^0/1-0-'`(_6) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% bs_construct_SUITE.erl:618
%% Counter = 29
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-otp_7556/1-lc$^0/1-0-'`(_4) {
0:
  %% Aliased:
  %%    _4
  _23 = is_nonempty_list _4
  br _23, ^23, ^20

23:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _12 = get_tl _4
  _28 = bs_init_writable `256`

  %% bs_construct_SUITE.erl:618
  %% Result type:
  %%    bitstring(256,appendable)
  _14 = call (`otp_7556`/4), _28, `1024`, `1024`, `1024`

  %% Unique:
  %%    _14
  _21 = succeeded:body _14
  br _21, ^21, ^1

21:
  %% bs_construct_SUITE.erl:618
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _12
  _15 = call (`'-otp_7556/1-lc$^0/1-0-'`/1), _12

  %% Unique:
  %%    _15
  _22 = succeeded:body _15
  br _22, ^22, ^1

22:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _15
  ret _15

20:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _24 = bif:'=:=' _4, `[]`
  br _24, ^24, ^19

24:
  %% Result type:
  %%    nil()
  ret `[]`

19:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _11 = put_tuple `bad_generator`, _4

  %% bs_construct_SUITE.erl:618
  %% Unique:
  %%    _11
  _16 = call (`erlang`:`error`/1), _11

  %% Aliased:
  %%    _16
  _25 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% bs_construct_SUITE.erl:563
%% Counter = 426
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-12-'`(_314) {
0:
  %% bs_construct_SUITE.erl:563
  %% Argument types:
  %%    
  %% Aliased:
  %%    _314
  %% Anno: #{unit => 64}
  _312 = bs_create_bin `float`, `[1,{segment,1}]`, _314, `64`

  %% Aliased:
  %%    _312
  _418 = succeeded:body _312
  br _418, ^418, ^1

418:
  %% bs_construct_SUITE.erl:563
  %% Argument types:
  %%    
  %% Aliased:
  %%    _314
  _310 = bif:float _314

  %% Aliased:
  %%    _310
  _419 = succeeded:body _310
  br _419, ^419, ^1

419:
  %% bs_construct_SUITE.erl:563
  %% Argument types:
  %%    _310 => float()
  %% Unique:
  %%    _310
  %% Anno: #{unit => 64}
  _311 = bs_create_bin `float`, `[1,{segment,1}]`, _310, `64`

  %% Aliased:
  %%    _311
  _420 = succeeded:body _311
  br _420, ^420, ^1

420:
  %% bs_construct_SUITE.erl:563
  %% Argument types:
  %%    _312 => bitstring(64)
  %%    _311 => bitstring(64)
  %% Aliased:
  %%    _311, 
  %%    _312
  _338 = bif:'=:=' _312, _311
  br _338, ^423, ^422

423:
  %% Result type:
  %%    'true'
  ret `true`

422:
  %% bs_construct_SUITE.erl:563
  _415 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _415
  _425 = succeeded:body _415
  br ^1

1:
  _416 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _416
}

%% bs_construct_SUITE.erl:562
%% Counter = 424
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-11-'`(_303) {
0:
  %% bs_construct_SUITE.erl:562
  %% Argument types:
  %%    
  %% Aliased:
  %%    _303
  %% Anno: #{unit => 64}
  _301 = bs_create_bin `float`, `[1,{segment,1}]`, _303, `64`

  %% Aliased:
  %%    _301
  _416 = succeeded:body _301
  br _416, ^416, ^1

416:
  %% bs_construct_SUITE.erl:562
  %% Argument types:
  %%    
  %% Aliased:
  %%    _303
  _299 = bif:float _303

  %% Aliased:
  %%    _299
  _417 = succeeded:body _299
  br _417, ^417, ^1

417:
  %% bs_construct_SUITE.erl:562
  %% Argument types:
  %%    _299 => float()
  %% Unique:
  %%    _299
  %% Anno: #{unit => 64}
  _300 = bs_create_bin `float`, `[1,{segment,1}]`, _299, `64`

  %% Aliased:
  %%    _300
  _418 = succeeded:body _300
  br _418, ^418, ^1

418:
  %% bs_construct_SUITE.erl:562
  %% Argument types:
  %%    _301 => bitstring(64)
  %%    _300 => bitstring(64)
  %% Aliased:
  %%    _300, 
  %%    _301
  _337 = bif:'=:=' _301, _300
  br _337, ^421, ^420

421:
  %% Result type:
  %%    'true'
  ret `true`

420:
  %% bs_construct_SUITE.erl:562
  _413 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _413
  _423 = succeeded:body _413
  br ^1

1:
  _414 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _414
}

%% bs_construct_SUITE.erl:561
%% Counter = 432
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-10-'`(_282) {
0:
  %% bs_construct_SUITE.erl:561
  %% Argument types:
  %%    
  %% Aliased:
  %%    _282
  %% Anno: #{unit => 32}
  _276 = bs_create_bin `float`, `[1,{segment,1}]`, _282, `32`

  %% Aliased:
  %%    _276
  _414 = succeeded:body _276
  br _414, ^414, ^1

414:
  %% bs_construct_SUITE.erl:561
  %% Argument types:
  %%    
  %% Aliased:
  %%    _282
  _274 = bif:float _282

  %% Aliased:
  %%    _274
  _415 = succeeded:body _274
  br _415, ^415, ^1

415:
  %% bs_construct_SUITE.erl:561
  %% Argument types:
  %%    _274 => float()
  %% Unique:
  %%    _274
  %% Anno: #{unit => 32}
  _275 = bs_create_bin `float`, `[1,{segment,1}]`, _274, `32`

  %% Aliased:
  %%    _275
  _416 = succeeded:body _275
  br _416, ^416, ^1

416:
  %% bs_construct_SUITE.erl:561
  %% Argument types:
  %%    _276 => bitstring(32)
  %%    _275 => bitstring(32)
  %% Aliased:
  %%    _275, 
  %%    _276
  _367 = bif:'=:=' _276, _275
  br _367, ^427, ^418

427:
  %% bs_construct_SUITE.erl:561
  %% Argument types:
  %%    _282 => number()
  %% Unique:
  %%    _282
  %% Anno: #{unit => 64}
  _280 = bs_create_bin `float`, `[1,{segment,1}]`, _282, `64`

  %% Aliased:
  %%    _280
  _419 = succeeded:body _280
  br _419, ^420, ^1

420:
  %% bs_construct_SUITE.erl:561
  %% Argument types:
  %%    _274 => float()
  %% Unique:
  %%    _274
  %% Anno: #{unit => 64}
  _279 = bs_create_bin `float`, `[1,{segment,1}]`, _274, `64`

  %% Aliased:
  %%    _279
  _421 = succeeded:body _279
  br _421, ^421, ^1

421:
  %% bs_construct_SUITE.erl:561
  %% Argument types:
  %%    _280 => bitstring(64)
  %%    _279 => bitstring(64)
  %% Aliased:
  %%    _279, 
  %%    _280
  _336 = bif:'=:=' _280, _279
  br _336, ^424, ^423

424:
  %% Result type:
  %%    'true'
  ret `true`

423:
  %% bs_construct_SUITE.erl:561
  _410 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _410
  _426 = succeeded:body _410
  br ^1

418:
  %% bs_construct_SUITE.erl:561
  _411 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _411
  _429 = succeeded:body _411
  br ^1

1:
  _412 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _412
}

%% bs_construct_SUITE.erl:560
%% Counter = 429
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-9-'`(_264) {
0:
  %% bs_construct_SUITE.erl:560
  %% Argument types:
  %%    
  %% Aliased:
  %%    _264
  %% Anno: #{unit => 32}
  _258 = bs_create_bin `float`, `[1,{segment,1}]`, _264, `32`

  %% Aliased:
  %%    _258
  _411 = succeeded:body _258
  br _411, ^411, ^1

411:
  %% bs_construct_SUITE.erl:560
  %% Argument types:
  %%    
  %% Aliased:
  %%    _264
  _256 = bif:float _264

  %% Aliased:
  %%    _256
  _412 = succeeded:body _256
  br _412, ^412, ^1

412:
  %% bs_construct_SUITE.erl:560
  %% Argument types:
  %%    _256 => float()
  %% Unique:
  %%    _256
  %% Anno: #{unit => 32}
  _257 = bs_create_bin `float`, `[1,{segment,1}]`, _256, `32`

  %% Aliased:
  %%    _257
  _413 = succeeded:body _257
  br _413, ^413, ^1

413:
  %% bs_construct_SUITE.erl:560
  %% Argument types:
  %%    _258 => bitstring(32)
  %%    _257 => bitstring(32)
  %% Aliased:
  %%    _257, 
  %%    _258
  _366 = bif:'=:=' _258, _257
  br _366, ^424, ^415

424:
  %% bs_construct_SUITE.erl:560
  %% Argument types:
  %%    _264 => number()
  %% Unique:
  %%    _264
  %% Anno: #{unit => 64}
  _262 = bs_create_bin `float`, `[1,{segment,1}]`, _264, `64`

  %% Aliased:
  %%    _262
  _416 = succeeded:body _262
  br _416, ^417, ^1

417:
  %% bs_construct_SUITE.erl:560
  %% Argument types:
  %%    _256 => float()
  %% Unique:
  %%    _256
  %% Anno: #{unit => 64}
  _261 = bs_create_bin `float`, `[1,{segment,1}]`, _256, `64`

  %% Aliased:
  %%    _261
  _418 = succeeded:body _261
  br _418, ^418, ^1

418:
  %% bs_construct_SUITE.erl:560
  %% Argument types:
  %%    _262 => bitstring(64)
  %%    _261 => bitstring(64)
  %% Aliased:
  %%    _261, 
  %%    _262
  _335 = bif:'=:=' _262, _261
  br _335, ^421, ^420

421:
  %% Result type:
  %%    'true'
  ret `true`

420:
  %% bs_construct_SUITE.erl:560
  _407 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _407
  _423 = succeeded:body _407
  br ^1

415:
  %% bs_construct_SUITE.erl:560
  _408 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _408
  _426 = succeeded:body _408
  br ^1

1:
  _409 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _409
}

%% bs_construct_SUITE.erl:559
%% Counter = 436
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-8-'`(_233) {
0:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    
  %% Aliased:
  %%    _233
  %% Anno: #{unit => 16}
  _223 = bs_create_bin `float`, `[1,{segment,1}]`, _233, `16`

  %% Aliased:
  %%    _223
  _408 = succeeded:body _223
  br _408, ^408, ^1

408:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    
  %% Aliased:
  %%    _233
  _221 = bif:float _233

  %% Aliased:
  %%    _221
  _409 = succeeded:body _221
  br _409, ^409, ^1

409:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    _221 => float()
  %% Unique:
  %%    _221
  %% Anno: #{unit => 16}
  _222 = bs_create_bin `float`, `[1,{segment,1}]`, _221, `16`

  %% Aliased:
  %%    _222
  _410 = succeeded:body _222
  br _410, ^410, ^1

410:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    _223 => bitstring(16)
  %%    _222 => bitstring(16)
  %% Aliased:
  %%    _222, 
  %%    _223
  _361 = bif:'=:=' _223, _222
  br _361, ^429, ^412

429:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    _233 => number()
  %% Unique:
  %%    _233
  %% Anno: #{unit => 32}
  _227 = bs_create_bin `float`, `[1,{segment,1}]`, _233, `32`

  %% Aliased:
  %%    _227
  _413 = succeeded:body _227
  br _413, ^414, ^1

414:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    _221 => float()
  %% Unique:
  %%    _221
  %% Anno: #{unit => 32}
  _226 = bs_create_bin `float`, `[1,{segment,1}]`, _221, `32`

  %% Aliased:
  %%    _226
  _415 = succeeded:body _226
  br _415, ^415, ^1

415:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    _227 => bitstring(32)
  %%    _226 => bitstring(32)
  %% Aliased:
  %%    _226, 
  %%    _227
  _362 = bif:'=:=' _227, _226
  br _362, ^426, ^417

426:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    _233 => number()
  %% Unique:
  %%    _233
  %% Anno: #{unit => 64}
  _231 = bs_create_bin `float`, `[1,{segment,1}]`, _233, `64`

  %% Aliased:
  %%    _231
  _418 = succeeded:body _231
  br _418, ^419, ^1

419:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    _221 => float()
  %% Unique:
  %%    _221
  %% Anno: #{unit => 64}
  _230 = bs_create_bin `float`, `[1,{segment,1}]`, _221, `64`

  %% Aliased:
  %%    _230
  _420 = succeeded:body _230
  br _420, ^420, ^1

420:
  %% bs_construct_SUITE.erl:559
  %% Argument types:
  %%    _231 => bitstring(64)
  %%    _230 => bitstring(64)
  %% Aliased:
  %%    _230, 
  %%    _231
  _334 = bif:'=:=' _231, _230
  br _334, ^423, ^422

423:
  %% Result type:
  %%    'true'
  ret `true`

422:
  %% bs_construct_SUITE.erl:559
  _403 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _403
  _425 = succeeded:body _403
  br ^1

417:
  %% bs_construct_SUITE.erl:559
  _404 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _404
  _428 = succeeded:body _404
  br ^1

412:
  %% bs_construct_SUITE.erl:559
  _405 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _405
  _431 = succeeded:body _405
  br ^1

1:
  _406 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _406
}

%% bs_construct_SUITE.erl:558
%% Counter = 432
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-7-'`(_208) {
0:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    
  %% Aliased:
  %%    _208
  %% Anno: #{unit => 16}
  _198 = bs_create_bin `float`, `[1,{segment,1}]`, _208, `16`

  %% Aliased:
  %%    _198
  _404 = succeeded:body _198
  br _404, ^404, ^1

404:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    
  %% Aliased:
  %%    _208
  _196 = bif:float _208

  %% Aliased:
  %%    _196
  _405 = succeeded:body _196
  br _405, ^405, ^1

405:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    _196 => float()
  %% Unique:
  %%    _196
  %% Anno: #{unit => 16}
  _197 = bs_create_bin `float`, `[1,{segment,1}]`, _196, `16`

  %% Aliased:
  %%    _197
  _406 = succeeded:body _197
  br _406, ^406, ^1

406:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    _198 => bitstring(16)
  %%    _197 => bitstring(16)
  %% Aliased:
  %%    _197, 
  %%    _198
  _359 = bif:'=:=' _198, _197
  br _359, ^425, ^408

425:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    _208 => number()
  %% Unique:
  %%    _208
  %% Anno: #{unit => 32}
  _202 = bs_create_bin `float`, `[1,{segment,1}]`, _208, `32`

  %% Aliased:
  %%    _202
  _409 = succeeded:body _202
  br _409, ^410, ^1

410:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    _196 => float()
  %% Unique:
  %%    _196
  %% Anno: #{unit => 32}
  _201 = bs_create_bin `float`, `[1,{segment,1}]`, _196, `32`

  %% Aliased:
  %%    _201
  _411 = succeeded:body _201
  br _411, ^411, ^1

411:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    _202 => bitstring(32)
  %%    _201 => bitstring(32)
  %% Aliased:
  %%    _201, 
  %%    _202
  _360 = bif:'=:=' _202, _201
  br _360, ^422, ^413

422:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    _208 => number()
  %% Unique:
  %%    _208
  %% Anno: #{unit => 64}
  _206 = bs_create_bin `float`, `[1,{segment,1}]`, _208, `64`

  %% Aliased:
  %%    _206
  _414 = succeeded:body _206
  br _414, ^415, ^1

415:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    _196 => float()
  %% Unique:
  %%    _196
  %% Anno: #{unit => 64}
  _205 = bs_create_bin `float`, `[1,{segment,1}]`, _196, `64`

  %% Aliased:
  %%    _205
  _416 = succeeded:body _205
  br _416, ^416, ^1

416:
  %% bs_construct_SUITE.erl:558
  %% Argument types:
  %%    _206 => bitstring(64)
  %%    _205 => bitstring(64)
  %% Aliased:
  %%    _205, 
  %%    _206
  _333 = bif:'=:=' _206, _205
  br _333, ^419, ^418

419:
  %% Result type:
  %%    'true'
  ret `true`

418:
  %% bs_construct_SUITE.erl:558
  _399 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _399
  _421 = succeeded:body _399
  br ^1

413:
  %% bs_construct_SUITE.erl:558
  _400 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _400
  _424 = succeeded:body _400
  br ^1

408:
  %% bs_construct_SUITE.erl:558
  _401 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _401
  _427 = succeeded:body _401
  br ^1

1:
  _402 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _402
}

%% bs_construct_SUITE.erl:557
%% Counter = 428
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-6-'`(_183) {
0:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    
  %% Aliased:
  %%    _183
  %% Anno: #{unit => 16}
  _173 = bs_create_bin `float`, `[1,{segment,1}]`, _183, `16`

  %% Aliased:
  %%    _173
  _400 = succeeded:body _173
  br _400, ^400, ^1

400:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    
  %% Aliased:
  %%    _183
  _171 = bif:float _183

  %% Aliased:
  %%    _171
  _401 = succeeded:body _171
  br _401, ^401, ^1

401:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    _171 => float()
  %% Unique:
  %%    _171
  %% Anno: #{unit => 16}
  _172 = bs_create_bin `float`, `[1,{segment,1}]`, _171, `16`

  %% Aliased:
  %%    _172
  _402 = succeeded:body _172
  br _402, ^402, ^1

402:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    _173 => bitstring(16)
  %%    _172 => bitstring(16)
  %% Aliased:
  %%    _172, 
  %%    _173
  _357 = bif:'=:=' _173, _172
  br _357, ^421, ^404

421:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    _183 => number()
  %% Unique:
  %%    _183
  %% Anno: #{unit => 32}
  _177 = bs_create_bin `float`, `[1,{segment,1}]`, _183, `32`

  %% Aliased:
  %%    _177
  _405 = succeeded:body _177
  br _405, ^406, ^1

406:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    _171 => float()
  %% Unique:
  %%    _171
  %% Anno: #{unit => 32}
  _176 = bs_create_bin `float`, `[1,{segment,1}]`, _171, `32`

  %% Aliased:
  %%    _176
  _407 = succeeded:body _176
  br _407, ^407, ^1

407:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    _177 => bitstring(32)
  %%    _176 => bitstring(32)
  %% Aliased:
  %%    _176, 
  %%    _177
  _358 = bif:'=:=' _177, _176
  br _358, ^418, ^409

418:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    _183 => number()
  %% Unique:
  %%    _183
  %% Anno: #{unit => 64}
  _181 = bs_create_bin `float`, `[1,{segment,1}]`, _183, `64`

  %% Aliased:
  %%    _181
  _410 = succeeded:body _181
  br _410, ^411, ^1

411:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    _171 => float()
  %% Unique:
  %%    _171
  %% Anno: #{unit => 64}
  _180 = bs_create_bin `float`, `[1,{segment,1}]`, _171, `64`

  %% Aliased:
  %%    _180
  _412 = succeeded:body _180
  br _412, ^412, ^1

412:
  %% bs_construct_SUITE.erl:557
  %% Argument types:
  %%    _181 => bitstring(64)
  %%    _180 => bitstring(64)
  %% Aliased:
  %%    _180, 
  %%    _181
  _332 = bif:'=:=' _181, _180
  br _332, ^415, ^414

415:
  %% Result type:
  %%    'true'
  ret `true`

414:
  %% bs_construct_SUITE.erl:557
  _395 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _395
  _417 = succeeded:body _395
  br ^1

409:
  %% bs_construct_SUITE.erl:557
  _396 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _396
  _420 = succeeded:body _396
  br ^1

404:
  %% bs_construct_SUITE.erl:557
  _397 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _397
  _423 = succeeded:body _397
  br ^1

1:
  _398 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _398
}

%% bs_construct_SUITE.erl:556
%% Counter = 424
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-5-'`(_148) {
0:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  %% Anno: #{unit => 16}
  _138 = bs_create_bin `float`, `[1,{segment,1}]`, _148, `16`

  %% Aliased:
  %%    _138
  _396 = succeeded:body _138
  br _396, ^396, ^1

396:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _136 = bif:float _148

  %% Aliased:
  %%    _136
  _397 = succeeded:body _136
  br _397, ^397, ^1

397:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    _136 => float()
  %% Unique:
  %%    _136
  %% Anno: #{unit => 16}
  _137 = bs_create_bin `float`, `[1,{segment,1}]`, _136, `16`

  %% Aliased:
  %%    _137
  _398 = succeeded:body _137
  br _398, ^398, ^1

398:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    _138 => bitstring(16)
  %%    _137 => bitstring(16)
  %% Aliased:
  %%    _137, 
  %%    _138
  _352 = bif:'=:=' _138, _137
  br _352, ^417, ^400

417:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    _148 => number()
  %% Unique:
  %%    _148
  %% Anno: #{unit => 32}
  _142 = bs_create_bin `float`, `[1,{segment,1}]`, _148, `32`

  %% Aliased:
  %%    _142
  _401 = succeeded:body _142
  br _401, ^402, ^1

402:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    _136 => float()
  %% Unique:
  %%    _136
  %% Anno: #{unit => 32}
  _141 = bs_create_bin `float`, `[1,{segment,1}]`, _136, `32`

  %% Aliased:
  %%    _141
  _403 = succeeded:body _141
  br _403, ^403, ^1

403:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    _142 => bitstring(32)
  %%    _141 => bitstring(32)
  %% Aliased:
  %%    _141, 
  %%    _142
  _353 = bif:'=:=' _142, _141
  br _353, ^414, ^405

414:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    _148 => number()
  %% Unique:
  %%    _148
  %% Anno: #{unit => 64}
  _146 = bs_create_bin `float`, `[1,{segment,1}]`, _148, `64`

  %% Aliased:
  %%    _146
  _406 = succeeded:body _146
  br _406, ^407, ^1

407:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    _136 => float()
  %% Unique:
  %%    _136
  %% Anno: #{unit => 64}
  _145 = bs_create_bin `float`, `[1,{segment,1}]`, _136, `64`

  %% Aliased:
  %%    _145
  _408 = succeeded:body _145
  br _408, ^408, ^1

408:
  %% bs_construct_SUITE.erl:556
  %% Argument types:
  %%    _146 => bitstring(64)
  %%    _145 => bitstring(64)
  %% Aliased:
  %%    _145, 
  %%    _146
  _331 = bif:'=:=' _146, _145
  br _331, ^411, ^410

411:
  %% Result type:
  %%    'true'
  ret `true`

410:
  %% bs_construct_SUITE.erl:556
  _391 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _391
  _413 = succeeded:body _391
  br ^1

405:
  %% bs_construct_SUITE.erl:556
  _392 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _392
  _416 = succeeded:body _392
  br ^1

400:
  %% bs_construct_SUITE.erl:556
  _393 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _393
  _419 = succeeded:body _393
  br ^1

1:
  _394 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _394
}

%% bs_construct_SUITE.erl:555
%% Counter = 420
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-4-'`(_123) {
0:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  %% Anno: #{unit => 16}
  _113 = bs_create_bin `float`, `[1,{segment,1}]`, _123, `16`

  %% Aliased:
  %%    _113
  _392 = succeeded:body _113
  br _392, ^392, ^1

392:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _111 = bif:float _123

  %% Aliased:
  %%    _111
  _393 = succeeded:body _111
  br _393, ^393, ^1

393:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    _111 => float()
  %% Unique:
  %%    _111
  %% Anno: #{unit => 16}
  _112 = bs_create_bin `float`, `[1,{segment,1}]`, _111, `16`

  %% Aliased:
  %%    _112
  _394 = succeeded:body _112
  br _394, ^394, ^1

394:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    _113 => bitstring(16)
  %%    _112 => bitstring(16)
  %% Aliased:
  %%    _112, 
  %%    _113
  _350 = bif:'=:=' _113, _112
  br _350, ^413, ^396

413:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    _123 => number()
  %% Unique:
  %%    _123
  %% Anno: #{unit => 32}
  _117 = bs_create_bin `float`, `[1,{segment,1}]`, _123, `32`

  %% Aliased:
  %%    _117
  _397 = succeeded:body _117
  br _397, ^398, ^1

398:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    _111 => float()
  %% Unique:
  %%    _111
  %% Anno: #{unit => 32}
  _116 = bs_create_bin `float`, `[1,{segment,1}]`, _111, `32`

  %% Aliased:
  %%    _116
  _399 = succeeded:body _116
  br _399, ^399, ^1

399:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    _117 => bitstring(32)
  %%    _116 => bitstring(32)
  %% Aliased:
  %%    _116, 
  %%    _117
  _351 = bif:'=:=' _117, _116
  br _351, ^410, ^401

410:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    _123 => number()
  %% Unique:
  %%    _123
  %% Anno: #{unit => 64}
  _121 = bs_create_bin `float`, `[1,{segment,1}]`, _123, `64`

  %% Aliased:
  %%    _121
  _402 = succeeded:body _121
  br _402, ^403, ^1

403:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    _111 => float()
  %% Unique:
  %%    _111
  %% Anno: #{unit => 64}
  _120 = bs_create_bin `float`, `[1,{segment,1}]`, _111, `64`

  %% Aliased:
  %%    _120
  _404 = succeeded:body _120
  br _404, ^404, ^1

404:
  %% bs_construct_SUITE.erl:555
  %% Argument types:
  %%    _121 => bitstring(64)
  %%    _120 => bitstring(64)
  %% Aliased:
  %%    _120, 
  %%    _121
  _330 = bif:'=:=' _121, _120
  br _330, ^407, ^406

407:
  %% Result type:
  %%    'true'
  ret `true`

406:
  %% bs_construct_SUITE.erl:555
  _387 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _387
  _409 = succeeded:body _387
  br ^1

401:
  %% bs_construct_SUITE.erl:555
  _388 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _388
  _412 = succeeded:body _388
  br ^1

396:
  %% bs_construct_SUITE.erl:555
  _389 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _389
  _415 = succeeded:body _389
  br ^1

1:
  _390 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _390
}

%% bs_construct_SUITE.erl:554
%% Counter = 416
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-3-'`(_98) {
0:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  %% Anno: #{unit => 16}
  _88 = bs_create_bin `float`, `[1,{segment,1}]`, _98, `16`

  %% Aliased:
  %%    _88
  _388 = succeeded:body _88
  br _388, ^388, ^1

388:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _86 = bif:float _98

  %% Aliased:
  %%    _86
  _389 = succeeded:body _86
  br _389, ^389, ^1

389:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    _86 => float()
  %% Unique:
  %%    _86
  %% Anno: #{unit => 16}
  _87 = bs_create_bin `float`, `[1,{segment,1}]`, _86, `16`

  %% Aliased:
  %%    _87
  _390 = succeeded:body _87
  br _390, ^390, ^1

390:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    _88 => bitstring(16)
  %%    _87 => bitstring(16)
  %% Aliased:
  %%    _87, 
  %%    _88
  _348 = bif:'=:=' _88, _87
  br _348, ^409, ^392

409:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    _98 => number()
  %% Unique:
  %%    _98
  %% Anno: #{unit => 32}
  _92 = bs_create_bin `float`, `[1,{segment,1}]`, _98, `32`

  %% Aliased:
  %%    _92
  _393 = succeeded:body _92
  br _393, ^394, ^1

394:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    _86 => float()
  %% Unique:
  %%    _86
  %% Anno: #{unit => 32}
  _91 = bs_create_bin `float`, `[1,{segment,1}]`, _86, `32`

  %% Aliased:
  %%    _91
  _395 = succeeded:body _91
  br _395, ^395, ^1

395:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    _92 => bitstring(32)
  %%    _91 => bitstring(32)
  %% Aliased:
  %%    _91, 
  %%    _92
  _349 = bif:'=:=' _92, _91
  br _349, ^406, ^397

406:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    _98 => number()
  %% Unique:
  %%    _98
  %% Anno: #{unit => 64}
  _96 = bs_create_bin `float`, `[1,{segment,1}]`, _98, `64`

  %% Aliased:
  %%    _96
  _398 = succeeded:body _96
  br _398, ^399, ^1

399:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    _86 => float()
  %% Unique:
  %%    _86
  %% Anno: #{unit => 64}
  _95 = bs_create_bin `float`, `[1,{segment,1}]`, _86, `64`

  %% Aliased:
  %%    _95
  _400 = succeeded:body _95
  br _400, ^400, ^1

400:
  %% bs_construct_SUITE.erl:554
  %% Argument types:
  %%    _96 => bitstring(64)
  %%    _95 => bitstring(64)
  %% Aliased:
  %%    _95, 
  %%    _96
  _329 = bif:'=:=' _96, _95
  br _329, ^403, ^402

403:
  %% Result type:
  %%    'true'
  ret `true`

402:
  %% bs_construct_SUITE.erl:554
  _383 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _383
  _405 = succeeded:body _383
  br ^1

397:
  %% bs_construct_SUITE.erl:554
  _384 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _384
  _408 = succeeded:body _384
  br ^1

392:
  %% bs_construct_SUITE.erl:554
  _385 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _385
  _411 = succeeded:body _385
  br ^1

1:
  _386 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _386
}

%% bs_construct_SUITE.erl:553
%% Counter = 412
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-2-'`(_73) {
0:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  %% Anno: #{unit => 16}
  _63 = bs_create_bin `float`, `[1,{segment,1}]`, _73, `16`

  %% Aliased:
  %%    _63
  _384 = succeeded:body _63
  br _384, ^384, ^1

384:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _61 = bif:float _73

  %% Aliased:
  %%    _61
  _385 = succeeded:body _61
  br _385, ^385, ^1

385:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    _61 => float()
  %% Unique:
  %%    _61
  %% Anno: #{unit => 16}
  _62 = bs_create_bin `float`, `[1,{segment,1}]`, _61, `16`

  %% Aliased:
  %%    _62
  _386 = succeeded:body _62
  br _386, ^386, ^1

386:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    _63 => bitstring(16)
  %%    _62 => bitstring(16)
  %% Aliased:
  %%    _62, 
  %%    _63
  _346 = bif:'=:=' _63, _62
  br _346, ^405, ^388

405:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    _73 => number()
  %% Unique:
  %%    _73
  %% Anno: #{unit => 32}
  _67 = bs_create_bin `float`, `[1,{segment,1}]`, _73, `32`

  %% Aliased:
  %%    _67
  _389 = succeeded:body _67
  br _389, ^390, ^1

390:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    _61 => float()
  %% Unique:
  %%    _61
  %% Anno: #{unit => 32}
  _66 = bs_create_bin `float`, `[1,{segment,1}]`, _61, `32`

  %% Aliased:
  %%    _66
  _391 = succeeded:body _66
  br _391, ^391, ^1

391:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    _67 => bitstring(32)
  %%    _66 => bitstring(32)
  %% Aliased:
  %%    _66, 
  %%    _67
  _347 = bif:'=:=' _67, _66
  br _347, ^402, ^393

402:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    _73 => number()
  %% Unique:
  %%    _73
  %% Anno: #{unit => 64}
  _71 = bs_create_bin `float`, `[1,{segment,1}]`, _73, `64`

  %% Aliased:
  %%    _71
  _394 = succeeded:body _71
  br _394, ^395, ^1

395:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    _61 => float()
  %% Unique:
  %%    _61
  %% Anno: #{unit => 64}
  _70 = bs_create_bin `float`, `[1,{segment,1}]`, _61, `64`

  %% Aliased:
  %%    _70
  _396 = succeeded:body _70
  br _396, ^396, ^1

396:
  %% bs_construct_SUITE.erl:553
  %% Argument types:
  %%    _71 => bitstring(64)
  %%    _70 => bitstring(64)
  %% Aliased:
  %%    _70, 
  %%    _71
  _328 = bif:'=:=' _71, _70
  br _328, ^399, ^398

399:
  %% Result type:
  %%    'true'
  ret `true`

398:
  %% bs_construct_SUITE.erl:553
  _379 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _379
  _401 = succeeded:body _379
  br ^1

393:
  %% bs_construct_SUITE.erl:553
  _380 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _380
  _404 = succeeded:body _380
  br ^1

388:
  %% bs_construct_SUITE.erl:553
  _381 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _381
  _407 = succeeded:body _381
  br ^1

1:
  _382 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _382
}

%% bs_construct_SUITE.erl:552
%% Counter = 408
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-1-'`(_38) {
0:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  %% Anno: #{unit => 16}
  _28 = bs_create_bin `float`, `[1,{segment,1}]`, _38, `16`

  %% Aliased:
  %%    _28
  _380 = succeeded:body _28
  br _380, ^380, ^1

380:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _26 = bif:float _38

  %% Aliased:
  %%    _26
  _381 = succeeded:body _26
  br _381, ^381, ^1

381:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    _26 => float()
  %% Unique:
  %%    _26
  %% Anno: #{unit => 16}
  _27 = bs_create_bin `float`, `[1,{segment,1}]`, _26, `16`

  %% Aliased:
  %%    _27
  _382 = succeeded:body _27
  br _382, ^382, ^1

382:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    _28 => bitstring(16)
  %%    _27 => bitstring(16)
  %% Aliased:
  %%    _27, 
  %%    _28
  _341 = bif:'=:=' _28, _27
  br _341, ^401, ^384

401:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    _38 => number()
  %% Unique:
  %%    _38
  %% Anno: #{unit => 32}
  _32 = bs_create_bin `float`, `[1,{segment,1}]`, _38, `32`

  %% Aliased:
  %%    _32
  _385 = succeeded:body _32
  br _385, ^386, ^1

386:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    _26 => float()
  %% Unique:
  %%    _26
  %% Anno: #{unit => 32}
  _31 = bs_create_bin `float`, `[1,{segment,1}]`, _26, `32`

  %% Aliased:
  %%    _31
  _387 = succeeded:body _31
  br _387, ^387, ^1

387:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    _32 => bitstring(32)
  %%    _31 => bitstring(32)
  %% Aliased:
  %%    _31, 
  %%    _32
  _342 = bif:'=:=' _32, _31
  br _342, ^398, ^389

398:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    _38 => number()
  %% Unique:
  %%    _38
  %% Anno: #{unit => 64}
  _36 = bs_create_bin `float`, `[1,{segment,1}]`, _38, `64`

  %% Aliased:
  %%    _36
  _390 = succeeded:body _36
  br _390, ^391, ^1

391:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    _26 => float()
  %% Unique:
  %%    _26
  %% Anno: #{unit => 64}
  _35 = bs_create_bin `float`, `[1,{segment,1}]`, _26, `64`

  %% Aliased:
  %%    _35
  _392 = succeeded:body _35
  br _392, ^392, ^1

392:
  %% bs_construct_SUITE.erl:552
  %% Argument types:
  %%    _36 => bitstring(64)
  %%    _35 => bitstring(64)
  %% Aliased:
  %%    _35, 
  %%    _36
  _327 = bif:'=:=' _36, _35
  br _327, ^395, ^394

395:
  %% Result type:
  %%    'true'
  ret `true`

394:
  %% bs_construct_SUITE.erl:552
  _375 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _375
  _397 = succeeded:body _375
  br ^1

389:
  %% bs_construct_SUITE.erl:552
  _376 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _376
  _400 = succeeded:body _376
  br ^1

384:
  %% bs_construct_SUITE.erl:552
  _377 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _377
  _403 = succeeded:body _377
  br ^1

1:
  _378 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _378
}

%% bs_construct_SUITE.erl:551
%% Counter = 404
%% bs_ensure_opt: true
function `bs_construct_SUITE`:`'-coerce_to_float/1-fun-0-'`(_13) {
0:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  %% Anno: #{unit => 16}
  _3 = bs_create_bin `float`, `[1,{segment,1}]`, _13, `16`

  %% Aliased:
  %%    _3
  _376 = succeeded:body _3
  br _376, ^376, ^1

376:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _1 = bif:float _13

  %% Aliased:
  %%    _1
  _377 = succeeded:body _1
  br _377, ^377, ^1

377:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    _1 => float()
  %% Unique:
  %%    _1
  %% Anno: #{unit => 16}
  _2 = bs_create_bin `float`, `[1,{segment,1}]`, _1, `16`

  %% Aliased:
  %%    _2
  _378 = succeeded:body _2
  br _378, ^378, ^1

378:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    _3 => bitstring(16)
  %%    _2 => bitstring(16)
  %% Aliased:
  %%    _2, 
  %%    _3
  _339 = bif:'=:=' _3, _2
  br _339, ^397, ^380

397:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    _13 => number()
  %% Unique:
  %%    _13
  %% Anno: #{unit => 32}
  _7 = bs_create_bin `float`, `[1,{segment,1}]`, _13, `32`

  %% Aliased:
  %%    _7
  _381 = succeeded:body _7
  br _381, ^382, ^1

382:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    _1 => float()
  %% Unique:
  %%    _1
  %% Anno: #{unit => 32}
  _6 = bs_create_bin `float`, `[1,{segment,1}]`, _1, `32`

  %% Aliased:
  %%    _6
  _383 = succeeded:body _6
  br _383, ^383, ^1

383:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    _7 => bitstring(32)
  %%    _6 => bitstring(32)
  %% Aliased:
  %%    _6, 
  %%    _7
  _340 = bif:'=:=' _7, _6
  br _340, ^394, ^385

394:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    _13 => number()
  %% Unique:
  %%    _13
  %% Anno: #{unit => 64}
  _11 = bs_create_bin `float`, `[1,{segment,1}]`, _13, `64`

  %% Aliased:
  %%    _11
  _386 = succeeded:body _11
  br _386, ^387, ^1

387:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    _1 => float()
  %% Unique:
  %%    _1
  %% Anno: #{unit => 64}
  _10 = bs_create_bin `float`, `[1,{segment,1}]`, _1, `64`

  %% Aliased:
  %%    _10
  _388 = succeeded:body _10
  br _388, ^388, ^1

388:
  %% bs_construct_SUITE.erl:551
  %% Argument types:
  %%    _11 => bitstring(64)
  %%    _10 => bitstring(64)
  %% Aliased:
  %%    _10, 
  %%    _11
  _326 = bif:'=:=' _11, _10
  br _326, ^391, ^390

391:
  %% Result type:
  %%    'true'
  ret `true`

390:
  %% bs_construct_SUITE.erl:551
  _371 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _371
  _393 = succeeded:body _371
  br ^1

385:
  %% bs_construct_SUITE.erl:551
  _372 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _372
  _396 = succeeded:body _372
  br ^1

380:
  %% bs_construct_SUITE.erl:551
  _373 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _373
  _399 = succeeded:body _373
  br ^1

1:
  _374 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _374
}

%% bs_construct_SUITE.erl:336
%% Counter = 240
%% bs_ensure_opt: true
%% Parameters
%%    _33 =>
%%     nil()
%%    Bitstr =>
%%     'not_a_number' | -2047..16 | bitstring(1)
function `bs_construct_SUITE`:`'-fail/1-lc$^1/1-1-'`(_33, Bitstr) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% bs_construct_SUITE.erl:335
%% Counter = 237
%% bs_ensure_opt: true
%% Parameters
%%    _25 =>
%%     nil()
%%    BadSz =>
%%     'not_a_number' | -2047..16 | bitstring(1)
%%    Bitstr =>
%%     'not_a_number' | -2047..16 | bitstring(1)
function `bs_construct_SUITE`:`'-fail/1-lc$^0/1-0-'`(_25, BadSz, Bitstr) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}
