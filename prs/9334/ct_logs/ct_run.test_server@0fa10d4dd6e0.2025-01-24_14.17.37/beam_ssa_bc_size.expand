{attribute,{1,1},file,{"beam_ssa_bc_size.erl",1}}.
{attribute,{38,2},module,beam_ssa_bc_size}.
{attribute,{40,2},export,[{opt,1}]}.
{attribute,{42,2},import,{lists,[{any,2},{member,2},{reverse,1},{sort,1}]}}.
{attribute,{1,1},file,{"beam_ssa_opt.hrl",1}}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{22,1},file,{"beam_ssa_opt.hrl",22}}.
{attribute,
    {23,2},
    record,
    {func_info,
        [{typed_record_field,
             {record_field,
                 {25,10},
                 {atom,{25,10},in},
                 {call,
                     {25,15},
                     {remote,
                         {25,22},
                         {atom,{25,15},ordsets},
                         {atom,{25,23},new}},
                     []}},
             {remote_type,
                 {25,32},
                 [{atom,{25,32},ordsets},
                  {atom,{25,40},ordset},
                  [{user_type,{25,47},func_id,[]}]]}},
         {typed_record_field,
             {record_field,
                 {26,10},
                 {atom,{26,10},out},
                 {call,
                     {26,16},
                     {remote,
                         {26,23},
                         {atom,{26,16},ordsets},
                         {atom,{26,24},new}},
                     []}},
             {remote_type,
                 {26,33},
                 [{atom,{26,33},ordsets},
                  {atom,{26,41},ordset},
                  [{user_type,{26,48},func_id,[]}]]}},
         {typed_record_field,
             {record_field,
                 {30,10},
                 {atom,{30,10},exported},
                 {atom,{30,21},true}},
             {type,{30,29},boolean,[]}},
         {typed_record_field,
             {record_field,{39,10},{atom,{39,10},arg_types},{nil,{39,22}}},
             {type,{39,28},list,[{user_type,{39,33},arg_type_map,[]}]}},
         {typed_record_field,
             {record_field,{50,10},{atom,{50,10},succ_types},{nil,{50,23}}},
             {user_type,{50,29},success_type_set,[]}}]}}.
{attribute,
    {52,2},
    type,
    {arg_key,
        {type,
            {52,20},
            tuple,
            [{ann_type,
                 {52,21},
                 [{var,{52,21},'CallerId'},{user_type,{52,33},func_id,[]}]},
             {ann_type,
                 {53,21},
                 [{var,{53,21},'CallDst'},
                  {remote_type,
                      {53,32},
                      [{atom,{53,32},beam_ssa},{atom,{53,41},b_var},[]]}]}]},
        []}}.
{attribute,{54,2},
           type,
           {arg_type_map,{type,{54,25},
                               map,
                               [{type,{54,38},
                                      map_field_assoc,
                                      [{user_type,{54,28},arg_key,[]},
                                       {type,{54,41},term,[]}]}]},
                         []}}.
{attribute,
    {56,2},
    type,
    {call_self,
        {type,
            {56,22},
            tuple,
            [{atom,{56,23},call_self},
             {ann_type,
                 {56,34},
                 [{var,{56,34},'ArgTypes'},
                  {type,{56,46},list,[{type,{56,47},term,[]}]}]}]},
        []}}.
{attribute,
    {57,2},
    type,
    {success_type_set,
        {type,
            {57,29},
            list,
            [{type,
                 {57,30},
                 tuple,
                 [{ann_type,
                      {57,31},
                      [{var,{57,31},'ArgTypes'},
                       {type,{57,43},list,[{type,{57,44},term,[]}]}]},
                  {ann_type,
                      {58,31},
                      [{var,{58,31},'RetType'},
                       {type,
                           {58,42},
                           union,
                           [{user_type,{58,42},call_self,[]},
                            {type,{58,56},term,[]}]}]}]}]},
        []}}.
{attribute,{63,2},
           type,
           {func_id,{remote_type,{63,20},
                                 [{atom,{63,20},beam_ssa},
                                  {atom,{63,29},b_local},
                                  []]},
                    []}}.
{attribute,
    {64,2},
    type,
    {func_info_db,
        {type,
            {64,25},
            map,
            [{type,
                 {64,38},
                 map_field_assoc,
                 [{user_type,{64,28},func_id,[]},
                  {type,{64,41},record,[{atom,{64,42},func_info}]}]}]},
        []}}.
{attribute,
    {66,2},
    record,
    {opt_st,
        [{typed_record_field,
             {record_field,{66,18},{atom,{66,18},ssa}},
             {type,
                 {66,25},
                 union,
                 [{type,
                      {66,25},
                      list,
                      [{type,
                           {66,26},
                           tuple,
                           [{remote_type,
                                {66,27},
                                [{atom,{66,27},beam_ssa},
                                 {atom,{66,36},label},
                                 []]},
                            {remote_type,
                                {66,44},
                                [{atom,{66,44},beam_ssa},
                                 {atom,{66,53},b_blk},
                                 []]}]}]},
                  {remote_type,
                      {67,25},
                      [{atom,{67,25},beam_ssa},
                       {atom,{67,34},block_map},
                       []]}]}},
         {typed_record_field,
             {record_field,{68,18},{atom,{68,18},args}},
             {type,
                 {68,26},
                 list,
                 [{remote_type,
                      {68,27},
                      [{atom,{68,27},beam_ssa},{atom,{68,36},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{69,18},{atom,{69,18},cnt}},
             {remote_type,
                 {69,25},
                 [{atom,{69,25},beam_ssa},{atom,{69,34},label},[]]}},
         {typed_record_field,
             {record_field,{70,18},{atom,{70,18},anno}},
             {remote_type,
                 {70,26},
                 [{atom,{70,26},beam_ssa},{atom,{70,35},anno},[]]}}]}}.
{attribute,
    {71,2},
    type,
    {st_map,
        {type,
            {71,19},
            map,
            [{type,
                 {71,32},
                 map_field_assoc,
                 [{user_type,{71,22},func_id,[]},
                  {type,{71,35},record,[{atom,{71,36},opt_st}]}]}]},
        []}}.
{attribute,{45,1},file,{"beam_ssa_bc_size.erl",45}}.
{attribute,{46,2},
           spec,
           {{opt,1},
            [{type,{46,10},
                   'fun',
                   [{type,{46,10},product,[{user_type,{46,11},st_map,[]}]},
                    {user_type,{46,24},st_map,[]}]}]}}.
{function,
    {48,1},
    opt,1,
    [{clause,
         {48,1},
         [{var,{48,1},'_'}],
         [[{call,
               {48,1},
               {remote,
                   {48,1},
                   {atom,{48,1},fake},
                   {atom,{48,1},is_beam_bif_info}},
               []}]],
         [{debug_line,48,1},{atom,{48,1},ignore}]},
     {clause,
         {48,1},
         [{var,{48,5},'StMap'}],
         [[{call,
               {48,17},
               {remote,{48,17},{atom,{48,17},erlang},{atom,{48,17},is_map}},
               [{var,{48,24},'StMap'}]}]],
         [{debug_line,49,2},
          {call,
              {49,5},
              {atom,{49,5},opt},
              [{block,0,
                   [{call,
                        {49,9},
                        {remote,
                            {49,13},
                            {atom,{49,9},maps},
                            {atom,{49,14},keys}},
                        [{var,{49,19},'StMap'}]}]},
               {var,{49,27},'StMap'}]}]}]}.
{function,{51,1},
          opt,2,
          [{clause,{51,1},
                   [{var,{51,1},'_'},{var,{51,1},'_'}],
                   [[{call,{51,1},
                           {remote,{51,1},
                                   {atom,{51,1},fake},
                                   {atom,{51,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,51,3},{atom,{51,1},ignore}]},
           {clause,{51,1},
                   [{cons,{51,5},{var,{51,6},'Id'},{var,{51,9},'Ids'}},
                    {var,{51,15},'StMap0'}],
                   [],
                   [{debug_line,52,4},
                    {match,{52,5},
                           {var,{52,5},'StMap'},
                           {call,{52,13},
                                 {atom,{52,13},opt_function},
                                 [{var,{52,26},'Id'},{var,{52,30},'StMap0'}]}},
                    {debug_line,53,5},
                    {call,{53,5},
                          {atom,{53,5},opt},
                          [{var,{53,9},'Ids'},{var,{53,14},'StMap'}]}]},
           {clause,{54,1},
                   [{nil,{54,5}},{var,{54,9},'StMap'}],
                   [],
                   [{debug_line,54,6},{var,{54,19},'StMap'}]}]}.
{function,
 {56,1},
 opt_function,2,
 [{clause,
   {56,1},
   [{var,{56,1},'_'},{var,{56,1},'_'}],
   [[{call,
      {56,1},
      {remote,{56,1},{atom,{56,1},fake},{atom,{56,1},is_beam_bif_info}},
      []}]],
   [{debug_line,56,7},{atom,{56,1},ignore}]},
  {clause,
   {56,1},
   [{var,{56,14},'Id'},{var,{56,18},'StMap'}],
   [],
   [{debug_line,57,8},
    {match,
     {57,5},
     {tuple,
      {57,5},
      [{atom,{57,5},opt_st},
       {var,{57,27},'Linear0'},
       {var,{57,5},'_'},
       {var,{57,39},'Count0'},
       {var,{57,18},'Anno'}]},
     {match,
      {57,49},
      {var,{57,49},'OptSt0'},
      {call,
       {57,58},
       {remote,{57,58},{atom,{57,58},erlang},{atom,{57,58},map_get}},
       [{var,{57,66},'Id'},{var,{57,70},'StMap'}]}}},
    {debug_line,58,9},
    {match,
     {58,5},
     {var,{58,5},'ParamInfo'},
     {call,
      {58,17},
      {remote,{58,21},{atom,{58,17},maps},{atom,{58,22},get}},
      [{atom,{58,26},parameter_info},
       {var,{58,42},'Anno'},
       {block,0,[{map,{58,48},[]}]}]}},
    {debug_line,59,10},
    {'try',
     {59,5},
     [{call,
       {59,9},
       {atom,{59,9},opt_blks},
       [{var,{59,18},'Linear0'},
        {var,{59,27},'ParamInfo'},
        {var,{59,38},'StMap'},
        {atom,{59,45},unchanged},
        {var,{59,56},'Count0'},
        {nil,{59,64}}]}],
     [{clause,
       {60,9},
       [{tuple,{60,9},[{var,{60,10},'Linear'},{var,{60,17},'Count'}]}],
       [],
       [{debug_line,61,11},
        {match,
         {61,13},
         {var,{61,13},'OptSt'},
         {block,
          {61,21},
          [{match,{61,21},{var,{61,21},rec0},{var,{61,21},'OptSt0'}},
           {'case',
            {61,35},
            {var,{61,21},rec0},
            [{clause,
              {61,35},
              [{tuple,
                {61,35},
                [{atom,{61,35},opt_st},
                 {var,{61,35},'_'},
                 {var,{61,35},'_'},
                 {var,{61,35},'_'},
                 {var,{61,35},'_'}]}],
              [],
              [{call,
                {61,35},
                {remote,
                 {61,35},
                 {atom,{61,35},erlang},
                 {atom,{61,35},setelement}},
                [{integer,{61,35},2},
                 {call,
                  {61,46},
                  {remote,
                   {61,46},
                   {atom,{61,46},erlang},
                   {atom,{61,46},setelement}},
                  [{integer,{61,46},4},
                   {var,{61,21},rec0},
                   {var,{61,50},'Count'}]},
                 {var,{61,39},'Linear'}]}]},
             {clause,
              [{generated,true},{location,{61,35}}],
              [{var,[{generated,true},{location,{61,35}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{61,35}}],
                {remote,
                 [{generated,true},{location,{61,35}}],
                 {atom,[{generated,true},{location,{61,35}}],erlang},
                 {atom,[{generated,true},{location,{61,35}}],error}},
                [{tuple,
                  [{generated,true},{location,{61,35}}],
                  [{atom,[{generated,true},{location,{61,35}}],badrecord},
                   {var,{61,21},rec0}]}]}]}]}]}},
        {debug_line,62,12},
        {map,
         {62,18},
         {var,{62,13},'StMap'},
         [{map_field_exact,
           {62,23},
           {var,{62,20},'Id'},
           {var,{62,26},'OptSt'}}]}]},
      {clause,
       {63,9},
       [{atom,{63,9},none}],
       [],
       [{debug_line,64,13},{var,{64,13},'StMap'}]}],
     [{clause,
       {66,9},
       [{tuple,
         {66,9},
         [{var,{66,9},'Class'},{var,{66,15},'Error'},{var,{66,21},'Stack'}]}],
       [],
       [{debug_line,67,14},
        {match,
         {67,13},
         {tuple,
          {67,13},
          [{atom,{67,13},b_local},
           {tuple,{67,27},[{atom,{67,27},b_literal},{var,{67,42},'Name'}]},
           {var,{67,54},'Arity'}]},
         {var,{67,63},'Id'}},
        {debug_line,68,15},
        {call,
         {68,13},
         {remote,{68,15},{atom,{68,13},io},{atom,{68,16},fwrite}},
         [{block,0,[{string,{68,23},"Function: ~w/~w\n"}]},
          {block,0,
           [{cons,
             {68,44},
             {var,{68,45},'Name'},
             {cons,{68,50},{var,{68,50},'Arity'},{nil,{68,55}}}}]}]},
        {debug_line,69,16},
        {call,
         {69,13},
         {remote,{69,19},{atom,{69,13},erlang},{atom,{69,20},raise}},
         [{var,{69,26},'Class'},
          {var,{69,33},'Error'},
          {var,{69,40},'Stack'}]}]}],
     []}]}]}.
{function,
 {72,1},
 opt_blks,6,
 [{clause,
   {72,1},
   [{var,{72,1},'_'},
    {var,{72,1},'_'},
    {var,{72,1},'_'},
    {var,{72,1},'_'},
    {var,{72,1},'_'},
    {var,{72,1},'_'}],
   [[{call,
      {72,1},
      {remote,{72,1},{atom,{72,1},fake},{atom,{72,1},is_beam_bif_info}},
      []}]],
   [{debug_line,72,17},{atom,{72,1},ignore}]},
  {clause,
   {72,1},
   [{cons,
     {72,10},
     {tuple,
      {72,11},
      [{var,{72,12},'L'},
       {match,
        {72,14},
        {tuple,
         {72,14},
         [{atom,{72,14},b_blk},
          {var,{72,14},'_'},
          {var,{72,24},'Is'},
          {var,{72,14},'_'}]},
        {var,{72,28},'Blk'}}]},
     {var,{72,33},'Blks'}},
    {var,{72,40},'ParamInfo'},
    {var,{72,51},'StMap'},
    {var,{72,58},'AnyChange'},
    {var,{72,69},'Count0'},
    {var,{72,77},'Acc0'}],
   [],
   [{debug_line,73,18},
    {'case',
     {73,5},
     {var,{73,10},'Is'},
     [{clause,
       {74,9},
       [{cons,
         {74,9},
         {tuple,
          {74,10},
          [{atom,{74,10},b_set},
           {var,{74,10},'_'},
           {var,{74,41},'Dst'},
           {atom,{74,20},bs_init_writable},
           {var,{74,10},'_'}]},
         {nil,{74,45}}}],
       [],
       [{debug_line,75,19},
        {match,
         {75,13},
         {var,{75,13},'Bs'},
         {map,
          {75,18},
          [{map_field_assoc,
            {75,27},
            {atom,{75,20},st_map},
            {var,{75,30},'StMap'}},
           {map_field_assoc,
            {75,41},
            {var,{75,37},'Dst'},
            {tuple,
             {75,44},
             [{atom,{75,45},writable},
              {tuple,
               {75,54},
               [{atom,{75,54},b_literal},{integer,{75,69},0}]}]}},
           {map_field_assoc,
            {76,25},
            {atom,{76,20},seen},
            {call,
             {76,28},
             {remote,{76,32},{atom,{76,28},sets},{atom,{76,33},new}},
             [{block,0,
               [{debug_line,76,20},
                {cons,
                 {76,37},
                 {tuple,{76,38},[{atom,{76,39},version},{integer,{76,47},2}]},
                 {nil,{76,49}}}]}]}}]}},
        {debug_line,77,21},
        {'try',
         {77,13},
         [{call,
           {77,17},
           {atom,{77,17},opt_writable},
           [{var,{77,30},'Bs'},
            {var,{77,34},'L'},
            {var,{77,37},'Blk'},
            {var,{77,42},'Blks'},
            {var,{77,48},'ParamInfo'},
            {var,{77,59},'Count0'},
            {var,{77,67},'Acc0'}]}],
         [{clause,
           {78,17},
           [{tuple,{78,17},[{var,{78,18},'Acc'},{var,{78,22},'Count'}]}],
           [],
           [{debug_line,79,22},
            {call,
             {79,21},
             {atom,{79,21},opt_blks},
             [{var,{79,30},'Blks'},
              {var,{79,36},'ParamInfo'},
              {var,{79,47},'StMap'},
              {atom,{79,54},changed},
              {var,{79,63},'Count'},
              {var,{79,70},'Acc'}]}]}],
         [{clause,
           {81,17},
           [{tuple,
             {81,17},
             [{atom,{81,17},throw},
              {atom,{81,23},not_possible},
              {var,{81,23},'_'}]}],
           [],
           [{debug_line,82,23},
            {call,
             {82,21},
             {atom,{82,21},opt_blks},
             [{var,{82,30},'Blks'},
              {var,{82,36},'ParamInfo'},
              {var,{82,47},'StMap'},
              {var,{82,54},'AnyChange'},
              {var,{82,65},'Count0'},
              {block,0,
               [{cons,
                 {82,73},
                 {tuple,{82,74},[{var,{82,75},'L'},{var,{82,77},'Blk'}]},
                 {var,{82,82},'Acc0'}}]}]}]}],
         []}]},
      {clause,
       {84,9},
       [{var,{84,9},'_'}],
       [],
       [{debug_line,85,24},
        {call,
         {85,13},
         {atom,{85,13},opt_blks},
         [{var,{85,22},'Blks'},
          {var,{85,28},'ParamInfo'},
          {var,{85,39},'StMap'},
          {var,{85,46},'AnyChange'},
          {var,{85,57},'Count0'},
          {block,0,
           [{cons,
             {85,65},
             {tuple,{85,66},[{var,{85,67},'L'},{var,{85,69},'Blk'}]},
             {var,{85,74},'Acc0'}}]}]}]}]}]},
  {clause,
   {87,1},
   [{nil,{87,10}},
    {var,{87,14},'_ParamInfo'},
    {var,{87,26},'_StMap'},
    {atom,{87,34},changed},
    {var,{87,43},'Count'},
    {var,{87,50},'Acc'}],
   [],
   [{debug_line,88,25},
    {tuple,
     {88,5},
     [{call,
       {88,6},
       {remote,{88,6},{atom,{88,6},lists},{atom,{88,6},reverse}},
       [{var,{88,14},'Acc'}]},
      {var,{88,19},'Count'}]}]},
  {clause,
   {89,1},
   [{nil,{89,10}},
    {var,{89,14},'_ParamInfo'},
    {var,{89,26},'_StMap'},
    {atom,{89,34},unchanged},
    {var,{89,45},'_Count'},
    {var,{89,53},'_Acc'}],
   [],
   [{debug_line,90,26},{atom,{90,5},none}]}]}.
{function,
 {92,1},
 opt_writable,7,
 [{clause,
   {92,1},
   [{var,{92,1},'_'},
    {var,{92,1},'_'},
    {var,{92,1},'_'},
    {var,{92,1},'_'},
    {var,{92,1},'_'},
    {var,{92,1},'_'},
    {var,{92,1},'_'}],
   [[{call,
      {92,1},
      {remote,{92,1},{atom,{92,1},fake},{atom,{92,1},is_beam_bif_info}},
      []}]],
   [{debug_line,92,27},{atom,{92,1},ignore}]},
  {clause,
   {92,1},
   [{var,{92,14},'Bs0'},
    {var,{92,19},'L'},
    {var,{92,22},'Blk'},
    {var,{92,27},'Blks'},
    {var,{92,33},'ParamInfo'},
    {var,{92,44},'Count0'},
    {var,{92,52},'Acc0'}],
   [],
   [{debug_line,93,28},
    {'case',
     {93,5},
     {tuple,{93,10},[{var,{93,11},'Blk'},{var,{93,15},'Blks'}]},
     [{clause,
       {94,9},
       [{tuple,
         {94,9},
         [{tuple,
           {94,10},
           [{atom,{94,10},b_blk},
            {var,{94,10},'_'},
            {var,{94,10},'_'},
            {tuple,
             {94,22},
             [{atom,{94,22},b_br},
              {var,{94,22},'_'},
              {var,{94,22},'_'},
              {var,{94,33},'Next'},
              {var,{94,43},'Next'}]}]},
          {cons,
           {95,10},
           {tuple,
            {95,11},
            [{var,{95,12},'Next'},
             {tuple,
              {95,17},
              [{atom,{95,17},b_blk},
               {var,{95,17},'_'},
               {cons,
                {95,27},
                {match,
                 {95,28},
                 {tuple,
                  {95,28},
                  [{atom,{95,28},b_set},
                   {var,{95,28},'_'},
                   {var,{95,61},'Dst'},
                   {atom,{95,38},call},
                   {cons,{95,48},{var,{95,49},'_'},{var,{95,51},'Args'}}]},
                 {var,{95,66},'Call'}},
                {var,{95,71},'_'}},
               {var,{95,17},'_'}]}]},
           {var,{95,76},'_'}}]}],
       [],
       [{debug_line,96,29},
        {call,
         {96,13},
         {atom,{96,13},ensure_not_match_context},
         [{var,{96,38},'Call'},{var,{96,44},'ParamInfo'}]},
        {debug_line,98,30},
        {match,
         {98,13},
         {var,{98,13},'ArgTypes'},
         {mc,
          {98,24},
          {map_field_assoc,
           {98,30},
           {block,0,[{var,{98,26},'Arg'}]},
           {block,0,
            [{tuple,{98,33},[{atom,{98,34},arg},{var,{98,38},'Arg'}]}]}},
          [{block,0,[{atom,{98,53},true}]},
           {generate,{98,50},{var,{98,46},'Arg'},{var,{98,53},'Args'}}]}},
        {debug_line,99,31},
        {match,
         {99,13},
         {var,{99,13},'Bs'},
         {call,
          {99,18},
          {remote,{99,22},{atom,{99,18},maps},{atom,{99,23},merge}},
          [{var,{99,29},'ArgTypes'},{var,{99,39},'Bs0'}]}},
        {debug_line,100,32},
        {match,
         {100,13},
         {var,{100,13},'Result'},
         {call,
          {100,22},
          {remote,{100,22},{atom,{100,22},erlang},{atom,{100,22},map_get}},
          [{var,{100,30},'Dst'},
           {block,0,
            [{call,
              {100,35},
              {atom,{100,35},call_size_func},
              [{var,{100,50},'Call'},{var,{100,56},'Bs'}]}]}]}},
        {debug_line,101,33},
        {match,
         {101,13},
         {var,{101,13},'Expr'},
         {call,
          {101,20},
          {atom,{101,20},make_expr_tree},
          [{var,{101,35},'Result'}]}},
        {debug_line,102,34},
        {call,
         {102,13},
         {atom,{102,13},cg_size_calc},
         [{var,{102,26},'Expr'},
          {var,{102,32},'L'},
          {var,{102,35},'Blk'},
          {var,{102,40},'Count0'},
          {var,{102,48},'Acc0'}]}]},
      {clause,
       {103,9},
       [{tuple,{103,9},[{var,{103,10},'_'},{var,{103,12},'_'}]}],
       [],
       [{debug_line,104,35},
        {call,
         {104,13},
         {remote,{104,13},{atom,{104,13},erlang},{atom,{104,13},throw}},
         [{atom,{104,19},not_possible}]}]}]}]}]}.
{function,
 {107,1},
 ensure_not_match_context,2,
 [{clause,
   {107,1},
   [{var,{107,1},'_'},{var,{107,1},'_'}],
   [[{call,
      {107,1},
      {remote,{107,1},{atom,{107,1},fake},{atom,{107,1},is_beam_bif_info}},
      []}]],
   [{debug_line,107,36},{atom,{107,1},ignore}]},
  {clause,
   {107,1},
   [{tuple,
     {107,26},
     [{atom,{107,26},b_set},
      {var,{107,38},'Anno'},
      {var,{107,26},'_'},
      {var,{107,26},'_'},
      {cons,{107,48},{var,{107,49},'_'},{var,{107,51},'Args'}}]},
    {var,{107,59},'ParamInfo'}],
   [],
   [{debug_line,108,37},
    {'case',
     {108,5},
     {call,
      {108,10},
      {remote,{108,14},{atom,{108,10},maps},{atom,{108,15},get}},
      [{atom,{108,19},bsm_info},{var,{108,29},'Anno'},{nil,{108,35}}]},
     [{clause,
       {109,9},
       [{atom,{109,9},context_reused}],
       [],
       [{debug_line,115,38},
        {call,
         {115,13},
         {remote,{115,13},{atom,{115,13},erlang},{atom,{115,13},throw}},
         [{atom,{115,19},not_possible}]}]},
      {clause,
       {116,9},
       [{var,{116,9},'_'}],
       [],
       [{debug_line,117,39},
        {'case',
         {117,13},
         {call,
          {117,18},
          {remote,{117,18},{atom,{117,18},lists},{atom,{117,18},any}},
          [{block,0,
            [{'fun',
              {117,22},
              {clauses,
               [{clause,
                 {117,25},
                 [{var,{117,26},'V'}],
                 [],
                 [{debug_line,118,40},
                  {call,
                   {118,30},
                   {remote,
                    {118,30},
                    {atom,{118,30},lists},
                    {atom,{118,30},member}},
                   [{atom,{118,37},accepts_match_context},
                    {block,0,
                     [{debug_line,119,41},
                      {call,
                       {119,37},
                       {remote,
                        {119,41},
                        {atom,{119,37},maps},
                        {atom,{119,42},get}},
                       [{var,{119,46},'V'},
                        {var,{119,49},'ParamInfo'},
                        {nil,{119,60}}]}]}]}]}]}}]},
           {var,{120,27},'Args'}]},
         [{clause,
           {121,17},
           [{atom,{121,17},true}],
           [],
           [{debug_line,125,42},
            {call,
             {125,21},
             {remote,{125,21},{atom,{125,21},erlang},{atom,{125,21},throw}},
             [{atom,{125,27},not_possible}]}]},
          {clause,
           {126,17},
           [{atom,{126,17},false}],
           [],
           [{debug_line,127,43},{atom,{127,21},ok}]}]}]}]}]}]}.
{function,
 {139,1},
 call_size_func,2,
 [{clause,
   {139,1},
   [{var,{139,1},'_'},{var,{139,1},'_'}],
   [[{call,
      {139,1},
      {remote,{139,1},{atom,{139,1},fake},{atom,{139,1},is_beam_bif_info}},
      []}]],
   [{debug_line,139,44},{atom,{139,1},ignore}]},
  {clause,
   {139,1},
   [{tuple,
     {139,16},
     [{atom,{139,16},b_set},
      {var,{139,16},'_'},
      {var,{139,52},'Dst'},
      {atom,{139,26},call},
      {cons,{139,36},{var,{139,37},'Name'},{var,{139,42},'Args'}}]},
    {var,{139,58},'Bs'}],
   [],
   [{debug_line,140,45},
    {match,
     {140,5},
     {var,{140,5},'StMap'},
     {call,
      {140,13},
      {remote,{140,13},{atom,{140,13},erlang},{atom,{140,13},map_get}},
      [{atom,{140,21},st_map},{var,{140,29},'Bs'}]}},
    {debug_line,141,46},
    {'case',
     {141,5},
     {var,{141,10},'StMap'},
     [{clause,
       {142,9},
       [{map,
         {142,9},
         [{map_field_exact,
           {142,16},
           {var,{142,11},'Name'},
           {tuple,
            {142,19},
            [{atom,{142,19},opt_st},
             {var,{142,31},'Linear'},
             {var,{142,43},'Params'},
             {var,{142,19},'_'},
             {var,{142,19},'_'}]}}]}],
       [],
       [{debug_line,143,47},
        {match,
         {143,13},
         {var,{143,13},'NewBs0'},
         {call,
          {143,22},
          {atom,{143,22},setup_call_bs},
          [{var,{143,36},'Params'},
           {var,{143,44},'Args'},
           {var,{143,50},'Bs'}]}},
        {debug_line,144,48},
        {'case',
         {144,13},
         {call,
          {144,18},
          {remote,{144,18},{atom,{144,18},lists},{atom,{144,18},any}},
          [{block,0,
            [{'fun',
              {144,22},
              {clauses,
               [{clause,
                 {144,25},
                 [{tuple,
                   {144,26},
                   [{atom,{144,27},writable},{var,{144,36},'_'}]}],
                 [],
                 [{atom,{144,43},true}]},
                {clause,
                 {145,25},
                 [{var,{145,26},'_'}],
                 [],
                 [{debug_line,145,49},{atom,{145,32},false}]}]}}]},
           {block,0,
            [{debug_line,146,50},
             {call,
              {146,27},
              {remote,{146,31},{atom,{146,27},maps},{atom,{146,32},values}},
              [{var,{146,39},'NewBs0'}]}]}]},
         [{clause,
           {147,17},
           [{atom,{147,17},false}],
           [],
           [{debug_line,151,51},
            {map,
             {151,23},
             {var,{151,21},'Bs'},
             [{map_field_assoc,
               {151,29},
               {var,{151,25},'Dst'},
               {atom,{151,32},any}}]}]},
          {clause,
           {152,17},
           [{atom,{152,17},true}],
           [],
           [{debug_line,153,52},
            {match,
             {153,21},
             {var,{153,21},'Seen0'},
             {call,
              {153,29},
              {remote,{153,29},{atom,{153,29},erlang},{atom,{153,29},map_get}},
              [{atom,{153,37},seen},{var,{153,43},'Bs'}]}},
            {debug_line,154,53},
            {'case',
             {154,21},
             {call,
              {154,26},
              {remote,
               {154,30},
               {atom,{154,26},sets},
               {atom,{154,31},is_element}},
              [{var,{154,42},'Name'},{var,{154,48},'Seen0'}]},
             [{clause,
               {155,25},
               [{atom,{155,25},true}],
               [],
               [{debug_line,171,54},
                {call,
                 {171,29},
                 {remote,
                  {171,29},
                  {atom,{171,29},erlang},
                  {atom,{171,29},throw}},
                 [{atom,{171,35},not_possible}]}]},
              {clause,
               {172,25},
               [{atom,{172,25},false}],
               [],
               [{debug_line,173,55},
                {match,
                 {173,29},
                 {var,{173,29},'Seen'},
                 {call,
                  {173,36},
                  {remote,
                   {173,40},
                   {atom,{173,36},sets},
                   {atom,{173,41},add_element}},
                  [{var,{173,53},'Name'},{var,{173,59},'Seen0'}]}},
                {debug_line,174,56},
                {match,
                 {174,29},
                 {var,{174,29},'NewBs'},
                 {map,
                  {174,43},
                  {var,{174,37},'NewBs0'},
                  [{map_field_assoc,
                    {174,50},
                    {var,{174,45},'Name'},
                    {atom,{174,53},self}},
                   {map_field_assoc,
                    {174,66},
                    {atom,{174,59},st_map},
                    {var,{174,69},'StMap'}},
                   {map_field_assoc,
                    {174,81},
                    {atom,{174,76},seen},
                    {var,{174,84},'Seen'}}]}},
                {debug_line,175,57},
                {match,
                 {175,29},
                 {var,{175,29},'Map0'},
                 {map,
                  {175,36},
                  [{map_field_assoc,
                    {175,40},
                    {integer,{175,38},0},
                    {var,{175,43},'NewBs'}}]}},
                {debug_line,176,58},
                {match,
                 {176,29},
                 {var,{176,29},'Result'},
                 {call,
                  {176,38},
                  {atom,{176,38},calc_size},
                  [{var,{176,48},'Linear'},{var,{176,56},'Map0'}]}},
                {debug_line,177,59},
                {map,
                 {177,31},
                 {var,{177,29},'Bs'},
                 [{map_field_assoc,
                   {177,37},
                   {var,{177,33},'Dst'},
                   {var,{177,40},'Result'}}]}]}]}]}]}]},
      {clause,
       {180,9},
       [{map,{180,9},[]}],
       [],
       [{debug_line,181,60},
        {'case',
         {181,13},
         {var,{181,18},'Name'},
         [{clause,
           {182,17},
           [{tuple,
             {182,17},
             [{atom,{182,17},b_remote},
              {tuple,
               {182,31},
               [{atom,{182,31},b_literal},{atom,{182,46},erlang}]},
              {tuple,
               {183,32},
               [{atom,{183,32},b_literal},{atom,{183,47},error}]},
              {integer,{184,33},1}]}],
           [],
           [{debug_line,185,61},
            {call,
             {185,21},
             {atom,{185,21},capture_generator},
             [{var,{185,39},'Dst'},
              {var,{185,44},'Args'},
              {block,0,
               [{map,
                 {185,52},
                 {var,{185,50},'Bs'},
                 [{map_field_assoc,
                   {185,58},
                   {var,{185,54},'Dst'},
                   {atom,{185,61},exception}}]}]}]}]},
          {clause,
           {186,17},
           [{var,{186,17},'_'}],
           [],
           [{debug_line,187,62},
            {map,
             {187,23},
             {var,{187,21},'Bs'},
             [{map_field_assoc,
               {187,29},
               {var,{187,25},'Dst'},
               {atom,{187,32},any}}]}]}]}]}]}]}]}.
{function,
    {191,1},
    capture_generator,3,
    [{clause,
         {191,1},
         [{var,{191,1},'_'},{var,{191,1},'_'},{var,{191,1},'_'}],
         [[{call,
               {191,1},
               {remote,
                   {191,1},
                   {atom,{191,1},fake},
                   {atom,{191,1},is_beam_bif_info}},
               []}]],
         [{debug_line,191,63},{atom,{191,1},ignore}]},
     {clause,
         {191,1},
         [{var,{191,19},'Dst'},
          {cons,{191,24},{var,{191,25},'ErrorTerm'},{nil,{191,34}}},
          {var,{191,37},'Bs'}],
         [],
         [{debug_line,192,64},
          {'case',
              {192,5},
              {call,
                  {192,10},
                  {atom,{192,10},get_value},
                  [{var,{192,20},'ErrorTerm'},{var,{192,31},'Bs'}]},
              [{clause,
                   {193,9},
                   [{tuple,
                        {193,9},
                        [{atom,{193,10},tuple},{var,{193,16},'Elements'}]}],
                   [],
                   [{debug_line,194,65},
                    {match,
                        {194,13},
                        {var,{194,13},'Ts'},
                        {lc,{194,18},
                            {block,0,
                                [{call,
                                     {194,19},
                                     {atom,{194,19},get_value},
                                     [{var,{194,29},'E'},
                                      {var,{194,32},'Bs'}]}]},
                            [{block,0,[{atom,{194,44},true}]},
                             {generate,
                                 {194,41},
                                 {var,{194,39},'E'},
                                 {var,{194,44},'Elements'}}]}},
                    {debug_line,195,66},
                    {call,
                        {195,13},
                        {atom,{195,13},capture_generator_1},
                        [{var,{195,33},'Dst'},
                         {var,{195,38},'Ts'},
                         {var,{195,42},'Bs'}]}]},
               {clause,
                   {196,9},
                   [{var,{196,9},'_'}],
                   [],
                   [{debug_line,197,67},{var,{197,13},'Bs'}]}]}]}]}.
{function,
    {200,1},
    capture_generator_1,3,
    [{clause,
         {200,1},
         [{var,{200,1},'_'},{var,{200,1},'_'},{var,{200,1},'_'}],
         [[{call,
               {200,1},
               {remote,
                   {200,1},
                   {atom,{200,1},fake},
                   {atom,{200,1},is_beam_bif_info}},
               []}]],
         [{debug_line,200,68},{atom,{200,1},ignore}]},
     {clause,
         {200,1},
         [{var,{200,21},'Dst'},
          {cons,
              {200,26},
              {tuple,
                  {200,27},
                  [{atom,{200,28},nil_or_bad},{var,{200,39},'_Generator'}]},
              {var,{200,51},'_'}},
          {var,{200,55},'Bs'}],
         [],
         [{debug_line,201,69},
          {map,
              {201,7},
              {var,{201,5},'Bs'},
              [{map_field_assoc,
                   {201,13},
                   {var,{201,9},'Dst'},
                   {atom,{201,16},generator}}]}]},
     {clause,
         {202,1},
         [{var,{202,21},'Dst'},
          {cons,
              {202,26},
              {tuple,
                  {202,27},
                  [{atom,{202,28},arg},{var,{202,32},'_Generator'}]},
              {var,{202,44},'_'}},
          {var,{202,48},'Bs'}],
         [],
         [{debug_line,203,70},
          {map,
              {203,7},
              {var,{203,5},'Bs'},
              [{map_field_assoc,
                   {203,13},
                   {var,{203,9},'Dst'},
                   {atom,{203,16},generator}}]}]},
     {clause,
         {204,1},
         [{var,{204,21},'Dst'},
          {cons,{204,26},{var,{204,27},'_'},{var,{204,29},'T'}},
          {var,{204,33},'Bs'}],
         [],
         [{debug_line,205,71},
          {call,
              {205,5},
              {atom,{205,5},capture_generator_1},
              [{var,{205,25},'Dst'},{var,{205,30},'T'},{var,{205,33},'Bs'}]}]},
     {clause,
         {206,1},
         [{var,{206,21},'_'},{nil,{206,24}},{var,{206,28},'Bs'}],
         [],
         [{debug_line,207,72},{var,{207,5},'Bs'}]}]}.
{function,
    {209,1},
    setup_call_bs,3,
    [{clause,
         {209,1},
         [{var,{209,1},'_'},{var,{209,1},'_'},{var,{209,1},'_'}],
         [[{call,
               {209,1},
               {remote,
                   {209,1},
                   {atom,{209,1},fake},
                   {atom,{209,1},is_beam_bif_info}},
               []}]],
         [{debug_line,209,73},{atom,{209,1},ignore}]},
     {clause,
         {209,1},
         [{var,{209,15},'Vs'},{var,{209,19},'As'},{var,{209,23},'Bs'}],
         [],
         [{debug_line,210,74},
          {mc,{210,5},
              {map_field_assoc,
                  {210,9},
                  {block,0,[{var,{210,7},'V'}]},
                  {block,0,
                      [{call,
                           {210,12},
                           {atom,{210,12},setup_call_binding},
                           [{var,{210,31},'A'},{var,{210,34},'Bs'}]}]}},
              [{block,0,[{atom,{210,43},true}]},
               {block,0,[{atom,{210,43},true}]},
               {zip,
                   {210,43},
                   [{generate,{210,43},{var,{210,41},'V'},{var,{210,46},'Vs'}},
                    {generate,
                        {210,54},
                        {var,{210,52},'A'},
                        {var,{210,57},'As'}}]}]}]}]}.
{function,
    {212,1},
    setup_call_binding,2,
    [{clause,
         {212,1},
         [{var,{212,1},'_'},{var,{212,1},'_'}],
         [[{call,
               {212,1},
               {remote,
                   {212,1},
                   {atom,{212,1},fake},
                   {atom,{212,1},is_beam_bif_info}},
               []}]],
         [{debug_line,212,75},{atom,{212,1},ignore}]},
     {clause,
         {212,1},
         [{var,{212,20},'A'},{var,{212,23},'Bs'}],
         [],
         [{debug_line,213,76},
          {'case',
              {213,5},
              {call,
                  {213,10},
                  {atom,{213,10},get_value},
                  [{var,{213,20},'A'},{var,{213,23},'Bs'}]},
              [{clause,
                   {214,9},
                   [{match,
                        {214,9},
                        {tuple,
                            {214,9},
                            [{atom,{214,9},b_literal},{var,{214,9},'_'}]},
                        {var,{214,22},'Lit'}}],
                   [],
                   [{debug_line,214,77},
                    {tuple,
                        {214,29},
                        [{atom,{214,30},arg},{var,{214,34},'Lit'}]}]},
               {clause,
                   {215,9},
                   [{match,
                        {215,9},
                        {tuple,
                            {215,9},
                            [{atom,{215,10},writable},
                             {tuple,
                                 {215,19},
                                 [{atom,{215,19},b_literal},
                                  {integer,{215,34},0}]}]},
                        {var,{215,38},'Wr'}}],
                   [],
                   [{debug_line,215,78},{var,{215,44},'Wr'}]},
               {clause,
                   {216,9},
                   [{match,
                        {216,9},
                        {tuple,
                            {216,9},
                            [{atom,{216,10},arg},{var,{216,14},'_'}]},
                        {var,{216,17},'Arg'}}],
                   [],
                   [{debug_line,216,79},{var,{216,24},'Arg'}]},
               {clause,
                   {217,9},
                   [{var,{217,9},'_'}],
                   [],
                   [{debug_line,217,80},{atom,{217,14},any}]}]}]}]}.
{function,
 {220,1},
 calc_size,2,
 [{clause,
   {220,1},
   [{var,{220,1},'_'},{var,{220,1},'_'}],
   [[{call,
      {220,1},
      {remote,{220,1},{atom,{220,1},fake},{atom,{220,1},is_beam_bif_info}},
      []}]],
   [{debug_line,220,81},{atom,{220,1},ignore}]},
  {clause,
   {220,1},
   [{cons,
     {220,11},
     {tuple,
      {220,12},
      [{var,{220,13},'L'},
       {tuple,
        {220,15},
        [{atom,{220,15},b_blk},
         {var,{220,15},'_'},
         {var,{220,25},'Is'},
         {var,{220,33},'Last'}]}]},
     {var,{220,40},'Blks'}},
    {var,{220,47},'Map0'}],
   [],
   [{debug_line,221,82},
    {'case',
     {221,5},
     {call,
      {221,10},
      {remote,{221,14},{atom,{221,10},maps},{atom,{221,15},take}},
      [{var,{221,20},'L'},{var,{221,23},'Map0'}]},
     [{clause,
       {222,9},
       [{tuple,{222,9},[{var,{222,10},'Bs0'},{var,{222,14},'Map1'}]}],
       [[{call,
          {222,25},
          {remote,{222,25},{atom,{222,25},erlang},{atom,{222,25},is_map}},
          [{var,{222,32},'Bs0'}]}]],
       [{debug_line,223,83},
        {match,
         {223,13},
         {var,{223,13},'Bs1'},
         {call,
          {223,19},
          {atom,{223,19},calc_size_is},
          [{var,{223,32},'Is'},{var,{223,36},'Bs0'}]}},
        {debug_line,224,84},
        {match,
         {224,13},
         {var,{224,13},'Map2'},
         {call,
          {224,20},
          {atom,{224,20},update_successors},
          [{var,{224,38},'Last'},{var,{224,44},'Bs1'},{var,{224,49},'Map1'}]}},
        {debug_line,225,85},
        {'case',
         {225,13},
         {call,
          {225,18},
          {atom,{225,18},get_ret},
          [{var,{225,26},'Last'},{var,{225,32},'Bs1'}]},
         [{clause,
           {226,17},
           [{atom,{226,17},none}],
           [],
           [{debug_line,227,86},
            {call,
             {227,21},
             {atom,{227,21},calc_size},
             [{var,{227,31},'Blks'},{var,{227,37},'Map2'}]}]},
          {clause,
           {228,17},
           [{var,{228,17},'Ret'}],
           [],
           [{debug_line,230,87},
            {match,
             {230,21},
             {var,{230,21},'Map'},
             {map,
              {230,31},
              {var,{230,27},'Map2'},
              [{map_field_assoc,
                {230,35},
                {var,{230,33},'L'},
                {var,{230,38},'Ret'}}]}},
            {debug_line,231,88},
            {call,
             {231,21},
             {atom,{231,21},calc_size},
             [{var,{231,31},'Blks'},{var,{231,37},'Map'}]}]}]}]},
      {clause,
       {233,9},
       [{atom,{233,9},error}],
       [],
       [{debug_line,235,89},
        {call,
         {235,13},
         {atom,{235,13},calc_size},
         [{var,{235,23},'Blks'},{var,{235,29},'Map0'}]}]}]}]},
  {clause,
   {237,1},
   [{nil,{237,11}},{var,{237,15},'Map'}],
   [],
   [{debug_line,238,90},
    {'case',
     {238,5},
     {call,
      {238,10},
      {remote,{238,10},{atom,{238,10},lists},{atom,{238,10},sort}},
      [{block,0,
        [{call,
          {238,15},
          {remote,{238,19},{atom,{238,15},maps},{atom,{238,20},values}},
          [{var,{238,27},'Map'}]}]}]},
     [{clause,
       {239,9},
       [{cons,
         {239,9},
         {atom,{239,10},generator},
         {cons,
          {239,20},
          {match,
           {239,20},
           {tuple,{239,20},[{atom,{239,21},call},{var,{239,26},'_'}]},
           {var,{239,29},'Call'}},
          {nil,{239,33}}}}],
       [],
       [{debug_line,240,91},{var,{240,13},'Call'}]},
      {clause,
       {241,9},
       [{var,{241,9},'_'}],
       [],
       [{debug_line,242,92},
        {call,
         {242,13},
         {remote,{242,13},{atom,{242,13},erlang},{atom,{242,13},throw}},
         [{atom,{242,19},not_possible}]}]}]}]}]}.
{function,
    {245,1},
    get_ret,2,
    [{clause,
         {245,1},
         [{var,{245,1},'_'},{var,{245,1},'_'}],
         [[{call,
               {245,1},
               {remote,
                   {245,1},
                   {atom,{245,1},fake},
                   {atom,{245,1},is_beam_bif_info}},
               []}]],
         [{debug_line,245,93},{atom,{245,1},ignore}]},
     {clause,
         {245,1},
         [{tuple,
              {245,9},
              [{atom,{245,9},b_ret},{var,{245,9},'_'},{var,{245,20},'Arg'}]},
          {var,{245,26},'Bs'}],
         [],
         [{debug_line,246,94},
          {'case',
              {246,5},
              {call,
                  {246,10},
                  {atom,{246,10},get_value},
                  [{var,{246,20},'Arg'},{var,{246,25},'Bs'}]},
              [{clause,
                   {247,9},
                   [{atom,{247,9},exception}],
                   [],
                   [{debug_line,248,95},{atom,{248,13},none}]},
               {clause,
                   {249,9},
                   [{tuple,
                        {249,9},
                        [{atom,{249,10},writable},
                         {tuple,
                             {249,19},
                             [{atom,{249,19},b_literal},
                              {integer,{249,34},0}]}]}],
                   [],
                   [{debug_line,250,96},{atom,{250,13},none}]},
               {clause,
                   {251,9},
                   [{atom,{251,9},generator}],
                   [],
                   [{debug_line,252,97},{atom,{252,13},generator}]},
               {clause,
                   {253,9},
                   [{var,{253,9},'Ret'}],
                   [],
                   [{debug_line,254,98},{var,{254,13},'Ret'}]}]}]},
     {clause,
         {256,1},
         [{var,{256,9},'_'},{var,{256,12},'_'}],
         [],
         [{debug_line,256,99},{atom,{256,18},none}]}]}.
{function,
 {258,1},
 update_successors,3,
 [{clause,
   {258,1},
   [{var,{258,1},'_'},{var,{258,1},'_'},{var,{258,1},'_'}],
   [[{call,
      {258,1},
      {remote,{258,1},{atom,{258,1},fake},{atom,{258,1},is_beam_bif_info}},
      []}]],
   [{debug_line,258,100},{atom,{258,1},ignore}]},
  {clause,
   {258,1},
   [{tuple,
     {258,19},
     [{atom,{258,19},b_br},
      {var,{258,19},'_'},
      {var,{258,30},'Bool'},
      {var,{258,40},'Succ'},
      {var,{258,50},'Fail'}]},
    {var,{258,57},'Bs0'},
    {var,{258,62},'Map0'}],
   [],
   [{debug_line,259,101},
    {'case',
     {259,5},
     {call,
      {259,10},
      {atom,{259,10},get_value},
      [{var,{259,20},'Bool'},{var,{259,26},'Bs0'}]},
     [{clause,
       {260,9},
       [{tuple,{260,9},[{atom,{260,9},b_literal},{atom,{260,24},true}]}],
       [],
       [{debug_line,261,102},
        {call,
         {261,13},
         {atom,{261,13},update_successor},
         [{var,{261,30},'Succ'},{var,{261,36},'Bs0'},{var,{261,41},'Map0'}]}]},
      {clause,
       {262,9},
       [{tuple,{262,9},[{atom,{262,9},b_literal},{atom,{262,24},false}]}],
       [],
       [{debug_line,263,103},
        {call,
         {263,13},
         {atom,{263,13},update_successor},
         [{var,{263,30},'Fail'},{var,{263,36},'Bs0'},{var,{263,41},'Map0'}]}]},
      {clause,
       {264,9},
       [{tuple,{264,9},[{atom,{264,10},succeeded},{var,{264,20},'Var'}]}],
       [],
       [{debug_line,265,104},
        {match,
         {265,13},
         {var,{265,13},'Map'},
         {call,
          {265,19},
          {atom,{265,19},update_successor},
          [{var,{265,36},'Succ'},{var,{265,42},'Bs0'},{var,{265,47},'Map0'}]}},
        {debug_line,266,105},
        {call,
         {266,13},
         {atom,{266,13},update_successor},
         [{var,{266,30},'Fail'},
          {block,0,
           [{call,
             {266,36},
             {remote,{266,40},{atom,{266,36},maps},{atom,{266,41},remove}},
             [{var,{266,48},'Var'},{var,{266,53},'Bs0'}]}]},
          {var,{266,59},'Map'}]}]},
      {clause,
       {267,9},
       [{tuple,
         {267,9},
         [{atom,{267,10},'if'},
          {var,{267,15},'Var'},
          {var,{267,19},'TrueType'},
          {var,{267,28},'FalseType'}]}],
       [],
       [{debug_line,268,106},
        {match,
         {268,13},
         {var,{268,13},'Bs'},
         {call,
          {268,18},
          {remote,{268,22},{atom,{268,18},maps},{atom,{268,23},remove}},
          [{var,{268,30},'Bool'},{var,{268,36},'Bs0'}]}},
        {debug_line,269,107},
        {'case',
         {269,13},
         {var,{269,18},'Var'},
         [{clause,
           {270,17},
           [{tuple,{270,17},[{atom,{270,17},b_var},{var,{270,17},'_'}]}],
           [],
           [{debug_line,271,108},
            {match,
             {271,21},
             {var,{271,21},'Map'},
             {call,
              {271,27},
              {atom,{271,27},update_successor},
              [{var,{271,44},'Succ'},
               {block,0,
                [{map,
                  {271,52},
                  {var,{271,50},'Bs'},
                  [{map_field_assoc,
                    {271,58},
                    {var,{271,54},'Var'},
                    {var,{271,61},'TrueType'}}]}]},
               {var,{271,72},'Map0'}]}},
            {debug_line,272,109},
            {call,
             {272,21},
             {atom,{272,21},update_successor},
             [{var,{272,38},'Fail'},
              {block,0,
               [{map,
                 {272,46},
                 {var,{272,44},'Bs'},
                 [{map_field_assoc,
                   {272,52},
                   {var,{272,48},'Var'},
                   {var,{272,55},'FalseType'}}]}]},
              {var,{272,67},'Map'}]}]},
          {clause,
           {273,17},
           [{tuple,{273,17},[{atom,{273,17},b_literal},{var,{273,17},'_'}]}],
           [],
           [{debug_line,274,110},{var,{274,21},'Bs'}]}]}]},
      {clause,
       {276,9},
       [{atom,{276,9},any}],
       [],
       [{debug_line,277,111},
        {match,
         {277,13},
         {var,{277,13},'Map'},
         {call,
          {277,19},
          {atom,{277,19},update_successor},
          [{var,{277,36},'Succ'},
           {block,0,
            [{map,
              {277,45},
              {var,{277,42},'Bs0'},
              [{map_field_exact,
                {277,52},
                {var,{277,47},'Bool'},
                {tuple,
                 {277,55},
                 [{atom,{277,55},b_literal},{atom,{277,70},true}]}}]}]},
           {var,{277,78},'Map0'}]}},
        {debug_line,278,112},
        {call,
         {278,13},
         {atom,{278,13},update_successor},
         [{var,{278,30},'Fail'},
          {block,0,
           [{map,
             {278,39},
             {var,{278,36},'Bs0'},
             [{map_field_exact,
               {278,46},
               {var,{278,41},'Bool'},
               {tuple,
                {278,49},
                [{atom,{278,49},b_literal},{atom,{278,64},false}]}}]}]},
          {var,{278,73},'Map'}]}]}]}]},
  {clause,
   {280,1},
   [{tuple,
     {280,19},
     [{atom,{280,19},b_switch},
      {var,{280,19},'_'},
      {var,{280,19},'_'},
      {var,{280,19},'_'},
      {var,{280,19},'_'}]},
    {var,{280,32},'_Bs'},
    {var,{280,37},'_Map'}],
   [],
   [{debug_line,283,113},
    {call,
     {283,5},
     {remote,{283,5},{atom,{283,5},erlang},{atom,{283,5},throw}},
     [{atom,{283,11},not_possible}]}]},
  {clause,
   {284,1},
   [{tuple,
     {284,19},
     [{atom,{284,19},b_ret},{var,{284,19},'_'},{var,{284,19},'_'}]},
    {var,{284,29},'_Bs'},
    {var,{284,34},'Map'}],
   [],
   [{debug_line,284,114},{var,{284,42},'Map'}]}]}.
{function,
    {286,1},
    update_successor,3,
    [{clause,
         {286,1},
         [{var,{286,1},'_'},{var,{286,1},'_'},{var,{286,1},'_'}],
         [[{call,
               {286,1},
               {remote,
                   {286,1},
                   {atom,{286,1},fake},
                   {atom,{286,1},is_beam_bif_info}},
               []}]],
         [{debug_line,286,115},{atom,{286,1},ignore}]},
     {clause,
         {286,1},
         [{integer,{286,19},1},{var,{286,36},'_Bs'},{var,{286,41},'Map'}],
         [],
         [{debug_line,287,116},{var,{287,5},'Map'}]},
     {clause,
         {288,1},
         [{var,{288,18},'L'},{var,{288,21},'Bs'},{var,{288,25},'Map'}],
         [],
         [{debug_line,289,117},
          {'case',
              {289,5},
              {var,{289,10},'Map'},
              [{clause,
                   {290,9},
                   [{map,
                        {290,9},
                        [{map_field_exact,
                             {290,13},
                             {var,{290,11},'L'},
                             {var,{290,16},'OldBs'}}]}],
                   [],
                   [{debug_line,291,118},
                    {map,
                        {291,16},
                        {var,{291,13},'Map'},
                        [{map_field_exact,
                             {291,20},
                             {var,{291,18},'L'},
                             {call,
                                 {291,23},
                                 {atom,{291,23},join_bs},
                                 [{var,{291,31},'OldBs'},
                                  {var,{291,38},'Bs'}]}}]}]},
               {clause,
                   {292,9},
                   [{map,{292,9},[]}],
                   [],
                   [{debug_line,293,119},
                    {map,
                        {293,16},
                        {var,{293,13},'Map'},
                        [{map_field_assoc,
                             {293,20},
                             {var,{293,18},'L'},
                             {var,{293,23},'Bs'}}]}]}]}]}]}.
{function,{296,1},
          calc_size_is,2,
          [{clause,{296,1},
                   [{var,{296,1},'_'},{var,{296,1},'_'}],
                   [[{call,{296,1},
                           {remote,{296,1},
                                   {atom,{296,1},fake},
                                   {atom,{296,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,296,120},{atom,{296,1},ignore}]},
           {clause,{296,1},
                   [{cons,{296,14},{var,{296,15},'I'},{var,{296,17},'Is'}},
                    {var,{296,22},'Bs0'}],
                   [],
                   [{debug_line,297,121},
                    {match,{297,5},
                           {var,{297,5},'Bs'},
                           {call,{297,10},
                                 {atom,{297,10},calc_size_instr},
                                 [{var,{297,26},'I'},{var,{297,29},'Bs0'}]}},
                    {debug_line,298,122},
                    {call,{298,5},
                          {atom,{298,5},calc_size_is},
                          [{var,{298,18},'Is'},{var,{298,22},'Bs'}]}]},
           {clause,{299,1},
                   [{nil,{299,14}},{var,{299,18},'Bs'}],
                   [],
                   [{debug_line,299,123},{var,{299,25},'Bs'}]}]}.
{function,
 {301,1},
 calc_size_instr,2,
 [{clause,
   {301,1},
   [{var,{301,1},'_'},{var,{301,1},'_'}],
   [[{call,
      {301,1},
      {remote,{301,1},{atom,{301,1},fake},{atom,{301,1},is_beam_bif_info}},
      []}]],
   [{debug_line,301,124},{atom,{301,1},ignore}]},
  {clause,
   {301,1},
   [{tuple,
     {301,17},
     [{atom,{301,17},b_set},
      {var,{301,17},'_'},
      {var,{303,28},'Dst'},
      {atom,{301,27},bs_create_bin},
      {cons,
       {302,29},
       {tuple,
        {302,30},
        [{atom,{302,30},b_literal},{atom,{302,45},private_append}]},
       {cons,
        {302,61},
        {var,{302,61},'_'},
        {cons,
         {302,63},
         {var,{302,63},'Writable'},
         {cons,{302,72},{var,{302,72},'_'},{var,{302,74},'Args'}}}}}]},
    {var,{303,34},'Bs'}],
   [],
   [{debug_line,304,125},
    {'case',
     {304,5},
     {call,
      {304,10},
      {atom,{304,10},calc_create_bin_size},
      [{var,{304,31},'Args'},{var,{304,37},'Bs'}]},
     [{clause,
       {305,9},
       [{tuple,{305,9},[{atom,{305,10},expr},{var,{305,15},'Expr'}]}],
       [],
       [{debug_line,306,126},
        {call,
         {306,13},
         {atom,{306,13},update_writable},
         [{var,{306,29},'Dst'},
          {var,{306,34},'Writable'},
          {var,{306,44},'Expr'},
          {var,{306,50},'Bs'}]}]},
      {clause,
       {307,9},
       [{atom,{307,9},any}],
       [],
       [{debug_line,308,127},
        {map,
         {308,15},
         {var,{308,13},'Bs'},
         [{map_field_assoc,
           {308,21},
           {var,{308,17},'Dst'},
           {atom,{308,24},any}}]}]}]}]},
  {clause,
   {310,1},
   [{tuple,
     {310,17},
     [{atom,{310,17},b_set},
      {var,{310,17},'_'},
      {var,{311,57},'Dst'},
      {atom,{310,27},bs_match},
      {cons,
       {310,41},
       {var,{310,42},'_Type'},
       {cons,
        {310,48},
        {var,{310,48},'Ctx'},
        {cons,
         {310,52},
         {var,{310,52},'_Flags'},
         {cons,
          {311,42},
          {var,{311,42},'Size'},
          {cons,{311,47},{var,{311,47},'Unit'},{nil,{311,51}}}}}}}]},
    {var,{311,63},'Bs'}],
   [],
   [{debug_line,312,128},
    {'case',
     {312,5},
     {call,
      {312,10},
      {atom,{312,10},get_arg_value},
      [{var,{312,24},'Size'},{var,{312,30},'Bs'}]},
     [{clause,
       {313,9},
       [{atom,{313,9},none}],
       [],
       [{debug_line,314,129},
        {map,
         {314,15},
         {var,{314,13},'Bs'},
         [{map_field_assoc,
           {314,21},
           {var,{314,17},'Dst'},
           {atom,{314,24},any}}]}]},
      {clause,
       {315,9},
       [{var,{315,9},'Val'}],
       [],
       [{debug_line,316,130},
        {call,
         {316,13},
         {atom,{316,13},update_match},
         [{var,{316,26},'Dst'},
          {var,{316,31},'Ctx'},
          {block,0,
           [{tuple,
             {316,36},
             [{tuple,{316,37},[{atom,{316,38},bif},{atom,{316,42},'*'}]},
              {cons,
               {316,47},
               {var,{316,48},'Val'},
               {cons,{316,52},{var,{316,52},'Unit'},{nil,{316,56}}}}]}]},
          {var,{316,60},'Bs'}]}]}]}]},
  {clause,
   {318,1},
   [{tuple,
     {318,17},
     [{atom,{318,17},b_set},
      {var,{318,17},'_'},
      {var,{318,77},'Dst'},
      {atom,{318,27},bs_start_match},
      {cons,
       {318,47},
       {tuple,{318,48},[{atom,{318,48},b_literal},{atom,{318,63},new}]},
       {cons,{318,68},{var,{318,68},'Arg'},{nil,{318,71}}}}]},
    {var,{318,83},'Bs'}],
   [],
   [{debug_line,319,131},
    {'case',
     {319,5},
     {call,
      {319,10},
      {atom,{319,10},get_arg_value},
      [{var,{319,24},'Arg'},{var,{319,29},'Bs'}]},
     [{clause,
       {320,9},
       [{atom,{320,9},none}],
       [],
       [{debug_line,321,132},
        {map,
         {321,15},
         {var,{321,13},'Bs'},
         [{map_field_assoc,
           {321,21},
           {var,{321,17},'Dst'},
           {atom,{321,24},any}}]}]},
      {clause,
       {322,9},
       [{var,{322,9},'Val'}],
       [],
       [{debug_line,323,133},
        {map,
         {323,15},
         {var,{323,13},'Bs'},
         [{map_field_assoc,
           {323,21},
           {var,{323,17},'Dst'},
           {tuple,
            {323,24},
            [{atom,{323,25},match},
             {tuple,
              {323,31},
              [{tuple,{323,32},[{atom,{323,33},bif},{atom,{323,37},bit_size}]},
               {cons,{323,47},{var,{323,48},'Val'},{nil,{323,51}}}]},
             {tuple,
              {323,54},
              [{atom,{323,54},b_literal},{integer,{323,69},0}]}]}}]}]}]}]},
  {clause,
   {325,1},
   [{match,
     {325,17},
     {tuple,
      {325,17},
      [{atom,{325,17},b_set},
       {var,{325,17},'_'},
       {var,{325,53},'Dst'},
       {atom,{325,27},call},
       {cons,{325,37},{var,{325,38},'Name'},{var,{325,43},'Args'}}]},
     {var,{325,58},'I'}},
    {var,{325,61},'Bs'}],
   [],
   [{debug_line,326,134},
    {'if',
     {326,5},
     [{clause,
       {327,9},
       [],
       [[{call,
          {327,9},
          {remote,{327,9},{atom,{327,9},erlang},{atom,{327,9},is_map_key}},
          [{var,{327,20},'Name'},{var,{327,26},'Bs'}]}]],
       [{debug_line,328,135},
        {match,
         {328,13},
         {var,{328,13},'Result0'},
         {lc,
          {328,23},
          {block,0,
           [{call,
             {328,24},
             {atom,{328,24},get_value},
             [{var,{328,34},'A'},{var,{328,37},'Bs'}]}]},
          [{block,0,[{atom,{328,49},true}]},
           {generate,{328,46},{var,{328,44},'A'},{var,{328,49},'Args'}}]}},
        {debug_line,329,136},
        {match,
         {329,13},
         {var,{329,13},'Result'},
         {lc,
          {329,22},
          {block,0,[{var,{329,23},'Val'}]},
          [{block,0,[{atom,{329,37},true}]},
           {generate,{329,34},{var,{329,30},'Val'},{var,{329,37},'Result0'}},
           {block,0,[{atom,{329,50},true}]},
           {op,{329,50},'=/=',{var,{329,46},'Val'},{atom,{329,54},any}}]}},
        {debug_line,330,137},
        {map,
         {330,15},
         {var,{330,13},'Bs'},
         [{map_field_assoc,
           {330,21},
           {var,{330,17},'Dst'},
           {tuple,
            {330,24},
            [{atom,{330,25},call},{var,{330,30},'Result'}]}}]}]},
      {clause,
       {331,9},
       [],
       [[{atom,{331,9},true}]],
       [{debug_line,332,138},
        {call,
         {332,13},
         {atom,{332,13},call_size_func},
         [{var,{332,28},'I'},{var,{332,31},'Bs'}]}]}]}]},
  {clause,
   {334,1},
   [{tuple,
     {334,17},
     [{atom,{334,17},b_set},
      {var,{334,17},'_'},
      {var,{334,49},'Dst'},
      {atom,{334,27},get_tl},
      {cons,{334,39},{var,{334,40},'Ctx'},{nil,{334,43}}}]},
    {var,{334,55},'Bs'}],
   [],
   [{debug_line,335,139},
    {call,
     {335,5},
     {atom,{335,5},update_match},
     [{var,{335,18},'Dst'},
      {var,{335,23},'Ctx'},
      {block,0,
       [{tuple,{335,28},[{atom,{335,28},b_literal},{integer,{335,43},1}]}]},
      {var,{335,47},'Bs'}]}]},
  {clause,
   {336,1},
   [{tuple,
     {336,17},
     [{atom,{336,17},b_set},
      {var,{336,17},'_'},
      {var,{336,59},'Dst'},
      {atom,{336,27},is_nonempty_list},
      {cons,{336,49},{var,{336,50},'Arg'},{nil,{336,53}}}]},
    {var,{336,65},'Bs'}],
   [],
   [{debug_line,337,140},
    {'case',
     {337,5},
     {call,
      {337,10},
      {atom,{337,10},get_arg_value},
      [{var,{337,24},'Arg'},{var,{337,29},'Bs'}]},
     [{clause,
       {338,9},
       [{atom,{338,9},none}],
       [],
       [{debug_line,339,141},
        {map,
         {339,15},
         {var,{339,13},'Bs'},
         [{map_field_assoc,
           {339,21},
           {var,{339,17},'Dst'},
           {atom,{339,24},any}}]}]},
      {clause,
       {340,9},
       [{var,{340,9},'Val'}],
       [],
       [{debug_line,341,142},
        {match,
         {341,13},
         {var,{341,13},'NumElements'},
         {tuple,
          {341,27},
          [{tuple,{341,28},[{atom,{341,29},bif},{atom,{341,33},length}]},
           {cons,{341,41},{var,{341,42},'Val'},{nil,{341,45}}}]}},
        {debug_line,342,143},
        {match,
         {342,13},
         {var,{342,13},'Match'},
         {tuple,
          {342,21},
          [{atom,{342,22},match},
           {var,{342,28},'NumElements'},
           {tuple,
            {342,40},
            [{atom,{342,40},b_literal},{integer,{342,55},0}]}]}},
        {debug_line,343,144},
        {match,
         {343,13},
         {var,{343,13},'NoMatch'},
         {tuple,{343,23},[{atom,{343,24},nil_or_bad},{var,{343,35},'Val'}]}},
        {debug_line,344,145},
        {map,
         {344,15},
         {var,{344,13},'Bs'},
         [{map_field_assoc,
           {344,21},
           {var,{344,17},'Dst'},
           {tuple,
            {344,24},
            [{atom,{344,25},'if'},
             {var,{344,30},'Arg'},
             {var,{344,34},'Match'},
             {var,{344,40},'NoMatch'}]}}]}]}]}]},
  {clause,
   {346,1},
   [{tuple,
     {346,17},
     [{atom,{346,17},b_set},
      {var,{346,17},'_'},
      {var,{346,51},'Dst'},
      {atom,{346,27},put_tuple},
      {var,{346,42},'Args'}]},
    {var,{346,57},'Bs'}],
   [],
   [{debug_line,347,146},
    {map,
     {347,7},
     {var,{347,5},'Bs'},
     [{map_field_assoc,
       {347,13},
       {var,{347,9},'Dst'},
       {tuple,{347,16},[{atom,{347,17},tuple},{var,{347,23},'Args'}]}}]}]},
  {clause,
   {348,1},
   [{tuple,
     {348,17},
     [{atom,{348,17},b_set},
      {var,{348,17},'_'},
      {var,{348,56},'Dst'},
      {tuple,{348,27},[{atom,{348,28},succeeded},{var,{348,38},'_'}]},
      {cons,{348,46},{var,{348,47},'Arg'},{nil,{348,50}}}]},
    {var,{348,62},'Bs'}],
   [],
   [{debug_line,349,147},
    {map,
     {349,7},
     {var,{349,5},'Bs'},
     [{map_field_assoc,
       {349,13},
       {var,{349,9},'Dst'},
       {tuple,{349,16},[{atom,{349,17},succeeded},{var,{349,27},'Arg'}]}}]}]},
  {clause,
   {350,1},
   [{tuple,
     {350,17},
     [{atom,{350,17},b_set},
      {var,{350,17},'_'},
      {var,{350,28},'Dst'},
      {var,{350,17},'_'},
      {var,{350,17},'_'}]},
    {var,{350,34},'Bs'}],
   [],
   [{debug_line,351,148},
    {map,
     {351,7},
     {var,{351,5},'Bs'},
     [{map_field_assoc,{351,13},{var,{351,9},'Dst'},{atom,{351,16},any}}]}]}]}.
{function,
    {353,1},
    calc_create_bin_size,2,
    [{clause,
         {353,1},
         [{var,{353,1},'_'},{var,{353,1},'_'}],
         [[{call,
               {353,1},
               {remote,
                   {353,1},
                   {atom,{353,1},fake},
                   {atom,{353,1},is_beam_bif_info}},
               []}]],
         [{debug_line,353,149},{atom,{353,1},ignore}]},
     {clause,
         {353,1},
         [{var,{353,22},'Args'},{var,{353,28},'Bs'}],
         [],
         [{debug_line,354,150},
          {call,
              {354,5},
              {atom,{354,5},calc_create_bin_size},
              [{var,{354,26},'Args'},
               {var,{354,32},'Bs'},
               {block,0,
                   [{tuple,
                        {354,36},
                        [{atom,{354,36},b_literal},
                         {integer,{354,51},0}]}]}]}]}]}.
{function,
 {356,1},
 calc_create_bin_size,3,
 [{clause,
   {356,1},
   [{var,{356,1},'_'},{var,{356,1},'_'},{var,{356,1},'_'}],
   [[{call,
      {356,1},
      {remote,{356,1},{atom,{356,1},fake},{atom,{356,1},is_beam_bif_info}},
      []}]],
   [{debug_line,356,151},{atom,{356,1},ignore}]},
  {clause,
   {356,1},
   [{cons,
     {356,22},
     {var,{356,23},'_'},
     {cons,
      {356,25},
      {tuple,
       {356,25},
       [{atom,{356,25},b_literal},
        {cons,{356,40},{integer,{356,41},0},{var,{356,43},'_'}}]},
      {cons,
       {356,47},
       {var,{356,47},'_'},
       {cons,{356,49},{var,{356,49},'_'},{var,{356,51},'_'}}}}},
    {var,{356,55},'_Bs'},
    {var,{356,60},'_Acc'}],
   [],
   [{debug_line,358,152},{atom,{358,5},any}]},
  {clause,
   {359,1},
   [{cons,
     {359,22},
     {var,{359,23},'_'},
     {cons,
      {359,25},
      {tuple,
       {359,25},
       [{atom,{359,25},b_literal},
        {cons,{359,40},{var,{359,41},'U'},{var,{359,43},'_'}}]},
      {cons,
       {359,47},
       {var,{359,47},'_'},
       {cons,{359,49},{var,{359,49},'Size'},{var,{359,54},'T'}}}}},
    {var,{359,58},'Bs'},
    {var,{359,62},'Acc0'}],
   [[{call,
      {359,73},
      {remote,{359,73},{atom,{359,73},erlang},{atom,{359,73},is_integer}},
      [{var,{359,84},'U'}]}]],
   [{debug_line,360,153},
    {'case',
     {360,5},
     {call,
      {360,10},
      {atom,{360,10},get_value},
      [{var,{360,20},'Size'},{var,{360,26},'Bs'}]},
     [{clause,
       {361,9},
       [{tuple,{361,9},[{atom,{361,9},b_literal},{var,{361,24},'Val'}]}],
       [[{call,
          {361,34},
          {remote,{361,34},{atom,{361,34},erlang},{atom,{361,34},is_integer}},
          [{var,{361,45},'Val'}]}]],
       [{debug_line,362,154},
        {match,
         {362,13},
         {var,{362,13},'Acc'},
         {tuple,
          {362,19},
          [{tuple,{362,20},[{atom,{362,21},bif},{atom,{362,25},'+'}]},
           {cons,
            {362,30},
            {var,{362,31},'Acc0'},
            {cons,
             {362,36},
             {tuple,
              {362,36},
              [{atom,{362,36},b_literal},
               {op,{362,52},'*',{var,{362,51},'U'},{var,{362,53},'Val'}}]},
             {nil,{362,57}}}}]}},
        {debug_line,363,155},
        {call,
         {363,13},
         {atom,{363,13},calc_create_bin_size},
         [{var,{363,34},'T'},{var,{363,37},'Bs'},{var,{363,41},'Acc'}]}]},
      {clause,
       {364,9},
       [{tuple,{364,9},[{atom,{364,10},arg},{var,{364,14},'Var'}]}],
       [],
       [{debug_line,365,156},
        {match,
         {365,13},
         {var,{365,13},'Acc'},
         {tuple,
          {365,19},
          [{tuple,{365,20},[{atom,{365,21},bif},{atom,{365,25},'+'}]},
           {cons,
            {365,30},
            {var,{365,31},'Acc0'},
            {cons,
             {365,36},
             {tuple,
              {365,36},
              [{tuple,{365,37},[{atom,{365,38},bif},{atom,{365,42},'*'}]},
               {cons,
                {365,47},
                {var,{365,48},'Var'},
                {cons,
                 {365,52},
                 {tuple,
                  {365,52},
                  [{atom,{365,52},b_literal},{var,{365,67},'U'}]},
                 {nil,{365,69}}}}]},
             {nil,{365,71}}}}]}},
        {debug_line,366,157},
        {call,
         {366,13},
         {atom,{366,13},calc_create_bin_size},
         [{var,{366,34},'T'},{var,{366,37},'Bs'},{var,{366,41},'Acc'}]}]},
      {clause,
       {367,9},
       [{var,{367,9},'_'}],
       [],
       [{debug_line,368,158},{atom,{368,13},any}]}]}]},
  {clause,
   {370,1},
   [{nil,{370,22}},{var,{370,26},'_Bs'},{var,{370,31},'Acc'}],
   [],
   [{debug_line,371,159},
    {tuple,{371,5},[{atom,{371,6},expr},{var,{371,11},'Acc'}]}]}]}.
{function,
    {373,1},
    update_writable,4,
    [{clause,
         {373,1},
         [{var,{373,1},'_'},
          {var,{373,1},'_'},
          {var,{373,1},'_'},
          {var,{373,1},'_'}],
         [[{call,
               {373,1},
               {remote,
                   {373,1},
                   {atom,{373,1},fake},
                   {atom,{373,1},is_beam_bif_info}},
               []}]],
         [{debug_line,373,160},{atom,{373,1},ignore}]},
     {clause,
         {373,1},
         [{var,{373,17},'Dst'},
          {var,{373,22},'Writable'},
          {var,{373,32},'Expr'},
          {var,{373,38},'Bs'}],
         [],
         [{debug_line,374,161},
          {'case',
              {374,5},
              {call,
                  {374,10},
                  {atom,{374,10},get_value},
                  [{var,{374,20},'Writable'},{var,{374,30},'Bs'}]},
              [{clause,
                   {375,9},
                   [{tuple,
                        {375,9},
                        [{atom,{375,10},writable},
                         {tuple,
                             {375,19},
                             [{atom,{375,19},b_literal},
                              {integer,{375,34},0}]}]}],
                   [],
                   [{debug_line,376,162},
                    {map,
                        {376,15},
                        {var,{376,13},'Bs'},
                        [{map_field_assoc,
                             {376,21},
                             {var,{376,17},'Dst'},
                             {tuple,
                                 {376,24},
                                 [{atom,{376,25},writable},
                                  {var,{376,34},'Expr'}]}}]}]},
               {clause,
                   {377,9},
                   [{var,{377,9},'_'}],
                   [],
                   [{debug_line,378,163},
                    {map,
                        {378,15},
                        {var,{378,13},'Bs'},
                        [{map_field_assoc,
                             {378,21},
                             {var,{378,17},'Dst'},
                             {atom,{378,24},any}}]}]}]}]}]}.
{function,
    {381,1},
    update_match,4,
    [{clause,
         {381,1},
         [{var,{381,1},'_'},
          {var,{381,1},'_'},
          {var,{381,1},'_'},
          {var,{381,1},'_'}],
         [[{call,
               {381,1},
               {remote,
                   {381,1},
                   {atom,{381,1},fake},
                   {atom,{381,1},is_beam_bif_info}},
               []}]],
         [{debug_line,381,164},{atom,{381,1},ignore}]},
     {clause,
         {381,1},
         [{var,{381,14},'Dst'},
          {var,{381,19},'Ctx'},
          {var,{381,24},'Increment'},
          {var,{381,35},'Bs'}],
         [],
         [{debug_line,382,165},
          {'case',
              {382,5},
              {call,
                  {382,10},
                  {atom,{382,10},get_value},
                  [{var,{382,20},'Ctx'},{var,{382,25},'Bs'}]},
              [{clause,
                   {383,9},
                   [{tuple,
                        {383,9},
                        [{atom,{383,10},match},
                         {var,{383,16},'NumElements'},
                         {var,{383,28},'Offset0'}]}],
                   [],
                   [{debug_line,384,166},
                    {match,
                        {384,13},
                        {var,{384,13},'Offset'},
                        {tuple,
                            {384,22},
                            [{tuple,
                                 {384,23},
                                 [{atom,{384,24},bif},{atom,{384,28},'+'}]},
                             {cons,
                                 {384,33},
                                 {var,{384,34},'Offset0'},
                                 {cons,
                                     {384,42},
                                     {var,{384,42},'Increment'},
                                     {nil,{384,51}}}}]}},
                    {debug_line,385,167},
                    {map,
                        {385,15},
                        {var,{385,13},'Bs'},
                        [{map_field_assoc,
                             {385,21},
                             {var,{385,17},'Dst'},
                             {tuple,
                                 {385,24},
                                 [{atom,{385,25},match},
                                  {var,{385,31},'NumElements'},
                                  {var,{385,43},'Offset'}]}}]}]},
               {clause,
                   {386,9},
                   [{var,{386,9},'_'}],
                   [],
                   [{debug_line,387,168},
                    {map,
                        {387,15},
                        {var,{387,13},'Bs'},
                        [{map_field_assoc,
                             {387,21},
                             {var,{387,17},'Dst'},
                             {atom,{387,24},any}}]}]}]}]}]}.
{function,
    {390,1},
    get_arg_value,2,
    [{clause,
         {390,1},
         [{var,{390,1},'_'},{var,{390,1},'_'}],
         [[{call,
               {390,1},
               {remote,
                   {390,1},
                   {atom,{390,1},fake},
                   {atom,{390,1},is_beam_bif_info}},
               []}]],
         [{debug_line,390,169},{atom,{390,1},ignore}]},
     {clause,
         {390,1},
         [{match,
              {390,15},
              {tuple,{390,15},[{atom,{390,15},b_literal},{var,{390,15},'_'}]},
              {var,{390,28},'Lit'}},
          {var,{390,33},'_Bs'}],
         [],
         [{debug_line,391,170},{var,{391,5},'Lit'}]},
     {clause,
         {392,1},
         [{var,{392,15},'Name'},{var,{392,21},'Bs'}],
         [],
         [{debug_line,393,171},
          {'case',
              {393,5},
              {var,{393,10},'Bs'},
              [{clause,
                   {394,9},
                   [{map,
                        {394,9},
                        [{map_field_exact,
                             {394,16},
                             {var,{394,11},'Name'},
                             {tuple,
                                 {394,19},
                                 [{atom,{394,20},arg},
                                  {var,{394,24},'Val'}]}}]}],
                   [],
                   [{debug_line,394,172},{var,{394,33},'Val'}]},
               {clause,
                   {395,9},
                   [{map,{395,9},[]}],
                   [],
                   [{debug_line,395,173},{atom,{395,16},none}]}]}]}]}.
{function,
    {398,1},
    get_value,2,
    [{clause,
         {398,1},
         [{var,{398,1},'_'},{var,{398,1},'_'}],
         [[{call,
               {398,1},
               {remote,
                   {398,1},
                   {atom,{398,1},fake},
                   {atom,{398,1},is_beam_bif_info}},
               []}]],
         [{debug_line,398,174},{atom,{398,1},ignore}]},
     {clause,
         {398,1},
         [{var,{398,11},'Name'},{var,{398,17},'Bs'}],
         [],
         [{debug_line,399,175},
          {'case',
              {399,5},
              {var,{399,10},'Bs'},
              [{clause,
                   {400,9},
                   [{map,
                        {400,9},
                        [{map_field_exact,
                             {400,16},
                             {var,{400,11},'Name'},
                             {var,{400,19},'Value'}}]}],
                   [],
                   [{debug_line,400,176},{var,{400,29},'Value'}]},
               {clause,
                   {401,9},
                   [{map,{401,9},[]}],
                   [],
                   [{debug_line,401,177},{var,{401,16},'Name'}]}]}]}]}.
{function,
    {404,1},
    join_bs,2,
    [{clause,
         {404,1},
         [{var,{404,1},'_'},{var,{404,1},'_'}],
         [[{call,
               {404,1},
               {remote,
                   {404,1},
                   {atom,{404,1},fake},
                   {atom,{404,1},is_beam_bif_info}},
               []}]],
         [{debug_line,404,178},{atom,{404,1},ignore}]},
     {clause,
         {404,1},
         [{var,{404,9},'LHS'},{var,{404,14},'RHS'}],
         [],
         [{debug_line,405,179},
          {'if',
              {405,5},
              [{clause,
                   {406,9},
                   [],
                   [[{op,{406,23},
                         '<',
                         {call,
                             {406,9},
                             {remote,
                                 {406,9},
                                 {atom,{406,9},erlang},
                                 {atom,{406,9},map_size}},
                             [{var,{406,18},'LHS'}]},
                         {call,
                             {406,25},
                             {remote,
                                 {406,25},
                                 {atom,{406,25},erlang},
                                 {atom,{406,25},map_size}},
                             [{var,{406,34},'RHS'}]}}]],
                   [{debug_line,407,180},
                    {call,
                        {407,13},
                        {atom,{407,13},join_bs_1},
                        [{block,0,
                             [{call,
                                  {407,23},
                                  {remote,
                                      {407,27},
                                      {atom,{407,23},maps},
                                      {atom,{407,28},keys}},
                                  [{var,{407,33},'LHS'}]}]},
                         {var,{407,39},'RHS'},
                         {var,{407,44},'LHS'}]}]},
               {clause,
                   {408,9},
                   [],
                   [[{atom,{408,9},true}]],
                   [{debug_line,409,181},
                    {call,
                        {409,13},
                        {atom,{409,13},join_bs_1},
                        [{block,0,
                             [{call,
                                  {409,23},
                                  {remote,
                                      {409,27},
                                      {atom,{409,23},maps},
                                      {atom,{409,28},keys}},
                                  [{var,{409,33},'RHS'}]}]},
                         {var,{409,39},'LHS'},
                         {var,{409,44},'RHS'}]}]}]}]}]}.
{function,
    {413,1},
    join_bs_1,3,
    [{clause,
         {413,1},
         [{var,{413,1},'_'},{var,{413,1},'_'},{var,{413,1},'_'}],
         [[{call,
               {413,1},
               {remote,
                   {413,1},
                   {atom,{413,1},fake},
                   {atom,{413,1},is_beam_bif_info}},
               []}]],
         [{debug_line,413,182},{atom,{413,1},ignore}]},
     {clause,
         {413,1},
         [{cons,{413,11},{var,{413,12},'V'},{var,{413,16},'Vs'}},
          {var,{413,21},'Bigger'},
          {var,{413,29},'Smaller'}],
         [],
         [{debug_line,414,183},
          {'case',
              {414,5},
              {tuple,
                  {414,10},
                  [{var,{414,11},'Bigger'},{var,{414,19},'Smaller'}]},
              [{clause,
                   {415,9},
                   [{tuple,
                        {415,9},
                        [{map,
                             {415,10},
                             [{map_field_exact,
                                  {415,14},
                                  {var,{415,12},'V'},
                                  {var,{415,17},'Same'}}]},
                         {map,
                             {415,23},
                             [{map_field_exact,
                                  {415,27},
                                  {var,{415,25},'V'},
                                  {var,{415,30},'Same'}}]}]}],
                   [],
                   [{debug_line,416,184},
                    {call,
                        {416,13},
                        {atom,{416,13},join_bs_1},
                        [{var,{416,23},'Vs'},
                         {var,{416,27},'Bigger'},
                         {var,{416,35},'Smaller'}]}]},
               {clause,
                   {417,9},
                   [{tuple,
                        {417,9},
                        [{map,
                             {417,10},
                             [{map_field_exact,
                                  {417,14},
                                  {var,{417,12},'V'},
                                  {var,{417,17},'_LHS'}}]},
                         {map,
                             {417,23},
                             [{map_field_exact,
                                  {417,27},
                                  {var,{417,25},'V'},
                                  {var,{417,30},'_RHS'}}]}]}],
                   [],
                   [{debug_line,418,185},
                    {call,
                        {418,13},
                        {atom,{418,13},join_bs_1},
                        [{var,{418,23},'Vs'},
                         {var,{418,27},'Bigger'},
                         {block,0,
                             [{map,
                                  {418,42},
                                  {var,{418,35},'Smaller'},
                                  [{map_field_exact,
                                       {418,46},
                                       {var,{418,44},'V'},
                                       {atom,{418,49},any}}]}]}]}]},
               {clause,
                   {419,9},
                   [{tuple,
                        {419,9},
                        [{map,{419,10},[]},
                         {map,
                             {419,15},
                             [{map_field_exact,
                                  {419,19},
                                  {var,{419,17},'V'},
                                  {var,{419,22},'_'}}]}]}],
                   [],
                   [{debug_line,420,186},
                    {call,
                        {420,13},
                        {atom,{420,13},join_bs_1},
                        [{var,{420,23},'Vs'},
                         {var,{420,27},'Bigger'},
                         {block,0,
                             [{call,
                                  {420,35},
                                  {remote,
                                      {420,39},
                                      {atom,{420,35},maps},
                                      {atom,{420,40},remove}},
                                  [{var,{420,47},'V'},
                                   {var,{420,50},'Smaller'}]}]}]}]}]}]},
     {clause,
         {422,1},
         [{nil,{422,11}},{var,{422,15},'_Bigger'},{var,{422,24},'Smaller'}],
         [],
         [{debug_line,422,187},{var,{422,36},'Smaller'}]}]}.
{function,{428,1},
          make_expr_tree,1,
          [{clause,{428,1},
                   [{var,{428,1},'_'}],
                   [[{call,{428,1},
                           {remote,{428,1},
                                   {atom,{428,1},fake},
                                   {atom,{428,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,428,188},{atom,{428,1},ignore}]},
           {clause,{428,1},
                   [{tuple,{428,16},
                           [{atom,{428,17},call},{var,{428,22},'Alloc0'}]}],
                   [],
                   [{debug_line,429,189},
                    {match,{429,5},
                           {var,{429,5},'Alloc1'},
                           {call,{429,14},
                                 {atom,{429,14},make_expr_tree_list},
                                 [{var,{429,34},'Alloc0'},
                                  {atom,{429,42},none},
                                  {atom,{429,48},none}]}},
                    {debug_line,430,190},
                    {match,{430,5},
                           {var,{430,5},'Alloc'},
                           {call,{430,13},
                                 {atom,{430,13},opt_expr},
                                 [{var,{430,22},'Alloc1'}]}},
                    {debug_line,431,191},
                    {call,{431,5},
                          {atom,{431,5},round_up_to_byte_size},
                          [{var,{431,27},'Alloc'}]}]},
           {clause,{432,1},
                   [{var,{432,16},'_'}],
                   [],
                   [{debug_line,433,192},
                    {call,{433,5},
                          {remote,{433,5},
                                  {atom,{433,5},erlang},
                                  {atom,{433,5},throw}},
                          [{atom,{433,11},not_possible}]}]}]}.
{function,
 {435,1},
 make_expr_tree_list,3,
 [{clause,
   {435,1},
   [{var,{435,1},'_'},{var,{435,1},'_'},{var,{435,1},'_'}],
   [[{call,
      {435,1},
      {remote,{435,1},{atom,{435,1},fake},{atom,{435,1},is_beam_bif_info}},
      []}]],
   [{debug_line,435,193},{atom,{435,1},ignore}]},
  {clause,
   {435,1},
   [{cons,
     {435,21},
     {tuple,{435,22},[{atom,{435,23},call},{var,{435,28},'List'}]},
     {var,{435,34},'T'}},
    {var,{435,38},'Match'},
    {atom,{435,45},none}],
   [],
   [{debug_line,436,194},
    {match,
     {436,5},
     {var,{436,5},'BuildSize'},
     {call,
      {436,17},
      {atom,{436,17},make_expr_tree_list},
      [{var,{436,37},'List'},{atom,{436,43},none},{atom,{436,49},none}]}},
    {debug_line,437,195},
    {call,
     {437,5},
     {atom,{437,5},make_expr_tree_list},
     [{var,{437,25},'T'},{var,{437,28},'Match'},{var,{437,35},'BuildSize'}]}]},
  {clause,
   {438,1},
   [{cons,
     {438,21},
     {tuple,
      {438,22},
      [{atom,{438,23},match},{var,{438,29},'NumItems'},{var,{438,38},'N'}]},
     {var,{438,41},'T'}},
    {atom,{438,45},none},
    {var,{438,51},'BuildSize'}],
   [],
   [{debug_line,439,196},
    {call,
     {439,5},
     {atom,{439,5},make_expr_tree_list},
     [{var,{439,25},'T'},
      {block,0,
       [{tuple,{439,28},[{var,{439,29},'NumItems'},{var,{439,38},'N'}]}]},
      {var,{439,42},'BuildSize'}]}]},
  {clause,
   {440,1},
   [{cons,
     {440,21},
     {tuple,{440,22},[{atom,{440,23},writable},{var,{440,32},'BuildSize'}]},
     {var,{440,43},'T'}},
    {var,{440,47},'Match'},
    {atom,{440,54},none}],
   [],
   [{debug_line,441,197},
    {call,
     {441,5},
     {atom,{441,5},make_expr_tree_list},
     [{var,{441,25},'T'},{var,{441,28},'Match'},{var,{441,35},'BuildSize'}]}]},
  {clause,
   {442,1},
   [{cons,{442,21},{var,{442,22},'_'},{var,{442,24},'T'}},
    {var,{442,28},'Match'},
    {var,{442,35},'BuildSize'}],
   [],
   [{debug_line,443,198},
    {call,
     {443,5},
     {atom,{443,5},make_expr_tree_list},
     [{var,{443,25},'T'},{var,{443,28},'Match'},{var,{443,35},'BuildSize'}]}]},
  {clause,
   {444,1},
   [{nil,{444,21}},{var,{444,25},'Match'},{var,{444,32},'BuildSize'}],
   [[{op,{445,14},'=/=',{var,{445,8},'Match'},{atom,{445,18},none}},
     {op,{445,34},'=/=',{var,{445,24},'BuildSize'},{atom,{445,38},none}}]],
   [{debug_line,446,199},
    {match,
     {446,5},
     {tuple,{446,5},[{var,{446,6},'NumItems'},{var,{446,15},'N'}]},
     {var,{446,20},'Match'}},
    {debug_line,447,200},
    {'case',
     {447,5},
     {var,{447,10},'N'},
     [{clause,
       {448,9},
       [{tuple,{448,9},[{atom,{448,9},b_literal},{integer,{448,24},0}]}],
       [],
       [{debug_line,449,201},
        {call,
         {449,13},
         {remote,{449,13},{atom,{449,13},erlang},{atom,{449,13},throw}},
         [{atom,{449,19},not_possible}]}]},
      {clause,
       {450,9},
       [{var,{450,9},'_'}],
       [],
       [{debug_line,451,202},
        {tuple,
         {451,13},
         [{tuple,{451,14},[{atom,{451,15},bif},{atom,{451,19},'*'}]},
          {cons,
           {451,24},
           {tuple,
            {451,25},
            [{tuple,{451,26},[{atom,{451,27},bif},{atom,{451,31},'div'}]},
             {cons,
              {451,38},
              {var,{451,39},'NumItems'},
              {cons,{451,48},{var,{451,48},'N'},{nil,{451,49}}}}]},
           {cons,{451,52},{var,{451,52},'BuildSize'},{nil,{451,61}}}}]}]}]}]},
  {clause,
   {453,1},
   [{nil,{453,21}},{var,{453,25},'_'},{var,{453,28},'_'}],
   [],
   [{debug_line,454,203},{atom,{454,5},none}]}]}.
{function,
 {456,1},
 round_up_to_byte_size,1,
 [{clause,
   {456,1},
   [{var,{456,1},'_'}],
   [[{call,
      {456,1},
      {remote,{456,1},{atom,{456,1},fake},{atom,{456,1},is_beam_bif_info}},
      []}]],
   [{debug_line,456,204},{atom,{456,1},ignore}]},
  {clause,
   {456,1},
   [{var,{456,23},'Alloc0'}],
   [],
   [{debug_line,457,205},
    {match,
     {457,5},
     {var,{457,5},'Alloc'},
     {'case',
      {457,13},
      {call,
       {457,18},
       {atom,{457,18},divisible_by_eight},
       [{var,{457,37},'Alloc0'}]},
      [{clause,
        {458,17},
        [{atom,{458,17},true}],
        [],
        [{debug_line,458,206},{var,{458,25},'Alloc0'}]},
       {clause,
        {459,17},
        [{atom,{459,17},false}],
        [],
        [{debug_line,459,207},
         {tuple,
          {459,26},
          [{tuple,{459,27},[{atom,{459,28},bif},{atom,{459,32},'+'}]},
           {cons,
            {459,37},
            {var,{459,38},'Alloc0'},
            {cons,
             {459,45},
             {tuple,{459,45},[{atom,{459,45},b_literal},{integer,{459,60},7}]},
             {nil,{459,62}}}}]}]}]}},
    {debug_line,461,208},
    {call,
     {461,5},
     {atom,{461,5},opt_expr},
     [{block,0,
       [{tuple,
         {461,14},
         [{tuple,{461,15},[{atom,{461,16},bif},{atom,{461,20},'div'}]},
          {cons,
           {461,27},
           {var,{461,28},'Alloc'},
           {cons,
            {461,34},
            {tuple,{461,34},[{atom,{461,34},b_literal},{integer,{461,49},8}]},
            {nil,{461,51}}}}]}]}]}]}]}.
{function,
    {463,1},
    divisible_by_eight,1,
    [{clause,
         {463,1},
         [{var,{463,1},'_'}],
         [[{call,
               {463,1},
               {remote,
                   {463,1},
                   {atom,{463,1},fake},
                   {atom,{463,1},is_beam_bif_info}},
               []}]],
         [{debug_line,463,209},{atom,{463,1},ignore}]},
     {clause,
         {463,1},
         [{tuple,
              {463,20},
              [{tuple,{463,21},[{atom,{463,22},bif},{atom,{463,26},'*'}]},
               {cons,
                   {463,31},
                   {var,{463,32},'Expr1'},
                   {cons,{463,38},{var,{463,38},'Expr2'},{nil,{463,43}}}}]}],
         [],
         [{debug_line,464,210},
          {'case',
              {464,5},
              {call,
                  {464,5},
                  {atom,{464,5},divisible_by_eight},
                  [{var,{464,24},'Expr1'}]},
              [{clause,{464,5},[{atom,{464,5},true}],[],[{atom,{464,5},true}]},
               {clause,
                   {464,5},
                   [{atom,{464,5},false}],
                   [],
                   [{call,
                        {464,38},
                        {atom,{464,38},divisible_by_eight},
                        [{var,{464,57},'Expr2'}]}]},
               {clause,
                   [{generated,true},{location,{464,5}}],
                   [{var,{464,5},cov1}],
                   [],
                   [{call,
                        {464,5},
                        {remote,
                            {464,5},
                            {atom,{464,5},erlang},
                            {atom,{464,5},error}},
                        [{block,0,
                             [{tuple,
                                  {464,5},
                                  [{atom,{464,5},badarg},
                                   {var,{464,5},cov1}]}]}]}]}]}]},
     {clause,
         {465,1},
         [{tuple,{465,20},[{atom,{465,20},b_literal},{var,{465,35},'Val'}]}],
         [[{op,{465,56},
               '=:=',
               {op,{465,50},'rem',{var,{465,46},'Val'},{integer,{465,54},8}},
               {integer,{465,60},0}}]],
         [{debug_line,466,211},{atom,{466,5},true}]},
     {clause,
         {467,1},
         [{var,{467,20},'_'}],
         [],
         [{debug_line,467,212},{atom,{467,26},false}]}]}.
{function,
    {473,1},
    opt_expr,1,
    [{clause,
         {473,1},
         [{var,{473,1},'_'}],
         [[{call,
               {473,1},
               {remote,
                   {473,1},
                   {atom,{473,1},fake},
                   {atom,{473,1},is_beam_bif_info}},
               []}]],
         [{debug_line,473,213},{atom,{473,1},ignore}]},
     {clause,
         {473,1},
         [{tuple,{473,10},[{var,{473,11},'Op'},{var,{473,14},'Args0'}]}],
         [],
         [{debug_line,474,214},
          {match,
              {474,5},
              {var,{474,5},'Args'},
              {call,
                  {474,12},
                  {atom,{474,12},opt_expr_args},
                  [{var,{474,26},'Args0'}]}},
          {debug_line,475,215},
          {'case',
              {475,5},
              {call,
                  {475,10},
                  {atom,{475,10},literal_expr_args},
                  [{var,{475,28},'Args'},{nil,{475,34}}]},
              [{clause,
                   {476,9},
                   [{atom,{476,9},none}],
                   [],
                   [{debug_line,477,216},
                    {call,
                        {477,13},
                        {atom,{477,13},opt_expr_1},
                        [{var,{477,24},'Op'},{var,{477,28},'Args'}]}]},
               {clause,
                   {478,9},
                   [{var,{478,9},'LitArgs'}],
                   [],
                   [{debug_line,479,217},
                    {match,
                        {479,13},
                        {tuple,
                            {479,13},
                            [{atom,{479,14},bif},{var,{479,18},'Bif'}]},
                        {var,{479,25},'Op'}},
                    {debug_line,480,218},
                    {'try',
                        {480,13},
                        [{call,
                             {480,17},
                             {remote,
                                 {480,17},
                                 {atom,{480,17},erlang},
                                 {atom,{480,17},apply}},
                             [{atom,{480,23},erlang},
                              {var,{480,31},'Bif'},
                              {var,{480,36},'LitArgs'}]}],
                        [{clause,
                             {481,17},
                             [{var,{481,17},'Result'}],
                             [],
                             [{debug_line,482,219},
                              {tuple,
                                  {482,21},
                                  [{atom,{482,21},b_literal},
                                   {var,{482,36},'Result'}]}]}],
                        [{clause,
                             {484,17},
                             [{tuple,
                                  {484,17},
                                  [{atom,{484,17},error},
                                   {var,{484,23},'_'},
                                   {var,{484,23},'_'}]}],
                             [],
                             [{debug_line,485,220},
                              {call,
                                  {485,21},
                                  {atom,{485,21},opt_expr_1},
                                  [{var,{485,32},'Op'},
                                   {var,{485,36},'Args'}]}]}],
                        []}]}]}]},
     {clause,
         {488,1},
         [{atom,{488,10},none}],
         [],
         [{debug_line,488,221},{atom,{488,19},none}]}]}.
{function,
 {490,1},
 opt_expr_1,2,
 [{clause,
   {490,1},
   [{var,{490,1},'_'},{var,{490,1},'_'}],
   [[{call,
      {490,1},
      {remote,{490,1},{atom,{490,1},fake},{atom,{490,1},is_beam_bif_info}},
      []}]],
   [{debug_line,490,222},{atom,{490,1},ignore}]},
  {clause,
   {490,1},
   [{match,
     {490,12},
     {tuple,{490,12},[{atom,{490,13},bif},{atom,{490,17},'div'}]},
     {var,{490,24},'Op'}},
    {match,
     {490,28},
     {cons,
      {490,28},
      {var,{490,29},'_'},
      {cons,
       {490,31},
       {tuple,{490,31},[{atom,{490,31},b_literal},{integer,{490,46},0}]},
       {nil,{490,48}}}},
     {var,{490,50},'Args'}}],
   [],
   [{debug_line,491,223},
    {tuple,{491,5},[{var,{491,6},'Op'},{var,{491,9},'Args'}]}]},
  {clause,
   {492,1},
   [{tuple,{492,12},[{atom,{492,13},bif},{atom,{492,17},'div'}]},
    {cons,
     {492,25},
     {var,{492,26},'Numerator'},
     {cons,
      {492,36},
      {tuple,{492,36},[{atom,{492,36},b_literal},{integer,{492,51},1}]},
      {nil,{492,53}}}}],
   [],
   [{debug_line,493,224},{var,{493,5},'Numerator'}]},
  {clause,
   {494,1},
   [{match,
     {494,12},
     {tuple,{494,12},[{atom,{494,13},bif},{atom,{494,17},'div'}]},
     {var,{494,24},'Op'}},
    {match,
     {494,28},
     {cons,
      {494,28},
      {var,{494,29},'Numerator'},
      {cons,
       {494,39},
       {tuple,
        {494,39},
        [{atom,{494,39},b_literal},{var,{494,54},'Denominator'}]},
       {nil,{494,66}}}},
     {var,{494,68},'Args'}}],
   [],
   [{debug_line,495,225},
    {'try',
     {495,5},
     [{debug_line,496,226},
      {call,
       {496,9},
       {atom,{496,9},opt_expr_div},
       [{var,{496,22},'Numerator'},{var,{496,33},'Denominator'}]}],
     [],
     [{clause,
       {498,9},
       [{tuple,
         {498,9},
         [{atom,{498,9},throw},
          {atom,{498,15},not_possible},
          {var,{498,15},'_'}]}],
       [],
       [{debug_line,499,227},
        {'try',
         {499,13},
         [{op,
           {499,29},
           'band',
           {var,{499,17},'Denominator'},
           {op,
            {499,47},
            '-',
            {var,{499,35},'Denominator'},
            {integer,{499,49},1}}}],
         [{clause,
           {500,17},
           [{integer,{500,17},0}],
           [],
           [{debug_line,502,228},
            {match,
             {502,21},
             {var,{502,21},'Shift'},
             {call,
              {502,29},
              {remote,{502,29},{atom,{502,29},erlang},{atom,{502,29},round}},
              [{block,0,
                [{call,
                  {502,35},
                  {remote,{502,39},{atom,{502,35},math},{atom,{502,40},log2}},
                  [{var,{502,45},'Denominator'}]}]}]}},
            {debug_line,503,229},
            {tuple,
             {503,21},
             [{tuple,{503,22},[{atom,{503,23},bif},{atom,{503,27},'bsr'}]},
              {cons,
               {503,34},
               {var,{503,35},'Numerator'},
               {cons,
                {503,45},
                {tuple,
                 {503,45},
                 [{atom,{503,45},b_literal},{var,{503,60},'Shift'}]},
                {nil,{503,66}}}}]}]},
          {clause,
           {504,17},
           [{var,{504,17},'_'}],
           [],
           [{debug_line,505,230},
            {tuple,{505,21},[{var,{505,22},'Op'},{var,{505,25},'Args'}]}]}],
         [{clause,
           {507,17},
           [{tuple,
             {507,17},
             [{var,{507,17},'_'},{var,{507,19},'_'},{var,{507,19},'_'}]}],
           [],
           [{debug_line,508,231},
            {tuple,{508,21},[{var,{508,22},'Op'},{var,{508,25},'Args'}]}]}],
         []}]}],
     []}]},
  {clause,
   {511,1},
   [{tuple,{511,12},[{atom,{511,13},bif},{atom,{511,17},'*'}]},
    {cons,
     {511,23},
     {var,{511,24},'Factor'},
     {cons,
      {511,31},
      {tuple,{511,31},[{atom,{511,31},b_literal},{integer,{511,46},1}]},
      {nil,{511,48}}}}],
   [],
   [{debug_line,512,232},{var,{512,5},'Factor'}]},
  {clause,
   {513,1},
   [{tuple,{513,12},[{atom,{513,13},bif},{atom,{513,17},'+'}]},
    {cons,
     {513,23},
     {tuple,{513,24},[{atom,{513,24},b_literal},{integer,{513,39},0}]},
     {cons,{513,42},{var,{513,42},'Term'},{nil,{513,46}}}}],
   [],
   [{debug_line,514,233},{var,{514,5},'Term'}]},
  {clause,
   {515,1},
   [{var,{515,12},'Op'},{var,{515,16},'Args'}],
   [],
   [{debug_line,516,234},
    {tuple,{516,5},[{var,{516,6},'Op'},{var,{516,9},'Args'}]}]}]}.
{function,
 {518,1},
 opt_expr_div,2,
 [{clause,
   {518,1},
   [{var,{518,1},'_'},{var,{518,1},'_'}],
   [[{call,
      {518,1},
      {remote,{518,1},{atom,{518,1},fake},{atom,{518,1},is_beam_bif_info}},
      []}]],
   [{debug_line,518,235},{atom,{518,1},ignore}]},
  {clause,
   {518,1},
   [{tuple,
     {518,14},
     [{tuple,{518,15},[{atom,{518,16},bif},{atom,{518,20},'*'}]},
      {cons,
       {518,25},
       {var,{518,26},'A'},
       {cons,{518,28},{var,{518,28},'B'},{nil,{518,29}}}}]},
    {var,{518,33},'Denominator'}],
   [],
   [{debug_line,519,236},
    {'case',
     {519,5},
     {var,{519,10},'B'},
     [{clause,
       {520,9},
       [{tuple,{520,9},[{atom,{520,9},b_literal},{var,{520,24},'Factor'}]}],
       [[{op,
          {520,60},
          '=:=',
          {op,
           {520,44},
           'rem',
           {var,{520,37},'Factor'},
           {var,{520,48},'Denominator'}},
          {integer,{520,64},0}}]],
       [{debug_line,521,237},
        {tuple,
         {521,13},
         [{tuple,{521,14},[{atom,{521,15},bif},{atom,{521,19},'*'}]},
          {cons,
           {521,24},
           {var,{521,25},'A'},
           {cons,
            {521,27},
            {tuple,
             {521,27},
             [{atom,{521,27},b_literal},
              {op,
               {521,49},
               'div',
               {var,{521,42},'Factor'},
               {var,{521,53},'Denominator'}}]},
            {nil,{521,65}}}}]}]},
      {clause,
       {522,9},
       [{var,{522,9},'_'}],
       [],
       [{debug_line,523,238},
        {tuple,
         {523,13},
         [{tuple,{523,14},[{atom,{523,15},bif},{atom,{523,19},'*'}]},
          {cons,
           {523,24},
           {var,{523,25},'A'},
           {cons,
            {523,27},
            {call,
             {523,27},
             {atom,{523,27},opt_expr_div},
             [{var,{523,40},'B'},{var,{523,43},'Denominator'}]},
            {nil,{523,55}}}}]}]}]}]},
  {clause,
   {525,1},
   [{var,{525,14},'_'},{var,{525,17},'_'}],
   [],
   [{debug_line,526,239},
    {call,
     {526,5},
     {remote,{526,5},{atom,{526,5},erlang},{atom,{526,5},throw}},
     [{atom,{526,11},not_possible}]}]}]}.
{function,
    {528,1},
    opt_expr_args,1,
    [{clause,
         {528,1},
         [{var,{528,1},'_'}],
         [[{call,
               {528,1},
               {remote,
                   {528,1},
                   {atom,{528,1},fake},
                   {atom,{528,1},is_beam_bif_info}},
               []}]],
         [{debug_line,528,240},{atom,{528,1},ignore}]},
     {clause,
         {528,1},
         [{cons,{528,15},{var,{528,16},'A0'},{var,{528,19},'As'}}],
         [],
         [{debug_line,529,241},
          {match,
              {529,5},
              {var,{529,5},'A'},
              {'case',
                  {529,9},
                  {var,{529,14},'A0'},
                  [{clause,
                       {530,13},
                       [{tuple,
                            {530,13},
                            [{atom,{530,13},b_literal},{var,{530,13},'_'}]}],
                       [],
                       [{debug_line,530,242},{var,{530,29},'A0'}]},
                   {clause,
                       {531,13},
                       [{tuple,
                            {531,13},
                            [{atom,{531,13},b_var},{var,{531,13},'_'}]}],
                       [],
                       [{debug_line,531,243},{var,{531,25},'A0'}]},
                   {clause,
                       {532,13},
                       [{var,{532,13},'_'}],
                       [],
                       [{debug_line,532,244},
                        {call,
                            {532,18},
                            {atom,{532,18},opt_expr},
                            [{var,{532,27},'A0'}]}]}]}},
          {debug_line,534,245},
          {cons,
              {534,5},
              {var,{534,6},'A'},
              {call,
                  {534,8},
                  {atom,{534,8},opt_expr_args},
                  [{var,{534,22},'As'}]}}]},
     {clause,
         {535,1},
         [{nil,{535,15}}],
         [],
         [{debug_line,535,246},{nil,{535,22}}]}]}.
{function,
    {537,1},
    literal_expr_args,2,
    [{clause,
         {537,1},
         [{var,{537,1},'_'},{var,{537,1},'_'}],
         [[{call,
               {537,1},
               {remote,
                   {537,1},
                   {atom,{537,1},fake},
                   {atom,{537,1},is_beam_bif_info}},
               []}]],
         [{debug_line,537,247},{atom,{537,1},ignore}]},
     {clause,
         {537,1},
         [{cons,
              {537,19},
              {tuple,
                  {537,20},
                  [{atom,{537,20},b_literal},{var,{537,35},'Val'}]},
              {var,{537,40},'As'}},
          {var,{537,45},'Acc'}],
         [],
         [{debug_line,538,248},
          {call,
              {538,5},
              {atom,{538,5},literal_expr_args},
              [{var,{538,23},'As'},
               {block,0,
                   [{cons,
                        {538,27},
                        {var,{538,28},'Val'},
                        {var,{538,32},'Acc'}}]}]}]},
     {clause,
         {539,1},
         [{cons,{539,19},{var,{539,20},'_'},{var,{539,22},'_'}},
          {var,{539,26},'_'}],
         [],
         [{debug_line,540,249},{atom,{540,5},none}]},
     {clause,
         {541,1},
         [{nil,{541,19}},{var,{541,23},'Acc'}],
         [],
         [{debug_line,542,250},
          {call,
              {542,5},
              {remote,{542,5},{atom,{542,5},lists},{atom,{542,5},reverse}},
              [{var,{542,13},'Acc'}]}]}]}.
{function,
 {549,1},
 cg_size_calc,5,
 [{clause,
   {549,1},
   [{var,{549,1},'_'},
    {var,{549,1},'_'},
    {var,{549,1},'_'},
    {var,{549,1},'_'},
    {var,{549,1},'_'}],
   [[{call,
      {549,1},
      {remote,{549,1},{atom,{549,1},fake},{atom,{549,1},is_beam_bif_info}},
      []}]],
   [{debug_line,549,251},{atom,{549,1},ignore}]},
  {clause,
   {549,1},
   [{var,{549,14},'Expr'},
    {var,{549,20},'L'},
    {match,
     {549,23},
     {tuple,
      {549,23},
      [{atom,{549,23},b_blk},
       {var,{549,23},'_'},
       {var,{549,23},'_'},
       {var,{549,23},'_'}]},
     {var,{549,32},'Blk0'}},
    {var,{549,38},'Count0'},
    {var,{549,46},'Acc0'}],
   [],
   [{debug_line,550,252},
    {match,
     {550,5},
     {tuple,
      {550,5},
      [{cons,
        {550,6},
        {var,{550,7},'Fail'},
        {cons,
         {550,12},
         {var,{550,12},'PhiL'},
         {cons,{550,17},{var,{550,17},'InitWrL'},{nil,{550,24}}}}},
       {var,{550,26},'Count1'}]},
     {call,
      {550,36},
      {atom,{550,36},new_blocks},
      [{integer,{550,47},3},{var,{550,50},'Count0'}]}},
    {debug_line,551,253},
    {match,
     {551,5},
     {tuple,{551,5},[{var,{551,6},'PhiDst'},{var,{551,13},'Count2'}]},
     {call,{551,23},{atom,{551,23},new_var},[{var,{551,31},'Count1'}]}},
    {debug_line,552,254},
    {match,
     {552,5},
     {tuple,
      {552,5},
      [{var,{552,6},'Acc1'},
       {var,{552,11},'Alloc'},
       {var,{552,17},'NextBlk'},
       {var,{552,25},'Count'}]},
     {call,
      {552,34},
      {atom,{552,34},cg_size_calc_1},
      [{var,{552,49},'L'},
       {var,{552,52},'Expr'},
       {var,{552,58},'Fail'},
       {var,{552,64},'Count2'},
       {var,{552,72},'Acc0'}]}},
    {debug_line,554,255},
    {match,
     {554,5},
     {var,{554,5},'BrPhiBlk'},
     {tuple,
      {554,16},
      [{atom,{554,16},b_blk},
       {map,{554,16},[]},
       {nil,{554,26}},
       {call,{554,34},{atom,{554,34},cg_br},[{var,{554,40},'PhiL'}]}]}},
    {debug_line,556,256},
    {match,
     {556,5},
     {var,{556,5},'PhiArgs'},
     {cons,
      {556,15},
      {tuple,{556,16},[{var,{556,17},'Alloc'},{var,{556,23},'NextBlk'}]},
      {cons,
       {557,16},
       {tuple,
        {557,16},
        [{tuple,{557,17},[{atom,{557,17},b_literal},{integer,{557,32},256}]},
         {var,{557,37},'Fail'}]},
       {nil,{557,42}}}}},
    {debug_line,558,257},
    {match,
     {558,5},
     {var,{558,5},'PhiIs'},
     {cons,
      {558,13},
      {tuple,
       {558,14},
       [{atom,{558,14},b_set},
        {map,{558,14},[]},
        {var,{558,32},'PhiDst'},
        {atom,{558,24},phi},
        {var,{558,44},'PhiArgs'}]},
      {nil,{558,52}}}},
    {debug_line,559,258},
    {match,
     {559,5},
     {var,{559,5},'PhiBlk'},
     {tuple,
      {559,14},
      [{atom,{559,14},b_blk},
       {map,{559,14},[]},
       {var,{559,24},'PhiIs'},
       {call,{559,35},{atom,{559,35},cg_br},[{var,{559,41},'InitWrL'}]}]}},
    {debug_line,561,259},
    {match,
     {561,5},
     {tuple,
      {561,5},
      [{atom,{561,5},b_blk},
       {var,{561,5},'_'},
       {cons,{561,15},{var,{561,16},'InitWr'},{nil,{561,22}}},
       {var,{561,5},'_'}]},
     {var,{561,27},'Blk0'}},
    {debug_line,562,260},
    {match,
     {562,5},
     {var,{562,5},'Is'},
     {cons,
      {562,10},
      {block,
       {562,11},
       [{match,
         {562,24},
         {var,{562,24},rec1},
         {cons,{562,29},{var,{562,30},'PhiDst'},{nil,{562,36}}}},
        {match,{562,11},{var,{562,11},rec2},{var,{562,11},'InitWr'}},
        {'case',
         {562,24},
         {var,{562,11},rec2},
         [{clause,
           {562,24},
           [{tuple,
             {562,24},
             [{atom,{562,24},b_set},
              {var,{562,24},'_'},
              {var,{562,24},'_'},
              {var,{562,24},'_'},
              {var,{562,24},'_'}]}],
           [],
           [{call,
             {562,24},
             {remote,
              {562,24},
              {atom,{562,24},erlang},
              {atom,{562,24},setelement}},
             [{integer,{562,24},5},{var,{562,11},rec2},{var,{562,24},rec1}]}]},
          {clause,
           [{generated,true},{location,{562,24}}],
           [{var,[{generated,true},{location,{562,24}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{562,24}}],
             {remote,
              [{generated,true},{location,{562,24}}],
              {atom,[{generated,true},{location,{562,24}}],erlang},
              {atom,[{generated,true},{location,{562,24}}],error}},
             [{tuple,
               [{generated,true},{location,{562,24}}],
               [{atom,[{generated,true},{location,{562,24}}],badrecord},
                {var,{562,11},rec2}]}]}]}]}]},
      {nil,{562,38}}}},
    {debug_line,563,261},
    {match,
     {563,5},
     {var,{563,5},'Blk'},
     {block,
      {563,11},
      [{match,{563,11},{var,{563,11},rec3},{var,{563,11},'Blk0'}},
       {'case',
        {563,22},
        {var,{563,11},rec3},
        [{clause,
          {563,22},
          [{tuple,
            {563,22},
            [{atom,{563,22},b_blk},
             {var,{563,22},'_'},
             {var,{563,22},'_'},
             {var,{563,22},'_'}]}],
          [],
          [{call,
            {563,22},
            {remote,
             {563,22},
             {atom,{563,22},erlang},
             {atom,{563,22},setelement}},
            [{integer,{563,22},3},{var,{563,11},rec3},{var,{563,25},'Is'}]}]},
         {clause,
          [{generated,true},{location,{563,22}}],
          [{var,[{generated,true},{location,{563,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{563,22}}],
            {remote,
             [{generated,true},{location,{563,22}}],
             {atom,[{generated,true},{location,{563,22}}],erlang},
             {atom,[{generated,true},{location,{563,22}}],error}},
            [{tuple,
              [{generated,true},{location,{563,22}}],
              [{atom,[{generated,true},{location,{563,22}}],badrecord},
               {var,{563,11},rec3}]}]}]}]}]}},
    {debug_line,565,262},
    {match,
     {565,5},
     {var,{565,5},'Acc'},
     {cons,
      {565,11},
      {tuple,{565,12},[{var,{565,13},'InitWrL'},{var,{565,21},'Blk'}]},
      {cons,
       {566,12},
       {tuple,{566,12},[{var,{566,13},'PhiL'},{var,{566,18},'PhiBlk'}]},
       {cons,
        {567,12},
        {tuple,{567,12},[{var,{567,13},'NextBlk'},{var,{567,21},'BrPhiBlk'}]},
        {cons,
         {568,12},
         {tuple,{568,12},[{var,{568,13},'Fail'},{var,{568,18},'BrPhiBlk'}]},
         {var,{568,28},'Acc1'}}}}}},
    {debug_line,569,263},
    {tuple,{569,5},[{var,{569,6},'Acc'},{var,{569,10},'Count'}]}]}]}.
{function,
    {571,1},
    cg_size_calc_1,5,
    [{clause,
         {571,1},
         [{var,{571,1},'_'},
          {var,{571,1},'_'},
          {var,{571,1},'_'},
          {var,{571,1},'_'},
          {var,{571,1},'_'}],
         [[{call,
               {571,1},
               {remote,
                   {571,1},
                   {atom,{571,1},fake},
                   {atom,{571,1},is_beam_bif_info}},
               []}]],
         [{debug_line,571,264},{atom,{571,1},ignore}]},
     {clause,
         {571,1},
         [{var,{571,16},'L'},
          {match,
              {571,19},
              {tuple,{571,19},[{atom,{571,19},b_literal},{var,{571,19},'_'}]},
              {var,{571,32},'Alloc'}},
          {var,{571,39},'_Fail'},
          {var,{571,46},'Count'},
          {var,{571,53},'Acc'}],
         [],
         [{debug_line,572,265},
          {tuple,
              {572,5},
              [{var,{572,6},'Acc'},
               {var,{572,10},'Alloc'},
               {var,{572,16},'L'},
               {var,{572,18},'Count'}]}]},
     {clause,
         {573,1},
         [{var,{573,16},'L0'},
          {tuple,{573,20},[{var,{573,21},'Op'},{var,{573,24},'Args0'}]},
          {var,{573,32},'Fail'},
          {var,{573,38},'Count0'},
          {var,{573,46},'Acc0'}],
         [],
         [{debug_line,574,266},
          {match,
              {574,5},
              {tuple,
                  {574,5},
                  [{var,{574,6},'Args'},
                   {var,{574,11},'Acc1'},
                   {var,{574,16},'L'},
                   {var,{574,18},'Count1'}]},
              {call,
                  {574,28},
                  {atom,{574,28},cg_atomic_args},
                  [{var,{574,43},'Args0'},
                   {var,{574,50},'L0'},
                   {var,{574,54},'Fail'},
                   {var,{574,60},'Count0'},
                   {var,{574,68},'Acc0'},
                   {nil,{574,74}}]}},
          {debug_line,575,267},
          {match,
              {575,5},
              {tuple,{575,5},[{var,{575,6},'Dst'},{var,{575,10},'Count3'}]},
              {call,
                  {575,20},
                  {atom,{575,20},new_var},
                  [{var,{575,28},'Count1'}]}},
          {debug_line,576,268},
          {match,
              {576,5},
              {tuple,
                  {576,5},
                  [{var,{576,6},'NextBlkL'},{var,{576,15},'Count4'}]},
              {call,
                  {576,25},
                  {atom,{576,25},new_block},
                  [{var,{576,35},'Count3'}]}},
          {debug_line,577,269},
          {match,
              {577,5},
              {var,{577,5},'I'},
              {tuple,
                  {577,9},
                  [{atom,{577,9},b_set},
                   {map,{577,9},[]},
                   {var,{577,36},'Dst'},
                   {var,{577,19},'Op'},
                   {var,{577,27},'Args'}]}},
          {debug_line,578,270},
          {match,
              {578,5},
              {tuple,{578,5},[{var,{578,6},'SuccBlk'},{var,{578,14},'Count'}]},
              {call,
                  {578,23},
                  {atom,{578,23},cg_succeeded},
                  [{var,{578,36},'I'},
                   {var,{578,39},'NextBlkL'},
                   {var,{578,49},'Fail'},
                   {var,{578,55},'Count4'}]}},
          {debug_line,579,271},
          {match,
              {579,5},
              {var,{579,5},'Acc'},
              {cons,
                  {579,11},
                  {tuple,
                      {579,12},
                      [{var,{579,13},'L'},{var,{579,15},'SuccBlk'}]},
                  {var,{579,24},'Acc1'}}},
          {debug_line,580,272},
          {tuple,
              {580,5},
              [{var,{580,6},'Acc'},
               {var,{580,10},'Dst'},
               {var,{580,14},'NextBlkL'},
               {var,{580,23},'Count'}]}]}]}.
{function,
    {582,1},
    cg_succeeded,4,
    [{clause,
         {582,1},
         [{var,{582,1},'_'},
          {var,{582,1},'_'},
          {var,{582,1},'_'},
          {var,{582,1},'_'}],
         [[{call,
               {582,1},
               {remote,
                   {582,1},
                   {atom,{582,1},fake},
                   {atom,{582,1},is_beam_bif_info}},
               []}]],
         [{debug_line,582,273},{atom,{582,1},ignore}]},
     {clause,
         {582,1},
         [{match,
              {582,14},
              {tuple,
                  {582,14},
                  [{atom,{582,14},b_set},
                   {var,{582,14},'_'},
                   {var,{582,25},'OpDst'},
                   {var,{582,14},'_'},
                   {var,{582,14},'_'}]},
              {var,{582,32},'I'}},
          {var,{582,35},'Succ'},
          {var,{582,41},'Fail'},
          {var,{582,47},'Count0'}],
         [],
         [{debug_line,583,274},
          {match,
              {583,5},
              {tuple,{583,5},[{var,{583,6},'Bool'},{var,{583,11},'Count'}]},
              {call,
                  {583,20},
                  {atom,{583,20},new_var},
                  [{var,{583,28},'Count0'}]}},
          {debug_line,584,275},
          {match,
              {584,5},
              {var,{584,5},'SuccI'},
              {tuple,
                  {584,13},
                  [{atom,{584,13},b_set},
                   {map,{584,13},[]},
                   {var,{584,58},'Bool'},
                   {tuple,
                       {584,23},
                       [{atom,{584,24},succeeded},{atom,{584,34},guard}]},
                   {cons,{584,46},{var,{584,47},'OpDst'},{nil,{584,52}}}]}},
          {debug_line,585,276},
          {match,
              {585,5},
              {var,{585,5},'Blk'},
              {tuple,
                  {585,11},
                  [{atom,{585,11},b_blk},
                   {map,{585,11},[]},
                   {cons,
                       {585,21},
                       {var,{585,22},'I'},
                       {cons,{585,24},{var,{585,24},'SuccI'},{nil,{585,29}}}},
                   {tuple,
                       {585,36},
                       [{atom,{585,36},b_br},
                        {map,{585,36},[]},
                        {var,{585,47},'Bool'},
                        {var,{585,57},'Succ'},
                        {var,{585,67},'Fail'}]}]}},
          {debug_line,586,277},
          {tuple,{586,5},[{var,{586,6},'Blk'},{var,{586,10},'Count'}]}]}]}.
{function,{588,1},
          cg_br,1,
          [{clause,{588,1},
                   [{var,{588,1},'_'}],
                   [[{call,{588,1},
                           {remote,{588,1},
                                   {atom,{588,1},fake},
                                   {atom,{588,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,588,278},{atom,{588,1},ignore}]},
           {clause,{588,1},
                   [{var,{588,7},'Target'}],
                   [],
                   [{debug_line,589,279},
                    {tuple,{589,5},
                           [{atom,{589,5},b_br},
                            {map,{589,5},[]},
                            {tuple,{589,16},
                                   [{atom,{589,16},b_literal},
                                    {atom,{589,31},true}]},
                            {var,{589,42},'Target'},
                            {var,{589,54},'Target'}]}]}]}.
{function,
    {591,1},
    cg_atomic_args,6,
    [{clause,
         {591,1},
         [{var,{591,1},'_'},
          {var,{591,1},'_'},
          {var,{591,1},'_'},
          {var,{591,1},'_'},
          {var,{591,1},'_'},
          {var,{591,1},'_'}],
         [[{call,
               {591,1},
               {remote,
                   {591,1},
                   {atom,{591,1},fake},
                   {atom,{591,1},is_beam_bif_info}},
               []}]],
         [{debug_line,591,280},{atom,{591,1},ignore}]},
     {clause,
         {591,1},
         [{cons,{591,16},{var,{591,17},'A'},{var,{591,19},'As'}},
          {var,{591,24},'L'},
          {var,{591,27},'Fail'},
          {var,{591,33},'Count0'},
          {var,{591,41},'BlkAcc0'},
          {var,{591,50},'Acc'}],
         [],
         [{debug_line,592,281},
          {'case',
              {592,5},
              {var,{592,10},'A'},
              [{clause,
                   {593,9},
                   [{tuple,
                        {593,9},
                        [{atom,{593,9},b_literal},{var,{593,9},'_'}]}],
                   [],
                   [{debug_line,594,282},
                    {call,
                        {594,13},
                        {atom,{594,13},cg_atomic_args},
                        [{var,{594,28},'As'},
                         {var,{594,32},'L'},
                         {var,{594,35},'Fail'},
                         {var,{594,41},'Count0'},
                         {var,{594,49},'BlkAcc0'},
                         {block,0,
                             [{cons,
                                  {594,58},
                                  {var,{594,59},'A'},
                                  {var,{594,61},'Acc'}}]}]}]},
               {clause,
                   {595,9},
                   [{tuple,{595,9},[{atom,{595,9},b_var},{var,{595,9},'_'}]}],
                   [],
                   [{debug_line,596,283},
                    {call,
                        {596,13},
                        {atom,{596,13},cg_atomic_args},
                        [{var,{596,28},'As'},
                         {var,{596,32},'L'},
                         {var,{596,35},'Fail'},
                         {var,{596,41},'Count0'},
                         {var,{596,49},'BlkAcc0'},
                         {block,0,
                             [{cons,
                                  {596,58},
                                  {var,{596,59},'A'},
                                  {var,{596,61},'Acc'}}]}]}]},
               {clause,
                   {597,9},
                   [{atom,{597,9},none}],
                   [],
                   [{debug_line,598,284},
                    {call,
                        {598,13},
                        {remote,
                            {598,13},
                            {atom,{598,13},erlang},
                            {atom,{598,13},throw}},
                        [{atom,{598,19},not_possible}]}]},
               {clause,
                   {599,9},
                   [{var,{599,9},'_'}],
                   [],
                   [{debug_line,600,285},
                    {match,
                        {600,13},
                        {tuple,
                            {600,13},
                            [{var,{600,14},'BlkAcc'},
                             {var,{600,21},'Var'},
                             {var,{600,25},'NextBlk'},
                             {var,{600,33},'Count'}]},
                        {call,
                            {601,17},
                            {atom,{601,17},cg_size_calc_1},
                            [{var,{601,32},'L'},
                             {var,{601,35},'A'},
                             {var,{601,38},'Fail'},
                             {var,{601,44},'Count0'},
                             {var,{601,52},'BlkAcc0'}]}},
                    {debug_line,602,286},
                    {call,
                        {602,13},
                        {atom,{602,13},cg_atomic_args},
                        [{var,{602,28},'As'},
                         {var,{602,32},'NextBlk'},
                         {var,{602,41},'Fail'},
                         {var,{602,47},'Count'},
                         {var,{602,54},'BlkAcc'},
                         {block,0,
                             [{cons,
                                  {602,62},
                                  {var,{602,63},'Var'},
                                  {var,{602,67},'Acc'}}]}]}]}]}]},
     {clause,
         {604,1},
         [{nil,{604,16}},
          {var,{604,20},'NextBlk'},
          {var,{604,29},'_Fail'},
          {var,{604,36},'Count'},
          {var,{604,43},'BlkAcc'},
          {var,{604,51},'Acc'}],
         [],
         [{debug_line,605,287},
          {tuple,
              {605,5},
              [{call,
                   {605,6},
                   {remote,
                       {605,6},
                       {atom,{605,6},lists},
                       {atom,{605,6},reverse}},
                   [{var,{605,14},'Acc'}]},
               {var,{605,19},'BlkAcc'},
               {var,{605,26},'NextBlk'},
               {var,{605,34},'Count'}]}]}]}.
{function,{607,1},
          new_var,1,
          [{clause,{607,1},
                   [{var,{607,1},'_'}],
                   [[{call,{607,1},
                           {remote,{607,1},
                                   {atom,{607,1},fake},
                                   {atom,{607,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,607,288},{atom,{607,1},ignore}]},
           {clause,{607,1},
                   [{var,{607,9},'Count'}],
                   [],
                   [{debug_line,608,289},
                    {tuple,{608,5},
                           [{tuple,{608,6},
                                   [{atom,{608,6},b_var},
                                    {var,{608,18},'Count'}]},
                            {op,{608,30},
                                '+',
                                {var,{608,25},'Count'},
                                {integer,{608,31},1}}]}]}]}.
{function,{610,1},
          new_blocks,2,
          [{clause,{610,1},
                   [{var,{610,1},'_'},{var,{610,1},'_'}],
                   [[{call,{610,1},
                           {remote,{610,1},
                                   {atom,{610,1},fake},
                                   {atom,{610,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,610,290},{atom,{610,1},ignore}]},
           {clause,{610,1},
                   [{var,{610,12},'N'},{var,{610,15},'Count'}],
                   [],
                   [{debug_line,611,291},
                    {call,{611,5},
                          {atom,{611,5},new_blocks},
                          [{var,{611,16},'N'},
                           {var,{611,19},'Count'},
                           {nil,{611,26}}]}]}]}.
{function,
    {613,1},
    new_blocks,3,
    [{clause,
         {613,1},
         [{var,{613,1},'_'},{var,{613,1},'_'},{var,{613,1},'_'}],
         [[{call,
               {613,1},
               {remote,
                   {613,1},
                   {atom,{613,1},fake},
                   {atom,{613,1},is_beam_bif_info}},
               []}]],
         [{debug_line,613,292},{atom,{613,1},ignore}]},
     {clause,
         {613,1},
         [{integer,{613,12},0},{var,{613,15},'Count'},{var,{613,22},'Acc'}],
         [],
         [{debug_line,614,293},
          {tuple,{614,5},[{var,{614,6},'Acc'},{var,{614,10},'Count'}]}]},
     {clause,
         {615,1},
         [{var,{615,12},'N'},{var,{615,15},'Count'},{var,{615,22},'Acc'}],
         [],
         [{debug_line,616,294},
          {call,
              {616,5},
              {atom,{616,5},new_blocks},
              [{block,0,
                   [{op,{616,18},
                        '-',
                        {var,{616,16},'N'},
                        {integer,{616,20},1}}]},
               {block,0,
                   [{op,{616,29},
                        '+',
                        {var,{616,23},'Count'},
                        {integer,{616,31},1}}]},
               {block,0,
                   [{cons,
                        {616,34},
                        {var,{616,35},'Count'},
                        {var,{616,41},'Acc'}}]}]}]}]}.
{function,{618,1},
          new_block,1,
          [{clause,{618,1},
                   [{var,{618,1},'_'}],
                   [[{call,{618,1},
                           {remote,{618,1},
                                   {atom,{618,1},fake},
                                   {atom,{618,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,618,295},{atom,{618,1},ignore}]},
           {clause,{618,1},
                   [{var,{618,11},'Count'}],
                   [],
                   [{debug_line,619,296},
                    {tuple,{619,5},
                           [{var,{619,6},'Count'},
                            {op,{619,17},
                                '+',
                                {var,{619,12},'Count'},
                                {integer,{619,18},1}}]}]}]}.
{eof,{620,1}}.
