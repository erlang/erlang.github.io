{attribute,{1,1},file,{"compile.erl",1}}.
{attribute,{22,2},module,compile}.
{attribute,{161,2},export,[{file,1},{file,2},{noenv_file,2},{format_error,1}]}.
{attribute,{162,2},export,[{forms,1},{forms,2},{noenv_forms,2}]}.
{attribute,{163,2},export,[{output_generated,1},{noenv_output_generated,1}]}.
{attribute,{164,2},export,[{options,0}]}.
{attribute,{165,2},export,[{env_compiler_options,0}]}.
{attribute,{168,2},
           export,
           [{compile,3},{compile_asm,3},{compile_core,3},{compile_abstr,3}]}.
{attribute,{171,2},export,[{run_sub_passes,2}]}.
{attribute,{173,2},export_type,[{option,0}]}.
{attribute,{174,2},export_type,[{forms,0}]}.
{attribute,{175,2},export_type,[{comp_ret,0}]}.
{attribute,{1,1},
           file,
           {"/buildroot/otp/lib/compiler/src/../../stdlib/include/erl_compile.hrl",
            1}}.
{attribute,
    {23,2},
    record,
    {options,
        [{typed_record_field,
             {record_field,{24,4},{atom,{24,4},includes},{nil,{24,13}}},
             {type,
                 {24,19},
                 list,
                 [{remote_type,
                      {24,20},
                      [{atom,{24,20},file},{atom,{24,25},filename},[]]}]}},
         {typed_record_field,
             {record_field,{26,4},{atom,{26,4},outdir},{string,{26,11},"."}},
             {remote_type,
                 {26,19},
                 [{atom,{26,19},file},{atom,{26,24},filename},[]]}},
         {typed_record_field,
             {record_field,
                 {28,4},
                 {atom,{28,4},output_type},
                 {atom,{28,16},undefined}},
             {type,{28,29},atom,[]}},
         {typed_record_field,
             {record_field,{29,4},{atom,{29,4},defines},{nil,{29,12}}},
             {type,
                 {29,19},
                 list,
                 [{type,
                      {29,20},
                      union,
                      [{type,{29,20},atom,[]},
                       {type,
                           {29,29},
                           tuple,
                           [{type,{29,30},atom,[]},{var,{29,37},'_'}]}]}]}},
         {typed_record_field,
             {record_field,{33,4},{atom,{33,4},warning},{integer,{33,12},1}},
             {type,{33,19},non_neg_integer,[]}},
         {typed_record_field,
             {record_field,{36,4},{atom,{36,4},verbose},{atom,{36,12},false}},
             {type,{36,21},boolean,[]}},
         {record_field,{37,4},{atom,{37,4},optimize},{integer,{37,13},999}},
         {typed_record_field,
             {record_field,{38,4},{atom,{38,4},specific},{nil,{38,13}}},
             {type,{38,19},list,[{var,{38,20},'_'}]}},
         {typed_record_field,
             {record_field,{39,4},{atom,{39,4},outfile},{string,{39,12},[]}},
             {remote_type,
                 {39,19},
                 [{atom,{39,19},file},{atom,{39,24},filename},[]]}},
         {typed_record_field,
             {record_field,{41,4},{atom,{41,4},cwd}},
             {remote_type,
                 {41,17},
                 [{atom,{41,17},file},{atom,{41,22},filename},[]]}}]}}.
{attribute,{178,1},file,{"compile.erl",178}}.
{attribute,{1,1},file,{"core_parse.hrl",1}}.
{attribute,
    {32,2},
    record,
    {c_alias,
        [{typed_record_field,
             {record_field,{32,19},{atom,{32,19},anno},{nil,{32,24}}},
             {type,{32,30},list,[]}},
         {typed_record_field,
             {record_field,{32,38},{atom,{32,38},var}},
             {remote_type,
                 {32,45},
                 [{atom,{32,45},cerl},{atom,{32,50},cerl},[]]}},
         {typed_record_field,
             {record_field,{33,5},{atom,{33,5},pat}},
             {remote_type,
                 {33,12},
                 [{atom,{33,12},cerl},{atom,{33,17},cerl},[]]}}]}}.
{attribute,
    {35,2},
    record,
    {c_apply,
        [{typed_record_field,
             {record_field,{35,19},{atom,{35,19},anno},{nil,{35,24}}},
             {type,{35,30},list,[]}},
         {typed_record_field,
             {record_field,{35,38},{atom,{35,38},op}},
             {remote_type,
                 {35,44},
                 [{atom,{35,44},cerl},{atom,{35,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{36,5},{atom,{36,5},args}},
             {type,
                 {36,13},
                 list,
                 [{remote_type,
                      {36,14},
                      [{atom,{36,14},cerl},{atom,{36,19},cerl},[]]}]}}]}}.
{attribute,
    {38,2},
    record,
    {c_binary,
        [{typed_record_field,
             {record_field,{38,20},{atom,{38,20},anno},{nil,{38,25}}},
             {type,{38,31},list,[]}},
         {typed_record_field,
             {record_field,{38,39},{atom,{38,39},segments}},
             {type,
                 {38,51},
                 list,
                 [{remote_type,
                      {38,52},
                      [{atom,{38,52},cerl},{atom,{38,57},c_bitstr},[]]}]}}]}}.
{attribute,
    {40,2},
    record,
    {c_bitstr,
        [{typed_record_field,
             {record_field,{40,20},{atom,{40,20},anno},{nil,{40,25}}},
             {type,{40,31},list,[]}},
         {typed_record_field,
             {record_field,{40,39},{atom,{40,39},val}},
             {remote_type,
                 {40,46},
                 [{atom,{40,46},cerl},{atom,{40,51},cerl},[]]}},
         {typed_record_field,
             {record_field,{41,6},{atom,{41,6},size}},
             {remote_type,
                 {41,14},
                 [{atom,{41,14},cerl},{atom,{41,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{42,6},{atom,{42,6},unit}},
             {remote_type,
                 {42,14},
                 [{atom,{42,14},cerl},{atom,{42,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{43,6},{atom,{43,6},type}},
             {remote_type,
                 {43,14},
                 [{atom,{43,14},cerl},{atom,{43,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{44,6},{atom,{44,6},flags}},
             {remote_type,
                 {44,15},
                 [{atom,{44,15},cerl},{atom,{44,20},cerl},[]]}}]}}.
{attribute,
    {46,2},
    record,
    {c_call,
        [{typed_record_field,
             {record_field,{46,18},{atom,{46,18},anno},{nil,{46,23}}},
             {type,{46,29},list,[]}},
         {typed_record_field,
             {record_field,{46,37},{atom,{46,37},module}},
             {remote_type,
                 {46,47},
                 [{atom,{46,47},cerl},{atom,{46,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{47,4},{atom,{47,4},name}},
             {remote_type,
                 {47,12},
                 [{atom,{47,12},cerl},{atom,{47,17},cerl},[]]}},
         {typed_record_field,
             {record_field,{48,4},{atom,{48,4},args}},
             {type,
                 {48,12},
                 list,
                 [{remote_type,
                      {48,13},
                      [{atom,{48,13},cerl},{atom,{48,18},cerl},[]]}]}}]}}.
{attribute,
    {50,2},
    record,
    {c_case,
        [{typed_record_field,
             {record_field,{50,18},{atom,{50,18},anno},{nil,{50,23}}},
             {type,{50,29},list,[]}},
         {typed_record_field,
             {record_field,{50,37},{atom,{50,37},arg}},
             {remote_type,
                 {50,44},
                 [{atom,{50,44},cerl},{atom,{50,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{51,4},{atom,{51,4},clauses}},
             {type,
                 {51,15},
                 list,
                 [{remote_type,
                      {51,16},
                      [{atom,{51,16},cerl},{atom,{51,21},cerl},[]]}]}}]}}.
{attribute,
    {53,2},
    record,
    {c_catch,
        [{typed_record_field,
             {record_field,{53,19},{atom,{53,19},anno},{nil,{53,24}}},
             {type,{53,30},list,[]}},
         {typed_record_field,
             {record_field,{53,38},{atom,{53,38},body}},
             {remote_type,
                 {53,46},
                 [{atom,{53,46},cerl},{atom,{53,51},cerl},[]]}}]}}.
{attribute,
    {55,2},
    record,
    {c_clause,
        [{typed_record_field,
             {record_field,{55,20},{atom,{55,20},anno},{nil,{55,25}}},
             {type,{55,31},list,[]}},
         {typed_record_field,
             {record_field,{55,39},{atom,{55,39},pats}},
             {type,
                 {55,47},
                 list,
                 [{remote_type,
                      {55,48},
                      [{atom,{55,48},cerl},{atom,{55,53},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{56,6},{atom,{56,6},guard}},
             {remote_type,
                 {56,15},
                 [{atom,{56,15},cerl},{atom,{56,20},cerl},[]]}},
         {typed_record_field,
             {record_field,{57,6},{atom,{57,6},body}},
             {type,
                 {57,14},
                 union,
                 [{remote_type,
                      {57,14},
                      [{atom,{57,14},cerl},{atom,{57,19},cerl},[]]},
                  {type,{57,28},any,[]}]}}]}}.
{attribute,
    {59,2},
    record,
    {c_cons,
        [{typed_record_field,
             {record_field,{59,18},{atom,{59,18},anno},{nil,{59,23}}},
             {type,{59,29},list,[]}},
         {typed_record_field,
             {record_field,{59,37},{atom,{59,37},hd}},
             {remote_type,
                 {59,43},
                 [{atom,{59,43},cerl},{atom,{59,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{60,4},{atom,{60,4},tl}},
             {remote_type,
                 {60,10},
                 [{atom,{60,10},cerl},{atom,{60,15},cerl},[]]}}]}}.
{attribute,
    {62,2},
    record,
    {c_fun,
        [{typed_record_field,
             {record_field,{62,17},{atom,{62,17},anno},{nil,{62,22}}},
             {type,{62,28},list,[]}},
         {typed_record_field,
             {record_field,{62,36},{atom,{62,36},vars}},
             {type,
                 {62,44},
                 list,
                 [{remote_type,
                      {62,45},
                      [{atom,{62,45},cerl},{atom,{62,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{63,3},{atom,{63,3},body}},
             {remote_type,
                 {63,11},
                 [{atom,{63,11},cerl},{atom,{63,16},cerl},[]]}}]}}.
{attribute,
    {65,2},
    record,
    {c_let,
        [{typed_record_field,
             {record_field,{65,17},{atom,{65,17},anno},{nil,{65,22}}},
             {type,{65,28},list,[]}},
         {typed_record_field,
             {record_field,{65,36},{atom,{65,36},vars}},
             {type,
                 {65,44},
                 list,
                 [{remote_type,
                      {65,45},
                      [{atom,{65,45},cerl},{atom,{65,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{66,3},{atom,{66,3},arg}},
             {remote_type,
                 {66,10},
                 [{atom,{66,10},cerl},{atom,{66,15},cerl},[]]}},
         {typed_record_field,
             {record_field,{67,3},{atom,{67,3},body}},
             {remote_type,
                 {67,11},
                 [{atom,{67,11},cerl},{atom,{67,16},cerl},[]]}}]}}.
{attribute,
    {69,2},
    record,
    {c_letrec,
        [{typed_record_field,
             {record_field,{69,20},{atom,{69,20},anno},{nil,{69,25}}},
             {type,{69,31},list,[]}},
         {typed_record_field,
             {record_field,{70,20},{atom,{70,20},defs}},
             {type,
                 {70,28},
                 list,
                 [{type,
                      {70,29},
                      tuple,
                      [{remote_type,
                           {70,30},
                           [{atom,{70,30},cerl},{atom,{70,35},cerl},[]]},
                       {remote_type,
                           {70,43},
                           [{atom,{70,43},cerl},{atom,{70,48},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{71,6},{atom,{71,6},body}},
             {remote_type,
                 {71,14},
                 [{atom,{71,14},cerl},{atom,{71,19},cerl},[]]}}]}}.
{attribute,
    {73,2},
    record,
    {c_literal,
        [{typed_record_field,
             {record_field,{73,21},{atom,{73,21},anno},{nil,{73,26}}},
             {type,{73,32},list,[]}},
         {typed_record_field,
             {record_field,{73,40},{atom,{73,40},val}},
             {type,{73,47},any,[]}}]}}.
{attribute,
    {75,2},
    record,
    {c_map,
        [{typed_record_field,
             {record_field,{75,17},{atom,{75,17},anno},{nil,{75,22}}},
             {type,{75,28},list,[]}},
         {typed_record_field,
             {record_field,
                 {76,3},
                 {atom,{76,3},arg},
                 {record,
                     {76,7},
                     c_literal,
                     [{record_field,
                          {76,18},
                          {atom,{76,18},val},
                          {map,{76,22},[]}}]}},
             {type,
                 {76,30},
                 union,
                 [{remote_type,
                      {76,30},
                      [{atom,{76,30},cerl},{atom,{76,35},c_var},[]]},
                  {remote_type,
                      {76,45},
                      [{atom,{76,45},cerl},{atom,{76,50},c_literal},[]]}]}},
         {typed_record_field,
             {record_field,{77,3},{atom,{77,3},es}},
             {type,
                 {77,9},
                 list,
                 [{remote_type,
                      {77,10},
                      [{atom,{77,10},cerl},{atom,{77,15},c_map_pair},[]]}]}},
         {typed_record_field,
             {record_field,{78,3},{atom,{78,3},is_pat},{atom,{78,10},false}},
             {type,{78,19},boolean,[]}}]}}.
{attribute,
    {80,2},
    record,
    {c_map_pair,
        [{typed_record_field,
             {record_field,{80,22},{atom,{80,22},anno},{nil,{80,27}}},
             {type,{80,33},list,[]}},
         {typed_record_field,
             {record_field,{81,15},{atom,{81,15},op}},
             {type,
                 {81,21},
                 union,
                 [{type,
                      {81,21},
                      record,
                      [{atom,{81,22},c_literal},
                       {type,
                           {81,32},
                           field_type,
                           [{atom,{81,32},val},{atom,{81,37},assoc}]}]},
                  {type,
                      {81,48},
                      record,
                      [{atom,{81,49},c_literal},
                       {type,
                           {81,59},
                           field_type,
                           [{atom,{81,59},val},{atom,{81,64},exact}]}]}]}},
         {typed_record_field,
             {record_field,{82,8},{atom,{82,8},key}},
             {type,{82,15},any,[]}},
         {typed_record_field,
             {record_field,{83,8},{atom,{83,8},val}},
             {type,{83,15},any,[]}}]}}.
{attribute,
    {85,2},
    record,
    {c_module,
        [{typed_record_field,
             {record_field,{85,20},{atom,{85,20},anno},{nil,{85,25}}},
             {type,{85,31},list,[]}},
         {typed_record_field,
             {record_field,{85,39},{atom,{85,39},name}},
             {remote_type,
                 {85,47},
                 [{atom,{85,47},cerl},{atom,{85,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{86,6},{atom,{86,6},exports}},
             {type,
                 {86,17},
                 list,
                 [{remote_type,
                      {86,18},
                      [{atom,{86,18},cerl},{atom,{86,23},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{87,6},{atom,{87,6},attrs}},
             {type,
                 {87,15},
                 list,
                 [{type,
                      {87,16},
                      tuple,
                      [{remote_type,
                           {87,17},
                           [{atom,{87,17},cerl},{atom,{87,22},cerl},[]]},
                       {remote_type,
                           {87,30},
                           [{atom,{87,30},cerl},{atom,{87,35},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{88,6},{atom,{88,6},defs}},
             {type,
                 {88,14},
                 list,
                 [{type,
                      {88,15},
                      tuple,
                      [{remote_type,
                           {88,16},
                           [{atom,{88,16},cerl},{atom,{88,21},cerl},[]]},
                       {remote_type,
                           {88,29},
                           [{atom,{88,29},cerl},
                            {atom,{88,34},cerl},
                            []]}]}]}}]}}.
{attribute,
    {90,2},
    record,
    {c_opaque,
        [{typed_record_field,
             {record_field,{90,20},{atom,{90,20},anno},{nil,{90,25}}},
             {type,{90,31},list,[]}},
         {typed_record_field,
             {record_field,{90,39},{atom,{90,39},val}},
             {type,{90,46},any,[]}}]}}.
{attribute,
    {92,2},
    record,
    {c_primop,
        [{typed_record_field,
             {record_field,{92,20},{atom,{92,20},anno},{nil,{92,25}}},
             {type,{92,31},list,[]}},
         {typed_record_field,
             {record_field,{92,39},{atom,{92,39},name}},
             {remote_type,
                 {92,47},
                 [{atom,{92,47},cerl},{atom,{92,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{93,6},{atom,{93,6},args}},
             {type,
                 {93,14},
                 list,
                 [{remote_type,
                      {93,15},
                      [{atom,{93,15},cerl},{atom,{93,20},cerl},[]]}]}}]}}.
{attribute,
    {95,2},
    record,
    {c_receive,
        [{typed_record_field,
             {record_field,{95,21},{atom,{95,21},anno},{nil,{95,26}}},
             {type,{95,32},list,[]}},
         {typed_record_field,
             {record_field,{95,40},{atom,{95,40},clauses}},
             {type,
                 {95,51},
                 list,
                 [{remote_type,
                      {95,52},
                      [{atom,{95,52},cerl},{atom,{95,57},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{96,7},{atom,{96,7},timeout}},
             {remote_type,
                 {96,18},
                 [{atom,{96,18},cerl},{atom,{96,23},cerl},[]]}},
         {typed_record_field,
             {record_field,{97,7},{atom,{97,7},action}},
             {remote_type,
                 {97,17},
                 [{atom,{97,17},cerl},{atom,{97,22},cerl},[]]}}]}}.
{attribute,
    {99,2},
    record,
    {c_seq,
        [{typed_record_field,
             {record_field,{99,17},{atom,{99,17},anno},{nil,{99,22}}},
             {type,{99,28},list,[]}},
         {typed_record_field,
             {record_field,{99,36},{atom,{99,36},arg}},
             {type,
                 {99,43},
                 union,
                 [{remote_type,
                      {99,43},
                      [{atom,{99,43},cerl},{atom,{99,48},cerl},[]]},
                  {type,{99,57},any,[]}]}},
         {typed_record_field,
             {record_field,{100,3},{atom,{100,3},body}},
             {remote_type,
                 {100,11},
                 [{atom,{100,11},cerl},{atom,{100,16},cerl},[]]}}]}}.
{attribute,
    {102,2},
    record,
    {c_try,
        [{typed_record_field,
             {record_field,{102,17},{atom,{102,17},anno},{nil,{102,22}}},
             {type,{102,28},list,[]}},
         {typed_record_field,
             {record_field,{102,36},{atom,{102,36},arg}},
             {remote_type,
                 {102,43},
                 [{atom,{102,43},cerl},{atom,{102,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{103,3},{atom,{103,3},vars}},
             {type,
                 {103,11},
                 list,
                 [{remote_type,
                      {103,12},
                      [{atom,{103,12},cerl},{atom,{103,17},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{104,3},{atom,{104,3},body}},
             {remote_type,
                 {104,11},
                 [{atom,{104,11},cerl},{atom,{104,16},cerl},[]]}},
         {typed_record_field,
             {record_field,{105,3},{atom,{105,3},evars}},
             {type,
                 {105,12},
                 list,
                 [{remote_type,
                      {105,13},
                      [{atom,{105,13},cerl},{atom,{105,18},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{106,3},{atom,{106,3},handler}},
             {remote_type,
                 {106,14},
                 [{atom,{106,14},cerl},{atom,{106,19},cerl},[]]}}]}}.
{attribute,
    {108,2},
    record,
    {c_tuple,
        [{typed_record_field,
             {record_field,{108,19},{atom,{108,19},anno},{nil,{108,24}}},
             {type,{108,30},list,[]}},
         {typed_record_field,
             {record_field,{108,38},{atom,{108,38},es}},
             {type,
                 {108,44},
                 list,
                 [{remote_type,
                      {108,45},
                      [{atom,{108,45},cerl},{atom,{108,50},cerl},[]]}]}}]}}.
{attribute,
    {110,2},
    record,
    {c_values,
        [{typed_record_field,
             {record_field,{110,20},{atom,{110,20},anno},{nil,{110,25}}},
             {type,{110,31},list,[]}},
         {typed_record_field,
             {record_field,{110,39},{atom,{110,39},es}},
             {type,
                 {110,45},
                 list,
                 [{remote_type,
                      {110,46},
                      [{atom,{110,46},cerl},{atom,{110,51},cerl},[]]}]}}]}}.
{attribute,
    {112,2},
    record,
    {c_var,
        [{typed_record_field,
             {record_field,{112,17},{atom,{112,17},anno},{nil,{112,22}}},
             {type,{112,28},list,[]}},
         {typed_record_field,
             {record_field,{112,36},{atom,{112,36},name}},
             {remote_type,
                 {112,44},
                 [{atom,{112,44},cerl},{atom,{112,49},var_name},[]]}}]}}.
{attribute,{179,1},file,{"compile.erl",179}}.
{attribute,{180,2},
           import,
           {lists,[{member,2},
                   {reverse,1},
                   {reverse,2},
                   {keyfind,3},
                   {last,1},
                   {map,2},
                   {flatmap,2},
                   {flatten,1},
                   {foreach,2},
                   {foldr,3},
                   {any,2}]}}.
{attribute,
    {188,2},
    type,
    {abstract_code,
        {type,
            {188,26},
            list,
            [{remote_type,
                 {188,27},
                 [{atom,{188,27},erl_parse},
                  {atom,{188,37},abstract_form},
                  []]}]},
        []}}.
{attribute,{194,2},
           type,
           {forms,{type,{194,18},
                        union,
                        [{user_type,{194,18},abstract_code,[]},
                         {remote_type,{194,36},
                                      [{atom,{194,36},cerl},
                                       {atom,{194,41},c_module},
                                       []]}]},
                  []}}.
{attribute,{197,2},
           type,
           {option,{type,{197,19},
                         union,
                         [{type,{197,19},atom,[]},
                          {type,{197,28},
                                tuple,
                                [{type,{197,29},atom,[]},
                                 {type,{197,37},term,[]}]},
                          {type,{197,47},
                                tuple,
                                [{atom,{197,48},d},
                                 {type,{197,53},atom,[]},
                                 {type,{197,61},term,[]}]}]},
                   []}}.
{attribute,
    {199,2},
    type,
    {error_description,
        {remote_type,
            {199,30},
            [{atom,{199,30},erl_lint},{atom,{199,39},error_description},[]]},
        []}}.
{attribute,{200,2},
           type,
           {error_info,{remote_type,{200,23},
                                    [{atom,{200,23},erl_lint},
                                     {atom,{200,32},error_info},
                                     []]},
                       []}}.
{attribute,
    {201,2},
    type,
    {errors,
        {type,
            {201,21},
            list,
            [{type,
                 {201,22},
                 tuple,
                 [{remote_type,
                      {201,23},
                      [{atom,{201,23},file},{atom,{201,28},filename},[]]},
                  {type,
                      {201,40},
                      list,
                      [{user_type,{201,41},error_info,[]}]}]}]},
        []}}.
{attribute,
    {202,2},
    type,
    {warnings,
        {type,
            {202,21},
            list,
            [{type,
                 {202,22},
                 tuple,
                 [{remote_type,
                      {202,23},
                      [{atom,{202,23},file},{atom,{202,28},filename},[]]},
                  {type,
                      {202,40},
                      list,
                      [{user_type,{202,41},error_info,[]}]}]}]},
        []}}.
{attribute,
    {203,2},
    type,
    {mod_ret,
        {type,
            {203,21},
            union,
            [{type,
                 {203,21},
                 tuple,
                 [{atom,{203,22},ok},{type,{203,28},module,[]}]},
             {type,
                 {204,21},
                 tuple,
                 [{atom,{204,22},ok},
                  {type,{204,28},module,[]},
                  {remote_type,
                      {204,38},
                      [{atom,{204,38},cerl},{atom,{204,43},c_module},[]]}]},
             {type,
                 {205,21},
                 tuple,
                 [{atom,{205,22},ok},
                  {type,
                      {206,22},
                      union,
                      [{type,{206,22},module,[]},{type,{206,33},nil,[]}]},
                  {user_type,{207,22},abstract_code,[]}]},
             {type,
                 {208,21},
                 tuple,
                 [{atom,{208,22},ok},
                  {type,{208,28},module,[]},
                  {user_type,{208,38},warnings,[]}]}]},
        []}}.
{attribute,{209,2},
           type,
           {bin_ret,{type,{209,21},
                          union,
                          [{type,{209,21},
                                 tuple,
                                 [{atom,{209,22},ok},
                                  {type,{209,28},module,[]},
                                  {type,{209,38},binary,[]}]},
                           {type,{210,21},
                                 tuple,
                                 [{atom,{210,22},ok},
                                  {type,{210,28},module,[]},
                                  {type,{210,38},binary,[]},
                                  {user_type,{210,48},warnings,[]}]}]},
                    []}}.
{attribute,{211,2},
           type,
           {err_ret,{type,{211,21},
                          union,
                          [{atom,{211,21},error},
                           {type,{211,31},
                                 tuple,
                                 [{atom,{211,32},error},
                                  {user_type,{211,41},errors,[]},
                                  {user_type,{211,51},warnings,[]}]}]},
                    []}}.
{attribute,{212,2},
           type,
           {comp_ret,{type,{212,21},
                           union,
                           [{user_type,{212,21},mod_ret,[]},
                            {user_type,{212,33},bin_ret,[]},
                            {user_type,{212,45},err_ret,[]}]},
                     []}}.
{attribute,
    {232,2},
    spec,
    {{file,1},
     [{type,
          {232,11},
          'fun',
          [{type,
               {232,11},
               product,
               [{type,
                    {232,12},
                    union,
                    [{type,{232,12},module,[]},
                     {remote_type,
                         {232,23},
                         [{atom,{232,23},file},
                          {atom,{232,28},filename},
                          []]}]}]},
           {ann_type,
               {233,11},
               [{var,{233,11},'CompRet'},
                {user_type,{233,22},comp_ret,[]}]}]}]}}.
{function,
    {235,1},
    file,1,
    [{clause,
         {235,1},
         [{var,{235,1},'_'}],
         [[{call,
               {235,1},
               {remote,
                   {235,1},
                   {atom,{235,1},fake},
                   {atom,{235,1},is_beam_bif_info}},
               []}]],
         [{debug_line,235,1},{atom,{235,1},ignore}]},
     {clause,
         {235,1},
         [{var,{235,6},'File'}],
         [],
         [{debug_line,235,2},
          {call,
              {235,15},
              {atom,{235,15},file},
              [{var,{235,20},'File'},
               {block,0,
                   [{cons,
                        {235,27},
                        {atom,{235,27},verbose},
                        {cons,
                            {235,27},
                            {atom,{235,27},report_errors},
                            {cons,
                                {235,27},
                                {atom,{235,27},report_warnings},
                                {nil,{235,27}}}}}]}]}]}]}.
{attribute,
    {859,2},
    spec,
    {{file,2},
     [{type,
          {859,11},
          'fun',
          [{type,
               {859,11},
               product,
               [{ann_type,
                    {859,12},
                    [{var,{859,12},'File'},
                     {type,
                         {859,20},
                         union,
                         [{type,{859,20},module,[]},
                          {remote_type,
                              {859,31},
                              [{atom,{859,31},file},
                               {atom,{859,36},filename},
                               []]}]}]},
                {ann_type,
                    {859,48},
                    [{var,{859,48},'Options'},
                     {type,
                         {859,59},
                         union,
                         [{type,
                              {859,59},
                              list,
                              [{user_type,{859,60},option,[]}]},
                          {user_type,{859,72},option,[]}]}]}]},
           {ann_type,
               {860,11},
               [{var,{860,11},'CompRet'},
                {user_type,{860,22},comp_ret,[]}]}]}]}}.
{function,
    {862,1},
    file,2,
    [{clause,
         {862,1},
         [{var,{862,1},'_'},{var,{862,1},'_'}],
         [[{call,
               {862,1},
               {remote,
                   {862,1},
                   {atom,{862,1},fake},
                   {atom,{862,1},is_beam_bif_info}},
               []}]],
         [{debug_line,862,3},{atom,{862,1},ignore}]},
     {clause,
         {862,1},
         [{var,{862,6},'File'},{var,{862,12},'Opts'}],
         [[{call,
               {862,23},
               {remote,
                   {862,23},
                   {atom,{862,23},erlang},
                   {atom,{862,23},is_list}},
               [{var,{862,31},'Opts'}]}]],
         [{debug_line,863,4},
          {call,
              {863,5},
              {atom,{863,5},do_compile},
              [{block,0,
                   [{tuple,
                        {863,16},
                        [{atom,{863,17},file},{var,{863,22},'File'}]}]},
               {block,0,
                   [{op,{863,48},
                        '++',
                        {call,{863,29},{atom,{863,29},env_default_opts},[]},
                        {var,{863,51},'Opts'}}]}]}]},
     {clause,
         {864,1},
         [{var,{864,6},'File'},{var,{864,12},'Opt'}],
         [],
         [{debug_line,865,5},
          {call,
              {865,5},
              {atom,{865,5},file},
              [{var,{865,10},'File'},
               {block,0,
                   [{cons,
                        {865,16},
                        {var,{865,17},'Opt'},
                        {cons,
                            {865,22},
                            {atom,{865,22},verbose},
                            {cons,
                                {865,22},
                                {atom,{865,22},report_errors},
                                {cons,
                                    {865,22},
                                    {atom,{865,22},report_warnings},
                                    {nil,{865,22}}}}}}]}]}]}]}.
{attribute,{871,2},
           spec,
           {{forms,1},
            [{type,{871,12},
                   'fun',
                   [{type,{871,12},product,[{user_type,{871,13},forms,[]}]},
                    {ann_type,{871,25},
                              [{var,{871,25},'CompRet'},
                               {user_type,{871,36},comp_ret,[]}]}]}]}}.
{function,
    {873,1},
    forms,1,
    [{clause,
         {873,1},
         [{var,{873,1},'_'}],
         [[{call,
               {873,1},
               {remote,
                   {873,1},
                   {atom,{873,1},fake},
                   {atom,{873,1},is_beam_bif_info}},
               []}]],
         [{debug_line,873,6},{atom,{873,1},ignore}]},
     {clause,
         {873,1},
         [{var,{873,7},'Forms'}],
         [],
         [{debug_line,873,7},
          {call,
              {873,17},
              {atom,{873,17},forms},
              [{var,{873,23},'Forms'},
               {block,0,
                   [{cons,
                        {873,31},
                        {atom,{873,31},verbose},
                        {cons,
                            {873,31},
                            {atom,{873,31},report_errors},
                            {cons,
                                {873,31},
                                {atom,{873,31},report_warnings},
                                {nil,{873,31}}}}}]}]}]}]}.
{attribute,
    {884,2},
    spec,
    {{forms,2},
     [{type,
          {884,12},
          'fun',
          [{type,
               {884,12},
               product,
               [{ann_type,
                    {884,13},
                    [{var,{884,13},'Forms'},{user_type,{884,22},forms,[]}]},
                {ann_type,
                    {884,31},
                    [{var,{884,31},'Options'},
                     {type,
                         {884,42},
                         union,
                         [{type,
                              {884,42},
                              list,
                              [{user_type,{884,43},option,[]}]},
                          {user_type,{884,55},option,[]}]}]}]},
           {ann_type,
               {884,68},
               [{var,{884,68},'CompRet'},
                {user_type,{884,79},comp_ret,[]}]}]}]}}.
{function,
    {886,1},
    forms,2,
    [{clause,
         {886,1},
         [{var,{886,1},'_'},{var,{886,1},'_'}],
         [[{call,
               {886,1},
               {remote,
                   {886,1},
                   {atom,{886,1},fake},
                   {atom,{886,1},is_beam_bif_info}},
               []}]],
         [{debug_line,886,8},{atom,{886,1},ignore}]},
     {clause,
         {886,1},
         [{var,{886,7},'Forms'},{var,{886,14},'Opts'}],
         [[{call,
               {886,25},
               {remote,
                   {886,25},
                   {atom,{886,25},erlang},
                   {atom,{886,25},is_list}},
               [{var,{886,33},'Opts'}]}]],
         [{debug_line,887,9},
          {call,
              {887,5},
              {atom,{887,5},do_compile},
              [{block,0,
                   [{tuple,
                        {887,16},
                        [{atom,{887,17},forms},{var,{887,23},'Forms'}]}]},
               {block,0,
                   [{cons,
                        {887,31},
                        {atom,{887,32},binary},
                        {op,{887,43},
                            '++',
                            {var,{887,39},'Opts'},
                            {call,
                                {887,45},
                                {atom,{887,45},env_default_opts},
                                []}}}]}]}]},
     {clause,
         {888,1},
         [{var,{888,7},'Forms'},{var,{888,14},'Opt'}],
         [[{call,
               {888,24},
               {remote,
                   {888,24},
                   {atom,{888,24},erlang},
                   {atom,{888,24},is_atom}},
               [{var,{888,32},'Opt'}]}]],
         [{debug_line,889,10},
          {call,
              {889,5},
              {atom,{889,5},forms},
              [{var,{889,11},'Forms'},
               {block,0,
                   [{cons,
                        {889,18},
                        {var,{889,19},'Opt'},
                        {cons,
                            {889,24},
                            {atom,{889,24},verbose},
                            {cons,
                                {889,24},
                                {atom,{889,24},report_errors},
                                {cons,
                                    {889,24},
                                    {atom,{889,24},report_warnings},
                                    {nil,{889,24}}}}}}]}]}]}]}.
{attribute,
    {902,2},
    spec,
    {{output_generated,1},
     [{type,
          {902,23},
          'fun',
          [{type,
               {902,23},
               product,
               [{ann_type,
                    {902,24},
                    [{var,{902,24},'Options'},
                     {type,{902,35},list,[{user_type,{902,36},option,[]}]}]}]},
           {type,{902,50},boolean,[]}]}]}}.
{function,
    {904,1},
    output_generated,1,
    [{clause,
         {904,1},
         [{var,{904,1},'_'}],
         [[{call,
               {904,1},
               {remote,
                   {904,1},
                   {atom,{904,1},fake},
                   {atom,{904,1},is_beam_bif_info}},
               []}]],
         [{debug_line,904,11},{atom,{904,1},ignore}]},
     {clause,
         {904,1},
         [{var,{904,18},'Opts'}],
         [],
         [{debug_line,905,12},
          {call,
              {905,5},
              {atom,{905,5},noenv_output_generated},
              [{block,0,
                   [{op,{905,32},
                        '++',
                        {var,{905,28},'Opts'},
                        {call,
                            {905,34},
                            {atom,{905,34},env_default_opts},
                            []}}]}]}]}]}.
{attribute,
    {916,2},
    spec,
    {{noenv_file,2},
     [{type,
          {916,17},
          'fun',
          [{type,
               {916,17},
               product,
               [{ann_type,
                    {916,18},
                    [{var,{916,18},'File'},
                     {type,
                         {916,26},
                         union,
                         [{type,{916,26},module,[]},
                          {remote_type,
                              {916,37},
                              [{atom,{916,37},file},
                               {atom,{916,42},filename},
                               []]}]}]},
                {ann_type,
                    {917,18},
                    [{var,{917,18},'Options'},
                     {type,
                         {917,29},
                         union,
                         [{type,
                              {917,29},
                              list,
                              [{user_type,{917,30},option,[]}]},
                          {user_type,{917,42},option,[]}]}]}]},
           {user_type,{917,55},comp_ret,[]}]}]}}.
{function,
    {919,1},
    noenv_file,2,
    [{clause,
         {919,1},
         [{var,{919,1},'_'},{var,{919,1},'_'}],
         [[{call,
               {919,1},
               {remote,
                   {919,1},
                   {atom,{919,1},fake},
                   {atom,{919,1},is_beam_bif_info}},
               []}]],
         [{debug_line,919,13},{atom,{919,1},ignore}]},
     {clause,
         {919,1},
         [{var,{919,12},'File'},{var,{919,18},'Opts'}],
         [[{call,
               {919,29},
               {remote,
                   {919,29},
                   {atom,{919,29},erlang},
                   {atom,{919,29},is_list}},
               [{var,{919,37},'Opts'}]}]],
         [{debug_line,920,14},
          {call,
              {920,5},
              {atom,{920,5},do_compile},
              [{block,0,
                   [{tuple,
                        {920,16},
                        [{atom,{920,17},file},{var,{920,22},'File'}]}]},
               {var,{920,29},'Opts'}]}]},
     {clause,
         {921,1},
         [{var,{921,12},'File'},{var,{921,18},'Opt'}],
         [],
         [{debug_line,922,15},
          {call,
              {922,5},
              {atom,{922,5},noenv_file},
              [{var,{922,16},'File'},
               {block,0,
                   [{cons,
                        {922,22},
                        {var,{922,23},'Opt'},
                        {cons,
                            {922,28},
                            {atom,{922,28},verbose},
                            {cons,
                                {922,28},
                                {atom,{922,28},report_errors},
                                {cons,
                                    {922,28},
                                    {atom,{922,28},report_warnings},
                                    {nil,{922,28}}}}}}]}]}]}]}.
{attribute,
    {928,2},
    spec,
    {{noenv_forms,2},
     [{type,
          {928,18},
          'fun',
          [{type,
               {928,18},
               product,
               [{ann_type,
                    {928,19},
                    [{var,{928,19},'Forms'},{user_type,{928,28},forms,[]}]},
                {ann_type,
                    {928,37},
                    [{var,{928,37},'Options'},
                     {type,
                         {928,48},
                         union,
                         [{type,
                              {928,48},
                              list,
                              [{user_type,{928,49},option,[]}]},
                          {user_type,{928,61},option,[]}]}]}]},
           {user_type,{928,74},comp_ret,[]}]}]}}.
{function,
    {930,1},
    noenv_forms,2,
    [{clause,
         {930,1},
         [{var,{930,1},'_'},{var,{930,1},'_'}],
         [[{call,
               {930,1},
               {remote,
                   {930,1},
                   {atom,{930,1},fake},
                   {atom,{930,1},is_beam_bif_info}},
               []}]],
         [{debug_line,930,16},{atom,{930,1},ignore}]},
     {clause,
         {930,1},
         [{var,{930,13},'Forms'},{var,{930,20},'Opts'}],
         [[{call,
               {930,31},
               {remote,
                   {930,31},
                   {atom,{930,31},erlang},
                   {atom,{930,31},is_list}},
               [{var,{930,39},'Opts'}]}]],
         [{debug_line,931,17},
          {call,
              {931,5},
              {atom,{931,5},do_compile},
              [{block,0,
                   [{tuple,
                        {931,16},
                        [{atom,{931,17},forms},{var,{931,23},'Forms'}]}]},
               {block,0,
                   [{cons,
                        {931,31},
                        {atom,{931,32},binary},
                        {var,{931,39},'Opts'}}]}]}]},
     {clause,
         {932,1},
         [{var,{932,13},'Forms'},{var,{932,20},'Opt'}],
         [[{call,
               {932,30},
               {remote,
                   {932,30},
                   {atom,{932,30},erlang},
                   {atom,{932,30},is_atom}},
               [{var,{932,38},'Opt'}]}]],
         [{debug_line,933,18},
          {call,
              {933,5},
              {atom,{933,5},noenv_forms},
              [{var,{933,17},'Forms'},
               {block,0,
                   [{cons,
                        {933,24},
                        {var,{933,25},'Opt'},
                        {cons,
                            {933,30},
                            {atom,{933,30},verbose},
                            {cons,
                                {933,30},
                                {atom,{933,30},report_errors},
                                {cons,
                                    {933,30},
                                    {atom,{933,30},report_warnings},
                                    {nil,{933,30}}}}}}]}]}]}]}.
{attribute,
    {939,2},
    spec,
    {{noenv_output_generated,1},
     [{type,
          {939,29},
          'fun',
          [{type,
               {939,29},
               product,
               [{ann_type,
                    {939,30},
                    [{var,{939,30},'Options'},
                     {type,{939,41},list,[{user_type,{939,42},option,[]}]}]}]},
           {type,{939,56},boolean,[]}]}]}}.
{function,
    {941,1},
    noenv_output_generated,1,
    [{clause,
         {941,1},
         [{var,{941,1},'_'}],
         [[{call,
               {941,1},
               {remote,
                   {941,1},
                   {atom,{941,1},fake},
                   {atom,{941,1},is_beam_bif_info}},
               []}]],
         [{debug_line,941,19},{atom,{941,1},ignore}]},
     {clause,
         {941,1},
         [{var,{941,24},'Opts'}],
         [],
         [{debug_line,942,20},
          {match,
              {942,5},
              {tuple,{942,5},[{var,{942,6},'_'},{var,{942,8},'Passes'}]},
              {call,
                  {942,18},
                  {atom,{942,18},passes},
                  [{atom,{942,25},file},
                   {block,0,
                       [{call,
                            {942,31},
                            {atom,{942,31},expand_opts},
                            [{var,{942,43},'Opts'}]}]}]}},
          {debug_line,943,21},
          {call,
              {943,5},
              {remote,{943,5},{atom,{943,5},lists},{atom,{943,5},any}},
              [{block,0,
                   [{'fun',
                        {943,9},
                        {clauses,
                            [{clause,
                                 {943,13},
                                 [{tuple,
                                      {943,14},
                                      [{atom,{943,15},save_binary},
                                       {var,{943,27},'_T'},
                                       {var,{943,30},'_F'}]}],
                                 [],
                                 [{atom,{943,38},true}]},
                             {clause,
                                 {944,6},
                                 [{var,{944,7},'_Other'}],
                                 [],
                                 [{debug_line,944,22},
                                  {atom,{944,18},false}]}]}}]},
               {var,{945,7},'Passes'}]}]}]}.
{attribute,{957,2},
           spec,
           {{env_compiler_options,0},
            [{type,{957,27},
                   'fun',
                   [{type,{957,27},product,[]},
                    {type,{957,33},list,[{type,{957,34},term,[]}]}]}]}}.
{function,{959,1},
          env_compiler_options,0,
          [{clause,{959,1},
                   [],
                   [[{call,{959,1},
                           {remote,{959,1},
                                   {atom,{959,1},fake},
                                   {atom,{959,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,959,23},{atom,{959,1},ignore}]},
           {clause,{959,1},
                   [],[],
                   [{debug_line,959,24},
                    {call,{959,27},{atom,{959,27},env_default_opts},[]}]}]}.
{attribute,{967,2},
           spec,
           {{run_sub_passes,2},
            [{type,{967,21},
                   'fun',
                   [{type,{967,21},
                          product,
                          [{type,{967,22},list,[{type,{967,23},term,[]}]},
                           {type,{967,32},term,[]}]},
                    {type,{967,43},term,[]}]}]}}.
{function,
 {969,1},
 run_sub_passes,2,
 [{clause,
   {969,1},
   [{var,{969,1},'_'},{var,{969,1},'_'}],
   [[{call,
      {969,1},
      {remote,{969,1},{atom,{969,1},fake},{atom,{969,1},is_beam_bif_info}},
      []}]],
   [{debug_line,969,25},{atom,{969,1},ignore}]},
  {clause,
   {969,1},
   [{var,{969,16},'Ps'},{var,{969,20},'St'}],
   [],
   [{debug_line,970,26},
    {'case',
     {970,5},
     {call,
      {970,10},
      {remote,{970,10},{atom,{970,10},erlang},{atom,{970,10},get}},
      [{atom,{970,15},compile__sub_pass_times}]},
     [{clause,
       {971,9},
       [{atom,{971,9},undefined}],
       [],
       [{debug_line,972,27},
        {match,
         {972,13},
         {var,{972,13},'Runner'},
         {'fun',
          {972,22},
          {clauses,
           [{clause,
             {972,25},
             [{var,{972,26},'_Name'},{var,{972,33},'Run'},{var,{972,38},'S'}],
             [],
             [{call,{972,44},{var,{972,44},'Run'},[{var,{972,48},'S'}]}]}]}}},
        {debug_line,973,28},
        {call,
         {973,13},
         {atom,{973,13},run_sub_passes_1},
         [{var,{973,30},'Ps'},{var,{973,34},'Runner'},{var,{973,42},'St'}]}]},
      {clause,
       {974,9},
       [{var,{974,9},'Times'}],
       [[{call,
          {974,20},
          {remote,{974,20},{atom,{974,20},erlang},{atom,{974,20},is_list}},
          [{var,{974,28},'Times'}]}]],
       [{debug_line,975,29},
        {match,
         {975,13},
         {var,{975,13},'Runner'},
         {'fun',
          {975,22},
          {clauses,
           [{clause,
             {975,25},
             [{var,{975,26},'Name'},{var,{975,32},'Run'},{var,{975,37},'S0'}],
             [],
             [{debug_line,976,30},
              {match,
               {976,30},
               {var,{976,30},'T1'},
               {call,
                {976,35},
                {remote,
                 {976,41},
                 {atom,{976,35},erlang},
                 {atom,{976,42},monotonic_time}},
                []}},
              {debug_line,977,31},
              {match,
               {977,30},
               {var,{977,30},'S'},
               {call,{977,34},{var,{977,34},'Run'},[{var,{977,38},'S0'}]}},
              {debug_line,978,32},
              {match,
               {978,30},
               {var,{978,30},'T2'},
               {call,
                {978,35},
                {remote,
                 {978,41},
                 {atom,{978,35},erlang},
                 {atom,{978,42},monotonic_time}},
                []}},
              {debug_line,979,33},
              {call,
               {979,30},
               {remote,{979,30},{atom,{979,30},erlang},{atom,{979,30},put}},
               [{atom,{979,35},compile__sub_pass_times},
                {block,0,
                 [{debug_line,980,34},
                  {cons,
                   {980,34},
                   {tuple,
                    {980,35},
                    [{var,{980,36},'Name'},
                     {op,
                      {980,43},
                      '-',
                      {var,{980,41},'T2'},
                      {var,{980,44},'T1'}}]},
                   {call,
                    {980,48},
                    {remote,
                     {980,48},
                     {atom,{980,48},erlang},
                     {atom,{980,48},get}},
                    [{atom,{980,53},compile__sub_pass_times}]}}]}]},
              {debug_line,981,35},
              {var,{981,30},'S'}]}]}}},
        {debug_line,983,36},
        {call,
         {983,13},
         {atom,{983,13},run_sub_passes_1},
         [{var,{983,30},'Ps'},
          {var,{983,34},'Runner'},
          {var,{983,42},'St'}]}]}]}]}]}.
{function,
 {993,1},
 env_default_opts,0,
 [{clause,
   {993,1},
   [],
   [[{call,
      {993,1},
      {remote,{993,1},{atom,{993,1},fake},{atom,{993,1},is_beam_bif_info}},
      []}]],
   [{debug_line,993,37},{atom,{993,1},ignore}]},
  {clause,
   {993,1},
   [],[],
   [{debug_line,994,38},
    {match,
     {994,5},
     {var,{994,5},'Key'},
     {string,{994,11},"ERL_COMPILER_OPTIONS"}},
    {debug_line,995,39},
    {'case',
     {995,5},
     {call,
      {995,10},
      {remote,{995,12},{atom,{995,10},os},{atom,{995,13},getenv}},
      [{var,{995,20},'Key'}]},
     [{clause,
       {996,2},
       [{atom,{996,2},false}],
       [],
       [{debug_line,996,40},{nil,{996,11}}]},
      {clause,
       {997,2},
       [{var,{997,2},'Str'}],
       [[{call,
          {997,11},
          {remote,{997,11},{atom,{997,11},erlang},{atom,{997,11},is_list}},
          [{var,{997,19},'Str'}]}]],
       [{debug_line,998,41},
        {'case',
         {998,6},
         {call,
          {998,11},
          {remote,{998,19},{atom,{998,11},erl_scan},{atom,{998,20},string}},
          [{var,{998,27},'Str'}]},
         [{clause,
           {999,3},
           [{tuple,
             {999,3},
             [{atom,{999,4},ok},{var,{999,7},'Tokens'},{var,{999,14},'_'}]}],
           [],
           [{debug_line,1000,42},
            {match,
             {1000,21},
             {var,{1000,21},'Dot'},
             {tuple,
              {1000,27},
              [{atom,{1000,28},dot},
               {call,
                {1000,33},
                {remote,
                 {1000,41},
                 {atom,{1000,33},erl_anno},
                 {atom,{1000,42},new}},
                [{integer,{1000,46},1}]}]}},
            {debug_line,1001,43},
            {'case',
             {1001,7},
             {call,
              {1001,12},
              {remote,
               {1001,21},
               {atom,{1001,12},erl_parse},
               {atom,{1001,22},parse_term}},
              [{block,0,
                [{op,
                  {1001,40},
                  '++',
                  {var,{1001,33},'Tokens'},
                  {cons,{1001,43},{var,{1001,44},'Dot'},{nil,{1001,47}}}}]}]},
             [{clause,
               {1002,4},
               [{tuple,{1002,4},[{atom,{1002,5},ok},{var,{1002,8},'List'}]}],
               [[{call,
                  {1002,19},
                  {remote,
                   {1002,19},
                   {atom,{1002,19},erlang},
                   {atom,{1002,19},is_list}},
                  [{var,{1002,27},'List'}]}]],
               [{debug_line,1002,44},{var,{1002,36},'List'}]},
              {clause,
               {1003,4},
               [{tuple,{1003,4},[{atom,{1003,5},ok},{var,{1003,8},'Term'}]}],
               [],
               [{debug_line,1003,45},
                {cons,{1003,17},{var,{1003,18},'Term'},{nil,{1003,22}}}]},
              {clause,
               {1004,4},
               [{tuple,
                 {1004,4},
                 [{atom,{1004,5},error},{var,{1004,11},'_Reason'}]}],
               [],
               [{debug_line,1005,46},
                {call,
                 {1005,8},
                 {remote,{1005,10},{atom,{1005,8},io},{atom,{1005,11},format}},
                 [{block,0,[{string,{1005,18},"Ignoring bad term in ~s\n"}]},
                  {block,0,
                   [{cons,{1005,47},{var,{1005,48},'Key'},{nil,{1005,51}}}]}]},
                {debug_line,1006,47},
                {nil,{1006,8}}]}]}]},
          {clause,
           {1008,3},
           [{tuple,
             {1008,3},
             [{atom,{1008,4},error},
              {tuple,
               {1008,11},
               [{var,{1008,12},'_'},
                {var,{1008,14},'_'},
                {var,{1008,16},'_Reason'}]},
              {var,{1008,26},'_'}]}],
           [],
           [{debug_line,1009,48},
            {call,
             {1009,7},
             {remote,{1009,9},{atom,{1009,7},io},{atom,{1009,10},format}},
             [{block,0,[{string,{1009,17},"Ignoring bad term in ~s\n"}]},
              {block,0,
               [{cons,{1009,46},{var,{1009,47},'Key'},{nil,{1009,50}}}]}]},
            {debug_line,1010,49},
            {nil,{1010,7}}]}]}]}]}]}]}.
{function,
 {1014,1},
 do_compile,2,
 [{clause,
   {1014,1},
   [{var,{1014,1},'_'},{var,{1014,1},'_'}],
   [[{call,
      {1014,1},
      {remote,{1014,1},{atom,{1014,1},fake},{atom,{1014,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1014,50},{atom,{1014,1},ignore}]},
  {clause,
   {1014,1},
   [{var,{1014,12},'Input'},{var,{1014,19},'Opts0'}],
   [],
   [{debug_line,1015,51},
    {match,
     {1015,5},
     {var,{1015,5},'Opts'},
     {call,{1015,12},{atom,{1015,12},expand_opts},[{var,{1015,24},'Opts0'}]}},
    {debug_line,1016,52},
    {match,
     {1016,5},
     {var,{1016,5},'IntFun'},
     {call,
      {1016,14},
      {atom,{1016,14},internal_fun},
      [{var,{1016,27},'Input'},{var,{1016,34},'Opts'}]}},
    {debug_line,1022,53},
    {'case',
     {1022,5},
     {call,
      {1022,10},
      {remote,{1022,15},{atom,{1022,10},lists},{atom,{1022,16},member}},
      [{atom,{1022,23},no_spawn_compiler_process},{var,{1022,50},'Opts'}]},
     [{clause,
       {1023,9},
       [{atom,{1023,9},true}],
       [],
       [{debug_line,1024,54},{call,{1024,13},{var,{1024,13},'IntFun'},[]}]},
      {clause,
       {1025,9},
       [{atom,{1025,9},false}],
       [],
       [{debug_line,1026,55},
        {match,
         {1026,13},
         {tuple,{1026,13},[{var,{1026,14},'Pid'},{var,{1026,18},'Ref'}]},
         {call,
          {1027,17},
          {remote,
           {1027,17},
           {atom,{1027,17},erlang},
           {atom,{1027,17},spawn_monitor}},
          [{block,0,
            [{debug_line,1027,56},
             {'fun',
              {1027,31},
              {clauses,
               [{clause,
                 {1027,34},
                 [],[],
                 [{debug_line,1028,57},
                  {call,
                   {1028,39},
                   {remote,
                    {1028,39},
                    {atom,{1028,39},erlang},
                    {atom,{1028,39},exit}},
                   [{block,0,
                     [{call,
                       {1028,44},
                       {var,{1028,44},'IntFun'},
                       []}]}]}]}]}}]}]}},
        {debug_line,1030,58},
        {'receive',
         {1030,13},
         [{clause,
           {1031,17},
           [{tuple,
             {1031,17},
             [{atom,{1031,18},'DOWN'},
              {var,{1031,25},'Ref'},
              {atom,{1031,29},process},
              {var,{1031,37},'Pid'},
              {var,{1031,41},'Rep'}]}],
           [],
           [{debug_line,1031,59},{var,{1031,49},'Rep'}]}]}]}]}]}]}.
{function,
    {1035,1},
    internal_fun,2,
    [{clause,
         {1035,1},
         [{var,{1035,1},'_'},{var,{1035,1},'_'}],
         [[{call,
               {1035,1},
               {remote,
                   {1035,1},
                   {atom,{1035,1},fake},
                   {atom,{1035,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1035,60},{atom,{1035,1},ignore}]},
     {clause,
         {1035,1},
         [{var,{1035,14},'Input'},{var,{1035,21},'Opts'}],
         [],
         [{debug_line,1036,61},
          {'fun',
              {1036,5},
              {clauses,
                  [{clause,
                       {1036,8},
                       [],[],
                       [{debug_line,1037,62},
                        {'try',
                            {1037,13},
                            [{debug_line,1038,63},
                             {call,
                                 {1038,17},
                                 {atom,{1038,17},internal},
                                 [{var,{1038,26},'Input'},
                                  {var,{1038,33},'Opts'}]}],
                            [],
                            [{clause,
                                 {1040,17},
                                 [{tuple,
                                      {1040,17},
                                      [{var,{1040,17},'Class'},
                                       {var,{1040,23},'Reason'},
                                       {var,{1040,30},'Stk'}]}],
                                 [],
                                 [{debug_line,1041,64},
                                  {call,
                                      {1041,21},
                                      {atom,{1041,21},internal_error},
                                      [{var,{1041,36},'Class'},
                                       {var,{1041,43},'Reason'},
                                       {var,{1041,51},'Stk'}]}]}],
                            []}]}]}}]}]}.
{function,
    {1045,1},
    internal_error,3,
    [{clause,
         {1045,1},
         [{var,{1045,1},'_'},{var,{1045,1},'_'},{var,{1045,1},'_'}],
         [[{call,
               {1045,1},
               {remote,
                   {1045,1},
                   {atom,{1045,1},fake},
                   {atom,{1045,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1045,65},{atom,{1045,1},ignore}]},
     {clause,
         {1045,1},
         [{var,{1045,16},'Class'},
          {var,{1045,23},'Reason'},
          {var,{1045,31},'Stk'}],
         [],
         [{debug_line,1046,66},
          {match,
              {1046,5},
              {var,{1046,5},'Error'},
              {cons,
                  {1046,13},
                  {string,{1046,14},"\n*** Internal compiler error ***\n"},
                  {cons,
                      {1047,14},
                      {call,
                          {1047,14},
                          {atom,{1047,14},format_error_reason},
                          [{var,{1047,34},'Class'},
                           {var,{1047,41},'Reason'},
                           {var,{1047,49},'Stk'}]},
                      {cons,
                          {1048,14},
                          {string,{1048,14},"\n"},
                          {nil,{1048,18}}}}}},
          {debug_line,1049,67},
          {call,
              {1049,5},
              {remote,{1049,7},{atom,{1049,5},io},{atom,{1049,8},put_chars}},
              [{var,{1049,18},'Error'}]},
          {debug_line,1050,68},
          {atom,{1050,5},error}]}]}.
{function,
    {1052,1},
    expand_opts,1,
    [{clause,
         {1052,1},
         [{var,{1052,1},'_'}],
         [[{call,
               {1052,1},
               {remote,
                   {1052,1},
                   {atom,{1052,1},fake},
                   {atom,{1052,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1052,69},{atom,{1052,1},ignore}]},
     {clause,
         {1052,1},
         [{var,{1052,13},'Opts0'}],
         [],
         [{debug_line,1054,70},
          {match,
              {1054,5},
              {var,{1054,5},'Opts'},
              {'case',
                  {1054,12},
                  {tuple,
                      {1054,17},
                      [{call,
                           {1054,18},
                           {remote,
                               {1054,27},
                               {atom,{1054,18},proplists},
                               {atom,{1054,28},get_value}},
                           [{atom,{1054,38},debug_info_key},
                            {var,{1054,54},'Opts0'}]},
                       {call,
                           {1055,4},
                           {remote,
                               {1055,13},
                               {atom,{1055,4},proplists},
                               {atom,{1055,14},get_value}},
                           [{atom,{1055,24},encrypt_debug_info},
                            {var,{1055,44},'Opts0'}]},
                       {call,
                           {1056,4},
                           {remote,
                               {1056,13},
                               {atom,{1056,4},proplists},
                               {atom,{1056,14},get_value}},
                           [{atom,{1056,24},debug_info},
                            {var,{1056,36},'Opts0'}]}]},
                  [{clause,
                       {1057,9},
                       [{tuple,
                            {1057,9},
                            [{atom,{1057,10},undefined},
                             {atom,{1057,20},undefined},
                             {var,{1057,30},'_'}]}],
                       [],
                       [{debug_line,1057,71},{var,{1057,36},'Opts0'}]},
                   {clause,
                       {1058,9},
                       [{tuple,
                            {1058,9},
                            [{var,{1058,10},'_'},
                             {var,{1058,12},'_'},
                             {atom,{1058,14},undefined}]}],
                       [],
                       [{debug_line,1058,72},
                        {cons,
                            {1058,28},
                            {atom,{1058,29},debug_info},
                            {var,{1058,40},'Opts0'}}]},
                   {clause,
                       {1059,9},
                       [{tuple,
                            {1059,9},
                            [{var,{1059,10},'_'},
                             {var,{1059,12},'_'},
                             {var,{1059,14},'_'}]}],
                       [],
                       [{debug_line,1059,73},{var,{1059,20},'Opts0'}]}]}},
          {debug_line,1062,74},
          {match,
              {1062,5},
              {var,{1062,5},'Opts1'},
              {'case',
                  {1062,13},
                  {call,
                      {1062,18},
                      {remote,
                          {1062,27},
                          {atom,{1062,18},proplists},
                          {atom,{1062,28},is_defined}},
                      [{atom,{1062,39},makedep_side_effect},
                       {var,{1062,59},'Opts'}]},
                  [{clause,
                       {1063,17},
                       [{atom,{1063,17},true}],
                       [],
                       [{debug_line,1063,75},
                        {call,
                            {1063,25},
                            {remote,
                                {1063,34},
                                {atom,{1063,25},proplists},
                                {atom,{1063,35},delete}},
                            [{atom,{1063,42},makedep},
                             {var,{1063,50},'Opts'}]}]},
                   {clause,
                       {1064,17},
                       [{atom,{1064,17},false}],
                       [],
                       [{debug_line,1064,76},{var,{1064,26},'Opts'}]}]}},
          {debug_line,1066,77},
          {call,
              {1066,5},
              {remote,{1066,5},{atom,{1066,5},lists},{atom,{1066,5},foldr}},
              [{block,0,[{'fun',{1066,11},{function,expand_opt,2}}]},
               {nil,{1066,29}},
               {var,{1066,33},'Opts1'}]}]}]}.
{function,
 {1068,1},
 expand_opt,2,
 [{clause,
   {1068,1},
   [{var,{1068,1},'_'},{var,{1068,1},'_'}],
   [[{call,
      {1068,1},
      {remote,{1068,1},{atom,{1068,1},fake},{atom,{1068,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1068,78},{atom,{1068,1},ignore}]},
  {clause,
   {1068,1},
   [{atom,{1068,12},basic_validation},{var,{1068,30},'Os'}],
   [],
   [{debug_line,1069,79},
    {cons,
     {1069,5},
     {atom,{1069,6},no_code_generation},
     {cons,
      {1069,25},
      {atom,{1069,25},to_pp},
      {cons,{1069,31},{atom,{1069,31},binary},{var,{1069,38},'Os'}}}}]},
  {clause,
   {1070,1},
   [{atom,{1070,12},strong_validation},{var,{1070,31},'Os'}],
   [],
   [{debug_line,1071,80},
    {cons,
     {1071,5},
     {atom,{1071,6},no_code_generation},
     {cons,
      {1071,25},
      {atom,{1071,25},to_kernel},
      {cons,{1071,35},{atom,{1071,35},binary},{var,{1071,42},'Os'}}}}]},
  {clause,
   {1072,1},
   [{atom,{1072,12},report},{var,{1072,20},'Os'}],
   [],
   [{debug_line,1073,81},
    {cons,
     {1073,5},
     {atom,{1073,6},report_errors},
     {cons,{1073,20},{atom,{1073,20},report_warnings},{var,{1073,36},'Os'}}}]},
  {clause,
   {1074,1},
   [{atom,{1074,12},return},{var,{1074,20},'Os'}],
   [],
   [{debug_line,1075,82},
    {cons,
     {1075,5},
     {atom,{1075,6},return_errors},
     {cons,{1075,20},{atom,{1075,20},return_warnings},{var,{1075,36},'Os'}}}]},
  {clause,
   {1076,1},
   [{atom,{1076,12},r25},{var,{1076,17},'Os'}],
   [],
   [{debug_line,1077,83},
    {cons,
     {1077,5},
     {atom,{1077,6},no_ssa_opt_update_tuple},
     {cons,
      {1077,31},
      {atom,{1077,31},no_bs_match},
      {cons,
       {1077,44},
       {atom,{1077,44},no_min_max_bifs},
       {call,
        {1078,6},
        {atom,{1078,6},expand_opt},
        [{atom,{1078,17},r26},{var,{1078,22},'Os'}]}}}}]},
  {clause,
   {1079,1},
   [{atom,{1079,12},r26},{var,{1079,17},'Os'}],
   [],
   [{debug_line,1080,84},
    {cons,
     {1080,5},
     {atom,{1080,6},no_bsm_opt},
     {call,
      {1080,19},
      {atom,{1080,19},expand_opt},
      [{atom,{1080,30},r27},{var,{1080,35},'Os'}]}}]},
  {clause,
   {1081,1},
   [{atom,{1081,12},r27},{var,{1081,17},'Os'}],
   [],
   [{debug_line,1082,85},
    {cons,
     {1082,5},
     {atom,{1082,6},no_long_atoms},
     {cons,
      {1082,21},
      {atom,{1082,21},compressed_literals},
      {var,{1082,43},'Os'}}}]},
  {clause,
   {1083,1},
   [{atom,{1083,12},beam_debug_info},{var,{1083,29},'Os'}],
   [],
   [{debug_line,1084,86},
    {cons,
     {1084,5},
     {atom,{1084,6},beam_debug_info},
     {cons,
      {1084,23},
      {atom,{1084,23},no_copt},
      {cons,
       {1084,32},
       {atom,{1084,32},no_bsm_opt},
       {cons,
        {1084,44},
        {atom,{1084,44},no_bool_opt},
        {cons,
         {1085,6},
         {atom,{1085,6},no_share_opt},
         {cons,
          {1085,20},
          {atom,{1085,20},no_recv_opt},
          {cons,
           {1085,33},
           {atom,{1085,33},no_ssa_opt},
           {cons,
            {1085,45},
            {atom,{1085,45},no_throw_opt},
            {var,{1085,60},'Os'}}}}}}}}}]},
  {clause,
   {1086,1},
   [{match,
     {1086,12},
     {tuple,{1086,12},[{atom,{1086,13},debug_info_key},{var,{1086,28},'_'}]},
     {var,{1086,31},'O'}},
    {var,{1086,34},'Os'}],
   [],
   [{debug_line,1087,87},
    {cons,
     {1087,5},
     {atom,{1087,6},encrypt_debug_info},
     {cons,{1087,25},{var,{1087,25},'O'},{var,{1087,27},'Os'}}}]},
  {clause,
   {1088,1},
   [{match,{1088,12},{atom,{1088,12},no_type_opt},{var,{1088,24},'O'}},
    {var,{1088,27},'Os'}],
   [],
   [{debug_line,1092,88},
    {cons,
     {1092,5},
     {var,{1092,6},'O'},
     {cons,
      {1092,8},
      {atom,{1092,8},no_ssa_opt_type_start},
      {cons,
       {1093,6},
       {atom,{1093,6},no_ssa_opt_type_continue},
       {cons,
        {1094,6},
        {atom,{1094,6},no_ssa_opt_type_finish},
        {var,{1094,31},'Os'}}}}}]},
  {clause,
   {1095,1},
   [{match,{1095,12},{atom,{1095,12},no_module_opt},{var,{1095,26},'O'}},
    {var,{1095,29},'Os'}],
   [],
   [{debug_line,1096,89},
    {cons,
     {1096,5},
     {var,{1096,6},'O'},
     {cons,{1096,8},{atom,{1096,8},no_recv_opt},{var,{1096,22},'Os'}}}]},
  {clause,
   {1097,1},
   [{tuple,{1097,12},[{atom,{1097,13},check_ssa},{var,{1097,23},'Tag'}]},
    {var,{1097,29},'Os'}],
   [],
   [{debug_line,1098,90},
    {cons,
     {1098,5},
     {atom,{1098,6},check_ssa},
     {cons,{1098,17},{var,{1098,17},'Tag'},{var,{1098,23},'Os'}}}]},
  {clause,
   {1099,1},
   [{atom,{1099,12},time},{var,{1099,18},'Os'}],
   [],
   [{debug_line,1100,91},
    {cons,
     {1100,5},
     {tuple,
      {1100,6},
      [{atom,{1100,7},time},{'fun',{1100,12},{function,print_pass_times,2}}]},
     {var,{1100,36},'Os'}}]},
  {clause,
   {1101,1},
   [{var,{1101,12},'O'},{var,{1101,15},'Os'}],
   [],
   [{debug_line,1101,92},
    {cons,{1101,22},{var,{1101,23},'O'},{var,{1101,25},'Os'}}]}]}.
{attribute,
    {1110,2},
    spec,
    {{format_error,1},
     [{type,
          {1110,19},
          'fun',
          [{type,
               {1110,19},
               product,
               [{ann_type,
                    {1110,20},
                    [{var,{1110,20},'ErrorDescription'},
                     {user_type,{1110,40},error_description,[]}]}]},
           {type,{1110,64},string,[]}]}]}}.
{function,
 {1112,1},
 format_error,1,
 [{clause,
   {1112,1},
   [{var,{1112,1},'_'}],
   [[{call,
      {1112,1},
      {remote,{1112,1},{atom,{1112,1},fake},{atom,{1112,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1112,93},{atom,{1112,1},ignore}]},
  {clause,
   {1112,1},
   [{tuple,
     {1112,14},
     [{atom,{1112,15},obsolete_option},{var,{1112,31},'Ver'}]}],
   [],
   [{debug_line,1113,94},
    {call,
     {1113,5},
     {remote,{1113,11},{atom,{1113,5},io_lib},{atom,{1113,12},fwrite}},
     [{block,0,[{string,{1113,19},"the ~p option is no longer supported"}]},
      {block,0,[{cons,{1113,59},{var,{1113,60},'Ver'},{nil,{1113,63}}}]}]}]},
  {clause,
   {1114,1},
   [{atom,{1114,14},no_crypto}],
   [],
   [{debug_line,1115,95},
    {string,{1115,5},"this system is not configured with crypto support."}]},
  {clause,
   {1116,1},
   [{atom,{1116,14},bad_crypto_key}],
   [],
   [{debug_line,1117,96},{string,{1117,5},"invalid crypto key."}]},
  {clause,
   {1118,1},
   [{atom,{1118,14},no_crypto_key}],
   [],
   [{debug_line,1119,97},{string,{1119,5},"no crypto key supplied."}]},
  {clause,
   {1120,1},
   [{tuple,{1120,14},[{atom,{1120,15},open},{var,{1120,20},'E'}]}],
   [],
   [{debug_line,1121,98},
    {call,
     {1121,5},
     {remote,{1121,11},{atom,{1121,5},io_lib},{atom,{1121,12},format}},
     [{block,0,[{string,{1121,19},"open error '~ts'"}]},
      {block,0,
       [{cons,
         {1121,39},
         {call,
          {1121,40},
          {remote,
           {1121,44},
           {atom,{1121,40},file},
           {atom,{1121,45},format_error}},
          [{var,{1121,58},'E'}]},
         {nil,{1121,60}}}]}]}]},
  {clause,
   {1122,1},
   [{tuple,{1122,14},[{atom,{1122,15},epp},{var,{1122,19},'E'}]}],
   [],
   [{debug_line,1123,99},
    {call,
     {1123,5},
     {remote,{1123,8},{atom,{1123,5},epp},{atom,{1123,9},format_error}},
     [{var,{1123,22},'E'}]}]},
  {clause,
   {1124,1},
   [{atom,{1124,14},write_error}],
   [],
   [{debug_line,1125,100},{string,{1125,5},"error writing file"}]},
  {clause,
   {1126,1},
   [{tuple,{1126,14},[{atom,{1126,15},write_error},{var,{1126,28},'Error'}]}],
   [],
   [{debug_line,1127,101},
    {call,
     {1127,5},
     {remote,{1127,11},{atom,{1127,5},io_lib},{atom,{1127,12},format}},
     [{block,0,[{string,{1127,19},"error writing file: ~ts"}]},
      {block,0,
       [{cons,
         {1127,46},
         {call,
          {1127,47},
          {remote,
           {1127,51},
           {atom,{1127,47},file},
           {atom,{1127,52},format_error}},
          [{var,{1127,65},'Error'}]},
         {nil,{1127,71}}}]}]}]},
  {clause,
   {1128,1},
   [{tuple,
     {1128,14},
     [{atom,{1128,15},rename},
      {var,{1128,22},'From'},
      {var,{1128,27},'To'},
      {var,{1128,30},'Error'}]}],
   [],
   [{debug_line,1129,102},
    {call,
     {1129,5},
     {remote,{1129,11},{atom,{1129,5},io_lib},{atom,{1129,12},format}},
     [{block,0,[{string,{1129,19},"failed to rename ~ts to ~ts: ~ts"}]},
      {block,0,
       [{debug_line,1130,103},
        {cons,
         {1130,5},
         {var,{1130,6},'From'},
         {cons,
          {1130,11},
          {var,{1130,11},'To'},
          {cons,
           {1130,14},
           {call,
            {1130,14},
            {remote,
             {1130,18},
             {atom,{1130,14},file},
             {atom,{1130,19},format_error}},
            [{var,{1130,32},'Error'}]},
           {nil,{1130,38}}}}}]}]}]},
  {clause,
   {1131,1},
   [{tuple,
     {1131,14},
     [{atom,{1131,15},parse_transform},
      {var,{1131,31},'M'},
      {tuple,
       {1131,33},
       [{var,{1131,34},'C'},{var,{1131,36},'R'},{var,{1131,38},'Stk'}]}]}],
   [],
   [{debug_line,1132,104},
    {match,
     {1132,5},
     {var,{1132,5},'E'},
     {call,
      {1132,9},
      {atom,{1132,9},format_error_reason},
      [{var,{1132,29},'C'},{var,{1132,32},'R'},{var,{1132,35},'Stk'}]}},
    {debug_line,1133,105},
    {call,
     {1133,5},
     {remote,{1133,11},{atom,{1133,5},io_lib},{atom,{1133,12},format}},
     [{block,0,[{string,{1133,19},"error in parse transform '~ts':\n~ts"}]},
      {block,0,
       [{cons,
         {1133,59},
         {var,{1133,60},'M'},
         {cons,{1133,63},{var,{1133,63},'E'},{nil,{1133,64}}}}]}]}]},
  {clause,
   {1134,1},
   [{tuple,
     {1134,14},
     [{atom,{1134,15},undef_parse_transform},{var,{1134,37},'M'}]}],
   [],
   [{debug_line,1135,106},
    {call,
     {1135,5},
     {remote,{1135,11},{atom,{1135,5},io_lib},{atom,{1135,12},format}},
     [{block,0,[{string,{1135,19},"undefined parse transform '~ts'"}]},
      {block,0,[{cons,{1135,54},{var,{1135,55},'M'},{nil,{1135,56}}}]}]}]},
  {clause,
   {1136,1},
   [{tuple,
     {1136,14},
     [{atom,{1136,15},core_transform},
      {var,{1136,30},'M'},
      {tuple,
       {1136,32},
       [{var,{1136,33},'C'},{var,{1136,35},'R'},{var,{1136,37},'Stk'}]}]}],
   [],
   [{debug_line,1137,107},
    {match,
     {1137,5},
     {var,{1137,5},'E'},
     {call,
      {1137,9},
      {atom,{1137,9},format_error_reason},
      [{var,{1137,29},'C'},{var,{1137,32},'R'},{var,{1137,35},'Stk'}]}},
    {debug_line,1138,108},
    {call,
     {1138,5},
     {remote,{1138,11},{atom,{1138,5},io_lib},{atom,{1138,12},format}},
     [{block,0,[{string,{1138,19},"error in core transform '~s':\n~ts"}]},
      {block,0,
       [{cons,
         {1138,57},
         {var,{1138,58},'M'},
         {cons,{1138,61},{var,{1138,61},'E'},{nil,{1138,62}}}}]}]}]},
  {clause,
   {1139,1},
   [{tuple,
     {1139,14},
     [{atom,{1139,15},crash},
      {var,{1139,21},'Pass'},
      {var,{1139,26},'Reason'},
      {var,{1139,33},'Stk'}]}],
   [],
   [{debug_line,1140,109},
    {call,
     {1140,5},
     {remote,{1140,11},{atom,{1140,5},io_lib},{atom,{1140,12},format}},
     [{block,0,[{string,{1140,19},"internal error in pass ~p:\n~ts"}]},
      {block,0,
       [{cons,
         {1140,54},
         {var,{1140,55},'Pass'},
         {cons,
          {1140,60},
          {call,
           {1140,60},
           {atom,{1140,60},format_error_reason},
           [{block,0,
             [{tuple,
               {1140,80},
               [{var,{1140,81},'Reason'},{var,{1140,89},'Stk'}]}]}]},
          {nil,{1140,94}}}}]}]}]},
  {clause,
   {1141,1},
   [{tuple,
     {1141,14},
     [{atom,{1141,15},bad_return},
      {var,{1141,26},'Pass'},
      {var,{1141,31},'Reason'}]}],
   [],
   [{debug_line,1142,110},
    {call,
     {1142,5},
     {remote,{1142,11},{atom,{1142,5},io_lib},{atom,{1142,12},format}},
     [{block,0,
       [{string,
         {1142,19},
         "internal error in pass ~p: bad return value:\n~tP"}]},
      {block,0,
       [{cons,
         {1142,72},
         {var,{1142,73},'Pass'},
         {cons,
          {1142,78},
          {var,{1142,78},'Reason'},
          {cons,{1142,85},{integer,{1142,85},20},{nil,{1142,87}}}}}]}]}]},
  {clause,
   {1143,1},
   [{tuple,
     {1143,14},
     [{atom,{1143,15},module_name},
      {var,{1143,27},'Mod'},
      {var,{1143,31},'Filename'}]}],
   [],
   [{debug_line,1144,111},
    {call,
     {1144,5},
     {remote,{1144,11},{atom,{1144,5},io_lib},{atom,{1144,12},format}},
     [{block,0,
       [{string,{1144,19},"Module name '~s' does not match file name '~ts'"}]},
      {block,0,
       [{cons,
         {1144,70},
         {var,{1144,71},'Mod'},
         {cons,{1144,75},{var,{1144,75},'Filename'},{nil,{1144,83}}}}]}]}]}]}.
{function,{1146,1},
          format_error_reason,1,
          [{clause,{1146,1},
                   [{var,{1146,1},'_'}],
                   [[{call,{1146,1},
                           {remote,{1146,1},
                                   {atom,{1146,1},fake},
                                   {atom,{1146,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1146,112},{atom,{1146,1},ignore}]},
           {clause,{1146,1},
                   [{tuple,{1146,21},
                           [{var,{1146,22},'Reason'},
                            {var,{1146,30},'Stack'}]}],
                   [[{call,{1146,43},
                           {remote,{1146,43},
                                   {atom,{1146,43},erlang},
                                   {atom,{1146,43},is_list}},
                           [{var,{1146,51},'Stack'}]}]],
                   [{debug_line,1147,113},
                    {call,{1147,5},
                          {atom,{1147,5},format_error_reason},
                          [{atom,{1147,25},error},
                           {var,{1147,32},'Reason'},
                           {var,{1147,40},'Stack'}]}]}]}.
{function,
 {1149,1},
 format_error_reason,3,
 [{clause,
   {1149,1},
   [{var,{1149,1},'_'},{var,{1149,1},'_'},{var,{1149,1},'_'}],
   [[{call,
      {1149,1},
      {remote,{1149,1},{atom,{1149,1},fake},{atom,{1149,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1149,114},{atom,{1149,1},ignore}]},
  {clause,
   {1149,1},
   [{var,{1149,21},'Class'},{var,{1149,28},'Reason'},{var,{1149,36},'Stack'}],
   [],
   [{debug_line,1150,115},
    {match,
     {1150,5},
     {var,{1150,5},'StackFun'},
     {'fun',
      {1150,16},
      {clauses,
       [{clause,
         {1151,2},
         [{atom,{1151,3},escript},{atom,{1151,12},run},{integer,{1151,22},2}],
         [],
         [{debug_line,1151,116},{atom,{1151,28},true}]},
        {clause,
         {1152,2},
         [{atom,{1152,3},escript},
          {atom,{1152,12},start},
          {integer,{1152,22},1}],
         [],
         [{debug_line,1152,117},{atom,{1152,28},true}]},
        {clause,
         {1153,2},
         [{atom,{1153,3},init},
          {atom,{1153,12},start_it},
          {integer,{1153,22},1}],
         [],
         [{debug_line,1153,118},{atom,{1153,28},true}]},
        {clause,
         {1154,2},
         [{atom,{1154,3},init},
          {atom,{1154,12},start_em},
          {integer,{1154,22},1}],
         [],
         [{debug_line,1154,119},{atom,{1154,28},true}]},
        {clause,
         {1155,2},
         [{var,{1155,3},'_Mod'},
          {var,{1155,9},'_Fun'},
          {var,{1155,15},'_Arity'}],
         [],
         [{debug_line,1155,120},{atom,{1155,28},false}]}]}}},
    {debug_line,1157,121},
    {match,
     {1157,5},
     {var,{1157,5},'FormatFun'},
     {'fun',
      {1157,17},
      {clauses,
       [{clause,
         {1157,21},
         [{var,{1157,22},'Term'},{var,{1157,28},'_'}],
         [],
         [{call,
           {1157,34},
           {remote,{1157,40},{atom,{1157,34},io_lib},{atom,{1157,41},format}},
           [{block,0,[{string,{1157,48},"~tp"}]},
            {block,0,
             [{cons,
               {1157,55},
               {var,{1157,56},'Term'},
               {nil,{1157,60}}}]}]}]}]}}},
    {debug_line,1158,122},
    {match,
     {1158,5},
     {var,{1158,5},'Opts'},
     {map,
      {1158,12},
      [{map_field_assoc,
        {1158,29},
        {atom,{1158,14},stack_trim_fun},
        {var,{1158,32},'StackFun'}},
       {map_field_assoc,
        {1159,25},
        {atom,{1159,14},format_fun},
        {var,{1159,28},'FormatFun'}}]}},
    {debug_line,1160,123},
    {call,
     {1160,5},
     {remote,
      {1160,14},
      {atom,{1160,5},erl_error},
      {atom,{1160,15},format_exception}},
     [{var,{1160,32},'Class'},
      {var,{1160,39},'Reason'},
      {var,{1160,47},'Stack'},
      {var,{1160,54},'Opts'}]}]}]}.
{attribute,
    {1163,2},
    record,
    {compile,
        [{typed_record_field,
             {record_field,
                 {1163,19},
                 {atom,{1163,19},filename},
                 {string,{1163,28},[]}},
             {remote_type,
                 {1163,39},
                 [{atom,{1163,39},file},{atom,{1163,44},filename},[]]}},
         {typed_record_field,
             {record_field,
                 {1164,19},
                 {atom,{1164,19},dir},
                 {string,{1164,23},[]}},
             {remote_type,
                 {1164,39},
                 [{atom,{1164,39},file},{atom,{1164,44},filename},[]]}},
         {typed_record_field,
             {record_field,
                 {1165,19},
                 {atom,{1165,19},base},
                 {string,{1165,24},[]}},
             {remote_type,
                 {1165,39},
                 [{atom,{1165,39},file},{atom,{1165,44},filename},[]]}},
         {typed_record_field,
             {record_field,
                 {1166,19},
                 {atom,{1166,19},ifile},
                 {string,{1166,25},[]}},
             {remote_type,
                 {1166,39},
                 [{atom,{1166,39},file},{atom,{1166,44},filename},[]]}},
         {typed_record_field,
             {record_field,
                 {1167,19},
                 {atom,{1167,19},ofile},
                 {string,{1167,25},[]}},
             {remote_type,
                 {1167,39},
                 [{atom,{1167,39},file},{atom,{1167,44},filename},[]]}},
         {typed_record_field,
             {record_field,{1168,19},{atom,{1168,19},module},{nil,{1168,26}}},
             {type,
                 {1168,39},
                 union,
                 [{type,{1168,39},module,[]},{type,{1168,50},nil,[]}]}},
         {typed_record_field,
             {record_field,
                 {1169,19},
                 {atom,{1169,19},abstract_code},
                 {nil,{1169,33}}},
             {user_type,{1169,39},abstract_code,[]}},
         {typed_record_field,
             {record_field,{1170,19},{atom,{1170,19},options},{nil,{1170,27}}},
             {type,{1170,39},list,[{user_type,{1170,40},option,[]}]}},
         {typed_record_field,
             {record_field,
                 {1171,19},
                 {atom,{1171,19},mod_options},
                 {nil,{1171,31}}},
             {type,{1171,39},list,[{user_type,{1171,40},option,[]}]}},
         {typed_record_field,
             {record_field,
                 {1172,19},
                 {atom,{1172,19},encoding},
                 {atom,{1172,28},none}},
             {type,
                 {1172,39},
                 union,
                 [{atom,{1172,39},none},
                  {remote_type,
                      {1172,46},
                      [{atom,{1172,46},epp},
                       {atom,{1172,50},source_encoding},
                       []]}]}},
         {typed_record_field,
             {record_field,{1173,19},{atom,{1173,19},errors},{nil,{1173,26}}},
             {user_type,{1173,39},errors,[]}},
         {typed_record_field,
             {record_field,
                 {1174,19},
                 {atom,{1174,19},warnings},
                 {nil,{1174,28}}},
             {user_type,{1174,39},warnings,[]}},
         {typed_record_field,
             {record_field,
                 {1175,19},
                 {atom,{1175,19},extra_chunks},
                 {nil,{1175,32}}},
             {type,
                 {1175,39},
                 list,
                 [{type,
                      {1175,40},
                      tuple,
                      [{type,{1175,41},binary,[]},
                       {type,{1175,51},binary,[]}]}]}}]}}.
{function,
    {1177,1},
    internal,2,
    [{clause,
         {1177,1},
         [{var,{1177,1},'_'},{var,{1177,1},'_'}],
         [[{call,
               {1177,1},
               {remote,
                   {1177,1},
                   {atom,{1177,1},fake},
                   {atom,{1177,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1177,124},{atom,{1177,1},ignore}]},
     {clause,
         {1177,1},
         [{tuple,{1177,10},[{atom,{1177,11},forms},{var,{1177,17},'Forms'}]},
          {var,{1177,25},'Opts0'}],
         [],
         [{debug_line,1178,125},
          {match,
              {1178,5},
              {tuple,{1178,5},[{var,{1178,6},'_'},{var,{1178,8},'Ps'}]},
              {call,
                  {1178,14},
                  {atom,{1178,14},passes},
                  [{atom,{1178,21},forms},{var,{1178,28},'Opts0'}]}},
          {debug_line,1179,126},
          {match,
              {1179,5},
              {var,{1179,5},'Source'},
              {call,
                  {1179,14},
                  {remote,
                      {1179,23},
                      {atom,{1179,14},proplists},
                      {atom,{1179,24},get_value}},
                  [{atom,{1179,34},source},
                   {var,{1179,42},'Opts0'},
                   {block,0,[{string,{1179,49},[]}]}]}},
          {debug_line,1180,127},
          {match,
              {1180,5},
              {var,{1180,5},'Opts1'},
              {call,
                  {1180,13},
                  {remote,
                      {1180,22},
                      {atom,{1180,13},proplists},
                      {atom,{1180,23},delete}},
                  [{atom,{1180,30},source},{var,{1180,38},'Opts0'}]}},
          {debug_line,1181,128},
          {match,
              {1181,5},
              {var,{1181,5},'Compile'},
              {call,
                  {1181,15},
                  {atom,{1181,15},build_compile},
                  [{var,{1181,29},'Opts1'}]}},
          {debug_line,1182,129},
          {match,
              {1182,5},
              {var,{1182,5},'NewForms'},
              {'case',
                  {1182,16},
                  {call,
                      {1182,21},
                      {atom,{1182,21},with_columns},
                      [{var,{1182,34},'Opts0'}]},
                  [{clause,
                       {1183,20},
                       [{atom,{1183,20},true}],
                       [],
                       [{debug_line,1184,130},{var,{1184,24},'Forms'}]},
                   {clause,
                       {1185,20},
                       [{atom,{1185,20},false}],
                       [],
                       [{debug_line,1186,131},
                        {call,
                            {1186,24},
                            {atom,{1186,24},strip_columns},
                            [{var,{1186,38},'Forms'}]}]}]}},
          {debug_line,1188,132},
          {call,
              {1188,5},
              {atom,{1188,5},internal_comp},
              [{var,{1188,19},'Ps'},
               {var,{1188,23},'NewForms'},
               {var,{1188,33},'Source'},
               {block,0,[{string,{1188,41},[]}]},
               {var,{1188,45},'Compile'}]}]},
     {clause,
         {1189,1},
         [{tuple,{1189,10},[{atom,{1189,11},file},{var,{1189,16},'File'}]},
          {var,{1189,23},'Opts'}],
         [],
         [{debug_line,1190,133},
          {match,
              {1190,5},
              {tuple,{1190,5},[{var,{1190,6},'Ext'},{var,{1190,10},'Ps'}]},
              {call,
                  {1190,16},
                  {atom,{1190,16},passes},
                  [{atom,{1190,23},file},{var,{1190,29},'Opts'}]}},
          {debug_line,1191,134},
          {match,
              {1191,5},
              {var,{1191,5},'Compile'},
              {call,
                  {1191,15},
                  {atom,{1191,15},build_compile},
                  [{var,{1191,29},'Opts'}]}},
          {debug_line,1192,135},
          {call,
              {1192,5},
              {atom,{1192,5},internal_comp},
              [{var,{1192,19},'Ps'},
               {atom,{1192,23},none},
               {var,{1192,29},'File'},
               {var,{1192,35},'Ext'},
               {var,{1192,40},'Compile'}]}]}]}.
{function,
    {1194,1},
    build_compile,1,
    [{clause,
         {1194,1},
         [{var,{1194,1},'_'}],
         [[{call,
               {1194,1},
               {remote,
                   {1194,1},
                   {atom,{1194,1},fake},
                   {atom,{1194,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1194,136},{atom,{1194,1},ignore}]},
     {clause,
         {1194,1},
         [{var,{1194,15},'Opts0'}],
         [],
         [{debug_line,1195,137},
          {match,
              {1195,5},
              {var,{1195,5},'ExtraChunks'},
              {call,
                  {1195,19},
                  {remote,
                      {1195,28},
                      {atom,{1195,19},proplists},
                      {atom,{1195,29},get_value}},
                  [{atom,{1195,39},extra_chunks},
                   {var,{1195,53},'Opts0'},
                   {nil,{1195,60}}]}},
          {debug_line,1196,138},
          {match,
              {1196,5},
              {var,{1196,5},'Opts1'},
              {call,
                  {1196,13},
                  {remote,
                      {1196,22},
                      {atom,{1196,13},proplists},
                      {atom,{1196,23},delete}},
                  [{atom,{1196,30},extra_chunks},{var,{1196,44},'Opts0'}]}},
          {debug_line,1197,139},
          {tuple,
              {1197,5},
              [{atom,{1197,5},compile},
               {string,{1197,5},[]},
               {string,{1197,5},[]},
               {string,{1197,5},[]},
               {string,{1197,5},[]},
               {string,{1197,5},[]},
               {nil,{1197,5}},
               {nil,{1197,5}},
               {var,{1197,22},'Opts1'},
               {var,{1197,40},'Opts1'},
               {atom,{1197,5},none},
               {nil,{1197,5}},
               {nil,{1197,5}},
               {var,{1197,59},'ExtraChunks'}]}]}]}.
{function,
 {1199,1},
 internal_comp,5,
 [{clause,
   {1199,1},
   [{var,{1199,1},'_'},
    {var,{1199,1},'_'},
    {var,{1199,1},'_'},
    {var,{1199,1},'_'},
    {var,{1199,1},'_'}],
   [[{call,
      {1199,1},
      {remote,{1199,1},{atom,{1199,1},fake},{atom,{1199,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1199,140},{atom,{1199,1},ignore}]},
  {clause,
   {1199,1},
   [{var,{1199,15},'Passes'},
    {var,{1199,23},'Code0'},
    {var,{1199,30},'File'},
    {var,{1199,36},'Suffix'},
    {var,{1199,44},'St0'}],
   [],
   [{debug_line,1200,141},
    {match,
     {1200,5},
     {var,{1200,5},'Dir'},
     {call,
      {1200,11},
      {remote,{1200,19},{atom,{1200,11},filename},{atom,{1200,20},dirname}},
      [{var,{1200,28},'File'}]}},
    {debug_line,1201,142},
    {match,
     {1201,5},
     {var,{1201,5},'Base'},
     {call,
      {1201,12},
      {remote,{1201,20},{atom,{1201,12},filename},{atom,{1201,21},basename}},
      [{var,{1201,30},'File'},{var,{1201,36},'Suffix'}]}},
    {debug_line,1202,143},
    {match,
     {1202,5},
     {var,{1202,5},'St1'},
     {block,
      {1202,11},
      [{match,
        {1203,9},
        {var,{1203,9},rec0},
        {call,
         {1203,15},
         {atom,{1203,15},erlfile},
         [{var,{1203,23},'Dir'},
          {var,{1203,28},'Base'},
          {var,{1203,34},'Suffix'}]}},
       {match,
        {1204,9},
        {var,{1204,9},rec1},
        {call,
         {1204,15},
         {atom,{1204,15},objfile},
         [{var,{1204,23},'Base'},{var,{1204,29},'St0'}]}},
       {match,{1202,11},{var,{1202,11},rec2},{var,{1202,11},'St0'}},
       {'case',
        {1202,23},
        {var,{1202,11},rec2},
        [{clause,
          {1202,23},
          [{tuple,
            {1202,23},
            [{atom,{1202,23},compile},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'},
             {var,{1202,23},'_'}]}],
          [],
          [{call,
            {1202,23},
            {remote,
             {1202,23},
             {atom,{1202,23},erlang},
             {atom,{1202,23},setelement}},
            [{integer,{1202,23},2},
             {call,
              {1202,38},
              {remote,
               {1202,38},
               {atom,{1202,38},erlang},
               {atom,{1202,38},setelement}},
              [{integer,{1202,38},3},
               {call,
                {1202,47},
                {remote,
                 {1202,47},
                 {atom,{1202,47},erlang},
                 {atom,{1202,47},setelement}},
                [{integer,{1202,47},4},
                 {call,
                  {1203,9},
                  {remote,
                   {1203,9},
                   {atom,{1203,9},erlang},
                   {atom,{1203,9},setelement}},
                  [{integer,{1203,9},5},
                   {call,
                    {1204,9},
                    {remote,
                     {1204,9},
                     {atom,{1204,9},erlang},
                     {atom,{1204,9},setelement}},
                    [{integer,{1204,9},6},
                     {var,{1202,11},rec2},
                     {var,{1204,9},rec1}]},
                   {var,{1203,9},rec0}]},
                 {var,{1202,52},'Base'}]},
               {var,{1202,42},'Dir'}]},
             {var,{1202,32},'File'}]}]},
         {clause,
          [{generated,true},{location,{1202,23}}],
          [{var,[{generated,true},{location,{1202,23}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1202,23}}],
            {remote,
             [{generated,true},{location,{1202,23}}],
             {atom,[{generated,true},{location,{1202,23}}],erlang},
             {atom,[{generated,true},{location,{1202,23}}],error}},
            [{tuple,
              [{generated,true},{location,{1202,23}}],
              [{atom,[{generated,true},{location,{1202,23}}],badrecord},
               {var,{1202,11},rec2}]}]}]}]}]}},
    {debug_line,1205,144},
    {match,
     {1205,5},
     {var,{1205,5},'Run'},
     {call,{1205,11},{atom,{1205,11},runner},[{var,{1205,18},'St1'}]}},
    {debug_line,1206,145},
    {match,
     {1206,5},
     {var,{1206,5},'Folder'},
     {'case',
      {1206,14},
      {call,
       {1206,19},
       {remote,{1206,19},{atom,{1206,19},lists},{atom,{1206,19},keyfind}},
       [{atom,{1206,27},time},
        {integer,{1206,33},1},
        {block,0,
         [{'case',
           {1206,36},
           {var,{1206,36},'St1'},
           [{clause,
             [{generated,true},{location,{1206,36}}],
             [{tuple,
               [{generated,true},{location,{1206,36}}],
               [{atom,{1206,36},compile},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},rec3},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'},
                {var,{1206,36},'_'}]}],
             [],
             [{var,{1206,36},rec3}]},
            {clause,
             [{generated,true},{location,{1206,36}}],
             [{var,{1206,36},rec3}],
             [],
             [{call,
               [{generated,true},{location,{1206,36}}],
               {remote,
                [{generated,true},{location,{1206,36}}],
                {atom,[{generated,true},{location,{1206,36}}],erlang},
                {atom,[{generated,true},{location,{1206,36}}],error}},
               [{tuple,
                 [{generated,true},{location,{1206,36}}],
                 [{atom,[{generated,true},{location,{1206,36}}],badrecord},
                  {var,{1206,36},rec3}]}]}]}]}]}]},
      [{clause,
        {1207,18},
        [{tuple,{1207,18},[{atom,{1207,19},time},{var,{1207,24},'_'}]}],
        [],
        [{debug_line,1208,146},
         {'fun',{1208,22},{function,fold_comp_times,4}}]},
       {clause,
        {1209,18},
        [{atom,{1209,18},false}],
        [],
        [{debug_line,1210,147},{'fun',{1210,22},{function,fold_comp,4}}]}]}},
    {debug_line,1212,148},
    {'case',
     {1212,5},
     {call,
      {1212,10},
      {var,{1212,10},'Folder'},
      [{var,{1212,17},'Passes'},
       {var,{1212,25},'Run'},
       {var,{1212,30},'Code0'},
       {var,{1212,37},'St1'}]},
     [{clause,
       {1213,9},
       [{tuple,
         {1213,9},
         [{atom,{1213,10},ok},{var,{1213,13},'Code'},{var,{1213,18},'St2'}]}],
       [],
       [{debug_line,1213,149},
        {call,
         {1213,26},
         {atom,{1213,26},comp_ret_ok},
         [{var,{1213,38},'Code'},{var,{1213,44},'St2'}]}]},
      {clause,
       {1214,9},
       [{tuple,{1214,9},[{atom,{1214,10},error},{var,{1214,16},'St2'}]}],
       [],
       [{debug_line,1214,150},
        {call,
         {1214,24},
         {atom,{1214,24},comp_ret_err},
         [{var,{1214,37},'St2'}]}]}]}]}]}.
{function,
 {1217,1},
 fold_comp_times,4,
 [{clause,
   {1217,1},
   [{var,{1217,1},'_'},
    {var,{1217,1},'_'},
    {var,{1217,1},'_'},
    {var,{1217,1},'_'}],
   [[{call,
      {1217,1},
      {remote,{1217,1},{atom,{1217,1},fake},{atom,{1217,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1217,151},{atom,{1217,1},ignore}]},
  {clause,
   {1217,1},
   [{var,{1217,17},'Passes'},
    {var,{1217,25},'Run'},
    {var,{1217,30},'Code'},
    {var,{1217,36},'St'}],
   [],
   [{debug_line,1218,152},
    {call,
     {1218,5},
     {remote,{1218,5},{atom,{1218,5},erlang},{atom,{1218,5},put}},
     [{atom,{1218,10},compile__pass_times},{nil,{1218,22}}]},
    {debug_line,1219,153},
    {match,
     {1219,5},
     {var,{1219,5},'R'},
     {call,
      {1219,9},
      {atom,{1219,9},fold_comp},
      [{var,{1219,19},'Passes'},
       {var,{1219,27},'Run'},
       {var,{1219,32},'Code'},
       {var,{1219,38},'St'}]}},
    {debug_line,1220,154},
    {match,
     {1220,5},
     {var,{1220,5},'Times'},
     {call,
      {1220,13},
      {remote,{1220,13},{atom,{1220,13},lists},{atom,{1220,13},reverse}},
      [{block,0,
        [{call,
          {1220,21},
          {remote,{1220,21},{atom,{1220,21},erlang},{atom,{1220,21},get}},
          [{atom,{1220,26},compile__pass_times}]}]}]}},
    {debug_line,1221,155},
    {call,
     {1221,5},
     {remote,{1221,5},{atom,{1221,5},erlang},{atom,{1221,5},erase}},
     [{atom,{1221,12},compile__pass_times}]},
    {debug_line,1222,156},
    {match,
     {1222,5},
     {tuple,{1222,5},[{atom,{1222,6},time},{var,{1222,11},'Handler'}]},
     {call,
      {1222,22},
      {remote,{1222,22},{atom,{1222,22},lists},{atom,{1222,22},keyfind}},
      [{atom,{1222,30},time},
       {integer,{1222,36},1},
       {block,0,
        [{'case',
          {1222,39},
          {var,{1222,39},'St'},
          [{clause,
            [{generated,true},{location,{1222,39}}],
            [{tuple,
              [{generated,true},{location,{1222,39}}],
              [{atom,{1222,39},compile},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},rec4},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'},
               {var,{1222,39},'_'}]}],
            [],
            [{var,{1222,39},rec4}]},
           {clause,
            [{generated,true},{location,{1222,39}}],
            [{var,{1222,39},rec4}],
            [],
            [{call,
              [{generated,true},{location,{1222,39}}],
              {remote,
               [{generated,true},{location,{1222,39}}],
               {atom,[{generated,true},{location,{1222,39}}],erlang},
               {atom,[{generated,true},{location,{1222,39}}],error}},
              [{tuple,
                [{generated,true},{location,{1222,39}}],
                [{atom,[{generated,true},{location,{1222,39}}],badrecord},
                 {var,{1222,39},rec4}]}]}]}]}]}]}},
    {debug_line,1223,157},
    {call,
     {1223,5},
     {var,{1223,5},'Handler'},
     [{block,0,
       [{'case',
         {1223,13},
         {var,{1223,13},'St'},
         [{clause,
           [{generated,true},{location,{1223,13}}],
           [{tuple,
             [{generated,true},{location,{1223,13}}],
             [{atom,{1223,13},compile},
              {var,{1223,13},rec5},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'},
              {var,{1223,13},'_'}]}],
           [],
           [{var,{1223,13},rec5}]},
          {clause,
           [{generated,true},{location,{1223,13}}],
           [{var,{1223,13},rec5}],
           [],
           [{call,
             [{generated,true},{location,{1223,13}}],
             {remote,
              [{generated,true},{location,{1223,13}}],
              {atom,[{generated,true},{location,{1223,13}}],erlang},
              {atom,[{generated,true},{location,{1223,13}}],error}},
             [{tuple,
               [{generated,true},{location,{1223,13}}],
               [{atom,[{generated,true},{location,{1223,13}}],badrecord},
                {var,{1223,13},rec5}]}]}]}]}]},
      {var,{1223,34},'Times'}]},
    {debug_line,1224,158},
    {var,{1224,5},'R'}]}]}.
{function,
 {1226,1},
 fold_comp,4,
 [{clause,
   {1226,1},
   [{var,{1226,1},'_'},
    {var,{1226,1},'_'},
    {var,{1226,1},'_'},
    {var,{1226,1},'_'}],
   [[{call,
      {1226,1},
      {remote,{1226,1},{atom,{1226,1},fake},{atom,{1226,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1226,159},{atom,{1226,1},ignore}]},
  {clause,
   {1226,1},
   [{cons,
     {1226,11},
     {tuple,{1226,12},[{atom,{1226,13},delay},{var,{1226,19},'Ps0'}]},
     {var,{1226,24},'Passes'}},
    {var,{1226,33},'Run'},
    {var,{1226,38},'Code'},
    {match,
     {1226,44},
     {tuple,
      {1226,44},
      [{atom,{1226,44},compile},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,61},'Opts'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'},
       {var,{1226,44},'_'}]},
     {var,{1226,67},'St'}}],
   [],
   [{debug_line,1227,160},
    {match,
     {1227,5},
     {var,{1227,5},'Ps'},
     {op,
      {1227,35},
      '++',
      {call,
       {1227,10},
       {atom,{1227,10},select_passes},
       [{var,{1227,24},'Ps0'},{var,{1227,29},'Opts'}]},
      {var,{1227,38},'Passes'}}},
    {debug_line,1228,161},
    {call,
     {1228,5},
     {atom,{1228,5},fold_comp},
     [{var,{1228,15},'Ps'},
      {var,{1228,19},'Run'},
      {var,{1228,24},'Code'},
      {var,{1228,30},'St'}]}]},
  {clause,
   {1229,1},
   [{cons,
     {1229,11},
     {tuple,
      {1229,12},
      [{var,{1229,13},'Name'},{var,{1229,18},'Test'},{var,{1229,23},'Pass'}]},
     {var,{1229,29},'Ps'}},
    {var,{1229,34},'Run'},
    {var,{1229,39},'Code'},
    {var,{1229,45},'St'}],
   [],
   [{debug_line,1230,162},
    {'case',
     {1230,5},
     {call,{1230,10},{var,{1230,10},'Test'},[{var,{1230,15},'St'}]},
     [{clause,
       {1231,2},
       [{atom,{1231,2},false}],
       [],
       [{debug_line,1232,163},
        {call,
         {1232,6},
         {atom,{1232,6},fold_comp},
         [{var,{1232,16},'Ps'},
          {var,{1232,20},'Run'},
          {var,{1232,25},'Code'},
          {var,{1232,31},'St'}]}]},
      {clause,
       {1233,2},
       [{atom,{1233,2},true}],
       [],
       [{debug_line,1234,164},
        {call,
         {1234,6},
         {atom,{1234,6},fold_comp},
         [{block,0,
           [{cons,
             {1234,16},
             {tuple,{1234,17},[{var,{1234,18},'Name'},{var,{1234,23},'Pass'}]},
             {var,{1234,29},'Ps'}}]},
          {var,{1234,34},'Run'},
          {var,{1234,39},'Code'},
          {var,{1234,45},'St'}]}]}]}]},
  {clause,
   {1236,1},
   [{cons,
     {1236,11},
     {tuple,{1236,12},[{var,{1236,13},'Name'},{var,{1236,18},'Pass'}]},
     {var,{1236,24},'Ps'}},
    {var,{1236,29},'Run'},
    {var,{1236,34},'Code0'},
    {var,{1236,41},'St0'}],
   [],
   [{debug_line,1237,165},
    {'try',
     {1237,5},
     [{call,
       {1237,9},
       {var,{1237,9},'Run'},
       [{block,0,
         [{tuple,{1237,13},[{var,{1237,14},'Name'},{var,{1237,19},'Pass'}]}]},
        {var,{1237,26},'Code0'},
        {var,{1237,33},'St0'}]}],
     [{clause,
       {1238,2},
       [{tuple,
         {1238,2},
         [{atom,{1238,3},ok},{var,{1238,6},'Code'},{var,{1238,11},'St1'}]}],
       [],
       [{debug_line,1239,166},
        {call,
         {1239,13},
         {atom,{1239,13},fold_comp},
         [{var,{1239,23},'Ps'},
          {var,{1239,27},'Run'},
          {var,{1239,32},'Code'},
          {var,{1239,38},'St1'}]}]},
      {clause,
       {1240,2},
       [{match,
         {1240,2},
         {tuple,{1240,2},[{atom,{1240,3},error},{var,{1240,9},'_St1'}]},
         {var,{1240,15},'Error'}}],
       [],
       [{debug_line,1241,167},{var,{1241,13},'Error'}]}],
     [{clause,
       {1243,9},
       [{tuple,
         {1243,9},
         [{atom,{1243,9},error},
          {var,{1243,15},'Reason'},
          {var,{1243,22},'Stk'}]}],
       [],
       [{debug_line,1244,168},
        {match,
         {1244,6},
         {var,{1244,6},'Es'},
         {cons,
          {1244,11},
          {tuple,
           {1244,12},
           [{'case',
             {1244,13},
             {var,{1244,13},'St0'},
             [{clause,
               [{generated,true},{location,{1244,13}}],
               [{tuple,
                 [{generated,true},{location,{1244,13}}],
                 [{atom,{1244,13},compile},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},rec6},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'},
                  {var,{1244,13},'_'}]}],
               [],
               [{var,{1244,13},rec6}]},
              {clause,
               [{generated,true},{location,{1244,13}}],
               [{var,{1244,13},rec6}],
               [],
               [{call,
                 [{generated,true},{location,{1244,13}}],
                 {remote,
                  [{generated,true},{location,{1244,13}}],
                  {atom,[{generated,true},{location,{1244,13}}],erlang},
                  {atom,[{generated,true},{location,{1244,13}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1244,13}}],
                   [{atom,[{generated,true},{location,{1244,13}}],badrecord},
                    {var,{1244,13},rec6}]}]}]}]},
            {cons,
             {1244,31},
             {tuple,
              {1244,32},
              [{atom,{1244,33},none},
               {atom,{1244,39},compile},
               {tuple,
                {1244,46},
                [{atom,{1244,47},crash},
                 {var,{1244,53},'Name'},
                 {var,{1244,58},'Reason'},
                 {var,{1244,65},'Stk'}]}]},
             {nil,{1244,70}}}]},
          {nil,{1244,72}}}},
        {debug_line,1245,169},
        {tuple,
         {1245,6},
         [{atom,{1245,7},error},
          {block,
           {1245,13},
           [{match,
             {1245,25},
             {var,{1245,25},rec7},
             {op,
              {1245,51},
              '++',
              {'case',
               {1245,32},
               {var,{1245,32},'St0'},
               [{clause,
                 [{generated,true},{location,{1245,32}}],
                 [{tuple,
                   [{generated,true},{location,{1245,32}}],
                   [{atom,{1245,32},compile},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'},
                    {var,{1245,32},rec9},
                    {var,{1245,32},'_'},
                    {var,{1245,32},'_'}]}],
                 [],
                 [{var,{1245,32},rec9}]},
                {clause,
                 [{generated,true},{location,{1245,32}}],
                 [{var,{1245,32},rec9}],
                 [],
                 [{call,
                   [{generated,true},{location,{1245,32}}],
                   {remote,
                    [{generated,true},{location,{1245,32}}],
                    {atom,[{generated,true},{location,{1245,32}}],erlang},
                    {atom,[{generated,true},{location,{1245,32}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1245,32}}],
                     [{atom,[{generated,true},{location,{1245,32}}],badrecord},
                      {var,{1245,32},rec9}]}]}]}]},
              {var,{1245,54},'Es'}}},
            {match,{1245,13},{var,{1245,13},rec8},{var,{1245,13},'St0'}},
            {'case',
             {1245,25},
             {var,{1245,13},rec8},
             [{clause,
               {1245,25},
               [{tuple,
                 {1245,25},
                 [{atom,{1245,25},compile},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'},
                  {var,{1245,25},'_'}]}],
               [],
               [{call,
                 {1245,25},
                 {remote,
                  {1245,25},
                  {atom,{1245,25},erlang},
                  {atom,{1245,25},setelement}},
                 [{integer,{1245,25},12},
                  {var,{1245,13},rec8},
                  {var,{1245,25},rec7}]}]},
              {clause,
               [{generated,true},{location,{1245,25}}],
               [{var,[{generated,true},{location,{1245,25}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{1245,25}}],
                 {remote,
                  [{generated,true},{location,{1245,25}}],
                  {atom,[{generated,true},{location,{1245,25}}],erlang},
                  {atom,[{generated,true},{location,{1245,25}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1245,25}}],
                   [{atom,[{generated,true},{location,{1245,25}}],badrecord},
                    {var,{1245,13},rec8}]}]}]}]}]}]}]}],
     []}]},
  {clause,
   {1247,1},
   [{nil,{1247,11}},
    {var,{1247,15},'_Run'},
    {var,{1247,21},'Code'},
    {var,{1247,27},'St'}],
   [],
   [{debug_line,1247,170},
    {tuple,
     {1247,34},
     [{atom,{1247,35},ok},{var,{1247,38},'Code'},{var,{1247,43},'St'}]}]}]}.
{function,
    {1249,1},
    run_sub_passes_1,3,
    [{clause,
         {1249,1},
         [{var,{1249,1},'_'},{var,{1249,1},'_'},{var,{1249,1},'_'}],
         [[{call,
               {1249,1},
               {remote,
                   {1249,1},
                   {atom,{1249,1},fake},
                   {atom,{1249,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1249,171},{atom,{1249,1},ignore}]},
     {clause,
         {1249,1},
         [{cons,
              {1249,18},
              {tuple,{1249,19},[{var,{1249,20},'Name'},{var,{1249,25},'Run'}]},
              {var,{1249,30},'Ps'}},
          {var,{1249,35},'Runner'},
          {var,{1249,43},'St0'}],
         [[{call,
               {1250,8},
               {remote,
                   {1250,8},
                   {atom,{1250,8},erlang},
                   {atom,{1250,8},is_atom}},
               [{var,{1250,16},'Name'}]},
           {call,
               {1250,23},
               {remote,
                   {1250,23},
                   {atom,{1250,23},erlang},
                   {atom,{1250,23},is_function}},
               [{var,{1250,35},'Run'},{integer,{1250,40},1}]}]],
         [{debug_line,1251,172},
          {'try',
              {1251,5},
              [{call,
                   {1251,9},
                   {var,{1251,9},'Runner'},
                   [{var,{1251,16},'Name'},
                    {var,{1251,22},'Run'},
                    {var,{1251,27},'St0'}]}],
              [{clause,
                   {1252,9},
                   [{var,{1252,9},'St'}],
                   [],
                   [{debug_line,1253,173},
                    {call,
                        {1253,13},
                        {atom,{1253,13},run_sub_passes_1},
                        [{var,{1253,30},'Ps'},
                         {var,{1253,34},'Runner'},
                         {var,{1253,42},'St'}]}]}],
              [{clause,
                   {1255,9},
                   [{tuple,
                        {1255,9},
                        [{var,{1255,9},'C'},
                         {var,{1255,11},'E'},
                         {var,{1255,13},'Stk'}]}],
                   [],
                   [{debug_line,1256,174},
                    {call,
                        {1256,13},
                        {remote,
                            {1256,15},
                            {atom,{1256,13},io},
                            {atom,{1256,16},format}},
                        [{block,0,[{string,{1256,23},"Sub pass ~s\n"}]},
                         {block,0,
                             [{cons,
                                  {1256,40},
                                  {var,{1256,41},'Name'},
                                  {nil,{1256,45}}}]}]},
                    {debug_line,1257,175},
                    {call,
                        {1257,13},
                        {remote,
                            {1257,19},
                            {atom,{1257,13},erlang},
                            {atom,{1257,20},raise}},
                        [{var,{1257,26},'C'},
                         {var,{1257,29},'E'},
                         {var,{1257,32},'Stk'}]}]}],
              []}]},
     {clause,
         {1259,1},
         [{nil,{1259,18}},{var,{1259,22},'_'},{var,{1259,25},'St'}],
         [],
         [{debug_line,1259,176},{var,{1259,32},'St'}]}]}.
{function,
 {1261,1},
 runner,1,
 [{clause,
   {1261,1},
   [{var,{1261,1},'_'}],
   [[{call,
      {1261,1},
      {remote,{1261,1},{atom,{1261,1},fake},{atom,{1261,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1261,177},{atom,{1261,1},ignore}]},
  {clause,
   {1261,1},
   [{tuple,
     {1261,8},
     [{atom,{1261,8},compile},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,25},'Opts'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'},
      {var,{1261,8},'_'}]}],
   [],
   [{debug_line,1262,178},
    {match,
     {1262,5},
     {var,{1262,5},'Run0'},
     {'fun',
      {1262,12},
      {clauses,
       [{clause,
         {1262,15},
         [{tuple,{1262,16},[{var,{1262,17},'_Name'},{var,{1262,23},'Fun'}]},
          {var,{1262,29},'Code'},
          {var,{1262,35},'St'}],
         [],
         [{debug_line,1263,179},
          {call,
           {1263,20},
           {var,{1263,20},'Fun'},
           [{var,{1263,24},'Code'},{var,{1263,30},'St'}]}]}]}}},
    {debug_line,1265,180},
    {match,
     {1265,5},
     {var,{1265,5},'Run1'},
     {'case',
      {1265,12},
      {call,
       {1265,17},
       {remote,{1265,17},{atom,{1265,17},lists},{atom,{1265,17},keyfind}},
       [{atom,{1265,25},time},{integer,{1265,31},1},{var,{1265,34},'Opts'}]},
      [{clause,
        {1266,16},
        [{tuple,{1266,16},[{atom,{1266,17},time},{var,{1266,22},'_'}]}],
        [],
        [{debug_line,1267,181},{'fun',{1267,20},{function,run_tc,3}}]},
       {clause,
        {1268,16},
        [{atom,{1268,16},false}],
        [],
        [{debug_line,1269,182},{var,{1269,20},'Run0'}]}]}},
    {debug_line,1271,183},
    {'case',
     {1271,5},
     {call,
      {1271,10},
      {remote,{1271,10},{atom,{1271,10},lists},{atom,{1271,10},keyfind}},
      [{atom,{1271,18},call_time},
       {integer,{1271,29},1},
       {var,{1271,32},'Opts'}]},
     [{clause,
       {1272,9},
       [{tuple,{1272,9},[{atom,{1272,10},call_time},{var,{1272,20},'Pass'}]}],
       [],
       [{debug_line,1273,184},
        {'fun',
         {1273,13},
         {clauses,
          [{clause,
            {1273,16},
            [{var,{1273,17},'P'},{var,{1273,20},'Code'},{var,{1273,26},'St'}],
            [],
            [{debug_line,1274,185},
             {call,
              {1274,17},
              {atom,{1274,17},run_tprof},
              [{var,{1274,27},'P'},
               {var,{1274,30},'Code'},
               {var,{1274,36},'Pass'},
               {atom,{1274,42},call_time},
               {var,{1274,53},'St'}]}]}]}}]},
      {clause,
       {1276,9},
       [{atom,{1276,9},false}],
       [],
       [{debug_line,1277,186},
        {'case',
         {1277,13},
         {call,
          {1277,18},
          {remote,{1277,18},{atom,{1277,18},lists},{atom,{1277,18},keyfind}},
          [{atom,{1277,26},call_memory},
           {integer,{1277,39},1},
           {var,{1277,42},'Opts'}]},
         [{clause,
           {1278,17},
           [{tuple,
             {1278,17},
             [{atom,{1278,18},call_memory},{var,{1278,30},'Pass'}]}],
           [],
           [{debug_line,1279,187},
            {'fun',
             {1279,21},
             {clauses,
              [{clause,
                {1279,24},
                [{var,{1279,25},'P'},
                 {var,{1279,28},'Code'},
                 {var,{1279,34},'St'}],
                [],
                [{debug_line,1280,188},
                 {call,
                  {1280,25},
                  {atom,{1280,25},run_tprof},
                  [{var,{1280,35},'P'},
                   {var,{1280,38},'Code'},
                   {var,{1280,44},'Pass'},
                   {atom,{1280,50},call_memory},
                   {var,{1280,63},'St'}]}]}]}}]},
          {clause,
           {1282,17},
           [{atom,{1282,17},false}],
           [],
           [{debug_line,1283,189},
            {'case',
             {1283,21},
             {call,
              {1283,26},
              {remote,
               {1283,26},
               {atom,{1283,26},lists},
               {atom,{1283,26},keyfind}},
              [{atom,{1283,34},eprof},
               {integer,{1283,41},1},
               {var,{1283,44},'Opts'}]},
             [{clause,
               {1284,25},
               [{tuple,
                 {1284,25},
                 [{atom,{1284,26},eprof},{var,{1284,32},'EprofPass'}]}],
               [],
               [{debug_line,1285,190},
                {'fun',
                 {1285,29},
                 {clauses,
                  [{clause,
                    {1285,32},
                    [{var,{1285,33},'P'},
                     {var,{1285,36},'Code'},
                     {var,{1285,42},'St'}],
                    [],
                    [{debug_line,1286,191},
                     {call,
                      {1286,33},
                      {atom,{1286,33},run_eprof},
                      [{var,{1286,43},'P'},
                       {var,{1286,46},'Code'},
                       {var,{1286,52},'EprofPass'},
                       {var,{1286,63},'St'}]}]}]}}]},
              {clause,
               {1288,25},
               [{atom,{1288,25},false}],
               [],
               [{debug_line,1289,192},{var,{1289,29},'Run1'}]}]}]}]}]}]}]}]}.
{function,
    {1294,1},
    run_tc,3,
    [{clause,
         {1294,1},
         [{var,{1294,1},'_'},{var,{1294,1},'_'},{var,{1294,1},'_'}],
         [[{call,
               {1294,1},
               {remote,
                   {1294,1},
                   {atom,{1294,1},fake},
                   {atom,{1294,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1294,193},{atom,{1294,1},ignore}]},
     {clause,
         {1294,1},
         [{tuple,{1294,8},[{var,{1294,9},'Name'},{var,{1294,14},'Fun'}]},
          {var,{1294,20},'Code'},
          {var,{1294,26},'St'}],
         [],
         [{debug_line,1295,194},
          {match,
              {1295,5},
              {var,{1295,5},'OldTimes'},
              {call,
                  {1295,16},
                  {remote,
                      {1295,16},
                      {atom,{1295,16},erlang},
                      {atom,{1295,16},put}},
                  [{atom,{1295,21},compile__sub_pass_times},{nil,{1295,37}}]}},
          {debug_line,1296,195},
          {match,
              {1296,5},
              {var,{1296,5},'T1'},
              {call,
                  {1296,10},
                  {remote,
                      {1296,16},
                      {atom,{1296,10},erlang},
                      {atom,{1296,17},monotonic_time}},
                  []}},
          {debug_line,1297,196},
          {match,
              {1297,5},
              {var,{1297,5},'Val'},
              {call,
                  {1297,11},
                  {var,{1297,11},'Fun'},
                  [{var,{1297,15},'Code'},{var,{1297,21},'St'}]}},
          {debug_line,1298,197},
          {match,
              {1298,5},
              {var,{1298,5},'T2'},
              {call,
                  {1298,10},
                  {remote,
                      {1298,16},
                      {atom,{1298,10},erlang},
                      {atom,{1298,17},monotonic_time}},
                  []}},
          {debug_line,1299,198},
          {match,
              {1299,5},
              {var,{1299,5},'SubTimes'},
              {call,
                  {1299,16},
                  {remote,
                      {1299,16},
                      {atom,{1299,16},erlang},
                      {atom,{1299,16},get}},
                  [{atom,{1299,21},compile__sub_pass_times}]}},
          {debug_line,1300,199},
          {'case',
              {1300,5},
              {var,{1300,10},'OldTimes'},
              [{clause,
                   {1301,9},
                   [{atom,{1301,9},undefined}],
                   [],
                   [{debug_line,1301,200},
                    {call,
                        {1301,22},
                        {remote,
                            {1301,22},
                            {atom,{1301,22},erlang},
                            {atom,{1301,22},erase}},
                        [{atom,{1301,29},compile__sub_pass_times}]}]},
               {clause,
                   {1302,9},
                   [{var,{1302,9},'_'}],
                   [],
                   [{debug_line,1302,201},
                    {call,
                        {1302,14},
                        {remote,
                            {1302,14},
                            {atom,{1302,14},erlang},
                            {atom,{1302,14},put}},
                        [{atom,{1302,19},compile__sub_pass_times},
                         {var,{1302,35},'OldTimes'}]}]}]},
          {debug_line,1304,202},
          {match,
              {1304,5},
              {var,{1304,5},'Elapsed'},
              {op,{1304,18},'-',{var,{1304,15},'T2'},{var,{1304,20},'T1'}}},
          {debug_line,1305,203},
          {match,
              {1305,5},
              {var,{1305,5},'Mem'},
              {op,{1305,36},
                  '*',
                  {call,
                      {1305,11},
                      {remote,
                          {1305,21},
                          {atom,{1305,11},erts_debug},
                          {atom,{1305,22},flat_size}},
                      [{var,{1305,32},'Val'}]},
                  {call,
                      {1305,37},
                      {remote,
                          {1305,43},
                          {atom,{1305,37},erlang},
                          {atom,{1305,44},system_info}},
                      [{atom,{1305,56},wordsize}]}}},
          {debug_line,1306,204},
          {call,
              {1306,5},
              {remote,{1306,5},{atom,{1306,5},erlang},{atom,{1306,5},put}},
              [{atom,{1306,10},compile__pass_times},
               {block,0,
                   [{cons,
                        {1306,22},
                        {tuple,
                            {1306,23},
                            [{var,{1306,24},'Name'},
                             {var,{1306,29},'Elapsed'},
                             {var,{1306,37},'Mem'},
                             {var,{1306,41},'SubTimes'}]},
                        {call,
                            {1306,51},
                            {remote,
                                {1306,51},
                                {atom,{1306,51},erlang},
                                {atom,{1306,51},get}},
                            [{atom,{1306,56},compile__pass_times}]}}]}]},
          {debug_line,1307,205},
          {var,{1307,5},'Val'}]}]}.
{function,
 {1309,1},
 print_pass_times,2,
 [{clause,
   {1309,1},
   [{var,{1309,1},'_'},{var,{1309,1},'_'}],
   [[{call,
      {1309,1},
      {remote,{1309,1},{atom,{1309,1},fake},{atom,{1309,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1309,206},{atom,{1309,1},ignore}]},
  {clause,
   {1309,1},
   [{var,{1309,18},'File'},{var,{1309,24},'Times'}],
   [],
   [{debug_line,1310,207},
    {call,
     {1310,5},
     {remote,{1310,7},{atom,{1310,5},io},{atom,{1310,8},format}},
     [{block,0,[{string,{1310,15},"Compiling ~ts\n"}]},
      {block,0,[{cons,{1310,34},{var,{1310,35},'File'},{nil,{1310,39}}}]}]},
    {debug_line,1311,208},
    {call,
     {1311,5},
     {remote,{1311,5},{atom,{1311,5},lists},{atom,{1311,5},foreach}},
     [{block,0,
       [{'fun',
         {1311,13},
         {clauses,
          [{clause,
            {1311,16},
            [{tuple,
              {1311,17},
              [{var,{1311,18},'Name'},
               {var,{1311,23},'ElapsedNative'},
               {var,{1311,37},'Mem0'},
               {var,{1311,42},'SubTimes'}]}],
            [],
            [{debug_line,1312,209},
             {match,
              {1312,21},
              {var,{1312,21},'Elapsed'},
              {call,
               {1312,31},
               {remote,
                {1312,37},
                {atom,{1312,31},erlang},
                {atom,{1312,38},convert_time_unit}},
               [{var,{1312,56},'ElapsedNative'},
                {atom,{1313,56},native},
                {atom,{1313,64},microsecond}]}},
             {debug_line,1314,210},
             {match,
              {1314,21},
              {var,{1314,21},'Mem'},
              {call,
               {1314,27},
               {remote,
                {1314,32},
                {atom,{1314,27},lists},
                {atom,{1314,33},flatten}},
               [{block,0,
                 [{call,
                   {1314,41},
                   {remote,
                    {1314,47},
                    {atom,{1314,41},io_lib},
                    {atom,{1314,48},format}},
                   [{block,0,[{string,{1314,55},"~.1f kB"}]},
                    {block,0,
                     [{cons,
                       {1314,66},
                       {op,
                        {1314,71},
                        '/',
                        {var,{1314,67},'Mem0'},
                        {integer,{1314,72},1024}},
                       {nil,{1314,76}}}]}]}]}]}},
             {debug_line,1315,211},
             {call,
              {1315,21},
              {remote,{1315,23},{atom,{1315,21},io},{atom,{1315,24},format}},
              [{block,0,[{string,{1315,31}," ~-30s: ~10.3f s ~12s\n"}]},
               {block,0,
                [{debug_line,1316,212},
                 {cons,
                  {1316,31},
                  {var,{1316,32},'Name'},
                  {cons,
                   {1316,37},
                   {op,
                    {1316,44},
                    '/',
                    {var,{1316,37},'Elapsed'},
                    {integer,{1316,45},1000000}},
                   {cons,
                    {1316,53},
                    {var,{1316,53},'Mem'},
                    {nil,{1316,56}}}}}]}]},
             {debug_line,1317,213},
             {call,
              {1317,21},
              {atom,{1317,21},print_subpass_times},
              [{var,{1317,41},'SubTimes'},{var,{1317,51},'Name'}]}]}]}}]},
      {var,{1318,18},'Times'}]}]}]}.
{function,
 {1320,1},
 print_subpass_times,2,
 [{clause,
   {1320,1},
   [{var,{1320,1},'_'},{var,{1320,1},'_'}],
   [[{call,
      {1320,1},
      {remote,{1320,1},{atom,{1320,1},fake},{atom,{1320,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1320,214},{atom,{1320,1},ignore}]},
  {clause,
   {1320,1},
   [{var,{1320,21},'Times0'},{var,{1320,29},'Name'}],
   [],
   [{debug_line,1321,215},
    {match,
     {1321,5},
     {var,{1321,5},'Fam0'},
     {call,{1321,12},{atom,{1321,12},rel2fam},[{var,{1321,20},'Times0'}]}},
    {debug_line,1322,216},
    {match,
     {1322,5},
     {var,{1322,5},'Fam1'},
     {lc,
      {1322,12},
      {block,0,
       [{tuple,
         {1322,13},
         [{var,{1322,14},'W'},
          {call,
           {1322,16},
           {remote,{1322,21},{atom,{1322,16},lists},{atom,{1322,22},sum}},
           [{var,{1322,26},'Times'}]}]}]},
      [{block,0,[{atom,{1322,51},true}]},
       {generate_strict,
        {1322,47},
        {tuple,{1322,37},[{var,{1322,38},'W'},{var,{1322,40},'Times'}]},
        {var,{1322,51},'Fam0'}}]}},
    {debug_line,1323,217},
    {match,
     {1323,5},
     {var,{1323,5},'Fam'},
     {call,
      {1323,11},
      {remote,{1323,11},{atom,{1323,11},lists},{atom,{1323,11},reverse}},
      [{block,0,
        [{call,
          {1323,19},
          {remote,{1323,24},{atom,{1323,19},lists},{atom,{1323,25},keysort}},
          [{integer,{1323,33},2},{var,{1323,36},'Fam1'}]}]}]}},
    {debug_line,1324,218},
    {match,
     {1324,5},
     {var,{1324,5},'Total'},
     {'case',
      {1324,13},
      {call,
       {1324,18},
       {remote,{1324,23},{atom,{1324,18},lists},{atom,{1324,24},sum}},
       [{block,0,
         [{lc,
           {1324,28},
           {block,0,[{var,{1324,29},'T'}]},
           [{block,0,[{atom,{1324,44},true}]},
            {generate_strict,
             {1324,40},
             {tuple,{1324,34},[{var,{1324,35},'_'},{var,{1324,37},'T'}]},
             {var,{1324,44},'Fam'}}]}]}]},
      [{clause,
        {1325,17},
        [{integer,{1325,17},0}],
        [],
        [{debug_line,1325,219},{integer,{1325,22},1}]},
       {clause,
        {1326,17},
        [{var,{1326,17},'Total0'}],
        [],
        [{debug_line,1326,220},{var,{1326,27},'Total0'}]}]}},
    {debug_line,1328,221},
    {'case',
     {1328,5},
     {var,{1328,10},'Fam'},
     [{clause,
       {1329,9},
       [{nil,{1329,9}}],
       [],
       [{debug_line,1330,222},{atom,{1330,13},ok}]},
      {clause,
       {1331,9},
       [{cons,{1331,9},{var,{1331,10},'_'},{var,{1331,12},'_'}}],
       [],
       [{debug_line,1332,223},
        {call,
         {1332,13},
         {remote,{1332,15},{atom,{1332,13},io},{atom,{1332,16},format}},
         [{block,0,
           [{string,
             {1332,23},
             "    %% Sub passes of ~s from slowest to fastest:\n"}]},
          {block,0,
           [{cons,{1332,77},{var,{1332,78},'Name'},{nil,{1332,82}}}]}]},
        {debug_line,1333,224},
        {call,
         {1333,13},
         {atom,{1333,13},print_times_1},
         [{var,{1333,27},'Fam'},{var,{1333,32},'Total'}]}]}]}]}]}.
{function,
 {1336,1},
 print_times_1,2,
 [{clause,
   {1336,1},
   [{var,{1336,1},'_'},{var,{1336,1},'_'}],
   [[{call,
      {1336,1},
      {remote,{1336,1},{atom,{1336,1},fake},{atom,{1336,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1336,225},{atom,{1336,1},ignore}]},
  {clause,
   {1336,1},
   [{cons,
     {1336,15},
     {tuple,{1336,16},[{var,{1336,17},'Name'},{var,{1336,22},'T'}]},
     {var,{1336,25},'Ts'}},
    {var,{1336,30},'Total'}],
   [],
   [{debug_line,1337,226},
    {match,
     {1337,5},
     {var,{1337,5},'Elapsed'},
     {call,
      {1337,15},
      {remote,
       {1337,21},
       {atom,{1337,15},erlang},
       {atom,{1337,22},convert_time_unit}},
      [{var,{1337,40},'T'},
       {atom,{1337,43},native},
       {atom,{1337,51},microsecond}]}},
    {debug_line,1338,227},
    {call,
     {1338,5},
     {remote,{1338,7},{atom,{1338,5},io},{atom,{1338,8},format}},
     [{block,0,[{string,{1338,15},"    ~-27s: ~10.3f s ~3w %\n"}]},
      {block,0,
       [{debug_line,1339,228},
        {cons,
         {1339,15},
         {var,{1339,16},'Name'},
         {cons,
          {1339,21},
          {op,
           {1339,28},
           '/',
           {var,{1339,21},'Elapsed'},
           {integer,{1339,29},1000000}},
          {cons,
           {1339,37},
           {call,
            {1339,37},
            {remote,{1339,37},{atom,{1339,37},erlang},{atom,{1339,37},round}},
            [{block,0,
              [{op,
                {1339,48},
                '/',
                {op,{1339,46},'*',{integer,{1339,43},100},{var,{1339,47},'T'}},
                {var,{1339,49},'Total'}}]}]},
           {nil,{1339,55}}}}}]}]},
    {debug_line,1340,229},
    {call,
     {1340,5},
     {atom,{1340,5},print_times_1},
     [{var,{1340,19},'Ts'},{var,{1340,23},'Total'}]}]},
  {clause,
   {1341,1},
   [{nil,{1341,15}},{var,{1341,19},'_Total'}],
   [],
   [{debug_line,1341,230},{atom,{1341,30},ok}]}]}.
{function,
    {1343,1},
    run_eprof,4,
    [{clause,
         {1343,1},
         [{var,{1343,1},'_'},
          {var,{1343,1},'_'},
          {var,{1343,1},'_'},
          {var,{1343,1},'_'}],
         [[{call,
               {1343,1},
               {remote,
                   {1343,1},
                   {atom,{1343,1},fake},
                   {atom,{1343,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1343,231},{atom,{1343,1},ignore}]},
     {clause,
         {1343,1},
         [{tuple,{1343,11},[{var,{1343,12},'Name'},{var,{1343,17},'Fun'}]},
          {var,{1343,23},'Code'},
          {var,{1343,29},'Name'},
          {var,{1343,35},'St'}],
         [],
         [{debug_line,1344,232},
          {call,
              {1344,5},
              {remote,{1344,7},{atom,{1344,5},io},{atom,{1344,8},format}},
              [{block,0,[{string,{1344,15},"~p: Running eprof\n"}]},
               {block,0,
                   [{cons,
                        {1344,38},
                        {var,{1344,39},'Name'},
                        {nil,{1344,43}}}]}]},
          {debug_line,1345,233},
          {call,
              {1345,5},
              {remote,{1345,6},{atom,{1345,5},c},{atom,{1345,7},appcall}},
              [{atom,{1345,15},tools},
               {atom,{1345,22},eprof},
               {atom,{1345,29},start_profiling},
               {block,0,
                   [{cons,
                        {1345,46},
                        {cons,
                            {1345,47},
                            {call,
                                {1345,48},
                                {remote,
                                    {1345,48},
                                    {atom,{1345,48},erlang},
                                    {atom,{1345,48},self}},
                                []},
                            {nil,{1345,54}}},
                        {nil,{1345,55}}}]}]},
          {debug_line,1346,234},
          {'try',
              {1346,5},
              [{debug_line,1347,235},
               {call,
                   {1347,9},
                   {var,{1347,9},'Fun'},
                   [{var,{1347,13},'Code'},{var,{1347,19},'St'}]}],
              [],[],
              [{debug_line,1349,236},
               {call,
                   {1349,9},
                   {remote,
                       {1349,10},
                       {atom,{1349,9},c},
                       {atom,{1349,11},appcall}},
                   [{atom,{1349,19},tools},
                    {atom,{1349,26},eprof},
                    {atom,{1349,33},stop_profiling},
                    {nil,{1349,49}}]},
               {debug_line,1350,237},
               {call,
                   {1350,9},
                   {remote,
                       {1350,10},
                       {atom,{1350,9},c},
                       {atom,{1350,11},appcall}},
                   [{atom,{1350,19},tools},
                    {atom,{1350,26},eprof},
                    {atom,{1350,33},analyze},
                    {nil,{1350,42}}]}]}]},
     {clause,
         {1352,1},
         [{tuple,{1352,11},[{var,{1352,12},'_'},{var,{1352,14},'Fun'}]},
          {var,{1352,20},'Code'},
          {var,{1352,26},'_'},
          {var,{1352,29},'St'}],
         [],
         [{debug_line,1353,238},
          {call,
              {1353,5},
              {var,{1353,5},'Fun'},
              [{var,{1353,9},'Code'},{var,{1353,15},'St'}]}]}]}.
{function,
 {1355,1},
 run_tprof,5,
 [{clause,
   {1355,1},
   [{var,{1355,1},'_'},
    {var,{1355,1},'_'},
    {var,{1355,1},'_'},
    {var,{1355,1},'_'},
    {var,{1355,1},'_'}],
   [[{call,
      {1355,1},
      {remote,{1355,1},{atom,{1355,1},fake},{atom,{1355,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1355,239},{atom,{1355,1},ignore}]},
  {clause,
   {1355,1},
   [{tuple,{1355,11},[{var,{1355,12},'Name'},{var,{1355,17},'Fun'}]},
    {var,{1355,23},'Code'},
    {var,{1355,29},'Name'},
    {var,{1355,35},'Measurement'},
    {var,{1355,48},'St'}],
   [],
   [{debug_line,1356,240},
    {call,
     {1356,5},
     {remote,{1356,7},{atom,{1356,5},io},{atom,{1356,8},format}},
     [{block,0,[{string,{1356,15},"~p: Profiling ~ts\n"}]},
      {block,0,
       [{cons,
         {1356,38},
         {var,{1356,39},'Name'},
         {cons,{1356,45},{var,{1356,45},'Measurement'},{nil,{1356,56}}}}]}]},
    {debug_line,1357,241},
    {match,
     {1357,5},
     {var,{1357,5},'Opts'},
     {map,
      {1357,12},
      [{map_field_assoc,
        {1357,19},
        {atom,{1357,14},type},
        {var,{1357,22},'Measurement'}},
       {map_field_assoc,
        {1357,42},
        {atom,{1357,35},report},
        {atom,{1357,45},return}}]}},
    {debug_line,1358,242},
    {match,
     {1358,5},
     {var,{1358,5},'Args'},
     {cons,
      {1358,12},
      {atom,{1358,13},erlang},
      {cons,
       {1358,21},
       {atom,{1358,21},apply},
       {cons,
        {1358,28},
        {cons,
         {1358,28},
         {var,{1358,29},'Fun'},
         {cons,
          {1358,34},
          {cons,
           {1358,34},
           {var,{1358,35},'Code'},
           {cons,{1358,41},{var,{1358,41},'St'},{nil,{1358,43}}}},
          {nil,{1358,44}}}},
        {cons,{1358,47},{var,{1358,47},'Opts'},{nil,{1358,51}}}}}}},
    {debug_line,1359,243},
    {match,
     {1359,5},
     {tuple,{1359,5},[{var,{1359,6},'Result'},{var,{1359,14},'ProfileData'}]},
     {call,
      {1359,29},
      {remote,{1359,30},{atom,{1359,29},c},{atom,{1359,31},appcall}},
      [{atom,{1359,39},tools},
       {atom,{1359,46},tprof},
       {atom,{1359,53},profile},
       {var,{1359,62},'Args'}]}},
    {debug_line,1360,244},
    {match,
     {1360,5},
     {var,{1360,5},'InspectData'},
     {call,
      {1360,19},
      {remote,{1360,20},{atom,{1360,19},c},{atom,{1360,21},appcall}},
      [{atom,{1360,29},tools},
       {atom,{1360,36},tprof},
       {atom,{1360,43},inspect},
       {block,0,
        [{cons,{1360,52},{var,{1360,53},'ProfileData'},{nil,{1360,64}}}]}]}},
    {debug_line,1361,245},
    {call,
     {1361,5},
     {remote,{1361,6},{atom,{1361,5},c},{atom,{1361,7},appcall}},
     [{atom,{1361,15},tools},
      {atom,{1361,22},tprof},
      {atom,{1361,29},format},
      {block,0,
       [{cons,{1361,37},{var,{1361,38},'InspectData'},{nil,{1361,49}}}]}]},
    {debug_line,1362,246},
    {var,{1362,5},'Result'}]},
  {clause,
   {1363,1},
   [{tuple,{1363,11},[{var,{1363,12},'_'},{var,{1363,14},'Fun'}]},
    {var,{1363,20},'Code'},
    {var,{1363,26},'_'},
    {var,{1363,29},'_'},
    {var,{1363,32},'St'}],
   [],
   [{debug_line,1364,247},
    {call,
     {1364,5},
     {var,{1364,5},'Fun'},
     [{var,{1364,9},'Code'},{var,{1364,15},'St'}]}]}]}.
{function,
 {1366,1},
 comp_ret_ok,2,
 [{clause,
   {1366,1},
   [{var,{1366,1},'_'},{var,{1366,1},'_'}],
   [[{call,
      {1366,1},
      {remote,{1366,1},{atom,{1366,1},fake},{atom,{1366,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1366,248},{atom,{1366,1},ignore}]},
  {clause,
   {1366,1},
   [{var,{1366,13},'Code'},
    {match,
     {1366,19},
     {tuple,
      {1366,19},
      [{atom,{1366,19},compile},
       {var,{1366,19},'_'},
       {var,{1366,19},'_'},
       {var,{1366,19},'_'},
       {var,{1366,19},'_'},
       {var,{1366,19},'_'},
       {var,{1366,50},'Mod'},
       {var,{1366,19},'_'},
       {var,{1366,62},'Opts'},
       {var,{1366,19},'_'},
       {var,{1366,19},'_'},
       {var,{1366,19},'_'},
       {var,{1366,37},'Warn0'},
       {var,{1366,19},'_'}]},
     {var,{1366,68},'St'}}],
   [],
   [{debug_line,1367,249},
    {match,
     {1367,5},
     {var,{1367,5},'Warn1'},
     {call,
      {1367,13},
      {atom,{1367,13},filter_warnings},
      [{var,{1367,29},'Warn0'},{var,{1367,36},'Opts'}]}},
    {debug_line,1368,250},
    {'case',
     {1368,5},
     {call,{1368,10},{atom,{1368,10},werror},[{var,{1368,17},'St'}]},
     [{clause,
       {1369,9},
       [{atom,{1369,9},true}],
       [],
       [{debug_line,1370,251},
        {'case',
         {1370,13},
         {call,
          {1370,18},
          {remote,{1370,18},{atom,{1370,18},lists},{atom,{1370,18},member}},
          [{atom,{1370,25},report_warnings},{var,{1370,42},'Opts'}]},
         [{clause,
           {1371,17},
           [{atom,{1371,17},true}],
           [],
           [{debug_line,1372,252},
            {call,
             {1372,7},
             {remote,{1372,9},{atom,{1372,7},io},{atom,{1372,10},format}},
             [{block,0,
               [{string,{1372,17},"~p: warnings being treated as errors\n"}]},
              {block,0,
               [{debug_line,1373,253},
                {cons,
                 {1373,10},
                 {atom,{1373,12},compile},
                 {nil,{1373,18}}}]}]}]},
          {clause,
           {1374,17},
           [{atom,{1374,17},false}],
           [],
           [{debug_line,1375,254},{atom,{1375,7},ok}]}]},
        {debug_line,1377,255},
        {call,
         {1377,13},
         {atom,{1377,13},comp_ret_err},
         [{var,{1377,26},'St'}]}]},
      {clause,
       {1378,9},
       [{atom,{1378,9},false}],
       [],
       [{debug_line,1379,256},
        {match,
         {1379,13},
         {var,{1379,13},'Warn'},
         {call,
          {1379,20},
          {atom,{1379,20},messages_per_file},
          [{var,{1379,38},'Warn1'}]}},
        {debug_line,1380,257},
        {call,
         {1380,13},
         {atom,{1380,13},report_warnings},
         [{block,0,
           [{block,
             {1380,29},
             [{match,{1380,29},{var,{1380,29},rec10},{var,{1380,29},'St'}},
              {'case',
               {1380,40},
               {var,{1380,29},rec10},
               [{clause,
                 {1380,40},
                 [{tuple,
                   {1380,40},
                   [{atom,{1380,40},compile},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'},
                    {var,{1380,40},'_'}]}],
                 [],
                 [{call,
                   {1380,40},
                   {remote,
                    {1380,40},
                    {atom,{1380,40},erlang},
                    {atom,{1380,40},setelement}},
                   [{integer,{1380,40},13},
                    {var,{1380,29},rec10},
                    {var,{1380,51},'Warn'}]}]},
                {clause,
                 [{generated,true},{location,{1380,40}}],
                 [{var,[{generated,true},{location,{1380,40}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1380,40}}],
                   {remote,
                    [{generated,true},{location,{1380,40}}],
                    {atom,[{generated,true},{location,{1380,40}}],erlang},
                    {atom,[{generated,true},{location,{1380,40}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1380,40}}],
                     [{atom,[{generated,true},{location,{1380,40}}],badrecord},
                      {var,{1380,29},rec10}]}]}]}]}]}]}]},
        {debug_line,1381,258},
        {match,
         {1381,13},
         {var,{1381,13},'Ret1'},
         {'case',
          {1381,20},
          {'case',
           {1381,25},
           {call,
            {1381,25},
            {remote,{1381,25},{atom,{1381,25},lists},{atom,{1381,25},member}},
            [{atom,{1381,32},binary},{var,{1381,40},'Opts'}]},
           [{clause,
             {1381,25},
             [{atom,{1381,25},true}],
             [],
             [{debug_line,1382,259},
              {op,
               {1382,10},
               'not',
               {call,
                {1382,14},
                {remote,
                 {1382,14},
                 {atom,{1382,14},lists},
                 {atom,{1382,14},member}},
                [{atom,{1382,21},no_code_generation},
                 {var,{1382,41},'Opts'}]}}]},
            {clause,
             {1381,25},
             [{atom,{1381,25},false}],
             [],
             [{atom,{1381,25},false}]},
            {clause,
             [{generated,true},{location,{1381,25}}],
             [{var,{1381,25},cov1}],
             [],
             [{call,
               {1381,25},
               {remote,
                {1381,25},
                {atom,{1381,25},erlang},
                {atom,{1381,25},error}},
               [{block,0,
                 [{tuple,
                   {1381,25},
                   [{atom,{1381,25},badarg},{var,{1381,25},cov1}]}]}]}]}]},
          [{clause,
            {1383,24},
            [{atom,{1383,24},true}],
            [],
            [{debug_line,1383,260},
             {cons,{1383,32},{var,{1383,33},'Code'},{nil,{1383,37}}}]},
           {clause,
            {1384,24},
            [{atom,{1384,24},false}],
            [],
            [{debug_line,1384,261},{nil,{1384,33}}]}]}},
        {debug_line,1386,262},
        {match,
         {1386,13},
         {var,{1386,13},'Ret2'},
         {'case',
          {1386,20},
          {call,
           {1386,25},
           {remote,{1386,25},{atom,{1386,25},lists},{atom,{1386,25},member}},
           [{atom,{1386,32},return_warnings},{var,{1386,49},'Opts'}]},
          [{clause,
            {1387,24},
            [{atom,{1387,24},true}],
            [],
            [{debug_line,1387,263},
             {op,
              {1387,37},
              '++',
              {var,{1387,32},'Ret1'},
              {cons,{1387,40},{var,{1387,41},'Warn'},{nil,{1387,45}}}}]},
           {clause,
            {1388,24},
            [{atom,{1388,24},false}],
            [],
            [{debug_line,1388,264},{var,{1388,33},'Ret1'}]}]}},
        {debug_line,1390,265},
        {call,
         {1390,13},
         {remote,
          {1390,13},
          {atom,{1390,13},erlang},
          {atom,{1390,13},list_to_tuple}},
         [{block,0,
           [{cons,
             {1390,27},
             {atom,{1390,28},ok},
             {cons,
              {1390,31},
              {var,{1390,31},'Mod'},
              {var,{1390,35},'Ret2'}}}]}]}]}]}]}]}.
{function,
 {1393,1},
 comp_ret_err,1,
 [{clause,
   {1393,1},
   [{var,{1393,1},'_'}],
   [[{call,
      {1393,1},
      {remote,{1393,1},{atom,{1393,1},fake},{atom,{1393,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1393,266},{atom,{1393,1},ignore}]},
  {clause,
   {1393,1},
   [{match,
     {1393,14},
     {tuple,
      {1393,14},
      [{atom,{1393,14},compile},
       {var,{1393,14},'_'},
       {var,{1393,14},'_'},
       {var,{1393,14},'_'},
       {var,{1393,14},'_'},
       {var,{1393,14},'_'},
       {var,{1393,14},'_'},
       {var,{1393,14},'_'},
       {var,{1393,58},'Opts'},
       {var,{1393,14},'_'},
       {var,{1393,14},'_'},
       {var,{1393,45},'Err0'},
       {var,{1393,32},'Warn0'},
       {var,{1393,14},'_'}]},
     {var,{1393,64},'St'}}],
   [],
   [{debug_line,1394,267},
    {match,
     {1394,5},
     {var,{1394,5},'Warn'},
     {call,
      {1394,12},
      {atom,{1394,12},messages_per_file},
      [{var,{1394,30},'Warn0'}]}},
    {debug_line,1395,268},
    {match,
     {1395,5},
     {var,{1395,5},'Err'},
     {call,
      {1395,11},
      {atom,{1395,11},messages_per_file},
      [{var,{1395,29},'Err0'}]}},
    {debug_line,1396,269},
    {call,
     {1396,5},
     {atom,{1396,5},report_errors},
     [{block,0,
       [{block,
         {1396,19},
         [{match,{1396,19},{var,{1396,19},rec11},{var,{1396,19},'St'}},
          {'case',
           {1396,30},
           {var,{1396,19},rec11},
           [{clause,
             {1396,30},
             [{tuple,
               {1396,30},
               [{atom,{1396,30},compile},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'},
                {var,{1396,30},'_'}]}],
             [],
             [{call,
               {1396,30},
               {remote,
                {1396,30},
                {atom,{1396,30},erlang},
                {atom,{1396,30},setelement}},
               [{integer,{1396,30},12},
                {var,{1396,19},rec11},
                {var,{1396,37},'Err'}]}]},
            {clause,
             [{generated,true},{location,{1396,30}}],
             [{var,[{generated,true},{location,{1396,30}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1396,30}}],
               {remote,
                [{generated,true},{location,{1396,30}}],
                {atom,[{generated,true},{location,{1396,30}}],erlang},
                {atom,[{generated,true},{location,{1396,30}}],error}},
               [{tuple,
                 [{generated,true},{location,{1396,30}}],
                 [{atom,[{generated,true},{location,{1396,30}}],badrecord},
                  {var,{1396,19},rec11}]}]}]}]}]}]}]},
    {debug_line,1397,270},
    {call,
     {1397,5},
     {atom,{1397,5},report_warnings},
     [{block,0,
       [{block,
         {1397,21},
         [{match,{1397,21},{var,{1397,21},rec12},{var,{1397,21},'St'}},
          {'case',
           {1397,32},
           {var,{1397,21},rec12},
           [{clause,
             {1397,32},
             [{tuple,
               {1397,32},
               [{atom,{1397,32},compile},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'},
                {var,{1397,32},'_'}]}],
             [],
             [{call,
               {1397,32},
               {remote,
                {1397,32},
                {atom,{1397,32},erlang},
                {atom,{1397,32},setelement}},
               [{integer,{1397,32},13},
                {var,{1397,21},rec12},
                {var,{1397,41},'Warn'}]}]},
            {clause,
             [{generated,true},{location,{1397,32}}],
             [{var,[{generated,true},{location,{1397,32}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1397,32}}],
               {remote,
                [{generated,true},{location,{1397,32}}],
                {atom,[{generated,true},{location,{1397,32}}],erlang},
                {atom,[{generated,true},{location,{1397,32}}],error}},
               [{tuple,
                 [{generated,true},{location,{1397,32}}],
                 [{atom,[{generated,true},{location,{1397,32}}],badrecord},
                  {var,{1397,21},rec12}]}]}]}]}]}]}]},
    {debug_line,1398,271},
    {'case',
     {1398,5},
     {call,
      {1398,10},
      {remote,{1398,10},{atom,{1398,10},lists},{atom,{1398,10},member}},
      [{atom,{1398,17},return_errors},{var,{1398,32},'Opts'}]},
     [{clause,
       {1399,2},
       [{atom,{1399,2},true}],
       [],
       [{debug_line,1399,272},
        {tuple,
         {1399,10},
         [{atom,{1399,11},error},
          {var,{1399,17},'Err'},
          {var,{1399,21},'Warn'}]}]},
      {clause,
       {1400,2},
       [{atom,{1400,2},false}],
       [],
       [{debug_line,1400,273},{atom,{1400,11},error}]}]}]}]}.
{function,{1403,1},
          not_werror,1,
          [{clause,{1403,1},
                   [{var,{1403,1},'_'}],
                   [[{call,{1403,1},
                           {remote,{1403,1},
                                   {atom,{1403,1},fake},
                                   {atom,{1403,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1403,274},{atom,{1403,1},ignore}]},
           {clause,{1403,1},
                   [{var,{1403,12},'St'}],
                   [],
                   [{debug_line,1403,275},
                    {op,{1403,19},
                        'not',
                        {call,{1403,23},
                              {atom,{1403,23},werror},
                              [{var,{1403,30},'St'}]}}]}]}.
{function,
    {1405,1},
    werror,1,
    [{clause,
         {1405,1},
         [{var,{1405,1},'_'}],
         [[{call,
               {1405,1},
               {remote,
                   {1405,1},
                   {atom,{1405,1},fake},
                   {atom,{1405,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1405,276},{atom,{1405,1},ignore}]},
     {clause,
         {1405,1},
         [{tuple,
              {1405,8},
              [{atom,{1405,8},compile},
               {var,{1405,8},'_'},
               {var,{1405,8},'_'},
               {var,{1405,8},'_'},
               {var,{1405,8},'_'},
               {var,{1405,8},'_'},
               {var,{1405,8},'_'},
               {var,{1405,8},'_'},
               {var,{1405,25},'Opts'},
               {var,{1405,8},'_'},
               {var,{1405,8},'_'},
               {var,{1405,8},'_'},
               {var,{1405,39},'Ws'},
               {var,{1405,8},'_'}]}],
         [],
         [{debug_line,1406,277},
          {'case',
              {1406,8},
              {op,{1406,8},'=/=',{var,{1406,5},'Ws'},{nil,{1406,12}}},
              [{clause,
                   {1406,8},
                   [{atom,{1406,8},true}],
                   [],
                   [{call,
                        {1406,23},
                        {remote,
                            {1406,23},
                            {atom,{1406,23},lists},
                            {atom,{1406,23},member}},
                        [{atom,{1406,30},warnings_as_errors},
                         {var,{1406,50},'Opts'}]}]},
               {clause,
                   {1406,8},
                   [{atom,{1406,8},false}],
                   [],
                   [{atom,{1406,8},false}]},
               {clause,
                   [{generated,true},{location,{1406,8}}],
                   [{var,{1406,8},cov1}],
                   [],
                   [{call,
                        {1406,8},
                        {remote,
                            {1406,8},
                            {atom,{1406,8},erlang},
                            {atom,{1406,8},error}},
                        [{block,0,
                             [{tuple,
                                  {1406,8},
                                  [{atom,{1406,8},badarg},
                                   {var,{1406,8},cov1}]}]}]}]}]}]}]}.
{function,
 {1409,1},
 messages_per_file,1,
 [{clause,
   {1409,1},
   [{var,{1409,1},'_'}],
   [[{call,
      {1409,1},
      {remote,{1409,1},{atom,{1409,1},fake},{atom,{1409,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1409,278},{atom,{1409,1},ignore}]},
  {clause,
   {1409,1},
   [{var,{1409,19},'Ms'}],
   [],
   [{debug_line,1410,279},
    {match,
     {1410,5},
     {var,{1410,5},'T'},
     {call,
      {1410,9},
      {remote,{1410,14},{atom,{1410,9},lists},{atom,{1410,15},sort}},
      [{block,0,
        [{lc,
          {1410,20},
          {block,0,
           [{tuple,{1410,21},[{var,{1410,22},'File'},{var,{1410,27},'M'}]}]},
          [{block,0,[{atom,{1410,53},true}]},
           {generate_strict,
            {1410,49},
            {tuple,
             {1410,33},
             [{var,{1410,34},'File'},{var,{1410,39},'Messages'}]},
            {var,{1410,53},'Ms'}},
           {block,0,[{atom,{1410,62},true}]},
           {generate,
            {1410,59},
            {var,{1410,57},'M'},
            {var,{1410,62},'Messages'}}]}]}]}},
    {debug_line,1411,280},
    {match,
     {1411,5},
     {var,{1411,5},'PrioMs'},
     {cons,
      {1411,14},
      {atom,{1411,15},erl_scan},
      {cons,
       {1411,25},
       {atom,{1411,25},epp},
       {cons,{1411,30},{atom,{1411,30},erl_parse},{nil,{1411,39}}}}}},
    {debug_line,1412,281},
    {match,
     {1412,5},
     {tuple,{1412,5},[{var,{1412,6},'Prio0'},{var,{1412,13},'Rest'}]},
     {call,
      {1413,9},
      {remote,{1413,14},{atom,{1413,9},lists},{atom,{1413,15},mapfoldl}},
      [{block,0,
        [{debug_line,1413,282},
         {'fun',
          {1413,24},
          {clauses,
           [{clause,
             {1413,27},
             [{var,{1413,28},'M'},{var,{1413,31},'A'}],
             [],
             [{debug_line,1414,283},
              {call,
               {1414,32},
               {remote,
                {1414,37},
                {atom,{1414,32},lists},
                {atom,{1414,38},partition}},
               [{block,0,
                 [{'fun',
                   {1414,48},
                   {clauses,
                    [{clause,
                      {1414,51},
                      [{tuple,
                        {1414,52},
                        [{var,{1414,53},'_'},
                         {tuple,
                          {1414,55},
                          [{var,{1414,56},'_'},
                           {var,{1414,58},'Mod'},
                           {var,{1414,62},'_'}]}]}],
                      [],
                      [{op,
                        {1414,74},
                        '=:=',
                        {var,{1414,70},'Mod'},
                        {var,{1414,78},'M'}}]},
                     {clause,
                      {1415,51},
                      [{var,{1415,52},'_'}],
                      [],
                      [{debug_line,1415,284},{atom,{1415,58},false}]}]}}]},
                {var,{1416,53},'A'}]}]}]}}]},
       {var,{1417,29},'T'},
       {var,{1417,32},'PrioMs'}]}},
    {debug_line,1418,285},
    {match,
     {1418,5},
     {var,{1418,5},'Prio'},
     {call,
      {1418,12},
      {remote,{1418,17},{atom,{1418,12},lists},{atom,{1418,18},sort}},
      [{block,0,
        [{'fun',
          {1418,23},
          {clauses,
           [{clause,
             {1418,26},
             [{tuple,
               {1418,27},
               [{var,{1418,28},'_'},
                {tuple,
                 {1418,30},
                 [{var,{1418,31},'L1'},
                  {var,{1418,34},'_'},
                  {var,{1418,36},'_'}]}]},
              {tuple,
               {1418,41},
               [{var,{1418,42},'_'},
                {tuple,
                 {1418,44},
                 [{var,{1418,45},'L2'},
                  {var,{1418,48},'_'},
                  {var,{1418,50},'_'}]}]}],
             [],
             [{op,
               {1418,61},
               '=<',
               {var,{1418,58},'L1'},
               {var,{1418,64},'L2'}}]}]}}]},
       {block,0,
        [{debug_line,1419,286},
         {call,
          {1419,23},
          {remote,{1419,28},{atom,{1419,23},lists},{atom,{1419,29},append}},
          [{var,{1419,36},'Prio0'}]}]}]}},
    {debug_line,1420,287},
    {call,
     {1420,5},
     {remote,{1420,5},{atom,{1420,5},lists},{atom,{1420,5},flatmap}},
     [{block,0,[{'fun',{1420,13},{function,mpf,1}}]},
      {block,0,
       [{cons,
         {1420,24},
         {var,{1420,25},'Prio'},
         {cons,{1420,31},{var,{1420,31},'Rest'},{nil,{1420,35}}}}]}]}]}]}.
{function,
 {1422,1},
 mpf,1,
 [{clause,
   {1422,1},
   [{var,{1422,1},'_'}],
   [[{call,
      {1422,1},
      {remote,{1422,1},{atom,{1422,1},fake},{atom,{1422,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1422,288},{atom,{1422,1},ignore}]},
  {clause,
   {1422,1},
   [{var,{1422,5},'Ms'}],
   [],
   [{debug_line,1423,289},
    {lc,
     {1423,5},
     {block,0,
      [{tuple,
        {1423,6},
        [{var,{1423,7},'File'},
         {lc,
          {1423,12},
          {block,0,[{var,{1423,13},'M'}]},
          [{block,0,[{atom,{1423,27},true}]},
           {generate,
            {1423,24},
            {tuple,{1423,18},[{var,{1423,19},'F'},{var,{1423,21},'M'}]},
            {var,{1423,27},'Ms'}},
           {block,0,[{atom,{1423,33},true}]},
           {op,
            {1423,33},
            '=:=',
            {var,{1423,31},'F'},
            {var,{1423,37},'File'}}]}]}]},
     [{generate,
       {1424,7},
       {var,{1424,2},'File'},
       {call,
        {1424,10},
        {remote,{1424,15},{atom,{1424,10},lists},{atom,{1424,16},usort}},
        [{block,0,
          [{debug_line,1424,290},
           {lc,
            {1424,22},
            {block,0,[{var,{1424,23},'F'}]},
            [{block,0,[{atom,{1424,38},true}]},
             {generate_strict,
              {1424,34},
              {tuple,{1424,28},[{var,{1424,29},'F'},{var,{1424,31},'_'}]},
              {var,{1424,38},'Ms'}}]}]}]}}]}]}]}.
{function,
    {1430,1},
    passes,2,
    [{clause,
         {1430,1},
         [{var,{1430,1},'_'},{var,{1430,1},'_'}],
         [[{call,
               {1430,1},
               {remote,
                   {1430,1},
                   {atom,{1430,1},fake},
                   {atom,{1430,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1430,291},{atom,{1430,1},ignore}]},
     {clause,
         {1430,1},
         [{var,{1430,8},'Type'},{var,{1430,14},'Opts'}],
         [],
         [{debug_line,1431,292},
          {match,
              {1431,5},
              {tuple,
                  {1431,5},
                  [{var,{1431,6},'Ext'},{var,{1431,10},'Passes0'}]},
              {call,
                  {1431,21},
                  {atom,{1431,21},passes_1},
                  [{var,{1431,30},'Opts'}]}},
          {debug_line,1433,293},
          {match,
              {1433,5},
              {var,{1433,5},'Passes1'},
              {'case',
                  {1433,15},
                  {var,{1433,20},'Type'},
                  [{clause,
                       {1434,19},
                       [{atom,{1434,19},file}],
                       [],
                       [{debug_line,1435,294},{var,{1435,23},'Passes0'}]},
                   {clause,
                       {1436,19},
                       [{atom,{1436,19},forms}],
                       [],
                       [{debug_line,1437,295},
                        {call,
                            {1437,23},
                            {atom,{1437,23},fix_first_pass},
                            [{var,{1437,38},'Passes0'}]}]}]}},
          {debug_line,1440,296},
          {match,
              {1440,5},
              {var,{1440,5},'Passes2'},
              {call,
                  {1440,15},
                  {atom,{1440,15},select_passes},
                  [{var,{1440,29},'Passes1'},{var,{1440,38},'Opts'}]}},
          {debug_line,1444,297},
          {match,
              {1444,5},
              {var,{1444,5},'Passes'},
              {'case',
                  {1444,14},
                  {call,
                      {1444,19},
                      {remote,
                          {1444,19},
                          {atom,{1444,19},lists},
                          {atom,{1444,19},last}},
                      [{var,{1444,24},'Passes2'}]},
                  [{clause,
                       {1445,18},
                       [{tuple,
                            {1445,18},
                            [{atom,{1445,19},save_binary},
                             {var,{1445,32},'_TestFun'},
                             {var,{1445,42},'_Fun'}]}],
                       [],
                       [{debug_line,1446,298},
                        {cons,
                            {1446,22},
                            {tuple,
                                {1446,24},
                                [{atom,{1446,29},remove_file},
                                 {'fun',{1446,29},{function,remove_file,2}}]},
                            {var,{1446,44},'Passes2'}}]},
                   {clause,
                       {1447,18},
                       [{var,{1447,18},'_'}],
                       [],
                       [{debug_line,1448,299},{var,{1448,22},'Passes2'}]}]}},
          {debug_line,1451,300},
          {tuple,{1451,5},[{var,{1451,6},'Ext'},{var,{1451,11},'Passes'}]}]}]}.
{function,
    {1453,1},
    passes_1,1,
    [{clause,
         {1453,1},
         [{var,{1453,1},'_'}],
         [[{call,
               {1453,1},
               {remote,
                   {1453,1},
                   {atom,{1453,1},fake},
                   {atom,{1453,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1453,301},{atom,{1453,1},ignore}]},
     {clause,
         {1453,1},
         [{cons,{1453,10},{var,{1453,11},'Opt'},{var,{1453,15},'Opts'}}],
         [],
         [{debug_line,1454,302},
          {'case',
              {1454,5},
              {call,{1454,10},{atom,{1454,10},pass},[{var,{1454,15},'Opt'}]},
              [{clause,
                   {1455,2},
                   [{match,
                        {1455,2},
                        {tuple,
                            {1455,2},
                            [{var,{1455,3},'_'},{var,{1455,5},'_'}]},
                        {var,{1455,8},'Res'}}],
                   [],
                   [{debug_line,1455,303},{var,{1455,15},'Res'}]},
               {clause,
                   {1456,2},
                   [{atom,{1456,2},none}],
                   [],
                   [{debug_line,1456,304},
                    {call,
                        {1456,10},
                        {atom,{1456,10},passes_1},
                        [{var,{1456,19},'Opts'}]}]}]}]},
     {clause,
         {1458,1},
         [{nil,{1458,10}}],
         [],
         [{debug_line,1459,305},
          {tuple,
              {1459,5},
              [{string,{1459,6},".erl"},
               {cons,
                   {1459,13},
                   {tuple,
                       {1459,15},
                       [{atom,{1459,20},parse_module},
                        {'fun',{1459,20},{function,parse_module,2}}]},
                   {call,{1459,34},{atom,{1459,34},standard_passes},[]}}]}]}]}.
{function,
    {1461,1},
    pass,1,
    [{clause,
         {1461,1},
         [{var,{1461,1},'_'}],
         [[{call,
               {1461,1},
               {remote,
                   {1461,1},
                   {atom,{1461,1},fake},
                   {atom,{1461,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1461,306},{atom,{1461,1},ignore}]},
     {clause,
         {1461,1},
         [{atom,{1461,6},from_abstr}],
         [],
         [{debug_line,1462,307},
          {tuple,
              {1462,5},
              [{string,{1462,6},".abstr"},
               {cons,
                   {1462,16},
                   {tuple,
                       {1462,18},
                       [{atom,{1462,23},consult_abstr},
                        {'fun',{1462,23},{function,consult_abstr,2}}]},
                   {call,
                       {1462,40},
                       {atom,{1462,40},abstr_passes},
                       [{atom,{1462,53},non_verified_abstr}]}}]}]},
     {clause,
         {1463,1},
         [{atom,{1463,6},from_core}],
         [],
         [{debug_line,1464,308},
          {tuple,
              {1464,5},
              [{string,{1464,6},".core"},
               {cons,
                   {1464,14},
                   {tuple,
                       {1464,16},
                       [{atom,{1464,21},parse_core},
                        {'fun',{1464,21},{function,parse_core,2}}]},
                   {call,
                       {1464,33},
                       {atom,{1464,33},core_passes},
                       [{atom,{1464,45},non_verified_core}]}}]}]},
     {clause,
         {1465,1},
         [{atom,{1465,6},from_asm}],
         [],
         [{debug_line,1466,309},
          {tuple,
              {1466,5},
              [{string,{1466,6},".S"},
               {cons,
                   {1466,11},
                   {tuple,
                       {1466,13},
                       [{atom,{1466,18},beam_consult_asm},
                        {'fun',{1466,18},{function,beam_consult_asm,2}}]},
                   {call,{1466,36},{atom,{1466,36},asm_passes},[]}}]}]},
     {clause,
         {1467,1},
         [{var,{1467,6},'_'}],
         [],
         [{debug_line,1467,310},{atom,{1467,12},none}]}]}.
{function,
    {1473,1},
    fix_first_pass,1,
    [{clause,
         {1473,1},
         [{var,{1473,1},'_'}],
         [[{call,
               {1473,1},
               {remote,
                   {1473,1},
                   {atom,{1473,1},fake},
                   {atom,{1473,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1473,311},{atom,{1473,1},ignore}]},
     {clause,
         {1473,1},
         [{cons,
              {1473,16},
              {tuple,
                  {1473,17},
                  [{atom,{1473,18},consult_abstr},{var,{1473,33},'_'}]},
              {var,{1473,38},'Passes'}}],
         [],
         [{debug_line,1476,312},{var,{1476,5},'Passes'}]},
     {clause,
         {1477,1},
         [{cons,
              {1477,16},
              {tuple,
                  {1477,17},
                  [{atom,{1477,18},parse_core},{var,{1477,29},'_'}]},
              {var,{1477,32},'Passes'}}],
         [],
         [{debug_line,1478,313},
          {cons,
              {1478,5},
              {tuple,
                  {1478,7},
                  [{atom,{1478,12},get_module_name_from_core},
                   {'fun',{1478,12},{function,get_module_name_from_core,2}}]},
              {var,{1478,39},'Passes'}}]},
     {clause,
         {1479,1},
         [{cons,
              {1479,16},
              {tuple,
                  {1479,17},
                  [{atom,{1479,18},beam_consult_asm},{var,{1479,35},'_'}]},
              {var,{1479,38},'Passes'}}],
         [],
         [{debug_line,1480,314},
          {cons,
              {1480,5},
              {tuple,
                  {1480,7},
                  [{atom,{1480,12},get_module_name_from_asm},
                   {'fun',{1480,12},{function,get_module_name_from_asm,2}}]},
              {var,{1480,38},'Passes'}}]},
     {clause,
         {1481,1},
         [{cons,{1481,16},{var,{1481,17},'_'},{var,{1481,19},'Passes'}}],
         [],
         [{debug_line,1484,315},{var,{1484,5},'Passes'}]}]}.
{function,
 {1537,1},
 select_passes,2,
 [{clause,
   {1537,1},
   [{var,{1537,1},'_'},{var,{1537,1},'_'}],
   [[{call,
      {1537,1},
      {remote,{1537,1},{atom,{1537,1},fake},{atom,{1537,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1537,316},{atom,{1537,1},ignore}]},
  {clause,
   {1537,1},
   [{cons,
     {1537,15},
     {tuple,{1537,16},[{atom,{1537,17},pass},{var,{1537,22},'Mod'}]},
     {var,{1537,27},'Ps'}},
    {var,{1537,32},'Opts'}],
   [],
   [{debug_line,1538,317},
    {match,
     {1538,5},
     {var,{1538,5},'F'},
     {'fun',
      {1538,9},
      {clauses,
       [{clause,
         {1538,12},
         [{var,{1538,13},'Code0'},{var,{1538,20},'St'}],
         [],
         [{debug_line,1539,318},
          {'case',
           {1539,3},
           {call,
            {1539,8},
            {remote,{1539,11},{var,{1539,8},'Mod'},{atom,{1539,12},module}},
            [{var,{1539,19},'Code0'},
             {block,0,
              [{'case',
                {1539,26},
                {var,{1539,26},'St'},
                [{clause,
                  [{generated,true},{location,{1539,26}}],
                  [{tuple,
                    [{generated,true},{location,{1539,26}}],
                    [{atom,{1539,26},compile},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},rec13},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'},
                     {var,{1539,26},'_'}]}],
                  [],
                  [{var,{1539,26},rec13}]},
                 {clause,
                  [{generated,true},{location,{1539,26}}],
                  [{var,{1539,26},rec13}],
                  [],
                  [{call,
                    [{generated,true},{location,{1539,26}}],
                    {remote,
                     [{generated,true},{location,{1539,26}}],
                     {atom,[{generated,true},{location,{1539,26}}],erlang},
                     {atom,[{generated,true},{location,{1539,26}}],error}},
                    [{tuple,
                      [{generated,true},{location,{1539,26}}],
                      [{atom,
                        [{generated,true},{location,{1539,26}}],
                        badrecord},
                       {var,{1539,26},rec13}]}]}]}]}]}]},
           [{clause,
             {1540,7},
             [{tuple,{1540,7},[{atom,{1540,8},ok},{var,{1540,11},'Code'}]}],
             [],
             [{debug_line,1541,319},
              {tuple,
               {1541,4},
               [{atom,{1541,5},ok},
                {var,{1541,8},'Code'},
                {var,{1541,13},'St'}]}]},
            {clause,
             {1542,7},
             [{tuple,
               {1542,7},
               [{atom,{1542,8},ok},
                {var,{1542,11},'Code'},
                {var,{1542,16},'Ws'}]}],
             [],
             [{debug_line,1543,320},
              {tuple,
               {1543,4},
               [{atom,{1543,5},ok},
                {var,{1543,8},'Code'},
                {block,
                 {1543,13},
                 [{match,
                   {1543,24},
                   {var,{1543,24},rec14},
                   {op,
                    {1543,52},
                    '++',
                    {'case',
                     {1543,33},
                     {var,{1543,33},'St'},
                     [{clause,
                       [{generated,true},{location,{1543,33}}],
                       [{tuple,
                         [{generated,true},{location,{1543,33}}],
                         [{atom,{1543,33},compile},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},'_'},
                          {var,{1543,33},rec16},
                          {var,{1543,33},'_'}]}],
                       [],
                       [{var,{1543,33},rec16}]},
                      {clause,
                       [{generated,true},{location,{1543,33}}],
                       [{var,{1543,33},rec16}],
                       [],
                       [{call,
                         [{generated,true},{location,{1543,33}}],
                         {remote,
                          [{generated,true},{location,{1543,33}}],
                          {atom,
                           [{generated,true},{location,{1543,33}}],
                           erlang},
                          {atom,
                           [{generated,true},{location,{1543,33}}],
                           error}},
                         [{tuple,
                           [{generated,true},{location,{1543,33}}],
                           [{atom,
                             [{generated,true},{location,{1543,33}}],
                             badrecord},
                            {var,{1543,33},rec16}]}]}]}]},
                    {var,{1543,54},'Ws'}}},
                  {match,{1543,13},{var,{1543,13},rec15},{var,{1543,13},'St'}},
                  {'case',
                   {1543,24},
                   {var,{1543,13},rec15},
                   [{clause,
                     {1543,24},
                     [{tuple,
                       {1543,24},
                       [{atom,{1543,24},compile},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'},
                        {var,{1543,24},'_'}]}],
                     [],
                     [{call,
                       {1543,24},
                       {remote,
                        {1543,24},
                        {atom,{1543,24},erlang},
                        {atom,{1543,24},setelement}},
                       [{integer,{1543,24},13},
                        {var,{1543,13},rec15},
                        {var,{1543,24},rec14}]}]},
                    {clause,
                     [{generated,true},{location,{1543,24}}],
                     [{var,[{generated,true},{location,{1543,24}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{1543,24}}],
                       {remote,
                        [{generated,true},{location,{1543,24}}],
                        {atom,[{generated,true},{location,{1543,24}}],erlang},
                        {atom,[{generated,true},{location,{1543,24}}],error}},
                       [{tuple,
                         [{generated,true},{location,{1543,24}}],
                         [{atom,
                           [{generated,true},{location,{1543,24}}],
                           badrecord},
                          {var,{1543,13},rec15}]}]}]}]}]}]}]},
            {clause,
             {1544,21},
             [{tuple,{1544,21},[{atom,{1544,22},error},{var,{1544,28},'Es'}]}],
             [],
             [{debug_line,1545,321},
              {tuple,
               {1545,25},
               [{atom,{1545,26},error},
                {block,
                 {1545,32},
                 [{match,
                   {1545,43},
                   {var,{1545,43},rec17},
                   {op,
                    {1545,68},
                    '++',
                    {'case',
                     {1545,50},
                     {var,{1545,50},'St'},
                     [{clause,
                       [{generated,true},{location,{1545,50}}],
                       [{tuple,
                         [{generated,true},{location,{1545,50}}],
                         [{atom,{1545,50},compile},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'},
                          {var,{1545,50},rec19},
                          {var,{1545,50},'_'},
                          {var,{1545,50},'_'}]}],
                       [],
                       [{var,{1545,50},rec19}]},
                      {clause,
                       [{generated,true},{location,{1545,50}}],
                       [{var,{1545,50},rec19}],
                       [],
                       [{call,
                         [{generated,true},{location,{1545,50}}],
                         {remote,
                          [{generated,true},{location,{1545,50}}],
                          {atom,
                           [{generated,true},{location,{1545,50}}],
                           erlang},
                          {atom,
                           [{generated,true},{location,{1545,50}}],
                           error}},
                         [{tuple,
                           [{generated,true},{location,{1545,50}}],
                           [{atom,
                             [{generated,true},{location,{1545,50}}],
                             badrecord},
                            {var,{1545,50},rec19}]}]}]}]},
                    {var,{1545,71},'Es'}}},
                  {match,{1545,32},{var,{1545,32},rec18},{var,{1545,32},'St'}},
                  {'case',
                   {1545,43},
                   {var,{1545,32},rec18},
                   [{clause,
                     {1545,43},
                     [{tuple,
                       {1545,43},
                       [{atom,{1545,43},compile},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'},
                        {var,{1545,43},'_'}]}],
                     [],
                     [{call,
                       {1545,43},
                       {remote,
                        {1545,43},
                        {atom,{1545,43},erlang},
                        {atom,{1545,43},setelement}},
                       [{integer,{1545,43},12},
                        {var,{1545,32},rec18},
                        {var,{1545,43},rec17}]}]},
                    {clause,
                     [{generated,true},{location,{1545,43}}],
                     [{var,[{generated,true},{location,{1545,43}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{1545,43}}],
                       {remote,
                        [{generated,true},{location,{1545,43}}],
                        {atom,[{generated,true},{location,{1545,43}}],erlang},
                        {atom,[{generated,true},{location,{1545,43}}],error}},
                       [{tuple,
                         [{generated,true},{location,{1545,43}}],
                         [{atom,
                           [{generated,true},{location,{1545,43}}],
                           badrecord},
                          {var,{1545,32},rec18}]}]}]}]}]}]}]},
            {clause,
             {1546,21},
             [{var,{1546,21},'Other'}],
             [],
             [{debug_line,1547,322},
              {match,
               {1547,25},
               {var,{1547,25},'Es'},
               {cons,
                {1547,30},
                {tuple,
                 {1547,31},
                 [{'case',
                   {1547,32},
                   {var,{1547,32},'St'},
                   [{clause,
                     [{generated,true},{location,{1547,32}}],
                     [{tuple,
                       [{generated,true},{location,{1547,32}}],
                       [{atom,{1547,32},compile},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},rec20},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'},
                        {var,{1547,32},'_'}]}],
                     [],
                     [{var,{1547,32},rec20}]},
                    {clause,
                     [{generated,true},{location,{1547,32}}],
                     [{var,{1547,32},rec20}],
                     [],
                     [{call,
                       [{generated,true},{location,{1547,32}}],
                       {remote,
                        [{generated,true},{location,{1547,32}}],
                        {atom,[{generated,true},{location,{1547,32}}],erlang},
                        {atom,[{generated,true},{location,{1547,32}}],error}},
                       [{tuple,
                         [{generated,true},{location,{1547,32}}],
                         [{atom,
                           [{generated,true},{location,{1547,32}}],
                           badrecord},
                          {var,{1547,32},rec20}]}]}]}]},
                  {cons,
                   {1547,49},
                   {tuple,
                    {1547,50},
                    [{atom,{1547,51},none},
                     {atom,{1547,57},compile},
                     {tuple,
                      {1547,64},
                      [{atom,{1547,65},bad_return},
                       {var,{1547,76},'Mod'},
                       {var,{1547,80},'Other'}]}]},
                   {nil,{1547,87}}}]},
                {nil,{1547,89}}}},
              {debug_line,1548,323},
              {tuple,
               {1548,25},
               [{atom,{1548,26},error},
                {block,
                 {1548,32},
                 [{match,
                   {1548,43},
                   {var,{1548,43},rec21},
                   {op,
                    {1548,68},
                    '++',
                    {'case',
                     {1548,50},
                     {var,{1548,50},'St'},
                     [{clause,
                       [{generated,true},{location,{1548,50}}],
                       [{tuple,
                         [{generated,true},{location,{1548,50}}],
                         [{atom,{1548,50},compile},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'},
                          {var,{1548,50},rec23},
                          {var,{1548,50},'_'},
                          {var,{1548,50},'_'}]}],
                       [],
                       [{var,{1548,50},rec23}]},
                      {clause,
                       [{generated,true},{location,{1548,50}}],
                       [{var,{1548,50},rec23}],
                       [],
                       [{call,
                         [{generated,true},{location,{1548,50}}],
                         {remote,
                          [{generated,true},{location,{1548,50}}],
                          {atom,
                           [{generated,true},{location,{1548,50}}],
                           erlang},
                          {atom,
                           [{generated,true},{location,{1548,50}}],
                           error}},
                         [{tuple,
                           [{generated,true},{location,{1548,50}}],
                           [{atom,
                             [{generated,true},{location,{1548,50}}],
                             badrecord},
                            {var,{1548,50},rec23}]}]}]}]},
                    {var,{1548,71},'Es'}}},
                  {match,{1548,32},{var,{1548,32},rec22},{var,{1548,32},'St'}},
                  {'case',
                   {1548,43},
                   {var,{1548,32},rec22},
                   [{clause,
                     {1548,43},
                     [{tuple,
                       {1548,43},
                       [{atom,{1548,43},compile},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'},
                        {var,{1548,43},'_'}]}],
                     [],
                     [{call,
                       {1548,43},
                       {remote,
                        {1548,43},
                        {atom,{1548,43},erlang},
                        {atom,{1548,43},setelement}},
                       [{integer,{1548,43},12},
                        {var,{1548,32},rec22},
                        {var,{1548,43},rec21}]}]},
                    {clause,
                     [{generated,true},{location,{1548,43}}],
                     [{var,[{generated,true},{location,{1548,43}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{1548,43}}],
                       {remote,
                        [{generated,true},{location,{1548,43}}],
                        {atom,[{generated,true},{location,{1548,43}}],erlang},
                        {atom,[{generated,true},{location,{1548,43}}],error}},
                       [{tuple,
                         [{generated,true},{location,{1548,43}}],
                         [{atom,
                           [{generated,true},{location,{1548,43}}],
                           badrecord},
                          {var,{1548,32},rec22}]}]}]}]}]}]}]}]}]}]}}},
    {debug_line,1551,324},
    {cons,
     {1551,5},
     {tuple,{1551,6},[{var,{1551,7},'Mod'},{var,{1551,11},'F'}]},
     {call,
      {1551,14},
      {atom,{1551,14},select_passes},
      [{var,{1551,28},'Ps'},{var,{1551,32},'Opts'}]}}]},
  {clause,
   {1552,1},
   [{cons,
     {1552,15},
     {match,
      {1552,16},
      {tuple,{1552,16},[{var,{1552,17},'_'},{var,{1552,19},'Fun'}]},
      {var,{1552,24},'P'}},
     {var,{1552,26},'Ps'}},
    {var,{1552,31},'Opts'}],
   [[{call,
      {1552,42},
      {remote,{1552,42},{atom,{1552,42},erlang},{atom,{1552,42},is_function}},
      [{var,{1552,54},'Fun'}]}]],
   [{debug_line,1553,325},
    {cons,
     {1553,5},
     {var,{1553,6},'P'},
     {call,
      {1553,8},
      {atom,{1553,8},select_passes},
      [{var,{1553,22},'Ps'},{var,{1553,26},'Opts'}]}}]},
  {clause,
   {1554,1},
   [{cons,
     {1554,15},
     {match,
      {1554,16},
      {tuple,
       {1554,16},
       [{var,{1554,17},'_'},{var,{1554,19},'Test'},{var,{1554,24},'Fun'}]},
      {var,{1554,29},'P'}},
     {var,{1554,31},'Ps'}},
    {var,{1554,36},'Opts'}],
   [[{call,
      {1554,47},
      {remote,{1554,47},{atom,{1554,47},erlang},{atom,{1554,47},is_function}},
      [{var,{1554,59},'Test'}]},
     {call,
      {1555,12},
      {remote,{1555,12},{atom,{1555,12},erlang},{atom,{1555,12},is_function}},
      [{var,{1555,24},'Fun'}]}]],
   [{debug_line,1556,326},
    {cons,
     {1556,5},
     {var,{1556,6},'P'},
     {call,
      {1556,8},
      {atom,{1556,8},select_passes},
      [{var,{1556,22},'Ps'},{var,{1556,26},'Opts'}]}}]},
  {clause,
   {1557,1},
   [{cons,
     {1557,15},
     {tuple,{1557,16},[{atom,{1557,17},src_listing},{var,{1557,29},'Ext'}]},
     {var,{1557,34},'_'}},
    {var,{1557,38},'_Opts'}],
   [],
   [{debug_line,1558,327},
    {cons,
     {1558,5},
     {tuple,
      {1558,6},
      [{atom,{1558,7},listing},
       {'fun',
        {1558,15},
        {clauses,
         [{clause,
           {1558,19},
           [{var,{1558,20},'Code'},{var,{1558,26},'St'}],
           [],
           [{call,
             {1558,33},
             {atom,{1558,33},src_listing},
             [{var,{1558,45},'Ext'},
              {var,{1558,50},'Code'},
              {var,{1558,56},'St'}]}]}]}}]},
     {nil,{1558,64}}}]},
  {clause,
   {1559,1},
   [{cons,
     {1559,15},
     {tuple,{1559,16},[{atom,{1559,17},listing},{var,{1559,25},'Ext'}]},
     {var,{1559,30},'_'}},
    {var,{1559,34},'_Opts'}],
   [],
   [{debug_line,1560,328},
    {cons,
     {1560,5},
     {tuple,
      {1560,6},
      [{atom,{1560,7},listing},
       {'fun',
        {1560,15},
        {clauses,
         [{clause,
           {1560,19},
           [{var,{1560,20},'Code'},{var,{1560,26},'St'}],
           [],
           [{call,
             {1560,33},
             {atom,{1560,33},listing},
             [{var,{1560,41},'Ext'},
              {var,{1560,46},'Code'},
              {var,{1560,52},'St'}]}]}]}}]},
     {nil,{1560,60}}}]},
  {clause,
   {1561,1},
   [{cons,{1561,15},{atom,{1561,16},done},{var,{1561,21},'_'}},
    {var,{1561,25},'_Opts'}],
   [],
   [{debug_line,1562,329},{nil,{1562,5}}]},
  {clause,
   {1563,1},
   [{cons,
     {1563,15},
     {tuple,{1563,16},[{atom,{1563,17},done},{var,{1563,22},'Ext'}]},
     {var,{1563,27},'_'}},
    {var,{1563,31},'Opts'}],
   [],
   [{debug_line,1564,330},
    {call,
     {1564,5},
     {atom,{1564,5},select_passes},
     [{block,0,
       [{cons,
         {1564,19},
         {tuple,
          {1564,20},
          [{atom,{1564,21},unless},
           {atom,{1564,28},binary},
           {tuple,
            {1564,35},
            [{atom,{1564,36},listing},{var,{1564,44},'Ext'}]}]},
         {nil,{1564,49}}}]},
      {var,{1564,52},'Opts'}]}]},
  {clause,
   {1565,1},
   [{cons,
     {1565,15},
     {tuple,
      {1565,16},
      [{atom,{1565,17},iff},{var,{1565,21},'Flag'},{var,{1565,26},'Pass'}]},
     {var,{1565,32},'Ps'}},
    {var,{1565,37},'Opts'}],
   [],
   [{debug_line,1566,331},
    {call,
     {1566,5},
     {atom,{1566,5},select_cond},
     [{var,{1566,17},'Flag'},
      {atom,{1566,23},true},
      {var,{1566,29},'Pass'},
      {var,{1566,35},'Ps'},
      {var,{1566,39},'Opts'}]}]},
  {clause,
   {1567,1},
   [{cons,
     {1567,15},
     {tuple,
      {1567,16},
      [{atom,{1567,17},unless},{var,{1567,24},'Flag'},{var,{1567,29},'Pass'}]},
     {var,{1567,35},'Ps'}},
    {var,{1567,40},'Opts'}],
   [],
   [{debug_line,1568,332},
    {call,
     {1568,5},
     {atom,{1568,5},select_cond},
     [{var,{1568,17},'Flag'},
      {atom,{1568,23},false},
      {var,{1568,30},'Pass'},
      {var,{1568,36},'Ps'},
      {var,{1568,40},'Opts'}]}]},
  {clause,
   {1569,1},
   [{cons,
     {1569,15},
     {tuple,{1569,16},[{atom,{1569,17},delay},{var,{1569,23},'Passes0'}]},
     {var,{1569,32},'Ps'}},
    {var,{1569,37},'Opts'}],
   [[{call,
      {1569,48},
      {remote,{1569,48},{atom,{1569,48},erlang},{atom,{1569,48},is_list}},
      [{var,{1569,56},'Passes0'}]}]],
   [{debug_line,1574,333},
    {'case',
     {1574,5},
     {call,
      {1574,10},
      {atom,{1574,10},select_list_passes},
      [{var,{1574,29},'Passes0'},{var,{1574,38},'Opts'}]},
     [{clause,
       {1575,2},
       [{tuple,{1575,2},[{atom,{1575,3},done},{var,{1575,8},'Passes'}]}],
       [],
       [{debug_line,1576,334},
        {cons,
         {1576,6},
         {tuple,{1576,7},[{atom,{1576,8},delay},{var,{1576,14},'Passes'}]},
         {nil,{1576,21}}}]},
      {clause,
       {1577,2},
       [{tuple,{1577,2},[{atom,{1577,3},not_done},{var,{1577,12},'Passes'}]}],
       [],
       [{debug_line,1578,335},
        {cons,
         {1578,6},
         {tuple,{1578,7},[{atom,{1578,8},delay},{var,{1578,14},'Passes'}]},
         {call,
          {1578,22},
          {atom,{1578,22},select_passes},
          [{var,{1578,36},'Ps'},{var,{1578,40},'Opts'}]}}]}]}]},
  {clause,
   {1580,1},
   [{nil,{1580,15}},{var,{1580,19},'_Opts'}],
   [],
   [{debug_line,1581,336},{nil,{1581,5}}]},
  {clause,
   {1582,1},
   [{cons,{1582,15},{var,{1582,16},'List'},{var,{1582,21},'Ps'}},
    {var,{1582,26},'Opts'}],
   [[{call,
      {1582,37},
      {remote,{1582,37},{atom,{1582,37},erlang},{atom,{1582,37},is_list}},
      [{var,{1582,45},'List'}]}]],
   [{debug_line,1583,337},
    {'case',
     {1583,5},
     {call,
      {1583,10},
      {atom,{1583,10},select_passes},
      [{var,{1583,24},'List'},{var,{1583,30},'Opts'}]},
     [{clause,
       {1584,2},
       [{nil,{1584,2}}],
       [],
       [{debug_line,1584,338},
        {call,
         {1584,8},
         {atom,{1584,8},select_passes},
         [{var,{1584,22},'Ps'},{var,{1584,26},'Opts'}]}]},
      {clause,
       {1585,2},
       [{var,{1585,2},'Nested'}],
       [],
       [{debug_line,1586,339},
        {'case',
         {1586,6},
         {call,
          {1586,11},
          {remote,{1586,11},{atom,{1586,11},lists},{atom,{1586,11},last}},
          [{var,{1586,16},'Nested'}]},
         [{clause,
           {1587,3},
           [{tuple,{1587,3},[{atom,{1587,4},listing},{var,{1587,12},'_Fun'}]}],
           [],
           [{debug_line,1587,340},{var,{1587,21},'Nested'}]},
          {clause,
           {1588,3},
           [{var,{1588,3},'_Other'}],
           [],
           [{debug_line,1588,341},
            {op,
             {1588,28},
             '++',
             {var,{1588,21},'Nested'},
             {call,
              {1588,31},
              {atom,{1588,31},select_passes},
              [{var,{1588,45},'Ps'},{var,{1588,49},'Opts'}]}}]}]}]}]}]}]}.
{function,
    {1592,1},
    select_cond,5,
    [{clause,
         {1592,1},
         [{var,{1592,1},'_'},
          {var,{1592,1},'_'},
          {var,{1592,1},'_'},
          {var,{1592,1},'_'},
          {var,{1592,1},'_'}],
         [[{call,
               {1592,1},
               {remote,
                   {1592,1},
                   {atom,{1592,1},fake},
                   {atom,{1592,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1592,342},{atom,{1592,1},ignore}]},
     {clause,
         {1592,1},
         [{var,{1592,13},'Flag'},
          {var,{1592,19},'ShouldBe'},
          {var,{1592,29},'Pass'},
          {var,{1592,35},'Ps'},
          {var,{1592,39},'Opts'}],
         [],
         [{debug_line,1593,343},
          {match,
              {1593,5},
              {var,{1593,5},'ShouldNotBe'},
              {op,{1593,19},'not',{var,{1593,23},'ShouldBe'}}},
          {debug_line,1594,344},
          {'case',
              {1594,5},
              {call,
                  {1594,10},
                  {remote,
                      {1594,10},
                      {atom,{1594,10},lists},
                      {atom,{1594,10},member}},
                  [{var,{1594,17},'Flag'},{var,{1594,23},'Opts'}]},
              [{clause,
                   {1595,2},
                   [{var,{1595,2},'ShouldBe'}],
                   [],
                   [{debug_line,1595,345},
                    {call,
                        {1595,17},
                        {atom,{1595,17},select_passes},
                        [{block,0,
                             [{cons,
                                  {1595,31},
                                  {var,{1595,32},'Pass'},
                                  {var,{1595,37},'Ps'}}]},
                         {var,{1595,42},'Opts'}]}]},
               {clause,
                   {1596,2},
                   [{var,{1596,2},'ShouldNotBe'}],
                   [],
                   [{debug_line,1596,346},
                    {call,
                        {1596,17},
                        {atom,{1596,17},select_passes},
                        [{var,{1596,31},'Ps'},{var,{1596,35},'Opts'}]}]}]}]}]}.
{function,{1603,1},
          select_list_passes,2,
          [{clause,{1603,1},
                   [{var,{1603,1},'_'},{var,{1603,1},'_'}],
                   [[{call,{1603,1},
                           {remote,{1603,1},
                                   {atom,{1603,1},fake},
                                   {atom,{1603,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1603,347},{atom,{1603,1},ignore}]},
           {clause,{1603,1},
                   [{var,{1603,20},'Ps'},{var,{1603,24},'Opts'}],
                   [],
                   [{debug_line,1604,348},
                    {call,{1604,5},
                          {atom,{1604,5},select_list_passes_1},
                          [{var,{1604,26},'Ps'},
                           {var,{1604,30},'Opts'},
                           {nil,{1604,36}}]}]}]}.
{function,
 {1606,1},
 select_list_passes_1,3,
 [{clause,
   {1606,1},
   [{var,{1606,1},'_'},{var,{1606,1},'_'},{var,{1606,1},'_'}],
   [[{call,
      {1606,1},
      {remote,{1606,1},{atom,{1606,1},fake},{atom,{1606,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1606,349},{atom,{1606,1},ignore}]},
  {clause,
   {1606,1},
   [{cons,
     {1606,22},
     {tuple,
      {1606,23},
      [{atom,{1606,24},iff},
       {var,{1606,28},'Flag'},
       {match,
        {1606,33},
        {tuple,{1606,33},[{atom,{1606,34},listing},{var,{1606,42},'_'}]},
        {var,{1606,45},'Listing'}}]},
     {var,{1606,54},'Ps'}},
    {var,{1606,59},'Opts'},
    {var,{1606,65},'Acc'}],
   [],
   [{debug_line,1607,350},
    {'case',
     {1607,5},
     {call,
      {1607,10},
      {remote,{1607,10},{atom,{1607,10},lists},{atom,{1607,10},member}},
      [{var,{1607,17},'Flag'},{var,{1607,23},'Opts'}]},
     [{clause,
       {1608,2},
       [{atom,{1608,2},true}],
       [],
       [{debug_line,1608,351},
        {tuple,
         {1608,10},
         [{atom,{1608,11},done},
          {call,
           {1608,16},
           {remote,{1608,16},{atom,{1608,16},lists},{atom,{1608,16},reverse}},
           [{var,{1608,24},'Acc'},
            {block,0,
             [{cons,
               {1608,29},
               {var,{1608,30},'Listing'},
               {nil,{1608,37}}}]}]}]}]},
      {clause,
       {1609,2},
       [{atom,{1609,2},false}],
       [],
       [{debug_line,1609,352},
        {call,
         {1609,11},
         {atom,{1609,11},select_list_passes_1},
         [{var,{1609,32},'Ps'},
          {var,{1609,36},'Opts'},
          {var,{1609,42},'Acc'}]}]}]}]},
  {clause,
   {1611,1},
   [{cons,
     {1611,22},
     {tuple,
      {1611,23},
      [{atom,{1611,24},iff},
       {var,{1611,28},'Flag'},
       {tuple,{1611,33},[{atom,{1611,34},done},{var,{1611,39},'Ext'}]}]},
     {var,{1611,45},'Ps'}},
    {var,{1611,50},'Opts'},
    {var,{1611,56},'Acc'}],
   [],
   [{debug_line,1612,353},
    {'case',
     {1612,5},
     {call,
      {1612,10},
      {remote,{1612,10},{atom,{1612,10},lists},{atom,{1612,10},member}},
      [{var,{1612,17},'Flag'},{var,{1612,23},'Opts'}]},
     [{clause,
       {1613,2},
       [{atom,{1613,2},false}],
       [],
       [{debug_line,1614,354},
        {call,
         {1614,6},
         {atom,{1614,6},select_list_passes_1},
         [{var,{1614,27},'Ps'},
          {var,{1614,31},'Opts'},
          {var,{1614,37},'Acc'}]}]},
      {clause,
       {1615,2},
       [{atom,{1615,2},true}],
       [],
       [{debug_line,1616,355},
        {tuple,
         {1616,6},
         [{atom,{1616,7},done},
          {'case',
           {1616,12},
           {call,
            {1616,17},
            {remote,{1616,17},{atom,{1616,17},lists},{atom,{1616,17},member}},
            [{atom,{1616,24},binary},{var,{1616,32},'Opts'}]},
           [{clause,
             {1617,9},
             [{atom,{1617,9},false}],
             [],
             [{debug_line,1617,356},
              {call,
               {1617,18},
               {remote,
                {1617,18},
                {atom,{1617,18},lists},
                {atom,{1617,18},reverse}},
               [{var,{1617,26},'Acc'},
                {block,0,
                 [{cons,
                   {1617,31},
                   {tuple,
                    {1617,32},
                    [{atom,{1617,33},listing},{var,{1617,41},'Ext'}]},
                   {nil,{1617,45}}}]}]}]},
            {clause,
             {1618,9},
             [{atom,{1618,9},true}],
             [],
             [{debug_line,1618,357},
              {call,
               {1618,17},
               {remote,
                {1618,17},
                {atom,{1618,17},lists},
                {atom,{1618,17},reverse}},
               [{var,{1618,25},'Acc'}]}]}]}]}]}]}]},
  {clause,
   {1621,1},
   [{cons,
     {1621,22},
     {tuple,
      {1621,23},
      [{match,{1621,24},{atom,{1621,24},iff},{var,{1621,28},'Op'}},
       {var,{1621,31},'Flag'},
       {var,{1621,36},'List0'}]},
     {var,{1621,43},'Ps'}},
    {var,{1621,48},'Opts'},
    {var,{1621,54},'Acc'}],
   [[{call,
      {1621,64},
      {remote,{1621,64},{atom,{1621,64},erlang},{atom,{1621,64},is_list}},
      [{var,{1621,72},'List0'}]}]],
   [{debug_line,1622,358},
    {'case',
     {1622,5},
     {call,
      {1622,10},
      {atom,{1622,10},select_list_passes},
      [{var,{1622,29},'List0'},{var,{1622,36},'Opts'}]},
     [{clause,
       {1623,2},
       [{tuple,{1623,2},[{atom,{1623,3},done},{var,{1623,8},'List'}]}],
       [],
       [{debug_line,1623,359},
        {tuple,
         {1623,17},
         [{atom,{1623,18},done},
          {op,
           {1623,36},
           '++',
           {call,
            {1623,23},
            {remote,{1623,23},{atom,{1623,23},lists},{atom,{1623,23},reverse}},
            [{var,{1623,31},'Acc'}]},
           {var,{1623,39},'List'}}]}]},
      {clause,
       {1624,2},
       [{tuple,{1624,2},[{atom,{1624,3},not_done},{var,{1624,12},'List'}]}],
       [],
       [{debug_line,1624,360},
        {call,
         {1624,21},
         {atom,{1624,21},select_list_passes_1},
         [{var,{1624,42},'Ps'},
          {var,{1624,46},'Opts'},
          {block,0,
           [{cons,
             {1624,52},
             {tuple,
              {1624,53},
              [{var,{1624,54},'Op'},
               {var,{1624,57},'Flag'},
               {var,{1624,62},'List'}]},
             {var,{1624,68},'Acc'}}]}]}]}]}]},
  {clause,
   {1626,1},
   [{cons,
     {1626,22},
     {tuple,
      {1626,23},
      [{match,{1626,24},{atom,{1626,24},unless},{var,{1626,31},'Op'}},
       {var,{1626,34},'Flag'},
       {var,{1626,39},'List0'}]},
     {var,{1626,46},'Ps'}},
    {var,{1626,51},'Opts'},
    {var,{1626,57},'Acc'}],
   [[{call,
      {1626,67},
      {remote,{1626,67},{atom,{1626,67},erlang},{atom,{1626,67},is_list}},
      [{var,{1626,75},'List0'}]}]],
   [{debug_line,1627,361},
    {'case',
     {1627,5},
     {call,
      {1627,10},
      {atom,{1627,10},select_list_passes},
      [{var,{1627,29},'List0'},{var,{1627,36},'Opts'}]},
     [{clause,
       {1628,2},
       [{tuple,{1628,2},[{atom,{1628,3},done},{var,{1628,8},'List'}]}],
       [],
       [{debug_line,1628,362},
        {tuple,
         {1628,17},
         [{atom,{1628,18},done},
          {op,
           {1628,36},
           '++',
           {call,
            {1628,23},
            {remote,{1628,23},{atom,{1628,23},lists},{atom,{1628,23},reverse}},
            [{var,{1628,31},'Acc'}]},
           {var,{1628,39},'List'}}]}]},
      {clause,
       {1629,2},
       [{tuple,{1629,2},[{atom,{1629,3},not_done},{var,{1629,12},'List'}]}],
       [],
       [{debug_line,1629,363},
        {call,
         {1629,21},
         {atom,{1629,21},select_list_passes_1},
         [{var,{1629,42},'Ps'},
          {var,{1629,46},'Opts'},
          {block,0,
           [{cons,
             {1629,52},
             {tuple,
              {1629,53},
              [{var,{1629,54},'Op'},
               {var,{1629,57},'Flag'},
               {var,{1629,62},'List'}]},
             {var,{1629,68},'Acc'}}]}]}]}]}]},
  {clause,
   {1631,1},
   [{cons,{1631,22},{var,{1631,23},'P'},{var,{1631,25},'Ps'}},
    {var,{1631,30},'Opts'},
    {var,{1631,36},'Acc'}],
   [],
   [{debug_line,1632,364},
    {call,
     {1632,5},
     {atom,{1632,5},select_list_passes_1},
     [{var,{1632,26},'Ps'},
      {var,{1632,30},'Opts'},
      {block,0,
       [{cons,{1632,36},{var,{1632,37},'P'},{var,{1632,39},'Acc'}}]}]}]},
  {clause,
   {1633,1},
   [{nil,{1633,22}},{var,{1633,26},'_'},{var,{1633,29},'Acc'}],
   [],
   [{debug_line,1634,365},
    {tuple,
     {1634,5},
     [{atom,{1634,6},not_done},
      {call,
       {1634,15},
       {remote,{1634,15},{atom,{1634,15},lists},{atom,{1634,15},reverse}},
       [{var,{1634,23},'Acc'}]}]}]}]}.
{function,
 {1636,1},
 make_ssa_check_pass,1,
 [{clause,
   {1636,1},
   [{var,{1636,1},'_'}],
   [[{call,
      {1636,1},
      {remote,{1636,1},{atom,{1636,1},fake},{atom,{1636,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1636,366},{atom,{1636,1},ignore}]},
  {clause,
   {1636,1},
   [{var,{1636,21},'PassFlag'}],
   [],
   [{debug_line,1637,367},
    {match,
     {1637,5},
     {var,{1637,5},'F'},
     {'fun',
      {1637,9},
      {clauses,
       [{clause,
         {1637,13},
         [{var,{1637,14},'Code'},{var,{1637,20},'St'}],
         [],
         [{debug_line,1638,368},
          {'case',
           {1638,17},
           {call,
            {1638,22},
            {remote,
             {1638,36},
             {atom,{1638,22},beam_ssa_check},
             {atom,{1638,37},module}},
            [{var,{1638,44},'Code'},{var,{1638,50},'PassFlag'}]},
           [{clause,
             {1639,21},
             [{atom,{1639,21},ok}],
             [],
             [{debug_line,1639,369},
              {tuple,
               {1639,27},
               [{atom,{1639,28},ok},
                {var,{1639,32},'Code'},
                {var,{1639,38},'St'}]}]},
            {clause,
             {1640,21},
             [{tuple,
               {1640,21},
               [{atom,{1640,22},error},{var,{1640,29},'Errors'}]}],
             [],
             [{debug_line,1641,370},
              {tuple,
               {1641,25},
               [{atom,{1641,26},error},
                {block,
                 {1641,33},
                 [{match,
                   {1641,44},
                   {var,{1641,44},rec24},
                   {op,
                    {1641,68},
                    '++',
                    {'case',
                     {1641,51},
                     {var,{1641,51},'St'},
                     [{clause,
                       [{generated,true},{location,{1641,51}}],
                       [{tuple,
                         [{generated,true},{location,{1641,51}}],
                         [{atom,{1641,51},compile},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'},
                          {var,{1641,51},rec26},
                          {var,{1641,51},'_'},
                          {var,{1641,51},'_'}]}],
                       [],
                       [{var,{1641,51},rec26}]},
                      {clause,
                       [{generated,true},{location,{1641,51}}],
                       [{var,{1641,51},rec26}],
                       [],
                       [{call,
                         [{generated,true},{location,{1641,51}}],
                         {remote,
                          [{generated,true},{location,{1641,51}}],
                          {atom,
                           [{generated,true},{location,{1641,51}}],
                           erlang},
                          {atom,
                           [{generated,true},{location,{1641,51}}],
                           error}},
                         [{tuple,
                           [{generated,true},{location,{1641,51}}],
                           [{atom,
                             [{generated,true},{location,{1641,51}}],
                             badrecord},
                            {var,{1641,51},rec26}]}]}]}]},
                    {var,{1641,70},'Errors'}}},
                  {match,{1641,33},{var,{1641,33},rec25},{var,{1641,33},'St'}},
                  {'case',
                   {1641,44},
                   {var,{1641,33},rec25},
                   [{clause,
                     {1641,44},
                     [{tuple,
                       {1641,44},
                       [{atom,{1641,44},compile},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'},
                        {var,{1641,44},'_'}]}],
                     [],
                     [{call,
                       {1641,44},
                       {remote,
                        {1641,44},
                        {atom,{1641,44},erlang},
                        {atom,{1641,44},setelement}},
                       [{integer,{1641,44},12},
                        {var,{1641,33},rec25},
                        {var,{1641,44},rec24}]}]},
                    {clause,
                     [{generated,true},{location,{1641,44}}],
                     [{var,[{generated,true},{location,{1641,44}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{1641,44}}],
                       {remote,
                        [{generated,true},{location,{1641,44}}],
                        {atom,[{generated,true},{location,{1641,44}}],erlang},
                        {atom,[{generated,true},{location,{1641,44}}],error}},
                       [{tuple,
                         [{generated,true},{location,{1641,44}}],
                         [{atom,
                           [{generated,true},{location,{1641,44}}],
                           badrecord},
                          {var,{1641,33},rec25}]}]}]}]}]}]}]}]}]}]}}},
    {debug_line,1644,371},
    {tuple,
     {1644,5},
     [{atom,{1644,6},iff},
      {var,{1644,11},'PassFlag'},
      {tuple,{1644,21},[{var,{1644,22},'PassFlag'},{var,{1644,32},'F'}]}]}]}]}.
{function,
 {1648,1},
 standard_passes,0,
 [{clause,
   {1648,1},
   [],
   [[{call,
      {1648,1},
      {remote,{1648,1},{atom,{1648,1},fake},{atom,{1648,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1648,372},{atom,{1648,1},ignore}]},
  {clause,
   {1648,1},
   [],[],
   [{debug_line,1649,373},
    {cons,
     {1649,5},
     {tuple,
      {1649,7},
      [{atom,{1649,12},transform_module},
       {'fun',{1649,12},{function,transform_module,2}}]},
     {cons,
      {1651,6},
      {tuple,
       {1651,6},
       [{atom,{1651,7},iff},
        {atom,{1651,11},makedep_side_effect},
        {tuple,
         {1651,32},
         [{atom,{1651,37},makedep_and_output},
          {'fun',{1651,37},{function,makedep_and_output,2}}]}]},
      {cons,
       {1652,6},
       {tuple,
        {1652,6},
        [{atom,{1652,7},iff},
         {atom,{1652,11},makedep},
         {cons,
          {1652,19},
          {tuple,
           {1653,4},
           [{atom,{1653,9},makedep},{'fun',{1653,9},{function,makedep,2}}]},
          {cons,
           {1654,3},
           {tuple,
            {1654,3},
            [{atom,{1654,4},unless},
             {atom,{1654,11},binary},
             {tuple,
              {1654,19},
              [{atom,{1654,24},makedep_output},
               {'fun',{1654,24},{function,makedep_output,2}}]}]},
           {nil,{1655,8}}}}]},
       {cons,
        {1656,6},
        {tuple,
         {1656,6},
         [{atom,{1656,7},iff},{atom,{1656,11},makedep},{atom,{1656,19},done}]},
        {cons,
         {1658,6},
         {tuple,
          {1658,6},
          [{atom,{1658,7},iff},
           {atom,{1658,11},dpp},
           {tuple,
            {1658,17},
            [{atom,{1658,18},listing},{string,{1658,26},"pp"}]}]},
         {cons,
          {1659,7},
          {tuple,
           {1659,7},
           [{atom,{1659,12},lint_module},
            {'fun',{1659,12},{function,lint_module,2}}]},
          {cons,
           {1660,6},
           {tuple,
            {1660,6},
            [{atom,{1660,7},unless},
             {atom,{1660,14},no_docs},
             {tuple,
              {1660,23},
              [{atom,{1660,28},beam_docs},
               {'fun',{1660,28},{function,beam_docs,2}}]}]},
           {cons,
            {1661,7},
            {tuple,
             {1661,7},
             [{atom,{1661,12},remove_doc_attributes},
              {'fun',{1661,12},{function,remove_doc_attributes,2}}]},
            {cons,
             {1663,6},
             {tuple,
              {1663,6},
              [{atom,{1663,7},iff},
               {atom,{1663,11},'P'},
               {tuple,
                {1663,15},
                [{atom,{1663,16},src_listing},{string,{1663,28},"P"}]}]},
             {cons,
              {1664,6},
              {tuple,
               {1664,6},
               [{atom,{1664,7},iff},
                {atom,{1664,11},to_pp},
                {tuple,
                 {1664,19},
                 [{atom,{1664,20},done},{string,{1664,25},"P"}]}]},
              {cons,
               {1666,6},
               {tuple,
                {1666,6},
                [{atom,{1666,7},iff},
                 {atom,{1666,11},dabstr},
                 {tuple,
                  {1666,20},
                  [{atom,{1666,21},listing},{string,{1666,29},"abstr"}]}]},
               {call,
                {1667,8},
                {atom,{1667,8},abstr_passes},
                [{atom,{1667,21},verified_abstr}]}}}}}}}}}}}}]}]}.
{function,
 {1669,1},
 abstr_passes,1,
 [{clause,
   {1669,1},
   [{var,{1669,1},'_'}],
   [[{call,
      {1669,1},
      {remote,{1669,1},{atom,{1669,1},fake},{atom,{1669,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1669,374},{atom,{1669,1},ignore}]},
  {clause,
   {1669,1},
   [{var,{1669,14},'AbstrStatus'}],
   [],
   [{debug_line,1675,375},
    {op,
     {1675,9},
     '++',
     {'case',
      {1670,5},
      {var,{1670,10},'AbstrStatus'},
      [{clause,
        {1671,9},
        [{atom,{1671,9},non_verified_abstr}],
        [],
        [{debug_line,1671,376},
         {cons,
          {1671,31},
          {tuple,
           {1671,32},
           [{atom,{1671,33},unless},
            {atom,{1671,41},no_lint},
            {tuple,
             {1671,51},
             [{atom,{1671,56},lint_module},
              {'fun',{1671,56},{function,lint_module,2}}]}]},
          {cons,
           {1672,32},
           {tuple,
            {1672,32},
            [{atom,{1672,33},unless},
             {atom,{1672,40},no_docs},
             {tuple,
              {1672,49},
              [{atom,{1672,54},beam_docs},
               {'fun',{1672,54},{function,beam_docs,2}}]}]},
           {cons,
            {1673,33},
            {tuple,
             {1673,33},
             [{atom,{1673,38},remove_doc_attributes},
              {'fun',{1673,38},{function,remove_doc_attributes,2}}]},
            {nil,{1673,60}}}}}]},
       {clause,
        {1674,9},
        [{atom,{1674,9},verified_abstr}],
        [],
        [{debug_line,1674,377},{nil,{1674,27}}]}]},
     {cons,
      {1676,9},
      {tuple,
       {1678,11},
       [{atom,{1678,16},compile_directives},
        {'fun',{1678,16},{function,compile_directives,2}}]},
      {cons,
       {1680,10},
       {tuple,
        {1680,10},
        [{atom,{1680,11},delay},
         {cons,
          {1680,17},
          {tuple,
           {1680,18},
           [{atom,{1680,19},iff},
            {atom,{1680,23},debug_info},
            {tuple,
             {1680,35},
             [{atom,{1680,40},save_abstract_code},
              {'fun',{1680,40},{function,save_abstract_code,2}}]}]},
          {nil,{1680,60}}}]},
       {cons,
        {1682,10},
        {tuple,
         {1682,10},
         [{atom,{1682,11},delay},
          {cons,
           {1682,17},
           {tuple,
            {1682,18},
            [{atom,{1682,19},iff},
             {atom,{1682,23},line_coverage},
             {tuple,
              {1682,37},
              [{atom,{1682,38},pass},{atom,{1682,43},sys_coverage}]}]},
           {cons,
            {1683,18},
            {tuple,
             {1683,18},
             [{atom,{1683,19},iff},
              {atom,{1683,23},beam_debug_info},
              {tuple,
               {1683,40},
               [{atom,{1683,45},beam_debug_info},
                {'fun',{1683,45},{function,beam_debug_info,2}}]}]},
            {nil,{1683,62}}}}]},
        {cons,
         {1684,10},
         {tuple,
          {1684,10},
          [{atom,{1684,11},iff},
           {atom,{1684,15},dcover},
           {tuple,
            {1684,24},
            [{atom,{1684,25},src_listing},{string,{1684,37},"cover"}]}]},
         {cons,
          {1686,11},
          {tuple,
           {1686,11},
           [{atom,{1686,16},expand_records},
            {'fun',{1686,16},{function,expand_records,2}}]},
          {cons,
           {1687,10},
           {tuple,
            {1687,10},
            [{atom,{1687,11},iff},
             {atom,{1687,15},dexp},
             {tuple,
              {1687,22},
              [{atom,{1687,23},listing},{string,{1687,31},"expand"}]}]},
           {cons,
            {1688,10},
            {tuple,
             {1688,10},
             [{atom,{1688,11},iff},
              {atom,{1688,15},'E'},
              {tuple,
               {1688,20},
               [{atom,{1688,25},legalize_vars},
                {'fun',{1688,25},{function,legalize_vars,2}}]}]},
            {cons,
             {1689,10},
             {tuple,
              {1689,10},
              [{atom,{1689,11},iff},
               {atom,{1689,15},'E'},
               {tuple,
                {1689,19},
                [{atom,{1689,20},src_listing},{string,{1689,32},"E"}]}]},
             {cons,
              {1690,10},
              {tuple,
               {1690,10},
               [{atom,{1690,11},iff},
                {atom,{1690,15},to_exp},
                {tuple,
                 {1690,24},
                 [{atom,{1690,25},done},{string,{1690,30},"E"}]}]},
              {cons,
               {1693,11},
               {tuple,
                {1693,11},
                [{atom,{1693,16},core},{'fun',{1693,16},{function,core,2}}]},
               {cons,
                {1694,10},
                {tuple,
                 {1694,10},
                 [{atom,{1694,11},iff},
                  {atom,{1694,15},dcore},
                  {tuple,
                   {1694,23},
                   [{atom,{1694,24},listing},{string,{1694,32},"core"}]}]},
                {cons,
                 {1695,10},
                 {tuple,
                  {1695,10},
                  [{atom,{1695,11},iff},
                   {atom,{1695,15},to_core0},
                   {tuple,
                    {1695,26},
                    [{atom,{1695,27},done},{string,{1695,32},"core"}]}]},
                 {call,
                  {1696,12},
                  {atom,{1696,12},core_passes},
                  [{atom,{1696,24},verified_core}]}}}}}}}}}}}}}}]}]}.
{function,
 {1698,1},
 core_passes,1,
 [{clause,
   {1698,1},
   [{var,{1698,1},'_'}],
   [[{call,
      {1698,1},
      {remote,{1698,1},{atom,{1698,1},fake},{atom,{1698,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1698,378},{atom,{1698,1},ignore}]},
  {clause,
   {1698,1},
   [{var,{1698,13},'CoreStatus'}],
   [],
   [{debug_line,1708,379},
    {op,
     {1708,9},
     '++',
     {'case',
      {1700,5},
      {var,{1700,10},'CoreStatus'},
      [{clause,
        {1701,9},
        [{atom,{1701,9},non_verified_core}],
        [],
        [{debug_line,1702,380},
         {cons,
          {1702,13},
          {tuple,
           {1702,15},
           [{atom,{1702,20},core_lint_module},
            {'fun',{1702,20},{function,core_lint_module,2}}]},
          {cons,
           {1703,15},
           {tuple,
            {1703,15},
            [{atom,{1703,20},core_compile_directives},
             {'fun',{1703,20},{function,core_compile_directives,2}}]},
           {cons,
            {1704,14},
            {tuple,
             {1704,14},
             [{atom,{1704,15},unless},
              {atom,{1704,22},no_core_prepare},
              {tuple,
               {1704,38},
               [{atom,{1704,39},pass},{atom,{1704,44},sys_core_prepare}]}]},
            {cons,
             {1705,14},
             {tuple,
              {1705,14},
              [{atom,{1705,15},iff},
               {atom,{1705,19},dprep},
               {tuple,
                {1705,25},
                [{atom,{1705,26},listing},{string,{1705,34},"prepare"}]}]},
             {nil,{1705,45}}}}}}]},
       {clause,
        {1706,9},
        [{atom,{1706,9},verified_core}],
        [],
        [{debug_line,1707,381},
         {cons,
          {1707,13},
          {tuple,
           {1707,14},
           [{atom,{1707,15},iff},
            {atom,{1707,19},clint0},
            {tuple,
             {1707,27},
             [{atom,{1707,32},core_lint_module},
              {'fun',{1707,32},{function,core_lint_module,2}}]}]},
          {nil,{1707,50}}}]}]},
     {cons,
      {1709,9},
      {tuple,
       {1710,10},
       [{atom,{1710,11},delay},
        {cons,
         {1711,11},
         {tuple,
          {1711,12},
          [{atom,{1711,13},unless},
           {atom,{1711,20},no_copt},
           {cons,
            {1712,13},
            {tuple,
             {1712,14},
             [{atom,{1712,15},core_old_inliner},
              {'fun',{1712,32},{function,test_old_inliner,1}},
              {'fun',{1712,55},{function,core_old_inliner,2}}]},
            {cons,
             {1713,14},
             {tuple,
              {1713,14},
              [{atom,{1713,15},iff},
               {atom,{1713,19},doldinline},
               {tuple,
                {1713,30},
                [{atom,{1713,31},listing},{string,{1713,39},"oldinline"}]}]},
             {cons,
              {1714,14},
              {tuple,
               {1714,14},
               [{atom,{1714,15},unless},
                {atom,{1714,22},no_fold},
                {tuple,
                 {1714,30},
                 [{atom,{1714,31},pass},{atom,{1714,36},sys_core_fold}]}]},
              {cons,
               {1715,14},
               {tuple,
                {1715,14},
                [{atom,{1715,15},iff},
                 {atom,{1715,19},dcorefold},
                 {tuple,
                  {1715,29},
                  [{atom,{1715,30},listing},{string,{1715,38},"corefold"}]}]},
               {cons,
                {1716,14},
                {tuple,
                 {1716,14},
                 [{atom,{1716,15},core_inline_module},
                  {'fun',{1716,34},{function,test_core_inliner,1}},
                  {'fun',{1716,58},{function,core_inline_module,2}}]},
                {cons,
                 {1717,14},
                 {tuple,
                  {1717,14},
                  [{atom,{1717,15},iff},
                   {atom,{1717,19},dinline},
                   {tuple,
                    {1717,27},
                    [{atom,{1717,28},listing},{string,{1717,36},"inline"}]}]},
                 {cons,
                  {1718,14},
                  {tuple,
                   {1718,14},
                   [{atom,{1718,15},core_fold_after_inlining},
                    {'fun',{1718,40},{function,test_any_inliner,1}},
                    {'fun',
                     {1719,15},
                     {function,core_fold_module_after_inlining,2}}]},
                  {cons,
                   {1720,14},
                   {tuple,
                    {1720,14},
                    [{atom,{1720,15},iff},
                     {atom,{1720,19},dcopt},
                     {tuple,
                      {1720,25},
                      [{atom,{1720,26},listing},{string,{1720,34},"copt"}]}]},
                   {cons,
                    {1721,14},
                    {tuple,
                     {1721,14},
                     [{atom,{1721,15},unless},
                      {atom,{1721,22},no_alias},
                      {tuple,
                       {1721,31},
                       [{atom,{1721,32},pass},
                        {atom,{1721,37},sys_core_alias}]}]},
                    {cons,
                     {1722,14},
                     {tuple,
                      {1722,14},
                      [{atom,{1722,15},iff},
                       {atom,{1722,19},dalias},
                       {tuple,
                        {1722,26},
                        [{atom,{1722,27},listing},
                         {string,{1722,35},"core_alias"}]}]},
                     {cons,
                      {1723,15},
                      {tuple,
                       {1723,15},
                       [{atom,{1723,20},core_transforms},
                        {'fun',{1723,20},{function,core_transforms,2}}]},
                      {nil,{1723,36}}}}}}}}}}}}}]},
         {cons,
          {1724,12},
          {tuple,
           {1724,12},
           [{atom,{1724,13},iff},
            {atom,{1724,17},to_core},
            {tuple,
             {1724,27},
             [{atom,{1724,28},done},{string,{1724,33},"core"}]}]},
          {nil,{1724,41}}}}]},
      {call,{1725,12},{atom,{1725,12},kernel_passes},[]}}}]}]}.
{function,
 {1727,1},
 kernel_passes,0,
 [{clause,
   {1727,1},
   [],
   [[{call,
      {1727,1},
      {remote,{1727,1},{atom,{1727,1},fake},{atom,{1727,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1727,382},{atom,{1727,1},ignore}]},
  {clause,
   {1727,1},
   [],[],
   [{debug_line,1729,383},
    {cons,
     {1729,5},
     {tuple,{1729,6},[{atom,{1729,7},pass},{atom,{1729,12},sys_core_bsm}]},
     {cons,
      {1730,6},
      {tuple,
       {1730,6},
       [{atom,{1730,7},iff},
        {atom,{1730,11},dcbsm},
        {tuple,
         {1730,17},
         [{atom,{1730,18},listing},{string,{1730,26},"core_bsm"}]}]},
      {cons,
       {1732,6},
       {tuple,
        {1732,6},
        [{atom,{1732,7},iff},
         {atom,{1732,11},clint},
         {tuple,
          {1732,18},
          [{atom,{1732,23},core_lint_module},
           {'fun',{1732,23},{function,core_lint_module,2}}]}]},
       {cons,
        {1735,7},
        {tuple,
         {1735,7},
         [{atom,{1735,12},core_to_ssa},
          {'fun',{1735,12},{function,core_to_ssa,2}}]},
        {cons,
         {1736,6},
         {tuple,
          {1736,6},
          [{atom,{1736,7},iff},
           {atom,{1736,11},dssa},
           {tuple,
            {1736,16},
            [{atom,{1736,17},listing},{string,{1736,25},"ssa"}]}]},
         {cons,
          {1737,6},
          {tuple,
           {1737,6},
           [{atom,{1737,7},iff},
            {atom,{1737,11},ssalint},
            {tuple,
             {1737,19},
             [{atom,{1737,20},pass},{atom,{1737,25},beam_ssa_lint}]}]},
          {cons,
           {1738,6},
           {tuple,
            {1738,6},
            [{atom,{1738,7},delay},
             {cons,
              {1739,7},
              {tuple,
               {1739,8},
               [{atom,{1739,9},unless},
                {atom,{1739,16},no_bool_opt},
                {tuple,
                 {1739,28},
                 [{atom,{1739,29},pass},{atom,{1739,34},beam_ssa_bool}]}]},
              {cons,
               {1740,8},
               {tuple,
                {1740,8},
                [{atom,{1740,9},iff},
                 {atom,{1740,13},dbool},
                 {tuple,
                  {1740,19},
                  [{atom,{1740,20},listing},{string,{1740,28},"bool"}]}]},
               {cons,
                {1741,8},
                {tuple,
                 {1741,8},
                 [{atom,{1741,9},unless},
                  {atom,{1741,16},no_bool_opt},
                  {tuple,
                   {1741,28},
                   [{atom,{1741,29},iff},
                    {atom,{1741,33},ssalint},
                    {tuple,
                     {1741,41},
                     [{atom,{1741,42},pass},
                      {atom,{1741,47},beam_ssa_lint}]}]}]},
                {cons,
                 {1743,8},
                 {tuple,
                  {1743,8},
                  [{atom,{1743,9},unless},
                   {atom,{1743,16},no_share_opt},
                   {tuple,
                    {1743,29},
                    [{atom,{1743,30},pass},{atom,{1743,35},beam_ssa_share}]}]},
                 {cons,
                  {1744,8},
                  {tuple,
                   {1744,8},
                   [{atom,{1744,9},iff},
                    {atom,{1744,13},dssashare},
                    {tuple,
                     {1744,23},
                     [{atom,{1744,24},listing},
                      {string,{1744,32},"ssashare"}]}]},
                  {cons,
                   {1745,8},
                   {tuple,
                    {1745,8},
                    [{atom,{1745,9},unless},
                     {atom,{1745,16},no_share_opt},
                     {tuple,
                      {1745,29},
                      [{atom,{1745,30},iff},
                       {atom,{1745,34},ssalint},
                       {tuple,
                        {1745,42},
                        [{atom,{1745,43},pass},
                         {atom,{1745,48},beam_ssa_lint}]}]}]},
                   {cons,
                    {1747,8},
                    {tuple,
                     {1747,8},
                     [{atom,{1747,9},unless},
                      {atom,{1747,16},no_recv_opt},
                      {tuple,
                       {1747,28},
                       [{atom,{1747,29},pass},
                        {atom,{1747,34},beam_ssa_recv}]}]},
                    {cons,
                     {1748,8},
                     {tuple,
                      {1748,8},
                      [{atom,{1748,9},iff},
                       {atom,{1748,13},drecv},
                       {tuple,
                        {1748,19},
                        [{atom,{1748,20},listing},
                         {string,{1748,28},"recv"}]}]},
                     {cons,
                      {1749,8},
                      {tuple,
                       {1749,8},
                       [{atom,{1749,9},unless},
                        {atom,{1749,16},no_recv_opt},
                        {tuple,
                         {1749,28},
                         [{atom,{1749,29},iff},
                          {atom,{1749,33},ssalint},
                          {tuple,
                           {1749,41},
                           [{atom,{1749,42},pass},
                            {atom,{1749,47},beam_ssa_lint}]}]}]},
                      {cons,
                       {1751,8},
                       {tuple,
                        {1751,8},
                        [{atom,{1751,9},unless},
                         {atom,{1751,16},no_bsm_opt},
                         {tuple,
                          {1751,27},
                          [{atom,{1751,28},pass},
                           {atom,{1751,33},beam_ssa_bsm}]}]},
                       {cons,
                        {1752,8},
                        {tuple,
                         {1752,8},
                         [{atom,{1752,9},iff},
                          {atom,{1752,13},dssabsm},
                          {tuple,
                           {1752,21},
                           [{atom,{1752,22},listing},
                            {string,{1752,30},"ssabsm"}]}]},
                        {cons,
                         {1753,8},
                         {tuple,
                          {1753,8},
                          [{atom,{1753,9},unless},
                           {atom,{1753,16},no_bsm_opt},
                           {tuple,
                            {1753,27},
                            [{atom,{1753,28},iff},
                             {atom,{1753,32},ssalint},
                             {tuple,
                              {1753,40},
                              [{atom,{1753,41},pass},
                               {atom,{1753,46},beam_ssa_lint}]}]}]},
                         {cons,
                          {1755,8},
                          {tuple,
                           {1755,8},
                           [{atom,{1755,9},unless},
                            {atom,{1755,16},no_ssa_opt},
                            {tuple,
                             {1755,27},
                             [{atom,{1755,28},pass},
                              {atom,{1755,33},beam_ssa_opt}]}]},
                          {cons,
                           {1756,8},
                           {call,
                            {1756,8},
                            {atom,{1756,8},make_ssa_check_pass},
                            [{atom,{1756,28},post_ssa_opt}]},
                           {cons,
                            {1757,8},
                            {tuple,
                             {1757,8},
                             [{atom,{1757,9},iff},
                              {atom,{1757,13},dssaopt},
                              {tuple,
                               {1757,21},
                               [{atom,{1757,22},listing},
                                {string,{1757,30},"ssaopt"}]}]},
                            {cons,
                             {1758,8},
                             {tuple,
                              {1758,8},
                              [{atom,{1758,9},unless},
                               {atom,{1758,16},no_ssa_opt},
                               {tuple,
                                {1758,27},
                                [{atom,{1758,28},iff},
                                 {atom,{1758,32},ssalint},
                                 {tuple,
                                  {1758,40},
                                  [{atom,{1758,41},pass},
                                   {atom,{1758,46},beam_ssa_lint}]}]}]},
                             {cons,
                              {1760,8},
                              {tuple,
                               {1760,8},
                               [{atom,{1760,9},unless},
                                {atom,{1760,16},no_throw_opt},
                                {tuple,
                                 {1760,29},
                                 [{atom,{1760,30},pass},
                                  {atom,{1760,35},beam_ssa_throw}]}]},
                              {cons,
                               {1761,8},
                               {tuple,
                                {1761,8},
                                [{atom,{1761,9},iff},
                                 {atom,{1761,13},dthrow},
                                 {tuple,
                                  {1761,20},
                                  [{atom,{1761,21},listing},
                                   {string,{1761,29},"throw"}]}]},
                               {cons,
                                {1762,8},
                                {tuple,
                                 {1762,8},
                                 [{atom,{1762,9},unless},
                                  {atom,{1762,16},no_throw_opt},
                                  {tuple,
                                   {1762,29},
                                   [{atom,{1762,30},iff},
                                    {atom,{1762,34},ssalint},
                                    {tuple,
                                     {1762,42},
                                     [{atom,{1762,43},pass},
                                      {atom,{1762,48},beam_ssa_lint}]}]}]},
                                {nil,{1762,64}}}}}}}}}}}}}}}}}}}}}]},
           {cons,
            {1764,6},
            {tuple,
             {1764,6},
             [{atom,{1764,7},pass},{atom,{1764,12},beam_ssa_pre_codegen}]},
            {cons,
             {1765,6},
             {tuple,
              {1765,6},
              [{atom,{1765,7},iff},
               {atom,{1765,11},dprecg},
               {tuple,
                {1765,18},
                [{atom,{1765,19},listing},{string,{1765,27},"precodegen"}]}]},
             {cons,
              {1766,6},
              {tuple,
               {1766,6},
               [{atom,{1766,7},iff},
                {atom,{1766,11},ssalint},
                {tuple,
                 {1766,19},
                 [{atom,{1766,20},pass},{atom,{1766,25},beam_ssa_lint}]}]},
              {cons,
               {1767,6},
               {tuple,
                {1767,6},
                [{atom,{1767,7},pass},{atom,{1767,12},beam_ssa_codegen}]},
               {cons,
                {1768,6},
                {tuple,
                 {1768,6},
                 [{atom,{1768,7},iff},
                  {atom,{1768,11},dcg},
                  {tuple,
                   {1768,15},
                   [{atom,{1768,16},listing},{string,{1768,24},"codegen"}]}]},
                {cons,
                 {1769,6},
                 {tuple,
                  {1769,6},
                  [{atom,{1769,7},iff},
                   {atom,{1769,11},doldcg},
                   {tuple,
                    {1769,18},
                    [{atom,{1769,19},listing},{string,{1769,27},"codegen"}]}]},
                 {cons,
                  {1770,7},
                  {tuple,
                   {1770,7},
                   [{atom,{1770,12},beam_validator_strong},
                    {'fun',{1770,12},{function,beam_validator_strong,2}}]},
                  {call,
                   {1771,8},
                   {atom,{1771,8},asm_passes},
                   []}}}}}}}}}}}}}}}]}]}.
{function,
 {1773,1},
 asm_passes,0,
 [{clause,
   {1773,1},
   [],
   [[{call,
      {1773,1},
      {remote,{1773,1},{atom,{1773,1},fake},{atom,{1773,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1773,384},{atom,{1773,1},ignore}]},
  {clause,
   {1773,1},
   [],[],
   [{debug_line,1775,385},
    {cons,
     {1775,5},
     {tuple,
      {1775,6},
      [{atom,{1775,7},delay},
       {cons,
        {1776,7},
        {tuple,{1776,8},[{atom,{1776,9},pass},{atom,{1776,14},beam_a}]},
        {cons,
         {1777,8},
         {tuple,
          {1777,8},
          [{atom,{1777,9},iff},
           {atom,{1777,13},da},
           {tuple,
            {1777,16},
            [{atom,{1777,17},listing},{string,{1777,25},"a"}]}]},
         {cons,
          {1778,8},
          {tuple,
           {1778,8},
           [{atom,{1778,9},unless},
            {atom,{1778,16},no_postopt},
            {cons,
             {1779,2},
             {tuple,
              {1779,3},
              [{atom,{1779,4},pass},{atom,{1779,9},beam_block}]},
             {cons,
              {1780,3},
              {tuple,
               {1780,3},
               [{atom,{1780,4},iff},
                {atom,{1780,8},dblk},
                {tuple,
                 {1780,13},
                 [{atom,{1780,14},listing},{string,{1780,22},"block"}]}]},
              {cons,
               {1781,3},
               {tuple,
                {1781,3},
                [{atom,{1781,4},unless},
                 {atom,{1781,11},no_jopt},
                 {tuple,
                  {1781,19},
                  [{atom,{1781,20},pass},{atom,{1781,25},beam_jump}]}]},
               {cons,
                {1782,3},
                {tuple,
                 {1782,3},
                 [{atom,{1782,4},iff},
                  {atom,{1782,8},djmp},
                  {tuple,
                   {1782,13},
                   [{atom,{1782,14},listing},{string,{1782,22},"jump"}]}]},
                {cons,
                 {1783,3},
                 {tuple,
                  {1783,3},
                  [{atom,{1783,4},pass},{atom,{1783,9},beam_clean}]},
                 {cons,
                  {1784,3},
                  {tuple,
                   {1784,3},
                   [{atom,{1784,4},iff},
                    {atom,{1784,8},dclean},
                    {tuple,
                     {1784,15},
                     [{atom,{1784,16},listing},{string,{1784,24},"clean"}]}]},
                  {cons,
                   {1785,3},
                   {tuple,
                    {1785,3},
                    [{atom,{1785,4},unless},
                     {atom,{1785,11},no_stack_trimming},
                     {tuple,
                      {1785,29},
                      [{atom,{1785,30},pass},{atom,{1785,35},beam_trim}]}]},
                   {cons,
                    {1786,3},
                    {tuple,
                     {1786,3},
                     [{atom,{1786,4},iff},
                      {atom,{1786,8},dtrim},
                      {tuple,
                       {1786,14},
                       [{atom,{1786,15},listing},{string,{1786,23},"trim"}]}]},
                    {cons,
                     {1787,3},
                     {tuple,
                      {1787,3},
                      [{atom,{1787,4},pass},{atom,{1787,9},beam_flatten}]},
                     {nil,{1787,22}}}}}}}}}}}]},
          {cons,
           {1791,8},
           {tuple,
            {1791,8},
            [{atom,{1791,9},iff},
             {atom,{1791,13},no_postopt},
             {cons,
              {1791,24},
              {tuple,
               {1791,25},
               [{atom,{1791,26},pass},{atom,{1791,31},beam_clean}]},
              {nil,{1791,42}}}]},
           {cons,
            {1793,8},
            {tuple,
             {1793,8},
             [{atom,{1793,9},iff},
              {atom,{1793,13},diffable},
              {tuple,
               {1793,23},
               [{atom,{1793,28},diffable},
                {'fun',{1793,28},{function,diffable,2}}]}]},
            {cons,
             {1794,8},
             {tuple,{1794,8},[{atom,{1794,9},pass},{atom,{1794,14},beam_z}]},
             {cons,
              {1795,8},
              {tuple,
               {1795,8},
               [{atom,{1795,9},iff},
                {atom,{1795,13},diffable},
                {tuple,
                 {1795,22},
                 [{atom,{1795,23},listing},{string,{1795,31},"S"}]}]},
              {cons,
               {1796,8},
               {tuple,
                {1796,8},
                [{atom,{1796,9},iff},
                 {atom,{1796,13},dz},
                 {tuple,
                  {1796,16},
                  [{atom,{1796,17},listing},{string,{1796,25},"z"}]}]},
               {cons,
                {1797,8},
                {tuple,
                 {1797,8},
                 [{atom,{1797,9},iff},
                  {atom,{1797,13},dopt},
                  {tuple,
                   {1797,18},
                   [{atom,{1797,19},listing},{string,{1797,27},"optimize"}]}]},
                {cons,
                 {1798,8},
                 {tuple,
                  {1798,8},
                  [{atom,{1798,9},iff},
                   {atom,{1798,13},'S'},
                   {tuple,
                    {1798,17},
                    [{atom,{1798,18},listing},{string,{1798,26},"S"}]}]},
                 {cons,
                  {1799,8},
                  {tuple,
                   {1799,8},
                   [{atom,{1799,9},iff},
                    {atom,{1799,13},to_asm},
                    {tuple,
                     {1799,22},
                     [{atom,{1799,23},done},{string,{1799,28},"S"}]}]},
                  {nil,{1799,33}}}}}}}}}}}}}]},
     {cons,
      {1800,7},
      {tuple,
       {1800,7},
       [{atom,{1800,12},beam_validator_weak},
        {'fun',{1800,12},{function,beam_validator_weak,2}}]},
      {cons,
       {1801,7},
       {tuple,
        {1801,7},
        [{atom,{1801,12},beam_asm},{'fun',{1801,12},{function,beam_asm,2}}]},
       {cons,
        {1802,6},
        {tuple,
         {1802,6},
         [{atom,{1802,7},iff},
          {atom,{1802,11},strip_types},
          {tuple,
           {1802,24},
           [{atom,{1802,29},beam_strip_types},
            {'fun',{1802,29},{function,beam_strip_types,2}}]}]},
        {call,{1803,8},{atom,{1803,8},binary_passes},[]}}}}}]}]}.
{function,
    {1805,1},
    binary_passes,0,
    [{clause,
         {1805,1},
         [],
         [[{call,
               {1805,1},
               {remote,
                   {1805,1},
                   {atom,{1805,1},fake},
                   {atom,{1805,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1805,386},{atom,{1805,1},ignore}]},
     {clause,
         {1805,1},
         [],[],
         [{debug_line,1806,387},
          {cons,
              {1806,5},
              {tuple,
                  {1806,6},
                  [{atom,{1806,7},iff},
                   {atom,{1806,11},to_dis},
                   {tuple,
                       {1806,21},
                       [{atom,{1806,26},to_dis},
                        {'fun',{1806,26},{function,to_dis,2}}]}]},
              {cons,
                  {1807,6},
                  {tuple,
                      {1807,6},
                      [{atom,{1807,7},unless},
                       {atom,{1807,14},binary},
                       {tuple,
                           {1807,22},
                           [{atom,{1807,27},save_binary},
                            {'fun',{1807,27},{function,not_werror,1}},
                            {'fun',{1807,39},{function,save_binary,2}}]}]},
                  {nil,{1808,5}}}}]}]}.
{function,
 {1815,1},
 remove_file,2,
 [{clause,
   {1815,1},
   [{var,{1815,1},'_'},{var,{1815,1},'_'}],
   [[{call,
      {1815,1},
      {remote,{1815,1},{atom,{1815,1},fake},{atom,{1815,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1815,388},{atom,{1815,1},ignore}]},
  {clause,
   {1815,1},
   [{var,{1815,13},'Code'},{var,{1815,19},'St'}],
   [],
   [{debug_line,1816,389},
    {match,
     {1816,5},
     {var,{1816,5},'_'},
     {call,
      {1816,9},
      {remote,{1816,13},{atom,{1816,9},file},{atom,{1816,14},delete}},
      [{block,0,
        [{'case',
          {1816,21},
          {var,{1816,21},'St'},
          [{clause,
            [{generated,true},{location,{1816,21}}],
            [{tuple,
              [{generated,true},{location,{1816,21}}],
              [{atom,{1816,21},compile},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},rec27},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'},
               {var,{1816,21},'_'}]}],
            [],
            [{var,{1816,21},rec27}]},
           {clause,
            [{generated,true},{location,{1816,21}}],
            [{var,{1816,21},rec27}],
            [],
            [{call,
              [{generated,true},{location,{1816,21}}],
              {remote,
               [{generated,true},{location,{1816,21}}],
               {atom,[{generated,true},{location,{1816,21}}],erlang},
               {atom,[{generated,true},{location,{1816,21}}],error}},
              [{tuple,
                [{generated,true},{location,{1816,21}}],
                [{atom,[{generated,true},{location,{1816,21}}],badrecord},
                 {var,{1816,21},rec27}]}]}]}]}]}]}},
    {debug_line,1817,390},
    {tuple,
     {1817,5},
     [{atom,{1817,6},ok},{var,{1817,9},'Code'},{var,{1817,14},'St'}]}]}]}.
{attribute,{1819,2},
           record,
           {asm_module,[{record_field,{1819,22},{atom,{1819,22},module}},
                        {record_field,{1820,8},{atom,{1820,8},exports}},
                        {record_field,{1821,8},{atom,{1821,8},labels}},
                        {record_field,{1822,8},
                                      {atom,{1822,8},functions},
                                      {nil,{1822,18}}},
                        {record_field,{1823,8},
                                      {atom,{1823,8},attributes},
                                      {nil,{1823,19}}}]}}.
{function,
 {1825,1},
 preprocess_asm_forms,1,
 [{clause,
   {1825,1},
   [{var,{1825,1},'_'}],
   [[{call,
      {1825,1},
      {remote,{1825,1},{atom,{1825,1},fake},{atom,{1825,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1825,391},{atom,{1825,1},ignore}]},
  {clause,
   {1825,1},
   [{var,{1825,22},'Forms'}],
   [],
   [{debug_line,1826,392},
    {match,
     {1826,5},
     {var,{1826,5},'R'},
     {tuple,
      {1826,9},
      [{atom,{1826,9},asm_module},
       {atom,{1826,9},undefined},
       {atom,{1826,9},undefined},
       {atom,{1826,9},undefined},
       {nil,{1826,9}},
       {nil,{1826,9}}]}},
    {debug_line,1827,393},
    {match,
     {1827,5},
     {var,{1827,5},'R1'},
     {call,
      {1827,10},
      {atom,{1827,10},collect_asm},
      [{var,{1827,22},'Forms'},{var,{1827,29},'R'}]}},
    {debug_line,1828,394},
    {tuple,
     {1828,5},
     [{'case',
       {1828,6},
       {var,{1828,6},'R1'},
       [{clause,
         [{generated,true},{location,{1828,6}}],
         [{tuple,
           [{generated,true},{location,{1828,6}}],
           [{atom,{1828,6},asm_module},
            {var,{1828,6},rec28},
            {var,{1828,6},'_'},
            {var,{1828,6},'_'},
            {var,{1828,6},'_'},
            {var,{1828,6},'_'}]}],
         [],
         [{var,{1828,6},rec28}]},
        {clause,
         [{generated,true},{location,{1828,6}}],
         [{var,{1828,6},rec28}],
         [],
         [{call,
           [{generated,true},{location,{1828,6}}],
           {remote,
            [{generated,true},{location,{1828,6}}],
            {atom,[{generated,true},{location,{1828,6}}],erlang},
            {atom,[{generated,true},{location,{1828,6}}],error}},
           [{tuple,
             [{generated,true},{location,{1828,6}}],
             [{atom,[{generated,true},{location,{1828,6}}],badrecord},
              {var,{1828,6},rec28}]}]}]}]},
      {tuple,
       {1829,6},
       [{'case',
         {1829,7},
         {var,{1829,7},'R1'},
         [{clause,
           [{generated,true},{location,{1829,7}}],
           [{tuple,
             [{generated,true},{location,{1829,7}}],
             [{atom,{1829,7},asm_module},
              {var,{1829,7},rec29},
              {var,{1829,7},'_'},
              {var,{1829,7},'_'},
              {var,{1829,7},'_'},
              {var,{1829,7},'_'}]}],
           [],
           [{var,{1829,7},rec29}]},
          {clause,
           [{generated,true},{location,{1829,7}}],
           [{var,{1829,7},rec29}],
           [],
           [{call,
             [{generated,true},{location,{1829,7}}],
             {remote,
              [{generated,true},{location,{1829,7}}],
              {atom,[{generated,true},{location,{1829,7}}],erlang},
              {atom,[{generated,true},{location,{1829,7}}],error}},
             [{tuple,
               [{generated,true},{location,{1829,7}}],
               [{atom,[{generated,true},{location,{1829,7}}],badrecord},
                {var,{1829,7},rec29}]}]}]}]},
        {'case',
         {1830,7},
         {var,{1830,7},'R1'},
         [{clause,
           [{generated,true},{location,{1830,7}}],
           [{tuple,
             [{generated,true},{location,{1830,7}}],
             [{atom,{1830,7},asm_module},
              {var,{1830,7},'_'},
              {var,{1830,7},rec30},
              {var,{1830,7},'_'},
              {var,{1830,7},'_'},
              {var,{1830,7},'_'}]}],
           [],
           [{var,{1830,7},rec30}]},
          {clause,
           [{generated,true},{location,{1830,7}}],
           [{var,{1830,7},rec30}],
           [],
           [{call,
             [{generated,true},{location,{1830,7}}],
             {remote,
              [{generated,true},{location,{1830,7}}],
              {atom,[{generated,true},{location,{1830,7}}],erlang},
              {atom,[{generated,true},{location,{1830,7}}],error}},
             [{tuple,
               [{generated,true},{location,{1830,7}}],
               [{atom,[{generated,true},{location,{1830,7}}],badrecord},
                {var,{1830,7},rec30}]}]}]}]},
        {'case',
         {1831,7},
         {var,{1831,7},'R1'},
         [{clause,
           [{generated,true},{location,{1831,7}}],
           [{tuple,
             [{generated,true},{location,{1831,7}}],
             [{atom,{1831,7},asm_module},
              {var,{1831,7},'_'},
              {var,{1831,7},'_'},
              {var,{1831,7},'_'},
              {var,{1831,7},'_'},
              {var,{1831,7},rec31}]}],
           [],
           [{var,{1831,7},rec31}]},
          {clause,
           [{generated,true},{location,{1831,7}}],
           [{var,{1831,7},rec31}],
           [],
           [{call,
             [{generated,true},{location,{1831,7}}],
             {remote,
              [{generated,true},{location,{1831,7}}],
              {atom,[{generated,true},{location,{1831,7}}],erlang},
              {atom,[{generated,true},{location,{1831,7}}],error}},
             [{tuple,
               [{generated,true},{location,{1831,7}}],
               [{atom,[{generated,true},{location,{1831,7}}],badrecord},
                {var,{1831,7},rec31}]}]}]}]},
        {call,
         {1832,7},
         {remote,{1832,7},{atom,{1832,7},lists},{atom,{1832,7},reverse}},
         [{block,0,
           [{debug_line,1832,395},
            {'case',
             {1832,15},
             {var,{1832,15},'R1'},
             [{clause,
               [{generated,true},{location,{1832,15}}],
               [{tuple,
                 [{generated,true},{location,{1832,15}}],
                 [{atom,{1832,15},asm_module},
                  {var,{1832,15},'_'},
                  {var,{1832,15},'_'},
                  {var,{1832,15},'_'},
                  {var,{1832,15},rec32},
                  {var,{1832,15},'_'}]}],
               [],
               [{var,{1832,15},rec32}]},
              {clause,
               [{generated,true},{location,{1832,15}}],
               [{var,{1832,15},rec32}],
               [],
               [{call,
                 [{generated,true},{location,{1832,15}}],
                 {remote,
                  [{generated,true},{location,{1832,15}}],
                  {atom,[{generated,true},{location,{1832,15}}],erlang},
                  {atom,[{generated,true},{location,{1832,15}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1832,15}}],
                   [{atom,[{generated,true},{location,{1832,15}}],badrecord},
                    {var,{1832,15},rec32}]}]}]}]}]}]},
        {'case',
         {1833,7},
         {var,{1833,7},'R1'},
         [{clause,
           [{generated,true},{location,{1833,7}}],
           [{tuple,
             [{generated,true},{location,{1833,7}}],
             [{atom,{1833,7},asm_module},
              {var,{1833,7},'_'},
              {var,{1833,7},'_'},
              {var,{1833,7},rec33},
              {var,{1833,7},'_'},
              {var,{1833,7},'_'}]}],
           [],
           [{var,{1833,7},rec33}]},
          {clause,
           [{generated,true},{location,{1833,7}}],
           [{var,{1833,7},rec33}],
           [],
           [{call,
             [{generated,true},{location,{1833,7}}],
             {remote,
              [{generated,true},{location,{1833,7}}],
              {atom,[{generated,true},{location,{1833,7}}],erlang},
              {atom,[{generated,true},{location,{1833,7}}],error}},
             [{tuple,
               [{generated,true},{location,{1833,7}}],
               [{atom,[{generated,true},{location,{1833,7}}],badrecord},
                {var,{1833,7},rec33}]}]}]}]}]}]}]}]}.
{function,
 {1835,1},
 collect_asm,2,
 [{clause,
   {1835,1},
   [{var,{1835,1},'_'},{var,{1835,1},'_'}],
   [[{call,
      {1835,1},
      {remote,{1835,1},{atom,{1835,1},fake},{atom,{1835,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1835,396},{atom,{1835,1},ignore}]},
  {clause,
   {1835,1},
   [{cons,
     {1835,13},
     {tuple,{1835,14},[{atom,{1835,15},module},{var,{1835,22},'M'}]},
     {var,{1835,27},'Rest'}},
    {var,{1835,34},'R'}],
   [],
   [{debug_line,1836,397},
    {call,
     {1836,5},
     {atom,{1836,5},collect_asm},
     [{var,{1836,17},'Rest'},
      {block,0,
       [{block,
         {1836,23},
         [{match,{1836,23},{var,{1836,23},rec34},{var,{1836,23},'R'}},
          {'case',
           {1836,36},
           {var,{1836,23},rec34},
           [{clause,
             {1836,36},
             [{tuple,
               {1836,36},
               [{atom,{1836,36},asm_module},
                {var,{1836,36},'_'},
                {var,{1836,36},'_'},
                {var,{1836,36},'_'},
                {var,{1836,36},'_'},
                {var,{1836,36},'_'}]}],
             [],
             [{call,
               {1836,36},
               {remote,
                {1836,36},
                {atom,{1836,36},erlang},
                {atom,{1836,36},setelement}},
               [{integer,{1836,36},2},
                {var,{1836,23},rec34},
                {var,{1836,43},'M'}]}]},
            {clause,
             [{generated,true},{location,{1836,36}}],
             [{var,[{generated,true},{location,{1836,36}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1836,36}}],
               {remote,
                [{generated,true},{location,{1836,36}}],
                {atom,[{generated,true},{location,{1836,36}}],erlang},
                {atom,[{generated,true},{location,{1836,36}}],error}},
               [{tuple,
                 [{generated,true},{location,{1836,36}}],
                 [{atom,[{generated,true},{location,{1836,36}}],badrecord},
                  {var,{1836,23},rec34}]}]}]}]}]}]}]}]},
  {clause,
   {1837,1},
   [{cons,
     {1837,13},
     {tuple,{1837,14},[{atom,{1837,15},exports},{var,{1837,23},'M'}]},
     {var,{1837,28},'Rest'}},
    {var,{1837,35},'R'}],
   [],
   [{debug_line,1838,398},
    {call,
     {1838,5},
     {atom,{1838,5},collect_asm},
     [{var,{1838,17},'Rest'},
      {block,0,
       [{block,
         {1838,23},
         [{match,{1838,23},{var,{1838,23},rec35},{var,{1838,23},'R'}},
          {'case',
           {1838,36},
           {var,{1838,23},rec35},
           [{clause,
             {1838,36},
             [{tuple,
               {1838,36},
               [{atom,{1838,36},asm_module},
                {var,{1838,36},'_'},
                {var,{1838,36},'_'},
                {var,{1838,36},'_'},
                {var,{1838,36},'_'},
                {var,{1838,36},'_'}]}],
             [],
             [{call,
               {1838,36},
               {remote,
                {1838,36},
                {atom,{1838,36},erlang},
                {atom,{1838,36},setelement}},
               [{integer,{1838,36},3},
                {var,{1838,23},rec35},
                {var,{1838,44},'M'}]}]},
            {clause,
             [{generated,true},{location,{1838,36}}],
             [{var,[{generated,true},{location,{1838,36}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1838,36}}],
               {remote,
                [{generated,true},{location,{1838,36}}],
                {atom,[{generated,true},{location,{1838,36}}],erlang},
                {atom,[{generated,true},{location,{1838,36}}],error}},
               [{tuple,
                 [{generated,true},{location,{1838,36}}],
                 [{atom,[{generated,true},{location,{1838,36}}],badrecord},
                  {var,{1838,23},rec35}]}]}]}]}]}]}]}]},
  {clause,
   {1839,1},
   [{cons,
     {1839,13},
     {tuple,{1839,14},[{atom,{1839,15},labels},{var,{1839,22},'M'}]},
     {var,{1839,27},'Rest'}},
    {var,{1839,34},'R'}],
   [],
   [{debug_line,1840,399},
    {call,
     {1840,5},
     {atom,{1840,5},collect_asm},
     [{var,{1840,17},'Rest'},
      {block,0,
       [{block,
         {1840,23},
         [{match,{1840,23},{var,{1840,23},rec36},{var,{1840,23},'R'}},
          {'case',
           {1840,36},
           {var,{1840,23},rec36},
           [{clause,
             {1840,36},
             [{tuple,
               {1840,36},
               [{atom,{1840,36},asm_module},
                {var,{1840,36},'_'},
                {var,{1840,36},'_'},
                {var,{1840,36},'_'},
                {var,{1840,36},'_'},
                {var,{1840,36},'_'}]}],
             [],
             [{call,
               {1840,36},
               {remote,
                {1840,36},
                {atom,{1840,36},erlang},
                {atom,{1840,36},setelement}},
               [{integer,{1840,36},4},
                {var,{1840,23},rec36},
                {var,{1840,43},'M'}]}]},
            {clause,
             [{generated,true},{location,{1840,36}}],
             [{var,[{generated,true},{location,{1840,36}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1840,36}}],
               {remote,
                [{generated,true},{location,{1840,36}}],
                {atom,[{generated,true},{location,{1840,36}}],erlang},
                {atom,[{generated,true},{location,{1840,36}}],error}},
               [{tuple,
                 [{generated,true},{location,{1840,36}}],
                 [{atom,[{generated,true},{location,{1840,36}}],badrecord},
                  {var,{1840,23},rec36}]}]}]}]}]}]}]}]},
  {clause,
   {1841,1},
   [{cons,
     {1841,13},
     {tuple,
      {1841,14},
      [{atom,{1841,15},function},
       {var,{1841,24},'A'},
       {var,{1841,26},'B'},
       {var,{1841,28},'C'}]},
     {var,{1841,33},'Rest0'}},
    {var,{1841,41},'R0'}],
   [],
   [{debug_line,1842,400},
    {match,
     {1842,5},
     {tuple,{1842,5},[{var,{1842,6},'Code'},{var,{1842,11},'Rest'}]},
     {call,
      {1842,19},
      {atom,{1842,19},collect_asm_function},
      [{var,{1842,40},'Rest0'},{nil,{1842,47}}]}},
    {debug_line,1843,401},
    {match,
     {1843,5},
     {var,{1843,5},'Func'},
     {tuple,
      {1843,12},
      [{atom,{1843,13},function},
       {var,{1843,22},'A'},
       {var,{1843,24},'B'},
       {var,{1843,26},'C'},
       {var,{1843,28},'Code'}]}},
    {debug_line,1844,402},
    {match,
     {1844,5},
     {var,{1844,5},'R'},
     {block,
      {1844,9},
      [{match,
        {1844,23},
        {var,{1844,23},rec37},
        {cons,
         {1844,33},
         {var,{1844,34},'Func'},
         {'case',
          {1844,41},
          {var,{1844,41},'R0'},
          [{clause,
            [{generated,true},{location,{1844,41}}],
            [{tuple,
              [{generated,true},{location,{1844,41}}],
              [{atom,{1844,41},asm_module},
               {var,{1844,41},'_'},
               {var,{1844,41},'_'},
               {var,{1844,41},'_'},
               {var,{1844,41},rec39},
               {var,{1844,41},'_'}]}],
            [],
            [{var,{1844,41},rec39}]},
           {clause,
            [{generated,true},{location,{1844,41}}],
            [{var,{1844,41},rec39}],
            [],
            [{call,
              [{generated,true},{location,{1844,41}}],
              {remote,
               [{generated,true},{location,{1844,41}}],
               {atom,[{generated,true},{location,{1844,41}}],erlang},
               {atom,[{generated,true},{location,{1844,41}}],error}},
              [{tuple,
                [{generated,true},{location,{1844,41}}],
                [{atom,[{generated,true},{location,{1844,41}}],badrecord},
                 {var,{1844,41},rec39}]}]}]}]}}},
       {match,{1844,9},{var,{1844,9},rec38},{var,{1844,9},'R0'}},
       {'case',
        {1844,23},
        {var,{1844,9},rec38},
        [{clause,
          {1844,23},
          [{tuple,
            {1844,23},
            [{atom,{1844,23},asm_module},
             {var,{1844,23},'_'},
             {var,{1844,23},'_'},
             {var,{1844,23},'_'},
             {var,{1844,23},'_'},
             {var,{1844,23},'_'}]}],
          [],
          [{call,
            {1844,23},
            {remote,
             {1844,23},
             {atom,{1844,23},erlang},
             {atom,{1844,23},setelement}},
            [{integer,{1844,23},5},
             {var,{1844,9},rec38},
             {var,{1844,23},rec37}]}]},
         {clause,
          [{generated,true},{location,{1844,23}}],
          [{var,[{generated,true},{location,{1844,23}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1844,23}}],
            {remote,
             [{generated,true},{location,{1844,23}}],
             {atom,[{generated,true},{location,{1844,23}}],erlang},
             {atom,[{generated,true},{location,{1844,23}}],error}},
            [{tuple,
              [{generated,true},{location,{1844,23}}],
              [{atom,[{generated,true},{location,{1844,23}}],badrecord},
               {var,{1844,9},rec38}]}]}]}]}]}},
    {debug_line,1845,403},
    {call,
     {1845,5},
     {atom,{1845,5},collect_asm},
     [{var,{1845,17},'Rest'},{var,{1845,23},'R'}]}]},
  {clause,
   {1846,1},
   [{cons,
     {1846,13},
     {tuple,{1846,14},[{atom,{1846,15},attributes},{var,{1846,27},'Attr'}]},
     {var,{1846,35},'Rest'}},
    {var,{1846,42},'R'}],
   [],
   [{debug_line,1847,404},
    {call,
     {1847,5},
     {atom,{1847,5},collect_asm},
     [{var,{1847,17},'Rest'},
      {block,0,
       [{block,
         {1847,23},
         [{match,{1847,23},{var,{1847,23},rec40},{var,{1847,23},'R'}},
          {'case',
           {1847,36},
           {var,{1847,23},rec40},
           [{clause,
             {1847,36},
             [{tuple,
               {1847,36},
               [{atom,{1847,36},asm_module},
                {var,{1847,36},'_'},
                {var,{1847,36},'_'},
                {var,{1847,36},'_'},
                {var,{1847,36},'_'},
                {var,{1847,36},'_'}]}],
             [],
             [{call,
               {1847,36},
               {remote,
                {1847,36},
                {atom,{1847,36},erlang},
                {atom,{1847,36},setelement}},
               [{integer,{1847,36},6},
                {var,{1847,23},rec40},
                {var,{1847,47},'Attr'}]}]},
            {clause,
             [{generated,true},{location,{1847,36}}],
             [{var,[{generated,true},{location,{1847,36}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1847,36}}],
               {remote,
                [{generated,true},{location,{1847,36}}],
                {atom,[{generated,true},{location,{1847,36}}],erlang},
                {atom,[{generated,true},{location,{1847,36}}],error}},
               [{tuple,
                 [{generated,true},{location,{1847,36}}],
                 [{atom,[{generated,true},{location,{1847,36}}],badrecord},
                  {var,{1847,23},rec40}]}]}]}]}]}]}]}]},
  {clause,
   {1848,1},
   [{nil,{1848,13}},{var,{1848,17},'R'}],
   [],
   [{debug_line,1848,405},{var,{1848,23},'R'}]}]}.
{function,
    {1850,1},
    collect_asm_function,2,
    [{clause,
         {1850,1},
         [{var,{1850,1},'_'},{var,{1850,1},'_'}],
         [[{call,
               {1850,1},
               {remote,
                   {1850,1},
                   {atom,{1850,1},fake},
                   {atom,{1850,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1850,406},{atom,{1850,1},ignore}]},
     {clause,
         {1850,1},
         [{match,
              {1850,22},
              {cons,
                  {1850,22},
                  {tuple,
                      {1850,23},
                      [{atom,{1850,24},function},
                       {var,{1850,33},'_'},
                       {var,{1850,35},'_'},
                       {var,{1850,37},'_'}]},
                  {var,{1850,40},'_'}},
              {var,{1850,43},'Is'}},
          {var,{1850,47},'Acc'}],
         [],
         [{debug_line,1851,407},
          {tuple,
              {1851,5},
              [{call,
                   {1851,6},
                   {remote,
                       {1851,6},
                       {atom,{1851,6},lists},
                       {atom,{1851,6},reverse}},
                   [{var,{1851,14},'Acc'}]},
               {var,{1851,19},'Is'}]}]},
     {clause,
         {1852,1},
         [{cons,{1852,22},{var,{1852,23},'I'},{var,{1852,25},'Is'}},
          {var,{1852,30},'Acc'}],
         [],
         [{debug_line,1853,408},
          {call,
              {1853,5},
              {atom,{1853,5},collect_asm_function},
              [{var,{1853,26},'Is'},
               {block,0,
                   [{cons,
                        {1853,30},
                        {var,{1853,31},'I'},
                        {var,{1853,33},'Acc'}}]}]}]},
     {clause,
         {1854,1},
         [{nil,{1854,22}},{var,{1854,26},'Acc'}],
         [],
         [{debug_line,1855,409},
          {tuple,
              {1855,5},
              [{call,
                   {1855,6},
                   {remote,
                       {1855,6},
                       {atom,{1855,6},lists},
                       {atom,{1855,6},reverse}},
                   [{var,{1855,14},'Acc'}]},
               {nil,{1855,19}}]}]}]}.
{function,
 {1857,1},
 beam_consult_asm,2,
 [{clause,
   {1857,1},
   [{var,{1857,1},'_'},{var,{1857,1},'_'}],
   [[{call,
      {1857,1},
      {remote,{1857,1},{atom,{1857,1},fake},{atom,{1857,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1857,410},{atom,{1857,1},ignore}]},
  {clause,
   {1857,1},
   [{var,{1857,18},'_Code'},{var,{1857,25},'St'}],
   [],
   [{debug_line,1858,411},
    {'case',
     {1858,5},
     {call,
      {1858,10},
      {remote,{1858,14},{atom,{1858,10},file},{atom,{1858,15},consult}},
      [{block,0,
        [{'case',
          {1858,23},
          {var,{1858,23},'St'},
          [{clause,
            [{generated,true},{location,{1858,23}}],
            [{tuple,
              [{generated,true},{location,{1858,23}}],
              [{atom,{1858,23},compile},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},rec41},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'},
               {var,{1858,23},'_'}]}],
            [],
            [{var,{1858,23},rec41}]},
           {clause,
            [{generated,true},{location,{1858,23}}],
            [{var,{1858,23},rec41}],
            [],
            [{call,
              [{generated,true},{location,{1858,23}}],
              {remote,
               [{generated,true},{location,{1858,23}}],
               {atom,[{generated,true},{location,{1858,23}}],erlang},
               {atom,[{generated,true},{location,{1858,23}}],error}},
              [{tuple,
                [{generated,true},{location,{1858,23}}],
                [{atom,[{generated,true},{location,{1858,23}}],badrecord},
                 {var,{1858,23},rec41}]}]}]}]}]}]},
     [{clause,
       {1859,2},
       [{tuple,{1859,2},[{atom,{1859,3},ok},{var,{1859,6},'Forms0'}]}],
       [],
       [{debug_line,1860,412},
        {match,
         {1860,13},
         {var,{1860,13},'Encoding'},
         {call,
          {1860,24},
          {remote,
           {1860,27},
           {atom,{1860,24},epp},
           {atom,{1860,28},read_encoding}},
          [{block,0,
            [{'case',
              {1860,42},
              {var,{1860,42},'St'},
              [{clause,
                [{generated,true},{location,{1860,42}}],
                [{tuple,
                  [{generated,true},{location,{1860,42}}],
                  [{atom,{1860,42},compile},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},rec42},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'},
                   {var,{1860,42},'_'}]}],
                [],
                [{var,{1860,42},rec42}]},
               {clause,
                [{generated,true},{location,{1860,42}}],
                [{var,{1860,42},rec42}],
                [],
                [{call,
                  [{generated,true},{location,{1860,42}}],
                  {remote,
                   [{generated,true},{location,{1860,42}}],
                   {atom,[{generated,true},{location,{1860,42}}],erlang},
                   {atom,[{generated,true},{location,{1860,42}}],error}},
                  [{tuple,
                    [{generated,true},{location,{1860,42}}],
                    [{atom,[{generated,true},{location,{1860,42}}],badrecord},
                     {var,{1860,42},rec42}]}]}]}]}]}]}},
        {debug_line,1861,413},
        {match,
         {1861,6},
         {tuple,{1861,6},[{var,{1861,7},'Module'},{var,{1861,14},'Forms'}]},
         {call,
          {1861,23},
          {atom,{1861,23},preprocess_asm_forms},
          [{var,{1861,44},'Forms0'}]}},
        {debug_line,1862,414},
        {tuple,
         {1862,6},
         [{atom,{1862,7},ok},
          {var,{1862,10},'Forms'},
          {block,
           {1862,16},
           [{match,{1862,16},{var,{1862,16},rec43},{var,{1862,16},'St'}},
            {'case',
             {1862,27},
             {var,{1862,16},rec43},
             [{clause,
               {1862,27},
               [{tuple,
                 {1862,27},
                 [{atom,{1862,27},compile},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'},
                  {var,{1862,27},'_'}]}],
               [],
               [{call,
                 {1862,27},
                 {remote,
                  {1862,27},
                  {atom,{1862,27},erlang},
                  {atom,{1862,27},setelement}},
                 [{integer,{1862,27},7},
                  {call,
                   {1862,41},
                   {remote,
                    {1862,41},
                    {atom,{1862,41},erlang},
                    {atom,{1862,41},setelement}},
                   [{integer,{1862,41},11},
                    {var,{1862,16},rec43},
                    {var,{1862,50},'Encoding'}]},
                  {var,{1862,34},'Module'}]}]},
              {clause,
               [{generated,true},{location,{1862,27}}],
               [{var,[{generated,true},{location,{1862,27}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{1862,27}}],
                 {remote,
                  [{generated,true},{location,{1862,27}}],
                  {atom,[{generated,true},{location,{1862,27}}],erlang},
                  {atom,[{generated,true},{location,{1862,27}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1862,27}}],
                   [{atom,[{generated,true},{location,{1862,27}}],badrecord},
                    {var,{1862,16},rec43}]}]}]}]}]}]}]},
      {clause,
       {1863,2},
       [{tuple,{1863,2},[{atom,{1863,3},error},{var,{1863,9},'E'}]}],
       [],
       [{debug_line,1864,415},
        {match,
         {1864,6},
         {var,{1864,6},'Es'},
         {cons,
          {1864,11},
          {tuple,
           {1864,12},
           [{'case',
             {1864,13},
             {var,{1864,13},'St'},
             [{clause,
               [{generated,true},{location,{1864,13}}],
               [{tuple,
                 [{generated,true},{location,{1864,13}}],
                 [{atom,{1864,13},compile},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},rec44},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'},
                  {var,{1864,13},'_'}]}],
               [],
               [{var,{1864,13},rec44}]},
              {clause,
               [{generated,true},{location,{1864,13}}],
               [{var,{1864,13},rec44}],
               [],
               [{call,
                 [{generated,true},{location,{1864,13}}],
                 {remote,
                  [{generated,true},{location,{1864,13}}],
                  {atom,[{generated,true},{location,{1864,13}}],erlang},
                  {atom,[{generated,true},{location,{1864,13}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1864,13}}],
                   [{atom,[{generated,true},{location,{1864,13}}],badrecord},
                    {var,{1864,13},rec44}]}]}]}]},
            {cons,
             {1864,30},
             {tuple,
              {1864,31},
              [{atom,{1864,32},none},
               {atom,{1864,38},compile},
               {tuple,{1864,45},[{atom,{1864,46},open},{var,{1864,51},'E'}]}]},
             {nil,{1864,54}}}]},
          {nil,{1864,56}}}},
        {debug_line,1865,416},
        {tuple,
         {1865,6},
         [{atom,{1865,7},error},
          {block,
           {1865,13},
           [{match,
             {1865,24},
             {var,{1865,24},rec45},
             {op,
              {1865,49},
              '++',
              {'case',
               {1865,31},
               {var,{1865,31},'St'},
               [{clause,
                 [{generated,true},{location,{1865,31}}],
                 [{tuple,
                   [{generated,true},{location,{1865,31}}],
                   [{atom,{1865,31},compile},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'},
                    {var,{1865,31},rec47},
                    {var,{1865,31},'_'},
                    {var,{1865,31},'_'}]}],
                 [],
                 [{var,{1865,31},rec47}]},
                {clause,
                 [{generated,true},{location,{1865,31}}],
                 [{var,{1865,31},rec47}],
                 [],
                 [{call,
                   [{generated,true},{location,{1865,31}}],
                   {remote,
                    [{generated,true},{location,{1865,31}}],
                    {atom,[{generated,true},{location,{1865,31}}],erlang},
                    {atom,[{generated,true},{location,{1865,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1865,31}}],
                     [{atom,[{generated,true},{location,{1865,31}}],badrecord},
                      {var,{1865,31},rec47}]}]}]}]},
              {var,{1865,52},'Es'}}},
            {match,{1865,13},{var,{1865,13},rec46},{var,{1865,13},'St'}},
            {'case',
             {1865,24},
             {var,{1865,13},rec46},
             [{clause,
               {1865,24},
               [{tuple,
                 {1865,24},
                 [{atom,{1865,24},compile},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'},
                  {var,{1865,24},'_'}]}],
               [],
               [{call,
                 {1865,24},
                 {remote,
                  {1865,24},
                  {atom,{1865,24},erlang},
                  {atom,{1865,24},setelement}},
                 [{integer,{1865,24},12},
                  {var,{1865,13},rec46},
                  {var,{1865,24},rec45}]}]},
              {clause,
               [{generated,true},{location,{1865,24}}],
               [{var,[{generated,true},{location,{1865,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{1865,24}}],
                 {remote,
                  [{generated,true},{location,{1865,24}}],
                  {atom,[{generated,true},{location,{1865,24}}],erlang},
                  {atom,[{generated,true},{location,{1865,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1865,24}}],
                   [{atom,[{generated,true},{location,{1865,24}}],badrecord},
                    {var,{1865,13},rec46}]}]}]}]}]}]}]}]}]}]}.
{function,
 {1868,1},
 get_module_name_from_asm,2,
 [{clause,
   {1868,1},
   [{var,{1868,1},'_'},{var,{1868,1},'_'}],
   [[{call,
      {1868,1},
      {remote,{1868,1},{atom,{1868,1},fake},{atom,{1868,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1868,417},{atom,{1868,1},ignore}]},
  {clause,
   {1868,1},
   [{match,
     {1868,26},
     {tuple,
      {1868,26},
      [{var,{1868,27},'Mod'},
       {var,{1868,31},'_'},
       {var,{1868,33},'_'},
       {var,{1868,35},'_'},
       {var,{1868,37},'_'}]},
     {var,{1868,40},'Asm'}},
    {var,{1868,45},'St'}],
   [],
   [{debug_line,1869,418},
    {tuple,
     {1869,5},
     [{atom,{1869,6},ok},
      {var,{1869,9},'Asm'},
      {block,
       {1869,13},
       [{match,{1869,13},{var,{1869,13},rec48},{var,{1869,13},'St'}},
        {'case',
         {1869,24},
         {var,{1869,13},rec48},
         [{clause,
           {1869,24},
           [{tuple,
             {1869,24},
             [{atom,{1869,24},compile},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'},
              {var,{1869,24},'_'}]}],
           [],
           [{call,
             {1869,24},
             {remote,
              {1869,24},
              {atom,{1869,24},erlang},
              {atom,{1869,24},setelement}},
             [{integer,{1869,24},7},
              {var,{1869,13},rec48},
              {var,{1869,31},'Mod'}]}]},
          {clause,
           [{generated,true},{location,{1869,24}}],
           [{var,[{generated,true},{location,{1869,24}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1869,24}}],
             {remote,
              [{generated,true},{location,{1869,24}}],
              {atom,[{generated,true},{location,{1869,24}}],erlang},
              {atom,[{generated,true},{location,{1869,24}}],error}},
             [{tuple,
               [{generated,true},{location,{1869,24}}],
               [{atom,[{generated,true},{location,{1869,24}}],badrecord},
                {var,{1869,13},rec48}]}]}]}]}]}]}]},
  {clause,
   {1870,1},
   [{var,{1870,26},'Asm'},{var,{1870,31},'St'}],
   [],
   [{debug_line,1872,419},
    {tuple,
     {1872,5},
     [{atom,{1872,6},ok},{var,{1872,9},'Asm'},{var,{1872,13},'St'}]}]}]}.
{function,
    {1874,1},
    parse_module,2,
    [{clause,
         {1874,1},
         [{var,{1874,1},'_'},{var,{1874,1},'_'}],
         [[{call,
               {1874,1},
               {remote,
                   {1874,1},
                   {atom,{1874,1},fake},
                   {atom,{1874,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1874,420},{atom,{1874,1},ignore}]},
     {clause,
         {1874,1},
         [{var,{1874,14},'_Code'},{var,{1874,21},'St'}],
         [],
         [{debug_line,1875,421},
          {'case',
              {1875,5},
              {call,
                  {1875,10},
                  {atom,{1875,10},do_parse_module},
                  [{atom,{1875,26},utf8},{var,{1875,32},'St'}]},
              [{clause,
                   {1876,2},
                   [{match,
                        {1876,2},
                        {tuple,
                            {1876,2},
                            [{atom,{1876,3},ok},
                             {var,{1876,6},'_'},
                             {var,{1876,8},'_'}]},
                        {var,{1876,11},'Ret'}}],
                   [],
                   [{debug_line,1877,422},{var,{1877,6},'Ret'}]},
               {clause,
                   {1878,2},
                   [{match,
                        {1878,2},
                        {tuple,
                            {1878,2},
                            [{atom,{1878,3},error},{var,{1878,9},'_'}]},
                        {var,{1878,12},'Ret'}}],
                   [],
                   [{debug_line,1879,423},{var,{1879,6},'Ret'}]}]}]}]}.
{function,
    {1882,1},
    deterministic_filename,1,
    [{clause,
         {1882,1},
         [{var,{1882,1},'_'}],
         [[{call,
               {1882,1},
               {remote,
                   {1882,1},
                   {atom,{1882,1},fake},
                   {atom,{1882,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1882,424},{atom,{1882,1},ignore}]},
     {clause,
         {1882,1},
         [{tuple,
              {1882,24},
              [{atom,{1882,24},compile},
               {var,{1882,24},'_'},
               {var,{1882,24},'_'},
               {var,{1882,24},'_'},
               {var,{1882,39},'File'},
               {var,{1882,24},'_'},
               {var,{1882,24},'_'},
               {var,{1882,24},'_'},
               {var,{1882,52},'Opts'},
               {var,{1882,24},'_'},
               {var,{1882,24},'_'},
               {var,{1882,24},'_'},
               {var,{1882,24},'_'},
               {var,{1882,24},'_'}]}],
         [],
         [{debug_line,1883,425},
          {match,
              {1883,5},
              {var,{1883,5},'SourceName0'},
              {call,
                  {1883,19},
                  {remote,
                      {1883,28},
                      {atom,{1883,19},proplists},
                      {atom,{1883,29},get_value}},
                  [{atom,{1883,39},source},
                   {var,{1883,47},'Opts'},
                   {var,{1883,53},'File'}]}},
          {debug_line,1884,426},
          {'case',
              {1884,5},
              {call,
                  {1884,10},
                  {remote,
                      {1884,10},
                      {atom,{1884,10},lists},
                      {atom,{1884,10},member}},
                  [{atom,{1884,17},deterministic},{var,{1884,32},'Opts'}]},
              [{clause,
                   {1885,9},
                   [{atom,{1885,9},true}],
                   [],
                   [{debug_line,1886,427},
                    {call,
                        {1886,13},
                        {remote,
                            {1886,21},
                            {atom,{1886,13},filename},
                            {atom,{1886,22},basename}},
                        [{var,{1886,31},'SourceName0'}]}]},
               {clause,
                   {1887,9},
                   [{atom,{1887,9},false}],
                   [],
                   [{debug_line,1888,428},
                    {'case',
                        {1888,13},
                        {call,
                            {1888,18},
                            {remote,
                                {1888,18},
                                {atom,{1888,18},lists},
                                {atom,{1888,18},member}},
                            [{atom,{1888,25},absolute_source},
                             {var,{1888,42},'Opts'}]},
                        [{clause,
                             {1889,17},
                             [{atom,{1889,17},true}],
                             [],
                             [{debug_line,1889,429},
                              {call,
                                  {1889,25},
                                  {atom,{1889,25},paranoid_absname},
                                  [{var,{1889,42},'SourceName0'}]}]},
                         {clause,
                             {1890,17},
                             [{atom,{1890,17},false}],
                             [],
                             [{debug_line,1890,430},
                              {var,{1890,26},'SourceName0'}]}]}]}]}]}]}.
{function,
 {1894,1},
 do_parse_module,2,
 [{clause,
   {1894,1},
   [{var,{1894,1},'_'},{var,{1894,1},'_'}],
   [[{call,
      {1894,1},
      {remote,{1894,1},{atom,{1894,1},fake},{atom,{1894,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1894,431},{atom,{1894,1},ignore}]},
  {clause,
   {1894,1},
   [{var,{1894,17},'DefEncoding'},
    {match,
     {1894,30},
     {tuple,
      {1894,30},
      [{atom,{1894,30},compile},
       {var,{1894,30},'_'},
       {var,{1894,67},'Dir'},
       {var,{1894,30},'_'},
       {var,{1894,45},'File'},
       {var,{1894,30},'_'},
       {var,{1894,30},'_'},
       {var,{1894,30},'_'},
       {var,{1894,58},'Opts'},
       {var,{1894,30},'_'},
       {var,{1894,30},'_'},
       {var,{1894,30},'_'},
       {var,{1894,30},'_'},
       {var,{1894,30},'_'}]},
     {var,{1894,72},'St'}}],
   [],
   [{debug_line,1895,432},
    {match,
     {1895,5},
     {var,{1895,5},'SourceName'},
     {call,
      {1895,18},
      {atom,{1895,18},deterministic_filename},
      [{var,{1895,41},'St'}]}},
    {debug_line,1896,433},
    {match,
     {1896,5},
     {var,{1896,5},'StartLocation'},
     {'case',
      {1896,21},
      {call,{1896,26},{atom,{1896,26},with_columns},[{var,{1896,39},'Opts'}]},
      [{clause,
        {1897,25},
        [{atom,{1897,25},true}],
        [],
        [{debug_line,1898,434},
         {tuple,{1898,29},[{integer,{1898,30},1},{integer,{1898,32},1}]}]},
       {clause,
        {1899,25},
        [{atom,{1899,25},false}],
        [],
        [{debug_line,1900,435},{integer,{1900,29},1}]}]}},
    {debug_line,1902,436},
    {'case',
     {1902,5},
     {call,
      {1902,10},
      {remote,
       {1902,22},
       {atom,{1902,10},erl_features},
       {atom,{1902,23},keyword_fun}},
      [{var,{1902,35},'Opts'},
       {block,0,
        [{'fun',
          {1902,41},
          {function,
           {atom,{1902,45},erl_scan},
           {atom,{1902,54},f_reserved_word},
           {integer,{1902,70},1}}}]}]},
     [{clause,
       {1903,9},
       [{tuple,
         {1903,9},
         [{atom,{1903,10},ok},
          {tuple,
           {1903,14},
           [{var,{1903,15},'Features'},{var,{1903,25},'ResWordFun'}]}]}],
       [],
       [{debug_line,1904,437},
        {match,
         {1904,13},
         {var,{1904,13},'R'},
         {call,
          {1904,17},
          {remote,{1904,20},{atom,{1904,17},epp},{atom,{1904,21},parse_file}},
          [{var,{1904,32},'File'},
           {block,0,
            [{debug_line,1905,438},
             {cons,
              {1905,32},
              {tuple,
               {1905,33},
               [{atom,{1905,34},includes},
                {cons,
                 {1905,43},
                 {string,{1905,44},"."},
                 {cons,
                  {1905,48},
                  {var,{1905,48},'Dir'},
                  {call,
                   {1905,52},
                   {atom,{1905,52},inc_paths},
                   [{var,{1905,62},'Opts'}]}}}]},
              {cons,
               {1906,33},
               {tuple,
                {1906,33},
                [{atom,{1906,34},source_name},{var,{1906,47},'SourceName'}]},
               {cons,
                {1907,33},
                {tuple,
                 {1907,33},
                 [{atom,{1907,34},deterministic},
                  {call,
                   {1907,49},
                   {remote,
                    {1907,49},
                    {atom,{1907,49},lists},
                    {atom,{1907,49},member}},
                   [{atom,{1907,56},deterministic},{var,{1907,71},'Opts'}]}]},
                {cons,
                 {1908,33},
                 {tuple,
                  {1908,33},
                  [{atom,{1908,34},macros},
                   {call,
                    {1908,41},
                    {atom,{1908,41},pre_defs},
                    [{var,{1908,50},'Opts'}]}]},
                 {cons,
                  {1909,33},
                  {tuple,
                   {1909,33},
                   [{atom,{1909,34},default_encoding},
                    {var,{1909,51},'DefEncoding'}]},
                  {cons,
                   {1910,33},
                   {tuple,
                    {1910,33},
                    [{atom,{1910,34},location},
                     {var,{1910,43},'StartLocation'}]},
                   {cons,
                    {1911,33},
                    {tuple,
                     {1911,33},
                     [{atom,{1911,34},reserved_word_fun},
                      {var,{1911,53},'ResWordFun'}]},
                    {cons,
                     {1912,33},
                     {tuple,
                      {1912,33},
                      [{atom,{1912,34},features},{var,{1912,44},'Features'}]},
                     {cons,
                      {1913,33},
                      {atom,{1913,33},extra},
                      {'case',
                       {1914,33},
                       {call,
                        {1914,38},
                        {remote,
                         {1914,38},
                         {atom,{1914,38},lists},
                         {atom,{1914,38},member}},
                        [{atom,{1914,45},check_ssa},{var,{1914,56},'Opts'}]},
                       [{clause,
                         {1915,37},
                         [{atom,{1915,37},true}],
                         [],
                         [{debug_line,1916,439},
                          {cons,
                           {1916,41},
                           {tuple,
                            {1916,42},
                            [{atom,{1916,43},compiler_internal},
                             {cons,
                              {1916,61},
                              {atom,{1916,62},ssa_checks},
                              {nil,{1916,72}}}]},
                           {nil,{1916,74}}}]},
                        {clause,
                         {1917,37},
                         [{atom,{1917,37},false}],
                         [],
                         [{debug_line,1918,440},
                          {nil,{1918,41}}]}]}}}}}}}}}}]}]}},
        {debug_line,1920,441},
        {'case',
         {1920,13},
         {var,{1920,18},'R'},
         [{clause,
           {1922,17},
           [{tuple,
             {1922,17},
             [{atom,{1922,18},ok},
              {var,{1922,21},'Forms0'},
              {var,{1922,28},'Extra'}]}],
           [],
           [{debug_line,1923,442},
            {match,
             {1923,21},
             {var,{1923,21},'Encoding'},
             {call,
              {1923,32},
              {remote,
               {1923,41},
               {atom,{1923,32},proplists},
               {atom,{1923,42},get_value}},
              [{atom,{1923,52},encoding},{var,{1923,62},'Extra'}]}},
            {debug_line,1927,443},
            {match,
             {1927,21},
             {var,{1927,21},'UsedFtrs'},
             {call,
              {1927,32},
              {remote,
               {1927,41},
               {atom,{1927,32},proplists},
               {atom,{1927,42},get_value}},
              [{atom,{1927,52},features},{var,{1927,62},'Extra'}]}},
            {debug_line,1928,444},
            {match,
             {1928,21},
             {var,{1928,21},'St1'},
             {call,
              {1928,27},
              {atom,{1928,27},metadata_add_features},
              [{var,{1928,49},'UsedFtrs'},{var,{1928,59},'St'}]}},
            {debug_line,1929,445},
            {match,
             {1929,21},
             {var,{1929,21},'Forms'},
             {'case',
              {1929,29},
              {call,
               {1929,34},
               {atom,{1929,34},with_columns},
               [{block,0,
                 [{op,
                   {1929,52},
                   '++',
                   {var,{1929,47},'Opts'},
                   {call,
                    {1929,55},
                    {atom,{1929,55},compile_options},
                    [{var,{1929,71},'Forms0'}]}}]}]},
              [{clause,
                {1930,33},
                [{atom,{1930,33},true}],
                [],
                [{debug_line,1931,446},{var,{1931,37},'Forms0'}]},
               {clause,
                {1932,33},
                [{atom,{1932,33},false}],
                [],
                [{debug_line,1933,447},
                 {call,
                  {1933,37},
                  {atom,{1933,37},strip_columns},
                  [{var,{1933,51},'Forms0'}]}]}]}},
            {debug_line,1935,448},
            {tuple,
             {1935,21},
             [{atom,{1935,22},ok},
              {var,{1935,25},'Forms'},
              {block,
               {1935,31},
               [{match,{1935,31},{var,{1935,31},rec49},{var,{1935,31},'St1'}},
                {'case',
                 {1935,43},
                 {var,{1935,31},rec49},
                 [{clause,
                   {1935,43},
                   [{tuple,
                     {1935,43},
                     [{atom,{1935,43},compile},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'},
                      {var,{1935,43},'_'}]}],
                   [],
                   [{call,
                     {1935,43},
                     {remote,
                      {1935,43},
                      {atom,{1935,43},erlang},
                      {atom,{1935,43},setelement}},
                     [{integer,{1935,43},11},
                      {var,{1935,31},rec49},
                      {var,{1935,52},'Encoding'}]}]},
                  {clause,
                   [{generated,true},{location,{1935,43}}],
                   [{var,[{generated,true},{location,{1935,43}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{1935,43}}],
                     {remote,
                      [{generated,true},{location,{1935,43}}],
                      {atom,[{generated,true},{location,{1935,43}}],erlang},
                      {atom,[{generated,true},{location,{1935,43}}],error}},
                     [{tuple,
                       [{generated,true},{location,{1935,43}}],
                       [{atom,
                         [{generated,true},{location,{1935,43}}],
                         badrecord},
                        {var,{1935,31},rec49}]}]}]}]}]}]}]},
          {clause,
           {1936,17},
           [{tuple,{1936,17},[{atom,{1936,18},error},{var,{1936,24},'E'}]}],
           [],
           [{debug_line,1937,449},
            {match,
             {1937,21},
             {var,{1937,21},'Es'},
             {cons,
              {1937,26},
              {tuple,
               {1937,27},
               [{'case',
                 {1937,28},
                 {var,{1937,28},'St'},
                 [{clause,
                   [{generated,true},{location,{1937,28}}],
                   [{tuple,
                     [{generated,true},{location,{1937,28}}],
                     [{atom,{1937,28},compile},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},rec50},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'},
                      {var,{1937,28},'_'}]}],
                   [],
                   [{var,{1937,28},rec50}]},
                  {clause,
                   [{generated,true},{location,{1937,28}}],
                   [{var,{1937,28},rec50}],
                   [],
                   [{call,
                     [{generated,true},{location,{1937,28}}],
                     {remote,
                      [{generated,true},{location,{1937,28}}],
                      {atom,[{generated,true},{location,{1937,28}}],erlang},
                      {atom,[{generated,true},{location,{1937,28}}],error}},
                     [{tuple,
                       [{generated,true},{location,{1937,28}}],
                       [{atom,
                         [{generated,true},{location,{1937,28}}],
                         badrecord},
                        {var,{1937,28},rec50}]}]}]}]},
                {cons,
                 {1937,45},
                 {tuple,
                  {1937,46},
                  [{atom,{1937,47},none},
                   {atom,{1937,53},compile},
                   {tuple,
                    {1937,60},
                    [{atom,{1937,61},epp},{var,{1937,65},'E'}]}]},
                 {nil,{1937,68}}}]},
              {nil,{1937,70}}}},
            {debug_line,1938,450},
            {tuple,
             {1938,21},
             [{atom,{1938,22},error},
              {block,
               {1938,28},
               [{match,
                 {1938,39},
                 {var,{1938,39},rec51},
                 {op,
                  {1938,64},
                  '++',
                  {'case',
                   {1938,46},
                   {var,{1938,46},'St'},
                   [{clause,
                     [{generated,true},{location,{1938,46}}],
                     [{tuple,
                       [{generated,true},{location,{1938,46}}],
                       [{atom,{1938,46},compile},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'},
                        {var,{1938,46},rec53},
                        {var,{1938,46},'_'},
                        {var,{1938,46},'_'}]}],
                     [],
                     [{var,{1938,46},rec53}]},
                    {clause,
                     [{generated,true},{location,{1938,46}}],
                     [{var,{1938,46},rec53}],
                     [],
                     [{call,
                       [{generated,true},{location,{1938,46}}],
                       {remote,
                        [{generated,true},{location,{1938,46}}],
                        {atom,[{generated,true},{location,{1938,46}}],erlang},
                        {atom,[{generated,true},{location,{1938,46}}],error}},
                       [{tuple,
                         [{generated,true},{location,{1938,46}}],
                         [{atom,
                           [{generated,true},{location,{1938,46}}],
                           badrecord},
                          {var,{1938,46},rec53}]}]}]}]},
                  {var,{1938,67},'Es'}}},
                {match,{1938,28},{var,{1938,28},rec52},{var,{1938,28},'St'}},
                {'case',
                 {1938,39},
                 {var,{1938,28},rec52},
                 [{clause,
                   {1938,39},
                   [{tuple,
                     {1938,39},
                     [{atom,{1938,39},compile},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'},
                      {var,{1938,39},'_'}]}],
                   [],
                   [{call,
                     {1938,39},
                     {remote,
                      {1938,39},
                      {atom,{1938,39},erlang},
                      {atom,{1938,39},setelement}},
                     [{integer,{1938,39},12},
                      {var,{1938,28},rec52},
                      {var,{1938,39},rec51}]}]},
                  {clause,
                   [{generated,true},{location,{1938,39}}],
                   [{var,[{generated,true},{location,{1938,39}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{1938,39}}],
                     {remote,
                      [{generated,true},{location,{1938,39}}],
                      {atom,[{generated,true},{location,{1938,39}}],erlang},
                      {atom,[{generated,true},{location,{1938,39}}],error}},
                     [{tuple,
                       [{generated,true},{location,{1938,39}}],
                       [{atom,
                         [{generated,true},{location,{1938,39}}],
                         badrecord},
                        {var,{1938,28},rec52}]}]}]}]}]}]}]}]}]},
      {clause,
       {1940,9},
       [{tuple,
         {1940,9},
         [{atom,{1940,10},error},
          {tuple,
           {1940,17},
           [{var,{1940,18},'Mod'},{var,{1940,23},'Reason'}]}]}],
       [],
       [{debug_line,1941,451},
        {match,
         {1941,13},
         {var,{1941,13},'Es'},
         {cons,
          {1941,18},
          {tuple,
           {1941,19},
           [{'case',
             {1941,20},
             {var,{1941,20},'St'},
             [{clause,
               [{generated,true},{location,{1941,20}}],
               [{tuple,
                 [{generated,true},{location,{1941,20}}],
                 [{atom,{1941,20},compile},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},rec54},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'},
                  {var,{1941,20},'_'}]}],
               [],
               [{var,{1941,20},rec54}]},
              {clause,
               [{generated,true},{location,{1941,20}}],
               [{var,{1941,20},rec54}],
               [],
               [{call,
                 [{generated,true},{location,{1941,20}}],
                 {remote,
                  [{generated,true},{location,{1941,20}}],
                  {atom,[{generated,true},{location,{1941,20}}],erlang},
                  {atom,[{generated,true},{location,{1941,20}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1941,20}}],
                   [{atom,[{generated,true},{location,{1941,20}}],badrecord},
                    {var,{1941,20},rec54}]}]}]}]},
            {cons,
             {1941,37},
             {tuple,
              {1941,38},
              [{atom,{1941,39},none},
               {var,{1941,45},'Mod'},
               {var,{1941,50},'Reason'}]},
             {nil,{1941,57}}}]},
          {nil,{1941,59}}}},
        {debug_line,1942,452},
        {tuple,
         {1942,13},
         [{atom,{1942,14},error},
          {block,
           {1942,21},
           [{match,
             {1942,32},
             {var,{1942,32},rec55},
             {op,
              {1942,59},
              '++',
              {'case',
               {1942,41},
               {var,{1942,41},'St'},
               [{clause,
                 [{generated,true},{location,{1942,41}}],
                 [{tuple,
                   [{generated,true},{location,{1942,41}}],
                   [{atom,{1942,41},compile},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'},
                    {var,{1942,41},rec57},
                    {var,{1942,41},'_'},
                    {var,{1942,41},'_'}]}],
                 [],
                 [{var,{1942,41},rec57}]},
                {clause,
                 [{generated,true},{location,{1942,41}}],
                 [{var,{1942,41},rec57}],
                 [],
                 [{call,
                   [{generated,true},{location,{1942,41}}],
                   {remote,
                    [{generated,true},{location,{1942,41}}],
                    {atom,[{generated,true},{location,{1942,41}}],erlang},
                    {atom,[{generated,true},{location,{1942,41}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1942,41}}],
                     [{atom,[{generated,true},{location,{1942,41}}],badrecord},
                      {var,{1942,41},rec57}]}]}]}]},
              {var,{1942,62},'Es'}}},
            {match,{1942,21},{var,{1942,21},rec56},{var,{1942,21},'St'}},
            {'case',
             {1942,32},
             {var,{1942,21},rec56},
             [{clause,
               {1942,32},
               [{tuple,
                 {1942,32},
                 [{atom,{1942,32},compile},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'},
                  {var,{1942,32},'_'}]}],
               [],
               [{call,
                 {1942,32},
                 {remote,
                  {1942,32},
                  {atom,{1942,32},erlang},
                  {atom,{1942,32},setelement}},
                 [{integer,{1942,32},12},
                  {var,{1942,21},rec56},
                  {var,{1942,32},rec55}]}]},
              {clause,
               [{generated,true},{location,{1942,32}}],
               [{var,[{generated,true},{location,{1942,32}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{1942,32}}],
                 {remote,
                  [{generated,true},{location,{1942,32}}],
                  {atom,[{generated,true},{location,{1942,32}}],erlang},
                  {atom,[{generated,true},{location,{1942,32}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1942,32}}],
                   [{atom,[{generated,true},{location,{1942,32}}],badrecord},
                    {var,{1942,21},rec56}]}]}]}]}]}]}]}]}]}]}.
{function,
 {1950,1},
 metadata_add_features,2,
 [{clause,
   {1950,1},
   [{var,{1950,1},'_'},{var,{1950,1},'_'}],
   [[{call,
      {1950,1},
      {remote,{1950,1},{atom,{1950,1},fake},{atom,{1950,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1950,453},{atom,{1950,1},ignore}]},
  {clause,
   {1950,1},
   [{var,{1950,23},'Ftrs'},
    {match,
     {1950,29},
     {tuple,
      {1950,29},
      [{atom,{1950,29},compile},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1950,48},'CompOpts'},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1950,29},'_'},
       {var,{1951,53},'Extra'}]},
     {var,{1951,62},'St'}}],
   [],
   [{debug_line,1952,454},
    {match,
     {1952,5},
     {var,{1952,5},'MetaData'},
     {'case',
      {1953,9},
      {call,
       {1953,14},
       {remote,
        {1953,23},
        {atom,{1953,14},proplists},
        {atom,{1953,24},get_value}},
       [{block,0,
         [{debug_line,1953,455},
          {bin,
           {1953,35},
           [{bin_element,
             {1953,35},
             {string,{1953,35},"Meta"},
             default,default}]}]},
        {var,{1953,52},'Extra'}]},
      [{clause,
        {1954,13},
        [{atom,{1954,13},undefined}],
        [],
        [{debug_line,1955,456},{nil,{1955,17}}]},
       {clause,
        {1956,13},
        [{var,{1956,13},'Bin'}],
        [],
        [{debug_line,1957,457},
         {call,
          {1957,17},
          {remote,
           {1957,23},
           {atom,{1957,17},erlang},
           {atom,{1957,24},binary_to_term}},
          [{var,{1957,39},'Bin'}]}]}]}},
    {debug_line,1959,458},
    {match,
     {1959,5},
     {var,{1959,5},'OldFtrs'},
     {call,
      {1959,15},
      {remote,{1959,24},{atom,{1959,15},proplists},{atom,{1959,25},get_value}},
      [{atom,{1959,36},enabled_features},
       {var,{1959,56},'MetaData'},
       {nil,{1959,66}}]}},
    {debug_line,1960,459},
    {match,
     {1960,5},
     {var,{1960,5},'NewFtrs'},
     {op,
      {1960,33},
      '++',
      {op,{1960,21},'--',{var,{1960,16},'Ftrs'},{var,{1960,24},'OldFtrs'}},
      {var,{1960,36},'OldFtrs'}}},
    {debug_line,1961,460},
    {match,
     {1961,5},
     {var,{1961,5},'MetaData1'},
     {call,
      {1962,9},
      {remote,{1962,18},{atom,{1962,9},proplists},{atom,{1962,19},from_map}},
      [{block,0,
        [{debug_line,1962,461},
         {call,
          {1962,28},
          {remote,{1962,32},{atom,{1962,28},maps},{atom,{1962,33},put}},
          [{atom,{1962,38},enabled_features},
           {var,{1962,58},'NewFtrs'},
           {block,0,
            [{debug_line,1963,462},
             {call,
              {1963,37},
              {remote,
               {1963,46},
               {atom,{1963,37},proplists},
               {atom,{1963,47},to_map}},
              [{var,{1963,54},'MetaData'}]}]}]}]}]}},
    {debug_line,1964,463},
    {match,
     {1964,5},
     {var,{1964,5},'Extra1'},
     {call,
      {1964,14},
      {remote,{1964,23},{atom,{1964,14},proplists},{atom,{1964,24},from_map}},
      [{block,0,
        [{debug_line,1965,464},
         {call,
          {1965,16},
          {remote,{1965,20},{atom,{1965,16},maps},{atom,{1965,21},put}},
          [{block,0,
            [{bin,
              {1965,26},
              [{bin_element,
                {1965,26},
                {string,{1965,26},"Meta"},
                default,default}]}]},
           {block,0,
            [{debug_line,1966,465},
             {call,
              {1966,25},
              {remote,
               {1966,25},
               {atom,{1966,25},erlang},
               {atom,{1966,25},term_to_binary}},
              [{var,{1966,40},'MetaData1'},
               {block,0,
                [{debug_line,1967,466},
                 {call,
                  {1967,40},
                  {atom,{1967,40},ensure_deterministic},
                  [{var,{1967,61},'CompOpts'},{nil,{1967,71}}]}]}]}]},
           {block,0,
            [{debug_line,1968,467},
             {call,
              {1968,25},
              {remote,
               {1968,34},
               {atom,{1968,25},proplists},
               {atom,{1968,35},to_map}},
              [{var,{1968,42},'Extra'}]}]}]}]}]}},
    {debug_line,1969,468},
    {block,
     {1969,5},
     [{match,{1969,5},{var,{1969,5},rec58},{var,{1969,5},'St'}},
      {'case',
       {1969,16},
       {var,{1969,5},rec58},
       [{clause,
         {1969,16},
         [{tuple,
           {1969,16},
           [{atom,{1969,16},compile},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'},
            {var,{1969,16},'_'}]}],
         [],
         [{call,
           {1969,16},
           {remote,
            {1969,16},
            {atom,{1969,16},erlang},
            {atom,{1969,16},setelement}},
           [{integer,{1969,16},14},
            {var,{1969,5},rec58},
            {var,{1969,31},'Extra1'}]}]},
        {clause,
         [{generated,true},{location,{1969,16}}],
         [{var,[{generated,true},{location,{1969,16}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1969,16}}],
           {remote,
            [{generated,true},{location,{1969,16}}],
            {atom,[{generated,true},{location,{1969,16}}],erlang},
            {atom,[{generated,true},{location,{1969,16}}],error}},
           [{tuple,
             [{generated,true},{location,{1969,16}}],
             [{atom,[{generated,true},{location,{1969,16}}],badrecord},
              {var,{1969,5},rec58}]}]}]}]}]}]}]}.
{function,
    {1971,1},
    ensure_deterministic,2,
    [{clause,
         {1971,1},
         [{var,{1971,1},'_'},{var,{1971,1},'_'}],
         [[{call,
               {1971,1},
               {remote,
                   {1971,1},
                   {atom,{1971,1},fake},
                   {atom,{1971,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1971,469},{atom,{1971,1},ignore}]},
     {clause,
         {1971,1},
         [{var,{1971,22},'CompOpts'},{var,{1971,32},'Opts'}],
         [],
         [{debug_line,1972,470},
          {'case',
              {1972,5},
              {call,
                  {1972,10},
                  {remote,
                      {1972,10},
                      {atom,{1972,10},lists},
                      {atom,{1972,10},member}},
                  [{atom,{1972,17},deterministic},{var,{1972,32},'CompOpts'}]},
              [{clause,
                   {1973,9},
                   [{atom,{1973,9},true}],
                   [],
                   [{debug_line,1974,471},
                    {cons,
                        {1974,13},
                        {atom,{1974,14},deterministic},
                        {var,{1974,30},'Opts'}}]},
               {clause,
                   {1975,9},
                   [{atom,{1975,9},false}],
                   [],
                   [{debug_line,1976,472},{var,{1976,13},'Opts'}]}]}]}]}.
{function,
    {1979,1},
    with_columns,1,
    [{clause,
         {1979,1},
         [{var,{1979,1},'_'}],
         [[{call,
               {1979,1},
               {remote,
                   {1979,1},
                   {atom,{1979,1},fake},
                   {atom,{1979,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1979,473},{atom,{1979,1},ignore}]},
     {clause,
         {1979,1},
         [{var,{1979,14},'Opts'}],
         [],
         [{debug_line,1980,474},
          {'case',
              {1980,5},
              {call,
                  {1980,10},
                  {remote,
                      {1980,19},
                      {atom,{1980,10},proplists},
                      {atom,{1980,20},get_value}},
                  [{atom,{1980,30},error_location},
                   {var,{1980,46},'Opts'},
                   {atom,{1980,52},column}]},
              [{clause,
                   {1981,9},
                   [{atom,{1981,9},column}],
                   [],
                   [{debug_line,1981,475},{atom,{1981,19},true}]},
               {clause,
                   {1982,9},
                   [{atom,{1982,9},line}],
                   [],
                   [{debug_line,1982,476},{atom,{1982,17},false}]}]}]}]}.
{function,
 {1985,1},
 consult_abstr,2,
 [{clause,
   {1985,1},
   [{var,{1985,1},'_'},{var,{1985,1},'_'}],
   [[{call,
      {1985,1},
      {remote,{1985,1},{atom,{1985,1},fake},{atom,{1985,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1985,477},{atom,{1985,1},ignore}]},
  {clause,
   {1985,1},
   [{var,{1985,15},'_Code'},{var,{1985,22},'St'}],
   [],
   [{debug_line,1986,478},
    {'case',
     {1986,5},
     {call,
      {1986,10},
      {remote,{1986,14},{atom,{1986,10},file},{atom,{1986,15},consult}},
      [{block,0,
        [{'case',
          {1986,23},
          {var,{1986,23},'St'},
          [{clause,
            [{generated,true},{location,{1986,23}}],
            [{tuple,
              [{generated,true},{location,{1986,23}}],
              [{atom,{1986,23},compile},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},rec59},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'},
               {var,{1986,23},'_'}]}],
            [],
            [{var,{1986,23},rec59}]},
           {clause,
            [{generated,true},{location,{1986,23}}],
            [{var,{1986,23},rec59}],
            [],
            [{call,
              [{generated,true},{location,{1986,23}}],
              {remote,
               [{generated,true},{location,{1986,23}}],
               {atom,[{generated,true},{location,{1986,23}}],erlang},
               {atom,[{generated,true},{location,{1986,23}}],error}},
              [{tuple,
                [{generated,true},{location,{1986,23}}],
                [{atom,[{generated,true},{location,{1986,23}}],badrecord},
                 {var,{1986,23},rec59}]}]}]}]}]}]},
     [{clause,
       {1987,2},
       [{tuple,{1987,2},[{atom,{1987,3},ok},{var,{1987,6},'Forms'}]}],
       [],
       [{debug_line,1988,479},
        {match,
         {1988,13},
         {var,{1988,13},'Encoding'},
         {call,
          {1988,24},
          {remote,
           {1988,27},
           {atom,{1988,24},epp},
           {atom,{1988,28},read_encoding}},
          [{block,0,
            [{'case',
              {1988,42},
              {var,{1988,42},'St'},
              [{clause,
                [{generated,true},{location,{1988,42}}],
                [{tuple,
                  [{generated,true},{location,{1988,42}}],
                  [{atom,{1988,42},compile},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},rec60},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'},
                   {var,{1988,42},'_'}]}],
                [],
                [{var,{1988,42},rec60}]},
               {clause,
                [{generated,true},{location,{1988,42}}],
                [{var,{1988,42},rec60}],
                [],
                [{call,
                  [{generated,true},{location,{1988,42}}],
                  {remote,
                   [{generated,true},{location,{1988,42}}],
                   {atom,[{generated,true},{location,{1988,42}}],erlang},
                   {atom,[{generated,true},{location,{1988,42}}],error}},
                  [{tuple,
                    [{generated,true},{location,{1988,42}}],
                    [{atom,[{generated,true},{location,{1988,42}}],badrecord},
                     {var,{1988,42},rec60}]}]}]}]}]}]}},
        {debug_line,1989,480},
        {tuple,
         {1989,6},
         [{atom,{1989,7},ok},
          {var,{1989,10},'Forms'},
          {block,
           {1989,16},
           [{match,{1989,16},{var,{1989,16},rec61},{var,{1989,16},'St'}},
            {'case',
             {1989,27},
             {var,{1989,16},rec61},
             [{clause,
               {1989,27},
               [{tuple,
                 {1989,27},
                 [{atom,{1989,27},compile},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'},
                  {var,{1989,27},'_'}]}],
               [],
               [{call,
                 {1989,27},
                 {remote,
                  {1989,27},
                  {atom,{1989,27},erlang},
                  {atom,{1989,27},setelement}},
                 [{integer,{1989,27},11},
                  {var,{1989,16},rec61},
                  {var,{1989,36},'Encoding'}]}]},
              {clause,
               [{generated,true},{location,{1989,27}}],
               [{var,[{generated,true},{location,{1989,27}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{1989,27}}],
                 {remote,
                  [{generated,true},{location,{1989,27}}],
                  {atom,[{generated,true},{location,{1989,27}}],erlang},
                  {atom,[{generated,true},{location,{1989,27}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1989,27}}],
                   [{atom,[{generated,true},{location,{1989,27}}],badrecord},
                    {var,{1989,16},rec61}]}]}]}]}]}]}]},
      {clause,
       {1990,2},
       [{tuple,{1990,2},[{atom,{1990,3},error},{var,{1990,9},'E'}]}],
       [],
       [{debug_line,1991,481},
        {match,
         {1991,6},
         {var,{1991,6},'Es'},
         {cons,
          {1991,11},
          {tuple,
           {1991,12},
           [{'case',
             {1991,13},
             {var,{1991,13},'St'},
             [{clause,
               [{generated,true},{location,{1991,13}}],
               [{tuple,
                 [{generated,true},{location,{1991,13}}],
                 [{atom,{1991,13},compile},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},rec62},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'},
                  {var,{1991,13},'_'}]}],
               [],
               [{var,{1991,13},rec62}]},
              {clause,
               [{generated,true},{location,{1991,13}}],
               [{var,{1991,13},rec62}],
               [],
               [{call,
                 [{generated,true},{location,{1991,13}}],
                 {remote,
                  [{generated,true},{location,{1991,13}}],
                  {atom,[{generated,true},{location,{1991,13}}],erlang},
                  {atom,[{generated,true},{location,{1991,13}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1991,13}}],
                   [{atom,[{generated,true},{location,{1991,13}}],badrecord},
                    {var,{1991,13},rec62}]}]}]}]},
            {cons,
             {1991,30},
             {tuple,
              {1991,31},
              [{atom,{1991,32},none},
               {atom,{1991,38},compile},
               {tuple,{1991,45},[{atom,{1991,46},open},{var,{1991,51},'E'}]}]},
             {nil,{1991,54}}}]},
          {nil,{1991,56}}}},
        {debug_line,1992,482},
        {tuple,
         {1992,6},
         [{atom,{1992,7},error},
          {block,
           {1992,13},
           [{match,
             {1992,24},
             {var,{1992,24},rec63},
             {op,
              {1992,49},
              '++',
              {'case',
               {1992,31},
               {var,{1992,31},'St'},
               [{clause,
                 [{generated,true},{location,{1992,31}}],
                 [{tuple,
                   [{generated,true},{location,{1992,31}}],
                   [{atom,{1992,31},compile},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'},
                    {var,{1992,31},rec65},
                    {var,{1992,31},'_'},
                    {var,{1992,31},'_'}]}],
                 [],
                 [{var,{1992,31},rec65}]},
                {clause,
                 [{generated,true},{location,{1992,31}}],
                 [{var,{1992,31},rec65}],
                 [],
                 [{call,
                   [{generated,true},{location,{1992,31}}],
                   {remote,
                    [{generated,true},{location,{1992,31}}],
                    {atom,[{generated,true},{location,{1992,31}}],erlang},
                    {atom,[{generated,true},{location,{1992,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1992,31}}],
                     [{atom,[{generated,true},{location,{1992,31}}],badrecord},
                      {var,{1992,31},rec65}]}]}]}]},
              {var,{1992,52},'Es'}}},
            {match,{1992,13},{var,{1992,13},rec64},{var,{1992,13},'St'}},
            {'case',
             {1992,24},
             {var,{1992,13},rec64},
             [{clause,
               {1992,24},
               [{tuple,
                 {1992,24},
                 [{atom,{1992,24},compile},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'},
                  {var,{1992,24},'_'}]}],
               [],
               [{call,
                 {1992,24},
                 {remote,
                  {1992,24},
                  {atom,{1992,24},erlang},
                  {atom,{1992,24},setelement}},
                 [{integer,{1992,24},12},
                  {var,{1992,13},rec64},
                  {var,{1992,24},rec63}]}]},
              {clause,
               [{generated,true},{location,{1992,24}}],
               [{var,[{generated,true},{location,{1992,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{1992,24}}],
                 {remote,
                  [{generated,true},{location,{1992,24}}],
                  {atom,[{generated,true},{location,{1992,24}}],erlang},
                  {atom,[{generated,true},{location,{1992,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1992,24}}],
                   [{atom,[{generated,true},{location,{1992,24}}],badrecord},
                    {var,{1992,13},rec64}]}]}]}]}]}]}]}]}]}]}.
{function,
 {1995,1},
 parse_core,2,
 [{clause,
   {1995,1},
   [{var,{1995,1},'_'},{var,{1995,1},'_'}],
   [[{call,
      {1995,1},
      {remote,{1995,1},{atom,{1995,1},fake},{atom,{1995,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1995,483},{atom,{1995,1},ignore}]},
  {clause,
   {1995,1},
   [{var,{1995,12},'_Code'},{var,{1995,19},'St'}],
   [],
   [{debug_line,1996,484},
    {'case',
     {1996,5},
     {call,
      {1996,10},
      {remote,{1996,14},{atom,{1996,10},file},{atom,{1996,15},read_file}},
      [{block,0,
        [{'case',
          {1996,25},
          {var,{1996,25},'St'},
          [{clause,
            [{generated,true},{location,{1996,25}}],
            [{tuple,
              [{generated,true},{location,{1996,25}}],
              [{atom,{1996,25},compile},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},rec66},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'},
               {var,{1996,25},'_'}]}],
            [],
            [{var,{1996,25},rec66}]},
           {clause,
            [{generated,true},{location,{1996,25}}],
            [{var,{1996,25},rec66}],
            [],
            [{call,
              [{generated,true},{location,{1996,25}}],
              {remote,
               [{generated,true},{location,{1996,25}}],
               {atom,[{generated,true},{location,{1996,25}}],erlang},
               {atom,[{generated,true},{location,{1996,25}}],error}},
              [{tuple,
                [{generated,true},{location,{1996,25}}],
                [{atom,[{generated,true},{location,{1996,25}}],badrecord},
                 {var,{1996,25},rec66}]}]}]}]}]}]},
     [{clause,
       {1997,2},
       [{tuple,{1997,2},[{atom,{1997,3},ok},{var,{1997,6},'Bin'}]}],
       [],
       [{debug_line,1998,485},
        {'case',
         {1998,6},
         {call,
          {1998,11},
          {remote,
           {1998,20},
           {atom,{1998,11},core_scan},
           {atom,{1998,21},string}},
          [{block,0,
            [{call,
              {1998,28},
              {remote,
               {1998,28},
               {atom,{1998,28},erlang},
               {atom,{1998,28},binary_to_list}},
              [{var,{1998,43},'Bin'}]}]}]},
         [{clause,
           {1999,3},
           [{tuple,
             {1999,3},
             [{atom,{1999,4},ok},{var,{1999,7},'Toks'},{var,{1999,12},'_'}]}],
           [],
           [{debug_line,2000,486},
            {'case',
             {2000,7},
             {call,
              {2000,12},
              {remote,
               {2000,22},
               {atom,{2000,12},core_parse},
               {atom,{2000,23},parse}},
              [{var,{2000,29},'Toks'}]},
             [{clause,
               {2001,4},
               [{tuple,{2001,4},[{atom,{2001,5},ok},{var,{2001,8},'Mod'}]}],
               [],
               [{debug_line,2002,487},
                {match,
                 {2002,8},
                 {var,{2002,8},'Name'},
                 {'case',
                  {2002,16},
                  {'case',
                   {2002,16},
                   {var,{2002,16},'Mod'},
                   [{clause,
                     [{generated,true},{location,{2002,16}}],
                     [{tuple,
                       [{generated,true},{location,{2002,16}}],
                       [{atom,{2002,16},c_module},
                        {var,{2002,16},'_'},
                        {var,{2002,16},rec68},
                        {var,{2002,16},'_'},
                        {var,{2002,16},'_'},
                        {var,{2002,16},'_'}]}],
                     [],
                     [{var,{2002,16},rec68}]},
                    {clause,
                     [{generated,true},{location,{2002,16}}],
                     [{var,{2002,16},rec68}],
                     [],
                     [{call,
                       [{generated,true},{location,{2002,16}}],
                       {remote,
                        [{generated,true},{location,{2002,16}}],
                        {atom,[{generated,true},{location,{2002,16}}],erlang},
                        {atom,[{generated,true},{location,{2002,16}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2002,16}}],
                         [{atom,
                           [{generated,true},{location,{2002,16}}],
                           badrecord},
                          {var,{2002,16},rec68}]}]}]}]},
                  [{clause,
                    [{generated,true},{location,{2002,16}}],
                    [{tuple,
                      [{generated,true},{location,{2002,16}}],
                      [{atom,{2002,16},c_literal},
                       {var,{2002,16},'_'},
                       {var,{2002,16},rec67}]}],
                    [],
                    [{var,{2002,16},rec67}]},
                   {clause,
                    [{generated,true},{location,{2002,16}}],
                    [{var,{2002,16},rec67}],
                    [],
                    [{call,
                      [{generated,true},{location,{2002,16}}],
                      {remote,
                       [{generated,true},{location,{2002,16}}],
                       {atom,[{generated,true},{location,{2002,16}}],erlang},
                       {atom,[{generated,true},{location,{2002,16}}],error}},
                      [{tuple,
                        [{generated,true},{location,{2002,16}}],
                        [{atom,
                          [{generated,true},{location,{2002,16}}],
                          badrecord},
                         {var,{2002,16},rec67}]}]}]}]}},
                {debug_line,2003,488},
                {tuple,
                 {2003,8},
                 [{atom,{2003,9},ok},
                  {var,{2003,12},'Mod'},
                  {block,
                   {2003,16},
                   [{match,
                     {2003,16},
                     {var,{2003,16},rec69},
                     {var,{2003,16},'St'}},
                    {'case',
                     {2003,27},
                     {var,{2003,16},rec69},
                     [{clause,
                       {2003,27},
                       [{tuple,
                         {2003,27},
                         [{atom,{2003,27},compile},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'},
                          {var,{2003,27},'_'}]}],
                       [],
                       [{call,
                         {2003,27},
                         {remote,
                          {2003,27},
                          {atom,{2003,27},erlang},
                          {atom,{2003,27},setelement}},
                         [{integer,{2003,27},7},
                          {var,{2003,16},rec69},
                          {var,{2003,34},'Name'}]}]},
                      {clause,
                       [{generated,true},{location,{2003,27}}],
                       [{var,[{generated,true},{location,{2003,27}}],'_'}],
                       [],
                       [{call,
                         [{generated,true},{location,{2003,27}}],
                         {remote,
                          [{generated,true},{location,{2003,27}}],
                          {atom,
                           [{generated,true},{location,{2003,27}}],
                           erlang},
                          {atom,
                           [{generated,true},{location,{2003,27}}],
                           error}},
                         [{tuple,
                           [{generated,true},{location,{2003,27}}],
                           [{atom,
                             [{generated,true},{location,{2003,27}}],
                             badrecord},
                            {var,{2003,16},rec69}]}]}]}]}]}]}]},
              {clause,
               {2004,4},
               [{tuple,{2004,4},[{atom,{2004,5},error},{var,{2004,11},'E'}]}],
               [],
               [{debug_line,2005,489},
                {match,
                 {2005,8},
                 {var,{2005,8},'Es'},
                 {cons,
                  {2005,13},
                  {tuple,
                   {2005,14},
                   [{'case',
                     {2005,15},
                     {var,{2005,15},'St'},
                     [{clause,
                       [{generated,true},{location,{2005,15}}],
                       [{tuple,
                         [{generated,true},{location,{2005,15}}],
                         [{atom,{2005,15},compile},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},rec70},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'},
                          {var,{2005,15},'_'}]}],
                       [],
                       [{var,{2005,15},rec70}]},
                      {clause,
                       [{generated,true},{location,{2005,15}}],
                       [{var,{2005,15},rec70}],
                       [],
                       [{call,
                         [{generated,true},{location,{2005,15}}],
                         {remote,
                          [{generated,true},{location,{2005,15}}],
                          {atom,
                           [{generated,true},{location,{2005,15}}],
                           erlang},
                          {atom,
                           [{generated,true},{location,{2005,15}}],
                           error}},
                         [{tuple,
                           [{generated,true},{location,{2005,15}}],
                           [{atom,
                             [{generated,true},{location,{2005,15}}],
                             badrecord},
                            {var,{2005,15},rec70}]}]}]}]},
                    {cons,{2005,32},{var,{2005,33},'E'},{nil,{2005,34}}}]},
                  {nil,{2005,36}}}},
                {debug_line,2006,490},
                {tuple,
                 {2006,8},
                 [{atom,{2006,9},error},
                  {block,
                   {2006,15},
                   [{match,
                     {2006,26},
                     {var,{2006,26},rec71},
                     {op,
                      {2006,51},
                      '++',
                      {'case',
                       {2006,33},
                       {var,{2006,33},'St'},
                       [{clause,
                         [{generated,true},{location,{2006,33}}],
                         [{tuple,
                           [{generated,true},{location,{2006,33}}],
                           [{atom,{2006,33},compile},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'},
                            {var,{2006,33},rec73},
                            {var,{2006,33},'_'},
                            {var,{2006,33},'_'}]}],
                         [],
                         [{var,{2006,33},rec73}]},
                        {clause,
                         [{generated,true},{location,{2006,33}}],
                         [{var,{2006,33},rec73}],
                         [],
                         [{call,
                           [{generated,true},{location,{2006,33}}],
                           {remote,
                            [{generated,true},{location,{2006,33}}],
                            {atom,
                             [{generated,true},{location,{2006,33}}],
                             erlang},
                            {atom,
                             [{generated,true},{location,{2006,33}}],
                             error}},
                           [{tuple,
                             [{generated,true},{location,{2006,33}}],
                             [{atom,
                               [{generated,true},{location,{2006,33}}],
                               badrecord},
                              {var,{2006,33},rec73}]}]}]}]},
                      {var,{2006,54},'Es'}}},
                    {match,
                     {2006,15},
                     {var,{2006,15},rec72},
                     {var,{2006,15},'St'}},
                    {'case',
                     {2006,26},
                     {var,{2006,15},rec72},
                     [{clause,
                       {2006,26},
                       [{tuple,
                         {2006,26},
                         [{atom,{2006,26},compile},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'},
                          {var,{2006,26},'_'}]}],
                       [],
                       [{call,
                         {2006,26},
                         {remote,
                          {2006,26},
                          {atom,{2006,26},erlang},
                          {atom,{2006,26},setelement}},
                         [{integer,{2006,26},12},
                          {var,{2006,15},rec72},
                          {var,{2006,26},rec71}]}]},
                      {clause,
                       [{generated,true},{location,{2006,26}}],
                       [{var,[{generated,true},{location,{2006,26}}],'_'}],
                       [],
                       [{call,
                         [{generated,true},{location,{2006,26}}],
                         {remote,
                          [{generated,true},{location,{2006,26}}],
                          {atom,
                           [{generated,true},{location,{2006,26}}],
                           erlang},
                          {atom,
                           [{generated,true},{location,{2006,26}}],
                           error}},
                         [{tuple,
                           [{generated,true},{location,{2006,26}}],
                           [{atom,
                             [{generated,true},{location,{2006,26}}],
                             badrecord},
                            {var,{2006,15},rec72}]}]}]}]}]}]}]}]}]},
          {clause,
           {2008,3},
           [{tuple,
             {2008,3},
             [{atom,{2008,4},error},{var,{2008,10},'E'},{var,{2008,12},'_'}]}],
           [],
           [{debug_line,2009,491},
            {match,
             {2009,7},
             {var,{2009,7},'Es'},
             {cons,
              {2009,12},
              {tuple,
               {2009,13},
               [{'case',
                 {2009,14},
                 {var,{2009,14},'St'},
                 [{clause,
                   [{generated,true},{location,{2009,14}}],
                   [{tuple,
                     [{generated,true},{location,{2009,14}}],
                     [{atom,{2009,14},compile},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},rec74},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'},
                      {var,{2009,14},'_'}]}],
                   [],
                   [{var,{2009,14},rec74}]},
                  {clause,
                   [{generated,true},{location,{2009,14}}],
                   [{var,{2009,14},rec74}],
                   [],
                   [{call,
                     [{generated,true},{location,{2009,14}}],
                     {remote,
                      [{generated,true},{location,{2009,14}}],
                      {atom,[{generated,true},{location,{2009,14}}],erlang},
                      {atom,[{generated,true},{location,{2009,14}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2009,14}}],
                       [{atom,
                         [{generated,true},{location,{2009,14}}],
                         badrecord},
                        {var,{2009,14},rec74}]}]}]}]},
                {cons,{2009,31},{var,{2009,32},'E'},{nil,{2009,33}}}]},
              {nil,{2009,35}}}},
            {debug_line,2010,492},
            {tuple,
             {2010,7},
             [{atom,{2010,8},error},
              {block,
               {2010,14},
               [{match,
                 {2010,25},
                 {var,{2010,25},rec75},
                 {op,
                  {2010,50},
                  '++',
                  {'case',
                   {2010,32},
                   {var,{2010,32},'St'},
                   [{clause,
                     [{generated,true},{location,{2010,32}}],
                     [{tuple,
                       [{generated,true},{location,{2010,32}}],
                       [{atom,{2010,32},compile},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'},
                        {var,{2010,32},rec77},
                        {var,{2010,32},'_'},
                        {var,{2010,32},'_'}]}],
                     [],
                     [{var,{2010,32},rec77}]},
                    {clause,
                     [{generated,true},{location,{2010,32}}],
                     [{var,{2010,32},rec77}],
                     [],
                     [{call,
                       [{generated,true},{location,{2010,32}}],
                       {remote,
                        [{generated,true},{location,{2010,32}}],
                        {atom,[{generated,true},{location,{2010,32}}],erlang},
                        {atom,[{generated,true},{location,{2010,32}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2010,32}}],
                         [{atom,
                           [{generated,true},{location,{2010,32}}],
                           badrecord},
                          {var,{2010,32},rec77}]}]}]}]},
                  {var,{2010,53},'Es'}}},
                {match,{2010,14},{var,{2010,14},rec76},{var,{2010,14},'St'}},
                {'case',
                 {2010,25},
                 {var,{2010,14},rec76},
                 [{clause,
                   {2010,25},
                   [{tuple,
                     {2010,25},
                     [{atom,{2010,25},compile},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'},
                      {var,{2010,25},'_'}]}],
                   [],
                   [{call,
                     {2010,25},
                     {remote,
                      {2010,25},
                      {atom,{2010,25},erlang},
                      {atom,{2010,25},setelement}},
                     [{integer,{2010,25},12},
                      {var,{2010,14},rec76},
                      {var,{2010,25},rec75}]}]},
                  {clause,
                   [{generated,true},{location,{2010,25}}],
                   [{var,[{generated,true},{location,{2010,25}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{2010,25}}],
                     {remote,
                      [{generated,true},{location,{2010,25}}],
                      {atom,[{generated,true},{location,{2010,25}}],erlang},
                      {atom,[{generated,true},{location,{2010,25}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2010,25}}],
                       [{atom,
                         [{generated,true},{location,{2010,25}}],
                         badrecord},
                        {var,{2010,14},rec76}]}]}]}]}]}]}]}]}]},
      {clause,
       {2012,2},
       [{tuple,{2012,2},[{atom,{2012,3},error},{var,{2012,9},'E'}]}],
       [],
       [{debug_line,2013,493},
        {match,
         {2013,6},
         {var,{2013,6},'Es'},
         {cons,
          {2013,11},
          {tuple,
           {2013,12},
           [{'case',
             {2013,13},
             {var,{2013,13},'St'},
             [{clause,
               [{generated,true},{location,{2013,13}}],
               [{tuple,
                 [{generated,true},{location,{2013,13}}],
                 [{atom,{2013,13},compile},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},rec78},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'},
                  {var,{2013,13},'_'}]}],
               [],
               [{var,{2013,13},rec78}]},
              {clause,
               [{generated,true},{location,{2013,13}}],
               [{var,{2013,13},rec78}],
               [],
               [{call,
                 [{generated,true},{location,{2013,13}}],
                 {remote,
                  [{generated,true},{location,{2013,13}}],
                  {atom,[{generated,true},{location,{2013,13}}],erlang},
                  {atom,[{generated,true},{location,{2013,13}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2013,13}}],
                   [{atom,[{generated,true},{location,{2013,13}}],badrecord},
                    {var,{2013,13},rec78}]}]}]}]},
            {cons,
             {2013,30},
             {tuple,
              {2013,31},
              [{atom,{2013,32},none},
               {atom,{2013,37},compile},
               {tuple,{2013,45},[{atom,{2013,46},open},{var,{2013,51},'E'}]}]},
             {nil,{2013,54}}}]},
          {nil,{2013,56}}}},
        {debug_line,2014,494},
        {tuple,
         {2014,6},
         [{atom,{2014,7},error},
          {block,
           {2014,13},
           [{match,
             {2014,24},
             {var,{2014,24},rec79},
             {op,
              {2014,49},
              '++',
              {'case',
               {2014,31},
               {var,{2014,31},'St'},
               [{clause,
                 [{generated,true},{location,{2014,31}}],
                 [{tuple,
                   [{generated,true},{location,{2014,31}}],
                   [{atom,{2014,31},compile},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'},
                    {var,{2014,31},rec81},
                    {var,{2014,31},'_'},
                    {var,{2014,31},'_'}]}],
                 [],
                 [{var,{2014,31},rec81}]},
                {clause,
                 [{generated,true},{location,{2014,31}}],
                 [{var,{2014,31},rec81}],
                 [],
                 [{call,
                   [{generated,true},{location,{2014,31}}],
                   {remote,
                    [{generated,true},{location,{2014,31}}],
                    {atom,[{generated,true},{location,{2014,31}}],erlang},
                    {atom,[{generated,true},{location,{2014,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2014,31}}],
                     [{atom,[{generated,true},{location,{2014,31}}],badrecord},
                      {var,{2014,31},rec81}]}]}]}]},
              {var,{2014,52},'Es'}}},
            {match,{2014,13},{var,{2014,13},rec80},{var,{2014,13},'St'}},
            {'case',
             {2014,24},
             {var,{2014,13},rec80},
             [{clause,
               {2014,24},
               [{tuple,
                 {2014,24},
                 [{atom,{2014,24},compile},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'},
                  {var,{2014,24},'_'}]}],
               [],
               [{call,
                 {2014,24},
                 {remote,
                  {2014,24},
                  {atom,{2014,24},erlang},
                  {atom,{2014,24},setelement}},
                 [{integer,{2014,24},12},
                  {var,{2014,13},rec80},
                  {var,{2014,24},rec79}]}]},
              {clause,
               [{generated,true},{location,{2014,24}}],
               [{var,[{generated,true},{location,{2014,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2014,24}}],
                 {remote,
                  [{generated,true},{location,{2014,24}}],
                  {atom,[{generated,true},{location,{2014,24}}],erlang},
                  {atom,[{generated,true},{location,{2014,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2014,24}}],
                   [{atom,[{generated,true},{location,{2014,24}}],badrecord},
                    {var,{2014,13},rec80}]}]}]}]}]}]}]}]}]}]}.
{function,
 {2017,1},
 get_module_name_from_core,2,
 [{clause,
   {2017,1},
   [{var,{2017,1},'_'},{var,{2017,1},'_'}],
   [[{call,
      {2017,1},
      {remote,{2017,1},{atom,{2017,1},fake},{atom,{2017,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2017,495},{atom,{2017,1},ignore}]},
  {clause,
   {2017,1},
   [{var,{2017,27},'Core'},{var,{2017,33},'St'}],
   [],
   [{debug_line,2018,496},
    {'try',
     {2018,5},
     [{debug_line,2019,497},
      {match,
       {2019,9},
       {var,{2019,9},'Mod'},
       {call,
        {2019,15},
        {remote,{2019,19},{atom,{2019,15},cerl},{atom,{2019,20},concrete}},
        [{block,0,
          [{call,
            {2019,29},
            {remote,
             {2019,33},
             {atom,{2019,29},cerl},
             {atom,{2019,34},module_name}},
            [{var,{2019,46},'Core'}]}]}]}},
      {debug_line,2020,498},
      {tuple,
       {2020,9},
       [{atom,{2020,10},ok},
        {var,{2020,13},'Core'},
        {block,
         {2020,18},
         [{match,{2020,18},{var,{2020,18},rec82},{var,{2020,18},'St'}},
          {'case',
           {2020,29},
           {var,{2020,18},rec82},
           [{clause,
             {2020,29},
             [{tuple,
               {2020,29},
               [{atom,{2020,29},compile},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'},
                {var,{2020,29},'_'}]}],
             [],
             [{call,
               {2020,29},
               {remote,
                {2020,29},
                {atom,{2020,29},erlang},
                {atom,{2020,29},setelement}},
               [{integer,{2020,29},7},
                {var,{2020,18},rec82},
                {var,{2020,36},'Mod'}]}]},
            {clause,
             [{generated,true},{location,{2020,29}}],
             [{var,[{generated,true},{location,{2020,29}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2020,29}}],
               {remote,
                [{generated,true},{location,{2020,29}}],
                {atom,[{generated,true},{location,{2020,29}}],erlang},
                {atom,[{generated,true},{location,{2020,29}}],error}},
               [{tuple,
                 [{generated,true},{location,{2020,29}}],
                 [{atom,[{generated,true},{location,{2020,29}}],badrecord},
                  {var,{2020,18},rec82}]}]}]}]}]}]}],
     [],
     [{clause,
       {2022,9},
       [{tuple,
         {2022,9},
         [{var,{2022,9},'_'},{var,{2022,11},'_'},{var,{2022,11},'_'}]}],
       [],
       [{debug_line,2024,499},
        {tuple,
         {2024,13},
         [{atom,{2024,14},ok},{var,{2024,17},'Core'},{var,{2024,22},'St'}]}]}],
     []}]}]}.
{function,{2027,1},
          compile_options,1,
          [{clause,{2027,1},
                   [{var,{2027,1},'_'}],
                   [[{call,{2027,1},
                           {remote,{2027,1},
                                   {atom,{2027,1},fake},
                                   {atom,{2027,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2027,500},{atom,{2027,1},ignore}]},
           {clause,{2027,1},
                   [{cons,{2027,17},
                          {tuple,{2027,18},
                                 [{atom,{2027,19},attribute},
                                  {var,{2027,29},'_L'},
                                  {atom,{2027,32},compile},
                                  {var,{2027,40},'C'}]},
                          {var,{2027,43},'Fs'}}],
                   [[{call,{2027,53},
                           {remote,{2027,53},
                                   {atom,{2027,53},erlang},
                                   {atom,{2027,53},is_list}},
                           [{var,{2027,61},'C'}]}]],
                   [{debug_line,2028,501},
                    {op,{2028,7},
                        '++',
                        {var,{2028,5},'C'},
                        {call,{2028,10},
                              {atom,{2028,10},compile_options},
                              [{var,{2028,26},'Fs'}]}}]},
           {clause,{2029,1},
                   [{cons,{2029,17},
                          {tuple,{2029,18},
                                 [{atom,{2029,19},attribute},
                                  {var,{2029,29},'_L'},
                                  {atom,{2029,32},compile},
                                  {var,{2029,40},'C'}]},
                          {var,{2029,43},'Fs'}}],
                   [],
                   [{debug_line,2030,502},
                    {cons,{2030,5},
                          {var,{2030,6},'C'},
                          {call,{2030,8},
                                {atom,{2030,8},compile_options},
                                [{var,{2030,24},'Fs'}]}}]},
           {clause,{2031,1},
                   [{cons,{2031,17},
                          {var,{2031,18},'_F'},
                          {var,{2031,21},'Fs'}}],
                   [],
                   [{debug_line,2031,503},
                    {call,{2031,29},
                          {atom,{2031,29},compile_options},
                          [{var,{2031,45},'Fs'}]}]},
           {clause,{2032,1},
                   [{nil,{2032,17}}],
                   [],
                   [{debug_line,2032,504},{nil,{2032,24}}]}]}.
{function,{2034,1},
          clean_parse_transforms,1,
          [{clause,{2034,1},
                   [{var,{2034,1},'_'}],
                   [[{call,{2034,1},
                           {remote,{2034,1},
                                   {atom,{2034,1},fake},
                                   {atom,{2034,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2034,505},{atom,{2034,1},ignore}]},
           {clause,{2034,1},
                   [{var,{2034,24},'Fs'}],
                   [],
                   [{debug_line,2035,506},
                    {call,{2035,5},
                          {atom,{2035,5},clean_parse_transforms_1},
                          [{var,{2035,30},'Fs'},{nil,{2035,34}}]}]}]}.
{function,
 {2037,1},
 clean_parse_transforms_1,2,
 [{clause,
   {2037,1},
   [{var,{2037,1},'_'},{var,{2037,1},'_'}],
   [[{call,
      {2037,1},
      {remote,{2037,1},{atom,{2037,1},fake},{atom,{2037,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2037,507},{atom,{2037,1},ignore}]},
  {clause,
   {2037,1},
   [{cons,
     {2037,26},
     {tuple,
      {2037,27},
      [{atom,{2037,28},attribute},
       {var,{2037,38},'L'},
       {atom,{2037,40},compile},
       {var,{2037,48},'C0'}]},
     {var,{2037,52},'Fs'}},
    {var,{2037,57},'Acc'}],
   [[{call,
      {2037,67},
      {remote,{2037,67},{atom,{2037,67},erlang},{atom,{2037,67},is_list}},
      [{var,{2037,75},'C0'}]}]],
   [{debug_line,2038,508},
    {match,
     {2038,5},
     {var,{2038,5},'C'},
     {call,
      {2038,9},
      {remote,{2038,14},{atom,{2038,9},lists},{atom,{2038,15},filter}},
      [{block,0,
        [{'fun',
          {2038,22},
          {clauses,
           [{clause,
             {2038,25},
             [{tuple,
               {2038,26},
               [{atom,{2038,27},parse_transform},{var,{2038,43},'_'}]}],
             [],
             [{atom,{2038,50},false}]},
            {clause,
             {2039,4},
             [{var,{2039,5},'_'}],
             [],
             [{debug_line,2039,509},{atom,{2039,11},true}]}]}}]},
       {var,{2040,13},'C0'}]}},
    {debug_line,2041,510},
    {call,
     {2041,5},
     {atom,{2041,5},clean_parse_transforms_1},
     [{var,{2041,30},'Fs'},
      {block,0,
       [{cons,
         {2041,34},
         {tuple,
          {2041,35},
          [{atom,{2041,36},attribute},
           {var,{2041,46},'L'},
           {atom,{2041,48},compile},
           {var,{2041,56},'C'}]},
         {var,{2041,59},'Acc'}}]}]}]},
  {clause,
   {2042,1},
   [{cons,
     {2042,26},
     {tuple,
      {2042,27},
      [{atom,{2042,28},attribute},
       {var,{2042,38},'_'},
       {atom,{2042,40},compile},
       {tuple,
        {2042,48},
        [{atom,{2042,49},parse_transform},{var,{2042,65},'_'}]}]},
     {var,{2042,69},'Fs'}},
    {var,{2042,74},'Acc'}],
   [],
   [{debug_line,2043,511},
    {call,
     {2043,5},
     {atom,{2043,5},clean_parse_transforms_1},
     [{var,{2043,30},'Fs'},{var,{2043,34},'Acc'}]}]},
  {clause,
   {2044,1},
   [{cons,{2044,26},{var,{2044,27},'F'},{var,{2044,29},'Fs'}},
    {var,{2044,34},'Acc'}],
   [],
   [{debug_line,2045,512},
    {call,
     {2045,5},
     {atom,{2045,5},clean_parse_transforms_1},
     [{var,{2045,30},'Fs'},
      {block,0,
       [{cons,{2045,34},{var,{2045,35},'F'},{var,{2045,37},'Acc'}}]}]}]},
  {clause,
   {2046,1},
   [{nil,{2046,26}},{var,{2046,30},'Acc'}],
   [],
   [{debug_line,2046,513},
    {call,
     {2046,38},
     {remote,{2046,38},{atom,{2046,38},lists},{atom,{2046,38},reverse}},
     [{var,{2046,46},'Acc'}]}]}]}.
{function,
    {2048,1},
    transforms,1,
    [{clause,
         {2048,1},
         [{var,{2048,1},'_'}],
         [[{call,
               {2048,1},
               {remote,
                   {2048,1},
                   {atom,{2048,1},fake},
                   {atom,{2048,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2048,514},{atom,{2048,1},ignore}]},
     {clause,
         {2048,1},
         [{var,{2048,12},'Os'}],
         [],
         [{debug_line,2048,515},
          {lc,{2048,19},
              {block,0,[{var,{2048,21},'M'}]},
              [{block,0,[{atom,{2048,49},true}]},
               {generate,
                   {2048,46},
                   {tuple,
                       {2048,26},
                       [{atom,{2048,27},parse_transform},{var,{2048,43},'M'}]},
                   {var,{2048,49},'Os'}}]}]}]}.
{function,
    {2050,1},
    transform_module,2,
    [{clause,
         {2050,1},
         [{var,{2050,1},'_'},{var,{2050,1},'_'}],
         [[{call,
               {2050,1},
               {remote,
                   {2050,1},
                   {atom,{2050,1},fake},
                   {atom,{2050,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2050,516},{atom,{2050,1},ignore}]},
     {clause,
         {2050,1},
         [{var,{2050,18},'Code0'},
          {match,
              {2050,25},
              {tuple,
                  {2050,25},
                  [{atom,{2050,25},compile},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,42},'Opt'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'},
                   {var,{2050,25},'_'}]},
              {var,{2050,47},'St'}}],
         [],
         [{debug_line,2052,517},
          {'case',
              {2052,5},
              {call,
                  {2052,10},
                  {atom,{2052,10},transforms},
                  [{block,0,
                       [{op,{2052,25},
                            '++',
                            {var,{2052,21},'Opt'},
                            {call,
                                {2052,28},
                                {atom,{2052,28},compile_options},
                                [{var,{2052,44},'Code0'}]}}]}]},
              [{clause,
                   {2053,2},
                   [{nil,{2053,2}}],
                   [],
                   [{debug_line,2055,518},
                    {tuple,
                        {2055,13},
                        [{atom,{2055,14},ok},
                         {var,{2055,17},'Code0'},
                         {var,{2055,23},'St'}]}]},
               {clause,
                   {2056,2},
                   [{var,{2056,2},'Ts'}],
                   [],
                   [{debug_line,2059,519},
                    {match,
                        {2059,6},
                        {var,{2059,6},'Code'},
                        {call,
                            {2059,13},
                            {atom,{2059,13},clean_parse_transforms},
                            [{var,{2059,36},'Code0'}]}},
                    {debug_line,2060,520},
                    {call,
                        {2060,6},
                        {atom,{2060,6},foldl_transform},
                        [{var,{2060,22},'Ts'},
                         {var,{2060,26},'Code'},
                         {var,{2060,32},'St'}]}]}]}]}]}.
{function,
 {2063,1},
 foldl_transform,3,
 [{clause,
   {2063,1},
   [{var,{2063,1},'_'},{var,{2063,1},'_'},{var,{2063,1},'_'}],
   [[{call,
      {2063,1},
      {remote,{2063,1},{atom,{2063,1},fake},{atom,{2063,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2063,521},{atom,{2063,1},ignore}]},
  {clause,
   {2063,1},
   [{cons,{2063,17},{var,{2063,18},'T'},{var,{2063,20},'Ts'}},
    {var,{2063,25},'Code0'},
    {var,{2063,32},'St'}],
   [],
   [{debug_line,2064,522},
    {match,
     {2064,5},
     {var,{2064,5},'Name'},
     {op,
      {2064,25},
      '++',
      {string,{2064,12},"transform "},
      {call,
       {2064,28},
       {remote,
        {2064,28},
        {atom,{2064,28},erlang},
        {atom,{2064,28},atom_to_list}},
       [{var,{2064,41},'T'}]}}},
    {debug_line,2065,523},
    {'case',
     {2065,5},
     {'case',
      {2065,32},
      {op,
       {2065,32},
       '=:=',
       {call,
        {2065,10},
        {remote,
         {2065,14},
         {atom,{2065,10},code},
         {atom,{2065,15},ensure_loaded}},
        [{var,{2065,29},'T'}]},
       {tuple,{2065,36},[{atom,{2065,37},module},{var,{2065,44},'T'}]}},
      [{clause,
        {2065,32},
        [{atom,{2065,32},true}],
        [],
        [{debug_line,2066,524},
         {call,
          {2066,9},
          {remote,
           {2066,15},
           {atom,{2066,9},erlang},
           {atom,{2066,16},function_exported}},
          [{var,{2066,34},'T'},
           {atom,{2066,37},parse_transform},
           {integer,{2066,54},2}]}]},
       {clause,{2065,32},[{atom,{2065,32},false}],[],[{atom,{2065,32},false}]},
       {clause,
        [{generated,true},{location,{2065,32}}],
        [{var,{2065,32},cov1}],
        [],
        [{call,
          {2065,32},
          {remote,{2065,32},{atom,{2065,32},erlang},{atom,{2065,32},error}},
          [{block,0,
            [{tuple,
              {2065,32},
              [{atom,{2065,32},badarg},{var,{2065,32},cov1}]}]}]}]}]},
     [{clause,
       {2067,9},
       [{atom,{2067,9},true}],
       [],
       [{debug_line,2068,525},
        {match,
         {2068,13},
         {var,{2068,13},'Fun'},
         {'fun',
          {2068,19},
          {clauses,
           [{clause,
             {2068,22},
             [{var,{2068,23},'Code'},{var,{2068,29},'S'}],
             [],
             [{debug_line,2069,526},
              {call,
               {2069,27},
               {remote,
                {2069,28},
                {var,{2069,27},'T'},
                {atom,{2069,29},parse_transform}},
               [{var,{2069,45},'Code'},
                {block,0,
                 [{'case',
                   {2069,51},
                   {var,{2069,51},'S'},
                   [{clause,
                     [{generated,true},{location,{2069,51}}],
                     [{tuple,
                       [{generated,true},{location,{2069,51}}],
                       [{atom,{2069,51},compile},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},rec83},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'},
                        {var,{2069,51},'_'}]}],
                     [],
                     [{var,{2069,51},rec83}]},
                    {clause,
                     [{generated,true},{location,{2069,51}}],
                     [{var,{2069,51},rec83}],
                     [],
                     [{call,
                       [{generated,true},{location,{2069,51}}],
                       {remote,
                        [{generated,true},{location,{2069,51}}],
                        {atom,[{generated,true},{location,{2069,51}}],erlang},
                        {atom,[{generated,true},{location,{2069,51}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2069,51}}],
                         [{atom,
                           [{generated,true},{location,{2069,51}}],
                           badrecord},
                          {var,{2069,51},rec83}]}]}]}]}]}]}]}]}}},
        {debug_line,2071,527},
        {match,
         {2071,13},
         {var,{2071,13},'Run'},
         {call,{2071,19},{atom,{2071,19},runner},[{var,{2071,26},'St'}]}},
        {debug_line,2072,528},
        {match,
         {2072,13},
         {var,{2072,13},'StrippedCode'},
         {call,
          {2072,28},
          {atom,{2072,28},maybe_strip_columns},
          [{var,{2072,48},'Code0'},{var,{2072,55},'T'},{var,{2072,58},'St'}]}},
        {debug_line,2073,529},
        {'try',
         {2073,13},
         [{call,
           {2073,17},
           {var,{2073,17},'Run'},
           [{block,0,
             [{tuple,
               {2073,21},
               [{var,{2073,22},'Name'},{var,{2073,28},'Fun'}]}]},
            {var,{2073,34},'StrippedCode'},
            {var,{2073,48},'St'}]}],
         [{clause,
           {2074,17},
           [{tuple,
             {2074,17},
             [{atom,{2074,18},error},
              {var,{2074,24},'Es'},
              {var,{2074,27},'Ws'}]}],
           [],
           [{debug_line,2075,530},
            {tuple,
             {2075,21},
             [{atom,{2075,22},error},
              {block,
               {2075,28},
               [{match,
                 {2075,39},
                 {var,{2075,39},rec84},
                 {op,
                  {2075,68},
                  '++',
                  {'case',
                   {2075,48},
                   {var,{2075,48},'St'},
                   [{clause,
                     [{generated,true},{location,{2075,48}}],
                     [{tuple,
                       [{generated,true},{location,{2075,48}}],
                       [{atom,{2075,48},compile},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},'_'},
                        {var,{2075,48},rec87},
                        {var,{2075,48},'_'}]}],
                     [],
                     [{var,{2075,48},rec87}]},
                    {clause,
                     [{generated,true},{location,{2075,48}}],
                     [{var,{2075,48},rec87}],
                     [],
                     [{call,
                       [{generated,true},{location,{2075,48}}],
                       {remote,
                        [{generated,true},{location,{2075,48}}],
                        {atom,[{generated,true},{location,{2075,48}}],erlang},
                        {atom,[{generated,true},{location,{2075,48}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2075,48}}],
                         [{atom,
                           [{generated,true},{location,{2075,48}}],
                           badrecord},
                          {var,{2075,48},rec87}]}]}]}]},
                  {var,{2075,71},'Ws'}}},
                {match,
                 {2076,39},
                 {var,{2076,39},rec85},
                 {op,
                  {2076,64},
                  '++',
                  {'case',
                   {2076,46},
                   {var,{2076,46},'St'},
                   [{clause,
                     [{generated,true},{location,{2076,46}}],
                     [{tuple,
                       [{generated,true},{location,{2076,46}}],
                       [{atom,{2076,46},compile},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'},
                        {var,{2076,46},rec88},
                        {var,{2076,46},'_'},
                        {var,{2076,46},'_'}]}],
                     [],
                     [{var,{2076,46},rec88}]},
                    {clause,
                     [{generated,true},{location,{2076,46}}],
                     [{var,{2076,46},rec88}],
                     [],
                     [{call,
                       [{generated,true},{location,{2076,46}}],
                       {remote,
                        [{generated,true},{location,{2076,46}}],
                        {atom,[{generated,true},{location,{2076,46}}],erlang},
                        {atom,[{generated,true},{location,{2076,46}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2076,46}}],
                         [{atom,
                           [{generated,true},{location,{2076,46}}],
                           badrecord},
                          {var,{2076,46},rec88}]}]}]}]},
                  {var,{2076,67},'Es'}}},
                {match,{2075,28},{var,{2075,28},rec86},{var,{2075,28},'St'}},
                {'case',
                 {2076,39},
                 {var,{2075,28},rec86},
                 [{clause,
                   {2076,39},
                   [{tuple,
                     {2076,39},
                     [{atom,{2076,39},compile},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'},
                      {var,{2076,39},'_'}]}],
                   [],
                   [{call,
                     {2076,39},
                     {remote,
                      {2076,39},
                      {atom,{2076,39},erlang},
                      {atom,{2076,39},setelement}},
                     [{integer,{2076,39},12},
                      {call,
                       {2075,39},
                       {remote,
                        {2075,39},
                        {atom,{2075,39},erlang},
                        {atom,{2075,39},setelement}},
                       [{integer,{2075,39},13},
                        {var,{2075,28},rec86},
                        {var,{2075,39},rec84}]},
                      {var,{2076,39},rec85}]}]},
                  {clause,
                   [{generated,true},{location,{2076,39}}],
                   [{var,[{generated,true},{location,{2076,39}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{2076,39}}],
                     {remote,
                      [{generated,true},{location,{2076,39}}],
                      {atom,[{generated,true},{location,{2076,39}}],erlang},
                      {atom,[{generated,true},{location,{2076,39}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2076,39}}],
                       [{atom,
                         [{generated,true},{location,{2076,39}}],
                         badrecord},
                        {var,{2075,28},rec86}]}]}]}]}]}]}]},
          {clause,
           {2077,17},
           [{tuple,
             {2077,17},
             [{atom,{2077,18},warning},
              {var,{2077,27},'Forms'},
              {var,{2077,34},'Ws'}]}],
           [],
           [{debug_line,2078,531},
            {call,
             {2078,21},
             {atom,{2078,21},foldl_transform},
             [{var,{2078,37},'Ts'},
              {var,{2078,41},'Forms'},
              {block,0,
               [{debug_line,2079,532},
                {block,
                 {2079,37},
                 [{match,
                   {2079,48},
                   {var,{2079,48},rec89},
                   {op,
                    {2079,77},
                    '++',
                    {'case',
                     {2079,57},
                     {var,{2079,57},'St'},
                     [{clause,
                       [{generated,true},{location,{2079,57}}],
                       [{tuple,
                         [{generated,true},{location,{2079,57}}],
                         [{atom,{2079,57},compile},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},'_'},
                          {var,{2079,57},rec91},
                          {var,{2079,57},'_'}]}],
                       [],
                       [{var,{2079,57},rec91}]},
                      {clause,
                       [{generated,true},{location,{2079,57}}],
                       [{var,{2079,57},rec91}],
                       [],
                       [{call,
                         [{generated,true},{location,{2079,57}}],
                         {remote,
                          [{generated,true},{location,{2079,57}}],
                          {atom,
                           [{generated,true},{location,{2079,57}}],
                           erlang},
                          {atom,
                           [{generated,true},{location,{2079,57}}],
                           error}},
                         [{tuple,
                           [{generated,true},{location,{2079,57}}],
                           [{atom,
                             [{generated,true},{location,{2079,57}}],
                             badrecord},
                            {var,{2079,57},rec91}]}]}]}]},
                    {var,{2079,80},'Ws'}}},
                  {match,{2079,37},{var,{2079,37},rec90},{var,{2079,37},'St'}},
                  {'case',
                   {2079,48},
                   {var,{2079,37},rec90},
                   [{clause,
                     {2079,48},
                     [{tuple,
                       {2079,48},
                       [{atom,{2079,48},compile},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'},
                        {var,{2079,48},'_'}]}],
                     [],
                     [{call,
                       {2079,48},
                       {remote,
                        {2079,48},
                        {atom,{2079,48},erlang},
                        {atom,{2079,48},setelement}},
                       [{integer,{2079,48},13},
                        {var,{2079,37},rec90},
                        {var,{2079,48},rec89}]}]},
                    {clause,
                     [{generated,true},{location,{2079,48}}],
                     [{var,[{generated,true},{location,{2079,48}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{2079,48}}],
                       {remote,
                        [{generated,true},{location,{2079,48}}],
                        {atom,[{generated,true},{location,{2079,48}}],erlang},
                        {atom,[{generated,true},{location,{2079,48}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2079,48}}],
                         [{atom,
                           [{generated,true},{location,{2079,48}}],
                           badrecord},
                          {var,{2079,37},rec90}]}]}]}]}]}]}]}]},
          {clause,
           {2080,17},
           [{var,{2080,17},'Forms'}],
           [],
           [{debug_line,2081,533},
            {call,
             {2081,21},
             {atom,{2081,21},foldl_transform},
             [{var,{2081,37},'Ts'},
              {var,{2081,41},'Forms'},
              {var,{2081,48},'St'}]}]}],
         [{clause,
           {2083,17},
           [{tuple,
             {2083,17},
             [{var,{2083,17},'Class'},
              {var,{2083,23},'Reason'},
              {var,{2083,30},'Stk'}]}],
           [],
           [{debug_line,2084,534},
            {match,
             {2084,21},
             {var,{2084,21},'Es'},
             {cons,
              {2084,26},
              {tuple,
               {2084,27},
               [{'case',
                 {2084,28},
                 {var,{2084,28},'St'},
                 [{clause,
                   [{generated,true},{location,{2084,28}}],
                   [{tuple,
                     [{generated,true},{location,{2084,28}}],
                     [{atom,{2084,28},compile},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},rec92},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'},
                      {var,{2084,28},'_'}]}],
                   [],
                   [{var,{2084,28},rec92}]},
                  {clause,
                   [{generated,true},{location,{2084,28}}],
                   [{var,{2084,28},rec92}],
                   [],
                   [{call,
                     [{generated,true},{location,{2084,28}}],
                     {remote,
                      [{generated,true},{location,{2084,28}}],
                      {atom,[{generated,true},{location,{2084,28}}],erlang},
                      {atom,[{generated,true},{location,{2084,28}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2084,28}}],
                       [{atom,
                         [{generated,true},{location,{2084,28}}],
                         badrecord},
                        {var,{2084,28},rec92}]}]}]}]},
                {cons,
                 {2084,45},
                 {tuple,
                  {2084,46},
                  [{atom,{2084,47},none},
                   {atom,{2084,52},compile},
                   {tuple,
                    {2085,47},
                    [{atom,{2085,48},parse_transform},
                     {var,{2085,64},'T'},
                     {tuple,
                      {2085,66},
                      [{var,{2085,67},'Class'},
                       {var,{2085,73},'Reason'},
                       {var,{2085,80},'Stk'}]}]}]},
                 {nil,{2085,86}}}]},
              {nil,{2085,88}}}},
            {debug_line,2086,535},
            {tuple,
             {2086,21},
             [{atom,{2086,22},error},
              {block,
               {2086,28},
               [{match,
                 {2086,39},
                 {var,{2086,39},rec93},
                 {op,
                  {2086,64},
                  '++',
                  {'case',
                   {2086,46},
                   {var,{2086,46},'St'},
                   [{clause,
                     [{generated,true},{location,{2086,46}}],
                     [{tuple,
                       [{generated,true},{location,{2086,46}}],
                       [{atom,{2086,46},compile},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'},
                        {var,{2086,46},rec95},
                        {var,{2086,46},'_'},
                        {var,{2086,46},'_'}]}],
                     [],
                     [{var,{2086,46},rec95}]},
                    {clause,
                     [{generated,true},{location,{2086,46}}],
                     [{var,{2086,46},rec95}],
                     [],
                     [{call,
                       [{generated,true},{location,{2086,46}}],
                       {remote,
                        [{generated,true},{location,{2086,46}}],
                        {atom,[{generated,true},{location,{2086,46}}],erlang},
                        {atom,[{generated,true},{location,{2086,46}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2086,46}}],
                         [{atom,
                           [{generated,true},{location,{2086,46}}],
                           badrecord},
                          {var,{2086,46},rec95}]}]}]}]},
                  {var,{2086,67},'Es'}}},
                {match,{2086,28},{var,{2086,28},rec94},{var,{2086,28},'St'}},
                {'case',
                 {2086,39},
                 {var,{2086,28},rec94},
                 [{clause,
                   {2086,39},
                   [{tuple,
                     {2086,39},
                     [{atom,{2086,39},compile},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'},
                      {var,{2086,39},'_'}]}],
                   [],
                   [{call,
                     {2086,39},
                     {remote,
                      {2086,39},
                      {atom,{2086,39},erlang},
                      {atom,{2086,39},setelement}},
                     [{integer,{2086,39},12},
                      {var,{2086,28},rec94},
                      {var,{2086,39},rec93}]}]},
                  {clause,
                   [{generated,true},{location,{2086,39}}],
                   [{var,[{generated,true},{location,{2086,39}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{2086,39}}],
                     {remote,
                      [{generated,true},{location,{2086,39}}],
                      {atom,[{generated,true},{location,{2086,39}}],erlang},
                      {atom,[{generated,true},{location,{2086,39}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2086,39}}],
                       [{atom,
                         [{generated,true},{location,{2086,39}}],
                         badrecord},
                        {var,{2086,28},rec94}]}]}]}]}]}]}]}],
         []}]},
      {clause,
       {2088,9},
       [{atom,{2088,9},false}],
       [],
       [{debug_line,2089,536},
        {match,
         {2089,13},
         {var,{2089,13},'Es'},
         {cons,
          {2089,18},
          {tuple,
           {2089,19},
           [{'case',
             {2089,20},
             {var,{2089,20},'St'},
             [{clause,
               [{generated,true},{location,{2089,20}}],
               [{tuple,
                 [{generated,true},{location,{2089,20}}],
                 [{atom,{2089,20},compile},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},rec96},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'},
                  {var,{2089,20},'_'}]}],
               [],
               [{var,{2089,20},rec96}]},
              {clause,
               [{generated,true},{location,{2089,20}}],
               [{var,{2089,20},rec96}],
               [],
               [{call,
                 [{generated,true},{location,{2089,20}}],
                 {remote,
                  [{generated,true},{location,{2089,20}}],
                  {atom,[{generated,true},{location,{2089,20}}],erlang},
                  {atom,[{generated,true},{location,{2089,20}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2089,20}}],
                   [{atom,[{generated,true},{location,{2089,20}}],badrecord},
                    {var,{2089,20},rec96}]}]}]}]},
            {cons,
             {2089,37},
             {tuple,
              {2089,38},
              [{atom,{2089,39},none},
               {atom,{2089,44},compile},
               {tuple,
                {2090,39},
                [{atom,{2090,40},undef_parse_transform},
                 {var,{2090,62},'T'}]}]},
             {nil,{2090,65}}}]},
          {nil,{2090,67}}}},
        {debug_line,2091,537},
        {tuple,
         {2091,13},
         [{atom,{2091,14},error},
          {block,
           {2091,20},
           [{match,
             {2091,31},
             {var,{2091,31},rec97},
             {op,
              {2091,56},
              '++',
              {'case',
               {2091,38},
               {var,{2091,38},'St'},
               [{clause,
                 [{generated,true},{location,{2091,38}}],
                 [{tuple,
                   [{generated,true},{location,{2091,38}}],
                   [{atom,{2091,38},compile},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'},
                    {var,{2091,38},rec99},
                    {var,{2091,38},'_'},
                    {var,{2091,38},'_'}]}],
                 [],
                 [{var,{2091,38},rec99}]},
                {clause,
                 [{generated,true},{location,{2091,38}}],
                 [{var,{2091,38},rec99}],
                 [],
                 [{call,
                   [{generated,true},{location,{2091,38}}],
                   {remote,
                    [{generated,true},{location,{2091,38}}],
                    {atom,[{generated,true},{location,{2091,38}}],erlang},
                    {atom,[{generated,true},{location,{2091,38}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2091,38}}],
                     [{atom,[{generated,true},{location,{2091,38}}],badrecord},
                      {var,{2091,38},rec99}]}]}]}]},
              {var,{2091,59},'Es'}}},
            {match,{2091,20},{var,{2091,20},rec98},{var,{2091,20},'St'}},
            {'case',
             {2091,31},
             {var,{2091,20},rec98},
             [{clause,
               {2091,31},
               [{tuple,
                 {2091,31},
                 [{atom,{2091,31},compile},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'},
                  {var,{2091,31},'_'}]}],
               [],
               [{call,
                 {2091,31},
                 {remote,
                  {2091,31},
                  {atom,{2091,31},erlang},
                  {atom,{2091,31},setelement}},
                 [{integer,{2091,31},12},
                  {var,{2091,20},rec98},
                  {var,{2091,31},rec97}]}]},
              {clause,
               [{generated,true},{location,{2091,31}}],
               [{var,[{generated,true},{location,{2091,31}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2091,31}}],
                 {remote,
                  [{generated,true},{location,{2091,31}}],
                  {atom,[{generated,true},{location,{2091,31}}],erlang},
                  {atom,[{generated,true},{location,{2091,31}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2091,31}}],
                   [{atom,[{generated,true},{location,{2091,31}}],badrecord},
                    {var,{2091,20},rec98}]}]}]}]}]}]}]}]}]},
  {clause,
   {2093,1},
   [{nil,{2093,17}},{var,{2093,21},'Code'},{var,{2093,27},'St'}],
   [],
   [{debug_line,2097,538},
    {tuple,
     {2097,5},
     [{atom,{2097,6},ok},
      {call,
       {2097,10},
       {atom,{2097,10},maybe_strip_columns},
       [{var,{2097,30},'Code'},{atom,{2097,37},compile},{var,{2097,45},'St'}]},
      {var,{2097,50},'St'}]}]}]}.
{function,
 {2103,1},
 maybe_strip_columns,3,
 [{clause,
   {2103,1},
   [{var,{2103,1},'_'},{var,{2103,1},'_'},{var,{2103,1},'_'}],
   [[{call,
      {2103,1},
      {remote,{2103,1},{atom,{2103,1},fake},{atom,{2103,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2103,539},{atom,{2103,1},ignore}]},
  {clause,
   {2103,1},
   [{var,{2103,21},'Code'},{var,{2103,27},'T'},{var,{2103,30},'St'}],
   [],
   [{debug_line,2104,540},
    {match,
     {2104,5},
     {var,{2104,5},'PTErrorLocation'},
     {'case',
      {2105,9},
      {call,
       {2105,14},
       {remote,
        {2105,20},
        {atom,{2105,14},erlang},
        {atom,{2105,21},function_exported}},
       [{var,{2105,39},'T'},
        {atom,{2105,42},parse_transform_info},
        {integer,{2105,64},0}]},
      [{clause,
        {2106,13},
        [{atom,{2106,13},true}],
        [],
        [{debug_line,2107,541},
         {call,
          {2107,17},
          {remote,{2107,21},{atom,{2107,17},maps},{atom,{2107,22},get}},
          [{atom,{2107,26},error_location},
           {block,0,
            [{call,
              {2107,42},
              {remote,
               {2107,43},
               {var,{2107,42},'T'},
               {atom,{2107,44},parse_transform_info}},
              []}]},
           {atom,{2107,68},column}]}]},
       {clause,
        {2108,13},
        [{atom,{2108,13},false}],
        [],
        [{debug_line,2109,542},{atom,{2109,17},column}]}]}},
    {debug_line,2111,543},
    {match,
     {2111,5},
     {var,{2111,5},'ConfigErrorLocation'},
     {call,
      {2111,27},
      {remote,{2111,36},{atom,{2111,27},proplists},{atom,{2111,37},get_value}},
      [{atom,{2111,47},error_location},
       {block,0,
        [{'case',
          {2111,63},
          {var,{2111,63},'St'},
          [{clause,
            [{generated,true},{location,{2111,63}}],
            [{tuple,
              [{generated,true},{location,{2111,63}}],
              [{atom,{2111,63},compile},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},rec100},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'},
               {var,{2111,63},'_'}]}],
            [],
            [{var,{2111,63},rec100}]},
           {clause,
            [{generated,true},{location,{2111,63}}],
            [{var,{2111,63},rec100}],
            [],
            [{call,
              [{generated,true},{location,{2111,63}}],
              {remote,
               [{generated,true},{location,{2111,63}}],
               {atom,[{generated,true},{location,{2111,63}}],erlang},
               {atom,[{generated,true},{location,{2111,63}}],error}},
              [{tuple,
                [{generated,true},{location,{2111,63}}],
                [{atom,[{generated,true},{location,{2111,63}}],badrecord},
                 {var,{2111,63},rec100}]}]}]}]}]},
       {atom,{2111,83},column}]}},
    {debug_line,2112,544},
    {'if',
     {2112,5},
     [{clause,
       {2113,9},
       [],
       [[{op,
          {2113,25},
          '=:=',
          {var,{2113,9},'PTErrorLocation'},
          {atom,{2113,29},line}}],
        [{op,
          {2113,55},
          '=:=',
          {var,{2113,35},'ConfigErrorLocation'},
          {atom,{2113,59},line}}]],
       [{debug_line,2114,545},
        {call,
         {2114,13},
         {atom,{2114,13},strip_columns},
         [{var,{2114,27},'Code'}]}]},
      {clause,
       {2115,9},
       [],
       [[{atom,{2115,9},true}]],
       [{debug_line,2115,546},{var,{2115,17},'Code'}]}]}]}]}.
{function,
 {2118,1},
 strip_columns,1,
 [{clause,
   {2118,1},
   [{var,{2118,1},'_'}],
   [[{call,
      {2118,1},
      {remote,{2118,1},{atom,{2118,1},fake},{atom,{2118,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2118,547},{atom,{2118,1},ignore}]},
  {clause,
   {2118,1},
   [{var,{2118,15},'Code'}],
   [],
   [{debug_line,2119,548},
    {match,
     {2119,5},
     {var,{2119,5},'F'},
     {'fun',
      {2119,9},
      {clauses,
       [{clause,
         {2119,12},
         [{var,{2119,13},'A'}],
         [],
         [{call,
           {2119,19},
           {remote,
            {2119,27},
            {atom,{2119,19},erl_anno},
            {atom,{2119,28},set_location}},
           [{block,0,
             [{call,
               {2119,41},
               {remote,
                {2119,49},
                {atom,{2119,41},erl_anno},
                {atom,{2119,50},line}},
               [{var,{2119,55},'A'}]}]},
            {var,{2119,59},'A'}]}]}]}}},
    {debug_line,2120,549},
    {lc,
     {2120,5},
     {block,0,
      [{'case',
        {2120,6},
        {var,{2120,11},'Form'},
        [{clause,
          {2121,10},
          [{tuple,
            {2121,10},
            [{atom,{2121,11},eof},
             {tuple,
              {2121,15},
              [{var,{2121,16},'Line'},{var,{2121,21},'_Col'}]}]}],
          [],
          [{debug_line,2122,550},
           {tuple,{2122,14},[{atom,{2122,15},eof},{var,{2122,19},'Line'}]}]},
         {clause,
          {2123,10},
          [{tuple,
            {2123,10},
            [{var,{2123,11},'ErrorOrWarning'},
             {tuple,
              {2123,26},
              [{tuple,
                {2123,27},
                [{var,{2123,28},'Line'},{var,{2123,33},'_Col'}]},
               {var,{2123,39},'Module'},
               {var,{2123,46},'Reason'}]}]}],
          [[{op,
             {2124,32},
             '=:=',
             {var,{2124,17},'ErrorOrWarning'},
             {atom,{2124,36},error}}],
           [{op,
             {2125,32},
             '=:=',
             {var,{2125,17},'ErrorOrWarning'},
             {atom,{2125,36},warning}}]],
          [{debug_line,2126,551},
           {tuple,
            {2126,14},
            [{var,{2126,15},'ErrorOrWarning'},
             {tuple,
              {2126,30},
              [{var,{2126,31},'Line'},
               {var,{2126,36},'Module'},
               {var,{2126,43},'Reason'}]}]}]},
         {clause,
          {2127,10},
          [{var,{2127,10},'Form'}],
          [],
          [{debug_line,2128,552},
           {call,
            {2128,14},
            {remote,
             {2128,23},
             {atom,{2128,14},erl_parse},
             {atom,{2128,24},map_anno}},
            [{var,{2128,33},'F'},{var,{2128,36},'Form'}]}]}]}]},
     [{block,0,[{debug_line,2129,553},{atom,{2129,21},true}]},
      {generate,{2129,18},{var,{2129,13},'Form'},{var,{2129,21},'Code'}}]}]}]}.
{function,
    {2131,1},
    get_core_transforms,1,
    [{clause,
         {2131,1},
         [{var,{2131,1},'_'}],
         [[{call,
               {2131,1},
               {remote,
                   {2131,1},
                   {atom,{2131,1},fake},
                   {atom,{2131,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2131,554},{atom,{2131,1},ignore}]},
     {clause,
         {2131,1},
         [{var,{2131,21},'Opts'}],
         [],
         [{debug_line,2131,555},
          {lc,{2131,30},
              {block,0,[{var,{2131,31},'M'}]},
              [{block,0,[{atom,{2131,58},true}]},
               {generate,
                   {2131,55},
                   {tuple,
                       {2131,36},
                       [{atom,{2131,37},core_transform},{var,{2131,52},'M'}]},
                   {var,{2131,58},'Opts'}}]}]}]}.
{function,
 {2133,1},
 core_transforms,2,
 [{clause,
   {2133,1},
   [{var,{2133,1},'_'},{var,{2133,1},'_'}],
   [[{call,
      {2133,1},
      {remote,{2133,1},{atom,{2133,1},fake},{atom,{2133,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2133,556},{atom,{2133,1},ignore}]},
  {clause,
   {2133,1},
   [{var,{2133,17},'Code'},{var,{2133,23},'St'}],
   [],
   [{debug_line,2135,557},
    {match,
     {2135,5},
     {var,{2135,5},'Ts'},
     {call,
      {2135,10},
      {atom,{2135,10},get_core_transforms},
      [{block,0,
        [{'case',
          {2135,30},
          {var,{2135,30},'St'},
          [{clause,
            [{generated,true},{location,{2135,30}}],
            [{tuple,
              [{generated,true},{location,{2135,30}}],
              [{atom,{2135,30},compile},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},rec101},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'},
               {var,{2135,30},'_'}]}],
            [],
            [{var,{2135,30},rec101}]},
           {clause,
            [{generated,true},{location,{2135,30}}],
            [{var,{2135,30},rec101}],
            [],
            [{call,
              [{generated,true},{location,{2135,30}}],
              {remote,
               [{generated,true},{location,{2135,30}}],
               {atom,[{generated,true},{location,{2135,30}}],erlang},
               {atom,[{generated,true},{location,{2135,30}}],error}},
              [{tuple,
                [{generated,true},{location,{2135,30}}],
                [{atom,[{generated,true},{location,{2135,30}}],badrecord},
                 {var,{2135,30},rec101}]}]}]}]}]}]}},
    {debug_line,2136,558},
    {call,
     {2136,5},
     {atom,{2136,5},foldl_core_transforms},
     [{var,{2136,27},'Ts'},{var,{2136,31},'Code'},{var,{2136,37},'St'}]}]}]}.
{function,
 {2138,1},
 foldl_core_transforms,3,
 [{clause,
   {2138,1},
   [{var,{2138,1},'_'},{var,{2138,1},'_'},{var,{2138,1},'_'}],
   [[{call,
      {2138,1},
      {remote,{2138,1},{atom,{2138,1},fake},{atom,{2138,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2138,559},{atom,{2138,1},ignore}]},
  {clause,
   {2138,1},
   [{cons,{2138,23},{var,{2138,24},'T'},{var,{2138,26},'Ts'}},
    {var,{2138,31},'Code0'},
    {var,{2138,38},'St'}],
   [],
   [{debug_line,2139,560},
    {match,
     {2139,5},
     {var,{2139,5},'Name'},
     {op,
      {2139,30},
      '++',
      {string,{2139,12},"core transform "},
      {call,
       {2139,33},
       {remote,
        {2139,33},
        {atom,{2139,33},erlang},
        {atom,{2139,33},atom_to_list}},
       [{var,{2139,46},'T'}]}}},
    {debug_line,2140,561},
    {match,
     {2140,5},
     {var,{2140,5},'Fun'},
     {'fun',
      {2140,11},
      {clauses,
       [{clause,
         {2140,14},
         [{var,{2140,15},'Code'},{var,{2140,21},'S'}],
         [],
         [{call,
           {2140,27},
           {remote,
            {2140,28},
            {var,{2140,27},'T'},
            {atom,{2140,29},core_transform}},
           [{var,{2140,44},'Code'},
            {block,0,
             [{'case',
               {2140,50},
               {var,{2140,50},'S'},
               [{clause,
                 [{generated,true},{location,{2140,50}}],
                 [{tuple,
                   [{generated,true},{location,{2140,50}}],
                   [{atom,{2140,50},compile},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},rec102},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'},
                    {var,{2140,50},'_'}]}],
                 [],
                 [{var,{2140,50},rec102}]},
                {clause,
                 [{generated,true},{location,{2140,50}}],
                 [{var,{2140,50},rec102}],
                 [],
                 [{call,
                   [{generated,true},{location,{2140,50}}],
                   {remote,
                    [{generated,true},{location,{2140,50}}],
                    {atom,[{generated,true},{location,{2140,50}}],erlang},
                    {atom,[{generated,true},{location,{2140,50}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2140,50}}],
                     [{atom,[{generated,true},{location,{2140,50}}],badrecord},
                      {var,{2140,50},rec102}]}]}]}]}]}]}]}]}}},
    {debug_line,2141,562},
    {match,
     {2141,5},
     {var,{2141,5},'Run'},
     {call,{2141,11},{atom,{2141,11},runner},[{var,{2141,18},'St'}]}},
    {debug_line,2142,563},
    {'try',
     {2142,5},
     [{call,
       {2142,9},
       {var,{2142,9},'Run'},
       [{block,0,
         [{tuple,{2142,13},[{var,{2142,14},'Name'},{var,{2142,20},'Fun'}]}]},
        {var,{2142,26},'Code0'},
        {var,{2142,33},'St'}]}],
     [{clause,
       {2143,2},
       [{var,{2143,2},'Forms'}],
       [],
       [{debug_line,2144,564},
        {call,
         {2144,6},
         {atom,{2144,6},foldl_core_transforms},
         [{var,{2144,28},'Ts'},
          {var,{2144,32},'Forms'},
          {var,{2144,39},'St'}]}]}],
     [{clause,
       {2146,9},
       [{tuple,
         {2146,9},
         [{var,{2146,9},'Class'},
          {var,{2146,15},'Reason'},
          {var,{2146,22},'Stk'}]}],
       [],
       [{debug_line,2147,565},
        {match,
         {2147,13},
         {var,{2147,13},'Es'},
         {cons,
          {2147,18},
          {tuple,
           {2147,19},
           [{'case',
             {2147,20},
             {var,{2147,20},'St'},
             [{clause,
               [{generated,true},{location,{2147,20}}],
               [{tuple,
                 [{generated,true},{location,{2147,20}}],
                 [{atom,{2147,20},compile},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},rec103},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'},
                  {var,{2147,20},'_'}]}],
               [],
               [{var,{2147,20},rec103}]},
              {clause,
               [{generated,true},{location,{2147,20}}],
               [{var,{2147,20},rec103}],
               [],
               [{call,
                 [{generated,true},{location,{2147,20}}],
                 {remote,
                  [{generated,true},{location,{2147,20}}],
                  {atom,[{generated,true},{location,{2147,20}}],erlang},
                  {atom,[{generated,true},{location,{2147,20}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2147,20}}],
                   [{atom,[{generated,true},{location,{2147,20}}],badrecord},
                    {var,{2147,20},rec103}]}]}]}]},
            {cons,
             {2147,37},
             {tuple,
              {2147,38},
              [{atom,{2147,39},none},
               {atom,{2147,44},compile},
               {tuple,
                {2148,39},
                [{atom,{2148,40},core_transform},
                 {var,{2148,55},'T'},
                 {tuple,
                  {2148,57},
                  [{var,{2148,58},'Class'},
                   {var,{2148,64},'Reason'},
                   {var,{2148,71},'Stk'}]}]}]},
             {nil,{2148,77}}}]},
          {nil,{2148,79}}}},
        {debug_line,2149,566},
        {tuple,
         {2149,13},
         [{atom,{2149,14},error},
          {block,
           {2149,20},
           [{match,
             {2149,31},
             {var,{2149,31},rec104},
             {op,
              {2149,56},
              '++',
              {'case',
               {2149,38},
               {var,{2149,38},'St'},
               [{clause,
                 [{generated,true},{location,{2149,38}}],
                 [{tuple,
                   [{generated,true},{location,{2149,38}}],
                   [{atom,{2149,38},compile},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'},
                    {var,{2149,38},rec106},
                    {var,{2149,38},'_'},
                    {var,{2149,38},'_'}]}],
                 [],
                 [{var,{2149,38},rec106}]},
                {clause,
                 [{generated,true},{location,{2149,38}}],
                 [{var,{2149,38},rec106}],
                 [],
                 [{call,
                   [{generated,true},{location,{2149,38}}],
                   {remote,
                    [{generated,true},{location,{2149,38}}],
                    {atom,[{generated,true},{location,{2149,38}}],erlang},
                    {atom,[{generated,true},{location,{2149,38}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2149,38}}],
                     [{atom,[{generated,true},{location,{2149,38}}],badrecord},
                      {var,{2149,38},rec106}]}]}]}]},
              {var,{2149,59},'Es'}}},
            {match,{2149,20},{var,{2149,20},rec105},{var,{2149,20},'St'}},
            {'case',
             {2149,31},
             {var,{2149,20},rec105},
             [{clause,
               {2149,31},
               [{tuple,
                 {2149,31},
                 [{atom,{2149,31},compile},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'},
                  {var,{2149,31},'_'}]}],
               [],
               [{call,
                 {2149,31},
                 {remote,
                  {2149,31},
                  {atom,{2149,31},erlang},
                  {atom,{2149,31},setelement}},
                 [{integer,{2149,31},12},
                  {var,{2149,20},rec105},
                  {var,{2149,31},rec104}]}]},
              {clause,
               [{generated,true},{location,{2149,31}}],
               [{var,[{generated,true},{location,{2149,31}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2149,31}}],
                 {remote,
                  [{generated,true},{location,{2149,31}}],
                  {atom,[{generated,true},{location,{2149,31}}],erlang},
                  {atom,[{generated,true},{location,{2149,31}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2149,31}}],
                   [{atom,[{generated,true},{location,{2149,31}}],badrecord},
                    {var,{2149,20},rec105}]}]}]}]}]}]}]}],
     []}]},
  {clause,
   {2151,1},
   [{nil,{2151,23}},{var,{2151,27},'Code'},{var,{2151,33},'St'}],
   [],
   [{debug_line,2151,567},
    {tuple,
     {2151,40},
     [{atom,{2151,41},ok},{var,{2151,44},'Code'},{var,{2151,49},'St'}]}]}]}.
{function,{2155,1},
          get_module,1,
          [{clause,{2155,1},
                   [{var,{2155,1},'_'}],
                   [[{call,{2155,1},
                           {remote,{2155,1},
                                   {atom,{2155,1},fake},
                                   {atom,{2155,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2155,568},{atom,{2155,1},ignore}]},
           {clause,{2155,1},
                   [{cons,{2155,12},
                          {tuple,{2155,13},
                                 [{atom,{2155,14},attribute},
                                  {var,{2155,24},'_'},
                                  {atom,{2155,26},module},
                                  {var,{2155,33},'M'}]},
                          {var,{2155,38},'_'}}],
                   [],
                   [{debug_line,2155,569},{var,{2155,45},'M'}]},
           {clause,{2156,1},
                   [{cons,{2156,12},
                          {var,{2156,13},'_'},
                          {var,{2156,17},'Rest'}}],
                   [],
                   [{debug_line,2157,570},
                    {call,{2157,5},
                          {atom,{2157,5},get_module},
                          [{var,{2157,16},'Rest'}]}]}]}.
{function,
 {2162,1},
 add_default_base,2,
 [{clause,
   {2162,1},
   [{var,{2162,1},'_'},{var,{2162,1},'_'}],
   [[{call,
      {2162,1},
      {remote,{2162,1},{atom,{2162,1},fake},{atom,{2162,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2162,571},{atom,{2162,1},ignore}]},
  {clause,
   {2162,1},
   [{var,{2162,18},'St'},{var,{2162,22},'Forms'}],
   [],
   [{debug_line,2163,572},
    {match,
     {2163,5},
     {var,{2163,5},'F'},
     {'case',
      {2163,9},
      {var,{2163,9},'St'},
      [{clause,
        [{generated,true},{location,{2163,9}}],
        [{tuple,
          [{generated,true},{location,{2163,9}}],
          [{atom,{2163,9},compile},
           {var,{2163,9},rec107},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'},
           {var,{2163,9},'_'}]}],
        [],
        [{var,{2163,9},rec107}]},
       {clause,
        [{generated,true},{location,{2163,9}}],
        [{var,{2163,9},rec107}],
        [],
        [{call,
          [{generated,true},{location,{2163,9}}],
          {remote,
           [{generated,true},{location,{2163,9}}],
           {atom,[{generated,true},{location,{2163,9}}],erlang},
           {atom,[{generated,true},{location,{2163,9}}],error}},
          [{tuple,
            [{generated,true},{location,{2163,9}}],
            [{atom,[{generated,true},{location,{2163,9}}],badrecord},
             {var,{2163,9},rec107}]}]}]}]}},
    {debug_line,2164,573},
    {'case',
     {2164,5},
     {var,{2164,10},'F'},
     [{clause,
       {2165,2},
       [{string,{2165,2},[]}],
       [],
       [{debug_line,2166,574},
        {match,
         {2166,7},
         {var,{2166,7},'M'},
         {call,
          {2166,11},
          {atom,{2166,11},get_module},
          [{var,{2166,22},'Forms'}]}},
        {debug_line,2167,575},
        {block,
         {2167,6},
         [{match,
           {2167,17},
           {var,{2167,17},rec108},
           {call,
            {2167,22},
            {remote,
             {2167,22},
             {atom,{2167,22},erlang},
             {atom,{2167,22},atom_to_list}},
            [{var,{2167,35},'M'}]}},
          {match,{2167,6},{var,{2167,6},rec109},{var,{2167,6},'St'}},
          {'case',
           {2167,17},
           {var,{2167,6},rec109},
           [{clause,
             {2167,17},
             [{tuple,
               {2167,17},
               [{atom,{2167,17},compile},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'},
                {var,{2167,17},'_'}]}],
             [],
             [{call,
               {2167,17},
               {remote,
                {2167,17},
                {atom,{2167,17},erlang},
                {atom,{2167,17},setelement}},
               [{integer,{2167,17},4},
                {var,{2167,6},rec109},
                {var,{2167,17},rec108}]}]},
            {clause,
             [{generated,true},{location,{2167,17}}],
             [{var,[{generated,true},{location,{2167,17}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2167,17}}],
               {remote,
                [{generated,true},{location,{2167,17}}],
                {atom,[{generated,true},{location,{2167,17}}],erlang},
                {atom,[{generated,true},{location,{2167,17}}],error}},
               [{tuple,
                 [{generated,true},{location,{2167,17}}],
                 [{atom,[{generated,true},{location,{2167,17}}],badrecord},
                  {var,{2167,6},rec109}]}]}]}]}]}]},
      {clause,
       {2168,2},
       [{var,{2168,2},'_'}],
       [],
       [{debug_line,2169,576},{var,{2169,6},'St'}]}]}]}]}.
{function,
 {2172,1},
 lint_module,2,
 [{clause,
   {2172,1},
   [{var,{2172,1},'_'},{var,{2172,1},'_'}],
   [[{call,
      {2172,1},
      {remote,{2172,1},{atom,{2172,1},fake},{atom,{2172,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2172,577},{atom,{2172,1},ignore}]},
  {clause,
   {2172,1},
   [{var,{2172,13},'Code'},{var,{2172,19},'St'}],
   [],
   [{debug_line,2173,578},
    {'case',
     {2173,5},
     {call,
      {2173,10},
      {remote,{2173,18},{atom,{2173,10},erl_lint},{atom,{2173,19},module}},
      [{var,{2173,26},'Code'},
       {block,0,
        [{'case',
          {2173,32},
          {var,{2173,32},'St'},
          [{clause,
            [{generated,true},{location,{2173,32}}],
            [{tuple,
              [{generated,true},{location,{2173,32}}],
              [{atom,{2173,32},compile},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},rec110},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'},
               {var,{2173,32},'_'}]}],
            [],
            [{var,{2173,32},rec110}]},
           {clause,
            [{generated,true},{location,{2173,32}}],
            [{var,{2173,32},rec110}],
            [],
            [{call,
              [{generated,true},{location,{2173,32}}],
              {remote,
               [{generated,true},{location,{2173,32}}],
               {atom,[{generated,true},{location,{2173,32}}],erlang},
               {atom,[{generated,true},{location,{2173,32}}],error}},
              [{tuple,
                [{generated,true},{location,{2173,32}}],
                [{atom,[{generated,true},{location,{2173,32}}],badrecord},
                 {var,{2173,32},rec110}]}]}]}]}]},
       {block,0,
        [{'case',
          {2173,50},
          {var,{2173,50},'St'},
          [{clause,
            [{generated,true},{location,{2173,50}}],
            [{tuple,
              [{generated,true},{location,{2173,50}}],
              [{atom,{2173,50},compile},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},rec111},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'},
               {var,{2173,50},'_'}]}],
            [],
            [{var,{2173,50},rec111}]},
           {clause,
            [{generated,true},{location,{2173,50}}],
            [{var,{2173,50},rec111}],
            [],
            [{call,
              [{generated,true},{location,{2173,50}}],
              {remote,
               [{generated,true},{location,{2173,50}}],
               {atom,[{generated,true},{location,{2173,50}}],erlang},
               {atom,[{generated,true},{location,{2173,50}}],error}},
              [{tuple,
                [{generated,true},{location,{2173,50}}],
                [{atom,[{generated,true},{location,{2173,50}}],badrecord},
                 {var,{2173,50},rec111}]}]}]}]}]}]},
     [{clause,
       {2174,2},
       [{tuple,{2174,2},[{atom,{2174,3},ok},{var,{2174,6},'Ws'}]}],
       [],
       [{debug_line,2177,579},
        {match,
         {2177,6},
         {var,{2177,6},'St1'},
         {call,
          {2177,12},
          {atom,{2177,12},add_default_base},
          [{var,{2177,29},'St'},{var,{2177,33},'Code'}]}},
        {debug_line,2178,580},
        {tuple,
         {2178,6},
         [{atom,{2178,7},ok},
          {var,{2178,10},'Code'},
          {block,
           {2178,15},
           [{match,
             {2178,27},
             {var,{2178,27},rec112},
             {op,
              {2178,57},
              '++',
              {'case',
               {2178,36},
               {var,{2178,36},'St1'},
               [{clause,
                 [{generated,true},{location,{2178,36}}],
                 [{tuple,
                   [{generated,true},{location,{2178,36}}],
                   [{atom,{2178,36},compile},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},'_'},
                    {var,{2178,36},rec114},
                    {var,{2178,36},'_'}]}],
                 [],
                 [{var,{2178,36},rec114}]},
                {clause,
                 [{generated,true},{location,{2178,36}}],
                 [{var,{2178,36},rec114}],
                 [],
                 [{call,
                   [{generated,true},{location,{2178,36}}],
                   {remote,
                    [{generated,true},{location,{2178,36}}],
                    {atom,[{generated,true},{location,{2178,36}}],erlang},
                    {atom,[{generated,true},{location,{2178,36}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2178,36}}],
                     [{atom,[{generated,true},{location,{2178,36}}],badrecord},
                      {var,{2178,36},rec114}]}]}]}]},
              {var,{2178,60},'Ws'}}},
            {match,{2178,15},{var,{2178,15},rec113},{var,{2178,15},'St1'}},
            {'case',
             {2178,27},
             {var,{2178,15},rec113},
             [{clause,
               {2178,27},
               [{tuple,
                 {2178,27},
                 [{atom,{2178,27},compile},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'},
                  {var,{2178,27},'_'}]}],
               [],
               [{call,
                 {2178,27},
                 {remote,
                  {2178,27},
                  {atom,{2178,27},erlang},
                  {atom,{2178,27},setelement}},
                 [{integer,{2178,27},13},
                  {var,{2178,15},rec113},
                  {var,{2178,27},rec112}]}]},
              {clause,
               [{generated,true},{location,{2178,27}}],
               [{var,[{generated,true},{location,{2178,27}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2178,27}}],
                 {remote,
                  [{generated,true},{location,{2178,27}}],
                  {atom,[{generated,true},{location,{2178,27}}],erlang},
                  {atom,[{generated,true},{location,{2178,27}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2178,27}}],
                   [{atom,[{generated,true},{location,{2178,27}}],badrecord},
                    {var,{2178,15},rec113}]}]}]}]}]}]}]},
      {clause,
       {2179,2},
       [{tuple,
         {2179,2},
         [{atom,{2179,3},error},{var,{2179,9},'Es'},{var,{2179,12},'Ws'}]}],
       [],
       [{debug_line,2180,581},
        {tuple,
         {2180,6},
         [{atom,{2180,7},error},
          {block,
           {2180,13},
           [{match,
             {2180,24},
             {var,{2180,24},rec115},
             {op,
              {2180,53},
              '++',
              {'case',
               {2180,33},
               {var,{2180,33},'St'},
               [{clause,
                 [{generated,true},{location,{2180,33}}],
                 [{tuple,
                   [{generated,true},{location,{2180,33}}],
                   [{atom,{2180,33},compile},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},'_'},
                    {var,{2180,33},rec118},
                    {var,{2180,33},'_'}]}],
                 [],
                 [{var,{2180,33},rec118}]},
                {clause,
                 [{generated,true},{location,{2180,33}}],
                 [{var,{2180,33},rec118}],
                 [],
                 [{call,
                   [{generated,true},{location,{2180,33}}],
                   {remote,
                    [{generated,true},{location,{2180,33}}],
                    {atom,[{generated,true},{location,{2180,33}}],erlang},
                    {atom,[{generated,true},{location,{2180,33}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2180,33}}],
                     [{atom,[{generated,true},{location,{2180,33}}],badrecord},
                      {var,{2180,33},rec118}]}]}]}]},
              {var,{2180,56},'Ws'}}},
            {match,
             {2181,10},
             {var,{2181,10},rec116},
             {op,
              {2181,35},
              '++',
              {'case',
               {2181,17},
               {var,{2181,17},'St'},
               [{clause,
                 [{generated,true},{location,{2181,17}}],
                 [{tuple,
                   [{generated,true},{location,{2181,17}}],
                   [{atom,{2181,17},compile},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'},
                    {var,{2181,17},rec119},
                    {var,{2181,17},'_'},
                    {var,{2181,17},'_'}]}],
                 [],
                 [{var,{2181,17},rec119}]},
                {clause,
                 [{generated,true},{location,{2181,17}}],
                 [{var,{2181,17},rec119}],
                 [],
                 [{call,
                   [{generated,true},{location,{2181,17}}],
                   {remote,
                    [{generated,true},{location,{2181,17}}],
                    {atom,[{generated,true},{location,{2181,17}}],erlang},
                    {atom,[{generated,true},{location,{2181,17}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2181,17}}],
                     [{atom,[{generated,true},{location,{2181,17}}],badrecord},
                      {var,{2181,17},rec119}]}]}]}]},
              {var,{2181,38},'Es'}}},
            {match,{2180,13},{var,{2180,13},rec117},{var,{2180,13},'St'}},
            {'case',
             {2181,10},
             {var,{2180,13},rec117},
             [{clause,
               {2181,10},
               [{tuple,
                 {2181,10},
                 [{atom,{2181,10},compile},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'},
                  {var,{2181,10},'_'}]}],
               [],
               [{call,
                 {2181,10},
                 {remote,
                  {2181,10},
                  {atom,{2181,10},erlang},
                  {atom,{2181,10},setelement}},
                 [{integer,{2181,10},12},
                  {call,
                   {2180,24},
                   {remote,
                    {2180,24},
                    {atom,{2180,24},erlang},
                    {atom,{2180,24},setelement}},
                   [{integer,{2180,24},13},
                    {var,{2180,13},rec117},
                    {var,{2180,24},rec115}]},
                  {var,{2181,10},rec116}]}]},
              {clause,
               [{generated,true},{location,{2181,10}}],
               [{var,[{generated,true},{location,{2181,10}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2181,10}}],
                 {remote,
                  [{generated,true},{location,{2181,10}}],
                  {atom,[{generated,true},{location,{2181,10}}],erlang},
                  {atom,[{generated,true},{location,{2181,10}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2181,10}}],
                   [{atom,[{generated,true},{location,{2181,10}}],badrecord},
                    {var,{2180,13},rec117}]}]}]}]}]}]}]}]}]}]}.
{function,
 {2184,1},
 core_lint_module,2,
 [{clause,
   {2184,1},
   [{var,{2184,1},'_'},{var,{2184,1},'_'}],
   [[{call,
      {2184,1},
      {remote,{2184,1},{atom,{2184,1},fake},{atom,{2184,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2184,582},{atom,{2184,1},ignore}]},
  {clause,
   {2184,1},
   [{var,{2184,18},'Code'},{var,{2184,24},'St'}],
   [],
   [{debug_line,2185,583},
    {'case',
     {2185,5},
     {call,
      {2185,10},
      {remote,{2185,19},{atom,{2185,10},core_lint},{atom,{2185,20},module}},
      [{var,{2185,27},'Code'},
       {block,0,
        [{'case',
          {2185,33},
          {var,{2185,33},'St'},
          [{clause,
            [{generated,true},{location,{2185,33}}],
            [{tuple,
              [{generated,true},{location,{2185,33}}],
              [{atom,{2185,33},compile},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},rec120},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'},
               {var,{2185,33},'_'}]}],
            [],
            [{var,{2185,33},rec120}]},
           {clause,
            [{generated,true},{location,{2185,33}}],
            [{var,{2185,33},rec120}],
            [],
            [{call,
              [{generated,true},{location,{2185,33}}],
              {remote,
               [{generated,true},{location,{2185,33}}],
               {atom,[{generated,true},{location,{2185,33}}],erlang},
               {atom,[{generated,true},{location,{2185,33}}],error}},
              [{tuple,
                [{generated,true},{location,{2185,33}}],
                [{atom,[{generated,true},{location,{2185,33}}],badrecord},
                 {var,{2185,33},rec120}]}]}]}]}]}]},
     [{clause,
       {2186,2},
       [{tuple,{2186,2},[{atom,{2186,3},ok},{var,{2186,6},'Ws'}]}],
       [],
       [{debug_line,2187,584},
        {tuple,
         {2187,6},
         [{atom,{2187,7},ok},
          {var,{2187,10},'Code'},
          {block,
           {2187,15},
           [{match,
             {2187,26},
             {var,{2187,26},rec121},
             {op,
              {2187,55},
              '++',
              {'case',
               {2187,35},
               {var,{2187,35},'St'},
               [{clause,
                 [{generated,true},{location,{2187,35}}],
                 [{tuple,
                   [{generated,true},{location,{2187,35}}],
                   [{atom,{2187,35},compile},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},'_'},
                    {var,{2187,35},rec123},
                    {var,{2187,35},'_'}]}],
                 [],
                 [{var,{2187,35},rec123}]},
                {clause,
                 [{generated,true},{location,{2187,35}}],
                 [{var,{2187,35},rec123}],
                 [],
                 [{call,
                   [{generated,true},{location,{2187,35}}],
                   {remote,
                    [{generated,true},{location,{2187,35}}],
                    {atom,[{generated,true},{location,{2187,35}}],erlang},
                    {atom,[{generated,true},{location,{2187,35}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2187,35}}],
                     [{atom,[{generated,true},{location,{2187,35}}],badrecord},
                      {var,{2187,35},rec123}]}]}]}]},
              {var,{2187,58},'Ws'}}},
            {match,{2187,15},{var,{2187,15},rec122},{var,{2187,15},'St'}},
            {'case',
             {2187,26},
             {var,{2187,15},rec122},
             [{clause,
               {2187,26},
               [{tuple,
                 {2187,26},
                 [{atom,{2187,26},compile},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'},
                  {var,{2187,26},'_'}]}],
               [],
               [{call,
                 {2187,26},
                 {remote,
                  {2187,26},
                  {atom,{2187,26},erlang},
                  {atom,{2187,26},setelement}},
                 [{integer,{2187,26},13},
                  {var,{2187,15},rec122},
                  {var,{2187,26},rec121}]}]},
              {clause,
               [{generated,true},{location,{2187,26}}],
               [{var,[{generated,true},{location,{2187,26}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2187,26}}],
                 {remote,
                  [{generated,true},{location,{2187,26}}],
                  {atom,[{generated,true},{location,{2187,26}}],erlang},
                  {atom,[{generated,true},{location,{2187,26}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2187,26}}],
                   [{atom,[{generated,true},{location,{2187,26}}],badrecord},
                    {var,{2187,15},rec122}]}]}]}]}]}]}]},
      {clause,
       {2188,2},
       [{tuple,
         {2188,2},
         [{atom,{2188,3},error},{var,{2188,9},'Es'},{var,{2188,12},'Ws'}]}],
       [],
       [{debug_line,2189,585},
        {tuple,
         {2189,6},
         [{atom,{2189,7},error},
          {block,
           {2189,13},
           [{match,
             {2189,24},
             {var,{2189,24},rec124},
             {op,
              {2189,53},
              '++',
              {'case',
               {2189,33},
               {var,{2189,33},'St'},
               [{clause,
                 [{generated,true},{location,{2189,33}}],
                 [{tuple,
                   [{generated,true},{location,{2189,33}}],
                   [{atom,{2189,33},compile},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},'_'},
                    {var,{2189,33},rec127},
                    {var,{2189,33},'_'}]}],
                 [],
                 [{var,{2189,33},rec127}]},
                {clause,
                 [{generated,true},{location,{2189,33}}],
                 [{var,{2189,33},rec127}],
                 [],
                 [{call,
                   [{generated,true},{location,{2189,33}}],
                   {remote,
                    [{generated,true},{location,{2189,33}}],
                    {atom,[{generated,true},{location,{2189,33}}],erlang},
                    {atom,[{generated,true},{location,{2189,33}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2189,33}}],
                     [{atom,[{generated,true},{location,{2189,33}}],badrecord},
                      {var,{2189,33},rec127}]}]}]}]},
              {var,{2189,56},'Ws'}}},
            {match,
             {2190,10},
             {var,{2190,10},rec125},
             {op,
              {2190,35},
              '++',
              {'case',
               {2190,17},
               {var,{2190,17},'St'},
               [{clause,
                 [{generated,true},{location,{2190,17}}],
                 [{tuple,
                   [{generated,true},{location,{2190,17}}],
                   [{atom,{2190,17},compile},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'},
                    {var,{2190,17},rec128},
                    {var,{2190,17},'_'},
                    {var,{2190,17},'_'}]}],
                 [],
                 [{var,{2190,17},rec128}]},
                {clause,
                 [{generated,true},{location,{2190,17}}],
                 [{var,{2190,17},rec128}],
                 [],
                 [{call,
                   [{generated,true},{location,{2190,17}}],
                   {remote,
                    [{generated,true},{location,{2190,17}}],
                    {atom,[{generated,true},{location,{2190,17}}],erlang},
                    {atom,[{generated,true},{location,{2190,17}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2190,17}}],
                     [{atom,[{generated,true},{location,{2190,17}}],badrecord},
                      {var,{2190,17},rec128}]}]}]}]},
              {var,{2190,38},'Es'}}},
            {match,{2189,13},{var,{2189,13},rec126},{var,{2189,13},'St'}},
            {'case',
             {2190,10},
             {var,{2189,13},rec126},
             [{clause,
               {2190,10},
               [{tuple,
                 {2190,10},
                 [{atom,{2190,10},compile},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'},
                  {var,{2190,10},'_'}]}],
               [],
               [{call,
                 {2190,10},
                 {remote,
                  {2190,10},
                  {atom,{2190,10},erlang},
                  {atom,{2190,10},setelement}},
                 [{integer,{2190,10},12},
                  {call,
                   {2189,24},
                   {remote,
                    {2189,24},
                    {atom,{2189,24},erlang},
                    {atom,{2189,24},setelement}},
                   [{integer,{2189,24},13},
                    {var,{2189,13},rec126},
                    {var,{2189,24},rec124}]},
                  {var,{2190,10},rec125}]}]},
              {clause,
               [{generated,true},{location,{2190,10}}],
               [{var,[{generated,true},{location,{2190,10}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2190,10}}],
                 {remote,
                  [{generated,true},{location,{2190,10}}],
                  {atom,[{generated,true},{location,{2190,10}}],erlang},
                  {atom,[{generated,true},{location,{2190,10}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2190,10}}],
                   [{atom,[{generated,true},{location,{2190,10}}],badrecord},
                    {var,{2189,13},rec126}]}]}]}]}]}]}]}]}]}]}.
{function,
    {2194,1},
    makedep_and_output,2,
    [{clause,
         {2194,1},
         [{var,{2194,1},'_'},{var,{2194,1},'_'}],
         [[{call,
               {2194,1},
               {remote,
                   {2194,1},
                   {atom,{2194,1},fake},
                   {atom,{2194,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2194,586},{atom,{2194,1},ignore}]},
     {clause,
         {2194,1},
         [{var,{2194,20},'Code0'},{var,{2194,27},'St'}],
         [],
         [{debug_line,2195,587},
          {match,
              {2195,5},
              {tuple,
                  {2195,5},
                  [{atom,{2195,6},ok},
                   {var,{2195,9},'DepCode'},
                   {var,{2195,17},'St1'}]},
              {call,
                  {2195,24},
                  {atom,{2195,24},makedep},
                  [{var,{2195,32},'Code0'},{var,{2195,38},'St'}]}},
          {debug_line,2196,588},
          {'case',
              {2196,5},
              {call,
                  {2196,10},
                  {atom,{2196,10},makedep_output},
                  [{var,{2196,25},'DepCode'},{var,{2196,34},'St1'}]},
              [{clause,
                   {2197,9},
                   [{tuple,
                        {2197,9},
                        [{atom,{2197,10},ok},
                         {var,{2197,13},'_IgnoreCode'},
                         {var,{2197,25},'St2'}]}],
                   [],
                   [{debug_line,2198,589},
                    {tuple,
                        {2198,13},
                        [{atom,{2198,14},ok},
                         {var,{2198,17},'Code0'},
                         {var,{2198,23},'St2'}]}]},
               {clause,
                   {2199,9},
                   [{tuple,
                        {2199,9},
                        [{atom,{2199,10},error},{var,{2199,16},'St2'}]}],
                   [],
                   [{debug_line,2200,590},
                    {tuple,
                        {2200,13},
                        [{atom,{2200,14},error},
                         {var,{2200,20},'St2'}]}]}]}]}]}.
{function,
 {2203,1},
 makedep,2,
 [{clause,
   {2203,1},
   [{var,{2203,1},'_'},{var,{2203,1},'_'}],
   [[{call,
      {2203,1},
      {remote,{2203,1},{atom,{2203,1},fake},{atom,{2203,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2203,591},{atom,{2203,1},ignore}]},
  {clause,
   {2203,1},
   [{var,{2203,9},'Code0'},
    {match,
     {2203,16},
     {tuple,
      {2203,16},
      [{atom,{2203,16},compile},
       {var,{2203,16},'_'},
       {var,{2203,16},'_'},
       {var,{2203,16},'_'},
       {var,{2203,31},'Ifile'},
       {var,{2203,43},'Ofile'},
       {var,{2203,16},'_'},
       {var,{2203,16},'_'},
       {var,{2203,57},'Opts'},
       {var,{2203,16},'_'},
       {var,{2203,16},'_'},
       {var,{2203,16},'_'},
       {var,{2203,16},'_'},
       {var,{2203,16},'_'}]},
     {var,{2203,63},'St'}}],
   [],
   [{debug_line,2206,592},
    {match,
     {2206,5},
     {var,{2206,5},'Target0'},
     {'case',
      {2207,2},
      {call,
       {2207,7},
       {remote,{2207,16},{atom,{2207,7},proplists},{atom,{2207,17},get_value}},
       [{atom,{2207,27},makedep_target},{var,{2207,43},'Opts'}]},
      [{clause,
        {2208,6},
        [{atom,{2208,6},undefined}],
        [],
        [{debug_line,2212,593},
         {call,
          {2212,3},
          {atom,{2212,3},shorten_filename},
          [{var,{2212,20},'Ofile'}]}]},
       {clause,
        {2213,6},
        [{var,{2213,6},'T'}],
        [],
        [{debug_line,2215,594},{var,{2215,3},'T'}]}]}},
    {debug_line,2219,595},
    {match,
     {2219,5},
     {var,{2219,5},'Target1'},
     {'case',
      {2219,15},
      {call,
       {2219,20},
       {remote,
        {2219,29},
        {atom,{2219,20},proplists},
        {atom,{2219,30},get_value}},
       [{atom,{2219,40},makedep_quote_target},{var,{2219,62},'Opts'}]},
      [{clause,
        {2220,5},
        [{atom,{2220,5},true}],
        [],
        [{debug_line,2222,596},
         {match,
          {2222,9},
          {var,{2222,9},'Fun'},
          {'fun',
           {2222,15},
           {clauses,
            [{clause,
              {2223,5},
              [{char,{2223,6},36}],
              [],
              [{debug_line,2223,597},{string,{2223,13},"$$"}]},
             {clause,
              {2224,5},
              [{var,{2224,6},'C'}],
              [],
              [{debug_line,2224,598},{var,{2224,13},'C'}]}]}}},
         {debug_line,2226,599},
         {call,
          {2226,9},
          {remote,{2226,9},{atom,{2226,9},lists},{atom,{2226,9},map}},
          [{var,{2226,13},'Fun'},{var,{2226,18},'Target0'}]}]},
       {clause,
        {2227,5},
        [{var,{2227,5},'_'}],
        [],
        [{debug_line,2228,600},{var,{2228,9},'Target0'}]}]}},
    {debug_line,2230,601},
    {match,
     {2230,5},
     {var,{2230,5},'Target'},
     {op,{2230,22},'++',{var,{2230,14},'Target1'},{string,{2230,25},":"}}},
    {debug_line,2233,602},
    {match,
     {2233,5},
     {tuple,{2233,5},[{var,{2233,6},'MainRule'},{var,{2233,15},'PhonyRules'}]},
     {call,
      {2233,29},
      {atom,{2233,29},makedep_add_headers},
      [{var,{2234,7},'Ifile'},
       {var,{2235,7},'Code0'},
       {nil,{2236,7}},
       {block,0,
        [{debug_line,2237,603},
         {call,
          {2237,7},
          {remote,{2237,7},{atom,{2237,7},erlang},{atom,{2237,7},length}},
          [{var,{2237,14},'Target'}]}]},
       {var,{2238,7},'Target'},
       {block,0,[{debug_line,2239,604},{string,{2239,7},[]}]},
       {var,{2240,7},'Opts'}]}},
    {debug_line,2251,605},
    {match,
     {2251,5},
     {var,{2251,5},'Makefile'},
     {'case',
      {2251,16},
      {call,
       {2251,21},
       {remote,
        {2251,30},
        {atom,{2251,21},proplists},
        {atom,{2251,31},get_value}},
       [{atom,{2251,41},makedep_phony},{var,{2251,56},'Opts'}]},
      [{clause,
        {2252,6},
        [{atom,{2252,6},true}],
        [],
        [{debug_line,2252,606},
         {op,
          {2252,23},
          '++',
          {var,{2252,14},'MainRule'},
          {var,{2252,26},'PhonyRules'}}]},
       {clause,
        {2253,6},
        [{var,{2253,6},'_'}],
        [],
        [{debug_line,2253,607},{var,{2253,11},'MainRule'}]}]}},
    {debug_line,2255,608},
    {match,
     {2255,5},
     {var,{2255,5},'Code'},
     {call,
      {2255,12},
      {remote,
       {2255,19},
       {atom,{2255,12},unicode},
       {atom,{2255,20},characters_to_binary}},
      [{block,0,
        [{cons,
          {2255,41},
          {var,{2255,42},'Makefile'},
          {cons,{2255,51},{string,{2255,51},"\n"},{nil,{2255,55}}}}]}]}},
    {debug_line,2256,609},
    {tuple,
     {2256,5},
     [{atom,{2256,6},ok},{var,{2256,9},'Code'},{var,{2256,14},'St'}]}]}]}.
{function,
    {2258,1},
    makedep_add_headers,7,
    [{clause,
         {2258,1},
         [{var,{2258,1},'_'},
          {var,{2258,1},'_'},
          {var,{2258,1},'_'},
          {var,{2258,1},'_'},
          {var,{2258,1},'_'},
          {var,{2258,1},'_'},
          {var,{2258,1},'_'}],
         [[{call,
               {2258,1},
               {remote,
                   {2258,1},
                   {atom,{2258,1},fake},
                   {atom,{2258,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2258,610},{atom,{2258,1},ignore}]},
     {clause,
         {2258,1},
         [{var,{2258,21},'Ifile'},
          {cons,
              {2258,28},
              {tuple,
                  {2258,29},
                  [{atom,{2258,30},attribute},
                   {var,{2258,40},'_'},
                   {atom,{2258,42},file},
                   {tuple,
                       {2258,47},
                       [{var,{2258,48},'File'},{var,{2258,53},'_'}]}]},
              {var,{2258,57},'Rest'}},
          {var,{2259,7},'Included'},
          {var,{2259,17},'LineLen'},
          {var,{2259,26},'MainTarget'},
          {var,{2259,38},'Phony'},
          {var,{2259,45},'Opts'}],
         [],
         [{debug_line,2261,611},
          {match,
              {2261,5},
              {tuple,
                  {2261,5},
                  [{var,{2261,6},'Included1'},
                   {var,{2261,16},'LineLen1'},
                   {var,{2261,25},'MainTarget1'},
                   {var,{2261,37},'Phony1'}]},
              {call,
                  {2262,2},
                  {atom,{2262,2},makedep_add_header},
                  [{var,{2262,21},'Ifile'},
                   {var,{2262,28},'Included'},
                   {var,{2262,38},'LineLen'},
                   {var,{2262,47},'MainTarget'},
                   {var,{2262,59},'Phony'},
                   {var,{2262,66},'File'}]}},
          {debug_line,2263,612},
          {call,
              {2263,5},
              {atom,{2263,5},makedep_add_headers},
              [{var,{2263,25},'Ifile'},
               {var,{2263,32},'Rest'},
               {var,{2263,38},'Included1'},
               {var,{2263,49},'LineLen1'},
               {var,{2264,4},'MainTarget1'},
               {var,{2264,17},'Phony1'},
               {var,{2264,25},'Opts'}]}]},
     {clause,
         {2265,1},
         [{var,{2265,21},'Ifile'},
          {cons,
              {2265,28},
              {tuple,
                  {2265,29},
                  [{atom,{2265,30},error},
                   {tuple,
                       {2265,36},
                       [{var,{2265,37},'_'},
                        {atom,{2265,39},epp},
                        {tuple,
                            {2265,43},
                            [{atom,{2265,44},include},
                             {atom,{2265,52},file},
                             {var,{2265,57},'File'}]}]}]},
              {var,{2265,65},'Rest'}},
          {var,{2266,7},'Included'},
          {var,{2266,17},'LineLen'},
          {var,{2266,26},'MainTarget'},
          {var,{2266,38},'Phony'},
          {var,{2266,45},'Opts'}],
         [],
         [{debug_line,2268,613},
          {'case',
              {2268,5},
              {call,
                  {2268,10},
                  {remote,
                      {2268,19},
                      {atom,{2268,10},proplists},
                      {atom,{2268,20},get_value}},
                  [{atom,{2268,30},makedep_add_missing},
                   {var,{2268,51},'Opts'}]},
              [{clause,
                   {2269,9},
                   [{atom,{2269,9},true}],
                   [],
                   [{debug_line,2270,614},
                    {match,
                        {2270,13},
                        {tuple,
                            {2270,13},
                            [{var,{2270,14},'Included1'},
                             {var,{2270,24},'LineLen1'},
                             {var,{2270,33},'MainTarget1'},
                             {var,{2270,45},'Phony1'}]},
                        {call,
                            {2271,3},
                            {atom,{2271,3},makedep_add_header},
                            [{var,{2271,22},'Ifile'},
                             {var,{2271,29},'Included'},
                             {var,{2271,39},'LineLen'},
                             {var,{2271,48},'MainTarget'},
                             {var,{2272,8},'Phony'},
                             {var,{2272,15},'File'}]}},
                    {debug_line,2273,615},
                    {call,
                        {2273,13},
                        {atom,{2273,13},makedep_add_headers},
                        [{var,{2273,33},'Ifile'},
                         {var,{2273,40},'Rest'},
                         {var,{2273,46},'Included1'},
                         {var,{2273,57},'LineLen1'},
                         {var,{2274,5},'MainTarget1'},
                         {var,{2274,18},'Phony1'},
                         {var,{2274,26},'Opts'}]}]},
               {clause,
                   {2275,9},
                   [{var,{2275,9},'_'}],
                   [],
                   [{debug_line,2276,616},
                    {call,
                        {2276,13},
                        {atom,{2276,13},makedep_add_headers},
                        [{var,{2276,33},'Ifile'},
                         {var,{2276,40},'Rest'},
                         {var,{2276,46},'Included'},
                         {var,{2276,56},'LineLen'},
                         {var,{2277,5},'MainTarget'},
                         {var,{2277,17},'Phony'},
                         {var,{2277,24},'Opts'}]}]}]}]},
     {clause,
         {2279,1},
         [{var,{2279,21},'Ifile'},
          {cons,{2279,28},{var,{2279,29},'_'},{var,{2279,31},'Rest'}},
          {var,{2279,38},'Included'},
          {var,{2279,48},'LineLen'},
          {var,{2280,7},'MainTarget'},
          {var,{2280,19},'Phony'},
          {var,{2280,26},'Opts'}],
         [],
         [{debug_line,2281,617},
          {call,
              {2281,5},
              {atom,{2281,5},makedep_add_headers},
              [{var,{2281,25},'Ifile'},
               {var,{2281,32},'Rest'},
               {var,{2281,38},'Included'},
               {var,{2282,4},'LineLen'},
               {var,{2282,13},'MainTarget'},
               {var,{2282,25},'Phony'},
               {var,{2282,32},'Opts'}]}]},
     {clause,
         {2283,1},
         [{var,{2283,21},'_Ifile'},
          {nil,{2283,29}},
          {var,{2283,33},'_Included'},
          {var,{2283,44},'_LineLen'},
          {var,{2284,7},'MainTarget'},
          {var,{2284,19},'Phony'},
          {var,{2284,26},'_Opts'}],
         [],
         [{debug_line,2285,618},
          {tuple,
              {2285,5},
              [{var,{2285,6},'MainTarget'},{var,{2285,17},'Phony'}]}]}]}.
{function,
 {2287,1},
 makedep_add_header,6,
 [{clause,
   {2287,1},
   [{var,{2287,1},'_'},
    {var,{2287,1},'_'},
    {var,{2287,1},'_'},
    {var,{2287,1},'_'},
    {var,{2287,1},'_'},
    {var,{2287,1},'_'}],
   [[{call,
      {2287,1},
      {remote,{2287,1},{atom,{2287,1},fake},{atom,{2287,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2287,619},{atom,{2287,1},ignore}]},
  {clause,
   {2287,1},
   [{var,{2287,20},'Ifile'},
    {var,{2287,27},'Included'},
    {var,{2287,37},'LineLen'},
    {var,{2287,46},'MainTarget'},
    {var,{2287,58},'Phony'},
    {var,{2287,65},'File'}],
   [],
   [{debug_line,2288,620},
    {'case',
     {2288,5},
     {call,
      {2288,10},
      {remote,{2288,10},{atom,{2288,10},lists},{atom,{2288,10},member}},
      [{var,{2288,17},'File'},{var,{2288,23},'Included'}]},
     [{clause,
       {2289,2},
       [{atom,{2289,2},true}],
       [],
       [{debug_line,2291,621},
        {tuple,
         {2291,13},
         [{var,{2291,14},'Included'},
          {var,{2291,23},'LineLen'},
          {var,{2291,31},'MainTarget'},
          {var,{2291,42},'Phony'}]}]},
      {clause,
       {2292,2},
       [{atom,{2292,2},false}],
       [],
       [{debug_line,2293,622},
        {match,
         {2293,13},
         {var,{2293,13},'Included1'},
         {cons,{2293,25},{var,{2293,26},'File'},{var,{2293,31},'Included'}}},
        {debug_line,2296,623},
        {match,
         {2296,6},
         {var,{2296,6},'File1'},
         {'case',
          {2296,14},
          {var,{2296,19},'File'},
          [{clause,
            {2297,4},
            [{op,
              {2297,9},
              '++',
              {string,{2297,4},"./"},
              {var,{2297,12},'File0'}}],
            [],
            [{debug_line,2297,624},{var,{2297,21},'File0'}]},
           {clause,
            {2298,4},
            [{var,{2298,4},'_'}],
            [],
            [{debug_line,2298,625},{var,{2298,9},'File'}]}]}},
        {debug_line,2302,626},
        {match,
         {2302,6},
         {var,{2302,6},'Phony1'},
         {'case',
          {2302,15},
          {var,{2302,20},'File'},
          [{clause,
            {2303,5},
            [{var,{2303,5},'Ifile'}],
            [],
            [{debug_line,2303,627},{var,{2303,14},'Phony'}]},
           {clause,
            {2304,5},
            [{var,{2304,5},'_'}],
            [],
            [{debug_line,2304,628},
             {op,
              {2304,20},
              '++',
              {var,{2304,14},'Phony'},
              {op,
               {2304,30},
               '++',
               {string,{2304,23},"\n\n"},
               {op,
                {2304,39},
                '++',
                {var,{2304,33},'File1'},
                {string,{2304,42},":"}}}}]}]}},
        {debug_line,2309,629},
        {'if',
         {2309,6},
         [{clause,
           {2310,3},
           [],
           [[{op,
              {2310,31},
              '>',
              {op,
               {2310,15},
               '+',
               {op,
                {2310,11},
                '+',
                {var,{2310,3},'LineLen'},
                {integer,{2310,13},1}},
               {call,
                {2310,17},
                {remote,
                 {2310,17},
                 {atom,{2310,17},erlang},
                 {atom,{2310,17},length}},
                [{var,{2310,24},'File1'}]}},
              {integer,{2310,33},76}}]],
           [{debug_line,2311,630},
            {match,
             {2311,21},
             {var,{2311,21},'LineLen1'},
             {op,
              {2311,34},
              '+',
              {integer,{2311,32},2},
              {call,
               {2311,36},
               {remote,
                {2311,36},
                {atom,{2311,36},erlang},
                {atom,{2311,36},length}},
               [{var,{2311,43},'File1'}]}}},
            {debug_line,2312,631},
            {match,
             {2312,21},
             {var,{2312,21},'MainTarget1'},
             {op,
              {2312,46},
              '++',
              {var,{2312,35},'MainTarget'},
              {op,
               {2312,59},
               '++',
               {string,{2312,49}," \\\n  "},
               {var,{2312,62},'File1'}}}},
            {debug_line,2313,632},
            {tuple,
             {2313,21},
             [{var,{2313,22},'Included1'},
              {var,{2313,32},'LineLen1'},
              {var,{2313,41},'MainTarget1'},
              {var,{2313,53},'Phony1'}]}]},
          {clause,
           {2314,3},
           [],
           [[{atom,{2314,3},true}]],
           [{debug_line,2315,633},
            {match,
             {2315,21},
             {var,{2315,21},'LineLen1'},
             {op,
              {2315,44},
              '+',
              {op,
               {2315,40},
               '+',
               {var,{2315,32},'LineLen'},
               {integer,{2315,42},1}},
              {call,
               {2315,46},
               {remote,
                {2315,46},
                {atom,{2315,46},erlang},
                {atom,{2315,46},length}},
               [{var,{2315,53},'File1'}]}}},
            {debug_line,2316,634},
            {match,
             {2316,21},
             {var,{2316,21},'MainTarget1'},
             {op,
              {2316,46},
              '++',
              {var,{2316,35},'MainTarget'},
              {op,
               {2316,53},
               '++',
               {string,{2316,49}," "},
               {var,{2316,56},'File1'}}}},
            {debug_line,2317,635},
            {tuple,
             {2317,21},
             [{var,{2317,22},'Included1'},
              {var,{2317,32},'LineLen1'},
              {var,{2317,41},'MainTarget1'},
              {var,{2317,53},'Phony1'}]}]}]}]}]}]}]}.
{function,
 {2321,1},
 makedep_output,2,
 [{clause,
   {2321,1},
   [{var,{2321,1},'_'},{var,{2321,1},'_'}],
   [[{call,
      {2321,1},
      {remote,{2321,1},{atom,{2321,1},fake},{atom,{2321,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2321,636},{atom,{2321,1},ignore}]},
  {clause,
   {2321,1},
   [{var,{2321,16},'Code'},
    {match,
     {2321,22},
     {tuple,
      {2321,22},
      [{atom,{2321,22},compile},
       {var,{2321,22},'_'},
       {var,{2321,22},'_'},
       {var,{2321,22},'_'},
       {var,{2321,22},'_'},
       {var,{2321,50},'Ofile'},
       {var,{2321,22},'_'},
       {var,{2321,22},'_'},
       {var,{2321,39},'Opts'},
       {var,{2321,22},'_'},
       {var,{2321,22},'_'},
       {var,{2321,22},'_'},
       {var,{2321,22},'_'},
       {var,{2321,22},'_'}]},
     {var,{2321,57},'St'}}],
   [],
   [{debug_line,2325,637},
    {match,
     {2325,5},
     {var,{2325,5},'Output'},
     {'case',
      {2325,14},
      {call,
       {2325,19},
       {remote,
        {2325,28},
        {atom,{2325,19},proplists},
        {atom,{2325,29},get_value}},
       [{atom,{2325,39},makedep_output},{var,{2325,55},'Opts'}]},
      [{clause,
        {2326,18},
        [{atom,{2326,18},undefined}],
        [],
        [{debug_line,2328,638},
         {call,
          {2328,22},
          {atom,{2328,22},outfile},
          [{block,0,
            [{call,
              {2328,30},
              {remote,
               {2328,38},
               {atom,{2328,30},filename},
               {atom,{2328,39},basename}},
              [{var,{2328,48},'Ofile'},
               {block,0,[{string,{2328,55},".beam"}]}]}]},
           {block,0,[{string,{2328,65},"Pbeam"}]},
           {var,{2328,74},'Opts'}]}]},
       {clause,
        {2329,18},
        [{var,{2329,18},'Other'}],
        [],
        [{debug_line,2330,639},{var,{2330,22},'Other'}]}]}},
    {debug_line,2333,640},
    {'if',
     {2333,5},
     [{clause,
       {2334,9},
       [],
       [[{call,
          {2334,9},
          {remote,{2334,9},{atom,{2334,9},erlang},{atom,{2334,9},is_list}},
          [{var,{2334,17},'Output'}]}]],
       [{debug_line,2336,641},
        {'case',
         {2336,13},
         {call,
          {2336,18},
          {remote,{2336,22},{atom,{2336,18},file},{atom,{2336,23},write_file}},
          [{var,{2336,34},'Output'},{var,{2336,42},'Code'}]},
         [{clause,
           {2337,17},
           [{atom,{2337,17},ok}],
           [],
           [{debug_line,2338,642},
            {tuple,
             {2338,21},
             [{atom,{2338,22},ok},
              {var,{2338,25},'Code'},
              {var,{2338,30},'St'}]}]},
          {clause,
           {2339,17},
           [{tuple,
             {2339,17},
             [{atom,{2339,18},error},{var,{2339,24},'Reason'}]}],
           [],
           [{debug_line,2340,643},
            {match,
             {2340,21},
             {var,{2340,21},'Err'},
             {tuple,
              {2340,27},
              [{'case',
                {2340,28},
                {var,{2340,28},'St'},
                [{clause,
                  [{generated,true},{location,{2340,28}}],
                  [{tuple,
                    [{generated,true},{location,{2340,28}}],
                    [{atom,{2340,28},compile},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},rec129},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'},
                     {var,{2340,28},'_'}]}],
                  [],
                  [{var,{2340,28},rec129}]},
                 {clause,
                  [{generated,true},{location,{2340,28}}],
                  [{var,{2340,28},rec129}],
                  [],
                  [{call,
                    [{generated,true},{location,{2340,28}}],
                    {remote,
                     [{generated,true},{location,{2340,28}}],
                     {atom,[{generated,true},{location,{2340,28}}],erlang},
                     {atom,[{generated,true},{location,{2340,28}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2340,28}}],
                      [{atom,
                        [{generated,true},{location,{2340,28}}],
                        badrecord},
                       {var,{2340,28},rec129}]}]}]}]},
               {cons,
                {2340,45},
                {tuple,
                 {2340,46},
                 [{atom,{2340,47},none},
                  {atom,{2340,53},compile},
                  {tuple,
                   {2340,60},
                   [{atom,{2340,61},write_error},{var,{2340,73},'Reason'}]}]},
                {nil,{2340,81}}}]}},
            {debug_line,2341,644},
            {tuple,
             {2341,21},
             [{atom,{2341,22},error},
              {block,
               {2341,28},
               [{match,
                 {2341,39},
                 {var,{2341,39},rec130},
                 {op,
                  {2341,63},
                  '++',
                  {'case',
                   {2341,46},
                   {var,{2341,46},'St'},
                   [{clause,
                     [{generated,true},{location,{2341,46}}],
                     [{tuple,
                       [{generated,true},{location,{2341,46}}],
                       [{atom,{2341,46},compile},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'},
                        {var,{2341,46},rec132},
                        {var,{2341,46},'_'},
                        {var,{2341,46},'_'}]}],
                     [],
                     [{var,{2341,46},rec132}]},
                    {clause,
                     [{generated,true},{location,{2341,46}}],
                     [{var,{2341,46},rec132}],
                     [],
                     [{call,
                       [{generated,true},{location,{2341,46}}],
                       {remote,
                        [{generated,true},{location,{2341,46}}],
                        {atom,[{generated,true},{location,{2341,46}}],erlang},
                        {atom,[{generated,true},{location,{2341,46}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2341,46}}],
                         [{atom,
                           [{generated,true},{location,{2341,46}}],
                           badrecord},
                          {var,{2341,46},rec132}]}]}]}]},
                  {cons,{2341,65},{var,{2341,66},'Err'},{nil,{2341,69}}}}},
                {match,{2341,28},{var,{2341,28},rec131},{var,{2341,28},'St'}},
                {'case',
                 {2341,39},
                 {var,{2341,28},rec131},
                 [{clause,
                   {2341,39},
                   [{tuple,
                     {2341,39},
                     [{atom,{2341,39},compile},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'},
                      {var,{2341,39},'_'}]}],
                   [],
                   [{call,
                     {2341,39},
                     {remote,
                      {2341,39},
                      {atom,{2341,39},erlang},
                      {atom,{2341,39},setelement}},
                     [{integer,{2341,39},12},
                      {var,{2341,28},rec131},
                      {var,{2341,39},rec130}]}]},
                  {clause,
                   [{generated,true},{location,{2341,39}}],
                   [{var,[{generated,true},{location,{2341,39}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{2341,39}}],
                     {remote,
                      [{generated,true},{location,{2341,39}}],
                      {atom,[{generated,true},{location,{2341,39}}],erlang},
                      {atom,[{generated,true},{location,{2341,39}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2341,39}}],
                       [{atom,
                         [{generated,true},{location,{2341,39}}],
                         badrecord},
                        {var,{2341,28},rec131}]}]}]}]}]}]}]}]}]},
      {clause,
       {2343,9},
       [],
       [[{atom,{2343,9},true}]],
       [{debug_line,2345,645},
        {'try',
         {2345,13},
         [{call,
           {2345,17},
           {remote,{2345,19},{atom,{2345,17},io},{atom,{2345,20},fwrite}},
           [{var,{2345,27},'Output'},
            {block,0,[{string,{2345,35},"~ts"}]},
            {block,0,
             [{cons,{2345,42},{var,{2345,43},'Code'},{nil,{2345,47}}}]}]}],
         [{clause,
           {2346,17},
           [{atom,{2346,17},ok}],
           [],
           [{debug_line,2347,646},
            {tuple,
             {2347,21},
             [{atom,{2347,22},ok},
              {var,{2347,25},'Code'},
              {var,{2347,30},'St'}]}]}],
         [{clause,
           {2349,17},
           [{tuple,
             {2349,17},
             [{atom,{2349,17},error},
              {var,{2349,23},'_'},
              {var,{2349,23},'_'}]}],
           [],
           [{debug_line,2350,647},
            {match,
             {2350,21},
             {var,{2350,21},'Err'},
             {tuple,
              {2350,27},
              [{'case',
                {2350,28},
                {var,{2350,28},'St'},
                [{clause,
                  [{generated,true},{location,{2350,28}}],
                  [{tuple,
                    [{generated,true},{location,{2350,28}}],
                    [{atom,{2350,28},compile},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},rec133},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'},
                     {var,{2350,28},'_'}]}],
                  [],
                  [{var,{2350,28},rec133}]},
                 {clause,
                  [{generated,true},{location,{2350,28}}],
                  [{var,{2350,28},rec133}],
                  [],
                  [{call,
                    [{generated,true},{location,{2350,28}}],
                    {remote,
                     [{generated,true},{location,{2350,28}}],
                     {atom,[{generated,true},{location,{2350,28}}],erlang},
                     {atom,[{generated,true},{location,{2350,28}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2350,28}}],
                      [{atom,
                        [{generated,true},{location,{2350,28}}],
                        badrecord},
                       {var,{2350,28},rec133}]}]}]}]},
               {cons,
                {2350,45},
                {tuple,
                 {2350,46},
                 [{atom,{2350,47},none},
                  {atom,{2350,53},compile},
                  {atom,{2350,60},write_error}]},
                {nil,{2350,72}}}]}},
            {debug_line,2351,648},
            {tuple,
             {2351,21},
             [{atom,{2351,22},error},
              {block,
               {2351,28},
               [{match,
                 {2351,39},
                 {var,{2351,39},rec134},
                 {op,
                  {2351,63},
                  '++',
                  {'case',
                   {2351,46},
                   {var,{2351,46},'St'},
                   [{clause,
                     [{generated,true},{location,{2351,46}}],
                     [{tuple,
                       [{generated,true},{location,{2351,46}}],
                       [{atom,{2351,46},compile},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'},
                        {var,{2351,46},rec136},
                        {var,{2351,46},'_'},
                        {var,{2351,46},'_'}]}],
                     [],
                     [{var,{2351,46},rec136}]},
                    {clause,
                     [{generated,true},{location,{2351,46}}],
                     [{var,{2351,46},rec136}],
                     [],
                     [{call,
                       [{generated,true},{location,{2351,46}}],
                       {remote,
                        [{generated,true},{location,{2351,46}}],
                        {atom,[{generated,true},{location,{2351,46}}],erlang},
                        {atom,[{generated,true},{location,{2351,46}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2351,46}}],
                         [{atom,
                           [{generated,true},{location,{2351,46}}],
                           badrecord},
                          {var,{2351,46},rec136}]}]}]}]},
                  {cons,{2351,65},{var,{2351,66},'Err'},{nil,{2351,69}}}}},
                {match,{2351,28},{var,{2351,28},rec135},{var,{2351,28},'St'}},
                {'case',
                 {2351,39},
                 {var,{2351,28},rec135},
                 [{clause,
                   {2351,39},
                   [{tuple,
                     {2351,39},
                     [{atom,{2351,39},compile},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'},
                      {var,{2351,39},'_'}]}],
                   [],
                   [{call,
                     {2351,39},
                     {remote,
                      {2351,39},
                      {atom,{2351,39},erlang},
                      {atom,{2351,39},setelement}},
                     [{integer,{2351,39},12},
                      {var,{2351,28},rec135},
                      {var,{2351,39},rec134}]}]},
                  {clause,
                   [{generated,true},{location,{2351,39}}],
                   [{var,[{generated,true},{location,{2351,39}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{2351,39}}],
                     {remote,
                      [{generated,true},{location,{2351,39}}],
                      {atom,[{generated,true},{location,{2351,39}}],erlang},
                      {atom,[{generated,true},{location,{2351,39}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2351,39}}],
                       [{atom,
                         [{generated,true},{location,{2351,39}}],
                         badrecord},
                        {var,{2351,28},rec135}]}]}]}]}]}]}]}],
         []}]}]}]}]}.
{function,
    {2355,1},
    expand_records,2,
    [{clause,
         {2355,1},
         [{var,{2355,1},'_'},{var,{2355,1},'_'}],
         [[{call,
               {2355,1},
               {remote,
                   {2355,1},
                   {atom,{2355,1},fake},
                   {atom,{2355,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2355,649},{atom,{2355,1},ignore}]},
     {clause,
         {2355,1},
         [{var,{2355,16},'Code0'},
          {match,
              {2355,23},
              {tuple,
                  {2355,23},
                  [{atom,{2355,23},compile},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,40},'Opts'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'},
                   {var,{2355,23},'_'}]},
              {var,{2355,46},'St'}}],
         [],
         [{debug_line,2356,650},
          {match,
              {2356,5},
              {var,{2356,5},'Code'},
              {call,
                  {2356,12},
                  {remote,
                      {2356,30},
                      {atom,{2356,12},erl_expand_records},
                      {atom,{2356,31},module}},
                  [{var,{2356,38},'Code0'},{var,{2356,45},'Opts'}]}},
          {debug_line,2357,651},
          {tuple,
              {2357,5},
              [{atom,{2357,6},ok},
               {var,{2357,9},'Code'},
               {var,{2357,14},'St'}]}]}]}.
{function,
 {2359,1},
 legalize_vars,2,
 [{clause,
   {2359,1},
   [{var,{2359,1},'_'},{var,{2359,1},'_'}],
   [[{call,
      {2359,1},
      {remote,{2359,1},{atom,{2359,1},fake},{atom,{2359,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2359,652},{atom,{2359,1},ignore}]},
  {clause,
   {2359,1},
   [{var,{2359,15},'Code0'},{var,{2359,22},'St'}],
   [],
   [{debug_line,2360,653},
    {match,
     {2360,5},
     {var,{2360,5},'Code'},
     {call,
      {2360,12},
      {remote,{2360,12},{atom,{2360,12},lists},{atom,{2360,12},map}},
      [{block,0,
        [{'fun',
          {2360,16},
          {clauses,
           [{clause,
             {2360,19},
             [{match,
               {2360,20},
               {var,{2360,20},'F'},
               {tuple,
                {2360,22},
                [{atom,{2360,23},function},
                 {var,{2360,32},'_'},
                 {var,{2360,34},'_'},
                 {var,{2360,36},'_'},
                 {var,{2360,38},'_'}]}}],
             [],
             [{debug_line,2361,654},
              {call,
               {2361,24},
               {remote,
                {2361,30},
                {atom,{2361,24},erl_pp},
                {atom,{2361,31},legalize_vars}},
               [{var,{2361,45},'F'}]}]},
            {clause,
             {2362,19},
             [{var,{2362,20},'F'}],
             [],
             [{debug_line,2363,655},{var,{2363,24},'F'}]}]}}]},
       {var,{2364,21},'Code0'}]}},
    {debug_line,2365,656},
    {tuple,
     {2365,5},
     [{atom,{2365,6},ok},{var,{2365,9},'Code'},{var,{2365,14},'St'}]}]}]}.
{function,
    {2367,1},
    compile_directives,2,
    [{clause,
         {2367,1},
         [{var,{2367,1},'_'},{var,{2367,1},'_'}],
         [[{call,
               {2367,1},
               {remote,
                   {2367,1},
                   {atom,{2367,1},fake},
                   {atom,{2367,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2367,657},{atom,{2367,1},ignore}]},
     {clause,
         {2367,1},
         [{var,{2367,20},'Forms'},{var,{2367,27},'St'}],
         [],
         [{debug_line,2368,658},
          {match,
              {2368,5},
              {var,{2368,5},'Opts'},
              {lc,{2368,12},
                  {block,0,[{var,{2368,13},'C'}]},
                  [{block,0,[{atom,{2368,45},true}]},
                   {generate,
                       {2368,42},
                       {tuple,
                           {2368,18},
                           [{atom,{2368,19},attribute},
                            {var,{2368,29},'_'},
                            {atom,{2368,31},compile},
                            {var,{2368,39},'C'}]},
                       {var,{2368,45},'Forms'}}]}},
          {debug_line,2369,659},
          {call,
              {2369,5},
              {atom,{2369,5},compile_directives_1},
              [{var,{2369,26},'Opts'},
               {var,{2369,32},'Forms'},
               {var,{2369,39},'St'}]}]}]}.
{function,
    {2371,1},
    core_compile_directives,2,
    [{clause,
         {2371,1},
         [{var,{2371,1},'_'},{var,{2371,1},'_'}],
         [[{call,
               {2371,1},
               {remote,
                   {2371,1},
                   {atom,{2371,1},fake},
                   {atom,{2371,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2371,660},{atom,{2371,1},ignore}]},
     {clause,
         {2371,1},
         [{var,{2371,25},'Core'},{var,{2371,31},'St'}],
         [],
         [{debug_line,2372,661},
          {match,
              {2372,5},
              {var,{2372,5},'Attrs'},
              {lc,{2372,13},
                  {block,0,
                      [{tuple,
                           {2372,14},
                           [{call,
                                {2372,15},
                                {remote,
                                    {2372,19},
                                    {atom,{2372,15},cerl},
                                    {atom,{2372,20},concrete}},
                                [{var,{2372,29},'Name'}]},
                            {call,
                                {2372,35},
                                {remote,
                                    {2372,39},
                                    {atom,{2372,35},cerl},
                                    {atom,{2372,40},concrete}},
                                [{var,{2372,49},'Value'}]}]}]},
                  [{block,0,[{debug_line,2373,662},{atom,{2373,34},true}]},
                   {generate_strict,
                       {2373,30},
                       {tuple,
                           {2373,17},
                           [{var,{2373,18},'Name'},{var,{2373,23},'Value'}]},
                       {call,
                           {2373,34},
                           {remote,
                               {2373,38},
                               {atom,{2373,34},cerl},
                               {atom,{2373,39},module_attrs}},
                           [{var,{2373,52},'Core'}]}}]}},
          {debug_line,2374,663},
          {match,
              {2374,5},
              {var,{2374,5},'Opts'},
              {lc,{2374,12},
                  {block,0,[{var,{2374,13},'C'}]},
                  [{block,0,[{atom,{2374,33},true}]},
                   {generate,
                       {2374,30},
                       {tuple,
                           {2374,18},
                           [{atom,{2374,19},compile},{var,{2374,27},'C'}]},
                       {var,{2374,33},'Attrs'}}]}},
          {debug_line,2375,664},
          {call,
              {2375,5},
              {atom,{2375,5},compile_directives_1},
              [{var,{2375,26},'Opts'},
               {var,{2375,32},'Core'},
               {var,{2375,38},'St'}]}]}]}.
{function,
 {2377,1},
 compile_directives_1,3,
 [{clause,
   {2377,1},
   [{var,{2377,1},'_'},{var,{2377,1},'_'},{var,{2377,1},'_'}],
   [[{call,
      {2377,1},
      {remote,{2377,1},{atom,{2377,1},fake},{atom,{2377,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2377,665},{atom,{2377,1},ignore}]},
  {clause,
   {2377,1},
   [{var,{2377,22},'Opts1'},
    {var,{2377,29},'Forms'},
    {match,
     {2377,36},
     {tuple,
      {2377,36},
      [{atom,{2377,36},compile},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,53},'Opts0'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'},
       {var,{2377,36},'_'}]},
     {var,{2377,60},'St0'}}],
   [],
   [{debug_line,2378,666},
    {match,
     {2378,5},
     {var,{2378,5},'Opts'},
     {op,
      {2378,40},
      '++',
      {call,
       {2378,12},
       {atom,{2378,12},expand_opts},
       [{block,0,
         [{call,
           {2378,24},
           {remote,{2378,24},{atom,{2378,24},lists},{atom,{2378,24},flatten}},
           [{var,{2378,32},'Opts1'}]}]}]},
      {var,{2378,43},'Opts0'}}},
    {debug_line,2379,667},
    {match,
     {2379,5},
     {var,{2379,5},'St1'},
     {block,
      {2379,11},
      [{match,{2379,11},{var,{2379,11},rec137},{var,{2379,11},'St0'}},
       {'case',
        {2379,23},
        {var,{2379,11},rec137},
        [{clause,
          {2379,23},
          [{tuple,
            {2379,23},
            [{atom,{2379,23},compile},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'},
             {var,{2379,23},'_'}]}],
          [],
          [{call,
            {2379,23},
            {remote,
             {2379,23},
             {atom,{2379,23},erlang},
             {atom,{2379,23},setelement}},
            [{integer,{2379,23},9},
             {var,{2379,11},rec137},
             {var,{2379,31},'Opts'}]}]},
         {clause,
          [{generated,true},{location,{2379,23}}],
          [{var,[{generated,true},{location,{2379,23}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2379,23}}],
            {remote,
             [{generated,true},{location,{2379,23}}],
             {atom,[{generated,true},{location,{2379,23}}],erlang},
             {atom,[{generated,true},{location,{2379,23}}],error}},
            [{tuple,
              [{generated,true},{location,{2379,23}}],
              [{atom,[{generated,true},{location,{2379,23}}],badrecord},
               {var,{2379,11},rec137}]}]}]}]}]}},
    {debug_line,2380,668},
    {'case',
     {2380,5},
     {call,
      {2380,10},
      {atom,{2380,10},any_obsolete_option},
      [{var,{2380,30},'Opts'}]},
     [{clause,
       {2381,9},
       [{tuple,{2381,9},[{atom,{2381,10},yes},{var,{2381,14},'Opt'}]}],
       [],
       [{debug_line,2382,669},
        {match,
         {2382,13},
         {var,{2382,13},'Error'},
         {tuple,
          {2382,21},
          [{'case',
            {2382,22},
            {var,{2382,22},'St1'},
            [{clause,
              [{generated,true},{location,{2382,22}}],
              [{tuple,
                [{generated,true},{location,{2382,22}}],
                [{atom,{2382,22},compile},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},rec138},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'},
                 {var,{2382,22},'_'}]}],
              [],
              [{var,{2382,22},rec138}]},
             {clause,
              [{generated,true},{location,{2382,22}}],
              [{var,{2382,22},rec138}],
              [],
              [{call,
                [{generated,true},{location,{2382,22}}],
                {remote,
                 [{generated,true},{location,{2382,22}}],
                 {atom,[{generated,true},{location,{2382,22}}],erlang},
                 {atom,[{generated,true},{location,{2382,22}}],error}},
                [{tuple,
                  [{generated,true},{location,{2382,22}}],
                  [{atom,[{generated,true},{location,{2382,22}}],badrecord},
                   {var,{2382,22},rec138}]}]}]}]},
           {cons,
            {2382,40},
            {tuple,
             {2382,41},
             [{atom,{2382,42},none},
              {atom,{2382,48},compile},
              {tuple,
               {2382,55},
               [{atom,{2382,56},obsolete_option},{var,{2382,72},'Opt'}]}]},
            {nil,{2382,77}}}]}},
        {debug_line,2383,670},
        {match,
         {2383,13},
         {var,{2383,13},'St'},
         {block,
          {2383,18},
          [{match,
            {2383,30},
            {var,{2383,30},rec139},
            {cons,
             {2383,37},
             {var,{2383,38},'Error'},
             {'case',
              {2383,44},
              {var,{2383,44},'St1'},
              [{clause,
                [{generated,true},{location,{2383,44}}],
                [{tuple,
                  [{generated,true},{location,{2383,44}}],
                  [{atom,{2383,44},compile},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'},
                   {var,{2383,44},rec141},
                   {var,{2383,44},'_'},
                   {var,{2383,44},'_'}]}],
                [],
                [{var,{2383,44},rec141}]},
               {clause,
                [{generated,true},{location,{2383,44}}],
                [{var,{2383,44},rec141}],
                [],
                [{call,
                  [{generated,true},{location,{2383,44}}],
                  {remote,
                   [{generated,true},{location,{2383,44}}],
                   {atom,[{generated,true},{location,{2383,44}}],erlang},
                   {atom,[{generated,true},{location,{2383,44}}],error}},
                  [{tuple,
                    [{generated,true},{location,{2383,44}}],
                    [{atom,[{generated,true},{location,{2383,44}}],badrecord},
                     {var,{2383,44},rec141}]}]}]}]}}},
           {match,{2383,18},{var,{2383,18},rec140},{var,{2383,18},'St1'}},
           {'case',
            {2383,30},
            {var,{2383,18},rec140},
            [{clause,
              {2383,30},
              [{tuple,
                {2383,30},
                [{atom,{2383,30},compile},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'},
                 {var,{2383,30},'_'}]}],
              [],
              [{call,
                {2383,30},
                {remote,
                 {2383,30},
                 {atom,{2383,30},erlang},
                 {atom,{2383,30},setelement}},
                [{integer,{2383,30},12},
                 {var,{2383,18},rec140},
                 {var,{2383,30},rec139}]}]},
             {clause,
              [{generated,true},{location,{2383,30}}],
              [{var,[{generated,true},{location,{2383,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2383,30}}],
                {remote,
                 [{generated,true},{location,{2383,30}}],
                 {atom,[{generated,true},{location,{2383,30}}],erlang},
                 {atom,[{generated,true},{location,{2383,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{2383,30}}],
                  [{atom,[{generated,true},{location,{2383,30}}],badrecord},
                   {var,{2383,18},rec140}]}]}]}]}]}},
        {debug_line,2384,671},
        {tuple,{2384,13},[{atom,{2384,14},error},{var,{2384,20},'St'}]}]},
      {clause,
       {2385,9},
       [{atom,{2385,9},no}],
       [],
       [{debug_line,2386,672},
        {tuple,
         {2386,13},
         [{atom,{2386,14},ok},
          {var,{2386,17},'Forms'},
          {var,{2386,23},'St1'}]}]}]}]}]}.
{function,
    {2389,1},
    any_obsolete_option,1,
    [{clause,
         {2389,1},
         [{var,{2389,1},'_'}],
         [[{call,
               {2389,1},
               {remote,
                   {2389,1},
                   {atom,{2389,1},fake},
                   {atom,{2389,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2389,673},{atom,{2389,1},ignore}]},
     {clause,
         {2389,1},
         [{cons,{2389,21},{var,{2389,22},'Opt'},{var,{2389,26},'Opts'}}],
         [],
         [{debug_line,2390,674},
          {'case',
              {2390,5},
              {call,
                  {2390,10},
                  {atom,{2390,10},is_obsolete},
                  [{var,{2390,22},'Opt'}]},
              [{clause,
                   {2391,9},
                   [{atom,{2391,9},true}],
                   [],
                   [{debug_line,2391,675},
                    {tuple,
                        {2391,17},
                        [{atom,{2391,18},yes},{var,{2391,22},'Opt'}]}]},
               {clause,
                   {2392,9},
                   [{atom,{2392,9},false}],
                   [],
                   [{debug_line,2392,676},
                    {call,
                        {2392,18},
                        {atom,{2392,18},any_obsolete_option},
                        [{var,{2392,38},'Opts'}]}]}]}]},
     {clause,
         {2394,1},
         [{nil,{2394,21}}],
         [],
         [{debug_line,2394,677},{atom,{2394,28},no}]}]}.
{function,{2396,1},
          is_obsolete,1,
          [{clause,{2396,1},
                   [{var,{2396,1},'_'}],
                   [[{call,{2396,1},
                           {remote,{2396,1},
                                   {atom,{2396,1},fake},
                                   {atom,{2396,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2396,678},{atom,{2396,1},ignore}]},
           {clause,{2396,1},
                   [{atom,{2396,13},r18}],
                   [],
                   [{debug_line,2396,679},{atom,{2396,21},true}]},
           {clause,{2397,1},
                   [{atom,{2397,13},r19}],
                   [],
                   [{debug_line,2397,680},{atom,{2397,21},true}]},
           {clause,{2398,1},
                   [{atom,{2398,13},r20}],
                   [],
                   [{debug_line,2398,681},{atom,{2398,21},true}]},
           {clause,{2399,1},
                   [{atom,{2399,13},r21}],
                   [],
                   [{debug_line,2399,682},{atom,{2399,21},true}]},
           {clause,{2400,1},
                   [{atom,{2400,13},r22}],
                   [],
                   [{debug_line,2400,683},{atom,{2400,21},true}]},
           {clause,{2401,1},
                   [{atom,{2401,13},r23}],
                   [],
                   [{debug_line,2401,684},{atom,{2401,21},true}]},
           {clause,{2402,1},
                   [{atom,{2402,13},r24}],
                   [],
                   [{debug_line,2402,685},{atom,{2402,21},true}]},
           {clause,{2403,1},
                   [{atom,{2403,13},no_badrecord}],
                   [],
                   [{debug_line,2403,686},{atom,{2403,30},true}]},
           {clause,{2404,1},
                   [{atom,{2404,13},no_bs_create_bin}],
                   [],
                   [{debug_line,2404,687},{atom,{2404,34},true}]},
           {clause,{2405,1},
                   [{atom,{2405,13},no_bsm3}],
                   [],
                   [{debug_line,2405,688},{atom,{2405,25},true}]},
           {clause,{2406,1},
                   [{atom,{2406,13},no_get_hd_tl}],
                   [],
                   [{debug_line,2406,689},{atom,{2406,30},true}]},
           {clause,{2407,1},
                   [{atom,{2407,13},no_put_tuple2}],
                   [],
                   [{debug_line,2407,690},{atom,{2407,31},true}]},
           {clause,{2408,1},
                   [{atom,{2408,13},no_utf8_atoms}],
                   [],
                   [{debug_line,2408,691},{atom,{2408,31},true}]},
           {clause,{2409,1},
                   [{atom,{2409,13},no_swap}],
                   [],
                   [{debug_line,2409,692},{atom,{2409,25},true}]},
           {clause,{2410,1},
                   [{atom,{2410,13},no_init_yregs}],
                   [],
                   [{debug_line,2410,693},{atom,{2410,31},true}]},
           {clause,{2411,1},
                   [{atom,{2411,13},no_shared_fun_wrappers}],
                   [],
                   [{debug_line,2411,694},{atom,{2411,40},true}]},
           {clause,{2412,1},
                   [{atom,{2412,13},no_make_fun3}],
                   [],
                   [{debug_line,2412,695},{atom,{2412,30},true}]},
           {clause,{2413,1},
                   [{var,{2413,13},'_'}],
                   [],
                   [{debug_line,2413,696},{atom,{2413,19},false}]}]}.
{function,
 {2415,1},
 core,2,
 [{clause,
   {2415,1},
   [{var,{2415,1},'_'},{var,{2415,1},'_'}],
   [[{call,
      {2415,1},
      {remote,{2415,1},{atom,{2415,1},fake},{atom,{2415,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2415,697},{atom,{2415,1},ignore}]},
  {clause,
   {2415,1},
   [{var,{2415,6},'Forms'},
    {match,
     {2415,13},
     {tuple,
      {2415,13},
      [{atom,{2415,13},compile},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,30},'Opts'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'},
       {var,{2415,13},'_'}]},
     {var,{2415,36},'St'}}],
   [],
   [{debug_line,2416,698},
    {match,
     {2416,5},
     {tuple,
      {2416,5},
      [{atom,{2416,6},ok},{var,{2416,9},'Core'},{var,{2416,14},'Ws'}]},
     {call,
      {2416,20},
      {remote,{2416,27},{atom,{2416,20},v3_core},{atom,{2416,28},module}},
      [{var,{2416,35},'Forms'},{var,{2416,42},'Opts'}]}},
    {debug_line,2417,699},
    {match,
     {2417,5},
     {var,{2417,5},'Mod'},
     {call,
      {2417,11},
      {remote,{2417,15},{atom,{2417,11},cerl},{atom,{2417,16},concrete}},
      [{block,0,
        [{call,
          {2417,25},
          {remote,
           {2417,29},
           {atom,{2417,25},cerl},
           {atom,{2417,30},module_name}},
          [{var,{2417,42},'Core'}]}]}]}},
    {debug_line,2418,700},
    {tuple,
     {2418,5},
     [{atom,{2418,6},ok},
      {var,{2418,9},'Core'},
      {block,
       {2418,14},
       [{match,
         {2419,25},
         {var,{2419,25},rec142},
         {op,
          {2419,53},
          '++',
          {'case',
           {2419,34},
           {var,{2419,34},'St'},
           [{clause,
             [{generated,true},{location,{2419,34}}],
             [{tuple,
               [{generated,true},{location,{2419,34}}],
               [{atom,{2419,34},compile},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},'_'},
                {var,{2419,34},rec144},
                {var,{2419,34},'_'}]}],
             [],
             [{var,{2419,34},rec144}]},
            {clause,
             [{generated,true},{location,{2419,34}}],
             [{var,{2419,34},rec144}],
             [],
             [{call,
               [{generated,true},{location,{2419,34}}],
               {remote,
                [{generated,true},{location,{2419,34}}],
                {atom,[{generated,true},{location,{2419,34}}],erlang},
                {atom,[{generated,true},{location,{2419,34}}],error}},
               [{tuple,
                 [{generated,true},{location,{2419,34}}],
                 [{atom,[{generated,true},{location,{2419,34}}],badrecord},
                  {var,{2419,34},rec144}]}]}]}]},
          {var,{2419,55},'Ws'}}},
        {match,{2418,14},{var,{2418,14},rec143},{var,{2418,14},'St'}},
        {'case',
         {2418,25},
         {var,{2418,14},rec143},
         [{clause,
           {2418,25},
           [{tuple,
             {2418,25},
             [{atom,{2418,25},compile},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'},
              {var,{2418,25},'_'}]}],
           [],
           [{call,
             {2418,25},
             {remote,
              {2418,25},
              {atom,{2418,25},erlang},
              {atom,{2418,25},setelement}},
             [{integer,{2418,25},7},
              {call,
               {2418,36},
               {remote,
                {2418,36},
                {atom,{2418,36},erlang},
                {atom,{2418,36},setelement}},
               [{integer,{2418,36},9},
                {call,
                 {2419,25},
                 {remote,
                  {2419,25},
                  {atom,{2419,25},erlang},
                  {atom,{2419,25},setelement}},
                 [{integer,{2419,25},13},
                  {var,{2418,14},rec143},
                  {var,{2419,25},rec142}]},
                {var,{2418,44},'Opts'}]},
              {var,{2418,32},'Mod'}]}]},
          {clause,
           [{generated,true},{location,{2418,25}}],
           [{var,[{generated,true},{location,{2418,25}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2418,25}}],
             {remote,
              [{generated,true},{location,{2418,25}}],
              {atom,[{generated,true},{location,{2418,25}}],erlang},
              {atom,[{generated,true},{location,{2418,25}}],error}},
             [{tuple,
               [{generated,true},{location,{2418,25}}],
               [{atom,[{generated,true},{location,{2418,25}}],badrecord},
                {var,{2418,14},rec143}]}]}]}]}]}]}]}]}.
{function,
    {2421,1},
    core_fold_module_after_inlining,2,
    [{clause,
         {2421,1},
         [{var,{2421,1},'_'},{var,{2421,1},'_'}],
         [[{call,
               {2421,1},
               {remote,
                   {2421,1},
                   {atom,{2421,1},fake},
                   {atom,{2421,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2421,701},{atom,{2421,1},ignore}]},
     {clause,
         {2421,1},
         [{var,{2421,33},'Code0'},
          {match,
              {2421,40},
              {tuple,
                  {2421,40},
                  [{atom,{2421,40},compile},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,57},'Opts'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'},
                   {var,{2421,40},'_'}]},
              {var,{2421,63},'St'}}],
         [],
         [{debug_line,2424,702},
          {match,
              {2424,5},
              {tuple,
                  {2424,5},
                  [{atom,{2424,6},ok},
                   {var,{2424,9},'Code'},
                   {var,{2424,14},'_Ws'}]},
              {call,
                  {2424,21},
                  {remote,
                      {2424,34},
                      {atom,{2424,21},sys_core_fold},
                      {atom,{2424,35},module}},
                  [{var,{2424,42},'Code0'},{var,{2424,49},'Opts'}]}},
          {debug_line,2425,703},
          {tuple,
              {2425,5},
              [{atom,{2425,6},ok},
               {var,{2425,9},'Code'},
               {var,{2425,14},'St'}]}]}]}.
{function,
 {2427,1},
 core_to_ssa,2,
 [{clause,
   {2427,1},
   [{var,{2427,1},'_'},{var,{2427,1},'_'}],
   [[{call,
      {2427,1},
      {remote,{2427,1},{atom,{2427,1},fake},{atom,{2427,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2427,704},{atom,{2427,1},ignore}]},
  {clause,
   {2427,1},
   [{var,{2427,13},'Code0'},
    {match,
     {2427,20},
     {tuple,
      {2427,20},
      [{atom,{2427,20},compile},
       {var,{2427,20},'_'},
       {var,{2427,20},'_'},
       {var,{2427,20},'_'},
       {var,{2427,20},'_'},
       {var,{2427,20},'_'},
       {var,{2427,20},'_'},
       {var,{2427,20},'_'},
       {var,{2427,37},'Opts'},
       {var,{2427,20},'_'},
       {var,{2427,20},'_'},
       {var,{2427,20},'_'},
       {var,{2427,51},'Ws0'},
       {var,{2427,20},'_'}]},
     {var,{2427,56},'St'}}],
   [],
   [{debug_line,2428,705},
    {match,
     {2428,5},
     {tuple,
      {2428,5},
      [{atom,{2428,6},ok},{var,{2428,9},'Code'},{var,{2428,14},'Ws'}]},
     {call,
      {2428,20},
      {remote,
       {2428,36},
       {atom,{2428,20},beam_core_to_ssa},
       {atom,{2428,37},module}},
      [{var,{2428,44},'Code0'},{var,{2428,51},'Opts'}]}},
    {debug_line,2429,706},
    {'case',
     {2429,5},
     {'case',
      {2429,13},
      {op,{2429,13},'=:=',{var,{2429,10},'Ws'},{nil,{2429,17}}},
      [{clause,{2429,13},[{atom,{2429,13},true}],[],[{atom,{2429,13},true}]},
       {clause,
        {2429,13},
        [{atom,{2429,13},false}],
        [],
        [{call,
          {2429,27},
          {atom,{2429,27},test_core_inliner},
          [{var,{2429,45},'St'}]}]},
       {clause,
        [{generated,true},{location,{2429,13}}],
        [{var,{2429,13},cov1}],
        [],
        [{call,
          {2429,13},
          {remote,{2429,13},{atom,{2429,13},erlang},{atom,{2429,13},error}},
          [{block,0,
            [{tuple,
              {2429,13},
              [{atom,{2429,13},badarg},{var,{2429,13},cov1}]}]}]}]}]},
     [{clause,
       {2430,2},
       [{atom,{2430,2},false}],
       [],
       [{debug_line,2431,707},
        {tuple,
         {2431,6},
         [{atom,{2431,7},ok},
          {var,{2431,10},'Code'},
          {block,
           {2431,15},
           [{match,
             {2431,26},
             {var,{2431,26},rec145},
             {op,{2431,38},'++',{var,{2431,35},'Ws0'},{var,{2431,40},'Ws'}}},
            {match,{2431,15},{var,{2431,15},rec146},{var,{2431,15},'St'}},
            {'case',
             {2431,26},
             {var,{2431,15},rec146},
             [{clause,
               {2431,26},
               [{tuple,
                 {2431,26},
                 [{atom,{2431,26},compile},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'},
                  {var,{2431,26},'_'}]}],
               [],
               [{call,
                 {2431,26},
                 {remote,
                  {2431,26},
                  {atom,{2431,26},erlang},
                  {atom,{2431,26},setelement}},
                 [{integer,{2431,26},13},
                  {var,{2431,15},rec146},
                  {var,{2431,26},rec145}]}]},
              {clause,
               [{generated,true},{location,{2431,26}}],
               [{var,[{generated,true},{location,{2431,26}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2431,26}}],
                 {remote,
                  [{generated,true},{location,{2431,26}}],
                  {atom,[{generated,true},{location,{2431,26}}],erlang},
                  {atom,[{generated,true},{location,{2431,26}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2431,26}}],
                   [{atom,[{generated,true},{location,{2431,26}}],badrecord},
                    {var,{2431,15},rec146}]}]}]}]}]}]}]},
      {clause,
       {2432,2},
       [{atom,{2432,2},true}],
       [],
       [{debug_line,2435,708},
        {tuple,
         {2435,6},
         [{atom,{2435,7},ok},
          {var,{2435,10},'Code'},
          {var,{2435,15},'St'}]}]}]}]}]}.
{function,
    {2438,1},
    test_old_inliner,1,
    [{clause,
         {2438,1},
         [{var,{2438,1},'_'}],
         [[{call,
               {2438,1},
               {remote,
                   {2438,1},
                   {atom,{2438,1},fake},
                   {atom,{2438,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2438,709},{atom,{2438,1},ignore}]},
     {clause,
         {2438,1},
         [{tuple,
              {2438,18},
              [{atom,{2438,18},compile},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,35},'Opts'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'},
               {var,{2438,18},'_'}]}],
         [],
         [{debug_line,2441,710},
          {call,
              {2441,5},
              {remote,{2441,5},{atom,{2441,5},lists},{atom,{2441,5},any}},
              [{block,0,
                   [{'fun',
                        {2441,9},
                        {clauses,
                            [{clause,
                                 {2441,12},
                                 [{tuple,
                                      {2441,13},
                                      [{atom,{2441,14},inline},
                                       {var,{2441,21},'_'}]}],
                                 [],
                                 [{atom,{2441,28},true}]},
                             {clause,
                                 {2442,5},
                                 [{var,{2442,6},'_'}],
                                 [],
                                 [{debug_line,2442,711},
                                  {atom,{2442,12},false}]}]}}]},
               {var,{2443,7},'Opts'}]}]}]}.
{function,
 {2445,1},
 test_core_inliner,1,
 [{clause,
   {2445,1},
   [{var,{2445,1},'_'}],
   [[{call,
      {2445,1},
      {remote,{2445,1},{atom,{2445,1},fake},{atom,{2445,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2445,712},{atom,{2445,1},ignore}]},
  {clause,
   {2445,1},
   [{tuple,
     {2445,19},
     [{atom,{2445,19},compile},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,36},'Opts'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'},
      {var,{2445,19},'_'}]}],
   [],
   [{debug_line,2446,713},
    {'case',
     {2446,5},
     {call,
      {2446,10},
      {remote,{2446,10},{atom,{2446,10},lists},{atom,{2446,10},any}},
      [{block,0,
        [{'fun',
          {2446,14},
          {clauses,
           [{clause,
             {2446,17},
             [{atom,{2446,18},no_inline}],
             [],
             [{atom,{2446,32},true}]},
            {clause,
             {2447,3},
             [{var,{2447,4},'_'}],
             [],
             [{debug_line,2447,714},{atom,{2447,10},false}]}]}}]},
       {var,{2448,12},'Opts'}]},
     [{clause,
       {2449,2},
       [{atom,{2449,2},true}],
       [],
       [{debug_line,2449,715},{atom,{2449,10},false}]},
      {clause,
       {2450,2},
       [{atom,{2450,2},false}],
       [],
       [{debug_line,2451,716},
        {call,
         {2451,6},
         {remote,{2451,6},{atom,{2451,6},lists},{atom,{2451,6},any}},
         [{block,0,
           [{'fun',
             {2451,10},
             {clauses,
              [{clause,
                {2451,13},
                [{atom,{2451,14},inline}],
                [],
                [{atom,{2451,25},true}]},
               {clause,
                {2452,6},
                [{var,{2452,7},'_'}],
                [],
                [{debug_line,2452,717},{atom,{2452,13},false}]}]}}]},
          {var,{2453,8},'Opts'}]}]}]}]}]}.
{function,
    {2456,1},
    test_any_inliner,1,
    [{clause,
         {2456,1},
         [{var,{2456,1},'_'}],
         [[{call,
               {2456,1},
               {remote,
                   {2456,1},
                   {atom,{2456,1},fake},
                   {atom,{2456,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2456,718},{atom,{2456,1},ignore}]},
     {clause,
         {2456,1},
         [{var,{2456,18},'St'}],
         [],
         [{debug_line,2457,719},
          {'case',
              {2457,5},
              {call,
                  {2457,5},
                  {atom,{2457,5},test_old_inliner},
                  [{var,{2457,22},'St'}]},
              [{clause,
                   {2457,5},
                   [{atom,{2457,5},true}],
                   [],
                   [{atom,{2457,5},true}]},
               {clause,
                   {2457,5},
                   [{atom,{2457,5},false}],
                   [],
                   [{call,
                        {2457,33},
                        {atom,{2457,33},test_core_inliner},
                        [{var,{2457,51},'St'}]}]},
               {clause,
                   [{generated,true},{location,{2457,5}}],
                   [{var,{2457,5},cov1}],
                   [],
                   [{call,
                        {2457,5},
                        {remote,
                            {2457,5},
                            {atom,{2457,5},erlang},
                            {atom,{2457,5},error}},
                        [{block,0,
                             [{tuple,
                                  {2457,5},
                                  [{atom,{2457,5},badarg},
                                   {var,{2457,5},cov1}]}]}]}]}]}]}]}.
{function,
    {2459,1},
    core_old_inliner,2,
    [{clause,
         {2459,1},
         [{var,{2459,1},'_'},{var,{2459,1},'_'}],
         [[{call,
               {2459,1},
               {remote,
                   {2459,1},
                   {atom,{2459,1},fake},
                   {atom,{2459,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2459,720},{atom,{2459,1},ignore}]},
     {clause,
         {2459,1},
         [{var,{2459,18},'Code0'},
          {match,
              {2459,25},
              {tuple,
                  {2459,25},
                  [{atom,{2459,25},compile},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,42},'Opts'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'},
                   {var,{2459,25},'_'}]},
              {var,{2459,48},'St'}}],
         [],
         [{debug_line,2460,721},
          {match,
              {2460,5},
              {tuple,{2460,5},[{atom,{2460,6},ok},{var,{2460,9},'Code'}]},
              {call,
                  {2460,17},
                  {remote,
                      {2460,32},
                      {atom,{2460,17},sys_core_inline},
                      {atom,{2460,33},module}},
                  [{var,{2460,40},'Code0'},{var,{2460,47},'Opts'}]}},
          {debug_line,2461,722},
          {tuple,
              {2461,5},
              [{atom,{2461,6},ok},
               {var,{2461,9},'Code'},
               {var,{2461,14},'St'}]}]}]}.
{function,
    {2463,1},
    core_inline_module,2,
    [{clause,
         {2463,1},
         [{var,{2463,1},'_'},{var,{2463,1},'_'}],
         [[{call,
               {2463,1},
               {remote,
                   {2463,1},
                   {atom,{2463,1},fake},
                   {atom,{2463,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2463,723},{atom,{2463,1},ignore}]},
     {clause,
         {2463,1},
         [{var,{2463,20},'Code0'},
          {match,
              {2463,27},
              {tuple,
                  {2463,27},
                  [{atom,{2463,27},compile},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,44},'Opts'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'},
                   {var,{2463,27},'_'}]},
              {var,{2463,50},'St'}}],
         [],
         [{debug_line,2464,724},
          {match,
              {2464,5},
              {var,{2464,5},'Code'},
              {call,
                  {2464,12},
                  {remote,
                      {2464,23},
                      {atom,{2464,12},cerl_inline},
                      {atom,{2464,24},core_transform}},
                  [{var,{2464,39},'Code0'},{var,{2464,46},'Opts'}]}},
          {debug_line,2465,725},
          {tuple,
              {2465,5},
              [{atom,{2465,6},ok},
               {var,{2465,9},'Code'},
               {var,{2465,14},'St'}]}]}]}.
{function,
 {2467,1},
 save_abstract_code,2,
 [{clause,
   {2467,1},
   [{var,{2467,1},'_'},{var,{2467,1},'_'}],
   [[{call,
      {2467,1},
      {remote,{2467,1},{atom,{2467,1},fake},{atom,{2467,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2467,726},{atom,{2467,1},ignore}]},
  {clause,
   {2467,1},
   [{var,{2467,20},'Code'},{var,{2467,26},'St'}],
   [],
   [{debug_line,2468,727},
    {tuple,
     {2468,5},
     [{atom,{2468,6},ok},
      {var,{2468,9},'Code'},
      {block,
       {2468,14},
       [{match,
         {2468,25},
         {var,{2468,25},rec147},
         {call,
          {2468,39},
          {remote,
           {2468,48},
           {atom,{2468,39},erl_parse},
           {atom,{2468,49},anno_to_term}},
          [{var,{2468,62},'Code'}]}},
        {match,{2468,14},{var,{2468,14},rec148},{var,{2468,14},'St'}},
        {'case',
         {2468,25},
         {var,{2468,14},rec148},
         [{clause,
           {2468,25},
           [{tuple,
             {2468,25},
             [{atom,{2468,25},compile},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'},
              {var,{2468,25},'_'}]}],
           [],
           [{call,
             {2468,25},
             {remote,
              {2468,25},
              {atom,{2468,25},erlang},
              {atom,{2468,25},setelement}},
             [{integer,{2468,25},8},
              {var,{2468,14},rec148},
              {var,{2468,25},rec147}]}]},
          {clause,
           [{generated,true},{location,{2468,25}}],
           [{var,[{generated,true},{location,{2468,25}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2468,25}}],
             {remote,
              [{generated,true},{location,{2468,25}}],
              {atom,[{generated,true},{location,{2468,25}}],erlang},
              {atom,[{generated,true},{location,{2468,25}}],error}},
             [{tuple,
               [{generated,true},{location,{2468,25}}],
               [{atom,[{generated,true},{location,{2468,25}}],badrecord},
                {var,{2468,14},rec148}]}]}]}]}]}]}]}]}.
{function,
 {2474,1},
 beam_docs,2,
 [{clause,
   {2474,1},
   [{var,{2474,1},'_'},{var,{2474,1},'_'}],
   [[{call,
      {2474,1},
      {remote,{2474,1},{atom,{2474,1},fake},{atom,{2474,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2474,728},{atom,{2474,1},ignore}]},
  {clause,
   {2474,1},
   [{var,{2474,11},'Code'},
    {match,
     {2474,17},
     {tuple,
      {2474,17},
      [{atom,{2474,17},compile},
       {var,{2474,17},'_'},
       {var,{2474,32},'Dir'},
       {var,{2474,17},'_'},
       {var,{2474,17},'_'},
       {var,{2474,17},'_'},
       {var,{2474,17},'_'},
       {var,{2474,17},'_'},
       {var,{2474,47},'Options'},
       {var,{2474,17},'_'},
       {var,{2474,17},'_'},
       {var,{2474,17},'_'},
       {var,{2474,17},'_'},
       {var,{2475,41},'ExtraChunks'}]},
     {var,{2475,55},'St'}}],
   [],
   [{debug_line,2476,729},
    {match,
     {2476,5},
     {var,{2476,5},'SourceName'},
     {call,
      {2476,18},
      {atom,{2476,18},deterministic_filename},
      [{var,{2476,41},'St'}]}},
    {debug_line,2477,730},
    {'case',
     {2477,5},
     {call,
      {2477,10},
      {remote,{2477,18},{atom,{2477,10},beam_doc},{atom,{2477,19},main}},
      [{var,{2477,24},'Dir'},
       {var,{2477,29},'SourceName'},
       {var,{2477,41},'Code'},
       {var,{2477,47},'Options'}]},
     [{clause,
       {2478,9},
       [{tuple,
         {2478,9},
         [{atom,{2478,10},ok},{var,{2478,14},'Docs'},{var,{2478,20},'Ws'}]}],
       [],
       [{debug_line,2479,731},
        {match,
         {2479,13},
         {var,{2479,13},'Binary'},
         {call,
          {2479,22},
          {remote,
           {2479,22},
           {atom,{2479,22},erlang},
           {atom,{2479,22},term_to_binary}},
          [{var,{2479,37},'Docs'},
           {block,0,
            [{cons,
              {2479,43},
              {atom,{2479,44},deterministic},
              {cons,
               {2479,59},
               {atom,{2479,59},compressed},
               {nil,{2479,69}}}}]}]}},
        {debug_line,2480,732},
        {match,
         {2480,13},
         {var,{2480,13},'MetaDocs'},
         {cons,
          {2480,24},
          {tuple,
           {2480,25},
           [{bin,
             {2480,27},
             [{bin_element,
               {2480,27},
               {string,{2480,27},"Docs"},
               default,default}]},
            {var,{2480,43},'Binary'}]},
          {var,{2480,53},'ExtraChunks'}}},
        {debug_line,2481,733},
        {tuple,
         {2481,13},
         [{atom,{2481,14},ok},
          {var,{2481,18},'Code'},
          {block,
           {2481,24},
           [{match,
             {2482,35},
             {var,{2482,35},rec149},
             {op,
              {2482,66},
              '++',
              {'case',
               {2482,46},
               {var,{2482,46},'St'},
               [{clause,
                 [{generated,true},{location,{2482,46}}],
                 [{tuple,
                   [{generated,true},{location,{2482,46}}],
                   [{atom,{2482,46},compile},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},'_'},
                    {var,{2482,46},rec151},
                    {var,{2482,46},'_'}]}],
                 [],
                 [{var,{2482,46},rec151}]},
                {clause,
                 [{generated,true},{location,{2482,46}}],
                 [{var,{2482,46},rec151}],
                 [],
                 [{call,
                   [{generated,true},{location,{2482,46}}],
                   {remote,
                    [{generated,true},{location,{2482,46}}],
                    {atom,[{generated,true},{location,{2482,46}}],erlang},
                    {atom,[{generated,true},{location,{2482,46}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2482,46}}],
                     [{atom,[{generated,true},{location,{2482,46}}],badrecord},
                      {var,{2482,46},rec151}]}]}]}]},
              {var,{2482,69},'Ws'}}},
            {match,{2481,24},{var,{2481,24},rec150},{var,{2481,24},'St'}},
            {'case',
             {2482,35},
             {var,{2481,24},rec150},
             [{clause,
               {2482,35},
               [{tuple,
                 {2482,35},
                 [{atom,{2482,35},compile},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'},
                  {var,{2482,35},'_'}]}],
               [],
               [{call,
                 {2482,35},
                 {remote,
                  {2482,35},
                  {atom,{2482,35},erlang},
                  {atom,{2482,35},setelement}},
                 [{integer,{2482,35},13},
                  {call,
                   {2481,35},
                   {remote,
                    {2481,35},
                    {atom,{2481,35},erlang},
                    {atom,{2481,35},setelement}},
                   [{integer,{2481,35},14},
                    {var,{2481,24},rec150},
                    {var,{2481,50},'MetaDocs'}]},
                  {var,{2482,35},rec149}]}]},
              {clause,
               [{generated,true},{location,{2482,35}}],
               [{var,[{generated,true},{location,{2482,35}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2482,35}}],
                 {remote,
                  [{generated,true},{location,{2482,35}}],
                  {atom,[{generated,true},{location,{2482,35}}],erlang},
                  {atom,[{generated,true},{location,{2482,35}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2482,35}}],
                   [{atom,[{generated,true},{location,{2482,35}}],badrecord},
                    {var,{2481,24},rec150}]}]}]}]}]}]}]},
      {clause,
       {2483,9},
       [{tuple,{2483,9},[{atom,{2483,10},error},{atom,{2483,17},no_docs}]}],
       [],
       [{debug_line,2484,734},
        {tuple,
         {2484,13},
         [{atom,{2484,14},ok},
          {var,{2484,18},'Code'},
          {var,{2484,24},'St'}]}]}]}]}]}.
{function,
    {2488,1},
    remove_doc_attributes,2,
    [{clause,
         {2488,1},
         [{var,{2488,1},'_'},{var,{2488,1},'_'}],
         [[{call,
               {2488,1},
               {remote,
                   {2488,1},
                   {atom,{2488,1},fake},
                   {atom,{2488,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2488,735},{atom,{2488,1},ignore}]},
     {clause,
         {2488,1},
         [{var,{2488,23},'Code'},{var,{2488,29},'St'}],
         [],
         [{debug_line,2489,736},
          {tuple,
              {2489,5},
              [{atom,{2489,6},ok},
               {lc,{2489,10},
                   {block,0,[{var,{2489,11},'Attr'}]},
                   [{block,0,[{atom,{2489,27},true}]},
                    {generate,
                        {2489,24},
                        {var,{2489,19},'Attr'},
                        {var,{2489,27},'Code'}},
                    {block,0,[{atom,{2489,33},true}]},
                    {op,{2489,33},
                        'not',
                        {call,
                            {2489,37},
                            {atom,{2489,37},is_doc_attribute},
                            [{var,{2489,54},'Attr'}]}}]},
               {var,{2489,62},'St'}]}]}]}.
{function,
    {2492,1},
    is_doc_attribute,1,
    [{clause,
         {2492,1},
         [{var,{2492,1},'_'}],
         [[{call,
               {2492,1},
               {remote,
                   {2492,1},
                   {atom,{2492,1},fake},
                   {atom,{2492,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2492,737},{atom,{2492,1},ignore}]},
     {clause,
         {2492,1},
         [{var,{2492,18},'Attr'}],
         [],
         [{debug_line,2493,738},
          {'case',
              {2493,5},
              {var,{2493,10},'Attr'},
              [{clause,
                   {2494,9},
                   [{tuple,
                        {2494,9},
                        [{atom,{2494,10},attribute},
                         {var,{2494,21},'_Anno'},
                         {var,{2494,28},'DocAttr'},
                         {var,{2494,37},'_Meta'}]}],
                   [[{op,{2495,24},
                         '=:=',
                         {var,{2495,16},'DocAttr'},
                         {atom,{2495,28},doc}}],
                    [{op,{2495,41},
                         '=:=',
                         {var,{2495,33},'DocAttr'},
                         {atom,{2495,45},moduledoc}}],
                    [{op,{2495,64},
                         '=:=',
                         {var,{2495,56},'DocAttr'},
                         {atom,{2495,68},docformat}}]],
                   [{debug_line,2496,739},{atom,{2496,13},true}]},
               {clause,
                   {2497,9},
                   [{var,{2497,9},'_'}],
                   [],
                   [{debug_line,2497,740},{atom,{2497,14},false}]}]}]}]}.
{function,
 {2500,1},
 debug_info,1,
 [{clause,
   {2500,1},
   [{var,{2500,1},'_'}],
   [[{call,
      {2500,1},
      {remote,{2500,1},{atom,{2500,1},fake},{atom,{2500,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2500,741},{atom,{2500,1},ignore}]},
  {clause,
   {2500,1},
   [{match,
     {2500,12},
     {tuple,
      {2500,12},
      [{atom,{2500,12},compile},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'},
       {var,{2500,41},'OFile'},
       {var,{2500,28},'Module'},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'},
       {var,{2500,12},'_'}]},
     {var,{2500,48},'St'}}],
   [],
   [{debug_line,2501,742},
    {match,
     {2501,5},
     {tuple,{2501,5},[{var,{2501,6},'DebugInfo'},{var,{2501,16},'Opts2'}]},
     {call,
      {2501,25},
      {atom,{2501,25},debug_info_chunk},
      [{var,{2501,42},'St'}]}},
    {debug_line,2502,743},
    {'case',
     {2502,5},
     {call,
      {2502,10},
      {remote,{2502,10},{atom,{2502,10},lists},{atom,{2502,10},member}},
      [{atom,{2502,17},encrypt_debug_info},{var,{2502,37},'Opts2'}]},
     [{clause,
       {2503,2},
       [{atom,{2503,2},true}],
       [],
       [{debug_line,2504,744},
        {'case',
         {2504,6},
         {call,
          {2504,11},
          {remote,{2504,16},{atom,{2504,11},lists},{atom,{2504,17},keytake}},
          [{atom,{2504,25},debug_info_key},
           {integer,{2504,41},1},
           {var,{2504,44},'Opts2'}]},
         [{clause,
           {2505,3},
           [{tuple,
             {2505,3},
             [{atom,{2505,4},value},
              {tuple,{2505,10},[{var,{2505,11},'_'},{var,{2505,14},'Key'}]},
              {var,{2505,19},'Opts3'}]}],
           [],
           [{debug_line,2506,745},
            {call,
             {2506,7},
             {atom,{2506,7},encrypt_debug_info},
             [{var,{2506,26},'DebugInfo'},
              {var,{2506,37},'Key'},
              {block,0,
               [{cons,
                 {2506,42},
                 {tuple,
                  {2506,43},
                  [{atom,{2506,44},debug_info_key},
                   {atom,{2506,59},'********'}]},
                 {var,{2506,73},'Opts3'}}]}]}]},
          {clause,
           {2507,3},
           [{atom,{2507,3},false}],
           [],
           [{debug_line,2508,746},
            {match,
             {2508,7},
             {var,{2508,7},'Mode'},
             {call,
              {2508,14},
              {remote,
               {2508,23},
               {atom,{2508,14},proplists},
               {atom,{2508,24},get_value}},
              [{atom,{2508,34},crypto_mode},
               {var,{2508,47},'Opts2'},
               {atom,{2508,54},des3_cbc}]}},
            {debug_line,2509,747},
            {'case',
             {2509,7},
             {call,
              {2509,12},
              {remote,
               {2509,20},
               {atom,{2509,12},beam_lib},
               {atom,{2509,21},get_crypto_key}},
              [{block,0,
                [{tuple,
                  {2509,36},
                  [{atom,{2509,37},debug_info},
                   {var,{2509,49},'Mode'},
                   {var,{2509,55},'Module'},
                   {var,{2509,63},'OFile'}]}]}]},
             [{clause,
               {2510,4},
               [{atom,{2510,4},error}],
               [],
               [{debug_line,2511,748},
                {tuple,
                 {2511,8},
                 [{atom,{2511,9},error},
                  {cons,
                   {2511,16},
                   {tuple,
                    {2511,17},
                    [{atom,{2511,18},none},
                     {atom,{2511,24},compile},
                     {atom,{2511,31},no_crypto_key}]},
                   {nil,{2511,45}}}]}]},
              {clause,
               {2512,4},
               [{var,{2512,4},'Key'}],
               [],
               [{debug_line,2513,749},
                {call,
                 {2513,8},
                 {atom,{2513,8},encrypt_debug_info},
                 [{var,{2513,27},'DebugInfo'},
                  {block,0,
                   [{tuple,
                     {2513,38},
                     [{var,{2513,39},'Mode'},{var,{2513,45},'Key'}]}]},
                  {var,{2513,51},'Opts2'}]}]}]}]}]}]},
      {clause,
       {2516,2},
       [{atom,{2516,2},false}],
       [],
       [{debug_line,2517,750},
        {tuple,
         {2517,6},
         [{atom,{2517,7},ok},
          {var,{2517,10},'DebugInfo'},
          {var,{2517,20},'Opts2'}]}]}]}]}]}.
{function,
    {2520,1},
    beam_debug_info,2,
    [{clause,
         {2520,1},
         [{var,{2520,1},'_'},{var,{2520,1},'_'}],
         [[{call,
               {2520,1},
               {remote,
                   {2520,1},
                   {atom,{2520,1},fake},
                   {atom,{2520,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2520,751},{atom,{2520,1},ignore}]},
     {clause,
         {2520,1},
         [{var,{2520,17},'Code0'},
          {match,
              {2520,24},
              {tuple,
                  {2520,24},
                  [{atom,{2520,24},compile},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'},
                   {var,{2520,24},'_'}]},
              {var,{2520,35},'St'}}],
         [],
         [{debug_line,2521,752},
          {match,
              {2521,5},
              {tuple,{2521,5},[{atom,{2521,6},ok},{var,{2521,9},'Code'}]},
              {call,
                  {2521,17},
                  {remote,
                      {2521,29},
                      {atom,{2521,17},sys_coverage},
                      {atom,{2521,30},beam_debug_info}},
                  [{var,{2521,46},'Code0'}]}},
          {debug_line,2522,753},
          {tuple,
              {2522,5},
              [{atom,{2522,6},ok},
               {var,{2522,9},'Code'},
               {var,{2522,14},'St'}]}]}]}.
{function,
    {2524,1},
    debug_info_chunk,1,
    [{clause,
         {2524,1},
         [{var,{2524,1},'_'}],
         [[{call,
               {2524,1},
               {remote,
                   {2524,1},
                   {atom,{2524,1},fake},
                   {atom,{2524,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2524,754},{atom,{2524,1},ignore}]},
     {clause,
         {2524,1},
         [{tuple,
              {2524,18},
              [{atom,{2524,18},compile},
               {var,{2524,18},'_'},
               {var,{2524,18},'_'},
               {var,{2524,18},'_'},
               {var,{2524,18},'_'},
               {var,{2524,18},'_'},
               {var,{2524,18},'_'},
               {var,{2526,41},'Abst'},
               {var,{2525,35},'CompOpts'},
               {var,{2524,39},'ModOpts0'},
               {var,{2524,18},'_'},
               {var,{2524,18},'_'},
               {var,{2524,18},'_'},
               {var,{2524,18},'_'}]}],
         [],
         [{debug_line,2527,755},
          {match,
              {2527,5},
              {var,{2527,5},'AbstOpts'},
              {call,
                  {2527,16},
                  {atom,{2527,16},cleanup_compile_options},
                  [{var,{2527,40},'ModOpts0'}]}},
          {debug_line,2528,756},
          {match,
              {2528,5},
              {tuple,
                  {2528,5},
                  [{var,{2528,6},'Backend'},
                   {var,{2528,14},'Metadata'},
                   {var,{2528,23},'ModOpts'}]},
              {'case',
                  {2529,9},
                  {call,
                      {2529,14},
                      {remote,
                          {2529,23},
                          {atom,{2529,14},proplists},
                          {atom,{2529,24},get_value}},
                      [{atom,{2529,34},debug_info},
                       {var,{2529,46},'CompOpts'},
                       {atom,{2529,56},false}]},
                  [{clause,
                       {2530,13},
                       [{tuple,
                            {2530,13},
                            [{var,{2530,14},'OptBackend'},
                             {var,{2530,25},'OptMetadata'}]}],
                       [[{call,
                             {2530,43},
                             {remote,
                                 {2530,43},
                                 {atom,{2530,43},erlang},
                                 {atom,{2530,43},is_atom}},
                             [{var,{2530,51},'OptBackend'}]}]],
                       [{debug_line,2531,757},
                        {match,
                            {2531,17},
                            {var,{2531,17},'ModOpts1'},
                            {call,
                                {2531,28},
                                {remote,
                                    {2531,37},
                                    {atom,{2531,28},proplists},
                                    {atom,{2531,38},delete}},
                                [{atom,{2531,45},debug_info},
                                 {var,{2531,57},'ModOpts0'}]}},
                        {debug_line,2532,758},
                        {tuple,
                            {2532,17},
                            [{var,{2532,18},'OptBackend'},
                             {var,{2532,29},'OptMetadata'},
                             {var,{2532,41},'ModOpts1'}]}]},
                   {clause,
                       {2533,13},
                       [{atom,{2533,13},true}],
                       [],
                       [{debug_line,2534,759},
                        {match,
                            {2534,17},
                            {var,{2534,17},'ModOpts1'},
                            {call,
                                {2534,28},
                                {remote,
                                    {2534,37},
                                    {atom,{2534,28},proplists},
                                    {atom,{2534,38},delete}},
                                [{atom,{2534,45},debug_info},
                                 {var,{2534,57},'ModOpts0'}]}},
                        {debug_line,2535,760},
                        {tuple,
                            {2535,17},
                            [{atom,{2535,18},erl_abstract_code},
                             {tuple,
                                 {2535,36},
                                 [{var,{2535,37},'Abst'},
                                  {var,{2535,42},'AbstOpts'}]},
                             {cons,
                                 {2535,52},
                                 {atom,{2535,53},debug_info},
                                 {var,{2535,66},'ModOpts1'}}]}]},
                   {clause,
                       {2536,13},
                       [{atom,{2536,13},false}],
                       [],
                       [{debug_line,2537,761},
                        {tuple,
                            {2537,17},
                            [{atom,{2537,18},erl_abstract_code},
                             {tuple,
                                 {2537,36},
                                 [{atom,{2537,37},none},
                                  {var,{2537,42},'AbstOpts'}]},
                             {var,{2537,52},'ModOpts0'}]}]}]}},
          {debug_line,2539,762},
          {match,
              {2539,5},
              {var,{2539,5},'DebugInfo'},
              {call,
                  {2539,17},
                  {remote,
                      {2539,17},
                      {atom,{2539,17},erlang},
                      {atom,{2539,17},term_to_binary}},
                  [{block,0,
                       [{tuple,
                            {2539,32},
                            [{atom,{2539,33},debug_info_v1},
                             {var,{2539,47},'Backend'},
                             {var,{2539,55},'Metadata'}]}]},
                   {block,0,
                       [{debug_line,2540,763},
                        {call,
                            {2540,32},
                            {atom,{2540,32},ensure_deterministic},
                            [{var,{2540,53},'CompOpts'},
                             {block,0,
                                 [{cons,
                                      {2540,63},
                                      {atom,{2540,64},compressed},
                                      {nil,{2540,74}}}]}]}]}]}},
          {debug_line,2541,764},
          {tuple,
              {2541,5},
              [{var,{2541,6},'DebugInfo'},{var,{2541,17},'ModOpts'}]}]}]}.
{function,
    {2543,1},
    encrypt_debug_info,3,
    [{clause,
         {2543,1},
         [{var,{2543,1},'_'},{var,{2543,1},'_'},{var,{2543,1},'_'}],
         [[{call,
               {2543,1},
               {remote,
                   {2543,1},
                   {atom,{2543,1},fake},
                   {atom,{2543,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2543,765},{atom,{2543,1},ignore}]},
     {clause,
         {2543,1},
         [{var,{2543,20},'DebugInfo'},
          {var,{2543,31},'Key'},
          {var,{2543,36},'Opts'}],
         [],
         [{debug_line,2544,766},
          {'try',
              {2544,5},
              [{debug_line,2545,767},
               {match,
                   {2545,2},
                   {var,{2545,2},'RealKey'},
                   {call,
                       {2545,12},
                       {atom,{2545,12},generate_key},
                       [{var,{2545,25},'Key'}]}},
               {debug_line,2546,768},
               {'case',
                   {2546,2},
                   {call,{2546,7},{atom,{2546,7},start_crypto},[]},
                   [{clause,
                        {2547,6},
                        [{atom,{2547,6},ok}],
                        [],
                        [{debug_line,2547,769},
                         {tuple,
                             {2547,12},
                             [{atom,{2547,13},ok},
                              {call,
                                  {2547,16},
                                  {atom,{2547,16},encrypt},
                                  [{var,{2547,24},'RealKey'},
                                   {var,{2547,33},'DebugInfo'}]},
                              {var,{2547,44},'Opts'}]}]},
                    {clause,
                        {2548,6},
                        [{match,
                             {2548,6},
                             {tuple,
                                 {2548,6},
                                 [{atom,{2548,7},error},{var,{2548,13},'_'}]},
                             {var,{2548,16},'E'}}],
                        [],
                        [{debug_line,2548,770},{var,{2548,21},'E'}]}]}],
              [],
              [{clause,
                   {2551,2},
                   [{tuple,
                        {2551,2},
                        [{atom,{2551,2},error},
                         {var,{2551,8},'_'},
                         {var,{2551,8},'_'}]}],
                   [],
                   [{debug_line,2552,771},
                    {tuple,
                        {2552,6},
                        [{atom,{2552,7},error},
                         {cons,
                             {2552,13},
                             {tuple,
                                 {2552,14},
                                 [{atom,{2552,15},none},
                                  {atom,{2552,21},compile},
                                  {atom,{2552,28},bad_crypto_key}]},
                             {nil,{2552,43}}}]}]}],
              []}]}]}.
{function,
 {2555,1},
 cleanup_compile_options,1,
 [{clause,
   {2555,1},
   [{var,{2555,1},'_'}],
   [[{call,
      {2555,1},
      {remote,{2555,1},{atom,{2555,1},fake},{atom,{2555,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2555,772},{atom,{2555,1},ignore}]},
  {clause,
   {2555,1},
   [{var,{2555,25},'Opts'}],
   [],
   [{debug_line,2556,773},
    {match,
     {2556,5},
     {var,{2556,5},'IsDeterministic'},
     {call,
      {2556,23},
      {remote,{2556,28},{atom,{2556,23},lists},{atom,{2556,29},member}},
      [{atom,{2556,36},deterministic},{var,{2556,51},'Opts'}]}},
    {debug_line,2557,774},
    {call,
     {2557,5},
     {remote,{2557,10},{atom,{2557,5},lists},{atom,{2557,11},filter}},
     [{block,0,
       [{'fun',
         {2557,18},
         {clauses,
          [{clause,
            {2557,21},
            [{var,{2557,22},'Opt'}],
            [],
            [{debug_line,2558,775},
             {call,
              {2558,26},
              {atom,{2558,26},keep_compile_option},
              [{var,{2558,46},'Opt'},
               {var,{2558,51},'IsDeterministic'}]}]}]}}]},
      {var,{2559,23},'Opts'}]}]}]}.
{function,{2563,1},
          keep_compile_option,2,
          [{clause,{2563,1},
                   [{var,{2563,1},'_'},{var,{2563,1},'_'}],
                   [[{call,{2563,1},
                           {remote,{2563,1},
                                   {atom,{2563,1},fake},
                                   {atom,{2563,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2563,776},{atom,{2563,1},ignore}]},
           {clause,{2563,1},
                   [{tuple,{2563,21},[{atom,{2563,22},i},{var,{2563,25},'_'}]},
                    {var,{2563,29},'Deterministic'}],
                   [],
                   [{debug_line,2564,777},
                    {op,{2564,5},'not',{var,{2564,9},'Deterministic'}}]},
           {clause,{2565,1},
                   [{tuple,{2565,21},
                           [{atom,{2565,22},cwd},{var,{2565,27},'_'}]},
                    {var,{2565,31},'Deterministic'}],
                   [],
                   [{debug_line,2566,778},
                    {op,{2566,5},'not',{var,{2566,9},'Deterministic'}}]},
           {clause,{2568,1},
                   [{atom,{2568,21},from_asm},
                    {var,{2568,31},'_Deterministic'}],
                   [],
                   [{debug_line,2569,779},{atom,{2569,5},false}]},
           {clause,{2570,1},
                   [{atom,{2570,21},from_core},
                    {var,{2570,32},'_Deterministic'}],
                   [],
                   [{debug_line,2571,780},{atom,{2571,5},false}]},
           {clause,{2572,1},
                   [{atom,{2572,21},from_abstr},
                    {var,{2572,33},'_Deterministic'}],
                   [],
                   [{debug_line,2573,781},{atom,{2573,5},false}]},
           {clause,{2575,1},
                   [{tuple,{2575,21},
                           [{atom,{2575,22},parse_transform},
                            {var,{2575,39},'_'}]},
                    {var,{2575,43},'_Deterministic'}],
                   [],
                   [{debug_line,2576,782},{atom,{2576,5},false}]},
           {clause,{2577,1},
                   [{tuple,{2577,21},
                           [{atom,{2577,22},d},
                            {var,{2577,25},'_'},
                            {var,{2577,28},'_'}]},
                    {var,{2577,32},'_Deterministic'}],
                   [],
                   [{debug_line,2578,783},{atom,{2578,5},false}]},
           {clause,{2580,1},
                   [{var,{2580,21},'Option'},{var,{2580,29},'_Deterministic'}],
                   [],
                   [{debug_line,2581,784},
                    {call,{2581,5},
                          {atom,{2581,5},effects_code_generation},
                          [{var,{2581,29},'Option'}]}]}]}.
{function,
    {2583,1},
    start_crypto,0,
    [{clause,
         {2583,1},
         [],
         [[{call,
               {2583,1},
               {remote,
                   {2583,1},
                   {atom,{2583,1},fake},
                   {atom,{2583,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2583,785},{atom,{2583,1},ignore}]},
     {clause,
         {2583,1},
         [],[],
         [{debug_line,2584,786},
          {'try',
              {2584,5},
              [{call,
                   {2584,9},
                   {remote,
                       {2584,20},
                       {atom,{2584,9},application},
                       {atom,{2584,21},start}},
                   [{atom,{2584,27},crypto}]}],
              [{clause,
                   {2585,2},
                   [{tuple,
                        {2585,2},
                        [{atom,{2585,3},error},
                         {tuple,
                             {2585,9},
                             [{atom,{2585,10},already_started},
                              {atom,{2585,26},crypto}]}]}],
                   [],
                   [{debug_line,2585,787},{atom,{2585,38},ok}]},
               {clause,
                   {2586,2},
                   [{atom,{2586,2},ok}],
                   [],
                   [{debug_line,2586,788},{atom,{2586,8},ok}]}],
              [{clause,
                   {2588,2},
                   [{tuple,
                        {2588,2},
                        [{atom,{2588,2},error},
                         {var,{2588,8},'_'},
                         {var,{2588,8},'_'}]}],
                   [],
                   [{debug_line,2589,789},
                    {tuple,
                        {2589,6},
                        [{atom,{2589,7},error},
                         {cons,
                             {2589,13},
                             {tuple,
                                 {2589,14},
                                 [{atom,{2589,15},none},
                                  {atom,{2589,21},compile},
                                  {atom,{2589,28},no_crypto}]},
                             {nil,{2589,38}}}]}]}],
              []}]}]}.
{function,
    {2592,1},
    generate_key,1,
    [{clause,
         {2592,1},
         [{var,{2592,1},'_'}],
         [[{call,
               {2592,1},
               {remote,
                   {2592,1},
                   {atom,{2592,1},fake},
                   {atom,{2592,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2592,790},{atom,{2592,1},ignore}]},
     {clause,
         {2592,1},
         [{tuple,{2592,14},[{var,{2592,15},'Type'},{var,{2592,20},'String'}]}],
         [[{call,
               {2592,34},
               {remote,
                   {2592,34},
                   {atom,{2592,34},erlang},
                   {atom,{2592,34},is_atom}},
               [{var,{2592,42},'Type'}]},
           {call,
               {2592,49},
               {remote,
                   {2592,49},
                   {atom,{2592,49},erlang},
                   {atom,{2592,49},is_list}},
               [{var,{2592,57},'String'}]}]],
         [{debug_line,2593,791},
          {call,
              {2593,5},
              {remote,
                  {2593,13},
                  {atom,{2593,5},beam_lib},
                  {atom,{2593,14},make_crypto_key}},
              [{var,{2593,30},'Type'},{var,{2593,36},'String'}]}]},
     {clause,
         {2594,1},
         [{var,{2594,14},'String'}],
         [[{call,
               {2594,27},
               {remote,
                   {2594,27},
                   {atom,{2594,27},erlang},
                   {atom,{2594,27},is_list}},
               [{var,{2594,35},'String'}]}]],
         [{debug_line,2595,792},
          {call,
              {2595,5},
              {atom,{2595,5},generate_key},
              [{block,0,
                   [{tuple,
                        {2595,18},
                        [{atom,{2595,19},des3_cbc},
                         {var,{2595,28},'String'}]}]}]}]}]}.
{function,
 {2597,1},
 encrypt,2,
 [{clause,
   {2597,1},
   [{var,{2597,1},'_'},{var,{2597,1},'_'}],
   [[{call,
      {2597,1},
      {remote,{2597,1},{atom,{2597,1},fake},{atom,{2597,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2597,793},{atom,{2597,1},ignore}]},
  {clause,
   {2597,1},
   [{tuple,
     {2597,9},
     [{match,{2597,10},{atom,{2597,10},des3_cbc},{var,{2597,19},'Type'}},
      {var,{2597,24},'Key'},
      {var,{2597,28},'IVec'},
      {var,{2597,33},'BlockSize'}]},
    {var,{2597,45},'Bin0'}],
   [],
   [{debug_line,2598,794},
    {match,
     {2598,5},
     {var,{2598,5},'Bin1'},
     {'case',
      {2598,12},
      {op,
       {2598,33},
       'rem',
       {call,
        {2598,17},
        {remote,{2598,17},{atom,{2598,17},erlang},{atom,{2598,17},byte_size}},
        [{var,{2598,27},'Bin0'}]},
       {var,{2598,37},'BlockSize'}},
      [{clause,
        {2599,9},
        [{integer,{2599,9},0}],
        [],
        [{debug_line,2599,795},{var,{2599,14},'Bin0'}]},
       {clause,
        {2600,9},
        [{var,{2600,9},'N'}],
        [],
        [{debug_line,2600,796},
         {call,
          {2600,14},
          {remote,
           {2600,14},
           {atom,{2600,14},erlang},
           {atom,{2600,14},list_to_binary}},
          [{block,0,
            [{cons,
              {2600,29},
              {var,{2600,30},'Bin0'},
              {cons,
               {2600,35},
               {call,
                {2600,35},
                {remote,
                 {2600,41},
                 {atom,{2600,35},crypto},
                 {atom,{2600,42},strong_rand_bytes}},
                [{block,0,
                  [{op,
                    {2600,69},
                    '-',
                    {var,{2600,60},'BlockSize'},
                    {var,{2600,70},'N'}}]}]},
               {nil,{2600,72}}}}]}]}]}]}},
    {debug_line,2602,797},
    {match,
     {2602,5},
     {var,{2602,5},'Bin'},
     {call,
      {2602,11},
      {remote,
       {2602,17},
       {atom,{2602,11},crypto},
       {atom,{2602,18},crypto_one_time}},
      [{atom,{2602,34},des_ede3_cbc},
       {var,{2602,48},'Key'},
       {var,{2602,53},'IVec'},
       {var,{2602,59},'Bin1'},
       {atom,{2602,65},true}]}},
    {debug_line,2603,798},
    {match,
     {2603,5},
     {var,{2603,5},'TypeString'},
     {call,
      {2603,18},
      {remote,{2603,18},{atom,{2603,18},erlang},{atom,{2603,18},atom_to_list}},
      [{var,{2603,31},'Type'}]}},
    {debug_line,2604,799},
    {call,
     {2604,5},
     {remote,{2604,5},{atom,{2604,5},erlang},{atom,{2604,5},list_to_binary}},
     [{block,0,
       [{cons,
         {2604,20},
         {integer,{2604,21},0},
         {cons,
          {2604,23},
          {call,
           {2604,23},
           {remote,{2604,23},{atom,{2604,23},erlang},{atom,{2604,23},length}},
           [{var,{2604,30},'TypeString'}]},
          {cons,
           {2604,42},
           {var,{2604,42},'TypeString'},
           {cons,{2604,53},{var,{2604,53},'Bin'},{nil,{2604,56}}}}}}]}]}]}]}.
{function,{2606,1},
          beam_validator_strong,2,
          [{clause,{2606,1},
                   [{var,{2606,1},'_'},{var,{2606,1},'_'}],
                   [[{call,{2606,1},
                           {remote,{2606,1},
                                   {atom,{2606,1},fake},
                                   {atom,{2606,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2606,800},{atom,{2606,1},ignore}]},
           {clause,{2606,1},
                   [{var,{2606,23},'Code'},{var,{2606,29},'St'}],
                   [],
                   [{debug_line,2607,801},
                    {call,{2607,5},
                          {atom,{2607,5},beam_validator_1},
                          [{var,{2607,22},'Code'},
                           {var,{2607,28},'St'},
                           {atom,{2607,32},strong}]}]}]}.
{function,{2609,1},
          beam_validator_weak,2,
          [{clause,{2609,1},
                   [{var,{2609,1},'_'},{var,{2609,1},'_'}],
                   [[{call,{2609,1},
                           {remote,{2609,1},
                                   {atom,{2609,1},fake},
                                   {atom,{2609,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2609,802},{atom,{2609,1},ignore}]},
           {clause,{2609,1},
                   [{var,{2609,21},'Code'},{var,{2609,27},'St'}],
                   [],
                   [{debug_line,2610,803},
                    {call,{2610,5},
                          {atom,{2610,5},beam_validator_1},
                          [{var,{2610,22},'Code'},
                           {var,{2610,28},'St'},
                           {atom,{2610,32},weak}]}]}]}.
{function,
 {2612,1},
 beam_validator_1,3,
 [{clause,
   {2612,1},
   [{var,{2612,1},'_'},{var,{2612,1},'_'},{var,{2612,1},'_'}],
   [[{call,
      {2612,1},
      {remote,{2612,1},{atom,{2612,1},fake},{atom,{2612,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2612,804},{atom,{2612,1},ignore}]},
  {clause,
   {2612,1},
   [{var,{2612,18},'Code'},
    {match,
     {2612,24},
     {tuple,
      {2612,24},
      [{atom,{2612,24},compile},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'},
       {var,{2612,40},'Errors0'},
       {var,{2612,24},'_'},
       {var,{2612,24},'_'}]},
     {var,{2612,49},'St'}},
    {var,{2612,53},'Level'}],
   [],
   [{debug_line,2613,805},
    {'case',
     {2613,5},
     {call,
      {2613,10},
      {remote,
       {2613,24},
       {atom,{2613,10},beam_validator},
       {atom,{2613,25},validate}},
      [{var,{2613,34},'Code'},{var,{2613,40},'Level'}]},
     [{clause,
       {2614,9},
       [{atom,{2614,9},ok}],
       [],
       [{debug_line,2615,806},
        {tuple,
         {2615,13},
         [{atom,{2615,14},ok},{var,{2615,18},'Code'},{var,{2615,24},'St'}]}]},
      {clause,
       {2616,9},
       [{tuple,{2616,9},[{atom,{2616,10},error},{var,{2616,17},'Es'}]}],
       [],
       [{debug_line,2617,807},
        {tuple,
         {2617,13},
         [{atom,{2617,14},error},
          {block,
           {2617,21},
           [{match,
             {2617,32},
             {var,{2617,32},rec152},
             {op,
              {2617,47},
              '++',
              {var,{2617,39},'Errors0'},
              {var,{2617,50},'Es'}}},
            {match,{2617,21},{var,{2617,21},rec153},{var,{2617,21},'St'}},
            {'case',
             {2617,32},
             {var,{2617,21},rec153},
             [{clause,
               {2617,32},
               [{tuple,
                 {2617,32},
                 [{atom,{2617,32},compile},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'},
                  {var,{2617,32},'_'}]}],
               [],
               [{call,
                 {2617,32},
                 {remote,
                  {2617,32},
                  {atom,{2617,32},erlang},
                  {atom,{2617,32},setelement}},
                 [{integer,{2617,32},12},
                  {var,{2617,21},rec153},
                  {var,{2617,32},rec152}]}]},
              {clause,
               [{generated,true},{location,{2617,32}}],
               [{var,[{generated,true},{location,{2617,32}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2617,32}}],
                 {remote,
                  [{generated,true},{location,{2617,32}}],
                  {atom,[{generated,true},{location,{2617,32}}],erlang},
                  {atom,[{generated,true},{location,{2617,32}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2617,32}}],
                   [{atom,[{generated,true},{location,{2617,32}}],badrecord},
                    {var,{2617,21},rec153}]}]}]}]}]}]}]}]}]}]}.
{function,
 {2620,1},
 beam_asm,2,
 [{clause,
   {2620,1},
   [{var,{2620,1},'_'},{var,{2620,1},'_'}],
   [[{call,
      {2620,1},
      {remote,{2620,1},{atom,{2620,1},fake},{atom,{2620,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2620,808},{atom,{2620,1},ignore}]},
  {clause,
   {2620,1},
   [{var,{2620,10},'Code0'},
    {match,
     {2620,17},
     {tuple,
      {2620,17},
      [{atom,{2620,17},compile},
       {var,{2620,17},'_'},
       {var,{2620,17},'_'},
       {var,{2620,17},'_'},
       {var,{2620,32},'File'},
       {var,{2620,17},'_'},
       {var,{2620,17},'_'},
       {var,{2620,17},'_'},
       {var,{2620,70},'CompilerOpts'},
       {var,{2620,17},'_'},
       {var,{2620,17},'_'},
       {var,{2620,17},'_'},
       {var,{2620,17},'_'},
       {var,{2620,50},'ExtraChunks'}]},
     {var,{2620,84},'St'}}],
   [],
   [{debug_line,2621,809},
    {'case',
     {2621,5},
     {call,{2621,10},{atom,{2621,10},debug_info},[{var,{2621,21},'St'}]},
     [{clause,
       {2622,2},
       [{tuple,
         {2622,2},
         [{atom,{2622,3},ok},
          {var,{2622,6},'DebugInfo'},
          {var,{2622,16},'Opts0'}]}],
       [],
       [{debug_line,2623,810},
        {match,
         {2623,6},
         {var,{2623,6},'Opts1'},
         {lc,
          {2623,14},
          {block,0,[{var,{2623,15},'O'}]},
          [{block,0,[{atom,{2623,25},true}]},
           {generate,{2623,22},{var,{2623,20},'O'},{var,{2623,25},'Opts0'}},
           {block,0,[{atom,{2623,32},true}]},
           {call,
            {2623,32},
            {atom,{2623,32},effects_code_generation},
            [{var,{2623,56},'O'}]}]}},
        {debug_line,2624,811},
        {match,
         {2624,6},
         {var,{2624,6},'Chunks'},
         {cons,
          {2624,15},
          {tuple,
           {2624,16},
           [{bin,
             {2624,17},
             [{bin_element,
               {2624,19},
               {string,{2624,19},"Dbgi"},
               default,default}]},
            {var,{2624,29},'DebugInfo'}]},
          {var,{2624,42},'ExtraChunks'}}},
        {debug_line,2625,812},
        {match,
         {2625,6},
         {var,{2625,6},'CompileInfo'},
         {call,
          {2625,20},
          {atom,{2625,20},compile_info},
          [{var,{2625,33},'File'},
           {var,{2625,39},'CompilerOpts'},
           {var,{2625,53},'Opts1'}]}},
        {debug_line,2626,813},
        {match,
         {2626,6},
         {tuple,{2626,6},[{atom,{2626,7},ok},{var,{2626,10},'Code'}]},
         {call,
          {2626,18},
          {remote,{2626,26},{atom,{2626,18},beam_asm},{atom,{2626,27},module}},
          [{var,{2626,34},'Code0'},
           {var,{2626,41},'Chunks'},
           {var,{2626,49},'CompileInfo'},
           {var,{2626,62},'CompilerOpts'}]}},
        {debug_line,2627,814},
        {tuple,
         {2627,6},
         [{atom,{2627,7},ok},
          {var,{2627,10},'Code'},
          {block,
           {2627,15},
           [{match,{2627,15},{var,{2627,15},rec154},{var,{2627,15},'St'}},
            {'case',
             {2627,26},
             {var,{2627,15},rec154},
             [{clause,
               {2627,26},
               [{tuple,
                 {2627,26},
                 [{atom,{2627,26},compile},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'},
                  {var,{2627,26},'_'}]}],
               [],
               [{call,
                 {2627,26},
                 {remote,
                  {2627,26},
                  {atom,{2627,26},erlang},
                  {atom,{2627,26},setelement}},
                 [{integer,{2627,26},8},
                  {var,{2627,15},rec154},
                  {nil,{2627,40}}]}]},
              {clause,
               [{generated,true},{location,{2627,26}}],
               [{var,[{generated,true},{location,{2627,26}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2627,26}}],
                 {remote,
                  [{generated,true},{location,{2627,26}}],
                  {atom,[{generated,true},{location,{2627,26}}],erlang},
                  {atom,[{generated,true},{location,{2627,26}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2627,26}}],
                   [{atom,[{generated,true},{location,{2627,26}}],badrecord},
                    {var,{2627,15},rec154}]}]}]}]}]}]}]},
      {clause,
       {2628,2},
       [{tuple,{2628,2},[{atom,{2628,3},error},{var,{2628,9},'Es'}]}],
       [],
       [{debug_line,2629,815},
        {tuple,
         {2629,6},
         [{atom,{2629,7},error},
          {block,
           {2629,13},
           [{match,
             {2629,24},
             {var,{2629,24},rec155},
             {op,
              {2629,49},
              '++',
              {'case',
               {2629,31},
               {var,{2629,31},'St'},
               [{clause,
                 [{generated,true},{location,{2629,31}}],
                 [{tuple,
                   [{generated,true},{location,{2629,31}}],
                   [{atom,{2629,31},compile},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'},
                    {var,{2629,31},rec157},
                    {var,{2629,31},'_'},
                    {var,{2629,31},'_'}]}],
                 [],
                 [{var,{2629,31},rec157}]},
                {clause,
                 [{generated,true},{location,{2629,31}}],
                 [{var,{2629,31},rec157}],
                 [],
                 [{call,
                   [{generated,true},{location,{2629,31}}],
                   {remote,
                    [{generated,true},{location,{2629,31}}],
                    {atom,[{generated,true},{location,{2629,31}}],erlang},
                    {atom,[{generated,true},{location,{2629,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2629,31}}],
                     [{atom,[{generated,true},{location,{2629,31}}],badrecord},
                      {var,{2629,31},rec157}]}]}]}]},
              {cons,
               {2629,52},
               {tuple,{2629,53},[{var,{2629,54},'File'},{var,{2629,59},'Es'}]},
               {nil,{2629,62}}}}},
            {match,{2629,13},{var,{2629,13},rec156},{var,{2629,13},'St'}},
            {'case',
             {2629,24},
             {var,{2629,13},rec156},
             [{clause,
               {2629,24},
               [{tuple,
                 {2629,24},
                 [{atom,{2629,24},compile},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'},
                  {var,{2629,24},'_'}]}],
               [],
               [{call,
                 {2629,24},
                 {remote,
                  {2629,24},
                  {atom,{2629,24},erlang},
                  {atom,{2629,24},setelement}},
                 [{integer,{2629,24},12},
                  {var,{2629,13},rec156},
                  {var,{2629,24},rec155}]}]},
              {clause,
               [{generated,true},{location,{2629,24}}],
               [{var,[{generated,true},{location,{2629,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2629,24}}],
                 {remote,
                  [{generated,true},{location,{2629,24}}],
                  {atom,[{generated,true},{location,{2629,24}}],erlang},
                  {atom,[{generated,true},{location,{2629,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2629,24}}],
                   [{atom,[{generated,true},{location,{2629,24}}],badrecord},
                    {var,{2629,13},rec156}]}]}]}]}]}]}]}]}]}]}.
{function,
    {2632,1},
    beam_strip_types,2,
    [{clause,
         {2632,1},
         [{var,{2632,1},'_'},{var,{2632,1},'_'}],
         [[{call,
               {2632,1},
               {remote,
                   {2632,1},
                   {atom,{2632,1},fake},
                   {atom,{2632,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2632,816},{atom,{2632,1},ignore}]},
     {clause,
         {2632,1},
         [{var,{2632,18},'Beam0'},
          {match,
              {2632,25},
              {tuple,
                  {2632,25},
                  [{atom,{2632,25},compile},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'},
                   {var,{2632,25},'_'}]},
              {var,{2632,36},'St'}}],
         [],
         [{debug_line,2633,817},
          {match,
              {2633,5},
              {tuple,
                  {2633,5},
                  [{atom,{2633,6},ok},
                   {var,{2633,9},'_Module'},
                   {var,{2633,17},'Chunks0'}]},
              {call,
                  {2633,28},
                  {remote,
                      {2633,36},
                      {atom,{2633,28},beam_lib},
                      {atom,{2633,37},all_chunks}},
                  [{var,{2633,48},'Beam0'}]}},
          {debug_line,2634,818},
          {match,
              {2634,5},
              {var,{2634,5},'Chunks'},
              {lc,{2634,14},
                  {block,0,
                      [{tuple,
                           {2634,15},
                           [{var,{2634,16},'Tag'},
                            {var,{2634,20},'Contents'}]}]},
                  [{block,0,[{atom,{2634,52},true}]},
                   {generate_strict,
                       {2634,48},
                       {tuple,
                           {2634,33},
                           [{var,{2634,34},'Tag'},{var,{2634,38},'Contents'}]},
                       {var,{2634,52},'Chunks0'}},
                   {block,0,[{debug_line,2635,819},{atom,{2635,37},true}]},
                   {op,{2635,37},
                       '=/=',
                       {var,{2635,33},'Tag'},
                       {string,{2635,41},"Type"}}]}},
          {debug_line,2636,820},
          {match,
              {2636,5},
              {tuple,{2636,5},[{atom,{2636,6},ok},{var,{2636,9},'Beam'}]},
              {call,
                  {2636,17},
                  {remote,
                      {2636,25},
                      {atom,{2636,17},beam_lib},
                      {atom,{2636,26},build_module}},
                  [{var,{2636,39},'Chunks'}]}},
          {debug_line,2637,821},
          {tuple,
              {2637,5},
              [{atom,{2637,6},ok},
               {var,{2637,9},'Beam'},
               {var,{2637,14},'St'}]}]}]}.
{function,
 {2639,1},
 compile_info,3,
 [{clause,
   {2639,1},
   [{var,{2639,1},'_'},{var,{2639,1},'_'},{var,{2639,1},'_'}],
   [[{call,
      {2639,1},
      {remote,{2639,1},{atom,{2639,1},fake},{atom,{2639,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2639,822},{atom,{2639,1},ignore}]},
  {clause,
   {2639,1},
   [{var,{2639,14},'File'},
    {var,{2639,20},'CompilerOpts'},
    {var,{2639,34},'Opts'}],
   [],
   [{debug_line,2640,823},
    {match,
     {2640,5},
     {var,{2640,5},'IsSlim'},
     {call,
      {2640,14},
      {remote,{2640,14},{atom,{2640,14},lists},{atom,{2640,14},member}},
      [{atom,{2640,21},slim},{var,{2640,27},'CompilerOpts'}]}},
    {debug_line,2641,824},
    {match,
     {2641,5},
     {var,{2641,5},'IsDeterministic'},
     {call,
      {2641,23},
      {remote,{2641,23},{atom,{2641,23},lists},{atom,{2641,23},member}},
      [{atom,{2641,30},deterministic},{var,{2641,45},'CompilerOpts'}]}},
    {debug_line,2642,825},
    {match,
     {2642,5},
     {var,{2642,5},'Info0'},
     {call,
      {2642,13},
      {remote,{2642,22},{atom,{2642,13},proplists},{atom,{2642,23},get_value}},
      [{atom,{2642,33},compile_info},{var,{2642,47},'Opts'},{nil,{2642,53}}]}},
    {debug_line,2643,826},
    {match,
     {2643,5},
     {var,{2643,5},'Info1'},
     {'case',
      {2644,2},
      {call,
       {2644,7},
       {atom,{2644,7},paranoid_absname},
       [{var,{2644,24},'File'}]},
      [{clause,
        {2645,6},
        [{match,
          {2645,6},
          {cons,{2645,6},{var,{2645,7},'_'},{var,{2645,9},'_'}},
          {var,{2645,14},'Source'}}],
        [[{op,{2645,26},'not',{var,{2645,30},'IsSlim'}},
          {op,{2645,38},'not',{var,{2645,42},'IsDeterministic'}}]],
        [{debug_line,2646,827},
         {cons,
          {2646,3},
          {tuple,{2646,4},[{atom,{2646,5},source},{var,{2646,12},'Source'}]},
          {var,{2646,22},'Info0'}}]},
       {clause,
        {2647,6},
        [{var,{2647,6},'_'}],
        [],
        [{debug_line,2648,828},{var,{2648,3},'Info0'}]}]}},
    {debug_line,2650,829},
    {match,
     {2650,5},
     {var,{2650,5},'Info2'},
     {'case',
      {2651,2},
      {var,{2651,7},'IsDeterministic'},
      [{clause,
        {2652,6},
        [{atom,{2652,6},false}],
        [],
        [{debug_line,2652,830},
         {cons,
          {2652,15},
          {tuple,
           {2652,16},
           [{atom,{2652,17},options},
            {call,
             {2652,25},
             {remote,
              {2652,34},
              {atom,{2652,25},proplists},
              {atom,{2652,35},delete}},
             [{atom,{2652,42},compile_info},{var,{2652,56},'Opts'}]}]},
          {var,{2652,65},'Info1'}}]},
       {clause,
        {2653,6},
        [{atom,{2653,6},true}],
        [],
        [{debug_line,2653,831},{var,{2653,14},'Info1'}]}]}},
    {debug_line,2655,832},
    {var,{2655,5},'Info2'}]}]}.
{function,
    {2657,1},
    paranoid_absname,1,
    [{clause,
         {2657,1},
         [{var,{2657,1},'_'}],
         [[{call,
               {2657,1},
               {remote,
                   {2657,1},
                   {atom,{2657,1},fake},
                   {atom,{2657,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2657,833},{atom,{2657,1},ignore}]},
     {clause,
         {2657,1},
         [{match,{2657,18},{string,{2657,18},[]},{var,{2657,21},'File'}}],
         [],
         [{debug_line,2658,834},{var,{2658,5},'File'}]},
     {clause,
         {2659,1},
         [{var,{2659,18},'File'}],
         [],
         [{debug_line,2660,835},
          {'case',
              {2660,5},
              {call,
                  {2660,10},
                  {remote,
                      {2660,14},
                      {atom,{2660,10},file},
                      {atom,{2660,15},get_cwd}},
                  []},
              [{clause,
                   {2661,2},
                   [{tuple,
                        {2661,2},
                        [{atom,{2661,3},ok},{var,{2661,6},'Cwd'}]}],
                   [],
                   [{debug_line,2662,836},
                    {call,
                        {2662,6},
                        {remote,
                            {2662,14},
                            {atom,{2662,6},filename},
                            {atom,{2662,15},absname}},
                        [{var,{2662,23},'File'},{var,{2662,29},'Cwd'}]}]},
               {clause,
                   {2663,2},
                   [{var,{2663,2},'_'}],
                   [],
                   [{debug_line,2664,837},{var,{2664,6},'File'}]}]}]}]}.
{function,
    {2672,1},
    effects_code_generation,1,
    [{clause,
         {2672,1},
         [{var,{2672,1},'_'}],
         [[{call,
               {2672,1},
               {remote,
                   {2672,1},
                   {atom,{2672,1},fake},
                   {atom,{2672,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2672,838},{atom,{2672,1},ignore}]},
     {clause,
         {2672,1},
         [{var,{2672,25},'Option'}],
         [],
         [{debug_line,2673,839},
          {'case',
              {2673,5},
              {var,{2673,10},'Option'},
              [{clause,
                   {2674,2},
                   [{atom,{2674,2},beam}],
                   [],
                   [{debug_line,2674,840},{atom,{2674,10},false}]},
               {clause,
                   {2675,2},
                   [{atom,{2675,2},report_warnings}],
                   [],
                   [{debug_line,2675,841},{atom,{2675,21},false}]},
               {clause,
                   {2676,2},
                   [{atom,{2676,2},report_errors}],
                   [],
                   [{debug_line,2676,842},{atom,{2676,19},false}]},
               {clause,
                   {2677,2},
                   [{atom,{2677,2},return_errors}],
                   [],
                   [{debug_line,2677,843},{atom,{2677,18},false}]},
               {clause,
                   {2678,2},
                   [{atom,{2678,2},return_warnings}],
                   [],
                   [{debug_line,2678,844},{atom,{2678,20},false}]},
               {clause,
                   {2679,2},
                   [{atom,{2679,2},warnings_as_errors}],
                   [],
                   [{debug_line,2679,845},{atom,{2679,24},false}]},
               {clause,
                   {2680,2},
                   [{atom,{2680,2},binary}],
                   [],
                   [{debug_line,2680,846},{atom,{2680,12},false}]},
               {clause,
                   {2681,2},
                   [{atom,{2681,2},verbose}],
                   [],
                   [{debug_line,2681,847},{atom,{2681,13},false}]},
               {clause,
                   {2682,2},
                   [{tuple,{2682,2},[{atom,{2682,3},cwd},{var,{2682,7},'_'}]}],
                   [],
                   [{debug_line,2682,848},{atom,{2682,13},false}]},
               {clause,
                   {2683,2},
                   [{tuple,
                        {2683,2},
                        [{atom,{2683,3},outdir},{var,{2683,11},'_'}]}],
                   [],
                   [{debug_line,2683,849},{atom,{2683,17},false}]},
               {clause,
                   {2684,2},
                   [{var,{2684,2},'_'}],
                   [],
                   [{debug_line,2684,850},{atom,{2684,7},true}]}]}]}]}.
{function,
 {2687,1},
 save_binary,2,
 [{clause,
   {2687,1},
   [{var,{2687,1},'_'},{var,{2687,1},'_'}],
   [[{call,
      {2687,1},
      {remote,{2687,1},{atom,{2687,1},fake},{atom,{2687,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2687,851},{atom,{2687,1},ignore}]},
  {clause,
   {2687,1},
   [{var,{2687,13},'Code'},
    {match,
     {2687,19},
     {tuple,
      {2687,19},
      [{atom,{2687,19},compile},
       {var,{2687,19},'_'},
       {var,{2687,19},'_'},
       {var,{2687,19},'_'},
       {var,{2687,19},'_'},
       {var,{2687,45},'Outfile'},
       {var,{2687,35},'Mod'},
       {var,{2687,19},'_'},
       {var,{2687,61},'Opts'},
       {var,{2687,19},'_'},
       {var,{2687,19},'_'},
       {var,{2687,19},'_'},
       {var,{2687,19},'_'},
       {var,{2687,19},'_'}]},
     {var,{2687,67},'St'}}],
   [],
   [{debug_line,2689,852},
    {'case',
     {2689,5},
     {call,
      {2689,10},
      {remote,{2689,10},{atom,{2689,10},lists},{atom,{2689,10},member}},
      [{atom,{2689,17},no_error_module_mismatch},{var,{2689,43},'Opts'}]},
     [{clause,
       {2690,2},
       [{atom,{2690,2},true}],
       [],
       [{debug_line,2691,853},
        {call,
         {2691,6},
         {atom,{2691,6},save_binary_1},
         [{var,{2691,20},'Code'},{var,{2691,26},'St'}]}]},
      {clause,
       {2692,2},
       [{atom,{2692,2},false}],
       [],
       [{debug_line,2693,854},
        {match,
         {2693,6},
         {var,{2693,6},'Base'},
         {call,
          {2693,13},
          {remote,
           {2693,21},
           {atom,{2693,13},filename},
           {atom,{2693,22},rootname}},
          [{block,0,
            [{call,
              {2693,31},
              {remote,
               {2693,39},
               {atom,{2693,31},filename},
               {atom,{2693,40},basename}},
              [{var,{2693,49},'Outfile'}]}]}]}},
        {debug_line,2694,855},
        {'case',
         {2694,6},
         {call,
          {2694,11},
          {remote,
           {2694,11},
           {atom,{2694,11},erlang},
           {atom,{2694,11},atom_to_list}},
          [{var,{2694,24},'Mod'}]},
         [{clause,
           {2695,3},
           [{var,{2695,3},'Base'}],
           [],
           [{debug_line,2696,856},
            {call,
             {2696,7},
             {atom,{2696,7},save_binary_1},
             [{var,{2696,21},'Code'},{var,{2696,27},'St'}]}]},
          {clause,
           {2697,3},
           [{var,{2697,3},'_'}],
           [],
           [{debug_line,2698,857},
            {match,
             {2698,7},
             {var,{2698,7},'Es'},
             {cons,
              {2698,12},
              {tuple,
               {2698,13},
               [{'case',
                 {2698,14},
                 {var,{2698,14},'St'},
                 [{clause,
                   [{generated,true},{location,{2698,14}}],
                   [{tuple,
                     [{generated,true},{location,{2698,14}}],
                     [{atom,{2698,14},compile},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},rec158},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'},
                      {var,{2698,14},'_'}]}],
                   [],
                   [{var,{2698,14},rec158}]},
                  {clause,
                   [{generated,true},{location,{2698,14}}],
                   [{var,{2698,14},rec158}],
                   [],
                   [{call,
                     [{generated,true},{location,{2698,14}}],
                     {remote,
                      [{generated,true},{location,{2698,14}}],
                      {atom,[{generated,true},{location,{2698,14}}],erlang},
                      {atom,[{generated,true},{location,{2698,14}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2698,14}}],
                       [{atom,
                         [{generated,true},{location,{2698,14}}],
                         badrecord},
                        {var,{2698,14},rec158}]}]}]}]},
                {cons,
                 {2699,7},
                 {tuple,
                  {2699,8},
                  [{atom,{2699,9},none},
                   {atom,{2699,15},compile},
                   {tuple,
                    {2699,22},
                    [{atom,{2699,23},module_name},
                     {var,{2699,35},'Mod'},
                     {var,{2699,39},'Base'}]}]},
                 {nil,{2699,45}}}]},
              {nil,{2699,47}}}},
            {debug_line,2700,858},
            {tuple,
             {2700,7},
             [{atom,{2700,8},error},
              {block,
               {2700,14},
               [{match,
                 {2700,25},
                 {var,{2700,25},rec159},
                 {op,
                  {2700,50},
                  '++',
                  {'case',
                   {2700,32},
                   {var,{2700,32},'St'},
                   [{clause,
                     [{generated,true},{location,{2700,32}}],
                     [{tuple,
                       [{generated,true},{location,{2700,32}}],
                       [{atom,{2700,32},compile},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'},
                        {var,{2700,32},rec161},
                        {var,{2700,32},'_'},
                        {var,{2700,32},'_'}]}],
                     [],
                     [{var,{2700,32},rec161}]},
                    {clause,
                     [{generated,true},{location,{2700,32}}],
                     [{var,{2700,32},rec161}],
                     [],
                     [{call,
                       [{generated,true},{location,{2700,32}}],
                       {remote,
                        [{generated,true},{location,{2700,32}}],
                        {atom,[{generated,true},{location,{2700,32}}],erlang},
                        {atom,[{generated,true},{location,{2700,32}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2700,32}}],
                         [{atom,
                           [{generated,true},{location,{2700,32}}],
                           badrecord},
                          {var,{2700,32},rec161}]}]}]}]},
                  {var,{2700,53},'Es'}}},
                {match,{2700,14},{var,{2700,14},rec160},{var,{2700,14},'St'}},
                {'case',
                 {2700,25},
                 {var,{2700,14},rec160},
                 [{clause,
                   {2700,25},
                   [{tuple,
                     {2700,25},
                     [{atom,{2700,25},compile},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'},
                      {var,{2700,25},'_'}]}],
                   [],
                   [{call,
                     {2700,25},
                     {remote,
                      {2700,25},
                      {atom,{2700,25},erlang},
                      {atom,{2700,25},setelement}},
                     [{integer,{2700,25},12},
                      {var,{2700,14},rec160},
                      {var,{2700,25},rec159}]}]},
                  {clause,
                   [{generated,true},{location,{2700,25}}],
                   [{var,[{generated,true},{location,{2700,25}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{2700,25}}],
                     {remote,
                      [{generated,true},{location,{2700,25}}],
                      {atom,[{generated,true},{location,{2700,25}}],erlang},
                      {atom,[{generated,true},{location,{2700,25}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2700,25}}],
                       [{atom,
                         [{generated,true},{location,{2700,25}}],
                         badrecord},
                        {var,{2700,14},rec160}]}]}]}]}]}]}]}]}]}]}]}]}.
{function,
 {2704,1},
 save_binary_1,2,
 [{clause,
   {2704,1},
   [{var,{2704,1},'_'},{var,{2704,1},'_'}],
   [[{call,
      {2704,1},
      {remote,{2704,1},{atom,{2704,1},fake},{atom,{2704,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2704,859},{atom,{2704,1},ignore}]},
  {clause,
   {2704,1},
   [{var,{2704,15},'Code'},{var,{2704,21},'St'}],
   [],
   [{debug_line,2705,860},
    {match,
     {2705,5},
     {var,{2705,5},'Ofile'},
     {'case',
      {2705,13},
      {var,{2705,13},'St'},
      [{clause,
        [{generated,true},{location,{2705,13}}],
        [{tuple,
          [{generated,true},{location,{2705,13}}],
          [{atom,{2705,13},compile},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},rec162},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'},
           {var,{2705,13},'_'}]}],
        [],
        [{var,{2705,13},rec162}]},
       {clause,
        [{generated,true},{location,{2705,13}}],
        [{var,{2705,13},rec162}],
        [],
        [{call,
          [{generated,true},{location,{2705,13}}],
          {remote,
           [{generated,true},{location,{2705,13}}],
           {atom,[{generated,true},{location,{2705,13}}],erlang},
           {atom,[{generated,true},{location,{2705,13}}],error}},
          [{tuple,
            [{generated,true},{location,{2705,13}}],
            [{atom,[{generated,true},{location,{2705,13}}],badrecord},
             {var,{2705,13},rec162}]}]}]}]}},
    {debug_line,2706,861},
    {match,
     {2706,5},
     {var,{2706,5},'Tfile'},
     {call,{2706,13},{atom,{2706,13},tmpfile},[{var,{2706,21},'Ofile'}]}},
    {debug_line,2707,862},
    {'case',
     {2707,5},
     {call,
      {2707,10},
      {atom,{2707,10},write_binary},
      [{var,{2707,23},'Tfile'},{var,{2707,30},'Code'},{var,{2707,36},'St'}]},
     [{clause,
       {2708,2},
       [{atom,{2708,2},ok}],
       [],
       [{debug_line,2709,863},
        {'case',
         {2709,6},
         {call,
          {2709,11},
          {remote,{2709,15},{atom,{2709,11},file},{atom,{2709,16},rename}},
          [{var,{2709,23},'Tfile'},{var,{2709,30},'Ofile'}]},
         [{clause,
           {2710,3},
           [{atom,{2710,3},ok}],
           [],
           [{debug_line,2711,864},
            {tuple,
             {2711,7},
             [{atom,{2711,8},ok},
              {atom,{2711,11},none},
              {var,{2711,16},'St'}]}]},
          {clause,
           {2712,3},
           [{tuple,
             {2712,3},
             [{atom,{2712,4},error},{var,{2712,10},'RenameError'}]}],
           [],
           [{debug_line,2713,865},
            {match,
             {2713,21},
             {var,{2713,21},'Es'},
             {cons,
              {2713,26},
              {tuple,
               {2713,27},
               [{var,{2713,28},'Ofile'},
                {cons,
                 {2713,34},
                 {tuple,
                  {2713,35},
                  [{atom,{2713,36},none},
                   {atom,{2713,42},compile},
                   {tuple,
                    {2713,49},
                    [{atom,{2713,50},rename},
                     {var,{2713,57},'Tfile'},
                     {var,{2713,63},'Ofile'},
                     {var,{2714,50},'RenameError'}]}]},
                 {nil,{2714,63}}}]},
              {nil,{2714,65}}}},
            {debug_line,2715,866},
            {match,
             {2715,21},
             {var,{2715,21},'_'},
             {call,
              {2715,25},
              {remote,{2715,29},{atom,{2715,25},file},{atom,{2715,30},delete}},
              [{var,{2715,37},'Tfile'}]}},
            {debug_line,2716,867},
            {tuple,
             {2716,7},
             [{atom,{2716,8},error},
              {block,
               {2716,14},
               [{match,
                 {2716,25},
                 {var,{2716,25},rec163},
                 {op,
                  {2716,50},
                  '++',
                  {'case',
                   {2716,32},
                   {var,{2716,32},'St'},
                   [{clause,
                     [{generated,true},{location,{2716,32}}],
                     [{tuple,
                       [{generated,true},{location,{2716,32}}],
                       [{atom,{2716,32},compile},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'},
                        {var,{2716,32},rec165},
                        {var,{2716,32},'_'},
                        {var,{2716,32},'_'}]}],
                     [],
                     [{var,{2716,32},rec165}]},
                    {clause,
                     [{generated,true},{location,{2716,32}}],
                     [{var,{2716,32},rec165}],
                     [],
                     [{call,
                       [{generated,true},{location,{2716,32}}],
                       {remote,
                        [{generated,true},{location,{2716,32}}],
                        {atom,[{generated,true},{location,{2716,32}}],erlang},
                        {atom,[{generated,true},{location,{2716,32}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2716,32}}],
                         [{atom,
                           [{generated,true},{location,{2716,32}}],
                           badrecord},
                          {var,{2716,32},rec165}]}]}]}]},
                  {var,{2716,53},'Es'}}},
                {match,{2716,14},{var,{2716,14},rec164},{var,{2716,14},'St'}},
                {'case',
                 {2716,25},
                 {var,{2716,14},rec164},
                 [{clause,
                   {2716,25},
                   [{tuple,
                     {2716,25},
                     [{atom,{2716,25},compile},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'},
                      {var,{2716,25},'_'}]}],
                   [],
                   [{call,
                     {2716,25},
                     {remote,
                      {2716,25},
                      {atom,{2716,25},erlang},
                      {atom,{2716,25},setelement}},
                     [{integer,{2716,25},12},
                      {var,{2716,14},rec164},
                      {var,{2716,25},rec163}]}]},
                  {clause,
                   [{generated,true},{location,{2716,25}}],
                   [{var,[{generated,true},{location,{2716,25}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{2716,25}}],
                     {remote,
                      [{generated,true},{location,{2716,25}}],
                      {atom,[{generated,true},{location,{2716,25}}],erlang},
                      {atom,[{generated,true},{location,{2716,25}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2716,25}}],
                       [{atom,
                         [{generated,true},{location,{2716,25}}],
                         badrecord},
                        {var,{2716,14},rec164}]}]}]}]}]}]}]}]}]},
      {clause,
       {2718,2},
       [{tuple,{2718,2},[{atom,{2718,3},error},{var,{2718,9},'Error'}]}],
       [],
       [{debug_line,2719,868},
        {match,
         {2719,6},
         {var,{2719,6},'Es'},
         {cons,
          {2719,11},
          {tuple,
           {2719,12},
           [{var,{2719,13},'Tfile'},
            {cons,
             {2719,19},
             {tuple,
              {2719,20},
              [{atom,{2719,21},none},
               {atom,{2719,26},compile},
               {tuple,
                {2719,34},
                [{atom,{2719,35},write_error},{var,{2719,47},'Error'}]}]},
             {nil,{2719,54}}}]},
          {nil,{2719,56}}}},
        {debug_line,2720,869},
        {tuple,
         {2720,6},
         [{atom,{2720,7},error},
          {block,
           {2720,13},
           [{match,
             {2720,24},
             {var,{2720,24},rec166},
             {op,
              {2720,49},
              '++',
              {'case',
               {2720,31},
               {var,{2720,31},'St'},
               [{clause,
                 [{generated,true},{location,{2720,31}}],
                 [{tuple,
                   [{generated,true},{location,{2720,31}}],
                   [{atom,{2720,31},compile},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'},
                    {var,{2720,31},rec168},
                    {var,{2720,31},'_'},
                    {var,{2720,31},'_'}]}],
                 [],
                 [{var,{2720,31},rec168}]},
                {clause,
                 [{generated,true},{location,{2720,31}}],
                 [{var,{2720,31},rec168}],
                 [],
                 [{call,
                   [{generated,true},{location,{2720,31}}],
                   {remote,
                    [{generated,true},{location,{2720,31}}],
                    {atom,[{generated,true},{location,{2720,31}}],erlang},
                    {atom,[{generated,true},{location,{2720,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2720,31}}],
                     [{atom,[{generated,true},{location,{2720,31}}],badrecord},
                      {var,{2720,31},rec168}]}]}]}]},
              {var,{2720,52},'Es'}}},
            {match,{2720,13},{var,{2720,13},rec167},{var,{2720,13},'St'}},
            {'case',
             {2720,24},
             {var,{2720,13},rec167},
             [{clause,
               {2720,24},
               [{tuple,
                 {2720,24},
                 [{atom,{2720,24},compile},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'},
                  {var,{2720,24},'_'}]}],
               [],
               [{call,
                 {2720,24},
                 {remote,
                  {2720,24},
                  {atom,{2720,24},erlang},
                  {atom,{2720,24},setelement}},
                 [{integer,{2720,24},12},
                  {var,{2720,13},rec167},
                  {var,{2720,24},rec166}]}]},
              {clause,
               [{generated,true},{location,{2720,24}}],
               [{var,[{generated,true},{location,{2720,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2720,24}}],
                 {remote,
                  [{generated,true},{location,{2720,24}}],
                  {atom,[{generated,true},{location,{2720,24}}],erlang},
                  {atom,[{generated,true},{location,{2720,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2720,24}}],
                   [{atom,[{generated,true},{location,{2720,24}}],badrecord},
                    {var,{2720,13},rec167}]}]}]}]}]}]}]}]}]}]}.
{function,
 {2723,1},
 write_binary,3,
 [{clause,
   {2723,1},
   [{var,{2723,1},'_'},{var,{2723,1},'_'},{var,{2723,1},'_'}],
   [[{call,
      {2723,1},
      {remote,{2723,1},{atom,{2723,1},fake},{atom,{2723,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2723,870},{atom,{2723,1},ignore}]},
  {clause,
   {2723,1},
   [{var,{2723,14},'Name'},{var,{2723,20},'Bin'},{var,{2723,25},'St'}],
   [],
   [{debug_line,2724,871},
    {match,
     {2724,5},
     {var,{2724,5},'Opts'},
     {'case',
      {2724,12},
      {call,
       {2724,17},
       {remote,{2724,17},{atom,{2724,17},lists},{atom,{2724,17},member}},
       [{atom,{2724,24},compressed},
        {block,0,
         [{'case',
           {2724,36},
           {var,{2724,36},'St'},
           [{clause,
             [{generated,true},{location,{2724,36}}],
             [{tuple,
               [{generated,true},{location,{2724,36}}],
               [{atom,{2724,36},compile},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},rec169},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'},
                {var,{2724,36},'_'}]}],
             [],
             [{var,{2724,36},rec169}]},
            {clause,
             [{generated,true},{location,{2724,36}}],
             [{var,{2724,36},rec169}],
             [],
             [{call,
               [{generated,true},{location,{2724,36}}],
               {remote,
                [{generated,true},{location,{2724,36}}],
                {atom,[{generated,true},{location,{2724,36}}],erlang},
                {atom,[{generated,true},{location,{2724,36}}],error}},
               [{tuple,
                 [{generated,true},{location,{2724,36}}],
                 [{atom,[{generated,true},{location,{2724,36}}],badrecord},
                  {var,{2724,36},rec169}]}]}]}]}]}]},
      [{clause,
        {2725,9},
        [{atom,{2725,9},true}],
        [],
        [{debug_line,2725,872},
         {cons,{2725,17},{atom,{2725,18},compressed},{nil,{2725,28}}}]},
       {clause,
        {2726,9},
        [{atom,{2726,9},false}],
        [],
        [{debug_line,2726,873},{nil,{2726,18}}]}]}},
    {debug_line,2728,874},
    {'case',
     {2728,5},
     {call,
      {2728,10},
      {remote,{2728,14},{atom,{2728,10},file},{atom,{2728,15},write_file}},
      [{var,{2728,26},'Name'},{var,{2728,32},'Bin'},{var,{2728,37},'Opts'}]},
     [{clause,
       {2729,2},
       [{atom,{2729,2},ok}],
       [],
       [{debug_line,2729,875},{atom,{2729,8},ok}]},
      {clause,
       {2730,2},
       [{match,
         {2730,2},
         {tuple,{2730,2},[{atom,{2730,3},error},{var,{2730,9},'_'}]},
         {var,{2730,12},'Error'}}],
       [],
       [{debug_line,2730,876},{var,{2730,21},'Error'}]}]}]}]}.
{function,
 {2736,1},
 report_errors,1,
 [{clause,
   {2736,1},
   [{var,{2736,1},'_'}],
   [[{call,
      {2736,1},
      {remote,{2736,1},{atom,{2736,1},fake},{atom,{2736,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2736,877},{atom,{2736,1},ignore}]},
  {clause,
   {2736,1},
   [{tuple,
     {2736,15},
     [{atom,{2736,15},compile},
      {var,{2736,15},'_'},
      {var,{2736,15},'_'},
      {var,{2736,15},'_'},
      {var,{2736,15},'_'},
      {var,{2736,15},'_'},
      {var,{2736,15},'_'},
      {var,{2736,15},'_'},
      {var,{2736,32},'Opts'},
      {var,{2736,15},'_'},
      {var,{2736,15},'_'},
      {var,{2736,44},'Errors'},
      {var,{2736,15},'_'},
      {var,{2736,15},'_'}]}],
   [],
   [{debug_line,2737,878},
    {'case',
     {2737,5},
     {call,
      {2737,10},
      {remote,{2737,10},{atom,{2737,10},lists},{atom,{2737,10},member}},
      [{atom,{2737,17},report_errors},{var,{2737,32},'Opts'}]},
     [{clause,
       {2738,2},
       [{atom,{2738,2},true}],
       [],
       [{debug_line,2739,879},
        {call,
         {2739,6},
         {remote,{2739,6},{atom,{2739,6},lists},{atom,{2739,6},foreach}},
         [{block,0,
           [{'fun',
             {2739,14},
             {clauses,
              [{clause,
                {2739,18},
                [{tuple,
                  {2739,19},
                  [{tuple,
                    {2739,20},
                    [{var,{2739,21},'F'},{var,{2739,23},'_L'}]},
                   {var,{2739,27},'Eds'}]}],
                [],
                [{call,
                  {2739,36},
                  {remote,
                   {2739,48},
                   {atom,{2739,36},sys_messages},
                   {atom,{2739,49},list_errors}},
                  [{var,{2739,61},'F'},
                   {var,{2739,64},'Eds'},
                   {var,{2739,69},'Opts'}]}]},
               {clause,
                {2740,4},
                [{tuple,{2740,5},[{var,{2740,6},'F'},{var,{2740,8},'Eds'}]}],
                [],
                [{debug_line,2740,880},
                 {call,
                  {2740,17},
                  {remote,
                   {2740,29},
                   {atom,{2740,17},sys_messages},
                   {atom,{2740,30},list_errors}},
                  [{var,{2740,42},'F'},
                   {var,{2740,45},'Eds'},
                   {var,{2740,50},'Opts'}]}]}]}}]},
          {var,{2741,7},'Errors'}]}]},
      {clause,
       {2742,2},
       [{atom,{2742,2},false}],
       [],
       [{debug_line,2742,881},{atom,{2742,11},ok}]}]}]}]}.
{function,
 {2745,1},
 report_warnings,1,
 [{clause,
   {2745,1},
   [{var,{2745,1},'_'}],
   [[{call,
      {2745,1},
      {remote,{2745,1},{atom,{2745,1},fake},{atom,{2745,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2745,882},{atom,{2745,1},ignore}]},
  {clause,
   {2745,1},
   [{tuple,
     {2745,17},
     [{atom,{2745,17},compile},
      {var,{2745,17},'_'},
      {var,{2745,17},'_'},
      {var,{2745,17},'_'},
      {var,{2745,17},'_'},
      {var,{2745,17},'_'},
      {var,{2745,17},'_'},
      {var,{2745,17},'_'},
      {var,{2745,34},'Opts'},
      {var,{2745,17},'_'},
      {var,{2745,17},'_'},
      {var,{2745,17},'_'},
      {var,{2745,48},'Ws0'},
      {var,{2745,17},'_'}]}],
   [],
   [{debug_line,2746,883},
    {match,
     {2746,5},
     {var,{2746,5},'Werror'},
     {call,
      {2746,14},
      {remote,{2746,14},{atom,{2746,14},lists},{atom,{2746,14},member}},
      [{atom,{2746,21},warnings_as_errors},{var,{2746,41},'Opts'}]}},
    {debug_line,2747,884},
    {match,
     {2747,5},
     {var,{2747,5},'P'},
     {'case',
      {2747,9},
      {var,{2747,14},'Werror'},
      [{clause,
        {2748,6},
        [{atom,{2748,6},true}],
        [],
        [{debug_line,2748,885},{string,{2748,14},[]}]},
       {clause,
        {2749,6},
        [{atom,{2749,6},false}],
        [],
        [{debug_line,2749,886},{string,{2749,15},"Warning: "}]}]}},
    {debug_line,2751,887},
    {match,
     {2751,5},
     {var,{2751,5},'ReportWerror'},
     {'case',
      {2751,20},
      {var,{2751,20},'Werror'},
      [{clause,
        {2751,20},
        [{atom,{2751,20},true}],
        [],
        [{call,
          {2751,35},
          {remote,{2751,35},{atom,{2751,35},lists},{atom,{2751,35},member}},
          [{atom,{2751,42},report_errors},{var,{2751,57},'Opts'}]}]},
       {clause,{2751,20},[{atom,{2751,20},false}],[],[{atom,{2751,20},false}]},
       {clause,
        [{generated,true},{location,{2751,20}}],
        [{var,{2751,20},cov1}],
        [],
        [{call,
          {2751,20},
          {remote,{2751,20},{atom,{2751,20},erlang},{atom,{2751,20},error}},
          [{block,0,
            [{tuple,
              {2751,20},
              [{atom,{2751,20},badarg},{var,{2751,20},cov1}]}]}]}]}]}},
    {debug_line,2752,888},
    {'case',
     {2752,5},
     {'case',
      {2752,10},
      {call,
       {2752,10},
       {remote,{2752,10},{atom,{2752,10},lists},{atom,{2752,10},member}},
       [{atom,{2752,17},report_warnings},{var,{2752,34},'Opts'}]},
      [{clause,{2752,10},[{atom,{2752,10},true}],[],[{atom,{2752,10},true}]},
       {clause,
        {2752,10},
        [{atom,{2752,10},false}],
        [],
        [{var,{2752,47},'ReportWerror'}]},
       {clause,
        [{generated,true},{location,{2752,10}}],
        [{var,{2752,10},cov2}],
        [],
        [{call,
          {2752,10},
          {remote,{2752,10},{atom,{2752,10},erlang},{atom,{2752,10},error}},
          [{block,0,
            [{tuple,
              {2752,10},
              [{atom,{2752,10},badarg},{var,{2752,10},cov2}]}]}]}]}]},
     [{clause,
       {2753,2},
       [{atom,{2753,2},true}],
       [],
       [{debug_line,2754,889},
        {match,
         {2754,6},
         {var,{2754,6},'Ws1'},
         {call,
          {2754,12},
          {remote,{2754,12},{atom,{2754,12},lists},{atom,{2754,12},flatmap}},
          [{block,0,
            [{'fun',
              {2754,20},
              {clauses,
               [{clause,
                 {2754,23},
                 [{tuple,
                   {2754,24},
                   [{tuple,
                     {2754,25},
                     [{var,{2754,26},'F'},{var,{2754,28},'_L'}]},
                    {var,{2754,32},'Eds'}]}],
                 [],
                 [{call,
                   {2754,41},
                   {remote,
                    {2754,53},
                    {atom,{2754,41},sys_messages},
                    {atom,{2754,54},format_messages}},
                   [{var,{2754,70},'F'},
                    {var,{2754,73},'P'},
                    {var,{2754,76},'Eds'},
                    {var,{2754,81},'Opts'}]}]},
                {clause,
                 {2755,9},
                 [{tuple,
                   {2755,10},
                   [{var,{2755,11},'F'},{var,{2755,13},'Eds'}]}],
                 [],
                 [{debug_line,2755,890},
                  {call,
                   {2755,22},
                   {remote,
                    {2755,34},
                    {atom,{2755,22},sys_messages},
                    {atom,{2755,35},format_messages}},
                   [{var,{2755,51},'F'},
                    {var,{2755,54},'P'},
                    {var,{2755,57},'Eds'},
                    {var,{2755,62},'Opts'}]}]}]}}]},
           {var,{2756,6},'Ws0'}]}},
        {debug_line,2757,891},
        {match,
         {2757,6},
         {var,{2757,6},'Ws'},
         {call,
          {2757,11},
          {remote,{2757,16},{atom,{2757,11},lists},{atom,{2757,17},sort}},
          [{var,{2757,22},'Ws1'}]}},
        {debug_line,2758,892},
        {call,
         {2758,6},
         {remote,{2758,6},{atom,{2758,6},lists},{atom,{2758,6},foreach}},
         [{block,0,
           [{'fun',
             {2758,14},
             {clauses,
              [{clause,
                {2758,17},
                [{tuple,
                  {2758,18},
                  [{var,{2758,19},'_'},{var,{2758,21},'Str'}]}],
                [],
                [{call,
                  {2758,30},
                  {remote,
                   {2758,32},
                   {atom,{2758,30},io},
                   {atom,{2758,33},put_chars}},
                  [{var,{2758,43},'Str'}]}]}]}}]},
          {var,{2758,53},'Ws'}]}]},
      {clause,
       {2759,2},
       [{atom,{2759,2},false}],
       [],
       [{debug_line,2759,893},{atom,{2759,11},ok}]}]}]}]}.
{function,
 {2766,1},
 filter_warnings,2,
 [{clause,
   {2766,1},
   [{var,{2766,1},'_'},{var,{2766,1},'_'}],
   [[{call,
      {2766,1},
      {remote,{2766,1},{atom,{2766,1},fake},{atom,{2766,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2766,894},{atom,{2766,1},ignore}]},
  {clause,
   {2766,1},
   [{var,{2766,17},'Ws'},{var,{2766,21},'Opts'}],
   [],
   [{debug_line,2767,895},
    {match,
     {2767,5},
     {var,{2767,5},'Ignore'},
     {call,
      {2767,14},
      {atom,{2767,14},ignore_tags},
      [{var,{2767,26},'Opts'},
       {block,0,
        [{call,
          {2767,32},
          {remote,{2767,36},{atom,{2767,32},sets},{atom,{2767,37},new}},
          [{block,0,
            [{cons,
              {2767,41},
              {tuple,
               {2767,42},
               [{atom,{2767,43},version},{integer,{2767,51},2}]},
              {nil,{2767,53}}}]}]}]}]}},
    {debug_line,2768,896},
    {call,
     {2768,5},
     {atom,{2768,5},filter_warnings_1},
     [{var,{2768,23},'Ws'},{var,{2768,27},'Ignore'}]}]}]}.
{function,
    {2770,1},
    filter_warnings_1,2,
    [{clause,
         {2770,1},
         [{var,{2770,1},'_'},{var,{2770,1},'_'}],
         [[{call,
               {2770,1},
               {remote,
                   {2770,1},
                   {atom,{2770,1},fake},
                   {atom,{2770,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2770,897},{atom,{2770,1},ignore}]},
     {clause,
         {2770,1},
         [{cons,
              {2770,19},
              {tuple,
                  {2770,20},
                  [{var,{2770,21},'Source'},{var,{2770,28},'Ws0'}]},
              {var,{2770,33},'T'}},
          {var,{2770,37},'Ignore'}],
         [],
         [{debug_line,2771,898},
          {match,
              {2771,5},
              {var,{2771,5},'Ws'},
              {lc,{2771,10},
                  {block,0,[{var,{2771,11},'W'}]},
                  [{block,0,[{atom,{2771,21},true}]},
                   {generate,
                       {2771,18},
                       {var,{2771,16},'W'},
                       {var,{2771,21},'Ws0'}},
                   {block,0,[{atom,{2771,26},true}]},
                   {op,{2771,26},
                       'not',
                       {call,
                           {2771,30},
                           {atom,{2771,30},ignore_warning},
                           [{var,{2771,45},'W'},{var,{2771,48},'Ignore'}]}}]}},
          {debug_line,2772,899},
          {cons,
              {2772,5},
              {tuple,{2772,6},[{var,{2772,7},'Source'},{var,{2772,14},'Ws'}]},
              {call,
                  {2772,18},
                  {atom,{2772,18},filter_warnings_1},
                  [{var,{2772,36},'T'},{var,{2772,39},'Ignore'}]}}]},
     {clause,
         {2773,1},
         [{nil,{2773,19}},{var,{2773,23},'_Ignore'}],
         [],
         [{debug_line,2773,900},{nil,{2773,35}}]}]}.
{function,
    {2775,1},
    ignore_warning,2,
    [{clause,
         {2775,1},
         [{var,{2775,1},'_'},{var,{2775,1},'_'}],
         [[{call,
               {2775,1},
               {remote,
                   {2775,1},
                   {atom,{2775,1},fake},
                   {atom,{2775,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2775,901},{atom,{2775,1},ignore}]},
     {clause,
         {2775,1},
         [{tuple,
              {2775,16},
              [{var,{2775,17},'_Location'},
               {var,{2775,27},'Pass'},
               {tuple,
                   {2775,32},
                   [{var,{2775,33},'Category'},{var,{2775,42},'_'}]}]},
          {var,{2775,47},'Ignore'}],
         [],
         [{debug_line,2776,902},
          {match,
              {2776,5},
              {var,{2776,5},'IgnoreMod'},
              {'case',
                  {2776,17},
                  {var,{2776,22},'Pass'},
                  [{clause,
                       {2777,21},
                       [{atom,{2777,21},v3_core}],
                       [],
                       [{debug_line,2777,903},{atom,{2777,32},true}]},
                   {clause,
                       {2778,21},
                       [{atom,{2778,21},sys_core_fold}],
                       [],
                       [{debug_line,2778,904},{atom,{2778,38},true}]},
                   {clause,
                       {2779,21},
                       [{atom,{2779,21},beam_core_to_ssa}],
                       [],
                       [{debug_line,2779,905},{atom,{2779,41},true}]},
                   {clause,
                       {2780,21},
                       [{var,{2780,21},'_'}],
                       [],
                       [{debug_line,2780,906},{atom,{2780,26},false}]}]}},
          {debug_line,2782,907},
          {'case',
              {2782,5},
              {var,{2782,5},'IgnoreMod'},
              [{clause,
                   {2782,5},
                   [{atom,{2782,5},true}],
                   [],
                   [{call,
                        {2782,23},
                        {remote,
                            {2782,27},
                            {atom,{2782,23},sets},
                            {atom,{2782,28},is_element}},
                        [{var,{2782,39},'Category'},
                         {var,{2782,49},'Ignore'}]}]},
               {clause,
                   {2782,5},
                   [{atom,{2782,5},false}],
                   [],
                   [{atom,{2782,5},false}]},
               {clause,
                   [{generated,true},{location,{2782,5}}],
                   [{var,{2782,5},cov1}],
                   [],
                   [{call,
                        {2782,5},
                        {remote,
                            {2782,5},
                            {atom,{2782,5},erlang},
                            {atom,{2782,5},error}},
                        [{block,0,
                             [{tuple,
                                  {2782,5},
                                  [{atom,{2782,5},badarg},
                                   {var,{2782,5},cov1}]}]}]}]}]}]},
     {clause,
         {2783,1},
         [{var,{2783,16},'_'},{var,{2783,19},'_'}],
         [],
         [{debug_line,2783,908},{atom,{2783,25},false}]}]}.
{function,
    {2785,1},
    ignore_tags,2,
    [{clause,
         {2785,1},
         [{var,{2785,1},'_'},{var,{2785,1},'_'}],
         [[{call,
               {2785,1},
               {remote,
                   {2785,1},
                   {atom,{2785,1},fake},
                   {atom,{2785,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2785,909},{atom,{2785,1},ignore}]},
     {clause,
         {2785,1},
         [{cons,
              {2785,13},
              {atom,{2785,14},nowarn_opportunistic},
              {var,{2785,35},'_'}},
          {var,{2785,39},'_Ignore'}],
         [],
         [{debug_line,2786,910},
          {call,
              {2786,5},
              {remote,
                  {2786,9},
                  {atom,{2786,5},sets},
                  {atom,{2786,10},from_list}},
              [{block,0,
                   [{cons,
                        {2786,20},
                        {atom,{2786,21},failed},
                        {cons,
                            {2786,28},
                            {atom,{2786,28},ignored},
                            {cons,
                                {2786,36},
                                {atom,{2786,36},nomatch},
                                {nil,{2786,43}}}}}]},
               {block,0,
                   [{cons,
                        {2786,46},
                        {tuple,
                            {2786,47},
                            [{atom,{2786,48},version},{integer,{2786,56},2}]},
                        {nil,{2786,58}}}]}]}]},
     {clause,
         {2787,1},
         [{cons,
              {2787,13},
              {atom,{2787,14},nowarn_failed},
              {var,{2787,28},'Opts'}},
          {var,{2787,35},'Ignore'}],
         [],
         [{debug_line,2788,911},
          {call,
              {2788,5},
              {atom,{2788,5},ignore_tags},
              [{var,{2788,17},'Opts'},
               {block,0,
                   [{call,
                        {2788,23},
                        {remote,
                            {2788,27},
                            {atom,{2788,23},sets},
                            {atom,{2788,28},add_element}},
                        [{atom,{2788,40},failed},
                         {var,{2788,48},'Ignore'}]}]}]}]},
     {clause,
         {2789,1},
         [{cons,
              {2789,13},
              {atom,{2789,14},nowarn_ignored},
              {var,{2789,29},'Opts'}},
          {var,{2789,36},'Ignore'}],
         [],
         [{debug_line,2790,912},
          {call,
              {2790,5},
              {atom,{2790,5},ignore_tags},
              [{var,{2790,17},'Opts'},
               {block,0,
                   [{call,
                        {2790,23},
                        {remote,
                            {2790,27},
                            {atom,{2790,23},sets},
                            {atom,{2790,28},add_element}},
                        [{atom,{2790,40},ignored},
                         {var,{2790,49},'Ignore'}]}]}]}]},
     {clause,
         {2791,1},
         [{cons,
              {2791,13},
              {atom,{2791,14},nowarn_nomatch},
              {var,{2791,29},'Opts'}},
          {var,{2791,36},'Ignore'}],
         [],
         [{debug_line,2792,913},
          {call,
              {2792,5},
              {atom,{2792,5},ignore_tags},
              [{var,{2792,17},'Opts'},
               {block,0,
                   [{call,
                        {2792,23},
                        {remote,
                            {2792,27},
                            {atom,{2792,23},sets},
                            {atom,{2792,28},add_element}},
                        [{atom,{2792,40},nomatch},
                         {var,{2792,49},'Ignore'}]}]}]}]},
     {clause,
         {2793,1},
         [{cons,{2793,13},{var,{2793,14},'_'},{var,{2793,16},'Opts'}},
          {var,{2793,23},'Ignore'}],
         [],
         [{debug_line,2794,914},
          {call,
              {2794,5},
              {atom,{2794,5},ignore_tags},
              [{var,{2794,17},'Opts'},{var,{2794,23},'Ignore'}]}]},
     {clause,
         {2795,1},
         [{nil,{2795,13}},{var,{2795,17},'Ignore'}],
         [],
         [{debug_line,2795,915},{var,{2795,28},'Ignore'}]}]}.
{function,
    {2803,1},
    erlfile,3,
    [{clause,
         {2803,1},
         [{var,{2803,1},'_'},{var,{2803,1},'_'},{var,{2803,1},'_'}],
         [[{call,
               {2803,1},
               {remote,
                   {2803,1},
                   {atom,{2803,1},fake},
                   {atom,{2803,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2803,916},{atom,{2803,1},ignore}]},
     {clause,
         {2803,1},
         [{string,{2803,9},"."},
          {var,{2803,14},'Base'},
          {var,{2803,20},'Suffix'}],
         [],
         [{debug_line,2804,917},
          {op,{2804,10},'++',{var,{2804,5},'Base'},{var,{2804,13},'Suffix'}}]},
     {clause,
         {2805,1},
         [{var,{2805,9},'Dir'},
          {var,{2805,14},'Base'},
          {var,{2805,20},'Suffix'}],
         [],
         [{debug_line,2806,918},
          {call,
              {2806,5},
              {remote,
                  {2806,13},
                  {atom,{2806,5},filename},
                  {atom,{2806,14},join}},
              [{var,{2806,19},'Dir'},
               {block,0,
                   [{op,{2806,29},
                        '++',
                        {var,{2806,24},'Base'},
                        {var,{2806,32},'Suffix'}}]}]}]}]}.
{function,
    {2808,1},
    outfile,3,
    [{clause,
         {2808,1},
         [{var,{2808,1},'_'},{var,{2808,1},'_'},{var,{2808,1},'_'}],
         [[{call,
               {2808,1},
               {remote,
                   {2808,1},
                   {atom,{2808,1},fake},
                   {atom,{2808,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2808,919},{atom,{2808,1},ignore}]},
     {clause,
         {2808,1},
         [{var,{2808,9},'Base'},{var,{2808,15},'Ext'},{var,{2808,20},'Opts'}],
         [[{call,
               {2808,31},
               {remote,
                   {2808,31},
                   {atom,{2808,31},erlang},
                   {atom,{2808,31},is_list}},
               [{var,{2808,39},'Ext'}]}]],
         [{debug_line,2809,920},
          {match,
              {2809,5},
              {var,{2809,5},'Obase'},
              {'case',
                  {2809,13},
                  {call,
                      {2809,18},
                      {remote,
                          {2809,18},
                          {atom,{2809,18},lists},
                          {atom,{2809,18},keyfind}},
                      [{atom,{2809,26},outdir},
                       {integer,{2809,34},1},
                       {var,{2809,37},'Opts'}]},
                  [{clause,
                       {2810,3},
                       [{tuple,
                            {2810,3},
                            [{atom,{2810,4},outdir},{var,{2810,12},'Odir'}]}],
                       [],
                       [{debug_line,2810,921},
                        {call,
                            {2810,21},
                            {remote,
                                {2810,29},
                                {atom,{2810,21},filename},
                                {atom,{2810,30},join}},
                            [{var,{2810,35},'Odir'},{var,{2810,41},'Base'}]}]},
                   {clause,
                       {2811,3},
                       [{var,{2811,3},'_Other'}],
                       [],
                       [{debug_line,2811,922},{var,{2811,13},'Base'}]}]}},
          {debug_line,2813,923},
          {op,{2813,11},
              '++',
              {var,{2813,5},'Obase'},
              {op,{2813,18},
                  '++',
                  {string,{2813,14},"."},
                  {var,{2813,21},'Ext'}}}]}]}.
{function,
 {2815,1},
 objfile,2,
 [{clause,
   {2815,1},
   [{var,{2815,1},'_'},{var,{2815,1},'_'}],
   [[{call,
      {2815,1},
      {remote,{2815,1},{atom,{2815,1},fake},{atom,{2815,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2815,924},{atom,{2815,1},ignore}]},
  {clause,
   {2815,1},
   [{var,{2815,9},'Base'},{var,{2815,15},'St'}],
   [],
   [{debug_line,2816,925},
    {call,
     {2816,5},
     {atom,{2816,5},outfile},
     [{var,{2816,13},'Base'},
      {block,0,[{string,{2816,19},"beam"}]},
      {block,0,
       [{'case',
         {2816,27},
         {var,{2816,27},'St'},
         [{clause,
           [{generated,true},{location,{2816,27}}],
           [{tuple,
             [{generated,true},{location,{2816,27}}],
             [{atom,{2816,27},compile},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},rec170},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'},
              {var,{2816,27},'_'}]}],
           [],
           [{var,{2816,27},rec170}]},
          {clause,
           [{generated,true},{location,{2816,27}}],
           [{var,{2816,27},rec170}],
           [],
           [{call,
             [{generated,true},{location,{2816,27}}],
             {remote,
              [{generated,true},{location,{2816,27}}],
              {atom,[{generated,true},{location,{2816,27}}],erlang},
              {atom,[{generated,true},{location,{2816,27}}],error}},
             [{tuple,
               [{generated,true},{location,{2816,27}}],
               [{atom,[{generated,true},{location,{2816,27}}],badrecord},
                {var,{2816,27},rec170}]}]}]}]}]}]}]}]}.
{function,
 {2818,1},
 tmpfile,1,
 [{clause,
   {2818,1},
   [{var,{2818,1},'_'}],
   [[{call,
      {2818,1},
      {remote,{2818,1},{atom,{2818,1},fake},{atom,{2818,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2818,926},{atom,{2818,1},ignore}]},
  {clause,
   {2818,1},
   [{var,{2818,9},'Ofile'}],
   [],
   [{debug_line,2819,927},
    {call,
     {2819,5},
     {remote,{2819,5},{atom,{2819,5},lists},{atom,{2819,5},reverse}},
     [{block,0,
       [{cons,
         {2819,13},
         {char,{2819,14},35},
         {call,
          {2819,17},
          {remote,{2819,17},{atom,{2819,17},erlang},{atom,{2819,17},tl}},
          [{block,0,
            [{call,
              {2819,20},
              {remote,
               {2819,20},
               {atom,{2819,20},lists},
               {atom,{2819,20},reverse}},
              [{var,{2819,28},'Ofile'}]}]}]}}]}]}]}]}.
{function,{2825,1},
          pre_defs,1,
          [{clause,{2825,1},
                   [{var,{2825,1},'_'}],
                   [[{call,{2825,1},
                           {remote,{2825,1},
                                   {atom,{2825,1},fake},
                                   {atom,{2825,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2825,928},{atom,{2825,1},ignore}]},
           {clause,{2825,1},
                   [{cons,{2825,10},
                          {tuple,{2825,11},
                                 [{atom,{2825,12},d},
                                  {var,{2825,14},'M'},
                                  {var,{2825,16},'V'}]},
                          {var,{2825,19},'Opts'}}],
                   [],
                   [{debug_line,2826,929},
                    {cons,{2826,5},
                          {tuple,{2826,6},
                                 [{var,{2826,7},'M'},{var,{2826,9},'V'}]},
                          {call,{2826,12},
                                {atom,{2826,12},pre_defs},
                                [{var,{2826,21},'Opts'}]}}]},
           {clause,{2827,1},
                   [{cons,{2827,10},
                          {tuple,{2827,11},
                                 [{atom,{2827,12},d},{var,{2827,14},'M'}]},
                          {var,{2827,17},'Opts'}}],
                   [],
                   [{debug_line,2828,930},
                    {cons,{2828,5},
                          {var,{2828,6},'M'},
                          {call,{2828,8},
                                {atom,{2828,8},pre_defs},
                                [{var,{2828,17},'Opts'}]}}]},
           {clause,{2829,1},
                   [{cons,{2829,10},
                          {var,{2829,11},'_'},
                          {var,{2829,13},'Opts'}}],
                   [],
                   [{debug_line,2830,931},
                    {call,{2830,5},
                          {atom,{2830,5},pre_defs},
                          [{var,{2830,14},'Opts'}]}]},
           {clause,{2831,1},
                   [{nil,{2831,10}}],
                   [],
                   [{debug_line,2831,932},{nil,{2831,17}}]}]}.
{function,
    {2833,1},
    inc_paths,1,
    [{clause,
         {2833,1},
         [{var,{2833,1},'_'}],
         [[{call,
               {2833,1},
               {remote,
                   {2833,1},
                   {atom,{2833,1},fake},
                   {atom,{2833,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2833,933},{atom,{2833,1},ignore}]},
     {clause,
         {2833,1},
         [{var,{2833,11},'Opts'}],
         [],
         [{debug_line,2834,934},
          {lc,{2834,5},
              {block,0,[{var,{2834,7},'P'}]},
              [{block,0,[{atom,{2834,21},true}]},
               {generate,
                   {2834,18},
                   {tuple,{2834,12},[{atom,{2834,13},i},{var,{2834,15},'P'}]},
                   {var,{2834,21},'Opts'}},
               {block,0,[{atom,{2834,27},true}]},
               {call,
                   {2834,27},
                   {remote,
                       {2834,27},
                       {atom,{2834,27},erlang},
                       {atom,{2834,27},is_list}},
                   [{var,{2834,35},'P'}]}]}]}]}.
{function,
    {2836,1},
    src_listing,3,
    [{clause,
         {2836,1},
         [{var,{2836,1},'_'},{var,{2836,1},'_'},{var,{2836,1},'_'}],
         [[{call,
               {2836,1},
               {remote,
                   {2836,1},
                   {atom,{2836,1},fake},
                   {atom,{2836,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2836,935},{atom,{2836,1},ignore}]},
     {clause,
         {2836,1},
         [{var,{2836,13},'Ext'},{var,{2836,18},'Code'},{var,{2836,24},'St'}],
         [],
         [{debug_line,2837,936},
          {call,
              {2837,5},
              {atom,{2837,5},listing},
              [{block,0,
                   [{'fun',
                        {2837,13},
                        {clauses,
                            [{clause,
                                 {2837,17},
                                 [{var,{2837,18},'Lf'},
                                  {tuple,
                                      {2837,22},
                                      [{var,{2837,23},'_Mod'},
                                       {var,{2837,28},'_Exp'},
                                       {var,{2837,33},'Fs'}]}],
                                 [],
                                 [{call,
                                      {2837,41},
                                      {atom,{2837,41},do_src_listing},
                                      [{var,{2837,56},'Lf'},
                                       {var,{2837,60},'Fs'}]}]},
                             {clause,
                                 {2838,3},
                                 [{var,{2838,4},'Lf'},{var,{2838,8},'Fs'}],
                                 [],
                                 [{debug_line,2838,937},
                                  {call,
                                      {2838,15},
                                      {atom,{2838,15},do_src_listing},
                                      [{var,{2838,30},'Lf'},
                                       {var,{2838,34},'Fs'}]}]}]}}]},
               {var,{2839,6},'Ext'},
               {var,{2839,11},'Code'},
               {var,{2839,17},'St'}]}]}]}.
{function,
 {2841,1},
 do_src_listing,2,
 [{clause,
   {2841,1},
   [{var,{2841,1},'_'},{var,{2841,1},'_'}],
   [[{call,
      {2841,1},
      {remote,{2841,1},{atom,{2841,1},fake},{atom,{2841,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2841,938},{atom,{2841,1},ignore}]},
  {clause,
   {2841,1},
   [{var,{2841,16},'Lf'},{var,{2841,20},'Fs'}],
   [],
   [{debug_line,2842,939},
    {match,
     {2842,5},
     {var,{2842,5},'Opts'},
     {cons,
      {2842,12},
      {call,
       {2842,13},
       {remote,{2842,18},{atom,{2842,13},lists},{atom,{2842,19},keyfind}},
       [{atom,{2842,27},encoding},
        {integer,{2842,37},1},
        {block,0,
         [{call,
           {2842,40},
           {remote,{2842,42},{atom,{2842,40},io},{atom,{2842,43},getopts}},
           [{var,{2842,51},'Lf'}]}]}]},
      {nil,{2842,55}}}},
    {debug_line,2843,940},
    {call,
     {2843,5},
     {remote,{2843,5},{atom,{2843,5},lists},{atom,{2843,5},foreach}},
     [{block,0,
       [{'fun',
         {2843,13},
         {clauses,
          [{clause,
            {2843,17},
            [{var,{2843,18},'F'}],
            [],
            [{call,
              {2843,24},
              {remote,
               {2843,26},
               {atom,{2843,24},io},
               {atom,{2843,27},put_chars}},
              [{var,{2843,37},'Lf'},
               {block,0,
                [{cons,
                  {2843,41},
                  {call,
                   {2843,42},
                   {remote,
                    {2843,48},
                    {atom,{2843,42},erl_pp},
                    {atom,{2843,49},form}},
                   [{var,{2843,54},'F'},{var,{2843,57},'Opts'}]},
                  {cons,
                   {2843,63},
                   {string,{2843,63},"\n"},
                   {nil,{2843,67}}}}]}]}]}]}}]},
      {var,{2844,6},'Fs'}]}]}]}.
{function,
 {2846,1},
 listing,3,
 [{clause,
   {2846,1},
   [{var,{2846,1},'_'},{var,{2846,1},'_'},{var,{2846,1},'_'}],
   [[{call,
      {2846,1},
      {remote,{2846,1},{atom,{2846,1},fake},{atom,{2846,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2846,941},{atom,{2846,1},ignore}]},
  {clause,
   {2846,1},
   [{var,{2846,9},'Ext'},{var,{2846,14},'Code0'},{var,{2846,21},'St0'}],
   [],
   [{debug_line,2847,942},
    {match,
     {2847,5},
     {var,{2847,5},'Code'},
     {'maybe',
      {2847,12},
      [{debug_line,2851,943},
       {maybe_match,
        {2851,21},
        {atom,{2851,16},true},
        {call,
         {2851,24},
         {remote,{2851,28},{atom,{2851,24},cerl},{atom,{2851,29},is_c_module}},
         [{var,{2851,41},'Code0'}]}},
       {debug_line,2852,944},
       {maybe_match,
        {2852,21},
        {atom,{2852,16},true},
        {call,
         {2852,24},
         {remote,{2852,29},{atom,{2852,24},lists},{atom,{2852,30},member}},
         [{atom,{2852,37},beam_debug_info},
          {block,0,
           [{'case',
             {2852,54},
             {var,{2852,54},'St0'},
             [{clause,
               [{generated,true},{location,{2852,54}}],
               [{tuple,
                 [{generated,true},{location,{2852,54}}],
                 [{atom,{2852,54},compile},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},rec171},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'},
                  {var,{2852,54},'_'}]}],
               [],
               [{var,{2852,54},rec171}]},
              {clause,
               [{generated,true},{location,{2852,54}}],
               [{var,{2852,54},rec171}],
               [],
               [{call,
                 [{generated,true},{location,{2852,54}}],
                 {remote,
                  [{generated,true},{location,{2852,54}}],
                  {atom,[{generated,true},{location,{2852,54}}],erlang},
                  {atom,[{generated,true},{location,{2852,54}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2852,54}}],
                   [{atom,[{generated,true},{location,{2852,54}}],badrecord},
                    {var,{2852,54},rec171}]}]}]}]}]}]}},
       {debug_line,2856,945},
       {match,
        {2856,16},
        {var,{2856,16},'Attrs0'},
        {call,
         {2856,25},
         {remote,
          {2856,29},
          {atom,{2856,25},cerl},
          {atom,{2856,30},module_attrs}},
         [{var,{2856,43},'Code0'}]}},
       {debug_line,2857,946},
       {match,
        {2857,16},
        {var,{2857,16},'Opts0'},
        {lc,
         {2857,24},
         {block,0,
          [{tuple,
            {2857,25},
            [{call,
              {2857,26},
              {remote,
               {2857,30},
               {atom,{2857,26},cerl},
               {atom,{2857,31},concrete}},
              [{var,{2857,40},'Name'}]},
             {call,
              {2857,46},
              {remote,
               {2857,50},
               {atom,{2857,46},cerl},
               {atom,{2857,51},concrete}},
              [{var,{2857,60},'Value'}]}]}]},
         [{block,0,[{debug_line,2858,947},{atom,{2858,45},true}]},
          {generate_strict,
           {2858,41},
           {tuple,{2858,28},[{var,{2858,29},'Name'},{var,{2858,34},'Value'}]},
           {var,{2858,45},'Attrs0'}}]}},
       {debug_line,2859,948},
       {match,
        {2859,16},
        {var,{2859,16},'Opts'},
        {lc,
         {2859,23},
         {block,0,[{var,{2859,24},'Opt'}]},
         [{block,0,[{atom,{2859,49},true}]},
          {generate,
           {2859,46},
           {tuple,{2859,31},[{atom,{2859,32},compile},{var,{2859,40},'Opts'}]},
           {var,{2859,49},'Opts0'}},
          {generate,
           {2860,35},
           {var,{2860,31},'Opt'},
           {call,
            {2860,38},
            {remote,{2860,43},{atom,{2860,38},lists},{atom,{2860,44},flatten}},
            [{block,0,
              [{debug_line,2860,949},
               {cons,{2860,52},{var,{2860,53},'Opts'},{nil,{2860,57}}}]}]}}]}},
       {debug_line,2861,950},
       {maybe_match,
        {2861,22},
        {atom,{2861,16},false},
        {call,
         {2861,25},
         {remote,{2861,30},{atom,{2861,25},lists},{atom,{2861,31},member}},
         [{atom,{2861,38},beam_debug_info},{var,{2861,55},'Opts'}]}},
       {debug_line,2864,951},
       {match,
        {2864,16},
        {var,{2864,16},'Compile'},
        {tuple,
         {2864,26},
         [{call,
           {2864,27},
           {remote,{2864,31},{atom,{2864,27},cerl},{atom,{2864,32},abstract}},
           [{atom,{2864,41},compile}]},
          {call,
           {2865,27},
           {remote,{2865,31},{atom,{2865,27},cerl},{atom,{2865,32},abstract}},
           [{atom,{2865,41},beam_debug_info}]}]}},
       {debug_line,2866,952},
       {match,
        {2866,16},
        {var,{2866,16},'Attrs'},
        {cons,{2866,24},{var,{2866,25},'Compile'},{var,{2866,33},'Attrs0'}}},
       {debug_line,2867,953},
       {call,
        {2867,16},
        {remote,
         {2867,20},
         {atom,{2867,16},cerl},
         {atom,{2867,21},update_c_module}},
        [{var,{2867,37},'Code0'},
         {block,0,
          [{call,
            {2867,44},
            {remote,
             {2867,48},
             {atom,{2867,44},cerl},
             {atom,{2867,49},module_name}},
            [{var,{2867,61},'Code0'}]}]},
         {block,0,
          [{debug_line,2868,954},
           {call,
            {2868,37},
            {remote,
             {2868,41},
             {atom,{2868,37},cerl},
             {atom,{2868,42},module_exports}},
            [{var,{2868,57},'Code0'}]}]},
         {var,{2869,37},'Attrs'},
         {block,0,
          [{debug_line,2869,955},
           {call,
            {2869,44},
            {remote,
             {2869,48},
             {atom,{2869,44},cerl},
             {atom,{2869,49},module_defs}},
            [{var,{2869,61},'Code0'}]}]}]}],
      {'else',
       {2870,12},
       [{clause,
         {2871,16},
         [{var,{2871,16},'_'}],
         [],
         [{debug_line,2872,956},{var,{2872,20},'Code0'}]}]}}},
    {debug_line,2874,957},
    {match,
     {2874,5},
     {var,{2874,5},'St'},
     {block,
      {2874,10},
      [{match,{2874,10},{var,{2874,10},rec172},{var,{2874,10},'St0'}},
       {'case',
        {2874,22},
        {var,{2874,10},rec172},
        [{clause,
          {2874,22},
          [{tuple,
            {2874,22},
            [{atom,{2874,22},compile},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'},
             {var,{2874,22},'_'}]}],
          [],
          [{call,
            {2874,22},
            {remote,
             {2874,22},
             {atom,{2874,22},erlang},
             {atom,{2874,22},setelement}},
            [{integer,{2874,22},11},
             {var,{2874,10},rec172},
             {atom,{2874,33},none}]}]},
         {clause,
          [{generated,true},{location,{2874,22}}],
          [{var,[{generated,true},{location,{2874,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2874,22}}],
            {remote,
             [{generated,true},{location,{2874,22}}],
             {atom,[{generated,true},{location,{2874,22}}],erlang},
             {atom,[{generated,true},{location,{2874,22}}],error}},
            [{tuple,
              [{generated,true},{location,{2874,22}}],
              [{atom,[{generated,true},{location,{2874,22}}],badrecord},
               {var,{2874,10},rec172}]}]}]}]}]}},
    {debug_line,2875,958},
    {call,
     {2875,5},
     {atom,{2875,5},listing},
     [{block,0,
       [{'fun',
         {2875,13},
         {clauses,
          [{clause,
            {2875,16},
            [{var,{2875,17},'Lf'},{var,{2875,21},'Fs'}],
            [],
            [{call,
              {2875,28},
              {remote,
               {2875,40},
               {atom,{2875,28},beam_listing},
               {atom,{2875,41},module}},
              [{var,{2875,48},'Lf'},{var,{2875,52},'Fs'}]}]}]}}]},
      {var,{2875,61},'Ext'},
      {var,{2875,66},'Code'},
      {var,{2875,72},'St'}]}]}]}.
{function,
 {2877,1},
 listing,4,
 [{clause,
   {2877,1},
   [{var,{2877,1},'_'},
    {var,{2877,1},'_'},
    {var,{2877,1},'_'},
    {var,{2877,1},'_'}],
   [[{call,
      {2877,1},
      {remote,{2877,1},{atom,{2877,1},fake},{atom,{2877,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2877,959},{atom,{2877,1},ignore}]},
  {clause,
   {2877,1},
   [{var,{2877,9},'LFun'},
    {var,{2877,15},'Ext'},
    {var,{2877,20},'Code'},
    {var,{2877,26},'St'}],
   [],
   [{debug_line,2878,960},
    {match,
     {2878,5},
     {var,{2878,5},'Lfile'},
     {call,
      {2878,13},
      {atom,{2878,13},outfile},
      [{block,0,
        [{'case',
          {2878,21},
          {var,{2878,21},'St'},
          [{clause,
            [{generated,true},{location,{2878,21}}],
            [{tuple,
              [{generated,true},{location,{2878,21}}],
              [{atom,{2878,21},compile},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},rec173},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'},
               {var,{2878,21},'_'}]}],
            [],
            [{var,{2878,21},rec173}]},
           {clause,
            [{generated,true},{location,{2878,21}}],
            [{var,{2878,21},rec173}],
            [],
            [{call,
              [{generated,true},{location,{2878,21}}],
              {remote,
               [{generated,true},{location,{2878,21}}],
               {atom,[{generated,true},{location,{2878,21}}],erlang},
               {atom,[{generated,true},{location,{2878,21}}],error}},
              [{tuple,
                [{generated,true},{location,{2878,21}}],
                [{atom,[{generated,true},{location,{2878,21}}],badrecord},
                 {var,{2878,21},rec173}]}]}]}]}]},
       {var,{2878,38},'Ext'},
       {block,0,
        [{'case',
          {2878,43},
          {var,{2878,43},'St'},
          [{clause,
            [{generated,true},{location,{2878,43}}],
            [{tuple,
              [{generated,true},{location,{2878,43}}],
              [{atom,{2878,43},compile},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},rec174},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'},
               {var,{2878,43},'_'}]}],
            [],
            [{var,{2878,43},rec174}]},
           {clause,
            [{generated,true},{location,{2878,43}}],
            [{var,{2878,43},rec174}],
            [],
            [{call,
              [{generated,true},{location,{2878,43}}],
              {remote,
               [{generated,true},{location,{2878,43}}],
               {atom,[{generated,true},{location,{2878,43}}],erlang},
               {atom,[{generated,true},{location,{2878,43}}],error}},
              [{tuple,
                [{generated,true},{location,{2878,43}}],
                [{atom,[{generated,true},{location,{2878,43}}],badrecord},
                 {var,{2878,43},rec174}]}]}]}]}]}]}},
    {debug_line,2879,961},
    {'case',
     {2879,5},
     {call,
      {2879,10},
      {remote,{2879,14},{atom,{2879,10},file},{atom,{2879,15},open}},
      [{var,{2879,20},'Lfile'},
       {block,0,
        [{cons,
          {2879,27},
          {atom,{2879,28},write},
          {cons,{2879,34},{atom,{2879,34},delayed_write},{nil,{2879,47}}}}]}]},
     [{clause,
       {2880,2},
       [{tuple,{2880,2},[{atom,{2880,3},ok},{var,{2880,6},'Lf'}]}],
       [],
       [{debug_line,2881,962},
        {call,
         {2881,13},
         {atom,{2881,13},output_encoding},
         [{var,{2881,29},'Lf'},{var,{2881,33},'St'}]},
        {debug_line,2882,963},
        {call,
         {2882,6},
         {var,{2882,6},'LFun'},
         [{var,{2882,11},'Lf'},{var,{2882,15},'Code'}]},
        {debug_line,2883,964},
        {match,
         {2883,6},
         {atom,{2883,6},ok},
         {call,
          {2883,11},
          {remote,{2883,15},{atom,{2883,11},file},{atom,{2883,16},close}},
          [{var,{2883,22},'Lf'}]}},
        {debug_line,2884,965},
        {tuple,
         {2884,6},
         [{atom,{2884,7},ok},{var,{2884,10},'Code'},{var,{2884,15},'St'}]}]},
      {clause,
       {2885,2},
       [{tuple,{2885,2},[{atom,{2885,3},error},{var,{2885,9},'Error'}]}],
       [],
       [{debug_line,2886,966},
        {match,
         {2886,6},
         {var,{2886,6},'Es'},
         {cons,
          {2886,11},
          {tuple,
           {2886,12},
           [{var,{2886,13},'Lfile'},
            {cons,
             {2886,19},
             {tuple,
              {2886,20},
              [{atom,{2886,21},none},
               {atom,{2886,26},compile},
               {tuple,
                {2886,34},
                [{atom,{2886,35},write_error},{var,{2886,47},'Error'}]}]},
             {nil,{2886,54}}}]},
          {nil,{2886,56}}}},
        {debug_line,2887,967},
        {tuple,
         {2887,6},
         [{atom,{2887,7},error},
          {block,
           {2887,13},
           [{match,
             {2887,24},
             {var,{2887,24},rec175},
             {op,
              {2887,49},
              '++',
              {'case',
               {2887,31},
               {var,{2887,31},'St'},
               [{clause,
                 [{generated,true},{location,{2887,31}}],
                 [{tuple,
                   [{generated,true},{location,{2887,31}}],
                   [{atom,{2887,31},compile},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'},
                    {var,{2887,31},rec177},
                    {var,{2887,31},'_'},
                    {var,{2887,31},'_'}]}],
                 [],
                 [{var,{2887,31},rec177}]},
                {clause,
                 [{generated,true},{location,{2887,31}}],
                 [{var,{2887,31},rec177}],
                 [],
                 [{call,
                   [{generated,true},{location,{2887,31}}],
                   {remote,
                    [{generated,true},{location,{2887,31}}],
                    {atom,[{generated,true},{location,{2887,31}}],erlang},
                    {atom,[{generated,true},{location,{2887,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2887,31}}],
                     [{atom,[{generated,true},{location,{2887,31}}],badrecord},
                      {var,{2887,31},rec177}]}]}]}]},
              {var,{2887,52},'Es'}}},
            {match,{2887,13},{var,{2887,13},rec176},{var,{2887,13},'St'}},
            {'case',
             {2887,24},
             {var,{2887,13},rec176},
             [{clause,
               {2887,24},
               [{tuple,
                 {2887,24},
                 [{atom,{2887,24},compile},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'},
                  {var,{2887,24},'_'}]}],
               [],
               [{call,
                 {2887,24},
                 {remote,
                  {2887,24},
                  {atom,{2887,24},erlang},
                  {atom,{2887,24},setelement}},
                 [{integer,{2887,24},12},
                  {var,{2887,13},rec176},
                  {var,{2887,24},rec175}]}]},
              {clause,
               [{generated,true},{location,{2887,24}}],
               [{var,[{generated,true},{location,{2887,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2887,24}}],
                 {remote,
                  [{generated,true},{location,{2887,24}}],
                  {atom,[{generated,true},{location,{2887,24}}],erlang},
                  {atom,[{generated,true},{location,{2887,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2887,24}}],
                   [{atom,[{generated,true},{location,{2887,24}}],badrecord},
                    {var,{2887,13},rec176}]}]}]}]}]}]}]}]}]}]}.
{function,
    {2890,1},
    to_dis,2,
    [{clause,
         {2890,1},
         [{var,{2890,1},'_'},{var,{2890,1},'_'}],
         [[{call,
               {2890,1},
               {remote,
                   {2890,1},
                   {atom,{2890,1},fake},
                   {atom,{2890,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2890,968},{atom,{2890,1},ignore}]},
     {clause,
         {2890,1},
         [{var,{2890,8},'Code'},
          {match,
              {2890,14},
              {tuple,
                  {2890,14},
                  [{atom,{2890,14},compile},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'},
                   {var,{2890,43},'Outfile'},
                   {var,{2890,30},'Module'},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'},
                   {var,{2890,14},'_'}]},
              {var,{2890,52},'St'}}],
         [],
         [{debug_line,2891,969},
          {match,
              {2891,5},
              {var,{2891,5},'Loaded'},
              {call,
                  {2891,14},
                  {remote,
                      {2891,18},
                      {atom,{2891,14},code},
                      {atom,{2891,19},is_loaded}},
                  [{var,{2891,29},'Module'}]}},
          {debug_line,2892,970},
          {match,
              {2892,5},
              {var,{2892,5},'Sticky'},
              {call,
                  {2892,14},
                  {remote,
                      {2892,18},
                      {atom,{2892,14},code},
                      {atom,{2892,19},is_sticky}},
                  [{var,{2892,29},'Module'}]}},
          {debug_line,2893,971},
          {match,
              {2893,5},
              {var,{2893,5},'_'},
              {lc,{2893,9},
                  {block,0,
                      [{call,
                           {2893,10},
                           {remote,
                               {2893,14},
                               {atom,{2893,10},code},
                               {atom,{2893,15},unstick_mod}},
                           [{var,{2893,27},'Module'}]}]},
                  [{block,0,[{atom,{2893,38},true}]},
                   {var,{2893,38},'Sticky'}]}},
          {debug_line,2895,972},
          {match,
              {2895,5},
              {tuple,
                  {2895,5},
                  [{atom,{2895,6},module},{var,{2895,13},'Module'}]},
              {call,
                  {2895,23},
                  {remote,
                      {2895,27},
                      {atom,{2895,23},code},
                      {atom,{2895,28},load_binary}},
                  [{var,{2895,40},'Module'},
                   {block,0,[{string,{2895,48},[]}]},
                   {var,{2895,52},'Code'}]}},
          {debug_line,2896,973},
          {match,
              {2896,5},
              {var,{2896,5},'DestDir'},
              {call,
                  {2896,15},
                  {remote,
                      {2896,23},
                      {atom,{2896,15},filename},
                      {atom,{2896,24},dirname}},
                  [{var,{2896,32},'Outfile'}]}},
          {debug_line,2897,974},
          {match,
              {2897,5},
              {var,{2897,5},'DisFile'},
              {call,
                  {2897,15},
                  {remote,
                      {2897,23},
                      {atom,{2897,15},filename},
                      {atom,{2897,24},join}},
                  [{var,{2897,29},'DestDir'},
                   {block,0,
                       [{op,{2897,59},
                            '++',
                            {call,
                                {2897,38},
                                {remote,
                                    {2897,38},
                                    {atom,{2897,38},erlang},
                                    {atom,{2897,38},atom_to_list}},
                                [{var,{2897,51},'Module'}]},
                            {string,{2897,62},".dis"}}]}]}},
          {debug_line,2898,975},
          {match,
              {2898,5},
              {atom,{2898,5},ok},
              {call,
                  {2898,10},
                  {remote,
                      {2898,20},
                      {atom,{2898,10},erts_debug},
                      {atom,{2898,21},dis_to_file}},
                  [{var,{2898,33},'Module'},{var,{2898,41},'DisFile'}]}},
          {debug_line,2901,976},
          {match,
              {2901,5},
              {var,{2901,5},'_'},
              {lc,{2901,9},
                  {block,0,
                      [{match,
                           {2901,10},
                           {tuple,
                               {2901,10},
                               [{atom,{2901,11},module},
                                {var,{2901,19},'Module'}]},
                           {call,
                               {2901,29},
                               {remote,
                                   {2901,33},
                                   {atom,{2901,29},code},
                                   {atom,{2901,34},load_file}},
                               [{var,{2901,44},'Module'}]}}]},
                  [{block,0,[{atom,{2901,62},true}]},
                   {op,{2901,62},
                       '=/=',
                       {var,{2901,55},'Loaded'},
                       {atom,{2901,66},false}}]}},
          {debug_line,2902,977},
          {lc,{2902,5},
              {block,0,
                  [{call,
                       {2902,6},
                       {remote,
                           {2902,10},
                           {atom,{2902,6},code},
                           {atom,{2902,11},stick_mod}},
                       [{var,{2902,21},'Module'}]}]},
              [{block,0,[{atom,{2902,32},true}]},{var,{2902,32},'Sticky'}]},
          {debug_line,2903,978},
          {tuple,
              {2903,5},
              [{atom,{2903,6},ok},
               {var,{2903,9},'Code'},
               {var,{2903,14},'St'}]}]}]}.
{function,
 {2905,1},
 output_encoding,2,
 [{clause,
   {2905,1},
   [{var,{2905,1},'_'},{var,{2905,1},'_'}],
   [[{call,
      {2905,1},
      {remote,{2905,1},{atom,{2905,1},fake},{atom,{2905,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2905,979},{atom,{2905,1},ignore}]},
  {clause,
   {2905,1},
   [{var,{2905,17},'F'},
    {tuple,
     {2905,20},
     [{atom,{2905,20},compile},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {atom,{2905,40},none},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'},
      {var,{2905,20},'_'}]}],
   [],
   [{debug_line,2906,980},
    {match,
     {2906,5},
     {atom,{2906,5},ok},
     {call,
      {2906,10},
      {remote,{2906,12},{atom,{2906,10},io},{atom,{2906,13},setopts}},
      [{var,{2906,21},'F'},
       {block,0,
        [{cons,
          {2906,24},
          {tuple,
           {2906,25},
           [{atom,{2906,26},encoding},
            {call,
             {2906,36},
             {remote,
              {2906,39},
              {atom,{2906,36},epp},
              {atom,{2906,40},default_encoding}},
             []}]},
          {nil,{2906,59}}}]}]}}]},
  {clause,
   {2907,1},
   [{var,{2907,17},'F'},
    {tuple,
     {2907,20},
     [{atom,{2907,20},compile},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,40},'Encoding'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'},
      {var,{2907,20},'_'}]}],
   [],
   [{debug_line,2908,981},
    {match,
     {2908,5},
     {atom,{2908,5},ok},
     {call,
      {2908,10},
      {remote,{2908,12},{atom,{2908,10},io},{atom,{2908,13},setopts}},
      [{var,{2908,21},'F'},
       {block,0,
        [{cons,
          {2908,24},
          {tuple,
           {2908,25},
           [{atom,{2908,26},encoding},{var,{2908,36},'Encoding'}]},
          {nil,{2908,45}}}]}]}},
    {debug_line,2909,982},
    {match,
     {2909,5},
     {atom,{2909,5},ok},
     {call,
      {2909,10},
      {remote,{2909,12},{atom,{2909,10},io},{atom,{2909,13},fwrite}},
      [{var,{2909,20},'F'},
       {block,0,
        [{bin,
          {2909,23},
          [{bin_element,
            {2909,25},
            {string,{2909,25},"%% ~s\n"},
            default,default}]}]},
       {block,0,
        [{cons,
          {2909,38},
          {call,
           {2909,39},
           {remote,
            {2909,42},
            {atom,{2909,39},epp},
            {atom,{2909,43},encoding_to_string}},
           [{var,{2909,62},'Encoding'}]},
          {nil,{2909,71}}}]}]}}]}]}.
{function,
    {2917,1},
    diffable,2,
    [{clause,
         {2917,1},
         [{var,{2917,1},'_'},{var,{2917,1},'_'}],
         [[{call,
               {2917,1},
               {remote,
                   {2917,1},
                   {atom,{2917,1},fake},
                   {atom,{2917,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2917,983},{atom,{2917,1},ignore}]},
     {clause,
         {2917,1},
         [{var,{2917,10},'Code0'},{var,{2917,17},'St'}],
         [],
         [{debug_line,2918,984},
          {match,
              {2918,5},
              {tuple,
                  {2918,5},
                  [{var,{2918,6},'Mod'},
                   {var,{2918,10},'Exp'},
                   {var,{2918,14},'Attr'},
                   {var,{2918,19},'Fs0'},
                   {var,{2918,23},'NumLabels'}]},
              {var,{2918,36},'Code0'}},
          {debug_line,2919,985},
          {match,
              {2919,5},
              {var,{2919,5},'EntryLabels'},
              {mc,{2919,19},
                  {map_field_assoc,
                      {2919,27},
                      {block,0,[{var,{2919,21},'Entry'}]},
                      {block,0,
                          [{tuple,
                               {2919,30},
                               [{var,{2919,31},'Name'},
                                {var,{2919,36},'Arity'}]}]}},
                  [{block,0,[{debug_line,2920,986},{atom,{2920,57},true}]},
                   {generate_strict,
                       {2920,53},
                       {tuple,
                           {2920,23},
                           [{atom,{2920,24},function},
                            {var,{2920,33},'Name'},
                            {var,{2920,38},'Arity'},
                            {var,{2920,44},'Entry'},
                            {var,{2920,50},'_'}]},
                       {var,{2920,57},'Fs0'}}]}},
          {debug_line,2921,987},
          {match,
              {2921,5},
              {var,{2921,5},'Fs'},
              {lc,{2921,10},
                  {block,0,
                      [{call,
                           {2921,11},
                           {atom,{2921,11},diffable_fix_function},
                           [{var,{2921,33},'F'},
                            {var,{2921,36},'EntryLabels'}]}]},
                  [{block,0,[{atom,{2921,57},true}]},
                   {generate,
                       {2921,54},
                       {var,{2921,52},'F'},
                       {var,{2921,57},'Fs0'}}]}},
          {debug_line,2922,988},
          {match,
              {2922,5},
              {var,{2922,5},'Code'},
              {tuple,
                  {2922,12},
                  [{var,{2922,13},'Mod'},
                   {var,{2922,17},'Exp'},
                   {var,{2922,21},'Attr'},
                   {var,{2922,26},'Fs'},
                   {var,{2922,29},'NumLabels'}]}},
          {debug_line,2923,989},
          {tuple,
              {2923,5},
              [{atom,{2923,6},ok},
               {var,{2923,9},'Code'},
               {var,{2923,14},'St'}]}]}]}.
{function,
 {2925,1},
 diffable_fix_function,2,
 [{clause,
   {2925,1},
   [{var,{2925,1},'_'},{var,{2925,1},'_'}],
   [[{call,
      {2925,1},
      {remote,{2925,1},{atom,{2925,1},fake},{atom,{2925,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2925,990},{atom,{2925,1},ignore}]},
  {clause,
   {2925,1},
   [{tuple,
     {2925,23},
     [{atom,{2925,24},function},
      {var,{2925,33},'Name'},
      {var,{2925,38},'Arity'},
      {var,{2925,44},'Entry0'},
      {var,{2925,51},'Is0'}]},
    {var,{2925,57},'LabelMap0'}],
   [],
   [{debug_line,2926,991},
    {match,
     {2926,5},
     {var,{2926,5},'Entry'},
     {call,
      {2926,13},
      {remote,{2926,17},{atom,{2926,13},maps},{atom,{2926,18},get}},
      [{var,{2926,22},'Entry0'},{var,{2926,30},'LabelMap0'}]}},
    {debug_line,2927,992},
    {match,
     {2927,5},
     {tuple,{2927,5},[{var,{2927,6},'Is1'},{var,{2927,10},'LabelMap'}]},
     {call,
      {2927,22},
      {atom,{2927,22},diffable_label_map},
      [{var,{2927,41},'Is0'},
       {integer,{2927,46},1},
       {var,{2927,49},'LabelMap0'},
       {nil,{2927,60}}]}},
    {debug_line,2928,993},
    {match,
     {2928,5},
     {var,{2928,5},'Fb'},
     {'fun',
      {2928,10},
      {clauses,
       [{clause,
         {2928,13},
         [{var,{2928,14},'Old'}],
         [],
         [{call,
           {2928,22},
           {remote,{2928,22},{atom,{2928,22},erlang},{atom,{2928,22},error}},
           [{block,0,
             [{tuple,
               {2928,28},
               [{atom,{2928,29},no_fb},{var,{2928,35},'Old'}]}]}]}]}]}}},
    {debug_line,2929,994},
    {match,
     {2929,5},
     {var,{2929,5},'Is'},
     {call,
      {2929,10},
      {remote,
       {2929,20},
       {atom,{2929,10},beam_utils},
       {atom,{2929,21},replace_labels}},
      [{var,{2929,36},'Is1'},
       {nil,{2929,41}},
       {var,{2929,45},'LabelMap'},
       {var,{2929,55},'Fb'}]}},
    {debug_line,2930,995},
    {tuple,
     {2930,5},
     [{atom,{2930,6},function},
      {var,{2930,15},'Name'},
      {var,{2930,20},'Arity'},
      {var,{2930,26},'Entry'},
      {var,{2930,32},'Is'}]}]}]}.
{function,
    {2932,1},
    diffable_label_map,4,
    [{clause,
         {2932,1},
         [{var,{2932,1},'_'},
          {var,{2932,1},'_'},
          {var,{2932,1},'_'},
          {var,{2932,1},'_'}],
         [[{call,
               {2932,1},
               {remote,
                   {2932,1},
                   {atom,{2932,1},fake},
                   {atom,{2932,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2932,996},{atom,{2932,1},ignore}]},
     {clause,
         {2932,1},
         [{cons,
              {2932,20},
              {tuple,{2932,21},[{atom,{2932,22},label},{var,{2932,28},'Old'}]},
              {var,{2932,33},'Is'}},
          {var,{2932,38},'New'},
          {var,{2932,43},'Map'},
          {var,{2932,48},'Acc'}],
         [],
         [{debug_line,2933,997},
          {'case',
              {2933,5},
              {var,{2933,10},'Map'},
              [{clause,
                   {2934,9},
                   [{map,
                        {2934,9},
                        [{map_field_exact,
                             {2934,14},
                             {var,{2934,11},'Old'},
                             {var,{2934,16},'NewLabel'}}]}],
                   [],
                   [{debug_line,2935,998},
                    {call,
                        {2935,13},
                        {atom,{2935,13},diffable_label_map},
                        [{var,{2935,32},'Is'},
                         {var,{2935,36},'New'},
                         {var,{2935,41},'Map'},
                         {block,0,
                             [{cons,
                                  {2935,46},
                                  {tuple,
                                      {2935,47},
                                      [{atom,{2935,48},label},
                                       {var,{2935,54},'NewLabel'}]},
                                  {var,{2935,64},'Acc'}}]}]}]},
               {clause,
                   {2936,9},
                   [{map,{2936,9},[]}],
                   [],
                   [{debug_line,2937,999},
                    {call,
                        {2937,13},
                        {atom,{2937,13},diffable_label_map},
                        [{var,{2937,32},'Is'},
                         {block,0,
                             [{op,{2937,39},
                                  '+',
                                  {var,{2937,36},'New'},
                                  {integer,{2937,40},1}}]},
                         {block,0,
                             [{map,
                                  {2937,46},
                                  {var,{2937,43},'Map'},
                                  [{map_field_assoc,
                                       {2937,51},
                                       {var,{2937,48},'Old'},
                                       {var,{2937,53},'New'}}]}]},
                         {block,0,
                             [{cons,
                                  {2937,59},
                                  {tuple,
                                      {2937,60},
                                      [{atom,{2937,61},label},
                                       {var,{2937,67},'New'}]},
                                  {var,{2937,72},'Acc'}}]}]}]}]}]},
     {clause,
         {2939,1},
         [{cons,{2939,20},{var,{2939,21},'I'},{var,{2939,23},'Is'}},
          {var,{2939,28},'New'},
          {var,{2939,33},'Map'},
          {var,{2939,38},'Acc'}],
         [],
         [{debug_line,2940,1000},
          {call,
              {2940,5},
              {atom,{2940,5},diffable_label_map},
              [{var,{2940,24},'Is'},
               {var,{2940,28},'New'},
               {var,{2940,33},'Map'},
               {block,0,
                   [{cons,
                        {2940,38},
                        {var,{2940,39},'I'},
                        {var,{2940,41},'Acc'}}]}]}]},
     {clause,
         {2941,1},
         [{nil,{2941,20}},
          {var,{2941,24},'_New'},
          {var,{2941,30},'Map'},
          {var,{2941,35},'Acc'}],
         [],
         [{debug_line,2942,1001},
          {tuple,{2942,5},[{var,{2942,6},'Acc'},{var,{2942,10},'Map'}]}]}]}.
{attribute,{2945,2},
           spec,
           {{options,0},
            [{type,{2945,14},
                   'fun',
                   [{type,{2945,14},product,[]},{atom,{2945,20},ok}]}]}}.
{function,
    {2946,1},
    options,0,
    [{clause,
         {2946,1},
         [],
         [[{call,
               {2946,1},
               {remote,
                   {2946,1},
                   {atom,{2946,1},fake},
                   {atom,{2946,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2946,1002},{atom,{2946,1},ignore}]},
     {clause,
         {2946,1},
         [],[],
         [{debug_line,2947,1003},
          {call,
              {2947,5},
              {atom,{2947,5},help},
              [{block,0,
                   [{call,
                        {2947,10},
                        {atom,{2947,10},standard_passes},
                        []}]}]}]}]}.
{function,
    {2949,1},
    help,1,
    [{clause,
         {2949,1},
         [{var,{2949,1},'_'}],
         [[{call,
               {2949,1},
               {remote,
                   {2949,1},
                   {atom,{2949,1},fake},
                   {atom,{2949,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2949,1004},{atom,{2949,1},ignore}]},
     {clause,
         {2949,1},
         [{cons,
              {2949,6},
              {tuple,{2949,7},[{atom,{2949,8},delay},{var,{2949,14},'Ps'}]},
              {var,{2949,18},'T'}}],
         [],
         [{debug_line,2950,1005},
          {call,{2950,5},{atom,{2950,5},help},[{var,{2950,10},'Ps'}]},
          {debug_line,2951,1006},
          {call,{2951,5},{atom,{2951,5},help},[{var,{2951,10},'T'}]}]},
     {clause,
         {2952,1},
         [{cons,
              {2952,6},
              {tuple,
                  {2952,7},
                  [{atom,{2952,8},iff},
                   {var,{2952,12},'Flag'},
                   {tuple,
                       {2952,17},
                       [{atom,{2952,18},src_listing},{var,{2952,30},'Ext'}]}]},
              {var,{2952,36},'T'}}],
         [],
         [{debug_line,2953,1007},
          {call,
              {2953,5},
              {remote,{2953,7},{atom,{2953,5},io},{atom,{2953,8},fwrite}},
              [{block,0,
                   [{string,
                        {2953,15},
                        "~p - Generate .~s source listing file\n"}]},
               {block,0,
                   [{cons,
                        {2953,58},
                        {var,{2953,59},'Flag'},
                        {cons,
                            {2953,64},
                            {var,{2953,64},'Ext'},
                            {nil,{2953,67}}}}]}]},
          {debug_line,2954,1008},
          {call,{2954,5},{atom,{2954,5},help},[{var,{2954,10},'T'}]}]},
     {clause,
         {2955,1},
         [{cons,
              {2955,6},
              {tuple,
                  {2955,7},
                  [{atom,{2955,8},iff},
                   {var,{2955,12},'Flag'},
                   {tuple,
                       {2955,17},
                       [{atom,{2955,18},listing},{var,{2955,26},'Ext'}]}]},
              {var,{2955,32},'T'}}],
         [],
         [{debug_line,2956,1009},
          {call,
              {2956,5},
              {remote,{2956,7},{atom,{2956,5},io},{atom,{2956,8},fwrite}},
              [{block,0,[{string,{2956,15},"~p - Generate .~s file\n"}]},
               {block,0,
                   [{cons,
                        {2956,43},
                        {var,{2956,44},'Flag'},
                        {cons,
                            {2956,49},
                            {var,{2956,49},'Ext'},
                            {nil,{2956,52}}}}]}]},
          {debug_line,2957,1010},
          {call,{2957,5},{atom,{2957,5},help},[{var,{2957,10},'T'}]}]},
     {clause,
         {2958,1},
         [{cons,
              {2958,6},
              {tuple,
                  {2958,7},
                  [{atom,{2958,8},iff},
                   {var,{2958,12},'Flag'},
                   {tuple,
                       {2958,17},
                       [{var,{2958,18},'Name'},{var,{2958,23},'Fun'}]}]},
              {var,{2958,29},'T'}}],
         [[{call,
               {2958,38},
               {remote,
                   {2958,38},
                   {atom,{2958,38},erlang},
                   {atom,{2958,38},is_function}},
               [{var,{2958,50},'Fun'}]}]],
         [{debug_line,2959,1011},
          {call,
              {2959,5},
              {remote,{2959,7},{atom,{2959,5},io},{atom,{2959,8},fwrite}},
              [{block,0,[{string,{2959,15},"~p - Run ~s\n"}]},
               {block,0,
                   [{cons,
                        {2959,32},
                        {var,{2959,33},'Flag'},
                        {cons,
                            {2959,38},
                            {var,{2959,38},'Name'},
                            {nil,{2959,42}}}}]}]},
          {debug_line,2960,1012},
          {call,{2960,5},{atom,{2960,5},help},[{var,{2960,10},'T'}]}]},
     {clause,
         {2961,1},
         [{cons,
              {2961,6},
              {tuple,
                  {2961,7},
                  [{atom,{2961,8},iff},
                   {var,{2961,12},'_Flag'},
                   {var,{2961,18},'Action'}]},
              {var,{2961,26},'T'}}],
         [],
         [{debug_line,2962,1013},
          {call,{2962,5},{atom,{2962,5},help},[{var,{2962,10},'Action'}]},
          {debug_line,2963,1014},
          {call,{2963,5},{atom,{2963,5},help},[{var,{2963,10},'T'}]}]},
     {clause,
         {2964,1},
         [{cons,
              {2964,6},
              {tuple,
                  {2964,7},
                  [{atom,{2964,8},unless},
                   {var,{2964,15},'Flag'},
                   {tuple,
                       {2964,20},
                       [{atom,{2964,21},pass},{var,{2964,26},'Pass'}]}]},
              {var,{2964,33},'T'}}],
         [],
         [{debug_line,2965,1015},
          {call,
              {2965,5},
              {remote,{2965,7},{atom,{2965,5},io},{atom,{2965,8},fwrite}},
              [{block,0,[{string,{2965,15},"~p - Skip the ~s pass\n"}]},
               {block,0,
                   [{cons,
                        {2965,42},
                        {var,{2965,43},'Flag'},
                        {cons,
                            {2965,48},
                            {var,{2965,48},'Pass'},
                            {nil,{2965,52}}}}]}]},
          {debug_line,2966,1016},
          {call,{2966,5},{atom,{2966,5},help},[{var,{2966,10},'T'}]}]},
     {clause,
         {2967,1},
         [{cons,
              {2967,6},
              {tuple,
                  {2967,7},
                  [{atom,{2967,8},unless},
                   {match,
                       {2967,15},
                       {atom,{2967,15},no_postopt},
                       {var,{2967,26},'Flag'}},
                   {var,{2967,31},'List'}]},
              {var,{2967,37},'T'}}],
         [[{call,
               {2967,46},
               {remote,
                   {2967,46},
                   {atom,{2967,46},erlang},
                   {atom,{2967,46},is_list}},
               [{var,{2967,54},'List'}]}]],
         [{debug_line,2969,1017},
          {call,
              {2969,5},
              {remote,{2969,7},{atom,{2969,5},io},{atom,{2969,8},fwrite}},
              [{block,0,
                   [{string,{2969,15},"~p - Skip all post optimisation\n"}]},
               {block,0,
                   [{cons,
                        {2969,52},
                        {var,{2969,53},'Flag'},
                        {nil,{2969,57}}}]}]},
          {debug_line,2970,1018},
          {call,{2970,5},{atom,{2970,5},help},[{var,{2970,10},'List'}]},
          {debug_line,2971,1019},
          {call,{2971,5},{atom,{2971,5},help},[{var,{2971,10},'T'}]}]},
     {clause,
         {2972,1},
         [{cons,
              {2972,6},
              {tuple,
                  {2972,7},
                  [{atom,{2972,8},unless},
                   {var,{2972,15},'_Flag'},
                   {var,{2972,21},'Action'}]},
              {var,{2972,29},'T'}}],
         [],
         [{debug_line,2973,1020},
          {call,{2973,5},{atom,{2973,5},help},[{var,{2973,10},'Action'}]},
          {debug_line,2974,1021},
          {call,{2974,5},{atom,{2974,5},help},[{var,{2974,10},'T'}]}]},
     {clause,
         {2975,1},
         [{cons,{2975,6},{var,{2975,7},'_'},{var,{2975,9},'T'}}],
         [],
         [{debug_line,2976,1022},
          {call,{2976,5},{atom,{2976,5},help},[{var,{2976,10},'T'}]}]},
     {clause,
         {2977,1},
         [{var,{2977,6},'_'}],
         [],
         [{debug_line,2978,1023},{atom,{2978,5},ok}]}]}.
{function,
    {2980,1},
    rel2fam,1,
    [{clause,
         {2980,1},
         [{var,{2980,1},'_'}],
         [[{call,
               {2980,1},
               {remote,
                   {2980,1},
                   {atom,{2980,1},fake},
                   {atom,{2980,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2980,1024},{atom,{2980,1},ignore}]},
     {clause,
         {2980,1},
         [{var,{2980,9},'S0'}],
         [],
         [{debug_line,2981,1025},
          {match,
              {2981,5},
              {var,{2981,5},'S1'},
              {call,
                  {2981,10},
                  {remote,
                      {2981,14},
                      {atom,{2981,10},sofs},
                      {atom,{2981,15},relation}},
                  [{var,{2981,24},'S0'}]}},
          {debug_line,2982,1026},
          {match,
              {2982,5},
              {var,{2982,5},'S'},
              {call,
                  {2982,9},
                  {remote,
                      {2982,13},
                      {atom,{2982,9},sofs},
                      {atom,{2982,14},rel2fam}},
                  [{var,{2982,22},'S1'}]}},
          {debug_line,2983,1027},
          {call,
              {2983,5},
              {remote,
                  {2983,9},
                  {atom,{2983,5},sofs},
                  {atom,{2983,10},to_external}},
              [{var,{2983,22},'S'}]}]}]}.
{attribute,
    {2989,2},
    spec,
    {{compile,3},
     [{type,
          {2989,14},
          'fun',
          [{type,
               {2989,14},
               product,
               [{remote_type,
                    {2989,15},
                    [{atom,{2989,15},file},{atom,{2989,20},filename},[]]},
                {var,{2989,32},'_'},
                {type,{2989,35},record,[{atom,{2989,36},options}]}]},
           {type,
               {2989,50},
               union,
               [{atom,{2989,50},ok},{atom,{2989,57},error}]}]}]}}.
{function,
    {2991,1},
    compile,3,
    [{clause,
         {2991,1},
         [{var,{2991,1},'_'},{var,{2991,1},'_'},{var,{2991,1},'_'}],
         [[{call,
               {2991,1},
               {remote,
                   {2991,1},
                   {atom,{2991,1},fake},
                   {atom,{2991,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2991,1028},{atom,{2991,1},ignore}]},
     {clause,
         {2991,1},
         [{var,{2991,9},'File0'},
          {var,{2991,16},'_OutFile'},
          {var,{2991,26},'Options'}],
         [],
         [{debug_line,2992,1029},
          {call,{2992,5},{atom,{2992,5},pre_load},[]},
          {debug_line,2993,1030},
          {match,
              {2993,5},
              {var,{2993,5},'File'},
              {call,
                  {2993,12},
                  {atom,{2993,12},shorten_filename},
                  [{var,{2993,29},'File0'}]}},
          {debug_line,2994,1031},
          {'case',
              {2994,5},
              {call,
                  {2994,10},
                  {atom,{2994,10},file},
                  [{var,{2994,15},'File'},
                   {block,0,
                       [{call,
                            {2994,21},
                            {atom,{2994,21},make_erl_options},
                            [{var,{2994,38},'Options'}]}]}]},
              [{clause,
                   {2995,2},
                   [{tuple,
                        {2995,2},
                        [{atom,{2995,3},ok},{var,{2995,6},'_Mod'}]}],
                   [],
                   [{debug_line,2995,1032},{atom,{2995,15},ok}]},
               {clause,
                   {2996,2},
                   [{var,{2996,2},'Other'}],
                   [],
                   [{debug_line,2996,1033},{var,{2996,11},'Other'}]}]}]}]}.
{attribute,
    {3000,2},
    spec,
    {{compile_asm,3},
     [{type,
          {3000,18},
          'fun',
          [{type,
               {3000,18},
               product,
               [{remote_type,
                    {3000,19},
                    [{atom,{3000,19},file},{atom,{3000,24},filename},[]]},
                {var,{3000,36},'_'},
                {type,{3000,39},record,[{atom,{3000,40},options}]}]},
           {type,
               {3000,54},
               union,
               [{atom,{3000,54},ok},{atom,{3000,61},error}]}]}]}}.
{function,
    {3002,1},
    compile_asm,3,
    [{clause,
         {3002,1},
         [{var,{3002,1},'_'},{var,{3002,1},'_'},{var,{3002,1},'_'}],
         [[{call,
               {3002,1},
               {remote,
                   {3002,1},
                   {atom,{3002,1},fake},
                   {atom,{3002,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3002,1034},{atom,{3002,1},ignore}]},
     {clause,
         {3002,1},
         [{var,{3002,13},'File0'},
          {var,{3002,20},'_OutFile'},
          {var,{3002,30},'Opts'}],
         [],
         [{debug_line,3003,1035},
          {match,
              {3003,5},
              {var,{3003,5},'File'},
              {call,
                  {3003,12},
                  {atom,{3003,12},shorten_filename},
                  [{var,{3003,29},'File0'}]}},
          {debug_line,3004,1036},
          {'case',
              {3004,5},
              {call,
                  {3004,10},
                  {atom,{3004,10},file},
                  [{var,{3004,15},'File'},
                   {block,0,
                       [{cons,
                            {3004,21},
                            {atom,{3004,22},from_asm},
                            {call,
                                {3004,31},
                                {atom,{3004,31},make_erl_options},
                                [{var,{3004,48},'Opts'}]}}]}]},
              [{clause,
                   {3005,2},
                   [{tuple,
                        {3005,2},
                        [{atom,{3005,3},ok},{var,{3005,6},'_Mod'}]}],
                   [],
                   [{debug_line,3005,1037},{atom,{3005,15},ok}]},
               {clause,
                   {3006,2},
                   [{var,{3006,2},'Other'}],
                   [],
                   [{debug_line,3006,1038},{var,{3006,11},'Other'}]}]}]}]}.
{attribute,
    {3010,2},
    spec,
    {{compile_core,3},
     [{type,
          {3010,19},
          'fun',
          [{type,
               {3010,19},
               product,
               [{remote_type,
                    {3010,20},
                    [{atom,{3010,20},file},{atom,{3010,25},filename},[]]},
                {var,{3010,37},'_'},
                {type,{3010,40},record,[{atom,{3010,41},options}]}]},
           {type,
               {3010,55},
               union,
               [{atom,{3010,55},ok},{atom,{3010,62},error}]}]}]}}.
{function,
    {3012,1},
    compile_core,3,
    [{clause,
         {3012,1},
         [{var,{3012,1},'_'},{var,{3012,1},'_'},{var,{3012,1},'_'}],
         [[{call,
               {3012,1},
               {remote,
                   {3012,1},
                   {atom,{3012,1},fake},
                   {atom,{3012,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3012,1039},{atom,{3012,1},ignore}]},
     {clause,
         {3012,1},
         [{var,{3012,14},'File0'},
          {var,{3012,21},'_OutFile'},
          {var,{3012,31},'Opts'}],
         [],
         [{debug_line,3013,1040},
          {match,
              {3013,5},
              {var,{3013,5},'File'},
              {call,
                  {3013,12},
                  {atom,{3013,12},shorten_filename},
                  [{var,{3013,29},'File0'}]}},
          {debug_line,3014,1041},
          {'case',
              {3014,5},
              {call,
                  {3014,10},
                  {atom,{3014,10},file},
                  [{var,{3014,15},'File'},
                   {block,0,
                       [{cons,
                            {3014,21},
                            {atom,{3014,22},from_core},
                            {call,
                                {3014,32},
                                {atom,{3014,32},make_erl_options},
                                [{var,{3014,49},'Opts'}]}}]}]},
              [{clause,
                   {3015,2},
                   [{tuple,
                        {3015,2},
                        [{atom,{3015,3},ok},{var,{3015,6},'_Mod'}]}],
                   [],
                   [{debug_line,3015,1042},{atom,{3015,15},ok}]},
               {clause,
                   {3016,2},
                   [{var,{3016,2},'Other'}],
                   [],
                   [{debug_line,3016,1043},{var,{3016,11},'Other'}]}]}]}]}.
{attribute,
    {3020,2},
    spec,
    {{compile_abstr,3},
     [{type,
          {3020,20},
          'fun',
          [{type,
               {3020,20},
               product,
               [{remote_type,
                    {3020,21},
                    [{atom,{3020,21},file},{atom,{3020,26},filename},[]]},
                {var,{3020,38},'_'},
                {type,{3020,41},record,[{atom,{3020,42},options}]}]},
           {type,
               {3020,56},
               union,
               [{atom,{3020,56},ok},{atom,{3020,63},error}]}]}]}}.
{function,
    {3022,1},
    compile_abstr,3,
    [{clause,
         {3022,1},
         [{var,{3022,1},'_'},{var,{3022,1},'_'},{var,{3022,1},'_'}],
         [[{call,
               {3022,1},
               {remote,
                   {3022,1},
                   {atom,{3022,1},fake},
                   {atom,{3022,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3022,1044},{atom,{3022,1},ignore}]},
     {clause,
         {3022,1},
         [{var,{3022,15},'File0'},
          {var,{3022,22},'_OutFile'},
          {var,{3022,32},'Opts'}],
         [],
         [{debug_line,3023,1045},
          {match,
              {3023,5},
              {var,{3023,5},'File'},
              {call,
                  {3023,12},
                  {atom,{3023,12},shorten_filename},
                  [{var,{3023,29},'File0'}]}},
          {debug_line,3024,1046},
          {'case',
              {3024,5},
              {call,
                  {3024,10},
                  {atom,{3024,10},file},
                  [{var,{3024,15},'File'},
                   {block,0,
                       [{cons,
                            {3024,21},
                            {atom,{3024,22},from_abstr},
                            {call,
                                {3024,33},
                                {atom,{3024,33},make_erl_options},
                                [{var,{3024,50},'Opts'}]}}]}]},
              [{clause,
                   {3025,2},
                   [{tuple,
                        {3025,2},
                        [{atom,{3025,3},ok},{var,{3025,6},'_Mod'}]}],
                   [],
                   [{debug_line,3025,1047},{atom,{3025,15},ok}]},
               {clause,
                   {3026,2},
                   [{var,{3026,2},'Other'}],
                   [],
                   [{debug_line,3026,1048},{var,{3026,11},'Other'}]}]}]}]}.
{function,
 {3029,1},
 shorten_filename,1,
 [{clause,
   {3029,1},
   [{var,{3029,1},'_'}],
   [[{call,
      {3029,1},
      {remote,{3029,1},{atom,{3029,1},fake},{atom,{3029,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3029,1049},{atom,{3029,1},ignore}]},
  {clause,
   {3029,1},
   [{var,{3029,18},'Name0'}],
   [],
   [{debug_line,3030,1050},
    {match,
     {3030,5},
     {tuple,{3030,5},[{atom,{3030,6},ok},{var,{3030,9},'Cwd'}]},
     {call,
      {3030,16},
      {remote,{3030,20},{atom,{3030,16},file},{atom,{3030,21},get_cwd}},
      []}},
    {debug_line,3031,1051},
    {'case',
     {3031,5},
     {call,
      {3031,10},
      {remote,{3031,15},{atom,{3031,10},lists},{atom,{3031,16},prefix}},
      [{var,{3031,23},'Cwd'},{var,{3031,28},'Name0'}]},
     [{clause,
       {3032,2},
       [{atom,{3032,2},false}],
       [],
       [{debug_line,3032,1052},{var,{3032,11},'Name0'}]},
      {clause,
       {3033,2},
       [{atom,{3033,2},true}],
       [],
       [{debug_line,3034,1053},
        {'case',
         {3034,6},
         {call,
          {3034,11},
          {remote,{3034,16},{atom,{3034,11},lists},{atom,{3034,17},nthtail}},
          [{block,0,
            [{call,
              {3034,25},
              {remote,
               {3034,25},
               {atom,{3034,25},erlang},
               {atom,{3034,25},length}},
              [{var,{3034,32},'Cwd'}]}]},
           {var,{3034,38},'Name0'}]},
         [{clause,
           {3035,3},
           [{op,{3035,6},'++',{string,{3035,3},"/"},{var,{3035,8},'N'}}],
           [],
           [{debug_line,3035,1054},{var,{3035,13},'N'}]},
          {clause,
           {3036,3},
           [{var,{3036,3},'N'}],
           [],
           [{debug_line,3036,1055},{var,{3036,8},'N'}]}]}]}]}]}]}.
{function,
 {3042,1},
 make_erl_options,1,
 [{clause,
   {3042,1},
   [{var,{3042,1},'_'}],
   [[{call,
      {3042,1},
      {remote,{3042,1},{atom,{3042,1},fake},{atom,{3042,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3042,1056},{atom,{3042,1},ignore}]},
  {clause,
   {3042,1},
   [{var,{3042,18},'Opts'}],
   [],
   [{debug_line,3043,1057},
    {match,
     {3043,5},
     {tuple,
      {3043,5},
      [{atom,{3043,5},options},
       {var,{3043,23},'Includes'},
       {var,{3045,14},'Outdir'},
       {var,{3043,5},'_'},
       {var,{3044,15},'Defines'},
       {var,{3046,15},'Warning'},
       {var,{3047,15},'Verbose'},
       {var,{3043,5},'_'},
       {var,{3048,16},'Specific'},
       {var,{3043,5},'_'},
       {var,{3049,11},'Cwd'}]},
     {var,{3049,18},'Opts'}},
    {debug_line,3050,1058},
    {match,
     {3050,5},
     {var,{3050,5},'Options'},
     {op,
      {3050,36},
      '++',
      {lc,
       {3050,15},
       {block,0,[{atom,{3050,16},verbose}]},
       [{block,0,[{atom,{3050,27},true}]},{var,{3050,27},'Verbose'}]},
      {op,
       {3051,37},
       '++',
       {lc,
        {3051,2},
        {block,0,[{debug_line,3051,1059},{atom,{3051,3},report_warnings}]},
        [{block,0,[{atom,{3051,30},true}]},
         {op,
          {3051,30},
          '=/=',
          {var,{3051,22},'Warning'},
          {integer,{3051,34},0}}]},
       {call,
        {3052,2},
        {remote,{3052,2},{atom,{3052,2},lists},{atom,{3052,2},map}},
        [{block,0,
          [{debug_line,3052,1060},
           {'fun',
            {3052,6},
            {clauses,
             [{clause,
               {3052,10},
               [{tuple,
                 {3052,11},
                 [{var,{3052,12},'Name'},{var,{3052,17},'Value'}]}],
               [],
               [{debug_line,3053,1061},
                {tuple,
                 {3053,7},
                 [{atom,{3053,8},d},
                  {var,{3053,10},'Name'},
                  {var,{3053,15},'Value'}]}]},
              {clause,
               {3054,3},
               [{var,{3054,4},'Name'}],
               [],
               [{debug_line,3055,1062},
                {tuple,
                 {3055,7},
                 [{atom,{3055,8},d},{var,{3055,10},'Name'}]}]}]}}]},
         {var,{3056,18},'Defines'}]}}}},
    {debug_line,3057,1063},
    {op,
     {3057,13},
     '++',
     {var,{3057,5},'Options'},
     {op,
      {3058,48},
      '++',
      {cons,
       {3057,16},
       {atom,{3057,17},report_errors},
       {cons,
        {3057,32},
        {tuple,{3057,32},[{atom,{3057,33},cwd},{var,{3057,38},'Cwd'}]},
        {cons,
         {3057,44},
         {tuple,{3057,44},[{atom,{3057,45},outdir},{var,{3057,53},'Outdir'}]},
         {lc,
          {3058,17},
          {block,0,
           [{debug_line,3058,1064},
            {tuple,{3058,18},[{atom,{3058,19},i},{var,{3058,22},'Dir'}]}]},
          [{block,0,[{atom,{3058,37},true}]},
           {generate,
            {3058,34},
            {var,{3058,30},'Dir'},
            {var,{3058,37},'Includes'}}]}}}},
      {var,{3058,51},'Specific'}}}]}]}.
{function,
 {3060,1},
 pre_load,0,
 [{clause,
   {3060,1},
   [],
   [[{call,
      {3060,1},
      {remote,{3060,1},{atom,{3060,1},fake},{atom,{3060,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3060,1065},{atom,{3060,1},ignore}]},
  {clause,
   {3060,1},
   [],[],
   [{debug_line,3061,1066},
    {match,
     {3061,5},
     {var,{3061,5},'L'},
     {cons,
      {3061,9},
      {atom,{3061,10},beam_a},
      {cons,
       {3062,3},
       {atom,{3062,3},beam_asm},
       {cons,
        {3063,3},
        {atom,{3063,3},beam_block},
        {cons,
         {3064,3},
         {atom,{3064,3},beam_call_types},
         {cons,
          {3065,3},
          {atom,{3065,3},beam_clean},
          {cons,
           {3066,10},
           {atom,{3066,10},beam_core_to_ssa},
           {cons,
            {3067,3},
            {atom,{3067,3},beam_dict},
            {cons,
             {3068,3},
             {atom,{3068,3},beam_digraph},
             {cons,
              {3069,6},
              {atom,{3069,6},beam_doc},
              {cons,
               {3070,3},
               {atom,{3070,3},beam_flatten},
               {cons,
                {3071,3},
                {atom,{3071,3},beam_jump},
                {cons,
                 {3072,3},
                 {atom,{3072,3},beam_opcodes},
                 {cons,
                  {3073,3},
                  {atom,{3073,3},beam_ssa},
                  {cons,
                   {3074,3},
                   {atom,{3074,3},beam_ssa_alias},
                   {cons,
                    {3075,3},
                    {atom,{3075,3},beam_ssa_bc_size},
                    {cons,
                     {3076,3},
                     {atom,{3076,3},beam_ssa_bool},
                     {cons,
                      {3077,3},
                      {atom,{3077,3},beam_ssa_bsm},
                      {cons,
                       {3078,3},
                       {atom,{3078,3},beam_ssa_codegen},
                       {cons,
                        {3079,3},
                        {atom,{3079,3},beam_ssa_dead},
                        {cons,
                         {3080,10},
                         {atom,{3080,10},beam_ssa_destructive_update},
                         {cons,
                          {3081,3},
                          {atom,{3081,3},beam_ssa_opt},
                          {cons,
                           {3082,3},
                           {atom,{3082,3},beam_ssa_pre_codegen},
                           {cons,
                            {3083,3},
                            {atom,{3083,3},beam_ssa_recv},
                            {cons,
                             {3084,3},
                             {atom,{3084,3},beam_ssa_share},
                             {cons,
                              {3085,3},
                              {atom,{3085,3},beam_ssa_ss},
                              {cons,
                               {3086,3},
                               {atom,{3086,3},beam_ssa_throw},
                               {cons,
                                {3087,3},
                                {atom,{3087,3},beam_ssa_type},
                                {cons,
                                 {3088,3},
                                 {atom,{3088,3},beam_trim},
                                 {cons,
                                  {3089,3},
                                  {atom,{3089,3},beam_types},
                                  {cons,
                                   {3090,3},
                                   {atom,{3090,3},beam_utils},
                                   {cons,
                                    {3091,3},
                                    {atom,{3091,3},beam_validator},
                                    {cons,
                                     {3092,3},
                                     {atom,{3092,3},beam_z},
                                     {cons,
                                      {3093,3},
                                      {atom,{3093,3},cerl},
                                      {cons,
                                       {3094,3},
                                       {atom,{3094,3},cerl_clauses},
                                       {cons,
                                        {3095,3},
                                        {atom,{3095,3},cerl_trees},
                                        {cons,
                                         {3096,3},
                                         {atom,{3096,3},core_lib},
                                         {cons,
                                          {3097,3},
                                          {atom,{3097,3},epp},
                                          {cons,
                                           {3098,3},
                                           {atom,{3098,3},erl_bifs},
                                           {cons,
                                            {3099,3},
                                            {atom,{3099,3},erl_expand_records},
                                            {cons,
                                             {3100,10},
                                             {atom,{3100,10},erl_features},
                                             {cons,
                                              {3101,3},
                                              {atom,{3101,3},erl_lint},
                                              {cons,
                                               {3102,3},
                                               {atom,{3102,3},erl_parse},
                                               {cons,
                                                {3103,3},
                                                {atom,{3103,3},erl_scan},
                                                {cons,
                                                 {3104,3},
                                                 {atom,
                                                  {3104,3},
                                                  sys_core_alias},
                                                 {cons,
                                                  {3105,3},
                                                  {atom,{3105,3},sys_core_bsm},
                                                  {cons,
                                                   {3106,3},
                                                   {atom,
                                                    {3106,3},
                                                    sys_core_fold},
                                                   {cons,
                                                    {3107,3},
                                                    {atom,{3107,3},v3_core},
                                                    {nil,
                                                     {3107,
                                                      10}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},
    {debug_line,3108,1067},
    {match,
     {3108,5},
     {var,{3108,5},'_'},
     {call,
      {3108,9},
      {remote,
       {3108,13},
       {atom,{3108,9},code},
       {atom,{3108,14},ensure_modules_loaded}},
      [{var,{3108,36},'L'}]}},
    {debug_line,3109,1068},
    {atom,{3109,5},ok}]}]}.
{eof,{3110,1}}.
