{attribute,{1,1},file,{"beam_z.erl",1}}.
{attribute,{23,2},module,beam_z}.
{attribute,{26,2},export,[{module,2}]}.
{attribute,{28,2},import,{lists,[{dropwhile,2},{sort,1}]}}.
{attribute,
    {30,2},
    spec,
    {{module,2},
     [{type,
          {30,13},
          'fun',
          [{type,
               {30,13},
               product,
               [{remote_type,
                    {30,14},
                    [{atom,{30,14},beam_utils},{atom,{30,25},module_code},[]]},
                {type,
                    {30,40},
                    list,
                    [{remote_type,
                         {30,41},
                         [{atom,{30,41},compile},
                          {atom,{30,49},option},
                          []]}]}]},
           {type,
               {31,21},
               tuple,
               [{atom,{31,22},ok},
                {remote_type,
                    {31,27},
                    [{atom,{31,27},beam_asm},
                     {atom,{31,36},module_code},
                     []]}]}]}]}}.
{function,
    {33,1},
    module,2,
    [{clause,
         {33,1},
         [{var,{33,1},'_'},{var,{33,1},'_'}],
         [[{call,
               {33,1},
               {remote,
                   {33,1},
                   {atom,{33,1},fake},
                   {atom,{33,1},is_beam_bif_info}},
               []}]],
         [{debug_line,33,1},{atom,{33,1},ignore}]},
     {clause,
         {33,1},
         [{tuple,
              {33,8},
              [{var,{33,9},'Mod'},
               {var,{33,13},'Exp'},
               {var,{33,17},'Attr'},
               {var,{33,22},'Fs0'},
               {var,{33,26},'Lc'}]},
          {var,{33,31},'_Opts'}],
         [],
         [{debug_line,34,2},
          {match,
              {34,5},
              {var,{34,5},'Fs'},
              {lc,{34,10},
                  {block,0,
                      [{call,
                           {34,11},
                           {atom,{34,11},function},
                           [{var,{34,20},'F'}]}]},
                  [{block,0,[{atom,{34,31},true}]},
                   {generate,{34,28},{var,{34,26},'F'},{var,{34,31},'Fs0'}}]}},
          {debug_line,35,3},
          {tuple,
              {35,5},
              [{atom,{35,6},ok},
               {tuple,
                   {35,9},
                   [{var,{35,10},'Mod'},
                    {var,{35,14},'Exp'},
                    {var,{35,18},'Attr'},
                    {var,{35,23},'Fs'},
                    {var,{35,26},'Lc'}]}]}]}]}.
{function,
    {37,1},
    function,1,
    [{clause,
         {37,1},
         [{var,{37,1},'_'}],
         [[{call,
               {37,1},
               {remote,
                   {37,1},
                   {atom,{37,1},fake},
                   {atom,{37,1},is_beam_bif_info}},
               []}]],
         [{debug_line,37,4},{atom,{37,1},ignore}]},
     {clause,
         {37,1},
         [{tuple,
              {37,10},
              [{atom,{37,11},function},
               {var,{37,20},'Name'},
               {var,{37,25},'Arity'},
               {var,{37,31},'CLabel'},
               {var,{37,38},'Is0'}]}],
         [],
         [{debug_line,38,5},
          {'try',
              {38,5},
              [{debug_line,39,6},
               {match,
                   {39,2},
                   {var,{39,2},'Is1'},
                   {call,
                       {39,8},
                       {atom,{39,8},undo_renames},
                       [{var,{39,21},'Is0'}]}},
               {debug_line,40,7},
               {match,
                   {40,9},
                   {var,{40,9},'Is'},
                   {call,
                       {40,14},
                       {atom,{40,14},remove_redundant_lines},
                       [{var,{40,37},'Is1'}]}},
               {debug_line,41,8},
               {tuple,
                   {41,2},
                   [{atom,{41,3},function},
                    {var,{41,12},'Name'},
                    {var,{41,17},'Arity'},
                    {var,{41,23},'CLabel'},
                    {var,{41,30},'Is'}]}],
              [],
              [{clause,
                   {43,9},
                   [{tuple,
                        {43,9},
                        [{var,{43,9},'Class'},
                         {var,{43,15},'Error'},
                         {var,{43,21},'Stack'}]}],
                   [],
                   [{debug_line,44,9},
                    {call,
                        {44,6},
                        {remote,{44,8},{atom,{44,6},io},{atom,{44,9},fwrite}},
                        [{block,0,[{string,{44,16},"Function: ~w/~w\n"}]},
                         {block,0,
                             [{cons,
                                  {44,37},
                                  {var,{44,38},'Name'},
                                  {cons,
                                      {44,43},
                                      {var,{44,43},'Arity'},
                                      {nil,{44,48}}}}]}]},
                    {debug_line,45,10},
                    {call,
                        {45,6},
                        {remote,
                            {45,12},
                            {atom,{45,6},erlang},
                            {atom,{45,13},raise}},
                        [{var,{45,19},'Class'},
                         {var,{45,26},'Error'},
                         {var,{45,33},'Stack'}]}]}],
              []}]}]}.
{function,
 {48,1},
 undo_renames,1,
 [{clause,
   {48,1},
   [{var,{48,1},'_'}],
   [[{call,
      {48,1},
      {remote,{48,1},{atom,{48,1},fake},{atom,{48,1},is_beam_bif_info}},
      []}]],
   [{debug_line,48,11},{atom,{48,1},ignore}]},
  {clause,
   {48,1},
   [{cons,
     {48,14},
     {tuple,
      {48,15},
      [{atom,{48,16},call_ext},{integer,{48,25},2},{atom,{48,27},send}]},
     {var,{48,33},'Is'}}],
   [],
   [{debug_line,49,12},
    {cons,
     {49,5},
     {atom,{49,6},send},
     {call,{49,11},{atom,{49,11},undo_renames},[{var,{49,24},'Is'}]}}]},
  {clause,
   {51,1},
   [{cons,
     {51,14},
     {tuple,{51,15},[{atom,{51,16},apply},{var,{51,22},'A'}]},
     {cons,
      {51,25},
      {tuple,{51,25},[{atom,{51,26},deallocate},{var,{51,37},'N'}]},
      {cons,{51,40},{atom,{51,40},return},{var,{51,47},'Is'}}}}],
   [],
   [{debug_line,52,13},
    {cons,
     {52,5},
     {tuple,
      {52,6},
      [{atom,{52,7},apply_last},{var,{52,18},'A'},{var,{52,20},'N'}]},
     {call,{52,23},{atom,{52,23},undo_renames},[{var,{52,36},'Is'}]}}]},
  {clause,
   {54,1},
   [{cons,
     {54,14},
     {tuple,{54,15},[{atom,{54,16},call},{var,{54,21},'A'},{var,{54,23},'F'}]},
     {cons,
      {54,26},
      {tuple,
       {54,26},
       [{atom,{54,27},'%'},
        {tuple,
         {54,31},
         [{atom,{54,32},var_info},
          {tuple,{54,41},[{atom,{54,42},x},{integer,{54,44},0}]},
          {var,{54,47},'_'}]}]},
      {cons,
       {54,51},
       {tuple,{54,51},[{atom,{54,52},deallocate},{var,{54,63},'N'}]},
       {cons,{54,66},{atom,{54,66},return},{var,{54,73},'Is'}}}}}],
   [],
   [{debug_line,56,14},
    {cons,
     {56,5},
     {tuple,
      {56,6},
      [{atom,{56,7},call_last},
       {var,{56,17},'A'},
       {var,{56,19},'F'},
       {var,{56,21},'N'}]},
     {call,{56,26},{atom,{56,26},undo_renames},[{var,{56,39},'Is'}]}}]},
  {clause,
   {57,1},
   [{cons,
     {57,14},
     {tuple,{57,15},[{atom,{57,16},call},{var,{57,21},'A'},{var,{57,23},'F'}]},
     {cons,
      {57,26},
      {tuple,{57,26},[{atom,{57,27},deallocate},{var,{57,38},'N'}]},
      {cons,{57,41},{atom,{57,41},return},{var,{57,48},'Is'}}}}],
   [],
   [{debug_line,58,15},
    {cons,
     {58,5},
     {tuple,
      {58,6},
      [{atom,{58,7},call_last},
       {var,{58,17},'A'},
       {var,{58,19},'F'},
       {var,{58,21},'N'}]},
     {call,{58,26},{atom,{58,26},undo_renames},[{var,{58,39},'Is'}]}}]},
  {clause,
   {60,1},
   [{cons,
     {60,14},
     {tuple,
      {60,15},
      [{atom,{60,16},call_ext},{var,{60,25},'A'},{var,{60,27},'F'}]},
     {cons,
      {60,30},
      {tuple,
       {60,30},
       [{atom,{60,31},'%'},
        {tuple,
         {60,35},
         [{atom,{60,36},var_info},
          {tuple,{60,45},[{atom,{60,46},x},{integer,{60,48},0}]},
          {var,{60,51},'_'}]}]},
      {cons,
       {60,55},
       {tuple,{60,55},[{atom,{60,56},deallocate},{var,{60,67},'N'}]},
       {cons,{60,70},{atom,{60,70},return},{var,{60,77},'Is'}}}}}],
   [],
   [{debug_line,61,16},
    {cons,
     {61,5},
     {tuple,
      {61,6},
      [{atom,{61,7},call_ext_last},
       {var,{61,21},'A'},
       {var,{61,23},'F'},
       {var,{61,25},'N'}]},
     {call,{61,30},{atom,{61,30},undo_renames},[{var,{61,43},'Is'}]}}]},
  {clause,
   {62,1},
   [{cons,
     {62,14},
     {tuple,
      {62,15},
      [{atom,{62,16},call_ext},{var,{62,25},'A'},{var,{62,27},'F'}]},
     {cons,
      {62,30},
      {tuple,{62,30},[{atom,{62,31},deallocate},{var,{62,42},'N'}]},
      {cons,{62,45},{atom,{62,45},return},{var,{62,52},'Is'}}}}],
   [],
   [{debug_line,63,17},
    {cons,
     {63,5},
     {tuple,
      {63,6},
      [{atom,{63,7},call_ext_last},
       {var,{63,21},'A'},
       {var,{63,23},'F'},
       {var,{63,25},'N'}]},
     {call,{63,30},{atom,{63,30},undo_renames},[{var,{63,43},'Is'}]}}]},
  {clause,
   {65,1},
   [{cons,
     {65,14},
     {tuple,{65,15},[{atom,{65,16},call},{var,{65,21},'A'},{var,{65,23},'F'}]},
     {cons,
      {65,26},
      {tuple,
       {65,26},
       [{atom,{65,27},'%'},
        {tuple,
         {65,31},
         [{atom,{65,32},var_info},
          {tuple,{65,41},[{atom,{65,42},x},{integer,{65,44},0}]},
          {var,{65,47},'_'}]}]},
      {cons,{65,51},{atom,{65,51},return},{var,{65,58},'Is'}}}}],
   [],
   [{debug_line,66,18},
    {cons,
     {66,5},
     {tuple,
      {66,6},
      [{atom,{66,7},call_only},{var,{66,17},'A'},{var,{66,19},'F'}]},
     {call,{66,24},{atom,{66,24},undo_renames},[{var,{66,37},'Is'}]}}]},
  {clause,
   {67,1},
   [{cons,
     {67,14},
     {tuple,{67,15},[{atom,{67,16},call},{var,{67,21},'A'},{var,{67,23},'F'}]},
     {cons,{67,26},{atom,{67,26},return},{var,{67,33},'Is'}}}],
   [],
   [{debug_line,68,19},
    {cons,
     {68,5},
     {tuple,
      {68,6},
      [{atom,{68,7},call_only},{var,{68,17},'A'},{var,{68,19},'F'}]},
     {call,{68,22},{atom,{68,22},undo_renames},[{var,{68,35},'Is'}]}}]},
  {clause,
   {70,1},
   [{cons,
     {70,14},
     {tuple,
      {70,15},
      [{atom,{70,16},call_ext},{var,{70,25},'A'},{var,{70,27},'F'}]},
     {cons,
      {70,30},
      {tuple,
       {70,30},
       [{atom,{70,31},'%'},
        {tuple,
         {70,35},
         [{atom,{70,36},var_info},
          {tuple,{70,45},[{atom,{70,46},x},{integer,{70,48},0}]},
          {var,{70,51},'_'}]}]},
      {cons,{70,55},{atom,{70,55},return},{var,{70,62},'Is'}}}}],
   [],
   [{debug_line,71,20},
    {cons,
     {71,5},
     {tuple,
      {71,6},
      [{atom,{71,7},call_ext_only},{var,{71,21},'A'},{var,{71,23},'F'}]},
     {call,{71,28},{atom,{71,28},undo_renames},[{var,{71,41},'Is'}]}}]},
  {clause,
   {72,1},
   [{cons,
     {72,14},
     {tuple,
      {72,15},
      [{atom,{72,16},call_ext},{var,{72,25},'A'},{var,{72,27},'F'}]},
     {cons,{72,30},{atom,{72,30},return},{var,{72,37},'Is'}}}],
   [],
   [{debug_line,73,21},
    {cons,
     {73,5},
     {tuple,
      {73,6},
      [{atom,{73,7},call_ext_only},{var,{73,21},'A'},{var,{73,23},'F'}]},
     {call,{73,26},{atom,{73,26},undo_renames},[{var,{73,39},'Is'}]}}]},
  {clause,
   {75,1},
   [{cons,
     {75,14},
     {match,
      {75,15},
      {tuple,
       {75,15},
       [{atom,{75,16},bif},
        {atom,{75,20},raise},
        {var,{75,26},'_'},
        {var,{75,28},'_'},
        {var,{75,30},'_'}]},
      {var,{75,33},'I'}},
     {var,{75,35},'Is0'}}],
   [],
   [{debug_line,81,22},
    {match,
     {81,5},
     {var,{81,5},'Is'},
     {call,
      {81,10},
      {remote,{81,10},{atom,{81,10},lists},{atom,{81,10},dropwhile}},
      [{block,0,
        [{'fun',
          {81,20},
          {clauses,
           [{clause,
             {81,23},
             [{tuple,{81,24},[{atom,{81,25},label},{var,{81,31},'_'}]}],
             [],
             [{atom,{81,38},false}]},
            {clause,
             {82,9},
             [{var,{82,10},'_'}],
             [],
             [{debug_line,82,23},{atom,{82,16},true}]}]}}]},
       {var,{83,11},'Is0'}]}},
    {debug_line,84,24},
    {cons,
     {84,5},
     {var,{84,6},'I'},
     {call,{84,8},{atom,{84,8},undo_renames},[{var,{84,21},'Is'}]}}]},
  {clause,
   {85,1},
   [{cons,
     {85,14},
     {tuple,
      {85,15},
      [{atom,{85,16},get_hd},{var,{85,23},'Src'},{var,{85,27},'Hd'}]},
     {cons,
      {85,31},
      {tuple,
       {85,31},
       [{atom,{85,32},get_tl},{var,{85,39},'Src'},{var,{85,43},'Tl'}]},
      {var,{85,47},'Is'}}}],
   [[{op,{85,61},'=/=',{var,{85,57},'Src'},{var,{85,65},'Hd'}}]],
   [{debug_line,86,25},
    {call,
     {86,5},
     {atom,{86,5},get_list},
     [{var,{86,14},'Src'},
      {var,{86,19},'Hd'},
      {var,{86,23},'Tl'},
      {var,{86,27},'Is'}]}]},
  {clause,
   {87,1},
   [{cons,
     {87,14},
     {tuple,
      {87,15},
      [{atom,{87,16},get_tl},{var,{87,23},'Src'},{var,{87,27},'Tl'}]},
     {cons,
      {87,31},
      {tuple,
       {87,31},
       [{atom,{87,32},get_hd},{var,{87,39},'Src'},{var,{87,43},'Hd'}]},
      {var,{87,47},'Is'}}}],
   [[{op,{87,61},'=/=',{var,{87,57},'Src'},{var,{87,65},'Tl'}}]],
   [{debug_line,88,26},
    {call,
     {88,5},
     {atom,{88,5},get_list},
     [{var,{88,14},'Src'},
      {var,{88,19},'Hd'},
      {var,{88,23},'Tl'},
      {var,{88,27},'Is'}]}]},
  {clause,
   {89,1},
   [{cons,{89,14},{var,{89,15},'I'},{var,{89,17},'Is'}}],
   [],
   [{debug_line,90,27},
    {cons,
     {90,5},
     {call,{90,6},{atom,{90,6},undo_rename},[{var,{90,18},'I'}]},
     {call,{90,21},{atom,{90,21},undo_renames},[{var,{90,34},'Is'}]}}]},
  {clause,{91,1},[{nil,{91,14}}],[],[{debug_line,91,28},{nil,{91,21}}]}]}.
{function,
    {93,1},
    get_list,4,
    [{clause,
         {93,1},
         [{var,{93,1},'_'},{var,{93,1},'_'},{var,{93,1},'_'},{var,{93,1},'_'}],
         [[{call,
               {93,1},
               {remote,
                   {93,1},
                   {atom,{93,1},fake},
                   {atom,{93,1},is_beam_bif_info}},
               []}]],
         [{debug_line,93,29},{atom,{93,1},ignore}]},
     {clause,
         {93,1},
         [{var,{93,10},'Src'},
          {var,{93,15},'Hd'},
          {var,{93,19},'Tl'},
          {match,
              {93,23},
              {cons,
                  {93,23},
                  {tuple,
                      {93,24},
                      [{atom,{93,25},swap},
                       {var,{93,30},'R1'},
                       {var,{93,33},'R2'}]},
                  {var,{93,37},'Is'}},
              {var,{93,41},'Is0'}}],
         [],
         [{debug_line,94,30},
          {'case',
              {94,5},
              {op,{94,24},
                  '=:=',
                  {call,
                      {94,10},
                      {remote,
                          {94,10},
                          {atom,{94,10},lists},
                          {atom,{94,10},sort}},
                      [{block,0,
                           [{cons,
                                {94,15},
                                {var,{94,16},'Hd'},
                                {cons,
                                    {94,19},
                                    {var,{94,19},'Tl'},
                                    {nil,{94,21}}}}]}]},
                  {call,
                      {94,28},
                      {remote,
                          {94,28},
                          {atom,{94,28},lists},
                          {atom,{94,28},sort}},
                      [{block,0,
                           [{cons,
                                {94,33},
                                {var,{94,34},'R1'},
                                {cons,
                                    {94,37},
                                    {var,{94,37},'R2'},
                                    {nil,{94,39}}}}]}]}},
              [{clause,
                   {95,9},
                   [{atom,{95,9},true}],
                   [],
                   [{debug_line,96,31},
                    {cons,
                        {96,13},
                        {tuple,
                            {96,14},
                            [{atom,{96,15},get_list},
                             {var,{96,24},'Src'},
                             {var,{96,28},'Tl'},
                             {var,{96,31},'Hd'}]},
                        {call,
                            {96,35},
                            {atom,{96,35},undo_renames},
                            [{var,{96,48},'Is'}]}}]},
               {clause,
                   {97,9},
                   [{atom,{97,9},false}],
                   [],
                   [{debug_line,98,32},
                    {cons,
                        {98,13},
                        {tuple,
                            {98,14},
                            [{atom,{98,15},get_list},
                             {var,{98,24},'Src'},
                             {var,{98,28},'Hd'},
                             {var,{98,31},'Tl'}]},
                        {call,
                            {98,35},
                            {atom,{98,35},undo_renames},
                            [{var,{98,48},'Is0'}]}}]}]}]},
     {clause,
         {100,1},
         [{var,{100,10},'Src'},
          {var,{100,15},'Hd'},
          {var,{100,19},'Tl'},
          {var,{100,23},'Is'}],
         [],
         [{debug_line,101,33},
          {cons,
              {101,5},
              {tuple,
                  {101,6},
                  [{atom,{101,7},get_list},
                   {var,{101,16},'Src'},
                   {var,{101,20},'Hd'},
                   {var,{101,23},'Tl'}]},
              {call,
                  {101,27},
                  {atom,{101,27},undo_renames},
                  [{var,{101,40},'Is'}]}}]}]}.
{function,
    {103,1},
    undo_rename,1,
    [{clause,
         {103,1},
         [{var,{103,1},'_'}],
         [[{call,
               {103,1},
               {remote,
                   {103,1},
                   {atom,{103,1},fake},
                   {atom,{103,1},is_beam_bif_info}},
               []}]],
         [{debug_line,103,34},{atom,{103,1},ignore}]},
     {clause,
         {103,1},
         [{tuple,
              {103,13},
              [{atom,{103,14},put_map},
               {var,{103,22},'Fail'},
               {atom,{103,27},assoc},
               {var,{103,33},'S'},
               {var,{103,35},'D'},
               {var,{103,37},'R'},
               {var,{103,39},'L'}]}],
         [],
         [{debug_line,104,35},
          {tuple,
              {104,5},
              [{atom,{104,6},put_map_assoc},
               {var,{104,20},'Fail'},
               {var,{104,25},'S'},
               {var,{104,27},'D'},
               {var,{104,29},'R'},
               {var,{104,31},'L'}]}]},
     {clause,
         {105,1},
         [{tuple,
              {105,13},
              [{atom,{105,14},put_map},
               {var,{105,22},'Fail'},
               {atom,{105,27},exact},
               {var,{105,33},'S'},
               {var,{105,35},'D'},
               {var,{105,37},'R'},
               {var,{105,39},'L'}]}],
         [],
         [{debug_line,106,36},
          {tuple,
              {106,5},
              [{atom,{106,6},put_map_exact},
               {var,{106,20},'Fail'},
               {var,{106,25},'S'},
               {var,{106,27},'D'},
               {var,{106,29},'R'},
               {var,{106,31},'L'}]}]},
     {clause,
         {107,1},
         [{tuple,
              {107,13},
              [{atom,{107,14},test},
               {atom,{107,19},has_map_fields},
               {var,{107,34},'Fail'},
               {cons,{107,39},{var,{107,40},'Src'},{var,{107,44},'List'}}]}],
         [],
         [{debug_line,108,37},
          {tuple,
              {108,5},
              [{atom,{108,6},test},
               {atom,{108,11},has_map_fields},
               {var,{108,26},'Fail'},
               {var,{108,31},'Src'},
               {tuple,
                   {108,35},
                   [{atom,{108,36},list},{var,{108,41},'List'}]}]}]},
     {clause,
         {109,1},
         [{tuple,
              {109,13},
              [{atom,{109,14},get_map_elements},
               {var,{109,31},'Fail'},
               {var,{109,36},'Src'},
               {tuple,
                   {109,40},
                   [{atom,{109,41},list},{var,{109,46},'List'}]}]}],
         [],
         [{debug_line,110,38},
          {tuple,
              {110,5},
              [{atom,{110,6},get_map_elements},
               {var,{110,23},'Fail'},
               {var,{110,28},'Src'},
               {tuple,
                   {110,32},
                   [{atom,{110,33},list},{var,{110,38},'List'}]}]}]},
     {clause,
         {111,1},
         [{tuple,
              {111,13},
              [{atom,{111,14},test},
               {atom,{111,19},is_eq_exact},
               {var,{111,31},'Fail'},
               {cons,
                   {111,36},
                   {var,{111,37},'Src'},
                   {cons,{111,41},{atom,{111,41},nil},{nil,{111,44}}}}]}],
         [],
         [{debug_line,112,39},
          {tuple,
              {112,5},
              [{atom,{112,6},test},
               {atom,{112,11},is_nil},
               {var,{112,18},'Fail'},
               {cons,{112,23},{var,{112,24},'Src'},{nil,{112,27}}}]}]},
     {clause,
         {113,1},
         [{tuple,
              {113,13},
              [{atom,{113,14},select},
               {var,{113,21},'I'},
               {var,{113,23},'Reg'},
               {var,{113,27},'Fail'},
               {var,{113,32},'List'}]}],
         [],
         [{debug_line,114,40},
          {tuple,
              {114,5},
              [{var,{114,6},'I'},
               {var,{114,8},'Reg'},
               {var,{114,12},'Fail'},
               {tuple,
                   {114,17},
                   [{atom,{114,18},list},{var,{114,23},'List'}]}]}]},
     {clause,
         {115,1},
         [{var,{115,13},'I'}],
         [],
         [{debug_line,115,41},{var,{115,19},'I'}]}]}.
{function,{123,1},
          remove_redundant_lines,1,
          [{clause,{123,1},
                   [{var,{123,1},'_'}],
                   [[{call,{123,1},
                           {remote,{123,1},
                                   {atom,{123,1},fake},
                                   {atom,{123,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,123,42},{atom,{123,1},ignore}]},
           {clause,{123,1},
                   [{var,{123,24},'Is'}],
                   [],
                   [{debug_line,124,43},
                    {call,{124,5},
                          {atom,{124,5},remove_redundant_lines_1},
                          [{var,{124,30},'Is'},{atom,{124,34},none}]}]}]}.
{function,
    {126,1},
    remove_redundant_lines_1,2,
    [{clause,
         {126,1},
         [{var,{126,1},'_'},{var,{126,1},'_'}],
         [[{call,
               {126,1},
               {remote,
                   {126,1},
                   {atom,{126,1},fake},
                   {atom,{126,1},is_beam_bif_info}},
               []}]],
         [{debug_line,126,44},{atom,{126,1},ignore}]},
     {clause,
         {126,1},
         [{cons,
              {126,26},
              {match,
                  {126,27},
                  {tuple,
                      {126,27},
                      [{atom,{126,28},debug_line},
                       {var,{126,39},'_'},
                       {var,{126,41},'_'},
                       {var,{126,43},'_'},
                       {var,{126,45},'_'}]},
                  {var,{126,48},'I'}},
              {var,{126,50},'Is'}},
          {var,{126,55},'_PrevLoc'}],
         [],
         [{debug_line,127,45},
          {cons,
              {127,5},
              {var,{127,6},'I'},
              {call,
                  {127,8},
                  {atom,{127,8},remove_redundant_lines_1},
                  [{var,{127,33},'Is'},{atom,{127,37},none}]}}]},
     {clause,
         {128,1},
         [{cons,
              {128,26},
              {match,
                  {128,27},
                  {tuple,
                      {128,27},
                      [{atom,{128,28},executable_line},
                       {var,{128,44},'_'},
                       {var,{128,46},'_'}]},
                  {var,{128,49},'I'}},
              {var,{128,51},'Is'}},
          {var,{128,56},'_PrevLoc'}],
         [],
         [{debug_line,129,46},
          {cons,
              {129,5},
              {var,{129,6},'I'},
              {call,
                  {129,8},
                  {atom,{129,8},remove_redundant_lines_1},
                  [{var,{129,33},'Is'},{atom,{129,37},none}]}}]},
     {clause,
         {130,1},
         [{cons,
              {130,26},
              {match,
                  {130,27},
                  {tuple,{130,27},[{atom,{130,28},line},{var,{130,33},'Loc'}]},
                  {var,{130,38},'I'}},
              {var,{130,40},'Is'}},
          {var,{130,45},'PrevLoc'}],
         [],
         [{debug_line,131,47},
          {'if',
              {131,5},
              [{clause,
                   {132,9},
                   [],
                   [[{op,{132,13},
                         '=:=',
                         {var,{132,9},'Loc'},
                         {var,{132,17},'PrevLoc'}}]],
                   [{debug_line,133,48},
                    {call,
                        {133,13},
                        {atom,{133,13},remove_redundant_lines_1},
                        [{var,{133,38},'Is'},{var,{133,42},'Loc'}]}]},
               {clause,
                   {134,9},
                   [],
                   [[{atom,{134,9},true}]],
                   [{debug_line,135,49},
                    {cons,
                        {135,13},
                        {var,{135,14},'I'},
                        {call,
                            {135,16},
                            {atom,{135,16},remove_redundant_lines_1},
                            [{var,{135,41},'Is'},{var,{135,45},'Loc'}]}}]}]}]},
     {clause,
         {137,1},
         [{cons,{137,26},{var,{137,27},'I'},{var,{137,29},'Is'}},
          {var,{137,34},'PrevLoc'}],
         [],
         [{debug_line,138,50},
          {cons,
              {138,5},
              {var,{138,6},'I'},
              {call,
                  {138,8},
                  {atom,{138,8},remove_redundant_lines_1},
                  [{var,{138,33},'Is'},{var,{138,37},'PrevLoc'}]}}]},
     {clause,
         {139,1},
         [{nil,{139,26}},{var,{139,30},'_'}],
         [],
         [{debug_line,139,51},{nil,{139,36}}]}]}.
{eof,{140,1}}.
