{attribute,{1,1},file,{"sys_core_fold.erl",1}}.
{attribute,{69,2},module,sys_core_fold}.
{attribute,{72,2},export,[{module,2},{format_error,1}]}.
{attribute,{74,2},
           import,
           {lists,[{map,2},
                   {foldl,3},
                   {foldr,3},
                   {mapfoldl,3},
                   {all,2},
                   {any,2},
                   {reverse,1},
                   {reverse,2},
                   {member,2},
                   {flatten,1},
                   {unzip,1},
                   {keyfind,3}]}}.
{attribute,{78,2},
           import,
           {cerl,[{ann_c_cons,3},{ann_c_map,3},{ann_c_tuple,2}]}}.
{attribute,{1,1},file,{"core_parse.hrl",1}}.
{attribute,
    {32,2},
    record,
    {c_alias,
        [{typed_record_field,
             {record_field,{32,19},{atom,{32,19},anno},{nil,{32,24}}},
             {type,{32,30},list,[]}},
         {typed_record_field,
             {record_field,{32,38},{atom,{32,38},var}},
             {remote_type,
                 {32,45},
                 [{atom,{32,45},cerl},{atom,{32,50},cerl},[]]}},
         {typed_record_field,
             {record_field,{33,5},{atom,{33,5},pat}},
             {remote_type,
                 {33,12},
                 [{atom,{33,12},cerl},{atom,{33,17},cerl},[]]}}]}}.
{attribute,
    {35,2},
    record,
    {c_apply,
        [{typed_record_field,
             {record_field,{35,19},{atom,{35,19},anno},{nil,{35,24}}},
             {type,{35,30},list,[]}},
         {typed_record_field,
             {record_field,{35,38},{atom,{35,38},op}},
             {remote_type,
                 {35,44},
                 [{atom,{35,44},cerl},{atom,{35,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{36,5},{atom,{36,5},args}},
             {type,
                 {36,13},
                 list,
                 [{remote_type,
                      {36,14},
                      [{atom,{36,14},cerl},{atom,{36,19},cerl},[]]}]}}]}}.
{attribute,
    {38,2},
    record,
    {c_binary,
        [{typed_record_field,
             {record_field,{38,20},{atom,{38,20},anno},{nil,{38,25}}},
             {type,{38,31},list,[]}},
         {typed_record_field,
             {record_field,{38,39},{atom,{38,39},segments}},
             {type,
                 {38,51},
                 list,
                 [{remote_type,
                      {38,52},
                      [{atom,{38,52},cerl},{atom,{38,57},c_bitstr},[]]}]}}]}}.
{attribute,
    {40,2},
    record,
    {c_bitstr,
        [{typed_record_field,
             {record_field,{40,20},{atom,{40,20},anno},{nil,{40,25}}},
             {type,{40,31},list,[]}},
         {typed_record_field,
             {record_field,{40,39},{atom,{40,39},val}},
             {remote_type,
                 {40,46},
                 [{atom,{40,46},cerl},{atom,{40,51},cerl},[]]}},
         {typed_record_field,
             {record_field,{41,6},{atom,{41,6},size}},
             {remote_type,
                 {41,14},
                 [{atom,{41,14},cerl},{atom,{41,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{42,6},{atom,{42,6},unit}},
             {remote_type,
                 {42,14},
                 [{atom,{42,14},cerl},{atom,{42,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{43,6},{atom,{43,6},type}},
             {remote_type,
                 {43,14},
                 [{atom,{43,14},cerl},{atom,{43,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{44,6},{atom,{44,6},flags}},
             {remote_type,
                 {44,15},
                 [{atom,{44,15},cerl},{atom,{44,20},cerl},[]]}}]}}.
{attribute,
    {46,2},
    record,
    {c_call,
        [{typed_record_field,
             {record_field,{46,18},{atom,{46,18},anno},{nil,{46,23}}},
             {type,{46,29},list,[]}},
         {typed_record_field,
             {record_field,{46,37},{atom,{46,37},module}},
             {remote_type,
                 {46,47},
                 [{atom,{46,47},cerl},{atom,{46,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{47,4},{atom,{47,4},name}},
             {remote_type,
                 {47,12},
                 [{atom,{47,12},cerl},{atom,{47,17},cerl},[]]}},
         {typed_record_field,
             {record_field,{48,4},{atom,{48,4},args}},
             {type,
                 {48,12},
                 list,
                 [{remote_type,
                      {48,13},
                      [{atom,{48,13},cerl},{atom,{48,18},cerl},[]]}]}}]}}.
{attribute,
    {50,2},
    record,
    {c_case,
        [{typed_record_field,
             {record_field,{50,18},{atom,{50,18},anno},{nil,{50,23}}},
             {type,{50,29},list,[]}},
         {typed_record_field,
             {record_field,{50,37},{atom,{50,37},arg}},
             {remote_type,
                 {50,44},
                 [{atom,{50,44},cerl},{atom,{50,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{51,4},{atom,{51,4},clauses}},
             {type,
                 {51,15},
                 list,
                 [{remote_type,
                      {51,16},
                      [{atom,{51,16},cerl},{atom,{51,21},cerl},[]]}]}}]}}.
{attribute,
    {53,2},
    record,
    {c_catch,
        [{typed_record_field,
             {record_field,{53,19},{atom,{53,19},anno},{nil,{53,24}}},
             {type,{53,30},list,[]}},
         {typed_record_field,
             {record_field,{53,38},{atom,{53,38},body}},
             {remote_type,
                 {53,46},
                 [{atom,{53,46},cerl},{atom,{53,51},cerl},[]]}}]}}.
{attribute,
    {55,2},
    record,
    {c_clause,
        [{typed_record_field,
             {record_field,{55,20},{atom,{55,20},anno},{nil,{55,25}}},
             {type,{55,31},list,[]}},
         {typed_record_field,
             {record_field,{55,39},{atom,{55,39},pats}},
             {type,
                 {55,47},
                 list,
                 [{remote_type,
                      {55,48},
                      [{atom,{55,48},cerl},{atom,{55,53},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{56,6},{atom,{56,6},guard}},
             {remote_type,
                 {56,15},
                 [{atom,{56,15},cerl},{atom,{56,20},cerl},[]]}},
         {typed_record_field,
             {record_field,{57,6},{atom,{57,6},body}},
             {type,
                 {57,14},
                 union,
                 [{remote_type,
                      {57,14},
                      [{atom,{57,14},cerl},{atom,{57,19},cerl},[]]},
                  {type,{57,28},any,[]}]}}]}}.
{attribute,
    {59,2},
    record,
    {c_cons,
        [{typed_record_field,
             {record_field,{59,18},{atom,{59,18},anno},{nil,{59,23}}},
             {type,{59,29},list,[]}},
         {typed_record_field,
             {record_field,{59,37},{atom,{59,37},hd}},
             {remote_type,
                 {59,43},
                 [{atom,{59,43},cerl},{atom,{59,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{60,4},{atom,{60,4},tl}},
             {remote_type,
                 {60,10},
                 [{atom,{60,10},cerl},{atom,{60,15},cerl},[]]}}]}}.
{attribute,
    {62,2},
    record,
    {c_fun,
        [{typed_record_field,
             {record_field,{62,17},{atom,{62,17},anno},{nil,{62,22}}},
             {type,{62,28},list,[]}},
         {typed_record_field,
             {record_field,{62,36},{atom,{62,36},vars}},
             {type,
                 {62,44},
                 list,
                 [{remote_type,
                      {62,45},
                      [{atom,{62,45},cerl},{atom,{62,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{63,3},{atom,{63,3},body}},
             {remote_type,
                 {63,11},
                 [{atom,{63,11},cerl},{atom,{63,16},cerl},[]]}}]}}.
{attribute,
    {65,2},
    record,
    {c_let,
        [{typed_record_field,
             {record_field,{65,17},{atom,{65,17},anno},{nil,{65,22}}},
             {type,{65,28},list,[]}},
         {typed_record_field,
             {record_field,{65,36},{atom,{65,36},vars}},
             {type,
                 {65,44},
                 list,
                 [{remote_type,
                      {65,45},
                      [{atom,{65,45},cerl},{atom,{65,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{66,3},{atom,{66,3},arg}},
             {remote_type,
                 {66,10},
                 [{atom,{66,10},cerl},{atom,{66,15},cerl},[]]}},
         {typed_record_field,
             {record_field,{67,3},{atom,{67,3},body}},
             {remote_type,
                 {67,11},
                 [{atom,{67,11},cerl},{atom,{67,16},cerl},[]]}}]}}.
{attribute,
    {69,2},
    record,
    {c_letrec,
        [{typed_record_field,
             {record_field,{69,20},{atom,{69,20},anno},{nil,{69,25}}},
             {type,{69,31},list,[]}},
         {typed_record_field,
             {record_field,{70,20},{atom,{70,20},defs}},
             {type,
                 {70,28},
                 list,
                 [{type,
                      {70,29},
                      tuple,
                      [{remote_type,
                           {70,30},
                           [{atom,{70,30},cerl},{atom,{70,35},cerl},[]]},
                       {remote_type,
                           {70,43},
                           [{atom,{70,43},cerl},{atom,{70,48},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{71,6},{atom,{71,6},body}},
             {remote_type,
                 {71,14},
                 [{atom,{71,14},cerl},{atom,{71,19},cerl},[]]}}]}}.
{attribute,
    {73,2},
    record,
    {c_literal,
        [{typed_record_field,
             {record_field,{73,21},{atom,{73,21},anno},{nil,{73,26}}},
             {type,{73,32},list,[]}},
         {typed_record_field,
             {record_field,{73,40},{atom,{73,40},val}},
             {type,{73,47},any,[]}}]}}.
{attribute,
    {75,2},
    record,
    {c_map,
        [{typed_record_field,
             {record_field,{75,17},{atom,{75,17},anno},{nil,{75,22}}},
             {type,{75,28},list,[]}},
         {typed_record_field,
             {record_field,
                 {76,3},
                 {atom,{76,3},arg},
                 {record,
                     {76,7},
                     c_literal,
                     [{record_field,
                          {76,18},
                          {atom,{76,18},val},
                          {map,{76,22},[]}}]}},
             {type,
                 {76,30},
                 union,
                 [{remote_type,
                      {76,30},
                      [{atom,{76,30},cerl},{atom,{76,35},c_var},[]]},
                  {remote_type,
                      {76,45},
                      [{atom,{76,45},cerl},{atom,{76,50},c_literal},[]]}]}},
         {typed_record_field,
             {record_field,{77,3},{atom,{77,3},es}},
             {type,
                 {77,9},
                 list,
                 [{remote_type,
                      {77,10},
                      [{atom,{77,10},cerl},{atom,{77,15},c_map_pair},[]]}]}},
         {typed_record_field,
             {record_field,{78,3},{atom,{78,3},is_pat},{atom,{78,10},false}},
             {type,{78,19},boolean,[]}}]}}.
{attribute,
    {80,2},
    record,
    {c_map_pair,
        [{typed_record_field,
             {record_field,{80,22},{atom,{80,22},anno},{nil,{80,27}}},
             {type,{80,33},list,[]}},
         {typed_record_field,
             {record_field,{81,15},{atom,{81,15},op}},
             {type,
                 {81,21},
                 union,
                 [{type,
                      {81,21},
                      record,
                      [{atom,{81,22},c_literal},
                       {type,
                           {81,32},
                           field_type,
                           [{atom,{81,32},val},{atom,{81,37},assoc}]}]},
                  {type,
                      {81,48},
                      record,
                      [{atom,{81,49},c_literal},
                       {type,
                           {81,59},
                           field_type,
                           [{atom,{81,59},val},{atom,{81,64},exact}]}]}]}},
         {typed_record_field,
             {record_field,{82,8},{atom,{82,8},key}},
             {type,{82,15},any,[]}},
         {typed_record_field,
             {record_field,{83,8},{atom,{83,8},val}},
             {type,{83,15},any,[]}}]}}.
{attribute,
    {85,2},
    record,
    {c_module,
        [{typed_record_field,
             {record_field,{85,20},{atom,{85,20},anno},{nil,{85,25}}},
             {type,{85,31},list,[]}},
         {typed_record_field,
             {record_field,{85,39},{atom,{85,39},name}},
             {remote_type,
                 {85,47},
                 [{atom,{85,47},cerl},{atom,{85,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{86,6},{atom,{86,6},exports}},
             {type,
                 {86,17},
                 list,
                 [{remote_type,
                      {86,18},
                      [{atom,{86,18},cerl},{atom,{86,23},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{87,6},{atom,{87,6},attrs}},
             {type,
                 {87,15},
                 list,
                 [{type,
                      {87,16},
                      tuple,
                      [{remote_type,
                           {87,17},
                           [{atom,{87,17},cerl},{atom,{87,22},cerl},[]]},
                       {remote_type,
                           {87,30},
                           [{atom,{87,30},cerl},{atom,{87,35},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{88,6},{atom,{88,6},defs}},
             {type,
                 {88,14},
                 list,
                 [{type,
                      {88,15},
                      tuple,
                      [{remote_type,
                           {88,16},
                           [{atom,{88,16},cerl},{atom,{88,21},cerl},[]]},
                       {remote_type,
                           {88,29},
                           [{atom,{88,29},cerl},
                            {atom,{88,34},cerl},
                            []]}]}]}}]}}.
{attribute,
    {90,2},
    record,
    {c_opaque,
        [{typed_record_field,
             {record_field,{90,20},{atom,{90,20},anno},{nil,{90,25}}},
             {type,{90,31},list,[]}},
         {typed_record_field,
             {record_field,{90,39},{atom,{90,39},val}},
             {type,{90,46},any,[]}}]}}.
{attribute,
    {92,2},
    record,
    {c_primop,
        [{typed_record_field,
             {record_field,{92,20},{atom,{92,20},anno},{nil,{92,25}}},
             {type,{92,31},list,[]}},
         {typed_record_field,
             {record_field,{92,39},{atom,{92,39},name}},
             {remote_type,
                 {92,47},
                 [{atom,{92,47},cerl},{atom,{92,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{93,6},{atom,{93,6},args}},
             {type,
                 {93,14},
                 list,
                 [{remote_type,
                      {93,15},
                      [{atom,{93,15},cerl},{atom,{93,20},cerl},[]]}]}}]}}.
{attribute,
    {95,2},
    record,
    {c_receive,
        [{typed_record_field,
             {record_field,{95,21},{atom,{95,21},anno},{nil,{95,26}}},
             {type,{95,32},list,[]}},
         {typed_record_field,
             {record_field,{95,40},{atom,{95,40},clauses}},
             {type,
                 {95,51},
                 list,
                 [{remote_type,
                      {95,52},
                      [{atom,{95,52},cerl},{atom,{95,57},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{96,7},{atom,{96,7},timeout}},
             {remote_type,
                 {96,18},
                 [{atom,{96,18},cerl},{atom,{96,23},cerl},[]]}},
         {typed_record_field,
             {record_field,{97,7},{atom,{97,7},action}},
             {remote_type,
                 {97,17},
                 [{atom,{97,17},cerl},{atom,{97,22},cerl},[]]}}]}}.
{attribute,
    {99,2},
    record,
    {c_seq,
        [{typed_record_field,
             {record_field,{99,17},{atom,{99,17},anno},{nil,{99,22}}},
             {type,{99,28},list,[]}},
         {typed_record_field,
             {record_field,{99,36},{atom,{99,36},arg}},
             {type,
                 {99,43},
                 union,
                 [{remote_type,
                      {99,43},
                      [{atom,{99,43},cerl},{atom,{99,48},cerl},[]]},
                  {type,{99,57},any,[]}]}},
         {typed_record_field,
             {record_field,{100,3},{atom,{100,3},body}},
             {remote_type,
                 {100,11},
                 [{atom,{100,11},cerl},{atom,{100,16},cerl},[]]}}]}}.
{attribute,
    {102,2},
    record,
    {c_try,
        [{typed_record_field,
             {record_field,{102,17},{atom,{102,17},anno},{nil,{102,22}}},
             {type,{102,28},list,[]}},
         {typed_record_field,
             {record_field,{102,36},{atom,{102,36},arg}},
             {remote_type,
                 {102,43},
                 [{atom,{102,43},cerl},{atom,{102,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{103,3},{atom,{103,3},vars}},
             {type,
                 {103,11},
                 list,
                 [{remote_type,
                      {103,12},
                      [{atom,{103,12},cerl},{atom,{103,17},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{104,3},{atom,{104,3},body}},
             {remote_type,
                 {104,11},
                 [{atom,{104,11},cerl},{atom,{104,16},cerl},[]]}},
         {typed_record_field,
             {record_field,{105,3},{atom,{105,3},evars}},
             {type,
                 {105,12},
                 list,
                 [{remote_type,
                      {105,13},
                      [{atom,{105,13},cerl},{atom,{105,18},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{106,3},{atom,{106,3},handler}},
             {remote_type,
                 {106,14},
                 [{atom,{106,14},cerl},{atom,{106,19},cerl},[]]}}]}}.
{attribute,
    {108,2},
    record,
    {c_tuple,
        [{typed_record_field,
             {record_field,{108,19},{atom,{108,19},anno},{nil,{108,24}}},
             {type,{108,30},list,[]}},
         {typed_record_field,
             {record_field,{108,38},{atom,{108,38},es}},
             {type,
                 {108,44},
                 list,
                 [{remote_type,
                      {108,45},
                      [{atom,{108,45},cerl},{atom,{108,50},cerl},[]]}]}}]}}.
{attribute,
    {110,2},
    record,
    {c_values,
        [{typed_record_field,
             {record_field,{110,20},{atom,{110,20},anno},{nil,{110,25}}},
             {type,{110,31},list,[]}},
         {typed_record_field,
             {record_field,{110,39},{atom,{110,39},es}},
             {type,
                 {110,45},
                 list,
                 [{remote_type,
                      {110,46},
                      [{atom,{110,46},cerl},{atom,{110,51},cerl},[]]}]}}]}}.
{attribute,
    {112,2},
    record,
    {c_var,
        [{typed_record_field,
             {record_field,{112,17},{atom,{112,17},anno},{nil,{112,22}}},
             {type,{112,28},list,[]}},
         {typed_record_field,
             {record_field,{112,36},{atom,{112,36},name}},
             {remote_type,
                 {112,44},
                 [{atom,{112,44},cerl},{atom,{112,49},var_name},[]]}}]}}.
{attribute,{81,1},file,{"sys_core_fold.erl",81}}.
{attribute,
    {101,2},
    record,
    {sub,
        [{record_field,{101,15},{atom,{101,15},v},{nil,{101,17}}},
         {typed_record_field,
             {record_field,
                 {102,15},
                 {atom,{102,15},s},
                 {call,
                     {102,17},
                     {remote,
                         {102,21},
                         {atom,{102,17},sets},
                         {atom,{102,22},new}},
                     []}},
             {remote_type,
                 {102,31},
                 [{atom,{102,31},sets},{atom,{102,36},set},[]]}},
         {typed_record_field,
             {record_field,{103,15},{atom,{103,15},t},{map,{103,17},[]}},
             {type,{103,24},map,any}},
         {record_field,
             {104,15},
             {atom,{104,15},in_guard},
             {atom,{104,24},false}},
         {record_field,{105,15},{atom,{105,15},top},{atom,{105,19},true}}]}}.
{attribute,
    {107,2},
    spec,
    {{module,2},
     [{type,
          {107,13},
          'fun',
          [{type,
               {107,13},
               product,
               [{remote_type,
                    {107,14},
                    [{atom,{107,14},cerl},{atom,{107,19},c_module},[]]},
                {type,
                    {107,31},
                    list,
                    [{remote_type,
                         {107,32},
                         [{atom,{107,32},compile},
                          {atom,{107,40},option},
                          []]}]}]},
           {type,
               {108,2},
               tuple,
               [{atom,{108,3},ok},
                {remote_type,
                    {108,9},
                    [{atom,{108,9},cerl},{atom,{108,14},c_module},[]]},
                {type,{108,26},list,[{var,{108,27},'_'}]}]}]}]}}.
{function,
 {110,1},
 module,2,
 [{clause,
   {110,1},
   [{var,{110,1},'_'},{var,{110,1},'_'}],
   [[{call,
      {110,1},
      {remote,{110,1},{atom,{110,1},fake},{atom,{110,1},is_beam_bif_info}},
      []}]],
   [{debug_line,110,1},{atom,{110,1},ignore}]},
  {clause,
   {110,1},
   [{match,
     {110,8},
     {tuple,
      {110,8},
      [{atom,{110,8},c_module},
       {var,{110,8},'_'},
       {var,{110,8},'_'},
       {var,{110,8},'_'},
       {var,{110,8},'_'},
       {var,{110,23},'Ds0'}]},
     {var,{110,28},'Mod'}},
    {var,{110,33},'Opts'}],
   [],
   [{debug_line,111,2},
    {call,
     {111,5},
     {remote,{111,5},{atom,{111,5},erlang},{atom,{111,5},put}},
     [{atom,{111,9},no_inline_list_funcs},
      {block,0,
       [{op,
         {111,31},
         'not',
         {call,
          {111,35},
          {remote,{111,35},{atom,{111,35},lists},{atom,{111,35},member}},
          [{atom,{111,42},inline_list_funcs},{var,{111,61},'Opts'}]}}]}]},
    {debug_line,112,3},
    {call,{112,5},{atom,{112,5},init_warnings},[]},
    {debug_line,113,4},
    {match,
     {113,5},
     {var,{113,5},'Ds1'},
     {lc,
      {113,11},
      {block,0,
       [{call,{113,12},{atom,{113,12},function_1},[{var,{113,23},'D'}]}]},
      [{block,0,[{atom,{113,34},true}]},
       {generate,{113,31},{var,{113,29},'D'},{var,{113,34},'Ds0'}}]}},
    {debug_line,114,5},
    {call,
     {114,5},
     {remote,{114,5},{atom,{114,5},erlang},{atom,{114,5},erase}},
     [{atom,{114,11},new_var_num}]},
    {debug_line,115,6},
    {call,
     {115,5},
     {remote,{115,5},{atom,{115,5},erlang},{atom,{115,5},erase}},
     [{atom,{115,11},no_inline_list_funcs}]},
    {debug_line,116,7},
    {tuple,
     {116,5},
     [{atom,{116,6},ok},
      {block,
       {116,9},
       [{match,{116,9},{var,{116,9},rec0},{var,{116,9},'Mod'}},
        {'case',
         {116,22},
         {var,{116,9},rec0},
         [{clause,
           {116,22},
           [{tuple,
             {116,22},
             [{atom,{116,22},c_module},
              {var,{116,22},'_'},
              {var,{116,22},'_'},
              {var,{116,22},'_'},
              {var,{116,22},'_'},
              {var,{116,22},'_'}]}],
           [],
           [{call,
             {116,22},
             {remote,
              {116,22},
              {atom,{116,22},erlang},
              {atom,{116,22},setelement}},
             [{integer,{116,22},6},{var,{116,9},rec0},{var,{116,27},'Ds1'}]}]},
          {clause,
           [{generated,true},{location,{116,22}}],
           [{var,[{generated,true},{location,{116,22}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{116,22}}],
             {remote,
              [{generated,true},{location,{116,22}}],
              {atom,[{generated,true},{location,{116,22}}],erlang},
              {atom,[{generated,true},{location,{116,22}}],error}},
             [{tuple,
               [{generated,true},{location,{116,22}}],
               [{atom,[{generated,true},{location,{116,22}}],badrecord},
                {var,{116,9},rec0}]}]}]}]}]},
      {call,{116,32},{atom,{116,32},get_warnings},[]}]}]}]}.
{function,
 {118,1},
 function_1,1,
 [{clause,
   {118,1},
   [{var,{118,1},'_'}],
   [[{call,
      {118,1},
      {remote,{118,1},{atom,{118,1},fake},{atom,{118,1},is_beam_bif_info}},
      []}]],
   [{debug_line,118,8},{atom,{118,1},ignore}]},
  {clause,
   {118,1},
   [{tuple,
     {118,12},
     [{match,
       {118,13},
       {tuple,
        {118,13},
        [{atom,{118,13},c_var},
         {var,{118,13},'_'},
         {tuple,{118,25},[{var,{118,26},'F'},{var,{118,28},'Arity'}]}]},
       {var,{118,36},'Name'}},
      {var,{118,41},'B0'}]}],
   [],
   [{debug_line,119,9},
    {'try',
     {119,5},
     [{debug_line,126,10},
      {match,
       {126,9},
       {var,{126,9},'Count'},
       {call,
        {126,17},
        {remote,
         {126,27},
         {atom,{126,17},cerl_trees},
         {atom,{126,28},next_free_variable_name}},
        [{var,{126,52},'B0'}]}},
      {debug_line,127,11},
      {call,
       {127,9},
       {remote,{127,9},{atom,{127,9},erlang},{atom,{127,9},put}},
       [{atom,{127,13},new_var_num},{var,{127,26},'Count'}]},
      {debug_line,128,12},
      {match,
       {128,2},
       {var,{128,2},'B'},
       {call,
        {128,6},
        {atom,{128,6},find_fixpoint},
        [{block,0,
          [{'fun',
            {128,20},
            {clauses,
             [{clause,
               {128,23},
               [{var,{128,24},'Core'}],
               [],
               [{debug_line,130,13},
                {call,
                 {130,7},
                 {atom,{130,7},expr},
                 [{var,{130,12},'Core'},
                  {atom,{130,18},value},
                  {block,0,
                   [{call,{130,25},{atom,{130,25},sub_new},[]}]}]}]}]}}]},
         {var,{131,11},'B0'},
         {integer,{131,15},20}]}},
      {debug_line,132,14},
      {tuple,{132,2},[{var,{132,3},'Name'},{var,{132,8},'B'}]}],
     [],
     [{clause,
       {134,9},
       [{tuple,
         {134,9},
         [{var,{134,9},'Class'},
          {var,{134,15},'Error'},
          {var,{134,21},'Stack'}]}],
       [],
       [{debug_line,135,15},
        {call,
         {135,6},
         {remote,{135,8},{atom,{135,6},io},{atom,{135,9},fwrite}},
         [{block,0,[{string,{135,16},"Function: ~w/~w\n"}]},
          {block,0,
           [{cons,
             {135,37},
             {var,{135,38},'F'},
             {cons,{135,40},{var,{135,40},'Arity'},{nil,{135,45}}}}]}]},
        {debug_line,136,16},
        {call,
         {136,6},
         {remote,{136,12},{atom,{136,6},erlang},{atom,{136,13},raise}},
         [{var,{136,19},'Class'},
          {var,{136,26},'Error'},
          {var,{136,33},'Stack'}]}]}],
     []}]}]}.
{function,
    {139,1},
    find_fixpoint,3,
    [{clause,
         {139,1},
         [{var,{139,1},'_'},{var,{139,1},'_'},{var,{139,1},'_'}],
         [[{call,
               {139,1},
               {remote,
                   {139,1},
                   {atom,{139,1},fake},
                   {atom,{139,1},is_beam_bif_info}},
               []}]],
         [{debug_line,139,17},{atom,{139,1},ignore}]},
     {clause,
         {139,1},
         [{var,{139,15},'_OptFun'},{var,{139,24},'Core'},{integer,{139,30},0}],
         [],
         [{debug_line,140,18},{var,{140,5},'Core'}]},
     {clause,
         {141,1},
         [{var,{141,15},'OptFun'},{var,{141,23},'Core0'},{var,{141,30},'Max'}],
         [],
         [{debug_line,142,19},
          {'case',
              {142,5},
              {call,{142,10},{var,{142,10},'OptFun'},[{var,{142,17},'Core0'}]},
              [{clause,
                   {143,2},
                   [{var,{143,2},'Core0'}],
                   [],
                   [{debug_line,143,20},{var,{143,11},'Core0'}]},
               {clause,
                   {144,2},
                   [{var,{144,2},'Core'}],
                   [],
                   [{debug_line,144,21},
                    {call,
                        {144,10},
                        {atom,{144,10},find_fixpoint},
                        [{var,{144,24},'OptFun'},
                         {var,{144,32},'Core'},
                         {block,0,
                             [{op,{144,41},
                                  '-',
                                  {var,{144,38},'Max'},
                                  {integer,{144,42},1}}]}]}]}]}]}]}.
{function,{151,1},
          body,2,
          [{clause,{151,1},
                   [{var,{151,1},'_'},{var,{151,1},'_'}],
                   [[{call,{151,1},
                           {remote,{151,1},
                                   {atom,{151,1},fake},
                                   {atom,{151,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,151,22},{atom,{151,1},ignore}]},
           {clause,{151,1},
                   [{var,{151,6},'Body'},{var,{151,12},'Sub'}],
                   [],
                   [{debug_line,152,23},
                    {call,{152,5},
                          {atom,{152,5},body},
                          [{var,{152,10},'Body'},
                           {atom,{152,16},value},
                           {var,{152,23},'Sub'}]}]}]}.
{function,{154,1},
          body,3,
          [{clause,{154,1},
                   [{var,{154,1},'_'},{var,{154,1},'_'},{var,{154,1},'_'}],
                   [[{call,{154,1},
                           {remote,{154,1},
                                   {atom,{154,1},fake},
                                   {atom,{154,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,154,24},{atom,{154,1},ignore}]},
           {clause,{154,1},
                   [{tuple,{154,6},
                           [{atom,{154,6},c_values},
                            {var,{154,21},'A'},
                            {var,{154,26},'Es0'}]},
                    {atom,{154,32},value},
                    {var,{154,39},'Sub'}],
                   [],
                   [{debug_line,155,25},
                    {match,{155,5},
                           {var,{155,5},'Es1'},
                           {call,{155,11},
                                 {atom,{155,11},expr_list},
                                 [{var,{155,21},'Es0'},
                                  {atom,{155,26},value},
                                  {var,{155,33},'Sub'}]}},
                    {debug_line,156,26},
                    {tuple,{156,5},
                           [{atom,{156,5},c_values},
                            {var,{156,20},'A'},
                            {var,{156,25},'Es1'}]}]},
           {clause,{157,1},
                   [{var,{157,6},'E'},
                    {var,{157,9},'Ctxt'},
                    {var,{157,15},'Sub'}],
                   [],
                   [{debug_line,158,27},
                    {atom,{158,6},ignore},
                    {debug_line,159,28},
                    {call,{159,5},
                          {atom,{159,5},expr},
                          [{var,{159,10},'E'},
                           {var,{159,13},'Ctxt'},
                           {var,{159,19},'Sub'}]}]}]}.
{function,
 {165,1},
 guard,2,
 [{clause,
   {165,1},
   [{var,{165,1},'_'},{var,{165,1},'_'}],
   [[{call,
      {165,1},
      {remote,{165,1},{atom,{165,1},fake},{atom,{165,1},is_beam_bif_info}},
      []}]],
   [{debug_line,165,29},{atom,{165,1},ignore}]},
  {clause,
   {165,1},
   [{var,{165,7},'Expr'},{var,{165,13},'Sub'}],
   [],
   [{debug_line,166,30},
    {atom,{166,6},ignore},
    {debug_line,167,31},
    {call,
     {167,5},
     {atom,{167,5},expr},
     [{var,{167,10},'Expr'},
      {atom,{167,16},value},
      {block,0,
       [{block,
         {167,23},
         [{match,{167,23},{var,{167,23},rec1},{var,{167,23},'Sub'}},
          {'case',
           {167,31},
           {var,{167,23},rec1},
           [{clause,
             {167,31},
             [{tuple,
               {167,31},
               [{atom,{167,31},sub},
                {var,{167,31},'_'},
                {var,{167,31},'_'},
                {var,{167,31},'_'},
                {var,{167,31},'_'},
                {var,{167,31},'_'}]}],
             [],
             [{call,
               {167,31},
               {remote,
                {167,31},
                {atom,{167,31},erlang},
                {atom,{167,31},setelement}},
               [{integer,{167,31},5},
                {var,{167,23},rec1},
                {atom,{167,40},true}]}]},
            {clause,
             [{generated,true},{location,{167,31}}],
             [{var,[{generated,true},{location,{167,31}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{167,31}}],
               {remote,
                [{generated,true},{location,{167,31}}],
                {atom,[{generated,true},{location,{167,31}}],erlang},
                {atom,[{generated,true},{location,{167,31}}],error}},
               [{tuple,
                 [{generated,true},{location,{167,31}}],
                 [{atom,[{generated,true},{location,{167,31}}],badrecord},
                  {var,{167,23},rec1}]}]}]}]}]}]}]}]}]}.
{function,{172,1},
          expr,2,
          [{clause,{172,1},
                   [{var,{172,1},'_'},{var,{172,1},'_'}],
                   [[{call,{172,1},
                           {remote,{172,1},
                                   {atom,{172,1},fake},
                                   {atom,{172,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,172,32},{atom,{172,1},ignore}]},
           {clause,{172,1},
                   [{var,{172,6},'Expr'},{var,{172,12},'Sub'}],
                   [],
                   [{debug_line,173,33},
                    {call,{173,5},
                          {atom,{173,5},expr},
                          [{var,{173,10},'Expr'},
                           {atom,{173,16},value},
                           {var,{173,23},'Sub'}]}]}]}.
{function,
 {175,1},
 expr,3,
 [{clause,
   {175,1},
   [{var,{175,1},'_'},{var,{175,1},'_'},{var,{175,1},'_'}],
   [[{call,
      {175,1},
      {remote,{175,1},{atom,{175,1},fake},{atom,{175,1},is_beam_bif_info}},
      []}]],
   [{debug_line,175,34},{atom,{175,1},ignore}]},
  {clause,
   {175,1},
   [{match,
     {175,6},
     {tuple,
      {175,6},
      [{atom,{175,6},c_var},{var,{175,6},'_'},{var,{175,6},'_'}]},
     {var,{175,15},'V'}},
    {var,{175,18},'Ctxt'},
    {var,{175,24},'Sub'}],
   [],
   [{debug_line,180,35},
    {'case',
     {180,5},
     {var,{180,10},'Ctxt'},
     [{clause,
       {181,2},
       [{atom,{181,2},effect}],
       [],
       [{debug_line,181,36},{call,{181,12},{atom,{181,12},void},[]}]},
      {clause,
       {182,2},
       [{atom,{182,2},value}],
       [],
       [{debug_line,182,37},
        {call,
         {182,11},
         {atom,{182,11},sub_get_var},
         [{var,{182,23},'V'},{var,{182,26},'Sub'}]}]}]}]},
  {clause,
   {184,1},
   [{match,
     {184,6},
     {tuple,
      {184,6},
      [{atom,{184,6},c_literal},{var,{184,6},'_'},{var,{184,21},'Val'}]},
     {var,{184,26},'L'}},
    {var,{184,29},'Ctxt'},
    {var,{184,35},'Sub'}],
   [],
   [{debug_line,185,38},
    {'case',
     {185,5},
     {var,{185,10},'Ctxt'},
     [{clause,
       {186,2},
       [{atom,{186,2},effect}],
       [],
       [{debug_line,187,39},
        {'case',
         {187,6},
         {var,{187,11},'Val'},
         [{clause,
           {188,3},
           [{nil,{188,3}}],
           [],
           [{debug_line,190,40},{var,{190,7},'L'}]},
          {clause,
           {191,3},
           [{var,{191,3},'_'}],
           [[{call,
              {191,10},
              {remote,{191,10},{atom,{191,10},erlang},{atom,{191,10},is_atom}},
              [{var,{191,18},'Val'}]}]],
           [{debug_line,193,41},{call,{193,7},{atom,{193,7},void},[]}]},
          {clause,
           {194,3},
           [{var,{194,3},'_'}],
           [],
           [{debug_line,196,42},
            {call,
             {196,21},
             {atom,{196,21},warn_useless_building},
             [{var,{196,43},'L'},{var,{196,46},'Sub'}]},
            {debug_line,197,43},
            {call,{197,7},{atom,{197,7},void},[]}]}]}]},
      {clause,
       {199,2},
       [{atom,{199,2},value}],
       [],
       [{debug_line,199,44},{var,{199,11},'L'}]}]}]},
  {clause,
   {201,1},
   [{match,
     {201,6},
     {tuple,
      {201,6},
      [{atom,{201,6},c_cons},
       {var,{201,19},'Anno'},
       {var,{201,27},'H0'},
       {var,{201,33},'T0'}]},
     {var,{201,37},'Cons'}},
    {var,{201,43},'Ctxt'},
    {var,{201,49},'Sub'}],
   [],
   [{debug_line,202,45},
    {match,
     {202,5},
     {var,{202,5},'DeeperSub'},
     {call,
      {202,17},
      {atom,{202,17},descend},
      [{var,{202,25},'Cons'},{var,{202,31},'Sub'}]}},
    {debug_line,203,46},
    {match,
     {203,5},
     {var,{203,5},'H1'},
     {call,
      {203,10},
      {atom,{203,10},expr},
      [{var,{203,15},'H0'},{var,{203,19},'Ctxt'},{var,{203,25},'DeeperSub'}]}},
    {debug_line,204,47},
    {match,
     {204,5},
     {var,{204,5},'T1'},
     {call,
      {204,10},
      {atom,{204,10},expr},
      [{var,{204,15},'T0'},{var,{204,19},'Ctxt'},{var,{204,25},'DeeperSub'}]}},
    {debug_line,205,48},
    {'case',
     {205,5},
     {var,{205,10},'Ctxt'},
     [{clause,
       {206,2},
       [{atom,{206,2},effect}],
       [],
       [{debug_line,207,49},
        {call,
         {207,13},
         {atom,{207,13},warn_useless_building},
         [{var,{207,35},'Cons'},{var,{207,41},'Sub'}]},
        {debug_line,208,50},
        {call,
         {208,6},
         {atom,{208,6},make_effect_seq},
         [{block,0,
           [{cons,
             {208,22},
             {var,{208,23},'H1'},
             {cons,{208,26},{var,{208,26},'T1'},{nil,{208,28}}}}]},
          {var,{208,31},'Sub'}]}]},
      {clause,
       {209,2},
       [{atom,{209,2},value}],
       [],
       [{debug_line,210,51},
        {call,
         {210,6},
         {remote,{210,6},{atom,{210,6},cerl},{atom,{210,6},ann_c_cons}},
         [{var,{210,17},'Anno'},
          {var,{210,23},'H1'},
          {var,{210,27},'T1'}]}]}]}]},
  {clause,
   {212,1},
   [{match,
     {212,6},
     {tuple,
      {212,6},
      [{atom,{212,6},c_tuple},{var,{212,20},'Anno'},{var,{212,28},'Es0'}]},
     {var,{212,33},'Tuple'}},
    {var,{212,40},'Ctxt'},
    {var,{212,46},'Sub'}],
   [],
   [{debug_line,213,52},
    {match,
     {213,5},
     {var,{213,5},'Es'},
     {call,
      {213,10},
      {atom,{213,10},expr_list},
      [{var,{213,20},'Es0'},
       {var,{213,25},'Ctxt'},
       {block,0,
        [{call,
          {213,31},
          {atom,{213,31},descend},
          [{var,{213,39},'Tuple'},{var,{213,46},'Sub'}]}]}]}},
    {debug_line,214,53},
    {'case',
     {214,5},
     {var,{214,10},'Ctxt'},
     [{clause,
       {215,2},
       [{atom,{215,2},effect}],
       [],
       [{debug_line,216,54},
        {call,
         {216,13},
         {atom,{216,13},warn_useless_building},
         [{var,{216,35},'Tuple'},{var,{216,42},'Sub'}]},
        {debug_line,217,55},
        {call,
         {217,6},
         {atom,{217,6},make_effect_seq},
         [{var,{217,22},'Es'},{var,{217,26},'Sub'}]}]},
      {clause,
       {218,2},
       [{atom,{218,2},value}],
       [],
       [{debug_line,219,56},
        {call,
         {219,6},
         {remote,{219,6},{atom,{219,6},cerl},{atom,{219,6},ann_c_tuple}},
         [{var,{219,18},'Anno'},{var,{219,24},'Es'}]}]}]}]},
  {clause,
   {221,1},
   [{match,
     {221,6},
     {tuple,
      {221,6},
      [{atom,{221,6},c_map},
       {var,{221,18},'Anno'},
       {var,{221,27},'V0'},
       {var,{221,33},'Es0'},
       {var,{221,6},'_'}]},
     {var,{221,38},'Map'}},
    {var,{221,43},'Ctxt'},
    {var,{221,49},'Sub'}],
   [],
   [{debug_line,224,57},
    {'case',
     {224,5},
     {var,{224,10},'Ctxt'},
     [{clause,
       {225,9},
       [{atom,{225,9},effect}],
       [],
       [{debug_line,225,58},
        {call,
         {225,19},
         {atom,{225,19},warn_useless_building},
         [{var,{225,41},'Map'},{var,{225,46},'Sub'}]}]},
      {clause,
       {226,9},
       [{atom,{226,9},value}],
       [],
       [{debug_line,226,59},{atom,{226,18},ok}]}]},
    {debug_line,228,60},
    {match,
     {228,5},
     {var,{228,5},'Es'},
     {call,
      {228,10},
      {atom,{228,10},pair_list},
      [{var,{228,20},'Es0'},
       {block,0,
        [{call,
          {228,25},
          {atom,{228,25},descend},
          [{var,{228,33},'Map'},{var,{228,38},'Sub'}]}]}]}},
    {debug_line,229,61},
    {match,
     {229,5},
     {var,{229,5},'V'},
     {call,
      {229,9},
      {atom,{229,9},expr},
      [{var,{229,14},'V0'},{atom,{229,18},value},{var,{229,25},'Sub'}]}},
    {debug_line,230,62},
    {call,
     {230,5},
     {remote,{230,5},{atom,{230,5},cerl},{atom,{230,5},ann_c_map}},
     [{var,{230,15},'Anno'},{var,{230,21},'V'},{var,{230,24},'Es'}]}]},
  {clause,
   {231,1},
   [{match,
     {231,6},
     {tuple,
      {231,6},
      [{atom,{231,6},c_binary},{var,{231,6},'_'},{var,{231,25},'Ss'}]},
     {var,{231,29},'Bin0'}},
    {var,{231,35},'Ctxt'},
    {var,{231,41},'Sub'}],
   [],
   [{debug_line,234,63},
    {'case',
     {234,5},
     {var,{234,10},'Ctxt'},
     [{clause,
       {235,2},
       [{atom,{235,2},effect}],
       [],
       [{debug_line,235,64},
        {call,
         {235,12},
         {atom,{235,12},warn_useless_building},
         [{var,{235,34},'Bin0'},{var,{235,40},'Sub'}]}]},
      {clause,
       {236,2},
       [{atom,{236,2},value}],
       [],
       [{debug_line,236,65},{atom,{236,11},ok}]}]},
    {debug_line,238,66},
    {match,
     {238,5},
     {var,{238,5},'Bin1'},
     {block,
      {238,12},
      [{match,
        {238,26},
        {var,{238,26},rec2},
        {call,
         {238,35},
         {atom,{238,35},bitstr_list},
         [{var,{238,47},'Ss'},{var,{238,51},'Sub'}]}},
       {match,{238,12},{var,{238,12},rec3},{var,{238,12},'Bin0'}},
       {'case',
        {238,26},
        {var,{238,12},rec3},
        [{clause,
          {238,26},
          [{tuple,
            {238,26},
            [{atom,{238,26},c_binary},{var,{238,26},'_'},{var,{238,26},'_'}]}],
          [],
          [{call,
            {238,26},
            {remote,
             {238,26},
             {atom,{238,26},erlang},
             {atom,{238,26},setelement}},
            [{integer,{238,26},3},{var,{238,12},rec3},{var,{238,26},rec2}]}]},
         {clause,
          [{generated,true},{location,{238,26}}],
          [{var,[{generated,true},{location,{238,26}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{238,26}}],
            {remote,
             [{generated,true},{location,{238,26}}],
             {atom,[{generated,true},{location,{238,26}}],erlang},
             {atom,[{generated,true},{location,{238,26}}],error}},
            [{tuple,
              [{generated,true},{location,{238,26}}],
              [{atom,[{generated,true},{location,{238,26}}],badrecord},
               {var,{238,12},rec3}]}]}]}]}]}},
    {debug_line,239,67},
    {match,
     {239,5},
     {var,{239,5},'Bin'},
     {call,{239,11},{atom,{239,11},bin_un_utf},[{var,{239,22},'Bin1'}]}},
    {debug_line,240,68},
    {call,{240,5},{atom,{240,5},eval_binary},[{var,{240,17},'Bin'}]}]},
  {clause,
   {241,1},
   [{match,
     {241,6},
     {tuple,
      {241,6},
      [{atom,{241,6},c_fun},
       {var,{241,6},'_'},
       {var,{241,6},'_'},
       {var,{241,6},'_'}]},
     {var,{241,15},'Fun'}},
    {atom,{241,20},effect},
    {var,{241,28},'Sub'}],
   [],
   [{debug_line,243,69},
    {call,
     {243,5},
     {atom,{243,5},warn_useless_building},
     [{var,{243,27},'Fun'},{var,{243,32},'Sub'}]},
    {debug_line,244,70},
    {call,{244,5},{atom,{244,5},void},[]}]},
  {clause,
   {245,1},
   [{match,
     {245,6},
     {tuple,
      {245,6},
      [{atom,{245,6},c_fun},
       {var,{245,6},'_'},
       {var,{245,18},'Vs0'},
       {var,{245,27},'B0'}]},
     {var,{245,31},'Fun'}},
    {var,{245,36},'Ctxt0'},
    {var,{245,43},'Sub0'}],
   [],
   [{debug_line,246,71},
    {match,
     {246,5},
     {tuple,{246,5},[{var,{246,6},'Vs1'},{var,{246,10},'Sub1'}]},
     {call,
      {246,18},
      {atom,{246,18},var_list},
      [{var,{246,27},'Vs0'},{var,{246,32},'Sub0'}]}},
    {debug_line,247,72},
    {match,
     {247,5},
     {var,{247,5},'Ctxt'},
     {'case',
      {247,12},
      {var,{247,17},'Ctxt0'},
      [{clause,
        {248,9},
        [{tuple,{248,9},[{atom,{248,10},letrec},{var,{248,17},'Ctxt1'}]}],
        [],
        [{debug_line,248,73},{var,{248,27},'Ctxt1'}]},
       {clause,
        {249,9},
        [{atom,{249,9},value}],
        [],
        [{debug_line,249,74},{atom,{249,18},value}]}]}},
    {debug_line,251,75},
    {match,
     {251,5},
     {var,{251,5},'B1'},
     {call,
      {251,10},
      {atom,{251,10},body},
      [{var,{251,15},'B0'},{var,{251,19},'Ctxt'},{var,{251,25},'Sub1'}]}},
    {debug_line,252,76},
    {block,
     {252,5},
     [{match,{252,5},{var,{252,5},rec4},{var,{252,5},'Fun'}},
      {'case',
       {252,15},
       {var,{252,5},rec4},
       [{clause,
         {252,15},
         [{tuple,
           {252,15},
           [{atom,{252,15},c_fun},
            {var,{252,15},'_'},
            {var,{252,15},'_'},
            {var,{252,15},'_'}]}],
         [],
         [{call,
           {252,15},
           {remote,{252,15},{atom,{252,15},erlang},{atom,{252,15},setelement}},
           [{integer,{252,15},3},
            {call,
             {252,24},
             {remote,
              {252,24},
              {atom,{252,24},erlang},
              {atom,{252,24},setelement}},
             [{integer,{252,24},4},{var,{252,5},rec4},{var,{252,29},'B1'}]},
            {var,{252,20},'Vs1'}]}]},
        {clause,
         [{generated,true},{location,{252,15}}],
         [{var,[{generated,true},{location,{252,15}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{252,15}}],
           {remote,
            [{generated,true},{location,{252,15}}],
            {atom,[{generated,true},{location,{252,15}}],erlang},
            {atom,[{generated,true},{location,{252,15}}],error}},
           [{tuple,
             [{generated,true},{location,{252,15}}],
             [{atom,[{generated,true},{location,{252,15}}],badrecord},
              {var,{252,5},rec4}]}]}]}]}]}]},
  {clause,
   {253,1},
   [{match,
     {253,6},
     {tuple,
      {253,6},
      [{atom,{253,6},c_seq},
       {var,{253,6},'_'},
       {var,{253,17},'Arg0'},
       {var,{253,27},'B0'}]},
     {var,{253,31},'Seq0'}},
    {var,{253,37},'Ctxt'},
    {var,{253,43},'Sub'}],
   [],
   [{debug_line,255,77},
    {match,
     {255,5},
     {var,{255,5},'B1'},
     {call,
      {255,10},
      {atom,{255,10},body},
      [{var,{255,15},'B0'},{var,{255,19},'Ctxt'},{var,{255,25},'Sub'}]}},
    {debug_line,256,78},
    {match,
     {256,5},
     {var,{256,5},'Arg'},
     {call,
      {256,11},
      {atom,{256,11},body},
      [{var,{256,16},'Arg0'},{atom,{256,22},effect},{var,{256,30},'Sub'}]}},
    {debug_line,257,79},
    {'case',
     {257,5},
     {call,{257,10},{atom,{257,10},will_fail},[{var,{257,20},'Arg'}]},
     [{clause,
       {258,2},
       [{atom,{258,2},true}],
       [],
       [{debug_line,259,80},{var,{259,6},'Arg'}]},
      {clause,
       {260,2},
       [{atom,{260,2},false}],
       [],
       [{debug_line,263,81},
        {'case',
         {263,13},
         {tuple,
          {263,18},
          [{var,{263,19},'Ctxt'},
           {call,
            {263,24},
            {atom,{263,24},is_safe_simple},
            [{var,{263,39},'Arg'}]}]},
         [{clause,
           {264,17},
           [{tuple,{264,17},[{atom,{264,18},effect},{atom,{264,25},true}]}],
           [],
           [{debug_line,264,82},{var,{264,34},'B1'}]},
          {clause,
           {265,17},
           [{tuple,{265,17},[{atom,{265,18},effect},{atom,{265,25},false}]}],
           [],
           [{debug_line,266,83},
            {'case',
             {266,21},
             {call,
              {266,26},
              {atom,{266,26},is_safe_simple},
              [{var,{266,41},'B1'}]},
             [{clause,
               {267,25},
               [{atom,{267,25},true}],
               [],
               [{debug_line,267,84},{var,{267,33},'Arg'}]},
              {clause,
               {268,25},
               [{atom,{268,25},false}],
               [],
               [{debug_line,268,85},
                {block,
                 {268,34},
                 [{match,{268,34},{var,{268,34},rec5},{var,{268,34},'Seq0'}},
                  {'case',
                   {268,45},
                   {var,{268,34},rec5},
                   [{clause,
                     {268,45},
                     [{tuple,
                       {268,45},
                       [{atom,{268,45},c_seq},
                        {var,{268,45},'_'},
                        {var,{268,45},'_'},
                        {var,{268,45},'_'}]}],
                     [],
                     [{call,
                       {268,45},
                       {remote,
                        {268,45},
                        {atom,{268,45},erlang},
                        {atom,{268,45},setelement}},
                       [{integer,{268,45},3},
                        {call,
                         {268,53},
                         {remote,
                          {268,53},
                          {atom,{268,53},erlang},
                          {atom,{268,53},setelement}},
                         [{integer,{268,53},4},
                          {var,{268,34},rec5},
                          {var,{268,58},'B1'}]},
                        {var,{268,49},'Arg'}]}]},
                    {clause,
                     [{generated,true},{location,{268,45}}],
                     [{var,[{generated,true},{location,{268,45}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{268,45}}],
                       {remote,
                        [{generated,true},{location,{268,45}}],
                        {atom,[{generated,true},{location,{268,45}}],erlang},
                        {atom,[{generated,true},{location,{268,45}}],error}},
                       [{tuple,
                         [{generated,true},{location,{268,45}}],
                         [{atom,
                           [{generated,true},{location,{268,45}}],
                           badrecord},
                          {var,{268,34},rec5}]}]}]}]}]}]}]}]},
          {clause,
           {270,17},
           [{tuple,{270,17},[{atom,{270,18},value},{atom,{270,24},true}]}],
           [],
           [{debug_line,270,86},{var,{270,33},'B1'}]},
          {clause,
           {271,17},
           [{tuple,{271,17},[{atom,{271,18},value},{atom,{271,24},false}]}],
           [],
           [{debug_line,271,87},
            {block,
             {271,34},
             [{match,{271,34},{var,{271,34},rec6},{var,{271,34},'Seq0'}},
              {'case',
               {271,45},
               {var,{271,34},rec6},
               [{clause,
                 {271,45},
                 [{tuple,
                   {271,45},
                   [{atom,{271,45},c_seq},
                    {var,{271,45},'_'},
                    {var,{271,45},'_'},
                    {var,{271,45},'_'}]}],
                 [],
                 [{call,
                   {271,45},
                   {remote,
                    {271,45},
                    {atom,{271,45},erlang},
                    {atom,{271,45},setelement}},
                   [{integer,{271,45},3},
                    {call,
                     {271,53},
                     {remote,
                      {271,53},
                      {atom,{271,53},erlang},
                      {atom,{271,53},setelement}},
                     [{integer,{271,53},4},
                      {var,{271,34},rec6},
                      {var,{271,58},'B1'}]},
                    {var,{271,49},'Arg'}]}]},
                {clause,
                 [{generated,true},{location,{271,45}}],
                 [{var,[{generated,true},{location,{271,45}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{271,45}}],
                   {remote,
                    [{generated,true},{location,{271,45}}],
                    {atom,[{generated,true},{location,{271,45}}],erlang},
                    {atom,[{generated,true},{location,{271,45}}],error}},
                   [{tuple,
                     [{generated,true},{location,{271,45}}],
                     [{atom,[{generated,true},{location,{271,45}}],badrecord},
                      {var,{271,34},rec6}]}]}]}]}]}]}]}]}]}]},
  {clause,
   {274,1},
   [{match,
     {274,6},
     {tuple,
      {274,6},
      [{atom,{274,6},c_let},
       {var,{274,6},'_'},
       {var,{274,6},'_'},
       {var,{274,6},'_'},
       {var,{274,6},'_'}]},
     {var,{274,15},'Let0'}},
    {var,{274,21},'Ctxt'},
    {var,{274,27},'Sub'}],
   [],
   [{debug_line,275,88},
    {match,
     {275,5},
     {var,{275,5},'Let'},
     {call,{275,11},{atom,{275,11},opt_case_in_let},[{var,{275,27},'Let0'}]}},
    {debug_line,276,89},
    {atom,{276,6},ignore},
    {debug_line,277,90},
    {call,
     {277,5},
     {atom,{277,5},opt_fun_call},
     [{block,0,
       [{call,
         {277,18},
         {atom,{277,18},opt_let},
         [{var,{277,26},'Let'},
          {var,{277,31},'Ctxt'},
          {var,{277,37},'Sub'}]}]}]}]},
  {clause,
   {278,1},
   [{match,
     {278,6},
     {tuple,
      {278,6},
      [{atom,{278,6},c_letrec},
       {var,{278,6},'_'},
       {var,{278,6},'_'},
       {tuple,
        {278,21},
        [{atom,{278,21},c_var},{var,{278,21},'_'},{var,{278,21},'_'}]}]},
     {var,{278,31},'Letrec'}},
    {atom,{278,39},effect},
    {var,{278,47},'_Sub'}],
   [],
   [{debug_line,280,91},
    {call,
     {280,5},
     {atom,{280,5},add_warning},
     [{var,{280,17},'Letrec'},
      {block,0,
       [{tuple,
         {280,25},
         [{atom,{280,26},ignored},{atom,{280,34},useless_building}]}]}]},
    {debug_line,281,92},
    {call,{281,5},{atom,{281,5},void},[]}]},
  {clause,
   {282,1},
   [{match,
     {282,6},
     {tuple,
      {282,6},
      [{atom,{282,6},c_letrec},
       {var,{282,6},'_'},
       {var,{282,21},'Fs0'},
       {var,{282,30},'B0'}]},
     {var,{282,34},'Letrec'}},
    {var,{282,42},'Ctxt'},
    {var,{282,48},'Sub'}],
   [],
   [{debug_line,283,93},
    {match,
     {283,5},
     {var,{283,5},'Fs1'},
     {call,
      {283,11},
      {remote,{283,11},{atom,{283,11},lists},{atom,{283,11},map}},
      [{block,0,
        [{'fun',
          {283,15},
          {clauses,
           [{clause,
             {283,19},
             [{tuple,{283,20},[{var,{283,21},'Name'},{var,{283,26},'Fb'}]}],
             [],
             [{debug_line,284,94},
              {'case',
               {284,23},
               {'case',
                {284,33},
                {op,
                 {284,33},
                 '=:=',
                 {var,{284,28},'Ctxt'},
                 {atom,{284,37},effect}},
                [{clause,
                  {284,33},
                  [{atom,{284,33},true}],
                  [],
                  [{call,
                    {284,52},
                    {atom,{284,52},is_fun_effect_safe},
                    [{var,{284,71},'Name'},{var,{284,77},'B0'}]}]},
                 {clause,
                  {284,33},
                  [{atom,{284,33},false}],
                  [],
                  [{atom,{284,33},false}]},
                 {clause,
                  [{generated,true},{location,{284,33}}],
                  [{var,{284,33},cov1}],
                  [],
                  [{call,
                    {284,33},
                    {remote,
                     {284,33},
                     {atom,{284,33},erlang},
                     {atom,{284,33},error}},
                    [{block,0,
                      [{tuple,
                        {284,33},
                        [{atom,{284,33},badarg},{var,{284,33},cov1}]}]}]}]}]},
               [{clause,
                 {285,27},
                 [{atom,{285,27},true}],
                 [],
                 [{debug_line,286,95},
                  {tuple,
                   {286,31},
                   [{var,{286,32},'Name'},
                    {call,
                     {286,37},
                     {atom,{286,37},expr},
                     [{var,{286,42},'Fb'},
                      {block,0,
                       [{tuple,
                         {286,46},
                         [{atom,{286,47},letrec},{atom,{286,55},effect}]}]},
                      {var,{286,64},'Sub'}]}]}]},
                {clause,
                 {287,27},
                 [{atom,{287,27},false}],
                 [],
                 [{debug_line,288,96},
                  {tuple,
                   {288,31},
                   [{var,{288,32},'Name'},
                    {call,
                     {288,37},
                     {atom,{288,37},expr},
                     [{var,{288,42},'Fb'},
                      {block,0,
                       [{tuple,
                         {288,46},
                         [{atom,{288,47},letrec},{atom,{288,55},value}]}]},
                      {var,{288,63},'Sub'}]}]}]}]}]}]}}]},
       {var,{290,13},'Fs0'}]}},
    {debug_line,291,97},
    {match,
     {291,5},
     {var,{291,5},'B1'},
     {call,
      {291,10},
      {atom,{291,10},body},
      [{var,{291,15},'B0'},{var,{291,19},'Ctxt'},{var,{291,25},'Sub'}]}},
    {debug_line,292,98},
    {block,
     {292,5},
     [{match,{292,5},{var,{292,5},rec7},{var,{292,5},'Letrec'}},
      {'case',
       {292,21},
       {var,{292,5},rec7},
       [{clause,
         {292,21},
         [{tuple,
           {292,21},
           [{atom,{292,21},c_letrec},
            {var,{292,21},'_'},
            {var,{292,21},'_'},
            {var,{292,21},'_'}]}],
         [],
         [{call,
           {292,21},
           {remote,{292,21},{atom,{292,21},erlang},{atom,{292,21},setelement}},
           [{integer,{292,21},3},
            {call,
             {292,30},
             {remote,
              {292,30},
              {atom,{292,30},erlang},
              {atom,{292,30},setelement}},
             [{integer,{292,30},4},{var,{292,5},rec7},{var,{292,35},'B1'}]},
            {var,{292,26},'Fs1'}]}]},
        {clause,
         [{generated,true},{location,{292,21}}],
         [{var,[{generated,true},{location,{292,21}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{292,21}}],
           {remote,
            [{generated,true},{location,{292,21}}],
            {atom,[{generated,true},{location,{292,21}}],erlang},
            {atom,[{generated,true},{location,{292,21}}],error}},
           [{tuple,
             [{generated,true},{location,{292,21}}],
             [{atom,[{generated,true},{location,{292,21}}],badrecord},
              {var,{292,5},rec7}]}]}]}]}]}]},
  {clause,
   {293,1},
   [{match,
     {293,6},
     {tuple,
      {293,6},
      [{atom,{293,6},c_case},
       {var,{293,6},'_'},
       {var,{293,6},'_'},
       {var,{293,6},'_'}]},
     {var,{293,16},'Case0'}},
    {var,{293,23},'Ctxt'},
    {var,{293,29},'Sub'}],
   [],
   [{debug_line,322,99},
    {match,
     {322,5},
     {var,{322,5},'Case1'},
     {call,
      {322,13},
      {atom,{322,13},opt_bool_case},
      [{var,{322,27},'Case0'},{var,{322,34},'Sub'}]}},
    {debug_line,323,100},
    {match,
     {323,5},
     {tuple,
      {323,5},
      [{atom,{323,5},c_case},
       {var,{323,18},'Anno'},
       {var,{323,27},'Arg0'},
       {var,{323,40},'Cs0'}]},
     {var,{323,47},'Case1'}},
    {debug_line,324,101},
    {match,
     {324,5},
     {var,{324,5},'Arg1'},
     {call,
      {324,12},
      {atom,{324,12},body},
      [{var,{324,17},'Arg0'},{atom,{324,23},value},{var,{324,30},'Sub'}]}},
    {debug_line,325,102},
    {match,
     {325,5},
     {var,{325,5},'LitExpr'},
     {call,
      {325,15},
      {remote,{325,19},{atom,{325,15},cerl},{atom,{325,20},is_literal}},
      [{var,{325,31},'Arg1'}]}},
    {debug_line,326,103},
    {match,
     {326,5},
     {tuple,{326,5},[{var,{326,6},'Arg2'},{var,{326,11},'Cs1'}]},
     {call,
      {326,18},
      {atom,{326,18},case_opt},
      [{var,{326,27},'Arg1'},{var,{326,33},'Cs0'},{var,{326,38},'Sub'}]}},
    {debug_line,327,104},
    {match,
     {327,5},
     {var,{327,5},'Cs2'},
     {call,
      {327,11},
      {atom,{327,11},clauses},
      [{var,{327,19},'Arg2'},
       {var,{327,25},'Cs1'},
       {var,{327,30},'Ctxt'},
       {var,{327,36},'Sub'},
       {var,{327,41},'LitExpr'},
       {var,{327,50},'Anno'}]}},
    {debug_line,328,105},
    {match,
     {328,5},
     {var,{328,5},'Case'},
     {block,
      {328,12},
      [{match,{328,12},{var,{328,12},rec8},{var,{328,12},'Case1'}},
       {'case',
        {328,25},
        {var,{328,12},rec8},
        [{clause,
          {328,25},
          [{tuple,
            {328,25},
            [{atom,{328,25},c_case},
             {var,{328,25},'_'},
             {var,{328,25},'_'},
             {var,{328,25},'_'}]}],
          [],
          [{call,
            {328,25},
            {remote,
             {328,25},
             {atom,{328,25},erlang},
             {atom,{328,25},setelement}},
            [{integer,{328,25},3},
             {call,
              {328,34},
              {remote,
               {328,34},
               {atom,{328,34},erlang},
               {atom,{328,34},setelement}},
              [{integer,{328,34},4},{var,{328,12},rec8},{var,{328,42},'Cs2'}]},
             {var,{328,29},'Arg2'}]}]},
         {clause,
          [{generated,true},{location,{328,25}}],
          [{var,[{generated,true},{location,{328,25}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{328,25}}],
            {remote,
             [{generated,true},{location,{328,25}}],
             {atom,[{generated,true},{location,{328,25}}],erlang},
             {atom,[{generated,true},{location,{328,25}}],error}},
            [{tuple,
              [{generated,true},{location,{328,25}}],
              [{atom,[{generated,true},{location,{328,25}}],badrecord},
               {var,{328,12},rec8}]}]}]}]}]}},
    {debug_line,329,106},
    {call,
     {329,5},
     {atom,{329,5},warn_no_clause_match},
     [{var,{329,26},'Case1'},{var,{329,33},'Case'}]},
    {debug_line,330,107},
    {match,
     {330,5},
     {var,{330,5},'Expr'},
     {call,
      {330,12},
      {atom,{330,12},eval_case},
      [{var,{330,22},'Case'},{var,{330,28},'Sub'}]}},
    {debug_line,331,108},
    {call,
     {331,5},
     {atom,{331,5},move_case_into_arg},
     [{var,{331,24},'Expr'},{var,{331,30},'Sub'}]}]},
  {clause,
   {332,1},
   [{match,
     {332,6},
     {tuple,
      {332,6},
      [{atom,{332,6},c_apply},
       {var,{332,20},'Anno'},
       {var,{332,28},'Op0'},
       {var,{332,37},'As0'}]},
     {var,{332,42},'Apply0'}},
    {var,{332,50},'_'},
    {var,{332,53},'Sub'}],
   [],
   [{debug_line,333,109},
    {match,
     {333,5},
     {var,{333,5},'Op1'},
     {call,
      {333,11},
      {atom,{333,11},expr},
      [{var,{333,16},'Op0'},{atom,{333,21},value},{var,{333,28},'Sub'}]}},
    {debug_line,334,110},
    {match,
     {334,5},
     {var,{334,5},'As1'},
     {call,
      {334,11},
      {atom,{334,11},expr_list},
      [{var,{334,21},'As0'},{atom,{334,26},value},{var,{334,33},'Sub'}]}},
    {debug_line,335,111},
    {'case',
     {335,5},
     {'case',
      {335,10},
      {call,
       {335,10},
       {remote,{335,14},{atom,{335,10},cerl},{atom,{335,15},is_data}},
       [{var,{335,23},'Op1'}]},
      [{clause,
        {335,10},
        [{atom,{335,10},true}],
        [],
        [{op,
          {335,36},
          'not',
          {call,
           {335,40},
           {atom,{335,40},is_literal_fun},
           [{var,{335,55},'Op1'}]}}]},
       {clause,{335,10},[{atom,{335,10},false}],[],[{atom,{335,10},false}]},
       {clause,
        [{generated,true},{location,{335,10}}],
        [{var,{335,10},cov2}],
        [],
        [{call,
          {335,10},
          {remote,{335,10},{atom,{335,10},erlang},{atom,{335,10},error}},
          [{block,0,
            [{tuple,
              {335,10},
              [{atom,{335,10},badarg},{var,{335,10},cov2}]}]}]}]}]},
     [{clause,
       {336,9},
       [{atom,{336,9},false}],
       [],
       [{debug_line,337,112},
        {match,
         {337,13},
         {var,{337,13},'Apply'},
         {block,
          {337,21},
          [{match,{337,21},{var,{337,21},rec9},{var,{337,21},'Apply0'}},
           {'case',
            {337,36},
            {var,{337,21},rec9},
            [{clause,
              {337,36},
              [{tuple,
                {337,36},
                [{atom,{337,36},c_apply},
                 {var,{337,36},'_'},
                 {var,{337,36},'_'},
                 {var,{337,36},'_'}]}],
              [],
              [{call,
                {337,36},
                {remote,
                 {337,36},
                 {atom,{337,36},erlang},
                 {atom,{337,36},setelement}},
                [{integer,{337,36},3},
                 {call,
                  {337,43},
                  {remote,
                   {337,43},
                   {atom,{337,43},erlang},
                   {atom,{337,43},setelement}},
                  [{integer,{337,43},4},
                   {var,{337,21},rec9},
                   {var,{337,48},'As1'}]},
                 {var,{337,39},'Op1'}]}]},
             {clause,
              [{generated,true},{location,{337,36}}],
              [{var,[{generated,true},{location,{337,36}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{337,36}}],
                {remote,
                 [{generated,true},{location,{337,36}}],
                 {atom,[{generated,true},{location,{337,36}}],erlang},
                 {atom,[{generated,true},{location,{337,36}}],error}},
                [{tuple,
                  [{generated,true},{location,{337,36}}],
                  [{atom,[{generated,true},{location,{337,36}}],badrecord},
                   {var,{337,21},rec9}]}]}]}]}]}},
        {debug_line,338,113},
        {call,
         {338,13},
         {atom,{338,13},fold_apply},
         [{var,{338,24},'Apply'},{var,{338,31},'Op1'},{var,{338,36},'As1'}]}]},
      {clause,
       {339,2},
       [{atom,{339,2},true}],
       [],
       [{debug_line,340,114},
        {call,
         {340,6},
         {atom,{340,6},add_warning},
         [{var,{340,18},'Apply0'},
          {block,0,
           [{tuple,
             {340,26},
             [{atom,{340,27},failed},{atom,{340,34},bad_call}]}]}]},
        {debug_line,341,115},
        {match,
         {341,6},
         {var,{341,6},'Err'},
         {tuple,
          {341,12},
          [{atom,{341,12},c_call},
           {var,{341,25},'Anno'},
           {tuple,
            {342,13},
            [{atom,{342,13},c_literal},{nil,{342,13}},{atom,{342,28},erlang}]},
           {tuple,
            {343,11},
            [{atom,{343,11},c_literal},{nil,{343,11}},{atom,{343,26},error}]},
           {cons,
            {344,11},
            {tuple,
             {344,12},
             [{atom,{344,12},c_tuple},
              {nil,{344,12}},
              {cons,
               {344,24},
               {tuple,
                {344,25},
                [{atom,{344,25},c_literal},
                 {nil,{344,25}},
                 {atom,{344,40},badfun}]},
               {cons,{345,11},{var,{345,11},'Op1'},{nil,{345,14}}}}]},
            {nil,{345,16}}}]}},
        {debug_line,346,116},
        {call,
         {346,6},
         {atom,{346,6},make_effect_seq},
         [{block,0,
           [{op,
             {346,25},
             '++',
             {var,{346,22},'As1'},
             {cons,{346,27},{var,{346,28},'Err'},{nil,{346,31}}}}]},
          {var,{346,34},'Sub'}]}]}]}]},
  {clause,
   {348,1},
   [{match,
     {348,6},
     {tuple,
      {348,6},
      [{atom,{348,6},c_call},
       {var,{348,6},'_'},
       {var,{348,21},'M0'},
       {var,{348,29},'N0'},
       {var,{348,6},'_'}]},
     {var,{348,33},'Call0'}},
    {var,{348,40},'Ctxt'},
    {var,{348,46},'Sub'}],
   [],
   [{debug_line,349,117},
    {match,
     {349,5},
     {var,{349,5},'M1'},
     {call,
      {349,10},
      {atom,{349,10},expr},
      [{var,{349,15},'M0'},{atom,{349,19},value},{var,{349,26},'Sub'}]}},
    {debug_line,350,118},
    {match,
     {350,5},
     {var,{350,5},'N1'},
     {call,
      {350,10},
      {atom,{350,10},expr},
      [{var,{350,15},'N0'},{atom,{350,19},value},{var,{350,26},'Sub'}]}},
    {debug_line,351,119},
    {match,
     {351,5},
     {var,{351,5},'Call'},
     {block,
      {351,12},
      [{match,{351,12},{var,{351,12},rec10},{var,{351,12},'Call0'}},
       {'case',
        {351,25},
        {var,{351,12},rec10},
        [{clause,
          {351,25},
          [{tuple,
            {351,25},
            [{atom,{351,25},c_call},
             {var,{351,25},'_'},
             {var,{351,25},'_'},
             {var,{351,25},'_'},
             {var,{351,25},'_'}]}],
          [],
          [{call,
            {351,25},
            {remote,
             {351,25},
             {atom,{351,25},erlang},
             {atom,{351,25},setelement}},
            [{integer,{351,25},3},
             {call,
              {351,35},
              {remote,
               {351,35},
               {atom,{351,35},erlang},
               {atom,{351,35},setelement}},
              [{integer,{351,35},4},{var,{351,12},rec10},{var,{351,40},'N1'}]},
             {var,{351,32},'M1'}]}]},
         {clause,
          [{generated,true},{location,{351,25}}],
          [{var,[{generated,true},{location,{351,25}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{351,25}}],
            {remote,
             [{generated,true},{location,{351,25}}],
             {atom,[{generated,true},{location,{351,25}}],erlang},
             {atom,[{generated,true},{location,{351,25}}],error}},
            [{tuple,
              [{generated,true},{location,{351,25}}],
              [{atom,[{generated,true},{location,{351,25}}],badrecord},
               {var,{351,12},rec10}]}]}]}]}]}},
    {debug_line,352,120},
    {'case',
     {352,5},
     {call,
      {352,10},
      {atom,{352,10},useless_call},
      [{var,{352,23},'Ctxt'},{var,{352,29},'Call'}]},
     [{clause,
       {353,2},
       [{atom,{353,2},no}],
       [],
       [{debug_line,353,121},
        {call,
         {353,8},
         {atom,{353,8},call},
         [{var,{353,13},'Call'},
          {var,{353,19},'M1'},
          {var,{353,23},'N1'},
          {var,{353,27},'Sub'}]}]},
      {clause,
       {354,2},
       [{tuple,{354,2},[{atom,{354,3},yes},{var,{354,7},'Seq'}]}],
       [],
       [{debug_line,354,122},
        {call,
         {354,15},
         {atom,{354,15},expr},
         [{var,{354,20},'Seq'},
          {var,{354,25},'Ctxt'},
          {var,{354,31},'Sub'}]}]}]}]},
  {clause,
   {356,1},
   [{tuple,
     {356,6},
     [{atom,{356,6},c_primop},
      {var,{356,6},'_'},
      {tuple,
       {356,21},
       [{atom,{356,21},c_literal},
        {var,{356,21},'_'},
        {atom,{356,36},build_stacktrace}]},
      {var,{356,6},'_'}]},
    {atom,{356,56},effect},
    {var,{356,64},'_Sub'}],
   [],
   [{debug_line,357,123},{call,{357,5},{atom,{357,5},void},[]}]},
  {clause,
   {358,1},
   [{match,
     {358,6},
     {tuple,
      {358,6},
      [{atom,{358,6},c_primop},
       {var,{358,6},'_'},
       {var,{358,6},'_'},
       {var,{358,21},'As0'}]},
     {var,{358,26},'Prim'}},
    {var,{358,32},'_'},
    {var,{358,35},'Sub'}],
   [],
   [{debug_line,359,124},
    {match,
     {359,5},
     {var,{359,5},'As1'},
     {call,
      {359,11},
      {atom,{359,11},expr_list},
      [{var,{359,21},'As0'},{atom,{359,26},value},{var,{359,33},'Sub'}]}},
    {debug_line,360,125},
    {block,
     {360,5},
     [{match,{360,5},{var,{360,5},rec11},{var,{360,5},'Prim'}},
      {'case',
       {360,19},
       {var,{360,5},rec11},
       [{clause,
         {360,19},
         [{tuple,
           {360,19},
           [{atom,{360,19},c_primop},
            {var,{360,19},'_'},
            {var,{360,19},'_'},
            {var,{360,19},'_'}]}],
         [],
         [{call,
           {360,19},
           {remote,{360,19},{atom,{360,19},erlang},{atom,{360,19},setelement}},
           [{integer,{360,19},4},{var,{360,5},rec11},{var,{360,24},'As1'}]}]},
        {clause,
         [{generated,true},{location,{360,19}}],
         [{var,[{generated,true},{location,{360,19}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{360,19}}],
           {remote,
            [{generated,true},{location,{360,19}}],
            {atom,[{generated,true},{location,{360,19}}],erlang},
            {atom,[{generated,true},{location,{360,19}}],error}},
           [{tuple,
             [{generated,true},{location,{360,19}}],
             [{atom,[{generated,true},{location,{360,19}}],badrecord},
              {var,{360,5},rec11}]}]}]}]}]}]},
  {clause,
   {361,1},
   [{tuple,
     {361,6},
     [{atom,{361,6},c_catch},{var,{361,20},'Anno'},{var,{361,30},'B'}]},
    {atom,{361,34},effect},
    {var,{361,42},'Sub'}],
   [],
   [{debug_line,365,126},
    {match,
     {365,5},
     {var,{365,5},'Var'},
     {tuple,
      {365,11},
      [{atom,{365,11},c_var},{nil,{365,11}},{atom,{365,23},catch_value}]}},
    {debug_line,366,127},
    {match,
     {366,5},
     {var,{366,5},'Evs'},
     {cons,
      {366,11},
      {tuple,
       {366,12},
       [{atom,{366,12},c_var},{nil,{366,12}},{atom,{366,24},'Class'}]},
      {cons,
       {366,33},
       {tuple,
        {366,33},
        [{atom,{366,33},c_var},{nil,{366,33}},{atom,{366,45},'Reason'}]},
       {cons,
        {366,55},
        {tuple,
         {366,55},
         [{atom,{366,55},c_var},{nil,{366,55}},{atom,{366,67},'Stk'}]},
        {nil,{366,73}}}}}},
    {debug_line,367,128},
    {match,
     {367,5},
     {var,{367,5},'Try'},
     {tuple,
      {367,11},
      [{atom,{367,11},c_try},
       {var,{367,23},'Anno'},
       {var,{367,32},'B'},
       {cons,{367,39},{var,{367,40},'Var'},{nil,{367,43}}},
       {var,{367,50},'Var'},
       {var,{368,24},'Evs'},
       {call,{368,36},{atom,{368,36},void},[]}]}},
    {debug_line,369,129},
    {call,
     {369,5},
     {atom,{369,5},expr},
     [{var,{369,10},'Try'},{atom,{369,15},effect},{var,{369,23},'Sub'}]}]},
  {clause,
   {370,1},
   [{match,
     {370,6},
     {tuple,
      {370,6},
      [{atom,{370,6},c_catch},{var,{370,6},'_'},{var,{370,20},'B0'}]},
     {var,{370,24},'Catch'}},
    {var,{370,31},'_'},
    {var,{370,34},'Sub'}],
   [],
   [{debug_line,372,130},
    {match,
     {372,5},
     {var,{372,5},'B1'},
     {call,
      {372,10},
      {atom,{372,10},body},
      [{var,{372,15},'B0'},{atom,{372,19},value},{var,{372,26},'Sub'}]}},
    {debug_line,373,131},
    {'case',
     {373,5},
     {call,{373,10},{atom,{373,10},is_safe_simple},[{var,{373,25},'B1'}]},
     [{clause,
       {374,2},
       [{atom,{374,2},true}],
       [],
       [{debug_line,374,132},{var,{374,10},'B1'}]},
      {clause,
       {375,2},
       [{atom,{375,2},false}],
       [],
       [{debug_line,375,133},
        {block,
         {375,11},
         [{match,{375,11},{var,{375,11},rec12},{var,{375,11},'Catch'}},
          {'case',
           {375,25},
           {var,{375,11},rec12},
           [{clause,
             {375,25},
             [{tuple,
               {375,25},
               [{atom,{375,25},c_catch},
                {var,{375,25},'_'},
                {var,{375,25},'_'}]}],
             [],
             [{call,
               {375,25},
               {remote,
                {375,25},
                {atom,{375,25},erlang},
                {atom,{375,25},setelement}},
               [{integer,{375,25},3},
                {var,{375,11},rec12},
                {var,{375,30},'B1'}]}]},
            {clause,
             [{generated,true},{location,{375,25}}],
             [{var,[{generated,true},{location,{375,25}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{375,25}}],
               {remote,
                [{generated,true},{location,{375,25}}],
                {atom,[{generated,true},{location,{375,25}}],erlang},
                {atom,[{generated,true},{location,{375,25}}],error}},
               [{tuple,
                 [{generated,true},{location,{375,25}}],
                 [{atom,[{generated,true},{location,{375,25}}],badrecord},
                  {var,{375,11},rec12}]}]}]}]}]}]}]}]},
  {clause,
   {377,1},
   [{match,
     {377,6},
     {tuple,
      {377,6},
      [{atom,{377,6},c_try},
       {var,{377,6},'_'},
       {var,{377,17},'E0'},
       {cons,
        {377,25},
        {tuple,
         {377,26},
         [{atom,{377,26},c_var},{var,{377,26},'_'},{var,{377,38},'X'}]},
        {nil,{377,40}}},
       {tuple,
        {377,47},
        [{atom,{377,47},c_var},{var,{377,47},'_'},{var,{377,59},'X'}]},
       {var,{377,6},'_'},
       {match,
        {378,14},
        {tuple,
         {378,14},
         [{atom,{378,14},c_literal},{var,{378,14},'_'},{atom,{378,29},false}]},
        {var,{378,36},'False'}}]},
     {var,{378,43},'Try'}},
    {var,{378,48},'_'},
    {var,{378,51},'Sub'}],
   [],
   [{debug_line,381,134},
    {match,
     {381,5},
     {var,{381,5},'E1'},
     {call,
      {381,10},
      {atom,{381,10},body},
      [{var,{381,15},'E0'},{atom,{381,19},value},{var,{381,26},'Sub'}]}},
    {debug_line,382,135},
    {'case',
     {382,5},
     {call,{382,10},{atom,{382,10},will_fail},[{var,{382,20},'E1'}]},
     [{clause,
       {383,2},
       [{atom,{383,2},false}],
       [],
       [{debug_line,386,136},
        {'case',
         {386,6},
         {'case',
          {386,11},
          {call,
           {386,11},
           {atom,{386,11},is_safe_bool_expr},
           [{var,{386,29},'E1'}]},
          [{clause,{386,11},[{atom,{386,11},true}],[],[{atom,{386,11},true}]},
           {clause,
            {386,11},
            [{atom,{386,11},false}],
            [],
            [{call,
              {386,40},
              {atom,{386,40},is_safe_simple},
              [{var,{386,55},'E1'}]}]},
           {clause,
            [{generated,true},{location,{386,11}}],
            [{var,{386,11},cov3}],
            [],
            [{call,
              {386,11},
              {remote,{386,11},{atom,{386,11},erlang},{atom,{386,11},error}},
              [{block,0,
                [{tuple,
                  {386,11},
                  [{atom,{386,11},badarg},{var,{386,11},cov3}]}]}]}]}]},
         [{clause,
           {387,3},
           [{atom,{387,3},true}],
           [],
           [{debug_line,387,137},{var,{387,11},'E1'}]},
          {clause,
           {388,3},
           [{atom,{388,3},false}],
           [],
           [{debug_line,388,138},
            {block,
             {388,12},
             [{match,{388,12},{var,{388,12},rec13},{var,{388,12},'Try'}},
              {'case',
               {388,22},
               {var,{388,12},rec13},
               [{clause,
                 {388,22},
                 [{tuple,
                   {388,22},
                   [{atom,{388,22},c_try},
                    {var,{388,22},'_'},
                    {var,{388,22},'_'},
                    {var,{388,22},'_'},
                    {var,{388,22},'_'},
                    {var,{388,22},'_'},
                    {var,{388,22},'_'}]}],
                 [],
                 [{call,
                   {388,22},
                   {remote,
                    {388,22},
                    {atom,{388,22},erlang},
                    {atom,{388,22},setelement}},
                   [{integer,{388,22},3},
                    {var,{388,12},rec13},
                    {var,{388,26},'E1'}]}]},
                {clause,
                 [{generated,true},{location,{388,22}}],
                 [{var,[{generated,true},{location,{388,22}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{388,22}}],
                   {remote,
                    [{generated,true},{location,{388,22}}],
                    {atom,[{generated,true},{location,{388,22}}],erlang},
                    {atom,[{generated,true},{location,{388,22}}],error}},
                   [{tuple,
                     [{generated,true},{location,{388,22}}],
                     [{atom,[{generated,true},{location,{388,22}}],badrecord},
                      {var,{388,12},rec13}]}]}]}]}]}]}]}]},
      {clause,
       {390,2},
       [{atom,{390,2},true}],
       [],
       [{debug_line,392,139},{var,{392,6},'False'}]}]}]},
  {clause,
   {394,1},
   [{match,
     {394,6},
     {tuple,
      {394,6},
      [{atom,{394,6},c_try},
       {var,{394,18},'A'},
       {var,{394,24},'E0'},
       {var,{394,32},'Vs0'},
       {var,{394,41},'B0'},
       {var,{394,50},'Evs0'},
       {var,{394,63},'H0'}]},
     {var,{394,67},'Try'}},
    {var,{394,72},'_'},
    {var,{394,75},'Sub0'}],
   [],
   [{debug_line,397,140},
    {match,
     {397,5},
     {var,{397,5},'E1'},
     {call,
      {397,10},
      {atom,{397,10},body},
      [{var,{397,15},'E0'},{atom,{397,19},value},{var,{397,26},'Sub0'}]}},
    {debug_line,398,141},
    {match,
     {398,5},
     {tuple,{398,5},[{var,{398,6},'Vs1'},{var,{398,10},'Sub1'}]},
     {call,
      {398,18},
      {atom,{398,18},var_list},
      [{var,{398,27},'Vs0'},{var,{398,32},'Sub0'}]}},
    {debug_line,399,142},
    {match,
     {399,5},
     {var,{399,5},'B1'},
     {call,
      {399,10},
      {atom,{399,10},body},
      [{var,{399,15},'B0'},{atom,{399,19},value},{var,{399,26},'Sub1'}]}},
    {debug_line,400,143},
    {'case',
     {400,5},
     {call,{400,10},{atom,{400,10},is_safe_simple},[{var,{400,25},'E1'}]},
     [{clause,
       {401,2},
       [{atom,{401,2},true}],
       [],
       [{debug_line,402,144},
        {call,
         {402,6},
         {atom,{402,6},expr},
         [{block,0,
           [{tuple,
             {402,11},
             [{atom,{402,11},c_let},
              {var,{402,23},'A'},
              {var,{402,30},'Vs1'},
              {var,{402,38},'E1'},
              {var,{402,46},'B1'}]}]},
          {atom,{402,51},value},
          {var,{402,58},'Sub0'}]}]},
      {clause,
       {403,2},
       [{atom,{403,2},false}],
       [],
       [{debug_line,404,145},
        {match,
         {404,6},
         {tuple,{404,6},[{var,{404,7},'Evs1'},{var,{404,12},'Sub2'}]},
         {call,
          {404,20},
          {atom,{404,20},var_list},
          [{var,{404,29},'Evs0'},{var,{404,35},'Sub0'}]}},
        {debug_line,405,146},
        {match,
         {405,6},
         {var,{405,6},'H1'},
         {call,
          {405,11},
          {atom,{405,11},body},
          [{var,{405,16},'H0'},{atom,{405,20},value},{var,{405,27},'Sub2'}]}},
        {debug_line,406,147},
        {block,
         {406,6},
         [{match,{406,6},{var,{406,6},rec14},{var,{406,6},'Try'}},
          {'case',
           {406,16},
           {var,{406,6},rec14},
           [{clause,
             {406,16},
             [{tuple,
               {406,16},
               [{atom,{406,16},c_try},
                {var,{406,16},'_'},
                {var,{406,16},'_'},
                {var,{406,16},'_'},
                {var,{406,16},'_'},
                {var,{406,16},'_'},
                {var,{406,16},'_'}]}],
             [],
             [{call,
               {406,16},
               {remote,
                {406,16},
                {atom,{406,16},erlang},
                {atom,{406,16},setelement}},
               [{integer,{406,16},3},
                {call,
                 {406,23},
                 {remote,
                  {406,23},
                  {atom,{406,23},erlang},
                  {atom,{406,23},setelement}},
                 [{integer,{406,23},4},
                  {call,
                   {406,32},
                   {remote,
                    {406,32},
                    {atom,{406,32},erlang},
                    {atom,{406,32},setelement}},
                   [{integer,{406,32},5},
                    {call,
                     {406,40},
                     {remote,
                      {406,40},
                      {atom,{406,40},erlang},
                      {atom,{406,40},setelement}},
                     [{integer,{406,40},6},
                      {call,
                       {406,51},
                       {remote,
                        {406,51},
                        {atom,{406,51},erlang},
                        {atom,{406,51},setelement}},
                       [{integer,{406,51},7},
                        {var,{406,6},rec14},
                        {var,{406,59},'H1'}]},
                      {var,{406,46},'Evs1'}]},
                    {var,{406,37},'B1'}]},
                  {var,{406,28},'Vs1'}]},
                {var,{406,20},'E1'}]}]},
            {clause,
             [{generated,true},{location,{406,16}}],
             [{var,[{generated,true},{location,{406,16}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{406,16}}],
               {remote,
                [{generated,true},{location,{406,16}}],
                {atom,[{generated,true},{location,{406,16}}],erlang},
                {atom,[{generated,true},{location,{406,16}}],error}},
               [{tuple,
                 [{generated,true},{location,{406,16}}],
                 [{atom,[{generated,true},{location,{406,16}}],badrecord},
                  {var,{406,6},rec14}]}]}]}]}]}]}]}]},
  {clause,
   {408,1},
   [{match,
     {408,6},
     {tuple,
      {408,6},
      [{atom,{408,6},c_opaque},{var,{408,6},'_'},{var,{408,6},'_'}]},
     {var,{408,18},'O'}},
    {atom,{408,21},effect},
    {var,{408,29},'_Sub'}],
   [],
   [{debug_line,409,148},{var,{409,5},'O'}]}]}.
{function,{423,1},
          is_fun_effect_safe,2,
          [{clause,{423,1},
                   [{var,{423,1},'_'},{var,{423,1},'_'}],
                   [[{call,{423,1},
                           {remote,{423,1},
                                   {atom,{423,1},fake},
                                   {atom,{423,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,423,149},{atom,{423,1},ignore}]},
           {clause,{423,1},
                   [{match,{423,20},
                           {tuple,{423,20},
                                  [{atom,{423,20},c_var},
                                   {var,{423,20},'_'},
                                   {var,{423,20},'_'}]},
                           {var,{423,29},'FVar'}},
                    {var,{423,35},'Body'}],
                   [],
                   [{debug_line,424,150},
                    {call,{424,5},
                          {atom,{424,5},ifes_1},
                          [{var,{424,12},'FVar'},
                           {var,{424,18},'Body'},
                           {atom,{424,24},true}]}]}]}.
{function,
 {426,1},
 ifes_1,3,
 [{clause,
   {426,1},
   [{var,{426,1},'_'},{var,{426,1},'_'},{var,{426,1},'_'}],
   [[{call,
      {426,1},
      {remote,{426,1},{atom,{426,1},fake},{atom,{426,1},is_beam_bif_info}},
      []}]],
   [{debug_line,426,151},{atom,{426,1},ignore}]},
  {clause,
   {426,1},
   [{var,{426,8},'FVar'},
    {tuple,
     {426,14},
     [{atom,{426,14},c_alias},
      {var,{426,14},'_'},
      {var,{426,14},'_'},
      {var,{426,27},'Pat'}]},
    {var,{426,33},'_Safe'}],
   [],
   [{debug_line,427,152},
    {call,
     {427,5},
     {atom,{427,5},ifes_1},
     [{var,{427,12},'FVar'},{var,{427,18},'Pat'},{atom,{427,23},false}]}]},
  {clause,
   {428,1},
   [{var,{428,8},'FVar'},
    {tuple,
     {428,14},
     [{atom,{428,14},c_apply},
      {var,{428,14},'_'},
      {var,{428,26},'Op'},
      {var,{428,34},'Args'}]},
    {var,{428,41},'Safe'}],
   [],
   [{debug_line,431,153},
    {'case',
     {431,5},
     {call,
      {431,5},
      {atom,{431,5},ifes_list},
      [{var,{431,15},'FVar'},{var,{431,21},'Args'},{atom,{431,27},false}]},
     [{clause,
       {431,5},
       [{atom,{431,5},true}],
       [],
       [{call,
         {431,42},
         {atom,{431,42},ifes_1},
         [{var,{431,49},'FVar'},{var,{431,55},'Op'},{var,{431,59},'Safe'}]}]},
      {clause,{431,5},[{atom,{431,5},false}],[],[{atom,{431,5},false}]},
      {clause,
       [{generated,true},{location,{431,5}}],
       [{var,{431,5},cov1}],
       [],
       [{call,
         {431,5},
         {remote,{431,5},{atom,{431,5},erlang},{atom,{431,5},error}},
         [{block,0,
           [{tuple,
             {431,5},
             [{atom,{431,5},badarg},{var,{431,5},cov1}]}]}]}]}]}]},
  {clause,
   {432,1},
   [{var,{432,8},'FVar'},
    {tuple,
     {432,14},
     [{atom,{432,14},c_binary},{var,{432,14},'_'},{var,{432,33},'Segments'}]},
    {var,{432,44},'_Safe'}],
   [],
   [{debug_line,433,154},
    {call,
     {433,5},
     {atom,{433,5},ifes_list},
     [{var,{433,15},'FVar'},
      {var,{433,21},'Segments'},
      {atom,{433,31},false}]}]},
  {clause,
   {434,1},
   [{var,{434,8},'FVar'},
    {tuple,
     {434,14},
     [{atom,{434,14},c_bitstr},
      {var,{434,14},'_'},
      {var,{434,28},'Val'},
      {var,{434,37},'Size'},
      {var,{434,47},'Unit'},
      {var,{434,14},'_'},
      {var,{434,14},'_'}]},
    {var,{434,54},'_Safe'}],
   [],
   [{debug_line,435,155},
    {call,
     {435,5},
     {atom,{435,5},ifes_list},
     [{var,{435,15},'FVar'},
      {block,0,
       [{cons,
         {435,21},
         {var,{435,22},'Val'},
         {cons,
          {435,27},
          {var,{435,27},'Size'},
          {cons,{435,33},{var,{435,33},'Unit'},{nil,{435,37}}}}}]},
      {atom,{435,40},false}]}]},
  {clause,
   {436,1},
   [{var,{436,8},'FVar'},
    {tuple,
     {436,14},
     [{atom,{436,14},c_call},
      {var,{436,14},'_'},
      {var,{436,14},'_'},
      {var,{436,14},'_'},
      {var,{436,27},'Args'}]},
    {var,{436,34},'_Safe'}],
   [],
   [{debug_line,437,156},
    {call,
     {437,5},
     {atom,{437,5},ifes_list},
     [{var,{437,15},'FVar'},{var,{437,21},'Args'},{atom,{437,27},false}]}]},
  {clause,
   {438,1},
   [{var,{438,8},'FVar'},
    {tuple,
     {438,14},
     [{atom,{438,14},c_case},
      {var,{438,14},'_'},
      {var,{438,26},'Arg'},
      {var,{438,38},'Clauses'}]},
    {var,{438,48},'Safe'}],
   [],
   [{debug_line,439,157},
    {'case',
     {439,5},
     {call,
      {439,5},
      {atom,{439,5},ifes_1},
      [{var,{439,12},'FVar'},{var,{439,18},'Arg'},{atom,{439,23},false}]},
     [{clause,
       {439,5},
       [{atom,{439,5},true}],
       [],
       [{call,
         {439,38},
         {atom,{439,38},ifes_list},
         [{var,{439,48},'FVar'},
          {var,{439,54},'Clauses'},
          {var,{439,63},'Safe'}]}]},
      {clause,{439,5},[{atom,{439,5},false}],[],[{atom,{439,5},false}]},
      {clause,
       [{generated,true},{location,{439,5}}],
       [{var,{439,5},cov2}],
       [],
       [{call,
         {439,5},
         {remote,{439,5},{atom,{439,5},erlang},{atom,{439,5},error}},
         [{block,0,
           [{tuple,
             {439,5},
             [{atom,{439,5},badarg},{var,{439,5},cov2}]}]}]}]}]}]},
  {clause,
   {440,1},
   [{var,{440,8},'FVar'},
    {tuple,
     {440,14},
     [{atom,{440,14},c_catch},{var,{440,14},'_'},{var,{440,28},'Body'}]},
    {var,{440,35},'_Safe'}],
   [],
   [{debug_line,441,158},
    {call,
     {441,5},
     {atom,{441,5},ifes_1},
     [{var,{441,12},'FVar'},{var,{441,18},'Body'},{atom,{441,24},false}]}]},
  {clause,
   {442,1},
   [{var,{442,8},'FVar'},
    {tuple,
     {442,14},
     [{atom,{442,14},c_clause},
      {var,{442,14},'_'},
      {var,{442,29},'Pats'},
      {var,{442,40},'Guard'},
      {var,{442,51},'Body'}]},
    {var,{442,58},'Safe'}],
   [],
   [{debug_line,443,159},
    {'case',
     {443,5},
     {call,
      {443,5},
      {atom,{443,5},ifes_list},
      [{var,{443,15},'FVar'},{var,{443,21},'Pats'},{atom,{443,27},false}]},
     [{clause,
       {443,5},
       [{atom,{443,5},true}],
       [],
       [{debug_line,444,160},
        {'case',
         {444,9},
         {call,
          {444,9},
          {atom,{444,9},ifes_1},
          [{var,{444,16},'FVar'},
           {var,{444,22},'Guard'},
           {atom,{444,29},false}]},
         [{clause,
           {444,9},
           [{atom,{444,9},true}],
           [],
           [{debug_line,445,161},
            {call,
             {445,9},
             {atom,{445,9},ifes_1},
             [{var,{445,16},'FVar'},
              {var,{445,22},'Body'},
              {var,{445,28},'Safe'}]}]},
          {clause,{444,9},[{atom,{444,9},false}],[],[{atom,{444,9},false}]},
          {clause,
           [{generated,true},{location,{444,9}}],
           [{var,{444,9},cov3}],
           [],
           [{call,
             {444,9},
             {remote,{444,9},{atom,{444,9},erlang},{atom,{444,9},error}},
             [{block,0,
               [{tuple,
                 {444,9},
                 [{atom,{444,9},badarg},{var,{444,9},cov3}]}]}]}]}]}]},
      {clause,{443,5},[{atom,{443,5},false}],[],[{atom,{443,5},false}]},
      {clause,
       [{generated,true},{location,{443,5}}],
       [{var,{443,5},cov4}],
       [],
       [{call,
         {443,5},
         {remote,{443,5},{atom,{443,5},erlang},{atom,{443,5},error}},
         [{block,0,
           [{tuple,
             {443,5},
             [{atom,{443,5},badarg},{var,{443,5},cov4}]}]}]}]}]}]},
  {clause,
   {446,1},
   [{var,{446,8},'FVar'},
    {tuple,
     {446,14},
     [{atom,{446,14},c_cons},
      {var,{446,14},'_'},
      {var,{446,25},'Hd'},
      {var,{446,31},'Tl'}]},
    {var,{446,36},'_Safe'}],
   [],
   [{debug_line,447,162},
    {'case',
     {447,5},
     {call,
      {447,5},
      {atom,{447,5},ifes_1},
      [{var,{447,12},'FVar'},{var,{447,18},'Hd'},{atom,{447,22},false}]},
     [{clause,
       {447,5},
       [{atom,{447,5},true}],
       [],
       [{call,
         {447,37},
         {atom,{447,37},ifes_1},
         [{var,{447,44},'FVar'},{var,{447,50},'Tl'},{atom,{447,54},false}]}]},
      {clause,{447,5},[{atom,{447,5},false}],[],[{atom,{447,5},false}]},
      {clause,
       [{generated,true},{location,{447,5}}],
       [{var,{447,5},cov5}],
       [],
       [{call,
         {447,5},
         {remote,{447,5},{atom,{447,5},erlang},{atom,{447,5},error}},
         [{block,0,
           [{tuple,
             {447,5},
             [{atom,{447,5},badarg},{var,{447,5},cov5}]}]}]}]}]}]},
  {clause,
   {448,1},
   [{var,{448,8},'FVar'},
    {tuple,
     {448,14},
     [{atom,{448,14},c_fun},
      {var,{448,14},'_'},
      {var,{448,14},'_'},
      {var,{448,26},'Body'}]},
    {var,{448,33},'_Safe'}],
   [],
   [{debug_line,449,163},
    {call,
     {449,5},
     {atom,{449,5},ifes_1},
     [{var,{449,12},'FVar'},{var,{449,18},'Body'},{atom,{449,24},false}]}]},
  {clause,
   {450,1},
   [{var,{450,8},'FVar'},
    {tuple,
     {450,14},
     [{atom,{450,14},c_let},
      {var,{450,14},'_'},
      {var,{450,14},'_'},
      {var,{450,25},'Arg'},
      {var,{450,34},'Body'}]},
    {var,{450,41},'Safe'}],
   [],
   [{debug_line,451,164},
    {'case',
     {451,5},
     {call,
      {451,5},
      {atom,{451,5},ifes_1},
      [{var,{451,12},'FVar'},{var,{451,18},'Arg'},{atom,{451,23},false}]},
     [{clause,
       {451,5},
       [{atom,{451,5},true}],
       [],
       [{call,
         {451,38},
         {atom,{451,38},ifes_1},
         [{var,{451,45},'FVar'},
          {var,{451,51},'Body'},
          {var,{451,57},'Safe'}]}]},
      {clause,{451,5},[{atom,{451,5},false}],[],[{atom,{451,5},false}]},
      {clause,
       [{generated,true},{location,{451,5}}],
       [{var,{451,5},cov6}],
       [],
       [{call,
         {451,5},
         {remote,{451,5},{atom,{451,5},erlang},{atom,{451,5},error}},
         [{block,0,
           [{tuple,
             {451,5},
             [{atom,{451,5},badarg},{var,{451,5},cov6}]}]}]}]}]}]},
  {clause,
   {452,1},
   [{var,{452,8},'FVar'},
    {tuple,
     {452,14},
     [{atom,{452,14},c_letrec},
      {var,{452,14},'_'},
      {var,{452,29},'Defs'},
      {var,{452,39},'Body'}]},
    {var,{452,46},'Safe'}],
   [],
   [{debug_line,453,165},
    {match,
     {453,5},
     {var,{453,5},'Funs'},
     {lc,
      {453,12},
      {block,0,[{var,{453,13},'Fun'}]},
      [{block,0,[{atom,{453,32},true}]},
       {generate_strict,
        {453,28},
        {tuple,{453,20},[{var,{453,21},'_'},{var,{453,23},'Fun'}]},
        {var,{453,32},'Defs'}}]}},
    {debug_line,454,166},
    {'case',
     {454,5},
     {call,
      {454,5},
      {atom,{454,5},ifes_list},
      [{var,{454,15},'FVar'},{var,{454,21},'Funs'},{atom,{454,27},false}]},
     [{clause,
       {454,5},
       [{atom,{454,5},true}],
       [],
       [{call,
         {454,42},
         {atom,{454,42},ifes_1},
         [{var,{454,49},'FVar'},
          {var,{454,55},'Body'},
          {var,{454,61},'Safe'}]}]},
      {clause,{454,5},[{atom,{454,5},false}],[],[{atom,{454,5},false}]},
      {clause,
       [{generated,true},{location,{454,5}}],
       [{var,{454,5},cov7}],
       [],
       [{call,
         {454,5},
         {remote,{454,5},{atom,{454,5},erlang},{atom,{454,5},error}},
         [{block,0,
           [{tuple,
             {454,5},
             [{atom,{454,5},badarg},{var,{454,5},cov7}]}]}]}]}]}]},
  {clause,
   {455,1},
   [{var,{455,8},'_FVar'},
    {tuple,
     {455,15},
     [{atom,{455,15},c_literal},{var,{455,15},'_'},{var,{455,15},'_'}]},
    {var,{455,29},'_Safe'}],
   [],
   [{debug_line,456,167},{atom,{456,5},true}]},
  {clause,
   {457,1},
   [{var,{457,8},'FVar'},
    {tuple,
     {457,14},
     [{atom,{457,14},c_map},
      {var,{457,14},'_'},
      {var,{457,25},'Arg'},
      {var,{457,32},'Elements'},
      {var,{457,14},'_'}]},
    {var,{457,43},'_Safe'}],
   [],
   [{debug_line,458,168},
    {'case',
     {458,5},
     {call,
      {458,5},
      {atom,{458,5},ifes_1},
      [{var,{458,12},'FVar'},{var,{458,18},'Arg'},{atom,{458,23},false}]},
     [{clause,
       {458,5},
       [{atom,{458,5},true}],
       [],
       [{call,
         {458,38},
         {atom,{458,38},ifes_list},
         [{var,{458,48},'FVar'},
          {var,{458,54},'Elements'},
          {atom,{458,64},false}]}]},
      {clause,{458,5},[{atom,{458,5},false}],[],[{atom,{458,5},false}]},
      {clause,
       [{generated,true},{location,{458,5}}],
       [{var,{458,5},cov8}],
       [],
       [{call,
         {458,5},
         {remote,{458,5},{atom,{458,5},erlang},{atom,{458,5},error}},
         [{block,0,
           [{tuple,
             {458,5},
             [{atom,{458,5},badarg},{var,{458,5},cov8}]}]}]}]}]}]},
  {clause,
   {459,1},
   [{var,{459,8},'FVar'},
    {tuple,
     {459,14},
     [{atom,{459,14},c_map_pair},
      {var,{459,14},'_'},
      {var,{459,14},'_'},
      {var,{459,30},'Key'},
      {var,{459,38},'Val'}]},
    {var,{459,44},'_Safe'}],
   [],
   [{debug_line,460,169},
    {'case',
     {460,5},
     {call,
      {460,5},
      {atom,{460,5},ifes_1},
      [{var,{460,12},'FVar'},{var,{460,18},'Key'},{atom,{460,23},false}]},
     [{clause,
       {460,5},
       [{atom,{460,5},true}],
       [],
       [{call,
         {460,38},
         {atom,{460,38},ifes_1},
         [{var,{460,45},'FVar'},{var,{460,51},'Val'},{atom,{460,56},false}]}]},
      {clause,{460,5},[{atom,{460,5},false}],[],[{atom,{460,5},false}]},
      {clause,
       [{generated,true},{location,{460,5}}],
       [{var,{460,5},cov9}],
       [],
       [{call,
         {460,5},
         {remote,{460,5},{atom,{460,5},erlang},{atom,{460,5},error}},
         [{block,0,
           [{tuple,
             {460,5},
             [{atom,{460,5},badarg},{var,{460,5},cov9}]}]}]}]}]}]},
  {clause,
   {461,1},
   [{var,{461,8},'FVar'},
    {tuple,
     {461,14},
     [{atom,{461,14},c_primop},
      {var,{461,14},'_'},
      {var,{461,14},'_'},
      {var,{461,29},'Args'}]},
    {var,{461,36},'_Safe'}],
   [],
   [{debug_line,462,170},
    {call,
     {462,5},
     {atom,{462,5},ifes_list},
     [{var,{462,15},'FVar'},{var,{462,21},'Args'},{atom,{462,27},false}]}]},
  {clause,
   {463,1},
   [{var,{463,8},'FVar'},
    {tuple,
     {463,14},
     [{atom,{463,14},c_seq},
      {var,{463,14},'_'},
      {var,{463,25},'Arg'},
      {var,{463,34},'Body'}]},
    {var,{463,41},'Safe'}],
   [],
   [{debug_line,466,171},
    {'case',
     {466,5},
     {call,
      {466,5},
      {atom,{466,5},ifes_1},
      [{var,{466,12},'FVar'},{var,{466,18},'Arg'},{atom,{466,23},true}]},
     [{clause,
       {466,5},
       [{atom,{466,5},true}],
       [],
       [{call,
         {466,37},
         {atom,{466,37},ifes_1},
         [{var,{466,44},'FVar'},
          {var,{466,50},'Body'},
          {var,{466,56},'Safe'}]}]},
      {clause,{466,5},[{atom,{466,5},false}],[],[{atom,{466,5},false}]},
      {clause,
       [{generated,true},{location,{466,5}}],
       [{var,{466,5},cov10}],
       [],
       [{call,
         {466,5},
         {remote,{466,5},{atom,{466,5},erlang},{atom,{466,5},error}},
         [{block,0,
           [{tuple,
             {466,5},
             [{atom,{466,5},badarg},{var,{466,5},cov10}]}]}]}]}]}]},
  {clause,
   {467,1},
   [{var,{467,8},'FVar'},
    {tuple,
     {467,14},
     [{atom,{467,14},c_try},
      {var,{467,14},'_'},
      {var,{467,25},'Arg'},
      {var,{467,14},'_'},
      {var,{467,50},'Body'},
      {var,{467,14},'_'},
      {var,{467,37},'Handler'}]},
    {var,{467,57},'Safe'}],
   [],
   [{debug_line,468,172},
    {'case',
     {468,5},
     {call,
      {468,5},
      {atom,{468,5},ifes_1},
      [{var,{468,12},'FVar'},{var,{468,18},'Arg'},{atom,{468,23},false}]},
     [{clause,
       {468,5},
       [{atom,{468,5},true}],
       [],
       [{debug_line,469,173},
        {'case',
         {469,9},
         {call,
          {469,9},
          {atom,{469,9},ifes_1},
          [{var,{469,16},'FVar'},
           {var,{469,22},'Handler'},
           {var,{469,31},'Safe'}]},
         [{clause,
           {469,9},
           [{atom,{469,9},true}],
           [],
           [{debug_line,470,174},
            {call,
             {470,9},
             {atom,{470,9},ifes_1},
             [{var,{470,16},'FVar'},
              {var,{470,22},'Body'},
              {var,{470,28},'Safe'}]}]},
          {clause,{469,9},[{atom,{469,9},false}],[],[{atom,{469,9},false}]},
          {clause,
           [{generated,true},{location,{469,9}}],
           [{var,{469,9},cov11}],
           [],
           [{call,
             {469,9},
             {remote,{469,9},{atom,{469,9},erlang},{atom,{469,9},error}},
             [{block,0,
               [{tuple,
                 {469,9},
                 [{atom,{469,9},badarg},{var,{469,9},cov11}]}]}]}]}]}]},
      {clause,{468,5},[{atom,{468,5},false}],[],[{atom,{468,5},false}]},
      {clause,
       [{generated,true},{location,{468,5}}],
       [{var,{468,5},cov12}],
       [],
       [{call,
         {468,5},
         {remote,{468,5},{atom,{468,5},erlang},{atom,{468,5},error}},
         [{block,0,
           [{tuple,
             {468,5},
             [{atom,{468,5},badarg},{var,{468,5},cov12}]}]}]}]}]}]},
  {clause,
   {471,1},
   [{var,{471,8},'FVar'},
    {tuple,
     {471,14},
     [{atom,{471,14},c_tuple},{var,{471,14},'_'},{var,{471,26},'Elements'}]},
    {var,{471,37},'_Safe'}],
   [],
   [{debug_line,472,175},
    {call,
     {472,5},
     {atom,{472,5},ifes_list},
     [{var,{472,15},'FVar'},
      {var,{472,21},'Elements'},
      {atom,{472,31},false}]}]},
  {clause,
   {473,1},
   [{var,{473,8},'FVar'},
    {tuple,
     {473,14},
     [{atom,{473,14},c_values},{var,{473,14},'_'},{var,{473,27},'Elements'}]},
    {var,{473,38},'_Safe'}],
   [],
   [{debug_line,474,176},
    {call,
     {474,5},
     {atom,{474,5},ifes_list},
     [{var,{474,15},'FVar'},
      {var,{474,21},'Elements'},
      {atom,{474,31},false}]}]},
  {clause,
   {475,1},
   [{tuple,
     {475,8},
     [{atom,{475,8},c_var},{var,{475,8},'_'},{var,{475,20},'Name'}]},
    {tuple,
     {475,27},
     [{atom,{475,27},c_var},{var,{475,27},'_'},{var,{475,39},'Name'}]},
    {var,{475,46},'Safe'}],
   [],
   [{debug_line,477,177},{var,{477,5},'Safe'}]},
  {clause,
   {478,1},
   [{var,{478,8},'_FVar'},
    {tuple,
     {478,15},
     [{atom,{478,15},c_var},{var,{478,15},'_'},{var,{478,15},'_'}]},
    {var,{478,25},'_Safe'}],
   [],
   [{debug_line,479,178},{atom,{479,5},true}]}]}.
{function,
    {481,1},
    ifes_list,3,
    [{clause,
         {481,1},
         [{var,{481,1},'_'},{var,{481,1},'_'},{var,{481,1},'_'}],
         [[{call,
               {481,1},
               {remote,
                   {481,1},
                   {atom,{481,1},fake},
                   {atom,{481,1},is_beam_bif_info}},
               []}]],
         [{debug_line,481,179},{atom,{481,1},ignore}]},
     {clause,
         {481,1},
         [{var,{481,11},'FVar'},
          {cons,{481,17},{var,{481,18},'E'},{var,{481,20},'Es'}},
          {var,{481,25},'Safe'}],
         [],
         [{debug_line,482,180},
          {'case',
              {482,5},
              {call,
                  {482,5},
                  {atom,{482,5},ifes_1},
                  [{var,{482,12},'FVar'},
                   {var,{482,18},'E'},
                   {var,{482,21},'Safe'}]},
              [{clause,
                   {482,5},
                   [{atom,{482,5},true}],
                   [],
                   [{call,
                        {482,35},
                        {atom,{482,35},ifes_list},
                        [{var,{482,45},'FVar'},
                         {var,{482,51},'Es'},
                         {var,{482,55},'Safe'}]}]},
               {clause,
                   {482,5},
                   [{atom,{482,5},false}],
                   [],
                   [{atom,{482,5},false}]},
               {clause,
                   [{generated,true},{location,{482,5}}],
                   [{var,{482,5},cov1}],
                   [],
                   [{call,
                        {482,5},
                        {remote,
                            {482,5},
                            {atom,{482,5},erlang},
                            {atom,{482,5},error}},
                        [{block,0,
                             [{tuple,
                                  {482,5},
                                  [{atom,{482,5},badarg},
                                   {var,{482,5},cov1}]}]}]}]}]}]},
     {clause,
         {483,1},
         [{var,{483,11},'_FVar'},{nil,{483,18}},{var,{483,22},'_Safe'}],
         [],
         [{debug_line,484,181},{atom,{484,5},true}]}]}.
{function,{487,1},
          expr_list,3,
          [{clause,{487,1},
                   [{var,{487,1},'_'},{var,{487,1},'_'},{var,{487,1},'_'}],
                   [[{call,{487,1},
                           {remote,{487,1},
                                   {atom,{487,1},fake},
                                   {atom,{487,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,487,182},{atom,{487,1},ignore}]},
           {clause,{487,1},
                   [{var,{487,11},'Es'},
                    {var,{487,15},'Ctxt'},
                    {var,{487,21},'Sub'}],
                   [],
                   [{debug_line,488,183},
                    {lc,{488,5},
                        {block,0,
                               [{call,{488,6},
                                      {atom,{488,6},expr},
                                      [{var,{488,11},'E'},
                                       {var,{488,14},'Ctxt'},
                                       {var,{488,20},'Sub'}]}]},
                        [{block,0,[{atom,{488,33},true}]},
                         {generate,{488,30},
                                   {var,{488,28},'E'},
                                   {var,{488,33},'Es'}}]}]}]}.
{function,{490,1},
          pair_list,2,
          [{clause,{490,1},
                   [{var,{490,1},'_'},{var,{490,1},'_'}],
                   [[{call,{490,1},
                           {remote,{490,1},
                                   {atom,{490,1},fake},
                                   {atom,{490,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,490,184},{atom,{490,1},ignore}]},
           {clause,{490,1},
                   [{var,{490,11},'Es'},{var,{490,15},'Sub'}],
                   [],
                   [{debug_line,491,185},
                    {lc,{491,5},
                        {block,0,
                               [{call,{491,6},
                                      {atom,{491,6},pair},
                                      [{var,{491,11},'E'},
                                       {var,{491,14},'Sub'}]}]},
                        [{block,0,[{atom,{491,27},true}]},
                         {generate,{491,24},
                                   {var,{491,22},'E'},
                                   {var,{491,27},'Es'}}]}]}]}.
{function,
    {493,1},
    pair,2,
    [{clause,
         {493,1},
         [{var,{493,1},'_'},{var,{493,1},'_'}],
         [[{call,
               {493,1},
               {remote,
                   {493,1},
                   {atom,{493,1},fake},
                   {atom,{493,1},is_beam_bif_info}},
               []}]],
         [{debug_line,493,186},{atom,{493,1},ignore}]},
     {clause,
         {493,1},
         [{match,
              {493,6},
              {tuple,
                  {493,6},
                  [{atom,{493,6},c_map_pair},
                   {var,{493,6},'_'},
                   {var,{493,6},'_'},
                   {var,{493,22},'K0'},
                   {var,{493,29},'V0'}]},
              {var,{493,33},'Pair'}},
          {var,{493,39},'Sub'}],
         [],
         [{debug_line,494,187},
          {match,
              {494,5},
              {var,{494,5},'K'},
              {call,
                  {494,9},
                  {atom,{494,9},expr},
                  [{var,{494,14},'K0'},
                   {atom,{494,18},value},
                   {var,{494,25},'Sub'}]}},
          {debug_line,495,188},
          {match,
              {495,5},
              {var,{495,5},'V'},
              {call,
                  {495,9},
                  {atom,{495,9},expr},
                  [{var,{495,14},'V0'},
                   {atom,{495,18},value},
                   {var,{495,25},'Sub'}]}},
          {debug_line,496,189},
          {block,
              {496,5},
              [{match,{496,5},{var,{496,5},rec15},{var,{496,5},'Pair'}},
               {'case',
                   {496,21},
                   {var,{496,5},rec15},
                   [{clause,
                        {496,21},
                        [{tuple,
                             {496,21},
                             [{atom,{496,21},c_map_pair},
                              {var,{496,21},'_'},
                              {var,{496,21},'_'},
                              {var,{496,21},'_'},
                              {var,{496,21},'_'}]}],
                        [],
                        [{call,
                             {496,21},
                             {remote,
                                 {496,21},
                                 {atom,{496,21},erlang},
                                 {atom,{496,21},setelement}},
                             [{integer,{496,21},4},
                              {call,
                                  {496,27},
                                  {remote,
                                      {496,27},
                                      {atom,{496,27},erlang},
                                      {atom,{496,27},setelement}},
                                  [{integer,{496,27},5},
                                   {var,{496,5},rec15},
                                   {var,{496,31},'V'}]},
                              {var,{496,25},'K'}]}]},
                    {clause,
                        [{generated,true},{location,{496,21}}],
                        [{var,[{generated,true},{location,{496,21}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{496,21}}],
                             {remote,
                                 [{generated,true},{location,{496,21}}],
                                 {atom,
                                     [{generated,true},{location,{496,21}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{496,21}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{496,21}}],
                                  [{atom,
                                       [{generated,true},{location,{496,21}}],
                                       badrecord},
                                   {var,{496,5},rec15}]}]}]}]}]}]}]}.
{function,{498,1},
          bitstr_list,2,
          [{clause,{498,1},
                   [{var,{498,1},'_'},{var,{498,1},'_'}],
                   [[{call,{498,1},
                           {remote,{498,1},
                                   {atom,{498,1},fake},
                                   {atom,{498,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,498,190},{atom,{498,1},ignore}]},
           {clause,{498,1},
                   [{var,{498,13},'Es'},{var,{498,17},'Sub'}],
                   [],
                   [{debug_line,499,191},
                    {lc,{499,5},
                        {block,0,
                               [{call,{499,6},
                                      {atom,{499,6},bitstr},
                                      [{var,{499,13},'E'},
                                       {var,{499,16},'Sub'}]}]},
                        [{block,0,[{atom,{499,29},true}]},
                         {generate,{499,26},
                                   {var,{499,24},'E'},
                                   {var,{499,29},'Es'}}]}]}]}.
{function,
    {501,1},
    bitstr,2,
    [{clause,
         {501,1},
         [{var,{501,1},'_'},{var,{501,1},'_'}],
         [[{call,
               {501,1},
               {remote,
                   {501,1},
                   {atom,{501,1},fake},
                   {atom,{501,1},is_beam_bif_info}},
               []}]],
         [{debug_line,501,192},{atom,{501,1},ignore}]},
     {clause,
         {501,1},
         [{match,
              {501,8},
              {tuple,
                  {501,8},
                  [{atom,{501,8},c_bitstr},
                   {var,{501,8},'_'},
                   {var,{501,22},'Val'},
                   {var,{501,31},'Size'},
                   {var,{501,8},'_'},
                   {var,{501,8},'_'},
                   {var,{501,8},'_'}]},
              {var,{501,37},'BinSeg'}},
          {var,{501,45},'Sub'}],
         [],
         [{debug_line,502,193},
          {block,
              {502,5},
              [{match,
                   {502,21},
                   {var,{502,21},rec16},
                   {call,
                       {502,25},
                       {atom,{502,25},expr},
                       [{var,{502,30},'Val'},{var,{502,35},'Sub'}]}},
               {match,
                   {502,40},
                   {var,{502,40},rec17},
                   {call,
                       {502,45},
                       {atom,{502,45},expr},
                       [{var,{502,50},'Size'},
                        {atom,{502,56},value},
                        {var,{502,63},'Sub'}]}},
               {match,{502,5},{var,{502,5},rec18},{var,{502,5},'BinSeg'}},
               {'case',
                   {502,21},
                   {var,{502,5},rec18},
                   [{clause,
                        {502,21},
                        [{tuple,
                             {502,21},
                             [{atom,{502,21},c_bitstr},
                              {var,{502,21},'_'},
                              {var,{502,21},'_'},
                              {var,{502,21},'_'},
                              {var,{502,21},'_'},
                              {var,{502,21},'_'},
                              {var,{502,21},'_'}]}],
                        [],
                        [{call,
                             {502,21},
                             {remote,
                                 {502,21},
                                 {atom,{502,21},erlang},
                                 {atom,{502,21},setelement}},
                             [{integer,{502,21},3},
                              {call,
                                  {502,40},
                                  {remote,
                                      {502,40},
                                      {atom,{502,40},erlang},
                                      {atom,{502,40},setelement}},
                                  [{integer,{502,40},4},
                                   {var,{502,5},rec18},
                                   {var,{502,40},rec17}]},
                              {var,{502,21},rec16}]}]},
                    {clause,
                        [{generated,true},{location,{502,21}}],
                        [{var,[{generated,true},{location,{502,21}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{502,21}}],
                             {remote,
                                 [{generated,true},{location,{502,21}}],
                                 {atom,
                                     [{generated,true},{location,{502,21}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{502,21}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{502,21}}],
                                  [{atom,
                                       [{generated,true},{location,{502,21}}],
                                       badrecord},
                                   {var,{502,5},rec18}]}]}]}]}]}]}]}.
{function,{504,1},
          is_literal_fun,1,
          [{clause,{504,1},
                   [{var,{504,1},'_'}],
                   [[{call,{504,1},
                           {remote,{504,1},
                                   {atom,{504,1},fake},
                                   {atom,{504,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,504,194},{atom,{504,1},ignore}]},
           {clause,{504,1},
                   [{tuple,{504,16},
                           [{atom,{504,16},c_literal},
                            {var,{504,16},'_'},
                            {var,{504,31},'F'}]}],
                   [],
                   [{debug_line,504,195},
                    {call,{504,38},
                          {remote,{504,38},
                                  {atom,{504,38},erlang},
                                  {atom,{504,38},is_function}},
                          [{var,{504,50},'F'}]}]},
           {clause,{505,1},
                   [{var,{505,16},'_'}],
                   [],
                   [{debug_line,505,196},{atom,{505,22},false}]}]}.
{function,
 {514,1},
 is_safe_simple,1,
 [{clause,
   {514,1},
   [{var,{514,1},'_'}],
   [[{call,
      {514,1},
      {remote,{514,1},{atom,{514,1},fake},{atom,{514,1},is_beam_bif_info}},
      []}]],
   [{debug_line,514,197},{atom,{514,1},ignore}]},
  {clause,
   {514,1},
   [{match,
     {514,16},
     {tuple,
      {514,16},
      [{atom,{514,16},c_var},{var,{514,16},'_'},{var,{514,16},'_'}]},
     {var,{514,25},'Var'}}],
   [],
   [{debug_line,515,198},
    {op,
     {515,5},
     'not',
     {call,
      {515,9},
      {remote,{515,13},{atom,{515,9},cerl},{atom,{515,14},is_c_fname}},
      [{var,{515,25},'Var'}]}}]},
  {clause,
   {516,1},
   [{tuple,
     {516,16},
     [{atom,{516,16},c_cons},
      {var,{516,16},'_'},
      {var,{516,27},'H'},
      {var,{516,32},'T'}]}],
   [],
   [{debug_line,517,199},
    {'case',
     {517,5},
     {call,{517,5},{atom,{517,5},is_safe_simple},[{var,{517,20},'H'}]},
     [{clause,
       {517,5},
       [{atom,{517,5},true}],
       [],
       [{call,{517,31},{atom,{517,31},is_safe_simple},[{var,{517,46},'T'}]}]},
      {clause,{517,5},[{atom,{517,5},false}],[],[{atom,{517,5},false}]},
      {clause,
       [{generated,true},{location,{517,5}}],
       [{var,{517,5},cov1}],
       [],
       [{call,
         {517,5},
         {remote,{517,5},{atom,{517,5},erlang},{atom,{517,5},error}},
         [{block,0,
           [{tuple,
             {517,5},
             [{atom,{517,5},badarg},{var,{517,5},cov1}]}]}]}]}]}]},
  {clause,
   {518,1},
   [{tuple,
     {518,16},
     [{atom,{518,16},c_tuple},{var,{518,16},'_'},{var,{518,28},'Es'}]}],
   [],
   [{debug_line,518,200},
    {call,
     {518,36},
     {atom,{518,36},is_safe_simple_list},
     [{var,{518,56},'Es'}]}]},
  {clause,
   {519,1},
   [{tuple,
     {519,16},
     [{atom,{519,16},c_literal},{var,{519,16},'_'},{var,{519,16},'_'}]}],
   [],
   [{debug_line,519,201},{atom,{519,33},true}]},
  {clause,
   {520,1},
   [{tuple,
     {520,16},
     [{atom,{520,16},c_call},
      {var,{520,16},'_'},
      {tuple,
       {520,31},
       [{atom,{520,31},c_literal},{var,{520,31},'_'},{atom,{520,46},erlang}]},
      {tuple,
       {521,15},
       [{atom,{521,15},c_literal},{var,{521,15},'_'},{var,{521,30},'Name'}]},
      {var,{522,15},'Args'}]}],
   [[{call,
      {522,27},
      {remote,{522,27},{atom,{522,27},erlang},{atom,{522,27},is_atom}},
      [{var,{522,35},'Name'}]}]],
   [{debug_line,523,202},
    {match,
     {523,5},
     {var,{523,5},'NumArgs'},
     {call,
      {523,15},
      {remote,{523,15},{atom,{523,15},erlang},{atom,{523,15},length}},
      [{var,{523,22},'Args'}]}},
    {debug_line,524,203},
    {'case',
     {524,5},
     {call,
      {524,10},
      {remote,{524,22},{atom,{524,10},erl_internal},{atom,{524,23},bool_op}},
      [{var,{524,31},'Name'},{var,{524,37},'NumArgs'}]},
     [{clause,
       {525,2},
       [{atom,{525,2},true}],
       [],
       [{debug_line,527,204},
        {call,
         {527,6},
         {remote,{527,6},{atom,{527,6},lists},{atom,{527,6},all}},
         [{block,0,[{'fun',{527,10},{function,is_bool_expr,1}}]},
          {var,{527,30},'Args'}]}]},
      {clause,
       {528,2},
       [{atom,{528,2},false}],
       [],
       [{debug_line,532,205},
        {'case',
         {532,6},
         {call,
          {532,6},
          {remote,{532,14},{atom,{532,6},erl_bifs},{atom,{532,15},is_safe}},
          [{atom,{532,23},erlang},
           {var,{532,31},'Name'},
           {var,{532,37},'NumArgs'}]},
         [{clause,
           {532,6},
           [{atom,{532,6},true}],
           [],
           [{debug_line,533,206},
            {'case',
             {533,10},
             {call,
              {533,10},
              {remote,
               {533,22},
               {atom,{533,10},erl_internal},
               {atom,{533,23},comp_op}},
              [{var,{533,31},'Name'},{var,{533,37},'NumArgs'}]},
             [{clause,
               {533,10},
               [{atom,{533,10},true}],
               [],
               [{atom,{533,10},true}]},
              {clause,
               {533,10},
               [{atom,{533,10},false}],
               [],
               [{debug_line,534,207},
                {call,
                 {534,10},
                 {remote,
                  {534,22},
                  {atom,{534,10},erl_internal},
                  {atom,{534,23},new_type_test}},
                 [{var,{534,37},'Name'},{var,{534,43},'NumArgs'}]}]},
              {clause,
               [{generated,true},{location,{533,10}}],
               [{var,{533,10},cov2}],
               [],
               [{call,
                 {533,10},
                 {remote,
                  {533,10},
                  {atom,{533,10},erlang},
                  {atom,{533,10},error}},
                 [{block,0,
                   [{tuple,
                     {533,10},
                     [{atom,{533,10},badarg},{var,{533,10},cov2}]}]}]}]}]}]},
          {clause,{532,6},[{atom,{532,6},false}],[],[{atom,{532,6},false}]},
          {clause,
           [{generated,true},{location,{532,6}}],
           [{var,{532,6},cov3}],
           [],
           [{call,
             {532,6},
             {remote,{532,6},{atom,{532,6},erlang},{atom,{532,6},error}},
             [{block,0,
               [{tuple,
                 {532,6},
                 [{atom,{532,6},badarg},{var,{532,6},cov3}]}]}]}]}]}]}]}]},
  {clause,
   {536,1},
   [{var,{536,16},'_'}],
   [],
   [{debug_line,536,208},{atom,{536,22},false}]}]}.
{function,
    {538,1},
    is_safe_simple_list,1,
    [{clause,
         {538,1},
         [{var,{538,1},'_'}],
         [[{call,
               {538,1},
               {remote,
                   {538,1},
                   {atom,{538,1},fake},
                   {atom,{538,1},is_beam_bif_info}},
               []}]],
         [{debug_line,538,209},{atom,{538,1},ignore}]},
     {clause,
         {538,1},
         [{var,{538,21},'Es'}],
         [],
         [{debug_line,538,210},
          {call,
              {538,28},
              {remote,{538,28},{atom,{538,28},lists},{atom,{538,28},all}},
              [{block,0,
                   [{'fun',
                        {538,32},
                        {clauses,
                            [{clause,
                                 {538,35},
                                 [{var,{538,36},'E'}],
                                 [],
                                 [{call,
                                      {538,42},
                                      {atom,{538,42},is_safe_simple},
                                      [{var,{538,57},'E'}]}]}]}}]},
               {var,{538,65},'Es'}]}]}]}.
{function,
    {545,1},
    will_fail,1,
    [{clause,
         {545,1},
         [{var,{545,1},'_'}],
         [[{call,
               {545,1},
               {remote,
                   {545,1},
                   {atom,{545,1},fake},
                   {atom,{545,1},is_beam_bif_info}},
               []}]],
         [{debug_line,545,211},{atom,{545,1},ignore}]},
     {clause,
         {545,1},
         [{tuple,
              {545,11},
              [{atom,{545,11},c_let},
               {var,{545,11},'_'},
               {var,{545,11},'_'},
               {var,{545,22},'A'},
               {var,{545,29},'B'}]}],
         [],
         [{debug_line,546,212},
          {'case',
              {546,5},
              {call,{546,5},{atom,{546,5},will_fail},[{var,{546,15},'A'}]},
              [{clause,{546,5},[{atom,{546,5},true}],[],[{atom,{546,5},true}]},
               {clause,
                   {546,5},
                   [{atom,{546,5},false}],
                   [],
                   [{call,
                        {546,25},
                        {atom,{546,25},will_fail},
                        [{var,{546,35},'B'}]}]},
               {clause,
                   [{generated,true},{location,{546,5}}],
                   [{var,{546,5},cov1}],
                   [],
                   [{call,
                        {546,5},
                        {remote,
                            {546,5},
                            {atom,{546,5},erlang},
                            {atom,{546,5},error}},
                        [{block,0,
                             [{tuple,
                                  {546,5},
                                  [{atom,{546,5},badarg},
                                   {var,{546,5},cov1}]}]}]}]}]}]},
     {clause,
         {547,1},
         [{tuple,
              {547,11},
              [{atom,{547,11},c_call},
               {var,{547,11},'_'},
               {tuple,
                   {547,26},
                   [{atom,{547,26},c_literal},
                    {var,{547,26},'_'},
                    {var,{547,41},'Mod'}]},
               {tuple,
                   {547,51},
                   [{atom,{547,51},c_literal},
                    {var,{547,51},'_'},
                    {var,{547,66},'Name'}]},
               {var,{547,77},'Args'}]}],
         [],
         [{debug_line,548,213},
          {call,
              {548,5},
              {remote,
                  {548,13},
                  {atom,{548,5},erl_bifs},
                  {atom,{548,14},is_exit_bif}},
              [{var,{548,26},'Mod'},
               {var,{548,31},'Name'},
               {block,0,
                   [{call,
                        {548,37},
                        {remote,
                            {548,37},
                            {atom,{548,37},erlang},
                            {atom,{548,37},length}},
                        [{var,{548,44},'Args'}]}]}]}]},
     {clause,
         {549,1},
         [{tuple,
              {549,11},
              [{atom,{549,11},c_primop},
               {var,{549,11},'_'},
               {tuple,
                   {549,26},
                   [{atom,{549,26},c_literal},
                    {var,{549,26},'_'},
                    {atom,{549,41},match_fail}]},
               {cons,{549,58},{var,{549,59},'_'},{nil,{549,60}}}]}],
         [],
         [{debug_line,549,214},{atom,{549,67},true}]},
     {clause,
         {550,1},
         [{var,{550,11},'_'}],
         [],
         [{debug_line,550,215},{atom,{550,17},false}]}]}.
{function,
    {556,1},
    bin_un_utf,1,
    [{clause,
         {556,1},
         [{var,{556,1},'_'}],
         [[{call,
               {556,1},
               {remote,
                   {556,1},
                   {atom,{556,1},fake},
                   {atom,{556,1},is_beam_bif_info}},
               []}]],
         [{debug_line,556,216},{atom,{556,1},ignore}]},
     {clause,
         {556,1},
         [{match,
              {556,12},
              {tuple,
                  {556,12},
                  [{atom,{556,12},c_binary},
                   {var,{556,27},'Anno'},
                   {var,{556,41},'Ss'}]},
              {var,{556,45},'Bin'}}],
         [],
         [{debug_line,557,217},
          {block,
              {557,5},
              [{match,
                   {557,18},
                   {var,{557,18},rec19},
                   {call,
                       {557,27},
                       {atom,{557,27},bin_un_utf_1},
                       [{var,{557,40},'Ss'},{var,{557,44},'Anno'}]}},
               {match,{557,5},{var,{557,5},rec20},{var,{557,5},'Bin'}},
               {'case',
                   {557,18},
                   {var,{557,5},rec20},
                   [{clause,
                        {557,18},
                        [{tuple,
                             {557,18},
                             [{atom,{557,18},c_binary},
                              {var,{557,18},'_'},
                              {var,{557,18},'_'}]}],
                        [],
                        [{call,
                             {557,18},
                             {remote,
                                 {557,18},
                                 {atom,{557,18},erlang},
                                 {atom,{557,18},setelement}},
                             [{integer,{557,18},3},
                              {var,{557,5},rec20},
                              {var,{557,18},rec19}]}]},
                    {clause,
                        [{generated,true},{location,{557,18}}],
                        [{var,[{generated,true},{location,{557,18}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{557,18}}],
                             {remote,
                                 [{generated,true},{location,{557,18}}],
                                 {atom,
                                     [{generated,true},{location,{557,18}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{557,18}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{557,18}}],
                                  [{atom,
                                       [{generated,true},{location,{557,18}}],
                                       badrecord},
                                   {var,{557,5},rec20}]}]}]}]}]}]}]}.
{function,
    {559,1},
    bin_un_utf_1,2,
    [{clause,
         {559,1},
         [{var,{559,1},'_'},{var,{559,1},'_'}],
         [[{call,
               {559,1},
               {remote,
                   {559,1},
                   {atom,{559,1},fake},
                   {atom,{559,1},is_beam_bif_info}},
               []}]],
         [{debug_line,559,218},{atom,{559,1},ignore}]},
     {clause,
         {559,1},
         [{cons,
              {559,14},
              {match,
                  {559,15},
                  {tuple,
                      {559,15},
                      [{atom,{559,15},c_bitstr},
                       {var,{559,15},'_'},
                       {tuple,
                           {559,29},
                           [{atom,{559,29},c_literal},
                            {var,{559,29},'_'},
                            {var,{559,29},'_'}]},
                       {var,{559,15},'_'},
                       {var,{559,15},'_'},
                       {tuple,
                           {559,47},
                           [{atom,{559,47},c_literal},
                            {var,{559,47},'_'},
                            {atom,{559,62},utf8}]},
                       {var,{559,15},'_'}]},
                  {var,{559,69},'H'}},
              {var,{559,71},'T'}},
          {var,{560,7},'Anno'}],
         [],
         [{debug_line,561,219},
          {op,{561,30},
              '++',
              {call,
                  {561,5},
                  {atom,{561,5},bin_un_utf_eval},
                  [{var,{561,21},'H'},{var,{561,24},'Anno'}]},
              {call,
                  {561,33},
                  {atom,{561,33},bin_un_utf_1},
                  [{var,{561,46},'T'},{var,{561,49},'Anno'}]}}]},
     {clause,
         {562,1},
         [{cons,
              {562,14},
              {match,
                  {562,15},
                  {tuple,
                      {562,15},
                      [{atom,{562,15},c_bitstr},
                       {var,{562,15},'_'},
                       {tuple,
                           {562,29},
                           [{atom,{562,29},c_literal},
                            {var,{562,29},'_'},
                            {var,{562,29},'_'}]},
                       {var,{562,15},'_'},
                       {var,{562,15},'_'},
                       {tuple,
                           {562,47},
                           [{atom,{562,47},c_literal},
                            {var,{562,47},'_'},
                            {atom,{562,62},utf16}]},
                       {var,{562,15},'_'}]},
                  {var,{562,70},'H'}},
              {var,{562,72},'T'}},
          {var,{563,7},'Anno'}],
         [],
         [{debug_line,564,220},
          {op,{564,30},
              '++',
              {call,
                  {564,5},
                  {atom,{564,5},bin_un_utf_eval},
                  [{var,{564,21},'H'},{var,{564,24},'Anno'}]},
              {call,
                  {564,33},
                  {atom,{564,33},bin_un_utf_1},
                  [{var,{564,46},'T'},{var,{564,49},'Anno'}]}}]},
     {clause,
         {565,1},
         [{cons,
              {565,14},
              {match,
                  {565,15},
                  {tuple,
                      {565,15},
                      [{atom,{565,15},c_bitstr},
                       {var,{565,15},'_'},
                       {tuple,
                           {565,29},
                           [{atom,{565,29},c_literal},
                            {var,{565,29},'_'},
                            {var,{565,29},'_'}]},
                       {var,{565,15},'_'},
                       {var,{565,15},'_'},
                       {tuple,
                           {565,47},
                           [{atom,{565,47},c_literal},
                            {var,{565,47},'_'},
                            {atom,{565,62},utf32}]},
                       {var,{565,15},'_'}]},
                  {var,{565,70},'H'}},
              {var,{565,72},'T'}},
          {var,{566,7},'Anno'}],
         [],
         [{debug_line,567,221},
          {op,{567,30},
              '++',
              {call,
                  {567,5},
                  {atom,{567,5},bin_un_utf_eval},
                  [{var,{567,21},'H'},{var,{567,24},'Anno'}]},
              {call,
                  {567,33},
                  {atom,{567,33},bin_un_utf_1},
                  [{var,{567,46},'T'},{var,{567,49},'Anno'}]}}]},
     {clause,
         {568,1},
         [{cons,{568,14},{var,{568,15},'H'},{var,{568,17},'T'}},
          {var,{568,21},'Anno'}],
         [],
         [{debug_line,569,222},
          {cons,
              {569,5},
              {var,{569,6},'H'},
              {call,
                  {569,8},
                  {atom,{569,8},bin_un_utf_1},
                  [{var,{569,21},'T'},{var,{569,24},'Anno'}]}}]},
     {clause,
         {570,1},
         [{nil,{570,14}},{var,{570,18},'_'}],
         [],
         [{debug_line,570,223},{nil,{570,24}}]}]}.
{function,
 {572,1},
 bin_un_utf_eval,2,
 [{clause,
   {572,1},
   [{var,{572,1},'_'},{var,{572,1},'_'}],
   [[{call,
      {572,1},
      {remote,{572,1},{atom,{572,1},fake},{atom,{572,1},is_beam_bif_info}},
      []}]],
   [{debug_line,572,224},{atom,{572,1},ignore}]},
  {clause,
   {572,1},
   [{var,{572,17},'Bitstr'},{var,{572,25},'Anno'}],
   [],
   [{debug_line,573,225},
    {match,
     {573,5},
     {var,{573,5},'Segments'},
     {cons,{573,16},{var,{573,17},'Bitstr'},{nil,{573,23}}}},
    {debug_line,574,226},
    {'case',
     {574,5},
     {call,
      {574,10},
      {atom,{574,10},eval_binary},
      [{block,0,
        [{tuple,
          {574,22},
          [{atom,{574,22},c_binary},
           {var,{574,37},'Anno'},
           {var,{574,51},'Segments'}]}]}]},
     [{clause,
       {575,2},
       [{tuple,
         {575,2},
         [{atom,{575,2},c_literal},
          {var,{575,18},'Anno'},
          {var,{575,27},'Bytes'}]}],
       [[{call,
          {575,39},
          {remote,{575,39},{atom,{575,39},erlang},{atom,{575,39},is_binary}},
          [{var,{575,49},'Bytes'}]}]],
       [{debug_line,576,227},
        {lc,
         {576,6},
         {block,0,
          [{tuple,
            {576,7},
            [{atom,{576,7},c_bitstr},
             {var,{576,22},'Anno'},
             {tuple,
              {577,14},
              [{atom,{577,14},c_literal},
               {var,{577,30},'Anno'},
               {var,{577,39},'B'}]},
             {tuple,
              {578,15},
              [{atom,{578,15},c_literal},
               {var,{578,31},'Anno'},
               {integer,{578,40},8}]},
             {tuple,
              {579,15},
              [{atom,{579,15},c_literal},
               {var,{579,31},'Anno'},
               {integer,{579,40},1}]},
             {tuple,
              {580,15},
              [{atom,{580,15},c_literal},
               {var,{580,31},'Anno'},
               {atom,{580,40},integer}]},
             {tuple,
              {581,16},
              [{atom,{581,16},c_literal},
               {var,{581,32},'Anno'},
               {cons,
                {581,41},
                {atom,{581,42},unsigned},
                {cons,{581,51},{atom,{581,51},big},{nil,{581,54}}}}]}]}]},
         [{block,0,[{debug_line,582,228},{atom,{582,8},true}]},
          {generate,
           {582,5},
           {var,{582,3},'B'},
           {call,
            {582,8},
            {remote,
             {582,8},
             {atom,{582,8},erlang},
             {atom,{582,8},binary_to_list}},
            [{var,{582,23},'Bytes'}]}}]}]},
      {clause,
       {583,2},
       [{var,{583,2},'_'}],
       [],
       [{debug_line,584,229},{var,{584,6},'Segments'}]}]}]}]}.
{function,
    {591,1},
    eval_binary,1,
    [{clause,
         {591,1},
         [{var,{591,1},'_'}],
         [[{call,
               {591,1},
               {remote,
                   {591,1},
                   {atom,{591,1},fake},
                   {atom,{591,1},is_beam_bif_info}},
               []}]],
         [{debug_line,591,230},{atom,{591,1},ignore}]},
     {clause,
         {591,1},
         [{match,
              {591,13},
              {tuple,
                  {591,13},
                  [{atom,{591,13},c_binary},
                   {var,{591,28},'Anno'},
                   {var,{591,42},'Ss'}]},
              {var,{591,46},'Bin'}}],
         [],
         [{debug_line,592,231},
          {'try',
              {592,5},
              [{debug_line,593,232},
               {tuple,
                   {593,2},
                   [{atom,{593,2},c_literal},
                    {var,{593,18},'Anno'},
                    {call,
                        {593,27},
                        {atom,{593,27},eval_binary_1},
                        [{var,{593,41},'Ss'},
                         {block,0,[{bin,{593,45},[]}]}]}]}],
              [],
              [{clause,
                   {595,2},
                   [{tuple,
                        {595,2},
                        [{atom,{595,2},throw},
                         {atom,{595,8},impossible},
                         {var,{595,8},'_'}]}],
                   [],
                   [{debug_line,596,233},{var,{596,6},'Bin'}]},
               {clause,
                   {597,4},
                   [{tuple,
                        {597,4},
                        [{atom,{597,4},throw},
                         {tuple,
                             {597,10},
                             [{atom,{597,11},badarg},
                              {var,{597,18},'Warning'}]},
                         {var,{597,18},'_'}]}],
                   [],
                   [{debug_line,598,234},
                    {call,
                        {598,6},
                        {atom,{598,6},add_warning},
                        [{var,{598,18},'Bin'},
                         {block,0,
                             [{tuple,
                                  {598,23},
                                  [{atom,{598,24},failed},
                                   {var,{598,31},'Warning'}]}]}]},
                    {debug_line,599,235},
                    {var,{599,13},'Bin'}]}],
              []}]}]}.
{function,
 {602,1},
 eval_binary_1,2,
 [{clause,
   {602,1},
   [{var,{602,1},'_'},{var,{602,1},'_'}],
   [[{call,
      {602,1},
      {remote,{602,1},{atom,{602,1},fake},{atom,{602,1},is_beam_bif_info}},
      []}]],
   [{debug_line,602,236},{atom,{602,1},ignore}]},
  {clause,
   {602,1},
   [{cons,
     {602,15},
     {tuple,
      {602,16},
      [{atom,{602,16},c_bitstr},
       {var,{602,16},'_'},
       {tuple,
        {602,30},
        [{atom,{602,30},c_literal},{var,{602,30},'_'},{var,{602,45},'Val'}]},
       {tuple,
        {602,55},
        [{atom,{602,55},c_literal},{var,{602,55},'_'},{var,{602,70},'Sz'}]},
       {tuple,
        {603,10},
        [{atom,{603,10},c_literal},{var,{603,10},'_'},{var,{603,25},'Unit'}]},
       {tuple,
        {603,36},
        [{atom,{603,36},c_literal},{var,{603,36},'_'},{var,{603,51},'Type'}]},
       {tuple,
        {604,11},
        [{atom,{604,11},c_literal},
         {var,{604,11},'_'},
         {var,{604,26},'Flags'}]}]},
     {var,{604,34},'Ss'}},
    {var,{604,39},'Acc0'}],
   [],
   [{debug_line,605,237},
    {match,
     {605,5},
     {var,{605,5},'Endian'},
     {call,{605,14},{atom,{605,14},bs_endian},[{var,{605,24},'Flags'}]}},
    {debug_line,608,238},
    {'case',
     {608,5},
     {var,{608,10},'Type'},
     [{clause,
       {609,2},
       [{atom,{609,2},binary}],
       [[{call,
          {609,14},
          {remote,
           {609,14},
           {atom,{609,14},erlang},
           {atom,{609,14},is_bitstring}},
          [{var,{609,27},'Val'}]}]],
       [{debug_line,610,239},
        {'if',
         {610,6},
         [{clause,
           {611,3},
           [],
           [[{op,{611,6},'=:=',{var,{611,3},'Sz'},{atom,{611,10},all}}]],
           [{debug_line,612,240},{atom,{612,7},ok}]},
          {clause,
           {613,3},
           [],
           [[{op,
              {613,11},
              '=<',
              {op,{613,5},'*',{var,{613,3},'Sz'},{var,{613,6},'Unit'}},
              {call,
               {613,14},
               {remote,
                {613,14},
                {atom,{613,14},erlang},
                {atom,{613,14},bit_size}},
               [{var,{613,23},'Val'}]}}]],
           [{debug_line,614,241},{atom,{614,7},ok}]},
          {clause,
           {615,3},
           [],
           [[{atom,{615,3},true}]],
           [{debug_line,617,242},
            {call,
             {617,7},
             {remote,{617,7},{atom,{617,7},erlang},{atom,{617,7},throw}},
             [{block,0,
               [{tuple,
                 {617,13},
                 [{atom,{617,14},badarg},
                  {atom,{617,21},embedded_binary_size}]}]}]}]}]}]},
      {clause,
       {619,2},
       [{atom,{619,2},integer}],
       [[{call,
          {619,15},
          {remote,{619,15},{atom,{619,15},erlang},{atom,{619,15},is_integer}},
          [{var,{619,26},'Val'}]}]],
       [{debug_line,623,243},
        {'if',
         {623,6},
         [{clause,
           {624,3},
           [],
           [[{op,
              {624,11},
              '=<',
              {op,{624,5},'*',{var,{624,3},'Sz'},{var,{624,6},'Unit'}},
              {integer,{624,14},256}}]],
           [{debug_line,626,244},{atom,{626,7},ok}]},
          {clause,
           {627,3},
           [],
           [[{atom,{627,3},true}]],
           [{debug_line,628,245},
            {'case',
             {628,7},
             {call,{628,12},{atom,{628,12},count_bits},[{var,{628,23},'Val'}]},
             [{clause,
               {629,4},
               [{var,{629,4},'BitsNeeded'}],
               [[{op,
                  {629,33},
                  '>=',
                  {op,
                   {629,21},
                   '*',
                   {integer,{629,20},2},
                   {var,{629,22},'BitsNeeded'}},
                  {op,
                   {629,38},
                   '*',
                   {var,{629,36},'Sz'},
                   {var,{629,39},'Unit'}}}]],
               [{debug_line,630,246},{atom,{630,8},ok}]},
              {clause,
               {631,4},
               [{var,{631,4},'_'}],
               [],
               [{debug_line,634,247},
                {call,
                 {634,8},
                 {remote,{634,8},{atom,{634,8},erlang},{atom,{634,8},throw}},
                 [{atom,{634,14},impossible}]}]}]}]}]}]},
      {clause,
       {637,2},
       [{atom,{637,2},float}],
       [[{call,
          {637,13},
          {remote,{637,13},{atom,{637,13},erlang},{atom,{637,13},is_float}},
          [{var,{637,22},'Val'}]}]],
       [{debug_line,639,248},
        {'try',
         {639,6},
         [{op,{639,12},'*',{var,{639,10},'Sz'},{var,{639,13},'Unit'}}],
         [{clause,
           {640,3},
           [{integer,{640,3},16}],
           [],
           [{debug_line,640,249},{atom,{640,9},ok}]},
          {clause,
           {641,3},
           [{integer,{641,3},32}],
           [],
           [{debug_line,641,250},{atom,{641,9},ok}]},
          {clause,
           {642,3},
           [{integer,{642,3},64}],
           [],
           [{debug_line,642,251},{atom,{642,9},ok}]},
          {clause,
           {643,3},
           [{var,{643,3},'_'}],
           [],
           [{debug_line,644,252},
            {call,
             {644,21},
             {remote,{644,21},{atom,{644,21},erlang},{atom,{644,21},throw}},
             [{block,0,
               [{tuple,
                 {644,27},
                 [{atom,{644,28},badarg},
                  {atom,{644,35},bad_float_size}]}]}]}]}],
         [{clause,
           {646,17},
           [{tuple,
             {646,17},
             [{atom,{646,17},error},{var,{646,23},'_'},{var,{646,23},'_'}]}],
           [],
           [{debug_line,647,253},
            {call,
             {647,21},
             {remote,{647,21},{atom,{647,21},erlang},{atom,{647,21},throw}},
             [{block,0,
               [{tuple,
                 {647,27},
                 [{atom,{647,28},badarg},
                  {atom,{647,35},bad_float_size}]}]}]}]}],
         []}]},
      {clause,
       {649,2},
       [{atom,{649,2},utf8}],
       [],
       [{debug_line,649,254},{atom,{649,10},ok}]},
      {clause,
       {650,2},
       [{atom,{650,2},utf16}],
       [],
       [{debug_line,650,255},{atom,{650,11},ok}]},
      {clause,
       {651,2},
       [{atom,{651,2},utf32}],
       [],
       [{debug_line,651,256},{atom,{651,11},ok}]},
      {clause,
       {652,2},
       [{var,{652,2},'_'}],
       [],
       [{debug_line,653,257},
        {call,
         {653,6},
         {remote,{653,6},{atom,{653,6},erlang},{atom,{653,6},throw}},
         [{atom,{653,12},impossible}]}]}]},
    {debug_line,656,258},
    {'case',
     {656,5},
     {'case',
      {656,17},
      {op,{656,17},'=:=',{var,{656,10},'Endian'},{atom,{656,21},native}},
      [{clause,
        {656,17},
        [{atom,{656,17},true}],
        [],
        [{op,{656,41},'=/=',{var,{656,36},'Type'},{atom,{656,45},binary}}]},
       {clause,{656,17},[{atom,{656,17},false}],[],[{atom,{656,17},false}]},
       {clause,
        [{generated,true},{location,{656,17}}],
        [{var,{656,17},cov1}],
        [],
        [{call,
          {656,17},
          {remote,{656,17},{atom,{656,17},erlang},{atom,{656,17},error}},
          [{block,0,
            [{tuple,
              {656,17},
              [{atom,{656,17},badarg},{var,{656,17},cov1}]}]}]}]}]},
     [{clause,
       {657,9},
       [{atom,{657,9},true}],
       [],
       [{debug_line,657,259},
        {call,
         {657,17},
         {remote,{657,17},{atom,{657,17},erlang},{atom,{657,17},throw}},
         [{atom,{657,23},impossible}]}]},
      {clause,
       {658,9},
       [{atom,{658,9},false}],
       [],
       [{debug_line,658,260},{atom,{658,18},ok}]}]},
    {debug_line,662,261},
    {'try',
     {662,5},
     [{call,
       {662,9},
       {atom,{662,9},eval_binary_2},
       [{var,{662,23},'Acc0'},
        {var,{662,29},'Val'},
        {var,{662,34},'Sz'},
        {var,{662,38},'Unit'},
        {var,{662,44},'Type'},
        {var,{662,50},'Endian'}]}],
     [{clause,
       {663,2},
       [{var,{663,2},'Acc'}],
       [],
       [{debug_line,663,262},
        {call,
         {663,9},
         {atom,{663,9},eval_binary_1},
         [{var,{663,23},'Ss'},{var,{663,27},'Acc'}]}]}],
     [{clause,
       {665,2},
       [{tuple,
         {665,2},
         [{atom,{665,2},error},{var,{665,8},'_'},{var,{665,8},'_'}]}],
       [],
       [{debug_line,666,263},
        {call,
         {666,6},
         {remote,{666,6},{atom,{666,6},erlang},{atom,{666,6},throw}},
         [{atom,{666,12},impossible}]}]}],
     []}]},
  {clause,
   {668,1},
   [{nil,{668,15}},{var,{668,19},'Acc'}],
   [],
   [{debug_line,668,264},{var,{668,27},'Acc'}]},
  {clause,
   {669,1},
   [{var,{669,15},'_'},{var,{669,18},'_'}],
   [],
   [{debug_line,669,265},
    {call,
     {669,24},
     {remote,{669,24},{atom,{669,24},erlang},{atom,{669,24},throw}},
     [{atom,{669,30},impossible}]}]}]}.
{function,
    {671,1},
    eval_binary_2,6,
    [{clause,
         {671,1},
         [{var,{671,1},'_'},
          {var,{671,1},'_'},
          {var,{671,1},'_'},
          {var,{671,1},'_'},
          {var,{671,1},'_'},
          {var,{671,1},'_'}],
         [[{call,
               {671,1},
               {remote,
                   {671,1},
                   {atom,{671,1},fake},
                   {atom,{671,1},is_beam_bif_info}},
               []}]],
         [{debug_line,671,266},{atom,{671,1},ignore}]},
     {clause,
         {671,1},
         [{var,{671,15},'Acc'},
          {var,{671,20},'Val'},
          {var,{671,25},'Size'},
          {var,{671,31},'Unit'},
          {atom,{671,37},integer},
          {atom,{671,46},little}],
         [],
         [{debug_line,672,267},
          {bin,
              {672,5},
              [{bin_element,{672,7},{var,{672,7},'Acc'},default,[bitstring]},
               {bin_element,
                   {672,21},
                   {var,{672,21},'Val'},
                   {op,{672,30},
                       '*',
                       {var,{672,26},'Size'},
                       {var,{672,31},'Unit'}},
                   [little]}]}]},
     {clause,
         {673,1},
         [{var,{673,15},'Acc'},
          {var,{673,20},'Val'},
          {var,{673,25},'Size'},
          {var,{673,31},'Unit'},
          {atom,{673,37},integer},
          {atom,{673,46},big}],
         [],
         [{debug_line,674,268},
          {bin,
              {674,5},
              [{bin_element,{674,7},{var,{674,7},'Acc'},default,[bitstring]},
               {bin_element,
                   {674,21},
                   {var,{674,21},'Val'},
                   {op,{674,30},
                       '*',
                       {var,{674,26},'Size'},
                       {var,{674,31},'Unit'}},
                   [big]}]}]},
     {clause,
         {675,1},
         [{var,{675,15},'Acc'},
          {var,{675,20},'Val'},
          {var,{675,25},'_Size'},
          {var,{675,32},'_Unit'},
          {atom,{675,39},utf8},
          {var,{675,45},'_'}],
         [],
         [{debug_line,676,269},
          {'try',
              {676,5},
              [{debug_line,677,270},
               {bin,
                   {677,2},
                   [{bin_element,
                        {677,4},
                        {var,{677,4},'Acc'},
                        default,
                        [bitstring]},
                    {bin_element,
                        {677,18},
                        {var,{677,18},'Val'},
                        default,
                        [utf8]}]}],
              [],
              [{clause,
                   {679,2},
                   [{tuple,
                        {679,2},
                        [{atom,{679,2},error},
                         {var,{679,8},'_'},
                         {var,{679,8},'_'}]}],
                   [],
                   [{debug_line,680,271},
                    {call,
                        {680,6},
                        {remote,
                            {680,6},
                            {atom,{680,6},erlang},
                            {atom,{680,6},throw}},
                        [{block,0,
                             [{tuple,
                                  {680,12},
                                  [{atom,{680,13},badarg},
                                   {atom,{680,20},bad_unicode}]}]}]}]}],
              []}]},
     {clause,
         {682,1},
         [{var,{682,15},'Acc'},
          {var,{682,20},'Val'},
          {var,{682,25},'_Size'},
          {var,{682,32},'_Unit'},
          {atom,{682,39},utf16},
          {atom,{682,46},big}],
         [],
         [{debug_line,683,272},
          {'try',
              {683,5},
              [{debug_line,684,273},
               {bin,
                   {684,2},
                   [{bin_element,
                        {684,4},
                        {var,{684,4},'Acc'},
                        default,
                        [bitstring]},
                    {bin_element,
                        {684,18},
                        {var,{684,18},'Val'},
                        default,
                        [big,utf16]}]}],
              [],
              [{clause,
                   {686,2},
                   [{tuple,
                        {686,2},
                        [{atom,{686,2},error},
                         {var,{686,8},'_'},
                         {var,{686,8},'_'}]}],
                   [],
                   [{debug_line,687,274},
                    {call,
                        {687,6},
                        {remote,
                            {687,6},
                            {atom,{687,6},erlang},
                            {atom,{687,6},throw}},
                        [{block,0,
                             [{tuple,
                                  {687,12},
                                  [{atom,{687,13},badarg},
                                   {atom,{687,20},bad_unicode}]}]}]}]}],
              []}]},
     {clause,
         {689,1},
         [{var,{689,15},'Acc'},
          {var,{689,20},'Val'},
          {var,{689,25},'_Size'},
          {var,{689,32},'_Unit'},
          {atom,{689,39},utf16},
          {atom,{689,46},little}],
         [],
         [{debug_line,690,275},
          {'try',
              {690,5},
              [{debug_line,691,276},
               {bin,
                   {691,2},
                   [{bin_element,
                        {691,4},
                        {var,{691,4},'Acc'},
                        default,
                        [bitstring]},
                    {bin_element,
                        {691,18},
                        {var,{691,18},'Val'},
                        default,
                        [little,utf16]}]}],
              [],
              [{clause,
                   {693,2},
                   [{tuple,
                        {693,2},
                        [{atom,{693,2},error},
                         {var,{693,8},'_'},
                         {var,{693,8},'_'}]}],
                   [],
                   [{debug_line,694,277},
                    {call,
                        {694,6},
                        {remote,
                            {694,6},
                            {atom,{694,6},erlang},
                            {atom,{694,6},throw}},
                        [{block,0,
                             [{tuple,
                                  {694,12},
                                  [{atom,{694,13},badarg},
                                   {atom,{694,20},bad_unicode}]}]}]}]}],
              []}]},
     {clause,
         {696,1},
         [{var,{696,15},'Acc'},
          {var,{696,20},'Val'},
          {var,{696,25},'_Size'},
          {var,{696,32},'_Unit'},
          {atom,{696,39},utf32},
          {atom,{696,46},big}],
         [],
         [{debug_line,697,278},
          {'try',
              {697,5},
              [{debug_line,698,279},
               {bin,
                   {698,2},
                   [{bin_element,
                        {698,4},
                        {var,{698,4},'Acc'},
                        default,
                        [bitstring]},
                    {bin_element,
                        {698,18},
                        {var,{698,18},'Val'},
                        default,
                        [big,utf32]}]}],
              [],
              [{clause,
                   {700,2},
                   [{tuple,
                        {700,2},
                        [{atom,{700,2},error},
                         {var,{700,8},'_'},
                         {var,{700,8},'_'}]}],
                   [],
                   [{debug_line,701,280},
                    {call,
                        {701,6},
                        {remote,
                            {701,6},
                            {atom,{701,6},erlang},
                            {atom,{701,6},throw}},
                        [{block,0,
                             [{tuple,
                                  {701,12},
                                  [{atom,{701,13},badarg},
                                   {atom,{701,20},bad_unicode}]}]}]}]}],
              []}]},
     {clause,
         {703,1},
         [{var,{703,15},'Acc'},
          {var,{703,20},'Val'},
          {var,{703,25},'_Size'},
          {var,{703,32},'_Unit'},
          {atom,{703,39},utf32},
          {atom,{703,46},little}],
         [],
         [{debug_line,704,281},
          {'try',
              {704,5},
              [{debug_line,705,282},
               {bin,
                   {705,2},
                   [{bin_element,
                        {705,4},
                        {var,{705,4},'Acc'},
                        default,
                        [bitstring]},
                    {bin_element,
                        {705,18},
                        {var,{705,18},'Val'},
                        default,
                        [little,utf32]}]}],
              [],
              [{clause,
                   {707,2},
                   [{tuple,
                        {707,2},
                        [{atom,{707,2},error},
                         {var,{707,8},'_'},
                         {var,{707,8},'_'}]}],
                   [],
                   [{debug_line,708,283},
                    {call,
                        {708,6},
                        {remote,
                            {708,6},
                            {atom,{708,6},erlang},
                            {atom,{708,6},throw}},
                        [{block,0,
                             [{tuple,
                                  {708,12},
                                  [{atom,{708,13},badarg},
                                   {atom,{708,20},bad_unicode}]}]}]}]}],
              []}]},
     {clause,
         {710,1},
         [{var,{710,15},'Acc'},
          {var,{710,20},'Val'},
          {var,{710,25},'Size'},
          {var,{710,31},'Unit'},
          {atom,{710,37},float},
          {atom,{710,44},little}],
         [],
         [{debug_line,711,284},
          {bin,
              {711,5},
              [{bin_element,{711,7},{var,{711,7},'Acc'},default,[bitstring]},
               {bin_element,
                   {711,21},
                   {var,{711,21},'Val'},
                   {op,{711,30},
                       '*',
                       {var,{711,26},'Size'},
                       {var,{711,31},'Unit'}},
                   [little,float]}]}]},
     {clause,
         {712,1},
         [{var,{712,15},'Acc'},
          {var,{712,20},'Val'},
          {var,{712,25},'Size'},
          {var,{712,31},'Unit'},
          {atom,{712,37},float},
          {atom,{712,44},big}],
         [],
         [{debug_line,713,285},
          {bin,
              {713,5},
              [{bin_element,{713,7},{var,{713,7},'Acc'},default,[bitstring]},
               {bin_element,
                   {713,21},
                   {var,{713,21},'Val'},
                   {op,{713,30},
                       '*',
                       {var,{713,26},'Size'},
                       {var,{713,31},'Unit'}},
                   [big,float]}]}]},
     {clause,
         {714,1},
         [{var,{714,15},'Acc'},
          {var,{714,20},'Val'},
          {atom,{714,25},all},
          {var,{714,30},'Unit'},
          {atom,{714,36},binary},
          {var,{714,44},'_'}],
         [],
         [{debug_line,715,286},
          {'case',
              {715,5},
              {call,
                  {715,10},
                  {remote,
                      {715,10},
                      {atom,{715,10},erlang},
                      {atom,{715,10},bit_size}},
                  [{var,{715,19},'Val'}]},
              [{clause,
                   {716,2},
                   [{var,{716,2},'Size'}],
                   [[{op,{716,26},
                         '=:=',
                         {op,{716,17},
                             'rem',
                             {var,{716,12},'Size'},
                             {var,{716,21},'Unit'}},
                         {integer,{716,30},0}}]],
                   [{debug_line,717,287},
                    {bin,
                        {717,6},
                        [{bin_element,
                             {717,8},
                             {var,{717,8},'Acc'},
                             default,
                             [bitstring]},
                         {bin_element,
                             {717,22},
                             {var,{717,22},'Val'},
                             {var,{717,26},'Size'},
                             [bitstring]}]}]},
               {clause,
                   {718,2},
                   [{var,{718,2},'Size'}],
                   [],
                   [{debug_line,719,288},
                    {call,
                        {719,6},
                        {remote,
                            {719,6},
                            {atom,{719,6},erlang},
                            {atom,{719,6},throw}},
                        [{block,0,
                             [{tuple,
                                  {719,12},
                                  [{atom,{719,13},badarg},
                                   {tuple,
                                       {719,20},
                                       [{atom,{719,21},embedded_unit},
                                        {var,{719,35},'Unit'},
                                        {var,{719,40},'Size'}]}]}]}]}]}]}]},
     {clause,
         {721,1},
         [{var,{721,15},'Acc'},
          {var,{721,20},'Val'},
          {var,{721,25},'Size'},
          {var,{721,31},'Unit'},
          {atom,{721,37},binary},
          {var,{721,45},'_'}],
         [],
         [{debug_line,722,289},
          {bin,
              {722,5},
              [{bin_element,{722,7},{var,{722,7},'Acc'},default,[bitstring]},
               {bin_element,
                   {722,21},
                   {var,{722,21},'Val'},
                   {op,{722,30},
                       '*',
                       {var,{722,26},'Size'},
                       {var,{722,31},'Unit'}},
                   [bitstring]}]}]}]}.
{function,{724,1},
          bs_endian,1,
          [{clause,{724,1},
                   [{var,{724,1},'_'}],
                   [[{call,{724,1},
                           {remote,{724,1},
                                   {atom,{724,1},fake},
                                   {atom,{724,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,724,290},{atom,{724,1},ignore}]},
           {clause,{724,1},
                   [{cons,{724,11},
                          {match,{724,12},
                                 {atom,{724,12},big},
                                 {var,{724,16},'E'}},
                          {var,{724,18},'_'}}],
                   [],
                   [{debug_line,724,291},{var,{724,25},'E'}]},
           {clause,{725,1},
                   [{cons,{725,11},
                          {match,{725,12},
                                 {atom,{725,12},little},
                                 {var,{725,19},'E'}},
                          {var,{725,21},'_'}}],
                   [],
                   [{debug_line,725,292},{var,{725,28},'E'}]},
           {clause,{726,1},
                   [{cons,{726,11},
                          {match,{726,12},
                                 {atom,{726,12},native},
                                 {var,{726,19},'E'}},
                          {var,{726,21},'_'}}],
                   [],
                   [{debug_line,726,293},{var,{726,28},'E'}]},
           {clause,{727,1},
                   [{cons,{727,11},{var,{727,12},'_'},{var,{727,14},'Fs'}}],
                   [],
                   [{debug_line,727,294},
                    {call,{727,22},
                          {atom,{727,22},bs_endian},
                          [{var,{727,32},'Fs'}]}]}]}.
{function,
    {732,1},
    count_bits,1,
    [{clause,
         {732,1},
         [{var,{732,1},'_'}],
         [[{call,
               {732,1},
               {remote,
                   {732,1},
                   {atom,{732,1},fake},
                   {atom,{732,1},is_beam_bif_info}},
               []}]],
         [{debug_line,732,295},{atom,{732,1},ignore}]},
     {clause,
         {732,1},
         [{var,{732,12},'Int'}],
         [],
         [{debug_line,733,296},
          {call,
              {733,5},
              {atom,{733,5},count_bits_1},
              [{block,0,
                   [{call,
                        {733,18},
                        {remote,
                            {733,18},
                            {atom,{733,18},erlang},
                            {atom,{733,18},abs}},
                        [{var,{733,22},'Int'}]}]},
               {integer,{733,28},64}]}]}]}.
{function,
    {735,1},
    count_bits_1,2,
    [{clause,
         {735,1},
         [{var,{735,1},'_'},{var,{735,1},'_'}],
         [[{call,
               {735,1},
               {remote,
                   {735,1},
                   {atom,{735,1},fake},
                   {atom,{735,1},is_beam_bif_info}},
               []}]],
         [{debug_line,735,297},{atom,{735,1},ignore}]},
     {clause,
         {735,1},
         [{integer,{735,14},0},{var,{735,17},'Bits'}],
         [],
         [{debug_line,735,298},{var,{735,26},'Bits'}]},
     {clause,
         {736,1},
         [{var,{736,14},'Int'},{var,{736,19},'Bits'}],
         [],
         [{debug_line,736,299},
          {call,
              {736,28},
              {atom,{736,28},count_bits_1},
              [{block,0,
                   [{op,{736,45},
                        'bsr',
                        {var,{736,41},'Int'},
                        {integer,{736,49},64}}]},
               {block,0,
                   [{op,{736,57},
                        '+',
                        {var,{736,53},'Bits'},
                        {integer,{736,58},64}}]}]}]}]}.
{function,
 {746,1},
 useless_call,2,
 [{clause,
   {746,1},
   [{var,{746,1},'_'},{var,{746,1},'_'}],
   [[{call,
      {746,1},
      {remote,{746,1},{atom,{746,1},fake},{atom,{746,1},is_beam_bif_info}},
      []}]],
   [{debug_line,746,300},{atom,{746,1},ignore}]},
  {clause,
   {746,1},
   [{atom,{746,14},effect},
    {match,
     {746,22},
     {tuple,
      {746,22},
      [{atom,{746,22},c_call},
       {var,{746,22},'_'},
       {tuple,
        {746,37},
        [{atom,{746,37},c_literal},{var,{746,37},'_'},{var,{746,52},'Mod'}]},
       {tuple,
        {747,14},
        [{atom,{747,14},c_literal},{var,{747,14},'_'},{var,{747,29},'Name'}]},
       {var,{748,14},'Args'}]},
     {var,{748,20},'Call'}}],
   [],
   [{debug_line,749,301},
    {match,
     {749,5},
     {var,{749,5},'A'},
     {call,
      {749,9},
      {remote,{749,9},{atom,{749,9},erlang},{atom,{749,9},length}},
      [{var,{749,16},'Args'}]}},
    {debug_line,750,302},
    {'case',
     {750,5},
     {call,
      {750,10},
      {remote,{750,18},{atom,{750,10},erl_bifs},{atom,{750,19},is_safe}},
      [{var,{750,27},'Mod'},{var,{750,32},'Name'},{var,{750,38},'A'}]},
     [{clause,
       {751,2},
       [{atom,{751,2},false}],
       [],
       [{debug_line,752,303},
        {'case',
         {752,6},
         {call,
          {752,11},
          {remote,{752,19},{atom,{752,11},erl_bifs},{atom,{752,20},is_pure}},
          [{var,{752,28},'Mod'},{var,{752,33},'Name'},{var,{752,39},'A'}]},
         [{clause,
           {753,3},
           [{atom,{753,3},true}],
           [],
           [{debug_line,754,304},
            {match,
             {754,21},
             {var,{754,21},'Classified'},
             {call,
              {754,34},
              {atom,{754,34},classify_call},
              [{var,{754,48},'Call'}]}},
            {debug_line,755,305},
            {call,
             {755,21},
             {atom,{755,21},add_warning},
             [{var,{755,33},'Call'},
              {block,0,
               [{tuple,
                 {755,39},
                 [{atom,{755,40},ignored},
                  {tuple,
                   {755,48},
                   [{atom,{755,49},result},
                    {var,{755,56},'Classified'}]}]}]}]}]},
          {clause,
           {756,3},
           [{atom,{756,3},false}],
           [],
           [{debug_line,757,306},{atom,{757,21},ok}]}]},
        {debug_line,759,307},
        {atom,{759,6},no}]},
      {clause,
       {760,2},
       [{atom,{760,2},true}],
       [],
       [{debug_line,761,308},
        {call,
         {761,6},
         {atom,{761,6},add_warning},
         [{var,{761,18},'Call'},
          {block,0,
           [{tuple,
             {761,24},
             [{atom,{761,25},ignored},
              {tuple,
               {761,33},
               [{atom,{761,34},no_effect},
                {tuple,
                 {761,44},
                 [{var,{761,45},'Mod'},
                  {var,{761,49},'Name'},
                  {var,{761,54},'A'}]}]}]}]}]},
        {debug_line,762,309},
        {tuple,
         {762,6},
         [{atom,{762,7},yes},
          {call,
           {762,11},
           {atom,{762,11},make_effect_seq},
           [{var,{762,27},'Args'},
            {block,0,[{call,{762,33},{atom,{762,33},sub_new},[]}]}]}]}]}]}]},
  {clause,
   {764,1},
   [{var,{764,14},'_'},{var,{764,17},'_'}],
   [],
   [{debug_line,764,310},{atom,{764,23},no}]}]}.
{function,
    {771,1},
    make_effect_seq,2,
    [{clause,
         {771,1},
         [{var,{771,1},'_'},{var,{771,1},'_'}],
         [[{call,
               {771,1},
               {remote,
                   {771,1},
                   {atom,{771,1},fake},
                   {atom,{771,1},is_beam_bif_info}},
               []}]],
         [{debug_line,771,311},{atom,{771,1},ignore}]},
     {clause,
         {771,1},
         [{cons,{771,17},{var,{771,18},'H'},{var,{771,20},'T'}},
          {var,{771,24},'Sub'}],
         [],
         [{debug_line,772,312},
          {'case',
              {772,5},
              {call,
                  {772,10},
                  {atom,{772,10},is_safe_simple},
                  [{var,{772,25},'H'}]},
              [{clause,
                   {773,2},
                   [{atom,{773,2},true}],
                   [],
                   [{debug_line,773,313},
                    {call,
                        {773,10},
                        {atom,{773,10},make_effect_seq},
                        [{var,{773,26},'T'},{var,{773,29},'Sub'}]}]},
               {clause,
                   {774,2},
                   [{atom,{774,2},false}],
                   [],
                   [{debug_line,774,314},
                    {tuple,
                        {774,11},
                        [{atom,{774,11},c_seq},
                         {nil,{774,11}},
                         {var,{774,22},'H'},
                         {call,
                             {774,29},
                             {atom,{774,29},make_effect_seq},
                             [{var,{774,45},'T'},
                              {var,{774,48},'Sub'}]}]}]}]}]},
     {clause,
         {776,1},
         [{nil,{776,17}},{var,{776,21},'_'}],
         [],
         [{debug_line,776,315},{call,{776,27},{atom,{776,27},void},[]}]}]}.
{function,
 {781,1},
 fold_apply,3,
 [{clause,
   {781,1},
   [{var,{781,1},'_'},{var,{781,1},'_'},{var,{781,1},'_'}],
   [[{call,
      {781,1},
      {remote,{781,1},{atom,{781,1},fake},{atom,{781,1},is_beam_bif_info}},
      []}]],
   [{debug_line,781,316},{atom,{781,1},ignore}]},
  {clause,
   {781,1},
   [{var,{781,12},'Apply'},
    {tuple,
     {781,19},
     [{atom,{781,19},c_literal},{var,{781,19},'_'},{var,{781,34},'Fun'}]},
    {var,{781,40},'Args'}],
   [[{call,
      {781,51},
      {remote,{781,51},{atom,{781,51},erlang},{atom,{781,51},is_function}},
      [{var,{781,63},'Fun'}]}]],
   [{debug_line,782,317},
    {match,
     {782,5},
     {tuple,{782,5},[{atom,{782,6},module},{var,{782,13},'Mod'}]},
     {call,
      {782,20},
      {remote,{782,26},{atom,{782,20},erlang},{atom,{782,27},fun_info}},
      [{var,{782,36},'Fun'},{atom,{782,41},module}]}},
    {debug_line,783,318},
    {match,
     {783,5},
     {tuple,{783,5},[{atom,{783,6},name},{var,{783,11},'Name'}]},
     {call,
      {783,19},
      {remote,{783,25},{atom,{783,19},erlang},{atom,{783,26},fun_info}},
      [{var,{783,35},'Fun'},{atom,{783,40},name}]}},
    {debug_line,784,319},
    {match,
     {784,5},
     {tuple,{784,5},[{atom,{784,6},arity},{var,{784,12},'Arity'}]},
     {call,
      {784,21},
      {remote,{784,27},{atom,{784,21},erlang},{atom,{784,28},fun_info}},
      [{var,{784,37},'Fun'},{atom,{784,42},arity}]}},
    {debug_line,785,320},
    {'if',
     {785,5},
     [{clause,
       {786,9},
       [],
       [[{op,
          {786,15},
          '=:=',
          {var,{786,9},'Arity'},
          {call,
           {786,19},
           {remote,{786,19},{atom,{786,19},erlang},{atom,{786,19},length}},
           [{var,{786,26},'Args'}]}}]],
       [{debug_line,787,321},
        {tuple,
         {787,13},
         [{atom,{787,13},c_call},
          {'case',
           {787,26},
           {var,{787,26},'Apply'},
           [{clause,
             [{generated,true},{location,{787,26}}],
             [{tuple,
               [{generated,true},{location,{787,26}}],
               [{atom,{787,26},c_apply},
                {var,{787,26},rec21},
                {var,{787,26},'_'},
                {var,{787,26},'_'}]}],
             [],
             [{var,{787,26},rec21}]},
            {clause,
             [{generated,true},{location,{787,26}}],
             [{var,{787,26},rec21}],
             [],
             [{call,
               [{generated,true},{location,{787,26}}],
               {remote,
                [{generated,true},{location,{787,26}}],
                {atom,[{generated,true},{location,{787,26}}],erlang},
                {atom,[{generated,true},{location,{787,26}}],error}},
               [{tuple,
                 [{generated,true},{location,{787,26}}],
                 [{atom,[{generated,true},{location,{787,26}}],badrecord},
                  {var,{787,26},rec21}]}]}]}]},
          {tuple,
           {788,28},
           [{atom,{788,28},c_literal},{nil,{788,28}},{var,{788,43},'Mod'}]},
          {tuple,
           {789,26},
           [{atom,{789,26},c_literal},{nil,{789,26}},{var,{789,41},'Name'}]},
          {var,{790,26},'Args'}]}]},
      {clause,
       {791,9},
       [],
       [[{atom,{791,9},true}]],
       [{debug_line,792,322},{var,{792,13},'Apply'}]}]}]},
  {clause,
   {794,1},
   [{var,{794,12},'Apply'},{var,{794,19},'_'},{var,{794,22},'_'}],
   [],
   [{debug_line,794,323},{var,{794,28},'Apply'}]}]}.
{function,
 {799,1},
 call,4,
 [{clause,
   {799,1},
   [{var,{799,1},'_'},{var,{799,1},'_'},{var,{799,1},'_'},{var,{799,1},'_'}],
   [[{call,
      {799,1},
      {remote,{799,1},{atom,{799,1},fake},{atom,{799,1},is_beam_bif_info}},
      []}]],
   [{debug_line,799,324},{atom,{799,1},ignore}]},
  {clause,
   {799,1},
   [{match,
     {799,6},
     {tuple,
      {799,6},
      [{atom,{799,6},c_call},
       {var,{799,6},'_'},
       {var,{799,6},'_'},
       {var,{799,6},'_'},
       {var,{799,19},'As0'}]},
     {var,{799,24},'Call0'}},
    {match,
     {799,31},
     {tuple,
      {799,31},
      [{atom,{799,31},c_literal},{var,{799,31},'_'},{var,{799,46},'M'}]},
     {var,{799,49},'M0'}},
    {match,
     {799,53},
     {tuple,
      {799,53},
      [{atom,{799,53},c_literal},{var,{799,53},'_'},{var,{799,68},'N'}]},
     {var,{799,71},'N0'}},
    {var,{799,75},'Sub'}],
   [],
   [{debug_line,800,325},
    {match,
     {800,5},
     {var,{800,5},'As1'},
     {call,
      {800,11},
      {atom,{800,11},expr_list},
      [{var,{800,21},'As0'},{atom,{800,26},value},{var,{800,33},'Sub'}]}},
    {debug_line,801,326},
    {'case',
     {801,5},
     {call,
      {801,10},
      {atom,{801,10},simplify_call},
      [{var,{801,24},'Call0'},
       {var,{801,31},'M'},
       {var,{801,34},'N'},
       {var,{801,37},'As1'}]},
     [{clause,
       {802,9},
       [{match,
         {802,9},
         {tuple,
          {802,9},
          [{atom,{802,9},c_call},
           {var,{802,9},'_'},
           {var,{802,9},'_'},
           {var,{802,9},'_'},
           {var,{802,22},'As'}]},
         {var,{802,26},'Call'}}],
       [],
       [{debug_line,803,327},
        {'case',
         {803,13},
         {call,
          {803,18},
          {remote,{803,18},{atom,{803,18},erlang},{atom,{803,18},get}},
          [{atom,{803,22},no_inline_list_funcs}]},
         [{clause,
           {804,17},
           [{atom,{804,17},true}],
           [],
           [{debug_line,805,328},
            {call,
             {805,21},
             {atom,{805,21},fold_call},
             [{var,{805,31},'Call'},
              {var,{805,37},'M0'},
              {var,{805,41},'N0'},
              {var,{805,45},'As'},
              {var,{805,49},'Sub'}]}]},
          {clause,
           {806,17},
           [{atom,{806,17},false}],
           [],
           [{debug_line,807,329},
            {'case',
             {807,21},
             {call,
              {807,26},
              {remote,
               {807,45},
               {atom,{807,26},sys_core_fold_lists},
               {atom,{807,46},call}},
              [{var,{807,51},'Call'},
               {var,{807,57},'M'},
               {var,{807,60},'N'},
               {var,{807,63},'As'}]},
             [{clause,
               {808,25},
               [{atom,{808,25},none}],
               [],
               [{debug_line,808,330},
                {call,
                 {808,33},
                 {atom,{808,33},fold_call},
                 [{var,{808,43},'Call'},
                  {var,{808,49},'M0'},
                  {var,{808,53},'N0'},
                  {var,{808,57},'As'},
                  {var,{808,61},'Sub'}]}]},
              {clause,
               {809,25},
               [{var,{809,25},'Core'}],
               [],
               [{debug_line,809,331},
                {call,
                 {809,33},
                 {atom,{809,33},expr},
                 [{var,{809,38},'Core'},{var,{809,44},'Sub'}]}]}]}]}]}]},
      {clause,
       {812,9},
       [{match,
         {812,9},
         {tuple,
          {812,9},
          [{atom,{812,9},c_let},
           {var,{812,9},'_'},
           {var,{812,9},'_'},
           {var,{812,9},'_'},
           {var,{812,9},'_'}]},
         {var,{812,18},'Let'}}],
       [],
       [{debug_line,813,332},{var,{813,13},'Let'}]},
      {clause,
       {814,9},
       [{match,
         {814,9},
         {tuple,
          {814,9},
          [{atom,{814,9},c_literal},{var,{814,9},'_'},{var,{814,9},'_'}]},
         {var,{814,22},'Lit'}}],
       [],
       [{debug_line,815,333},{var,{815,13},'Lit'}]}]}]},
  {clause,
   {817,1},
   [{match,
     {817,6},
     {tuple,
      {817,6},
      [{atom,{817,6},c_call},
       {var,{817,6},'_'},
       {var,{817,6},'_'},
       {var,{817,6},'_'},
       {var,{817,19},'As0'}]},
     {var,{817,24},'Call'}},
    {var,{817,30},'M'},
    {var,{817,33},'N'},
    {var,{817,36},'Sub'}],
   [],
   [{debug_line,818,334},
    {match,
     {818,5},
     {var,{818,5},'As'},
     {call,
      {818,10},
      {atom,{818,10},expr_list},
      [{var,{818,20},'As0'},{atom,{818,25},value},{var,{818,32},'Sub'}]}},
    {debug_line,819,335},
    {call,
     {819,5},
     {atom,{819,5},fold_call},
     [{block,0,
       [{block,
         {819,15},
         [{match,{819,15},{var,{819,15},rec22},{var,{819,15},'Call'}},
          {'case',
           {819,27},
           {var,{819,15},rec22},
           [{clause,
             {819,27},
             [{tuple,
               {819,27},
               [{atom,{819,27},c_call},
                {var,{819,27},'_'},
                {var,{819,27},'_'},
                {var,{819,27},'_'},
                {var,{819,27},'_'}]}],
             [],
             [{call,
               {819,27},
               {remote,
                {819,27},
                {atom,{819,27},erlang},
                {atom,{819,27},setelement}},
               [{integer,{819,27},5},
                {var,{819,15},rec22},
                {var,{819,32},'As'}]}]},
            {clause,
             [{generated,true},{location,{819,27}}],
             [{var,[{generated,true},{location,{819,27}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{819,27}}],
               {remote,
                [{generated,true},{location,{819,27}}],
                {atom,[{generated,true},{location,{819,27}}],erlang},
                {atom,[{generated,true},{location,{819,27}}],error}},
               [{tuple,
                 [{generated,true},{location,{819,27}}],
                 [{atom,[{generated,true},{location,{819,27}}],badrecord},
                  {var,{819,15},rec22}]}]}]}]}]}]},
      {var,{819,37},'M'},
      {var,{819,40},'N'},
      {var,{819,43},'As'},
      {var,{819,47},'Sub'}]}]}]}.
{function,
 {823,1},
 simplify_call,4,
 [{clause,
   {823,1},
   [{var,{823,1},'_'},{var,{823,1},'_'},{var,{823,1},'_'},{var,{823,1},'_'}],
   [[{call,
      {823,1},
      {remote,{823,1},{atom,{823,1},fake},{atom,{823,1},is_beam_bif_info}},
      []}]],
   [{debug_line,823,336},{atom,{823,1},ignore}]},
  {clause,
   {823,1},
   [{var,{823,15},'Call'},
    {atom,{823,21},maps},
    {atom,{823,27},get},
    {cons,
     {823,32},
     {var,{823,33},'Key'},
     {cons,{823,38},{var,{823,38},'Map'},{nil,{823,41}}}}],
   [],
   [{debug_line,824,337},
    {call,
     {824,5},
     {atom,{824,5},rewrite_call},
     [{var,{824,18},'Call'},
      {atom,{824,24},erlang},
      {atom,{824,32},map_get},
      {block,0,
       [{cons,
         {824,41},
         {var,{824,42},'Key'},
         {cons,{824,47},{var,{824,47},'Map'},{nil,{824,50}}}}]}]}]},
  {clause,
   {825,1},
   [{tuple,
     {825,15},
     [{atom,{825,15},c_call},
      {var,{825,28},'Anno0'},
      {var,{825,15},'_'},
      {var,{825,15},'_'},
      {var,{825,15},'_'}]},
    {atom,{825,36},maps},
    {atom,{825,42},get},
    {cons,
     {825,47},
     {var,{825,48},'Key0'},
     {cons,
      {825,54},
      {var,{825,54},'Map'},
      {cons,{825,59},{var,{825,59},'Default'},{nil,{825,66}}}}}],
   [],
   [{debug_line,826,338},
    {match,
     {826,5},
     {var,{826,5},'Anno'},
     {cons,
      {826,12},
      {atom,{826,13},compiler_generated},
      {var,{826,34},'Anno0'}}},
    {debug_line,828,339},
    {match,
     {828,5},
     {var,{828,5},'Key'},
     {call,{828,11},{atom,{828,11},make_var},[{var,{828,20},'Anno'}]}},
    {debug_line,829,340},
    {match,
     {829,5},
     {var,{829,5},'Value'},
     {call,{829,13},{atom,{829,13},make_var},[{var,{829,22},'Anno'}]}},
    {debug_line,830,341},
    {match,
     {830,5},
     {var,{830,5},'Fail'},
     {call,{830,12},{atom,{830,12},make_var},[{var,{830,21},'Anno'}]}},
    {debug_line,831,342},
    {match,
     {831,5},
     {var,{831,5},'Raise'},
     {tuple,
      {831,13},
      [{atom,{831,13},c_primop},
       {nil,{831,13}},
       {tuple,
        {831,28},
        [{atom,{831,28},c_literal},{nil,{831,28}},{atom,{831,43},match_fail}]},
       {cons,
        {832,28},
        {tuple,
         {832,29},
         [{atom,{832,29},c_tuple},
          {nil,{832,29}},
          {cons,
           {832,41},
           {tuple,
            {832,42},
            [{atom,{832,42},c_literal},{nil,{832,42}},{atom,{832,57},badmap}]},
           {cons,{833,42},{var,{833,42},'Fail'},{nil,{833,46}}}}]},
        {nil,{833,48}}}]}},
    {debug_line,835,343},
    {match,
     {835,5},
     {var,{835,5},'Cs'},
     {cons,
      {835,10},
      {tuple,
       {835,11},
       [{atom,{835,11},c_clause},
        {var,{835,26},'Anno'},
        {cons,
         {836,26},
         {tuple,
          {836,27},
          [{atom,{836,27},c_map},
           {nil,{836,27}},
           {tuple,
            {836,27},
            [{atom,{836,27},c_literal},{nil,{836,27}},{map,{836,27},[]}]},
           {cons,
            {836,37},
            {tuple,
             {836,38},
             [{atom,{836,38},c_map_pair},
              {nil,{836,38}},
              {tuple,
               {836,53},
               [{atom,{836,53},c_literal},
                {nil,{836,53}},
                {atom,{836,68},exact}]},
              {var,{837,54},'Key'},
              {var,{838,54},'Value'}]},
            {nil,{838,60}}},
           {atom,{839,41},true}]},
         {nil,{839,46}}},
        {tuple,
         {840,27},
         [{atom,{840,27},c_literal},{nil,{840,27}},{atom,{840,42},true}]},
        {var,{841,26},'Value'}]},
      {cons,
       {842,11},
       {tuple,
        {842,11},
        [{atom,{842,11},c_clause},
         {var,{842,26},'Anno'},
         {cons,
          {843,26},
          {tuple,
           {843,27},
           [{atom,{843,27},c_map},
            {nil,{843,27}},
            {tuple,
             {843,27},
             [{atom,{843,27},c_literal},{nil,{843,27}},{map,{843,27},[]}]},
            {nil,{843,37}},
            {atom,{843,47},true}]},
          {nil,{843,52}}},
         {tuple,
          {844,27},
          [{atom,{844,27},c_literal},{nil,{844,27}},{atom,{844,42},true}]},
         {var,{845,26},'Default'}]},
       {cons,
        {846,11},
        {tuple,
         {846,11},
         [{atom,{846,11},c_clause},
          {var,{846,26},'Anno'},
          {cons,{847,26},{var,{847,27},'Fail'},{nil,{847,31}}},
          {tuple,
           {848,27},
           [{atom,{848,27},c_literal},{nil,{848,27}},{atom,{848,42},true}]},
          {var,{849,26},'Raise'}]},
        {nil,{849,32}}}}}},
    {debug_line,851,344},
    {call,
     {851,5},
     {remote,{851,9},{atom,{851,5},cerl},{atom,{851,10},ann_c_let}},
     [{var,{851,20},'Anno'},
      {block,0,[{cons,{851,26},{var,{851,27},'Key'},{nil,{851,30}}}]},
      {var,{851,33},'Key0'},
      {block,0,
       [{tuple,
         {851,39},
         [{atom,{851,39},c_case},
          {var,{851,52},'Anno'},
          {var,{851,61},'Map'},
          {var,{851,73},'Cs'}]}]}]}]},
  {clause,
   {852,1},
   [{var,{852,15},'Call'},
    {atom,{852,21},maps},
    {atom,{852,27},is_key},
    {cons,
     {852,35},
     {var,{852,36},'Key'},
     {cons,{852,41},{var,{852,41},'Map'},{nil,{852,44}}}}],
   [],
   [{debug_line,853,345},
    {call,
     {853,5},
     {atom,{853,5},rewrite_call},
     [{var,{853,18},'Call'},
      {atom,{853,24},erlang},
      {atom,{853,32},is_map_key},
      {block,0,
       [{cons,
         {853,44},
         {var,{853,45},'Key'},
         {cons,{853,50},{var,{853,50},'Map'},{nil,{853,53}}}}]}]}]},
  {clause,
   {854,1},
   [{var,{854,15},'_Call'},
    {atom,{854,22},maps},
    {atom,{854,28},new},
    {nil,{854,33}}],
   [],
   [{debug_line,855,346},
    {tuple,
     {855,5},
     [{atom,{855,5},c_literal},{nil,{855,5}},{map,{855,20},[]}]}]},
  {clause,
   {856,1},
   [{var,{856,15},'Call'},
    {atom,{856,21},maps},
    {atom,{856,27},size},
    {cons,{856,33},{var,{856,34},'Map'},{nil,{856,37}}}],
   [],
   [{debug_line,857,347},
    {call,
     {857,5},
     {atom,{857,5},rewrite_call},
     [{var,{857,18},'Call'},
      {atom,{857,24},erlang},
      {atom,{857,32},map_size},
      {block,0,[{cons,{857,42},{var,{857,43},'Map'},{nil,{857,46}}}]}]}]},
  {clause,
   {858,1},
   [{var,{858,15},'Call'},
    {var,{858,21},'_'},
    {var,{858,24},'_'},
    {var,{858,27},'Args'}],
   [],
   [{debug_line,859,348},
    {block,
     {859,5},
     [{match,{859,5},{var,{859,5},rec23},{var,{859,5},'Call'}},
      {'case',
       {859,17},
       {var,{859,5},rec23},
       [{clause,
         {859,17},
         [{tuple,
           {859,17},
           [{atom,{859,17},c_call},
            {var,{859,17},'_'},
            {var,{859,17},'_'},
            {var,{859,17},'_'},
            {var,{859,17},'_'}]}],
         [],
         [{call,
           {859,17},
           {remote,{859,17},{atom,{859,17},erlang},{atom,{859,17},setelement}},
           [{integer,{859,17},5},{var,{859,5},rec23},{var,{859,22},'Args'}]}]},
        {clause,
         [{generated,true},{location,{859,17}}],
         [{var,[{generated,true},{location,{859,17}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{859,17}}],
           {remote,
            [{generated,true},{location,{859,17}}],
            {atom,[{generated,true},{location,{859,17}}],erlang},
            {atom,[{generated,true},{location,{859,17}}],error}},
           [{tuple,
             [{generated,true},{location,{859,17}}],
             [{atom,[{generated,true},{location,{859,17}}],badrecord},
              {var,{859,5},rec23}]}]}]}]}]}]}]}.
{function,
 {863,1},
 rewrite_call,4,
 [{clause,
   {863,1},
   [{var,{863,1},'_'},{var,{863,1},'_'},{var,{863,1},'_'},{var,{863,1},'_'}],
   [[{call,
      {863,1},
      {remote,{863,1},{atom,{863,1},fake},{atom,{863,1},is_beam_bif_info}},
      []}]],
   [{debug_line,863,349},{atom,{863,1},ignore}]},
  {clause,
   {863,1},
   [{var,{863,14},'Call'},
    {var,{863,20},'Mod'},
    {var,{863,25},'Func'},
    {var,{863,31},'Args'}],
   [],
   [{debug_line,864,350},
    {match,
     {864,5},
     {var,{864,5},'ModLit'},
     {tuple,
      {864,14},
      [{atom,{864,14},c_literal},{nil,{864,14}},{var,{864,29},'Mod'}]}},
    {debug_line,865,351},
    {match,
     {865,5},
     {var,{865,5},'FuncLit'},
     {tuple,
      {865,15},
      [{atom,{865,15},c_literal},{nil,{865,15}},{var,{865,30},'Func'}]}},
    {debug_line,866,352},
    {block,
     {866,5},
     [{match,{866,5},{var,{866,5},rec24},{var,{866,5},'Call'}},
      {'case',
       {866,17},
       {var,{866,5},rec24},
       [{clause,
         {866,17},
         [{tuple,
           {866,17},
           [{atom,{866,17},c_call},
            {var,{866,17},'_'},
            {var,{866,17},'_'},
            {var,{866,17},'_'},
            {var,{866,17},'_'}]}],
         [],
         [{call,
           {866,17},
           {remote,{866,17},{atom,{866,17},erlang},{atom,{866,17},setelement}},
           [{integer,{866,17},3},
            {call,
             {866,31},
             {remote,
              {866,31},
              {atom,{866,31},erlang},
              {atom,{866,31},setelement}},
             [{integer,{866,31},4},
              {call,
               {866,44},
               {remote,
                {866,44},
                {atom,{866,44},erlang},
                {atom,{866,44},setelement}},
               [{integer,{866,44},5},
                {var,{866,5},rec24},
                {var,{866,49},'Args'}]},
              {var,{866,36},'FuncLit'}]},
            {var,{866,24},'ModLit'}]}]},
        {clause,
         [{generated,true},{location,{866,17}}],
         [{var,[{generated,true},{location,{866,17}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{866,17}}],
           {remote,
            [{generated,true},{location,{866,17}}],
            {atom,[{generated,true},{location,{866,17}}],erlang},
            {atom,[{generated,true},{location,{866,17}}],error}},
           [{tuple,
             [{generated,true},{location,{866,17}}],
             [{atom,[{generated,true},{location,{866,17}}],badrecord},
              {var,{866,5},rec24}]}]}]}]}]}]}]}.
{function,{879,1},
          fold_call,5,
          [{clause,{879,1},
                   [{var,{879,1},'_'},
                    {var,{879,1},'_'},
                    {var,{879,1},'_'},
                    {var,{879,1},'_'},
                    {var,{879,1},'_'}],
                   [[{call,{879,1},
                           {remote,{879,1},
                                   {atom,{879,1},fake},
                                   {atom,{879,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,879,353},{atom,{879,1},ignore}]},
           {clause,{879,1},
                   [{var,{879,11},'Call'},
                    {tuple,{879,17},
                           [{atom,{879,17},c_literal},
                            {var,{879,17},'_'},
                            {var,{879,32},'M'}]},
                    {tuple,{879,36},
                           [{atom,{879,36},c_literal},
                            {var,{879,36},'_'},
                            {var,{879,51},'F'}]},
                    {var,{879,55},'Args'},
                    {var,{879,61},'Sub'}],
                   [],
                   [{debug_line,880,354},
                    {call,{880,5},
                          {atom,{880,5},fold_call_1},
                          [{var,{880,17},'Call'},
                           {var,{880,23},'M'},
                           {var,{880,26},'F'},
                           {var,{880,29},'Args'},
                           {var,{880,35},'Sub'}]}]},
           {clause,{881,1},
                   [{var,{881,11},'Call'},
                    {var,{881,17},'_M'},
                    {var,{881,21},'_N'},
                    {var,{881,25},'_Args'},
                    {var,{881,32},'_Sub'}],
                   [],
                   [{debug_line,881,355},{var,{881,41},'Call'}]}]}.
{function,
    {883,1},
    fold_call_1,5,
    [{clause,
         {883,1},
         [{var,{883,1},'_'},
          {var,{883,1},'_'},
          {var,{883,1},'_'},
          {var,{883,1},'_'},
          {var,{883,1},'_'}],
         [[{call,
               {883,1},
               {remote,
                   {883,1},
                   {atom,{883,1},fake},
                   {atom,{883,1},is_beam_bif_info}},
               []}]],
         [{debug_line,883,356},{atom,{883,1},ignore}]},
     {clause,
         {883,1},
         [{var,{883,13},'Call'},
          {atom,{883,19},erlang},
          {atom,{883,27},apply},
          {cons,
              {883,34},
              {var,{883,35},'Fun'},
              {cons,{883,39},{var,{883,39},'Args'},{nil,{883,43}}}},
          {var,{883,46},'_'}],
         [],
         [{debug_line,884,357},
          {call,
              {884,5},
              {atom,{884,5},simplify_fun_apply},
              [{var,{884,24},'Call'},
               {var,{884,30},'Fun'},
               {var,{884,35},'Args'}]}]},
     {clause,
         {885,1},
         [{var,{885,13},'Call'},
          {atom,{885,19},erlang},
          {atom,{885,27},apply},
          {cons,
              {885,34},
              {var,{885,35},'Mod'},
              {cons,
                  {885,39},
                  {var,{885,39},'Func'},
                  {cons,{885,44},{var,{885,44},'Args'},{nil,{885,48}}}}},
          {var,{885,51},'_'}],
         [],
         [{debug_line,886,358},
          {call,
              {886,5},
              {atom,{886,5},simplify_apply},
              [{var,{886,20},'Call'},
               {var,{886,26},'Mod'},
               {var,{886,31},'Func'},
               {var,{886,37},'Args'}]}]},
     {clause,
         {887,1},
         [{var,{887,13},'Call'},
          {var,{887,19},'Mod'},
          {var,{887,24},'Name'},
          {var,{887,30},'Args'},
          {var,{887,36},'Sub'}],
         [],
         [{debug_line,888,359},
          {match,
              {888,5},
              {var,{888,5},'NumArgs'},
              {call,
                  {888,15},
                  {remote,
                      {888,15},
                      {atom,{888,15},erlang},
                      {atom,{888,15},length}},
                  [{var,{888,22},'Args'}]}},
          {debug_line,889,360},
          {'case',
              {889,5},
              {call,
                  {889,10},
                  {remote,
                      {889,18},
                      {atom,{889,10},erl_bifs},
                      {atom,{889,19},is_pure}},
                  [{var,{889,27},'Mod'},
                   {var,{889,32},'Name'},
                   {var,{889,38},'NumArgs'}]},
              [{clause,
                   {890,2},
                   [{atom,{890,2},false}],
                   [],
                   [{debug_line,890,361},{var,{890,11},'Call'}]},
               {clause,
                   {891,2},
                   [{atom,{891,2},true}],
                   [],
                   [{debug_line,891,362},
                    {call,
                        {891,10},
                        {atom,{891,10},fold_call_2},
                        [{var,{891,22},'Call'},
                         {var,{891,28},'Mod'},
                         {var,{891,33},'Name'},
                         {var,{891,39},'Args'},
                         {var,{891,45},'Sub'}]}]}]}]}]}.
{function,
    {894,1},
    fold_call_2,5,
    [{clause,
         {894,1},
         [{var,{894,1},'_'},
          {var,{894,1},'_'},
          {var,{894,1},'_'},
          {var,{894,1},'_'},
          {var,{894,1},'_'}],
         [[{call,
               {894,1},
               {remote,
                   {894,1},
                   {atom,{894,1},fake},
                   {atom,{894,1},is_beam_bif_info}},
               []}]],
         [{debug_line,894,363},{atom,{894,1},ignore}]},
     {clause,
         {894,1},
         [{var,{894,13},'Call'},
          {var,{894,19},'Module'},
          {var,{894,27},'Name'},
          {var,{894,33},'Args'},
          {var,{894,39},'Sub'}],
         [],
         [{debug_line,895,364},
          {'case',
              {895,5},
              {call,
                  {895,10},
                  {remote,{895,10},{atom,{895,10},lists},{atom,{895,10},all}},
                  [{block,0,
                       [{'fun',
                            {895,14},
                            {function,
                                {atom,{895,18},cerl},
                                {atom,{895,23},is_literal},
                                {integer,{895,34},1}}}]},
                   {var,{895,37},'Args'}]},
              [{clause,
                   {896,2},
                   [{atom,{896,2},true}],
                   [],
                   [{debug_line,898,365},
                    {call,
                        {898,6},
                        {atom,{898,6},fold_lit_args},
                        [{var,{898,20},'Call'},
                         {var,{898,26},'Module'},
                         {var,{898,34},'Name'},
                         {var,{898,40},'Args'}]}]},
               {clause,
                   {899,2},
                   [{atom,{899,2},false}],
                   [],
                   [{debug_line,901,366},
                    {call,
                        {901,6},
                        {atom,{901,6},fold_non_lit_args},
                        [{var,{901,24},'Call'},
                         {var,{901,30},'Module'},
                         {var,{901,38},'Name'},
                         {var,{901,44},'Args'},
                         {var,{901,50},'Sub'}]}]}]}]}]}.
{function,
 {904,1},
 fold_lit_args,4,
 [{clause,
   {904,1},
   [{var,{904,1},'_'},{var,{904,1},'_'},{var,{904,1},'_'},{var,{904,1},'_'}],
   [[{call,
      {904,1},
      {remote,{904,1},{atom,{904,1},fake},{atom,{904,1},is_beam_bif_info}},
      []}]],
   [{debug_line,904,367},{atom,{904,1},ignore}]},
  {clause,
   {904,1},
   [{var,{904,15},'Call'},
    {var,{904,21},'Module'},
    {var,{904,29},'Name'},
    {var,{904,35},'Args0'}],
   [],
   [{debug_line,905,368},
    {match,
     {905,5},
     {var,{905,5},'Args'},
     {lc,
      {905,12},
      {block,0,
       [{call,
         {905,13},
         {remote,{905,17},{atom,{905,13},cerl},{atom,{905,18},concrete}},
         [{var,{905,27},'A'}]}]},
      [{block,0,[{atom,{905,38},true}]},
       {generate,{905,35},{var,{905,33},'A'},{var,{905,38},'Args0'}}]}},
    {debug_line,906,369},
    {'try',
     {906,5},
     [{call,
       {906,9},
       {remote,{906,9},{atom,{906,9},erlang},{atom,{906,9},apply}},
       [{var,{906,15},'Module'},{var,{906,23},'Name'},{var,{906,29},'Args'}]}],
     [{clause,
       {907,2},
       [{var,{907,2},'Val'}],
       [],
       [{debug_line,908,370},
        {'case',
         {908,6},
         {call,
          {908,11},
          {remote,
           {908,15},
           {atom,{908,11},cerl},
           {atom,{908,16},is_literal_term}},
          [{var,{908,32},'Val'}]},
         [{clause,
           {909,3},
           [{atom,{909,3},true}],
           [],
           [{debug_line,910,371},
            {call,
             {910,7},
             {remote,
              {910,11},
              {atom,{910,7},cerl},
              {atom,{910,12},ann_abstract}},
             [{block,0,
               [{call,
                 {910,25},
                 {remote,
                  {910,29},
                  {atom,{910,25},cerl},
                  {atom,{910,30},get_ann}},
                 [{var,{910,38},'Call'}]}]},
              {var,{910,45},'Val'}]}]},
          {clause,
           {911,3},
           [{atom,{911,3},false}],
           [],
           [{debug_line,914,372},{var,{914,7},'Call'}]}]}]}],
     [{clause,
       {917,2},
       [{tuple,
         {917,2},
         [{atom,{917,2},error},{var,{917,8},'Reason'},{var,{917,8},'_'}]}],
       [],
       [{debug_line,921,373},
        {call,
         {921,6},
         {atom,{921,6},eval_failure},
         [{var,{921,19},'Call'},{var,{921,25},'Reason'}]}]}],
     []}]}]}.
{function,{928,1},
          fold_non_lit_args,5,
          [{clause,{928,1},
                   [{var,{928,1},'_'},
                    {var,{928,1},'_'},
                    {var,{928,1},'_'},
                    {var,{928,1},'_'},
                    {var,{928,1},'_'}],
                   [[{call,{928,1},
                           {remote,{928,1},
                                   {atom,{928,1},fake},
                                   {atom,{928,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,928,374},{atom,{928,1},ignore}]},
           {clause,{928,1},
                   [{var,{928,19},'Call'},
                    {atom,{928,25},erlang},
                    {atom,{928,33},length},
                    {cons,{928,41},{var,{928,42},'Arg'},{nil,{928,45}}},
                    {var,{928,48},'_'}],
                   [],
                   [{debug_line,929,375},
                    {call,{929,5},
                          {atom,{929,5},eval_length},
                          [{var,{929,17},'Call'},{var,{929,23},'Arg'}]}]},
           {clause,{930,1},
                   [{var,{930,19},'Call'},
                    {atom,{930,25},erlang},
                    {atom,{930,33},'++'},
                    {cons,{930,39},
                          {var,{930,40},'Arg1'},
                          {cons,{930,45},
                                {var,{930,45},'Arg2'},
                                {nil,{930,49}}}},
                    {var,{930,52},'_'}],
                   [],
                   [{debug_line,931,376},
                    {call,{931,5},
                          {atom,{931,5},eval_append},
                          [{var,{931,17},'Call'},
                           {var,{931,23},'Arg1'},
                           {var,{931,29},'Arg2'}]}]},
           {clause,{932,1},
                   [{var,{932,19},'Call'},
                    {atom,{932,25},lists},
                    {atom,{932,32},append},
                    {cons,{932,40},
                          {var,{932,41},'Arg1'},
                          {cons,{932,46},
                                {var,{932,46},'Arg2'},
                                {nil,{932,50}}}},
                    {var,{932,53},'_'}],
                   [],
                   [{debug_line,933,377},
                    {call,{933,5},
                          {atom,{933,5},eval_append},
                          [{var,{933,17},'Call'},
                           {var,{933,23},'Arg1'},
                           {var,{933,29},'Arg2'}]}]},
           {clause,{934,1},
                   [{var,{934,19},'Call'},
                    {var,{934,25},'_'},
                    {var,{934,28},'_'},
                    {var,{934,31},'_'},
                    {var,{934,34},'_'}],
                   [],
                   [{debug_line,934,378},{var,{934,40},'Call'}]}]}.
{function,{940,1},
          eval_length,2,
          [{clause,{940,1},
                   [{var,{940,1},'_'},{var,{940,1},'_'}],
                   [[{call,{940,1},
                           {remote,{940,1},
                                   {atom,{940,1},fake},
                                   {atom,{940,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,940,379},{atom,{940,1},ignore}]},
           {clause,{940,1},
                   [{var,{940,13},'Call'},{var,{940,19},'Core'}],
                   [],
                   [{debug_line,940,380},
                    {call,{940,28},
                          {atom,{940,28},eval_length},
                          [{var,{940,40},'Call'},
                           {var,{940,46},'Core'},
                           {integer,{940,52},0}]}]}]}.
{function,
 {942,1},
 eval_length,3,
 [{clause,
   {942,1},
   [{var,{942,1},'_'},{var,{942,1},'_'},{var,{942,1},'_'}],
   [[{call,
      {942,1},
      {remote,{942,1},{atom,{942,1},fake},{atom,{942,1},is_beam_bif_info}},
      []}]],
   [{debug_line,942,381},{atom,{942,1},ignore}]},
  {clause,
   {942,1},
   [{var,{942,13},'Call'},
    {tuple,
     {942,19},
     [{atom,{942,19},c_literal},{var,{942,19},'_'},{var,{942,34},'Val'}]},
    {var,{942,40},'Len0'}],
   [],
   [{debug_line,943,382},
    {'try',
     {943,5},
     [{debug_line,944,383},
      {match,
       {944,2},
       {var,{944,2},'Len'},
       {op,
        {944,13},
        '+',
        {var,{944,8},'Len0'},
        {call,
         {944,15},
         {remote,{944,15},{atom,{944,15},erlang},{atom,{944,15},length}},
         [{var,{944,22},'Val'}]}}},
      {debug_line,945,384},
      {tuple,
       {945,2},
       [{atom,{945,2},c_literal},
        {'case',
         {945,18},
         {var,{945,18},'Call'},
         [{clause,
           [{generated,true},{location,{945,18}}],
           [{tuple,
             [{generated,true},{location,{945,18}}],
             [{atom,{945,18},c_call},
              {var,{945,18},rec25},
              {var,{945,18},'_'},
              {var,{945,18},'_'},
              {var,{945,18},'_'}]}],
           [],
           [{var,{945,18},rec25}]},
          {clause,
           [{generated,true},{location,{945,18}}],
           [{var,{945,18},rec25}],
           [],
           [{call,
             [{generated,true},{location,{945,18}}],
             {remote,
              [{generated,true},{location,{945,18}}],
              {atom,[{generated,true},{location,{945,18}}],erlang},
              {atom,[{generated,true},{location,{945,18}}],error}},
             [{tuple,
               [{generated,true},{location,{945,18}}],
               [{atom,[{generated,true},{location,{945,18}}],badrecord},
                {var,{945,18},rec25}]}]}]}]},
        {var,{945,39},'Len'}]}],
     [],
     [{clause,
       {947,2},
       [{tuple,
         {947,2},
         [{var,{947,2},'_'},{var,{947,4},'_'},{var,{947,4},'_'}]}],
       [],
       [{debug_line,948,385},
        {call,
         {948,6},
         {atom,{948,6},eval_failure},
         [{var,{948,19},'Call'},{atom,{948,25},badarg}]}]}],
     []}]},
  {clause,
   {950,1},
   [{var,{950,13},'Call'},
    {tuple,
     {950,19},
     [{atom,{950,19},c_cons},
      {var,{950,19},'_'},
      {var,{950,19},'_'},
      {var,{950,30},'T'}]},
    {var,{950,34},'Len'}],
   [],
   [{debug_line,951,386},
    {call,
     {951,5},
     {atom,{951,5},eval_length},
     [{var,{951,17},'Call'},
      {var,{951,23},'T'},
      {block,0,
       [{op,{951,29},'+',{var,{951,26},'Len'},{integer,{951,30},1}}]}]}]},
  {clause,
   {952,1},
   [{var,{952,13},'Call'},{var,{952,19},'_List'},{integer,{952,26},0}],
   [],
   [{debug_line,953,387},{var,{953,5},'Call'}]},
  {clause,
   {954,1},
   [{var,{954,13},'Call'},{var,{954,19},'List'},{var,{954,25},'Len'}],
   [],
   [{debug_line,955,388},
    {match,
     {955,5},
     {var,{955,5},'A'},
     {'case',
      {955,9},
      {var,{955,9},'Call'},
      [{clause,
        [{generated,true},{location,{955,9}}],
        [{tuple,
          [{generated,true},{location,{955,9}}],
          [{atom,{955,9},c_call},
           {var,{955,9},rec26},
           {var,{955,9},'_'},
           {var,{955,9},'_'},
           {var,{955,9},'_'}]}],
        [],
        [{var,{955,9},rec26}]},
       {clause,
        [{generated,true},{location,{955,9}}],
        [{var,{955,9},rec26}],
        [],
        [{call,
          [{generated,true},{location,{955,9}}],
          {remote,
           [{generated,true},{location,{955,9}}],
           {atom,[{generated,true},{location,{955,9}}],erlang},
           {atom,[{generated,true},{location,{955,9}}],error}},
          [{tuple,
            [{generated,true},{location,{955,9}}],
            [{atom,[{generated,true},{location,{955,9}}],badrecord},
             {var,{955,9},rec26}]}]}]}]}},
    {debug_line,956,389},
    {tuple,
     {956,5},
     [{atom,{956,5},c_call},
      {var,{956,18},'A'},
      {tuple,
       {957,13},
       [{atom,{957,13},c_literal},{var,{957,29},'A'},{atom,{957,35},erlang}]},
      {tuple,
       {958,11},
       [{atom,{958,11},c_literal},{var,{958,27},'A'},{atom,{958,33},'+'}]},
      {cons,
       {959,11},
       {tuple,
        {959,12},
        [{atom,{959,12},c_literal},{var,{959,28},'A'},{var,{959,34},'Len'}]},
       {cons,
        {959,39},
        {block,
         {959,39},
         [{match,
           {959,51},
           {var,{959,51},rec27},
           {cons,{959,56},{var,{959,57},'List'},{nil,{959,61}}}},
          {match,{959,39},{var,{959,39},rec28},{var,{959,39},'Call'}},
          {'case',
           {959,51},
           {var,{959,39},rec28},
           [{clause,
             {959,51},
             [{tuple,
               {959,51},
               [{atom,{959,51},c_call},
                {var,{959,51},'_'},
                {var,{959,51},'_'},
                {var,{959,51},'_'},
                {var,{959,51},'_'}]}],
             [],
             [{call,
               {959,51},
               {remote,
                {959,51},
                {atom,{959,51},erlang},
                {atom,{959,51},setelement}},
               [{integer,{959,51},5},
                {var,{959,39},rec28},
                {var,{959,51},rec27}]}]},
            {clause,
             [{generated,true},{location,{959,51}}],
             [{var,[{generated,true},{location,{959,51}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{959,51}}],
               {remote,
                [{generated,true},{location,{959,51}}],
                {atom,[{generated,true},{location,{959,51}}],erlang},
                {atom,[{generated,true},{location,{959,51}}],error}},
               [{tuple,
                 [{generated,true},{location,{959,51}}],
                 [{atom,[{generated,true},{location,{959,51}}],badrecord},
                  {var,{959,39},rec28}]}]}]}]}]},
        {nil,{959,63}}}}]}]}]}.
{function,
 {964,1},
 eval_append,3,
 [{clause,
   {964,1},
   [{var,{964,1},'_'},{var,{964,1},'_'},{var,{964,1},'_'}],
   [[{call,
      {964,1},
      {remote,{964,1},{atom,{964,1},fake},{atom,{964,1},is_beam_bif_info}},
      []}]],
   [{debug_line,964,390},{atom,{964,1},ignore}]},
  {clause,
   {964,1},
   [{var,{964,13},'Call'},
    {match,
     {964,19},
     {tuple,
      {964,19},
      [{atom,{964,19},c_literal},{var,{964,19},'_'},{var,{964,34},'Cs1'}]},
     {var,{964,39},'S1'}},
    {tuple,
     {964,43},
     [{atom,{964,43},c_literal},{var,{964,43},'_'},{var,{964,58},'Cs2'}]}],
   [],
   [{debug_line,965,391},
    {'try',
     {965,5},
     [{debug_line,966,392},
      {block,
       {966,2},
       [{match,
         {966,15},
         {var,{966,15},rec29},
         {op,{966,23},'++',{var,{966,19},'Cs1'},{var,{966,26},'Cs2'}}},
        {match,{966,2},{var,{966,2},rec30},{var,{966,2},'S1'}},
        {'case',
         {966,15},
         {var,{966,2},rec30},
         [{clause,
           {966,15},
           [{tuple,
             {966,15},
             [{atom,{966,15},c_literal},
              {var,{966,15},'_'},
              {var,{966,15},'_'}]}],
           [],
           [{call,
             {966,15},
             {remote,
              {966,15},
              {atom,{966,15},erlang},
              {atom,{966,15},setelement}},
             [{integer,{966,15},3},
              {var,{966,2},rec30},
              {var,{966,15},rec29}]}]},
          {clause,
           [{generated,true},{location,{966,15}}],
           [{var,[{generated,true},{location,{966,15}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{966,15}}],
             {remote,
              [{generated,true},{location,{966,15}}],
              {atom,[{generated,true},{location,{966,15}}],erlang},
              {atom,[{generated,true},{location,{966,15}}],error}},
             [{tuple,
               [{generated,true},{location,{966,15}}],
               [{atom,[{generated,true},{location,{966,15}}],badrecord},
                {var,{966,2},rec30}]}]}]}]}]}],
     [],
     [{clause,
       {967,11},
       [{tuple,
         {967,11},
         [{atom,{967,11},error},{atom,{967,17},badarg},{var,{967,17},'_'}]}],
       [],
       [{debug_line,968,393},
        {call,
         {968,6},
         {atom,{968,6},eval_failure},
         [{var,{968,19},'Call'},{atom,{968,25},badarg}]}]}],
     []}]},
  {clause,
   {970,1},
   [{var,{970,13},'Call'},
    {tuple,
     {970,19},
     [{atom,{970,19},c_literal},{var,{970,19},'_'},{var,{970,34},'Cs'}]},
    {var,{970,39},'List'}],
   [[{op,
      {970,61},
      '=<',
      {call,
       {970,50},
       {remote,{970,50},{atom,{970,50},erlang},{atom,{970,50},length}},
       [{var,{970,57},'Cs'}]},
      {integer,{970,64},4}}]],
   [{debug_line,971,394},
    {match,
     {971,5},
     {var,{971,5},'Anno'},
     {'case',
      {971,12},
      {var,{971,12},'Call'},
      [{clause,
        [{generated,true},{location,{971,12}}],
        [{tuple,
          [{generated,true},{location,{971,12}}],
          [{atom,{971,12},c_call},
           {var,{971,12},rec31},
           {var,{971,12},'_'},
           {var,{971,12},'_'},
           {var,{971,12},'_'}]}],
        [],
        [{var,{971,12},rec31}]},
       {clause,
        [{generated,true},{location,{971,12}}],
        [{var,{971,12},rec31}],
        [],
        [{call,
          [{generated,true},{location,{971,12}}],
          {remote,
           [{generated,true},{location,{971,12}}],
           {atom,[{generated,true},{location,{971,12}}],erlang},
           {atom,[{generated,true},{location,{971,12}}],error}},
          [{tuple,
            [{generated,true},{location,{971,12}}],
            [{atom,[{generated,true},{location,{971,12}}],badrecord},
             {var,{971,12},rec31}]}]}]}]}},
    {debug_line,972,395},
    {call,
     {972,5},
     {remote,{972,5},{atom,{972,5},lists},{atom,{972,5},foldr}},
     [{block,0,
       [{'fun',
         {972,11},
         {clauses,
          [{clause,
            {972,15},
            [{var,{972,16},'C'},{var,{972,19},'L'}],
            [],
            [{debug_line,973,396},
             {call,
              {973,5},
              {remote,{973,5},{atom,{973,5},cerl},{atom,{973,5},ann_c_cons}},
              [{var,{973,16},'Anno'},
               {block,0,
                [{tuple,
                  {973,22},
                  [{atom,{973,22},c_literal},
                   {nil,{973,22}},
                   {var,{973,37},'C'}]}]},
               {var,{973,41},'L'}]}]}]}}]},
      {var,{974,9},'List'},
      {var,{974,15},'Cs'}]}]},
  {clause,
   {975,1},
   [{var,{975,13},'Call'},
    {tuple,
     {975,19},
     [{atom,{975,19},c_cons},
      {var,{975,32},'Anno'},
      {var,{975,40},'H'},
      {var,{975,45},'T'}]},
    {var,{975,49},'List'}],
   [],
   [{debug_line,976,397},
    {call,
     {976,5},
     {remote,{976,5},{atom,{976,5},cerl},{atom,{976,5},ann_c_cons}},
     [{var,{976,16},'Anno'},
      {var,{976,22},'H'},
      {block,0,
       [{call,
         {976,25},
         {atom,{976,25},eval_append},
         [{var,{976,37},'Call'},
          {var,{976,43},'T'},
          {var,{976,46},'List'}]}]}]}]},
  {clause,
   {977,1},
   [{var,{977,13},'Call'},{var,{977,19},'X'},{var,{977,22},'Y'}],
   [],
   [{debug_line,978,398},
    {block,
     {978,5},
     [{match,
       {978,17},
       {var,{978,17},rec32},
       {cons,
        {978,22},
        {var,{978,23},'X'},
        {cons,{978,25},{var,{978,25},'Y'},{nil,{978,26}}}}},
      {match,{978,5},{var,{978,5},rec33},{var,{978,5},'Call'}},
      {'case',
       {978,17},
       {var,{978,5},rec33},
       [{clause,
         {978,17},
         [{tuple,
           {978,17},
           [{atom,{978,17},c_call},
            {var,{978,17},'_'},
            {var,{978,17},'_'},
            {var,{978,17},'_'},
            {var,{978,17},'_'}]}],
         [],
         [{call,
           {978,17},
           {remote,{978,17},{atom,{978,17},erlang},{atom,{978,17},setelement}},
           [{integer,{978,17},5},{var,{978,5},rec33},{var,{978,17},rec32}]}]},
        {clause,
         [{generated,true},{location,{978,17}}],
         [{var,[{generated,true},{location,{978,17}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{978,17}}],
           {remote,
            [{generated,true},{location,{978,17}}],
            {atom,[{generated,true},{location,{978,17}}],erlang},
            {atom,[{generated,true},{location,{978,17}}],error}},
           [{tuple,
             [{generated,true},{location,{978,17}}],
             [{atom,[{generated,true},{location,{978,17}}],badrecord},
              {var,{978,5},rec33}]}]}]}]}]}]}]}.
{function,
    {983,1},
    eval_failure,2,
    [{clause,
         {983,1},
         [{var,{983,1},'_'},{var,{983,1},'_'}],
         [[{call,
               {983,1},
               {remote,
                   {983,1},
                   {atom,{983,1},fake},
                   {atom,{983,1},is_beam_bif_info}},
               []}]],
         [{debug_line,983,399},{atom,{983,1},ignore}]},
     {clause,
         {983,1},
         [{var,{983,14},'Call'},{var,{983,20},'Reason'}],
         [],
         [{debug_line,984,400},
          {match,
              {984,5},
              {var,{984,5},'Classified'},
              {call,
                  {984,18},
                  {atom,{984,18},classify_call},
                  [{var,{984,32},'Call'}]}},
          {debug_line,985,401},
          {call,
              {985,5},
              {atom,{985,5},add_warning},
              [{var,{985,17},'Call'},
               {block,0,
                   [{tuple,
                        {985,23},
                        [{atom,{985,24},failed},
                         {tuple,
                             {985,31},
                             [{atom,{985,32},eval_failure},
                              {var,{985,45},'Classified'},
                              {var,{985,56},'Reason'}]}]}]}]},
          {debug_line,986,402},
          {var,{986,5},'Call'}]}]}.
{function,
 {992,1},
 simplify_apply,4,
 [{clause,
   {992,1},
   [{var,{992,1},'_'},{var,{992,1},'_'},{var,{992,1},'_'},{var,{992,1},'_'}],
   [[{call,
      {992,1},
      {remote,{992,1},{atom,{992,1},fake},{atom,{992,1},is_beam_bif_info}},
      []}]],
   [{debug_line,992,403},{atom,{992,1},ignore}]},
  {clause,
   {992,1},
   [{var,{992,16},'Call'},
    {var,{992,22},'Mod'},
    {var,{992,27},'Func'},
    {var,{992,33},'Args0'}],
   [],
   [{debug_line,993,404},
    {'case',
     {993,5},
     {'case',
      {993,10},
      {call,{993,10},{atom,{993,10},is_atom_or_var},[{var,{993,25},'Mod'}]},
      [{clause,
        {993,10},
        [{atom,{993,10},true}],
        [],
        [{call,
          {993,38},
          {atom,{993,38},is_atom_or_var},
          [{var,{993,53},'Func'}]}]},
       {clause,{993,10},[{atom,{993,10},false}],[],[{atom,{993,10},false}]},
       {clause,
        [{generated,true},{location,{993,10}}],
        [{var,{993,10},cov1}],
        [],
        [{call,
          {993,10},
          {remote,{993,10},{atom,{993,10},erlang},{atom,{993,10},error}},
          [{block,0,
            [{tuple,
              {993,10},
              [{atom,{993,10},badarg},{var,{993,10},cov1}]}]}]}]}]},
     [{clause,
       {994,2},
       [{atom,{994,2},true}],
       [],
       [{debug_line,995,405},
        {'case',
         {995,13},
         {call,
          {995,18},
          {atom,{995,18},get_fixed_args},
          [{var,{995,33},'Args0'},{nil,{995,40}}]},
         [{clause,
           {996,17},
           [{atom,{996,17},error}],
           [],
           [{debug_line,997,406},{var,{997,21},'Call'}]},
          {clause,
           {998,17},
           [{tuple,{998,17},[{atom,{998,18},ok},{var,{998,21},'Args'}]}],
           [],
           [{debug_line,999,407},
            {block,
             {999,21},
             [{match,{999,21},{var,{999,21},rec34},{var,{999,21},'Call'}},
              {'case',
               {999,33},
               {var,{999,21},rec34},
               [{clause,
                 {999,33},
                 [{tuple,
                   {999,33},
                   [{atom,{999,33},c_call},
                    {var,{999,33},'_'},
                    {var,{999,33},'_'},
                    {var,{999,33},'_'},
                    {var,{999,33},'_'}]}],
                 [],
                 [{call,
                   {999,33},
                   {remote,
                    {999,33},
                    {atom,{999,33},erlang},
                    {atom,{999,33},setelement}},
                   [{integer,{999,33},3},
                    {call,
                     {999,44},
                     {remote,
                      {999,44},
                      {atom,{999,44},erlang},
                      {atom,{999,44},setelement}},
                     [{integer,{999,44},4},
                      {call,
                       {999,54},
                       {remote,
                        {999,54},
                        {atom,{999,54},erlang},
                        {atom,{999,54},setelement}},
                       [{integer,{999,54},5},
                        {var,{999,21},rec34},
                        {var,{999,59},'Args'}]},
                      {var,{999,49},'Func'}]},
                    {var,{999,40},'Mod'}]}]},
                {clause,
                 [{generated,true},{location,{999,33}}],
                 [{var,[{generated,true},{location,{999,33}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{999,33}}],
                   {remote,
                    [{generated,true},{location,{999,33}}],
                    {atom,[{generated,true},{location,{999,33}}],erlang},
                    {atom,[{generated,true},{location,{999,33}}],error}},
                   [{tuple,
                     [{generated,true},{location,{999,33}}],
                     [{atom,[{generated,true},{location,{999,33}}],badrecord},
                      {var,{999,21},rec34}]}]}]}]}]}]}]}]},
      {clause,
       {1001,2},
       [{atom,{1001,2},false}],
       [],
       [{debug_line,1002,408},{var,{1002,13},'Call'}]}]}]}]}.
{function,{1004,1},
          is_atom_or_var,1,
          [{clause,{1004,1},
                   [{var,{1004,1},'_'}],
                   [[{call,{1004,1},
                           {remote,{1004,1},
                                   {atom,{1004,1},fake},
                                   {atom,{1004,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1004,409},{atom,{1004,1},ignore}]},
           {clause,{1004,1},
                   [{tuple,{1004,16},
                           [{atom,{1004,16},c_literal},
                            {var,{1004,16},'_'},
                            {var,{1004,31},'Atom'}]}],
                   [[{call,{1004,43},
                           {remote,{1004,43},
                                   {atom,{1004,43},erlang},
                                   {atom,{1004,43},is_atom}},
                           [{var,{1004,51},'Atom'}]}]],
                   [{debug_line,1004,410},{atom,{1004,60},true}]},
           {clause,{1005,1},
                   [{tuple,{1005,16},
                           [{atom,{1005,16},c_var},
                            {var,{1005,16},'_'},
                            {var,{1005,16},'_'}]}],
                   [],
                   [{debug_line,1005,411},{atom,{1005,29},true}]},
           {clause,{1006,1},
                   [{var,{1006,16},'_'}],
                   [],
                   [{debug_line,1006,412},{atom,{1006,22},false}]}]}.
{function,
    {1008,1},
    simplify_fun_apply,3,
    [{clause,
         {1008,1},
         [{var,{1008,1},'_'},{var,{1008,1},'_'},{var,{1008,1},'_'}],
         [[{call,
               {1008,1},
               {remote,
                   {1008,1},
                   {atom,{1008,1},fake},
                   {atom,{1008,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1008,413},{atom,{1008,1},ignore}]},
     {clause,
         {1008,1},
         [{match,
              {1008,20},
              {tuple,
                  {1008,20},
                  [{atom,{1008,20},c_call},
                   {var,{1008,33},'Anno'},
                   {var,{1008,20},'_'},
                   {var,{1008,20},'_'},
                   {var,{1008,20},'_'}]},
              {var,{1008,39},'Call'}},
          {var,{1008,45},'Fun'},
          {var,{1008,50},'Args0'}],
         [],
         [{debug_line,1009,414},
          {'case',
              {1009,5},
              {call,
                  {1009,10},
                  {atom,{1009,10},get_fixed_args},
                  [{var,{1009,25},'Args0'},{nil,{1009,32}}]},
              [{clause,
                   {1010,9},
                   [{atom,{1010,9},error}],
                   [],
                   [{debug_line,1011,415},{var,{1011,13},'Call'}]},
               {clause,
                   {1012,9},
                   [{tuple,
                        {1012,9},
                        [{atom,{1012,10},ok},{var,{1012,13},'Args'}]}],
                   [],
                   [{debug_line,1013,416},
                    {tuple,
                        {1013,13},
                        [{atom,{1013,13},c_apply},
                         {var,{1013,27},'Anno'},
                         {var,{1013,35},'Fun'},
                         {var,{1013,44},'Args'}]}]}]}]}]}.
{function,
    {1016,1},
    get_fixed_args,2,
    [{clause,
         {1016,1},
         [{var,{1016,1},'_'},{var,{1016,1},'_'}],
         [[{call,
               {1016,1},
               {remote,
                   {1016,1},
                   {atom,{1016,1},fake},
                   {atom,{1016,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1016,417},{atom,{1016,1},ignore}]},
     {clause,
         {1016,1},
         [{tuple,
              {1016,16},
              [{atom,{1016,16},c_literal},
               {var,{1016,16},'_'},
               {var,{1016,31},'MoreArgs0'}]},
          {var,{1016,43},'Args'}],
         [[{op,{1017,26},
               '>=',
               {call,
                   {1017,8},
                   {remote,
                       {1017,8},
                       {atom,{1017,8},erlang},
                       {atom,{1017,8},length}},
                   [{var,{1017,15},'MoreArgs0'}]},
               {integer,{1017,29},0}}]],
         [{debug_line,1018,418},
          {match,
              {1018,5},
              {var,{1018,5},'MoreArgs'},
              {lc,{1018,16},
                  {block,0,
                      [{tuple,
                           {1018,17},
                           [{atom,{1018,17},c_literal},
                            {nil,{1018,17}},
                            {var,{1018,32},'Arg'}]}]},
                  [{block,0,[{atom,{1018,47},true}]},
                   {generate,
                       {1018,44},
                       {var,{1018,40},'Arg'},
                       {var,{1018,47},'MoreArgs0'}}]}},
          {debug_line,1019,419},
          {tuple,
              {1019,5},
              [{atom,{1019,6},ok},
               {call,
                   {1019,9},
                   {remote,
                       {1019,9},
                       {atom,{1019,9},lists},
                       {atom,{1019,9},reverse}},
                   [{var,{1019,17},'Args'},{var,{1019,23},'MoreArgs'}]}]}]},
     {clause,
         {1020,1},
         [{tuple,
              {1020,16},
              [{atom,{1020,16},c_cons},
               {var,{1020,16},'_'},
               {var,{1020,27},'Arg'},
               {var,{1020,34},'T'}]},
          {var,{1020,38},'Args'}],
         [],
         [{debug_line,1021,420},
          {call,
              {1021,5},
              {atom,{1021,5},get_fixed_args},
              [{var,{1021,20},'T'},
               {block,0,
                   [{cons,
                        {1021,23},
                        {var,{1021,24},'Arg'},
                        {var,{1021,28},'Args'}}]}]}]},
     {clause,
         {1022,1},
         [{var,{1022,16},'_'},{var,{1022,19},'_'}],
         [],
         [{debug_line,1022,421},{atom,{1022,25},error}]}]}.
{function,
 {1026,1},
 clause,4,
 [{clause,
   {1026,1},
   [{var,{1026,1},'_'},
    {var,{1026,1},'_'},
    {var,{1026,1},'_'},
    {var,{1026,1},'_'}],
   [[{call,
      {1026,1},
      {remote,{1026,1},{atom,{1026,1},fake},{atom,{1026,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1026,422},{atom,{1026,1},ignore}]},
  {clause,
   {1026,1},
   [{match,
     {1026,8},
     {tuple,
      {1026,8},
      [{atom,{1026,8},c_clause},
       {var,{1026,8},'_'},
       {var,{1026,23},'Ps0'},
       {var,{1026,8},'_'},
       {var,{1026,8},'_'}]},
     {var,{1026,28},'Cl'}},
    {var,{1026,32},'Cexpr'},
    {var,{1026,39},'Ctxt'},
    {var,{1026,45},'Sub0'}],
   [],
   [{debug_line,1027,423},
    {'try',
     {1027,5},
     [{call,
       {1027,9},
       {atom,{1027,9},pattern_list},
       [{var,{1027,22},'Ps0'},{var,{1027,27},'Sub0'}]}],
     [{clause,
       {1028,2},
       [{tuple,{1028,2},[{var,{1028,3},'Ps1'},{var,{1028,7},'Sub1'}]}],
       [],
       [{debug_line,1029,424},
        {call,
         {1029,6},
         {atom,{1029,6},clause_1},
         [{var,{1029,15},'Cl'},
          {var,{1029,19},'Ps1'},
          {var,{1029,24},'Cexpr'},
          {var,{1029,31},'Ctxt'},
          {var,{1029,37},'Sub1'}]}]}],
     [{clause,
       {1031,2},
       [{tuple,
         {1031,2},
         [{atom,{1031,2},throw},{atom,{1031,2},nomatch},{var,{1031,2},'_'}]}],
       [],
       [{debug_line,1032,425},
        {block,
         {1032,6},
         [{match,
           {1033,4},
           {var,{1033,4},rec35},
           {tuple,
            {1033,10},
            [{atom,{1033,10},c_literal},
             {nil,{1033,10}},
             {atom,{1033,25},false}]}},
          {match,{1032,6},{var,{1032,6},rec36},{var,{1032,6},'Cl'}},
          {'case',
           {1032,18},
           {var,{1032,6},rec36},
           [{clause,
             {1032,18},
             [{tuple,
               {1032,18},
               [{atom,{1032,18},c_clause},
                {var,{1032,18},'_'},
                {var,{1032,18},'_'},
                {var,{1032,18},'_'},
                {var,{1032,18},'_'}]}],
             [],
             [{call,
               {1032,18},
               {remote,
                {1032,18},
                {atom,{1032,18},erlang},
                {atom,{1032,18},setelement}},
               [{integer,{1032,18},2},
                {call,
                 {1033,4},
                 {remote,
                  {1033,4},
                  {atom,{1033,4},erlang},
                  {atom,{1033,4},setelement}},
                 [{integer,{1033,4},4},
                  {var,{1032,6},rec36},
                  {var,{1033,4},rec35}]},
                {cons,
                 {1032,23},
                 {atom,{1032,24},compiler_generated},
                 {nil,{1032,42}}}]}]},
            {clause,
             [{generated,true},{location,{1032,18}}],
             [{var,[{generated,true},{location,{1032,18}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1032,18}}],
               {remote,
                [{generated,true},{location,{1032,18}}],
                {atom,[{generated,true},{location,{1032,18}}],erlang},
                {atom,[{generated,true},{location,{1032,18}}],error}},
               [{tuple,
                 [{generated,true},{location,{1032,18}}],
                 [{atom,[{generated,true},{location,{1032,18}}],badrecord},
                  {var,{1032,6},rec36}]}]}]}]}]}]}],
     []}]}]}.
{function,
 {1036,1},
 clause_1,5,
 [{clause,
   {1036,1},
   [{var,{1036,1},'_'},
    {var,{1036,1},'_'},
    {var,{1036,1},'_'},
    {var,{1036,1},'_'},
    {var,{1036,1},'_'}],
   [[{call,
      {1036,1},
      {remote,{1036,1},{atom,{1036,1},fake},{atom,{1036,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1036,426},{atom,{1036,1},ignore}]},
  {clause,
   {1036,1},
   [{match,
     {1036,10},
     {tuple,
      {1036,10},
      [{atom,{1036,10},c_clause},
       {var,{1036,10},'_'},
       {var,{1036,10},'_'},
       {var,{1036,26},'G0'},
       {var,{1036,34},'B0'}]},
     {var,{1036,38},'Cl'}},
    {var,{1036,42},'Ps1'},
    {var,{1036,47},'Cexpr'},
    {var,{1036,54},'Ctxt'},
    {var,{1036,60},'Sub1'}],
   [],
   [{debug_line,1037,427},
    {match,
     {1037,5},
     {var,{1037,5},'GSub'},
     {'case',
      {1037,12},
      {tuple,
       {1037,17},
       [{var,{1037,18},'Cexpr'},{var,{1037,24},'Ps1'},{var,{1037,28},'G0'}]},
      [{clause,
        {1038,9},
        [{tuple,
          {1038,9},
          [{var,{1038,10},'_'},
           {var,{1038,12},'_'},
           {tuple,
            {1038,14},
            [{atom,{1038,14},c_literal},
             {var,{1038,14},'_'},
             {var,{1038,14},'_'}]}]}],
        [],
        [{debug_line,1041,428},{var,{1041,6},'Sub1'}]},
       {clause,
        {1042,9},
        [{tuple,
          {1042,9},
          [{tuple,
            {1042,10},
            [{atom,{1042,10},c_var},{var,{1042,10},'_'},{var,{1042,10},'_'}]},
           {cons,
            {1042,19},
            {match,
             {1042,20},
             {tuple,
              {1042,20},
              [{atom,{1042,20},c_var},
               {var,{1042,20},'_'},
               {var,{1042,20},'_'}]},
             {var,{1042,29},'Var'}},
            {nil,{1042,32}}},
           {var,{1042,34},'_'}]}],
        [],
        [{debug_line,1061,429},
         {'case',
          {1061,6},
          {call,
           {1061,11},
           {remote,
            {1061,15},
            {atom,{1061,11},cerl},
            {atom,{1061,16},is_c_fname}},
           [{var,{1061,27},'Cexpr'}]},
          [{clause,
            {1062,10},
            [{atom,{1062,10},false}],
            [],
            [{debug_line,1063,430},
             {call,
              {1063,7},
              {atom,{1063,7},sub_set_var},
              [{var,{1063,19},'Var'},
               {var,{1063,24},'Cexpr'},
               {var,{1063,31},'Sub1'}]}]},
           {clause,
            {1064,10},
            [{atom,{1064,10},true}],
            [],
            [{debug_line,1066,431},{var,{1066,7},'Sub1'}]}]}]},
       {clause,
        {1068,9},
        [{var,{1068,9},'_'}],
        [],
        [{debug_line,1069,432},{var,{1069,6},'Sub1'}]}]}},
    {debug_line,1071,433},
    {match,
     {1071,5},
     {var,{1071,5},'G1'},
     {call,
      {1071,10},
      {atom,{1071,10},guard},
      [{var,{1071,16},'G0'},{var,{1071,20},'GSub'}]}},
    {debug_line,1072,434},
    {match,
     {1072,5},
     {var,{1072,5},'B1'},
     {call,
      {1072,10},
      {atom,{1072,10},body},
      [{var,{1072,15},'B0'},{var,{1072,19},'Ctxt'},{var,{1072,25},'Sub1'}]}},
    {debug_line,1073,435},
    {block,
     {1073,5},
     [{match,{1073,5},{var,{1073,5},rec37},{var,{1073,5},'Cl'}},
      {'case',
       {1073,17},
       {var,{1073,5},rec37},
       [{clause,
         {1073,17},
         [{tuple,
           {1073,17},
           [{atom,{1073,17},c_clause},
            {var,{1073,17},'_'},
            {var,{1073,17},'_'},
            {var,{1073,17},'_'},
            {var,{1073,17},'_'}]}],
         [],
         [{call,
           {1073,17},
           {remote,
            {1073,17},
            {atom,{1073,17},erlang},
            {atom,{1073,17},setelement}},
           [{integer,{1073,17},3},
            {call,
             {1073,26},
             {remote,
              {1073,26},
              {atom,{1073,26},erlang},
              {atom,{1073,26},setelement}},
             [{integer,{1073,26},4},
              {call,
               {1073,35},
               {remote,
                {1073,35},
                {atom,{1073,35},erlang},
                {atom,{1073,35},setelement}},
               [{integer,{1073,35},5},
                {var,{1073,5},rec37},
                {var,{1073,40},'B1'}]},
              {var,{1073,32},'G1'}]},
            {var,{1073,22},'Ps1'}]}]},
        {clause,
         [{generated,true},{location,{1073,17}}],
         [{var,[{generated,true},{location,{1073,17}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1073,17}}],
           {remote,
            [{generated,true},{location,{1073,17}}],
            {atom,[{generated,true},{location,{1073,17}}],erlang},
            {atom,[{generated,true},{location,{1073,17}}],error}},
           [{tuple,
             [{generated,true},{location,{1073,17}}],
             [{atom,[{generated,true},{location,{1073,17}}],badrecord},
              {var,{1073,5},rec37}]}]}]}]}]}]}]}.
{function,
 {1081,1},
 let_substs,3,
 [{clause,
   {1081,1},
   [{var,{1081,1},'_'},{var,{1081,1},'_'},{var,{1081,1},'_'}],
   [[{call,
      {1081,1},
      {remote,{1081,1},{atom,{1081,1},fake},{atom,{1081,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1081,436},{atom,{1081,1},ignore}]},
  {clause,
   {1081,1},
   [{var,{1081,12},'Vs0'},{var,{1081,17},'As0'},{var,{1081,22},'Sub0'}],
   [],
   [{debug_line,1082,437},
    {match,
     {1082,5},
     {tuple,{1082,5},[{var,{1082,6},'Vs1'},{var,{1082,10},'Sub1'}]},
     {call,
      {1082,18},
      {atom,{1082,18},var_list},
      [{var,{1082,27},'Vs0'},{var,{1082,32},'Sub0'}]}},
    {debug_line,1083,438},
    {match,
     {1083,5},
     {tuple,
      {1083,5},
      [{var,{1083,6},'Vs2'},{var,{1083,10},'As1'},{var,{1083,14},'Ss'}]},
     {call,
      {1083,20},
      {atom,{1083,20},let_substs_1},
      [{var,{1083,33},'Vs1'},{var,{1083,38},'As0'},{var,{1083,43},'Sub1'}]}},
    {debug_line,1084,439},
    {match,
     {1084,5},
     {var,{1084,5},'Sub2'},
     {call,
      {1084,12},
      {atom,{1084,12},sub_add_scope},
      [{block,0,
        [{lc,
          {1084,26},
          {block,0,[{var,{1084,27},'V'}]},
          [{block,0,[{atom,{1084,51},true}]},
           {generate_strict,
            {1084,47},
            {tuple,
             {1084,32},
             [{atom,{1084,32},c_var},{var,{1084,32},'_'},{var,{1084,44},'V'}]},
            {var,{1084,51},'Vs2'}}]}]},
       {var,{1084,57},'Sub1'}]}},
    {debug_line,1085,440},
    {tuple,
     {1085,5},
     [{var,{1085,6},'Vs2'},
      {var,{1085,10},'As1'},
      {call,
       {1086,5},
       {remote,{1086,5},{atom,{1086,5},lists},{atom,{1086,5},foldl}},
       [{block,0,
         [{debug_line,1086,441},
          {'fun',
           {1086,11},
           {clauses,
            [{clause,
              {1086,15},
              [{tuple,{1086,16},[{var,{1086,17},'V'},{var,{1086,19},'S'}]},
               {var,{1086,23},'Sub'}],
              [],
              [{call,
                {1086,31},
                {atom,{1086,31},sub_set_name},
                [{var,{1086,44},'V'},
                 {var,{1086,47},'S'},
                 {var,{1086,50},'Sub'}]}]}]}}]},
        {var,{1086,60},'Sub2'},
        {var,{1086,66},'Ss'}]}]}]}]}.
{function,
    {1088,1},
    let_substs_1,3,
    [{clause,
         {1088,1},
         [{var,{1088,1},'_'},{var,{1088,1},'_'},{var,{1088,1},'_'}],
         [[{call,
               {1088,1},
               {remote,
                   {1088,1},
                   {atom,{1088,1},fake},
                   {atom,{1088,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1088,442},{atom,{1088,1},ignore}]},
     {clause,
         {1088,1},
         [{var,{1088,14},'Vs'},
          {tuple,
              {1088,18},
              [{atom,{1088,18},c_values},
               {var,{1088,18},'_'},
               {var,{1088,31},'As'}]},
          {var,{1088,36},'Sub'}],
         [],
         [{debug_line,1089,443},
          {call,
              {1089,5},
              {atom,{1089,5},let_subst_list},
              [{var,{1089,20},'Vs'},
               {var,{1089,24},'As'},
               {var,{1089,28},'Sub'}]}]},
     {clause,
         {1090,1},
         [{cons,{1090,14},{var,{1090,15},'V'},{nil,{1090,16}}},
          {var,{1090,19},'A'},
          {var,{1090,22},'Sub'}],
         [],
         [{debug_line,1090,444},
          {call,
              {1090,30},
              {atom,{1090,30},let_subst_list},
              [{block,0,
                   [{cons,{1090,45},{var,{1090,46},'V'},{nil,{1090,47}}}]},
               {block,0,
                   [{cons,{1090,50},{var,{1090,51},'A'},{nil,{1090,52}}}]},
               {var,{1090,55},'Sub'}]}]},
     {clause,
         {1091,1},
         [{var,{1091,14},'Vs'},{var,{1091,18},'A'},{var,{1091,21},'_'}],
         [],
         [{debug_line,1091,445},
          {tuple,
              {1091,27},
              [{var,{1091,28},'Vs'},{var,{1091,31},'A'},{nil,{1091,33}}]}]}]}.
{function,
    {1093,1},
    let_subst_list,3,
    [{clause,
         {1093,1},
         [{var,{1093,1},'_'},{var,{1093,1},'_'},{var,{1093,1},'_'}],
         [[{call,
               {1093,1},
               {remote,
                   {1093,1},
                   {atom,{1093,1},fake},
                   {atom,{1093,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1093,446},{atom,{1093,1},ignore}]},
     {clause,
         {1093,1},
         [{cons,{1093,16},{var,{1093,17},'V'},{var,{1093,19},'Vs0'}},
          {cons,{1093,25},{var,{1093,26},'A'},{var,{1093,28},'As0'}},
          {var,{1093,34},'Sub'}],
         [],
         [{debug_line,1094,447},
          {match,
              {1094,5},
              {tuple,
                  {1094,5},
                  [{var,{1094,6},'Vs1'},
                   {var,{1094,10},'As1'},
                   {var,{1094,14},'Ss'}]},
              {call,
                  {1094,20},
                  {atom,{1094,20},let_subst_list},
                  [{var,{1094,35},'Vs0'},
                   {var,{1094,40},'As0'},
                   {var,{1094,45},'Sub'}]}},
          {debug_line,1095,448},
          {'case',
              {1095,5},
              {call,{1095,10},{atom,{1095,10},is_subst},[{var,{1095,19},'A'}]},
              [{clause,
                   {1096,2},
                   [{atom,{1096,2},true}],
                   [],
                   [{debug_line,1097,449},
                    {tuple,
                        {1097,6},
                        [{var,{1097,7},'Vs1'},
                         {var,{1097,11},'As1'},
                         {op,{1097,40},
                             '++',
                             {call,
                                 {1097,15},
                                 {atom,{1097,15},sub_subst_var},
                                 [{var,{1097,29},'V'},
                                  {var,{1097,32},'A'},
                                  {var,{1097,35},'Sub'}]},
                             {var,{1097,43},'Ss'}}]}]},
               {clause,
                   {1098,2},
                   [{atom,{1098,2},false}],
                   [],
                   [{debug_line,1099,450},
                    {tuple,
                        {1099,6},
                        [{cons,
                             {1099,7},
                             {var,{1099,8},'V'},
                             {var,{1099,10},'Vs1'}},
                         {cons,
                             {1099,15},
                             {var,{1099,16},'A'},
                             {var,{1099,18},'As1'}},
                         {var,{1099,23},'Ss'}]}]}]}]},
     {clause,
         {1101,1},
         [{nil,{1101,16}},{nil,{1101,20}},{var,{1101,24},'_'}],
         [],
         [{debug_line,1101,451},
          {tuple,
              {1101,30},
              [{nil,{1101,31}},{nil,{1101,34}},{nil,{1101,37}}]}]}]}.
{function,
 {1116,1},
 pattern,3,
 [{clause,
   {1116,1},
   [{var,{1116,1},'_'},{var,{1116,1},'_'},{var,{1116,1},'_'}],
   [[{call,
      {1116,1},
      {remote,{1116,1},{atom,{1116,1},fake},{atom,{1116,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1116,452},{atom,{1116,1},ignore}]},
  {clause,
   {1116,1},
   [{match,
     {1116,9},
     {tuple,
      {1116,9},
      [{atom,{1116,9},c_var},{var,{1116,9},'_'},{var,{1116,9},'_'}]},
     {var,{1116,18},'Pat'}},
    {var,{1116,23},'Isub'},
    {var,{1116,29},'Osub'}],
   [],
   [{debug_line,1117,453},
    {'case',
     {1117,5},
     {call,
      {1117,10},
      {atom,{1117,10},sub_is_in_scope},
      [{var,{1117,26},'Pat'},{var,{1117,31},'Isub'}]},
     [{clause,
       {1118,2},
       [{atom,{1118,2},true}],
       [],
       [{debug_line,1123,454},
        {match,
         {1123,6},
         {var,{1123,6},'V1'},
         {call,{1123,11},{atom,{1123,11},make_var_name},[]}},
        {debug_line,1124,455},
        {match,
         {1124,6},
         {var,{1124,6},'Pat1'},
         {tuple,
          {1124,13},
          [{atom,{1124,13},c_var},{nil,{1124,13}},{var,{1124,25},'V1'}]}},
        {debug_line,1125,456},
        {tuple,
         {1125,6},
         [{var,{1125,7},'Pat1'},
          {call,
           {1125,12},
           {atom,{1125,12},sub_set_var},
           [{var,{1125,24},'Pat'},
            {var,{1125,29},'Pat1'},
            {block,0,
             [{call,
               {1125,35},
               {atom,{1125,35},sub_add_scope},
               [{block,0,
                 [{cons,{1125,49},{var,{1125,50},'V1'},{nil,{1125,52}}}]},
                {var,{1125,55},'Osub'}]}]}]}]}]},
      {clause,
       {1126,2},
       [{atom,{1126,2},false}],
       [],
       [{debug_line,1128,457},
        {tuple,
         {1128,6},
         [{var,{1128,7},'Pat'},
          {call,
           {1128,11},
           {atom,{1128,11},sub_add_scope},
           [{block,0,
             [{cons,
               {1128,25},
               {'case',
                {1128,26},
                {var,{1128,26},'Pat'},
                [{clause,
                  [{generated,true},{location,{1128,26}}],
                  [{tuple,
                    [{generated,true},{location,{1128,26}}],
                    [{atom,{1128,26},c_var},
                     {var,{1128,26},'_'},
                     {var,{1128,26},rec38}]}],
                  [],
                  [{var,{1128,26},rec38}]},
                 {clause,
                  [{generated,true},{location,{1128,26}}],
                  [{var,{1128,26},rec38}],
                  [],
                  [{call,
                    [{generated,true},{location,{1128,26}}],
                    {remote,
                     [{generated,true},{location,{1128,26}}],
                     {atom,[{generated,true},{location,{1128,26}}],erlang},
                     {atom,[{generated,true},{location,{1128,26}}],error}},
                    [{tuple,
                      [{generated,true},{location,{1128,26}}],
                      [{atom,
                        [{generated,true},{location,{1128,26}}],
                        badrecord},
                       {var,{1128,26},rec38}]}]}]}]},
               {nil,{1128,40}}}]},
            {var,{1128,43},'Osub'}]}]}]}]}]},
  {clause,
   {1130,1},
   [{match,
     {1130,9},
     {tuple,
      {1130,9},
      [{atom,{1130,9},c_literal},{var,{1130,9},'_'},{var,{1130,9},'_'}]},
     {var,{1130,22},'Pat'}},
    {var,{1130,27},'_'},
    {var,{1130,30},'Osub'}],
   [],
   [{debug_line,1130,458},
    {tuple,{1130,39},[{var,{1130,40},'Pat'},{var,{1130,44},'Osub'}]}]},
  {clause,
   {1131,1},
   [{tuple,
     {1131,9},
     [{atom,{1131,9},c_cons},
      {var,{1131,22},'Anno'},
      {var,{1131,30},'H0'},
      {var,{1131,36},'T0'}]},
    {var,{1131,41},'Isub'},
    {var,{1131,47},'Osub0'}],
   [],
   [{debug_line,1132,459},
    {match,
     {1132,5},
     {tuple,{1132,5},[{var,{1132,6},'H1'},{var,{1132,9},'Osub1'}]},
     {call,
      {1132,18},
      {atom,{1132,18},pattern},
      [{var,{1132,26},'H0'},{var,{1132,30},'Isub'},{var,{1132,36},'Osub0'}]}},
    {debug_line,1133,460},
    {match,
     {1133,5},
     {tuple,{1133,5},[{var,{1133,6},'T1'},{var,{1133,9},'Osub2'}]},
     {call,
      {1133,18},
      {atom,{1133,18},pattern},
      [{var,{1133,26},'T0'},{var,{1133,30},'Isub'},{var,{1133,36},'Osub1'}]}},
    {debug_line,1134,461},
    {tuple,
     {1134,5},
     [{call,
       {1134,6},
       {remote,{1134,6},{atom,{1134,6},cerl},{atom,{1134,6},ann_c_cons}},
       [{var,{1134,17},'Anno'},{var,{1134,23},'H1'},{var,{1134,27},'T1'}]},
      {var,{1134,31},'Osub2'}]}]},
  {clause,
   {1135,1},
   [{tuple,
     {1135,9},
     [{atom,{1135,9},c_tuple},{var,{1135,23},'Anno'},{var,{1135,31},'Es0'}]},
    {var,{1135,37},'Isub'},
    {var,{1135,43},'Osub0'}],
   [],
   [{debug_line,1136,462},
    {match,
     {1136,5},
     {tuple,{1136,5},[{var,{1136,6},'Es1'},{var,{1136,10},'Osub1'}]},
     {call,
      {1136,19},
      {atom,{1136,19},pattern_list},
      [{var,{1136,32},'Es0'},{var,{1136,37},'Isub'},{var,{1136,43},'Osub0'}]}},
    {debug_line,1137,463},
    {tuple,
     {1137,5},
     [{call,
       {1137,6},
       {remote,{1137,6},{atom,{1137,6},cerl},{atom,{1137,6},ann_c_tuple}},
       [{var,{1137,18},'Anno'},{var,{1137,24},'Es1'}]},
      {var,{1137,29},'Osub1'}]}]},
  {clause,
   {1138,1},
   [{match,
     {1138,9},
     {tuple,
      {1138,9},
      [{atom,{1138,9},c_map},
       {var,{1138,21},'Anno'},
       {var,{1138,9},'_'},
       {var,{1138,29},'Es0'},
       {var,{1138,9},'_'}]},
     {var,{1138,34},'Map'}},
    {var,{1138,39},'Isub'},
    {var,{1138,45},'Osub0'}],
   [],
   [{debug_line,1139,464},
    {match,
     {1139,5},
     {tuple,{1139,5},[{var,{1139,6},'Es1'},{var,{1139,10},'Osub1'}]},
     {call,
      {1139,19},
      {atom,{1139,19},map_pair_pattern_list},
      [{var,{1139,41},'Es0'},{var,{1139,46},'Isub'},{var,{1139,52},'Osub0'}]}},
    {debug_line,1140,465},
    {tuple,
     {1140,5},
     [{block,
       {1140,6},
       [{match,{1140,6},{var,{1140,6},rec39},{var,{1140,6},'Map'}},
        {'case',
         {1140,16},
         {var,{1140,6},rec39},
         [{clause,
           {1140,16},
           [{tuple,
             {1140,16},
             [{atom,{1140,16},c_map},
              {var,{1140,16},'_'},
              {var,{1140,16},'_'},
              {var,{1140,16},'_'},
              {var,{1140,16},'_'}]}],
           [],
           [{call,
             {1140,16},
             {remote,
              {1140,16},
              {atom,{1140,16},erlang},
              {atom,{1140,16},setelement}},
             [{integer,{1140,16},2},
              {call,
               {1140,26},
               {remote,
                {1140,26},
                {atom,{1140,26},erlang},
                {atom,{1140,26},setelement}},
               [{integer,{1140,26},4},
                {var,{1140,6},rec39},
                {var,{1140,29},'Es1'}]},
              {var,{1140,21},'Anno'}]}]},
          {clause,
           [{generated,true},{location,{1140,16}}],
           [{var,[{generated,true},{location,{1140,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1140,16}}],
             {remote,
              [{generated,true},{location,{1140,16}}],
              {atom,[{generated,true},{location,{1140,16}}],erlang},
              {atom,[{generated,true},{location,{1140,16}}],error}},
             [{tuple,
               [{generated,true},{location,{1140,16}}],
               [{atom,[{generated,true},{location,{1140,16}}],badrecord},
                {var,{1140,6},rec39}]}]}]}]}]},
      {var,{1140,34},'Osub1'}]}]},
  {clause,
   {1141,1},
   [{match,
     {1141,9},
     {tuple,
      {1141,9},
      [{atom,{1141,9},c_binary},{var,{1141,9},'_'},{var,{1141,28},'V0'}]},
     {var,{1141,32},'Pat'}},
    {var,{1141,37},'Isub'},
    {var,{1141,43},'Osub0'}],
   [],
   [{debug_line,1142,466},
    {match,
     {1142,5},
     {tuple,{1142,5},[{var,{1142,6},'V1'},{var,{1142,9},'Osub1'}]},
     {call,
      {1142,18},
      {atom,{1142,18},bin_pattern_list},
      [{var,{1142,35},'V0'},{var,{1142,39},'Isub'},{var,{1142,45},'Osub0'}]}},
    {debug_line,1143,467},
    {tuple,
     {1143,5},
     [{block,
       {1143,6},
       [{match,{1143,6},{var,{1143,6},rec40},{var,{1143,6},'Pat'}},
        {'case',
         {1143,19},
         {var,{1143,6},rec40},
         [{clause,
           {1143,19},
           [{tuple,
             {1143,19},
             [{atom,{1143,19},c_binary},
              {var,{1143,19},'_'},
              {var,{1143,19},'_'}]}],
           [],
           [{call,
             {1143,19},
             {remote,
              {1143,19},
              {atom,{1143,19},erlang},
              {atom,{1143,19},setelement}},
             [{integer,{1143,19},3},
              {var,{1143,6},rec40},
              {var,{1143,28},'V1'}]}]},
          {clause,
           [{generated,true},{location,{1143,19}}],
           [{var,[{generated,true},{location,{1143,19}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1143,19}}],
             {remote,
              [{generated,true},{location,{1143,19}}],
              {atom,[{generated,true},{location,{1143,19}}],erlang},
              {atom,[{generated,true},{location,{1143,19}}],error}},
             [{tuple,
               [{generated,true},{location,{1143,19}}],
               [{atom,[{generated,true},{location,{1143,19}}],badrecord},
                {var,{1143,6},rec40}]}]}]}]}]},
      {var,{1143,32},'Osub1'}]}]},
  {clause,
   {1144,1},
   [{match,
     {1144,9},
     {tuple,
      {1144,9},
      [{atom,{1144,9},c_alias},
       {var,{1144,9},'_'},
       {var,{1144,22},'V0'},
       {var,{1144,29},'P0'}]},
     {var,{1144,33},'Pat'}},
    {var,{1144,38},'Isub'},
    {var,{1144,44},'Osub0'}],
   [],
   [{debug_line,1145,468},
    {match,
     {1145,5},
     {tuple,{1145,5},[{var,{1145,6},'V1'},{var,{1145,9},'Osub1'}]},
     {call,
      {1145,18},
      {atom,{1145,18},pattern},
      [{var,{1145,26},'V0'},{var,{1145,30},'Isub'},{var,{1145,36},'Osub0'}]}},
    {debug_line,1146,469},
    {match,
     {1146,5},
     {tuple,{1146,5},[{var,{1146,6},'P1'},{var,{1146,9},'Osub'}]},
     {call,
      {1146,17},
      {atom,{1146,17},pattern},
      [{var,{1146,25},'P0'},{var,{1146,29},'Isub'},{var,{1146,35},'Osub1'}]}},
    {debug_line,1147,470},
    {tuple,
     {1147,5},
     [{block,
       {1147,6},
       [{match,{1147,6},{var,{1147,6},rec41},{var,{1147,6},'Pat'}},
        {'case',
         {1147,18},
         {var,{1147,6},rec41},
         [{clause,
           {1147,18},
           [{tuple,
             {1147,18},
             [{atom,{1147,18},c_alias},
              {var,{1147,18},'_'},
              {var,{1147,18},'_'},
              {var,{1147,18},'_'}]}],
           [],
           [{call,
             {1147,18},
             {remote,
              {1147,18},
              {atom,{1147,18},erlang},
              {atom,{1147,18},setelement}},
             [{integer,{1147,18},3},
              {call,
               {1147,25},
               {remote,
                {1147,25},
                {atom,{1147,25},erlang},
                {atom,{1147,25},setelement}},
               [{integer,{1147,25},4},
                {var,{1147,6},rec41},
                {var,{1147,29},'P1'}]},
              {var,{1147,22},'V1'}]}]},
          {clause,
           [{generated,true},{location,{1147,18}}],
           [{var,[{generated,true},{location,{1147,18}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1147,18}}],
             {remote,
              [{generated,true},{location,{1147,18}}],
              {atom,[{generated,true},{location,{1147,18}}],erlang},
              {atom,[{generated,true},{location,{1147,18}}],error}},
             [{tuple,
               [{generated,true},{location,{1147,18}}],
               [{atom,[{generated,true},{location,{1147,18}}],badrecord},
                {var,{1147,6},rec41}]}]}]}]}]},
      {var,{1147,33},'Osub'}]}]}]}.
{function,
    {1149,1},
    map_pair_pattern_list,3,
    [{clause,
         {1149,1},
         [{var,{1149,1},'_'},{var,{1149,1},'_'},{var,{1149,1},'_'}],
         [[{call,
               {1149,1},
               {remote,
                   {1149,1},
                   {atom,{1149,1},fake},
                   {atom,{1149,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1149,471},{atom,{1149,1},ignore}]},
     {clause,
         {1149,1},
         [{var,{1149,23},'Ps0'},
          {var,{1149,28},'Isub'},
          {var,{1149,34},'Osub0'}],
         [],
         [{debug_line,1150,472},
          {match,
              {1150,5},
              {tuple,
                  {1150,5},
                  [{var,{1150,6},'Ps'},
                   {tuple,
                       {1150,9},
                       [{var,{1150,10},'_'},{var,{1150,12},'Osub'}]}]},
              {call,
                  {1150,21},
                  {remote,
                      {1150,21},
                      {atom,{1150,21},lists},
                      {atom,{1150,21},mapfoldl}},
                  [{block,0,[{'fun',{1150,30},{function,map_pair_pattern,2}}]},
                   {block,0,
                       [{tuple,
                            {1150,54},
                            [{var,{1150,55},'Isub'},
                             {var,{1150,60},'Osub0'}]}]},
                   {var,{1150,68},'Ps0'}]}},
          {debug_line,1151,473},
          {tuple,{1151,5},[{var,{1151,6},'Ps'},{var,{1151,9},'Osub'}]}]}]}.
{function,
 {1153,1},
 map_pair_pattern,2,
 [{clause,
   {1153,1},
   [{var,{1153,1},'_'},{var,{1153,1},'_'}],
   [[{call,
      {1153,1},
      {remote,{1153,1},{atom,{1153,1},fake},{atom,{1153,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1153,474},{atom,{1153,1},ignore}]},
  {clause,
   {1153,1},
   [{match,
     {1153,18},
     {tuple,
      {1153,18},
      [{atom,{1153,18},c_map_pair},
       {var,{1153,18},'_'},
       {tuple,
        {1153,33},
        [{atom,{1153,33},c_literal},
         {var,{1153,33},'_'},
         {atom,{1153,48},exact}]},
       {var,{1153,59},'K0'},
       {var,{1153,66},'V0'}]},
     {var,{1153,70},'Pair'}},
    {tuple,{1153,75},[{var,{1153,76},'Isub'},{var,{1153,81},'Osub0'}]}],
   [],
   [{debug_line,1154,475},
    {match,
     {1154,5},
     {var,{1154,5},'K'},
     {call,
      {1154,9},
      {atom,{1154,9},expr},
      [{var,{1154,14},'K0'},{var,{1154,18},'Isub'}]}},
    {debug_line,1155,476},
    {match,
     {1155,5},
     {tuple,{1155,5},[{var,{1155,6},'V'},{var,{1155,8},'Osub'}]},
     {call,
      {1155,16},
      {atom,{1155,16},pattern},
      [{var,{1155,24},'V0'},{var,{1155,27},'Isub'},{var,{1155,32},'Osub0'}]}},
    {debug_line,1156,477},
    {tuple,
     {1156,5},
     [{block,
       {1156,6},
       [{match,{1156,6},{var,{1156,6},rec42},{var,{1156,6},'Pair'}},
        {'case',
         {1156,22},
         {var,{1156,6},rec42},
         [{clause,
           {1156,22},
           [{tuple,
             {1156,22},
             [{atom,{1156,22},c_map_pair},
              {var,{1156,22},'_'},
              {var,{1156,22},'_'},
              {var,{1156,22},'_'},
              {var,{1156,22},'_'}]}],
           [],
           [{call,
             {1156,22},
             {remote,
              {1156,22},
              {atom,{1156,22},erlang},
              {atom,{1156,22},setelement}},
             [{integer,{1156,22},4},
              {call,
               {1156,28},
               {remote,
                {1156,28},
                {atom,{1156,28},erlang},
                {atom,{1156,28},setelement}},
               [{integer,{1156,28},5},
                {var,{1156,6},rec42},
                {var,{1156,32},'V'}]},
              {var,{1156,26},'K'}]}]},
          {clause,
           [{generated,true},{location,{1156,22}}],
           [{var,[{generated,true},{location,{1156,22}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1156,22}}],
             {remote,
              [{generated,true},{location,{1156,22}}],
              {atom,[{generated,true},{location,{1156,22}}],erlang},
              {atom,[{generated,true},{location,{1156,22}}],error}},
             [{tuple,
               [{generated,true},{location,{1156,22}}],
               [{atom,[{generated,true},{location,{1156,22}}],badrecord},
                {var,{1156,6},rec42}]}]}]}]}]},
      {tuple,{1156,35},[{var,{1156,36},'Isub'},{var,{1156,41},'Osub'}]}]}]}]}.
{function,
    {1158,1},
    bin_pattern_list,3,
    [{clause,
         {1158,1},
         [{var,{1158,1},'_'},{var,{1158,1},'_'},{var,{1158,1},'_'}],
         [[{call,
               {1158,1},
               {remote,
                   {1158,1},
                   {atom,{1158,1},fake},
                   {atom,{1158,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1158,478},{atom,{1158,1},ignore}]},
     {clause,
         {1158,1},
         [{var,{1158,18},'Ps'},{var,{1158,22},'Isub'},{var,{1158,28},'Osub0'}],
         [],
         [{debug_line,1159,479},
          {call,
              {1159,5},
              {remote,{1159,5},{atom,{1159,5},lists},{atom,{1159,5},mapfoldl}},
              [{block,0,
                   [{'fun',
                        {1159,14},
                        {clauses,
                            [{clause,
                                 {1159,17},
                                 [{var,{1159,18},'P'},{var,{1159,21},'Osub'}],
                                 [],
                                 [{debug_line,1160,480},
                                  {call,
                                      {1160,22},
                                      {atom,{1160,22},bin_pattern},
                                      [{var,{1160,34},'P'},
                                       {var,{1160,37},'Isub'},
                                       {var,{1160,43},'Osub'}]}]}]}}]},
               {var,{1161,19},'Osub0'},
               {var,{1161,26},'Ps'}]}]}]}.
{function,
 {1163,1},
 bin_pattern,3,
 [{clause,
   {1163,1},
   [{var,{1163,1},'_'},{var,{1163,1},'_'},{var,{1163,1},'_'}],
   [[{call,
      {1163,1},
      {remote,{1163,1},{atom,{1163,1},fake},{atom,{1163,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1163,481},{atom,{1163,1},ignore}]},
  {clause,
   {1163,1},
   [{match,
     {1163,13},
     {tuple,
      {1163,13},
      [{atom,{1163,13},c_bitstr},
       {var,{1163,13},'_'},
       {var,{1163,27},'E0'},
       {var,{1163,35},'Size0'},
       {var,{1163,13},'_'},
       {var,{1163,13},'_'},
       {var,{1163,13},'_'}]},
     {var,{1163,42},'Pat0'}},
    {var,{1163,48},'Isub'},
    {var,{1163,54},'Osub0'}],
   [],
   [{debug_line,1164,482},
    {match,
     {1164,5},
     {var,{1164,5},'Size2'},
     {'case',
      {1164,13},
      {tuple,
       {1164,18},
       [{var,{1164,19},'Size0'},
        {call,
         {1164,25},
         {atom,{1164,25},expr},
         [{var,{1164,30},'Size0'},{var,{1164,37},'Isub'}]}]},
      [{clause,
        {1165,17},
        [{tuple,
          {1165,17},
          [{tuple,
            {1165,18},
            [{atom,{1165,18},c_var},{var,{1165,18},'_'},{var,{1165,18},'_'}]},
           {tuple,
            {1165,27},
            [{atom,{1165,27},c_literal},
             {var,{1165,27},'_'},
             {atom,{1165,42},all}]}]}],
        [],
        [{debug_line,1171,483},
         {tuple,
          {1171,21},
          [{atom,{1171,21},c_literal},
           {cons,{1171,37},{atom,{1171,38},size_was_all},{nil,{1171,50}}},
           {atom,{1171,56},bad_size}]}]},
       {clause,
        {1172,17},
        [{tuple,{1172,17},[{var,{1172,18},'_'},{var,{1172,20},'Size1'}]}],
        [],
        [{debug_line,1173,484},{var,{1173,21},'Size1'}]}]}},
    {debug_line,1175,485},
    {match,
     {1175,5},
     {tuple,{1175,5},[{var,{1175,6},'E1'},{var,{1175,9},'Osub'}]},
     {call,
      {1175,17},
      {atom,{1175,17},pattern},
      [{var,{1175,25},'E0'},{var,{1175,29},'Isub'},{var,{1175,35},'Osub0'}]}},
    {debug_line,1176,486},
    {match,
     {1176,5},
     {var,{1176,5},'Pat'},
     {block,
      {1176,11},
      [{match,{1176,11},{var,{1176,11},rec43},{var,{1176,11},'Pat0'}},
       {'case',
        {1176,25},
        {var,{1176,11},rec43},
        [{clause,
          {1176,25},
          [{tuple,
            {1176,25},
            [{atom,{1176,25},c_bitstr},
             {var,{1176,25},'_'},
             {var,{1176,25},'_'},
             {var,{1176,25},'_'},
             {var,{1176,25},'_'},
             {var,{1176,25},'_'},
             {var,{1176,25},'_'}]}],
          [],
          [{call,
            {1176,25},
            {remote,
             {1176,25},
             {atom,{1176,25},erlang},
             {atom,{1176,25},setelement}},
            [{integer,{1176,25},3},
             {call,
              {1176,32},
              {remote,
               {1176,32},
               {atom,{1176,32},erlang},
               {atom,{1176,32},setelement}},
              [{integer,{1176,32},4},
               {var,{1176,11},rec43},
               {var,{1176,37},'Size2'}]},
             {var,{1176,29},'E1'}]}]},
         {clause,
          [{generated,true},{location,{1176,25}}],
          [{var,[{generated,true},{location,{1176,25}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1176,25}}],
            {remote,
             [{generated,true},{location,{1176,25}}],
             {atom,[{generated,true},{location,{1176,25}}],erlang},
             {atom,[{generated,true},{location,{1176,25}}],error}},
            [{tuple,
              [{generated,true},{location,{1176,25}}],
              [{atom,[{generated,true},{location,{1176,25}}],badrecord},
               {var,{1176,11},rec43}]}]}]}]}]}},
    {debug_line,1177,487},
    {call,{1177,5},{atom,{1177,5},bin_pat_warn},[{var,{1177,18},'Pat'}]},
    {debug_line,1178,488},
    {tuple,{1178,5},[{var,{1178,6},'Pat'},{var,{1178,10},'Osub'}]}]}]}.
{function,{1180,1},
          pattern_list,2,
          [{clause,{1180,1},
                   [{var,{1180,1},'_'},{var,{1180,1},'_'}],
                   [[{call,{1180,1},
                           {remote,{1180,1},
                                   {atom,{1180,1},fake},
                                   {atom,{1180,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1180,489},{atom,{1180,1},ignore}]},
           {clause,{1180,1},
                   [{var,{1180,14},'Ps'},{var,{1180,18},'Sub'}],
                   [],
                   [{debug_line,1180,490},
                    {call,{1180,26},
                          {atom,{1180,26},pattern_list},
                          [{var,{1180,39},'Ps'},
                           {var,{1180,43},'Sub'},
                           {var,{1180,48},'Sub'}]}]}]}.
{function,
    {1182,1},
    pattern_list,3,
    [{clause,
         {1182,1},
         [{var,{1182,1},'_'},{var,{1182,1},'_'},{var,{1182,1},'_'}],
         [[{call,
               {1182,1},
               {remote,
                   {1182,1},
                   {atom,{1182,1},fake},
                   {atom,{1182,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1182,491},{atom,{1182,1},ignore}]},
     {clause,
         {1182,1},
         [{var,{1182,14},'Ps0'},
          {var,{1182,19},'Isub'},
          {var,{1182,25},'Osub0'}],
         [],
         [{debug_line,1183,492},
          {call,
              {1183,5},
              {remote,{1183,5},{atom,{1183,5},lists},{atom,{1183,5},mapfoldl}},
              [{block,0,
                   [{'fun',
                        {1183,14},
                        {clauses,
                            [{clause,
                                 {1183,18},
                                 [{var,{1183,19},'P'},{var,{1183,22},'Osub'}],
                                 [],
                                 [{call,
                                      {1183,31},
                                      {atom,{1183,31},pattern},
                                      [{var,{1183,39},'P'},
                                       {var,{1183,42},'Isub'},
                                       {var,{1183,48},'Osub'}]}]}]}}]},
               {var,{1183,59},'Osub0'},
               {var,{1183,66},'Ps0'}]}]}]}.
{function,
 {1189,1},
 var_list,2,
 [{clause,
   {1189,1},
   [{var,{1189,1},'_'},{var,{1189,1},'_'}],
   [[{call,
      {1189,1},
      {remote,{1189,1},{atom,{1189,1},fake},{atom,{1189,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1189,493},{atom,{1189,1},ignore}]},
  {clause,
   {1189,1},
   [{var,{1189,10},'Vs'},{var,{1189,14},'Sub0'}],
   [],
   [{debug_line,1190,494},
    {call,
     {1190,5},
     {remote,{1190,5},{atom,{1190,5},lists},{atom,{1190,5},mapfoldl}},
     [{block,0,
       [{'fun',
         {1190,14},
         {clauses,
          [{clause,
            {1190,18},
            [{match,
              {1190,19},
              {tuple,
               {1190,19},
               [{atom,{1190,19},c_var},
                {var,{1190,19},'_'},
                {var,{1190,19},'_'}]},
              {var,{1190,28},'V'}},
             {var,{1190,31},'Sub'}],
            [],
            [{debug_line,1191,495},
             {call,
              {1191,8},
              {atom,{1191,8},pattern},
              [{var,{1191,16},'V'},
               {var,{1191,19},'Sub'},
               {var,{1191,24},'Sub'}]}]}]}}]},
      {var,{1192,12},'Sub0'},
      {var,{1192,18},'Vs'}]}]}]}.
{function,
 {1199,1},
 bin_pat_warn,1,
 [{clause,
   {1199,1},
   [{var,{1199,1},'_'}],
   [[{call,
      {1199,1},
      {remote,{1199,1},{atom,{1199,1},fake},{atom,{1199,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1199,496},{atom,{1199,1},ignore}]},
  {clause,
   {1199,1},
   [{match,
     {1199,14},
     {tuple,
      {1199,14},
      [{atom,{1199,14},c_bitstr},
       {var,{1199,14},'_'},
       {var,{1200,14},'Val0'},
       {tuple,
        {1201,15},
        [{atom,{1201,15},c_literal},
         {var,{1201,31},'SizeAnno'},
         {var,{1201,44},'Sz'}]},
       {tuple,
        {1202,15},
        [{atom,{1202,15},c_literal},
         {var,{1202,15},'_'},
         {var,{1202,30},'Unit'}]},
       {tuple,
        {1199,29},
        [{atom,{1199,29},c_literal},
         {var,{1199,29},'_'},
         {var,{1199,44},'Type'}]},
       {var,{1203,16},'Fl'}]},
     {var,{1203,20},'Pat'}}],
   [],
   [{debug_line,1204,497},
    {'case',
     {1204,5},
     {tuple,{1204,10},[{var,{1204,11},'Type'},{var,{1204,16},'Sz'}]},
     [{clause,
       {1205,2},
       [{tuple,{1205,2},[{var,{1205,3},'_'},{var,{1205,5},'_'}]}],
       [[{call,
          {1205,13},
          {remote,
           {1205,13},
           {atom,{1205,13},erlang},
           {atom,{1205,13},is_integer}},
          [{var,{1205,24},'Sz'}]},
         {op,{1205,32},'>=',{var,{1205,29},'Sz'},{integer,{1205,35},0}}]],
       [{debug_line,1205,498},{atom,{1205,40},ok}]},
      {clause,
       {1206,2},
       [{tuple,{1206,2},[{atom,{1206,3},binary},{atom,{1206,10},all}]}],
       [],
       [{debug_line,1206,499},{atom,{1206,18},ok}]},
      {clause,
       {1207,2},
       [{tuple,{1207,2},[{atom,{1207,3},utf8},{atom,{1207,8},undefined}]}],
       [],
       [{debug_line,1207,500},{atom,{1207,22},ok}]},
      {clause,
       {1208,2},
       [{tuple,{1208,2},[{atom,{1208,3},utf16},{atom,{1208,9},undefined}]}],
       [],
       [{debug_line,1208,501},{atom,{1208,23},ok}]},
      {clause,
       {1209,2},
       [{tuple,{1209,2},[{atom,{1209,3},utf32},{atom,{1209,9},undefined}]}],
       [],
       [{debug_line,1209,502},{atom,{1209,23},ok}]},
      {clause,
       {1210,2},
       [{tuple,{1210,2},[{var,{1210,3},'_'},{var,{1210,5},'_'}]}],
       [],
       [{debug_line,1211,503},
        {'case',
         {1211,13},
         {call,
          {1211,18},
          {remote,{1211,18},{atom,{1211,18},lists},{atom,{1211,18},member}},
          [{atom,{1211,25},size_was_all},{var,{1211,39},'SizeAnno'}]},
         [{clause,
           {1212,17},
           [{atom,{1212,17},true}],
           [],
           [{debug_line,1213,504},
            {call,
             {1213,21},
             {atom,{1213,21},add_warning},
             [{var,{1213,33},'Pat'},
              {block,0,
               [{tuple,
                 {1213,38},
                 [{atom,{1213,39},nomatch},
                  {tuple,
                   {1213,47},
                   [{atom,{1213,48},bit_syntax_size},
                    {atom,{1213,64},all}]}]}]}]}]},
          {clause,
           {1214,17},
           [{atom,{1214,17},false}],
           [],
           [{debug_line,1215,505},
            {call,
             {1215,21},
             {atom,{1215,21},add_warning},
             [{var,{1215,33},'Pat'},
              {block,0,
               [{tuple,
                 {1215,38},
                 [{atom,{1215,39},nomatch},
                  {tuple,
                   {1215,47},
                   [{atom,{1215,48},bit_syntax_size},
                    {var,{1215,64},'Sz'}]}]}]}]}]}]},
        {debug_line,1217,506},
        {call,
         {1217,6},
         {remote,{1217,6},{atom,{1217,6},erlang},{atom,{1217,6},throw}},
         [{atom,{1217,12},nomatch}]}]}]},
    {debug_line,1219,507},
    {'case',
     {1219,5},
     {tuple,{1219,10},[{var,{1219,11},'Type'},{var,{1219,16},'Val0'}]},
     [{clause,
       {1220,2},
       [{tuple,
         {1220,2},
         [{atom,{1220,3},integer},
          {tuple,
           {1220,11},
           [{atom,{1220,11},c_literal},
            {var,{1220,11},'_'},
            {var,{1220,26},'Val'}]}]}],
       [[{call,
          {1220,37},
          {remote,
           {1220,37},
           {atom,{1220,37},erlang},
           {atom,{1220,37},is_integer}},
          [{var,{1220,48},'Val'}]}]],
       [{debug_line,1221,508},
        {match,
         {1221,6},
         {var,{1221,6},'Signedness'},
         {call,{1221,19},{atom,{1221,19},signedness},[{var,{1221,30},'Fl'}]}},
        {debug_line,1222,509},
        {match,
         {1222,6},
         {var,{1222,6},'TotalSz'},
         {op,{1222,19},'*',{var,{1222,16},'Sz'},{var,{1222,21},'Unit'}}},
        {debug_line,1223,510},
        {call,
         {1223,6},
         {atom,{1223,6},bit_pat_warn_int},
         [{var,{1223,23},'Val'},
          {var,{1223,28},'TotalSz'},
          {var,{1223,37},'Signedness'},
          {var,{1223,49},'Pat'}]}]},
      {clause,
       {1224,2},
       [{tuple,
         {1224,2},
         [{atom,{1224,3},float},
          {tuple,
           {1224,9},
           [{atom,{1224,9},c_literal},
            {var,{1224,9},'_'},
            {var,{1224,24},'Val'}]}]}],
       [[{call,
          {1224,35},
          {remote,{1224,35},{atom,{1224,35},erlang},{atom,{1224,35},is_float}},
          [{var,{1224,44},'Val'}]}]],
       [{debug_line,1225,511},{atom,{1225,6},ok}]},
      {clause,
       {1226,2},
       [{tuple,
         {1226,2},
         [{atom,{1226,3},utf8},
          {tuple,
           {1226,8},
           [{atom,{1226,8},c_literal},
            {var,{1226,8},'_'},
            {var,{1226,23},'Val'}]}]}],
       [[{call,
          {1226,34},
          {remote,
           {1226,34},
           {atom,{1226,34},erlang},
           {atom,{1226,34},is_integer}},
          [{var,{1226,45},'Val'}]}]],
       [{debug_line,1227,512},
        {call,
         {1227,6},
         {atom,{1227,6},bit_pat_warn_unicode},
         [{var,{1227,27},'Val'},{var,{1227,32},'Pat'}]}]},
      {clause,
       {1228,2},
       [{tuple,
         {1228,2},
         [{atom,{1228,3},utf16},
          {tuple,
           {1228,9},
           [{atom,{1228,9},c_literal},
            {var,{1228,9},'_'},
            {var,{1228,24},'Val'}]}]}],
       [[{call,
          {1228,35},
          {remote,
           {1228,35},
           {atom,{1228,35},erlang},
           {atom,{1228,35},is_integer}},
          [{var,{1228,46},'Val'}]}]],
       [{debug_line,1229,513},
        {call,
         {1229,6},
         {atom,{1229,6},bit_pat_warn_unicode},
         [{var,{1229,27},'Val'},{var,{1229,32},'Pat'}]}]},
      {clause,
       {1230,2},
       [{tuple,
         {1230,2},
         [{atom,{1230,3},utf32},
          {tuple,
           {1230,9},
           [{atom,{1230,9},c_literal},
            {var,{1230,9},'_'},
            {var,{1230,24},'Val'}]}]}],
       [[{call,
          {1230,35},
          {remote,
           {1230,35},
           {atom,{1230,35},erlang},
           {atom,{1230,35},is_integer}},
          [{var,{1230,46},'Val'}]}]],
       [{debug_line,1231,514},
        {call,
         {1231,6},
         {atom,{1231,6},bit_pat_warn_unicode},
         [{var,{1231,27},'Val'},{var,{1231,32},'Pat'}]}]},
      {clause,
       {1232,2},
       [{tuple,
         {1232,2},
         [{var,{1232,3},'_'},
          {tuple,
           {1232,5},
           [{atom,{1232,5},c_literal},
            {var,{1232,5},'_'},
            {var,{1232,20},'Val'}]}]}],
       [],
       [{debug_line,1233,515},
        {call,
         {1233,13},
         {atom,{1233,13},add_warning},
         [{var,{1233,25},'Pat'},
          {block,0,
           [{tuple,
             {1233,30},
             [{atom,{1233,31},nomatch},
              {tuple,
               {1233,39},
               [{atom,{1233,40},bit_syntax_type},
                {var,{1233,56},'Val'},
                {var,{1233,60},'Type'}]}]}]}]},
        {debug_line,1234,516},
        {call,
         {1234,6},
         {remote,{1234,6},{atom,{1234,6},erlang},{atom,{1234,6},throw}},
         [{atom,{1234,12},nomatch}]}]},
      {clause,
       {1235,2},
       [{tuple,{1235,2},[{var,{1235,3},'_'},{var,{1235,5},'_'}]}],
       [],
       [{debug_line,1236,517},{atom,{1236,6},ok}]}]}]},
  {clause,
   {1238,1},
   [{match,
     {1238,14},
     {tuple,
      {1238,14},
      [{atom,{1238,14},c_bitstr},
       {var,{1238,14},'_'},
       {var,{1238,54},'Val0'},
       {var,{1238,14},'_'},
       {var,{1238,14},'_'},
       {tuple,
        {1238,29},
        [{atom,{1238,29},c_literal},
         {var,{1238,29},'_'},
         {var,{1238,44},'Type'}]},
       {var,{1238,65},'Fl'}]},
     {var,{1238,69},'Pat'}}],
   [],
   [{debug_line,1240,518},
    {'case',
     {1240,5},
     {tuple,{1240,10},[{var,{1240,11},'Type'},{var,{1240,16},'Val0'}]},
     [{clause,
       {1241,2},
       [{tuple,
         {1241,2},
         [{atom,{1241,3},integer},
          {tuple,
           {1241,11},
           [{atom,{1241,11},c_literal},
            {var,{1241,11},'_'},
            {var,{1241,26},'Val'}]}]}],
       [[{call,
          {1241,37},
          {remote,
           {1241,37},
           {atom,{1241,37},erlang},
           {atom,{1241,37},is_integer}},
          [{var,{1241,48},'Val'}]}]],
       [{debug_line,1242,519},
        {'case',
         {1242,6},
         {call,{1242,11},{atom,{1242,11},signedness},[{var,{1242,22},'Fl'}]},
         [{clause,
           {1243,3},
           [{atom,{1243,3},unsigned}],
           [[{op,{1243,21},'<',{var,{1243,17},'Val'},{integer,{1243,23},0}}]],
           [{debug_line,1244,520},
            {call,
             {1244,21},
             {atom,{1244,21},add_warning},
             [{var,{1244,33},'Pat'},
              {block,0,
               [{tuple,
                 {1244,38},
                 [{atom,{1244,39},nomatch},
                  {tuple,
                   {1244,47},
                   [{atom,{1244,48},bit_syntax_unsigned},
                    {var,{1244,68},'Val'}]}]}]}]},
            {debug_line,1245,521},
            {call,
             {1245,7},
             {remote,{1245,7},{atom,{1245,7},erlang},{atom,{1245,7},throw}},
             [{atom,{1245,13},nomatch}]}]},
          {clause,
           {1246,3},
           [{var,{1246,3},'_'}],
           [],
           [{debug_line,1247,522},{atom,{1247,7},ok}]}]}]},
      {clause,
       {1249,2},
       [{tuple,
         {1249,2},
         [{atom,{1249,3},float},
          {tuple,
           {1249,9},
           [{atom,{1249,9},c_literal},
            {var,{1249,9},'_'},
            {var,{1249,24},'Val'}]}]}],
       [[{call,
          {1249,35},
          {remote,{1249,35},{atom,{1249,35},erlang},{atom,{1249,35},is_float}},
          [{var,{1249,44},'Val'}]}]],
       [{debug_line,1250,523},{atom,{1250,6},ok}]},
      {clause,
       {1251,2},
       [{tuple,
         {1251,2},
         [{var,{1251,3},'_'},
          {tuple,
           {1251,5},
           [{atom,{1251,5},c_literal},
            {var,{1251,5},'_'},
            {var,{1251,20},'Val'}]}]}],
       [],
       [{debug_line,1252,524},
        {call,
         {1252,13},
         {atom,{1252,13},add_warning},
         [{var,{1252,25},'Pat'},
          {block,0,
           [{tuple,
             {1252,30},
             [{atom,{1252,31},nomatch},
              {tuple,
               {1252,39},
               [{atom,{1252,40},bit_syntax_type},
                {var,{1252,56},'Val'},
                {var,{1252,60},'Type'}]}]}]}]},
        {debug_line,1253,525},
        {call,
         {1253,6},
         {remote,{1253,6},{atom,{1253,6},erlang},{atom,{1253,6},throw}},
         [{atom,{1253,12},nomatch}]}]},
      {clause,
       {1254,2},
       [{tuple,{1254,2},[{var,{1254,3},'_'},{var,{1254,5},'_'}]}],
       [],
       [{debug_line,1255,526},{atom,{1255,6},ok}]}]}]}]}.
{function,
    {1258,1},
    bit_pat_warn_int,4,
    [{clause,
         {1258,1},
         [{var,{1258,1},'_'},
          {var,{1258,1},'_'},
          {var,{1258,1},'_'},
          {var,{1258,1},'_'}],
         [[{call,
               {1258,1},
               {remote,
                   {1258,1},
                   {atom,{1258,1},fake},
                   {atom,{1258,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1258,527},{atom,{1258,1},ignore}]},
     {clause,
         {1258,1},
         [{var,{1258,18},'Val'},
          {integer,{1258,23},0},
          {atom,{1258,26},signed},
          {var,{1258,34},'Pat'}],
         [],
         [{debug_line,1259,528},
          {'if',
              {1259,5},
              [{clause,
                   {1260,2},
                   [],
                   [[{op,{1260,6},
                         '=:=',
                         {var,{1260,2},'Val'},
                         {integer,{1260,10},0}}]],
                   [{debug_line,1261,529},{atom,{1261,6},ok}]},
               {clause,
                   {1262,2},
                   [],
                   [[{atom,{1262,2},true}]],
                   [{debug_line,1263,530},
                    {call,
                        {1263,13},
                        {atom,{1263,13},add_warning},
                        [{var,{1263,25},'Pat'},
                         {block,0,
                             [{tuple,
                                  {1263,30},
                                  [{atom,{1263,31},nomatch},
                                   {tuple,
                                       {1263,39},
                                       [{atom,{1263,40},bit_syntax_truncated},
                                        {atom,{1263,61},signed},
                                        {var,{1263,68},'Val'},
                                        {integer,{1263,72},0}]}]}]}]},
                    {debug_line,1264,531},
                    {call,
                        {1264,6},
                        {remote,
                            {1264,6},
                            {atom,{1264,6},erlang},
                            {atom,{1264,6},throw}},
                        [{atom,{1264,12},nomatch}]}]}]}]},
     {clause,
         {1266,1},
         [{var,{1266,18},'Val'},
          {var,{1266,23},'Sz'},
          {atom,{1266,27},signed},
          {var,{1266,35},'Pat'}],
         [],
         [{debug_line,1267,532},
          {'if',
              {1267,5},
              [{clause,
                   {1268,2},
                   [],
                   [[{op,{1268,6},
                         '<',
                         {var,{1268,2},'Val'},
                         {integer,{1268,8},0}},
                     {op,{1268,28},
                         '=/=',
                         {op,{1268,15},
                             'bsr',
                             {var,{1268,11},'Val'},
                             {op,{1268,23},
                                 '-',
                                 {var,{1268,20},'Sz'},
                                 {integer,{1268,25},1}}},
                         {op,{1268,32},'-',{integer,{1268,33},1}}}]],
                   [{debug_line,1269,533},
                    {call,
                        {1269,13},
                        {atom,{1269,13},add_warning},
                        [{var,{1269,25},'Pat'},
                         {block,0,
                             [{tuple,
                                  {1269,30},
                                  [{atom,{1269,31},nomatch},
                                   {tuple,
                                       {1269,39},
                                       [{atom,{1269,40},bit_syntax_truncated},
                                        {atom,{1269,61},signed},
                                        {var,{1269,68},'Val'},
                                        {var,{1269,72},'Sz'}]}]}]}]},
                    {debug_line,1270,534},
                    {call,
                        {1270,6},
                        {remote,
                            {1270,6},
                            {atom,{1270,6},erlang},
                            {atom,{1270,6},throw}},
                        [{atom,{1270,12},nomatch}]}]},
               {clause,
                   {1271,2},
                   [],
                   [[{op,{1271,6},
                         '>',
                         {var,{1271,2},'Val'},
                         {integer,{1271,8},0}},
                     {op,{1271,28},
                         '=/=',
                         {op,{1271,15},
                             'bsr',
                             {var,{1271,11},'Val'},
                             {op,{1271,23},
                                 '-',
                                 {var,{1271,20},'Sz'},
                                 {integer,{1271,25},1}}},
                         {integer,{1271,32},0}}]],
                   [{debug_line,1272,535},
                    {call,
                        {1272,13},
                        {atom,{1272,13},add_warning},
                        [{var,{1272,25},'Pat'},
                         {block,0,
                             [{tuple,
                                  {1272,30},
                                  [{atom,{1272,31},nomatch},
                                   {tuple,
                                       {1272,39},
                                       [{atom,{1272,40},bit_syntax_truncated},
                                        {atom,{1272,61},signed},
                                        {var,{1272,68},'Val'},
                                        {var,{1272,72},'Sz'}]}]}]}]},
                    {debug_line,1273,536},
                    {call,
                        {1273,6},
                        {remote,
                            {1273,6},
                            {atom,{1273,6},erlang},
                            {atom,{1273,6},throw}},
                        [{atom,{1273,12},nomatch}]}]},
               {clause,
                   {1274,2},
                   [],
                   [[{atom,{1274,2},true}]],
                   [{debug_line,1275,537},{atom,{1275,6},ok}]}]}]},
     {clause,
         {1277,1},
         [{var,{1277,18},'Val'},
          {var,{1277,23},'_Sz'},
          {atom,{1277,28},unsigned},
          {var,{1277,38},'Pat'}],
         [[{op,{1277,52},'<',{var,{1277,48},'Val'},{integer,{1277,54},0}}]],
         [{debug_line,1278,538},
          {call,
              {1278,5},
              {atom,{1278,5},add_warning},
              [{var,{1278,17},'Pat'},
               {block,0,
                   [{tuple,
                        {1278,22},
                        [{atom,{1278,23},nomatch},
                         {tuple,
                             {1278,31},
                             [{atom,{1278,32},bit_syntax_unsigned},
                              {var,{1278,52},'Val'}]}]}]}]},
          {debug_line,1279,539},
          {call,
              {1279,5},
              {remote,{1279,5},{atom,{1279,5},erlang},{atom,{1279,5},throw}},
              [{atom,{1279,11},nomatch}]}]},
     {clause,
         {1280,1},
         [{var,{1280,18},'Val'},
          {var,{1280,23},'Sz'},
          {atom,{1280,27},unsigned},
          {var,{1280,37},'Pat'}],
         [],
         [{debug_line,1281,540},
          {'if',
              {1281,5},
              [{clause,
                   {1282,2},
                   [],
                   [[{op,{1282,13},
                         '=:=',
                         {op,{1282,6},
                             'bsr',
                             {var,{1282,2},'Val'},
                             {var,{1282,10},'Sz'}},
                         {integer,{1282,17},0}}]],
                   [{debug_line,1283,541},{atom,{1283,6},ok}]},
               {clause,
                   {1284,2},
                   [],
                   [[{atom,{1284,2},true}]],
                   [{debug_line,1285,542},
                    {call,
                        {1285,13},
                        {atom,{1285,13},add_warning},
                        [{var,{1285,25},'Pat'},
                         {block,0,
                             [{tuple,
                                  {1285,30},
                                  [{atom,{1285,31},nomatch},
                                   {tuple,
                                       {1285,39},
                                       [{atom,{1285,40},bit_syntax_truncated},
                                        {atom,{1285,61},unsigned},
                                        {var,{1285,70},'Val'},
                                        {var,{1285,74},'Sz'}]}]}]}]},
                    {debug_line,1286,543},
                    {call,
                        {1286,6},
                        {remote,
                            {1286,6},
                            {atom,{1286,6},erlang},
                            {atom,{1286,6},throw}},
                        [{atom,{1286,12},nomatch}]}]}]}]}]}.
{function,
    {1289,1},
    bit_pat_warn_unicode,2,
    [{clause,
         {1289,1},
         [{var,{1289,1},'_'},{var,{1289,1},'_'}],
         [[{call,
               {1289,1},
               {remote,
                   {1289,1},
                   {atom,{1289,1},fake},
                   {atom,{1289,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1289,544},{atom,{1289,1},ignore}]},
     {clause,
         {1289,1},
         [{var,{1289,22},'U'},{var,{1289,25},'_Pat'}],
         [[{op,{1289,38},'=<',{integer,{1289,36},0},{var,{1289,41},'U'}},
           {op,{1289,46},
               '=<',
               {var,{1289,44},'U'},
               {integer,{1289,49},1114111}}]],
         [{debug_line,1290,545},{atom,{1290,5},ok}]},
     {clause,
         {1291,1},
         [{var,{1291,22},'U'},{var,{1291,25},'Pat'}],
         [],
         [{debug_line,1292,546},
          {call,
              {1292,5},
              {atom,{1292,5},add_warning},
              [{var,{1292,17},'Pat'},
               {block,0,
                   [{tuple,
                        {1292,22},
                        [{atom,{1292,23},nomatch},
                         {tuple,
                             {1292,31},
                             [{atom,{1292,32},bit_syntax_unicode},
                              {var,{1292,51},'U'}]}]}]}]},
          {debug_line,1293,547},
          {call,
              {1293,5},
              {remote,{1293,5},{atom,{1293,5},erlang},{atom,{1293,5},throw}},
              [{atom,{1293,11},nomatch}]}]}]}.
{function,
    {1295,1},
    signedness,1,
    [{clause,
         {1295,1},
         [{var,{1295,1},'_'}],
         [[{call,
               {1295,1},
               {remote,
                   {1295,1},
                   {atom,{1295,1},fake},
                   {atom,{1295,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1295,548},{atom,{1295,1},ignore}]},
     {clause,
         {1295,1},
         [{tuple,
              {1295,12},
              [{atom,{1295,12},c_literal},
               {var,{1295,12},'_'},
               {var,{1295,27},'Flags'}]}],
         [],
         [{debug_line,1296,549},
          {match,
              {1296,5},
              {cons,{1296,5},{var,{1296,6},'S'},{nil,{1296,7}}},
              {lc,{1296,11},
                  {block,0,[{var,{1296,12},'F'}]},
                  [{block,0,[{atom,{1296,22},true}]},
                   {generate,
                       {1296,19},
                       {var,{1296,17},'F'},
                       {var,{1296,22},'Flags'}},
                   {block,0,[{atom,{1296,42},true}]},
                   {op,{1296,42},
                       'orelse',
                       {op,{1296,31},
                           '=:=',
                           {var,{1296,29},'F'},
                           {atom,{1296,35},signed}},
                       {op,{1296,51},
                           '=:=',
                           {var,{1296,49},'F'},
                           {atom,{1296,55},unsigned}}}]}},
          {debug_line,1297,550},
          {var,{1297,5},'S'}]}]}.
{function,{1303,1},
          is_subst,1,
          [{clause,{1303,1},
                   [{var,{1303,1},'_'}],
                   [[{call,{1303,1},
                           {remote,{1303,1},
                                   {atom,{1303,1},fake},
                                   {atom,{1303,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1303,551},{atom,{1303,1},ignore}]},
           {clause,{1303,1},
                   [{tuple,{1303,10},
                           [{atom,{1303,10},c_var},
                            {var,{1303,10},'_'},
                            {tuple,{1303,22},
                                   [{var,{1303,23},'_'},
                                    {var,{1303,25},'_'}]}]}],
                   [],
                   [{debug_line,1307,552},{atom,{1307,5},false}]},
           {clause,{1308,1},
                   [{tuple,{1308,10},
                           [{atom,{1308,10},c_var},
                            {var,{1308,10},'_'},
                            {var,{1308,10},'_'}]}],
                   [],
                   [{debug_line,1308,553},{atom,{1308,23},true}]},
           {clause,{1309,1},
                   [{tuple,{1309,10},
                           [{atom,{1309,10},c_literal},
                            {var,{1309,10},'_'},
                            {var,{1309,10},'_'}]}],
                   [],
                   [{debug_line,1309,554},{atom,{1309,27},true}]},
           {clause,{1310,1},
                   [{var,{1310,10},'_'}],
                   [],
                   [{debug_line,1310,555},{atom,{1310,16},false}]}]}.
{function,
    {1335,1},
    sub_new,0,
    [{clause,
         {1335,1},
         [],
         [[{call,
               {1335,1},
               {remote,
                   {1335,1},
                   {atom,{1335,1},fake},
                   {atom,{1335,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1335,556},{atom,{1335,1},ignore}]},
     {clause,
         {1335,1},
         [],[],
         [{debug_line,1335,557},
          {tuple,
              {1335,14},
              [{atom,{1335,14},sub},
               {call,
                   {1335,21},
                   {remote,
                       {1335,28},
                       {atom,{1335,21},orddict},
                       {atom,{1335,29},new}},
                   []},
               {call,
                   {1335,37},
                   {remote,
                       {1335,41},
                       {atom,{1335,37},sets},
                       {atom,{1335,42},new}},
                   []},
               {map,{1335,50},[]},
               {atom,{1335,14},false},
               {atom,{1335,14},true}]}]}]}.
{function,
    {1337,1},
    sub_new,1,
    [{clause,
         {1337,1},
         [{var,{1337,1},'_'}],
         [[{call,
               {1337,1},
               {remote,
                   {1337,1},
                   {atom,{1337,1},fake},
                   {atom,{1337,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1337,558},{atom,{1337,1},ignore}]},
     {clause,
         {1337,1},
         [{match,
              {1337,9},
              {tuple,
                  {1337,9},
                  [{atom,{1337,9},sub},
                   {var,{1337,9},'_'},
                   {var,{1337,9},'_'},
                   {var,{1337,9},'_'},
                   {var,{1337,9},'_'},
                   {var,{1337,9},'_'}]},
              {var,{1337,16},'Sub'}}],
         [],
         [{debug_line,1338,559},
          {block,
              {1338,5},
              [{match,
                   {1338,13},
                   {var,{1338,13},rec44},
                   {call,
                       {1338,15},
                       {remote,
                           {1338,22},
                           {atom,{1338,15},orddict},
                           {atom,{1338,23},new}},
                       []}},
               {match,{1338,5},{var,{1338,5},rec45},{var,{1338,5},'Sub'}},
               {'case',
                   {1338,13},
                   {var,{1338,5},rec45},
                   [{clause,
                        {1338,13},
                        [{tuple,
                             {1338,13},
                             [{atom,{1338,13},sub},
                              {var,{1338,13},'_'},
                              {var,{1338,13},'_'},
                              {var,{1338,13},'_'},
                              {var,{1338,13},'_'},
                              {var,{1338,13},'_'}]}],
                        [],
                        [{call,
                             {1338,13},
                             {remote,
                                 {1338,13},
                                 {atom,{1338,13},erlang},
                                 {atom,{1338,13},setelement}},
                             [{integer,{1338,13},2},
                              {call,
                                  {1338,29},
                                  {remote,
                                      {1338,29},
                                      {atom,{1338,29},erlang},
                                      {atom,{1338,29},setelement}},
                                  [{integer,{1338,29},4},
                                   {var,{1338,5},rec45},
                                   {map,{1338,31},[]}]},
                              {var,{1338,13},rec44}]}]},
                    {clause,
                        [{generated,true},{location,{1338,13}}],
                        [{var,[{generated,true},{location,{1338,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{1338,13}}],
                             {remote,
                                 [{generated,true},{location,{1338,13}}],
                                 {atom,
                                     [{generated,true},{location,{1338,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{1338,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{1338,13}}],
                                  [{atom,
                                       [{generated,true},{location,{1338,13}}],
                                       badrecord},
                                   {var,{1338,5},rec45}]}]}]}]}]}]}]}.
{function,
    {1340,1},
    sub_get_var,2,
    [{clause,
         {1340,1},
         [{var,{1340,1},'_'},{var,{1340,1},'_'}],
         [[{call,
               {1340,1},
               {remote,
                   {1340,1},
                   {atom,{1340,1},fake},
                   {atom,{1340,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1340,560},{atom,{1340,1},ignore}]},
     {clause,
         {1340,1},
         [{match,
              {1340,13},
              {tuple,
                  {1340,13},
                  [{atom,{1340,13},c_var},
                   {var,{1340,13},'_'},
                   {var,{1340,25},'V'}]},
              {var,{1340,28},'Var'}},
          {tuple,
              {1340,33},
              [{atom,{1340,33},sub},
               {var,{1340,40},'S'},
               {var,{1340,33},'_'},
               {var,{1340,33},'_'},
               {var,{1340,33},'_'},
               {var,{1340,33},'_'}]}],
         [],
         [{debug_line,1341,561},
          {'case',
              {1341,5},
              {call,
                  {1341,10},
                  {remote,
                      {1341,17},
                      {atom,{1341,10},orddict},
                      {atom,{1341,18},find}},
                  [{var,{1341,23},'V'},{var,{1341,26},'S'}]},
              [{clause,
                   {1342,2},
                   [{tuple,
                        {1342,2},
                        [{atom,{1342,3},ok},{var,{1342,6},'Val'}]}],
                   [],
                   [{debug_line,1343,562},
                    {call,
                        {1343,13},
                        {atom,{1343,13},propagate_compiler_generated},
                        [{var,{1343,42},'Var'},{var,{1343,47},'Val'}]}]},
               {clause,
                   {1344,2},
                   [{atom,{1344,2},error}],
                   [],
                   [{debug_line,1345,563},{var,{1345,13},'Var'}]}]}]}]}.
{function,{1348,1},
          sub_set_var,3,
          [{clause,{1348,1},
                   [{var,{1348,1},'_'},{var,{1348,1},'_'},{var,{1348,1},'_'}],
                   [[{call,{1348,1},
                           {remote,{1348,1},
                                   {atom,{1348,1},fake},
                                   {atom,{1348,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1348,564},{atom,{1348,1},ignore}]},
           {clause,{1348,1},
                   [{tuple,{1348,13},
                           [{atom,{1348,13},c_var},
                            {var,{1348,13},'_'},
                            {var,{1348,25},'V'}]},
                    {var,{1348,29},'Val'},
                    {var,{1348,34},'Sub'}],
                   [],
                   [{debug_line,1349,565},
                    {call,{1349,5},
                          {atom,{1349,5},sub_set_name},
                          [{var,{1349,18},'V'},
                           {var,{1349,21},'Val'},
                           {var,{1349,26},'Sub'}]}]}]}.
{function,
 {1351,1},
 sub_set_name,3,
 [{clause,
   {1351,1},
   [{var,{1351,1},'_'},{var,{1351,1},'_'},{var,{1351,1},'_'}],
   [[{call,
      {1351,1},
      {remote,{1351,1},{atom,{1351,1},fake},{atom,{1351,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1351,566},{atom,{1351,1},ignore}]},
  {clause,
   {1351,1},
   [{var,{1351,14},'V'},
    {var,{1351,17},'Val'},
    {match,
     {1351,22},
     {tuple,
      {1351,22},
      [{atom,{1351,22},sub},
       {var,{1351,29},'S'},
       {var,{1351,33},'Scope'},
       {var,{1351,41},'Tdb0'},
       {var,{1351,22},'_'},
       {var,{1351,22},'_'}]},
     {var,{1351,47},'Sub'}}],
   [],
   [{debug_line,1352,567},
    {match,
     {1352,5},
     {var,{1352,5},'Tdb1'},
     {call,
      {1352,12},
      {atom,{1352,12},kill_types},
      [{var,{1352,23},'V'},{var,{1352,26},'Tdb0'}]}},
    {debug_line,1353,568},
    {match,
     {1353,5},
     {var,{1353,5},'Tdb'},
     {call,
      {1353,11},
      {atom,{1353,11},copy_type},
      [{var,{1353,21},'V'},{var,{1353,24},'Val'},{var,{1353,29},'Tdb1'}]}},
    {debug_line,1354,569},
    {block,
     {1354,5},
     [{match,
       {1354,13},
       {var,{1354,13},rec46},
       {call,
        {1354,15},
        {remote,{1354,22},{atom,{1354,15},orddict},{atom,{1354,23},store}},
        [{var,{1354,29},'V'},{var,{1354,32},'Val'},{var,{1354,37},'S'}]}},
      {match,
       {1354,40},
       {var,{1354,40},rec47},
       {call,
        {1354,42},
        {remote,{1354,46},{atom,{1354,42},sets},{atom,{1354,47},add_element}},
        [{var,{1354,59},'V'},{var,{1354,62},'Scope'}]}},
      {match,{1354,5},{var,{1354,5},rec48},{var,{1354,5},'Sub'}},
      {'case',
       {1354,13},
       {var,{1354,5},rec48},
       [{clause,
         {1354,13},
         [{tuple,
           {1354,13},
           [{atom,{1354,13},sub},
            {var,{1354,13},'_'},
            {var,{1354,13},'_'},
            {var,{1354,13},'_'},
            {var,{1354,13},'_'},
            {var,{1354,13},'_'}]}],
         [],
         [{call,
           {1354,13},
           {remote,
            {1354,13},
            {atom,{1354,13},erlang},
            {atom,{1354,13},setelement}},
           [{integer,{1354,13},2},
            {call,
             {1354,40},
             {remote,
              {1354,40},
              {atom,{1354,40},erlang},
              {atom,{1354,40},setelement}},
             [{integer,{1354,40},3},
              {call,
               {1354,69},
               {remote,
                {1354,69},
                {atom,{1354,69},erlang},
                {atom,{1354,69},setelement}},
               [{integer,{1354,69},4},
                {var,{1354,5},rec48},
                {var,{1354,71},'Tdb'}]},
              {var,{1354,40},rec47}]},
            {var,{1354,13},rec46}]}]},
        {clause,
         [{generated,true},{location,{1354,13}}],
         [{var,[{generated,true},{location,{1354,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1354,13}}],
           {remote,
            [{generated,true},{location,{1354,13}}],
            {atom,[{generated,true},{location,{1354,13}}],erlang},
            {atom,[{generated,true},{location,{1354,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1354,13}}],
             [{atom,[{generated,true},{location,{1354,13}}],badrecord},
              {var,{1354,5},rec48}]}]}]}]}]}]}]}.
{function,
    {1356,1},
    sub_subst_var,3,
    [{clause,
         {1356,1},
         [{var,{1356,1},'_'},{var,{1356,1},'_'},{var,{1356,1},'_'}],
         [[{call,
               {1356,1},
               {remote,
                   {1356,1},
                   {atom,{1356,1},fake},
                   {atom,{1356,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1356,570},{atom,{1356,1},ignore}]},
     {clause,
         {1356,1},
         [{match,
              {1356,15},
              {tuple,
                  {1356,15},
                  [{atom,{1356,15},c_var},
                   {var,{1356,15},'_'},
                   {var,{1356,27},'V'}]},
              {var,{1356,30},'Var'}},
          {var,{1356,35},'Val0'},
          {tuple,
              {1356,41},
              [{atom,{1356,41},sub},
               {var,{1356,48},'S0'},
               {var,{1356,41},'_'},
               {var,{1356,41},'_'},
               {var,{1356,41},'_'},
               {var,{1356,41},'_'}]}],
         [],
         [{debug_line,1357,571},
          {match,
              {1357,5},
              {var,{1357,5},'Val'},
              {call,
                  {1357,11},
                  {atom,{1357,11},propagate_compiler_generated},
                  [{var,{1357,40},'Var'},{var,{1357,45},'Val0'}]}},
          {debug_line,1360,572},
          {op,{1360,15},
              '++',
              {cons,
                  {1360,5},
                  {tuple,{1360,6},[{var,{1360,7},'V'},{var,{1360,9},'Val'}]},
                  {nil,{1360,13}}},
              {lc,{1360,18},
                  {block,0,
                      [{tuple,
                           {1360,19},
                           [{var,{1360,20},'K'},{var,{1360,22},'Val'}]}]},
                  [{block,0,[{atom,{1360,53},true}]},
                   {generate,
                       {1360,50},
                       {tuple,
                           {1360,30},
                           [{var,{1360,31},'K'},
                            {tuple,
                                {1360,33},
                                [{atom,{1360,33},c_var},
                                 {var,{1360,33},'_'},
                                 {var,{1360,45},'V1'}]}]},
                       {var,{1360,53},'S0'}},
                   {block,0,[{atom,{1360,60},true}]},
                   {op,{1360,60},
                       '=:=',
                       {var,{1360,57},'V1'},
                       {var,{1360,64},'V'}}]}}]}]}.
{function,
 {1362,1},
 sub_add_scope,2,
 [{clause,
   {1362,1},
   [{var,{1362,1},'_'},{var,{1362,1},'_'}],
   [[{call,
      {1362,1},
      {remote,{1362,1},{atom,{1362,1},fake},{atom,{1362,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1362,573},{atom,{1362,1},ignore}]},
  {clause,
   {1362,1},
   [{var,{1362,15},'Vs'},
    {match,
     {1362,19},
     {tuple,
      {1362,19},
      [{atom,{1362,19},sub},
       {var,{1362,19},'_'},
       {var,{1362,26},'Scope0'},
       {var,{1362,19},'_'},
       {var,{1362,19},'_'},
       {var,{1362,19},'_'}]},
     {var,{1362,34},'Sub'}}],
   [],
   [{debug_line,1363,574},
    {match,
     {1363,5},
     {var,{1363,5},'Scope'},
     {call,
      {1363,13},
      {remote,{1363,13},{atom,{1363,13},lists},{atom,{1363,13},foldl}},
      [{block,0,
        [{'fun',
          {1363,19},
          {clauses,
           [{clause,
             {1363,22},
             [{var,{1363,23},'V'},{var,{1363,26},'S'}],
             [[{call,
                {1363,34},
                {remote,
                 {1363,34},
                 {atom,{1363,34},erlang},
                 {atom,{1363,34},is_integer}},
                [{var,{1363,45},'V'}]}],
              [{call,
                {1363,49},
                {remote,
                 {1363,49},
                 {atom,{1363,49},erlang},
                 {atom,{1363,49},is_atom}},
                [{var,{1363,57},'V'}]}]],
             [{debug_line,1364,575},
              {call,
               {1364,6},
               {remote,
                {1364,10},
                {atom,{1364,6},sets},
                {atom,{1364,11},add_element}},
               [{var,{1364,23},'V'},{var,{1364,26},'S'}]}]}]}}]},
       {var,{1365,10},'Scope0'},
       {var,{1365,18},'Vs'}]}},
    {debug_line,1366,576},
    {block,
     {1366,5},
     [{match,{1366,5},{var,{1366,5},rec49},{var,{1366,5},'Sub'}},
      {'case',
       {1366,13},
       {var,{1366,5},rec49},
       [{clause,
         {1366,13},
         [{tuple,
           {1366,13},
           [{atom,{1366,13},sub},
            {var,{1366,13},'_'},
            {var,{1366,13},'_'},
            {var,{1366,13},'_'},
            {var,{1366,13},'_'},
            {var,{1366,13},'_'}]}],
         [],
         [{call,
           {1366,13},
           {remote,
            {1366,13},
            {atom,{1366,13},erlang},
            {atom,{1366,13},setelement}},
           [{integer,{1366,13},3},
            {var,{1366,5},rec49},
            {var,{1366,15},'Scope'}]}]},
        {clause,
         [{generated,true},{location,{1366,13}}],
         [{var,[{generated,true},{location,{1366,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1366,13}}],
           {remote,
            [{generated,true},{location,{1366,13}}],
            {atom,[{generated,true},{location,{1366,13}}],erlang},
            {atom,[{generated,true},{location,{1366,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1366,13}}],
             [{atom,[{generated,true},{location,{1366,13}}],badrecord},
              {var,{1366,5},rec49}]}]}]}]}]}]}]}.
{function,
    {1368,1},
    sub_subst_scope,1,
    [{clause,
         {1368,1},
         [{var,{1368,1},'_'}],
         [[{call,
               {1368,1},
               {remote,
                   {1368,1},
                   {atom,{1368,1},fake},
                   {atom,{1368,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1368,577},{atom,{1368,1},ignore}]},
     {clause,
         {1368,1},
         [{match,
              {1368,17},
              {tuple,
                  {1368,17},
                  [{atom,{1368,17},sub},
                   {var,{1368,24},'S0'},
                   {var,{1368,29},'Scope'},
                   {var,{1368,17},'_'},
                   {var,{1368,17},'_'},
                   {var,{1368,17},'_'}]},
              {var,{1368,36},'Sub'}}],
         [],
         [{debug_line,1369,578},
          {match,
              {1369,5},
              {var,{1369,5},'Initial'},
              {'case',
                  {1369,15},
                  {var,{1369,20},'S0'},
                  [{clause,
                       {1370,19},
                       [{cons,
                            {1370,19},
                            {tuple,
                                {1370,20},
                                [{var,{1370,21},'NegInt'},
                                 {var,{1370,28},'_'}]},
                            {var,{1370,31},'_'}}],
                       [[{call,
                             {1370,39},
                             {remote,
                                 {1370,39},
                                 {atom,{1370,39},erlang},
                                 {atom,{1370,39},is_integer}},
                             [{var,{1370,50},'NegInt'}]},
                         {op,{1370,66},
                             '<',
                             {var,{1370,59},'NegInt'},
                             {integer,{1370,68},0}}]],
                       [{debug_line,1371,579},
                        {op,{1371,30},
                            '-',
                            {var,{1371,23},'NegInt'},
                            {integer,{1371,32},1}}]},
                   {clause,
                       {1372,19},
                       [{var,{1372,19},'_'}],
                       [],
                       [{debug_line,1373,580},
                        {op,{1373,23},'-',{integer,{1373,24},1}}]}]}},
          {debug_line,1375,581},
          {match,
              {1375,5},
              {var,{1375,5},'S'},
              {call,
                  {1375,9},
                  {atom,{1375,9},sub_subst_scope_1},
                  [{block,0,
                       [{call,
                            {1375,27},
                            {remote,
                                {1375,31},
                                {atom,{1375,27},sets},
                                {atom,{1375,32},to_list}},
                            [{var,{1375,40},'Scope'}]}]},
                   {var,{1375,48},'Initial'},
                   {var,{1375,57},'S0'}]}},
          {debug_line,1376,582},
          {block,
              {1376,5},
              [{match,
                   {1376,13},
                   {var,{1376,13},rec50},
                   {call,
                       {1376,15},
                       {remote,
                           {1376,22},
                           {atom,{1376,15},orddict},
                           {atom,{1376,23},from_list}},
                       [{var,{1376,33},'S'}]}},
               {match,{1376,5},{var,{1376,5},rec51},{var,{1376,5},'Sub'}},
               {'case',
                   {1376,13},
                   {var,{1376,5},rec51},
                   [{clause,
                        {1376,13},
                        [{tuple,
                             {1376,13},
                             [{atom,{1376,13},sub},
                              {var,{1376,13},'_'},
                              {var,{1376,13},'_'},
                              {var,{1376,13},'_'},
                              {var,{1376,13},'_'},
                              {var,{1376,13},'_'}]}],
                        [],
                        [{call,
                             {1376,13},
                             {remote,
                                 {1376,13},
                                 {atom,{1376,13},erlang},
                                 {atom,{1376,13},setelement}},
                             [{integer,{1376,13},2},
                              {var,{1376,5},rec51},
                              {var,{1376,13},rec50}]}]},
                    {clause,
                        [{generated,true},{location,{1376,13}}],
                        [{var,[{generated,true},{location,{1376,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{1376,13}}],
                             {remote,
                                 [{generated,true},{location,{1376,13}}],
                                 {atom,
                                     [{generated,true},{location,{1376,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{1376,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{1376,13}}],
                                  [{atom,
                                       [{generated,true},{location,{1376,13}}],
                                       badrecord},
                                   {var,{1376,5},rec51}]}]}]}]}]}]}]}.
{function,
    {1379,1},
    sub_subst_scope_1,3,
    [{clause,
         {1379,1},
         [{var,{1379,1},'_'},{var,{1379,1},'_'},{var,{1379,1},'_'}],
         [[{call,
               {1379,1},
               {remote,
                   {1379,1},
                   {atom,{1379,1},fake},
                   {atom,{1379,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1379,583},{atom,{1379,1},ignore}]},
     {clause,
         {1379,1},
         [{cons,{1379,19},{var,{1379,20},'H'},{var,{1379,22},'T'}},
          {var,{1379,26},'Key'},
          {var,{1379,31},'Acc'}],
         [],
         [{debug_line,1380,584},
          {call,
              {1380,5},
              {atom,{1380,5},sub_subst_scope_1},
              [{var,{1380,23},'T'},
               {block,0,
                   [{op,{1380,29},
                        '-',
                        {var,{1380,26},'Key'},
                        {integer,{1380,30},1}}]},
               {block,0,
                   [{cons,
                        {1380,33},
                        {tuple,
                            {1380,34},
                            [{var,{1380,35},'Key'},
                             {tuple,
                                 {1380,39},
                                 [{atom,{1380,39},c_var},
                                  {nil,{1380,39}},
                                  {var,{1380,51},'H'}]}]},
                        {var,{1380,55},'Acc'}}]}]}]},
     {clause,
         {1381,1},
         [{nil,{1381,19}},{var,{1381,23},'_'},{var,{1381,26},'Acc'}],
         [],
         [{debug_line,1381,585},{var,{1381,34},'Acc'}]}]}.
{function,{1383,1},
          sub_is_in_scope,2,
          [{clause,{1383,1},
                   [{var,{1383,1},'_'},{var,{1383,1},'_'}],
                   [[{call,{1383,1},
                           {remote,{1383,1},
                                   {atom,{1383,1},fake},
                                   {atom,{1383,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1383,586},{atom,{1383,1},ignore}]},
           {clause,{1383,1},
                   [{tuple,{1383,17},
                           [{atom,{1383,17},c_var},
                            {var,{1383,17},'_'},
                            {var,{1383,29},'V'}]},
                    {tuple,{1383,33},
                           [{atom,{1383,33},sub},
                            {var,{1383,33},'_'},
                            {var,{1383,40},'Scope'},
                            {var,{1383,33},'_'},
                            {var,{1383,33},'_'},
                            {var,{1383,33},'_'}]}],
                   [],
                   [{debug_line,1384,587},
                    {call,{1384,5},
                          {remote,{1384,9},
                                  {atom,{1384,5},sets},
                                  {atom,{1384,10},is_element}},
                          [{var,{1384,21},'V'},{var,{1384,24},'Scope'}]}]}]}.
{function,
    {1388,1},
    propagate_compiler_generated,2,
    [{clause,
         {1388,1},
         [{var,{1388,1},'_'},{var,{1388,1},'_'}],
         [[{call,
               {1388,1},
               {remote,
                   {1388,1},
                   {atom,{1388,1},fake},
                   {atom,{1388,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1388,588},{atom,{1388,1},ignore}]},
     {clause,
         {1388,1},
         [{var,{1388,30},'From'},{var,{1388,36},'To'}],
         [],
         [{debug_line,1389,589},
          {'case',
              {1389,5},
              {'case',
                  {1389,10},
                  {call,
                      {1389,10},
                      {atom,{1389,10},is_compiler_generated},
                      [{var,{1389,32},'From'}]},
                  [{clause,
                       {1389,10},
                       [{atom,{1389,10},true}],
                       [],
                       [{debug_line,1390,590},
                        {op,{1390,9},
                            'not',
                            {call,
                                {1390,13},
                                {atom,{1390,13},is_compiler_generated},
                                [{var,{1390,35},'To'}]}}]},
                   {clause,
                       {1389,10},
                       [{atom,{1389,10},false}],
                       [],
                       [{atom,{1389,10},false}]},
                   {clause,
                       [{generated,true},{location,{1389,10}}],
                       [{var,{1389,10},cov1}],
                       [],
                       [{call,
                            {1389,10},
                            {remote,
                                {1389,10},
                                {atom,{1389,10},erlang},
                                {atom,{1389,10},error}},
                            [{block,0,
                                 [{tuple,
                                      {1389,10},
                                      [{atom,{1389,10},badarg},
                                       {var,{1389,10},cov1}]}]}]}]}]},
              [{clause,
                   {1391,9},
                   [{atom,{1391,9},true}],
                   [],
                   [{debug_line,1392,591},
                    {match,
                        {1392,13},
                        {var,{1392,13},'Ann'},
                        {cons,
                            {1392,19},
                            {atom,{1392,20},compiler_generated},
                            {call,
                                {1392,39},
                                {remote,
                                    {1392,43},
                                    {atom,{1392,39},cerl},
                                    {atom,{1392,44},get_ann}},
                                [{var,{1392,52},'To'}]}}},
                    {debug_line,1393,592},
                    {call,
                        {1393,13},
                        {remote,
                            {1393,17},
                            {atom,{1393,13},cerl},
                            {atom,{1393,18},set_ann}},
                        [{var,{1393,26},'To'},{var,{1393,30},'Ann'}]}]},
               {clause,
                   {1394,9},
                   [{atom,{1394,9},false}],
                   [],
                   [{debug_line,1395,593},{var,{1395,13},'To'}]}]}]}]}.
{function,
 {1402,1},
 warn_no_clause_match,2,
 [{clause,
   {1402,1},
   [{var,{1402,1},'_'},{var,{1402,1},'_'}],
   [[{call,
      {1402,1},
      {remote,{1402,1},{atom,{1402,1},fake},{atom,{1402,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1402,594},{atom,{1402,1},ignore}]},
  {clause,
   {1402,1},
   [{var,{1402,22},'CaseOrig'},{var,{1402,32},'CaseOpt'}],
   [],
   [{debug_line,1403,595},
    {match,
     {1403,5},
     {var,{1403,5},'OrigCs'},
     {call,
      {1403,14},
      {remote,{1403,18},{atom,{1403,14},cerl},{atom,{1403,19},case_clauses}},
      [{var,{1403,32},'CaseOrig'}]}},
    {debug_line,1404,596},
    {match,
     {1404,5},
     {var,{1404,5},'OptCs'},
     {call,
      {1404,13},
      {remote,{1404,17},{atom,{1404,13},cerl},{atom,{1404,18},case_clauses}},
      [{var,{1404,31},'CaseOpt'}]}},
    {debug_line,1405,597},
    {'case',
     {1405,5},
     {'case',
      {1405,10},
      {call,
       {1405,10},
       {remote,{1405,10},{atom,{1405,10},lists},{atom,{1405,10},any}},
       [{block,0,
         [{'fun',
           {1405,14},
           {clauses,
            [{clause,
              {1405,17},
              [{var,{1405,18},'C'}],
              [],
              [{op,
                {1405,24},
                'not',
                {call,
                 {1405,28},
                 {atom,{1405,28},is_compiler_generated},
                 [{var,{1405,50},'C'}]}}]}]}}]},
        {var,{1405,58},'OrigCs'}]},
      [{clause,
        {1405,10},
        [{atom,{1405,10},true}],
        [],
        [{debug_line,1406,598},
         {call,
          {1406,2},
          {remote,{1406,2},{atom,{1406,2},lists},{atom,{1406,2},all}},
          [{block,0,[{'fun',{1406,6},{function,is_compiler_generated,1}}]},
           {var,{1406,35},'OptCs'}]}]},
       {clause,{1405,10},[{atom,{1405,10},false}],[],[{atom,{1405,10},false}]},
       {clause,
        [{generated,true},{location,{1405,10}}],
        [{var,{1405,10},cov1}],
        [],
        [{call,
          {1405,10},
          {remote,{1405,10},{atom,{1405,10},erlang},{atom,{1405,10},error}},
          [{block,0,
            [{tuple,
              {1405,10},
              [{atom,{1405,10},badarg},{var,{1405,10},cov1}]}]}]}]}]},
     [{clause,
       {1407,2},
       [{atom,{1407,2},true}],
       [],
       [{debug_line,1411,599},
        {call,
         {1411,6},
         {atom,{1411,6},add_warning},
         [{var,{1411,18},'CaseOrig'},
          {block,0,
           [{tuple,
             {1411,28},
             [{atom,{1411,29},nomatch},{atom,{1411,37},no_clause}]}]}]}]},
      {clause,
       {1412,2},
       [{atom,{1412,2},false}],
       [],
       [{debug_line,1416,600},{atom,{1416,6},ok}]}]}]}]}.
{function,
 {1423,1},
 clauses,6,
 [{clause,
   {1423,1},
   [{var,{1423,1},'_'},
    {var,{1423,1},'_'},
    {var,{1423,1},'_'},
    {var,{1423,1},'_'},
    {var,{1423,1},'_'},
    {var,{1423,1},'_'}],
   [[{call,
      {1423,1},
      {remote,{1423,1},{atom,{1423,1},fake},{atom,{1423,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1423,601},{atom,{1423,1},ignore}]},
  {clause,
   {1423,1},
   [{var,{1423,9},'E'},
    {cons,{1423,12},{var,{1423,13},'C0'},{var,{1423,16},'Cs'}},
    {var,{1423,21},'Ctxt'},
    {var,{1423,27},'Sub'},
    {var,{1423,32},'LitExpr'},
    {var,{1423,41},'Anno'}],
   [],
   [{debug_line,1424,602},
    {match,
     {1424,5},
     {tuple,
      {1424,5},
      [{atom,{1424,5},c_clause},
       {var,{1424,5},'_'},
       {var,{1424,20},'Ps'},
       {var,{1424,29},'G'},
       {var,{1424,5},'_'}]},
     {match,
      {1424,34},
      {var,{1424,34},'C1'},
      {call,
       {1424,39},
       {atom,{1424,39},clause},
       [{var,{1424,46},'C0'},
        {var,{1424,50},'E'},
        {var,{1424,53},'Ctxt'},
        {var,{1424,59},'Sub'}]}}},
    {debug_line,1426,603},
    {'case',
     {1426,5},
     {tuple,
      {1426,10},
      [{call,
        {1426,11},
        {atom,{1426,11},will_match},
        [{var,{1426,22},'E'},{var,{1426,25},'Ps'}]},
       {call,{1426,29},{atom,{1426,29},will_succeed},[{var,{1426,42},'G'}]}]},
     [{clause,
       {1427,2},
       [{tuple,{1427,2},[{atom,{1427,3},yes},{atom,{1427,7},yes}]}],
       [],
       [{debug_line,1428,604},
        {'case',
         {1428,6},
         {var,{1428,11},'LitExpr'},
         [{clause,
           {1429,3},
           [{atom,{1429,3},false}],
           [],
           [{debug_line,1430,605},
            {match,
             {1430,7},
             {var,{1430,7},'Line'},
             {call,
              {1430,14},
              {atom,{1430,14},get_line},
              [{block,0,
                [{call,
                  {1430,23},
                  {remote,
                   {1430,27},
                   {atom,{1430,23},cerl},
                   {atom,{1430,28},get_ann}},
                  [{var,{1430,36},'C1'}]}]}]}},
            {debug_line,1431,606},
            {call,
             {1431,7},
             {atom,{1431,7},shadow_warning},
             [{var,{1431,22},'Cs'},
              {var,{1431,26},'Line'},
              {var,{1431,32},'Anno'}]}]},
          {clause,
           {1432,3},
           [{atom,{1432,3},true}],
           [],
           [{debug_line,1436,607},{atom,{1436,7},ok}]}]},
        {debug_line,1438,608},
        {cons,{1438,6},{var,{1438,7},'C1'},{nil,{1438,9}}}]},
      {clause,
       {1439,2},
       [{tuple,{1439,2},[{var,{1439,3},'_Mat'},{atom,{1439,8},no}]}],
       [],
       [{debug_line,1440,609},
        {call,
         {1440,13},
         {atom,{1440,13},add_warning},
         [{var,{1440,25},'C1'},
          {block,0,
           [{tuple,
             {1440,29},
             [{atom,{1440,30},nomatch},{atom,{1440,38},guard}]}]}]},
        {debug_line,1441,610},
        {call,
         {1441,6},
         {atom,{1441,6},clauses},
         [{var,{1441,14},'E'},
          {var,{1441,17},'Cs'},
          {var,{1441,21},'Ctxt'},
          {var,{1441,27},'Sub'},
          {var,{1441,32},'LitExpr'},
          {var,{1441,41},'Anno'}]}]},
      {clause,
       {1442,2},
       [{tuple,{1442,2},[{var,{1442,3},'_Mat'},{var,{1442,8},'_Suc'}]}],
       [],
       [{debug_line,1443,611},
        {cons,
         {1443,6},
         {var,{1443,7},'C1'},
         {call,
          {1443,10},
          {atom,{1443,10},clauses},
          [{var,{1443,18},'E'},
           {var,{1443,21},'Cs'},
           {var,{1443,25},'Ctxt'},
           {var,{1443,31},'Sub'},
           {var,{1443,36},'LitExpr'},
           {var,{1443,45},'Anno'}]}}]}]}]},
  {clause,
   {1445,1},
   [{var,{1445,9},'_'},
    {nil,{1445,12}},
    {var,{1445,16},'_'},
    {var,{1445,19},'_'},
    {var,{1445,22},'_'},
    {var,{1445,25},'_'}],
   [],
   [{debug_line,1445,612},{nil,{1445,31}}]}]}.
{function,
 {1447,1},
 shadow_warning,3,
 [{clause,
   {1447,1},
   [{var,{1447,1},'_'},{var,{1447,1},'_'},{var,{1447,1},'_'}],
   [[{call,
      {1447,1},
      {remote,{1447,1},{atom,{1447,1},fake},{atom,{1447,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1447,613},{atom,{1447,1},ignore}]},
  {clause,
   {1447,1},
   [{cons,{1447,16},{var,{1447,17},'C'},{var,{1447,19},'Cs'}},
    {atom,{1447,24},none},
    {var,{1447,30},'Anno'}],
   [],
   [{debug_line,1448,614},
    {call,
     {1448,5},
     {atom,{1448,5},add_warning},
     [{var,{1448,17},'C'},
      {block,0,
       [{tuple,
         {1448,20},
         [{atom,{1448,21},nomatch},{atom,{1448,29},shadow}]}]}]},
    {debug_line,1449,615},
    {call,
     {1449,5},
     {atom,{1449,5},shadow_warning},
     [{var,{1449,20},'Cs'},{atom,{1449,24},none},{var,{1449,30},'Anno'}]}]},
  {clause,
   {1450,1},
   [{cons,{1450,16},{var,{1450,17},'C'},{var,{1450,19},'Cs'}},
    {var,{1450,24},'Line'},
    {var,{1450,30},'Anno'}],
   [],
   [{debug_line,1451,616},
    {'case',
     {1451,5},
     {call,
      {1451,10},
      {remote,{1451,10},{atom,{1451,10},lists},{atom,{1451,10},keyfind}},
      [{atom,{1451,18},function},
       {integer,{1451,28},1},
       {var,{1451,31},'Anno'}]},
     [{clause,
       {1452,2},
       [{tuple,
         {1452,2},
         [{atom,{1452,3},function},
          {tuple,
           {1452,13},
           [{var,{1452,14},'Name'},{var,{1452,20},'Arity'}]}]}],
       [],
       [{debug_line,1453,617},
        {call,
         {1453,13},
         {atom,{1453,13},add_warning},
         [{var,{1453,25},'C'},
          {block,0,
           [{tuple,
             {1453,28},
             [{atom,{1453,29},nomatch},
              {tuple,
               {1453,37},
               [{atom,{1453,38},shadow},
                {var,{1453,45},'Line'},
                {tuple,
                 {1453,50},
                 [{var,{1453,51},'Name'},{var,{1453,56},'Arity'}]}]}]}]}]}]},
      {clause,
       {1454,2},
       [{var,{1454,2},'_'}],
       [],
       [{debug_line,1455,618},
        {call,
         {1455,13},
         {atom,{1455,13},add_warning},
         [{var,{1455,25},'C'},
          {block,0,
           [{tuple,
             {1455,28},
             [{atom,{1455,29},nomatch},
              {tuple,
               {1455,37},
               [{atom,{1455,38},shadow},{var,{1455,45},'Line'}]}]}]}]}]}]},
    {debug_line,1457,619},
    {call,
     {1457,5},
     {atom,{1457,5},shadow_warning},
     [{var,{1457,20},'Cs'},{var,{1457,24},'Line'},{var,{1457,30},'Anno'}]}]},
  {clause,
   {1458,1},
   [{nil,{1458,16}},{var,{1458,20},'_'},{var,{1458,23},'_'}],
   [],
   [{debug_line,1458,620},{atom,{1458,29},ok}]}]}.
{function,{1464,1},
          will_succeed,1,
          [{clause,{1464,1},
                   [{var,{1464,1},'_'}],
                   [[{call,{1464,1},
                           {remote,{1464,1},
                                   {atom,{1464,1},fake},
                                   {atom,{1464,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1464,621},{atom,{1464,1},ignore}]},
           {clause,{1464,1},
                   [{tuple,{1464,14},
                           [{atom,{1464,14},c_literal},
                            {var,{1464,14},'_'},
                            {atom,{1464,29},true}]}],
                   [],
                   [{debug_line,1464,622},{atom,{1464,39},yes}]},
           {clause,{1465,1},
                   [{tuple,{1465,14},
                           [{atom,{1465,14},c_literal},
                            {var,{1465,14},'_'},
                            {atom,{1465,29},false}]}],
                   [],
                   [{debug_line,1465,623},{atom,{1465,40},no}]},
           {clause,{1466,1},
                   [{var,{1466,14},'_Guard'}],
                   [],
                   [{debug_line,1466,624},
                    {atom,[{text,"'maybe'"},{location,{1466,25}}],'maybe'}]}]}.
{function,
    {1473,1},
    will_match,2,
    [{clause,
         {1473,1},
         [{var,{1473,1},'_'},{var,{1473,1},'_'}],
         [[{call,
               {1473,1},
               {remote,
                   {1473,1},
                   {atom,{1473,1},fake},
                   {atom,{1473,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1473,625},{atom,{1473,1},ignore}]},
     {clause,
         {1473,1},
         [{tuple,
              {1473,12},
              [{atom,{1473,12},c_values},
               {var,{1473,12},'_'},
               {var,{1473,25},'Es'}]},
          {var,{1473,30},'Ps'}],
         [],
         [{debug_line,1474,626},
          {call,
              {1474,5},
              {atom,{1474,5},will_match_1},
              [{block,0,
                   [{call,
                        {1474,18},
                        {remote,
                            {1474,30},
                            {atom,{1474,18},cerl_clauses},
                            {atom,{1474,31},match_list}},
                        [{var,{1474,42},'Ps'},{var,{1474,46},'Es'}]}]}]}]},
     {clause,
         {1475,1},
         [{var,{1475,12},'E'},
          {cons,{1475,15},{var,{1475,16},'P'},{nil,{1475,17}}}],
         [],
         [{debug_line,1476,627},
          {call,
              {1476,5},
              {atom,{1476,5},will_match_1},
              [{block,0,
                   [{call,
                        {1476,18},
                        {remote,
                            {1476,30},
                            {atom,{1476,18},cerl_clauses},
                            {atom,{1476,31},match}},
                        [{var,{1476,37},'P'},{var,{1476,40},'E'}]}]}]}]}]}.
{function,{1478,1},
          will_match_1,1,
          [{clause,{1478,1},
                   [{var,{1478,1},'_'}],
                   [[{call,{1478,1},
                           {remote,{1478,1},
                                   {atom,{1478,1},fake},
                                   {atom,{1478,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1478,628},{atom,{1478,1},ignore}]},
           {clause,{1478,1},
                   [{tuple,{1478,14},
                           [{atom,{1478,15},false},{var,{1478,21},'_'}]}],
                   [],
                   [{debug_line,1478,629},
                    {atom,[{text,"'maybe'"},{location,{1478,28}}],'maybe'}]},
           {clause,{1479,1},
                   [{tuple,{1479,14},
                           [{atom,{1479,15},true},{var,{1479,20},'_'}]}],
                   [],
                   [{debug_line,1479,630},{atom,{1479,27},yes}]}]}.
{function,
    {1505,1},
    opt_bool_case,2,
    [{clause,
         {1505,1},
         [{var,{1505,1},'_'},{var,{1505,1},'_'}],
         [[{call,
               {1505,1},
               {remote,
                   {1505,1},
                   {atom,{1505,1},fake},
                   {atom,{1505,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1505,631},{atom,{1505,1},ignore}]},
     {clause,
         {1505,1},
         [{match,
              {1505,15},
              {tuple,
                  {1505,15},
                  [{atom,{1505,15},c_case},
                   {var,{1505,15},'_'},
                   {var,{1505,15},'_'},
                   {var,{1505,15},'_'}]},
              {var,{1505,25},'Case'}},
          {tuple,
              {1505,31},
              [{atom,{1505,31},sub},
               {var,{1505,31},'_'},
               {var,{1505,31},'_'},
               {var,{1505,31},'_'},
               {atom,{1505,45},true},
               {var,{1505,31},'_'}]}],
         [],
         [{debug_line,1507,632},{var,{1507,5},'Case'}]},
     {clause,
         {1508,1},
         [{match,
              {1508,15},
              {tuple,
                  {1508,15},
                  [{atom,{1508,15},c_case},
                   {var,{1508,15},'_'},
                   {var,{1508,27},'Arg'},
                   {var,{1508,15},'_'}]},
              {var,{1508,32},'Case0'}},
          {tuple,
              {1508,39},
              [{atom,{1508,39},sub},
               {var,{1508,39},'_'},
               {var,{1508,39},'_'},
               {var,{1508,39},'_'},
               {atom,{1508,53},false},
               {var,{1508,39},'_'}]}],
         [],
         [{debug_line,1509,633},
          {'case',
              {1509,5},
              {call,
                  {1509,10},
                  {atom,{1509,10},is_bool_expr},
                  [{var,{1509,23},'Arg'}]},
              [{clause,
                   {1510,2},
                   [{atom,{1510,2},false}],
                   [],
                   [{debug_line,1511,634},{var,{1511,6},'Case0'}]},
               {clause,
                   {1512,2},
                   [{atom,{1512,2},true}],
                   [],
                   [{debug_line,1513,635},
                    {'try',
                        {1513,6},
                        [{call,
                             {1513,10},
                             {atom,{1513,10},opt_bool_clauses},
                             [{var,{1513,27},'Case0'}]}],
                        [{clause,
                             {1514,3},
                             [{var,{1514,3},'Case'}],
                             [],
                             [{debug_line,1515,636},
                              {call,
                                  {1515,7},
                                  {atom,{1515,7},opt_bool_not},
                                  [{var,{1515,20},'Case'}]}]}],
                        [{clause,
                             {1517,3},
                             [{tuple,
                                  {1517,3},
                                  [{atom,{1517,3},throw},
                                   {atom,{1517,3},impossible},
                                   {var,{1517,3},'_'}]}],
                             [],
                             [{debug_line,1518,637},{var,{1518,7},'Case0'}]}],
                        []}]}]}]}]}.
{function,
    {1522,1},
    opt_bool_clauses,1,
    [{clause,
         {1522,1},
         [{var,{1522,1},'_'}],
         [[{call,
               {1522,1},
               {remote,
                   {1522,1},
                   {atom,{1522,1},fake},
                   {atom,{1522,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1522,638},{atom,{1522,1},ignore}]},
     {clause,
         {1522,1},
         [{match,
              {1522,18},
              {tuple,
                  {1522,18},
                  [{atom,{1522,18},c_case},
                   {var,{1522,18},'_'},
                   {var,{1522,18},'_'},
                   {var,{1522,34},'Cs'}]},
              {var,{1522,38},'Case'}}],
         [],
         [{debug_line,1523,639},
          {block,
              {1523,5},
              [{match,
                   {1523,17},
                   {var,{1523,17},rec52},
                   {call,
                       {1523,25},
                       {atom,{1523,25},opt_bool_clauses},
                       [{var,{1523,42},'Cs'},
                        {atom,{1523,46},false},
                        {atom,{1523,53},false}]}},
               {match,{1523,5},{var,{1523,5},rec53},{var,{1523,5},'Case'}},
               {'case',
                   {1523,17},
                   {var,{1523,5},rec53},
                   [{clause,
                        {1523,17},
                        [{tuple,
                             {1523,17},
                             [{atom,{1523,17},c_case},
                              {var,{1523,17},'_'},
                              {var,{1523,17},'_'},
                              {var,{1523,17},'_'}]}],
                        [],
                        [{call,
                             {1523,17},
                             {remote,
                                 {1523,17},
                                 {atom,{1523,17},erlang},
                                 {atom,{1523,17},setelement}},
                             [{integer,{1523,17},4},
                              {var,{1523,5},rec53},
                              {var,{1523,17},rec52}]}]},
                    {clause,
                        [{generated,true},{location,{1523,17}}],
                        [{var,[{generated,true},{location,{1523,17}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{1523,17}}],
                             {remote,
                                 [{generated,true},{location,{1523,17}}],
                                 {atom,
                                     [{generated,true},{location,{1523,17}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{1523,17}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{1523,17}}],
                                  [{atom,
                                       [{generated,true},{location,{1523,17}}],
                                       badrecord},
                                   {var,{1523,5},rec53}]}]}]}]}]}]}]}.
{function,
 {1525,1},
 opt_bool_clauses,3,
 [{clause,
   {1525,1},
   [{var,{1525,1},'_'},{var,{1525,1},'_'},{var,{1525,1},'_'}],
   [[{call,
      {1525,1},
      {remote,{1525,1},{atom,{1525,1},fake},{atom,{1525,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1525,640},{atom,{1525,1},ignore}]},
  {clause,
   {1525,1},
   [{var,{1525,18},'Cs'},{atom,{1525,22},true},{atom,{1525,28},true}],
   [],
   [{debug_line,1528,641},
    {'case',
     {1528,5},
     {var,{1528,10},'Cs'},
     [{clause,
       {1529,2},
       [{cons,{1529,2},{var,{1529,3},'_'},{var,{1529,5},'_'}}],
       [],
       [{debug_line,1530,642},
        {call,
         {1530,6},
         {atom,{1530,6},shadow_warning},
         [{var,{1530,21},'Cs'},{atom,{1530,25},none},{nil,{1530,31}}]},
        {debug_line,1531,643},
        {nil,{1531,6}}]},
      {clause,
       {1532,2},
       [{nil,{1532,2}}],
       [],
       [{debug_line,1533,644},{nil,{1533,6}}]}]}]},
  {clause,
   {1535,1},
   [{cons,
     {1535,18},
     {match,
      {1535,19},
      {tuple,
       {1535,19},
       [{atom,{1535,19},c_clause},
        {var,{1535,19},'_'},
        {cons,
         {1535,34},
         {tuple,
          {1535,35},
          [{atom,{1535,35},c_literal},
           {var,{1535,35},'_'},
           {var,{1535,50},'Lit'}]},
         {nil,{1535,54}}},
        {tuple,
         {1536,14},
         [{atom,{1536,14},c_literal},
          {var,{1536,14},'_'},
          {atom,{1536,29},true}]},
        {var,{1535,19},'_'}]},
      {var,{1536,36},'C'}},
     {var,{1536,38},'Cs'}},
    {var,{1536,43},'SeenT'},
    {var,{1536,50},'SeenF'}],
   [],
   [{debug_line,1537,645},
    {'case',
     {1537,5},
     {call,
      {1537,10},
      {remote,{1537,10},{atom,{1537,10},erlang},{atom,{1537,10},is_boolean}},
      [{var,{1537,21},'Lit'}]},
     [{clause,
       {1538,2},
       [{atom,{1538,2},false}],
       [],
       [{debug_line,1540,646},
        {call,
         {1540,13},
         {atom,{1540,13},add_warning},
         [{var,{1540,25},'C'},
          {block,0,
           [{tuple,
             {1540,28},
             [{atom,{1540,29},nomatch},{atom,{1540,37},clause_type}]}]}]},
        {debug_line,1541,647},
        {call,
         {1541,6},
         {atom,{1541,6},opt_bool_clauses},
         [{var,{1541,23},'Cs'},
          {var,{1541,27},'SeenT'},
          {var,{1541,34},'SeenF'}]}]},
      {clause,
       {1542,2},
       [{atom,{1542,2},true}],
       [],
       [{debug_line,1544,648},
        {'case',
         {1544,6},
         {tuple,
          {1544,11},
          [{var,{1544,12},'Lit'},
           {var,{1544,16},'SeenT'},
           {var,{1544,22},'SeenF'}]},
         [{clause,
           {1545,17},
           [{tuple,
             {1545,17},
             [{atom,{1545,18},false},
              {var,{1545,24},'_'},
              {atom,{1545,26},false}]}],
           [],
           [{debug_line,1546,649},
            {cons,
             {1546,21},
             {var,{1546,22},'C'},
             {call,
              {1546,24},
              {atom,{1546,24},opt_bool_clauses},
              [{var,{1546,41},'Cs'},
               {var,{1546,45},'SeenT'},
               {atom,{1546,52},true}]}}]},
          {clause,
           {1547,17},
           [{tuple,
             {1547,17},
             [{atom,{1547,18},true},
              {atom,{1547,23},false},
              {var,{1547,29},'_'}]}],
           [],
           [{debug_line,1548,650},
            {cons,
             {1548,21},
             {var,{1548,22},'C'},
             {call,
              {1548,24},
              {atom,{1548,24},opt_bool_clauses},
              [{var,{1548,41},'Cs'},
               {atom,{1548,45},true},
               {var,{1548,51},'SeenF'}]}}]},
          {clause,
           {1549,17},
           [{var,{1549,17},'_'}],
           [],
           [{debug_line,1550,651},
            {call,
             {1550,21},
             {atom,{1550,21},add_warning},
             [{var,{1550,33},'C'},
              {block,0,
               [{tuple,
                 {1550,36},
                 [{atom,{1550,37},nomatch},{atom,{1550,45},shadow}]}]}]},
            {debug_line,1551,652},
            {call,
             {1551,21},
             {atom,{1551,21},opt_bool_clauses},
             [{var,{1551,38},'Cs'},
              {var,{1551,42},'SeenT'},
              {var,{1551,49},'SeenF'}]}]}]}]}]}]},
  {clause,
   {1554,1},
   [{cons,
     {1554,18},
     {match,
      {1554,19},
      {tuple,
       {1554,19},
       [{atom,{1554,19},c_clause},
        {var,{1554,19},'_'},
        {var,{1554,34},'Ps'},
        {tuple,
         {1554,43},
         [{atom,{1554,43},c_literal},
          {var,{1554,43},'_'},
          {atom,{1554,58},true}]},
        {var,{1554,19},'_'}]},
      {var,{1554,65},'C'}},
     {var,{1554,67},'Cs'}},
    {var,{1554,72},'SeenT'},
    {var,{1554,79},'SeenF'}],
   [],
   [{debug_line,1555,653},
    {'case',
     {1555,5},
     {var,{1555,10},'Ps'},
     [{clause,
       {1556,2},
       [{cons,
         {1556,2},
         {tuple,
          {1556,3},
          [{atom,{1556,3},c_var},{var,{1556,3},'_'},{var,{1556,3},'_'}]},
         {nil,{1556,11}}}],
       [],
       [{debug_line,1558,654},
        {call,
         {1558,6},
         {remote,{1558,6},{atom,{1558,6},erlang},{atom,{1558,6},throw}},
         [{atom,{1558,12},impossible}]}]},
      {clause,
       {1559,2},
       [{cons,
         {1559,2},
         {tuple,
          {1559,3},
          [{atom,{1559,3},c_alias},
           {var,{1559,3},'_'},
           {var,{1559,3},'_'},
           {var,{1559,3},'_'}]},
         {nil,{1559,13}}}],
       [],
       [{debug_line,1561,655},
        {call,
         {1561,6},
         {remote,{1561,6},{atom,{1561,6},erlang},{atom,{1561,6},throw}},
         [{atom,{1561,12},impossible}]}]},
      {clause,
       {1562,2},
       [{var,{1562,2},'_'}],
       [],
       [{debug_line,1565,656},
        {call,
         {1565,6},
         {atom,{1565,6},add_warning},
         [{var,{1565,18},'C'},
          {block,0,
           [{tuple,
             {1565,21},
             [{atom,{1565,22},nomatch},{atom,{1565,30},clause_type}]}]}]},
        {debug_line,1566,657},
        {call,
         {1566,6},
         {atom,{1566,6},opt_bool_clauses},
         [{var,{1566,23},'Cs'},
          {var,{1566,27},'SeenT'},
          {var,{1566,34},'SeenF'}]}]}]}]},
  {clause,
   {1568,1},
   [{cons,{1568,18},{var,{1568,19},'_'},{var,{1568,21},'_'}},
    {var,{1568,25},'_'},
    {var,{1568,28},'_'}],
   [],
   [{debug_line,1570,658},
    {call,
     {1570,5},
     {remote,{1570,5},{atom,{1570,5},erlang},{atom,{1570,5},throw}},
     [{atom,{1570,11},impossible}]}]}]}.
{function,
 {1596,1},
 opt_bool_not,1,
 [{clause,
   {1596,1},
   [{var,{1596,1},'_'}],
   [[{call,
      {1596,1},
      {remote,{1596,1},{atom,{1596,1},fake},{atom,{1596,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1596,659},{atom,{1596,1},ignore}]},
  {clause,
   {1596,1},
   [{match,
     {1596,14},
     {tuple,
      {1596,14},
      [{atom,{1596,14},c_case},
       {var,{1596,14},'_'},
       {var,{1596,26},'Arg'},
       {var,{1596,38},'Cs0'}]},
     {var,{1596,43},'Case0'}}],
   [],
   [{debug_line,1597,660},
    {'case',
     {1597,5},
     {var,{1597,10},'Arg'},
     [{clause,
       {1598,2},
       [{tuple,
         {1598,2},
         [{atom,{1598,2},c_call},
          {var,{1598,15},'Anno'},
          {tuple,
           {1598,27},
           [{atom,{1598,27},c_literal},
            {var,{1598,27},'_'},
            {atom,{1598,42},erlang}]},
          {tuple,
           {1599,9},
           [{atom,{1599,9},c_literal},
            {var,{1599,9},'_'},
            {atom,{1599,24},'not'}]},
          {cons,{1600,9},{var,{1600,10},'Expr'},{nil,{1600,14}}}]}],
       [],
       [{debug_line,1601,661},
        {match,
         {1601,6},
         {var,{1601,6},'Cs'},
         {op,
          {1601,48},
          '++',
          {lc,
           {1601,11},
           {block,0,
            [{call,
              {1601,12},
              {atom,{1601,12},opt_bool_not_invert},
              [{var,{1601,32},'C'}]}]},
           [{block,0,[{atom,{1601,43},true}]},
            {generate,{1601,40},{var,{1601,38},'C'},{var,{1601,43},'Cs0'}}]},
          {cons,
           {1602,4},
           {tuple,
            {1602,5},
            [{atom,{1602,5},c_clause},
             {cons,
              {1602,20},
              {atom,{1602,21},compiler_generated},
              {nil,{1602,39}}},
             {cons,
              {1603,13},
              {tuple,
               {1603,14},
               [{atom,{1603,14},c_var},
                {nil,{1603,14}},
                {atom,{1603,26},cor_variable}]},
              {nil,{1603,39}}},
             {tuple,
              {1604,14},
              [{atom,{1604,14},c_literal},
               {nil,{1604,14}},
               {atom,{1604,29},true}]},
             {tuple,
              {1605,13},
              [{atom,{1605,13},c_call},
               {var,{1605,26},'Anno'},
               {tuple,
                {1606,14},
                [{atom,{1606,14},c_literal},
                 {nil,{1606,14}},
                 {atom,{1606,29},erlang}]},
               {tuple,
                {1607,12},
                [{atom,{1607,12},c_literal},
                 {nil,{1607,12}},
                 {atom,{1607,27},error}]},
               {cons,
                {1608,12},
                {tuple,
                 {1608,13},
                 [{atom,{1608,13},c_literal},
                  {nil,{1608,13}},
                  {atom,{1608,28},badarg}]},
                {nil,{1608,35}}}]}]},
           {nil,{1608,38}}}}},
        {debug_line,1609,662},
        {match,
         {1609,6},
         {var,{1609,6},'Case'},
         {block,
          {1609,13},
          [{match,{1609,13},{var,{1609,13},rec54},{var,{1609,13},'Case0'}},
           {'case',
            {1609,26},
            {var,{1609,13},rec54},
            [{clause,
              {1609,26},
              [{tuple,
                {1609,26},
                [{atom,{1609,26},c_case},
                 {var,{1609,26},'_'},
                 {var,{1609,26},'_'},
                 {var,{1609,26},'_'}]}],
              [],
              [{call,
                {1609,26},
                {remote,
                 {1609,26},
                 {atom,{1609,26},erlang},
                 {atom,{1609,26},setelement}},
                [{integer,{1609,26},3},
                 {call,
                  {1609,35},
                  {remote,
                   {1609,35},
                   {atom,{1609,35},erlang},
                   {atom,{1609,35},setelement}},
                  [{integer,{1609,35},4},
                   {var,{1609,13},rec54},
                   {var,{1609,43},'Cs'}]},
                 {var,{1609,30},'Expr'}]}]},
             {clause,
              [{generated,true},{location,{1609,26}}],
              [{var,[{generated,true},{location,{1609,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1609,26}}],
                {remote,
                 [{generated,true},{location,{1609,26}}],
                 {atom,[{generated,true},{location,{1609,26}}],erlang},
                 {atom,[{generated,true},{location,{1609,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{1609,26}}],
                  [{atom,[{generated,true},{location,{1609,26}}],badrecord},
                   {var,{1609,13},rec54}]}]}]}]}]}},
        {debug_line,1610,663},
        {call,
         {1610,6},
         {atom,{1610,6},opt_bool_not},
         [{var,{1610,19},'Case'}]}]},
      {clause,
       {1611,2},
       [{var,{1611,2},'_'}],
       [],
       [{debug_line,1612,664},{var,{1612,13},'Case0'}]}]}]}]}.
{function,
    {1615,1},
    opt_bool_not_invert,1,
    [{clause,
         {1615,1},
         [{var,{1615,1},'_'}],
         [[{call,
               {1615,1},
               {remote,
                   {1615,1},
                   {atom,{1615,1},fake},
                   {atom,{1615,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1615,665},{atom,{1615,1},ignore}]},
     {clause,
         {1615,1},
         [{match,
              {1615,21},
              {tuple,
                  {1615,21},
                  [{atom,{1615,21},c_clause},
                   {var,{1615,21},'_'},
                   {cons,
                       {1615,36},
                       {tuple,
                           {1615,37},
                           [{atom,{1615,37},c_literal},
                            {var,{1615,37},'_'},
                            {var,{1615,52},'Bool'}]},
                       {nil,{1615,57}}},
                   {var,{1615,21},'_'},
                   {var,{1615,21},'_'}]},
              {var,{1615,60},'C'}}],
         [],
         [{debug_line,1616,666},
          {block,
              {1616,5},
              [{match,
                   {1616,16},
                   {var,{1616,16},rec55},
                   {cons,
                       {1616,21},
                       {tuple,
                           {1616,22},
                           [{atom,{1616,22},c_literal},
                            {nil,{1616,22}},
                            {op,{1616,37},'not',{var,{1616,41},'Bool'}}]},
                       {nil,{1616,46}}}},
               {match,{1616,5},{var,{1616,5},rec56},{var,{1616,5},'C'}},
               {'case',
                   {1616,16},
                   {var,{1616,5},rec56},
                   [{clause,
                        {1616,16},
                        [{tuple,
                             {1616,16},
                             [{atom,{1616,16},c_clause},
                              {var,{1616,16},'_'},
                              {var,{1616,16},'_'},
                              {var,{1616,16},'_'},
                              {var,{1616,16},'_'}]}],
                        [],
                        [{call,
                             {1616,16},
                             {remote,
                                 {1616,16},
                                 {atom,{1616,16},erlang},
                                 {atom,{1616,16},setelement}},
                             [{integer,{1616,16},3},
                              {var,{1616,5},rec56},
                              {var,{1616,16},rec55}]}]},
                    {clause,
                        [{generated,true},{location,{1616,16}}],
                        [{var,[{generated,true},{location,{1616,16}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{1616,16}}],
                             {remote,
                                 [{generated,true},{location,{1616,16}}],
                                 {atom,
                                     [{generated,true},{location,{1616,16}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{1616,16}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{1616,16}}],
                                  [{atom,
                                       [{generated,true},{location,{1616,16}}],
                                       badrecord},
                                   {var,{1616,5},rec56}]}]}]}]}]}]}]}.
{function,
 {1623,1},
 eval_case,2,
 [{clause,
   {1623,1},
   [{var,{1623,1},'_'},{var,{1623,1},'_'}],
   [[{call,
      {1623,1},
      {remote,{1623,1},{atom,{1623,1},fake},{atom,{1623,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1623,667},{atom,{1623,1},ignore}]},
  {clause,
   {1623,1},
   [{match,
     {1623,11},
     {tuple,
      {1623,11},
      [{atom,{1623,11},c_case},
       {var,{1623,11},'_'},
       {var,{1623,23},'E'},
       {cons,
        {1623,33},
        {tuple,
         {1623,34},
         [{atom,{1623,34},c_clause},
          {var,{1623,34},'_'},
          {var,{1623,49},'Ps0'},
          {tuple,
           {1624,15},
           [{atom,{1624,15},c_literal},
            {var,{1624,15},'_'},
            {atom,{1624,30},true}]},
          {var,{1625,14},'B'}]},
        {nil,{1625,16}}}]},
     {var,{1625,19},'Case'}},
    {var,{1625,25},'Sub'}],
   [],
   [{debug_line,1626,668},
    {match,
     {1626,5},
     {var,{1626,5},'Es'},
     {'case',
      {1626,10},
      {call,
       {1626,15},
       {remote,{1626,19},{atom,{1626,15},cerl},{atom,{1626,20},is_c_values}},
       [{var,{1626,32},'E'}]},
      [{clause,
        {1627,7},
        [{atom,{1627,7},true}],
        [],
        [{debug_line,1627,669},
         {call,
          {1627,15},
          {remote,{1627,19},{atom,{1627,15},cerl},{atom,{1627,20},values_es}},
          [{var,{1627,30},'E'}]}]},
       {clause,
        {1628,7},
        [{atom,{1628,7},false}],
        [],
        [{debug_line,1628,670},
         {cons,{1628,16},{var,{1628,17},'E'},{nil,{1628,18}}}]}]}},
    {debug_line,1648,671},
    {match,
     {1648,5},
     {var,{1648,5},'Vs'},
     {call,
      {1648,10},
      {atom,{1648,10},make_vars},
      [{nil,{1648,20}},
       {block,0,
        [{call,
          {1648,24},
          {remote,{1648,24},{atom,{1648,24},erlang},{atom,{1648,24},length}},
          [{var,{1648,31},'Es'}]}]}]}},
    {debug_line,1649,672},
    {'case',
     {1649,5},
     {call,
      {1649,10},
      {remote,
       {1649,22},
       {atom,{1649,10},cerl_clauses},
       {atom,{1649,23},match_list}},
      [{var,{1649,34},'Ps0'},{var,{1649,39},'Vs'}]},
     [{clause,
       {1650,2},
       [{tuple,{1650,2},[{atom,{1650,3},false},{var,{1650,9},'_'}]}],
       [],
       [{debug_line,1655,673},{var,{1655,6},'Case'}]},
      {clause,
       {1656,2},
       [{tuple,{1656,2},[{atom,{1656,3},true},{var,{1656,8},'Bs'}]}],
       [],
       [{debug_line,1657,674},
        {call,{1657,6},{atom,{1657,6},eval_case_warn},[{var,{1657,21},'B'}]},
        {debug_line,1658,675},
        {match,
         {1658,6},
         {tuple,{1658,6},[{var,{1658,7},'Ps'},{var,{1658,10},'As'}]},
         {call,
          {1658,16},
          {remote,{1658,16},{atom,{1658,16},lists},{atom,{1658,16},unzip}},
          [{var,{1658,22},'Bs'}]}},
        {debug_line,1659,676},
        {match,
         {1659,6},
         {var,{1659,6},'InnerLet'},
         {call,
          {1659,17},
          {remote,{1659,21},{atom,{1659,17},cerl},{atom,{1659,22},c_let}},
          [{var,{1659,28},'Ps'},
           {block,0,
            [{call,
              {1659,32},
              {remote,
               {1659,40},
               {atom,{1659,32},core_lib},
               {atom,{1659,41},make_values}},
              [{var,{1659,53},'As'}]}]},
           {var,{1659,58},'B'}]}},
        {debug_line,1660,677},
        {match,
         {1660,6},
         {var,{1660,6},'Let'},
         {call,
          {1660,12},
          {remote,{1660,16},{atom,{1660,12},cerl},{atom,{1660,17},c_let}},
          [{var,{1660,23},'Vs'},
           {var,{1660,27},'E'},
           {var,{1660,30},'InnerLet'}]}},
        {debug_line,1661,678},
        {call,
         {1661,6},
         {atom,{1661,6},expr},
         [{var,{1661,11},'Let'},
          {block,0,
           [{call,
             {1661,16},
             {atom,{1661,16},sub_new},
             [{var,{1661,24},'Sub'}]}]}]}]}]}]},
  {clause,
   {1663,1},
   [{var,{1663,11},'Case'},{var,{1663,17},'_'}],
   [],
   [{debug_line,1663,679},{var,{1663,23},'Case'}]}]}.
{function,
    {1665,1},
    eval_case_warn,1,
    [{clause,
         {1665,1},
         [{var,{1665,1},'_'}],
         [[{call,
               {1665,1},
               {remote,
                   {1665,1},
                   {atom,{1665,1},fake},
                   {atom,{1665,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1665,680},{atom,{1665,1},ignore}]},
     {clause,
         {1665,1},
         [{match,
              {1665,16},
              {tuple,
                  {1665,16},
                  [{atom,{1665,16},c_primop},
                   {var,{1665,31},'Anno'},
                   {tuple,
                       {1666,10},
                       [{atom,{1666,10},c_literal},
                        {var,{1666,10},'_'},
                        {atom,{1666,25},match_fail}]},
                   {cons,{1667,10},{var,{1667,11},'_'},{nil,{1667,12}}}]},
              {var,{1667,15},'Core'}}],
         [],
         [{debug_line,1668,681},
          {'case',
              {1668,5},
              {call,
                  {1668,10},
                  {remote,
                      {1668,10},
                      {atom,{1668,10},lists},
                      {atom,{1668,10},keyfind}},
                  [{atom,{1668,18},eval_failure},
                   {integer,{1668,32},1},
                   {var,{1668,35},'Anno'}]},
              [{clause,
                   {1669,2},
                   [{atom,{1669,2},false}],
                   [],
                   [{debug_line,1670,682},{atom,{1670,6},ok}]},
               {clause,
                   {1671,2},
                   [{tuple,
                        {1671,2},
                        [{atom,{1671,3},eval_failure},
                         {atom,{1671,16},badmap}]}],
                   [],
                   [{debug_line,1673,683},
                    {call,
                        {1673,6},
                        {atom,{1673,6},add_warning},
                        [{var,{1673,18},'Core'},
                         {block,0,
                             [{tuple,
                                  {1673,24},
                                  [{atom,{1673,25},failed},
                                   {atom,{1673,32},bad_map_update}]}]}]}]}]}]},
     {clause,
         {1675,1},
         [{var,{1675,16},'_'}],
         [],
         [{debug_line,1675,684},{atom,{1675,22},ok}]}]}.
{function,
 {1698,1},
 case_opt,3,
 [{clause,
   {1698,1},
   [{var,{1698,1},'_'},{var,{1698,1},'_'},{var,{1698,1},'_'}],
   [[{call,
      {1698,1},
      {remote,{1698,1},{atom,{1698,1},fake},{atom,{1698,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1698,685},{atom,{1698,1},ignore}]},
  {clause,
   {1698,1},
   [{var,{1698,10},'Arg'},{var,{1698,15},'Cs0'},{var,{1698,20},'Sub'}],
   [],
   [{debug_line,1699,686},
    {match,
     {1699,5},
     {var,{1699,5},'Cs1'},
     {lc,
      {1699,11},
      {block,0,
       [{tuple,
         {1699,12},
         [{call,
           {1699,13},
           {remote,
            {1699,17},
            {atom,{1699,13},cerl},
            {atom,{1699,18},clause_pats}},
           [{var,{1699,30},'C'}]},
          {var,{1699,33},'C'},
          {nil,{1699,35}},
          {nil,{1699,38}}]}]},
      [{block,0,[{atom,{1699,50},true}]},
       {generate,{1699,47},{var,{1699,45},'C'},{var,{1699,50},'Cs0'}}]}},
    {debug_line,1700,687},
    {match,
     {1700,5},
     {var,{1700,5},'Args0'},
     {'case',
      {1700,13},
      {call,
       {1700,18},
       {remote,{1700,22},{atom,{1700,18},cerl},{atom,{1700,23},is_c_values}},
       [{var,{1700,35},'Arg'}]},
      [{clause,
        {1701,3},
        [{atom,{1701,3},false}],
        [],
        [{debug_line,1701,688},
         {cons,{1701,12},{var,{1701,13},'Arg'},{nil,{1701,16}}}]},
       {clause,
        {1702,3},
        [{atom,{1702,3},true}],
        [],
        [{debug_line,1702,689},
         {call,
          {1702,11},
          {remote,{1702,15},{atom,{1702,11},cerl},{atom,{1702,16},values_es}},
          [{var,{1702,26},'Arg'}]}]}]}},
    {debug_line,1704,690},
    {match,
     {1704,5},
     {var,{1704,5},'LitExpr'},
     {call,
      {1704,15},
      {remote,{1704,19},{atom,{1704,15},cerl},{atom,{1704,20},is_literal}},
      [{var,{1704,31},'Arg'}]}},
    {debug_line,1705,691},
    {match,
     {1705,5},
     {tuple,{1705,5},[{var,{1705,6},'Args'},{var,{1705,11},'Cs2'}]},
     {call,
      {1705,18},
      {atom,{1705,18},case_opt_args},
      [{var,{1705,32},'Args0'},
       {var,{1705,39},'Cs1'},
       {var,{1705,44},'Sub'},
       {var,{1705,49},'LitExpr'},
       {nil,{1705,58}}]}},
    {debug_line,1706,692},
    {match,
     {1706,5},
     {var,{1706,5},'Cs'},
     {lc,
      {1706,10},
      {block,0,
       [{call,
         {1706,11},
         {remote,
          {1706,15},
          {atom,{1706,11},cerl},
          {atom,{1706,16},update_c_clause}},
         [{var,{1706,32},'C'},
          {block,0,
           [{debug_line,1707,693},
            {call,
             {1707,11},
             {remote,
              {1707,11},
              {atom,{1707,11},lists},
              {atom,{1707,11},reverse}},
             [{var,{1707,19},'Ps'}]}]},
          {block,0,
           [{debug_line,1708,694},
            {call,
             {1708,11},
             {atom,{1708,11},letify},
             [{var,{1708,18},'Bs'},
              {block,0,
               [{call,
                 {1708,22},
                 {remote,
                  {1708,26},
                  {atom,{1708,22},cerl},
                  {atom,{1708,27},clause_guard}},
                 [{var,{1708,40},'C'}]}]}]}]},
          {block,0,
           [{debug_line,1709,695},
            {call,
             {1709,11},
             {atom,{1709,11},letify},
             [{var,{1709,18},'Bs'},
              {block,0,
               [{call,
                 {1709,22},
                 {remote,
                  {1709,26},
                  {atom,{1709,22},cerl},
                  {atom,{1709,27},clause_body}},
                 [{var,{1709,39},'C'}]}]}]}]}]}]},
      [{block,0,[{debug_line,1710,696},{atom,{1710,24},true}]},
       {generate_strict,
        {1710,20},
        {tuple,
         {1710,7},
         [{nil,{1710,8}},
          {var,{1710,11},'C'},
          {var,{1710,13},'Ps'},
          {var,{1710,16},'Bs'}]},
        {var,{1710,24},'Cs2'}}]}},
    {debug_line,1711,697},
    {tuple,
     {1711,5},
     [{call,
       {1711,6},
       {remote,
        {1711,14},
        {atom,{1711,6},core_lib},
        {atom,{1711,15},make_values}},
       [{var,{1711,27},'Args'}]},
      {var,{1711,33},'Cs'}]}]}]}.
{function,
 {1713,1},
 case_opt_args,5,
 [{clause,
   {1713,1},
   [{var,{1713,1},'_'},
    {var,{1713,1},'_'},
    {var,{1713,1},'_'},
    {var,{1713,1},'_'},
    {var,{1713,1},'_'}],
   [[{call,
      {1713,1},
      {remote,{1713,1},{atom,{1713,1},fake},{atom,{1713,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1713,698},{atom,{1713,1},ignore}]},
  {clause,
   {1713,1},
   [{cons,{1713,15},{var,{1713,16},'A0'},{var,{1713,19},'As0'}},
    {var,{1713,25},'Cs0'},
    {var,{1713,30},'Sub'},
    {var,{1713,35},'LitExpr'},
    {var,{1713,44},'Acc'}],
   [],
   [{debug_line,1714,699},
    {'case',
     {1714,5},
     {call,
      {1714,10},
      {atom,{1714,10},case_opt_arg},
      [{var,{1714,23},'A0'},
       {var,{1714,27},'Sub'},
       {var,{1714,32},'Cs0'},
       {var,{1714,37},'LitExpr'}]},
     [{clause,
       {1715,9},
       [{tuple,{1715,9},[{atom,{1715,10},error},{var,{1715,16},'Cs1'}]}],
       [],
       [{debug_line,1717,700},
        {match,
         {1717,13},
         {var,{1717,13},'Cs'},
         {lc,
          {1717,18},
          {block,0,
           [{tuple,
             {1717,19},
             [{var,{1717,20},'Ps'},
              {var,{1717,23},'C'},
              {cons,{1717,25},{var,{1717,26},'P'},{var,{1717,28},'PsAcc'}},
              {var,{1717,35},'Bs'}]}]},
          [{block,0,[{atom,{1717,66},true}]},
           {generate_strict,
            {1717,62},
            {tuple,
             {1717,42},
             [{cons,{1717,43},{var,{1717,44},'P'},{var,{1717,46},'Ps'}},
              {var,{1717,50},'C'},
              {var,{1717,52},'PsAcc'},
              {var,{1717,58},'Bs'}]},
            {var,{1717,66},'Cs1'}}]}},
        {debug_line,1718,701},
        {call,
         {1718,6},
         {atom,{1718,6},case_opt_args},
         [{var,{1718,20},'As0'},
          {var,{1718,25},'Cs'},
          {var,{1718,29},'Sub'},
          {var,{1718,34},'LitExpr'},
          {block,0,
           [{cons,{1718,43},{var,{1718,44},'A0'},{var,{1718,47},'Acc'}}]}]}]},
      {clause,
       {1719,2},
       [{tuple,
         {1719,2},
         [{atom,{1719,3},ok},{var,{1719,6},'As1'},{var,{1719,10},'Cs'}]}],
       [],
       [{debug_line,1722,702},
        {call,
         {1722,6},
         {atom,{1722,6},case_opt_args},
         [{block,0,
           [{op,{1722,23},'++',{var,{1722,20},'As1'},{var,{1722,25},'As0'}}]},
          {var,{1722,30},'Cs'},
          {var,{1722,34},'Sub'},
          {var,{1722,39},'LitExpr'},
          {var,{1722,48},'Acc'}]}]}]}]},
  {clause,
   {1724,1},
   [{nil,{1724,15}},
    {var,{1724,19},'Cs'},
    {var,{1724,23},'_Sub'},
    {var,{1724,29},'_LitExpr'},
    {var,{1724,39},'Acc'}],
   [],
   [{debug_line,1725,703},
    {tuple,
     {1725,5},
     [{call,
       {1725,6},
       {remote,{1725,6},{atom,{1725,6},lists},{atom,{1725,6},reverse}},
       [{var,{1725,14},'Acc'}]},
      {var,{1725,19},'Cs'}]}]}]}.
{function,
    {1732,1},
    case_opt_arg,4,
    [{clause,
         {1732,1},
         [{var,{1732,1},'_'},
          {var,{1732,1},'_'},
          {var,{1732,1},'_'},
          {var,{1732,1},'_'}],
         [[{call,
               {1732,1},
               {remote,
                   {1732,1},
                   {atom,{1732,1},fake},
                   {atom,{1732,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1732,704},{atom,{1732,1},ignore}]},
     {clause,
         {1732,1},
         [{var,{1732,14},'E0'},
          {var,{1732,18},'Sub'},
          {var,{1732,23},'Cs'},
          {var,{1732,27},'LitExpr'}],
         [],
         [{debug_line,1733,705},
          {'case',
              {1733,5},
              {call,
                  {1733,10},
                  {remote,
                      {1733,14},
                      {atom,{1733,10},cerl},
                      {atom,{1733,15},is_c_var}},
                  [{var,{1733,24},'E0'}]},
              [{clause,
                   {1734,2},
                   [{atom,{1734,2},false}],
                   [],
                   [{debug_line,1735,706},
                    {call,
                        {1735,6},
                        {atom,{1735,6},case_opt_arg_1},
                        [{var,{1735,21},'E0'},
                         {var,{1735,25},'Cs'},
                         {var,{1735,29},'LitExpr'}]}]},
               {clause,
                   {1736,2},
                   [{atom,{1736,2},true}],
                   [],
                   [{debug_line,1737,707},
                    {'case',
                        {1737,6},
                        {call,
                            {1737,11},
                            {atom,{1737,11},case_will_var_match},
                            [{var,{1737,31},'Cs'}]},
                        [{clause,
                             {1738,3},
                             [{atom,{1738,3},true}],
                             [],
                             [{debug_line,1742,708},
                              {tuple,
                                  {1742,7},
                                  [{atom,{1742,8},error},
                                   {var,{1742,14},'Cs'}]}]},
                         {clause,
                             {1743,3},
                             [{atom,{1743,3},false}],
                             [],
                             [{debug_line,1746,709},
                              {match,
                                  {1746,7},
                                  {var,{1746,7},'E'},
                                  {call,
                                      {1746,11},
                                      {atom,{1746,11},case_expand_var},
                                      [{var,{1746,27},'E0'},
                                       {var,{1746,31},'Sub'}]}},
                              {debug_line,1747,710},
                              {call,
                                  {1747,7},
                                  {atom,{1747,7},case_opt_arg_1},
                                  [{var,{1747,22},'E'},
                                   {var,{1747,25},'Cs'},
                                   {var,{1747,29},'LitExpr'}]}]}]}]}]}]}]}.
{function,
    {1751,1},
    case_opt_arg_1,3,
    [{clause,
         {1751,1},
         [{var,{1751,1},'_'},{var,{1751,1},'_'},{var,{1751,1},'_'}],
         [[{call,
               {1751,1},
               {remote,
                   {1751,1},
                   {atom,{1751,1},fake},
                   {atom,{1751,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1751,711},{atom,{1751,1},ignore}]},
     {clause,
         {1751,1},
         [{var,{1751,16},'E0'},
          {var,{1751,20},'Cs0'},
          {var,{1751,25},'LitExpr'}],
         [],
         [{debug_line,1752,712},
          {'case',
              {1752,5},
              {call,
                  {1752,10},
                  {remote,
                      {1752,14},
                      {atom,{1752,10},cerl},
                      {atom,{1752,15},is_data}},
                  [{var,{1752,23},'E0'}]},
              [{clause,
                   {1753,2},
                   [{atom,{1753,2},false}],
                   [],
                   [{debug_line,1754,713},
                    {tuple,
                        {1754,13},
                        [{atom,{1754,14},error},{var,{1754,20},'Cs0'}]}]},
               {clause,
                   {1755,2},
                   [{atom,{1755,2},true}],
                   [],
                   [{debug_line,1756,714},
                    {match,
                        {1756,6},
                        {var,{1756,6},'E'},
                        {call,
                            {1756,10},
                            {atom,{1756,10},case_opt_compiler_generated},
                            [{var,{1756,38},'E0'}]}},
                    {debug_line,1757,715},
                    {match,
                        {1757,6},
                        {var,{1757,6},'Cs'},
                        {call,
                            {1757,11},
                            {atom,{1757,11},case_opt_nomatch},
                            [{var,{1757,28},'E'},
                             {var,{1757,31},'Cs0'},
                             {var,{1757,36},'LitExpr'}]}},
                    {debug_line,1758,716},
                    {'case',
                        {1758,13},
                        {call,
                            {1758,18},
                            {remote,
                                {1758,22},
                                {atom,{1758,18},cerl},
                                {atom,{1758,23},is_literal}},
                            [{var,{1758,34},'E'}]},
                        [{clause,
                             {1759,17},
                             [{atom,{1759,17},true}],
                             [],
                             [{debug_line,1760,717},
                              {call,
                                  {1760,7},
                                  {atom,{1760,7},case_opt_lit},
                                  [{var,{1760,20},'E'},
                                   {var,{1760,23},'Cs'}]}]},
                         {clause,
                             {1761,3},
                             [{atom,{1761,3},false}],
                             [],
                             [{debug_line,1762,718},
                              {call,
                                  {1762,7},
                                  {atom,{1762,7},case_opt_data},
                                  [{var,{1762,21},'E'},
                                   {var,{1762,24},'Cs'}]}]}]}]}]}]}]}.
{function,
 {1770,1},
 case_will_var_match,1,
 [{clause,
   {1770,1},
   [{var,{1770,1},'_'}],
   [[{call,
      {1770,1},
      {remote,{1770,1},{atom,{1770,1},fake},{atom,{1770,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1770,719},{atom,{1770,1},ignore}]},
  {clause,
   {1770,1},
   [{var,{1770,21},'Cs'}],
   [],
   [{debug_line,1771,720},
    {call,
     {1771,5},
     {remote,{1771,5},{atom,{1771,5},lists},{atom,{1771,5},all}},
     [{block,0,
       [{'fun',
         {1771,9},
         {clauses,
          [{clause,
            {1771,12},
            [{tuple,
              {1771,13},
              [{cons,{1771,14},{var,{1771,15},'P'},{var,{1771,17},'_'}},
               {var,{1771,20},'_'},
               {var,{1771,22},'_'},
               {var,{1771,24},'_'}]}],
            [],
            [{debug_line,1772,721},
             {'case',
              {1772,3},
              {call,
               {1772,8},
               {remote,
                {1772,20},
                {atom,{1772,8},cerl_clauses},
                {atom,{1772,21},match}},
               [{var,{1772,27},'P'},{atom,{1772,30},any}]},
              [{clause,
                {1773,7},
                [{tuple,{1773,7},[{atom,{1773,8},true},{var,{1773,13},'_'}]}],
                [],
                [{debug_line,1773,722},{atom,{1773,19},true}]},
               {clause,
                {1774,7},
                [{var,{1774,7},'_'}],
                [],
                [{debug_line,1774,723},{atom,{1774,12},false}]}]}]}]}}]},
      {var,{1776,7},'Cs'}]}]}]}.
{function,
 {1785,1},
 case_opt_compiler_generated,1,
 [{clause,
   {1785,1},
   [{var,{1785,1},'_'}],
   [[{call,
      {1785,1},
      {remote,{1785,1},{atom,{1785,1},fake},{atom,{1785,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1785,724},{atom,{1785,1},ignore}]},
  {clause,
   {1785,1},
   [{var,{1785,29},'Core'}],
   [],
   [{debug_line,1786,725},
    {match,
     {1786,5},
     {var,{1786,5},'F'},
     {'fun',
      {1786,9},
      {clauses,
       [{clause,
         {1786,12},
         [{var,{1786,13},'C'}],
         [],
         [{debug_line,1787,726},
          {'case',
           {1787,3},
           {call,
            {1787,8},
            {remote,{1787,12},{atom,{1787,8},cerl},{atom,{1787,13},type}},
            [{var,{1787,18},'C'}]},
           [{clause,
             {1788,7},
             [{atom,{1788,7},alias}],
             [],
             [{debug_line,1788,727},{var,{1788,16},'C'}]},
            {clause,
             {1789,7},
             [{atom,{1789,7},var}],
             [],
             [{debug_line,1789,728},{var,{1789,14},'C'}]},
            {clause,
             {1790,7},
             [{var,{1790,7},'_'}],
             [],
             [{debug_line,1790,729},
              {call,
               {1790,12},
               {remote,
                {1790,16},
                {atom,{1790,12},cerl},
                {atom,{1790,17},set_ann}},
               [{var,{1790,25},'C'},
                {block,0,
                 [{cons,
                   {1790,28},
                   {atom,{1790,29},compiler_generated},
                   {nil,{1790,47}}}]}]}]}]}]}]}}},
    {debug_line,1793,730},
    {call,
     {1793,5},
     {remote,{1793,15},{atom,{1793,5},cerl_trees},{atom,{1793,16},map}},
     [{var,{1793,20},'F'},{var,{1793,23},'Core'}]}]}]}.
{function,
    {1801,1},
    case_expand_var,2,
    [{clause,
         {1801,1},
         [{var,{1801,1},'_'},{var,{1801,1},'_'}],
         [[{call,
               {1801,1},
               {remote,
                   {1801,1},
                   {atom,{1801,1},fake},
                   {atom,{1801,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1801,731},{atom,{1801,1},ignore}]},
     {clause,
         {1801,1},
         [{var,{1801,17},'E'},
          {tuple,
              {1801,20},
              [{atom,{1801,20},sub},
               {var,{1801,20},'_'},
               {var,{1801,20},'_'},
               {var,{1801,27},'Tdb'},
               {var,{1801,20},'_'},
               {var,{1801,20},'_'}]}],
         [],
         [{debug_line,1802,732},
          {match,
              {1802,5},
              {var,{1802,5},'Key'},
              {call,
                  {1802,11},
                  {remote,
                      {1802,15},
                      {atom,{1802,11},cerl},
                      {atom,{1802,16},var_name}},
                  [{var,{1802,25},'E'}]}},
          {debug_line,1803,733},
          {'case',
              {1803,5},
              {var,{1803,10},'Tdb'},
              [{clause,
                   {1804,9},
                   [{map,
                        {1804,9},
                        [{map_field_exact,
                             {1804,14},
                             {var,{1804,11},'Key'},
                             {var,{1804,16},'T'}}]}],
                   [],
                   [{debug_line,1804,734},{var,{1804,22},'T'}]},
               {clause,
                   {1805,9},
                   [{var,{1805,9},'_'}],
                   [],
                   [{debug_line,1805,735},{var,{1805,14},'E'}]}]}]}]}.
{function,
 {1811,1},
 case_opt_nomatch,3,
 [{clause,
   {1811,1},
   [{var,{1811,1},'_'},{var,{1811,1},'_'},{var,{1811,1},'_'}],
   [[{call,
      {1811,1},
      {remote,{1811,1},{atom,{1811,1},fake},{atom,{1811,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1811,736},{atom,{1811,1},ignore}]},
  {clause,
   {1811,1},
   [{var,{1811,18},'E'},
    {cons,
     {1811,21},
     {match,
      {1811,22},
      {tuple,
       {1811,22},
       [{cons,{1811,23},{var,{1811,24},'P'},{var,{1811,26},'_'}},
        {var,{1811,29},'C'},
        {var,{1811,31},'_'},
        {var,{1811,33},'_'}]},
      {var,{1811,36},'Current'}},
     {var,{1811,44},'Cs'}},
    {var,{1811,49},'LitExpr'}],
   [],
   [{debug_line,1812,737},
    {'case',
     {1812,5},
     {call,
      {1812,10},
      {remote,{1812,22},{atom,{1812,10},cerl_clauses},{atom,{1812,23},match}},
      [{var,{1812,29},'P'},{var,{1812,32},'E'}]},
     [{clause,
       {1813,9},
       [{atom,{1813,9},none}],
       [],
       [{debug_line,1817,738},
        {'case',
         {1817,13},
         {var,{1817,18},'LitExpr'},
         [{clause,
           {1818,17},
           [{atom,{1818,17},false}],
           [],
           [{debug_line,1818,739},
            {call,
             {1818,26},
             {atom,{1818,26},add_warning},
             [{var,{1818,38},'C'},
              {block,0,
               [{tuple,
                 {1818,41},
                 [{atom,{1818,42},nomatch},
                  {atom,{1818,50},clause_type}]}]}]}]},
          {clause,
           {1819,17},
           [{atom,{1819,17},true}],
           [],
           [{debug_line,1819,740},{atom,{1819,25},ok}]}]},
        {debug_line,1821,741},
        {call,
         {1821,13},
         {atom,{1821,13},case_opt_nomatch},
         [{var,{1821,30},'E'},
          {var,{1821,33},'Cs'},
          {var,{1821,37},'LitExpr'}]}]},
      {clause,
       {1822,9},
       [{var,{1822,9},'_'}],
       [],
       [{debug_line,1823,742},
        {cons,
         {1823,13},
         {var,{1823,14},'Current'},
         {call,
          {1823,22},
          {atom,{1823,22},case_opt_nomatch},
          [{var,{1823,39},'E'},
           {var,{1823,42},'Cs'},
           {var,{1823,46},'LitExpr'}]}}]}]}]},
  {clause,
   {1825,1},
   [{var,{1825,18},'_'},{nil,{1825,21}},{var,{1825,25},'_'}],
   [],
   [{debug_line,1825,743},{nil,{1825,31}}]}]}.
{function,
    {1837,1},
    case_opt_lit,2,
    [{clause,
         {1837,1},
         [{var,{1837,1},'_'},{var,{1837,1},'_'}],
         [[{call,
               {1837,1},
               {remote,
                   {1837,1},
                   {atom,{1837,1},fake},
                   {atom,{1837,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1837,744},{atom,{1837,1},ignore}]},
     {clause,
         {1837,1},
         [{var,{1837,14},'Lit'},{var,{1837,19},'Cs0'}],
         [],
         [{debug_line,1838,745},
          {'try',
              {1838,5},
              [{call,
                   {1838,9},
                   {atom,{1838,9},case_opt_lit_1},
                   [{var,{1838,24},'Lit'},{var,{1838,29},'Cs0'}]}],
              [{clause,
                   {1839,2},
                   [{var,{1839,2},'Cs'}],
                   [],
                   [{debug_line,1840,746},
                    {tuple,
                        {1840,6},
                        [{atom,{1840,7},ok},
                         {nil,{1840,10}},
                         {var,{1840,13},'Cs'}]}]}],
              [{clause,
                   {1842,2},
                   [{tuple,
                        {1842,2},
                        [{atom,{1842,2},throw},
                         {atom,{1842,8},impossible},
                         {var,{1842,8},'_'}]}],
                   [],
                   [{debug_line,1843,747},
                    {tuple,
                        {1843,13},
                        [{atom,{1843,14},error},{var,{1843,20},'Cs0'}]}]}],
              []}]}]}.
{function,
    {1846,1},
    case_opt_lit_1,2,
    [{clause,
         {1846,1},
         [{var,{1846,1},'_'},{var,{1846,1},'_'}],
         [[{call,
               {1846,1},
               {remote,
                   {1846,1},
                   {atom,{1846,1},fake},
                   {atom,{1846,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1846,748},{atom,{1846,1},ignore}]},
     {clause,
         {1846,1},
         [{var,{1846,16},'E'},
          {cons,
              {1846,19},
              {tuple,
                  {1846,20},
                  [{cons,{1846,21},{var,{1846,22},'P'},{var,{1846,24},'Ps'}},
                   {var,{1846,28},'C'},
                   {var,{1846,30},'PsAcc'},
                   {var,{1846,36},'Bs0'}]},
              {var,{1846,41},'Cs'}}],
         [],
         [{debug_line,1849,749},
          {'case',
              {1849,5},
              {call,
                  {1849,10},
                  {remote,
                      {1849,22},
                      {atom,{1849,10},cerl_clauses},
                      {atom,{1849,23},match}},
                  [{var,{1849,29},'P'},{var,{1849,32},'E'}]},
              [{clause,
                   {1850,2},
                   [{tuple,
                        {1850,2},
                        [{atom,{1850,3},true},{var,{1850,8},'Bs'}]}],
                   [],
                   [{debug_line,1853,750},
                    {cons,
                        {1853,13},
                        {tuple,
                            {1853,14},
                            [{var,{1853,15},'Ps'},
                             {var,{1853,18},'C'},
                             {var,{1853,20},'PsAcc'},
                             {op,{1853,28},
                                 '++',
                                 {var,{1853,26},'Bs'},
                                 {var,{1853,30},'Bs0'}}]},
                        {call,
                            {1853,35},
                            {atom,{1853,35},case_opt_lit_1},
                            [{var,{1853,50},'E'},{var,{1853,53},'Cs'}]}}]},
               {clause,
                   {1854,2},
                   [{tuple,
                        {1854,2},
                        [{atom,{1854,3},false},{var,{1854,9},'_'}]}],
                   [],
                   [{debug_line,1857,751},
                    {call,
                        {1857,6},
                        {remote,
                            {1857,6},
                            {atom,{1857,6},erlang},
                            {atom,{1857,6},throw}},
                        [{atom,{1857,12},impossible}]}]}]}]},
     {clause,
         {1859,1},
         [{var,{1859,16},'_'},{nil,{1859,19}}],
         [],
         [{debug_line,1859,752},{nil,{1859,26}}]}]}.
{function,
    {1867,1},
    case_opt_data,2,
    [{clause,
         {1867,1},
         [{var,{1867,1},'_'},{var,{1867,1},'_'}],
         [[{call,
               {1867,1},
               {remote,
                   {1867,1},
                   {atom,{1867,1},fake},
                   {atom,{1867,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1867,753},{atom,{1867,1},ignore}]},
     {clause,
         {1867,1},
         [{var,{1867,15},'E'},{var,{1867,18},'Cs0'}],
         [],
         [{debug_line,1868,754},
          {match,
              {1868,5},
              {var,{1868,5},'TypeSig'},
              {tuple,
                  {1868,15},
                  [{call,
                       {1868,16},
                       {remote,
                           {1868,20},
                           {atom,{1868,16},cerl},
                           {atom,{1868,21},data_type}},
                       [{var,{1868,31},'E'}]},
                   {call,
                       {1868,34},
                       {remote,
                           {1868,38},
                           {atom,{1868,34},cerl},
                           {atom,{1868,39},data_arity}},
                       [{var,{1868,50},'E'}]}]}},
          {debug_line,1869,755},
          {'try',
              {1869,5},
              [{call,
                   {1869,9},
                   {atom,{1869,9},case_opt_data_1},
                   [{var,{1869,25},'Cs0'},{var,{1869,30},'TypeSig'}]}],
              [{clause,
                   {1870,2},
                   [{var,{1870,2},'Cs'}],
                   [],
                   [{debug_line,1871,756},
                    {match,
                        {1871,6},
                        {var,{1871,6},'Es'},
                        {call,
                            {1871,11},
                            {remote,
                                {1871,15},
                                {atom,{1871,11},cerl},
                                {atom,{1871,16},data_es}},
                            [{var,{1871,24},'E'}]}},
                    {debug_line,1872,757},
                    {tuple,
                        {1872,6},
                        [{atom,{1872,7},ok},
                         {var,{1872,10},'Es'},
                         {var,{1872,13},'Cs'}]}]}],
              [{clause,
                   {1874,2},
                   [{tuple,
                        {1874,2},
                        [{atom,{1874,2},throw},
                         {atom,{1874,8},impossible},
                         {var,{1874,8},'_'}]}],
                   [],
                   [{debug_line,1876,758},
                    {tuple,
                        {1876,6},
                        [{atom,{1876,7},error},{var,{1876,13},'Cs0'}]}]}],
              []}]}]}.
{function,
    {1879,1},
    case_opt_data_1,2,
    [{clause,
         {1879,1},
         [{var,{1879,1},'_'},{var,{1879,1},'_'}],
         [[{call,
               {1879,1},
               {remote,
                   {1879,1},
                   {atom,{1879,1},fake},
                   {atom,{1879,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1879,759},{atom,{1879,1},ignore}]},
     {clause,
         {1879,1},
         [{cons,
              {1879,17},
              {tuple,
                  {1879,18},
                  [{cons,{1879,19},{var,{1879,20},'P0'},{var,{1879,23},'Ps0'}},
                   {var,{1879,28},'C'},
                   {var,{1879,30},'PsAcc'},
                   {var,{1879,36},'Bs0'}]},
              {var,{1879,41},'Cs'}},
          {var,{1879,46},'TypeSig'}],
         [],
         [{debug_line,1880,760},
          {match,
              {1880,5},
              {var,{1880,5},'P'},
              {call,
                  {1880,9},
                  {atom,{1880,9},case_opt_compiler_generated},
                  [{var,{1880,37},'P0'}]}},
          {debug_line,1881,761},
          {match,
              {1881,5},
              {tuple,{1881,5},[{var,{1881,6},'Ps1'},{var,{1881,10},'Bs'}]},
              {call,
                  {1881,16},
                  {atom,{1881,16},case_opt_data_2},
                  [{var,{1881,32},'P'},
                   {var,{1881,35},'TypeSig'},
                   {var,{1881,44},'Bs0'}]}},
          {debug_line,1882,762},
          {cons,
              {1882,5},
              {tuple,
                  {1882,6},
                  [{op,{1882,10},
                       '++',
                       {var,{1882,7},'Ps1'},
                       {var,{1882,12},'Ps0'}},
                   {var,{1882,16},'C'},
                   {var,{1882,18},'PsAcc'},
                   {var,{1882,24},'Bs'}]},
              {call,
                  {1882,28},
                  {atom,{1882,28},case_opt_data_1},
                  [{var,{1882,44},'Cs'},{var,{1882,48},'TypeSig'}]}}]},
     {clause,
         {1883,1},
         [{nil,{1883,17}},{var,{1883,21},'_'}],
         [],
         [{debug_line,1883,763},{nil,{1883,27}}]}]}.
{function,
 {1885,1},
 case_opt_data_2,3,
 [{clause,
   {1885,1},
   [{var,{1885,1},'_'},{var,{1885,1},'_'},{var,{1885,1},'_'}],
   [[{call,
      {1885,1},
      {remote,{1885,1},{atom,{1885,1},fake},{atom,{1885,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1885,764},{atom,{1885,1},ignore}]},
  {clause,
   {1885,1},
   [{var,{1885,17},'P'},{var,{1885,20},'TypeSig'},{var,{1885,29},'Bs0'}],
   [],
   [{debug_line,1886,765},
    {'case',
     {1886,5},
     {call,{1886,10},{atom,{1886,10},case_analyze_pat},[{var,{1886,27},'P'}]},
     [{clause,
       {1887,2},
       [{tuple,{1887,2},[{nil,{1887,3}},{var,{1887,6},'Pat'}]}],
       [[{op,{1887,20},'=/=',{var,{1887,16},'Pat'},{atom,{1887,24},none}}]],
       [{debug_line,1888,766},
        {match,
         {1888,6},
         {var,{1888,6},'DataEs'},
         {call,
          {1888,15},
          {remote,{1888,19},{atom,{1888,15},cerl},{atom,{1888,20},data_es}},
          [{var,{1888,28},'P'}]}},
        {debug_line,1889,767},
        {tuple,{1889,6},[{var,{1889,7},'DataEs'},{var,{1889,14},'Bs0'}]}]},
      {clause,
       {1890,2},
       [{tuple,
         {1890,2},
         [{cons,{1890,3},{var,{1890,4},'V'},{var,{1890,6},'Vs'}},
          {atom,{1890,10},none}]}],
       [],
       [{debug_line,1891,768},
        {match,
         {1891,6},
         {tuple,{1891,6},[{var,{1891,7},'Type'},{var,{1891,12},'Arity'}]},
         {var,{1891,21},'TypeSig'}},
        {debug_line,1892,769},
        {match,
         {1892,6},
         {var,{1892,6},'Ann'},
         {cons,{1892,12},{atom,{1892,13},compiler_generated},{nil,{1892,31}}}},
        {debug_line,1893,770},
        {match,
         {1893,13},
         {atom,{1893,13},true},
         {'case',
          {1893,21},
          {call,
           {1893,21},
           {remote,
            {1893,21},
            {atom,{1893,21},erlang},
            {atom,{1893,21},is_integer}},
           [{var,{1893,35},'Arity'}]},
          [{clause,
            {1893,21},
            [{atom,{1893,21},true}],
            [],
            [{'case',
              {1893,35},
              {op,
               {1893,35},
               '=<',
               {integer,{1893,35},0},
               {var,{1893,35},'Arity'}},
              [{clause,
                {1893,35},
                [{atom,{1893,35},true}],
                [],
                [{op,
                  {1893,35},
                  '=<',
                  {var,{1893,35},'Arity'},
                  {integer,{1893,35},255}}]},
               {clause,
                {1893,35},
                [{atom,{1893,35},false}],
                [],
                [{atom,{1893,35},false}]},
               {clause,
                [{generated,true},{location,{1893,35}}],
                [{var,{1893,35},cov1}],
                [],
                [{call,
                  {1893,35},
                  {remote,
                   {1893,35},
                   {atom,{1893,35},erlang},
                   {atom,{1893,35},error}},
                  [{block,0,
                    [{tuple,
                      {1893,35},
                      [{atom,{1893,35},badarg},
                       {var,{1893,35},cov1}]}]}]}]}]}]},
           {clause,
            {1893,21},
            [{atom,{1893,21},false}],
            [],
            [{atom,{1893,21},false}]},
           {clause,
            [{generated,true},{location,{1893,21}}],
            [{var,{1893,21},cov2}],
            [],
            [{call,
              {1893,21},
              {remote,
               {1893,21},
               {atom,{1893,21},erlang},
               {atom,{1893,21},error}},
              [{block,0,
                [{tuple,
                  {1893,21},
                  [{atom,{1893,21},badarg},{var,{1893,21},cov2}]}]}]}]}]}},
        {debug_line,1894,771},
        {match,
         {1894,6},
         {var,{1894,6},'Vars'},
         {call,
          {1894,13},
          {atom,{1894,13},make_vars},
          [{var,{1894,23},'Ann'},{var,{1894,28},'Arity'}]}},
        {debug_line,1895,772},
        {match,
         {1895,6},
         {var,{1895,6},'Data'},
         {call,
          {1895,13},
          {remote,
           {1895,17},
           {atom,{1895,13},cerl},
           {atom,{1895,18},ann_make_data}},
          [{var,{1895,32},'Ann'},
           {var,{1895,37},'Type'},
           {var,{1895,43},'Vars'}]}},
        {debug_line,1896,773},
        {match,
         {1896,6},
         {var,{1896,6},'Bs'},
         {cons,
          {1896,11},
          {tuple,{1896,12},[{var,{1896,13},'V'},{var,{1896,15},'Data'}]},
          {op,
           {1896,46},
           '++',
           {lc,
            {1896,23},
            {block,0,
             [{tuple,{1896,24},[{var,{1896,25},'Var'},{var,{1896,29},'V'}]}]},
            [{block,0,[{atom,{1896,42},true}]},
             {generate,{1896,39},{var,{1896,35},'Var'},{var,{1896,42},'Vs'}}]},
           {var,{1896,49},'Bs0'}}}},
        {debug_line,1897,774},
        {tuple,{1897,6},[{var,{1897,7},'Vars'},{var,{1897,12},'Bs'}]}]},
      {clause,
       {1898,2},
       [{tuple,
         {1898,2},
         [{cons,{1898,3},{var,{1898,4},'V'},{var,{1898,6},'Vs'}},
          {var,{1898,10},'Pat'}]}],
       [[{op,{1898,24},'=/=',{var,{1898,20},'Pat'},{atom,{1898,28},none}}]],
       [{debug_line,1899,775},
        {match,
         {1899,6},
         {tuple,{1899,6},[{var,{1899,7},'Type'},{var,{1899,12},'_'}]},
         {var,{1899,17},'TypeSig'}},
        {debug_line,1900,776},
        {match,
         {1900,6},
         {var,{1900,6},'DataEs'},
         {call,
          {1900,15},
          {remote,{1900,19},{atom,{1900,15},cerl},{atom,{1900,20},data_es}},
          [{var,{1900,28},'Pat'}]}},
        {debug_line,1901,777},
        {match,
         {1901,6},
         {var,{1901,6},'Vars'},
         {call,
          {1901,13},
          {atom,{1901,13},pat_to_expr_list},
          [{var,{1901,30},'DataEs'}]}},
        {debug_line,1902,778},
        {match,
         {1902,6},
         {var,{1902,6},'Ann'},
         {cons,{1902,12},{atom,{1902,13},compiler_generated},{nil,{1902,31}}}},
        {debug_line,1903,779},
        {match,
         {1903,6},
         {var,{1903,6},'Data'},
         {call,
          {1903,13},
          {remote,
           {1903,17},
           {atom,{1903,13},cerl},
           {atom,{1903,18},ann_make_data}},
          [{var,{1903,32},'Ann'},
           {var,{1903,37},'Type'},
           {var,{1903,43},'Vars'}]}},
        {debug_line,1904,780},
        {match,
         {1904,6},
         {var,{1904,6},'Bs'},
         {cons,
          {1904,11},
          {tuple,{1904,12},[{var,{1904,13},'V'},{var,{1904,15},'Data'}]},
          {op,
           {1904,46},
           '++',
           {lc,
            {1904,23},
            {block,0,
             [{tuple,{1904,24},[{var,{1904,25},'Var'},{var,{1904,29},'V'}]}]},
            [{block,0,[{atom,{1904,42},true}]},
             {generate,{1904,39},{var,{1904,35},'Var'},{var,{1904,42},'Vs'}}]},
           {var,{1904,49},'Bs0'}}}},
        {debug_line,1905,781},
        {tuple,
         {1905,6},
         [{var,{1905,7},'DataEs'},{var,{1905,14},'Bs'}]}]}]}]}]}.
{function,{1908,1},
          case_analyze_pat,1,
          [{clause,{1908,1},
                   [{var,{1908,1},'_'}],
                   [[{call,{1908,1},
                           {remote,{1908,1},
                                   {atom,{1908,1},fake},
                                   {atom,{1908,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1908,782},{atom,{1908,1},ignore}]},
           {clause,{1908,1},
                   [{var,{1908,18},'P'}],
                   [],
                   [{debug_line,1909,783},
                    {call,{1909,5},
                          {atom,{1909,5},case_analyze_pat_1},
                          [{var,{1909,24},'P'},
                           {nil,{1909,27}},
                           {atom,{1909,31},none}]}]}]}.
{function,
    {1911,1},
    case_analyze_pat_1,3,
    [{clause,
         {1911,1},
         [{var,{1911,1},'_'},{var,{1911,1},'_'},{var,{1911,1},'_'}],
         [[{call,
               {1911,1},
               {remote,
                   {1911,1},
                   {atom,{1911,1},fake},
                   {atom,{1911,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1911,784},{atom,{1911,1},ignore}]},
     {clause,
         {1911,1},
         [{var,{1911,20},'P'},{var,{1911,23},'Vs'},{var,{1911,27},'Pat'}],
         [],
         [{debug_line,1912,785},
          {'case',
              {1912,5},
              {call,
                  {1912,10},
                  {remote,
                      {1912,14},
                      {atom,{1912,10},cerl},
                      {atom,{1912,15},type}},
                  [{var,{1912,20},'P'}]},
              [{clause,
                   {1913,2},
                   [{atom,{1913,2},alias}],
                   [],
                   [{debug_line,1914,786},
                    {match,
                        {1914,6},
                        {var,{1914,6},'V'},
                        {call,
                            {1914,10},
                            {remote,
                                {1914,14},
                                {atom,{1914,10},cerl},
                                {atom,{1914,15},alias_var}},
                            [{var,{1914,25},'P'}]}},
                    {debug_line,1915,787},
                    {match,
                        {1915,6},
                        {var,{1915,6},'Apat'},
                        {call,
                            {1915,13},
                            {remote,
                                {1915,17},
                                {atom,{1915,13},cerl},
                                {atom,{1915,18},alias_pat}},
                            [{var,{1915,28},'P'}]}},
                    {debug_line,1916,788},
                    {call,
                        {1916,6},
                        {atom,{1916,6},case_analyze_pat_1},
                        [{var,{1916,25},'Apat'},
                         {block,0,
                             [{cons,
                                  {1916,31},
                                  {var,{1916,32},'V'},
                                  {var,{1916,34},'Vs'}}]},
                         {var,{1916,39},'Pat'}]}]},
               {clause,
                   {1917,2},
                   [{atom,{1917,2},var}],
                   [],
                   [{debug_line,1918,789},
                    {tuple,
                        {1918,6},
                        [{cons,
                             {1918,7},
                             {var,{1918,8},'P'},
                             {var,{1918,10},'Vs'}},
                         {var,{1918,14},'Pat'}]}]},
               {clause,
                   {1919,2},
                   [{var,{1919,2},'_'}],
                   [],
                   [{debug_line,1920,790},
                    {tuple,
                        {1920,6},
                        [{var,{1920,7},'Vs'},{var,{1920,10},'P'}]}]}]}]}]}.
{function,
 {1932,1},
 pat_to_expr,1,
 [{clause,
   {1932,1},
   [{var,{1932,1},'_'}],
   [[{call,
      {1932,1},
      {remote,{1932,1},{atom,{1932,1},fake},{atom,{1932,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1932,791},{atom,{1932,1},ignore}]},
  {clause,
   {1932,1},
   [{var,{1932,13},'P'}],
   [],
   [{debug_line,1933,792},
    {'case',
     {1933,5},
     {call,
      {1933,10},
      {remote,{1933,14},{atom,{1933,10},cerl},{atom,{1933,15},type}},
      [{var,{1933,20},'P'}]},
     [{clause,
       {1934,2},
       [{atom,{1934,2},alias}],
       [],
       [{debug_line,1935,793},
        {call,
         {1935,6},
         {remote,{1935,10},{atom,{1935,6},cerl},{atom,{1935,11},alias_var}},
         [{var,{1935,21},'P'}]}]},
      {clause,
       {1936,2},
       [{atom,{1936,2},var}],
       [],
       [{debug_line,1937,794},{var,{1937,6},'P'}]},
      {clause,
       {1938,2},
       [{var,{1938,2},'_'}],
       [],
       [{debug_line,1939,795},
        {'case',
         {1939,6},
         {call,
          {1939,11},
          {remote,{1939,15},{atom,{1939,11},cerl},{atom,{1939,16},is_data}},
          [{var,{1939,24},'P'}]},
         [{clause,
           {1940,3},
           [{atom,{1940,3},false}],
           [],
           [{debug_line,1942,796},
            {call,
             {1942,7},
             {remote,{1942,7},{atom,{1942,7},erlang},{atom,{1942,7},throw}},
             [{atom,{1942,13},impossible}]}]},
          {clause,
           {1943,3},
           [{atom,{1943,3},true}],
           [],
           [{debug_line,1944,797},
            {match,
             {1944,7},
             {var,{1944,7},'Es'},
             {call,
              {1944,12},
              {atom,{1944,12},pat_to_expr_list},
              [{block,0,
                [{call,
                  {1944,29},
                  {remote,
                   {1944,33},
                   {atom,{1944,29},cerl},
                   {atom,{1944,34},data_es}},
                  [{var,{1944,42},'P'}]}]}]}},
            {debug_line,1945,798},
            {call,
             {1945,7},
             {remote,
              {1945,11},
              {atom,{1945,7},cerl},
              {atom,{1945,12},update_data}},
             [{var,{1945,24},'P'},
              {block,0,
               [{call,
                 {1945,27},
                 {remote,
                  {1945,31},
                  {atom,{1945,27},cerl},
                  {atom,{1945,32},data_type}},
                 [{var,{1945,42},'P'}]}]},
              {var,{1945,46},'Es'}]}]}]}]}]}]}]}.
{function,{1949,1},
          pat_to_expr_list,1,
          [{clause,{1949,1},
                   [{var,{1949,1},'_'}],
                   [[{call,{1949,1},
                           {remote,{1949,1},
                                   {atom,{1949,1},fake},
                                   {atom,{1949,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1949,799},{atom,{1949,1},ignore}]},
           {clause,{1949,1},
                   [{var,{1949,18},'Ps'}],
                   [],
                   [{debug_line,1949,800},
                    {lc,{1949,25},
                        {block,0,
                               [{call,{1949,26},
                                      {atom,{1949,26},pat_to_expr},
                                      [{var,{1949,38},'P'}]}]},
                        [{block,0,[{atom,{1949,49},true}]},
                         {generate,{1949,46},
                                   {var,{1949,44},'P'},
                                   {var,{1949,49},'Ps'}}]}]}]}.
{function,
    {1951,1},
    make_vars,2,
    [{clause,
         {1951,1},
         [{var,{1951,1},'_'},{var,{1951,1},'_'}],
         [[{call,
               {1951,1},
               {remote,
                   {1951,1},
                   {atom,{1951,1},fake},
                   {atom,{1951,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1951,801},{atom,{1951,1},ignore}]},
     {clause,
         {1951,1},
         [{var,{1951,11},'A'},{var,{1951,14},'Max'}],
         [[{op,{1951,39},
               'andalso',
               {call,
                   {1951,25},
                   {remote,
                       {1951,25},
                       {atom,{1951,25},erlang},
                       {atom,{1951,25},is_integer}},
                   [{var,{1951,39},'Max'}]},
               {op,{1951,39},
                   'andalso',
                   {op,{1951,39},
                       '=<',
                       {integer,{1951,39},0},
                       {var,{1951,39},'Max'}},
                   {op,{1951,39},
                       '=<',
                       {var,{1951,39},'Max'},
                       {integer,{1951,39},255}}}}]],
         [{debug_line,1952,802},
          {call,
              {1952,5},
              {atom,{1952,5},make_vars},
              [{var,{1952,15},'A'},
               {integer,{1952,18},1},
               {var,{1952,21},'Max'}]}]}]}.
{function,
    {1954,1},
    make_vars,3,
    [{clause,
         {1954,1},
         [{var,{1954,1},'_'},{var,{1954,1},'_'},{var,{1954,1},'_'}],
         [[{call,
               {1954,1},
               {remote,
                   {1954,1},
                   {atom,{1954,1},fake},
                   {atom,{1954,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1954,803},{atom,{1954,1},ignore}]},
     {clause,
         {1954,1},
         [{var,{1954,11},'A'},{var,{1954,14},'I'},{var,{1954,17},'Max'}],
         [[{op,{1954,29},'=<',{var,{1954,27},'I'},{var,{1954,32},'Max'}}]],
         [{debug_line,1955,804},
          {cons,
              {1955,5},
              {call,{1955,6},{atom,{1955,6},make_var},[{var,{1955,15},'A'}]},
              {call,
                  {1955,18},
                  {atom,{1955,18},make_vars},
                  [{var,{1955,28},'A'},
                   {block,0,
                       [{op,{1955,32},
                            '+',
                            {var,{1955,31},'I'},
                            {integer,{1955,33},1}}]},
                   {var,{1955,36},'Max'}]}}]},
     {clause,
         {1956,1},
         [{var,{1956,11},'_'},{var,{1956,14},'_'},{var,{1956,17},'_'}],
         [],
         [{debug_line,1956,805},{nil,{1956,23}}]}]}.
{function,{1958,1},
          make_var,1,
          [{clause,{1958,1},
                   [{var,{1958,1},'_'}],
                   [[{call,{1958,1},
                           {remote,{1958,1},
                                   {atom,{1958,1},fake},
                                   {atom,{1958,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1958,806},{atom,{1958,1},ignore}]},
           {clause,{1958,1},
                   [{var,{1958,10},'A'}],
                   [],
                   [{debug_line,1959,807},
                    {tuple,{1959,5},
                           [{atom,{1959,5},c_var},
                            {var,{1959,17},'A'},
                            {call,{1959,24},
                                  {atom,{1959,24},make_var_name},
                                  []}]}]}]}.
{function,
    {1961,1},
    make_var_name,0,
    [{clause,
         {1961,1},
         [],
         [[{call,
               {1961,1},
               {remote,
                   {1961,1},
                   {atom,{1961,1},fake},
                   {atom,{1961,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1961,808},{atom,{1961,1},ignore}]},
     {clause,
         {1961,1},
         [],[],
         [{debug_line,1962,809},
          {match,
              {1962,5},
              {var,{1962,5},'N'},
              {call,
                  {1962,9},
                  {remote,{1962,9},{atom,{1962,9},erlang},{atom,{1962,9},get}},
                  [{atom,{1962,13},new_var_num}]}},
          {debug_line,1963,810},
          {call,
              {1963,5},
              {remote,{1963,5},{atom,{1963,5},erlang},{atom,{1963,5},put}},
              [{atom,{1963,9},new_var_num},
               {block,0,
                   [{op,{1963,23},
                        '+',
                        {var,{1963,22},'N'},
                        {integer,{1963,24},1}}]}]},
          {debug_line,1964,811},
          {var,{1964,5},'N'}]}]}.
{function,
 {1966,1},
 letify,2,
 [{clause,
   {1966,1},
   [{var,{1966,1},'_'},{var,{1966,1},'_'}],
   [[{call,
      {1966,1},
      {remote,{1966,1},{atom,{1966,1},fake},{atom,{1966,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1966,812},{atom,{1966,1},ignore}]},
  {clause,
   {1966,1},
   [{var,{1966,8},'Bs'},{var,{1966,12},'Body'}],
   [],
   [{debug_line,1967,813},
    {match,
     {1967,5},
     {var,{1967,5},'Ann'},
     {call,
      {1967,11},
      {remote,{1967,15},{atom,{1967,11},cerl},{atom,{1967,16},get_ann}},
      [{var,{1967,24},'Body'}]}},
    {debug_line,1968,814},
    {call,
     {1968,5},
     {remote,{1968,5},{atom,{1968,5},lists},{atom,{1968,5},foldr}},
     [{block,0,
       [{'fun',
         {1968,11},
         {clauses,
          [{clause,
            {1968,14},
            [{tuple,{1968,15},[{var,{1968,16},'V'},{var,{1968,18},'Val'}]},
             {var,{1968,24},'B'}],
            [],
            [{debug_line,1969,815},
             {call,
              {1969,5},
              {remote,
               {1969,9},
               {atom,{1969,5},cerl},
               {atom,{1969,10},ann_c_let}},
              [{var,{1969,20},'Ann'},
               {block,0,
                [{cons,{1969,25},{var,{1969,26},'V'},{nil,{1969,27}}}]},
               {var,{1969,30},'Val'},
               {var,{1969,35},'B'}]}]}]}}]},
      {var,{1970,9},'Body'},
      {var,{1970,15},'Bs'}]}]}]}.
{attribute,
    {1975,2},
    spec,
    {{opt_not_in_let,1},
     [{type,
          {1975,21},
          'fun',
          [{type,
               {1975,21},
               product,
               [{remote_type,
                    {1975,22},
                    [{atom,{1975,22},cerl},{atom,{1975,27},c_let},[]]}]},
           {remote_type,
               {1975,39},
               [{atom,{1975,39},cerl},{atom,{1975,44},cerl},[]]}]}]}}.
{function,
 {1977,1},
 opt_not_in_let,1,
 [{clause,
   {1977,1},
   [{var,{1977,1},'_'}],
   [[{call,
      {1977,1},
      {remote,{1977,1},{atom,{1977,1},fake},{atom,{1977,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1977,816},{atom,{1977,1},ignore}]},
  {clause,
   {1977,1},
   [{match,
     {1977,16},
     {tuple,
      {1977,16},
      [{atom,{1977,16},c_let},
       {var,{1977,16},'_'},
       {match,
        {1977,28},
        {cons,{1977,28},{var,{1977,29},'_'},{nil,{1977,30}}},
        {var,{1977,32},'Vs0'}},
       {var,{1977,40},'Arg0'},
       {var,{1977,50},'Body0'}]},
     {var,{1977,57},'Let'}}],
   [],
   [{debug_line,1978,817},
    {'case',
     {1978,5},
     {call,
      {1978,10},
      {atom,{1978,10},opt_not_in_let_0},
      [{var,{1978,27},'Vs0'},{var,{1978,32},'Arg0'},{var,{1978,38},'Body0'}]},
     [{clause,
       {1979,2},
       [{tuple,
         {1979,2},
         [{nil,{1979,3}},
          {tuple,
           {1979,6},
           [{atom,{1979,6},c_values},{var,{1979,6},'_'},{nil,{1979,19}}]},
          {var,{1979,23},'Body'}]}],
       [],
       [{debug_line,1980,818},{var,{1980,6},'Body'}]},
      {clause,
       {1981,2},
       [{tuple,
         {1981,2},
         [{var,{1981,3},'Vs'},{var,{1981,6},'Arg'},{var,{1981,10},'Body'}]}],
       [],
       [{debug_line,1982,819},
        {block,
         {1982,6},
         [{match,{1982,6},{var,{1982,6},rec57},{var,{1982,6},'Let'}},
          {'case',
           {1982,16},
           {var,{1982,6},rec57},
           [{clause,
             {1982,16},
             [{tuple,
               {1982,16},
               [{atom,{1982,16},c_let},
                {var,{1982,16},'_'},
                {var,{1982,16},'_'},
                {var,{1982,16},'_'},
                {var,{1982,16},'_'}]}],
             [],
             [{call,
               {1982,16},
               {remote,
                {1982,16},
                {atom,{1982,16},erlang},
                {atom,{1982,16},setelement}},
               [{integer,{1982,16},3},
                {call,
                 {1982,24},
                 {remote,
                  {1982,24},
                  {atom,{1982,24},erlang},
                  {atom,{1982,24},setelement}},
                 [{integer,{1982,24},4},
                  {call,
                   {1982,32},
                   {remote,
                    {1982,32},
                    {atom,{1982,32},erlang},
                    {atom,{1982,32},setelement}},
                   [{integer,{1982,32},5},
                    {var,{1982,6},rec57},
                    {var,{1982,37},'Body'}]},
                  {var,{1982,28},'Arg'}]},
                {var,{1982,21},'Vs'}]}]},
            {clause,
             [{generated,true},{location,{1982,16}}],
             [{var,[{generated,true},{location,{1982,16}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1982,16}}],
               {remote,
                [{generated,true},{location,{1982,16}}],
                {atom,[{generated,true},{location,{1982,16}}],erlang},
                {atom,[{generated,true},{location,{1982,16}}],error}},
               [{tuple,
                 [{generated,true},{location,{1982,16}}],
                 [{atom,[{generated,true},{location,{1982,16}}],badrecord},
                  {var,{1982,6},rec57}]}]}]}]}]}]}]}]},
  {clause,
   {1984,1},
   [{var,{1984,16},'Let'}],
   [],
   [{debug_line,1984,820},{var,{1984,24},'Let'}]}]}.
{function,
 {1986,1},
 opt_not_in_let_0,3,
 [{clause,
   {1986,1},
   [{var,{1986,1},'_'},{var,{1986,1},'_'},{var,{1986,1},'_'}],
   [[{call,
      {1986,1},
      {remote,{1986,1},{atom,{1986,1},fake},{atom,{1986,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1986,821},{atom,{1986,1},ignore}]},
  {clause,
   {1986,1},
   [{match,
     {1986,18},
     {cons,
      {1986,18},
      {tuple,
       {1986,19},
       [{atom,{1986,19},c_var},{var,{1986,19},'_'},{var,{1986,31},'V'}]},
      {nil,{1986,33}}},
     {var,{1986,35},'Vs0'}},
    {var,{1986,40},'Arg0'},
    {var,{1986,46},'Body0'}],
   [],
   [{debug_line,1987,822},
    {'case',
     {1987,5},
     {call,
      {1987,10},
      {remote,{1987,14},{atom,{1987,10},cerl},{atom,{1987,15},type}},
      [{var,{1987,20},'Body0'}]},
     [{clause,
       {1988,2},
       [{atom,{1988,2},call}],
       [],
       [{debug_line,1991,823},
        {'case',
         {1991,6},
         {call,
          {1991,11},
          {atom,{1991,11},opt_not_in_let_1},
          [{var,{1991,28},'V'},
           {var,{1991,31},'Body0'},
           {var,{1991,38},'Arg0'}]},
         [{clause,
           {1992,3},
           [{atom,{1992,3},no}],
           [],
           [{debug_line,1993,824},
            {tuple,
             {1993,7},
             [{var,{1993,8},'Vs0'},
              {var,{1993,12},'Arg0'},
              {var,{1993,17},'Body0'}]}]},
          {clause,
           {1994,3},
           [{tuple,{1994,3},[{atom,{1994,4},yes},{var,{1994,8},'Body'}]}],
           [],
           [{debug_line,1995,825},
            {tuple,
             {1995,7},
             [{nil,{1995,8}},
              {tuple,
               {1995,11},
               [{atom,{1995,11},c_values},{nil,{1995,11}},{nil,{1995,24}}]},
              {var,{1995,28},'Body'}]}]}]}]},
      {clause,
       {1997,2},
       [{atom,{1997,2},'let'}],
       [],
       [{debug_line,2001,826},
        {match,
         {2001,6},
         {var,{2001,6},'LetArg'},
         {call,
          {2001,15},
          {remote,{2001,19},{atom,{2001,15},cerl},{atom,{2001,20},let_arg}},
          [{var,{2001,28},'Body0'}]}},
        {debug_line,2002,827},
        {'case',
         {2002,6},
         {call,
          {2002,11},
          {atom,{2002,11},opt_not_in_let_1},
          [{var,{2002,28},'V'},
           {var,{2002,31},'LetArg'},
           {var,{2002,39},'Arg0'}]},
         [{clause,
           {2003,3},
           [{atom,{2003,3},no}],
           [],
           [{debug_line,2004,828},
            {tuple,
             {2004,7},
             [{var,{2004,8},'Vs0'},
              {var,{2004,12},'Arg0'},
              {var,{2004,17},'Body0'}]}]},
          {clause,
           {2005,3},
           [{tuple,{2005,3},[{atom,{2005,4},yes},{var,{2005,8},'Arg'}]}],
           [],
           [{debug_line,2006,829},
            {match,
             {2006,7},
             {var,{2006,7},'LetBody'},
             {call,
              {2006,17},
              {remote,
               {2006,21},
               {atom,{2006,17},cerl},
               {atom,{2006,22},let_body}},
              [{var,{2006,31},'Body0'}]}},
            {debug_line,2007,830},
            {'case',
             {2007,7},
             {call,
              {2007,12},
              {remote,
               {2007,20},
               {atom,{2007,12},core_lib},
               {atom,{2007,21},is_var_used}},
              [{var,{2007,33},'V'},{var,{2007,36},'LetBody'}]},
             [{clause,
               {2008,4},
               [{atom,{2008,4},true}],
               [],
               [{debug_line,2009,831},
                {tuple,
                 {2009,8},
                 [{var,{2009,9},'Vs0'},
                  {var,{2009,13},'Arg0'},
                  {var,{2009,18},'Body0'}]}]},
              {clause,
               {2010,4},
               [{atom,{2010,4},false}],
               [],
               [{debug_line,2011,832},
                {match,
                 {2011,8},
                 {var,{2011,8},'LetVars'},
                 {call,
                  {2011,18},
                  {remote,
                   {2011,22},
                   {atom,{2011,18},cerl},
                   {atom,{2011,23},let_vars}},
                  [{var,{2011,32},'Body0'}]}},
                {debug_line,2012,833},
                {tuple,
                 {2012,8},
                 [{var,{2012,9},'LetVars'},
                  {var,{2012,17},'Arg'},
                  {var,{2012,21},'LetBody'}]}]}]}]}]}]},
      {clause,
       {2015,2},
       [{var,{2015,2},'_'}],
       [],
       [{debug_line,2016,834},
        {tuple,
         {2016,6},
         [{var,{2016,7},'Vs0'},
          {var,{2016,11},'Arg0'},
          {var,{2016,16},'Body0'}]}]}]}]}]}.
{function,
    {2019,1},
    opt_not_in_let_1,3,
    [{clause,
         {2019,1},
         [{var,{2019,1},'_'},{var,{2019,1},'_'},{var,{2019,1},'_'}],
         [[{call,
               {2019,1},
               {remote,
                   {2019,1},
                   {atom,{2019,1},fake},
                   {atom,{2019,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2019,835},{atom,{2019,1},ignore}]},
     {clause,
         {2019,1},
         [{var,{2019,18},'V'},{var,{2019,21},'Call'},{var,{2019,27},'Body'}],
         [],
         [{debug_line,2020,836},
          {'case',
              {2020,5},
              {var,{2020,10},'Call'},
              [{clause,
                   {2021,2},
                   [{tuple,
                        {2021,2},
                        [{atom,{2021,2},c_call},
                         {var,{2021,2},'_'},
                         {tuple,
                             {2021,17},
                             [{atom,{2021,17},c_literal},
                              {var,{2021,17},'_'},
                              {atom,{2021,32},erlang}]},
                         {tuple,
                             {2022,8},
                             [{atom,{2022,8},c_literal},
                              {var,{2022,8},'_'},
                              {atom,{2022,23},'not'}]},
                         {cons,
                             {2023,8},
                             {tuple,
                                 {2023,9},
                                 [{atom,{2023,9},c_var},
                                  {var,{2023,9},'_'},
                                  {var,{2023,21},'V'}]},
                             {nil,{2023,23}}}]}],
                   [],
                   [{debug_line,2024,837},
                    {call,
                        {2024,6},
                        {atom,{2024,6},opt_not_in_let_2},
                        [{var,{2024,23},'Body'},{var,{2024,29},'Call'}]}]},
               {clause,
                   {2025,2},
                   [{var,{2025,2},'_'}],
                   [],
                   [{debug_line,2026,838},{atom,{2026,6},no}]}]}]}]}.
{function,
 {2029,1},
 opt_not_in_let_2,2,
 [{clause,
   {2029,1},
   [{var,{2029,1},'_'},{var,{2029,1},'_'}],
   [[{call,
      {2029,1},
      {remote,{2029,1},{atom,{2029,1},fake},{atom,{2029,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2029,839},{atom,{2029,1},ignore}]},
  {clause,
   {2029,1},
   [{match,
     {2029,18},
     {tuple,
      {2029,18},
      [{atom,{2029,18},c_case},
       {var,{2029,18},'_'},
       {var,{2029,18},'_'},
       {var,{2029,34},'Cs0'}]},
     {var,{2029,39},'Case'}},
    {var,{2029,45},'NotCall'}],
   [],
   [{debug_line,2030,840},
    {match,
     {2030,5},
     {var,{2030,5},'Vars'},
     {call,
      {2030,12},
      {atom,{2030,12},make_vars},
      [{nil,{2030,22}},{integer,{2030,26},1}]}},
    {debug_line,2031,841},
    {match,
     {2031,5},
     {var,{2031,5},'Body'},
     {block,
      {2031,12},
      [{match,{2031,12},{var,{2031,12},rec58},{var,{2031,12},'NotCall'}},
       {'case',
        {2031,27},
        {var,{2031,12},rec58},
        [{clause,
          {2031,27},
          [{tuple,
            {2031,27},
            [{atom,{2031,27},c_call},
             {var,{2031,27},'_'},
             {var,{2031,27},'_'},
             {var,{2031,27},'_'},
             {var,{2031,27},'_'}]}],
          [],
          [{call,
            {2031,27},
            {remote,
             {2031,27},
             {atom,{2031,27},erlang},
             {atom,{2031,27},setelement}},
            [{integer,{2031,27},5},
             {var,{2031,12},rec58},
             {var,{2031,32},'Vars'}]}]},
         {clause,
          [{generated,true},{location,{2031,27}}],
          [{var,[{generated,true},{location,{2031,27}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2031,27}}],
            {remote,
             [{generated,true},{location,{2031,27}}],
             {atom,[{generated,true},{location,{2031,27}}],erlang},
             {atom,[{generated,true},{location,{2031,27}}],error}},
            [{tuple,
              [{generated,true},{location,{2031,27}}],
              [{atom,[{generated,true},{location,{2031,27}}],badrecord},
               {var,{2031,12},rec58}]}]}]}]}]}},
    {debug_line,2032,842},
    {match,
     {2032,5},
     {var,{2032,5},'Cs'},
     {lc,
      {2032,10},
      {block,
       {2032,11},
       [{debug_line,2033,843},
        {match,
         {2033,8},
         {var,{2033,8},'Let'},
         {tuple,
          {2033,14},
          [{atom,{2033,14},c_let},
           {nil,{2033,14}},
           {var,{2033,26},'Vars'},
           {var,{2033,35},'B'},
           {var,{2033,42},'Body'}]}},
        {debug_line,2034,844},
        {block,
         {2034,8},
         [{match,
           {2034,19},
           {var,{2034,19},rec59},
           {call,
            {2034,24},
            {atom,{2034,24},opt_not_in_let},
            [{var,{2034,39},'Let'}]}},
          {match,{2034,8},{var,{2034,8},rec60},{var,{2034,8},'C'}},
          {'case',
           {2034,19},
           {var,{2034,8},rec60},
           [{clause,
             {2034,19},
             [{tuple,
               {2034,19},
               [{atom,{2034,19},c_clause},
                {var,{2034,19},'_'},
                {var,{2034,19},'_'},
                {var,{2034,19},'_'},
                {var,{2034,19},'_'}]}],
             [],
             [{call,
               {2034,19},
               {remote,
                {2034,19},
                {atom,{2034,19},erlang},
                {atom,{2034,19},setelement}},
               [{integer,{2034,19},5},
                {var,{2034,8},rec60},
                {var,{2034,19},rec59}]}]},
            {clause,
             [{generated,true},{location,{2034,19}}],
             [{var,[{generated,true},{location,{2034,19}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2034,19}}],
               {remote,
                [{generated,true},{location,{2034,19}}],
                {atom,[{generated,true},{location,{2034,19}}],erlang},
                {atom,[{generated,true},{location,{2034,19}}],error}},
               [{tuple,
                 [{generated,true},{location,{2034,19}}],
                 [{atom,[{generated,true},{location,{2034,19}}],badrecord},
                  {var,{2034,8},rec60}]}]}]}]}]}]},
      [{block,0,[{debug_line,2035,845},{atom,{2035,35},true}]},
       {generate_strict,
        {2035,31},
        {match,
         {2035,11},
         {tuple,
          {2035,11},
          [{atom,{2035,11},c_clause},
           {var,{2035,11},'_'},
           {var,{2035,11},'_'},
           {var,{2035,11},'_'},
           {var,{2035,26},'B'}]},
         {var,{2035,29},'C'}},
        {var,{2035,35},'Cs0'}}]}},
    {debug_line,2036,846},
    {tuple,
     {2036,5},
     [{atom,{2036,6},yes},
      {block,
       {2036,10},
       [{match,{2036,10},{var,{2036,10},rec61},{var,{2036,10},'Case'}},
        {'case',
         {2036,22},
         {var,{2036,10},rec61},
         [{clause,
           {2036,22},
           [{tuple,
             {2036,22},
             [{atom,{2036,22},c_case},
              {var,{2036,22},'_'},
              {var,{2036,22},'_'},
              {var,{2036,22},'_'}]}],
           [],
           [{call,
             {2036,22},
             {remote,
              {2036,22},
              {atom,{2036,22},erlang},
              {atom,{2036,22},setelement}},
             [{integer,{2036,22},4},
              {var,{2036,10},rec61},
              {var,{2036,30},'Cs'}]}]},
          {clause,
           [{generated,true},{location,{2036,22}}],
           [{var,[{generated,true},{location,{2036,22}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2036,22}}],
             {remote,
              [{generated,true},{location,{2036,22}}],
              {atom,[{generated,true},{location,{2036,22}}],erlang},
              {atom,[{generated,true},{location,{2036,22}}],error}},
             [{tuple,
               [{generated,true},{location,{2036,22}}],
               [{atom,[{generated,true},{location,{2036,22}}],badrecord},
                {var,{2036,10},rec61}]}]}]}]}]}]}]},
  {clause,
   {2037,1},
   [{match,
     {2037,18},
     {tuple,
      {2037,18},
      [{atom,{2037,18},c_call},
       {var,{2037,18},'_'},
       {var,{2037,18},'_'},
       {var,{2037,18},'_'},
       {var,{2037,18},'_'}]},
     {var,{2037,28},'Call0'}},
    {var,{2037,35},'_NotCall'}],
   [],
   [{debug_line,2038,847},
    {call,{2038,5},{atom,{2038,5},invert_call},[{var,{2038,17},'Call0'}]}]},
  {clause,
   {2039,1},
   [{var,{2039,18},'_'},{var,{2039,21},'_'}],
   [],
   [{debug_line,2039,848},{atom,{2039,27},no}]}]}.
{function,
 {2041,1},
 invert_call,1,
 [{clause,
   {2041,1},
   [{var,{2041,1},'_'}],
   [[{call,
      {2041,1},
      {remote,{2041,1},{atom,{2041,1},fake},{atom,{2041,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2041,849},{atom,{2041,1},ignore}]},
  {clause,
   {2041,1},
   [{match,
     {2041,13},
     {tuple,
      {2041,13},
      [{atom,{2041,13},c_call},
       {var,{2041,13},'_'},
       {tuple,
        {2041,28},
        [{atom,{2041,28},c_literal},
         {var,{2041,28},'_'},
         {atom,{2041,43},erlang}]},
       {tuple,
        {2042,12},
        [{atom,{2042,12},c_literal},
         {var,{2042,12},'_'},
         {var,{2042,27},'Name0'}]},
       {cons,
        {2043,12},
        {var,{2043,13},'_'},
        {cons,{2043,15},{var,{2043,15},'_'},{nil,{2043,16}}}}]},
     {var,{2043,19},'Call'}}],
   [],
   [{debug_line,2044,850},
    {'case',
     {2044,5},
     {call,
      {2044,10},
      {atom,{2044,10},inverse_rel_op},
      [{var,{2044,25},'Name0'}]},
     [{clause,
       {2045,2},
       [{atom,{2045,2},no}],
       [],
       [{debug_line,2045,851},{atom,{2045,8},no}]},
      {clause,
       {2046,2},
       [{var,{2046,2},'Name'}],
       [],
       [{debug_line,2046,852},
        {tuple,
         {2046,10},
         [{atom,{2046,11},yes},
          {block,
           {2046,15},
           [{match,
             {2046,27},
             {var,{2046,27},rec62},
             {tuple,
              {2046,32},
              [{atom,{2046,32},c_literal},
               {nil,{2046,32}},
               {var,{2046,47},'Name'}]}},
            {match,{2046,15},{var,{2046,15},rec63},{var,{2046,15},'Call'}},
            {'case',
             {2046,27},
             {var,{2046,15},rec63},
             [{clause,
               {2046,27},
               [{tuple,
                 {2046,27},
                 [{atom,{2046,27},c_call},
                  {var,{2046,27},'_'},
                  {var,{2046,27},'_'},
                  {var,{2046,27},'_'},
                  {var,{2046,27},'_'}]}],
               [],
               [{call,
                 {2046,27},
                 {remote,
                  {2046,27},
                  {atom,{2046,27},erlang},
                  {atom,{2046,27},setelement}},
                 [{integer,{2046,27},4},
                  {var,{2046,15},rec63},
                  {var,{2046,27},rec62}]}]},
              {clause,
               [{generated,true},{location,{2046,27}}],
               [{var,[{generated,true},{location,{2046,27}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2046,27}}],
                 {remote,
                  [{generated,true},{location,{2046,27}}],
                  {atom,[{generated,true},{location,{2046,27}}],erlang},
                  {atom,[{generated,true},{location,{2046,27}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2046,27}}],
                   [{atom,[{generated,true},{location,{2046,27}}],badrecord},
                    {var,{2046,15},rec63}]}]}]}]}]}]}]}]}]},
  {clause,
   {2048,1},
   [{tuple,
     {2048,13},
     [{atom,{2048,13},c_call},
      {var,{2048,13},'_'},
      {var,{2048,13},'_'},
      {var,{2048,13},'_'},
      {var,{2048,13},'_'}]}],
   [],
   [{debug_line,2048,853},{atom,{2048,27},no}]}]}.
{function,{2052,1},
          inverse_rel_op,1,
          [{clause,{2052,1},
                   [{var,{2052,1},'_'}],
                   [[{call,{2052,1},
                           {remote,{2052,1},
                                   {atom,{2052,1},fake},
                                   {atom,{2052,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2052,854},{atom,{2052,1},ignore}]},
           {clause,{2052,1},
                   [{atom,{2052,16},'=:='}],
                   [],
                   [{debug_line,2052,855},{atom,{2052,26},'=/='}]},
           {clause,{2053,1},
                   [{atom,{2053,16},'=/='}],
                   [],
                   [{debug_line,2053,856},{atom,{2053,26},'=:='}]},
           {clause,{2054,1},
                   [{atom,{2054,16},'=='}],
                   [],
                   [{debug_line,2054,857},{atom,{2054,25},'/='}]},
           {clause,{2055,1},
                   [{atom,{2055,16},'/='}],
                   [],
                   [{debug_line,2055,858},{atom,{2055,25},'=='}]},
           {clause,{2056,1},
                   [{atom,{2056,16},'>'}],
                   [],
                   [{debug_line,2056,859},{atom,{2056,24},'=<'}]},
           {clause,{2057,1},
                   [{atom,{2057,16},'<'}],
                   [],
                   [{debug_line,2057,860},{atom,{2057,24},'>='}]},
           {clause,{2058,1},
                   [{atom,{2058,16},'>='}],
                   [],
                   [{debug_line,2058,861},{atom,{2058,25},'<'}]},
           {clause,{2059,1},
                   [{atom,{2059,16},'=<'}],
                   [],
                   [{debug_line,2059,862},{atom,{2059,25},'>'}]},
           {clause,{2060,1},
                   [{var,{2060,16},'_'}],
                   [],
                   [{debug_line,2060,863},{atom,{2060,22},no}]}]}.
{function,{2065,1},
          opt_bool_case_in_let,2,
          [{clause,{2065,1},
                   [{var,{2065,1},'_'},{var,{2065,1},'_'}],
                   [[{call,{2065,1},
                           {remote,{2065,1},
                                   {atom,{2065,1},fake},
                                   {atom,{2065,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2065,864},{atom,{2065,1},ignore}]},
           {clause,{2065,1},
                   [{match,{2065,22},
                           {tuple,{2065,22},
                                  [{atom,{2065,22},c_let},
                                   {var,{2065,22},'_'},
                                   {var,{2065,34},'Vs'},
                                   {var,{2065,41},'Arg'},
                                   {var,{2065,50},'B'}]},
                           {var,{2065,53},'Let'}},
                    {var,{2065,58},'Sub'}],
                   [],
                   [{debug_line,2066,865},
                    {call,{2066,5},
                          {atom,{2066,5},opt_bool_case_in_let_1},
                          [{var,{2066,28},'Vs'},
                           {var,{2066,32},'Arg'},
                           {var,{2066,37},'B'},
                           {var,{2066,40},'Let'},
                           {var,{2066,45},'Sub'}]}]}]}.
{function,
 {2068,1},
 opt_bool_case_in_let_1,5,
 [{clause,
   {2068,1},
   [{var,{2068,1},'_'},
    {var,{2068,1},'_'},
    {var,{2068,1},'_'},
    {var,{2068,1},'_'},
    {var,{2068,1},'_'}],
   [[{call,
      {2068,1},
      {remote,{2068,1},{atom,{2068,1},fake},{atom,{2068,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2068,866},{atom,{2068,1},ignore}]},
  {clause,
   {2068,1},
   [{cons,
     {2068,24},
     {tuple,
      {2068,25},
      [{atom,{2068,25},c_var},{var,{2068,25},'_'},{var,{2068,37},'V'}]},
     {nil,{2068,39}}},
    {var,{2068,42},'Arg'},
    {match,
     {2069,5},
     {tuple,
      {2069,5},
      [{atom,{2069,5},c_case},
       {var,{2069,5},'_'},
       {tuple,
        {2069,17},
        [{atom,{2069,17},c_var},{var,{2069,17},'_'},{var,{2069,29},'V'}]},
       {var,{2069,5},'_'}]},
     {var,{2069,33},'Case0'}},
    {var,{2069,40},'Let'},
    {var,{2069,45},'Sub'}],
   [],
   [{debug_line,2070,867},
    {'case',
     {2070,5},
     {call,
      {2070,10},
      {atom,{2070,10},is_simple_case_arg},
      [{var,{2070,29},'Arg'}]},
     [{clause,
       {2071,2},
       [{atom,{2071,2},true}],
       [],
       [{debug_line,2072,868},
        {match,
         {2072,6},
         {var,{2072,6},'Case'},
         {call,
          {2072,13},
          {atom,{2072,13},opt_bool_case},
          [{block,0,
            [{block,
              {2072,27},
              [{match,{2072,27},{var,{2072,27},rec64},{var,{2072,27},'Case0'}},
               {'case',
                {2072,40},
                {var,{2072,27},rec64},
                [{clause,
                  {2072,40},
                  [{tuple,
                    {2072,40},
                    [{atom,{2072,40},c_case},
                     {var,{2072,40},'_'},
                     {var,{2072,40},'_'},
                     {var,{2072,40},'_'}]}],
                  [],
                  [{call,
                    {2072,40},
                    {remote,
                     {2072,40},
                     {atom,{2072,40},erlang},
                     {atom,{2072,40},setelement}},
                    [{integer,{2072,40},3},
                     {var,{2072,27},rec64},
                     {var,{2072,44},'Arg'}]}]},
                 {clause,
                  [{generated,true},{location,{2072,40}}],
                  [{var,[{generated,true},{location,{2072,40}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2072,40}}],
                    {remote,
                     [{generated,true},{location,{2072,40}}],
                     {atom,[{generated,true},{location,{2072,40}}],erlang},
                     {atom,[{generated,true},{location,{2072,40}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2072,40}}],
                      [{atom,
                        [{generated,true},{location,{2072,40}}],
                        badrecord},
                       {var,{2072,27},rec64}]}]}]}]}]}]},
           {var,{2072,50},'Sub'}]}},
        {debug_line,2073,869},
        {'case',
         {2073,6},
         {call,
          {2073,11},
          {remote,
           {2073,19},
           {atom,{2073,11},core_lib},
           {atom,{2073,20},is_var_used}},
          [{var,{2073,32},'V'},{var,{2073,35},'Case'}]},
         [{clause,
           {2074,3},
           [{atom,{2074,3},false}],
           [],
           [{debug_line,2074,870},{var,{2074,12},'Case'}]},
          {clause,
           {2075,3},
           [{atom,{2075,3},true}],
           [],
           [{debug_line,2075,871},{var,{2075,11},'Let'}]}]}]},
      {clause,
       {2077,2},
       [{atom,{2077,2},false}],
       [],
       [{debug_line,2078,872},{var,{2078,6},'Let'}]}]}]},
  {clause,
   {2080,1},
   [{var,{2080,24},'_'},
    {var,{2080,27},'_'},
    {var,{2080,30},'_'},
    {var,{2080,33},'Let'},
    {var,{2080,38},'_'}],
   [],
   [{debug_line,2080,873},{var,{2080,44},'Let'}]}]}.
{function,{2088,1},
          is_simple_case_arg,1,
          [{clause,{2088,1},
                   [{var,{2088,1},'_'}],
                   [[{call,{2088,1},
                           {remote,{2088,1},
                                   {atom,{2088,1},fake},
                                   {atom,{2088,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2088,874},{atom,{2088,1},ignore}]},
           {clause,{2088,1},
                   [{tuple,{2088,20},
                           [{atom,{2088,20},c_cons},
                            {var,{2088,20},'_'},
                            {var,{2088,20},'_'},
                            {var,{2088,20},'_'}]}],
                   [],
                   [{debug_line,2088,875},{atom,{2088,34},true}]},
           {clause,{2089,1},
                   [{tuple,{2089,20},
                           [{atom,{2089,20},c_tuple},
                            {var,{2089,20},'_'},
                            {var,{2089,20},'_'}]}],
                   [],
                   [{debug_line,2089,876},{atom,{2089,35},true}]},
           {clause,{2090,1},
                   [{tuple,{2090,20},
                           [{atom,{2090,20},c_call},
                            {var,{2090,20},'_'},
                            {var,{2090,20},'_'},
                            {var,{2090,20},'_'},
                            {var,{2090,20},'_'}]}],
                   [],
                   [{debug_line,2090,877},{atom,{2090,34},true}]},
           {clause,{2091,1},
                   [{tuple,{2091,20},
                           [{atom,{2091,20},c_apply},
                            {var,{2091,20},'_'},
                            {var,{2091,20},'_'},
                            {var,{2091,20},'_'}]}],
                   [],
                   [{debug_line,2091,878},{atom,{2091,35},true}]},
           {clause,{2092,1},
                   [{var,{2092,20},'_'}],
                   [],
                   [{debug_line,2092,879},{atom,{2092,26},false}]}]}.
{function,
 {2099,1},
 is_bool_expr,1,
 [{clause,
   {2099,1},
   [{var,{2099,1},'_'}],
   [[{call,
      {2099,1},
      {remote,{2099,1},{atom,{2099,1},fake},{atom,{2099,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2099,880},{atom,{2099,1},ignore}]},
  {clause,
   {2099,1},
   [{tuple,
     {2099,14},
     [{atom,{2099,14},c_call},
      {var,{2099,14},'_'},
      {tuple,
       {2099,29},
       [{atom,{2099,29},c_literal},
        {var,{2099,29},'_'},
        {atom,{2099,44},erlang}]},
      {tuple,
       {2100,13},
       [{atom,{2100,13},c_literal},
        {var,{2100,13},'_'},
        {var,{2100,28},'Name'}]},
      {var,{2100,39},'Args'}]}],
   [],
   [{debug_line,2101,881},
    {match,
     {2101,5},
     {var,{2101,5},'NumArgs'},
     {call,
      {2101,15},
      {remote,{2101,15},{atom,{2101,15},erlang},{atom,{2101,15},length}},
      [{var,{2101,22},'Args'}]}},
    {debug_line,2102,882},
    {'case',
     {2102,5},
     {call,
      {2102,5},
      {remote,{2102,17},{atom,{2102,5},erl_internal},{atom,{2102,18},comp_op}},
      [{var,{2102,26},'Name'},{var,{2102,32},'NumArgs'}]},
     [{clause,{2102,5},[{atom,{2102,5},true}],[],[{atom,{2102,5},true}]},
      {clause,
       {2102,5},
       [{atom,{2102,5},false}],
       [],
       [{debug_line,2103,883},
        {'case',
         {2103,2},
         {call,
          {2103,2},
          {remote,
           {2103,14},
           {atom,{2103,2},erl_internal},
           {atom,{2103,15},new_type_test}},
          [{var,{2103,29},'Name'},{var,{2103,35},'NumArgs'}]},
         [{clause,{2103,2},[{atom,{2103,2},true}],[],[{atom,{2103,2},true}]},
          {clause,
           {2103,2},
           [{atom,{2103,2},false}],
           [],
           [{debug_line,2104,884},
            {call,
             {2104,9},
             {remote,
              {2104,21},
              {atom,{2104,9},erl_internal},
              {atom,{2104,22},bool_op}},
             [{var,{2104,30},'Name'},{var,{2104,36},'NumArgs'}]}]},
          {clause,
           [{generated,true},{location,{2103,2}}],
           [{var,{2103,2},cov1}],
           [],
           [{call,
             {2103,2},
             {remote,{2103,2},{atom,{2103,2},erlang},{atom,{2103,2},error}},
             [{block,0,
               [{tuple,
                 {2103,2},
                 [{atom,{2103,2},badarg},{var,{2103,2},cov1}]}]}]}]}]}]},
      {clause,
       [{generated,true},{location,{2102,5}}],
       [{var,{2102,5},cov2}],
       [],
       [{call,
         {2102,5},
         {remote,{2102,5},{atom,{2102,5},erlang},{atom,{2102,5},error}},
         [{block,0,
           [{tuple,
             {2102,5},
             [{atom,{2102,5},badarg},{var,{2102,5},cov2}]}]}]}]}]}]},
  {clause,
   {2105,1},
   [{tuple,
     {2105,14},
     [{atom,{2105,14},c_try},
      {var,{2105,14},'_'},
      {var,{2105,25},'E'},
      {cons,
       {2105,32},
       {tuple,
        {2105,33},
        [{atom,{2105,33},c_var},{var,{2105,33},'_'},{var,{2105,45},'X'}]},
       {nil,{2105,47}}},
      {tuple,
       {2105,54},
       [{atom,{2105,54},c_var},{var,{2105,54},'_'},{var,{2105,66},'X'}]},
      {var,{2105,14},'_'},
      {tuple,
       {2106,14},
       [{atom,{2106,14},c_literal},
        {var,{2106,14},'_'},
        {atom,{2106,29},false}]}]}],
   [],
   [{debug_line,2107,885},
    {call,{2107,5},{atom,{2107,5},is_bool_expr},[{var,{2107,18},'E'}]}]},
  {clause,
   {2108,1},
   [{tuple,
     {2108,14},
     [{atom,{2108,14},c_case},
      {var,{2108,14},'_'},
      {var,{2108,14},'_'},
      {var,{2108,30},'Cs'}]}],
   [],
   [{debug_line,2109,886},
    {call,{2109,5},{atom,{2109,5},is_bool_expr_list},[{var,{2109,23},'Cs'}]}]},
  {clause,
   {2110,1},
   [{tuple,
     {2110,14},
     [{atom,{2110,14},c_clause},
      {var,{2110,14},'_'},
      {var,{2110,14},'_'},
      {var,{2110,14},'_'},
      {var,{2110,29},'B'}]}],
   [],
   [{debug_line,2111,887},
    {call,{2111,5},{atom,{2111,5},is_bool_expr},[{var,{2111,18},'B'}]}]},
  {clause,
   {2112,1},
   [{tuple,
     {2112,14},
     [{atom,{2112,14},c_let},
      {var,{2112,14},'_'},
      {var,{2112,14},'_'},
      {var,{2112,14},'_'},
      {var,{2112,26},'B'}]}],
   [],
   [{debug_line,2113,888},
    {call,{2113,5},{atom,{2113,5},is_bool_expr},[{var,{2113,18},'B'}]}]},
  {clause,
   {2114,1},
   [{tuple,
     {2114,14},
     [{atom,{2114,14},c_literal},{var,{2114,14},'_'},{var,{2114,29},'Val'}]}],
   [],
   [{debug_line,2115,889},
    {call,
     {2115,5},
     {remote,{2115,5},{atom,{2115,5},erlang},{atom,{2115,5},is_boolean}},
     [{var,{2115,16},'Val'}]}]},
  {clause,
   {2116,1},
   [{var,{2116,14},'_'}],
   [],
   [{debug_line,2116,890},{atom,{2116,20},false}]}]}.
{function,
    {2118,1},
    is_bool_expr_list,1,
    [{clause,
         {2118,1},
         [{var,{2118,1},'_'}],
         [[{call,
               {2118,1},
               {remote,
                   {2118,1},
                   {atom,{2118,1},fake},
                   {atom,{2118,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2118,891},{atom,{2118,1},ignore}]},
     {clause,
         {2118,1},
         [{cons,{2118,19},{var,{2118,20},'C'},{var,{2118,22},'Cs'}}],
         [],
         [{debug_line,2119,892},
          {'case',
              {2119,5},
              {call,
                  {2119,5},
                  {atom,{2119,5},is_bool_expr},
                  [{var,{2119,18},'C'}]},
              [{clause,
                   {2119,5},
                   [{atom,{2119,5},true}],
                   [],
                   [{call,
                        {2119,29},
                        {atom,{2119,29},is_bool_expr_list},
                        [{var,{2119,47},'Cs'}]}]},
               {clause,
                   {2119,5},
                   [{atom,{2119,5},false}],
                   [],
                   [{atom,{2119,5},false}]},
               {clause,
                   [{generated,true},{location,{2119,5}}],
                   [{var,{2119,5},cov1}],
                   [],
                   [{call,
                        {2119,5},
                        {remote,
                            {2119,5},
                            {atom,{2119,5},erlang},
                            {atom,{2119,5},error}},
                        [{block,0,
                             [{tuple,
                                  {2119,5},
                                  [{atom,{2119,5},badarg},
                                   {var,{2119,5},cov1}]}]}]}]}]}]},
     {clause,
         {2120,1},
         [{nil,{2120,19}}],
         [],
         [{debug_line,2120,893},{atom,{2120,26},true}]}]}.
{function,
    {2126,1},
    is_safe_bool_expr,1,
    [{clause,
         {2126,1},
         [{var,{2126,1},'_'}],
         [[{call,
               {2126,1},
               {remote,
                   {2126,1},
                   {atom,{2126,1},fake},
                   {atom,{2126,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2126,894},{atom,{2126,1},ignore}]},
     {clause,
         {2126,1},
         [{var,{2126,19},'Core'}],
         [],
         [{debug_line,2127,895},
          {call,
              {2127,5},
              {atom,{2127,5},is_safe_bool_expr_1},
              [{var,{2127,25},'Core'},
               {block,0,
                   [{call,
                        {2127,31},
                        {remote,
                            {2127,35},
                            {atom,{2127,31},sets},
                            {atom,{2127,36},new}},
                        []}]}]}]}]}.
{function,
 {2129,1},
 is_safe_bool_expr_1,2,
 [{clause,
   {2129,1},
   [{var,{2129,1},'_'},{var,{2129,1},'_'}],
   [[{call,
      {2129,1},
      {remote,{2129,1},{atom,{2129,1},fake},{atom,{2129,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2129,896},{atom,{2129,1},ignore}]},
  {clause,
   {2129,1},
   [{tuple,
     {2129,21},
     [{atom,{2129,21},c_call},
      {var,{2129,21},'_'},
      {tuple,
       {2129,36},
       [{atom,{2129,36},c_literal},
        {var,{2129,36},'_'},
        {atom,{2129,51},erlang}]},
      {tuple,
       {2130,34},
       [{atom,{2130,34},c_literal},
        {var,{2130,34},'_'},
        {atom,{2130,49},is_function}]},
      {cons,
       {2131,34},
       {var,{2131,35},'A'},
       {cons,
        {2131,37},
        {tuple,
         {2131,37},
         [{atom,{2131,37},c_literal},
          {var,{2131,37},'_'},
          {var,{2131,52},'Arity'}]},
        {nil,{2131,58}}}}]},
    {var,{2132,21},'_BoolVars'}],
   [[{call,
      {2132,37},
      {remote,{2132,37},{atom,{2132,37},erlang},{atom,{2132,37},is_integer}},
      [{var,{2132,48},'Arity'}]},
     {op,{2132,62},'>=',{var,{2132,56},'Arity'},{integer,{2132,65},0}}]],
   [{debug_line,2133,897},
    {call,{2133,5},{atom,{2133,5},is_safe_simple},[{var,{2133,20},'A'}]}]},
  {clause,
   {2134,1},
   [{tuple,
     {2134,21},
     [{atom,{2134,21},c_call},
      {var,{2134,21},'_'},
      {tuple,
       {2134,36},
       [{atom,{2134,36},c_literal},
        {var,{2134,36},'_'},
        {atom,{2134,51},erlang}]},
      {tuple,
       {2135,34},
       [{atom,{2135,34},c_literal},
        {var,{2135,34},'_'},
        {atom,{2135,49},is_function}]},
      {var,{2134,21},'_'}]},
    {var,{2136,21},'_BoolVars'}],
   [],
   [{debug_line,2137,898},{atom,{2137,5},false}]},
  {clause,
   {2138,1},
   [{tuple,
     {2138,21},
     [{atom,{2138,21},c_call},
      {var,{2138,21},'_'},
      {tuple,
       {2138,36},
       [{atom,{2138,36},c_literal},
        {var,{2138,36},'_'},
        {atom,{2138,51},erlang}]},
      {tuple,
       {2139,13},
       [{atom,{2139,13},c_literal},
        {var,{2139,13},'_'},
        {var,{2139,28},'Name'}]},
      {var,{2139,39},'Args'}]},
    {var,{2140,7},'BoolVars'}],
   [],
   [{debug_line,2141,899},
    {match,
     {2141,5},
     {var,{2141,5},'NumArgs'},
     {call,
      {2141,15},
      {remote,{2141,15},{atom,{2141,15},erlang},{atom,{2141,15},length}},
      [{var,{2141,22},'Args'}]}},
    {debug_line,2142,900},
    {'case',
     {2142,5},
     {'case',
      {2142,11},
      {'case',
       {2142,11},
       {call,
        {2142,11},
        {remote,
         {2142,23},
         {atom,{2142,11},erl_internal},
         {atom,{2142,24},comp_op}},
        [{var,{2142,32},'Name'},{var,{2142,38},'NumArgs'}]},
       [{clause,{2142,11},[{atom,{2142,11},true}],[],[{atom,{2142,11},true}]},
        {clause,
         {2142,11},
         [{atom,{2142,11},false}],
         [],
         [{debug_line,2143,901},
          {call,
           {2143,4},
           {remote,
            {2143,16},
            {atom,{2143,4},erl_internal},
            {atom,{2143,17},new_type_test}},
           [{var,{2143,31},'Name'},{var,{2143,37},'NumArgs'}]}]},
        {clause,
         [{generated,true},{location,{2142,11}}],
         [{var,{2142,11},cov1}],
         [],
         [{call,
           {2142,11},
           {remote,{2142,11},{atom,{2142,11},erlang},{atom,{2142,11},error}},
           [{block,0,
             [{tuple,
               {2142,11},
               [{atom,{2142,11},badarg},{var,{2142,11},cov1}]}]}]}]}]},
      [{clause,
        {2142,11},
        [{atom,{2142,11},true}],
        [],
        [{debug_line,2144,902},
         {call,
          {2144,2},
          {atom,{2144,2},is_safe_simple_list},
          [{var,{2144,22},'Args'}]}]},
       {clause,{2142,11},[{atom,{2142,11},false}],[],[{atom,{2142,11},false}]},
       {clause,
        [{generated,true},{location,{2142,11}}],
        [{var,{2142,11},cov2}],
        [],
        [{call,
          {2142,11},
          {remote,{2142,11},{atom,{2142,11},erlang},{atom,{2142,11},error}},
          [{block,0,
            [{tuple,
              {2142,11},
              [{atom,{2142,11},badarg},{var,{2142,11},cov2}]}]}]}]}]},
     [{clause,
       {2145,2},
       [{atom,{2145,2},true}],
       [],
       [{debug_line,2146,903},{atom,{2146,6},true}]},
      {clause,
       {2147,2},
       [{atom,{2147,2},false}],
       [],
       [{debug_line,2149,904},
        {'case',
         {2149,6},
         {call,
          {2149,6},
          {remote,
           {2149,18},
           {atom,{2149,6},erl_internal},
           {atom,{2149,19},bool_op}},
          [{var,{2149,27},'Name'},{var,{2149,33},'NumArgs'}]},
         [{clause,
           {2149,6},
           [{atom,{2149,6},true}],
           [],
           [{debug_line,2150,905},
            {call,
             {2150,3},
             {atom,{2150,3},is_safe_bool_expr_list},
             [{var,{2150,26},'Args'},{var,{2150,32},'BoolVars'}]}]},
          {clause,{2149,6},[{atom,{2149,6},false}],[],[{atom,{2149,6},false}]},
          {clause,
           [{generated,true},{location,{2149,6}}],
           [{var,{2149,6},cov3}],
           [],
           [{call,
             {2149,6},
             {remote,{2149,6},{atom,{2149,6},erlang},{atom,{2149,6},error}},
             [{block,0,
               [{tuple,
                 {2149,6},
                 [{atom,{2149,6},badarg},{var,{2149,6},cov3}]}]}]}]}]}]}]}]},
  {clause,
   {2152,1},
   [{tuple,
     {2152,21},
     [{atom,{2152,21},c_let},
      {var,{2152,21},'_'},
      {var,{2152,33},'Vars'},
      {var,{2152,42},'Arg'},
      {var,{2152,51},'B'}]},
    {var,{2152,55},'BoolVars'}],
   [],
   [{debug_line,2153,906},
    {'case',
     {2153,5},
     {call,{2153,10},{atom,{2153,10},is_safe_simple},[{var,{2153,25},'Arg'}]},
     [{clause,
       {2154,2},
       [{atom,{2154,2},true}],
       [],
       [{debug_line,2155,907},
        {'case',
         {2155,6},
         {tuple,
          {2155,11},
          [{call,
            {2155,12},
            {atom,{2155,12},is_safe_bool_expr_1},
            [{var,{2155,32},'Arg'},{var,{2155,37},'BoolVars'}]},
           {var,{2155,47},'Vars'}]},
         [{clause,
           {2156,3},
           [{tuple,
             {2156,3},
             [{atom,{2156,4},true},
              {cons,
               {2156,9},
               {tuple,
                {2156,10},
                [{atom,{2156,10},c_var},
                 {var,{2156,10},'_'},
                 {var,{2156,22},'V'}]},
               {nil,{2156,24}}}]}],
           [],
           [{debug_line,2157,908},
            {call,
             {2157,7},
             {atom,{2157,7},is_safe_bool_expr_1},
             [{var,{2157,27},'B'},
              {block,0,
               [{call,
                 {2157,30},
                 {remote,
                  {2157,34},
                  {atom,{2157,30},sets},
                  {atom,{2157,35},add_element}},
                 [{var,{2157,47},'V'},{var,{2157,50},'BoolVars'}]}]}]}]},
          {clause,
           {2158,3},
           [{tuple,{2158,3},[{atom,{2158,4},false},{var,{2158,10},'_'}]}],
           [],
           [{debug_line,2159,909},
            {call,
             {2159,7},
             {atom,{2159,7},is_safe_bool_expr_1},
             [{var,{2159,27},'B'},{var,{2159,30},'BoolVars'}]}]}]}]},
      {clause,
       {2161,2},
       [{atom,{2161,2},false}],
       [],
       [{debug_line,2161,910},{atom,{2161,11},false}]}]}]},
  {clause,
   {2163,1},
   [{tuple,
     {2163,21},
     [{atom,{2163,21},c_literal},{var,{2163,21},'_'},{var,{2163,36},'Val'}]},
    {var,{2163,42},'_BoolVars'}],
   [],
   [{debug_line,2164,911},
    {call,
     {2164,5},
     {remote,{2164,5},{atom,{2164,5},erlang},{atom,{2164,5},is_boolean}},
     [{var,{2164,16},'Val'}]}]},
  {clause,
   {2165,1},
   [{tuple,
     {2165,21},
     [{atom,{2165,21},c_var},{var,{2165,21},'_'},{var,{2165,33},'V'}]},
    {var,{2165,37},'BoolVars'}],
   [],
   [{debug_line,2166,912},
    {call,
     {2166,5},
     {remote,{2166,9},{atom,{2166,5},sets},{atom,{2166,10},is_element}},
     [{var,{2166,21},'V'},{var,{2166,24},'BoolVars'}]}]},
  {clause,
   {2167,1},
   [{var,{2167,21},'_'},{var,{2167,24},'_'}],
   [],
   [{debug_line,2167,913},{atom,{2167,30},false}]}]}.
{function,
    {2169,1},
    is_safe_bool_expr_list,2,
    [{clause,
         {2169,1},
         [{var,{2169,1},'_'},{var,{2169,1},'_'}],
         [[{call,
               {2169,1},
               {remote,
                   {2169,1},
                   {atom,{2169,1},fake},
                   {atom,{2169,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2169,914},{atom,{2169,1},ignore}]},
     {clause,
         {2169,1},
         [{cons,{2169,24},{var,{2169,25},'C'},{var,{2169,27},'Cs'}},
          {var,{2169,32},'BoolVars'}],
         [],
         [{debug_line,2170,915},
          {'case',
              {2170,5},
              {call,
                  {2170,10},
                  {atom,{2170,10},is_safe_bool_expr_1},
                  [{var,{2170,30},'C'},{var,{2170,33},'BoolVars'}]},
              [{clause,
                   {2171,2},
                   [{atom,{2171,2},true}],
                   [],
                   [{debug_line,2171,916},
                    {call,
                        {2171,10},
                        {atom,{2171,10},is_safe_bool_expr_list},
                        [{var,{2171,33},'Cs'},{var,{2171,37},'BoolVars'}]}]},
               {clause,
                   {2172,2},
                   [{atom,{2172,2},false}],
                   [],
                   [{debug_line,2172,917},{atom,{2172,11},false}]}]}]},
     {clause,
         {2174,1},
         [{nil,{2174,24}},{var,{2174,28},'_'}],
         [],
         [{debug_line,2174,918},{atom,{2174,34},true}]}]}.
{function,
    {2176,1},
    opt_fun_call,1,
    [{clause,
         {2176,1},
         [{var,{2176,1},'_'}],
         [[{call,
               {2176,1},
               {remote,
                   {2176,1},
                   {atom,{2176,1},fake},
                   {atom,{2176,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2176,919},{atom,{2176,1},ignore}]},
     {clause,
         {2176,1},
         [{match,
              {2176,14},
              {tuple,
                  {2176,14},
                  [{atom,{2176,14},c_let},
                   {var,{2176,14},'_'},
                   {cons,
                       {2176,26},
                       {tuple,
                           {2176,27},
                           [{atom,{2176,27},c_var},
                            {var,{2176,27},'_'},
                            {var,{2176,39},'V'}]},
                       {nil,{2176,41}}},
                   {match,
                       {2176,47},
                       {tuple,
                           {2176,47},
                           [{atom,{2176,47},c_fun},
                            {var,{2176,47},'_'},
                            {var,{2176,47},'_'},
                            {var,{2176,47},'_'}]},
                       {var,{2176,56},'FunDef'}},
                   {var,{2176,68},'Body'}]},
              {var,{2176,74},'Let'}}],
         [],
         [{debug_line,2177,920},
          {'try',
              {2177,5},
              [{call,
                   {2177,9},
                   {atom,{2177,9},do_opt_fun_call},
                   [{var,{2177,25},'V'},
                    {var,{2177,28},'FunDef'},
                    {var,{2177,36},'Body'}]}],
              [{clause,
                   {2178,9},
                   [{atom,{2178,9},impossible}],
                   [],
                   [{debug_line,2178,921},{var,{2178,23},'Let'}]},
               {clause,
                   {2179,9},
                   [{var,{2179,9},'Expr'}],
                   [],
                   [{debug_line,2179,922},{var,{2179,17},'Expr'}]}],
              [{clause,
                   {2181,9},
                   [{tuple,
                        {2181,9},
                        [{atom,{2181,9},throw},
                         {atom,{2181,15},impossible},
                         {var,{2181,15},'_'}]}],
                   [],
                   [{debug_line,2182,923},{var,{2182,13},'Let'}]}],
              []}]},
     {clause,
         {2184,1},
         [{var,{2184,14},'Expr'}],
         [],
         [{debug_line,2184,924},{var,{2184,23},'Expr'}]}]}.
{function,
    {2186,1},
    do_opt_fun_call,3,
    [{clause,
         {2186,1},
         [{var,{2186,1},'_'},{var,{2186,1},'_'},{var,{2186,1},'_'}],
         [[{call,
               {2186,1},
               {remote,
                   {2186,1},
                   {atom,{2186,1},fake},
                   {atom,{2186,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2186,925},{atom,{2186,1},ignore}]},
     {clause,
         {2186,1},
         [{var,{2186,17},'V'},
          {var,{2186,20},'FunDef'},
          {tuple,
              {2186,28},
              [{atom,{2186,28},c_apply},
               {var,{2186,28},'_'},
               {tuple,
                   {2186,40},
                   [{atom,{2186,40},c_var},
                    {var,{2186,40},'_'},
                    {var,{2186,52},'V'}]},
               {var,{2186,60},'CallArgs'}]}],
         [],
         [{debug_line,2187,926},
          {match,
              {2187,5},
              {var,{2187,5},'Values'},
              {call,
                  {2187,14},
                  {remote,
                      {2187,22},
                      {atom,{2187,14},core_lib},
                      {atom,{2187,23},make_values}},
                  [{var,{2187,35},'CallArgs'}]}},
          {debug_line,2188,927},
          {call,
              {2188,5},
              {atom,{2188,5},simplify_fun_call},
              [{var,{2188,23},'V'},
               {var,{2188,26},'Values'},
               {var,{2188,34},'FunDef'},
               {var,{2188,42},'CallArgs'}]}]},
     {clause,
         {2189,1},
         [{var,{2189,17},'V'},
          {var,{2189,20},'FunDef'},
          {match,
              {2189,28},
              {tuple,
                  {2189,28},
                  [{atom,{2189,28},c_let},
                   {var,{2189,28},'_'},
                   {var,{2189,28},'_'},
                   {tuple,
                       {2189,39},
                       [{atom,{2189,39},c_apply},
                        {var,{2189,39},'_'},
                        {tuple,
                            {2189,51},
                            [{atom,{2189,51},c_var},
                             {var,{2189,51},'_'},
                             {var,{2189,63},'V'}]},
                        {var,{2189,71},'CallArgs'}]},
                   {var,{2190,40},'Rest'}]},
              {var,{2190,46},'Let'}}],
         [],
         [{debug_line,2191,928},
          {match,
              {2191,5},
              {var,{2191,5},'Values'},
              {call,
                  {2191,14},
                  {remote,
                      {2191,22},
                      {atom,{2191,14},core_lib},
                      {atom,{2191,23},make_values}},
                  [{block,0,
                       [{cons,
                            {2191,35},
                            {var,{2191,36},'Rest'},
                            {var,{2191,41},'CallArgs'}}]}]}},
          {debug_line,2192,929},
          {match,
              {2192,5},
              {var,{2192,5},'Inlined'},
              {call,
                  {2192,15},
                  {atom,{2192,15},simplify_fun_call},
                  [{var,{2192,33},'V'},
                   {var,{2192,36},'Values'},
                   {var,{2192,44},'FunDef'},
                   {var,{2192,52},'CallArgs'}]}},
          {debug_line,2193,930},
          {block,
              {2193,5},
              [{match,{2193,5},{var,{2193,5},rec65},{var,{2193,5},'Let'}},
               {'case',
                   {2193,15},
                   {var,{2193,5},rec65},
                   [{clause,
                        {2193,15},
                        [{tuple,
                             {2193,15},
                             [{atom,{2193,15},c_let},
                              {var,{2193,15},'_'},
                              {var,{2193,15},'_'},
                              {var,{2193,15},'_'},
                              {var,{2193,15},'_'}]}],
                        [],
                        [{call,
                             {2193,15},
                             {remote,
                                 {2193,15},
                                 {atom,{2193,15},erlang},
                                 {atom,{2193,15},setelement}},
                             [{integer,{2193,15},4},
                              {var,{2193,5},rec65},
                              {var,{2193,19},'Inlined'}]}]},
                    {clause,
                        [{generated,true},{location,{2193,15}}],
                        [{var,[{generated,true},{location,{2193,15}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{2193,15}}],
                             {remote,
                                 [{generated,true},{location,{2193,15}}],
                                 {atom,
                                     [{generated,true},{location,{2193,15}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{2193,15}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{2193,15}}],
                                  [{atom,
                                       [{generated,true},{location,{2193,15}}],
                                       badrecord},
                                   {var,{2193,5},rec65}]}]}]}]}]}]},
     {clause,
         {2194,1},
         [{var,{2194,17},'V'},
          {var,{2194,20},'FunDef'},
          {match,
              {2194,28},
              {tuple,
                  {2194,28},
                  [{atom,{2194,28},c_seq},
                   {var,{2194,28},'_'},
                   {tuple,
                       {2194,39},
                       [{atom,{2194,39},c_apply},
                        {var,{2194,39},'_'},
                        {tuple,
                            {2194,51},
                            [{atom,{2194,51},c_var},
                             {var,{2194,51},'_'},
                             {var,{2194,63},'V'}]},
                        {var,{2194,71},'CallArgs'}]},
                   {var,{2195,40},'Rest'}]},
              {var,{2195,46},'Seq'}}],
         [],
         [{debug_line,2196,931},
          {match,
              {2196,5},
              {var,{2196,5},'Values'},
              {call,
                  {2196,14},
                  {remote,
                      {2196,22},
                      {atom,{2196,14},core_lib},
                      {atom,{2196,23},make_values}},
                  [{block,0,
                       [{cons,
                            {2196,35},
                            {var,{2196,36},'Rest'},
                            {var,{2196,41},'CallArgs'}}]}]}},
          {debug_line,2197,932},
          {match,
              {2197,5},
              {var,{2197,5},'Inlined'},
              {call,
                  {2197,15},
                  {atom,{2197,15},simplify_fun_call},
                  [{var,{2197,33},'V'},
                   {var,{2197,36},'Values'},
                   {var,{2197,44},'FunDef'},
                   {var,{2197,52},'CallArgs'}]}},
          {debug_line,2198,933},
          {block,
              {2198,5},
              [{match,{2198,5},{var,{2198,5},rec66},{var,{2198,5},'Seq'}},
               {'case',
                   {2198,15},
                   {var,{2198,5},rec66},
                   [{clause,
                        {2198,15},
                        [{tuple,
                             {2198,15},
                             [{atom,{2198,15},c_seq},
                              {var,{2198,15},'_'},
                              {var,{2198,15},'_'},
                              {var,{2198,15},'_'}]}],
                        [],
                        [{call,
                             {2198,15},
                             {remote,
                                 {2198,15},
                                 {atom,{2198,15},erlang},
                                 {atom,{2198,15},setelement}},
                             [{integer,{2198,15},3},
                              {var,{2198,5},rec66},
                              {var,{2198,19},'Inlined'}]}]},
                    {clause,
                        [{generated,true},{location,{2198,15}}],
                        [{var,[{generated,true},{location,{2198,15}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{2198,15}}],
                             {remote,
                                 [{generated,true},{location,{2198,15}}],
                                 {atom,
                                     [{generated,true},{location,{2198,15}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{2198,15}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{2198,15}}],
                                  [{atom,
                                       [{generated,true},{location,{2198,15}}],
                                       badrecord},
                                   {var,{2198,5},rec66}]}]}]}]}]}]},
     {clause,
         {2199,1},
         [{var,{2199,17},'_'},{var,{2199,20},'_'},{var,{2199,23},'_'}],
         [],
         [{debug_line,2199,934},{atom,{2199,29},impossible}]}]}.
{function,
    {2201,1},
    simplify_fun_call,4,
    [{clause,
         {2201,1},
         [{var,{2201,1},'_'},
          {var,{2201,1},'_'},
          {var,{2201,1},'_'},
          {var,{2201,1},'_'}],
         [[{call,
               {2201,1},
               {remote,
                   {2201,1},
                   {atom,{2201,1},fake},
                   {atom,{2201,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2201,935},{atom,{2201,1},ignore}]},
     {clause,
         {2201,1},
         [{var,{2201,19},'V'},
          {var,{2201,22},'Values'},
          {tuple,
              {2201,30},
              [{atom,{2201,30},c_fun},
               {var,{2201,30},'_'},
               {var,{2201,42},'Vars'},
               {var,{2201,52},'FunBody'}]},
          {var,{2201,62},'CallArgs'}],
         [],
         [{debug_line,2202,936},
          {'case',
              {2202,5},
              {'case',
                  {2202,10},
                  {op,{2202,10},
                      'not',
                      {call,
                          {2202,14},
                          {remote,
                              {2202,22},
                              {atom,{2202,14},core_lib},
                              {atom,{2202,23},is_var_used}},
                          [{var,{2202,35},'V'},{var,{2202,38},'Values'}]}},
                  [{clause,
                       {2202,10},
                       [{atom,{2202,10},true}],
                       [],
                       [{op,{2202,67},
                            '=:=',
                            {call,
                                {2202,54},
                                {remote,
                                    {2202,54},
                                    {atom,{2202,54},erlang},
                                    {atom,{2202,54},length}},
                                [{var,{2202,61},'Vars'}]},
                            {call,
                                {2202,71},
                                {remote,
                                    {2202,71},
                                    {atom,{2202,71},erlang},
                                    {atom,{2202,71},length}},
                                [{var,{2202,78},'CallArgs'}]}}]},
                   {clause,
                       {2202,10},
                       [{atom,{2202,10},false}],
                       [],
                       [{atom,{2202,10},false}]},
                   {clause,
                       [{generated,true},{location,{2202,10}}],
                       [{var,{2202,10},cov1}],
                       [],
                       [{call,
                            {2202,10},
                            {remote,
                                {2202,10},
                                {atom,{2202,10},erlang},
                                {atom,{2202,10},error}},
                            [{block,0,
                                 [{tuple,
                                      {2202,10},
                                      [{atom,{2202,10},badarg},
                                       {var,{2202,10},cov1}]}]}]}]}]},
              [{clause,
                   {2203,9},
                   [{atom,{2203,9},true}],
                   [],
                   [{debug_line,2205,937},
                    {tuple,
                        {2205,13},
                        [{atom,{2205,13},c_let},
                         {nil,{2205,13}},
                         {var,{2205,25},'Vars'},
                         {call,
                             {2206,24},
                             {remote,
                                 {2206,32},
                                 {atom,{2206,24},core_lib},
                                 {atom,{2206,33},make_values}},
                             [{var,{2206,45},'CallArgs'}]},
                         {var,{2207,25},'FunBody'}]}]},
               {clause,
                   {2208,9},
                   [{atom,{2208,9},false}],
                   [],
                   [{debug_line,2210,938},
                    {call,
                        {2210,13},
                        {remote,
                            {2210,13},
                            {atom,{2210,13},erlang},
                            {atom,{2210,13},throw}},
                        [{atom,{2210,19},impossible}]}]}]}]}]}.
{function,{2213,1},
          is_failing_clause,1,
          [{clause,{2213,1},
                   [{var,{2213,1},'_'}],
                   [[{call,{2213,1},
                           {remote,{2213,1},
                                   {atom,{2213,1},fake},
                                   {atom,{2213,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2213,939},{atom,{2213,1},ignore}]},
           {clause,{2213,1},
                   [{tuple,{2213,19},
                           [{atom,{2213,19},c_clause},
                            {var,{2213,19},'_'},
                            {var,{2213,19},'_'},
                            {var,{2213,19},'_'},
                            {var,{2213,34},'B'}]}],
                   [],
                   [{debug_line,2214,940},
                    {call,{2214,5},
                          {atom,{2214,5},will_fail},
                          [{var,{2214,15},'B'}]}]}]}.
{function,
 {2220,1},
 opt_build_stacktrace,1,
 [{clause,
   {2220,1},
   [{var,{2220,1},'_'}],
   [[{call,
      {2220,1},
      {remote,{2220,1},{atom,{2220,1},fake},{atom,{2220,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2220,941},{atom,{2220,1},ignore}]},
  {clause,
   {2220,1},
   [{match,
     {2220,22},
     {tuple,
      {2220,22},
      [{atom,{2220,22},c_let},
       {var,{2220,22},'_'},
       {cons,
        {2220,34},
        {tuple,
         {2220,35},
         [{atom,{2220,35},c_var},
          {var,{2220,35},'_'},
          {var,{2220,47},'Cooked'}]},
        {nil,{2220,54}}},
       {tuple,
        {2221,33},
        [{atom,{2221,33},c_primop},
         {var,{2221,33},'_'},
         {tuple,
          {2221,48},
          [{atom,{2221,48},c_literal},
           {var,{2221,48},'_'},
           {atom,{2221,63},build_stacktrace}]},
         {cons,{2222,48},{var,{2222,49},'RawStk'},{nil,{2222,55}}}]},
       {var,{2223,34},'Body'}]},
     {var,{2223,40},'Let'}}],
   [],
   [{debug_line,2224,942},
    {'case',
     {2224,5},
     {var,{2224,10},'Body'},
     [{clause,
       {2225,9},
       [{tuple,
         {2225,9},
         [{atom,{2225,9},c_call},
          {var,{2225,9},'_'},
          {tuple,
           {2225,24},
           [{atom,{2225,24},c_literal},
            {var,{2225,24},'_'},
            {atom,{2225,39},erlang}]},
          {tuple,
           {2226,22},
           [{atom,{2226,22},c_literal},
            {var,{2226,22},'_'},
            {atom,{2226,37},raise}]},
          {cons,
           {2227,22},
           {var,{2227,23},'Class'},
           {cons,
            {2227,29},
            {var,{2227,29},'Exp'},
            {cons,
             {2227,33},
             {tuple,
              {2227,33},
              [{atom,{2227,33},c_var},
               {var,{2227,33},'_'},
               {var,{2227,45},'Cooked'}]},
             {nil,{2227,52}}}}}]}],
       [],
       [{debug_line,2228,943},
        {'case',
         {2228,13},
         {call,
          {2228,18},
          {remote,
           {2228,26},
           {atom,{2228,18},core_lib},
           {atom,{2228,27},is_var_used}},
          [{var,{2228,39},'Cooked'},
           {block,0,
            [{tuple,
              {2228,47},
              [{atom,{2228,47},c_cons},
               {nil,{2228,47}},
               {var,{2228,58},'Class'},
               {var,{2228,67},'Exp'}]}]}]},
         [{clause,
           {2229,17},
           [{atom,{2229,17},true}],
           [],
           [{debug_line,2232,944},{var,{2232,21},'Let'}]},
          {clause,
           {2233,17},
           [{atom,{2233,17},false}],
           [],
           [{debug_line,2239,945},
            {tuple,
             {2239,21},
             [{atom,{2239,21},c_primop},
              {nil,{2239,21}},
              {tuple,
               {2239,36},
               [{atom,{2239,36},c_literal},
                {nil,{2239,36}},
                {atom,{2239,51},raw_raise}]},
              {cons,
               {2240,36},
               {var,{2240,37},'Class'},
               {cons,
                {2240,43},
                {var,{2240,43},'Exp'},
                {cons,
                 {2240,47},
                 {var,{2240,47},'RawStk'},
                 {nil,{2240,53}}}}}]}]}]}]},
      {clause,
       {2242,9},
       [{tuple,
         {2242,9},
         [{atom,{2242,9},c_let},
          {var,{2242,9},'_'},
          {cons,
           {2242,21},
           {tuple,
            {2242,22},
            [{atom,{2242,22},c_var},{var,{2242,22},'_'},{var,{2242,34},'V'}]},
           {nil,{2242,36}}},
          {var,{2242,42},'Arg'},
          {var,{2242,51},'B0'}]}],
       [[{op,{2242,62},'=/=',{var,{2242,60},'V'},{var,{2242,66},'Cooked'}}]],
       [{debug_line,2243,946},
        {'case',
         {2243,13},
         {call,
          {2243,18},
          {remote,
           {2243,26},
           {atom,{2243,18},core_lib},
           {atom,{2243,27},is_var_used}},
          [{var,{2243,39},'Cooked'},{var,{2243,47},'Arg'}]},
         [{clause,
           {2244,17},
           [{atom,{2244,17},false}],
           [],
           [{debug_line,2248,947},
            {match,
             {2248,21},
             {var,{2248,21},'B'},
             {call,
              {2248,25},
              {atom,{2248,25},opt_build_stacktrace},
              [{block,0,
                [{block,
                  {2248,46},
                  [{match,
                    {2248,46},
                    {var,{2248,46},rec67},
                    {var,{2248,46},'Let'}},
                   {'case',
                    {2248,56},
                    {var,{2248,46},rec67},
                    [{clause,
                      {2248,56},
                      [{tuple,
                        {2248,56},
                        [{atom,{2248,56},c_let},
                         {var,{2248,56},'_'},
                         {var,{2248,56},'_'},
                         {var,{2248,56},'_'},
                         {var,{2248,56},'_'}]}],
                      [],
                      [{call,
                        {2248,56},
                        {remote,
                         {2248,56},
                         {atom,{2248,56},erlang},
                         {atom,{2248,56},setelement}},
                        [{integer,{2248,56},5},
                         {var,{2248,46},rec67},
                         {var,{2248,61},'B0'}]}]},
                     {clause,
                      [{generated,true},{location,{2248,56}}],
                      [{var,[{generated,true},{location,{2248,56}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{2248,56}}],
                        {remote,
                         [{generated,true},{location,{2248,56}}],
                         {atom,[{generated,true},{location,{2248,56}}],erlang},
                         {atom,[{generated,true},{location,{2248,56}}],error}},
                        [{tuple,
                          [{generated,true},{location,{2248,56}}],
                          [{atom,
                            [{generated,true},{location,{2248,56}}],
                            badrecord},
                           {var,{2248,46},rec67}]}]}]}]}]}]}]}},
            {debug_line,2249,948},
            {block,
             {2249,21},
             [{match,{2249,21},{var,{2249,21},rec68},{var,{2249,21},'Body'}},
              {'case',
               {2249,32},
               {var,{2249,21},rec68},
               [{clause,
                 {2249,32},
                 [{tuple,
                   {2249,32},
                   [{atom,{2249,32},c_let},
                    {var,{2249,32},'_'},
                    {var,{2249,32},'_'},
                    {var,{2249,32},'_'},
                    {var,{2249,32},'_'}]}],
                 [],
                 [{call,
                   {2249,32},
                   {remote,
                    {2249,32},
                    {atom,{2249,32},erlang},
                    {atom,{2249,32},setelement}},
                   [{integer,{2249,32},5},
                    {var,{2249,21},rec68},
                    {var,{2249,37},'B'}]}]},
                {clause,
                 [{generated,true},{location,{2249,32}}],
                 [{var,[{generated,true},{location,{2249,32}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{2249,32}}],
                   {remote,
                    [{generated,true},{location,{2249,32}}],
                    {atom,[{generated,true},{location,{2249,32}}],erlang},
                    {atom,[{generated,true},{location,{2249,32}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2249,32}}],
                     [{atom,[{generated,true},{location,{2249,32}}],badrecord},
                      {var,{2249,21},rec68}]}]}]}]}]}]},
          {clause,
           {2250,17},
           [{atom,{2250,17},true}],
           [],
           [{debug_line,2251,949},{var,{2251,21},'Let'}]}]}]},
      {clause,
       {2253,9},
       [{tuple,
         {2253,9},
         [{atom,{2253,9},c_seq},
          {var,{2253,9},'_'},
          {var,{2253,20},'Arg'},
          {var,{2253,29},'B0'}]}],
       [],
       [{debug_line,2254,950},
        {'case',
         {2254,13},
         {call,
          {2254,18},
          {remote,
           {2254,26},
           {atom,{2254,18},core_lib},
           {atom,{2254,27},is_var_used}},
          [{var,{2254,39},'Cooked'},{var,{2254,47},'Arg'}]},
         [{clause,
           {2255,17},
           [{atom,{2255,17},false}],
           [],
           [{debug_line,2259,951},
            {match,
             {2259,21},
             {var,{2259,21},'B'},
             {call,
              {2259,25},
              {atom,{2259,25},opt_build_stacktrace},
              [{block,0,
                [{block,
                  {2259,46},
                  [{match,
                    {2259,46},
                    {var,{2259,46},rec69},
                    {var,{2259,46},'Let'}},
                   {'case',
                    {2259,56},
                    {var,{2259,46},rec69},
                    [{clause,
                      {2259,56},
                      [{tuple,
                        {2259,56},
                        [{atom,{2259,56},c_let},
                         {var,{2259,56},'_'},
                         {var,{2259,56},'_'},
                         {var,{2259,56},'_'},
                         {var,{2259,56},'_'}]}],
                      [],
                      [{call,
                        {2259,56},
                        {remote,
                         {2259,56},
                         {atom,{2259,56},erlang},
                         {atom,{2259,56},setelement}},
                        [{integer,{2259,56},5},
                         {var,{2259,46},rec69},
                         {var,{2259,61},'B0'}]}]},
                     {clause,
                      [{generated,true},{location,{2259,56}}],
                      [{var,[{generated,true},{location,{2259,56}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{2259,56}}],
                        {remote,
                         [{generated,true},{location,{2259,56}}],
                         {atom,[{generated,true},{location,{2259,56}}],erlang},
                         {atom,[{generated,true},{location,{2259,56}}],error}},
                        [{tuple,
                          [{generated,true},{location,{2259,56}}],
                          [{atom,
                            [{generated,true},{location,{2259,56}}],
                            badrecord},
                           {var,{2259,46},rec69}]}]}]}]}]}]}]}},
            {debug_line,2260,952},
            {block,
             {2260,21},
             [{match,{2260,21},{var,{2260,21},rec70},{var,{2260,21},'Body'}},
              {'case',
               {2260,32},
               {var,{2260,21},rec70},
               [{clause,
                 {2260,32},
                 [{tuple,
                   {2260,32},
                   [{atom,{2260,32},c_seq},
                    {var,{2260,32},'_'},
                    {var,{2260,32},'_'},
                    {var,{2260,32},'_'}]}],
                 [],
                 [{call,
                   {2260,32},
                   {remote,
                    {2260,32},
                    {atom,{2260,32},erlang},
                    {atom,{2260,32},setelement}},
                   [{integer,{2260,32},4},
                    {var,{2260,21},rec70},
                    {var,{2260,37},'B'}]}]},
                {clause,
                 [{generated,true},{location,{2260,32}}],
                 [{var,[{generated,true},{location,{2260,32}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{2260,32}}],
                   {remote,
                    [{generated,true},{location,{2260,32}}],
                    {atom,[{generated,true},{location,{2260,32}}],erlang},
                    {atom,[{generated,true},{location,{2260,32}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2260,32}}],
                     [{atom,[{generated,true},{location,{2260,32}}],badrecord},
                      {var,{2260,21},rec70}]}]}]}]}]}]},
          {clause,
           {2261,17},
           [{atom,{2261,17},true}],
           [],
           [{debug_line,2262,953},{var,{2262,21},'Let'}]}]}]},
      {clause,
       {2264,9},
       [{tuple,
         {2264,9},
         [{atom,{2264,9},c_case},
          {var,{2264,9},'_'},
          {var,{2264,9},'_'},
          {var,{2264,25},'Cs0'}]}],
       [],
       [{debug_line,2265,954},
        {match,
         {2265,13},
         {var,{2265,13},'NilBody'},
         {tuple,
          {2265,23},
          [{atom,{2265,23},c_literal},{nil,{2265,23}},{nil,{2265,38}}]}},
        {debug_line,2266,955},
        {match,
         {2266,13},
         {var,{2266,13},'Cs1'},
         {lc,
          {2266,19},
          {block,0,
           [{block,
             {2266,20},
             [{match,{2266,20},{var,{2266,20},rec71},{var,{2266,20},'C'}},
              {'case',
               {2266,31},
               {var,{2266,20},rec71},
               [{clause,
                 {2266,31},
                 [{tuple,
                   {2266,31},
                   [{atom,{2266,31},c_clause},
                    {var,{2266,31},'_'},
                    {var,{2266,31},'_'},
                    {var,{2266,31},'_'},
                    {var,{2266,31},'_'}]}],
                 [],
                 [{call,
                   {2266,31},
                   {remote,
                    {2266,31},
                    {atom,{2266,31},erlang},
                    {atom,{2266,31},setelement}},
                   [{integer,{2266,31},5},
                    {var,{2266,20},rec71},
                    {var,{2266,36},'NilBody'}]}]},
                {clause,
                 [{generated,true},{location,{2266,31}}],
                 [{var,[{generated,true},{location,{2266,31}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{2266,31}}],
                   {remote,
                    [{generated,true},{location,{2266,31}}],
                    {atom,[{generated,true},{location,{2266,31}}],erlang},
                    {atom,[{generated,true},{location,{2266,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2266,31}}],
                     [{atom,[{generated,true},{location,{2266,31}}],badrecord},
                      {var,{2266,20},rec71}]}]}]}]}]}]},
          [{block,0,[{atom,{2266,53},true}]},
           {generate,{2266,50},{var,{2266,48},'C'},{var,{2266,53},'Cs0'}}]}},
        {debug_line,2267,956},
        {match,
         {2267,13},
         {var,{2267,13},'Case'},
         {block,
          {2267,20},
          [{match,{2267,20},{var,{2267,20},rec72},{var,{2267,20},'Body'}},
           {'case',
            {2267,32},
            {var,{2267,20},rec72},
            [{clause,
              {2267,32},
              [{tuple,
                {2267,32},
                [{atom,{2267,32},c_case},
                 {var,{2267,32},'_'},
                 {var,{2267,32},'_'},
                 {var,{2267,32},'_'}]}],
              [],
              [{call,
                {2267,32},
                {remote,
                 {2267,32},
                 {atom,{2267,32},erlang},
                 {atom,{2267,32},setelement}},
                [{integer,{2267,32},4},
                 {var,{2267,20},rec72},
                 {var,{2267,40},'Cs1'}]}]},
             {clause,
              [{generated,true},{location,{2267,32}}],
              [{var,[{generated,true},{location,{2267,32}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2267,32}}],
                {remote,
                 [{generated,true},{location,{2267,32}}],
                 {atom,[{generated,true},{location,{2267,32}}],erlang},
                 {atom,[{generated,true},{location,{2267,32}}],error}},
                [{tuple,
                  [{generated,true},{location,{2267,32}}],
                  [{atom,[{generated,true},{location,{2267,32}}],badrecord},
                   {var,{2267,20},rec72}]}]}]}]}]}},
        {debug_line,2268,957},
        {'case',
         {2268,13},
         {call,
          {2268,18},
          {remote,
           {2268,26},
           {atom,{2268,18},core_lib},
           {atom,{2268,27},is_var_used}},
          [{var,{2268,39},'Cooked'},{var,{2268,47},'Case'}]},
         [{clause,
           {2269,17},
           [{atom,{2269,17},false}],
           [],
           [{debug_line,2274,958},
            {match,
             {2274,21},
             {var,{2274,21},'Cs'},
             {lc,
              {2274,26},
              {block,
               {2274,27},
               [{debug_line,2275,959},
                {match,
                 {2275,31},
                 {var,{2275,31},'B'},
                 {call,
                  {2275,35},
                  {atom,{2275,35},opt_build_stacktrace},
                  [{block,0,
                    [{block,
                      {2275,56},
                      [{match,
                        {2275,56},
                        {var,{2275,56},rec73},
                        {var,{2275,56},'Let'}},
                       {'case',
                        {2275,66},
                        {var,{2275,56},rec73},
                        [{clause,
                          {2275,66},
                          [{tuple,
                            {2275,66},
                            [{atom,{2275,66},c_let},
                             {var,{2275,66},'_'},
                             {var,{2275,66},'_'},
                             {var,{2275,66},'_'},
                             {var,{2275,66},'_'}]}],
                          [],
                          [{call,
                            {2275,66},
                            {remote,
                             {2275,66},
                             {atom,{2275,66},erlang},
                             {atom,{2275,66},setelement}},
                            [{integer,{2275,66},5},
                             {var,{2275,56},rec73},
                             {var,{2275,71},'B0'}]}]},
                         {clause,
                          [{generated,true},{location,{2275,66}}],
                          [{var,[{generated,true},{location,{2275,66}}],'_'}],
                          [],
                          [{call,
                            [{generated,true},{location,{2275,66}}],
                            {remote,
                             [{generated,true},{location,{2275,66}}],
                             {atom,
                              [{generated,true},{location,{2275,66}}],
                              erlang},
                             {atom,
                              [{generated,true},{location,{2275,66}}],
                              error}},
                            [{tuple,
                              [{generated,true},{location,{2275,66}}],
                              [{atom,
                                [{generated,true},{location,{2275,66}}],
                                badrecord},
                               {var,{2275,56},rec73}]}]}]}]}]}]}]}},
                {debug_line,2276,960},
                {block,
                 {2276,31},
                 [{match,{2276,31},{var,{2276,31},rec74},{var,{2276,31},'C'}},
                  {'case',
                   {2276,42},
                   {var,{2276,31},rec74},
                   [{clause,
                     {2276,42},
                     [{tuple,
                       {2276,42},
                       [{atom,{2276,42},c_clause},
                        {var,{2276,42},'_'},
                        {var,{2276,42},'_'},
                        {var,{2276,42},'_'},
                        {var,{2276,42},'_'}]}],
                     [],
                     [{call,
                       {2276,42},
                       {remote,
                        {2276,42},
                        {atom,{2276,42},erlang},
                        {atom,{2276,42},setelement}},
                       [{integer,{2276,42},5},
                        {var,{2276,31},rec74},
                        {var,{2276,47},'B'}]}]},
                    {clause,
                     [{generated,true},{location,{2276,42}}],
                     [{var,[{generated,true},{location,{2276,42}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{2276,42}}],
                       {remote,
                        [{generated,true},{location,{2276,42}}],
                        {atom,[{generated,true},{location,{2276,42}}],erlang},
                        {atom,[{generated,true},{location,{2276,42}}],error}},
                       [{tuple,
                         [{generated,true},{location,{2276,42}}],
                         [{atom,
                           [{generated,true},{location,{2276,42}}],
                           badrecord},
                          {var,{2276,31},rec74}]}]}]}]}]}]},
              [{block,0,[{debug_line,2277,961},{atom,{2277,59},true}]},
               {generate_strict,
                {2277,55},
                {match,
                 {2277,34},
                 {tuple,
                  {2277,34},
                  [{atom,{2277,34},c_clause},
                   {var,{2277,34},'_'},
                   {var,{2277,34},'_'},
                   {var,{2277,34},'_'},
                   {var,{2277,49},'B0'}]},
                 {var,{2277,53},'C'}},
                {var,{2277,59},'Cs0'}}]}},
            {debug_line,2278,962},
            {block,
             {2278,21},
             [{match,{2278,21},{var,{2278,21},rec75},{var,{2278,21},'Body'}},
              {'case',
               {2278,33},
               {var,{2278,21},rec75},
               [{clause,
                 {2278,33},
                 [{tuple,
                   {2278,33},
                   [{atom,{2278,33},c_case},
                    {var,{2278,33},'_'},
                    {var,{2278,33},'_'},
                    {var,{2278,33},'_'}]}],
                 [],
                 [{call,
                   {2278,33},
                   {remote,
                    {2278,33},
                    {atom,{2278,33},erlang},
                    {atom,{2278,33},setelement}},
                   [{integer,{2278,33},4},
                    {var,{2278,21},rec75},
                    {var,{2278,41},'Cs'}]}]},
                {clause,
                 [{generated,true},{location,{2278,33}}],
                 [{var,[{generated,true},{location,{2278,33}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{2278,33}}],
                   {remote,
                    [{generated,true},{location,{2278,33}}],
                    {atom,[{generated,true},{location,{2278,33}}],erlang},
                    {atom,[{generated,true},{location,{2278,33}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2278,33}}],
                     [{atom,[{generated,true},{location,{2278,33}}],badrecord},
                      {var,{2278,21},rec75}]}]}]}]}]}]},
          {clause,
           {2279,17},
           [{atom,{2279,17},true}],
           [],
           [{debug_line,2280,963},{var,{2280,21},'Let'}]}]}]},
      {clause,
       {2282,9},
       [{var,{2282,9},'_'}],
       [],
       [{debug_line,2283,964},{var,{2283,13},'Let'}]}]}]},
  {clause,
   {2285,1},
   [{var,{2285,22},'Expr'}],
   [],
   [{debug_line,2286,965},{var,{2286,5},'Expr'}]}]}.
{function,
 {2325,1},
 opt_case_in_let,1,
 [{clause,
   {2325,1},
   [{var,{2325,1},'_'}],
   [[{call,
      {2325,1},
      {remote,{2325,1},{atom,{2325,1},fake},{atom,{2325,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2325,966},{atom,{2325,1},ignore}]},
  {clause,
   {2325,1},
   [{match,
     {2325,17},
     {tuple,
      {2325,17},
      [{atom,{2325,17},c_let},
       {var,{2325,17},'_'},
       {var,{2325,29},'Vs'},
       {var,{2325,36},'Arg0'},
       {var,{2325,46},'B'}]},
     {var,{2325,49},'Let0'}}],
   [],
   [{debug_line,2326,967},
    {'case',
     {2326,5},
     {call,
      {2326,10},
      {atom,{2326,10},matches_data},
      [{var,{2326,23},'Vs'},{var,{2326,27},'B'}]},
     [{clause,
       {2327,2},
       [{tuple,{2327,2},[{atom,{2327,3},yes},{var,{2327,7},'TypeSig'}]}],
       [],
       [{debug_line,2328,968},
        {'case',
         {2328,6},
         {call,
          {2328,11},
          {atom,{2328,11},delay_build},
          [{var,{2328,23},'Arg0'},{var,{2328,29},'TypeSig'}]},
         [{clause,
           {2329,3},
           [{atom,{2329,3},no}],
           [],
           [{debug_line,2330,969},{var,{2330,7},'Let0'}]},
          {clause,
           {2331,3},
           [{tuple,
             {2331,3},
             [{atom,{2331,4},yes},
              {var,{2331,8},'Vars'},
              {var,{2331,13},'Arg'},
              {var,{2331,17},'Data'}]}],
           [],
           [{debug_line,2332,970},
            {match,
             {2332,7},
             {var,{2332,7},'InnerLet'},
             {block,
              {2332,18},
              [{match,{2332,18},{var,{2332,18},rec76},{var,{2332,18},'Let0'}},
               {'case',
                {2332,29},
                {var,{2332,18},rec76},
                [{clause,
                  {2332,29},
                  [{tuple,
                    {2332,29},
                    [{atom,{2332,29},c_let},
                     {var,{2332,29},'_'},
                     {var,{2332,29},'_'},
                     {var,{2332,29},'_'},
                     {var,{2332,29},'_'}]}],
                  [],
                  [{call,
                    {2332,29},
                    {remote,
                     {2332,29},
                     {atom,{2332,29},erlang},
                     {atom,{2332,29},setelement}},
                    [{integer,{2332,29},4},
                     {var,{2332,18},rec76},
                     {var,{2332,33},'Data'}]}]},
                 {clause,
                  [{generated,true},{location,{2332,29}}],
                  [{var,[{generated,true},{location,{2332,29}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2332,29}}],
                    {remote,
                     [{generated,true},{location,{2332,29}}],
                     {atom,[{generated,true},{location,{2332,29}}],erlang},
                     {atom,[{generated,true},{location,{2332,29}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2332,29}}],
                      [{atom,
                        [{generated,true},{location,{2332,29}}],
                        badrecord},
                       {var,{2332,18},rec76}]}]}]}]}]}},
            {debug_line,2333,971},
            {block,
             {2333,7},
             [{match,{2333,7},{var,{2333,7},rec77},{var,{2333,7},'Let0'}},
              {'case',
               {2333,18},
               {var,{2333,7},rec77},
               [{clause,
                 {2333,18},
                 [{tuple,
                   {2333,18},
                   [{atom,{2333,18},c_let},
                    {var,{2333,18},'_'},
                    {var,{2333,18},'_'},
                    {var,{2333,18},'_'},
                    {var,{2333,18},'_'}]}],
                 [],
                 [{call,
                   {2333,18},
                   {remote,
                    {2333,18},
                    {atom,{2333,18},erlang},
                    {atom,{2333,18},setelement}},
                   [{integer,{2333,18},3},
                    {call,
                     {2333,28},
                     {remote,
                      {2333,28},
                      {atom,{2333,28},erlang},
                      {atom,{2333,28},setelement}},
                     [{integer,{2333,28},4},
                      {call,
                       {2333,36},
                       {remote,
                        {2333,36},
                        {atom,{2333,36},erlang},
                        {atom,{2333,36},setelement}},
                       [{integer,{2333,36},5},
                        {var,{2333,7},rec77},
                        {var,{2333,41},'InnerLet'}]},
                      {var,{2333,32},'Arg'}]},
                    {var,{2333,23},'Vars'}]}]},
                {clause,
                 [{generated,true},{location,{2333,18}}],
                 [{var,[{generated,true},{location,{2333,18}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{2333,18}}],
                   {remote,
                    [{generated,true},{location,{2333,18}}],
                    {atom,[{generated,true},{location,{2333,18}}],erlang},
                    {atom,[{generated,true},{location,{2333,18}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2333,18}}],
                     [{atom,[{generated,true},{location,{2333,18}}],badrecord},
                      {var,{2333,7},rec77}]}]}]}]}]}]}]}]},
      {clause,
       {2335,2},
       [{atom,{2335,2},no}],
       [],
       [{debug_line,2336,972},{var,{2336,6},'Let0'}]}]}]}]}.
{function,
 {2339,1},
 matches_data,2,
 [{clause,
   {2339,1},
   [{var,{2339,1},'_'},{var,{2339,1},'_'}],
   [[{call,
      {2339,1},
      {remote,{2339,1},{atom,{2339,1},fake},{atom,{2339,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2339,973},{atom,{2339,1},ignore}]},
  {clause,
   {2339,1},
   [{cons,
     {2339,14},
     {tuple,
      {2339,15},
      [{atom,{2339,15},c_var},{var,{2339,15},'_'},{var,{2339,27},'V'}]},
     {nil,{2339,29}}},
    {tuple,
     {2339,32},
     [{atom,{2339,32},c_case},
      {var,{2339,32},'_'},
      {tuple,
       {2339,44},
       [{atom,{2339,44},c_var},{var,{2339,44},'_'},{var,{2339,56},'V'}]},
      {cons,
       {2340,20},
       {tuple,
        {2340,21},
        [{atom,{2340,21},c_clause},
         {var,{2340,21},'_'},
         {cons,{2340,36},{var,{2340,37},'P'},{nil,{2340,38}}},
         {var,{2340,21},'_'},
         {var,{2340,21},'_'}]},
       {var,{2340,41},'_'}}]}],
   [],
   [{debug_line,2341,974},
    {'case',
     {2341,5},
     {call,
      {2341,10},
      {remote,{2341,14},{atom,{2341,10},cerl},{atom,{2341,15},is_data}},
      [{var,{2341,23},'P'}]},
     [{clause,
       {2342,2},
       [{atom,{2342,2},false}],
       [],
       [{debug_line,2343,975},{atom,{2343,6},no}]},
      {clause,
       {2344,2},
       [{atom,{2344,2},true}],
       [],
       [{debug_line,2345,976},
        {'case',
         {2345,6},
         {call,
          {2345,11},
          {remote,{2345,15},{atom,{2345,11},cerl},{atom,{2345,16},data_type}},
          [{var,{2345,26},'P'}]},
         [{clause,
           {2346,3},
           [{tuple,{2346,3},[{atom,{2346,4},atomic},{var,{2346,11},'_'}]}],
           [],
           [{debug_line,2347,977},{atom,{2347,7},no}]},
          {clause,
           {2348,3},
           [{var,{2348,3},'Type'}],
           [],
           [{debug_line,2349,978},
            {tuple,
             {2349,7},
             [{atom,{2349,8},yes},
              {tuple,
               {2349,12},
               [{var,{2349,13},'Type'},
                {call,
                 {2349,18},
                 {remote,
                  {2349,22},
                  {atom,{2349,18},cerl},
                  {atom,{2349,23},data_arity}},
                 [{var,{2349,34},'P'}]}]}]}]}]}]}]}]},
  {clause,
   {2352,1},
   [{var,{2352,14},'_'},{var,{2352,17},'_'}],
   [],
   [{debug_line,2352,979},{atom,{2352,23},no}]}]}.
{function,
    {2354,1},
    delay_build,2,
    [{clause,
         {2354,1},
         [{var,{2354,1},'_'},{var,{2354,1},'_'}],
         [[{call,
               {2354,1},
               {remote,
                   {2354,1},
                   {atom,{2354,1},fake},
                   {atom,{2354,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2354,980},{atom,{2354,1},ignore}]},
     {clause,
         {2354,1},
         [{var,{2354,13},'Core'},{var,{2354,19},'TypeSig'}],
         [],
         [{debug_line,2355,981},
          {'case',
              {2355,5},
              {call,
                  {2355,10},
                  {remote,
                      {2355,14},
                      {atom,{2355,10},cerl},
                      {atom,{2355,15},is_data}},
                  [{var,{2355,23},'Core'}]},
              [{clause,
                   {2356,2},
                   [{atom,{2356,2},true}],
                   [],
                   [{debug_line,2356,982},{atom,{2356,10},no}]},
               {clause,
                   {2357,2},
                   [{atom,{2357,2},false}],
                   [],
                   [{debug_line,2357,983},
                    {call,
                        {2357,11},
                        {atom,{2357,11},delay_build_1},
                        [{var,{2357,25},'Core'},
                         {var,{2357,31},'TypeSig'}]}]}]}]}]}.
{function,
 {2360,1},
 delay_build_1,2,
 [{clause,
   {2360,1},
   [{var,{2360,1},'_'},{var,{2360,1},'_'}],
   [[{call,
      {2360,1},
      {remote,{2360,1},{atom,{2360,1},fake},{atom,{2360,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2360,984},{atom,{2360,1},ignore}]},
  {clause,
   {2360,1},
   [{var,{2360,15},'Core0'},{var,{2360,22},'TypeSig'}],
   [],
   [{debug_line,2361,985},
    {'try',
     {2361,5},
     [{call,
       {2361,9},
       {atom,{2361,9},delay_build_expr},
       [{var,{2361,26},'Core0'},{var,{2361,33},'TypeSig'}]}],
     [{clause,
       {2362,2},
       [{var,{2362,2},'Core'}],
       [],
       [{debug_line,2363,986},
        {match,
         {2363,6},
         {tuple,{2363,6},[{var,{2363,7},'Type'},{var,{2363,12},'Arity'}]},
         {var,{2363,21},'TypeSig'}},
        {debug_line,2364,987},
        {match,
         {2364,6},
         {var,{2364,6},'Ann'},
         {cons,{2364,12},{atom,{2364,13},compiler_generated},{nil,{2364,31}}}},
        {debug_line,2365,988},
        {match,
         {2365,13},
         {atom,{2365,13},true},
         {'case',
          {2365,21},
          {call,
           {2365,21},
           {remote,
            {2365,21},
            {atom,{2365,21},erlang},
            {atom,{2365,21},is_integer}},
           [{var,{2365,35},'Arity'}]},
          [{clause,
            {2365,21},
            [{atom,{2365,21},true}],
            [],
            [{'case',
              {2365,35},
              {op,
               {2365,35},
               '=<',
               {integer,{2365,35},0},
               {var,{2365,35},'Arity'}},
              [{clause,
                {2365,35},
                [{atom,{2365,35},true}],
                [],
                [{op,
                  {2365,35},
                  '=<',
                  {var,{2365,35},'Arity'},
                  {integer,{2365,35},255}}]},
               {clause,
                {2365,35},
                [{atom,{2365,35},false}],
                [],
                [{atom,{2365,35},false}]},
               {clause,
                [{generated,true},{location,{2365,35}}],
                [{var,{2365,35},cov1}],
                [],
                [{call,
                  {2365,35},
                  {remote,
                   {2365,35},
                   {atom,{2365,35},erlang},
                   {atom,{2365,35},error}},
                  [{block,0,
                    [{tuple,
                      {2365,35},
                      [{atom,{2365,35},badarg},
                       {var,{2365,35},cov1}]}]}]}]}]}]},
           {clause,
            {2365,21},
            [{atom,{2365,21},false}],
            [],
            [{atom,{2365,21},false}]},
           {clause,
            [{generated,true},{location,{2365,21}}],
            [{var,{2365,21},cov2}],
            [],
            [{call,
              {2365,21},
              {remote,
               {2365,21},
               {atom,{2365,21},erlang},
               {atom,{2365,21},error}},
              [{block,0,
                [{tuple,
                  {2365,21},
                  [{atom,{2365,21},badarg},{var,{2365,21},cov2}]}]}]}]}]}},
        {debug_line,2366,989},
        {match,
         {2366,6},
         {var,{2366,6},'Vars'},
         {call,
          {2366,13},
          {atom,{2366,13},make_vars},
          [{var,{2366,23},'Ann'},{var,{2366,28},'Arity'}]}},
        {debug_line,2367,990},
        {match,
         {2367,6},
         {var,{2367,6},'Data'},
         {call,
          {2367,13},
          {remote,
           {2367,17},
           {atom,{2367,13},cerl},
           {atom,{2367,18},ann_make_data}},
          [{var,{2367,32},'Ann'},
           {var,{2367,37},'Type'},
           {var,{2367,43},'Vars'}]}},
        {debug_line,2368,991},
        {tuple,
         {2368,6},
         [{atom,{2368,7},yes},
          {var,{2368,11},'Vars'},
          {var,{2368,16},'Core'},
          {var,{2368,21},'Data'}]}]}],
     [{clause,
       {2370,2},
       [{tuple,
         {2370,2},
         [{atom,{2370,2},throw},
          {atom,{2370,8},impossible},
          {var,{2370,8},'_'}]}],
       [],
       [{debug_line,2371,992},{atom,{2371,6},no}]}],
     []}]}]}.
{function,
 {2374,1},
 delay_build_cs,2,
 [{clause,
   {2374,1},
   [{var,{2374,1},'_'},{var,{2374,1},'_'}],
   [[{call,
      {2374,1},
      {remote,{2374,1},{atom,{2374,1},fake},{atom,{2374,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2374,993},{atom,{2374,1},ignore}]},
  {clause,
   {2374,1},
   [{cons,
     {2374,16},
     {match,
      {2374,17},
      {tuple,
       {2374,17},
       [{atom,{2374,17},c_clause},
        {var,{2374,17},'_'},
        {var,{2374,17},'_'},
        {var,{2374,17},'_'},
        {var,{2374,32},'B0'}]},
      {var,{2374,36},'C0'}},
     {var,{2374,39},'Cs'}},
    {var,{2374,44},'TypeSig'}],
   [],
   [{debug_line,2375,994},
    {match,
     {2375,5},
     {var,{2375,5},'B'},
     {call,
      {2375,9},
      {atom,{2375,9},delay_build_expr},
      [{var,{2375,26},'B0'},{var,{2375,30},'TypeSig'}]}},
    {debug_line,2376,995},
    {match,
     {2376,5},
     {var,{2376,5},'C'},
     {block,
      {2376,9},
      [{match,{2376,9},{var,{2376,9},rec78},{var,{2376,9},'C0'}},
       {'case',
        {2376,21},
        {var,{2376,9},rec78},
        [{clause,
          {2376,21},
          [{tuple,
            {2376,21},
            [{atom,{2376,21},c_clause},
             {var,{2376,21},'_'},
             {var,{2376,21},'_'},
             {var,{2376,21},'_'},
             {var,{2376,21},'_'}]}],
          [],
          [{call,
            {2376,21},
            {remote,
             {2376,21},
             {atom,{2376,21},erlang},
             {atom,{2376,21},setelement}},
            [{integer,{2376,21},5},
             {var,{2376,9},rec78},
             {var,{2376,26},'B'}]}]},
         {clause,
          [{generated,true},{location,{2376,21}}],
          [{var,[{generated,true},{location,{2376,21}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2376,21}}],
            {remote,
             [{generated,true},{location,{2376,21}}],
             {atom,[{generated,true},{location,{2376,21}}],erlang},
             {atom,[{generated,true},{location,{2376,21}}],error}},
            [{tuple,
              [{generated,true},{location,{2376,21}}],
              [{atom,[{generated,true},{location,{2376,21}}],badrecord},
               {var,{2376,9},rec78}]}]}]}]}]}},
    {debug_line,2377,996},
    {cons,
     {2377,5},
     {var,{2377,6},'C'},
     {call,
      {2377,8},
      {atom,{2377,8},delay_build_cs},
      [{var,{2377,23},'Cs'},{var,{2377,27},'TypeSig'}]}}]},
  {clause,
   {2378,1},
   [{nil,{2378,16}},{var,{2378,20},'_'}],
   [],
   [{debug_line,2378,997},{nil,{2378,26}}]}]}.
{function,
 {2380,1},
 delay_build_expr,2,
 [{clause,
   {2380,1},
   [{var,{2380,1},'_'},{var,{2380,1},'_'}],
   [[{call,
      {2380,1},
      {remote,{2380,1},{atom,{2380,1},fake},{atom,{2380,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2380,998},{atom,{2380,1},ignore}]},
  {clause,
   {2380,1},
   [{var,{2380,18},'Core'},
    {match,
     {2380,24},
     {tuple,{2380,24},[{var,{2380,25},'Type'},{var,{2380,30},'Arity'}]},
     {var,{2380,37},'TypeSig'}}],
   [],
   [{debug_line,2381,999},
    {'case',
     {2381,5},
     {call,
      {2381,10},
      {remote,{2381,14},{atom,{2381,10},cerl},{atom,{2381,15},is_data}},
      [{var,{2381,23},'Core'}]},
     [{clause,
       {2382,2},
       [{atom,{2382,2},false}],
       [],
       [{debug_line,2383,1000},
        {call,
         {2383,6},
         {atom,{2383,6},delay_build_expr_1},
         [{var,{2383,25},'Core'},{var,{2383,31},'TypeSig'}]}]},
      {clause,
       {2384,2},
       [{atom,{2384,2},true}],
       [],
       [{debug_line,2385,1001},
        {'case',
         {2385,6},
         {tuple,
          {2385,11},
          [{call,
            {2385,12},
            {remote,
             {2385,16},
             {atom,{2385,12},cerl},
             {atom,{2385,17},data_type}},
            [{var,{2385,27},'Core'}]},
           {call,
            {2385,33},
            {remote,
             {2385,37},
             {atom,{2385,33},cerl},
             {atom,{2385,38},data_arity}},
            [{var,{2385,49},'Core'}]}]},
         [{clause,
           {2386,3},
           [{tuple,{2386,3},[{var,{2386,4},'Type'},{var,{2386,9},'Arity'}]}],
           [],
           [{debug_line,2387,1002},
            {call,
             {2387,7},
             {remote,
              {2387,15},
              {atom,{2387,7},core_lib},
              {atom,{2387,16},make_values}},
             [{block,0,
               [{call,
                 {2387,28},
                 {remote,
                  {2387,32},
                  {atom,{2387,28},cerl},
                  {atom,{2387,33},data_es}},
                 [{var,{2387,41},'Core'}]}]}]}]},
          {clause,
           {2388,3},
           [{tuple,{2388,3},[{var,{2388,4},'_'},{var,{2388,6},'_'}]}],
           [],
           [{debug_line,2389,1003},
            {call,
             {2389,7},
             {remote,{2389,7},{atom,{2389,7},erlang},{atom,{2389,7},throw}},
             [{atom,{2389,13},impossible}]}]}]}]}]}]}]}.
{function,
    {2393,1},
    delay_build_expr_1,2,
    [{clause,
         {2393,1},
         [{var,{2393,1},'_'},{var,{2393,1},'_'}],
         [[{call,
               {2393,1},
               {remote,
                   {2393,1},
                   {atom,{2393,1},fake},
                   {atom,{2393,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2393,1004},{atom,{2393,1},ignore}]},
     {clause,
         {2393,1},
         [{match,
              {2393,20},
              {tuple,
                  {2393,20},
                  [{atom,{2393,20},c_case},
                   {var,{2393,20},'_'},
                   {var,{2393,20},'_'},
                   {var,{2393,36},'Cs0'}]},
              {var,{2393,41},'Case'}},
          {var,{2393,47},'TypeSig'}],
         [],
         [{debug_line,2394,1005},
          {match,
              {2394,5},
              {var,{2394,5},'Cs'},
              {call,
                  {2394,10},
                  {atom,{2394,10},delay_build_cs},
                  [{var,{2394,25},'Cs0'},{var,{2394,30},'TypeSig'}]}},
          {debug_line,2395,1006},
          {block,
              {2395,5},
              [{match,{2395,5},{var,{2395,5},rec79},{var,{2395,5},'Case'}},
               {'case',
                   {2395,17},
                   {var,{2395,5},rec79},
                   [{clause,
                        {2395,17},
                        [{tuple,
                             {2395,17},
                             [{atom,{2395,17},c_case},
                              {var,{2395,17},'_'},
                              {var,{2395,17},'_'},
                              {var,{2395,17},'_'}]}],
                        [],
                        [{call,
                             {2395,17},
                             {remote,
                                 {2395,17},
                                 {atom,{2395,17},erlang},
                                 {atom,{2395,17},setelement}},
                             [{integer,{2395,17},4},
                              {var,{2395,5},rec79},
                              {var,{2395,25},'Cs'}]}]},
                    {clause,
                        [{generated,true},{location,{2395,17}}],
                        [{var,[{generated,true},{location,{2395,17}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{2395,17}}],
                             {remote,
                                 [{generated,true},{location,{2395,17}}],
                                 {atom,
                                     [{generated,true},{location,{2395,17}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{2395,17}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{2395,17}}],
                                  [{atom,
                                       [{generated,true},{location,{2395,17}}],
                                       badrecord},
                                   {var,{2395,5},rec79}]}]}]}]}]}]},
     {clause,
         {2396,1},
         [{match,
              {2396,20},
              {tuple,
                  {2396,20},
                  [{atom,{2396,20},c_let},
                   {var,{2396,20},'_'},
                   {var,{2396,20},'_'},
                   {var,{2396,20},'_'},
                   {var,{2396,32},'B0'}]},
              {var,{2396,36},'Let'}},
          {var,{2396,41},'TypeSig'}],
         [],
         [{debug_line,2397,1007},
          {match,
              {2397,5},
              {var,{2397,5},'B'},
              {call,
                  {2397,9},
                  {atom,{2397,9},delay_build_expr},
                  [{var,{2397,26},'B0'},{var,{2397,30},'TypeSig'}]}},
          {debug_line,2398,1008},
          {block,
              {2398,5},
              [{match,{2398,5},{var,{2398,5},rec80},{var,{2398,5},'Let'}},
               {'case',
                   {2398,15},
                   {var,{2398,5},rec80},
                   [{clause,
                        {2398,15},
                        [{tuple,
                             {2398,15},
                             [{atom,{2398,15},c_let},
                              {var,{2398,15},'_'},
                              {var,{2398,15},'_'},
                              {var,{2398,15},'_'},
                              {var,{2398,15},'_'}]}],
                        [],
                        [{call,
                             {2398,15},
                             {remote,
                                 {2398,15},
                                 {atom,{2398,15},erlang},
                                 {atom,{2398,15},setelement}},
                             [{integer,{2398,15},5},
                              {var,{2398,5},rec80},
                              {var,{2398,20},'B'}]}]},
                    {clause,
                        [{generated,true},{location,{2398,15}}],
                        [{var,[{generated,true},{location,{2398,15}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{2398,15}}],
                             {remote,
                                 [{generated,true},{location,{2398,15}}],
                                 {atom,
                                     [{generated,true},{location,{2398,15}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{2398,15}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{2398,15}}],
                                  [{atom,
                                       [{generated,true},{location,{2398,15}}],
                                       badrecord},
                                   {var,{2398,5},rec80}]}]}]}]}]}]},
     {clause,
         {2399,1},
         [{match,
              {2399,20},
              {tuple,
                  {2399,20},
                  [{atom,{2399,20},c_seq},
                   {var,{2399,20},'_'},
                   {var,{2399,20},'_'},
                   {var,{2399,32},'B0'}]},
              {var,{2399,36},'Seq'}},
          {var,{2399,41},'TypeSig'}],
         [],
         [{debug_line,2400,1009},
          {match,
              {2400,5},
              {var,{2400,5},'B'},
              {call,
                  {2400,9},
                  {atom,{2400,9},delay_build_expr},
                  [{var,{2400,26},'B0'},{var,{2400,30},'TypeSig'}]}},
          {debug_line,2401,1010},
          {block,
              {2401,5},
              [{match,{2401,5},{var,{2401,5},rec81},{var,{2401,5},'Seq'}},
               {'case',
                   {2401,15},
                   {var,{2401,5},rec81},
                   [{clause,
                        {2401,15},
                        [{tuple,
                             {2401,15},
                             [{atom,{2401,15},c_seq},
                              {var,{2401,15},'_'},
                              {var,{2401,15},'_'},
                              {var,{2401,15},'_'}]}],
                        [],
                        [{call,
                             {2401,15},
                             {remote,
                                 {2401,15},
                                 {atom,{2401,15},erlang},
                                 {atom,{2401,15},setelement}},
                             [{integer,{2401,15},4},
                              {var,{2401,5},rec81},
                              {var,{2401,20},'B'}]}]},
                    {clause,
                        [{generated,true},{location,{2401,15}}],
                        [{var,[{generated,true},{location,{2401,15}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{2401,15}}],
                             {remote,
                                 [{generated,true},{location,{2401,15}}],
                                 {atom,
                                     [{generated,true},{location,{2401,15}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{2401,15}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{2401,15}}],
                                  [{atom,
                                       [{generated,true},{location,{2401,15}}],
                                       badrecord},
                                   {var,{2401,5},rec81}]}]}]}]}]}]},
     {clause,
         {2402,1},
         [{var,{2402,20},'Core'},{var,{2402,26},'_TypeSig'}],
         [],
         [{debug_line,2403,1011},
          {'case',
              {2403,5},
              {call,
                  {2403,10},
                  {atom,{2403,10},will_fail},
                  [{var,{2403,20},'Core'}]},
              [{clause,
                   {2404,2},
                   [{atom,{2404,2},true}],
                   [],
                   [{debug_line,2404,1012},{var,{2404,10},'Core'}]},
               {clause,
                   {2405,2},
                   [{atom,{2405,2},false}],
                   [],
                   [{debug_line,2405,1013},
                    {call,
                        {2405,11},
                        {remote,
                            {2405,11},
                            {atom,{2405,11},erlang},
                            {atom,{2405,11},throw}},
                        [{atom,{2405,17},impossible}]}]}]}]}]}.
{function,
    {2411,1},
    opt_let,3,
    [{clause,
         {2411,1},
         [{var,{2411,1},'_'},{var,{2411,1},'_'},{var,{2411,1},'_'}],
         [[{call,
               {2411,1},
               {remote,
                   {2411,1},
                   {atom,{2411,1},fake},
                   {atom,{2411,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2411,1014},{atom,{2411,1},ignore}]},
     {clause,
         {2411,1},
         [{var,{2411,9},'Let0'},{var,{2411,15},'Ctxt'},{var,{2411,21},'Sub'}],
         [],
         [{debug_line,2412,1015},
          {'case',
              {2412,5},
              {call,
                  {2412,10},
                  {atom,{2412,10},opt_not_in_let},
                  [{var,{2412,25},'Let0'}]},
              [{clause,
                   {2413,2},
                   [{match,
                        {2413,2},
                        {tuple,
                            {2413,2},
                            [{atom,{2413,2},c_let},
                             {var,{2413,2},'_'},
                             {var,{2413,2},'_'},
                             {var,{2413,2},'_'},
                             {var,{2413,2},'_'}]},
                        {var,{2413,11},'Let'}}],
                   [],
                   [{debug_line,2414,1016},
                    {call,
                        {2414,6},
                        {atom,{2414,6},opt_let_0},
                        [{var,{2414,16},'Let'},
                         {var,{2414,21},'Ctxt'},
                         {var,{2414,27},'Sub'}]}]},
               {clause,
                   {2415,2},
                   [{var,{2415,2},'Expr'}],
                   [],
                   [{debug_line,2416,1017},
                    {call,
                        {2416,6},
                        {atom,{2416,6},expr},
                        [{var,{2416,11},'Expr'},
                         {var,{2416,17},'Ctxt'},
                         {var,{2416,23},'Sub'}]}]}]}]}]}.
{function,
    {2419,1},
    opt_let_0,3,
    [{clause,
         {2419,1},
         [{var,{2419,1},'_'},{var,{2419,1},'_'},{var,{2419,1},'_'}],
         [[{call,
               {2419,1},
               {remote,
                   {2419,1},
                   {atom,{2419,1},fake},
                   {atom,{2419,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2419,1018},{atom,{2419,1},ignore}]},
     {clause,
         {2419,1},
         [{match,
              {2419,11},
              {tuple,
                  {2419,11},
                  [{atom,{2419,11},c_let},
                   {var,{2419,11},'_'},
                   {var,{2419,11},'_'},
                   {var,{2419,22},'Arg0'},
                   {var,{2419,11},'_'}]},
              {var,{2419,28},'Let'}},
          {var,{2419,33},'Ctxt'},
          {var,{2419,39},'Sub'}],
         [],
         [{debug_line,2420,1019},
          {match,
              {2420,5},
              {var,{2420,5},'Arg'},
              {call,
                  {2420,11},
                  {atom,{2420,11},body},
                  [{var,{2420,16},'Arg0'},
                   {atom,{2420,22},value},
                   {var,{2420,29},'Sub'}]}},
          {debug_line,2421,1020},
          {'case',
              {2421,5},
              {call,
                  {2421,10},
                  {atom,{2421,10},will_fail},
                  [{var,{2421,20},'Arg'}]},
              [{clause,
                   {2422,2},
                   [{atom,{2422,2},true}],
                   [],
                   [{debug_line,2422,1021},{var,{2422,10},'Arg'}]},
               {clause,
                   {2423,2},
                   [{atom,{2423,2},false}],
                   [],
                   [{debug_line,2423,1022},
                    {call,
                        {2423,11},
                        {atom,{2423,11},opt_let_1},
                        [{var,{2423,21},'Let'},
                         {var,{2423,26},'Arg'},
                         {var,{2423,31},'Ctxt'},
                         {var,{2423,37},'Sub'}]}]}]}]}]}.
{function,
 {2426,1},
 opt_let_1,4,
 [{clause,
   {2426,1},
   [{var,{2426,1},'_'},
    {var,{2426,1},'_'},
    {var,{2426,1},'_'},
    {var,{2426,1},'_'}],
   [[{call,
      {2426,1},
      {remote,{2426,1},{atom,{2426,1},fake},{atom,{2426,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2426,1023},{atom,{2426,1},ignore}]},
  {clause,
   {2426,1},
   [{match,
     {2426,11},
     {tuple,
      {2426,11},
      [{atom,{2426,11},c_let},
       {var,{2426,11},'_'},
       {var,{2426,23},'Vs0'},
       {var,{2426,11},'_'},
       {var,{2426,32},'B0'}]},
     {var,{2426,36},'Let'}},
    {var,{2426,41},'Arg0'},
    {var,{2426,47},'Ctxt'},
    {var,{2426,53},'Sub0'}],
   [],
   [{debug_line,2428,1024},
    {match,
     {2428,5},
     {tuple,
      {2428,5},
      [{var,{2428,6},'Vs'},{var,{2428,9},'Args'},{var,{2428,14},'Sub1'}]},
     {call,
      {2428,22},
      {atom,{2428,22},let_substs},
      [{var,{2428,33},'Vs0'},{var,{2428,38},'Arg0'},{var,{2428,44},'Sub0'}]}},
    {debug_line,2429,1025},
    {match,
     {2429,5},
     {var,{2429,5},'BodySub'},
     {call,
      {2429,15},
      {atom,{2429,15},update_let_types},
      [{var,{2429,32},'Vs'},{var,{2429,36},'Args'},{var,{2429,42},'Sub1'}]}},
    {debug_line,2430,1026},
    {match,
     {2430,5},
     {var,{2430,5},'Sub'},
     {block,
      {2430,11},
      [{match,
        {2430,25},
        {var,{2430,25},rec82},
        {call,
         {2430,27},
         {remote,{2430,31},{atom,{2430,27},sets},{atom,{2430,32},new}},
         []}},
       {match,{2430,11},{var,{2430,11},rec83},{var,{2430,11},'Sub1'}},
       {'case',
        {2430,20},
        {var,{2430,11},rec83},
        [{clause,
          {2430,20},
          [{tuple,
            {2430,20},
            [{atom,{2430,20},sub},
             {var,{2430,20},'_'},
             {var,{2430,20},'_'},
             {var,{2430,20},'_'},
             {var,{2430,20},'_'},
             {var,{2430,20},'_'}]}],
          [],
          [{call,
            {2430,20},
            {remote,
             {2430,20},
             {atom,{2430,20},erlang},
             {atom,{2430,20},setelement}},
            [{integer,{2430,20},2},
             {call,
              {2430,25},
              {remote,
               {2430,25},
               {atom,{2430,25},erlang},
               {atom,{2430,25},setelement}},
              [{integer,{2430,25},3},
               {var,{2430,11},rec83},
               {var,{2430,25},rec82}]},
             {nil,{2430,22}}]}]},
         {clause,
          [{generated,true},{location,{2430,20}}],
          [{var,[{generated,true},{location,{2430,20}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2430,20}}],
            {remote,
             [{generated,true},{location,{2430,20}}],
             {atom,[{generated,true},{location,{2430,20}}],erlang},
             {atom,[{generated,true},{location,{2430,20}}],error}},
            [{tuple,
              [{generated,true},{location,{2430,20}}],
              [{atom,[{generated,true},{location,{2430,20}}],badrecord},
               {var,{2430,11},rec83}]}]}]}]}]}},
    {debug_line,2431,1027},
    {match,
     {2431,5},
     {var,{2431,5},'B'},
     {call,
      {2431,9},
      {atom,{2431,9},body},
      [{var,{2431,14},'B0'},
       {var,{2431,18},'Ctxt'},
       {var,{2431,24},'BodySub'}]}},
    {debug_line,2432,1028},
    {match,
     {2432,5},
     {var,{2432,5},'Arg'},
     {call,
      {2432,11},
      {remote,
       {2432,19},
       {atom,{2432,11},core_lib},
       {atom,{2432,20},make_values}},
      [{var,{2432,32},'Args'}]}},
    {debug_line,2433,1029},
    {call,
     {2433,5},
     {atom,{2433,5},opt_let_2},
     [{var,{2433,15},'Let'},
      {var,{2433,20},'Vs'},
      {var,{2433,24},'Arg'},
      {var,{2433,29},'B'},
      {var,{2433,32},'B0'},
      {var,{2433,36},'Sub'}]}]}]}.
{function,
 {2442,1},
 opt_let_2,6,
 [{clause,
   {2442,1},
   [{var,{2442,1},'_'},
    {var,{2442,1},'_'},
    {var,{2442,1},'_'},
    {var,{2442,1},'_'},
    {var,{2442,1},'_'},
    {var,{2442,1},'_'}],
   [[{call,
      {2442,1},
      {remote,{2442,1},{atom,{2442,1},fake},{atom,{2442,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2442,1030},{atom,{2442,1},ignore}]},
  {clause,
   {2442,1},
   [{var,{2442,11},'Let0'},
    {var,{2442,17},'Vs0'},
    {var,{2442,22},'Arg0'},
    {var,{2442,28},'Body'},
    {var,{2442,34},'PrevBody'},
    {var,{2442,44},'Sub'}],
   [],
   [{debug_line,2443,1031},
    {'case',
     {2443,5},
     {tuple,
      {2443,10},
      [{var,{2443,11},'Vs0'},{var,{2443,15},'Arg0'},{var,{2443,20},'Body'}]},
     [{clause,
       {2444,2},
       [{tuple,
         {2444,2},
         [{cons,
           {2444,3},
           {tuple,
            {2444,4},
            [{atom,{2444,4},c_var},{var,{2444,4},'_'},{var,{2444,16},'V'}]},
           {nil,{2444,18}}},
          {var,{2444,20},'Arg1'},
          {tuple,
           {2444,25},
           [{atom,{2444,25},c_var},
            {var,{2444,25},'_'},
            {var,{2444,37},'V'}]}]}],
       [],
       [{debug_line,2446,1032},{var,{2446,13},'Arg1'}]},
      {clause,
       {2447,2},
       [{tuple,
         {2447,2},
         [{nil,{2447,3}},
          {tuple,
           {2447,6},
           [{atom,{2447,6},c_values},{var,{2447,6},'_'},{nil,{2447,19}}]},
          {var,{2447,23},'_'}]}],
       [],
       [{debug_line,2449,1033},{var,{2449,6},'Body'}]},
      {clause,
       {2450,2},
       [{tuple,
         {2450,2},
         [{match,
           {2450,3},
           {cons,
            {2450,3},
            {match,
             {2450,4},
             {tuple,
              {2450,4},
              [{atom,{2450,4},c_var},{var,{2450,4},'_'},{var,{2450,16},'V'}]},
             {var,{2450,19},'Var'}},
            {nil,{2450,22}}},
           {var,{2450,24},'Vars0'}},
          {var,{2450,30},'Arg1'},
          {var,{2450,35},'Body'}]}],
       [],
       [{debug_line,2451,1034},
        {'case',
         {2451,13},
         {call,
          {2451,18},
          {remote,
           {2451,26},
           {atom,{2451,18},core_lib},
           {atom,{2451,27},is_var_used}},
          [{var,{2451,39},'V'},{var,{2451,42},'Body'}]},
         [{clause,
           {2452,17},
           [{atom,{2452,17},false}],
           [],
           [{debug_line,2457,1035},
            {match,
             {2457,21},
             {var,{2457,21},'Arg'},
             {call,
              {2457,27},
              {atom,{2457,27},maybe_suppress_warnings},
              [{var,{2457,51},'Arg1'},
               {var,{2457,57},'Var'},
               {var,{2457,62},'PrevBody'}]}},
            {debug_line,2458,1036},
            {tuple,
             {2458,21},
             [{atom,{2458,21},c_seq},
              {nil,{2458,21}},
              {var,{2458,32},'Arg'},
              {var,{2458,41},'Body'}]}]},
          {clause,
           {2459,17},
           [{atom,{2459,17},true}],
           [],
           [{debug_line,2460,1037},
            {match,
             {2460,21},
             {var,{2460,21},'Let1'},
             {block,
              {2460,28},
              [{match,{2460,28},{var,{2460,28},rec84},{var,{2460,28},'Let0'}},
               {'case',
                {2460,39},
                {var,{2460,28},rec84},
                [{clause,
                  {2460,39},
                  [{tuple,
                    {2460,39},
                    [{atom,{2460,39},c_let},
                     {var,{2460,39},'_'},
                     {var,{2460,39},'_'},
                     {var,{2460,39},'_'},
                     {var,{2460,39},'_'}]}],
                  [],
                  [{call,
                    {2460,39},
                    {remote,
                     {2460,39},
                     {atom,{2460,39},erlang},
                     {atom,{2460,39},setelement}},
                    [{integer,{2460,39},3},
                     {call,
                      {2460,50},
                      {remote,
                       {2460,50},
                       {atom,{2460,50},erlang},
                       {atom,{2460,50},setelement}},
                      [{integer,{2460,50},4},
                       {call,
                        {2460,59},
                        {remote,
                         {2460,59},
                         {atom,{2460,59},erlang},
                         {atom,{2460,59},setelement}},
                        [{integer,{2460,59},5},
                         {var,{2460,28},rec84},
                         {var,{2460,64},'Body'}]},
                       {var,{2460,54},'Arg1'}]},
                     {var,{2460,44},'Vars0'}]}]},
                 {clause,
                  [{generated,true},{location,{2460,39}}],
                  [{var,[{generated,true},{location,{2460,39}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2460,39}}],
                    {remote,
                     [{generated,true},{location,{2460,39}}],
                     {atom,[{generated,true},{location,{2460,39}}],erlang},
                     {atom,[{generated,true},{location,{2460,39}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2460,39}}],
                      [{atom,
                        [{generated,true},{location,{2460,39}}],
                        badrecord},
                       {var,{2460,28},rec84}]}]}]}]}]}},
            {debug_line,2461,1038},
            {call,
             {2461,21},
             {atom,{2461,21},post_opt_let},
             [{var,{2461,34},'Let1'},{var,{2461,40},'Sub'}]}]}]}]},
      {clause,
       {2463,9},
       [{tuple,
         {2463,9},
         [{var,{2463,10},'_'},{var,{2463,12},'_'},{var,{2463,14},'_'}]}],
       [],
       [{debug_line,2466,1039},
        {match,
         {2466,13},
         {var,{2466,13},'Let1'},
         {block,
          {2466,20},
          [{match,{2466,20},{var,{2466,20},rec85},{var,{2466,20},'Let0'}},
           {'case',
            {2466,31},
            {var,{2466,20},rec85},
            [{clause,
              {2466,31},
              [{tuple,
                {2466,31},
                [{atom,{2466,31},c_let},
                 {var,{2466,31},'_'},
                 {var,{2466,31},'_'},
                 {var,{2466,31},'_'},
                 {var,{2466,31},'_'}]}],
              [],
              [{call,
                {2466,31},
                {remote,
                 {2466,31},
                 {atom,{2466,31},erlang},
                 {atom,{2466,31},setelement}},
                [{integer,{2466,31},3},
                 {call,
                  {2466,40},
                  {remote,
                   {2466,40},
                   {atom,{2466,40},erlang},
                   {atom,{2466,40},setelement}},
                  [{integer,{2466,40},4},
                   {call,
                    {2466,49},
                    {remote,
                     {2466,49},
                     {atom,{2466,49},erlang},
                     {atom,{2466,49},setelement}},
                    [{integer,{2466,49},5},
                     {var,{2466,20},rec85},
                     {var,{2466,54},'Body'}]},
                   {var,{2466,44},'Arg0'}]},
                 {var,{2466,36},'Vs0'}]}]},
             {clause,
              [{generated,true},{location,{2466,31}}],
              [{var,[{generated,true},{location,{2466,31}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2466,31}}],
                {remote,
                 [{generated,true},{location,{2466,31}}],
                 {atom,[{generated,true},{location,{2466,31}}],erlang},
                 {atom,[{generated,true},{location,{2466,31}}],error}},
                [{tuple,
                  [{generated,true},{location,{2466,31}}],
                  [{atom,[{generated,true},{location,{2466,31}}],badrecord},
                   {var,{2466,20},rec85}]}]}]}]}]}},
        {debug_line,2467,1040},
        {call,
         {2467,13},
         {atom,{2467,13},post_opt_let},
         [{var,{2467,26},'Let1'},{var,{2467,32},'Sub'}]}]}]}]}]}.
{function,{2476,1},
          post_opt_let,2,
          [{clause,{2476,1},
                   [{var,{2476,1},'_'},{var,{2476,1},'_'}],
                   [[{call,{2476,1},
                           {remote,{2476,1},
                                   {atom,{2476,1},fake},
                                   {atom,{2476,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2476,1041},{atom,{2476,1},ignore}]},
           {clause,{2476,1},
                   [{var,{2476,14},'Let0'},{var,{2476,20},'Sub'}],
                   [],
                   [{debug_line,2477,1042},
                    {match,{2477,5},
                           {var,{2477,5},'Let1'},
                           {call,{2477,12},
                                 {atom,{2477,12},opt_bool_case_in_let},
                                 [{var,{2477,33},'Let0'},
                                  {var,{2477,39},'Sub'}]}},
                    {debug_line,2478,1043},
                    {call,{2478,5},
                          {atom,{2478,5},opt_build_stacktrace},
                          [{var,{2478,26},'Let1'}]}]}]}.
{function,
 {2491,1},
 maybe_suppress_warnings,3,
 [{clause,
   {2491,1},
   [{var,{2491,1},'_'},{var,{2491,1},'_'},{var,{2491,1},'_'}],
   [[{call,
      {2491,1},
      {remote,{2491,1},{atom,{2491,1},fake},{atom,{2491,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2491,1044},{atom,{2491,1},ignore}]},
  {clause,
   {2491,1},
   [{var,{2491,25},'Arg'},
    {tuple,
     {2491,30},
     [{atom,{2491,30},c_var},{var,{2491,30},'_'},{var,{2491,42},'V'}]},
    {var,{2491,46},'PrevBody'}],
   [],
   [{debug_line,2492,1045},
    {'case',
     {2492,5},
     {call,
      {2492,10},
      {atom,{2492,10},should_suppress_warning},
      [{var,{2492,34},'Arg'}]},
     [{clause,
       {2493,2},
       [{atom,{2493,2},true}],
       [],
       [{debug_line,2494,1046},{var,{2494,6},'Arg'}]},
      {clause,
       {2495,2},
       [{atom,{2495,2},false}],
       [],
       [{debug_line,2496,1047},
        {'case',
         {2496,6},
         {call,
          {2496,11},
          {remote,
           {2496,19},
           {atom,{2496,11},core_lib},
           {atom,{2496,20},is_var_used}},
          [{var,{2496,32},'V'},{var,{2496,35},'PrevBody'}]},
         [{clause,
           {2497,3},
           [{atom,{2497,3},true}],
           [],
           [{debug_line,2498,1048},
            {call,
             {2498,7},
             {atom,{2498,7},suppress_warning},
             [{block,0,
               [{cons,{2498,24},{var,{2498,25},'Arg'},{nil,{2498,28}}}]}]}]},
          {clause,
           {2499,3},
           [{atom,{2499,3},false}],
           [],
           [{debug_line,2500,1049},{var,{2500,7},'Arg'}]}]}]}]}]}]}.
{function,
 {2506,1},
 suppress_warning,1,
 [{clause,
   {2506,1},
   [{var,{2506,1},'_'}],
   [[{call,
      {2506,1},
      {remote,{2506,1},{atom,{2506,1},fake},{atom,{2506,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2506,1050},{atom,{2506,1},ignore}]},
  {clause,
   {2506,1},
   [{cons,{2506,18},{var,{2506,19},'H'},{var,{2506,21},'T'}}],
   [],
   [{debug_line,2507,1051},
    {'case',
     {2507,5},
     {call,
      {2507,10},
      {remote,{2507,14},{atom,{2507,10},cerl},{atom,{2507,15},is_literal}},
      [{var,{2507,26},'H'}]},
     [{clause,
       {2508,2},
       [{atom,{2508,2},true}],
       [],
       [{debug_line,2509,1052},
        {call,
         {2509,6},
         {atom,{2509,6},suppress_warning},
         [{var,{2509,23},'T'}]}]},
      {clause,
       {2510,2},
       [{atom,{2510,2},false}],
       [],
       [{debug_line,2511,1053},
        {'case',
         {2511,6},
         {call,
          {2511,11},
          {remote,{2511,15},{atom,{2511,11},cerl},{atom,{2511,16},is_data}},
          [{var,{2511,24},'H'}]},
         [{clause,
           {2512,3},
           [{atom,{2512,3},true}],
           [],
           [{debug_line,2513,1054},
            {call,
             {2513,7},
             {atom,{2513,7},suppress_warning},
             [{block,0,
               [{op,
                 {2513,40},
                 '++',
                 {call,
                  {2513,24},
                  {remote,
                   {2513,28},
                   {atom,{2513,24},cerl},
                   {atom,{2513,29},data_es}},
                  [{var,{2513,37},'H'}]},
                 {var,{2513,43},'T'}}]}]}]},
          {clause,
           {2514,3},
           [{atom,{2514,3},false}],
           [],
           [{debug_line,2519,1055},
            {'case',
             {2519,7},
             {var,{2519,12},'T'},
             [{clause,
               {2520,4},
               [{nil,{2520,4}}],
               [],
               [{debug_line,2521,1056},{var,{2521,8},'H'}]},
              {clause,
               {2522,4},
               [{cons,{2522,4},{var,{2522,5},'_'},{var,{2522,7},'_'}}],
               [],
               [{debug_line,2523,1057},
                {call,
                 {2523,8},
                 {remote,
                  {2523,12},
                  {atom,{2523,8},cerl},
                  {atom,{2523,13},c_seq}},
                 [{var,{2523,19},'H'},
                  {block,0,
                   [{call,
                     {2523,22},
                     {atom,{2523,22},suppress_warning},
                     [{var,{2523,39},'T'}]}]}]}]}]}]}]}]}]}]},
  {clause,
   {2527,1},
   [{nil,{2527,18}}],
   [],
   [{debug_line,2527,1058},{call,{2527,25},{atom,{2527,25},void},[]}]}]}.
{function,
 {2529,1},
 move_case_into_arg,2,
 [{clause,
   {2529,1},
   [{var,{2529,1},'_'},{var,{2529,1},'_'}],
   [[{call,
      {2529,1},
      {remote,{2529,1},{atom,{2529,1},fake},{atom,{2529,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2529,1059},{atom,{2529,1},ignore}]},
  {clause,
   {2529,1},
   [{match,
     {2529,20},
     {tuple,
      {2529,20},
      [{atom,{2529,20},c_case},
       {var,{2529,20},'_'},
       {match,
        {2529,32},
        {tuple,
         {2529,32},
         [{atom,{2529,32},c_let},
          {var,{2529,32},'_'},
          {var,{2529,44},'OuterVars0'},
          {var,{2529,59},'OuterArg'},
          {var,{2530,44},'InnerArg0'}]},
        {var,{2530,55},'Outer'}},
       {var,{2531,36},'InnerClauses'}]},
     {var,{2531,50},'Inner'}},
    {var,{2531,57},'Sub'}],
   [],
   [{debug_line,2542,1060},
    {match,
     {2542,5},
     {var,{2542,5},'ScopeSub0'},
     {call,
      {2542,17},
      {atom,{2542,17},sub_subst_scope},
      [{block,0,
        [{block,
          {2542,33},
          [{match,{2542,33},{var,{2542,33},rec86},{var,{2542,33},'Sub'}},
           {'case',
            {2542,41},
            {var,{2542,33},rec86},
            [{clause,
              {2542,41},
              [{tuple,
                {2542,41},
                [{atom,{2542,41},sub},
                 {var,{2542,41},'_'},
                 {var,{2542,41},'_'},
                 {var,{2542,41},'_'},
                 {var,{2542,41},'_'},
                 {var,{2542,41},'_'}]}],
              [],
              [{call,
                {2542,41},
                {remote,
                 {2542,41},
                 {atom,{2542,41},erlang},
                 {atom,{2542,41},setelement}},
                [{integer,{2542,41},4},
                 {var,{2542,33},rec86},
                 {map,{2542,43},[]}]}]},
             {clause,
              [{generated,true},{location,{2542,41}}],
              [{var,[{generated,true},{location,{2542,41}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2542,41}}],
                {remote,
                 [{generated,true},{location,{2542,41}}],
                 {atom,[{generated,true},{location,{2542,41}}],erlang},
                 {atom,[{generated,true},{location,{2542,41}}],error}},
                [{tuple,
                  [{generated,true},{location,{2542,41}}],
                  [{atom,[{generated,true},{location,{2542,41}}],badrecord},
                   {var,{2542,33},rec86}]}]}]}]}]}]}]}},
    {debug_line,2543,1061},
    {match,
     {2543,5},
     {tuple,{2543,5},[{var,{2543,6},'OuterVars'},{var,{2543,16},'ScopeSub'}]},
     {call,
      {2543,28},
      {atom,{2543,28},var_list},
      [{var,{2543,37},'OuterVars0'},{var,{2543,49},'ScopeSub0'}]}},
    {debug_line,2544,1062},
    {match,
     {2544,5},
     {var,{2544,5},'InnerArg'},
     {call,
      {2544,16},
      {atom,{2544,16},body},
      [{var,{2544,21},'InnerArg0'},{var,{2544,32},'ScopeSub'}]}},
    {debug_line,2545,1063},
    {block,
     {2545,5},
     [{match,
       {2546,17},
       {var,{2546,17},rec87},
       {block,
        {2546,22},
        [{match,{2546,22},{var,{2546,22},rec89},{var,{2546,22},'Inner'}},
         {'case',
          {2546,35},
          {var,{2546,22},rec89},
          [{clause,
            {2546,35},
            [{tuple,
              {2546,35},
              [{atom,{2546,35},c_case},
               {var,{2546,35},'_'},
               {var,{2546,35},'_'},
               {var,{2546,35},'_'}]}],
            [],
            [{call,
              {2546,35},
              {remote,
               {2546,35},
               {atom,{2546,35},erlang},
               {atom,{2546,35},setelement}},
              [{integer,{2546,35},3},
               {call,
                {2546,48},
                {remote,
                 {2546,48},
                 {atom,{2546,48},erlang},
                 {atom,{2546,48},setelement}},
                [{integer,{2546,48},4},
                 {var,{2546,22},rec89},
                 {var,{2546,56},'InnerClauses'}]},
               {var,{2546,39},'InnerArg'}]}]},
           {clause,
            [{generated,true},{location,{2546,35}}],
            [{var,[{generated,true},{location,{2546,35}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{2546,35}}],
              {remote,
               [{generated,true},{location,{2546,35}}],
               {atom,[{generated,true},{location,{2546,35}}],erlang},
               {atom,[{generated,true},{location,{2546,35}}],error}},
              [{tuple,
                [{generated,true},{location,{2546,35}}],
                [{atom,[{generated,true},{location,{2546,35}}],badrecord},
                 {var,{2546,22},rec89}]}]}]}]}]}},
      {match,{2545,5},{var,{2545,5},rec88},{var,{2545,5},'Outer'}},
      {'case',
       {2545,17},
       {var,{2545,5},rec88},
       [{clause,
         {2545,17},
         [{tuple,
           {2545,17},
           [{atom,{2545,17},c_let},
            {var,{2545,17},'_'},
            {var,{2545,17},'_'},
            {var,{2545,17},'_'},
            {var,{2545,17},'_'}]}],
         [],
         [{call,
           {2545,17},
           {remote,
            {2545,17},
            {atom,{2545,17},erlang},
            {atom,{2545,17},setelement}},
           [{integer,{2545,17},3},
            {call,
             {2545,32},
             {remote,
              {2545,32},
              {atom,{2545,32},erlang},
              {atom,{2545,32},setelement}},
             [{integer,{2545,32},4},
              {call,
               {2546,17},
               {remote,
                {2546,17},
                {atom,{2546,17},erlang},
                {atom,{2546,17},setelement}},
               [{integer,{2546,17},5},
                {var,{2545,5},rec88},
                {var,{2546,17},rec87}]},
              {var,{2545,36},'OuterArg'}]},
            {var,{2545,22},'OuterVars'}]}]},
        {clause,
         [{generated,true},{location,{2545,17}}],
         [{var,[{generated,true},{location,{2545,17}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{2545,17}}],
           {remote,
            [{generated,true},{location,{2545,17}}],
            {atom,[{generated,true},{location,{2545,17}}],erlang},
            {atom,[{generated,true},{location,{2545,17}}],error}},
           [{tuple,
             [{generated,true},{location,{2545,17}}],
             [{atom,[{generated,true},{location,{2545,17}}],badrecord},
              {var,{2545,5},rec88}]}]}]}]}]}]},
  {clause,
   {2547,1},
   [{match,
     {2547,20},
     {tuple,
      {2547,20},
      [{atom,{2547,20},c_case},
       {var,{2547,20},'_'},
       {match,
        {2547,32},
        {tuple,
         {2547,32},
         [{atom,{2547,32},c_case},
          {var,{2547,32},'_'},
          {var,{2547,44},'OuterArg'},
          {cons,
           {2548,48},
           {var,{2548,49},'OuterCa0'},
           {cons,{2548,58},{var,{2548,58},'OuterCb'},{nil,{2548,65}}}}]},
        {var,{2548,68},'Outer'}},
       {var,{2549,36},'InnerClauses'}]},
     {var,{2549,50},'Inner0'}},
    {var,{2549,58},'Sub'}],
   [],
   [{debug_line,2550,1064},
    {'case',
     {2550,5},
     {call,
      {2550,10},
      {atom,{2550,10},is_failing_clause},
      [{var,{2550,28},'OuterCb'}]},
     [{clause,
       {2551,9},
       [{atom,{2551,9},true}],
       [],
       [{debug_line,2552,1065},
        {match,
         {2552,13},
         {tuple,
          {2552,13},
          [{atom,{2552,13},c_clause},
           {var,{2552,13},'_'},
           {var,{2552,28},'OuterPats0'},
           {var,{2552,45},'OuterGuard0'},
           {var,{2553,28},'InnerArg0'}]},
         {var,{2553,41},'OuterCa0'}},
        {debug_line,2571,1066},
        {match,
         {2571,13},
         {var,{2571,13},'ScopeSub0'},
         {call,
          {2571,25},
          {atom,{2571,25},sub_subst_scope},
          [{block,0,
            [{block,
              {2571,41},
              [{match,{2571,41},{var,{2571,41},rec90},{var,{2571,41},'Sub'}},
               {'case',
                {2571,49},
                {var,{2571,41},rec90},
                [{clause,
                  {2571,49},
                  [{tuple,
                    {2571,49},
                    [{atom,{2571,49},sub},
                     {var,{2571,49},'_'},
                     {var,{2571,49},'_'},
                     {var,{2571,49},'_'},
                     {var,{2571,49},'_'},
                     {var,{2571,49},'_'}]}],
                  [],
                  [{call,
                    {2571,49},
                    {remote,
                     {2571,49},
                     {atom,{2571,49},erlang},
                     {atom,{2571,49},setelement}},
                    [{integer,{2571,49},4},
                     {var,{2571,41},rec90},
                     {map,{2571,51},[]}]}]},
                 {clause,
                  [{generated,true},{location,{2571,49}}],
                  [{var,[{generated,true},{location,{2571,49}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2571,49}}],
                    {remote,
                     [{generated,true},{location,{2571,49}}],
                     {atom,[{generated,true},{location,{2571,49}}],erlang},
                     {atom,[{generated,true},{location,{2571,49}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2571,49}}],
                      [{atom,
                        [{generated,true},{location,{2571,49}}],
                        badrecord},
                       {var,{2571,41},rec90}]}]}]}]}]}]}]}},
        {debug_line,2575,1067},
        {match,
         {2575,6},
         {tuple,
          {2575,6},
          [{var,{2575,7},'OuterPats'},{var,{2575,17},'ScopeSub'}]},
         {call,
          {2575,29},
          {atom,{2575,29},pattern_list},
          [{var,{2575,42},'OuterPats0'},{var,{2575,54},'ScopeSub0'}]}},
        {debug_line,2576,1068},
        {match,
         {2576,6},
         {var,{2576,6},'OuterGuard'},
         {call,
          {2576,19},
          {atom,{2576,19},guard},
          [{var,{2576,25},'OuterGuard0'},{var,{2576,38},'ScopeSub'}]}},
        {debug_line,2577,1069},
        {match,
         {2577,6},
         {var,{2577,6},'InnerArg'},
         {call,
          {2577,17},
          {atom,{2577,17},body},
          [{var,{2577,22},'InnerArg0'},{var,{2577,33},'ScopeSub'}]}},
        {debug_line,2578,1070},
        {match,
         {2578,6},
         {var,{2578,6},'Inner'},
         {block,
          {2578,14},
          [{match,{2578,14},{var,{2578,14},rec91},{var,{2578,14},'Inner0'}},
           {'case',
            {2578,28},
            {var,{2578,14},rec91},
            [{clause,
              {2578,28},
              [{tuple,
                {2578,28},
                [{atom,{2578,28},c_case},
                 {var,{2578,28},'_'},
                 {var,{2578,28},'_'},
                 {var,{2578,28},'_'}]}],
              [],
              [{call,
                {2578,28},
                {remote,
                 {2578,28},
                 {atom,{2578,28},erlang},
                 {atom,{2578,28},setelement}},
                [{integer,{2578,28},3},
                 {call,
                  {2578,41},
                  {remote,
                   {2578,41},
                   {atom,{2578,41},erlang},
                   {atom,{2578,41},setelement}},
                  [{integer,{2578,41},4},
                   {var,{2578,14},rec91},
                   {var,{2578,49},'InnerClauses'}]},
                 {var,{2578,32},'InnerArg'}]}]},
             {clause,
              [{generated,true},{location,{2578,28}}],
              [{var,[{generated,true},{location,{2578,28}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2578,28}}],
                {remote,
                 [{generated,true},{location,{2578,28}}],
                 {atom,[{generated,true},{location,{2578,28}}],erlang},
                 {atom,[{generated,true},{location,{2578,28}}],error}},
                [{tuple,
                  [{generated,true},{location,{2578,28}}],
                  [{atom,[{generated,true},{location,{2578,28}}],badrecord},
                   {var,{2578,14},rec91}]}]}]}]}]}},
        {debug_line,2579,1071},
        {match,
         {2579,6},
         {var,{2579,6},'OuterCa'},
         {block,
          {2579,16},
          [{match,{2579,16},{var,{2579,16},rec92},{var,{2579,16},'OuterCa0'}},
           {'case',
            {2579,34},
            {var,{2579,16},rec92},
            [{clause,
              {2579,34},
              [{tuple,
                {2579,34},
                [{atom,{2579,34},c_clause},
                 {var,{2579,34},'_'},
                 {var,{2579,34},'_'},
                 {var,{2579,34},'_'},
                 {var,{2579,34},'_'}]}],
              [],
              [{call,
                {2579,34},
                {remote,
                 {2579,34},
                 {atom,{2579,34},erlang},
                 {atom,{2579,34},setelement}},
                [{integer,{2579,34},3},
                 {call,
                  {2580,6},
                  {remote,
                   {2580,6},
                   {atom,{2580,6},erlang},
                   {atom,{2580,6},setelement}},
                  [{integer,{2580,6},4},
                   {call,
                    {2581,6},
                    {remote,
                     {2581,6},
                     {atom,{2581,6},erlang},
                     {atom,{2581,6},setelement}},
                    [{integer,{2581,6},5},
                     {var,{2579,16},rec92},
                     {var,{2581,11},'Inner'}]},
                   {var,{2580,12},'OuterGuard'}]},
                 {var,{2579,39},'OuterPats'}]}]},
             {clause,
              [{generated,true},{location,{2579,34}}],
              [{var,[{generated,true},{location,{2579,34}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2579,34}}],
                {remote,
                 [{generated,true},{location,{2579,34}}],
                 {atom,[{generated,true},{location,{2579,34}}],erlang},
                 {atom,[{generated,true},{location,{2579,34}}],error}},
                [{tuple,
                  [{generated,true},{location,{2579,34}}],
                  [{atom,[{generated,true},{location,{2579,34}}],badrecord},
                   {var,{2579,16},rec92}]}]}]}]}]}},
        {debug_line,2582,1072},
        {block,
         {2582,6},
         [{match,
           {2583,5},
           {var,{2583,5},rec93},
           {cons,
            {2583,13},
            {var,{2583,14},'OuterCa'},
            {cons,{2583,22},{var,{2583,22},'OuterCb'},{nil,{2583,29}}}}},
          {match,{2582,6},{var,{2582,6},rec94},{var,{2582,6},'Outer'}},
          {'case',
           {2582,19},
           {var,{2582,6},rec94},
           [{clause,
             {2582,19},
             [{tuple,
               {2582,19},
               [{atom,{2582,19},c_case},
                {var,{2582,19},'_'},
                {var,{2582,19},'_'},
                {var,{2582,19},'_'}]}],
             [],
             [{call,
               {2582,19},
               {remote,
                {2582,19},
                {atom,{2582,19},erlang},
                {atom,{2582,19},setelement}},
               [{integer,{2582,19},3},
                {call,
                 {2583,5},
                 {remote,
                  {2583,5},
                  {atom,{2583,5},erlang},
                  {atom,{2583,5},setelement}},
                 [{integer,{2583,5},4},
                  {var,{2582,6},rec94},
                  {var,{2583,5},rec93}]},
                {var,{2582,23},'OuterArg'}]}]},
            {clause,
             [{generated,true},{location,{2582,19}}],
             [{var,[{generated,true},{location,{2582,19}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2582,19}}],
               {remote,
                [{generated,true},{location,{2582,19}}],
                {atom,[{generated,true},{location,{2582,19}}],erlang},
                {atom,[{generated,true},{location,{2582,19}}],error}},
               [{tuple,
                 [{generated,true},{location,{2582,19}}],
                 [{atom,[{generated,true},{location,{2582,19}}],badrecord},
                  {var,{2582,6},rec94}]}]}]}]}]}]},
      {clause,
       {2584,9},
       [{atom,{2584,9},false}],
       [],
       [{debug_line,2585,1073},{var,{2585,13},'Inner0'}]}]}]},
  {clause,
   {2587,1},
   [{match,
     {2587,20},
     {tuple,
      {2587,20},
      [{atom,{2587,20},c_case},
       {var,{2587,20},'_'},
       {match,
        {2587,32},
        {tuple,
         {2587,32},
         [{atom,{2587,32},c_seq},
          {var,{2587,32},'_'},
          {var,{2587,43},'OuterArg'},
          {var,{2587,57},'InnerArg'}]},
        {var,{2587,67},'Outer'}},
       {var,{2588,36},'InnerClauses'}]},
     {var,{2588,50},'Inner'}},
    {var,{2588,57},'_Sub'}],
   [],
   [{debug_line,2599,1074},
    {block,
     {2599,5},
     [{match,
       {2600,17},
       {var,{2600,17},rec95},
       {block,
        {2600,22},
        [{match,{2600,22},{var,{2600,22},rec97},{var,{2600,22},'Inner'}},
         {'case',
          {2600,35},
          {var,{2600,22},rec97},
          [{clause,
            {2600,35},
            [{tuple,
              {2600,35},
              [{atom,{2600,35},c_case},
               {var,{2600,35},'_'},
               {var,{2600,35},'_'},
               {var,{2600,35},'_'}]}],
            [],
            [{call,
              {2600,35},
              {remote,
               {2600,35},
               {atom,{2600,35},erlang},
               {atom,{2600,35},setelement}},
              [{integer,{2600,35},3},
               {call,
                {2600,48},
                {remote,
                 {2600,48},
                 {atom,{2600,48},erlang},
                 {atom,{2600,48},setelement}},
                [{integer,{2600,48},4},
                 {var,{2600,22},rec97},
                 {var,{2600,56},'InnerClauses'}]},
               {var,{2600,39},'InnerArg'}]}]},
           {clause,
            [{generated,true},{location,{2600,35}}],
            [{var,[{generated,true},{location,{2600,35}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{2600,35}}],
              {remote,
               [{generated,true},{location,{2600,35}}],
               {atom,[{generated,true},{location,{2600,35}}],erlang},
               {atom,[{generated,true},{location,{2600,35}}],error}},
              [{tuple,
                [{generated,true},{location,{2600,35}}],
                [{atom,[{generated,true},{location,{2600,35}}],badrecord},
                 {var,{2600,22},rec97}]}]}]}]}]}},
      {match,{2599,5},{var,{2599,5},rec96},{var,{2599,5},'Outer'}},
      {'case',
       {2599,17},
       {var,{2599,5},rec96},
       [{clause,
         {2599,17},
         [{tuple,
           {2599,17},
           [{atom,{2599,17},c_seq},
            {var,{2599,17},'_'},
            {var,{2599,17},'_'},
            {var,{2599,17},'_'}]}],
         [],
         [{call,
           {2599,17},
           {remote,
            {2599,17},
            {atom,{2599,17},erlang},
            {atom,{2599,17},setelement}},
           [{integer,{2599,17},3},
            {call,
             {2600,17},
             {remote,
              {2600,17},
              {atom,{2600,17},erlang},
              {atom,{2600,17},setelement}},
             [{integer,{2600,17},4},
              {var,{2599,5},rec96},
              {var,{2600,17},rec95}]},
            {var,{2599,21},'OuterArg'}]}]},
        {clause,
         [{generated,true},{location,{2599,17}}],
         [{var,[{generated,true},{location,{2599,17}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{2599,17}}],
           {remote,
            [{generated,true},{location,{2599,17}}],
            {atom,[{generated,true},{location,{2599,17}}],erlang},
            {atom,[{generated,true},{location,{2599,17}}],error}},
           [{tuple,
             [{generated,true},{location,{2599,17}}],
             [{atom,[{generated,true},{location,{2599,17}}],badrecord},
              {var,{2599,5},rec96}]}]}]}]}]}]},
  {clause,
   {2601,1},
   [{var,{2601,20},'Expr'},{var,{2601,26},'_'}],
   [],
   [{debug_line,2602,1075},{var,{2602,5},'Expr'}]}]}.
{function,{2608,1},
          update_let_types,3,
          [{clause,{2608,1},
                   [{var,{2608,1},'_'},{var,{2608,1},'_'},{var,{2608,1},'_'}],
                   [[{call,{2608,1},
                           {remote,{2608,1},
                                   {atom,{2608,1},fake},
                                   {atom,{2608,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2608,1076},{atom,{2608,1},ignore}]},
           {clause,{2608,1},
                   [{var,{2608,18},'Vs'},
                    {var,{2608,22},'Args'},
                    {var,{2608,28},'Sub'}],
                   [[{call,{2608,38},
                           {remote,{2608,38},
                                   {atom,{2608,38},erlang},
                                   {atom,{2608,38},is_list}},
                           [{var,{2608,46},'Args'}]}]],
                   [{debug_line,2609,1077},
                    {call,{2609,5},
                          {atom,{2609,5},update_let_types_1},
                          [{var,{2609,24},'Vs'},
                           {var,{2609,28},'Args'},
                           {var,{2609,34},'Sub'}]}]},
           {clause,{2610,1},
                   [{var,{2610,18},'_Vs'},
                    {var,{2610,23},'_Arg'},
                    {var,{2610,29},'Sub'}],
                   [],
                   [{debug_line,2613,1078},{var,{2613,5},'Sub'}]}]}.
{function,{2615,1},
          update_let_types_1,3,
          [{clause,{2615,1},
                   [{var,{2615,1},'_'},{var,{2615,1},'_'},{var,{2615,1},'_'}],
                   [[{call,{2615,1},
                           {remote,{2615,1},
                                   {atom,{2615,1},fake},
                                   {atom,{2615,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2615,1079},{atom,{2615,1},ignore}]},
           {clause,{2615,1},
                   [{cons,{2615,20},
                          {tuple,{2615,21},
                                 [{atom,{2615,21},c_var},
                                  {var,{2615,21},'_'},
                                  {var,{2615,33},'V'}]},
                          {var,{2615,36},'Vs'}},
                    {cons,{2615,41},{var,{2615,42},'A'},{var,{2615,44},'As'}},
                    {var,{2615,49},'Sub0'}],
                   [],
                   [{debug_line,2616,1080},
                    {match,{2616,5},
                           {var,{2616,5},'Sub'},
                           {call,{2616,11},
                                 {atom,{2616,11},update_types},
                                 [{var,{2616,24},'V'},
                                  {var,{2616,27},'A'},
                                  {var,{2616,30},'Sub0'}]}},
                    {debug_line,2617,1081},
                    {call,{2617,5},
                          {atom,{2617,5},update_let_types_1},
                          [{var,{2617,24},'Vs'},
                           {var,{2617,28},'As'},
                           {var,{2617,32},'Sub'}]}]},
           {clause,{2618,1},
                   [{nil,{2618,20}},{nil,{2618,24}},{var,{2618,28},'Sub'}],
                   [],
                   [{debug_line,2618,1082},{var,{2618,36},'Sub'}]}]}.
{function,
    {2620,1},
    update_types,3,
    [{clause,
         {2620,1},
         [{var,{2620,1},'_'},{var,{2620,1},'_'},{var,{2620,1},'_'}],
         [[{call,
               {2620,1},
               {remote,
                   {2620,1},
                   {atom,{2620,1},fake},
                   {atom,{2620,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2620,1083},{atom,{2620,1},ignore}]},
     {clause,
         {2620,1},
         [{var,{2620,14},'V'},
          {match,
              {2620,17},
              {tuple,
                  {2620,17},
                  [{atom,{2620,17},c_tuple},
                   {var,{2620,17},'_'},
                   {var,{2620,17},'_'}]},
              {var,{2620,28},'P'}},
          {match,
              {2620,31},
              {tuple,
                  {2620,31},
                  [{atom,{2620,31},sub},
                   {var,{2620,31},'_'},
                   {var,{2620,31},'_'},
                   {var,{2620,38},'Tdb'},
                   {var,{2620,31},'_'},
                   {var,{2620,31},'_'}]},
              {var,{2620,43},'Sub'}}],
         [],
         [{debug_line,2621,1084},
          {block,
              {2621,5},
              [{match,
                   {2621,13},
                   {var,{2621,13},rec98},
                   {map,
                       {2621,18},
                       {var,{2621,15},'Tdb'},
                       [{map_field_assoc,
                            {2621,21},
                            {var,{2621,20},'V'},
                            {var,{2621,23},'P'}}]}},
               {match,{2621,5},{var,{2621,5},rec99},{var,{2621,5},'Sub'}},
               {'case',
                   {2621,13},
                   {var,{2621,5},rec99},
                   [{clause,
                        {2621,13},
                        [{tuple,
                             {2621,13},
                             [{atom,{2621,13},sub},
                              {var,{2621,13},'_'},
                              {var,{2621,13},'_'},
                              {var,{2621,13},'_'},
                              {var,{2621,13},'_'},
                              {var,{2621,13},'_'}]}],
                        [],
                        [{call,
                             {2621,13},
                             {remote,
                                 {2621,13},
                                 {atom,{2621,13},erlang},
                                 {atom,{2621,13},setelement}},
                             [{integer,{2621,13},4},
                              {var,{2621,5},rec99},
                              {var,{2621,13},rec98}]}]},
                    {clause,
                        [{generated,true},{location,{2621,13}}],
                        [{var,[{generated,true},{location,{2621,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{2621,13}}],
                             {remote,
                                 [{generated,true},{location,{2621,13}}],
                                 {atom,
                                     [{generated,true},{location,{2621,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{2621,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{2621,13}}],
                                  [{atom,
                                       [{generated,true},{location,{2621,13}}],
                                       badrecord},
                                   {var,{2621,5},rec99}]}]}]}]}]}]},
     {clause,
         {2622,1},
         [{var,{2622,14},'_'},{var,{2622,17},'_'},{var,{2622,20},'Sub'}],
         [],
         [{debug_line,2622,1085},{var,{2622,28},'Sub'}]}]}.
{function,
    {2628,1},
    kill_types,2,
    [{clause,
         {2628,1},
         [{var,{2628,1},'_'},{var,{2628,1},'_'}],
         [[{call,
               {2628,1},
               {remote,
                   {2628,1},
                   {atom,{2628,1},fake},
                   {atom,{2628,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2628,1086},{atom,{2628,1},ignore}]},
     {clause,
         {2628,1},
         [{var,{2628,12},'Var'},{var,{2628,17},'Tdb'}],
         [],
         [{debug_line,2629,1087},
          {mc,{2629,5},
              {map_field_assoc,
                  {2629,11},
                  {block,0,[{var,{2629,7},'Key'}]},
                  {block,0,[{var,{2629,14},'Value'}]}},
              [{block,0,[{debug_line,2630,1088},{atom,{2630,26},true}]},
               {m_generate,
                   {2630,23},
                   {map_field_exact,
                       {2630,14},
                       {var,{2630,10},'Key'},
                       {var,{2630,17},'Value'}},
                   {var,{2630,26},'Tdb'}},
               {block,0,[{debug_line,2631,1089},{atom,{2631,14},true}]},
               {op,{2631,14},
                   '=/=',
                   {var,{2631,10},'Key'},
                   {var,{2631,18},'Var'}},
               {block,0,[{debug_line,2632,1090},{atom,{2632,10},true}]},
               {op,{2632,10},
                   'not',
                   {call,
                       {2632,14},
                       {remote,
                           {2632,22},
                           {atom,{2632,14},core_lib},
                           {atom,{2632,23},is_var_used}},
                       [{var,{2632,35},'Var'},{var,{2632,40},'Value'}]}}]}]}]}.
{function,
    {2637,1},
    copy_type,3,
    [{clause,
         {2637,1},
         [{var,{2637,1},'_'},{var,{2637,1},'_'},{var,{2637,1},'_'}],
         [[{call,
               {2637,1},
               {remote,
                   {2637,1},
                   {atom,{2637,1},fake},
                   {atom,{2637,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2637,1091},{atom,{2637,1},ignore}]},
     {clause,
         {2637,1},
         [{var,{2637,11},'V'},
          {tuple,
              {2637,14},
              [{atom,{2637,14},c_var},
               {var,{2637,14},'_'},
               {var,{2637,26},'Src'}]},
          {var,{2637,32},'Tdb'}],
         [],
         [{debug_line,2638,1092},
          {'case',
              {2638,5},
              {var,{2638,10},'Tdb'},
              [{clause,
                   {2639,9},
                   [{map,
                        {2639,9},
                        [{map_field_exact,
                             {2639,14},
                             {var,{2639,11},'Src'},
                             {var,{2639,16},'Type'}}]}],
                   [],
                   [{debug_line,2639,1093},
                    {map,
                        {2639,28},
                        {var,{2639,25},'Tdb'},
                        [{map_field_assoc,
                             {2639,31},
                             {var,{2639,30},'V'},
                             {var,{2639,33},'Type'}}]}]},
               {clause,
                   {2640,9},
                   [{var,{2640,9},'_'}],
                   [],
                   [{debug_line,2640,1094},{var,{2640,14},'Tdb'}]}]}]},
     {clause,
         {2642,1},
         [{var,{2642,11},'_'},{var,{2642,14},'_'},{var,{2642,17},'Tdb'}],
         [],
         [{debug_line,2642,1095},{var,{2642,25},'Tdb'}]}]}.
{function,{2646,1},
          void,0,
          [{clause,{2646,1},
                   [],
                   [[{call,{2646,1},
                           {remote,{2646,1},
                                   {atom,{2646,1},fake},
                                   {atom,{2646,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2646,1096},{atom,{2646,1},ignore}]},
           {clause,{2646,1},
                   [],[],
                   [{debug_line,2646,1097},
                    {tuple,{2646,11},
                           [{atom,{2646,11},c_literal},
                            {nil,{2646,11}},
                            {atom,{2646,26},ok}]}]}]}.
{function,
 {2680,1},
 descend,2,
 [{clause,
   {2680,1},
   [{var,{2680,1},'_'},{var,{2680,1},'_'}],
   [[{call,
      {2680,1},
      {remote,{2680,1},{atom,{2680,1},fake},{atom,{2680,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2680,1098},{atom,{2680,1},ignore}]},
  {clause,
   {2680,1},
   [{var,{2680,9},'_Core'},
    {match,
     {2680,16},
     {tuple,
      {2680,16},
      [{atom,{2680,16},sub},
       {var,{2680,16},'_'},
       {var,{2680,16},'_'},
       {var,{2680,16},'_'},
       {var,{2680,16},'_'},
       {atom,{2680,25},false}]},
     {var,{2680,32},'Sub'}}],
   [],
   [{debug_line,2681,1099},{var,{2681,5},'Sub'}]},
  {clause,
   {2682,1},
   [{var,{2682,9},'Core'},
    {match,
     {2682,15},
     {tuple,
      {2682,15},
      [{atom,{2682,15},sub},
       {var,{2682,15},'_'},
       {var,{2682,15},'_'},
       {var,{2682,15},'_'},
       {var,{2682,15},'_'},
       {atom,{2682,24},true}]},
     {var,{2682,30},'Sub'}}],
   [],
   [{debug_line,2683,1100},
    {'case',
     {2683,5},
     {call,
      {2683,10},
      {atom,{2683,10},should_suppress_warning},
      [{var,{2683,34},'Core'}]},
     [{clause,
       {2684,9},
       [{atom,{2684,9},true}],
       [],
       [{debug_line,2693,1101},{var,{2693,13},'Sub'}]},
      {clause,
       {2694,9},
       [{atom,{2694,9},false}],
       [],
       [{debug_line,2697,1102},
        {block,
         {2697,13},
         [{match,{2697,13},{var,{2697,13},rec100},{var,{2697,13},'Sub'}},
          {'case',
           {2697,21},
           {var,{2697,13},rec100},
           [{clause,
             {2697,21},
             [{tuple,
               {2697,21},
               [{atom,{2697,21},sub},
                {var,{2697,21},'_'},
                {var,{2697,21},'_'},
                {var,{2697,21},'_'},
                {var,{2697,21},'_'},
                {var,{2697,21},'_'}]}],
             [],
             [{call,
               {2697,21},
               {remote,
                {2697,21},
                {atom,{2697,21},erlang},
                {atom,{2697,21},setelement}},
               [{integer,{2697,21},6},
                {var,{2697,13},rec100},
                {atom,{2697,25},false}]}]},
            {clause,
             [{generated,true},{location,{2697,21}}],
             [{var,[{generated,true},{location,{2697,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2697,21}}],
               {remote,
                [{generated,true},{location,{2697,21}}],
                {atom,[{generated,true},{location,{2697,21}}],erlang},
                {atom,[{generated,true},{location,{2697,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{2697,21}}],
                 [{atom,[{generated,true},{location,{2697,21}}],badrecord},
                  {var,{2697,13},rec100}]}]}]}]}]}]}]}]}]}.
{function,
    {2700,1},
    warn_useless_building,2,
    [{clause,
         {2700,1},
         [{var,{2700,1},'_'},{var,{2700,1},'_'}],
         [[{call,
               {2700,1},
               {remote,
                   {2700,1},
                   {atom,{2700,1},fake},
                   {atom,{2700,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2700,1103},{atom,{2700,1},ignore}]},
     {clause,
         {2700,1},
         [{var,{2700,23},'Core'},
          {tuple,
              {2700,29},
              [{atom,{2700,29},sub},
               {var,{2700,29},'_'},
               {var,{2700,29},'_'},
               {var,{2700,29},'_'},
               {var,{2700,29},'_'},
               {var,{2700,38},'Top'}]}],
         [],
         [{debug_line,2701,1104},
          {'case',
              {2701,5},
              {var,{2701,10},'Top'},
              [{clause,
                   {2702,9},
                   [{atom,{2702,9},true}],
                   [],
                   [{debug_line,2702,1105},
                    {call,
                        {2702,17},
                        {atom,{2702,17},add_warning},
                        [{var,{2702,29},'Core'},
                         {block,0,
                             [{tuple,
                                  {2702,35},
                                  [{atom,{2702,36},ignored},
                                   {atom,{2702,44},useless_building}]}]}]}]},
               {clause,
                   {2703,9},
                   [{atom,{2703,9},false}],
                   [],
                   [{debug_line,2703,1106},{atom,{2703,18},ok}]}]}]}]}.
{function,
    {2710,1},
    init_warnings,0,
    [{clause,
         {2710,1},
         [],
         [[{call,
               {2710,1},
               {remote,
                   {2710,1},
                   {atom,{2710,1},fake},
                   {atom,{2710,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2710,1107},{atom,{2710,1},ignore}]},
     {clause,
         {2710,1},
         [],[],
         [{debug_line,2711,1108},
          {call,
              {2711,5},
              {remote,{2711,5},{atom,{2711,5},erlang},{atom,{2711,5},put}},
              [{block,0,
                   [{tuple,
                        {2711,9},
                        [{atom,{2711,11},sys_core_fold},
                         {atom,{2711,18},warnings}]}]},
               {nil,{2711,29}}]}]}]}.
{function,
 {2712,1},
 add_warning,2,
 [{clause,
   {2712,1},
   [{var,{2712,1},'_'},{var,{2712,1},'_'}],
   [[{call,
      {2712,1},
      {remote,{2712,1},{atom,{2712,1},fake},{atom,{2712,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2712,1109},{atom,{2712,1},ignore}]},
  {clause,
   {2712,1},
   [{var,{2712,13},'Core'},{var,{2712,19},'Term'}],
   [],
   [{debug_line,2713,1110},
    {'case',
     {2713,5},
     {call,
      {2713,10},
      {atom,{2713,10},should_suppress_warning},
      [{var,{2713,34},'Core'}]},
     [{clause,
       {2714,2},
       [{atom,{2714,2},true}],
       [],
       [{debug_line,2715,1111},{atom,{2715,6},ok}]},
      {clause,
       {2716,2},
       [{atom,{2716,2},false}],
       [],
       [{debug_line,2717,1112},
        {match,
         {2717,6},
         {var,{2717,6},'Anno'},
         {call,
          {2717,13},
          {remote,{2717,17},{atom,{2717,13},cerl},{atom,{2717,18},get_ann}},
          [{var,{2717,26},'Core'}]}},
        {debug_line,2718,1113},
        {match,
         {2718,6},
         {var,{2718,6},'Location'},
         {call,
          {2718,17},
          {atom,{2718,17},get_location},
          [{var,{2718,30},'Anno'}]}},
        {debug_line,2719,1114},
        {match,
         {2719,6},
         {var,{2719,6},'File'},
         {call,{2719,13},{atom,{2719,13},get_file},[{var,{2719,22},'Anno'}]}},
        {debug_line,2720,1115},
        {match,
         {2720,6},
         {var,{2720,6},'Key'},
         {tuple,
          {2720,12},
          [{atom,{2720,14},sys_core_fold},{atom,{2720,21},warnings}]}},
        {debug_line,2721,1116},
        {'case',
         {2721,6},
         {call,
          {2721,11},
          {remote,{2721,11},{atom,{2721,11},erlang},{atom,{2721,11},get}},
          [{var,{2721,15},'Key'}]},
         [{clause,
           {2722,3},
           [{cons,
             {2722,3},
             {tuple,
              {2722,4},
              [{var,{2722,5},'File'},
               {cons,
                {2722,10},
                {tuple,
                 {2722,11},
                 [{var,{2722,12},'Location'},
                  {atom,{2722,22},sys_core_fold},
                  {var,{2722,29},'Term'}]},
                {nil,{2722,34}}}]},
             {var,{2722,37},'_'}}],
           [],
           [{debug_line,2723,1117},{atom,{2723,7},ok}]},
          {clause,
           {2725,3},
           [{var,{2725,3},'Ws'}],
           [],
           [{debug_line,2726,1118},
            {call,
             {2726,7},
             {remote,{2726,7},{atom,{2726,7},erlang},{atom,{2726,7},put}},
             [{var,{2726,11},'Key'},
              {block,0,
               [{cons,
                 {2726,16},
                 {tuple,
                  {2726,17},
                  [{var,{2726,18},'File'},
                   {cons,
                    {2726,23},
                    {tuple,
                     {2726,24},
                     [{var,{2726,25},'Location'},
                      {atom,{2726,35},sys_core_fold},
                      {var,{2726,42},'Term'}]},
                    {nil,{2726,47}}}]},
                 {var,{2726,50},'Ws'}}]}]}]}]}]}]}]}]}.
{function,{2730,1},
          get_line,1,
          [{clause,{2730,1},
                   [{var,{2730,1},'_'}],
                   [[{call,{2730,1},
                           {remote,{2730,1},
                                   {atom,{2730,1},fake},
                                   {atom,{2730,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2730,1119},{atom,{2730,1},ignore}]},
           {clause,{2730,1},
                   [{cons,{2730,10},
                          {var,{2730,11},'Line'},
                          {var,{2730,16},'_'}}],
                   [[{call,{2730,25},
                           {remote,{2730,25},
                                   {atom,{2730,25},erlang},
                                   {atom,{2730,25},is_integer}},
                           [{var,{2730,36},'Line'}]}]],
                   [{debug_line,2730,1120},{var,{2730,45},'Line'}]},
           {clause,{2731,1},
                   [{cons,{2731,10},
                          {tuple,{2731,11},
                                 [{var,{2731,12},'Line'},
                                  {var,{2731,18},'_Column'}]},
                          {var,{2731,29},'_T'}}],
                   [[{call,{2731,39},
                           {remote,{2731,39},
                                   {atom,{2731,39},erlang},
                                   {atom,{2731,39},is_integer}},
                           [{var,{2731,50},'Line'}]}]],
                   [{debug_line,2731,1121},{var,{2731,59},'Line'}]},
           {clause,{2732,1},
                   [{cons,{2732,10},{var,{2732,11},'_'},{var,{2732,13},'T'}}],
                   [],
                   [{debug_line,2732,1122},
                    {call,{2732,20},
                          {atom,{2732,20},get_line},
                          [{var,{2732,29},'T'}]}]},
           {clause,{2733,1},
                   [{nil,{2733,10}}],
                   [],
                   [{debug_line,2733,1123},{atom,{2733,17},none}]}]}.
{function,{2735,1},
          get_location,1,
          [{clause,{2735,1},
                   [{var,{2735,1},'_'}],
                   [[{call,{2735,1},
                           {remote,{2735,1},
                                   {atom,{2735,1},fake},
                                   {atom,{2735,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2735,1124},{atom,{2735,1},ignore}]},
           {clause,{2735,1},
                   [{cons,{2735,14},
                          {var,{2735,15},'Line'},
                          {var,{2735,20},'_'}}],
                   [[{call,{2735,29},
                           {remote,{2735,29},
                                   {atom,{2735,29},erlang},
                                   {atom,{2735,29},is_integer}},
                           [{var,{2735,40},'Line'}]}]],
                   [{debug_line,2736,1125},{var,{2736,5},'Line'}]},
           {clause,{2737,1},
                   [{cons,{2737,14},
                          {tuple,{2737,15},
                                 [{var,{2737,16},'Line'},
                                  {var,{2737,22},'Column'}]},
                          {var,{2737,32},'_T'}}],
                   [[{call,{2737,42},
                           {remote,{2737,42},
                                   {atom,{2737,42},erlang},
                                   {atom,{2737,42},is_integer}},
                           [{var,{2737,53},'Line'}]},
                     {call,{2737,60},
                           {remote,{2737,60},
                                   {atom,{2737,60},erlang},
                                   {atom,{2737,60},is_integer}},
                           [{var,{2737,71},'Column'}]}]],
                   [{debug_line,2738,1126},
                    {tuple,{2738,5},
                           [{var,{2738,6},'Line'},{var,{2738,11},'Column'}]}]},
           {clause,{2739,1},
                   [{cons,{2739,14},{var,{2739,15},'_'},{var,{2739,17},'T'}}],
                   [],
                   [{debug_line,2740,1127},
                    {call,{2740,5},
                          {atom,{2740,5},get_location},
                          [{var,{2740,18},'T'}]}]},
           {clause,{2741,1},
                   [{nil,{2741,14}}],
                   [],
                   [{debug_line,2742,1128},{atom,{2742,5},none}]}]}.
{function,{2744,1},
          get_file,1,
          [{clause,{2744,1},
                   [{var,{2744,1},'_'}],
                   [[{call,{2744,1},
                           {remote,{2744,1},
                                   {atom,{2744,1},fake},
                                   {atom,{2744,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2744,1129},{atom,{2744,1},ignore}]},
           {clause,{2744,1},
                   [{cons,{2744,10},
                          {tuple,{2744,11},
                                 [{atom,{2744,12},file},
                                  {var,{2744,17},'File'}]},
                          {var,{2744,23},'_'}}],
                   [],
                   [{debug_line,2744,1130},{var,{2744,30},'File'}]},
           {clause,{2745,1},
                   [{cons,{2745,10},{var,{2745,11},'_'},{var,{2745,13},'T'}}],
                   [],
                   [{debug_line,2745,1131},
                    {call,{2745,20},
                          {atom,{2745,20},get_file},
                          [{var,{2745,29},'T'}]}]},
           {clause,{2746,1},
                   [{nil,{2746,10}}],
                   [],
                   [{debug_line,2746,1132},{string,{2746,17},"no_file"}]}]}.
{function,
    {2748,1},
    should_suppress_warning,1,
    [{clause,
         {2748,1},
         [{var,{2748,1},'_'}],
         [[{call,
               {2748,1},
               {remote,
                   {2748,1},
                   {atom,{2748,1},fake},
                   {atom,{2748,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2748,1133},{atom,{2748,1},ignore}]},
     {clause,
         {2748,1},
         [{var,{2748,25},'Core'}],
         [],
         [{debug_line,2749,1134},
          {'case',
              {2749,5},
              {call,
                  {2749,5},
                  {atom,{2749,5},is_compiler_generated},
                  [{var,{2749,27},'Core'}]},
              [{clause,
                   {2749,5},
                   [{atom,{2749,5},true}],
                   [],
                   [{atom,{2749,5},true}]},
               {clause,
                   {2749,5},
                   [{atom,{2749,5},false}],
                   [],
                   [{debug_line,2750,1135},
                    {call,
                        {2750,2},
                        {atom,{2750,2},is_result_unwanted},
                        [{var,{2750,21},'Core'}]}]},
               {clause,
                   [{generated,true},{location,{2749,5}}],
                   [{var,{2749,5},cov1}],
                   [],
                   [{call,
                        {2749,5},
                        {remote,
                            {2749,5},
                            {atom,{2749,5},erlang},
                            {atom,{2749,5},error}},
                        [{block,0,
                             [{tuple,
                                  {2749,5},
                                  [{atom,{2749,5},badarg},
                                   {var,{2749,5},cov1}]}]}]}]}]}]}]}.
{function,
    {2752,1},
    is_compiler_generated,1,
    [{clause,
         {2752,1},
         [{var,{2752,1},'_'}],
         [[{call,
               {2752,1},
               {remote,
                   {2752,1},
                   {atom,{2752,1},fake},
                   {atom,{2752,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2752,1136},{atom,{2752,1},ignore}]},
     {clause,
         {2752,1},
         [{var,{2752,23},'Core'}],
         [],
         [{debug_line,2753,1137},
          {match,
              {2753,5},
              {var,{2753,5},'Ann'},
              {call,
                  {2753,11},
                  {remote,
                      {2753,15},
                      {atom,{2753,11},cerl},
                      {atom,{2753,16},get_ann}},
                  [{var,{2753,24},'Core'}]}},
          {debug_line,2754,1138},
          {call,
              {2754,5},
              {remote,{2754,5},{atom,{2754,5},lists},{atom,{2754,5},member}},
              [{atom,{2754,12},compiler_generated},{var,{2754,32},'Ann'}]}]}]}.
{function,
    {2756,1},
    is_result_unwanted,1,
    [{clause,
         {2756,1},
         [{var,{2756,1},'_'}],
         [[{call,
               {2756,1},
               {remote,
                   {2756,1},
                   {atom,{2756,1},fake},
                   {atom,{2756,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2756,1139},{atom,{2756,1},ignore}]},
     {clause,
         {2756,1},
         [{var,{2756,20},'Core'}],
         [],
         [{debug_line,2757,1140},
          {match,
              {2757,5},
              {var,{2757,5},'Ann'},
              {call,
                  {2757,11},
                  {remote,
                      {2757,15},
                      {atom,{2757,11},cerl},
                      {atom,{2757,16},get_ann}},
                  [{var,{2757,24},'Core'}]}},
          {debug_line,2758,1141},
          {call,
              {2758,5},
              {remote,{2758,5},{atom,{2758,5},lists},{atom,{2758,5},member}},
              [{atom,{2758,12},result_not_wanted},{var,{2758,31},'Ann'}]}]}]}.
{function,
    {2760,1},
    get_warnings,0,
    [{clause,
         {2760,1},
         [],
         [[{call,
               {2760,1},
               {remote,
                   {2760,1},
                   {atom,{2760,1},fake},
                   {atom,{2760,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2760,1142},{atom,{2760,1},ignore}]},
     {clause,
         {2760,1},
         [],[],
         [{debug_line,2761,1143},
          {call,
              {2761,5},
              {remote,
                  {2761,12},
                  {atom,{2761,5},ordsets},
                  {atom,{2761,13},from_list}},
              [{block,0,
                   [{call,
                        {2761,24},
                        {remote,
                            {2761,24},
                            {atom,{2761,24},erlang},
                            {atom,{2761,24},erase}},
                        [{block,0,
                             [{tuple,
                                  {2761,30},
                                  [{atom,{2761,32},sys_core_fold},
                                   {atom,{2761,39},warnings}]}]}]}]}]}]}]}.
{function,
    {2763,1},
    classify_call,1,
    [{clause,
         {2763,1},
         [{var,{2763,1},'_'}],
         [[{call,
               {2763,1},
               {remote,
                   {2763,1},
                   {atom,{2763,1},fake},
                   {atom,{2763,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2763,1144},{atom,{2763,1},ignore}]},
     {clause,
         {2763,1},
         [{var,{2763,15},'Call'}],
         [],
         [{debug_line,2764,1145},
          {match,
              {2764,5},
              {var,{2764,5},'Mod'},
              {call,
                  {2764,11},
                  {remote,
                      {2764,15},
                      {atom,{2764,11},cerl},
                      {atom,{2764,16},concrete}},
                  [{block,0,
                       [{call,
                            {2764,25},
                            {remote,
                                {2764,29},
                                {atom,{2764,25},cerl},
                                {atom,{2764,30},call_module}},
                            [{var,{2764,42},'Call'}]}]}]}},
          {debug_line,2765,1146},
          {match,
              {2765,5},
              {var,{2765,5},'Name'},
              {call,
                  {2765,12},
                  {remote,
                      {2765,16},
                      {atom,{2765,12},cerl},
                      {atom,{2765,17},concrete}},
                  [{block,0,
                       [{call,
                            {2765,26},
                            {remote,
                                {2765,30},
                                {atom,{2765,26},cerl},
                                {atom,{2765,31},call_name}},
                            [{var,{2765,41},'Call'}]}]}]}},
          {debug_line,2766,1147},
          {match,
              {2766,5},
              {var,{2766,5},'Arity'},
              {call,
                  {2766,13},
                  {remote,
                      {2766,17},
                      {atom,{2766,13},cerl},
                      {atom,{2766,18},call_arity}},
                  [{var,{2766,29},'Call'}]}},
          {debug_line,2767,1148},
          {tuple,
              {2767,5},
              [{var,{2767,6},'Mod'},
               {var,{2767,11},'Name'},
               {var,{2767,17},'Arity'}]}]}]}.
{attribute,{2769,2},
           type,
           {error,{type,{2769,18},
                        tuple,
                        [{type,{2769,19},
                               union,
                               [{atom,{2769,19},failed},
                                {atom,{2769,30},nomatch},
                                {atom,{2769,42},ignored}]},
                         {type,{2769,53},term,[]}]},
                  []}}.
{attribute,{2771,2},
           spec,
           {{format_error,1},
            [{type,{2771,19},
                   'fun',
                   [{type,{2771,19},product,[{user_type,{2771,20},error,[]}]},
                    {type,{2771,32},nonempty_string,[]}]}]}}.
{function,
 {2773,1},
 format_error,1,
 [{clause,
   {2773,1},
   [{var,{2773,1},'_'}],
   [[{call,
      {2773,1},
      {remote,{2773,1},{atom,{2773,1},fake},{atom,{2773,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2773,1149},{atom,{2773,1},ignore}]},
  {clause,
   {2773,1},
   [{tuple,
     {2773,14},
     [{atom,{2773,15},failed},
      {tuple,
       {2773,22},
       [{atom,{2773,23},eval_failure},
        {var,{2773,36},'Call'},
        {var,{2773,41},'Reason'}]}]}],
   [],
   [{debug_line,2774,1150},
    {call,
     {2774,5},
     {remote,{2774,5},{atom,{2774,5},lists},{atom,{2774,5},flatten}},
     [{block,0,
       [{call,
         {2774,13},
         {remote,{2774,19},{atom,{2774,13},io_lib},{atom,{2774,20},format}},
         [{block,0,[{string,{2774,27},"~ts will fail with a '~p' exception"}]},
          {block,0,
           [{debug_line,2775,1151},
            {cons,
             {2775,27},
             {call,
              {2775,28},
              {atom,{2775,28},format_call},
              [{var,{2775,40},'Call'},{atom,{2775,46},false}]},
             {cons,
              {2775,53},
              {var,{2775,53},'Reason'},
              {nil,{2775,59}}}}]}]}]}]}]},
  {clause,
   {2776,1},
   [{tuple,
     {2776,14},
     [{atom,{2776,15},failed},{atom,{2776,22},embedded_binary_size}]}],
   [],
   [{debug_line,2777,1152},
    {string,
     {2777,5},
     "binary construction will fail with a 'badarg' exception (field size for binary/bitstring greater than actual size)"}]},
  {clause,
   {2779,1},
   [{tuple,
     {2779,14},
     [{atom,{2779,15},failed},
      {tuple,
       {2779,22},
       [{atom,{2779,23},embedded_unit},
        {var,{2779,37},'Unit'},
        {var,{2779,42},'Size'}]}]}],
   [],
   [{debug_line,2780,1153},
    {match,
     {2780,5},
     {var,{2780,5},'M'},
     {call,
      {2780,9},
      {remote,{2780,15},{atom,{2780,9},io_lib},{atom,{2780,16},format}},
      [{block,0,
        [{string,
          {2780,23},
          "binary construction will fail with a 'badarg' exception (size ~p cannot be evenly divided by unit ~p)"}]},
       {block,0,
        [{debug_line,2781,1154},
         {cons,
          {2781,58},
          {var,{2781,59},'Size'},
          {cons,{2781,64},{var,{2781,64},'Unit'},{nil,{2781,68}}}}]}]}},
    {debug_line,2782,1155},
    {call,
     {2782,5},
     {remote,{2782,5},{atom,{2782,5},lists},{atom,{2782,5},flatten}},
     [{var,{2782,13},'M'}]}]},
  {clause,
   {2783,1},
   [{tuple,{2783,14},[{atom,{2783,15},failed},{atom,{2783,22},bad_unicode}]}],
   [],
   [{debug_line,2784,1156},
    {string,
     {2784,5},
     "binary construction will fail with a 'badarg' exception (invalid Unicode code point in a utf8/utf16/utf32 segment)"}]},
  {clause,
   {2786,1},
   [{tuple,
     {2786,14},
     [{atom,{2786,15},failed},{atom,{2786,22},bad_float_size}]}],
   [],
   [{debug_line,2787,1157},
    {string,
     {2787,5},
     "binary construction will fail with a 'badarg' exception (invalid size for a float segment)"}]},
  {clause,
   {2789,1},
   [{tuple,
     {2789,14},
     [{atom,{2789,15},failed},{atom,{2789,22},bad_map_update}]}],
   [],
   [{debug_line,2790,1158},
    {string,{2790,5},"map update will fail with a 'badmap' exception"}]},
  {clause,
   {2791,1},
   [{tuple,{2791,14},[{atom,{2791,15},failed},{atom,{2791,22},bad_call}]}],
   [],
   [{debug_line,2792,1159},{string,{2792,5},"invalid function call"}]},
  {clause,
   {2793,1},
   [{tuple,
     {2793,14},
     [{atom,{2793,15},nomatch},
      {tuple,
       {2793,23},
       [{atom,{2793,24},shadow},
        {var,{2793,31},'Line'},
        {tuple,
         {2793,36},
         [{var,{2793,37},'Name'},{var,{2793,43},'Arity'}]}]}]}],
   [],
   [{debug_line,2794,1160},
    {match,
     {2794,5},
     {var,{2794,5},'M'},
     {call,
      {2794,9},
      {remote,{2794,15},{atom,{2794,9},io_lib},{atom,{2794,16},format}},
      [{block,0,
        [{string,
          {2794,23},
          "this clause for ~ts/~B cannot match because a previous clause at line ~p always matches"}]},
       {block,0,
        [{debug_line,2795,1161},
         {cons,
          {2795,45},
          {var,{2795,46},'Name'},
          {cons,
           {2795,52},
           {var,{2795,52},'Arity'},
           {cons,{2795,59},{var,{2795,59},'Line'},{nil,{2795,63}}}}}]}]}},
    {debug_line,2796,1162},
    {call,
     {2796,5},
     {remote,{2796,5},{atom,{2796,5},lists},{atom,{2796,5},flatten}},
     [{var,{2796,13},'M'}]}]},
  {clause,
   {2797,1},
   [{tuple,
     {2797,14},
     [{atom,{2797,15},nomatch},
      {tuple,{2797,23},[{atom,{2797,24},shadow},{var,{2797,31},'Line'}]}]}],
   [],
   [{debug_line,2798,1163},
    {match,
     {2798,5},
     {var,{2798,5},'M'},
     {call,
      {2798,9},
      {remote,{2798,15},{atom,{2798,9},io_lib},{atom,{2798,16},format}},
      [{block,0,
        [{string,
          {2798,23},
          "this clause cannot match because a previous clause at line ~p always matches"}]},
       {block,0,
        [{debug_line,2799,1164},
         {cons,{2799,27},{var,{2799,28},'Line'},{nil,{2799,32}}}]}]}},
    {debug_line,2800,1165},
    {call,
     {2800,5},
     {remote,{2800,5},{atom,{2800,5},lists},{atom,{2800,5},flatten}},
     [{var,{2800,13},'M'}]}]},
  {clause,
   {2801,1},
   [{tuple,{2801,14},[{atom,{2801,15},nomatch},{atom,{2801,23},shadow}]}],
   [],
   [{debug_line,2802,1166},
    {string,
     {2802,5},
     "this clause cannot match because a previous clause always matches"}]},
  {clause,
   {2803,1},
   [{tuple,{2803,14},[{atom,{2803,15},nomatch},{atom,{2803,23},guard}]}],
   [],
   [{debug_line,2804,1167},
    {string,
     {2804,5},
     "this clause cannot match because its guard evaluates to 'false'"}]},
  {clause,
   {2805,1},
   [{tuple,
     {2805,14},
     [{atom,{2805,15},nomatch},
      {tuple,
       {2805,23},
       [{atom,{2805,24},bit_syntax_truncated},
        {var,{2805,45},'Signess'},
        {var,{2805,53},'Val'},
        {var,{2805,57},'Sz'}]}]}],
   [],
   [{debug_line,2806,1168},
    {match,
     {2806,5},
     {var,{2806,5},'S'},
     {'case',
      {2806,9},
      {var,{2806,14},'Signess'},
      [{clause,
        {2807,6},
        [{atom,{2807,6},signed}],
        [],
        [{debug_line,2807,1169},{string,{2807,16},"a 'signed'"}]},
       {clause,
        {2808,6},
        [{atom,{2808,6},unsigned}],
        [],
        [{debug_line,2808,1170},{string,{2808,18},"an 'unsigned'"}]}]}},
    {debug_line,2810,1171},
    {match,
     {2810,5},
     {var,{2810,5},'F'},
     {string,
      {2810,9},
      "this clause cannot match because the value ~P will not fit in ~s binary segment of size ~p"}},
    {debug_line,2812,1172},
    {call,
     {2812,5},
     {remote,{2812,5},{atom,{2812,5},lists},{atom,{2812,5},flatten}},
     [{block,0,
       [{call,
         {2812,13},
         {remote,{2812,19},{atom,{2812,13},io_lib},{atom,{2812,20},format}},
         [{var,{2812,27},'F'},
          {block,0,
           [{cons,
             {2812,30},
             {var,{2812,31},'Val'},
             {cons,
              {2812,35},
              {integer,{2812,35},10},
              {cons,
               {2812,38},
               {var,{2812,38},'S'},
               {cons,
                {2812,40},
                {var,{2812,40},'Sz'},
                {nil,{2812,42}}}}}}]}]}]}]}]},
  {clause,
   {2813,1},
   [{tuple,
     {2813,14},
     [{atom,{2813,15},nomatch},
      {tuple,
       {2813,23},
       [{atom,{2813,24},bit_syntax_unsigned},{var,{2813,44},'Val'}]}]}],
   [],
   [{debug_line,2814,1173},
    {match,
     {2814,5},
     {var,{2814,5},'F'},
     {string,
      {2814,9},
      "this clause cannot match because the negative value ~P will never match the value of an 'unsigned' binary segment"}},
    {debug_line,2816,1174},
    {call,
     {2816,5},
     {remote,{2816,5},{atom,{2816,5},lists},{atom,{2816,5},flatten}},
     [{block,0,
       [{call,
         {2816,13},
         {remote,{2816,19},{atom,{2816,13},io_lib},{atom,{2816,20},format}},
         [{var,{2816,27},'F'},
          {block,0,
           [{cons,
             {2816,30},
             {var,{2816,31},'Val'},
             {cons,
              {2816,35},
              {integer,{2816,35},10},
              {nil,{2816,37}}}}]}]}]}]}]},
  {clause,
   {2817,1},
   [{tuple,
     {2817,14},
     [{atom,{2817,15},nomatch},
      {tuple,
       {2817,23},
       [{atom,{2817,24},bit_syntax_size},{var,{2817,40},'Sz'}]}]}],
   [],
   [{debug_line,2818,1175},
    {match,
     {2818,5},
     {var,{2818,5},'F'},
     {string,
      {2818,9},
      "this clause cannot match because '~P' is not a valid size for a binary segment"}},
    {debug_line,2819,1176},
    {call,
     {2819,5},
     {remote,{2819,5},{atom,{2819,5},lists},{atom,{2819,5},flatten}},
     [{block,0,
       [{call,
         {2819,13},
         {remote,{2819,19},{atom,{2819,13},io_lib},{atom,{2819,20},format}},
         [{var,{2819,27},'F'},
          {block,0,
           [{cons,
             {2819,30},
             {var,{2819,31},'Sz'},
             {cons,
              {2819,34},
              {integer,{2819,34},10},
              {nil,{2819,36}}}}]}]}]}]}]},
  {clause,
   {2820,1},
   [{tuple,
     {2820,14},
     [{atom,{2820,15},nomatch},
      {tuple,
       {2820,23},
       [{atom,{2820,24},bit_syntax_type},
        {var,{2820,40},'Val'},
        {var,{2820,44},'Type'}]}]}],
   [],
   [{debug_line,2821,1177},
    {match,
     {2821,5},
     {var,{2821,5},'F'},
     {string,
      {2821,9},
      "this clause cannot match because '~P' is not of the expected type '~p'"}},
    {debug_line,2823,1178},
    {call,
     {2823,5},
     {remote,{2823,5},{atom,{2823,5},lists},{atom,{2823,5},flatten}},
     [{block,0,
       [{call,
         {2823,13},
         {remote,{2823,19},{atom,{2823,13},io_lib},{atom,{2823,20},format}},
         [{var,{2823,27},'F'},
          {block,0,
           [{cons,
             {2823,30},
             {var,{2823,31},'Val'},
             {cons,
              {2823,35},
              {integer,{2823,35},10},
              {cons,
               {2823,38},
               {var,{2823,38},'Type'},
               {nil,{2823,42}}}}}]}]}]}]}]},
  {clause,
   {2824,1},
   [{tuple,
     {2824,14},
     [{atom,{2824,15},nomatch},
      {tuple,
       {2824,23},
       [{atom,{2824,24},bit_syntax_unicode},{var,{2824,43},'Val'}]}]}],
   [],
   [{debug_line,2825,1179},
    {match,
     {2825,5},
     {var,{2825,5},'F'},
     {string,
      {2825,9},
      "this clause cannot match because the value ~p is not a valid Unicode code point"}},
    {debug_line,2827,1180},
    {call,
     {2827,5},
     {remote,{2827,5},{atom,{2827,5},lists},{atom,{2827,5},flatten}},
     [{block,0,
       [{call,
         {2827,13},
         {remote,{2827,19},{atom,{2827,13},io_lib},{atom,{2827,20},format}},
         [{var,{2827,27},'F'},
          {block,0,
           [{cons,{2827,30},{var,{2827,31},'Val'},{nil,{2827,34}}}]}]}]}]}]},
  {clause,
   {2828,1},
   [{tuple,{2828,14},[{atom,{2828,15},nomatch},{atom,{2828,23},no_clause}]}],
   [],
   [{debug_line,2829,1181},{string,{2829,5},"no clause will ever match"}]},
  {clause,
   {2830,1},
   [{tuple,{2830,14},[{atom,{2830,15},nomatch},{atom,{2830,23},clause_type}]}],
   [],
   [{debug_line,2831,1182},
    {string,
     {2831,5},
     "this clause cannot match because of different types/sizes"}]},
  {clause,
   {2832,1},
   [{tuple,
     {2832,14},
     [{atom,{2832,15},ignored},
      {tuple,
       {2832,23},
       [{atom,{2832,24},no_effect},
        {tuple,
         {2832,34},
         [{atom,{2832,35},erlang},
          {var,{2832,42},'F'},
          {var,{2832,44},'A'}]}]}]}],
   [],
   [{debug_line,2833,1183},
    {match,
     {2833,5},
     {tuple,{2833,5},[{var,{2833,6},'Fmt'},{var,{2833,10},'Args'}]},
     {'case',
      {2833,18},
      {call,
       {2833,23},
       {remote,
        {2833,35},
        {atom,{2833,23},erl_internal},
        {atom,{2833,36},comp_op}},
       [{var,{2833,44},'F'},{var,{2833,47},'A'}]},
      [{clause,
        {2834,8},
        [{atom,{2834,8},true}],
        [],
        [{debug_line,2835,1184},
         {tuple,
          {2835,5},
          [{string,{2835,6},"use of operator ~p has no effect"},
           {cons,{2835,41},{var,{2835,42},'F'},{nil,{2835,43}}}]}]},
       {clause,
        {2836,8},
        [{atom,{2836,8},false}],
        [],
        [{debug_line,2837,1185},
         {'case',
          {2837,5},
          {call,
           {2837,10},
           {remote,
            {2837,22},
            {atom,{2837,10},erl_internal},
            {atom,{2837,23},bif}},
           [{var,{2837,27},'F'},{var,{2837,30},'A'}]},
          [{clause,
            {2838,9},
            [{atom,{2838,9},false}],
            [],
            [{debug_line,2839,1186},
             {tuple,
              {2839,6},
              [{string,{2839,7},"the call to erlang:~p/~p has no effect"},
               {cons,
                {2839,48},
                {var,{2839,49},'F'},
                {cons,{2839,51},{var,{2839,51},'A'},{nil,{2839,52}}}}]}]},
           {clause,
            {2840,9},
            [{atom,{2840,9},true}],
            [],
            [{debug_line,2841,1187},
             {tuple,
              {2841,6},
              [{string,{2841,7},"the call to ~p/~p has no effect"},
               {cons,
                {2841,41},
                {var,{2841,42},'F'},
                {cons,
                 {2841,44},
                 {var,{2841,44},'A'},
                 {nil,{2841,45}}}}]}]}]}]}]}},
    {debug_line,2844,1188},
    {call,
     {2844,5},
     {remote,{2844,5},{atom,{2844,5},lists},{atom,{2844,5},flatten}},
     [{block,0,
       [{call,
         {2844,13},
         {remote,{2844,19},{atom,{2844,13},io_lib},{atom,{2844,20},format}},
         [{var,{2844,27},'Fmt'},{var,{2844,32},'Args'}]}]}]}]},
  {clause,
   {2845,1},
   [{tuple,
     {2845,14},
     [{atom,{2845,15},ignored},
      {tuple,{2845,23},[{atom,{2845,24},result},{var,{2845,31},'Call'}]}]}],
   [],
   [{debug_line,2846,1189},
    {match,
     {2846,5},
     {var,{2846,5},'Fmt'},
     {string,
      {2846,11},
      "the result of ~ts is ignored (suppress the warning by assigning the expression to the _ variable)"}},
    {debug_line,2848,1190},
    {call,
     {2848,5},
     {remote,{2848,5},{atom,{2848,5},lists},{atom,{2848,5},flatten}},
     [{block,0,
       [{call,
         {2848,13},
         {remote,{2848,19},{atom,{2848,13},io_lib},{atom,{2848,20},format}},
         [{var,{2848,27},'Fmt'},
          {block,0,
           [{cons,
             {2848,32},
             {call,
              {2848,33},
              {atom,{2848,33},format_call},
              [{var,{2848,45},'Call'},{atom,{2848,51},true}]},
             {nil,{2848,56}}}]}]}]}]}]},
  {clause,
   {2849,1},
   [{tuple,
     {2849,14},
     [{atom,{2849,15},ignored},{atom,{2849,23},useless_building}]}],
   [],
   [{debug_line,2850,1191},
    {string,{2850,5},"a term is constructed, but never used"}]}]}.
{function,
 {2852,1},
 format_call,2,
 [{clause,
   {2852,1},
   [{var,{2852,1},'_'},{var,{2852,1},'_'}],
   [[{call,
      {2852,1},
      {remote,{2852,1},{atom,{2852,1},fake},{atom,{2852,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2852,1192},{atom,{2852,1},ignore}]},
  {clause,
   {2852,1},
   [{tuple,
     {2852,13},
     [{atom,{2852,14},erlang},
      {atom,{2852,21},make_fun},
      {integer,{2852,30},3}]},
    {var,{2852,34},'_'}],
   [],
   [{debug_line,2853,1193},{string,{2853,5},"fun construction"}]},
  {clause,
   {2854,1},
   [{tuple,
     {2854,13},
     [{var,{2854,14},'Mod'},{var,{2854,19},'Name'},{var,{2854,25},'Arity'}]},
    {var,{2854,33},'UseProgressiveForm'}],
   [],
   [{debug_line,2855,1194},
    {'case',
     {2855,5},
     {call,
      {2855,10},
      {atom,{2855,10},is_operator},
      [{var,{2855,22},'Mod'},{var,{2855,27},'Name'},{var,{2855,33},'Arity'}]},
     [{clause,
       {2856,9},
       [{atom,{2856,9},true}],
       [],
       [{debug_line,2857,1195},
        {match,
         {2857,13},
         {var,{2857,13},'Str'},
         {'case',
          {2857,19},
          {var,{2857,24},'UseProgressiveForm'},
          [{clause,
            {2858,23},
            [{atom,{2858,23},true}],
            [],
            [{debug_line,2858,1196},{string,{2858,31},"evaluating"}]},
           {clause,
            {2859,23},
            [{atom,{2859,23},false}],
            [],
            [{debug_line,2859,1197},{string,{2859,32},"evaluation of"}]}]}},
        {debug_line,2861,1198},
        {cons,
         {2861,13},
         {var,{2861,14},'Str'},
         {cons,
          {2861,19},
          {call,
           {2861,19},
           {remote,{2861,25},{atom,{2861,19},io_lib},{atom,{2861,26},format}},
           [{block,0,[{string,{2861,33}," operator ~p/~p"}]},
            {block,0,
             [{cons,
               {2861,52},
               {var,{2861,53},'Name'},
               {cons,{2861,58},{var,{2861,58},'Arity'},{nil,{2861,63}}}}]}]},
          {nil,{2861,65}}}}]},
      {clause,
       {2862,9},
       [{atom,{2862,9},false}],
       [],
       [{debug_line,2863,1199},
        {match,
         {2863,13},
         {var,{2863,13},'Str'},
         {'case',
          {2863,19},
          {var,{2863,24},'UseProgressiveForm'},
          [{clause,
            {2864,23},
            [{atom,{2864,23},true}],
            [],
            [{debug_line,2864,1200},{string,{2864,31},"calling"}]},
           {clause,
            {2865,23},
            [{atom,{2865,23},false}],
            [],
            [{debug_line,2865,1201},{string,{2865,32},"the call to"}]}]}},
        {debug_line,2867,1202},
        {'case',
         {2867,13},
         {call,
          {2867,18},
          {atom,{2867,18},is_auto_imported},
          [{var,{2867,35},'Mod'},
           {var,{2867,40},'Name'},
           {var,{2867,46},'Arity'}]},
         [{clause,
           {2868,17},
           [{atom,{2868,17},true}],
           [],
           [{debug_line,2869,1203},
            {cons,
             {2869,21},
             {var,{2869,22},'Str'},
             {cons,
              {2869,27},
              {call,
               {2869,27},
               {remote,
                {2869,33},
                {atom,{2869,27},io_lib},
                {atom,{2869,34},format}},
               [{block,0,[{string,{2869,41}," ~p/~p"}]},
                {block,0,
                 [{cons,
                   {2869,51},
                   {var,{2869,52},'Name'},
                   {cons,
                    {2869,57},
                    {var,{2869,57},'Arity'},
                    {nil,{2869,62}}}}]}]},
              {nil,{2869,64}}}}]},
          {clause,
           {2870,17},
           [{atom,{2870,17},false}],
           [],
           [{debug_line,2871,1204},
            {cons,
             {2871,21},
             {var,{2871,22},'Str'},
             {cons,
              {2871,27},
              {call,
               {2871,27},
               {remote,
                {2871,33},
                {atom,{2871,27},io_lib},
                {atom,{2871,34},format}},
               [{block,0,[{string,{2871,41}," ~p:~p/~p"}]},
                {block,0,
                 [{cons,
                   {2871,54},
                   {var,{2871,55},'Mod'},
                   {cons,
                    {2871,59},
                    {var,{2871,59},'Name'},
                    {cons,
                     {2871,64},
                     {var,{2871,64},'Arity'},
                     {nil,{2871,69}}}}}]}]},
              {nil,{2871,71}}}}]}]}]}]}]}]}.
{function,
    {2875,1},
    is_operator,3,
    [{clause,
         {2875,1},
         [{var,{2875,1},'_'},{var,{2875,1},'_'},{var,{2875,1},'_'}],
         [[{call,
               {2875,1},
               {remote,
                   {2875,1},
                   {atom,{2875,1},fake},
                   {atom,{2875,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2875,1205},{atom,{2875,1},ignore}]},
     {clause,
         {2875,1},
         [{atom,{2875,13},erlang},
          {var,{2875,21},'Name'},
          {var,{2875,27},'Arity'}],
         [],
         [{debug_line,2876,1206},
          {'try',
              {2876,5},
              [{debug_line,2877,1207},
               {match,
                   {2877,9},
                   {var,{2877,9},'_'},
                   {call,
                       {2877,13},
                       {remote,
                           {2877,25},
                           {atom,{2877,13},erl_internal},
                           {atom,{2877,26},op_type}},
                       [{var,{2877,34},'Name'},{var,{2877,40},'Arity'}]}},
               {debug_line,2878,1208},
               {atom,{2878,9},true}],
              [],
              [{clause,
                   {2880,9},
                   [{tuple,
                        {2880,9},
                        [{atom,{2880,9},error},
                         {var,{2880,15},'_'},
                         {var,{2880,15},'_'}]}],
                   [],
                   [{debug_line,2881,1209},{atom,{2881,13},false}]}],
              []}]},
     {clause,
         {2883,1},
         [{var,{2883,13},'_'},{var,{2883,16},'_'},{var,{2883,19},'_'}],
         [],
         [{debug_line,2883,1210},{atom,{2883,25},false}]}]}.
{function,{2885,1},
          is_auto_imported,3,
          [{clause,{2885,1},
                   [{var,{2885,1},'_'},{var,{2885,1},'_'},{var,{2885,1},'_'}],
                   [[{call,{2885,1},
                           {remote,{2885,1},
                                   {atom,{2885,1},fake},
                                   {atom,{2885,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2885,1211},{atom,{2885,1},ignore}]},
           {clause,{2885,1},
                   [{atom,{2885,18},erlang},
                    {var,{2885,26},'Name'},
                    {var,{2885,32},'Arity'}],
                   [],
                   [{debug_line,2886,1212},
                    {call,{2886,5},
                          {remote,{2886,17},
                                  {atom,{2886,5},erl_internal},
                                  {atom,{2886,18},bif}},
                          [{var,{2886,22},'Name'},{var,{2886,28},'Arity'}]}]},
           {clause,{2887,1},
                   [{var,{2887,18},'_'},
                    {var,{2887,21},'_'},
                    {var,{2887,24},'_'}],
                   [],
                   [{debug_line,2887,1213},{atom,{2887,30},false}]}]}.
{eof,{2913,1}}.
