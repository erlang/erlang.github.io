{attribute,{1,1},file,{"core_lint.erl",1}}.
{attribute,{43,2},module,core_lint}.
{attribute,{46,2},export,[{module,1},{module,2},{format_error,1}]}.
{attribute,{48,2},import,{lists,[{reverse,1},{all,2},{foldl,3}]}}.
{attribute,{49,2},import,{ordsets,[{add_element,2},{is_element,2},{union,2}]}}.
{attribute,{1,1},file,{"core_parse.hrl",1}}.
{attribute,
    {32,2},
    record,
    {c_alias,
        [{typed_record_field,
             {record_field,{32,19},{atom,{32,19},anno},{nil,{32,24}}},
             {type,{32,30},list,[]}},
         {typed_record_field,
             {record_field,{32,38},{atom,{32,38},var}},
             {remote_type,
                 {32,45},
                 [{atom,{32,45},cerl},{atom,{32,50},cerl},[]]}},
         {typed_record_field,
             {record_field,{33,5},{atom,{33,5},pat}},
             {remote_type,
                 {33,12},
                 [{atom,{33,12},cerl},{atom,{33,17},cerl},[]]}}]}}.
{attribute,
    {35,2},
    record,
    {c_apply,
        [{typed_record_field,
             {record_field,{35,19},{atom,{35,19},anno},{nil,{35,24}}},
             {type,{35,30},list,[]}},
         {typed_record_field,
             {record_field,{35,38},{atom,{35,38},op}},
             {remote_type,
                 {35,44},
                 [{atom,{35,44},cerl},{atom,{35,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{36,5},{atom,{36,5},args}},
             {type,
                 {36,13},
                 list,
                 [{remote_type,
                      {36,14},
                      [{atom,{36,14},cerl},{atom,{36,19},cerl},[]]}]}}]}}.
{attribute,
    {38,2},
    record,
    {c_binary,
        [{typed_record_field,
             {record_field,{38,20},{atom,{38,20},anno},{nil,{38,25}}},
             {type,{38,31},list,[]}},
         {typed_record_field,
             {record_field,{38,39},{atom,{38,39},segments}},
             {type,
                 {38,51},
                 list,
                 [{remote_type,
                      {38,52},
                      [{atom,{38,52},cerl},{atom,{38,57},c_bitstr},[]]}]}}]}}.
{attribute,
    {40,2},
    record,
    {c_bitstr,
        [{typed_record_field,
             {record_field,{40,20},{atom,{40,20},anno},{nil,{40,25}}},
             {type,{40,31},list,[]}},
         {typed_record_field,
             {record_field,{40,39},{atom,{40,39},val}},
             {remote_type,
                 {40,46},
                 [{atom,{40,46},cerl},{atom,{40,51},cerl},[]]}},
         {typed_record_field,
             {record_field,{41,6},{atom,{41,6},size}},
             {remote_type,
                 {41,14},
                 [{atom,{41,14},cerl},{atom,{41,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{42,6},{atom,{42,6},unit}},
             {remote_type,
                 {42,14},
                 [{atom,{42,14},cerl},{atom,{42,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{43,6},{atom,{43,6},type}},
             {remote_type,
                 {43,14},
                 [{atom,{43,14},cerl},{atom,{43,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{44,6},{atom,{44,6},flags}},
             {remote_type,
                 {44,15},
                 [{atom,{44,15},cerl},{atom,{44,20},cerl},[]]}}]}}.
{attribute,
    {46,2},
    record,
    {c_call,
        [{typed_record_field,
             {record_field,{46,18},{atom,{46,18},anno},{nil,{46,23}}},
             {type,{46,29},list,[]}},
         {typed_record_field,
             {record_field,{46,37},{atom,{46,37},module}},
             {remote_type,
                 {46,47},
                 [{atom,{46,47},cerl},{atom,{46,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{47,4},{atom,{47,4},name}},
             {remote_type,
                 {47,12},
                 [{atom,{47,12},cerl},{atom,{47,17},cerl},[]]}},
         {typed_record_field,
             {record_field,{48,4},{atom,{48,4},args}},
             {type,
                 {48,12},
                 list,
                 [{remote_type,
                      {48,13},
                      [{atom,{48,13},cerl},{atom,{48,18},cerl},[]]}]}}]}}.
{attribute,
    {50,2},
    record,
    {c_case,
        [{typed_record_field,
             {record_field,{50,18},{atom,{50,18},anno},{nil,{50,23}}},
             {type,{50,29},list,[]}},
         {typed_record_field,
             {record_field,{50,37},{atom,{50,37},arg}},
             {remote_type,
                 {50,44},
                 [{atom,{50,44},cerl},{atom,{50,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{51,4},{atom,{51,4},clauses}},
             {type,
                 {51,15},
                 list,
                 [{remote_type,
                      {51,16},
                      [{atom,{51,16},cerl},{atom,{51,21},cerl},[]]}]}}]}}.
{attribute,
    {53,2},
    record,
    {c_catch,
        [{typed_record_field,
             {record_field,{53,19},{atom,{53,19},anno},{nil,{53,24}}},
             {type,{53,30},list,[]}},
         {typed_record_field,
             {record_field,{53,38},{atom,{53,38},body}},
             {remote_type,
                 {53,46},
                 [{atom,{53,46},cerl},{atom,{53,51},cerl},[]]}}]}}.
{attribute,
    {55,2},
    record,
    {c_clause,
        [{typed_record_field,
             {record_field,{55,20},{atom,{55,20},anno},{nil,{55,25}}},
             {type,{55,31},list,[]}},
         {typed_record_field,
             {record_field,{55,39},{atom,{55,39},pats}},
             {type,
                 {55,47},
                 list,
                 [{remote_type,
                      {55,48},
                      [{atom,{55,48},cerl},{atom,{55,53},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{56,6},{atom,{56,6},guard}},
             {remote_type,
                 {56,15},
                 [{atom,{56,15},cerl},{atom,{56,20},cerl},[]]}},
         {typed_record_field,
             {record_field,{57,6},{atom,{57,6},body}},
             {type,
                 {57,14},
                 union,
                 [{remote_type,
                      {57,14},
                      [{atom,{57,14},cerl},{atom,{57,19},cerl},[]]},
                  {type,{57,28},any,[]}]}}]}}.
{attribute,
    {59,2},
    record,
    {c_cons,
        [{typed_record_field,
             {record_field,{59,18},{atom,{59,18},anno},{nil,{59,23}}},
             {type,{59,29},list,[]}},
         {typed_record_field,
             {record_field,{59,37},{atom,{59,37},hd}},
             {remote_type,
                 {59,43},
                 [{atom,{59,43},cerl},{atom,{59,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{60,4},{atom,{60,4},tl}},
             {remote_type,
                 {60,10},
                 [{atom,{60,10},cerl},{atom,{60,15},cerl},[]]}}]}}.
{attribute,
    {62,2},
    record,
    {c_fun,
        [{typed_record_field,
             {record_field,{62,17},{atom,{62,17},anno},{nil,{62,22}}},
             {type,{62,28},list,[]}},
         {typed_record_field,
             {record_field,{62,36},{atom,{62,36},vars}},
             {type,
                 {62,44},
                 list,
                 [{remote_type,
                      {62,45},
                      [{atom,{62,45},cerl},{atom,{62,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{63,3},{atom,{63,3},body}},
             {remote_type,
                 {63,11},
                 [{atom,{63,11},cerl},{atom,{63,16},cerl},[]]}}]}}.
{attribute,
    {65,2},
    record,
    {c_let,
        [{typed_record_field,
             {record_field,{65,17},{atom,{65,17},anno},{nil,{65,22}}},
             {type,{65,28},list,[]}},
         {typed_record_field,
             {record_field,{65,36},{atom,{65,36},vars}},
             {type,
                 {65,44},
                 list,
                 [{remote_type,
                      {65,45},
                      [{atom,{65,45},cerl},{atom,{65,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{66,3},{atom,{66,3},arg}},
             {remote_type,
                 {66,10},
                 [{atom,{66,10},cerl},{atom,{66,15},cerl},[]]}},
         {typed_record_field,
             {record_field,{67,3},{atom,{67,3},body}},
             {remote_type,
                 {67,11},
                 [{atom,{67,11},cerl},{atom,{67,16},cerl},[]]}}]}}.
{attribute,
    {69,2},
    record,
    {c_letrec,
        [{typed_record_field,
             {record_field,{69,20},{atom,{69,20},anno},{nil,{69,25}}},
             {type,{69,31},list,[]}},
         {typed_record_field,
             {record_field,{70,20},{atom,{70,20},defs}},
             {type,
                 {70,28},
                 list,
                 [{type,
                      {70,29},
                      tuple,
                      [{remote_type,
                           {70,30},
                           [{atom,{70,30},cerl},{atom,{70,35},cerl},[]]},
                       {remote_type,
                           {70,43},
                           [{atom,{70,43},cerl},{atom,{70,48},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{71,6},{atom,{71,6},body}},
             {remote_type,
                 {71,14},
                 [{atom,{71,14},cerl},{atom,{71,19},cerl},[]]}}]}}.
{attribute,
    {73,2},
    record,
    {c_literal,
        [{typed_record_field,
             {record_field,{73,21},{atom,{73,21},anno},{nil,{73,26}}},
             {type,{73,32},list,[]}},
         {typed_record_field,
             {record_field,{73,40},{atom,{73,40},val}},
             {type,{73,47},any,[]}}]}}.
{attribute,
    {75,2},
    record,
    {c_map,
        [{typed_record_field,
             {record_field,{75,17},{atom,{75,17},anno},{nil,{75,22}}},
             {type,{75,28},list,[]}},
         {typed_record_field,
             {record_field,
                 {76,3},
                 {atom,{76,3},arg},
                 {record,
                     {76,7},
                     c_literal,
                     [{record_field,
                          {76,18},
                          {atom,{76,18},val},
                          {map,{76,22},[]}}]}},
             {type,
                 {76,30},
                 union,
                 [{remote_type,
                      {76,30},
                      [{atom,{76,30},cerl},{atom,{76,35},c_var},[]]},
                  {remote_type,
                      {76,45},
                      [{atom,{76,45},cerl},{atom,{76,50},c_literal},[]]}]}},
         {typed_record_field,
             {record_field,{77,3},{atom,{77,3},es}},
             {type,
                 {77,9},
                 list,
                 [{remote_type,
                      {77,10},
                      [{atom,{77,10},cerl},{atom,{77,15},c_map_pair},[]]}]}},
         {typed_record_field,
             {record_field,{78,3},{atom,{78,3},is_pat},{atom,{78,10},false}},
             {type,{78,19},boolean,[]}}]}}.
{attribute,
    {80,2},
    record,
    {c_map_pair,
        [{typed_record_field,
             {record_field,{80,22},{atom,{80,22},anno},{nil,{80,27}}},
             {type,{80,33},list,[]}},
         {typed_record_field,
             {record_field,{81,15},{atom,{81,15},op}},
             {type,
                 {81,21},
                 union,
                 [{type,
                      {81,21},
                      record,
                      [{atom,{81,22},c_literal},
                       {type,
                           {81,32},
                           field_type,
                           [{atom,{81,32},val},{atom,{81,37},assoc}]}]},
                  {type,
                      {81,48},
                      record,
                      [{atom,{81,49},c_literal},
                       {type,
                           {81,59},
                           field_type,
                           [{atom,{81,59},val},{atom,{81,64},exact}]}]}]}},
         {typed_record_field,
             {record_field,{82,8},{atom,{82,8},key}},
             {type,{82,15},any,[]}},
         {typed_record_field,
             {record_field,{83,8},{atom,{83,8},val}},
             {type,{83,15},any,[]}}]}}.
{attribute,
    {85,2},
    record,
    {c_module,
        [{typed_record_field,
             {record_field,{85,20},{atom,{85,20},anno},{nil,{85,25}}},
             {type,{85,31},list,[]}},
         {typed_record_field,
             {record_field,{85,39},{atom,{85,39},name}},
             {remote_type,
                 {85,47},
                 [{atom,{85,47},cerl},{atom,{85,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{86,6},{atom,{86,6},exports}},
             {type,
                 {86,17},
                 list,
                 [{remote_type,
                      {86,18},
                      [{atom,{86,18},cerl},{atom,{86,23},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{87,6},{atom,{87,6},attrs}},
             {type,
                 {87,15},
                 list,
                 [{type,
                      {87,16},
                      tuple,
                      [{remote_type,
                           {87,17},
                           [{atom,{87,17},cerl},{atom,{87,22},cerl},[]]},
                       {remote_type,
                           {87,30},
                           [{atom,{87,30},cerl},{atom,{87,35},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{88,6},{atom,{88,6},defs}},
             {type,
                 {88,14},
                 list,
                 [{type,
                      {88,15},
                      tuple,
                      [{remote_type,
                           {88,16},
                           [{atom,{88,16},cerl},{atom,{88,21},cerl},[]]},
                       {remote_type,
                           {88,29},
                           [{atom,{88,29},cerl},
                            {atom,{88,34},cerl},
                            []]}]}]}}]}}.
{attribute,
    {90,2},
    record,
    {c_opaque,
        [{typed_record_field,
             {record_field,{90,20},{atom,{90,20},anno},{nil,{90,25}}},
             {type,{90,31},list,[]}},
         {typed_record_field,
             {record_field,{90,39},{atom,{90,39},val}},
             {type,{90,46},any,[]}}]}}.
{attribute,
    {92,2},
    record,
    {c_primop,
        [{typed_record_field,
             {record_field,{92,20},{atom,{92,20},anno},{nil,{92,25}}},
             {type,{92,31},list,[]}},
         {typed_record_field,
             {record_field,{92,39},{atom,{92,39},name}},
             {remote_type,
                 {92,47},
                 [{atom,{92,47},cerl},{atom,{92,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{93,6},{atom,{93,6},args}},
             {type,
                 {93,14},
                 list,
                 [{remote_type,
                      {93,15},
                      [{atom,{93,15},cerl},{atom,{93,20},cerl},[]]}]}}]}}.
{attribute,
    {95,2},
    record,
    {c_receive,
        [{typed_record_field,
             {record_field,{95,21},{atom,{95,21},anno},{nil,{95,26}}},
             {type,{95,32},list,[]}},
         {typed_record_field,
             {record_field,{95,40},{atom,{95,40},clauses}},
             {type,
                 {95,51},
                 list,
                 [{remote_type,
                      {95,52},
                      [{atom,{95,52},cerl},{atom,{95,57},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{96,7},{atom,{96,7},timeout}},
             {remote_type,
                 {96,18},
                 [{atom,{96,18},cerl},{atom,{96,23},cerl},[]]}},
         {typed_record_field,
             {record_field,{97,7},{atom,{97,7},action}},
             {remote_type,
                 {97,17},
                 [{atom,{97,17},cerl},{atom,{97,22},cerl},[]]}}]}}.
{attribute,
    {99,2},
    record,
    {c_seq,
        [{typed_record_field,
             {record_field,{99,17},{atom,{99,17},anno},{nil,{99,22}}},
             {type,{99,28},list,[]}},
         {typed_record_field,
             {record_field,{99,36},{atom,{99,36},arg}},
             {type,
                 {99,43},
                 union,
                 [{remote_type,
                      {99,43},
                      [{atom,{99,43},cerl},{atom,{99,48},cerl},[]]},
                  {type,{99,57},any,[]}]}},
         {typed_record_field,
             {record_field,{100,3},{atom,{100,3},body}},
             {remote_type,
                 {100,11},
                 [{atom,{100,11},cerl},{atom,{100,16},cerl},[]]}}]}}.
{attribute,
    {102,2},
    record,
    {c_try,
        [{typed_record_field,
             {record_field,{102,17},{atom,{102,17},anno},{nil,{102,22}}},
             {type,{102,28},list,[]}},
         {typed_record_field,
             {record_field,{102,36},{atom,{102,36},arg}},
             {remote_type,
                 {102,43},
                 [{atom,{102,43},cerl},{atom,{102,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{103,3},{atom,{103,3},vars}},
             {type,
                 {103,11},
                 list,
                 [{remote_type,
                      {103,12},
                      [{atom,{103,12},cerl},{atom,{103,17},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{104,3},{atom,{104,3},body}},
             {remote_type,
                 {104,11},
                 [{atom,{104,11},cerl},{atom,{104,16},cerl},[]]}},
         {typed_record_field,
             {record_field,{105,3},{atom,{105,3},evars}},
             {type,
                 {105,12},
                 list,
                 [{remote_type,
                      {105,13},
                      [{atom,{105,13},cerl},{atom,{105,18},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{106,3},{atom,{106,3},handler}},
             {remote_type,
                 {106,14},
                 [{atom,{106,14},cerl},{atom,{106,19},cerl},[]]}}]}}.
{attribute,
    {108,2},
    record,
    {c_tuple,
        [{typed_record_field,
             {record_field,{108,19},{atom,{108,19},anno},{nil,{108,24}}},
             {type,{108,30},list,[]}},
         {typed_record_field,
             {record_field,{108,38},{atom,{108,38},es}},
             {type,
                 {108,44},
                 list,
                 [{remote_type,
                      {108,45},
                      [{atom,{108,45},cerl},{atom,{108,50},cerl},[]]}]}}]}}.
{attribute,
    {110,2},
    record,
    {c_values,
        [{typed_record_field,
             {record_field,{110,20},{atom,{110,20},anno},{nil,{110,25}}},
             {type,{110,31},list,[]}},
         {typed_record_field,
             {record_field,{110,39},{atom,{110,39},es}},
             {type,
                 {110,45},
                 list,
                 [{remote_type,
                      {110,46},
                      [{atom,{110,46},cerl},{atom,{110,51},cerl},[]]}]}}]}}.
{attribute,
    {112,2},
    record,
    {c_var,
        [{typed_record_field,
             {record_field,{112,17},{atom,{112,17},anno},{nil,{112,22}}},
             {type,{112,28},list,[]}},
         {typed_record_field,
             {record_field,{112,36},{atom,{112,36},name}},
             {remote_type,
                 {112,44},
                 [{atom,{112,44},cerl},{atom,{112,49},var_name},[]]}}]}}.
{attribute,{52,1},file,{"core_lint.erl",52}}.
{attribute,{56,2},
           type,
           {fa,{type,{56,21},
                     tuple,
                     [{type,{56,22},atom,[]},{type,{56,30},arity,[]}]},
               []}}.
{attribute,
    {58,2},
    type,
    {err_desc,
        {type,
            {58,21},
            union,
            [{atom,{58,21},invalid_attributes},
             {atom,{58,44},invalid_exports},
             {type,
                 {59,21},
                 tuple,
                 [{atom,{59,22},arg_mismatch},{user_type,{59,38},fa,[]}]},
             {type,
                 {60,21},
                 tuple,
                 [{atom,{60,22},illegal_expr},{user_type,{60,38},fa,[]}]},
             {type,
                 {60,46},
                 tuple,
                 [{atom,{60,47},illegal_guard},{user_type,{60,64},fa,[]}]},
             {type,
                 {61,21},
                 tuple,
                 [{atom,{61,22},illegal_try},{user_type,{61,37},fa,[]}]},
             {type,
                 {62,21},
                 tuple,
                 [{atom,{62,22},not_bs_pattern},{user_type,{62,40},fa,[]}]},
             {type,
                 {62,48},
                 tuple,
                 [{atom,{62,49},not_pattern},{user_type,{62,64},fa,[]}]},
             {type,
                 {63,21},
                 tuple,
                 [{atom,{63,22},not_var},{user_type,{63,33},fa,[]}]},
             {type,
                 {63,41},
                 tuple,
                 [{atom,{63,42},pattern_mismatch},{user_type,{63,62},fa,[]}]},
             {type,
                 {64,21},
                 tuple,
                 [{atom,{64,22},return_mismatch},{user_type,{64,41},fa,[]}]},
             {type,
                 {64,49},
                 tuple,
                 [{atom,{64,50},undefined_function},
                  {user_type,{64,72},fa,[]}]},
             {type,
                 {65,21},
                 tuple,
                 [{atom,{65,22},duplicate_var},
                  {remote_type,
                      {65,39},
                      [{atom,{65,39},cerl},{atom,{65,44},var_name},[]]},
                  {user_type,{65,56},fa,[]}]},
             {type,
                 {66,21},
                 tuple,
                 [{atom,{66,22},unbound_var},
                  {remote_type,
                      {66,37},
                      [{atom,{66,37},cerl},{atom,{66,42},var_name},[]]},
                  {user_type,{66,54},fa,[]}]},
             {type,
                 {67,21},
                 tuple,
                 [{atom,{67,22},undefined_function},
                  {user_type,{67,44},fa,[]},
                  {user_type,{67,50},fa,[]}]},
             {type,
                 {68,21},
                 tuple,
                 [{atom,{68,22},tail_segment_not_at_end},
                  {user_type,{68,49},fa,[]}]}]},
        []}}.
{attribute,{70,2},
           type,
           {error,{type,{70,21},
                        tuple,
                        [{atom,{70,22},none},
                         {type,{70,30},module,[]},
                         {user_type,{70,40},err_desc,[]}]},
                  []}}.
{attribute,{71,2},
           type,
           {warning,{type,{71,21},
                          tuple,
                          [{atom,{71,22},none},
                           {type,{71,30},module,[]},
                           {type,{71,40},term,[]}]},
                    []}}.
{attribute,
    {76,2},
    record,
    {lint,
        [{typed_record_field,
             {record_field,{76,16},{atom,{76,16},module}},
             {type,{76,32},module,[]}},
         {typed_record_field,
             {record_field,{77,9},{atom,{77,9},func}},
             {type,
                 {77,25},
                 union,
                 [{user_type,{77,25},fa,[]},{atom,{77,32},undefined}]}},
         {typed_record_field,
             {record_field,{78,9},{atom,{78,9},errors},{nil,{78,19}}},
             {type,{78,25},list,[{user_type,{78,26},error,[]}]}},
         {typed_record_field,
             {record_field,{79,9},{atom,{79,9},warnings},{nil,{79,19}}},
             {type,{79,25},list,[{user_type,{79,26},warning,[]}]}}]}}.
{attribute,{86,2},
           spec,
           {{format_error,1},
            [{type,{86,19},
                   'fun',
                   [{type,{86,19},product,[{user_type,{86,20},err_desc,[]}]},
                    {type,{86,35},
                          list,
                          [{type,{86,36},
                                 union,
                                 [{type,{86,36},char,[]},
                                  {type,{86,45},list,[]}]}]}]}]}}.
{function,
    {88,1},
    format_error,1,
    [{clause,
         {88,1},
         [{var,{88,1},'_'}],
         [[{call,
               {88,1},
               {remote,
                   {88,1},
                   {atom,{88,1},fake},
                   {atom,{88,1},is_beam_bif_info}},
               []}]],
         [{debug_line,88,1},{atom,{88,1},ignore}]},
     {clause,
         {88,1},
         [{atom,{88,14},invalid_attributes}],
         [],
         [{debug_line,88,2},{string,{88,37},"invalid attributes"}]},
     {clause,
         {89,1},
         [{atom,{89,14},invalid_exports}],
         [],
         [{debug_line,89,3},{string,{89,34},"invalid exports"}]},
     {clause,
         {90,1},
         [{tuple,
              {90,14},
              [{atom,{90,15},arg_mismatch},
               {tuple,{90,28},[{var,{90,29},'F'},{var,{90,31},'A'}]}]}],
         [],
         [{debug_line,91,4},
          {call,
              {91,5},
              {remote,{91,11},{atom,{91,5},io_lib},{atom,{91,12},format}},
              [{block,0,[{string,{91,19},"argument count mismatch in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {91,55},
                        {var,{91,56},'F'},
                        {cons,{91,58},{var,{91,58},'A'},{nil,{91,59}}}}]}]}]},
     {clause,
         {92,1},
         [{tuple,
              {92,14},
              [{atom,{92,15},illegal_expr},
               {tuple,{92,28},[{var,{92,29},'F'},{var,{92,31},'A'}]}]}],
         [],
         [{debug_line,93,5},
          {call,
              {93,5},
              {remote,{93,11},{atom,{93,5},io_lib},{atom,{93,12},format}},
              [{block,0,[{string,{93,19},"illegal expression in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {93,50},
                        {var,{93,51},'F'},
                        {cons,{93,53},{var,{93,53},'A'},{nil,{93,54}}}}]}]}]},
     {clause,
         {94,1},
         [{tuple,
              {94,14},
              [{atom,{94,15},illegal_guard},
               {tuple,{94,29},[{var,{94,30},'F'},{var,{94,32},'A'}]}]}],
         [],
         [{debug_line,95,6},
          {call,
              {95,5},
              {remote,{95,11},{atom,{95,5},io_lib},{atom,{95,12},format}},
              [{block,0,
                   [{string,{95,19},"illegal guard expression in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {95,56},
                        {var,{95,57},'F'},
                        {cons,{95,59},{var,{95,59},'A'},{nil,{95,60}}}}]}]}]},
     {clause,
         {96,1},
         [{tuple,
              {96,14},
              [{atom,{96,15},illegal_try},
               {tuple,{96,27},[{var,{96,28},'F'},{var,{96,30},'A'}]}]}],
         [],
         [{debug_line,97,7},
          {call,
              {97,5},
              {remote,{97,11},{atom,{97,5},io_lib},{atom,{97,12},format}},
              [{block,0,[{string,{97,19},"illegal try expression in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {97,54},
                        {var,{97,55},'F'},
                        {cons,{97,57},{var,{97,57},'A'},{nil,{97,58}}}}]}]}]},
     {clause,
         {98,1},
         [{tuple,
              {98,14},
              [{atom,{98,15},not_bs_pattern},
               {tuple,{98,30},[{var,{98,31},'F'},{var,{98,33},'A'}]}]}],
         [],
         [{debug_line,99,8},
          {call,
              {99,5},
              {remote,{99,11},{atom,{99,5},io_lib},{atom,{99,12},format}},
              [{block,0,
                   [{string,{99,19},"expecting bit syntax pattern in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {99,60},
                        {var,{99,61},'F'},
                        {cons,{99,63},{var,{99,63},'A'},{nil,{99,64}}}}]}]}]},
     {clause,
         {100,1},
         [{tuple,
              {100,14},
              [{atom,{100,15},not_pattern},
               {tuple,{100,27},[{var,{100,28},'F'},{var,{100,30},'A'}]}]}],
         [],
         [{debug_line,101,9},
          {call,
              {101,5},
              {remote,{101,11},{atom,{101,5},io_lib},{atom,{101,12},format}},
              [{block,0,[{string,{101,19},"expecting pattern in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {101,49},
                        {var,{101,50},'F'},
                        {cons,
                            {101,52},
                            {var,{101,52},'A'},
                            {nil,{101,53}}}}]}]}]},
     {clause,
         {102,1},
         [{tuple,
              {102,14},
              [{atom,{102,15},not_var},
               {tuple,{102,23},[{var,{102,24},'F'},{var,{102,26},'A'}]}]}],
         [],
         [{debug_line,103,10},
          {call,
              {103,5},
              {remote,{103,11},{atom,{103,5},io_lib},{atom,{103,12},format}},
              [{block,0,[{string,{103,19},"expecting variable in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {103,50},
                        {var,{103,51},'F'},
                        {cons,
                            {103,53},
                            {var,{103,53},'A'},
                            {nil,{103,54}}}}]}]}]},
     {clause,
         {104,1},
         [{tuple,
              {104,14},
              [{atom,{104,15},pattern_mismatch},
               {tuple,{104,32},[{var,{104,33},'F'},{var,{104,35},'A'}]}]}],
         [],
         [{debug_line,105,11},
          {call,
              {105,5},
              {remote,{105,11},{atom,{105,5},io_lib},{atom,{105,12},format}},
              [{block,0,[{string,{105,19},"pattern count mismatch in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {105,54},
                        {var,{105,55},'F'},
                        {cons,
                            {105,57},
                            {var,{105,57},'A'},
                            {nil,{105,58}}}}]}]}]},
     {clause,
         {106,1},
         [{tuple,
              {106,14},
              [{atom,{106,15},return_mismatch},
               {tuple,{106,31},[{var,{106,32},'F'},{var,{106,34},'A'}]}]}],
         [],
         [{debug_line,107,12},
          {call,
              {107,5},
              {remote,{107,11},{atom,{107,5},io_lib},{atom,{107,12},format}},
              [{block,0,[{string,{107,19},"return count mismatch in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {107,53},
                        {var,{107,54},'F'},
                        {cons,
                            {107,56},
                            {var,{107,56},'A'},
                            {nil,{107,57}}}}]}]}]},
     {clause,
         {108,1},
         [{tuple,
              {108,14},
              [{atom,{108,15},undefined_function},
               {tuple,{108,34},[{var,{108,35},'F'},{var,{108,37},'A'}]}]}],
         [],
         [{debug_line,109,13},
          {call,
              {109,5},
              {remote,{109,11},{atom,{109,5},io_lib},{atom,{109,12},format}},
              [{block,0,[{string,{109,19},"function ~w/~w undefined"}]},
               {block,0,
                   [{cons,
                        {109,47},
                        {var,{109,48},'F'},
                        {cons,
                            {109,50},
                            {var,{109,50},'A'},
                            {nil,{109,51}}}}]}]}]},
     {clause,
         {110,1},
         [{tuple,
              {110,14},
              [{atom,{110,15},duplicate_var},
               {var,{110,29},'N'},
               {tuple,{110,31},[{var,{110,32},'F'},{var,{110,34},'A'}]}]}],
         [],
         [{debug_line,111,14},
          {call,
              {111,5},
              {remote,{111,11},{atom,{111,5},io_lib},{atom,{111,12},format}},
              [{block,0,[{string,{111,19},"duplicate variable ~p in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {111,53},
                        {var,{111,54},'N'},
                        {cons,
                            {111,56},
                            {var,{111,56},'F'},
                            {cons,
                                {111,58},
                                {var,{111,58},'A'},
                                {nil,{111,59}}}}}]}]}]},
     {clause,
         {112,1},
         [{tuple,
              {112,14},
              [{atom,{112,15},unbound_var},
               {var,{112,27},'N'},
               {tuple,{112,29},[{var,{112,30},'F'},{var,{112,32},'A'}]}]}],
         [],
         [{debug_line,113,15},
          {call,
              {113,5},
              {remote,{113,11},{atom,{113,5},io_lib},{atom,{113,12},format}},
              [{block,0,[{string,{113,19},"unbound variable ~p in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {113,51},
                        {var,{113,52},'N'},
                        {cons,
                            {113,54},
                            {var,{113,54},'F'},
                            {cons,
                                {113,56},
                                {var,{113,56},'A'},
                                {nil,{113,57}}}}}]}]}]},
     {clause,
         {114,1},
         [{tuple,
              {114,14},
              [{atom,{114,15},undefined_function},
               {tuple,{114,34},[{var,{114,35},'F1'},{var,{114,38},'A1'}]},
               {tuple,{114,42},[{var,{114,43},'F2'},{var,{114,46},'A2'}]}]}],
         [],
         [{debug_line,115,16},
          {call,
              {115,5},
              {remote,{115,11},{atom,{115,5},io_lib},{atom,{115,12},format}},
              [{block,0,
                   [{string,{115,19},"undefined function ~w/~w in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {115,56},
                        {var,{115,57},'F1'},
                        {cons,
                            {115,60},
                            {var,{115,60},'A1'},
                            {cons,
                                {115,63},
                                {var,{115,63},'F2'},
                                {cons,
                                    {115,66},
                                    {var,{115,66},'A2'},
                                    {nil,{115,68}}}}}}]}]}]},
     {clause,
         {116,1},
         [{tuple,
              {116,14},
              [{atom,{116,15},tail_segment_not_at_end},
               {tuple,{116,39},[{var,{116,40},'F'},{var,{116,42},'A'}]}]}],
         [],
         [{debug_line,117,17},
          {call,
              {117,5},
              {remote,{117,11},{atom,{117,5},io_lib},{atom,{117,12},format}},
              [{block,0,
                   [{string,
                        {117,19},
                        "binary tail segment not at end in ~w/~w"}]},
               {block,0,
                   [{cons,
                        {117,62},
                        {var,{117,63},'F'},
                        {cons,
                            {117,65},
                            {var,{117,65},'A'},
                            {nil,{117,66}}}}]}]}]}]}.
{attribute,
    {119,2},
    type,
    {ret,
        {type,
            {119,16},
            union,
            [{type,
                 {119,16},
                 tuple,
                 [{atom,{119,17},ok},
                  {type,
                      {119,23},
                      list,
                      [{type,
                           {119,24},
                           tuple,
                           [{remote_type,
                                {119,25},
                                [{atom,{119,25},file},
                                 {atom,{119,30},filename},
                                 []]},
                            {type,
                                {119,42},
                                list,
                                [{user_type,{119,43},warning,[]}]}]}]}]},
             {type,
                 {120,16},
                 tuple,
                 [{atom,{120,17},error},
                  {type,
                      {120,26},
                      list,
                      [{type,
                           {120,27},
                           tuple,
                           [{remote_type,
                                {120,28},
                                [{atom,{120,28},file},
                                 {atom,{120,33},filename},
                                 []]},
                            {type,
                                {120,45},
                                list,
                                [{user_type,{120,46},error,[]}]}]}]},
                  {type,
                      {121,12},
                      list,
                      [{type,
                           {121,13},
                           tuple,
                           [{remote_type,
                                {121,14},
                                [{atom,{121,14},file},
                                 {atom,{121,19},filename},
                                 []]},
                            {type,
                                {121,31},
                                list,
                                [{user_type,{121,32},warning,[]}]}]}]}]}]},
        []}}.
{attribute,
    {123,2},
    spec,
    {{module,1},
     [{type,
          {123,13},
          'fun',
          [{type,
               {123,13},
               product,
               [{remote_type,
                    {123,14},
                    [{atom,{123,14},cerl},{atom,{123,19},c_module},[]]}]},
           {user_type,{123,34},ret,[]}]}]}}.
{function,{125,1},
          module,1,
          [{clause,{125,1},
                   [{var,{125,1},'_'}],
                   [[{call,{125,1},
                           {remote,{125,1},
                                   {atom,{125,1},fake},
                                   {atom,{125,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,125,18},{atom,{125,1},ignore}]},
           {clause,{125,1},
                   [{var,{125,8},'M'}],
                   [],
                   [{debug_line,125,19},
                    {call,{125,14},
                          {atom,{125,14},module},
                          [{var,{125,21},'M'},{nil,{125,24}}]}]}]}.
{attribute,
    {127,2},
    spec,
    {{module,2},
     [{type,
          {127,13},
          'fun',
          [{type,
               {127,13},
               product,
               [{remote_type,
                    {127,14},
                    [{atom,{127,14},cerl},{atom,{127,19},c_module},[]]},
                {type,
                    {127,31},
                    list,
                    [{remote_type,
                         {127,32},
                         [{atom,{127,32},compile},
                          {atom,{127,40},option},
                          []]}]}]},
           {user_type,{127,54},ret,[]}]}]}}.
{function,
 {129,1},
 module,2,
 [{clause,
   {129,1},
   [{var,{129,1},'_'},{var,{129,1},'_'}],
   [[{call,
      {129,1},
      {remote,{129,1},{atom,{129,1},fake},{atom,{129,1},is_beam_bif_info}},
      []}]],
   [{debug_line,129,20},{atom,{129,1},ignore}]},
  {clause,
   {129,1},
   [{tuple,
     {129,8},
     [{atom,{129,8},c_module},
      {var,{129,8},'_'},
      {var,{129,23},'M'},
      {var,{129,33},'Es'},
      {var,{129,42},'As'},
      {var,{129,50},'Ds'}]},
    {var,{129,55},'_Opts'}],
   [],
   [{debug_line,130,21},
    {match,
     {130,5},
     {var,{130,5},'Defined'},
     {call,{130,15},{atom,{130,15},defined_funcs},[{var,{130,29},'Ds'}]}},
    {debug_line,131,22},
    {match,
     {131,5},
     {var,{131,5},'St0'},
     {tuple,
      {131,11},
      [{atom,{131,11},lint},
       {'case',
        {131,24},
        {var,{131,24},'M'},
        [{clause,
          [{generated,true},{location,{131,24}}],
          [{tuple,
            [{generated,true},{location,{131,24}}],
            [{atom,{131,24},c_literal},
             {var,{131,24},'_'},
             {var,{131,24},rec0}]}],
          [],
          [{var,{131,24},rec0}]},
         {clause,
          [{generated,true},{location,{131,24}}],
          [{var,{131,24},rec0}],
          [],
          [{call,
            [{generated,true},{location,{131,24}}],
            {remote,
             [{generated,true},{location,{131,24}}],
             {atom,[{generated,true},{location,{131,24}}],erlang},
             {atom,[{generated,true},{location,{131,24}}],error}},
            [{tuple,
              [{generated,true},{location,{131,24}}],
              [{atom,[{generated,true},{location,{131,24}}],badrecord},
               {var,{131,24},rec0}]}]}]}]},
       {atom,{131,11},undefined},
       {nil,{131,11}},
       {nil,{131,11}}]}},
    {debug_line,132,23},
    {match,
     {132,5},
     {var,{132,5},'St1'},
     {call,
      {132,11},
      {atom,{132,11},check_exports},
      [{var,{132,25},'Es'},{var,{132,29},'St0'}]}},
    {debug_line,133,24},
    {match,
     {133,5},
     {var,{133,5},'St2'},
     {call,
      {133,11},
      {atom,{133,11},check_attrs},
      [{var,{133,23},'As'},{var,{133,27},'St1'}]}},
    {debug_line,134,25},
    {match,
     {134,5},
     {var,{134,5},'St3'},
     {call,
      {134,11},
      {atom,{134,11},module_defs},
      [{var,{134,23},'Ds'},{var,{134,27},'Defined'},{var,{134,36},'St2'}]}},
    {debug_line,135,26},
    {match,
     {135,5},
     {var,{135,5},'St4'},
     {call,
      {135,11},
      {atom,{135,11},check_state},
      [{var,{135,23},'Es'},{var,{135,27},'Defined'},{var,{135,36},'St3'}]}},
    {debug_line,136,27},
    {call,{136,5},{atom,{136,5},return_status},[{var,{136,19},'St4'}]}]}]}.
{function,
 {140,1},
 defined_funcs,1,
 [{clause,
   {140,1},
   [{var,{140,1},'_'}],
   [[{call,
      {140,1},
      {remote,{140,1},{atom,{140,1},fake},{atom,{140,1},is_beam_bif_info}},
      []}]],
   [{debug_line,140,28},{atom,{140,1},ignore}]},
  {clause,
   {140,1},
   [{var,{140,15},'Fs'}],
   [],
   [{debug_line,141,29},
    {call,
     {141,5},
     {remote,{141,5},{atom,{141,5},lists},{atom,{141,5},foldl}},
     [{block,0,
       [{'fun',
         {141,11},
         {clauses,
          [{clause,
            {141,15},
            [{tuple,
              {141,16},
              [{tuple,
                {141,17},
                [{atom,{141,17},c_var},
                 {var,{141,17},'_'},
                 {match,
                  {141,29},
                  {tuple,{141,29},[{var,{141,30},'_I'},{var,{141,33},'_A'}]},
                  {var,{141,37},'IA'}}]},
               {var,{141,41},'_'}]},
             {var,{141,45},'Def'}],
            [],
            [{debug_line,142,30},
             {call,
              {142,5},
              {remote,
               {142,5},
               {atom,{142,5},ordsets},
               {atom,{142,5},add_element}},
              [{var,{142,17},'IA'},{var,{142,21},'Def'}]}]}]}}]},
      {nil,{143,9}},
      {var,{143,13},'Fs'}]}]}]}.
{function,
 {149,1},
 return_status,1,
 [{clause,
   {149,1},
   [{var,{149,1},'_'}],
   [[{call,
      {149,1},
      {remote,{149,1},{atom,{149,1},fake},{atom,{149,1},is_beam_bif_info}},
      []}]],
   [{debug_line,149,31},{atom,{149,1},ignore}]},
  {clause,
   {149,1},
   [{var,{149,15},'St'}],
   [],
   [{debug_line,150,32},
    {match,
     {150,5},
     {var,{150,5},'Ws'},
     {call,
      {150,10},
      {remote,{150,10},{atom,{150,10},lists},{atom,{150,10},reverse}},
      [{block,0,
        [{'case',
          {150,18},
          {var,{150,18},'St'},
          [{clause,
            [{generated,true},{location,{150,18}}],
            [{tuple,
              [{generated,true},{location,{150,18}}],
              [{atom,{150,18},lint},
               {var,{150,18},'_'},
               {var,{150,18},'_'},
               {var,{150,18},'_'},
               {var,{150,18},rec1}]}],
            [],
            [{var,{150,18},rec1}]},
           {clause,
            [{generated,true},{location,{150,18}}],
            [{var,{150,18},rec1}],
            [],
            [{call,
              [{generated,true},{location,{150,18}}],
              {remote,
               [{generated,true},{location,{150,18}}],
               {atom,[{generated,true},{location,{150,18}}],erlang},
               {atom,[{generated,true},{location,{150,18}}],error}},
              [{tuple,
                [{generated,true},{location,{150,18}}],
                [{atom,[{generated,true},{location,{150,18}}],badrecord},
                 {var,{150,18},rec1}]}]}]}]}]}]}},
    {debug_line,151,33},
    {match,
     {151,5},
     {var,{151,5},'File'},
     {call,
      {151,12},
      {remote,{151,12},{atom,{151,12},erlang},{atom,{151,12},atom_to_list}},
      [{block,0,
        [{'case',
          {151,25},
          {var,{151,25},'St'},
          [{clause,
            [{generated,true},{location,{151,25}}],
            [{tuple,
              [{generated,true},{location,{151,25}}],
              [{atom,{151,25},lint},
               {var,{151,25},rec2},
               {var,{151,25},'_'},
               {var,{151,25},'_'},
               {var,{151,25},'_'}]}],
            [],
            [{var,{151,25},rec2}]},
           {clause,
            [{generated,true},{location,{151,25}}],
            [{var,{151,25},rec2}],
            [],
            [{call,
              [{generated,true},{location,{151,25}}],
              {remote,
               [{generated,true},{location,{151,25}}],
               {atom,[{generated,true},{location,{151,25}}],erlang},
               {atom,[{generated,true},{location,{151,25}}],error}},
              [{tuple,
                [{generated,true},{location,{151,25}}],
                [{atom,[{generated,true},{location,{151,25}}],badrecord},
                 {var,{151,25},rec2}]}]}]}]}]}]}},
    {debug_line,152,34},
    {'case',
     {152,5},
     {call,
      {152,10},
      {remote,{152,10},{atom,{152,10},lists},{atom,{152,10},reverse}},
      [{block,0,
        [{'case',
          {152,18},
          {var,{152,18},'St'},
          [{clause,
            [{generated,true},{location,{152,18}}],
            [{tuple,
              [{generated,true},{location,{152,18}}],
              [{atom,{152,18},lint},
               {var,{152,18},'_'},
               {var,{152,18},'_'},
               {var,{152,18},rec3},
               {var,{152,18},'_'}]}],
            [],
            [{var,{152,18},rec3}]},
           {clause,
            [{generated,true},{location,{152,18}}],
            [{var,{152,18},rec3}],
            [],
            [{call,
              [{generated,true},{location,{152,18}}],
              {remote,
               [{generated,true},{location,{152,18}}],
               {atom,[{generated,true},{location,{152,18}}],erlang},
               {atom,[{generated,true},{location,{152,18}}],error}},
              [{tuple,
                [{generated,true},{location,{152,18}}],
                [{atom,[{generated,true},{location,{152,18}}],badrecord},
                 {var,{152,18},rec3}]}]}]}]}]}]},
     [{clause,
       {153,2},
       [{nil,{153,2}}],
       [],
       [{debug_line,153,35},
        {tuple,
         {153,8},
         [{atom,{153,9},ok},
          {cons,
           {153,12},
           {tuple,{153,13},[{var,{153,14},'File'},{var,{153,19},'Ws'}]},
           {nil,{153,22}}}]}]},
      {clause,
       {154,2},
       [{var,{154,2},'Es'}],
       [],
       [{debug_line,154,36},
        {tuple,
         {154,8},
         [{atom,{154,9},error},
          {cons,
           {154,15},
           {tuple,{154,16},[{var,{154,17},'File'},{var,{154,22},'Es'}]},
           {nil,{154,25}}},
          {cons,
           {154,27},
           {tuple,{154,28},[{var,{154,29},'File'},{var,{154,34},'Ws'}]},
           {nil,{154,37}}}]}]}]}]}]}.
{function,
 {161,1},
 add_error,2,
 [{clause,
   {161,1},
   [{var,{161,1},'_'},{var,{161,1},'_'}],
   [[{call,
      {161,1},
      {remote,{161,1},{atom,{161,1},fake},{atom,{161,1},is_beam_bif_info}},
      []}]],
   [{debug_line,161,37},{atom,{161,1},ignore}]},
  {clause,
   {161,1},
   [{var,{161,11},'E'},{var,{161,14},'St'}],
   [],
   [{debug_line,161,38},
    {block,
     {161,21},
     [{match,
       {161,29},
       {var,{161,29},rec4},
       {cons,
        {161,36},
        {tuple,
         {161,37},
         [{atom,{161,38},none},{atom,{161,44},core_lint},{var,{161,51},'E'}]},
        {'case',
         {161,54},
         {var,{161,54},'St'},
         [{clause,
           [{generated,true},{location,{161,54}}],
           [{tuple,
             [{generated,true},{location,{161,54}}],
             [{atom,{161,54},lint},
              {var,{161,54},'_'},
              {var,{161,54},'_'},
              {var,{161,54},rec6},
              {var,{161,54},'_'}]}],
           [],
           [{var,{161,54},rec6}]},
          {clause,
           [{generated,true},{location,{161,54}}],
           [{var,{161,54},rec6}],
           [],
           [{call,
             [{generated,true},{location,{161,54}}],
             {remote,
              [{generated,true},{location,{161,54}}],
              {atom,[{generated,true},{location,{161,54}}],erlang},
              {atom,[{generated,true},{location,{161,54}}],error}},
             [{tuple,
               [{generated,true},{location,{161,54}}],
               [{atom,[{generated,true},{location,{161,54}}],badrecord},
                {var,{161,54},rec6}]}]}]}]}}},
      {match,{161,21},{var,{161,21},rec5},{var,{161,21},'St'}},
      {'case',
       {161,29},
       {var,{161,21},rec5},
       [{clause,
         {161,29},
         [{tuple,
           {161,29},
           [{atom,{161,29},lint},
            {var,{161,29},'_'},
            {var,{161,29},'_'},
            {var,{161,29},'_'},
            {var,{161,29},'_'}]}],
         [],
         [{call,
           {161,29},
           {remote,{161,29},{atom,{161,29},erlang},{atom,{161,29},setelement}},
           [{integer,{161,29},4},{var,{161,21},rec5},{var,{161,29},rec4}]}]},
        {clause,
         [{generated,true},{location,{161,29}}],
         [{var,[{generated,true},{location,{161,29}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{161,29}}],
           {remote,
            [{generated,true},{location,{161,29}}],
            {atom,[{generated,true},{location,{161,29}}],erlang},
            {atom,[{generated,true},{location,{161,29}}],error}},
           [{tuple,
             [{generated,true},{location,{161,29}}],
             [{atom,[{generated,true},{location,{161,29}}],badrecord},
              {var,{161,21},rec5}]}]}]}]}]}]}]}.
{function,
 {165,1},
 check_exports,2,
 [{clause,
   {165,1},
   [{var,{165,1},'_'},{var,{165,1},'_'}],
   [[{call,
      {165,1},
      {remote,{165,1},{atom,{165,1},fake},{atom,{165,1},is_beam_bif_info}},
      []}]],
   [{debug_line,165,39},{atom,{165,1},ignore}]},
  {clause,
   {165,1},
   [{var,{165,15},'Es'},{var,{165,19},'St'}],
   [],
   [{debug_line,166,40},
    {'case',
     {166,5},
     {call,
      {166,10},
      {remote,{166,10},{atom,{166,10},lists},{atom,{166,10},all}},
      [{block,0,
        [{'fun',
          {166,14},
          {clauses,
           [{clause,
             {166,18},
             [{tuple,
               {166,19},
               [{atom,{166,19},c_var},
                {var,{166,19},'_'},
                {tuple,
                 {166,31},
                 [{var,{166,32},'Name'},{var,{166,37},'Arity'}]}]}],
             [[{call,
                {167,9},
                {remote,{167,9},{atom,{167,9},erlang},{atom,{167,9},is_atom}},
                [{var,{167,17},'Name'}]},
               {call,
                {167,24},
                {remote,
                 {167,24},
                 {atom,{167,24},erlang},
                 {atom,{167,24},is_integer}},
                [{var,{167,35},'Arity'}]}]],
             [{debug_line,167,41},{atom,{167,45},true}]},
            {clause,
             {168,4},
             [{var,{168,5},'_'}],
             [],
             [{debug_line,168,42},{atom,{168,11},false}]}]}}]},
       {var,{169,12},'Es'}]},
     [{clause,
       {170,2},
       [{atom,{170,2},true}],
       [],
       [{debug_line,170,43},{var,{170,10},'St'}]},
      {clause,
       {171,2},
       [{atom,{171,2},false}],
       [],
       [{debug_line,171,44},
        {call,
         {171,11},
         {atom,{171,11},add_error},
         [{atom,{171,21},invalid_exports},{var,{171,38},'St'}]}]}]}]}]}.
{function,
 {174,1},
 check_attrs,2,
 [{clause,
   {174,1},
   [{var,{174,1},'_'},{var,{174,1},'_'}],
   [[{call,
      {174,1},
      {remote,{174,1},{atom,{174,1},fake},{atom,{174,1},is_beam_bif_info}},
      []}]],
   [{debug_line,174,45},{atom,{174,1},ignore}]},
  {clause,
   {174,1},
   [{var,{174,13},'As'},{var,{174,17},'St'}],
   [],
   [{debug_line,175,46},
    {'case',
     {175,5},
     {call,
      {175,10},
      {remote,{175,10},{atom,{175,10},lists},{atom,{175,10},all}},
      [{block,0,
        [{'fun',
          {175,14},
          {clauses,
           [{clause,
             {175,18},
             [{tuple,
               {175,19},
               [{tuple,
                 {175,20},
                 [{atom,{175,20},c_literal},
                  {var,{175,20},'_'},
                  {var,{175,20},'_'}]},
                {tuple,
                 {175,33},
                 [{atom,{175,33},c_literal},
                  {var,{175,33},'_'},
                  {var,{175,33},'_'}]}]}],
             [],
             [{atom,{175,51},true}]},
            {clause,
             {176,4},
             [{var,{176,5},'_'}],
             [],
             [{debug_line,176,47},{atom,{176,11},false}]}]}}]},
       {var,{177,12},'As'}]},
     [{clause,
       {178,2},
       [{atom,{178,2},true}],
       [],
       [{debug_line,178,48},{var,{178,10},'St'}]},
      {clause,
       {179,2},
       [{atom,{179,2},false}],
       [],
       [{debug_line,179,49},
        {call,
         {179,11},
         {atom,{179,11},add_error},
         [{atom,{179,21},invalid_attributes},{var,{179,41},'St'}]}]}]}]}]}.
{function,
 {182,1},
 check_state,3,
 [{clause,
   {182,1},
   [{var,{182,1},'_'},{var,{182,1},'_'},{var,{182,1},'_'}],
   [[{call,
      {182,1},
      {remote,{182,1},{atom,{182,1},fake},{atom,{182,1},is_beam_bif_info}},
      []}]],
   [{debug_line,182,50},{atom,{182,1},ignore}]},
  {clause,
   {182,1},
   [{var,{182,13},'Es'},{var,{182,17},'Defined'},{var,{182,26},'St'}],
   [],
   [{debug_line,183,51},
    {call,
     {183,5},
     {remote,{183,5},{atom,{183,5},lists},{atom,{183,5},foldl}},
     [{block,0,
       [{'fun',
         {183,11},
         {clauses,
          [{clause,
            {183,15},
            [{tuple,
              {183,16},
              [{atom,{183,16},c_var},
               {var,{183,16},'_'},
               {match,
                {183,28},
                {tuple,{183,28},[{var,{183,29},'_N'},{var,{183,32},'_A'}]},
                {var,{183,36},'F'}}]},
             {var,{183,40},'St1'}],
            [],
            [{debug_line,184,52},
             {'case',
              {184,5},
              {call,
               {184,10},
               {remote,
                {184,10},
                {atom,{184,10},ordsets},
                {atom,{184,10},is_element}},
               [{var,{184,21},'F'},{var,{184,24},'Defined'}]},
              [{clause,
                {185,9},
                [{atom,{185,9},true}],
                [],
                [{debug_line,185,53},{var,{185,17},'St1'}]},
               {clause,
                {186,9},
                [{atom,{186,9},false}],
                [],
                [{debug_line,186,54},
                 {call,
                  {186,18},
                  {atom,{186,18},add_error},
                  [{block,0,
                    [{tuple,
                      {186,28},
                      [{atom,{186,29},undefined_function},
                       {var,{186,48},'F'}]}]},
                   {var,{186,52},'St'}]}]}]}]}]}}]},
      {var,{188,9},'St'},
      {var,{188,13},'Es'}]}]}]}.
{function,
 {192,1},
 module_defs,3,
 [{clause,
   {192,1},
   [{var,{192,1},'_'},{var,{192,1},'_'},{var,{192,1},'_'}],
   [[{call,
      {192,1},
      {remote,{192,1},{atom,{192,1},fake},{atom,{192,1},is_beam_bif_info}},
      []}]],
   [{debug_line,192,55},{atom,{192,1},ignore}]},
  {clause,
   {192,1},
   [{var,{192,13},'B'},{var,{192,16},'Def'},{var,{192,21},'St'}],
   [],
   [{debug_line,194,56},
    {call,
     {194,5},
     {remote,{194,5},{atom,{194,5},lists},{atom,{194,5},foldl}},
     [{block,0,
       [{'fun',
         {194,11},
         {clauses,
          [{clause,
            {194,15},
            [{var,{194,16},'Func'},{var,{194,22},'St0'}],
            [],
            [{debug_line,195,57},
             {match,
              {195,5},
              {tuple,
               {195,5},
               [{tuple,
                 {195,6},
                 [{atom,{195,6},c_var},
                  {var,{195,6},'_'},
                  {match,
                   {195,18},
                   {tuple,{195,18},[{var,{195,19},'_F'},{var,{195,22},'_A'}]},
                   {var,{195,26},'FA'}}]},
                {var,{195,30},'_'}]},
              {var,{195,35},'Func'}},
             {debug_line,196,58},
             {match,
              {196,5},
              {var,{196,5},'St1'},
              {block,
               {196,11},
               [{match,{196,11},{var,{196,11},rec7},{var,{196,11},'St0'}},
                {'case',
                 {196,20},
                 {var,{196,11},rec7},
                 [{clause,
                   {196,20},
                   [{tuple,
                     {196,20},
                     [{atom,{196,20},lint},
                      {var,{196,20},'_'},
                      {var,{196,20},'_'},
                      {var,{196,20},'_'},
                      {var,{196,20},'_'}]}],
                   [],
                   [{call,
                     {196,20},
                     {remote,
                      {196,20},
                      {atom,{196,20},erlang},
                      {atom,{196,20},setelement}},
                     [{integer,{196,20},3},
                      {var,{196,11},rec7},
                      {var,{196,25},'FA'}]}]},
                  {clause,
                   [{generated,true},{location,{196,20}}],
                   [{var,[{generated,true},{location,{196,20}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{196,20}}],
                     {remote,
                      [{generated,true},{location,{196,20}}],
                      {atom,[{generated,true},{location,{196,20}}],erlang},
                      {atom,[{generated,true},{location,{196,20}}],error}},
                     [{tuple,
                       [{generated,true},{location,{196,20}}],
                       [{atom,
                         [{generated,true},{location,{196,20}}],
                         badrecord},
                        {var,{196,11},rec7}]}]}]}]}]}},
             {debug_line,197,59},
             {call,
              {197,5},
              {atom,{197,5},function},
              [{var,{197,14},'Func'},
               {var,{197,20},'Def'},
               {var,{197,25},'St1'}]}]}]}}]},
      {var,{198,9},'St'},
      {var,{198,13},'B'}]}]}]}.
{function,
 {202,1},
 functions,4,
 [{clause,
   {202,1},
   [{var,{202,1},'_'},{var,{202,1},'_'},{var,{202,1},'_'},{var,{202,1},'_'}],
   [[{call,
      {202,1},
      {remote,{202,1},{atom,{202,1},fake},{atom,{202,1},is_beam_bif_info}},
      []}]],
   [{debug_line,202,60},{atom,{202,1},ignore}]},
  {clause,
   {202,1},
   [{var,{202,11},'Fs'},
    {var,{202,15},'Def'},
    {var,{202,20},'Rt'},
    {var,{202,24},'St0'}],
   [],
   [{debug_line,203,61},
    {call,
     {203,5},
     {remote,{203,5},{atom,{203,5},lists},{atom,{203,5},foldl}},
     [{block,0,
       [{'fun',
         {203,11},
         {clauses,
          [{clause,
            {203,15},
            [{tuple,
              {203,16},
              [{var,{203,17},'_Name'},
               {tuple,
                {203,23},
                [{atom,{203,23},c_fun},
                 {var,{203,23},'_'},
                 {var,{203,35},'Vs'},
                 {var,{203,43},'B'}]}]},
             {var,{203,48},'Sti0'}],
            [],
            [{debug_line,204,62},
             {match,
              {204,19},
              {tuple,{204,19},[{var,{204,20},'Vvs'},{var,{204,24},'St'}]},
              {call,
               {204,30},
               {atom,{204,30},variable_list},
               [{var,{204,44},'Vs'},{var,{204,48},'Sti0'}]}},
             {debug_line,205,63},
             {call,
              {205,19},
              {atom,{205,19},body},
              [{var,{205,24},'B'},
               {block,0,
                [{call,
                  {205,27},
                  {remote,
                   {205,27},
                   {atom,{205,27},ordsets},
                   {atom,{205,27},union}},
                  [{var,{205,33},'Vvs'},{var,{205,38},'Def'}]}]},
               {var,{205,44},'Rt'},
               {var,{205,48},'St'}]}]},
           {clause,
            {206,15},
            [{var,{206,16},'_'},{var,{206,19},'St'}],
            [],
            [{debug_line,207,64},
             {call,
              {207,19},
              {atom,{207,19},add_error},
              [{block,0,
                [{tuple,
                  {207,29},
                  [{atom,{207,30},illegal_expr},
                   {'case',
                    {207,43},
                    {var,{207,43},'St'},
                    [{clause,
                      [{generated,true},{location,{207,43}}],
                      [{tuple,
                        [{generated,true},{location,{207,43}}],
                        [{atom,{207,43},lint},
                         {var,{207,43},'_'},
                         {var,{207,43},rec8},
                         {var,{207,43},'_'},
                         {var,{207,43},'_'}]}],
                      [],
                      [{var,{207,43},rec8}]},
                     {clause,
                      [{generated,true},{location,{207,43}}],
                      [{var,{207,43},rec8}],
                      [],
                      [{call,
                        [{generated,true},{location,{207,43}}],
                        {remote,
                         [{generated,true},{location,{207,43}}],
                         {atom,[{generated,true},{location,{207,43}}],erlang},
                         {atom,[{generated,true},{location,{207,43}}],error}},
                        [{tuple,
                          [{generated,true},{location,{207,43}}],
                          [{atom,
                            [{generated,true},{location,{207,43}}],
                            badrecord},
                           {var,{207,43},rec8}]}]}]}]}]}]},
               {var,{207,58},'St'}]}]}]}}]},
      {var,{208,16},'St0'},
      {var,{208,21},'Fs'}]}]}]}.
{function,
 {212,1},
 function,3,
 [{clause,
   {212,1},
   [{var,{212,1},'_'},{var,{212,1},'_'},{var,{212,1},'_'}],
   [[{call,
      {212,1},
      {remote,{212,1},{atom,{212,1},fake},{atom,{212,1},is_beam_bif_info}},
      []}]],
   [{debug_line,212,65},{atom,{212,1},ignore}]},
  {clause,
   {212,1},
   [{tuple,
     {212,10},
     [{tuple,
       {212,11},
       [{atom,{212,11},c_var},
        {var,{212,11},'_'},
        {tuple,{212,23},[{var,{212,24},'_'},{var,{212,26},'_'}]}]},
      {var,{212,30},'B'}]},
    {var,{212,34},'Def'},
    {var,{212,39},'St'}],
   [],
   [{debug_line,214,66},
    {'case',
     {214,5},
     {var,{214,10},'B'},
     [{clause,
       {215,2},
       [{tuple,
         {215,2},
         [{atom,{215,2},c_fun},
          {var,{215,2},'_'},
          {var,{215,2},'_'},
          {var,{215,2},'_'}]}],
       [],
       [{debug_line,215,67},
        {call,
         {215,14},
         {atom,{215,14},expr},
         [{var,{215,19},'B'},
          {var,{215,22},'Def'},
          {integer,{215,27},1},
          {var,{215,30},'St'}]}]},
      {clause,
       {216,2},
       [{var,{216,2},'_'}],
       [],
       [{debug_line,216,68},
        {call,
         {216,7},
         {atom,{216,7},add_error},
         [{block,0,
           [{tuple,
             {216,17},
             [{atom,{216,18},illegal_expr},
              {'case',
               {216,31},
               {var,{216,31},'St'},
               [{clause,
                 [{generated,true},{location,{216,31}}],
                 [{tuple,
                   [{generated,true},{location,{216,31}}],
                   [{atom,{216,31},lint},
                    {var,{216,31},'_'},
                    {var,{216,31},rec9},
                    {var,{216,31},'_'},
                    {var,{216,31},'_'}]}],
                 [],
                 [{var,{216,31},rec9}]},
                {clause,
                 [{generated,true},{location,{216,31}}],
                 [{var,{216,31},rec9}],
                 [],
                 [{call,
                   [{generated,true},{location,{216,31}}],
                   {remote,
                    [{generated,true},{location,{216,31}}],
                    {atom,[{generated,true},{location,{216,31}}],erlang},
                    {atom,[{generated,true},{location,{216,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{216,31}}],
                     [{atom,[{generated,true},{location,{216,31}}],badrecord},
                      {var,{216,31},rec9}]}]}]}]}]}]},
          {var,{216,46},'St'}]}]}]}]}]}.
{function,
    {221,1},
    body,4,
    [{clause,
         {221,1},
         [{var,{221,1},'_'},
          {var,{221,1},'_'},
          {var,{221,1},'_'},
          {var,{221,1},'_'}],
         [[{call,
               {221,1},
               {remote,
                   {221,1},
                   {atom,{221,1},fake},
                   {atom,{221,1},is_beam_bif_info}},
               []}]],
         [{debug_line,221,69},{atom,{221,1},ignore}]},
     {clause,
         {221,1},
         [{tuple,
              {221,6},
              [{atom,{221,6},c_values},{var,{221,6},'_'},{var,{221,19},'Es'}]},
          {var,{221,24},'Def'},
          {var,{221,29},'Rt'},
          {var,{221,33},'St'}],
         [],
         [{debug_line,222,70},
          {call,
              {222,5},
              {atom,{222,5},return_match},
              [{var,{222,18},'Rt'},
               {block,0,
                   [{call,
                        {222,22},
                        {remote,
                            {222,22},
                            {atom,{222,22},erlang},
                            {atom,{222,22},length}},
                        [{var,{222,29},'Es'}]}]},
               {block,0,
                   [{call,
                        {222,34},
                        {atom,{222,34},expr_list},
                        [{var,{222,44},'Es'},
                         {var,{222,48},'Def'},
                         {var,{222,53},'St'}]}]}]}]},
     {clause,
         {223,1},
         [{var,{223,6},'E'},
          {var,{223,9},'Def'},
          {var,{223,14},'Rt'},
          {var,{223,18},'St0'}],
         [],
         [{debug_line,224,71},
          {match,
              {224,5},
              {var,{224,5},'St1'},
              {call,
                  {224,11},
                  {atom,{224,11},expr},
                  [{var,{224,16},'E'},
                   {var,{224,19},'Def'},
                   {var,{224,24},'Rt'},
                   {var,{224,28},'St0'}]}},
          {debug_line,225,72},
          {'case',
              {225,5},
              {call,
                  {225,10},
                  {atom,{225,10},is_simple_top},
                  [{var,{225,24},'E'}]},
              [{clause,
                   {226,2},
                   [{atom,{226,2},true}],
                   [],
                   [{debug_line,226,73},
                    {call,
                        {226,10},
                        {atom,{226,10},return_match},
                        [{var,{226,23},'Rt'},
                         {integer,{226,27},1},
                         {var,{226,30},'St1'}]}]},
               {clause,
                   {227,2},
                   [{atom,{227,2},false}],
                   [],
                   [{debug_line,227,74},{var,{227,11},'St1'}]}]}]}]}.
{function,{233,1},
          guard,3,
          [{clause,{233,1},
                   [{var,{233,1},'_'},{var,{233,1},'_'},{var,{233,1},'_'}],
                   [[{call,{233,1},
                           {remote,{233,1},
                                   {atom,{233,1},fake},
                                   {atom,{233,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,233,75},{atom,{233,1},ignore}]},
           {clause,{233,1},
                   [{var,{233,7},'Expr'},
                    {var,{233,13},'Def'},
                    {var,{233,18},'St'}],
                   [],
                   [{debug_line,233,76},
                    {call,{233,25},
                          {atom,{233,25},gexpr},
                          [{var,{233,31},'Expr'},
                           {var,{233,37},'Def'},
                           {integer,{233,42},1},
                           {var,{233,45},'St'}]}]}]}.
{function,
    {242,1},
    gbody,4,
    [{clause,
         {242,1},
         [{var,{242,1},'_'},
          {var,{242,1},'_'},
          {var,{242,1},'_'},
          {var,{242,1},'_'}],
         [[{call,
               {242,1},
               {remote,
                   {242,1},
                   {atom,{242,1},fake},
                   {atom,{242,1},is_beam_bif_info}},
               []}]],
         [{debug_line,242,77},{atom,{242,1},ignore}]},
     {clause,
         {242,1},
         [{tuple,
              {242,7},
              [{atom,{242,7},c_values},{var,{242,7},'_'},{var,{242,20},'Es'}]},
          {var,{242,25},'Def'},
          {var,{242,30},'Rt'},
          {var,{242,34},'St'}],
         [],
         [{debug_line,243,78},
          {call,
              {243,5},
              {atom,{243,5},return_match},
              [{var,{243,18},'Rt'},
               {block,0,
                   [{call,
                        {243,22},
                        {remote,
                            {243,22},
                            {atom,{243,22},erlang},
                            {atom,{243,22},length}},
                        [{var,{243,29},'Es'}]}]},
               {block,0,
                   [{call,
                        {243,34},
                        {atom,{243,34},gexpr_list},
                        [{var,{243,45},'Es'},
                         {var,{243,49},'Def'},
                         {var,{243,54},'St'}]}]}]}]},
     {clause,
         {244,1},
         [{var,{244,7},'E'},
          {var,{244,10},'Def'},
          {var,{244,15},'Rt'},
          {var,{244,19},'St0'}],
         [],
         [{debug_line,245,79},
          {match,
              {245,5},
              {var,{245,5},'St1'},
              {call,
                  {245,11},
                  {atom,{245,11},gexpr},
                  [{var,{245,17},'E'},
                   {var,{245,20},'Def'},
                   {var,{245,25},'Rt'},
                   {var,{245,29},'St0'}]}},
          {debug_line,246,80},
          {'case',
              {246,5},
              {call,
                  {246,10},
                  {atom,{246,10},is_simple_top},
                  [{var,{246,24},'E'}]},
              [{clause,
                   {247,2},
                   [{atom,{247,2},true}],
                   [],
                   [{debug_line,247,81},
                    {call,
                        {247,10},
                        {atom,{247,10},return_match},
                        [{var,{247,23},'Rt'},
                         {integer,{247,27},1},
                         {var,{247,30},'St1'}]}]},
               {clause,
                   {248,2},
                   [{atom,{248,2},false}],
                   [],
                   [{debug_line,248,82},{var,{248,11},'St1'}]}]}]}]}.
{function,
 {251,1},
 gexpr,4,
 [{clause,
   {251,1},
   [{var,{251,1},'_'},{var,{251,1},'_'},{var,{251,1},'_'},{var,{251,1},'_'}],
   [[{call,
      {251,1},
      {remote,{251,1},{atom,{251,1},fake},{atom,{251,1},is_beam_bif_info}},
      []}]],
   [{debug_line,251,83},{atom,{251,1},ignore}]},
  {clause,
   {251,1},
   [{tuple,
     {251,7},
     [{atom,{251,7},c_var},{var,{251,7},'_'},{var,{251,19},'N'}]},
    {var,{251,23},'Def'},
    {var,{251,28},'Rt'},
    {var,{251,32},'St'}],
   [[{call,
      {251,41},
      {remote,{251,41},{atom,{251,41},erlang},{atom,{251,41},is_atom}},
      [{var,{251,49},'N'}]}],
    [{call,
      {251,53},
      {remote,{251,53},{atom,{251,53},erlang},{atom,{251,53},is_integer}},
      [{var,{251,64},'N'}]}]],
   [{debug_line,252,84},
    {call,
     {252,5},
     {atom,{252,5},return_match},
     [{var,{252,18},'Rt'},
      {integer,{252,22},1},
      {block,0,
       [{call,
         {252,25},
         {atom,{252,25},expr_var},
         [{var,{252,34},'N'},{var,{252,37},'Def'},{var,{252,42},'St'}]}]}]}]},
  {clause,
   {253,1},
   [{tuple,
     {253,7},
     [{atom,{253,7},c_literal},{var,{253,7},'_'},{var,{253,7},'_'}]},
    {var,{253,21},'_Def'},
    {var,{253,27},'Rt'},
    {var,{253,31},'St'}],
   [],
   [{debug_line,254,85},
    {call,
     {254,5},
     {atom,{254,5},return_match},
     [{var,{254,18},'Rt'},{integer,{254,22},1},{var,{254,25},'St'}]}]},
  {clause,
   {255,1},
   [{tuple,
     {255,7},
     [{atom,{255,7},c_cons},
      {var,{255,7},'_'},
      {var,{255,18},'H'},
      {var,{255,23},'T'}]},
    {var,{255,27},'Def'},
    {var,{255,32},'Rt'},
    {var,{255,36},'St'}],
   [],
   [{debug_line,256,86},
    {call,
     {256,5},
     {atom,{256,5},return_match},
     [{var,{256,18},'Rt'},
      {integer,{256,22},1},
      {block,0,
       [{call,
         {256,25},
         {atom,{256,25},gexpr_list},
         [{block,0,
           [{cons,
             {256,36},
             {var,{256,37},'H'},
             {cons,{256,39},{var,{256,39},'T'},{nil,{256,40}}}}]},
          {var,{256,43},'Def'},
          {var,{256,48},'St'}]}]}]}]},
  {clause,
   {257,1},
   [{tuple,
     {257,7},
     [{atom,{257,7},c_tuple},{var,{257,7},'_'},{var,{257,19},'Es'}]},
    {var,{257,24},'Def'},
    {var,{257,29},'Rt'},
    {var,{257,33},'St'}],
   [],
   [{debug_line,258,87},
    {call,
     {258,5},
     {atom,{258,5},return_match},
     [{var,{258,18},'Rt'},
      {integer,{258,22},1},
      {block,0,
       [{call,
         {258,25},
         {atom,{258,25},gexpr_list},
         [{var,{258,36},'Es'},{var,{258,40},'Def'},{var,{258,45},'St'}]}]}]}]},
  {clause,
   {259,1},
   [{tuple,
     {259,7},
     [{atom,{259,7},c_map},
      {var,{259,7},'_'},
      {var,{259,7},'_'},
      {var,{259,17},'Es'},
      {var,{259,7},'_'}]},
    {var,{259,22},'Def'},
    {var,{259,27},'Rt'},
    {var,{259,31},'St'}],
   [],
   [{debug_line,260,88},
    {call,
     {260,5},
     {atom,{260,5},return_match},
     [{var,{260,18},'Rt'},
      {integer,{260,22},1},
      {block,0,
       [{call,
         {260,25},
         {atom,{260,25},gexpr_list},
         [{var,{260,36},'Es'},{var,{260,40},'Def'},{var,{260,45},'St'}]}]}]}]},
  {clause,
   {261,1},
   [{tuple,
     {261,7},
     [{atom,{261,7},c_map_pair},
      {var,{261,7},'_'},
      {var,{261,7},'_'},
      {var,{261,23},'K'},
      {var,{261,29},'V'}]},
    {var,{261,33},'Def'},
    {var,{261,38},'Rt'},
    {var,{261,42},'St'}],
   [],
   [{debug_line,262,89},
    {call,
     {262,5},
     {atom,{262,5},return_match},
     [{var,{262,18},'Rt'},
      {integer,{262,22},1},
      {block,0,
       [{call,
         {262,25},
         {atom,{262,25},gexpr_list},
         [{block,0,
           [{cons,
             {262,36},
             {var,{262,37},'K'},
             {cons,{262,39},{var,{262,39},'V'},{nil,{262,40}}}}]},
          {var,{262,43},'Def'},
          {var,{262,48},'St'}]}]}]}]},
  {clause,
   {263,1},
   [{tuple,
     {263,7},
     [{atom,{263,7},c_binary},{var,{263,7},'_'},{var,{263,26},'Ss'}]},
    {var,{263,31},'Def'},
    {var,{263,36},'Rt'},
    {var,{263,40},'St'}],
   [],
   [{debug_line,264,90},
    {call,
     {264,5},
     {atom,{264,5},return_match},
     [{var,{264,18},'Rt'},
      {integer,{264,22},1},
      {block,0,
       [{call,
         {264,25},
         {atom,{264,25},gbitstr_list},
         [{var,{264,38},'Ss'},{var,{264,42},'Def'},{var,{264,47},'St'}]}]}]}]},
  {clause,
   {265,1},
   [{tuple,
     {265,7},
     [{atom,{265,7},c_seq},
      {var,{265,7},'_'},
      {var,{265,18},'Arg'},
      {var,{265,27},'B'}]},
    {var,{265,31},'Def'},
    {var,{265,36},'Rt'},
    {var,{265,40},'St0'}],
   [],
   [{debug_line,266,91},
    {match,
     {266,5},
     {var,{266,5},'St1'},
     {call,
      {266,11},
      {atom,{266,11},gexpr},
      [{var,{266,17},'Arg'},
       {var,{266,22},'Def'},
       {integer,{266,27},1},
       {var,{266,30},'St0'}]}},
    {debug_line,267,92},
    {call,
     {267,5},
     {atom,{267,5},return_match},
     [{var,{267,18},'Rt'},
      {integer,{267,22},1},
      {block,0,
       [{call,
         {267,25},
         {atom,{267,25},gbody},
         [{var,{267,31},'B'},
          {var,{267,34},'Def'},
          {var,{267,39},'Rt'},
          {var,{267,43},'St1'}]}]}]}]},
  {clause,
   {268,1},
   [{tuple,
     {268,7},
     [{atom,{268,7},c_let},
      {var,{268,7},'_'},
      {var,{268,19},'Vs'},
      {var,{268,26},'Arg'},
      {var,{268,35},'B'}]},
    {var,{268,39},'Def'},
    {var,{268,44},'Rt'},
    {var,{268,48},'St0'}],
   [],
   [{debug_line,269,93},
    {match,
     {269,5},
     {var,{269,5},'St1'},
     {call,
      {269,11},
      {atom,{269,11},gbody},
      [{var,{269,17},'Arg'},
       {var,{269,22},'Def'},
       {block,0,
        [{call,{269,27},{atom,{269,27},let_varcount},[{var,{269,40},'Vs'}]}]},
       {var,{269,45},'St0'}]}},
    {debug_line,270,94},
    {match,
     {270,5},
     {tuple,{270,5},[{var,{270,6},'Lvs'},{var,{270,10},'St2'}]},
     {call,
      {270,17},
      {atom,{270,17},variable_list},
      [{var,{270,31},'Vs'},{var,{270,35},'St1'}]}},
    {debug_line,271,95},
    {call,
     {271,5},
     {atom,{271,5},gbody},
     [{var,{271,11},'B'},
      {block,0,
       [{call,
         {271,14},
         {remote,{271,14},{atom,{271,14},ordsets},{atom,{271,14},union}},
         [{var,{271,20},'Lvs'},{var,{271,25},'Def'}]}]},
      {var,{271,31},'Rt'},
      {var,{271,35},'St2'}]}]},
  {clause,
   {272,1},
   [{tuple,
     {272,7},
     [{atom,{272,7},c_call},
      {var,{272,7},'_'},
      {tuple,
       {272,22},
       [{atom,{272,22},c_literal},{var,{272,22},'_'},{atom,{272,37},erlang}]},
      {tuple,
       {272,50},
       [{atom,{272,50},c_literal},
        {var,{272,50},'_'},
        {atom,{272,65},is_record}]},
      {cons,
       {273,20},
       {var,{273,21},'Arg'},
       {cons,
        {273,25},
        {tuple,
         {273,25},
         [{atom,{273,25},c_literal},{var,{273,25},'_'},{var,{273,40},'Tag'}]},
        {cons,
         {273,45},
         {tuple,
          {273,45},
          [{atom,{273,45},c_literal},
           {var,{273,45},'_'},
           {var,{273,60},'Size'}]},
         {nil,{273,65}}}}}]},
    {var,{274,7},'Def'},
    {var,{274,12},'Rt'},
    {var,{274,16},'St'}],
   [[{call,
      {274,25},
      {remote,{274,25},{atom,{274,25},erlang},{atom,{274,25},is_atom}},
      [{var,{274,33},'Tag'}]},
     {call,
      {274,39},
      {remote,{274,39},{atom,{274,39},erlang},{atom,{274,39},is_integer}},
      [{var,{274,50},'Size'}]}]],
   [{debug_line,275,96},
    {call,
     {275,5},
     {atom,{275,5},return_match},
     [{var,{275,18},'Rt'},
      {integer,{275,22},1},
      {block,0,
       [{call,
         {275,25},
         {atom,{275,25},gexpr},
         [{var,{275,31},'Arg'},
          {var,{275,36},'Def'},
          {integer,{275,41},1},
          {var,{275,44},'St'}]}]}]}]},
  {clause,
   {276,1},
   [{tuple,
     {276,7},
     [{atom,{276,7},c_call},
      {var,{276,7},'_'},
      {tuple,
       {276,22},
       [{atom,{276,22},c_literal},{var,{276,22},'_'},{atom,{276,37},erlang}]},
      {tuple,
       {276,50},
       [{atom,{276,50},c_literal},
        {var,{276,50},'_'},
        {atom,{276,65},is_record}]},
      {var,{276,7},'_'}]},
    {var,{277,7},'_Def'},
    {var,{277,13},'Rt'},
    {var,{277,17},'St'}],
   [],
   [{debug_line,278,97},
    {call,
     {278,5},
     {atom,{278,5},return_match},
     [{var,{278,18},'Rt'},
      {integer,{278,22},1},
      {block,0,
       [{call,
         {278,25},
         {atom,{278,25},add_error},
         [{block,0,
           [{tuple,
             {278,35},
             [{atom,{278,36},illegal_guard},
              {'case',
               {278,50},
               {var,{278,50},'St'},
               [{clause,
                 [{generated,true},{location,{278,50}}],
                 [{tuple,
                   [{generated,true},{location,{278,50}}],
                   [{atom,{278,50},lint},
                    {var,{278,50},'_'},
                    {var,{278,50},rec10},
                    {var,{278,50},'_'},
                    {var,{278,50},'_'}]}],
                 [],
                 [{var,{278,50},rec10}]},
                {clause,
                 [{generated,true},{location,{278,50}}],
                 [{var,{278,50},rec10}],
                 [],
                 [{call,
                   [{generated,true},{location,{278,50}}],
                   {remote,
                    [{generated,true},{location,{278,50}}],
                    {atom,[{generated,true},{location,{278,50}}],erlang},
                    {atom,[{generated,true},{location,{278,50}}],error}},
                   [{tuple,
                     [{generated,true},{location,{278,50}}],
                     [{atom,[{generated,true},{location,{278,50}}],badrecord},
                      {var,{278,50},rec10}]}]}]}]}]}]},
          {var,{278,65},'St'}]}]}]}]},
  {clause,
   {279,1},
   [{tuple,
     {279,7},
     [{atom,{279,7},c_call},
      {var,{279,7},'_'},
      {tuple,
       {279,22},
       [{atom,{279,22},c_literal},{var,{279,22},'_'},{atom,{279,37},erlang}]},
      {tuple,
       {279,50},
       [{atom,{279,50},c_literal},{var,{279,50},'_'},{var,{279,65},'Name'}]},
      {var,{279,76},'As'}]},
    {var,{280,7},'Def'},
    {var,{280,12},'Rt'},
    {var,{280,16},'St0'}],
   [[{call,
      {280,26},
      {remote,{280,26},{atom,{280,26},erlang},{atom,{280,26},is_atom}},
      [{var,{280,34},'Name'}]}]],
   [{debug_line,281,98},
    {match,
     {281,5},
     {var,{281,5},'St1'},
     {call,
      {281,11},
      {atom,{281,11},return_match},
      [{var,{281,24},'Rt'},{integer,{281,28},1},{var,{281,31},'St0'}]}},
    {debug_line,282,99},
    {match,
     {282,5},
     {var,{282,5},'Arity'},
     {call,
      {282,13},
      {remote,{282,13},{atom,{282,13},erlang},{atom,{282,13},length}},
      [{var,{282,20},'As'}]}},
    {debug_line,283,100},
    {'case',
     {283,5},
     {call,
      {283,10},
      {atom,{283,10},is_guard_bif},
      [{var,{283,23},'Name'},{var,{283,29},'Arity'}]},
     [{clause,
       {284,9},
       [{atom,{284,9},true}],
       [],
       [{debug_line,285,101},
        {call,
         {285,13},
         {atom,{285,13},gexpr_list},
         [{var,{285,24},'As'},{var,{285,28},'Def'},{var,{285,33},'St1'}]}]},
      {clause,
       {286,9},
       [{atom,{286,9},false}],
       [],
       [{debug_line,287,102},
        {'case',
         {287,13},
         {tuple,{287,18},[{var,{287,19},'Name'},{var,{287,24},'Arity'}]},
         [{clause,
           {288,17},
           [{tuple,{288,17},[{atom,{288,18},error},{integer,{288,24},1}]}],
           [],
           [{debug_line,289,103},
            {call,
             {289,21},
             {atom,{289,21},gexpr_list},
             [{var,{289,32},'As'},
              {var,{289,36},'Def'},
              {var,{289,41},'St1'}]}]},
          {clause,
           {290,17},
           [{var,{290,17},'_'}],
           [],
           [{debug_line,291,104},
            {call,
             {291,21},
             {atom,{291,21},add_error},
             [{block,0,
               [{tuple,
                 {291,31},
                 [{atom,{291,32},illegal_guard},
                  {'case',
                   {291,46},
                   {var,{291,46},'St1'},
                   [{clause,
                     [{generated,true},{location,{291,46}}],
                     [{tuple,
                       [{generated,true},{location,{291,46}}],
                       [{atom,{291,46},lint},
                        {var,{291,46},'_'},
                        {var,{291,46},rec11},
                        {var,{291,46},'_'},
                        {var,{291,46},'_'}]}],
                     [],
                     [{var,{291,46},rec11}]},
                    {clause,
                     [{generated,true},{location,{291,46}}],
                     [{var,{291,46},rec11}],
                     [],
                     [{call,
                       [{generated,true},{location,{291,46}}],
                       {remote,
                        [{generated,true},{location,{291,46}}],
                        {atom,[{generated,true},{location,{291,46}}],erlang},
                        {atom,[{generated,true},{location,{291,46}}],error}},
                       [{tuple,
                         [{generated,true},{location,{291,46}}],
                         [{atom,
                           [{generated,true},{location,{291,46}}],
                           badrecord},
                          {var,{291,46},rec11}]}]}]}]}]}]},
              {var,{291,62},'St1'}]}]}]}]}]}]},
  {clause,
   {294,1},
   [{tuple,
     {294,7},
     [{atom,{294,7},c_primop},
      {var,{294,7},'_'},
      {tuple,
       {294,22},
       [{atom,{294,22},c_literal},{var,{294,22},'_'},{var,{294,37},'A'}]},
      {var,{294,45},'As'}]},
    {var,{294,50},'Def'},
    {var,{294,55},'_Rt'},
    {var,{294,60},'St0'}],
   [[{call,
      {294,70},
      {remote,{294,70},{atom,{294,70},erlang},{atom,{294,70},is_atom}},
      [{var,{294,78},'A'}]}]],
   [{debug_line,295,105},
    {call,
     {295,5},
     {atom,{295,5},gexpr_list},
     [{var,{295,16},'As'},{var,{295,20},'Def'},{var,{295,25},'St0'}]}]},
  {clause,
   {296,1},
   [{tuple,
     {296,7},
     [{atom,{296,7},c_try},
      {var,{296,7},'_'},
      {var,{296,18},'E'},
      {cons,
       {296,25},
       {tuple,
        {296,26},
        [{atom,{296,26},c_var},{var,{296,26},'_'},{var,{296,38},'X'}]},
       {nil,{296,40}}},
      {tuple,
       {296,47},
       [{atom,{296,47},c_var},{var,{296,47},'_'},{var,{296,59},'X'}]},
      {cons,
       {297,13},
       {tuple,
        {297,14},
        [{atom,{297,14},c_var},{var,{297,14},'_'},{var,{297,14},'_'}]},
       {cons,
        {297,23},
        {tuple,
         {297,23},
         [{atom,{297,23},c_var},{var,{297,23},'_'},{var,{297,23},'_'}]},
        {nil,{297,31}}}},
      {tuple,
       {297,41},
       [{atom,{297,41},c_literal},{var,{297,41},'_'},{atom,{297,56},false}]}]},
    {var,{298,7},'Def'},
    {var,{298,12},'Rt'},
    {var,{298,16},'St'}],
   [],
   [{debug_line,299,106},
    {call,
     {299,5},
     {atom,{299,5},gbody},
     [{var,{299,11},'E'},
      {var,{299,14},'Def'},
      {var,{299,19},'Rt'},
      {var,{299,23},'St'}]}]},
  {clause,
   {300,1},
   [{tuple,
     {300,7},
     [{atom,{300,7},c_case},
      {var,{300,7},'_'},
      {var,{300,19},'Arg'},
      {var,{300,31},'Cs'}]},
    {var,{300,36},'Def'},
    {var,{300,41},'Rt'},
    {var,{300,45},'St0'}],
   [],
   [{debug_line,301,107},
    {match,
     {301,5},
     {var,{301,5},'PatCount'},
     {call,{301,16},{atom,{301,16},case_patcount},[{var,{301,30},'Cs'}]}},
    {debug_line,302,108},
    {match,
     {302,5},
     {var,{302,5},'St1'},
     {call,
      {302,11},
      {atom,{302,11},gbody},
      [{var,{302,17},'Arg'},
       {var,{302,22},'Def'},
       {var,{302,27},'PatCount'},
       {var,{302,37},'St0'}]}},
    {debug_line,303,109},
    {call,
     {303,5},
     {atom,{303,5},clauses},
     [{var,{303,13},'Cs'},
      {var,{303,17},'Def'},
      {var,{303,22},'PatCount'},
      {var,{303,32},'Rt'},
      {var,{303,36},'St1'}]}]},
  {clause,
   {304,1},
   [{var,{304,7},'_Core'},
    {var,{304,14},'_'},
    {var,{304,17},'_'},
    {var,{304,20},'St'}],
   [],
   [{debug_line,306,110},
    {call,
     {306,5},
     {atom,{306,5},add_error},
     [{block,0,
       [{tuple,
         {306,15},
         [{atom,{306,16},illegal_guard},
          {'case',
           {306,30},
           {var,{306,30},'St'},
           [{clause,
             [{generated,true},{location,{306,30}}],
             [{tuple,
               [{generated,true},{location,{306,30}}],
               [{atom,{306,30},lint},
                {var,{306,30},'_'},
                {var,{306,30},rec12},
                {var,{306,30},'_'},
                {var,{306,30},'_'}]}],
             [],
             [{var,{306,30},rec12}]},
            {clause,
             [{generated,true},{location,{306,30}}],
             [{var,{306,30},rec12}],
             [],
             [{call,
               [{generated,true},{location,{306,30}}],
               {remote,
                [{generated,true},{location,{306,30}}],
                {atom,[{generated,true},{location,{306,30}}],erlang},
                {atom,[{generated,true},{location,{306,30}}],error}},
               [{tuple,
                 [{generated,true},{location,{306,30}}],
                 [{atom,[{generated,true},{location,{306,30}}],badrecord},
                  {var,{306,30},rec12}]}]}]}]}]}]},
      {var,{306,45},'St'}]}]}]}.
{function,
    {310,1},
    gexpr_list,3,
    [{clause,
         {310,1},
         [{var,{310,1},'_'},{var,{310,1},'_'},{var,{310,1},'_'}],
         [[{call,
               {310,1},
               {remote,
                   {310,1},
                   {atom,{310,1},fake},
                   {atom,{310,1},is_beam_bif_info}},
               []}]],
         [{debug_line,310,111},{atom,{310,1},ignore}]},
     {clause,
         {310,1},
         [{var,{310,12},'Es'},{var,{310,16},'Def'},{var,{310,21},'St0'}],
         [],
         [{debug_line,311,112},
          {call,
              {311,5},
              {remote,{311,5},{atom,{311,5},lists},{atom,{311,5},foldl}},
              [{block,0,
                   [{'fun',
                        {311,11},
                        {clauses,
                            [{clause,
                                 {311,15},
                                 [{var,{311,16},'E'},{var,{311,19},'St'}],
                                 [],
                                 [{call,
                                      {311,26},
                                      {atom,{311,26},gexpr},
                                      [{var,{311,32},'E'},
                                       {var,{311,35},'Def'},
                                       {integer,{311,40},1},
                                       {var,{311,43},'St'}]}]}]}}]},
               {var,{311,52},'St0'},
               {var,{311,57},'Es'}]}]}]}.
{function,
    {315,1},
    gbitstr_list,3,
    [{clause,
         {315,1},
         [{var,{315,1},'_'},{var,{315,1},'_'},{var,{315,1},'_'}],
         [[{call,
               {315,1},
               {remote,
                   {315,1},
                   {atom,{315,1},fake},
                   {atom,{315,1},is_beam_bif_info}},
               []}]],
         [{debug_line,315,113},{atom,{315,1},ignore}]},
     {clause,
         {315,1},
         [{var,{315,14},'Es'},{var,{315,18},'Def'},{var,{315,23},'St0'}],
         [],
         [{debug_line,316,114},
          {call,
              {316,5},
              {remote,{316,5},{atom,{316,5},lists},{atom,{316,5},foldl}},
              [{block,0,
                   [{'fun',
                        {316,11},
                        {clauses,
                            [{clause,
                                 {316,15},
                                 [{var,{316,16},'E'},{var,{316,19},'St'}],
                                 [],
                                 [{call,
                                      {316,26},
                                      {atom,{316,26},gbitstr},
                                      [{var,{316,34},'E'},
                                       {var,{316,37},'Def'},
                                       {var,{316,42},'St'}]}]}]}}]},
               {var,{316,51},'St0'},
               {var,{316,56},'Es'}]}]}]}.
{function,
    {318,1},
    gbitstr,3,
    [{clause,
         {318,1},
         [{var,{318,1},'_'},{var,{318,1},'_'},{var,{318,1},'_'}],
         [[{call,
               {318,1},
               {remote,
                   {318,1},
                   {atom,{318,1},fake},
                   {atom,{318,1},is_beam_bif_info}},
               []}]],
         [{debug_line,318,115},{atom,{318,1},ignore}]},
     {clause,
         {318,1},
         [{tuple,
              {318,9},
              [{atom,{318,9},c_bitstr},
               {var,{318,9},'_'},
               {var,{318,23},'V'},
               {var,{318,30},'S'},
               {var,{318,9},'_'},
               {var,{318,9},'_'},
               {var,{318,9},'_'}]},
          {var,{318,34},'Def'},
          {var,{318,39},'St'}],
         [],
         [{debug_line,319,116},
          {call,
              {319,5},
              {atom,{319,5},gexpr_list},
              [{block,0,
                   [{cons,
                        {319,16},
                        {var,{319,17},'V'},
                        {cons,{319,19},{var,{319,19},'S'},{nil,{319,20}}}}]},
               {var,{319,23},'Def'},
               {var,{319,28},'St'}]}]}]}.
{function,
 {323,1},
 is_guard_bif,2,
 [{clause,
   {323,1},
   [{var,{323,1},'_'},{var,{323,1},'_'}],
   [[{call,
      {323,1},
      {remote,{323,1},{atom,{323,1},fake},{atom,{323,1},is_beam_bif_info}},
      []}]],
   [{debug_line,323,117},{atom,{323,1},ignore}]},
  {clause,
   {323,1},
   [{var,{323,14},'Name'},{var,{323,20},'Arity'}],
   [],
   [{debug_line,324,118},
    {'case',
     {324,5},
     {call,
      {324,5},
      {remote,{324,17},{atom,{324,5},erl_internal},{atom,{324,18},guard_bif}},
      [{var,{324,28},'Name'},{var,{324,34},'Arity'}]},
     [{clause,{324,5},[{atom,{324,5},true}],[],[{atom,{324,5},true}]},
      {clause,
       {324,5},
       [{atom,{324,5},false}],
       [],
       [{debug_line,325,119},
        {'case',
         {325,16},
         {call,
          {325,16},
          {remote,
           {325,28},
           {atom,{325,16},erl_internal},
           {atom,{325,29},arith_op}},
          [{var,{325,38},'Name'},{var,{325,44},'Arity'}]},
         [{clause,{325,16},[{atom,{325,16},true}],[],[{atom,{325,16},true}]},
          {clause,
           {325,16},
           [{atom,{325,16},false}],
           [],
           [{debug_line,326,120},
            {'case',
             {326,16},
             {call,
              {326,16},
              {remote,
               {326,28},
               {atom,{326,16},erl_internal},
               {atom,{326,29},bool_op}},
              [{var,{326,37},'Name'},{var,{326,43},'Arity'}]},
             [{clause,
               {326,16},
               [{atom,{326,16},true}],
               [],
               [{atom,{326,16},true}]},
              {clause,
               {326,16},
               [{atom,{326,16},false}],
               [],
               [{debug_line,327,121},
                {call,
                 {327,16},
                 {remote,
                  {327,28},
                  {atom,{327,16},erl_internal},
                  {atom,{327,29},comp_op}},
                 [{var,{327,37},'Name'},{var,{327,43},'Arity'}]}]},
              {clause,
               [{generated,true},{location,{326,16}}],
               [{var,{326,16},cov1}],
               [],
               [{call,
                 {326,16},
                 {remote,
                  {326,16},
                  {atom,{326,16},erlang},
                  {atom,{326,16},error}},
                 [{block,0,
                   [{tuple,
                     {326,16},
                     [{atom,{326,16},badarg},{var,{326,16},cov1}]}]}]}]}]}]},
          {clause,
           [{generated,true},{location,{325,16}}],
           [{var,{325,16},cov2}],
           [],
           [{call,
             {325,16},
             {remote,{325,16},{atom,{325,16},erlang},{atom,{325,16},error}},
             [{block,0,
               [{tuple,
                 {325,16},
                 [{atom,{325,16},badarg},{var,{325,16},cov2}]}]}]}]}]}]},
      {clause,
       [{generated,true},{location,{324,5}}],
       [{var,{324,5},cov3}],
       [],
       [{call,
         {324,5},
         {remote,{324,5},{atom,{324,5},erlang},{atom,{324,5},error}},
         [{block,0,
           [{tuple,
             {324,5},
             [{atom,{324,5},badarg},{var,{324,5},cov3}]}]}]}]}]}]}]}.
{function,
 {331,1},
 expr,4,
 [{clause,
   {331,1},
   [{var,{331,1},'_'},{var,{331,1},'_'},{var,{331,1},'_'},{var,{331,1},'_'}],
   [[{call,
      {331,1},
      {remote,{331,1},{atom,{331,1},fake},{atom,{331,1},is_beam_bif_info}},
      []}]],
   [{debug_line,331,122},{atom,{331,1},ignore}]},
  {clause,
   {331,1},
   [{tuple,
     {331,6},
     [{atom,{331,6},c_var},
      {var,{331,6},'_'},
      {match,
       {331,18},
       {tuple,{331,18},[{var,{331,19},'_'},{var,{331,21},'_'}]},
       {var,{331,24},'FA'}}]},
    {var,{331,29},'Def'},
    {var,{331,34},'Rt'},
    {var,{331,38},'St'}],
   [],
   [{debug_line,332,123},
    {call,
     {332,5},
     {atom,{332,5},return_match},
     [{var,{332,18},'Rt'},
      {integer,{332,22},1},
      {block,0,
       [{call,
         {332,25},
         {atom,{332,25},expr_fname},
         [{var,{332,36},'FA'},{var,{332,40},'Def'},{var,{332,45},'St'}]}]}]}]},
  {clause,
   {333,1},
   [{tuple,
     {333,6},
     [{atom,{333,6},c_var},{var,{333,6},'_'},{var,{333,18},'N'}]},
    {var,{333,22},'Def'},
    {var,{333,27},'Rt'},
    {var,{333,31},'St'}],
   [],
   [{debug_line,334,124},
    {call,
     {334,5},
     {atom,{334,5},return_match},
     [{var,{334,18},'Rt'},
      {integer,{334,22},1},
      {block,0,
       [{call,
         {334,25},
         {atom,{334,25},expr_var},
         [{var,{334,34},'N'},{var,{334,37},'Def'},{var,{334,42},'St'}]}]}]}]},
  {clause,
   {335,1},
   [{tuple,
     {335,6},
     [{atom,{335,6},c_literal},{var,{335,6},'_'},{var,{335,6},'_'}]},
    {var,{335,20},'_Def'},
    {var,{335,26},'Rt'},
    {var,{335,30},'St'}],
   [],
   [{debug_line,336,125},
    {call,
     {336,5},
     {atom,{336,5},return_match},
     [{var,{336,18},'Rt'},{integer,{336,22},1},{var,{336,25},'St'}]}]},
  {clause,
   {337,1},
   [{tuple,
     {337,6},
     [{atom,{337,6},c_cons},
      {var,{337,6},'_'},
      {var,{337,17},'H'},
      {var,{337,22},'T'}]},
    {var,{337,26},'Def'},
    {var,{337,31},'Rt'},
    {var,{337,35},'St'}],
   [],
   [{debug_line,338,126},
    {call,
     {338,5},
     {atom,{338,5},return_match},
     [{var,{338,18},'Rt'},
      {integer,{338,22},1},
      {block,0,
       [{call,
         {338,25},
         {atom,{338,25},expr_list},
         [{block,0,
           [{cons,
             {338,35},
             {var,{338,36},'H'},
             {cons,{338,38},{var,{338,38},'T'},{nil,{338,39}}}}]},
          {var,{338,42},'Def'},
          {var,{338,47},'St'}]}]}]}]},
  {clause,
   {339,1},
   [{tuple,
     {339,6},
     [{atom,{339,6},c_tuple},{var,{339,6},'_'},{var,{339,18},'Es'}]},
    {var,{339,23},'Def'},
    {var,{339,28},'Rt'},
    {var,{339,32},'St'}],
   [],
   [{debug_line,340,127},
    {call,
     {340,5},
     {atom,{340,5},return_match},
     [{var,{340,18},'Rt'},
      {integer,{340,22},1},
      {block,0,
       [{call,
         {340,25},
         {atom,{340,25},expr_list},
         [{var,{340,35},'Es'},{var,{340,39},'Def'},{var,{340,44},'St'}]}]}]}]},
  {clause,
   {341,1},
   [{tuple,
     {341,6},
     [{atom,{341,6},c_map},
      {var,{341,6},'_'},
      {var,{341,6},'_'},
      {var,{341,16},'Es'},
      {var,{341,6},'_'}]},
    {var,{341,21},'Def'},
    {var,{341,26},'Rt'},
    {var,{341,30},'St'}],
   [],
   [{debug_line,342,128},
    {call,
     {342,5},
     {atom,{342,5},return_match},
     [{var,{342,18},'Rt'},
      {integer,{342,22},1},
      {block,0,
       [{call,
         {342,25},
         {atom,{342,25},expr_list},
         [{var,{342,35},'Es'},{var,{342,39},'Def'},{var,{342,44},'St'}]}]}]}]},
  {clause,
   {343,1},
   [{tuple,
     {343,6},
     [{atom,{343,6},c_map_pair},
      {var,{343,6},'_'},
      {var,{343,6},'_'},
      {var,{343,22},'K'},
      {var,{343,28},'V'}]},
    {var,{343,32},'Def'},
    {var,{343,37},'Rt'},
    {var,{343,41},'St'}],
   [],
   [{debug_line,344,129},
    {call,
     {344,5},
     {atom,{344,5},return_match},
     [{var,{344,18},'Rt'},
      {integer,{344,22},1},
      {block,0,
       [{call,
         {344,25},
         {atom,{344,25},expr_list},
         [{block,0,
           [{cons,
             {344,35},
             {var,{344,36},'K'},
             {cons,{344,38},{var,{344,38},'V'},{nil,{344,39}}}}]},
          {var,{344,42},'Def'},
          {var,{344,47},'St'}]}]}]}]},
  {clause,
   {345,1},
   [{tuple,
     {345,6},
     [{atom,{345,6},c_binary},{var,{345,6},'_'},{var,{345,25},'Ss'}]},
    {var,{345,30},'Def'},
    {var,{345,35},'Rt'},
    {var,{345,39},'St'}],
   [],
   [{debug_line,346,130},
    {call,
     {346,5},
     {atom,{346,5},return_match},
     [{var,{346,18},'Rt'},
      {integer,{346,22},1},
      {block,0,
       [{call,
         {346,25},
         {atom,{346,25},bitstr_list},
         [{var,{346,37},'Ss'},{var,{346,41},'Def'},{var,{346,46},'St'}]}]}]}]},
  {clause,
   {347,1},
   [{tuple,
     {347,6},
     [{atom,{347,6},c_fun},
      {var,{347,6},'_'},
      {var,{347,18},'Vs'},
      {var,{347,26},'B'}]},
    {var,{347,30},'Def'},
    {var,{347,35},'Rt'},
    {var,{347,39},'St0'}],
   [],
   [{debug_line,348,131},
    {match,
     {348,5},
     {tuple,{348,5},[{var,{348,6},'Vvs'},{var,{348,10},'St1'}]},
     {call,
      {348,17},
      {atom,{348,17},variable_list},
      [{var,{348,31},'Vs'},{var,{348,35},'St0'}]}},
    {debug_line,349,132},
    {call,
     {349,5},
     {atom,{349,5},return_match},
     [{var,{349,18},'Rt'},
      {integer,{349,22},1},
      {block,0,
       [{call,
         {349,25},
         {atom,{349,25},body},
         [{var,{349,30},'B'},
          {block,0,
           [{call,
             {349,33},
             {remote,{349,33},{atom,{349,33},ordsets},{atom,{349,33},union}},
             [{var,{349,39},'Vvs'},{var,{349,44},'Def'}]}]},
          {integer,{349,50},1},
          {var,{349,53},'St1'}]}]}]}]},
  {clause,
   {350,1},
   [{tuple,
     {350,6},
     [{atom,{350,6},c_seq},
      {var,{350,6},'_'},
      {var,{350,17},'Arg'},
      {var,{350,26},'B'}]},
    {var,{350,30},'Def'},
    {var,{350,35},'Rt'},
    {var,{350,39},'St0'}],
   [],
   [{debug_line,351,133},
    {match,
     {351,5},
     {var,{351,5},'St1'},
     {call,
      {351,11},
      {atom,{351,11},expr},
      [{var,{351,16},'Arg'},
       {var,{351,21},'Def'},
       {integer,{351,26},1},
       {var,{351,29},'St0'}]}},
    {debug_line,352,134},
    {call,
     {352,5},
     {atom,{352,5},body},
     [{var,{352,10},'B'},
      {var,{352,13},'Def'},
      {var,{352,18},'Rt'},
      {var,{352,22},'St1'}]}]},
  {clause,
   {353,1},
   [{tuple,
     {353,6},
     [{atom,{353,6},c_let},
      {var,{353,6},'_'},
      {var,{353,18},'Vs'},
      {var,{353,25},'Arg'},
      {var,{353,34},'B'}]},
    {var,{353,38},'Def'},
    {var,{353,43},'Rt'},
    {var,{353,47},'St0'}],
   [],
   [{debug_line,354,135},
    {match,
     {354,5},
     {var,{354,5},'St1'},
     {call,
      {354,11},
      {atom,{354,11},body},
      [{var,{354,16},'Arg'},
       {var,{354,21},'Def'},
       {block,0,
        [{call,{354,26},{atom,{354,26},let_varcount},[{var,{354,39},'Vs'}]}]},
       {var,{354,44},'St0'}]}},
    {debug_line,355,136},
    {match,
     {355,5},
     {tuple,{355,5},[{var,{355,6},'Lvs'},{var,{355,10},'St2'}]},
     {call,
      {355,17},
      {atom,{355,17},variable_list},
      [{var,{355,31},'Vs'},{var,{355,35},'St1'}]}},
    {debug_line,356,137},
    {call,
     {356,5},
     {atom,{356,5},body},
     [{var,{356,10},'B'},
      {block,0,
       [{call,
         {356,13},
         {remote,{356,13},{atom,{356,13},ordsets},{atom,{356,13},union}},
         [{var,{356,19},'Lvs'},{var,{356,24},'Def'}]}]},
      {var,{356,30},'Rt'},
      {var,{356,34},'St2'}]}]},
  {clause,
   {357,1},
   [{tuple,
     {357,6},
     [{atom,{357,6},c_letrec},
      {var,{357,6},'_'},
      {var,{357,21},'Fs'},
      {var,{357,29},'B'}]},
    {var,{357,33},'Def0'},
    {var,{357,39},'Rt'},
    {var,{357,43},'St0'}],
   [],
   [{debug_line,358,138},
    {match,
     {358,5},
     {var,{358,5},'Def1'},
     {call,
      {358,12},
      {remote,{358,12},{atom,{358,12},ordsets},{atom,{358,12},union}},
      [{block,0,
        [{call,{358,18},{atom,{358,18},defined_funcs},[{var,{358,32},'Fs'}]}]},
       {var,{358,37},'Def0'}]}},
    {debug_line,359,139},
    {match,
     {359,5},
     {var,{359,5},'St1'},
     {call,
      {359,11},
      {atom,{359,11},functions},
      [{var,{359,21},'Fs'},
       {var,{359,25},'Def1'},
       {var,{359,31},'Rt'},
       {var,{359,35},'St0'}]}},
    {debug_line,360,140},
    {call,
     {360,5},
     {atom,{360,5},body},
     [{var,{360,10},'B'},
      {var,{360,13},'Def1'},
      {var,{360,19},'Rt'},
      {block,0,
       [{block,
         {360,23},
         [{match,
           {360,32},
           {var,{360,32},rec13},
           {'case',
            {360,37},
            {var,{360,37},'St0'},
            [{clause,
              [{generated,true},{location,{360,37}}],
              [{tuple,
                [{generated,true},{location,{360,37}}],
                [{atom,{360,37},lint},
                 {var,{360,37},'_'},
                 {var,{360,37},rec15},
                 {var,{360,37},'_'},
                 {var,{360,37},'_'}]}],
              [],
              [{var,{360,37},rec15}]},
             {clause,
              [{generated,true},{location,{360,37}}],
              [{var,{360,37},rec15}],
              [],
              [{call,
                [{generated,true},{location,{360,37}}],
                {remote,
                 [{generated,true},{location,{360,37}}],
                 {atom,[{generated,true},{location,{360,37}}],erlang},
                 {atom,[{generated,true},{location,{360,37}}],error}},
                [{tuple,
                  [{generated,true},{location,{360,37}}],
                  [{atom,[{generated,true},{location,{360,37}}],badrecord},
                   {var,{360,37},rec15}]}]}]}]}},
          {match,{360,23},{var,{360,23},rec14},{var,{360,23},'St1'}},
          {'case',
           {360,32},
           {var,{360,23},rec14},
           [{clause,
             {360,32},
             [{tuple,
               {360,32},
               [{atom,{360,32},lint},
                {var,{360,32},'_'},
                {var,{360,32},'_'},
                {var,{360,32},'_'},
                {var,{360,32},'_'}]}],
             [],
             [{call,
               {360,32},
               {remote,
                {360,32},
                {atom,{360,32},erlang},
                {atom,{360,32},setelement}},
               [{integer,{360,32},3},
                {var,{360,23},rec14},
                {var,{360,32},rec13}]}]},
            {clause,
             [{generated,true},{location,{360,32}}],
             [{var,[{generated,true},{location,{360,32}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{360,32}}],
               {remote,
                [{generated,true},{location,{360,32}}],
                {atom,[{generated,true},{location,{360,32}}],erlang},
                {atom,[{generated,true},{location,{360,32}}],error}},
               [{tuple,
                 [{generated,true},{location,{360,32}}],
                 [{atom,[{generated,true},{location,{360,32}}],badrecord},
                  {var,{360,23},rec14}]}]}]}]}]}]}]}]},
  {clause,
   {361,1},
   [{tuple,
     {361,6},
     [{atom,{361,6},c_case},
      {var,{361,6},'_'},
      {var,{361,18},'Arg'},
      {var,{361,30},'Cs'}]},
    {var,{361,35},'Def'},
    {var,{361,40},'Rt'},
    {var,{361,44},'St0'}],
   [],
   [{debug_line,362,141},
    {match,
     {362,5},
     {var,{362,5},'Pc'},
     {call,{362,10},{atom,{362,10},case_patcount},[{var,{362,24},'Cs'}]}},
    {debug_line,363,142},
    {match,
     {363,5},
     {var,{363,5},'St1'},
     {call,
      {363,11},
      {atom,{363,11},body},
      [{var,{363,16},'Arg'},
       {var,{363,21},'Def'},
       {var,{363,26},'Pc'},
       {var,{363,30},'St0'}]}},
    {debug_line,364,143},
    {call,
     {364,5},
     {atom,{364,5},clauses},
     [{var,{364,13},'Cs'},
      {var,{364,17},'Def'},
      {var,{364,22},'Pc'},
      {var,{364,26},'Rt'},
      {var,{364,30},'St1'}]}]},
  {clause,
   {365,1},
   [{tuple,
     {365,6},
     [{atom,{365,6},c_receive},
      {var,{365,6},'_'},
      {var,{365,25},'Cs'},
      {var,{365,36},'T'},
      {var,{365,45},'A'}]},
    {var,{365,49},'Def'},
    {var,{365,54},'Rt'},
    {var,{365,58},'St0'}],
   [],
   [{debug_line,366,144},
    {match,
     {366,5},
     {var,{366,5},'St1'},
     {call,
      {366,11},
      {atom,{366,11},expr},
      [{var,{366,16},'T'},
       {var,{366,19},'Def'},
       {integer,{366,24},1},
       {var,{366,27},'St0'}]}},
    {debug_line,367,145},
    {match,
     {367,5},
     {var,{367,5},'St2'},
     {call,
      {367,11},
      {atom,{367,11},body},
      [{var,{367,16},'A'},
       {var,{367,19},'Def'},
       {var,{367,24},'Rt'},
       {var,{367,28},'St1'}]}},
    {debug_line,368,146},
    {call,
     {368,5},
     {atom,{368,5},clauses},
     [{var,{368,13},'Cs'},
      {var,{368,17},'Def'},
      {integer,{368,22},1},
      {var,{368,25},'Rt'},
      {var,{368,29},'St2'}]}]},
  {clause,
   {369,1},
   [{tuple,
     {369,6},
     [{atom,{369,6},c_apply},
      {var,{369,6},'_'},
      {var,{369,18},'Op'},
      {var,{369,26},'As'}]},
    {var,{369,31},'Def'},
    {var,{369,36},'_Rt'},
    {var,{369,41},'St0'}],
   [],
   [{debug_line,370,147},
    {match,
     {370,5},
     {var,{370,5},'St1'},
     {call,
      {370,11},
      {atom,{370,11},apply_op},
      [{var,{370,20},'Op'},
       {var,{370,24},'Def'},
       {block,0,
        [{call,
          {370,29},
          {remote,{370,29},{atom,{370,29},erlang},{atom,{370,29},length}},
          [{var,{370,36},'As'}]}]},
       {var,{370,41},'St0'}]}},
    {debug_line,371,148},
    {call,
     {371,5},
     {atom,{371,5},return_match},
     [{atom,{371,18},any},
      {integer,{371,23},1},
      {block,0,
       [{call,
         {371,26},
         {atom,{371,26},expr_list},
         [{var,{371,36},'As'},
          {var,{371,40},'Def'},
          {var,{371,45},'St1'}]}]}]}]},
  {clause,
   {372,1},
   [{tuple,
     {372,6},
     [{atom,{372,6},c_call},
      {var,{372,6},'_'},
      {tuple,
       {372,21},
       [{atom,{372,21},c_literal},{var,{372,21},'_'},{atom,{372,36},erlang}]},
      {tuple,
       {372,49},
       [{atom,{372,49},c_literal},{var,{372,49},'_'},{var,{372,64},'Name'}]},
      {var,{372,75},'As'}]},
    {var,{373,6},'Def'},
    {var,{373,11},'Rt'},
    {var,{373,15},'St0'}],
   [[{call,
      {373,25},
      {remote,{373,25},{atom,{373,25},erlang},{atom,{373,25},is_atom}},
      [{var,{373,33},'Name'}]}]],
   [{debug_line,374,149},
    {match,
     {374,5},
     {var,{374,5},'St1'},
     {call,
      {374,11},
      {atom,{374,11},expr_list},
      [{var,{374,21},'As'},{var,{374,25},'Def'},{var,{374,30},'St0'}]}},
    {debug_line,375,150},
    {'case',
     {375,5},
     {call,
      {375,10},
      {remote,{375,18},{atom,{375,10},erl_bifs},{atom,{375,19},is_exit_bif}},
      [{atom,{375,31},erlang},
       {var,{375,39},'Name'},
       {block,0,
        [{call,
          {375,45},
          {remote,{375,45},{atom,{375,45},erlang},{atom,{375,45},length}},
          [{var,{375,52},'As'}]}]}]},
     [{clause,
       {376,9},
       [{atom,{376,9},true}],
       [],
       [{debug_line,376,151},{var,{376,17},'St1'}]},
      {clause,
       {377,9},
       [{atom,{377,9},false}],
       [],
       [{debug_line,377,152},
        {call,
         {377,18},
         {atom,{377,18},return_match},
         [{var,{377,31},'Rt'},
          {integer,{377,35},1},
          {var,{377,38},'St1'}]}]}]}]},
  {clause,
   {379,1},
   [{tuple,
     {379,6},
     [{atom,{379,6},c_call},
      {var,{379,6},'_'},
      {var,{379,21},'M'},
      {var,{379,28},'N'},
      {var,{379,35},'As'}]},
    {var,{379,40},'Def'},
    {var,{379,45},'_Rt'},
    {var,{379,50},'St0'}],
   [],
   [{debug_line,380,153},
    {match,
     {380,5},
     {var,{380,5},'St1'},
     {call,
      {380,11},
      {atom,{380,11},expr},
      [{var,{380,16},'M'},
       {var,{380,19},'Def'},
       {integer,{380,24},1},
       {var,{380,27},'St0'}]}},
    {debug_line,381,154},
    {match,
     {381,5},
     {var,{381,5},'St2'},
     {call,
      {381,11},
      {atom,{381,11},expr},
      [{var,{381,16},'N'},
       {var,{381,19},'Def'},
       {integer,{381,24},1},
       {var,{381,27},'St1'}]}},
    {debug_line,382,155},
    {call,
     {382,5},
     {atom,{382,5},expr_list},
     [{var,{382,15},'As'},{var,{382,19},'Def'},{var,{382,24},'St2'}]}]},
  {clause,
   {383,1},
   [{tuple,
     {383,6},
     [{atom,{383,6},c_primop},
      {var,{383,6},'_'},
      {tuple,
       {383,21},
       [{atom,{383,21},c_literal},{var,{383,21},'_'},{var,{383,36},'A'}]},
      {var,{383,44},'As'}]},
    {var,{383,49},'Def'},
    {var,{383,54},'Rt'},
    {var,{383,58},'St0'}],
   [[{call,
      {383,68},
      {remote,{383,68},{atom,{383,68},erlang},{atom,{383,68},is_atom}},
      [{var,{383,76},'A'}]}]],
   [{debug_line,384,156},
    {match,
     {384,5},
     {var,{384,5},'St1'},
     {call,
      {384,11},
      {atom,{384,11},expr_list},
      [{var,{384,21},'As'},{var,{384,25},'Def'},{var,{384,30},'St0'}]}},
    {debug_line,385,157},
    {'case',
     {385,5},
     {var,{385,10},'A'},
     [{clause,
       {386,9},
       [{atom,{386,9},match_fail}],
       [],
       [{debug_line,386,158},{var,{386,23},'St1'}]},
      {clause,
       {387,9},
       [{atom,{387,9},recv_peek_message}],
       [],
       [{debug_line,387,159},
        {call,
         {387,30},
         {atom,{387,30},return_match},
         [{var,{387,43},'Rt'},{integer,{387,47},2},{var,{387,50},'St1'}]}]},
      {clause,
       {388,9},
       [{var,{388,9},'_'}],
       [],
       [{debug_line,388,160},
        {call,
         {388,14},
         {atom,{388,14},return_match},
         [{var,{388,27},'Rt'},
          {integer,{388,31},1},
          {var,{388,34},'St1'}]}]}]}]},
  {clause,
   {390,1},
   [{tuple,
     {390,6},
     [{atom,{390,6},c_catch},{var,{390,6},'_'},{var,{390,20},'B'}]},
    {var,{390,24},'Def'},
    {var,{390,29},'Rt'},
    {var,{390,33},'St'}],
   [],
   [{debug_line,391,161},
    {call,
     {391,5},
     {atom,{391,5},return_match},
     [{var,{391,18},'Rt'},
      {integer,{391,22},1},
      {block,0,
       [{call,
         {391,25},
         {atom,{391,25},body},
         [{var,{391,30},'B'},
          {var,{391,33},'Def'},
          {integer,{391,38},1},
          {var,{391,41},'St'}]}]}]}]},
  {clause,
   {392,1},
   [{tuple,
     {392,6},
     [{atom,{392,6},c_try},
      {var,{392,6},'_'},
      {var,{392,17},'A'},
      {var,{392,24},'Vs'},
      {var,{392,32},'B'},
      {var,{392,40},'Evs'},
      {var,{392,52},'H'}]},
    {var,{392,56},'Def'},
    {var,{392,61},'Rt'},
    {var,{392,65},'St0'}],
   [],
   [{debug_line,393,162},
    {match,
     {393,5},
     {var,{393,5},'St1'},
     {'case',
      {393,11},
      {var,{393,16},'Evs'},
      [{clause,
        {394,8},
        [{cons,
          {394,8},
          {var,{394,9},'_'},
          {cons,
           {394,12},
           {var,{394,12},'_'},
           {cons,{394,15},{var,{394,15},'_'},{nil,{394,16}}}}}],
        [],
        [{debug_line,394,163},{var,{394,21},'St0'}]},
       {clause,
        {395,8},
        [{var,{395,8},'_'}],
        [],
        [{debug_line,395,164},
         {call,
          {395,13},
          {atom,{395,13},add_error},
          [{block,0,
            [{tuple,
              {395,23},
              [{atom,{395,24},illegal_try},
               {'case',
                {395,36},
                {var,{395,36},'St0'},
                [{clause,
                  [{generated,true},{location,{395,36}}],
                  [{tuple,
                    [{generated,true},{location,{395,36}}],
                    [{atom,{395,36},lint},
                     {var,{395,36},'_'},
                     {var,{395,36},rec16},
                     {var,{395,36},'_'},
                     {var,{395,36},'_'}]}],
                  [],
                  [{var,{395,36},rec16}]},
                 {clause,
                  [{generated,true},{location,{395,36}}],
                  [{var,{395,36},rec16}],
                  [],
                  [{call,
                    [{generated,true},{location,{395,36}}],
                    {remote,
                     [{generated,true},{location,{395,36}}],
                     {atom,[{generated,true},{location,{395,36}}],erlang},
                     {atom,[{generated,true},{location,{395,36}}],error}},
                    [{tuple,
                      [{generated,true},{location,{395,36}}],
                      [{atom,[{generated,true},{location,{395,36}}],badrecord},
                       {var,{395,36},rec16}]}]}]}]}]}]},
           {var,{395,52},'St0'}]}]}]}},
    {debug_line,397,165},
    {match,
     {397,5},
     {var,{397,5},'St2'},
     {call,
      {397,11},
      {atom,{397,11},body},
      [{var,{397,16},'A'},
       {var,{397,19},'Def'},
       {block,0,
        [{call,{397,24},{atom,{397,24},let_varcount},[{var,{397,37},'Vs'}]}]},
       {var,{397,42},'St1'}]}},
    {debug_line,398,166},
    {match,
     {398,5},
     {tuple,{398,5},[{var,{398,6},'Ns'},{var,{398,9},'St3'}]},
     {call,
      {398,16},
      {atom,{398,16},variable_list},
      [{var,{398,30},'Vs'},{var,{398,34},'St2'}]}},
    {debug_line,399,167},
    {match,
     {399,5},
     {var,{399,5},'St4'},
     {call,
      {399,11},
      {atom,{399,11},body},
      [{var,{399,16},'B'},
       {block,0,
        [{call,
          {399,19},
          {remote,{399,19},{atom,{399,19},ordsets},{atom,{399,19},union}},
          [{var,{399,25},'Ns'},{var,{399,29},'Def'}]}]},
       {var,{399,35},'Rt'},
       {var,{399,39},'St3'}]}},
    {debug_line,400,168},
    {match,
     {400,5},
     {tuple,{400,5},[{var,{400,6},'Ens'},{var,{400,10},'St5'}]},
     {call,
      {400,17},
      {atom,{400,17},variable_list},
      [{var,{400,31},'Evs'},{var,{400,36},'St4'}]}},
    {debug_line,401,169},
    {call,
     {401,5},
     {atom,{401,5},body},
     [{var,{401,10},'H'},
      {block,0,
       [{call,
         {401,13},
         {remote,{401,13},{atom,{401,13},ordsets},{atom,{401,13},union}},
         [{var,{401,19},'Ens'},{var,{401,24},'Def'}]}]},
      {var,{401,30},'Rt'},
      {var,{401,34},'St5'}]}]},
  {clause,
   {402,1},
   [{var,{402,6},'_Other'},
    {var,{402,14},'_'},
    {var,{402,17},'_'},
    {var,{402,20},'St'}],
   [],
   [{debug_line,404,170},
    {call,
     {404,5},
     {atom,{404,5},add_error},
     [{block,0,
       [{tuple,
         {404,15},
         [{atom,{404,16},illegal_expr},
          {'case',
           {404,29},
           {var,{404,29},'St'},
           [{clause,
             [{generated,true},{location,{404,29}}],
             [{tuple,
               [{generated,true},{location,{404,29}}],
               [{atom,{404,29},lint},
                {var,{404,29},'_'},
                {var,{404,29},rec17},
                {var,{404,29},'_'},
                {var,{404,29},'_'}]}],
             [],
             [{var,{404,29},rec17}]},
            {clause,
             [{generated,true},{location,{404,29}}],
             [{var,{404,29},rec17}],
             [],
             [{call,
               [{generated,true},{location,{404,29}}],
               {remote,
                [{generated,true},{location,{404,29}}],
                {atom,[{generated,true},{location,{404,29}}],erlang},
                {atom,[{generated,true},{location,{404,29}}],error}},
               [{tuple,
                 [{generated,true},{location,{404,29}}],
                 [{atom,[{generated,true},{location,{404,29}}],badrecord},
                  {var,{404,29},rec17}]}]}]}]}]}]},
      {var,{404,44},'St'}]}]}]}.
{function,
    {408,1},
    expr_list,3,
    [{clause,
         {408,1},
         [{var,{408,1},'_'},{var,{408,1},'_'},{var,{408,1},'_'}],
         [[{call,
               {408,1},
               {remote,
                   {408,1},
                   {atom,{408,1},fake},
                   {atom,{408,1},is_beam_bif_info}},
               []}]],
         [{debug_line,408,171},{atom,{408,1},ignore}]},
     {clause,
         {408,1},
         [{var,{408,11},'Es'},{var,{408,15},'Def'},{var,{408,20},'St0'}],
         [],
         [{debug_line,409,172},
          {call,
              {409,5},
              {remote,{409,5},{atom,{409,5},lists},{atom,{409,5},foldl}},
              [{block,0,
                   [{'fun',
                        {409,11},
                        {clauses,
                            [{clause,
                                 {409,15},
                                 [{var,{409,16},'E'},{var,{409,19},'St'}],
                                 [],
                                 [{call,
                                      {409,26},
                                      {atom,{409,26},expr},
                                      [{var,{409,31},'E'},
                                       {var,{409,34},'Def'},
                                       {integer,{409,39},1},
                                       {var,{409,42},'St'}]}]}]}}]},
               {var,{409,51},'St0'},
               {var,{409,56},'Es'}]}]}]}.
{function,
    {413,1},
    bitstr_list,3,
    [{clause,
         {413,1},
         [{var,{413,1},'_'},{var,{413,1},'_'},{var,{413,1},'_'}],
         [[{call,
               {413,1},
               {remote,
                   {413,1},
                   {atom,{413,1},fake},
                   {atom,{413,1},is_beam_bif_info}},
               []}]],
         [{debug_line,413,173},{atom,{413,1},ignore}]},
     {clause,
         {413,1},
         [{var,{413,13},'Es'},{var,{413,17},'Def'},{var,{413,22},'St0'}],
         [],
         [{debug_line,414,174},
          {call,
              {414,5},
              {remote,{414,5},{atom,{414,5},lists},{atom,{414,5},foldl}},
              [{block,0,
                   [{'fun',
                        {414,11},
                        {clauses,
                            [{clause,
                                 {414,15},
                                 [{var,{414,16},'E'},{var,{414,19},'St'}],
                                 [],
                                 [{call,
                                      {414,26},
                                      {atom,{414,26},bitstr},
                                      [{var,{414,33},'E'},
                                       {var,{414,36},'Def'},
                                       {var,{414,41},'St'}]}]}]}}]},
               {var,{414,50},'St0'},
               {var,{414,55},'Es'}]}]}]}.
{function,
    {416,1},
    bitstr,3,
    [{clause,
         {416,1},
         [{var,{416,1},'_'},{var,{416,1},'_'},{var,{416,1},'_'}],
         [[{call,
               {416,1},
               {remote,
                   {416,1},
                   {atom,{416,1},fake},
                   {atom,{416,1},is_beam_bif_info}},
               []}]],
         [{debug_line,416,175},{atom,{416,1},ignore}]},
     {clause,
         {416,1},
         [{tuple,
              {416,8},
              [{atom,{416,8},c_bitstr},
               {var,{416,8},'_'},
               {var,{416,22},'V'},
               {var,{416,29},'S'},
               {var,{416,8},'_'},
               {var,{416,8},'_'},
               {var,{416,8},'_'}]},
          {var,{416,33},'Def'},
          {var,{416,38},'St'}],
         [],
         [{debug_line,417,176},
          {call,
              {417,5},
              {atom,{417,5},expr_list},
              [{block,0,
                   [{cons,
                        {417,15},
                        {var,{417,16},'V'},
                        {cons,{417,18},{var,{417,18},'S'},{nil,{417,19}}}}]},
               {var,{417,22},'Def'},
               {var,{417,27},'St'}]}]}]}.
{function,
    {422,1},
    apply_op,4,
    [{clause,
         {422,1},
         [{var,{422,1},'_'},
          {var,{422,1},'_'},
          {var,{422,1},'_'},
          {var,{422,1},'_'}],
         [[{call,
               {422,1},
               {remote,
                   {422,1},
                   {atom,{422,1},fake},
                   {atom,{422,1},is_beam_bif_info}},
               []}]],
         [{debug_line,422,177},{atom,{422,1},ignore}]},
     {clause,
         {422,1},
         [{tuple,
              {422,10},
              [{atom,{422,10},c_var},
               {var,{422,10},'_'},
               {match,
                   {422,22},
                   {tuple,{422,22},[{var,{422,23},'_I'},{var,{422,26},'A'}]},
                   {var,{422,29},'IA'}}]},
          {var,{422,34},'Def'},
          {var,{422,39},'Ac'},
          {var,{422,43},'St0'}],
         [],
         [{debug_line,423,178},
          {match,
              {423,5},
              {var,{423,5},'St1'},
              {call,
                  {423,11},
                  {atom,{423,11},expr_fname},
                  [{var,{423,22},'IA'},
                   {var,{423,26},'Def'},
                   {var,{423,31},'St0'}]}},
          {debug_line,424,179},
          {call,
              {424,5},
              {atom,{424,5},arg_match},
              [{var,{424,15},'Ac'},{var,{424,19},'A'},{var,{424,22},'St1'}]}]},
     {clause,
         {425,1},
         [{var,{425,10},'E'},
          {var,{425,13},'Def'},
          {var,{425,18},'_'},
          {var,{425,21},'St'}],
         [],
         [{debug_line,425,180},
          {call,
              {425,28},
              {atom,{425,28},expr},
              [{var,{425,33},'E'},
               {var,{425,36},'Def'},
               {integer,{425,41},1},
               {var,{425,44},'St'}]}]}]}.
{function,
 {429,1},
 expr_var,3,
 [{clause,
   {429,1},
   [{var,{429,1},'_'},{var,{429,1},'_'},{var,{429,1},'_'}],
   [[{call,
      {429,1},
      {remote,{429,1},{atom,{429,1},fake},{atom,{429,1},is_beam_bif_info}},
      []}]],
   [{debug_line,429,181},{atom,{429,1},ignore}]},
  {clause,
   {429,1},
   [{var,{429,10},'N'},{var,{429,13},'Def'},{var,{429,18},'St'}],
   [],
   [{debug_line,430,182},
    {'case',
     {430,5},
     {call,
      {430,10},
      {remote,{430,10},{atom,{430,10},ordsets},{atom,{430,10},is_element}},
      [{var,{430,21},'N'},{var,{430,24},'Def'}]},
     [{clause,
       {431,2},
       [{atom,{431,2},true}],
       [],
       [{debug_line,431,183},{var,{431,10},'St'}]},
      {clause,
       {432,2},
       [{atom,{432,2},false}],
       [],
       [{debug_line,432,184},
        {call,
         {432,11},
         {atom,{432,11},add_error},
         [{block,0,
           [{tuple,
             {432,21},
             [{atom,{432,22},unbound_var},
              {var,{432,34},'N'},
              {'case',
               {432,36},
               {var,{432,36},'St'},
               [{clause,
                 [{generated,true},{location,{432,36}}],
                 [{tuple,
                   [{generated,true},{location,{432,36}}],
                   [{atom,{432,36},lint},
                    {var,{432,36},'_'},
                    {var,{432,36},rec18},
                    {var,{432,36},'_'},
                    {var,{432,36},'_'}]}],
                 [],
                 [{var,{432,36},rec18}]},
                {clause,
                 [{generated,true},{location,{432,36}}],
                 [{var,{432,36},rec18}],
                 [],
                 [{call,
                   [{generated,true},{location,{432,36}}],
                   {remote,
                    [{generated,true},{location,{432,36}}],
                    {atom,[{generated,true},{location,{432,36}}],erlang},
                    {atom,[{generated,true},{location,{432,36}}],error}},
                   [{tuple,
                     [{generated,true},{location,{432,36}}],
                     [{atom,[{generated,true},{location,{432,36}}],badrecord},
                      {var,{432,36},rec18}]}]}]}]}]}]},
          {var,{432,51},'St'}]}]}]}]}]}.
{function,
 {437,1},
 expr_fname,3,
 [{clause,
   {437,1},
   [{var,{437,1},'_'},{var,{437,1},'_'},{var,{437,1},'_'}],
   [[{call,
      {437,1},
      {remote,{437,1},{atom,{437,1},fake},{atom,{437,1},is_beam_bif_info}},
      []}]],
   [{debug_line,437,185},{atom,{437,1},ignore}]},
  {clause,
   {437,1},
   [{var,{437,12},'Fname'},{var,{437,19},'Def'},{var,{437,24},'St'}],
   [],
   [{debug_line,438,186},
    {'case',
     {438,5},
     {call,
      {438,10},
      {remote,{438,10},{atom,{438,10},ordsets},{atom,{438,10},is_element}},
      [{var,{438,21},'Fname'},{var,{438,28},'Def'}]},
     [{clause,
       {439,2},
       [{atom,{439,2},true}],
       [],
       [{debug_line,439,187},{var,{439,10},'St'}]},
      {clause,
       {440,2},
       [{atom,{440,2},false}],
       [],
       [{debug_line,440,188},
        {call,
         {440,11},
         {atom,{440,11},add_error},
         [{block,0,
           [{tuple,
             {440,21},
             [{atom,{440,22},undefined_function},
              {var,{440,41},'Fname'},
              {'case',
               {440,47},
               {var,{440,47},'St'},
               [{clause,
                 [{generated,true},{location,{440,47}}],
                 [{tuple,
                   [{generated,true},{location,{440,47}}],
                   [{atom,{440,47},lint},
                    {var,{440,47},'_'},
                    {var,{440,47},rec19},
                    {var,{440,47},'_'},
                    {var,{440,47},'_'}]}],
                 [],
                 [{var,{440,47},rec19}]},
                {clause,
                 [{generated,true},{location,{440,47}}],
                 [{var,{440,47},rec19}],
                 [],
                 [{call,
                   [{generated,true},{location,{440,47}}],
                   {remote,
                    [{generated,true},{location,{440,47}}],
                    {atom,[{generated,true},{location,{440,47}}],erlang},
                    {atom,[{generated,true},{location,{440,47}}],error}},
                   [{tuple,
                     [{generated,true},{location,{440,47}}],
                     [{atom,[{generated,true},{location,{440,47}}],badrecord},
                      {var,{440,47},rec19}]}]}]}]}]}]},
          {var,{440,62},'St'}]}]}]}]}]}.
{function,{445,1},
          let_varcount,1,
          [{clause,{445,1},
                   [{var,{445,1},'_'}],
                   [[{call,{445,1},
                           {remote,{445,1},
                                   {atom,{445,1},fake},
                                   {atom,{445,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,445,189},{atom,{445,1},ignore}]},
           {clause,{445,1},
                   [{nil,{445,14}}],
                   [],
                   [{debug_line,445,190},{atom,{445,21},any}]},
           {clause,{446,1},
                   [{var,{446,14},'Es'}],
                   [],
                   [{debug_line,446,191},
                    {call,{446,21},
                          {remote,{446,21},
                                  {atom,{446,21},erlang},
                                  {atom,{446,21},length}},
                          [{var,{446,28},'Es'}]}]}]}.
{function,{450,1},
          case_patcount,1,
          [{clause,{450,1},
                   [{var,{450,1},'_'}],
                   [[{call,{450,1},
                           {remote,{450,1},
                                   {atom,{450,1},fake},
                                   {atom,{450,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,450,192},{atom,{450,1},ignore}]},
           {clause,{450,1},
                   [{cons,{450,15},
                          {tuple,{450,16},
                                 [{atom,{450,16},c_clause},
                                  {var,{450,16},'_'},
                                  {var,{450,31},'Ps'},
                                  {var,{450,16},'_'},
                                  {var,{450,16},'_'}]},
                          {var,{450,35},'_'}}],
                   [],
                   [{debug_line,450,193},
                    {call,{450,42},
                          {remote,{450,42},
                                  {atom,{450,42},erlang},
                                  {atom,{450,42},length}},
                          [{var,{450,49},'Ps'}]}]}]}.
{function,
    {454,1},
    clauses,5,
    [{clause,
         {454,1},
         [{var,{454,1},'_'},
          {var,{454,1},'_'},
          {var,{454,1},'_'},
          {var,{454,1},'_'},
          {var,{454,1},'_'}],
         [[{call,
               {454,1},
               {remote,
                   {454,1},
                   {atom,{454,1},fake},
                   {atom,{454,1},is_beam_bif_info}},
               []}]],
         [{debug_line,454,194},{atom,{454,1},ignore}]},
     {clause,
         {454,1},
         [{var,{454,9},'Cs'},
          {var,{454,13},'Def'},
          {var,{454,18},'Pc'},
          {var,{454,22},'Rt'},
          {var,{454,26},'St0'}],
         [],
         [{debug_line,455,195},
          {call,
              {455,5},
              {remote,{455,5},{atom,{455,5},lists},{atom,{455,5},foldl}},
              [{block,0,
                   [{'fun',
                        {455,11},
                        {clauses,
                            [{clause,
                                 {455,15},
                                 [{var,{455,16},'C'},{var,{455,19},'St'}],
                                 [],
                                 [{call,
                                      {455,26},
                                      {atom,{455,26},clause},
                                      [{var,{455,33},'C'},
                                       {var,{455,36},'Def'},
                                       {var,{455,41},'Pc'},
                                       {var,{455,45},'Rt'},
                                       {var,{455,49},'St'}]}]}]}}]},
               {var,{455,58},'St0'},
               {var,{455,63},'Cs'}]}]}]}.
{function,
    {459,1},
    clause,5,
    [{clause,
         {459,1},
         [{var,{459,1},'_'},
          {var,{459,1},'_'},
          {var,{459,1},'_'},
          {var,{459,1},'_'},
          {var,{459,1},'_'}],
         [[{call,
               {459,1},
               {remote,
                   {459,1},
                   {atom,{459,1},fake},
                   {atom,{459,1},is_beam_bif_info}},
               []}]],
         [{debug_line,459,196},{atom,{459,1},ignore}]},
     {clause,
         {459,1},
         [{tuple,
              {459,8},
              [{atom,{459,8},c_clause},
               {var,{459,8},'_'},
               {var,{459,23},'Ps'},
               {var,{459,32},'G'},
               {var,{459,39},'B'}]},
          {var,{459,43},'Def0'},
          {var,{459,49},'Pc'},
          {var,{459,53},'Rt'},
          {var,{459,57},'St0'}],
         [],
         [{debug_line,460,197},
          {match,
              {460,5},
              {var,{460,5},'St1'},
              {call,
                  {460,11},
                  {atom,{460,11},pattern_match},
                  [{var,{460,25},'Pc'},
                   {block,0,
                       [{call,
                            {460,29},
                            {remote,
                                {460,29},
                                {atom,{460,29},erlang},
                                {atom,{460,29},length}},
                            [{var,{460,36},'Ps'}]}]},
                   {var,{460,41},'St0'}]}},
          {debug_line,461,198},
          {match,
              {461,5},
              {tuple,{461,5},[{var,{461,6},'Pvs'},{var,{461,10},'St2'}]},
              {call,
                  {461,17},
                  {atom,{461,17},pattern_list},
                  [{var,{461,30},'Ps'},
                   {var,{461,34},'Def0'},
                   {var,{461,40},'St1'}]}},
          {debug_line,462,199},
          {match,
              {462,5},
              {var,{462,5},'Def1'},
              {call,
                  {462,12},
                  {remote,
                      {462,12},
                      {atom,{462,12},ordsets},
                      {atom,{462,12},union}},
                  [{var,{462,18},'Pvs'},{var,{462,23},'Def0'}]}},
          {debug_line,463,200},
          {match,
              {463,5},
              {var,{463,5},'St3'},
              {call,
                  {463,11},
                  {atom,{463,11},guard},
                  [{var,{463,17},'G'},
                   {var,{463,20},'Def1'},
                   {var,{463,26},'St2'}]}},
          {debug_line,464,201},
          {call,
              {464,5},
              {atom,{464,5},body},
              [{var,{464,10},'B'},
               {var,{464,13},'Def1'},
               {var,{464,19},'Rt'},
               {var,{464,23},'St3'}]}]}]}.
{function,
 {468,1},
 variable,3,
 [{clause,
   {468,1},
   [{var,{468,1},'_'},{var,{468,1},'_'},{var,{468,1},'_'}],
   [[{call,
      {468,1},
      {remote,{468,1},{atom,{468,1},fake},{atom,{468,1},is_beam_bif_info}},
      []}]],
   [{debug_line,468,202},{atom,{468,1},ignore}]},
  {clause,
   {468,1},
   [{tuple,
     {468,10},
     [{atom,{468,10},c_var},{var,{468,10},'_'},{var,{468,22},'N'}]},
    {var,{468,26},'Ps'},
    {var,{468,30},'St'}],
   [],
   [{debug_line,469,203},
    {'case',
     {469,5},
     {call,
      {469,10},
      {remote,{469,10},{atom,{469,10},ordsets},{atom,{469,10},is_element}},
      [{var,{469,21},'N'},{var,{469,24},'Ps'}]},
     [{clause,
       {470,2},
       [{atom,{470,2},true}],
       [],
       [{debug_line,470,204},
        {tuple,
         {470,10},
         [{nil,{470,11}},
          {call,
           {470,14},
           {atom,{470,14},add_error},
           [{block,0,
             [{tuple,
               {470,24},
               [{atom,{470,25},duplicate_var},
                {var,{470,39},'N'},
                {'case',
                 {470,41},
                 {var,{470,41},'St'},
                 [{clause,
                   [{generated,true},{location,{470,41}}],
                   [{tuple,
                     [{generated,true},{location,{470,41}}],
                     [{atom,{470,41},lint},
                      {var,{470,41},'_'},
                      {var,{470,41},rec20},
                      {var,{470,41},'_'},
                      {var,{470,41},'_'}]}],
                   [],
                   [{var,{470,41},rec20}]},
                  {clause,
                   [{generated,true},{location,{470,41}}],
                   [{var,{470,41},rec20}],
                   [],
                   [{call,
                     [{generated,true},{location,{470,41}}],
                     {remote,
                      [{generated,true},{location,{470,41}}],
                      {atom,[{generated,true},{location,{470,41}}],erlang},
                      {atom,[{generated,true},{location,{470,41}}],error}},
                     [{tuple,
                       [{generated,true},{location,{470,41}}],
                       [{atom,
                         [{generated,true},{location,{470,41}}],
                         badrecord},
                        {var,{470,41},rec20}]}]}]}]}]}]},
            {var,{470,56},'St'}]}]}]},
      {clause,
       {471,2},
       [{atom,{471,2},false}],
       [],
       [{debug_line,471,205},
        {tuple,
         {471,11},
         [{cons,{471,12},{var,{471,13},'N'},{nil,{471,14}}},
          {var,{471,16},'St'}]}]}]}]},
  {clause,
   {473,1},
   [{var,{473,10},'_'},{var,{473,13},'Def'},{var,{473,18},'St'}],
   [],
   [{debug_line,473,206},
    {tuple,
     {473,25},
     [{var,{473,26},'Def'},
      {call,
       {473,30},
       {atom,{473,30},add_error},
       [{block,0,
         [{tuple,
           {473,40},
           [{atom,{473,41},not_var},
            {'case',
             {473,49},
             {var,{473,49},'St'},
             [{clause,
               [{generated,true},{location,{473,49}}],
               [{tuple,
                 [{generated,true},{location,{473,49}}],
                 [{atom,{473,49},lint},
                  {var,{473,49},'_'},
                  {var,{473,49},rec21},
                  {var,{473,49},'_'},
                  {var,{473,49},'_'}]}],
               [],
               [{var,{473,49},rec21}]},
              {clause,
               [{generated,true},{location,{473,49}}],
               [{var,{473,49},rec21}],
               [],
               [{call,
                 [{generated,true},{location,{473,49}}],
                 {remote,
                  [{generated,true},{location,{473,49}}],
                  {atom,[{generated,true},{location,{473,49}}],erlang},
                  {atom,[{generated,true},{location,{473,49}}],error}},
                 [{tuple,
                   [{generated,true},{location,{473,49}}],
                   [{atom,[{generated,true},{location,{473,49}}],badrecord},
                    {var,{473,49},rec21}]}]}]}]}]}]},
        {var,{473,64},'St'}]}]}]}]}.
{function,{478,1},
          variable_list,2,
          [{clause,{478,1},
                   [{var,{478,1},'_'},{var,{478,1},'_'}],
                   [[{call,{478,1},
                           {remote,{478,1},
                                   {atom,{478,1},fake},
                                   {atom,{478,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,478,207},{atom,{478,1},ignore}]},
           {clause,{478,1},
                   [{var,{478,15},'Vs'},{var,{478,19},'St'}],
                   [],
                   [{debug_line,478,208},
                    {call,{478,26},
                          {atom,{478,26},variable_list},
                          [{var,{478,40},'Vs'},
                           {nil,{478,44}},
                           {var,{478,48},'St'}]}]}]}.
{function,
 {480,1},
 variable_list,3,
 [{clause,
   {480,1},
   [{var,{480,1},'_'},{var,{480,1},'_'},{var,{480,1},'_'}],
   [[{call,
      {480,1},
      {remote,{480,1},{atom,{480,1},fake},{atom,{480,1},is_beam_bif_info}},
      []}]],
   [{debug_line,480,209},{atom,{480,1},ignore}]},
  {clause,
   {480,1},
   [{var,{480,15},'Vs'},{var,{480,19},'Ps'},{var,{480,23},'St'}],
   [],
   [{debug_line,481,210},
    {call,
     {481,5},
     {remote,{481,5},{atom,{481,5},lists},{atom,{481,5},foldl}},
     [{block,0,
       [{'fun',
         {481,11},
         {clauses,
          [{clause,
            {481,15},
            [{var,{481,16},'V'},
             {tuple,{481,19},[{var,{481,20},'Ps0'},{var,{481,24},'St0'}]}],
            [],
            [{debug_line,482,211},
             {match,
              {482,5},
              {tuple,{482,5},[{var,{482,6},'Vvs'},{var,{482,10},'St1'}]},
              {call,
               {482,17},
               {atom,{482,17},variable},
               [{var,{482,26},'V'},
                {var,{482,29},'Ps0'},
                {var,{482,34},'St0'}]}},
             {debug_line,483,212},
             {tuple,
              {483,5},
              [{call,
                {483,6},
                {remote,{483,6},{atom,{483,6},ordsets},{atom,{483,6},union}},
                [{var,{483,12},'Vvs'},{var,{483,17},'Ps0'}]},
               {var,{483,22},'St1'}]}]}]}}]},
      {block,0,
       [{debug_line,484,213},
        {tuple,{484,9},[{var,{484,10},'Ps'},{var,{484,13},'St'}]}]},
      {var,{484,18},'Vs'}]}]}]}.
{function,
 {495,1},
 pattern,4,
 [{clause,
   {495,1},
   [{var,{495,1},'_'},{var,{495,1},'_'},{var,{495,1},'_'},{var,{495,1},'_'}],
   [[{call,
      {495,1},
      {remote,{495,1},{atom,{495,1},fake},{atom,{495,1},is_beam_bif_info}},
      []}]],
   [{debug_line,495,214},{atom,{495,1},ignore}]},
  {clause,
   {495,1},
   [{tuple,
     {495,9},
     [{atom,{495,9},c_var},{var,{495,9},'_'},{var,{495,21},'N'}]},
    {var,{495,25},'Def'},
    {var,{495,30},'Ps'},
    {var,{495,34},'St'}],
   [],
   [{debug_line,496,215},
    {call,
     {496,5},
     {atom,{496,5},pat_var},
     [{var,{496,13},'N'},
      {var,{496,16},'Def'},
      {var,{496,21},'Ps'},
      {var,{496,25},'St'}]}]},
  {clause,
   {497,1},
   [{tuple,
     {497,9},
     [{atom,{497,9},c_literal},{var,{497,9},'_'},{var,{497,9},'_'}]},
    {var,{497,23},'_Def'},
    {var,{497,29},'Ps'},
    {var,{497,33},'St'}],
   [],
   [{debug_line,497,216},
    {tuple,{497,40},[{var,{497,41},'Ps'},{var,{497,44},'St'}]}]},
  {clause,
   {498,1},
   [{tuple,
     {498,9},
     [{atom,{498,9},c_cons},
      {var,{498,9},'_'},
      {var,{498,20},'H'},
      {var,{498,25},'T'}]},
    {var,{498,29},'Def'},
    {var,{498,34},'Ps'},
    {var,{498,38},'St'}],
   [],
   [{debug_line,499,217},
    {call,
     {499,5},
     {atom,{499,5},pattern_list},
     [{block,0,
       [{cons,
         {499,18},
         {var,{499,19},'H'},
         {cons,{499,21},{var,{499,21},'T'},{nil,{499,22}}}}]},
      {var,{499,25},'Def'},
      {var,{499,30},'Ps'},
      {var,{499,34},'St'}]}]},
  {clause,
   {500,1},
   [{tuple,
     {500,9},
     [{atom,{500,9},c_tuple},{var,{500,9},'_'},{var,{500,21},'Es'}]},
    {var,{500,26},'Def'},
    {var,{500,31},'Ps'},
    {var,{500,35},'St'}],
   [],
   [{debug_line,501,218},
    {call,
     {501,5},
     {atom,{501,5},pattern_list},
     [{var,{501,18},'Es'},
      {var,{501,22},'Def'},
      {var,{501,27},'Ps'},
      {var,{501,31},'St'}]}]},
  {clause,
   {502,1},
   [{tuple,
     {502,9},
     [{atom,{502,9},c_map},
      {var,{502,9},'_'},
      {var,{502,9},'_'},
      {var,{502,19},'Es'},
      {var,{502,9},'_'}]},
    {var,{502,24},'Def'},
    {var,{502,29},'Ps'},
    {var,{502,33},'St'}],
   [],
   [{debug_line,503,219},
    {call,
     {503,5},
     {atom,{503,5},pattern_list},
     [{var,{503,18},'Es'},
      {var,{503,22},'Def'},
      {var,{503,27},'Ps'},
      {var,{503,31},'St'}]}]},
  {clause,
   {504,1},
   [{tuple,
     {504,9},
     [{atom,{504,9},c_map_pair},
      {var,{504,9},'_'},
      {tuple,
       {504,24},
       [{atom,{504,24},c_literal},{var,{504,24},'_'},{atom,{504,39},exact}]},
      {var,{504,50},'K'},
      {var,{504,56},'V'}]},
    {var,{504,60},'Def'},
    {var,{504,65},'Ps'},
    {var,{504,69},'St'}],
   [],
   [{debug_line,506,220},
    {call,
     {506,5},
     {atom,{506,5},pat_map_expr},
     [{var,{506,18},'K'},{var,{506,21},'Def'},{var,{506,26},'St'}]},
    {debug_line,507,221},
    {call,
     {507,5},
     {atom,{507,5},pattern_list},
     [{block,0,[{cons,{507,18},{var,{507,19},'V'},{nil,{507,20}}}]},
      {var,{507,22},'Def'},
      {var,{507,26},'Ps'},
      {var,{507,29},'St'}]}]},
  {clause,
   {508,1},
   [{tuple,
     {508,9},
     [{atom,{508,9},c_binary},{var,{508,9},'_'},{var,{508,28},'Ss'}]},
    {var,{508,33},'Def'},
    {var,{508,38},'Ps'},
    {var,{508,42},'St0'}],
   [],
   [{debug_line,509,222},
    {match,
     {509,5},
     {var,{509,5},'St'},
     {call,
      {509,10},
      {atom,{509,10},pat_bin_tail_check},
      [{var,{509,29},'Ss'},{var,{509,33},'St0'}]}},
    {debug_line,510,223},
    {call,
     {510,5},
     {atom,{510,5},pat_bin},
     [{var,{510,13},'Ss'},
      {var,{510,17},'Def'},
      {var,{510,22},'Ps'},
      {var,{510,26},'St'}]}]},
  {clause,
   {511,1},
   [{tuple,
     {511,9},
     [{atom,{511,9},c_alias},
      {var,{511,9},'_'},
      {var,{511,22},'V'},
      {var,{511,28},'P'}]},
    {var,{511,32},'Def'},
    {var,{511,37},'Ps'},
    {var,{511,41},'St0'}],
   [],
   [{debug_line,512,224},
    {match,
     {512,5},
     {tuple,{512,5},[{var,{512,6},'Vvs'},{var,{512,10},'St1'}]},
     {call,
      {512,17},
      {atom,{512,17},variable},
      [{var,{512,26},'V'},{var,{512,29},'Ps'},{var,{512,33},'St0'}]}},
    {debug_line,513,225},
    {call,
     {513,5},
     {atom,{513,5},pattern},
     [{var,{513,13},'P'},
      {var,{513,16},'Def'},
      {block,0,
       [{call,
         {513,21},
         {remote,{513,21},{atom,{513,21},ordsets},{atom,{513,21},union}},
         [{var,{513,27},'Vvs'},{var,{513,32},'Ps'}]}]},
      {var,{513,37},'St1'}]}]},
  {clause,
   {514,1},
   [{var,{514,9},'_Other'},
    {var,{514,17},'_'},
    {var,{514,20},'Ps'},
    {var,{514,24},'St'}],
   [],
   [{debug_line,516,226},
    {tuple,
     {516,5},
     [{var,{516,6},'Ps'},
      {call,
       {516,9},
       {atom,{516,9},add_error},
       [{block,0,
         [{tuple,
           {516,19},
           [{atom,{516,20},not_pattern},
            {'case',
             {516,32},
             {var,{516,32},'St'},
             [{clause,
               [{generated,true},{location,{516,32}}],
               [{tuple,
                 [{generated,true},{location,{516,32}}],
                 [{atom,{516,32},lint},
                  {var,{516,32},'_'},
                  {var,{516,32},rec22},
                  {var,{516,32},'_'},
                  {var,{516,32},'_'}]}],
               [],
               [{var,{516,32},rec22}]},
              {clause,
               [{generated,true},{location,{516,32}}],
               [{var,{516,32},rec22}],
               [],
               [{call,
                 [{generated,true},{location,{516,32}}],
                 {remote,
                  [{generated,true},{location,{516,32}}],
                  {atom,[{generated,true},{location,{516,32}}],erlang},
                  {atom,[{generated,true},{location,{516,32}}],error}},
                 [{tuple,
                   [{generated,true},{location,{516,32}}],
                   [{atom,[{generated,true},{location,{516,32}}],badrecord},
                    {var,{516,32},rec22}]}]}]}]}]}]},
        {var,{516,47},'St'}]}]}]}]}.
{function,
 {518,1},
 pat_var,4,
 [{clause,
   {518,1},
   [{var,{518,1},'_'},{var,{518,1},'_'},{var,{518,1},'_'},{var,{518,1},'_'}],
   [[{call,
      {518,1},
      {remote,{518,1},{atom,{518,1},fake},{atom,{518,1},is_beam_bif_info}},
      []}]],
   [{debug_line,518,227},{atom,{518,1},ignore}]},
  {clause,
   {518,1},
   [{var,{518,9},'N'},
    {var,{518,12},'_Def'},
    {var,{518,18},'Ps'},
    {var,{518,22},'St'}],
   [],
   [{debug_line,519,228},
    {'case',
     {519,5},
     {call,
      {519,10},
      {remote,{519,10},{atom,{519,10},ordsets},{atom,{519,10},is_element}},
      [{var,{519,21},'N'},{var,{519,24},'Ps'}]},
     [{clause,
       {520,2},
       [{atom,{520,2},true}],
       [],
       [{debug_line,520,229},
        {tuple,
         {520,10},
         [{var,{520,11},'Ps'},
          {call,
           {520,14},
           {atom,{520,14},add_error},
           [{block,0,
             [{tuple,
               {520,24},
               [{atom,{520,25},duplicate_var},
                {var,{520,39},'N'},
                {'case',
                 {520,41},
                 {var,{520,41},'St'},
                 [{clause,
                   [{generated,true},{location,{520,41}}],
                   [{tuple,
                     [{generated,true},{location,{520,41}}],
                     [{atom,{520,41},lint},
                      {var,{520,41},'_'},
                      {var,{520,41},rec23},
                      {var,{520,41},'_'},
                      {var,{520,41},'_'}]}],
                   [],
                   [{var,{520,41},rec23}]},
                  {clause,
                   [{generated,true},{location,{520,41}}],
                   [{var,{520,41},rec23}],
                   [],
                   [{call,
                     [{generated,true},{location,{520,41}}],
                     {remote,
                      [{generated,true},{location,{520,41}}],
                      {atom,[{generated,true},{location,{520,41}}],erlang},
                      {atom,[{generated,true},{location,{520,41}}],error}},
                     [{tuple,
                       [{generated,true},{location,{520,41}}],
                       [{atom,
                         [{generated,true},{location,{520,41}}],
                         badrecord},
                        {var,{520,41},rec23}]}]}]}]}]}]},
            {var,{520,56},'St'}]}]}]},
      {clause,
       {521,2},
       [{atom,{521,2},false}],
       [],
       [{debug_line,521,230},
        {tuple,
         {521,11},
         [{call,
           {521,12},
           {remote,
            {521,12},
            {atom,{521,12},ordsets},
            {atom,{521,12},add_element}},
           [{var,{521,24},'N'},{var,{521,27},'Ps'}]},
          {var,{521,31},'St'}]}]}]}]}]}.
{function,
    {526,1},
    pat_bin,4,
    [{clause,
         {526,1},
         [{var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'}],
         [[{call,
               {526,1},
               {remote,
                   {526,1},
                   {atom,{526,1},fake},
                   {atom,{526,1},is_beam_bif_info}},
               []}]],
         [{debug_line,526,231},{atom,{526,1},ignore}]},
     {clause,
         {526,1},
         [{var,{526,9},'Es'},
          {var,{526,13},'Def'},
          {var,{526,18},'Ps0'},
          {var,{526,23},'St0'}],
         [],
         [{debug_line,527,232},
          {call,
              {527,5},
              {remote,{527,5},{atom,{527,5},lists},{atom,{527,5},foldl}},
              [{block,0,
                   [{'fun',
                        {527,11},
                        {clauses,
                            [{clause,
                                 {527,15},
                                 [{var,{527,16},'E'},
                                  {tuple,
                                      {527,19},
                                      [{var,{527,20},'Ps'},
                                       {var,{527,23},'St'}]}],
                                 [],
                                 [{debug_line,528,233},
                                  {call,
                                      {528,19},
                                      {atom,{528,19},pat_segment},
                                      [{var,{528,31},'E'},
                                       {var,{528,34},'Def'},
                                       {var,{528,39},'Ps'},
                                       {var,{528,43},'St'}]}]}]}}]},
               {block,0,
                   [{debug_line,529,234},
                    {tuple,
                        {529,16},
                        [{var,{529,17},'Ps0'},{var,{529,21},'St0'}]}]},
               {var,{529,27},'Es'}]}]}]}.
{function,
 {531,1},
 pat_segment,4,
 [{clause,
   {531,1},
   [{var,{531,1},'_'},{var,{531,1},'_'},{var,{531,1},'_'},{var,{531,1},'_'}],
   [[{call,
      {531,1},
      {remote,{531,1},{atom,{531,1},fake},{atom,{531,1},is_beam_bif_info}},
      []}]],
   [{debug_line,531,235},{atom,{531,1},ignore}]},
  {clause,
   {531,1},
   [{tuple,
     {531,13},
     [{atom,{531,13},c_bitstr},
      {var,{531,13},'_'},
      {var,{531,27},'V'},
      {var,{531,34},'S'},
      {var,{531,13},'_'},
      {var,{531,41},'T'},
      {var,{531,13},'_'}]},
    {var,{531,45},'Def'},
    {var,{531,50},'Ps0'},
    {var,{531,55},'St0'}],
   [],
   [{debug_line,532,236},
    {match,
     {532,5},
     {var,{532,5},'St1'},
     {call,
      {532,11},
      {atom,{532,11},pat_bit_expr},
      [{var,{532,24},'S'},
       {var,{532,27},'T'},
       {var,{532,30},'Def'},
       {var,{532,35},'St0'}]}},
    {debug_line,533,237},
    {call,
     {533,5},
     {atom,{533,5},pattern},
     [{var,{533,13},'V'},
      {var,{533,16},'Def'},
      {var,{533,21},'Ps0'},
      {var,{533,26},'St1'}]}]},
  {clause,
   {534,1},
   [{var,{534,13},'_'},
    {var,{534,16},'_'},
    {var,{534,19},'Ps'},
    {var,{534,23},'St'}],
   [],
   [{debug_line,535,238},
    {tuple,
     {535,5},
     [{var,{535,6},'Ps'},
      {call,
       {535,9},
       {atom,{535,9},add_error},
       [{block,0,
         [{tuple,
           {535,19},
           [{atom,{535,20},not_bs_pattern},
            {'case',
             {535,35},
             {var,{535,35},'St'},
             [{clause,
               [{generated,true},{location,{535,35}}],
               [{tuple,
                 [{generated,true},{location,{535,35}}],
                 [{atom,{535,35},lint},
                  {var,{535,35},'_'},
                  {var,{535,35},rec24},
                  {var,{535,35},'_'},
                  {var,{535,35},'_'}]}],
               [],
               [{var,{535,35},rec24}]},
              {clause,
               [{generated,true},{location,{535,35}}],
               [{var,{535,35},rec24}],
               [],
               [{call,
                 [{generated,true},{location,{535,35}}],
                 {remote,
                  [{generated,true},{location,{535,35}}],
                  {atom,[{generated,true},{location,{535,35}}],erlang},
                  {atom,[{generated,true},{location,{535,35}}],error}},
                 [{tuple,
                   [{generated,true},{location,{535,35}}],
                   [{atom,[{generated,true},{location,{535,35}}],badrecord},
                    {var,{535,35},rec24}]}]}]}]}]}]},
        {var,{535,50},'St'}]}]}]}]}.
{function,
 {541,1},
 pat_bin_tail_check,2,
 [{clause,
   {541,1},
   [{var,{541,1},'_'},{var,{541,1},'_'}],
   [[{call,
      {541,1},
      {remote,{541,1},{atom,{541,1},fake},{atom,{541,1},is_beam_bif_info}},
      []}]],
   [{debug_line,541,239},{atom,{541,1},ignore}]},
  {clause,
   {541,1},
   [{cons,
     {541,20},
     {tuple,
      {541,21},
      [{atom,{541,21},c_bitstr},
       {var,{541,21},'_'},
       {var,{541,21},'_'},
       {tuple,
        {541,36},
        [{atom,{541,36},c_literal},{var,{541,36},'_'},{atom,{541,51},all}]},
       {var,{541,21},'_'},
       {var,{541,21},'_'},
       {var,{541,21},'_'}]},
     {nil,{541,56}}},
    {var,{541,59},'St'}],
   [],
   [{debug_line,543,240},{var,{543,5},'St'}]},
  {clause,
   {544,1},
   [{cons,
     {544,20},
     {tuple,
      {544,21},
      [{atom,{544,21},c_bitstr},
       {var,{544,21},'_'},
       {var,{544,21},'_'},
       {tuple,
        {544,36},
        [{atom,{544,36},c_literal},{var,{544,36},'_'},{atom,{544,51},all}]},
       {var,{544,21},'_'},
       {var,{544,21},'_'},
       {var,{544,21},'_'}]},
     {var,{544,57},'_'}},
    {var,{544,61},'St'}],
   [],
   [{debug_line,545,241},
    {call,
     {545,5},
     {atom,{545,5},add_error},
     [{block,0,
       [{tuple,
         {545,15},
         [{atom,{545,16},tail_segment_not_at_end},
          {'case',
           {545,40},
           {var,{545,40},'St'},
           [{clause,
             [{generated,true},{location,{545,40}}],
             [{tuple,
               [{generated,true},{location,{545,40}}],
               [{atom,{545,40},lint},
                {var,{545,40},'_'},
                {var,{545,40},rec25},
                {var,{545,40},'_'},
                {var,{545,40},'_'}]}],
             [],
             [{var,{545,40},rec25}]},
            {clause,
             [{generated,true},{location,{545,40}}],
             [{var,{545,40},rec25}],
             [],
             [{call,
               [{generated,true},{location,{545,40}}],
               {remote,
                [{generated,true},{location,{545,40}}],
                {atom,[{generated,true},{location,{545,40}}],erlang},
                {atom,[{generated,true},{location,{545,40}}],error}},
               [{tuple,
                 [{generated,true},{location,{545,40}}],
                 [{atom,[{generated,true},{location,{545,40}}],badrecord},
                  {var,{545,40},rec25}]}]}]}]}]}]},
      {var,{545,55},'St'}]}]},
  {clause,
   {546,1},
   [{cons,{546,20},{var,{546,21},'_'},{var,{546,23},'Ss'}},
    {var,{546,28},'St'}],
   [],
   [{debug_line,547,242},
    {call,
     {547,5},
     {atom,{547,5},pat_bin_tail_check},
     [{var,{547,24},'Ss'},{var,{547,28},'St'}]}]},
  {clause,
   {548,1},
   [{nil,{548,20}},{var,{548,24},'St'}],
   [],
   [{debug_line,548,243},{var,{548,31},'St'}]}]}.
{function,
 {554,1},
 pat_bit_expr,4,
 [{clause,
   {554,1},
   [{var,{554,1},'_'},{var,{554,1},'_'},{var,{554,1},'_'},{var,{554,1},'_'}],
   [[{call,
      {554,1},
      {remote,{554,1},{atom,{554,1},fake},{atom,{554,1},is_beam_bif_info}},
      []}]],
   [{debug_line,554,244},{atom,{554,1},ignore}]},
  {clause,
   {554,1},
   [{tuple,
     {554,14},
     [{atom,{554,14},c_var},{var,{554,14},'_'},{var,{554,26},'N'}]},
    {var,{554,30},'_'},
    {var,{554,33},'Def'},
    {var,{554,38},'St'}],
   [],
   [{debug_line,554,245},
    {call,
     {554,45},
     {atom,{554,45},expr_var},
     [{var,{554,54},'N'},{var,{554,57},'Def'},{var,{554,62},'St'}]}]},
  {clause,
   {555,1},
   [{tuple,
     {555,14},
     [{atom,{555,14},c_literal},{var,{555,14},'_'},{var,{555,14},'_'}]},
    {var,{555,28},'_'},
    {var,{555,31},'_'},
    {var,{555,34},'St'}],
   [],
   [{debug_line,555,246},{var,{555,41},'St'}]},
  {clause,
   {556,1},
   [{tuple,
     {556,14},
     [{atom,{556,14},c_binary},{var,{556,14},'_'},{var,{556,14},'_'}]},
    {var,{556,27},'_'},
    {var,{556,30},'_Def'},
    {var,{556,36},'St'}],
   [],
   [{debug_line,560,247},{var,{560,5},'St'}]},
  {clause,
   {561,1},
   [{var,{561,14},'_'},
    {var,{561,17},'_'},
    {var,{561,20},'_'},
    {var,{561,23},'St'}],
   [],
   [{debug_line,562,248},
    {call,
     {562,5},
     {atom,{562,5},add_error},
     [{block,0,
       [{tuple,
         {562,15},
         [{atom,{562,16},illegal_expr},
          {'case',
           {562,29},
           {var,{562,29},'St'},
           [{clause,
             [{generated,true},{location,{562,29}}],
             [{tuple,
               [{generated,true},{location,{562,29}}],
               [{atom,{562,29},lint},
                {var,{562,29},'_'},
                {var,{562,29},rec26},
                {var,{562,29},'_'},
                {var,{562,29},'_'}]}],
             [],
             [{var,{562,29},rec26}]},
            {clause,
             [{generated,true},{location,{562,29}}],
             [{var,{562,29},rec26}],
             [],
             [{call,
               [{generated,true},{location,{562,29}}],
               {remote,
                [{generated,true},{location,{562,29}}],
                {atom,[{generated,true},{location,{562,29}}],erlang},
                {atom,[{generated,true},{location,{562,29}}],error}},
               [{tuple,
                 [{generated,true},{location,{562,29}}],
                 [{atom,[{generated,true},{location,{562,29}}],badrecord},
                  {var,{562,29},rec26}]}]}]}]}]}]},
      {var,{562,44},'St'}]}]}]}.
{function,
 {564,1},
 pat_map_expr,3,
 [{clause,
   {564,1},
   [{var,{564,1},'_'},{var,{564,1},'_'},{var,{564,1},'_'}],
   [[{call,
      {564,1},
      {remote,{564,1},{atom,{564,1},fake},{atom,{564,1},is_beam_bif_info}},
      []}]],
   [{debug_line,564,249},{atom,{564,1},ignore}]},
  {clause,
   {564,1},
   [{tuple,
     {564,14},
     [{atom,{564,14},c_var},{var,{564,14},'_'},{var,{564,26},'N'}]},
    {var,{564,30},'Def'},
    {var,{564,35},'St'}],
   [],
   [{debug_line,564,250},
    {call,
     {564,42},
     {atom,{564,42},expr_var},
     [{var,{564,51},'N'},{var,{564,54},'Def'},{var,{564,59},'St'}]}]},
  {clause,
   {565,1},
   [{tuple,
     {565,14},
     [{atom,{565,14},c_literal},{var,{565,14},'_'},{var,{565,14},'_'}]},
    {var,{565,28},'_Def'},
    {var,{565,34},'St'}],
   [],
   [{debug_line,565,251},{var,{565,41},'St'}]},
  {clause,
   {566,1},
   [{var,{566,14},'_'},{var,{566,17},'_'},{var,{566,20},'St'}],
   [],
   [{debug_line,566,252},
    {call,
     {566,27},
     {atom,{566,27},add_error},
     [{block,0,
       [{tuple,
         {566,37},
         [{atom,{566,38},illegal_expr},
          {'case',
           {566,51},
           {var,{566,51},'St'},
           [{clause,
             [{generated,true},{location,{566,51}}],
             [{tuple,
               [{generated,true},{location,{566,51}}],
               [{atom,{566,51},lint},
                {var,{566,51},'_'},
                {var,{566,51},rec27},
                {var,{566,51},'_'},
                {var,{566,51},'_'}]}],
             [],
             [{var,{566,51},rec27}]},
            {clause,
             [{generated,true},{location,{566,51}}],
             [{var,{566,51},rec27}],
             [],
             [{call,
               [{generated,true},{location,{566,51}}],
               {remote,
                [{generated,true},{location,{566,51}}],
                {atom,[{generated,true},{location,{566,51}}],erlang},
                {atom,[{generated,true},{location,{566,51}}],error}},
               [{tuple,
                 [{generated,true},{location,{566,51}}],
                 [{atom,[{generated,true},{location,{566,51}}],badrecord},
                  {var,{566,51},rec27}]}]}]}]}]}]},
      {var,{566,66},'St'}]}]}]}.
{function,{571,1},
          pattern_list,3,
          [{clause,{571,1},
                   [{var,{571,1},'_'},{var,{571,1},'_'},{var,{571,1},'_'}],
                   [[{call,{571,1},
                           {remote,{571,1},
                                   {atom,{571,1},fake},
                                   {atom,{571,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,571,253},{atom,{571,1},ignore}]},
           {clause,{571,1},
                   [{var,{571,14},'Pats'},
                    {var,{571,20},'Def'},
                    {var,{571,25},'St'}],
                   [],
                   [{debug_line,571,254},
                    {call,{571,32},
                          {atom,{571,32},pattern_list},
                          [{var,{571,45},'Pats'},
                           {var,{571,51},'Def'},
                           {nil,{571,56}},
                           {var,{571,60},'St'}]}]}]}.
{function,
    {573,1},
    pattern_list,4,
    [{clause,
         {573,1},
         [{var,{573,1},'_'},
          {var,{573,1},'_'},
          {var,{573,1},'_'},
          {var,{573,1},'_'}],
         [[{call,
               {573,1},
               {remote,
                   {573,1},
                   {atom,{573,1},fake},
                   {atom,{573,1},is_beam_bif_info}},
               []}]],
         [{debug_line,573,255},{atom,{573,1},ignore}]},
     {clause,
         {573,1},
         [{var,{573,14},'Pats'},
          {var,{573,20},'Def'},
          {var,{573,25},'Ps0'},
          {var,{573,30},'St0'}],
         [],
         [{debug_line,574,256},
          {call,
              {574,5},
              {remote,{574,5},{atom,{574,5},lists},{atom,{574,5},foldl}},
              [{block,0,
                   [{'fun',
                        {574,11},
                        {clauses,
                            [{clause,
                                 {574,15},
                                 [{var,{574,16},'P'},
                                  {tuple,
                                      {574,19},
                                      [{var,{574,20},'Ps'},
                                       {var,{574,23},'St'}]}],
                                 [],
                                 [{call,
                                      {574,31},
                                      {atom,{574,31},pattern},
                                      [{var,{574,39},'P'},
                                       {var,{574,42},'Def'},
                                       {var,{574,47},'Ps'},
                                       {var,{574,51},'St'}]}]}]}}]},
               {block,0,
                   [{tuple,
                        {574,60},
                        [{var,{574,61},'Ps0'},{var,{574,65},'St0'}]}]},
               {var,{574,71},'Pats'}]}]}]}.
{function,
 {579,1},
 pattern_match,3,
 [{clause,
   {579,1},
   [{var,{579,1},'_'},{var,{579,1},'_'},{var,{579,1},'_'}],
   [[{call,
      {579,1},
      {remote,{579,1},{atom,{579,1},fake},{atom,{579,1},is_beam_bif_info}},
      []}]],
   [{debug_line,579,257},{atom,{579,1},ignore}]},
  {clause,
   {579,1},
   [{var,{579,15},'N'},{var,{579,18},'N'},{var,{579,21},'St'}],
   [],
   [{debug_line,579,258},{var,{579,28},'St'}]},
  {clause,
   {580,1},
   [{var,{580,15},'_Req'},{var,{580,21},'_Sup'},{var,{580,27},'St'}],
   [],
   [{debug_line,581,259},
    {call,
     {581,5},
     {atom,{581,5},add_error},
     [{block,0,
       [{tuple,
         {581,15},
         [{atom,{581,16},pattern_mismatch},
          {'case',
           {581,33},
           {var,{581,33},'St'},
           [{clause,
             [{generated,true},{location,{581,33}}],
             [{tuple,
               [{generated,true},{location,{581,33}}],
               [{atom,{581,33},lint},
                {var,{581,33},'_'},
                {var,{581,33},rec28},
                {var,{581,33},'_'},
                {var,{581,33},'_'}]}],
             [],
             [{var,{581,33},rec28}]},
            {clause,
             [{generated,true},{location,{581,33}}],
             [{var,{581,33},rec28}],
             [],
             [{call,
               [{generated,true},{location,{581,33}}],
               {remote,
                [{generated,true},{location,{581,33}}],
                {atom,[{generated,true},{location,{581,33}}],erlang},
                {atom,[{generated,true},{location,{581,33}}],error}},
               [{tuple,
                 [{generated,true},{location,{581,33}}],
                 [{atom,[{generated,true},{location,{581,33}}],badrecord},
                  {var,{581,33},rec28}]}]}]}]}]}]},
      {var,{581,48},'St'}]}]}]}.
{function,
 {586,1},
 return_match,3,
 [{clause,
   {586,1},
   [{var,{586,1},'_'},{var,{586,1},'_'},{var,{586,1},'_'}],
   [[{call,
      {586,1},
      {remote,{586,1},{atom,{586,1},fake},{atom,{586,1},is_beam_bif_info}},
      []}]],
   [{debug_line,586,260},{atom,{586,1},ignore}]},
  {clause,
   {586,1},
   [{atom,{586,14},any},{var,{586,19},'_Sup'},{var,{586,25},'St'}],
   [],
   [{debug_line,586,261},{var,{586,32},'St'}]},
  {clause,
   {587,1},
   [{var,{587,14},'N'},{var,{587,17},'N'},{var,{587,20},'St'}],
   [],
   [{debug_line,587,262},{var,{587,27},'St'}]},
  {clause,
   {588,1},
   [{var,{588,14},'_Req'},{var,{588,20},'_Sup'},{var,{588,26},'St'}],
   [],
   [{debug_line,589,263},
    {call,
     {589,5},
     {atom,{589,5},add_error},
     [{block,0,
       [{tuple,
         {589,15},
         [{atom,{589,16},return_mismatch},
          {'case',
           {589,32},
           {var,{589,32},'St'},
           [{clause,
             [{generated,true},{location,{589,32}}],
             [{tuple,
               [{generated,true},{location,{589,32}}],
               [{atom,{589,32},lint},
                {var,{589,32},'_'},
                {var,{589,32},rec29},
                {var,{589,32},'_'},
                {var,{589,32},'_'}]}],
             [],
             [{var,{589,32},rec29}]},
            {clause,
             [{generated,true},{location,{589,32}}],
             [{var,{589,32},rec29}],
             [],
             [{call,
               [{generated,true},{location,{589,32}}],
               {remote,
                [{generated,true},{location,{589,32}}],
                {atom,[{generated,true},{location,{589,32}}],erlang},
                {atom,[{generated,true},{location,{589,32}}],error}},
               [{tuple,
                 [{generated,true},{location,{589,32}}],
                 [{atom,[{generated,true},{location,{589,32}}],badrecord},
                  {var,{589,32},rec29}]}]}]}]}]}]},
      {var,{589,47},'St'}]}]}]}.
{function,
 {593,1},
 arg_match,3,
 [{clause,
   {593,1},
   [{var,{593,1},'_'},{var,{593,1},'_'},{var,{593,1},'_'}],
   [[{call,
      {593,1},
      {remote,{593,1},{atom,{593,1},fake},{atom,{593,1},is_beam_bif_info}},
      []}]],
   [{debug_line,593,264},{atom,{593,1},ignore}]},
  {clause,
   {593,1},
   [{var,{593,11},'N'},{var,{593,14},'N'},{var,{593,17},'St'}],
   [],
   [{debug_line,593,265},{var,{593,24},'St'}]},
  {clause,
   {594,1},
   [{var,{594,11},'_Req'},{var,{594,17},'_Sup'},{var,{594,23},'St'}],
   [],
   [{debug_line,595,266},
    {call,
     {595,5},
     {atom,{595,5},add_error},
     [{block,0,
       [{tuple,
         {595,15},
         [{atom,{595,16},arg_mismatch},
          {'case',
           {595,29},
           {var,{595,29},'St'},
           [{clause,
             [{generated,true},{location,{595,29}}],
             [{tuple,
               [{generated,true},{location,{595,29}}],
               [{atom,{595,29},lint},
                {var,{595,29},'_'},
                {var,{595,29},rec30},
                {var,{595,29},'_'},
                {var,{595,29},'_'}]}],
             [],
             [{var,{595,29},rec30}]},
            {clause,
             [{generated,true},{location,{595,29}}],
             [{var,{595,29},rec30}],
             [],
             [{call,
               [{generated,true},{location,{595,29}}],
               {remote,
                [{generated,true},{location,{595,29}}],
                {atom,[{generated,true},{location,{595,29}}],erlang},
                {atom,[{generated,true},{location,{595,29}}],error}},
               [{tuple,
                 [{generated,true},{location,{595,29}}],
                 [{atom,[{generated,true},{location,{595,29}}],badrecord},
                  {var,{595,29},rec30}]}]}]}]}]}]},
      {var,{595,44},'St'}]}]}]}.
{attribute,
    {598,2},
    spec,
    {{is_simple_top,1},
     [{type,
          {598,20},
          'fun',
          [{type,
               {598,20},
               product,
               [{remote_type,
                    {598,21},
                    [{atom,{598,21},cerl},{atom,{598,26},cerl},[]]}]},
           {type,{598,37},boolean,[]}]}]}}.
{function,{600,1},
          is_simple_top,1,
          [{clause,{600,1},
                   [{var,{600,1},'_'}],
                   [[{call,{600,1},
                           {remote,{600,1},
                                   {atom,{600,1},fake},
                                   {atom,{600,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,600,267},{atom,{600,1},ignore}]},
           {clause,{600,1},
                   [{tuple,{600,15},
                           [{atom,{600,15},c_var},
                            {var,{600,15},'_'},
                            {var,{600,15},'_'}]}],
                   [],
                   [{debug_line,600,268},{atom,{600,28},true}]},
           {clause,{601,1},
                   [{tuple,{601,15},
                           [{atom,{601,15},c_cons},
                            {var,{601,15},'_'},
                            {var,{601,15},'_'},
                            {var,{601,15},'_'}]}],
                   [],
                   [{debug_line,601,269},{atom,{601,29},true}]},
           {clause,{602,1},
                   [{tuple,{602,15},
                           [{atom,{602,15},c_tuple},
                            {var,{602,15},'_'},
                            {var,{602,15},'_'}]}],
                   [],
                   [{debug_line,602,270},{atom,{602,30},true}]},
           {clause,{603,1},
                   [{tuple,{603,15},
                           [{atom,{603,15},c_binary},
                            {var,{603,15},'_'},
                            {var,{603,15},'_'}]}],
                   [],
                   [{debug_line,603,271},{atom,{603,31},true}]},
           {clause,{604,1},
                   [{tuple,{604,15},
                           [{atom,{604,15},c_literal},
                            {var,{604,15},'_'},
                            {var,{604,15},'_'}]}],
                   [],
                   [{debug_line,604,272},{atom,{604,32},true}]},
           {clause,{605,1},
                   [{var,{605,15},'_'}],
                   [],
                   [{debug_line,605,273},{atom,{605,21},false}]}]}.
{eof,{606,1}}.
