{attribute,{1,1},file,{"beam_clean.erl",1}}.
{attribute,{22,2},module,beam_clean}.
{attribute,{25,2},export,[{module,2}]}.
{attribute,{27,2},import,{lists,[{reverse,1}]}}.
{attribute,
    {29,2},
    spec,
    {{module,2},
     [{type,
          {29,13},
          'fun',
          [{type,
               {29,13},
               product,
               [{remote_type,
                    {29,14},
                    [{atom,{29,14},beam_utils},{atom,{29,25},module_code},[]]},
                {type,
                    {29,40},
                    list,
                    [{remote_type,
                         {29,41},
                         [{atom,{29,41},compile},
                          {atom,{29,49},option},
                          []]}]}]},
           {type,
               {30,21},
               tuple,
               [{atom,{30,22},ok},
                {remote_type,
                    {30,27},
                    [{atom,{30,27},beam_utils},
                     {atom,{30,38},module_code},
                     []]}]}]}]}}.
{function,
    {32,1},
    module,2,
    [{clause,
         {32,1},
         [{var,{32,1},'_'},{var,{32,1},'_'}],
         [[{call,
               {32,1},
               {remote,
                   {32,1},
                   {atom,{32,1},fake},
                   {atom,{32,1},is_beam_bif_info}},
               []}]],
         [{debug_line,32,1},{atom,{32,1},ignore}]},
     {clause,
         {32,1},
         [{tuple,
              {32,8},
              [{var,{32,9},'Mod'},
               {var,{32,13},'Exp'},
               {var,{32,17},'Attr'},
               {var,{32,22},'Fs0'},
               {var,{32,26},'_'}]},
          {var,{32,30},'Opts'}],
         [],
         [{debug_line,33,2},
          {match,
              {33,5},
              {var,{33,5},'Fs1'},
              {call,
                  {33,11},
                  {atom,{33,11},move_out_funs},
                  [{var,{33,25},'Fs0'}]}},
          {debug_line,34,3},
          {match,
              {34,5},
              {var,{34,5},'Order'},
              {lc,{34,13},
                  {block,0,[{var,{34,14},'Lbl'}]},
                  [{block,0,[{atom,{34,46},true}]},
                   {generate_strict,
                       {34,42},
                       {tuple,
                           {34,21},
                           [{atom,{34,22},function},
                            {var,{34,31},'_'},
                            {var,{34,33},'_'},
                            {var,{34,35},'Lbl'},
                            {var,{34,39},'_'}]},
                       {var,{34,46},'Fs1'}}]}},
          {debug_line,35,4},
          {match,
              {35,5},
              {var,{35,5},'All'},
              {mc,{35,11},
                  {map_field_assoc,
                      {35,17},
                      {block,0,[{var,{35,13},'Lbl'}]},
                      {block,0,[{var,{35,20},'Func'}]}},
                  [{block,0,[{atom,{35,58},true}]},
                   {generate_strict,
                       {35,54},
                       {match,
                           {35,28},
                           {tuple,
                               {35,28},
                               [{atom,{35,29},function},
                                {var,{35,38},'_'},
                                {var,{35,40},'_'},
                                {var,{35,42},'Lbl'},
                                {var,{35,46},'_'}]},
                           {var,{35,49},'Func'}},
                       {var,{35,58},'Fs1'}}]}},
          {debug_line,36,5},
          {match,
              {36,5},
              {var,{36,5},'WorkList'},
              {call,
                  {36,16},
                  {atom,{36,16},rootset},
                  [{var,{36,24},'Fs1'},
                   {var,{36,29},'Exp'},
                   {var,{36,34},'Attr'}]}},
          {debug_line,37,6},
          {match,
              {37,5},
              {var,{37,5},'Used'},
              {call,
                  {37,12},
                  {atom,{37,12},find_all_used},
                  [{var,{37,26},'WorkList'},
                   {var,{37,36},'All'},
                   {block,0,
                       [{call,
                            {37,41},
                            {remote,
                                {37,45},
                                {atom,{37,41},sets},
                                {atom,{37,46},from_list}},
                            [{var,{37,56},'WorkList'}]}]}]}},
          {debug_line,38,7},
          {match,
              {38,5},
              {var,{38,5},'Fs2'},
              {call,
                  {38,11},
                  {atom,{38,11},remove_unused},
                  [{var,{38,25},'Order'},
                   {var,{38,32},'Used'},
                   {var,{38,38},'All'}]}},
          {debug_line,39,8},
          {match,
              {39,5},
              {tuple,{39,5},[{var,{39,6},'Fs3'},{var,{39,10},'Lc'}]},
              {call,
                  {39,16},
                  {atom,{39,16},clean_labels},
                  [{var,{39,29},'Fs2'}]}},
          {debug_line,40,9},
          {match,
              {40,5},
              {var,{40,5},'Fs'},
              {call,
                  {40,10},
                  {atom,{40,10},maybe_remove_lines},
                  [{var,{40,29},'Fs3'},{var,{40,34},'Opts'}]}},
          {debug_line,41,10},
          {tuple,
              {41,5},
              [{atom,{41,6},ok},
               {tuple,
                   {41,9},
                   [{var,{41,10},'Mod'},
                    {var,{41,14},'Exp'},
                    {var,{41,18},'Attr'},
                    {var,{41,23},'Fs'},
                    {var,{41,26},'Lc'}]}]}]}]}.
{function,
    {46,1},
    rootset,3,
    [{clause,
         {46,1},
         [{var,{46,1},'_'},{var,{46,1},'_'},{var,{46,1},'_'}],
         [[{call,
               {46,1},
               {remote,
                   {46,1},
                   {atom,{46,1},fake},
                   {atom,{46,1},is_beam_bif_info}},
               []}]],
         [{debug_line,46,11},{atom,{46,1},ignore}]},
     {clause,
         {46,1},
         [{var,{46,9},'Fs'},{var,{46,13},'Root0'},{var,{46,20},'Attr'}],
         [],
         [{debug_line,47,12},
          {match,
              {47,5},
              {var,{47,5},'Root1'},
              {'case',
                  {47,13},
                  {call,
                      {47,18},
                      {remote,
                          {47,27},
                          {atom,{47,18},proplists},
                          {atom,{47,28},get_value}},
                      [{atom,{47,38},on_load},{var,{47,47},'Attr'}]},
                  [{clause,
                       {48,3},
                       [{atom,{48,3},undefined}],
                       [],
                       [{debug_line,48,13},{var,{48,16},'Root0'}]},
                   {clause,
                       {49,3},
                       [{cons,{49,3},{var,{49,4},'OnLoad'},{nil,{49,10}}}],
                       [],
                       [{debug_line,49,14},
                        {cons,
                            {49,15},
                            {var,{49,16},'OnLoad'},
                            {var,{49,23},'Root0'}}]}]}},
          {debug_line,51,15},
          {match,
              {51,5},
              {var,{51,5},'Root'},
              {call,
                  {51,12},
                  {remote,{51,16},{atom,{51,12},sofs},{atom,{51,17},set}},
                  [{var,{51,21},'Root1'},
                   {block,0,
                       [{cons,
                            {51,28},
                            {atom,{51,29},function},
                            {nil,{51,37}}}]}]}},
          {debug_line,52,16},
          {match,
              {52,5},
              {var,{52,5},'Map0'},
              {lc,{52,12},
                  {block,0,
                      [{tuple,
                           {52,13},
                           [{tuple,
                                {52,14},
                                [{var,{52,15},'Name'},{var,{52,20},'Arity'}]},
                            {var,{52,27},'Lbl'}]}]},
                  [{block,0,[{atom,{52,67},true}]},
                   {generate_strict,
                       {52,63},
                       {tuple,
                           {52,35},
                           [{atom,{52,36},function},
                            {var,{52,45},'Name'},
                            {var,{52,50},'Arity'},
                            {var,{52,56},'Lbl'},
                            {var,{52,60},'_'}]},
                       {var,{52,67},'Fs'}}]}},
          {debug_line,53,17},
          {match,
              {53,5},
              {var,{53,5},'Map'},
              {call,
                  {53,11},
                  {remote,{53,15},{atom,{53,11},sofs},{atom,{53,16},relation}},
                  [{var,{53,25},'Map0'},
                   {block,0,
                       [{cons,
                            {53,31},
                            {tuple,
                                {53,32},
                                [{atom,{53,33},function},
                                 {atom,{53,42},label}]},
                            {nil,{53,48}}}]}]}},
          {debug_line,54,18},
          {call,
              {54,5},
              {remote,{54,9},{atom,{54,5},sofs},{atom,{54,10},to_external}},
              [{block,0,
                   [{call,
                        {54,22},
                        {remote,
                            {54,26},
                            {atom,{54,22},sofs},
                            {atom,{54,27},image}},
                        [{var,{54,33},'Map'},{var,{54,38},'Root'}]}]}]}]}]}.
{function,
    {58,1},
    remove_unused,3,
    [{clause,
         {58,1},
         [{var,{58,1},'_'},{var,{58,1},'_'},{var,{58,1},'_'}],
         [[{call,
               {58,1},
               {remote,
                   {58,1},
                   {atom,{58,1},fake},
                   {atom,{58,1},is_beam_bif_info}},
               []}]],
         [{debug_line,58,19},{atom,{58,1},ignore}]},
     {clause,
         {58,1},
         [{var,{58,15},'Fs'},{var,{58,19},'Used'},{var,{58,25},'All'}],
         [],
         [{debug_line,59,20},
          {lc,{59,5},
              {block,0,
                  [{call,
                       {59,6},
                       {remote,
                           {59,6},
                           {atom,{59,6},erlang},
                           {atom,{59,6},map_get}},
                       [{var,{59,14},'F'},{var,{59,17},'All'}]}]},
              [{block,0,[{atom,{59,30},true}]},
               {generate,{59,27},{var,{59,25},'F'},{var,{59,30},'Fs'}},
               {block,0,[{atom,{59,34},true}]},
               {call,
                   {59,34},
                   {remote,
                       {59,38},
                       {atom,{59,34},sets},
                       {atom,{59,39},is_element}},
                   [{var,{59,50},'F'},{var,{59,53},'Used'}]}]}]}]}.
{function,
    {63,1},
    find_all_used,3,
    [{clause,
         {63,1},
         [{var,{63,1},'_'},{var,{63,1},'_'},{var,{63,1},'_'}],
         [[{call,
               {63,1},
               {remote,
                   {63,1},
                   {atom,{63,1},fake},
                   {atom,{63,1},is_beam_bif_info}},
               []}]],
         [{debug_line,63,21},{atom,{63,1},ignore}]},
     {clause,
         {63,1},
         [{cons,{63,15},{var,{63,16},'F'},{var,{63,18},'Fs0'}},
          {var,{63,24},'All'},
          {var,{63,29},'Used0'}],
         [],
         [{debug_line,64,22},
          {match,
              {64,5},
              {tuple,
                  {64,5},
                  [{atom,{64,6},function},
                   {var,{64,15},'_'},
                   {var,{64,17},'_'},
                   {var,{64,19},'_'},
                   {var,{64,21},'Code'}]},
              {call,
                  {64,29},
                  {remote,
                      {64,29},
                      {atom,{64,29},erlang},
                      {atom,{64,29},map_get}},
                  [{var,{64,37},'F'},{var,{64,40},'All'}]}},
          {debug_line,65,23},
          {match,
              {65,5},
              {tuple,{65,5},[{var,{65,6},'Fs'},{var,{65,9},'Used'}]},
              {call,
                  {65,17},
                  {atom,{65,17},update_work_list},
                  [{var,{65,34},'Code'},
                   {block,0,
                       [{tuple,
                            {65,40},
                            [{var,{65,41},'Fs0'},{var,{65,45},'Used0'}]}]}]}},
          {debug_line,66,24},
          {call,
              {66,5},
              {atom,{66,5},find_all_used},
              [{var,{66,19},'Fs'},{var,{66,23},'All'},{var,{66,28},'Used'}]}]},
     {clause,
         {67,1},
         [{nil,{67,15}},{var,{67,19},'_All'},{var,{67,25},'Used'}],
         [],
         [{debug_line,67,25},{var,{67,34},'Used'}]}]}.
{function,
    {69,1},
    update_work_list,2,
    [{clause,
         {69,1},
         [{var,{69,1},'_'},{var,{69,1},'_'}],
         [[{call,
               {69,1},
               {remote,
                   {69,1},
                   {atom,{69,1},fake},
                   {atom,{69,1},is_beam_bif_info}},
               []}]],
         [{debug_line,69,26},{atom,{69,1},ignore}]},
     {clause,
         {69,1},
         [{cons,
              {69,18},
              {tuple,
                  {69,19},
                  [{atom,{69,20},call},
                   {var,{69,25},'_'},
                   {tuple,{69,27},[{atom,{69,28},f},{var,{69,30},'L'}]}]},
              {var,{69,34},'Is'}},
          {var,{69,39},'Sets'}],
         [],
         [{debug_line,70,27},
          {call,
              {70,5},
              {atom,{70,5},update_work_list},
              [{var,{70,22},'Is'},
               {block,0,
                   [{call,
                        {70,26},
                        {atom,{70,26},add_to_work_list},
                        [{var,{70,43},'L'},{var,{70,46},'Sets'}]}]}]}]},
     {clause,
         {71,1},
         [{cons,
              {71,18},
              {tuple,
                  {71,19},
                  [{atom,{71,20},make_fun3},
                   {tuple,{71,30},[{atom,{71,31},f},{var,{71,33},'L'}]},
                   {var,{71,36},'_'},
                   {var,{71,38},'_'},
                   {var,{71,40},'_'},
                   {var,{71,42},'_'}]},
              {var,{71,45},'Is'}},
          {var,{71,50},'Sets'}],
         [],
         [{debug_line,72,28},
          {call,
              {72,5},
              {atom,{72,5},update_work_list},
              [{var,{72,22},'Is'},
               {block,0,
                   [{call,
                        {72,26},
                        {atom,{72,26},add_to_work_list},
                        [{var,{72,43},'L'},{var,{72,46},'Sets'}]}]}]}]},
     {clause,
         {73,1},
         [{cons,{73,18},{var,{73,19},'_'},{var,{73,21},'Is'}},
          {var,{73,26},'Sets'}],
         [],
         [{debug_line,74,29},
          {call,
              {74,5},
              {atom,{74,5},update_work_list},
              [{var,{74,22},'Is'},{var,{74,26},'Sets'}]}]},
     {clause,
         {75,1},
         [{nil,{75,18}},{var,{75,22},'Sets'}],
         [],
         [{debug_line,75,30},{var,{75,31},'Sets'}]}]}.
{function,
    {77,1},
    add_to_work_list,2,
    [{clause,
         {77,1},
         [{var,{77,1},'_'},{var,{77,1},'_'}],
         [[{call,
               {77,1},
               {remote,
                   {77,1},
                   {atom,{77,1},fake},
                   {atom,{77,1},is_beam_bif_info}},
               []}]],
         [{debug_line,77,31},{atom,{77,1},ignore}]},
     {clause,
         {77,1},
         [{var,{77,18},'F'},
          {match,
              {77,21},
              {tuple,{77,21},[{var,{77,22},'Fs'},{var,{77,25},'Used'}]},
              {var,{77,31},'Sets'}}],
         [],
         [{debug_line,78,32},
          {'case',
              {78,5},
              {call,
                  {78,10},
                  {remote,
                      {78,14},
                      {atom,{78,10},sets},
                      {atom,{78,15},is_element}},
                  [{var,{78,26},'F'},{var,{78,29},'Used'}]},
              [{clause,
                   {79,2},
                   [{atom,{79,2},true}],
                   [],
                   [{debug_line,79,33},{var,{79,10},'Sets'}]},
               {clause,
                   {80,2},
                   [{atom,{80,2},false}],
                   [],
                   [{debug_line,80,34},
                    {tuple,
                        {80,11},
                        [{cons,{80,12},{var,{80,13},'F'},{var,{80,15},'Fs'}},
                         {call,
                             {80,19},
                             {remote,
                                 {80,23},
                                 {atom,{80,19},sets},
                                 {atom,{80,24},add_element}},
                             [{var,{80,36},'F'},
                              {var,{80,39},'Used'}]}]}]}]}]}]}.
{function,{86,1},
          move_out_funs,1,
          [{clause,{86,1},
                   [{var,{86,1},'_'}],
                   [[{call,{86,1},
                           {remote,{86,1},
                                   {atom,{86,1},fake},
                                   {atom,{86,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,86,35},{atom,{86,1},ignore}]},
           {clause,{86,1},
                   [{cons,{86,15},
                          {tuple,{86,16},
                                 [{atom,{86,17},function},
                                  {var,{86,26},'Name'},
                                  {var,{86,31},'Arity'},
                                  {var,{86,37},'Entry'},
                                  {var,{86,43},'Is0'}]},
                          {var,{86,48},'Fs'}}],
                   [],
                   [{debug_line,87,36},
                    {match,{87,5},
                           {var,{87,5},'Is'},
                           {call,{87,10},
                                 {atom,{87,10},move_out_funs_is},
                                 [{var,{87,27},'Is0'}]}},
                    {debug_line,88,37},
                    {cons,{88,5},
                          {tuple,{88,6},
                                 [{atom,{88,7},function},
                                  {var,{88,16},'Name'},
                                  {var,{88,21},'Arity'},
                                  {var,{88,27},'Entry'},
                                  {var,{88,33},'Is'}]},
                          {call,{88,37},
                                {atom,{88,37},move_out_funs},
                                [{var,{88,51},'Fs'}]}}]},
           {clause,{89,1},
                   [{nil,{89,15}}],
                   [],
                   [{debug_line,89,38},{nil,{89,22}}]}]}.
{function,{91,1},
          move_out_funs_is,1,
          [{clause,{91,1},
                   [{var,{91,1},'_'}],
                   [[{call,{91,1},
                           {remote,{91,1},
                                   {atom,{91,1},fake},
                                   {atom,{91,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,91,39},{atom,{91,1},ignore}]},
           {clause,{91,1},
                   [{cons,{91,18},
                          {tuple,{91,19},
                                 [{atom,{91,20},block},{var,{91,26},'Bl'}]},
                          {var,{91,30},'Is'}}],
                   [],
                   [{debug_line,92,40},
                    {call,{92,5},
                          {atom,{92,5},move_out_funs_block},
                          [{var,{92,25},'Bl'},
                           {var,{92,29},'Is'},
                           {nil,{92,33}}]}]},
           {clause,{93,1},
                   [{cons,{93,18},{var,{93,19},'I'},{var,{93,21},'Is'}}],
                   [],
                   [{debug_line,94,41},
                    {cons,{94,5},
                          {var,{94,6},'I'},
                          {call,{94,8},
                                {atom,{94,8},move_out_funs_is},
                                [{var,{94,25},'Is'}]}}]},
           {clause,{95,1},
                   [{nil,{95,18}}],
                   [],
                   [{debug_line,95,42},{nil,{95,25}}]}]}.
{function,
    {97,1},
    move_out_funs_block,3,
    [{clause,
         {97,1},
         [{var,{97,1},'_'},{var,{97,1},'_'},{var,{97,1},'_'}],
         [[{call,
               {97,1},
               {remote,
                   {97,1},
                   {atom,{97,1},fake},
                   {atom,{97,1},is_beam_bif_info}},
               []}]],
         [{debug_line,97,43},{atom,{97,1},ignore}]},
     {clause,
         {97,1},
         [{cons,
              {97,21},
              {tuple,
                  {97,22},
                  [{atom,{97,23},set},
                   {cons,{97,27},{var,{97,28},'D'},{nil,{97,29}}},
                   {var,{97,31},'Ss'},
                   {tuple,
                       {97,34},
                       [{atom,{97,35},make_fun3},
                        {var,{97,45},'F'},
                        {var,{97,47},'I'},
                        {var,{97,49},'U'}]}]},
              {var,{97,53},'Bl'}},
          {var,{97,58},'Is'},
          {var,{97,62},'Acc'}],
         [],
         [{debug_line,98,44},
          {op,{98,21},
              '++',
              {call,{98,5},{atom,{98,5},make_block},[{var,{98,16},'Acc'}]},
              {cons,
                  {99,9},
                  {tuple,
                      {99,10},
                      [{atom,{99,11},make_fun3},
                       {var,{99,21},'F'},
                       {var,{99,23},'I'},
                       {var,{99,25},'U'},
                       {var,{99,27},'D'},
                       {tuple,
                           {99,29},
                           [{atom,{99,30},list},{var,{99,35},'Ss'}]}]},
                  {call,
                      {100,10},
                      {atom,{100,10},move_out_funs_block},
                      [{var,{100,30},'Bl'},
                       {var,{100,34},'Is'},
                       {nil,{100,38}}]}}}]},
     {clause,
         {101,1},
         [{cons,{101,21},{var,{101,22},'B'},{var,{101,24},'Bl'}},
          {var,{101,29},'Is'},
          {var,{101,33},'Acc'}],
         [],
         [{debug_line,102,45},
          {call,
              {102,5},
              {atom,{102,5},move_out_funs_block},
              [{var,{102,25},'Bl'},
               {var,{102,29},'Is'},
               {block,0,
                   [{cons,
                        {102,33},
                        {var,{102,34},'B'},
                        {var,{102,36},'Acc'}}]}]}]},
     {clause,
         {103,1},
         [{nil,{103,21}},{var,{103,25},'Is'},{var,{103,29},'Acc'}],
         [],
         [{debug_line,104,46},
          {op,{104,21},
              '++',
              {call,{104,5},{atom,{104,5},make_block},[{var,{104,16},'Acc'}]},
              {call,
                  {104,24},
                  {atom,{104,24},move_out_funs_is},
                  [{var,{104,41},'Is'}]}}]}]}.
{function,
    {106,1},
    make_block,1,
    [{clause,
         {106,1},
         [{var,{106,1},'_'}],
         [[{call,
               {106,1},
               {remote,
                   {106,1},
                   {atom,{106,1},fake},
                   {atom,{106,1},is_beam_bif_info}},
               []}]],
         [{debug_line,106,47},{atom,{106,1},ignore}]},
     {clause,
         {106,1},
         [{match,
              {106,12},
              {cons,{106,12},{var,{106,13},'_'},{var,{106,15},'_'}},
              {var,{106,18},'Is'}}],
         [],
         [{debug_line,106,48},
          {cons,
              {106,25},
              {tuple,
                  {106,26},
                  [{atom,{106,27},block},
                   {call,
                       {106,33},
                       {remote,
                           {106,33},
                           {atom,{106,33},lists},
                           {atom,{106,33},reverse}},
                       [{var,{106,41},'Is'}]}]},
              {nil,{106,45}}}]},
     {clause,
         {107,1},
         [{nil,{107,12}}],
         [],
         [{debug_line,107,49},{nil,{107,19}}]}]}.
{attribute,{115,2},
           type,
           {label,{remote_type,{115,18},
                               [{atom,{115,18},beam_asm},
                                {atom,{115,27},label},
                                []]},
                  []}}.
{attribute,
    {117,2},
    record,
    {st,[{typed_record_field,
             {record_field,{117,14},{atom,{117,14},lmap}},
             {type,
                 {117,22},
                 list,
                 [{type,
                      {117,23},
                      tuple,
                      [{user_type,{117,24},label,[]},
                       {user_type,{117,32},label,[]}]}]}},
         {typed_record_field,
             {record_field,{118,7},{atom,{118,7},entry}},
             {remote_type,
                 {118,16},
                 [{atom,{118,16},beam_asm},{atom,{118,25},label},[]]}},
         {typed_record_field,
             {record_field,{119,7},{atom,{119,7},lc}},
             {type,{119,13},non_neg_integer,[]}}]}}.
{function,
    {122,1},
    clean_labels,1,
    [{clause,
         {122,1},
         [{var,{122,1},'_'}],
         [[{call,
               {122,1},
               {remote,
                   {122,1},
                   {atom,{122,1},fake},
                   {atom,{122,1},is_beam_bif_info}},
               []}]],
         [{debug_line,122,50},{atom,{122,1},ignore}]},
     {clause,
         {122,1},
         [{var,{122,14},'Fs0'}],
         [],
         [{debug_line,123,51},
          {match,
              {123,5},
              {var,{123,5},'St0'},
              {tuple,
                  {123,11},
                  [{atom,{123,11},st},
                   {nil,{123,20}},
                   {integer,{123,29},1},
                   {integer,{123,34},1}]}},
          {debug_line,124,52},
          {match,
              {124,5},
              {tuple,
                  {124,5},
                  [{var,{124,6},'Fs1'},
                   {tuple,
                       {124,10},
                       [{atom,{124,10},st},
                        {var,{124,19},'Lmap0'},
                        {var,{124,10},'_'},
                        {var,{124,28},'Lc'}]}]},
              {call,
                  {124,35},
                  {atom,{124,35},function_renumber},
                  [{var,{124,53},'Fs0'},{var,{124,58},'St0'},{nil,{124,63}}]}},
          {debug_line,125,53},
          {match,
              {125,5},
              {var,{125,5},'Lmap'},
              {call,
                  {125,12},
                  {remote,
                      {125,16},
                      {atom,{125,12},maps},
                      {atom,{125,17},from_list}},
                  [{var,{125,27},'Lmap0'}]}},
          {debug_line,126,54},
          {match,
              {126,5},
              {var,{126,5},'Fs'},
              {call,
                  {126,10},
                  {atom,{126,10},function_replace},
                  [{var,{126,27},'Fs1'},
                   {var,{126,32},'Lmap'},
                   {nil,{126,38}}]}},
          {debug_line,127,55},
          {tuple,{127,5},[{var,{127,6},'Fs'},{var,{127,9},'Lc'}]}]}]}.
{function,
 {129,1},
 function_renumber,3,
 [{clause,
   {129,1},
   [{var,{129,1},'_'},{var,{129,1},'_'},{var,{129,1},'_'}],
   [[{call,
      {129,1},
      {remote,{129,1},{atom,{129,1},fake},{atom,{129,1},is_beam_bif_info}},
      []}]],
   [{debug_line,129,56},{atom,{129,1},ignore}]},
  {clause,
   {129,1},
   [{cons,
     {129,19},
     {tuple,
      {129,20},
      [{atom,{129,21},function},
       {var,{129,30},'Name'},
       {var,{129,35},'Arity'},
       {var,{129,41},'_Entry'},
       {var,{129,48},'Asm0'}]},
     {var,{129,54},'Fs'}},
    {var,{129,59},'St0'},
    {var,{129,64},'Acc'}],
   [],
   [{debug_line,130,57},
    {match,
     {130,5},
     {tuple,{130,5},[{var,{130,6},'Asm'},{var,{130,10},'St'}]},
     {call,
      {130,16},
      {atom,{130,16},renumber_labels},
      [{var,{130,32},'Asm0'},{nil,{130,38}},{var,{130,42},'St0'}]}},
    {debug_line,131,58},
    {call,
     {131,5},
     {atom,{131,5},function_renumber},
     [{var,{131,23},'Fs'},
      {var,{131,27},'St'},
      {block,0,
       [{cons,
         {131,31},
         {tuple,
          {131,32},
          [{atom,{131,33},function},
           {var,{131,42},'Name'},
           {var,{131,47},'Arity'},
           {'case',
            {131,53},
            {var,{131,53},'St'},
            [{clause,
              [{generated,true},{location,{131,53}}],
              [{tuple,
                [{generated,true},{location,{131,53}}],
                [{atom,{131,53},st},
                 {var,{131,53},'_'},
                 {var,{131,53},rec0},
                 {var,{131,53},'_'}]}],
              [],
              [{var,{131,53},rec0}]},
             {clause,
              [{generated,true},{location,{131,53}}],
              [{var,{131,53},rec0}],
              [],
              [{call,
                [{generated,true},{location,{131,53}}],
                {remote,
                 [{generated,true},{location,{131,53}}],
                 {atom,[{generated,true},{location,{131,53}}],erlang},
                 {atom,[{generated,true},{location,{131,53}}],error}},
                [{tuple,
                  [{generated,true},{location,{131,53}}],
                  [{atom,[{generated,true},{location,{131,53}}],badrecord},
                   {var,{131,53},rec0}]}]}]}]},
           {var,{131,65},'Asm'}]},
         {var,{131,70},'Acc'}}]}]}]},
  {clause,
   {132,1},
   [{nil,{132,19}},{var,{132,23},'St'},{var,{132,27},'Acc'}],
   [],
   [{debug_line,132,59},
    {tuple,{132,35},[{var,{132,36},'Acc'},{var,{132,40},'St'}]}]}]}.
{function,
 {134,1},
 renumber_labels,3,
 [{clause,
   {134,1},
   [{var,{134,1},'_'},{var,{134,1},'_'},{var,{134,1},'_'}],
   [[{call,
      {134,1},
      {remote,{134,1},{atom,{134,1},fake},{atom,{134,1},is_beam_bif_info}},
      []}]],
   [{debug_line,134,60},{atom,{134,1},ignore}]},
  {clause,
   {134,1},
   [{cons,
     {134,17},
     {tuple,{134,18},[{atom,{134,19},label},{var,{134,25},'Old'}]},
     {var,{134,30},'Is'}},
    {match,
     {134,35},
     {cons,
      {134,35},
      {tuple,{134,36},[{atom,{134,37},label},{var,{134,43},'New'}]},
      {var,{134,48},'_'}},
     {var,{134,51},'Acc'}},
    {match,
     {134,56},
     {tuple,
      {134,56},
      [{atom,{134,56},st},
       {var,{134,65},'D0'},
       {var,{134,56},'_'},
       {var,{134,56},'_'}]},
     {var,{134,69},'St'}}],
   [],
   [{debug_line,135,61},
    {match,
     {135,5},
     {var,{135,5},'D'},
     {cons,
      {135,9},
      {tuple,{135,10},[{var,{135,11},'Old'},{var,{135,15},'New'}]},
      {var,{135,20},'D0'}}},
    {debug_line,136,62},
    {call,
     {136,5},
     {atom,{136,5},renumber_labels},
     [{var,{136,21},'Is'},
      {var,{136,25},'Acc'},
      {block,0,
       [{block,
         {136,30},
         [{match,{136,30},{var,{136,30},rec1},{var,{136,30},'St'}},
          {'case',
           {136,36},
           {var,{136,30},rec1},
           [{clause,
             {136,36},
             [{tuple,
               {136,36},
               [{atom,{136,36},st},
                {var,{136,36},'_'},
                {var,{136,36},'_'},
                {var,{136,36},'_'}]}],
             [],
             [{call,
               {136,36},
               {remote,
                {136,36},
                {atom,{136,36},erlang},
                {atom,{136,36},setelement}},
               [{integer,{136,36},2},
                {var,{136,30},rec1},
                {var,{136,41},'D'}]}]},
            {clause,
             [{generated,true},{location,{136,36}}],
             [{var,[{generated,true},{location,{136,36}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{136,36}}],
               {remote,
                [{generated,true},{location,{136,36}}],
                {atom,[{generated,true},{location,{136,36}}],erlang},
                {atom,[{generated,true},{location,{136,36}}],error}},
               [{tuple,
                 [{generated,true},{location,{136,36}}],
                 [{atom,[{generated,true},{location,{136,36}}],badrecord},
                  {var,{136,30},rec1}]}]}]}]}]}]}]}]},
  {clause,
   {137,1},
   [{cons,
     {137,17},
     {tuple,{137,18},[{atom,{137,19},label},{var,{137,25},'Old'}]},
     {var,{137,30},'Is'}},
    {var,{137,35},'Acc'},
    {var,{137,40},'St0'}],
   [],
   [{debug_line,138,63},
    {match,
     {138,5},
     {var,{138,5},'New'},
     {'case',
      {138,11},
      {var,{138,11},'St0'},
      [{clause,
        [{generated,true},{location,{138,11}}],
        [{tuple,
          [{generated,true},{location,{138,11}}],
          [{atom,{138,11},st},
           {var,{138,11},'_'},
           {var,{138,11},'_'},
           {var,{138,11},rec2}]}],
        [],
        [{var,{138,11},rec2}]},
       {clause,
        [{generated,true},{location,{138,11}}],
        [{var,{138,11},rec2}],
        [],
        [{call,
          [{generated,true},{location,{138,11}}],
          {remote,
           [{generated,true},{location,{138,11}}],
           {atom,[{generated,true},{location,{138,11}}],erlang},
           {atom,[{generated,true},{location,{138,11}}],error}},
          [{tuple,
            [{generated,true},{location,{138,11}}],
            [{atom,[{generated,true},{location,{138,11}}],badrecord},
             {var,{138,11},rec2}]}]}]}]}},
    {debug_line,139,64},
    {match,
     {139,5},
     {var,{139,5},'D'},
     {cons,
      {139,9},
      {tuple,{139,10},[{var,{139,11},'Old'},{var,{139,15},'New'}]},
      {'case',
       {139,20},
       {var,{139,20},'St0'},
       [{clause,
         [{generated,true},{location,{139,20}}],
         [{tuple,
           [{generated,true},{location,{139,20}}],
           [{atom,{139,20},st},
            {var,{139,20},rec3},
            {var,{139,20},'_'},
            {var,{139,20},'_'}]}],
         [],
         [{var,{139,20},rec3}]},
        {clause,
         [{generated,true},{location,{139,20}}],
         [{var,{139,20},rec3}],
         [],
         [{call,
           [{generated,true},{location,{139,20}}],
           {remote,
            [{generated,true},{location,{139,20}}],
            {atom,[{generated,true},{location,{139,20}}],erlang},
            {atom,[{generated,true},{location,{139,20}}],error}},
           [{tuple,
             [{generated,true},{location,{139,20}}],
             [{atom,[{generated,true},{location,{139,20}}],badrecord},
              {var,{139,20},rec3}]}]}]}]}}},
    {debug_line,140,65},
    {call,
     {140,5},
     {atom,{140,5},renumber_labels},
     [{var,{140,21},'Is'},
      {block,0,
       [{cons,
         {140,25},
         {tuple,{140,26},[{atom,{140,27},label},{var,{140,33},'New'}]},
         {var,{140,38},'Acc'}}]},
      {block,0,
       [{block,
         {140,44},
         [{match,
           {140,58},
           {var,{140,58},rec4},
           {op,{140,64},'+',{var,{140,61},'New'},{integer,{140,65},1}}},
          {match,{140,44},{var,{140,44},rec5},{var,{140,44},'St0'}},
          {'case',
           {140,51},
           {var,{140,44},rec5},
           [{clause,
             {140,51},
             [{tuple,
               {140,51},
               [{atom,{140,51},st},
                {var,{140,51},'_'},
                {var,{140,51},'_'},
                {var,{140,51},'_'}]}],
             [],
             [{call,
               {140,51},
               {remote,
                {140,51},
                {atom,{140,51},erlang},
                {atom,{140,51},setelement}},
               [{integer,{140,51},2},
                {call,
                 {140,58},
                 {remote,
                  {140,58},
                  {atom,{140,58},erlang},
                  {atom,{140,58},setelement}},
                 [{integer,{140,58},4},
                  {var,{140,44},rec5},
                  {var,{140,58},rec4}]},
                {var,{140,56},'D'}]}]},
            {clause,
             [{generated,true},{location,{140,51}}],
             [{var,[{generated,true},{location,{140,51}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{140,51}}],
               {remote,
                [{generated,true},{location,{140,51}}],
                {atom,[{generated,true},{location,{140,51}}],erlang},
                {atom,[{generated,true},{location,{140,51}}],error}},
               [{tuple,
                 [{generated,true},{location,{140,51}}],
                 [{atom,[{generated,true},{location,{140,51}}],badrecord},
                  {var,{140,44},rec5}]}]}]}]}]}]}]}]},
  {clause,
   {141,1},
   [{cons,
     {141,17},
     {match,
      {141,18},
      {tuple,
       {141,18},
       [{atom,{141,19},func_info},
        {var,{141,29},'_'},
        {var,{141,31},'_'},
        {var,{141,33},'_'}]},
      {var,{141,36},'Fi'}},
     {var,{141,39},'Is'}},
    {var,{141,44},'Acc'},
    {var,{141,49},'St0'}],
   [],
   [{debug_line,142,66},
    {call,
     {142,5},
     {atom,{142,5},renumber_labels},
     [{var,{142,21},'Is'},
      {block,0,[{cons,{142,25},{var,{142,26},'Fi'},{var,{142,29},'Acc'}}]},
      {block,0,
       [{block,
         {142,35},
         [{match,
           {142,42},
           {var,{142,42},rec6},
           {'case',
            {142,48},
            {var,{142,48},'St0'},
            [{clause,
              [{generated,true},{location,{142,48}}],
              [{tuple,
                [{generated,true},{location,{142,48}}],
                [{atom,{142,48},st},
                 {var,{142,48},'_'},
                 {var,{142,48},'_'},
                 {var,{142,48},rec8}]}],
              [],
              [{var,{142,48},rec8}]},
             {clause,
              [{generated,true},{location,{142,48}}],
              [{var,{142,48},rec8}],
              [],
              [{call,
                [{generated,true},{location,{142,48}}],
                {remote,
                 [{generated,true},{location,{142,48}}],
                 {atom,[{generated,true},{location,{142,48}}],erlang},
                 {atom,[{generated,true},{location,{142,48}}],error}},
                [{tuple,
                  [{generated,true},{location,{142,48}}],
                  [{atom,[{generated,true},{location,{142,48}}],badrecord},
                   {var,{142,48},rec8}]}]}]}]}},
          {match,{142,35},{var,{142,35},rec7},{var,{142,35},'St0'}},
          {'case',
           {142,42},
           {var,{142,35},rec7},
           [{clause,
             {142,42},
             [{tuple,
               {142,42},
               [{atom,{142,42},st},
                {var,{142,42},'_'},
                {var,{142,42},'_'},
                {var,{142,42},'_'}]}],
             [],
             [{call,
               {142,42},
               {remote,
                {142,42},
                {atom,{142,42},erlang},
                {atom,{142,42},setelement}},
               [{integer,{142,42},3},
                {var,{142,35},rec7},
                {var,{142,42},rec6}]}]},
            {clause,
             [{generated,true},{location,{142,42}}],
             [{var,[{generated,true},{location,{142,42}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{142,42}}],
               {remote,
                [{generated,true},{location,{142,42}}],
                {atom,[{generated,true},{location,{142,42}}],erlang},
                {atom,[{generated,true},{location,{142,42}}],error}},
               [{tuple,
                 [{generated,true},{location,{142,42}}],
                 [{atom,[{generated,true},{location,{142,42}}],badrecord},
                  {var,{142,35},rec7}]}]}]}]}]}]}]}]},
  {clause,
   {143,1},
   [{cons,{143,17},{var,{143,18},'I'},{var,{143,20},'Is'}},
    {var,{143,25},'Acc'},
    {var,{143,30},'St0'}],
   [],
   [{debug_line,144,67},
    {call,
     {144,5},
     {atom,{144,5},renumber_labels},
     [{var,{144,21},'Is'},
      {block,0,[{cons,{144,25},{var,{144,26},'I'},{var,{144,28},'Acc'}}]},
      {var,{144,34},'St0'}]}]},
  {clause,
   {145,1},
   [{nil,{145,17}},{var,{145,21},'Acc'},{var,{145,26},'St'}],
   [],
   [{debug_line,145,68},
    {tuple,{145,33},[{var,{145,34},'Acc'},{var,{145,38},'St'}]}]}]}.
{function,
 {147,1},
 function_replace,3,
 [{clause,
   {147,1},
   [{var,{147,1},'_'},{var,{147,1},'_'},{var,{147,1},'_'}],
   [[{call,
      {147,1},
      {remote,{147,1},{atom,{147,1},fake},{atom,{147,1},is_beam_bif_info}},
      []}]],
   [{debug_line,147,69},{atom,{147,1},ignore}]},
  {clause,
   {147,1},
   [{cons,
     {147,18},
     {tuple,
      {147,19},
      [{atom,{147,20},function},
       {var,{147,29},'Name'},
       {var,{147,34},'Arity'},
       {var,{147,40},'Entry'},
       {var,{147,46},'Asm0'}]},
     {var,{147,52},'Fs'}},
    {var,{147,57},'Dict'},
    {var,{147,63},'Acc'}],
   [],
   [{debug_line,148,70},
    {match,
     {148,5},
     {var,{148,5},'Asm'},
     {'try',
      {148,11},
      [{debug_line,149,71},
       {match,
        {149,15},
        {var,{149,15},'Fb'},
        {'fun',
         {149,20},
         {clauses,
          [{clause,
            {149,23},
            [{var,{149,24},'Old'}],
            [],
            [{call,
              {149,32},
              {remote,{149,32},{atom,{149,32},erlang},{atom,{149,32},throw}},
              [{block,0,
                [{tuple,
                  {149,38},
                  [{atom,{149,39},error},
                   {tuple,
                    {149,45},
                    [{atom,{149,46},undefined_label},
                     {var,{149,62},'Old'}]}]}]}]}]}]}}},
       {debug_line,150,72},
       {call,
        {150,15},
        {remote,
         {150,25},
         {atom,{150,15},beam_utils},
         {atom,{150,26},replace_labels}},
        [{var,{150,41},'Asm0'},
         {nil,{150,47}},
         {var,{150,51},'Dict'},
         {var,{150,57},'Fb'}]}],
      [],
      [{clause,
        {152,8},
        [{tuple,
          {152,8},
          [{atom,{152,8},throw},
           {tuple,
            {152,14},
            [{atom,{152,15},error},
             {match,
              {152,21},
              {tuple,
               {152,21},
               [{atom,{152,22},undefined_label},{var,{152,38},'Lbl'}]},
              {var,{152,43},'Reason'}}]},
           {var,{152,43},'_'}]}],
        [],
        [{debug_line,153,73},
         {call,
          {153,5},
          {remote,{153,7},{atom,{153,5},io},{atom,{153,8},format}},
          [{block,0,
            [{string,
              {153,15},
              "Function ~s/~w refers to undefined label ~w\n"}]},
           {block,0,
            [{debug_line,154,74},
             {cons,
              {154,8},
              {var,{154,9},'Name'},
              {cons,
               {154,14},
               {var,{154,14},'Arity'},
               {cons,{154,20},{var,{154,20},'Lbl'},{nil,{154,23}}}}}]}]},
         {debug_line,155,75},
         {call,
          {155,5},
          {remote,{155,5},{atom,{155,5},erlang},{atom,{155,5},exit}},
          [{var,{155,10},'Reason'}]}]}],
      []}},
    {debug_line,157,76},
    {call,
     {157,5},
     {atom,{157,5},function_replace},
     [{var,{157,22},'Fs'},
      {var,{157,26},'Dict'},
      {block,0,
       [{cons,
         {157,32},
         {tuple,
          {157,33},
          [{atom,{157,34},function},
           {var,{157,43},'Name'},
           {var,{157,48},'Arity'},
           {var,{157,54},'Entry'},
           {var,{157,60},'Asm'}]},
         {var,{157,65},'Acc'}}]}]}]},
  {clause,
   {158,1},
   [{nil,{158,18}},{var,{158,22},'_'},{var,{158,25},'Acc'}],
   [],
   [{debug_line,158,77},{var,{158,33},'Acc'}]}]}.
{function,
    {164,1},
    maybe_remove_lines,2,
    [{clause,
         {164,1},
         [{var,{164,1},'_'},{var,{164,1},'_'}],
         [[{call,
               {164,1},
               {remote,
                   {164,1},
                   {atom,{164,1},fake},
                   {atom,{164,1},is_beam_bif_info}},
               []}]],
         [{debug_line,164,78},{atom,{164,1},ignore}]},
     {clause,
         {164,1},
         [{var,{164,20},'Fs'},{var,{164,24},'Opts'}],
         [],
         [{debug_line,165,79},
          {'case',
              {165,5},
              {call,
                  {165,10},
                  {remote,
                      {165,19},
                      {atom,{165,10},proplists},
                      {atom,{165,20},get_bool}},
                  [{atom,{165,29},no_line_info},{var,{165,43},'Opts'}]},
              [{clause,
                   {166,2},
                   [{atom,{166,2},false}],
                   [],
                   [{debug_line,166,80},{var,{166,11},'Fs'}]},
               {clause,
                   {167,2},
                   [{atom,{167,2},true}],
                   [],
                   [{debug_line,167,81},
                    {call,
                        {167,10},
                        {atom,{167,10},fold_functions},
                        [{block,0,
                             [{'fun',{167,25},{function,remove_lines,1}}]},
                         {var,{167,45},'Fs'}]}]}]}]}]}.
{function,{170,1},
          remove_lines,1,
          [{clause,{170,1},
                   [{var,{170,1},'_'}],
                   [[{call,{170,1},
                           {remote,{170,1},
                                   {atom,{170,1},fake},
                                   {atom,{170,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,170,82},{atom,{170,1},ignore}]},
           {clause,{170,1},
                   [{cons,{170,14},
                          {tuple,{170,15},
                                 [{atom,{170,16},line},{var,{170,21},'_'}]},
                          {var,{170,24},'Is'}}],
                   [],
                   [{debug_line,171,83},
                    {call,{171,5},
                          {atom,{171,5},remove_lines},
                          [{var,{171,18},'Is'}]}]},
           {clause,{172,1},
                   [{cons,{172,14},
                          {tuple,{172,15},
                                 [{atom,{172,16},block},{var,{172,22},'Bl0'}]},
                          {var,{172,27},'Is'}}],
                   [],
                   [{debug_line,173,84},
                    {match,{173,5},
                           {var,{173,5},'Bl'},
                           {call,{173,10},
                                 {atom,{173,10},remove_lines_block},
                                 [{var,{173,29},'Bl0'}]}},
                    {debug_line,174,85},
                    {cons,{174,5},
                          {tuple,{174,6},
                                 [{atom,{174,7},block},{var,{174,13},'Bl'}]},
                          {call,{174,17},
                                {atom,{174,17},remove_lines},
                                [{var,{174,30},'Is'}]}}]},
           {clause,{175,1},
                   [{cons,{175,14},{var,{175,15},'I'},{var,{175,17},'Is'}}],
                   [],
                   [{debug_line,176,86},
                    {cons,{176,5},
                          {var,{176,6},'I'},
                          {call,{176,8},
                                {atom,{176,8},remove_lines},
                                [{var,{176,21},'Is'}]}}]},
           {clause,{177,1},
                   [{nil,{177,14}}],
                   [],
                   [{debug_line,177,87},{nil,{177,21}}]}]}.
{function,
    {179,1},
    remove_lines_block,1,
    [{clause,
         {179,1},
         [{var,{179,1},'_'}],
         [[{call,
               {179,1},
               {remote,
                   {179,1},
                   {atom,{179,1},fake},
                   {atom,{179,1},is_beam_bif_info}},
               []}]],
         [{debug_line,179,88},{atom,{179,1},ignore}]},
     {clause,
         {179,1},
         [{cons,
              {179,20},
              {tuple,
                  {179,21},
                  [{atom,{179,22},set},
                   {var,{179,26},'_'},
                   {var,{179,28},'_'},
                   {tuple,
                       {179,30},
                       [{atom,{179,31},line},{var,{179,36},'_'}]}]},
              {var,{179,40},'Is'}}],
         [],
         [{debug_line,180,89},
          {call,
              {180,5},
              {atom,{180,5},remove_lines_block},
              [{var,{180,24},'Is'}]}]},
     {clause,
         {181,1},
         [{cons,{181,20},{var,{181,21},'I'},{var,{181,23},'Is'}}],
         [],
         [{debug_line,182,90},
          {cons,
              {182,5},
              {var,{182,6},'I'},
              {call,
                  {182,8},
                  {atom,{182,8},remove_lines_block},
                  [{var,{182,27},'Is'}]}}]},
     {clause,
         {183,1},
         [{nil,{183,20}}],
         [],
         [{debug_line,183,91},{nil,{183,27}}]}]}.
{function,{189,1},
          fold_functions,2,
          [{clause,{189,1},
                   [{var,{189,1},'_'},{var,{189,1},'_'}],
                   [[{call,{189,1},
                           {remote,{189,1},
                                   {atom,{189,1},fake},
                                   {atom,{189,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,189,92},{atom,{189,1},ignore}]},
           {clause,{189,1},
                   [{var,{189,16},'F'},
                    {cons,{189,19},
                          {tuple,{189,20},
                                 [{atom,{189,21},function},
                                  {var,{189,30},'N'},
                                  {var,{189,32},'A'},
                                  {var,{189,34},'Lbl'},
                                  {var,{189,38},'Is0'}]},
                          {var,{189,43},'T'}}],
                   [],
                   [{debug_line,190,93},
                    {match,{190,5},
                           {var,{190,5},'Is'},
                           {call,{190,10},
                                 {var,{190,10},'F'},
                                 [{var,{190,12},'Is0'}]}},
                    {debug_line,191,94},
                    {cons,{191,5},
                          {tuple,{191,6},
                                 [{atom,{191,7},function},
                                  {var,{191,16},'N'},
                                  {var,{191,18},'A'},
                                  {var,{191,20},'Lbl'},
                                  {var,{191,24},'Is'}]},
                          {call,{191,28},
                                {atom,{191,28},fold_functions},
                                [{var,{191,43},'F'},{var,{191,46},'T'}]}}]},
           {clause,{192,1},
                   [{var,{192,16},'_F'},{nil,{192,20}}],
                   [],
                   [{debug_line,192,95},{nil,{192,27}}]}]}.
{eof,{193,1}}.
