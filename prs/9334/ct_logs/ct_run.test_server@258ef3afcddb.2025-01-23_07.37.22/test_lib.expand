{attribute,{1,1},file,{"test_lib.erl",1}}.
{attribute,{20,2},module,test_lib}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,99,111,109,109,
             111,110,95,116,101,115,116,45,49,46,50,55,46,53,47,105,110,99,
             108,117,100,101,47,99,116,46,104,114,108],
            1}}.
{attribute,{23,1},file,{"test_lib.erl",23}}.
{attribute,{23,2},compile,{no_auto_import,[{binary_part,2}]}}.
{attribute,{24,2},
           export,
           [{id,1},
            {recompile,1},
            {recompile_core,1},
            {parallel,0},
            {uniq,0},
            {opt_opts,1},
            {get_data_dir,1},
            {smoke_disasm,1},
            {p_run,2},
            {p_run,3},
            {highest_opcode,1},
            {get_unique_files,1},
            {get_unique_files,2}]}.
{attribute,{32,2},export,[{binary_part,2},{binary,1}]}.
{function,{34,1},
          id,1,
          [{clause,{34,1},
                   [{var,{34,1},'_'}],
                   [[{call,{34,1},
                           {remote,{34,1},
                                   {atom,{34,1},fake},
                                   {atom,{34,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,34,1},{atom,{34,1},ignore}]},
           {clause,{34,1},
                   [{var,{34,4},'I'}],
                   [],
                   [{debug_line,34,2},{var,{34,10},'I'}]}]}.
{function,
 {36,1},
 recompile,1,
 [{clause,
   {36,1},
   [{var,{36,1},'_'}],
   [[{call,
      {36,1},
      {remote,{36,1},{atom,{36,1},fake},{atom,{36,1},is_beam_bif_info}},
      []}]],
   [{debug_line,36,3},{atom,{36,1},ignore}]},
  {clause,
   {36,1},
   [{var,{36,11},'Mod'}],
   [[{call,
      {36,21},
      {remote,{36,21},{atom,{36,21},erlang},{atom,{36,21},is_atom}},
      [{var,{36,29},'Mod'}]}]],
   [{debug_line,37,4},
    {'case',
     {37,5},
     {call,
      {37,10},
      {remote,{37,10},{atom,{37,10},erlang},{atom,{37,10},whereis}},
      [{atom,{37,18},cover_server}]},
     [{clause,
       {38,3},
       [{atom,{38,3},undefined}],
       [],
       [{debug_line,38,5},{atom,{38,16},ok}]},
      {clause,
       {39,2},
       [{var,{39,2},'_'}],
       [],
       [{debug_line,41,6},
        {match,
         {41,6},
         {var,{41,6},'Beam'},
         {call,
          {41,13},
          {remote,{41,17},{atom,{41,13},code},{atom,{41,18},which}},
          [{var,{41,24},'Mod'}]}},
        {debug_line,42,7},
        {match,
         {42,6},
         {var,{42,6},'Src'},
         {op,
          {42,45},
          '++',
          {call,
           {42,12},
           {remote,{42,20},{atom,{42,12},filename},{atom,{42,21},rootname}},
           [{var,{42,30},'Beam'},{block,0,[{string,{42,36},".beam"}]}]},
          {string,{42,48},".erl"}}},
        {debug_line,43,8},
        {match,
         {43,6},
         {var,{43,6},'Opts'},
         {cons,
          {43,13},
          {atom,{43,14},bin_opt_info},
          {cons,
           {43,27},
           {atom,{43,27},recv_opt_info},
           {call,{43,41},{atom,{43,41},opt_opts},[{var,{43,50},'Mod'}]}}}},
        {debug_line,44,9},
        {call,
         {44,6},
         {remote,{44,8},{atom,{44,6},io},{atom,{44,9},format}},
         [{block,0,[{string,{44,16},"Recompiling ~p (~p)\n"}]},
          {block,0,
           [{cons,
             {44,41},
             {var,{44,42},'Mod'},
             {cons,{44,46},{var,{44,46},'Opts'},{nil,{44,50}}}}]}]},
        {debug_line,45,10},
        {call,
         {45,6},
         {remote,{45,7},{atom,{45,6},c},{atom,{45,8},c}},
         [{var,{45,10},'Src'},
          {block,0,
           [{cons,
             {45,15},
             {tuple,
              {45,16},
              [{atom,{45,17},outdir},
               {call,
                {45,24},
                {remote,
                 {45,32},
                 {atom,{45,24},filename},
                 {atom,{45,33},dirname}},
                [{var,{45,41},'Src'}]}]},
             {var,{45,47},'Opts'}}]}]}]}]},
    {debug_line,49,11},
    {call,{49,5},{atom,{49,5},smoke_disasm},[{var,{49,18},'Mod'}]}]}]}.
{function,
 {51,1},
 recompile_core,1,
 [{clause,
   {51,1},
   [{var,{51,1},'_'}],
   [[{call,
      {51,1},
      {remote,{51,1},{atom,{51,1},fake},{atom,{51,1},is_beam_bif_info}},
      []}]],
   [{debug_line,51,12},{atom,{51,1},ignore}]},
  {clause,
   {51,1},
   [{var,{51,16},'Mod'}],
   [[{call,
      {51,26},
      {remote,{51,26},{atom,{51,26},erlang},{atom,{51,26},is_atom}},
      [{var,{51,34},'Mod'}]}]],
   [{debug_line,52,13},
    {'case',
     {52,5},
     {call,
      {52,10},
      {remote,{52,10},{atom,{52,10},erlang},{atom,{52,10},whereis}},
      [{atom,{52,18},cover_server}]},
     [{clause,
       {53,9},
       [{atom,{53,9},undefined}],
       [],
       [{debug_line,53,14},{atom,{53,22},ok}]},
      {clause,
       {54,9},
       [{var,{54,9},'_'}],
       [],
       [{debug_line,56,15},
        {match,
         {56,13},
         {var,{56,13},'Beam'},
         {call,
          {56,20},
          {remote,{56,24},{atom,{56,20},code},{atom,{56,25},which}},
          [{var,{56,31},'Mod'}]}},
        {debug_line,57,16},
        {match,
         {57,13},
         {var,{57,13},'Src'},
         {call,
          {57,19},
          {remote,{57,27},{atom,{57,19},filename},{atom,{57,28},rootname}},
          [{var,{57,37},'Beam'},{block,0,[{string,{57,43},".beam"}]}]}},
        {debug_line,58,17},
        {match,
         {58,13},
         {var,{58,13},'Opts'},
         {cons,
          {58,20},
          {atom,{58,21},bin_opt_info},
          {cons,
           {58,34},
           {atom,{58,34},recv_opt_info},
           {call,{58,48},{atom,{58,48},opt_opts},[{var,{58,57},'Mod'}]}}}},
        {debug_line,59,18},
        {call,
         {59,13},
         {remote,{59,15},{atom,{59,13},io},{atom,{59,16},format}},
         [{block,0,[{string,{59,23},"Recompiling ~p (~p)\n"}]},
          {block,0,
           [{cons,
             {59,48},
             {var,{59,49},'Mod'},
             {cons,{59,53},{var,{59,53},'Opts'},{nil,{59,57}}}}]}]},
        {debug_line,60,19},
        {call,
         {60,13},
         {remote,{60,14},{atom,{60,13},c},{atom,{60,15},c}},
         [{var,{60,17},'Src'},
          {block,0,
           [{cons,
             {60,22},
             {atom,{60,23},from_core},
             {cons,
              {60,33},
              {tuple,
               {60,33},
               [{atom,{60,34},outdir},
                {call,
                 {60,41},
                 {remote,
                  {60,49},
                  {atom,{60,41},filename},
                  {atom,{60,50},dirname}},
                 [{var,{60,58},'Src'}]}]},
              {var,{60,64},'Opts'}}}]}]}]}]},
    {debug_line,64,20},
    {call,{64,5},{atom,{64,5},smoke_disasm},[{var,{64,18},'Mod'}]}]}]}.
{function,
    {66,1},
    smoke_disasm,1,
    [{clause,
         {66,1},
         [{var,{66,1},'_'}],
         [[{call,
               {66,1},
               {remote,
                   {66,1},
                   {atom,{66,1},fake},
                   {atom,{66,1},is_beam_bif_info}},
               []}]],
         [{debug_line,66,21},{atom,{66,1},ignore}]},
     {clause,
         {66,1},
         [{var,{66,14},'Mod'}],
         [[{call,
               {66,24},
               {remote,{66,24},{atom,{66,24},erlang},{atom,{66,24},is_atom}},
               [{var,{66,32},'Mod'}]}]],
         [{debug_line,67,22},
          {call,
              {67,5},
              {atom,{67,5},smoke_disasm},
              [{block,0,
                   [{call,
                        {67,18},
                        {remote,
                            {67,22},
                            {atom,{67,18},code},
                            {atom,{67,23},which}},
                        [{var,{67,29},'Mod'}]}]}]}]},
     {clause,
         {68,1},
         [{var,{68,14},'File'}],
         [[{call,
               {68,25},
               {remote,{68,25},{atom,{68,25},erlang},{atom,{68,25},is_list}},
               [{var,{68,33},'File'}]}]],
         [{debug_line,69,23},
          {match,
              {69,5},
              {var,{69,5},'Res'},
              {call,
                  {69,11},
                  {remote,
                      {69,22},
                      {atom,{69,11},beam_disasm},
                      {atom,{69,23},file}},
                  [{var,{69,28},'File'}]}},
          {debug_line,70,24},
          {match,
              {70,5},
              {tuple,{70,5},[{atom,{70,6},beam_file},{var,{70,16},'_Mod'}]},
              {tuple,
                  {70,24},
                  [{call,
                       {70,25},
                       {remote,
                           {70,25},
                           {atom,{70,25},erlang},
                           {atom,{70,25},element}},
                       [{integer,{70,33},1},{var,{70,36},'Res'}]},
                   {call,
                       {70,41},
                       {remote,
                           {70,41},
                           {atom,{70,41},erlang},
                           {atom,{70,41},element}},
                       [{integer,{70,49},2},{var,{70,52},'Res'}]}]}}]}]}.
{function,
    {72,1},
    parallel,0,
    [{clause,
         {72,1},
         [],
         [[{call,
               {72,1},
               {remote,
                   {72,1},
                   {atom,{72,1},fake},
                   {atom,{72,1},is_beam_bif_info}},
               []}]],
         [{debug_line,72,25},{atom,{72,1},ignore}]},
     {clause,
         {72,1},
         [],[],
         [{debug_line,73,26},
          {'case',
              {73,5},
              {op,{73,41},
                  '=:=',
                  {call,
                      {73,10},
                      {remote,
                          {73,16},
                          {atom,{73,10},erlang},
                          {atom,{73,17},system_info}},
                      [{atom,{73,29},schedulers}]},
                  {integer,{73,45},1}},
              [{clause,
                   {74,2},
                   [{atom,{74,2},true}],
                   [],
                   [{debug_line,74,27},{nil,{74,10}}]},
               {clause,
                   {75,2},
                   [{atom,{75,2},false}],
                   [],
                   [{debug_line,75,28},
                    {cons,
                        {75,11},
                        {atom,{75,12},parallel},
                        {nil,{75,20}}}]}]}]}]}.
{function,
    {78,1},
    uniq,0,
    [{clause,
         {78,1},
         [],
         [[{call,
               {78,1},
               {remote,
                   {78,1},
                   {atom,{78,1},fake},
                   {atom,{78,1},is_beam_bif_info}},
               []}]],
         [{debug_line,78,29},{atom,{78,1},ignore}]},
     {clause,
         {78,1},
         [],[],
         [{debug_line,79,30},
          {match,
              {79,5},
              {var,{79,5},'U'},
              {call,
                  {79,9},
                  {remote,
                      {79,15},
                      {atom,{79,9},erlang},
                      {atom,{79,16},unique_integer}},
                  [{block,0,
                       [{cons,
                            {79,31},
                            {atom,{79,32},positive},
                            {nil,{79,40}}}]}]}},
          {debug_line,80,31},
          {op,{80,9},
              '++',
              {string,{80,5},"_"},
              {call,
                  {80,12},
                  {remote,
                      {80,12},
                      {atom,{80,12},erlang},
                      {atom,{80,12},integer_to_list}},
                  [{var,{80,28},'U'}]}}]}]}.
{function,
    {85,1},
    opt_opts,1,
    [{clause,
         {85,1},
         [{var,{85,1},'_'}],
         [[{call,
               {85,1},
               {remote,
                   {85,1},
                   {atom,{85,1},fake},
                   {atom,{85,1},is_beam_bif_info}},
               []}]],
         [{debug_line,85,32},{atom,{85,1},ignore}]},
     {clause,
         {85,1},
         [{var,{85,10},'Mod'}],
         [],
         [{debug_line,86,33},
          {match,
              {86,5},
              {var,{86,5},'Comp'},
              {call,
                  {86,12},
                  {remote,
                      {86,15},
                      {var,{86,12},'Mod'},
                      {atom,{86,16},module_info}},
                  [{atom,{86,28},compile}]}},
          {debug_line,88,34},
          {match,
              {88,5},
              {var,{88,5},'Opts'},
              {call,
                  {88,12},
                  {remote,
                      {88,21},
                      {atom,{88,12},proplists},
                      {atom,{88,22},get_value}},
                  [{atom,{88,32},options},
                   {var,{88,41},'Comp'},
                   {nil,{88,47}}]}},
          {debug_line,89,35},
          {call,
              {89,5},
              {remote,{89,10},{atom,{89,5},lists},{atom,{89,11},filter}},
              [{block,0,
                   [{'fun',
                        {89,18},
                        {clauses,
                            [{clause,
                                 {90,22},
                                 [{atom,{90,23},beam_debug_info}],
                                 [],
                                 [{debug_line,90,36},{atom,{90,43},true}]},
                             {clause,
                                 {91,22},
                                 [{atom,{91,23},debug_info}],
                                 [],
                                 [{debug_line,91,37},{atom,{91,38},true}]},
                             {clause,
                                 {92,22},
                                 [{atom,{92,23},dialyzer}],
                                 [],
                                 [{debug_line,92,38},{atom,{92,36},true}]},
                             {clause,
                                 {93,22},
                                 [{tuple,
                                      {93,23},
                                      [{atom,{93,24},feature},
                                       {var,{93,32},'_'},
                                       {atom,{93,34},enable}]}],
                                 [],
                                 [{debug_line,93,39},{atom,{93,46},true}]},
                             {clause,
                                 {94,22},
                                 [{tuple,
                                      {94,23},
                                      [{atom,{94,24},feature},
                                       {var,{94,32},'_'},
                                       {atom,{94,34},disable}]}],
                                 [],
                                 [{debug_line,94,40},{atom,{94,47},true}]},
                             {clause,
                                 {95,22},
                                 [{atom,{95,23},inline}],
                                 [],
                                 [{debug_line,95,41},{atom,{95,34},true}]},
                             {clause,
                                 {96,22},
                                 [{atom,{96,23},line_coverage}],
                                 [],
                                 [{debug_line,96,42},{atom,{96,41},true}]},
                             {clause,
                                 {97,22},
                                 [{atom,{97,23},no_badrecord}],
                                 [],
                                 [{debug_line,97,43},{atom,{97,40},true}]},
                             {clause,
                                 {98,22},
                                 [{atom,{98,23},no_bool_opt}],
                                 [],
                                 [{debug_line,98,44},{atom,{98,39},true}]},
                             {clause,
                                 {99,22},
                                 [{atom,{99,23},no_bs_create_bin}],
                                 [],
                                 [{debug_line,99,45},{atom,{99,44},true}]},
                             {clause,
                                 {100,22},
                                 [{atom,{100,23},no_bsm_opt}],
                                 [],
                                 [{debug_line,100,46},{atom,{100,38},true}]},
                             {clause,
                                 {101,22},
                                 [{atom,{101,23},no_bs_match}],
                                 [],
                                 [{debug_line,101,47},{atom,{101,39},true}]},
                             {clause,
                                 {102,22},
                                 [{atom,{102,23},no_copt}],
                                 [],
                                 [{debug_line,102,48},{atom,{102,35},true}]},
                             {clause,
                                 {103,22},
                                 [{atom,{103,23},no_fun_opt}],
                                 [],
                                 [{debug_line,103,49},{atom,{103,38},true}]},
                             {clause,
                                 {104,22},
                                 [{atom,{104,23},no_min_max_bifs}],
                                 [],
                                 [{debug_line,104,50},{atom,{104,43},true}]},
                             {clause,
                                 {105,22},
                                 [{atom,{105,23},no_module_opt}],
                                 [],
                                 [{debug_line,105,51},{atom,{105,41},true}]},
                             {clause,
                                 {106,22},
                                 [{atom,{106,23},no_postopt}],
                                 [],
                                 [{debug_line,106,52},{atom,{106,38},true}]},
                             {clause,
                                 {107,22},
                                 [{atom,{107,23},no_recv_opt}],
                                 [],
                                 [{debug_line,107,53},{atom,{107,39},true}]},
                             {clause,
                                 {108,22},
                                 [{atom,{108,23},no_share_opt}],
                                 [],
                                 [{debug_line,108,54},{atom,{108,40},true}]},
                             {clause,
                                 {109,22},
                                 [{atom,{109,23},no_ssa_opt_float}],
                                 [],
                                 [{debug_line,109,55},{atom,{109,44},true}]},
                             {clause,
                                 {110,22},
                                 [{atom,{110,23},no_ssa_opt_ranges}],
                                 [],
                                 [{debug_line,110,56},{atom,{110,45},true}]},
                             {clause,
                                 {111,22},
                                 [{atom,{111,23},no_ssa_opt}],
                                 [],
                                 [{debug_line,111,57},{atom,{111,38},true}]},
                             {clause,
                                 {112,22},
                                 [{atom,{112,23},no_stack_trimming}],
                                 [],
                                 [{debug_line,112,58},{atom,{112,45},true}]},
                             {clause,
                                 {113,22},
                                 [{atom,{113,23},no_type_opt}],
                                 [],
                                 [{debug_line,113,59},{atom,{113,39},true}]},
                             {clause,
                                 {114,22},
                                 [{var,{114,23},'_'}],
                                 [],
                                 [{debug_line,114,60},
                                  {atom,{114,29},false}]}]}}]},
               {var,{115,22},'Opts'}]}]}]}.
{function,
 {121,1},
 get_data_dir,1,
 [{clause,
   {121,1},
   [{var,{121,1},'_'}],
   [[{call,
      {121,1},
      {remote,{121,1},{atom,{121,1},fake},{atom,{121,1},is_beam_bif_info}},
      []}]],
   [{debug_line,121,61},{atom,{121,1},ignore}]},
  {clause,
   {121,1},
   [{var,{121,14},'Config'}],
   [],
   [{debug_line,122,62},
    {match,
     {122,5},
     {var,{122,5},'Data'},
     {call,
      {122,12},
      {remote,{122,21},{atom,{122,12},proplists},{atom,{122,22},get_value}},
      [{atom,{122,32},data_dir},{var,{122,42},'Config'}]}},
    {debug_line,123,63},
    {match,
     {123,5},
     {var,{123,5},'Opts'},
     {cons,
      {123,12},
      {tuple,{123,13},[{atom,{123,14},return},{atom,{123,21},list}]},
      {nil,{123,26}}}},
    {debug_line,124,64},
    {match,
     {124,5},
     {var,{124,5},'Suffixes'},
     {cons,
      {124,16},
      {string,{124,17},"_no_opt_SUITE"},
      {cons,
       {125,17},
       {string,{125,17},"_no_bool_opt_SUITE"},
       {cons,
        {126,17},
        {string,{126,17},"_no_copt_SUITE"},
        {cons,
         {127,17},
         {string,{127,17},"_no_copt_ssa_SUITE"},
         {cons,
          {128,17},
          {string,{128,17},"_post_opt_SUITE"},
          {cons,
           {129,17},
           {string,{129,17},"_inline_SUITE"},
           {cons,
            {130,17},
            {string,{130,17},"_no_module_opt_SUITE"},
            {cons,
             {131,17},
             {string,{131,17},"_no_type_opt_SUITE"},
             {cons,
              {132,17},
              {string,{132,17},"_no_ssa_opt_SUITE"},
              {cons,
               {133,17},
               {string,{133,17},"_cover_SUITE"},
               {nil,{133,31}}}}}}}}}}}}},
    {debug_line,134,65},
    {call,
     {134,5},
     {remote,{134,10},{atom,{134,5},lists},{atom,{134,11},foldl}},
     [{block,0,
       [{'fun',
         {134,17},
         {clauses,
          [{clause,
            {134,20},
            [{var,{134,21},'Suffix'},{var,{134,29},'Acc'}],
            [],
            [{debug_line,135,66},
             {match,
              {135,25},
              {var,{135,25},'Opts'},
              {cons,
               {135,32},
               {tuple,{135,33},[{atom,{135,34},return},{atom,{135,41},list}]},
               {nil,{135,46}}}},
             {debug_line,136,67},
             {call,
              {136,25},
              {remote,{136,27},{atom,{136,25},re},{atom,{136,28},replace}},
              [{var,{136,36},'Acc'},
               {var,{136,41},'Suffix'},
               {block,0,[{string,{136,49},"_SUITE"}]},
               {var,{136,59},'Opts'}]}]}]}}]},
      {var,{137,22},'Data'},
      {var,{137,28},'Suffixes'}]}]}]}.
{function,{143,1},
          is_cloned,1,
          [{clause,{143,1},
                   [{var,{143,1},'_'}],
                   [[{call,{143,1},
                           {remote,{143,1},
                                   {atom,{143,1},fake},
                                   {atom,{143,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,143,68},{atom,{143,1},ignore}]},
           {clause,{143,1},
                   [{string,{143,11},"_no_opt_SUITE"}],
                   [],
                   [{debug_line,143,69},{atom,{143,31},true}]},
           {clause,{144,1},
                   [{string,{144,11},"_no_bool_opt_SUITE"}],
                   [],
                   [{debug_line,144,70},{atom,{144,36},true}]},
           {clause,{145,1},
                   [{string,{145,11},"_no_copt_SUITE"}],
                   [],
                   [{debug_line,145,71},{atom,{145,32},true}]},
           {clause,{146,1},
                   [{string,{146,11},"_no_copt_ssa_SUITE"}],
                   [],
                   [{debug_line,146,72},{atom,{146,36},true}]},
           {clause,{147,1},
                   [{string,{147,11},"_no_ssa_opt_SUITE"}],
                   [],
                   [{debug_line,147,73},{atom,{147,35},true}]},
           {clause,{148,1},
                   [{string,{148,11},"_no_type_opt_SUITE"}],
                   [],
                   [{debug_line,148,74},{atom,{148,36},true}]},
           {clause,{149,1},
                   [{string,{149,11},"_post_opt_SUITE"}],
                   [],
                   [{debug_line,149,75},{atom,{149,33},true}]},
           {clause,{150,1},
                   [{string,{150,11},"_inline_SUITE"}],
                   [],
                   [{debug_line,150,76},{atom,{150,31},true}]},
           {clause,{151,1},
                   [{string,{151,11},"_no_module_opt_SUITE"}],
                   [],
                   [{debug_line,151,77},{atom,{151,38},true}]},
           {clause,{152,1},
                   [{string,{152,11},"_cover_SUITE"}],
                   [],
                   [{debug_line,152,78},{atom,{152,30},true}]},
           {clause,{153,1},
                   [{cons,{153,11},{var,{153,12},'_'},{var,{153,14},'T'}}],
                   [],
                   [{debug_line,153,79},
                    {call,{153,21},
                          {atom,{153,21},is_cloned},
                          [{var,{153,31},'T'}]}]},
           {clause,{154,1},
                   [{nil,{154,11}}],
                   [],
                   [{debug_line,154,80},{atom,{154,18},false}]}]}.
{function,
    {158,1},
    highest_opcode,1,
    [{clause,
         {158,1},
         [{var,{158,1},'_'}],
         [[{call,
               {158,1},
               {remote,
                   {158,1},
                   {atom,{158,1},fake},
                   {atom,{158,1},is_beam_bif_info}},
               []}]],
         [{debug_line,158,81},{atom,{158,1},ignore}]},
     {clause,
         {158,1},
         [{var,{158,16},'Beam'}],
         [],
         [{debug_line,159,82},
          {match,
              {159,5},
              {tuple,
                  {159,5},
                  [{atom,{159,6},ok},
                   {tuple,
                       {159,9},
                       [{var,{159,10},'_Mod'},
                        {cons,
                            {159,15},
                            {tuple,
                                {159,16},
                                [{string,{159,17},"Code"},
                                 {var,{159,24},'Code'}]},
                            {nil,{159,29}}}]}]},
              {call,
                  {159,35},
                  {remote,
                      {159,43},
                      {atom,{159,35},beam_lib},
                      {atom,{159,44},chunks}},
                  [{var,{159,51},'Beam'},
                   {block,0,
                       [{cons,
                            {159,57},
                            {string,{159,58},"Code"},
                            {nil,{159,64}}}]}]}},
          {debug_line,160,83},
          {match,{160,5},{var,{160,5},'FormatNumber'},{integer,{160,20},0}},
          {debug_line,161,84},
          {match,
              {161,5},
              {bin,
                  {161,5},
                  [{bin_element,
                       {161,7},
                       {integer,{161,7},16},
                       {integer,{161,10},32},
                       default},
                   {bin_element,
                       {161,13},
                       {var,{161,13},'FormatNumber'},
                       {integer,{161,26},32},
                       default},
                   {bin_element,
                       {161,29},
                       {var,{161,29},'HighestOpcode'},
                       {integer,{161,43},32},
                       default},
                   {bin_element,
                       {161,46},
                       {var,{161,46},'_'},
                       default,
                       [binary]}]},
              {var,{161,59},'Code'}},
          {debug_line,162,85},
          {var,{162,5},'HighestOpcode'}]}]}.
{function,
    {165,1},
    get_unique_files,1,
    [{clause,
         {165,1},
         [{var,{165,1},'_'}],
         [[{call,
               {165,1},
               {remote,
                   {165,1},
                   {atom,{165,1},fake},
                   {atom,{165,1},is_beam_bif_info}},
               []}]],
         [{debug_line,165,86},{atom,{165,1},ignore}]},
     {clause,
         {165,1},
         [{var,{165,18},'Ext'}],
         [],
         [{debug_line,166,87},
          {call,
              {166,5},
              {atom,{166,5},get_unique_files},
              [{var,{166,22},'Ext'},
               {block,0,
                   [{'fun',
                        {166,27},
                        {clauses,
                            [{clause,
                                 {166,30},
                                 [{var,{166,31},'_ModString'}],
                                 [],
                                 [{atom,{166,46},false}]}]}}]}]}]}]}.
{function,
 {168,1},
 get_unique_files,2,
 [{clause,
   {168,1},
   [{var,{168,1},'_'},{var,{168,1},'_'}],
   [[{call,
      {168,1},
      {remote,{168,1},{atom,{168,1},fake},{atom,{168,1},is_beam_bif_info}},
      []}]],
   [{debug_line,168,88},{atom,{168,1},ignore}]},
  {clause,
   {168,1},
   [{var,{168,18},'Ext'},{var,{168,23},'IsCloned'}],
   [[{call,
      {168,38},
      {remote,{168,38},{atom,{168,38},erlang},{atom,{168,38},is_function}},
      [{var,{168,50},'IsCloned'},{integer,{168,60},1}]}]],
   [{debug_line,169,89},
    {match,
     {169,5},
     {var,{169,5},'Wc'},
     {call,
      {169,10},
      {remote,{169,18},{atom,{169,10},filename},{atom,{169,19},join}},
      [{block,0,
        [{call,
          {169,24},
          {remote,{169,32},{atom,{169,24},filename},{atom,{169,33},dirname}},
          [{block,0,
            [{call,
              {169,41},
              {remote,{169,45},{atom,{169,41},code},{atom,{169,46},which}},
              [{atom,{169,53},test_lib}]}]}]}]},
       {block,0,
        [{op,{169,66},'++',{string,{169,63},"*"},{var,{169,68},'Ext'}}]}]}},
    {debug_line,170,90},
    {lc,
     {170,5},
     {block,0,[{var,{170,6},'F'}]},
     [{block,0,[{atom,{170,16},true}]},
      {generate,
       {170,13},
       {var,{170,11},'F'},
       {call,
        {170,16},
        {remote,{170,23},{atom,{170,16},filelib},{atom,{170,24},wildcard}},
        [{var,{170,33},'Wc'}]}},
      {block,0,[{debug_line,171,91},{atom,{171,4},true}]},
      {op,
       {171,4},
       'not',
       {call,
        {171,8},
        {atom,{171,8},is_cloned},
        [{var,{171,18},'F'},{var,{171,21},'Ext'},{var,{171,26},'IsCloned'}]}},
      {block,0,[{atom,{171,37},true}]},
      {op,
       {171,37},
       'not',
       {call,
        {171,41},
        {atom,{171,41},is_lfe_module},
        [{var,{171,55},'F'},{var,{171,58},'Ext'}]}}]}]}]}.
{function,
    {173,1},
    is_cloned,3,
    [{clause,
         {173,1},
         [{var,{173,1},'_'},{var,{173,1},'_'},{var,{173,1},'_'}],
         [[{call,
               {173,1},
               {remote,
                   {173,1},
                   {atom,{173,1},fake},
                   {atom,{173,1},is_beam_bif_info}},
               []}]],
         [{debug_line,173,92},{atom,{173,1},ignore}]},
     {clause,
         {173,1},
         [{var,{173,11},'File'},
          {var,{173,17},'Ext'},
          {var,{173,22},'IsCloned'}],
         [],
         [{debug_line,174,93},
          {match,
              {174,5},
              {var,{174,5},'ModString'},
              {call,
                  {174,17},
                  {remote,
                      {174,25},
                      {atom,{174,17},filename},
                      {atom,{174,26},basename}},
                  [{var,{174,35},'File'},{var,{174,41},'Ext'}]}},
          {debug_line,175,94},
          {'case',
              {175,5},
              {call,
                  {175,5},
                  {atom,{175,5},is_cloned},
                  [{var,{175,15},'ModString'}]},
              [{clause,{175,5},[{atom,{175,5},true}],[],[{atom,{175,5},true}]},
               {clause,
                   {175,5},
                   [{atom,{175,5},false}],
                   [],
                   [{call,
                        {175,33},
                        {var,{175,33},'IsCloned'},
                        [{var,{175,42},'ModString'}]}]},
               {clause,
                   [{generated,true},{location,{175,5}}],
                   [{var,{175,5},cov1}],
                   [],
                   [{call,
                        {175,5},
                        {remote,
                            {175,5},
                            {atom,{175,5},erlang},
                            {atom,{175,5},error}},
                        [{block,0,
                             [{tuple,
                                  {175,5},
                                  [{atom,{175,5},badarg},
                                   {var,{175,5},cov1}]}]}]}]}]}]}]}.
{function,
    {177,1},
    is_lfe_module,2,
    [{clause,
         {177,1},
         [{var,{177,1},'_'},{var,{177,1},'_'}],
         [[{call,
               {177,1},
               {remote,
                   {177,1},
                   {atom,{177,1},fake},
                   {atom,{177,1},is_beam_bif_info}},
               []}]],
         [{debug_line,177,95},{atom,{177,1},ignore}]},
     {clause,
         {177,1},
         [{var,{177,15},'File'},{var,{177,21},'Ext'}],
         [],
         [{debug_line,178,96},
          {'case',
              {178,5},
              {call,
                  {178,10},
                  {remote,
                      {178,18},
                      {atom,{178,10},filename},
                      {atom,{178,19},basename}},
                  [{var,{178,28},'File'},{var,{178,34},'Ext'}]},
              [{clause,
                   {179,2},
                   [{op,{179,9},
                        '++',
                        {string,{179,2},"lfe_"},
                        {var,{179,12},'_'}}],
                   [],
                   [{debug_line,179,97},{atom,{179,17},true}]},
               {clause,
                   {180,2},
                   [{var,{180,2},'_'}],
                   [],
                   [{debug_line,180,98},{atom,{180,7},false}]}]}]}]}.
{function,
    {186,1},
    p_run,2,
    [{clause,
         {186,1},
         [{var,{186,1},'_'},{var,{186,1},'_'}],
         [[{call,
               {186,1},
               {remote,
                   {186,1},
                   {atom,{186,1},fake},
                   {atom,{186,1},is_beam_bif_info}},
               []}]],
         [{debug_line,186,99},{atom,{186,1},ignore}]},
     {clause,
         {186,1},
         [{var,{186,7},'Test'},{var,{186,13},'List'}],
         [],
         [{debug_line,191,100},
          {match,
              {191,5},
              {var,{191,5},'N'},
              {'case',
                  {191,9},
                  {tuple,
                      {191,14},
                      [{call,
                           {191,15},
                           {remote,
                               {191,21},
                               {atom,{191,15},erlang},
                               {atom,{191,22},system_info}},
                           [{atom,{191,34},schedulers}]},
                       {call,
                           {191,46},
                           {remote,
                               {191,52},
                               {atom,{191,46},erlang},
                               {atom,{191,53},system_info}},
                           [{atom,{191,65},wordsize}]}]},
                  [{clause,
                       {192,13},
                       [{tuple,
                            {192,13},
                            [{var,{192,14},'_'},{integer,{192,16},4}]}],
                       [],
                       [{debug_line,193,101},{integer,{193,17},1}]},
                   {clause,
                       {194,13},
                       [{tuple,
                            {194,13},
                            [{var,{194,14},'N0'},{integer,{194,17},8}]}],
                       [],
                       [{debug_line,195,102},
                        {call,
                            {195,17},
                            {remote,
                                {195,17},
                                {atom,{195,17},erlang},
                                {atom,{195,17},min}},
                            [{var,{195,21},'N0'},{integer,{195,25},8}]}]}]}},
          {debug_line,197,103},
          {call,
              {197,5},
              {atom,{197,5},p_run},
              [{var,{197,11},'Test'},
               {var,{197,17},'List'},
               {var,{197,23},'N'}]}]}]}.
{function,
    {199,1},
    p_run,3,
    [{clause,
         {199,1},
         [{var,{199,1},'_'},{var,{199,1},'_'},{var,{199,1},'_'}],
         [[{call,
               {199,1},
               {remote,
                   {199,1},
                   {atom,{199,1},fake},
                   {atom,{199,1},is_beam_bif_info}},
               []}]],
         [{debug_line,199,104},{atom,{199,1},ignore}]},
     {clause,
         {199,1},
         [{var,{199,7},'Test'},{var,{199,13},'List'},{var,{199,19},'N'}],
         [],
         [{debug_line,200,105},
          {call,
              {200,5},
              {remote,{200,7},{atom,{200,5},io},{atom,{200,8},format}},
              [{block,0,
                   [{string,
                        {200,15},
                        "p_run: ~p parallel processes; ~p jobs\n"}]},
               {block,0,
                   [{debug_line,201,106},
                    {cons,
                        {201,15},
                        {var,{201,16},'N'},
                        {cons,
                            {201,18},
                            {call,
                                {201,18},
                                {remote,
                                    {201,18},
                                    {atom,{201,18},erlang},
                                    {atom,{201,18},length}},
                                [{var,{201,25},'List'}]},
                            {nil,{201,30}}}}]}]},
          {debug_line,202,107},
          {call,
              {202,5},
              {atom,{202,5},p_run_loop},
              [{var,{202,16},'Test'},
               {var,{202,22},'List'},
               {var,{202,28},'N'},
               {nil,{202,31}},
               {integer,{202,35},0},
               {integer,{202,38},0}]}]}]}.
{function,
 {204,1},
 p_run_loop,6,
 [{clause,
   {204,1},
   [{var,{204,1},'_'},
    {var,{204,1},'_'},
    {var,{204,1},'_'},
    {var,{204,1},'_'},
    {var,{204,1},'_'},
    {var,{204,1},'_'}],
   [[{call,
      {204,1},
      {remote,{204,1},{atom,{204,1},fake},{atom,{204,1},is_beam_bif_info}},
      []}]],
   [{debug_line,204,108},{atom,{204,1},ignore}]},
  {clause,
   {204,1},
   [{var,{204,12},'_'},
    {nil,{204,15}},
    {var,{204,19},'_'},
    {nil,{204,22}},
    {var,{204,26},'Errors'},
    {var,{204,34},'Ws'}],
   [],
   [{debug_line,205,109},
    {'case',
     {205,5},
     {var,{205,10},'Errors'},
     [{clause,
       {206,2},
       [{integer,{206,2},0}],
       [],
       [{debug_line,207,110},
        {'case',
         {207,6},
         {var,{207,11},'Ws'},
         [{clause,
           {208,3},
           [{integer,{208,3},0}],
           [],
           [{debug_line,208,111},{atom,{208,8},ok}]},
          {clause,
           {209,3},
           [{integer,{209,3},1}],
           [],
           [{debug_line,209,112},
            {tuple,
             {209,8},
             [{atom,{209,9},comment},{string,{209,17},"1 warning"}]}]},
          {clause,
           {210,3},
           [{var,{210,3},'N'}],
           [],
           [{debug_line,210,113},
            {tuple,
             {210,8},
             [{atom,{210,9},comment},
              {op,
               {210,35},
               '++',
               {call,
                {210,17},
                {remote,
                 {210,17},
                 {atom,{210,17},erlang},
                 {atom,{210,17},integer_to_list}},
                [{var,{210,33},'N'}]},
               {string,{210,37}," warnings"}}]}]}]}]},
      {clause,
       {212,2},
       [{var,{212,2},'N'}],
       [],
       [{debug_line,213,114},
        {call,
         {213,6},
         {remote,{213,8},{atom,{213,6},ct},{atom,{213,9},fail}},
         [{block,0,
           [{tuple,
             {213,14},
             [{var,{213,15},'N'},{atom,{213,17},errors}]}]}]}]}]}]},
  {clause,
   {215,1},
   [{var,{215,12},'Test'},
    {cons,{215,18},{var,{215,19},'H'},{var,{215,21},'T'}},
    {var,{215,25},'N'},
    {var,{215,28},'Refs'},
    {var,{215,34},'Errors'},
    {var,{215,42},'Ws'}],
   [[{op,
      {215,64},
      '<',
      {call,
       {215,51},
       {remote,{215,51},{atom,{215,51},erlang},{atom,{215,51},length}},
       [{var,{215,58},'Refs'}]},
      {var,{215,66},'N'}}]],
   [{debug_line,216,115},
    {match,
     {216,5},
     {tuple,{216,5},[{var,{216,6},'_'},{var,{216,8},'Ref'}]},
     {call,
      {216,15},
      {remote,{216,21},{atom,{216,15},erlang},{atom,{216,22},spawn_monitor}},
      [{block,0,
        [{'fun',
          {216,36},
          {clauses,
           [{clause,
             {216,39},
             [],[],
             [{call,
               {216,45},
               {remote,{216,45},{atom,{216,45},erlang},{atom,{216,45},exit}},
               [{block,0,
                 [{call,
                   {216,50},
                   {var,{216,50},'Test'},
                   [{var,{216,55},'H'}]}]}]}]}]}}]}]}},
    {debug_line,217,116},
    {call,
     {217,5},
     {atom,{217,5},p_run_loop},
     [{var,{217,16},'Test'},
      {var,{217,22},'T'},
      {var,{217,25},'N'},
      {block,0,[{cons,{217,28},{var,{217,29},'Ref'},{var,{217,33},'Refs'}}]},
      {var,{217,40},'Errors'},
      {var,{217,48},'Ws'}]}]},
  {clause,
   {218,1},
   [{var,{218,12},'Test'},
    {var,{218,18},'List'},
    {var,{218,24},'N'},
    {var,{218,27},'Refs0'},
    {var,{218,34},'Errors0'},
    {var,{218,43},'Ws0'}],
   [],
   [{debug_line,219,117},
    {'receive',
     {219,5},
     [{clause,
       {220,2},
       [{tuple,
         {220,2},
         [{atom,{220,3},'DOWN'},
          {var,{220,10},'Ref'},
          {atom,{220,14},process},
          {var,{220,22},'_'},
          {var,{220,24},'Res'}]}],
       [],
       [{debug_line,221,118},
        {match,
         {221,6},
         {tuple,{221,6},[{var,{221,7},'Errors'},{var,{221,14},'Ws'}]},
         {'case',
          {221,20},
          {var,{221,25},'Res'},
          [{clause,
            {222,10},
            [{atom,{222,10},ok}],
            [],
            [{debug_line,222,119},
             {tuple,
              {222,16},
              [{var,{222,17},'Errors0'},{var,{222,25},'Ws0'}]}]},
           {clause,
            {223,10},
            [{atom,{223,10},error}],
            [],
            [{debug_line,223,120},
             {tuple,
              {223,19},
              [{op,{223,27},'+',{var,{223,20},'Errors0'},{integer,{223,28},1}},
               {var,{223,30},'Ws0'}]}]},
           {clause,
            {224,10},
            [{atom,{224,10},warning}],
            [],
            [{debug_line,224,121},
             {tuple,
              {224,21},
              [{var,{224,22},'Errors0'},
               {op,
                {224,33},
                '+',
                {var,{224,30},'Ws0'},
                {integer,{224,34},1}}]}]}]}},
        {debug_line,226,122},
        {match,
         {226,6},
         {var,{226,6},'Refs'},
         {op,
          {226,19},
          '--',
          {var,{226,13},'Refs0'},
          {cons,{226,22},{var,{226,23},'Ref'},{nil,{226,26}}}}},
        {debug_line,227,123},
        {call,
         {227,6},
         {atom,{227,6},p_run_loop},
         [{var,{227,17},'Test'},
          {var,{227,23},'List'},
          {var,{227,29},'N'},
          {var,{227,32},'Refs'},
          {var,{227,38},'Errors'},
          {var,{227,46},'Ws'}]}]}]}]}]}.
{function,{231,1},
          binary_part,2,
          [{clause,{231,1},
                   [{var,{231,1},'_'},{var,{231,1},'_'}],
                   [[{call,{231,1},
                           {remote,{231,1},
                                   {atom,{231,1},fake},
                                   {atom,{231,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,231,124},{atom,{231,1},ignore}]},
           {clause,{231,1},
                   [{var,{231,13},'_A'},{var,{231,16},'_B'}],
                   [],
                   [{debug_line,232,125},{atom,{232,5},dummy}]}]}.
{function,{235,1},
          binary,1,
          [{clause,{235,1},
                   [{var,{235,1},'_'}],
                   [[{call,{235,1},
                           {remote,{235,1},
                                   {atom,{235,1},fake},
                                   {atom,{235,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,235,126},{atom,{235,1},ignore}]},
           {clause,{235,1},
                   [{var,{235,8},'N'}],
                   [],
                   [{debug_line,236,127},
                    {op,{236,14},
                        '=:=',
                        {op,{236,7},
                            'rem',
                            {var,{236,5},'N'},
                            {integer,{236,11},10}},
                        {integer,{236,18},0}}]}]}.
{eof,{237,1}}.
