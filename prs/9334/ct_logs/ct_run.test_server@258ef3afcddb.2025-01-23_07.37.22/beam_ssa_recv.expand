{attribute,{1,1},file,{"beam_ssa_recv.erl",1}}.
{attribute,{21,2},module,beam_ssa_recv}.
{attribute,{23,2},export,[{format_error,1},{module,2}]}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{107,1},file,{"beam_ssa_recv.erl",107}}.
{attribute,{108,2},import,{lists,[{foldl,3},{member,2},{search,2}]}}.
{attribute,{115,2},
           spec,
           {{format_error,1},
            [{type,{115,19},
                   'fun',
                   [{type,{115,19},product,[{type,{115,20},term,[]}]},
                    {type,{115,31},nonempty_string,[]}]}]}}.
{function,{117,1},
          format_error,1,
          [{clause,{117,1},
                   [{var,{117,1},'_'}],
                   [[{call,{117,1},
                           {remote,{117,1},
                                   {atom,{117,1},fake},
                                   {atom,{117,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,117,1},{atom,{117,1},ignore}]},
           {clause,{117,1},
                   [{var,{117,14},'OptInfo'}],
                   [],
                   [{debug_line,118,2},
                    {call,{118,5},
                          {atom,{118,5},format_opt_info},
                          [{var,{118,21},'OptInfo'}]}]}]}.
{attribute,
    {120,2},
    record,
    {scan,
        [{record_field,
             {120,17},
             {atom,{120,17},graph},
             {call,
                 {120,23},
                 {remote,
                     {120,35},
                     {atom,{120,23},beam_digraph},
                     {atom,{120,36},new}},
                 []}},
         {typed_record_field,
             {record_field,{121,17},{atom,{121,17},module}},
             {type,
                 {121,27},
                 map,
                 [{type,
                      {121,49},
                      map_field_assoc,
                      [{remote_type,
                           {121,30},
                           [{atom,{121,30},beam_ssa},
                            {atom,{121,39},b_local},
                            []]},
                       {type,
                           {121,52},
                           tuple,
                           [{remote_type,
                                {121,53},
                                [{atom,{121,53},beam_ssa},
                                 {atom,{121,62},block_map},
                                 []]},
                            {type,
                                {122,53},
                                list,
                                [{remote_type,
                                     {122,54},
                                     [{atom,{122,54},beam_ssa},
                                      {atom,{122,63},b_var},
                                      []]}]},
                            {type,
                                {123,53},
                                list,
                                [{remote_type,
                                     {123,54},
                                     [{atom,{123,54},beam_ssa},
                                      {atom,{123,63},b_var},
                                      []]}]}]}]}]}},
         {record_field,
             {124,17},
             {atom,{124,17},recv_candidates},
             {map,{124,33},[]}},
         {record_field,
             {125,17},
             {atom,{125,17},ref_candidates},
             {map,{125,32},[]}}]}}.
{attribute,
    {127,2},
    spec,
    {{module,2},
     [{type,
          {127,13},
          bounded_fun,
          [{type,
               {127,13},
               'fun',
               [{type,
                    {127,13},
                    product,
                    [{var,{127,14},'Module'},{var,{127,22},'Options'}]},
                {var,{127,34},'Result'}]},
           [{type,
                {128,7},
                constraint,
                [{atom,{128,7},is_subtype},
                 [{var,{128,7},'Module'},
                  {remote_type,
                      {128,17},
                      [{atom,{128,17},beam_ssa},
                       {atom,{128,26},b_module},
                       []]}]]},
            {type,
                {129,7},
                constraint,
                [{atom,{129,7},is_subtype},
                 [{var,{129,7},'Options'},
                  {type,
                      {129,18},
                      list,
                      [{remote_type,
                           {129,19},
                           [{atom,{129,19},compile},
                            {atom,{129,27},option},
                            []]}]}]]},
            {type,
                {130,7},
                constraint,
                [{atom,{130,7},is_subtype},
                 [{var,{130,7},'Result'},
                  {type,
                      {130,17},
                      tuple,
                      [{atom,{130,18},ok},
                       {remote_type,
                           {130,22},
                           [{atom,{130,22},beam_ssa},
                            {atom,{130,31},b_module},
                            []]},
                       {type,{130,43},list,[]}]}]]}]]}]}}.
{function,
 {132,1},
 module,2,
 [{clause,
   {132,1},
   [{var,{132,1},'_'},{var,{132,1},'_'}],
   [[{call,
      {132,1},
      {remote,{132,1},{atom,{132,1},fake},{atom,{132,1},is_beam_bif_info}},
      []}]],
   [{debug_line,132,3},{atom,{132,1},ignore}]},
  {clause,
   {132,1},
   [{match,
     {132,8},
     {tuple,
      {132,8},
      [{atom,{132,8},b_module},
       {var,{132,8},'_'},
       {var,{132,8},'_'},
       {var,{132,8},'_'},
       {var,{132,8},'_'},
       {var,{132,8},'_'}]},
     {var,{132,20},'Mod0'}},
    {var,{132,26},'Opts'}],
   [],
   [{debug_line,133,4},
    {'case',
     {133,5},
     {call,{133,10},{atom,{133,10},scan},[{var,{133,15},'Mod0'}]},
     [{clause,
       {134,9},
       [{match,
         {134,9},
         {tuple,
          {134,9},
          [{atom,{134,9},scan},
           {var,{134,9},'_'},
           {var,{134,9},'_'},
           {var,{134,9},'_'},
           {var,{134,9},'_'}]},
         {var,{134,17},'Scan'}}],
       [],
       [{debug_line,137,5},
        {match,
         {137,13},
         {tuple,
          {137,13},
          [{var,{137,14},'Markers'},
           {var,{137,23},'Uses'},
           {var,{137,29},'Clears'}]},
         {call,{137,39},{atom,{137,39},plan},[{var,{137,44},'Scan'}]}},
        {debug_line,141,6},
        {match,
         {141,13},
         {atom,{141,13},true},
         {op,
          {141,38},
          '=:=',
          {op,{141,29},'=/=',{var,{141,21},'Markers'},{map,{141,33},[]}},
          {op,{141,48},'=/=',{var,{141,43},'Uses'},{map,{141,52},[]}}}},
        {debug_line,142,7},
        {match,
         {142,13},
         {atom,{142,13},true},
         {'case',
          {142,28},
          {op,{142,28},'=:=',{var,{142,21},'Clears'},{map,{142,32},[]}},
          [{clause,{142,28},[{atom,{142,28},true}],[],[{atom,{142,28},true}]},
           {clause,
            {142,28},
            [{atom,{142,28},false}],
            [],
            [{op,{142,53},'=/=',{var,{142,45},'Markers'},{map,{142,57},[]}}]},
           {clause,
            [{generated,true},{location,{142,28}}],
            [{var,{142,28},cov1}],
            [],
            [{call,
              {142,28},
              {remote,{142,28},{atom,{142,28},erlang},{atom,{142,28},error}},
              [{block,0,
                [{tuple,
                  {142,28},
                  [{atom,{142,28},badarg},{var,{142,28},cov1}]}]}]}]}]}},
        {debug_line,144,8},
        {match,
         {144,13},
         {var,{144,13},'Mod'},
         {call,
          {144,19},
          {atom,{144,19},optimize},
          [{var,{144,28},'Mod0'},
           {var,{144,34},'Markers'},
           {var,{144,43},'Uses'},
           {var,{144,49},'Clears'}]}},
        {debug_line,146,9},
        {match,
         {146,13},
         {var,{146,13},'Ws'},
         {'case',
          {146,18},
          {call,
           {146,23},
           {remote,
            {146,32},
            {atom,{146,23},proplists},
            {atom,{146,33},get_bool}},
           [{atom,{146,42},recv_opt_info},{var,{146,57},'Opts'}]},
          [{clause,
            {147,22},
            [{atom,{147,22},true}],
            [],
            [{debug_line,147,10},
             {call,
              {147,30},
              {atom,{147,30},collect_opt_info},
              [{var,{147,47},'Mod'}]}]},
           {clause,
            {148,22},
            [{atom,{148,22},false}],
            [],
            [{debug_line,148,11},{nil,{148,31}}]}]}},
        {debug_line,151,12},
        {tuple,
         {151,13},
         [{atom,{151,14},ok},{var,{151,18},'Mod'},{var,{151,23},'Ws'}]}]},
      {clause,
       {152,9},
       [{atom,{152,9},none}],
       [],
       [{debug_line,154,13},
        {tuple,
         {154,13},
         [{atom,{154,14},ok},{var,{154,18},'Mod0'},{nil,{154,24}}]}]}]}]}]}.
{function,
 {157,1},
 scan,1,
 [{clause,
   {157,1},
   [{var,{157,1},'_'}],
   [[{call,
      {157,1},
      {remote,{157,1},{atom,{157,1},fake},{atom,{157,1},is_beam_bif_info}},
      []}]],
   [{debug_line,157,14},{atom,{157,1},ignore}]},
  {clause,
   {157,1},
   [{tuple,
     {157,6},
     [{atom,{157,6},b_module},
      {var,{157,6},'_'},
      {var,{157,6},'_'},
      {var,{157,6},'_'},
      {var,{157,6},'_'},
      {var,{157,21},'Fs'}]}],
   [],
   [{debug_line,161,15},
    {'case',
     {161,5},
     {call,{161,10},{atom,{161,10},scan_peek_message},[{var,{161,28},'Fs'}]},
     [{clause,
       {162,9},
       [{match,
         {162,9},
         {cons,{162,9},{var,{162,10},'_'},{var,{162,12},'_'}},
         {var,{162,15},'Rs0'}}],
       [],
       [{debug_line,163,16},
        {match,
         {163,13},
         {var,{163,13},'Rs'},
         {call,
          {163,18},
          {remote,{163,22},{atom,{163,18},maps},{atom,{163,23},from_list}},
          [{var,{163,33},'Rs0'}]}},
        {debug_line,164,17},
        {match,
         {164,13},
         {var,{164,13},'ModMap'},
         {call,
          {164,22},
          {remote,{164,22},{atom,{164,22},lists},{atom,{164,22},foldl}},
          [{block,0,
            [{'fun',
              {164,28},
              {clauses,
               [{clause,
                 {164,31},
                 [{match,
                   {164,32},
                   {tuple,
                    {164,32},
                    [{atom,{164,32},b_function},
                     {var,{164,32},'_'},
                     {var,{164,59},'Args'},
                     {var,{164,47},'Blocks'},
                     {var,{164,32},'_'}]},
                   {var,{164,65},'F'}},
                  {var,{164,68},'Acc'}],
                 [],
                 [{debug_line,165,18},
                  {match,
                   {165,36},
                   {var,{165,36},'FuncId'},
                   {call,
                    {165,45},
                    {atom,{165,45},get_func_id},
                    [{var,{165,57},'F'}]}},
                  {debug_line,166,19},
                  {match,
                   {166,36},
                   {var,{166,36},'Rets'},
                   {call,
                    {166,43},
                    {atom,{166,43},scan_rets},
                    [{var,{166,53},'Blocks'}]}},
                  {debug_line,167,20},
                  {map,
                   {167,39},
                   {var,{167,36},'Acc'},
                   [{map_field_assoc,
                     {167,49},
                     {var,{167,42},'FuncId'},
                     {tuple,
                      {167,52},
                      [{var,{167,53},'Blocks'},
                       {var,{167,61},'Args'},
                       {var,{167,67},'Rets'}]}}]}]}]}}]},
           {block,0,[{debug_line,168,21},{map,{168,33},[]}]},
           {var,{168,38},'Fs'}]}},
        {debug_line,169,22},
        {call,
         {169,13},
         {remote,{169,13},{atom,{169,13},lists},{atom,{169,13},foldl}},
         [{block,0,
           [{'fun',
             {169,19},
             {clauses,
              [{clause,
                {169,22},
                [{var,{169,23},'F'},{var,{169,26},'Scan0'}],
                [],
                [{debug_line,170,23},
                 {match,
                  {170,27},
                  {var,{170,27},'FuncId'},
                  {call,
                   {170,36},
                   {atom,{170,36},get_func_id},
                   [{var,{170,48},'F'}]}},
                 {debug_line,172,24},
                 {match,
                  {172,27},
                  {var,{172,27},'Scan'},
                  {call,
                   {172,34},
                   {atom,{172,34},scan_add_vertex},
                   [{block,0,
                     [{tuple,
                       {172,50},
                       [{var,{172,51},'FuncId'},{integer,{172,60},0}]}]},
                    {var,{172,74},'Scan0'}]}},
                 {debug_line,173,25},
                 {call,
                  {173,27},
                  {atom,{173,27},scan_function},
                  [{var,{173,41},'FuncId'},
                   {var,{173,49},'F'},
                   {var,{173,52},'Scan'}]}]}]}}]},
          {block,0,
           [{debug_line,175,26},
            {tuple,
             {175,19},
             [{atom,{175,19},scan},
              {call,
               {175,19},
               {remote,
                {175,19},
                {atom,{175,19},beam_digraph},
                {atom,{175,19},new}},
               []},
              {var,{175,35},'ModMap'},
              {var,{175,61},'Rs'},
              {map,{175,19},[]}]}]},
          {var,{175,67},'Fs'}]}]},
      {clause,
       {176,9},
       [{nil,{176,9}}],
       [],
       [{debug_line,177,27},{atom,{177,13},none}]}]}]}]}.
{function,
    {180,1},
    scan_peek_message,1,
    [{clause,
         {180,1},
         [{var,{180,1},'_'}],
         [[{call,
               {180,1},
               {remote,
                   {180,1},
                   {atom,{180,1},fake},
                   {atom,{180,1},is_beam_bif_info}},
               []}]],
         [{debug_line,180,28},{atom,{180,1},ignore}]},
     {clause,
         {180,1},
         [{cons,
              {180,19},
              {match,
                  {180,20},
                  {tuple,
                      {180,20},
                      [{atom,{180,20},b_function},
                       {var,{180,20},'_'},
                       {var,{180,20},'_'},
                       {var,{180,35},'Bs'},
                       {var,{180,20},'_'}]},
                  {var,{180,39},'F'}},
              {var,{180,43},'Fs'}}],
         [],
         [{debug_line,181,29},
          {'case',
              {181,5},
              {call,
                  {181,10},
                  {atom,{181,10},scan_peek_message_bs},
                  [{block,0,
                       [{call,
                            {181,31},
                            {remote,
                                {181,35},
                                {atom,{181,31},maps},
                                {atom,{181,36},to_list}},
                            [{var,{181,44},'Bs'}]}]}]},
              [{clause,
                   {182,9},
                   [{nil,{182,9}}],
                   [],
                   [{debug_line,183,30},
                    {call,
                        {183,13},
                        {atom,{183,13},scan_peek_message},
                        [{var,{183,31},'Fs'}]}]},
               {clause,
                   {184,9},
                   [{match,
                        {184,9},
                        {cons,{184,9},{var,{184,10},'_'},{var,{184,14},'_'}},
                        {var,{184,19},'Rs'}}],
                   [],
                   [{debug_line,185,31},
                    {match,
                        {185,13},
                        {var,{185,13},'FuncId'},
                        {call,
                            {185,22},
                            {atom,{185,22},get_func_id},
                            [{var,{185,34},'F'}]}},
                    {debug_line,186,32},
                    {cons,
                        {186,13},
                        {tuple,
                            {186,14},
                            [{var,{186,15},'FuncId'},{var,{186,23},'Rs'}]},
                        {call,
                            {186,29},
                            {atom,{186,29},scan_peek_message},
                            [{var,{186,47},'Fs'}]}}]}]}]},
     {clause,
         {188,1},
         [{nil,{188,19}}],
         [],
         [{debug_line,189,33},{nil,{189,5}}]}]}.
{function,
 {191,1},
 scan_rets,1,
 [{clause,
   {191,1},
   [{var,{191,1},'_'}],
   [[{call,
      {191,1},
      {remote,{191,1},{atom,{191,1},fake},{atom,{191,1},is_beam_bif_info}},
      []}]],
   [{debug_line,191,34},{atom,{191,1},ignore}]},
  {clause,
   {191,1},
   [{var,{191,11},'Blocks'}],
   [],
   [{debug_line,192,35},
    {match,
     {192,5},
     {var,{192,5},'Rets'},
     {call,
      {192,12},
      {remote,{192,16},{atom,{192,12},maps},{atom,{192,17},fold}},
      [{block,0,
        [{'fun',
          {192,22},
          {clauses,
           [{clause,
             {192,25},
             [{var,{192,26},'_K'},
              {tuple,
               {192,30},
               [{atom,{192,30},b_blk},
                {var,{192,30},'_'},
                {var,{192,30},'_'},
                {tuple,
                 {192,42},
                 [{atom,{192,42},b_ret},
                  {var,{192,42},'_'},
                  {match,
                   {192,53},
                   {tuple,{192,53},[{atom,{192,53},b_var},{var,{192,53},'_'}]},
                   {var,{192,62},'RetVal'}}]}]},
              {var,{192,72},'Acc'}],
             [],
             [{debug_line,193,36},
              {call,
               {193,30},
               {remote,
                {193,37},
                {atom,{193,30},gb_sets},
                {atom,{193,38},add_element}},
               [{var,{193,50},'RetVal'},{var,{193,58},'Acc'}]}]},
            {clause,
             {194,25},
             [{var,{194,26},'_K'},{var,{194,30},'_V'},{var,{194,34},'Acc'}],
             [],
             [{debug_line,195,37},{var,{195,30},'Acc'}]}]}}]},
       {block,0,
        [{debug_line,196,38},
         {call,
          {196,27},
          {remote,{196,34},{atom,{196,27},gb_sets},{atom,{196,35},new}},
          []}]},
       {var,{196,42},'Blocks'}]}},
    {debug_line,197,39},
    {call,
     {197,5},
     {remote,{197,12},{atom,{197,5},gb_sets},{atom,{197,13},to_list}},
     [{var,{197,21},'Rets'}]}]}]}.
{function,
    {199,1},
    scan_peek_message_bs,1,
    [{clause,
         {199,1},
         [{var,{199,1},'_'}],
         [[{call,
               {199,1},
               {remote,
                   {199,1},
                   {atom,{199,1},fake},
                   {atom,{199,1},is_beam_bif_info}},
               []}]],
         [{debug_line,199,40},{atom,{199,1},ignore}]},
     {clause,
         {199,1},
         [{cons,
              {199,22},
              {tuple,{199,23},[{var,{199,24},'Lbl'},{var,{199,29},'Blk'}]},
              {var,{199,36},'Bs'}}],
         [],
         [{debug_line,200,41},
          {'case',
              {200,5},
              {var,{200,10},'Blk'},
              [{clause,
                   {201,9},
                   [{tuple,
                        {201,9},
                        [{atom,{201,9},b_blk},
                         {var,{201,9},'_'},
                         {cons,
                             {201,19},
                             {match,
                                 {201,20},
                                 {tuple,
                                     {201,20},
                                     [{atom,{201,20},b_set},
                                      {var,{201,20},'_'},
                                      {var,{201,20},'_'},
                                      {atom,{201,30},peek_message},
                                      {var,{201,20},'_'}]},
                                 {var,{201,44},'I'}},
                             {var,{201,48},'_'}},
                         {var,{201,9},'_'}]}],
                   [],
                   [{debug_line,202,42},
                    {cons,
                        {202,13},
                        {tuple,
                            {202,14},
                            [{var,{202,15},'Lbl'},{var,{202,20},'I'}]},
                        {call,
                            {202,25},
                            {atom,{202,25},scan_peek_message_bs},
                            [{var,{202,46},'Bs'}]}}]},
               {clause,
                   {203,9},
                   [{tuple,
                        {203,9},
                        [{atom,{203,9},b_blk},
                         {var,{203,9},'_'},
                         {var,{203,9},'_'},
                         {var,{203,9},'_'}]}],
                   [],
                   [{debug_line,204,43},
                    {call,
                        {204,13},
                        {atom,{204,13},scan_peek_message_bs},
                        [{var,{204,34},'Bs'}]}]}]}]},
     {clause,
         {206,1},
         [{nil,{206,22}}],
         [],
         [{debug_line,207,44},{nil,{207,5}}]}]}.
{function,
    {209,1},
    get_func_id,1,
    [{clause,
         {209,1},
         [{var,{209,1},'_'}],
         [[{call,
               {209,1},
               {remote,
                   {209,1},
                   {atom,{209,1},fake},
                   {atom,{209,1},is_beam_bif_info}},
               []}]],
         [{debug_line,209,45},{atom,{209,1},ignore}]},
     {clause,
         {209,1},
         [{tuple,
              {209,13},
              [{atom,{209,13},b_function},
               {var,{209,30},'Anno'},
               {var,{209,13},'_'},
               {var,{209,13},'_'},
               {var,{209,13},'_'}]}],
         [],
         [{debug_line,210,46},
          {match,
              {210,5},
              {tuple,
                  {210,5},
                  [{var,{210,6},'_'},
                   {var,{210,8},'Name'},
                   {var,{210,13},'Arity'}]},
              {call,
                  {210,22},
                  {remote,{210,26},{atom,{210,22},maps},{atom,{210,27},get}},
                  [{atom,{210,31},func_info},{var,{210,42},'Anno'}]}},
          {debug_line,211,47},
          {tuple,
              {211,5},
              [{atom,{211,5},b_local},
               {tuple,
                   {211,19},
                   [{atom,{211,19},b_literal},{var,{211,34},'Name'}]},
               {var,{211,46},'Arity'}]}]}]}.
{function,
    {213,1},
    scan_function,3,
    [{clause,
         {213,1},
         [{var,{213,1},'_'},{var,{213,1},'_'},{var,{213,1},'_'}],
         [[{call,
               {213,1},
               {remote,
                   {213,1},
                   {atom,{213,1},fake},
                   {atom,{213,1},is_beam_bif_info}},
               []}]],
         [{debug_line,213,48},{atom,{213,1},ignore}]},
     {clause,
         {213,1},
         [{var,{213,15},'FuncId'},
          {tuple,
              {213,23},
              [{atom,{213,23},b_function},
               {var,{213,23},'_'},
               {var,{213,23},'_'},
               {var,{213,38},'Blocks'},
               {var,{213,23},'_'}]},
          {var,{213,47},'State'}],
         [],
         [{debug_line,214,49},
          {call,
              {214,5},
              {atom,{214,5},scan_bs},
              [{block,0,
                   [{call,
                        {214,13},
                        {remote,
                            {214,21},
                            {atom,{214,13},beam_ssa},
                            {atom,{214,22},rpo}},
                        [{var,{214,26},'Blocks'}]}]},
               {var,{214,35},'Blocks'},
               {var,{214,43},'FuncId'},
               {var,{214,51},'State'}]}]}]}.
{function,
    {216,1},
    scan_bs,4,
    [{clause,
         {216,1},
         [{var,{216,1},'_'},
          {var,{216,1},'_'},
          {var,{216,1},'_'},
          {var,{216,1},'_'}],
         [[{call,
               {216,1},
               {remote,
                   {216,1},
                   {atom,{216,1},fake},
                   {atom,{216,1},is_beam_bif_info}},
               []}]],
         [{debug_line,216,50},{atom,{216,1},ignore}]},
     {clause,
         {216,1},
         [{cons,{216,9},{var,{216,10},'Lbl'},{var,{216,16},'Lbls'}},
          {var,{216,23},'Blocks'},
          {var,{216,31},'FuncId'},
          {var,{216,39},'State0'}],
         [],
         [{debug_line,217,51},
          {match,
              {217,5},
              {tuple,
                  {217,5},
                  [{atom,{217,5},b_blk},
                   {var,{217,5},'_'},
                   {var,{217,15},'Is'},
                   {var,{217,5},'_'}]},
              {match,
                  {217,21},
                  {var,{217,21},'Blk'},
                  {call,
                      {217,27},
                      {remote,
                          {217,27},
                          {atom,{217,27},erlang},
                          {atom,{217,27},map_get}},
                      [{var,{217,35},'Lbl'},{var,{217,40},'Blocks'}]}}},
          {debug_line,218,52},
          {match,
              {218,5},
              {var,{218,5},'State'},
              {call,
                  {218,13},
                  {atom,{218,13},scan_is},
                  [{var,{218,21},'Is'},
                   {var,{218,25},'Blk'},
                   {var,{218,30},'Lbl'},
                   {var,{218,35},'Blocks'},
                   {var,{218,43},'FuncId'},
                   {var,{218,51},'State0'}]}},
          {debug_line,219,53},
          {call,
              {219,5},
              {atom,{219,5},scan_bs},
              [{var,{219,13},'Lbls'},
               {var,{219,19},'Blocks'},
               {var,{219,27},'FuncId'},
               {var,{219,35},'State'}]}]},
     {clause,
         {220,1},
         [{nil,{220,9}},
          {var,{220,13},'_Blocks'},
          {var,{220,22},'_FuncId'},
          {var,{220,31},'State'}],
         [],
         [{debug_line,221,54},{var,{221,5},'State'}]}]}.
{function,
 {223,1},
 scan_is,6,
 [{clause,
   {223,1},
   [{var,{223,1},'_'},
    {var,{223,1},'_'},
    {var,{223,1},'_'},
    {var,{223,1},'_'},
    {var,{223,1},'_'},
    {var,{223,1},'_'}],
   [[{call,
      {223,1},
      {remote,{223,1},{atom,{223,1},fake},{atom,{223,1},is_beam_bif_info}},
      []}]],
   [{debug_line,223,55},{atom,{223,1},ignore}]},
  {clause,
   {223,1},
   [{cons,
     {223,9},
     {tuple,
      {223,10},
      [{atom,{223,10},b_set},
       {var,{223,10},'_'},
       {var,{223,10},'_'},
       {tuple,{223,20},[{atom,{223,21},succeeded},{atom,{223,31},body}]},
       {var,{223,10},'_'}]},
     {nil,{223,37}}},
    {var,{223,40},'Blk'},
    {var,{223,45},'Lbl'},
    {var,{223,50},'_Blocks'},
    {var,{223,59},'FuncId'},
    {var,{223,67},'State'}],
   [],
   [{debug_line,224,56},
    {match,
     {224,5},
     {tuple,
      {224,5},
      [{atom,{224,5},b_br},
       {var,{224,5},'_'},
       {tuple,{224,16},[{atom,{224,16},b_var},{var,{224,16},'_'}]},
       {var,{224,30},'Succ'},
       {var,{224,5},'_'}]},
     {'case',
      {224,38},
      {var,{224,38},'Blk'},
      [{clause,
        [{generated,true},{location,{224,38}}],
        [{tuple,
          [{generated,true},{location,{224,38}}],
          [{atom,{224,38},b_blk},
           {var,{224,38},'_'},
           {var,{224,38},'_'},
           {var,{224,38},rec0}]}],
        [],
        [{var,{224,38},rec0}]},
       {clause,
        [{generated,true},{location,{224,38}}],
        [{var,{224,38},rec0}],
        [],
        [{call,
          [{generated,true},{location,{224,38}}],
          {remote,
           [{generated,true},{location,{224,38}}],
           {atom,[{generated,true},{location,{224,38}}],erlang},
           {atom,[{generated,true},{location,{224,38}}],error}},
          [{tuple,
            [{generated,true},{location,{224,38}}],
            [{atom,[{generated,true},{location,{224,38}}],badrecord},
             {var,{224,38},rec0}]}]}]}]}},
    {debug_line,230,57},
    {call,
     {230,5},
     {atom,{230,5},scan_add_edge},
     [{block,0,
       [{tuple,{230,19},[{var,{230,20},'FuncId'},{var,{230,28},'Lbl'}]}]},
      {block,0,
       [{tuple,{230,34},[{var,{230,35},'FuncId'},{var,{230,43},'Succ'}]}]},
      {var,{230,50},'State'}]}]},
  {clause,
   {231,1},
   [{cons,
     {231,9},
     {tuple,
      {231,10},
      [{atom,{231,10},b_set},
       {var,{231,10},'_'},
       {var,{231,36},'Dst'},
       {atom,{231,20},new_try_tag},
       {var,{231,10},'_'}]},
     {nil,{231,40}}},
    {var,{231,43},'Blk'},
    {var,{231,48},'Lbl'},
    {var,{231,53},'_Blocks'},
    {var,{231,62},'FuncId'},
    {var,{231,70},'State'}],
   [],
   [{debug_line,234,58},
    {match,
     {234,5},
     {tuple,
      {234,5},
      [{atom,{234,5},b_br},
       {var,{234,5},'_'},
       {var,{234,16},'Dst'},
       {var,{234,25},'Succ'},
       {var,{234,5},'_'}]},
     {'case',
      {234,33},
      {var,{234,33},'Blk'},
      [{clause,
        [{generated,true},{location,{234,33}}],
        [{tuple,
          [{generated,true},{location,{234,33}}],
          [{atom,{234,33},b_blk},
           {var,{234,33},'_'},
           {var,{234,33},'_'},
           {var,{234,33},rec1}]}],
        [],
        [{var,{234,33},rec1}]},
       {clause,
        [{generated,true},{location,{234,33}}],
        [{var,{234,33},rec1}],
        [],
        [{call,
          [{generated,true},{location,{234,33}}],
          {remote,
           [{generated,true},{location,{234,33}}],
           {atom,[{generated,true},{location,{234,33}}],erlang},
           {atom,[{generated,true},{location,{234,33}}],error}},
          [{tuple,
            [{generated,true},{location,{234,33}}],
            [{atom,[{generated,true},{location,{234,33}}],badrecord},
             {var,{234,33},rec1}]}]}]}]}},
    {debug_line,235,59},
    {call,
     {235,5},
     {atom,{235,5},scan_add_edge},
     [{block,0,
       [{tuple,{235,19},[{var,{235,20},'FuncId'},{var,{235,28},'Lbl'}]}]},
      {block,0,
       [{tuple,{235,34},[{var,{235,35},'FuncId'},{var,{235,43},'Succ'}]}]},
      {var,{235,50},'State'}]}]},
  {clause,
   {236,1},
   [{cons,
     {236,9},
     {match,
      {236,10},
      {tuple,
       {236,10},
       [{atom,{236,10},b_set},
        {var,{236,10},'_'},
        {var,{236,29},'Dst'},
        {atom,{236,20},call},
        {cons,
         {236,38},
         {tuple,
          {236,39},
          [{atom,{236,39},b_remote},
           {var,{236,39},'_'},
           {var,{236,39},'_'},
           {var,{236,39},'_'}]},
         {var,{236,53},'_'}}]},
      {var,{236,57},'Call'}},
     {cons,
      {237,10},
      {tuple,
       {237,10},
       [{atom,{237,10},b_set},
        {var,{237,10},'_'},
        {var,{237,10},'_'},
        {tuple,{237,20},[{atom,{237,21},succeeded},{atom,{237,31},body}]},
        {var,{237,10},'_'}]},
      {nil,{237,37}}}},
    {tuple,
     {238,9},
     [{atom,{238,9},b_blk},
      {var,{238,9},'_'},
      {var,{238,9},'_'},
      {tuple,
       {238,21},
       [{atom,{238,21},b_br},
        {var,{238,21},'_'},
        {var,{238,21},'_'},
        {var,{238,32},'Succ'},
        {var,{238,21},'_'}]}]},
    {var,{238,40},'Lbl'},
    {var,{238,45},'Blocks'},
    {var,{238,53},'FuncId'},
    {var,{238,61},'State0'}],
   [],
   [{debug_line,239,60},
    {'case',
     {239,5},
     {var,{239,10},'Blocks'},
     [{clause,
       {240,9},
       [{map,
         {240,9},
         [{map_field_exact,
           {240,17},
           {var,{240,12},'Succ'},
           {tuple,
            {240,20},
            [{atom,{240,20},b_blk},
             {var,{240,20},'_'},
             {nil,{240,30}},
             {tuple,
              {240,38},
              [{atom,{240,38},b_ret},
               {var,{240,38},'_'},
               {var,{240,49},'Dst'}]}]}}]}],
       [],
       [{debug_line,243,61},
        {call,
         {243,13},
         {atom,{243,13},si_remote_call},
         [{var,{243,28},'Call'},
          {var,{243,34},'Lbl'},
          {var,{243,39},'Succ'},
          {var,{243,45},'Blocks'},
          {var,{243,53},'FuncId'},
          {var,{243,61},'State0'}]}]},
      {clause,
       {244,9},
       [{map,{244,9},[]}],
       [],
       [{debug_line,245,62},
        {match,
         {245,13},
         {var,{245,13},'State'},
         {call,
          {245,21},
          {atom,{245,21},si_remote_call},
          [{var,{245,36},'Call'},
           {var,{245,42},'Lbl'},
           {var,{245,47},'Succ'},
           {var,{245,53},'Blocks'},
           {var,{245,61},'FuncId'},
           {var,{245,69},'State0'}]}},
        {debug_line,246,63},
        {call,
         {246,13},
         {atom,{246,13},scan_add_edge},
         [{block,0,
           [{tuple,{246,27},[{var,{246,28},'FuncId'},{var,{246,36},'Lbl'}]}]},
          {block,0,
           [{tuple,{246,42},[{var,{246,43},'FuncId'},{var,{246,51},'Succ'}]}]},
          {var,{246,58},'State'}]}]}]}]},
  {clause,
   {248,1},
   [{cons,
     {248,9},
     {match,
      {248,10},
      {tuple,
       {248,10},
       [{atom,{248,10},b_set},
        {var,{248,10},'_'},
        {var,{248,10},'_'},
        {atom,{248,20},call},
        {cons,
         {248,30},
         {tuple,
          {248,31},
          [{atom,{248,31},b_remote},
           {var,{248,31},'_'},
           {var,{248,31},'_'},
           {var,{248,31},'_'}]},
         {var,{248,45},'_'}}]},
      {var,{248,49},'Call'}},
     {var,{248,56},'Is'}},
    {var,{249,9},'Blk'},
    {var,{249,14},'Lbl'},
    {var,{249,19},'Blocks'},
    {var,{249,27},'FuncId'},
    {var,{249,35},'State0'}],
   [],
   [{debug_line,251,64},
    {match,
     {251,5},
     {var,{251,5},'State'},
     {call,
      {251,13},
      {atom,{251,13},si_remote_call},
      [{var,{251,28},'Call'},
       {var,{251,34},'Lbl'},
       {var,{251,39},'Lbl'},
       {var,{251,44},'Blocks'},
       {var,{251,52},'FuncId'},
       {var,{251,60},'State0'}]}},
    {debug_line,252,65},
    {call,
     {252,5},
     {atom,{252,5},scan_is},
     [{var,{252,13},'Is'},
      {var,{252,17},'Blk'},
      {var,{252,22},'Lbl'},
      {var,{252,27},'Blocks'},
      {var,{252,35},'FuncId'},
      {var,{252,43},'State'}]}]},
  {clause,
   {253,1},
   [{cons,
     {253,9},
     {match,
      {253,10},
      {tuple,
       {253,10},
       [{atom,{253,10},b_set},
        {var,{253,10},'_'},
        {var,{253,29},'Dst'},
        {atom,{253,20},call},
        {cons,
         {253,38},
         {tuple,
          {253,39},
          [{atom,{253,39},b_local},{var,{253,39},'_'},{var,{253,39},'_'}]},
         {var,{253,52},'_'}}]},
      {var,{253,56},'Call'}},
     {cons,
      {254,10},
      {tuple,
       {254,10},
       [{atom,{254,10},b_set},
        {var,{254,10},'_'},
        {var,{254,10},'_'},
        {tuple,{254,20},[{atom,{254,21},succeeded},{atom,{254,31},body}]},
        {cons,{254,42},{var,{254,43},'Dst'},{nil,{254,46}}}]},
      {nil,{254,48}}}},
    {tuple,
     {255,9},
     [{atom,{255,9},b_blk},
      {var,{255,9},'_'},
      {var,{255,9},'_'},
      {tuple,
       {255,21},
       [{atom,{255,21},b_br},
        {var,{255,21},'_'},
        {var,{255,21},'_'},
        {var,{255,32},'Succ'},
        {var,{255,21},'_'}]}]},
    {var,{256,9},'Lbl'},
    {var,{256,14},'Blocks'},
    {var,{256,22},'FuncId'},
    {var,{256,30},'State0'}],
   [],
   [{debug_line,257,66},
    {'case',
     {257,5},
     {var,{257,10},'Blocks'},
     [{clause,
       {258,9},
       [{map,
         {258,9},
         [{map_field_exact,
           {258,17},
           {var,{258,12},'Succ'},
           {tuple,
            {258,20},
            [{atom,{258,20},b_blk},
             {var,{258,20},'_'},
             {nil,{258,30}},
             {tuple,
              {258,38},
              [{atom,{258,38},b_ret},
               {var,{258,38},'_'},
               {var,{258,49},'Dst'}]}]}}]}],
       [],
       [{debug_line,261,67},
        {call,
         {261,13},
         {atom,{261,13},scan_add_call},
         [{var,{261,27},'Call'},
          {var,{261,33},'Lbl'},
          {var,{261,38},'Succ'},
          {var,{261,44},'FuncId'},
          {var,{261,52},'State0'}]}]},
      {clause,
       {262,9},
       [{map,{262,9},[]}],
       [],
       [{debug_line,263,68},
        {match,
         {263,13},
         {var,{263,13},'State'},
         {call,
          {263,21},
          {atom,{263,21},scan_add_call},
          [{var,{263,35},'Call'},
           {var,{263,41},'Lbl'},
           {var,{263,46},'Succ'},
           {var,{263,52},'FuncId'},
           {var,{263,60},'State0'}]}},
        {debug_line,264,69},
        {call,
         {264,13},
         {atom,{264,13},scan_add_edge},
         [{block,0,
           [{tuple,{264,27},[{var,{264,28},'FuncId'},{var,{264,36},'Lbl'}]}]},
          {block,0,
           [{tuple,{264,42},[{var,{264,43},'FuncId'},{var,{264,51},'Succ'}]}]},
          {var,{264,58},'State'}]}]}]}]},
  {clause,
   {266,1},
   [{cons,{266,9},{var,{266,10},'_I'},{var,{266,15},'Is'}},
    {var,{266,20},'Blk'},
    {var,{266,25},'Lbl'},
    {var,{266,30},'Blocks'},
    {var,{266,38},'FuncId'},
    {var,{266,46},'State'}],
   [],
   [{debug_line,267,70},
    {call,
     {267,5},
     {atom,{267,5},scan_is},
     [{var,{267,13},'Is'},
      {var,{267,17},'Blk'},
      {var,{267,22},'Lbl'},
      {var,{267,27},'Blocks'},
      {var,{267,35},'FuncId'},
      {var,{267,43},'State'}]}]},
  {clause,
   {268,1},
   [{nil,{268,9}},
    {tuple,
     {268,13},
     [{atom,{268,13},b_blk},
      {var,{268,13},'_'},
      {var,{268,13},'_'},
      {tuple,
       {268,25},
       [{atom,{268,25},b_ret},{var,{268,25},'_'},{var,{268,25},'_'}]}]},
    {var,{268,36},'Lbl'},
    {var,{268,41},'_Blocks'},
    {var,{268,50},'FuncId'},
    {var,{268,58},'State'}],
   [],
   [{debug_line,269,71},
    {call,
     {269,5},
     {atom,{269,5},scan_add_edge},
     [{block,0,
       [{tuple,{269,19},[{var,{269,20},'FuncId'},{var,{269,28},'Lbl'}]}]},
      {block,0,
       [{tuple,
         {269,34},
         [{var,{269,35},'FuncId'},{op,{269,44},'-',{integer,{269,44},1}}]}]},
      {var,{269,59},'State'}]}]},
  {clause,
   {270,1},
   [{nil,{270,9}},
    {var,{270,13},'Blk'},
    {var,{270,18},'Lbl'},
    {var,{270,23},'_Blocks'},
    {var,{270,32},'FuncId'},
    {var,{270,40},'State'}],
   [],
   [{debug_line,271,72},
    {call,
     {271,5},
     {remote,{271,5},{atom,{271,5},lists},{atom,{271,5},foldl}},
     [{block,0,
       [{'fun',
         {271,11},
         {clauses,
          [{clause,
            {271,14},
            [{var,{271,15},'Succ'},{var,{271,21},'Acc'}],
            [],
            [{debug_line,272,73},
             {call,
              {272,19},
              {atom,{272,19},scan_add_edge},
              [{block,0,
                [{tuple,
                  {272,33},
                  [{var,{272,34},'FuncId'},{var,{272,42},'Lbl'}]}]},
               {block,0,
                [{tuple,
                  {272,48},
                  [{var,{272,49},'FuncId'},{var,{272,57},'Succ'}]}]},
               {var,{272,64},'Acc'}]}]}]}}]},
      {var,{273,16},'State'},
      {block,0,
       [{debug_line,273,74},
        {call,
         {273,23},
         {remote,{273,31},{atom,{273,23},beam_ssa},{atom,{273,32},successors}},
         [{var,{273,43},'Blk'}]}]}]}]}]}.
{function,
    {277,1},
    scan_add_call,5,
    [{clause,
         {277,1},
         [{var,{277,1},'_'},
          {var,{277,1},'_'},
          {var,{277,1},'_'},
          {var,{277,1},'_'},
          {var,{277,1},'_'}],
         [[{call,
               {277,1},
               {remote,
                   {277,1},
                   {atom,{277,1},fake},
                   {atom,{277,1},is_beam_bif_info}},
               []}]],
         [{debug_line,277,75},{atom,{277,1},ignore}]},
     {clause,
         {277,1},
         [{var,{277,15},'Call'},
          {var,{277,21},'CallLbl'},
          {var,{277,30},'SuccLbl'},
          {var,{277,39},'Caller'},
          {match,
              {277,47},
              {tuple,
                  {277,47},
                  [{atom,{277,47},scan},
                   {var,{277,47},'_'},
                   {var,{277,60},'ModMap'},
                   {var,{277,47},'_'},
                   {var,{277,47},'_'}]},
              {var,{277,68},'State0'}}],
         [],
         [{debug_line,278,76},
          {match,
              {278,5},
              {tuple,
                  {278,5},
                  [{atom,{278,5},b_set},
                   {var,{278,5},'_'},
                   {var,{278,16},'Dst'},
                   {var,{278,5},'_'},
                   {cons,
                       {278,25},
                       {match,
                           {278,26},
                           {tuple,
                               {278,26},
                               [{atom,{278,26},b_local},
                                {var,{278,26},'_'},
                                {var,{278,26},'_'}]},
                           {var,{278,37},'Callee'}},
                       {var,{278,46},'Args'}}]},
              {var,{278,55},'Call'}},
          {debug_line,279,77},
          {match,
              {279,5},
              {map,
                  {279,5},
                  [{map_field_exact,
                       {279,15},
                       {var,{279,8},'Callee'},
                       {tuple,
                           {279,18},
                           [{var,{279,19},'_Blocks'},
                            {var,{279,28},'Params'},
                            {var,{279,36},'Rets'}]}}]},
              {var,{279,46},'ModMap'}},
          {debug_line,281,78},
          {match,
              {281,5},
              {tuple,
                  {281,5},
                  [{var,{281,6},'CallTranslation'},
                   {var,{281,23},'CallInverse'}]},
              {call,
                  {282,9},
                  {atom,{282,9},scan_translate_call},
                  [{var,{282,29},'Args'},
                   {var,{282,35},'Params'},
                   {block,0,[{debug_line,282,79},{map,{282,43},[]}]},
                   {block,0,[{map,{282,48},[]}]}]}},
          {debug_line,283,80},
          {match,
              {283,5},
              {var,{283,5},'State'},
              {call,
                  {283,13},
                  {atom,{283,13},scan_add_edge},
                  [{block,0,
                       [{tuple,
                            {283,27},
                            [{var,{283,28},'Caller'},
                             {var,{283,36},'CallLbl'}]}]},
                   {block,0,
                       [{debug_line,284,81},
                        {tuple,
                            {284,27},
                            [{var,{284,28},'Callee'},{integer,{284,37},0}]}]},
                   {block,0,
                       [{debug_line,285,82},
                        {tuple,
                            {285,27},
                            [{var,{285,28},'CallTranslation'},
                             {var,{285,45},'CallInverse'},
                             {var,{285,58},'Args'}]}]},
                   {var,{286,27},'State0'}]}},
          {debug_line,288,83},
          {match,
              {288,5},
              {tuple,
                  {288,5},
                  [{var,{288,6},'RetTranslation'},
                   {var,{288,22},'RetInverse'}]},
              {call,
                  {289,9},
                  {atom,{289,9},scan_translate_return},
                  [{var,{289,31},'Rets'},
                   {var,{289,37},'Dst'},
                   {var,{289,42},'CallTranslation'}]}},
          {debug_line,290,84},
          {call,
              {290,5},
              {atom,{290,5},scan_add_edge},
              [{block,0,
                   [{tuple,
                        {290,19},
                        [{var,{290,20},'Callee'},
                         {op,{290,29},'-',{integer,{290,29},1}}]}]},
               {block,0,
                   [{debug_line,291,85},
                    {tuple,
                        {291,19},
                        [{var,{291,20},'Caller'},{var,{291,28},'SuccLbl'}]}]},
               {block,0,
                   [{debug_line,292,86},
                    {tuple,
                        {292,19},
                        [{var,{292,20},'RetTranslation'},
                         {var,{292,36},'RetInverse'},
                         {var,{292,48},'Params'}]}]},
               {var,{293,19},'State'}]}]}]}.
{function,
    {295,1},
    scan_translate_call,4,
    [{clause,
         {295,1},
         [{var,{295,1},'_'},
          {var,{295,1},'_'},
          {var,{295,1},'_'},
          {var,{295,1},'_'}],
         [[{call,
               {295,1},
               {remote,
                   {295,1},
                   {atom,{295,1},fake},
                   {atom,{295,1},is_beam_bif_info}},
               []}]],
         [{debug_line,295,87},{atom,{295,1},ignore}]},
     {clause,
         {295,1},
         [{cons,{295,21},{var,{295,22},'Arg'},{var,{295,28},'Args'}},
          {cons,{295,35},{var,{295,36},'Param'},{var,{295,44},'Params'}},
          {var,{295,53},'ArgToParams'},
          {var,{295,66},'ParamToArgs'}],
         [],
         [{debug_line,296,88},
          {call,
              {296,5},
              {atom,{296,5},scan_translate_call},
              [{var,{296,25},'Args'},
               {var,{296,31},'Params'},
               {block,0,
                   [{debug_line,297,89},
                    {map,
                        {297,36},
                        {var,{297,25},'ArgToParams'},
                        [{map_field_assoc,
                             {297,43},
                             {var,{297,39},'Arg'},
                             {var,{297,46},'Param'}}]}]},
               {block,0,
                   [{debug_line,298,90},
                    {map,
                        {298,36},
                        {var,{298,25},'ParamToArgs'},
                        [{map_field_assoc,
                             {298,45},
                             {var,{298,39},'Param'},
                             {var,{298,48},'Arg'}}]}]}]}]},
     {clause,
         {299,1},
         [{nil,{299,21}},
          {nil,{299,25}},
          {var,{299,29},'ArgToParams'},
          {var,{299,42},'ParamToArgs'}],
         [],
         [{debug_line,300,91},
          {tuple,
              {300,5},
              [{var,{300,6},'ArgToParams'},{var,{300,19},'ParamToArgs'}]}]}]}.
{function,
    {302,1},
    scan_translate_return,3,
    [{clause,
         {302,1},
         [{var,{302,1},'_'},{var,{302,1},'_'},{var,{302,1},'_'}],
         [[{call,
               {302,1},
               {remote,
                   {302,1},
                   {atom,{302,1},fake},
                   {atom,{302,1},is_beam_bif_info}},
               []}]],
         [{debug_line,302,92},{atom,{302,1},ignore}]},
     {clause,
         {302,1},
         [{var,{302,23},'Rets'},
          {var,{302,29},'Dst'},
          {var,{302,34},'CallerToCallee0'}],
         [],
         [{debug_line,303,93},
          {match,
              {303,5},
              {var,{303,5},'CallerToCallee'},
              {map,
                  {303,37},
                  {var,{303,22},'CallerToCallee0'},
                  [{map_field_assoc,
                       {303,44},
                       {var,{303,40},'Dst'},
                       {var,{303,47},'Rets'}}]}},
          {debug_line,304,94},
          {match,
              {304,5},
              {var,{304,5},'CalleeToCaller'},
              {call,
                  {304,22},
                  {atom,{304,22},scan_translate_return_1},
                  [{var,{304,46},'Rets'},
                   {var,{304,52},'Dst'},
                   {block,0,[{map,{304,57},[]}]}]}},
          {debug_line,305,95},
          {tuple,
              {305,5},
              [{var,{305,6},'CalleeToCaller'},
               {var,{305,22},'CallerToCallee'}]}]}]}.
{function,
    {307,1},
    scan_translate_return_1,3,
    [{clause,
         {307,1},
         [{var,{307,1},'_'},{var,{307,1},'_'},{var,{307,1},'_'}],
         [[{call,
               {307,1},
               {remote,
                   {307,1},
                   {atom,{307,1},fake},
                   {atom,{307,1},is_beam_bif_info}},
               []}]],
         [{debug_line,307,96},{atom,{307,1},ignore}]},
     {clause,
         {307,1},
         [{cons,{307,25},{var,{307,26},'Ret'},{var,{307,32},'Rets'}},
          {var,{307,39},'Dst'},
          {var,{307,44},'CalleeToCaller'}],
         [],
         [{debug_line,308,97},
          {call,
              {308,5},
              {atom,{308,5},scan_translate_return_1},
              [{var,{308,29},'Rets'},
               {var,{308,35},'Dst'},
               {block,0,
                   [{map,
                        {308,54},
                        {var,{308,40},'CalleeToCaller'},
                        [{map_field_assoc,
                             {308,61},
                             {var,{308,57},'Ret'},
                             {var,{308,64},'Dst'}}]}]}]}]},
     {clause,
         {309,1},
         [{nil,{309,25}},
          {var,{309,29},'_Dst'},
          {var,{309,35},'CalleeToCaller'}],
         [],
         [{debug_line,310,98},{var,{310,5},'CalleeToCaller'}]}]}.
{function,{312,1},
          scan_add_edge,3,
          [{clause,{312,1},
                   [{var,{312,1},'_'},{var,{312,1},'_'},{var,{312,1},'_'}],
                   [[{call,{312,1},
                           {remote,{312,1},
                                   {atom,{312,1},fake},
                                   {atom,{312,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,312,99},{atom,{312,1},ignore}]},
           {clause,{312,1},
                   [{var,{312,15},'From'},
                    {var,{312,21},'To'},
                    {var,{312,25},'State'}],
                   [],
                   [{debug_line,313,100},
                    {call,{313,5},
                          {atom,{313,5},scan_add_edge},
                          [{var,{313,19},'From'},
                           {var,{313,25},'To'},
                           {atom,{313,29},branch},
                           {var,{313,37},'State'}]}]}]}.
{function,
 {315,1},
 scan_add_edge,4,
 [{clause,
   {315,1},
   [{var,{315,1},'_'},{var,{315,1},'_'},{var,{315,1},'_'},{var,{315,1},'_'}],
   [[{call,
      {315,1},
      {remote,{315,1},{atom,{315,1},fake},{atom,{315,1},is_beam_bif_info}},
      []}]],
   [{debug_line,315,101},{atom,{315,1},ignore}]},
  {clause,
   {315,1},
   [{var,{315,15},'From'},
    {var,{315,21},'To'},
    {var,{315,25},'Label'},
    {var,{315,32},'State0'}],
   [],
   [{debug_line,316,102},
    {match,
     {316,5},
     {var,{316,5},'State'},
     {call,
      {316,13},
      {atom,{316,13},scan_add_vertex},
      [{var,{316,29},'To'},
       {block,0,
        [{call,
          {316,33},
          {atom,{316,33},scan_add_vertex},
          [{var,{316,49},'From'},{var,{316,55},'State0'}]}]}]}},
    {debug_line,318,103},
    {match,
     {318,5},
     {var,{318,5},'Graph'},
     {call,
      {318,13},
      {remote,{318,25},{atom,{318,13},beam_digraph},{atom,{318,26},add_edge}},
      [{block,0,
        [{'case',
          {318,35},
          {var,{318,35},'State'},
          [{clause,
            [{generated,true},{location,{318,35}}],
            [{tuple,
              [{generated,true},{location,{318,35}}],
              [{atom,{318,35},scan},
               {var,{318,35},rec2},
               {var,{318,35},'_'},
               {var,{318,35},'_'},
               {var,{318,35},'_'}]}],
            [],
            [{var,{318,35},rec2}]},
           {clause,
            [{generated,true},{location,{318,35}}],
            [{var,{318,35},rec2}],
            [],
            [{call,
              [{generated,true},{location,{318,35}}],
              {remote,
               [{generated,true},{location,{318,35}}],
               {atom,[{generated,true},{location,{318,35}}],erlang},
               {atom,[{generated,true},{location,{318,35}}],error}},
              [{tuple,
                [{generated,true},{location,{318,35}}],
                [{atom,[{generated,true},{location,{318,35}}],badrecord},
                 {var,{318,35},rec2}]}]}]}]}]},
       {var,{318,53},'From'},
       {var,{318,59},'To'},
       {var,{318,63},'Label'}]}},
    {debug_line,320,104},
    {block,
     {320,5},
     [{match,{320,5},{var,{320,5},rec3},{var,{320,5},'State'}},
      {'case',
       {320,16},
       {var,{320,5},rec3},
       [{clause,
         {320,16},
         [{tuple,
           {320,16},
           [{atom,{320,16},scan},
            {var,{320,16},'_'},
            {var,{320,16},'_'},
            {var,{320,16},'_'},
            {var,{320,16},'_'}]}],
         [],
         [{call,
           {320,16},
           {remote,{320,16},{atom,{320,16},erlang},{atom,{320,16},setelement}},
           [{integer,{320,16},2},{var,{320,5},rec3},{var,{320,22},'Graph'}]}]},
        {clause,
         [{generated,true},{location,{320,16}}],
         [{var,[{generated,true},{location,{320,16}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{320,16}}],
           {remote,
            [{generated,true},{location,{320,16}}],
            {atom,[{generated,true},{location,{320,16}}],erlang},
            {atom,[{generated,true},{location,{320,16}}],error}},
           [{tuple,
             [{generated,true},{location,{320,16}}],
             [{atom,[{generated,true},{location,{320,16}}],badrecord},
              {var,{320,5},rec3}]}]}]}]}]}]}]}.
{function,
 {322,1},
 scan_add_vertex,2,
 [{clause,
   {322,1},
   [{var,{322,1},'_'},{var,{322,1},'_'}],
   [[{call,
      {322,1},
      {remote,{322,1},{atom,{322,1},fake},{atom,{322,1},is_beam_bif_info}},
      []}]],
   [{debug_line,322,105},{atom,{322,1},ignore}]},
  {clause,
   {322,1},
   [{var,{322,17},'Vertex'},
    {match,
     {322,25},
     {tuple,
      {322,25},
      [{atom,{322,25},scan},
       {var,{322,37},'Graph0'},
       {var,{322,25},'_'},
       {var,{322,25},'_'},
       {var,{322,25},'_'}]},
     {var,{322,45},'State'}}],
   [],
   [{debug_line,323,106},
    {'case',
     {323,5},
     {call,
      {323,10},
      {remote,
       {323,22},
       {atom,{323,10},beam_digraph},
       {atom,{323,23},has_vertex}},
      [{var,{323,34},'Graph0'},{var,{323,42},'Vertex'}]},
     [{clause,
       {324,9},
       [{atom,{324,9},true}],
       [],
       [{debug_line,325,107},{var,{325,13},'State'}]},
      {clause,
       {326,9},
       [{atom,{326,9},false}],
       [],
       [{debug_line,327,108},
        {match,
         {327,13},
         {var,{327,13},'Graph'},
         {call,
          {327,21},
          {remote,
           {327,33},
           {atom,{327,21},beam_digraph},
           {atom,{327,34},add_vertex}},
          [{var,{327,45},'Graph0'},{var,{327,53},'Vertex'}]}},
        {debug_line,328,109},
        {block,
         {328,13},
         [{match,{328,13},{var,{328,13},rec4},{var,{328,13},'State'}},
          {'case',
           {328,24},
           {var,{328,13},rec4},
           [{clause,
             {328,24},
             [{tuple,
               {328,24},
               [{atom,{328,24},scan},
                {var,{328,24},'_'},
                {var,{328,24},'_'},
                {var,{328,24},'_'},
                {var,{328,24},'_'}]}],
             [],
             [{call,
               {328,24},
               {remote,
                {328,24},
                {atom,{328,24},erlang},
                {atom,{328,24},setelement}},
               [{integer,{328,24},2},
                {var,{328,13},rec4},
                {var,{328,30},'Graph'}]}]},
            {clause,
             [{generated,true},{location,{328,24}}],
             [{var,[{generated,true},{location,{328,24}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{328,24}}],
               {remote,
                [{generated,true},{location,{328,24}}],
                {atom,[{generated,true},{location,{328,24}}],erlang},
                {atom,[{generated,true},{location,{328,24}}],error}},
               [{tuple,
                 [{generated,true},{location,{328,24}}],
                 [{atom,[{generated,true},{location,{328,24}}],badrecord},
                  {var,{328,13},rec4}]}]}]}]}]}]}]}]}]}.
{function,
 {331,1},
 si_remote_call,6,
 [{clause,
   {331,1},
   [{var,{331,1},'_'},
    {var,{331,1},'_'},
    {var,{331,1},'_'},
    {var,{331,1},'_'},
    {var,{331,1},'_'},
    {var,{331,1},'_'}],
   [[{call,
      {331,1},
      {remote,{331,1},{atom,{331,1},fake},{atom,{331,1},is_beam_bif_info}},
      []}]],
   [{debug_line,331,110},{atom,{331,1},ignore}]},
  {clause,
   {331,1},
   [{match,
     {331,16},
     {tuple,
      {331,16},
      [{atom,{331,16},b_set},
       {var,{331,28},'Anno'},
       {var,{331,37},'Dst'},
       {var,{331,16},'_'},
       {var,{331,46},'Args'}]},
     {var,{331,52},'Call'}},
    {var,{332,16},'CalledAt'},
    {var,{332,26},'ValidAfter'},
    {var,{332,38},'Blocks'},
    {var,{332,46},'FuncId'},
    {var,{332,54},'State'}],
   [],
   [{debug_line,333,111},
    {'case',
     {333,5},
     {call,
      {333,10},
      {atom,{333,10},si_remote_call_1},
      [{var,{333,27},'Dst'},
       {var,{333,32},'Args'},
       {var,{333,38},'ValidAfter'},
       {var,{333,50},'Blocks'}]},
     [{clause,
       {334,9},
       [{tuple,
         {334,9},
         [{atom,{334,10},makes_ref},
          {var,{334,21},'ExtractedAt'},
          {var,{334,34},'Ref'}]}],
       [],
       [{debug_line,335,112},
        {match,
         {335,13},
         {tuple,
          {335,13},
          [{atom,{335,13},scan},
           {var,{335,13},'_'},
           {var,{335,13},'_'},
           {var,{335,13},'_'},
           {var,{335,34},'Candidates0'}]},
         {var,{335,49},'State'}},
        {debug_line,337,113},
        {match,
         {337,13},
         {var,{337,13},'MakeRefs0'},
         {call,
          {337,25},
          {remote,{337,29},{atom,{337,25},maps},{atom,{337,30},get}},
          [{var,{337,34},'FuncId'},
           {var,{337,42},'Candidates0'},
           {nil,{337,55}}]}},
        {debug_line,338,114},
        {match,
         {338,13},
         {var,{338,13},'MakeRef'},
         {tuple,
          {338,23},
          [{var,{338,24},'Anno'},
           {var,{338,30},'CalledAt'},
           {var,{338,40},'Dst'},
           {var,{338,45},'ExtractedAt'},
           {var,{338,58},'Ref'}]}},
        {debug_line,340,115},
        {match,
         {340,13},
         {var,{340,13},'Candidates'},
         {map,
          {340,37},
          {var,{340,26},'Candidates0'},
          [{map_field_assoc,
            {340,47},
            {var,{340,40},'FuncId'},
            {cons,
             {340,50},
             {var,{340,51},'MakeRef'},
             {var,{340,61},'MakeRefs0'}}}]}},
        {debug_line,342,116},
        {block,
         {342,13},
         [{match,{342,13},{var,{342,13},rec5},{var,{342,13},'State'}},
          {'case',
           {342,24},
           {var,{342,13},rec5},
           [{clause,
             {342,24},
             [{tuple,
               {342,24},
               [{atom,{342,24},scan},
                {var,{342,24},'_'},
                {var,{342,24},'_'},
                {var,{342,24},'_'},
                {var,{342,24},'_'}]}],
             [],
             [{call,
               {342,24},
               {remote,
                {342,24},
                {atom,{342,24},erlang},
                {atom,{342,24},setelement}},
               [{integer,{342,24},5},
                {var,{342,13},rec5},
                {var,{342,39},'Candidates'}]}]},
            {clause,
             [{generated,true},{location,{342,24}}],
             [{var,[{generated,true},{location,{342,24}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{342,24}}],
               {remote,
                [{generated,true},{location,{342,24}}],
                {atom,[{generated,true},{location,{342,24}}],erlang},
                {atom,[{generated,true},{location,{342,24}}],error}},
               [{tuple,
                 [{generated,true},{location,{342,24}}],
                 [{atom,[{generated,true},{location,{342,24}}],badrecord},
                  {var,{342,13},rec5}]}]}]}]}]}]},
      {clause,
       {343,9},
       [{atom,{343,9},uses_ref}],
       [],
       [{debug_line,344,117},
        {match,
         {344,13},
         {tuple,
          {344,13},
          [{atom,{344,13},scan},
           {var,{344,13},'_'},
           {var,{344,13},'_'},
           {var,{344,35},'Candidates0'},
           {var,{344,13},'_'}]},
         {var,{344,50},'State'}},
        {debug_line,346,118},
        {match,
         {346,13},
         {var,{346,13},'UseRefs0'},
         {call,
          {346,24},
          {remote,{346,28},{atom,{346,24},maps},{atom,{346,29},get}},
          [{var,{346,33},'FuncId'},
           {var,{346,41},'Candidates0'},
           {nil,{346,54}}]}},
        {debug_line,347,119},
        {match,
         {347,13},
         {var,{347,13},'UseRef'},
         {tuple,{347,22},[{var,{347,23},'CalledAt'},{var,{347,33},'Call'}]}},
        {debug_line,349,120},
        {match,
         {349,13},
         {var,{349,13},'Candidates'},
         {map,
          {349,37},
          {var,{349,26},'Candidates0'},
          [{map_field_assoc,
            {349,47},
            {var,{349,40},'FuncId'},
            {cons,
             {349,50},
             {var,{349,51},'UseRef'},
             {var,{349,60},'UseRefs0'}}}]}},
        {debug_line,351,121},
        {block,
         {351,13},
         [{match,{351,13},{var,{351,13},rec6},{var,{351,13},'State'}},
          {'case',
           {351,24},
           {var,{351,13},rec6},
           [{clause,
             {351,24},
             [{tuple,
               {351,24},
               [{atom,{351,24},scan},
                {var,{351,24},'_'},
                {var,{351,24},'_'},
                {var,{351,24},'_'},
                {var,{351,24},'_'}]}],
             [],
             [{call,
               {351,24},
               {remote,
                {351,24},
                {atom,{351,24},erlang},
                {atom,{351,24},setelement}},
               [{integer,{351,24},4},
                {var,{351,13},rec6},
                {var,{351,40},'Candidates'}]}]},
            {clause,
             [{generated,true},{location,{351,24}}],
             [{var,[{generated,true},{location,{351,24}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{351,24}}],
               {remote,
                [{generated,true},{location,{351,24}}],
                {atom,[{generated,true},{location,{351,24}}],erlang},
                {atom,[{generated,true},{location,{351,24}}],error}},
               [{tuple,
                 [{generated,true},{location,{351,24}}],
                 [{atom,[{generated,true},{location,{351,24}}],badrecord},
                  {var,{351,13},rec6}]}]}]}]}]}]},
      {clause,
       {352,9},
       [{atom,{352,9},no}],
       [],
       [{debug_line,353,122},{var,{353,13},'State'}]}]}]}]}.
{function,
 {356,1},
 si_remote_call_1,4,
 [{clause,
   {356,1},
   [{var,{356,1},'_'},{var,{356,1},'_'},{var,{356,1},'_'},{var,{356,1},'_'}],
   [[{call,
      {356,1},
      {remote,{356,1},{atom,{356,1},fake},{atom,{356,1},is_beam_bif_info}},
      []}]],
   [{debug_line,356,123},{atom,{356,1},ignore}]},
  {clause,
   {356,1},
   [{var,{356,18},'Dst'},
    {cons,{356,23},{var,{356,24},'Callee'},{var,{356,33},'Args'}},
    {var,{356,40},'Lbl'},
    {var,{356,45},'Blocks'}],
   [],
   [{debug_line,357,124},
    {match,
     {357,5},
     {var,{357,5},'MFA'},
     {'case',
      {357,11},
      {var,{357,16},'Callee'},
      [{clause,
        {358,15},
        [{tuple,
          {358,15},
          [{atom,{358,15},b_remote},
           {tuple,{358,29},[{atom,{358,29},b_literal},{var,{358,44},'Mod'}]},
           {tuple,{359,30},[{atom,{359,30},b_literal},{var,{359,45},'Func'}]},
           {var,{360,31},'Arity'}]}],
        [],
        [{debug_line,361,125},
         {tuple,
          {361,19},
          [{var,{361,20},'Mod'},
           {var,{361,25},'Func'},
           {var,{361,31},'Arity'}]}]},
       {clause,
        {362,15},
        [{var,{362,15},'_'}],
        [],
        [{debug_line,363,126},{atom,{363,19},none}]}]}},
    {debug_line,365,127},
    {'case',
     {365,5},
     {var,{365,10},'MFA'},
     [{clause,
       {366,9},
       [{tuple,
         {366,9},
         [{atom,{366,10},erlang},{atom,{366,17},alias},{var,{366,23},'A'}]}],
       [[{call,
          {366,31},
          {remote,{366,31},{atom,{366,31},erlang},{atom,{366,31},is_integer}},
          [{var,{366,42},'A'}]},
         {op,{366,48},'=<',{integer,{366,46},0},{var,{366,51},'A'}},
         {op,{366,56},'=<',{var,{366,54},'A'},{integer,{366,59},1}}]],
       [{debug_line,367,128},
        {tuple,
         {367,13},
         [{atom,{367,14},makes_ref},
          {var,{367,25},'Lbl'},
          {var,{367,30},'Dst'}]}]},
      {clause,
       {368,9},
       [{tuple,
         {368,9},
         [{atom,{368,10},erlang},
          {atom,{368,17},demonitor},
          {integer,{368,27},2}]}],
       [],
       [{debug_line,369,129},
        {'case',
         {369,13},
         {var,{369,18},'Args'},
         [{clause,
           {370,17},
           [{cons,
             {370,17},
             {var,{370,18},'_MRef'},
             {cons,
              {370,25},
              {tuple,
               {370,25},
               [{atom,{370,25},b_literal},
                {cons,{370,40},{atom,{370,41},flush},{nil,{370,46}}}]},
              {nil,{370,48}}}}],
           [],
           [{debug_line,375,130},{atom,{375,21},uses_ref}]},
          {clause,
           {376,17},
           [{cons,
             {376,17},
             {var,{376,18},'_MRef'},
             {cons,{376,25},{var,{376,25},'_Options'},{nil,{376,33}}}}],
           [],
           [{debug_line,377,131},{atom,{377,21},no}]}]}]},
      {clause,
       {379,9},
       [{tuple,
         {379,9},
         [{atom,{379,10},erlang},
          {atom,{379,17},make_ref},
          {integer,{379,26},0}]}],
       [],
       [{debug_line,380,132},
        {tuple,
         {380,13},
         [{atom,{380,14},makes_ref},
          {var,{380,25},'Lbl'},
          {var,{380,30},'Dst'}]}]},
      {clause,
       {381,9},
       [{tuple,
         {381,9},
         [{atom,{381,10},erlang},{atom,{381,17},monitor},{var,{381,25},'A'}]}],
       [[{call,
          {381,33},
          {remote,{381,33},{atom,{381,33},erlang},{atom,{381,33},is_integer}},
          [{var,{381,44},'A'}]},
         {op,{381,50},'=<',{integer,{381,48},2},{var,{381,53},'A'}},
         {op,{381,58},'=<',{var,{381,56},'A'},{integer,{381,61},3}}]],
       [{debug_line,382,133},
        {tuple,
         {382,13},
         [{atom,{382,14},makes_ref},
          {var,{382,25},'Lbl'},
          {var,{382,30},'Dst'}]}]},
      {clause,
       {383,9},
       [{tuple,
         {383,9},
         [{atom,{383,10},erlang},
          {atom,{383,17},spawn_monitor},
          {var,{383,31},'A'}]}],
       [[{call,
          {383,39},
          {remote,{383,39},{atom,{383,39},erlang},{atom,{383,39},is_integer}},
          [{var,{383,50},'A'}]},
         {op,{383,56},'=<',{integer,{383,54},1},{var,{383,59},'A'}},
         {op,{383,64},'=<',{var,{383,62},'A'},{integer,{383,67},4}}]],
       [{debug_line,384,134},
        {match,
         {384,13},
         {var,{384,13},'RPO'},
         {call,
          {384,19},
          {remote,{384,27},{atom,{384,19},beam_ssa},{atom,{384,28},rpo}},
          [{block,0,[{cons,{384,32},{var,{384,33},'Lbl'},{nil,{384,36}}}]},
           {var,{384,39},'Blocks'}]}},
        {debug_line,385,135},
        {call,
         {385,13},
         {atom,{385,13},si_ref_in_tuple},
         [{var,{385,29},'RPO'},
          {var,{385,34},'Blocks'},
          {var,{385,42},'Dst'}]}]},
      {clause,
       {386,9},
       [{tuple,
         {386,9},
         [{atom,{386,10},erlang},
          {atom,{386,17},spawn_request},
          {var,{386,31},'A'}]}],
       [[{call,
          {386,39},
          {remote,{386,39},{atom,{386,39},erlang},{atom,{386,39},is_integer}},
          [{var,{386,50},'A'}]},
         {op,{386,56},'=<',{integer,{386,54},1},{var,{386,59},'A'}},
         {op,{386,64},'=<',{var,{386,62},'A'},{integer,{386,67},5}}]],
       [{debug_line,387,136},
        {tuple,
         {387,13},
         [{atom,{387,14},makes_ref},
          {var,{387,25},'Lbl'},
          {var,{387,30},'Dst'}]}]},
      {clause,
       {388,9},
       [{var,{388,9},'_'}],
       [],
       [{debug_line,393,137},{atom,{393,13},no}]}]}]}]}.
{function,
    {396,1},
    si_ref_in_tuple,3,
    [{clause,
         {396,1},
         [{var,{396,1},'_'},{var,{396,1},'_'},{var,{396,1},'_'}],
         [[{call,
               {396,1},
               {remote,
                   {396,1},
                   {atom,{396,1},fake},
                   {atom,{396,1},is_beam_bif_info}},
               []}]],
         [{debug_line,396,138},{atom,{396,1},ignore}]},
     {clause,
         {396,1},
         [{cons,{396,17},{var,{396,18},'Lbl'},{var,{396,24},'Lbls'}},
          {var,{396,31},'Blocks'},
          {var,{396,39},'Tuple'}],
         [],
         [{debug_line,397,139},
          {match,
              {397,5},
              {tuple,
                  {397,5},
                  [{atom,{397,5},b_blk},
                   {var,{397,5},'_'},
                   {var,{397,15},'Is'},
                   {var,{397,5},'_'}]},
              {call,
                  {397,21},
                  {remote,
                      {397,21},
                      {atom,{397,21},erlang},
                      {atom,{397,21},map_get}},
                  [{var,{397,29},'Lbl'},{var,{397,34},'Blocks'}]}},
          {debug_line,398,140},
          {'case',
              {398,5},
              {call,
                  {398,10},
                  {atom,{398,10},si_ref_in_tuple_is},
                  [{var,{398,29},'Is'},{var,{398,33},'Tuple'}]},
              [{clause,
                   {399,9},
                   [{tuple,
                        {399,9},
                        [{atom,{399,10},yes},{var,{399,15},'Ref'}]}],
                   [],
                   [{debug_line,399,141},
                    {tuple,
                        {399,23},
                        [{atom,{399,24},makes_ref},
                         {var,{399,35},'Lbl'},
                         {var,{399,40},'Ref'}]}]},
               {clause,
                   {400,9},
                   [{atom,{400,9},no}],
                   [],
                   [{debug_line,400,142},
                    {call,
                        {400,15},
                        {atom,{400,15},si_ref_in_tuple},
                        [{var,{400,31},'Lbls'},
                         {var,{400,37},'Blocks'},
                         {var,{400,45},'Tuple'}]}]}]}]},
     {clause,
         {402,1},
         [{nil,{402,17}},{var,{402,21},'_Blocks'},{var,{402,30},'_Tuple'}],
         [],
         [{debug_line,403,143},{atom,{403,5},no}]}]}.
{function,
    {405,1},
    si_ref_in_tuple_is,2,
    [{clause,
         {405,1},
         [{var,{405,1},'_'},{var,{405,1},'_'}],
         [[{call,
               {405,1},
               {remote,
                   {405,1},
                   {atom,{405,1},fake},
                   {atom,{405,1},is_beam_bif_info}},
               []}]],
         [{debug_line,405,144},{atom,{405,1},ignore}]},
     {clause,
         {405,1},
         [{cons,
              {405,20},
              {tuple,
                  {405,21},
                  [{atom,{405,21},b_set},
                   {var,{405,21},'_'},
                   {var,{405,53},'Ref'},
                   {atom,{405,31},get_tuple_element},
                   {cons,
                       {406,33},
                       {match,
                           {406,34},
                           {tuple,
                               {406,34},
                               [{atom,{406,34},b_var},{var,{406,34},'_'}]},
                           {var,{406,43},'Tuple'}},
                       {cons,{406,49},{var,{406,49},'Pos'},{nil,{406,52}}}}]},
              {var,{406,57},'Is'}},
          {var,{407,20},'Tuple'}],
         [],
         [{debug_line,408,145},
          {'case',
              {408,5},
              {var,{408,10},'Pos'},
              [{clause,
                   {409,9},
                   [{tuple,
                        {409,9},
                        [{atom,{409,9},b_literal},{integer,{409,24},1}]}],
                   [],
                   [{debug_line,409,146},
                    {tuple,
                        {409,30},
                        [{atom,{409,31},yes},{var,{409,36},'Ref'}]}]},
               {clause,
                   {410,9},
                   [{var,{410,9},'_'}],
                   [],
                   [{debug_line,410,147},
                    {call,
                        {410,14},
                        {atom,{410,14},si_ref_in_tuple_is},
                        [{var,{410,33},'Is'},{var,{410,37},'Tuple'}]}]}]}]},
     {clause,
         {412,1},
         [{cons,{412,20},{var,{412,21},'_I'},{var,{412,26},'Is'}},
          {var,{412,31},'Tuple'}],
         [],
         [{debug_line,413,148},
          {call,
              {413,5},
              {atom,{413,5},si_ref_in_tuple_is},
              [{var,{413,24},'Is'},{var,{413,28},'Tuple'}]}]},
     {clause,
         {414,1},
         [{nil,{414,20}},{var,{414,24},'_Tuple'}],
         [],
         [{debug_line,415,149},{atom,{415,5},no}]}]}.
{function,{419,1},
          plan,1,
          [{clause,{419,1},
                   [{var,{419,1},'_'}],
                   [[{call,{419,1},
                           {remote,{419,1},
                                   {atom,{419,1},fake},
                                   {atom,{419,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,419,150},{atom,{419,1},ignore}]},
           {clause,{419,1},
                   [{var,{419,6},'Scan'}],
                   [],
                   [{debug_line,420,151},
                    {match,{420,5},
                           {tuple,{420,5},
                                  [{atom,{420,5},scan},
                                   {var,{423,20},'Graph'},
                                   {var,{422,21},'ModMap'},
                                   {var,{421,30},'ReceiveCandidates'},
                                   {var,{420,29},'RefCandidates'}]},
                           {var,{423,30},'Scan'}},
                    {debug_line,427,152},
                    {match,{427,5},
                           {var,{427,5},'RefMap0'},
                           {call,{427,15},
                                 {atom,{427,15},propagate_references},
                                 [{var,{427,36},'RefCandidates'},
                                  {var,{427,51},'Graph'}]}},
                    {debug_line,431,153},
                    {match,{431,5},
                           {var,{431,5},'Uses'},
                           {call,{431,12},
                                 {atom,{431,12},plan_uses},
                                 [{var,{431,22},'ReceiveCandidates'},
                                  {var,{431,41},'RefMap0'},
                                  {var,{431,50},'ModMap'}]}},
                    {debug_line,434,154},
                    {match,{434,5},
                           {var,{434,5},'RefMap'},
                           {call,{434,14},
                                 {atom,{434,14},intersect_uses},
                                 [{var,{434,29},'Uses'},
                                  {var,{434,35},'RefMap0'},
                                  {var,{434,44},'Graph'}]}},
                    {debug_line,438,155},
                    {match,{438,5},
                           {var,{438,5},'Markers'},
                           {call,{438,15},
                                 {atom,{438,15},plan_markers},
                                 [{var,{438,28},'RefCandidates'},
                                  {var,{438,43},'RefMap'}]}},
                    {debug_line,441,156},
                    {match,{441,5},
                           {var,{441,5},'Clears'},
                           {call,{441,14},
                                 {atom,{441,14},plan_clears},
                                 [{var,{441,26},'RefMap'},
                                  {var,{441,34},'Graph'}]}},
                    {debug_line,443,157},
                    {tuple,{443,5},
                           [{var,{443,6},'Markers'},
                            {var,{443,15},'Uses'},
                            {var,{443,21},'Clears'}]}]}]}.
{function,
 {446,1},
 propagate_references,2,
 [{clause,
   {446,1},
   [{var,{446,1},'_'},{var,{446,1},'_'}],
   [[{call,
      {446,1},
      {remote,{446,1},{atom,{446,1},fake},{atom,{446,1},is_beam_bif_info}},
      []}]],
   [{debug_line,446,158},{atom,{446,1},ignore}]},
  {clause,
   {446,1},
   [{var,{446,22},'Candidates'},{var,{446,34},'G'}],
   [],
   [{debug_line,447,159},
    {match,
     {447,5},
     {var,{447,5},'Roots'},
     {call,
      {447,13},
      {remote,{447,17},{atom,{447,13},maps},{atom,{447,18},fold}},
      [{block,0,
        [{'fun',
          {447,23},
          {clauses,
           [{clause,
             {447,26},
             [{var,{447,27},'FuncId'},
              {var,{447,35},'MakeRefs'},
              {var,{447,45},'Acc'}],
             [],
             [{debug_line,452,160},
              {op,
               {452,60},
               '++',
               {lc,
                {448,31},
                {block,
                 {448,32},
                 [{debug_line,449,161},
                  {match,
                   {449,36},
                   {tuple,
                    {449,36},
                    [{var,{449,37},'_'},
                     {var,{449,40},'_'},
                     {var,{449,43},'_'},
                     {var,{449,46},'ExtractedAt'},
                     {var,{449,59},'Ref'}]},
                   {var,{449,66},'MakeRef'}},
                  {debug_line,450,162},
                  {match,
                   {450,36},
                   {var,{450,36},'Vertex'},
                   {tuple,
                    {450,45},
                    [{var,{450,46},'FuncId'},{var,{450,54},'ExtractedAt'}]}},
                  {debug_line,451,163},
                  {tuple,
                   {451,36},
                   [{var,{451,37},'Vertex'},{var,{451,45},'Ref'}]}]},
                [{block,0,[{atom,{452,50},true}]},
                 {generate,
                  {452,47},
                  {var,{452,39},'MakeRef'},
                  {var,{452,50},'MakeRefs'}}]},
               {var,{452,63},'Acc'}}]}]}}]},
       {nil,{453,28}},
       {var,{453,32},'Candidates'}]}},
    {debug_line,454,164},
    {call,
     {454,5},
     {atom,{454,5},propagate_references_1},
     [{var,{454,28},'Roots'},
      {var,{454,35},'G'},
      {block,0,[{map,{454,38},[]}]}]}]}]}.
{function,
 {456,1},
 propagate_references_1,3,
 [{clause,
   {456,1},
   [{var,{456,1},'_'},{var,{456,1},'_'},{var,{456,1},'_'}],
   [[{call,
      {456,1},
      {remote,{456,1},{atom,{456,1},fake},{atom,{456,1},is_beam_bif_info}},
      []}]],
   [{debug_line,456,165},{atom,{456,1},ignore}]},
  {clause,
   {456,1},
   [{cons,
     {456,24},
     {tuple,{456,25},[{var,{456,26},'Vertex'},{var,{456,34},'Ref'}]},
     {var,{456,41},'VRefs'}},
    {var,{456,49},'G'},
    {var,{456,52},'Acc0'}],
   [],
   [{debug_line,457,166},
    {match,
     {457,5},
     {var,{457,5},'Refs'},
     {call,
      {457,12},
      {remote,{457,16},{atom,{457,12},maps},{atom,{457,17},get}},
      [{var,{457,21},'Vertex'},
       {var,{457,29},'Acc0'},
       {block,0,
        [{call,
          {457,35},
          {remote,{457,39},{atom,{457,35},sets},{atom,{457,40},new}},
          []}]}]}},
    {debug_line,458,167},
    {match,
     {458,5},
     {var,{458,5},'Acc'},
     {'case',
      {458,11},
      {call,
       {458,16},
       {remote,{458,20},{atom,{458,16},sets},{atom,{458,21},is_element}},
       [{var,{458,32},'Ref'},{var,{458,37},'Refs'}]},
      [{clause,
        {459,15},
        [{atom,{459,15},true}],
        [],
        [{debug_line,461,168},{var,{461,19},'Acc0'}]},
       {clause,
        {462,15},
        [{atom,{462,15},false}],
        [],
        [{debug_line,463,169},
         {match,
          {463,19},
          {var,{463,19},'Acc1'},
          {map,
           {463,30},
           {var,{463,26},'Acc0'},
           [{map_field_assoc,
             {463,40},
             {var,{463,33},'Vertex'},
             {call,
              {463,43},
              {remote,
               {463,47},
               {atom,{463,43},sets},
               {atom,{463,48},add_element}},
              [{var,{463,60},'Ref'},{var,{463,65},'Refs'}]}}]}},
         {debug_line,464,170},
         {match,
          {464,19},
          {var,{464,19},'Next'},
          {call,
           {464,26},
           {atom,{464,26},pr_successors},
           [{block,0,
             [{call,
               {464,40},
               {remote,
                {464,52},
                {atom,{464,40},beam_digraph},
                {atom,{464,53},out_edges}},
               [{var,{464,63},'G'},{var,{464,66},'Vertex'}]}]},
            {var,{464,75},'Ref'}]}},
         {debug_line,465,171},
         {call,
          {465,19},
          {atom,{465,19},propagate_references_1},
          [{var,{465,42},'Next'},
           {var,{465,48},'G'},
           {var,{465,51},'Acc1'}]}]}]}},
    {debug_line,467,172},
    {call,
     {467,5},
     {atom,{467,5},propagate_references_1},
     [{var,{467,28},'VRefs'},{var,{467,35},'G'},{var,{467,38},'Acc'}]}]},
  {clause,
   {468,1},
   [{nil,{468,24}},{var,{468,28},'_G'},{var,{468,32},'Acc'}],
   [],
   [{debug_line,469,173},{var,{469,5},'Acc'}]}]}.
{function,
 {471,1},
 pr_successors,2,
 [{clause,
   {471,1},
   [{var,{471,1},'_'},{var,{471,1},'_'}],
   [[{call,
      {471,1},
      {remote,{471,1},{atom,{471,1},fake},{atom,{471,1},is_beam_bif_info}},
      []}]],
   [{debug_line,471,174},{atom,{471,1},ignore}]},
  {clause,
   {471,1},
   [{cons,
     {471,15},
     {tuple,
      {471,16},
      [{var,{471,17},'_From'},{var,{471,24},'To'},{atom,{471,28},branch}]},
     {var,{471,38},'Edges'}},
    {var,{471,46},'Ref'}],
   [],
   [{debug_line,472,175},
    {cons,
     {472,5},
     {tuple,{472,6},[{var,{472,7},'To'},{var,{472,11},'Ref'}]},
     {call,
      {472,18},
      {atom,{472,18},pr_successors},
      [{var,{472,32},'Edges'},{var,{472,39},'Ref'}]}}]},
  {clause,
   {473,1},
   [{cons,
     {473,15},
     {tuple,
      {473,16},
      [{tuple,{473,17},[{var,{473,18},'_'},{var,{473,21},'FromLbl'}]},
       {var,{473,31},'To'},
       {tuple,
        {473,35},
        [{var,{473,36},'Translation'},
         {var,{473,49},'_Inverse'},
         {var,{473,59},'Args'}]}]},
     {var,{473,68},'Edges'}},
    {var,{474,15},'Ref'}],
   [],
   [{debug_line,475,176},
    {'case',
     {475,5},
     {var,{475,10},'Translation'},
     [{clause,
       {476,9},
       [{map,
         {476,9},
         [{map_field_exact,
           {476,16},
           {var,{476,12},'Ref'},
           {match,
            {476,19},
            {tuple,{476,19},[{atom,{476,19},b_var},{var,{476,19},'_'}]},
            {var,{476,28},'Param'}}}]}],
       [],
       [{debug_line,494,177},
        {'case',
         {494,13},
         {'case',
          {494,27},
          {op,
           {494,27},
           '=/=',
           {var,{494,19},'FromLbl'},
           {op,{494,32},'-',{integer,{494,32},1}}},
          [{clause,{494,27},[{atom,{494,27},true}],[],[{atom,{494,27},true}]},
           {clause,
            {494,27},
            [{atom,{494,27},false}],
            [],
            [{debug_line,495,178},
             {op,
              {495,19},
              'not',
              {call,
               {495,23},
               {remote,{495,23},{atom,{495,23},lists},{atom,{495,23},member}},
               [{var,{495,30},'Ref'},{var,{495,35},'Args'}]}}]},
           {clause,
            [{generated,true},{location,{494,27}}],
            [{var,{494,27},cov1}],
            [],
            [{call,
              {494,27},
              {remote,{494,27},{atom,{494,27},erlang},{atom,{494,27},error}},
              [{block,0,
                [{tuple,
                  {494,27},
                  [{atom,{494,27},badarg},{var,{494,27},cov1}]}]}]}]}]},
         [{clause,
           {496,17},
           [{atom,{496,17},true}],
           [],
           [{debug_line,497,179},
            {cons,
             {497,21},
             {tuple,{497,22},[{var,{497,23},'To'},{var,{497,27},'Param'}]},
             {call,
              {497,36},
              {atom,{497,36},pr_successors},
              [{var,{497,50},'Edges'},{var,{497,57},'Ref'}]}}]},
          {clause,
           {498,17},
           [{atom,{498,17},false}],
           [],
           [{debug_line,499,180},
            {call,
             {499,21},
             {atom,{499,21},pr_successors},
             [{var,{499,35},'Edges'},{var,{499,42},'Ref'}]}]}]}]},
      {clause,
       {501,9},
       [{map,{501,9},[]}],
       [],
       [{debug_line,502,181},
        {call,
         {502,13},
         {atom,{502,13},pr_successors},
         [{var,{502,27},'Edges'},{var,{502,34},'Ref'}]}]}]}]},
  {clause,
   {504,1},
   [{nil,{504,15}},{var,{504,19},'_Ref'}],
   [],
   [{debug_line,505,182},{nil,{505,5}}]}]}.
{function,
 {509,1},
 plan_uses,3,
 [{clause,
   {509,1},
   [{var,{509,1},'_'},{var,{509,1},'_'},{var,{509,1},'_'}],
   [[{call,
      {509,1},
      {remote,{509,1},{atom,{509,1},fake},{atom,{509,1},is_beam_bif_info}},
      []}]],
   [{debug_line,509,183},{atom,{509,1},ignore}]},
  {clause,
   {509,1},
   [{var,{509,11},'Candidates'},
    {var,{509,23},'RefMap'},
    {var,{509,31},'ModMap'}],
   [],
   [{debug_line,510,184},
    {call,
     {510,5},
     {remote,{510,9},{atom,{510,5},maps},{atom,{510,10},fold}},
     [{block,0,
       [{'fun',
         {510,15},
         {clauses,
          [{clause,
            {510,18},
            [{var,{510,19},'FuncId'},
             {var,{510,27},'Receives'},
             {var,{510,37},'Acc'}],
            [],
            [{debug_line,511,185},
             {match,
              {511,23},
              {map,
               {511,23},
               [{map_field_exact,
                 {511,33},
                 {var,{511,26},'FuncId'},
                 {tuple,
                  {511,36},
                  [{var,{511,37},'Blocks'},
                   {var,{511,45},'_Params'},
                   {var,{511,54},'_Rets'}]}}]},
              {var,{511,65},'ModMap'}},
             {debug_line,512,186},
             {'case',
              {512,23},
              {call,
               {512,28},
               {atom,{512,28},plan_uses_1},
               [{var,{512,40},'Receives'},
                {var,{512,50},'FuncId'},
                {var,{512,58},'Blocks'},
                {var,{512,66},'RefMap'}]},
              [{clause,
                {513,27},
                [{match,
                  {513,27},
                  {cons,{513,27},{var,{513,28},'_'},{var,{513,30},'_'}},
                  {var,{513,33},'Uses'}}],
                [],
                [{debug_line,513,187},
                 {map,
                  {513,44},
                  {var,{513,41},'Acc'},
                  [{map_field_assoc,
                    {513,54},
                    {var,{513,47},'FuncId'},
                    {var,{513,57},'Uses'}}]}]},
               {clause,
                {514,27},
                [{nil,{514,27}}],
                [],
                [{debug_line,514,188},{var,{514,33},'Acc'}]}]}]}]}}]},
      {block,0,[{debug_line,516,189},{map,{516,20},[]}]},
      {var,{516,25},'Candidates'}]}]}]}.
{function,
 {518,1},
 plan_uses_1,4,
 [{clause,
   {518,1},
   [{var,{518,1},'_'},{var,{518,1},'_'},{var,{518,1},'_'},{var,{518,1},'_'}],
   [[{call,
      {518,1},
      {remote,{518,1},{atom,{518,1},fake},{atom,{518,1},is_beam_bif_info}},
      []}]],
   [{debug_line,518,190},{atom,{518,1},ignore}]},
  {clause,
   {518,1},
   [{cons,
     {518,13},
     {tuple,{518,14},[{var,{518,15},'Lbl'},{var,{518,20},'I'}]},
     {var,{518,25},'Receives'}},
    {var,{518,36},'FuncId'},
    {var,{518,44},'Blocks'},
    {var,{518,52},'RefMap'}],
   [],
   [{debug_line,519,191},
    {'case',
     {519,5},
     {var,{519,10},'RefMap'},
     [{clause,
       {520,9},
       [{map,
         {520,9},
         [{map_field_exact,
           {520,26},
           {tuple,{520,12},[{var,{520,13},'FuncId'},{var,{520,21},'Lbl'}]},
           {var,{520,29},'Refs'}}]}],
       [],
       [{debug_line,521,192},
        {'case',
         {521,13},
         {call,
          {521,18},
          {remote,{521,18},{atom,{521,18},lists},{atom,{521,18},search}},
          [{block,0,
            [{'fun',
              {521,25},
              {clauses,
               [{clause,
                 {521,28},
                 [{var,{521,29},'Ref'}],
                 [],
                 [{debug_line,522,193},
                  {call,
                   {522,33},
                   {atom,{522,33},pu_is_ref_used},
                   [{var,{522,48},'I'},
                    {var,{522,51},'Ref'},
                    {var,{522,56},'Lbl'},
                    {var,{522,61},'Blocks'}]}]}]}}]},
           {block,0,
            [{debug_line,523,194},
             {call,
              {523,30},
              {remote,{523,34},{atom,{523,30},sets},{atom,{523,35},to_list}},
              [{var,{523,43},'Refs'}]}]}]},
         [{clause,
           {524,17},
           [{tuple,{524,17},[{atom,{524,18},value},{var,{524,25},'Ref'}]}],
           [],
           [{debug_line,525,195},
            {match,
             {525,21},
             {var,{525,21},'Use'},
             {tuple,
              {525,27},
              [{var,{525,28},'Lbl'},{var,{525,33},'I'},{var,{525,36},'Ref'}]}},
            {debug_line,526,196},
            {cons,
             {526,21},
             {var,{526,22},'Use'},
             {call,
              {526,28},
              {atom,{526,28},plan_uses_1},
              [{var,{526,40},'Receives'},
               {var,{526,50},'FuncId'},
               {var,{526,58},'Blocks'},
               {var,{526,66},'RefMap'}]}}]},
          {clause,
           {527,17},
           [{atom,{527,17},false}],
           [],
           [{debug_line,528,197},
            {call,
             {528,21},
             {atom,{528,21},plan_uses_1},
             [{var,{528,33},'Receives'},
              {var,{528,43},'FuncId'},
              {var,{528,51},'Blocks'},
              {var,{528,59},'RefMap'}]}]}]}]},
      {clause,
       {530,9},
       [{map,{530,9},[]}],
       [],
       [{debug_line,531,198},
        {call,
         {531,13},
         {atom,{531,13},plan_uses_1},
         [{var,{531,25},'Receives'},
          {var,{531,35},'FuncId'},
          {var,{531,43},'Blocks'},
          {var,{531,51},'RefMap'}]}]}]}]},
  {clause,
   {533,1},
   [{nil,{533,13}},
    {var,{533,17},'_FuncId'},
    {var,{533,26},'_Blocks'},
    {var,{533,35},'_RefMap'}],
   [],
   [{debug_line,534,199},{nil,{534,5}}]}]}.
{function,
    {538,1},
    pu_is_ref_used,4,
    [{clause,
         {538,1},
         [{var,{538,1},'_'},
          {var,{538,1},'_'},
          {var,{538,1},'_'},
          {var,{538,1},'_'}],
         [[{call,
               {538,1},
               {remote,
                   {538,1},
                   {atom,{538,1},fake},
                   {atom,{538,1},is_beam_bif_info}},
               []}]],
         [{debug_line,538,200},{atom,{538,1},ignore}]},
     {clause,
         {538,1},
         [{tuple,
              {538,16},
              [{atom,{538,16},b_set},
               {var,{538,16},'_'},
               {var,{538,16},'_'},
               {atom,{538,26},call},
               {cons,{538,36},{var,{538,37},'Callee'},{var,{538,46},'Args'}}]},
          {var,{538,54},'Ref'},
          {var,{538,59},'_Lbl'},
          {var,{538,65},'_Blocks'}],
         [],
         [{debug_line,539,201},
          {match,
              {539,5},
              {var,{539,5},'MFA'},
              {'case',
                  {539,11},
                  {var,{539,16},'Callee'},
                  [{clause,
                       {540,15},
                       [{tuple,
                            {540,15},
                            [{atom,{540,15},b_remote},
                             {tuple,
                                 {540,29},
                                 [{atom,{540,29},b_literal},
                                  {var,{540,44},'Mod'}]},
                             {tuple,
                                 {541,30},
                                 [{atom,{541,30},b_literal},
                                  {var,{541,45},'Func'}]},
                             {var,{542,31},'Arity'}]}],
                       [],
                       [{debug_line,543,202},
                        {tuple,
                            {543,19},
                            [{var,{543,20},'Mod'},
                             {var,{543,25},'Func'},
                             {var,{543,31},'Arity'}]}]},
                   {clause,
                       {544,15},
                       [{var,{544,15},'_'}],
                       [],
                       [{debug_line,545,203},{atom,{545,19},none}]}]}},
          {debug_line,547,204},
          {'case',
              {547,5},
              {var,{547,10},'MFA'},
              [{clause,
                   {548,9},
                   [{tuple,
                        {548,9},
                        [{atom,{548,10},erlang},
                         {atom,{548,17},demonitor},
                         {integer,{548,27},2}]}],
                   [],
                   [{debug_line,549,205},
                    {match,
                        {549,13},
                        {cons,
                            {549,13},
                            {var,{549,14},'MRef'},
                            {var,{549,21},'_'}},
                        {var,{549,26},'Args'}},
                    {debug_line,550,206},
                    {op,{550,18},
                        '=:=',
                        {var,{550,13},'MRef'},
                        {var,{550,22},'Ref'}}]},
               {clause,
                   {551,9},
                   [{var,{551,9},'_'}],
                   [],
                   [{debug_line,552,207},{atom,{552,13},false}]}]}]},
     {clause,
         {554,1},
         [{match,
              {554,16},
              {tuple,
                  {554,16},
                  [{atom,{554,16},b_set},
                   {var,{554,16},'_'},
                   {var,{554,43},'Msg'},
                   {atom,{554,26},peek_message},
                   {var,{554,16},'_'}]},
              {var,{554,48},'I'}},
          {var,{554,51},'Ref'},
          {var,{554,56},'Lbl'},
          {var,{554,61},'Blocks'}],
         [],
         [{debug_line,555,208},
          {match,
              {555,5},
              {tuple,
                  {555,5},
                  [{atom,{555,5},b_blk},
                   {var,{555,5},'_'},
                   {cons,{555,15},{var,{555,16},'I'},{var,{555,20},'_'}},
                   {var,{555,5},'_'}]},
              {match,
                  {555,26},
                  {var,{555,26},'Blk'},
                  {call,
                      {555,32},
                      {remote,
                          {555,32},
                          {atom,{555,32},erlang},
                          {atom,{555,32},map_get}},
                      [{var,{555,40},'Lbl'},{var,{555,45},'Blocks'}]}}},
          {debug_line,556,209},
          {match,
              {556,5},
              {var,{556,5},'Vs'},
              {map,
                  {556,10},
                  [{map_field_assoc,
                       {556,15},
                       {var,{556,12},'Msg'},
                       {atom,{556,17},message}},
                   {map_field_assoc,
                       {556,28},
                       {var,{556,25},'Ref'},
                       {atom,{556,30},ref}},
                   {map_field_assoc,
                       {556,37},
                       {atom,{556,34},ref},
                       {var,{556,39},'Ref'}},
                   {map_field_assoc,
                       {556,54},
                       {atom,{556,43},ref_matched},
                       {atom,{556,56},false}}]}},
          {debug_line,557,210},
          {'case',
              {557,5},
              {call,
                  {557,10},
                  {atom,{557,10},pu_is_ref_used_last},
                  [{var,{557,30},'Blk'},
                   {var,{557,35},'Vs'},
                   {var,{557,39},'Blocks'}]},
              [{clause,
                   {558,9},
                   [{atom,{558,9},used}],
                   [],
                   [{debug_line,558,211},{atom,{558,17},true}]},
               {clause,
                   {559,9},
                   [{atom,{559,9},not_used}],
                   [],
                   [{debug_line,559,212},{atom,{559,21},false}]},
               {clause,
                   {560,9},
                   [{atom,{560,9},done}],
                   [],
                   [{debug_line,560,213},{atom,{560,17},false}]}]}]}]}.
{function,
 {563,1},
 pu_is_ref_used_last,3,
 [{clause,
   {563,1},
   [{var,{563,1},'_'},{var,{563,1},'_'},{var,{563,1},'_'}],
   [[{call,
      {563,1},
      {remote,{563,1},{atom,{563,1},fake},{atom,{563,1},is_beam_bif_info}},
      []}]],
   [{debug_line,563,214},{atom,{563,1},ignore}]},
  {clause,
   {563,1},
   [{match,
     {563,21},
     {tuple,
      {563,21},
      [{atom,{563,21},b_blk},
       {var,{563,21},'_'},
       {var,{563,21},'_'},
       {var,{563,33},'Last'}]},
     {var,{563,39},'Blk'}},
    {var,{563,44},'Vs'},
    {var,{563,48},'Blocks'}],
   [],
   [{debug_line,564,215},
    {match,
     {564,5},
     {var,{564,5},'SuccVs'},
     {'case',
      {564,14},
      {var,{564,19},'Last'},
      [{clause,
        {565,18},
        [{tuple,
          {565,18},
          [{atom,{565,18},b_br},
           {var,{565,18},'_'},
           {match,
            {565,29},
            {tuple,{565,29},[{atom,{565,29},b_var},{var,{565,29},'_'}]},
            {var,{565,38},'Bool'}},
           {var,{565,48},'Succ'},
           {var,{565,58},'Fail'}]}],
        [],
        [{debug_line,566,216},
         {'case',
          {566,22},
          {var,{566,27},'Vs'},
          [{clause,
            {567,26},
            [{map,
              {567,26},
              [{map_field_exact,
                {567,32},
                {var,{567,28},'Bool'},
                {tuple,
                 {567,34},
                 [{atom,{567,35},is_ref},{var,{567,42},'Matched'}]}}]}],
            [],
            [{debug_line,568,217},
             {cons,
              {568,30},
              {tuple,
               {568,31},
               [{var,{568,32},'Succ'},
                {map,
                 {568,39},
                 {var,{568,37},'Vs'},
                 [{map_field_exact,
                   {568,52},
                   {atom,{568,41},ref_matched},
                   {var,{568,54},'Matched'}}]}]},
              {cons,
               {569,31},
               {tuple,
                {569,31},
                [{var,{569,32},'Fail'},
                 {map,
                  {569,39},
                  {var,{569,37},'Vs'},
                  [{map_field_exact,
                    {569,52},
                    {atom,{569,41},ref_matched},
                    {op,{569,54},'not',{var,{569,58},'Matched'}}}]}]},
               {nil,{569,67}}}}]},
           {clause,
            {570,26},
            [{map,{570,26},[]}],
            [],
            [{debug_line,571,218},
             {cons,
              {571,30},
              {tuple,{571,31},[{var,{571,32},'Succ'},{var,{571,37},'Vs'}]},
              {cons,
               {571,41},
               {tuple,{571,41},[{var,{571,42},'Fail'},{var,{571,47},'Vs'}]},
               {nil,{571,50}}}}]}]}]},
       {clause,
        {573,18},
        [{var,{573,18},'_'}],
        [],
        [{debug_line,574,219},
         {lc,
          {574,22},
          {block,0,
           [{tuple,{574,23},[{var,{574,24},'Succ'},{var,{574,29},'Vs'}]}]},
          [{block,0,[{atom,{574,44},true}]},
           {generate,
            {574,41},
            {var,{574,36},'Succ'},
            {call,
             {574,44},
             {remote,
              {574,52},
              {atom,{574,44},beam_ssa},
              {atom,{574,53},successors}},
             [{var,{574,64},'Blk'}]}}]}]}]}},
    {debug_line,577,220},
    {match,
     {577,5},
     {cons,{577,5},{var,{577,6},'_'},{var,{577,8},'_'}},
     {var,{577,13},'SuccVs'}},
    {debug_line,578,221},
    {call,
     {578,5},
     {atom,{578,5},pu_ref_used_in},
     [{var,{578,20},'SuccVs'},{var,{578,28},'Blocks'}]}]}]}.
{function,
    {580,1},
    pu_ref_used_in,2,
    [{clause,
         {580,1},
         [{var,{580,1},'_'},{var,{580,1},'_'}],
         [[{call,
               {580,1},
               {remote,
                   {580,1},
                   {atom,{580,1},fake},
                   {atom,{580,1},is_beam_bif_info}},
               []}]],
         [{debug_line,580,222},{atom,{580,1},ignore}]},
     {clause,
         {580,1},
         [{cons,
              {580,16},
              {tuple,{580,17},[{var,{580,18},'L'},{var,{580,20},'Vs0'}]},
              {var,{580,25},'Ls'}},
          {var,{580,30},'Blocks'}],
         [],
         [{debug_line,581,223},
          {'case',
              {581,5},
              {call,
                  {581,10},
                  {atom,{581,10},pu_is_ref_used_in_1},
                  [{var,{581,30},'L'},
                   {var,{581,33},'Vs0'},
                   {var,{581,38},'Blocks'}]},
              [{clause,
                   {582,9},
                   [{atom,{582,9},not_used}],
                   [],
                   [{debug_line,583,224},{atom,{583,13},not_used}]},
               {clause,
                   {584,9},
                   [{atom,{584,9},used}],
                   [],
                   [{debug_line,585,225},
                    {'case',
                        {585,13},
                        {call,
                            {585,18},
                            {atom,{585,18},pu_ref_used_in},
                            [{var,{585,33},'Ls'},{var,{585,37},'Blocks'}]},
                        [{clause,
                             {586,17},
                             [{atom,{586,17},done}],
                             [],
                             [{debug_line,586,226},{atom,{586,25},used}]},
                         {clause,
                             {587,17},
                             [{var,{587,17},'Result'}],
                             [],
                             [{debug_line,587,227},
                              {var,{587,27},'Result'}]}]}]},
               {clause,
                   {589,9},
                   [{atom,{589,9},done}],
                   [],
                   [{debug_line,590,228},
                    {call,
                        {590,13},
                        {atom,{590,13},pu_ref_used_in},
                        [{var,{590,28},'Ls'},{var,{590,32},'Blocks'}]}]}]}]},
     {clause,
         {592,1},
         [{nil,{592,16}},{var,{592,20},'_'}],
         [],
         [{debug_line,593,229},{atom,{593,5},done}]}]}.
{function,
    {595,1},
    pu_is_ref_used_in_1,3,
    [{clause,
         {595,1},
         [{var,{595,1},'_'},{var,{595,1},'_'},{var,{595,1},'_'}],
         [[{call,
               {595,1},
               {remote,
                   {595,1},
                   {atom,{595,1},fake},
                   {atom,{595,1},is_beam_bif_info}},
               []}]],
         [{debug_line,595,230},{atom,{595,1},ignore}]},
     {clause,
         {595,1},
         [{var,{595,21},'L'},{var,{595,24},'Vs0'},{var,{595,29},'Blocks'}],
         [],
         [{debug_line,596,231},
          {match,
              {596,5},
              {tuple,
                  {596,5},
                  [{atom,{596,5},b_blk},
                   {var,{596,5},'_'},
                   {var,{596,15},'Is'},
                   {var,{596,5},'_'}]},
              {match,
                  {596,21},
                  {var,{596,21},'Blk'},
                  {call,
                      {596,27},
                      {remote,
                          {596,27},
                          {atom,{596,27},erlang},
                          {atom,{596,27},map_get}},
                      [{var,{596,35},'L'},{var,{596,38},'Blocks'}]}}},
          {debug_line,597,232},
          {'case',
              {597,5},
              {call,
                  {597,10},
                  {atom,{597,10},pu_is_ref_used_is},
                  [{var,{597,28},'Is'},{var,{597,32},'Vs0'}]},
              [{clause,
                   {598,9},
                   [{match,{598,9},{map,{598,9},[]},{var,{598,13},'Vs'}}],
                   [],
                   [{debug_line,599,233},
                    {call,
                        {599,13},
                        {atom,{599,13},pu_is_ref_used_last},
                        [{var,{599,33},'Blk'},
                         {var,{599,38},'Vs'},
                         {var,{599,42},'Blocks'}]}]},
               {clause,
                   {600,9},
                   [{var,{600,9},'Result'}],
                   [],
                   [{debug_line,601,234},{var,{601,13},'Result'}]}]}]}]}.
{function,
 {604,1},
 pu_is_ref_used_is,2,
 [{clause,
   {604,1},
   [{var,{604,1},'_'},{var,{604,1},'_'}],
   [[{call,
      {604,1},
      {remote,{604,1},{atom,{604,1},fake},{atom,{604,1},is_beam_bif_info}},
      []}]],
   [{debug_line,604,235},{atom,{604,1},ignore}]},
  {clause,
   {604,1},
   [{cons,
     {604,19},
     {match,
      {604,20},
      {tuple,
       {604,20},
       [{atom,{604,20},b_set},
        {var,{604,20},'_'},
        {var,{604,54},'Dst'},
        {tuple,{604,30},[{atom,{604,31},bif},{var,{604,35},'Bif'}]},
        {var,{604,45},'Args'}]},
      {var,{604,59},'I'}},
     {var,{604,61},'Is'}},
    {var,{605,19},'Vs0'}],
   [],
   [{debug_line,606,236},
    {'if',
     {606,5},
     [{clause,
       {607,9},
       [],
       [[{op,{607,13},'=:=',{var,{607,9},'Bif'},{atom,{607,17},'=:='}}],
        [{op,{607,28},'=:=',{var,{607,24},'Bif'},{atom,{607,32},'=='}}]],
       [{debug_line,608,237},
        {'case',
         {608,13},
         {call,
          {608,18},
          {atom,{608,18},pu_is_ref_msg_comparison},
          [{var,{608,43},'Args'},{var,{608,49},'Vs0'}]},
         [{clause,
           {609,17},
           [{atom,{609,17},true}],
           [],
           [{debug_line,610,238},
            {match,
             {610,21},
             {var,{610,21},'Vs'},
             {map,
              {610,29},
              {var,{610,26},'Vs0'},
              [{map_field_assoc,
                {610,34},
                {var,{610,31},'Dst'},
                {tuple,
                 {610,36},
                 [{atom,{610,37},is_ref},{atom,{610,44},true}]}}]}},
            {debug_line,611,239},
            {call,
             {611,21},
             {atom,{611,21},pu_is_ref_used_is},
             [{var,{611,39},'Is'},{var,{611,43},'Vs'}]}]},
          {clause,
           {612,17},
           [{atom,{612,17},false}],
           [],
           [{debug_line,613,240},
            {call,
             {613,21},
             {atom,{613,21},pu_is_ref_used_is},
             [{var,{613,39},'Is'},{var,{613,43},'Vs0'}]}]}]}]},
      {clause,
       {615,9},
       [],
       [[{atom,{615,9},true}]],
       [{debug_line,616,241},
        {match,
         {616,13},
         {var,{616,13},'Vs'},
         {call,
          {616,18},
          {atom,{616,18},pu_update_vars},
          [{var,{616,33},'I'},{var,{616,36},'Vs0'}]}},
        {debug_line,617,242},
        {call,
         {617,13},
         {atom,{617,13},pu_is_ref_used_is},
         [{var,{617,31},'Is'},{var,{617,35},'Vs'}]}]}]}]},
  {clause,
   {619,1},
   [{cons,
     {619,19},
     {tuple,
      {619,20},
      [{atom,{619,20},b_set},
       {var,{619,20},'_'},
       {var,{619,20},'_'},
       {atom,{619,30},remove_message},
       {var,{619,20},'_'}]},
     {var,{619,46},'_'}},
    {var,{619,50},'Vs'}],
   [],
   [{debug_line,620,243},
    {'case',
     {620,5},
     {var,{620,10},'Vs'},
     [{clause,
       {621,9},
       [{map,
         {621,9},
         [{map_field_exact,
           {621,22},
           {atom,{621,11},ref_matched},
           {atom,{621,24},true}}]}],
       [],
       [{debug_line,622,244},{atom,{622,13},used}]},
      {clause,
       {623,9},
       [{map,
         {623,9},
         [{map_field_exact,
           {623,22},
           {atom,{623,11},ref_matched},
           {atom,{623,24},false}}]}],
       [],
       [{debug_line,624,245},{atom,{624,13},not_used}]}]}]},
  {clause,
   {626,1},
   [{cons,
     {626,19},
     {tuple,
      {626,20},
      [{atom,{626,20},b_set},
       {var,{626,20},'_'},
       {var,{626,20},'_'},
       {atom,{626,30},recv_next},
       {var,{626,20},'_'}]},
     {var,{626,41},'_'}},
    {var,{626,45},'_Vs'}],
   [],
   [{debug_line,627,246},{atom,{627,5},done}]},
  {clause,
   {628,1},
   [{cons,
     {628,19},
     {tuple,
      {628,20},
      [{atom,{628,20},b_set},
       {var,{628,20},'_'},
       {var,{628,20},'_'},
       {atom,{628,30},wait_timeout},
       {var,{628,20},'_'}]},
     {var,{628,44},'_'}},
    {var,{628,48},'_Vs'}],
   [],
   [{debug_line,629,247},{atom,{629,5},done}]},
  {clause,
   {630,1},
   [{cons,
     {630,19},
     {match,
      {630,20},
      {tuple,
       {630,20},
       [{atom,{630,20},b_set},
        {var,{630,20},'_'},
        {var,{630,20},'_'},
        {var,{630,20},'_'},
        {var,{630,20},'_'}]},
      {var,{630,29},'I'}},
     {var,{630,31},'Is'}},
    {var,{630,36},'Vs0'}],
   [],
   [{debug_line,633,248},
    {match,
     {633,5},
     {atom,{633,5},true},
     {call,
      {633,12},
      {remote,
       {633,20},
       {atom,{633,12},beam_ssa},
       {atom,{633,21},no_side_effect}},
      [{var,{633,36},'I'}]}},
    {debug_line,634,249},
    {match,
     {634,5},
     {var,{634,5},'Vs'},
     {call,
      {634,10},
      {atom,{634,10},pu_update_vars},
      [{var,{634,25},'I'},{var,{634,28},'Vs0'}]}},
    {debug_line,635,250},
    {call,
     {635,5},
     {atom,{635,5},pu_is_ref_used_is},
     [{var,{635,23},'Is'},{var,{635,27},'Vs'}]}]},
  {clause,
   {636,1},
   [{nil,{636,19}},{var,{636,23},'Vs'}],
   [],
   [{debug_line,637,251},{var,{637,5},'Vs'}]}]}.
{function,
 {639,1},
 pu_update_vars,2,
 [{clause,
   {639,1},
   [{var,{639,1},'_'},{var,{639,1},'_'}],
   [[{call,
      {639,1},
      {remote,{639,1},{atom,{639,1},fake},{atom,{639,1},is_beam_bif_info}},
      []}]],
   [{debug_line,639,252},{atom,{639,1},ignore}]},
  {clause,
   {639,1},
   [{tuple,
     {639,16},
     [{atom,{639,16},b_set},
      {var,{639,16},'_'},
      {var,{639,37},'Dst'},
      {var,{639,16},'_'},
      {var,{639,28},'Args'}]},
    {var,{639,43},'Vs'}],
   [],
   [{debug_line,640,253},
    {match,
     {640,5},
     {var,{640,5},'Vars'},
     {lc,
      {640,12},
      {block,0,[{var,{640,13},'V'}]},
      [{block,0,[{atom,{640,32},true}]},
       {generate,
        {640,29},
        {match,
         {640,18},
         {tuple,{640,18},[{atom,{640,18},b_var},{var,{640,18},'_'}]},
         {var,{640,27},'V'}},
        {var,{640,32},'Args'}}]}},
    {debug_line,641,254},
    {match,
     {641,5},
     {var,{641,5},'All'},
     {call,
      {641,11},
      {remote,{641,16},{atom,{641,11},lists},{atom,{641,17},all}},
      [{block,0,
        [{'fun',
          {641,21},
          {clauses,
           [{clause,
             {641,24},
             [{var,{641,25},'Var'}],
             [],
             [{debug_line,642,255},
              {'case',
               {642,29},
               {var,{642,34},'Vs'},
               [{clause,
                 {643,33},
                 [{map,
                   {643,33},
                   [{map_field_exact,
                     {643,38},
                     {var,{643,35},'Var'},
                     {atom,{643,40},message}}]}],
                 [],
                 [{debug_line,643,256},{atom,{643,52},true}]},
                {clause,
                 {644,33},
                 [{map,{644,33},[]}],
                 [],
                 [{debug_line,644,257},{atom,{644,40},false}]}]}]}]}}]},
       {var,{646,26},'Vars'}]}},
    {debug_line,647,258},
    {'case',
     {647,5},
     {tuple,{647,10},[{var,{647,11},'Vars'},{var,{647,16},'All'}]},
     [{clause,
       {648,9},
       [{tuple,
         {648,9},
         [{cons,{648,10},{var,{648,11},'_'},{var,{648,13},'_'}},
          {atom,{648,16},true}]}],
       [],
       [{debug_line,648,259},
        {map,
         {648,27},
         {var,{648,25},'Vs'},
         [{map_field_assoc,
           {648,32},
           {var,{648,29},'Dst'},
           {atom,{648,34},message}}]}]},
      {clause,
       {649,9},
       [{tuple,{649,9},[{var,{649,10},'_'},{var,{649,12},'_'}]}],
       [],
       [{debug_line,649,260},{var,{649,18},'Vs'}]}]}]}]}.
{function,
    {654,1},
    pu_is_ref_msg_comparison,2,
    [{clause,
         {654,1},
         [{var,{654,1},'_'},{var,{654,1},'_'}],
         [[{call,
               {654,1},
               {remote,
                   {654,1},
                   {atom,{654,1},fake},
                   {atom,{654,1},is_beam_bif_info}},
               []}]],
         [{debug_line,654,261},{atom,{654,1},ignore}]},
     {clause,
         {654,1},
         [{cons,
              {654,26},
              {match,
                  {654,27},
                  {tuple,{654,27},[{atom,{654,27},b_var},{var,{654,27},'_'}]},
                  {var,{654,36},'V1'}},
              {cons,
                  {654,39},
                  {match,
                      {654,39},
                      {tuple,
                          {654,39},
                          [{atom,{654,39},b_var},{var,{654,39},'_'}]},
                      {var,{654,48},'V2'}},
                  {nil,{654,50}}}},
          {var,{654,53},'Vs'}],
         [],
         [{debug_line,655,262},
          {'case',
              {655,5},
              {var,{655,10},'Vs'},
              [{clause,
                   {656,9},
                   [{map,
                        {656,9},
                        [{map_field_exact,
                             {656,13},
                             {var,{656,11},'V1'},
                             {atom,{656,15},ref}},
                         {map_field_exact,
                             {656,21},
                             {var,{656,19},'V2'},
                             {atom,{656,23},message}}]}],
                   [],
                   [{debug_line,656,263},{atom,{656,35},true}]},
               {clause,
                   {657,9},
                   [{map,
                        {657,9},
                        [{map_field_exact,
                             {657,13},
                             {var,{657,11},'V1'},
                             {atom,{657,15},message}},
                         {map_field_exact,
                             {657,25},
                             {var,{657,23},'V2'},
                             {atom,{657,27},ref}}]}],
                   [],
                   [{debug_line,657,264},{atom,{657,35},true}]},
               {clause,
                   {658,9},
                   [{map,{658,9},[]}],
                   [],
                   [{debug_line,658,265},{atom,{658,16},false}]}]}]},
     {clause,
         {660,1},
         [{var,{660,26},'_'},{var,{660,29},'_'}],
         [],
         [{debug_line,661,266},{atom,{661,5},false}]}]}.
{function,
 {665,1},
 intersect_uses,3,
 [{clause,
   {665,1},
   [{var,{665,1},'_'},{var,{665,1},'_'},{var,{665,1},'_'}],
   [[{call,
      {665,1},
      {remote,{665,1},{atom,{665,1},fake},{atom,{665,1},is_beam_bif_info}},
      []}]],
   [{debug_line,665,267},{atom,{665,1},ignore}]},
  {clause,
   {665,1},
   [{var,{665,16},'UsageMap'},{var,{665,26},'RefMap'},{var,{665,34},'Graph'}],
   [],
   [{debug_line,666,268},
    {match,
     {666,5},
     {var,{666,5},'Roots'},
     {call,
      {666,13},
      {remote,{666,17},{atom,{666,13},maps},{atom,{666,18},fold}},
      [{block,0,
        [{'fun',
          {666,23},
          {clauses,
           [{clause,
             {666,26},
             [{var,{666,27},'FuncId'},
              {var,{666,35},'Uses'},
              {var,{666,41},'Acc'}],
             [],
             [{debug_line,670,269},
              {op,
               {670,64},
               '++',
               {lc,
                {667,31},
                {block,
                 {667,32},
                 [{debug_line,668,270},
                  {match,
                   {668,36},
                   {var,{668,36},'Vertex'},
                   {tuple,
                    {668,45},
                    [{var,{668,46},'FuncId'},{var,{668,54},'Lbl'}]}},
                  {debug_line,669,271},
                  {tuple,
                   {669,36},
                   [{var,{669,37},'Vertex'},{var,{669,45},'Ref'}]}]},
                [{block,0,[{atom,{670,58},true}]},
                 {generate_strict,
                  {670,54},
                  {tuple,
                   {670,39},
                   [{var,{670,40},'Lbl'},
                    {var,{670,45},'_I'},
                    {var,{670,49},'Ref'}]},
                  {var,{670,58},'Uses'}}]},
               {var,{670,67},'Acc'}}]}]}}]},
       {nil,{671,28}},
       {var,{671,32},'UsageMap'}]}},
    {debug_line,672,272},
    {call,
     {672,5},
     {atom,{672,5},intersect_uses_1},
     [{var,{672,22},'Roots'},
      {var,{672,29},'RefMap'},
      {var,{672,37},'Graph'},
      {block,0,[{map,{672,44},[]}]}]}]}]}.
{function,
 {674,1},
 intersect_uses_1,4,
 [{clause,
   {674,1},
   [{var,{674,1},'_'},{var,{674,1},'_'},{var,{674,1},'_'},{var,{674,1},'_'}],
   [[{call,
      {674,1},
      {remote,{674,1},{atom,{674,1},fake},{atom,{674,1},is_beam_bif_info}},
      []}]],
   [{debug_line,674,273},{atom,{674,1},ignore}]},
  {clause,
   {674,1},
   [{cons,
     {674,18},
     {tuple,{674,19},[{var,{674,20},'Vertex'},{var,{674,28},'Ref'}]},
     {var,{674,35},'Vs'}},
    {var,{674,40},'RefMap'},
    {var,{674,48},'Graph'},
    {var,{674,55},'Acc0'}],
   [],
   [{debug_line,675,274},
    {match,
     {675,5},
     {var,{675,5},'PossibleRefs'},
     {call,
      {675,20},
      {remote,{675,24},{atom,{675,20},maps},{atom,{675,25},get}},
      [{var,{675,29},'Vertex'},
       {var,{675,37},'RefMap'},
       {block,0,
        [{call,
          {675,45},
          {remote,{675,49},{atom,{675,45},sets},{atom,{675,50},new}},
          []}]}]}},
    {debug_line,676,275},
    {match,
     {676,5},
     {var,{676,5},'ActiveRefs0'},
     {call,
      {676,19},
      {remote,{676,23},{atom,{676,19},maps},{atom,{676,24},get}},
      [{var,{676,28},'Vertex'},
       {var,{676,36},'Acc0'},
       {block,0,
        [{call,
          {676,42},
          {remote,{676,46},{atom,{676,42},sets},{atom,{676,47},new}},
          []}]}]}},
    {debug_line,677,276},
    {match,
     {677,5},
     {var,{677,5},'Acc'},
     {'case',
      {677,11},
      {tuple,
       {677,16},
       [{call,
         {677,17},
         {remote,{677,21},{atom,{677,17},sets},{atom,{677,22},is_element}},
         [{var,{677,33},'Ref'},{var,{677,38},'PossibleRefs'}]},
        {call,
         {678,17},
         {remote,{678,21},{atom,{678,17},sets},{atom,{678,22},is_element}},
         [{var,{678,33},'Ref'},{var,{678,38},'ActiveRefs0'}]}]},
      [{clause,
        {679,15},
        [{tuple,{679,15},[{atom,{679,16},true},{atom,{679,22},false}]}],
        [],
        [{debug_line,682,277},
         {match,
          {682,19},
          {var,{682,19},'Edges'},
          {call,
           {682,27},
           {remote,
            {682,39},
            {atom,{682,27},beam_digraph},
            {atom,{682,40},in_edges}},
           [{var,{682,49},'Graph'},{var,{682,56},'Vertex'}]}},
         {debug_line,683,278},
         {match,
          {683,19},
          {var,{683,19},'Next'},
          {call,
           {683,26},
           {atom,{683,26},iu_predecessors},
           [{var,{683,42},'Edges'},{var,{683,49},'Ref'}]}},
         {debug_line,684,279},
         {match,
          {684,19},
          {var,{684,19},'ActiveRefs'},
          {call,
           {684,32},
           {remote,{684,36},{atom,{684,32},sets},{atom,{684,37},add_element}},
           [{var,{684,49},'Ref'},{var,{684,54},'ActiveRefs0'}]}},
         {debug_line,685,280},
         {call,
          {685,19},
          {atom,{685,19},intersect_uses_1},
          [{var,{685,36},'Next'},
           {var,{685,42},'RefMap'},
           {var,{685,50},'Graph'},
           {block,0,
            [{debug_line,686,281},
             {map,
              {686,40},
              {var,{686,36},'Acc0'},
              [{map_field_assoc,
                {686,50},
                {var,{686,43},'Vertex'},
                {var,{686,53},'ActiveRefs'}}]}]}]}]},
       {clause,
        {687,15},
        [{tuple,{687,15},[{atom,{687,16},false},{var,{687,23},'_'}]}],
        [],
        [{debug_line,690,282},{var,{690,19},'Acc0'}]},
       {clause,
        {691,15},
        [{tuple,{691,15},[{var,{691,16},'_'},{atom,{691,19},true}]}],
        [],
        [{debug_line,693,283},{var,{693,19},'Acc0'}]}]}},
    {debug_line,695,284},
    {call,
     {695,5},
     {atom,{695,5},intersect_uses_1},
     [{var,{695,22},'Vs'},
      {var,{695,26},'RefMap'},
      {var,{695,34},'Graph'},
      {var,{695,41},'Acc'}]}]},
  {clause,
   {696,1},
   [{nil,{696,18}},
    {var,{696,22},'_RefMap'},
    {var,{696,31},'_Graph'},
    {var,{696,39},'Acc'}],
   [],
   [{debug_line,697,285},{var,{697,5},'Acc'}]}]}.
{function,
    {699,1},
    iu_predecessors,2,
    [{clause,
         {699,1},
         [{var,{699,1},'_'},{var,{699,1},'_'}],
         [[{call,
               {699,1},
               {remote,
                   {699,1},
                   {atom,{699,1},fake},
                   {atom,{699,1},is_beam_bif_info}},
               []}]],
         [{debug_line,699,286},{atom,{699,1},ignore}]},
     {clause,
         {699,1},
         [{cons,
              {699,17},
              {tuple,
                  {699,18},
                  [{var,{699,19},'From'},
                   {var,{699,25},'_To'},
                   {atom,{699,30},branch}]},
              {var,{699,40},'Edges'}},
          {var,{699,48},'Ref'}],
         [],
         [{debug_line,700,287},
          {cons,
              {700,5},
              {tuple,{700,6},[{var,{700,7},'From'},{var,{700,13},'Ref'}]},
              {call,
                  {700,20},
                  {atom,{700,20},iu_predecessors},
                  [{var,{700,36},'Edges'},{var,{700,43},'Ref'}]}}]},
     {clause,
         {701,1},
         [{cons,
              {701,17},
              {tuple,
                  {701,18},
                  [{var,{701,19},'From'},
                   {var,{701,25},'_To'},
                   {tuple,
                       {701,30},
                       [{var,{701,31},'_Translation'},
                        {var,{701,45},'Inverse'},
                        {var,{701,54},'_Args'}]}]},
              {var,{701,64},'Edges'}},
          {var,{701,72},'Ref'}],
         [],
         [{debug_line,702,288},
          {'case',
              {702,5},
              {var,{702,10},'Inverse'},
              [{clause,
                   {703,9},
                   [{map,
                        {703,9},
                        [{map_field_exact,
                             {703,16},
                             {var,{703,12},'Ref'},
                             {match,
                                 {703,19},
                                 {tuple,
                                     {703,19},
                                     [{atom,{703,19},b_var},
                                      {var,{703,19},'_'}]},
                                 {var,{703,28},'Arg'}}}]}],
                   [],
                   [{debug_line,704,289},
                    {cons,
                        {704,13},
                        {tuple,
                            {704,14},
                            [{var,{704,15},'From'},{var,{704,21},'Arg'}]},
                        {call,
                            {704,28},
                            {atom,{704,28},iu_predecessors},
                            [{var,{704,44},'Edges'},{var,{704,51},'Ref'}]}}]},
               {clause,
                   {705,9},
                   [{map,
                        {705,9},
                        [{map_field_exact,
                             {705,16},
                             {var,{705,12},'Ref'},
                             {match,
                                 {705,19},
                                 {cons,
                                     {705,19},
                                     {var,{705,20},'_'},
                                     {var,{705,22},'_'}},
                                 {var,{705,25},'Rets'}}}]}],
                   [],
                   [{debug_line,706,290},
                    {op,{706,42},
                        '++',
                        {lc,{706,13},
                            {block,0,
                                [{tuple,
                                     {706,14},
                                     [{var,{706,15},'From'},
                                      {var,{706,21},'Ret'}]}]},
                            [{block,0,[{atom,{706,36},true}]},
                             {generate,
                                 {706,33},
                                 {var,{706,29},'Ret'},
                                 {var,{706,36},'Rets'}}]},
                        {call,
                            {706,45},
                            {atom,{706,45},iu_predecessors},
                            [{var,{706,61},'Edges'},{var,{706,68},'Ref'}]}}]},
               {clause,
                   {707,9},
                   [{map,{707,9},[]}],
                   [],
                   [{debug_line,711,291},
                    {call,
                        {711,13},
                        {atom,{711,13},iu_predecessors},
                        [{var,{711,29},'Edges'},{var,{711,36},'Ref'}]}]}]}]},
     {clause,
         {713,1},
         [{nil,{713,17}},{var,{713,21},'_Ref'}],
         [],
         [{debug_line,714,292},{nil,{714,5}}]}]}.
{function,
 {717,1},
 plan_markers,2,
 [{clause,
   {717,1},
   [{var,{717,1},'_'},{var,{717,1},'_'}],
   [[{call,
      {717,1},
      {remote,{717,1},{atom,{717,1},fake},{atom,{717,1},is_beam_bif_info}},
      []}]],
   [{debug_line,717,293},{atom,{717,1},ignore}]},
  {clause,
   {717,1},
   [{var,{717,14},'Candidates'},{var,{717,26},'UsageMap'}],
   [],
   [{debug_line,718,294},
    {call,
     {718,5},
     {remote,{718,9},{atom,{718,5},maps},{atom,{718,10},fold}},
     [{block,0,
       [{'fun',
         {718,15},
         {clauses,
          [{clause,
            {718,18},
            [{var,{718,19},'FuncId'},
             {var,{718,27},'MakeRefs'},
             {var,{718,37},'Acc'}],
            [],
            [{debug_line,719,295},
             {'case',
              {719,23},
              {call,
               {719,28},
               {atom,{719,28},plan_markers_1},
               [{var,{719,43},'MakeRefs'},
                {var,{719,53},'FuncId'},
                {var,{719,61},'UsageMap'}]},
              [{clause,
                {720,27},
                [{match,
                  {720,27},
                  {cons,{720,27},{var,{720,28},'_'},{var,{720,30},'_'}},
                  {var,{720,33},'Marks'}}],
                [],
                [{debug_line,720,296},
                 {map,
                  {720,45},
                  {var,{720,42},'Acc'},
                  [{map_field_assoc,
                    {720,55},
                    {var,{720,48},'FuncId'},
                    {var,{720,58},'Marks'}}]}]},
               {clause,
                {721,27},
                [{nil,{721,27}}],
                [],
                [{debug_line,721,297},{var,{721,33},'Acc'}]}]}]}]}}]},
      {block,0,[{debug_line,723,298},{map,{723,20},[]}]},
      {var,{723,25},'Candidates'}]}]}]}.
{function,
    {725,1},
    plan_markers_1,3,
    [{clause,
         {725,1},
         [{var,{725,1},'_'},{var,{725,1},'_'},{var,{725,1},'_'}],
         [[{call,
               {725,1},
               {remote,
                   {725,1},
                   {atom,{725,1},fake},
                   {atom,{725,1},is_beam_bif_info}},
               []}]],
         [{debug_line,725,299},{atom,{725,1},ignore}]},
     {clause,
         {725,1},
         [{var,{725,16},'MakeRefs0'},
          {var,{725,27},'FuncId'},
          {var,{725,35},'UsageMap'}],
         [],
         [{debug_line,726,300},
          {lc,{726,5},
              {block,0,[{var,{726,6},'Marker'}]},
              [{block,0,[{atom,{726,55},true}]},
               {generate_strict,
                   {726,51},
                   {match,
                       {726,16},
                       {tuple,
                           {726,16},
                           [{var,{726,17},'_'},
                            {var,{726,20},'_'},
                            {var,{726,23},'_'},
                            {var,{726,26},'ExtractedAt'},
                            {var,{726,39},'Ref'}]},
                       {var,{726,44},'Marker'}},
                   {var,{726,55},'MakeRefs0'}},
               {block,0,[{debug_line,727,303},{atom,{727,16},true}]},
               {'case',
                   {727,16},
                   {var,{727,21},'UsageMap'},
                   [{clause,
                        {728,20},
                        [{map,
                             {728,20},
                             [{map_field_exact,
                                  {728,45},
                                  {tuple,
                                      {728,23},
                                      [{var,{728,24},'FuncId'},
                                       {var,{728,32},'ExtractedAt'}]},
                                  {var,{728,48},'Refs'}}]}],
                        [],
                        [{debug_line,729,301},
                         {call,
                             {729,24},
                             {remote,
                                 {729,28},
                                 {atom,{729,24},sets},
                                 {atom,{729,29},is_element}},
                             [{var,{729,40},'Ref'},{var,{729,45},'Refs'}]}]},
                    {clause,
                        {730,20},
                        [{map,{730,20},[]}],
                        [],
                        [{debug_line,731,302},{atom,{731,24},false}]}]}]}]}]}.
{function,
 {734,1},
 plan_clears,2,
 [{clause,
   {734,1},
   [{var,{734,1},'_'},{var,{734,1},'_'}],
   [[{call,
      {734,1},
      {remote,{734,1},{atom,{734,1},fake},{atom,{734,1},is_beam_bif_info}},
      []}]],
   [{debug_line,734,304},{atom,{734,1},ignore}]},
  {clause,
   {734,1},
   [{var,{734,13},'UsageMap'},{var,{734,23},'Graph'}],
   [],
   [{debug_line,735,305},
    {call,
     {735,5},
     {remote,{735,9},{atom,{735,5},maps},{atom,{735,10},fold}},
     [{block,0,
       [{'fun',
         {735,15},
         {clauses,
          [{clause,
            {735,18},
            [{match,
              {735,19},
              {tuple,{735,19},[{var,{735,20},'FuncId'},{var,{735,28},'_'}]},
              {var,{735,31},'Vertex'}},
             {var,{735,39},'ActiveRefs'},
             {var,{735,51},'Acc'}],
            [],
            [{debug_line,736,306},
             {match,
              {736,23},
              {var,{736,23},'Edges'},
              {call,
               {736,31},
               {remote,
                {736,43},
                {atom,{736,31},beam_digraph},
                {atom,{736,44},out_edges}},
               [{var,{736,54},'Graph'},{var,{736,61},'Vertex'}]}},
             {debug_line,737,307},
             {'case',
              {737,23},
              {call,
               {737,28},
               {atom,{737,28},plan_clears_1},
               [{var,{737,42},'Edges'},
                {var,{737,49},'ActiveRefs'},
                {var,{737,61},'UsageMap'}]},
              [{clause,
                {738,27},
                [{match,
                  {738,27},
                  {cons,{738,27},{var,{738,28},'_'},{var,{738,30},'_'}},
                  {var,{738,33},'Clears'}}],
                [],
                [{debug_line,739,308},
                 {match,
                  {739,31},
                  {var,{739,31},'Clears0'},
                  {call,
                   {739,41},
                   {remote,{739,45},{atom,{739,41},maps},{atom,{739,46},get}},
                   [{var,{739,50},'FuncId'},
                    {var,{739,58},'Acc'},
                    {nil,{739,63}}]}},
                 {debug_line,740,309},
                 {map,
                  {740,34},
                  {var,{740,31},'Acc'},
                  [{map_field_assoc,
                    {740,44},
                    {var,{740,37},'FuncId'},
                    {op,
                     {740,54},
                     '++',
                     {var,{740,47},'Clears'},
                     {var,{740,57},'Clears0'}}}]}]},
               {clause,
                {741,27},
                [{nil,{741,27}}],
                [],
                [{debug_line,742,310},{var,{742,31},'Acc'}]}]}]}]}}]},
      {block,0,[{debug_line,744,311},{map,{744,20},[]}]},
      {block,0,
       [{call,
         {744,25},
         {remote,{744,29},{atom,{744,25},maps},{atom,{744,30},iterator}},
         [{var,{744,39},'UsageMap'},{atom,{744,49},ordered}]}]}]}]}]}.
{function,
    {746,1},
    plan_clears_1,3,
    [{clause,
         {746,1},
         [{var,{746,1},'_'},{var,{746,1},'_'},{var,{746,1},'_'}],
         [[{call,
               {746,1},
               {remote,
                   {746,1},
                   {atom,{746,1},fake},
                   {atom,{746,1},is_beam_bif_info}},
               []}]],
         [{debug_line,746,312},{atom,{746,1},ignore}]},
     {clause,
         {746,1},
         [{cons,
              {746,15},
              {tuple,
                  {746,16},
                  [{var,{746,17},'From'},
                   {var,{746,23},'To'},
                   {atom,{746,27},branch}]},
              {var,{746,37},'Edges'}},
          {var,{746,45},'ActiveRefs'},
          {var,{746,57},'UsageMap'}],
         [],
         [{debug_line,748,313},
          {match,
              {748,5},
              {var,{748,5},'ToRefs'},
              {call,
                  {748,14},
                  {remote,{748,18},{atom,{748,14},maps},{atom,{748,19},get}},
                  [{var,{748,23},'To'},
                   {var,{748,27},'UsageMap'},
                   {block,0,
                       [{call,
                            {748,37},
                            {remote,
                                {748,41},
                                {atom,{748,37},sets},
                                {atom,{748,42},new}},
                            []}]}]}},
          {debug_line,749,314},
          {match,
              {749,5},
              {var,{749,5},'Refs'},
              {call,
                  {749,12},
                  {remote,
                      {749,16},
                      {atom,{749,12},sets},
                      {atom,{749,17},subtract}},
                  [{var,{749,26},'ActiveRefs'},{var,{749,38},'ToRefs'}]}},
          {debug_line,751,315},
          {match,
              {751,5},
              {tuple,
                  {751,5},
                  [{var,{751,6},'FuncId'},{var,{751,14},'FromLbl'}]},
              {var,{751,25},'From'}},
          {debug_line,752,316},
          {match,
              {752,5},
              {tuple,{752,5},[{var,{752,6},'FuncId'},{var,{752,14},'ToLbl'}]},
              {var,{752,23},'To'}},
          {debug_line,754,317},
          {match,
              {754,5},
              {var,{754,5},'Clears'},
              {lc,{754,14},
                  {block,0,
                      [{tuple,
                           {754,15},
                           [{var,{754,16},'FromLbl'},
                            {var,{754,25},'ToLbl'},
                            {var,{754,32},'Ref'}]}]},
                  [{block,0,[{atom,{754,47},true}]},
                   {generate,
                       {754,44},
                       {var,{754,40},'Ref'},
                       {call,
                           {754,47},
                           {remote,
                               {754,51},
                               {atom,{754,47},sets},
                               {atom,{754,52},to_list}},
                           [{var,{754,60},'Refs'}]}}]}},
          {debug_line,755,318},
          {op,{755,12},
              '++',
              {var,{755,5},'Clears'},
              {call,
                  {755,15},
                  {atom,{755,15},plan_clears_1},
                  [{var,{755,29},'Edges'},
                   {var,{755,36},'ActiveRefs'},
                   {var,{755,48},'UsageMap'}]}}]},
     {clause,
         {756,1},
         [{cons,
              {756,15},
              {tuple,
                  {756,16},
                  [{var,{756,17},'_From'},
                   {var,{756,24},'_To'},
                   {tuple,
                       {756,29},
                       [{var,{756,30},'_'},
                        {var,{756,33},'_'},
                        {var,{756,36},'_'}]}]},
              {var,{756,42},'Edges'}},
          {var,{757,15},'ActiveRefs'},
          {var,{757,27},'UsageMap'}],
         [],
         [{debug_line,761,319},
          {call,
              {761,5},
              {atom,{761,5},plan_clears_1},
              [{var,{761,19},'Edges'},
               {var,{761,26},'ActiveRefs'},
               {var,{761,38},'UsageMap'}]}]},
     {clause,
         {762,1},
         [{nil,{762,15}},
          {var,{762,19},'_ActiveRefs'},
          {var,{762,32},'_UsageMap'}],
         [],
         [{debug_line,763,320},{nil,{763,5}}]}]}.
{function,
    {765,1},
    optimize,4,
    [{clause,
         {765,1},
         [{var,{765,1},'_'},
          {var,{765,1},'_'},
          {var,{765,1},'_'},
          {var,{765,1},'_'}],
         [[{call,
               {765,1},
               {remote,
                   {765,1},
                   {atom,{765,1},fake},
                   {atom,{765,1},is_beam_bif_info}},
               []}]],
         [{debug_line,765,321},{atom,{765,1},ignore}]},
     {clause,
         {765,1},
         [{match,
              {765,10},
              {tuple,
                  {765,10},
                  [{atom,{765,10},b_module},
                   {var,{765,10},'_'},
                   {var,{765,10},'_'},
                   {var,{765,10},'_'},
                   {var,{765,10},'_'},
                   {var,{765,25},'Fs0'}]},
              {var,{765,30},'Mod'}},
          {var,{765,35},'Markers'},
          {var,{765,44},'Uses'},
          {var,{765,50},'Clears'}],
         [],
         [{debug_line,766,322},
          {match,
              {766,5},
              {var,{766,5},'Fs'},
              {lc,{766,10},
                  {block,0,
                      [{call,
                           {766,11},
                           {atom,{766,11},optimize_1},
                           [{var,{766,22},'F'},
                            {var,{766,25},'Markers'},
                            {var,{766,34},'Uses'},
                            {var,{766,40},'Clears'}]}]},
                  [{block,0,[{atom,{766,56},true}]},
                   {generate,
                       {766,53},
                       {var,{766,51},'F'},
                       {var,{766,56},'Fs0'}}]}},
          {debug_line,767,323},
          {block,
              {767,5},
              [{match,{767,5},{var,{767,5},rec7},{var,{767,5},'Mod'}},
               {'case',
                   {767,18},
                   {var,{767,5},rec7},
                   [{clause,
                        {767,18},
                        [{tuple,
                             {767,18},
                             [{atom,{767,18},b_module},
                              {var,{767,18},'_'},
                              {var,{767,18},'_'},
                              {var,{767,18},'_'},
                              {var,{767,18},'_'},
                              {var,{767,18},'_'}]}],
                        [],
                        [{call,
                             {767,18},
                             {remote,
                                 {767,18},
                                 {atom,{767,18},erlang},
                                 {atom,{767,18},setelement}},
                             [{integer,{767,18},6},
                              {var,{767,5},rec7},
                              {var,{767,23},'Fs'}]}]},
                    {clause,
                        [{generated,true},{location,{767,18}}],
                        [{var,[{generated,true},{location,{767,18}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{767,18}}],
                             {remote,
                                 [{generated,true},{location,{767,18}}],
                                 {atom,
                                     [{generated,true},{location,{767,18}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{767,18}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{767,18}}],
                                  [{atom,
                                       [{generated,true},{location,{767,18}}],
                                       badrecord},
                                   {var,{767,5},rec7}]}]}]}]}]}]}]}.
{function,
    {769,1},
    optimize_1,4,
    [{clause,
         {769,1},
         [{var,{769,1},'_'},
          {var,{769,1},'_'},
          {var,{769,1},'_'},
          {var,{769,1},'_'}],
         [[{call,
               {769,1},
               {remote,
                   {769,1},
                   {atom,{769,1},fake},
                   {atom,{769,1},is_beam_bif_info}},
               []}]],
         [{debug_line,769,324},{atom,{769,1},ignore}]},
     {clause,
         {769,1},
         [{match,
              {769,12},
              {tuple,
                  {769,12},
                  [{atom,{769,12},b_function},
                   {var,{769,12},'_'},
                   {var,{769,12},'_'},
                   {var,{769,27},'Blocks0'},
                   {var,{769,39},'Count0'}]},
              {var,{769,47},'F'}},
          {var,{769,50},'Markers'},
          {var,{769,59},'Uses'},
          {var,{769,65},'Clears'}],
         [],
         [{debug_line,770,325},
          {match,
              {770,5},
              {var,{770,5},'FuncId'},
              {call,
                  {770,14},
                  {atom,{770,14},get_func_id},
                  [{var,{770,26},'F'}]}},
          {debug_line,772,326},
          {match,
              {772,5},
              {tuple,
                  {772,5},
                  [{var,{772,6},'Blocks1'},{var,{772,15},'Count1'}]},
              {call,
                  {772,25},
                  {atom,{772,25},insert_markers},
                  [{block,0,
                       [{call,
                            {772,40},
                            {remote,
                                {772,44},
                                {atom,{772,40},maps},
                                {atom,{772,45},get}},
                            [{var,{772,49},'FuncId'},
                             {var,{772,57},'Markers'},
                             {nil,{772,66}}]}]},
                   {var,{773,40},'Blocks0'},
                   {var,{773,49},'Count0'}]}},
          {debug_line,774,327},
          {match,
              {774,5},
              {tuple,
                  {774,5},
                  [{var,{774,6},'Blocks2'},{var,{774,15},'Count2'}]},
              {call,
                  {774,25},
                  {atom,{774,25},insert_uses},
                  [{block,0,
                       [{call,
                            {774,37},
                            {remote,
                                {774,41},
                                {atom,{774,37},maps},
                                {atom,{774,42},get}},
                            [{var,{774,46},'FuncId'},
                             {var,{774,54},'Uses'},
                             {nil,{774,60}}]}]},
                   {var,{775,37},'Blocks1'},
                   {var,{775,46},'Count1'}]}},
          {debug_line,776,328},
          {match,
              {776,5},
              {tuple,{776,5},[{var,{776,6},'Blocks'},{var,{776,14},'Count'}]},
              {call,
                  {776,23},
                  {atom,{776,23},insert_clears},
                  [{block,0,
                       [{call,
                            {776,37},
                            {remote,
                                {776,41},
                                {atom,{776,37},maps},
                                {atom,{776,42},get}},
                            [{var,{776,46},'FuncId'},
                             {var,{776,54},'Clears'},
                             {nil,{776,62}}]}]},
                   {var,{777,37},'Blocks2'},
                   {var,{777,46},'Count2'}]}},
          {debug_line,779,329},
          {block,
              {779,5},
              [{match,{779,5},{var,{779,5},rec8},{var,{779,5},'F'}},
               {'case',
                   {779,18},
                   {var,{779,5},rec8},
                   [{clause,
                        {779,18},
                        [{tuple,
                             {779,18},
                             [{atom,{779,18},b_function},
                              {var,{779,18},'_'},
                              {var,{779,18},'_'},
                              {var,{779,18},'_'},
                              {var,{779,18},'_'}]}],
                        [],
                        [{call,
                             {779,18},
                             {remote,
                                 {779,18},
                                 {atom,{779,18},erlang},
                                 {atom,{779,18},setelement}},
                             [{integer,{779,18},4},
                              {call,
                                  {779,28},
                                  {remote,
                                      {779,28},
                                      {atom,{779,28},erlang},
                                      {atom,{779,28},setelement}},
                                  [{integer,{779,28},5},
                                   {var,{779,5},rec8},
                                   {var,{779,32},'Count'}]},
                              {var,{779,21},'Blocks'}]}]},
                    {clause,
                        [{generated,true},{location,{779,18}}],
                        [{var,[{generated,true},{location,{779,18}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{779,18}}],
                             {remote,
                                 [{generated,true},{location,{779,18}}],
                                 {atom,
                                     [{generated,true},{location,{779,18}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{779,18}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{779,18}}],
                                  [{atom,
                                       [{generated,true},{location,{779,18}}],
                                       badrecord},
                                   {var,{779,5},rec8}]}]}]}]}]}]}]}.
{function,{781,1},
          insert_markers,3,
          [{clause,{781,1},
                   [{var,{781,1},'_'},{var,{781,1},'_'},{var,{781,1},'_'}],
                   [[{call,{781,1},
                           {remote,{781,1},
                                   {atom,{781,1},fake},
                                   {atom,{781,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,781,330},{atom,{781,1},ignore}]},
           {clause,{781,1},
                   [{cons,{781,16},
                          {tuple,{781,17},
                                 [{var,{781,18},'Anno'},
                                  {var,{781,24},'CreatedAt'},
                                  {var,{781,35},'Dst'},
                                  {var,{781,40},'ExtractedAt'},
                                  {var,{781,53},'Ref'}]},
                          {var,{781,60},'Markers'}},
                    {var,{782,16},'Blocks0'},
                    {var,{782,25},'Count0'}],
                   [],
                   [{debug_line,783,331},
                    {match,{783,5},
                           {tuple,{783,5},
                                  [{var,{783,6},'MarkerVar'},
                                   {var,{783,17},'Blocks1'},
                                   {var,{783,26},'Count1'}]},
                           {call,{784,9},
                                 {atom,{784,9},insert_reserve},
                                 [{var,{784,24},'CreatedAt'},
                                  {var,{784,35},'Dst'},
                                  {var,{784,40},'Anno'},
                                  {var,{784,46},'Blocks0'},
                                  {var,{784,55},'Count0'}]}},
                    {debug_line,785,332},
                    {match,{785,5},
                           {tuple,{785,5},
                                  [{var,{785,6},'Blocks'},
                                   {var,{785,14},'Count'}]},
                           {call,{786,9},
                                 {atom,{786,9},insert_bind},
                                 [{var,{786,21},'ExtractedAt'},
                                  {var,{786,34},'Ref'},
                                  {var,{786,39},'MarkerVar'},
                                  {var,{786,50},'Blocks1'},
                                  {var,{786,59},'Count1'}]}},
                    {debug_line,787,333},
                    {call,{787,5},
                          {atom,{787,5},insert_markers},
                          [{var,{787,20},'Markers'},
                           {var,{787,29},'Blocks'},
                           {var,{787,37},'Count'}]}]},
           {clause,{788,1},
                   [{nil,{788,16}},
                    {var,{788,20},'Blocks'},
                    {var,{788,28},'Count'}],
                   [],
                   [{debug_line,789,334},
                    {tuple,{789,5},
                           [{var,{789,6},'Blocks'},
                            {var,{789,14},'Count'}]}]}]}.
{function,
 {791,1},
 insert_reserve,5,
 [{clause,
   {791,1},
   [{var,{791,1},'_'},
    {var,{791,1},'_'},
    {var,{791,1},'_'},
    {var,{791,1},'_'},
    {var,{791,1},'_'}],
   [[{call,
      {791,1},
      {remote,{791,1},{atom,{791,1},fake},{atom,{791,1},is_beam_bif_info}},
      []}]],
   [{debug_line,791,335},{atom,{791,1},ignore}]},
  {clause,
   {791,1},
   [{var,{791,16},'Lbl'},
    {var,{791,21},'Dst'},
    {var,{791,26},'Anno'},
    {var,{791,32},'Blocks0'},
    {var,{791,41},'Count0'}],
   [],
   [{debug_line,792,336},
    {match,
     {792,5},
     {map,
      {792,5},
      [{map_field_exact,
        {792,12},
        {var,{792,8},'Lbl'},
        {match,
         {792,15},
         {tuple,
          {792,15},
          [{atom,{792,15},b_blk},
           {var,{792,15},'_'},
           {var,{792,25},'Is0'},
           {var,{792,15},'_'}]},
         {var,{792,30},'Blk'}}}]},
     {var,{792,38},'Blocks0'}},
    {debug_line,794,337},
    {match,
     {794,5},
     {var,{794,5},'Var'},
     {tuple,{794,11},[{atom,{794,11},b_var},{var,{794,23},'Count0'}]}},
    {debug_line,795,338},
    {match,
     {795,5},
     {var,{795,5},'Count'},
     {op,{795,20},'+',{var,{795,13},'Count0'},{integer,{795,22},1}}},
    {debug_line,797,339},
    {match,
     {797,5},
     {var,{797,5},'Reserve'},
     {tuple,
      {797,15},
      [{atom,{797,15},b_set},
       {var,{797,27},'Anno'},
       {var,{797,67},'Var'},
       {atom,{797,35},recv_marker_reserve},
       {nil,{797,60}}]}},
    {debug_line,799,340},
    {match,
     {799,5},
     {var,{799,5},'Is'},
     {call,
      {799,10},
      {atom,{799,10},insert_reserve_is},
      [{var,{799,28},'Is0'},{var,{799,33},'Reserve'},{var,{799,42},'Dst'}]}},
    {debug_line,800,341},
    {match,
     {800,5},
     {var,{800,5},'Blocks'},
     {map,
      {800,21},
      {var,{800,14},'Blocks0'},
      [{map_field_exact,
        {800,28},
        {var,{800,24},'Lbl'},
        {block,
         {800,31},
         [{match,{800,31},{var,{800,31},rec9},{var,{800,31},'Blk'}},
          {'case',
           {800,41},
           {var,{800,31},rec9},
           [{clause,
             {800,41},
             [{tuple,
               {800,41},
               [{atom,{800,41},b_blk},
                {var,{800,41},'_'},
                {var,{800,41},'_'},
                {var,{800,41},'_'}]}],
             [],
             [{call,
               {800,41},
               {remote,
                {800,41},
                {atom,{800,41},erlang},
                {atom,{800,41},setelement}},
               [{integer,{800,41},3},
                {var,{800,31},rec9},
                {var,{800,44},'Is'}]}]},
            {clause,
             [{generated,true},{location,{800,41}}],
             [{var,[{generated,true},{location,{800,41}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{800,41}}],
               {remote,
                [{generated,true},{location,{800,41}}],
                {atom,[{generated,true},{location,{800,41}}],erlang},
                {atom,[{generated,true},{location,{800,41}}],error}},
               [{tuple,
                 [{generated,true},{location,{800,41}}],
                 [{atom,[{generated,true},{location,{800,41}}],badrecord},
                  {var,{800,31},rec9}]}]}]}]}]}}]}},
    {debug_line,802,342},
    {tuple,
     {802,5},
     [{var,{802,6},'Var'},{var,{802,11},'Blocks'},{var,{802,19},'Count'}]}]}]}.
{function,
    {804,1},
    insert_reserve_is,3,
    [{clause,
         {804,1},
         [{var,{804,1},'_'},{var,{804,1},'_'},{var,{804,1},'_'}],
         [[{call,
               {804,1},
               {remote,
                   {804,1},
                   {atom,{804,1},fake},
                   {atom,{804,1},is_beam_bif_info}},
               []}]],
         [{debug_line,804,343},{atom,{804,1},ignore}]},
     {clause,
         {804,1},
         [{match,
              {804,19},
              {cons,
                  {804,19},
                  {tuple,
                      {804,20},
                      [{atom,{804,20},b_set},
                       {var,{804,20},'_'},
                       {var,{804,31},'Var'},
                       {var,{804,20},'_'},
                       {var,{804,20},'_'}]},
                  {var,{804,38},'_'}},
              {var,{804,41},'Is'}},
          {var,{804,45},'Reserve'},
          {var,{804,54},'Var'}],
         [],
         [{debug_line,805,344},
          {cons,{805,5},{var,{805,6},'Reserve'},{var,{805,16},'Is'}}]},
     {clause,
         {806,1},
         [{cons,{806,19},{var,{806,20},'I'},{var,{806,24},'Is'}},
          {var,{806,29},'Reserve'},
          {var,{806,38},'Var'}],
         [],
         [{debug_line,807,345},
          {cons,
              {807,5},
              {var,{807,6},'I'},
              {call,
                  {807,10},
                  {atom,{807,10},insert_reserve_is},
                  [{var,{807,28},'Is'},
                   {var,{807,32},'Reserve'},
                   {var,{807,41},'Var'}]}}]}]}.
{function,
 {809,1},
 insert_bind,5,
 [{clause,
   {809,1},
   [{var,{809,1},'_'},
    {var,{809,1},'_'},
    {var,{809,1},'_'},
    {var,{809,1},'_'},
    {var,{809,1},'_'}],
   [[{call,
      {809,1},
      {remote,{809,1},{atom,{809,1},fake},{atom,{809,1},is_beam_bif_info}},
      []}]],
   [{debug_line,809,346},{atom,{809,1},ignore}]},
  {clause,
   {809,1},
   [{var,{809,13},'Lbl'},
    {var,{809,18},'Ref'},
    {var,{809,23},'Marker'},
    {var,{809,31},'Blocks0'},
    {var,{809,40},'Count0'}],
   [],
   [{debug_line,810,347},
    {match,
     {810,5},
     {map,
      {810,5},
      [{map_field_exact,
        {810,12},
        {var,{810,8},'Lbl'},
        {match,
         {810,15},
         {tuple,
          {810,15},
          [{atom,{810,15},b_blk},
           {var,{810,15},'_'},
           {var,{810,25},'Is0'},
           {var,{810,34},'Last'}]},
         {var,{810,40},'Blk'}}}]},
     {var,{810,48},'Blocks0'}},
    {debug_line,812,348},
    {match,
     {812,5},
     {var,{812,5},'Ignored'},
     {tuple,{812,15},[{atom,{812,15},b_var},{var,{812,27},'Count0'}]}},
    {debug_line,813,349},
    {match,
     {813,5},
     {var,{813,5},'Count'},
     {op,{813,20},'+',{var,{813,13},'Count0'},{integer,{813,22},1}}},
    {debug_line,815,350},
    {match,
     {815,5},
     {var,{815,5},'Bind'},
     {tuple,
      {815,12},
      [{atom,{815,12},b_set},
       {map,{815,12},[]},
       {var,{817,24},'Ignored'},
       {atom,{815,23},recv_marker_bind},
       {cons,
        {816,25},
        {var,{816,26},'Marker'},
        {cons,{816,33},{var,{816,33},'Ref'},{nil,{816,36}}}}]}},
    {debug_line,819,351},
    {match,
     {819,5},
     {var,{819,5},'Is'},
     {call,
      {819,10},
      {atom,{819,10},insert_bind_is},
      [{var,{819,25},'Is0'},{var,{819,30},'Bind'},{var,{819,36},'Last'}]}},
    {debug_line,820,352},
    {match,
     {820,5},
     {var,{820,5},'Blocks'},
     {map,
      {820,21},
      {var,{820,14},'Blocks0'},
      [{map_field_exact,
        {820,28},
        {var,{820,24},'Lbl'},
        {block,
         {820,31},
         [{match,{820,31},{var,{820,31},rec10},{var,{820,31},'Blk'}},
          {'case',
           {820,41},
           {var,{820,31},rec10},
           [{clause,
             {820,41},
             [{tuple,
               {820,41},
               [{atom,{820,41},b_blk},
                {var,{820,41},'_'},
                {var,{820,41},'_'},
                {var,{820,41},'_'}]}],
             [],
             [{call,
               {820,41},
               {remote,
                {820,41},
                {atom,{820,41},erlang},
                {atom,{820,41},setelement}},
               [{integer,{820,41},3},
                {var,{820,31},rec10},
                {var,{820,44},'Is'}]}]},
            {clause,
             [{generated,true},{location,{820,41}}],
             [{var,[{generated,true},{location,{820,41}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{820,41}}],
               {remote,
                [{generated,true},{location,{820,41}}],
                {atom,[{generated,true},{location,{820,41}}],erlang},
                {atom,[{generated,true},{location,{820,41}}],error}},
               [{tuple,
                 [{generated,true},{location,{820,41}}],
                 [{atom,[{generated,true},{location,{820,41}}],badrecord},
                  {var,{820,31},rec10}]}]}]}]}]}}]}},
    {debug_line,822,353},
    {tuple,{822,5},[{var,{822,6},'Blocks'},{var,{822,14},'Count'}]}]}]}.
{function,
    {824,1},
    insert_bind_is,3,
    [{clause,
         {824,1},
         [{var,{824,1},'_'},{var,{824,1},'_'},{var,{824,1},'_'}],
         [[{call,
               {824,1},
               {remote,
                   {824,1},
                   {atom,{824,1},fake},
                   {atom,{824,1},is_beam_bif_info}},
               []}]],
         [{debug_line,824,354},{atom,{824,1},ignore}]},
     {clause,
         {824,1},
         [{match,
              {824,16},
              {cons,
                  {824,16},
                  {tuple,
                      {824,17},
                      [{atom,{824,17},b_set},
                       {var,{824,17},'_'},
                       {var,{824,17},'_'},
                       {var,{824,17},'_'},
                       {var,{824,17},'_'}]},
                  {cons,
                      {824,27},
                      {tuple,
                          {824,27},
                          [{atom,{824,27},b_set},
                           {var,{824,27},'_'},
                           {var,{824,27},'_'},
                           {tuple,
                               {824,37},
                               [{atom,{824,38},succeeded},{var,{824,48},'_'}]},
                           {var,{824,27},'_'}]},
                      {nil,{824,51}}}},
              {var,{824,53},'Is'}},
          {var,{824,57},'Bind'},
          {var,{824,63},'_Last'}],
         [],
         [{debug_line,825,355},
          {cons,{825,5},{var,{825,6},'Bind'},{var,{825,13},'Is'}}]},
     {clause,
         {826,1},
         [{match,
              {826,16},
              {cons,
                  {826,16},
                  {tuple,
                      {826,17},
                      [{atom,{826,17},b_set},
                       {var,{826,17},'_'},
                       {var,{826,36},'Ret'},
                       {atom,{826,27},call},
                       {var,{826,17},'_'}]},
                  {nil,{826,40}}},
              {var,{826,42},'Is'}},
          {var,{826,46},'Bind'},
          {tuple,
              {826,52},
              [{atom,{826,52},b_ret},
               {var,{826,52},'_'},
               {var,{826,63},'Ret'}]}],
         [],
         [{debug_line,827,356},
          {cons,{827,5},{var,{827,6},'Bind'},{var,{827,13},'Is'}}]},
     {clause,
         {828,1},
         [{match,
              {828,16},
              {cons,
                  {828,16},
                  {tuple,
                      {828,17},
                      [{atom,{828,17},b_set},
                       {var,{828,17},'_'},
                       {var,{828,17},'_'},
                       {atom,{828,27},new_try_tag},
                       {var,{828,17},'_'}]},
                  {nil,{828,39}}},
              {var,{828,41},'Is'}},
          {var,{828,45},'Bind'},
          {var,{828,51},'_Last'}],
         [],
         [{debug_line,829,357},
          {cons,{829,5},{var,{829,6},'Bind'},{var,{829,13},'Is'}}]},
     {clause,
         {830,1},
         [{cons,
              {830,16},
              {match,
                  {830,17},
                  {tuple,
                      {830,17},
                      [{atom,{830,17},b_set},
                       {var,{830,17},'_'},
                       {var,{830,17},'_'},
                       {var,{830,27},'Op'},
                       {var,{830,17},'_'}]},
                  {var,{830,31},'I'}},
              {var,{830,35},'Is'}},
          {var,{830,40},'Bind'},
          {var,{830,46},'Last'}],
         [],
         [{debug_line,831,358},
          {match,
              {831,5},
              {atom,{831,5},true},
              {op,{831,15},'=/=',{var,{831,12},'Op'},{atom,{831,19},bs_put}}},
          {debug_line,832,359},
          {cons,
              {832,5},
              {var,{832,6},'I'},
              {call,
                  {832,10},
                  {atom,{832,10},insert_bind_is},
                  [{var,{832,25},'Is'},
                   {var,{832,29},'Bind'},
                   {var,{832,35},'Last'}]}}]},
     {clause,
         {833,1},
         [{nil,{833,16}},{var,{833,20},'Bind'},{var,{833,26},'_Last'}],
         [],
         [{debug_line,834,360},
          {cons,{834,5},{var,{834,6},'Bind'},{nil,{834,10}}}]}]}.
{function,
 {836,1},
 insert_uses,3,
 [{clause,
   {836,1},
   [{var,{836,1},'_'},{var,{836,1},'_'},{var,{836,1},'_'}],
   [[{call,
      {836,1},
      {remote,{836,1},{atom,{836,1},fake},{atom,{836,1},is_beam_bif_info}},
      []}]],
   [{debug_line,836,361},{atom,{836,1},ignore}]},
  {clause,
   {836,1},
   [{cons,
     {836,13},
     {tuple,
      {836,14},
      [{var,{836,15},'_Lbl'},
       {tuple,
        {836,21},
        [{atom,{836,21},b_set},
         {var,{836,21},'_'},
         {var,{836,21},'_'},
         {atom,{836,31},call},
         {var,{836,21},'_'}]},
       {var,{836,38},'_Ref'}]},
     {var,{836,46},'Uses'}},
    {var,{836,53},'Blocks'},
    {var,{836,61},'Count'}],
   [],
   [{debug_line,839,362},
    {call,
     {839,5},
     {atom,{839,5},insert_uses},
     [{var,{839,17},'Uses'},{var,{839,23},'Blocks'},{var,{839,31},'Count'}]}]},
  {clause,
   {840,1},
   [{cons,
     {840,13},
     {tuple,
      {840,14},
      [{var,{840,15},'Lbl'},
       {match,
        {840,20},
        {tuple,
         {840,20},
         [{atom,{840,20},b_set},
          {var,{840,20},'_'},
          {var,{840,20},'_'},
          {atom,{840,30},peek_message},
          {var,{840,20},'_'}]},
        {var,{840,44},'Peek0'}},
       {var,{840,51},'Ref'}]},
     {var,{840,58},'Uses'}},
    {var,{841,13},'Blocks0'},
    {var,{841,22},'Count'}],
   [],
   [{debug_line,842,363},
    {match,
     {842,5},
     {map,
      {842,5},
      [{map_field_exact,
        {842,12},
        {var,{842,8},'Lbl'},
        {match,
         {842,15},
         {tuple,
          {842,15},
          [{atom,{842,15},b_blk},
           {var,{842,15},'_'},
           {var,{842,25},'Is0'},
           {var,{842,15},'_'}]},
         {var,{842,30},'Blk'}}}]},
     {var,{842,38},'Blocks0'}},
    {debug_line,844,364},
    {match,
     {844,5},
     {cons,{844,5},{var,{844,6},'Peek0'},{var,{844,14},'Is'}},
     {var,{844,20},'Is0'}},
    {debug_line,845,365},
    {match,
     {845,5},
     {var,{845,5},'Peek'},
     {block,
      {845,12},
      [{match,
        {845,24},
        {var,{845,24},rec11},
        {cons,{845,29},{var,{845,30},'Ref'},{nil,{845,33}}}},
       {match,{845,12},{var,{845,12},rec12},{var,{845,12},'Peek0'}},
       {'case',
        {845,24},
        {var,{845,12},rec12},
        [{clause,
          {845,24},
          [{tuple,
            {845,24},
            [{atom,{845,24},b_set},
             {var,{845,24},'_'},
             {var,{845,24},'_'},
             {var,{845,24},'_'},
             {var,{845,24},'_'}]}],
          [],
          [{call,
            {845,24},
            {remote,
             {845,24},
             {atom,{845,24},erlang},
             {atom,{845,24},setelement}},
            [{integer,{845,24},5},
             {var,{845,12},rec12},
             {var,{845,24},rec11}]}]},
         {clause,
          [{generated,true},{location,{845,24}}],
          [{var,[{generated,true},{location,{845,24}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{845,24}}],
            {remote,
             [{generated,true},{location,{845,24}}],
             {atom,[{generated,true},{location,{845,24}}],erlang},
             {atom,[{generated,true},{location,{845,24}}],error}},
            [{tuple,
              [{generated,true},{location,{845,24}}],
              [{atom,[{generated,true},{location,{845,24}}],badrecord},
               {var,{845,12},rec12}]}]}]}]}]}},
    {debug_line,847,366},
    {match,
     {847,5},
     {var,{847,5},'Blocks'},
     {map,
      {847,21},
      {var,{847,14},'Blocks0'},
      [{map_field_exact,
        {847,28},
        {var,{847,24},'Lbl'},
        {block,
         {847,31},
         [{match,
           {847,41},
           {var,{847,41},rec13},
           {cons,{847,44},{var,{847,45},'Peek'},{var,{847,52},'Is'}}},
          {match,{847,31},{var,{847,31},rec14},{var,{847,31},'Blk'}},
          {'case',
           {847,41},
           {var,{847,31},rec14},
           [{clause,
             {847,41},
             [{tuple,
               {847,41},
               [{atom,{847,41},b_blk},
                {var,{847,41},'_'},
                {var,{847,41},'_'},
                {var,{847,41},'_'}]}],
             [],
             [{call,
               {847,41},
               {remote,
                {847,41},
                {atom,{847,41},erlang},
                {atom,{847,41},setelement}},
               [{integer,{847,41},3},
                {var,{847,31},rec14},
                {var,{847,41},rec13}]}]},
            {clause,
             [{generated,true},{location,{847,41}}],
             [{var,[{generated,true},{location,{847,41}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{847,41}}],
               {remote,
                [{generated,true},{location,{847,41}}],
                {atom,[{generated,true},{location,{847,41}}],erlang},
                {atom,[{generated,true},{location,{847,41}}],error}},
               [{tuple,
                 [{generated,true},{location,{847,41}}],
                 [{atom,[{generated,true},{location,{847,41}}],badrecord},
                  {var,{847,31},rec14}]}]}]}]}]}}]}},
    {debug_line,848,367},
    {call,
     {848,5},
     {atom,{848,5},insert_uses},
     [{var,{848,17},'Uses'},{var,{848,23},'Blocks'},{var,{848,31},'Count'}]}]},
  {clause,
   {849,1},
   [{nil,{849,13}},{var,{849,17},'Blocks'},{var,{849,25},'Count'}],
   [],
   [{debug_line,850,368},
    {tuple,{850,5},[{var,{850,6},'Blocks'},{var,{850,14},'Count'}]}]}]}.
{function,{852,1},
          insert_clears,3,
          [{clause,{852,1},
                   [{var,{852,1},'_'},{var,{852,1},'_'},{var,{852,1},'_'}],
                   [[{call,{852,1},
                           {remote,{852,1},
                                   {atom,{852,1},fake},
                                   {atom,{852,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,852,369},{atom,{852,1},ignore}]},
           {clause,{852,1},
                   [{var,{852,15},'Clears0'},
                    {var,{852,24},'Blocks0'},
                    {var,{852,33},'Count0'}],
                   [],
                   [{debug_line,853,370},
                    {match,{853,5},
                           {tuple,{853,5},
                                  [{var,{853,6},'Insertions'},
                                   {var,{853,18},'Count'}]},
                           {call,{853,27},
                                 {atom,{853,27},insert_clears_1},
                                 [{var,{853,43},'Clears0'},
                                  {var,{853,52},'Count0'},
                                  {nil,{853,60}}]}},
                    {debug_line,854,371},
                    {call,{854,5},
                          {remote,{854,13},
                                  {atom,{854,5},beam_ssa},
                                  {atom,{854,14},insert_on_edges}},
                          [{var,{854,30},'Insertions'},
                           {var,{854,42},'Blocks0'},
                           {var,{854,51},'Count'}]}]}]}.
{function,
    {856,1},
    insert_clears_1,3,
    [{clause,
         {856,1},
         [{var,{856,1},'_'},{var,{856,1},'_'},{var,{856,1},'_'}],
         [[{call,
               {856,1},
               {remote,
                   {856,1},
                   {atom,{856,1},fake},
                   {atom,{856,1},is_beam_bif_info}},
               []}]],
         [{debug_line,856,372},{atom,{856,1},ignore}]},
     {clause,
         {856,1},
         [{cons,
              {856,17},
              {tuple,
                  {856,18},
                  [{var,{856,19},'From'},
                   {var,{856,25},'To'},
                   {var,{856,29},'Ref'}]},
              {var,{856,36},'Clears'}},
          {var,{856,45},'Count0'},
          {var,{856,53},'Acc'}],
         [],
         [{debug_line,857,373},
          {match,
              {857,5},
              {var,{857,5},'Ignored'},
              {tuple,
                  {857,15},
                  [{atom,{857,15},b_var},{var,{857,27},'Count0'}]}},
          {debug_line,858,374},
          {match,
              {858,5},
              {var,{858,5},'Count'},
              {op,{858,20},'+',{var,{858,13},'Count0'},{integer,{858,22},1}}},
          {debug_line,860,375},
          {match,
              {860,5},
              {var,{860,5},'Clear'},
              {tuple,
                  {860,13},
                  [{atom,{860,13},b_set},
                   {map,{860,13},[]},
                   {var,{860,56},'Ignored'},
                   {atom,{860,23},recv_marker_clear},
                   {cons,{860,46},{var,{860,47},'Ref'},{nil,{860,50}}}]}},
          {debug_line,861,376},
          {call,
              {861,5},
              {atom,{861,5},insert_clears_1},
              [{var,{861,21},'Clears'},
               {var,{861,29},'Count'},
               {block,0,
                   [{cons,
                        {861,36},
                        {tuple,
                            {861,37},
                            [{var,{861,38},'From'},
                             {var,{861,44},'To'},
                             {cons,
                                 {861,48},
                                 {var,{861,49},'Clear'},
                                 {nil,{861,54}}}]},
                        {var,{861,59},'Acc'}}]}]}]},
     {clause,
         {862,1},
         [{nil,{862,17}},{var,{862,21},'Count'},{var,{862,28},'Acc'}],
         [],
         [{debug_line,863,377},
          {tuple,{863,5},[{var,{863,6},'Acc'},{var,{863,11},'Count'}]}]}]}.
{function,{869,1},
          collect_opt_info,1,
          [{clause,{869,1},
                   [{var,{869,1},'_'}],
                   [[{call,{869,1},
                           {remote,{869,1},
                                   {atom,{869,1},fake},
                                   {atom,{869,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,869,378},{atom,{869,1},ignore}]},
           {clause,{869,1},
                   [{tuple,{869,18},
                           [{atom,{869,18},b_module},
                            {var,{869,18},'_'},
                            {var,{869,18},'_'},
                            {var,{869,18},'_'},
                            {var,{869,18},'_'},
                            {var,{869,33},'Fs'}]}],
                   [],
                   [{debug_line,870,379},
                    {call,{870,5},
                          {atom,{870,5},coi_1},
                          [{var,{870,11},'Fs'},{nil,{870,15}}]}]}]}.
{function,
 {872,1},
 coi_1,2,
 [{clause,
   {872,1},
   [{var,{872,1},'_'},{var,{872,1},'_'}],
   [[{call,
      {872,1},
      {remote,{872,1},{atom,{872,1},fake},{atom,{872,1},is_beam_bif_info}},
      []}]],
   [{debug_line,872,380},{atom,{872,1},ignore}]},
  {clause,
   {872,1},
   [{cons,
     {872,7},
     {match,
      {872,8},
      {tuple,
       {872,8},
       [{atom,{872,8},b_function},
        {var,{872,8},'_'},
        {var,{872,25},'Args'},
        {var,{872,33},'Blocks'},
        {var,{872,8},'_'}]},
      {var,{872,41},'F'}},
     {var,{872,45},'Fs'}},
    {var,{872,50},'Acc0'}],
   [],
   [{debug_line,873,381},
    {match,
     {873,5},
     {var,{873,5},'Lbls'},
     {call,
      {873,12},
      {remote,{873,20},{atom,{873,12},beam_ssa},{atom,{873,21},rpo}},
      [{var,{873,25},'Blocks'}]}},
    {debug_line,874,382},
    {match,
     {874,5},
     {var,{874,5},'Where'},
     {call,
      {874,13},
      {remote,{874,21},{atom,{874,13},beam_ssa},{atom,{874,22},get_anno}},
      [{atom,{874,31},location},{var,{874,41},'F'},{nil,{874,44}}]}},
    {debug_line,875,383},
    {match,
     {875,5},
     {tuple,{875,5},[{var,{875,6},'Defs'},{var,{875,12},'_'}]},
     {call,
      {875,17},
      {remote,{875,17},{atom,{875,17},lists},{atom,{875,17},foldl}},
      [{block,0,
        [{'fun',
          {875,23},
          {clauses,
           [{clause,
             {875,26},
             [{var,{875,27},'Var'},
              {tuple,
               {875,32},
               [{var,{875,33},'Defs0'},{var,{875,40},'Index0'}]}],
             [],
             [{debug_line,876,384},
              {match,
               {876,31},
               {var,{876,31},'Defs'},
               {map,
                {876,43},
                {var,{876,38},'Defs0'},
                [{map_field_assoc,
                  {876,50},
                  {var,{876,46},'Var'},
                  {tuple,
                   {876,53},
                   [{atom,{876,54},parameter},{var,{876,65},'Index0'}]}}]}},
              {debug_line,877,385},
              {match,
               {877,31},
               {var,{877,31},'Index'},
               {op,{877,46},'+',{var,{877,39},'Index0'},{integer,{877,48},1}}},
              {debug_line,878,386},
              {tuple,
               {878,31},
               [{var,{878,32},'Defs'},{var,{878,38},'Index'}]}]}]}}]},
       {block,0,
        [{debug_line,879,387},
         {tuple,{879,28},[{map,{879,29},[]},{integer,{879,34},1}]}]},
       {var,{879,38},'Args'}]}},
    {debug_line,880,388},
    {match,
     {880,5},
     {var,{880,5},'Acc'},
     {call,
      {880,11},
      {atom,{880,11},coi_bs},
      [{var,{880,18},'Lbls'},
       {var,{880,24},'Blocks'},
       {var,{880,32},'Where'},
       {var,{880,39},'Defs'},
       {var,{880,45},'Acc0'}]}},
    {debug_line,881,389},
    {call,
     {881,5},
     {atom,{881,5},coi_1},
     [{var,{881,11},'Fs'},{var,{881,15},'Acc'}]}]},
  {clause,
   {882,1},
   [{nil,{882,7}},{var,{882,11},'Acc'}],
   [],
   [{debug_line,883,390},{var,{883,5},'Acc'}]}]}.
{function,
    {885,1},
    coi_bs,5,
    [{clause,
         {885,1},
         [{var,{885,1},'_'},
          {var,{885,1},'_'},
          {var,{885,1},'_'},
          {var,{885,1},'_'},
          {var,{885,1},'_'}],
         [[{call,
               {885,1},
               {remote,
                   {885,1},
                   {atom,{885,1},fake},
                   {atom,{885,1},is_beam_bif_info}},
               []}]],
         [{debug_line,885,391},{atom,{885,1},ignore}]},
     {clause,
         {885,1},
         [{cons,{885,8},{var,{885,9},'Lbl'},{var,{885,15},'Lbls'}},
          {var,{885,22},'Blocks'},
          {var,{885,30},'Where'},
          {var,{885,37},'Defs0'},
          {var,{885,44},'Ws0'}],
         [],
         [{debug_line,886,392},
          {match,
              {886,5},
              {map,
                  {886,5},
                  [{map_field_exact,
                       {886,12},
                       {var,{886,8},'Lbl'},
                       {tuple,
                           {886,15},
                           [{atom,{886,15},b_blk},
                            {var,{886,15},'_'},
                            {var,{886,25},'Is'},
                            {var,{886,33},'Last'}]}}]},
              {var,{886,43},'Blocks'}},
          {debug_line,887,393},
          {match,
              {887,5},
              {tuple,{887,5},[{var,{887,6},'Defs'},{var,{887,12},'Ws'}]},
              {call,
                  {887,18},
                  {atom,{887,18},coi_is},
                  [{var,{887,25},'Is'},
                   {var,{887,29},'Last'},
                   {var,{887,35},'Blocks'},
                   {var,{887,43},'Where'},
                   {var,{887,50},'Defs0'},
                   {var,{887,57},'Ws0'}]}},
          {debug_line,888,394},
          {call,
              {888,5},
              {atom,{888,5},coi_bs},
              [{var,{888,12},'Lbls'},
               {var,{888,18},'Blocks'},
               {var,{888,26},'Where'},
               {var,{888,33},'Defs'},
               {var,{888,39},'Ws'}]}]},
     {clause,
         {889,1},
         [{nil,{889,8}},
          {var,{889,12},'_Blocks'},
          {var,{889,21},'_Where'},
          {var,{889,29},'_Defs'},
          {var,{889,36},'Ws'}],
         [],
         [{debug_line,890,395},{var,{890,5},'Ws'}]}]}.
{function,
 {892,1},
 coi_is,6,
 [{clause,
   {892,1},
   [{var,{892,1},'_'},
    {var,{892,1},'_'},
    {var,{892,1},'_'},
    {var,{892,1},'_'},
    {var,{892,1},'_'},
    {var,{892,1},'_'}],
   [[{call,
      {892,1},
      {remote,{892,1},{atom,{892,1},fake},{atom,{892,1},is_beam_bif_info}},
      []}]],
   [{debug_line,892,396},{atom,{892,1},ignore}]},
  {clause,
   {892,1},
   [{cons,
     {892,8},
     {tuple,
      {892,9},
      [{atom,{892,9},b_set},
       {var,{892,21},'Anno'},
       {var,{892,9},'_'},
       {atom,{892,29},peek_message},
       {match,
        {892,47},
        {cons,
         {892,47},
         {tuple,{892,48},[{atom,{892,48},b_var},{var,{892,48},'_'}]},
         {nil,{892,56}}},
        {var,{892,58},'Args'}}]},
     {var,{892,67},'Is'}},
    {var,{893,8},'Last'},
    {var,{893,14},'Blocks'},
    {var,{893,22},'Where'},
    {var,{893,29},'Defs'},
    {var,{893,35},'Ws'}],
   [],
   [{debug_line,894,397},
    {match,
     {894,5},
     {cons,{894,5},{var,{894,6},'Creation'},{nil,{894,14}}},
     {call,
      {894,18},
      {atom,{894,18},coi_creations},
      [{var,{894,32},'Args'},{var,{894,38},'Blocks'},{var,{894,46},'Defs'}]}},
    {debug_line,895,398},
    {match,
     {895,5},
     {var,{895,5},'Warning'},
     {call,
      {895,15},
      {atom,{895,15},make_warning},
      [{block,0,
        [{tuple,
          {895,28},
          [{atom,{895,29},used_receive_marker},{var,{895,50},'Creation'}]}]},
       {var,{895,61},'Anno'},
       {var,{895,67},'Where'}]}},
    {debug_line,896,399},
    {call,
     {896,5},
     {atom,{896,5},coi_is},
     [{var,{896,12},'Is'},
      {var,{896,16},'Last'},
      {var,{896,22},'Blocks'},
      {var,{896,30},'Where'},
      {var,{896,37},'Defs'},
      {block,0,
       [{cons,{896,43},{var,{896,44},'Warning'},{var,{896,54},'Ws'}}]}]}]},
  {clause,
   {897,1},
   [{cons,
     {897,8},
     {tuple,
      {897,9},
      [{atom,{897,9},b_set},
       {var,{897,21},'Anno'},
       {var,{897,9},'_'},
       {atom,{897,29},peek_message},
       {cons,
        {897,47},
        {tuple,{897,48},[{atom,{897,48},b_literal},{var,{897,48},'_'}]},
        {nil,{897,60}}}]},
     {var,{897,66},'Is'}},
    {var,{898,8},'Last'},
    {var,{898,14},'Blocks'},
    {var,{898,22},'Where'},
    {var,{898,29},'Defs'},
    {var,{898,35},'Ws'}],
   [],
   [{debug_line,901,400},
    {match,
     {901,5},
     {tuple,
      {901,5},
      [{atom,{901,5},b_br},
       {var,{901,5},'_'},
       {var,{901,5},'_'},
       {var,{901,16},'NextMsg'},
       {var,{901,5},'_'}]},
     {var,{901,27},'Last'}},
    {debug_line,902,401},
    {match,
     {902,5},
     {map,
      {902,5},
      [{map_field_exact,
        {902,16},
        {var,{902,8},'NextMsg'},
        {tuple,
         {902,19},
         [{atom,{902,19},b_blk},
          {var,{902,19},'_'},
          {var,{902,29},'NextIs'},
          {var,{902,19},'_'}]}}]},
     {var,{902,41},'Blocks'}},
    {debug_line,903,402},
    {match,
     {903,5},
     {var,{903,5},'Info'},
     {'case',
      {903,12},
      {var,{903,17},'NextIs'},
      [{clause,
        {904,16},
        [{cons,
          {904,16},
          {tuple,
           {904,17},
           [{atom,{904,17},b_set},
            {var,{904,17},'_'},
            {var,{904,17},'_'},
            {atom,{904,27},remove_message},
            {var,{904,17},'_'}]},
          {var,{904,45},'_'}}],
        [],
        [{debug_line,904,403},{atom,{904,51},matches_any_message}]},
       {clause,
        {905,16},
        [{var,{905,16},'_'}],
        [],
        [{debug_line,905,404},
         {atom,{905,21},unoptimized_selective_receive}]}]}},
    {debug_line,908,405},
    {match,
     {908,5},
     {var,{908,5},'Warning'},
     {call,
      {908,15},
      {atom,{908,15},make_warning},
      [{var,{908,28},'Info'},{var,{908,34},'Anno'},{var,{908,40},'Where'}]}},
    {debug_line,909,406},
    {call,
     {909,5},
     {atom,{909,5},coi_is},
     [{var,{909,12},'Is'},
      {var,{909,16},'Last'},
      {var,{909,22},'Blocks'},
      {var,{909,30},'Where'},
      {var,{909,37},'Defs'},
      {block,0,
       [{cons,{909,43},{var,{909,44},'Warning'},{var,{909,54},'Ws'}}]}]}]},
  {clause,
   {910,1},
   [{cons,
     {910,8},
     {tuple,
      {910,9},
      [{atom,{910,9},b_set},
       {var,{910,21},'Anno'},
       {var,{910,9},'_'},
       {atom,{910,29},recv_marker_reserve},
       {var,{910,9},'_'}]},
     {var,{910,52},'Is'}},
    {var,{911,8},'Last'},
    {var,{911,14},'Blocks'},
    {var,{911,22},'Where'},
    {var,{911,29},'Defs'},
    {var,{911,35},'Ws'}],
   [],
   [{debug_line,912,407},
    {match,
     {912,5},
     {var,{912,5},'Warning'},
     {call,
      {912,15},
      {atom,{912,15},make_warning},
      [{atom,{912,28},reserved_receive_marker},
       {var,{912,53},'Anno'},
       {var,{912,59},'Where'}]}},
    {debug_line,913,408},
    {call,
     {913,5},
     {atom,{913,5},coi_is},
     [{var,{913,12},'Is'},
      {var,{913,16},'Last'},
      {var,{913,22},'Blocks'},
      {var,{913,30},'Where'},
      {var,{913,37},'Defs'},
      {block,0,
       [{cons,{913,43},{var,{913,44},'Warning'},{var,{913,54},'Ws'}}]}]}]},
  {clause,
   {914,1},
   [{cons,
     {914,8},
     {match,
      {914,9},
      {tuple,
       {914,9},
       [{atom,{914,9},b_set},
        {var,{914,21},'Anno'},
        {var,{914,38},'Dst'},
        {atom,{914,29},call},
        {cons,
         {914,47},
         {tuple,
          {914,48},
          [{atom,{914,48},b_local},{var,{914,48},'_'},{var,{914,48},'_'}]},
         {var,{914,61},'Args'}}]},
      {var,{914,69},'I'}},
     {var,{914,73},'Is'}},
    {var,{915,8},'Last'},
    {var,{915,14},'Blocks'},
    {var,{915,22},'Where'},
    {var,{915,29},'Defs0'},
    {var,{915,36},'Ws0'}],
   [],
   [{debug_line,916,409},
    {match,
     {916,5},
     {var,{916,5},'Defs'},
     {map,
      {916,17},
      {var,{916,12},'Defs0'},
      [{map_field_assoc,{916,24},{var,{916,20},'Dst'},{var,{916,27},'I'}}]}},
    {debug_line,917,410},
    {match,
     {917,5},
     {var,{917,5},'Ws'},
     {op,
      {918,70},
      '++',
      {lc,
       {917,10},
       {block,0,
        [{call,
          {917,11},
          {atom,{917,11},make_warning},
          [{block,0,
            [{tuple,
              {917,24},
              [{atom,{917,25},passed_marker},{var,{917,40},'Creation'}]}]},
           {var,{917,51},'Anno'},
           {var,{917,57},'Where'}]}]},
       [{block,0,[{debug_line,918,411},{atom,{918,35},true}]},
        {generate,
         {918,32},
         {match,
          {918,14},
          {tuple,
           {918,14},
           [{atom,{918,14},b_set},
            {var,{918,14},'_'},
            {var,{918,14},'_'},
            {var,{918,14},'_'},
            {var,{918,14},'_'}]},
          {var,{918,23},'Creation'}},
         {call,
          {918,35},
          {atom,{918,35},coi_creations},
          [{var,{918,49},'Args'},
           {var,{918,55},'Blocks'},
           {var,{918,63},'Defs'}]}}]},
      {var,{918,73},'Ws0'}}},
    {debug_line,919,412},
    {call,
     {919,5},
     {atom,{919,5},coi_is},
     [{var,{919,12},'Is'},
      {var,{919,16},'Last'},
      {var,{919,22},'Blocks'},
      {var,{919,30},'Where'},
      {var,{919,37},'Defs'},
      {var,{919,43},'Ws'}]}]},
  {clause,
   {920,1},
   [{cons,
     {920,8},
     {match,
      {920,9},
      {tuple,
       {920,9},
       [{atom,{920,9},b_set},
        {var,{920,9},'_'},
        {var,{920,20},'Dst'},
        {var,{920,9},'_'},
        {var,{920,9},'_'}]},
      {var,{920,25},'I'}},
     {var,{920,29},'Is'}},
    {var,{920,34},'Last'},
    {var,{920,40},'Blocks'},
    {var,{920,48},'Where'},
    {var,{920,55},'Defs0'},
    {var,{920,62},'Ws'}],
   [],
   [{debug_line,921,413},
    {match,
     {921,5},
     {var,{921,5},'Defs'},
     {map,
      {921,17},
      {var,{921,12},'Defs0'},
      [{map_field_assoc,{921,24},{var,{921,20},'Dst'},{var,{921,27},'I'}}]}},
    {debug_line,922,414},
    {call,
     {922,5},
     {atom,{922,5},coi_is},
     [{var,{922,12},'Is'},
      {var,{922,16},'Last'},
      {var,{922,22},'Blocks'},
      {var,{922,30},'Where'},
      {var,{922,37},'Defs'},
      {var,{922,43},'Ws'}]}]},
  {clause,
   {923,1},
   [{nil,{923,8}},
    {var,{923,12},'_Last'},
    {var,{923,19},'_Blocks'},
    {var,{923,28},'_Where'},
    {var,{923,36},'Defs'},
    {var,{923,42},'Ws'}],
   [],
   [{debug_line,924,415},
    {tuple,{924,5},[{var,{924,6},'Defs'},{var,{924,12},'Ws'}]}]}]}.
{function,
    {926,1},
    coi_creations,3,
    [{clause,
         {926,1},
         [{var,{926,1},'_'},{var,{926,1},'_'},{var,{926,1},'_'}],
         [[{call,
               {926,1},
               {remote,
                   {926,1},
                   {atom,{926,1},fake},
                   {atom,{926,1},is_beam_bif_info}},
               []}]],
         [{debug_line,926,416},{atom,{926,1},ignore}]},
     {clause,
         {926,1},
         [{cons,{926,15},{var,{926,16},'Var'},{var,{926,22},'Vars'}},
          {var,{926,29},'Blocks'},
          {var,{926,37},'Defs'}],
         [],
         [{debug_line,927,417},
          {'case',
              {927,5},
              {var,{927,10},'Defs'},
              [{clause,
                   {928,9},
                   [{map,
                        {928,9},
                        [{map_field_exact,
                             {928,16},
                             {var,{928,12},'Var'},
                             {match,
                                 {928,19},
                                 {tuple,
                                     {928,19},
                                     [{atom,{928,19},b_set},
                                      {var,{928,19},'_'},
                                      {var,{928,38},'Dst'},
                                      {atom,{928,29},call},
                                      {var,{928,47},'Args'}]},
                                 {var,{928,53},'Call'}}}]}],
                   [],
                   [{debug_line,929,418},
                    {'case',
                        {929,13},
                        {call,
                            {929,18},
                            {atom,{929,18},si_remote_call_1},
                            [{var,{929,35},'Dst'},
                             {var,{929,40},'Args'},
                             {integer,{929,47},0},
                             {var,{929,60},'Blocks'}]},
                        [{clause,
                             {930,17},
                             [{tuple,
                                  {930,17},
                                  [{atom,{930,18},makes_ref},
                                   {var,{930,29},'_'},
                                   {var,{930,32},'_'}]}],
                             [],
                             [{debug_line,931,419},
                              {cons,
                                  {931,21},
                                  {var,{931,22},'Call'},
                                  {call,
                                      {931,29},
                                      {atom,{931,29},coi_creations},
                                      [{var,{931,43},'Vars'},
                                       {var,{931,49},'Blocks'},
                                       {var,{931,57},'Defs'}]}}]},
                         {clause,
                             {932,17},
                             [{var,{932,17},'_'}],
                             [],
                             [{debug_line,933,420},
                              {call,
                                  {933,21},
                                  {atom,{933,21},coi_creations},
                                  [{var,{933,35},'Vars'},
                                   {var,{933,41},'Blocks'},
                                   {var,{933,49},'Defs'}]}]}]}]},
               {clause,
                   {935,9},
                   [{map,
                        {935,9},
                        [{map_field_exact,
                             {935,16},
                             {var,{935,12},'Var'},
                             {tuple,
                                 {935,19},
                                 [{atom,{935,19},b_set},
                                  {var,{935,19},'_'},
                                  {var,{935,19},'_'},
                                  {atom,{935,29},get_tuple_element},
                                  {cons,
                                      {935,52},
                                      {var,{935,53},'Tuple'},
                                      {var,{935,59},'_'}}]}}]}],
                   [],
                   [{debug_line,936,421},
                    {call,
                        {936,13},
                        {atom,{936,13},coi_creations},
                        [{block,0,
                             [{cons,
                                  {936,27},
                                  {var,{936,28},'Tuple'},
                                  {var,{936,36},'Vars'}}]},
                         {var,{936,43},'Blocks'},
                         {var,{936,51},'Defs'}]}]},
               {clause,
                   {937,9},
                   [{map,
                        {937,9},
                        [{map_field_exact,
                             {937,16},
                             {var,{937,12},'Var'},
                             {match,
                                 {937,19},
                                 {tuple,
                                     {937,19},
                                     [{atom,{937,20},parameter},
                                      {var,{937,31},'_'}]},
                                 {var,{937,34},'Parameter'}}}]}],
                   [],
                   [{debug_line,938,422},
                    {cons,
                        {938,13},
                        {var,{938,14},'Parameter'},
                        {call,
                            {938,26},
                            {atom,{938,26},coi_creations},
                            [{var,{938,40},'Vars'},
                             {var,{938,46},'Blocks'},
                             {var,{938,54},'Defs'}]}}]},
               {clause,
                   {939,9},
                   [{map,{939,9},[]}],
                   [],
                   [{debug_line,940,423},
                    {call,
                        {940,13},
                        {atom,{940,13},coi_creations},
                        [{var,{940,27},'Vars'},
                         {var,{940,33},'Blocks'},
                         {var,{940,41},'Defs'}]}]}]}]},
     {clause,
         {942,1},
         [{nil,{942,15}},{var,{942,19},'_Blocks'},{var,{942,28},'_Defs'}],
         [],
         [{debug_line,943,424},{nil,{943,5}}]}]}.
{function,
    {945,1},
    make_warning,3,
    [{clause,
         {945,1},
         [{var,{945,1},'_'},{var,{945,1},'_'},{var,{945,1},'_'}],
         [[{call,
               {945,1},
               {remote,
                   {945,1},
                   {atom,{945,1},fake},
                   {atom,{945,1},is_beam_bif_info}},
               []}]],
         [{debug_line,945,425},{atom,{945,1},ignore}]},
     {clause,
         {945,1},
         [{var,{945,14},'Term'},{var,{945,20},'Anno'},{var,{945,26},'Where'}],
         [],
         [{debug_line,946,426},
          {match,
              {946,5},
              {tuple,{946,5},[{var,{946,6},'File'},{var,{946,12},'Line'}]},
              {'case',
                  {947,9},
                  {call,
                      {947,14},
                      {remote,
                          {947,18},
                          {atom,{947,14},maps},
                          {atom,{947,19},get}},
                      [{atom,{947,23},location},
                       {var,{947,33},'Anno'},
                       {var,{947,39},'Where'}]},
                  [{clause,
                       {948,13},
                       [{match,
                            {948,13},
                            {tuple,
                                {948,13},
                                [{var,{948,14},'_'},{var,{948,17},'_'}]},
                            {var,{948,22},'Location'}}],
                       [],
                       [{debug_line,948,427},{var,{948,34},'Location'}]},
                   {clause,
                       {949,13},
                       [{var,{949,13},'_'}],
                       [],
                       [{debug_line,949,428},
                        {tuple,
                            {949,18},
                            [{string,{949,19},"no_file"},
                             {atom,{949,30},none}]}]}]}},
          {debug_line,951,429},
          {tuple,
              {951,5},
              [{var,{951,6},'File'},
               {cons,
                   {951,11},
                   {tuple,
                       {951,12},
                       [{var,{951,13},'Line'},
                        {atom,{951,19},beam_ssa_recv},
                        {var,{951,26},'Term'}]},
                   {nil,{951,31}}}]}]}]}.
{function,
    {953,1},
    format_opt_info,1,
    [{clause,
         {953,1},
         [{var,{953,1},'_'}],
         [[{call,
               {953,1},
               {remote,
                   {953,1},
                   {atom,{953,1},fake},
                   {atom,{953,1},is_beam_bif_info}},
               []}]],
         [{debug_line,953,430},{atom,{953,1},ignore}]},
     {clause,
         {953,1},
         [{atom,{953,17},matches_any_message}],
         [],
         [{debug_line,954,431},
          {string,
              {954,5},
              "INFO: receive matches any message, this is always fast"}]},
     {clause,
         {955,1},
         [{tuple,
              {955,17},
              [{atom,{955,18},passed_marker},{var,{955,33},'Creation'}]}],
         [],
         [{debug_line,956,432},
          {call,
              {956,5},
              {remote,{956,11},{atom,{956,5},io_lib},{atom,{956,12},format}},
              [{block,0,[{string,{956,19},"INFO: passing reference ~ts"}]},
               {block,0,
                   [{debug_line,957,433},
                    {cons,
                        {957,19},
                        {call,
                            {957,20},
                            {atom,{957,20},format_ref_creation},
                            [{var,{957,40},'Creation'}]},
                        {nil,{957,49}}}]}]}]},
     {clause,
         {958,1},
         [{tuple,
              {958,17},
              [{atom,{958,18},used_receive_marker},
               {var,{958,39},'Creation'}]}],
         [],
         [{debug_line,959,434},
          {call,
              {959,5},
              {remote,{959,11},{atom,{959,5},io_lib},{atom,{959,12},format}},
              [{block,0,
                   [{string,
                        {959,19},
                        "OPTIMIZED: all clauses match reference ~ts"}]},
               {block,0,
                   [{debug_line,960,435},
                    {cons,
                        {960,19},
                        {call,
                            {960,20},
                            {atom,{960,20},format_ref_creation},
                            [{var,{960,40},'Creation'}]},
                        {nil,{960,49}}}]}]}]},
     {clause,
         {961,1},
         [{atom,{961,17},reserved_receive_marker}],
         [],
         [{debug_line,962,436},
          {string,
              {962,5},
              "OPTIMIZED: reference used to mark a message queue position"}]},
     {clause,
         {963,1},
         [{atom,{963,17},unoptimized_selective_receive}],
         [],
         [{debug_line,964,437},
          {string,
              {964,5},
              "NOT OPTIMIZED: all clauses do not match a suitable reference"}]}]}.
{function,
    {966,1},
    format_ref_creation,1,
    [{clause,
         {966,1},
         [{var,{966,1},'_'}],
         [[{call,
               {966,1},
               {remote,
                   {966,1},
                   {atom,{966,1},fake},
                   {atom,{966,1},is_beam_bif_info}},
               []}]],
         [{debug_line,966,438},{atom,{966,1},ignore}]},
     {clause,
         {966,1},
         [{tuple,{966,21},[{atom,{966,22},parameter},{var,{966,33},'Index'}]}],
         [],
         [{debug_line,967,439},
          {call,
              {967,5},
              {remote,{967,11},{atom,{967,5},io_lib},{atom,{967,12},format}},
              [{block,0,[{string,{967,19},"in function parameter ~w"}]},
               {block,0,
                   [{cons,
                        {967,47},
                        {var,{967,48},'Index'},
                        {nil,{967,53}}}]}]}]},
     {clause,
         {968,1},
         [{tuple,
              {968,21},
              [{atom,{968,21},b_set},
               {var,{968,41},'Anno'},
               {var,{968,21},'_'},
               {atom,{968,31},call},
               {cons,{968,51},{var,{968,52},'Callee'},{var,{968,59},'_'}}]}],
         [],
         [{debug_line,969,440},
          {match,
              {969,5},
              {tuple,
                  {969,5},
                  [{atom,{969,5},b_remote},
                   {var,{969,5},'_'},
                   {tuple,
                       {969,20},
                       [{atom,{969,20},b_literal},{var,{969,35},'F'}]},
                   {var,{969,44},'A'}]},
              {var,{969,49},'Callee'}},
          {debug_line,970,441},
          {match,
              {970,5},
              {tuple,{970,5},[{var,{970,6},'File'},{var,{970,12},'Line'}]},
              {call,
                  {970,20},
                  {remote,{970,24},{atom,{970,20},maps},{atom,{970,25},get}},
                  [{atom,{970,29},location},
                   {var,{970,39},'Anno'},
                   {block,0,
                       [{tuple,
                            {970,45},
                            [{string,{970,46},[]},{integer,{970,49},1}]}]}]}},
          {debug_line,971,442},
          {call,
              {971,5},
              {remote,{971,11},{atom,{971,5},io_lib},{atom,{971,12},format}},
              [{block,0,[{string,{971,19},"created by ~p/~p at ~ts:~w"}]},
               {block,0,
                   [{cons,
                        {971,49},
                        {var,{971,50},'F'},
                        {cons,
                            {971,53},
                            {var,{971,53},'A'},
                            {cons,
                                {971,56},
                                {var,{971,56},'File'},
                                {cons,
                                    {971,62},
                                    {var,{971,62},'Line'},
                                    {nil,{971,66}}}}}}]}]}]}]}.
{eof,{972,1}}.
