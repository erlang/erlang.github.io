{attribute,{1,1},file,{"sys_messages.erl",1}}.
{attribute,{21,2},module,sys_messages}.
{attribute,{24,2},export,[{format_messages,4},{list_errors,3}]}.
{attribute,{26,2},
           type,
           {loc,{remote_type,{26,16},
                             [{atom,{26,16},erl_anno},
                              {atom,{26,25},location},
                              []]},
                []}}.
{attribute,
    {27,2},
    type,
    {message,
        {type,
            {27,20},
            tuple,
            [{ann_type,
                 {27,21},
                 [{var,{27,21},'Where'},
                  {type,
                      {27,30},
                      union,
                      [{atom,{27,30},none},
                       {type,
                           {27,37},
                           tuple,
                           [{ann_type,
                                {27,38},
                                [{var,{27,38},'File'},
                                 {type,{27,44},string,[]}]},
                            {user_type,{27,54},loc,[]}]}]}]},
             {ann_type,
                 {27,62},
                 [{var,{27,62},'Text'},{type,{27,70},iolist,[]}]}]},
        []}}.
{attribute,
    {29,2},
    spec,
    {{format_messages,4},
     [{type,
          {29,22},
          'fun',
          [{type,
               {29,22},
               product,
               [{ann_type,
                    {29,23},
                    [{var,{29,23},'File'},{type,{29,29},string,[]}]},
                {ann_type,
                    {29,39},
                    [{var,{29,39},'Prefix'},{type,{29,47},string,[]}]},
                {type,
                    {29,57},
                    list,
                    [{remote_type,
                         {29,58},
                         [{atom,{29,58},erl_lint},
                          {atom,{29,67},error_info},
                          []]}]},
                {ann_type,
                    {30,23},
                    [{var,{30,23},'Opts'},
                     {type,{30,29},list,[{type,{30,30},term,[]}]}]}]},
           {type,{30,42},list,[{user_type,{30,43},message,[]}]}]}]}}.
{function,
 {32,1},
 format_messages,4,
 [{clause,
   {32,1},
   [{var,{32,1},'_'},{var,{32,1},'_'},{var,{32,1},'_'},{var,{32,1},'_'}],
   [[{call,
      {32,1},
      {remote,{32,1},{atom,{32,1},fake},{atom,{32,1},is_beam_bif_info}},
      []}]],
   [{debug_line,32,1},{atom,{32,1},ignore}]},
  {clause,
   {32,1},
   [{var,{32,17},'F'},
    {var,{32,20},'P'},
    {cons,
     {32,23},
     {tuple,
      {32,24},
      [{atom,{32,25},none},{var,{32,31},'Mod'},{var,{32,36},'E'}]},
     {var,{32,41},'Es'}},
    {var,{32,46},'Opts'}],
   [],
   [{debug_line,33,2},
    {match,
     {33,5},
     {var,{33,5},'M'},
     {tuple,
      {33,9},
      [{atom,{33,10},none},
       {call,
        {33,16},
        {remote,{33,22},{atom,{33,16},io_lib},{atom,{33,23},format}},
        [{block,0,[{string,{33,30},"~ts: ~s~ts\n"}]},
         {block,0,
          [{cons,
            {33,46},
            {var,{33,47},'F'},
            {cons,
             {33,50},
             {var,{33,50},'P'},
             {cons,
              {33,53},
              {call,
               {33,53},
               {remote,
                {33,56},
                {var,{33,53},'Mod'},
                {atom,{33,57},format_error}},
               [{var,{33,70},'E'}]},
              {nil,{33,72}}}}}]}]}]}},
    {debug_line,34,3},
    {cons,
     {34,5},
     {var,{34,6},'M'},
     {call,
      {34,10},
      {atom,{34,10},format_messages},
      [{var,{34,26},'F'},
       {var,{34,29},'P'},
       {var,{34,32},'Es'},
       {var,{34,36},'Opts'}]}}]},
  {clause,
   {35,1},
   [{var,{35,17},'F'},
    {var,{35,20},'P'},
    {cons,
     {35,23},
     {tuple,
      {35,24},
      [{var,{35,25},'Loc'},{var,{35,30},'Mod'},{var,{35,35},'E'}]},
     {var,{35,40},'Es'}},
    {var,{35,45},'Opts'}],
   [],
   [{debug_line,36,4},
    {match,{36,5},{var,{36,5},'StartLoc'},{var,{36,16},'Loc'}},
    {debug_line,37,5},
    {match,{37,5},{var,{37,5},'EndLoc'},{var,{37,14},'StartLoc'}},
    {debug_line,38,6},
    {match,
     {38,5},
     {var,{38,5},'Src'},
     {call,
      {38,11},
      {atom,{38,11},quote_source},
      [{var,{38,24},'F'},
       {var,{38,27},'StartLoc'},
       {var,{38,37},'EndLoc'},
       {var,{38,45},'Opts'}]}},
    {debug_line,39,7},
    {match,
     {39,5},
     {var,{39,5},'Msg'},
     {call,
      {39,11},
      {remote,{39,17},{atom,{39,11},io_lib},{atom,{39,18},format}},
      [{block,0,[{string,{39,25},"~ts:~ts: ~s~ts\n~ts"}]},
       {block,0,
        [{cons,
          {39,48},
          {var,{40,9},'F'},
          {cons,
           {41,9},
           {call,{41,9},{atom,{41,9},fmt_pos},[{var,{41,17},'StartLoc'}]},
           {cons,
            {42,9},
            {var,{42,9},'P'},
            {cons,
             {43,9},
             {call,
              {43,9},
              {remote,{43,12},{var,{43,9},'Mod'},{atom,{43,13},format_error}},
              [{var,{43,26},'E'}]},
             {cons,{44,9},{var,{44,9},'Src'},{nil,{45,5}}}}}}}]}]}},
    {debug_line,46,8},
    {match,{46,5},{var,{46,5},'Pos'},{var,{46,11},'StartLoc'}},
    {debug_line,47,9},
    {cons,
     {47,5},
     {tuple,
      {47,6},
      [{tuple,{47,7},[{var,{47,8},'F'},{var,{47,11},'Pos'}]},
       {var,{47,17},'Msg'}]},
     {call,
      {47,24},
      {atom,{47,24},format_messages},
      [{var,{47,40},'F'},
       {var,{47,43},'P'},
       {var,{47,46},'Es'},
       {var,{47,50},'Opts'}]}}]},
  {clause,
   {48,1},
   [{var,{48,17},'_'},{var,{48,20},'_'},{nil,{48,23}},{var,{48,27},'_Opts'}],
   [],
   [{debug_line,49,10},{nil,{49,5}}]}]}.
{attribute,
    {51,2},
    spec,
    {{list_errors,3},
     [{type,
          {51,18},
          'fun',
          [{type,
               {51,18},
               product,
               [{ann_type,
                    {51,19},
                    [{var,{51,19},'File'},{type,{51,25},string,[]}]},
                {type,
                    {51,35},
                    list,
                    [{remote_type,
                         {51,36},
                         [{atom,{51,36},erl_lint},
                          {atom,{51,45},error_info},
                          []]}]},
                {ann_type,
                    {51,60},
                    [{var,{51,60},'Opts'},
                     {type,{51,66},list,[{type,{51,67},term,[]}]}]}]},
           {atom,{51,79},ok}]}]}}.
{function,
 {53,1},
 list_errors,3,
 [{clause,
   {53,1},
   [{var,{53,1},'_'},{var,{53,1},'_'},{var,{53,1},'_'}],
   [[{call,
      {53,1},
      {remote,{53,1},{atom,{53,1},fake},{atom,{53,1},is_beam_bif_info}},
      []}]],
   [{debug_line,53,11},{atom,{53,1},ignore}]},
  {clause,
   {53,1},
   [{var,{53,13},'F'},
    {cons,
     {53,16},
     {tuple,
      {53,17},
      [{atom,{53,18},none},{var,{53,24},'Mod'},{var,{53,29},'E'}]},
     {var,{53,34},'Es'}},
    {var,{53,39},'Opts'}],
   [],
   [{debug_line,54,12},
    {call,
     {54,5},
     {remote,{54,7},{atom,{54,5},io},{atom,{54,8},fwrite}},
     [{block,0,[{string,{54,15},"~ts: ~ts\n"}]},
      {block,0,
       [{cons,
         {54,29},
         {var,{54,30},'F'},
         {cons,
          {54,33},
          {call,
           {54,33},
           {remote,{54,36},{var,{54,33},'Mod'},{atom,{54,37},format_error}},
           [{var,{54,50},'E'}]},
          {nil,{54,52}}}}]}]},
    {debug_line,55,13},
    {call,
     {55,5},
     {atom,{55,5},list_errors},
     [{var,{55,17},'F'},{var,{55,20},'Es'},{var,{55,24},'Opts'}]}]},
  {clause,
   {56,1},
   [{var,{56,13},'F'},
    {cons,
     {56,16},
     {tuple,
      {56,17},
      [{var,{56,18},'Loc'},{var,{56,23},'Mod'},{var,{56,28},'E'}]},
     {var,{56,33},'Es'}},
    {var,{56,38},'Opts'}],
   [],
   [{debug_line,57,14},
    {match,{57,5},{var,{57,5},'StartLoc'},{var,{57,16},'Loc'}},
    {debug_line,58,15},
    {match,{58,5},{var,{58,5},'EndLoc'},{var,{58,14},'StartLoc'}},
    {debug_line,59,16},
    {match,
     {59,5},
     {var,{59,5},'Src'},
     {call,
      {59,11},
      {atom,{59,11},quote_source},
      [{var,{59,24},'F'},
       {var,{59,27},'StartLoc'},
       {var,{59,37},'EndLoc'},
       {var,{59,45},'Opts'}]}},
    {debug_line,60,17},
    {call,
     {60,5},
     {remote,{60,7},{atom,{60,5},io},{atom,{60,8},fwrite}},
     [{block,0,[{string,{60,15},"~ts:~ts: ~ts\n~ts"}]},
      {block,0,
       [{cons,
         {60,36},
         {var,{60,37},'F'},
         {cons,
          {60,40},
          {call,{60,40},{atom,{60,40},fmt_pos},[{var,{60,48},'StartLoc'}]},
          {cons,
           {60,59},
           {call,
            {60,59},
            {remote,{60,62},{var,{60,59},'Mod'},{atom,{60,63},format_error}},
            [{var,{60,76},'E'}]},
           {cons,{60,80},{var,{60,80},'Src'},{nil,{60,83}}}}}}]}]},
    {debug_line,61,18},
    {call,
     {61,5},
     {atom,{61,5},list_errors},
     [{var,{61,17},'F'},{var,{61,20},'Es'},{var,{61,24},'Opts'}]}]},
  {clause,
   {62,1},
   [{var,{62,13},'_F'},{nil,{62,17}},{var,{62,21},'_Opts'}],
   [],
   [{debug_line,63,19},{atom,{63,5},ok}]}]}.
{function,
    {65,1},
    fmt_pos,1,
    [{clause,
         {65,1},
         [{var,{65,1},'_'}],
         [[{call,
               {65,1},
               {remote,
                   {65,1},
                   {atom,{65,1},fake},
                   {atom,{65,1},is_beam_bif_info}},
               []}]],
         [{debug_line,65,20},{atom,{65,1},ignore}]},
     {clause,
         {65,1},
         [{tuple,{65,9},[{var,{65,10},'Line'},{var,{65,16},'Col'}]}],
         [],
         [{debug_line,66,21},
          {call,
              {66,5},
              {remote,{66,11},{atom,{66,5},io_lib},{atom,{66,12},format}},
              [{block,0,[{string,{66,19},"~w:~w"}]},
               {block,0,
                   [{cons,
                        {66,28},
                        {var,{66,29},'Line'},
                        {cons,
                            {66,35},
                            {var,{66,35},'Col'},
                            {nil,{66,38}}}}]}]}]},
     {clause,
         {67,1},
         [{var,{67,9},'Line'}],
         [],
         [{debug_line,68,22},
          {call,
              {68,5},
              {remote,{68,11},{atom,{68,5},io_lib},{atom,{68,12},format}},
              [{block,0,[{string,{68,19},"~w"}]},
               {block,0,
                   [{cons,{68,25},{var,{68,26},'Line'},{nil,{68,30}}}]}]}]}]}.
{function,
    {70,1},
    quote_source,4,
    [{clause,
         {70,1},
         [{var,{70,1},'_'},{var,{70,1},'_'},{var,{70,1},'_'},{var,{70,1},'_'}],
         [[{call,
               {70,1},
               {remote,
                   {70,1},
                   {atom,{70,1},fake},
                   {atom,{70,1},is_beam_bif_info}},
               []}]],
         [{debug_line,70,23},{atom,{70,1},ignore}]},
     {clause,
         {70,1},
         [{var,{70,14},'File'},
          {var,{70,20},'StartLoc'},
          {var,{70,30},'EndLoc'},
          {var,{70,38},'Opts'}],
         [],
         [{debug_line,71,24},
          {'case',
              {71,5},
              {call,
                  {71,10},
                  {remote,
                      {71,19},
                      {atom,{71,10},proplists},
                      {atom,{71,20},get_bool}},
                  [{atom,{71,29},brief},{var,{71,36},'Opts'}]},
              [{clause,
                   {72,9},
                   [{atom,{72,9},true}],
                   [],
                   [{debug_line,72,25},{string,{72,17},[]}]},
               {clause,
                   {73,9},
                   [{atom,{73,9},false}],
                   [],
                   [{debug_line,73,26},
                    {call,
                        {73,18},
                        {atom,{73,18},quote_source_1},
                        [{var,{73,33},'File'},
                         {var,{73,39},'StartLoc'},
                         {var,{73,49},'EndLoc'}]}]}]}]}]}.
{function,
 {76,1},
 quote_source_1,3,
 [{clause,
   {76,1},
   [{var,{76,1},'_'},{var,{76,1},'_'},{var,{76,1},'_'}],
   [[{call,
      {76,1},
      {remote,{76,1},{atom,{76,1},fake},{atom,{76,1},is_beam_bif_info}},
      []}]],
   [{debug_line,76,27},{atom,{76,1},ignore}]},
  {clause,
   {76,1},
   [{var,{76,16},'File'},{var,{76,22},'Line'},{var,{76,28},'Loc2'}],
   [[{call,
      {76,39},
      {remote,{76,39},{atom,{76,39},erlang},{atom,{76,39},is_integer}},
      [{var,{76,50},'Line'}]}]],
   [{debug_line,77,28},
    {call,
     {77,5},
     {atom,{77,5},quote_source_1},
     [{var,{77,20},'File'},
      {block,0,[{tuple,{77,26},[{var,{77,27},'Line'},{integer,{77,33},1}]}]},
      {var,{77,37},'Loc2'}]}]},
  {clause,
   {78,1},
   [{var,{78,16},'File'},{var,{78,22},'Loc1'},{var,{78,28},'Line'}],
   [[{call,
      {78,39},
      {remote,{78,39},{atom,{78,39},erlang},{atom,{78,39},is_integer}},
      [{var,{78,50},'Line'}]}]],
   [{debug_line,79,29},
    {call,
     {79,5},
     {atom,{79,5},quote_source_1},
     [{var,{79,20},'File'},
      {var,{79,26},'Loc1'},
      {block,0,
       [{tuple,
         {79,32},
         [{var,{79,33},'Line'},{op,{79,39},'-',{integer,{79,40},1}}]}]}]}]},
  {clause,
   {80,1},
   [{var,{80,16},'File'},
    {tuple,{80,22},[{var,{80,23},'StartLine'},{var,{80,34},'StartCol'}]},
    {tuple,{80,45},[{var,{80,46},'EndLine'},{var,{80,55},'EndCol'}]}],
   [],
   [{debug_line,81,30},
    {'case',
     {81,5},
     {call,
      {81,10},
      {remote,{81,14},{atom,{81,10},file},{atom,{81,15},read_file}},
      [{var,{81,25},'File'}]},
     [{clause,
       {82,9},
       [{tuple,{82,9},[{atom,{82,10},ok},{var,{82,14},'Bin'}]}],
       [],
       [{debug_line,83,31},
        {match,
         {83,13},
         {var,{83,13},'Enc'},
         {'case',
          {83,19},
          {call,
           {83,24},
           {remote,
            {83,27},
            {atom,{83,24},epp},
            {atom,{83,28},read_encoding_from_binary}},
           [{var,{83,54},'Bin'}]},
          [{clause,
            {84,23},
            [{atom,{84,23},none}],
            [],
            [{debug_line,84,32},
             {call,
              {84,31},
              {remote,
               {84,34},
               {atom,{84,31},epp},
               {atom,{84,35},default_encoding}},
              []}]},
           {clause,
            {85,23},
            [{var,{85,23},'Enc0'}],
            [],
            [{debug_line,85,33},{var,{85,31},'Enc0'}]}]}},
        {debug_line,87,34},
        {match,
         {87,13},
         {var,{87,13},'Ctx'},
         {'if',
          {88,17},
          [{clause,
            {89,21},
            [],
            [[{op,
               {89,31},
               '=:=',
               {var,{89,21},'StartLine'},
               {var,{89,35},'EndLine'}}]],
            [{debug_line,89,35},{integer,{89,46},0}]},
           {clause,
            {90,21},
            [],
            [[{atom,{90,21},true}]],
            [{debug_line,90,36},{integer,{90,29},1}]}]}},
        {debug_line,92,37},
        {'case',
         {92,13},
         {call,
          {92,18},
          {atom,{92,18},seek_line},
          [{var,{92,28},'Bin'},
           {integer,{92,33},1},
           {block,0,
            [{op,
              {92,46},
              '-',
              {var,{92,36},'StartLine'},
              {var,{92,48},'Ctx'}}]}]},
         [{clause,
           {93,17},
           [{tuple,{93,17},[{atom,{93,18},ok},{var,{93,22},'Bin1'}]}],
           [],
           [{debug_line,94,38},
            {call,
             {94,21},
             {atom,{94,21},quote_source_2},
             [{var,{94,36},'Bin1'},
              {var,{94,42},'Enc'},
              {var,{94,47},'StartLine'},
              {var,{94,58},'StartCol'},
              {var,{94,68},'EndLine'},
              {var,{94,77},'EndCol'},
              {var,{94,85},'Ctx'}]}]},
          {clause,
           {95,17},
           [{atom,{95,17},error}],
           [],
           [{debug_line,96,39},{string,{96,21},[]}]}]}]},
      {clause,
       {98,9},
       [{tuple,{98,9},[{atom,{98,10},error},{var,{98,17},'_'}]}],
       [],
       [{debug_line,99,40},{string,{99,13},[]}]}]}]}]}.
{function,
 {102,1},
 quote_source_2,7,
 [{clause,
   {102,1},
   [{var,{102,1},'_'},
    {var,{102,1},'_'},
    {var,{102,1},'_'},
    {var,{102,1},'_'},
    {var,{102,1},'_'},
    {var,{102,1},'_'},
    {var,{102,1},'_'}],
   [[{call,
      {102,1},
      {remote,{102,1},{atom,{102,1},fake},{atom,{102,1},is_beam_bif_info}},
      []}]],
   [{debug_line,102,41},{atom,{102,1},ignore}]},
  {clause,
   {102,1},
   [{var,{102,16},'Bin'},
    {var,{102,21},'Enc'},
    {var,{102,26},'StartLine'},
    {var,{102,37},'StartCol'},
    {var,{102,47},'EndLine'},
    {var,{102,56},'EndCol'},
    {var,{102,64},'Ctx'}],
   [],
   [{debug_line,103,42},
    {'case',
     {103,5},
     {call,
      {103,10},
      {atom,{103,10},take_lines},
      [{var,{103,21},'Bin'},
       {var,{103,26},'Enc'},
       {block,0,
        [{op,{103,41},'-',{var,{103,31},'StartLine'},{var,{103,43},'Ctx'}}]},
       {block,0,
        [{op,{103,56},'+',{var,{103,48},'EndLine'},{var,{103,58},'Ctx'}}]}]},
     [{clause,
       {104,9},
       [{nil,{104,9}}],
       [],
       [{debug_line,105,43},{string,{105,13},[]}]},
      {clause,
       {106,9},
       [{var,{106,9},'Lines'}],
       [],
       [{debug_line,107,44},
        {match,
         {107,13},
         {var,{107,13},'Lines1'},
         {'case',
          {108,17},
          {op,
           {108,36},
           '=<',
           {call,
            {108,22},
            {remote,{108,22},{atom,{108,22},erlang},{atom,{108,22},length}},
            [{var,{108,29},'Lines'}]},
           {op,{108,42},'+',{integer,{108,40},4},{var,{108,44},'Ctx'}}},
          [{clause,
            {109,21},
            [{atom,{109,21},true}],
            [],
            [{debug_line,110,45},{var,{110,25},'Lines'}]},
           {clause,
            {111,21},
            [{atom,{111,21},false}],
            [],
            [{debug_line,115,46},
             {match,
              {115,25},
              {var,{115,25},'Before'},
              {call,
               {115,34},
               {remote,{115,39},{atom,{115,34},lists},{atom,{115,40},sublist}},
               [{var,{115,48},'Lines'},
                {block,0,
                 [{op,
                   {115,57},
                   '+',
                   {integer,{115,55},2},
                   {var,{115,59},'Ctx'}}]}]}},
             {debug_line,116,47},
             {match,
              {116,25},
              {var,{116,25},'After'},
              {call,
               {116,33},
               {remote,{116,38},{atom,{116,33},lists},{atom,{116,39},reverse}},
               [{block,0,
                 [{debug_line,117,48},
                  {call,
                   {117,29},
                   {remote,
                    {117,34},
                    {atom,{117,29},lists},
                    {atom,{117,35},sublist}},
                   [{block,0,
                     [{call,
                       {117,43},
                       {remote,
                        {117,48},
                        {atom,{117,43},lists},
                        {atom,{117,49},reverse}},
                       [{var,{117,57},'Lines'}]}]},
                    {block,0,
                     [{op,
                       {117,67},
                       '+',
                       {integer,{117,65},1},
                       {var,{117,69},'Ctx'}}]}]}]}]}},
             {debug_line,119,49},
             {op,
              {119,32},
              '++',
              {var,{119,25},'Before'},
              {op,
               {119,48},
               '++',
               {cons,
                {119,35},
                {tuple,
                 {119,36},
                 [{integer,{119,37},0},{string,{119,40},"..."}]},
                {nil,{119,46}}},
               {var,{119,51},'After'}}}]}]}},
        {debug_line,121,50},
        {match,
         {121,13},
         {var,{121,13},'Lines2'},
         {call,
          {121,22},
          {atom,{121,22},decorate},
          [{var,{121,31},'Lines1'},
           {var,{121,39},'StartLine'},
           {var,{121,50},'StartCol'},
           {var,{121,60},'EndLine'},
           {var,{121,69},'EndCol'}]}},
        {debug_line,122,51},
        {cons,
         {122,13},
         {lc,
          {122,14},
          {block,0,
           [{call,
             {122,15},
             {atom,{122,15},fmt_line},
             [{var,{122,24},'L'},{var,{122,27},'Text'}]}]},
          [{block,0,[{atom,{122,50},true}]},
           {generate_strict,
            {122,46},
            {tuple,{122,36},[{var,{122,37},'L'},{var,{122,40},'Text'}]},
            {var,{122,50},'Lines2'}}]},
         {cons,{122,59},{char,{122,59},10},{nil,{122,62}}}}]}]}]}]}.
{function,{125,1},
          line_prefix,0,
          [{clause,{125,1},
                   [],
                   [[{call,{125,1},
                           {remote,{125,1},
                                   {atom,{125,1},fake},
                                   {atom,{125,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,125,52},{atom,{125,1},ignore}]},
           {clause,{125,1},
                   [],[],
                   [{debug_line,126,53},{string,{126,5},"% "}]}]}.
{function,
    {128,1},
    fmt_line,2,
    [{clause,
         {128,1},
         [{var,{128,1},'_'},{var,{128,1},'_'}],
         [[{call,
               {128,1},
               {remote,
                   {128,1},
                   {atom,{128,1},fake},
                   {atom,{128,1},is_beam_bif_info}},
               []}]],
         [{debug_line,128,54},{atom,{128,1},ignore}]},
     {clause,
         {128,1},
         [{var,{128,10},'L'},{var,{128,13},'Text'}],
         [],
         [{debug_line,129,55},
          {match,
              {129,5},
              {tuple,
                  {129,5},
                  [{var,{129,6},'LineText'},{var,{129,16},'LineTextLength'}]},
              {call,
                  {129,34},
                  {atom,{129,34},line_to_txt},
                  [{var,{129,46},'L'}]}},
          {debug_line,130,56},
          {cons,
              {130,5},
              {call,{130,6},{atom,{130,6},line_prefix},[]},
              {cons,
                  {131,6},
                  {call,
                      {131,6},
                      {remote,
                          {131,12},
                          {atom,{131,6},io_lib},
                          {atom,{131,13},format}},
                      [{block,0,
                           [{debug_line,131,57},{string,{131,20},"~*.ts| "}]},
                       {block,0,
                           [{cons,
                                {131,31},
                                {var,{131,32},'LineTextLength'},
                                {cons,
                                    {131,48},
                                    {var,{131,48},'LineText'},
                                    {nil,{131,56}}}}]}]},
                  {cons,
                      {132,6},
                      {var,{132,6},'Text'},
                      {cons,
                          {132,12},
                          {string,{132,12},"\n"},
                          {nil,{132,16}}}}}}]}]}.
{function,
    {134,1},
    line_to_txt,1,
    [{clause,
         {134,1},
         [{var,{134,1},'_'}],
         [[{call,
               {134,1},
               {remote,
                   {134,1},
                   {atom,{134,1},fake},
                   {atom,{134,1},is_beam_bif_info}},
               []}]],
         [{debug_line,134,58},{atom,{134,1},ignore}]},
     {clause,
         {134,1},
         [{var,{134,13},'L'}],
         [],
         [{debug_line,135,59},
          {match,
              {135,5},
              {var,{135,5},'LineText'},
              {call,
                  {135,16},
                  {remote,
                      {135,16},
                      {atom,{135,16},erlang},
                      {atom,{135,16},integer_to_list}},
                  [{block,0,
                       [{call,
                            {135,32},
                            {remote,
                                {135,32},
                                {atom,{135,32},erlang},
                                {atom,{135,32},abs}},
                            [{var,{135,36},'L'}]}]}]}},
          {debug_line,136,60},
          {match,
              {136,5},
              {var,{136,5},'Length'},
              {call,
                  {136,14},
                  {remote,{136,14},{atom,{136,14},erlang},{atom,{136,14},max}},
                  [{integer,{136,18},4},
                   {block,0,
                       [{call,
                            {136,21},
                            {remote,
                                {136,21},
                                {atom,{136,21},erlang},
                                {atom,{136,21},length}},
                            [{var,{136,28},'LineText'}]}]}]}},
          {debug_line,137,61},
          {'if',
              {137,5},
              [{clause,
                   {138,9},
                   [],
                   [[{op,{138,11},
                         '<',
                         {var,{138,9},'L'},
                         {integer,{138,13},0}}]],
                   [{debug_line,139,62},
                    {tuple,
                        {139,13},
                        [{string,{139,14},[]},{var,{139,18},'Length'}]}]},
               {clause,
                   {140,9},
                   [],
                   [[{atom,{140,9},true}]],
                   [{debug_line,141,63},
                    {tuple,
                        {141,13},
                        [{var,{141,14},'LineText'},
                         {var,{141,24},'Length'}]}]}]}]}]}.
{function,
    {144,1},
    decorate,5,
    [{clause,
         {144,1},
         [{var,{144,1},'_'},
          {var,{144,1},'_'},
          {var,{144,1},'_'},
          {var,{144,1},'_'},
          {var,{144,1},'_'}],
         [[{call,
               {144,1},
               {remote,
                   {144,1},
                   {atom,{144,1},fake},
                   {atom,{144,1},is_beam_bif_info}},
               []}]],
         [{debug_line,144,64},{atom,{144,1},ignore}]},
     {clause,
         {144,1},
         [{cons,
              {144,10},
              {match,
                  {144,11},
                  {tuple,
                      {144,11},
                      [{var,{144,12},'Line'},{var,{144,18},'Text'}]},
                  {var,{144,26},'L'}},
              {var,{144,30},'Ls'}},
          {var,{144,35},'StartLine'},
          {var,{144,46},'StartCol'},
          {var,{144,56},'EndLine'},
          {var,{144,65},'EndCol'}],
         [[{op,{145,8},'=:=',{var,{145,3},'Line'},{var,{145,12},'StartLine'}},
           {op,{145,31},
               '=:=',
               {var,{145,23},'EndLine'},
               {var,{145,35},'StartLine'}}]],
         [{debug_line,147,65},
          {match,
              {147,5},
              {var,{147,5},'S'},
              {call,
                  {147,9},
                  {atom,{147,9},underline},
                  [{var,{147,19},'Text'},
                   {var,{147,25},'StartCol'},
                   {var,{147,35},'EndCol'}]}},
          {debug_line,148,66},
          {call,
              {148,5},
              {atom,{148,5},decorate},
              [{var,{148,14},'S'},
               {var,{148,17},'L'},
               {var,{148,20},'Ls'},
               {var,{148,24},'StartLine'},
               {var,{148,35},'StartCol'},
               {var,{148,45},'EndLine'},
               {var,{148,54},'EndCol'}]}]},
     {clause,
         {149,1},
         [{cons,
              {149,10},
              {match,
                  {149,11},
                  {tuple,
                      {149,11},
                      [{var,{149,12},'Line'},{var,{149,18},'Text'}]},
                  {var,{149,26},'L'}},
              {var,{149,30},'Ls'}},
          {var,{149,35},'StartLine'},
          {var,{149,46},'StartCol'},
          {var,{149,56},'EndLine'},
          {var,{149,65},'EndCol'}],
         [[{op,{149,83},
               '=:=',
               {var,{149,78},'Line'},
               {var,{149,87},'StartLine'}}]],
         [{debug_line,151,67},
          {match,
              {151,5},
              {var,{151,5},'S'},
              {call,
                  {151,9},
                  {atom,{151,9},underline},
                  [{var,{151,19},'Text'},
                   {var,{151,25},'StartCol'},
                   {block,0,
                       [{op,{151,55},
                            '+',
                            {call,
                                {151,35},
                                {remote,
                                    {151,41},
                                    {atom,{151,35},string},
                                    {atom,{151,42},length}},
                                [{var,{151,49},'Text'}]},
                            {integer,{151,57},1}}]}]}},
          {debug_line,152,68},
          {call,
              {152,5},
              {atom,{152,5},decorate},
              [{var,{152,14},'S'},
               {var,{152,17},'L'},
               {var,{152,20},'Ls'},
               {var,{152,24},'StartLine'},
               {var,{152,35},'StartCol'},
               {var,{152,45},'EndLine'},
               {var,{152,54},'EndCol'}]}]},
     {clause,
         {153,1},
         [{cons,
              {153,10},
              {match,
                  {153,11},
                  {tuple,
                      {153,11},
                      [{var,{153,12},'_Line'},{var,{153,19},'_Text'}]},
                  {var,{153,28},'L'}},
              {var,{153,32},'Ls'}},
          {var,{153,37},'StartLine'},
          {var,{153,48},'StartCol'},
          {var,{153,58},'EndLine'},
          {var,{153,67},'EndCol'}],
         [],
         [{debug_line,154,69},
          {cons,
              {154,5},
              {var,{154,6},'L'},
              {call,
                  {154,10},
                  {atom,{154,10},decorate},
                  [{var,{154,19},'Ls'},
                   {var,{154,23},'StartLine'},
                   {var,{154,34},'StartCol'},
                   {var,{154,44},'EndLine'},
                   {var,{154,53},'EndCol'}]}}]},
     {clause,
         {155,1},
         [{nil,{155,10}},
          {var,{155,14},'_StartLine'},
          {var,{155,26},'_StartCol'},
          {var,{155,37},'_EndLine'},
          {var,{155,47},'_EndCol'}],
         [],
         [{debug_line,156,70},{nil,{156,5}}]}]}.
{function,
    {159,1},
    decorate,7,
    [{clause,
         {159,1},
         [{var,{159,1},'_'},
          {var,{159,1},'_'},
          {var,{159,1},'_'},
          {var,{159,1},'_'},
          {var,{159,1},'_'},
          {var,{159,1},'_'},
          {var,{159,1},'_'}],
         [[{call,
               {159,1},
               {remote,
                   {159,1},
                   {atom,{159,1},fake},
                   {atom,{159,1},is_beam_bif_info}},
               []}]],
         [{debug_line,159,71},{atom,{159,1},ignore}]},
     {clause,
         {159,1},
         [{string,{159,10},[]},
          {var,{159,14},'L'},
          {var,{159,17},'Ls'},
          {var,{159,21},'StartLine'},
          {var,{159,32},'StartCol'},
          {var,{159,42},'EndLine'},
          {var,{159,51},'EndCol'}],
         [],
         [{debug_line,160,72},
          {cons,
              {160,5},
              {var,{160,6},'L'},
              {call,
                  {160,10},
                  {atom,{160,10},decorate},
                  [{var,{160,19},'Ls'},
                   {var,{160,23},'StartLine'},
                   {var,{160,34},'StartCol'},
                   {var,{160,44},'EndLine'},
                   {var,{160,53},'EndCol'}]}}]},
     {clause,
         {161,1},
         [{var,{161,10},'Text'},
          {match,
              {161,16},
              {tuple,{161,16},[{var,{161,17},'Line'},{var,{161,23},'_'}]},
              {var,{161,28},'L'}},
          {var,{161,31},'Ls'},
          {var,{161,35},'StartLine'},
          {var,{161,46},'StartCol'},
          {var,{161,56},'EndLine'},
          {var,{161,65},'EndCol'}],
         [],
         [{debug_line,162,73},
          {cons,
              {162,5},
              {var,{162,6},'L'},
              {cons,
                  {162,9},
                  {tuple,
                      {162,9},
                      [{op,{162,10},'-',{var,{162,11},'Line'}},
                       {var,{162,17},'Text'}]},
                  {call,
                      {162,25},
                      {atom,{162,25},decorate},
                      [{var,{162,34},'Ls'},
                       {var,{162,38},'StartLine'},
                       {var,{162,49},'StartCol'},
                       {var,{162,59},'EndLine'},
                       {var,{162,68},'EndCol'}]}}}]}]}.
{function,
    {167,1},
    underline,3,
    [{clause,
         {167,1},
         [{var,{167,1},'_'},{var,{167,1},'_'},{var,{167,1},'_'}],
         [[{call,
               {167,1},
               {remote,
                   {167,1},
                   {atom,{167,1},fake},
                   {atom,{167,1},is_beam_bif_info}},
               []}]],
         [{debug_line,167,74},{atom,{167,1},ignore}]},
     {clause,
         {167,1},
         [{var,{167,11},'_Text'},{var,{167,18},'Start'},{var,{167,25},'End'}],
         [[{op,{167,39},'<',{var,{167,35},'End'},{var,{167,41},'Start'}}]],
         [{debug_line,169,75},{string,{169,5},[]}]},
     {clause,
         {170,1},
         [{var,{170,11},'Text'},{var,{170,17},'Start'},{var,{170,24},'Start'}],
         [],
         [{debug_line,171,76},
          {call,
              {171,5},
              {atom,{171,5},underline},
              [{var,{171,15},'Text'},
               {var,{171,21},'Start'},
               {block,0,
                   [{op,{171,34},
                        '+',
                        {var,{171,28},'Start'},
                        {integer,{171,36},1}}]}]}]},
     {clause,
         {172,1},
         [{var,{172,11},'Text'},{var,{172,17},'Start'},{var,{172,24},'End'}],
         [],
         [{debug_line,173,77},
          {call,
              {173,5},
              {atom,{173,5},underline},
              [{var,{173,15},'Text'},
               {var,{173,21},'Start'},
               {var,{173,28},'End'},
               {integer,{173,33},1}]}]}]}.
{function,
    {175,1},
    underline,4,
    [{clause,
         {175,1},
         [{var,{175,1},'_'},
          {var,{175,1},'_'},
          {var,{175,1},'_'},
          {var,{175,1},'_'}],
         [[{call,
               {175,1},
               {remote,
                   {175,1},
                   {atom,{175,1},fake},
                   {atom,{175,1},is_beam_bif_info}},
               []}]],
         [{debug_line,175,78},{atom,{175,1},ignore}]},
     {clause,
         {175,1},
         [{cons,{175,11},{char,{175,12},9},{var,{175,18},'Text'}},
          {var,{175,25},'Start'},
          {var,{175,32},'End'},
          {var,{175,37},'N'}],
         [[{op,{175,47},'<',{var,{175,45},'N'},{var,{175,49},'Start'}}]],
         [{debug_line,176,79},
          {cons,
              {176,5},
              {char,{176,6},9},
              {call,
                  {176,12},
                  {atom,{176,12},underline},
                  [{var,{176,22},'Text'},
                   {var,{176,28},'Start'},
                   {var,{176,35},'End'},
                   {block,0,
                       [{op,{176,42},
                            '+',
                            {var,{176,40},'N'},
                            {integer,{176,44},1}}]}]}}]},
     {clause,
         {177,1},
         [{cons,{177,11},{var,{177,12},'_'},{var,{177,16},'Text'}},
          {var,{177,23},'Start'},
          {var,{177,30},'End'},
          {var,{177,35},'N'}],
         [[{op,{177,45},'<',{var,{177,43},'N'},{var,{177,47},'Start'}}]],
         [{debug_line,178,80},
          {cons,
              {178,5},
              {char,{178,6},32},
              {call,
                  {178,12},
                  {atom,{178,12},underline},
                  [{var,{178,22},'Text'},
                   {var,{178,28},'Start'},
                   {var,{178,35},'End'},
                   {block,0,
                       [{op,{178,42},
                            '+',
                            {var,{178,40},'N'},
                            {integer,{178,44},1}}]}]}}]},
     {clause,
         {179,1},
         [{var,{179,11},'_Text'},
          {var,{179,18},'_Start'},
          {var,{179,26},'End'},
          {var,{179,31},'N'}],
         [],
         [{debug_line,180,81},
          {call,
              {180,5},
              {atom,{180,5},underline_1},
              [{var,{180,17},'N'},{var,{180,20},'End'}]}]}]}.
{function,
    {182,1},
    underline_1,2,
    [{clause,
         {182,1},
         [{var,{182,1},'_'},{var,{182,1},'_'}],
         [[{call,
               {182,1},
               {remote,
                   {182,1},
                   {atom,{182,1},fake},
                   {atom,{182,1},is_beam_bif_info}},
               []}]],
         [{debug_line,182,82},{atom,{182,1},ignore}]},
     {clause,
         {182,1},
         [{var,{182,13},'N'},{var,{182,16},'End'}],
         [[{op,{182,28},'<',{var,{182,26},'N'},{var,{182,30},'End'}}]],
         [{debug_line,183,83},
          {cons,
              {183,5},
              {char,{183,6},94},
              {call,
                  {183,11},
                  {atom,{183,11},underline_1},
                  [{block,0,
                       [{op,{183,25},
                            '+',
                            {var,{183,23},'N'},
                            {integer,{183,27},1}}]},
                   {var,{183,30},'End'}]}}]},
     {clause,
         {184,1},
         [{var,{184,13},'_N'},{var,{184,17},'_End'}],
         [],
         [{debug_line,185,84},{string,{185,5},[]}]}]}.
{function,
    {187,1},
    seek_line,3,
    [{clause,
         {187,1},
         [{var,{187,1},'_'},{var,{187,1},'_'},{var,{187,1},'_'}],
         [[{call,
               {187,1},
               {remote,
                   {187,1},
                   {atom,{187,1},fake},
                   {atom,{187,1},is_beam_bif_info}},
               []}]],
         [{debug_line,187,85},{atom,{187,1},ignore}]},
     {clause,
         {187,1},
         [{var,{187,11},'Bin'},{var,{187,16},'L'},{var,{187,19},'L'}],
         [],
         [{debug_line,187,86},
          {tuple,{187,25},[{atom,{187,26},ok},{var,{187,30},'Bin'}]}]},
     {clause,
         {188,1},
         [{bin,
              {188,11},
              [{bin_element,{188,13},{char,{188,13},10},default,default},
               {bin_element,{188,18},{var,{188,18},'Rest'},default,[binary]}]},
          {var,{188,33},'N'},
          {var,{188,36},'L'}],
         [],
         [{debug_line,188,87},
          {call,
              {188,42},
              {atom,{188,42},seek_line},
              [{var,{188,52},'Rest'},
               {block,0,
                   [{op,{188,60},
                        '+',
                        {var,{188,58},'N'},
                        {integer,{188,62},1}}]},
               {var,{188,65},'L'}]}]},
     {clause,
         {189,1},
         [{bin,
              {189,11},
              [{bin_element,{189,13},{char,{189,13},13},default,default},
               {bin_element,{189,18},{char,{189,18},10},default,default},
               {bin_element,{189,23},{var,{189,23},'Rest'},default,[binary]}]},
          {var,{189,38},'N'},
          {var,{189,41},'L'}],
         [],
         [{debug_line,189,88},
          {call,
              {189,47},
              {atom,{189,47},seek_line},
              [{var,{189,57},'Rest'},
               {block,0,
                   [{op,{189,65},
                        '+',
                        {var,{189,63},'N'},
                        {integer,{189,67},1}}]},
               {var,{189,70},'L'}]}]},
     {clause,
         {190,1},
         [{bin,
              {190,11},
              [{bin_element,{190,13},{var,{190,13},'_'},default,default},
               {bin_element,{190,16},{var,{190,16},'Rest'},default,[binary]}]},
          {var,{190,31},'N'},
          {var,{190,34},'L'}],
         [],
         [{debug_line,190,89},
          {call,
              {190,40},
              {atom,{190,40},seek_line},
              [{var,{190,50},'Rest'},{var,{190,56},'N'},{var,{190,59},'L'}]}]},
     {clause,
         {191,1},
         [{bin,{191,11},[]},{var,{191,17},'_'},{var,{191,20},'_'}],
         [],
         [{debug_line,191,90},{atom,{191,26},error}]}]}.
{function,
    {193,1},
    take_lines,4,
    [{clause,
         {193,1},
         [{var,{193,1},'_'},
          {var,{193,1},'_'},
          {var,{193,1},'_'},
          {var,{193,1},'_'}],
         [[{call,
               {193,1},
               {remote,
                   {193,1},
                   {atom,{193,1},fake},
                   {atom,{193,1},is_beam_bif_info}},
               []}]],
         [{debug_line,193,91},{atom,{193,1},ignore}]},
     {clause,
         {193,1},
         [{bin,{193,12},[]},
          {var,{193,18},'_Enc'},
          {var,{193,24},'_Here'},
          {var,{193,31},'_To'}],
         [],
         [{debug_line,194,92},{nil,{194,5}}]},
     {clause,
         {195,1},
         [{var,{195,12},'Bin'},
          {var,{195,17},'Enc'},
          {var,{195,22},'Here'},
          {var,{195,28},'To'}],
         [[{op,{195,42},'=<',{var,{195,37},'Here'},{var,{195,45},'To'}}]],
         [{debug_line,196,93},
          {match,
              {196,5},
              {tuple,{196,5},[{var,{196,6},'Text'},{var,{196,12},'Rest'}]},
              {call,
                  {196,20},
                  {atom,{196,20},take_line},
                  [{var,{196,30},'Bin'},{block,0,[{bin,{196,35},[]}]}]}},
          {debug_line,197,94},
          {cons,
              {197,5},
              {tuple,
                  {197,6},
                  [{var,{197,7},'Here'},
                   {call,
                       {197,13},
                       {atom,{197,13},text_to_string},
                       [{var,{197,28},'Text'},{var,{197,34},'Enc'}]}]},
              {call,
                  {198,8},
                  {atom,{198,8},take_lines},
                  [{var,{198,19},'Rest'},
                   {var,{198,25},'Enc'},
                   {block,0,
                       [{debug_line,198,95},
                        {op,{198,35},
                            '+',
                            {var,{198,30},'Here'},
                            {integer,{198,37},1}}]},
                   {var,{198,40},'To'}]}}]},
     {clause,
         {199,1},
         [{var,{199,12},'_Bin'},
          {var,{199,18},'_Enc'},
          {var,{199,24},'_Here'},
          {var,{199,31},'_To'}],
         [],
         [{debug_line,200,96},{nil,{200,5}}]}]}.
{function,
    {202,1},
    text_to_string,2,
    [{clause,
         {202,1},
         [{var,{202,1},'_'},{var,{202,1},'_'}],
         [[{call,
               {202,1},
               {remote,
                   {202,1},
                   {atom,{202,1},fake},
                   {atom,{202,1},is_beam_bif_info}},
               []}]],
         [{debug_line,202,97},{atom,{202,1},ignore}]},
     {clause,
         {202,1},
         [{var,{202,16},'Text'},{var,{202,22},'Enc'}],
         [],
         [{debug_line,203,98},
          {'case',
              {203,5},
              {call,
                  {203,10},
                  {remote,
                      {203,17},
                      {atom,{203,10},unicode},
                      {atom,{203,18},characters_to_list}},
                  [{var,{203,37},'Text'},{var,{203,43},'Enc'}]},
              [{clause,
                   {204,9},
                   [{var,{204,9},'String'}],
                   [[{call,
                         {204,21},
                         {remote,
                             {204,21},
                             {atom,{204,21},erlang},
                             {atom,{204,21},is_list}},
                         [{var,{204,29},'String'}]}]],
                   [{debug_line,204,99},{var,{204,40},'String'}]},
               {clause,
                   {205,9},
                   [{tuple,
                        {205,9},
                        [{atom,{205,10},error},
                         {var,{205,17},'String'},
                         {var,{205,25},'_Rest'}]}],
                   [],
                   [{debug_line,205,100},{var,{205,35},'String'}]},
               {clause,
                   {206,9},
                   [{tuple,
                        {206,9},
                        [{atom,{206,10},incomplete},
                         {var,{206,22},'String'},
                         {var,{206,30},'_Rest'}]}],
                   [],
                   [{debug_line,206,101},{var,{206,40},'String'}]}]}]}]}.
{function,
    {209,1},
    take_line,2,
    [{clause,
         {209,1},
         [{var,{209,1},'_'},{var,{209,1},'_'}],
         [[{call,
               {209,1},
               {remote,
                   {209,1},
                   {atom,{209,1},fake},
                   {atom,{209,1},is_beam_bif_info}},
               []}]],
         [{debug_line,209,102},{atom,{209,1},ignore}]},
     {clause,
         {209,1},
         [{bin,
              {209,11},
              [{bin_element,{209,13},{char,{209,13},10},default,default},
               {bin_element,{209,18},{var,{209,18},'Rest'},default,[binary]}]},
          {var,{209,33},'Ack'}],
         [],
         [{debug_line,210,103},
          {tuple,{210,5},[{var,{210,6},'Ack'},{var,{210,11},'Rest'}]}]},
     {clause,
         {211,1},
         [{bin,
              {211,11},
              [{bin_element,{211,13},{char,{211,13},13},default,default},
               {bin_element,{211,18},{char,{211,18},10},default,default},
               {bin_element,{211,23},{var,{211,23},'Rest'},default,[binary]}]},
          {var,{211,38},'Ack'}],
         [],
         [{debug_line,212,104},
          {tuple,{212,5},[{var,{212,6},'Ack'},{var,{212,11},'Rest'}]}]},
     {clause,
         {213,1},
         [{bin,
              {213,11},
              [{bin_element,{213,13},{var,{213,13},'B'},default,default},
               {bin_element,{213,16},{var,{213,16},'Rest'},default,[binary]}]},
          {var,{213,31},'Ack'}],
         [],
         [{debug_line,214,105},
          {call,
              {214,5},
              {atom,{214,5},take_line},
              [{var,{214,15},'Rest'},
               {block,0,
                   [{bin,
                        {214,21},
                        [{bin_element,
                             {214,23},
                             {var,{214,23},'Ack'},
                             default,
                             [binary]},
                         {bin_element,
                             {214,35},
                             {var,{214,35},'B'},
                             default,default}]}]}]}]},
     {clause,
         {215,1},
         [{bin,{215,11},[]},{var,{215,17},'Ack'}],
         [],
         [{debug_line,216,106},
          {tuple,{216,5},[{var,{216,6},'Ack'},{bin,{216,11},[]}]}]}]}.
{eof,{217,1}}.
