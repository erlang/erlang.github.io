{attribute,{1,1},file,{"sys_core_alias.erl",1}}.
{attribute,{39,2},module,sys_core_alias}.
{attribute,{42,2},export,[{module,2}]}.
{attribute,{1,1},file,{"core_parse.hrl",1}}.
{attribute,
    {32,2},
    record,
    {c_alias,
        [{typed_record_field,
             {record_field,{32,19},{atom,{32,19},anno},{nil,{32,24}}},
             {type,{32,30},list,[]}},
         {typed_record_field,
             {record_field,{32,38},{atom,{32,38},var}},
             {remote_type,
                 {32,45},
                 [{atom,{32,45},cerl},{atom,{32,50},cerl},[]]}},
         {typed_record_field,
             {record_field,{33,5},{atom,{33,5},pat}},
             {remote_type,
                 {33,12},
                 [{atom,{33,12},cerl},{atom,{33,17},cerl},[]]}}]}}.
{attribute,
    {35,2},
    record,
    {c_apply,
        [{typed_record_field,
             {record_field,{35,19},{atom,{35,19},anno},{nil,{35,24}}},
             {type,{35,30},list,[]}},
         {typed_record_field,
             {record_field,{35,38},{atom,{35,38},op}},
             {remote_type,
                 {35,44},
                 [{atom,{35,44},cerl},{atom,{35,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{36,5},{atom,{36,5},args}},
             {type,
                 {36,13},
                 list,
                 [{remote_type,
                      {36,14},
                      [{atom,{36,14},cerl},{atom,{36,19},cerl},[]]}]}}]}}.
{attribute,
    {38,2},
    record,
    {c_binary,
        [{typed_record_field,
             {record_field,{38,20},{atom,{38,20},anno},{nil,{38,25}}},
             {type,{38,31},list,[]}},
         {typed_record_field,
             {record_field,{38,39},{atom,{38,39},segments}},
             {type,
                 {38,51},
                 list,
                 [{remote_type,
                      {38,52},
                      [{atom,{38,52},cerl},{atom,{38,57},c_bitstr},[]]}]}}]}}.
{attribute,
    {40,2},
    record,
    {c_bitstr,
        [{typed_record_field,
             {record_field,{40,20},{atom,{40,20},anno},{nil,{40,25}}},
             {type,{40,31},list,[]}},
         {typed_record_field,
             {record_field,{40,39},{atom,{40,39},val}},
             {remote_type,
                 {40,46},
                 [{atom,{40,46},cerl},{atom,{40,51},cerl},[]]}},
         {typed_record_field,
             {record_field,{41,6},{atom,{41,6},size}},
             {remote_type,
                 {41,14},
                 [{atom,{41,14},cerl},{atom,{41,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{42,6},{atom,{42,6},unit}},
             {remote_type,
                 {42,14},
                 [{atom,{42,14},cerl},{atom,{42,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{43,6},{atom,{43,6},type}},
             {remote_type,
                 {43,14},
                 [{atom,{43,14},cerl},{atom,{43,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{44,6},{atom,{44,6},flags}},
             {remote_type,
                 {44,15},
                 [{atom,{44,15},cerl},{atom,{44,20},cerl},[]]}}]}}.
{attribute,
    {46,2},
    record,
    {c_call,
        [{typed_record_field,
             {record_field,{46,18},{atom,{46,18},anno},{nil,{46,23}}},
             {type,{46,29},list,[]}},
         {typed_record_field,
             {record_field,{46,37},{atom,{46,37},module}},
             {remote_type,
                 {46,47},
                 [{atom,{46,47},cerl},{atom,{46,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{47,4},{atom,{47,4},name}},
             {remote_type,
                 {47,12},
                 [{atom,{47,12},cerl},{atom,{47,17},cerl},[]]}},
         {typed_record_field,
             {record_field,{48,4},{atom,{48,4},args}},
             {type,
                 {48,12},
                 list,
                 [{remote_type,
                      {48,13},
                      [{atom,{48,13},cerl},{atom,{48,18},cerl},[]]}]}}]}}.
{attribute,
    {50,2},
    record,
    {c_case,
        [{typed_record_field,
             {record_field,{50,18},{atom,{50,18},anno},{nil,{50,23}}},
             {type,{50,29},list,[]}},
         {typed_record_field,
             {record_field,{50,37},{atom,{50,37},arg}},
             {remote_type,
                 {50,44},
                 [{atom,{50,44},cerl},{atom,{50,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{51,4},{atom,{51,4},clauses}},
             {type,
                 {51,15},
                 list,
                 [{remote_type,
                      {51,16},
                      [{atom,{51,16},cerl},{atom,{51,21},cerl},[]]}]}}]}}.
{attribute,
    {53,2},
    record,
    {c_catch,
        [{typed_record_field,
             {record_field,{53,19},{atom,{53,19},anno},{nil,{53,24}}},
             {type,{53,30},list,[]}},
         {typed_record_field,
             {record_field,{53,38},{atom,{53,38},body}},
             {remote_type,
                 {53,46},
                 [{atom,{53,46},cerl},{atom,{53,51},cerl},[]]}}]}}.
{attribute,
    {55,2},
    record,
    {c_clause,
        [{typed_record_field,
             {record_field,{55,20},{atom,{55,20},anno},{nil,{55,25}}},
             {type,{55,31},list,[]}},
         {typed_record_field,
             {record_field,{55,39},{atom,{55,39},pats}},
             {type,
                 {55,47},
                 list,
                 [{remote_type,
                      {55,48},
                      [{atom,{55,48},cerl},{atom,{55,53},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{56,6},{atom,{56,6},guard}},
             {remote_type,
                 {56,15},
                 [{atom,{56,15},cerl},{atom,{56,20},cerl},[]]}},
         {typed_record_field,
             {record_field,{57,6},{atom,{57,6},body}},
             {type,
                 {57,14},
                 union,
                 [{remote_type,
                      {57,14},
                      [{atom,{57,14},cerl},{atom,{57,19},cerl},[]]},
                  {type,{57,28},any,[]}]}}]}}.
{attribute,
    {59,2},
    record,
    {c_cons,
        [{typed_record_field,
             {record_field,{59,18},{atom,{59,18},anno},{nil,{59,23}}},
             {type,{59,29},list,[]}},
         {typed_record_field,
             {record_field,{59,37},{atom,{59,37},hd}},
             {remote_type,
                 {59,43},
                 [{atom,{59,43},cerl},{atom,{59,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{60,4},{atom,{60,4},tl}},
             {remote_type,
                 {60,10},
                 [{atom,{60,10},cerl},{atom,{60,15},cerl},[]]}}]}}.
{attribute,
    {62,2},
    record,
    {c_fun,
        [{typed_record_field,
             {record_field,{62,17},{atom,{62,17},anno},{nil,{62,22}}},
             {type,{62,28},list,[]}},
         {typed_record_field,
             {record_field,{62,36},{atom,{62,36},vars}},
             {type,
                 {62,44},
                 list,
                 [{remote_type,
                      {62,45},
                      [{atom,{62,45},cerl},{atom,{62,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{63,3},{atom,{63,3},body}},
             {remote_type,
                 {63,11},
                 [{atom,{63,11},cerl},{atom,{63,16},cerl},[]]}}]}}.
{attribute,
    {65,2},
    record,
    {c_let,
        [{typed_record_field,
             {record_field,{65,17},{atom,{65,17},anno},{nil,{65,22}}},
             {type,{65,28},list,[]}},
         {typed_record_field,
             {record_field,{65,36},{atom,{65,36},vars}},
             {type,
                 {65,44},
                 list,
                 [{remote_type,
                      {65,45},
                      [{atom,{65,45},cerl},{atom,{65,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{66,3},{atom,{66,3},arg}},
             {remote_type,
                 {66,10},
                 [{atom,{66,10},cerl},{atom,{66,15},cerl},[]]}},
         {typed_record_field,
             {record_field,{67,3},{atom,{67,3},body}},
             {remote_type,
                 {67,11},
                 [{atom,{67,11},cerl},{atom,{67,16},cerl},[]]}}]}}.
{attribute,
    {69,2},
    record,
    {c_letrec,
        [{typed_record_field,
             {record_field,{69,20},{atom,{69,20},anno},{nil,{69,25}}},
             {type,{69,31},list,[]}},
         {typed_record_field,
             {record_field,{70,20},{atom,{70,20},defs}},
             {type,
                 {70,28},
                 list,
                 [{type,
                      {70,29},
                      tuple,
                      [{remote_type,
                           {70,30},
                           [{atom,{70,30},cerl},{atom,{70,35},cerl},[]]},
                       {remote_type,
                           {70,43},
                           [{atom,{70,43},cerl},{atom,{70,48},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{71,6},{atom,{71,6},body}},
             {remote_type,
                 {71,14},
                 [{atom,{71,14},cerl},{atom,{71,19},cerl},[]]}}]}}.
{attribute,
    {73,2},
    record,
    {c_literal,
        [{typed_record_field,
             {record_field,{73,21},{atom,{73,21},anno},{nil,{73,26}}},
             {type,{73,32},list,[]}},
         {typed_record_field,
             {record_field,{73,40},{atom,{73,40},val}},
             {type,{73,47},any,[]}}]}}.
{attribute,
    {75,2},
    record,
    {c_map,
        [{typed_record_field,
             {record_field,{75,17},{atom,{75,17},anno},{nil,{75,22}}},
             {type,{75,28},list,[]}},
         {typed_record_field,
             {record_field,
                 {76,3},
                 {atom,{76,3},arg},
                 {record,
                     {76,7},
                     c_literal,
                     [{record_field,
                          {76,18},
                          {atom,{76,18},val},
                          {map,{76,22},[]}}]}},
             {type,
                 {76,30},
                 union,
                 [{remote_type,
                      {76,30},
                      [{atom,{76,30},cerl},{atom,{76,35},c_var},[]]},
                  {remote_type,
                      {76,45},
                      [{atom,{76,45},cerl},{atom,{76,50},c_literal},[]]}]}},
         {typed_record_field,
             {record_field,{77,3},{atom,{77,3},es}},
             {type,
                 {77,9},
                 list,
                 [{remote_type,
                      {77,10},
                      [{atom,{77,10},cerl},{atom,{77,15},c_map_pair},[]]}]}},
         {typed_record_field,
             {record_field,{78,3},{atom,{78,3},is_pat},{atom,{78,10},false}},
             {type,{78,19},boolean,[]}}]}}.
{attribute,
    {80,2},
    record,
    {c_map_pair,
        [{typed_record_field,
             {record_field,{80,22},{atom,{80,22},anno},{nil,{80,27}}},
             {type,{80,33},list,[]}},
         {typed_record_field,
             {record_field,{81,15},{atom,{81,15},op}},
             {type,
                 {81,21},
                 union,
                 [{type,
                      {81,21},
                      record,
                      [{atom,{81,22},c_literal},
                       {type,
                           {81,32},
                           field_type,
                           [{atom,{81,32},val},{atom,{81,37},assoc}]}]},
                  {type,
                      {81,48},
                      record,
                      [{atom,{81,49},c_literal},
                       {type,
                           {81,59},
                           field_type,
                           [{atom,{81,59},val},{atom,{81,64},exact}]}]}]}},
         {typed_record_field,
             {record_field,{82,8},{atom,{82,8},key}},
             {type,{82,15},any,[]}},
         {typed_record_field,
             {record_field,{83,8},{atom,{83,8},val}},
             {type,{83,15},any,[]}}]}}.
{attribute,
    {85,2},
    record,
    {c_module,
        [{typed_record_field,
             {record_field,{85,20},{atom,{85,20},anno},{nil,{85,25}}},
             {type,{85,31},list,[]}},
         {typed_record_field,
             {record_field,{85,39},{atom,{85,39},name}},
             {remote_type,
                 {85,47},
                 [{atom,{85,47},cerl},{atom,{85,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{86,6},{atom,{86,6},exports}},
             {type,
                 {86,17},
                 list,
                 [{remote_type,
                      {86,18},
                      [{atom,{86,18},cerl},{atom,{86,23},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{87,6},{atom,{87,6},attrs}},
             {type,
                 {87,15},
                 list,
                 [{type,
                      {87,16},
                      tuple,
                      [{remote_type,
                           {87,17},
                           [{atom,{87,17},cerl},{atom,{87,22},cerl},[]]},
                       {remote_type,
                           {87,30},
                           [{atom,{87,30},cerl},{atom,{87,35},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{88,6},{atom,{88,6},defs}},
             {type,
                 {88,14},
                 list,
                 [{type,
                      {88,15},
                      tuple,
                      [{remote_type,
                           {88,16},
                           [{atom,{88,16},cerl},{atom,{88,21},cerl},[]]},
                       {remote_type,
                           {88,29},
                           [{atom,{88,29},cerl},
                            {atom,{88,34},cerl},
                            []]}]}]}}]}}.
{attribute,
    {90,2},
    record,
    {c_opaque,
        [{typed_record_field,
             {record_field,{90,20},{atom,{90,20},anno},{nil,{90,25}}},
             {type,{90,31},list,[]}},
         {typed_record_field,
             {record_field,{90,39},{atom,{90,39},val}},
             {type,{90,46},any,[]}}]}}.
{attribute,
    {92,2},
    record,
    {c_primop,
        [{typed_record_field,
             {record_field,{92,20},{atom,{92,20},anno},{nil,{92,25}}},
             {type,{92,31},list,[]}},
         {typed_record_field,
             {record_field,{92,39},{atom,{92,39},name}},
             {remote_type,
                 {92,47},
                 [{atom,{92,47},cerl},{atom,{92,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{93,6},{atom,{93,6},args}},
             {type,
                 {93,14},
                 list,
                 [{remote_type,
                      {93,15},
                      [{atom,{93,15},cerl},{atom,{93,20},cerl},[]]}]}}]}}.
{attribute,
    {95,2},
    record,
    {c_receive,
        [{typed_record_field,
             {record_field,{95,21},{atom,{95,21},anno},{nil,{95,26}}},
             {type,{95,32},list,[]}},
         {typed_record_field,
             {record_field,{95,40},{atom,{95,40},clauses}},
             {type,
                 {95,51},
                 list,
                 [{remote_type,
                      {95,52},
                      [{atom,{95,52},cerl},{atom,{95,57},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{96,7},{atom,{96,7},timeout}},
             {remote_type,
                 {96,18},
                 [{atom,{96,18},cerl},{atom,{96,23},cerl},[]]}},
         {typed_record_field,
             {record_field,{97,7},{atom,{97,7},action}},
             {remote_type,
                 {97,17},
                 [{atom,{97,17},cerl},{atom,{97,22},cerl},[]]}}]}}.
{attribute,
    {99,2},
    record,
    {c_seq,
        [{typed_record_field,
             {record_field,{99,17},{atom,{99,17},anno},{nil,{99,22}}},
             {type,{99,28},list,[]}},
         {typed_record_field,
             {record_field,{99,36},{atom,{99,36},arg}},
             {type,
                 {99,43},
                 union,
                 [{remote_type,
                      {99,43},
                      [{atom,{99,43},cerl},{atom,{99,48},cerl},[]]},
                  {type,{99,57},any,[]}]}},
         {typed_record_field,
             {record_field,{100,3},{atom,{100,3},body}},
             {remote_type,
                 {100,11},
                 [{atom,{100,11},cerl},{atom,{100,16},cerl},[]]}}]}}.
{attribute,
    {102,2},
    record,
    {c_try,
        [{typed_record_field,
             {record_field,{102,17},{atom,{102,17},anno},{nil,{102,22}}},
             {type,{102,28},list,[]}},
         {typed_record_field,
             {record_field,{102,36},{atom,{102,36},arg}},
             {remote_type,
                 {102,43},
                 [{atom,{102,43},cerl},{atom,{102,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{103,3},{atom,{103,3},vars}},
             {type,
                 {103,11},
                 list,
                 [{remote_type,
                      {103,12},
                      [{atom,{103,12},cerl},{atom,{103,17},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{104,3},{atom,{104,3},body}},
             {remote_type,
                 {104,11},
                 [{atom,{104,11},cerl},{atom,{104,16},cerl},[]]}},
         {typed_record_field,
             {record_field,{105,3},{atom,{105,3},evars}},
             {type,
                 {105,12},
                 list,
                 [{remote_type,
                      {105,13},
                      [{atom,{105,13},cerl},{atom,{105,18},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{106,3},{atom,{106,3},handler}},
             {remote_type,
                 {106,14},
                 [{atom,{106,14},cerl},{atom,{106,19},cerl},[]]}}]}}.
{attribute,
    {108,2},
    record,
    {c_tuple,
        [{typed_record_field,
             {record_field,{108,19},{atom,{108,19},anno},{nil,{108,24}}},
             {type,{108,30},list,[]}},
         {typed_record_field,
             {record_field,{108,38},{atom,{108,38},es}},
             {type,
                 {108,44},
                 list,
                 [{remote_type,
                      {108,45},
                      [{atom,{108,45},cerl},{atom,{108,50},cerl},[]]}]}}]}}.
{attribute,
    {110,2},
    record,
    {c_values,
        [{typed_record_field,
             {record_field,{110,20},{atom,{110,20},anno},{nil,{110,25}}},
             {type,{110,31},list,[]}},
         {typed_record_field,
             {record_field,{110,39},{atom,{110,39},es}},
             {type,
                 {110,45},
                 list,
                 [{remote_type,
                      {110,46},
                      [{atom,{110,46},cerl},{atom,{110,51},cerl},[]]}]}}]}}.
{attribute,
    {112,2},
    record,
    {c_var,
        [{typed_record_field,
             {record_field,{112,17},{atom,{112,17},anno},{nil,{112,22}}},
             {type,{112,28},list,[]}},
         {typed_record_field,
             {record_field,{112,36},{atom,{112,36},name}},
             {remote_type,
                 {112,44},
                 [{atom,{112,44},cerl},{atom,{112,49},var_name},[]]}}]}}.
{attribute,{45,1},file,{"sys_core_alias.erl",45}}.
{attribute,
    {49,2},
    record,
    {sub,
        [{typed_record_field,
             {record_field,{49,15},{atom,{49,15},p},{map,{49,17},[]}},
             {type,
                 {49,24},
                 map,
                 [{type,
                      {49,33},
                      map_field_assoc,
                      [{type,{49,26},term,[]},
                       {type,
                           {49,37},
                           union,
                           [{integer,{49,37},0},{type,{49,46},atom,[]}]}]}]}},
         {typed_record_field,
             {record_field,
                 {50,15},
                 {atom,{50,15},v},
                 {call,
                     {50,17},
                     {remote,{50,21},{atom,{50,17},sets},{atom,{50,22},new}},
                     []}},
             {remote_type,
                 {50,31},
                 [{atom,{50,31},sets},
                  {atom,{50,36},set},
                  [{remote_type,
                       {50,40},
                       [{atom,{50,40},cerl},{atom,{50,45},var_name},[]]}]]}},
         {typed_record_field,
             {record_field,{51,15},{atom,{51,15},t},{atom,{51,17},none}},
             {user_type,{51,25},temp,[]}}]}}.
{attribute,{53,2},type,{sub,{type,{53,16},record,[{atom,{53,17},sub}]},[]}}.
{attribute,
    {64,2},
    type,
    {temp,
        {type,
            {65,9},
            union,
            [{atom,{65,9},none},
             {type,
                 {66,11},
                 tuple,
                 [{atom,{66,12},temp},{user_type,{66,18},temp,[]}]},
             {type,
                 {67,11},
                 tuple,
                 [{atom,{67,12},sub},{user_type,{67,17},sub,[]}]},
             {type,
                 {68,11},
                 tuple,
                 [{atom,{68,12},clause},
                  {type,{68,20},list,[{type,{68,21},term,[]}]},
                  {type,{68,30},list,[{type,{68,31},term,[]}]},
                  {remote_type,
                      {68,40},
                      [{atom,{68,40},sets},
                       {atom,{68,45},set},
                       [{remote_type,
                            {68,49},
                            [{atom,{68,49},cerl},
                             {atom,{68,54},var_name},
                             []]}]]},
                  {user_type,{68,67},temp,[]}]}]},
        []}}.
{attribute,
    {70,2},
    spec,
    {{module,2},
     [{type,
          {70,13},
          'fun',
          [{type,
               {70,13},
               product,
               [{remote_type,
                    {70,14},
                    [{atom,{70,14},cerl},{atom,{70,19},c_module},[]]},
                {type,
                    {70,31},
                    list,
                    [{remote_type,
                         {70,32},
                         [{atom,{70,32},compile},
                          {atom,{70,40},option},
                          []]}]}]},
           {type,
               {71,9},
               tuple,
               [{atom,{71,10},ok},
                {remote_type,
                    {71,15},
                    [{atom,{71,15},cerl},{atom,{71,20},c_module},[]]},
                {type,{71,31},nil,[]}]}]}]}}.
{function,
 {73,1},
 module,2,
 [{clause,
   {73,1},
   [{var,{73,1},'_'},{var,{73,1},'_'}],
   [[{call,
      {73,1},
      {remote,{73,1},{atom,{73,1},fake},{atom,{73,1},is_beam_bif_info}},
      []}]],
   [{debug_line,73,1},{atom,{73,1},ignore}]},
  {clause,
   {73,1},
   [{match,
     {73,8},
     {tuple,
      {73,8},
      [{atom,{73,8},c_module},
       {var,{73,8},'_'},
       {var,{73,8},'_'},
       {var,{73,8},'_'},
       {var,{73,8},'_'},
       {var,{73,23},'Ds0'}]},
     {var,{73,28},'Mod'}},
    {var,{73,33},'_Opts'}],
   [],
   [{debug_line,74,2},
    {match,
     {74,5},
     {var,{74,5},'Ds1'},
     {lc,
      {74,11},
      {block,0,[{call,{74,12},{atom,{74,12},def},[{var,{74,16},'D'}]}]},
      [{block,0,[{atom,{74,27},true}]},
       {generate,{74,24},{var,{74,22},'D'},{var,{74,27},'Ds0'}}]}},
    {debug_line,75,3},
    {tuple,
     {75,5},
     [{atom,{75,6},ok},
      {block,
       {75,9},
       [{match,{75,9},{var,{75,9},rec0},{var,{75,9},'Mod'}},
        {'case',
         {75,22},
         {var,{75,9},rec0},
         [{clause,
           {75,22},
           [{tuple,
             {75,22},
             [{atom,{75,22},c_module},
              {var,{75,22},'_'},
              {var,{75,22},'_'},
              {var,{75,22},'_'},
              {var,{75,22},'_'},
              {var,{75,22},'_'}]}],
           [],
           [{call,
             {75,22},
             {remote,{75,22},{atom,{75,22},erlang},{atom,{75,22},setelement}},
             [{integer,{75,22},6},{var,{75,9},rec0},{var,{75,27},'Ds1'}]}]},
          {clause,
           [{generated,true},{location,{75,22}}],
           [{var,[{generated,true},{location,{75,22}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{75,22}}],
             {remote,
              [{generated,true},{location,{75,22}}],
              {atom,[{generated,true},{location,{75,22}}],erlang},
              {atom,[{generated,true},{location,{75,22}}],error}},
             [{tuple,
               [{generated,true},{location,{75,22}}],
               [{atom,[{generated,true},{location,{75,22}}],badrecord},
                {var,{75,9},rec0}]}]}]}]}]},
      {nil,{75,32}}]}]}]}.
{function,
    {77,1},
    def,1,
    [{clause,
         {77,1},
         [{var,{77,1},'_'}],
         [[{call,
               {77,1},
               {remote,
                   {77,1},
                   {atom,{77,1},fake},
                   {atom,{77,1},is_beam_bif_info}},
               []}]],
         [{debug_line,77,4},{atom,{77,1},ignore}]},
     {clause,
         {77,1},
         [{tuple,
              {77,5},
              [{match,
                   {77,6},
                   {tuple,
                       {77,6},
                       [{atom,{77,6},c_var},
                        {var,{77,6},'_'},
                        {tuple,
                            {77,18},
                            [{var,{77,19},'F'},{var,{77,21},'Arity'}]}]},
                   {var,{77,29},'Name'}},
               {var,{77,34},'B0'}]}],
         [],
         [{debug_line,78,5},
          {'try',
              {78,5},
              [{debug_line,79,6},
               {call,
                   {79,9},
                   {remote,{79,9},{atom,{79,9},erlang},{atom,{79,9},put}},
                   [{atom,{79,13},new_var_num},{integer,{79,26},0}]},
               {debug_line,80,7},
               {match,
                   {80,9},
                   {tuple,{80,9},[{var,{80,10},'B1'},{var,{80,13},'_'}]},
                   {call,
                       {80,18},
                       {remote,
                           {80,28},
                           {atom,{80,18},cerl_trees},
                           {atom,{80,29},mapfold}},
                       [{block,0,[{'fun',{80,37},{function,pre,2}}]},
                        {block,0,[{'fun',{80,48},{function,post,2}}]},
                        {block,0,
                            [{call,
                                 {80,60},
                                 {atom,{80,60},sub_new},
                                 [{atom,{80,68},none}]}]},
                        {var,{80,75},'B0'}]}},
               {debug_line,81,8},
               {call,
                   {81,9},
                   {remote,{81,9},{atom,{81,9},erlang},{atom,{81,9},erase}},
                   [{atom,{81,15},new_var_num}]},
               {debug_line,82,9},
               {tuple,{82,9},[{var,{82,10},'Name'},{var,{82,15},'B1'}]}],
              [],
              [{clause,
                   {84,9},
                   [{tuple,
                        {84,9},
                        [{var,{84,9},'Class'},
                         {var,{84,15},'Error'},
                         {var,{84,21},'Stack'}]}],
                   [],
                   [{debug_line,85,10},
                    {call,
                        {85,13},
                        {remote,
                            {85,15},
                            {atom,{85,13},io},
                            {atom,{85,16},fwrite}},
                        [{block,0,[{string,{85,23},"Function: ~w/~w\n"}]},
                         {block,0,
                             [{cons,
                                  {85,44},
                                  {var,{85,45},'F'},
                                  {cons,
                                      {85,47},
                                      {var,{85,47},'Arity'},
                                      {nil,{85,52}}}}]}]},
                    {debug_line,86,11},
                    {call,
                        {86,13},
                        {remote,
                            {86,19},
                            {atom,{86,13},erlang},
                            {atom,{86,20},raise}},
                        [{var,{86,26},'Class'},
                         {var,{86,33},'Error'},
                         {var,{86,40},'Stack'}]}]}],
              []}]}]}.
{function,
 {89,1},
 pre,2,
 [{clause,
   {89,1},
   [{var,{89,1},'_'},{var,{89,1},'_'}],
   [[{call,
      {89,1},
      {remote,{89,1},{atom,{89,1},fake},{atom,{89,1},is_beam_bif_info}},
      []}]],
   [{debug_line,89,12},{atom,{89,1},ignore}]},
  {clause,
   {89,1},
   [{match,
     {89,5},
     {tuple,
      {89,5},
      [{atom,{89,5},c_clause},
       {var,{89,5},'_'},
       {var,{89,20},'Pats'},
       {var,{89,5},'_'},
       {var,{89,5},'_'}]},
     {var,{89,26},'Node'}},
    {var,{89,32},'Sub0'}],
   [],
   [{debug_line,90,13},
    {'case',
     {90,5},
     {call,{90,10},{atom,{90,10},get_pattern_keys},[{var,{90,27},'Pats'}]},
     [{clause,
       {91,9},
       [{nil,{91,9}}],
       [[{op,
          [{generated,true},{location,{91,27}}],
          'and',
          {op,
           [{generated,true},{location,{91,27}}],
           'orelse',
           {call,
            [{generated,true},{location,{91,27}}],
            {remote,
             [{generated,true},{location,{91,27}}],
             {atom,[{generated,true},{location,{91,27}}],erlang},
             {atom,[{generated,true},{location,{91,27}}],is_record}},
            [{var,{91,27},'Sub0'},
             {atom,[{generated,true},{location,{91,27}}],sub},
             {integer,[{generated,true},{location,{91,27}}],4}]},
           {atom,[{generated,true},{location,{91,27}}],fail}},
          {op,
           {91,27},
           '=/=',
           {call,
            {91,27},
            {remote,{91,27},{atom,{91,27},erlang},{atom,{91,27},element}},
            [{integer,{91,27},4},{var,{91,27},'Sub0'}]},
           {atom,{91,27},none}}}]],
       [{debug_line,92,14},
        {match,
         {92,13},
         {var,{92,13},'VarNames'},
         {call,{92,24},{atom,{92,24},get_variables},[{var,{92,38},'Pats'}]}},
        {debug_line,93,15},
        {tuple,
         {93,13},
         [{var,{93,14},'Node'},
          {call,
           {93,19},
           {atom,{93,19},sub_fold},
           [{var,{93,28},'VarNames'},{var,{93,38},'Sub0'}]}]}]},
      {clause,
       {94,9},
       [{nil,{94,9}}],
       [],
       [{debug_line,95,16},
        {tuple,{95,13},[{var,{95,14},'Node'},{var,{95,19},'Sub0'}]}]},
      {clause,
       {96,9},
       [{var,{96,9},'Keys'}],
       [],
       [{debug_line,97,17},
        {match,
         {97,13},
         {var,{97,13},'VarNames'},
         {call,{97,24},{atom,{97,24},get_variables},[{var,{97,38},'Pats'}]}},
        {debug_line,98,18},
        {match,
         {98,13},
         {var,{98,13},'Sub1'},
         {call,
          {98,20},
          {atom,{98,20},sub_fold},
          [{var,{98,29},'VarNames'},{var,{98,39},'Sub0'}]}},
        {debug_line,99,19},
        {match,
         {99,13},
         {var,{99,13},'Sub2'},
         {call,
          {99,20},
          {atom,{99,20},sub_add_keys},
          [{var,{99,33},'Keys'},{var,{99,39},'Sub1'}]}},
        {debug_line,100,20},
        {match,
         {100,13},
         {tuple,
          {100,13},
          [{atom,{100,13},sub},
           {var,{100,13},'_'},
           {var,{100,20},'SubNames'},
           {var,{100,31},'Temp'}]},
         {var,{100,39},'Sub2'}},
        {debug_line,101,21},
        {match,
         {101,13},
         {var,{101,13},'Sub3'},
         {block,
          {101,20},
          [{match,
            {101,29},
            {var,{101,29},rec1},
            {call,
             {101,31},
             {atom,{101,31},merge_variables},
             [{var,{101,47},'VarNames'},{var,{101,57},'SubNames'}]}},
           {match,
            {102,29},
            {var,{102,29},rec2},
            {tuple,
             {102,31},
             [{atom,{102,32},clause},
              {var,{102,39},'Pats'},
              {var,{102,44},'Keys'},
              {var,{102,49},'SubNames'},
              {var,{102,58},'Temp'}]}},
           {match,{101,20},{var,{101,20},rec3},{var,{101,20},'Sub2'}},
           {'case',
            {101,29},
            {var,{101,20},rec3},
            [{clause,
              {101,29},
              [{tuple,
                {101,29},
                [{atom,{101,29},sub},
                 {var,{101,29},'_'},
                 {var,{101,29},'_'},
                 {var,{101,29},'_'}]}],
              [],
              [{call,
                {101,29},
                {remote,
                 {101,29},
                 {atom,{101,29},erlang},
                 {atom,{101,29},setelement}},
                [{integer,{101,29},3},
                 {call,
                  {102,29},
                  {remote,
                   {102,29},
                   {atom,{102,29},erlang},
                   {atom,{102,29},setelement}},
                  [{integer,{102,29},4},
                   {var,{101,20},rec3},
                   {var,{102,29},rec2}]},
                 {var,{101,29},rec1}]}]},
             {clause,
              [{generated,true},{location,{101,29}}],
              [{var,[{generated,true},{location,{101,29}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{101,29}}],
                {remote,
                 [{generated,true},{location,{101,29}}],
                 {atom,[{generated,true},{location,{101,29}}],erlang},
                 {atom,[{generated,true},{location,{101,29}}],error}},
                [{tuple,
                  [{generated,true},{location,{101,29}}],
                  [{atom,[{generated,true},{location,{101,29}}],badrecord},
                   {var,{101,20},rec3}]}]}]}]}]}},
        {debug_line,103,22},
        {tuple,
         {103,13},
         [{block,
           {103,14},
           [{match,{103,14},{var,{103,14},rec4},{var,{103,14},'Node'}},
            {'case',
             {103,28},
             {var,{103,14},rec4},
             [{clause,
               {103,28},
               [{tuple,
                 {103,28},
                 [{atom,{103,28},c_clause},
                  {var,{103,28},'_'},
                  {var,{103,28},'_'},
                  {var,{103,28},'_'},
                  {var,{103,28},'_'}]}],
               [],
               [{call,
                 {103,28},
                 {remote,
                  {103,28},
                  {atom,{103,28},erlang},
                  {atom,{103,28},setelement}},
                 [{integer,{103,28},3},{var,{103,14},rec4},{nil,{103,33}}]}]},
              {clause,
               [{generated,true},{location,{103,28}}],
               [{var,[{generated,true},{location,{103,28}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{103,28}}],
                 {remote,
                  [{generated,true},{location,{103,28}}],
                  {atom,[{generated,true},{location,{103,28}}],erlang},
                  {atom,[{generated,true},{location,{103,28}}],error}},
                 [{tuple,
                   [{generated,true},{location,{103,28}}],
                   [{atom,[{generated,true},{location,{103,28}}],badrecord},
                    {var,{103,14},rec4}]}]}]}]}]},
          {var,{103,37},'Sub3'}]}]}]}]},
  {clause,
   {106,1},
   [{match,
     {106,5},
     {tuple,
      {106,5},
      [{atom,{106,5},c_let},
       {var,{106,5},'_'},
       {var,{106,17},'Vars'},
       {var,{106,5},'_'},
       {var,{106,5},'_'}]},
     {var,{106,23},'Node'}},
    {match,
     {106,29},
     {tuple,
      {106,29},
      [{atom,{106,29},sub},
       {var,{106,29},'_'},
       {var,{106,29},'_'},
       {var,{106,29},'_'}]},
     {var,{106,29},'Sub'}}],
   [[{op,
      [{generated,true},{location,{106,49}}],
      'and',
      {op,
       [{generated,true},{location,{106,49}}],
       'orelse',
       {atom,[{generated,true},{location,{106,49}}],true},
       {atom,[{generated,true},{location,{106,49}}],fail}},
      {op,
       {106,49},
       '=/=',
       {call,
        {106,49},
        {remote,{106,49},{atom,{106,49},erlang},{atom,{106,49},element}},
        [{integer,{106,49},4},{var,{106,49},'Sub'}]},
       {atom,{106,49},none}}}]],
   [{debug_line,107,23},
    {tuple,
     {107,5},
     [{var,{107,6},'Node'},
      {call,
       {107,11},
       {atom,{107,11},sub_fold},
       [{block,0,
         [{call,
           {107,20},
           {atom,{107,20},get_variables},
           [{var,{107,34},'Vars'}]}]},
        {var,{107,41},'Sub'}]}]}]},
  {clause,
   {109,1},
   [{match,
     {109,5},
     {tuple,
      {109,5},
      [{atom,{109,5},c_fun},
       {var,{109,5},'_'},
       {var,{109,17},'Vars'},
       {var,{109,5},'_'}]},
     {var,{109,23},'Node'}},
    {match,
     {109,29},
     {tuple,
      {109,29},
      [{atom,{109,29},sub},
       {var,{109,29},'_'},
       {var,{109,29},'_'},
       {var,{109,29},'_'}]},
     {var,{109,29},'Sub'}}],
   [[{op,
      [{generated,true},{location,{109,49}}],
      'and',
      {op,
       [{generated,true},{location,{109,49}}],
       'orelse',
       {atom,[{generated,true},{location,{109,49}}],true},
       {atom,[{generated,true},{location,{109,49}}],fail}},
      {op,
       {109,49},
       '=/=',
       {call,
        {109,49},
        {remote,{109,49},{atom,{109,49},erlang},{atom,{109,49},element}},
        [{integer,{109,49},4},{var,{109,49},'Sub'}]},
       {atom,{109,49},none}}}]],
   [{debug_line,110,24},
    {tuple,
     {110,5},
     [{var,{110,6},'Node'},
      {call,
       {110,11},
       {atom,{110,11},sub_fold},
       [{block,0,
         [{call,
           {110,20},
           {atom,{110,20},get_variables},
           [{var,{110,34},'Vars'}]}]},
        {var,{110,41},'Sub'}]}]}]},
  {clause,
   {112,1},
   [{var,{112,5},'Node'},
    {match,
     {112,11},
     {tuple,
      {112,11},
      [{atom,{112,11},sub},
       {var,{112,11},'_'},
       {var,{112,11},'_'},
       {var,{112,11},'_'}]},
     {var,{112,11},'Sub0'}}],
   [[{op,
      [{generated,true},{location,{112,32}}],
      'and',
      {op,
       [{generated,true},{location,{112,32}}],
       'orelse',
       {atom,[{generated,true},{location,{112,32}}],true},
       {atom,[{generated,true},{location,{112,32}}],fail}},
      {op,
       {112,32},
       '=/=',
       {call,
        {112,32},
        {remote,{112,32},{atom,{112,32},erlang},{atom,{112,32},element}},
        [{integer,{112,32},4},{var,{112,32},'Sub0'}]},
       {atom,{112,32},none}}}]],
   [{debug_line,113,25},
    {'case',
     {113,5},
     {call,
      {113,10},
      {remote,{113,14},{atom,{113,10},cerl},{atom,{113,15},is_literal}},
      [{var,{113,26},'Node'}]},
     [{clause,
       {114,9},
       [{atom,{114,9},true}],
       [],
       [{debug_line,115,26},{atom,{115,13},skip}]},
      {clause,
       {116,9},
       [{atom,{116,9},false}],
       [],
       [{debug_line,118,27},
        {'case',
         {118,13},
         {call,
          {118,18},
          {remote,{118,22},{atom,{118,18},cerl},{atom,{118,23},is_data}},
          [{var,{118,31},'Node'}]},
         [{clause,
           {119,17},
           [{atom,{119,17},false}],
           [],
           [{debug_line,120,28},
            {tuple,{120,21},[{var,{120,22},'Node'},{var,{120,27},'Sub0'}]}]},
          {clause,
           {121,17},
           [{atom,{121,17},true}],
           [],
           [{debug_line,122,29},
            {match,
             {122,21},
             {var,{122,21},'Kind'},
             {call,
              {122,28},
              {remote,{122,32},{atom,{122,28},cerl},{atom,{122,33},data_type}},
              [{var,{122,43},'Node'}]}},
            {debug_line,123,30},
            {match,
             {123,21},
             {var,{123,21},'Es'},
             {call,
              {123,26},
              {remote,{123,30},{atom,{123,26},cerl},{atom,{123,31},data_es}},
              [{var,{123,39},'Node'}]}},
            {debug_line,124,31},
            {'case',
             {124,21},
             {call,
              {124,26},
              {atom,{124,26},sub_cache_nodes},
              [{var,{124,42},'Kind'},
               {var,{124,48},'Es'},
               {var,{124,52},'Sub0'}]},
             [{clause,
               {125,25},
               [{tuple,
                 {125,25},
                 [{var,{125,26},'Name'},{var,{125,31},'Sub1'}]}],
               [],
               [{debug_line,126,32},
                {tuple,
                 {126,29},
                 [{call,
                   {126,30},
                   {remote,
                    {126,34},
                    {atom,{126,30},cerl},
                    {atom,{126,35},ann_c_var}},
                   [{block,0,
                     [{call,
                       {126,45},
                       {remote,
                        {126,49},
                        {atom,{126,45},cerl},
                        {atom,{126,50},get_ann}},
                       [{var,{126,58},'Node'}]}]},
                    {var,{126,65},'Name'}]},
                  {var,{126,71},'Sub1'}]}]},
              {clause,
               {127,25},
               [{atom,{127,25},error}],
               [],
               [{debug_line,128,33},
                {tuple,
                 {128,29},
                 [{var,{128,30},'Node'},{var,{128,35},'Sub0'}]}]}]}]}]}]}]}]},
  {clause,
   {133,1},
   [{var,{133,5},'Node'},{var,{133,11},'Sub'}],
   [],
   [{debug_line,133,34},
    {tuple,{133,19},[{var,{133,20},'Node'},{var,{133,26},'Sub'}]}]}]}.
{function,
 {135,1},
 post,2,
 [{clause,
   {135,1},
   [{var,{135,1},'_'},{var,{135,1},'_'}],
   [[{call,
      {135,1},
      {remote,{135,1},{atom,{135,1},fake},{atom,{135,1},is_beam_bif_info}},
      []}]],
   [{debug_line,135,35},{atom,{135,1},ignore}]},
  {clause,
   {135,1},
   [{match,
     {135,6},
     {tuple,
      {135,6},
      [{atom,{135,6},c_clause},
       {var,{135,6},'_'},
       {var,{135,6},'_'},
       {var,{135,6},'_'},
       {var,{135,6},'_'}]},
     {var,{135,18},'Node'}},
    {match,
     {135,24},
     {tuple,
      {135,24},
      [{atom,{135,24},sub},
       {var,{135,24},'_'},
       {var,{135,24},'_'},
       {tuple,
        {135,31},
        [{atom,{135,32},clause},
         {var,{135,39},'Pats0'},
         {var,{135,45},'Keys'},
         {var,{135,50},'V'},
         {var,{135,52},'T'}]}]},
     {var,{135,56},'Sub0'}}],
   [],
   [{debug_line,136,36},
    {match,
     {136,5},
     {tuple,{136,5},[{var,{136,6},'Sub1'},{var,{136,11},'PostKeys'}]},
     {call,
      {136,23},
      {atom,{136,23},sub_take_keys},
      [{var,{136,37},'Keys'},{var,{136,43},'Sub0'}]}},
    {debug_line,137,37},
    {match,
     {137,5},
     {var,{137,5},'Pats1'},
     {call,
      {137,13},
      {atom,{137,13},put_pattern_keys},
      [{var,{137,30},'Pats0'},{var,{137,37},'PostKeys'}]}},
    {debug_line,138,38},
    {match,
     {138,5},
     {var,{138,5},'Sub2'},
     {call,
      {138,12},
      {atom,{138,12},sub_unfold},
      [{block,0,
        [{block,
          {138,23},
          [{match,{138,23},{var,{138,23},rec5},{var,{138,23},'Sub1'}},
           {'case',
            {138,32},
            {var,{138,23},rec5},
            [{clause,
              {138,32},
              [{tuple,
                {138,32},
                [{atom,{138,32},sub},
                 {var,{138,32},'_'},
                 {var,{138,32},'_'},
                 {var,{138,32},'_'}]}],
              [],
              [{call,
                {138,32},
                {remote,
                 {138,32},
                 {atom,{138,32},erlang},
                 {atom,{138,32},setelement}},
                [{integer,{138,32},3},
                 {call,
                  {138,36},
                  {remote,
                   {138,36},
                   {atom,{138,36},erlang},
                   {atom,{138,36},setelement}},
                  [{integer,{138,36},4},
                   {var,{138,23},rec5},
                   {var,{138,38},'T'}]},
                 {var,{138,34},'V'}]}]},
             {clause,
              [{generated,true},{location,{138,32}}],
              [{var,[{generated,true},{location,{138,32}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{138,32}}],
                {remote,
                 [{generated,true},{location,{138,32}}],
                 {atom,[{generated,true},{location,{138,32}}],erlang},
                 {atom,[{generated,true},{location,{138,32}}],error}},
                [{tuple,
                  [{generated,true},{location,{138,32}}],
                  [{atom,[{generated,true},{location,{138,32}}],badrecord},
                   {var,{138,23},rec5}]}]}]}]}]}]}]}},
    {debug_line,139,39},
    {tuple,
     {139,5},
     [{block,
       {139,6},
       [{match,{139,6},{var,{139,6},rec6},{var,{139,6},'Node'}},
        {'case',
         {139,20},
         {var,{139,6},rec6},
         [{clause,
           {139,20},
           [{tuple,
             {139,20},
             [{atom,{139,20},c_clause},
              {var,{139,20},'_'},
              {var,{139,20},'_'},
              {var,{139,20},'_'},
              {var,{139,20},'_'}]}],
           [],
           [{call,
             {139,20},
             {remote,
              {139,20},
              {atom,{139,20},erlang},
              {atom,{139,20},setelement}},
             [{integer,{139,20},3},
              {var,{139,6},rec6},
              {var,{139,25},'Pats1'}]}]},
          {clause,
           [{generated,true},{location,{139,20}}],
           [{var,[{generated,true},{location,{139,20}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{139,20}}],
             {remote,
              [{generated,true},{location,{139,20}}],
              {atom,[{generated,true},{location,{139,20}}],erlang},
              {atom,[{generated,true},{location,{139,20}}],error}},
             [{tuple,
               [{generated,true},{location,{139,20}}],
               [{atom,[{generated,true},{location,{139,20}}],badrecord},
                {var,{139,6},rec6}]}]}]}]}]},
      {var,{139,32},'Sub2'}]}]},
  {clause,
   {141,1},
   [{match,
     {141,6},
     {tuple,
      {141,6},
      [{atom,{141,6},c_clause},
       {var,{141,6},'_'},
       {var,{141,6},'_'},
       {var,{141,6},'_'},
       {var,{141,6},'_'}]},
     {var,{141,18},'Node'}},
    {var,{141,24},'Sub'}],
   [],
   [{debug_line,142,40},
    {tuple,
     {142,5},
     [{var,{142,6},'Node'},
      {call,{142,11},{atom,{142,11},sub_unfold},[{var,{142,22},'Sub'}]}]}]},
  {clause,
   {144,1},
   [{match,
     {144,6},
     {tuple,
      {144,6},
      [{atom,{144,6},c_let},
       {var,{144,6},'_'},
       {var,{144,6},'_'},
       {var,{144,6},'_'},
       {var,{144,6},'_'}]},
     {var,{144,15},'Node'}},
    {var,{144,21},'Sub'}],
   [],
   [{debug_line,145,41},
    {tuple,
     {145,5},
     [{var,{145,6},'Node'},
      {call,{145,11},{atom,{145,11},sub_unfold},[{var,{145,22},'Sub'}]}]}]},
  {clause,
   {147,1},
   [{match,
     {147,6},
     {tuple,
      {147,6},
      [{atom,{147,6},c_fun},
       {var,{147,6},'_'},
       {var,{147,6},'_'},
       {var,{147,6},'_'}]},
     {var,{147,15},'Node'}},
    {var,{147,21},'Sub'}],
   [],
   [{debug_line,148,42},
    {tuple,
     {148,5},
     [{var,{148,6},'Node'},
      {call,{148,11},{atom,{148,11},sub_unfold},[{var,{148,22},'Sub'}]}]}]},
  {clause,
   {150,1},
   [{var,{150,6},'Node'},{var,{150,12},'Sub'}],
   [],
   [{debug_line,151,43},
    {tuple,{151,5},[{var,{151,6},'Node'},{var,{151,11},'Sub'}]}]}]}.
{attribute,{161,2},
           spec,
           {{sub_new,1},
            [{type,{161,14},
                   'fun',
                   [{type,{161,14},product,[{type,{161,15},term,[]}]},
                    {user_type,{161,26},sub,[]}]}]}}.
{function,
    {162,1},
    sub_new,1,
    [{clause,
         {162,1},
         [{var,{162,1},'_'}],
         [[{call,
               {162,1},
               {remote,
                   {162,1},
                   {atom,{162,1},fake},
                   {atom,{162,1},is_beam_bif_info}},
               []}]],
         [{debug_line,162,44},{atom,{162,1},ignore}]},
     {clause,
         {162,1},
         [{var,{162,9},'Temp'}],
         [],
         [{debug_line,163,45},
          {tuple,
              {163,5},
              [{atom,{163,5},sub},
               {map,{163,5},[]},
               {call,
                   {163,5},
                   {remote,{163,5},{atom,{163,5},sets},{atom,{163,5},new}},
                   []},
               {var,{163,12},'Temp'}]}]}]}.
{function,
 {169,1},
 sub_fold,2,
 [{clause,
   {169,1},
   [{var,{169,1},'_'},{var,{169,1},'_'}],
   [[{call,
      {169,1},
      {remote,{169,1},{atom,{169,1},fake},{atom,{169,1},is_beam_bif_info}},
      []}]],
   [{debug_line,169,46},{atom,{169,1},ignore}]},
  {clause,
   {169,1},
   [{var,{169,10},'VarNames'},
    {match,
     {169,20},
     {tuple,
      {169,20},
      [{atom,{169,20},sub},
       {var,{169,20},'_'},
       {var,{169,27},'SubNames'},
       {var,{169,20},'_'}]},
     {var,{169,37},'Sub'}}],
   [],
   [{debug_line,170,47},
    {'case',
     {170,5},
     {call,
      {170,10},
      {atom,{170,10},is_disjoint_variables},
      [{var,{170,32},'VarNames'},{var,{170,42},'SubNames'}]},
     [{clause,
       {171,9},
       [{atom,{171,9},true}],
       [],
       [{debug_line,171,48},
        {block,
         {171,18},
         [{match,
           {171,26},
           {var,{171,26},rec7},
           {tuple,
            {171,28},
            [{atom,{171,29},temp},
             {'case',
              {171,34},
              {var,{171,34},'Sub'},
              [{clause,
                [{generated,true},{location,{171,34}}],
                [{tuple,
                  [{generated,true},{location,{171,34}}],
                  [{atom,{171,34},sub},
                   {var,{171,34},'_'},
                   {var,{171,34},'_'},
                   {var,{171,34},rec9}]}],
                [],
                [{var,{171,34},rec9}]},
               {clause,
                [{generated,true},{location,{171,34}}],
                [{var,{171,34},rec9}],
                [],
                [{call,
                  [{generated,true},{location,{171,34}}],
                  {remote,
                   [{generated,true},{location,{171,34}}],
                   {atom,[{generated,true},{location,{171,34}}],erlang},
                   {atom,[{generated,true},{location,{171,34}}],error}},
                  [{tuple,
                    [{generated,true},{location,{171,34}}],
                    [{atom,[{generated,true},{location,{171,34}}],badrecord},
                     {var,{171,34},rec9}]}]}]}]}]}},
          {match,{171,18},{var,{171,18},rec8},{var,{171,18},'Sub'}},
          {'case',
           {171,26},
           {var,{171,18},rec8},
           [{clause,
             {171,26},
             [{tuple,
               {171,26},
               [{atom,{171,26},sub},
                {var,{171,26},'_'},
                {var,{171,26},'_'},
                {var,{171,26},'_'}]}],
             [],
             [{call,
               {171,26},
               {remote,
                {171,26},
                {atom,{171,26},erlang},
                {atom,{171,26},setelement}},
               [{integer,{171,26},4},
                {var,{171,18},rec8},
                {var,{171,26},rec7}]}]},
            {clause,
             [{generated,true},{location,{171,26}}],
             [{var,[{generated,true},{location,{171,26}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{171,26}}],
               {remote,
                [{generated,true},{location,{171,26}}],
                {atom,[{generated,true},{location,{171,26}}],erlang},
                {atom,[{generated,true},{location,{171,26}}],error}},
               [{tuple,
                 [{generated,true},{location,{171,26}}],
                 [{atom,[{generated,true},{location,{171,26}}],badrecord},
                  {var,{171,18},rec8}]}]}]}]}]}]},
      {clause,
       {172,9},
       [{atom,{172,9},false}],
       [],
       [{debug_line,172,49},
        {call,
         {172,18},
         {atom,{172,18},sub_new},
         [{block,0,
           [{tuple,
             {172,26},
             [{atom,{172,27},sub},{var,{172,31},'Sub'}]}]}]}]}]}]}]}.
{function,
    {177,1},
    sub_unfold,1,
    [{clause,
         {177,1},
         [{var,{177,1},'_'}],
         [[{call,
               {177,1},
               {remote,
                   {177,1},
                   {atom,{177,1},fake},
                   {atom,{177,1},is_beam_bif_info}},
               []}]],
         [{debug_line,177,50},{atom,{177,1},ignore}]},
     {clause,
         {177,1},
         [{match,
              {177,12},
              {tuple,
                  {177,12},
                  [{atom,{177,12},sub},
                   {var,{177,12},'_'},
                   {var,{177,12},'_'},
                   {atom,{177,19},none}]},
              {var,{177,25},'Sub'}}],
         [],
         [{debug_line,178,51},{var,{178,5},'Sub'}]},
     {clause,
         {179,1},
         [{match,
              {179,12},
              {tuple,
                  {179,12},
                  [{atom,{179,12},sub},
                   {var,{179,12},'_'},
                   {var,{179,12},'_'},
                   {tuple,
                       {179,19},
                       [{atom,{179,20},temp},{var,{179,25},'Temp'}]}]},
              {var,{179,32},'Sub'}}],
         [],
         [{debug_line,180,52},
          {block,
              {180,5},
              [{match,{180,5},{var,{180,5},rec10},{var,{180,5},'Sub'}},
               {'case',
                   {180,13},
                   {var,{180,5},rec10},
                   [{clause,
                        {180,13},
                        [{tuple,
                             {180,13},
                             [{atom,{180,13},sub},
                              {var,{180,13},'_'},
                              {var,{180,13},'_'},
                              {var,{180,13},'_'}]}],
                        [],
                        [{call,
                             {180,13},
                             {remote,
                                 {180,13},
                                 {atom,{180,13},erlang},
                                 {atom,{180,13},setelement}},
                             [{integer,{180,13},4},
                              {var,{180,5},rec10},
                              {var,{180,15},'Temp'}]}]},
                    {clause,
                        [{generated,true},{location,{180,13}}],
                        [{var,[{generated,true},{location,{180,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{180,13}}],
                             {remote,
                                 [{generated,true},{location,{180,13}}],
                                 {atom,
                                     [{generated,true},{location,{180,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{180,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{180,13}}],
                                  [{atom,
                                       [{generated,true},{location,{180,13}}],
                                       badrecord},
                                   {var,{180,5},rec10}]}]}]}]}]}]},
     {clause,
         {181,1},
         [{tuple,
              {181,12},
              [{atom,{181,12},sub},
               {var,{181,12},'_'},
               {var,{181,12},'_'},
               {tuple,{181,19},[{atom,{181,20},sub},{var,{181,24},'Sub'}]}]}],
         [],
         [{debug_line,182,53},{var,{182,5},'Sub'}]}]}.
{attribute,{185,2},
           spec,
           {{sub_add_keys,2},
            [{type,{185,19},
                   'fun',
                   [{type,{185,19},
                          product,
                          [{type,{185,20},list,[{type,{185,21},term,[]}]},
                           {user_type,{185,30},sub,[]}]},
                    {user_type,{185,40},sub,[]}]}]}}.
{function,
 {186,1},
 sub_add_keys,2,
 [{clause,
   {186,1},
   [{var,{186,1},'_'},{var,{186,1},'_'}],
   [[{call,
      {186,1},
      {remote,{186,1},{atom,{186,1},fake},{atom,{186,1},is_beam_bif_info}},
      []}]],
   [{debug_line,186,54},{atom,{186,1},ignore}]},
  {clause,
   {186,1},
   [{var,{186,14},'Keys'},
    {match,
     {186,20},
     {tuple,
      {186,20},
      [{atom,{186,20},sub},
       {var,{186,27},'Pat0'},
       {var,{186,20},'_'},
       {var,{186,20},'_'}]},
     {var,{186,33},'Sub'}}],
   [],
   [{debug_line,187,55},
    {match,
     {187,5},
     {var,{187,5},'Pat1'},
     {call,
      {188,9},
      {remote,{188,14},{atom,{188,9},lists},{atom,{188,15},foldl}},
      [{block,0,
        [{debug_line,188,56},
         {'fun',
          {188,21},
          {clauses,
           [{clause,
             {188,24},
             [{var,{188,25},'Key'},{var,{188,30},'Acc'}],
             [],
             [{debug_line,189,57},
              {match,
               {189,13},
               {atom,{189,13},false},
               {call,
                {189,21},
                {remote,{189,25},{atom,{189,21},maps},{atom,{189,26},is_key}},
                [{var,{189,33},'Key'},{var,{189,38},'Acc'}]}},
              {debug_line,190,58},
              {call,
               {190,13},
               {remote,{190,17},{atom,{190,13},maps},{atom,{190,18},put}},
               [{var,{190,22},'Key'},
                {integer,{190,28},0},
                {var,{190,36},'Acc'}]}]}]}}]},
       {var,{191,14},'Pat0'},
       {var,{191,20},'Keys'}]}},
    {debug_line,192,59},
    {block,
     {192,5},
     [{match,{192,5},{var,{192,5},rec11},{var,{192,5},'Sub'}},
      {'case',
       {192,13},
       {var,{192,5},rec11},
       [{clause,
         {192,13},
         [{tuple,
           {192,13},
           [{atom,{192,13},sub},
            {var,{192,13},'_'},
            {var,{192,13},'_'},
            {var,{192,13},'_'}]}],
         [],
         [{call,
           {192,13},
           {remote,{192,13},{atom,{192,13},erlang},{atom,{192,13},setelement}},
           [{integer,{192,13},2},{var,{192,5},rec11},{var,{192,15},'Pat1'}]}]},
        {clause,
         [{generated,true},{location,{192,13}}],
         [{var,[{generated,true},{location,{192,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{192,13}}],
           {remote,
            [{generated,true},{location,{192,13}}],
            {atom,[{generated,true},{location,{192,13}}],erlang},
            {atom,[{generated,true},{location,{192,13}}],error}},
           [{tuple,
             [{generated,true},{location,{192,13}}],
             [{atom,[{generated,true},{location,{192,13}}],badrecord},
              {var,{192,5},rec11}]}]}]}]}]}]}]}.
{attribute,
    {196,2},
    spec,
    {{sub_take_keys,2},
     [{type,
          {196,20},
          'fun',
          [{type,
               {196,20},
               product,
               [{type,{196,21},list,[{type,{196,22},term,[]}]},
                {user_type,{196,31},sub,[]}]},
           {type,
               {196,41},
               tuple,
               [{user_type,{196,42},sub,[]},
                {type,
                    {196,49},
                    list,
                    [{type,
                         {196,50},
                         tuple,
                         [{type,{196,51},term,[]},
                          {type,{196,59},atom,[]}]}]}]}]}]}}.
{function,
 {197,1},
 sub_take_keys,2,
 [{clause,
   {197,1},
   [{var,{197,1},'_'},{var,{197,1},'_'}],
   [[{call,
      {197,1},
      {remote,{197,1},{atom,{197,1},fake},{atom,{197,1},is_beam_bif_info}},
      []}]],
   [{debug_line,197,60},{atom,{197,1},ignore}]},
  {clause,
   {197,1},
   [{var,{197,15},'Keys'},
    {match,
     {197,21},
     {tuple,
      {197,21},
      [{atom,{197,21},sub},
       {var,{197,28},'Pat0'},
       {var,{197,21},'_'},
       {var,{197,21},'_'}]},
     {var,{197,34},'Sub'}}],
   [],
   [{debug_line,198,61},
    {match,
     {198,5},
     {tuple,{198,5},[{var,{198,6},'Pat1'},{var,{198,11},'Acc'}]},
     {call,
      {198,18},
      {atom,{198,18},sub_take_keys},
      [{var,{198,32},'Keys'},{var,{198,38},'Pat0'},{nil,{198,44}}]}},
    {debug_line,199,62},
    {tuple,
     {199,5},
     [{block,
       {199,6},
       [{match,{199,6},{var,{199,6},rec12},{var,{199,6},'Sub'}},
        {'case',
         {199,14},
         {var,{199,6},rec12},
         [{clause,
           {199,14},
           [{tuple,
             {199,14},
             [{atom,{199,14},sub},
              {var,{199,14},'_'},
              {var,{199,14},'_'},
              {var,{199,14},'_'}]}],
           [],
           [{call,
             {199,14},
             {remote,
              {199,14},
              {atom,{199,14},erlang},
              {atom,{199,14},setelement}},
             [{integer,{199,14},2},
              {var,{199,6},rec12},
              {var,{199,16},'Pat1'}]}]},
          {clause,
           [{generated,true},{location,{199,14}}],
           [{var,[{generated,true},{location,{199,14}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{199,14}}],
             {remote,
              [{generated,true},{location,{199,14}}],
              {atom,[{generated,true},{location,{199,14}}],erlang},
              {atom,[{generated,true},{location,{199,14}}],error}},
             [{tuple,
               [{generated,true},{location,{199,14}}],
               [{atom,[{generated,true},{location,{199,14}}],badrecord},
                {var,{199,6},rec12}]}]}]}]}]},
      {var,{199,22},'Acc'}]}]}]}.
{function,
    {201,1},
    sub_take_keys,3,
    [{clause,
         {201,1},
         [{var,{201,1},'_'},{var,{201,1},'_'},{var,{201,1},'_'}],
         [[{call,
               {201,1},
               {remote,
                   {201,1},
                   {atom,{201,1},fake},
                   {atom,{201,1},is_beam_bif_info}},
               []}]],
         [{debug_line,201,63},{atom,{201,1},ignore}]},
     {clause,
         {201,1},
         [{cons,{201,15},{var,{201,16},'K'},{var,{201,18},'T'}},
          {var,{201,22},'Sub0'},
          {var,{201,28},'Acc'}],
         [],
         [{debug_line,202,64},
          {'case',
              {202,5},
              {call,
                  {202,10},
                  {remote,{202,14},{atom,{202,10},maps},{atom,{202,15},take}},
                  [{var,{202,20},'K'},{var,{202,23},'Sub0'}]},
              [{clause,
                   {203,9},
                   [{tuple,
                        {203,9},
                        [{integer,{203,11},0},{var,{203,18},'Sub1'}]}],
                   [],
                   [{debug_line,204,65},
                    {call,
                        {204,13},
                        {atom,{204,13},sub_take_keys},
                        [{var,{204,27},'T'},
                         {var,{204,30},'Sub1'},
                         {var,{204,36},'Acc'}]}]},
               {clause,
                   {205,9},
                   [{tuple,
                        {205,9},
                        [{var,{205,10},'Name'},{var,{205,15},'Sub1'}]}],
                   [],
                   [{debug_line,206,66},
                    {call,
                        {206,13},
                        {atom,{206,13},sub_take_keys},
                        [{var,{206,27},'T'},
                         {var,{206,30},'Sub1'},
                         {block,0,
                             [{cons,
                                  {206,36},
                                  {tuple,
                                      {206,37},
                                      [{var,{206,38},'K'},
                                       {var,{206,40},'Name'}]},
                                  {var,{206,46},'Acc'}}]}]}]}]}]},
     {clause,
         {208,1},
         [{nil,{208,15}},{var,{208,19},'Sub'},{var,{208,24},'Acc'}],
         [],
         [{debug_line,209,67},
          {tuple,{209,5},[{var,{209,6},'Sub'},{var,{209,10},'Acc'}]}]}]}.
{attribute,
    {214,2},
    spec,
    {{sub_cache_nodes,3},
     [{type,
          {214,22},
          'fun',
          [{type,
               {214,22},
               product,
               [{type,{214,23},atom,[]},
                {type,
                    {214,31},
                    list,
                    [{remote_type,
                         {214,32},
                         [{atom,{214,32},cerl},{atom,{214,37},cerl},[]]}]},
                {user_type,{214,46},sub,[]}]},
           {type,
               {214,56},
               union,
               [{type,
                    {214,56},
                    tuple,
                    [{type,{214,57},atom,[]},{user_type,{214,65},sub,[]}]},
                {atom,{214,74},error}]}]}]}}.
{function,
    {215,1},
    sub_cache_nodes,3,
    [{clause,
         {215,1},
         [{var,{215,1},'_'},{var,{215,1},'_'},{var,{215,1},'_'}],
         [[{call,
               {215,1},
               {remote,
                   {215,1},
                   {atom,{215,1},fake},
                   {atom,{215,1},is_beam_bif_info}},
               []}]],
         [{debug_line,215,68},{atom,{215,1},ignore}]},
     {clause,
         {215,1},
         [{var,{215,17},'Kind'},
          {var,{215,23},'Nodes'},
          {match,
              {215,30},
              {tuple,
                  {215,30},
                  [{atom,{215,30},sub},
                   {var,{215,37},'Pat'},
                   {var,{215,30},'_'},
                   {var,{215,30},'_'}]},
              {var,{215,42},'Sub'}}],
         [],
         [{debug_line,216,69},
          {'case',
              {216,5},
              {call,
                  {216,10},
                  {atom,{216,10},nodes_to_key},
                  [{var,{216,23},'Kind'},{var,{216,29},'Nodes'}]},
              [{clause,
                   {217,9},
                   [{tuple,{217,9},[{atom,{217,10},ok},{var,{217,14},'Key'}]}],
                   [],
                   [{debug_line,218,70},
                    {'case',
                        {218,13},
                        {var,{218,18},'Pat'},
                        [{clause,
                             {219,17},
                             [{map,
                                  {219,17},
                                  [{map_field_exact,
                                       {219,23},
                                       {var,{219,19},'Key'},
                                       {integer,{219,27},0}}]}],
                             [],
                             [{debug_line,220,71},
                              {call,
                                  {220,21},
                                  {atom,{220,21},new_var_name},
                                  [{var,{220,34},'Key'},
                                   {var,{220,39},'Sub'}]}]},
                         {clause,
                             {221,17},
                             [{map,
                                  {221,17},
                                  [{map_field_exact,
                                       {221,23},
                                       {var,{221,19},'Key'},
                                       {var,{221,26},'Name'}}]}],
                             [],
                             [{debug_line,222,72},
                              {tuple,
                                  {222,21},
                                  [{var,{222,22},'Name'},
                                   {var,{222,27},'Sub'}]}]},
                         {clause,
                             {223,17},
                             [{map,{223,17},[]}],
                             [],
                             [{debug_line,224,73},{atom,{224,21},error}]}]}]},
               {clause,
                   {226,9},
                   [{atom,{226,9},error}],
                   [],
                   [{debug_line,227,74},{atom,{227,13},error}]}]}]}]}.
{function,
 {230,1},
 new_var_name,2,
 [{clause,
   {230,1},
   [{var,{230,1},'_'},{var,{230,1},'_'}],
   [[{call,
      {230,1},
      {remote,{230,1},{atom,{230,1},fake},{atom,{230,1},is_beam_bif_info}},
      []}]],
   [{debug_line,230,75},{atom,{230,1},ignore}]},
  {clause,
   {230,1},
   [{var,{230,14},'Key'},
    {match,
     {230,19},
     {tuple,
      {230,19},
      [{atom,{230,19},sub},
       {var,{230,26},'Pat'},
       {var,{230,19},'_'},
       {var,{230,19},'_'}]},
     {var,{230,31},'Sub'}}],
   [],
   [{debug_line,231,76},
    {match,
     {231,5},
     {var,{231,5},'Counter'},
     {call,
      {231,15},
      {remote,{231,15},{atom,{231,15},erlang},{atom,{231,15},get}},
      [{atom,{231,19},new_var_num}]}},
    {debug_line,232,77},
    {match,
     {232,5},
     {var,{232,5},'Name'},
     {call,
      {232,12},
      {remote,{232,12},{atom,{232,12},erlang},{atom,{232,12},list_to_atom}},
      [{block,0,
        [{op,
          {232,30},
          '++',
          {string,{232,25},"@r"},
          {call,
           {232,33},
           {remote,
            {232,33},
            {atom,{232,33},erlang},
            {atom,{232,33},integer_to_list}},
           [{var,{232,49},'Counter'}]}}]}]}},
    {debug_line,233,78},
    {call,
     {233,5},
     {remote,{233,5},{atom,{233,5},erlang},{atom,{233,5},put}},
     [{atom,{233,9},new_var_num},
      {block,0,
       [{op,{233,30},'+',{var,{233,22},'Counter'},{integer,{233,32},1}}]}]},
    {debug_line,234,79},
    {tuple,
     {234,5},
     [{var,{234,6},'Name'},
      {block,
       {234,11},
       [{match,
         {234,19},
         {var,{234,19},rec13},
         {call,
          {234,21},
          {remote,{234,25},{atom,{234,21},maps},{atom,{234,26},put}},
          [{var,{234,30},'Key'},{var,{234,35},'Name'},{var,{234,41},'Pat'}]}},
        {match,{234,11},{var,{234,11},rec14},{var,{234,11},'Sub'}},
        {'case',
         {234,19},
         {var,{234,11},rec14},
         [{clause,
           {234,19},
           [{tuple,
             {234,19},
             [{atom,{234,19},sub},
              {var,{234,19},'_'},
              {var,{234,19},'_'},
              {var,{234,19},'_'}]}],
           [],
           [{call,
             {234,19},
             {remote,
              {234,19},
              {atom,{234,19},erlang},
              {atom,{234,19},setelement}},
             [{integer,{234,19},2},
              {var,{234,11},rec14},
              {var,{234,19},rec13}]}]},
          {clause,
           [{generated,true},{location,{234,19}}],
           [{var,[{generated,true},{location,{234,19}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{234,19}}],
             {remote,
              [{generated,true},{location,{234,19}}],
              {atom,[{generated,true},{location,{234,19}}],erlang},
              {atom,[{generated,true},{location,{234,19}}],error}},
             [{tuple,
               [{generated,true},{location,{234,19}}],
               [{atom,[{generated,true},{location,{234,19}}],badrecord},
                {var,{234,11},rec14}]}]}]}]}]}]}]}]}.
{function,
    {240,1},
    get_variables,1,
    [{clause,
         {240,1},
         [{var,{240,1},'_'}],
         [[{call,
               {240,1},
               {remote,
                   {240,1},
                   {atom,{240,1},fake},
                   {atom,{240,1},is_beam_bif_info}},
               []}]],
         [{debug_line,240,80},{atom,{240,1},ignore}]},
     {clause,
         {240,1},
         [{var,{240,15},'NodesList'}],
         [],
         [{debug_line,241,81},
          {call,
              {241,5},
              {remote,{241,9},{atom,{241,5},sets},{atom,{241,10},from_list}},
              [{block,0,
                   [{lc,{241,20},
                        {block,0,[{var,{241,21},'Var'}]},
                        [{block,0,[{atom,{241,36},true}]},
                         {generate,
                             {241,33},
                             {var,{241,28},'Node'},
                             {var,{241,36},'NodesList'}},
                         {block,0,[{atom,{241,54},true}]},
                         {generate,
                             {241,51},
                             {var,{241,47},'Var'},
                             {call,
                                 {241,54},
                                 {remote,
                                     {241,64},
                                     {atom,{241,54},cerl_trees},
                                     {atom,{241,65},variables}},
                                 [{var,{241,75},'Node'}]}}]}]}]}]}]}.
{function,{243,1},
          is_disjoint_variables,2,
          [{clause,{243,1},
                   [{var,{243,1},'_'},{var,{243,1},'_'}],
                   [[{call,{243,1},
                           {remote,{243,1},
                                   {atom,{243,1},fake},
                                   {atom,{243,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,243,82},{atom,{243,1},ignore}]},
           {clause,{243,1},
                   [{var,{243,23},'Vars1'},{var,{243,30},'Vars2'}],
                   [],
                   [{debug_line,244,83},
                    {call,{244,5},
                          {remote,{244,9},
                                  {atom,{244,5},sets},
                                  {atom,{244,10},is_disjoint}},
                          [{var,{244,22},'Vars1'},{var,{244,29},'Vars2'}]}]}]}.
{function,{246,1},
          merge_variables,2,
          [{clause,{246,1},
                   [{var,{246,1},'_'},{var,{246,1},'_'}],
                   [[{call,{246,1},
                           {remote,{246,1},
                                   {atom,{246,1},fake},
                                   {atom,{246,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,246,84},{atom,{246,1},ignore}]},
           {clause,{246,1},
                   [{var,{246,17},'Vars1'},{var,{246,24},'Vars2'}],
                   [],
                   [{debug_line,247,85},
                    {call,{247,5},
                          {remote,{247,9},
                                  {atom,{247,5},sets},
                                  {atom,{247,10},union}},
                          [{var,{247,16},'Vars1'},{var,{247,23},'Vars2'}]}]}]}.
{function,
    {254,1},
    get_pattern_keys,1,
    [{clause,
         {254,1},
         [{var,{254,1},'_'}],
         [[{call,
               {254,1},
               {remote,
                   {254,1},
                   {atom,{254,1},fake},
                   {atom,{254,1},is_beam_bif_info}},
               []}]],
         [{debug_line,254,86},{atom,{254,1},ignore}]},
     {clause,
         {254,1},
         [{var,{254,18},'Patterns'}],
         [],
         [{debug_line,255,87},
          {call,
              {255,5},
              {remote,{255,10},{atom,{255,5},lists},{atom,{255,11},foldl}},
              [{block,0,[{'fun',{255,17},{function,get_pattern_keys,2}}]},
               {nil,{255,41}},
               {var,{255,45},'Patterns'}]}]}]}.
{function,
    {257,1},
    get_pattern_keys,2,
    [{clause,
         {257,1},
         [{var,{257,1},'_'},{var,{257,1},'_'}],
         [[{call,
               {257,1},
               {remote,
                   {257,1},
                   {atom,{257,1},fake},
                   {atom,{257,1},is_beam_bif_info}},
               []}]],
         [{debug_line,257,88},{atom,{257,1},ignore}]},
     {clause,
         {257,1},
         [{tuple,
              {257,18},
              [{atom,{257,18},c_tuple},
               {var,{257,18},'_'},
               {var,{257,30},'Es'}]},
          {var,{257,35},'Acc0'}],
         [],
         [{debug_line,258,89},
          {match,
              {258,5},
              {var,{258,5},'Acc1'},
              {call,
                  {258,12},
                  {atom,{258,12},accumulate_pattern_keys},
                  [{atom,{258,36},tuple},
                   {var,{258,43},'Es'},
                   {var,{258,47},'Acc0'}]}},
          {debug_line,259,90},
          {call,
              {259,5},
              {remote,{259,10},{atom,{259,5},lists},{atom,{259,11},foldl}},
              [{block,0,[{'fun',{259,17},{function,get_pattern_keys,2}}]},
               {var,{259,41},'Acc1'},
               {var,{259,47},'Es'}]}]},
     {clause,
         {260,1},
         [{tuple,
              {260,18},
              [{atom,{260,18},c_cons},
               {var,{260,18},'_'},
               {var,{260,29},'Hd'},
               {var,{260,35},'Tl'}]},
          {var,{260,40},'Acc0'}],
         [],
         [{debug_line,261,91},
          {match,
              {261,5},
              {var,{261,5},'Acc1'},
              {call,
                  {261,12},
                  {atom,{261,12},accumulate_pattern_keys},
                  [{atom,{261,36},cons},
                   {block,0,
                       [{cons,
                            {261,42},
                            {var,{261,43},'Hd'},
                            {cons,
                                {261,47},
                                {var,{261,47},'Tl'},
                                {nil,{261,49}}}}]},
                   {var,{261,52},'Acc0'}]}},
          {debug_line,262,92},
          {call,
              {262,5},
              {atom,{262,5},get_pattern_keys},
              [{var,{262,22},'Tl'},
               {block,0,
                   [{call,
                        {262,26},
                        {atom,{262,26},get_pattern_keys},
                        [{var,{262,43},'Hd'},{var,{262,47},'Acc1'}]}]}]}]},
     {clause,
         {263,1},
         [{tuple,
              {263,18},
              [{atom,{263,18},c_alias},
               {var,{263,18},'_'},
               {var,{263,18},'_'},
               {var,{263,31},'Pat'}]},
          {var,{263,37},'Acc0'}],
         [],
         [{debug_line,264,93},
          {call,
              {264,5},
              {atom,{264,5},get_pattern_keys},
              [{var,{264,22},'Pat'},{var,{264,27},'Acc0'}]}]},
     {clause,
         {265,1},
         [{tuple,
              {265,18},
              [{atom,{265,18},c_map},
               {var,{265,18},'_'},
               {var,{265,18},'_'},
               {var,{265,28},'Es'},
               {var,{265,18},'_'}]},
          {var,{265,33},'Acc0'}],
         [],
         [{debug_line,266,94},
          {call,
              {266,5},
              {remote,{266,10},{atom,{266,5},lists},{atom,{266,11},foldl}},
              [{block,0,[{'fun',{266,17},{function,get_pattern_keys,2}}]},
               {var,{266,41},'Acc0'},
               {var,{266,47},'Es'}]}]},
     {clause,
         {267,1},
         [{tuple,
              {267,18},
              [{atom,{267,18},c_map_pair},
               {var,{267,18},'_'},
               {var,{267,18},'_'},
               {var,{267,18},'_'},
               {var,{267,34},'Val'}]},
          {var,{267,40},'Acc0'}],
         [],
         [{debug_line,268,95},
          {call,
              {268,5},
              {atom,{268,5},get_pattern_keys},
              [{var,{268,22},'Val'},{var,{268,27},'Acc0'}]}]},
     {clause,
         {269,1},
         [{var,{269,18},'_'},{var,{269,21},'Acc'}],
         [],
         [{debug_line,270,96},{var,{270,5},'Acc'}]}]}.
{function,
    {272,1},
    accumulate_pattern_keys,3,
    [{clause,
         {272,1},
         [{var,{272,1},'_'},{var,{272,1},'_'},{var,{272,1},'_'}],
         [[{call,
               {272,1},
               {remote,
                   {272,1},
                   {atom,{272,1},fake},
                   {atom,{272,1},is_beam_bif_info}},
               []}]],
         [{debug_line,272,97},{atom,{272,1},ignore}]},
     {clause,
         {272,1},
         [{var,{272,25},'Kind'},{var,{272,31},'Nodes'},{var,{272,38},'Acc'}],
         [],
         [{debug_line,273,98},
          {'case',
              {273,5},
              {call,
                  {273,10},
                  {atom,{273,10},nodes_to_key},
                  [{var,{273,23},'Kind'},{var,{273,29},'Nodes'}]},
              [{clause,
                   {274,9},
                   [{tuple,{274,9},[{atom,{274,10},ok},{var,{274,13},'Key'}]}],
                   [],
                   [{debug_line,274,99},
                    {cons,
                        {274,21},
                        {var,{274,22},'Key'},
                        {var,{274,26},'Acc'}}]},
               {clause,
                   {275,9},
                   [{atom,{275,9},error}],
                   [],
                   [{debug_line,275,100},{var,{275,18},'Acc'}]}]}]}]}.
{function,
    {278,1},
    put_pattern_keys,2,
    [{clause,
         {278,1},
         [{var,{278,1},'_'},{var,{278,1},'_'}],
         [[{call,
               {278,1},
               {remote,
                   {278,1},
                   {atom,{278,1},fake},
                   {atom,{278,1},is_beam_bif_info}},
               []}]],
         [{debug_line,278,101},{atom,{278,1},ignore}]},
     {clause,
         {278,1},
         [{var,{278,18},'Patterns'},{nil,{278,28}}],
         [],
         [{debug_line,279,102},{var,{279,5},'Patterns'}]},
     {clause,
         {280,1},
         [{var,{280,18},'Patterns'},{var,{280,28},'Keys'}],
         [],
         [{debug_line,281,103},
          {match,
              {281,5},
              {tuple,
                  {281,5},
                  [{var,{281,6},'NewPatterns'},{var,{281,18},'Map'}]},
              {call,
                  {282,9},
                  {remote,
                      {282,14},
                      {atom,{282,9},lists},
                      {atom,{282,15},mapfoldl}},
                  [{block,0,
                       [{debug_line,282,104},
                        {'fun',{282,24},{function,alias_pattern_keys,2}}]},
                   {block,0,
                       [{call,
                            {282,50},
                            {remote,
                                {282,54},
                                {atom,{282,50},maps},
                                {atom,{282,55},from_list}},
                            [{var,{282,65},'Keys'}]}]},
                   {var,{282,72},'Patterns'}]}},
          {debug_line,284,105},
          {match,
              {284,5},
              {integer,{284,5},0},
              {call,
                  {284,9},
                  {remote,
                      {284,9},
                      {atom,{284,9},erlang},
                      {atom,{284,9},map_size}},
                  [{var,{284,18},'Map'}]}},
          {debug_line,285,106},
          {var,{285,5},'NewPatterns'}]}]}.
{function,
 {287,1},
 alias_pattern_keys,2,
 [{clause,
   {287,1},
   [{var,{287,1},'_'},{var,{287,1},'_'}],
   [[{call,
      {287,1},
      {remote,{287,1},{atom,{287,1},fake},{atom,{287,1},is_beam_bif_info}},
      []}]],
   [{debug_line,287,107},{atom,{287,1},ignore}]},
  {clause,
   {287,1},
   [{match,
     {287,20},
     {tuple,
      {287,20},
      [{atom,{287,20},c_tuple},{var,{287,34},'Anno'},{var,{287,42},'Es0'}]},
     {var,{287,47},'Node'}},
    {var,{287,53},'Acc0'}],
   [],
   [{debug_line,288,108},
    {match,
     {288,5},
     {tuple,{288,5},[{var,{288,6},'Es1'},{var,{288,10},'Acc1'}]},
     {call,
      {288,18},
      {remote,{288,23},{atom,{288,18},lists},{atom,{288,24},mapfoldl}},
      [{block,0,[{'fun',{288,33},{function,alias_pattern_keys,2}}]},
       {var,{288,59},'Acc0'},
       {var,{288,65},'Es0'}]}},
    {debug_line,289,109},
    {call,
     {289,5},
     {atom,{289,5},nodes_to_alias},
     [{atom,{289,20},tuple},
      {var,{289,27},'Es0'},
      {var,{289,32},'Anno'},
      {block,0,
       [{block,
         {289,38},
         [{match,{289,38},{var,{289,38},rec15},{var,{289,38},'Node'}},
          {'case',
           {289,51},
           {var,{289,38},rec15},
           [{clause,
             {289,51},
             [{tuple,
               {289,51},
               [{atom,{289,51},c_tuple},
                {var,{289,51},'_'},
                {var,{289,51},'_'}]}],
             [],
             [{call,
               {289,51},
               {remote,
                {289,51},
                {atom,{289,51},erlang},
                {atom,{289,51},setelement}},
               [{integer,{289,51},3},
                {var,{289,38},rec15},
                {var,{289,54},'Es1'}]}]},
            {clause,
             [{generated,true},{location,{289,51}}],
             [{var,[{generated,true},{location,{289,51}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{289,51}}],
               {remote,
                [{generated,true},{location,{289,51}}],
                {atom,[{generated,true},{location,{289,51}}],erlang},
                {atom,[{generated,true},{location,{289,51}}],error}},
               [{tuple,
                 [{generated,true},{location,{289,51}}],
                 [{atom,[{generated,true},{location,{289,51}}],badrecord},
                  {var,{289,38},rec15}]}]}]}]}]}]},
      {var,{289,60},'Acc1'}]}]},
  {clause,
   {290,1},
   [{match,
     {290,20},
     {tuple,
      {290,20},
      [{atom,{290,20},c_cons},
       {var,{290,33},'Anno'},
       {var,{290,41},'Hd0'},
       {var,{290,48},'Tl0'}]},
     {var,{290,53},'Node'}},
    {var,{290,59},'Acc0'}],
   [],
   [{debug_line,291,110},
    {match,
     {291,5},
     {tuple,{291,5},[{var,{291,6},'Hd1'},{var,{291,10},'Acc1'}]},
     {call,
      {291,18},
      {atom,{291,18},alias_pattern_keys},
      [{var,{291,37},'Hd0'},{var,{291,42},'Acc0'}]}},
    {debug_line,292,111},
    {match,
     {292,5},
     {tuple,{292,5},[{var,{292,6},'Tl1'},{var,{292,10},'Acc2'}]},
     {call,
      {292,18},
      {atom,{292,18},alias_pattern_keys},
      [{var,{292,37},'Tl0'},{var,{292,42},'Acc1'}]}},
    {debug_line,293,112},
    {call,
     {293,5},
     {atom,{293,5},nodes_to_alias},
     [{atom,{293,20},cons},
      {block,0,
       [{cons,
         {293,26},
         {var,{293,27},'Hd0'},
         {cons,{293,32},{var,{293,32},'Tl0'},{nil,{293,35}}}}]},
      {var,{293,38},'Anno'},
      {block,0,
       [{block,
         {293,44},
         [{match,{293,44},{var,{293,44},rec16},{var,{293,44},'Node'}},
          {'case',
           {293,56},
           {var,{293,44},rec16},
           [{clause,
             {293,56},
             [{tuple,
               {293,56},
               [{atom,{293,56},c_cons},
                {var,{293,56},'_'},
                {var,{293,56},'_'},
                {var,{293,56},'_'}]}],
             [],
             [{call,
               {293,56},
               {remote,
                {293,56},
                {atom,{293,56},erlang},
                {atom,{293,56},setelement}},
               [{integer,{293,56},3},
                {call,
                 {293,63},
                 {remote,
                  {293,63},
                  {atom,{293,63},erlang},
                  {atom,{293,63},setelement}},
                 [{integer,{293,63},4},
                  {var,{293,44},rec16},
                  {var,{293,66},'Tl1'}]},
                {var,{293,59},'Hd1'}]}]},
            {clause,
             [{generated,true},{location,{293,56}}],
             [{var,[{generated,true},{location,{293,56}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{293,56}}],
               {remote,
                [{generated,true},{location,{293,56}}],
                {atom,[{generated,true},{location,{293,56}}],erlang},
                {atom,[{generated,true},{location,{293,56}}],error}},
               [{tuple,
                 [{generated,true},{location,{293,56}}],
                 [{atom,[{generated,true},{location,{293,56}}],badrecord},
                  {var,{293,44},rec16}]}]}]}]}]}]},
      {var,{293,72},'Acc2'}]}]},
  {clause,
   {294,1},
   [{match,
     {294,20},
     {tuple,
      {294,20},
      [{atom,{294,20},c_alias},
       {var,{294,20},'_'},
       {var,{294,20},'_'},
       {var,{294,33},'Pat0'}]},
     {var,{294,39},'Node'}},
    {var,{294,45},'Acc0'}],
   [],
   [{debug_line,295,113},
    {match,
     {295,5},
     {tuple,{295,5},[{var,{295,6},'Pat1'},{var,{295,11},'Acc1'}]},
     {call,
      {295,19},
      {atom,{295,19},alias_pattern_keys},
      [{var,{295,38},'Pat0'},{var,{295,44},'Acc0'}]}},
    {debug_line,296,114},
    {tuple,
     {296,5},
     [{block,
       {296,6},
       [{match,{296,6},{var,{296,6},rec17},{var,{296,6},'Node'}},
        {'case',
         {296,19},
         {var,{296,6},rec17},
         [{clause,
           {296,19},
           [{tuple,
             {296,19},
             [{atom,{296,19},c_alias},
              {var,{296,19},'_'},
              {var,{296,19},'_'},
              {var,{296,19},'_'}]}],
           [],
           [{call,
             {296,19},
             {remote,
              {296,19},
              {atom,{296,19},erlang},
              {atom,{296,19},setelement}},
             [{integer,{296,19},4},
              {var,{296,6},rec17},
              {var,{296,23},'Pat1'}]}]},
          {clause,
           [{generated,true},{location,{296,19}}],
           [{var,[{generated,true},{location,{296,19}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{296,19}}],
             {remote,
              [{generated,true},{location,{296,19}}],
              {atom,[{generated,true},{location,{296,19}}],erlang},
              {atom,[{generated,true},{location,{296,19}}],error}},
             [{tuple,
               [{generated,true},{location,{296,19}}],
               [{atom,[{generated,true},{location,{296,19}}],badrecord},
                {var,{296,6},rec17}]}]}]}]}]},
      {var,{296,30},'Acc1'}]}]},
  {clause,
   {297,1},
   [{match,
     {297,20},
     {tuple,
      {297,20},
      [{atom,{297,20},c_map},
       {var,{297,20},'_'},
       {var,{297,20},'_'},
       {var,{297,30},'Es0'},
       {var,{297,20},'_'}]},
     {var,{297,35},'Node'}},
    {var,{297,41},'Acc0'}],
   [],
   [{debug_line,298,115},
    {match,
     {298,5},
     {tuple,{298,5},[{var,{298,6},'Es1'},{var,{298,10},'Acc1'}]},
     {call,
      {298,18},
      {remote,{298,23},{atom,{298,18},lists},{atom,{298,24},mapfoldl}},
      [{block,0,[{'fun',{298,33},{function,alias_pattern_keys,2}}]},
       {var,{298,59},'Acc0'},
       {var,{298,65},'Es0'}]}},
    {debug_line,299,116},
    {tuple,
     {299,5},
     [{block,
       {299,6},
       [{match,{299,6},{var,{299,6},rec18},{var,{299,6},'Node'}},
        {'case',
         {299,17},
         {var,{299,6},rec18},
         [{clause,
           {299,17},
           [{tuple,
             {299,17},
             [{atom,{299,17},c_map},
              {var,{299,17},'_'},
              {var,{299,17},'_'},
              {var,{299,17},'_'},
              {var,{299,17},'_'}]}],
           [],
           [{call,
             {299,17},
             {remote,
              {299,17},
              {atom,{299,17},erlang},
              {atom,{299,17},setelement}},
             [{integer,{299,17},4},
              {var,{299,6},rec18},
              {var,{299,20},'Es1'}]}]},
          {clause,
           [{generated,true},{location,{299,17}}],
           [{var,[{generated,true},{location,{299,17}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{299,17}}],
             {remote,
              [{generated,true},{location,{299,17}}],
              {atom,[{generated,true},{location,{299,17}}],erlang},
              {atom,[{generated,true},{location,{299,17}}],error}},
             [{tuple,
               [{generated,true},{location,{299,17}}],
               [{atom,[{generated,true},{location,{299,17}}],badrecord},
                {var,{299,6},rec18}]}]}]}]}]},
      {var,{299,26},'Acc1'}]}]},
  {clause,
   {300,1},
   [{match,
     {300,20},
     {tuple,
      {300,20},
      [{atom,{300,20},c_map_pair},
       {var,{300,20},'_'},
       {var,{300,20},'_'},
       {var,{300,20},'_'},
       {var,{300,36},'Val0'}]},
     {var,{300,42},'Node'}},
    {var,{300,48},'Acc0'}],
   [],
   [{debug_line,301,117},
    {match,
     {301,5},
     {tuple,{301,5},[{var,{301,6},'Val1'},{var,{301,11},'Acc1'}]},
     {call,
      {301,19},
      {atom,{301,19},alias_pattern_keys},
      [{var,{301,38},'Val0'},{var,{301,44},'Acc0'}]}},
    {debug_line,302,118},
    {tuple,
     {302,5},
     [{block,
       {302,6},
       [{match,{302,6},{var,{302,6},rec19},{var,{302,6},'Node'}},
        {'case',
         {302,22},
         {var,{302,6},rec19},
         [{clause,
           {302,22},
           [{tuple,
             {302,22},
             [{atom,{302,22},c_map_pair},
              {var,{302,22},'_'},
              {var,{302,22},'_'},
              {var,{302,22},'_'},
              {var,{302,22},'_'}]}],
           [],
           [{call,
             {302,22},
             {remote,
              {302,22},
              {atom,{302,22},erlang},
              {atom,{302,22},setelement}},
             [{integer,{302,22},5},
              {var,{302,6},rec19},
              {var,{302,26},'Val1'}]}]},
          {clause,
           [{generated,true},{location,{302,22}}],
           [{var,[{generated,true},{location,{302,22}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{302,22}}],
             {remote,
              [{generated,true},{location,{302,22}}],
              {atom,[{generated,true},{location,{302,22}}],erlang},
              {atom,[{generated,true},{location,{302,22}}],error}},
             [{tuple,
               [{generated,true},{location,{302,22}}],
               [{atom,[{generated,true},{location,{302,22}}],badrecord},
                {var,{302,6},rec19}]}]}]}]}]},
      {var,{302,33},'Acc1'}]}]},
  {clause,
   {303,1},
   [{var,{303,20},'Pattern'},{var,{303,29},'Acc'}],
   [],
   [{debug_line,304,119},
    {tuple,{304,5},[{var,{304,6},'Pattern'},{var,{304,14},'Acc'}]}]}]}.
{function,
 {308,1},
 nodes_to_alias,5,
 [{clause,
   {308,1},
   [{var,{308,1},'_'},
    {var,{308,1},'_'},
    {var,{308,1},'_'},
    {var,{308,1},'_'},
    {var,{308,1},'_'}],
   [[{call,
      {308,1},
      {remote,{308,1},{atom,{308,1},fake},{atom,{308,1},is_beam_bif_info}},
      []}]],
   [{debug_line,308,120},{atom,{308,1},ignore}]},
  {clause,
   {308,1},
   [{var,{308,16},'Kind'},
    {var,{308,22},'Inner'},
    {var,{308,29},'Anno'},
    {var,{308,35},'Node'},
    {var,{308,41},'Keys0'}],
   [],
   [{debug_line,309,121},
    {'case',
     {309,5},
     {call,
      {309,10},
      {atom,{309,10},nodes_to_key},
      [{var,{309,23},'Kind'},{var,{309,29},'Inner'}]},
     [{clause,
       {310,9},
       [{tuple,{310,9},[{atom,{310,10},ok},{var,{310,13},'Key'}]}],
       [],
       [{debug_line,311,122},
        {'case',
         {311,13},
         {call,
          {311,18},
          {remote,{311,22},{atom,{311,18},maps},{atom,{311,23},take}},
          [{var,{311,28},'Key'},{var,{311,33},'Keys0'}]},
         [{clause,
           {312,17},
           [{tuple,{312,17},[{var,{312,18},'Name'},{var,{312,23},'Keys1'}]}],
           [],
           [{debug_line,313,123},
            {match,
             {313,21},
             {var,{313,21},'Var'},
             {call,
              {313,27},
              {remote,{313,31},{atom,{313,27},cerl},{atom,{313,32},ann_c_var}},
              [{var,{313,42},'Anno'},{var,{313,48},'Name'}]}},
            {debug_line,314,124},
            {tuple,
             {314,21},
             [{call,
               {314,22},
               {remote,
                {314,26},
                {atom,{314,22},cerl},
                {atom,{314,27},ann_c_alias}},
               [{var,{314,39},'Anno'},
                {var,{314,45},'Var'},
                {var,{314,50},'Node'}]},
              {var,{314,57},'Keys1'}]}]},
          {clause,
           {315,17},
           [{atom,{315,17},error}],
           [],
           [{debug_line,316,125},
            {tuple,
             {316,21},
             [{var,{316,22},'Node'},{var,{316,27},'Keys0'}]}]}]}]},
      {clause,
       {318,9},
       [{atom,{318,9},error}],
       [],
       [{debug_line,319,126},
        {tuple,
         {319,13},
         [{var,{319,14},'Node'},{var,{319,19},'Keys0'}]}]}]}]}]}.
{function,{330,1},
          nodes_to_key,2,
          [{clause,{330,1},
                   [{var,{330,1},'_'},{var,{330,1},'_'}],
                   [[{call,{330,1},
                           {remote,{330,1},
                                   {atom,{330,1},fake},
                                   {atom,{330,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,330,127},{atom,{330,1},ignore}]},
           {clause,{330,1},
                   [{var,{330,14},'Kind'},{var,{330,20},'Nodes'}],
                   [],
                   [{debug_line,331,128},
                    {call,{331,5},
                          {atom,{331,5},ntk_1},
                          [{var,{331,11},'Nodes'},
                           {nil,{331,18}},
                           {var,{331,22},'Kind'},
                           {integer,{331,29},100}]}]}]}.
{function,
 {333,1},
 ntk_1,4,
 [{clause,
   {333,1},
   [{var,{333,1},'_'},{var,{333,1},'_'},{var,{333,1},'_'},{var,{333,1},'_'}],
   [[{call,
      {333,1},
      {remote,{333,1},{atom,{333,1},fake},{atom,{333,1},is_beam_bif_info}},
      []}]],
   [{debug_line,333,129},{atom,{333,1},ignore}]},
  {clause,
   {333,1},
   [{var,{333,7},'_'},
    {var,{333,10},'_Acc'},
    {var,{333,16},'_Kind'},
    {integer,{333,23},0}],
   [],
   [{debug_line,334,130},{atom,{334,5},error}]},
  {clause,
   {335,1},
   [{cons,
     {335,7},
     {tuple,
      {335,8},
      [{atom,{335,8},c_alias},
       {var,{335,8},'_'},
       {var,{335,21},'Var'},
       {var,{335,8},'_'}]},
     {var,{335,26},'T'}},
    {var,{335,30},'Acc'},
    {var,{335,35},'Kind'},
    {var,{335,41},'N'}],
   [],
   [{debug_line,336,131},
    {call,
     {336,5},
     {atom,{336,5},ntk_1},
     [{block,0,[{cons,{336,11},{var,{336,12},'Var'},{var,{336,16},'T'}}]},
      {var,{336,20},'Acc'},
      {var,{336,25},'Kind'},
      {block,0,
       [{op,{336,33},'-',{var,{336,31},'N'},{integer,{336,35},1}}]}]}]},
  {clause,
   {337,1},
   [{cons,
     {337,7},
     {tuple,
      {337,8},
      [{atom,{337,8},c_var},{var,{337,8},'_'},{var,{337,20},'Name'}]},
     {var,{337,26},'T'}},
    {var,{337,30},'Acc'},
    {var,{337,35},'Kind'},
    {var,{337,41},'N'}],
   [],
   [{debug_line,338,132},
    {call,
     {338,5},
     {atom,{338,5},ntk_1},
     [{var,{338,11},'T'},
      {block,0,
       [{cons,
         {338,14},
         {cons,
          {338,15},
          {atom,{338,16},var},
          {cons,{338,20},{var,{338,20},'Name'},{nil,{338,24}}}},
         {var,{338,26},'Acc'}}]},
      {var,{338,32},'Kind'},
      {block,0,
       [{op,{338,40},'-',{var,{338,38},'N'},{integer,{338,42},1}}]}]}]},
  {clause,
   {339,1},
   [{cons,{339,7},{var,{339,8},'Node'},{var,{339,13},'T'}},
    {var,{339,17},'Acc0'},
    {var,{339,23},'Kind'},
    {var,{339,29},'N'}],
   [],
   [{debug_line,340,133},
    {'case',
     {340,5},
     {call,
      {340,10},
      {remote,{340,14},{atom,{340,10},cerl},{atom,{340,15},is_data}},
      [{var,{340,23},'Node'}]},
     [{clause,
       {341,9},
       [{atom,{341,9},true}],
       [],
       [{debug_line,342,134},
        {'case',
         {342,13},
         {call,
          {342,18},
          {atom,{342,18},ntk_1},
          [{block,0,
            [{call,
              {342,24},
              {remote,{342,28},{atom,{342,24},cerl},{atom,{342,29},data_es}},
              [{var,{342,37},'Node'}]}]},
           {nil,{342,44}},
           {block,0,
            [{call,
              {342,48},
              {remote,{342,52},{atom,{342,48},cerl},{atom,{342,53},data_type}},
              [{var,{342,63},'Node'}]}]},
           {block,0,
            [{op,{342,72},'-',{var,{342,70},'N'},{integer,{342,74},1}}]}]},
         [{clause,
           {343,17},
           [{tuple,{343,17},[{atom,{343,18},ok},{var,{343,21},'Key'}]}],
           [],
           [{debug_line,344,135},
            {call,
             {344,21},
             {atom,{344,21},ntk_1},
             [{var,{344,27},'T'},
              {block,0,
               [{cons,{344,30},{var,{344,31},'Key'},{var,{344,35},'Acc0'}}]},
              {var,{344,42},'Kind'},
              {block,0,
               [{op,
                 {344,50},
                 '-',
                 {var,{344,48},'N'},
                 {integer,{344,52},1}}]}]}]},
          {clause,
           {345,17},
           [{atom,{345,17},error}],
           [],
           [{debug_line,346,136},{atom,{346,21},error}]}]}]},
      {clause,
       {348,9},
       [{atom,{348,9},false}],
       [],
       [{debug_line,349,137},{atom,{349,13},error}]}]}]},
  {clause,
   {351,1},
   [{nil,{351,7}},
    {var,{351,11},'Acc'},
    {var,{351,16},'Kind'},
    {var,{351,22},'_N'}],
   [],
   [{debug_line,352,138},
    {tuple,
     {352,5},
     [{atom,{352,6},ok},
      {cons,{352,9},{var,{352,10},'Kind'},{var,{352,15},'Acc'}}]}]}]}.
{eof,{353,1}}.
