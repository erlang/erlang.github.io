{attribute,{1,1},file,{"core_lib.erl",1}}.
{attribute,{22,2},module,core_lib}.
{attribute,{25,2},export,[{make_values,1}]}.
{attribute,{26,2},export,[{is_var_used,2}]}.
{attribute,{1,1},file,{"core_parse.hrl",1}}.
{attribute,
    {32,2},
    record,
    {c_alias,
        [{typed_record_field,
             {record_field,{32,19},{atom,{32,19},anno},{nil,{32,24}}},
             {type,{32,30},list,[]}},
         {typed_record_field,
             {record_field,{32,38},{atom,{32,38},var}},
             {remote_type,
                 {32,45},
                 [{atom,{32,45},cerl},{atom,{32,50},cerl},[]]}},
         {typed_record_field,
             {record_field,{33,5},{atom,{33,5},pat}},
             {remote_type,
                 {33,12},
                 [{atom,{33,12},cerl},{atom,{33,17},cerl},[]]}}]}}.
{attribute,
    {35,2},
    record,
    {c_apply,
        [{typed_record_field,
             {record_field,{35,19},{atom,{35,19},anno},{nil,{35,24}}},
             {type,{35,30},list,[]}},
         {typed_record_field,
             {record_field,{35,38},{atom,{35,38},op}},
             {remote_type,
                 {35,44},
                 [{atom,{35,44},cerl},{atom,{35,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{36,5},{atom,{36,5},args}},
             {type,
                 {36,13},
                 list,
                 [{remote_type,
                      {36,14},
                      [{atom,{36,14},cerl},{atom,{36,19},cerl},[]]}]}}]}}.
{attribute,
    {38,2},
    record,
    {c_binary,
        [{typed_record_field,
             {record_field,{38,20},{atom,{38,20},anno},{nil,{38,25}}},
             {type,{38,31},list,[]}},
         {typed_record_field,
             {record_field,{38,39},{atom,{38,39},segments}},
             {type,
                 {38,51},
                 list,
                 [{remote_type,
                      {38,52},
                      [{atom,{38,52},cerl},{atom,{38,57},c_bitstr},[]]}]}}]}}.
{attribute,
    {40,2},
    record,
    {c_bitstr,
        [{typed_record_field,
             {record_field,{40,20},{atom,{40,20},anno},{nil,{40,25}}},
             {type,{40,31},list,[]}},
         {typed_record_field,
             {record_field,{40,39},{atom,{40,39},val}},
             {remote_type,
                 {40,46},
                 [{atom,{40,46},cerl},{atom,{40,51},cerl},[]]}},
         {typed_record_field,
             {record_field,{41,6},{atom,{41,6},size}},
             {remote_type,
                 {41,14},
                 [{atom,{41,14},cerl},{atom,{41,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{42,6},{atom,{42,6},unit}},
             {remote_type,
                 {42,14},
                 [{atom,{42,14},cerl},{atom,{42,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{43,6},{atom,{43,6},type}},
             {remote_type,
                 {43,14},
                 [{atom,{43,14},cerl},{atom,{43,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{44,6},{atom,{44,6},flags}},
             {remote_type,
                 {44,15},
                 [{atom,{44,15},cerl},{atom,{44,20},cerl},[]]}}]}}.
{attribute,
    {46,2},
    record,
    {c_call,
        [{typed_record_field,
             {record_field,{46,18},{atom,{46,18},anno},{nil,{46,23}}},
             {type,{46,29},list,[]}},
         {typed_record_field,
             {record_field,{46,37},{atom,{46,37},module}},
             {remote_type,
                 {46,47},
                 [{atom,{46,47},cerl},{atom,{46,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{47,4},{atom,{47,4},name}},
             {remote_type,
                 {47,12},
                 [{atom,{47,12},cerl},{atom,{47,17},cerl},[]]}},
         {typed_record_field,
             {record_field,{48,4},{atom,{48,4},args}},
             {type,
                 {48,12},
                 list,
                 [{remote_type,
                      {48,13},
                      [{atom,{48,13},cerl},{atom,{48,18},cerl},[]]}]}}]}}.
{attribute,
    {50,2},
    record,
    {c_case,
        [{typed_record_field,
             {record_field,{50,18},{atom,{50,18},anno},{nil,{50,23}}},
             {type,{50,29},list,[]}},
         {typed_record_field,
             {record_field,{50,37},{atom,{50,37},arg}},
             {remote_type,
                 {50,44},
                 [{atom,{50,44},cerl},{atom,{50,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{51,4},{atom,{51,4},clauses}},
             {type,
                 {51,15},
                 list,
                 [{remote_type,
                      {51,16},
                      [{atom,{51,16},cerl},{atom,{51,21},cerl},[]]}]}}]}}.
{attribute,
    {53,2},
    record,
    {c_catch,
        [{typed_record_field,
             {record_field,{53,19},{atom,{53,19},anno},{nil,{53,24}}},
             {type,{53,30},list,[]}},
         {typed_record_field,
             {record_field,{53,38},{atom,{53,38},body}},
             {remote_type,
                 {53,46},
                 [{atom,{53,46},cerl},{atom,{53,51},cerl},[]]}}]}}.
{attribute,
    {55,2},
    record,
    {c_clause,
        [{typed_record_field,
             {record_field,{55,20},{atom,{55,20},anno},{nil,{55,25}}},
             {type,{55,31},list,[]}},
         {typed_record_field,
             {record_field,{55,39},{atom,{55,39},pats}},
             {type,
                 {55,47},
                 list,
                 [{remote_type,
                      {55,48},
                      [{atom,{55,48},cerl},{atom,{55,53},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{56,6},{atom,{56,6},guard}},
             {remote_type,
                 {56,15},
                 [{atom,{56,15},cerl},{atom,{56,20},cerl},[]]}},
         {typed_record_field,
             {record_field,{57,6},{atom,{57,6},body}},
             {type,
                 {57,14},
                 union,
                 [{remote_type,
                      {57,14},
                      [{atom,{57,14},cerl},{atom,{57,19},cerl},[]]},
                  {type,{57,28},any,[]}]}}]}}.
{attribute,
    {59,2},
    record,
    {c_cons,
        [{typed_record_field,
             {record_field,{59,18},{atom,{59,18},anno},{nil,{59,23}}},
             {type,{59,29},list,[]}},
         {typed_record_field,
             {record_field,{59,37},{atom,{59,37},hd}},
             {remote_type,
                 {59,43},
                 [{atom,{59,43},cerl},{atom,{59,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{60,4},{atom,{60,4},tl}},
             {remote_type,
                 {60,10},
                 [{atom,{60,10},cerl},{atom,{60,15},cerl},[]]}}]}}.
{attribute,
    {62,2},
    record,
    {c_fun,
        [{typed_record_field,
             {record_field,{62,17},{atom,{62,17},anno},{nil,{62,22}}},
             {type,{62,28},list,[]}},
         {typed_record_field,
             {record_field,{62,36},{atom,{62,36},vars}},
             {type,
                 {62,44},
                 list,
                 [{remote_type,
                      {62,45},
                      [{atom,{62,45},cerl},{atom,{62,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{63,3},{atom,{63,3},body}},
             {remote_type,
                 {63,11},
                 [{atom,{63,11},cerl},{atom,{63,16},cerl},[]]}}]}}.
{attribute,
    {65,2},
    record,
    {c_let,
        [{typed_record_field,
             {record_field,{65,17},{atom,{65,17},anno},{nil,{65,22}}},
             {type,{65,28},list,[]}},
         {typed_record_field,
             {record_field,{65,36},{atom,{65,36},vars}},
             {type,
                 {65,44},
                 list,
                 [{remote_type,
                      {65,45},
                      [{atom,{65,45},cerl},{atom,{65,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{66,3},{atom,{66,3},arg}},
             {remote_type,
                 {66,10},
                 [{atom,{66,10},cerl},{atom,{66,15},cerl},[]]}},
         {typed_record_field,
             {record_field,{67,3},{atom,{67,3},body}},
             {remote_type,
                 {67,11},
                 [{atom,{67,11},cerl},{atom,{67,16},cerl},[]]}}]}}.
{attribute,
    {69,2},
    record,
    {c_letrec,
        [{typed_record_field,
             {record_field,{69,20},{atom,{69,20},anno},{nil,{69,25}}},
             {type,{69,31},list,[]}},
         {typed_record_field,
             {record_field,{70,20},{atom,{70,20},defs}},
             {type,
                 {70,28},
                 list,
                 [{type,
                      {70,29},
                      tuple,
                      [{remote_type,
                           {70,30},
                           [{atom,{70,30},cerl},{atom,{70,35},cerl},[]]},
                       {remote_type,
                           {70,43},
                           [{atom,{70,43},cerl},{atom,{70,48},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{71,6},{atom,{71,6},body}},
             {remote_type,
                 {71,14},
                 [{atom,{71,14},cerl},{atom,{71,19},cerl},[]]}}]}}.
{attribute,
    {73,2},
    record,
    {c_literal,
        [{typed_record_field,
             {record_field,{73,21},{atom,{73,21},anno},{nil,{73,26}}},
             {type,{73,32},list,[]}},
         {typed_record_field,
             {record_field,{73,40},{atom,{73,40},val}},
             {type,{73,47},any,[]}}]}}.
{attribute,
    {75,2},
    record,
    {c_map,
        [{typed_record_field,
             {record_field,{75,17},{atom,{75,17},anno},{nil,{75,22}}},
             {type,{75,28},list,[]}},
         {typed_record_field,
             {record_field,
                 {76,3},
                 {atom,{76,3},arg},
                 {record,
                     {76,7},
                     c_literal,
                     [{record_field,
                          {76,18},
                          {atom,{76,18},val},
                          {map,{76,22},[]}}]}},
             {type,
                 {76,30},
                 union,
                 [{remote_type,
                      {76,30},
                      [{atom,{76,30},cerl},{atom,{76,35},c_var},[]]},
                  {remote_type,
                      {76,45},
                      [{atom,{76,45},cerl},{atom,{76,50},c_literal},[]]}]}},
         {typed_record_field,
             {record_field,{77,3},{atom,{77,3},es}},
             {type,
                 {77,9},
                 list,
                 [{remote_type,
                      {77,10},
                      [{atom,{77,10},cerl},{atom,{77,15},c_map_pair},[]]}]}},
         {typed_record_field,
             {record_field,{78,3},{atom,{78,3},is_pat},{atom,{78,10},false}},
             {type,{78,19},boolean,[]}}]}}.
{attribute,
    {80,2},
    record,
    {c_map_pair,
        [{typed_record_field,
             {record_field,{80,22},{atom,{80,22},anno},{nil,{80,27}}},
             {type,{80,33},list,[]}},
         {typed_record_field,
             {record_field,{81,15},{atom,{81,15},op}},
             {type,
                 {81,21},
                 union,
                 [{type,
                      {81,21},
                      record,
                      [{atom,{81,22},c_literal},
                       {type,
                           {81,32},
                           field_type,
                           [{atom,{81,32},val},{atom,{81,37},assoc}]}]},
                  {type,
                      {81,48},
                      record,
                      [{atom,{81,49},c_literal},
                       {type,
                           {81,59},
                           field_type,
                           [{atom,{81,59},val},{atom,{81,64},exact}]}]}]}},
         {typed_record_field,
             {record_field,{82,8},{atom,{82,8},key}},
             {type,{82,15},any,[]}},
         {typed_record_field,
             {record_field,{83,8},{atom,{83,8},val}},
             {type,{83,15},any,[]}}]}}.
{attribute,
    {85,2},
    record,
    {c_module,
        [{typed_record_field,
             {record_field,{85,20},{atom,{85,20},anno},{nil,{85,25}}},
             {type,{85,31},list,[]}},
         {typed_record_field,
             {record_field,{85,39},{atom,{85,39},name}},
             {remote_type,
                 {85,47},
                 [{atom,{85,47},cerl},{atom,{85,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{86,6},{atom,{86,6},exports}},
             {type,
                 {86,17},
                 list,
                 [{remote_type,
                      {86,18},
                      [{atom,{86,18},cerl},{atom,{86,23},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{87,6},{atom,{87,6},attrs}},
             {type,
                 {87,15},
                 list,
                 [{type,
                      {87,16},
                      tuple,
                      [{remote_type,
                           {87,17},
                           [{atom,{87,17},cerl},{atom,{87,22},cerl},[]]},
                       {remote_type,
                           {87,30},
                           [{atom,{87,30},cerl},{atom,{87,35},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{88,6},{atom,{88,6},defs}},
             {type,
                 {88,14},
                 list,
                 [{type,
                      {88,15},
                      tuple,
                      [{remote_type,
                           {88,16},
                           [{atom,{88,16},cerl},{atom,{88,21},cerl},[]]},
                       {remote_type,
                           {88,29},
                           [{atom,{88,29},cerl},
                            {atom,{88,34},cerl},
                            []]}]}]}}]}}.
{attribute,
    {90,2},
    record,
    {c_opaque,
        [{typed_record_field,
             {record_field,{90,20},{atom,{90,20},anno},{nil,{90,25}}},
             {type,{90,31},list,[]}},
         {typed_record_field,
             {record_field,{90,39},{atom,{90,39},val}},
             {type,{90,46},any,[]}}]}}.
{attribute,
    {92,2},
    record,
    {c_primop,
        [{typed_record_field,
             {record_field,{92,20},{atom,{92,20},anno},{nil,{92,25}}},
             {type,{92,31},list,[]}},
         {typed_record_field,
             {record_field,{92,39},{atom,{92,39},name}},
             {remote_type,
                 {92,47},
                 [{atom,{92,47},cerl},{atom,{92,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{93,6},{atom,{93,6},args}},
             {type,
                 {93,14},
                 list,
                 [{remote_type,
                      {93,15},
                      [{atom,{93,15},cerl},{atom,{93,20},cerl},[]]}]}}]}}.
{attribute,
    {95,2},
    record,
    {c_receive,
        [{typed_record_field,
             {record_field,{95,21},{atom,{95,21},anno},{nil,{95,26}}},
             {type,{95,32},list,[]}},
         {typed_record_field,
             {record_field,{95,40},{atom,{95,40},clauses}},
             {type,
                 {95,51},
                 list,
                 [{remote_type,
                      {95,52},
                      [{atom,{95,52},cerl},{atom,{95,57},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{96,7},{atom,{96,7},timeout}},
             {remote_type,
                 {96,18},
                 [{atom,{96,18},cerl},{atom,{96,23},cerl},[]]}},
         {typed_record_field,
             {record_field,{97,7},{atom,{97,7},action}},
             {remote_type,
                 {97,17},
                 [{atom,{97,17},cerl},{atom,{97,22},cerl},[]]}}]}}.
{attribute,
    {99,2},
    record,
    {c_seq,
        [{typed_record_field,
             {record_field,{99,17},{atom,{99,17},anno},{nil,{99,22}}},
             {type,{99,28},list,[]}},
         {typed_record_field,
             {record_field,{99,36},{atom,{99,36},arg}},
             {type,
                 {99,43},
                 union,
                 [{remote_type,
                      {99,43},
                      [{atom,{99,43},cerl},{atom,{99,48},cerl},[]]},
                  {type,{99,57},any,[]}]}},
         {typed_record_field,
             {record_field,{100,3},{atom,{100,3},body}},
             {remote_type,
                 {100,11},
                 [{atom,{100,11},cerl},{atom,{100,16},cerl},[]]}}]}}.
{attribute,
    {102,2},
    record,
    {c_try,
        [{typed_record_field,
             {record_field,{102,17},{atom,{102,17},anno},{nil,{102,22}}},
             {type,{102,28},list,[]}},
         {typed_record_field,
             {record_field,{102,36},{atom,{102,36},arg}},
             {remote_type,
                 {102,43},
                 [{atom,{102,43},cerl},{atom,{102,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{103,3},{atom,{103,3},vars}},
             {type,
                 {103,11},
                 list,
                 [{remote_type,
                      {103,12},
                      [{atom,{103,12},cerl},{atom,{103,17},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{104,3},{atom,{104,3},body}},
             {remote_type,
                 {104,11},
                 [{atom,{104,11},cerl},{atom,{104,16},cerl},[]]}},
         {typed_record_field,
             {record_field,{105,3},{atom,{105,3},evars}},
             {type,
                 {105,12},
                 list,
                 [{remote_type,
                      {105,13},
                      [{atom,{105,13},cerl},{atom,{105,18},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{106,3},{atom,{106,3},handler}},
             {remote_type,
                 {106,14},
                 [{atom,{106,14},cerl},{atom,{106,19},cerl},[]]}}]}}.
{attribute,
    {108,2},
    record,
    {c_tuple,
        [{typed_record_field,
             {record_field,{108,19},{atom,{108,19},anno},{nil,{108,24}}},
             {type,{108,30},list,[]}},
         {typed_record_field,
             {record_field,{108,38},{atom,{108,38},es}},
             {type,
                 {108,44},
                 list,
                 [{remote_type,
                      {108,45},
                      [{atom,{108,45},cerl},{atom,{108,50},cerl},[]]}]}}]}}.
{attribute,
    {110,2},
    record,
    {c_values,
        [{typed_record_field,
             {record_field,{110,20},{atom,{110,20},anno},{nil,{110,25}}},
             {type,{110,31},list,[]}},
         {typed_record_field,
             {record_field,{110,39},{atom,{110,39},es}},
             {type,
                 {110,45},
                 list,
                 [{remote_type,
                      {110,46},
                      [{atom,{110,46},cerl},{atom,{110,51},cerl},[]]}]}}]}}.
{attribute,
    {112,2},
    record,
    {c_var,
        [{typed_record_field,
             {record_field,{112,17},{atom,{112,17},anno},{nil,{112,22}}},
             {type,{112,28},list,[]}},
         {typed_record_field,
             {record_field,{112,36},{atom,{112,36},name}},
             {remote_type,
                 {112,44},
                 [{atom,{112,44},cerl},{atom,{112,49},var_name},[]]}}]}}.
{attribute,{29,1},file,{"core_lib.erl",29}}.
{attribute,{32,2},
           removed,
           [{get_anno,1,"use cerl:get_ann/1 instead"},
            {set_anno,2,"use cerl:set_ann/2 instead"}]}.
{attribute,{35,2},
           removed,
           [{is_literal,1,"use cerl:is_literal/1 instead"},
            {is_literal_list,1,"use cerl:is_literal_list/1 instead"},
            {literal_value,1,"use cerl:concrete/1 instead"}]}.
{attribute,
    {40,2},
    spec,
    {{make_values,1},
     [{type,
          {40,18},
          'fun',
          [{type,
               {40,18},
               product,
               [{type,
                    {40,19},
                    union,
                    [{type,
                         {40,19},
                         list,
                         [{remote_type,
                              {40,20},
                              [{atom,{40,20},cerl},{atom,{40,25},cerl},[]]}]},
                     {remote_type,
                         {40,35},
                         [{atom,{40,35},cerl},{atom,{40,40},cerl},[]]}]}]},
           {remote_type,
               {40,51},
               [{atom,{40,51},cerl},{atom,{40,56},cerl},[]]}]}]}}.
{function,
    {42,1},
    make_values,1,
    [{clause,
         {42,1},
         [{var,{42,1},'_'}],
         [[{call,
               {42,1},
               {remote,
                   {42,1},
                   {atom,{42,1},fake},
                   {atom,{42,1},is_beam_bif_info}},
               []}]],
         [{debug_line,42,1},{atom,{42,1},ignore}]},
     {clause,
         {42,1},
         [{cons,{42,13},{var,{42,14},'E'},{nil,{42,15}}}],
         [],
         [{debug_line,42,2},{var,{42,21},'E'}]},
     {clause,
         {43,1},
         [{match,
              {43,13},
              {cons,{43,13},{var,{43,14},'H'},{var,{43,16},'_'}},
              {var,{43,19},'Es'}}],
         [],
         [{debug_line,43,3},
          {tuple,
              {43,26},
              [{atom,{43,26},c_values},
               {call,
                   {43,41},
                   {remote,{43,45},{atom,{43,41},cerl},{atom,{43,46},get_ann}},
                   [{var,{43,54},'H'}]},
               {var,{43,60},'Es'}]}]},
     {clause,
         {44,1},
         [{nil,{44,13}}],
         [],
         [{debug_line,44,4},
          {tuple,
              {44,20},
              [{atom,{44,20},c_values},{nil,{44,20}},{nil,{44,33}}]}]},
     {clause,
         {45,1},
         [{var,{45,13},'E'}],
         [],
         [{debug_line,45,5},{var,{45,19},'E'}]}]}.
{attribute,
    {48,2},
    spec,
    {{is_var_used,2},
     [{type,
          {48,18},
          'fun',
          [{type,
               {48,18},
               product,
               [{remote_type,
                    {48,19},
                    [{atom,{48,19},cerl},{atom,{48,24},var_name},[]]},
                {remote_type,
                    {48,36},
                    [{atom,{48,36},cerl},{atom,{48,41},cerl},[]]}]},
           {type,{48,52},boolean,[]}]}]}}.
{function,{50,1},
          is_var_used,2,
          [{clause,{50,1},
                   [{var,{50,1},'_'},{var,{50,1},'_'}],
                   [[{call,{50,1},
                           {remote,{50,1},
                                   {atom,{50,1},fake},
                                   {atom,{50,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,50,6},{atom,{50,1},ignore}]},
           {clause,{50,1},
                   [{var,{50,13},'V'},{var,{50,16},'B'}],
                   [],
                   [{debug_line,50,7},
                    {call,{50,22},
                          {atom,{50,22},vu_expr},
                          [{var,{50,30},'V'},{var,{50,33},'B'}]}]}]}.
{function,
 {52,1},
 vu_expr,2,
 [{clause,
   {52,1},
   [{var,{52,1},'_'},{var,{52,1},'_'}],
   [[{call,
      {52,1},
      {remote,{52,1},{atom,{52,1},fake},{atom,{52,1},is_beam_bif_info}},
      []}]],
   [{debug_line,52,8},{atom,{52,1},ignore}]},
  {clause,
   {52,1},
   [{var,{52,9},'V'},
    {tuple,
     {52,12},
     [{atom,{52,12},c_values},{var,{52,12},'_'},{var,{52,25},'Es'}]}],
   [],
   [{debug_line,53,9},
    {call,
     {53,5},
     {atom,{53,5},vu_expr_list},
     [{var,{53,18},'V'},{var,{53,21},'Es'}]}]},
  {clause,
   {54,1},
   [{var,{54,9},'V'},
    {tuple,
     {54,12},
     [{atom,{54,12},c_var},{var,{54,12},'_'},{var,{54,24},'V2'}]}],
   [],
   [{debug_line,54,10},
    {op,{54,34},'=:=',{var,{54,32},'V'},{var,{54,38},'V2'}}]},
  {clause,
   {55,1},
   [{var,{55,9},'_'},
    {tuple,
     {55,12},
     [{atom,{55,12},c_literal},{var,{55,12},'_'},{var,{55,12},'_'}]}],
   [],
   [{debug_line,55,11},{atom,{55,29},false}]},
  {clause,
   {56,1},
   [{var,{56,9},'V'},
    {tuple,
     {56,12},
     [{atom,{56,12},c_cons},
      {var,{56,12},'_'},
      {var,{56,23},'H'},
      {var,{56,28},'T'}]}],
   [],
   [{debug_line,57,12},
    {'case',
     {57,5},
     {call,{57,5},{atom,{57,5},vu_expr},[{var,{57,13},'V'},{var,{57,16},'H'}]},
     [{clause,{57,5},[{atom,{57,5},true}],[],[{atom,{57,5},true}]},
      {clause,
       {57,5},
       [{atom,{57,5},false}],
       [],
       [{call,
         {57,26},
         {atom,{57,26},vu_expr},
         [{var,{57,34},'V'},{var,{57,37},'T'}]}]},
      {clause,
       [{generated,true},{location,{57,5}}],
       [{var,{57,5},cov1}],
       [],
       [{call,
         {57,5},
         {remote,{57,5},{atom,{57,5},erlang},{atom,{57,5},error}},
         [{block,0,
           [{tuple,{57,5},[{atom,{57,5},badarg},{var,{57,5},cov1}]}]}]}]}]}]},
  {clause,
   {58,1},
   [{var,{58,9},'V'},
    {tuple,
     {58,12},
     [{atom,{58,12},c_tuple},{var,{58,12},'_'},{var,{58,24},'Es'}]}],
   [],
   [{debug_line,59,13},
    {call,
     {59,5},
     {atom,{59,5},vu_expr_list},
     [{var,{59,18},'V'},{var,{59,21},'Es'}]}]},
  {clause,
   {60,1},
   [{var,{60,9},'V'},
    {tuple,
     {60,12},
     [{atom,{60,12},c_map},
      {var,{60,12},'_'},
      {var,{60,23},'M'},
      {var,{60,28},'Es'},
      {var,{60,12},'_'}]}],
   [],
   [{debug_line,61,14},
    {'case',
     {61,5},
     {call,{61,5},{atom,{61,5},vu_expr},[{var,{61,13},'V'},{var,{61,16},'M'}]},
     [{clause,{61,5},[{atom,{61,5},true}],[],[{atom,{61,5},true}]},
      {clause,
       {61,5},
       [{atom,{61,5},false}],
       [],
       [{call,
         {61,26},
         {atom,{61,26},vu_expr_list},
         [{var,{61,39},'V'},{var,{61,42},'Es'}]}]},
      {clause,
       [{generated,true},{location,{61,5}}],
       [{var,{61,5},cov2}],
       [],
       [{call,
         {61,5},
         {remote,{61,5},{atom,{61,5},erlang},{atom,{61,5},error}},
         [{block,0,
           [{tuple,{61,5},[{atom,{61,5},badarg},{var,{61,5},cov2}]}]}]}]}]}]},
  {clause,
   {62,1},
   [{var,{62,9},'V'},
    {tuple,
     {62,12},
     [{atom,{62,12},c_map_pair},
      {var,{62,12},'_'},
      {var,{62,12},'_'},
      {var,{62,28},'Key'},
      {var,{62,36},'Val'}]}],
   [],
   [{debug_line,63,15},
    {call,
     {63,5},
     {atom,{63,5},vu_expr_list},
     [{var,{63,18},'V'},
      {block,0,
       [{cons,
         {63,21},
         {var,{63,22},'Key'},
         {cons,{63,26},{var,{63,26},'Val'},{nil,{63,29}}}}]}]}]},
  {clause,
   {64,1},
   [{var,{64,9},'V'},
    {tuple,
     {64,12},
     [{atom,{64,12},c_binary},{var,{64,12},'_'},{var,{64,31},'Ss'}]}],
   [],
   [{debug_line,65,16},
    {call,
     {65,5},
     {atom,{65,5},vu_seg_list},
     [{var,{65,17},'V'},{var,{65,20},'Ss'}]}]},
  {clause,
   {66,1},
   [{var,{66,9},'V'},
    {tuple,
     {66,12},
     [{atom,{66,12},c_fun},
      {var,{66,12},'_'},
      {var,{66,24},'Vs'},
      {var,{66,32},'B'}]}],
   [],
   [{debug_line,68,17},
    {'case',
     {68,5},
     {call,
      {68,10},
      {atom,{68,10},vu_var_list},
      [{var,{68,22},'V'},{var,{68,25},'Vs'}]},
     [{clause,
       {69,2},
       [{atom,{69,2},true}],
       [],
       [{debug_line,69,18},{atom,{69,10},false}]},
      {clause,
       {70,2},
       [{atom,{70,2},false}],
       [],
       [{debug_line,70,19},
        {call,
         {70,11},
         {atom,{70,11},vu_expr},
         [{var,{70,19},'V'},{var,{70,22},'B'}]}]}]}]},
  {clause,
   {72,1},
   [{var,{72,9},'V'},
    {tuple,
     {72,12},
     [{atom,{72,12},c_let},
      {var,{72,12},'_'},
      {var,{72,24},'Vs'},
      {var,{72,31},'Arg'},
      {var,{72,40},'B'}]}],
   [],
   [{debug_line,73,20},
    {'case',
     {73,5},
     {call,
      {73,10},
      {atom,{73,10},vu_expr},
      [{var,{73,18},'V'},{var,{73,21},'Arg'}]},
     [{clause,
       {74,2},
       [{atom,{74,2},true}],
       [],
       [{debug_line,74,21},{atom,{74,10},true}]},
      {clause,
       {75,2},
       [{atom,{75,2},false}],
       [],
       [{debug_line,77,22},
        {'case',
         {77,6},
         {call,
          {77,11},
          {atom,{77,11},vu_var_list},
          [{var,{77,23},'V'},{var,{77,26},'Vs'}]},
         [{clause,
           {78,3},
           [{atom,{78,3},true}],
           [],
           [{debug_line,78,23},{atom,{78,11},false}]},
          {clause,
           {79,3},
           [{atom,{79,3},false}],
           [],
           [{debug_line,79,24},
            {call,
             {79,12},
             {atom,{79,12},vu_expr},
             [{var,{79,20},'V'},{var,{79,23},'B'}]}]}]}]}]}]},
  {clause,
   {82,1},
   [{var,{82,9},'V'},
    {tuple,
     {82,12},
     [{atom,{82,12},c_letrec},
      {var,{82,12},'_'},
      {var,{82,27},'Fs'},
      {var,{82,35},'B'}]}],
   [],
   [{debug_line,83,25},
    {'case',
     {83,5},
     {call,
      {83,5},
      {remote,{83,10},{atom,{83,5},lists},{atom,{83,11},any}},
      [{block,0,
        [{'fun',
          {83,15},
          {clauses,
           [{clause,
             {83,19},
             [{tuple,{83,20},[{var,{83,21},'_'},{var,{83,23},'Fb'}]}],
             [],
             [{call,
               {83,31},
               {atom,{83,31},vu_expr},
               [{var,{83,39},'V'},{var,{83,42},'Fb'}]}]}]}}]},
       {var,{83,51},'Fs'}]},
     [{clause,{83,5},[{atom,{83,5},true}],[],[{atom,{83,5},true}]},
      {clause,
       {83,5},
       [{atom,{83,5},false}],
       [],
       [{call,
         {83,62},
         {atom,{83,62},vu_expr},
         [{var,{83,70},'V'},{var,{83,73},'B'}]}]},
      {clause,
       [{generated,true},{location,{83,5}}],
       [{var,{83,5},cov3}],
       [],
       [{call,
         {83,5},
         {remote,{83,5},{atom,{83,5},erlang},{atom,{83,5},error}},
         [{block,0,
           [{tuple,{83,5},[{atom,{83,5},badarg},{var,{83,5},cov3}]}]}]}]}]}]},
  {clause,
   {84,1},
   [{var,{84,9},'V'},
    {tuple,
     {84,12},
     [{atom,{84,12},c_seq},
      {var,{84,12},'_'},
      {var,{84,23},'Arg'},
      {var,{84,32},'B'}]}],
   [],
   [{debug_line,85,26},
    {'case',
     {85,5},
     {call,
      {85,5},
      {atom,{85,5},vu_expr},
      [{var,{85,13},'V'},{var,{85,16},'Arg'}]},
     [{clause,{85,5},[{atom,{85,5},true}],[],[{atom,{85,5},true}]},
      {clause,
       {85,5},
       [{atom,{85,5},false}],
       [],
       [{call,
         {85,28},
         {atom,{85,28},vu_expr},
         [{var,{85,36},'V'},{var,{85,39},'B'}]}]},
      {clause,
       [{generated,true},{location,{85,5}}],
       [{var,{85,5},cov4}],
       [],
       [{call,
         {85,5},
         {remote,{85,5},{atom,{85,5},erlang},{atom,{85,5},error}},
         [{block,0,
           [{tuple,{85,5},[{atom,{85,5},badarg},{var,{85,5},cov4}]}]}]}]}]}]},
  {clause,
   {86,1},
   [{var,{86,9},'V'},
    {tuple,
     {86,12},
     [{atom,{86,12},c_case},
      {var,{86,12},'_'},
      {var,{86,24},'Arg'},
      {var,{86,36},'Cs'}]}],
   [],
   [{debug_line,87,27},
    {'case',
     {87,5},
     {call,
      {87,5},
      {atom,{87,5},vu_expr},
      [{var,{87,13},'V'},{var,{87,16},'Arg'}]},
     [{clause,{87,5},[{atom,{87,5},true}],[],[{atom,{87,5},true}]},
      {clause,
       {87,5},
       [{atom,{87,5},false}],
       [],
       [{call,
         {87,28},
         {atom,{87,28},vu_clauses},
         [{var,{87,39},'V'},{var,{87,42},'Cs'}]}]},
      {clause,
       [{generated,true},{location,{87,5}}],
       [{var,{87,5},cov5}],
       [],
       [{call,
         {87,5},
         {remote,{87,5},{atom,{87,5},erlang},{atom,{87,5},error}},
         [{block,0,
           [{tuple,{87,5},[{atom,{87,5},badarg},{var,{87,5},cov5}]}]}]}]}]}]},
  {clause,
   {88,1},
   [{var,{88,9},'V'},
    {tuple,
     {88,12},
     [{atom,{88,12},c_apply},
      {var,{88,12},'_'},
      {var,{88,24},'Op'},
      {var,{88,32},'As'}]}],
   [],
   [{debug_line,89,28},
    {call,
     {89,5},
     {atom,{89,5},vu_expr_list},
     [{var,{89,18},'V'},
      {block,0,[{cons,{89,21},{var,{89,22},'Op'},{var,{89,25},'As'}}]}]}]},
  {clause,
   {90,1},
   [{var,{90,9},'V'},
    {tuple,
     {90,12},
     [{atom,{90,12},c_call},
      {var,{90,12},'_'},
      {var,{90,27},'M'},
      {var,{90,34},'N'},
      {var,{90,41},'As'}]}],
   [],
   [{debug_line,91,29},
    {call,
     {91,5},
     {atom,{91,5},vu_expr_list},
     [{var,{91,18},'V'},
      {block,0,
       [{cons,
         {91,21},
         {var,{91,22},'M'},
         {cons,{91,24},{var,{91,24},'N'},{var,{91,26},'As'}}}]}]}]},
  {clause,
   {92,1},
   [{var,{92,9},'V'},
    {tuple,
     {92,12},
     [{atom,{92,12},c_primop},
      {var,{92,12},'_'},
      {var,{92,12},'_'},
      {var,{92,27},'As'}]}],
   [],
   [{debug_line,93,30},
    {call,
     {93,5},
     {atom,{93,5},vu_expr_list},
     [{var,{93,18},'V'},{var,{93,21},'As'}]}]},
  {clause,
   {94,1},
   [{var,{94,9},'V'},
    {tuple,
     {94,12},
     [{atom,{94,12},c_catch},{var,{94,12},'_'},{var,{94,26},'B'}]}],
   [],
   [{debug_line,95,31},
    {call,
     {95,5},
     {atom,{95,5},vu_expr},
     [{var,{95,13},'V'},{var,{95,16},'B'}]}]},
  {clause,
   {96,1},
   [{var,{96,9},'V'},
    {tuple,
     {96,12},
     [{atom,{96,12},c_try},
      {var,{96,12},'_'},
      {var,{96,23},'E'},
      {var,{96,30},'Vs'},
      {var,{96,38},'B'},
      {var,{96,46},'Evs'},
      {var,{96,58},'H'}]}],
   [],
   [{debug_line,97,32},
    {'case',
     {97,5},
     {call,
      {97,10},
      {atom,{97,10},vu_expr},
      [{var,{97,18},'V'},{var,{97,21},'E'}]},
     [{clause,
       {98,2},
       [{atom,{98,2},true}],
       [],
       [{debug_line,98,33},{atom,{98,10},true}]},
      {clause,
       {99,2},
       [{atom,{99,2},false}],
       [],
       [{debug_line,101,34},
        {'case',
         {101,6},
         {'case',
          {101,11},
          {call,
           {101,16},
           {atom,{101,16},vu_var_list},
           [{var,{101,28},'V'},{var,{101,31},'Vs'}]},
          [{clause,
            {102,8},
            [{atom,{102,8},true}],
            [],
            [{debug_line,102,35},{atom,{102,16},false}]},
           {clause,
            {103,8},
            [{atom,{103,8},false}],
            [],
            [{debug_line,103,36},
             {call,
              {103,17},
              {atom,{103,17},vu_expr},
              [{var,{103,25},'V'},{var,{103,28},'B'}]}]}]},
         [{clause,
           {105,3},
           [{atom,{105,3},true}],
           [],
           [{debug_line,105,37},{atom,{105,11},true}]},
          {clause,
           {106,3},
           [{atom,{106,3},false}],
           [],
           [{debug_line,107,38},
            {'case',
             {107,7},
             {call,
              {107,12},
              {atom,{107,12},vu_var_list},
              [{var,{107,24},'V'},{var,{107,27},'Evs'}]},
             [{clause,
               {108,4},
               [{atom,{108,4},true}],
               [],
               [{debug_line,108,39},{atom,{108,12},false}]},
              {clause,
               {109,4},
               [{atom,{109,4},false}],
               [],
               [{debug_line,109,40},
                {call,
                 {109,13},
                 {atom,{109,13},vu_expr},
                 [{var,{109,21},'V'},{var,{109,24},'H'}]}]}]}]}]}]}]}]}]}.
{function,
    {114,1},
    vu_expr_list,2,
    [{clause,
         {114,1},
         [{var,{114,1},'_'},{var,{114,1},'_'}],
         [[{call,
               {114,1},
               {remote,
                   {114,1},
                   {atom,{114,1},fake},
                   {atom,{114,1},is_beam_bif_info}},
               []}]],
         [{debug_line,114,41},{atom,{114,1},ignore}]},
     {clause,
         {114,1},
         [{var,{114,14},'V'},{var,{114,17},'Es'}],
         [],
         [{debug_line,115,42},
          {call,
              {115,5},
              {remote,{115,10},{atom,{115,5},lists},{atom,{115,11},any}},
              [{block,0,
                   [{'fun',
                        {115,15},
                        {clauses,
                            [{clause,
                                 {115,18},
                                 [{var,{115,19},'E'}],
                                 [],
                                 [{call,
                                      {115,25},
                                      {atom,{115,25},vu_expr},
                                      [{var,{115,33},'V'},
                                       {var,{115,36},'E'}]}]}]}}]},
               {var,{115,44},'Es'}]}]}]}.
{function,
 {117,1},
 vu_seg_list,2,
 [{clause,
   {117,1},
   [{var,{117,1},'_'},{var,{117,1},'_'}],
   [[{call,
      {117,1},
      {remote,{117,1},{atom,{117,1},fake},{atom,{117,1},is_beam_bif_info}},
      []}]],
   [{debug_line,117,43},{atom,{117,1},ignore}]},
  {clause,
   {117,1},
   [{var,{117,13},'V'},{var,{117,16},'Ss'}],
   [],
   [{debug_line,118,44},
    {call,
     {118,5},
     {remote,{118,10},{atom,{118,5},lists},{atom,{118,11},any}},
     [{block,0,
       [{'fun',
         {118,15},
         {clauses,
          [{clause,
            {118,19},
            [{tuple,
              {118,20},
              [{atom,{118,20},c_bitstr},
               {var,{118,20},'_'},
               {var,{118,34},'Val'},
               {var,{118,43},'Size'},
               {var,{118,20},'_'},
               {var,{118,20},'_'},
               {var,{118,20},'_'}]}],
            [],
            [{debug_line,119,45},
             {'case',
              {119,9},
              {call,
               {119,9},
               {atom,{119,9},vu_expr},
               [{var,{119,17},'V'},{var,{119,20},'Val'}]},
              [{clause,{119,9},[{atom,{119,9},true}],[],[{atom,{119,9},true}]},
               {clause,
                {119,9},
                [{atom,{119,9},false}],
                [],
                [{call,
                  {119,32},
                  {atom,{119,32},vu_expr},
                  [{var,{119,40},'V'},{var,{119,43},'Size'}]}]},
               {clause,
                [{generated,true},{location,{119,9}}],
                [{var,{119,9},cov1}],
                [],
                [{call,
                  {119,9},
                  {remote,{119,9},{atom,{119,9},erlang},{atom,{119,9},error}},
                  [{block,0,
                    [{tuple,
                      {119,9},
                      [{atom,{119,9},badarg},
                       {var,{119,9},cov1}]}]}]}]}]}]}]}}]},
      {var,{120,13},'Ss'}]}]}]}.
{attribute,
    {122,2},
    spec,
    {{vu_clause,2},
     [{type,
          {122,16},
          'fun',
          [{type,
               {122,16},
               product,
               [{remote_type,
                    {122,17},
                    [{atom,{122,17},cerl},{atom,{122,22},var_name},[]]},
                {remote_type,
                    {122,34},
                    [{atom,{122,34},cerl},{atom,{122,39},c_clause},[]]}]},
           {type,{122,54},boolean,[]}]}]}}.
{function,
 {124,1},
 vu_clause,2,
 [{clause,
   {124,1},
   [{var,{124,1},'_'},{var,{124,1},'_'}],
   [[{call,
      {124,1},
      {remote,{124,1},{atom,{124,1},fake},{atom,{124,1},is_beam_bif_info}},
      []}]],
   [{debug_line,124,46},{atom,{124,1},ignore}]},
  {clause,
   {124,1},
   [{var,{124,11},'V'},
    {tuple,
     {124,14},
     [{atom,{124,14},c_clause},
      {var,{124,14},'_'},
      {var,{124,29},'Ps'},
      {var,{124,38},'G'},
      {var,{124,45},'B'}]}],
   [],
   [{debug_line,125,47},
    {'case',
     {125,5},
     {call,
      {125,5},
      {atom,{125,5},vu_pattern_list},
      [{var,{125,21},'V'},{var,{125,24},'Ps'}]},
     [{clause,{125,5},[{atom,{125,5},true}],[],[{atom,{125,5},true}]},
      {clause,
       {125,5},
       [{atom,{125,5},false}],
       [],
       [{'case',
         {125,36},
         {call,
          {125,36},
          {atom,{125,36},vu_expr},
          [{var,{125,44},'V'},{var,{125,47},'G'}]},
         [{clause,{125,36},[{atom,{125,36},true}],[],[{atom,{125,36},true}]},
          {clause,
           {125,36},
           [{atom,{125,36},false}],
           [],
           [{call,
             {125,57},
             {atom,{125,57},vu_expr},
             [{var,{125,65},'V'},{var,{125,68},'B'}]}]},
          {clause,
           [{generated,true},{location,{125,36}}],
           [{var,{125,36},cov1}],
           [],
           [{call,
             {125,36},
             {remote,{125,36},{atom,{125,36},erlang},{atom,{125,36},error}},
             [{block,0,
               [{tuple,
                 {125,36},
                 [{atom,{125,36},badarg},{var,{125,36},cov1}]}]}]}]}]}]},
      {clause,
       [{generated,true},{location,{125,5}}],
       [{var,{125,5},cov2}],
       [],
       [{call,
         {125,5},
         {remote,{125,5},{atom,{125,5},erlang},{atom,{125,5},error}},
         [{block,0,
           [{tuple,
             {125,5},
             [{atom,{125,5},badarg},{var,{125,5},cov2}]}]}]}]}]}]}]}.
{attribute,
    {127,2},
    spec,
    {{vu_clauses,2},
     [{type,
          {127,17},
          'fun',
          [{type,
               {127,17},
               product,
               [{remote_type,
                    {127,18},
                    [{atom,{127,18},cerl},{atom,{127,23},var_name},[]]},
                {type,
                    {127,35},
                    list,
                    [{remote_type,
                         {127,36},
                         [{atom,{127,36},cerl},
                          {atom,{127,41},c_clause},
                          []]}]}]},
           {type,{127,57},boolean,[]}]}]}}.
{function,
    {129,1},
    vu_clauses,2,
    [{clause,
         {129,1},
         [{var,{129,1},'_'},{var,{129,1},'_'}],
         [[{call,
               {129,1},
               {remote,
                   {129,1},
                   {atom,{129,1},fake},
                   {atom,{129,1},is_beam_bif_info}},
               []}]],
         [{debug_line,129,48},{atom,{129,1},ignore}]},
     {clause,
         {129,1},
         [{var,{129,12},'V'},{var,{129,15},'Cs'}],
         [],
         [{debug_line,130,49},
          {call,
              {130,5},
              {remote,{130,10},{atom,{130,5},lists},{atom,{130,11},any}},
              [{block,0,
                   [{'fun',
                        {130,15},
                        {clauses,
                            [{clause,
                                 {130,18},
                                 [{var,{130,19},'C'}],
                                 [],
                                 [{call,
                                      {130,25},
                                      {atom,{130,25},vu_clause},
                                      [{var,{130,35},'V'},
                                       {var,{130,38},'C'}]}]}]}}]},
               {var,{130,46},'Cs'}]}]}]}.
{function,
    {136,1},
    vu_pattern,2,
    [{clause,
         {136,1},
         [{var,{136,1},'_'},{var,{136,1},'_'}],
         [[{call,
               {136,1},
               {remote,
                   {136,1},
                   {atom,{136,1},fake},
                   {atom,{136,1},is_beam_bif_info}},
               []}]],
         [{debug_line,136,50},{atom,{136,1},ignore}]},
     {clause,
         {136,1},
         [{var,{136,12},'V'},
          {tuple,
              {136,15},
              [{atom,{136,15},c_var},{var,{136,15},'_'},{var,{136,27},'V2'}]}],
         [],
         [{debug_line,137,51},
          {op,{137,7},'=:=',{var,{137,5},'V'},{var,{137,11},'V2'}}]},
     {clause,
         {138,1},
         [{var,{138,12},'V'},
          {tuple,
              {138,15},
              [{atom,{138,15},c_cons},
               {var,{138,15},'_'},
               {var,{138,26},'H'},
               {var,{138,31},'T'}]}],
         [],
         [{debug_line,139,52},
          {'case',
              {139,5},
              {call,
                  {139,5},
                  {atom,{139,5},vu_pattern},
                  [{var,{139,16},'V'},{var,{139,19},'H'}]},
              [{clause,{139,5},[{atom,{139,5},true}],[],[{atom,{139,5},true}]},
               {clause,
                   {139,5},
                   [{atom,{139,5},false}],
                   [],
                   [{call,
                        {139,29},
                        {atom,{139,29},vu_pattern},
                        [{var,{139,40},'V'},{var,{139,43},'T'}]}]},
               {clause,
                   [{generated,true},{location,{139,5}}],
                   [{var,{139,5},cov1}],
                   [],
                   [{call,
                        {139,5},
                        {remote,
                            {139,5},
                            {atom,{139,5},erlang},
                            {atom,{139,5},error}},
                        [{block,0,
                             [{tuple,
                                  {139,5},
                                  [{atom,{139,5},badarg},
                                   {var,{139,5},cov1}]}]}]}]}]}]},
     {clause,
         {140,1},
         [{var,{140,12},'V'},
          {tuple,
              {140,15},
              [{atom,{140,15},c_tuple},
               {var,{140,15},'_'},
               {var,{140,27},'Es'}]}],
         [],
         [{debug_line,141,53},
          {call,
              {141,5},
              {atom,{141,5},vu_pattern_list},
              [{var,{141,21},'V'},{var,{141,24},'Es'}]}]},
     {clause,
         {142,1},
         [{var,{142,12},'V'},
          {tuple,
              {142,15},
              [{atom,{142,15},c_binary},
               {var,{142,15},'_'},
               {var,{142,34},'Ss'}]}],
         [],
         [{debug_line,143,54},
          {call,
              {143,5},
              {atom,{143,5},vu_pat_seg_list},
              [{var,{143,21},'V'},{var,{143,24},'Ss'}]}]},
     {clause,
         {144,1},
         [{var,{144,12},'V'},
          {tuple,
              {144,15},
              [{atom,{144,15},c_map},
               {var,{144,15},'_'},
               {var,{144,15},'_'},
               {var,{144,25},'Es'},
               {var,{144,15},'_'}]}],
         [],
         [{debug_line,145,55},
          {call,
              {145,5},
              {atom,{145,5},vu_map_pairs},
              [{var,{145,18},'V'},{var,{145,21},'Es'}]}]},
     {clause,
         {146,1},
         [{var,{146,12},'V'},
          {tuple,
              {146,15},
              [{atom,{146,15},c_alias},
               {var,{146,15},'_'},
               {var,{146,28},'Var'},
               {var,{146,36},'P'}]}],
         [],
         [{debug_line,147,56},
          {'case',
              {147,5},
              {call,
                  {147,5},
                  {atom,{147,5},vu_pattern},
                  [{var,{147,16},'V'},{var,{147,19},'Var'}]},
              [{clause,{147,5},[{atom,{147,5},true}],[],[{atom,{147,5},true}]},
               {clause,
                   {147,5},
                   [{atom,{147,5},false}],
                   [],
                   [{call,
                        {147,31},
                        {atom,{147,31},vu_pattern},
                        [{var,{147,42},'V'},{var,{147,45},'P'}]}]},
               {clause,
                   [{generated,true},{location,{147,5}}],
                   [{var,{147,5},cov2}],
                   [],
                   [{call,
                        {147,5},
                        {remote,
                            {147,5},
                            {atom,{147,5},erlang},
                            {atom,{147,5},error}},
                        [{block,0,
                             [{tuple,
                                  {147,5},
                                  [{atom,{147,5},badarg},
                                   {var,{147,5},cov2}]}]}]}]}]}]},
     {clause,
         {148,1},
         [{var,{148,12},'_V'},
          {tuple,
              {148,16},
              [{atom,{148,16},c_literal},
               {var,{148,16},'_'},
               {var,{148,16},'_'}]}],
         [],
         [{debug_line,148,57},{atom,{148,33},false}]}]}.
{function,
    {150,1},
    vu_pattern_list,2,
    [{clause,
         {150,1},
         [{var,{150,1},'_'},{var,{150,1},'_'}],
         [[{call,
               {150,1},
               {remote,
                   {150,1},
                   {atom,{150,1},fake},
                   {atom,{150,1},is_beam_bif_info}},
               []}]],
         [{debug_line,150,58},{atom,{150,1},ignore}]},
     {clause,
         {150,1},
         [{var,{150,17},'V'},{var,{150,20},'Ps'}],
         [],
         [{debug_line,151,59},
          {call,
              {151,5},
              {remote,{151,10},{atom,{151,5},lists},{atom,{151,11},any}},
              [{block,0,
                   [{'fun',
                        {151,15},
                        {clauses,
                            [{clause,
                                 {151,18},
                                 [{var,{151,19},'P'}],
                                 [],
                                 [{call,
                                      {151,25},
                                      {atom,{151,25},vu_pattern},
                                      [{var,{151,36},'V'},
                                       {var,{151,39},'P'}]}]}]}}]},
               {var,{151,47},'Ps'}]}]}]}.
{function,
    {153,1},
    vu_pat_seg_list,2,
    [{clause,
         {153,1},
         [{var,{153,1},'_'},{var,{153,1},'_'}],
         [[{call,
               {153,1},
               {remote,
                   {153,1},
                   {atom,{153,1},fake},
                   {atom,{153,1},is_beam_bif_info}},
               []}]],
         [{debug_line,153,60},{atom,{153,1},ignore}]},
     {clause,
         {153,1},
         [{var,{153,17},'V'},{var,{153,20},'Ss'}],
         [],
         [{debug_line,154,61},
          {call,
              {154,5},
              {remote,{154,10},{atom,{154,5},lists},{atom,{154,11},any}},
              [{block,0,
                   [{'fun',
                        {154,15},
                        {clauses,
                            [{clause,
                                 {154,18},
                                 [{tuple,
                                      {154,19},
                                      [{atom,{154,19},c_bitstr},
                                       {var,{154,19},'_'},
                                       {var,{154,19},'_'},
                                       {var,{154,34},'Size'},
                                       {var,{154,19},'_'},
                                       {var,{154,19},'_'},
                                       {var,{154,19},'_'}]}],
                                 [],
                                 [{debug_line,155,62},
                                  {call,
                                      {155,23},
                                      {atom,{155,23},vu_pattern},
                                      [{var,{155,34},'V'},
                                       {var,{155,37},'Size'}]}]}]}}]},
               {var,{156,20},'Ss'}]}]}]}.
{function,
 {158,1},
 vu_map_pairs,2,
 [{clause,
   {158,1},
   [{var,{158,1},'_'},{var,{158,1},'_'}],
   [[{call,
      {158,1},
      {remote,{158,1},{atom,{158,1},fake},{atom,{158,1},is_beam_bif_info}},
      []}]],
   [{debug_line,158,63},{atom,{158,1},ignore}]},
  {clause,
   {158,1},
   [{var,{158,14},'V'},
    {cons,
     {158,17},
     {tuple,
      {158,18},
      [{atom,{158,18},c_map_pair},
       {var,{158,18},'_'},
       {var,{158,18},'_'},
       {var,{158,34},'Key'},
       {var,{158,42},'Pat'}]},
     {var,{158,47},'T'}}],
   [],
   [{debug_line,159,64},
    {'case',
     {159,5},
     {call,
      {159,5},
      {atom,{159,5},vu_expr},
      [{var,{159,13},'V'},{var,{159,16},'Key'}]},
     [{clause,{159,5},[{atom,{159,5},true}],[],[{atom,{159,5},true}]},
      {clause,
       {159,5},
       [{atom,{159,5},false}],
       [],
       [{debug_line,160,65},
        {'case',
         {160,9},
         {call,
          {160,9},
          {atom,{160,9},vu_pattern},
          [{var,{160,20},'V'},{var,{160,23},'Pat'}]},
         [{clause,{160,9},[{atom,{160,9},true}],[],[{atom,{160,9},true}]},
          {clause,
           {160,9},
           [{atom,{160,9},false}],
           [],
           [{debug_line,161,66},
            {call,
             {161,9},
             {atom,{161,9},vu_map_pairs},
             [{var,{161,22},'V'},{var,{161,25},'T'}]}]},
          {clause,
           [{generated,true},{location,{160,9}}],
           [{var,{160,9},cov1}],
           [],
           [{call,
             {160,9},
             {remote,{160,9},{atom,{160,9},erlang},{atom,{160,9},error}},
             [{block,0,
               [{tuple,
                 {160,9},
                 [{atom,{160,9},badarg},{var,{160,9},cov1}]}]}]}]}]}]},
      {clause,
       [{generated,true},{location,{159,5}}],
       [{var,{159,5},cov2}],
       [],
       [{call,
         {159,5},
         {remote,{159,5},{atom,{159,5},erlang},{atom,{159,5},error}},
         [{block,0,
           [{tuple,
             {159,5},
             [{atom,{159,5},badarg},{var,{159,5},cov2}]}]}]}]}]}]},
  {clause,
   {162,1},
   [{var,{162,14},'_'},{nil,{162,17}}],
   [],
   [{debug_line,162,67},{atom,{162,24},false}]}]}.
{attribute,
    {164,2},
    spec,
    {{vu_var_list,2},
     [{type,
          {164,18},
          'fun',
          [{type,
               {164,18},
               product,
               [{remote_type,
                    {164,19},
                    [{atom,{164,19},cerl},{atom,{164,24},var_name},[]]},
                {type,
                    {164,36},
                    list,
                    [{remote_type,
                         {164,37},
                         [{atom,{164,37},cerl},{atom,{164,42},c_var},[]]}]}]},
           {type,{164,55},boolean,[]}]}]}}.
{function,
    {166,1},
    vu_var_list,2,
    [{clause,
         {166,1},
         [{var,{166,1},'_'},{var,{166,1},'_'}],
         [[{call,
               {166,1},
               {remote,
                   {166,1},
                   {atom,{166,1},fake},
                   {atom,{166,1},is_beam_bif_info}},
               []}]],
         [{debug_line,166,68},{atom,{166,1},ignore}]},
     {clause,
         {166,1},
         [{var,{166,13},'V'},{var,{166,16},'Vs'}],
         [],
         [{debug_line,167,69},
          {call,
              {167,5},
              {remote,{167,10},{atom,{167,5},lists},{atom,{167,11},any}},
              [{block,0,
                   [{'fun',
                        {167,15},
                        {clauses,
                            [{clause,
                                 {167,19},
                                 [{tuple,
                                      {167,20},
                                      [{atom,{167,20},c_var},
                                       {var,{167,20},'_'},
                                       {var,{167,32},'V2'}]}],
                                 [],
                                 [{op,{167,42},
                                      '=:=',
                                      {var,{167,40},'V'},
                                      {var,{167,46},'V2'}}]}]}}]},
               {var,{167,54},'Vs'}]}]}]}.
{eof,{168,1}}.
