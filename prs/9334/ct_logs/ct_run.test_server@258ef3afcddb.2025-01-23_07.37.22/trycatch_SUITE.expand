{attribute,{1,1},file,{"trycatch_SUITE.erl",1}}.
{attribute,{20,2},module,trycatch_SUITE}.
{attribute,{22,2},
           export,
           [{all,0},
            {suite,0},
            {groups,0},
            {init_per_suite,1},
            {end_per_suite,1},
            {init_per_group,2},
            {end_per_group,2},
            {basic,1},
            {lean_throw,1},
            {try_of,1},
            {try_after,1},
            {catch_oops,1},
            {after_oops,1},
            {eclectic,1},
            {rethrow,1},
            {nested_of,1},
            {nested_catch,1},
            {nested_after,1},
            {nested_horrid,1},
            {last_call_optimization,1},
            {bool,1},
            {andalso_orelse,1},
            {get_in_try,1},
            {hockey,1},
            {handle_info,1},
            {catch_in_catch,1},
            {grab_bag,1},
            {stacktrace,1},
            {nested_stacktrace,1},
            {raise,1},
            {no_return_in_try_block,1},
            {expression_export,1},
            {throw_opt_crash,1},
            {coverage,1},
            {throw_opt_funs,1}]}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,99,111,109,109,
             111,110,95,116,101,115,116,45,49,46,50,55,46,53,47,105,110,99,
             108,117,100,101,47,99,116,46,104,114,108],
            1}}.
{attribute,{38,1},file,{"trycatch_SUITE.erl",38}}.
{function,
    {39,1},
    suite,0,
    [{clause,
         {39,1},
         [],
         [[{call,
               {39,1},
               {remote,
                   {39,1},
                   {atom,{39,1},fake},
                   {atom,{39,1},is_beam_bif_info}},
               []}]],
         [{debug_line,39,1},{atom,{39,1},ignore}]},
     {clause,
         {39,1},
         [],[],
         [{debug_line,39,2},
          {cons,
              {39,12},
              {tuple,
                  {39,13},
                  [{atom,{39,14},ct_hooks},
                   {cons,
                       {39,23},
                       {atom,{39,24},ts_install_cth},
                       {nil,{39,38}}}]},
              {nil,{39,40}}}]}]}.
{function,{41,1},
          all,0,
          [{clause,{41,1},
                   [],
                   [[{call,{41,1},
                           {remote,{41,1},
                                   {atom,{41,1},fake},
                                   {atom,{41,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,41,3},{atom,{41,1},ignore}]},
           {clause,{41,1},
                   [],[],
                   [{debug_line,42,4},
                    {cons,{42,5},
                          {tuple,{42,6},
                                 [{atom,{42,7},group},{atom,{42,13},p}]},
                          {nil,{42,15}}}]}]}.
{function,
 {44,1},
 groups,0,
 [{clause,
   {44,1},
   [],
   [[{call,
      {44,1},
      {remote,{44,1},{atom,{44,1},fake},{atom,{44,1},is_beam_bif_info}},
      []}]],
   [{debug_line,44,5},{atom,{44,1},ignore}]},
  {clause,
   {44,1},
   [],[],
   [{debug_line,45,6},
    {cons,
     {45,5},
     {tuple,
      {45,6},
      [{atom,{45,7},p},
       {cons,{45,9},{atom,{45,10},parallel},{nil,{45,18}}},
       {cons,
        {46,7},
        {atom,{46,8},basic},
        {cons,
         {46,14},
         {atom,{46,14},lean_throw},
         {cons,
          {46,25},
          {atom,{46,25},try_of},
          {cons,
           {46,32},
           {atom,{46,32},try_after},
           {cons,
            {46,42},
            {atom,{46,42},catch_oops},
            {cons,
             {47,8},
             {atom,{47,8},after_oops},
             {cons,
              {47,19},
              {atom,{47,19},eclectic},
              {cons,
               {47,28},
               {atom,{47,28},rethrow},
               {cons,
                {47,36},
                {atom,{47,36},nested_of},
                {cons,
                 {47,46},
                 {atom,{47,46},nested_catch},
                 {cons,
                  {48,8},
                  {atom,{48,8},nested_after},
                  {cons,
                   {48,21},
                   {atom,{48,21},nested_horrid},
                   {cons,
                    {48,35},
                    {atom,{48,35},last_call_optimization},
                    {cons,
                     {49,8},
                     {atom,{49,8},bool},
                     {cons,
                      {49,13},
                      {atom,{49,13},andalso_orelse},
                      {cons,
                       {49,28},
                       {atom,{49,28},get_in_try},
                       {cons,
                        {50,8},
                        {atom,{50,8},hockey},
                        {cons,
                         {50,15},
                         {atom,{50,15},handle_info},
                         {cons,
                          {50,27},
                          {atom,{50,27},catch_in_catch},
                          {cons,
                           {50,42},
                           {atom,{50,42},grab_bag},
                           {cons,
                            {51,8},
                            {atom,{51,8},stacktrace},
                            {cons,
                             {51,19},
                             {atom,{51,19},nested_stacktrace},
                             {cons,
                              {51,37},
                              {atom,{51,37},raise},
                              {cons,
                               {52,8},
                               {atom,{52,8},no_return_in_try_block},
                               {cons,
                                {52,31},
                                {atom,{52,31},expression_export},
                                {cons,
                                 {53,8},
                                 {atom,{53,8},throw_opt_crash},
                                 {cons,
                                  {54,8},
                                  {atom,{54,8},coverage},
                                  {cons,
                                   {55,8},
                                   {atom,{55,8},throw_opt_funs},
                                   {nil,{55,22}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}]},
     {nil,{55,24}}}]}]}.
{function,{58,1},
          init_per_suite,1,
          [{clause,{58,1},
                   [{var,{58,1},'_'}],
                   [[{call,{58,1},
                           {remote,{58,1},
                                   {atom,{58,1},fake},
                                   {atom,{58,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,58,7},{atom,{58,1},ignore}]},
           {clause,{58,1},
                   [{var,{58,16},'Config'}],
                   [],
                   [{debug_line,59,8},
                    {call,{59,5},
                          {remote,{59,13},
                                  {atom,{59,5},test_lib},
                                  {atom,{59,14},recompile}},
                          [{atom,{59,25},trycatch_SUITE}]},
                    {debug_line,60,9},
                    {var,{60,5},'Config'}]}]}.
{function,{62,1},
          end_per_suite,1,
          [{clause,{62,1},
                   [{var,{62,1},'_'}],
                   [[{call,{62,1},
                           {remote,{62,1},
                                   {atom,{62,1},fake},
                                   {atom,{62,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,62,10},{atom,{62,1},ignore}]},
           {clause,{62,1},
                   [{var,{62,15},'_Config'}],
                   [],
                   [{debug_line,63,11},{atom,{63,5},ok}]}]}.
{function,{65,1},
          init_per_group,2,
          [{clause,{65,1},
                   [{var,{65,1},'_'},{var,{65,1},'_'}],
                   [[{call,{65,1},
                           {remote,{65,1},
                                   {atom,{65,1},fake},
                                   {atom,{65,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,65,12},{atom,{65,1},ignore}]},
           {clause,{65,1},
                   [{var,{65,16},'_GroupName'},{var,{65,28},'Config'}],
                   [],
                   [{debug_line,66,13},{var,{66,5},'Config'}]}]}.
{function,{68,1},
          end_per_group,2,
          [{clause,{68,1},
                   [{var,{68,1},'_'},{var,{68,1},'_'}],
                   [[{call,{68,1},
                           {remote,{68,1},
                                   {atom,{68,1},fake},
                                   {atom,{68,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,68,14},{atom,{68,1},ignore}]},
           {clause,{68,1},
                   [{var,{68,15},'_GroupName'},{var,{68,27},'Config'}],
                   [],
                   [{debug_line,69,15},{var,{69,5},'Config'}]}]}.
{function,
    {73,1},
    basic,1,
    [{clause,
         {73,1},
         [{var,{73,1},'_'}],
         [[{call,
               {73,1},
               {remote,
                   {73,1},
                   {atom,{73,1},fake},
                   {atom,{73,1},is_beam_bif_info}},
               []}]],
         [{debug_line,73,16},{atom,{73,1},ignore}]},
     {clause,
         {73,1},
         [{var,{73,7},'Conf'}],
         [[{call,
               {73,18},
               {remote,{73,18},{atom,{73,18},erlang},{atom,{73,18},is_list}},
               [{var,{73,26},'Conf'}]}]],
         [{debug_line,74,17},
          {match,
              {74,5},
              {integer,{74,5},2},
              {'try',
                  {75,2},
                  [{debug_line,75,18},
                   {call,
                       {75,6},
                       {atom,{75,6},my_div},
                       [{integer,{75,13},4},{integer,{75,16},2}]}],
                  [],
                  [{clause,
                       {77,13},
                       [{tuple,
                            {77,13},
                            [{var,{77,13},'Class'},
                             {var,{77,19},'Reason'},
                             {var,{77,19},'_'}]}],
                       [],
                       [{debug_line,77,19},
                        {tuple,
                            {77,29},
                            [{var,{77,30},'Class'},{var,{77,36},'Reason'}]}]}],
                  []}},
          {debug_line,79,20},
          {match,
              {79,5},
              {atom,{79,5},error},
              {'try',
                  {80,9},
                  [{debug_line,80,21},
                   {call,
                       {80,13},
                       {atom,{80,13},my_div},
                       [{integer,{80,20},1},{integer,{80,23},0}]}],
                  [],
                  [{clause,
                       {82,13},
                       [{tuple,
                            {82,13},
                            [{atom,{82,13},error},
                             {atom,{82,19},badarith},
                             {var,{82,19},'_'}]}],
                       [],
                       [{debug_line,82,22},{atom,{82,31},error}]}],
                  []}},
          {debug_line,84,23},
          {match,
              {84,5},
              {atom,{84,5},error},
              {'try',
                  {85,9},
                  [{debug_line,85,24},
                   {op,{85,17},
                       '/',
                       {float,{85,13},1.0},
                       {call,{85,19},{atom,{85,19},zero},[]}}],
                  [],
                  [{clause,
                       {87,13},
                       [{tuple,
                            {87,13},
                            [{atom,{87,13},error},
                             {atom,{87,19},badarith},
                             {var,{87,19},'_'}]}],
                       [],
                       [{debug_line,87,25},{atom,{87,31},error}]}],
                  []}},
          {debug_line,89,26},
          {match,
              {89,5},
              {atom,{89,5},ok},
              {'try',
                  {90,9},
                  [{debug_line,90,27},
                   {call,
                       {90,13},
                       {atom,{90,13},my_add},
                       [{integer,{90,20},53},{atom,{90,24},atom}]}],
                  [],
                  [{clause,
                       {92,13},
                       [{tuple,
                            {92,13},
                            [{atom,{92,13},error},
                             {atom,{92,19},badarith},
                             {var,{92,19},'_'}]}],
                       [],
                       [{debug_line,92,28},{atom,{92,31},ok}]}],
                  []}},
          {debug_line,94,29},
          {match,
              {94,5},
              {atom,{94,5},exit_nisse},
              {'try',
                  {95,9},
                  [{debug_line,95,30},
                   {call,
                       {95,13},
                       {remote,
                           {95,13},
                           {atom,{95,13},erlang},
                           {atom,{95,13},exit}},
                       [{atom,{95,18},nisse}]}],
                  [],
                  [{clause,
                       {97,13},
                       [{tuple,
                            {97,13},
                            [{atom,{97,13},exit},
                             {atom,{97,18},nisse},
                             {var,{97,18},'_'}]}],
                       [],
                       [{debug_line,97,31},{atom,{97,27},exit_nisse}]}],
                  []}},
          {debug_line,99,32},
          {match,
              {99,5},
              {atom,{99,5},ok},
              {'try',
                  {100,9},
                  [{debug_line,100,33},
                   {call,
                       {100,13},
                       {remote,
                           {100,13},
                           {atom,{100,13},erlang},
                           {atom,{100,13},throw}},
                       [{atom,{100,19},kalle}]}],
                  [],
                  [{clause,
                       {102,13},
                       [{tuple,
                            {102,13},
                            [{atom,{102,13},throw},
                             {atom,{102,13},kalle},
                             {var,{102,13},'_'}]}],
                       [],
                       [{debug_line,102,34},{atom,{102,22},ok}]}],
                  []}},
          {debug_line,107,35},
          {match,
              {107,5},
              {var,{107,5},'V'},
              {call,
                  {107,9},
                  {atom,{107,9},id},
                  [{block,0,
                       [{tuple,
                            {107,12},
                            [{atom,{107,13},a},{atom,{107,15},variable}]}]}]}},
          {debug_line,108,36},
          {match,
              {108,5},
              {var,{108,5},'V'},
              {'try',
                  {108,9},
                  [{var,{108,13},'V'}],
                  [],
                  [{clause,
                       {108,21},
                       [{tuple,
                            {108,21},
                            [{atom,{108,21},throw},
                             {atom,{108,21},nisse},
                             {var,{108,21},'_'}]}],
                       [],
                       [{atom,{108,30},error}]}],
                  []}},
          {debug_line,109,37},
          {match,
              {109,5},
              {integer,{109,5},42},
              {'try',
                  {109,10},
                  [{integer,{109,14},42}],
                  [],
                  [{clause,
                       {109,23},
                       [{tuple,
                            {109,23},
                            [{atom,{109,23},throw},
                             {atom,{109,23},nisse},
                             {var,{109,23},'_'}]}],
                       [],
                       [{atom,{109,32},error}]}],
                  []}},
          {debug_line,110,38},
          {match,
              {110,5},
              {cons,{110,5},{var,{110,6},'V'},{nil,{110,7}}},
              {'try',
                  {110,11},
                  [{cons,{110,15},{var,{110,16},'V'},{nil,{110,17}}}],
                  [],
                  [{clause,
                       {110,25},
                       [{tuple,
                            {110,25},
                            [{atom,{110,25},throw},
                             {atom,{110,25},nisse},
                             {var,{110,25},'_'}]}],
                       [],
                       [{atom,{110,34},error}]}],
                  []}},
          {debug_line,111,39},
          {match,
              {111,5},
              {tuple,{111,5},[{atom,{111,6},ok},{var,{111,9},'V'}]},
              {'try',
                  {111,14},
                  [{tuple,{111,18},[{atom,{111,19},ok},{var,{111,22},'V'}]}],
                  [],
                  [{clause,
                       {111,31},
                       [{tuple,
                            {111,31},
                            [{atom,{111,31},throw},
                             {atom,{111,31},nisse},
                             {var,{111,31},'_'}]}],
                       [],
                       [{atom,{111,40},error}]}],
                  []}},
          {debug_line,115,40},
          {match,
              {115,5},
              {var,{115,5},'V'},
              {'try',
                  {115,9},
                  [{var,{115,13},'V'}],
                  [],
                  [{clause,
                       {115,21},
                       [{tuple,
                            {115,21},
                            [{atom,{115,21},throw},
                             {atom,{115,21},nisse},
                             {var,{115,21},'_'}]}],
                       [],
                       [{atom,{115,30},error}]}],
                  [{call,{115,42},{atom,{115,42},after_call},[]}]}},
          {debug_line,116,41},
          {call,{116,5},{atom,{116,5},after_clean},[]},
          {debug_line,117,42},
          {match,
              {117,5},
              {integer,{117,5},42},
              {'try',
                  {117,10},
                  [{integer,{117,14},42}],
                  [],[],
                  [{call,{117,23},{atom,{117,23},after_call},[]}]}},
          {debug_line,118,43},
          {call,{118,5},{atom,{118,5},after_clean},[]},
          {debug_line,119,44},
          {match,
              {119,5},
              {cons,{119,5},{var,{119,6},'V'},{nil,{119,7}}},
              {'try',
                  {119,11},
                  [{cons,{119,15},{var,{119,16},'V'},{nil,{119,17}}}],
                  [],
                  [{clause,
                       {119,25},
                       [{tuple,
                            {119,25},
                            [{atom,{119,25},throw},
                             {atom,{119,25},nisse},
                             {var,{119,25},'_'}]}],
                       [],
                       [{atom,{119,34},error}]}],
                  [{call,{119,46},{atom,{119,46},after_call},[]}]}},
          {debug_line,120,45},
          {call,{120,5},{atom,{120,5},after_clean},[]},
          {debug_line,121,46},
          {match,
              {121,5},
              {tuple,{121,5},[{atom,{121,6},ok},{var,{121,9},'V'}]},
              {'try',
                  {121,14},
                  [{tuple,{121,18},[{atom,{121,19},ok},{var,{121,22},'V'}]}],
                  [],[],
                  [{call,{121,31},{atom,{121,31},after_call},[]}]}},
          {debug_line,124,47},
          {match,
              {124,5},
              {atom,{124,5},ok},
              {'try',
                  {124,10},
                  [{var,{124,14},'V'}],
                  [{clause,
                       {125,7},
                       [{tuple,
                            {125,7},
                            [{atom,{125,8},a},{atom,{125,10},variable}]}],
                       [],
                       [{debug_line,125,48},{atom,{125,23},ok}]}],
                  [{clause,
                       {126,9},
                       [{tuple,
                            {126,9},
                            [{atom,{126,9},throw},
                             {atom,{126,9},nisse},
                             {var,{126,9},'_'}]}],
                       [],
                       [{debug_line,126,49},{atom,{126,18},error}]}],
                  []}},
          {debug_line,130,50},
          {'try',
              {130,5},
              [{debug_line,131,51},
               {call,
                   {131,9},
                   {remote,{131,9},{atom,{131,9},erlang},{atom,{131,9},throw}},
                   [{atom,{131,15},thrown}]}],
              [],
              [{clause,
                   {133,9},
                   [{tuple,
                        {133,9},
                        [{atom,{133,9},throw},
                         {match,
                             {133,9},
                             {tuple,
                                 {133,9},
                                 [{atom,{133,10},a},{atom,{133,12},b}]},
                             {tuple,
                                 {133,15},
                                 [{atom,{133,16},a},
                                  {atom,{133,18},b},
                                  {atom,{133,20},c}]}},
                         {var,{133,20},'_'}]}],
                   [],
                   [{debug_line,134,52},{atom,{134,13},ok}]},
               {clause,
                   {135,9},
                   [{tuple,
                        {135,9},
                        [{atom,{135,9},throw},
                         {atom,{135,9},thrown},
                         {var,{135,9},'_'}]}],
                   [],
                   [{debug_line,136,53},{atom,{136,13},ok}]}],
              []},
          {debug_line,139,54},
          {atom,{139,5},ok}]}]}.
{function,{141,1},
          after_call,0,
          [{clause,{141,1},
                   [],
                   [[{call,{141,1},
                           {remote,{141,1},
                                   {atom,{141,1},fake},
                                   {atom,{141,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,141,55},{atom,{141,1},ignore}]},
           {clause,{141,1},
                   [],[],
                   [{debug_line,142,56},
                    {call,{142,5},
                          {remote,{142,5},
                                  {atom,{142,5},erlang},
                                  {atom,{142,5},put}},
                          [{atom,{142,9},basic},
                           {atom,{142,16},after_was_called}]}]}]}.
{function,
    {144,1},
    after_clean,0,
    [{clause,
         {144,1},
         [],
         [[{call,
               {144,1},
               {remote,
                   {144,1},
                   {atom,{144,1},fake},
                   {atom,{144,1},is_beam_bif_info}},
               []}]],
         [{debug_line,144,57},{atom,{144,1},ignore}]},
     {clause,
         {144,1},
         [],[],
         [{debug_line,145,58},
          {match,
              {145,5},
              {atom,{145,5},after_was_called},
              {call,
                  {145,24},
                  {remote,
                      {145,24},
                      {atom,{145,24},erlang},
                      {atom,{145,24},erase}},
                  [{atom,{145,30},basic}]}}]}]}.
{function,
    {148,1},
    lean_throw,1,
    [{clause,
         {148,1},
         [{var,{148,1},'_'}],
         [[{call,
               {148,1},
               {remote,
                   {148,1},
                   {atom,{148,1},fake},
                   {atom,{148,1},is_beam_bif_info}},
               []}]],
         [{debug_line,148,59},{atom,{148,1},ignore}]},
     {clause,
         {148,1},
         [{var,{148,12},'Conf'}],
         [[{call,
               {148,23},
               {remote,
                   {148,23},
                   {atom,{148,23},erlang},
                   {atom,{148,23},is_list}},
               [{var,{148,31},'Conf'}]}]],
         [{debug_line,149,60},
          {match,
              {149,5},
              {tuple,{149,5},[{atom,{149,6},throw},{atom,{149,12},kalle}]},
              {'try',
                  {150,9},
                  [{debug_line,150,61},
                   {call,
                       {150,13},
                       {remote,
                           {150,13},
                           {atom,{150,13},erlang},
                           {atom,{150,13},throw}},
                       [{atom,{150,19},kalle}]}],
                  [],
                  [{clause,
                       {152,13},
                       [{tuple,
                            {152,13},
                            [{atom,{152,13},throw},
                             {var,{152,13},'Kalle'},
                             {var,{152,13},'_'}]}],
                       [],
                       [{debug_line,152,62},
                        {tuple,
                            {152,22},
                            [{atom,{152,23},throw},{var,{152,29},'Kalle'}]}]}],
                  []}},
          {debug_line,154,63},
          {match,
              {154,5},
              {tuple,{154,5},[{atom,{154,6},exit},{atom,{154,11},kalle}]},
              {'try',
                  {155,9},
                  [{debug_line,155,64},
                   {call,
                       {155,13},
                       {remote,
                           {155,13},
                           {atom,{155,13},erlang},
                           {atom,{155,13},exit}},
                       [{atom,{155,18},kalle}]}],
                  [],
                  [{clause,
                       {157,13},
                       [{tuple,
                            {157,13},
                            [{atom,{157,13},throw},
                             {var,{157,13},'Throw1'},
                             {var,{157,13},'_'}]}],
                       [],
                       [{debug_line,157,65},
                        {tuple,
                            {157,23},
                            [{atom,{157,24},throw},{var,{157,30},'Throw1'}]}]},
                   {clause,
                       {158,6},
                       [{tuple,
                            {158,6},
                            [{atom,{158,6},exit},
                             {var,{158,11},'Reason1'},
                             {var,{158,11},'_'}]}],
                       [],
                       [{debug_line,158,66},
                        {tuple,
                            {158,22},
                            [{atom,{158,23},exit},
                             {var,{158,28},'Reason1'}]}]}],
                  []}},
          {debug_line,160,67},
          {match,
              {160,5},
              {tuple,{160,5},[{atom,{160,6},exit},{atom,{160,11},kalle}]},
              {'try',
                  {161,9},
                  [{debug_line,161,68},
                   {call,
                       {161,13},
                       {remote,
                           {161,13},
                           {atom,{161,13},erlang},
                           {atom,{161,13},exit}},
                       [{atom,{161,18},kalle}]}],
                  [],
                  [{clause,
                       {163,6},
                       [{tuple,
                            {163,6},
                            [{atom,{163,6},exit},
                             {var,{163,11},'Reason2'},
                             {var,{163,11},'_'}]}],
                       [],
                       [{debug_line,163,69},
                        {tuple,
                            {163,22},
                            [{atom,{163,23},exit},{var,{163,28},'Reason2'}]}]},
                   {clause,
                       {164,13},
                       [{tuple,
                            {164,13},
                            [{atom,{164,13},throw},
                             {var,{164,13},'Throw2'},
                             {var,{164,13},'_'}]}],
                       [],
                       [{debug_line,164,70},
                        {tuple,
                            {164,23},
                            [{atom,{164,24},throw},
                             {var,{164,30},'Throw2'}]}]}],
                  []}},
          {debug_line,166,71},
          {match,
              {166,5},
              {tuple,{166,5},[{atom,{166,6},exit},{atom,{166,11},kalle}]},
              {'try',
                  {167,9},
                  [{debug_line,167,72},
                   {'try',
                       {167,13},
                       [{call,
                            {167,17},
                            {remote,
                                {167,17},
                                {atom,{167,17},erlang},
                                {atom,{167,17},exit}},
                            [{atom,{167,22},kalle}]}],
                       [],
                       [{clause,
                            {169,17},
                            [{tuple,
                                 {169,17},
                                 [{atom,{169,17},throw},
                                  {var,{169,17},'Throw3'},
                                  {var,{169,17},'_'}]}],
                            [],
                            [{debug_line,169,73},
                             {tuple,
                                 {169,27},
                                 [{atom,{169,28},throw},
                                  {var,{169,34},'Throw3'}]}]}],
                       []}],
                  [],
                  [{clause,
                       {172,13},
                       [{tuple,
                            {172,13},
                            [{atom,{172,13},exit},
                             {var,{172,18},'Reason3'},
                             {var,{172,18},'_'}]}],
                       [],
                       [{debug_line,172,74},
                        {tuple,
                            {172,29},
                            [{atom,{172,30},exit},
                             {var,{172,35},'Reason3'}]}]}],
                  []}},
          {debug_line,174,75},
          {atom,{174,5},ok}]}]}.
{function,
 {178,1},
 try_of,1,
 [{clause,
   {178,1},
   [{var,{178,1},'_'}],
   [[{call,
      {178,1},
      {remote,{178,1},{atom,{178,1},fake},{atom,{178,1},is_beam_bif_info}},
      []}]],
   [{debug_line,178,76},{atom,{178,1},ignore}]},
  {clause,
   {178,1},
   [{var,{178,8},'Conf'}],
   [[{call,
      {178,19},
      {remote,{178,19},{atom,{178,19},erlang},{atom,{178,19},is_list}},
      [{var,{178,27},'Conf'}]}]],
   [{debug_line,179,77},
    {match,
     {179,5},
     {tuple,
      {179,5},
      [{atom,{179,6},ok},
       {tuple,{179,9},[{atom,{179,10},some},{atom,{179,15},content}]}]},
     {call,
      {180,2},
      {atom,{180,2},try_of_1},
      [{block,0,
        [{debug_line,180,78},
         {tuple,
          {180,11},
          [{atom,{180,12},value},
           {tuple,
            {180,18},
            [{atom,{180,19},good},
             {tuple,
              {180,24},
              [{atom,{180,25},some},{atom,{180,30},content}]}]}]}]}]}},
    {debug_line,181,79},
    {match,
     {181,5},
     {tuple,
      {181,5},
      [{atom,{181,6},error},
       {cons,
        {181,12},
        {atom,{181,13},other},
        {cons,{181,19},{atom,{181,19},content},{nil,{181,26}}}}]},
     {call,
      {182,2},
      {atom,{182,2},try_of_1},
      [{block,0,
        [{debug_line,182,80},
         {tuple,
          {182,11},
          [{atom,{182,12},value},
           {tuple,
            {182,18},
            [{atom,{182,19},bad},
             {cons,
              {182,23},
              {atom,{182,24},other},
              {cons,{182,30},{atom,{182,30},content},{nil,{182,37}}}}]}]}]}]}},
    {debug_line,183,81},
    {match,
     {183,5},
     {tuple,
      {183,5},
      [{atom,{183,6},caught},
       {tuple,
        {183,13},
        [{atom,{183,14},exit},
         {tuple,
          {183,19},
          [{atom,{183,20},ex},
           {atom,{183,23},it},
           {cons,{183,26},{atom,{183,27},reason},{nil,{183,33}}}]}]}]},
     {call,
      {184,2},
      {atom,{184,2},try_of_1},
      [{block,0,
        [{debug_line,184,82},
         {tuple,
          {184,11},
          [{atom,{184,12},exit},
           {tuple,
            {184,17},
            [{atom,{184,18},ex},
             {atom,{184,21},it},
             {cons,{184,24},{atom,{184,25},reason},{nil,{184,31}}}]}]}]}]}},
    {debug_line,185,83},
    {match,
     {185,5},
     {tuple,
      {185,5},
      [{atom,{185,6},caught},
       {tuple,
        {185,13},
        [{atom,{185,14},throw},
         {cons,
          {185,20},
          {atom,{185,21},term},
          {cons,
           {185,26},
           {tuple,
            {185,26},
            [{atom,{185,27},in},
             {atom,{185,30},a},
             {tuple,{185,32},[{atom,{185,33},tuple}]}]},
           {nil,{185,40}}}}]}]},
     {call,
      {186,2},
      {atom,{186,2},try_of_1},
      [{block,0,
        [{debug_line,186,84},
         {tuple,
          {186,11},
          [{atom,{186,12},throw},
           {cons,
            {186,18},
            {atom,{186,19},term},
            {cons,
             {186,24},
             {tuple,
              {186,24},
              [{atom,{186,25},in},
               {atom,{186,28},a},
               {tuple,{186,30},[{atom,{186,31},tuple}]}]},
             {nil,{186,38}}}}]}]}]}},
    {debug_line,187,85},
    {match,
     {187,5},
     {tuple,
      {187,5},
      [{atom,{187,6},caught},
       {tuple,
        {187,13},
        [{atom,{187,14},error},
         {cons,
          {187,20},
          {atom,{187,21},bad},
          {cons,{187,25},{atom,{187,25},arg},{nil,{187,28}}}}]}]},
     {call,
      {188,2},
      {atom,{188,2},try_of_1},
      [{block,0,
        [{debug_line,188,86},
         {tuple,
          {188,11},
          [{atom,{188,12},error},
           {cons,
            {188,18},
            {atom,{188,19},bad},
            {cons,{188,23},{atom,{188,23},arg},{nil,{188,26}}}}]}]}]}},
    {debug_line,189,87},
    {match,
     {189,5},
     {tuple,
      {189,5},
      [{atom,{189,6},caught},
       {tuple,{189,13},[{atom,{189,14},error},{atom,{189,20},badarith}]}]},
     {call,
      {190,2},
      {atom,{190,2},try_of_1},
      [{block,0,
        [{debug_line,190,88},
         {tuple,
          {190,11},
          [{atom,{190,12},'div'},
           {tuple,{190,18},[{integer,{190,19},1},{integer,{190,21},0}]}]}]}]}},
    {debug_line,191,89},
    {match,
     {191,5},
     {tuple,
      {191,5},
      [{atom,{191,6},caught},
       {tuple,{191,13},[{atom,{191,14},error},{atom,{191,20},badarith}]}]},
     {call,
      {192,2},
      {atom,{192,2},try_of_1},
      [{block,0,
        [{debug_line,192,90},
         {tuple,
          {192,11},
          [{atom,{192,12},add},
           {tuple,{192,18},[{atom,{192,19},a},{integer,{192,21},0}]}]}]}]}},
    {debug_line,193,91},
    {match,
     {193,5},
     {tuple,
      {193,5},
      [{atom,{193,6},caught},
       {tuple,{193,13},[{atom,{193,14},error},{atom,{193,20},badarg}]}]},
     {call,
      {194,2},
      {atom,{194,2},try_of_1},
      [{block,0,
        [{debug_line,194,92},
         {tuple,{194,11},[{atom,{194,12},abs},{atom,{194,18},x}]}]}]}},
    {debug_line,195,93},
    {match,
     {195,5},
     {tuple,
      {195,5},
      [{atom,{195,6},caught},
       {tuple,
        {195,13},
        [{atom,{195,14},error},{atom,{195,20},function_clause}]}]},
     {call,{196,2},{atom,{196,2},try_of_1},[{atom,{196,11},illegal}]}},
    {debug_line,197,94},
    {match,
     {197,5},
     {tuple,
      {197,5},
      [{atom,{197,6},error},
       {tuple,
        {197,12},
        [{atom,{197,13},try_clause},
         {tuple,
          {197,24},
          [{atom,{197,25},some},{atom,{197,30},other_garbage}]}]}]},
     {'try',
      {198,2},
      [{debug_line,198,95},
       {call,
        {198,6},
        {atom,{198,6},try_of_1},
        [{block,0,
          [{tuple,
            {198,15},
            [{atom,{198,16},value},
             {tuple,
              {198,22},
              [{atom,{198,23},some},{atom,{198,28},other_garbage}]}]}]}]}],
      [],
      [{clause,
        {199,15},
        [{tuple,
          {199,15},
          [{atom,{199,15},error},{var,{199,21},'Reason'},{var,{199,21},'_'}]}],
        [],
        [{debug_line,199,96},
         {tuple,{199,31},[{atom,{199,32},error},{var,{199,38},'Reason'}]}]}],
      []}},
    {debug_line,201,97},
    {atom,{201,5},ok}]}]}.
{function,
    {203,1},
    try_of_1,1,
    [{clause,
         {203,1},
         [{var,{203,1},'_'}],
         [[{call,
               {203,1},
               {remote,
                   {203,1},
                   {atom,{203,1},fake},
                   {atom,{203,1},is_beam_bif_info}},
               []}]],
         [{debug_line,203,98},{atom,{203,1},ignore}]},
     {clause,
         {203,1},
         [{var,{203,10},'X'}],
         [],
         [{debug_line,204,99},
          {'try',
              {204,5},
              [{call,{204,9},{atom,{204,9},foo},[{var,{204,13},'X'}]}],
              [{clause,
                   {205,9},
                   [{tuple,{205,9},[{atom,{205,10},good},{var,{205,15},'Y'}]}],
                   [],
                   [{debug_line,205,100},
                    {tuple,{205,21},[{atom,{205,22},ok},{var,{205,25},'Y'}]}]},
               {clause,
                   {206,2},
                   [{tuple,{206,2},[{atom,{206,3},bad},{var,{206,7},'Y'}]}],
                   [],
                   [{debug_line,206,101},
                    {tuple,
                        {206,13},
                        [{atom,{206,14},error},{var,{206,20},'Y'}]}]}],
              [{clause,
                   {208,2},
                   [{tuple,
                        {208,2},
                        [{var,{208,2},'Class'},
                         {var,{208,8},'Reason'},
                         {var,{208,8},'_'}]}],
                   [],
                   [{debug_line,209,102},
                    {tuple,
                        {209,14},
                        [{atom,{209,15},caught},
                         {tuple,
                             {209,22},
                             [{var,{209,23},'Class'},
                              {var,{209,29},'Reason'}]}]}]}],
              []}]}]}.
{function,
    {212,1},
    try_after,1,
    [{clause,
         {212,1},
         [{var,{212,1},'_'}],
         [[{call,
               {212,1},
               {remote,
                   {212,1},
                   {atom,{212,1},fake},
                   {atom,{212,1},is_beam_bif_info}},
               []}]],
         [{debug_line,212,103},{atom,{212,1},ignore}]},
     {clause,
         {212,1},
         [{var,{212,11},'Conf'}],
         [[{call,
               {212,22},
               {remote,
                   {212,22},
                   {atom,{212,22},erlang},
                   {atom,{212,22},is_list}},
               [{var,{212,30},'Conf'}]}]],
         [{debug_line,213,104},
          {call,
              {213,5},
              {atom,{213,5},try_after_1},
              [{block,0,[{'fun',{213,17},{function,try_after_basic,2}}]}]},
          {debug_line,214,105},
          {call,
              {214,5},
              {atom,{214,5},try_after_1},
              [{block,0,[{'fun',{214,17},{function,try_after_catch,2}}]}]},
          {debug_line,215,106},
          {call,
              {215,5},
              {atom,{215,5},try_after_1},
              [{block,0,[{'fun',{215,17},{function,try_after_complex,2}}]}]},
          {debug_line,216,107},
          {call,
              {216,5},
              {atom,{216,5},try_after_1},
              [{block,0,[{'fun',{216,17},{function,try_after_fun,2}}]}]},
          {debug_line,217,108},
          {call,
              {217,5},
              {atom,{217,5},try_after_1},
              [{block,0,[{'fun',{217,17},{function,try_after_letrec,2}}]}]},
          {debug_line,218,109},
          {call,
              {218,5},
              {atom,{218,5},try_after_1},
              [{block,0,[{'fun',{218,17},{function,try_after_protect,2}}]}]},
          {debug_line,219,110},
          {call,
              {219,5},
              {atom,{219,5},try_after_1},
              [{block,0,[{'fun',{219,17},{function,try_after_receive,2}}]}]},
          {debug_line,220,111},
          {call,
              {220,5},
              {atom,{220,5},try_after_1},
              [{block,0,
                   [{'fun',
                        {220,17},
                        {function,try_after_receive_timeout,2}}]}]},
          {debug_line,221,112},
          {call,
              {221,5},
              {atom,{221,5},try_after_1},
              [{block,0,[{'fun',{221,17},{function,try_after_try,2}}]}]},
          {debug_line,222,113},
          {atom,{222,5},ok}]}]}.
{function,
 {224,1},
 try_after_1,1,
 [{clause,
   {224,1},
   [{var,{224,1},'_'}],
   [[{call,
      {224,1},
      {remote,{224,1},{atom,{224,1},fake},{atom,{224,1},is_beam_bif_info}},
      []}]],
   [{debug_line,224,114},{atom,{224,1},ignore}]},
  {clause,
   {224,1},
   [{var,{224,13},'TestFun'}],
   [],
   [{debug_line,225,115},
    {match,
     {225,5},
     {tuple,
      {225,5},
      [{tuple,
        {225,6},
        [{atom,{225,7},ok},
         {cons,
          {225,10},
          {atom,{225,11},some},
          {cons,{225,16},{atom,{225,16},value},{nil,{225,21}}}},
         {atom,{225,23},undefined}]},
       {atom,{225,34},finalized}]},
     {call,
      {226,9},
      {var,{226,9},'TestFun'},
      [{block,0,
        [{debug_line,226,116},
         {tuple,
          {226,17},
          [{atom,{226,18},value},
           {tuple,
            {226,24},
            [{atom,{226,25},ok},
             {cons,
              {226,28},
              {atom,{226,29},some},
              {cons,{226,34},{atom,{226,34},value},{nil,{226,39}}}}]}]}]},
       {atom,{226,43},finalized}]}},
    {debug_line,227,117},
    {match,
     {227,5},
     {tuple,
      {227,5},
      [{tuple,
        {227,6},
        [{atom,{227,7},error},
         {atom,{227,13},badarith},
         {atom,{227,22},undefined}]},
       {atom,{227,33},finalized}]},
     {call,
      {228,9},
      {var,{228,9},'TestFun'},
      [{block,0,
        [{debug_line,228,118},
         {tuple,
          {228,17},
          [{atom,{228,18},'div'},
           {tuple,{228,24},[{integer,{228,25},1},{integer,{228,27},0}]}]}]},
       {atom,{228,31},finalized}]}},
    {debug_line,229,119},
    {match,
     {229,5},
     {tuple,
      {229,5},
      [{tuple,
        {229,6},
        [{atom,{229,7},error},
         {atom,{229,13},badarith},
         {atom,{229,22},undefined}]},
       {atom,{229,33},finalized}]},
     {call,
      {230,9},
      {var,{230,9},'TestFun'},
      [{block,0,
        [{debug_line,230,120},
         {tuple,
          {230,17},
          [{atom,{230,18},add},
           {tuple,{230,24},[{integer,{230,25},1},{atom,{230,27},a}]}]}]},
       {atom,{230,31},finalized}]}},
    {debug_line,231,121},
    {match,
     {231,5},
     {tuple,
      {231,5},
      [{tuple,
        {231,6},
        [{atom,{231,7},error},
         {atom,{231,13},badarg},
         {atom,{231,20},undefined}]},
       {atom,{231,31},finalized}]},
     {call,
      {232,9},
      {var,{232,9},'TestFun'},
      [{block,0,
        [{debug_line,232,122},
         {tuple,{232,17},[{atom,{232,18},abs},{atom,{232,24},a}]}]},
       {atom,{232,27},finalized}]}},
    {debug_line,233,123},
    {match,
     {233,5},
     {tuple,
      {233,5},
      [{tuple,
        {233,6},
        [{atom,{233,7},error},
         {cons,
          {233,13},
          {atom,{233,14},the},
          {cons,
           {233,18},
           {tuple,{233,18},[{atom,{233,19},reason}]},
           {nil,{233,26}}}},
         {atom,{233,28},undefined}]},
       {atom,{233,39},finalized}]},
     {call,
      {234,9},
      {var,{234,9},'TestFun'},
      [{block,0,
        [{debug_line,234,124},
         {tuple,
          {234,17},
          [{atom,{234,18},error},
           {cons,
            {234,24},
            {atom,{234,25},the},
            {cons,
             {234,29},
             {tuple,{234,29},[{atom,{234,30},reason}]},
             {nil,{234,37}}}}]}]},
       {atom,{234,40},finalized}]}},
    {debug_line,235,125},
    {match,
     {235,5},
     {tuple,
      {235,5},
      [{tuple,
        {235,6},
        [{atom,{235,7},throw},
         {tuple,
          {235,13},
          [{atom,{235,14},thrown},
           {cons,{235,21},{atom,{235,22},reason},{nil,{235,28}}}]},
         {atom,{235,31},undefined}]},
       {atom,{235,42},finalized}]},
     {call,
      {236,9},
      {var,{236,9},'TestFun'},
      [{block,0,
        [{debug_line,236,126},
         {tuple,
          {236,17},
          [{atom,{236,18},throw},
           {tuple,
            {236,24},
            [{atom,{236,25},thrown},
             {cons,{236,32},{atom,{236,33},reason},{nil,{236,39}}}]}]}]},
       {atom,{236,43},finalized}]}},
    {debug_line,237,127},
    {match,
     {237,5},
     {tuple,
      {237,5},
      [{tuple,
        {237,6},
        [{atom,{237,7},exit},
         {tuple,
          {237,12},
          [{atom,{237,13},exited},{tuple,{237,20},[{atom,{237,21},reason}]}]},
         {atom,{237,30},undefined}]},
       {atom,{237,41},finalized}]},
     {call,
      {238,9},
      {var,{238,9},'TestFun'},
      [{block,0,
        [{debug_line,238,128},
         {tuple,
          {238,17},
          [{atom,{238,18},exit},
           {tuple,
            {238,23},
            [{atom,{238,24},exited},
             {tuple,{238,31},[{atom,{238,32},reason}]}]}]}]},
       {atom,{238,42},finalized}]}},
    {debug_line,239,129},
    {match,
     {239,5},
     {tuple,
      {239,5},
      [{tuple,
        {239,6},
        [{atom,{239,7},error},
         {atom,{239,13},function_clause},
         {atom,{239,29},undefined}]},
       {atom,{239,40},finalized}]},
     {call,
      {240,9},
      {var,{240,9},'TestFun'},
      [{atom,{240,17},function_clause},{atom,{240,33},finalized}]}},
    {debug_line,241,130},
    {match,
     {241,5},
     {atom,{241,5},ok},
     {'try',
      {242,9},
      [{debug_line,243,131},
       {call,
        {243,13},
        {var,{243,13},'TestFun'},
        [{block,0,
          [{tuple,
            {243,21},
            [{atom,{243,22},add},
             {tuple,{243,28},[{integer,{243,29},1},{integer,{243,31},1}]}]}]},
         {atom,{243,36},finalized}]}],
      [],
      [{clause,
        {245,13},
        [{tuple,
          {245,13},
          [{atom,{245,13},error},
           {tuple,{245,19},[{atom,{245,20},try_clause},{integer,{245,31},2}]},
           {var,{245,31},'_'}]}],
        [],
        [{debug_line,245,132},{atom,{245,37},ok}]}],
      []}},
    {debug_line,247,133},
    {match,
     {247,5},
     {atom,{247,5},finalized},
     {call,
      {247,17},
      {remote,{247,17},{atom,{247,17},erlang},{atom,{247,17},erase}},
      [{atom,{247,23},try_after}]}},
    {debug_line,248,134},
    {match,
     {248,5},
     {atom,{248,5},ok},
     {'try',
      {249,9},
      [{debug_line,250,135},
       {'try',
        {250,13},
        [{debug_line,251,136},
         {call,
          {251,17},
          {atom,{251,17},foo},
          [{block,0,
            [{tuple,
              {251,21},
              [{atom,{251,22},exit},
               {cons,
                {251,27},
                {atom,{251,28},reaso},
                {cons,
                 {251,34},
                 {tuple,{251,34},[{atom,{251,35},n}]},
                 {nil,{251,37}}}}]}]}]}],
        [],[],
        [{debug_line,253,137},
         {call,
          {253,17},
          {remote,{253,17},{atom,{253,17},erlang},{atom,{253,17},put}},
          [{atom,{253,21},try_after},{atom,{253,32},finalized}]}]}],
      [],
      [{clause,
        {256,13},
        [{tuple,
          {256,13},
          [{atom,{256,13},exit},
           {cons,
            {256,18},
            {atom,{256,19},reaso},
            {cons,
             {256,25},
             {tuple,{256,25},[{atom,{256,26},n}]},
             {nil,{256,28}}}},
           {var,{256,28},'_'}]}],
        [],
        [{debug_line,256,138},{atom,{256,33},ok}]}],
      []}},
    {debug_line,258,139},
    {atom,{258,5},ok}]}]}.
{function,
    {275,1},
    try_after_basic,2,
    [{clause,
         {275,1},
         [{var,{275,1},'_'},{var,{275,1},'_'}],
         [[{call,
               {275,1},
               {remote,
                   {275,1},
                   {atom,{275,1},fake},
                   {atom,{275,1},is_beam_bif_info}},
               []}]],
         [{debug_line,275,140},{atom,{275,1},ignore}]},
     {clause,
         {275,1},
         [{var,{275,17},'X'},{var,{275,20},'Y'}],
         [],
         [{debug_line,276,141},
          {call,
              {276,6},
              {remote,{276,6},{atom,{276,6},erlang},{atom,{276,6},erase}},
              [{atom,{276,6},try_after}]},
          {match,
              {276,6},
              {var,{276,6},'Try'},
              {'try',
                  {276,6},
                  [{call,{276,6},{atom,{276,6},foo},[{var,{276,6},'X'}]}],
                  [{clause,
                       {276,6},
                       [{tuple,
                            {276,6},
                            [{atom,{276,6},ok},{var,{276,6},'Value'}]}],
                       [],
                       [{tuple,
                            {276,6},
                            [{atom,{276,6},ok},
                             {var,{276,6},'Value'},
                             {call,
                                 {276,6},
                                 {remote,
                                     {276,6},
                                     {atom,{276,6},erlang},
                                     {atom,{276,6},get}},
                                 [{atom,{276,6},try_after}]}]}]}],
                  [{clause,
                       {276,6},
                       [{tuple,
                            {276,6},
                            [{atom,{276,6},throw},
                             {var,{276,6},'Reason'},
                             {var,{276,6},'_'}]}],
                       [],
                       [{tuple,
                            {276,6},
                            [{atom,{276,6},throw},
                             {var,{276,6},'Reason'},
                             {call,
                                 {276,6},
                                 {remote,
                                     {276,6},
                                     {atom,{276,6},erlang},
                                     {atom,{276,6},get}},
                                 [{atom,{276,6},try_after}]}]}]},
                   {clause,
                       {276,6},
                       [{tuple,
                            {276,6},
                            [{atom,{276,6},error},
                             {var,{276,6},'Reason'},
                             {var,{276,6},'_'}]}],
                       [],
                       [{tuple,
                            {276,6},
                            [{atom,{276,6},error},
                             {var,{276,6},'Reason'},
                             {call,
                                 {276,6},
                                 {remote,
                                     {276,6},
                                     {atom,{276,6},erlang},
                                     {atom,{276,6},get}},
                                 [{atom,{276,6},try_after}]}]}]},
                   {clause,
                       {276,6},
                       [{tuple,
                            {276,6},
                            [{atom,{276,6},exit},
                             {var,{276,6},'Reason'},
                             {var,{276,6},'_'}]}],
                       [],
                       [{tuple,
                            {276,6},
                            [{atom,{276,6},exit},
                             {var,{276,6},'Reason'},
                             {call,
                                 {276,6},
                                 {remote,
                                     {276,6},
                                     {atom,{276,6},erlang},
                                     {atom,{276,6},get}},
                                 [{atom,{276,6},try_after}]}]}]}],
                  [{atom,{276,25},ok},
                   {call,
                       {276,25},
                       {remote,
                           {276,25},
                           {atom,{276,25},erlang},
                           {atom,{276,25},put}},
                       [{atom,{276,25},try_after},{var,{276,25},'Y'}]}]}},
          {tuple,
              {276,25},
              [{var,{276,25},'Try'},
               {call,
                   {276,25},
                   {remote,
                       {276,25},
                       {atom,{276,25},erlang},
                       {atom,{276,25},erase}},
                   [{atom,{276,25},try_after}]}]}]}]}.
{function,
    {278,1},
    try_after_catch,2,
    [{clause,
         {278,1},
         [{var,{278,1},'_'},{var,{278,1},'_'}],
         [[{call,
               {278,1},
               {remote,
                   {278,1},
                   {atom,{278,1},fake},
                   {atom,{278,1},is_beam_bif_info}},
               []}]],
         [{debug_line,278,143},{atom,{278,1},ignore}]},
     {clause,
         {278,1},
         [{var,{278,17},'X'},{var,{278,20},'Y'}],
         [],
         [{debug_line,279,144},
          {call,
              {279,6},
              {remote,{279,6},{atom,{279,6},erlang},{atom,{279,6},erase}},
              [{atom,{279,6},try_after}]},
          {match,
              {279,6},
              {var,{279,6},'Try'},
              {'try',
                  {279,6},
                  [{call,{279,6},{atom,{279,6},foo},[{var,{279,6},'X'}]}],
                  [{clause,
                       {279,6},
                       [{tuple,
                            {279,6},
                            [{atom,{279,6},ok},{var,{279,6},'Value'}]}],
                       [],
                       [{tuple,
                            {279,6},
                            [{atom,{279,6},ok},
                             {var,{279,6},'Value'},
                             {call,
                                 {279,6},
                                 {remote,
                                     {279,6},
                                     {atom,{279,6},erlang},
                                     {atom,{279,6},get}},
                                 [{atom,{279,6},try_after}]}]}]}],
                  [{clause,
                       {279,6},
                       [{tuple,
                            {279,6},
                            [{atom,{279,6},throw},
                             {var,{279,6},'Reason'},
                             {var,{279,6},'_'}]}],
                       [],
                       [{tuple,
                            {279,6},
                            [{atom,{279,6},throw},
                             {var,{279,6},'Reason'},
                             {call,
                                 {279,6},
                                 {remote,
                                     {279,6},
                                     {atom,{279,6},erlang},
                                     {atom,{279,6},get}},
                                 [{atom,{279,6},try_after}]}]}]},
                   {clause,
                       {279,6},
                       [{tuple,
                            {279,6},
                            [{atom,{279,6},error},
                             {var,{279,6},'Reason'},
                             {var,{279,6},'_'}]}],
                       [],
                       [{tuple,
                            {279,6},
                            [{atom,{279,6},error},
                             {var,{279,6},'Reason'},
                             {call,
                                 {279,6},
                                 {remote,
                                     {279,6},
                                     {atom,{279,6},erlang},
                                     {atom,{279,6},get}},
                                 [{atom,{279,6},try_after}]}]}]},
                   {clause,
                       {279,6},
                       [{tuple,
                            {279,6},
                            [{atom,{279,6},exit},
                             {var,{279,6},'Reason'},
                             {var,{279,6},'_'}]}],
                       [],
                       [{tuple,
                            {279,6},
                            [{atom,{279,6},exit},
                             {var,{279,6},'Reason'},
                             {call,
                                 {279,6},
                                 {remote,
                                     {279,6},
                                     {atom,{279,6},erlang},
                                     {atom,{279,6},get}},
                                 [{atom,{279,6},try_after}]}]}]}],
                  [{'catch',
                       {279,26},
                       {call,
                           {279,32},
                           {remote,
                               {279,32},
                               {atom,{279,32},erlang},
                               {atom,{279,32},put}},
                           [{atom,{279,36},try_after},{var,{279,47},'Y'}]}},
                   {call,
                       {279,49},
                       {remote,
                           {279,49},
                           {atom,{279,49},erlang},
                           {atom,{279,49},put}},
                       [{atom,{279,49},try_after},{var,{279,49},'Y'}]}]}},
          {tuple,
              {279,49},
              [{var,{279,49},'Try'},
               {call,
                   {279,49},
                   {remote,
                       {279,49},
                       {atom,{279,49},erlang},
                       {atom,{279,49},erase}},
                   [{atom,{279,49},try_after}]}]}]}]}.
{function,
    {281,1},
    try_after_complex,2,
    [{clause,
         {281,1},
         [{var,{281,1},'_'},{var,{281,1},'_'}],
         [[{call,
               {281,1},
               {remote,
                   {281,1},
                   {atom,{281,1},fake},
                   {atom,{281,1},is_beam_bif_info}},
               []}]],
         [{debug_line,281,146},{atom,{281,1},ignore}]},
     {clause,
         {281,1},
         [{var,{281,19},'X'},{var,{281,22},'Y'}],
         [],
         [{debug_line,283,147},
          {call,
              {283,6},
              {remote,{283,6},{atom,{283,6},erlang},{atom,{283,6},erase}},
              [{atom,{283,6},try_after}]},
          {match,
              {283,6},
              {var,{283,6},'Try'},
              {'try',
                  {283,6},
                  [{call,{283,6},{atom,{283,6},foo},[{var,{283,6},'X'}]}],
                  [{clause,
                       {283,6},
                       [{tuple,
                            {283,6},
                            [{atom,{283,6},ok},{var,{283,6},'Value'}]}],
                       [],
                       [{tuple,
                            {283,6},
                            [{atom,{283,6},ok},
                             {var,{283,6},'Value'},
                             {call,
                                 {283,6},
                                 {remote,
                                     {283,6},
                                     {atom,{283,6},erlang},
                                     {atom,{283,6},get}},
                                 [{atom,{283,6},try_after}]}]}]}],
                  [{clause,
                       {283,6},
                       [{tuple,
                            {283,6},
                            [{atom,{283,6},throw},
                             {var,{283,6},'Reason'},
                             {var,{283,6},'_'}]}],
                       [],
                       [{tuple,
                            {283,6},
                            [{atom,{283,6},throw},
                             {var,{283,6},'Reason'},
                             {call,
                                 {283,6},
                                 {remote,
                                     {283,6},
                                     {atom,{283,6},erlang},
                                     {atom,{283,6},get}},
                                 [{atom,{283,6},try_after}]}]}]},
                   {clause,
                       {283,6},
                       [{tuple,
                            {283,6},
                            [{atom,{283,6},error},
                             {var,{283,6},'Reason'},
                             {var,{283,6},'_'}]}],
                       [],
                       [{tuple,
                            {283,6},
                            [{atom,{283,6},error},
                             {var,{283,6},'Reason'},
                             {call,
                                 {283,6},
                                 {remote,
                                     {283,6},
                                     {atom,{283,6},erlang},
                                     {atom,{283,6},get}},
                                 [{atom,{283,6},try_after}]}]}]},
                   {clause,
                       {283,6},
                       [{tuple,
                            {283,6},
                            [{atom,{283,6},exit},
                             {var,{283,6},'Reason'},
                             {var,{283,6},'_'}]}],
                       [],
                       [{tuple,
                            {283,6},
                            [{atom,{283,6},exit},
                             {var,{283,6},'Reason'},
                             {call,
                                 {283,6},
                                 {remote,
                                     {283,6},
                                     {atom,{283,6},erlang},
                                     {atom,{283,6},get}},
                                 [{atom,{283,6},try_after}]}]}]}],
                  [{'case',
                       {283,25},
                       {call,
                           {283,30},
                           {remote,
                               {283,30},
                               {atom,{283,30},erlang},
                               {atom,{283,30},get}},
                           [{atom,{283,34},try_after}]},
                       [{clause,
                            {284,29},
                            [{atom,{284,29},unreachable_0}],
                            [],
                            [{debug_line,284,148},
                             {call,
                                 {284,46},
                                 {remote,
                                     {284,51},
                                     {atom,{284,46},dummy},
                                     {atom,{284,52},unreachable_0}},
                                 []}]},
                        {clause,
                            {285,29},
                            [{atom,{285,29},unreachable_1}],
                            [],
                            [{debug_line,285,149},
                             {call,
                                 {285,46},
                                 {remote,
                                     {285,51},
                                     {atom,{285,46},dummy},
                                     {atom,{285,52},unreachable_1}},
                                 []}]},
                        {clause,
                            {286,29},
                            [{atom,{286,29},unreachable_2}],
                            [],
                            [{debug_line,286,150},
                             {call,
                                 {286,46},
                                 {remote,
                                     {286,51},
                                     {atom,{286,46},dummy},
                                     {atom,{286,52},unreachable_2}},
                                 []}]},
                        {clause,
                            {287,29},
                            [{atom,{287,29},unreachable_3}],
                            [],
                            [{debug_line,287,151},
                             {call,
                                 {287,46},
                                 {remote,
                                     {287,51},
                                     {atom,{287,46},dummy},
                                     {atom,{287,52},unreachable_3}},
                                 []}]},
                        {clause,
                            {288,29},
                            [{atom,{288,29},unreachable_4}],
                            [],
                            [{debug_line,288,152},
                             {call,
                                 {288,46},
                                 {remote,
                                     {288,51},
                                     {atom,{288,46},dummy},
                                     {atom,{288,52},unreachable_4}},
                                 []}]},
                        {clause,
                            {289,29},
                            [{atom,{289,29},unreachable_5}],
                            [],
                            [{debug_line,289,153},
                             {call,
                                 {289,46},
                                 {remote,
                                     {289,51},
                                     {atom,{289,46},dummy},
                                     {atom,{289,52},unreachable_5}},
                                 []}]},
                        {clause,
                            {290,29},
                            [{atom,{290,29},unreachable_6}],
                            [],
                            [{debug_line,290,154},
                             {call,
                                 {290,46},
                                 {remote,
                                     {290,51},
                                     {atom,{290,46},dummy},
                                     {atom,{290,52},unreachable_6}},
                                 []}]},
                        {clause,
                            {291,29},
                            [{atom,{291,29},unreachable_7}],
                            [],
                            [{debug_line,291,155},
                             {call,
                                 {291,46},
                                 {remote,
                                     {291,51},
                                     {atom,{291,46},dummy},
                                     {atom,{291,52},unreachable_7}},
                                 []}]},
                        {clause,
                            {292,29},
                            [{atom,{292,29},unreachable_8}],
                            [],
                            [{debug_line,292,156},
                             {call,
                                 {292,46},
                                 {remote,
                                     {292,51},
                                     {atom,{292,46},dummy},
                                     {atom,{292,52},unreachable_8}},
                                 []}]},
                        {clause,
                            {293,29},
                            [{atom,{293,29},unreachable_9}],
                            [],
                            [{debug_line,293,157},
                             {call,
                                 {293,46},
                                 {remote,
                                     {293,51},
                                     {atom,{293,46},dummy},
                                     {atom,{293,52},unreachable_9}},
                                 []}]},
                        {clause,
                            {294,29},
                            [{var,{294,29},'_'}],
                            [],
                            [{debug_line,294,158},
                             {call,
                                 {294,34},
                                 {remote,
                                     {294,34},
                                     {atom,{294,34},erlang},
                                     {atom,{294,34},put}},
                                 [{atom,{294,38},try_after},
                                  {var,{294,49},'Y'}]}]}]},
                   {debug_line,295,159},
                   {call,
                       {295,25},
                       {remote,
                           {295,25},
                           {atom,{295,25},erlang},
                           {atom,{295,25},put}},
                       [{atom,{295,25},try_after},{var,{295,25},'Y'}]}]}},
          {tuple,
              {295,25},
              [{var,{295,25},'Try'},
               {call,
                   {295,25},
                   {remote,
                       {295,25},
                       {atom,{295,25},erlang},
                       {atom,{295,25},erase}},
                   [{atom,{295,25},try_after}]}]}]}]}.
{function,
    {297,1},
    try_after_fun,2,
    [{clause,
         {297,1},
         [{var,{297,1},'_'},{var,{297,1},'_'}],
         [[{call,
               {297,1},
               {remote,
                   {297,1},
                   {atom,{297,1},fake},
                   {atom,{297,1},is_beam_bif_info}},
               []}]],
         [{debug_line,297,162},{atom,{297,1},ignore}]},
     {clause,
         {297,1},
         [{var,{297,15},'X'},{var,{297,18},'Y'}],
         [],
         [{debug_line,298,163},
          {call,
              {298,6},
              {remote,{298,6},{atom,{298,6},erlang},{atom,{298,6},erase}},
              [{atom,{298,6},try_after}]},
          {match,
              {298,6},
              {var,{298,6},'Try'},
              {'try',
                  {298,6},
                  [{call,{298,6},{atom,{298,6},foo},[{var,{298,6},'X'}]}],
                  [{clause,
                       {298,6},
                       [{tuple,
                            {298,6},
                            [{atom,{298,6},ok},{var,{298,6},'Value'}]}],
                       [],
                       [{tuple,
                            {298,6},
                            [{atom,{298,6},ok},
                             {var,{298,6},'Value'},
                             {call,
                                 {298,6},
                                 {remote,
                                     {298,6},
                                     {atom,{298,6},erlang},
                                     {atom,{298,6},get}},
                                 [{atom,{298,6},try_after}]}]}]}],
                  [{clause,
                       {298,6},
                       [{tuple,
                            {298,6},
                            [{atom,{298,6},throw},
                             {var,{298,6},'Reason'},
                             {var,{298,6},'_'}]}],
                       [],
                       [{tuple,
                            {298,6},
                            [{atom,{298,6},throw},
                             {var,{298,6},'Reason'},
                             {call,
                                 {298,6},
                                 {remote,
                                     {298,6},
                                     {atom,{298,6},erlang},
                                     {atom,{298,6},get}},
                                 [{atom,{298,6},try_after}]}]}]},
                   {clause,
                       {298,6},
                       [{tuple,
                            {298,6},
                            [{atom,{298,6},error},
                             {var,{298,6},'Reason'},
                             {var,{298,6},'_'}]}],
                       [],
                       [{tuple,
                            {298,6},
                            [{atom,{298,6},error},
                             {var,{298,6},'Reason'},
                             {call,
                                 {298,6},
                                 {remote,
                                     {298,6},
                                     {atom,{298,6},erlang},
                                     {atom,{298,6},get}},
                                 [{atom,{298,6},try_after}]}]}]},
                   {clause,
                       {298,6},
                       [{tuple,
                            {298,6},
                            [{atom,{298,6},exit},
                             {var,{298,6},'Reason'},
                             {var,{298,6},'_'}]}],
                       [],
                       [{tuple,
                            {298,6},
                            [{atom,{298,6},exit},
                             {var,{298,6},'Reason'},
                             {call,
                                 {298,6},
                                 {remote,
                                     {298,6},
                                     {atom,{298,6},erlang},
                                     {atom,{298,6},get}},
                                 [{atom,{298,6},try_after}]}]}]}],
                  [{call,
                       {298,26},
                       {'fun',
                           {298,26},
                           {clauses,
                               [{clause,
                                    {298,29},
                                    [],[],
                                    [{atom,{298,35},ok}]}]}},
                       []},
                   {call,
                       {298,43},
                       {remote,
                           {298,43},
                           {atom,{298,43},erlang},
                           {atom,{298,43},put}},
                       [{atom,{298,43},try_after},{var,{298,43},'Y'}]}]}},
          {tuple,
              {298,43},
              [{var,{298,43},'Try'},
               {call,
                   {298,43},
                   {remote,
                       {298,43},
                       {atom,{298,43},erlang},
                       {atom,{298,43},erase}},
                   [{atom,{298,43},try_after}]}]}]}]}.
{function,
    {300,1},
    try_after_letrec,2,
    [{clause,
         {300,1},
         [{var,{300,1},'_'},{var,{300,1},'_'}],
         [[{call,
               {300,1},
               {remote,
                   {300,1},
                   {atom,{300,1},fake},
                   {atom,{300,1},is_beam_bif_info}},
               []}]],
         [{debug_line,300,165},{atom,{300,1},ignore}]},
     {clause,
         {300,1},
         [{var,{300,18},'X'},{var,{300,21},'Y'}],
         [],
         [{debug_line,301,166},
          {match,
              {301,5},
              {var,{301,5},'List'},
              {call,
                  {301,12},
                  {remote,
                      {301,17},
                      {atom,{301,12},lists},
                      {atom,{301,18},duplicate}},
                  [{integer,{301,28},100},{atom,{301,33},ok}]}},
          {debug_line,302,167},
          {call,
              {302,6},
              {remote,{302,6},{atom,{302,6},erlang},{atom,{302,6},erase}},
              [{atom,{302,6},try_after}]},
          {match,
              {302,6},
              {var,{302,6},'Try'},
              {'try',
                  {302,6},
                  [{call,{302,6},{atom,{302,6},foo},[{var,{302,6},'X'}]}],
                  [{clause,
                       {302,6},
                       [{tuple,
                            {302,6},
                            [{atom,{302,6},ok},{var,{302,6},'Value'}]}],
                       [],
                       [{tuple,
                            {302,6},
                            [{atom,{302,6},ok},
                             {var,{302,6},'Value'},
                             {call,
                                 {302,6},
                                 {remote,
                                     {302,6},
                                     {atom,{302,6},erlang},
                                     {atom,{302,6},get}},
                                 [{atom,{302,6},try_after}]}]}]}],
                  [{clause,
                       {302,6},
                       [{tuple,
                            {302,6},
                            [{atom,{302,6},throw},
                             {var,{302,6},'Reason'},
                             {var,{302,6},'_'}]}],
                       [],
                       [{tuple,
                            {302,6},
                            [{atom,{302,6},throw},
                             {var,{302,6},'Reason'},
                             {call,
                                 {302,6},
                                 {remote,
                                     {302,6},
                                     {atom,{302,6},erlang},
                                     {atom,{302,6},get}},
                                 [{atom,{302,6},try_after}]}]}]},
                   {clause,
                       {302,6},
                       [{tuple,
                            {302,6},
                            [{atom,{302,6},error},
                             {var,{302,6},'Reason'},
                             {var,{302,6},'_'}]}],
                       [],
                       [{tuple,
                            {302,6},
                            [{atom,{302,6},error},
                             {var,{302,6},'Reason'},
                             {call,
                                 {302,6},
                                 {remote,
                                     {302,6},
                                     {atom,{302,6},erlang},
                                     {atom,{302,6},get}},
                                 [{atom,{302,6},try_after}]}]}]},
                   {clause,
                       {302,6},
                       [{tuple,
                            {302,6},
                            [{atom,{302,6},exit},
                             {var,{302,6},'Reason'},
                             {var,{302,6},'_'}]}],
                       [],
                       [{tuple,
                            {302,6},
                            [{atom,{302,6},exit},
                             {var,{302,6},'Reason'},
                             {call,
                                 {302,6},
                                 {remote,
                                     {302,6},
                                     {atom,{302,6},erlang},
                                     {atom,{302,6},get}},
                                 [{atom,{302,6},try_after}]}]}]}],
                  [{lc,{302,25},
                       {block,0,[{var,{302,26},'L'}]},
                       [{block,0,[{atom,{302,36},true}]},
                        {generate,
                            {302,33},
                            {var,{302,31},'L'},
                            {var,{302,36},'List'}}]},
                   {call,
                       {302,40},
                       {remote,
                           {302,40},
                           {atom,{302,40},erlang},
                           {atom,{302,40},put}},
                       [{atom,{302,40},try_after},{var,{302,40},'Y'}]}]}},
          {tuple,
              {302,40},
              [{var,{302,40},'Try'},
               {call,
                   {302,40},
                   {remote,
                       {302,40},
                       {atom,{302,40},erlang},
                       {atom,{302,40},erase}},
                   [{atom,{302,40},try_after}]}]}]}]}.
{function,
 {304,1},
 try_after_protect,2,
 [{clause,
   {304,1},
   [{var,{304,1},'_'},{var,{304,1},'_'}],
   [[{call,
      {304,1},
      {remote,{304,1},{atom,{304,1},fake},{atom,{304,1},is_beam_bif_info}},
      []}]],
   [{debug_line,304,169},{atom,{304,1},ignore}]},
  {clause,
   {304,1},
   [{var,{304,19},'X'},{var,{304,22},'Y'}],
   [],
   [{debug_line,305,170},
    {call,
     {305,6},
     {remote,{305,6},{atom,{305,6},erlang},{atom,{305,6},erase}},
     [{atom,{305,6},try_after}]},
    {match,
     {305,6},
     {var,{305,6},'Try'},
     {'try',
      {305,6},
      [{call,{305,6},{atom,{305,6},foo},[{var,{305,6},'X'}]}],
      [{clause,
        {305,6},
        [{tuple,{305,6},[{atom,{305,6},ok},{var,{305,6},'Value'}]}],
        [],
        [{tuple,
          {305,6},
          [{atom,{305,6},ok},
           {var,{305,6},'Value'},
           {call,
            {305,6},
            {remote,{305,6},{atom,{305,6},erlang},{atom,{305,6},get}},
            [{atom,{305,6},try_after}]}]}]}],
      [{clause,
        {305,6},
        [{tuple,
          {305,6},
          [{atom,{305,6},throw},{var,{305,6},'Reason'},{var,{305,6},'_'}]}],
        [],
        [{tuple,
          {305,6},
          [{atom,{305,6},throw},
           {var,{305,6},'Reason'},
           {call,
            {305,6},
            {remote,{305,6},{atom,{305,6},erlang},{atom,{305,6},get}},
            [{atom,{305,6},try_after}]}]}]},
       {clause,
        {305,6},
        [{tuple,
          {305,6},
          [{atom,{305,6},error},{var,{305,6},'Reason'},{var,{305,6},'_'}]}],
        [],
        [{tuple,
          {305,6},
          [{atom,{305,6},error},
           {var,{305,6},'Reason'},
           {call,
            {305,6},
            {remote,{305,6},{atom,{305,6},erlang},{atom,{305,6},get}},
            [{atom,{305,6},try_after}]}]}]},
       {clause,
        {305,6},
        [{tuple,
          {305,6},
          [{atom,{305,6},exit},{var,{305,6},'Reason'},{var,{305,6},'_'}]}],
        [],
        [{tuple,
          {305,6},
          [{atom,{305,6},exit},
           {var,{305,6},'Reason'},
           {call,
            {305,6},
            {remote,{305,6},{atom,{305,6},erlang},{atom,{305,6},get}},
            [{atom,{305,6},try_after}]}]}]}],
      [{'case',
        {305,25},
        {call,
         {305,30},
         {remote,{305,30},{atom,{305,30},erlang},{atom,{305,30},get}},
         [{atom,{305,34},try_after}]},
        [{clause,
          {306,29},
          [{var,{306,29},'N'}],
          [[{op,
             {306,51},
             '<',
             {call,
              {306,36},
              {remote,{306,36},{atom,{306,36},erlang},{atom,{306,36},element}},
              [{integer,{306,44},52},{var,{306,48},'N'}]},
             {integer,{306,53},32}}]],
          [{debug_line,306,171},{atom,{306,59},ok}]},
         {clause,
          {307,29},
          [{var,{307,29},'_'}],
          [],
          [{debug_line,307,172},{atom,{307,34},ok}]}]},
       {debug_line,308,173},
       {call,
        {308,25},
        {remote,{308,25},{atom,{308,25},erlang},{atom,{308,25},put}},
        [{atom,{308,25},try_after},{var,{308,25},'Y'}]}]}},
    {tuple,
     {308,25},
     [{var,{308,25},'Try'},
      {call,
       {308,25},
       {remote,{308,25},{atom,{308,25},erlang},{atom,{308,25},erase}},
       [{atom,{308,25},try_after}]}]}]}]}.
{function,
    {310,1},
    try_after_receive,2,
    [{clause,
         {310,1},
         [{var,{310,1},'_'},{var,{310,1},'_'}],
         [[{call,
               {310,1},
               {remote,
                   {310,1},
                   {atom,{310,1},fake},
                   {atom,{310,1},is_beam_bif_info}},
               []}]],
         [{debug_line,310,176},{atom,{310,1},ignore}]},
     {clause,
         {310,1},
         [{var,{310,19},'X'},{var,{310,22},'Y'}],
         [],
         [{debug_line,311,177},
          {match,
              {311,5},
              {var,{311,5},'Ref'},
              {call,
                  {311,11},
                  {remote,
                      {311,11},
                      {atom,{311,11},erlang},
                      {atom,{311,11},make_ref}},
                  []}},
          {debug_line,312,178},
          {op,{312,12},
              '!',
              {call,
                  {312,5},
                  {remote,{312,5},{atom,{312,5},erlang},{atom,{312,5},self}},
                  []},
              {var,{312,14},'Ref'}},
          {debug_line,313,179},
          {call,
              {313,6},
              {remote,{313,6},{atom,{313,6},erlang},{atom,{313,6},erase}},
              [{atom,{313,6},try_after}]},
          {match,
              {313,6},
              {var,{313,6},'Try'},
              {'try',
                  {313,6},
                  [{call,{313,6},{atom,{313,6},foo},[{var,{313,6},'X'}]}],
                  [{clause,
                       {313,6},
                       [{tuple,
                            {313,6},
                            [{atom,{313,6},ok},{var,{313,6},'Value'}]}],
                       [],
                       [{tuple,
                            {313,6},
                            [{atom,{313,6},ok},
                             {var,{313,6},'Value'},
                             {call,
                                 {313,6},
                                 {remote,
                                     {313,6},
                                     {atom,{313,6},erlang},
                                     {atom,{313,6},get}},
                                 [{atom,{313,6},try_after}]}]}]}],
                  [{clause,
                       {313,6},
                       [{tuple,
                            {313,6},
                            [{atom,{313,6},throw},
                             {var,{313,6},'Reason'},
                             {var,{313,6},'_'}]}],
                       [],
                       [{tuple,
                            {313,6},
                            [{atom,{313,6},throw},
                             {var,{313,6},'Reason'},
                             {call,
                                 {313,6},
                                 {remote,
                                     {313,6},
                                     {atom,{313,6},erlang},
                                     {atom,{313,6},get}},
                                 [{atom,{313,6},try_after}]}]}]},
                   {clause,
                       {313,6},
                       [{tuple,
                            {313,6},
                            [{atom,{313,6},error},
                             {var,{313,6},'Reason'},
                             {var,{313,6},'_'}]}],
                       [],
                       [{tuple,
                            {313,6},
                            [{atom,{313,6},error},
                             {var,{313,6},'Reason'},
                             {call,
                                 {313,6},
                                 {remote,
                                     {313,6},
                                     {atom,{313,6},erlang},
                                     {atom,{313,6},get}},
                                 [{atom,{313,6},try_after}]}]}]},
                   {clause,
                       {313,6},
                       [{tuple,
                            {313,6},
                            [{atom,{313,6},exit},
                             {var,{313,6},'Reason'},
                             {var,{313,6},'_'}]}],
                       [],
                       [{tuple,
                            {313,6},
                            [{atom,{313,6},exit},
                             {var,{313,6},'Reason'},
                             {call,
                                 {313,6},
                                 {remote,
                                     {313,6},
                                     {atom,{313,6},erlang},
                                     {atom,{313,6},get}},
                                 [{atom,{313,6},try_after}]}]}]}],
                  [{'receive',
                       {313,25},
                       [{clause,
                            {314,29},
                            [{var,{314,29},'Ref'}],
                            [],
                            [{debug_line,314,180},{var,{314,36},'Ref'}]}]},
                   {debug_line,315,181},
                   {call,
                       {315,25},
                       {remote,
                           {315,25},
                           {atom,{315,25},erlang},
                           {atom,{315,25},put}},
                       [{atom,{315,25},try_after},{var,{315,25},'Y'}]}]}},
          {tuple,
              {315,25},
              [{var,{315,25},'Try'},
               {call,
                   {315,25},
                   {remote,
                       {315,25},
                       {atom,{315,25},erlang},
                       {atom,{315,25},erase}},
                   [{atom,{315,25},try_after}]}]}]}]}.
{function,
    {317,1},
    try_after_receive_timeout,2,
    [{clause,
         {317,1},
         [{var,{317,1},'_'},{var,{317,1},'_'}],
         [[{call,
               {317,1},
               {remote,
                   {317,1},
                   {atom,{317,1},fake},
                   {atom,{317,1},is_beam_bif_info}},
               []}]],
         [{debug_line,317,184},{atom,{317,1},ignore}]},
     {clause,
         {317,1},
         [{var,{317,27},'X'},{var,{317,30},'Y'}],
         [],
         [{debug_line,318,185},
          {match,
              {318,5},
              {var,{318,5},'Ref'},
              {call,
                  {318,11},
                  {remote,
                      {318,11},
                      {atom,{318,11},erlang},
                      {atom,{318,11},make_ref}},
                  []}},
          {debug_line,319,186},
          {op,{319,12},
              '!',
              {call,
                  {319,5},
                  {remote,{319,5},{atom,{319,5},erlang},{atom,{319,5},self}},
                  []},
              {var,{319,14},'Ref'}},
          {debug_line,320,187},
          {call,
              {320,6},
              {remote,{320,6},{atom,{320,6},erlang},{atom,{320,6},erase}},
              [{atom,{320,6},try_after}]},
          {match,
              {320,6},
              {var,{320,6},'Try'},
              {'try',
                  {320,6},
                  [{call,{320,6},{atom,{320,6},foo},[{var,{320,6},'X'}]}],
                  [{clause,
                       {320,6},
                       [{tuple,
                            {320,6},
                            [{atom,{320,6},ok},{var,{320,6},'Value'}]}],
                       [],
                       [{tuple,
                            {320,6},
                            [{atom,{320,6},ok},
                             {var,{320,6},'Value'},
                             {call,
                                 {320,6},
                                 {remote,
                                     {320,6},
                                     {atom,{320,6},erlang},
                                     {atom,{320,6},get}},
                                 [{atom,{320,6},try_after}]}]}]}],
                  [{clause,
                       {320,6},
                       [{tuple,
                            {320,6},
                            [{atom,{320,6},throw},
                             {var,{320,6},'Reason'},
                             {var,{320,6},'_'}]}],
                       [],
                       [{tuple,
                            {320,6},
                            [{atom,{320,6},throw},
                             {var,{320,6},'Reason'},
                             {call,
                                 {320,6},
                                 {remote,
                                     {320,6},
                                     {atom,{320,6},erlang},
                                     {atom,{320,6},get}},
                                 [{atom,{320,6},try_after}]}]}]},
                   {clause,
                       {320,6},
                       [{tuple,
                            {320,6},
                            [{atom,{320,6},error},
                             {var,{320,6},'Reason'},
                             {var,{320,6},'_'}]}],
                       [],
                       [{tuple,
                            {320,6},
                            [{atom,{320,6},error},
                             {var,{320,6},'Reason'},
                             {call,
                                 {320,6},
                                 {remote,
                                     {320,6},
                                     {atom,{320,6},erlang},
                                     {atom,{320,6},get}},
                                 [{atom,{320,6},try_after}]}]}]},
                   {clause,
                       {320,6},
                       [{tuple,
                            {320,6},
                            [{atom,{320,6},exit},
                             {var,{320,6},'Reason'},
                             {var,{320,6},'_'}]}],
                       [],
                       [{tuple,
                            {320,6},
                            [{atom,{320,6},exit},
                             {var,{320,6},'Reason'},
                             {call,
                                 {320,6},
                                 {remote,
                                     {320,6},
                                     {atom,{320,6},erlang},
                                     {atom,{320,6},get}},
                                 [{atom,{320,6},try_after}]}]}]}],
                  [{'receive',
                       {320,25},
                       [{clause,
                            {321,29},
                            [{var,{321,29},'Ref'}],
                            [],
                            [{debug_line,321,188},{var,{321,36},'Ref'}]}],
                       {integer,{322,31},1000},
                       [{debug_line,322,189},{atom,{322,39},ok}]},
                   {debug_line,323,190},
                   {call,
                       {323,25},
                       {remote,
                           {323,25},
                           {atom,{323,25},erlang},
                           {atom,{323,25},put}},
                       [{atom,{323,25},try_after},{var,{323,25},'Y'}]}]}},
          {tuple,
              {323,25},
              [{var,{323,25},'Try'},
               {call,
                   {323,25},
                   {remote,
                       {323,25},
                       {atom,{323,25},erlang},
                       {atom,{323,25},erase}},
                   [{atom,{323,25},try_after}]}]}]}]}.
{function,
    {325,1},
    try_after_try,2,
    [{clause,
         {325,1},
         [{var,{325,1},'_'},{var,{325,1},'_'}],
         [[{call,
               {325,1},
               {remote,
                   {325,1},
                   {atom,{325,1},fake},
                   {atom,{325,1},is_beam_bif_info}},
               []}]],
         [{debug_line,325,193},{atom,{325,1},ignore}]},
     {clause,
         {325,1},
         [{var,{325,15},'X'},{var,{325,18},'Y'}],
         [],
         [{debug_line,326,194},
          {call,
              {326,6},
              {remote,{326,6},{atom,{326,6},erlang},{atom,{326,6},erase}},
              [{atom,{326,6},try_after}]},
          {match,
              {326,6},
              {var,{326,6},'Try'},
              {'try',
                  {326,6},
                  [{call,{326,6},{atom,{326,6},foo},[{var,{326,6},'X'}]}],
                  [{clause,
                       {326,6},
                       [{tuple,
                            {326,6},
                            [{atom,{326,6},ok},{var,{326,6},'Value'}]}],
                       [],
                       [{tuple,
                            {326,6},
                            [{atom,{326,6},ok},
                             {var,{326,6},'Value'},
                             {call,
                                 {326,6},
                                 {remote,
                                     {326,6},
                                     {atom,{326,6},erlang},
                                     {atom,{326,6},get}},
                                 [{atom,{326,6},try_after}]}]}]}],
                  [{clause,
                       {326,6},
                       [{tuple,
                            {326,6},
                            [{atom,{326,6},throw},
                             {var,{326,6},'Reason'},
                             {var,{326,6},'_'}]}],
                       [],
                       [{tuple,
                            {326,6},
                            [{atom,{326,6},throw},
                             {var,{326,6},'Reason'},
                             {call,
                                 {326,6},
                                 {remote,
                                     {326,6},
                                     {atom,{326,6},erlang},
                                     {atom,{326,6},get}},
                                 [{atom,{326,6},try_after}]}]}]},
                   {clause,
                       {326,6},
                       [{tuple,
                            {326,6},
                            [{atom,{326,6},error},
                             {var,{326,6},'Reason'},
                             {var,{326,6},'_'}]}],
                       [],
                       [{tuple,
                            {326,6},
                            [{atom,{326,6},error},
                             {var,{326,6},'Reason'},
                             {call,
                                 {326,6},
                                 {remote,
                                     {326,6},
                                     {atom,{326,6},erlang},
                                     {atom,{326,6},get}},
                                 [{atom,{326,6},try_after}]}]}]},
                   {clause,
                       {326,6},
                       [{tuple,
                            {326,6},
                            [{atom,{326,6},exit},
                             {var,{326,6},'Reason'},
                             {var,{326,6},'_'}]}],
                       [],
                       [{tuple,
                            {326,6},
                            [{atom,{326,6},exit},
                             {var,{326,6},'Reason'},
                             {call,
                                 {326,6},
                                 {remote,
                                     {326,6},
                                     {atom,{326,6},erlang},
                                     {atom,{326,6},get}},
                                 [{atom,{326,6},try_after}]}]}]}],
                  [{'try',
                       {326,25},
                       [{debug_line,327,195},
                        {call,
                            {327,29},
                            {remote,
                                {327,29},
                                {atom,{327,29},erlang},
                                {atom,{327,29},put}},
                            [{atom,{327,33},try_after},{var,{327,44},'Y'}]}],
                       [],
                       [{clause,
                            {329,29},
                            [{tuple,
                                 {329,29},
                                 [{atom,{329,29},throw},
                                  {var,{329,29},'_'},
                                  {var,{329,29},'_'}]}],
                            [],
                            [{debug_line,329,196},{atom,{329,34},ok}]}],
                       []},
                   {debug_line,330,197},
                   {call,
                       {330,25},
                       {remote,
                           {330,25},
                           {atom,{330,25},erlang},
                           {atom,{330,25},put}},
                       [{atom,{330,25},try_after},{var,{330,25},'Y'}]}]}},
          {tuple,
              {330,25},
              [{var,{330,25},'Try'},
               {call,
                   {330,25},
                   {remote,
                       {330,25},
                       {atom,{330,25},erlang},
                       {atom,{330,25},erase}},
                   [{atom,{330,25},try_after}]}]}]}]}.
{function,
    {332,1},
    catch_oops,1,
    [{clause,
         {332,1},
         [{var,{332,1},'_'}],
         [[{call,
               {332,1},
               {remote,
                   {332,1},
                   {atom,{332,1},fake},
                   {atom,{332,1},is_beam_bif_info}},
               []}]],
         [{debug_line,332,200},{atom,{332,1},ignore}]},
     {clause,
         {332,1},
         [{var,{332,12},'Conf'}],
         [[{call,
               {332,23},
               {remote,
                   {332,23},
                   {atom,{332,23},erlang},
                   {atom,{332,23},is_list}},
               [{var,{332,31},'Conf'}]}]],
         [{debug_line,333,201},
          {match,
              {333,5},
              {var,{333,5},'V'},
              {tuple,
                  {333,9},
                  [{atom,{333,10},v},
                   {cons,
                       {333,12},
                       {atom,{333,13},a},
                       {cons,{333,15},{atom,{333,15},l},{atom,{333,17},u}}},
                   {tuple,{333,20},[{atom,{333,21},e}]},
                   {call,
                       {333,24},
                       {remote,
                           {333,24},
                           {atom,{333,24},erlang},
                           {atom,{333,24},self}},
                       []}]}},
          {debug_line,334,202},
          {match,
              {334,5},
              {tuple,{334,5},[{atom,{334,6},value},{var,{334,12},'V'}]},
              {call,
                  {334,17},
                  {atom,{334,17},catch_oops_1},
                  [{block,0,
                       [{tuple,
                            {334,30},
                            [{atom,{334,31},value},{var,{334,37},'V'}]}]}]}},
          {debug_line,335,203},
          {match,
              {335,5},
              {tuple,{335,5},[{atom,{335,6},value},{integer,{335,12},1}]},
              {call,
                  {335,17},
                  {atom,{335,17},catch_oops_1},
                  [{block,0,
                       [{tuple,
                            {335,30},
                            [{atom,{335,31},'div'},
                             {tuple,
                                 {335,37},
                                 [{integer,{335,38},1},
                                  {integer,{335,40},1}]}]}]}]}},
          {debug_line,336,204},
          {match,
              {336,5},
              {tuple,{336,5},[{atom,{336,6},error},{atom,{336,12},badarith}]},
              {call,
                  {336,24},
                  {atom,{336,24},catch_oops_1},
                  [{block,0,
                       [{tuple,
                            {336,37},
                            [{atom,{336,38},'div'},
                             {tuple,
                                 {336,44},
                                 [{integer,{336,45},1},
                                  {integer,{336,47},0}]}]}]}]}},
          {debug_line,337,205},
          {match,
              {337,5},
              {tuple,
                  {337,5},
                  [{atom,{337,6},error},{atom,{337,12},function_clause}]},
              {call,
                  {337,31},
                  {atom,{337,31},catch_oops_1},
                  [{atom,{337,44},function_clause}]}},
          {debug_line,338,206},
          {match,
              {338,5},
              {tuple,{338,5},[{atom,{338,6},throw},{var,{338,12},'V'}]},
              {call,
                  {338,17},
                  {atom,{338,17},catch_oops_1},
                  [{block,0,
                       [{tuple,
                            {338,30},
                            [{atom,{338,31},throw},{var,{338,37},'V'}]}]}]}},
          {debug_line,339,207},
          {match,
              {339,5},
              {tuple,{339,5},[{atom,{339,6},exit},{var,{339,11},'V'}]},
              {call,
                  {339,16},
                  {atom,{339,16},catch_oops_1},
                  [{block,0,
                       [{tuple,
                            {339,29},
                            [{atom,{339,30},exit},{var,{339,35},'V'}]}]}]}},
          {debug_line,340,208},
          {atom,{340,5},ok}]}]}.
{function,
    {342,1},
    catch_oops_1,1,
    [{clause,
         {342,1},
         [{var,{342,1},'_'}],
         [[{call,
               {342,1},
               {remote,
                   {342,1},
                   {atom,{342,1},fake},
                   {atom,{342,1},is_beam_bif_info}},
               []}]],
         [{debug_line,342,209},{atom,{342,1},ignore}]},
     {clause,
         {342,1},
         [{var,{342,14},'X'}],
         [],
         [{debug_line,343,210},
          {match,
              {343,5},
              {var,{343,5},'Ref'},
              {call,
                  {343,11},
                  {remote,
                      {343,11},
                      {atom,{343,11},erlang},
                      {atom,{343,11},make_ref}},
                  []}},
          {debug_line,344,211},
          {'try',
              {344,5},
              [{'try',
                   {344,9},
                   [{call,
                        {344,13},
                        {atom,{344,13},foo},
                        [{block,0,
                             [{tuple,
                                  {344,17},
                                  [{atom,{344,18},error},
                                   {var,{344,24},'Ref'}]}]}]}],
                   [],
                   [{clause,
                        {346,13},
                        [{tuple,
                             {346,13},
                             [{atom,{346,13},error},
                              {var,{346,19},'Ref'},
                              {var,{346,19},'_'}]}],
                        [],
                        [{debug_line,347,212},
                         {call,
                             {347,10},
                             {atom,{347,10},foo},
                             [{var,{347,14},'X'}]}]}],
                   []}],
              [{clause,
                   {349,9},
                   [{var,{349,9},'Value'}],
                   [],
                   [{debug_line,349,213},
                    {tuple,
                        {349,18},
                        [{atom,{349,19},value},{var,{349,25},'Value'}]}]}],
              [{clause,
                   {351,9},
                   [{tuple,
                        {351,9},
                        [{var,{351,9},'Class'},
                         {var,{351,15},'Data'},
                         {var,{351,15},'_'}]}],
                   [],
                   [{debug_line,351,214},
                    {tuple,
                        {351,23},
                        [{var,{351,24},'Class'},{var,{351,30},'Data'}]}]}],
              []}]}]}.
{function,
    {356,1},
    after_oops,1,
    [{clause,
         {356,1},
         [{var,{356,1},'_'}],
         [[{call,
               {356,1},
               {remote,
                   {356,1},
                   {atom,{356,1},fake},
                   {atom,{356,1},is_beam_bif_info}},
               []}]],
         [{debug_line,356,215},{atom,{356,1},ignore}]},
     {clause,
         {356,1},
         [{var,{356,12},'Conf'}],
         [[{call,
               {356,23},
               {remote,
                   {356,23},
                   {atom,{356,23},erlang},
                   {atom,{356,23},is_list}},
               [{var,{356,31},'Conf'}]}]],
         [{debug_line,357,216},
          {match,
              {357,5},
              {var,{357,5},'V'},
              {tuple,
                  {357,9},
                  [{call,
                       {357,10},
                       {remote,
                           {357,10},
                           {atom,{357,10},erlang},
                           {atom,{357,10},self}},
                       []},
                   {call,
                       {357,17},
                       {remote,
                           {357,17},
                           {atom,{357,17},erlang},
                           {atom,{357,17},make_ref}},
                       []}]}},
          {debug_line,359,217},
          {match,
              {359,5},
              {tuple,
                  {359,5},
                  [{tuple,{359,6},[{atom,{359,7},value},{var,{359,13},'V'}]},
                   {var,{359,16},'V'}]},
              {call,
                  {359,21},
                  {atom,{359,21},after_oops_1},
                  [{block,0,
                       [{tuple,
                            {359,34},
                            [{atom,{359,35},value},{var,{359,41},'V'}]}]},
                   {block,0,
                       [{tuple,
                            {359,45},
                            [{atom,{359,46},value},{var,{359,52},'V'}]}]}]}},
          {debug_line,360,218},
          {match,
              {360,5},
              {tuple,
                  {360,5},
                  [{tuple,{360,6},[{atom,{360,7},exit},{var,{360,12},'V'}]},
                   {var,{360,15},'V'}]},
              {call,
                  {360,20},
                  {atom,{360,20},after_oops_1},
                  [{block,0,
                       [{tuple,
                            {360,33},
                            [{atom,{360,34},exit},{var,{360,39},'V'}]}]},
                   {block,0,
                       [{tuple,
                            {360,43},
                            [{atom,{360,44},value},{var,{360,50},'V'}]}]}]}},
          {debug_line,361,219},
          {match,
              {361,5},
              {tuple,
                  {361,5},
                  [{tuple,{361,6},[{atom,{361,7},error},{var,{361,13},'V'}]},
                   {atom,{361,16},undefined}]},
              {call,
                  {361,29},
                  {atom,{361,29},after_oops_1},
                  [{block,0,
                       [{tuple,
                            {361,42},
                            [{atom,{361,43},value},{var,{361,49},'V'}]}]},
                   {block,0,
                       [{tuple,
                            {361,53},
                            [{atom,{361,54},error},{var,{361,60},'V'}]}]}]}},
          {debug_line,362,220},
          {match,
              {362,5},
              {tuple,
                  {362,5},
                  [{tuple,
                       {362,6},
                       [{atom,{362,7},error},{atom,{362,13},function_clause}]},
                   {atom,{362,30},undefined}]},
              {call,
                  {363,9},
                  {atom,{363,9},after_oops_1},
                  [{block,0,
                       [{debug_line,363,221},
                        {tuple,
                            {363,22},
                            [{atom,{363,23},exit},{var,{363,28},'V'}]}]},
                   {atom,{363,32},function_clause}]}},
          {debug_line,365,222},
          {match,
              {365,5},
              {tuple,
                  {365,5},
                  [{tuple,{365,6},[{atom,{365,7},value},{var,{365,13},'V'}]},
                   {var,{365,16},'V'}]},
              {call,
                  {365,21},
                  {atom,{365,21},after_oops_2},
                  [{block,0,
                       [{tuple,
                            {365,34},
                            [{atom,{365,35},value},{var,{365,41},'V'}]}]},
                   {block,0,
                       [{tuple,
                            {365,45},
                            [{atom,{365,46},value},{var,{365,52},'V'}]}]}]}},
          {debug_line,366,223},
          {match,
              {366,5},
              {tuple,
                  {366,5},
                  [{tuple,{366,6},[{atom,{366,7},exit},{var,{366,12},'V'}]},
                   {var,{366,15},'V'}]},
              {call,
                  {366,20},
                  {atom,{366,20},after_oops_2},
                  [{block,0,
                       [{tuple,
                            {366,33},
                            [{atom,{366,34},exit},{var,{366,39},'V'}]}]},
                   {block,0,
                       [{tuple,
                            {366,43},
                            [{atom,{366,44},value},{var,{366,50},'V'}]}]}]}},
          {debug_line,367,224},
          {match,
              {367,5},
              {tuple,
                  {367,5},
                  [{tuple,{367,6},[{atom,{367,7},error},{var,{367,13},'V'}]},
                   {atom,{367,16},undefined}]},
              {call,
                  {367,29},
                  {atom,{367,29},after_oops_2},
                  [{block,0,
                       [{tuple,
                            {367,42},
                            [{atom,{367,43},value},{var,{367,49},'V'}]}]},
                   {block,0,
                       [{tuple,
                            {367,53},
                            [{atom,{367,54},error},{var,{367,60},'V'}]}]}]}},
          {debug_line,368,225},
          {match,
              {368,5},
              {tuple,
                  {368,5},
                  [{tuple,
                       {368,6},
                       [{atom,{368,7},error},{atom,{368,13},function_clause}]},
                   {atom,{368,30},undefined}]},
              {call,
                  {369,9},
                  {atom,{369,9},after_oops_2},
                  [{block,0,
                       [{debug_line,369,226},
                        {tuple,
                            {369,22},
                            [{atom,{369,23},exit},{var,{369,28},'V'}]}]},
                   {atom,{369,32},function_clause}]}},
          {debug_line,371,227},
          {atom,{371,5},ok}]}]}.
{function,
    {373,1},
    after_oops_1,2,
    [{clause,
         {373,1},
         [{var,{373,1},'_'},{var,{373,1},'_'}],
         [[{call,
               {373,1},
               {remote,
                   {373,1},
                   {atom,{373,1},fake},
                   {atom,{373,1},is_beam_bif_info}},
               []}]],
         [{debug_line,373,228},{atom,{373,1},ignore}]},
     {clause,
         {373,1},
         [{var,{373,14},'X'},{var,{373,17},'Y'}],
         [],
         [{debug_line,374,229},
          {call,
              {374,5},
              {remote,{374,5},{atom,{374,5},erlang},{atom,{374,5},erase}},
              [{atom,{374,11},after_oops}]},
          {debug_line,375,230},
          {match,
              {375,5},
              {var,{375,5},'Try'},
              {'try',
                  {376,9},
                  [{debug_line,376,231},
                   {'try',
                       {376,13},
                       [{call,
                            {376,17},
                            {atom,{376,17},foo},
                            [{var,{376,21},'X'}]}],
                       [],[],
                       [{debug_line,378,232},
                        {call,
                            {378,17},
                            {remote,
                                {378,17},
                                {atom,{378,17},erlang},
                                {atom,{378,17},put}},
                            [{atom,{378,21},after_oops},
                             {block,0,
                                 [{call,
                                      {378,33},
                                      {atom,{378,33},foo},
                                      [{var,{378,37},'Y'}]}]}]}]}],
                  [{clause,
                       {380,13},
                       [{var,{380,13},'V'}],
                       [],
                       [{debug_line,380,233},
                        {tuple,
                            {380,18},
                            [{atom,{380,19},value},{var,{380,25},'V'}]}]}],
                  [{clause,
                       {382,13},
                       [{tuple,
                            {382,13},
                            [{var,{382,13},'C'},
                             {var,{382,15},'D'},
                             {var,{382,15},'_'}]}],
                       [],
                       [{debug_line,382,234},
                        {tuple,
                            {382,20},
                            [{var,{382,21},'C'},{var,{382,23},'D'}]}]}],
                  []}},
          {debug_line,384,235},
          {tuple,
              {384,5},
              [{var,{384,6},'Try'},
               {call,
                   {384,10},
                   {remote,
                       {384,10},
                       {atom,{384,10},erlang},
                       {atom,{384,10},erase}},
                   [{atom,{384,16},after_oops}]}]}]}]}.
{function,
    {386,1},
    after_oops_2,2,
    [{clause,
         {386,1},
         [{var,{386,1},'_'},{var,{386,1},'_'}],
         [[{call,
               {386,1},
               {remote,
                   {386,1},
                   {atom,{386,1},fake},
                   {atom,{386,1},is_beam_bif_info}},
               []}]],
         [{debug_line,386,236},{atom,{386,1},ignore}]},
     {clause,
         {386,1},
         [{var,{386,14},'X'},{var,{386,17},'Y'}],
         [],
         [{debug_line,389,237},
          {call,
              {389,5},
              {remote,{389,5},{atom,{389,5},erlang},{atom,{389,5},erase}},
              [{atom,{389,11},after_oops}]},
          {debug_line,390,238},
          {match,
              {390,5},
              {var,{390,5},'Try'},
              {'try',
                  {391,9},
                  [{debug_line,392,239},
                   {'try',
                       {392,13},
                       [{debug_line,393,240},
                        {call,
                            {393,17},
                            {atom,{393,17},foo},
                            [{var,{393,21},'X'}]}],
                       [],
                       [{clause,
                            {394,19},
                            [{tuple,
                                 {394,19},
                                 [{var,{394,19},'E'},
                                  {var,{394,21},'R'},
                                  {var,{394,23},'S'}]}],
                            [],
                            [{debug_line,395,241},
                             {call,
                                 {395,17},
                                 {remote,
                                     {395,23},
                                     {atom,{395,17},erlang},
                                     {atom,{395,24},raise}},
                                 [{var,{395,30},'E'},
                                  {var,{395,33},'R'},
                                  {var,{395,36},'S'}]}]}],
                       [{debug_line,397,242},
                        {call,
                            {397,17},
                            {remote,
                                {397,17},
                                {atom,{397,17},erlang},
                                {atom,{397,17},put}},
                            [{atom,{397,21},after_oops},
                             {block,0,
                                 [{call,
                                      {397,33},
                                      {atom,{397,33},foo},
                                      [{var,{397,37},'Y'}]}]}]}]}],
                  [{clause,
                       {400,13},
                       [{var,{400,13},'V'}],
                       [],
                       [{debug_line,400,243},
                        {tuple,
                            {400,18},
                            [{atom,{400,19},value},{var,{400,25},'V'}]}]}],
                  [{clause,
                       {402,13},
                       [{tuple,
                            {402,13},
                            [{var,{402,13},'C'},
                             {var,{402,15},'D'},
                             {var,{402,15},'_'}]}],
                       [],
                       [{debug_line,402,244},
                        {tuple,
                            {402,20},
                            [{var,{402,21},'C'},{var,{402,23},'D'}]}]}],
                  []}},
          {debug_line,404,245},
          {tuple,
              {404,5},
              [{var,{404,6},'Try'},
               {call,
                   {404,10},
                   {remote,
                       {404,10},
                       {atom,{404,10},erlang},
                       {atom,{404,10},erase}},
                   [{atom,{404,16},after_oops}]}]}]}]}.
{function,
 {406,1},
 eclectic,1,
 [{clause,
   {406,1},
   [{var,{406,1},'_'}],
   [[{call,
      {406,1},
      {remote,{406,1},{atom,{406,1},fake},{atom,{406,1},is_beam_bif_info}},
      []}]],
   [{debug_line,406,246},{atom,{406,1},ignore}]},
  {clause,
   {406,1},
   [{var,{406,10},'Conf'}],
   [[{call,
      {406,21},
      {remote,{406,21},{atom,{406,21},erlang},{atom,{406,21},is_list}},
      [{var,{406,29},'Conf'}]}]],
   [{debug_line,407,247},
    {match,
     {407,5},
     {var,{407,5},'V'},
     {tuple,
      {407,9},
      [{call,
        {407,10},
        {remote,{407,10},{atom,{407,10},erlang},{atom,{407,10},make_ref}},
        []},
       {float,{407,21},3.1415926535},
       {cons,{407,34},{nil,{407,35}},{tuple,{407,38},[]}}]}},
    {debug_line,408,248},
    {match,
     {408,5},
     {tuple,
      {408,5},
      [{tuple,
        {408,6},
        [{atom,{408,7},value},
         {tuple,{408,13},[{atom,{408,14},value},{var,{408,20},'V'}]},
         {var,{408,23},'V'}]},
       {var,{408,26},'V'}]},
     {call,
      {409,2},
      {atom,{409,2},eclectic_1},
      [{block,0,
        [{debug_line,409,249},
         {tuple,
          {409,13},
          [{atom,{409,14},foo},
           {tuple,
            {409,18},
            [{atom,{409,19},value},
             {tuple,{409,25},[{atom,{409,26},value},{var,{409,32},'V'}]}]}]}]},
       {atom,{409,38},undefined},
       {block,0,
        [{tuple,{409,49},[{atom,{409,50},value},{var,{409,56},'V'}]}]}]}},
    {debug_line,410,250},
    {match,
     {410,5},
     {tuple,
      {410,5},
      [{tuple,
        {410,6},
        [{atom,{410,7},'EXIT'},
         {tuple,
          {410,14},
          [{var,{410,15},'V'},
           {cons,
            {410,17},
            {tuple,
             {410,18},
             [{atom,{410,20},trycatch_SUITE},
              {atom,{410,27},foo},
              {integer,{410,31},1},
              {var,{410,33},'_'}]},
            {var,{410,36},'_'}}]}]},
       {var,{410,41},'V'}]},
     {call,
      {411,2},
      {atom,{411,2},eclectic_1},
      [{block,0,
        [{debug_line,411,251},
         {tuple,
          {411,13},
          [{atom,{411,14},catch_foo},
           {tuple,{411,24},[{atom,{411,25},error},{var,{411,31},'V'}]}]}]},
       {atom,{411,36},undefined},
       {block,0,
        [{tuple,{411,47},[{atom,{411,48},value},{var,{411,54},'V'}]}]}]}},
    {debug_line,412,252},
    {match,
     {412,5},
     {tuple,
      {412,5},
      [{tuple,
        {412,6},
        [{atom,{412,7},error},
         {tuple,{412,13},[{atom,{412,14},exit},{var,{412,19},'V'}]},
         {tuple,{412,22},[{atom,{412,23},'EXIT'},{var,{412,30},'V'}]}]},
       {var,{412,34},'V'}]},
     {call,
      {413,2},
      {atom,{413,2},eclectic_1},
      [{block,0,
        [{debug_line,413,253},
         {tuple,
          {413,13},
          [{atom,{413,14},foo},
           {tuple,
            {413,18},
            [{atom,{413,19},error},
             {tuple,{413,25},[{atom,{413,26},exit},{var,{413,31},'V'}]}]}]}]},
       {atom,{413,37},error},
       {block,0,
        [{tuple,{413,44},[{atom,{413,45},value},{var,{413,51},'V'}]}]}]}},
    {debug_line,414,254},
    {match,
     {414,5},
     {tuple,
      {414,5},
      [{tuple,
        {414,6},
        [{atom,{414,7},value},
         {tuple,{414,13},[{atom,{414,14},value},{var,{414,20},'V'}]},
         {var,{414,23},'V'}]},
       {tuple,
        {415,5},
        [{atom,{415,6},'EXIT'},
         {tuple,
          {415,13},
          [{atom,{415,14},badarith},
           {cons,
            {415,23},
            {tuple,
             {415,24},
             [{atom,{415,25},erlang},
              {atom,{415,32},'+'},
              {cons,
               {415,36},
               {integer,{415,37},0},
               {cons,{415,39},{atom,{415,39},a},{nil,{415,40}}}},
              {var,{415,42},'_'}]},
            {cons,
             {415,45},
             {tuple,
              {415,45},
              [{atom,{415,47},trycatch_SUITE},
               {atom,{415,54},my_add},
               {integer,{415,61},2},
               {var,{415,63},'_'}]},
             {var,{415,66},'_'}}}]}]}]},
     {call,
      {416,2},
      {atom,{416,2},eclectic_1},
      [{block,0,
        [{debug_line,416,255},
         {tuple,
          {416,13},
          [{atom,{416,14},foo},
           {tuple,
            {416,18},
            [{atom,{416,19},value},
             {tuple,{416,25},[{atom,{416,26},value},{var,{416,32},'V'}]}]}]}]},
       {atom,{416,38},undefined},
       {block,0,
        [{tuple,
          {416,49},
          [{atom,{416,50},add},
           {tuple,{416,56},[{integer,{416,57},0},{atom,{416,59},a}]}]}]}]}},
    {debug_line,417,256},
    {match,
     {417,5},
     {tuple,
      {417,5},
      [{tuple,{417,6},[{atom,{417,7},'EXIT'},{var,{417,14},'V'}]},
       {var,{417,17},'V'}]},
     {call,
      {418,2},
      {atom,{418,2},eclectic_1},
      [{block,0,
        [{debug_line,418,257},
         {tuple,
          {418,13},
          [{atom,{418,14},catch_foo},
           {tuple,{418,24},[{atom,{418,25},exit},{var,{418,30},'V'}]}]}]},
       {atom,{418,35},undefined},
       {block,0,
        [{tuple,{418,46},[{atom,{418,47},throw},{var,{418,53},'V'}]}]}]}},
    {debug_line,419,258},
    {match,
     {419,5},
     {tuple,
      {419,5},
      [{tuple,
        {419,6},
        [{atom,{419,7},error},
         {tuple,
          {419,13},
          [{atom,{419,14},'div'},
           {tuple,{419,20},[{integer,{419,21},1},{integer,{419,23},0}]}]},
         {tuple,
          {419,27},
          [{atom,{419,28},'EXIT'},
           {tuple,
            {419,35},
            [{atom,{419,36},badarith},
             {cons,
              {419,45},
              {tuple,
               {419,46},
               [{atom,{419,47},erlang},
                {atom,{419,54},'div'},
                {cons,
                 {419,60},
                 {integer,{419,61},1},
                 {cons,{419,63},{integer,{419,63},0},{nil,{419,64}}}},
                {var,{419,66},'_'}]},
              {cons,
               {419,69},
               {tuple,
                {419,69},
                [{atom,{419,71},trycatch_SUITE},
                 {atom,{419,78},my_div},
                 {integer,{419,85},2},
                 {var,{419,87},'_'}]},
               {var,{419,90},'_'}}}]}]}]},
       {tuple,{420,5},[{atom,{420,6},'EXIT'},{var,{420,13},'V'}]}]},
     {call,
      {421,2},
      {atom,{421,2},eclectic_1},
      [{block,0,
        [{debug_line,421,259},
         {tuple,
          {421,13},
          [{atom,{421,14},foo},
           {tuple,
            {421,18},
            [{atom,{421,19},error},
             {tuple,
              {421,25},
              [{atom,{421,26},'div'},
               {tuple,
                {421,32},
                [{integer,{421,33},1},{integer,{421,35},0}]}]}]}]}]},
       {atom,{421,42},error},
       {block,0,
        [{tuple,{421,49},[{atom,{421,50},exit},{var,{421,55},'V'}]}]}]}},
    {debug_line,422,260},
    {match,
     {422,5},
     {tuple,
      {422,5},
      [{tuple,
        {422,6},
        [{tuple,{422,7},[{atom,{422,8},error},{var,{422,14},'V'}]},
         {tuple,
          {422,17},
          [{atom,{422,18},'EXIT'},
           {tuple,
            {422,25},
            [{var,{422,26},'V'},
             {cons,
              {422,28},
              {tuple,
               {422,29},
               [{atom,{422,31},trycatch_SUITE},
                {atom,{422,38},foo},
                {integer,{422,42},1},
                {var,{422,44},'_'}]},
              {var,{422,47},'_'}}]}]}]},
       {tuple,{423,5},[{atom,{423,6},'EXIT'},{var,{423,13},'V'}]}]},
     {call,
      {424,2},
      {atom,{424,2},eclectic_1},
      [{block,0,
        [{debug_line,424,261},
         {tuple,
          {424,13},
          [{atom,{424,14},catch_foo},
           {tuple,
            {424,24},
            [{atom,{424,25},throw},
             {tuple,{424,31},[{atom,{424,32},error},{var,{424,38},'V'}]}]}]}]},
       {atom,{424,44},undefined},
       {block,0,
        [{tuple,{424,55},[{atom,{424,56},exit},{var,{424,61},'V'}]}]}]}},
    {debug_line,426,262},
    {match,
     {426,5},
     {tuple,
      {426,5},
      [{tuple,
        {426,6},
        [{atom,{426,7},value},
         {tuple,
          {426,13},
          [{atom,{426,14},value},
           {tuple,{426,20},[{atom,{426,21},value},{var,{426,27},'V'}]},
           {var,{426,30},'V'}]}]},
       {var,{426,34},'V'}]},
     {call,
      {427,2},
      {atom,{427,2},eclectic_2},
      [{block,0,
        [{debug_line,427,263},
         {tuple,
          {427,13},
          [{atom,{427,14},value},
           {tuple,{427,20},[{atom,{427,21},value},{var,{427,27},'V'}]}]}]},
       {atom,{427,32},undefined},
       {block,0,
        [{tuple,{427,43},[{atom,{427,44},value},{var,{427,50},'V'}]}]}]}},
    {debug_line,428,264},
    {match,
     {428,5},
     {tuple,
      {428,5},
      [{tuple,
        {428,6},
        [{atom,{428,7},value},
         {tuple,
          {428,13},
          [{atom,{428,14},throw},
           {tuple,{428,20},[{atom,{428,21},value},{var,{428,27},'V'}]},
           {var,{428,30},'V'}]}]},
       {var,{428,34},'V'}]},
     {call,
      {429,2},
      {atom,{429,2},eclectic_2},
      [{block,0,
        [{debug_line,429,265},
         {tuple,
          {429,13},
          [{atom,{429,14},throw},
           {tuple,{429,20},[{atom,{429,21},value},{var,{429,27},'V'}]}]}]},
       {atom,{429,32},throw},
       {block,0,
        [{tuple,{429,39},[{atom,{429,40},value},{var,{429,46},'V'}]}]}]}},
    {debug_line,430,266},
    {match,
     {430,5},
     {tuple,
      {430,5},
      [{tuple,
        {430,6},
        [{atom,{430,7},caught},
         {tuple,{430,14},[{atom,{430,15},'EXIT'},{var,{430,22},'V'}]}]},
       {atom,{430,26},undefined}]},
     {call,
      {431,2},
      {atom,{431,2},eclectic_2},
      [{block,0,
        [{debug_line,431,267},
         {tuple,
          {431,13},
          [{atom,{431,14},value},
           {tuple,{431,20},[{atom,{431,21},value},{var,{431,27},'V'}]}]}]},
       {atom,{431,32},undefined},
       {block,0,
        [{tuple,{431,43},[{atom,{431,44},exit},{var,{431,49},'V'}]}]}]}},
    {debug_line,432,268},
    {match,
     {432,5},
     {tuple,
      {432,5},
      [{tuple,
        {432,6},
        [{atom,{432,7},caught},
         {tuple,
          {432,14},
          [{atom,{432,15},'EXIT'},
           {tuple,
            {432,22},
            [{var,{432,23},'V'},
             {cons,
              {432,25},
              {tuple,
               {432,26},
               [{atom,{432,28},trycatch_SUITE},
                {atom,{432,35},foo},
                {integer,{432,39},1},
                {var,{432,41},'_'}]},
              {var,{432,44},'_'}}]}]}]},
       {atom,{432,50},undefined}]},
     {call,
      {433,2},
      {atom,{433,2},eclectic_2},
      [{block,0,
        [{debug_line,433,269},
         {tuple,
          {433,13},
          [{atom,{433,14},error},
           {tuple,{433,20},[{atom,{433,21},value},{var,{433,27},'V'}]}]}]},
       {atom,{433,32},throw},
       {block,0,
        [{tuple,{433,39},[{atom,{433,40},error},{var,{433,46},'V'}]}]}]}},
    {debug_line,434,270},
    {match,
     {434,5},
     {tuple,
      {434,5},
      [{tuple,
        {434,6},
        [{atom,{434,7},caught},
         {tuple,
          {434,14},
          [{atom,{434,15},'EXIT'},
           {tuple,
            {434,22},
            [{atom,{434,23},badarg},
             {cons,
              {434,30},
              {tuple,
               {434,31},
               [{atom,{434,32},erlang},
                {atom,{434,39},abs},
                {cons,{434,43},{var,{434,44},'V'},{nil,{434,45}}},
                {var,{434,47},'_'}]},
              {var,{434,50},'_'}}]}]}]},
       {var,{434,56},'V'}]},
     {call,
      {435,2},
      {atom,{435,2},eclectic_2},
      [{block,0,
        [{debug_line,435,271},
         {tuple,
          {435,13},
          [{atom,{435,14},value},
           {tuple,{435,20},[{atom,{435,21},abs},{var,{435,27},'V'}]}]}]},
       {atom,{435,32},undefined},
       {block,0,
        [{tuple,{435,43},[{atom,{435,44},value},{var,{435,50},'V'}]}]}]}},
    {debug_line,436,272},
    {match,
     {436,5},
     {tuple,
      {436,5},
      [{tuple,
        {436,6},
        [{atom,{436,7},caught},
         {tuple,
          {436,14},
          [{atom,{436,15},'EXIT'},
           {tuple,
            {436,22},
            [{atom,{436,23},badarith},
             {cons,
              {436,32},
              {tuple,
               {436,33},
               [{atom,{436,34},erlang},
                {atom,{436,41},'+'},
                {cons,
                 {436,45},
                 {integer,{436,46},0},
                 {cons,{436,48},{atom,{436,48},a},{nil,{436,49}}}},
                {var,{436,51},'_'}]},
              {cons,
               {436,54},
               {tuple,
                {436,54},
                [{atom,{436,56},trycatch_SUITE},
                 {atom,{436,63},my_add},
                 {integer,{436,70},2},
                 {var,{436,72},'_'}]},
               {var,{436,75},'_'}}}]}]}]},
       {var,{436,81},'V'}]},
     {call,
      {437,2},
      {atom,{437,2},eclectic_2},
      [{block,0,
        [{debug_line,437,273},
         {tuple,
          {437,13},
          [{atom,{437,14},exit},
           {tuple,
            {437,19},
            [{atom,{437,20},add},
             {tuple,{437,26},[{integer,{437,27},0},{atom,{437,29},a}]}]}]}]},
       {atom,{437,35},exit},
       {block,0,
        [{tuple,{437,41},[{atom,{437,42},value},{var,{437,48},'V'}]}]}]}},
    {debug_line,438,274},
    {match,
     {438,5},
     {tuple,
      {438,5},
      [{tuple,
        {438,6},
        [{atom,{438,7},caught},
         {tuple,{438,14},[{atom,{438,15},'EXIT'},{var,{438,22},'V'}]}]},
       {atom,{438,26},undefined}]},
     {call,
      {439,2},
      {atom,{439,2},eclectic_2},
      [{block,0,
        [{debug_line,439,275},
         {tuple,
          {439,13},
          [{atom,{439,14},value},
           {tuple,{439,20},[{atom,{439,21},error},{var,{439,27},'V'}]}]}]},
       {atom,{439,32},undefined},
       {block,0,
        [{tuple,{439,43},[{atom,{439,44},exit},{var,{439,49},'V'}]}]}]}},
    {debug_line,440,276},
    {match,
     {440,5},
     {tuple,
      {440,5},
      [{tuple,
        {440,6},
        [{atom,{440,7},caught},
         {tuple,
          {440,14},
          [{atom,{440,15},'EXIT'},
           {tuple,
            {440,22},
            [{var,{440,23},'V'},
             {cons,
              {440,25},
              {tuple,
               {440,26},
               [{atom,{440,28},trycatch_SUITE},
                {atom,{440,35},foo},
                {integer,{440,39},1},
                {var,{440,41},'_'}]},
              {var,{440,44},'_'}}]}]}]},
       {atom,{440,50},undefined}]},
     {call,
      {441,2},
      {atom,{441,2},eclectic_2},
      [{block,0,
        [{debug_line,441,277},
         {tuple,
          {441,13},
          [{atom,{441,14},throw},
           {tuple,
            {441,20},
            [{atom,{441,21},'div'},
             {tuple,
              {441,27},
              [{integer,{441,28},1},{integer,{441,30},0}]}]}]}]},
       {atom,{441,36},throw},
       {block,0,
        [{tuple,{441,43},[{atom,{441,44},error},{var,{441,50},'V'}]}]}]}},
    {debug_line,442,278},
    {atom,{442,5},ok}]}]}.
{function,
 {444,1},
 eclectic_1,3,
 [{clause,
   {444,1},
   [{var,{444,1},'_'},{var,{444,1},'_'},{var,{444,1},'_'}],
   [[{call,
      {444,1},
      {remote,{444,1},{atom,{444,1},fake},{atom,{444,1},is_beam_bif_info}},
      []}]],
   [{debug_line,444,279},{atom,{444,1},ignore}]},
  {clause,
   {444,1},
   [{var,{444,12},'X'},{var,{444,15},'C'},{var,{444,18},'Y'}],
   [],
   [{debug_line,445,280},
    {call,
     {445,5},
     {remote,{445,5},{atom,{445,5},erlang},{atom,{445,5},erase}},
     [{atom,{445,11},eclectic}]},
    {debug_line,446,281},
    {match,
     {446,5},
     {var,{446,5},'Done'},
     {call,
      {446,12},
      {remote,{446,12},{atom,{446,12},erlang},{atom,{446,12},make_ref}},
      []}},
    {debug_line,447,282},
    {match,
     {447,5},
     {var,{447,5},'Try'},
     {'try',
      {448,9},
      [{debug_line,448,283},
       {'case',
        {448,13},
        {var,{448,18},'X'},
        [{clause,
          {449,3},
          [{tuple,{449,3},[{atom,{449,4},catch_foo},{var,{449,14},'V'}]}],
          [],
          [{debug_line,449,284},
           {'catch',
            {449,20},
            {tuple,
             {449,26},
             [{var,{449,27},'Done'},
              {call,{449,32},{atom,{449,32},foo},[{var,{449,36},'V'}]}]}}]},
         {clause,
          {450,3},
          [{tuple,{450,3},[{atom,{450,4},foo},{var,{450,8},'V'}]}],
          [],
          [{debug_line,450,285},
           {tuple,
            {450,14},
            [{var,{450,15},'Done'},
             {call,{450,20},{atom,{450,20},foo},[{var,{450,24},'V'}]}]}]}]}],
      [{clause,
        {452,13},
        [{tuple,{452,13},[{var,{452,14},'Done'},{var,{452,19},'D'}]}],
        [],
        [{debug_line,452,286},
         {tuple,
          {452,25},
          [{atom,{452,26},value},
           {var,{452,32},'D'},
           {'catch',
            {452,34},
            {call,{452,40},{atom,{452,40},foo},[{var,{452,44},'D'}]}}]}]},
       {clause,
        {453,6},
        [{match,
          {453,6},
          {tuple,{453,6},[{atom,{453,7},'EXIT'},{var,{453,14},'_'}]},
          {var,{453,17},'Exit'}}],
        [],
        [{debug_line,453,287},{var,{453,25},'Exit'}]},
       {clause,
        {454,6},
        [{var,{454,6},'D'}],
        [],
        [{debug_line,454,288},
         {tuple,
          {454,11},
          [{var,{454,12},'D'},
           {'catch',
            {454,14},
            {call,{454,20},{atom,{454,20},foo},[{var,{454,24},'D'}]}}]}]}],
      [{clause,
        {456,13},
        [{tuple,
          {456,13},
          [{var,{456,13},'C'},{var,{456,15},'D'},{var,{456,15},'_'}]}],
        [],
        [{debug_line,456,289},
         {tuple,
          {456,20},
          [{var,{456,21},'C'},
           {var,{456,23},'D'},
           {'catch',
            {456,25},
            {call,{456,31},{atom,{456,31},foo},[{var,{456,35},'D'}]}}]}]}],
      [{debug_line,458,290},
       {call,
        {458,13},
        {remote,{458,13},{atom,{458,13},erlang},{atom,{458,13},put}},
        [{atom,{458,17},eclectic},
         {block,0,
          [{'catch',
            {458,27},
            {call,{458,33},{atom,{458,33},foo},[{var,{458,37},'Y'}]}}]}]}]}},
    {debug_line,460,291},
    {tuple,
     {460,5},
     [{var,{460,6},'Try'},
      {call,
       {460,10},
       {remote,{460,10},{atom,{460,10},erlang},{atom,{460,10},erase}},
       [{atom,{460,16},eclectic}]}]}]}]}.
{function,
 {462,1},
 eclectic_2,3,
 [{clause,
   {462,1},
   [{var,{462,1},'_'},{var,{462,1},'_'},{var,{462,1},'_'}],
   [[{call,
      {462,1},
      {remote,{462,1},{atom,{462,1},fake},{atom,{462,1},is_beam_bif_info}},
      []}]],
   [{debug_line,462,292},{atom,{462,1},ignore}]},
  {clause,
   {462,1},
   [{var,{462,12},'X'},{var,{462,15},'C'},{var,{462,18},'Y'}],
   [],
   [{debug_line,463,293},
    {match,
     {463,5},
     {var,{463,5},'Done'},
     {call,
      {463,12},
      {remote,{463,12},{atom,{463,12},erlang},{atom,{463,12},make_ref}},
      []}},
    {debug_line,464,294},
    {call,
     {464,5},
     {remote,{464,5},{atom,{464,5},erlang},{atom,{464,5},erase}},
     [{atom,{464,11},eclectic}]},
    {debug_line,465,295},
    {match,
     {465,5},
     {var,{465,5},'Catch'},
     {'case',
      {466,2},
      {'catch',
       {467,13},
       {tuple,
        {468,3},
        [{var,{468,4},'Done'},
         {'try',
          {469,4},
          [{debug_line,469,296},
           {call,{469,8},{atom,{469,8},foo},[{var,{469,12},'X'}]}],
          [{clause,
            {470,8},
            [{var,{470,8},'V'}],
            [],
            [{debug_line,470,297},
             {tuple,
              {470,13},
              [{atom,{470,14},value},
               {var,{470,20},'V'},
               {call,{470,22},{atom,{470,22},foo},[{var,{470,26},'V'}]}]}]}],
          [{clause,
            {472,8},
            [{tuple,
              {472,8},
              [{var,{472,8},'C'},{var,{472,10},'D'},{var,{472,10},'_'}]}],
            [],
            [{debug_line,472,298},
             {tuple,
              {472,15},
              [{var,{472,16},'C'},
               {var,{472,18},'D'},
               {call,{472,20},{atom,{472,20},foo},[{var,{472,24},'D'}]}]}]}],
          [{debug_line,474,299},
           {call,
            {474,8},
            {remote,{474,8},{atom,{474,8},erlang},{atom,{474,8},put}},
            [{atom,{474,12},eclectic},
             {block,0,
              [{call,
                {474,22},
                {atom,{474,22},foo},
                [{var,{474,26},'Y'}]}]}]}]}]}},
      [{clause,
        {476,3},
        [{tuple,{476,3},[{var,{476,4},'Done'},{var,{476,9},'Z'}]}],
        [],
        [{debug_line,476,300},
         {tuple,{476,15},[{atom,{476,16},value},{var,{476,22},'Z'}]}]},
       {clause,
        {477,3},
        [{var,{477,3},'Z'}],
        [],
        [{debug_line,477,301},
         {tuple,{477,8},[{atom,{477,9},caught},{var,{477,16},'Z'}]}]}]}},
    {debug_line,479,302},
    {tuple,
     {479,5},
     [{var,{479,6},'Catch'},
      {call,
       {479,12},
       {remote,{479,12},{atom,{479,12},erlang},{atom,{479,12},erase}},
       [{atom,{479,18},eclectic}]}]}]}]}.
{function,
 {483,1},
 rethrow,1,
 [{clause,
   {483,1},
   [{var,{483,1},'_'}],
   [[{call,
      {483,1},
      {remote,{483,1},{atom,{483,1},fake},{atom,{483,1},is_beam_bif_info}},
      []}]],
   [{debug_line,483,303},{atom,{483,1},ignore}]},
  {clause,
   {483,1},
   [{var,{483,9},'Conf'}],
   [[{call,
      {483,20},
      {remote,{483,20},{atom,{483,20},erlang},{atom,{483,20},is_list}},
      [{var,{483,28},'Conf'}]}]],
   [{debug_line,484,304},
    {match,
     {484,5},
     {var,{484,5},'V'},
     {tuple,
      {484,9},
      [{atom,{484,10},a},
       {cons,
        {484,12},
        {atom,{484,13},b},
        {cons,
         {484,15},
         {tuple,
          {484,15},
          [{atom,{484,16},c},
           {call,
            {484,18},
            {remote,{484,18},{atom,{484,18},erlang},{atom,{484,18},self}},
            []}]},
         {cons,{484,26},{atom,{484,26},make_ref},{nil,{484,34}}}}}]}},
    {debug_line,485,305},
    {match,
     {485,5},
     {tuple,{485,5},[{atom,{485,6},value2},{atom,{485,13},value1}]},
     {call,
      {486,2},
      {atom,{486,2},rethrow_1},
      [{block,0,
        [{debug_line,486,306},
         {tuple,{486,12},[{atom,{486,13},value},{var,{486,19},'V'}]}]},
       {var,{486,23},'V'}]}},
    {debug_line,487,307},
    {match,
     {487,5},
     {tuple,
      {487,5},
      [{atom,{487,6},caught2},
       {tuple,{487,14},[{atom,{487,15},error},{var,{487,21},'V'}]}]},
     {call,
      {488,2},
      {atom,{488,2},rethrow_2},
      [{block,0,
        [{debug_line,488,308},
         {tuple,{488,12},[{atom,{488,13},error},{var,{488,19},'V'}]}]},
       {atom,{488,23},undefined}]}},
    {debug_line,489,309},
    {match,
     {489,5},
     {tuple,
      {489,5},
      [{atom,{489,6},caught2},
       {tuple,{489,14},[{atom,{489,15},exit},{var,{489,20},'V'}]}]},
     {call,
      {490,2},
      {atom,{490,2},rethrow_1},
      [{block,0,
        [{debug_line,490,310},
         {tuple,{490,12},[{atom,{490,13},exit},{var,{490,18},'V'}]}]},
       {atom,{490,22},error}]}},
    {debug_line,491,311},
    {match,
     {491,5},
     {tuple,
      {491,5},
      [{atom,{491,6},caught2},
       {tuple,{491,14},[{atom,{491,15},throw},{var,{491,21},'V'}]}]},
     {call,
      {492,2},
      {atom,{492,2},rethrow_1},
      [{block,0,
        [{debug_line,492,312},
         {tuple,{492,12},[{atom,{492,13},throw},{var,{492,19},'V'}]}]},
       {atom,{492,23},undefined}]}},
    {debug_line,493,313},
    {match,
     {493,5},
     {tuple,
      {493,5},
      [{atom,{493,6},caught2},
       {tuple,{493,14},[{atom,{493,15},throw},{var,{493,21},'V'}]}]},
     {call,
      {494,2},
      {atom,{494,2},rethrow_2},
      [{block,0,
        [{debug_line,494,314},
         {tuple,{494,12},[{atom,{494,13},throw},{var,{494,19},'V'}]}]},
       {atom,{494,23},undefined}]}},
    {debug_line,495,315},
    {match,
     {495,5},
     {tuple,
      {495,5},
      [{atom,{495,6},caught2},
       {tuple,{495,14},[{atom,{495,15},error},{atom,{495,21},badarith}]}]},
     {call,
      {496,2},
      {atom,{496,2},rethrow_1},
      [{block,0,
        [{debug_line,496,316},
         {tuple,
          {496,12},
          [{atom,{496,13},add},
           {tuple,{496,19},[{integer,{496,20},0},{atom,{496,22},a}]}]}]},
       {atom,{496,27},throw}]}},
    {debug_line,497,317},
    {match,
     {497,5},
     {tuple,
      {497,5},
      [{atom,{497,6},caught2},
       {tuple,
        {497,14},
        [{atom,{497,15},error},{atom,{497,21},function_clause}]}]},
     {call,
      {498,2},
      {atom,{498,2},rethrow_2},
      [{atom,{498,12},function_clause},{atom,{498,29},undefined}]}},
    {debug_line,499,318},
    {match,
     {499,5},
     {tuple,
      {499,5},
      [{atom,{499,6},caught2},
       {tuple,
        {499,14},
        [{atom,{499,15},error},
         {tuple,{499,21},[{atom,{499,22},try_clause},{var,{499,33},'V'}]}]}]},
     {call,
      {500,2},
      {atom,{500,2},rethrow_1},
      [{block,0,
        [{debug_line,500,319},
         {tuple,{500,12},[{atom,{500,13},value},{var,{500,19},'V'}]}]},
       {atom,{500,23},exit}]}},
    {debug_line,501,320},
    {match,
     {501,5},
     {tuple,
      {501,5},
      [{atom,{501,6},value2},
       {tuple,{501,13},[{atom,{501,14},caught1},{var,{501,22},'V'}]}]},
     {call,
      {502,2},
      {atom,{502,2},rethrow_1},
      [{block,0,
        [{debug_line,502,321},
         {tuple,{502,12},[{atom,{502,13},error},{var,{502,19},'V'}]}]},
       {atom,{502,23},error}]}},
    {debug_line,503,322},
    {match,
     {503,5},
     {tuple,
      {503,5},
      [{atom,{503,6},value2},
       {tuple,{503,13},[{atom,{503,14},caught1},{var,{503,22},'V'}]}]},
     {call,
      {504,2},
      {atom,{504,2},rethrow_1},
      [{block,0,
        [{debug_line,504,323},
         {tuple,{504,12},[{atom,{504,13},exit},{var,{504,18},'V'}]}]},
       {atom,{504,22},exit}]}},
    {debug_line,505,324},
    {match,
     {505,5},
     {tuple,{505,5},[{atom,{505,6},value2},{atom,{505,13},caught1}]},
     {call,
      {506,2},
      {atom,{506,2},rethrow_2},
      [{block,0,
        [{debug_line,506,325},
         {tuple,{506,12},[{atom,{506,13},throw},{var,{506,19},'V'}]}]},
       {var,{506,23},'V'}]}},
    {debug_line,507,326},
    {atom,{507,5},ok}]}]}.
{function,
    {509,1},
    rethrow_1,2,
    [{clause,
         {509,1},
         [{var,{509,1},'_'},{var,{509,1},'_'}],
         [[{call,
               {509,1},
               {remote,
                   {509,1},
                   {atom,{509,1},fake},
                   {atom,{509,1},is_beam_bif_info}},
               []}]],
         [{debug_line,509,327},{atom,{509,1},ignore}]},
     {clause,
         {509,1},
         [{var,{509,11},'X'},{var,{509,14},'C1'}],
         [],
         [{debug_line,510,328},
          {'try',
              {510,5},
              [{'try',
                   {510,9},
                   [{call,{510,13},{atom,{510,13},foo},[{var,{510,17},'X'}]}],
                   [{clause,
                        {511,13},
                        [{var,{511,13},'C1'}],
                        [],
                        [{debug_line,511,329},{atom,{511,19},value1}]}],
                   [{clause,
                        {513,13},
                        [{tuple,
                             {513,13},
                             [{var,{513,13},'C1'},
                              {var,{513,16},'D1'},
                              {var,{513,16},'_'}]}],
                        [],
                        [{debug_line,513,330},
                         {tuple,
                             {513,22},
                             [{atom,{513,23},caught1},{var,{513,31},'D1'}]}]}],
                   []}],
              [{clause,
                   {515,9},
                   [{var,{515,9},'V2'}],
                   [],
                   [{debug_line,515,331},
                    {tuple,
                        {515,15},
                        [{atom,{515,16},value2},{var,{515,23},'V2'}]}]}],
              [{clause,
                   {517,9},
                   [{tuple,
                        {517,9},
                        [{var,{517,9},'C2'},
                         {var,{517,12},'D2'},
                         {var,{517,12},'_'}]}],
                   [],
                   [{debug_line,517,332},
                    {tuple,
                        {517,18},
                        [{atom,{517,19},caught2},
                         {tuple,
                             {517,27},
                             [{var,{517,28},'C2'},{var,{517,31},'D2'}]}]}]}],
              []}]}]}.
{function,
    {520,1},
    rethrow_2,2,
    [{clause,
         {520,1},
         [{var,{520,1},'_'},{var,{520,1},'_'}],
         [[{call,
               {520,1},
               {remote,
                   {520,1},
                   {atom,{520,1},fake},
                   {atom,{520,1},is_beam_bif_info}},
               []}]],
         [{debug_line,520,333},{atom,{520,1},ignore}]},
     {clause,
         {520,1},
         [{var,{520,11},'X'},{var,{520,14},'C1'}],
         [],
         [{debug_line,521,334},
          {'try',
              {521,5},
              [{'try',
                   {521,9},
                   [{call,{521,13},{atom,{521,13},foo},[{var,{521,17},'X'}]}],
                   [{clause,
                        {522,13},
                        [{var,{522,13},'C1'}],
                        [],
                        [{debug_line,522,335},{atom,{522,19},value1}]}],
                   [{clause,
                        {524,13},
                        [{tuple,
                             {524,13},
                             [{atom,{524,13},throw},
                              {var,{524,13},'C1'},
                              {var,{524,13},'_'}]}],
                        [],
                        [{debug_line,524,336},{atom,{524,19},caught1}]}],
                   []}],
              [{clause,
                   {526,9},
                   [{var,{526,9},'V2'}],
                   [],
                   [{debug_line,526,337},
                    {tuple,
                        {526,15},
                        [{atom,{526,16},value2},{var,{526,23},'V2'}]}]}],
              [{clause,
                   {528,9},
                   [{tuple,
                        {528,9},
                        [{var,{528,9},'C2'},
                         {var,{528,12},'D2'},
                         {var,{528,12},'_'}]}],
                   [],
                   [{debug_line,528,338},
                    {tuple,
                        {528,18},
                        [{atom,{528,19},caught2},
                         {tuple,
                             {528,27},
                             [{var,{528,28},'C2'},{var,{528,31},'D2'}]}]}]}],
              []}]}]}.
{function,
    {533,1},
    nested_of,1,
    [{clause,
         {533,1},
         [{var,{533,1},'_'}],
         [[{call,
               {533,1},
               {remote,
                   {533,1},
                   {atom,{533,1},fake},
                   {atom,{533,1},is_beam_bif_info}},
               []}]],
         [{debug_line,533,339},{atom,{533,1},ignore}]},
     {clause,
         {533,1},
         [{var,{533,11},'Conf'}],
         [[{call,
               {533,22},
               {remote,
                   {533,22},
                   {atom,{533,22},erlang},
                   {atom,{533,22},is_list}},
               [{var,{533,30},'Conf'}]}]],
         [{debug_line,534,340},
          {match,
              {534,5},
              {var,{534,5},'V'},
              {tuple,
                  {534,9},
                  [{cons,
                       {534,10},
                       {call,
                           {534,11},
                           {remote,
                               {534,11},
                               {atom,{534,11},erlang},
                               {atom,{534,11},self}},
                           []},
                       {call,
                           {534,18},
                           {remote,
                               {534,18},
                               {atom,{534,18},erlang},
                               {atom,{534,18},make_ref}},
                           []}},
                   {float,{534,30},1.4142136}]}},
          {debug_line,535,341},
          {match,
              {535,5},
              {tuple,
                  {535,5},
                  [{tuple,
                       {535,6},
                       [{atom,{535,7},value},
                        {tuple,
                            {535,13},
                            [{atom,{535,14},value1},
                             {tuple,
                                 {535,21},
                                 [{var,{535,22},'V'},{atom,{535,24},x2}]}]}]},
                   {tuple,{536,6},[{var,{536,7},'V'},{atom,{536,9},x3}]},
                   {tuple,{537,6},[{var,{537,7},'V'},{atom,{537,9},x4}]},
                   {atom,{538,6},finalized}]},
              {call,
                  {539,2},
                  {atom,{539,2},nested_of_1},
                  [{block,0,
                       [{debug_line,539,342},
                        {tuple,
                            {539,14},
                            [{tuple,
                                 {539,15},
                                 [{atom,{539,16},value},
                                  {tuple,
                                      {539,22},
                                      [{var,{539,23},'V'},
                                       {atom,{539,25},x1}]}]},
                             {atom,{539,30},void},
                             {tuple,
                                 {539,35},
                                 [{var,{539,36},'V'},{atom,{539,38},x1}]}]}]},
                   {block,0,
                       [{debug_line,540,343},
                        {tuple,
                            {540,7},
                            [{atom,{540,8},value},
                             {tuple,
                                 {540,14},
                                 [{var,{540,15},'V'},{atom,{540,17},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {540,23},
                            [{atom,{540,24},value},
                             {tuple,
                                 {540,30},
                                 [{var,{540,31},'V'},{atom,{540,33},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {540,39},
                            [{atom,{540,40},value},
                             {tuple,
                                 {540,46},
                                 [{var,{540,47},'V'},
                                  {atom,{540,49},x4}]}]}]}]}},
          {debug_line,541,344},
          {match,
              {541,5},
              {tuple,
                  {541,5},
                  [{tuple,
                       {541,6},
                       [{atom,{541,7},caught},
                        {tuple,
                            {541,14},
                            [{atom,{541,15},throw},
                             {tuple,
                                 {541,21},
                                 [{var,{541,22},'V'},{atom,{541,24},x2}]}]}]},
                   {tuple,{542,6},[{var,{542,7},'V'},{atom,{542,9},x3}]},
                   {tuple,{543,6},[{var,{543,7},'V'},{atom,{543,9},x4}]},
                   {atom,{544,6},finalized}]},
              {call,
                  {545,2},
                  {atom,{545,2},nested_of_1},
                  [{block,0,
                       [{debug_line,545,345},
                        {tuple,
                            {545,14},
                            [{tuple,
                                 {545,15},
                                 [{atom,{545,16},value},
                                  {tuple,
                                      {545,22},
                                      [{var,{545,23},'V'},
                                       {atom,{545,25},x1}]}]},
                             {atom,{545,30},void},
                             {tuple,
                                 {545,35},
                                 [{var,{545,36},'V'},{atom,{545,38},x1}]}]}]},
                   {block,0,
                       [{debug_line,546,346},
                        {tuple,
                            {546,7},
                            [{atom,{546,8},throw},
                             {tuple,
                                 {546,14},
                                 [{var,{546,15},'V'},{atom,{546,17},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {546,23},
                            [{atom,{546,24},value},
                             {tuple,
                                 {546,30},
                                 [{var,{546,31},'V'},{atom,{546,33},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {546,39},
                            [{atom,{546,40},value},
                             {tuple,
                                 {546,46},
                                 [{var,{546,47},'V'},
                                  {atom,{546,49},x4}]}]}]}]}},
          {debug_line,547,347},
          {match,
              {547,5},
              {tuple,
                  {547,5},
                  [{tuple,
                       {547,6},
                       [{atom,{547,7},caught},
                        {tuple,
                            {547,14},
                            [{atom,{547,15},error},
                             {atom,{547,21},badarith}]}]},
                   {atom,{548,6},undefined},
                   {tuple,{549,6},[{var,{549,7},'V'},{atom,{549,9},x4}]},
                   {atom,{550,6},finalized}]},
              {call,
                  {551,2},
                  {atom,{551,2},nested_of_1},
                  [{block,0,
                       [{debug_line,551,348},
                        {tuple,
                            {551,14},
                            [{tuple,
                                 {551,15},
                                 [{atom,{551,16},value},
                                  {tuple,
                                      {551,22},
                                      [{var,{551,23},'V'},
                                       {atom,{551,25},x1}]}]},
                             {atom,{551,30},void},
                             {tuple,
                                 {551,35},
                                 [{var,{551,36},'V'},{atom,{551,38},x1}]}]}]},
                   {block,0,
                       [{debug_line,552,349},
                        {tuple,
                            {552,7},
                            [{atom,{552,8},throw},
                             {tuple,
                                 {552,14},
                                 [{var,{552,15},'V'},{atom,{552,17},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {552,23},
                            [{atom,{552,24},'div'},
                             {tuple,
                                 {552,30},
                                 [{integer,{552,31},1},
                                  {integer,{552,33},0}]}]}]},
                   {block,0,
                       [{tuple,
                            {552,38},
                            [{atom,{552,39},value},
                             {tuple,
                                 {552,45},
                                 [{var,{552,46},'V'},
                                  {atom,{552,48},x4}]}]}]}]}},
          {debug_line,553,350},
          {match,
              {553,5},
              {tuple,
                  {553,5},
                  [{tuple,
                       {553,6},
                       [{atom,{553,7},caught},
                        {tuple,
                            {553,14},
                            [{atom,{553,15},error},
                             {atom,{553,21},badarith}]}]},
                   {atom,{554,6},undefined},
                   {atom,{555,6},undefined},
                   {atom,{556,6},finalized}]},
              {call,
                  {557,2},
                  {atom,{557,2},nested_of_1},
                  [{block,0,
                       [{debug_line,557,351},
                        {tuple,
                            {557,14},
                            [{tuple,
                                 {557,15},
                                 [{atom,{557,16},value},
                                  {tuple,
                                      {557,22},
                                      [{var,{557,23},'V'},
                                       {atom,{557,25},x1}]}]},
                             {atom,{557,30},void},
                             {tuple,
                                 {557,35},
                                 [{var,{557,36},'V'},{atom,{557,38},x1}]}]}]},
                   {block,0,
                       [{debug_line,558,352},
                        {tuple,
                            {558,7},
                            [{atom,{558,8},throw},
                             {tuple,
                                 {558,14},
                                 [{var,{558,15},'V'},{atom,{558,17},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {558,23},
                            [{atom,{558,24},'div'},
                             {tuple,
                                 {558,30},
                                 [{integer,{558,31},1},
                                  {integer,{558,33},0}]}]}]},
                   {block,0,
                       [{tuple,
                            {558,38},
                            [{atom,{558,39},add},
                             {tuple,
                                 {558,45},
                                 [{integer,{558,46},0},
                                  {atom,{558,48},b}]}]}]}]}},
          {debug_line,560,353},
          {match,
              {560,5},
              {tuple,
                  {560,5},
                  [{tuple,
                       {560,6},
                       [{atom,{560,7},caught},
                        {tuple,
                            {560,14},
                            [{atom,{560,15},error},
                             {tuple,
                                 {560,21},
                                 [{atom,{560,22},try_clause},
                                  {tuple,
                                      {560,33},
                                      [{var,{560,34},'V'},
                                       {atom,{560,36},x1}]}]}]}]},
                   {tuple,{561,6},[{var,{561,7},'V'},{atom,{561,9},x3}]},
                   {tuple,{562,6},[{var,{562,7},'V'},{atom,{562,9},x4}]},
                   {atom,{563,6},finalized}]},
              {call,
                  {564,2},
                  {atom,{564,2},nested_of_1},
                  [{block,0,
                       [{debug_line,564,354},
                        {tuple,
                            {564,14},
                            [{tuple,
                                 {564,15},
                                 [{atom,{564,16},value},
                                  {tuple,
                                      {564,22},
                                      [{var,{564,23},'V'},
                                       {atom,{564,25},x1}]}]},
                             {atom,{564,30},void},
                             {atom,{564,35},try_clause}]}]},
                   {atom,{565,7},void},
                   {block,0,
                       [{debug_line,565,355},
                        {tuple,
                            {565,13},
                            [{atom,{565,14},value},
                             {tuple,
                                 {565,20},
                                 [{var,{565,21},'V'},{atom,{565,23},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {565,29},
                            [{atom,{565,30},value},
                             {tuple,
                                 {565,36},
                                 [{var,{565,37},'V'},
                                  {atom,{565,39},x4}]}]}]}]}},
          {debug_line,566,356},
          {match,
              {566,5},
              {tuple,
                  {566,5},
                  [{tuple,
                       {566,6},
                       [{atom,{566,7},caught},
                        {tuple,
                            {566,14},
                            [{atom,{566,15},exit},
                             {tuple,
                                 {566,20},
                                 [{var,{566,21},'V'},{atom,{566,23},x3}]}]}]},
                   {atom,{567,6},undefined},
                   {tuple,{568,6},[{var,{568,7},'V'},{atom,{568,9},x4}]},
                   {atom,{569,6},finalized}]},
              {call,
                  {570,2},
                  {atom,{570,2},nested_of_1},
                  [{block,0,
                       [{debug_line,570,357},
                        {tuple,
                            {570,14},
                            [{tuple,
                                 {570,15},
                                 [{atom,{570,16},value},
                                  {tuple,
                                      {570,22},
                                      [{var,{570,23},'V'},
                                       {atom,{570,25},x1}]}]},
                             {atom,{570,30},void},
                             {atom,{570,35},try_clause}]}]},
                   {atom,{571,7},void},
                   {block,0,
                       [{debug_line,571,358},
                        {tuple,
                            {571,13},
                            [{atom,{571,14},exit},
                             {tuple,
                                 {571,19},
                                 [{var,{571,20},'V'},{atom,{571,22},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {571,28},
                            [{atom,{571,29},value},
                             {tuple,
                                 {571,35},
                                 [{var,{571,36},'V'},
                                  {atom,{571,38},x4}]}]}]}]}},
          {debug_line,572,359},
          {match,
              {572,5},
              {tuple,
                  {572,5},
                  [{tuple,
                       {572,6},
                       [{atom,{572,7},caught},
                        {tuple,
                            {572,14},
                            [{atom,{572,15},throw},
                             {tuple,
                                 {572,21},
                                 [{var,{572,22},'V'},{atom,{572,24},x4}]}]}]},
                   {atom,{573,6},undefined},
                   {atom,{574,6},undefined},
                   {atom,{575,6},finalized}]},
              {call,
                  {576,2},
                  {atom,{576,2},nested_of_1},
                  [{block,0,
                       [{debug_line,576,360},
                        {tuple,
                            {576,14},
                            [{tuple,
                                 {576,15},
                                 [{atom,{576,16},value},
                                  {tuple,
                                      {576,22},
                                      [{var,{576,23},'V'},
                                       {atom,{576,25},x1}]}]},
                             {atom,{576,30},void},
                             {atom,{576,35},try_clause}]}]},
                   {atom,{577,7},void},
                   {block,0,
                       [{debug_line,577,361},
                        {tuple,
                            {577,13},
                            [{atom,{577,14},exit},
                             {tuple,
                                 {577,19},
                                 [{var,{577,20},'V'},{atom,{577,22},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {577,28},
                            [{atom,{577,29},throw},
                             {tuple,
                                 {577,35},
                                 [{var,{577,36},'V'},
                                  {atom,{577,38},x4}]}]}]}]}},
          {debug_line,579,362},
          {match,
              {579,5},
              {tuple,
                  {579,5},
                  [{tuple,
                       {579,6},
                       [{atom,{579,7},value},
                        {tuple,
                            {579,13},
                            [{atom,{579,14},caught1},
                             {tuple,
                                 {579,22},
                                 [{var,{579,23},'V'},{atom,{579,25},x2}]}]}]},
                   {tuple,{580,6},[{var,{580,7},'V'},{atom,{580,9},x3}]},
                   {tuple,{581,6},[{var,{581,7},'V'},{atom,{581,9},x4}]},
                   {atom,{582,6},finalized}]},
              {call,
                  {583,2},
                  {atom,{583,2},nested_of_1},
                  [{block,0,
                       [{debug_line,583,363},
                        {tuple,
                            {583,14},
                            [{tuple,
                                 {583,15},
                                 [{atom,{583,16},error},
                                  {tuple,
                                      {583,22},
                                      [{var,{583,23},'V'},
                                       {atom,{583,25},x1}]}]},
                             {atom,{583,30},error},
                             {tuple,
                                 {583,36},
                                 [{var,{583,37},'V'},{atom,{583,39},x1}]}]}]},
                   {block,0,
                       [{debug_line,584,364},
                        {tuple,
                            {584,7},
                            [{atom,{584,8},value},
                             {tuple,
                                 {584,14},
                                 [{var,{584,15},'V'},{atom,{584,17},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {584,23},
                            [{atom,{584,24},value},
                             {tuple,
                                 {584,30},
                                 [{var,{584,31},'V'},{atom,{584,33},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {584,39},
                            [{atom,{584,40},value},
                             {tuple,
                                 {584,46},
                                 [{var,{584,47},'V'},
                                  {atom,{584,49},x4}]}]}]}]}},
          {debug_line,585,365},
          {match,
              {585,5},
              {tuple,
                  {585,5},
                  [{tuple,
                       {585,6},
                       [{atom,{585,7},caught},
                        {tuple,
                            {585,14},
                            [{atom,{585,15},error},
                             {atom,{585,21},badarith}]}]},
                   {tuple,{586,6},[{var,{586,7},'V'},{atom,{586,9},x3}]},
                   {tuple,{587,6},[{var,{587,7},'V'},{atom,{587,9},x4}]},
                   {atom,{588,6},finalized}]},
              {call,
                  {589,2},
                  {atom,{589,2},nested_of_1},
                  [{block,0,
                       [{debug_line,589,366},
                        {tuple,
                            {589,14},
                            [{tuple,
                                 {589,15},
                                 [{atom,{589,16},error},
                                  {tuple,
                                      {589,22},
                                      [{var,{589,23},'V'},
                                       {atom,{589,25},x1}]}]},
                             {atom,{589,30},error},
                             {tuple,
                                 {589,36},
                                 [{var,{589,37},'V'},{atom,{589,39},x1}]}]}]},
                   {block,0,
                       [{debug_line,590,367},
                        {tuple,
                            {590,7},
                            [{atom,{590,8},add},
                             {tuple,
                                 {590,14},
                                 [{integer,{590,15},1},{atom,{590,17},c}]}]}]},
                   {block,0,
                       [{tuple,
                            {590,22},
                            [{atom,{590,23},value},
                             {tuple,
                                 {590,29},
                                 [{var,{590,30},'V'},{atom,{590,32},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {590,38},
                            [{atom,{590,39},value},
                             {tuple,
                                 {590,45},
                                 [{var,{590,46},'V'},
                                  {atom,{590,48},x4}]}]}]}]}},
          {debug_line,591,368},
          {match,
              {591,5},
              {tuple,
                  {591,5},
                  [{tuple,
                       {591,6},
                       [{atom,{591,7},caught},
                        {tuple,
                            {591,14},
                            [{atom,{591,15},error},
                             {atom,{591,21},badarith}]}]},
                   {atom,{592,6},undefined},
                   {tuple,{593,6},[{var,{593,7},'V'},{atom,{593,9},x4}]},
                   {atom,{594,6},finalized}]},
              {call,
                  {595,2},
                  {atom,{595,2},nested_of_1},
                  [{block,0,
                       [{debug_line,595,369},
                        {tuple,
                            {595,14},
                            [{tuple,
                                 {595,15},
                                 [{atom,{595,16},error},
                                  {tuple,
                                      {595,22},
                                      [{var,{595,23},'V'},
                                       {atom,{595,25},x1}]}]},
                             {atom,{595,30},error},
                             {tuple,
                                 {595,36},
                                 [{var,{595,37},'V'},{atom,{595,39},x1}]}]}]},
                   {block,0,
                       [{debug_line,596,370},
                        {tuple,
                            {596,7},
                            [{atom,{596,8},add},
                             {tuple,
                                 {596,14},
                                 [{integer,{596,15},1},{atom,{596,17},c}]}]}]},
                   {block,0,
                       [{tuple,
                            {596,22},
                            [{atom,{596,23},'div'},
                             {tuple,
                                 {596,29},
                                 [{integer,{596,30},17},
                                  {integer,{596,33},0}]}]}]},
                   {block,0,
                       [{tuple,
                            {596,38},
                            [{atom,{596,39},value},
                             {tuple,
                                 {596,45},
                                 [{var,{596,46},'V'},
                                  {atom,{596,48},x4}]}]}]}]}},
          {debug_line,597,371},
          {match,
              {597,5},
              {tuple,
                  {597,5},
                  [{tuple,
                       {597,6},
                       [{atom,{597,7},caught},
                        {tuple,
                            {597,14},
                            [{atom,{597,15},error},{atom,{597,21},badarg}]}]},
                   {atom,{598,6},undefined},
                   {atom,{599,6},undefined},
                   {atom,{600,6},finalized}]},
              {call,
                  {601,2},
                  {atom,{601,2},nested_of_1},
                  [{block,0,
                       [{debug_line,601,372},
                        {tuple,
                            {601,14},
                            [{tuple,
                                 {601,15},
                                 [{atom,{601,16},error},
                                  {tuple,
                                      {601,22},
                                      [{var,{601,23},'V'},
                                       {atom,{601,25},x1}]}]},
                             {atom,{601,30},error},
                             {tuple,
                                 {601,36},
                                 [{var,{601,37},'V'},{atom,{601,39},x1}]}]}]},
                   {block,0,
                       [{debug_line,602,373},
                        {tuple,
                            {602,7},
                            [{atom,{602,8},add},
                             {tuple,
                                 {602,14},
                                 [{integer,{602,15},1},{atom,{602,17},c}]}]}]},
                   {block,0,
                       [{tuple,
                            {602,22},
                            [{atom,{602,23},'div'},
                             {tuple,
                                 {602,29},
                                 [{integer,{602,30},17},
                                  {integer,{602,33},0}]}]}]},
                   {block,0,
                       [{tuple,
                            {602,38},
                            [{atom,{602,39},abs},{var,{602,45},'V'}]}]}]}},
          {debug_line,604,374},
          {match,
              {604,5},
              {tuple,
                  {604,5},
                  [{tuple,
                       {604,6},
                       [{atom,{604,7},caught},
                        {tuple,
                            {604,14},
                            [{atom,{604,15},error},
                             {atom,{604,21},badarith}]}]},
                   {tuple,{605,6},[{var,{605,7},'V'},{atom,{605,9},x3}]},
                   {tuple,{606,6},[{var,{606,7},'V'},{atom,{606,9},x4}]},
                   {atom,{607,6},finalized}]},
              {call,
                  {608,2},
                  {atom,{608,2},nested_of_1},
                  [{block,0,
                       [{debug_line,608,375},
                        {tuple,
                            {608,14},
                            [{tuple,
                                 {608,15},
                                 [{atom,{608,16},add},
                                  {tuple,
                                      {608,22},
                                      [{integer,{608,23},2},
                                       {atom,{608,25},c}]}]},
                             {atom,{608,29},rethrow},
                             {atom,{608,37},void}]}]},
                   {atom,{609,7},void},
                   {block,0,
                       [{debug_line,609,376},
                        {tuple,
                            {609,13},
                            [{atom,{609,14},value},
                             {tuple,
                                 {609,20},
                                 [{var,{609,21},'V'},{atom,{609,23},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {609,29},
                            [{atom,{609,30},value},
                             {tuple,
                                 {609,36},
                                 [{var,{609,37},'V'},
                                  {atom,{609,39},x4}]}]}]}]}},
          {debug_line,610,377},
          {match,
              {610,5},
              {tuple,
                  {610,5},
                  [{tuple,
                       {610,6},
                       [{atom,{610,7},caught},
                        {tuple,
                            {610,14},
                            [{atom,{610,15},error},{atom,{610,21},badarg}]}]},
                   {atom,{611,6},undefined},
                   {tuple,{612,6},[{var,{612,7},'V'},{atom,{612,9},x4}]},
                   {atom,{613,6},finalized}]},
              {call,
                  {614,2},
                  {atom,{614,2},nested_of_1},
                  [{block,0,
                       [{debug_line,614,378},
                        {tuple,
                            {614,14},
                            [{tuple,
                                 {614,15},
                                 [{atom,{614,16},add},
                                  {tuple,
                                      {614,22},
                                      [{integer,{614,23},2},
                                       {atom,{614,25},c}]}]},
                             {atom,{614,29},rethrow},
                             {atom,{614,37},void}]}]},
                   {atom,{615,7},void},
                   {block,0,
                       [{debug_line,615,379},
                        {tuple,
                            {615,13},
                            [{atom,{615,14},abs},{var,{615,20},'V'}]}]},
                   {block,0,
                       [{tuple,
                            {615,24},
                            [{atom,{615,25},value},
                             {tuple,
                                 {615,31},
                                 [{var,{615,32},'V'},
                                  {atom,{615,34},x4}]}]}]}]}},
          {debug_line,616,380},
          {match,
              {616,5},
              {tuple,
                  {616,5},
                  [{tuple,
                       {616,6},
                       [{atom,{616,7},caught},
                        {tuple,
                            {616,14},
                            [{atom,{616,15},error},
                             {atom,{616,21},function_clause}]}]},
                   {atom,{617,6},undefined},
                   {atom,{618,6},undefined},
                   {atom,{619,6},finalized}]},
              {call,
                  {620,2},
                  {atom,{620,2},nested_of_1},
                  [{block,0,
                       [{debug_line,620,381},
                        {tuple,
                            {620,14},
                            [{tuple,
                                 {620,15},
                                 [{atom,{620,16},add},
                                  {tuple,
                                      {620,22},
                                      [{integer,{620,23},2},
                                       {atom,{620,25},c}]}]},
                             {atom,{620,29},rethrow},
                             {atom,{620,37},void}]}]},
                   {atom,{621,7},void},
                   {block,0,
                       [{debug_line,621,382},
                        {tuple,
                            {621,13},
                            [{atom,{621,14},abs},{var,{621,20},'V'}]}]},
                   {atom,{621,24},function_clause}]}},
          {debug_line,622,383},
          {atom,{622,5},ok}]}]}.
{function,
 {624,1},
 nested_of_1,4,
 [{clause,
   {624,1},
   [{var,{624,1},'_'},{var,{624,1},'_'},{var,{624,1},'_'},{var,{624,1},'_'}],
   [[{call,
      {624,1},
      {remote,{624,1},{atom,{624,1},fake},{atom,{624,1},is_beam_bif_info}},
      []}]],
   [{debug_line,624,384},{atom,{624,1},ignore}]},
  {clause,
   {624,1},
   [{tuple,
     {624,13},
     [{var,{624,14},'X1'},{var,{624,17},'C1'},{var,{624,20},'V1'}]},
    {var,{625,6},'X2'},
    {var,{625,10},'X3'},
    {var,{625,14},'X4'}],
   [],
   [{debug_line,626,385},
    {call,
     {626,5},
     {remote,{626,5},{atom,{626,5},erlang},{atom,{626,5},erase}},
     [{atom,{626,11},nested3}]},
    {debug_line,627,386},
    {call,
     {627,5},
     {remote,{627,5},{atom,{627,5},erlang},{atom,{627,5},erase}},
     [{atom,{627,11},nested4}]},
    {debug_line,628,387},
    {call,
     {628,5},
     {remote,{628,5},{atom,{628,5},erlang},{atom,{628,5},erase}},
     [{atom,{628,11},nested}]},
    {debug_line,629,388},
    {match,
     {629,5},
     {var,{629,5},'Self'},
     {call,
      {629,12},
      {remote,{629,12},{atom,{629,12},erlang},{atom,{629,12},self}},
      []}},
    {debug_line,630,389},
    {match,
     {630,5},
     {var,{630,5},'Try'},
     {'try',
      {631,2},
      [{debug_line,632,390},
       {'try',
        {632,13},
        [{call,
          {632,17},
          {remote,{632,17},{atom,{632,17},erlang},{atom,{632,17},self}},
          []}],
        [{clause,
          {634,17},
          [{var,{634,17},'Self'}],
          [],
          [{debug_line,635,391},
           {'try',
            {635,21},
            [{debug_line,636,392},
             {call,{636,25},{atom,{636,25},foo},[{var,{636,29},'X1'}]}],
            [{clause,
              {638,18},
              [{var,{638,18},'V1'}],
              [],
              [{debug_line,638,393},
               {tuple,
                {638,24},
                [{atom,{638,25},value1},
                 {call,
                  {638,32},
                  {atom,{638,32},foo},
                  [{var,{638,36},'X2'}]}]}]}],
            [{clause,
              {640,25},
              [{tuple,
                {640,25},
                [{var,{640,25},'C1'},{var,{640,28},'V1'},{var,{640,28},'_'}]}],
              [],
              [{debug_line,640,394},
               {tuple,
                {640,34},
                [{atom,{640,35},caught1},
                 {call,
                  {640,43},
                  {atom,{640,43},foo},
                  [{var,{640,47},'X2'}]}]}]}],
            [{debug_line,642,395},
             {call,
              {642,25},
              {remote,{642,25},{atom,{642,25},erlang},{atom,{642,25},put}},
              [{atom,{642,29},nested3},
               {block,0,
                [{call,
                  {642,38},
                  {atom,{642,38},foo},
                  [{var,{642,42},'X3'}]}]}]}]}]}],
        [],
        [{debug_line,645,396},
         {call,
          {645,17},
          {remote,{645,17},{atom,{645,17},erlang},{atom,{645,17},put}},
          [{atom,{645,21},nested4},
           {block,0,
            [{call,{645,30},{atom,{645,30},foo},[{var,{645,34},'X4'}]}]}]}]}],
      [{clause,
        {648,13},
        [{var,{648,13},'V'}],
        [],
        [{debug_line,648,397},
         {tuple,{648,18},[{atom,{648,19},value},{var,{648,25},'V'}]}]}],
      [{clause,
        {650,13},
        [{tuple,
          {650,13},
          [{var,{650,13},'C'},{var,{650,15},'D'},{var,{650,15},'_'}]}],
        [],
        [{debug_line,650,398},
         {tuple,
          {650,20},
          [{atom,{650,21},caught},
           {tuple,{650,28},[{var,{650,29},'C'},{var,{650,31},'D'}]}]}]}],
      [{debug_line,652,399},
       {call,
        {652,13},
        {remote,{652,13},{atom,{652,13},erlang},{atom,{652,13},put}},
        [{atom,{652,17},nested},{atom,{652,25},finalized}]}]}},
    {debug_line,654,400},
    {tuple,
     {654,5},
     [{var,{654,6},'Try'},
      {call,
       {654,10},
       {remote,{654,10},{atom,{654,10},erlang},{atom,{654,10},erase}},
       [{atom,{654,16},nested3}]},
      {call,
       {654,25},
       {remote,{654,25},{atom,{654,25},erlang},{atom,{654,25},erase}},
       [{atom,{654,31},nested4}]},
      {call,
       {654,40},
       {remote,{654,40},{atom,{654,40},erlang},{atom,{654,40},erase}},
       [{atom,{654,46},nested}]}]}]}]}.
{function,
    {658,1},
    nested_catch,1,
    [{clause,
         {658,1},
         [{var,{658,1},'_'}],
         [[{call,
               {658,1},
               {remote,
                   {658,1},
                   {atom,{658,1},fake},
                   {atom,{658,1},is_beam_bif_info}},
               []}]],
         [{debug_line,658,401},{atom,{658,1},ignore}]},
     {clause,
         {658,1},
         [{var,{658,14},'Conf'}],
         [[{call,
               {658,25},
               {remote,
                   {658,25},
                   {atom,{658,25},erlang},
                   {atom,{658,25},is_list}},
               [{var,{658,33},'Conf'}]}]],
         [{debug_line,659,402},
          {match,
              {659,5},
              {var,{659,5},'V'},
              {tuple,
                  {659,9},
                  [{cons,
                       {659,10},
                       {call,
                           {659,11},
                           {remote,
                               {659,11},
                               {atom,{659,11},erlang},
                               {atom,{659,11},make_ref}},
                           []},
                       {cons,
                           {659,22},
                           {float,{659,22},1.4142136},
                           {cons,
                               {659,32},
                               {call,
                                   {659,32},
                                   {remote,
                                       {659,32},
                                       {atom,{659,32},erlang},
                                       {atom,{659,32},self}},
                                   []},
                               {nil,{659,38}}}}}]}},
          {debug_line,660,403},
          {match,
              {660,5},
              {tuple,
                  {660,5},
                  [{tuple,
                       {660,6},
                       [{atom,{660,7},value},
                        {tuple,
                            {660,13},
                            [{atom,{660,14},value1},
                             {tuple,
                                 {660,21},
                                 [{var,{660,22},'V'},{atom,{660,24},x2}]}]}]},
                   {tuple,{661,6},[{var,{661,7},'V'},{atom,{661,9},x3}]},
                   {tuple,{662,6},[{var,{662,7},'V'},{atom,{662,9},x4}]},
                   {atom,{663,6},finalized}]},
              {call,
                  {664,2},
                  {atom,{664,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,664,404},
                        {tuple,
                            {664,17},
                            [{tuple,
                                 {664,18},
                                 [{atom,{664,19},value},
                                  {tuple,
                                      {664,25},
                                      [{var,{664,26},'V'},
                                       {atom,{664,28},x1}]}]},
                             {atom,{664,33},void},
                             {tuple,
                                 {664,38},
                                 [{var,{664,39},'V'},{atom,{664,41},x1}]}]}]},
                   {block,0,
                       [{debug_line,665,405},
                        {tuple,
                            {665,10},
                            [{atom,{665,11},value},
                             {tuple,
                                 {665,17},
                                 [{var,{665,18},'V'},{atom,{665,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {665,26},
                            [{atom,{665,27},value},
                             {tuple,
                                 {665,33},
                                 [{var,{665,34},'V'},{atom,{665,36},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {665,42},
                            [{atom,{665,43},value},
                             {tuple,
                                 {665,49},
                                 [{var,{665,50},'V'},
                                  {atom,{665,52},x4}]}]}]}]}},
          {debug_line,666,406},
          {match,
              {666,5},
              {tuple,
                  {666,5},
                  [{tuple,
                       {666,6},
                       [{atom,{666,7},caught},
                        {tuple,
                            {666,14},
                            [{atom,{666,15},throw},
                             {tuple,
                                 {666,21},
                                 [{var,{666,22},'V'},{atom,{666,24},x2}]}]}]},
                   {tuple,{667,6},[{var,{667,7},'V'},{atom,{667,9},x3}]},
                   {tuple,{668,6},[{var,{668,7},'V'},{atom,{668,9},x4}]},
                   {atom,{669,6},finalized}]},
              {call,
                  {670,2},
                  {atom,{670,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,670,407},
                        {tuple,
                            {670,17},
                            [{tuple,
                                 {670,18},
                                 [{atom,{670,19},value},
                                  {tuple,
                                      {670,25},
                                      [{var,{670,26},'V'},
                                       {atom,{670,28},x1}]}]},
                             {atom,{670,33},void},
                             {tuple,
                                 {670,38},
                                 [{var,{670,39},'V'},{atom,{670,41},x1}]}]}]},
                   {block,0,
                       [{debug_line,671,408},
                        {tuple,
                            {671,10},
                            [{atom,{671,11},throw},
                             {tuple,
                                 {671,17},
                                 [{var,{671,18},'V'},{atom,{671,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {671,26},
                            [{atom,{671,27},value},
                             {tuple,
                                 {671,33},
                                 [{var,{671,34},'V'},{atom,{671,36},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {671,42},
                            [{atom,{671,43},value},
                             {tuple,
                                 {671,49},
                                 [{var,{671,50},'V'},
                                  {atom,{671,52},x4}]}]}]}]}},
          {debug_line,672,409},
          {match,
              {672,5},
              {tuple,
                  {672,5},
                  [{tuple,
                       {672,6},
                       [{atom,{672,7},caught},
                        {tuple,
                            {672,14},
                            [{atom,{672,15},error},
                             {atom,{672,21},badarith}]}]},
                   {atom,{673,6},undefined},
                   {tuple,{674,6},[{var,{674,7},'V'},{atom,{674,9},x4}]},
                   {atom,{675,6},finalized}]},
              {call,
                  {676,2},
                  {atom,{676,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,676,410},
                        {tuple,
                            {676,17},
                            [{tuple,
                                 {676,18},
                                 [{atom,{676,19},value},
                                  {tuple,
                                      {676,25},
                                      [{var,{676,26},'V'},
                                       {atom,{676,28},x1}]}]},
                             {atom,{676,33},void},
                             {tuple,
                                 {676,38},
                                 [{var,{676,39},'V'},{atom,{676,41},x1}]}]}]},
                   {block,0,
                       [{debug_line,677,411},
                        {tuple,
                            {677,10},
                            [{atom,{677,11},throw},
                             {tuple,
                                 {677,17},
                                 [{var,{677,18},'V'},{atom,{677,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {677,26},
                            [{atom,{677,27},'div'},
                             {tuple,
                                 {677,33},
                                 [{integer,{677,34},1},
                                  {integer,{677,36},0}]}]}]},
                   {block,0,
                       [{tuple,
                            {677,41},
                            [{atom,{677,42},value},
                             {tuple,
                                 {677,48},
                                 [{var,{677,49},'V'},
                                  {atom,{677,51},x4}]}]}]}]}},
          {debug_line,678,412},
          {match,
              {678,5},
              {tuple,
                  {678,5},
                  [{tuple,
                       {678,6},
                       [{atom,{678,7},caught},
                        {tuple,
                            {678,14},
                            [{atom,{678,15},error},
                             {atom,{678,21},badarith}]}]},
                   {atom,{679,6},undefined},
                   {atom,{680,6},undefined},
                   {atom,{681,6},finalized}]},
              {call,
                  {682,2},
                  {atom,{682,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,682,413},
                        {tuple,
                            {682,17},
                            [{tuple,
                                 {682,18},
                                 [{atom,{682,19},value},
                                  {tuple,
                                      {682,25},
                                      [{var,{682,26},'V'},
                                       {atom,{682,28},x1}]}]},
                             {atom,{682,33},void},
                             {tuple,
                                 {682,38},
                                 [{var,{682,39},'V'},{atom,{682,41},x1}]}]}]},
                   {block,0,
                       [{debug_line,683,414},
                        {tuple,
                            {683,10},
                            [{atom,{683,11},throw},
                             {tuple,
                                 {683,17},
                                 [{var,{683,18},'V'},{atom,{683,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {683,26},
                            [{atom,{683,27},'div'},
                             {tuple,
                                 {683,33},
                                 [{integer,{683,34},1},
                                  {integer,{683,36},0}]}]}]},
                   {block,0,
                       [{tuple,
                            {683,41},
                            [{atom,{683,42},add},
                             {tuple,
                                 {683,48},
                                 [{integer,{683,49},0},
                                  {atom,{683,51},b}]}]}]}]}},
          {debug_line,685,415},
          {match,
              {685,5},
              {tuple,
                  {685,5},
                  [{tuple,
                       {685,6},
                       [{atom,{685,7},caught},
                        {tuple,
                            {685,14},
                            [{atom,{685,15},error},
                             {tuple,
                                 {685,21},
                                 [{atom,{685,22},try_clause},
                                  {tuple,
                                      {685,33},
                                      [{var,{685,34},'V'},
                                       {atom,{685,36},x1}]}]}]}]},
                   {tuple,{686,6},[{var,{686,7},'V'},{atom,{686,9},x3}]},
                   {tuple,{687,6},[{var,{687,7},'V'},{atom,{687,9},x4}]},
                   {atom,{688,6},finalized}]},
              {call,
                  {689,2},
                  {atom,{689,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,689,416},
                        {tuple,
                            {689,17},
                            [{tuple,
                                 {689,18},
                                 [{atom,{689,19},value},
                                  {tuple,
                                      {689,25},
                                      [{var,{689,26},'V'},
                                       {atom,{689,28},x1}]}]},
                             {atom,{689,33},void},
                             {atom,{689,38},try_clause}]}]},
                   {atom,{690,10},void},
                   {block,0,
                       [{debug_line,690,417},
                        {tuple,
                            {690,16},
                            [{atom,{690,17},value},
                             {tuple,
                                 {690,23},
                                 [{var,{690,24},'V'},{atom,{690,26},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {690,32},
                            [{atom,{690,33},value},
                             {tuple,
                                 {690,39},
                                 [{var,{690,40},'V'},
                                  {atom,{690,42},x4}]}]}]}]}},
          {debug_line,691,418},
          {match,
              {691,5},
              {tuple,
                  {691,5},
                  [{tuple,
                       {691,6},
                       [{atom,{691,7},caught},
                        {tuple,
                            {691,14},
                            [{atom,{691,15},exit},
                             {tuple,
                                 {691,20},
                                 [{var,{691,21},'V'},{atom,{691,23},x3}]}]}]},
                   {atom,{692,6},undefined},
                   {tuple,{693,6},[{var,{693,7},'V'},{atom,{693,9},x4}]},
                   {atom,{694,6},finalized}]},
              {call,
                  {695,2},
                  {atom,{695,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,695,419},
                        {tuple,
                            {695,17},
                            [{tuple,
                                 {695,18},
                                 [{atom,{695,19},value},
                                  {tuple,
                                      {695,25},
                                      [{var,{695,26},'V'},
                                       {atom,{695,28},x1}]}]},
                             {atom,{695,33},void},
                             {atom,{695,38},try_clause}]}]},
                   {atom,{696,10},void},
                   {block,0,
                       [{debug_line,696,420},
                        {tuple,
                            {696,16},
                            [{atom,{696,17},exit},
                             {tuple,
                                 {696,22},
                                 [{var,{696,23},'V'},{atom,{696,25},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {696,31},
                            [{atom,{696,32},value},
                             {tuple,
                                 {696,38},
                                 [{var,{696,39},'V'},
                                  {atom,{696,41},x4}]}]}]}]}},
          {debug_line,697,421},
          {match,
              {697,5},
              {tuple,
                  {697,5},
                  [{tuple,
                       {697,6},
                       [{atom,{697,7},caught},
                        {tuple,
                            {697,14},
                            [{atom,{697,15},throw},
                             {tuple,
                                 {697,21},
                                 [{var,{697,22},'V'},{atom,{697,24},x4}]}]}]},
                   {atom,{698,6},undefined},
                   {atom,{699,6},undefined},
                   {atom,{700,6},finalized}]},
              {call,
                  {701,2},
                  {atom,{701,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,701,422},
                        {tuple,
                            {701,17},
                            [{tuple,
                                 {701,18},
                                 [{atom,{701,19},value},
                                  {tuple,
                                      {701,25},
                                      [{var,{701,26},'V'},
                                       {atom,{701,28},x1}]}]},
                             {atom,{701,33},void},
                             {atom,{701,38},try_clause}]}]},
                   {atom,{702,10},void},
                   {block,0,
                       [{debug_line,702,423},
                        {tuple,
                            {702,16},
                            [{atom,{702,17},exit},
                             {tuple,
                                 {702,22},
                                 [{var,{702,23},'V'},{atom,{702,25},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {702,31},
                            [{atom,{702,32},throw},
                             {tuple,
                                 {702,38},
                                 [{var,{702,39},'V'},
                                  {atom,{702,41},x4}]}]}]}]}},
          {debug_line,704,424},
          {match,
              {704,5},
              {tuple,
                  {704,5},
                  [{tuple,
                       {704,6},
                       [{atom,{704,7},value},
                        {tuple,
                            {704,13},
                            [{atom,{704,14},caught1},
                             {tuple,
                                 {704,22},
                                 [{var,{704,23},'V'},{atom,{704,25},x2}]}]}]},
                   {tuple,{705,6},[{var,{705,7},'V'},{atom,{705,9},x3}]},
                   {tuple,{706,6},[{var,{706,7},'V'},{atom,{706,9},x4}]},
                   {atom,{707,6},finalized}]},
              {call,
                  {708,2},
                  {atom,{708,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,708,425},
                        {tuple,
                            {708,17},
                            [{tuple,
                                 {708,18},
                                 [{atom,{708,19},error},
                                  {tuple,
                                      {708,25},
                                      [{var,{708,26},'V'},
                                       {atom,{708,28},x1}]}]},
                             {atom,{708,33},error},
                             {tuple,
                                 {708,39},
                                 [{var,{708,40},'V'},{atom,{708,42},x1}]}]}]},
                   {block,0,
                       [{debug_line,709,426},
                        {tuple,
                            {709,10},
                            [{atom,{709,11},value},
                             {tuple,
                                 {709,17},
                                 [{var,{709,18},'V'},{atom,{709,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {709,26},
                            [{atom,{709,27},value},
                             {tuple,
                                 {709,33},
                                 [{var,{709,34},'V'},{atom,{709,36},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {709,42},
                            [{atom,{709,43},value},
                             {tuple,
                                 {709,49},
                                 [{var,{709,50},'V'},
                                  {atom,{709,52},x4}]}]}]}]}},
          {debug_line,710,427},
          {match,
              {710,5},
              {tuple,
                  {710,5},
                  [{tuple,
                       {710,6},
                       [{atom,{710,7},caught},
                        {tuple,
                            {710,14},
                            [{atom,{710,15},error},
                             {atom,{710,21},badarith}]}]},
                   {tuple,{711,6},[{var,{711,7},'V'},{atom,{711,9},x3}]},
                   {tuple,{712,6},[{var,{712,7},'V'},{atom,{712,9},x4}]},
                   {atom,{713,6},finalized}]},
              {call,
                  {714,2},
                  {atom,{714,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,714,428},
                        {tuple,
                            {714,17},
                            [{tuple,
                                 {714,18},
                                 [{atom,{714,19},error},
                                  {tuple,
                                      {714,25},
                                      [{var,{714,26},'V'},
                                       {atom,{714,28},x1}]}]},
                             {atom,{714,33},error},
                             {tuple,
                                 {714,39},
                                 [{var,{714,40},'V'},{atom,{714,42},x1}]}]}]},
                   {block,0,
                       [{debug_line,715,429},
                        {tuple,
                            {715,10},
                            [{atom,{715,11},add},
                             {tuple,
                                 {715,17},
                                 [{integer,{715,18},1},{atom,{715,20},c}]}]}]},
                   {block,0,
                       [{tuple,
                            {715,25},
                            [{atom,{715,26},value},
                             {tuple,
                                 {715,32},
                                 [{var,{715,33},'V'},{atom,{715,35},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {715,41},
                            [{atom,{715,42},value},
                             {tuple,
                                 {715,48},
                                 [{var,{715,49},'V'},
                                  {atom,{715,51},x4}]}]}]}]}},
          {debug_line,716,430},
          {match,
              {716,5},
              {tuple,
                  {716,5},
                  [{tuple,
                       {716,6},
                       [{atom,{716,7},caught},
                        {tuple,
                            {716,14},
                            [{atom,{716,15},error},
                             {atom,{716,21},badarith}]}]},
                   {atom,{717,6},undefined},
                   {tuple,{718,6},[{var,{718,7},'V'},{atom,{718,9},x4}]},
                   {atom,{719,6},finalized}]},
              {call,
                  {720,2},
                  {atom,{720,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,720,431},
                        {tuple,
                            {720,17},
                            [{tuple,
                                 {720,18},
                                 [{atom,{720,19},error},
                                  {tuple,
                                      {720,25},
                                      [{var,{720,26},'V'},
                                       {atom,{720,28},x1}]}]},
                             {atom,{720,33},error},
                             {tuple,
                                 {720,39},
                                 [{var,{720,40},'V'},{atom,{720,42},x1}]}]}]},
                   {block,0,
                       [{debug_line,721,432},
                        {tuple,
                            {721,10},
                            [{atom,{721,11},add},
                             {tuple,
                                 {721,17},
                                 [{integer,{721,18},1},{atom,{721,20},c}]}]}]},
                   {block,0,
                       [{tuple,
                            {721,25},
                            [{atom,{721,26},'div'},
                             {tuple,
                                 {721,32},
                                 [{integer,{721,33},17},
                                  {integer,{721,36},0}]}]}]},
                   {block,0,
                       [{tuple,
                            {721,41},
                            [{atom,{721,42},value},
                             {tuple,
                                 {721,48},
                                 [{var,{721,49},'V'},
                                  {atom,{721,51},x4}]}]}]}]}},
          {debug_line,722,433},
          {match,
              {722,5},
              {tuple,
                  {722,5},
                  [{tuple,
                       {722,6},
                       [{atom,{722,7},caught},
                        {tuple,
                            {722,14},
                            [{atom,{722,15},error},{atom,{722,21},badarg}]}]},
                   {atom,{723,6},undefined},
                   {atom,{724,6},undefined},
                   {atom,{725,6},finalized}]},
              {call,
                  {726,2},
                  {atom,{726,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,726,434},
                        {tuple,
                            {726,17},
                            [{tuple,
                                 {726,18},
                                 [{atom,{726,19},error},
                                  {tuple,
                                      {726,25},
                                      [{var,{726,26},'V'},
                                       {atom,{726,28},x1}]}]},
                             {atom,{726,33},error},
                             {tuple,
                                 {726,39},
                                 [{var,{726,40},'V'},{atom,{726,42},x1}]}]}]},
                   {block,0,
                       [{debug_line,727,435},
                        {tuple,
                            {727,10},
                            [{atom,{727,11},add},
                             {tuple,
                                 {727,17},
                                 [{integer,{727,18},1},{atom,{727,20},c}]}]}]},
                   {block,0,
                       [{tuple,
                            {727,25},
                            [{atom,{727,26},'div'},
                             {tuple,
                                 {727,32},
                                 [{integer,{727,33},17},
                                  {integer,{727,36},0}]}]}]},
                   {block,0,
                       [{tuple,
                            {727,41},
                            [{atom,{727,42},abs},{var,{727,48},'V'}]}]}]}},
          {debug_line,729,436},
          {match,
              {729,5},
              {tuple,
                  {729,5},
                  [{tuple,
                       {729,6},
                       [{atom,{729,7},caught},
                        {tuple,
                            {729,14},
                            [{atom,{729,15},error},
                             {atom,{729,21},badarith}]}]},
                   {tuple,{730,6},[{var,{730,7},'V'},{atom,{730,9},x3}]},
                   {tuple,{731,6},[{var,{731,7},'V'},{atom,{731,9},x4}]},
                   {atom,{732,6},finalized}]},
              {call,
                  {733,2},
                  {atom,{733,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,733,437},
                        {tuple,
                            {733,17},
                            [{tuple,
                                 {733,18},
                                 [{atom,{733,19},add},
                                  {tuple,
                                      {733,25},
                                      [{integer,{733,26},2},
                                       {atom,{733,28},c}]}]},
                             {atom,{733,32},rethrow},
                             {atom,{733,40},void}]}]},
                   {atom,{734,10},void},
                   {block,0,
                       [{debug_line,734,438},
                        {tuple,
                            {734,16},
                            [{atom,{734,17},value},
                             {tuple,
                                 {734,23},
                                 [{var,{734,24},'V'},{atom,{734,26},x3}]}]}]},
                   {block,0,
                       [{tuple,
                            {734,32},
                            [{atom,{734,33},value},
                             {tuple,
                                 {734,39},
                                 [{var,{734,40},'V'},
                                  {atom,{734,42},x4}]}]}]}]}},
          {debug_line,735,439},
          {match,
              {735,5},
              {tuple,
                  {735,5},
                  [{tuple,
                       {735,6},
                       [{atom,{735,7},caught},
                        {tuple,
                            {735,14},
                            [{atom,{735,15},error},{atom,{735,21},badarg}]}]},
                   {atom,{736,6},undefined},
                   {tuple,{737,6},[{var,{737,7},'V'},{atom,{737,9},x4}]},
                   {atom,{738,6},finalized}]},
              {call,
                  {739,2},
                  {atom,{739,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,739,440},
                        {tuple,
                            {739,17},
                            [{tuple,
                                 {739,18},
                                 [{atom,{739,19},add},
                                  {tuple,
                                      {739,25},
                                      [{integer,{739,26},2},
                                       {atom,{739,28},c}]}]},
                             {atom,{739,32},rethrow},
                             {atom,{739,40},void}]}]},
                   {atom,{740,10},void},
                   {block,0,
                       [{debug_line,740,441},
                        {tuple,
                            {740,16},
                            [{atom,{740,17},abs},{var,{740,23},'V'}]}]},
                   {block,0,
                       [{tuple,
                            {740,27},
                            [{atom,{740,28},value},
                             {tuple,
                                 {740,34},
                                 [{var,{740,35},'V'},
                                  {atom,{740,37},x4}]}]}]}]}},
          {debug_line,741,442},
          {match,
              {741,5},
              {tuple,
                  {741,5},
                  [{tuple,
                       {741,6},
                       [{atom,{741,7},caught},
                        {tuple,
                            {741,14},
                            [{atom,{741,15},error},
                             {atom,{741,21},function_clause}]}]},
                   {atom,{742,6},undefined},
                   {atom,{743,6},undefined},
                   {atom,{744,6},finalized}]},
              {call,
                  {745,2},
                  {atom,{745,2},nested_catch_1},
                  [{block,0,
                       [{debug_line,745,443},
                        {tuple,
                            {745,17},
                            [{tuple,
                                 {745,18},
                                 [{atom,{745,19},add},
                                  {tuple,
                                      {745,25},
                                      [{integer,{745,26},2},
                                       {atom,{745,28},c}]}]},
                             {atom,{745,32},rethrow},
                             {atom,{745,40},void}]}]},
                   {atom,{746,10},void},
                   {block,0,
                       [{debug_line,746,444},
                        {tuple,
                            {746,16},
                            [{atom,{746,17},abs},{var,{746,23},'V'}]}]},
                   {atom,{746,27},function_clause}]}},
          {debug_line,747,445},
          {atom,{747,5},ok}]}]}.
{function,
 {749,1},
 nested_catch_1,4,
 [{clause,
   {749,1},
   [{var,{749,1},'_'},{var,{749,1},'_'},{var,{749,1},'_'},{var,{749,1},'_'}],
   [[{call,
      {749,1},
      {remote,{749,1},{atom,{749,1},fake},{atom,{749,1},is_beam_bif_info}},
      []}]],
   [{debug_line,749,446},{atom,{749,1},ignore}]},
  {clause,
   {749,1},
   [{tuple,
     {749,16},
     [{var,{749,17},'X1'},{var,{749,20},'C1'},{var,{749,23},'V1'}]},
    {var,{750,6},'X2'},
    {var,{750,10},'X3'},
    {var,{750,14},'X4'}],
   [],
   [{debug_line,751,447},
    {call,
     {751,5},
     {remote,{751,5},{atom,{751,5},erlang},{atom,{751,5},erase}},
     [{atom,{751,11},nested3}]},
    {debug_line,752,448},
    {call,
     {752,5},
     {remote,{752,5},{atom,{752,5},erlang},{atom,{752,5},erase}},
     [{atom,{752,11},nested4}]},
    {debug_line,753,449},
    {call,
     {753,5},
     {remote,{753,5},{atom,{753,5},erlang},{atom,{753,5},erase}},
     [{atom,{753,11},nested}]},
    {debug_line,754,450},
    {match,
     {754,5},
     {var,{754,5},'Throw'},
     {call,
      {754,13},
      {remote,{754,13},{atom,{754,13},erlang},{atom,{754,13},make_ref}},
      []}},
    {debug_line,755,451},
    {match,
     {755,5},
     {var,{755,5},'Try'},
     {'try',
      {756,2},
      [{debug_line,757,452},
       {'try',
        {757,13},
        [{call,
          {757,17},
          {remote,{757,17},{atom,{757,17},erlang},{atom,{757,17},throw}},
          [{var,{757,23},'Throw'}]}],
        [],
        [{clause,
          {759,3},
          [{tuple,
            {759,3},
            [{atom,{759,3},throw},{var,{759,3},'Throw'},{var,{759,3},'_'}]}],
          [],
          [{debug_line,760,453},
           {'try',
            {760,21},
            [{debug_line,761,454},
             {call,{761,25},{atom,{761,25},foo},[{var,{761,29},'X1'}]}],
            [{clause,
              {763,18},
              [{var,{763,18},'V1'}],
              [],
              [{debug_line,763,455},
               {tuple,
                {763,24},
                [{atom,{763,25},value1},
                 {call,
                  {763,32},
                  {atom,{763,32},foo},
                  [{var,{763,36},'X2'}]}]}]}],
            [{clause,
              {765,25},
              [{tuple,
                {765,25},
                [{var,{765,25},'C1'},{var,{765,28},'V1'},{var,{765,28},'_'}]}],
              [],
              [{debug_line,765,456},
               {tuple,
                {765,34},
                [{atom,{765,35},caught1},
                 {call,
                  {765,43},
                  {atom,{765,43},foo},
                  [{var,{765,47},'X2'}]}]}]}],
            [{debug_line,767,457},
             {call,
              {767,25},
              {remote,{767,25},{atom,{767,25},erlang},{atom,{767,25},put}},
              [{atom,{767,29},nested3},
               {block,0,
                [{call,
                  {767,38},
                  {atom,{767,38},foo},
                  [{var,{767,42},'X3'}]}]}]}]}]}],
        [{debug_line,770,458},
         {call,
          {770,17},
          {remote,{770,17},{atom,{770,17},erlang},{atom,{770,17},put}},
          [{atom,{770,21},nested4},
           {block,0,
            [{call,{770,30},{atom,{770,30},foo},[{var,{770,34},'X4'}]}]}]}]}],
      [{clause,
        {773,13},
        [{var,{773,13},'V'}],
        [],
        [{debug_line,773,459},
         {tuple,{773,18},[{atom,{773,19},value},{var,{773,25},'V'}]}]}],
      [{clause,
        {775,13},
        [{tuple,
          {775,13},
          [{var,{775,13},'C'},{var,{775,15},'D'},{var,{775,15},'_'}]}],
        [],
        [{debug_line,775,460},
         {tuple,
          {775,20},
          [{atom,{775,21},caught},
           {tuple,{775,28},[{var,{775,29},'C'},{var,{775,31},'D'}]}]}]}],
      [{debug_line,777,461},
       {call,
        {777,13},
        {remote,{777,13},{atom,{777,13},erlang},{atom,{777,13},put}},
        [{atom,{777,17},nested},{atom,{777,25},finalized}]}]}},
    {debug_line,779,462},
    {tuple,
     {779,5},
     [{var,{779,6},'Try'},
      {call,
       {779,10},
       {remote,{779,10},{atom,{779,10},erlang},{atom,{779,10},erase}},
       [{atom,{779,16},nested3}]},
      {call,
       {779,25},
       {remote,{779,25},{atom,{779,25},erlang},{atom,{779,25},erase}},
       [{atom,{779,31},nested4}]},
      {call,
       {779,40},
       {remote,{779,40},{atom,{779,40},erlang},{atom,{779,40},erase}},
       [{atom,{779,46},nested}]}]}]}]}.
{function,
    {783,1},
    nested_after,1,
    [{clause,
         {783,1},
         [{var,{783,1},'_'}],
         [[{call,
               {783,1},
               {remote,
                   {783,1},
                   {atom,{783,1},fake},
                   {atom,{783,1},is_beam_bif_info}},
               []}]],
         [{debug_line,783,463},{atom,{783,1},ignore}]},
     {clause,
         {783,1},
         [{var,{783,14},'Conf'}],
         [[{call,
               {783,25},
               {remote,
                   {783,25},
                   {atom,{783,25},erlang},
                   {atom,{783,25},is_list}},
               [{var,{783,33},'Conf'}]}]],
         [{debug_line,784,464},
          {match,
              {784,5},
              {var,{784,5},'V'},
              {cons,
                  {784,9},
                  {tuple,
                      {784,10},
                      [{call,
                           {784,11},
                           {remote,
                               {784,11},
                               {atom,{784,11},erlang},
                               {atom,{784,11},make_ref}},
                           []},
                       {float,{784,22},1.4142136},
                       {call,
                           {784,32},
                           {remote,
                               {784,32},
                               {atom,{784,32},erlang},
                               {atom,{784,32},self}},
                           []}]},
                  {nil,{784,39}}}},
          {debug_line,785,465},
          {match,
              {785,5},
              {tuple,
                  {785,5},
                  [{atom,{785,6},value},
                   {tuple,{786,5},[{var,{786,6},'V'},{atom,{786,8},x3}]},
                   {tuple,
                       {787,5},
                       [{atom,{787,6},value1},
                        {tuple,
                            {787,13},
                            [{var,{787,14},'V'},{atom,{787,16},x2}]}]},
                   {atom,{788,5},finalized}]},
              {call,
                  {789,2},
                  {atom,{789,2},nested_after_1},
                  [{block,0,
                       [{debug_line,789,466},
                        {tuple,
                            {789,17},
                            [{tuple,
                                 {789,18},
                                 [{atom,{789,19},value},
                                  {tuple,
                                      {789,25},
                                      [{var,{789,26},'V'},
                                       {atom,{789,28},x1}]}]},
                             {atom,{789,33},void},
                             {tuple,
                                 {789,38},
                                 [{var,{789,39},'V'},{atom,{789,41},x1}]}]}]},
                   {block,0,
                       [{debug_line,790,467},
                        {tuple,
                            {790,10},
                            [{atom,{790,11},value},
                             {tuple,
                                 {790,17},
                                 [{var,{790,18},'V'},{atom,{790,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {790,26},
                            [{atom,{790,27},value},
                             {tuple,
                                 {790,33},
                                 [{var,{790,34},'V'},
                                  {atom,{790,36},x3}]}]}]}]}},
          {debug_line,791,468},
          {match,
              {791,5},
              {tuple,
                  {791,5},
                  [{tuple,
                       {791,6},
                       [{atom,{791,7},caught},
                        {tuple,
                            {791,14},
                            [{atom,{791,15},error},
                             {tuple,
                                 {791,21},
                                 [{var,{791,22},'V'},{atom,{791,24},x2}]}]}]},
                   {tuple,{792,5},[{var,{792,6},'V'},{atom,{792,8},x3}]},
                   {atom,{793,5},undefined},
                   {atom,{794,5},finalized}]},
              {call,
                  {795,2},
                  {atom,{795,2},nested_after_1},
                  [{block,0,
                       [{debug_line,795,469},
                        {tuple,
                            {795,17},
                            [{tuple,
                                 {795,18},
                                 [{atom,{795,19},value},
                                  {tuple,
                                      {795,25},
                                      [{var,{795,26},'V'},
                                       {atom,{795,28},x1}]}]},
                             {atom,{795,33},void},
                             {tuple,
                                 {795,38},
                                 [{var,{795,39},'V'},{atom,{795,41},x1}]}]}]},
                   {block,0,
                       [{debug_line,796,470},
                        {tuple,
                            {796,10},
                            [{atom,{796,11},error},
                             {tuple,
                                 {796,17},
                                 [{var,{796,18},'V'},{atom,{796,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {796,26},
                            [{atom,{796,27},value},
                             {tuple,
                                 {796,33},
                                 [{var,{796,34},'V'},
                                  {atom,{796,36},x3}]}]}]}]}},
          {debug_line,797,471},
          {match,
              {797,5},
              {tuple,
                  {797,5},
                  [{tuple,
                       {797,6},
                       [{atom,{797,7},caught},
                        {tuple,
                            {797,14},
                            [{atom,{797,15},exit},
                             {tuple,
                                 {797,20},
                                 [{var,{797,21},'V'},{atom,{797,23},x3}]}]}]},
                   {atom,{798,5},undefined},
                   {atom,{799,5},undefined},
                   {atom,{800,5},finalized}]},
              {call,
                  {801,2},
                  {atom,{801,2},nested_after_1},
                  [{block,0,
                       [{debug_line,801,472},
                        {tuple,
                            {801,17},
                            [{tuple,
                                 {801,18},
                                 [{atom,{801,19},value},
                                  {tuple,
                                      {801,25},
                                      [{var,{801,26},'V'},
                                       {atom,{801,28},x1}]}]},
                             {atom,{801,33},void},
                             {tuple,
                                 {801,38},
                                 [{var,{801,39},'V'},{atom,{801,41},x1}]}]}]},
                   {block,0,
                       [{debug_line,802,473},
                        {tuple,
                            {802,10},
                            [{atom,{802,11},error},
                             {tuple,
                                 {802,17},
                                 [{var,{802,18},'V'},{atom,{802,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {802,26},
                            [{atom,{802,27},exit},
                             {tuple,
                                 {802,32},
                                 [{var,{802,33},'V'},
                                  {atom,{802,35},x3}]}]}]}]}},
          {debug_line,804,474},
          {match,
              {804,5},
              {tuple,
                  {804,5},
                  [{tuple,
                       {804,6},
                       [{atom,{804,7},caught},
                        {tuple,
                            {804,14},
                            [{atom,{804,15},error},
                             {tuple,
                                 {804,21},
                                 [{atom,{804,22},try_clause},
                                  {tuple,
                                      {804,33},
                                      [{var,{804,34},'V'},
                                       {atom,{804,36},x1}]}]}]}]},
                   {tuple,{805,5},[{var,{805,6},'V'},{atom,{805,8},x3}]},
                   {atom,{806,5},undefined},
                   {atom,{807,5},finalized}]},
              {call,
                  {808,2},
                  {atom,{808,2},nested_after_1},
                  [{block,0,
                       [{debug_line,808,475},
                        {tuple,
                            {808,17},
                            [{tuple,
                                 {808,18},
                                 [{atom,{808,19},value},
                                  {tuple,
                                      {808,25},
                                      [{var,{808,26},'V'},
                                       {atom,{808,28},x1}]}]},
                             {atom,{808,33},void},
                             {atom,{808,38},try_clause}]}]},
                   {atom,{809,10},void},
                   {block,0,
                       [{debug_line,809,476},
                        {tuple,
                            {809,16},
                            [{atom,{809,17},value},
                             {tuple,
                                 {809,23},
                                 [{var,{809,24},'V'},
                                  {atom,{809,26},x3}]}]}]}]}},
          {debug_line,810,477},
          {match,
              {810,5},
              {tuple,
                  {810,5},
                  [{tuple,
                       {810,6},
                       [{atom,{810,7},caught},
                        {tuple,
                            {810,14},
                            [{atom,{810,15},error},
                             {atom,{810,21},badarith}]}]},
                   {atom,{811,5},undefined},
                   {atom,{812,5},undefined},
                   {atom,{813,5},finalized}]},
              {call,
                  {814,2},
                  {atom,{814,2},nested_after_1},
                  [{block,0,
                       [{debug_line,814,478},
                        {tuple,
                            {814,17},
                            [{tuple,
                                 {814,18},
                                 [{atom,{814,19},value},
                                  {tuple,
                                      {814,25},
                                      [{var,{814,26},'V'},
                                       {atom,{814,28},x1}]}]},
                             {atom,{814,33},void},
                             {atom,{814,38},try_clause}]}]},
                   {atom,{815,10},void},
                   {block,0,
                       [{debug_line,815,479},
                        {tuple,
                            {815,16},
                            [{atom,{815,17},'div'},
                             {tuple,
                                 {815,23},
                                 [{integer,{815,24},17},
                                  {integer,{815,27},0}]}]}]}]}},
          {debug_line,817,480},
          {match,
              {817,5},
              {tuple,
                  {817,5},
                  [{atom,{817,6},value},
                   {tuple,{818,5},[{var,{818,6},'V'},{atom,{818,8},x3}]},
                   {tuple,
                       {819,5},
                       [{atom,{819,6},caught1},
                        {tuple,
                            {819,14},
                            [{var,{819,15},'V'},{atom,{819,17},x2}]}]},
                   {atom,{820,5},finalized}]},
              {call,
                  {821,2},
                  {atom,{821,2},nested_after_1},
                  [{block,0,
                       [{debug_line,821,481},
                        {tuple,
                            {821,17},
                            [{tuple,
                                 {821,18},
                                 [{atom,{821,19},throw},
                                  {tuple,
                                      {821,25},
                                      [{var,{821,26},'V'},
                                       {atom,{821,28},x1}]}]},
                             {atom,{821,33},throw},
                             {tuple,
                                 {821,39},
                                 [{var,{821,40},'V'},{atom,{821,42},x1}]}]}]},
                   {block,0,
                       [{debug_line,822,482},
                        {tuple,
                            {822,10},
                            [{atom,{822,11},value},
                             {tuple,
                                 {822,17},
                                 [{var,{822,18},'V'},{atom,{822,20},x2}]}]}]},
                   {block,0,
                       [{tuple,
                            {822,26},
                            [{atom,{822,27},value},
                             {tuple,
                                 {822,33},
                                 [{var,{822,34},'V'},
                                  {atom,{822,36},x3}]}]}]}]}},
          {debug_line,823,483},
          {match,
              {823,5},
              {tuple,
                  {823,5},
                  [{tuple,
                       {823,6},
                       [{atom,{823,7},caught},
                        {tuple,
                            {823,14},
                            [{atom,{823,15},error},
                             {atom,{823,21},badarith}]}]},
                   {tuple,{824,5},[{var,{824,6},'V'},{atom,{824,8},x3}]},
                   {atom,{825,5},undefined},
                   {atom,{826,5},finalized}]},
              {call,
                  {827,2},
                  {atom,{827,2},nested_after_1},
                  [{block,0,
                       [{debug_line,827,484},
                        {tuple,
                            {827,17},
                            [{tuple,
                                 {827,18},
                                 [{atom,{827,19},throw},
                                  {tuple,
                                      {827,25},
                                      [{var,{827,26},'V'},
                                       {atom,{827,28},x1}]}]},
                             {atom,{827,33},throw},
                             {tuple,
                                 {827,39},
                                 [{var,{827,40},'V'},{atom,{827,42},x1}]}]}]},
                   {block,0,
                       [{debug_line,828,485},
                        {tuple,
                            {828,10},
                            [{atom,{828,11},add},
                             {tuple,
                                 {828,17},
                                 [{atom,{828,18},a},{atom,{828,20},b}]}]}]},
                   {block,0,
                       [{tuple,
                            {828,25},
                            [{atom,{828,26},value},
                             {tuple,
                                 {828,32},
                                 [{var,{828,33},'V'},
                                  {atom,{828,35},x3}]}]}]}]}},
          {debug_line,829,486},
          {match,
              {829,5},
              {tuple,
                  {829,5},
                  [{tuple,
                       {829,6},
                       [{atom,{829,7},caught},
                        {tuple,
                            {829,14},
                            [{atom,{829,15},error},{atom,{829,21},badarg}]}]},
                   {atom,{830,5},undefined},
                   {atom,{831,5},undefined},
                   {atom,{832,5},finalized}]},
              {call,
                  {833,2},
                  {atom,{833,2},nested_after_1},
                  [{block,0,
                       [{debug_line,833,487},
                        {tuple,
                            {833,17},
                            [{tuple,
                                 {833,18},
                                 [{atom,{833,19},throw},
                                  {tuple,
                                      {833,25},
                                      [{var,{833,26},'V'},
                                       {atom,{833,28},x1}]}]},
                             {atom,{833,33},throw},
                             {tuple,
                                 {833,39},
                                 [{var,{833,40},'V'},{atom,{833,42},x1}]}]}]},
                   {block,0,
                       [{debug_line,834,488},
                        {tuple,
                            {834,10},
                            [{atom,{834,11},add},
                             {tuple,
                                 {834,17},
                                 [{atom,{834,18},a},{atom,{834,20},b}]}]}]},
                   {block,0,
                       [{tuple,
                            {834,25},
                            [{atom,{834,26},abs},{var,{834,32},'V'}]}]}]}},
          {debug_line,836,489},
          {match,
              {836,5},
              {tuple,
                  {836,5},
                  [{tuple,
                       {836,6},
                       [{atom,{836,7},caught},
                        {tuple,
                            {836,14},
                            [{atom,{836,15},throw},
                             {tuple,
                                 {836,21},
                                 [{var,{836,22},'V'},{atom,{836,24},x1}]}]}]},
                   {tuple,{837,5},[{var,{837,6},'V'},{atom,{837,8},x3}]},
                   {atom,{838,5},undefined},
                   {atom,{839,5},finalized}]},
              {call,
                  {840,2},
                  {atom,{840,2},nested_after_1},
                  [{block,0,
                       [{debug_line,840,490},
                        {tuple,
                            {840,17},
                            [{tuple,
                                 {840,18},
                                 [{atom,{840,19},throw},
                                  {tuple,
                                      {840,25},
                                      [{var,{840,26},'V'},
                                       {atom,{840,28},x1}]}]},
                             {atom,{840,33},rethrow},
                             {atom,{840,41},void}]}]},
                   {atom,{841,10},void},
                   {block,0,
                       [{debug_line,841,491},
                        {tuple,
                            {841,16},
                            [{atom,{841,17},value},
                             {tuple,
                                 {841,23},
                                 [{var,{841,24},'V'},
                                  {atom,{841,26},x3}]}]}]}]}},
          {debug_line,842,492},
          {match,
              {842,5},
              {tuple,
                  {842,5},
                  [{tuple,
                       {842,6},
                       [{atom,{842,7},caught},
                        {tuple,
                            {842,14},
                            [{atom,{842,15},error},
                             {atom,{842,21},badarith}]}]},
                   {atom,{843,5},undefined},
                   {atom,{844,5},undefined},
                   {atom,{845,5},finalized}]},
              {call,
                  {846,2},
                  {atom,{846,2},nested_after_1},
                  [{block,0,
                       [{debug_line,846,493},
                        {tuple,
                            {846,17},
                            [{tuple,
                                 {846,18},
                                 [{atom,{846,19},throw},
                                  {tuple,
                                      {846,25},
                                      [{var,{846,26},'V'},
                                       {atom,{846,28},x1}]}]},
                             {atom,{846,33},rethrow},
                             {atom,{846,41},void}]}]},
                   {atom,{847,10},void},
                   {block,0,
                       [{debug_line,847,494},
                        {tuple,
                            {847,16},
                            [{atom,{847,17},'div'},
                             {tuple,
                                 {847,23},
                                 [{integer,{847,24},1},
                                  {integer,{847,26},0}]}]}]}]}},
          {debug_line,848,495},
          {atom,{848,5},ok}]}]}.
{function,
 {850,1},
 nested_after_1,3,
 [{clause,
   {850,1},
   [{var,{850,1},'_'},{var,{850,1},'_'},{var,{850,1},'_'}],
   [[{call,
      {850,1},
      {remote,{850,1},{atom,{850,1},fake},{atom,{850,1},is_beam_bif_info}},
      []}]],
   [{debug_line,850,496},{atom,{850,1},ignore}]},
  {clause,
   {850,1},
   [{tuple,
     {850,16},
     [{var,{850,17},'X1'},{var,{850,20},'C1'},{var,{850,23},'V1'}]},
    {var,{851,6},'X2'},
    {var,{851,10},'X3'}],
   [],
   [{debug_line,852,497},
    {call,
     {852,5},
     {remote,{852,5},{atom,{852,5},erlang},{atom,{852,5},erase}},
     [{atom,{852,11},nested3}]},
    {debug_line,853,498},
    {call,
     {853,5},
     {remote,{853,5},{atom,{853,5},erlang},{atom,{853,5},erase}},
     [{atom,{853,11},nested4}]},
    {debug_line,854,499},
    {call,
     {854,5},
     {remote,{854,5},{atom,{854,5},erlang},{atom,{854,5},erase}},
     [{atom,{854,11},nested}]},
    {debug_line,855,500},
    {match,
     {855,5},
     {var,{855,5},'Self'},
     {call,
      {855,12},
      {remote,{855,12},{atom,{855,12},erlang},{atom,{855,12},self}},
      []}},
    {debug_line,856,501},
    {match,
     {856,5},
     {var,{856,5},'Try'},
     {'try',
      {857,2},
      [{debug_line,858,502},
       {'try',
        {858,13},
        [{call,
          {858,17},
          {remote,{858,17},{atom,{858,17},erlang},{atom,{858,17},self}},
          []}],
        [],[],
        [{debug_line,860,503},
         {match,
          {860,17},
          {var,{860,17},'After'},
          {'try',
           {861,21},
           [{debug_line,862,504},
            {call,{862,25},{atom,{862,25},foo},[{var,{862,29},'X1'}]}],
           [{clause,
             {864,18},
             [{var,{864,18},'V1'}],
             [],
             [{debug_line,864,505},
              {tuple,
               {864,24},
               [{atom,{864,25},value1},
                {call,{864,32},{atom,{864,32},foo},[{var,{864,36},'X2'}]}]}]}],
           [{clause,
             {866,25},
             [{tuple,
               {866,25},
               [{var,{866,25},'C1'},{var,{866,28},'V1'},{var,{866,28},'_'}]}],
             [],
             [{debug_line,866,506},
              {tuple,
               {866,34},
               [{atom,{866,35},caught1},
                {call,{866,43},{atom,{866,43},foo},[{var,{866,47},'X2'}]}]}]}],
           [{debug_line,868,507},
            {call,
             {868,25},
             {remote,{868,25},{atom,{868,25},erlang},{atom,{868,25},put}},
             [{atom,{868,29},nested3},
              {block,0,
               [{call,
                 {868,38},
                 {atom,{868,38},foo},
                 [{var,{868,42},'X3'}]}]}]}]}},
         {debug_line,870,508},
         {call,
          {870,17},
          {remote,{870,17},{atom,{870,17},erlang},{atom,{870,17},put}},
          [{atom,{870,21},nested4},{var,{870,30},'After'}]}]}],
      [{clause,
        {873,13},
        [{var,{873,13},'Self'}],
        [],
        [{debug_line,873,509},{atom,{873,21},value}]}],
      [{clause,
        {875,13},
        [{tuple,
          {875,13},
          [{var,{875,13},'C'},{var,{875,15},'D'},{var,{875,15},'_'}]}],
        [],
        [{debug_line,875,510},
         {tuple,
          {875,20},
          [{atom,{875,21},caught},
           {tuple,{875,28},[{var,{875,29},'C'},{var,{875,31},'D'}]}]}]}],
      [{debug_line,877,511},
       {call,
        {877,13},
        {remote,{877,13},{atom,{877,13},erlang},{atom,{877,13},put}},
        [{atom,{877,17},nested},{atom,{877,25},finalized}]}]}},
    {debug_line,879,512},
    {tuple,
     {879,5},
     [{var,{879,6},'Try'},
      {call,
       {879,10},
       {remote,{879,10},{atom,{879,10},erlang},{atom,{879,10},erase}},
       [{atom,{879,16},nested3}]},
      {call,
       {879,25},
       {remote,{879,25},{atom,{879,25},erlang},{atom,{879,25},erase}},
       [{atom,{879,31},nested4}]},
      {call,
       {879,40},
       {remote,{879,40},{atom,{879,40},erlang},{atom,{879,40},erase}},
       [{atom,{879,46},nested}]}]}]}]}.
{function,
    {883,1},
    nested_horrid,1,
    [{clause,
         {883,1},
         [{var,{883,1},'_'}],
         [[{call,
               {883,1},
               {remote,
                   {883,1},
                   {atom,{883,1},fake},
                   {atom,{883,1},is_beam_bif_info}},
               []}]],
         [{debug_line,883,513},{atom,{883,1},ignore}]},
     {clause,
         {883,1},
         [{var,{883,15},'Config'}],
         [[{call,
               {883,28},
               {remote,
                   {883,28},
                   {atom,{883,28},erlang},
                   {atom,{883,28},is_list}},
               [{var,{883,36},'Config'}]}]],
         [{debug_line,884,514},
          {match,
              {884,5},
              {tuple,
                  {884,5},
                  [{cons,
                       {884,6},
                       {atom,{884,7},true},
                       {cons,{884,12},{atom,{884,12},true},{nil,{884,16}}}},
                   {tuple,
                       {884,18},
                       [{cons,
                            {884,19},
                            {atom,{884,20},true},
                            {cons,
                                {884,25},
                                {float,{884,25},1.0},
                                {nil,{884,28}}}},
                        {float,{884,30},1.0}]}]},
              {call,
                  {885,2},
                  {atom,{885,2},nested_horrid_1},
                  [{block,0,
                       [{debug_line,885,515},
                        {tuple,
                            {885,18},
                            [{atom,{885,19},true},
                             {atom,{885,24},void},
                             {atom,{885,29},void}]}]},
                   {float,{885,36},1.0}]}},
          {debug_line,886,516},
          {atom,{886,5},ok}]}]}.
{function,
 {888,1},
 nested_horrid_1,2,
 [{clause,
   {888,1},
   [{var,{888,1},'_'},{var,{888,1},'_'}],
   [[{call,
      {888,1},
      {remote,{888,1},{atom,{888,1},fake},{atom,{888,1},is_beam_bif_info}},
      []}]],
   [{debug_line,888,517},{atom,{888,1},ignore}]},
  {clause,
   {888,1},
   [{tuple,
     {888,17},
     [{var,{888,18},'X1'},{var,{888,21},'C1'},{var,{888,24},'V1'}]},
    {var,{888,29},'X2'}],
   [],
   [{debug_line,889,518},
    {'try',
     {889,5},
     [{match,
       {889,9},
       {var,{889,9},'A1'},
       {cons,
        {889,14},
        {var,{889,15},'X1'},
        {cons,{889,18},{var,{889,18},'X1'},{nil,{889,20}}}}},
      {debug_line,890,519},
      {match,
       {890,2},
       {var,{890,2},'B1'},
       {'if',
        {890,7},
        [{clause,
          {890,10},
          [],
          [[{var,{890,10},'X1'}]],
          [{debug_line,891,520},
           {match,
            {891,8},
            {var,{891,8},'A2'},
            {cons,
             {891,13},
             {var,{891,14},'X1'},
             {cons,{891,17},{var,{891,17},'X2'},{nil,{891,19}}}}},
           {debug_line,892,521},
           {match,
            {892,8},
            {var,{892,8},'B2'},
            {call,{892,13},{atom,{892,13},foo},[{var,{892,17},'X2'}]}},
           {debug_line,893,522},
           {tuple,{893,8},[{var,{893,9},'A2'},{var,{893,12},'B2'}]}]},
         {clause,
          {894,3},
          [],
          [[{atom,{894,3},true}]],
          [{debug_line,895,523},
           {match,
            {895,8},
            {var,{895,8},'A3'},
            {cons,
             {895,13},
             {var,{895,14},'X2'},
             {cons,{895,17},{var,{895,17},'X1'},{nil,{895,19}}}}},
           {debug_line,896,524},
           {match,
            {896,8},
            {var,{896,8},'B3'},
            {call,{896,13},{atom,{896,13},foo},[{var,{896,17},'X2'}]}},
           {debug_line,897,525},
           {tuple,{897,8},[{var,{897,9},'A3'},{var,{897,12},'B3'}]}]}]}},
      {debug_line,899,526},
      {tuple,{899,2},[{var,{899,3},'A1'},{var,{899,6},'B1'}]}],
     [],
     [{clause,
       {901,2},
       [{tuple,
         {901,2},
         [{var,{901,2},'C1'},{var,{901,5},'V1'},{var,{901,5},'_'}]}],
       [],
       [{debug_line,901,527},{atom,{901,11},caught1}]}],
     []}]}]}.
{function,
    {906,1},
    foo,1,
    [{clause,
         {906,1},
         [{var,{906,1},'_'}],
         [[{call,
               {906,1},
               {remote,
                   {906,1},
                   {atom,{906,1},fake},
                   {atom,{906,1},is_beam_bif_info}},
               []}]],
         [{debug_line,906,528},{atom,{906,1},ignore}]},
     {clause,
         {906,1},
         [{tuple,{906,5},[{atom,{906,6},value},{var,{906,12},'Value'}]}],
         [],
         [{debug_line,906,529},{var,{906,23},'Value'}]},
     {clause,
         {907,1},
         [{tuple,
              {907,5},
              [{atom,{907,6},'div'},
               {tuple,{907,12},[{var,{907,13},'A'},{var,{907,15},'B'}]}]}],
         [],
         [{debug_line,908,530},
          {call,
              {908,5},
              {atom,{908,5},my_div},
              [{var,{908,12},'A'},{var,{908,15},'B'}]}]},
     {clause,
         {909,1},
         [{tuple,
              {909,5},
              [{atom,{909,6},add},
               {tuple,{909,12},[{var,{909,13},'A'},{var,{909,15},'B'}]}]}],
         [],
         [{debug_line,910,531},
          {call,
              {910,5},
              {atom,{910,5},my_add},
              [{var,{910,12},'A'},{var,{910,15},'B'}]}]},
     {clause,
         {911,1},
         [{tuple,{911,5},[{atom,{911,6},abs},{var,{911,12},'X'}]}],
         [],
         [{debug_line,912,532},
          {call,{912,5},{atom,{912,5},my_abs},[{var,{912,12},'X'}]}]},
     {clause,
         {913,1},
         [{tuple,{913,5},[{atom,{913,6},error},{var,{913,12},'Error'}]}],
         [],
         [{debug_line,914,533},
          {call,
              {914,5},
              {remote,{914,11},{atom,{914,5},erlang},{atom,{914,12},error}},
              [{var,{914,18},'Error'}]}]},
     {clause,
         {915,1},
         [{tuple,{915,5},[{atom,{915,6},throw},{var,{915,12},'Throw'}]}],
         [],
         [{debug_line,916,534},
          {call,
              {916,5},
              {remote,{916,11},{atom,{916,5},erlang},{atom,{916,12},throw}},
              [{var,{916,18},'Throw'}]}]},
     {clause,
         {917,1},
         [{tuple,{917,5},[{atom,{917,6},exit},{var,{917,11},'Exit'}]}],
         [],
         [{debug_line,918,535},
          {call,
              {918,5},
              {remote,{918,11},{atom,{918,5},erlang},{atom,{918,12},exit}},
              [{var,{918,17},'Exit'}]}]},
     {clause,
         {919,1},
         [{tuple,
              {919,5},
              [{atom,{919,6},raise},
               {tuple,
                   {919,12},
                   [{var,{919,13},'Class'},{var,{919,19},'Reason'}]}]}],
         [],
         [{debug_line,920,536},
          {call,
              {920,5},
              {remote,{920,11},{atom,{920,5},erlang},{atom,{920,12},raise}},
              [{var,{920,18},'Class'},{var,{920,25},'Reason'}]}]},
     {clause,
         {921,1},
         [{var,{921,5},'Term'}],
         [[{op,{921,16},
               'not',
               {call,
                   {921,20},
                   {remote,
                       {921,20},
                       {atom,{921,20},erlang},
                       {atom,{921,20},is_atom}},
                   [{var,{921,28},'Term'}]}}]],
         [{debug_line,921,537},{var,{921,37},'Term'}]}]}.
{function,{924,1},
          my_div,2,
          [{clause,{924,1},
                   [{var,{924,1},'_'},{var,{924,1},'_'}],
                   [[{call,{924,1},
                           {remote,{924,1},
                                   {atom,{924,1},fake},
                                   {atom,{924,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,924,538},{atom,{924,1},ignore}]},
           {clause,{924,1},
                   [{var,{924,8},'A'},{var,{924,11},'B'}],
                   [],
                   [{debug_line,925,539},
                    {op,{925,7},
                        'div',
                        {var,{925,5},'A'},
                        {var,{925,11},'B'}}]}]}.
{function,{927,1},
          my_add,2,
          [{clause,{927,1},
                   [{var,{927,1},'_'},{var,{927,1},'_'}],
                   [[{call,{927,1},
                           {remote,{927,1},
                                   {atom,{927,1},fake},
                                   {atom,{927,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,927,540},{atom,{927,1},ignore}]},
           {clause,{927,1},
                   [{var,{927,8},'A'},{var,{927,11},'B'}],
                   [],
                   [{debug_line,928,541},
                    {op,{928,7},'+',{var,{928,5},'A'},{var,{928,9},'B'}}]}]}.
{function,{930,1},
          my_abs,1,
          [{clause,{930,1},
                   [{var,{930,1},'_'}],
                   [[{call,{930,1},
                           {remote,{930,1},
                                   {atom,{930,1},fake},
                                   {atom,{930,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,930,542},{atom,{930,1},ignore}]},
           {clause,{930,1},
                   [{var,{930,8},'X'}],
                   [],
                   [{debug_line,930,543},
                    {call,{930,14},
                          {remote,{930,14},
                                  {atom,{930,14},erlang},
                                  {atom,{930,14},abs}},
                          [{var,{930,18},'X'}]}]}]}.
{function,
    {933,1},
    last_call_optimization,1,
    [{clause,
         {933,1},
         [{var,{933,1},'_'}],
         [[{call,
               {933,1},
               {remote,
                   {933,1},
                   {atom,{933,1},fake},
                   {atom,{933,1},is_beam_bif_info}},
               []}]],
         [{debug_line,933,544},{atom,{933,1},ignore}]},
     {clause,
         {933,1},
         [{var,{933,24},'Config'}],
         [[{call,
               {933,37},
               {remote,
                   {933,37},
                   {atom,{933,37},erlang},
                   {atom,{933,37},is_list}},
               [{var,{933,45},'Config'}]}]],
         [{debug_line,934,545},
          {match,
              {934,5},
              {atom,{934,5},error},
              {call,{934,13},{atom,{934,13},in_tail},[{atom,{934,21},dum}]}},
          {debug_line,935,546},
          {match,
              {935,5},
              {var,{935,5},'StkSize0'},
              {call,{935,16},{atom,{935,16},in_tail},[{integer,{935,24},0}]}},
          {debug_line,936,547},
          {match,
              {936,5},
              {var,{936,5},'StkSize'},
              {call,
                  {936,15},
                  {atom,{936,15},in_tail},
                  [{integer,{936,23},50000}]}},
          {debug_line,937,548},
          {call,
              {937,5},
              {remote,{937,7},{atom,{937,5},io},{atom,{937,8},format}},
              [{block,0,[{string,{937,15},"StkSize0 = ~p"}]},
               {block,0,
                   [{cons,
                        {937,32},
                        {var,{937,33},'StkSize0'},
                        {nil,{937,41}}}]}]},
          {debug_line,938,549},
          {call,
              {938,5},
              {remote,{938,7},{atom,{938,5},io},{atom,{938,8},format}},
              [{block,0,[{string,{938,15},"StkSize  = ~p"}]},
               {block,0,
                   [{cons,
                        {938,32},
                        {var,{938,33},'StkSize'},
                        {nil,{938,40}}}]}]},
          {debug_line,939,550},
          {match,{939,5},{var,{939,5},'StkSize'},{var,{939,15},'StkSize0'}},
          {debug_line,940,551},
          {atom,{940,5},ok}]}]}.
{function,
 {942,1},
 in_tail,1,
 [{clause,
   {942,1},
   [{var,{942,1},'_'}],
   [[{call,
      {942,1},
      {remote,{942,1},{atom,{942,1},fake},{atom,{942,1},is_beam_bif_info}},
      []}]],
   [{debug_line,942,552},{atom,{942,1},ignore}]},
  {clause,
   {942,1},
   [{var,{942,9},'E'}],
   [],
   [{debug_line,943,553},
    {'try',
     {943,5},
     [{call,
       {943,9},
       {remote,{943,15},{atom,{943,9},erlang},{atom,{943,16},abs}},
       [{var,{943,20},'E'}]}],
     [{clause,
       {944,9},
       [{var,{944,9},'T'}],
       [],
       [{debug_line,945,554},
        {match,
         {945,6},
         {var,{945,6},'A'},
         {call,{945,10},{atom,{945,10},id},[{nil,{945,13}}]}},
        {debug_line,946,555},
        {match,
         {946,6},
         {var,{946,6},'B'},
         {call,{946,10},{atom,{946,10},id},[{nil,{946,13}}]}},
        {debug_line,947,556},
        {match,
         {947,6},
         {var,{947,6},'C'},
         {call,{947,10},{atom,{947,10},id},[{nil,{947,13}}]}},
        {debug_line,948,557},
        {call,
         {948,6},
         {atom,{948,6},id},
         [{block,0,
           [{cons,
             {948,9},
             {var,{948,10},'A'},
             {cons,
              {948,12},
              {var,{948,12},'B'},
              {cons,{948,14},{var,{948,14},'C'},{nil,{948,15}}}}}]}]},
        {debug_line,949,558},
        {call,{949,6},{atom,{949,6},do_tail},[{var,{949,14},'T'}]}]}],
     [{clause,
       {950,11},
       [{tuple,
         {950,11},
         [{atom,{950,11},error},{atom,{950,17},badarg},{var,{950,17},'_'}]}],
       [],
       [{debug_line,950,559},{atom,{950,27},error}]}],
     []}]}]}.
{function,
    {953,1},
    do_tail,1,
    [{clause,
         {953,1},
         [{var,{953,1},'_'}],
         [[{call,
               {953,1},
               {remote,
                   {953,1},
                   {atom,{953,1},fake},
                   {atom,{953,1},is_beam_bif_info}},
               []}]],
         [{debug_line,953,560},{atom,{953,1},ignore}]},
     {clause,
         {953,1},
         [{integer,{953,9},0}],
         [],
         [{debug_line,954,561},
          {call,
              {954,5},
              {remote,
                  {954,5},
                  {atom,{954,5},erlang},
                  {atom,{954,5},process_info}},
              [{block,0,
                   [{call,
                        {954,18},
                        {remote,
                            {954,18},
                            {atom,{954,18},erlang},
                            {atom,{954,18},self}},
                        []}]},
               {atom,{954,26},stack_size}]}]},
     {clause,
         {955,1},
         [{var,{955,9},'N'}],
         [],
         [{debug_line,956,562},
          {call,
              {956,5},
              {atom,{956,5},in_tail},
              [{block,0,
                   [{op,{956,14},
                        '-',
                        {var,{956,13},'N'},
                        {integer,{956,15},1}}]}]}]}]}.
{function,
    {958,1},
    bool,1,
    [{clause,
         {958,1},
         [{var,{958,1},'_'}],
         [[{call,
               {958,1},
               {remote,
                   {958,1},
                   {atom,{958,1},fake},
                   {atom,{958,1},is_beam_bif_info}},
               []}]],
         [{debug_line,958,563},{atom,{958,1},ignore}]},
     {clause,
         {958,1},
         [{var,{958,6},'Config'}],
         [[{call,
               {958,19},
               {remote,
                   {958,19},
                   {atom,{958,19},erlang},
                   {atom,{958,19},is_list}},
               [{var,{958,27},'Config'}]}]],
         [{debug_line,959,564},
          {match,
              {959,5},
              {atom,{959,5},ok},
              {call,
                  {959,10},
                  {atom,{959,10},do_bool},
                  [{atom,{959,18},false},{atom,{959,25},false}]}},
          {debug_line,960,565},
          {match,
              {960,5},
              {atom,{960,5},error},
              {call,
                  {960,13},
                  {atom,{960,13},do_bool},
                  [{atom,{960,21},false},{atom,{960,28},true}]}},
          {debug_line,961,566},
          {match,
              {961,5},
              {atom,{961,5},error},
              {call,
                  {961,13},
                  {atom,{961,13},do_bool},
                  [{atom,{961,21},true},{atom,{961,27},false}]}},
          {debug_line,962,567},
          {match,
              {962,5},
              {atom,{962,5},error},
              {call,
                  {962,13},
                  {atom,{962,13},do_bool},
                  [{atom,{962,21},true},{atom,{962,27},true}]}},
          {debug_line,963,568},
          {match,
              {963,5},
              {atom,{963,5},error},
              {call,
                  {963,13},
                  {atom,{963,13},do_bool},
                  [{atom,{963,21},true},{atom,{963,27},blurf}]}},
          {debug_line,964,569},
          {match,
              {964,5},
              {tuple,{964,5},[{atom,{964,6},'EXIT'},{var,{964,13},'_'}]},
              {'catch',
                  {964,19},
                  {call,
                      {964,25},
                      {atom,{964,25},do_bool},
                      [{atom,{964,33},blurf},{atom,{964,40},false}]}}},
          {debug_line,965,570},
          {atom,{965,5},ok}]}]}.
{function,
    {968,1},
    do_bool,2,
    [{clause,
         {968,1},
         [{var,{968,1},'_'},{var,{968,1},'_'}],
         [[{call,
               {968,1},
               {remote,
                   {968,1},
                   {atom,{968,1},fake},
                   {atom,{968,1},is_beam_bif_info}},
               []}]],
         [{debug_line,968,571},{atom,{968,1},ignore}]},
     {clause,
         {968,1},
         [{var,{968,9},'A0'},{var,{968,13},'B'}],
         [],
         [{debug_line,969,572},
          {match,
              {969,5},
              {var,{969,5},'A'},
              {op,{969,9},'not',{var,{969,13},'A0'}}},
          {debug_line,970,573},
          {'try',
              {970,5},
              [{debug_line,971,574},
               {call,{971,2},{atom,{971,2},id},[{integer,{971,5},42}]},
               {debug_line,972,575},
               {'if',
                   {972,2},
                   [{clause,
                        {973,6},
                        [],
                        [[{var,{973,6},'A'},
                          {op,{973,9},'not',{var,{973,13},'B'}}]],
                        [{debug_line,973,576},{atom,{973,18},ok}]}]}],
              [],
              [{clause,
                   {976,2},
                   [{tuple,
                        {976,2},
                        [{var,{976,2},'_'},
                         {var,{976,4},'_'},
                         {var,{976,4},'_'}]}],
                   [],
                   [{debug_line,977,577},{atom,{977,6},error}]}],
              []}]}]}.
{function,
    {980,1},
    andalso_orelse,1,
    [{clause,
         {980,1},
         [{var,{980,1},'_'}],
         [[{call,
               {980,1},
               {remote,
                   {980,1},
                   {atom,{980,1},fake},
                   {atom,{980,1},is_beam_bif_info}},
               []}]],
         [{debug_line,980,578},{atom,{980,1},ignore}]},
     {clause,
         {980,1},
         [{var,{980,16},'Config'}],
         [[{call,
               {980,29},
               {remote,
                   {980,29},
                   {atom,{980,29},erlang},
                   {atom,{980,29},is_list}},
               [{var,{980,37},'Config'}]}]],
         [{debug_line,981,579},
          {match,
              {981,5},
              {tuple,
                  {981,5},
                  [{integer,{981,6},2},
                   {tuple,{981,8},[{atom,{981,9},a},{integer,{981,11},42}]}]},
              {call,
                  {981,18},
                  {atom,{981,18},andalso_orelse_1},
                  [{atom,{981,35},true},
                   {block,0,
                       [{tuple,
                            {981,41},
                            [{atom,{981,42},a},{integer,{981,44},42}]}]}]}},
          {debug_line,982,580},
          {match,
              {982,5},
              {tuple,
                  {982,5},
                  [{atom,{982,6},b},{tuple,{982,8},[{atom,{982,9},b}]}]},
              {call,
                  {982,15},
                  {atom,{982,15},andalso_orelse_1},
                  [{atom,{982,32},false},
                   {block,0,[{tuple,{982,39},[{atom,{982,40},b}]}]}]}},
          {debug_line,983,581},
          {match,
              {983,5},
              {tuple,{983,5},[{atom,{983,6},caught},{atom,{983,13},no_tuple}]},
              {call,
                  {983,25},
                  {atom,{983,25},andalso_orelse_1},
                  [{atom,{983,42},false},{atom,{983,49},no_tuple}]}},
          {debug_line,985,582},
          {match,
              {985,5},
              {atom,{985,5},ok},
              {call,
                  {985,10},
                  {atom,{985,10},andalso_orelse_2},
                  [{block,0,
                       [{tuple,
                            {985,27},
                            [{atom,{985,28},type},
                             {cons,
                                 {985,33},
                                 {atom,{985,34},a},
                                 {nil,{985,35}}}]}]}]}},
          {debug_line,986,583},
          {match,
              {986,5},
              {atom,{986,5},also_ok},
              {call,
                  {986,15},
                  {atom,{986,15},andalso_orelse_2},
                  [{block,0,
                       [{tuple,
                            {986,32},
                            [{atom,{986,33},type},{nil,{986,38}}]}]}]}},
          {debug_line,987,584},
          {match,
              {987,5},
              {atom,{987,5},also_ok},
              {call,
                  {987,15},
                  {atom,{987,15},andalso_orelse_2},
                  [{block,0,
                       [{tuple,
                            {987,32},
                            [{atom,{987,33},type},
                             {tuple,{987,38},[{atom,{987,39},a}]}]}]}]}},
          {debug_line,988,585},
          {atom,{988,5},ok}]}]}.
{function,
 {990,1},
 andalso_orelse_1,2,
 [{clause,
   {990,1},
   [{var,{990,1},'_'},{var,{990,1},'_'}],
   [[{call,
      {990,1},
      {remote,{990,1},{atom,{990,1},fake},{atom,{990,1},is_beam_bif_info}},
      []}]],
   [{debug_line,990,586},{atom,{990,1},ignore}]},
  {clause,
   {990,1},
   [{var,{990,18},'A'},{var,{990,21},'B'}],
   [],
   [{debug_line,991,587},
    {tuple,
     {991,5},
     [{'try',
       {991,6},
       [{debug_line,992,588},
        {'if',
         {992,3},
         [{clause,
           {993,7},
           [],
           [[{op,
              {993,9},
              'andalso',
              {var,{993,7},'A'},
              {op,
               {993,31},
               '=:=',
               {call,
                {993,17},
                {remote,
                 {993,17},
                 {atom,{993,17},erlang},
                 {atom,{993,17},element}},
                [{integer,{993,25},1},{var,{993,28},'B'}]},
               {atom,{993,35},a}}}]],
           [{debug_line,994,589},
            {call,
             {994,4},
             {remote,{994,4},{atom,{994,4},erlang},{atom,{994,4},tuple_size}},
             [{var,{994,15},'B'}]}]},
          {clause,
           {995,7},
           [],
           [[{atom,{995,7},true}]],
           [{debug_line,996,590},
            {call,
             {996,4},
             {remote,{996,4},{atom,{996,4},erlang},{atom,{996,4},element}},
             [{integer,{996,12},1},{var,{996,15},'B'}]}]}]}],
       [],
       [{clause,
         {998,12},
         [{tuple,
           {998,12},
           [{atom,{998,12},error},{var,{998,18},'_'},{var,{998,18},'_'}]}],
         [],
         [{debug_line,999,591},{atom,{999,7},caught}]}],
       []},
      {var,{1000,10},'B'}]}]}]}.
{function,
 {1002,1},
 andalso_orelse_2,1,
 [{clause,
   {1002,1},
   [{var,{1002,1},'_'}],
   [[{call,
      {1002,1},
      {remote,{1002,1},{atom,{1002,1},fake},{atom,{1002,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1002,592},{atom,{1002,1},ignore}]},
  {clause,
   {1002,1},
   [{tuple,{1002,18},[{var,{1002,19},'Type'},{var,{1002,24},'Keyval'}]}],
   [],
   [{debug_line,1003,593},
    {'try',
     {1003,4},
     [{debug_line,1004,594},
      {'if',
       {1004,8},
       [{clause,
         {1004,11},
         [],
         [[{op,
            {1004,25},
            'andalso',
            {call,
             {1004,11},
             {remote,
              {1004,11},
              {atom,{1004,11},erlang},
              {atom,{1004,11},is_atom}},
             [{var,{1004,19},'Type'}]},
            {op,
             {1004,48},
             '>',
             {call,
              {1004,33},
              {remote,
               {1004,33},
               {atom,{1004,33},erlang},
               {atom,{1004,33},length}},
              [{var,{1004,40},'Keyval'}]},
             {integer,{1004,50},0}}}]],
         [{atom,{1004,55},ok}]},
        {clause,
         {1005,11},
         [],
         [[{atom,{1005,11},true}]],
         [{debug_line,1005,595},{atom,{1005,19},also_ok}]}]}],
     [],
     [{clause,
       {1008,8},
       [{tuple,
         {1008,8},
         [{var,{1008,8},'_'},{var,{1008,10},'_'},{var,{1008,10},'_'}]}],
       [],
       [{debug_line,1008,596},{atom,{1008,15},fail}]}],
     []}]}]}.
{function,{1011,1},
          zero,0,
          [{clause,{1011,1},
                   [],
                   [[{call,{1011,1},
                           {remote,{1011,1},
                                   {atom,{1011,1},fake},
                                   {atom,{1011,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1011,597},{atom,{1011,1},ignore}]},
           {clause,{1011,1},
                   [],[],
                   [{debug_line,1012,598},{float,{1012,5},0.0}]}]}.
{function,
    {1014,1},
    get_in_try,1,
    [{clause,
         {1014,1},
         [{var,{1014,1},'_'}],
         [[{call,
               {1014,1},
               {remote,
                   {1014,1},
                   {atom,{1014,1},fake},
                   {atom,{1014,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1014,599},{atom,{1014,1},ignore}]},
     {clause,
         {1014,1},
         [{var,{1014,12},'_'}],
         [],
         [{debug_line,1015,600},
          {match,
              {1015,5},
              {atom,{1015,5},undefined},
              {call,
                  {1015,17},
                  {atom,{1015,17},get_valid_line},
                  [{block,0,
                       [{cons,{1015,32},{atom,{1015,33},a},{nil,{1015,34}}}]},
                   {nil,{1015,37}}]}},
          {debug_line,1016,601},
          {atom,{1016,5},ok}]}]}.
{function,
    {1018,1},
    get_valid_line,2,
    [{clause,
         {1018,1},
         [{var,{1018,1},'_'},{var,{1018,1},'_'}],
         [[{call,
               {1018,1},
               {remote,
                   {1018,1},
                   {atom,{1018,1},fake},
                   {atom,{1018,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1018,602},{atom,{1018,1},ignore}]},
     {clause,
         {1018,1},
         [{match,
              {1018,16},
              {cons,{1018,16},{var,{1018,17},'_'},{var,{1018,19},'T'}},
              {var,{1018,22},'Path'}},
          {var,{1018,28},'Annotations'}],
         [],
         [{debug_line,1019,603},
          {'try',
              {1019,5},
              [{debug_line,1020,604},
               {call,
                   {1020,9},
                   {remote,
                       {1020,9},
                       {atom,{1020,9},erlang},
                       {atom,{1020,9},get}},
                   [{var,{1020,13},'Path'}]}],
              [],
              [{clause,
                   {1024,9},
                   [{tuple,
                        {1024,9},
                        [{var,{1024,9},'_'},
                         {atom,{1024,11},not_found},
                         {var,{1024,11},'_'}]}],
                   [],
                   [{debug_line,1025,605},
                    {call,
                        {1025,13},
                        {atom,{1025,13},get_valid_line},
                        [{var,{1025,28},'T'},
                         {var,{1025,31},'Annotations'}]}]}],
              []}]}]}.
{function,
    {1028,1},
    hockey,1,
    [{clause,
         {1028,1},
         [{var,{1028,1},'_'}],
         [[{call,
               {1028,1},
               {remote,
                   {1028,1},
                   {atom,{1028,1},fake},
                   {atom,{1028,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1028,606},{atom,{1028,1},ignore}]},
     {clause,
         {1028,1},
         [{var,{1028,8},'_'}],
         [],
         [{debug_line,1029,607},
          {match,
              {1029,5},
              {tuple,
                  {1029,5},
                  [{atom,{1029,6},'EXIT'},
                   {tuple,
                       {1029,13},
                       [{tuple,
                            {1029,14},
                            [{atom,{1029,15},badmatch},{var,{1029,24},'_'}]},
                        {cons,
                            {1029,27},
                            {var,{1029,28},'_'},
                            {var,{1029,30},'_'}}]}]},
              {'catch',{1029,38},{call,{1029,44},{atom,{1029,44},hockey},[]}}},
          {debug_line,1030,608},
          {atom,{1030,5},ok}]}]}.
{function,
 {1032,1},
 hockey,0,
 [{clause,
   {1032,1},
   [],
   [[{call,
      {1032,1},
      {remote,{1032,1},{atom,{1032,1},fake},{atom,{1032,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1032,609},{atom,{1032,1},ignore}]},
  {clause,
   {1032,1},
   [],[],
   [{debug_line,1035,610},
    {'receive',
     {1035,5},
     [{clause,
       {1035,13},
       [{var,{1035,13},'_'}],
       [],
       [{debug_line,1036,611},
        {op,
         {1036,5},
         '+',
         {match,
          {1035,19},
          {atom,{1035,19},b},
          {'fun',
           {1035,23},
           {clauses,[{clause,{1035,26},[],[],[{atom,{1035,32},ok}]}]}}},
         {atom,{1036,7},hockey}},
        {op,{1036,15},'+',{atom,{1036,16},x}}]}],
     {integer,{1036,24},0},
     [{debug_line,1036,613},{atom,{1036,29},ok}]},
    {'try',
     {1036,37},
     [{op,
       {1036,63},
       '+',
       {match,
        {1036,42},
        {atom,{1036,42},a},
        {'fun',
         {1036,46},
         {clauses,[{clause,{1036,49},[],[],[{atom,{1036,55},ok}]}]}}},
       {atom,{1036,65},hockey}},
      {op,{1036,73},'+',{atom,{1037,5},y}}],
     [],
     [{clause,
       {1037,13},
       [{tuple,
         {1037,13},
         [{atom,{1037,13},throw},{var,{1037,13},'_'},{var,{1037,13},'_'}]}],
       [],
       [{debug_line,1037,614},{atom,{1037,18},ok}]}],
     []}]}]}.
{attribute,{1040,2},
           record,
           {state,[{record_field,{1040,17},{atom,{1040,17},foo}}]}}.
{function,
    {1042,1},
    handle_info,1,
    [{clause,
         {1042,1},
         [{var,{1042,1},'_'}],
         [[{call,
               {1042,1},
               {remote,
                   {1042,1},
                   {atom,{1042,1},fake},
                   {atom,{1042,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1042,616},{atom,{1042,1},ignore}]},
     {clause,
         {1042,1},
         [{var,{1042,13},'_Config'}],
         [],
         [{debug_line,1043,617},
          {call,
              {1043,5},
              {atom,{1043,5},do_handle_info},
              [{block,0,[{tuple,{1043,20},[{atom,{1043,21},foo}]}]},
               {block,0,
                   [{tuple,
                        {1043,27},
                        [{atom,{1043,27},state},
                         {atom,{1043,27},undefined}]}]}]},
          {debug_line,1044,618},
          {atom,{1044,5},ok}]}]}.
{function,
 {1046,1},
 do_handle_info,2,
 [{clause,
   {1046,1},
   [{var,{1046,1},'_'},{var,{1046,1},'_'}],
   [[{call,
      {1046,1},
      {remote,{1046,1},{atom,{1046,1},fake},{atom,{1046,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1046,619},{atom,{1046,1},ignore}]},
  {clause,
   {1046,1},
   [{tuple,{1046,16},[{var,{1046,17},'_'}]},{var,{1046,21},'State'}],
   [],
   [{debug_line,1047,620},
    {call,{1047,4},{atom,{1047,4},handle_info_ok},[]},
    {debug_line,1048,621},
    {block,
     {1048,4},
     [{match,{1048,4},{var,{1048,4},rec0},{var,{1048,4},'State'}},
      {'case',
       {1048,16},
       {var,{1048,4},rec0},
       [{clause,
         {1048,16},
         [{tuple,{1048,16},[{atom,{1048,16},state},{var,{1048,16},'_'}]}],
         [],
         [{call,
           {1048,16},
           {remote,
            {1048,16},
            {atom,{1048,16},erlang},
            {atom,{1048,16},setelement}},
           [{integer,{1048,16},2},{var,{1048,4},rec0},{atom,{1048,22},bar}]}]},
        {clause,
         [{generated,true},{location,{1048,16}}],
         [{var,[{generated,true},{location,{1048,16}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1048,16}}],
           {remote,
            [{generated,true},{location,{1048,16}}],
            {atom,[{generated,true},{location,{1048,16}}],erlang},
            {atom,[{generated,true},{location,{1048,16}}],error}},
           [{tuple,
             [{generated,true},{location,{1048,16}}],
             [{atom,[{generated,true},{location,{1048,16}}],badrecord},
              {var,{1048,4},rec0}]}]}]}]}]},
    {debug_line,1049,622},
    {'case',
     {1049,4},
     {atom,{1049,9},ok},
     [{clause,
       {1050,4},
       [{var,{1050,4},'_'}],
       [],
       [{debug_line,1051,623},
        {'case',
         {1051,6},
         {'catch',
          {1051,11},
          {call,{1051,17},{atom,{1051,17},handle_info_ok},[]}},
         [{clause,
           {1052,6},
           [{atom,{1052,6},ok}],
           [],
           [{debug_line,1053,624},
            {tuple,
             {1053,8},
             [{atom,{1053,9},stop},{var,{1053,15},'State'}]}]}]}]}]}]},
  {clause,
   {1056,1},
   [{var,{1056,16},'_'},{var,{1056,19},'State'}],
   [],
   [{debug_line,1057,625},
    {'catch',
     {1057,5},
     {block,
      {1057,11},
      [{debug_line,1058,626},
       {call,{1058,6},{atom,{1058,6},handle_info_ok},[]},
       {debug_line,1059,627},
       {block,
        {1059,6},
        [{match,{1059,6},{var,{1059,6},rec1},{var,{1059,6},'State'}},
         {'case',
          {1059,18},
          {var,{1059,6},rec1},
          [{clause,
            {1059,18},
            [{tuple,{1059,18},[{atom,{1059,18},state},{var,{1059,18},'_'}]}],
            [],
            [{call,
              {1059,18},
              {remote,
               {1059,18},
               {atom,{1059,18},erlang},
               {atom,{1059,18},setelement}},
              [{integer,{1059,18},2},
               {var,{1059,6},rec1},
               {atom,{1059,24},bar}]}]},
           {clause,
            [{generated,true},{location,{1059,18}}],
            [{var,[{generated,true},{location,{1059,18}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{1059,18}}],
              {remote,
               [{generated,true},{location,{1059,18}}],
               {atom,[{generated,true},{location,{1059,18}}],erlang},
               {atom,[{generated,true},{location,{1059,18}}],error}},
              [{tuple,
                [{generated,true},{location,{1059,18}}],
                [{atom,[{generated,true},{location,{1059,18}}],badrecord},
                 {var,{1059,6},rec1}]}]}]}]}]}]}},
    {debug_line,1061,628},
    {'case',
     {1061,4},
     {atom,{1061,9},ok},
     [{clause,
       {1062,4},
       [{var,{1062,4},'_'}],
       [],
       [{debug_line,1063,629},
        {'case',
         {1063,6},
         {'catch',
          {1063,11},
          {call,{1063,17},{atom,{1063,17},handle_info_ok},[]}},
         [{clause,
           {1064,6},
           [{atom,{1064,6},ok}],
           [],
           [{debug_line,1065,630},
            {tuple,
             {1065,8},
             [{atom,{1065,9},stop},{var,{1065,15},'State'}]}]}]}]}]}]}]}.
{function,{1069,1},
          handle_info_ok,0,
          [{clause,{1069,1},
                   [],
                   [[{call,{1069,1},
                           {remote,{1069,1},
                                   {atom,{1069,1},fake},
                                   {atom,{1069,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1069,631},{atom,{1069,1},ignore}]},
           {clause,{1069,1},
                   [],[],
                   [{debug_line,1069,632},{atom,{1069,21},ok}]}]}.
{function,
 {1071,1},
 catch_in_catch,1,
 [{clause,
   {1071,1},
   [{var,{1071,1},'_'}],
   [[{call,
      {1071,1},
      {remote,{1071,1},{atom,{1071,1},fake},{atom,{1071,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1071,633},{atom,{1071,1},ignore}]},
  {clause,
   {1071,1},
   [{var,{1071,18},'_Config'}],
   [],
   [{debug_line,1072,634},
    {call,
     {1072,5},
     {remote,{1072,5},{atom,{1072,5},erlang},{atom,{1072,5},process_flag}},
     [{atom,{1072,18},trap_exit},{atom,{1072,29},true}]},
    {debug_line,1073,635},
    {match,
     {1073,5},
     {var,{1073,5},'Pid'},
     {call,
      {1073,11},
      {remote,{1073,11},{atom,{1073,11},erlang},{atom,{1073,11},spawn_link}},
      [{block,0,
        [{'fun',
          {1073,22},
          {clauses,
           [{clause,
             {1073,25},
             [],[],
             [{debug_line,1074,636},
              {call,
               {1074,9},
               {atom,{1074,9},catch_in_catch_init},
               [{atom,{1074,29},x}]},
              {debug_line,1075,637},
              {call,
               {1075,9},
               {remote,{1075,9},{atom,{1075,9},erlang},{atom,{1075,9},exit}},
               [{atom,{1075,14},good_exit}]}]}]}}]}]}},
    {debug_line,1077,638},
    {'receive',
     {1077,5},
     [{clause,
       {1078,2},
       [{tuple,
         {1078,2},
         [{atom,{1078,3},'EXIT'},
          {var,{1078,10},'Pid'},
          {atom,{1078,14},good_exit}]}],
       [],
       [{debug_line,1079,639},{atom,{1079,6},ok}]},
      {clause,
       {1080,2},
       [{var,{1080,2},'Other'}],
       [],
       [{debug_line,1081,640},
        {call,
         {1081,6},
         {remote,{1081,8},{atom,{1081,6},io},{atom,{1081,9},format}},
         [{block,0,[{string,{1081,16},"Unexpected: ~p\n"}]},
          {block,0,
           [{cons,{1081,36},{var,{1081,37},'Other'},{nil,{1081,42}}}]}]},
        {debug_line,1082,641},
        {atom,{1082,6},error}]}],
     {integer,{1083,11},32000},
     [{debug_line,1084,642},
      {call,
       {1084,6},
       {remote,{1084,8},{atom,{1084,6},io},{atom,{1084,9},format}},
       [{block,0,[{string,{1084,16},"No message received\n"}]}]},
      {debug_line,1085,643},
      {atom,{1085,6},error}]}]}]}.
{function,
    {1088,1},
    catch_in_catch_init,1,
    [{clause,
         {1088,1},
         [{var,{1088,1},'_'}],
         [[{call,
               {1088,1},
               {remote,
                   {1088,1},
                   {atom,{1088,1},fake},
                   {atom,{1088,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1088,644},{atom,{1088,1},ignore}]},
     {clause,
         {1088,1},
         [{var,{1088,23},'Param'}],
         [],
         [{debug_line,1089,645},
          {call,
              {1089,5},
              {remote,
                  {1089,5},
                  {atom,{1089,5},erlang},
                  {atom,{1089,5},process_flag}},
              [{atom,{1089,18},trap_exit},{atom,{1089,29},true}]},
          {debug_line,1091,646},
          {'catch',
              {1091,6},
              {block,
                  {1091,12},
                  [{debug_line,1092,647},
                   {call,
                       {1092,12},
                       {atom,{1092,12},id},
                       [{var,{1092,15},'Param'}]},
                   {debug_line,1093,648},
                   {'catch',
                       {1093,13},
                       {call,
                           {1093,19},
                           {remote,
                               {1093,19},
                               {atom,{1093,19},erlang},
                               {atom,{1093,19},exit}},
                           [{atom,{1093,24},bar}]}}]}},
          {debug_line,1096,649},
          {atom,{1096,5},ignore}]}]}.
{function,
 {1098,1},
 grab_bag,1,
 [{clause,
   {1098,1},
   [{var,{1098,1},'_'}],
   [[{call,
      {1098,1},
      {remote,{1098,1},{atom,{1098,1},fake},{atom,{1098,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1098,650},{atom,{1098,1},ignore}]},
  {clause,
   {1098,1},
   [{var,{1098,10},'_Config'}],
   [],
   [{debug_line,1100,651},
    {match,
     {1100,5},
     {var,{1100,5},'_'},
     {'fun',
      {1100,9},
      {clauses,[{clause,{1100,12},[],[],[{atom,{1100,18},ok}]}]}}},
    {debug_line,1101,652},
    {'try',
     {1101,5},
     [{debug_line,1102,653},
      {'fun',
       {1102,2},
       {clauses,[{clause,{1102,5},[],[],[{atom,{1102,11},ok}]}]}}],
     [],[],
     [{debug_line,1104,654},
      {'fun',
       {1104,2},
       {clauses,
        [{clause,
          {1104,5},
          [{tuple,{1104,6},[{var,{1104,7},'A'},{var,{1104,10},'B'}]}],
          [],
          [{op,{1104,19},'+',{var,{1104,17},'A'},{var,{1104,21},'B'}}]}]}}]},
    {debug_line,1108,655},
    {match,
     {1108,5},
     {var,{1108,5},'A'},
     {tuple,{1108,9},[{integer,{1108,10},6}]}},
    {debug_line,1109,656},
    {'try',
     {1109,5},
     [{debug_line,1110,657},
      {call,
       {1110,2},
       {remote,{1110,4},{atom,{1110,2},io},{atom,{1110,5},fwrite}},
       [{block,0,[{string,{1110,12},[]}]}]}],
     [],[],
     [{debug_line,1112,658},
      {'fun',
       {1112,2},
       {clauses,
        [{clause,
          {1112,6},
          [],[],
          [{debug_line,1113,659},
           {'fun',
            {1113,3},
            {clauses,
             [{clause,
               {1113,7},
               [],[],
               [{match,
                 {1113,13},
                 {tuple,{1113,13},[{var,{1113,14},'_'}]},
                 {var,{1113,19},'A'}}]}]}}]}]}}]},
    {debug_line,1118,660},
    {match,
     {1118,5},
     {integer,{1118,5},22},
     {'catch',{1118,11},{integer,{1118,17},22}}},
    {debug_line,1120,661},
    {call,
     {1120,5},
     {'fun',
      {1120,5},
      {clauses,
       [{clause,
         {1120,8},
         [],[],
         [{debug_line,1121,662},
          {match,
           {1121,13},
           {var,{1121,13},'F'},
           {call,
            {1121,17},
            {atom,{1121,17},grab_bag_1},
            [{atom,{1121,28},any}]}},
          {debug_line,1122,663},
          {match,
           {1122,13},
           {atom,{1122,13},true},
           {call,
            {1122,20},
            {remote,
             {1122,20},
             {atom,{1122,20},erlang},
             {atom,{1122,20},is_function}},
            [{var,{1122,32},'F'},{integer,{1122,35},1}]}}]}]}},
     []},
    {debug_line,1125,664},
    {match,
     {1125,5},
     {bin,{1125,5},[]},
     {call,{1125,12},{atom,{1125,12},grab_bag_2},[{atom,{1125,23},whatever}]}},
    {debug_line,1127,665},
    {match,
     {1127,5},
     {tuple,{1127,5},[{atom,{1127,6},'EXIT'},{var,{1127,13},'_'}]},
     {'catch',{1127,19},{call,{1127,25},{atom,{1127,25},grab_bag_3},[]}}},
    {debug_line,1129,666},
    {match,
     {1129,5},
     {atom,{1129,5},true},
     {call,{1129,12},{atom,{1129,12},grab_bag_4},[]}},
    {debug_line,1131,667},
    {atom,{1131,5},ok}]}]}.
{function,
    {1133,1},
    grab_bag_1,1,
    [{clause,
         {1133,1},
         [{var,{1133,1},'_'}],
         [[{call,
               {1133,1},
               {remote,
                   {1133,1},
                   {atom,{1133,1},fake},
                   {atom,{1133,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1133,668},{atom,{1133,1},ignore}]},
     {clause,
         {1133,1},
         [{var,{1133,12},'V'}],
         [],
         [{debug_line,1135,669},
          {'try',
              {1135,5},
              [{debug_line,1136,670},
               {'receive',
                   {1136,9},
                   [],
                   {integer,{1137,15},0},
                   [{debug_line,1141,671},
                    {'catch',{1141,17},{integer,{1141,23},22}}]},
               {debug_line,1146,672},
               {'fun',{1146,9},{function,id,1}}],
              [],
              [{clause,
                   {1150,9},
                   [{tuple,
                        {1150,9},
                        [{var,{1150,9},'_'},
                         {var,{1150,11},'V'},
                         {var,{1150,11},'_'}]}],
                   [],
                   [{debug_line,1151,673},{atom,{1151,13},ok}]}],
              []}]}]}.
{function,
    {1154,1},
    grab_bag_2,1,
    [{clause,
         {1154,1},
         [{var,{1154,1},'_'}],
         [[{call,
               {1154,1},
               {remote,
                   {1154,1},
                   {atom,{1154,1},fake},
                   {atom,{1154,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1154,674},{atom,{1154,1},ignore}]},
     {clause,
         {1154,1},
         [{var,{1154,12},'V'}],
         [],
         [{debug_line,1155,675},
          {'try',
              {1155,5},
              [{debug_line,1159,676},
               {'catch',{1159,9},{integer,{1159,15},22}},
               {debug_line,1164,677},
               {bc,{1164,9},
                   {block,0,[{integer,{1164,11},0}]},
                   [{block,0,[{atom,{1164,16},true}]},
                    {nil,{1164,16}},
                    {block,0,[{atom,{1164,27},true}]},
                    {generate,{1164,24},{map,{1164,20},[]},{nil,{1164,27}}}]}],
              [],
              [{clause,
                   {1168,9},
                   [{tuple,
                        {1168,9},
                        [{atom,{1168,9},error},
                         {var,{1168,15},'_'},
                         {var,{1168,15},'_'}]}],
                   [],
                   [{debug_line,1169,678},{var,{1169,13},'V'}]}],
              []}]}]}.
{function,
    {1172,1},
    grab_bag_3,0,
    [{clause,
         {1172,1},
         [],
         [[{call,
               {1172,1},
               {remote,
                   {1172,1},
                   {atom,{1172,1},fake},
                   {atom,{1172,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1172,679},{atom,{1172,1},ignore}]},
     {clause,
         {1172,1},
         [],[],
         [{debug_line,1183,680},
          {op,{1183,9},
              '=:=',
              {'try',
                  {1173,5},
                  [{debug_line,1173,681},{integer,{1173,9},2}],
                  [{clause,
                       {1174,9},
                       [{atom,{1174,9},true}],
                       [],
                       [{debug_line,1175,682},
                        {bc,{1175,13},
                            {block,0,
                                [{debug_line,1176,683},{string,{1176,15},[]}]},
                            [{block,0,[{atom,{1176,21},true}]},
                             {match,
                                 {1176,21},
                                 {cons,
                                     {1176,21},
                                     {var,{1176,22},'V0'},
                                     {nil,{1176,24}}},
                                 {atom,{1176,28},door}}]}]}],
                  [{clause,
                       {1179,9},
                       [{tuple,
                            {1179,9},
                            [{atom,{1179,9},error},
                             {atom,{1179,15},true},
                             {var,{1179,20},'V0'}]}],
                       [],
                       [{debug_line,1180,684},{nil,{1180,13}}]}],
                  []},
              {match,
                  {1183,14},
                  {var,{1183,14},'V0'},
                  {integer,{1183,19},42}}}]}]}.
{function,
 {1185,1},
 grab_bag_4,0,
 [{clause,
   {1185,1},
   [],
   [[{call,
      {1185,1},
      {remote,{1185,1},{atom,{1185,1},fake},{atom,{1185,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1185,685},{atom,{1185,1},ignore}]},
  {clause,
   {1185,1},
   [],[],
   [{debug_line,1186,686},
    {'try',
     {1186,5},
     [{debug_line,1187,687},
      {call,
       {1187,9},
       {remote,{1187,15},{atom,{1187,9},erlang},{atom,{1187,16},yield}},
       []}],
     [],[],
     [{debug_line,1191,688},
      {'catch',
       {1191,9},
       {match,
        {1191,15},
        {bin,{1191,15},[]},
        {call,
         {1191,22},
         {remote,{1191,22},{atom,{1191,22},erlang},{atom,{1191,22},size}},
         [{block,0,
           [{'catch',
             {1191,27},
             {match,
              {1191,34},
              {cons,{1191,34},{var,{1191,35},'_'},{var,{1191,39},'_'}},
              {atom,{1191,44},ok}}}]}]}}}]}]}]}.
{function,
 {1195,1},
 stacktrace,1,
 [{clause,
   {1195,1},
   [{var,{1195,1},'_'}],
   [[{call,
      {1195,1},
      {remote,{1195,1},{atom,{1195,1},fake},{atom,{1195,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1195,689},{atom,{1195,1},ignore}]},
  {clause,
   {1195,1},
   [{var,{1195,12},'_Config'}],
   [],
   [{debug_line,1196,690},
    {match,
     {1196,5},
     {var,{1196,5},'V'},
     {cons,
      {1196,9},
      {call,
       {1196,10},
       {remote,{1196,10},{atom,{1196,10},erlang},{atom,{1196,10},make_ref}},
       []},
      {call,
       {1196,21},
       {remote,{1196,21},{atom,{1196,21},erlang},{atom,{1196,21},self}},
       []}}},
    {debug_line,1197,691},
    {'case',
     {1197,5},
     {call,
      {1197,11},
      {remote,
       {1197,17},
       {atom,{1197,11},trycatch_SUITE},
       {atom,{1197,18},module_info}},
      [{atom,{1197,30},native}]},
     [{clause,
       {1198,9},
       [{atom,{1198,9},false}],
       [],
       [{debug_line,1199,692},
        {match,
         {1199,13},
         {tuple,
          {1199,13},
          [{atom,{1199,14},value2},
           {tuple,
            {1199,21},
            [{atom,{1199,22},caught1},
             {atom,{1199,30},badarg},
             {cons,
              {1199,37},
              {tuple,
               {1199,38},
               [{atom,{1199,39},erlang},
                {atom,{1199,46},abs},
                {cons,{1199,50},{var,{1199,51},'V'},{nil,{1199,52}}},
                {var,{1199,54},'_'}]},
              {var,{1199,57},'_'}}]}]},
         {call,
          {1200,17},
          {atom,{1200,17},stacktrace_1},
          [{block,0,
            [{debug_line,1200,693},
             {tuple,{1200,30},[{atom,{1200,31},abs},{var,{1200,37},'V'}]}]},
           {atom,{1200,41},error},
           {block,0,
            [{tuple,
              {1200,48},
              [{atom,{1200,49},value},{var,{1200,55},'V'}]}]}]}},
        {debug_line,1201,694},
        {match,
         {1201,13},
         {tuple,
          {1201,13},
          [{atom,{1201,14},caught2},
           {tuple,
            {1201,22},
            [{atom,{1201,23},error},{atom,{1201,29},badarith}]},
           {cons,
            {1201,39},
            {tuple,
             {1201,40},
             [{atom,{1201,41},erlang},
              {atom,{1201,48},'+'},
              {cons,
               {1201,52},
               {integer,{1201,53},0},
               {cons,{1201,55},{atom,{1201,55},a},{nil,{1201,56}}}},
              {var,{1201,58},'_'}]},
            {cons,
             {1202,40},
             {tuple,
              {1202,40},
              [{atom,{1202,42},trycatch_SUITE},
               {atom,{1202,49},my_add},
               {integer,{1202,56},2},
               {var,{1202,58},'_'}]},
             {var,{1202,61},'_'}}}]},
         {call,
          {1203,17},
          {atom,{1203,17},stacktrace_1},
          [{block,0,
            [{debug_line,1203,695},
             {tuple,
              {1203,30},
              [{atom,{1203,31},'div'},
               {tuple,
                {1203,37},
                [{integer,{1203,38},1},{integer,{1203,40},0}]}]}]},
           {atom,{1203,45},error},
           {block,0,
            [{tuple,
              {1203,52},
              [{atom,{1203,53},add},
               {tuple,
                {1203,59},
                [{integer,{1203,60},0},{atom,{1203,62},a}]}]}]}]}}]},
      {clause,
       {1204,9},
       [{atom,{1204,9},true}],
       [],
       [{debug_line,1205,696},
        {match,
         {1205,13},
         {tuple,
          {1205,13},
          [{atom,{1205,14},value2},
           {tuple,
            {1205,21},
            [{atom,{1205,22},caught1},
             {atom,{1205,30},badarg},
             {cons,
              {1205,37},
              {tuple,
               {1205,38},
               [{atom,{1205,40},trycatch_SUITE},
                {atom,{1205,47},my_abs},
                {integer,{1205,54},1},
                {var,{1205,56},'_'}]},
              {var,{1205,59},'_'}}]}]},
         {call,
          {1206,17},
          {atom,{1206,17},stacktrace_1},
          [{block,0,
            [{debug_line,1206,697},
             {tuple,{1206,30},[{atom,{1206,31},abs},{var,{1206,37},'V'}]}]},
           {atom,{1206,41},error},
           {block,0,
            [{tuple,
              {1206,48},
              [{atom,{1206,49},value},{var,{1206,55},'V'}]}]}]}},
        {debug_line,1207,698},
        {match,
         {1207,13},
         {tuple,
          {1207,13},
          [{atom,{1207,14},caught2},
           {tuple,
            {1207,22},
            [{atom,{1207,23},error},{atom,{1207,29},badarith}]},
           {cons,
            {1207,39},
            {tuple,
             {1207,40},
             [{atom,{1207,42},trycatch_SUITE},
              {atom,{1207,49},my_add},
              {integer,{1207,56},2},
              {var,{1207,58},'_'}]},
            {var,{1207,61},'_'}}]},
         {call,
          {1208,17},
          {atom,{1208,17},stacktrace_1},
          [{block,0,
            [{debug_line,1208,699},
             {tuple,
              {1208,30},
              [{atom,{1208,31},'div'},
               {tuple,
                {1208,37},
                [{integer,{1208,38},1},{integer,{1208,40},0}]}]}]},
           {atom,{1208,45},error},
           {block,0,
            [{tuple,
              {1208,52},
              [{atom,{1208,53},add},
               {tuple,
                {1208,59},
                [{integer,{1208,60},0},{atom,{1208,62},a}]}]}]}]}}]}]},
    {debug_line,1210,700},
    {match,
     {1210,5},
     {tuple,
      {1210,5},
      [{atom,{1210,6},caught2},
       {tuple,
        {1210,14},
        [{atom,{1210,15},error},
         {tuple,{1210,21},[{atom,{1210,22},try_clause},{var,{1210,33},'V'}]}]},
       {cons,
        {1210,37},
        {tuple,
         {1210,38},
         [{atom,{1210,40},trycatch_SUITE},
          {atom,{1210,47},stacktrace_1},
          {integer,{1210,60},3},
          {var,{1210,62},'_'}]},
        {var,{1210,65},'_'}}]},
     {call,
      {1211,9},
      {atom,{1211,9},stacktrace_1},
      [{block,0,
        [{debug_line,1211,701},
         {tuple,{1211,22},[{atom,{1211,23},value},{var,{1211,29},'V'}]}]},
       {atom,{1211,33},error},
       {block,0,
        [{tuple,{1211,40},[{atom,{1211,41},value},{var,{1211,47},'V'}]}]}]}},
    {debug_line,1212,702},
    {match,
     {1212,5},
     {tuple,
      {1212,5},
      [{atom,{1212,6},caught2},
       {tuple,{1212,14},[{atom,{1212,15},throw},{var,{1212,21},'V'}]},
       {cons,
        {1212,24},
        {tuple,
         {1212,25},
         [{atom,{1212,27},trycatch_SUITE},
          {atom,{1212,34},foo},
          {integer,{1212,38},1},
          {var,{1212,40},'_'}]},
        {var,{1212,43},'_'}}]},
     {call,
      {1213,9},
      {atom,{1213,9},stacktrace_1},
      [{block,0,
        [{debug_line,1213,703},
         {tuple,{1213,22},[{atom,{1213,23},value},{var,{1213,29},'V'}]}]},
       {atom,{1213,33},error},
       {block,0,
        [{tuple,{1213,40},[{atom,{1213,41},throw},{var,{1213,47},'V'}]}]}]}},
    {debug_line,1215,704},
    {'try',
     {1215,5},
     [{debug_line,1216,705},{call,{1216,9},{atom,{1216,9},stacktrace_2},[]}],
     [],
     [{clause,
       {1218,9},
       [{tuple,
         {1218,9},
         [{atom,{1218,9},error},
          {tuple,{1218,15},[{atom,{1218,16},badmatch},{var,{1218,25},'_'}]},
          {var,{1218,28},'Stk2'}]}],
       [],
       [{debug_line,1219,706},
        {match,
         {1219,13},
         {cons,
          {1219,13},
          {tuple,
           {1219,14},
           [{atom,{1219,16},trycatch_SUITE},
            {atom,{1219,23},stacktrace_2},
            {integer,{1219,36},0},
            {var,{1219,38},'_'}]},
          {cons,
           {1220,14},
           {tuple,
            {1220,14},
            [{atom,{1220,16},trycatch_SUITE},
             {atom,{1220,23},stacktrace},
             {integer,{1220,34},1},
             {var,{1220,36},'_'}]},
           {var,{1220,39},'_'}}},
         {var,{1220,44},'Stk2'}},
        {debug_line,1221,707},
        {atom,{1221,13},ok}]}],
     []},
    {debug_line,1224,708},
    {'try',
     {1224,5},
     [{debug_line,1225,709},
      {call,
       {1225,9},
       {atom,{1225,9},stacktrace_3},
       [{atom,{1225,22},a},{atom,{1225,25},b}]}],
     [],
     [{clause,
       {1227,9},
       [{tuple,
         {1227,9},
         [{atom,{1227,9},error},
          {atom,{1227,15},function_clause},
          {var,{1227,31},'Stk3'}]}],
       [],
       [{debug_line,1228,710},
        {'case',
         {1228,13},
         {call,
          {1228,18},
          {remote,
           {1228,23},
           {atom,{1228,18},lists},
           {atom,{1228,24},module_info}},
          [{atom,{1228,36},native}]},
         [{clause,
           {1229,17},
           [{atom,{1229,17},false}],
           [],
           [{debug_line,1230,711},
            {match,
             {1230,21},
             {cons,
              {1230,21},
              {tuple,
               {1230,22},
               [{atom,{1230,23},lists},
                {atom,{1230,29},prefix},
                {cons,
                 {1230,36},
                 {atom,{1230,37},a},
                 {cons,{1230,39},{atom,{1230,39},b},{nil,{1230,40}}}},
                {var,{1230,42},'_'}]},
              {var,{1230,45},'_'}},
             {var,{1230,50},'Stk3'}}]},
          {clause,
           {1231,17},
           [{atom,{1231,17},true}],
           [],
           [{debug_line,1232,712},
            {match,
             {1232,21},
             {cons,
              {1232,21},
              {tuple,
               {1232,22},
               [{atom,{1232,23},lists},
                {atom,{1232,29},prefix},
                {integer,{1232,36},2},
                {var,{1232,38},'_'}]},
              {var,{1232,41},'_'}},
             {var,{1232,46},'Stk3'}}]}]}]}],
     []},
    {debug_line,1236,713},
    {'try',
     {1236,5},
     [{debug_line,1237,714},
      {call,
       {1237,9},
       {remote,{1237,9},{atom,{1237,9},erlang},{atom,{1237,9},throw}},
       [{atom,{1237,15},x}]}],
     [],
     [{clause,
       {1239,9},
       [{tuple,
         {1239,9},
         [{atom,{1239,9},throw},
          {atom,{1239,15},x},
          {var,{1239,17},'_IntentionallyUnused'}]}],
       [],
       [{debug_line,1240,715},{atom,{1240,13},ok}]}],
     []}]}]}.
{function,
    {1243,1},
    stacktrace_1,3,
    [{clause,
         {1243,1},
         [{var,{1243,1},'_'},{var,{1243,1},'_'},{var,{1243,1},'_'}],
         [[{call,
               {1243,1},
               {remote,
                   {1243,1},
                   {atom,{1243,1},fake},
                   {atom,{1243,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1243,716},{atom,{1243,1},ignore}]},
     {clause,
         {1243,1},
         [{var,{1243,14},'X'},{var,{1243,17},'C1'},{var,{1243,21},'Y'}],
         [],
         [{debug_line,1244,717},
          {'try',
              {1244,5},
              [{'try',
                   {1244,9},
                   [{call,
                        {1244,13},
                        {atom,{1244,13},foo},
                        [{var,{1244,17},'X'}]}],
                   [{clause,
                        {1245,13},
                        [{var,{1245,13},'C1'}],
                        [],
                        [{debug_line,1245,718},{atom,{1245,19},value1}]}],
                   [{clause,
                        {1247,13},
                        [{tuple,
                             {1247,13},
                             [{var,{1247,13},'C1'},
                              {var,{1247,16},'D1'},
                              {var,{1247,19},'Stk1'}]}],
                        [],
                        [{debug_line,1248,719},
                         {tuple,
                             {1248,17},
                             [{atom,{1248,18},caught1},
                              {var,{1248,26},'D1'},
                              {var,{1248,29},'Stk1'}]}]}],
                   [{debug_line,1250,720},
                    {call,
                        {1250,13},
                        {atom,{1250,13},foo},
                        [{var,{1250,17},'Y'}]}]}],
              [{clause,
                   {1252,9},
                   [{var,{1252,9},'V2'}],
                   [],
                   [{debug_line,1252,721},
                    {tuple,
                        {1252,15},
                        [{atom,{1252,16},value2},{var,{1252,23},'V2'}]}]}],
              [{clause,
                   {1254,9},
                   [{tuple,
                        {1254,9},
                        [{var,{1254,9},'C2'},
                         {var,{1254,12},'D2'},
                         {var,{1254,15},'Stk2'}]}],
                   [],
                   [{debug_line,1255,722},
                    {tuple,
                        {1255,13},
                        [{atom,{1255,14},caught2},
                         {tuple,
                             {1255,22},
                             [{var,{1255,23},'C2'},{var,{1255,26},'D2'}]},
                         {var,{1255,30},'Stk2'}]}]}],
              []}]}]}.
{function,
    {1258,1},
    stacktrace_2,0,
    [{clause,
         {1258,1},
         [],
         [[{call,
               {1258,1},
               {remote,
                   {1258,1},
                   {atom,{1258,1},fake},
                   {atom,{1258,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1258,723},{atom,{1258,1},ignore}]},
     {clause,
         {1258,1},
         [],[],
         [{debug_line,1259,724},
          {match,
              {1259,5},
              {atom,{1259,5},ok},
              {call,
                  {1259,10},
                  {remote,
                      {1259,16},
                      {atom,{1259,10},erlang},
                      {atom,{1259,17},process_info}},
                  [{block,0,
                       [{call,
                            {1259,30},
                            {remote,
                                {1259,30},
                                {atom,{1259,30},erlang},
                                {atom,{1259,30},self}},
                            []}]},
                   {atom,{1259,38},current_function}]}},
          {debug_line,1260,725},
          {atom,{1260,5},ok}]}]}.
{function,
    {1262,1},
    stacktrace_3,2,
    [{clause,
         {1262,1},
         [{var,{1262,1},'_'},{var,{1262,1},'_'}],
         [[{call,
               {1262,1},
               {remote,
                   {1262,1},
                   {atom,{1262,1},fake},
                   {atom,{1262,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1262,726},{atom,{1262,1},ignore}]},
     {clause,
         {1262,1},
         [{var,{1262,14},'A'},{var,{1262,17},'B'}],
         [],
         [{debug_line,1263,727},
          {tuple,
              {1263,5},
              [{atom,{1263,6},ok},
               {call,
                   {1263,9},
                   {remote,
                       {1263,14},
                       {atom,{1263,9},lists},
                       {atom,{1263,15},prefix}},
                   [{var,{1263,22},'A'},{var,{1263,25},'B'}]}]}]}]}.
{function,
 {1265,1},
 nested_stacktrace,1,
 [{clause,
   {1265,1},
   [{var,{1265,1},'_'}],
   [[{call,
      {1265,1},
      {remote,{1265,1},{atom,{1265,1},fake},{atom,{1265,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1265,728},{atom,{1265,1},ignore}]},
  {clause,
   {1265,1},
   [{var,{1265,19},'_Config'}],
   [],
   [{debug_line,1266,729},
    {match,
     {1266,5},
     {var,{1266,5},'V'},
     {cons,
      {1266,9},
      {tuple,
       {1266,10},
       [{call,
         {1266,11},
         {remote,{1266,11},{atom,{1266,11},erlang},{atom,{1266,11},make_ref}},
         []}]},
      {cons,
       {1266,23},
       {call,
        {1266,24},
        {remote,{1266,24},{atom,{1266,24},erlang},{atom,{1266,24},self}},
        []},
       {nil,{1266,30}}}}},
    {debug_line,1267,730},
    {match,
     {1267,5},
     {atom,{1267,5},value1},
     {call,
      {1267,14},
      {atom,{1267,14},nested_stacktrace_1},
      [{block,0,
        [{tuple,
          {1267,34},
          [{tuple,
            {1267,35},
            [{atom,{1267,36},value},
             {tuple,{1267,42},[{var,{1267,43},'V'},{atom,{1267,45},x1}]}]},
           {atom,{1267,50},void},
           {tuple,{1267,55},[{var,{1267,56},'V'},{atom,{1267,58},x1}]}]}]},
       {block,0,
        [{debug_line,1268,731},
         {tuple,
          {1268,34},
          [{atom,{1268,35},void},
           {atom,{1268,40},void},
           {atom,{1268,45},void}]}]}]}},
    {debug_line,1269,732},
    {'case',
     {1269,5},
     {call,
      {1269,11},
      {remote,
       {1269,17},
       {atom,{1269,11},trycatch_SUITE},
       {atom,{1269,18},module_info}},
      [{atom,{1269,30},native}]},
     [{clause,
       {1270,9},
       [{atom,{1270,9},false}],
       [],
       [{debug_line,1271,733},
        {match,
         {1271,13},
         {tuple,
          {1271,13},
          [{atom,{1271,14},caught1},
           {cons,
            {1272,14},
            {tuple,
             {1272,15},
             [{atom,{1272,16},erlang},
              {atom,{1272,23},'+'},
              {cons,
               {1272,27},
               {var,{1272,28},'V'},
               {cons,{1272,30},{atom,{1272,30},x1},{nil,{1272,32}}}},
              {var,{1272,34},'_'}]},
            {cons,
             {1272,37},
             {tuple,
              {1272,37},
              [{atom,{1272,39},trycatch_SUITE},
               {atom,{1272,46},my_add},
               {integer,{1272,53},2},
               {var,{1272,55},'_'}]},
             {var,{1272,58},'_'}}},
           {atom,{1273,14},value2}]},
         {call,
          {1274,17},
          {atom,{1274,17},nested_stacktrace_1},
          [{block,0,
            [{debug_line,1274,734},
             {tuple,
              {1274,37},
              [{tuple,
                {1274,38},
                [{atom,{1274,39},add},
                 {tuple,{1274,45},[{var,{1274,46},'V'},{atom,{1274,48},x1}]}]},
               {atom,{1274,53},error},
               {atom,{1274,59},badarith}]}]},
           {block,0,
            [{debug_line,1275,735},
             {tuple,
              {1275,37},
              [{tuple,
                {1275,38},
                [{atom,{1275,39},value},
                 {tuple,{1275,45},[{var,{1275,46},'V'},{atom,{1275,48},x2}]}]},
               {atom,{1275,53},void},
               {tuple,
                {1275,58},
                [{var,{1275,59},'V'},{atom,{1275,61},x2}]}]}]}]}},
        {debug_line,1276,736},
        {match,
         {1276,13},
         {tuple,
          {1276,13},
          [{atom,{1276,14},caught1},
           {cons,
            {1277,14},
            {tuple,
             {1277,15},
             [{atom,{1277,16},erlang},
              {atom,{1277,23},'+'},
              {cons,
               {1277,27},
               {var,{1277,28},'V'},
               {cons,{1277,30},{atom,{1277,30},x1},{nil,{1277,32}}}},
              {var,{1277,34},'_'}]},
            {cons,
             {1277,37},
             {tuple,
              {1277,37},
              [{atom,{1277,39},trycatch_SUITE},
               {atom,{1277,46},my_add},
               {integer,{1277,53},2},
               {var,{1277,55},'_'}]},
             {var,{1277,58},'_'}}},
           {tuple,
            {1278,14},
            [{atom,{1278,15},caught2},
             {cons,
              {1278,23},
              {tuple,
               {1278,24},
               [{atom,{1278,25},erlang},
                {atom,{1278,32},abs},
                {cons,{1278,36},{var,{1278,37},'V'},{nil,{1278,38}}},
                {var,{1278,40},'_'}]},
              {var,{1278,43},'_'}}]}]},
         {call,
          {1279,17},
          {atom,{1279,17},nested_stacktrace_1},
          [{block,0,
            [{debug_line,1279,737},
             {tuple,
              {1279,37},
              [{tuple,
                {1279,38},
                [{atom,{1279,39},add},
                 {tuple,{1279,45},[{var,{1279,46},'V'},{atom,{1279,48},x1}]}]},
               {atom,{1279,53},error},
               {atom,{1279,59},badarith}]}]},
           {block,0,
            [{debug_line,1280,738},
             {tuple,
              {1280,37},
              [{tuple,{1280,38},[{atom,{1280,39},abs},{var,{1280,45},'V'}]},
               {atom,{1280,48},error},
               {atom,{1280,54},badarg}]}]}]}}]},
      {clause,
       {1281,9},
       [{atom,{1281,9},true}],
       [],
       [{debug_line,1282,739},
        {match,
         {1282,13},
         {tuple,
          {1282,13},
          [{atom,{1282,14},caught1},
           {cons,
            {1283,14},
            {tuple,
             {1283,15},
             [{atom,{1283,17},trycatch_SUITE},
              {atom,{1283,24},my_add},
              {integer,{1283,31},2},
              {var,{1283,33},'_'}]},
            {var,{1283,36},'_'}},
           {atom,{1284,14},value2}]},
         {call,
          {1285,17},
          {atom,{1285,17},nested_stacktrace_1},
          [{block,0,
            [{debug_line,1285,740},
             {tuple,
              {1285,37},
              [{tuple,
                {1285,38},
                [{atom,{1285,39},add},
                 {tuple,{1285,45},[{var,{1285,46},'V'},{atom,{1285,48},x1}]}]},
               {atom,{1285,53},error},
               {atom,{1285,59},badarith}]}]},
           {block,0,
            [{debug_line,1286,741},
             {tuple,
              {1286,37},
              [{tuple,
                {1286,38},
                [{atom,{1286,39},value},
                 {tuple,{1286,45},[{var,{1286,46},'V'},{atom,{1286,48},x2}]}]},
               {atom,{1286,53},void},
               {tuple,
                {1286,58},
                [{var,{1286,59},'V'},{atom,{1286,61},x2}]}]}]}]}},
        {debug_line,1287,742},
        {match,
         {1287,13},
         {tuple,
          {1287,13},
          [{atom,{1287,14},caught1},
           {cons,
            {1288,14},
            {tuple,
             {1288,15},
             [{atom,{1288,17},trycatch_SUITE},
              {atom,{1288,24},my_add},
              {integer,{1288,31},2},
              {var,{1288,33},'_'}]},
            {var,{1288,36},'_'}},
           {tuple,
            {1289,14},
            [{atom,{1289,15},caught2},
             {cons,
              {1289,23},
              {tuple,
               {1289,24},
               [{atom,{1289,26},trycatch_SUITE},
                {atom,{1289,33},my_abs},
                {integer,{1289,40},1},
                {var,{1289,42},'_'}]},
              {var,{1289,45},'_'}}]}]},
         {call,
          {1290,17},
          {atom,{1290,17},nested_stacktrace_1},
          [{block,0,
            [{debug_line,1290,743},
             {tuple,
              {1290,37},
              [{tuple,
                {1290,38},
                [{atom,{1290,39},add},
                 {tuple,{1290,45},[{var,{1290,46},'V'},{atom,{1290,48},x1}]}]},
               {atom,{1290,53},error},
               {atom,{1290,59},badarith}]}]},
           {block,0,
            [{debug_line,1291,744},
             {tuple,
              {1291,37},
              [{tuple,{1291,38},[{atom,{1291,39},abs},{var,{1291,45},'V'}]},
               {atom,{1291,48},error},
               {atom,{1291,54},badarg}]}]}]}}]}]},
    {debug_line,1293,745},
    {atom,{1293,5},ok}]}]}.
{function,
    {1295,1},
    nested_stacktrace_1,2,
    [{clause,
         {1295,1},
         [{var,{1295,1},'_'},{var,{1295,1},'_'}],
         [[{call,
               {1295,1},
               {remote,
                   {1295,1},
                   {atom,{1295,1},fake},
                   {atom,{1295,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1295,746},{atom,{1295,1},ignore}]},
     {clause,
         {1295,1},
         [{tuple,
              {1295,21},
              [{var,{1295,22},'X1'},
               {var,{1295,25},'C1'},
               {var,{1295,28},'V1'}]},
          {tuple,
              {1295,33},
              [{var,{1295,34},'X2'},
               {var,{1295,37},'C2'},
               {var,{1295,40},'V2'}]}],
         [],
         [{debug_line,1296,747},
          {'try',
              {1296,5},
              [{call,{1296,9},{atom,{1296,9},foo},[{var,{1296,13},'X1'}]}],
              [{clause,
                   {1297,9},
                   [{var,{1297,9},'V1'}],
                   [],
                   [{debug_line,1297,748},{atom,{1297,15},value1}]}],
              [{clause,
                   {1299,9},
                   [{tuple,
                        {1299,9},
                        [{var,{1299,9},'C1'},
                         {var,{1299,12},'V1'},
                         {var,{1299,15},'S1'}]}],
                   [],
                   [{debug_line,1300,749},
                    {match,
                        {1300,13},
                        {var,{1300,13},'T2'},
                        {'try',
                            {1300,18},
                            [{call,
                                 {1300,22},
                                 {atom,{1300,22},foo},
                                 [{var,{1300,26},'X2'}]}],
                            [{clause,
                                 {1301,22},
                                 [{var,{1301,22},'V2'}],
                                 [],
                                 [{debug_line,1301,750},
                                  {atom,{1301,28},value2}]}],
                            [{clause,
                                 {1303,22},
                                 [{tuple,
                                      {1303,22},
                                      [{var,{1303,22},'C2'},
                                       {var,{1303,25},'V2'},
                                       {var,{1303,28},'S2'}]}],
                                 [],
                                 [{debug_line,1304,751},
                                  {tuple,
                                      {1304,26},
                                      [{atom,{1304,27},caught2},
                                       {var,{1304,35},'S2'}]}]}],
                            []}},
                    {debug_line,1306,752},
                    {tuple,
                        {1306,13},
                        [{atom,{1306,14},caught1},
                         {var,{1306,22},'S1'},
                         {var,{1306,25},'T2'}]}]}],
              []}]}]}.
{function,
 {1309,1},
 raise,1,
 [{clause,
   {1309,1},
   [{var,{1309,1},'_'}],
   [[{call,
      {1309,1},
      {remote,{1309,1},{atom,{1309,1},fake},{atom,{1309,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1309,753},{atom,{1309,1},ignore}]},
  {clause,
   {1309,1},
   [{var,{1309,7},'_Config'}],
   [],
   [{debug_line,1310,754},
    {call,
     {1310,5},
     {atom,{1310,5},test_raise},
     [{block,0,
       [{'fun',
         {1310,16},
         {clauses,
          [{clause,
            {1310,19},
            [],[],
            [{call,
              {1310,25},
              {remote,{1310,25},{atom,{1310,25},erlang},{atom,{1310,25},exit}},
              [{block,0,
                [{tuple,
                  {1310,30},
                  [{atom,{1310,31},exit},{atom,{1310,36},tuple}]}]}]}]}]}}]}]},
    {debug_line,1311,755},
    {call,
     {1311,5},
     {atom,{1311,5},test_raise},
     [{block,0,
       [{'fun',
         {1311,16},
         {clauses,
          [{clause,
            {1311,19},
            [],[],
            [{call,
              {1311,25},
              {remote,{1311,25},{atom,{1311,25},erlang},{atom,{1311,25},abs}},
              [{block,0,
                [{call,
                  {1311,29},
                  {atom,{1311,29},id},
                  [{atom,{1311,32},x}]}]}]}]}]}}]}]},
    {debug_line,1312,756},
    {call,
     {1312,5},
     {atom,{1312,5},test_raise},
     [{block,0,
       [{'fun',
         {1312,16},
         {clauses,
          [{clause,
            {1312,19},
            [],[],
            [{call,
              {1312,25},
              {remote,
               {1312,25},
               {atom,{1312,25},erlang},
               {atom,{1312,25},throw}},
              [{block,0,
                [{tuple,
                  {1312,31},
                  [{atom,{1312,32},was},{atom,{1312,36},thrown}]}]}]}]}]}}]}]},
    {debug_line,1314,757},
    {match,
     {1314,5},
     {atom,{1314,5},badarg},
     {call,
      {1314,14},
      {atom,{1314,14},bad_raise},
      [{block,0,
        [{'fun',
          {1314,24},
          {clauses,
           [{clause,
             {1314,27},
             [],[],
             [{call,
               {1314,33},
               {remote,{1314,33},{atom,{1314,33},erlang},{atom,{1314,33},abs}},
               [{block,0,
                 [{call,
                   {1314,37},
                   {atom,{1314,37},id},
                   [{atom,{1314,40},x}]}]}]}]}]}}]}]}},
    {debug_line,1316,758},
    {match,
     {1316,5},
     {atom,{1316,5},error},
     {call,
      {1316,13},
      {atom,{1316,13},stk_used_in_bin_size},
      [{block,0,
        [{bin,
          {1316,34},
          [{bin_element,
            {1316,36},
            {integer,{1316,36},0},
            {integer,{1316,38},42},
            default}]}]}]}},
    {debug_line,1317,759},
    {atom,{1317,5},ok}]}]}.
{function,
    {1319,1},
    stk_used_in_bin_size,1,
    [{clause,
         {1319,1},
         [{var,{1319,1},'_'}],
         [[{call,
               {1319,1},
               {remote,
                   {1319,1},
                   {atom,{1319,1},fake},
                   {atom,{1319,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1319,760},{atom,{1319,1},ignore}]},
     {clause,
         {1319,1},
         [{var,{1319,22},'Bin'}],
         [],
         [{debug_line,1320,761},
          {'try',
              {1320,5},
              [{debug_line,1321,762},
               {call,
                   {1321,9},
                   {remote,
                       {1321,9},
                       {atom,{1321,9},erlang},
                       {atom,{1321,9},throw}},
                   [{atom,{1321,15},fail}]}],
              [],
              [{clause,
                   {1323,9},
                   [{tuple,
                        {1323,9},
                        [{atom,{1323,9},throw},
                         {atom,{1323,15},fail},
                         {var,{1323,20},'Stk'}]}],
                   [],
                   [{debug_line,1326,763},
                    {'case',
                        {1326,13},
                        {var,{1326,18},'Bin'},
                        [{clause,
                             {1327,17},
                             [{bin,
                                  {1327,17},
                                  [{bin_element,
                                       {1327,19},
                                       {integer,{1327,19},0},
                                       {var,{1327,21},'Stk'},
                                       default}]}],
                             [],
                             [{debug_line,1327,764},{atom,{1327,30},ok}]},
                         {clause,
                             {1328,17},
                             [{var,{1328,17},'_'}],
                             [],
                             [{debug_line,1328,765},
                              {atom,{1328,22},error}]}]}]}],
              []}]}]}.
{function,
    {1332,1},
    bad_raise,1,
    [{clause,
         {1332,1},
         [{var,{1332,1},'_'}],
         [[{call,
               {1332,1},
               {remote,
                   {1332,1},
                   {atom,{1332,1},fake},
                   {atom,{1332,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1332,766},{atom,{1332,1},ignore}]},
     {clause,
         {1332,1},
         [{var,{1332,11},'Expr'}],
         [],
         [{debug_line,1333,767},
          {'try',
              {1333,5},
              [{debug_line,1334,768},{call,{1334,9},{var,{1334,9},'Expr'},[]}],
              [],
              [{clause,
                   {1336,9},
                   [{tuple,
                        {1336,9},
                        [{var,{1336,9},'_'},
                         {var,{1336,11},'E'},
                         {var,{1336,13},'Stk'}]}],
                   [],
                   [{debug_line,1337,769},
                    {call,
                        {1337,13},
                        {remote,
                            {1337,19},
                            {atom,{1337,13},erlang},
                            {atom,{1337,20},raise}},
                        [{atom,{1337,26},bad_class},
                         {var,{1337,37},'E'},
                         {var,{1337,40},'Stk'}]}]}],
              []}]}]}.
{function,{1340,1},
          test_raise,1,
          [{clause,{1340,1},
                   [{var,{1340,1},'_'}],
                   [[{call,{1340,1},
                           {remote,{1340,1},
                                   {atom,{1340,1},fake},
                                   {atom,{1340,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1340,770},{atom,{1340,1},ignore}]},
           {clause,{1340,1},
                   [{var,{1340,12},'Expr'}],
                   [],
                   [{debug_line,1341,771},
                    {call,{1341,5},
                          {atom,{1341,5},test_raise_1},
                          [{var,{1341,18},'Expr'}]},
                    {debug_line,1342,772},
                    {call,{1342,5},
                          {atom,{1342,5},test_raise_2},
                          [{var,{1342,18},'Expr'}]},
                    {debug_line,1343,773},
                    {call,{1343,5},
                          {atom,{1343,5},test_raise_3},
                          [{var,{1343,18},'Expr'}]},
                    {debug_line,1344,774},
                    {call,{1344,5},
                          {atom,{1344,5},test_raise_4},
                          [{var,{1344,18},'Expr'}]}]}]}.
{function,
    {1346,1},
    test_raise_1,1,
    [{clause,
         {1346,1},
         [{var,{1346,1},'_'}],
         [[{call,
               {1346,1},
               {remote,
                   {1346,1},
                   {atom,{1346,1},fake},
                   {atom,{1346,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1346,775},{atom,{1346,1},ignore}]},
     {clause,
         {1346,1},
         [{var,{1346,14},'Expr'}],
         [],
         [{debug_line,1347,776},
          {call,
              {1347,5},
              {remote,{1347,5},{atom,{1347,5},erlang},{atom,{1347,5},erase}},
              [{atom,{1347,11},exception}]},
          {debug_line,1348,777},
          {'try',
              {1348,5},
              [{debug_line,1349,778},
               {call,
                   {1349,9},
                   {atom,{1349,9},do_test_raise_1},
                   [{var,{1349,25},'Expr'}]}],
              [],
              [{clause,
                   {1351,9},
                   [{tuple,
                        {1351,9},
                        [{var,{1351,9},'C'},
                         {var,{1351,11},'E'},
                         {var,{1351,13},'Stk'}]}],
                   [],
                   [{debug_line,1352,779},
                    {match,
                        {1352,13},
                        {tuple,
                            {1352,13},
                            [{var,{1352,14},'C'},
                             {var,{1352,16},'E'},
                             {var,{1352,18},'Stk'}]},
                        {call,
                            {1352,25},
                            {remote,
                                {1352,25},
                                {atom,{1352,25},erlang},
                                {atom,{1352,25},erase}},
                            [{atom,{1352,31},exception}]}}]}],
              []}]}]}.
{function,
    {1355,1},
    do_test_raise_1,1,
    [{clause,
         {1355,1},
         [{var,{1355,1},'_'}],
         [[{call,
               {1355,1},
               {remote,
                   {1355,1},
                   {atom,{1355,1},fake},
                   {atom,{1355,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1355,780},{atom,{1355,1},ignore}]},
     {clause,
         {1355,1},
         [{var,{1355,17},'Expr'}],
         [],
         [{debug_line,1356,781},
          {'try',
              {1356,5},
              [{debug_line,1357,782},{call,{1357,9},{var,{1357,9},'Expr'},[]}],
              [],
              [{clause,
                   {1359,9},
                   [{tuple,
                        {1359,9},
                        [{var,{1359,9},'C'},
                         {var,{1359,11},'E'},
                         {var,{1359,13},'Stk'}]}],
                   [],
                   [{debug_line,1361,783},
                    {call,
                        {1361,13},
                        {remote,
                            {1361,13},
                            {atom,{1361,13},erlang},
                            {atom,{1361,13},put}},
                        [{atom,{1361,17},exception},
                         {block,0,
                             [{tuple,
                                  {1361,28},
                                  [{var,{1361,29},'C'},
                                   {var,{1361,31},'E'},
                                   {var,{1361,33},'Stk'}]}]}]},
                    {debug_line,1362,784},
                    {call,
                        {1362,13},
                        {remote,
                            {1362,19},
                            {atom,{1362,13},erlang},
                            {atom,{1362,20},raise}},
                        [{var,{1362,26},'C'},
                         {var,{1362,29},'E'},
                         {var,{1362,32},'Stk'}]}]}],
              []}]}]}.
{function,
    {1365,1},
    test_raise_2,1,
    [{clause,
         {1365,1},
         [{var,{1365,1},'_'}],
         [[{call,
               {1365,1},
               {remote,
                   {1365,1},
                   {atom,{1365,1},fake},
                   {atom,{1365,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1365,785},{atom,{1365,1},ignore}]},
     {clause,
         {1365,1},
         [{var,{1365,14},'Expr'}],
         [],
         [{debug_line,1366,786},
          {call,
              {1366,5},
              {remote,{1366,5},{atom,{1366,5},erlang},{atom,{1366,5},erase}},
              [{atom,{1366,11},exception}]},
          {debug_line,1367,787},
          {'try',
              {1367,5},
              [{debug_line,1368,788},
               {call,
                   {1368,9},
                   {atom,{1368,9},do_test_raise_2},
                   [{var,{1368,25},'Expr'}]}],
              [],
              [{clause,
                   {1370,9},
                   [{tuple,
                        {1370,9},
                        [{var,{1370,9},'C'},
                         {var,{1370,11},'E'},
                         {var,{1370,13},'Stk'}]}],
                   [],
                   [{debug_line,1371,789},
                    {match,
                        {1371,13},
                        {tuple,
                            {1371,13},
                            [{var,{1371,14},'C'},{var,{1371,16},'E'}]},
                        {call,
                            {1371,21},
                            {remote,
                                {1371,21},
                                {atom,{1371,21},erlang},
                                {atom,{1371,21},erase}},
                            [{atom,{1371,27},exception}]}},
                    {debug_line,1372,790},
                    {'try',
                        {1372,13},
                        [{debug_line,1373,791},
                         {call,{1373,17},{var,{1373,17},'Expr'},[]}],
                        [],
                        [{clause,
                             {1375,17},
                             [{tuple,
                                  {1375,17},
                                  [{var,{1375,17},'_'},
                                   {var,{1375,19},'_'},
                                   {var,{1375,21},'S'}]}],
                             [],
                             [{debug_line,1376,792},
                              {match,
                                  {1376,21},
                                  {cons,
                                      {1376,21},
                                      {var,{1376,22},'StkTop'},
                                      {var,{1376,29},'_'}},
                                  {var,{1376,34},'S'}},
                              {debug_line,1377,793},
                              {match,
                                  {1377,21},
                                  {cons,
                                      {1377,21},
                                      {var,{1377,22},'StkTop'},
                                      {var,{1377,29},'_'}},
                                  {var,{1377,34},'Stk'}}]}],
                        []}]}],
              []}]}]}.
{function,
    {1381,1},
    do_test_raise_2,1,
    [{clause,
         {1381,1},
         [{var,{1381,1},'_'}],
         [[{call,
               {1381,1},
               {remote,
                   {1381,1},
                   {atom,{1381,1},fake},
                   {atom,{1381,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1381,794},{atom,{1381,1},ignore}]},
     {clause,
         {1381,1},
         [{var,{1381,17},'Expr'}],
         [],
         [{debug_line,1382,795},
          {'try',
              {1382,5},
              [{debug_line,1383,796},{call,{1383,9},{var,{1383,9},'Expr'},[]}],
              [],
              [{clause,
                   {1385,9},
                   [{tuple,
                        {1385,9},
                        [{var,{1385,9},'C'},
                         {var,{1385,11},'E'},
                         {var,{1385,13},'Stk'}]}],
                   [],
                   [{debug_line,1389,797},
                    {call,
                        {1389,13},
                        {remote,
                            {1389,13},
                            {atom,{1389,13},erlang},
                            {atom,{1389,13},put}},
                        [{atom,{1389,17},exception},
                         {block,0,
                             [{tuple,
                                  {1389,28},
                                  [{var,{1389,29},'C'},
                                   {var,{1389,31},'E'}]}]}]},
                    {debug_line,1390,798},
                    {call,
                        {1390,13},
                        {remote,
                            {1390,19},
                            {atom,{1390,13},erlang},
                            {atom,{1390,20},raise}},
                        [{var,{1390,26},'C'},
                         {var,{1390,29},'E'},
                         {var,{1390,32},'Stk'}]}]}],
              []}]}]}.
{function,
    {1393,1},
    test_raise_3,1,
    [{clause,
         {1393,1},
         [{var,{1393,1},'_'}],
         [[{call,
               {1393,1},
               {remote,
                   {1393,1},
                   {atom,{1393,1},fake},
                   {atom,{1393,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1393,799},{atom,{1393,1},ignore}]},
     {clause,
         {1393,1},
         [{var,{1393,14},'Expr'}],
         [],
         [{debug_line,1394,800},
          {'try',
              {1394,5},
              [{debug_line,1395,801},
               {call,
                   {1395,9},
                   {atom,{1395,9},do_test_raise_3},
                   [{var,{1395,25},'Expr'}]}],
              [],
              [{clause,
                   {1397,9},
                   [{tuple,
                        {1397,9},
                        [{atom,{1397,9},exit},
                         {tuple,
                             {1397,14},
                             [{atom,{1397,15},exception},
                              {var,{1397,25},'C'},
                              {var,{1397,27},'E'}]},
                         {var,{1397,30},'Stk'}]}],
                   [],
                   [{debug_line,1398,802},
                    {'try',
                        {1398,13},
                        [{debug_line,1399,803},
                         {call,{1399,17},{var,{1399,17},'Expr'},[]}],
                        [],
                        [{clause,
                             {1401,17},
                             [{tuple,
                                  {1401,17},
                                  [{var,{1401,17},'C'},
                                   {var,{1401,19},'E'},
                                   {var,{1401,21},'S'}]}],
                             [],
                             [{debug_line,1402,804},
                              {match,
                                  {1402,21},
                                  {cons,
                                      {1402,21},
                                      {var,{1402,22},'StkTop'},
                                      {var,{1402,29},'_'}},
                                  {var,{1402,34},'S'}},
                              {debug_line,1403,805},
                              {match,
                                  {1403,21},
                                  {cons,
                                      {1403,21},
                                      {var,{1403,22},'StkTop'},
                                      {var,{1403,29},'_'}},
                                  {var,{1403,34},'Stk'}}]}],
                        []}]}],
              []}]}]}.
{function,
    {1407,1},
    do_test_raise_3,1,
    [{clause,
         {1407,1},
         [{var,{1407,1},'_'}],
         [[{call,
               {1407,1},
               {remote,
                   {1407,1},
                   {atom,{1407,1},fake},
                   {atom,{1407,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1407,806},{atom,{1407,1},ignore}]},
     {clause,
         {1407,1},
         [{var,{1407,17},'Expr'}],
         [],
         [{debug_line,1408,807},
          {'try',
              {1408,5},
              [{debug_line,1409,808},{call,{1409,9},{var,{1409,9},'Expr'},[]}],
              [],
              [{clause,
                   {1411,9},
                   [{tuple,
                        {1411,9},
                        [{var,{1411,9},'C'},
                         {var,{1411,11},'E'},
                         {var,{1411,13},'Stk'}]}],
                   [],
                   [{debug_line,1415,809},
                    {call,
                        {1415,13},
                        {remote,
                            {1415,19},
                            {atom,{1415,13},erlang},
                            {atom,{1415,20},raise}},
                        [{atom,{1415,26},exit},
                         {block,0,
                             [{tuple,
                                  {1415,32},
                                  [{atom,{1415,33},exception},
                                   {var,{1415,43},'C'},
                                   {var,{1415,45},'E'}]}]},
                         {var,{1415,49},'Stk'}]}]}],
              []}]}]}.
{function,
    {1418,1},
    test_raise_4,1,
    [{clause,
         {1418,1},
         [{var,{1418,1},'_'}],
         [[{call,
               {1418,1},
               {remote,
                   {1418,1},
                   {atom,{1418,1},fake},
                   {atom,{1418,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1418,810},{atom,{1418,1},ignore}]},
     {clause,
         {1418,1},
         [{var,{1418,14},'Expr'}],
         [],
         [{debug_line,1419,811},
          {'try',
              {1419,5},
              [{debug_line,1420,812},
               {call,
                   {1420,9},
                   {atom,{1420,9},do_test_raise_4},
                   [{var,{1420,25},'Expr'}]}],
              [],
              [{clause,
                   {1422,9},
                   [{tuple,
                        {1422,9},
                        [{atom,{1422,9},exit},
                         {tuple,
                             {1422,14},
                             [{atom,{1422,15},exception},
                              {var,{1422,25},'C'},
                              {var,{1422,27},'E'},
                              {var,{1422,29},'StkTerm'}]},
                         {var,{1422,38},'Stk'}]}],
                   [],
                   [{debug_line,1424,813},
                    {match,
                        {1424,13},
                        {atom,{1424,13},true},
                        {op,{1424,25},
                            '=:=',
                            {var,{1424,21},'Stk'},
                            {var,{1424,29},'StkTerm'}}},
                    {debug_line,1425,814},
                    {'try',
                        {1425,13},
                        [{debug_line,1426,815},
                         {call,{1426,17},{var,{1426,17},'Expr'},[]}],
                        [],
                        [{clause,
                             {1428,17},
                             [{tuple,
                                  {1428,17},
                                  [{var,{1428,17},'C'},
                                   {var,{1428,19},'E'},
                                   {var,{1428,21},'S'}]}],
                             [],
                             [{debug_line,1429,816},
                              {match,
                                  {1429,21},
                                  {cons,
                                      {1429,21},
                                      {var,{1429,22},'StkTop'},
                                      {var,{1429,29},'_'}},
                                  {var,{1429,34},'S'}},
                              {debug_line,1430,817},
                              {match,
                                  {1430,21},
                                  {cons,
                                      {1430,21},
                                      {var,{1430,22},'StkTop'},
                                      {var,{1430,29},'_'}},
                                  {var,{1430,34},'Stk'}}]}],
                        []}]}],
              []}]}]}.
{function,
    {1434,1},
    do_test_raise_4,1,
    [{clause,
         {1434,1},
         [{var,{1434,1},'_'}],
         [[{call,
               {1434,1},
               {remote,
                   {1434,1},
                   {atom,{1434,1},fake},
                   {atom,{1434,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1434,818},{atom,{1434,1},ignore}]},
     {clause,
         {1434,1},
         [{var,{1434,17},'Expr'}],
         [],
         [{debug_line,1435,819},
          {'try',
              {1435,5},
              [{debug_line,1436,820},{call,{1436,9},{var,{1436,9},'Expr'},[]}],
              [],
              [{clause,
                   {1438,9},
                   [{tuple,
                        {1438,9},
                        [{var,{1438,9},'C'},
                         {var,{1438,11},'E'},
                         {var,{1438,13},'Stk'}]}],
                   [],
                   [{debug_line,1440,821},
                    {call,
                        {1440,13},
                        {remote,
                            {1440,19},
                            {atom,{1440,13},erlang},
                            {atom,{1440,20},raise}},
                        [{atom,{1440,26},exit},
                         {block,0,
                             [{tuple,
                                  {1440,32},
                                  [{atom,{1440,33},exception},
                                   {var,{1440,43},'C'},
                                   {var,{1440,45},'E'},
                                   {var,{1440,47},'Stk'}]}]},
                         {var,{1440,53},'Stk'}]}]}],
              []}]}]}.
{function,{1443,1},
          no_return_in_try_block,1,
          [{clause,{1443,1},
                   [{var,{1443,1},'_'}],
                   [[{call,{1443,1},
                           {remote,{1443,1},
                                   {atom,{1443,1},fake},
                                   {atom,{1443,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1443,822},{atom,{1443,1},ignore}]},
           {clause,{1443,1},
                   [{var,{1443,24},'Config'}],
                   [[{call,{1443,37},
                           {remote,{1443,37},
                                   {atom,{1443,37},erlang},
                                   {atom,{1443,37},is_list}},
                           [{var,{1443,45},'Config'}]}]],
                   [{debug_line,1444,823},
                    {match,{1444,5},
                           {float,{1444,5},1.0},
                           {call,{1444,11},
                                 {atom,{1444,11},no_return_in_try_block_1},
                                 [{integer,{1444,36},0}]}},
                    {debug_line,1445,824},
                    {match,{1445,5},
                           {float,{1445,5},1.0},
                           {call,{1445,11},
                                 {atom,{1445,11},no_return_in_try_block_1},
                                 [{float,{1445,36},0.0}]}},
                    {debug_line,1447,825},
                    {match,{1447,5},
                           {atom,{1447,5},gurka},
                           {call,{1447,13},
                                 {atom,{1447,13},no_return_in_try_block_1},
                                 [{atom,{1447,38},gurka}]}},
                    {debug_line,1448,826},
                    {match,{1448,5},
                           {nil,{1448,5}},
                           {call,{1448,10},
                                 {atom,{1448,10},no_return_in_try_block_1},
                                 [{nil,{1448,35}}]}},
                    {debug_line,1450,827},
                    {atom,{1450,5},ok}]}]}.
{function,
    {1452,1},
    no_return_in_try_block_1,1,
    [{clause,
         {1452,1},
         [{var,{1452,1},'_'}],
         [[{call,
               {1452,1},
               {remote,
                   {1452,1},
                   {atom,{1452,1},fake},
                   {atom,{1452,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1452,828},{atom,{1452,1},ignore}]},
     {clause,
         {1452,1},
         [{var,{1452,26},'H'}],
         [],
         [{debug_line,1453,829},
          {'try',
              {1453,5},
              [{debug_line,1454,830},
               {match,
                   {1454,9},
                   {var,{1454,9},'Float'},
                   {'if',
                       {1454,17},
                       [{clause,
                            {1455,21},
                            [],
                            [[{call,
                                  {1455,21},
                                  {remote,
                                      {1455,21},
                                      {atom,{1455,21},erlang},
                                      {atom,{1455,21},is_number}},
                                  [{var,{1455,31},'H'}]}]],
                            [{debug_line,1455,831},
                             {call,
                                 {1455,37},
                                 {remote,
                                     {1455,37},
                                     {atom,{1455,37},erlang},
                                     {atom,{1455,37},float}},
                                 [{var,{1455,43},'H'}]}]},
                        {clause,
                            {1456,21},
                            [],
                            [[{atom,{1456,21},true}]],
                            [{debug_line,1456,832},
                             {call,
                                 {1456,29},
                                 {atom,{1456,29},no_return},
                                 []}]}]}},
               {debug_line,1458,833},
               {op,{1458,15},
                   '+',
                   {var,{1458,9},'Float'},
                   {integer,{1458,17},1}}],
              [],
              [{clause,
                   {1460,9},
                   [{tuple,
                        {1460,9},
                        [{atom,{1460,9},throw},
                         {atom,{1460,15},no_return},
                         {var,{1460,15},'_'}]}],
                   [],
                   [{debug_line,1460,834},{var,{1460,28},'H'}]}],
              []}]}]}.
{function,{1463,1},
          no_return,0,
          [{clause,{1463,1},
                   [],
                   [[{call,{1463,1},
                           {remote,{1463,1},
                                   {atom,{1463,1},fake},
                                   {atom,{1463,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1463,835},{atom,{1463,1},ignore}]},
           {clause,{1463,1},
                   [],[],
                   [{debug_line,1463,836},
                    {call,{1463,16},
                          {remote,{1463,16},
                                  {atom,{1463,16},erlang},
                                  {atom,{1463,16},throw}},
                          [{atom,{1463,22},no_return}]}]}]}.
{function,
 {1465,1},
 expression_export,1,
 [{clause,
   {1465,1},
   [{var,{1465,1},'_'}],
   [[{call,
      {1465,1},
      {remote,{1465,1},{atom,{1465,1},fake},{atom,{1465,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1465,837},{atom,{1465,1},ignore}]},
  {clause,
   {1465,1},
   [{var,{1465,19},'_Config'}],
   [],
   [{debug_line,1466,838},
    {match,
     {1466,5},
     {integer,{1466,5},42},
     {call,{1466,10},{atom,{1466,10},expr_export_1},[]}},
    {debug_line,1467,839},
    {match,
     {1467,5},
     {integer,{1467,5},42},
     {call,{1467,10},{atom,{1467,10},expr_export_2},[]}},
    {debug_line,1469,840},
    {match,
     {1469,5},
     {integer,{1469,5},42},
     {call,
      {1469,10},
      {atom,{1469,10},expr_export_3},
      [{block,0,
        [{'fun',
          {1469,24},
          {clauses,[{clause,{1469,27},[],[],[{atom,{1469,33},bar}]}]}}]}]}},
    {debug_line,1470,841},
    {match,
     {1470,5},
     {atom,{1470,5},beer},
     {call,
      {1470,12},
      {atom,{1470,12},expr_export_3},
      [{block,0,
        [{'fun',
          {1470,26},
          {clauses,[{clause,{1470,29},[],[],[{atom,{1470,35},pub}]}]}}]}]}},
    {debug_line,1471,842},
    {match,
     {1471,5},
     {tuple,{1471,5},[{atom,{1471,6},error},{atom,{1471,12},failed}]},
     {call,
      {1471,22},
      {atom,{1471,22},expr_export_3},
      [{block,0,
        [{'fun',
          {1471,36},
          {clauses,
           [{clause,
             {1471,39},
             [],[],
             [{call,
               {1471,45},
               {remote,
                {1471,45},
                {atom,{1471,45},erlang},
                {atom,{1471,45},error}},
               [{atom,{1471,51},failed}]}]}]}}]}]}},
    {debug_line,1472,843},
    {match,
     {1472,5},
     {atom,{1472,5},is_42},
     {call,
      {1472,13},
      {atom,{1472,13},expr_export_3},
      [{block,0,
        [{'fun',
          {1472,27},
          {clauses,[{clause,{1472,30},[],[],[{integer,{1472,36},42}]}]}}]}]}},
    {debug_line,1473,844},
    {match,
     {1473,5},
     {atom,{1473,5},no_good},
     {call,
      {1473,15},
      {atom,{1473,15},expr_export_3},
      [{block,0,
        [{'fun',
          {1473,29},
          {clauses,[{clause,{1473,32},[],[],[{atom,{1473,38},bad}]}]}}]}]}},
    {debug_line,1475,845},
    {match,
     {1475,5},
     {bin,{1475,5},[]},
     {call,
      {1475,12},
      {atom,{1475,12},expr_export_4},
      [{block,0,
        [{bin,
          {1475,26},
          [{bin_element,
            {1475,28},
            {integer,{1475,28},1},
            {integer,{1475,30},32},
            default}]}]}]}},
    {debug_line,1476,846},
    {match,
     {1476,5},
     {bin,
      {1476,5},
      [{bin_element,{1476,7},{string,{1476,7},"abcd"},default,default}]},
     {call,
      {1476,18},
      {atom,{1476,18},expr_export_4},
      [{block,0,
        [{bin,
          {1476,32},
          [{bin_element,
            {1476,34},
            {integer,{1476,34},2},
            {integer,{1476,36},32},
            default},
           {bin_element,
            {1476,39},
            {string,{1476,39},"abcd"},
            default,default}]}]}]}},
    {debug_line,1477,847},
    {match,
     {1477,5},
     {atom,{1477,5},no_match},
     {call,
      {1477,16},
      {atom,{1477,16},expr_export_4},
      [{block,0,
        [{bin,
          {1477,30},
          [{bin_element,
            {1477,32},
            {integer,{1477,32},0},
            {integer,{1477,34},32},
            default}]}]}]}},
    {debug_line,1478,848},
    {match,
     {1478,5},
     {atom,{1478,5},no_match},
     {call,
      {1478,16},
      {atom,{1478,16},expr_export_4},
      [{block,0,
        [{bin,
          {1478,30},
          [{bin_element,
            {1478,32},
            {integer,{1478,32},777},
            {integer,{1478,36},32},
            default}]}]}]}},
    {debug_line,1480,849},
    {match,
     {1480,5},
     {tuple,
      {1480,5},
      [{integer,{1480,6},1},{integer,{1480,8},2},{integer,{1480,10},3}]},
     {call,{1480,15},{atom,{1480,15},expr_export_5},[]}},
    {debug_line,1481,850},
    {atom,{1481,5},ok}]}]}.
{function,{1483,1},
          expr_export_1,0,
          [{clause,{1483,1},
                   [],
                   [[{call,{1483,1},
                           {remote,{1483,1},
                                   {atom,{1483,1},fake},
                                   {atom,{1483,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1483,851},{atom,{1483,1},ignore}]},
           {clause,{1483,1},
                   [],[],
                   [{debug_line,1484,852},
                    {'try',{1484,5},
                           [{match,{1484,9},
                                   {var,{1484,9},'Bar'},
                                   {integer,{1484,15},42}}],
                           [{clause,{1485,9},
                                    [{var,{1485,9},'_'}],
                                    [],
                                    [{debug_line,1485,853},
                                     {var,{1485,14},'Bar'}]}],
                           [],
                           [{debug_line,1487,854},{atom,{1487,9},ok}]}]}]}.
{function,
    {1490,1},
    expr_export_2,0,
    [{clause,
         {1490,1},
         [],
         [[{call,
               {1490,1},
               {remote,
                   {1490,1},
                   {atom,{1490,1},fake},
                   {atom,{1490,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1490,855},{atom,{1490,1},ignore}]},
     {clause,
         {1490,1},
         [],[],
         [{debug_line,1491,856},
          {'try',
              {1491,5},
              [{match,{1491,9},{var,{1491,9},'Bar'},{integer,{1491,15},42}}],
              [{clause,
                   {1492,9},
                   [{var,{1492,9},'_'}],
                   [],
                   [{debug_line,1492,857},{var,{1492,14},'Bar'}]}],
              [{clause,
                   {1494,9},
                   [{tuple,
                        {1494,9},
                        [{var,{1494,9},'_'},
                         {var,{1494,11},'_'},
                         {var,{1494,11},'_'}]}],
                   [],
                   [{debug_line,1495,858},{atom,{1495,13},error}]}],
              []}]}]}.
{function,
    {1498,1},
    expr_export_3,1,
    [{clause,
         {1498,1},
         [{var,{1498,1},'_'}],
         [[{call,
               {1498,1},
               {remote,
                   {1498,1},
                   {atom,{1498,1},fake},
                   {atom,{1498,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1498,859},{atom,{1498,1},ignore}]},
     {clause,
         {1498,1},
         [{var,{1498,15},'F'}],
         [],
         [{debug_line,1499,860},
          {'try',
              {1499,5},
              [{debug_line,1500,861},
               {match,{1500,9},{var,{1500,9},'Bar'},{integer,{1500,15},42}},
               {debug_line,1501,862},
               {call,{1501,9},{var,{1501,9},'F'},[]}],
              [{clause,
                   {1503,9},
                   [{atom,{1503,9},bar}],
                   [],
                   [{debug_line,1503,863},{var,{1503,16},'Bar'}]},
               {clause,
                   {1504,9},
                   [{atom,{1504,9},pub}],
                   [],
                   [{debug_line,1504,864},{atom,{1504,16},beer}]},
               {clause,
                   {1505,9},
                   [{var,{1505,9},'Bar'}],
                   [],
                   [{debug_line,1505,865},{atom,{1505,16},is_42}]},
               {clause,
                   {1506,9},
                   [{var,{1506,9},'_'}],
                   [],
                   [{debug_line,1506,866},{atom,{1506,14},no_good}]}],
              [{clause,
                   {1508,9},
                   [{tuple,
                        {1508,9},
                        [{atom,{1508,9},error},
                         {var,{1508,15},'Reason'},
                         {var,{1508,15},'_'}]}],
                   [],
                   [{debug_line,1509,867},
                    {tuple,
                        {1509,13},
                        [{atom,{1509,14},error},{var,{1509,20},'Reason'}]}]}],
              []}]}]}.
{function,
    {1512,1},
    expr_export_4,1,
    [{clause,
         {1512,1},
         [{var,{1512,1},'_'}],
         [[{call,
               {1512,1},
               {remote,
                   {1512,1},
                   {atom,{1512,1},fake},
                   {atom,{1512,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1512,868},{atom,{1512,1},ignore}]},
     {clause,
         {1512,1},
         [{var,{1512,15},'Bin'}],
         [],
         [{debug_line,1513,869},
          {'try',
              {1513,5},
              [{debug_line,1514,870},
               {match,
                   {1514,9},
                   {var,{1514,9},'SzSz'},
                   {call,
                       {1514,16},
                       {atom,{1514,16},id},
                       [{integer,{1514,19},32}]}},
               {debug_line,1515,871},
               {var,{1515,9},'Bin'}],
              [{clause,
                   {1517,9},
                   [{bin,
                        {1517,9},
                        [{bin_element,
                             {1517,11},
                             {var,{1517,11},'Sz'},
                             {var,{1517,14},'SzSz'},
                             default},
                         {bin_element,
                             {1517,19},
                             {var,{1517,19},'Tail'},
                             {op,{1517,29},
                                 '-',
                                 {op,{1517,26},
                                     '*',
                                     {integer,{1517,25},4},
                                     {var,{1517,27},'Sz'}},
                                 {integer,{1517,30},4}},
                             [binary]}]}],
                   [],
                   [{debug_line,1517,872},{var,{1517,45},'Tail'}]},
               {clause,
                   {1518,9},
                   [{bin,
                        {1518,9},
                        [{bin_element,
                             {1518,11},
                             {var,{1518,11},'_'},
                             default,
                             [binary]}]}],
                   [],
                   [{debug_line,1518,873},{atom,{1518,25},no_match}]}],
              [],
              [{debug_line,1520,874},{atom,{1520,9},ok}]}]}]}.
{function,
    {1523,1},
    expr_export_5,0,
    [{clause,
         {1523,1},
         [],
         [[{call,
               {1523,1},
               {remote,
                   {1523,1},
                   {atom,{1523,1},fake},
                   {atom,{1523,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1523,875},{atom,{1523,1},ignore}]},
     {clause,
         {1523,1},
         [],[],
         [{debug_line,1524,876},
          {'try',
              {1524,5},
              [{debug_line,1525,877},
               {match,{1525,9},{var,{1525,9},'X'},{integer,{1525,13},1}},
               {debug_line,1526,878},
               {match,{1526,9},{var,{1526,9},'Z'},{integer,{1526,13},3}},
               {debug_line,1527,879},
               {match,{1527,9},{var,{1527,9},'Y'},{integer,{1527,13},2}}],
              [{clause,
                   {1529,9},
                   [{integer,{1529,9},2}],
                   [],
                   [{debug_line,1529,880},
                    {tuple,
                        {1529,14},
                        [{var,{1529,15},'X'},
                         {var,{1529,17},'Y'},
                         {var,{1529,19},'Z'}]}]}],
              [],
              [{debug_line,1531,881},{atom,{1531,9},ok}]}]}]}.
{function,
    {1537,1},
    throw_opt_crash,1,
    [{clause,
         {1537,1},
         [{var,{1537,1},'_'}],
         [[{call,
               {1537,1},
               {remote,
                   {1537,1},
                   {atom,{1537,1},fake},
                   {atom,{1537,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1537,882},{atom,{1537,1},ignore}]},
     {clause,
         {1537,1},
         [{var,{1537,17},'_Config'}],
         [],
         [{debug_line,1538,883},
          {'try',
              {1538,5},
              [{debug_line,1539,884},
               {call,
                   {1539,9},
                   {atom,{1539,9},throw_opt_crash_1},
                   [{block,0,
                        [{call,
                             {1539,27},
                             {atom,{1539,27},id},
                             [{atom,{1539,30},false}]}]},
                    {block,0,
                        [{tuple,
                             {1539,38},
                             [{atom,{1539,39},pass},
                              {call,
                                  {1539,45},
                                  {atom,{1539,45},id},
                                  [{atom,{1539,48},b}]},
                              {call,
                                  {1539,52},
                                  {atom,{1539,52},id},
                                  [{atom,{1539,55},c}]}]}]}]},
               {debug_line,1540,885},
               {call,
                   {1540,9},
                   {atom,{1540,9},throw_opt_crash_1},
                   [{block,0,
                        [{call,
                             {1540,27},
                             {atom,{1540,27},id},
                             [{atom,{1540,30},false}]}]},
                    {block,0,
                        [{tuple,
                             {1540,38},
                             [{atom,{1540,39},crash},
                              {call,
                                  {1540,46},
                                  {atom,{1540,46},id},
                                  [{atom,{1540,49},b}]}]}]}]},
               {debug_line,1541,886},
               {atom,{1541,9},ok}],
              [],
              [{clause,
                   {1543,9},
                   [{tuple,
                        {1543,9},
                        [{atom,{1543,9},throw},
                         {tuple,
                             {1543,15},
                             [{atom,{1543,16},pass},
                              {var,{1543,22},'B'},
                              {var,{1543,25},'C'}]},
                         {var,{1543,25},'_'}]}],
                   [],
                   [{debug_line,1544,887},
                    {tuple,
                        {1544,13},
                        [{atom,{1544,14},error},
                         {atom,{1544,21},gurka},
                         {tuple,
                             {1544,28},
                             [{var,{1544,29},'B'},{var,{1544,32},'C'}]}]}]},
               {clause,
                   {1545,9},
                   [{tuple,
                        {1545,9},
                        [{atom,{1545,9},throw},
                         {tuple,
                             {1545,15},
                             [{atom,{1545,16},beta},
                              {var,{1545,22},'B'},
                              {var,{1545,25},'C'}]},
                         {var,{1545,25},'_'}]}],
                   [],
                   [{debug_line,1546,888},
                    {tuple,
                        {1546,13},
                        [{atom,{1546,14},error},
                         {atom,{1546,21},gaffel},
                         {tuple,
                             {1546,29},
                             [{var,{1546,30},'B'},{var,{1546,33},'C'}]}]}]},
               {clause,
                   {1547,9},
                   [{tuple,
                        {1547,9},
                        [{atom,{1547,9},throw},
                         {tuple,
                             {1547,15},
                             [{atom,{1547,16},gamma},
                              {var,{1547,23},'B'},
                              {var,{1547,26},'C'}]},
                         {var,{1547,26},'_'}]}],
                   [],
                   [{debug_line,1548,889},
                    {tuple,
                        {1548,13},
                        [{atom,{1548,14},error},
                         {atom,{1548,21},grammofon},
                         {tuple,
                             {1548,32},
                             [{var,{1548,33},'B'},{var,{1548,36},'C'}]}]}]}],
              []}]}]}.
{function,{1551,1},
          throw_opt_crash_1,2,
          [{clause,{1551,1},
                   [{var,{1551,1},'_'},{var,{1551,1},'_'}],
                   [[{call,{1551,1},
                           {remote,{1551,1},
                                   {atom,{1551,1},fake},
                                   {atom,{1551,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1551,890},{atom,{1551,1},ignore}]},
           {clause,{1551,1},
                   [{atom,{1551,19},true},
                    {match,{1551,25},
                           {tuple,{1551,25},
                                  [{var,{1551,26},'_'},
                                   {var,{1551,29},'_'},
                                   {var,{1551,32},'_'}]},
                           {var,{1551,35},'Term'}}],
                   [],
                   [{debug_line,1552,891},
                    {call,{1552,5},
                          {remote,{1552,5},
                                  {atom,{1552,5},erlang},
                                  {atom,{1552,5},throw}},
                          [{var,{1552,11},'Term'}]}]},
           {clause,{1553,1},
                   [{atom,{1553,19},true},
                    {match,{1553,25},
                           {tuple,{1553,25},
                                  [{var,{1553,26},'_'},{var,{1553,29},'_'}]},
                           {var,{1553,32},'Term'}}],
                   [],
                   [{debug_line,1554,892},
                    {call,{1554,5},
                          {remote,{1554,5},
                                  {atom,{1554,5},erlang},
                                  {atom,{1554,5},throw}},
                          [{var,{1554,11},'Term'}]}]},
           {clause,{1555,1},
                   [{atom,{1555,19},false},{var,{1555,26},'_Term'}],
                   [],
                   [{debug_line,1556,893},{atom,{1556,5},ok}]}]}.
{function,
    {1558,1},
    coverage,1,
    [{clause,
         {1558,1},
         [{var,{1558,1},'_'}],
         [[{call,
               {1558,1},
               {remote,
                   {1558,1},
                   {atom,{1558,1},fake},
                   {atom,{1558,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1558,894},{atom,{1558,1},ignore}]},
     {clause,
         {1558,1},
         [{var,{1558,10},'Config'}],
         [],
         [{debug_line,1559,895},
          {match,
              {1559,5},
              {tuple,
                  {1559,5},
                  [{atom,{1559,6},'EXIT'},
                   {tuple,
                       {1559,13},
                       [{tuple,
                            {1559,14},
                            [{atom,{1559,15},badfun},{atom,{1559,22},true}]},
                        {cons,
                            {1559,28},
                            {var,{1559,29},'_'},
                            {var,{1559,31},'_'}}]}]},
              {'catch',
                  {1559,39},
                  {call,{1559,45},{atom,{1559,45},coverage_1},[]}}},
          {debug_line,1560,896},
          {match,
              {1560,5},
              {atom,{1560,5},ok},
              {call,{1560,10},{atom,{1560,10},coverage_ssa_throw},[]}},
          {debug_line,1561,897},
          {match,
              {1561,5},
              {atom,{1561,5},error},
              {call,{1561,13},{atom,{1561,13},coverage_pre_codegen},[]}},
          {debug_line,1562,898},
          {match,
              {1562,5},
              {tuple,
                  {1562,5},
                  [{atom,{1562,6},a},
                   {cons,{1562,8},{integer,{1562,9},42},{nil,{1562,11}}}]},
              {call,
                  {1562,16},
                  {atom,{1562,16},do_plain_catch_list},
                  [{integer,{1562,36},42}]}},
          {debug_line,1563,899},
          {call,
              {1563,5},
              {atom,{1563,5},cover_raise},
              [{var,{1563,17},'Config'}]},
          {debug_line,1565,900},
          {atom,{1565,5},ok}]}]}.
{function,
    {1568,1},
    coverage_1,0,
    [{clause,
         {1568,1},
         [],
         [[{call,
               {1568,1},
               {remote,
                   {1568,1},
                   {atom,{1568,1},fake},
                   {atom,{1568,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1568,901},{atom,{1568,1},ignore}]},
     {clause,
         {1568,1},
         [],[],
         [{debug_line,1569,902},
          {call,
              {1569,5},
              {'try',
                  {1569,5},
                  [{debug_line,1570,903},{atom,{1570,9},true}],
                  [],
                  [{clause,
                       {1572,9},
                       [{tuple,
                            {1572,9},
                            [{atom,{1572,9},law},
                             {atom,{1572,13},business},
                             {var,{1572,13},'_'}]}],
                       [],
                       [{debug_line,1573,904},{atom,{1573,13},program}]}],
                  [{debug_line,1575,905},{atom,{1575,9},head}]},
              [{integer,{1576,9},0}]},
          {debug_line,1577,906},
          {'if',
              {1577,5},
              [{clause,
                   {1578,9},
                   [],
                   [[{cons,
                         {1578,9},
                         {op,{1578,12},
                             'or',
                             {integer,{1578,10},2},
                             {integer,{1578,15},1}},
                         {nil,{1578,16}}}]],
                   [{debug_line,1579,907},{atom,{1579,13},true}]}]}]}]}.
{function,{1583,1},
          coverage_ssa_throw,0,
          [{clause,{1583,1},
                   [],
                   [[{call,{1583,1},
                           {remote,{1583,1},
                                   {atom,{1583,1},fake},
                                   {atom,{1583,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1583,908},{atom,{1583,1},ignore}]},
           {clause,{1583,1},
                   [],[],
                   [{debug_line,1584,909},
                    {call,{1584,5},{atom,{1584,5},cst_trivial},[]},
                    {debug_line,1585,910},
                    {call,{1585,5},{atom,{1585,5},cst_raw},[]},
                    {debug_line,1586,911},
                    {call,{1586,5},{atom,{1586,5},cst_stacktrace},[]},
                    {debug_line,1587,912},
                    {call,{1587,5},{atom,{1587,5},cst_types},[]},
                    {debug_line,1589,913},
                    {atom,{1589,5},ok}]}]}.
{function,
    {1591,1},
    cst_trivial,0,
    [{clause,
         {1591,1},
         [],
         [[{call,
               {1591,1},
               {remote,
                   {1591,1},
                   {atom,{1591,1},fake},
                   {atom,{1591,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1591,914},{atom,{1591,1},ignore}]},
     {clause,
         {1591,1},
         [],[],
         [{debug_line,1593,915},
          {'try',
              {1593,5},
              [{debug_line,1594,916},
               {call,{1594,9},{atom,{1594,9},cst_trivial_1},[]}],
              [],
              [{clause,
                   {1596,9},
                   [{tuple,
                        {1596,9},
                        [{var,{1596,9},'_C'},
                         {var,{1596,12},'_R'},
                         {var,{1596,15},'_S'}]}],
                   [],
                   [{debug_line,1597,917},{atom,{1597,13},ok}]}],
              []}]}]}.
{function,
    {1600,1},
    cst_trivial_1,0,
    [{clause,
         {1600,1},
         [],
         [[{call,
               {1600,1},
               {remote,
                   {1600,1},
                   {atom,{1600,1},fake},
                   {atom,{1600,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1600,918},{atom,{1600,1},ignore}]},
     {clause,
         {1600,1},
         [],[],
         [{debug_line,1600,919},
          {call,
              {1600,20},
              {remote,
                  {1600,20},
                  {atom,{1600,20},erlang},
                  {atom,{1600,20},throw}},
              [{block,0,
                   [{call,
                        {1600,26},
                        {atom,{1600,26},id},
                        [{atom,{1600,29},gurka}]}]}]}]}]}.
{function,
    {1602,1},
    cst_types,0,
    [{clause,
         {1602,1},
         [],
         [[{call,
               {1602,1},
               {remote,
                   {1602,1},
                   {atom,{1602,1},fake},
                   {atom,{1602,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1602,920},{atom,{1602,1},ignore}]},
     {clause,
         {1602,1},
         [],[],
         [{debug_line,1604,921},
          {'try',
              {1604,5},
              [{debug_line,1605,922},
               {call,{1605,9},{atom,{1605,9},cst_types_1},[]}],
              [],
              [{clause,
                   {1607,9},
                   [{tuple,
                        {1607,9},
                        [{atom,{1607,9},throw},
                         {var,{1607,15},'Val'},
                         {var,{1607,15},'_'}]}],
                   [[{call,
                         {1607,24},
                         {remote,
                             {1607,24},
                             {atom,{1607,24},erlang},
                             {atom,{1607,24},is_atom}},
                         [{var,{1607,32},'Val'}]}],
                    [{call,
                         {1608,24},
                         {remote,
                             {1608,24},
                             {atom,{1608,24},erlang},
                             {atom,{1608,24},is_bitstring}},
                         [{var,{1608,37},'Val'}]}],
                    [{call,
                         {1609,24},
                         {remote,
                             {1609,24},
                             {atom,{1609,24},erlang},
                             {atom,{1609,24},is_binary}},
                         [{var,{1609,34},'Val'}]}],
                    [{call,
                         {1610,24},
                         {remote,
                             {1610,24},
                             {atom,{1610,24},erlang},
                             {atom,{1610,24},is_float}},
                         [{var,{1610,33},'Val'}]}],
                    [{call,
                         {1611,24},
                         {remote,
                             {1611,24},
                             {atom,{1611,24},erlang},
                             {atom,{1611,24},is_integer}},
                         [{var,{1611,35},'Val'}]}],
                    [{call,
                         {1612,24},
                         {remote,
                             {1612,24},
                             {atom,{1612,24},erlang},
                             {atom,{1612,24},is_list}},
                         [{var,{1612,32},'Val'}]}],
                    [{call,
                         {1613,24},
                         {remote,
                             {1613,24},
                             {atom,{1613,24},erlang},
                             {atom,{1613,24},is_map}},
                         [{var,{1613,31},'Val'}]}],
                    [{call,
                         {1614,24},
                         {remote,
                             {1614,24},
                             {atom,{1614,24},erlang},
                             {atom,{1614,24},is_number}},
                         [{var,{1614,34},'Val'}]}],
                    [{call,
                         {1615,24},
                         {remote,
                             {1615,24},
                             {atom,{1615,24},erlang},
                             {atom,{1615,24},is_tuple}},
                         [{var,{1615,33},'Val'}]}]],
                   [{debug_line,1616,923},{atom,{1616,13},ok}]},
               {clause,
                   {1617,9},
                   [{tuple,
                        {1617,9},
                        [{atom,{1617,9},throw},
                         {match,
                             {1617,15},
                             {cons,
                                 {1617,15},
                                 {var,{1617,16},'_'},
                                 {var,{1617,18},'_'}},
                             {var,{1617,21},'Cons'}},
                         {var,{1617,21},'_'}]}],
                   [[{op,{1617,40},
                         '=/=',
                         {call,
                             {1617,31},
                             {remote,
                                 {1617,31},
                                 {atom,{1617,31},erlang},
                                 {atom,{1617,31},hd}},
                             [{var,{1617,34},'Cons'}]},
                         {atom,{1617,44},gurka}}],
                    [{op,{1618,40},
                         '=/=',
                         {call,
                             {1618,31},
                             {remote,
                                 {1618,31},
                                 {atom,{1618,31},erlang},
                                 {atom,{1618,31},tl}},
                             [{var,{1618,34},'Cons'}]},
                         {atom,{1618,44},gaffel}}]],
                   [{debug_line,1620,924},{atom,{1620,13},ok}]},
               {clause,
                   {1621,9},
                   [{tuple,
                        {1621,9},
                        [{atom,{1621,9},throw},
                         {var,{1621,15},'Tuple'},
                         {var,{1621,15},'_'}]}],
                   [[{op,{1621,44},
                         '<',
                         {call,
                             {1621,26},
                             {remote,
                                 {1621,26},
                                 {atom,{1621,26},erlang},
                                 {atom,{1621,26},tuple_size}},
                             [{var,{1621,37},'Tuple'}]},
                         {integer,{1621,46},5}}]],
                   [{debug_line,1623,925},{atom,{1623,13},ok}]}],
              []}]}]}.
{function,
    {1626,1},
    cst_types_1,0,
    [{clause,
         {1626,1},
         [],
         [[{call,
               {1626,1},
               {remote,
                   {1626,1},
                   {atom,{1626,1},fake},
                   {atom,{1626,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1626,926},{atom,{1626,1},ignore}]},
     {clause,
         {1626,1},
         [],[],
         [{debug_line,1626,927},
          {call,
              {1626,18},
              {remote,
                  {1626,18},
                  {atom,{1626,18},erlang},
                  {atom,{1626,18},throw}},
              [{block,0,
                   [{call,
                        {1626,24},
                        {atom,{1626,24},id},
                        [{atom,{1626,27},gurka}]}]}]}]}]}.
{function,
    {1628,1},
    cst_stacktrace,0,
    [{clause,
         {1628,1},
         [],
         [[{call,
               {1628,1},
               {remote,
                   {1628,1},
                   {atom,{1628,1},fake},
                   {atom,{1628,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1628,928},{atom,{1628,1},ignore}]},
     {clause,
         {1628,1},
         [],[],
         [{debug_line,1630,929},
          {'try',
              {1630,5},
              [{debug_line,1631,930},
               {call,{1631,9},{atom,{1631,9},cst_stacktrace_1},[]}],
              [],
              [{clause,
                   {1633,9},
                   [{tuple,
                        {1633,9},
                        [{atom,{1633,9},throw},
                         {atom,{1633,15},gurka},
                         {var,{1633,15},'_'}]}],
                   [],
                   [{debug_line,1634,931},{atom,{1634,13},ok}]},
               {clause,
                   {1635,9},
                   [{tuple,
                        {1635,9},
                        [{var,{1635,9},'_C'},
                         {var,{1635,12},'_R'},
                         {var,{1635,15},'Stack'}]}],
                   [],
                   [{debug_line,1636,932},
                    {call,
                        {1636,13},
                        {atom,{1636,13},id},
                        [{var,{1636,16},'Stack'}]},
                    {debug_line,1637,933},
                    {atom,{1637,13},ok}]}],
              []}]}]}.
{function,
    {1640,1},
    cst_stacktrace_1,0,
    [{clause,
         {1640,1},
         [],
         [[{call,
               {1640,1},
               {remote,
                   {1640,1},
                   {atom,{1640,1},fake},
                   {atom,{1640,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1640,934},{atom,{1640,1},ignore}]},
     {clause,
         {1640,1},
         [],[],
         [{debug_line,1640,935},
          {call,
              {1640,23},
              {remote,
                  {1640,23},
                  {atom,{1640,23},erlang},
                  {atom,{1640,23},throw}},
              [{block,0,
                   [{call,
                        {1640,29},
                        {atom,{1640,29},id},
                        [{atom,{1640,32},gurka}]}]}]}]}]}.
{function,
    {1642,1},
    cst_raw,0,
    [{clause,
         {1642,1},
         [],
         [[{call,
               {1642,1},
               {remote,
                   {1642,1},
                   {atom,{1642,1},fake},
                   {atom,{1642,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1642,936},{atom,{1642,1},ignore}]},
     {clause,
         {1642,1},
         [],[],
         [{debug_line,1644,937},
          {'try',
              {1644,5},
              [{debug_line,1645,938},
               {call,{1645,9},{atom,{1645,9},cst_raw_1},[]}],
              [],
              [{clause,
                   {1647,9},
                   [{tuple,
                        {1647,9},
                        [{atom,{1647,9},throw},
                         {atom,{1647,15},gurka},
                         {var,{1647,15},'_'}]}],
                   [],
                   [{debug_line,1648,939},{atom,{1648,13},ok}]},
               {clause,
                   {1649,9},
                   [{tuple,
                        {1649,9},
                        [{var,{1649,9},'_C'},
                         {var,{1649,12},'_R'},
                         {var,{1649,15},'Stack'}]}],
                   [],
                   [{debug_line,1650,940},
                    {call,
                        {1650,13},
                        {remote,
                            {1650,19},
                            {atom,{1650,13},erlang},
                            {atom,{1650,20},raise}},
                        [{atom,{1650,26},error},
                         {atom,{1650,33},dummy},
                         {var,{1650,40},'Stack'}]}]}],
              []}]}]}.
{function,
    {1653,1},
    cst_raw_1,0,
    [{clause,
         {1653,1},
         [],
         [[{call,
               {1653,1},
               {remote,
                   {1653,1},
                   {atom,{1653,1},fake},
                   {atom,{1653,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1653,941},{atom,{1653,1},ignore}]},
     {clause,
         {1653,1},
         [],[],
         [{debug_line,1653,942},
          {call,
              {1653,16},
              {remote,
                  {1653,16},
                  {atom,{1653,16},erlang},
                  {atom,{1653,16},throw}},
              [{block,0,
                   [{call,
                        {1653,22},
                        {atom,{1653,22},id},
                        [{atom,{1653,25},gurka}]}]}]}]}]}.
{function,
    {1656,1},
    coverage_pre_codegen,0,
    [{clause,
         {1656,1},
         [],
         [[{call,
               {1656,1},
               {remote,
                   {1656,1},
                   {atom,{1656,1},fake},
                   {atom,{1656,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1656,943},{atom,{1656,1},ignore}]},
     {clause,
         {1656,1},
         [],[],
         [{debug_line,1657,944},
          {'try',
              {1657,5},
              [{op,{1657,9},'not',{'catch',{1657,14},{integer,{1657,20},22}}}],
              [{clause,
                   {1658,9},
                   [{atom,{1658,9},true}],
                   [],
                   [{debug_line,1659,945},{atom,{1659,13},ok}]}],
              [{clause,
                   {1661,9},
                   [{tuple,
                        {1661,9},
                        [{var,{1661,9},'_'},
                         {var,{1661,11},'_'},
                         {var,{1661,11},'_'}]}],
                   [],
                   [{debug_line,1662,946},{atom,{1662,13},error}]}],
              []}]}]}.
{function,
    {1666,1},
    do_plain_catch_list,1,
    [{clause,
         {1666,1},
         [{var,{1666,1},'_'}],
         [[{call,
               {1666,1},
               {remote,
                   {1666,1},
                   {atom,{1666,1},fake},
                   {atom,{1666,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1666,947},{atom,{1666,1},ignore}]},
     {clause,
         {1666,1},
         [{var,{1666,21},'X'}],
         [],
         [{debug_line,1667,948},
          {match,
              {1667,5},
              {var,{1667,5},'B'},
              {cons,{1667,9},{var,{1667,10},'X'},{nil,{1667,11}}}},
          {debug_line,1668,949},
          {'catch',
              {1668,5},
              {call,
                  {1668,11},
                  {atom,{1668,11},id},
                  [{block,0,
                       [{tuple,
                            {1668,14},
                            [{atom,{1668,15},a},{var,{1668,17},'B'}]}]}]}}]}]}.
{function,
    {1670,1},
    cover_raise,1,
    [{clause,
         {1670,1},
         [{var,{1670,1},'_'}],
         [[{call,
               {1670,1},
               {remote,
                   {1670,1},
                   {atom,{1670,1},fake},
                   {atom,{1670,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1670,950},{atom,{1670,1},ignore}]},
     {clause,
         {1670,1},
         [{var,{1670,13},'Config'}],
         [],
         [{debug_line,1671,951},
          {match,
              {1671,5},
              {var,{1671,5},'UncertainClass'},
              {call,
                  {1671,22},
                  {atom,{1671,22},uncertain_class},
                  [{var,{1671,38},'Config'}]}},
          {debug_line,1672,952},
          {match,
              {1672,5},
              {atom,{1672,5},badarg},
              {call,
                  {1672,14},
                  {remote,
                      {1672,20},
                      {atom,{1672,14},erlang},
                      {atom,{1672,21},raise}},
                  [{var,{1672,27},'UncertainClass'},
                   {atom,{1672,43},reason},
                   {nil,{1672,51}}]}},
          {debug_line,1673,953},
          {match,
              {1673,5},
              {var,{1673,5},'BadClass'},
              {call,
                  {1673,16},
                  {atom,{1673,16},bad_class},
                  [{var,{1673,26},'Config'}]}},
          {debug_line,1674,954},
          {match,
              {1674,5},
              {atom,{1674,5},badarg},
              {call,
                  {1674,14},
                  {remote,
                      {1674,20},
                      {atom,{1674,14},erlang},
                      {atom,{1674,21},raise}},
                  [{var,{1674,27},'BadClass'},
                   {atom,{1674,37},reason},
                   {nil,{1674,45}}]}},
          {debug_line,1675,955},
          {atom,{1675,5},ok}]}]}.
{function,
    {1677,1},
    uncertain_class,1,
    [{clause,
         {1677,1},
         [{var,{1677,1},'_'}],
         [[{call,
               {1677,1},
               {remote,
                   {1677,1},
                   {atom,{1677,1},fake},
                   {atom,{1677,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1677,956},{atom,{1677,1},ignore}]},
     {clause,
         {1677,1},
         [{var,{1677,17},'Config'}],
         [],
         [{debug_line,1678,957},
          {'case',
              {1678,5},
              {var,{1678,10},'Config'},
              [{clause,
                   {1679,9},
                   [{cons,
                        {1679,9},
                        {atom,{1679,10},never_ever},
                        {nil,{1679,20}}}],
                   [],
                   [{debug_line,1679,958},{atom,{1679,26},error}]},
               {clause,
                   {1680,9},
                   [{var,{1680,9},'_'}],
                   [],
                   [{debug_line,1680,959},
                    {atom,{1680,14},undefined_class}]}]}]}]}.
{function,
    {1683,1},
    bad_class,1,
    [{clause,
         {1683,1},
         [{var,{1683,1},'_'}],
         [[{call,
               {1683,1},
               {remote,
                   {1683,1},
                   {atom,{1683,1},fake},
                   {atom,{1683,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1683,960},{atom,{1683,1},ignore}]},
     {clause,
         {1683,1},
         [{var,{1683,11},'Config'}],
         [],
         [{debug_line,1684,961},
          {'case',
              {1684,5},
              {var,{1684,10},'Config'},
              [{clause,
                   {1685,9},
                   [{cons,
                        {1685,9},
                        {atom,{1685,10},never_ever},
                        {nil,{1685,20}}}],
                   [],
                   [{debug_line,1685,962},{atom,{1685,25},bad_class}]},
               {clause,
                   {1686,9},
                   [{var,{1686,9},'_'}],
                   [],
                   [{debug_line,1686,963},{atom,{1686,14},also_bad}]}]}]}]}.
{function,
    {1691,1},
    throw_opt_funs,1,
    [{clause,
         {1691,1},
         [{var,{1691,1},'_'}],
         [[{call,
               {1691,1},
               {remote,
                   {1691,1},
                   {atom,{1691,1},fake},
                   {atom,{1691,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1691,964},{atom,{1691,1},ignore}]},
     {clause,
         {1691,1},
         [{var,{1691,16},'_Config'}],
         [],
         [{debug_line,1692,965},
          {'try',
              {1692,5},
              [{call,
                   {1692,9},
                   {atom,{1692,9},throw_opt_funs_1},
                   [{block,0,
                        [{call,
                             {1692,26},
                             {atom,{1692,26},id},
                             [{atom,{1692,29},a}]}]}]}],
              [{clause,
                   {1693,9},
                   [{var,{1693,9},'_'}],
                   [],
                   [{debug_line,1693,966},{atom,{1693,14},unreachable}]}],
              [{clause,
                   {1695,9},
                   [{tuple,
                        {1695,9},
                        [{var,{1695,9},'_'},
                         {var,{1695,11},'Val'},
                         {var,{1695,11},'_'}]}],
                   [],
                   [{debug_line,1695,967},
                    {match,
                        {1695,18},
                        {atom,{1695,18},a},
                        {call,
                            {1695,22},
                            {atom,{1695,22},id},
                            [{var,{1695,25},'Val'}]}}]}],
              []},
          {debug_line,1698,968},
          {match,
              {1698,5},
              {var,{1698,5},'F'},
              {call,
                  {1698,9},
                  {atom,{1698,9},id},
                  [{block,0,
                       [{'fun',{1698,12},{function,throw_opt_funs_1,1}}]}]}},
          {debug_line,1700,969},
          {'try',
              {1700,5},
              [{call,{1700,9},{var,{1700,9},'F'},[{atom,{1700,11},a}]}],
              [{clause,
                   {1701,9},
                   [{var,{1701,9},'_'}],
                   [],
                   [{debug_line,1701,970},{atom,{1701,14},unreachable}]}],
              [{clause,
                   {1703,9},
                   [{tuple,
                        {1703,9},
                        [{var,{1703,9},'_'},
                         {var,{1703,11},'_'},
                         {var,{1703,13},'Stack'}]}],
                   [],
                   [{debug_line,1703,971},
                    {match,
                        {1703,22},
                        {atom,{1703,22},true},
                        {op,{1703,43},
                            '>',
                            {call,
                                {1703,29},
                                {remote,
                                    {1703,29},
                                    {atom,{1703,29},erlang},
                                    {atom,{1703,29},length}},
                                [{var,{1703,36},'Stack'}]},
                            {integer,{1703,45},0}}}]}],
              []},
          {debug_line,1706,972},
          {atom,{1706,5},ok}]}]}.
{function,{1708,1},
          throw_opt_funs_1,1,
          [{clause,{1708,1},
                   [{var,{1708,1},'_'}],
                   [[{call,{1708,1},
                           {remote,{1708,1},
                                   {atom,{1708,1},fake},
                                   {atom,{1708,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1708,973},{atom,{1708,1},ignore}]},
           {clause,{1708,1},
                   [{atom,{1708,18},a}],
                   [],
                   [{debug_line,1709,974},
                    {call,{1709,5},
                          {remote,{1709,5},
                                  {atom,{1709,5},erlang},
                                  {atom,{1709,5},throw}},
                          [{atom,{1709,11},a}]}]},
           {clause,{1710,1},
                   [{var,{1710,18},'I'}],
                   [],
                   [{debug_line,1711,975},{var,{1711,5},'I'}]}]}.
{function,{1713,1},
          id,1,
          [{clause,{1713,1},
                   [{var,{1713,1},'_'}],
                   [[{call,{1713,1},
                           {remote,{1713,1},
                                   {atom,{1713,1},fake},
                                   {atom,{1713,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1713,976},{atom,{1713,1},ignore}]},
           {clause,{1713,1},
                   [{var,{1713,4},'I'}],
                   [],
                   [{debug_line,1713,977},{var,{1713,10},'I'}]}]}.
{eof,{1714,1}}.
