{attribute,{1,1},file,{"sys_core_prepare.erl",1}}.
{attribute,{22,2},module,sys_core_prepare}.
{attribute,{24,2},export,[{module,2}]}.
{attribute,{1,1},file,{"core_parse.hrl",1}}.
{attribute,
    {32,2},
    record,
    {c_alias,
        [{typed_record_field,
             {record_field,{32,19},{atom,{32,19},anno},{nil,{32,24}}},
             {type,{32,30},list,[]}},
         {typed_record_field,
             {record_field,{32,38},{atom,{32,38},var}},
             {remote_type,
                 {32,45},
                 [{atom,{32,45},cerl},{atom,{32,50},cerl},[]]}},
         {typed_record_field,
             {record_field,{33,5},{atom,{33,5},pat}},
             {remote_type,
                 {33,12},
                 [{atom,{33,12},cerl},{atom,{33,17},cerl},[]]}}]}}.
{attribute,
    {35,2},
    record,
    {c_apply,
        [{typed_record_field,
             {record_field,{35,19},{atom,{35,19},anno},{nil,{35,24}}},
             {type,{35,30},list,[]}},
         {typed_record_field,
             {record_field,{35,38},{atom,{35,38},op}},
             {remote_type,
                 {35,44},
                 [{atom,{35,44},cerl},{atom,{35,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{36,5},{atom,{36,5},args}},
             {type,
                 {36,13},
                 list,
                 [{remote_type,
                      {36,14},
                      [{atom,{36,14},cerl},{atom,{36,19},cerl},[]]}]}}]}}.
{attribute,
    {38,2},
    record,
    {c_binary,
        [{typed_record_field,
             {record_field,{38,20},{atom,{38,20},anno},{nil,{38,25}}},
             {type,{38,31},list,[]}},
         {typed_record_field,
             {record_field,{38,39},{atom,{38,39},segments}},
             {type,
                 {38,51},
                 list,
                 [{remote_type,
                      {38,52},
                      [{atom,{38,52},cerl},{atom,{38,57},c_bitstr},[]]}]}}]}}.
{attribute,
    {40,2},
    record,
    {c_bitstr,
        [{typed_record_field,
             {record_field,{40,20},{atom,{40,20},anno},{nil,{40,25}}},
             {type,{40,31},list,[]}},
         {typed_record_field,
             {record_field,{40,39},{atom,{40,39},val}},
             {remote_type,
                 {40,46},
                 [{atom,{40,46},cerl},{atom,{40,51},cerl},[]]}},
         {typed_record_field,
             {record_field,{41,6},{atom,{41,6},size}},
             {remote_type,
                 {41,14},
                 [{atom,{41,14},cerl},{atom,{41,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{42,6},{atom,{42,6},unit}},
             {remote_type,
                 {42,14},
                 [{atom,{42,14},cerl},{atom,{42,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{43,6},{atom,{43,6},type}},
             {remote_type,
                 {43,14},
                 [{atom,{43,14},cerl},{atom,{43,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{44,6},{atom,{44,6},flags}},
             {remote_type,
                 {44,15},
                 [{atom,{44,15},cerl},{atom,{44,20},cerl},[]]}}]}}.
{attribute,
    {46,2},
    record,
    {c_call,
        [{typed_record_field,
             {record_field,{46,18},{atom,{46,18},anno},{nil,{46,23}}},
             {type,{46,29},list,[]}},
         {typed_record_field,
             {record_field,{46,37},{atom,{46,37},module}},
             {remote_type,
                 {46,47},
                 [{atom,{46,47},cerl},{atom,{46,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{47,4},{atom,{47,4},name}},
             {remote_type,
                 {47,12},
                 [{atom,{47,12},cerl},{atom,{47,17},cerl},[]]}},
         {typed_record_field,
             {record_field,{48,4},{atom,{48,4},args}},
             {type,
                 {48,12},
                 list,
                 [{remote_type,
                      {48,13},
                      [{atom,{48,13},cerl},{atom,{48,18},cerl},[]]}]}}]}}.
{attribute,
    {50,2},
    record,
    {c_case,
        [{typed_record_field,
             {record_field,{50,18},{atom,{50,18},anno},{nil,{50,23}}},
             {type,{50,29},list,[]}},
         {typed_record_field,
             {record_field,{50,37},{atom,{50,37},arg}},
             {remote_type,
                 {50,44},
                 [{atom,{50,44},cerl},{atom,{50,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{51,4},{atom,{51,4},clauses}},
             {type,
                 {51,15},
                 list,
                 [{remote_type,
                      {51,16},
                      [{atom,{51,16},cerl},{atom,{51,21},cerl},[]]}]}}]}}.
{attribute,
    {53,2},
    record,
    {c_catch,
        [{typed_record_field,
             {record_field,{53,19},{atom,{53,19},anno},{nil,{53,24}}},
             {type,{53,30},list,[]}},
         {typed_record_field,
             {record_field,{53,38},{atom,{53,38},body}},
             {remote_type,
                 {53,46},
                 [{atom,{53,46},cerl},{atom,{53,51},cerl},[]]}}]}}.
{attribute,
    {55,2},
    record,
    {c_clause,
        [{typed_record_field,
             {record_field,{55,20},{atom,{55,20},anno},{nil,{55,25}}},
             {type,{55,31},list,[]}},
         {typed_record_field,
             {record_field,{55,39},{atom,{55,39},pats}},
             {type,
                 {55,47},
                 list,
                 [{remote_type,
                      {55,48},
                      [{atom,{55,48},cerl},{atom,{55,53},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{56,6},{atom,{56,6},guard}},
             {remote_type,
                 {56,15},
                 [{atom,{56,15},cerl},{atom,{56,20},cerl},[]]}},
         {typed_record_field,
             {record_field,{57,6},{atom,{57,6},body}},
             {type,
                 {57,14},
                 union,
                 [{remote_type,
                      {57,14},
                      [{atom,{57,14},cerl},{atom,{57,19},cerl},[]]},
                  {type,{57,28},any,[]}]}}]}}.
{attribute,
    {59,2},
    record,
    {c_cons,
        [{typed_record_field,
             {record_field,{59,18},{atom,{59,18},anno},{nil,{59,23}}},
             {type,{59,29},list,[]}},
         {typed_record_field,
             {record_field,{59,37},{atom,{59,37},hd}},
             {remote_type,
                 {59,43},
                 [{atom,{59,43},cerl},{atom,{59,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{60,4},{atom,{60,4},tl}},
             {remote_type,
                 {60,10},
                 [{atom,{60,10},cerl},{atom,{60,15},cerl},[]]}}]}}.
{attribute,
    {62,2},
    record,
    {c_fun,
        [{typed_record_field,
             {record_field,{62,17},{atom,{62,17},anno},{nil,{62,22}}},
             {type,{62,28},list,[]}},
         {typed_record_field,
             {record_field,{62,36},{atom,{62,36},vars}},
             {type,
                 {62,44},
                 list,
                 [{remote_type,
                      {62,45},
                      [{atom,{62,45},cerl},{atom,{62,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{63,3},{atom,{63,3},body}},
             {remote_type,
                 {63,11},
                 [{atom,{63,11},cerl},{atom,{63,16},cerl},[]]}}]}}.
{attribute,
    {65,2},
    record,
    {c_let,
        [{typed_record_field,
             {record_field,{65,17},{atom,{65,17},anno},{nil,{65,22}}},
             {type,{65,28},list,[]}},
         {typed_record_field,
             {record_field,{65,36},{atom,{65,36},vars}},
             {type,
                 {65,44},
                 list,
                 [{remote_type,
                      {65,45},
                      [{atom,{65,45},cerl},{atom,{65,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{66,3},{atom,{66,3},arg}},
             {remote_type,
                 {66,10},
                 [{atom,{66,10},cerl},{atom,{66,15},cerl},[]]}},
         {typed_record_field,
             {record_field,{67,3},{atom,{67,3},body}},
             {remote_type,
                 {67,11},
                 [{atom,{67,11},cerl},{atom,{67,16},cerl},[]]}}]}}.
{attribute,
    {69,2},
    record,
    {c_letrec,
        [{typed_record_field,
             {record_field,{69,20},{atom,{69,20},anno},{nil,{69,25}}},
             {type,{69,31},list,[]}},
         {typed_record_field,
             {record_field,{70,20},{atom,{70,20},defs}},
             {type,
                 {70,28},
                 list,
                 [{type,
                      {70,29},
                      tuple,
                      [{remote_type,
                           {70,30},
                           [{atom,{70,30},cerl},{atom,{70,35},cerl},[]]},
                       {remote_type,
                           {70,43},
                           [{atom,{70,43},cerl},{atom,{70,48},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{71,6},{atom,{71,6},body}},
             {remote_type,
                 {71,14},
                 [{atom,{71,14},cerl},{atom,{71,19},cerl},[]]}}]}}.
{attribute,
    {73,2},
    record,
    {c_literal,
        [{typed_record_field,
             {record_field,{73,21},{atom,{73,21},anno},{nil,{73,26}}},
             {type,{73,32},list,[]}},
         {typed_record_field,
             {record_field,{73,40},{atom,{73,40},val}},
             {type,{73,47},any,[]}}]}}.
{attribute,
    {75,2},
    record,
    {c_map,
        [{typed_record_field,
             {record_field,{75,17},{atom,{75,17},anno},{nil,{75,22}}},
             {type,{75,28},list,[]}},
         {typed_record_field,
             {record_field,
                 {76,3},
                 {atom,{76,3},arg},
                 {record,
                     {76,7},
                     c_literal,
                     [{record_field,
                          {76,18},
                          {atom,{76,18},val},
                          {map,{76,22},[]}}]}},
             {type,
                 {76,30},
                 union,
                 [{remote_type,
                      {76,30},
                      [{atom,{76,30},cerl},{atom,{76,35},c_var},[]]},
                  {remote_type,
                      {76,45},
                      [{atom,{76,45},cerl},{atom,{76,50},c_literal},[]]}]}},
         {typed_record_field,
             {record_field,{77,3},{atom,{77,3},es}},
             {type,
                 {77,9},
                 list,
                 [{remote_type,
                      {77,10},
                      [{atom,{77,10},cerl},{atom,{77,15},c_map_pair},[]]}]}},
         {typed_record_field,
             {record_field,{78,3},{atom,{78,3},is_pat},{atom,{78,10},false}},
             {type,{78,19},boolean,[]}}]}}.
{attribute,
    {80,2},
    record,
    {c_map_pair,
        [{typed_record_field,
             {record_field,{80,22},{atom,{80,22},anno},{nil,{80,27}}},
             {type,{80,33},list,[]}},
         {typed_record_field,
             {record_field,{81,15},{atom,{81,15},op}},
             {type,
                 {81,21},
                 union,
                 [{type,
                      {81,21},
                      record,
                      [{atom,{81,22},c_literal},
                       {type,
                           {81,32},
                           field_type,
                           [{atom,{81,32},val},{atom,{81,37},assoc}]}]},
                  {type,
                      {81,48},
                      record,
                      [{atom,{81,49},c_literal},
                       {type,
                           {81,59},
                           field_type,
                           [{atom,{81,59},val},{atom,{81,64},exact}]}]}]}},
         {typed_record_field,
             {record_field,{82,8},{atom,{82,8},key}},
             {type,{82,15},any,[]}},
         {typed_record_field,
             {record_field,{83,8},{atom,{83,8},val}},
             {type,{83,15},any,[]}}]}}.
{attribute,
    {85,2},
    record,
    {c_module,
        [{typed_record_field,
             {record_field,{85,20},{atom,{85,20},anno},{nil,{85,25}}},
             {type,{85,31},list,[]}},
         {typed_record_field,
             {record_field,{85,39},{atom,{85,39},name}},
             {remote_type,
                 {85,47},
                 [{atom,{85,47},cerl},{atom,{85,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{86,6},{atom,{86,6},exports}},
             {type,
                 {86,17},
                 list,
                 [{remote_type,
                      {86,18},
                      [{atom,{86,18},cerl},{atom,{86,23},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{87,6},{atom,{87,6},attrs}},
             {type,
                 {87,15},
                 list,
                 [{type,
                      {87,16},
                      tuple,
                      [{remote_type,
                           {87,17},
                           [{atom,{87,17},cerl},{atom,{87,22},cerl},[]]},
                       {remote_type,
                           {87,30},
                           [{atom,{87,30},cerl},{atom,{87,35},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{88,6},{atom,{88,6},defs}},
             {type,
                 {88,14},
                 list,
                 [{type,
                      {88,15},
                      tuple,
                      [{remote_type,
                           {88,16},
                           [{atom,{88,16},cerl},{atom,{88,21},cerl},[]]},
                       {remote_type,
                           {88,29},
                           [{atom,{88,29},cerl},
                            {atom,{88,34},cerl},
                            []]}]}]}}]}}.
{attribute,
    {90,2},
    record,
    {c_opaque,
        [{typed_record_field,
             {record_field,{90,20},{atom,{90,20},anno},{nil,{90,25}}},
             {type,{90,31},list,[]}},
         {typed_record_field,
             {record_field,{90,39},{atom,{90,39},val}},
             {type,{90,46},any,[]}}]}}.
{attribute,
    {92,2},
    record,
    {c_primop,
        [{typed_record_field,
             {record_field,{92,20},{atom,{92,20},anno},{nil,{92,25}}},
             {type,{92,31},list,[]}},
         {typed_record_field,
             {record_field,{92,39},{atom,{92,39},name}},
             {remote_type,
                 {92,47},
                 [{atom,{92,47},cerl},{atom,{92,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{93,6},{atom,{93,6},args}},
             {type,
                 {93,14},
                 list,
                 [{remote_type,
                      {93,15},
                      [{atom,{93,15},cerl},{atom,{93,20},cerl},[]]}]}}]}}.
{attribute,
    {95,2},
    record,
    {c_receive,
        [{typed_record_field,
             {record_field,{95,21},{atom,{95,21},anno},{nil,{95,26}}},
             {type,{95,32},list,[]}},
         {typed_record_field,
             {record_field,{95,40},{atom,{95,40},clauses}},
             {type,
                 {95,51},
                 list,
                 [{remote_type,
                      {95,52},
                      [{atom,{95,52},cerl},{atom,{95,57},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{96,7},{atom,{96,7},timeout}},
             {remote_type,
                 {96,18},
                 [{atom,{96,18},cerl},{atom,{96,23},cerl},[]]}},
         {typed_record_field,
             {record_field,{97,7},{atom,{97,7},action}},
             {remote_type,
                 {97,17},
                 [{atom,{97,17},cerl},{atom,{97,22},cerl},[]]}}]}}.
{attribute,
    {99,2},
    record,
    {c_seq,
        [{typed_record_field,
             {record_field,{99,17},{atom,{99,17},anno},{nil,{99,22}}},
             {type,{99,28},list,[]}},
         {typed_record_field,
             {record_field,{99,36},{atom,{99,36},arg}},
             {type,
                 {99,43},
                 union,
                 [{remote_type,
                      {99,43},
                      [{atom,{99,43},cerl},{atom,{99,48},cerl},[]]},
                  {type,{99,57},any,[]}]}},
         {typed_record_field,
             {record_field,{100,3},{atom,{100,3},body}},
             {remote_type,
                 {100,11},
                 [{atom,{100,11},cerl},{atom,{100,16},cerl},[]]}}]}}.
{attribute,
    {102,2},
    record,
    {c_try,
        [{typed_record_field,
             {record_field,{102,17},{atom,{102,17},anno},{nil,{102,22}}},
             {type,{102,28},list,[]}},
         {typed_record_field,
             {record_field,{102,36},{atom,{102,36},arg}},
             {remote_type,
                 {102,43},
                 [{atom,{102,43},cerl},{atom,{102,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{103,3},{atom,{103,3},vars}},
             {type,
                 {103,11},
                 list,
                 [{remote_type,
                      {103,12},
                      [{atom,{103,12},cerl},{atom,{103,17},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{104,3},{atom,{104,3},body}},
             {remote_type,
                 {104,11},
                 [{atom,{104,11},cerl},{atom,{104,16},cerl},[]]}},
         {typed_record_field,
             {record_field,{105,3},{atom,{105,3},evars}},
             {type,
                 {105,12},
                 list,
                 [{remote_type,
                      {105,13},
                      [{atom,{105,13},cerl},{atom,{105,18},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{106,3},{atom,{106,3},handler}},
             {remote_type,
                 {106,14},
                 [{atom,{106,14},cerl},{atom,{106,19},cerl},[]]}}]}}.
{attribute,
    {108,2},
    record,
    {c_tuple,
        [{typed_record_field,
             {record_field,{108,19},{atom,{108,19},anno},{nil,{108,24}}},
             {type,{108,30},list,[]}},
         {typed_record_field,
             {record_field,{108,38},{atom,{108,38},es}},
             {type,
                 {108,44},
                 list,
                 [{remote_type,
                      {108,45},
                      [{atom,{108,45},cerl},{atom,{108,50},cerl},[]]}]}}]}}.
{attribute,
    {110,2},
    record,
    {c_values,
        [{typed_record_field,
             {record_field,{110,20},{atom,{110,20},anno},{nil,{110,25}}},
             {type,{110,31},list,[]}},
         {typed_record_field,
             {record_field,{110,39},{atom,{110,39},es}},
             {type,
                 {110,45},
                 list,
                 [{remote_type,
                      {110,46},
                      [{atom,{110,46},cerl},{atom,{110,51},cerl},[]]}]}}]}}.
{attribute,
    {112,2},
    record,
    {c_var,
        [{typed_record_field,
             {record_field,{112,17},{atom,{112,17},anno},{nil,{112,22}}},
             {type,{112,28},list,[]}},
         {typed_record_field,
             {record_field,{112,36},{atom,{112,36},name}},
             {remote_type,
                 {112,44},
                 [{atom,{112,44},cerl},{atom,{112,49},var_name},[]]}}]}}.
{attribute,{27,1},file,{"sys_core_prepare.erl",27}}.
{attribute,
    {28,2},
    spec,
    {{module,2},
     [{type,
          {28,13},
          'fun',
          [{type,
               {28,13},
               product,
               [{remote_type,
                    {28,14},
                    [{atom,{28,14},cerl},{atom,{28,19},c_module},[]]},
                {type,
                    {28,31},
                    list,
                    [{remote_type,
                         {28,32},
                         [{atom,{28,32},compile},
                          {atom,{28,40},option},
                          []]}]}]},
           {type,
               {29,9},
               tuple,
               [{atom,{29,10},ok},
                {remote_type,
                    {29,15},
                    [{atom,{29,15},cerl},{atom,{29,20},c_module},[]]},
                {type,{29,31},nil,[]}]}]}]}}.
{function,
    {31,1},
    module,2,
    [{clause,
         {31,1},
         [{var,{31,1},'_'},{var,{31,1},'_'}],
         [[{call,
               {31,1},
               {remote,
                   {31,1},
                   {atom,{31,1},fake},
                   {atom,{31,1},is_beam_bif_info}},
               []}]],
         [{debug_line,31,1},{atom,{31,1},ignore}]},
     {clause,
         {31,1},
         [{var,{31,8},'Mod0'},{var,{31,14},'_Opts'}],
         [],
         [{debug_line,32,2},
          {match,
              {32,5},
              {var,{32,5},'Count'},
              {call,
                  {32,13},
                  {remote,
                      {32,23},
                      {atom,{32,13},cerl_trees},
                      {atom,{32,24},next_free_variable_name}},
                  [{var,{32,48},'Mod0'}]}},
          {debug_line,33,3},
          {match,
              {33,5},
              {tuple,{33,5},[{var,{33,6},'Mod'},{var,{33,10},'_'}]},
              {call,
                  {33,15},
                  {remote,
                      {33,25},
                      {atom,{33,15},cerl_trees},
                      {atom,{33,26},mapfold}},
                  [{block,0,[{'fun',{33,34},{function,rewrite_recv,2}}]},
                   {var,{33,54},'Count'},
                   {var,{33,61},'Mod0'}]}},
          {debug_line,34,4},
          {tuple,
              {34,5},
              [{atom,{34,6},ok},{var,{34,9},'Mod'},{nil,{34,13}}]}]}]}.
{function,
    {36,1},
    rewrite_recv,2,
    [{clause,
         {36,1},
         [{var,{36,1},'_'},{var,{36,1},'_'}],
         [[{call,
               {36,1},
               {remote,
                   {36,1},
                   {atom,{36,1},fake},
                   {atom,{36,1},is_beam_bif_info}},
               []}]],
         [{debug_line,36,5},{atom,{36,1},ignore}]},
     {clause,
         {36,1},
         [{tuple,
              {36,14},
              [{atom,{36,14},c_receive},
               {var,{36,14},'_'},
               {nil,{36,33}},
               {var,{36,44},'Timeout0'},
               {var,{36,60},'Action'}]},
          {var,{36,69},'Count0'}],
         [],
         [{debug_line,38,6},
          {match,
              {38,5},
              {var,{38,5},'False'},
              {tuple,
                  {38,13},
                  [{atom,{38,13},c_literal},
                   {nil,{38,13}},
                   {atom,{38,28},false}]}},
          {debug_line,39,7},
          {match,
              {39,5},
              {var,{39,5},'True'},
              {tuple,
                  {39,12},
                  [{atom,{39,12},c_literal},
                   {nil,{39,12}},
                   {atom,{39,27},true}]}},
          {debug_line,41,8},
          {match,
              {41,5},
              {tuple,
                  {41,5},
                  [{var,{41,6},'TimeoutVal'},{var,{41,17},'Count1'}]},
              {call,{41,27},{atom,{41,27},new_var},[{var,{41,35},'Count0'}]}},
          {debug_line,42,9},
          {match,
              {42,5},
              {tuple,{42,5},[{var,{42,6},'LoopName'},{var,{42,15},'Count2'}]},
              {call,
                  {42,25},
                  {atom,{42,25},new_func_varname},
                  [{var,{42,42},'Count1'}]}},
          {debug_line,43,10},
          {match,
              {43,5},
              {var,{43,5},'LoopFun'},
              {tuple,
                  {43,15},
                  [{atom,{43,15},c_var},
                   {nil,{43,15}},
                   {tuple,
                       {43,27},
                       [{var,{43,28},'LoopName'},{integer,{43,37},0}]}]}},
          {debug_line,44,11},
          {match,
              {44,5},
              {var,{44,5},'ApplyLoop'},
              {tuple,
                  {44,17},
                  [{atom,{44,17},c_apply},
                   {nil,{44,17}},
                   {var,{44,29},'LoopFun'},
                   {nil,{44,42}}]}},
          {debug_line,46,12},
          {match,
              {46,5},
              {var,{46,5},'AfterCs'},
              {cons,
                  {46,15},
                  {tuple,
                      {46,16},
                      [{atom,{46,16},c_clause},
                       {nil,{46,16}},
                       {cons,{46,31},{var,{46,32},'True'},{nil,{46,36}}},
                       {var,{46,44},'True'},
                       {var,{46,54},'Action'}]},
                  {cons,
                      {47,16},
                      {tuple,
                          {47,16},
                          [{atom,{47,16},c_clause},
                           {nil,{47,16}},
                           {cons,{47,31},{var,{47,32},'False'},{nil,{47,37}}},
                           {var,{47,45},'True'},
                           {var,{48,31},'ApplyLoop'}]},
                      {nil,{48,41}}}}},
          {debug_line,49,13},
          {match,
              {49,5},
              {tuple,
                  {49,5},
                  [{var,{49,6},'TimeoutBool'},{var,{49,18},'Count4'}]},
              {call,{49,28},{atom,{49,28},new_var},[{var,{49,36},'Count2'}]}},
          {debug_line,50,14},
          {match,
              {50,5},
              {var,{50,5},'TimeoutCase'},
              {tuple,
                  {50,19},
                  [{atom,{50,19},c_case},
                   {nil,{50,19}},
                   {var,{50,31},'TimeoutBool'},
                   {var,{50,51},'AfterCs'}]}},
          {debug_line,51,15},
          {match,
              {51,5},
              {var,{51,5},'TimeoutLet'},
              {tuple,
                  {51,18},
                  [{atom,{51,18},c_let},
                   {nil,{51,18}},
                   {cons,{51,30},{var,{51,31},'TimeoutBool'},{nil,{51,42}}},
                   {call,
                       {52,29},
                       {atom,{52,29},primop},
                       [{atom,{52,36},recv_wait_timeout},
                        {block,0,
                            [{debug_line,52,16},
                             {cons,
                                 {52,55},
                                 {var,{52,56},'TimeoutVal'},
                                 {nil,{52,66}}}]}]},
                   {var,{53,30},'TimeoutCase'}]}},
          {debug_line,55,17},
          {match,
              {55,5},
              {var,{55,5},'Fun'},
              {tuple,
                  {55,11},
                  [{atom,{55,11},c_fun},
                   {nil,{55,11}},
                   {nil,{55,23}},
                   {var,{55,31},'TimeoutLet'}]}},
          {debug_line,57,18},
          {match,
              {57,5},
              {var,{57,5},'Letrec'},
              {tuple,
                  {57,14},
                  [{atom,{57,14},c_letrec},
                   {cons,{57,29},{atom,{57,30},letrec_goto},{nil,{57,41}}},
                   {cons,
                       {58,29},
                       {tuple,
                           {58,30},
                           [{var,{58,31},'LoopFun'},{var,{58,39},'Fun'}]},
                       {nil,{58,43}}},
                   {var,{59,29},'ApplyLoop'}]}},
          {debug_line,61,19},
          {match,
              {61,5},
              {var,{61,5},'OuterLet'},
              {tuple,
                  {61,16},
                  [{atom,{61,16},c_let},
                   {nil,{61,16}},
                   {cons,{61,28},{var,{61,29},'TimeoutVal'},{nil,{61,39}}},
                   {var,{61,45},'Timeout0'},
                   {var,{61,59},'Letrec'}]}},
          {debug_line,62,20},
          {tuple,{62,5},[{var,{62,6},'OuterLet'},{var,{62,15},'Count4'}]}]},
     {clause,
         {63,1},
         [{tuple,
              {63,14},
              [{atom,{63,14},c_receive},
               {var,{63,14},'_'},
               {var,{63,33},'Cs0'},
               {var,{63,45},'Timeout0'},
               {var,{63,61},'Action'}]},
          {var,{63,70},'Count0'}],
         [],
         [{debug_line,65,21},
          {match,
              {65,5},
              {var,{65,5},'False'},
              {tuple,
                  {65,13},
                  [{atom,{65,13},c_literal},
                   {nil,{65,13}},
                   {atom,{65,28},false}]}},
          {debug_line,66,22},
          {match,
              {66,5},
              {var,{66,5},'True'},
              {tuple,
                  {66,12},
                  [{atom,{66,12},c_literal},
                   {nil,{66,12}},
                   {atom,{66,27},true}]}},
          {debug_line,68,23},
          {match,
              {68,5},
              {tuple,
                  {68,5},
                  [{var,{68,6},'TimeoutVal'},{var,{68,17},'Count1'}]},
              {call,{68,27},{atom,{68,27},new_var},[{var,{68,35},'Count0'}]}},
          {debug_line,69,24},
          {match,
              {69,5},
              {tuple,{69,5},[{var,{69,6},'LoopName'},{var,{69,15},'Count2'}]},
              {call,
                  {69,25},
                  {atom,{69,25},new_func_varname},
                  [{var,{69,42},'Count1'}]}},
          {debug_line,70,25},
          {match,
              {70,5},
              {var,{70,5},'LoopFun'},
              {tuple,
                  {70,15},
                  [{atom,{70,15},c_var},
                   {nil,{70,15}},
                   {tuple,
                       {70,27},
                       [{var,{70,28},'LoopName'},{integer,{70,37},0}]}]}},
          {debug_line,71,26},
          {match,
              {71,5},
              {var,{71,5},'ApplyLoop'},
              {tuple,
                  {71,17},
                  [{atom,{71,17},c_apply},
                   {nil,{71,17}},
                   {var,{71,29},'LoopFun'},
                   {nil,{71,42}}]}},
          {debug_line,73,27},
          {match,
              {73,5},
              {var,{73,5},'Cs1'},
              {call,{73,11},{atom,{73,11},rewrite_cs},[{var,{73,22},'Cs0'}]}},
          {debug_line,74,28},
          {match,
              {74,5},
              {var,{74,5},'RecvNext'},
              {tuple,
                  {74,16},
                  [{atom,{74,16},c_seq},
                   {nil,{74,16}},
                   {call,
                       {74,27},
                       {atom,{74,27},primop},
                       [{atom,{74,34},recv_next}]},
                   {var,{75,28},'ApplyLoop'}]}},
          {debug_line,76,29},
          {match,
              {76,5},
              {var,{76,5},'RecvNextC'},
              {tuple,
                  {76,17},
                  [{atom,{76,17},c_clause},
                   {cons,
                       {76,32},
                       {atom,{76,33},compiler_generated},
                       {nil,{76,51}}},
                   {cons,
                       {77,32},
                       {tuple,
                           {77,33},
                           [{atom,{77,33},c_var},
                            {nil,{77,33}},
                            {atom,{77,45},'Other'}]},
                       {nil,{77,53}}},
                   {var,{77,61},'True'},
                   {var,{77,71},'RecvNext'}]}},
          {debug_line,78,30},
          {match,
              {78,5},
              {var,{78,5},'Cs'},
              {op,{78,14},
                  '++',
                  {var,{78,10},'Cs1'},
                  {cons,{78,17},{var,{78,18},'RecvNextC'},{nil,{78,27}}}}},
          {debug_line,79,31},
          {match,
              {79,5},
              {tuple,{79,5},[{var,{79,6},'Msg'},{var,{79,10},'Count3'}]},
              {call,{79,20},{atom,{79,20},new_var},[{var,{79,28},'Count2'}]}},
          {debug_line,80,32},
          {match,
              {80,5},
              {var,{80,5},'MsgCase'},
              {tuple,
                  {80,15},
                  [{atom,{80,15},c_case},
                   {nil,{80,15}},
                   {var,{80,27},'Msg'},
                   {var,{80,39},'Cs'}]}},
          {debug_line,82,33},
          {match,
              {82,5},
              {var,{82,5},'AfterCs'},
              {cons,
                  {82,15},
                  {tuple,
                      {82,16},
                      [{atom,{82,16},c_clause},
                       {nil,{82,16}},
                       {cons,{82,31},{var,{82,32},'True'},{nil,{82,36}}},
                       {var,{82,44},'True'},
                       {var,{82,54},'Action'}]},
                  {cons,
                      {83,16},
                      {tuple,
                          {83,16},
                          [{atom,{83,16},c_clause},
                           {nil,{83,16}},
                           {cons,{83,31},{var,{83,32},'False'},{nil,{83,37}}},
                           {var,{83,45},'True'},
                           {var,{84,31},'ApplyLoop'}]},
                      {nil,{84,41}}}}},
          {debug_line,85,34},
          {match,
              {85,5},
              {tuple,
                  {85,5},
                  [{var,{85,6},'TimeoutBool'},{var,{85,18},'Count4'}]},
              {call,{85,28},{atom,{85,28},new_var},[{var,{85,36},'Count3'}]}},
          {debug_line,86,35},
          {match,
              {86,5},
              {var,{86,5},'TimeoutCase'},
              {tuple,
                  {86,19},
                  [{atom,{86,19},c_case},
                   {nil,{86,19}},
                   {var,{86,31},'TimeoutBool'},
                   {var,{86,51},'AfterCs'}]}},
          {debug_line,87,36},
          {match,
              {87,5},
              {var,{87,5},'TimeoutLet'},
              {tuple,
                  {87,18},
                  [{atom,{87,18},c_let},
                   {nil,{87,18}},
                   {cons,{87,30},{var,{87,31},'TimeoutBool'},{nil,{87,42}}},
                   {call,
                       {88,29},
                       {atom,{88,29},primop},
                       [{atom,{88,36},recv_wait_timeout},
                        {block,0,
                            [{debug_line,88,37},
                             {cons,
                                 {88,55},
                                 {var,{88,56},'TimeoutVal'},
                                 {nil,{88,66}}}]}]},
                   {var,{89,30},'TimeoutCase'}]}},
          {debug_line,91,38},
          {match,
              {91,5},
              {tuple,
                  {91,5},
                  [{var,{91,6},'PeekSucceeded'},{var,{91,20},'Count5'}]},
              {call,{91,30},{atom,{91,30},new_var},[{var,{91,38},'Count4'}]}},
          {debug_line,92,39},
          {match,
              {92,5},
              {var,{92,5},'PeekCs'},
              {cons,
                  {92,14},
                  {tuple,
                      {92,15},
                      [{atom,{92,15},c_clause},
                       {nil,{92,15}},
                       {cons,{92,30},{var,{92,31},'True'},{nil,{92,35}}},
                       {var,{92,43},'True'},
                       {var,{93,30},'MsgCase'}]},
                  {cons,
                      {94,15},
                      {tuple,
                          {94,15},
                          [{atom,{94,15},c_clause},
                           {nil,{94,15}},
                           {cons,{94,30},{var,{94,31},'False'},{nil,{94,36}}},
                           {var,{94,44},'True'},
                           {var,{95,30},'TimeoutLet'}]},
                      {nil,{95,41}}}}},
          {debug_line,96,40},
          {match,
              {96,5},
              {var,{96,5},'PeekCase'},
              {tuple,
                  {96,16},
                  [{atom,{96,16},c_case},
                   {nil,{96,16}},
                   {var,{96,28},'PeekSucceeded'},
                   {var,{96,50},'PeekCs'}]}},
          {debug_line,97,41},
          {match,
              {97,5},
              {var,{97,5},'PeekLet'},
              {tuple,
                  {97,15},
                  [{atom,{97,15},c_let},
                   {nil,{97,15}},
                   {cons,
                       {97,27},
                       {var,{97,28},'PeekSucceeded'},
                       {cons,{97,42},{var,{97,42},'Msg'},{nil,{97,45}}}},
                   {call,
                       {98,26},
                       {atom,{98,26},primop},
                       [{atom,{98,33},recv_peek_message}]},
                   {var,{99,27},'PeekCase'}]}},
          {debug_line,100,42},
          {match,
              {100,5},
              {var,{100,5},'Fun'},
              {tuple,
                  {100,11},
                  [{atom,{100,11},c_fun},
                   {nil,{100,11}},
                   {nil,{100,23}},
                   {var,{100,31},'PeekLet'}]}},
          {debug_line,102,43},
          {match,
              {102,5},
              {var,{102,5},'Letrec'},
              {tuple,
                  {102,14},
                  [{atom,{102,14},c_letrec},
                   {cons,{102,29},{atom,{102,30},letrec_goto},{nil,{102,41}}},
                   {cons,
                       {103,29},
                       {tuple,
                           {103,30},
                           [{var,{103,31},'LoopFun'},{var,{103,39},'Fun'}]},
                       {nil,{103,43}}},
                   {var,{104,29},'ApplyLoop'}]}},
          {debug_line,106,44},
          {match,
              {106,5},
              {var,{106,5},'OuterLet'},
              {tuple,
                  {106,16},
                  [{atom,{106,16},c_let},
                   {nil,{106,16}},
                   {cons,{106,28},{var,{106,29},'TimeoutVal'},{nil,{106,39}}},
                   {var,{106,45},'Timeout0'},
                   {var,{106,59},'Letrec'}]}},
          {debug_line,107,45},
          {tuple,{107,5},[{var,{107,6},'OuterLet'},{var,{107,15},'Count5'}]}]},
     {clause,
         {108,1},
         [{var,{108,14},'Tree'},{var,{108,20},'Count'}],
         [],
         [{debug_line,109,46},
          {tuple,{109,5},[{var,{109,6},'Tree'},{var,{109,11},'Count'}]}]}]}.
{function,
 {111,1},
 rewrite_cs,1,
 [{clause,
   {111,1},
   [{var,{111,1},'_'}],
   [[{call,
      {111,1},
      {remote,{111,1},{atom,{111,1},fake},{atom,{111,1},is_beam_bif_info}},
      []}]],
   [{debug_line,111,47},{atom,{111,1},ignore}]},
  {clause,
   {111,1},
   [{cons,
     {111,12},
     {match,
      {111,13},
      {tuple,
       {111,13},
       [{atom,{111,13},c_clause},
        {var,{111,13},'_'},
        {var,{111,13},'_'},
        {var,{111,13},'_'},
        {var,{111,28},'B0'}]},
      {var,{111,32},'C'}},
     {var,{111,34},'Cs'}}],
   [],
   [{debug_line,112,48},
    {match,
     {112,5},
     {var,{112,5},'B'},
     {tuple,
      {112,9},
      [{atom,{112,9},c_seq},
       {nil,{112,9}},
       {call,{112,20},{atom,{112,20},primop},[{atom,{112,27},remove_message}]},
       {var,{112,48},'B0'}]}},
    {debug_line,113,49},
    {cons,
     {113,5},
     {block,
      {113,6},
      [{match,{113,6},{var,{113,6},rec0},{var,{113,6},'C'}},
       {'case',
        {113,17},
        {var,{113,6},rec0},
        [{clause,
          {113,17},
          [{tuple,
            {113,17},
            [{atom,{113,17},c_clause},
             {var,{113,17},'_'},
             {var,{113,17},'_'},
             {var,{113,17},'_'},
             {var,{113,17},'_'}]}],
          [],
          [{call,
            {113,17},
            {remote,
             {113,17},
             {atom,{113,17},erlang},
             {atom,{113,17},setelement}},
            [{integer,{113,17},5},{var,{113,6},rec0},{var,{113,22},'B'}]}]},
         {clause,
          [{generated,true},{location,{113,17}}],
          [{var,[{generated,true},{location,{113,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{113,17}}],
            {remote,
             [{generated,true},{location,{113,17}}],
             {atom,[{generated,true},{location,{113,17}}],erlang},
             {atom,[{generated,true},{location,{113,17}}],error}},
            [{tuple,
              [{generated,true},{location,{113,17}}],
              [{atom,[{generated,true},{location,{113,17}}],badrecord},
               {var,{113,6},rec0}]}]}]}]}]},
     {call,{113,25},{atom,{113,25},rewrite_cs},[{var,{113,36},'Cs'}]}}]},
  {clause,{114,1},[{nil,{114,12}}],[],[{debug_line,114,50},{nil,{114,19}}]}]}.
{function,{116,1},
          primop,1,
          [{clause,{116,1},
                   [{var,{116,1},'_'}],
                   [[{call,{116,1},
                           {remote,{116,1},
                                   {atom,{116,1},fake},
                                   {atom,{116,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,116,51},{atom,{116,1},ignore}]},
           {clause,{116,1},
                   [{var,{116,8},'Name'}],
                   [],
                   [{debug_line,117,52},
                    {call,{117,5},
                          {atom,{117,5},primop},
                          [{var,{117,12},'Name'},{nil,{117,18}}]}]}]}.
{function,{119,1},
          primop,2,
          [{clause,{119,1},
                   [{var,{119,1},'_'},{var,{119,1},'_'}],
                   [[{call,{119,1},
                           {remote,{119,1},
                                   {atom,{119,1},fake},
                                   {atom,{119,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,119,53},{atom,{119,1},ignore}]},
           {clause,{119,1},
                   [{var,{119,8},'Name'},{var,{119,14},'Args'}],
                   [],
                   [{debug_line,120,54},
                    {tuple,{120,5},
                           [{atom,{120,5},c_primop},
                            {nil,{120,5}},
                            {tuple,{120,20},
                                   [{atom,{120,20},c_literal},
                                    {nil,{120,20}},
                                    {var,{120,35},'Name'}]},
                            {var,{120,46},'Args'}]}]}]}.
{function,{122,1},
          new_var,1,
          [{clause,{122,1},
                   [{var,{122,1},'_'}],
                   [[{call,{122,1},
                           {remote,{122,1},
                                   {atom,{122,1},fake},
                                   {atom,{122,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,122,55},{atom,{122,1},ignore}]},
           {clause,{122,1},
                   [{var,{122,9},'Count'}],
                   [],
                   [{debug_line,123,56},
                    {tuple,{123,5},
                           [{tuple,{123,6},
                                   [{atom,{123,6},c_var},
                                    {nil,{123,6}},
                                    {var,{123,18},'Count'}]},
                            {op,{123,30},
                                '+',
                                {var,{123,25},'Count'},
                                {integer,{123,31},1}}]}]}]}.
{function,
    {125,1},
    new_func_varname,1,
    [{clause,
         {125,1},
         [{var,{125,1},'_'}],
         [[{call,
               {125,1},
               {remote,
                   {125,1},
                   {atom,{125,1},fake},
                   {atom,{125,1},is_beam_bif_info}},
               []}]],
         [{debug_line,125,57},{atom,{125,1},ignore}]},
     {clause,
         {125,1},
         [{var,{125,18},'Count'}],
         [],
         [{debug_line,126,58},
          {match,
              {126,5},
              {var,{126,5},'Name'},
              {call,
                  {126,12},
                  {remote,
                      {126,12},
                      {atom,{126,12},erlang},
                      {atom,{126,12},list_to_atom}},
                  [{block,0,
                       [{op,{126,32},
                            '++',
                            {string,{126,25},"@pre"},
                            {call,
                                {126,35},
                                {remote,
                                    {126,35},
                                    {atom,{126,35},erlang},
                                    {atom,{126,35},integer_to_list}},
                                [{var,{126,51},'Count'}]}}]}]}},
          {debug_line,127,59},
          {tuple,
              {127,5},
              [{var,{127,6},'Name'},
               {op,{127,16},
                   '+',
                   {var,{127,11},'Count'},
                   {integer,{127,17},1}}]}]}]}.
{eof,{128,1}}.
