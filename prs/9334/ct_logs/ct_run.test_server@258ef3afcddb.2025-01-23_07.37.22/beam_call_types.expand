{attribute,{1,1},file,{"beam_call_types.erl",1}}.
{attribute,{21,2},module,beam_call_types}.
{attribute,{1,1},file,{"beam_types.hrl",1}}.
{attribute,{91,2},
           type,
           {float_range,{type,{91,24},
                              union,
                              [{atom,{91,24},any},
                               {type,{91,32},
                                     tuple,
                                     [{atom,{91,33},'-inf'},
                                      {type,{91,40},float,[]}]},
                               {type,{91,51},
                                     tuple,
                                     [{type,{91,52},float,[]},
                                      {atom,{91,60},'+inf'}]}]},
                        []}}.
{attribute,
    {93,2},
    record,
    {t_atom,
        [{typed_record_field,
             {record_field,{93,18},{atom,{93,18},elements},{atom,{93,27},any}},
             {type,
                 {93,34},
                 union,
                 [{atom,{93,34},any},
                  {remote_type,
                      {93,42},
                      [{atom,{93,42},ordsets},
                       {atom,{93,50},ordset},
                       [{type,{93,57},atom,[]}]]}]}}]}}.
{attribute,
    {94,2},
    record,
    {t_bitstring,
        [{typed_record_field,
             {record_field,
                 {94,23},
                 {atom,{94,23},size_unit},
                 {integer,{94,33},1}},
             {type,{94,38},pos_integer,[]}},
         {typed_record_field,
             {record_field,
                 {99,23},
                 {atom,{99,23},appendable},
                 {atom,{99,34},false}},
             {type,{99,43},boolean,[]}}]}}.
{attribute,
    {100,2},
    record,
    {t_bs_context,
        [{typed_record_field,
             {record_field,
                 {100,24},
                 {atom,{100,24},tail_unit},
                 {integer,{100,34},1}},
             {type,{100,39},pos_integer,[]}}]}}.
{attribute,
    {101,2},
    record,
    {t_bs_matchable,
        [{typed_record_field,
             {record_field,
                 {101,26},
                 {atom,{101,26},tail_unit},
                 {integer,{101,36},1}},
             {type,{101,41},pos_integer,[]}}]}}.
{attribute,
    {102,2},
    record,
    {t_float,
        [{typed_record_field,
             {record_field,
                 {102,19},
                 {atom,{102,19},elements},
                 {atom,{102,28},any}},
             {user_type,{102,35},float_range,[]}}]}}.
{attribute,
    {103,2},
    record,
    {t_fun,
        [{typed_record_field,
             {record_field,{103,17},{atom,{103,17},arity},{atom,{103,23},any}},
             {type,
                 {103,30},
                 union,
                 [{type,{103,30},arity,[]},{atom,{103,40},any}]}},
         {typed_record_field,
             {record_field,
                 {104,17},
                 {atom,{104,17},target},
                 {atom,{104,24},any}},
             {type,
                 {104,31},
                 union,
                 [{type,
                      {104,31},
                      tuple,
                      [{type,{104,32},atom,[]},
                       {type,{104,40},non_neg_integer,[]}]},
                  {atom,{104,61},any}]}},
         {typed_record_field,
             {record_field,{105,17},{atom,{105,17},type},{atom,{105,22},any}},
             {user_type,{105,29},type,[]}}]}}.
{attribute,
    {106,2},
    record,
    {t_integer,
        [{typed_record_field,
             {record_field,
                 {106,21},
                 {atom,{106,21},elements},
                 {atom,{106,30},any}},
             {type,
                 {106,37},
                 union,
                 [{atom,{106,37},any},
                  {remote_type,
                      {106,45},
                      [{atom,{106,45},beam_bounds},
                       {atom,{106,57},range},
                       []]}]}}]}}.
{attribute,
    {107,2},
    record,
    {t_number,
        [{typed_record_field,
             {record_field,
                 {107,20},
                 {atom,{107,20},elements},
                 {atom,{107,29},any}},
             {type,
                 {107,36},
                 union,
                 [{atom,{107,36},any},
                  {remote_type,
                      {107,44},
                      [{atom,{107,44},beam_bounds},
                       {atom,{107,56},range},
                       []]}]}}]}}.
{attribute,
    {113,2},
    record,
    {t_map,
        [{typed_record_field,
             {record_field,
                 {113,17},
                 {atom,{113,17},super_key},
                 {atom,{113,27},any}},
             {user_type,{113,34},type,[]}},
         {typed_record_field,
             {record_field,
                 {114,17},
                 {atom,{114,17},super_value},
                 {atom,{114,29},any}},
             {user_type,{114,36},type,[]}}]}}.
{attribute,
    {122,2},
    record,
    {t_cons,
        [{typed_record_field,
             {record_field,{122,18},{atom,{122,18},type},{atom,{122,23},any}},
             {user_type,{122,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {122,38},
                 {atom,{122,38},terminator},
                 {atom,{122,49},any}},
             {user_type,{122,56},type,[]}}]}}.
{attribute,
    {123,2},
    record,
    {t_list,
        [{typed_record_field,
             {record_field,{123,18},{atom,{123,18},type},{atom,{123,23},any}},
             {user_type,{123,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {123,38},
                 {atom,{123,38},terminator},
                 {atom,{123,49},any}},
             {user_type,{123,56},type,[]}}]}}.
{attribute,
    {125,2},
    record,
    {t_tuple,
        [{typed_record_field,
             {record_field,{125,19},{atom,{125,19},size},{integer,{125,24},0}},
             {type,{125,29},integer,[]}},
         {typed_record_field,
             {record_field,
                 {126,19},
                 {atom,{126,19},exact},
                 {atom,{126,25},false}},
             {type,{126,34},boolean,[]}},
         {typed_record_field,
             {record_field,
                 {127,19},
                 {atom,{127,19},elements},
                 {map,{127,28},[]}},
             {user_type,{127,35},tuple_elements,[]}}]}}.
{attribute,
    {146,2},
    type,
    {tuple_elements,
        {type,
            {146,27},
            map,
            [{type,
                 {146,51},
                 map_field_assoc,
                 [{ann_type,
                      {146,30},
                      [{var,{146,30},'Key'},{type,{146,37},pos_integer,[]}]},
                  {user_type,{146,54},type,[]}]}]},
        []}}.
{attribute,{148,2},
           type,
           {normal_type,{type,{148,24},
                              union,
                              [{atom,{148,24},any},
                               {atom,{148,32},none},
                               {type,{149,24},
                                     record,
                                     [{atom,{149,25},t_number}]},
                               {type,{149,38},
                                     record,
                                     [{atom,{149,39},t_float}]},
                               {type,{149,51},
                                     record,
                                     [{atom,{149,52},t_integer}]},
                               {type,{150,24},record,[{atom,{150,25},t_atom}]},
                               {type,{151,24},
                                     record,
                                     [{atom,{151,25},t_bitstring}]},
                               {type,{151,41},
                                     record,
                                     [{atom,{151,42},t_bs_context}]},
                               {type,{151,59},
                                     record,
                                     [{atom,{151,60},t_bs_matchable}]},
                               {type,{152,24},record,[{atom,{152,25},t_fun}]},
                               {type,{153,24},record,[{atom,{153,25},t_list}]},
                               {type,{153,36},record,[{atom,{153,37},t_cons}]},
                               {atom,{153,48},nil},
                               {atom,{154,24},other},
                               {type,{155,24},record,[{atom,{155,25},t_map}]},
                               {atom,{156,24},identifier},
                               {atom,{157,24},pid},
                               {atom,{158,24},port},
                               {atom,{159,24},reference},
                               {type,{160,24},
                                     record,
                                     [{atom,{160,25},t_tuple}]}]},
                        []}}.
{attribute,{162,2},
           type,
           {other_type,{type,{162,23},
                             union,
                             [{atom,{162,23},none},
                              {type,{162,32},record,[{atom,{162,33},t_fun}]},
                              {type,{162,43},record,[{atom,{162,44},t_map}]},
                              {atom,{163,23},pid},
                              {atom,{163,31},port},
                              {atom,{163,40},reference},
                              {atom,{163,54},identifier},
                              {type,{164,23},
                                    record,
                                    [{atom,{164,24},t_bitstring}]},
                              {type,{164,40},
                                    record,
                                    [{atom,{164,41},t_bs_context}]},
                              {type,{165,23},
                                    record,
                                    [{atom,{165,24},t_bs_matchable}]}]},
                       []}}.
{attribute,
    {167,2},
    type,
    {record_key,
        {type,
            {167,23},
            tuple,
            [{ann_type,
                 {167,24},
                 [{var,{167,24},'Arity'},{type,{167,33},integer,[]}]},
             {ann_type,
                 {167,44},
                 [{var,{167,44},'Tag'},{user_type,{167,51},normal_type,[]}]}]},
        []}}.
{attribute,
    {168,2},
    type,
    {record_set,
        {remote_type,
            {168,23},
            [{atom,{168,23},ordsets},
             {atom,{168,31},ordset},
             [{type,
                  {168,38},
                  tuple,
                  [{user_type,{168,39},record_key,[]},
                   {type,{168,53},record,[{atom,{168,54},t_tuple}]}]}]]},
        []}}.
{attribute,{169,2},
           type,
           {tuple_set,{type,{169,22},
                            union,
                            [{type,{169,22},record,[{atom,{169,23},t_tuple}]},
                             {user_type,{169,35},record_set,[]}]},
                      []}}.
{attribute,
    {173,2},
    record,
    {t_union,
        [{typed_record_field,
             {record_field,{173,19},{atom,{173,19},atom},{atom,{173,24},none}},
             {type,
                 {173,32},
                 union,
                 [{atom,{173,32},none},
                  {type,{173,41},record,[{atom,{173,42},t_atom}]}]}},
         {typed_record_field,
             {record_field,{174,19},{atom,{174,19},list},{atom,{174,24},none}},
             {type,
                 {174,32},
                 union,
                 [{atom,{174,32},none},
                  {type,{174,41},record,[{atom,{174,42},t_list}]},
                  {type,{174,53},record,[{atom,{174,54},t_cons}]},
                  {atom,{174,65},nil}]}},
         {typed_record_field,
             {record_field,
                 {175,19},
                 {atom,{175,19},number},
                 {atom,{175,26},none}},
             {type,
                 {175,34},
                 union,
                 [{atom,{175,34},none},
                  {type,{175,43},record,[{atom,{175,44},t_number}]},
                  {type,{175,57},record,[{atom,{175,58},t_float}]},
                  {type,{175,70},record,[{atom,{175,71},t_integer}]}]}},
         {typed_record_field,
             {record_field,
                 {176,19},
                 {atom,{176,19},tuple_set},
                 {atom,{176,29},none}},
             {type,
                 {176,37},
                 union,
                 [{atom,{176,37},none},{user_type,{176,46},tuple_set,[]}]}},
         {typed_record_field,
             {record_field,
                 {177,19},
                 {atom,{177,19},other},
                 {atom,{177,25},none}},
             {type,
                 {177,33},
                 union,
                 [{atom,{177,33},other},
                  {user_type,{177,43},other_type,[]}]}}]}}.
{attribute,{179,2},
           type,
           {type,{type,{179,17},
                       union,
                       [{type,{179,17},record,[{atom,{179,18},t_union}]},
                        {user_type,{179,30},normal_type,[]}]},
                 []}}.
{attribute,{25,1},file,{"beam_call_types.erl",25}}.
{attribute,{26,2},import,{lists,[{any,2},{duplicate,2},{foldl,3}]}}.
{attribute,{28,2},export,[{will_succeed,3},{types,3},{arith_type,2}]}.
{attribute,
    {54,2},
    spec,
    {{will_succeed,3},
     [{type,
          {54,19},
          bounded_fun,
          [{type,
               {54,19},
               'fun',
               [{type,
                    {54,19},
                    product,
                    [{var,{54,20},'Mod'},
                     {var,{54,25},'Func'},
                     {var,{54,31},'ArgTypes'}]},
                {var,{54,44},'Result'}]},
           [{type,
                {55,7},
                constraint,
                [{atom,{55,7},is_subtype},
                 [{var,{55,7},'Mod'},{type,{55,14},atom,[]}]]},
            {type,
                {56,7},
                constraint,
                [{atom,{56,7},is_subtype},
                 [{var,{56,7},'Func'},{type,{56,15},atom,[]}]]},
            {type,
                {57,7},
                constraint,
                [{atom,{57,7},is_subtype},
                 [{var,{57,7},'ArgTypes'},
                  {type,{57,19},list,[{user_type,{57,20},type,[]}]}]]},
            {type,
                {58,7},
                constraint,
                [{atom,{58,7},is_subtype},
                 [{var,{58,7},'Result'},
                  {type,
                      {58,17},
                      union,
                      [{atom,{58,17},yes},
                       {atom,{58,25},no},
                       {atom,
                           [{text,"'maybe'"},{location,{58,32}}],
                           'maybe'}]}]]}]]}]}}.
{function,
 {60,1},
 will_succeed,3,
 [{clause,
   {60,1},
   [{var,{60,1},'_'},{var,{60,1},'_'},{var,{60,1},'_'}],
   [[{call,
      {60,1},
      {remote,{60,1},{atom,{60,1},fake},{atom,{60,1},is_beam_bif_info}},
      []}]],
   [{debug_line,60,1},{atom,{60,1},ignore}]},
  {clause,
   {60,1},
   [{atom,{60,14},erlang},
    {var,{60,22},'Op'},
    {cons,
     {60,26},
     {var,{60,27},'LHS'},
     {cons,{60,32},{var,{60,32},'RHS'},{nil,{60,35}}}}],
   [[{op,{60,46},'=:=',{var,{60,43},'Op'},{atom,{60,50},'+'}}],
    [{op,{61,46},'=:=',{var,{61,43},'Op'},{atom,{61,50},'-'}}],
    [{op,{62,46},'=:=',{var,{62,43},'Op'},{atom,{62,50},'*'}}]],
   [{debug_line,63,2},
    {call,
     {63,5},
     {atom,{63,5},succeeds_if_smallish},
     [{var,{63,26},'LHS'},{var,{63,31},'RHS'}]}]},
  {clause,
   {64,1},
   [{atom,{64,14},erlang},
    {var,{64,22},'Op'},
    {match,
     {64,26},
     {cons,
      {64,26},
      {var,{64,27},'LHS'},
      {cons,{64,32},{var,{64,32},'RHS'},{nil,{64,35}}}},
     {var,{64,37},'Args'}}],
   [[{op,{64,51},'=:=',{var,{64,48},'Op'},{atom,{64,55},'div'}}],
    [{op,{65,51},'=:=',{var,{65,48},'Op'},{atom,{65,55},'rem'}}]],
   [{debug_line,66,3},
    {'case',
     {66,5},
     {tuple,
      {66,10},
      [{call,
        {66,11},
        {atom,{66,11},meet},
        [{var,{66,16},'LHS'},
         {block,0,
          [{tuple,{66,21},[{atom,{66,21},t_integer},{atom,{66,21},any}]}]}]},
       {call,
        {66,36},
        {atom,{66,36},meet},
        [{var,{66,41},'RHS'},
         {block,0,
          [{tuple,{66,46},[{atom,{66,46},t_integer},{atom,{66,46},any}]}]}]}]},
     [{clause,
       {67,9},
       [{tuple,
         {67,9},
         [{match,
           {67,10},
           {tuple,
            {67,10},
            [{atom,{67,10},t_integer},
             {tuple,{67,30},[{var,{67,31},'_'},{var,{67,33},'_'}]}]},
           {var,{67,37},'LHS'}},
          {match,
           {68,10},
           {tuple,
            {68,10},
            [{atom,{68,10},t_integer},
             {tuple,{68,30},[{var,{68,31},'Min'},{var,{68,35},'Max'}]}]},
           {var,{68,41},'RHS'}}]}],
       [[{call,
          {69,16},
          {remote,{69,16},{atom,{69,16},erlang},{atom,{69,16},is_integer}},
          [{var,{69,27},'Min'}]},
         {op,{69,37},'>',{var,{69,33},'Min'},{integer,{69,39},0}}],
        [{call,
          {70,16},
          {remote,{70,16},{atom,{70,16},erlang},{atom,{70,16},is_integer}},
          [{var,{70,27},'Max'}]},
         {op,
          {70,37},
          '<',
          {var,{70,33},'Max'},
          {op,{70,39},'-',{integer,{70,40},1}}}]],
       [{debug_line,71,4},{atom,{71,13},yes}]},
      {clause,
       {72,9},
       [{tuple,
         {72,9},
         [{tuple,{72,10},[{atom,{72,10},t_integer},{var,{72,10},'_'}]},
          {tuple,{72,24},[{atom,{72,24},t_integer},{var,{72,24},'_'}]}]}],
       [],
       [{debug_line,73,5},
        {call,
         {73,13},
         {atom,{73,13},fails_on_conflict},
         [{atom,{73,31},erlang},{var,{73,39},'Op'},{var,{73,43},'Args'}]}]},
      {clause,
       {74,9},
       [{tuple,{74,9},[{var,{74,10},'_'},{var,{74,13},'_'}]}],
       [],
       [{debug_line,75,6},{atom,{75,13},no}]}]}]},
  {clause,
   {77,1},
   [{atom,{77,14},erlang},
    {match,{77,22},{atom,{77,22},'bsr'},{var,{77,28},'Op'}},
    {match,
     {77,32},
     {cons,
      {77,32},
      {var,{77,33},'LHS'},
      {cons,{77,38},{var,{77,38},'RHS'},{nil,{77,41}}}},
     {var,{77,43},'Args'}}],
   [],
   [{debug_line,78,7},
    {'case',
     {78,5},
     {tuple,
      {78,10},
      [{call,
        {78,11},
        {atom,{78,11},meet},
        [{var,{78,16},'LHS'},
         {block,0,
          [{tuple,{78,21},[{atom,{78,21},t_integer},{atom,{78,21},any}]}]}]},
       {call,
        {78,36},
        {atom,{78,36},meet},
        [{var,{78,41},'RHS'},
         {block,0,
          [{tuple,{78,46},[{atom,{78,46},t_integer},{atom,{78,46},any}]}]}]}]},
     [{clause,
       {79,9},
       [{tuple,
         {79,9},
         [{match,
           {79,10},
           {tuple,
            {79,10},
            [{atom,{79,10},t_integer},
             {tuple,{79,30},[{var,{79,31},'_'},{var,{79,33},'_'}]}]},
           {var,{79,37},'LHS'}},
          {match,
           {80,10},
           {tuple,
            {80,10},
            [{atom,{80,10},t_integer},
             {tuple,{80,30},[{var,{80,31},'MinShift'},{var,{80,40},'_'}]}]},
           {var,{80,44},'RHS'}}]}],
       [[{call,
          {81,16},
          {remote,{81,16},{atom,{81,16},erlang},{atom,{81,16},is_integer}},
          [{var,{81,27},'MinShift'}]},
         {op,{81,47},'>=',{var,{81,38},'MinShift'},{integer,{81,50},0}}]],
       [{debug_line,82,8},{atom,{82,13},yes}]},
      {clause,
       {83,9},
       [{tuple,
         {83,9},
         [{tuple,{83,10},[{atom,{83,10},t_integer},{var,{83,10},'_'}]},
          {tuple,{83,24},[{atom,{83,24},t_integer},{var,{83,24},'_'}]}]}],
       [],
       [{debug_line,84,9},
        {call,
         {84,13},
         {atom,{84,13},fails_on_conflict},
         [{atom,{84,31},erlang},{var,{84,39},'Op'},{var,{84,43},'Args'}]}]},
      {clause,
       {85,9},
       [{tuple,{85,9},[{var,{85,10},'_'},{var,{85,13},'_'}]}],
       [],
       [{debug_line,86,10},{atom,{86,13},no}]}]}]},
  {clause,
   {88,1},
   [{atom,{88,14},erlang},
    {match,{88,22},{atom,{88,22},'bsl'},{var,{88,28},'Op'}},
    {match,
     {88,32},
     {cons,
      {88,32},
      {var,{88,33},'LHS'},
      {cons,{88,38},{var,{88,38},'RHS'},{nil,{88,41}}}},
     {var,{88,43},'Args'}}],
   [],
   [{debug_line,89,11},
    {'case',
     {89,5},
     {tuple,
      {89,10},
      [{call,
        {89,11},
        {atom,{89,11},meet},
        [{var,{89,16},'LHS'},
         {block,0,
          [{tuple,{89,21},[{atom,{89,21},t_integer},{atom,{89,21},any}]}]}]},
       {call,
        {89,36},
        {atom,{89,36},meet},
        [{var,{89,41},'RHS'},
         {block,0,
          [{tuple,{89,46},[{atom,{89,46},t_integer},{atom,{89,46},any}]}]}]}]},
     [{clause,
       {90,9},
       [{tuple,
         {90,9},
         [{var,{90,10},'LHS'},
          {match,
           {90,15},
           {tuple,
            {90,15},
            [{atom,{90,15},t_integer},
             {tuple,{90,35},[{var,{90,36},'_'},{var,{90,38},'MaxShift'}]}]},
           {var,{90,49},'RHS'}}]}],
       [[{call,
          {91,16},
          {remote,{91,16},{atom,{91,16},erlang},{atom,{91,16},is_integer}},
          [{var,{91,27},'MaxShift'}]},
         {op,{91,47},'<',{var,{91,38},'MaxShift'},{integer,{91,49},64}}]],
       [{debug_line,92,12},
        {call,
         {92,13},
         {atom,{92,13},succeeds_if_smallish},
         [{var,{92,34},'LHS'}]}]},
      {clause,
       {93,9},
       [{tuple,
         {93,9},
         [{tuple,{93,10},[{atom,{93,10},t_integer},{var,{93,10},'_'}]},
          {tuple,{93,24},[{atom,{93,24},t_integer},{var,{93,24},'_'}]}]}],
       [],
       [{debug_line,94,13},
        {call,
         {94,13},
         {atom,{94,13},fails_on_conflict},
         [{atom,{94,31},erlang},{var,{94,39},'Op'},{var,{94,43},'Args'}]}]},
      {clause,
       {95,9},
       [{tuple,{95,9},[{var,{95,10},'_'},{var,{95,13},'_'}]}],
       [],
       [{debug_line,96,14},{atom,{96,13},no}]}]}]},
  {clause,
   {98,1},
   [{atom,{98,14},erlang},
    {atom,{98,22},'++'},
    {cons,
     {98,28},
     {var,{98,29},'LHS'},
     {cons,{98,34},{var,{98,34},'_RHS'},{nil,{98,38}}}}],
   [],
   [{debug_line,99,15},
    {call,
     {99,5},
     {atom,{99,5},succeeds_if_type},
     [{var,{99,22},'LHS'},
      {block,0,[{call,{99,27},{atom,{99,27},proper_list},[]}]}]}]},
  {clause,
   {100,1},
   [{atom,{100,14},erlang},
    {atom,{100,22},'--'},
    {match,
     {100,28},
     {cons,
      {100,28},
      {var,{100,29},'_'},
      {cons,{100,32},{var,{100,32},'_'},{nil,{100,33}}}},
     {var,{100,37},'Args'}}],
   [],
   [{debug_line,101,16},
    {call,
     {101,5},
     {atom,{101,5},succeeds_if_types},
     [{var,{101,23},'Args'},
      {block,0,[{call,{101,29},{atom,{101,29},proper_list},[]}]}]}]},
  {clause,
   {102,1},
   [{atom,{102,14},erlang},
    {var,{102,22},'BoolOp'},
    {match,
     {102,30},
     {cons,
      {102,30},
      {var,{102,31},'_'},
      {cons,{102,34},{var,{102,34},'_'},{nil,{102,35}}}},
     {var,{102,39},'Args'}}],
   [[{op,{102,57},'=:=',{var,{102,50},'BoolOp'},{atom,{102,61},'and'}}],
    [{op,{103,57},'=:=',{var,{103,50},'BoolOp'},{atom,{103,61},'or'}}]],
   [{debug_line,104,17},
    {call,
     {104,5},
     {atom,{104,5},succeeds_if_types},
     [{var,{104,23},'Args'},
      {block,0,
       [{call,
         {104,29},
         {remote,
          {104,39},
          {atom,{104,29},beam_types},
          {atom,{104,40},make_boolean}},
         []}]}]}]},
  {clause,
   {105,1},
   [{atom,{105,14},erlang},
    {var,{105,22},'Op'},
    {match,
     {105,26},
     {cons,
      {105,26},
      {var,{105,27},'_'},
      {cons,{105,30},{var,{105,30},'_'},{nil,{105,31}}}},
     {var,{105,35},'Args'}}],
   [[{op,{105,49},'=:=',{var,{105,46},'Op'},{atom,{105,53},'band'}}],
    [{op,{106,49},'=:=',{var,{106,46},'Op'},{atom,{106,53},'bor'}}],
    [{op,{107,49},'=:=',{var,{107,46},'Op'},{atom,{107,53},'bxor'}}]],
   [{debug_line,108,18},
    {call,
     {108,5},
     {atom,{108,5},succeeds_if_types},
     [{var,{108,23},'Args'},
      {block,0,
       [{tuple,{108,29},[{atom,{108,29},t_integer},{atom,{108,29},any}]}]}]}]},
  {clause,
   {109,1},
   [{atom,{109,14},erlang},
    {atom,{109,22},bit_size},
    {cons,{109,32},{var,{109,33},'Arg'},{nil,{109,36}}}],
   [],
   [{debug_line,110,19},
    {call,
     {110,5},
     {atom,{110,5},succeeds_if_type},
     [{var,{110,22},'Arg'},
      {block,0,
       [{tuple,
         {110,27},
         [{atom,{110,27},t_bs_matchable},{integer,{110,27},1}]}]}]}]},
  {clause,
   {111,1},
   [{atom,{111,14},erlang},
    {atom,{111,22},byte_size},
    {cons,{111,33},{var,{111,34},'Arg'},{nil,{111,37}}}],
   [],
   [{debug_line,112,20},
    {call,
     {112,5},
     {atom,{112,5},succeeds_if_type},
     [{var,{112,22},'Arg'},
      {block,0,
       [{tuple,
         {112,27},
         [{atom,{112,27},t_bs_matchable},{integer,{112,27},1}]}]}]}]},
  {clause,
   {113,1},
   [{atom,{113,14},erlang},
    {atom,{113,22},element},
    {match,
     {113,31},
     {cons,
      {113,31},
      {var,{113,32},'Pos'},
      {cons,{113,37},{var,{113,37},'Tuple'},{nil,{113,42}}}},
     {var,{113,44},'Args'}}],
   [],
   [{debug_line,114,21},
    {'case',
     {114,5},
     {call,{114,10},{atom,{114,10},normalize},[{var,{114,20},'Tuple'}]},
     [{clause,
       {115,9},
       [{tuple,
         {115,9},
         [{atom,{115,9},t_tuple},
          {var,{115,35},'Sz'},
          {var,{115,24},'Exact'},
          {var,{115,9},'_'}]}],
       [[{op,{115,47},'>=',{var,{115,44},'Sz'},{integer,{115,50},1}}]],
       [{debug_line,116,22},
        {'case',
         {116,13},
         {call,
          {116,18},
          {atom,{116,18},meet},
          [{var,{116,23},'Pos'},
           {block,0,
            [{tuple,
              {116,28},
              [{atom,{116,28},t_integer},
               {tuple,
                {116,48},
                [{integer,{116,49},1},{var,{116,51},'Sz'}]}]}]}]},
         [{clause,
           {117,17},
           [{var,{117,17},'Pos'}],
           [],
           [{debug_line,117,23},{atom,{117,24},yes}]},
          {clause,
           {118,17},
           [{atom,{118,17},none}],
           [[{var,{118,27},'Exact'}]],
           [{debug_line,118,24},{atom,{118,36},no}]},
          {clause,
           {119,17},
           [{var,{119,17},'_'}],
           [],
           [{debug_line,119,25},
            {call,
             {119,22},
             {atom,{119,22},fails_on_conflict},
             [{atom,{119,40},erlang},
              {atom,{119,48},element},
              {var,{119,57},'Args'}]}]}]}]},
      {clause,
       {122,9},
       [{var,{122,9},'_'}],
       [],
       [{debug_line,123,26},
        {call,
         {123,13},
         {atom,{123,13},fails_on_conflict},
         [{atom,{123,31},erlang},
          {atom,{123,39},element},
          {var,{123,48},'Args'}]}]}]}]},
  {clause,
   {125,1},
   [{atom,{125,14},erlang},
    {atom,{125,22},hd},
    {cons,{125,26},{var,{125,27},'Arg'},{nil,{125,30}}}],
   [],
   [{debug_line,126,27},
    {call,
     {126,5},
     {atom,{126,5},succeeds_if_type},
     [{var,{126,22},'Arg'},
      {block,0,
       [{tuple,
         {126,27},
         [{atom,{126,27},t_cons},
          {atom,{126,27},any},
          {atom,{126,27},any}]}]}]}]},
  {clause,
   {127,1},
   [{atom,{127,14},erlang},
    {atom,{127,22},is_function},
    {match,
     {127,35},
     {cons,
      {127,35},
      {var,{127,36},'_'},
      {cons,{127,39},{var,{127,39},'Arity'},{nil,{127,44}}}},
     {var,{127,46},'Args'}}],
   [],
   [{debug_line,128,28},
    {'case',
     {128,5},
     {call,
      {128,10},
      {atom,{128,10},meet},
      [{var,{128,15},'Arity'},
       {block,0,
        [{tuple,{128,22},[{atom,{128,22},t_integer},{atom,{128,22},any}]}]}]},
     [{clause,
       {129,9},
       [{match,
         {129,9},
         {tuple,
          {129,9},
          [{atom,{129,9},t_integer},
           {tuple,{129,29},[{var,{129,30},'Min'},{var,{129,34},'_'}]}]},
         {var,{129,38},'Arity'}}],
       [[{call,
          {129,49},
          {remote,{129,49},{atom,{129,49},erlang},{atom,{129,49},is_integer}},
          [{var,{129,60},'Min'}]},
         {op,{129,70},'>=',{var,{129,66},'Min'},{integer,{129,73},0}}]],
       [{debug_line,130,29},{atom,{130,13},yes}]},
      {clause,
       {131,9},
       [{tuple,{131,9},[{atom,{131,9},t_integer},{var,{131,9},'_'}]}],
       [],
       [{debug_line,132,30},
        {call,
         {132,13},
         {atom,{132,13},fails_on_conflict},
         [{atom,{132,31},erlang},
          {atom,{132,39},is_function},
          {var,{132,52},'Args'}]}]},
      {clause,
       {133,9},
       [{var,{133,9},'_'}],
       [],
       [{debug_line,134,31},{atom,{134,13},no}]}]}]},
  {clause,
   {136,1},
   [{atom,{136,14},erlang},
    {atom,{136,22},is_map_key},
    {cons,
     {136,34},
     {var,{136,35},'_Key'},
     {cons,{136,41},{var,{136,41},'Map'},{nil,{136,44}}}}],
   [],
   [{debug_line,137,32},
    {call,
     {137,5},
     {atom,{137,5},succeeds_if_type},
     [{var,{137,22},'Map'},
      {block,0,
       [{tuple,
         {137,27},
         [{atom,{137,27},t_map},
          {atom,{137,27},any},
          {atom,{137,27},any}]}]}]}]},
  {clause,
   {138,1},
   [{atom,{138,14},erlang},
    {atom,{138,22},length},
    {cons,{138,30},{var,{138,31},'Arg'},{nil,{138,34}}}],
   [],
   [{debug_line,139,33},
    {call,
     {139,5},
     {atom,{139,5},succeeds_if_type},
     [{var,{139,22},'Arg'},
      {block,0,[{call,{139,27},{atom,{139,27},proper_list},[]}]}]}]},
  {clause,
   {140,1},
   [{atom,{140,14},erlang},
    {atom,{140,22},map_size},
    {cons,{140,32},{var,{140,33},'Arg'},{nil,{140,36}}}],
   [],
   [{debug_line,141,34},
    {call,
     {141,5},
     {atom,{141,5},succeeds_if_type},
     [{var,{141,22},'Arg'},
      {block,0,
       [{tuple,
         {141,27},
         [{atom,{141,27},t_map},
          {atom,{141,27},any},
          {atom,{141,27},any}]}]}]}]},
  {clause,
   {142,1},
   [{atom,{142,14},erlang},
    {atom,{142,22},node},
    {cons,{142,28},{var,{142,29},'Arg'},{nil,{142,32}}}],
   [],
   [{debug_line,143,35},
    {call,
     {143,5},
     {atom,{143,5},succeeds_if_type},
     [{var,{143,22},'Arg'},{atom,{143,27},identifier}]}]},
  {clause,
   {144,1},
   [{atom,{144,14},erlang},
    {atom,{144,22},'and'},
    {match,
     {144,29},
     {cons,
      {144,29},
      {var,{144,30},'_'},
      {cons,{144,33},{var,{144,33},'_'},{nil,{144,34}}}},
     {var,{144,36},'Args'}}],
   [],
   [{debug_line,145,36},
    {call,
     {145,5},
     {atom,{145,5},succeeds_if_types},
     [{var,{145,23},'Args'},
      {block,0,
       [{call,
         {145,29},
         {remote,
          {145,39},
          {atom,{145,29},beam_types},
          {atom,{145,40},make_boolean}},
         []}]}]}]},
  {clause,
   {146,1},
   [{atom,{146,14},erlang},
    {atom,{146,22},'not'},
    {cons,{146,29},{var,{146,30},'Arg'},{nil,{146,33}}}],
   [],
   [{debug_line,147,37},
    {call,
     {147,5},
     {atom,{147,5},succeeds_if_type},
     [{var,{147,22},'Arg'},
      {block,0,
       [{call,
         {147,27},
         {remote,
          {147,37},
          {atom,{147,27},beam_types},
          {atom,{147,38},make_boolean}},
         []}]}]}]},
  {clause,
   {148,1},
   [{atom,{148,14},erlang},
    {atom,{148,22},'or'},
    {match,
     {148,28},
     {cons,
      {148,28},
      {var,{148,29},'_'},
      {cons,{148,32},{var,{148,32},'_'},{nil,{148,33}}}},
     {var,{148,35},'Args'}}],
   [],
   [{debug_line,149,38},
    {call,
     {149,5},
     {atom,{149,5},succeeds_if_types},
     [{var,{149,23},'Args'},
      {block,0,
       [{call,
         {149,29},
         {remote,
          {149,39},
          {atom,{149,29},beam_types},
          {atom,{149,40},make_boolean}},
         []}]}]}]},
  {clause,
   {150,1},
   [{atom,{150,14},erlang},
    {atom,{150,22},'xor'},
    {match,
     {150,29},
     {cons,
      {150,29},
      {var,{150,30},'_'},
      {cons,{150,33},{var,{150,33},'_'},{nil,{150,34}}}},
     {var,{150,36},'Args'}}],
   [],
   [{debug_line,151,39},
    {call,
     {151,5},
     {atom,{151,5},succeeds_if_types},
     [{var,{151,23},'Args'},
      {block,0,
       [{call,
         {151,29},
         {remote,
          {151,39},
          {atom,{151,29},beam_types},
          {atom,{151,40},make_boolean}},
         []}]}]}]},
  {clause,
   {152,1},
   [{atom,{152,14},erlang},
    {atom,{152,22},setelement},
    {match,
     {152,34},
     {cons,
      {152,34},
      {var,{152,35},'Pos'},
      {cons,
       {152,40},
       {var,{152,40},'Tuple0'},
       {cons,{152,48},{var,{152,48},'_Value'},{nil,{152,54}}}}},
     {var,{152,56},'Args'}}],
   [],
   [{debug_line,153,40},
    {match,
     {153,5},
     {var,{153,5},'PosRange'},
     {tuple,
      {153,16},
      [{atom,{153,16},t_integer},
       {tuple,
        {153,36},
        [{integer,{153,37},1},
         {op,
          {153,40},
          '-',
          {op,{153,40},'bsl',{integer,{153,40},1},{integer,{153,40},24}},
          {integer,{153,40},1}}]}]}},
    {debug_line,154,41},
    {'case',
     {154,5},
     {tuple,
      {154,10},
      [{call,
        {154,11},
        {atom,{154,11},meet},
        [{var,{154,16},'Pos'},{var,{154,21},'PosRange'}]},
       {call,
        {154,32},
        {atom,{154,32},meet},
        [{var,{154,37},'Tuple0'},
         {block,0,
          [{tuple,
            {154,45},
            [{atom,{154,45},t_tuple},
             {integer,{154,59},1},
             {atom,{154,45},false},
             {map,{154,45},[]}]}]}]}]},
     [{clause,
       {155,9},
       [{tuple,{155,9},[{atom,{155,10},none},{var,{155,16},'_'}]}],
       [],
       [{debug_line,156,42},{atom,{156,13},no}]},
      {clause,
       {157,9},
       [{tuple,{157,9},[{var,{157,10},'_'},{atom,{157,13},none}]}],
       [],
       [{debug_line,158,43},{atom,{158,13},no}]},
      {clause,
       {159,9},
       [{tuple,
         {159,9},
         [{match,
           {159,10},
           {tuple,
            {159,10},
            [{atom,{159,10},t_integer},
             {tuple,{159,30},[{var,{159,31},'Min'},{var,{159,35},'Max'}]}]},
           {var,{159,41},'Pos'}},
          {var,{159,46},'Tuple'}]}],
       [],
       [{debug_line,160,44},
        {match,
         {160,13},
         {var,{160,13},'MaxTupleSize'},
         {call,
          {160,28},
          {atom,{160,28},max_tuple_size},
          [{var,{160,43},'Tuple'}]}},
        {debug_line,161,45},
        {'if',
         {161,13},
         [{clause,
           {162,17},
           [],
           [[{op,
              {162,30},
              '<',
              {var,{162,17},'MaxTupleSize'},
              {var,{162,32},'Min'}}]],
           [{debug_line,164,46},{atom,{164,21},no}]},
          {clause,
           {165,17},
           [],
           [[{op,
              {165,24},
              '=:=',
              {var,{165,17},'Tuple0'},
              {var,{165,28},'Tuple'}},
             {op,
              {165,39},
              '=<',
              {var,{165,35},'Max'},
              {var,{165,42},'MaxTupleSize'}}]],
           [{debug_line,168,47},{atom,{168,21},yes}]},
          {clause,
           {169,17},
           [],
           [[{atom,{169,17},true}]],
           [{debug_line,172,48},
            {call,
             {172,21},
             {atom,{172,21},fails_on_conflict},
             [{atom,{172,39},erlang},
              {atom,{172,47},setelement},
              {var,{172,59},'Args'}]}]}]}]},
      {clause,
       {174,9},
       [{tuple,{174,9},[{var,{174,10},'_'},{var,{174,13},'_'}]}],
       [],
       [{debug_line,175,49},
        {call,
         {175,13},
         {atom,{175,13},fails_on_conflict},
         [{atom,{175,31},erlang},
          {atom,{175,39},setelement},
          {var,{175,51},'Args'}]}]}]}]},
  {clause,
   {177,1},
   [{atom,{177,14},erlang},
    {atom,{177,22},size},
    {cons,{177,28},{var,{177,29},'Arg'},{nil,{177,32}}}],
   [],
   [{debug_line,178,50},
    {match,
     {178,5},
     {var,{178,5},'ArgType'},
     {call,
      {178,15},
      {atom,{178,15},join},
      [{block,0,
        [{tuple,
          {178,20},
          [{atom,{178,20},t_tuple},
           {integer,{178,20},0},
           {atom,{178,20},false},
           {map,{178,20},[]}]}]},
       {block,0,
        [{tuple,
          {178,32},
          [{atom,{178,32},t_bitstring},
           {integer,{178,32},1},
           {atom,{178,32},false}]}]}]}},
    {debug_line,179,51},
    {call,
     {179,5},
     {atom,{179,5},succeeds_if_type},
     [{var,{179,22},'Arg'},{var,{179,27},'ArgType'}]}]},
  {clause,
   {180,1},
   [{atom,{180,14},erlang},
    {atom,{180,22},tuple_size},
    {cons,{180,34},{var,{180,35},'Arg'},{nil,{180,38}}}],
   [],
   [{debug_line,181,52},
    {call,
     {181,5},
     {atom,{181,5},succeeds_if_type},
     [{var,{181,22},'Arg'},
      {block,0,
       [{tuple,
         {181,27},
         [{atom,{181,27},t_tuple},
          {integer,{181,27},0},
          {atom,{181,27},false},
          {map,{181,27},[]}]}]}]}]},
  {clause,
   {182,1},
   [{atom,{182,14},erlang},
    {atom,{182,22},tl},
    {cons,{182,26},{var,{182,27},'Arg'},{nil,{182,30}}}],
   [],
   [{debug_line,183,53},
    {call,
     {183,5},
     {atom,{183,5},succeeds_if_type},
     [{var,{183,22},'Arg'},
      {block,0,
       [{tuple,
         {183,27},
         [{atom,{183,27},t_cons},
          {atom,{183,27},any},
          {atom,{183,27},any}]}]}]}]},
  {clause,
   {184,1},
   [{atom,{184,14},erlang},
    {atom,{184,22},raise},
    {cons,
     {184,29},
     {var,{184,30},'Class'},
     {cons,
      {184,37},
      {var,{184,37},'_Reason'},
      {cons,{184,46},{atom,{184,46},nil},{nil,{184,49}}}}}],
   [],
   [{debug_line,185,54},
    {'case',
     {185,5},
     {call,
      {185,10},
      {atom,{185,10},meet},
      [{var,{185,15},'Class'},
       {block,0,
        [{tuple,
          {185,22},
          [{atom,{185,22},t_atom},
           {cons,
            {185,39},
            {atom,{185,40},error},
            {cons,
             {185,46},
             {atom,{185,46},exit},
             {cons,{185,51},{atom,{185,51},throw},{nil,{185,56}}}}}]}]}]},
     [{clause,
       {186,9},
       [{var,{186,9},'Class'}],
       [],
       [{debug_line,186,55},{atom,{186,18},no}]},
      {clause,
       {187,9},
       [{atom,{187,9},none}],
       [],
       [{debug_line,187,56},{atom,{187,17},yes}]},
      {clause,
       {188,9},
       [{var,{188,9},'_'}],
       [],
       [{debug_line,188,57},
        {atom,[{text,"'maybe'"},{location,{188,14}}],'maybe'}]}]}]},
  {clause,
   {190,1},
   [{var,{190,14},'Mod'},{var,{190,19},'Func'},{var,{190,25},'Args'}],
   [],
   [{debug_line,191,58},
    {match,
     {191,5},
     {var,{191,5},'Arity'},
     {call,
      {191,13},
      {remote,{191,13},{atom,{191,13},erlang},{atom,{191,13},length}},
      [{var,{191,20},'Args'}]}},
    {debug_line,192,59},
    {'case',
     {192,5},
     {call,
      {192,10},
      {remote,{192,18},{atom,{192,10},erl_bifs},{atom,{192,19},is_safe}},
      [{var,{192,27},'Mod'},{var,{192,32},'Func'},{var,{192,38},'Arity'}]},
     [{clause,
       {193,9},
       [{atom,{193,9},true}],
       [],
       [{debug_line,194,60},{atom,{194,13},yes}]},
      {clause,
       {195,9},
       [{atom,{195,9},false}],
       [],
       [{debug_line,196,61},
        {'case',
         {196,13},
         {call,
          {196,18},
          {remote,
           {196,26},
           {atom,{196,18},erl_bifs},
           {atom,{196,27},is_exit_bif}},
          [{var,{196,39},'Mod'},{var,{196,44},'Func'},{var,{196,50},'Arity'}]},
         [{clause,
           {197,17},
           [{atom,{197,17},true}],
           [],
           [{debug_line,198,62},{atom,{198,21},no}]},
          {clause,
           {199,17},
           [{atom,{199,17},false}],
           [],
           [{debug_line,200,63},
            {call,
             {200,21},
             {atom,{200,21},fails_on_conflict},
             [{var,{200,39},'Mod'},
              {var,{200,44},'Func'},
              {var,{200,50},'Args'}]}]}]}]}]}]}]}.
{function,
    {204,1},
    max_tuple_size,1,
    [{clause,
         {204,1},
         [{var,{204,1},'_'}],
         [[{call,
               {204,1},
               {remote,
                   {204,1},
                   {atom,{204,1},fake},
                   {atom,{204,1},is_beam_bif_info}},
               []}]],
         [{debug_line,204,64},{atom,{204,1},ignore}]},
     {clause,
         {204,1},
         [{match,
              {204,16},
              {tuple,
                  {204,16},
                  [{atom,{204,16},t_union},
                   {var,{204,16},'_'},
                   {var,{204,16},'_'},
                   {var,{204,16},'_'},
                   {match,
                       {204,35},
                       {cons,{204,35},{var,{204,36},'_'},{var,{204,38},'_'}},
                       {var,{204,41},'Set'}},
                   {var,{204,16},'_'}]},
              {var,{204,46},'Union'}}],
         [],
         [{debug_line,205,65},
          {match,
              {205,5},
              {var,{205,5},'Union'},
              {call,
                  {205,13},
                  {atom,{205,13},meet},
                  [{var,{205,18},'Union'},
                   {block,0,
                       [{tuple,
                            {205,25},
                            [{atom,{205,25},t_tuple},
                             {integer,{205,25},0},
                             {atom,{205,25},false},
                             {map,{205,25},[]}]}]}]}},
          {debug_line,206,66},
          {match,
              {206,5},
              {var,{206,5},'Arities'},
              {lc,{206,15},
                  {block,0,[{var,{206,16},'Arity'}]},
                  [{block,0,[{atom,{206,54},true}]},
                   {generate_strict,
                       {206,50},
                       {tuple,
                           {206,25},
                           [{tuple,
                                {206,26},
                                [{var,{206,27},'Arity'},
                                 {var,{206,34},'_Tag'}]},
                            {var,{206,41},'_Record'}]},
                       {var,{206,54},'Set'}}]}},
          {debug_line,207,67},
          {call,
              {207,5},
              {remote,{207,10},{atom,{207,5},lists},{atom,{207,11},max}},
              [{var,{207,15},'Arities'}]}]},
     {clause,
         {208,1},
         [{tuple,
              {208,16},
              [{atom,{208,16},t_tuple},
               {var,{208,41},'Size'},
               {atom,{208,31},true},
               {var,{208,16},'_'}]}],
         [],
         [{debug_line,209,68},{var,{209,5},'Size'}]},
     {clause,
         {210,1},
         [{tuple,
              {210,16},
              [{atom,{210,16},t_tuple},
               {var,{210,16},'_'},
               {atom,{210,31},false},
               {var,{210,16},'_'}]}],
         [],
         [{debug_line,211,69},
          {op,{211,6},
              '-',
              {op,{211,6},'bsl',{integer,{211,6},1},{integer,{211,6},24}},
              {integer,{211,6},1}}]}]}.
{function,
    {218,1},
    fails_on_conflict,3,
    [{clause,
         {218,1},
         [{var,{218,1},'_'},{var,{218,1},'_'},{var,{218,1},'_'}],
         [[{call,
               {218,1},
               {remote,
                   {218,1},
                   {atom,{218,1},fake},
                   {atom,{218,1},is_beam_bif_info}},
               []}]],
         [{debug_line,218,70},{atom,{218,1},ignore}]},
     {clause,
         {218,1},
         [{var,{218,19},'Mod'},{var,{218,24},'Func'},{var,{218,30},'Args'}],
         [],
         [{debug_line,219,71},
          {'case',
              {219,5},
              {call,
                  {219,10},
                  {atom,{219,10},types},
                  [{var,{219,16},'Mod'},
                   {var,{219,21},'Func'},
                   {var,{219,27},'Args'}]},
              [{clause,
                   {220,9},
                   [{tuple,
                        {220,9},
                        [{atom,{220,10},none},
                         {var,{220,16},'_'},
                         {var,{220,19},'_'}]}],
                   [],
                   [{debug_line,220,72},{atom,{220,25},no}]},
               {clause,
                   {221,9},
                   [{tuple,
                        {221,9},
                        [{var,{221,10},'_'},
                         {var,{221,13},'ArgTypes'},
                         {var,{221,23},'_'}]}],
                   [],
                   [{debug_line,221,73},
                    {call,
                        {221,29},
                        {atom,{221,29},fails_on_conflict_1},
                        [{var,{221,49},'Args'},
                         {var,{221,55},'ArgTypes'}]}]}]}]}]}.
{function,
    {224,1},
    fails_on_conflict_1,2,
    [{clause,
         {224,1},
         [{var,{224,1},'_'},{var,{224,1},'_'}],
         [[{call,
               {224,1},
               {remote,
                   {224,1},
                   {atom,{224,1},fake},
                   {atom,{224,1},is_beam_bif_info}},
               []}]],
         [{debug_line,224,74},{atom,{224,1},ignore}]},
     {clause,
         {224,1},
         [{cons,{224,21},{var,{224,22},'ArgType'},{var,{224,32},'Args'}},
          {cons,{224,39},{var,{224,40},'Required'},{var,{224,51},'Types'}}],
         [],
         [{debug_line,225,75},
          {'case',
              {225,5},
              {call,
                  {225,10},
                  {atom,{225,10},meet},
                  [{var,{225,15},'ArgType'},{var,{225,24},'Required'}]},
              [{clause,
                   {226,9},
                   [{atom,{226,9},none}],
                   [],
                   [{debug_line,226,76},{atom,{226,17},no}]},
               {clause,
                   {227,9},
                   [{var,{227,9},'_'}],
                   [],
                   [{debug_line,227,77},
                    {call,
                        {227,14},
                        {atom,{227,14},fails_on_conflict_1},
                        [{var,{227,34},'Args'},{var,{227,40},'Types'}]}]}]}]},
     {clause,
         {229,1},
         [{nil,{229,21}},{nil,{229,25}}],
         [],
         [{debug_line,230,78},
          {atom,[{text,"'maybe'"},{location,{230,5}}],'maybe'}]}]}.
{function,
    {232,1},
    succeeds_if_types,2,
    [{clause,
         {232,1},
         [{var,{232,1},'_'},{var,{232,1},'_'}],
         [[{call,
               {232,1},
               {remote,
                   {232,1},
                   {atom,{232,1},fake},
                   {atom,{232,1},is_beam_bif_info}},
               []}]],
         [{debug_line,232,79},{atom,{232,1},ignore}]},
     {clause,
         {232,1},
         [{cons,
              {232,19},
              {var,{232,20},'LHS'},
              {cons,{232,25},{var,{232,25},'RHS'},{nil,{232,28}}}},
          {var,{232,31},'Required'}],
         [],
         [{debug_line,233,80},
          {'case',
              {233,5},
              {tuple,
                  {233,10},
                  [{call,
                       {233,11},
                       {atom,{233,11},succeeds_if_type},
                       [{var,{233,28},'LHS'},{var,{233,33},'Required'}]},
                   {call,
                       {234,11},
                       {atom,{234,11},succeeds_if_type},
                       [{var,{234,28},'RHS'},{var,{234,33},'Required'}]}]},
              [{clause,
                   {235,9},
                   [{tuple,{235,9},[{atom,{235,10},yes},{atom,{235,15},yes}]}],
                   [],
                   [{debug_line,235,81},{atom,{235,23},yes}]},
               {clause,
                   {236,9},
                   [{tuple,{236,9},[{atom,{236,10},no},{var,{236,14},'_'}]}],
                   [],
                   [{debug_line,236,82},{atom,{236,20},no}]},
               {clause,
                   {237,9},
                   [{tuple,{237,9},[{var,{237,10},'_'},{atom,{237,13},no}]}],
                   [],
                   [{debug_line,237,83},{atom,{237,20},no}]},
               {clause,
                   {238,9},
                   [{tuple,{238,9},[{var,{238,10},'_'},{var,{238,13},'_'}]}],
                   [],
                   [{debug_line,238,84},
                    {atom,
                        [{text,"'maybe'"},{location,{238,19}}],
                        'maybe'}]}]}]}]}.
{function,
    {241,1},
    succeeds_if_type,2,
    [{clause,
         {241,1},
         [{var,{241,1},'_'},{var,{241,1},'_'}],
         [[{call,
               {241,1},
               {remote,
                   {241,1},
                   {atom,{241,1},fake},
                   {atom,{241,1},is_beam_bif_info}},
               []}]],
         [{debug_line,241,85},{atom,{241,1},ignore}]},
     {clause,
         {241,1},
         [{var,{241,18},'ArgType'},{var,{241,27},'Required'}],
         [],
         [{debug_line,242,86},
          {'case',
              {242,5},
              {call,
                  {242,10},
                  {atom,{242,10},meet},
                  [{var,{242,15},'ArgType'},{var,{242,24},'Required'}]},
              [{clause,
                   {243,9},
                   [{var,{243,9},'ArgType'}],
                   [],
                   [{debug_line,243,87},{atom,{243,20},yes}]},
               {clause,
                   {244,9},
                   [{atom,{244,9},none}],
                   [],
                   [{debug_line,244,88},{atom,{244,17},no}]},
               {clause,
                   {245,9},
                   [{var,{245,9},'_'}],
                   [],
                   [{debug_line,245,89},
                    {atom,
                        [{text,"'maybe'"},{location,{245,14}}],
                        'maybe'}]}]}]}]}.
{function,
    {248,1},
    succeeds_if_smallish,1,
    [{clause,
         {248,1},
         [{var,{248,1},'_'}],
         [[{call,
               {248,1},
               {remote,
                   {248,1},
                   {atom,{248,1},fake},
                   {atom,{248,1},is_beam_bif_info}},
               []}]],
         [{debug_line,248,90},{atom,{248,1},ignore}]},
     {clause,
         {248,1},
         [{tuple,
              {248,22},
              [{atom,{248,22},t_integer},
               {tuple,{248,42},[{var,{248,43},'Min'},{var,{248,47},'Max'}]}]}],
         [[{op,{249,25},
               '=:=',
               {op,{249,17},
                   'bsr',
                   {call,
                       {249,8},
                       {remote,
                           {249,8},
                           {atom,{249,8},erlang},
                           {atom,{249,8},abs}},
                       [{var,{249,12},'Min'}]},
                   {integer,{249,21},128}},
               {integer,{249,29},0}},
           {op,{249,49},
               '=:=',
               {op,{249,41},
                   'bsr',
                   {call,
                       {249,32},
                       {remote,
                           {249,32},
                           {atom,{249,32},erlang},
                           {atom,{249,32},abs}},
                       [{var,{249,36},'Max'}]},
                   {integer,{249,45},128}},
               {integer,{249,53},0}}]],
         [{debug_line,250,91},{atom,{250,5},yes}]},
     {clause,
         {251,1},
         [{var,{251,22},'ArgType'}],
         [],
         [{debug_line,252,92},
          {'case',
              {252,5},
              {call,
                  {252,10},
                  {atom,{252,10},succeeds_if_type},
                  [{var,{252,27},'ArgType'},
                   {block,0,
                       [{tuple,
                            {252,36},
                            [{atom,{252,36},t_number},
                             {atom,{252,36},any}]}]}]},
              [{clause,
                   {253,9},
                   [{atom,{253,9},yes}],
                   [],
                   [{debug_line,255,93},
                    {atom,[{text,"'maybe'"},{location,{255,13}}],'maybe'}]},
               {clause,
                   {256,9},
                   [{var,{256,9},'Other'}],
                   [],
                   [{debug_line,257,94},{var,{257,13},'Other'}]}]}]}]}.
{function,
    {260,1},
    succeeds_if_smallish,2,
    [{clause,
         {260,1},
         [{var,{260,1},'_'},{var,{260,1},'_'}],
         [[{call,
               {260,1},
               {remote,
                   {260,1},
                   {atom,{260,1},fake},
                   {atom,{260,1},is_beam_bif_info}},
               []}]],
         [{debug_line,260,95},{atom,{260,1},ignore}]},
     {clause,
         {260,1},
         [{var,{260,22},'LHS'},{var,{260,27},'RHS'}],
         [],
         [{debug_line,261,96},
          {'case',
              {261,5},
              {tuple,
                  {261,10},
                  [{call,
                       {261,11},
                       {atom,{261,11},succeeds_if_smallish},
                       [{var,{261,32},'LHS'}]},
                   {call,
                       {262,11},
                       {atom,{262,11},succeeds_if_smallish},
                       [{var,{262,32},'RHS'}]}]},
              [{clause,
                   {263,9},
                   [{tuple,{263,9},[{atom,{263,10},yes},{atom,{263,15},yes}]}],
                   [],
                   [{debug_line,263,97},{atom,{263,23},yes}]},
               {clause,
                   {264,9},
                   [{tuple,{264,9},[{atom,{264,10},no},{var,{264,14},'_'}]}],
                   [],
                   [{debug_line,264,98},{atom,{264,20},no}]},
               {clause,
                   {265,9},
                   [{tuple,{265,9},[{var,{265,10},'_'},{atom,{265,13},no}]}],
                   [],
                   [{debug_line,265,99},{atom,{265,20},no}]},
               {clause,
                   {266,9},
                   [{tuple,{266,9},[{var,{266,10},'_'},{var,{266,13},'_'}]}],
                   [],
                   [{debug_line,266,100},
                    {atom,
                        [{text,"'maybe'"},{location,{266,19}}],
                        'maybe'}]}]}]}]}.
{attribute,{277,2},
           spec,
           {{types,3},
            [{type,{277,12},
                   bounded_fun,
                   [{type,{277,12},
                          'fun',
                          [{type,{277,12},
                                 product,
                                 [{var,{277,13},'Mod'},
                                  {var,{277,18},'Func'},
                                  {var,{277,24},'ArgTypes'}]},
                           {type,{277,37},
                                 tuple,
                                 [{var,{277,38},'RetType'},
                                  {var,{277,47},'ArgTypes'},
                                  {var,{277,57},'CanSubtract'}]}]},
                    [{type,{278,7},
                           constraint,
                           [{atom,{278,7},is_subtype},
                            [{var,{278,7},'Mod'},{type,{278,14},atom,[]}]]},
                     {type,{279,7},
                           constraint,
                           [{atom,{279,7},is_subtype},
                            [{var,{279,7},'Func'},{type,{279,15},atom,[]}]]},
                     {type,{280,7},
                           constraint,
                           [{atom,{280,7},is_subtype},
                            [{var,{280,7},'ArgTypes'},
                             {type,{280,19},
                                   list,
                                   [{user_type,{280,20},normal_type,[]}]}]]},
                     {type,{281,7},
                           constraint,
                           [{atom,{281,7},is_subtype},
                            [{var,{281,7},'RetType'},
                             {user_type,{281,18},type,[]}]]},
                     {type,{282,7},
                           constraint,
                           [{atom,{282,7},is_subtype},
                            [{var,{282,7},'CanSubtract'},
                             {type,{282,22},boolean,[]}]]}]]}]}}.
{function,
 {289,1},
 types,3,
 [{clause,
   {289,1},
   [{var,{289,1},'_'},{var,{289,1},'_'},{var,{289,1},'_'}],
   [[{call,
      {289,1},
      {remote,{289,1},{atom,{289,1},fake},{atom,{289,1},is_beam_bif_info}},
      []}]],
   [{debug_line,289,101},{atom,{289,1},ignore}]},
  {clause,
   {289,1},
   [{atom,{289,7},erlang},
    {atom,{289,15},map_size},
    {cons,{289,27},{var,{289,28},'_'},{nil,{289,29}}}],
   [],
   [{debug_line,290,102},
    {call,
     {290,5},
     {atom,{290,5},sub_safe},
     [{block,0,
       [{tuple,
         {290,14},
         [{atom,{290,14},t_integer},
          {tuple,
           {290,34},
           [{integer,{290,35},0},
            {op,
             {290,38},
             '-',
             {op,{290,38},'bsl',{integer,{290,38},1},{integer,{290,38},58}},
             {integer,{290,38},1}}]}]}]},
      {block,0,
       [{cons,
         {290,58},
         {tuple,
          {290,59},
          [{atom,{290,59},t_map},{atom,{290,59},any},{atom,{290,59},any}]},
         {nil,{290,67}}}]}]}]},
  {clause,
   {291,1},
   [{atom,{291,7},erlang},
    {atom,{291,15},tuple_size},
    {cons,{291,29},{var,{291,30},'Src'},{nil,{291,33}}}],
   [],
   [{debug_line,292,103},
    {match,
     {292,5},
     {var,{292,5},'Min'},
     {'case',
      {292,11},
      {call,
       {292,16},
       {atom,{292,16},normalize},
       [{block,0,
         [{call,
           {292,26},
           {atom,{292,26},meet},
           [{var,{292,31},'Src'},
            {block,0,
             [{tuple,
               {292,36},
               [{atom,{292,36},t_tuple},
                {integer,{292,36},0},
                {atom,{292,36},false},
                {map,{292,36},[]}]}]}]}]}]},
      [{clause,
        {293,15},
        [{tuple,
          {293,15},
          [{atom,{293,15},t_tuple},
           {var,{293,29},'Sz'},
           {var,{293,15},'_'},
           {var,{293,15},'_'}]}],
        [],
        [{debug_line,293,104},{var,{293,36},'Sz'}]},
       {clause,
        {294,15},
        [{var,{294,15},'_'}],
        [],
        [{debug_line,294,105},{integer,{294,20},0}]}]}},
    {debug_line,296,106},
    {match,
     {296,5},
     {var,{296,5},'Max'},
     {op,
      {296,12},
      '-',
      {op,{296,12},'bsl',{integer,{296,12},1},{integer,{296,12},24}},
      {integer,{296,12},1}}},
    {debug_line,297,107},
    {call,
     {297,5},
     {atom,{297,5},sub_safe},
     [{block,0,
       [{tuple,
         {297,14},
         [{atom,{297,14},t_integer},
          {tuple,{297,34},[{var,{297,35},'Min'},{var,{297,39},'Max'}]}]}]},
      {block,0,
       [{cons,
         {297,46},
         {tuple,
          {297,47},
          [{atom,{297,47},t_tuple},
           {integer,{297,47},0},
           {atom,{297,47},false},
           {map,{297,47},[]}]},
         {nil,{297,57}}}]}]}]},
  {clause,
   {298,1},
   [{atom,{298,7},erlang},
    {atom,{298,15},bit_size},
    {cons,{298,27},{var,{298,28},'_'},{nil,{298,29}}}],
   [],
   [{debug_line,299,108},
    {call,
     {299,5},
     {atom,{299,5},sub_safe},
     [{block,0,
       [{tuple,
         {299,14},
         [{atom,{299,14},t_integer},
          {tuple,
           {299,34},
           [{integer,{299,35},0},
            {op,
             {299,38},
             '-',
             {op,{299,38},'bsl',{integer,{299,38},1},{integer,{299,38},58}},
             {integer,{299,38},1}}]}]}]},
      {block,0,
       [{cons,
         {299,58},
         {tuple,
          {299,59},
          [{atom,{299,59},t_bs_matchable},{integer,{299,59},1}]},
         {nil,{299,76}}}]}]}]},
  {clause,
   {300,1},
   [{atom,{300,7},erlang},
    {atom,{300,15},byte_size},
    {cons,{300,28},{var,{300,29},'_'},{nil,{300,30}}}],
   [],
   [{debug_line,301,109},
    {call,
     {301,5},
     {atom,{301,5},sub_safe},
     [{block,0,
       [{tuple,
         {301,14},
         [{atom,{301,14},t_integer},
          {tuple,
           {301,34},
           [{integer,{301,35},0},
            {op,
             {301,38},
             '-',
             {op,{301,38},'bsl',{integer,{301,38},1},{integer,{301,38},58}},
             {integer,{301,38},1}}]}]}]},
      {block,0,
       [{cons,
         {301,58},
         {tuple,
          {301,59},
          [{atom,{301,59},t_bs_matchable},{integer,{301,59},1}]},
         {nil,{301,76}}}]}]}]},
  {clause,
   {302,1},
   [{atom,{302,7},erlang},
    {atom,{302,15},hd},
    {cons,{302,19},{var,{302,20},'Src'},{nil,{302,23}}}],
   [],
   [{debug_line,303,110},
    {match,
     {303,5},
     {var,{303,5},'RetType'},
     {call,{303,15},{atom,{303,15},erlang_hd_type},[{var,{303,30},'Src'}]}},
    {debug_line,304,111},
    {call,
     {304,5},
     {atom,{304,5},sub_safe},
     [{var,{304,14},'RetType'},
      {block,0,
       [{cons,
         {304,23},
         {tuple,
          {304,24},
          [{atom,{304,24},t_cons},{atom,{304,24},any},{atom,{304,24},any}]},
         {nil,{304,33}}}]}]}]},
  {clause,
   {305,1},
   [{atom,{305,7},erlang},
    {atom,{305,15},tl},
    {cons,{305,19},{var,{305,20},'Src'},{nil,{305,23}}}],
   [],
   [{debug_line,306,112},
    {match,
     {306,5},
     {var,{306,5},'RetType'},
     {call,{306,15},{atom,{306,15},erlang_tl_type},[{var,{306,30},'Src'}]}},
    {debug_line,307,113},
    {call,
     {307,5},
     {atom,{307,5},sub_safe},
     [{var,{307,14},'RetType'},
      {block,0,
       [{cons,
         {307,23},
         {tuple,
          {307,24},
          [{atom,{307,24},t_cons},{atom,{307,24},any},{atom,{307,24},any}]},
         {nil,{307,33}}}]}]}]},
  {clause,
   {308,1},
   [{atom,{308,7},erlang},
    {atom,{308,15},'not'},
    {cons,{308,22},{var,{308,23},'_'},{nil,{308,24}}}],
   [],
   [{debug_line,309,114},
    {match,
     {309,5},
     {var,{309,5},'Bool'},
     {call,
      {309,12},
      {remote,
       {309,22},
       {atom,{309,12},beam_types},
       {atom,{309,23},make_boolean}},
      []}},
    {debug_line,310,115},
    {call,
     {310,5},
     {atom,{310,5},sub_safe},
     [{var,{310,14},'Bool'},
      {block,0,[{cons,{310,20},{var,{310,21},'Bool'},{nil,{310,25}}}]}]}]},
  {clause,
   {311,1},
   [{atom,{311,7},erlang},
    {atom,{311,15},length},
    {cons,{311,25},{var,{311,26},'Src'},{nil,{311,29}}}],
   [],
   [{debug_line,312,116},
    {match,
     {312,5},
     {var,{312,5},'Min'},
     {'case',
      {312,11},
      {var,{312,16},'Src'},
      [{clause,
        {313,15},
        [{tuple,
          {313,15},
          [{atom,{313,15},t_cons},{var,{313,15},'_'},{var,{313,15},'_'}]}],
        [],
        [{debug_line,313,117},{integer,{313,28},1}]},
       {clause,
        {314,15},
        [{var,{314,15},'_'}],
        [],
        [{debug_line,314,118},{integer,{314,20},0}]}]}},
    {debug_line,316,119},
    {call,
     {316,5},
     {atom,{316,5},sub_safe},
     [{block,0,
       [{tuple,
         {316,14},
         [{atom,{316,14},t_integer},
          {tuple,
           {316,34},
           [{var,{316,35},'Min'},
            {op,
             {316,40},
             '-',
             {op,{316,40},'bsl',{integer,{316,40},1},{integer,{316,40},58}},
             {integer,{316,40},1}}]}]}]},
      {block,0,
       [{cons,
         {316,60},
         {call,{316,61},{atom,{316,61},proper_list},[]},
         {nil,{316,74}}}]}]}]},
  {clause,
   {319,1},
   [{atom,{319,7},erlang},
    {atom,{319,15},'and'},
    {cons,
     {319,22},
     {var,{319,23},'_'},
     {cons,{319,25},{var,{319,25},'_'},{nil,{319,26}}}}],
   [],
   [{debug_line,320,120},
    {match,
     {320,5},
     {var,{320,5},'Bool'},
     {call,
      {320,12},
      {remote,
       {320,22},
       {atom,{320,12},beam_types},
       {atom,{320,23},make_boolean}},
      []}},
    {debug_line,321,121},
    {call,
     {321,5},
     {atom,{321,5},sub_unsafe},
     [{var,{321,16},'Bool'},
      {block,0,
       [{cons,
         {321,22},
         {var,{321,23},'Bool'},
         {cons,{321,29},{var,{321,29},'Bool'},{nil,{321,33}}}}]}]}]},
  {clause,
   {322,1},
   [{atom,{322,7},erlang},
    {atom,{322,15},'or'},
    {cons,
     {322,21},
     {var,{322,22},'_'},
     {cons,{322,24},{var,{322,24},'_'},{nil,{322,25}}}}],
   [],
   [{debug_line,323,122},
    {match,
     {323,5},
     {var,{323,5},'Bool'},
     {call,
      {323,12},
      {remote,
       {323,22},
       {atom,{323,12},beam_types},
       {atom,{323,23},make_boolean}},
      []}},
    {debug_line,324,123},
    {call,
     {324,5},
     {atom,{324,5},sub_unsafe},
     [{var,{324,16},'Bool'},
      {block,0,
       [{cons,
         {324,22},
         {var,{324,23},'Bool'},
         {cons,{324,29},{var,{324,29},'Bool'},{nil,{324,33}}}}]}]}]},
  {clause,
   {325,1},
   [{atom,{325,7},erlang},
    {atom,{325,15},'xor'},
    {cons,
     {325,22},
     {var,{325,23},'_'},
     {cons,{325,25},{var,{325,25},'_'},{nil,{325,26}}}}],
   [],
   [{debug_line,326,124},
    {match,
     {326,5},
     {var,{326,5},'Bool'},
     {call,
      {326,12},
      {remote,
       {326,22},
       {atom,{326,12},beam_types},
       {atom,{326,23},make_boolean}},
      []}},
    {debug_line,327,125},
    {call,
     {327,5},
     {atom,{327,5},sub_unsafe},
     [{var,{327,16},'Bool'},
      {block,0,
       [{cons,
         {327,22},
         {var,{327,23},'Bool'},
         {cons,{327,29},{var,{327,29},'Bool'},{nil,{327,33}}}}]}]}]},
  {clause,
   {330,1},
   [{atom,{330,7},erlang},
    {var,{330,15},'Op'},
    {cons,
     {330,19},
     {var,{330,20},'Arg1'},
     {cons,{330,26},{var,{330,26},'Arg2'},{nil,{330,30}}}}],
   [[{op,{331,11},'=:=',{var,{331,8},'Op'},{atom,{331,15},'<'}}],
    [{op,{331,23},'=:=',{var,{331,20},'Op'},{atom,{331,27},'=<'}}],
    [{op,{331,36},'=:=',{var,{331,33},'Op'},{atom,{331,40},'>='}}],
    [{op,{331,49},'=:=',{var,{331,46},'Op'},{atom,{331,53},'>'}}]],
   [{debug_line,332,126},
    {match,
     {332,5},
     {tuple,{332,5},[{var,{332,6},'R1'},{var,{332,9},'R2'}]},
     {tuple,
      {332,15},
      [{call,{332,16},{atom,{332,16},get_range},[{var,{332,26},'Arg1'}]},
       {call,{332,33},{atom,{332,33},get_range},[{var,{332,43},'Arg2'}]}]}},
    {debug_line,333,127},
    {'case',
     {333,5},
     {call,
      {333,10},
      {remote,{333,21},{atom,{333,10},beam_bounds},{atom,{333,22},relop}},
      [{var,{333,28},'Op'},{var,{333,32},'R1'},{var,{333,36},'R2'}]},
     [{clause,
       [{text,"'maybe'"},{location,{334,9}}],
       [{atom,[{text,"'maybe'"},{location,{334,9}}],'maybe'}],
       [],
       [{debug_line,335,128},
        {call,
         {335,13},
         {atom,{335,13},sub_unsafe},
         [{block,0,
           [{call,
             {335,24},
             {remote,
              {335,34},
              {atom,{335,24},beam_types},
              {atom,{335,35},make_boolean}},
             []}]},
          {block,0,
           [{cons,
             {335,51},
             {atom,{335,52},any},
             {cons,{335,57},{atom,{335,57},any},{nil,{335,60}}}}]}]}]},
      {clause,
       {336,9},
       [{var,{336,9},'Bool'}],
       [[{call,
          {336,19},
          {remote,{336,19},{atom,{336,19},erlang},{atom,{336,19},is_boolean}},
          [{var,{336,30},'Bool'}]}]],
       [{debug_line,337,129},
        {call,
         {337,13},
         {atom,{337,13},sub_unsafe},
         [{block,0,
           [{tuple,
             {337,24},
             [{atom,{337,24},t_atom},
              {cons,{337,41},{var,{337,42},'Bool'},{nil,{337,46}}}]}]},
          {block,0,
           [{cons,
             {337,50},
             {atom,{337,51},any},
             {cons,{337,56},{atom,{337,56},any},{nil,{337,59}}}}]}]}]}]}]},
  {clause,
   {341,1},
   [{atom,{341,7},erlang},
    {atom,{341,15},is_atom},
    {cons,{341,24},{var,{341,25},'Type'},{nil,{341,29}}}],
   [],
   [{debug_line,342,130},
    {call,
     {342,5},
     {atom,{342,5},sub_unsafe_type_test},
     [{var,{342,26},'Type'},
      {block,0,
       [{tuple,{342,32},[{atom,{342,32},t_atom},{atom,{342,32},any}]}]}]}]},
  {clause,
   {343,1},
   [{atom,{343,7},erlang},
    {atom,{343,15},is_binary},
    {cons,{343,26},{var,{343,27},'Type'},{nil,{343,31}}}],
   [],
   [{debug_line,344,131},
    {call,
     {344,5},
     {atom,{344,5},sub_unsafe_type_test},
     [{var,{344,26},'Type'},
      {block,0,
       [{tuple,
         {344,32},
         [{atom,{344,32},t_bs_matchable},{integer,{344,58},8}]}]}]}]},
  {clause,
   {345,1},
   [{atom,{345,7},erlang},
    {atom,{345,15},is_bitstring},
    {cons,{345,29},{var,{345,30},'Type'},{nil,{345,34}}}],
   [],
   [{debug_line,346,132},
    {call,
     {346,5},
     {atom,{346,5},sub_unsafe_type_test},
     [{var,{346,26},'Type'},
      {block,0,
       [{tuple,
         {346,32},
         [{atom,{346,32},t_bs_matchable},{integer,{346,32},1}]}]}]}]},
  {clause,
   {347,1},
   [{atom,{347,7},erlang},
    {atom,{347,15},is_boolean},
    {cons,{347,27},{var,{347,28},'Type'},{nil,{347,32}}}],
   [],
   [{debug_line,348,133},
    {'case',
     {348,5},
     {call,
      {348,10},
      {remote,
       {348,20},
       {atom,{348,10},beam_types},
       {atom,{348,21},is_boolean_type}},
      [{var,{348,37},'Type'}]},
     [{clause,
       {349,9},
       [{atom,{349,9},true}],
       [],
       [{debug_line,350,134},
        {call,
         {350,13},
         {atom,{350,13},sub_unsafe},
         [{block,0,
           [{tuple,
             {350,24},
             [{atom,{350,24},t_atom},
              {cons,{350,41},{atom,{350,42},true},{nil,{350,46}}}]}]},
          {block,0,[{cons,{350,50},{atom,{350,51},any},{nil,{350,54}}}]}]}]},
      {clause,
       {351,9},
       [{atom,{351,9},false}],
       [],
       [{debug_line,352,135},
        {'case',
         {352,13},
         {call,
          {352,18},
          {atom,{352,18},meet},
          [{var,{352,23},'Type'},
           {block,0,
            [{tuple,{352,29},[{atom,{352,29},t_atom},{atom,{352,29},any}]}]}]},
         [{clause,
           {353,17},
           [{tuple,
             {353,17},
             [{atom,{353,17},t_atom},
              {match,
               {353,34},
               {cons,{353,34},{var,{353,35},'_'},{var,{353,37},'_'}},
               {var,{353,40},'Es'}}]}],
           [],
           [{debug_line,354,136},
            {'case',
             {354,21},
             {call,
              {354,26},
              {remote,{354,26},{atom,{354,26},lists},{atom,{354,26},any}},
              [{block,0,
                [{'fun',
                  {354,30},
                  {function,
                   {atom,{354,30},erlang},
                   {atom,{354,30},is_boolean},
                   {integer,{354,30},1}}}]},
               {var,{354,48},'Es'}]},
             [{clause,
               {355,25},
               [{atom,{355,25},true}],
               [],
               [{debug_line,356,137},
                {call,
                 {356,29},
                 {atom,{356,29},sub_unsafe},
                 [{block,0,
                   [{call,
                     {356,40},
                     {remote,
                      {356,50},
                      {atom,{356,40},beam_types},
                      {atom,{356,51},make_boolean}},
                     []}]},
                  {block,0,
                   [{cons,{356,67},{atom,{356,68},any},{nil,{356,71}}}]}]}]},
              {clause,
               {357,25},
               [{atom,{357,25},false}],
               [],
               [{debug_line,358,138},
                {call,
                 {358,29},
                 {atom,{358,29},sub_unsafe},
                 [{block,0,
                   [{tuple,
                     {358,40},
                     [{atom,{358,40},t_atom},
                      {cons,{358,57},{atom,{358,58},false},{nil,{358,63}}}]}]},
                  {block,0,
                   [{cons,
                     {358,67},
                     {atom,{358,68},any},
                     {nil,{358,71}}}]}]}]}]}]},
          {clause,
           {360,17},
           [{tuple,{360,17},[{atom,{360,17},t_atom},{var,{360,17},'_'}]}],
           [],
           [{debug_line,361,139},
            {call,
             {361,21},
             {atom,{361,21},sub_unsafe},
             [{block,0,
               [{call,
                 {361,32},
                 {remote,
                  {361,42},
                  {atom,{361,32},beam_types},
                  {atom,{361,43},make_boolean}},
                 []}]},
              {block,0,
               [{cons,{361,59},{atom,{361,60},any},{nil,{361,63}}}]}]}]},
          {clause,
           {362,17},
           [{atom,{362,17},none}],
           [],
           [{debug_line,363,140},
            {call,
             {363,21},
             {atom,{363,21},sub_unsafe},
             [{block,0,
               [{tuple,
                 {363,32},
                 [{atom,{363,32},t_atom},
                  {cons,{363,49},{atom,{363,50},false},{nil,{363,55}}}]}]},
              {block,0,
               [{cons,
                 {363,59},
                 {atom,{363,60},any},
                 {nil,{363,63}}}]}]}]}]}]}]}]},
  {clause,
   {366,1},
   [{atom,{366,7},erlang},
    {atom,{366,15},is_float},
    {cons,{366,25},{var,{366,26},'Type'},{nil,{366,30}}}],
   [],
   [{debug_line,367,141},
    {call,
     {367,5},
     {atom,{367,5},sub_unsafe_type_test},
     [{var,{367,26},'Type'},
      {block,0,
       [{tuple,{367,32},[{atom,{367,32},t_float},{atom,{367,32},any}]}]}]}]},
  {clause,
   {368,1},
   [{atom,{368,7},erlang},
    {atom,{368,15},is_function},
    {cons,
     {368,28},
     {var,{368,29},'Type'},
     {cons,{368,35},{var,{368,35},'ArityType'},{nil,{368,44}}}}],
   [],
   [{debug_line,369,142},
    {match,
     {369,5},
     {var,{369,5},'RetType'},
     {'case',
      {369,15},
      {call,
       {369,20},
       {atom,{369,20},meet},
       [{var,{369,25},'ArityType'},
        {block,0,
         [{tuple,{369,36},[{atom,{369,36},t_integer},{atom,{369,36},any}]}]}]},
      [{clause,
        {370,19},
        [{atom,{370,19},none}],
        [],
        [{debug_line,371,143},{atom,{371,23},none}]},
       {clause,
        {372,19},
        [{tuple,
          {372,19},
          [{atom,{372,19},t_integer},
           {tuple,{372,39},[{var,{372,40},'Arity'},{var,{372,46},'Arity'}]}]}],
        [[{call,
           {373,26},
           {remote,{373,26},{atom,{373,26},erlang},{atom,{373,26},is_integer}},
           [{var,{373,37},'Arity'}]}]],
        [{debug_line,374,144},
         {'if',
          {374,23},
          [{clause,
            {375,27},
            [],
            [[{op,{375,33},'<',{var,{375,27},'Arity'},{integer,{375,35},0}}]],
            [{debug_line,376,145},{atom,{376,31},none}]},
           {clause,
            {377,27},
            [],
            [[{op,{377,29},'=<',{integer,{377,27},0},{var,{377,32},'Arity'}},
              {op,
               {377,45},
               '=<',
               {var,{377,39},'Arity'},
               {integer,{377,49},255}}]],
            [{debug_line,378,146},
             {'case',
              {378,31},
              {call,
               {378,36},
               {atom,{378,36},meet},
               [{var,{378,41},'Type'},
                {block,0,
                 [{tuple,
                   {378,47},
                   [{atom,{378,47},t_fun},
                    {var,{378,60},'Arity'},
                    {atom,{378,47},any},
                    {atom,{378,47},any}]}]}]},
              [{clause,
                {379,35},
                [{var,{379,35},'Type'}],
                [],
                [{debug_line,379,147},
                 {tuple,
                  {379,43},
                  [{atom,{379,43},t_atom},
                   {cons,{379,60},{atom,{379,61},true},{nil,{379,65}}}]}]},
               {clause,
                {380,35},
                [{atom,{380,35},none}],
                [],
                [{debug_line,380,148},
                 {tuple,
                  {380,43},
                  [{atom,{380,43},t_atom},
                   {cons,{380,60},{atom,{380,61},false},{nil,{380,66}}}]}]},
               {clause,
                {381,35},
                [{var,{381,35},'_'}],
                [],
                [{debug_line,381,149},
                 {call,
                  {381,40},
                  {remote,
                   {381,50},
                   {atom,{381,40},beam_types},
                   {atom,{381,51},make_boolean}},
                  []}]}]}]},
           {clause,
            {383,27},
            [],
            [[{op,
               {383,33},
               '>',
               {var,{383,27},'Arity'},
               {integer,{383,36},255}}]],
            [{debug_line,384,150},
             {tuple,
              {384,31},
              [{atom,{384,31},t_atom},
               {cons,{384,48},{atom,{384,49},false},{nil,{384,54}}}]}]}]}]},
       {clause,
        {386,19},
        [{tuple,{386,19},[{atom,{386,19},t_integer},{var,{386,19},'_'}]}],
        [],
        [{debug_line,387,151},
         {'case',
          {387,23},
          {call,
           {387,28},
           {atom,{387,28},meet},
           [{var,{387,33},'Type'},
            {block,0,
             [{tuple,
               {387,39},
               [{atom,{387,39},t_fun},
                {atom,{387,39},any},
                {atom,{387,39},any},
                {atom,{387,39},any}]}]}]},
          [{clause,
            {388,27},
            [{atom,{388,27},none}],
            [],
            [{debug_line,388,152},
             {tuple,
              {388,35},
              [{atom,{388,35},t_atom},
               {cons,{388,52},{atom,{388,53},false},{nil,{388,58}}}]}]},
           {clause,
            {389,27},
            [{var,{389,27},'_'}],
            [],
            [{debug_line,389,153},
             {call,
              {389,32},
              {remote,
               {389,42},
               {atom,{389,32},beam_types},
               {atom,{389,43},make_boolean}},
              []}]}]}]}]}},
    {debug_line,392,154},
    {call,
     {392,5},
     {atom,{392,5},sub_unsafe},
     [{var,{392,16},'RetType'},
      {block,0,
       [{cons,
         {392,25},
         {atom,{392,26},any},
         {cons,{392,31},{atom,{392,31},any},{nil,{392,34}}}}]}]}]},
  {clause,
   {393,1},
   [{atom,{393,7},erlang},
    {atom,{393,15},is_function},
    {cons,{393,28},{var,{393,29},'Type'},{nil,{393,33}}}],
   [],
   [{debug_line,394,155},
    {call,
     {394,5},
     {atom,{394,5},sub_unsafe_type_test},
     [{var,{394,26},'Type'},
      {block,0,
       [{tuple,
         {394,32},
         [{atom,{394,32},t_fun},
          {atom,{394,32},any},
          {atom,{394,32},any},
          {atom,{394,32},any}]}]}]}]},
  {clause,
   {395,1},
   [{atom,{395,7},erlang},
    {atom,{395,15},is_integer},
    {cons,{395,27},{var,{395,28},'Type'},{nil,{395,32}}}],
   [],
   [{debug_line,396,156},
    {call,
     {396,5},
     {atom,{396,5},sub_unsafe_type_test},
     [{var,{396,26},'Type'},
      {block,0,
       [{tuple,{396,32},[{atom,{396,32},t_integer},{atom,{396,32},any}]}]}]}]},
  {clause,
   {397,1},
   [{atom,{397,7},erlang},
    {atom,{397,15},is_list},
    {cons,{397,24},{var,{397,25},'Type'},{nil,{397,29}}}],
   [],
   [{debug_line,398,157},
    {call,
     {398,5},
     {atom,{398,5},sub_unsafe_type_test},
     [{var,{398,26},'Type'},
      {block,0,
       [{tuple,
         {398,32},
         [{atom,{398,32},t_list},
          {atom,{398,32},any},
          {atom,{398,32},any}]}]}]}]},
  {clause,
   {399,1},
   [{atom,{399,7},erlang},
    {atom,{399,15},is_map},
    {cons,{399,23},{var,{399,24},'Type'},{nil,{399,28}}}],
   [],
   [{debug_line,400,158},
    {call,
     {400,5},
     {atom,{400,5},sub_unsafe_type_test},
     [{var,{400,26},'Type'},
      {block,0,
       [{tuple,
         {400,32},
         [{atom,{400,32},t_map},
          {atom,{400,32},any},
          {atom,{400,32},any}]}]}]}]},
  {clause,
   {401,1},
   [{atom,{401,7},erlang},
    {atom,{401,15},is_number},
    {cons,{401,26},{var,{401,27},'Type'},{nil,{401,31}}}],
   [],
   [{debug_line,402,159},
    {call,
     {402,5},
     {atom,{402,5},sub_unsafe_type_test},
     [{var,{402,26},'Type'},
      {block,0,
       [{tuple,{402,32},[{atom,{402,32},t_number},{atom,{402,32},any}]}]}]}]},
  {clause,
   {403,1},
   [{atom,{403,7},erlang},
    {atom,{403,15},is_pid},
    {cons,{403,23},{var,{403,24},'Type'},{nil,{403,28}}}],
   [],
   [{debug_line,404,160},
    {call,
     {404,5},
     {atom,{404,5},sub_unsafe_type_test},
     [{var,{404,26},'Type'},{atom,{404,32},pid}]}]},
  {clause,
   {405,1},
   [{atom,{405,7},erlang},
    {atom,{405,15},is_port},
    {cons,{405,24},{var,{405,25},'Type'},{nil,{405,29}}}],
   [],
   [{debug_line,406,161},
    {call,
     {406,5},
     {atom,{406,5},sub_unsafe_type_test},
     [{var,{406,26},'Type'},{atom,{406,32},port}]}]},
  {clause,
   {407,1},
   [{atom,{407,7},erlang},
    {atom,{407,15},is_reference},
    {cons,{407,29},{var,{407,30},'Type'},{nil,{407,34}}}],
   [],
   [{debug_line,408,162},
    {call,
     {408,5},
     {atom,{408,5},sub_unsafe_type_test},
     [{var,{408,26},'Type'},{atom,{408,32},reference}]}]},
  {clause,
   {409,1},
   [{atom,{409,7},erlang},
    {atom,{409,15},is_tuple},
    {cons,{409,25},{var,{409,26},'Type'},{nil,{409,30}}}],
   [],
   [{debug_line,410,163},
    {call,
     {410,5},
     {atom,{410,5},sub_unsafe_type_test},
     [{var,{410,26},'Type'},
      {block,0,
       [{tuple,
         {410,32},
         [{atom,{410,32},t_tuple},
          {integer,{410,32},0},
          {atom,{410,32},false},
          {map,{410,32},[]}]}]}]}]},
  {clause,
   {413,1},
   [{atom,{413,7},erlang},
    {atom,{413,15},'band'},
    {match,
     {413,23},
     {cons,
      {413,23},
      {var,{413,24},'_'},
      {cons,{413,26},{var,{413,26},'_'},{nil,{413,27}}}},
     {var,{413,29},'Args'}}],
   [],
   [{debug_line,414,164},
    {call,
     {414,5},
     {atom,{414,5},sub_unsafe},
     [{block,0,
       [{call,
         {414,16},
         {atom,{414,16},beam_bounds_type},
         [{atom,{414,33},'band'},
          {block,0,
           [{tuple,{414,41},[{atom,{414,41},t_integer},{atom,{414,41},any}]}]},
          {var,{414,55},'Args'}]}]},
      {block,0,
       [{debug_line,415,165},
        {cons,
         {415,16},
         {tuple,{415,17},[{atom,{415,17},t_integer},{atom,{415,17},any}]},
         {cons,
          {415,31},
          {tuple,{415,31},[{atom,{415,31},t_integer},{atom,{415,31},any}]},
          {nil,{415,43}}}}]}]}]},
  {clause,
   {416,1},
   [{atom,{416,7},erlang},
    {atom,{416,15},'bor'},
    {match,
     {416,22},
     {cons,
      {416,22},
      {var,{416,23},'_'},
      {cons,{416,25},{var,{416,25},'_'},{nil,{416,26}}}},
     {var,{416,28},'Args'}}],
   [],
   [{debug_line,417,166},
    {call,
     {417,5},
     {atom,{417,5},sub_unsafe},
     [{block,0,
       [{call,
         {417,16},
         {atom,{417,16},beam_bounds_type},
         [{atom,{417,33},'bor'},
          {block,0,
           [{tuple,{417,40},[{atom,{417,40},t_integer},{atom,{417,40},any}]}]},
          {var,{417,54},'Args'}]}]},
      {block,0,
       [{debug_line,418,167},
        {cons,
         {418,16},
         {tuple,{418,17},[{atom,{418,17},t_integer},{atom,{418,17},any}]},
         {cons,
          {418,31},
          {tuple,{418,31},[{atom,{418,31},t_integer},{atom,{418,31},any}]},
          {nil,{418,43}}}}]}]}]},
  {clause,
   {419,1},
   [{atom,{419,7},erlang},
    {atom,{419,15},'bxor'},
    {match,
     {419,23},
     {cons,
      {419,23},
      {var,{419,24},'_'},
      {cons,{419,26},{var,{419,26},'_'},{nil,{419,27}}}},
     {var,{419,29},'Args'}}],
   [],
   [{debug_line,420,168},
    {call,
     {420,5},
     {atom,{420,5},sub_unsafe},
     [{block,0,
       [{call,
         {420,16},
         {atom,{420,16},beam_bounds_type},
         [{atom,{420,33},'bxor'},
          {block,0,
           [{tuple,{420,41},[{atom,{420,41},t_integer},{atom,{420,41},any}]}]},
          {var,{420,55},'Args'}]}]},
      {block,0,
       [{debug_line,421,169},
        {cons,
         {421,16},
         {tuple,{421,17},[{atom,{421,17},t_integer},{atom,{421,17},any}]},
         {cons,
          {421,31},
          {tuple,{421,31},[{atom,{421,31},t_integer},{atom,{421,31},any}]},
          {nil,{421,43}}}}]}]}]},
  {clause,
   {422,1},
   [{atom,{422,7},erlang},
    {atom,{422,15},'bsl'},
    {match,
     {422,22},
     {cons,
      {422,22},
      {var,{422,23},'_'},
      {cons,{422,25},{var,{422,25},'_'},{nil,{422,26}}}},
     {var,{422,28},'Args'}}],
   [],
   [{debug_line,423,170},
    {call,
     {423,5},
     {atom,{423,5},sub_unsafe},
     [{block,0,
       [{call,
         {423,16},
         {atom,{423,16},beam_bounds_type},
         [{atom,{423,33},'bsl'},
          {block,0,
           [{tuple,{423,40},[{atom,{423,40},t_integer},{atom,{423,40},any}]}]},
          {var,{423,54},'Args'}]}]},
      {block,0,
       [{debug_line,424,171},
        {cons,
         {424,16},
         {tuple,{424,17},[{atom,{424,17},t_integer},{atom,{424,17},any}]},
         {cons,
          {424,31},
          {tuple,{424,31},[{atom,{424,31},t_integer},{atom,{424,31},any}]},
          {nil,{424,43}}}}]}]}]},
  {clause,
   {425,1},
   [{atom,{425,7},erlang},
    {atom,{425,15},'bsr'},
    {match,
     {425,22},
     {cons,
      {425,22},
      {var,{425,23},'_'},
      {cons,{425,25},{var,{425,25},'_'},{nil,{425,26}}}},
     {var,{425,28},'Args'}}],
   [],
   [{debug_line,426,172},
    {call,
     {426,5},
     {atom,{426,5},sub_unsafe},
     [{block,0,
       [{call,
         {426,16},
         {atom,{426,16},beam_bounds_type},
         [{atom,{426,33},'bsr'},
          {block,0,
           [{tuple,{426,40},[{atom,{426,40},t_integer},{atom,{426,40},any}]}]},
          {var,{426,54},'Args'}]}]},
      {block,0,
       [{debug_line,427,173},
        {cons,
         {427,16},
         {tuple,{427,17},[{atom,{427,17},t_integer},{atom,{427,17},any}]},
         {cons,
          {427,31},
          {tuple,{427,31},[{atom,{427,31},t_integer},{atom,{427,31},any}]},
          {nil,{427,43}}}}]}]}]},
  {clause,
   {428,1},
   [{atom,{428,7},erlang},
    {atom,{428,15},'bnot'},
    {cons,{428,23},{var,{428,24},'_'},{nil,{428,25}}}],
   [],
   [{debug_line,445,174},
    {call,
     {445,5},
     {atom,{445,5},sub_unsafe},
     [{block,0,
       [{tuple,{445,16},[{atom,{445,16},t_integer},{atom,{445,16},any}]}]},
      {block,0,
       [{cons,
         {445,30},
         {tuple,{445,31},[{atom,{445,31},t_integer},{atom,{445,31},any}]},
         {nil,{445,43}}}]}]}]},
  {clause,
   {448,1},
   [{atom,{448,7},erlang},
    {atom,{448,15},float},
    {cons,{448,24},{var,{448,25},'_'},{nil,{448,26}}}],
   [],
   [{debug_line,449,175},
    {call,
     {449,5},
     {atom,{449,5},sub_unsafe},
     [{block,0,
       [{tuple,{449,16},[{atom,{449,16},t_float},{atom,{449,16},any}]}]},
      {block,0,
       [{cons,
         {449,28},
         {tuple,{449,29},[{atom,{449,29},t_number},{atom,{449,29},any}]},
         {nil,{449,40}}}]}]}]},
  {clause,
   {450,1},
   [{atom,{450,7},erlang},
    {atom,{450,15},round},
    {cons,{450,24},{var,{450,25},'_'},{nil,{450,26}}}],
   [],
   [{debug_line,451,176},
    {call,
     {451,5},
     {atom,{451,5},sub_unsafe},
     [{block,0,
       [{tuple,{451,16},[{atom,{451,16},t_integer},{atom,{451,16},any}]}]},
      {block,0,
       [{cons,
         {451,30},
         {tuple,{451,31},[{atom,{451,31},t_number},{atom,{451,31},any}]},
         {nil,{451,42}}}]}]}]},
  {clause,
   {452,1},
   [{atom,{452,7},erlang},
    {atom,{452,15},floor},
    {cons,{452,24},{var,{452,25},'_'},{nil,{452,26}}}],
   [],
   [{debug_line,453,177},
    {call,
     {453,5},
     {atom,{453,5},sub_unsafe},
     [{block,0,
       [{tuple,{453,16},[{atom,{453,16},t_integer},{atom,{453,16},any}]}]},
      {block,0,
       [{cons,
         {453,30},
         {tuple,{453,31},[{atom,{453,31},t_number},{atom,{453,31},any}]},
         {nil,{453,42}}}]}]}]},
  {clause,
   {454,1},
   [{atom,{454,7},erlang},
    {atom,{454,15},ceil},
    {cons,{454,23},{var,{454,24},'_'},{nil,{454,25}}}],
   [],
   [{debug_line,455,178},
    {call,
     {455,5},
     {atom,{455,5},sub_unsafe},
     [{block,0,
       [{tuple,{455,16},[{atom,{455,16},t_integer},{atom,{455,16},any}]}]},
      {block,0,
       [{cons,
         {455,30},
         {tuple,{455,31},[{atom,{455,31},t_number},{atom,{455,31},any}]},
         {nil,{455,42}}}]}]}]},
  {clause,
   {456,1},
   [{atom,{456,7},erlang},
    {atom,{456,15},trunc},
    {cons,{456,24},{var,{456,25},'_'},{nil,{456,26}}}],
   [],
   [{debug_line,457,179},
    {call,
     {457,5},
     {atom,{457,5},sub_unsafe},
     [{block,0,
       [{tuple,{457,16},[{atom,{457,16},t_integer},{atom,{457,16},any}]}]},
      {block,0,
       [{cons,
         {457,30},
         {tuple,{457,31},[{atom,{457,31},t_number},{atom,{457,31},any}]},
         {nil,{457,42}}}]}]}]},
  {clause,
   {458,1},
   [{atom,{458,7},erlang},
    {atom,{458,15},'/'},
    {cons,
     {458,20},
     {var,{458,21},'_'},
     {cons,{458,23},{var,{458,23},'_'},{nil,{458,24}}}}],
   [],
   [{debug_line,459,180},
    {call,
     {459,5},
     {atom,{459,5},sub_unsafe},
     [{block,0,
       [{tuple,{459,16},[{atom,{459,16},t_float},{atom,{459,16},any}]}]},
      {block,0,
       [{cons,
         {459,28},
         {tuple,{459,29},[{atom,{459,29},t_number},{atom,{459,29},any}]},
         {cons,
          {459,42},
          {tuple,{459,42},[{atom,{459,42},t_number},{atom,{459,42},any}]},
          {nil,{459,53}}}}]}]}]},
  {clause,
   {460,1},
   [{atom,{460,7},erlang},
    {atom,{460,15},'div'},
    {match,
     {460,22},
     {cons,
      {460,22},
      {var,{460,23},'_'},
      {cons,{460,25},{var,{460,25},'_'},{nil,{460,26}}}},
     {var,{460,28},'Args'}}],
   [],
   [{debug_line,461,181},
    {call,
     {461,5},
     {atom,{461,5},sub_unsafe},
     [{block,0,
       [{call,
         {461,16},
         {atom,{461,16},beam_bounds_type},
         [{atom,{461,33},'div'},
          {block,0,
           [{tuple,{461,40},[{atom,{461,40},t_integer},{atom,{461,40},any}]}]},
          {var,{461,54},'Args'}]}]},
      {block,0,
       [{debug_line,462,182},
        {cons,
         {462,16},
         {tuple,{462,17},[{atom,{462,17},t_integer},{atom,{462,17},any}]},
         {cons,
          {462,31},
          {tuple,{462,31},[{atom,{462,31},t_integer},{atom,{462,31},any}]},
          {nil,{462,43}}}}]}]}]},
  {clause,
   {463,1},
   [{atom,{463,7},erlang},{atom,{463,15},'rem'},{var,{463,22},'Args'}],
   [],
   [{debug_line,464,183},
    {call,
     {464,5},
     {atom,{464,5},sub_unsafe},
     [{block,0,
       [{call,
         {464,16},
         {atom,{464,16},beam_bounds_type},
         [{atom,{464,33},'rem'},
          {block,0,
           [{tuple,{464,40},[{atom,{464,40},t_integer},{atom,{464,40},any}]}]},
          {var,{464,54},'Args'}]}]},
      {block,0,
       [{debug_line,465,184},
        {cons,
         {465,16},
         {tuple,{465,17},[{atom,{465,17},t_integer},{atom,{465,17},any}]},
         {cons,
          {465,31},
          {tuple,{465,31},[{atom,{465,31},t_integer},{atom,{465,31},any}]},
          {nil,{465,43}}}}]}]}]},
  {clause,
   {468,1},
   [{atom,{468,7},erlang},
    {var,{468,15},'Op'},
    {cons,
     {468,19},
     {var,{468,20},'LHS'},
     {cons,{468,25},{var,{468,25},'RHS'},{nil,{468,28}}}}],
   [[{op,{468,39},'=:=',{var,{468,36},'Op'},{atom,{468,43},'+'}}],
    [{op,{468,51},'=:=',{var,{468,48},'Op'},{atom,{468,55},'-'}}]],
   [{debug_line,469,185},
    {'case',
     {469,5},
     {call,
      {469,10},
      {atom,{469,10},get_range},
      [{var,{469,20},'LHS'},
       {var,{469,25},'RHS'},
       {block,0,
        [{tuple,{469,30},[{atom,{469,30},t_number},{atom,{469,30},any}]}]}]},
     [{clause,
       {470,9},
       [{tuple,
         {470,9},
         [{var,{470,10},'Type'},
          {tuple,{470,16},[{var,{470,17},'A'},{var,{470,19},'B'}]},
          {tuple,{470,23},[{var,{470,24},'C'},{var,{470,26},'_D'}]}]}],
       [[{call,
          {470,36},
          {remote,{470,36},{atom,{470,36},erlang},{atom,{470,36},is_integer}},
          [{var,{470,47},'C'}]},
         {op,{470,53},'>=',{var,{470,51},'C'},{integer,{470,56},0}}]],
       [{debug_line,471,186},
        {match,
         {471,13},
         {var,{471,13},'R'},
         {call,
          {471,17},
          {remote,{471,28},{atom,{471,17},beam_bounds},{atom,{471,29},bounds}},
          [{var,{471,36},'Op'},
           {block,0,
            [{tuple,{471,40},[{var,{471,41},'A'},{var,{471,43},'B'}]}]},
           {block,0,
            [{tuple,{471,47},[{var,{471,48},'C'},{atom,{471,50},'+inf'}]}]}]}},
        {debug_line,472,187},
        {match,
         {472,13},
         {var,{472,13},'RetType'},
         {'case',
          {472,23},
          {var,{472,28},'Type'},
          [{clause,
            {473,27},
            [{atom,{473,27},integer}],
            [],
            [{debug_line,473,188},
             {tuple,{473,38},[{atom,{473,38},t_integer},{var,{473,58},'R'}]}]},
           {clause,
            {474,27},
            [{atom,{474,27},number}],
            [],
            [{debug_line,474,189},
             {tuple,
              {474,37},
              [{atom,{474,37},t_number},{var,{474,56},'R'}]}]}]}},
        {debug_line,476,190},
        {call,
         {476,13},
         {atom,{476,13},sub_unsafe},
         [{var,{476,24},'RetType'},
          {block,0,
           [{cons,
             {476,33},
             {tuple,{476,34},[{atom,{476,34},t_number},{atom,{476,34},any}]},
             {cons,
              {476,47},
              {tuple,{476,47},[{atom,{476,47},t_number},{atom,{476,47},any}]},
              {nil,{476,58}}}}]}]}]},
      {clause,
       {477,9},
       [{tuple,
         {477,9},
         [{var,{477,10},'Type'},
          {tuple,{477,16},[{var,{477,17},'A'},{var,{477,19},'_B'}]},
          {tuple,{477,24},[{var,{477,25},'C'},{var,{477,27},'D'}]}]}],
       [[{op,{477,39},'=:=',{var,{477,36},'Op'},{atom,{477,43},'+'}},
         {call,
          {477,48},
          {remote,{477,48},{atom,{477,48},erlang},{atom,{477,48},is_integer}},
          [{var,{477,59},'A'}]},
         {op,{477,65},'>=',{var,{477,63},'A'},{integer,{477,68},0}}]],
       [{debug_line,478,191},
        {match,
         {478,13},
         {var,{478,13},'R'},
         {call,
          {478,17},
          {remote,{478,28},{atom,{478,17},beam_bounds},{atom,{478,29},bounds}},
          [{var,{478,36},'Op'},
           {block,0,
            [{tuple,{478,40},[{var,{478,41},'A'},{atom,{478,43},'+inf'}]}]},
           {block,0,
            [{tuple,{478,52},[{var,{478,53},'C'},{var,{478,55},'D'}]}]}]}},
        {debug_line,479,192},
        {match,
         {479,13},
         {var,{479,13},'RetType'},
         {'case',
          {479,23},
          {var,{479,28},'Type'},
          [{clause,
            {480,27},
            [{atom,{480,27},integer}],
            [],
            [{debug_line,480,193},
             {tuple,{480,38},[{atom,{480,38},t_integer},{var,{480,58},'R'}]}]},
           {clause,
            {481,27},
            [{atom,{481,27},number}],
            [],
            [{debug_line,481,194},
             {tuple,
              {481,37},
              [{atom,{481,37},t_number},{var,{481,56},'R'}]}]}]}},
        {debug_line,483,195},
        {call,
         {483,13},
         {atom,{483,13},sub_unsafe},
         [{var,{483,24},'RetType'},
          {block,0,
           [{cons,
             {483,33},
             {tuple,{483,34},[{atom,{483,34},t_number},{atom,{483,34},any}]},
             {cons,
              {483,47},
              {tuple,{483,47},[{atom,{483,47},t_number},{atom,{483,47},any}]},
              {nil,{483,58}}}}]}]}]},
      {clause,
       {484,9},
       [{var,{484,9},'_'}],
       [],
       [{debug_line,485,196},
        {call,
         {485,13},
         {atom,{485,13},mixed_arith_types},
         [{block,0,
           [{cons,
             {485,31},
             {var,{485,32},'LHS'},
             {cons,{485,37},{var,{485,37},'RHS'},{nil,{485,40}}}}]}]}]}]}]},
  {clause,
   {488,1},
   [{atom,{488,7},erlang},
    {atom,{488,15},'*'},
    {cons,
     {488,20},
     {var,{488,21},'LHS'},
     {cons,{488,26},{var,{488,26},'RHS'},{nil,{488,29}}}}],
   [],
   [{debug_line,489,197},
    {'case',
     {489,5},
     {call,
      {489,10},
      {atom,{489,10},get_range},
      [{var,{489,20},'LHS'},
       {var,{489,25},'RHS'},
       {block,0,
        [{tuple,{489,30},[{atom,{489,30},t_number},{atom,{489,30},any}]}]}]},
     [{clause,
       {490,9},
       [{tuple,
         {490,9},
         [{var,{490,10},'Type'},
          {tuple,{490,16},[{var,{490,17},'A'},{var,{490,19},'B'}]},
          {tuple,{490,23},[{var,{490,24},'C'},{var,{490,26},'D'}]}]}],
       [],
       [{debug_line,491,198},
        {'case',
         {491,13},
         {call,
          {491,18},
          {remote,{491,29},{atom,{491,18},beam_bounds},{atom,{491,30},bounds}},
          [{atom,{491,37},'*'},
           {block,0,
            [{tuple,{491,42},[{var,{491,43},'A'},{var,{491,45},'B'}]}]},
           {block,0,
            [{tuple,{491,49},[{var,{491,50},'C'},{var,{491,52},'D'}]}]}]},
         [{clause,
           {492,17},
           [{tuple,{492,17},[{var,{492,18},'Min'},{var,{492,22},'_Max'}]}],
           [[{call,
              {492,33},
              {remote,
               {492,33},
               {atom,{492,33},erlang},
               {atom,{492,33},is_integer}},
              [{var,{492,44},'Min'}]},
             {op,{492,54},'>=',{var,{492,50},'Min'},{integer,{492,57},0}}]],
           [{debug_line,493,199},
            {match,
             {493,21},
             {var,{493,21},'R'},
             {tuple,{493,25},[{var,{493,26},'Min'},{atom,{493,30},'+inf'}]}},
            {debug_line,494,200},
            {match,
             {494,21},
             {var,{494,21},'RetType'},
             {'case',
              {494,31},
              {var,{494,36},'Type'},
              [{clause,
                {495,35},
                [{atom,{495,35},integer}],
                [],
                [{debug_line,495,201},
                 {tuple,
                  {495,46},
                  [{atom,{495,46},t_integer},{var,{495,66},'R'}]}]},
               {clause,
                {496,35},
                [{atom,{496,35},number}],
                [],
                [{debug_line,496,202},
                 {tuple,
                  {496,45},
                  [{atom,{496,45},t_number},{var,{496,64},'R'}]}]}]}},
            {debug_line,498,203},
            {call,
             {498,21},
             {atom,{498,21},sub_unsafe},
             [{var,{498,32},'RetType'},
              {block,0,
               [{cons,
                 {498,41},
                 {tuple,
                  {498,42},
                  [{atom,{498,42},t_number},{atom,{498,42},any}]},
                 {cons,
                  {498,55},
                  {tuple,
                   {498,55},
                   [{atom,{498,55},t_number},{atom,{498,55},any}]},
                  {nil,{498,66}}}}]}]}]},
          {clause,
           {499,17},
           [{var,{499,17},'_'}],
           [],
           [{debug_line,500,204},
            {call,
             {500,21},
             {atom,{500,21},mixed_arith_types},
             [{block,0,
               [{cons,
                 {500,39},
                 {var,{500,40},'LHS'},
                 {cons,
                  {500,45},
                  {var,{500,45},'RHS'},
                  {nil,{500,48}}}}]}]}]}]}]},
      {clause,
       {502,9},
       [{var,{502,9},'_'}],
       [],
       [{debug_line,503,205},
        {call,
         {503,13},
         {atom,{503,13},mixed_arith_types},
         [{block,0,
           [{cons,
             {503,31},
             {var,{503,32},'LHS'},
             {cons,{503,37},{var,{503,37},'RHS'},{nil,{503,40}}}}]}]}]}]}]},
  {clause,
   {506,1},
   [{atom,{506,7},erlang},
    {atom,{506,15},abs},
    {cons,{506,20},{var,{506,21},'Type'},{nil,{506,25}}}],
   [],
   [{debug_line,507,206},
    {'case',
     {507,5},
     {call,
      {507,10},
      {atom,{507,10},meet},
      [{var,{507,15},'Type'},
       {block,0,
        [{tuple,{507,21},[{atom,{507,21},t_number},{atom,{507,21},any}]}]}]},
     [{clause,
       {508,9},
       [{tuple,{508,9},[{atom,{508,9},t_float},{var,{508,9},'_'}]}],
       [],
       [{debug_line,509,207},
        {call,
         {509,13},
         {atom,{509,13},sub_unsafe},
         [{block,0,
           [{tuple,{509,24},[{atom,{509,24},t_float},{atom,{509,24},any}]}]},
          {block,0,
           [{cons,
             {509,36},
             {tuple,{509,37},[{atom,{509,37},t_float},{atom,{509,37},any}]},
             {nil,{509,47}}}]}]}]},
      {clause,
       {510,9},
       [{tuple,{510,9},[{atom,{510,9},t_integer},{var,{510,29},'R'}]}],
       [],
       [{debug_line,511,208},
        {match,
         {511,13},
         {var,{511,13},'RetType'},
         {tuple,
          {511,23},
          [{atom,{511,23},t_integer},
           {call,
            {511,43},
            {remote,
             {511,54},
             {atom,{511,43},beam_bounds},
             {atom,{511,55},bounds}},
            [{atom,{511,62},abs},{var,{511,67},'R'}]}]}},
        {debug_line,512,209},
        {call,
         {512,13},
         {atom,{512,13},sub_unsafe},
         [{var,{512,24},'RetType'},
          {block,0,
           [{cons,
             {512,33},
             {tuple,{512,34},[{atom,{512,34},t_integer},{atom,{512,34},any}]},
             {nil,{512,46}}}]}]}]},
      {clause,
       {513,9},
       [{tuple,{513,9},[{atom,{513,9},t_number},{var,{513,28},'R'}]}],
       [],
       [{debug_line,514,210},
        {match,
         {514,13},
         {var,{514,13},'RetType'},
         {tuple,
          {514,23},
          [{atom,{514,23},t_number},
           {call,
            {514,42},
            {remote,
             {514,53},
             {atom,{514,42},beam_bounds},
             {atom,{514,54},bounds}},
            [{atom,{514,61},abs},{var,{514,66},'R'}]}]}},
        {debug_line,515,211},
        {call,
         {515,13},
         {atom,{515,13},sub_unsafe},
         [{var,{515,24},'RetType'},
          {block,0,
           [{cons,
             {515,33},
             {tuple,{515,34},[{atom,{515,34},t_number},{atom,{515,34},any}]},
             {nil,{515,45}}}]}]}]},
      {clause,
       {516,9},
       [{var,{516,9},'_'}],
       [],
       [{debug_line,517,212},
        {call,
         {517,13},
         {atom,{517,13},sub_unsafe},
         [{block,0,
           [{tuple,{517,24},[{atom,{517,24},t_number},{atom,{517,24},any}]}]},
          {block,0,
           [{cons,
             {517,37},
             {tuple,{517,38},[{atom,{517,38},t_number},{atom,{517,38},any}]},
             {nil,{517,49}}}]}]}]}]}]},
  {clause,
   {524,1},
   [{atom,{524,7},erlang},
    {atom,{524,15},'++'},
    {cons,
     {524,21},
     {var,{524,22},'LHS'},
     {cons,{524,27},{var,{524,27},'RHS'},{nil,{524,30}}}}],
   [],
   [{debug_line,526,213},
    {match,
     {526,5},
     {var,{526,5},'ListType'},
     {call,
      {526,16},
      {atom,{526,16},copy_list},
      [{var,{526,26},'LHS'},
       {atom,{526,31},same_length},
       {atom,{526,44},proper}]}},
    {debug_line,527,214},
    {match,
     {527,5},
     {var,{527,5},'RetType'},
     {call,
      {527,15},
      {atom,{527,15},join},
      [{var,{527,20},'ListType'},{var,{527,30},'RHS'}]}},
    {debug_line,528,215},
    {call,
     {528,5},
     {atom,{528,5},sub_unsafe},
     [{var,{528,16},'RetType'},
      {block,0,
       [{cons,
         {528,25},
         {call,{528,26},{atom,{528,26},proper_list},[]},
         {cons,{528,41},{atom,{528,41},any},{nil,{528,44}}}}]}]}]},
  {clause,
   {529,1},
   [{atom,{529,7},erlang},
    {atom,{529,15},'--'},
    {cons,
     {529,21},
     {var,{529,22},'LHS'},
     {cons,{529,27},{var,{529,27},'_'},{nil,{529,28}}}}],
   [],
   [{debug_line,530,216},
    {match,
     {530,5},
     {var,{530,5},'RetType'},
     {call,
      {530,15},
      {atom,{530,15},copy_list},
      [{var,{530,25},'LHS'},
       {atom,{530,30},new_length},
       {atom,{530,42},proper}]}},
    {debug_line,531,217},
    {call,
     {531,5},
     {atom,{531,5},sub_unsafe},
     [{var,{531,16},'RetType'},
      {block,0,
       [{cons,
         {531,25},
         {call,{531,26},{atom,{531,26},proper_list},[]},
         {cons,
          {531,41},
          {call,{531,41},{atom,{531,41},proper_list},[]},
          {nil,{531,54}}}}]}]}]},
  {clause,
   {533,1},
   [{atom,{533,7},erlang},
    {atom,{533,15},atom_to_list},
    {cons,{533,29},{var,{533,30},'_'},{nil,{533,31}}}],
   [],
   [{debug_line,534,218},
    {call,
     {534,5},
     {atom,{534,5},sub_unsafe},
     [{block,0,
       [{call,
         {534,16},
         {atom,{534,16},proper_list},
         [{block,0,
           [{tuple,
             {534,29},
             [{atom,{534,29},t_integer},
              {tuple,
               {534,29},
               [{integer,{534,29},0},{integer,{534,29},1114111}]}]}]}]}]},
      {block,0,
       [{cons,
         {534,44},
         {tuple,{534,45},[{atom,{534,45},t_atom},{atom,{534,45},any}]},
         {nil,{534,54}}}]}]}]},
  {clause,
   {535,1},
   [{atom,{535,7},erlang},
    {atom,{535,15},iolist_to_binary},
    {cons,{535,35},{var,{535,36},'_'},{nil,{535,37}}}],
   [],
   [{debug_line,537,219},
    {match,
     {537,5},
     {var,{537,5},'ArgType'},
     {call,
      {537,15},
      {atom,{537,15},join},
      [{block,0,
        [{tuple,
          {537,20},
          [{atom,{537,20},t_list},{atom,{537,20},any},{atom,{537,20},any}]}]},
       {block,0,
        [{tuple,
          {537,31},
          [{atom,{537,31},t_bitstring},
           {integer,{537,54},8},
           {atom,{537,31},false}]}]}]}},
    {debug_line,538,220},
    {call,
     {538,5},
     {atom,{538,5},sub_unsafe},
     [{block,0,
       [{tuple,
         {538,16},
         [{atom,{538,16},t_bitstring},
          {integer,{538,39},8},
          {atom,{538,16},false}]}]},
      {block,0,[{cons,{538,43},{var,{538,44},'ArgType'},{nil,{538,51}}}]}]}]},
  {clause,
   {539,1},
   [{atom,{539,7},erlang},
    {atom,{539,15},iolist_size},
    {cons,{539,30},{var,{539,31},'_'},{nil,{539,32}}}],
   [],
   [{debug_line,542,221},
    {match,
     {542,5},
     {var,{542,5},'ArgType'},
     {call,
      {542,15},
      {atom,{542,15},join},
      [{block,0,
        [{tuple,
          {542,20},
          [{atom,{542,20},t_list},{atom,{542,20},any},{atom,{542,20},any}]}]},
       {block,0,
        [{tuple,
          {542,31},
          [{atom,{542,31},t_bitstring},
           {integer,{542,54},8},
           {atom,{542,31},false}]}]}]}},
    {debug_line,543,222},
    {call,
     {543,5},
     {atom,{543,5},sub_unsafe},
     [{block,0,
       [{tuple,
         {543,16},
         [{atom,{543,16},t_integer},
          {tuple,{543,36},[{integer,{543,37},0},{atom,{543,39},'+inf'}]}]}]},
      {block,0,[{cons,{543,49},{var,{543,50},'ArgType'},{nil,{543,57}}}]}]}]},
  {clause,
   {544,1},
   [{atom,{544,7},erlang},
    {atom,{544,15},list_to_binary},
    {cons,{544,33},{var,{544,34},'_'},{nil,{544,35}}}],
   [],
   [{debug_line,546,223},
    {call,
     {546,5},
     {atom,{546,5},sub_unsafe},
     [{block,0,
       [{tuple,
         {546,16},
         [{atom,{546,16},t_bitstring},
          {integer,{546,39},8},
          {atom,{546,16},false}]}]},
      {block,0,
       [{cons,
         {546,43},
         {tuple,
          {546,44},
          [{atom,{546,44},t_list},{atom,{546,44},any},{atom,{546,44},any}]},
         {nil,{546,53}}}]}]}]},
  {clause,
   {547,1},
   [{atom,{547,7},erlang},
    {atom,{547,15},list_to_bitstring},
    {cons,{547,36},{var,{547,37},'_'},{nil,{547,38}}}],
   [],
   [{debug_line,549,224},
    {call,
     {549,5},
     {atom,{549,5},sub_unsafe},
     [{block,0,
       [{tuple,
         {549,16},
         [{atom,{549,16},t_bitstring},
          {integer,{549,16},1},
          {atom,{549,16},false}]}]},
      {block,0,
       [{cons,
         {549,32},
         {tuple,
          {549,33},
          [{atom,{549,33},t_list},{atom,{549,33},any},{atom,{549,33},any}]},
         {nil,{549,42}}}]}]}]},
  {clause,
   {550,1},
   [{atom,{550,7},erlang},
    {atom,{550,15},list_to_integer},
    {cons,{550,32},{var,{550,33},'_'},{nil,{550,34}}}],
   [],
   [{debug_line,551,225},
    {call,
     {551,5},
     {atom,{551,5},sub_unsafe},
     [{block,0,
       [{tuple,{551,16},[{atom,{551,16},t_integer},{atom,{551,16},any}]}]},
      {block,0,
       [{cons,
         {551,30},
         {call,{551,31},{atom,{551,31},proper_cons},[]},
         {nil,{551,44}}}]}]}]},
  {clause,
   {552,1},
   [{atom,{552,7},erlang},
    {atom,{552,15},list_to_integer},
    {cons,
     {552,32},
     {var,{552,33},'_'},
     {cons,{552,36},{var,{552,36},'_'},{nil,{552,37}}}}],
   [],
   [{debug_line,553,226},
    {call,
     {553,5},
     {atom,{553,5},sub_unsafe},
     [{block,0,
       [{tuple,{553,16},[{atom,{553,16},t_integer},{atom,{553,16},any}]}]},
      {block,0,
       [{cons,
         {553,30},
         {call,{553,31},{atom,{553,31},proper_cons},[]},
         {cons,
          {553,46},
          {tuple,{553,46},[{atom,{553,46},t_integer},{atom,{553,46},any}]},
          {nil,{553,58}}}}]}]}]},
  {clause,
   {556,1},
   [{atom,{556,7},erlang},{atom,{556,15},alias},{nil,{556,22}}],
   [],
   [{debug_line,557,227},
    {call,
     {557,5},
     {atom,{557,5},sub_unsafe},
     [{atom,{557,16},reference},{nil,{557,27}}]}]},
  {clause,
   {558,1},
   [{atom,{558,7},erlang},
    {atom,{558,15},alias},
    {cons,{558,22},{var,{558,23},'_'},{nil,{558,24}}}],
   [],
   [{debug_line,559,228},
    {call,
     {559,5},
     {atom,{559,5},sub_unsafe},
     [{atom,{559,16},reference},
      {block,0,
       [{cons,
         {559,27},
         {call,{559,28},{atom,{559,28},proper_list},[]},
         {nil,{559,41}}}]}]}]},
  {clause,
   {560,1},
   [{atom,{560,7},erlang},
    {atom,{560,15},monitor},
    {cons,
     {560,24},
     {var,{560,25},'_'},
     {cons,{560,28},{var,{560,28},'_'},{nil,{560,29}}}}],
   [],
   [{debug_line,561,229},
    {call,
     {561,5},
     {atom,{561,5},sub_unsafe},
     [{atom,{561,16},reference},
      {block,0,
       [{cons,
         {561,27},
         {atom,{561,28},any},
         {cons,{561,33},{atom,{561,33},any},{nil,{561,36}}}}]}]}]},
  {clause,
   {562,1},
   [{atom,{562,7},erlang},
    {atom,{562,15},monitor},
    {cons,
     {562,24},
     {var,{562,25},'_'},
     {cons,
      {562,28},
      {var,{562,28},'_'},
      {cons,{562,31},{var,{562,31},'_'},{nil,{562,32}}}}}],
   [],
   [{debug_line,563,230},
    {call,
     {563,5},
     {atom,{563,5},sub_unsafe},
     [{atom,{563,16},reference},
      {block,0,
       [{cons,
         {563,27},
         {atom,{563,28},any},
         {cons,
          {563,33},
          {atom,{563,33},any},
          {cons,
           {563,38},
           {call,{563,38},{atom,{563,38},proper_list},[]},
           {nil,{563,51}}}}}]}]}]},
  {clause,
   {564,1},
   [{atom,{564,7},erlang},
    {atom,{564,15},spawn},
    {cons,{564,24},{var,{564,25},'_'},{nil,{564,26}}}],
   [],
   [{debug_line,565,231},
    {call,
     {565,5},
     {atom,{565,5},sub_unsafe},
     [{atom,{565,16},pid},
      {block,0,
       [{cons,
         {565,21},
         {tuple,
          {565,22},
          [{atom,{565,22},t_fun},
           {integer,{565,35},0},
           {atom,{565,22},any},
           {atom,{565,22},any}]},
         {nil,{565,37}}}]}]}]},
  {clause,
   {566,1},
   [{atom,{566,7},erlang},
    {atom,{566,15},spawn},
    {cons,
     {566,24},
     {var,{566,25},'_'},
     {cons,{566,28},{var,{566,28},'_'},{nil,{566,29}}}}],
   [],
   [{debug_line,567,232},
    {call,
     {567,5},
     {atom,{567,5},sub_unsafe},
     [{atom,{567,16},pid},
      {block,0,
       [{cons,
         {567,21},
         {tuple,{567,22},[{atom,{567,22},t_atom},{atom,{567,22},any}]},
         {cons,
          {567,33},
          {tuple,
           {567,33},
           [{atom,{567,33},t_fun},
            {integer,{567,46},0},
            {atom,{567,33},any},
            {atom,{567,33},any}]},
          {nil,{567,48}}}}]}]}]},
  {clause,
   {568,1},
   [{atom,{568,7},erlang},
    {atom,{568,15},spawn},
    {cons,
     {568,24},
     {var,{568,25},'_'},
     {cons,
      {568,28},
      {var,{568,28},'_'},
      {cons,{568,31},{var,{568,31},'_'},{nil,{568,32}}}}}],
   [],
   [{debug_line,569,233},
    {call,
     {569,5},
     {atom,{569,5},sub_unsafe},
     [{atom,{569,16},pid},
      {block,0,
       [{cons,
         {569,21},
         {tuple,{569,22},[{atom,{569,22},t_atom},{atom,{569,22},any}]},
         {cons,
          {569,33},
          {tuple,{569,33},[{atom,{569,33},t_atom},{atom,{569,33},any}]},
          {cons,
           {569,44},
           {call,{569,44},{atom,{569,44},proper_list},[]},
           {nil,{569,57}}}}}]}]}]},
  {clause,
   {570,1},
   [{atom,{570,7},erlang},{atom,{570,15},spawn_link},{var,{570,29},'Args'}],
   [],
   [{debug_line,571,234},
    {call,
     {571,5},
     {atom,{571,5},types},
     [{atom,{571,11},erlang},{atom,{571,19},spawn},{var,{571,28},'Args'}]}]},
  {clause,
   {572,1},
   [{atom,{572,7},erlang},
    {atom,{572,15},spawn_monitor},
    {cons,{572,32},{var,{572,33},'_'},{nil,{572,34}}}],
   [],
   [{debug_line,573,235},
    {match,
     {573,5},
     {var,{573,5},'RetType'},
     {call,
      {573,15},
      {atom,{573,15},make_two_tuple},
      [{atom,{573,30},pid},{atom,{573,35},reference}]}},
    {debug_line,574,236},
    {call,
     {574,5},
     {atom,{574,5},sub_unsafe},
     [{var,{574,16},'RetType'},
      {block,0,
       [{cons,
         {574,25},
         {tuple,
          {574,26},
          [{atom,{574,26},t_fun},
           {integer,{574,39},0},
           {atom,{574,26},any},
           {atom,{574,26},any}]},
         {nil,{574,41}}}]}]}]},
  {clause,
   {575,1},
   [{atom,{575,7},erlang},
    {atom,{575,15},spawn_monitor},
    {cons,
     {575,32},
     {var,{575,33},'_'},
     {cons,{575,36},{var,{575,36},'_'},{nil,{575,37}}}}],
   [],
   [{debug_line,576,237},
    {match,
     {576,5},
     {var,{576,5},'RetType'},
     {call,
      {576,15},
      {atom,{576,15},make_two_tuple},
      [{atom,{576,30},pid},{atom,{576,35},reference}]}},
    {debug_line,577,238},
    {call,
     {577,5},
     {atom,{577,5},sub_unsafe},
     [{var,{577,16},'RetType'},
      {block,0,
       [{cons,
         {577,25},
         {tuple,{577,26},[{atom,{577,26},t_atom},{atom,{577,26},any}]},
         {cons,
          {577,37},
          {tuple,
           {577,37},
           [{atom,{577,37},t_fun},
            {integer,{577,50},0},
            {atom,{577,37},any},
            {atom,{577,37},any}]},
          {nil,{577,52}}}}]}]}]},
  {clause,
   {578,1},
   [{atom,{578,7},erlang},
    {atom,{578,15},spawn_monitor},
    {cons,
     {578,32},
     {var,{578,33},'_'},
     {cons,
      {578,36},
      {var,{578,36},'_'},
      {cons,{578,39},{var,{578,39},'_'},{nil,{578,40}}}}}],
   [],
   [{debug_line,579,239},
    {match,
     {579,5},
     {var,{579,5},'RetType'},
     {call,
      {579,15},
      {atom,{579,15},make_two_tuple},
      [{atom,{579,30},pid},{atom,{579,35},reference}]}},
    {debug_line,580,240},
    {call,
     {580,5},
     {atom,{580,5},sub_unsafe},
     [{var,{580,16},'RetType'},
      {block,0,
       [{cons,
         {580,25},
         {tuple,{580,26},[{atom,{580,26},t_atom},{atom,{580,26},any}]},
         {cons,
          {580,37},
          {tuple,{580,37},[{atom,{580,37},t_atom},{atom,{580,37},any}]},
          {cons,
           {580,48},
           {call,{580,48},{atom,{580,48},proper_list},[]},
           {nil,{580,61}}}}}]}]}]},
  {clause,
   {581,1},
   [{atom,{581,7},erlang},
    {atom,{581,15},spawn_request},
    {match,
     {581,32},
     {cons,{581,32},{var,{581,33},'_'},{var,{581,37},'_'}},
     {var,{581,40},'Args'}}],
   [[{op,
      {581,64},
      '=<',
      {call,
       {581,51},
       {remote,{581,51},{atom,{581,51},erlang},{atom,{581,51},length}},
       [{var,{581,58},'Args'}]},
      {integer,{581,67},5}}]],
   [{debug_line,582,241},
    {call,
     {582,5},
     {atom,{582,5},sub_unsafe},
     [{atom,{582,16},reference},
      {block,0,
       [{lc,
         {582,27},
         {block,0,[{atom,{582,28},any}]},
         [{block,0,[{atom,{582,40},true}]},
          {generate,{582,37},{var,{582,35},'_'},{var,{582,40},'Args'}}]}]}]}]},
  {clause,
   {585,1},
   [{atom,{585,7},erlang},
    {atom,{585,15},atom_to_binary},
    {cons,{585,31},{var,{585,32},'_'},{nil,{585,33}}}],
   [],
   [{debug_line,586,242},
    {call,
     {586,5},
     {atom,{586,5},sub_safe},
     [{block,0,[{call,{586,14},{atom,{586,14},binary},[]}]},
      {block,0,
       [{cons,
         {586,24},
         {tuple,{586,25},[{atom,{586,25},t_atom},{atom,{586,25},any}]},
         {nil,{586,34}}}]}]}]},
  {clause,
   {587,1},
   [{atom,{587,7},erlang},
    {atom,{587,15},binary_to_integer},
    {cons,{587,34},{var,{587,35},'_'},{nil,{587,36}}}],
   [],
   [{debug_line,588,243},
    {call,
     {588,5},
     {atom,{588,5},sub_unsafe},
     [{block,0,
       [{tuple,{588,16},[{atom,{588,16},t_integer},{atom,{588,16},any}]}]},
      {block,0,
       [{cons,
         {588,30},
         {call,{588,31},{atom,{588,31},binary},[]},
         {nil,{588,39}}}]}]}]},
  {clause,
   {589,1},
   [{atom,{589,7},erlang},
    {atom,{589,15},binary_to_list},
    {cons,{589,31},{var,{589,32},'_'},{nil,{589,33}}}],
   [],
   [{debug_line,590,244},
    {call,
     {590,5},
     {atom,{590,5},sub_safe},
     [{block,0,[{call,{590,14},{atom,{590,14},proper_list},[]}]},
      {block,0,
       [{cons,
         {590,29},
         {call,{590,30},{atom,{590,30},binary},[]},
         {nil,{590,38}}}]}]}]},
  {clause,
   {591,1},
   [{atom,{591,7},erlang},
    {atom,{591,15},integer_to_list},
    {cons,{591,32},{var,{591,33},'_'},{nil,{591,34}}}],
   [],
   [{debug_line,592,245},
    {call,
     {592,5},
     {atom,{592,5},sub_safe},
     [{block,0,[{call,{592,14},{atom,{592,14},proper_cons},[]}]},
      {block,0,
       [{cons,
         {592,29},
         {tuple,{592,30},[{atom,{592,30},t_integer},{atom,{592,30},any}]},
         {nil,{592,42}}}]}]}]},
  {clause,
   {593,1},
   [{atom,{593,7},erlang},
    {atom,{593,15},list_to_atom},
    {cons,{593,29},{var,{593,30},'_'},{nil,{593,31}}}],
   [],
   [{debug_line,594,246},
    {call,
     {594,5},
     {atom,{594,5},sub_unsafe},
     [{block,0,
       [{tuple,{594,16},[{atom,{594,16},t_atom},{atom,{594,16},any}]}]},
      {block,0,
       [{cons,
         {594,27},
         {tuple,
          {594,28},
          [{atom,{594,28},t_list},{atom,{594,28},any},{atom,{594,28},any}]},
         {nil,{594,37}}}]}]}]},
  {clause,
   {595,1},
   [{atom,{595,7},erlang},
    {atom,{595,15},list_to_tuple},
    {cons,{595,30},{var,{595,31},'Arg'},{nil,{595,34}}}],
   [],
   [{debug_line,596,247},
    {match,
     {596,5},
     {var,{596,5},'Sz'},
     {'case',
      {596,10},
      {call,
       {596,15},
       {atom,{596,15},meet},
       [{var,{596,20},'Arg'},
        {block,0,
         [{tuple,
           {596,25},
           [{atom,{596,25},t_list},
            {atom,{596,25},any},
            {atom,{596,25},any}]}]}]},
      [{clause,
        {597,14},
        [{tuple,
          {597,14},
          [{atom,{597,14},t_cons},{var,{597,14},'_'},{var,{597,14},'_'}]}],
        [],
        [{debug_line,597,248},{integer,{597,27},1}]},
       {clause,
        {598,14},
        [{var,{598,14},'_'}],
        [],
        [{debug_line,598,249},{integer,{598,19},0}]}]}},
    {debug_line,600,250},
    {call,
     {600,5},
     {atom,{600,5},sub_unsafe},
     [{block,0,
       [{tuple,
         {600,16},
         [{atom,{600,16},t_tuple},
          {var,{600,30},'Sz'},
          {atom,{600,16},false},
          {map,{600,16},[]}]}]},
      {block,0,
       [{cons,
         {600,35},
         {tuple,
          {600,36},
          [{atom,{600,36},t_list},{atom,{600,36},any},{atom,{600,36},any}]},
         {nil,{600,45}}}]}]}]},
  {clause,
   {601,1},
   [{atom,{601,7},erlang},
    {atom,{601,15},term_to_binary},
    {cons,{601,31},{var,{601,32},'_'},{nil,{601,33}}}],
   [],
   [{debug_line,602,251},
    {call,
     {602,5},
     {atom,{602,5},sub_unsafe},
     [{block,0,[{call,{602,16},{atom,{602,16},binary},[]}]},
      {block,0,[{cons,{602,26},{atom,{602,27},any},{nil,{602,30}}}]}]}]},
  {clause,
   {603,1},
   [{atom,{603,7},erlang},
    {atom,{603,15},tuple_to_list},
    {cons,{603,30},{var,{603,31},'Arg'},{nil,{603,34}}}],
   [],
   [{debug_line,604,252},
    {match,
     {604,5},
     {var,{604,5},'T'},
     {'case',
      {604,9},
      {call,
       {604,14},
       {atom,{604,14},meet},
       [{var,{604,19},'Arg'},
        {block,0,
         [{tuple,
           {604,24},
           [{atom,{604,24},t_tuple},
            {integer,{604,24},0},
            {atom,{604,24},false},
            {map,{604,24},[]}]}]}]},
      [{clause,
        {605,13},
        [{tuple,
          {605,13},
          [{atom,{605,13},t_tuple},
           {var,{605,27},'Sz'},
           {var,{605,13},'_'},
           {var,{605,13},'_'}]}],
        [[{op,{605,39},'>=',{var,{605,36},'Sz'},{integer,{605,42},1}}]],
        [{debug_line,606,253},{call,{606,17},{atom,{606,17},proper_cons},[]}]},
       {clause,
        {607,13},
        [{var,{607,13},'_'}],
        [],
        [{debug_line,608,254},
         {call,{608,17},{atom,{608,17},proper_list},[]}]}]}},
    {debug_line,610,255},
    {call,
     {610,5},
     {atom,{610,5},sub_safe},
     [{var,{610,14},'T'},
      {block,0,
       [{cons,
         {610,17},
         {tuple,
          {610,18},
          [{atom,{610,18},t_tuple},
           {integer,{610,18},0},
           {atom,{610,18},false},
           {map,{610,18},[]}]},
         {nil,{610,28}}}]}]}]},
  {clause,
   {613,1},
   [{atom,{613,7},erlang},
    {atom,{613,15},convert_time_unit},
    {cons,
     {613,34},
     {var,{613,35},'_'},
     {cons,
      {613,38},
      {var,{613,38},'_'},
      {cons,{613,41},{var,{613,41},'_'},{nil,{613,42}}}}}],
   [],
   [{debug_line,614,256},
    {call,
     {614,5},
     {atom,{614,5},sub_unsafe},
     [{block,0,
       [{tuple,{614,16},[{atom,{614,16},t_integer},{atom,{614,16},any}]}]},
      {block,0,
       [{cons,
         {614,30},
         {atom,{614,31},any},
         {cons,
          {614,36},
          {atom,{614,36},any},
          {cons,{614,41},{atom,{614,41},any},{nil,{614,44}}}}}]}]}]},
  {clause,
   {615,1},
   [{atom,{615,7},erlang},{atom,{615,15},monotonic_time},{nil,{615,31}}],
   [],
   [{debug_line,616,257},
    {call,
     {616,5},
     {atom,{616,5},sub_unsafe},
     [{block,0,
       [{tuple,{616,16},[{atom,{616,16},t_integer},{atom,{616,16},any}]}]},
      {nil,{616,30}}]}]},
  {clause,
   {617,1},
   [{atom,{617,7},erlang},
    {atom,{617,15},phash2},
    {cons,{617,23},{var,{617,24},'_'},{nil,{617,25}}}],
   [],
   [{debug_line,618,258},
    {match,
     {618,5},
     {var,{618,5},'R'},
     {tuple,
      {618,9},
      [{integer,{618,10},0},
       {op,
        {618,24},
        '-',
        {op,{618,16},'bsl',{integer,{618,14},1},{integer,{618,20},27}},
        {integer,{618,26},1}}]}},
    {debug_line,619,259},
    {call,
     {619,5},
     {atom,{619,5},sub_unsafe},
     [{block,0,
       [{tuple,{619,16},[{atom,{619,16},t_integer},{var,{619,36},'R'}]}]},
      {block,0,[{cons,{619,40},{atom,{619,41},any},{nil,{619,44}}}]}]}]},
  {clause,
   {620,1},
   [{atom,{620,7},erlang},
    {atom,{620,15},phash2},
    {cons,
     {620,23},
     {var,{620,24},'_'},
     {cons,{620,27},{var,{620,27},'_'},{nil,{620,28}}}}],
   [],
   [{debug_line,621,260},
    {match,
     {621,5},
     {var,{621,5},'R'},
     {tuple,
      {621,9},
      [{integer,{621,10},0},
       {op,
        {621,24},
        '-',
        {op,{621,16},'bsl',{integer,{621,14},1},{integer,{621,20},32}},
        {integer,{621,26},1}}]}},
    {debug_line,622,261},
    {call,
     {622,5},
     {atom,{622,5},sub_unsafe},
     [{block,0,
       [{tuple,{622,16},[{atom,{622,16},t_integer},{var,{622,36},'R'}]}]},
      {block,0,
       [{cons,
         {622,40},
         {atom,{622,41},any},
         {cons,{622,46},{atom,{622,46},any},{nil,{622,49}}}}]}]}]},
  {clause,
   {623,1},
   [{atom,{623,7},erlang},{atom,{623,15},unique_integer},{nil,{623,31}}],
   [],
   [{debug_line,624,262},
    {call,
     {624,5},
     {atom,{624,5},sub_unsafe},
     [{block,0,
       [{tuple,{624,16},[{atom,{624,16},t_integer},{atom,{624,16},any}]}]},
      {nil,{624,30}}]}]},
  {clause,
   {625,1},
   [{atom,{625,7},erlang},
    {atom,{625,15},unique_integer},
    {cons,{625,31},{var,{625,32},'_'},{nil,{625,33}}}],
   [],
   [{debug_line,626,263},
    {call,
     {626,5},
     {atom,{626,5},sub_unsafe},
     [{block,0,
       [{tuple,{626,16},[{atom,{626,16},t_integer},{atom,{626,16},any}]}]},
      {block,0,[{cons,{626,30},{atom,{626,31},any},{nil,{626,34}}}]}]}]},
  {clause,
   {629,1},
   [{atom,{629,7},erlang},
    {atom,{629,15},binary_part},
    {cons,
     {629,30},
     {var,{629,31},'_'},
     {cons,{629,34},{var,{629,34},'_'},{nil,{629,35}}}}],
   [],
   [{debug_line,630,264},
    {match,
     {630,5},
     {var,{630,5},'PosLen'},
     {call,
      {630,14},
      {atom,{630,14},make_two_tuple},
      [{block,0,
        [{tuple,{630,29},[{atom,{630,29},t_integer},{atom,{630,29},any}]}]},
       {block,0,
        [{tuple,{630,43},[{atom,{630,43},t_integer},{atom,{630,43},any}]}]}]}},
    {debug_line,631,265},
    {match,
     {631,5},
     {var,{631,5},'Binary'},
     {tuple,
      {631,14},
      [{atom,{631,14},t_bitstring},
       {integer,{631,37},8},
       {atom,{631,14},false}]}},
    {debug_line,632,266},
    {call,
     {632,5},
     {atom,{632,5},sub_unsafe},
     [{var,{632,16},'Binary'},
      {block,0,
       [{cons,
         {632,24},
         {var,{632,25},'Binary'},
         {cons,{632,33},{var,{632,33},'PosLen'},{nil,{632,39}}}}]}]}]},
  {clause,
   {633,1},
   [{atom,{633,7},erlang},
    {atom,{633,15},binary_part},
    {cons,
     {633,30},
     {var,{633,31},'_'},
     {cons,
      {633,34},
      {var,{633,34},'_'},
      {cons,{633,37},{var,{633,37},'_'},{nil,{633,38}}}}}],
   [],
   [{debug_line,634,267},
    {match,
     {634,5},
     {var,{634,5},'Binary'},
     {tuple,
      {634,14},
      [{atom,{634,14},t_bitstring},
       {integer,{634,37},8},
       {atom,{634,14},false}]}},
    {debug_line,635,268},
    {call,
     {635,5},
     {atom,{635,5},sub_unsafe},
     [{var,{635,16},'Binary'},
      {block,0,
       [{cons,
         {635,24},
         {var,{635,25},'Binary'},
         {cons,
          {635,33},
          {tuple,{635,33},[{atom,{635,33},t_integer},{atom,{635,33},any}]},
          {cons,
           {635,47},
           {tuple,{635,47},[{atom,{635,47},t_integer},{atom,{635,47},any}]},
           {nil,{635,59}}}}}]}]}]},
  {clause,
   {636,1},
   [{atom,{636,7},erlang},
    {atom,{636,15},is_map_key},
    {cons,
     {636,29},
     {var,{636,30},'Key'},
     {cons,{636,35},{var,{636,35},'Map'},{nil,{636,38}}}}],
   [],
   [{debug_line,637,269},
    {match,
     {637,5},
     {var,{637,5},'RetType'},
     {'case',
      {637,15},
      {call,
       {637,20},
       {atom,{637,20},erlang_map_get_type},
       [{var,{637,40},'Key'},{var,{637,45},'Map'}]},
      [{clause,
        {638,19},
        [{atom,{638,19},none}],
        [],
        [{debug_line,638,270},
         {call,
          {638,27},
          {remote,
           {638,37},
           {atom,{638,27},beam_types},
           {atom,{638,38},make_atom}},
          [{atom,{638,48},false}]}]},
       {clause,
        {639,19},
        [{var,{639,19},'_'}],
        [],
        [{debug_line,639,271},
         {call,
          {639,24},
          {remote,
           {639,34},
           {atom,{639,24},beam_types},
           {atom,{639,35},make_boolean}},
          []}]}]}},
    {debug_line,641,272},
    {call,
     {641,5},
     {atom,{641,5},sub_unsafe},
     [{var,{641,16},'RetType'},
      {block,0,
       [{cons,
         {641,25},
         {atom,{641,26},any},
         {cons,
          {641,31},
          {tuple,
           {641,31},
           [{atom,{641,31},t_map},{atom,{641,31},any},{atom,{641,31},any}]},
          {nil,{641,39}}}}]}]}]},
  {clause,
   {642,1},
   [{atom,{642,7},erlang},{atom,{642,15},make_ref},{nil,{642,25}}],
   [],
   [{debug_line,643,273},
    {call,
     {643,5},
     {atom,{643,5},sub_unsafe},
     [{atom,{643,16},reference},{nil,{643,27}}]}]},
  {clause,
   {644,1},
   [{atom,{644,7},erlang},
    {atom,{644,15},map_get},
    {cons,
     {644,26},
     {var,{644,27},'Key'},
     {cons,{644,32},{var,{644,32},'Map'},{nil,{644,35}}}}],
   [],
   [{debug_line,645,274},
    {match,
     {645,5},
     {var,{645,5},'RetType'},
     {call,
      {645,15},
      {atom,{645,15},erlang_map_get_type},
      [{var,{645,35},'Key'},{var,{645,40},'Map'}]}},
    {debug_line,646,275},
    {call,
     {646,5},
     {atom,{646,5},sub_unsafe},
     [{var,{646,16},'RetType'},
      {block,0,
       [{cons,
         {646,25},
         {atom,{646,26},any},
         {cons,
          {646,31},
          {tuple,
           {646,31},
           [{atom,{646,31},t_map},{atom,{646,31},any},{atom,{646,31},any}]},
          {nil,{646,39}}}}]}]}]},
  {clause,
   {647,1},
   [{atom,{647,7},erlang},
    {atom,{647,15},node},
    {cons,{647,23},{var,{647,24},'_'},{nil,{647,25}}}],
   [],
   [{debug_line,648,276},
    {call,
     {648,5},
     {atom,{648,5},sub_unsafe},
     [{block,0,
       [{tuple,{648,16},[{atom,{648,16},t_atom},{atom,{648,16},any}]}]},
      {block,0,
       [{cons,{648,27},{atom,{648,28},identifier},{nil,{648,38}}}]}]}]},
  {clause,
   {649,1},
   [{atom,{649,7},erlang},{atom,{649,15},node},{nil,{649,23}}],
   [],
   [{debug_line,650,277},
    {call,
     {650,5},
     {atom,{650,5},sub_unsafe},
     [{block,0,
       [{tuple,{650,16},[{atom,{650,16},t_atom},{atom,{650,16},any}]}]},
      {nil,{650,27}}]}]},
  {clause,
   {651,1},
   [{atom,{651,7},erlang},{atom,{651,15},self},{nil,{651,21}}],
   [],
   [{debug_line,652,278},
    {call,
     {652,5},
     {atom,{652,5},sub_unsafe},
     [{atom,{652,16},pid},{nil,{652,21}}]}]},
  {clause,
   {653,1},
   [{atom,{653,7},erlang},
    {atom,{653,15},size},
    {cons,{653,23},{var,{653,24},'_'},{nil,{653,25}}}],
   [],
   [{debug_line,654,279},
    {match,
     {654,5},
     {var,{654,5},'ArgType'},
     {call,
      {654,15},
      {atom,{654,15},join},
      [{block,0,
        [{tuple,
          {654,20},
          [{atom,{654,20},t_tuple},
           {integer,{654,20},0},
           {atom,{654,20},false},
           {map,{654,20},[]}]}]},
       {block,0,
        [{tuple,
          {654,32},
          [{atom,{654,32},t_bitstring},
           {integer,{654,32},1},
           {atom,{654,32},false}]}]}]}},
    {debug_line,655,280},
    {call,
     {655,5},
     {atom,{655,5},sub_unsafe},
     [{block,0,
       [{tuple,{655,16},[{atom,{655,16},t_integer},{atom,{655,16},any}]}]},
      {block,0,[{cons,{655,30},{var,{655,31},'ArgType'},{nil,{655,38}}}]}]}]},
  {clause,
   {656,1},
   [{atom,{656,7},erlang},
    {atom,{656,15},split_binary},
    {cons,
     {656,29},
     {var,{656,30},'_'},
     {cons,{656,33},{var,{656,33},'_'},{nil,{656,34}}}}],
   [],
   [{debug_line,660,281},
    {match,
     {660,5},
     {var,{660,5},'Binary'},
     {call,{660,14},{atom,{660,14},binary},[]}},
    {debug_line,661,282},
    {match,
     {661,5},
     {var,{661,5},'T'},
     {call,
      {661,9},
      {atom,{661,9},make_two_tuple},
      [{var,{661,24},'Binary'},
       {block,0,
        [{tuple,
          {661,32},
          [{atom,{661,32},t_bitstring},
           {integer,{661,32},1},
           {atom,{661,32},false}]}]}]}},
    {debug_line,662,283},
    {call,
     {662,5},
     {atom,{662,5},sub_unsafe},
     [{var,{662,16},'T'},
      {block,0,
       [{cons,
         {662,19},
         {tuple,
          {662,20},
          [{atom,{662,20},t_bitstring},
           {integer,{662,20},1},
           {atom,{662,20},false}]},
         {cons,
          {662,36},
          {tuple,{662,36},[{atom,{662,36},t_integer},{atom,{662,36},any}]},
          {nil,{662,48}}}}]}]}]},
  {clause,
   {665,1},
   [{atom,{665,7},erlang},
    {atom,{665,15},element},
    {cons,
     {665,24},
     {var,{665,25},'Pos'},
     {cons,{665,30},{var,{665,30},'Tuple0'},{nil,{665,36}}}}],
   [],
   [{debug_line,666,284},
    {match,
     {666,5},
     {var,{666,5},'PosRange'},
     {tuple,
      {666,16},
      [{atom,{666,16},t_integer},
       {tuple,
        {666,36},
        [{integer,{666,37},1},
         {op,
          {666,40},
          '-',
          {op,{666,40},'bsl',{integer,{666,40},1},{integer,{666,40},24}},
          {integer,{666,40},1}}]}]}},
    {debug_line,667,285},
    {'case',
     {667,5},
     {call,
      {667,10},
      {atom,{667,10},meet},
      [{var,{667,15},'Pos'},{var,{667,20},'PosRange'}]},
     [{clause,
       {668,9},
       [{tuple,
         {668,9},
         [{atom,{668,9},t_integer},
          {tuple,{668,29},[{var,{668,30},'Index'},{var,{668,36},'Index'}]}]}],
       [[{op,{668,55},'>=',{var,{668,49},'Index'},{integer,{668,58},1}}]],
       [{debug_line,669,286},
        {'case',
         {669,13},
         {call,
          {669,18},
          {atom,{669,18},normalize},
          [{block,0,
            [{call,
              {669,28},
              {atom,{669,28},meet},
              [{var,{669,33},'Tuple0'},
               {block,0,
                [{tuple,
                  {669,41},
                  [{atom,{669,41},t_tuple},
                   {var,{669,55},'Index'},
                   {atom,{669,41},false},
                   {map,{669,41},[]}]}]}]}]}]},
         [{clause,
           {670,17},
           [{match,
             {670,17},
             {tuple,
              {670,17},
              [{atom,{670,17},t_tuple},
               {var,{670,17},'_'},
               {var,{670,17},'_'},
               {var,{670,35},'Es'}]},
             {var,{670,39},'Tuple'}}],
           [],
           [{debug_line,671,287},
            {match,
             {671,21},
             {var,{671,21},'RetType'},
             {call,
              {671,31},
              {remote,
               {671,41},
               {atom,{671,31},beam_types},
               {atom,{671,42},get_tuple_element}},
              [{var,{671,60},'Index'},{var,{671,67},'Es'}]}},
            {debug_line,672,288},
            {call,
             {672,21},
             {atom,{672,21},sub_unsafe},
             [{var,{672,32},'RetType'},
              {block,0,
               [{cons,
                 {672,41},
                 {var,{672,42},'PosRange'},
                 {cons,{672,52},{var,{672,52},'Tuple'},{nil,{672,57}}}}]}]}]},
          {clause,
           {673,17},
           [{atom,{673,17},none}],
           [],
           [{debug_line,674,289},
            {call,
             {674,21},
             {atom,{674,21},sub_unsafe},
             [{atom,{674,32},none},
              {block,0,
               [{cons,
                 {674,38},
                 {var,{674,39},'PosRange'},
                 {cons,
                  {674,49},
                  {tuple,
                   {674,49},
                   [{atom,{674,49},t_tuple},
                    {integer,{674,49},0},
                    {atom,{674,49},false},
                    {map,{674,49},[]}]},
                  {nil,{674,59}}}}]}]}]}]}]},
      {clause,
       {676,9},
       [{var,{676,9},'_'}],
       [],
       [{debug_line,677,290},
        {call,
         {677,13},
         {atom,{677,13},sub_unsafe},
         [{atom,{677,24},any},
          {block,0,
           [{cons,
             {677,29},
             {var,{677,30},'PosRange'},
             {cons,
              {677,40},
              {tuple,
               {677,40},
               [{atom,{677,40},t_tuple},
                {integer,{677,40},0},
                {atom,{677,40},false},
                {map,{677,40},[]}]},
              {nil,{677,50}}}}]}]}]}]}]},
  {clause,
   {679,1},
   [{atom,{679,7},erlang},
    {atom,{679,15},setelement},
    {cons,
     {679,27},
     {var,{679,28},'PosType'},
     {cons,
      {679,37},
      {var,{679,37},'TupleType'},
      {cons,{679,48},{var,{679,48},'ArgType'},{nil,{679,55}}}}}],
   [],
   [{debug_line,680,291},
    {match,
     {680,5},
     {var,{680,5},'PosRange'},
     {tuple,
      {680,16},
      [{atom,{680,16},t_integer},
       {tuple,
        {680,36},
        [{integer,{680,37},1},
         {op,
          {680,40},
          '-',
          {op,{680,40},'bsl',{integer,{680,40},1},{integer,{680,40},24}},
          {integer,{680,40},1}}]}]}},
    {debug_line,681,292},
    {match,
     {681,5},
     {var,{681,5},'RetType'},
     {'case',
      {681,15},
      {call,
       {681,20},
       {atom,{681,20},meet},
       [{var,{681,25},'PosType'},{var,{681,34},'PosRange'}]},
      [{clause,
        {682,19},
        [{tuple,
          {682,19},
          [{atom,{682,19},t_integer},
           {tuple,{682,39},[{var,{682,40},'Same'},{var,{682,45},'Same'}]}]}],
        [],
        [{debug_line,683,293},
         {call,
          {683,23},
          {remote,
           {683,33},
           {atom,{683,23},beam_types},
           {atom,{683,34},update_tuple}},
          [{var,{683,47},'TupleType'},
           {block,0,
            [{cons,
              {683,58},
              {tuple,
               {683,59},
               [{var,{683,60},'Same'},{var,{683,66},'ArgType'}]},
              {nil,{683,74}}}]}]}]},
       {clause,
        {684,19},
        [{tuple,{684,19},[{atom,{684,19},t_integer},{var,{684,19},'_'}]}],
        [],
        [{debug_line,685,294},
         {'case',
          {685,23},
          {call,
           {685,28},
           {atom,{685,28},normalize},
           [{block,0,
             [{call,
               {685,38},
               {atom,{685,38},meet},
               [{var,{685,43},'TupleType'},
                {block,0,
                 [{tuple,
                   {685,54},
                   [{atom,{685,54},t_tuple},
                    {integer,{685,68},1},
                    {atom,{685,54},false},
                    {map,{685,54},[]}]}]}]}]}]},
          [{clause,
            {686,27},
            [{match,
              {686,27},
              {tuple,
               {686,27},
               [{atom,{686,27},t_tuple},
                {var,{686,27},'_'},
                {var,{686,27},'_'},
                {var,{686,27},'_'}]},
              {var,{686,38},'T'}}],
            [],
            [{debug_line,686,295},
             {block,
              {686,43},
              [{match,{686,43},{var,{686,43},rec0},{var,{686,43},'T'}},
               {'case',
                {686,53},
                {var,{686,43},rec0},
                [{clause,
                  {686,53},
                  [{tuple,
                    {686,53},
                    [{atom,{686,53},t_tuple},
                     {var,{686,53},'_'},
                     {var,{686,53},'_'},
                     {var,{686,53},'_'}]}],
                  [],
                  [{call,
                    {686,53},
                    {remote,
                     {686,53},
                     {atom,{686,53},erlang},
                     {atom,{686,53},setelement}},
                    [{integer,{686,53},4},
                     {var,{686,43},rec0},
                     {map,{686,62},[]}]}]},
                 {clause,
                  [{generated,true},{location,{686,53}}],
                  [{var,[{generated,true},{location,{686,53}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{686,53}}],
                    {remote,
                     [{generated,true},{location,{686,53}}],
                     {atom,[{generated,true},{location,{686,53}}],erlang},
                     {atom,[{generated,true},{location,{686,53}}],error}},
                    [{tuple,
                      [{generated,true},{location,{686,53}}],
                      [{atom,[{generated,true},{location,{686,53}}],badrecord},
                       {var,{686,43},rec0}]}]}]}]}]}]},
           {clause,
            {687,27},
            [{atom,{687,27},none}],
            [],
            [{debug_line,687,296},{atom,{687,35},none}]}]}]},
       {clause,
        {689,19},
        [{atom,{689,19},none}],
        [],
        [{debug_line,690,297},{atom,{690,23},none}]}]}},
    {debug_line,692,298},
    {call,
     {692,5},
     {atom,{692,5},sub_unsafe},
     [{var,{692,16},'RetType'},
      {block,0,
       [{cons,
         {692,25},
         {var,{692,26},'PosRange'},
         {cons,
          {692,36},
          {tuple,
           {692,36},
           [{atom,{692,36},t_tuple},
            {integer,{692,50},1},
            {atom,{692,36},false},
            {map,{692,36},[]}]},
          {cons,{692,54},{atom,{692,54},any},{nil,{692,57}}}}}]}]}]},
  {clause,
   {694,1},
   [{atom,{694,7},erlang},
    {atom,{694,15},make_fun},
    {cons,
     {694,25},
     {var,{694,26},'_'},
     {cons,
      {694,28},
      {var,{694,28},'_'},
      {cons,{694,30},{var,{694,30},'Arity0'},{nil,{694,36}}}}}],
   [],
   [{debug_line,695,299},
    {match,
     {695,5},
     {var,{695,5},'Type'},
     {'case',
      {695,12},
      {call,
       {695,17},
       {atom,{695,17},meet},
       [{var,{695,22},'Arity0'},
        {block,0,
         [{tuple,{695,30},[{atom,{695,30},t_integer},{atom,{695,30},any}]}]}]},
      [{clause,
        {696,16},
        [{tuple,
          {696,16},
          [{atom,{696,16},t_integer},
           {tuple,{696,36},[{var,{696,37},'Arity'},{var,{696,43},'Arity'}]}]}],
        [[{op,{697,29},'>=',{var,{697,23},'Arity'},{integer,{697,32},0}},
          {op,{697,41},'=<',{var,{697,35},'Arity'},{integer,{697,45},255}}]],
        [{debug_line,698,300},
         {tuple,
          {698,20},
          [{atom,{698,20},t_fun},
           {var,{698,33},'Arity'},
           {atom,{698,20},any},
           {atom,{698,20},any}]}]},
       {clause,
        {699,16},
        [{tuple,{699,16},[{atom,{699,16},t_integer},{var,{699,16},'_'}]}],
        [],
        [{debug_line,700,301},
         {tuple,
          {700,20},
          [{atom,{700,20},t_fun},
           {atom,{700,20},any},
           {atom,{700,20},any},
           {atom,{700,20},any}]}]},
       {clause,
        {701,16},
        [{var,{701,16},'_'}],
        [],
        [{debug_line,702,302},{atom,{702,20},none}]}]}},
    {debug_line,704,303},
    {call,
     {704,5},
     {atom,{704,5},sub_unsafe},
     [{var,{704,16},'Type'},
      {block,0,
       [{cons,
         {704,22},
         {tuple,{704,23},[{atom,{704,23},t_atom},{atom,{704,23},any}]},
         {cons,
          {704,34},
          {tuple,{704,34},[{atom,{704,34},t_atom},{atom,{704,34},any}]},
          {cons,
           {704,45},
           {tuple,{704,45},[{atom,{704,45},t_integer},{atom,{704,45},any}]},
           {nil,{704,57}}}}}]}]}]},
  {clause,
   {706,1},
   [{atom,{706,7},erlang},
    {atom,{706,15},min},
    {cons,
     {706,20},
     {var,{706,21},'LHS'},
     {cons,{706,25},{var,{706,25},'RHS'},{nil,{706,28}}}}],
   [],
   [{debug_line,707,304},
    {match,
     {707,5},
     {var,{707,5},'R1'},
     {'case',
      {707,10},
      {call,
       {707,15},
       {atom,{707,15},get_range},
       [{block,0,
         [{call,
           {707,25},
           {atom,{707,25},meet},
           [{var,{707,30},'LHS'},
            {block,0,
             [{tuple,
               {707,35},
               [{atom,{707,35},t_number},{atom,{707,35},any}]}]}]}]}]},
      [{clause,
        {708,14},
        [{atom,{708,14},none}],
        [],
        [{debug_line,708,305},{atom,{708,22},any}]},
       {clause,
        {709,14},
        [{var,{709,14},'R10'}],
        [],
        [{debug_line,709,306},{var,{709,21},'R10'}]}]}},
    {debug_line,711,307},
    {match,
     {711,5},
     {var,{711,5},'R2'},
     {'case',
      {711,10},
      {call,
       {711,15},
       {atom,{711,15},get_range},
       [{block,0,
         [{call,
           {711,25},
           {atom,{711,25},meet},
           [{var,{711,30},'RHS'},
            {block,0,
             [{tuple,
               {711,35},
               [{atom,{711,35},t_number},{atom,{711,35},any}]}]}]}]}]},
      [{clause,
        {712,14},
        [{atom,{712,14},none}],
        [],
        [{debug_line,712,308},{atom,{712,22},any}]},
       {clause,
        {713,14},
        [{var,{713,14},'R20'}],
        [],
        [{debug_line,713,309},{var,{713,21},'R20'}]}]}},
    {debug_line,715,310},
    {match,
     {715,5},
     {var,{715,5},'R'},
     {call,
      {715,9},
      {remote,{715,20},{atom,{715,9},beam_bounds},{atom,{715,21},bounds}},
      [{atom,{715,28},min},{var,{715,33},'R1'},{var,{715,37},'R2'}]}},
    {debug_line,716,311},
    {match,
     {716,5},
     {var,{716,5},'RetType'},
     {'case',
      {716,15},
      {tuple,{716,20},[{var,{716,21},'LHS'},{var,{716,26},'RHS'}]},
      [{clause,
        {717,19},
        [{tuple,
          {717,19},
          [{tuple,{717,20},[{atom,{717,20},t_integer},{var,{717,20},'_'}]},
           {tuple,{717,34},[{atom,{717,34},t_integer},{var,{717,34},'_'}]}]}],
        [],
        [{debug_line,718,312},
         {tuple,{718,23},[{atom,{718,23},t_integer},{var,{718,43},'R'}]}]},
       {clause,
        {719,19},
        [{tuple,
          {719,19},
          [{tuple,{719,20},[{atom,{719,20},t_integer},{var,{719,20},'_'}]},
           {var,{719,34},'_'}]}],
        [],
        [{debug_line,720,313},
         {tuple,{720,23},[{atom,{720,23},t_number},{var,{720,42},'R'}]}]},
       {clause,
        {721,19},
        [{tuple,
          {721,19},
          [{tuple,{721,20},[{atom,{721,20},t_number},{var,{721,20},'_'}]},
           {var,{721,33},'_'}]}],
        [],
        [{debug_line,722,314},
         {tuple,{722,23},[{atom,{722,23},t_number},{var,{722,42},'R'}]}]},
       {clause,
        {723,19},
        [{tuple,
          {723,19},
          [{tuple,{723,20},[{atom,{723,20},t_float},{var,{723,20},'_'}]},
           {var,{723,32},'_'}]}],
        [],
        [{debug_line,724,315},
         {tuple,{724,23},[{atom,{724,23},t_number},{var,{724,42},'R'}]}]},
       {clause,
        {725,19},
        [{tuple,
          {725,19},
          [{var,{725,20},'_'},
           {tuple,{725,23},[{atom,{725,23},t_integer},{var,{725,23},'_'}]}]}],
        [],
        [{debug_line,726,316},
         {tuple,{726,23},[{atom,{726,23},t_number},{var,{726,42},'R'}]}]},
       {clause,
        {727,19},
        [{tuple,
          {727,19},
          [{var,{727,20},'_'},
           {tuple,{727,23},[{atom,{727,23},t_number},{var,{727,23},'_'}]}]}],
        [],
        [{debug_line,728,317},
         {tuple,{728,23},[{atom,{728,23},t_number},{var,{728,42},'R'}]}]},
       {clause,
        {729,19},
        [{tuple,
          {729,19},
          [{var,{729,20},'_'},
           {tuple,{729,23},[{atom,{729,23},t_float},{var,{729,23},'_'}]}]}],
        [],
        [{debug_line,730,318},
         {tuple,{730,23},[{atom,{730,23},t_number},{var,{730,42},'R'}]}]},
       {clause,
        {731,19},
        [{tuple,{731,19},[{var,{731,20},'_'},{var,{731,23},'_'}]}],
        [],
        [{debug_line,732,319},
         {call,
          {732,23},
          {atom,{732,23},join},
          [{var,{732,28},'LHS'},{var,{732,33},'RHS'}]}]}]}},
    {debug_line,734,320},
    {call,
     {734,5},
     {atom,{734,5},sub_unsafe},
     [{var,{734,16},'RetType'},
      {block,0,
       [{cons,
         {734,25},
         {atom,{734,26},any},
         {cons,{734,31},{atom,{734,31},any},{nil,{734,34}}}}]}]}]},
  {clause,
   {736,1},
   [{atom,{736,7},erlang},
    {atom,{736,15},max},
    {cons,
     {736,20},
     {var,{736,21},'LHS'},
     {cons,{736,25},{var,{736,25},'RHS'},{nil,{736,28}}}}],
   [],
   [{debug_line,737,321},
    {match,
     {737,5},
     {var,{737,5},'RetType'},
     {'case',
      {738,9},
      {call,
       {738,14},
       {atom,{738,14},get_range},
       [{var,{738,24},'LHS'},
        {var,{738,29},'RHS'},
        {block,0,
         [{debug_line,738,322},
          {tuple,{738,34},[{atom,{738,34},t_number},{atom,{738,34},any}]}]}]},
      [{clause,
        {739,13},
        [{tuple,
          {739,13},
          [{var,{739,14},'_'},{atom,{739,17},none},{var,{739,23},'_'}]}],
        [],
        [{debug_line,740,323},
         {call,
          {740,17},
          {atom,{740,17},join},
          [{var,{740,22},'LHS'},{var,{740,27},'RHS'}]}]},
       {clause,
        {741,13},
        [{tuple,
          {741,13},
          [{var,{741,14},'_'},{var,{741,17},'_'},{atom,{741,20},none}]}],
        [],
        [{debug_line,742,324},
         {call,
          {742,17},
          {atom,{742,17},join},
          [{var,{742,22},'LHS'},{var,{742,27},'RHS'}]}]},
       {clause,
        {743,13},
        [{tuple,
          {743,13},
          [{var,{743,14},'_'},{var,{743,17},'R1'},{var,{743,21},'R2'}]}],
        [],
        [{debug_line,744,325},
         {match,
          {744,17},
          {var,{744,17},'R'},
          {call,
           {744,21},
           {remote,
            {744,32},
            {atom,{744,21},beam_bounds},
            {atom,{744,33},bounds}},
           [{atom,{744,40},max},{var,{744,45},'R1'},{var,{744,49},'R2'}]}},
         {debug_line,745,326},
         {'case',
          {745,17},
          {tuple,{745,22},[{var,{745,23},'LHS'},{var,{745,28},'RHS'}]},
          [{clause,
            {746,21},
            [{tuple,
              {746,21},
              [{tuple,{746,22},[{atom,{746,22},t_integer},{var,{746,22},'_'}]},
               {tuple,
                {746,36},
                [{atom,{746,36},t_integer},{var,{746,36},'_'}]}]}],
            [],
            [{debug_line,747,327},
             {tuple,{747,25},[{atom,{747,25},t_integer},{var,{747,45},'R'}]}]},
           {clause,
            {748,21},
            [{tuple,
              {748,21},
              [{atom,{748,22},any},
               {tuple,
                {748,27},
                [{atom,{748,27},t_integer},
                 {tuple,
                  {748,47},
                  [{var,{748,48},'Min'},{var,{748,52},'_'}]}]}]}],
            [[{call,
               {748,62},
               {remote,
                {748,62},
                {atom,{748,62},erlang},
                {atom,{748,62},is_integer}},
               [{var,{748,73},'Min'}]}]],
            [{debug_line,749,328},
             {call,
              {749,25},
              {remote,
               {749,35},
               {atom,{749,25},beam_types},
               {atom,{749,36},subtract}},
              [{atom,{749,45},any},
               {block,0,
                [{tuple,
                  {749,50},
                  [{atom,{749,50},t_number},
                   {tuple,
                    {749,69},
                    [{atom,{749,70},'-inf'},{var,{749,77},'Min'}]}]}]}]}]},
           {clause,
            {750,21},
            [{tuple,
              {750,21},
              [{tuple,
                {750,22},
                [{atom,{750,22},t_integer},
                 {tuple,{750,42},[{var,{750,43},'Min'},{var,{750,47},'_'}]}]},
               {atom,{750,52},any}]}],
            [[{call,
               {750,62},
               {remote,
                {750,62},
                {atom,{750,62},erlang},
                {atom,{750,62},is_integer}},
               [{var,{750,73},'Min'}]}]],
            [{debug_line,751,329},
             {call,
              {751,25},
              {remote,
               {751,35},
               {atom,{751,25},beam_types},
               {atom,{751,36},subtract}},
              [{atom,{751,45},any},
               {block,0,
                [{tuple,
                  {751,50},
                  [{atom,{751,50},t_number},
                   {tuple,
                    {751,69},
                    [{atom,{751,70},'-inf'},{var,{751,77},'Min'}]}]}]}]}]},
           {clause,
            {752,21},
            [{tuple,{752,21},[{var,{752,22},'_'},{var,{752,25},'_'}]}],
            [],
            [{debug_line,753,330},
             {'case',
              {753,25},
              {call,
               {753,30},
               {atom,{753,30},join},
               [{var,{753,35},'LHS'},{var,{753,40},'RHS'}]},
              [{clause,
                {754,29},
                [{tuple,
                  {754,29},
                  [{atom,{754,29},t_number},{var,{754,29},'_'}]}],
                [],
                [{debug_line,755,331},
                 {tuple,
                  {755,33},
                  [{atom,{755,33},t_number},{var,{755,52},'R'}]}]},
               {clause,
                {756,29},
                [{var,{756,29},'Join'}],
                [],
                [{debug_line,757,332},{var,{757,33},'Join'}]}]}]}]}]}]}},
    {debug_line,761,333},
    {call,
     {761,5},
     {atom,{761,5},sub_unsafe},
     [{var,{761,16},'RetType'},
      {block,0,
       [{cons,
         {761,25},
         {atom,{761,26},any},
         {cons,{761,31},{atom,{761,31},any},{nil,{761,34}}}}]}]}]},
  {clause,
   {763,1},
   [{atom,{763,7},erlang},{var,{763,15},'Name'},{var,{763,21},'Args'}],
   [],
   [{debug_line,764,334},
    {match,
     {764,5},
     {var,{764,5},'Arity'},
     {call,
      {764,13},
      {remote,{764,13},{atom,{764,13},erlang},{atom,{764,13},length}},
      [{var,{764,20},'Args'}]}},
    {debug_line,766,335},
    {'case',
     {766,5},
     {call,
      {766,10},
      {remote,{766,18},{atom,{766,10},erl_bifs},{atom,{766,19},is_exit_bif}},
      [{atom,{766,31},erlang},{var,{766,39},'Name'},{var,{766,45},'Arity'}]},
     [{clause,
       {767,9},
       [{atom,{767,9},true}],
       [],
       [{debug_line,768,336},
        {tuple,
         {768,13},
         [{atom,{768,14},none},{var,{768,20},'Args'},{atom,{768,26},false}]}]},
      {clause,
       {769,9},
       [{atom,{769,9},false}],
       [],
       [{debug_line,770,337},
        {'case',
         {770,13},
         {call,
          {770,18},
          {remote,
           {770,30},
           {atom,{770,18},erl_internal},
           {atom,{770,31},arith_op}},
          [{var,{770,40},'Name'},{var,{770,46},'Arity'}]},
         [{clause,
           {771,17},
           [{atom,{771,17},true}],
           [],
           [{debug_line,772,338},
            {call,
             {772,21},
             {atom,{772,21},mixed_arith_types},
             [{var,{772,39},'Args'}]}]},
          {clause,
           {773,17},
           [{atom,{773,17},false}],
           [],
           [{debug_line,774,339},
            {match,
             {774,21},
             {var,{774,21},'IsTest'},
             {'case',
              {775,25},
              {call,
               {775,25},
               {remote,
                {775,37},
                {atom,{775,25},erl_internal},
                {atom,{775,38},new_type_test}},
               [{var,{775,52},'Name'},{var,{775,58},'Arity'}]},
              [{clause,
                {775,25},
                [{atom,{775,25},true}],
                [],
                [{debug_line,775,340},{atom,{775,25},true}]},
               {clause,
                {775,25},
                [{atom,{775,25},false}],
                [],
                [{debug_line,776,341},
                 {call,
                  {776,25},
                  {remote,
                   {776,37},
                   {atom,{776,25},erl_internal},
                   {atom,{776,38},comp_op}},
                  [{var,{776,46},'Name'},{var,{776,52},'Arity'}]}]},
               {clause,
                [{generated,true},{location,{775,25}}],
                [{var,{775,25},cov1}],
                [],
                [{debug_line,775,342},
                 {call,
                  {775,25},
                  {remote,
                   {775,25},
                   {atom,{775,25},erlang},
                   {atom,{775,25},error}},
                  [{block,0,
                    [{tuple,
                      {775,25},
                      [{atom,{775,25},badarg},{var,{775,25},cov1}]}]}]}]}]}},
            {debug_line,778,343},
            {match,
             {778,21},
             {var,{778,21},'RetType'},
             {'case',
              {778,31},
              {var,{778,36},'IsTest'},
              [{clause,
                {779,35},
                [{atom,{779,35},true}],
                [],
                [{debug_line,779,344},
                 {call,
                  {779,43},
                  {remote,
                   {779,53},
                   {atom,{779,43},beam_types},
                   {atom,{779,54},make_boolean}},
                  []}]},
               {clause,
                {780,35},
                [{atom,{780,35},false}],
                [],
                [{debug_line,780,345},{atom,{780,44},any}]}]}},
            {debug_line,783,346},
            {call,
             {783,21},
             {atom,{783,21},sub_unsafe},
             [{var,{783,32},'RetType'},
              {block,0,
               [{call,
                 {783,41},
                 {remote,
                  {783,41},
                  {atom,{783,41},lists},
                  {atom,{783,41},duplicate}},
                 [{var,{783,51},'Arity'},{atom,{783,58},any}]}]}]}]}]}]}]}]},
  {clause,
   {791,1},
   [{atom,{791,7},math},
    {atom,{791,13},cos},
    {cons,{791,18},{var,{791,19},'_'},{nil,{791,20}}}],
   [],
   [{debug_line,792,347},
    {call,
     {792,5},
     {atom,{792,5},sub_unsafe},
     [{block,0,
       [{tuple,{792,16},[{atom,{792,16},t_float},{atom,{792,16},any}]}]},
      {block,0,
       [{cons,
         {792,28},
         {tuple,{792,29},[{atom,{792,29},t_number},{atom,{792,29},any}]},
         {nil,{792,40}}}]}]}]},
  {clause,
   {793,1},
   [{atom,{793,7},math},
    {atom,{793,13},cosh},
    {cons,{793,19},{var,{793,20},'_'},{nil,{793,21}}}],
   [],
   [{debug_line,794,348},
    {call,
     {794,5},
     {atom,{794,5},sub_unsafe},
     [{block,0,
       [{tuple,{794,16},[{atom,{794,16},t_float},{atom,{794,16},any}]}]},
      {block,0,
       [{cons,
         {794,28},
         {tuple,{794,29},[{atom,{794,29},t_number},{atom,{794,29},any}]},
         {nil,{794,40}}}]}]}]},
  {clause,
   {795,1},
   [{atom,{795,7},math},
    {atom,{795,13},sin},
    {cons,{795,18},{var,{795,19},'_'},{nil,{795,20}}}],
   [],
   [{debug_line,796,349},
    {call,
     {796,5},
     {atom,{796,5},sub_unsafe},
     [{block,0,
       [{tuple,{796,16},[{atom,{796,16},t_float},{atom,{796,16},any}]}]},
      {block,0,
       [{cons,
         {796,28},
         {tuple,{796,29},[{atom,{796,29},t_number},{atom,{796,29},any}]},
         {nil,{796,40}}}]}]}]},
  {clause,
   {797,1},
   [{atom,{797,7},math},
    {atom,{797,13},sinh},
    {cons,{797,19},{var,{797,20},'_'},{nil,{797,21}}}],
   [],
   [{debug_line,798,350},
    {call,
     {798,5},
     {atom,{798,5},sub_unsafe},
     [{block,0,
       [{tuple,{798,16},[{atom,{798,16},t_float},{atom,{798,16},any}]}]},
      {block,0,
       [{cons,
         {798,28},
         {tuple,{798,29},[{atom,{798,29},t_number},{atom,{798,29},any}]},
         {nil,{798,40}}}]}]}]},
  {clause,
   {799,1},
   [{atom,{799,7},math},
    {atom,{799,13},tan},
    {cons,{799,18},{var,{799,19},'_'},{nil,{799,20}}}],
   [],
   [{debug_line,800,351},
    {call,
     {800,5},
     {atom,{800,5},sub_unsafe},
     [{block,0,
       [{tuple,{800,16},[{atom,{800,16},t_float},{atom,{800,16},any}]}]},
      {block,0,
       [{cons,
         {800,28},
         {tuple,{800,29},[{atom,{800,29},t_number},{atom,{800,29},any}]},
         {nil,{800,40}}}]}]}]},
  {clause,
   {801,1},
   [{atom,{801,7},math},
    {atom,{801,13},tanh},
    {cons,{801,19},{var,{801,20},'_'},{nil,{801,21}}}],
   [],
   [{debug_line,802,352},
    {call,
     {802,5},
     {atom,{802,5},sub_unsafe},
     [{block,0,
       [{tuple,{802,16},[{atom,{802,16},t_float},{atom,{802,16},any}]}]},
      {block,0,
       [{cons,
         {802,28},
         {tuple,{802,29},[{atom,{802,29},t_number},{atom,{802,29},any}]},
         {nil,{802,40}}}]}]}]},
  {clause,
   {803,1},
   [{atom,{803,7},math},
    {atom,{803,13},acos},
    {cons,{803,19},{var,{803,20},'_'},{nil,{803,21}}}],
   [],
   [{debug_line,804,353},
    {call,
     {804,5},
     {atom,{804,5},sub_unsafe},
     [{block,0,
       [{tuple,{804,16},[{atom,{804,16},t_float},{atom,{804,16},any}]}]},
      {block,0,
       [{cons,
         {804,28},
         {tuple,{804,29},[{atom,{804,29},t_number},{atom,{804,29},any}]},
         {nil,{804,40}}}]}]}]},
  {clause,
   {805,1},
   [{atom,{805,7},math},
    {atom,{805,13},acosh},
    {cons,{805,20},{var,{805,21},'_'},{nil,{805,22}}}],
   [],
   [{debug_line,806,354},
    {call,
     {806,5},
     {atom,{806,5},sub_unsafe},
     [{block,0,
       [{tuple,{806,16},[{atom,{806,16},t_float},{atom,{806,16},any}]}]},
      {block,0,
       [{cons,
         {806,28},
         {tuple,{806,29},[{atom,{806,29},t_number},{atom,{806,29},any}]},
         {nil,{806,40}}}]}]}]},
  {clause,
   {807,1},
   [{atom,{807,7},math},
    {atom,{807,13},asin},
    {cons,{807,19},{var,{807,20},'_'},{nil,{807,21}}}],
   [],
   [{debug_line,808,355},
    {call,
     {808,5},
     {atom,{808,5},sub_unsafe},
     [{block,0,
       [{tuple,{808,16},[{atom,{808,16},t_float},{atom,{808,16},any}]}]},
      {block,0,
       [{cons,
         {808,28},
         {tuple,{808,29},[{atom,{808,29},t_number},{atom,{808,29},any}]},
         {nil,{808,40}}}]}]}]},
  {clause,
   {809,1},
   [{atom,{809,7},math},
    {atom,{809,13},asinh},
    {cons,{809,20},{var,{809,21},'_'},{nil,{809,22}}}],
   [],
   [{debug_line,810,356},
    {call,
     {810,5},
     {atom,{810,5},sub_unsafe},
     [{block,0,
       [{tuple,{810,16},[{atom,{810,16},t_float},{atom,{810,16},any}]}]},
      {block,0,
       [{cons,
         {810,28},
         {tuple,{810,29},[{atom,{810,29},t_number},{atom,{810,29},any}]},
         {nil,{810,40}}}]}]}]},
  {clause,
   {811,1},
   [{atom,{811,7},math},
    {atom,{811,13},atan},
    {cons,{811,19},{var,{811,20},'_'},{nil,{811,21}}}],
   [],
   [{debug_line,812,357},
    {call,
     {812,5},
     {atom,{812,5},sub_unsafe},
     [{block,0,
       [{tuple,{812,16},[{atom,{812,16},t_float},{atom,{812,16},any}]}]},
      {block,0,
       [{cons,
         {812,28},
         {tuple,{812,29},[{atom,{812,29},t_number},{atom,{812,29},any}]},
         {nil,{812,40}}}]}]}]},
  {clause,
   {813,1},
   [{atom,{813,7},math},
    {atom,{813,13},atanh},
    {cons,{813,20},{var,{813,21},'_'},{nil,{813,22}}}],
   [],
   [{debug_line,814,358},
    {call,
     {814,5},
     {atom,{814,5},sub_unsafe},
     [{block,0,
       [{tuple,{814,16},[{atom,{814,16},t_float},{atom,{814,16},any}]}]},
      {block,0,
       [{cons,
         {814,28},
         {tuple,{814,29},[{atom,{814,29},t_number},{atom,{814,29},any}]},
         {nil,{814,40}}}]}]}]},
  {clause,
   {815,1},
   [{atom,{815,7},math},
    {atom,{815,13},erf},
    {cons,{815,18},{var,{815,19},'_'},{nil,{815,20}}}],
   [],
   [{debug_line,816,359},
    {call,
     {816,5},
     {atom,{816,5},sub_unsafe},
     [{block,0,
       [{tuple,{816,16},[{atom,{816,16},t_float},{atom,{816,16},any}]}]},
      {block,0,
       [{cons,
         {816,28},
         {tuple,{816,29},[{atom,{816,29},t_number},{atom,{816,29},any}]},
         {nil,{816,40}}}]}]}]},
  {clause,
   {817,1},
   [{atom,{817,7},math},
    {atom,{817,13},erfc},
    {cons,{817,19},{var,{817,20},'_'},{nil,{817,21}}}],
   [],
   [{debug_line,818,360},
    {call,
     {818,5},
     {atom,{818,5},sub_unsafe},
     [{block,0,
       [{tuple,{818,16},[{atom,{818,16},t_float},{atom,{818,16},any}]}]},
      {block,0,
       [{cons,
         {818,28},
         {tuple,{818,29},[{atom,{818,29},t_number},{atom,{818,29},any}]},
         {nil,{818,40}}}]}]}]},
  {clause,
   {819,1},
   [{atom,{819,7},math},
    {atom,{819,13},exp},
    {cons,{819,18},{var,{819,19},'_'},{nil,{819,20}}}],
   [],
   [{debug_line,820,361},
    {call,
     {820,5},
     {atom,{820,5},sub_unsafe},
     [{block,0,
       [{tuple,{820,16},[{atom,{820,16},t_float},{atom,{820,16},any}]}]},
      {block,0,
       [{cons,
         {820,28},
         {tuple,{820,29},[{atom,{820,29},t_number},{atom,{820,29},any}]},
         {nil,{820,40}}}]}]}]},
  {clause,
   {821,1},
   [{atom,{821,7},math},
    {atom,{821,13},log},
    {cons,{821,18},{var,{821,19},'_'},{nil,{821,20}}}],
   [],
   [{debug_line,822,362},
    {call,
     {822,5},
     {atom,{822,5},sub_unsafe},
     [{block,0,
       [{tuple,{822,16},[{atom,{822,16},t_float},{atom,{822,16},any}]}]},
      {block,0,
       [{cons,
         {822,28},
         {tuple,{822,29},[{atom,{822,29},t_number},{atom,{822,29},any}]},
         {nil,{822,40}}}]}]}]},
  {clause,
   {823,1},
   [{atom,{823,7},math},
    {atom,{823,13},log2},
    {cons,{823,19},{var,{823,20},'_'},{nil,{823,21}}}],
   [],
   [{debug_line,824,363},
    {call,
     {824,5},
     {atom,{824,5},sub_unsafe},
     [{block,0,
       [{tuple,{824,16},[{atom,{824,16},t_float},{atom,{824,16},any}]}]},
      {block,0,
       [{cons,
         {824,28},
         {tuple,{824,29},[{atom,{824,29},t_number},{atom,{824,29},any}]},
         {nil,{824,40}}}]}]}]},
  {clause,
   {825,1},
   [{atom,{825,7},math},
    {atom,{825,13},log10},
    {cons,{825,20},{var,{825,21},'_'},{nil,{825,22}}}],
   [],
   [{debug_line,826,364},
    {call,
     {826,5},
     {atom,{826,5},sub_unsafe},
     [{block,0,
       [{tuple,{826,16},[{atom,{826,16},t_float},{atom,{826,16},any}]}]},
      {block,0,
       [{cons,
         {826,28},
         {tuple,{826,29},[{atom,{826,29},t_number},{atom,{826,29},any}]},
         {nil,{826,40}}}]}]}]},
  {clause,
   {827,1},
   [{atom,{827,7},math},
    {atom,{827,13},sqrt},
    {cons,{827,19},{var,{827,20},'_'},{nil,{827,21}}}],
   [],
   [{debug_line,828,365},
    {call,
     {828,5},
     {atom,{828,5},sub_unsafe},
     [{block,0,
       [{tuple,{828,16},[{atom,{828,16},t_float},{atom,{828,16},any}]}]},
      {block,0,
       [{cons,
         {828,28},
         {tuple,{828,29},[{atom,{828,29},t_number},{atom,{828,29},any}]},
         {nil,{828,40}}}]}]}]},
  {clause,
   {829,1},
   [{atom,{829,7},math},
    {atom,{829,13},atan2},
    {cons,
     {829,20},
     {var,{829,21},'_'},
     {cons,{829,23},{var,{829,23},'_'},{nil,{829,24}}}}],
   [],
   [{debug_line,830,366},
    {call,
     {830,5},
     {atom,{830,5},sub_unsafe},
     [{block,0,
       [{tuple,{830,16},[{atom,{830,16},t_float},{atom,{830,16},any}]}]},
      {block,0,
       [{cons,
         {830,28},
         {tuple,{830,29},[{atom,{830,29},t_number},{atom,{830,29},any}]},
         {cons,
          {830,42},
          {tuple,{830,42},[{atom,{830,42},t_number},{atom,{830,42},any}]},
          {nil,{830,53}}}}]}]}]},
  {clause,
   {831,1},
   [{atom,{831,7},math},
    {atom,{831,13},pow},
    {cons,
     {831,18},
     {var,{831,19},'_'},
     {cons,{831,21},{var,{831,21},'_'},{nil,{831,22}}}}],
   [],
   [{debug_line,832,367},
    {call,
     {832,5},
     {atom,{832,5},sub_unsafe},
     [{block,0,
       [{tuple,{832,16},[{atom,{832,16},t_float},{atom,{832,16},any}]}]},
      {block,0,
       [{cons,
         {832,28},
         {tuple,{832,29},[{atom,{832,29},t_number},{atom,{832,29},any}]},
         {cons,
          {832,42},
          {tuple,{832,42},[{atom,{832,42},t_number},{atom,{832,42},any}]},
          {nil,{832,53}}}}]}]}]},
  {clause,
   {833,1},
   [{atom,{833,7},math},
    {atom,{833,13},ceil},
    {cons,{833,19},{var,{833,20},'_'},{nil,{833,21}}}],
   [],
   [{debug_line,834,368},
    {call,
     {834,5},
     {atom,{834,5},sub_unsafe},
     [{block,0,
       [{tuple,{834,16},[{atom,{834,16},t_float},{atom,{834,16},any}]}]},
      {block,0,
       [{cons,
         {834,28},
         {tuple,{834,29},[{atom,{834,29},t_number},{atom,{834,29},any}]},
         {nil,{834,40}}}]}]}]},
  {clause,
   {835,1},
   [{atom,{835,7},math},
    {atom,{835,13},floor},
    {cons,{835,20},{var,{835,21},'_'},{nil,{835,22}}}],
   [],
   [{debug_line,836,369},
    {call,
     {836,5},
     {atom,{836,5},sub_unsafe},
     [{block,0,
       [{tuple,{836,16},[{atom,{836,16},t_float},{atom,{836,16},any}]}]},
      {block,0,
       [{cons,
         {836,28},
         {tuple,{836,29},[{atom,{836,29},t_number},{atom,{836,29},any}]},
         {nil,{836,40}}}]}]}]},
  {clause,
   {837,1},
   [{atom,{837,7},math},
    {atom,{837,13},fmod},
    {cons,
     {837,19},
     {var,{837,20},'_'},
     {cons,{837,22},{var,{837,22},'_'},{nil,{837,23}}}}],
   [],
   [{debug_line,838,370},
    {call,
     {838,5},
     {atom,{838,5},sub_unsafe},
     [{block,0,
       [{tuple,{838,16},[{atom,{838,16},t_float},{atom,{838,16},any}]}]},
      {block,0,
       [{cons,
         {838,28},
         {tuple,{838,29},[{atom,{838,29},t_number},{atom,{838,29},any}]},
         {cons,
          {838,42},
          {tuple,{838,42},[{atom,{838,42},t_number},{atom,{838,42},any}]},
          {nil,{838,53}}}}]}]}]},
  {clause,
   {839,1},
   [{atom,{839,7},math},{atom,{839,13},pi},{nil,{839,17}}],
   [],
   [{debug_line,840,371},
    {call,
     {840,5},
     {atom,{840,5},sub_unsafe},
     [{block,0,
       [{tuple,{840,16},[{atom,{840,16},t_float},{atom,{840,16},any}]}]},
      {nil,{840,28}}]}]},
  {clause,
   {853,1},
   [{atom,{853,7},lists},
    {atom,{853,14},append},
    {match,
     {853,22},
     {cons,
      {853,22},
      {var,{853,23},'_'},
      {cons,{853,25},{var,{853,25},'_'},{nil,{853,26}}}},
     {var,{853,28},'Args'}}],
   [],
   [{debug_line,854,372},
    {call,
     {854,5},
     {atom,{854,5},types},
     [{atom,{854,11},erlang},{atom,{854,19},'++'},{var,{854,25},'Args'}]}]},
  {clause,
   {855,1},
   [{atom,{855,7},lists},
    {atom,{855,14},append},
    {cons,{855,22},{var,{855,23},'_'},{nil,{855,24}}}],
   [],
   [{debug_line,859,373},
    {call,
     {859,5},
     {atom,{859,5},sub_unsafe},
     [{atom,{859,16},any},
      {block,0,
       [{cons,
         {859,21},
         {call,{859,22},{atom,{859,22},proper_list},[]},
         {nil,{859,35}}}]}]}]},
  {clause,
   {860,1},
   [{atom,{860,7},lists},
    {atom,{860,14},subtract},
    {match,
     {860,24},
     {cons,
      {860,24},
      {var,{860,25},'_'},
      {cons,{860,27},{var,{860,27},'_'},{nil,{860,28}}}},
     {var,{860,30},'Args'}}],
   [],
   [{debug_line,861,374},
    {call,
     {861,5},
     {atom,{861,5},types},
     [{atom,{861,11},erlang},{atom,{861,19},'--'},{var,{861,25},'Args'}]}]},
  {clause,
   {864,1},
   [{atom,{864,7},lists},
    {atom,{864,14},all},
    {cons,
     {864,19},
     {var,{864,20},'_'},
     {cons,{864,22},{var,{864,22},'_'},{nil,{864,23}}}}],
   [],
   [{debug_line,868,375},
    {call,
     {868,5},
     {atom,{868,5},sub_unsafe},
     [{block,0,
       [{call,
         {868,16},
         {remote,
          {868,26},
          {atom,{868,16},beam_types},
          {atom,{868,27},make_boolean}},
         []}]},
      {block,0,
       [{cons,
         {868,43},
         {atom,{868,44},any},
         {cons,
          {868,49},
          {tuple,
           {868,49},
           [{atom,{868,49},t_list},{atom,{868,49},any},{atom,{868,49},any}]},
          {nil,{868,58}}}}]}]}]},
  {clause,
   {869,1},
   [{atom,{869,7},lists},
    {atom,{869,14},any},
    {cons,
     {869,19},
     {var,{869,20},'_'},
     {cons,{869,22},{var,{869,22},'_'},{nil,{869,23}}}}],
   [],
   [{debug_line,872,376},
    {call,
     {872,5},
     {atom,{872,5},sub_unsafe},
     [{block,0,
       [{call,
         {872,16},
         {remote,
          {872,26},
          {atom,{872,16},beam_types},
          {atom,{872,27},make_boolean}},
         []}]},
      {block,0,
       [{cons,
         {872,43},
         {atom,{872,44},any},
         {cons,
          {872,49},
          {tuple,
           {872,49},
           [{atom,{872,49},t_list},{atom,{872,49},any},{atom,{872,49},any}]},
          {nil,{872,58}}}}]}]}]},
  {clause,
   {873,1},
   [{atom,{873,7},lists},
    {atom,{873,14},keymember},
    {cons,
     {873,25},
     {var,{873,26},'_'},
     {cons,
      {873,28},
      {var,{873,28},'_'},
      {cons,{873,30},{var,{873,30},'_'},{nil,{873,31}}}}}],
   [],
   [{debug_line,875,377},
    {call,
     {875,5},
     {atom,{875,5},sub_unsafe},
     [{block,0,
       [{call,
         {875,16},
         {remote,
          {875,26},
          {atom,{875,16},beam_types},
          {atom,{875,27},make_boolean}},
         []}]},
      {block,0,
       [{cons,
         {875,43},
         {atom,{875,44},any},
         {cons,
          {875,49},
          {tuple,{875,49},[{atom,{875,49},t_integer},{atom,{875,49},any}]},
          {cons,
           {875,63},
           {tuple,
            {875,63},
            [{atom,{875,63},t_list},{atom,{875,63},any},{atom,{875,63},any}]},
           {nil,{875,72}}}}}]}]}]},
  {clause,
   {876,1},
   [{atom,{876,7},lists},
    {atom,{876,14},member},
    {cons,
     {876,22},
     {var,{876,23},'_'},
     {cons,{876,25},{var,{876,25},'_'},{nil,{876,26}}}}],
   [],
   [{debug_line,878,378},
    {call,
     {878,5},
     {atom,{878,5},sub_unsafe},
     [{block,0,
       [{call,
         {878,16},
         {remote,
          {878,26},
          {atom,{878,16},beam_types},
          {atom,{878,27},make_boolean}},
         []}]},
      {block,0,
       [{cons,
         {878,43},
         {atom,{878,44},any},
         {cons,
          {878,49},
          {tuple,
           {878,49},
           [{atom,{878,49},t_list},{atom,{878,49},any},{atom,{878,49},any}]},
          {nil,{878,58}}}}]}]}]},
  {clause,
   {879,1},
   [{atom,{879,7},lists},
    {atom,{879,14},prefix},
    {cons,
     {879,22},
     {var,{879,23},'_'},
     {cons,{879,25},{var,{879,25},'_'},{nil,{879,26}}}}],
   [],
   [{debug_line,882,379},
    {call,
     {882,5},
     {atom,{882,5},sub_unsafe},
     [{block,0,
       [{call,
         {882,16},
         {remote,
          {882,26},
          {atom,{882,16},beam_types},
          {atom,{882,27},make_boolean}},
         []}]},
      {block,0,
       [{cons,
         {882,43},
         {tuple,
          {882,44},
          [{atom,{882,44},t_list},{atom,{882,44},any},{atom,{882,44},any}]},
         {cons,
          {882,55},
          {tuple,
           {882,55},
           [{atom,{882,55},t_list},{atom,{882,55},any},{atom,{882,55},any}]},
          {nil,{882,64}}}}]}]}]},
  {clause,
   {883,1},
   [{atom,{883,7},lists},
    {atom,{883,14},suffix},
    {cons,
     {883,22},
     {var,{883,23},'_'},
     {cons,{883,25},{var,{883,25},'_'},{nil,{883,26}}}}],
   [],
   [{debug_line,886,380},
    {call,
     {886,5},
     {atom,{886,5},sub_unsafe},
     [{block,0,
       [{call,
         {886,16},
         {remote,
          {886,26},
          {atom,{886,16},beam_types},
          {atom,{886,27},make_boolean}},
         []}]},
      {block,0,
       [{cons,
         {886,43},
         {tuple,
          {886,44},
          [{atom,{886,44},t_list},{atom,{886,44},any},{atom,{886,44},any}]},
         {cons,
          {886,55},
          {tuple,
           {886,55},
           [{atom,{886,55},t_list},{atom,{886,55},any},{atom,{886,55},any}]},
          {nil,{886,64}}}}]}]}]},
  {clause,
   {889,1},
   [{atom,{889,7},lists},
    {atom,{889,14},foldl},
    {cons,
     {889,21},
     {var,{889,22},'Fun'},
     {cons,
      {889,27},
      {var,{889,27},'Init'},
      {cons,{889,33},{var,{889,33},'List'},{nil,{889,37}}}}}],
   [],
   [{debug_line,890,381},
    {match,
     {890,5},
     {var,{890,5},'RetType'},
     {call,
      {890,15},
      {atom,{890,15},lists_fold_type},
      [{var,{890,31},'Fun'},{var,{890,36},'Init'},{var,{890,42},'List'}]}},
    {debug_line,891,382},
    {call,
     {891,5},
     {atom,{891,5},sub_unsafe},
     [{var,{891,16},'RetType'},
      {block,0,
       [{cons,
         {891,25},
         {atom,{891,26},any},
         {cons,
          {891,31},
          {atom,{891,31},any},
          {cons,
           {891,36},
           {call,{891,36},{atom,{891,36},proper_list},[]},
           {nil,{891,49}}}}}]}]}]},
  {clause,
   {892,1},
   [{atom,{892,7},lists},
    {atom,{892,14},foldr},
    {cons,
     {892,21},
     {var,{892,22},'Fun'},
     {cons,
      {892,27},
      {var,{892,27},'Init'},
      {cons,{892,33},{var,{892,33},'List'},{nil,{892,37}}}}}],
   [],
   [{debug_line,893,383},
    {match,
     {893,5},
     {var,{893,5},'RetType'},
     {call,
      {893,15},
      {atom,{893,15},lists_fold_type},
      [{var,{893,31},'Fun'},{var,{893,36},'Init'},{var,{893,42},'List'}]}},
    {debug_line,894,384},
    {call,
     {894,5},
     {atom,{894,5},sub_unsafe},
     [{var,{894,16},'RetType'},
      {block,0,
       [{cons,
         {894,25},
         {atom,{894,26},any},
         {cons,
          {894,31},
          {atom,{894,31},any},
          {cons,
           {894,36},
           {call,{894,36},{atom,{894,36},proper_list},[]},
           {nil,{894,49}}}}}]}]}]},
  {clause,
   {897,1},
   [{atom,{897,7},lists},
    {atom,{897,14},droplast},
    {cons,{897,24},{var,{897,25},'List'},{nil,{897,29}}}],
   [],
   [{debug_line,898,385},
    {match,
     {898,5},
     {var,{898,5},'RetType'},
     {call,
      {898,15},
      {atom,{898,15},copy_list},
      [{var,{898,25},'List'},
       {atom,{898,31},new_length},
       {atom,{898,43},proper}]}},
    {debug_line,899,386},
    {call,
     {899,5},
     {atom,{899,5},sub_unsafe},
     [{var,{899,16},'RetType'},
      {block,0,
       [{cons,
         {899,25},
         {call,{899,26},{atom,{899,26},proper_list},[]},
         {nil,{899,39}}}]}]}]},
  {clause,
   {900,1},
   [{atom,{900,7},lists},
    {atom,{900,14},dropwhile},
    {cons,
     {900,25},
     {var,{900,26},'_Fun'},
     {cons,{900,32},{var,{900,32},'List'},{nil,{900,36}}}}],
   [],
   [{debug_line,903,387},
    {match,
     {903,5},
     {var,{903,5},'RetType'},
     {call,
      {903,15},
      {atom,{903,15},copy_list},
      [{var,{903,25},'List'},
       {atom,{903,31},new_length},
       {atom,{903,43},maybe_improper}]}},
    {debug_line,904,388},
    {call,
     {904,5},
     {atom,{904,5},sub_unsafe},
     [{var,{904,16},'RetType'},
      {block,0,
       [{cons,
         {904,25},
         {atom,{904,26},any},
         {cons,
          {904,31},
          {tuple,
           {904,31},
           [{atom,{904,31},t_list},{atom,{904,31},any},{atom,{904,31},any}]},
          {nil,{904,40}}}}]}]}]},
  {clause,
   {905,1},
   [{atom,{905,7},lists},
    {atom,{905,14},duplicate},
    {cons,
     {905,25},
     {var,{905,26},'_Count'},
     {cons,{905,34},{var,{905,34},'Element'},{nil,{905,41}}}}],
   [],
   [{debug_line,906,389},
    {call,
     {906,5},
     {atom,{906,5},sub_unsafe},
     [{block,0,
       [{call,
         {906,16},
         {atom,{906,16},proper_list},
         [{var,{906,28},'Element'}]}]},
      {block,0,
       [{cons,
         {906,38},
         {tuple,{906,39},[{atom,{906,39},t_integer},{atom,{906,39},any}]},
         {cons,{906,53},{atom,{906,53},any},{nil,{906,56}}}}]}]}]},
  {clause,
   {907,1},
   [{atom,{907,7},lists},
    {atom,{907,14},filter},
    {cons,
     {907,22},
     {var,{907,23},'_Fun'},
     {cons,{907,29},{var,{907,29},'List'},{nil,{907,33}}}}],
   [],
   [{debug_line,908,390},
    {match,
     {908,5},
     {var,{908,5},'RetType'},
     {call,
      {908,15},
      {atom,{908,15},copy_list},
      [{var,{908,25},'List'},
       {atom,{908,31},new_length},
       {atom,{908,43},proper}]}},
    {debug_line,909,391},
    {call,
     {909,5},
     {atom,{909,5},sub_unsafe},
     [{var,{909,16},'RetType'},
      {block,0,
       [{cons,
         {909,25},
         {atom,{909,26},any},
         {cons,
          {909,31},
          {call,{909,31},{atom,{909,31},proper_list},[]},
          {nil,{909,44}}}}]}]}]},
  {clause,
   {910,1},
   [{atom,{910,7},lists},
    {atom,{910,14},flatten},
    {cons,{910,23},{var,{910,24},'_'},{nil,{910,25}}}],
   [],
   [{debug_line,911,392},
    {call,
     {911,5},
     {atom,{911,5},sub_unsafe},
     [{block,0,[{call,{911,16},{atom,{911,16},proper_list},[]}]},
      {block,0,
       [{cons,
         {911,31},
         {call,{911,32},{atom,{911,32},proper_list},[]},
         {nil,{911,45}}}]}]}]},
  {clause,
   {912,1},
   [{atom,{912,7},lists},
    {atom,{912,14},map},
    {cons,
     {912,19},
     {var,{912,20},'Fun'},
     {cons,{912,25},{var,{912,25},'List'},{nil,{912,29}}}}],
   [],
   [{debug_line,913,393},
    {match,
     {913,5},
     {var,{913,5},'RetType'},
     {call,
      {913,15},
      {atom,{913,15},lists_map_type},
      [{var,{913,30},'Fun'},{var,{913,35},'List'}]}},
    {debug_line,914,394},
    {call,
     {914,5},
     {atom,{914,5},sub_unsafe},
     [{var,{914,16},'RetType'},
      {block,0,
       [{cons,
         {914,25},
         {atom,{914,26},any},
         {cons,
          {914,31},
          {call,{914,31},{atom,{914,31},proper_list},[]},
          {nil,{914,44}}}}]}]}]},
  {clause,
   {915,1},
   [{atom,{915,7},lists},
    {atom,{915,14},reverse},
    {cons,{915,23},{var,{915,24},'List'},{nil,{915,28}}}],
   [],
   [{debug_line,916,395},
    {match,
     {916,5},
     {var,{916,5},'RetType'},
     {call,
      {916,15},
      {atom,{916,15},copy_list},
      [{var,{916,25},'List'},
       {atom,{916,31},same_length},
       {atom,{916,44},proper}]}},
    {debug_line,917,396},
    {call,
     {917,5},
     {atom,{917,5},sub_unsafe},
     [{var,{917,16},'RetType'},
      {block,0,
       [{cons,
         {917,25},
         {call,{917,26},{atom,{917,26},proper_list},[]},
         {nil,{917,39}}}]}]}]},
  {clause,
   {918,1},
   [{atom,{918,7},lists},
    {atom,{918,14},sort},
    {cons,{918,20},{var,{918,21},'List'},{nil,{918,25}}}],
   [],
   [{debug_line,919,397},
    {match,
     {919,5},
     {var,{919,5},'RetType'},
     {call,
      {919,15},
      {atom,{919,15},copy_list},
      [{var,{919,25},'List'},
       {atom,{919,31},same_length},
       {atom,{919,44},proper}]}},
    {debug_line,920,398},
    {call,
     {920,5},
     {atom,{920,5},sub_unsafe},
     [{var,{920,16},'RetType'},
      {block,0,
       [{cons,
         {920,25},
         {call,{920,26},{atom,{920,26},proper_list},[]},
         {nil,{920,39}}}]}]}]},
  {clause,
   {921,1},
   [{atom,{921,7},lists},
    {atom,{921,14},takewhile},
    {cons,
     {921,25},
     {var,{921,26},'_Fun'},
     {cons,{921,32},{var,{921,32},'List'},{nil,{921,36}}}}],
   [],
   [{debug_line,924,399},
    {match,
     {924,5},
     {var,{924,5},'RetType'},
     {call,
      {924,15},
      {atom,{924,15},copy_list},
      [{var,{924,25},'List'},
       {atom,{924,31},new_length},
       {atom,{924,43},proper}]}},
    {debug_line,925,400},
    {call,
     {925,5},
     {atom,{925,5},sub_unsafe},
     [{var,{925,16},'RetType'},
      {block,0,
       [{cons,
         {925,25},
         {atom,{925,26},any},
         {cons,
          {925,31},
          {tuple,
           {925,31},
           [{atom,{925,31},t_list},{atom,{925,31},any},{atom,{925,31},any}]},
          {nil,{925,40}}}}]}]}]},
  {clause,
   {926,1},
   [{atom,{926,7},lists},
    {atom,{926,14},usort},
    {cons,{926,21},{var,{926,22},'List'},{nil,{926,26}}}],
   [],
   [{debug_line,929,401},
    {match,
     {929,5},
     {var,{929,5},'RetType'},
     {call,
      {929,15},
      {atom,{929,15},copy_list},
      [{var,{929,25},'List'},
       {atom,{929,31},same_length},
       {atom,{929,44},proper}]}},
    {debug_line,930,402},
    {call,
     {930,5},
     {atom,{930,5},sub_unsafe},
     [{var,{930,16},'RetType'},
      {block,0,
       [{cons,
         {930,25},
         {call,{930,26},{atom,{930,26},proper_list},[]},
         {nil,{930,39}}}]}]}]},
  {clause,
   {931,1},
   [{atom,{931,7},lists},
    {atom,{931,14},zip},
    {match,
     {931,19},
     {cons,
      {931,19},
      {var,{931,20},'_'},
      {cons,{931,22},{var,{931,22},'_'},{nil,{931,23}}}},
     {var,{931,25},'Lists'}}],
   [],
   [{debug_line,932,403},
    {match,
     {932,5},
     {tuple,{932,5},[{var,{932,6},'RetType'},{var,{932,15},'ArgType'}]},
     {call,{932,26},{atom,{932,26},lists_zip_types},[{var,{932,42},'Lists'}]}},
    {debug_line,933,404},
    {call,
     {933,5},
     {atom,{933,5},sub_unsafe},
     [{var,{933,16},'RetType'},
      {block,0,
       [{cons,
         {933,25},
         {var,{933,26},'ArgType'},
         {cons,{933,35},{var,{933,35},'ArgType'},{nil,{933,42}}}}]}]}]},
  {clause,
   {934,1},
   [{atom,{934,7},lists},
    {atom,{934,14},zipwith},
    {cons,
     {934,23},
     {var,{934,24},'Fun'},
     {match,
      {934,30},
      {cons,
       {934,30},
       {var,{934,31},'_'},
       {cons,{934,33},{var,{934,33},'_'},{nil,{934,34}}}},
      {var,{934,36},'Lists'}}}],
   [],
   [{debug_line,937,405},
    {match,
     {937,5},
     {tuple,{937,5},[{var,{937,6},'RetType'},{var,{937,15},'ArgType'}]},
     {call,
      {937,26},
      {atom,{937,26},lists_zipwith_types},
      [{var,{937,46},'Fun'},{var,{937,51},'Lists'}]}},
    {debug_line,938,406},
    {call,
     {938,5},
     {atom,{938,5},sub_unsafe},
     [{var,{938,16},'RetType'},
      {block,0,
       [{cons,
         {938,25},
         {atom,{938,26},any},
         {cons,
          {938,31},
          {var,{938,31},'ArgType'},
          {cons,{938,40},{var,{938,40},'ArgType'},{nil,{938,47}}}}}]}]}]},
  {clause,
   {941,1},
   [{atom,{941,7},lists},
    {atom,{941,14},keyfind},
    {cons,
     {941,23},
     {var,{941,24},'KeyType'},
     {cons,
      {941,32},
      {var,{941,32},'PosType'},
      {cons,{941,40},{var,{941,40},'_'},{nil,{941,41}}}}}],
   [],
   [{debug_line,943,407},
    {match,
     {943,5},
     {var,{943,5},'TupleType'},
     {'case',
      {943,17},
      {call,
       {943,22},
       {atom,{943,22},meet},
       [{var,{943,27},'PosType'},
        {block,0,
         [{tuple,{943,36},[{atom,{943,36},t_integer},{atom,{943,36},any}]}]}]},
      [{clause,
        {944,21},
        [{tuple,
          {944,21},
          [{atom,{944,21},t_integer},
           {tuple,{944,41},[{var,{944,42},'Index'},{var,{944,48},'Index'}]}]}],
        [[{call,
           {944,61},
           {remote,{944,61},{atom,{944,61},erlang},{atom,{944,61},is_integer}},
           [{var,{944,72},'Index'}]},
          {op,{945,67},'>=',{var,{945,61},'Index'},{integer,{945,70},1}}]],
        [{debug_line,946,408},
         {match,
          {946,25},
          {var,{946,25},'Es'},
          {call,
           {946,30},
           {remote,
            {946,40},
            {atom,{946,30},beam_types},
            {atom,{946,41},set_tuple_element}},
           [{var,{946,59},'Index'},
            {var,{946,66},'KeyType'},
            {block,0,[{map,{946,75},[]}]}]}},
         {debug_line,947,409},
         {tuple,
          {947,25},
          [{atom,{947,25},t_tuple},
           {var,{947,39},'Index'},
           {atom,{947,25},false},
           {var,{947,54},'Es'}]}]},
       {clause,
        {948,21},
        [{tuple,{948,21},[{atom,{948,21},t_integer},{var,{948,21},'_'}]}],
        [],
        [{debug_line,949,410},
         {tuple,
          {949,25},
          [{atom,{949,25},t_tuple},
           {integer,{949,25},0},
           {atom,{949,25},false},
           {map,{949,25},[]}]}]},
       {clause,
        {950,21},
        [{atom,{950,21},none}],
        [],
        [{debug_line,951,411},{atom,{951,25},none}]}]}},
    {debug_line,953,412},
    {match,
     {953,5},
     {var,{953,5},'RetType'},
     {call,
      {953,15},
      {atom,{953,15},join},
      [{var,{953,20},'TupleType'},
       {block,0,
        [{call,
          {953,31},
          {remote,
           {953,41},
           {atom,{953,31},beam_types},
           {atom,{953,42},make_atom}},
          [{atom,{953,52},false}]}]}]}},
    {debug_line,954,413},
    {call,
     {954,5},
     {atom,{954,5},sub_unsafe},
     [{var,{954,16},'RetType'},
      {block,0,
       [{cons,
         {954,25},
         {atom,{954,26},any},
         {cons,
          {954,31},
          {atom,{954,31},any},
          {cons,
           {954,36},
           {tuple,
            {954,36},
            [{atom,{954,36},t_list},{atom,{954,36},any},{atom,{954,36},any}]},
           {nil,{954,45}}}}}]}]}]},
  {clause,
   {955,1},
   [{atom,{955,7},lists},
    {var,{955,14},'MapFold'},
    {cons,
     {955,23},
     {var,{955,24},'Fun'},
     {cons,
      {955,29},
      {var,{955,29},'Init'},
      {cons,{955,35},{var,{955,35},'List'},{nil,{955,39}}}}}],
   [[{op,{956,16},'=:=',{var,{956,8},'MapFold'},{atom,{956,20},mapfoldl}}],
    [{op,{956,38},'=:=',{var,{956,30},'MapFold'},{atom,{956,42},mapfoldr}}]],
   [{debug_line,957,414},
    {match,
     {957,5},
     {var,{957,5},'RetType'},
     {call,
      {957,15},
      {atom,{957,15},lists_mapfold_type},
      [{var,{957,34},'Fun'},{var,{957,39},'Init'},{var,{957,45},'List'}]}},
    {debug_line,960,415},
    {call,
     {960,5},
     {atom,{960,5},sub_unsafe},
     [{var,{960,16},'RetType'},
      {block,0,
       [{cons,
         {960,25},
         {atom,{960,26},any},
         {cons,
          {960,31},
          {atom,{960,31},any},
          {cons,
           {960,36},
           {call,{960,36},{atom,{960,36},proper_list},[]},
           {nil,{960,49}}}}}]}]}]},
  {clause,
   {961,1},
   [{atom,{961,7},lists},
    {atom,{961,14},partition},
    {cons,
     {961,25},
     {var,{961,26},'_Fun'},
     {cons,{961,32},{var,{961,32},'List'},{nil,{961,36}}}}],
   [],
   [{debug_line,964,416},
    {match,
     {964,5},
     {var,{964,5},'ListType'},
     {call,
      {964,16},
      {atom,{964,16},copy_list},
      [{var,{964,26},'List'},
       {atom,{964,32},new_length},
       {atom,{964,44},proper}]}},
    {debug_line,965,417},
    {match,
     {965,5},
     {var,{965,5},'RetType'},
     {call,
      {965,15},
      {atom,{965,15},make_two_tuple},
      [{var,{965,30},'ListType'},{var,{965,40},'ListType'}]}},
    {debug_line,966,418},
    {call,
     {966,5},
     {atom,{966,5},sub_unsafe},
     [{var,{966,16},'RetType'},
      {block,0,
       [{cons,
         {966,25},
         {atom,{966,26},any},
         {cons,
          {966,31},
          {call,{966,31},{atom,{966,31},proper_list},[]},
          {nil,{966,44}}}}]}]}]},
  {clause,
   {967,1},
   [{atom,{967,7},lists},
    {atom,{967,14},search},
    {cons,
     {967,22},
     {var,{967,23},'_'},
     {cons,{967,25},{var,{967,25},'_'},{nil,{967,26}}}}],
   [],
   [{debug_line,970,419},
    {match,
     {970,5},
     {var,{970,5},'TupleType'},
     {call,
      {970,17},
      {atom,{970,17},make_two_tuple},
      [{block,0,
        [{call,
          {970,32},
          {remote,
           {970,42},
           {atom,{970,32},beam_types},
           {atom,{970,43},make_atom}},
          [{atom,{970,53},value}]}]},
       {atom,{970,61},any}]}},
    {debug_line,971,420},
    {match,
     {971,5},
     {var,{971,5},'RetType'},
     {call,
      {971,15},
      {atom,{971,15},join},
      [{var,{971,20},'TupleType'},
       {block,0,
        [{call,
          {971,31},
          {remote,
           {971,41},
           {atom,{971,31},beam_types},
           {atom,{971,42},make_atom}},
          [{atom,{971,52},false}]}]}]}},
    {debug_line,972,421},
    {call,
     {972,5},
     {atom,{972,5},sub_unsafe},
     [{var,{972,16},'RetType'},
      {block,0,
       [{cons,
         {972,25},
         {atom,{972,26},any},
         {cons,
          {972,31},
          {tuple,
           {972,31},
           [{atom,{972,31},t_list},{atom,{972,31},any},{atom,{972,31},any}]},
          {nil,{972,40}}}}]}]}]},
  {clause,
   {973,1},
   [{atom,{973,7},lists},
    {atom,{973,14},splitwith},
    {cons,
     {973,25},
     {var,{973,26},'_Fun'},
     {cons,{973,32},{var,{973,32},'List'},{nil,{973,36}}}}],
   [],
   [{debug_line,977,422},
    {match,
     {977,5},
     {var,{977,5},'Left'},
     {call,
      {977,12},
      {atom,{977,12},copy_list},
      [{var,{977,22},'List'},
       {atom,{977,28},new_length},
       {atom,{977,40},proper}]}},
    {debug_line,978,423},
    {match,
     {978,5},
     {var,{978,5},'Right'},
     {call,
      {978,13},
      {atom,{978,13},copy_list},
      [{var,{978,23},'List'},
       {atom,{978,29},new_length},
       {atom,{978,41},maybe_improper}]}},
    {debug_line,979,424},
    {call,
     {979,5},
     {atom,{979,5},sub_unsafe},
     [{block,0,
       [{call,
         {979,16},
         {atom,{979,16},make_two_tuple},
         [{var,{979,31},'Left'},{var,{979,37},'Right'}]}]},
      {block,0,
       [{cons,
         {979,45},
         {atom,{979,46},any},
         {cons,
          {979,51},
          {tuple,
           {979,51},
           [{atom,{979,51},t_list},{atom,{979,51},any},{atom,{979,51},any}]},
          {nil,{979,60}}}}]}]}]},
  {clause,
   {980,1},
   [{atom,{980,7},lists},
    {atom,{980,14},unzip},
    {cons,{980,21},{var,{980,22},'List'},{nil,{980,26}}}],
   [],
   [{debug_line,981,425},
    {match,
     {981,5},
     {var,{981,5},'RetType'},
     {call,
      {981,15},
      {atom,{981,15},lists_unzip_type},
      [{integer,{981,32},2},{var,{981,35},'List'}]}},
    {debug_line,982,426},
    {call,
     {982,5},
     {atom,{982,5},sub_unsafe},
     [{var,{982,16},'RetType'},
      {block,0,
       [{cons,
         {982,25},
         {call,{982,26},{atom,{982,26},proper_list},[]},
         {nil,{982,39}}}]}]}]},
  {clause,
   {988,1},
   [{atom,{988,7},maps},
    {atom,{988,13},filter},
    {cons,
     {988,21},
     {var,{988,22},'_Fun'},
     {cons,{988,28},{var,{988,28},'Map'},{nil,{988,31}}}}],
   [],
   [{debug_line,992,427},
    {match,
     {992,5},
     {var,{992,5},'RetType'},
     {'case',
      {992,15},
      {call,
       {992,20},
       {atom,{992,20},meet},
       [{var,{992,25},'Map'},
        {block,0,
         [{tuple,
           {992,30},
           [{atom,{992,30},t_map},
            {atom,{992,30},any},
            {atom,{992,30},any}]}]}]},
      [{clause,
        {993,19},
        [{match,
          {993,19},
          {tuple,
           {993,19},
           [{atom,{993,19},t_map},{var,{993,19},'_'},{var,{993,19},'_'}]},
          {var,{993,28},'T'}}],
        [],
        [{debug_line,993,428},{var,{993,33},'T'}]},
       {clause,
        {994,19},
        [{var,{994,19},'_'}],
        [],
        [{debug_line,994,429},{atom,{994,24},none}]}]}},
    {debug_line,996,430},
    {call,
     {996,5},
     {atom,{996,5},sub_unsafe},
     [{var,{996,16},'RetType'},
      {block,0,
       [{cons,
         {996,25},
         {atom,{996,26},any},
         {cons,
          {996,31},
          {tuple,
           {996,31},
           [{atom,{996,31},t_map},{atom,{996,31},any},{atom,{996,31},any}]},
          {nil,{996,39}}}}]}]}]},
  {clause,
   {997,1},
   [{atom,{997,7},maps},
    {atom,{997,13},find},
    {cons,
     {997,19},
     {var,{997,20},'Key'},
     {cons,{997,25},{var,{997,25},'Map'},{nil,{997,28}}}}],
   [],
   [{debug_line,998,431},
    {match,
     {998,5},
     {var,{998,5},'TupleType'},
     {'case',
      {998,17},
      {call,
       {998,22},
       {atom,{998,22},erlang_map_get_type},
       [{var,{998,42},'Key'},{var,{998,47},'Map'}]},
      [{clause,
        {999,21},
        [{atom,{999,21},none}],
        [],
        [{debug_line,1000,432},{atom,{1000,25},none}]},
       {clause,
        {1001,21},
        [{var,{1001,21},'ValueType'}],
        [],
        [{debug_line,1002,433},
         {call,
          {1002,25},
          {atom,{1002,25},make_two_tuple},
          [{block,0,
            [{call,
              {1002,40},
              {remote,
               {1002,50},
               {atom,{1002,40},beam_types},
               {atom,{1002,51},make_atom}},
              [{atom,{1002,61},ok}]}]},
           {var,{1002,66},'ValueType'}]}]}]}},
    {debug_line,1005,434},
    {match,
     {1005,5},
     {var,{1005,5},'RetType'},
     {call,
      {1005,15},
      {atom,{1005,15},join},
      [{block,0,
        [{call,
          {1005,20},
          {remote,
           {1005,30},
           {atom,{1005,20},beam_types},
           {atom,{1005,31},make_atom}},
          [{atom,{1005,41},error}]}]},
       {var,{1005,49},'TupleType'}]}},
    {debug_line,1006,435},
    {call,
     {1006,5},
     {atom,{1006,5},sub_unsafe},
     [{var,{1006,16},'RetType'},
      {block,0,
       [{cons,
         {1006,25},
         {atom,{1006,26},any},
         {cons,
          {1006,31},
          {tuple,
           {1006,31},
           [{atom,{1006,31},t_map},{atom,{1006,31},any},{atom,{1006,31},any}]},
          {nil,{1006,39}}}}]}]}]},
  {clause,
   {1007,1},
   [{atom,{1007,7},maps},
    {atom,{1007,13},fold},
    {cons,
     {1007,19},
     {var,{1007,20},'Fun'},
     {cons,
      {1007,25},
      {var,{1007,25},'Init'},
      {cons,{1007,31},{var,{1007,31},'_Map'},{nil,{1007,35}}}}}],
   [],
   [{debug_line,1008,436},
    {match,
     {1008,5},
     {var,{1008,5},'RetType'},
     {'case',
      {1008,15},
      {call,
       {1008,20},
       {atom,{1008,20},meet},
       [{var,{1008,25},'Fun'},
        {block,0,
         [{tuple,
           {1008,30},
           [{atom,{1008,30},t_fun},
            {integer,{1008,43},3},
            {atom,{1008,30},any},
            {atom,{1008,30},any}]}]}]},
      [{clause,
        {1009,19},
        [{tuple,
          {1009,19},
          [{atom,{1009,19},t_fun},
           {var,{1009,19},'_'},
           {var,{1009,19},'_'},
           {var,{1009,31},'Type'}]}],
        [],
        [{debug_line,1012,437},
         {call,
          {1012,23},
          {atom,{1012,23},join},
          [{var,{1012,28},'Type'},{var,{1012,34},'Init'}]}]},
       {clause,
        {1013,19},
        [{var,{1013,19},'_'}],
        [],
        [{debug_line,1016,438},{var,{1016,23},'Init'}]}]}},
    {debug_line,1018,439},
    {call,
     {1018,5},
     {atom,{1018,5},sub_unsafe},
     [{var,{1018,16},'RetType'},
      {block,0,
       [{cons,
         {1018,25},
         {atom,{1018,26},any},
         {cons,
          {1018,31},
          {atom,{1018,31},any},
          {cons,
           {1018,36},
           {tuple,
            {1018,36},
            [{atom,{1018,36},t_map},
             {atom,{1018,36},any},
             {atom,{1018,36},any}]},
           {nil,{1018,44}}}}}]}]}]},
  {clause,
   {1019,1},
   [{atom,{1019,7},maps},
    {atom,{1019,13},from_keys},
    {cons,
     {1019,24},
     {var,{1019,25},'Keys'},
     {cons,{1019,31},{var,{1019,31},'Value'},{nil,{1019,36}}}}],
   [],
   [{debug_line,1020,440},
    {match,
     {1020,5},
     {var,{1020,5},'KeyType'},
     {call,
      {1020,15},
      {atom,{1020,15},erlang_hd_type},
      [{var,{1020,30},'Keys'}]}},
    {debug_line,1021,441},
    {match,
     {1021,5},
     {var,{1021,5},'ValueType'},
     {'case',
      {1021,17},
      {var,{1021,22},'KeyType'},
      [{clause,
        {1022,21},
        [{atom,{1022,21},none}],
        [],
        [{debug_line,1022,442},{atom,{1022,29},none}]},
       {clause,
        {1023,21},
        [{var,{1023,21},'_'}],
        [],
        [{debug_line,1023,443},{var,{1023,26},'Value'}]}]}},
    {debug_line,1025,444},
    {match,
     {1025,5},
     {var,{1025,5},'RetType'},
     {tuple,
      {1025,15},
      [{atom,{1025,15},t_map},
       {var,{1025,32},'KeyType'},
       {var,{1025,52},'ValueType'}]}},
    {debug_line,1026,445},
    {call,
     {1026,5},
     {atom,{1026,5},sub_unsafe},
     [{var,{1026,16},'RetType'},
      {block,0,
       [{cons,
         {1026,25},
         {call,{1026,26},{atom,{1026,26},proper_list},[]},
         {cons,{1026,41},{atom,{1026,41},any},{nil,{1026,44}}}}]}]}]},
  {clause,
   {1027,1},
   [{atom,{1027,7},maps},
    {atom,{1027,13},from_list},
    {cons,{1027,24},{var,{1027,25},'Pairs'},{nil,{1027,30}}}],
   [],
   [{debug_line,1028,446},
    {match,
     {1028,5},
     {var,{1028,5},'PairType'},
     {call,
      {1028,16},
      {atom,{1028,16},erlang_hd_type},
      [{var,{1028,31},'Pairs'}]}},
    {debug_line,1029,447},
    {match,
     {1029,5},
     {var,{1029,5},'RetType'},
     {'case',
      {1029,15},
      {call,
       {1029,20},
       {atom,{1029,20},normalize},
       [{block,0,
         [{call,
           {1029,30},
           {atom,{1029,30},meet},
           [{var,{1029,35},'PairType'},
            {block,0,
             [{tuple,
               {1029,45},
               [{atom,{1029,45},t_tuple},
                {integer,{1029,70},2},
                {atom,{1029,60},true},
                {map,{1029,45},[]}]}]}]}]}]},
      [{clause,
        {1030,19},
        [{tuple,
          {1030,19},
          [{atom,{1030,19},t_tuple},
           {var,{1030,19},'_'},
           {var,{1030,19},'_'},
           {var,{1030,37},'Es'}]}],
        [],
        [{debug_line,1031,448},
         {match,
          {1031,23},
          {var,{1031,23},'SKey'},
          {call,
           {1031,30},
           {remote,
            {1031,40},
            {atom,{1031,30},beam_types},
            {atom,{1031,41},get_tuple_element}},
           [{integer,{1031,59},1},{var,{1031,62},'Es'}]}},
         {debug_line,1032,449},
         {match,
          {1032,23},
          {var,{1032,23},'SValue'},
          {call,
           {1032,32},
           {remote,
            {1032,42},
            {atom,{1032,32},beam_types},
            {atom,{1032,43},get_tuple_element}},
           [{integer,{1032,61},2},{var,{1032,64},'Es'}]}},
         {debug_line,1033,450},
         {tuple,
          {1033,23},
          [{atom,{1033,23},t_map},
           {var,{1033,40},'SKey'},
           {var,{1033,57},'SValue'}]}]},
       {clause,
        {1034,19},
        [{atom,{1034,19},none}],
        [[{op,
           {1034,38},
           '=:=',
           {var,{1034,29},'PairType'},
           {atom,{1034,42},none}}]],
        [{debug_line,1035,451},
         {tuple,
          {1035,23},
          [{atom,{1035,23},t_map},
           {atom,{1035,40},none},
           {atom,{1035,57},none}]}]},
       {clause,
        {1036,19},
        [{atom,{1036,19},none}],
        [[{op,
           {1036,38},
           '=/=',
           {var,{1036,29},'PairType'},
           {atom,{1036,42},none}}]],
        [{debug_line,1037,452},{atom,{1037,23},none}]}]}},
    {debug_line,1039,453},
    {call,
     {1039,5},
     {atom,{1039,5},sub_unsafe},
     [{var,{1039,16},'RetType'},
      {block,0,
       [{cons,
         {1039,25},
         {call,{1039,26},{atom,{1039,26},proper_list},[]},
         {nil,{1039,39}}}]}]}]},
  {clause,
   {1040,1},
   [{atom,{1040,7},maps},
    {atom,{1040,13},get},
    {match,
     {1040,18},
     {cons,
      {1040,18},
      {var,{1040,19},'_Key'},
      {cons,{1040,25},{var,{1040,25},'_Map'},{nil,{1040,29}}}},
     {var,{1040,31},'Args'}}],
   [],
   [{debug_line,1041,454},
    {call,
     {1041,5},
     {atom,{1041,5},types},
     [{atom,{1041,11},erlang},
      {atom,{1041,19},map_get},
      {var,{1041,28},'Args'}]}]},
  {clause,
   {1042,1},
   [{atom,{1042,7},maps},
    {atom,{1042,13},get},
    {cons,
     {1042,18},
     {var,{1042,19},'Key'},
     {cons,
      {1042,24},
      {var,{1042,24},'Map'},
      {cons,{1042,29},{var,{1042,29},'Default'},{nil,{1042,36}}}}}],
   [],
   [{debug_line,1043,455},
    {match,
     {1043,5},
     {var,{1043,5},'RetType'},
     {'case',
      {1043,15},
      {call,
       {1043,20},
       {atom,{1043,20},erlang_map_get_type},
       [{var,{1043,40},'Key'},{var,{1043,45},'Map'}]},
      [{clause,
        {1044,19},
        [{atom,{1044,19},none}],
        [],
        [{debug_line,1044,456},{var,{1044,27},'Default'}]},
       {clause,
        {1045,19},
        [{var,{1045,19},'ValueType'}],
        [],
        [{debug_line,1045,457},
         {call,
          {1045,32},
          {atom,{1045,32},join},
          [{var,{1045,37},'ValueType'},{var,{1045,48},'Default'}]}]}]}},
    {debug_line,1047,458},
    {call,
     {1047,5},
     {atom,{1047,5},sub_unsafe},
     [{var,{1047,16},'RetType'},
      {block,0,
       [{cons,
         {1047,25},
         {atom,{1047,26},any},
         {cons,
          {1047,31},
          {tuple,
           {1047,31},
           [{atom,{1047,31},t_map},{atom,{1047,31},any},{atom,{1047,31},any}]},
          {cons,{1047,41},{atom,{1047,41},any},{nil,{1047,44}}}}}]}]}]},
  {clause,
   {1048,1},
   [{atom,{1048,7},maps},
    {atom,{1048,13},keys},
    {cons,{1048,19},{var,{1048,20},'Map'},{nil,{1048,23}}}],
   [],
   [{debug_line,1049,459},
    {match,
     {1049,5},
     {var,{1049,5},'RetType'},
     {'case',
      {1049,15},
      {call,
       {1049,20},
       {atom,{1049,20},meet},
       [{var,{1049,25},'Map'},
        {block,0,
         [{tuple,
           {1049,30},
           [{atom,{1049,30},t_map},
            {atom,{1049,30},any},
            {atom,{1049,30},any}]}]}]},
      [{clause,
        {1050,19},
        [{tuple,
          {1050,19},
          [{atom,{1050,19},t_map},{atom,{1050,36},none},{var,{1050,19},'_'}]}],
        [],
        [{debug_line,1050,460},{atom,{1050,45},nil}]},
       {clause,
        {1051,19},
        [{tuple,
          {1051,19},
          [{atom,{1051,19},t_map},
           {var,{1051,36},'SKey'},
           {var,{1051,19},'_'}]}],
        [],
        [{debug_line,1051,461},
         {call,
          {1051,45},
          {atom,{1051,45},proper_list},
          [{var,{1051,57},'SKey'}]}]},
       {clause,
        {1052,19},
        [{var,{1052,19},'_'}],
        [],
        [{debug_line,1052,462},{atom,{1052,24},none}]}]}},
    {debug_line,1054,463},
    {call,
     {1054,5},
     {atom,{1054,5},sub_unsafe},
     [{var,{1054,16},'RetType'},
      {block,0,
       [{cons,
         {1054,25},
         {tuple,
          {1054,26},
          [{atom,{1054,26},t_map},{atom,{1054,26},any},{atom,{1054,26},any}]},
         {nil,{1054,34}}}]}]}]},
  {clause,
   {1055,1},
   [{atom,{1055,7},maps},
    {atom,{1055,13},map},
    {cons,
     {1055,18},
     {var,{1055,19},'Fun'},
     {cons,{1055,24},{var,{1055,24},'Map0'},{nil,{1055,28}}}}],
   [],
   [{debug_line,1056,464},
    {match,
     {1056,5},
     {var,{1056,5},'RetType'},
     {'case',
      {1056,15},
      {tuple,
       {1056,20},
       [{call,
         {1056,21},
         {atom,{1056,21},meet},
         [{var,{1056,26},'Fun'},
          {block,0,
           [{tuple,
             {1056,31},
             [{atom,{1056,31},t_fun},
              {integer,{1056,44},2},
              {atom,{1056,31},any},
              {atom,{1056,31},any}]}]}]},
        {call,
         {1056,49},
         {atom,{1056,49},meet},
         [{var,{1056,54},'Map0'},
          {block,0,
           [{tuple,
             {1056,60},
             [{atom,{1056,60},t_map},
              {atom,{1056,60},any},
              {atom,{1056,60},any}]}]}]}]},
      [{clause,
        {1057,19},
        [{tuple,
          {1057,19},
          [{tuple,
            {1057,20},
            [{atom,{1057,20},t_fun},
             {var,{1057,20},'_'},
             {var,{1057,20},'_'},
             {var,{1057,32},'FunRet'}]},
           {match,
            {1057,41},
            {tuple,
             {1057,41},
             [{atom,{1057,41},t_map},
              {var,{1057,41},'_'},
              {var,{1057,60},'SValue0'}]},
            {var,{1057,69},'Map'}}]}],
        [],
        [{debug_line,1058,465},
         {match,
          {1058,23},
          {var,{1058,23},'SValue'},
          {call,
           {1058,32},
           {atom,{1058,32},join},
           [{var,{1058,37},'FunRet'},{var,{1058,45},'SValue0'}]}},
         {debug_line,1059,466},
         {block,
          {1059,23},
          [{match,{1059,23},{var,{1059,23},rec1},{var,{1059,23},'Map'}},
           {'case',
            {1059,33},
            {var,{1059,23},rec1},
            [{clause,
              {1059,33},
              [{tuple,
                {1059,33},
                [{atom,{1059,33},t_map},
                 {var,{1059,33},'_'},
                 {var,{1059,33},'_'}]}],
              [],
              [{call,
                {1059,33},
                {remote,
                 {1059,33},
                 {atom,{1059,33},erlang},
                 {atom,{1059,33},setelement}},
                [{integer,{1059,33},3},
                 {var,{1059,23},rec1},
                 {var,{1059,45},'SValue'}]}]},
             {clause,
              [{generated,true},{location,{1059,33}}],
              [{var,[{generated,true},{location,{1059,33}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1059,33}}],
                {remote,
                 [{generated,true},{location,{1059,33}}],
                 {atom,[{generated,true},{location,{1059,33}}],erlang},
                 {atom,[{generated,true},{location,{1059,33}}],error}},
                [{tuple,
                  [{generated,true},{location,{1059,33}}],
                  [{atom,[{generated,true},{location,{1059,33}}],badrecord},
                   {var,{1059,23},rec1}]}]}]}]}]}]},
       {clause,
        {1060,19},
        [{tuple,
          {1060,19},
          [{atom,{1060,20},none},
           {tuple,
            {1060,26},
            [{atom,{1060,26},t_map},
             {var,{1060,26},'_'},
             {var,{1060,26},'_'}]}]}],
        [],
        [{debug_line,1063,467},
         {tuple,
          {1063,23},
          [{atom,{1063,23},t_map},
           {atom,{1063,40},none},
           {atom,{1063,57},none}]}]},
       {clause,
        {1064,19},
        [{tuple,{1064,19},[{var,{1064,20},'_'},{atom,{1064,23},none}]}],
        [],
        [{debug_line,1065,468},{atom,{1065,23},none}]}]}},
    {debug_line,1067,469},
    {call,
     {1067,5},
     {atom,{1067,5},sub_unsafe},
     [{var,{1067,16},'RetType'},
      {block,0,
       [{cons,
         {1067,25},
         {atom,{1067,26},any},
         {cons,
          {1067,31},
          {tuple,
           {1067,31},
           [{atom,{1067,31},t_map},{atom,{1067,31},any},{atom,{1067,31},any}]},
          {nil,{1067,39}}}}]}]}]},
  {clause,
   {1068,1},
   [{atom,{1068,7},maps},
    {atom,{1068,13},merge},
    {cons,
     {1068,20},
     {var,{1068,21},'A'},
     {cons,{1068,24},{var,{1068,24},'B'},{nil,{1068,25}}}}],
   [],
   [{debug_line,1069,470},
    {match,
     {1069,5},
     {var,{1069,5},'RetType'},
     {'case',
      {1069,15},
      {tuple,
       {1069,20},
       [{call,
         {1069,21},
         {atom,{1069,21},meet},
         [{var,{1069,26},'A'},
          {block,0,
           [{tuple,
             {1069,29},
             [{atom,{1069,29},t_map},
              {atom,{1069,29},any},
              {atom,{1069,29},any}]}]}]},
        {call,
         {1069,40},
         {atom,{1069,40},meet},
         [{var,{1069,45},'B'},
          {block,0,
           [{tuple,
             {1069,48},
             [{atom,{1069,48},t_map},
              {atom,{1069,48},any},
              {atom,{1069,48},any}]}]}]}]},
      [{clause,
        {1070,19},
        [{tuple,
          {1070,19},
          [{tuple,
            {1070,20},
            [{atom,{1070,20},t_map},
             {var,{1070,37},'SKeyA'},
             {var,{1070,55},'SValueA'}]},
           {tuple,
            {1071,20},
            [{atom,{1071,20},t_map},
             {var,{1071,37},'SKeyB'},
             {var,{1071,55},'SValueB'}]}]}],
        [],
        [{debug_line,1072,471},
         {match,
          {1072,23},
          {var,{1072,23},'SKey'},
          {call,
           {1072,30},
           {atom,{1072,30},join},
           [{var,{1072,35},'SKeyA'},{var,{1072,42},'SKeyB'}]}},
         {debug_line,1073,472},
         {match,
          {1073,23},
          {var,{1073,23},'SValue'},
          {call,
           {1073,32},
           {atom,{1073,32},join},
           [{var,{1073,37},'SValueA'},{var,{1073,46},'SValueB'}]}},
         {debug_line,1074,473},
         {tuple,
          {1074,23},
          [{atom,{1074,23},t_map},
           {var,{1074,40},'SKey'},
           {var,{1074,57},'SValue'}]}]},
       {clause,
        {1075,19},
        [{var,{1075,19},'_'}],
        [],
        [{debug_line,1076,474},{atom,{1076,23},none}]}]}},
    {debug_line,1078,475},
    {call,
     {1078,5},
     {atom,{1078,5},sub_unsafe},
     [{var,{1078,16},'RetType'},
      {block,0,
       [{cons,
         {1078,25},
         {tuple,
          {1078,26},
          [{atom,{1078,26},t_map},{atom,{1078,26},any},{atom,{1078,26},any}]},
         {cons,
          {1078,36},
          {tuple,
           {1078,36},
           [{atom,{1078,36},t_map},{atom,{1078,36},any},{atom,{1078,36},any}]},
          {nil,{1078,44}}}}]}]}]},
  {clause,
   {1079,1},
   [{atom,{1079,7},maps},{atom,{1079,13},new},{nil,{1079,18}}],
   [],
   [{debug_line,1080,476},
    {match,
     {1080,5},
     {var,{1080,5},'RetType'},
     {tuple,
      {1080,15},
      [{atom,{1080,15},t_map},{atom,{1080,32},none},{atom,{1080,49},none}]}},
    {debug_line,1081,477},
    {call,
     {1081,5},
     {atom,{1081,5},sub_unsafe},
     [{var,{1081,16},'RetType'},{nil,{1081,25}}]}]},
  {clause,
   {1082,1},
   [{atom,{1082,7},maps},
    {atom,{1082,13},put},
    {cons,
     {1082,18},
     {var,{1082,19},'Key'},
     {cons,
      {1082,24},
      {var,{1082,24},'Value'},
      {cons,{1082,31},{var,{1082,31},'Map'},{nil,{1082,34}}}}}],
   [],
   [{debug_line,1083,478},
    {match,
     {1083,5},
     {var,{1083,5},'RetType'},
     {'case',
      {1083,15},
      {call,
       {1083,20},
       {atom,{1083,20},meet},
       [{var,{1083,25},'Map'},
        {block,0,
         [{tuple,
           {1083,30},
           [{atom,{1083,30},t_map},
            {atom,{1083,30},any},
            {atom,{1083,30},any}]}]}]},
      [{clause,
        {1084,19},
        [{tuple,
          {1084,19},
          [{atom,{1084,19},t_map},
           {var,{1084,36},'SKey0'},
           {var,{1084,54},'SValue0'}]}],
        [],
        [{debug_line,1085,479},
         {match,
          {1085,23},
          {var,{1085,23},'SKey'},
          {call,
           {1085,30},
           {atom,{1085,30},join},
           [{var,{1085,35},'Key'},{var,{1085,40},'SKey0'}]}},
         {debug_line,1086,480},
         {match,
          {1086,23},
          {var,{1086,23},'SValue'},
          {call,
           {1086,32},
           {atom,{1086,32},join},
           [{var,{1086,37},'Value'},{var,{1086,44},'SValue0'}]}},
         {debug_line,1087,481},
         {tuple,
          {1087,23},
          [{atom,{1087,23},t_map},
           {var,{1087,40},'SKey'},
           {var,{1087,57},'SValue'}]}]},
       {clause,
        {1088,19},
        [{var,{1088,19},'_'}],
        [],
        [{debug_line,1089,482},{atom,{1089,23},none}]}]}},
    {debug_line,1091,483},
    {call,
     {1091,5},
     {atom,{1091,5},sub_unsafe},
     [{var,{1091,16},'RetType'},
      {block,0,
       [{cons,
         {1091,25},
         {atom,{1091,26},any},
         {cons,
          {1091,31},
          {atom,{1091,31},any},
          {cons,
           {1091,36},
           {tuple,
            {1091,36},
            [{atom,{1091,36},t_map},
             {atom,{1091,36},any},
             {atom,{1091,36},any}]},
           {nil,{1091,44}}}}}]}]}]},
  {clause,
   {1092,1},
   [{atom,{1092,7},maps},
    {atom,{1092,13},remove},
    {cons,
     {1092,21},
     {var,{1092,22},'Key'},
     {cons,{1092,27},{var,{1092,27},'Map'},{nil,{1092,30}}}}],
   [],
   [{debug_line,1093,484},
    {match,
     {1093,5},
     {var,{1093,5},'RetType'},
     {call,
      {1093,15},
      {atom,{1093,15},maps_remove_type},
      [{var,{1093,32},'Key'},{var,{1093,37},'Map'}]}},
    {debug_line,1094,485},
    {call,
     {1094,5},
     {atom,{1094,5},sub_unsafe},
     [{var,{1094,16},'RetType'},
      {block,0,
       [{cons,
         {1094,25},
         {atom,{1094,26},any},
         {cons,
          {1094,31},
          {tuple,
           {1094,31},
           [{atom,{1094,31},t_map},{atom,{1094,31},any},{atom,{1094,31},any}]},
          {nil,{1094,39}}}}]}]}]},
  {clause,
   {1095,1},
   [{atom,{1095,7},maps},
    {atom,{1095,13},take},
    {cons,
     {1095,19},
     {var,{1095,20},'Key'},
     {cons,{1095,25},{var,{1095,25},'Map'},{nil,{1095,28}}}}],
   [],
   [{debug_line,1096,486},
    {match,
     {1096,5},
     {var,{1096,5},'TupleType'},
     {'case',
      {1096,17},
      {call,
       {1096,22},
       {atom,{1096,22},erlang_map_get_type},
       [{var,{1096,42},'Key'},{var,{1096,47},'Map'}]},
      [{clause,
        {1097,21},
        [{atom,{1097,21},none}],
        [],
        [{debug_line,1098,487},{atom,{1098,25},none}]},
       {clause,
        {1099,21},
        [{var,{1099,21},'ValueType'}],
        [],
        [{debug_line,1100,488},
         {match,
          {1100,25},
          {var,{1100,25},'MapType'},
          {call,
           {1100,35},
           {atom,{1100,35},meet},
           [{var,{1100,40},'Map'},
            {block,0,
             [{tuple,
               {1100,45},
               [{atom,{1100,45},t_map},
                {atom,{1100,45},any},
                {atom,{1100,45},any}]}]}]}},
         {debug_line,1101,489},
         {call,
          {1101,25},
          {atom,{1101,25},make_two_tuple},
          [{var,{1101,40},'ValueType'},{var,{1101,51},'MapType'}]}]}]}},
    {debug_line,1104,490},
    {match,
     {1104,5},
     {var,{1104,5},'RetType'},
     {call,
      {1104,15},
      {atom,{1104,15},join},
      [{block,0,
        [{call,
          {1104,20},
          {remote,
           {1104,30},
           {atom,{1104,20},beam_types},
           {atom,{1104,31},make_atom}},
          [{atom,{1104,41},error}]}]},
       {var,{1104,49},'TupleType'}]}},
    {debug_line,1105,491},
    {call,
     {1105,5},
     {atom,{1105,5},sub_unsafe},
     [{var,{1105,16},'RetType'},
      {block,0,
       [{cons,
         {1105,25},
         {atom,{1105,26},any},
         {cons,
          {1105,31},
          {tuple,
           {1105,31},
           [{atom,{1105,31},t_map},{atom,{1105,31},any},{atom,{1105,31},any}]},
          {nil,{1105,39}}}}]}]}]},
  {clause,
   {1106,1},
   [{atom,{1106,7},maps},
    {atom,{1106,13},to_list},
    {cons,{1106,22},{var,{1106,23},'Map'},{nil,{1106,26}}}],
   [],
   [{debug_line,1107,492},
    {match,
     {1107,5},
     {var,{1107,5},'RetType'},
     {'case',
      {1107,15},
      {call,
       {1107,20},
       {atom,{1107,20},meet},
       [{var,{1107,25},'Map'},
        {block,0,
         [{tuple,
           {1107,30},
           [{atom,{1107,30},t_map},
            {atom,{1107,30},any},
            {atom,{1107,30},any}]}]}]},
      [{clause,
        {1108,19},
        [{tuple,
          {1108,19},
          [{atom,{1108,19},t_map},
           {var,{1108,36},'SKey'},
           {var,{1108,53},'SValue'}]}],
        [],
        [{debug_line,1109,493},
         {call,
          {1109,23},
          {atom,{1109,23},proper_list},
          [{block,0,
            [{call,
              {1109,35},
              {atom,{1109,35},make_two_tuple},
              [{var,{1109,50},'SKey'},{var,{1109,56},'SValue'}]}]}]}]},
       {clause,
        {1110,19},
        [{var,{1110,19},'_'}],
        [],
        [{debug_line,1111,494},{atom,{1111,23},none}]}]}},
    {debug_line,1113,495},
    {call,
     {1113,5},
     {atom,{1113,5},sub_unsafe},
     [{var,{1113,16},'RetType'},
      {block,0,
       [{cons,
         {1113,25},
         {tuple,
          {1113,26},
          [{atom,{1113,26},t_map},{atom,{1113,26},any},{atom,{1113,26},any}]},
         {nil,{1113,34}}}]}]}]},
  {clause,
   {1114,1},
   [{atom,{1114,7},maps},
    {atom,{1114,13},update_with},
    {cons,
     {1114,26},
     {var,{1114,27},'_Key'},
     {cons,
      {1114,33},
      {var,{1114,33},'Fun'},
      {cons,{1114,38},{var,{1114,38},'Map0'},{nil,{1114,42}}}}}],
   [],
   [{debug_line,1115,496},
    {match,
     {1115,5},
     {var,{1115,5},'RetType'},
     {'case',
      {1115,15},
      {tuple,
       {1115,20},
       [{call,
         {1115,21},
         {atom,{1115,21},meet},
         [{var,{1115,26},'Fun'},
          {block,0,
           [{tuple,
             {1115,31},
             [{atom,{1115,31},t_fun},
              {integer,{1115,44},1},
              {atom,{1115,31},any},
              {atom,{1115,31},any}]}]}]},
        {call,
         {1115,49},
         {atom,{1115,49},meet},
         [{var,{1115,54},'Map0'},
          {block,0,
           [{tuple,
             {1115,60},
             [{atom,{1115,60},t_map},
              {atom,{1115,60},any},
              {atom,{1115,60},any}]}]}]}]},
      [{clause,
        {1116,19},
        [{tuple,
          {1116,19},
          [{tuple,
            {1116,20},
            [{atom,{1116,20},t_fun},
             {var,{1116,20},'_'},
             {var,{1116,20},'_'},
             {var,{1116,32},'FunRet'}]},
           {match,
            {1116,41},
            {tuple,
             {1116,41},
             [{atom,{1116,41},t_map},
              {var,{1116,41},'_'},
              {var,{1116,60},'SValue0'}]},
            {var,{1116,69},'Map'}}]}],
        [[{op,
           {1117,33},
           '=/=',
           {var,{1117,26},'FunRet'},
           {atom,{1117,37},none}}]],
        [{debug_line,1118,497},
         {match,
          {1118,23},
          {var,{1118,23},'SValue'},
          {call,
           {1118,32},
           {atom,{1118,32},join},
           [{var,{1118,37},'FunRet'},{var,{1118,45},'SValue0'}]}},
         {debug_line,1119,498},
         {block,
          {1119,23},
          [{match,{1119,23},{var,{1119,23},rec2},{var,{1119,23},'Map'}},
           {'case',
            {1119,33},
            {var,{1119,23},rec2},
            [{clause,
              {1119,33},
              [{tuple,
                {1119,33},
                [{atom,{1119,33},t_map},
                 {var,{1119,33},'_'},
                 {var,{1119,33},'_'}]}],
              [],
              [{call,
                {1119,33},
                {remote,
                 {1119,33},
                 {atom,{1119,33},erlang},
                 {atom,{1119,33},setelement}},
                [{integer,{1119,33},3},
                 {var,{1119,23},rec2},
                 {var,{1119,45},'SValue'}]}]},
             {clause,
              [{generated,true},{location,{1119,33}}],
              [{var,[{generated,true},{location,{1119,33}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1119,33}}],
                {remote,
                 [{generated,true},{location,{1119,33}}],
                 {atom,[{generated,true},{location,{1119,33}}],erlang},
                 {atom,[{generated,true},{location,{1119,33}}],error}},
                [{tuple,
                  [{generated,true},{location,{1119,33}}],
                  [{atom,[{generated,true},{location,{1119,33}}],badrecord},
                   {var,{1119,23},rec2}]}]}]}]}]}]},
       {clause,
        {1120,19},
        [{var,{1120,19},'_'}],
        [],
        [{debug_line,1121,499},{atom,{1121,23},none}]}]}},
    {debug_line,1123,500},
    {call,
     {1123,5},
     {atom,{1123,5},sub_unsafe},
     [{var,{1123,16},'RetType'},
      {block,0,
       [{cons,
         {1123,25},
         {atom,{1123,26},any},
         {cons,
          {1123,31},
          {tuple,
           {1123,31},
           [{atom,{1123,31},t_fun},
            {integer,{1123,44},1},
            {atom,{1123,31},any},
            {atom,{1123,31},any}]},
          {cons,
           {1123,48},
           {tuple,
            {1123,48},
            [{atom,{1123,48},t_map},
             {atom,{1123,48},any},
             {atom,{1123,48},any}]},
           {nil,{1123,56}}}}}]}]}]},
  {clause,
   {1124,1},
   [{atom,{1124,7},maps},
    {atom,{1124,13},values},
    {cons,{1124,21},{var,{1124,22},'Map'},{nil,{1124,25}}}],
   [],
   [{debug_line,1125,501},
    {match,
     {1125,5},
     {var,{1125,5},'RetType'},
     {'case',
      {1125,15},
      {call,
       {1125,20},
       {atom,{1125,20},meet},
       [{var,{1125,25},'Map'},
        {block,0,
         [{tuple,
           {1125,30},
           [{atom,{1125,30},t_map},
            {atom,{1125,30},any},
            {atom,{1125,30},any}]}]}]},
      [{clause,
        {1126,19},
        [{tuple,
          {1126,19},
          [{atom,{1126,19},t_map},{var,{1126,19},'_'},{atom,{1126,38},none}]}],
        [],
        [{debug_line,1126,502},{atom,{1126,47},nil}]},
       {clause,
        {1127,19},
        [{tuple,
          {1127,19},
          [{atom,{1127,19},t_map},
           {var,{1127,19},'_'},
           {var,{1127,38},'SValue'}]}],
        [],
        [{debug_line,1127,503},
         {call,
          {1127,49},
          {atom,{1127,49},proper_list},
          [{var,{1127,61},'SValue'}]}]},
       {clause,
        {1128,19},
        [{var,{1128,19},'_'}],
        [],
        [{debug_line,1128,504},{atom,{1128,24},none}]}]}},
    {debug_line,1130,505},
    {call,
     {1130,5},
     {atom,{1130,5},sub_unsafe},
     [{var,{1130,16},'RetType'},
      {block,0,
       [{cons,
         {1130,25},
         {tuple,
          {1130,26},
          [{atom,{1130,26},t_map},{atom,{1130,26},any},{atom,{1130,26},any}]},
         {nil,{1130,34}}}]}]}]},
  {clause,
   {1131,1},
   [{atom,{1131,7},maps},
    {atom,{1131,13},with},
    {cons,
     {1131,19},
     {var,{1131,20},'Keys'},
     {cons,{1131,26},{var,{1131,26},'Map0'},{nil,{1131,30}}}}],
   [],
   [{debug_line,1132,506},
    {match,
     {1132,5},
     {var,{1132,5},'RetType'},
     {'case',
      {1132,15},
      {tuple,
       {1132,20},
       [{call,
         {1132,21},
         {atom,{1132,21},erlang_hd_type},
         [{var,{1132,36},'Keys'}]},
        {call,
         {1132,43},
         {atom,{1132,43},meet},
         [{var,{1132,48},'Map0'},
          {block,0,
           [{tuple,
             {1132,54},
             [{atom,{1132,54},t_map},
              {atom,{1132,54},any},
              {atom,{1132,54},any}]}]}]}]},
      [{clause,
        {1133,19},
        [{tuple,{1133,19},[{atom,{1133,20},none},{var,{1133,26},'_'}]}],
        [],
        [{debug_line,1134,507},
         {tuple,
          {1134,23},
          [{atom,{1134,23},t_map},
           {atom,{1134,40},none},
           {atom,{1134,57},none}]}]},
       {clause,
        {1135,19},
        [{tuple,
          {1135,19},
          [{var,{1135,20},'KeysType'},
           {match,
            {1135,30},
            {tuple,
             {1135,30},
             [{atom,{1135,30},t_map},
              {var,{1135,47},'SKey0'},
              {var,{1135,30},'_'}]},
            {var,{1135,54},'Map'}}]}],
        [],
        [{debug_line,1139,508},
         {match,
          {1139,23},
          {var,{1139,23},'SKey'},
          {call,
           {1139,30},
           {atom,{1139,30},meet},
           [{var,{1139,35},'KeysType'},{var,{1139,45},'SKey0'}]}},
         {debug_line,1140,509},
         {block,
          {1140,23},
          [{match,{1140,23},{var,{1140,23},rec3},{var,{1140,23},'Map'}},
           {'case',
            {1140,33},
            {var,{1140,23},rec3},
            [{clause,
              {1140,33},
              [{tuple,
                {1140,33},
                [{atom,{1140,33},t_map},
                 {var,{1140,33},'_'},
                 {var,{1140,33},'_'}]}],
              [],
              [{call,
                {1140,33},
                {remote,
                 {1140,33},
                 {atom,{1140,33},erlang},
                 {atom,{1140,33},setelement}},
                [{integer,{1140,33},2},
                 {var,{1140,23},rec3},
                 {var,{1140,43},'SKey'}]}]},
             {clause,
              [{generated,true},{location,{1140,33}}],
              [{var,[{generated,true},{location,{1140,33}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1140,33}}],
                {remote,
                 [{generated,true},{location,{1140,33}}],
                 {atom,[{generated,true},{location,{1140,33}}],erlang},
                 {atom,[{generated,true},{location,{1140,33}}],error}},
                [{tuple,
                  [{generated,true},{location,{1140,33}}],
                  [{atom,[{generated,true},{location,{1140,33}}],badrecord},
                   {var,{1140,23},rec3}]}]}]}]}]}]},
       {clause,
        {1141,19},
        [{tuple,{1141,19},[{var,{1141,20},'_'},{var,{1141,23},'_'}]}],
        [],
        [{debug_line,1142,510},{atom,{1142,23},none}]}]}},
    {debug_line,1144,511},
    {call,
     {1144,5},
     {atom,{1144,5},sub_unsafe},
     [{var,{1144,16},'RetType'},
      {block,0,
       [{cons,
         {1144,25},
         {call,{1144,26},{atom,{1144,26},proper_list},[]},
         {cons,
          {1144,41},
          {tuple,
           {1144,41},
           [{atom,{1144,41},t_map},{atom,{1144,41},any},{atom,{1144,41},any}]},
          {nil,{1144,49}}}}]}]}]},
  {clause,
   {1145,1},
   [{atom,{1145,7},maps},
    {atom,{1145,13},without},
    {cons,
     {1145,22},
     {var,{1145,23},'Keys'},
     {cons,{1145,29},{var,{1145,29},'Map'},{nil,{1145,32}}}}],
   [],
   [{debug_line,1146,512},
    {match,
     {1146,5},
     {var,{1146,5},'RetType'},
     {call,
      {1146,15},
      {atom,{1146,15},maps_remove_type},
      [{block,0,
        [{call,
          {1146,32},
          {atom,{1146,32},erlang_hd_type},
          [{var,{1146,47},'Keys'}]}]},
       {var,{1146,54},'Map'}]}},
    {debug_line,1147,513},
    {call,
     {1147,5},
     {atom,{1147,5},sub_unsafe},
     [{var,{1147,16},'RetType'},
      {block,0,
       [{cons,
         {1147,25},
         {call,{1147,26},{atom,{1147,26},proper_list},[]},
         {cons,
          {1147,41},
          {tuple,
           {1147,41},
           [{atom,{1147,41},t_map},{atom,{1147,41},any},{atom,{1147,41},any}]},
          {nil,{1147,49}}}}]}]}]},
  {clause,
   {1151,1},
   [{var,{1151,7},'_'},{var,{1151,10},'_'},{var,{1151,13},'Args'}],
   [],
   [{debug_line,1152,514},
    {call,
     {1152,5},
     {atom,{1152,5},sub_unsafe},
     [{atom,{1152,16},any},
      {block,0,
       [{lc,
         {1152,21},
         {block,0,[{atom,{1152,22},any}]},
         [{block,0,[{atom,{1152,34},true}]},
          {generate,
           {1152,31},
           {var,{1152,29},'_'},
           {var,{1152,34},'Args'}}]}]}]}]}]}.
{attribute,
    {1154,2},
    spec,
    {{arith_type,2},
     [{type,
          {1154,17},
          bounded_fun,
          [{type,
               {1154,17},
               'fun',
               [{type,
                    {1154,17},
                    product,
                    [{var,{1154,18},'Op'},{var,{1154,22},'ArgTypes'}]},
                {var,{1154,35},'RetType'}]},
           [{type,
                {1155,7},
                constraint,
                [{atom,{1155,7},is_subtype},
                 [{var,{1155,7},'Op'},
                  {remote_type,
                      {1155,13},
                      [{atom,{1155,13},beam_ssa},{atom,{1155,22},op},[]]}]]},
            {type,
                {1156,7},
                constraint,
                [{atom,{1156,7},is_subtype},
                 [{var,{1156,7},'ArgTypes'},
                  {type,{1156,19},list,[{user_type,{1156,20},type,[]}]}]]},
            {type,
                {1157,7},
                constraint,
                [{atom,{1157,7},is_subtype},
                 [{var,{1157,7},'RetType'},
                  {user_type,{1157,18},type,[]}]]}]]}]}}.
{function,
    {1159,1},
    arith_type,2,
    [{clause,
         {1159,1},
         [{var,{1159,1},'_'},{var,{1159,1},'_'}],
         [[{call,
               {1159,1},
               {remote,
                   {1159,1},
                   {atom,{1159,1},fake},
                   {atom,{1159,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1159,515},{atom,{1159,1},ignore}]},
     {clause,
         {1159,1},
         [{tuple,{1159,12},[{atom,{1159,13},bif},{atom,{1159,17},'-'}]},
          {cons,{1159,23},{var,{1159,24},'Arg'},{nil,{1159,27}}}],
         [],
         [{debug_line,1160,516},
          {match,
              {1160,5},
              {var,{1160,5},'ArgTypes'},
              {cons,
                  {1160,16},
                  {tuple,
                      {1160,17},
                      [{atom,{1160,17},t_integer},
                       {tuple,
                           {1160,37},
                           [{integer,{1160,38},0},{integer,{1160,40},0}]}]},
                  {cons,{1160,44},{var,{1160,44},'Arg'},{nil,{1160,47}}}}},
          {debug_line,1161,517},
          {call,
              {1161,5},
              {atom,{1161,5},beam_bounds_type},
              [{atom,{1161,22},'-'},
               {block,0,
                   [{tuple,
                        {1161,27},
                        [{atom,{1161,27},t_number},{atom,{1161,27},any}]}]},
               {var,{1161,40},'ArgTypes'}]}]},
     {clause,
         {1162,1},
         [{tuple,{1162,12},[{atom,{1162,13},bif},{atom,{1162,17},'bnot'}]},
          {cons,{1162,26},{var,{1162,27},'Arg0'},{nil,{1162,31}}}],
         [],
         [{debug_line,1163,518},
          {'case',
              {1163,5},
              {call,
                  {1163,10},
                  {atom,{1163,10},meet},
                  [{var,{1163,15},'Arg0'},
                   {block,0,
                       [{tuple,
                            {1163,21},
                            [{atom,{1163,21},t_integer},
                             {atom,{1163,21},any}]}]}]},
              [{clause,
                   {1164,9},
                   [{atom,{1164,9},none}],
                   [],
                   [{debug_line,1165,519},{atom,{1165,13},none}]},
               {clause,
                   {1166,9},
                   [{tuple,
                        {1166,9},
                        [{atom,{1166,9},t_integer},{var,{1166,29},'R'}]}],
                   [],
                   [{debug_line,1167,520},
                    {tuple,
                        {1167,13},
                        [{atom,{1167,13},t_integer},
                         {call,
                             {1167,33},
                             {remote,
                                 {1167,44},
                                 {atom,{1167,33},beam_bounds},
                                 {atom,{1167,45},bounds}},
                             [{atom,{1167,52},'bnot'},
                              {var,{1167,60},'R'}]}]}]}]}]},
     {clause,
         {1169,1},
         [{tuple,{1169,12},[{atom,{1169,13},bif},{var,{1169,17},'Op'}]},
          {match,
              {1169,22},
              {cons,
                  {1169,22},
                  {var,{1169,23},'_'},
                  {cons,{1169,25},{var,{1169,25},'_'},{nil,{1169,26}}}},
              {var,{1169,28},'ArgTypes'}}],
         [[{op,{1169,46},'=:=',{var,{1169,43},'Op'},{atom,{1169,50},'+'}}],
          [{op,{1170,46},'=:=',{var,{1170,43},'Op'},{atom,{1170,50},'-'}}],
          [{op,{1171,46},'=:=',{var,{1171,43},'Op'},{atom,{1171,50},'*'}}]],
         [{debug_line,1172,521},
          {call,
              {1172,5},
              {atom,{1172,5},beam_bounds_type},
              [{var,{1172,22},'Op'},
               {block,0,
                   [{tuple,
                        {1172,26},
                        [{atom,{1172,26},t_number},{atom,{1172,26},any}]}]},
               {var,{1172,39},'ArgTypes'}]}]},
     {clause,
         {1173,1},
         [{tuple,{1173,12},[{atom,{1173,13},bif},{var,{1173,17},'Op'}]},
          {match,
              {1173,22},
              {cons,
                  {1173,22},
                  {var,{1173,23},'_'},
                  {cons,{1173,25},{var,{1173,25},'_'},{nil,{1173,26}}}},
              {var,{1173,28},'ArgTypes'}}],
         [[{op,{1173,46},'=:=',{var,{1173,43},'Op'},{atom,{1173,50},'band'}}],
          [{op,{1174,46},'=:=',{var,{1174,43},'Op'},{atom,{1174,50},'bor'}}],
          [{op,{1175,46},'=:=',{var,{1175,43},'Op'},{atom,{1175,50},'bsl'}}],
          [{op,{1176,46},'=:=',{var,{1176,43},'Op'},{atom,{1176,50},'bsr'}}],
          [{op,{1177,46},'=:=',{var,{1177,43},'Op'},{atom,{1177,50},'bxor'}}],
          [{op,{1178,46},'=:=',{var,{1178,43},'Op'},{atom,{1178,50},'div'}}],
          [{op,{1179,46},'=:=',{var,{1179,43},'Op'},{atom,{1179,50},'rem'}}]],
         [{debug_line,1180,522},
          {call,
              {1180,5},
              {atom,{1180,5},beam_bounds_type},
              [{var,{1180,22},'Op'},
               {block,0,
                   [{tuple,
                        {1180,26},
                        [{atom,{1180,26},t_integer},{atom,{1180,26},any}]}]},
               {var,{1180,40},'ArgTypes'}]}]},
     {clause,
         {1181,1},
         [{var,{1181,12},'_Op'},{var,{1181,17},'_Args'}],
         [],
         [{debug_line,1182,523},{atom,{1182,5},any}]}]}.
{function,
 {1188,1},
 mixed_arith_types,1,
 [{clause,
   {1188,1},
   [{var,{1188,1},'_'}],
   [[{call,
      {1188,1},
      {remote,{1188,1},{atom,{1188,1},fake},{atom,{1188,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1188,524},{atom,{1188,1},ignore}]},
  {clause,
   {1188,1},
   [{var,{1188,19},'Args0'}],
   [],
   [{debug_line,1189,525},
    {match,
     {1189,5},
     {cons,{1189,5},{var,{1189,6},'FirstType'},{var,{1189,16},'_'}},
     {match,
      {1189,21},
      {var,{1189,21},'Args'},
      {lc,
       {1189,28},
       {block,0,
        [{call,
          {1189,29},
          {atom,{1189,29},meet},
          [{var,{1189,34},'A'},
           {block,0,
            [{tuple,
              {1189,37},
              [{atom,{1189,37},t_number},{atom,{1189,37},any}]}]}]}]},
       [{block,0,[{atom,{1189,58},true}]},
        {generate,{1189,55},{var,{1189,53},'A'},{var,{1189,58},'Args0'}}]}}},
    {debug_line,1190,526},
    {match,
     {1190,5},
     {var,{1190,5},'RetType'},
     {call,
      {1190,15},
      {remote,{1190,15},{atom,{1190,15},lists},{atom,{1190,15},foldl}},
      [{block,0,
        [{'fun',
          {1190,21},
          {clauses,
           [{clause,
             {1190,24},
             [{tuple,
               {1190,25},
               [{atom,{1190,25},t_integer},{var,{1190,25},'_'}]},
              {tuple,
               {1190,39},
               [{atom,{1190,39},t_integer},{var,{1190,39},'_'}]}],
             [],
             [{tuple,
               {1190,56},
               [{atom,{1190,56},t_integer},{atom,{1190,56},any}]}]},
            {clause,
             {1191,24},
             [{tuple,
               {1191,25},
               [{atom,{1191,25},t_integer},{var,{1191,25},'_'}]},
              {tuple,
               {1191,39},
               [{atom,{1191,39},t_number},{var,{1191,39},'_'}]}],
             [],
             [{debug_line,1191,527},
              {tuple,
               {1191,55},
               [{atom,{1191,55},t_number},{atom,{1191,55},any}]}]},
            {clause,
             {1192,24},
             [{tuple,
               {1192,25},
               [{atom,{1192,25},t_integer},{var,{1192,25},'_'}]},
              {tuple,
               {1192,39},
               [{atom,{1192,39},t_float},{var,{1192,39},'_'}]}],
             [],
             [{debug_line,1192,528},
              {tuple,
               {1192,54},
               [{atom,{1192,54},t_float},{atom,{1192,54},any}]}]},
            {clause,
             {1193,24},
             [{tuple,{1193,25},[{atom,{1193,25},t_float},{var,{1193,25},'_'}]},
              {tuple,
               {1193,37},
               [{atom,{1193,37},t_integer},{var,{1193,37},'_'}]}],
             [],
             [{debug_line,1193,529},
              {tuple,
               {1193,54},
               [{atom,{1193,54},t_float},{atom,{1193,54},any}]}]},
            {clause,
             {1194,24},
             [{tuple,{1194,25},[{atom,{1194,25},t_float},{var,{1194,25},'_'}]},
              {tuple,
               {1194,37},
               [{atom,{1194,37},t_number},{var,{1194,37},'_'}]}],
             [],
             [{debug_line,1194,530},
              {tuple,
               {1194,53},
               [{atom,{1194,53},t_float},{atom,{1194,53},any}]}]},
            {clause,
             {1195,24},
             [{tuple,{1195,25},[{atom,{1195,25},t_float},{var,{1195,25},'_'}]},
              {tuple,
               {1195,37},
               [{atom,{1195,37},t_float},{var,{1195,37},'_'}]}],
             [],
             [{debug_line,1195,531},
              {tuple,
               {1195,52},
               [{atom,{1195,52},t_float},{atom,{1195,52},any}]}]},
            {clause,
             {1196,24},
             [{tuple,
               {1196,25},
               [{atom,{1196,25},t_number},{var,{1196,25},'_'}]},
              {tuple,
               {1196,38},
               [{atom,{1196,38},t_integer},{var,{1196,38},'_'}]}],
             [],
             [{debug_line,1196,532},
              {tuple,
               {1196,55},
               [{atom,{1196,55},t_number},{atom,{1196,55},any}]}]},
            {clause,
             {1197,24},
             [{tuple,
               {1197,25},
               [{atom,{1197,25},t_number},{var,{1197,25},'_'}]},
              {tuple,
               {1197,38},
               [{atom,{1197,38},t_float},{var,{1197,38},'_'}]}],
             [],
             [{debug_line,1197,533},
              {tuple,
               {1197,53},
               [{atom,{1197,53},t_float},{atom,{1197,53},any}]}]},
            {clause,
             {1198,24},
             [{tuple,
               {1198,25},
               [{atom,{1198,25},t_number},{var,{1198,25},'_'}]},
              {tuple,
               {1198,38},
               [{atom,{1198,38},t_number},{var,{1198,38},'_'}]}],
             [],
             [{debug_line,1198,534},
              {tuple,
               {1198,54},
               [{atom,{1198,54},t_number},{atom,{1198,54},any}]}]},
            {clause,
             {1199,24},
             [{var,{1199,25},'_'},{var,{1199,28},'_'}],
             [],
             [{debug_line,1199,535},{atom,{1199,34},none}]}]}}]},
       {var,{1200,26},'FirstType'},
       {var,{1200,37},'Args'}]}},
    {debug_line,1201,536},
    {call,
     {1201,5},
     {atom,{1201,5},sub_unsafe},
     [{var,{1201,16},'RetType'},
      {block,0,
       [{lc,
         {1201,25},
         {block,0,
          [{tuple,
            {1201,26},
            [{atom,{1201,26},t_number},{atom,{1201,26},any}]}]},
         [{block,0,[{atom,{1201,46},true}]},
          {generate,
           {1201,43},
           {var,{1201,41},'_'},
           {var,{1201,46},'Args'}}]}]}]}]}]}.
{function,
    {1203,1},
    erlang_hd_type,1,
    [{clause,
         {1203,1},
         [{var,{1203,1},'_'}],
         [[{call,
               {1203,1},
               {remote,
                   {1203,1},
                   {atom,{1203,1},fake},
                   {atom,{1203,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1203,537},{atom,{1203,1},ignore}]},
     {clause,
         {1203,1},
         [{var,{1203,16},'Src'}],
         [],
         [{debug_line,1204,538},
          {'case',
              {1204,5},
              {call,
                  {1204,10},
                  {atom,{1204,10},meet},
                  [{var,{1204,15},'Src'},
                   {block,0,
                       [{tuple,
                            {1204,20},
                            [{atom,{1204,20},t_cons},
                             {atom,{1204,20},any},
                             {atom,{1204,20},any}]}]}]},
              [{clause,
                   {1205,9},
                   [{tuple,
                        {1205,9},
                        [{atom,{1205,9},t_cons},
                         {var,{1205,22},'Type'},
                         {var,{1205,9},'_'}]}],
                   [],
                   [{debug_line,1205,539},{var,{1205,31},'Type'}]},
               {clause,
                   {1206,9},
                   [{atom,{1206,9},none}],
                   [],
                   [{debug_line,1206,540},{atom,{1206,17},none}]}]}]}]}.
{function,
    {1209,1},
    erlang_tl_type,1,
    [{clause,
         {1209,1},
         [{var,{1209,1},'_'}],
         [[{call,
               {1209,1},
               {remote,
                   {1209,1},
                   {atom,{1209,1},fake},
                   {atom,{1209,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1209,541},{atom,{1209,1},ignore}]},
     {clause,
         {1209,1},
         [{var,{1209,16},'Src'}],
         [],
         [{debug_line,1210,542},
          {'case',
              {1210,5},
              {call,
                  {1210,10},
                  {atom,{1210,10},meet},
                  [{var,{1210,15},'Src'},
                   {block,0,
                       [{tuple,
                            {1210,20},
                            [{atom,{1210,20},t_cons},
                             {atom,{1210,20},any},
                             {atom,{1210,20},any}]}]}]},
              [{clause,
                   {1211,9},
                   [{match,
                        {1211,9},
                        {tuple,
                            {1211,9},
                            [{atom,{1211,9},t_cons},
                             {var,{1211,9},'_'},
                             {var,{1211,28},'Term'}]},
                        {var,{1211,34},'Cons'}}],
                   [],
                   [{debug_line,1211,543},
                    {call,
                        {1211,42},
                        {atom,{1211,42},join},
                        [{var,{1211,47},'Cons'},{var,{1211,53},'Term'}]}]},
               {clause,
                   {1212,9},
                   [{atom,{1212,9},none}],
                   [],
                   [{debug_line,1212,544},{atom,{1212,17},none}]}]}]}]}.
{function,
    {1215,1},
    beam_bounds_type,3,
    [{clause,
         {1215,1},
         [{var,{1215,1},'_'},{var,{1215,1},'_'},{var,{1215,1},'_'}],
         [[{call,
               {1215,1},
               {remote,
                   {1215,1},
                   {atom,{1215,1},fake},
                   {atom,{1215,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1215,545},{atom,{1215,1},ignore}]},
     {clause,
         {1215,1},
         [{var,{1215,18},'Op'},
          {var,{1215,22},'Type'},
          {cons,
              {1215,28},
              {var,{1215,29},'LHS'},
              {cons,{1215,34},{var,{1215,34},'RHS'},{nil,{1215,37}}}}],
         [],
         [{debug_line,1216,546},
          {'case',
              {1216,5},
              {call,
                  {1216,10},
                  {atom,{1216,10},get_range},
                  [{var,{1216,20},'LHS'},
                   {var,{1216,25},'RHS'},
                   {var,{1216,30},'Type'}]},
              [{clause,
                   {1217,9},
                   [{tuple,
                        {1217,9},
                        [{var,{1217,10},'_'},
                         {atom,{1217,13},none},
                         {var,{1217,19},'_'}]}],
                   [],
                   [{debug_line,1218,547},{atom,{1218,13},none}]},
               {clause,
                   {1219,9},
                   [{tuple,
                        {1219,9},
                        [{var,{1219,10},'_'},
                         {var,{1219,13},'_'},
                         {atom,{1219,16},none}]}],
                   [],
                   [{debug_line,1220,548},{atom,{1220,13},none}]},
               {clause,
                   {1221,9},
                   [{tuple,
                        {1221,9},
                        [{atom,{1221,10},float},
                         {var,{1221,17},'_R1'},
                         {var,{1221,22},'_R2'}]}],
                   [],
                   [{debug_line,1222,549},
                    {tuple,
                        {1222,13},
                        [{atom,{1222,13},t_float},{atom,{1222,13},any}]}]},
               {clause,
                   {1223,9},
                   [{tuple,
                        {1223,9},
                        [{atom,{1223,10},integer},
                         {var,{1223,19},'R1'},
                         {var,{1223,23},'R2'}]}],
                   [],
                   [{debug_line,1224,550},
                    {tuple,
                        {1224,13},
                        [{atom,{1224,13},t_integer},
                         {call,
                             {1224,33},
                             {remote,
                                 {1224,44},
                                 {atom,{1224,33},beam_bounds},
                                 {atom,{1224,45},bounds}},
                             [{var,{1224,52},'Op'},
                              {var,{1224,56},'R1'},
                              {var,{1224,60},'R2'}]}]}]},
               {clause,
                   {1225,9},
                   [{tuple,
                        {1225,9},
                        [{atom,{1225,10},number},
                         {var,{1225,18},'R1'},
                         {var,{1225,22},'R2'}]}],
                   [],
                   [{debug_line,1226,551},
                    {tuple,
                        {1226,13},
                        [{atom,{1226,13},t_number},
                         {call,
                             {1226,32},
                             {remote,
                                 {1226,43},
                                 {atom,{1226,32},beam_bounds},
                                 {atom,{1226,44},bounds}},
                             [{var,{1226,51},'Op'},
                              {var,{1226,55},'R1'},
                              {var,{1226,59},'R2'}]}]}]}]}]}]}.
{function,
    {1229,1},
    get_range,3,
    [{clause,
         {1229,1},
         [{var,{1229,1},'_'},{var,{1229,1},'_'},{var,{1229,1},'_'}],
         [[{call,
               {1229,1},
               {remote,
                   {1229,1},
                   {atom,{1229,1},fake},
                   {atom,{1229,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1229,552},{atom,{1229,1},ignore}]},
     {clause,
         {1229,1},
         [{var,{1229,11},'LHS'},{var,{1229,16},'RHS'},{var,{1229,21},'Type'}],
         [],
         [{debug_line,1230,553},
          {call,
              {1230,5},
              {atom,{1230,5},get_range},
              [{block,0,
                   [{call,
                        {1230,15},
                        {atom,{1230,15},meet},
                        [{var,{1230,20},'LHS'},{var,{1230,25},'Type'}]}]},
               {block,0,
                   [{call,
                        {1230,32},
                        {atom,{1230,32},meet},
                        [{var,{1230,37},'RHS'},
                         {var,{1230,42},'Type'}]}]}]}]}]}.
{function,{1232,1},
          get_range,2,
          [{clause,{1232,1},
                   [{var,{1232,1},'_'},{var,{1232,1},'_'}],
                   [[{call,{1232,1},
                           {remote,{1232,1},
                                   {atom,{1232,1},fake},
                                   {atom,{1232,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1232,554},{atom,{1232,1},ignore}]},
           {clause,{1232,1},
                   [{match,{1232,11},
                           {tuple,{1232,11},
                                  [{atom,{1232,11},t_float},
                                   {var,{1232,11},'_'}]},
                           {var,{1232,22},'LHS'}},
                    {match,{1232,27},
                           {tuple,{1232,27},
                                  [{atom,{1232,27},t_float},
                                   {var,{1232,27},'_'}]},
                           {var,{1232,38},'RHS'}}],
                   [],
                   [{debug_line,1233,555},
                    {tuple,{1233,5},
                           [{atom,{1233,6},float},
                            {call,{1233,13},
                                  {atom,{1233,13},get_range},
                                  [{var,{1233,23},'LHS'}]},
                            {call,{1233,29},
                                  {atom,{1233,29},get_range},
                                  [{var,{1233,39},'RHS'}]}]}]},
           {clause,{1234,1},
                   [{match,{1234,11},
                           {tuple,{1234,11},
                                  [{atom,{1234,11},t_integer},
                                   {var,{1234,11},'_'}]},
                           {var,{1234,24},'LHS'}},
                    {match,{1234,29},
                           {tuple,{1234,29},
                                  [{atom,{1234,29},t_integer},
                                   {var,{1234,29},'_'}]},
                           {var,{1234,42},'RHS'}}],
                   [],
                   [{debug_line,1235,556},
                    {tuple,{1235,5},
                           [{atom,{1235,6},integer},
                            {call,{1235,15},
                                  {atom,{1235,15},get_range},
                                  [{var,{1235,25},'LHS'}]},
                            {call,{1235,31},
                                  {atom,{1235,31},get_range},
                                  [{var,{1235,41},'RHS'}]}]}]},
           {clause,{1236,1},
                   [{var,{1236,11},'LHS'},{var,{1236,16},'RHS'}],
                   [],
                   [{debug_line,1237,557},
                    {tuple,{1237,5},
                           [{atom,{1237,6},number},
                            {call,{1237,14},
                                  {atom,{1237,14},get_range},
                                  [{var,{1237,24},'LHS'}]},
                            {call,{1237,30},
                                  {atom,{1237,30},get_range},
                                  [{var,{1237,40},'RHS'}]}]}]}]}.
{function,{1239,1},
          get_range,1,
          [{clause,{1239,1},
                   [{var,{1239,1},'_'}],
                   [[{call,{1239,1},
                           {remote,{1239,1},
                                   {atom,{1239,1},fake},
                                   {atom,{1239,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1239,558},{atom,{1239,1},ignore}]},
           {clause,{1239,1},
                   [{tuple,{1239,11},
                           [{atom,{1239,11},t_float},{var,{1239,11},'_'}]}],
                   [],
                   [{debug_line,1239,559},{atom,{1239,26},any}]},
           {clause,{1240,1},
                   [{tuple,{1240,11},
                           [{atom,{1240,11},t_integer},{var,{1240,31},'R'}]}],
                   [],
                   [{debug_line,1240,560},{var,{1240,38},'R'}]},
           {clause,{1241,1},
                   [{tuple,{1241,11},
                           [{atom,{1241,11},t_number},{var,{1241,30},'R'}]}],
                   [],
                   [{debug_line,1241,561},{var,{1241,37},'R'}]},
           {clause,{1242,1},
                   [{var,{1242,11},'_'}],
                   [],
                   [{debug_line,1242,562},{atom,{1242,17},none}]}]}.
{function,
    {1244,1},
    erlang_map_get_type,2,
    [{clause,
         {1244,1},
         [{var,{1244,1},'_'},{var,{1244,1},'_'}],
         [[{call,
               {1244,1},
               {remote,
                   {1244,1},
                   {atom,{1244,1},fake},
                   {atom,{1244,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1244,563},{atom,{1244,1},ignore}]},
     {clause,
         {1244,1},
         [{var,{1244,21},'Key'},{var,{1244,26},'Map'}],
         [],
         [{debug_line,1245,564},
          {'case',
              {1245,5},
              {call,
                  {1245,10},
                  {atom,{1245,10},meet},
                  [{var,{1245,15},'Map'},
                   {block,0,
                       [{tuple,
                            {1245,20},
                            [{atom,{1245,20},t_map},
                             {atom,{1245,20},any},
                             {atom,{1245,20},any}]}]}]},
              [{clause,
                   {1246,9},
                   [{tuple,
                        {1246,9},
                        [{atom,{1246,9},t_map},
                         {var,{1246,26},'SKey'},
                         {var,{1246,43},'SValue'}]}],
                   [],
                   [{debug_line,1247,565},
                    {'case',
                        {1247,13},
                        {call,
                            {1247,18},
                            {atom,{1247,18},meet},
                            [{var,{1247,23},'SKey'},{var,{1247,29},'Key'}]},
                        [{clause,
                             {1248,17},
                             [{atom,{1248,17},none}],
                             [],
                             [{debug_line,1248,566},{atom,{1248,25},none}]},
                         {clause,
                             {1249,17},
                             [{var,{1249,17},'_'}],
                             [],
                             [{debug_line,1249,567},
                              {var,{1249,22},'SValue'}]}]}]},
               {clause,
                   {1251,9},
                   [{atom,{1251,9},none}],
                   [],
                   [{debug_line,1252,568},{atom,{1252,13},none}]}]}]}]}.
{function,
    {1255,1},
    lists_fold_type,3,
    [{clause,
         {1255,1},
         [{var,{1255,1},'_'},{var,{1255,1},'_'},{var,{1255,1},'_'}],
         [[{call,
               {1255,1},
               {remote,
                   {1255,1},
                   {atom,{1255,1},fake},
                   {atom,{1255,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1255,569},{atom,{1255,1},ignore}]},
     {clause,
         {1255,1},
         [{var,{1255,17},'Fun'},{var,{1255,22},'Init'},{var,{1255,28},'List'}],
         [],
         [{debug_line,1256,570},
          {call,
              {1256,5},
              {atom,{1256,5},lists_fold_type_1},
              [{block,0,
                   [{call,
                        {1256,23},
                        {atom,{1256,23},meet},
                        [{var,{1256,28},'Fun'},
                         {block,0,
                             [{tuple,
                                  {1256,33},
                                  [{atom,{1256,33},t_fun},
                                   {integer,{1256,46},2},
                                   {atom,{1256,33},any},
                                   {atom,{1256,33},any}]}]}]}]},
               {var,{1257,23},'Init'},
               {block,0,
                   [{debug_line,1258,571},
                    {call,
                        {1258,23},
                        {atom,{1258,23},meet},
                        [{var,{1258,28},'List'},
                         {block,0,
                             [{tuple,
                                  {1258,34},
                                  [{atom,{1258,34},t_list},
                                   {atom,{1258,34},any},
                                   {atom,{1258,34},any}]}]}]}]}]}]}]}.
{function,{1260,1},
          lists_fold_type_1,3,
          [{clause,{1260,1},
                   [{var,{1260,1},'_'},{var,{1260,1},'_'},{var,{1260,1},'_'}],
                   [[{call,{1260,1},
                           {remote,{1260,1},
                                   {atom,{1260,1},fake},
                                   {atom,{1260,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1260,572},{atom,{1260,1},ignore}]},
           {clause,{1260,1},
                   [{var,{1260,19},'_Fun'},
                    {var,{1260,25},'Init'},
                    {atom,{1260,31},nil}],
                   [],
                   [{debug_line,1261,573},{var,{1261,5},'Init'}]},
           {clause,{1262,1},
                   [{tuple,{1262,19},
                           [{atom,{1262,19},t_fun},
                            {var,{1262,19},'_'},
                            {var,{1262,19},'_'},
                            {var,{1262,31},'Type'}]},
                    {var,{1262,38},'_Init'},
                    {tuple,{1262,45},
                           [{atom,{1262,45},t_cons},
                            {var,{1262,45},'_'},
                            {var,{1262,45},'_'}]}],
                   [],
                   [{debug_line,1264,574},{var,{1264,5},'Type'}]},
           {clause,{1265,1},
                   [{tuple,{1265,19},
                           [{atom,{1265,19},t_fun},
                            {var,{1265,19},'_'},
                            {var,{1265,19},'_'},
                            {var,{1265,31},'Type'}]},
                    {var,{1265,38},'Init'},
                    {tuple,{1265,44},
                           [{atom,{1265,44},t_list},
                            {var,{1265,44},'_'},
                            {var,{1265,44},'_'}]}],
                   [],
                   [{debug_line,1269,575},
                    {call,{1269,5},
                          {atom,{1269,5},join},
                          [{var,{1269,10},'Type'},{var,{1269,16},'Init'}]}]},
           {clause,{1270,1},
                   [{var,{1270,19},'_Fun'},
                    {var,{1270,25},'_Init'},
                    {var,{1270,32},'_List'}],
                   [],
                   [{debug_line,1271,576},{atom,{1271,5},any}]}]}.
{function,
    {1273,1},
    lists_map_type,2,
    [{clause,
         {1273,1},
         [{var,{1273,1},'_'},{var,{1273,1},'_'}],
         [[{call,
               {1273,1},
               {remote,
                   {1273,1},
                   {atom,{1273,1},fake},
                   {atom,{1273,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1273,577},{atom,{1273,1},ignore}]},
     {clause,
         {1273,1},
         [{var,{1273,16},'Fun'},{var,{1273,21},'Types'}],
         [],
         [{debug_line,1274,578},
          {'case',
              {1274,5},
              {call,
                  {1274,10},
                  {atom,{1274,10},meet},
                  [{var,{1274,15},'Fun'},
                   {block,0,
                       [{tuple,
                            {1274,20},
                            [{atom,{1274,20},t_fun},
                             {integer,{1274,33},1},
                             {atom,{1274,20},any},
                             {atom,{1274,20},any}]}]}]},
              [{clause,
                   {1275,9},
                   [{tuple,
                        {1275,9},
                        [{atom,{1275,9},t_fun},
                         {var,{1275,9},'_'},
                         {var,{1275,9},'_'},
                         {var,{1275,21},'Type'}]}],
                   [],
                   [{debug_line,1275,579},
                    {call,
                        {1275,30},
                        {atom,{1275,30},lists_map_type_1},
                        [{var,{1275,47},'Types'},{var,{1275,54},'Type'}]}]},
               {clause,
                   {1276,9},
                   [{atom,{1276,9},none}],
                   [],
                   [{debug_line,1276,580},{atom,{1276,17},none}]}]}]}]}.
{function,{1279,1},
          lists_map_type_1,2,
          [{clause,{1279,1},
                   [{var,{1279,1},'_'},{var,{1279,1},'_'}],
                   [[{call,{1279,1},
                           {remote,{1279,1},
                                   {atom,{1279,1},fake},
                                   {atom,{1279,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1279,581},{atom,{1279,1},ignore}]},
           {clause,{1279,1},
                   [{atom,{1279,18},nil},{var,{1279,23},'_ElementType'}],
                   [],
                   [{debug_line,1280,582},{atom,{1280,5},nil}]},
           {clause,{1281,1},
                   [{tuple,{1281,18},
                           [{atom,{1281,18},t_cons},
                            {var,{1281,18},'_'},
                            {var,{1281,18},'_'}]},
                    {atom,{1281,29},none}],
                   [],
                   [{debug_line,1283,583},{atom,{1283,5},none}]},
           {clause,{1284,1},
                   [{tuple,{1284,18},
                           [{atom,{1284,18},t_cons},
                            {var,{1284,18},'_'},
                            {var,{1284,18},'_'}]},
                    {var,{1284,29},'ElementType'}],
                   [],
                   [{debug_line,1285,584},
                    {call,{1285,5},
                          {atom,{1285,5},proper_cons},
                          [{var,{1285,17},'ElementType'}]}]},
           {clause,{1286,1},
                   [{var,{1286,18},'_'},{atom,{1286,21},none}],
                   [],
                   [{debug_line,1289,585},{atom,{1289,5},nil}]},
           {clause,{1290,1},
                   [{var,{1290,18},'_'},{var,{1290,21},'ElementType'}],
                   [],
                   [{debug_line,1291,586},
                    {call,{1291,5},
                          {atom,{1291,5},proper_list},
                          [{var,{1291,17},'ElementType'}]}]}]}.
{function,
    {1293,1},
    lists_mapfold_type,3,
    [{clause,
         {1293,1},
         [{var,{1293,1},'_'},{var,{1293,1},'_'},{var,{1293,1},'_'}],
         [[{call,
               {1293,1},
               {remote,
                   {1293,1},
                   {atom,{1293,1},fake},
                   {atom,{1293,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1293,587},{atom,{1293,1},ignore}]},
     {clause,
         {1293,1},
         [{var,{1293,20},'Fun'},{var,{1293,25},'Init'},{var,{1293,31},'List'}],
         [],
         [{debug_line,1294,588},
          {'case',
              {1294,5},
              {tuple,
                  {1294,10},
                  [{call,
                       {1294,11},
                       {atom,{1294,11},meet},
                       [{var,{1294,16},'Fun'},
                        {block,0,
                            [{tuple,
                                 {1294,21},
                                 [{atom,{1294,21},t_fun},
                                  {atom,{1294,21},any},
                                  {atom,{1294,21},any},
                                  {tuple,
                                      {1294,33},
                                      [{atom,{1294,33},t_tuple},
                                       {integer,{1294,47},2},
                                       {atom,{1294,33},false},
                                       {map,{1294,33},[]}]}]}]}]},
                   {call,
                       {1294,53},
                       {atom,{1294,53},meet},
                       [{var,{1294,58},'List'},
                        {block,0,
                            [{tuple,
                                 {1294,64},
                                 [{atom,{1294,64},t_list},
                                  {atom,{1294,64},any},
                                  {atom,{1294,64},any}]}]}]}]},
              [{clause,
                   {1295,9},
                   [{tuple,
                        {1295,9},
                        [{var,{1295,10},'_'},{atom,{1295,13},nil}]}],
                   [],
                   [{debug_line,1296,589},
                    {call,
                        {1296,13},
                        {atom,{1296,13},make_two_tuple},
                        [{atom,{1296,28},nil},{var,{1296,33},'Init'}]}]},
               {clause,
                   {1297,9},
                   [{tuple,
                        {1297,9},
                        [{tuple,
                             {1297,10},
                             [{atom,{1297,10},t_fun},
                              {var,{1297,10},'_'},
                              {var,{1297,10},'_'},
                              {tuple,
                                  {1297,22},
                                  [{atom,{1297,22},t_tuple},
                                   {var,{1297,22},'_'},
                                   {var,{1297,22},'_'},
                                   {var,{1297,40},'Es'}]}]},
                         {var,{1297,46},'ListType'}]}],
                   [],
                   [{debug_line,1298,590},
                    {match,
                        {1298,13},
                        {var,{1298,13},'ElementType'},
                        {call,
                            {1298,27},
                            {remote,
                                {1298,37},
                                {atom,{1298,27},beam_types},
                                {atom,{1298,38},get_tuple_element}},
                            [{integer,{1298,56},1},{var,{1298,59},'Es'}]}},
                    {debug_line,1299,591},
                    {match,
                        {1299,13},
                        {var,{1299,13},'AccType'},
                        {call,
                            {1299,23},
                            {remote,
                                {1299,33},
                                {atom,{1299,23},beam_types},
                                {atom,{1299,34},get_tuple_element}},
                            [{integer,{1299,52},2},{var,{1299,55},'Es'}]}},
                    {debug_line,1300,592},
                    {call,
                        {1300,13},
                        {atom,{1300,13},lists_mapfold_type_1},
                        [{var,{1300,34},'ListType'},
                         {var,{1300,44},'ElementType'},
                         {var,{1300,57},'Init'},
                         {var,{1300,63},'AccType'}]}]},
               {clause,
                   {1301,9},
                   [{tuple,
                        {1301,9},
                        [{tuple,
                             {1301,10},
                             [{atom,{1301,10},t_fun},
                              {var,{1301,10},'_'},
                              {var,{1301,10},'_'},
                              {atom,{1301,22},none}]},
                         {tuple,
                             {1301,29},
                             [{atom,{1301,29},t_list},
                              {var,{1301,29},'_'},
                              {var,{1301,29},'_'}]}]}],
                   [],
                   [{debug_line,1305,593},
                    {call,
                        {1305,13},
                        {atom,{1305,13},make_two_tuple},
                        [{atom,{1305,28},nil},{var,{1305,33},'Init'}]}]},
               {clause,
                   {1306,9},
                   [{var,{1306,9},'_'}],
                   [],
                   [{debug_line,1307,594},{atom,{1307,13},none}]}]}]}]}.
{function,
    {1310,1},
    lists_mapfold_type_1,4,
    [{clause,
         {1310,1},
         [{var,{1310,1},'_'},
          {var,{1310,1},'_'},
          {var,{1310,1},'_'},
          {var,{1310,1},'_'}],
         [[{call,
               {1310,1},
               {remote,
                   {1310,1},
                   {atom,{1310,1},fake},
                   {atom,{1310,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1310,595},{atom,{1310,1},ignore}]},
     {clause,
         {1310,1},
         [{tuple,
              {1310,22},
              [{atom,{1310,22},t_cons},
               {var,{1310,22},'_'},
               {var,{1310,22},'_'}]},
          {var,{1310,33},'ElementType'},
          {var,{1310,46},'_Init'},
          {var,{1310,53},'AccType'}],
         [],
         [{debug_line,1312,596},
          {call,
              {1312,5},
              {atom,{1312,5},make_two_tuple},
              [{block,0,
                   [{call,
                        {1312,20},
                        {atom,{1312,20},proper_cons},
                        [{var,{1312,32},'ElementType'}]}]},
               {var,{1312,46},'AccType'}]}]},
     {clause,
         {1313,1},
         [{var,{1313,22},'_'},
          {var,{1313,25},'ElementType'},
          {var,{1313,38},'Init'},
          {var,{1313,44},'AccType0'}],
         [],
         [{debug_line,1316,597},
          {match,
              {1316,5},
              {var,{1316,5},'AccType'},
              {call,
                  {1316,15},
                  {atom,{1316,15},join},
                  [{var,{1316,20},'AccType0'},{var,{1316,30},'Init'}]}},
          {debug_line,1317,598},
          {call,
              {1317,5},
              {atom,{1317,5},make_two_tuple},
              [{block,0,
                   [{call,
                        {1317,20},
                        {atom,{1317,20},proper_list},
                        [{var,{1317,32},'ElementType'}]}]},
               {var,{1317,46},'AccType'}]}]}]}.
{function,
    {1319,1},
    lists_unzip_type,2,
    [{clause,
         {1319,1},
         [{var,{1319,1},'_'},{var,{1319,1},'_'}],
         [[{call,
               {1319,1},
               {remote,
                   {1319,1},
                   {atom,{1319,1},fake},
                   {atom,{1319,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1319,599},{atom,{1319,1},ignore}]},
     {clause,
         {1319,1},
         [{var,{1319,18},'Size'},{var,{1319,24},'List'}],
         [],
         [{debug_line,1320,600},
          {'case',
              {1320,5},
              {call,
                  {1320,10},
                  {atom,{1320,10},meet},
                  [{var,{1320,15},'List'},
                   {block,0,
                       [{tuple,
                            {1320,21},
                            [{atom,{1320,21},t_list},
                             {tuple,
                                 {1320,34},
                                 [{atom,{1320,34},t_tuple},
                                  {var,{1320,59},'Size'},
                                  {atom,{1320,49},true},
                                  {map,{1320,34},[]}]},
                             {atom,{1320,21},any}]}]}]},
              [{clause,
                   {1321,9},
                   [{atom,{1321,9},none}],
                   [],
                   [{debug_line,1322,601},{atom,{1322,13},none}]},
               {clause,
                   {1323,9},
                   [{var,{1323,9},'ListType'}],
                   [],
                   [{debug_line,1324,602},
                    {match,
                        {1324,13},
                        {var,{1324,13},'Es'},
                        {call,
                            {1324,18},
                            {atom,{1324,18},lut_make_elements},
                            [{block,0,
                                 [{call,
                                      {1324,36},
                                      {atom,{1324,36},lut_list_types},
                                      [{var,{1324,51},'Size'},
                                       {var,{1324,57},'ListType'}]}]},
                             {integer,{1324,68},1},
                             {block,0,[{map,{1324,71},[]}]}]}},
                    {debug_line,1325,603},
                    {tuple,
                        {1325,13},
                        [{atom,{1325,13},t_tuple},
                         {var,{1325,27},'Size'},
                         {atom,{1325,38},true},
                         {var,{1325,52},'Es'}]}]}]}]}]}.
{function,
    {1328,1},
    lut_make_elements,3,
    [{clause,
         {1328,1},
         [{var,{1328,1},'_'},{var,{1328,1},'_'},{var,{1328,1},'_'}],
         [[{call,
               {1328,1},
               {remote,
                   {1328,1},
                   {atom,{1328,1},fake},
                   {atom,{1328,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1328,604},{atom,{1328,1},ignore}]},
     {clause,
         {1328,1},
         [{cons,{1328,19},{var,{1328,20},'Type'},{var,{1328,27},'Types'}},
          {var,{1328,35},'Index'},
          {var,{1328,42},'Es0'}],
         [],
         [{debug_line,1329,605},
          {match,
              {1329,5},
              {var,{1329,5},'Es'},
              {call,
                  {1329,10},
                  {remote,
                      {1329,20},
                      {atom,{1329,10},beam_types},
                      {atom,{1329,21},set_tuple_element}},
                  [{var,{1329,39},'Index'},
                   {var,{1329,46},'Type'},
                   {var,{1329,52},'Es0'}]}},
          {debug_line,1330,606},
          {call,
              {1330,5},
              {atom,{1330,5},lut_make_elements},
              [{var,{1330,23},'Types'},
               {block,0,
                   [{op,{1330,36},
                        '+',
                        {var,{1330,30},'Index'},
                        {integer,{1330,38},1}}]},
               {var,{1330,41},'Es'}]}]},
     {clause,
         {1331,1},
         [{nil,{1331,19}},{var,{1331,23},'_Index'},{var,{1331,31},'Es'}],
         [],
         [{debug_line,1332,607},{var,{1332,5},'Es'}]}]}.
{function,{1334,1},
          lut_list_types,2,
          [{clause,{1334,1},
                   [{var,{1334,1},'_'},{var,{1334,1},'_'}],
                   [[{call,{1334,1},
                           {remote,{1334,1},
                                   {atom,{1334,1},fake},
                                   {atom,{1334,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1334,608},{atom,{1334,1},ignore}]},
           {clause,{1334,1},
                   [{var,{1334,16},'Size'},
                    {tuple,{1334,22},
                           [{atom,{1334,22},t_cons},
                            {var,{1334,35},'Tuple'},
                            {var,{1334,22},'_'}]}],
                   [],
                   [{debug_line,1335,609},
                    {match,{1335,5},
                           {tuple,{1335,5},
                                  [{atom,{1335,5},t_tuple},
                                   {var,{1335,19},'Size'},
                                   {var,{1335,5},'_'},
                                   {var,{1335,33},'Es'}]},
                           {call,{1335,39},
                                 {atom,{1335,39},normalize},
                                 [{var,{1335,49},'Tuple'}]}},
                    {debug_line,1336,610},
                    {match,{1336,5},
                           {var,{1336,5},'Types'},
                           {call,{1336,13},
                                 {atom,{1336,13},lut_element_types},
                                 [{integer,{1336,31},1},
                                  {var,{1336,34},'Size'},
                                  {var,{1336,40},'Es'}]}},
                    {debug_line,1337,611},
                    {lc,{1337,5},
                        {block,0,
                               [{call,{1337,6},
                                      {atom,{1337,6},proper_cons},
                                      [{var,{1337,18},'T'}]}]},
                        [{block,0,[{atom,{1337,29},true}]},
                         {generate,{1337,26},
                                   {var,{1337,24},'T'},
                                   {var,{1337,29},'Types'}}]}]},
           {clause,{1338,1},
                   [{var,{1338,16},'Size'},
                    {tuple,{1338,22},
                           [{atom,{1338,22},t_list},
                            {var,{1338,35},'Tuple'},
                            {var,{1338,22},'_'}]}],
                   [],
                   [{debug_line,1339,612},
                    {match,{1339,5},
                           {tuple,{1339,5},
                                  [{atom,{1339,5},t_tuple},
                                   {var,{1339,19},'Size'},
                                   {var,{1339,5},'_'},
                                   {var,{1339,33},'Es'}]},
                           {call,{1339,39},
                                 {atom,{1339,39},normalize},
                                 [{var,{1339,49},'Tuple'}]}},
                    {debug_line,1340,613},
                    {match,{1340,5},
                           {var,{1340,5},'Types'},
                           {call,{1340,13},
                                 {atom,{1340,13},lut_element_types},
                                 [{integer,{1340,31},1},
                                  {var,{1340,34},'Size'},
                                  {var,{1340,40},'Es'}]}},
                    {debug_line,1341,614},
                    {lc,{1341,5},
                        {block,0,
                               [{call,{1341,6},
                                      {atom,{1341,6},proper_list},
                                      [{var,{1341,18},'T'}]}]},
                        [{block,0,[{atom,{1341,29},true}]},
                         {generate,{1341,26},
                                   {var,{1341,24},'T'},
                                   {var,{1341,29},'Types'}}]}]},
           {clause,{1342,1},
                   [{var,{1342,16},'Size'},{atom,{1342,22},nil}],
                   [],
                   [{debug_line,1343,615},
                    {call,{1343,5},
                          {remote,{1343,10},
                                  {atom,{1343,5},lists},
                                  {atom,{1343,11},duplicate}},
                          [{var,{1343,21},'Size'},{atom,{1343,27},nil}]}]}]}.
{function,
    {1345,1},
    lut_element_types,3,
    [{clause,
         {1345,1},
         [{var,{1345,1},'_'},{var,{1345,1},'_'},{var,{1345,1},'_'}],
         [[{call,
               {1345,1},
               {remote,
                   {1345,1},
                   {atom,{1345,1},fake},
                   {atom,{1345,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1345,616},{atom,{1345,1},ignore}]},
     {clause,
         {1345,1},
         [{var,{1345,19},'Index'},{var,{1345,26},'Max'},{map,{1345,31},[]}],
         [[{op,{1345,47},'>',{var,{1345,41},'Index'},{var,{1345,49},'Max'}}]],
         [{debug_line,1346,617},{nil,{1346,5}}]},
     {clause,
         {1347,1},
         [{var,{1347,19},'Index'},{var,{1347,26},'Max'},{var,{1347,31},'Es'}],
         [],
         [{debug_line,1348,618},
          {match,
              {1348,5},
              {var,{1348,5},'ElementType'},
              {call,
                  {1348,19},
                  {remote,
                      {1348,29},
                      {atom,{1348,19},beam_types},
                      {atom,{1348,30},get_tuple_element}},
                  [{var,{1348,48},'Index'},{var,{1348,55},'Es'}]}},
          {debug_line,1349,619},
          {cons,
              {1349,5},
              {var,{1349,6},'ElementType'},
              {call,
                  {1349,20},
                  {atom,{1349,20},lut_element_types},
                  [{block,0,
                       [{op,{1349,44},
                            '+',
                            {var,{1349,38},'Index'},
                            {integer,{1349,46},1}}]},
                   {var,{1349,49},'Max'},
                   {var,{1349,54},'Es'}]}}]}]}.
{function,
    {1355,1},
    lists_zip_types,1,
    [{clause,
         {1355,1},
         [{var,{1355,1},'_'}],
         [[{call,
               {1355,1},
               {remote,
                   {1355,1},
                   {atom,{1355,1},fake},
                   {atom,{1355,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1355,620},{atom,{1355,1},ignore}]},
     {clause,
         {1355,1},
         [{var,{1355,17},'Types0'}],
         [],
         [{debug_line,1356,621},
          {match,
              {1356,5},
              {var,{1356,5},'Types'},
              {lc,{1356,13},
                  {block,0,
                      [{call,
                           {1356,14},
                           {atom,{1356,14},meet},
                           [{var,{1356,19},'T'},
                            {block,0,
                                [{tuple,
                                     {1356,22},
                                     [{atom,{1356,22},t_list},
                                      {atom,{1356,22},any},
                                      {atom,{1356,41},nil}]}]}]}]},
                  [{block,0,[{atom,{1356,55},true}]},
                   {generate,
                       {1356,52},
                       {var,{1356,50},'T'},
                       {var,{1356,55},'Types0'}}]}},
          {debug_line,1357,622},
          {call,
              {1357,5},
              {atom,{1357,5},lists_zip_types_1},
              [{var,{1357,23},'Types'},
               {block,0,[{'fun',{1357,30},{function,proper_list,1}}]},
               {block,0,[{map,{1357,49},[]}]},
               {integer,{1357,54},1}]}]}]}.
{function,
    {1359,1},
    lists_zip_types_1,4,
    [{clause,
         {1359,1},
         [{var,{1359,1},'_'},
          {var,{1359,1},'_'},
          {var,{1359,1},'_'},
          {var,{1359,1},'_'}],
         [[{call,
               {1359,1},
               {remote,
                   {1359,1},
                   {atom,{1359,1},fake},
                   {atom,{1359,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1359,623},{atom,{1359,1},ignore}]},
     {clause,
         {1359,1},
         [{cons,{1359,19},{atom,{1359,20},none},{var,{1359,27},'_'}},
          {var,{1359,31},'_ListFun'},
          {var,{1359,41},'_Es'},
          {var,{1359,46},'_N'}],
         [],
         [{debug_line,1361,624},
          {tuple,{1361,5},[{atom,{1361,6},none},{atom,{1361,12},nil}]}]},
     {clause,
         {1362,1},
         [{cons,{1362,19},{atom,{1362,20},nil},{var,{1362,26},'_'}},
          {var,{1362,30},'_ListFun'},
          {var,{1362,40},'_Es'},
          {var,{1362,45},'_N'}],
         [],
         [{debug_line,1364,625},
          {tuple,{1364,5},[{atom,{1364,6},nil},{atom,{1364,11},nil}]}]},
     {clause,
         {1365,1},
         [{cons,
              {1365,19},
              {tuple,
                  {1365,20},
                  [{atom,{1365,20},t_cons},
                   {var,{1365,33},'Type'},
                   {var,{1365,20},'_'}]},
              {var,{1365,41},'Lists'}},
          {var,{1365,49},'_ListFun'},
          {var,{1365,59},'Es0'},
          {var,{1365,64},'N'}],
         [],
         [{debug_line,1366,626},
          {match,
              {1366,5},
              {var,{1366,5},'Es'},
              {call,
                  {1366,10},
                  {remote,
                      {1366,20},
                      {atom,{1366,10},beam_types},
                      {atom,{1366,21},set_tuple_element}},
                  [{var,{1366,39},'N'},
                   {var,{1366,42},'Type'},
                   {var,{1366,48},'Es0'}]}},
          {debug_line,1368,627},
          {call,
              {1368,5},
              {atom,{1368,5},lists_zip_types_1},
              [{var,{1368,23},'Lists'},
               {block,0,[{'fun',{1368,30},{function,proper_cons,1}}]},
               {var,{1368,49},'Es'},
               {block,0,
                   [{op,{1368,55},
                        '+',
                        {var,{1368,53},'N'},
                        {integer,{1368,57},1}}]}]}]},
     {clause,
         {1369,1},
         [{cons,
              {1369,19},
              {tuple,
                  {1369,20},
                  [{atom,{1369,20},t_list},
                   {var,{1369,33},'Type'},
                   {var,{1369,20},'_'}]},
              {var,{1369,41},'Lists'}},
          {var,{1369,49},'ListFun'},
          {var,{1369,58},'Es0'},
          {var,{1369,63},'N'}],
         [],
         [{debug_line,1370,628},
          {match,
              {1370,5},
              {var,{1370,5},'Es'},
              {call,
                  {1370,10},
                  {remote,
                      {1370,20},
                      {atom,{1370,10},beam_types},
                      {atom,{1370,21},set_tuple_element}},
                  [{var,{1370,39},'N'},
                   {var,{1370,42},'Type'},
                   {var,{1370,48},'Es0'}]}},
          {debug_line,1371,629},
          {call,
              {1371,5},
              {atom,{1371,5},lists_zip_types_1},
              [{var,{1371,23},'Lists'},
               {var,{1371,30},'ListFun'},
               {var,{1371,39},'Es'},
               {block,0,
                   [{op,{1371,45},
                        '+',
                        {var,{1371,43},'N'},
                        {integer,{1371,47},1}}]}]}]},
     {clause,
         {1372,1},
         [{nil,{1372,19}},
          {var,{1372,23},'ListFun'},
          {var,{1372,32},'Es'},
          {var,{1372,36},'N'}],
         [],
         [{debug_line,1373,630},
          {match,
              {1373,5},
              {var,{1373,5},'ElementType'},
              {tuple,
                  {1373,19},
                  [{atom,{1373,19},t_tuple},
                   {op,{1373,45},
                       '-',
                       {var,{1373,44},'N'},
                       {integer,{1373,46},1}},
                   {atom,{1373,34},true},
                   {var,{1373,57},'Es'}]}},
          {debug_line,1374,631},
          {match,
              {1374,5},
              {var,{1374,5},'RetType'},
              {call,
                  {1374,15},
                  {var,{1374,15},'ListFun'},
                  [{var,{1374,23},'ElementType'}]}},
          {debug_line,1375,632},
          {match,
              {1375,5},
              {var,{1375,5},'ArgType'},
              {call,
                  {1375,15},
                  {var,{1375,15},'ListFun'},
                  [{atom,{1375,23},any}]}},
          {debug_line,1376,633},
          {tuple,
              {1376,5},
              [{var,{1376,6},'RetType'},{var,{1376,15},'ArgType'}]}]}]}.
{function,
    {1378,1},
    lists_zipwith_types,2,
    [{clause,
         {1378,1},
         [{var,{1378,1},'_'},{var,{1378,1},'_'}],
         [[{call,
               {1378,1},
               {remote,
                   {1378,1},
                   {atom,{1378,1},fake},
                   {atom,{1378,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1378,634},{atom,{1378,1},ignore}]},
     {clause,
         {1378,1},
         [{var,{1378,21},'Fun'},{var,{1378,26},'Types0'}],
         [],
         [{debug_line,1379,635},
          {match,
              {1379,5},
              {var,{1379,5},'ElementType'},
              {'case',
                  {1379,19},
                  {call,
                      {1379,24},
                      {atom,{1379,24},meet},
                      [{var,{1379,29},'Fun'},
                       {block,0,
                           [{tuple,
                                {1379,34},
                                [{atom,{1379,34},t_fun},
                                 {atom,{1379,34},any},
                                 {atom,{1379,34},any},
                                 {atom,{1379,34},any}]}]}]},
                  [{clause,
                       {1380,23},
                       [{tuple,
                            {1380,23},
                            [{atom,{1380,23},t_fun},
                             {var,{1380,23},'_'},
                             {var,{1380,23},'_'},
                             {var,{1380,35},'T'}]}],
                       [],
                       [{debug_line,1380,636},{var,{1380,41},'T'}]},
                   {clause,
                       {1381,23},
                       [{atom,{1381,23},none}],
                       [],
                       [{debug_line,1381,637},{atom,{1381,31},none}]}]}},
          {debug_line,1383,638},
          {match,
              {1383,5},
              {var,{1383,5},'Types'},
              {lc,{1383,13},
                  {block,0,
                      [{call,
                           {1383,14},
                           {atom,{1383,14},meet},
                           [{var,{1383,19},'T'},
                            {block,0,
                                [{tuple,
                                     {1383,22},
                                     [{atom,{1383,22},t_list},
                                      {atom,{1383,22},any},
                                      {atom,{1383,41},nil}]}]}]}]},
                  [{block,0,[{atom,{1383,55},true}]},
                   {generate,
                       {1383,52},
                       {var,{1383,50},'T'},
                       {var,{1383,55},'Types0'}}]}},
          {debug_line,1384,639},
          {call,
              {1384,5},
              {atom,{1384,5},lists_zipwith_type_1},
              [{var,{1384,26},'Types'},{var,{1384,33},'ElementType'}]}]}]}.
{function,{1386,1},
          lists_zipwith_type_1,2,
          [{clause,{1386,1},
                   [{var,{1386,1},'_'},{var,{1386,1},'_'}],
                   [[{call,{1386,1},
                           {remote,{1386,1},
                                   {atom,{1386,1},fake},
                                   {atom,{1386,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1386,640},{atom,{1386,1},ignore}]},
           {clause,{1386,1},
                   [{cons,{1386,22},{atom,{1386,23},nil},{var,{1386,29},'_'}},
                    {var,{1386,33},'_ElementType'}],
                   [],
                   [{debug_line,1388,641},
                    {tuple,{1388,5},
                           [{atom,{1388,6},nil},{atom,{1388,11},nil}]}]},
           {clause,{1389,1},
                   [{cons,{1389,22},{atom,{1389,23},none},{var,{1389,30},'_'}},
                    {var,{1389,34},'_ElementType'}],
                   [],
                   [{debug_line,1391,642},
                    {tuple,{1391,5},
                           [{atom,{1391,6},none},{atom,{1391,12},any}]}]},
           {clause,{1392,1},
                   [{cons,{1392,22},
                          {tuple,{1392,23},
                                 [{atom,{1392,23},t_cons},
                                  {var,{1392,23},'_'},
                                  {var,{1392,23},'_'}]},
                          {var,{1392,35},'_Lists'}},
                    {atom,{1392,44},none}],
                   [],
                   [{debug_line,1395,643},
                    {tuple,{1395,5},
                           [{atom,{1395,6},none},{atom,{1395,12},any}]}]},
           {clause,{1396,1},
                   [{cons,{1396,22},
                          {tuple,{1396,23},
                                 [{atom,{1396,23},t_cons},
                                  {var,{1396,23},'_'},
                                  {var,{1396,23},'_'}]},
                          {var,{1396,35},'_Lists'}},
                    {var,{1396,44},'ElementType'}],
                   [],
                   [{debug_line,1398,644},
                    {match,{1398,5},
                           {var,{1398,5},'RetType'},
                           {call,{1398,15},
                                 {atom,{1398,15},proper_cons},
                                 [{var,{1398,27},'ElementType'}]}},
                    {debug_line,1399,645},
                    {match,{1399,5},
                           {var,{1399,5},'ArgType'},
                           {call,{1399,15},{atom,{1399,15},proper_cons},[]}},
                    {debug_line,1400,646},
                    {tuple,{1400,5},
                           [{var,{1400,6},'RetType'},
                            {var,{1400,15},'ArgType'}]}]},
           {clause,{1401,1},
                   [{cons,{1401,22},
                          {tuple,{1401,23},
                                 [{atom,{1401,23},t_list},
                                  {var,{1401,23},'_'},
                                  {var,{1401,23},'_'}]},
                          {var,{1401,35},'Lists'}},
                    {var,{1401,43},'ElementType'}],
                   [],
                   [{debug_line,1402,647},
                    {call,{1402,5},
                          {atom,{1402,5},lists_zipwith_type_1},
                          [{var,{1402,26},'Lists'},
                           {var,{1402,33},'ElementType'}]}]},
           {clause,{1403,1},
                   [{nil,{1403,22}},{atom,{1403,26},none}],
                   [],
                   [{debug_line,1406,648},
                    {tuple,{1406,5},
                           [{atom,{1406,6},nil},{atom,{1406,11},nil}]}]},
           {clause,{1407,1},
                   [{nil,{1407,22}},{var,{1407,26},'ElementType'}],
                   [],
                   [{debug_line,1408,649},
                    {match,{1408,5},
                           {var,{1408,5},'RetType'},
                           {call,{1408,15},
                                 {atom,{1408,15},proper_list},
                                 [{var,{1408,27},'ElementType'}]}},
                    {debug_line,1409,650},
                    {match,{1409,5},
                           {var,{1409,5},'ArgType'},
                           {call,{1409,15},{atom,{1409,15},proper_list},[]}},
                    {debug_line,1410,651},
                    {tuple,{1410,5},
                           [{var,{1410,6},'RetType'},
                            {var,{1410,15},'ArgType'}]}]}]}.
{function,
 {1412,1},
 maps_remove_type,2,
 [{clause,
   {1412,1},
   [{var,{1412,1},'_'},{var,{1412,1},'_'}],
   [[{call,
      {1412,1},
      {remote,{1412,1},{atom,{1412,1},fake},{atom,{1412,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1412,652},{atom,{1412,1},ignore}]},
  {clause,
   {1412,1},
   [{var,{1412,18},'Key'},{var,{1412,23},'Map0'}],
   [],
   [{debug_line,1413,653},
    {'case',
     {1413,5},
     {call,
      {1413,10},
      {atom,{1413,10},meet},
      [{var,{1413,15},'Map0'},
       {block,0,
        [{tuple,
          {1413,21},
          [{atom,{1413,21},t_map},
           {atom,{1413,21},any},
           {atom,{1413,21},any}]}]}]},
     [{clause,
       {1414,9},
       [{match,
         {1414,9},
         {tuple,
          {1414,9},
          [{atom,{1414,9},t_map},{var,{1414,26},'SKey0'},{var,{1414,9},'_'}]},
         {var,{1414,33},'Map'}}],
       [],
       [{debug_line,1415,654},
        {'case',
         {1415,13},
         {call,
          {1415,18},
          {remote,
           {1415,28},
           {atom,{1415,18},beam_types},
           {atom,{1415,29},is_singleton_type}},
          [{var,{1415,47},'Key'}]},
         [{clause,
           {1416,17},
           [{atom,{1416,17},true}],
           [],
           [{debug_line,1417,655},
            {match,
             {1417,21},
             {var,{1417,21},'SKey'},
             {call,
              {1417,28},
              {remote,
               {1417,38},
               {atom,{1417,28},beam_types},
               {atom,{1417,39},subtract}},
              [{var,{1417,48},'SKey0'},{var,{1417,55},'Key'}]}},
            {debug_line,1418,656},
            {block,
             {1418,21},
             [{match,{1418,21},{var,{1418,21},rec4},{var,{1418,21},'Map'}},
              {'case',
               {1418,31},
               {var,{1418,21},rec4},
               [{clause,
                 {1418,31},
                 [{tuple,
                   {1418,31},
                   [{atom,{1418,31},t_map},
                    {var,{1418,31},'_'},
                    {var,{1418,31},'_'}]}],
                 [],
                 [{call,
                   {1418,31},
                   {remote,
                    {1418,31},
                    {atom,{1418,31},erlang},
                    {atom,{1418,31},setelement}},
                   [{integer,{1418,31},2},
                    {var,{1418,21},rec4},
                    {var,{1418,41},'SKey'}]}]},
                {clause,
                 [{generated,true},{location,{1418,31}}],
                 [{var,[{generated,true},{location,{1418,31}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1418,31}}],
                   {remote,
                    [{generated,true},{location,{1418,31}}],
                    {atom,[{generated,true},{location,{1418,31}}],erlang},
                    {atom,[{generated,true},{location,{1418,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1418,31}}],
                     [{atom,[{generated,true},{location,{1418,31}}],badrecord},
                      {var,{1418,21},rec4}]}]}]}]}]}]},
          {clause,
           {1419,17},
           [{atom,{1419,17},false}],
           [],
           [{debug_line,1420,657},{var,{1420,21},'Map'}]}]}]},
      {clause,
       {1422,9},
       [{atom,{1422,9},none}],
       [],
       [{debug_line,1423,658},{atom,{1423,13},none}]}]}]}]}.
{function,
    {1430,1},
    sub_unsafe_type_test,2,
    [{clause,
         {1430,1},
         [{var,{1430,1},'_'},{var,{1430,1},'_'}],
         [[{call,
               {1430,1},
               {remote,
                   {1430,1},
                   {atom,{1430,1},fake},
                   {atom,{1430,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1430,659},{atom,{1430,1},ignore}]},
     {clause,
         {1430,1},
         [{var,{1430,22},'ArgType'},{var,{1430,31},'Required'}],
         [],
         [{debug_line,1431,660},
          {match,
              {1431,5},
              {var,{1431,5},'RetType'},
              {'case',
                  {1432,9},
                  {call,
                      {1432,14},
                      {atom,{1432,14},meet},
                      [{var,{1432,19},'ArgType'},{var,{1432,28},'Required'}]},
                  [{clause,
                       {1433,13},
                       [{var,{1433,13},'ArgType'}],
                       [],
                       [{debug_line,1433,661},
                        {tuple,
                            {1433,24},
                            [{atom,{1433,24},t_atom},
                             {cons,
                                 {1433,41},
                                 {atom,{1433,42},true},
                                 {nil,{1433,46}}}]}]},
                   {clause,
                       {1434,13},
                       [{atom,{1434,13},none}],
                       [],
                       [{debug_line,1434,662},
                        {tuple,
                            {1434,21},
                            [{atom,{1434,21},t_atom},
                             {cons,
                                 {1434,38},
                                 {atom,{1434,39},false},
                                 {nil,{1434,44}}}]}]},
                   {clause,
                       {1435,13},
                       [{var,{1435,13},'_'}],
                       [],
                       [{debug_line,1435,663},
                        {call,
                            {1435,18},
                            {remote,
                                {1435,28},
                                {atom,{1435,18},beam_types},
                                {atom,{1435,29},make_boolean}},
                            []}]}]}},
          {debug_line,1437,664},
          {call,
              {1437,5},
              {atom,{1437,5},sub_unsafe},
              [{var,{1437,16},'RetType'},
               {block,0,
                   [{cons,
                        {1437,25},
                        {atom,{1437,26},any},
                        {nil,{1437,29}}}]}]}]}]}.
{function,{1439,1},
          sub_unsafe,2,
          [{clause,{1439,1},
                   [{var,{1439,1},'_'},{var,{1439,1},'_'}],
                   [[{call,{1439,1},
                           {remote,{1439,1},
                                   {atom,{1439,1},fake},
                                   {atom,{1439,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1439,665},{atom,{1439,1},ignore}]},
           {clause,{1439,1},
                   [{var,{1439,12},'RetType'},{var,{1439,21},'ArgTypes'}],
                   [],
                   [{debug_line,1440,666},
                    {tuple,{1440,5},
                           [{var,{1440,6},'RetType'},
                            {var,{1440,15},'ArgTypes'},
                            {atom,{1440,25},false}]}]}]}.
{function,{1442,1},
          sub_safe,2,
          [{clause,{1442,1},
                   [{var,{1442,1},'_'},{var,{1442,1},'_'}],
                   [[{call,{1442,1},
                           {remote,{1442,1},
                                   {atom,{1442,1},fake},
                                   {atom,{1442,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1442,667},{atom,{1442,1},ignore}]},
           {clause,{1442,1},
                   [{var,{1442,10},'RetType'},{var,{1442,19},'ArgTypes'}],
                   [],
                   [{debug_line,1443,668},
                    {tuple,{1443,5},
                           [{var,{1443,6},'RetType'},
                            {var,{1443,15},'ArgTypes'},
                            {atom,{1443,25},true}]}]}]}.
{function,{1445,1},
          proper_cons,0,
          [{clause,{1445,1},
                   [],
                   [[{call,{1445,1},
                           {remote,{1445,1},
                                   {atom,{1445,1},fake},
                                   {atom,{1445,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1445,669},{atom,{1445,1},ignore}]},
           {clause,{1445,1},
                   [],[],
                   [{debug_line,1446,670},
                    {tuple,{1446,5},
                           [{atom,{1446,5},t_cons},
                            {atom,{1446,5},any},
                            {atom,{1446,24},nil}]}]}]}.
{function,{1448,1},
          proper_cons,1,
          [{clause,{1448,1},
                   [{var,{1448,1},'_'}],
                   [[{call,{1448,1},
                           {remote,{1448,1},
                                   {atom,{1448,1},fake},
                                   {atom,{1448,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1448,671},{atom,{1448,1},ignore}]},
           {clause,{1448,1},
                   [{var,{1448,13},'ElementType'}],
                   [],
                   [{debug_line,1449,672},
                    {tuple,{1449,5},
                           [{atom,{1449,5},t_cons},
                            {var,{1449,18},'ElementType'},
                            {atom,{1449,41},nil}]}]}]}.
{function,{1451,1},
          proper_list,0,
          [{clause,{1451,1},
                   [],
                   [[{call,{1451,1},
                           {remote,{1451,1},
                                   {atom,{1451,1},fake},
                                   {atom,{1451,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1451,673},{atom,{1451,1},ignore}]},
           {clause,{1451,1},
                   [],[],
                   [{debug_line,1452,674},
                    {tuple,{1452,5},
                           [{atom,{1452,5},t_list},
                            {atom,{1452,5},any},
                            {atom,{1452,24},nil}]}]}]}.
{function,{1454,1},
          proper_list,1,
          [{clause,{1454,1},
                   [{var,{1454,1},'_'}],
                   [[{call,{1454,1},
                           {remote,{1454,1},
                                   {atom,{1454,1},fake},
                                   {atom,{1454,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1454,675},{atom,{1454,1},ignore}]},
           {clause,{1454,1},
                   [{var,{1454,13},'ElementType'}],
                   [],
                   [{debug_line,1455,676},
                    {tuple,{1455,5},
                           [{atom,{1455,5},t_list},
                            {var,{1455,18},'ElementType'},
                            {atom,{1455,41},nil}]}]}]}.
{function,{1457,1},
          binary,0,
          [{clause,{1457,1},
                   [],
                   [[{call,{1457,1},
                           {remote,{1457,1},
                                   {atom,{1457,1},fake},
                                   {atom,{1457,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1457,677},{atom,{1457,1},ignore}]},
           {clause,{1457,1},
                   [],[],
                   [{debug_line,1458,678},
                    {tuple,{1458,5},
                           [{atom,{1458,5},t_bitstring},
                            {integer,{1458,28},8},
                            {atom,{1458,5},false}]}]}]}.
{attribute,{1462,2},
           spec,
           {{copy_list,3},
            [{type,{1462,16},
                   bounded_fun,
                   [{type,{1462,16},
                          'fun',
                          [{type,{1462,16},
                                 product,
                                 [{var,{1462,17},'List'},
                                  {var,{1462,23},'Length'},
                                  {var,{1462,31},'Proper'}]},
                           {user_type,{1462,42},type,[]}]},
                    [{type,{1463,7},
                           constraint,
                           [{atom,{1463,7},is_subtype},
                            [{var,{1463,7},'List'},
                             {user_type,{1463,15},type,[]}]]},
                     {type,{1464,7},
                           constraint,
                           [{atom,{1464,7},is_subtype},
                            [{var,{1464,7},'Length'},
                             {type,{1464,17},
                                   union,
                                   [{atom,{1464,17},same_length},
                                    {atom,{1464,31},new_length}]}]]},
                     {type,{1465,7},
                           constraint,
                           [{atom,{1465,7},is_subtype},
                            [{var,{1465,7},'Proper'},
                             {type,{1465,17},
                                   union,
                                   [{atom,{1465,17},proper},
                                    {atom,{1465,26},maybe_improper}]}]]}]]}]}}.
{function,
 {1466,1},
 copy_list,3,
 [{clause,
   {1466,1},
   [{var,{1466,1},'_'},{var,{1466,1},'_'},{var,{1466,1},'_'}],
   [[{call,
      {1466,1},
      {remote,{1466,1},{atom,{1466,1},fake},{atom,{1466,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1466,679},{atom,{1466,1},ignore}]},
  {clause,
   {1466,1},
   [{var,{1466,11},'List0'},{var,{1466,18},'Length'},{var,{1466,26},'Proper'}],
   [],
   [{debug_line,1467,680},
    {'case',
     {1467,5},
     {tuple,
      {1467,10},
      [{call,
        {1467,11},
        {atom,{1467,11},meet},
        [{var,{1467,16},'List0'},
         {block,0,
          [{tuple,
            {1467,23},
            [{atom,{1467,23},t_list},
             {atom,{1467,23},any},
             {atom,{1467,23},any}]}]}]},
       {var,{1467,35},'Length'},
       {var,{1467,43},'Proper'}]},
     [{clause,
       {1468,9},
       [{tuple,
         {1468,9},
         [{tuple,
           {1468,10},
           [{atom,{1468,10},t_cons},
            {var,{1468,23},'Type'},
            {var,{1468,39},'Term'}]},
          {atom,{1468,46},new_length},
          {atom,{1468,58},maybe_improper}]}],
       [],
       [{debug_line,1469,681},
        {tuple,
         {1469,13},
         [{atom,{1469,13},t_list},
          {var,{1469,26},'Type'},
          {var,{1469,42},'Term'}]}]},
      {clause,
       {1470,9},
       [{tuple,
         {1470,9},
         [{tuple,
           {1470,10},
           [{atom,{1470,10},t_cons},
            {var,{1470,23},'Type'},
            {var,{1470,10},'_'}]},
          {atom,{1470,30},new_length},
          {atom,{1470,42},proper}]}],
       [],
       [{debug_line,1471,682},
        {tuple,
         {1471,13},
         [{atom,{1471,13},t_list},
          {var,{1471,26},'Type'},
          {atom,{1471,42},nil}]}]},
      {clause,
       {1472,9},
       [{tuple,
         {1472,9},
         [{match,
           {1472,10},
           {tuple,
            {1472,10},
            [{atom,{1472,10},t_cons},{var,{1472,10},'_'},{var,{1472,10},'_'}]},
           {var,{1472,20},'T'}},
          {var,{1472,23},'_'},
          {atom,{1472,26},proper}]}],
       [],
       [{debug_line,1473,683},
        {block,
         {1473,13},
         [{match,{1473,13},{var,{1473,13},rec5},{var,{1473,13},'T'}},
          {'case',
           {1473,22},
           {var,{1473,13},rec5},
           [{clause,
             {1473,22},
             [{tuple,
               {1473,22},
               [{atom,{1473,22},t_cons},
                {var,{1473,22},'_'},
                {var,{1473,22},'_'}]}],
             [],
             [{call,
               {1473,22},
               {remote,
                {1473,22},
                {atom,{1473,22},erlang},
                {atom,{1473,22},setelement}},
               [{integer,{1473,22},3},
                {var,{1473,13},rec5},
                {atom,{1473,33},nil}]}]},
            {clause,
             [{generated,true},{location,{1473,22}}],
             [{var,[{generated,true},{location,{1473,22}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1473,22}}],
               {remote,
                [{generated,true},{location,{1473,22}}],
                {atom,[{generated,true},{location,{1473,22}}],erlang},
                {atom,[{generated,true},{location,{1473,22}}],error}},
               [{tuple,
                 [{generated,true},{location,{1473,22}}],
                 [{atom,[{generated,true},{location,{1473,22}}],badrecord},
                  {var,{1473,13},rec5}]}]}]}]}]}]},
      {clause,
       {1474,9},
       [{tuple,
         {1474,9},
         [{match,
           {1474,10},
           {tuple,
            {1474,10},
            [{atom,{1474,10},t_list},{var,{1474,10},'_'},{var,{1474,10},'_'}]},
           {var,{1474,20},'T'}},
          {var,{1474,23},'_'},
          {atom,{1474,26},proper}]}],
       [],
       [{debug_line,1475,684},
        {block,
         {1475,13},
         [{match,{1475,13},{var,{1475,13},rec6},{var,{1475,13},'T'}},
          {'case',
           {1475,22},
           {var,{1475,13},rec6},
           [{clause,
             {1475,22},
             [{tuple,
               {1475,22},
               [{atom,{1475,22},t_list},
                {var,{1475,22},'_'},
                {var,{1475,22},'_'}]}],
             [],
             [{call,
               {1475,22},
               {remote,
                {1475,22},
                {atom,{1475,22},erlang},
                {atom,{1475,22},setelement}},
               [{integer,{1475,22},3},
                {var,{1475,13},rec6},
                {atom,{1475,33},nil}]}]},
            {clause,
             [{generated,true},{location,{1475,22}}],
             [{var,[{generated,true},{location,{1475,22}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1475,22}}],
               {remote,
                [{generated,true},{location,{1475,22}}],
                {atom,[{generated,true},{location,{1475,22}}],erlang},
                {atom,[{generated,true},{location,{1475,22}}],error}},
               [{tuple,
                 [{generated,true},{location,{1475,22}}],
                 [{atom,[{generated,true},{location,{1475,22}}],badrecord},
                  {var,{1475,13},rec6}]}]}]}]}]}]},
      {clause,
       {1476,9},
       [{tuple,
         {1476,9},
         [{atom,{1476,10},none},{var,{1476,16},'_'},{var,{1476,19},'_'}]}],
       [],
       [{debug_line,1477,685},{atom,{1477,13},none}]},
      {clause,
       {1478,9},
       [{tuple,
         {1478,9},
         [{var,{1478,10},'List'},{var,{1478,16},'_'},{var,{1478,19},'_'}]}],
       [],
       [{debug_line,1479,686},{var,{1479,13},'List'}]}]}]}]}.
{function,
    {1482,1},
    make_two_tuple,2,
    [{clause,
         {1482,1},
         [{var,{1482,1},'_'},{var,{1482,1},'_'}],
         [[{call,
               {1482,1},
               {remote,
                   {1482,1},
                   {atom,{1482,1},fake},
                   {atom,{1482,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1482,687},{atom,{1482,1},ignore}]},
     {clause,
         {1482,1},
         [{var,{1482,16},'Type1'},{var,{1482,23},'Type2'}],
         [],
         [{debug_line,1483,688},
          {match,
              {1483,5},
              {var,{1483,5},'Es0'},
              {call,
                  {1483,11},
                  {remote,
                      {1483,21},
                      {atom,{1483,11},beam_types},
                      {atom,{1483,22},set_tuple_element}},
                  [{integer,{1483,40},1},
                   {var,{1483,43},'Type1'},
                   {block,0,[{map,{1483,50},[]}]}]}},
          {debug_line,1484,689},
          {match,
              {1484,5},
              {var,{1484,5},'Es'},
              {call,
                  {1484,10},
                  {remote,
                      {1484,20},
                      {atom,{1484,10},beam_types},
                      {atom,{1484,21},set_tuple_element}},
                  [{integer,{1484,39},2},
                   {var,{1484,42},'Type2'},
                   {var,{1484,49},'Es0'}]}},
          {debug_line,1485,690},
          {tuple,
              {1485,5},
              [{atom,{1485,5},t_tuple},
               {integer,{1485,19},2},
               {atom,{1485,27},true},
               {var,{1485,41},'Es'}]}]}]}.
{function,{1487,1},
          normalize,1,
          [{clause,{1487,1},
                   [{var,{1487,1},'_'}],
                   [[{call,{1487,1},
                           {remote,{1487,1},
                                   {atom,{1487,1},fake},
                                   {atom,{1487,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1487,691},{atom,{1487,1},ignore}]},
           {clause,{1487,1},
                   [{var,{1487,11},'T'}],
                   [],
                   [{debug_line,1487,692},
                    {call,{1487,17},
                          {remote,{1487,27},
                                  {atom,{1487,17},beam_types},
                                  {atom,{1487,28},normalize}},
                          [{var,{1487,38},'T'}]}]}]}.
{function,{1488,1},
          join,2,
          [{clause,{1488,1},
                   [{var,{1488,1},'_'},{var,{1488,1},'_'}],
                   [[{call,{1488,1},
                           {remote,{1488,1},
                                   {atom,{1488,1},fake},
                                   {atom,{1488,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1488,693},{atom,{1488,1},ignore}]},
           {clause,{1488,1},
                   [{var,{1488,6},'A'},{var,{1488,9},'B'}],
                   [],
                   [{debug_line,1488,694},
                    {call,{1488,15},
                          {remote,{1488,25},
                                  {atom,{1488,15},beam_types},
                                  {atom,{1488,26},join}},
                          [{var,{1488,31},'A'},{var,{1488,34},'B'}]}]}]}.
{function,{1489,1},
          meet,2,
          [{clause,{1489,1},
                   [{var,{1489,1},'_'},{var,{1489,1},'_'}],
                   [[{call,{1489,1},
                           {remote,{1489,1},
                                   {atom,{1489,1},fake},
                                   {atom,{1489,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1489,695},{atom,{1489,1},ignore}]},
           {clause,{1489,1},
                   [{var,{1489,6},'A'},{var,{1489,9},'B'}],
                   [],
                   [{debug_line,1489,696},
                    {call,{1489,15},
                          {remote,{1489,25},
                                  {atom,{1489,15},beam_types},
                                  {atom,{1489,26},meet}},
                          [{var,{1489,31},'A'},{var,{1489,34},'B'}]}]}]}.
{eof,{1490,1}}.
