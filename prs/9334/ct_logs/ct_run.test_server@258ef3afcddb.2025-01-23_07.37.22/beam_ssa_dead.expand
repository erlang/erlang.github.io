{attribute,{1,1},file,{"beam_ssa_dead.erl",1}}.
{attribute,{26,2},module,beam_ssa_dead}.
{attribute,{28,2},export,[{opt,1}]}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{31,1},file,{"beam_ssa_dead.erl",31}}.
{attribute,{31,2},
           import,
           {lists,[{append,1},
                   {foldl,3},
                   {keymember,3},
                   {last,1},
                   {member,2},
                   {reverse,1},
                   {reverse,2},
                   {takewhile,2}]}}.
{attribute,
    {34,2},
    type,
    {used_vars,
        {type,
            {34,22},
            map,
            [{type,
                 {34,40},
                 map_field_exact,
                 [{remote_type,
                      {34,24},
                      [{atom,{34,24},beam_ssa},{atom,{34,33},label},[]]},
                  {remote_type,
                      {34,42},
                      [{atom,{34,42},sets},
                       {atom,{34,47},set},
                       [{remote_type,
                            {34,51},
                            [{atom,{34,51},beam_ssa},
                             {atom,{34,60},b_var},
                             []]}]]}]}]},
        []}}.
{attribute,
    {36,2},
    type,
    {basic_type_test,
        {type,
            {36,28},
            union,
            [{type,{36,28},atom,[]},
             {type,
                 {36,37},
                 tuple,
                 [{atom,{36,38},is_tagged_tuple},
                  {type,{36,56},pos_integer,[]},
                  {type,{36,70},atom,[]}]}]},
        []}}.
{attribute,{37,2},
           type,
           {type_test,{type,{37,22},
                            union,
                            [{user_type,{37,22},basic_type_test,[]},
                             {type,{37,42},
                                   tuple,
                                   [{atom,{37,43},'not'},
                                    {user_type,{37,49},basic_type_test,[]}]}]},
                      []}}.
{attribute,{38,2},type,{op_name,{type,{38,20},atom,[]},[]}}.
{attribute,
    {39,2},
    type,
    {basic_test,
        {type,
            {39,23},
            union,
            [{type,
                 {39,23},
                 tuple,
                 [{user_type,{39,24},op_name,[]},
                  {remote_type,
                      {39,34},
                      [{atom,{39,34},beam_ssa},{atom,{39,43},b_var},[]]},
                  {remote_type,
                      {39,51},
                      [{atom,{39,51},beam_ssa},{atom,{39,60},value},[]]}]},
             {type,
                 {40,23},
                 tuple,
                 [{user_type,{40,24},basic_type_test,[]},
                  {remote_type,
                      {40,42},
                      [{atom,{40,42},beam_ssa},{atom,{40,51},value},[]]}]}]},
        []}}.
{attribute,
    {41,2},
    type,
    {test,
        {type,
            {41,17},
            union,
            [{type,
                 {41,17},
                 tuple,
                 [{user_type,{41,18},op_name,[]},
                  {remote_type,
                      {41,28},
                      [{atom,{41,28},beam_ssa},{atom,{41,37},b_var},[]]},
                  {remote_type,
                      {41,45},
                      [{atom,{41,45},beam_ssa},{atom,{41,54},value},[]]}]},
             {type,
                 {42,17},
                 tuple,
                 [{user_type,{42,18},type_test,[]},
                  {remote_type,
                      {42,30},
                      [{atom,{42,30},beam_ssa},{atom,{42,39},value},[]]}]}]},
        []}}.
{attribute,
    {44,2},
    record,
    {st,[{typed_record_field,
             {record_field,{45,10},{atom,{45,10},bs}},
             {remote_type,
                 {45,16},
                 [{atom,{45,16},beam_ssa},{atom,{45,25},block_map},[]]}},
         {typed_record_field,
             {record_field,{46,10},{atom,{46,10},us}},
             {user_type,{46,16},used_vars,[]}},
         {typed_record_field,
             {record_field,{47,10},{atom,{47,10},skippable}},
             {type,
                 {47,23},
                 map,
                 [{type,
                      {47,41},
                      map_field_exact,
                      [{remote_type,
                           {47,25},
                           [{atom,{47,25},beam_ssa},{atom,{47,34},label},[]]},
                       {atom,{47,43},true}]}]}},
         {typed_record_field,
             {record_field,{48,10},{atom,{48,10},test},{atom,{48,15},none}},
             {type,
                 {48,23},
                 union,
                 [{atom,{48,23},none},{user_type,{48,32},test,[]}]}},
         {typed_record_field,
             {record_field,{49,10},{atom,{49,10},target},{atom,{49,17},any}},
             {type,
                 {49,24},
                 union,
                 [{atom,{49,24},any},
                  {atom,{49,32},one_way},
                  {remote_type,
                      {49,44},
                      [{atom,{49,44},beam_ssa},{atom,{49,53},label},[]]}]}}]}}.
{attribute,
    {52,2},
    spec,
    {{opt,1},
     [{type,
          {52,10},
          bounded_fun,
          [{type,
               {52,10},
               'fun',
               [{type,
                    {52,10},
                    product,
                    [{type,
                         {52,11},
                         list,
                         [{type,
                              {52,12},
                              tuple,
                              [{var,{52,13},'Label0'},
                               {var,{52,20},'Block0'}]}]}]},
                {type,
                    {52,33},
                    list,
                    [{type,
                         {52,34},
                         tuple,
                         [{var,{52,35},'Label'},{var,{52,41},'Block'}]}]}]},
           [{type,
                {53,7},
                constraint,
                [{atom,{53,7},is_subtype},
                 [{var,{53,7},'Label0'},
                  {remote_type,
                      {53,17},
                      [{atom,{53,17},beam_ssa},{atom,{53,26},label},[]]}]]},
            {type,
                {54,7},
                constraint,
                [{atom,{54,7},is_subtype},
                 [{var,{54,7},'Block0'},
                  {remote_type,
                      {54,17},
                      [{atom,{54,17},beam_ssa},{atom,{54,26},b_blk},[]]}]]},
            {type,
                {55,7},
                constraint,
                [{atom,{55,7},is_subtype},
                 [{var,{55,7},'Label'},
                  {remote_type,
                      {55,16},
                      [{atom,{55,16},beam_ssa},{atom,{55,25},label},[]]}]]},
            {type,
                {56,7},
                constraint,
                [{atom,{56,7},is_subtype},
                 [{var,{56,7},'Block'},
                  {remote_type,
                      {56,16},
                      [{atom,{56,16},beam_ssa},
                       {atom,{56,25},b_blk},
                       []]}]]}]]}]}}.
{function,
 {58,1},
 opt,1,
 [{clause,
   {58,1},
   [{var,{58,1},'_'}],
   [[{call,
      {58,1},
      {remote,{58,1},{atom,{58,1},fake},{atom,{58,1},is_beam_bif_info}},
      []}]],
   [{debug_line,58,1},{atom,{58,1},ignore}]},
  {clause,
   {58,1},
   [{var,{58,5},'Linear0'}],
   [],
   [{debug_line,59,2},
    {match,
     {59,5},
     {tuple,{59,5},[{var,{59,6},'Used'},{var,{59,11},'Skippable'}]},
     {call,{59,24},{atom,{59,24},used_vars},[{var,{59,34},'Linear0'}]}},
    {debug_line,60,3},
    {match,
     {60,5},
     {var,{60,5},'Blocks0'},
     {call,
      {60,15},
      {remote,{60,19},{atom,{60,15},maps},{atom,{60,20},from_list}},
      [{var,{60,30},'Linear0'}]}},
    {debug_line,61,4},
    {match,
     {61,5},
     {var,{61,5},'St0'},
     {tuple,
      {61,11},
      [{atom,{61,11},st},
       {var,{61,18},'Blocks0'},
       {var,{61,29},'Used'},
       {var,{61,44},'Skippable'},
       {atom,{61,11},none},
       {atom,{61,11},any}]}},
    {debug_line,62,5},
    {match,
     {62,5},
     {var,{62,5},'St'},
     {call,{62,10},{atom,{62,10},shortcut_opt},[{var,{62,23},'St0'}]}},
    {debug_line,63,6},
    {match,
     {63,5},
     {tuple,
      {63,5},
      [{atom,{63,5},st},
       {var,{63,12},'Blocks'},
       {var,{63,5},'_'},
       {var,{63,5},'_'},
       {var,{63,5},'_'},
       {var,{63,5},'_'}]},
     {call,
      {63,22},
      {atom,{63,22},combine_eqs},
      [{block,0,
        [{block,
          {63,34},
          [{match,{63,34},{var,{63,34},rec0},{var,{63,34},'St'}},
           {'case',
            {63,40},
            {var,{63,34},rec0},
            [{clause,
              {63,40},
              [{tuple,
                {63,40},
                [{atom,{63,40},st},
                 {var,{63,40},'_'},
                 {var,{63,40},'_'},
                 {var,{63,40},'_'},
                 {var,{63,40},'_'},
                 {var,{63,40},'_'}]}],
              [],
              [{call,
                {63,40},
                {remote,
                 {63,40},
                 {atom,{63,40},erlang},
                 {atom,{63,40},setelement}},
                [{integer,{63,40},3},{var,{63,34},rec0},{map,{63,43},[]}]}]},
             {clause,
              [{generated,true},{location,{63,40}}],
              [{var,[{generated,true},{location,{63,40}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{63,40}}],
                {remote,
                 [{generated,true},{location,{63,40}}],
                 {atom,[{generated,true},{location,{63,40}}],erlang},
                 {atom,[{generated,true},{location,{63,40}}],error}},
                [{tuple,
                  [{generated,true},{location,{63,40}}],
                  [{atom,[{generated,true},{location,{63,40}}],badrecord},
                   {var,{63,34},rec0}]}]}]}]}]}]}]}},
    {debug_line,64,7},
    {call,
     {64,5},
     {atom,{64,5},opt_redundant_tests},
     [{var,{64,25},'Blocks'}]}]}]}.
{function,
    {87,1},
    shortcut_opt,1,
    [{clause,
         {87,1},
         [{var,{87,1},'_'}],
         [[{call,
               {87,1},
               {remote,
                   {87,1},
                   {atom,{87,1},fake},
                   {atom,{87,1},is_beam_bif_info}},
               []}]],
         [{debug_line,87,8},{atom,{87,1},ignore}]},
     {clause,
         {87,1},
         [{match,
              {87,14},
              {tuple,
                  {87,14},
                  [{atom,{87,14},st},
                   {var,{87,21},'Blocks'},
                   {var,{87,14},'_'},
                   {var,{87,14},'_'},
                   {var,{87,14},'_'},
                   {var,{87,14},'_'}]},
              {var,{87,29},'St'}}],
         [],
         [{debug_line,100,9},
          {match,
              {100,5},
              {var,{100,5},'Ls'},
              {call,
                  {100,10},
                  {remote,
                      {100,18},
                      {atom,{100,10},beam_ssa},
                      {atom,{100,19},rpo}},
                  [{var,{100,23},'Blocks'}]}},
          {debug_line,101,10},
          {call,
              {101,5},
              {atom,{101,5},shortcut_opt},
              [{var,{101,18},'Ls'},{var,{101,22},'St'}]}]}]}.
{function,
 {103,1},
 shortcut_opt,2,
 [{clause,
   {103,1},
   [{var,{103,1},'_'},{var,{103,1},'_'}],
   [[{call,
      {103,1},
      {remote,{103,1},{atom,{103,1},fake},{atom,{103,1},is_beam_bif_info}},
      []}]],
   [{debug_line,103,11},{atom,{103,1},ignore}]},
  {clause,
   {103,1},
   [{cons,{103,14},{var,{103,15},'L'},{var,{103,17},'Ls'}},
    {match,
     {103,22},
     {tuple,
      {103,22},
      [{atom,{103,22},st},
       {var,{103,29},'Blocks0'},
       {var,{103,22},'_'},
       {var,{103,22},'_'},
       {var,{103,22},'_'},
       {var,{103,22},'_'}]},
     {var,{103,38},'St'}}],
   [],
   [{debug_line,104,12},
    {match,
     {104,5},
     {tuple,
      {104,5},
      [{atom,{104,5},b_blk},
       {var,{104,5},'_'},
       {var,{104,15},'Is'},
       {var,{104,23},'Last0'}]},
     {match,
      {104,32},
      {var,{104,32},'Blk0'},
      {call,
       {104,39},
       {atom,{104,39},get_block},
       [{var,{104,49},'L'},{var,{104,52},'St'}]}}},
    {debug_line,105,13},
    {'case',
     {105,5},
     {call,
      {105,10},
      {atom,{105,10},shortcut_terminator},
      [{var,{105,30},'Last0'},
       {var,{105,37},'Is'},
       {var,{105,41},'L'},
       {var,{105,44},'St'}]},
     [{clause,
       {106,9},
       [{var,{106,9},'Last0'}],
       [],
       [{debug_line,108,14},
        {call,
         {108,13},
         {atom,{108,13},shortcut_opt},
         [{var,{108,26},'Ls'},{var,{108,30},'St'}]}]},
      {clause,
       {109,9},
       [{var,{109,9},'Last'}],
       [],
       [{debug_line,112,15},
        {match,
         {112,13},
         {var,{112,13},'Blk'},
         {block,
          {112,19},
          [{match,{112,19},{var,{112,19},rec1},{var,{112,19},'Blk0'}},
           {'case',
            {112,30},
            {var,{112,19},rec1},
            [{clause,
              {112,30},
              [{tuple,
                {112,30},
                [{atom,{112,30},b_blk},
                 {var,{112,30},'_'},
                 {var,{112,30},'_'},
                 {var,{112,30},'_'}]}],
              [],
              [{call,
                {112,30},
                {remote,
                 {112,30},
                 {atom,{112,30},erlang},
                 {atom,{112,30},setelement}},
                [{integer,{112,30},4},
                 {var,{112,19},rec1},
                 {var,{112,35},'Last'}]}]},
             {clause,
              [{generated,true},{location,{112,30}}],
              [{var,[{generated,true},{location,{112,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{112,30}}],
                {remote,
                 [{generated,true},{location,{112,30}}],
                 {atom,[{generated,true},{location,{112,30}}],erlang},
                 {atom,[{generated,true},{location,{112,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{112,30}}],
                  [{atom,[{generated,true},{location,{112,30}}],badrecord},
                   {var,{112,19},rec1}]}]}]}]}]}},
        {debug_line,113,16},
        {match,
         {113,13},
         {var,{113,13},'Blocks'},
         {map,
          {113,29},
          {var,{113,22},'Blocks0'},
          [{map_field_assoc,
            {113,32},
            {var,{113,31},'L'},
            {var,{113,34},'Blk'}}]}},
        {debug_line,114,17},
        {call,
         {114,13},
         {atom,{114,13},shortcut_opt},
         [{var,{114,26},'Ls'},
          {block,0,
           [{block,
             {114,30},
             [{match,{114,30},{var,{114,30},rec2},{var,{114,30},'St'}},
              {'case',
               {114,36},
               {var,{114,30},rec2},
               [{clause,
                 {114,36},
                 [{tuple,
                   {114,36},
                   [{atom,{114,36},st},
                    {var,{114,36},'_'},
                    {var,{114,36},'_'},
                    {var,{114,36},'_'},
                    {var,{114,36},'_'},
                    {var,{114,36},'_'}]}],
                 [],
                 [{call,
                   {114,36},
                   {remote,
                    {114,36},
                    {atom,{114,36},erlang},
                    {atom,{114,36},setelement}},
                   [{integer,{114,36},2},
                    {var,{114,30},rec2},
                    {var,{114,39},'Blocks'}]}]},
                {clause,
                 [{generated,true},{location,{114,36}}],
                 [{var,[{generated,true},{location,{114,36}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{114,36}}],
                   {remote,
                    [{generated,true},{location,{114,36}}],
                    {atom,[{generated,true},{location,{114,36}}],erlang},
                    {atom,[{generated,true},{location,{114,36}}],error}},
                   [{tuple,
                     [{generated,true},{location,{114,36}}],
                     [{atom,[{generated,true},{location,{114,36}}],badrecord},
                      {var,{114,30},rec2}]}]}]}]}]}]}]}]}]}]},
  {clause,
   {116,1},
   [{nil,{116,14}},{var,{116,18},'St'}],
   [],
   [{debug_line,116,18},{var,{116,25},'St'}]}]}.
{function,
 {118,1},
 shortcut_terminator,4,
 [{clause,
   {118,1},
   [{var,{118,1},'_'},{var,{118,1},'_'},{var,{118,1},'_'},{var,{118,1},'_'}],
   [[{call,
      {118,1},
      {remote,{118,1},{atom,{118,1},fake},{atom,{118,1},is_beam_bif_info}},
      []}]],
   [{debug_line,118,19},{atom,{118,1},ignore}]},
  {clause,
   {118,1},
   [{tuple,
     {118,21},
     [{atom,{118,21},b_br},
      {var,{118,21},'_'},
      {tuple,{118,32},[{atom,{118,32},b_literal},{atom,{118,47},true}]},
      {var,{118,58},'Succ0'},
      {var,{118,21},'_'}]},
    {var,{119,21},'_Is'},
    {var,{119,26},'From'},
    {var,{119,32},'St0'}],
   [],
   [{debug_line,120,20},
    {match,
     {120,5},
     {var,{120,5},'St'},
     {block,
      {120,10},
      [{match,{120,10},{var,{120,10},rec3},{var,{120,10},'St0'}},
       {'case',
        {120,17},
        {var,{120,10},rec3},
        [{clause,
          {120,17},
          [{tuple,
            {120,17},
            [{atom,{120,17},st},
             {var,{120,17},'_'},
             {var,{120,17},'_'},
             {var,{120,17},'_'},
             {var,{120,17},'_'},
             {var,{120,17},'_'}]}],
          [],
          [{call,
            {120,17},
            {remote,
             {120,17},
             {atom,{120,17},erlang},
             {atom,{120,17},setelement}},
            [{integer,{120,17},5},{var,{120,10},rec3},{atom,{120,22},none}]}]},
         {clause,
          [{generated,true},{location,{120,17}}],
          [{var,[{generated,true},{location,{120,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{120,17}}],
            {remote,
             [{generated,true},{location,{120,17}}],
             {atom,[{generated,true},{location,{120,17}}],erlang},
             {atom,[{generated,true},{location,{120,17}}],error}},
            [{tuple,
              [{generated,true},{location,{120,17}}],
              [{atom,[{generated,true},{location,{120,17}}],badrecord},
               {var,{120,10},rec3}]}]}]}]}]}},
    {debug_line,121,21},
    {call,
     {121,5},
     {atom,{121,5},shortcut},
     [{var,{121,14},'Succ0'},
      {var,{121,21},'From'},
      {block,0,[{map,{121,27},[]}]},
      {var,{121,32},'St'}]}]},
  {clause,
   {122,1},
   [{match,
     {122,21},
     {tuple,
      {122,21},
      [{atom,{122,21},b_br},
       {var,{122,21},'_'},
       {match,
        {122,32},
        {tuple,{122,32},[{atom,{122,32},b_var},{var,{122,32},'_'}]},
        {var,{122,41},'Bool'}},
       {var,{122,51},'Succ0'},
       {var,{122,62},'Fail0'}]},
     {var,{122,69},'Br'}},
    {var,{123,21},'Is'},
    {var,{123,25},'From'},
    {var,{123,31},'St0'}],
   [],
   [{debug_line,124,22},
    {match,
     {124,5},
     {var,{124,5},'St'},
     {block,
      {124,10},
      [{match,{124,10},{var,{124,10},rec4},{var,{124,10},'St0'}},
       {'case',
        {124,17},
        {var,{124,10},rec4},
        [{clause,
          {124,17},
          [{tuple,
            {124,17},
            [{atom,{124,17},st},
             {var,{124,17},'_'},
             {var,{124,17},'_'},
             {var,{124,17},'_'},
             {var,{124,17},'_'},
             {var,{124,17},'_'}]}],
          [],
          [{call,
            {124,17},
            {remote,
             {124,17},
             {atom,{124,17},erlang},
             {atom,{124,17},setelement}},
            [{integer,{124,17},6},
             {var,{124,10},rec4},
             {atom,{124,24},one_way}]}]},
         {clause,
          [{generated,true},{location,{124,17}}],
          [{var,[{generated,true},{location,{124,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{124,17}}],
            {remote,
             [{generated,true},{location,{124,17}}],
             {atom,[{generated,true},{location,{124,17}}],erlang},
             {atom,[{generated,true},{location,{124,17}}],error}},
            [{tuple,
              [{generated,true},{location,{124,17}}],
              [{atom,[{generated,true},{location,{124,17}}],badrecord},
               {var,{124,10},rec4}]}]}]}]}]}},
    {debug_line,125,23},
    {match,
     {125,5},
     {var,{125,5},'Test'},
     {call,
      {125,12},
      {atom,{125,12},get_test},
      [{var,{125,21},'Bool'},{var,{125,27},'Is'}]}},
    {debug_line,130,24},
    {match,
     {130,5},
     {var,{130,5},'SuccBs'},
     {call,
      {130,14},
      {atom,{130,14},bind_var_if_used},
      [{var,{130,31},'Succ0'},
       {var,{130,38},'Bool'},
       {block,0,
        [{tuple,{130,44},[{atom,{130,44},b_literal},{atom,{130,59},true}]}]},
       {var,{130,66},'St'}]}},
    {debug_line,131,25},
    {match,
     {131,5},
     {var,{131,5},'BrSucc'},
     {call,
      {131,14},
      {atom,{131,14},shortcut},
      [{var,{131,23},'Succ0'},
       {var,{131,30},'From'},
       {var,{131,36},'SuccBs'},
       {block,0,
        [{block,
          {131,44},
          [{match,{131,44},{var,{131,44},rec5},{var,{131,44},'St'}},
           {'case',
            {131,50},
            {var,{131,44},rec5},
            [{clause,
              {131,50},
              [{tuple,
                {131,50},
                [{atom,{131,50},st},
                 {var,{131,50},'_'},
                 {var,{131,50},'_'},
                 {var,{131,50},'_'},
                 {var,{131,50},'_'},
                 {var,{131,50},'_'}]}],
              [],
              [{call,
                {131,50},
                {remote,
                 {131,50},
                 {atom,{131,50},erlang},
                 {atom,{131,50},setelement}},
                [{integer,{131,50},5},
                 {var,{131,44},rec5},
                 {var,{131,55},'Test'}]}]},
             {clause,
              [{generated,true},{location,{131,50}}],
              [{var,[{generated,true},{location,{131,50}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{131,50}}],
                {remote,
                 [{generated,true},{location,{131,50}}],
                 {atom,[{generated,true},{location,{131,50}}],erlang},
                 {atom,[{generated,true},{location,{131,50}}],error}},
                [{tuple,
                  [{generated,true},{location,{131,50}}],
                  [{atom,[{generated,true},{location,{131,50}}],badrecord},
                   {var,{131,44},rec5}]}]}]}]}]}]}]}},
    {debug_line,132,26},
    {match,
     {132,5},
     {var,{132,5},'FailBs'},
     {call,
      {132,14},
      {atom,{132,14},bind_var_if_used},
      [{var,{132,31},'Fail0'},
       {var,{132,38},'Bool'},
       {block,0,
        [{tuple,{132,44},[{atom,{132,44},b_literal},{atom,{132,59},false}]}]},
       {var,{132,67},'St'}]}},
    {debug_line,133,27},
    {match,
     {133,5},
     {var,{133,5},'BrFail'},
     {call,
      {133,14},
      {atom,{133,14},shortcut},
      [{var,{133,23},'Fail0'},
       {var,{133,30},'From'},
       {var,{133,36},'FailBs'},
       {block,0,
        [{block,
          {133,44},
          [{match,
            {133,50},
            {var,{133,50},rec6},
            {call,
             {133,55},
             {atom,{133,55},invert_test},
             [{var,{133,67},'Test'}]}},
           {match,{133,44},{var,{133,44},rec7},{var,{133,44},'St'}},
           {'case',
            {133,50},
            {var,{133,44},rec7},
            [{clause,
              {133,50},
              [{tuple,
                {133,50},
                [{atom,{133,50},st},
                 {var,{133,50},'_'},
                 {var,{133,50},'_'},
                 {var,{133,50},'_'},
                 {var,{133,50},'_'},
                 {var,{133,50},'_'}]}],
              [],
              [{call,
                {133,50},
                {remote,
                 {133,50},
                 {atom,{133,50},erlang},
                 {atom,{133,50},setelement}},
                [{integer,{133,50},5},
                 {var,{133,44},rec7},
                 {var,{133,50},rec6}]}]},
             {clause,
              [{generated,true},{location,{133,50}}],
              [{var,[{generated,true},{location,{133,50}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{133,50}}],
                {remote,
                 [{generated,true},{location,{133,50}}],
                 {atom,[{generated,true},{location,{133,50}}],erlang},
                 {atom,[{generated,true},{location,{133,50}}],error}},
                [{tuple,
                  [{generated,true},{location,{133,50}}],
                  [{atom,[{generated,true},{location,{133,50}}],badrecord},
                   {var,{133,44},rec7}]}]}]}]}]}]}]}},
    {debug_line,135,28},
    {'case',
     {135,5},
     {tuple,{135,10},[{var,{135,11},'BrSucc'},{var,{135,18},'BrFail'}]},
     [{clause,
       {136,9},
       [{tuple,
         {136,9},
         [{tuple,
           {136,10},
           [{atom,{136,10},b_br},
            {var,{136,10},'_'},
            {tuple,{136,21},[{atom,{136,21},b_literal},{atom,{136,36},true}]},
            {var,{136,47},'Succ'},
            {var,{136,10},'_'}]},
          {tuple,
           {137,10},
           [{atom,{137,10},b_br},
            {var,{137,10},'_'},
            {tuple,{137,21},[{atom,{137,21},b_literal},{atom,{137,36},true}]},
            {var,{137,47},'Fail'},
            {var,{137,10},'_'}]}]}],
       [[{op,{138,21},'=/=',{var,{138,16},'Succ'},{var,{138,25},'Succ0'}}],
        [{op,{138,37},'=/=',{var,{138,32},'Fail'},{var,{138,41},'Fail0'}}]],
       [{debug_line,140,29},
        {call,
         {140,13},
         {remote,{140,21},{atom,{140,13},beam_ssa},{atom,{140,22},normalize}},
         [{block,0,
           [{block,
             {140,32},
             [{match,{140,32},{var,{140,32},rec8},{var,{140,32},'Br'}},
              {'case',
               {140,40},
               {var,{140,32},rec8},
               [{clause,
                 {140,40},
                 [{tuple,
                   {140,40},
                   [{atom,{140,40},b_br},
                    {var,{140,40},'_'},
                    {var,{140,40},'_'},
                    {var,{140,40},'_'},
                    {var,{140,40},'_'}]}],
                 [],
                 [{call,
                   {140,40},
                   {remote,
                    {140,40},
                    {atom,{140,40},erlang},
                    {atom,{140,40},setelement}},
                   [{integer,{140,40},4},
                    {call,
                     {140,50},
                     {remote,
                      {140,50},
                      {atom,{140,50},erlang},
                      {atom,{140,50},setelement}},
                     [{integer,{140,50},5},
                      {var,{140,32},rec8},
                      {var,{140,55},'Fail'}]},
                    {var,{140,45},'Succ'}]}]},
                {clause,
                 [{generated,true},{location,{140,40}}],
                 [{var,[{generated,true},{location,{140,40}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{140,40}}],
                   {remote,
                    [{generated,true},{location,{140,40}}],
                    {atom,[{generated,true},{location,{140,40}}],erlang},
                    {atom,[{generated,true},{location,{140,40}}],error}},
                   [{tuple,
                     [{generated,true},{location,{140,40}}],
                     [{atom,[{generated,true},{location,{140,40}}],badrecord},
                      {var,{140,32},rec8}]}]}]}]}]}]}]}]},
      {clause,
       {141,9},
       [{tuple,{141,9},[{var,{141,10},'_'},{var,{141,12},'_'}]}],
       [],
       [{debug_line,143,30},{var,{143,13},'Br'}]}]}]},
  {clause,
   {145,1},
   [{match,
     {145,21},
     {tuple,
      {145,21},
      [{atom,{145,21},b_switch},
       {var,{145,21},'_'},
       {var,{145,35},'Bool'},
       {var,{145,45},'Fail0'},
       {var,{145,56},'List0'}]},
     {var,{145,63},'Sw'}},
    {var,{146,21},'_Is'},
    {var,{146,26},'From'},
    {var,{146,32},'St'}],
   [],
   [{debug_line,147,31},
    {match,
     {147,5},
     {var,{147,5},'Fail'},
     {call,
      {147,12},
      {atom,{147,12},shortcut_sw_fail},
      [{var,{147,29},'Fail0'},
       {var,{147,36},'List0'},
       {var,{147,43},'Bool'},
       {var,{147,49},'From'},
       {var,{147,55},'St'}]}},
    {debug_line,148,32},
    {match,
     {148,5},
     {var,{148,5},'List'},
     {call,
      {148,12},
      {atom,{148,12},shortcut_sw_list},
      [{var,{148,29},'List0'},
       {var,{148,36},'Bool'},
       {var,{148,42},'From'},
       {var,{148,48},'St'}]}},
    {debug_line,153,33},
    {block,
     {153,5},
     [{match,{153,5},{var,{153,5},rec9},{var,{153,5},'Sw'}},
      {'case',
       {153,17},
       {var,{153,5},rec9},
       [{clause,
         {153,17},
         [{tuple,
           {153,17},
           [{atom,{153,17},b_switch},
            {var,{153,17},'_'},
            {var,{153,17},'_'},
            {var,{153,17},'_'},
            {var,{153,17},'_'}]}],
         [],
         [{call,
           {153,17},
           {remote,{153,17},{atom,{153,17},erlang},{atom,{153,17},setelement}},
           [{integer,{153,17},4},
            {call,
             {153,27},
             {remote,
              {153,27},
              {atom,{153,27},erlang},
              {atom,{153,27},setelement}},
             [{integer,{153,27},5},{var,{153,5},rec9},{var,{153,32},'List'}]},
            {var,{153,22},'Fail'}]}]},
        {clause,
         [{generated,true},{location,{153,17}}],
         [{var,[{generated,true},{location,{153,17}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{153,17}}],
           {remote,
            [{generated,true},{location,{153,17}}],
            {atom,[{generated,true},{location,{153,17}}],erlang},
            {atom,[{generated,true},{location,{153,17}}],error}},
           [{tuple,
             [{generated,true},{location,{153,17}}],
             [{atom,[{generated,true},{location,{153,17}}],badrecord},
              {var,{153,5},rec9}]}]}]}]}]}]},
  {clause,
   {154,1},
   [{var,{154,21},'Last'},
    {var,{154,27},'_Is'},
    {var,{154,32},'_From'},
    {var,{154,39},'_St'}],
   [],
   [{debug_line,155,34},{var,{155,5},'Last'}]}]}.
{function,
 {157,1},
 shortcut_sw_fail,5,
 [{clause,
   {157,1},
   [{var,{157,1},'_'},
    {var,{157,1},'_'},
    {var,{157,1},'_'},
    {var,{157,1},'_'},
    {var,{157,1},'_'}],
   [[{call,
      {157,1},
      {remote,{157,1},{atom,{157,1},fake},{atom,{157,1},is_beam_bif_info}},
      []}]],
   [{debug_line,157,35},{atom,{157,1},ignore}]},
  {clause,
   {157,1},
   [{var,{157,18},'Fail0'},
    {var,{157,25},'List'},
    {var,{157,31},'Bool'},
    {var,{157,37},'From'},
    {var,{157,43},'St0'}],
   [],
   [{debug_line,159,36},
    {'case',
     {159,5},
     {var,{159,10},'List'},
     [{clause,
       {160,9},
       [{cons,
         {160,9},
         {tuple,
          {160,10},
          [{tuple,{160,11},[{atom,{160,11},b_literal},{atom,{160,26},false}]},
           {var,{160,33},'_'}]},
         {cons,
          {161,10},
          {tuple,
           {161,10},
           [{tuple,{161,11},[{atom,{161,11},b_literal},{atom,{161,26},true}]},
            {var,{161,32},'_'}]},
          {nil,{161,34}}}}],
       [],
       [{debug_line,162,37},
        {match,
         {162,13},
         {var,{162,13},'Test'},
         {tuple,
          {162,20},
          [{tuple,{162,21},[{atom,{162,22},'not'},{atom,{162,28},is_boolean}]},
           {var,{162,40},'Bool'}]}},
        {debug_line,163,38},
        {match,
         {163,13},
         {var,{163,13},'St'},
         {block,
          {163,18},
          [{match,{163,18},{var,{163,18},rec10},{var,{163,18},'St0'}},
           {'case',
            {163,25},
            {var,{163,18},rec10},
            [{clause,
              {163,25},
              [{tuple,
                {163,25},
                [{atom,{163,25},st},
                 {var,{163,25},'_'},
                 {var,{163,25},'_'},
                 {var,{163,25},'_'},
                 {var,{163,25},'_'},
                 {var,{163,25},'_'}]}],
              [],
              [{call,
                {163,25},
                {remote,
                 {163,25},
                 {atom,{163,25},erlang},
                 {atom,{163,25},setelement}},
                [{integer,{163,25},5},
                 {call,
                  {163,35},
                  {remote,
                   {163,35},
                   {atom,{163,35},erlang},
                   {atom,{163,35},setelement}},
                  [{integer,{163,35},6},
                   {var,{163,18},rec10},
                   {atom,{163,42},one_way}]},
                 {var,{163,30},'Test'}]}]},
             {clause,
              [{generated,true},{location,{163,25}}],
              [{var,[{generated,true},{location,{163,25}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{163,25}}],
                {remote,
                 [{generated,true},{location,{163,25}}],
                 {atom,[{generated,true},{location,{163,25}}],erlang},
                 {atom,[{generated,true},{location,{163,25}}],error}},
                [{tuple,
                  [{generated,true},{location,{163,25}}],
                  [{atom,[{generated,true},{location,{163,25}}],badrecord},
                   {var,{163,18},rec10}]}]}]}]}]}},
        {debug_line,164,39},
        {match,
         {164,13},
         {tuple,
          {164,13},
          [{atom,{164,13},b_br},
           {var,{164,13},'_'},
           {tuple,{164,24},[{atom,{164,24},b_literal},{atom,{164,39},true}]},
           {var,{164,50},'Fail'},
           {var,{164,13},'_'}]},
         {call,
          {165,17},
          {atom,{165,17},shortcut},
          [{var,{165,26},'Fail0'},
           {var,{165,33},'From'},
           {block,0,[{debug_line,165,40},{map,{165,39},[]}]},
           {var,{165,44},'St'}]}},
        {debug_line,166,41},
        {var,{166,13},'Fail'}]},
      {clause,
       {167,9},
       [{var,{167,9},'_'}],
       [],
       [{debug_line,168,42},{var,{168,13},'Fail0'}]}]}]}]}.
{function,
 {171,1},
 shortcut_sw_list,4,
 [{clause,
   {171,1},
   [{var,{171,1},'_'},{var,{171,1},'_'},{var,{171,1},'_'},{var,{171,1},'_'}],
   [[{call,
      {171,1},
      {remote,{171,1},{atom,{171,1},fake},{atom,{171,1},is_beam_bif_info}},
      []}]],
   [{debug_line,171,43},{atom,{171,1},ignore}]},
  {clause,
   {171,1},
   [{cons,
     {171,18},
     {tuple,{171,19},[{var,{171,20},'Lit'},{var,{171,24},'L0'}]},
     {var,{171,28},'T'}},
    {var,{171,32},'Bool'},
    {var,{171,38},'From'},
    {var,{171,44},'St0'}],
   [],
   [{debug_line,172,44},
    {match,
     {172,5},
     {var,{172,5},'Test'},
     {tuple,
      {172,12},
      [{atom,{172,13},'=:='},{var,{172,19},'Bool'},{var,{172,24},'Lit'}]}},
    {debug_line,173,45},
    {match,
     {173,5},
     {var,{173,5},'St'},
     {block,
      {173,10},
      [{match,{173,10},{var,{173,10},rec11},{var,{173,10},'St0'}},
       {'case',
        {173,17},
        {var,{173,10},rec11},
        [{clause,
          {173,17},
          [{tuple,
            {173,17},
            [{atom,{173,17},st},
             {var,{173,17},'_'},
             {var,{173,17},'_'},
             {var,{173,17},'_'},
             {var,{173,17},'_'},
             {var,{173,17},'_'}]}],
          [],
          [{call,
            {173,17},
            {remote,
             {173,17},
             {atom,{173,17},erlang},
             {atom,{173,17},setelement}},
            [{integer,{173,17},5},
             {var,{173,10},rec11},
             {var,{173,22},'Test'}]}]},
         {clause,
          [{generated,true},{location,{173,17}}],
          [{var,[{generated,true},{location,{173,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{173,17}}],
            {remote,
             [{generated,true},{location,{173,17}}],
             {atom,[{generated,true},{location,{173,17}}],erlang},
             {atom,[{generated,true},{location,{173,17}}],error}},
            [{tuple,
              [{generated,true},{location,{173,17}}],
              [{atom,[{generated,true},{location,{173,17}}],badrecord},
               {var,{173,10},rec11}]}]}]}]}]}},
    {debug_line,174,46},
    {match,
     {174,5},
     {tuple,
      {174,5},
      [{atom,{174,5},b_br},
       {var,{174,5},'_'},
       {tuple,{174,16},[{atom,{174,16},b_literal},{atom,{174,31},true}]},
       {var,{174,42},'L'},
       {var,{174,5},'_'}]},
     {call,
      {175,9},
      {atom,{175,9},shortcut},
      [{var,{175,18},'L0'},
       {var,{175,22},'From'},
       {block,0,
        [{debug_line,175,47},
         {call,
          {175,28},
          {atom,{175,28},bind_var},
          [{var,{175,37},'Bool'},
           {var,{175,43},'Lit'},
           {block,0,[{map,{175,48},[]}]}]}]},
       {block,0,
        [{block,
          {175,54},
          [{match,{175,54},{var,{175,54},rec12},{var,{175,54},'St'}},
           {'case',
            {175,60},
            {var,{175,54},rec12},
            [{clause,
              {175,60},
              [{tuple,
                {175,60},
                [{atom,{175,60},st},
                 {var,{175,60},'_'},
                 {var,{175,60},'_'},
                 {var,{175,60},'_'},
                 {var,{175,60},'_'},
                 {var,{175,60},'_'}]}],
              [],
              [{call,
                {175,60},
                {remote,
                 {175,60},
                 {atom,{175,60},erlang},
                 {atom,{175,60},setelement}},
                [{integer,{175,60},6},
                 {var,{175,54},rec12},
                 {atom,{175,67},one_way}]}]},
             {clause,
              [{generated,true},{location,{175,60}}],
              [{var,[{generated,true},{location,{175,60}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{175,60}}],
                {remote,
                 [{generated,true},{location,{175,60}}],
                 {atom,[{generated,true},{location,{175,60}}],erlang},
                 {atom,[{generated,true},{location,{175,60}}],error}},
                [{tuple,
                  [{generated,true},{location,{175,60}}],
                  [{atom,[{generated,true},{location,{175,60}}],badrecord},
                   {var,{175,54},rec12}]}]}]}]}]}]}]}},
    {debug_line,176,48},
    {cons,
     {176,5},
     {tuple,{176,6},[{var,{176,7},'Lit'},{var,{176,11},'L'}]},
     {call,
      {176,14},
      {atom,{176,14},shortcut_sw_list},
      [{var,{176,31},'T'},
       {var,{176,34},'Bool'},
       {var,{176,40},'From'},
       {var,{176,46},'St0'}]}}]},
  {clause,
   {177,1},
   [{nil,{177,18}},{var,{177,22},'_'},{var,{177,25},'_'},{var,{177,28},'_'}],
   [],
   [{debug_line,177,49},{nil,{177,34}}]}]}.
{function,
    {179,1},
    shortcut,4,
    [{clause,
         {179,1},
         [{var,{179,1},'_'},
          {var,{179,1},'_'},
          {var,{179,1},'_'},
          {var,{179,1},'_'}],
         [[{call,
               {179,1},
               {remote,
                   {179,1},
                   {atom,{179,1},fake},
                   {atom,{179,1},is_beam_bif_info}},
               []}]],
         [{debug_line,179,50},{atom,{179,1},ignore}]},
     {clause,
         {179,1},
         [{var,{179,10},'L'},
          {var,{179,13},'_From'},
          {var,{179,20},'Bs'},
          {tuple,
              {179,24},
              [{atom,{179,24},st},
               {var,{179,24},'_'},
               {var,{179,24},'_'},
               {var,{179,24},'_'},
               {atom,{179,33},none},
               {atom,{179,45},one_way}]}],
         [[{op,{179,73},
               '=:=',
               {call,
                   {179,60},
                   {remote,
                       {179,60},
                       {atom,{179,60},erlang},
                       {atom,{179,60},map_size}},
                   [{var,{179,69},'Bs'}]},
               {integer,{179,77},0}}]],
         [{debug_line,185,51},
          {tuple,
              {185,5},
              [{atom,{185,5},b_br},
               {map,{185,5},[]},
               {tuple,
                   {185,16},
                   [{atom,{185,16},b_literal},{atom,{185,31},true}]},
               {var,{185,42},'L'},
               {var,{185,49},'L'}]}]},
     {clause,
         {186,1},
         [{var,{186,10},'L'},
          {var,{186,13},'From'},
          {var,{186,19},'Bs'},
          {var,{186,23},'St'}],
         [],
         [{debug_line,187,52},
          {call,
              {187,5},
              {atom,{187,5},shortcut_1},
              [{var,{187,16},'L'},
               {var,{187,19},'From'},
               {var,{187,25},'Bs'},
               {block,0,
                   [{call,
                        {187,29},
                        {remote,
                            {187,33},
                            {atom,{187,29},sets},
                            {atom,{187,34},new}},
                        []}]},
               {var,{187,41},'St'}]}]}]}.
{function,
    {189,1},
    shortcut_1,5,
    [{clause,
         {189,1},
         [{var,{189,1},'_'},
          {var,{189,1},'_'},
          {var,{189,1},'_'},
          {var,{189,1},'_'},
          {var,{189,1},'_'}],
         [[{call,
               {189,1},
               {remote,
                   {189,1},
                   {atom,{189,1},fake},
                   {atom,{189,1},is_beam_bif_info}},
               []}]],
         [{debug_line,189,53},{atom,{189,1},ignore}]},
     {clause,
         {189,1},
         [{var,{189,12},'L'},
          {var,{189,15},'From'},
          {var,{189,21},'Bs0'},
          {var,{189,26},'UnsetVars0'},
          {var,{189,38},'St'}],
         [],
         [{debug_line,190,54},
          {'case',
              {190,5},
              {call,
                  {190,10},
                  {atom,{190,10},shortcut_2},
                  [{var,{190,21},'L'},
                   {var,{190,24},'From'},
                   {var,{190,30},'Bs0'},
                   {var,{190,35},'UnsetVars0'},
                   {var,{190,47},'St'}]},
              [{clause,
                   {191,9},
                   [{atom,{191,9},none}],
                   [],
                   [{debug_line,194,55},
                    {tuple,
                        {194,13},
                        [{atom,{194,13},b_br},
                         {map,{194,13},[]},
                         {tuple,
                             {194,24},
                             [{atom,{194,24},b_literal},{atom,{194,39},true}]},
                         {var,{194,50},'L'},
                         {var,{194,57},'L'}]}]},
               {clause,
                   {195,9},
                   [{tuple,
                        {195,9},
                        [{match,
                             {195,10},
                             {tuple,
                                 {195,10},
                                 [{atom,{195,10},b_br},
                                  {var,{195,10},'_'},
                                  {tuple,
                                      {195,21},
                                      [{atom,{195,21},b_var},
                                       {var,{195,21},'_'}]},
                                  {var,{195,10},'_'},
                                  {var,{195,10},'_'}]},
                             {var,{195,31},'Br'}},
                         {var,{195,34},'_'},
                         {var,{195,36},'_'}]}],
                   [],
                   [{debug_line,197,56},{var,{197,13},'Br'}]},
               {clause,
                   {198,9},
                   [{tuple,
                        {198,9},
                        [{tuple,
                             {198,10},
                             [{atom,{198,10},b_br},
                              {var,{198,10},'_'},
                              {tuple,
                                  {198,21},
                                  [{atom,{198,21},b_literal},
                                   {atom,{198,36},true}]},
                              {var,{198,47},'Succ'},
                              {var,{198,10},'_'}]},
                         {var,{198,53},'Bs'},
                         {var,{198,56},'UnsetVars'}]}],
                   [],
                   [{debug_line,200,57},
                    {call,
                        {200,13},
                        {atom,{200,13},shortcut_1},
                        [{var,{200,24},'Succ'},
                         {var,{200,30},'L'},
                         {var,{200,33},'Bs'},
                         {var,{200,37},'UnsetVars'},
                         {var,{200,48},'St'}]}]}]}]}]}.
{function,
    {204,1},
    shortcut_2,5,
    [{clause,
         {204,1},
         [{var,{204,1},'_'},
          {var,{204,1},'_'},
          {var,{204,1},'_'},
          {var,{204,1},'_'},
          {var,{204,1},'_'}],
         [[{call,
               {204,1},
               {remote,
                   {204,1},
                   {atom,{204,1},fake},
                   {atom,{204,1},is_beam_bif_info}},
               []}]],
         [{debug_line,204,58},{atom,{204,1},ignore}]},
     {clause,
         {204,1},
         [{var,{204,12},'L'},
          {var,{204,15},'From'},
          {var,{204,21},'Bs'},
          {var,{204,25},'UnsetVars'},
          {var,{204,36},'St'}],
         [],
         [{debug_line,205,59},
          {'case',
              {205,5},
              {call,
                  {205,10},
                  {remote,{205,14},{atom,{205,10},sets},{atom,{205,15},size}},
                  [{var,{205,20},'UnsetVars'}]},
              [{clause,
                   {206,9},
                   [{var,{206,9},'SetSize'}],
                   [[{op,{206,30},
                         '>',
                         {var,{206,22},'SetSize'},
                         {integer,{206,32},64}}]],
                   [{debug_line,211,60},{atom,{211,13},none}]},
               {clause,
                   {212,9},
                   [{var,{212,9},'_SetSize'}],
                   [],
                   [{debug_line,213,61},
                    {call,
                        {213,13},
                        {atom,{213,13},shortcut_3},
                        [{var,{213,24},'L'},
                         {var,{213,27},'From'},
                         {var,{213,33},'Bs'},
                         {var,{213,37},'UnsetVars'},
                         {var,{213,48},'St'}]}]}]}]}]}.
{function,
 {216,1},
 shortcut_3,5,
 [{clause,
   {216,1},
   [{var,{216,1},'_'},
    {var,{216,1},'_'},
    {var,{216,1},'_'},
    {var,{216,1},'_'},
    {var,{216,1},'_'}],
   [[{call,
      {216,1},
      {remote,{216,1},{atom,{216,1},fake},{atom,{216,1},is_beam_bif_info}},
      []}]],
   [{debug_line,216,62},{atom,{216,1},ignore}]},
  {clause,
   {216,1},
   [{var,{216,12},'L'},
    {var,{216,15},'From'},
    {var,{216,21},'Bs0'},
    {var,{216,26},'UnsetVars0'},
    {var,{216,38},'St'}],
   [],
   [{debug_line,217,63},
    {match,
     {217,5},
     {tuple,
      {217,5},
      [{atom,{217,5},b_blk},
       {var,{217,5},'_'},
       {var,{217,15},'Is'},
       {var,{217,23},'Last'}]},
     {call,
      {217,31},
      {atom,{217,31},get_block},
      [{var,{217,41},'L'},{var,{217,44},'St'}]}},
    {debug_line,218,64},
    {'case',
     {218,5},
     {call,
      {218,10},
      {atom,{218,10},eval_is},
      [{var,{218,18},'Is'},
       {var,{218,22},'From'},
       {var,{218,28},'Bs0'},
       {var,{218,33},'St'}]},
     [{clause,
       {219,9},
       [{atom,{219,9},none}],
       [],
       [{debug_line,222,65},{atom,{222,13},none}]},
      {clause,
       {223,9},
       [{var,{223,9},'Bs'}],
       [],
       [{debug_line,227,66},
        {'case',
         {227,13},
         {call,
          {227,18},
          {atom,{227,18},eval_terminator},
          [{var,{227,34},'Last'},{var,{227,40},'Bs'},{var,{227,44},'St'}]},
         [{clause,
           {228,17},
           [{atom,{228,17},none}],
           [],
           [{debug_line,232,67},{atom,{232,21},none}]},
          {clause,
           {233,17},
           [{match,
             {233,17},
             {tuple,
              {233,17},
              [{atom,{233,17},b_br},
               {var,{233,17},'_'},
               {var,{233,17},'_'},
               {var,{233,17},'_'},
               {var,{233,17},'_'}]},
             {var,{233,25},'Br'}}],
           [],
           [{debug_line,237,68},
            {'case',
             {237,21},
             {call,
              {237,26},
              {atom,{237,26},update_unset_vars},
              [{var,{237,44},'L'},
               {var,{237,47},'Is'},
               {var,{237,51},'Br'},
               {var,{237,55},'UnsetVars0'},
               {var,{237,67},'St'}]},
             [{clause,
               {238,25},
               [{atom,{238,25},unsafe}],
               [],
               [{debug_line,242,69},
                {call,
                 {242,29},
                 {atom,{242,29},shortcut_unsafe_br},
                 [{var,{242,48},'Br'},
                  {var,{242,52},'L'},
                  {var,{242,55},'Bs'},
                  {var,{242,59},'UnsetVars0'},
                  {var,{242,71},'St'}]}]},
              {clause,
               {243,25},
               [{tuple,
                 {243,25},
                 [{atom,{243,26},safe},{var,{243,32},'UnsetVars'}]}],
               [],
               [{debug_line,246,70},
                {call,
                 {246,29},
                 {atom,{246,29},shortcut_test_br},
                 [{var,{246,46},'Br'},
                  {var,{246,50},'L'},
                  {var,{246,53},'Bs'},
                  {var,{246,57},'UnsetVars'},
                  {var,{246,68},'St'}]}]}]}]}]}]}]}]}]}.
{function,
    {251,1},
    shortcut_test_br,5,
    [{clause,
         {251,1},
         [{var,{251,1},'_'},
          {var,{251,1},'_'},
          {var,{251,1},'_'},
          {var,{251,1},'_'},
          {var,{251,1},'_'}],
         [[{call,
               {251,1},
               {remote,
                   {251,1},
                   {atom,{251,1},fake},
                   {atom,{251,1},is_beam_bif_info}},
               []}]],
         [{debug_line,251,71},{atom,{251,1},ignore}]},
     {clause,
         {251,1},
         [{var,{251,18},'Br'},
          {var,{251,22},'From'},
          {var,{251,28},'Bs'},
          {var,{251,32},'UnsetVars'},
          {var,{251,43},'St'}],
         [],
         [{debug_line,252,72},
          {'case',
              {252,5},
              {call,
                  {252,10},
                  {atom,{252,10},is_br_safe},
                  [{var,{252,21},'UnsetVars'},
                   {var,{252,32},'Br'},
                   {var,{252,36},'St'}]},
              [{clause,
                   {253,9},
                   [{atom,{253,9},false}],
                   [],
                   [{debug_line,254,73},
                    {call,
                        {254,13},
                        {atom,{254,13},shortcut_unsafe_br},
                        [{var,{254,32},'Br'},
                         {var,{254,36},'From'},
                         {var,{254,42},'Bs'},
                         {var,{254,46},'UnsetVars'},
                         {var,{254,57},'St'}]}]},
               {clause,
                   {255,9},
                   [{atom,{255,9},true}],
                   [],
                   [{debug_line,256,74},
                    {call,
                        {256,13},
                        {atom,{256,13},shortcut_safe_br},
                        [{var,{256,30},'Br'},
                         {var,{256,34},'From'},
                         {var,{256,40},'Bs'},
                         {var,{256,44},'UnsetVars'},
                         {var,{256,55},'St'}]}]}]}]}]}.
{function,
 {259,1},
 shortcut_unsafe_br,5,
 [{clause,
   {259,1},
   [{var,{259,1},'_'},
    {var,{259,1},'_'},
    {var,{259,1},'_'},
    {var,{259,1},'_'},
    {var,{259,1},'_'}],
   [[{call,
      {259,1},
      {remote,{259,1},{atom,{259,1},fake},{atom,{259,1},is_beam_bif_info}},
      []}]],
   [{debug_line,259,75},{atom,{259,1},ignore}]},
  {clause,
   {259,1},
   [{var,{259,20},'Br'},
    {var,{259,24},'From'},
    {var,{259,30},'Bs'},
    {var,{259,34},'UnsetVars'},
    {match,
     {259,45},
     {tuple,
      {259,45},
      [{atom,{259,45},st},
       {var,{259,45},'_'},
       {var,{259,45},'_'},
       {var,{259,45},'_'},
       {var,{259,45},'_'},
       {var,{259,56},'Target'}]},
     {var,{259,64},'St'}}],
   [],
   [{debug_line,265,76},
    {'case',
     {265,5},
     {var,{265,10},'Br'},
     [{clause,
       {266,9},
       [{tuple,
         {266,9},
         [{atom,{266,9},b_br},
          {var,{266,9},'_'},
          {tuple,{266,20},[{atom,{266,20},b_literal},{atom,{266,35},true}]},
          {var,{266,46},'L'},
          {var,{266,9},'_'}]}],
       [],
       [{debug_line,267,77},
        {'case',
         {267,13},
         {var,{267,18},'Target'},
         [{clause,
           {268,17},
           [{var,{268,17},'L'}],
           [],
           [{debug_line,271,78},{atom,{271,21},none}]},
          {clause,
           {272,17},
           [{var,{272,17},'_'}],
           [],
           [{debug_line,275,79},
            {call,
             {275,21},
             {atom,{275,21},shortcut_2},
             [{var,{275,32},'L'},
              {var,{275,35},'From'},
              {var,{275,41},'Bs'},
              {var,{275,45},'UnsetVars'},
              {var,{275,56},'St'}]}]}]}]},
      {clause,
       {277,9},
       [{tuple,
         {277,9},
         [{atom,{277,9},b_br},
          {var,{277,9},'_'},
          {tuple,{277,20},[{atom,{277,20},b_var},{var,{277,20},'_'}]},
          {var,{277,34},'Succ'},
          {var,{277,44},'Fail'}]}],
       [],
       [{debug_line,278,80},
        {'case',
         {278,13},
         {tuple,{278,18},[{var,{278,19},'Succ'},{var,{278,24},'Fail'}]},
         [{clause,
           {279,17},
           [{tuple,{279,17},[{var,{279,18},'L'},{var,{279,20},'Target'}]}],
           [],
           [{debug_line,284,81},
            {call,
             {284,21},
             {atom,{284,21},shortcut_2},
             [{var,{284,32},'L'},
              {var,{284,35},'From'},
              {var,{284,41},'Bs'},
              {var,{284,45},'UnsetVars'},
              {var,{284,56},'St'}]}]},
          {clause,
           {285,17},
           [{tuple,{285,17},[{var,{285,18},'Target'},{var,{285,25},'L'}]}],
           [],
           [{debug_line,290,82},
            {call,
             {290,21},
             {atom,{290,21},shortcut_2},
             [{var,{290,32},'L'},
              {var,{290,35},'From'},
              {var,{290,41},'Bs'},
              {var,{290,45},'UnsetVars'},
              {var,{290,56},'St'}]}]},
          {clause,
           {291,17},
           [{tuple,{291,17},[{var,{291,18},'_'},{var,{291,20},'_'}]}],
           [],
           [{debug_line,292,83},
            {'case',
             {292,21},
             {var,{292,26},'Target'},
             [{clause,
               {293,25},
               [{atom,{293,25},any}],
               [],
               [{debug_line,296,84},
                {call,
                 {296,29},
                 {atom,{296,29},shortcut_two_way},
                 [{var,{296,46},'Br'},
                  {var,{296,50},'From'},
                  {var,{296,56},'Bs'},
                  {var,{296,60},'UnsetVars'},
                  {var,{296,71},'St'}]}]},
              {clause,
               {297,25},
               [{atom,{297,25},one_way}],
               [],
               [{debug_line,300,85},
                {call,
                 {300,29},
                 {atom,{300,29},shortcut_two_way},
                 [{var,{300,46},'Br'},
                  {var,{300,50},'From'},
                  {var,{300,56},'Bs'},
                  {var,{300,60},'UnsetVars'},
                  {var,{300,71},'St'}]}]},
              {clause,
               {301,25},
               [{var,{301,25},'_'}],
               [[{call,
                  {301,32},
                  {remote,
                   {301,32},
                   {atom,{301,32},erlang},
                   {atom,{301,32},is_integer}},
                  [{var,{301,43},'Target'}]}]],
               [{debug_line,305,86},{atom,{305,29},none}]}]}]}]}]}]}]}]}.
{function,
 {310,1},
 shortcut_safe_br,5,
 [{clause,
   {310,1},
   [{var,{310,1},'_'},
    {var,{310,1},'_'},
    {var,{310,1},'_'},
    {var,{310,1},'_'},
    {var,{310,1},'_'}],
   [[{call,
      {310,1},
      {remote,{310,1},{atom,{310,1},fake},{atom,{310,1},is_beam_bif_info}},
      []}]],
   [{debug_line,310,87},{atom,{310,1},ignore}]},
  {clause,
   {310,1},
   [{var,{310,18},'Br'},
    {var,{310,22},'From'},
    {var,{310,28},'Bs'},
    {var,{310,32},'UnsetVars'},
    {match,
     {310,43},
     {tuple,
      {310,43},
      [{atom,{310,43},st},
       {var,{310,43},'_'},
       {var,{310,43},'_'},
       {var,{310,43},'_'},
       {var,{310,43},'_'},
       {var,{310,54},'Target'}]},
     {var,{310,62},'St'}}],
   [],
   [{debug_line,314,88},
    {'case',
     {314,5},
     {var,{314,10},'Br'},
     [{clause,
       {315,9},
       [{tuple,
         {315,9},
         [{atom,{315,9},b_br},
          {var,{315,9},'_'},
          {tuple,{315,20},[{atom,{315,20},b_literal},{atom,{315,35},true}]},
          {var,{315,46},'L'},
          {var,{315,9},'_'}]}],
       [],
       [{debug_line,317,89},
        {'case',
         {317,13},
         {var,{317,18},'Target'},
         [{clause,
           {318,17},
           [{atom,{318,17},any}],
           [],
           [{debug_line,320,90},
            {tuple,
             {320,21},
             [{var,{320,22},'Br'},
              {var,{320,25},'Bs'},
              {var,{320,28},'UnsetVars'}]}]},
          {clause,
           {321,17},
           [{atom,{321,17},one_way}],
           [],
           [{debug_line,324,91},
            {tuple,
             {324,21},
             [{var,{324,22},'Br'},
              {var,{324,25},'Bs'},
              {var,{324,28},'UnsetVars'}]}]},
          {clause,
           {325,17},
           [{var,{325,17},'L'}],
           [[{call,
              {325,24},
              {remote,
               {325,24},
               {atom,{325,24},erlang},
               {atom,{325,24},is_integer}},
              [{var,{325,35},'Target'}]}]],
           [{debug_line,327,92},
            {tuple,
             {327,21},
             [{var,{327,22},'Br'},
              {var,{327,25},'Bs'},
              {var,{327,28},'UnsetVars'}]}]},
          {clause,
           {328,17},
           [{var,{328,17},'_'}],
           [[{call,
              {328,24},
              {remote,
               {328,24},
               {atom,{328,24},erlang},
               {atom,{328,24},is_integer}},
              [{var,{328,35},'Target'}]}]],
           [{debug_line,332,93},
            {call,
             {332,21},
             {atom,{332,21},shortcut_2},
             [{var,{332,32},'L'},
              {var,{332,35},'From'},
              {var,{332,41},'Bs'},
              {var,{332,45},'UnsetVars'},
              {var,{332,56},'St'}]}]}]}]},
      {clause,
       {334,9},
       [{tuple,
         {334,9},
         [{atom,{334,9},b_br},
          {var,{334,9},'_'},
          {tuple,{334,20},[{atom,{334,20},b_var},{var,{334,20},'_'}]},
          {var,{334,9},'_'},
          {var,{334,9},'_'}]}],
       [],
       [{debug_line,336,94},
        {'if',
         {336,13},
         [{clause,
           {337,17},
           [],
           [[{op,{337,24},'=:=',{var,{337,17},'Target'},{atom,{337,28},any}}],
            [{op,
              {337,40},
              '=:=',
              {var,{337,33},'Target'},
              {atom,{337,44},one_way}}]],
           [{debug_line,340,95},
            {'case',
             {340,21},
             {call,
              {340,26},
              {atom,{340,26},shortcut_two_way},
              [{var,{340,43},'Br'},
               {var,{340,47},'From'},
               {var,{340,53},'Bs'},
               {var,{340,57},'UnsetVars'},
               {var,{340,68},'St'}]},
             [{clause,
               {341,25},
               [{atom,{341,25},none}],
               [[{op,
                  {341,42},
                  '=:=',
                  {var,{341,35},'Target'},
                  {atom,{341,46},any}}]],
               [{debug_line,344,96},
                {tuple,
                 {344,29},
                 [{var,{344,30},'Br'},
                  {var,{344,33},'Bs'},
                  {var,{344,36},'UnsetVars'}]}]},
              {clause,
               {345,25},
               [{atom,{345,25},none}],
               [[{op,
                  {345,42},
                  '=:=',
                  {var,{345,35},'Target'},
                  {atom,{345,46},one_way}}]],
               [{debug_line,349,97},{atom,{349,29},none}]},
              {clause,
               {350,25},
               [{match,
                 {350,25},
                 {tuple,
                  {350,25},
                  [{var,{350,26},'_'},{var,{350,28},'_'},{var,{350,30},'_'}]},
                 {var,{350,33},'Res'}}],
               [],
               [{debug_line,353,98},{var,{353,29},'Res'}]}]}]},
          {clause,
           {355,17},
           [],
           [[{call,
              {355,17},
              {remote,
               {355,17},
               {atom,{355,17},erlang},
               {atom,{355,17},is_integer}},
              [{var,{355,28},'Target'}]}]],
           [{debug_line,359,99},{atom,{359,21},none}]}]}]}]}]}]}.
{function,
 {363,1},
 update_unset_vars,5,
 [{clause,
   {363,1},
   [{var,{363,1},'_'},
    {var,{363,1},'_'},
    {var,{363,1},'_'},
    {var,{363,1},'_'},
    {var,{363,1},'_'}],
   [[{call,
      {363,1},
      {remote,{363,1},{atom,{363,1},fake},{atom,{363,1},is_beam_bif_info}},
      []}]],
   [{debug_line,363,100},{atom,{363,1},ignore}]},
  {clause,
   {363,1},
   [{var,{363,19},'L'},
    {var,{363,22},'Is'},
    {var,{363,26},'Br'},
    {var,{363,30},'UnsetVars'},
    {tuple,
     {363,41},
     [{atom,{363,41},st},
      {var,{363,41},'_'},
      {var,{363,41},'_'},
      {var,{363,55},'Skippable'},
      {var,{363,41},'_'},
      {var,{363,41},'_'}]}],
   [],
   [{debug_line,364,101},
    {'case',
     {364,5},
     {call,
      {364,10},
      {remote,{364,10},{atom,{364,10},erlang},{atom,{364,10},is_map_key}},
      [{var,{364,21},'L'},{var,{364,24},'Skippable'}]},
     [{clause,
       {365,9},
       [{atom,{365,9},true}],
       [],
       [{debug_line,369,102},
        {'case',
         {369,13},
         {var,{369,18},'Br'},
         [{clause,
           {370,17},
           [{tuple,
             {370,17},
             [{atom,{370,17},b_br},
              {var,{370,17},'_'},
              {match,
               {370,28},
               {tuple,{370,28},[{atom,{370,28},b_var},{var,{370,28},'_'}]},
               {var,{370,37},'Bool'}},
              {var,{370,17},'_'},
              {var,{370,17},'_'}]}],
           [],
           [{debug_line,371,103},
            {'case',
             {371,21},
             {call,
              {371,26},
              {remote,
               {371,26},
               {atom,{371,26},lists},
               {atom,{371,26},keymember}},
              [{var,{371,36},'Bool'},
               {block,0,[{integer,{371,42},3}]},
               {var,{371,54},'Is'}]},
             [{clause,
               {372,25},
               [{atom,{372,25},true}],
               [],
               [{debug_line,377,104},{atom,{377,29},unsafe}]},
              {clause,
               {378,25},
               [{atom,{378,25},false}],
               [],
               [{debug_line,384,105},
                {tuple,
                 {384,29},
                 [{atom,{384,30},safe},{var,{384,36},'UnsetVars'}]}]}]}]},
          {clause,
           {386,17},
           [{tuple,
             {386,17},
             [{atom,{386,17},b_br},
              {var,{386,17},'_'},
              {var,{386,17},'_'},
              {var,{386,17},'_'},
              {var,{386,17},'_'}]}],
           [],
           [{debug_line,387,106},
            {tuple,
             {387,21},
             [{atom,{387,22},safe},{var,{387,28},'UnsetVars'}]}]}]}]},
      {clause,
       {389,9},
       [{atom,{389,9},false}],
       [],
       [{debug_line,392,107},
        {match,
         {392,13},
         {var,{392,13},'SetInThisBlock'},
         {lc,
          {392,30},
          {block,0,[{var,{392,31},'V'}]},
          [{block,0,[{atom,{392,54},true}]},
           {generate_strict,
            {392,50},
            {tuple,
             {392,36},
             [{atom,{392,36},b_set},
              {var,{392,36},'_'},
              {var,{392,47},'V'},
              {var,{392,36},'_'},
              {var,{392,36},'_'}]},
            {var,{392,54},'Is'}}]}},
        {debug_line,393,108},
        {tuple,
         {393,13},
         [{atom,{393,14},safe},
          {call,
           {393,20},
           {atom,{393,20},list_set_union},
           [{var,{393,35},'SetInThisBlock'},
            {var,{393,51},'UnsetVars'}]}]}]}]}]}]}.
{function,
 {396,1},
 shortcut_two_way,5,
 [{clause,
   {396,1},
   [{var,{396,1},'_'},
    {var,{396,1},'_'},
    {var,{396,1},'_'},
    {var,{396,1},'_'},
    {var,{396,1},'_'}],
   [[{call,
      {396,1},
      {remote,{396,1},{atom,{396,1},fake},{atom,{396,1},is_beam_bif_info}},
      []}]],
   [{debug_line,396,109},{atom,{396,1},ignore}]},
  {clause,
   {396,1},
   [{tuple,
     {396,18},
     [{atom,{396,18},b_br},
      {var,{396,18},'_'},
      {var,{396,18},'_'},
      {var,{396,29},'Succ'},
      {var,{396,39},'Fail'}]},
    {var,{396,46},'From'},
    {var,{396,52},'Bs0'},
    {var,{396,57},'UnsetVars0'},
    {var,{396,69},'St0'}],
   [],
   [{debug_line,397,110},
    {'case',
     {397,5},
     {call,
      {397,10},
      {atom,{397,10},shortcut_2},
      [{var,{397,21},'Succ'},
       {var,{397,27},'From'},
       {var,{397,33},'Bs0'},
       {var,{397,38},'UnsetVars0'},
       {block,0,
        [{block,
          {397,50},
          [{match,{397,50},{var,{397,50},rec13},{var,{397,50},'St0'}},
           {'case',
            {397,57},
            {var,{397,50},rec13},
            [{clause,
              {397,57},
              [{tuple,
                {397,57},
                [{atom,{397,57},st},
                 {var,{397,57},'_'},
                 {var,{397,57},'_'},
                 {var,{397,57},'_'},
                 {var,{397,57},'_'},
                 {var,{397,57},'_'}]}],
              [],
              [{call,
                {397,57},
                {remote,
                 {397,57},
                 {atom,{397,57},erlang},
                 {atom,{397,57},setelement}},
                [{integer,{397,57},6},
                 {var,{397,50},rec13},
                 {var,{397,64},'Fail'}]}]},
             {clause,
              [{generated,true},{location,{397,57}}],
              [{var,[{generated,true},{location,{397,57}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{397,57}}],
                {remote,
                 [{generated,true},{location,{397,57}}],
                 {atom,[{generated,true},{location,{397,57}}],erlang},
                 {atom,[{generated,true},{location,{397,57}}],error}},
                [{tuple,
                  [{generated,true},{location,{397,57}}],
                  [{atom,[{generated,true},{location,{397,57}}],badrecord},
                   {var,{397,50},rec13}]}]}]}]}]}]}]},
     [{clause,
       {398,9},
       [{match,
         {398,9},
         {tuple,
          {398,9},
          [{tuple,
            {398,10},
            [{atom,{398,10},b_br},
             {var,{398,10},'_'},
             {tuple,{398,21},[{atom,{398,21},b_literal},{var,{398,21},'_'}]},
             {var,{398,39},'Fail'},
             {var,{398,10},'_'}]},
           {var,{398,45},'_'},
           {var,{398,47},'_'}]},
         {var,{398,50},'Res'}}],
       [],
       [{debug_line,399,111},{var,{399,13},'Res'}]},
      {clause,
       {400,9},
       [{atom,{400,9},none}],
       [],
       [{debug_line,401,112},
        {match,
         {401,13},
         {var,{401,13},'St'},
         {block,
          {401,18},
          [{match,{401,18},{var,{401,18},rec14},{var,{401,18},'St0'}},
           {'case',
            {401,25},
            {var,{401,18},rec14},
            [{clause,
              {401,25},
              [{tuple,
                {401,25},
                [{atom,{401,25},st},
                 {var,{401,25},'_'},
                 {var,{401,25},'_'},
                 {var,{401,25},'_'},
                 {var,{401,25},'_'},
                 {var,{401,25},'_'}]}],
              [],
              [{call,
                {401,25},
                {remote,
                 {401,25},
                 {atom,{401,25},erlang},
                 {atom,{401,25},setelement}},
                [{integer,{401,25},6},
                 {var,{401,18},rec14},
                 {var,{401,32},'Succ'}]}]},
             {clause,
              [{generated,true},{location,{401,25}}],
              [{var,[{generated,true},{location,{401,25}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{401,25}}],
                {remote,
                 [{generated,true},{location,{401,25}}],
                 {atom,[{generated,true},{location,{401,25}}],erlang},
                 {atom,[{generated,true},{location,{401,25}}],error}},
                [{tuple,
                  [{generated,true},{location,{401,25}}],
                  [{atom,[{generated,true},{location,{401,25}}],badrecord},
                   {var,{401,18},rec14}]}]}]}]}]}},
        {debug_line,402,113},
        {'case',
         {402,13},
         {call,
          {402,18},
          {atom,{402,18},shortcut_2},
          [{var,{402,29},'Fail'},
           {var,{402,35},'From'},
           {var,{402,41},'Bs0'},
           {var,{402,46},'UnsetVars0'},
           {var,{402,58},'St'}]},
         [{clause,
           {403,17},
           [{match,
             {403,17},
             {tuple,
              {403,17},
              [{tuple,
                {403,18},
                [{atom,{403,18},b_br},
                 {var,{403,18},'_'},
                 {tuple,
                  {403,29},
                  [{atom,{403,29},b_literal},{var,{403,29},'_'}]},
                 {var,{403,47},'Succ'},
                 {var,{403,18},'_'}]},
               {var,{403,53},'_'},
               {var,{403,55},'_'}]},
             {var,{403,58},'Res'}}],
           [],
           [{debug_line,404,114},{var,{404,21},'Res'}]},
          {clause,
           {405,17},
           [{atom,{405,17},none}],
           [],
           [{debug_line,406,115},{atom,{406,21},none}]}]}]}]}]}]}.
{function,
    {410,1},
    get_block,2,
    [{clause,
         {410,1},
         [{var,{410,1},'_'},{var,{410,1},'_'}],
         [[{call,
               {410,1},
               {remote,
                   {410,1},
                   {atom,{410,1},fake},
                   {atom,{410,1},is_beam_bif_info}},
               []}]],
         [{debug_line,410,116},{atom,{410,1},ignore}]},
     {clause,
         {410,1},
         [{var,{410,11},'L'},{var,{410,14},'St'}],
         [],
         [{debug_line,411,117},
          {match,
              {411,5},
              {tuple,
                  {411,5},
                  [{atom,{411,5},st},
                   {map,
                       {411,12},
                       [{map_field_exact,
                            {411,15},
                            {var,{411,14},'L'},
                            {var,{411,17},'Blk'}}]},
                   {var,{411,5},'_'},
                   {var,{411,5},'_'},
                   {var,{411,5},'_'},
                   {var,{411,5},'_'}]},
              {var,{411,25},'St'}},
          {debug_line,412,118},
          {var,{412,5},'Blk'}]}]}.
{function,
 {414,1},
 is_br_safe,3,
 [{clause,
   {414,1},
   [{var,{414,1},'_'},{var,{414,1},'_'},{var,{414,1},'_'}],
   [[{call,
      {414,1},
      {remote,{414,1},{atom,{414,1},fake},{atom,{414,1},is_beam_bif_info}},
      []}]],
   [{debug_line,414,119},{atom,{414,1},ignore}]},
  {clause,
   {414,1},
   [{var,{414,12},'UnsetVars'},
    {var,{414,23},'Br'},
    {match,
     {414,27},
     {tuple,
      {414,27},
      [{atom,{414,27},st},
       {var,{414,27},'_'},
       {var,{414,34},'Us'},
       {var,{414,27},'_'},
       {var,{414,27},'_'},
       {var,{414,27},'_'}]},
     {var,{414,38},'St'}}],
   [],
   [{debug_line,416,120},
    {'case',
     {416,5},
     {var,{416,10},'Br'},
     [{clause,
       {417,9},
       [{tuple,
         {417,9},
         [{atom,{417,9},b_br},
          {var,{417,9},'_'},
          {match,
           {417,20},
           {tuple,{417,20},[{atom,{417,20},b_var},{var,{417,20},'_'}]},
           {var,{417,29},'V'}},
          {var,{417,36},'Succ'},
          {var,{417,46},'Fail'}]}],
       [],
       [{debug_line,418,121},
        {match,
         {418,13},
         {map,
          {418,13},
          [{map_field_exact,
            {418,19},
            {var,{418,15},'Succ'},
            {var,{418,21},'Used0'}},
           {map_field_exact,
            {418,31},
            {var,{418,27},'Fail'},
            {var,{418,33},'Used1'}}]},
         {var,{418,42},'Us'}},
        {debug_line,422,122},
        {'case',
         {422,13},
         {op,
          {422,13},
          'not',
          {call,
           {422,17},
           {remote,{422,21},{atom,{422,17},sets},{atom,{422,22},is_element}},
           [{var,{422,33},'V'},{var,{422,36},'UnsetVars'}]}},
         [{clause,
           {422,13},
           [{atom,{422,13},true}],
           [],
           [{debug_line,423,123},
            {'case',
             {423,17},
             {call,
              {423,17},
              {remote,
               {423,21},
               {atom,{423,17},sets},
               {atom,{423,22},is_disjoint}},
              [{var,{423,34},'Used0'},{var,{423,41},'UnsetVars'}]},
             [{clause,
               {423,17},
               [{atom,{423,17},true}],
               [],
               [{debug_line,424,124},
                {call,
                 {424,17},
                 {remote,
                  {424,21},
                  {atom,{424,17},sets},
                  {atom,{424,22},is_disjoint}},
                 [{var,{424,34},'Used1'},{var,{424,41},'UnsetVars'}]}]},
              {clause,
               {423,17},
               [{atom,{423,17},false}],
               [],
               [{atom,{423,17},false}]},
              {clause,
               [{generated,true},{location,{423,17}}],
               [{var,{423,17},cov1}],
               [],
               [{call,
                 {423,17},
                 {remote,
                  {423,17},
                  {atom,{423,17},erlang},
                  {atom,{423,17},error}},
                 [{block,0,
                   [{tuple,
                     {423,17},
                     [{atom,{423,17},badarg},{var,{423,17},cov1}]}]}]}]}]}]},
          {clause,{422,13},[{atom,{422,13},false}],[],[{atom,{422,13},false}]},
          {clause,
           [{generated,true},{location,{422,13}}],
           [{var,{422,13},cov2}],
           [],
           [{call,
             {422,13},
             {remote,{422,13},{atom,{422,13},erlang},{atom,{422,13},error}},
             [{block,0,
               [{tuple,
                 {422,13},
                 [{atom,{422,13},badarg},{var,{422,13},cov2}]}]}]}]}]}]},
      {clause,
       {425,9},
       [{tuple,
         {425,9},
         [{atom,{425,9},b_br},
          {var,{425,9},'_'},
          {var,{425,9},'_'},
          {var,{425,20},'Same'},
          {var,{425,30},'Same'}]}],
       [],
       [{debug_line,428,125},
        {'case',
         {428,13},
         {op,
          {428,13},
          'not',
          {call,
           {428,17},
           {atom,{428,17},is_forbidden},
           [{var,{428,30},'Same'},{var,{428,36},'St'}]}},
         [{clause,
           {428,13},
           [{atom,{428,13},true}],
           [],
           [{debug_line,429,126},
            {call,
             {429,17},
             {remote,
              {429,21},
              {atom,{429,17},sets},
              {atom,{429,22},is_disjoint}},
             [{block,0,
               [{call,
                 {429,34},
                 {remote,
                  {429,34},
                  {atom,{429,34},erlang},
                  {atom,{429,34},map_get}},
                 [{var,{429,42},'Same'},{var,{429,48},'Us'}]}]},
              {var,{429,53},'UnsetVars'}]}]},
          {clause,{428,13},[{atom,{428,13},false}],[],[{atom,{428,13},false}]},
          {clause,
           [{generated,true},{location,{428,13}}],
           [{var,{428,13},cov3}],
           [],
           [{call,
             {428,13},
             {remote,{428,13},{atom,{428,13},erlang},{atom,{428,13},error}},
             [{block,0,
               [{tuple,
                 {428,13},
                 [{atom,{428,13},badarg},{var,{428,13},cov3}]}]}]}]}]}]}]}]}]}.
{function,
    {432,1},
    is_forbidden,2,
    [{clause,
         {432,1},
         [{var,{432,1},'_'},{var,{432,1},'_'}],
         [[{call,
               {432,1},
               {remote,
                   {432,1},
                   {atom,{432,1},fake},
                   {atom,{432,1},is_beam_bif_info}},
               []}]],
         [{debug_line,432,127},{atom,{432,1},ignore}]},
     {clause,
         {432,1},
         [{var,{432,14},'L'},{var,{432,17},'St'}],
         [],
         [{debug_line,433,128},
          {'case',
              {433,5},
              {call,
                  {433,10},
                  {atom,{433,10},get_block},
                  [{var,{433,20},'L'},{var,{433,23},'St'}]},
              [{clause,
                   {434,9},
                   [{tuple,
                        {434,9},
                        [{atom,{434,9},b_blk},
                         {var,{434,9},'_'},
                         {cons,
                             {434,19},
                             {tuple,
                                 {434,20},
                                 [{atom,{434,20},b_set},
                                  {var,{434,20},'_'},
                                  {var,{434,20},'_'},
                                  {atom,{434,30},phi},
                                  {var,{434,20},'_'}]},
                             {var,{434,35},'_'}},
                         {var,{434,9},'_'}]}],
                   [],
                   [{debug_line,435,129},{atom,{435,13},true}]},
               {clause,
                   {436,9},
                   [{tuple,
                        {436,9},
                        [{atom,{436,9},b_blk},
                         {var,{436,9},'_'},
                         {cons,
                             {436,19},
                             {match,
                                 {436,20},
                                 {tuple,
                                     {436,20},
                                     [{atom,{436,20},b_set},
                                      {var,{436,20},'_'},
                                      {var,{436,20},'_'},
                                      {var,{436,20},'_'},
                                      {var,{436,20},'_'}]},
                                 {var,{436,29},'I'}},
                             {var,{436,31},'_'}},
                         {var,{436,9},'_'}]}],
                   [],
                   [{debug_line,437,130},
                    {call,
                        {437,13},
                        {remote,
                            {437,21},
                            {atom,{437,13},beam_ssa},
                            {atom,{437,22},is_loop_header}},
                        [{var,{437,37},'I'}]}]},
               {clause,
                   {438,9},
                   [{tuple,
                        {438,9},
                        [{atom,{438,9},b_blk},
                         {var,{438,9},'_'},
                         {var,{438,9},'_'},
                         {var,{438,9},'_'}]}],
                   [],
                   [{debug_line,438,131},{atom,{438,21},false}]}]}]}]}.
{function,
    {446,1},
    eval_is,4,
    [{clause,
         {446,1},
         [{var,{446,1},'_'},
          {var,{446,1},'_'},
          {var,{446,1},'_'},
          {var,{446,1},'_'}],
         [[{call,
               {446,1},
               {remote,
                   {446,1},
                   {atom,{446,1},fake},
                   {atom,{446,1},is_beam_bif_info}},
               []}]],
         [{debug_line,446,132},{atom,{446,1},ignore}]},
     {clause,
         {446,1},
         [{cons,
              {446,9},
              {tuple,
                  {446,10},
                  [{atom,{446,10},b_set},
                   {var,{446,10},'_'},
                   {var,{446,28},'Dst'},
                   {atom,{446,20},phi},
                   {var,{446,37},'Args'}]},
              {var,{446,43},'Is'}},
          {var,{446,48},'From'},
          {var,{446,54},'Bs0'},
          {var,{446,59},'St'}],
         [],
         [{debug_line,447,133},
          {match,
              {447,5},
              {var,{447,5},'Val'},
              {call,
                  {447,11},
                  {atom,{447,11},get_phi_arg},
                  [{var,{447,23},'Args'},{var,{447,29},'From'}]}},
          {debug_line,448,134},
          {match,
              {448,5},
              {var,{448,5},'Bs'},
              {call,
                  {448,10},
                  {atom,{448,10},bind_var},
                  [{var,{448,19},'Dst'},
                   {var,{448,24},'Val'},
                   {var,{448,29},'Bs0'}]}},
          {debug_line,449,135},
          {call,
              {449,5},
              {atom,{449,5},eval_is},
              [{var,{449,13},'Is'},
               {var,{449,17},'From'},
               {var,{449,23},'Bs'},
               {var,{449,27},'St'}]}]},
     {clause,
         {450,1},
         [{cons,
              {450,9},
              {tuple,
                  {450,10},
                  [{atom,{450,10},b_set},
                   {var,{450,10},'_'},
                   {var,{450,42},'Dst'},
                   {tuple,
                       {450,20},
                       [{atom,{450,21},succeeded},{atom,{450,31},guard}]},
                   {cons,{450,51},{var,{450,52},'Var'},{nil,{450,55}}}]},
              {nil,{450,57}}},
          {var,{450,60},'_From'},
          {var,{450,67},'Bs'},
          {var,{450,71},'_St'}],
         [],
         [{debug_line,451,136},
          {'case',
              {451,5},
              {var,{451,10},'Bs'},
              [{clause,
                   {452,9},
                   [{map,
                        {452,9},
                        [{map_field_exact,
                             {452,14},
                             {var,{452,11},'Var'},
                             {tuple,
                                 {452,16},
                                 [{atom,{452,16},b_literal},
                                  {var,{452,16},'_'}]}}]}],
                   [],
                   [{debug_line,453,137},
                    {call,
                        {453,13},
                        {atom,{453,13},bind_var},
                        [{var,{453,22},'Dst'},
                         {block,0,
                             [{tuple,
                                  {453,27},
                                  [{atom,{453,27},b_literal},
                                   {atom,{453,42},true}]}]},
                         {var,{453,49},'Bs'}]}]},
               {clause,
                   {454,9},
                   [{map,{454,9},[]}],
                   [],
                   [{debug_line,455,138},{var,{455,13},'Bs'}]}]}]},
     {clause,
         {457,1},
         [{cons,
              {457,9},
              {match,
                  {457,10},
                  {tuple,
                      {457,10},
                      [{atom,{457,10},b_set},
                       {var,{457,10},'_'},
                       {var,{457,32},'Dst'},
                       {tuple,
                           {457,20},
                           [{atom,{457,21},bif},{var,{457,25},'_'}]},
                       {var,{457,10},'_'}]},
                  {var,{457,37},'I0'}},
              {var,{457,40},'Is'}},
          {var,{457,45},'From'},
          {var,{457,51},'Bs'},
          {var,{457,55},'St'}],
         [],
         [{debug_line,458,139},
          {match,
              {458,5},
              {var,{458,5},'I'},
              {call,
                  {458,9},
                  {atom,{458,9},sub},
                  [{var,{458,13},'I0'},{var,{458,17},'Bs'}]}},
          {debug_line,459,140},
          {'case',
              {459,5},
              {call,
                  {459,10},
                  {atom,{459,10},eval_bif},
                  [{var,{459,19},'I'},{var,{459,22},'St'}]},
              [{clause,
                   {460,9},
                   [{match,
                        {460,9},
                        {tuple,
                            {460,9},
                            [{atom,{460,9},b_literal},{var,{460,9},'_'}]},
                        {var,{460,22},'Val'}}],
                   [],
                   [{debug_line,461,141},
                    {call,
                        {461,13},
                        {atom,{461,13},eval_is},
                        [{var,{461,21},'Is'},
                         {var,{461,25},'From'},
                         {block,0,
                             [{call,
                                  {461,31},
                                  {atom,{461,31},bind_var},
                                  [{var,{461,40},'Dst'},
                                   {var,{461,45},'Val'},
                                   {var,{461,50},'Bs'}]}]},
                         {var,{461,55},'St'}]}]},
               {clause,
                   {462,9},
                   [{atom,{462,9},none}],
                   [],
                   [{debug_line,463,142},
                    {call,
                        {463,13},
                        {atom,{463,13},eval_is},
                        [{var,{463,21},'Is'},
                         {var,{463,25},'From'},
                         {var,{463,31},'Bs'},
                         {var,{463,35},'St'}]}]}]}]},
     {clause,
         {465,1},
         [{cons,
              {465,9},
              {match,
                  {465,10},
                  {tuple,
                      {465,10},
                      [{atom,{465,10},b_set},
                       {var,{465,10},'_'},
                       {var,{465,27},'Dst'},
                       {var,{465,20},'Op'},
                       {var,{465,10},'_'}]},
                  {var,{465,32},'I'}},
              {var,{465,34},'Is'}},
          {var,{465,39},'From'},
          {var,{465,45},'Bs'},
          {var,{465,49},'St'}],
         [[{op,{466,11},
               '=:=',
               {var,{466,8},'Op'},
               {atom,{466,15},is_tagged_tuple}}],
          [{op,{466,35},
               '=:=',
               {var,{466,32},'Op'},
               {atom,{466,39},is_nonempty_list}}]],
         [{debug_line,467,143},
          {match,
              {467,5},
              {tuple,
                  {467,5},
                  [{atom,{467,5},b_set},
                   {var,{467,5},'_'},
                   {var,{467,5},'_'},
                   {var,{467,5},'_'},
                   {var,{467,17},'Args'}]},
              {call,
                  {467,25},
                  {atom,{467,25},sub},
                  [{var,{467,29},'I'},{var,{467,32},'Bs'}]}},
          {debug_line,468,144},
          {'case',
              {468,5},
              {call,
                  {468,10},
                  {atom,{468,10},eval_test},
                  [{var,{468,20},'Op'},
                   {var,{468,24},'Args'},
                   {var,{468,30},'St'}]},
              [{clause,
                   {469,9},
                   [{match,
                        {469,9},
                        {tuple,
                            {469,9},
                            [{atom,{469,9},b_literal},{var,{469,9},'_'}]},
                        {var,{469,22},'Val'}}],
                   [],
                   [{debug_line,470,145},
                    {call,
                        {470,13},
                        {atom,{470,13},eval_is},
                        [{var,{470,21},'Is'},
                         {var,{470,25},'From'},
                         {block,0,
                             [{call,
                                  {470,31},
                                  {atom,{470,31},bind_var},
                                  [{var,{470,40},'Dst'},
                                   {var,{470,45},'Val'},
                                   {var,{470,50},'Bs'}]}]},
                         {var,{470,55},'St'}]}]},
               {clause,
                   {471,9},
                   [{atom,{471,9},none}],
                   [],
                   [{debug_line,472,146},
                    {call,
                        {472,13},
                        {atom,{472,13},eval_is},
                        [{var,{472,21},'Is'},
                         {var,{472,25},'From'},
                         {var,{472,31},'Bs'},
                         {var,{472,35},'St'}]}]}]}]},
     {clause,
         {474,1},
         [{cons,
              {474,9},
              {match,
                  {474,10},
                  {tuple,
                      {474,10},
                      [{atom,{474,10},b_set},
                       {var,{474,10},'_'},
                       {var,{474,10},'_'},
                       {var,{474,10},'_'},
                       {var,{474,10},'_'}]},
                  {var,{474,19},'I'}},
              {var,{474,21},'Is'}},
          {var,{474,26},'From'},
          {var,{474,32},'Bs'},
          {var,{474,36},'St'}],
         [],
         [{debug_line,475,147},
          {'case',
              {475,5},
              {call,
                  {475,10},
                  {remote,
                      {475,18},
                      {atom,{475,10},beam_ssa},
                      {atom,{475,19},no_side_effect}},
                  [{var,{475,34},'I'}]},
              [{clause,
                   {476,9},
                   [{atom,{476,9},true}],
                   [],
                   [{debug_line,479,148},
                    {call,
                        {479,13},
                        {atom,{479,13},eval_is},
                        [{var,{479,21},'Is'},
                         {var,{479,25},'From'},
                         {var,{479,31},'Bs'},
                         {var,{479,35},'St'}]}]},
               {clause,
                   {480,9},
                   [{atom,{480,9},false}],
                   [],
                   [{debug_line,483,149},{atom,{483,13},none}]}]}]},
     {clause,
         {485,1},
         [{nil,{485,9}},
          {var,{485,13},'_From'},
          {var,{485,20},'Bs'},
          {var,{485,24},'_St'}],
         [],
         [{debug_line,485,150},{var,{485,32},'Bs'}]}]}.
{function,{487,1},
          get_phi_arg,2,
          [{clause,{487,1},
                   [{var,{487,1},'_'},{var,{487,1},'_'}],
                   [[{call,{487,1},
                           {remote,{487,1},
                                   {atom,{487,1},fake},
                                   {atom,{487,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,487,151},{atom,{487,1},ignore}]},
           {clause,{487,1},
                   [{cons,{487,13},
                          {tuple,{487,14},
                                 [{var,{487,15},'Val'},{var,{487,19},'From'}]},
                          {var,{487,25},'_'}},
                    {var,{487,29},'From'}],
                   [],
                   [{debug_line,487,152},{var,{487,38},'Val'}]},
           {clause,{488,1},
                   [{cons,{488,13},{var,{488,14},'_'},{var,{488,16},'As'}},
                    {var,{488,21},'From'}],
                   [],
                   [{debug_line,488,153},
                    {call,{488,30},
                          {atom,{488,30},get_phi_arg},
                          [{var,{488,42},'As'},{var,{488,46},'From'}]}]}]}.
{function,
 {490,1},
 eval_terminator,3,
 [{clause,
   {490,1},
   [{var,{490,1},'_'},{var,{490,1},'_'},{var,{490,1},'_'}],
   [[{call,
      {490,1},
      {remote,{490,1},{atom,{490,1},fake},{atom,{490,1},is_beam_bif_info}},
      []}]],
   [{debug_line,490,154},{atom,{490,1},ignore}]},
  {clause,
   {490,1},
   [{match,
     {490,17},
     {tuple,
      {490,17},
      [{atom,{490,17},b_br},
       {var,{490,17},'_'},
       {match,
        {490,28},
        {tuple,{490,28},[{atom,{490,28},b_var},{var,{490,28},'_'}]},
        {var,{490,37},'Bool'}},
       {var,{490,17},'_'},
       {var,{490,17},'_'}]},
     {var,{490,43},'Br'}},
    {var,{490,47},'Bs'},
    {var,{490,51},'_St'}],
   [],
   [{debug_line,491,155},
    {'case',
     {491,5},
     {call,
      {491,10},
      {atom,{491,10},get_value},
      [{var,{491,20},'Bool'},{var,{491,26},'Bs'}]},
     [{clause,
       {492,9},
       [{match,
         {492,9},
         {tuple,{492,9},[{atom,{492,9},b_literal},{var,{492,24},'Val'}]},
         {var,{492,29},'Lit'}}],
       [],
       [{debug_line,493,156},
        {'case',
         {493,13},
         {call,
          {493,18},
          {remote,{493,18},{atom,{493,18},erlang},{atom,{493,18},is_boolean}},
          [{var,{493,29},'Val'}]},
         [{clause,
           {494,17},
           [{atom,{494,17},true}],
           [],
           [{debug_line,495,157},
            {call,
             {495,21},
             {remote,
              {495,29},
              {atom,{495,21},beam_ssa},
              {atom,{495,30},normalize}},
             [{block,0,
               [{block,
                 {495,40},
                 [{match,{495,40},{var,{495,40},rec15},{var,{495,40},'Br'}},
                  {'case',
                   {495,48},
                   {var,{495,40},rec15},
                   [{clause,
                     {495,48},
                     [{tuple,
                       {495,48},
                       [{atom,{495,48},b_br},
                        {var,{495,48},'_'},
                        {var,{495,48},'_'},
                        {var,{495,48},'_'},
                        {var,{495,48},'_'}]}],
                     [],
                     [{call,
                       {495,48},
                       {remote,
                        {495,48},
                        {atom,{495,48},erlang},
                        {atom,{495,48},setelement}},
                       [{integer,{495,48},3},
                        {var,{495,40},rec15},
                        {var,{495,53},'Lit'}]}]},
                    {clause,
                     [{generated,true},{location,{495,48}}],
                     [{var,[{generated,true},{location,{495,48}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{495,48}}],
                       {remote,
                        [{generated,true},{location,{495,48}}],
                        {atom,[{generated,true},{location,{495,48}}],erlang},
                        {atom,[{generated,true},{location,{495,48}}],error}},
                       [{tuple,
                         [{generated,true},{location,{495,48}}],
                         [{atom,
                           [{generated,true},{location,{495,48}}],
                           badrecord},
                          {var,{495,40},rec15}]}]}]}]}]}]}]}]},
          {clause,
           {496,17},
           [{atom,{496,17},false}],
           [],
           [{debug_line,502,158},{atom,{502,21},none}]}]}]},
      {clause,
       {504,9},
       [{match,
         {504,9},
         {tuple,{504,9},[{atom,{504,9},b_var},{var,{504,9},'_'}]},
         {var,{504,18},'Var'}}],
       [],
       [{debug_line,505,159},
        {call,
         {505,13},
         {remote,{505,21},{atom,{505,13},beam_ssa},{atom,{505,22},normalize}},
         [{block,0,
           [{block,
             {505,32},
             [{match,{505,32},{var,{505,32},rec16},{var,{505,32},'Br'}},
              {'case',
               {505,40},
               {var,{505,32},rec16},
               [{clause,
                 {505,40},
                 [{tuple,
                   {505,40},
                   [{atom,{505,40},b_br},
                    {var,{505,40},'_'},
                    {var,{505,40},'_'},
                    {var,{505,40},'_'},
                    {var,{505,40},'_'}]}],
                 [],
                 [{call,
                   {505,40},
                   {remote,
                    {505,40},
                    {atom,{505,40},erlang},
                    {atom,{505,40},setelement}},
                   [{integer,{505,40},3},
                    {var,{505,32},rec16},
                    {var,{505,45},'Var'}]}]},
                {clause,
                 [{generated,true},{location,{505,40}}],
                 [{var,[{generated,true},{location,{505,40}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{505,40}}],
                   {remote,
                    [{generated,true},{location,{505,40}}],
                    {atom,[{generated,true},{location,{505,40}}],erlang},
                    {atom,[{generated,true},{location,{505,40}}],error}},
                   [{tuple,
                     [{generated,true},{location,{505,40}}],
                     [{atom,[{generated,true},{location,{505,40}}],badrecord},
                      {var,{505,32},rec16}]}]}]}]}]}]}]}]}]}]},
  {clause,
   {507,1},
   [{match,
     {507,17},
     {tuple,
      {507,17},
      [{atom,{507,17},b_br},
       {var,{507,17},'_'},
       {tuple,{507,28},[{atom,{507,28},b_literal},{var,{507,28},'_'}]},
       {var,{507,17},'_'},
       {var,{507,17},'_'}]},
     {var,{507,42},'Br'}},
    {var,{507,46},'_Bs'},
    {var,{507,51},'_St'}],
   [],
   [{debug_line,508,160},
    {call,
     {508,5},
     {remote,{508,13},{atom,{508,5},beam_ssa},{atom,{508,14},normalize}},
     [{var,{508,24},'Br'}]}]},
  {clause,
   {509,1},
   [{match,
     {509,17},
     {tuple,
      {509,17},
      [{atom,{509,17},b_switch},
       {var,{509,17},'_'},
       {var,{509,31},'Arg'},
       {var,{509,40},'Fail'},
       {var,{509,50},'List'}]},
     {var,{509,56},'Sw'}},
    {var,{509,60},'Bs'},
    {var,{509,64},'St'}],
   [],
   [{debug_line,510,161},
    {'case',
     {510,5},
     {call,
      {510,10},
      {atom,{510,10},get_value},
      [{var,{510,20},'Arg'},{var,{510,25},'Bs'}]},
     [{clause,
       {511,9},
       [{match,
         {511,9},
         {tuple,{511,9},[{atom,{511,9},b_literal},{var,{511,9},'_'}]},
         {var,{511,22},'Val'}}],
       [],
       [{debug_line,513,162},
        {call,
         {513,13},
         {remote,{513,21},{atom,{513,13},beam_ssa},{atom,{513,22},normalize}},
         [{block,0,
           [{block,
             {513,32},
             [{match,{513,32},{var,{513,32},rec17},{var,{513,32},'Sw'}},
              {'case',
               {513,44},
               {var,{513,32},rec17},
               [{clause,
                 {513,44},
                 [{tuple,
                   {513,44},
                   [{atom,{513,44},b_switch},
                    {var,{513,44},'_'},
                    {var,{513,44},'_'},
                    {var,{513,44},'_'},
                    {var,{513,44},'_'}]}],
                 [],
                 [{call,
                   {513,44},
                   {remote,
                    {513,44},
                    {atom,{513,44},erlang},
                    {atom,{513,44},setelement}},
                   [{integer,{513,44},3},
                    {var,{513,32},rec17},
                    {var,{513,48},'Val'}]}]},
                {clause,
                 [{generated,true},{location,{513,44}}],
                 [{var,[{generated,true},{location,{513,44}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{513,44}}],
                   {remote,
                    [{generated,true},{location,{513,44}}],
                    {atom,[{generated,true},{location,{513,44}}],erlang},
                    {atom,[{generated,true},{location,{513,44}}],error}},
                   [{tuple,
                     [{generated,true},{location,{513,44}}],
                     [{atom,[{generated,true},{location,{513,44}}],badrecord},
                      {var,{513,32},rec17}]}]}]}]}]}]}]}]},
      {clause,
       {514,9},
       [{tuple,{514,9},[{atom,{514,9},b_var},{var,{514,9},'_'}]}],
       [],
       [{debug_line,516,163},
        {'case',
         {516,13},
         {call,
          {516,18},
          {atom,{516,18},eval_switch},
          [{var,{516,30},'List'},
           {var,{516,36},'Arg'},
           {var,{516,41},'St'},
           {var,{516,45},'Fail'}]},
         [{clause,
           {517,17},
           [{atom,{517,17},none}],
           [],
           [{debug_line,518,164},{atom,{518,21},none}]},
          {clause,
           {519,17},
           [{var,{519,17},'To'}],
           [[{call,
              {519,25},
              {remote,
               {519,25},
               {atom,{519,25},erlang},
               {atom,{519,25},is_integer}},
              [{var,{519,36},'To'}]}]],
           [{debug_line,523,165},
            {tuple,
             {523,21},
             [{atom,{523,21},b_br},
              {map,{523,21},[]},
              {tuple,
               {523,32},
               [{atom,{523,32},b_literal},{atom,{523,47},true}]},
              {var,{523,58},'To'},
              {var,{523,66},'To'}]}]}]}]}]}]},
  {clause,
   {526,1},
   [{tuple,
     {526,17},
     [{atom,{526,17},b_ret},{var,{526,17},'_'},{var,{526,17},'_'}]},
    {var,{526,27},'_Bs'},
    {var,{526,32},'_St'}],
   [],
   [{debug_line,527,166},{atom,{527,5},none}]}]}.
{function,
    {529,1},
    eval_switch,4,
    [{clause,
         {529,1},
         [{var,{529,1},'_'},
          {var,{529,1},'_'},
          {var,{529,1},'_'},
          {var,{529,1},'_'}],
         [[{call,
               {529,1},
               {remote,
                   {529,1},
                   {atom,{529,1},fake},
                   {atom,{529,1},is_beam_bif_info}},
               []}]],
         [{debug_line,529,167},{atom,{529,1},ignore}]},
     {clause,
         {529,1},
         [{var,{529,13},'List'},
          {var,{529,19},'Arg'},
          {tuple,
              {529,24},
              [{atom,{529,24},st},
               {var,{529,24},'_'},
               {var,{529,24},'_'},
               {var,{529,24},'_'},
               {match,
                   {529,33},
                   {tuple,
                       {529,33},
                       [{var,{529,34},'_'},
                        {var,{529,36},'Arg'},
                        {var,{529,40},'_'}]},
                   {var,{529,43},'PrevOp'}},
               {var,{529,24},'_'}]},
          {var,{529,52},'Fail'}],
         [],
         [{debug_line,532,168},
          {call,
              {532,5},
              {atom,{532,5},eval_switch_1},
              [{var,{532,19},'List'},
               {var,{532,25},'Arg'},
               {var,{532,30},'PrevOp'},
               {var,{532,38},'Fail'}]}]},
     {clause,
         {533,1},
         [{var,{533,13},'_'},
          {var,{533,16},'_'},
          {var,{533,19},'_'},
          {var,{533,22},'_'}],
         [],
         [{debug_line,536,169},{atom,{536,5},none}]}]}.
{function,
    {538,1},
    eval_switch_1,4,
    [{clause,
         {538,1},
         [{var,{538,1},'_'},
          {var,{538,1},'_'},
          {var,{538,1},'_'},
          {var,{538,1},'_'}],
         [[{call,
               {538,1},
               {remote,
                   {538,1},
                   {atom,{538,1},fake},
                   {atom,{538,1},is_beam_bif_info}},
               []}]],
         [{debug_line,538,170},{atom,{538,1},ignore}]},
     {clause,
         {538,1},
         [{cons,
              {538,15},
              {tuple,{538,16},[{var,{538,17},'Lit'},{var,{538,21},'Lbl'}]},
              {var,{538,26},'T'}},
          {var,{538,30},'Arg'},
          {var,{538,35},'PrevOp'},
          {var,{538,43},'Fail'}],
         [],
         [{debug_line,539,171},
          {match,
              {539,5},
              {var,{539,5},'Test'},
              {tuple,
                  {539,12},
                  [{atom,{539,13},'=:='},
                   {var,{539,19},'Arg'},
                   {var,{539,23},'Lit'}]}},
          {debug_line,540,172},
          {'case',
              {540,5},
              {call,
                  {540,10},
                  {atom,{540,10},will_succeed},
                  [{var,{540,23},'PrevOp'},{var,{540,31},'Test'}]},
              [{clause,
                   {541,9},
                   [{atom,{541,9},yes}],
                   [],
                   [{debug_line,543,173},{var,{543,13},'Lbl'}]},
               {clause,
                   {544,9},
                   [{atom,{544,9},no}],
                   [],
                   [{debug_line,546,174},
                    {call,
                        {546,13},
                        {atom,{546,13},eval_switch_1},
                        [{var,{546,27},'T'},
                         {var,{546,30},'Arg'},
                         {var,{546,35},'PrevOp'},
                         {var,{546,43},'Fail'}]}]},
               {clause,
                   [{text,"'maybe'"},{location,{547,9}}],
                   [{atom,[{text,"'maybe'"},{location,{547,9}}],'maybe'}],
                   [],
                   [{debug_line,549,175},
                    {call,
                        {549,13},
                        {atom,{549,13},eval_switch_1},
                        [{var,{549,27},'T'},
                         {var,{549,30},'Arg'},
                         {var,{549,35},'PrevOp'},
                         {atom,{549,43},none}]}]}]}]},
     {clause,
         {551,1},
         [{nil,{551,15}},
          {var,{551,19},'_Arg'},
          {var,{551,25},'_PrevOp'},
          {var,{551,34},'Fail'}],
         [],
         [{debug_line,553,176},{var,{553,5},'Fail'}]}]}.
{function,
    {555,1},
    bind_var_if_used,4,
    [{clause,
         {555,1},
         [{var,{555,1},'_'},
          {var,{555,1},'_'},
          {var,{555,1},'_'},
          {var,{555,1},'_'}],
         [[{call,
               {555,1},
               {remote,
                   {555,1},
                   {atom,{555,1},fake},
                   {atom,{555,1},is_beam_bif_info}},
               []}]],
         [{debug_line,555,177},{atom,{555,1},ignore}]},
     {clause,
         {555,1},
         [{var,{555,18},'L'},
          {var,{555,21},'Var'},
          {var,{555,26},'Val'},
          {tuple,
              {555,31},
              [{atom,{555,31},st},
               {var,{555,31},'_'},
               {var,{555,38},'Us'},
               {var,{555,31},'_'},
               {var,{555,31},'_'},
               {var,{555,31},'_'}]}],
         [],
         [{debug_line,556,178},
          {'case',
              {556,5},
              {call,
                  {556,10},
                  {remote,
                      {556,14},
                      {atom,{556,10},sets},
                      {atom,{556,15},is_element}},
                  [{var,{556,26},'Var'},
                   {block,0,
                       [{call,
                            {556,31},
                            {remote,
                                {556,31},
                                {atom,{556,31},erlang},
                                {atom,{556,31},map_get}},
                            [{var,{556,39},'L'},{var,{556,42},'Us'}]}]}]},
              [{clause,
                   {557,9},
                   [{atom,{557,9},true}],
                   [],
                   [{debug_line,557,179},
                    {map,
                        {557,17},
                        [{map_field_assoc,
                             {557,22},
                             {var,{557,19},'Var'},
                             {var,{557,24},'Val'}}]}]},
               {clause,
                   {558,9},
                   [{atom,{558,9},false}],
                   [],
                   [{debug_line,558,180},{map,{558,18},[]}]}]}]}]}.
{function,
    {561,1},
    bind_var,3,
    [{clause,
         {561,1},
         [{var,{561,1},'_'},{var,{561,1},'_'},{var,{561,1},'_'}],
         [[{call,
               {561,1},
               {remote,
                   {561,1},
                   {atom,{561,1},fake},
                   {atom,{561,1},is_beam_bif_info}},
               []}]],
         [{debug_line,561,181},{atom,{561,1},ignore}]},
     {clause,
         {561,1},
         [{var,{561,10},'Var'},{var,{561,15},'Val0'},{var,{561,21},'Bs'}],
         [],
         [{debug_line,562,182},
          {match,
              {562,5},
              {var,{562,5},'Val'},
              {call,
                  {562,11},
                  {atom,{562,11},get_value},
                  [{var,{562,21},'Val0'},{var,{562,27},'Bs'}]}},
          {debug_line,563,183},
          {map,
              {563,7},
              {var,{563,5},'Bs'},
              [{map_field_assoc,
                   {563,12},
                   {var,{563,9},'Var'},
                   {var,{563,14},'Val'}}]}]}]}.
{function,
    {565,1},
    get_value,2,
    [{clause,
         {565,1},
         [{var,{565,1},'_'},{var,{565,1},'_'}],
         [[{call,
               {565,1},
               {remote,
                   {565,1},
                   {atom,{565,1},fake},
                   {atom,{565,1},is_beam_bif_info}},
               []}]],
         [{debug_line,565,184},{atom,{565,1},ignore}]},
     {clause,
         {565,1},
         [{match,
              {565,11},
              {tuple,{565,11},[{atom,{565,11},b_var},{var,{565,11},'_'}]},
              {var,{565,20},'Var'}},
          {var,{565,25},'Bs'}],
         [],
         [{debug_line,566,185},
          {'case',
              {566,5},
              {var,{566,10},'Bs'},
              [{clause,
                   {567,9},
                   [{map,
                        {567,9},
                        [{map_field_exact,
                             {567,14},
                             {var,{567,11},'Var'},
                             {var,{567,16},'Val'}}]}],
                   [],
                   [{debug_line,567,186},
                    {call,
                        {567,24},
                        {atom,{567,24},get_value},
                        [{var,{567,34},'Val'},{var,{567,39},'Bs'}]}]},
               {clause,
                   {568,9},
                   [{map,{568,9},[]}],
                   [],
                   [{debug_line,568,187},{var,{568,16},'Var'}]}]}]},
     {clause,
         {570,1},
         [{match,
              {570,11},
              {tuple,{570,11},[{atom,{570,11},b_literal},{var,{570,11},'_'}]},
              {var,{570,24},'Lit'}},
          {var,{570,29},'_Bs'}],
         [],
         [{debug_line,570,188},{var,{570,37},'Lit'}]}]}.
{function,
 {572,1},
 eval_bif,2,
 [{clause,
   {572,1},
   [{var,{572,1},'_'},{var,{572,1},'_'}],
   [[{call,
      {572,1},
      {remote,{572,1},{atom,{572,1},fake},{atom,{572,1},is_beam_bif_info}},
      []}]],
   [{debug_line,572,189},{atom,{572,1},ignore}]},
  {clause,
   {572,1},
   [{tuple,
     {572,10},
     [{atom,{572,10},b_set},
      {var,{572,10},'_'},
      {var,{572,10},'_'},
      {tuple,{572,20},[{atom,{572,21},bif},{var,{572,25},'Bif'}]},
      {var,{572,35},'Args'}]},
    {var,{572,42},'St'}],
   [],
   [{debug_line,573,190},
    {match,
     {573,5},
     {var,{573,5},'Arity'},
     {call,
      {573,13},
      {remote,{573,13},{atom,{573,13},erlang},{atom,{573,13},length}},
      [{var,{573,20},'Args'}]}},
    {debug_line,574,191},
    {'case',
     {574,5},
     {call,
      {574,10},
      {remote,{574,18},{atom,{574,10},erl_bifs},{atom,{574,19},is_pure}},
      [{atom,{574,27},erlang},{var,{574,35},'Bif'},{var,{574,40},'Arity'}]},
     [{clause,
       {575,9},
       [{atom,{575,9},false}],
       [],
       [{debug_line,576,192},{atom,{576,13},none}]},
      {clause,
       {577,9},
       [{atom,{577,9},true}],
       [],
       [{debug_line,578,193},
        {'case',
         {578,13},
         {call,{578,18},{atom,{578,18},get_lit_args},[{var,{578,31},'Args'}]},
         [{clause,
           {579,17},
           [{atom,{579,17},none}],
           [],
           [{debug_line,582,194},
            {call,
             {582,21},
             {atom,{582,21},eval_test},
             [{block,0,
               [{tuple,{582,31},[{atom,{582,32},bif},{var,{582,36},'Bif'}]}]},
              {var,{582,42},'Args'},
              {var,{582,48},'St'}]}]},
          {clause,
           {583,17},
           [{var,{583,17},'LitArgs'}],
           [],
           [{debug_line,584,195},
            {'try',
             {584,21},
             [{call,
               {584,25},
               {remote,{584,25},{atom,{584,25},erlang},{atom,{584,25},apply}},
               [{atom,{584,31},erlang},
                {var,{584,39},'Bif'},
                {var,{584,44},'LitArgs'}]}],
             [{clause,
               {585,25},
               [{var,{585,25},'Val'}],
               [],
               [{debug_line,585,196},
                {tuple,
                 {585,32},
                 [{atom,{585,32},b_literal},{var,{585,47},'Val'}]}]}],
             [{clause,
               {587,25},
               [{tuple,
                 {587,25},
                 [{atom,{587,25},error},
                  {var,{587,31},'_'},
                  {var,{587,31},'_'}]}],
               [],
               [{debug_line,587,197},{atom,{587,36},none}]}],
             []}]}]}]}]}]}]}.
{function,
    {592,1},
    get_lit_args,1,
    [{clause,
         {592,1},
         [{var,{592,1},'_'}],
         [[{call,
               {592,1},
               {remote,
                   {592,1},
                   {atom,{592,1},fake},
                   {atom,{592,1},is_beam_bif_info}},
               []}]],
         [{debug_line,592,198},{atom,{592,1},ignore}]},
     {clause,
         {592,1},
         [{cons,
              {592,14},
              {tuple,
                  {592,15},
                  [{atom,{592,15},b_literal},{var,{592,30},'Lit1'}]},
              {nil,{592,35}}}],
         [],
         [{debug_line,593,199},
          {cons,{593,5},{var,{593,6},'Lit1'},{nil,{593,10}}}]},
     {clause,
         {594,1},
         [{cons,
              {594,14},
              {tuple,
                  {594,15},
                  [{atom,{594,15},b_literal},{var,{594,30},'Lit1'}]},
              {cons,
                  {595,15},
                  {tuple,
                      {595,15},
                      [{atom,{595,15},b_literal},{var,{595,30},'Lit2'}]},
                  {nil,{595,35}}}}],
         [],
         [{debug_line,596,200},
          {cons,
              {596,5},
              {var,{596,6},'Lit1'},
              {cons,{596,11},{var,{596,11},'Lit2'},{nil,{596,15}}}}]},
     {clause,
         {597,1},
         [{cons,
              {597,14},
              {tuple,
                  {597,15},
                  [{atom,{597,15},b_literal},{var,{597,30},'Lit1'}]},
              {cons,
                  {598,15},
                  {tuple,
                      {598,15},
                      [{atom,{598,15},b_literal},{var,{598,30},'Lit2'}]},
                  {cons,
                      {599,15},
                      {tuple,
                          {599,15},
                          [{atom,{599,15},b_literal},{var,{599,30},'Lit3'}]},
                      {nil,{599,35}}}}}],
         [],
         [{debug_line,600,201},
          {cons,
              {600,5},
              {var,{600,6},'Lit1'},
              {cons,
                  {600,11},
                  {var,{600,11},'Lit2'},
                  {cons,{600,16},{var,{600,16},'Lit3'},{nil,{600,20}}}}}]},
     {clause,
         {601,1},
         [{var,{601,14},'_'}],
         [],
         [{debug_line,601,202},{atom,{601,20},none}]}]}.
{function,
    {607,1},
    get_test,2,
    [{clause,
         {607,1},
         [{var,{607,1},'_'},{var,{607,1},'_'}],
         [[{call,
               {607,1},
               {remote,
                   {607,1},
                   {atom,{607,1},fake},
                   {atom,{607,1},is_beam_bif_info}},
               []}]],
         [{debug_line,607,203},{atom,{607,1},ignore}]},
     {clause,
         {607,1},
         [{var,{607,10},'Bool'},
          {match,
              {607,16},
              {cons,{607,16},{var,{607,17},'_'},{var,{607,19},'_'}},
              {var,{607,22},'Is'}}],
         [],
         [{debug_line,608,204},
          {'case',
              {608,5},
              {call,
                  {608,10},
                  {remote,{608,10},{atom,{608,10},lists},{atom,{608,10},last}},
                  [{var,{608,15},'Is'}]},
              [{clause,
                   {609,9},
                   [{tuple,
                        {609,9},
                        [{atom,{609,9},b_set},
                         {var,{609,9},'_'},
                         {var,{609,26},'Bool'},
                         {var,{609,19},'Op'},
                         {var,{609,36},'Args'}]}],
                   [],
                   [{debug_line,610,205},
                    {call,
                        {610,13},
                        {atom,{610,13},normalize_test},
                        [{var,{610,28},'Op'},{var,{610,32},'Args'}]}]},
               {clause,
                   {611,9},
                   [{tuple,
                        {611,9},
                        [{atom,{611,9},b_set},
                         {var,{611,9},'_'},
                         {var,{611,9},'_'},
                         {var,{611,9},'_'},
                         {var,{611,9},'_'}]}],
                   [],
                   [{debug_line,612,206},{atom,{612,13},none}]}]}]},
     {clause,
         {614,1},
         [{var,{614,10},'_'},{nil,{614,13}}],
         [],
         [{debug_line,614,207},{atom,{614,20},none}]}]}.
{attribute,
    {637,2},
    spec,
    {{normalize_test,2},
     [{type,
          {637,21},
          bounded_fun,
          [{type,
               {637,21},
               'fun',
               [{type,
                    {637,21},
                    product,
                    [{var,{637,22},'Op'},{var,{637,26},'Args'}]},
                {type,
                    {637,35},
                    union,
                    [{var,{637,35},'NormalizedTest'},{atom,{637,52},none}]}]},
           [{type,
                {638,7},
                constraint,
                [{atom,{638,7},is_subtype},
                 [{var,{638,7},'Op'},
                  {remote_type,
                      {638,13},
                      [{atom,{638,13},beam_ssa},{atom,{638,22},op},[]]}]]},
            {type,
                {639,7},
                constraint,
                [{atom,{639,7},is_subtype},
                 [{var,{639,7},'Args'},
                  {type,
                      {639,15},
                      list,
                      [{remote_type,
                           {639,16},
                           [{atom,{639,16},beam_ssa},
                            {atom,{639,25},value},
                            []]}]}]]},
            {type,
                {640,7},
                constraint,
                [{atom,{640,7},is_subtype},
                 [{var,{640,7},'NormalizedTest'},
                  {user_type,{640,25},basic_test,[]}]]}]]}]}}.
{function,
    {642,1},
    normalize_test,2,
    [{clause,
         {642,1},
         [{var,{642,1},'_'},{var,{642,1},'_'}],
         [[{call,
               {642,1},
               {remote,
                   {642,1},
                   {atom,{642,1},fake},
                   {atom,{642,1},is_beam_bif_info}},
               []}]],
         [{debug_line,642,208},{atom,{642,1},ignore}]},
     {clause,
         {642,1},
         [{atom,{642,16},is_tagged_tuple},
          {cons,
              {642,33},
              {var,{642,34},'Arg'},
              {cons,
                  {642,38},
                  {tuple,
                      {642,38},
                      [{atom,{642,38},b_literal},{var,{642,53},'Size'}]},
                  {cons,
                      {642,59},
                      {tuple,
                          {642,59},
                          [{atom,{642,59},b_literal},{var,{642,74},'Tag'}]},
                      {nil,{642,78}}}}}],
         [[{call,
               {643,8},
               {remote,
                   {643,8},
                   {atom,{643,8},erlang},
                   {atom,{643,8},is_integer}},
               [{var,{643,19},'Size'}]},
           {call,
               {643,26},
               {remote,
                   {643,26},
                   {atom,{643,26},erlang},
                   {atom,{643,26},is_atom}},
               [{var,{643,34},'Tag'}]}]],
         [{debug_line,644,209},
          {tuple,
              {644,5},
              [{tuple,
                   {644,6},
                   [{atom,{644,7},is_tagged_tuple},
                    {var,{644,23},'Size'},
                    {var,{644,28},'Tag'}]},
               {var,{644,33},'Arg'}]}]},
     {clause,
         {645,1},
         [{atom,{645,16},is_nonempty_list},
          {cons,{645,34},{var,{645,35},'Arg'},{nil,{645,38}}}],
         [],
         [{debug_line,646,210},
          {tuple,
              {646,5},
              [{atom,{646,6},is_nonempty_list},{var,{646,23},'Arg'}]}]},
     {clause,
         {647,1},
         [{tuple,{647,16},[{atom,{647,17},bif},{var,{647,21},'Bif'}]},
          {cons,{647,27},{var,{647,28},'Arg'},{nil,{647,31}}}],
         [],
         [{debug_line,648,211},
          {'case',
              {648,5},
              {call,
                  {648,10},
                  {remote,
                      {648,22},
                      {atom,{648,10},erl_internal},
                      {atom,{648,23},new_type_test}},
                  [{var,{648,37},'Bif'},{integer,{648,42},1}]},
              [{clause,
                   {649,9},
                   [{atom,{649,9},true}],
                   [],
                   [{debug_line,649,212},
                    {tuple,
                        {649,17},
                        [{var,{649,18},'Bif'},{var,{649,22},'Arg'}]}]},
               {clause,
                   {650,9},
                   [{atom,{650,9},false}],
                   [],
                   [{debug_line,650,213},{atom,{650,18},none}]}]}]},
     {clause,
         {652,1},
         [{tuple,{652,16},[{atom,{652,17},bif},{var,{652,21},'Bif'}]},
          {match,
              {652,27},
              {cons,
                  {652,27},
                  {var,{652,28},'_'},
                  {cons,{652,30},{var,{652,30},'_'},{nil,{652,31}}}},
              {var,{652,33},'Args'}}],
         [],
         [{debug_line,653,214},
          {'case',
              {653,5},
              {call,
                  {653,10},
                  {remote,
                      {653,22},
                      {atom,{653,10},erl_internal},
                      {atom,{653,23},comp_op}},
                  [{var,{653,31},'Bif'},{integer,{653,36},2}]},
              [{clause,
                   {654,9},
                   [{atom,{654,9},true}],
                   [],
                   [{debug_line,655,215},
                    {call,
                        {655,13},
                        {atom,{655,13},normalize_test_1},
                        [{var,{655,30},'Bif'},{var,{655,35},'Args'}]}]},
               {clause,
                   {656,9},
                   [{atom,{656,9},false}],
                   [],
                   [{debug_line,657,216},{atom,{657,13},none}]}]}]},
     {clause,
         {659,1},
         [{var,{659,16},'_'},{var,{659,19},'_'}],
         [],
         [{debug_line,659,217},{atom,{659,25},none}]}]}.
{function,
    {661,1},
    normalize_test_1,2,
    [{clause,
         {661,1},
         [{var,{661,1},'_'},{var,{661,1},'_'}],
         [[{call,
               {661,1},
               {remote,
                   {661,1},
                   {atom,{661,1},fake},
                   {atom,{661,1},is_beam_bif_info}},
               []}]],
         [{debug_line,661,218},{atom,{661,1},ignore}]},
     {clause,
         {661,1},
         [{var,{661,18},'Bif'},{var,{661,23},'Args'}],
         [],
         [{debug_line,662,219},
          {'case',
              {662,5},
              {var,{662,10},'Args'},
              [{clause,
                   {663,9},
                   [{cons,
                        {663,9},
                        {match,
                            {663,10},
                            {tuple,
                                {663,10},
                                [{atom,{663,10},b_literal},
                                 {var,{663,10},'_'}]},
                            {var,{663,23},'Arg1'}},
                        {cons,
                            {663,28},
                            {match,
                                {663,28},
                                {tuple,
                                    {663,28},
                                    [{atom,{663,28},b_var},
                                     {var,{663,28},'_'}]},
                                {var,{663,37},'Arg2'}},
                            {nil,{663,41}}}}],
                   [],
                   [{debug_line,664,220},
                    {tuple,
                        {664,13},
                        [{call,
                             {664,14},
                             {atom,{664,14},turn_op},
                             [{var,{664,22},'Bif'}]},
                         {var,{664,27},'Arg2'},
                         {var,{664,32},'Arg1'}]}]},
               {clause,
                   {665,9},
                   [{cons,
                        {665,9},
                        {match,
                            {665,10},
                            {tuple,
                                {665,10},
                                [{atom,{665,10},b_var},{var,{665,10},'_'}]},
                            {var,{665,19},'Arg1'}},
                        {cons,
                            {665,24},
                            {match,
                                {665,24},
                                {tuple,
                                    {665,24},
                                    [{atom,{665,24},b_literal},
                                     {var,{665,24},'_'}]},
                                {var,{665,37},'Arg2'}},
                            {nil,{665,41}}}}],
                   [],
                   [{debug_line,666,221},
                    {tuple,
                        {666,13},
                        [{var,{666,14},'Bif'},
                         {var,{666,18},'Arg1'},
                         {var,{666,23},'Arg2'}]}]},
               {clause,
                   {667,9},
                   [{cons,
                        {667,9},
                        {match,
                            {667,10},
                            {tuple,
                                {667,10},
                                [{atom,{667,10},b_var},{var,{667,10},'_'}]},
                            {var,{667,19},'A'}},
                        {cons,
                            {667,21},
                            {match,
                                {667,21},
                                {tuple,
                                    {667,21},
                                    [{atom,{667,21},b_var},
                                     {var,{667,21},'_'}]},
                                {var,{667,30},'B'}},
                            {nil,{667,31}}}}],
                   [],
                   [{debug_line,668,222},
                    {'if',
                        {668,13},
                        [{clause,
                             {668,16},
                             [],
                             [[{op,{668,18},
                                   '<',
                                   {var,{668,16},'A'},
                                   {var,{668,20},'B'}}]],
                             [{tuple,
                                  {668,25},
                                  [{var,{668,26},'Bif'},
                                   {var,{668,30},'A'},
                                   {var,{668,32},'B'}]}]},
                         {clause,
                             {669,16},
                             [],
                             [[{atom,{669,16},true}]],
                             [{debug_line,669,223},
                              {tuple,
                                  {669,24},
                                  [{call,
                                       {669,25},
                                       {atom,{669,25},turn_op},
                                       [{var,{669,33},'Bif'}]},
                                   {var,{669,38},'B'},
                                   {var,{669,40},'A'}]}]}]}]},
               {clause,
                   {671,9},
                   [{cons,
                        {671,9},
                        {tuple,
                            {671,10},
                            [{atom,{671,10},b_literal},{var,{671,10},'_'}]},
                        {cons,
                            {671,23},
                            {tuple,
                                {671,23},
                                [{atom,{671,23},b_literal},
                                 {var,{671,23},'_'}]},
                            {nil,{671,35}}}}],
                   [],
                   [{debug_line,672,224},{atom,{672,13},none}]}]}]}]}.
{attribute,{675,2},
           spec,
           {{invert_test,1},
            [{type,{675,18},
                   'fun',
                   [{type,{675,18},
                          product,
                          [{type,{675,19},
                                 union,
                                 [{user_type,{675,19},basic_test,[]},
                                  {atom,{675,34},none}]}]},
                    {type,{675,45},
                          union,
                          [{user_type,{675,45},test,[]},
                           {atom,{675,54},none}]}]}]}}.
{function,{677,1},
          invert_test,1,
          [{clause,{677,1},
                   [{var,{677,1},'_'}],
                   [[{call,{677,1},
                           {remote,{677,1},
                                   {atom,{677,1},fake},
                                   {atom,{677,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,677,225},{atom,{677,1},ignore}]},
           {clause,{677,1},
                   [{tuple,{677,13},
                           [{var,{677,14},'Op'},
                            {var,{677,17},'Arg1'},
                            {var,{677,22},'Arg2'}]}],
                   [],
                   [{debug_line,678,226},
                    {tuple,{678,5},
                           [{call,{678,6},
                                  {atom,{678,6},invert_op},
                                  [{var,{678,16},'Op'}]},
                            {var,{678,20},'Arg1'},
                            {var,{678,25},'Arg2'}]}]},
           {clause,{679,1},
                   [{tuple,{679,13},
                           [{var,{679,14},'TypeTest'},{var,{679,23},'Arg'}]}],
                   [],
                   [{debug_line,680,227},
                    {tuple,{680,5},
                           [{tuple,{680,6},
                                   [{atom,{680,7},'not'},
                                    {var,{680,13},'TypeTest'}]},
                            {var,{680,23},'Arg'}]}]},
           {clause,{681,1},
                   [{atom,{681,13},none}],
                   [],
                   [{debug_line,681,228},{atom,{681,22},none}]}]}.
{function,{683,1},
          invert_op,1,
          [{clause,{683,1},
                   [{var,{683,1},'_'}],
                   [[{call,{683,1},
                           {remote,{683,1},
                                   {atom,{683,1},fake},
                                   {atom,{683,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,683,229},{atom,{683,1},ignore}]},
           {clause,{683,1},
                   [{atom,{683,11},'>='}],
                   [],
                   [{debug_line,683,230},{atom,{683,20},'<'}]},
           {clause,{684,1},
                   [{atom,{684,11},'<'}],
                   [],
                   [{debug_line,684,231},{atom,{684,19},'>='}]},
           {clause,{685,1},
                   [{atom,{685,11},'=<'}],
                   [],
                   [{debug_line,685,232},{atom,{685,20},'>'}]},
           {clause,{686,1},
                   [{atom,{686,11},'>'}],
                   [],
                   [{debug_line,686,233},{atom,{686,19},'=<'}]},
           {clause,{687,1},
                   [{atom,{687,11},'=:='}],
                   [],
                   [{debug_line,687,234},{atom,{687,21},'=/='}]},
           {clause,{688,1},
                   [{atom,{688,11},'=/='}],
                   [],
                   [{debug_line,688,235},{atom,{688,21},'=:='}]},
           {clause,{689,1},
                   [{atom,{689,11},'=='}],
                   [],
                   [{debug_line,689,236},{atom,{689,20},'/='}]},
           {clause,{690,1},
                   [{atom,{690,11},'/='}],
                   [],
                   [{debug_line,690,237},{atom,{690,20},'=='}]}]}.
{function,{692,1},
          turn_op,1,
          [{clause,{692,1},
                   [{var,{692,1},'_'}],
                   [[{call,{692,1},
                           {remote,{692,1},
                                   {atom,{692,1},fake},
                                   {atom,{692,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,692,238},{atom,{692,1},ignore}]},
           {clause,{692,1},
                   [{atom,{692,9},'<'}],
                   [],
                   [{debug_line,692,239},{atom,{692,17},'>'}]},
           {clause,{693,1},
                   [{atom,{693,9},'=<'}],
                   [],
                   [{debug_line,693,240},{atom,{693,18},'>='}]},
           {clause,{694,1},
                   [{atom,{694,9},'>'}],
                   [],
                   [{debug_line,694,241},{atom,{694,17},'<'}]},
           {clause,{695,1},
                   [{atom,{695,9},'>='}],
                   [],
                   [{debug_line,695,242},{atom,{695,18},'=<'}]},
           {clause,{696,1},
                   [{match,{696,9},{atom,{696,9},'=:='},{var,{696,15},'Op'}}],
                   [],
                   [{debug_line,696,243},{var,{696,22},'Op'}]},
           {clause,{697,1},
                   [{match,{697,9},{atom,{697,9},'=/='},{var,{697,15},'Op'}}],
                   [],
                   [{debug_line,697,244},{var,{697,22},'Op'}]},
           {clause,{698,1},
                   [{match,{698,9},{atom,{698,9},'=='},{var,{698,14},'Op'}}],
                   [],
                   [{debug_line,698,245},{var,{698,21},'Op'}]},
           {clause,{699,1},
                   [{match,{699,9},{atom,{699,9},'/='},{var,{699,14},'Op'}}],
                   [],
                   [{debug_line,699,246},{var,{699,21},'Op'}]}]}.
{function,
    {701,1},
    eval_test,3,
    [{clause,
         {701,1},
         [{var,{701,1},'_'},{var,{701,1},'_'},{var,{701,1},'_'}],
         [[{call,
               {701,1},
               {remote,
                   {701,1},
                   {atom,{701,1},fake},
                   {atom,{701,1},is_beam_bif_info}},
               []}]],
         [{debug_line,701,247},{atom,{701,1},ignore}]},
     {clause,
         {701,1},
         [{var,{701,11},'_Bif'},
          {var,{701,17},'_Args'},
          {tuple,
              {701,24},
              [{atom,{701,24},st},
               {var,{701,24},'_'},
               {var,{701,24},'_'},
               {var,{701,24},'_'},
               {atom,{701,33},none},
               {var,{701,24},'_'}]}],
         [],
         [{debug_line,702,248},{atom,{702,5},none}]},
     {clause,
         {703,1},
         [{var,{703,11},'Bif'},
          {var,{703,16},'Args'},
          {tuple,
              {703,22},
              [{atom,{703,22},st},
               {var,{703,22},'_'},
               {var,{703,22},'_'},
               {var,{703,22},'_'},
               {var,{703,31},'Prev'},
               {var,{703,22},'_'}]}],
         [],
         [{debug_line,704,249},
          {'case',
              {704,5},
              {call,
                  {704,10},
                  {atom,{704,10},normalize_test},
                  [{var,{704,25},'Bif'},{var,{704,30},'Args'}]},
              [{clause,
                   {705,9},
                   [{atom,{705,9},none}],
                   [],
                   [{debug_line,706,250},{atom,{706,13},none}]},
               {clause,
                   {707,9},
                   [{var,{707,9},'Test'}],
                   [],
                   [{debug_line,708,251},
                    {'case',
                        {708,13},
                        {call,
                            {708,18},
                            {atom,{708,18},will_succeed},
                            [{var,{708,31},'Prev'},{var,{708,37},'Test'}]},
                        [{clause,
                             {709,17},
                             [{atom,{709,17},yes}],
                             [],
                             [{debug_line,709,252},
                              {tuple,
                                  {709,24},
                                  [{atom,{709,24},b_literal},
                                   {atom,{709,39},true}]}]},
                         {clause,
                             {710,17},
                             [{atom,{710,17},no}],
                             [],
                             [{debug_line,710,253},
                              {tuple,
                                  {710,23},
                                  [{atom,{710,23},b_literal},
                                   {atom,{710,38},false}]}]},
                         {clause,
                             [{text,"'maybe'"},{location,{711,17}}],
                             [{atom,
                                  [{text,"'maybe'"},{location,{711,17}}],
                                  'maybe'}],
                             [],
                             [{debug_line,711,254},
                              {atom,{711,28},none}]}]}]}]}]}]}.
{function,
    {719,1},
    will_succeed,2,
    [{clause,
         {719,1},
         [{var,{719,1},'_'},{var,{719,1},'_'}],
         [[{call,
               {719,1},
               {remote,
                   {719,1},
                   {atom,{719,1},fake},
                   {atom,{719,1},is_beam_bif_info}},
               []}]],
         [{debug_line,719,255},{atom,{719,1},ignore}]},
     {clause,
         {719,1},
         [{match,
              {719,14},
              {tuple,
                  {719,14},
                  [{var,{719,15},'_'},{var,{719,17},'_'},{var,{719,19},'_'}]},
              {var,{719,22},'Same'}},
          {match,
              {719,28},
              {tuple,
                  {719,28},
                  [{var,{719,29},'_'},{var,{719,31},'_'},{var,{719,33},'_'}]},
              {var,{719,36},'Same'}}],
         [],
         [{debug_line,721,256},{atom,{721,5},yes}]},
     {clause,
         {722,1},
         [{tuple,
              {722,14},
              [{var,{722,15},'Op1'},
               {var,{722,19},'Var'},
               {tuple,
                   {722,23},
                   [{atom,{722,23},b_literal},{var,{722,38},'A'}]}]},
          {tuple,
              {722,43},
              [{var,{722,44},'Op2'},
               {var,{722,48},'Var'},
               {tuple,
                   {722,52},
                   [{atom,{722,52},b_literal},{var,{722,67},'B'}]}]}],
         [],
         [{debug_line,723,257},
          {call,
              {723,5},
              {atom,{723,5},will_succeed_1},
              [{var,{723,20},'Op1'},
               {var,{723,25},'A'},
               {var,{723,28},'Op2'},
               {var,{723,33},'B'}]}]},
     {clause,
         {724,1},
         [{tuple,
              {724,14},
              [{var,{724,15},'Op1'},
               {var,{724,19},'Var'},
               {match,
                   {724,23},
                   {tuple,{724,23},[{atom,{724,23},b_var},{var,{724,23},'_'}]},
                   {var,{724,32},'A'}}]},
          {tuple,
              {724,36},
              [{var,{724,37},'Op2'},
               {var,{724,41},'Var'},
               {match,
                   {724,45},
                   {tuple,{724,45},[{atom,{724,45},b_var},{var,{724,45},'_'}]},
                   {var,{724,54},'B'}}]}],
         [],
         [{debug_line,725,258},
          {call,
              {725,5},
              {atom,{725,5},will_succeed_vars},
              [{var,{725,23},'Op1'},
               {var,{725,28},'A'},
               {var,{725,31},'Op2'},
               {var,{725,36},'B'}]}]},
     {clause,
         {726,1},
         [{tuple,
              {726,14},
              [{atom,{726,15},'=:='},
               {var,{726,21},'Var'},
               {tuple,
                   {726,25},
                   [{atom,{726,25},b_literal},{var,{726,40},'A'}]}]},
          {tuple,{726,45},[{var,{726,46},'TypeTest'},{var,{726,55},'Var'}]}],
         [],
         [{debug_line,727,259},
          {call,
              {727,5},
              {atom,{727,5},eval_type_test},
              [{var,{727,20},'TypeTest'},{var,{727,30},'A'}]}]},
     {clause,
         {728,1},
         [{match,
              {728,14},
              {tuple,{728,14},[{var,{728,15},'_'},{var,{728,17},'_'}]},
              {var,{728,20},'Same'}},
          {match,
              {728,26},
              {tuple,{728,26},[{var,{728,27},'_'},{var,{728,29},'_'}]},
              {var,{728,32},'Same'}}],
         [],
         [{debug_line,730,260},{atom,{730,5},yes}]},
     {clause,
         {731,1},
         [{tuple,{731,14},[{var,{731,15},'Test1'},{var,{731,21},'Var'}]},
          {tuple,{731,27},[{var,{731,28},'Test2'},{var,{731,34},'Var'}]}],
         [],
         [{debug_line,732,261},
          {call,
              {732,5},
              {atom,{732,5},will_succeed_test},
              [{var,{732,23},'Test1'},{var,{732,30},'Test2'}]}]},
     {clause,
         {733,1},
         [{tuple,
              {733,14},
              [{tuple,
                   {733,15},
                   [{atom,{733,16},'not'},{atom,{733,22},is_boolean}]},
               {var,{733,34},'Var'}]},
          {tuple,
              {733,40},
              [{atom,{733,41},'=:='},
               {var,{733,47},'Var'},
               {tuple,
                   {733,51},
                   [{atom,{733,51},b_literal},{var,{733,66},'Lit'}]}]}],
         [[{call,
               {734,8},
               {remote,
                   {734,8},
                   {atom,{734,8},erlang},
                   {atom,{734,8},is_boolean}},
               [{var,{734,19},'Lit'}]}]],
         [{debug_line,735,262},{atom,{735,5},no}]},
     {clause,
         {736,1},
         [{tuple,{736,14},[{var,{736,15},'_'},{var,{736,17},'_'}]},
          {tuple,{736,21},[{var,{736,22},'_'},{var,{736,24},'_'}]}],
         [],
         [{debug_line,737,263},
          {atom,[{text,"'maybe'"},{location,{737,5}}],'maybe'}]},
     {clause,
         {738,1},
         [{tuple,{738,14},[{var,{738,15},'_'},{var,{738,17},'_'}]},
          {tuple,
              {738,21},
              [{var,{738,22},'_'},{var,{738,24},'_'},{var,{738,26},'_'}]}],
         [],
         [{debug_line,739,264},
          {atom,[{text,"'maybe'"},{location,{739,5}}],'maybe'}]},
     {clause,
         {740,1},
         [{tuple,
              {740,14},
              [{var,{740,15},'_'},{var,{740,17},'_'},{var,{740,19},'_'}]},
          {tuple,{740,23},[{var,{740,24},'_'},{var,{740,26},'_'}]}],
         [],
         [{debug_line,741,265},
          {atom,[{text,"'maybe'"},{location,{741,5}}],'maybe'}]},
     {clause,
         {742,1},
         [{tuple,
              {742,14},
              [{var,{742,15},'_'},{var,{742,17},'_'},{var,{742,19},'_'}]},
          {tuple,
              {742,23},
              [{var,{742,24},'_'},{var,{742,26},'_'},{var,{742,28},'_'}]}],
         [],
         [{debug_line,743,266},
          {atom,[{text,"'maybe'"},{location,{743,5}}],'maybe'}]}]}.
{function,
    {745,1},
    will_succeed_test,2,
    [{clause,
         {745,1},
         [{var,{745,1},'_'},{var,{745,1},'_'}],
         [[{call,
               {745,1},
               {remote,
                   {745,1},
                   {atom,{745,1},fake},
                   {atom,{745,1},is_beam_bif_info}},
               []}]],
         [{debug_line,745,267},{atom,{745,1},ignore}]},
     {clause,
         {745,1},
         [{tuple,{745,19},[{atom,{745,20},'not'},{var,{745,26},'Test1'}]},
          {var,{745,34},'Test2'}],
         [],
         [{debug_line,746,268},
          {'case',
              {746,5},
              {op,{746,16},
                  '=:=',
                  {var,{746,10},'Test1'},
                  {var,{746,20},'Test2'}},
              [{clause,
                   {747,9},
                   [{atom,{747,9},true}],
                   [],
                   [{debug_line,747,269},{atom,{747,17},no}]},
               {clause,
                   {748,9},
                   [{atom,{748,9},false}],
                   [],
                   [{debug_line,748,270},
                    {atom,
                        [{text,"'maybe'"},{location,{748,18}}],
                        'maybe'}]}]}]},
     {clause,
         {750,1},
         [{atom,{750,19},is_tuple},
          {tuple,
              {750,29},
              [{atom,{750,30},is_tagged_tuple},
               {var,{750,46},'_'},
               {var,{750,48},'_'}]}],
         [],
         [{debug_line,751,271},
          {atom,[{text,"'maybe'"},{location,{751,5}}],'maybe'}]},
     {clause,
         {752,1},
         [{tuple,
              {752,19},
              [{atom,{752,20},is_tagged_tuple},
               {var,{752,36},'_'},
               {var,{752,38},'_'}]},
          {atom,{752,42},is_tuple}],
         [],
         [{debug_line,753,272},{atom,{753,5},yes}]},
     {clause,
         {754,1},
         [{atom,{754,19},is_list},{atom,{754,28},is_nonempty_list}],
         [],
         [{debug_line,755,273},
          {atom,[{text,"'maybe'"},{location,{755,5}}],'maybe'}]},
     {clause,
         {756,1},
         [{atom,{756,19},is_nonempty_list},{atom,{756,37},is_list}],
         [],
         [{debug_line,757,274},{atom,{757,5},yes}]},
     {clause,
         {758,1},
         [{var,{758,19},'_T1'},{var,{758,24},'_T2'}],
         [],
         [{debug_line,759,275},
          {atom,[{text,"'maybe'"},{location,{759,5}}],'maybe'}]}]}.
{function,
    {761,1},
    will_succeed_1,4,
    [{clause,
         {761,1},
         [{var,{761,1},'_'},
          {var,{761,1},'_'},
          {var,{761,1},'_'},
          {var,{761,1},'_'}],
         [[{call,
               {761,1},
               {remote,
                   {761,1},
                   {atom,{761,1},fake},
                   {atom,{761,1},is_beam_bif_info}},
               []}]],
         [{debug_line,761,276},{atom,{761,1},ignore}]},
     {clause,
         {761,1},
         [{atom,{761,16},'=:='},
          {var,{761,23},'A'},
          {atom,{761,26},'<'},
          {var,{761,31},'B'}],
         [],
         [{debug_line,762,277},
          {'if',
              {762,5},
              [{clause,
                   {763,2},
                   [],
                   [[{op,{763,4},'=<',{var,{763,2},'B'},{var,{763,7},'A'}}]],
                   [{debug_line,763,278},{atom,{763,12},no}]},
               {clause,
                   {764,2},
                   [],
                   [[{atom,{764,2},true}]],
                   [{debug_line,764,279},{atom,{764,10},yes}]}]}]},
     {clause,
         {766,1},
         [{atom,{766,16},'=:='},
          {var,{766,23},'A'},
          {atom,{766,26},'=<'},
          {var,{766,32},'B'}],
         [],
         [{debug_line,767,280},
          {'if',
              {767,5},
              [{clause,
                   {768,2},
                   [],
                   [[{op,{768,4},'<',{var,{768,2},'B'},{var,{768,6},'A'}}]],
                   [{debug_line,768,281},{atom,{768,11},no}]},
               {clause,
                   {769,2},
                   [],
                   [[{atom,{769,2},true}]],
                   [{debug_line,769,282},{atom,{769,10},yes}]}]}]},
     {clause,
         {771,1},
         [{atom,{771,16},'=:='},
          {var,{771,23},'A'},
          {atom,{771,26},'=:='},
          {var,{771,33},'B'}],
         [[{op,{771,43},'=/=',{var,{771,41},'A'},{var,{771,47},'B'}}]],
         [{debug_line,772,283},{atom,{772,5},no}]},
     {clause,
         {773,1},
         [{atom,{773,16},'=:='},
          {var,{773,23},'A'},
          {atom,{773,26},'=/='},
          {var,{773,33},'B'}],
         [],
         [{debug_line,774,284},
          {'if',
              {774,5},
              [{clause,
                   {775,2},
                   [],
                   [[{op,{775,4},'=:=',{var,{775,2},'A'},{var,{775,8},'B'}}]],
                   [{debug_line,775,285},{atom,{775,13},no}]},
               {clause,
                   {776,2},
                   [],
                   [[{atom,{776,2},true}]],
                   [{debug_line,776,286},{atom,{776,10},yes}]}]}]},
     {clause,
         {778,1},
         [{atom,{778,16},'=:='},
          {var,{778,23},'A'},
          {atom,{778,26},'>='},
          {var,{778,32},'B'}],
         [],
         [{debug_line,779,287},
          {'if',
              {779,5},
              [{clause,
                   {780,2},
                   [],
                   [[{op,{780,4},'>',{var,{780,2},'B'},{var,{780,6},'A'}}]],
                   [{debug_line,780,288},{atom,{780,11},no}]},
               {clause,
                   {781,2},
                   [],
                   [[{atom,{781,2},true}]],
                   [{debug_line,781,289},{atom,{781,10},yes}]}]}]},
     {clause,
         {783,1},
         [{atom,{783,16},'=:='},
          {var,{783,23},'A'},
          {atom,{783,26},'>'},
          {var,{783,31},'B'}],
         [],
         [{debug_line,784,290},
          {'if',
              {784,5},
              [{clause,
                   {785,2},
                   [],
                   [[{op,{785,4},'>=',{var,{785,2},'B'},{var,{785,7},'A'}}]],
                   [{debug_line,785,291},{atom,{785,12},no}]},
               {clause,
                   {786,2},
                   [],
                   [[{atom,{786,2},true}]],
                   [{debug_line,786,292},{atom,{786,10},yes}]}]}]},
     {clause,
         {789,1},
         [{atom,{789,16},'=/='},
          {var,{789,23},'A'},
          {atom,{789,26},'=:='},
          {var,{789,33},'B'}],
         [[{op,{789,43},'=:=',{var,{789,41},'A'},{var,{789,47},'B'}}]],
         [{debug_line,789,293},{atom,{789,52},no}]},
     {clause,
         {791,1},
         [{atom,{791,16},'<'},
          {var,{791,21},'A'},
          {atom,{791,24},'=:='},
          {var,{791,31},'B'}],
         [[{op,{791,42},'>=',{var,{791,40},'B'},{var,{791,45},'A'}}]],
         [{debug_line,791,294},{atom,{791,50},no}]},
     {clause,
         {792,1},
         [{atom,{792,16},'<'},
          {var,{792,21},'A'},
          {atom,{792,24},'<'},
          {var,{792,31},'B'}],
         [[{op,{792,42},'>=',{var,{792,40},'B'},{var,{792,45},'A'}}]],
         [{debug_line,792,295},{atom,{792,50},yes}]},
     {clause,
         {793,1},
         [{atom,{793,16},'<'},
          {var,{793,21},'A'},
          {atom,{793,24},'=<'},
          {var,{793,31},'B'}],
         [[{op,{793,42},'>=',{var,{793,40},'B'},{var,{793,45},'A'}}]],
         [{debug_line,793,296},{atom,{793,50},yes}]},
     {clause,
         {794,1},
         [{atom,{794,16},'<'},
          {var,{794,21},'A'},
          {atom,{794,24},'>='},
          {var,{794,31},'B'}],
         [[{op,{794,42},'>=',{var,{794,40},'B'},{var,{794,45},'A'}}]],
         [{debug_line,794,297},{atom,{794,50},no}]},
     {clause,
         {795,1},
         [{atom,{795,16},'<'},
          {var,{795,21},'A'},
          {atom,{795,24},'>'},
          {var,{795,31},'B'}],
         [[{op,{795,42},'>=',{var,{795,40},'B'},{var,{795,45},'A'}}]],
         [{debug_line,795,298},{atom,{795,50},no}]},
     {clause,
         {797,1},
         [{atom,{797,16},'=<'},
          {var,{797,22},'A'},
          {atom,{797,25},'=:='},
          {var,{797,32},'B'}],
         [[{op,{797,42},'>',{var,{797,40},'B'},{var,{797,44},'A'}}]],
         [{debug_line,797,299},{atom,{797,50},no}]},
     {clause,
         {798,1},
         [{atom,{798,16},'=<'},
          {var,{798,22},'A'},
          {atom,{798,25},'<'},
          {var,{798,32},'B'}],
         [[{op,{798,42},'>',{var,{798,40},'B'},{var,{798,44},'A'}}]],
         [{debug_line,798,300},{atom,{798,50},yes}]},
     {clause,
         {799,1},
         [{atom,{799,16},'=<'},
          {var,{799,22},'A'},
          {atom,{799,25},'=<'},
          {var,{799,32},'B'}],
         [[{op,{799,42},'>=',{var,{799,40},'B'},{var,{799,45},'A'}}]],
         [{debug_line,799,301},{atom,{799,50},yes}]},
     {clause,
         {800,1},
         [{atom,{800,16},'=<'},
          {var,{800,22},'A'},
          {atom,{800,25},'>='},
          {var,{800,32},'B'}],
         [[{op,{800,42},'>',{var,{800,40},'B'},{var,{800,44},'A'}}]],
         [{debug_line,800,302},{atom,{800,50},no}]},
     {clause,
         {801,1},
         [{atom,{801,16},'=<'},
          {var,{801,22},'A'},
          {atom,{801,25},'>'},
          {var,{801,32},'B'}],
         [[{op,{801,42},'>=',{var,{801,40},'B'},{var,{801,45},'A'}}]],
         [{debug_line,801,303},{atom,{801,50},no}]},
     {clause,
         {803,1},
         [{atom,{803,16},'>='},
          {var,{803,22},'A'},
          {atom,{803,25},'=:='},
          {var,{803,32},'B'}],
         [[{op,{803,42},'<',{var,{803,40},'B'},{var,{803,44},'A'}}]],
         [{debug_line,803,304},{atom,{803,50},no}]},
     {clause,
         {804,1},
         [{atom,{804,16},'>='},
          {var,{804,22},'A'},
          {atom,{804,25},'<'},
          {var,{804,32},'B'}],
         [[{op,{804,42},'=<',{var,{804,40},'B'},{var,{804,45},'A'}}]],
         [{debug_line,804,305},{atom,{804,50},no}]},
     {clause,
         {805,1},
         [{atom,{805,16},'>='},
          {var,{805,22},'A'},
          {atom,{805,25},'=<'},
          {var,{805,32},'B'}],
         [[{op,{805,42},'<',{var,{805,40},'B'},{var,{805,44},'A'}}]],
         [{debug_line,805,306},{atom,{805,50},no}]},
     {clause,
         {806,1},
         [{atom,{806,16},'>='},
          {var,{806,22},'A'},
          {atom,{806,25},'>='},
          {var,{806,32},'B'}],
         [[{op,{806,42},'=<',{var,{806,40},'B'},{var,{806,45},'A'}}]],
         [{debug_line,806,307},{atom,{806,50},yes}]},
     {clause,
         {807,1},
         [{atom,{807,16},'>='},
          {var,{807,22},'A'},
          {atom,{807,25},'>'},
          {var,{807,32},'B'}],
         [[{op,{807,42},'<',{var,{807,40},'B'},{var,{807,44},'A'}}]],
         [{debug_line,807,308},{atom,{807,50},yes}]},
     {clause,
         {809,1},
         [{atom,{809,16},'>'},
          {var,{809,21},'A'},
          {atom,{809,24},'=:='},
          {var,{809,31},'B'}],
         [[{op,{809,42},'=<',{var,{809,40},'B'},{var,{809,45},'A'}}]],
         [{debug_line,809,309},{atom,{809,50},no}]},
     {clause,
         {810,1},
         [{atom,{810,16},'>'},
          {var,{810,21},'A'},
          {atom,{810,24},'<'},
          {var,{810,31},'B'}],
         [[{op,{810,42},'=<',{var,{810,40},'B'},{var,{810,45},'A'}}]],
         [{debug_line,810,310},{atom,{810,50},no}]},
     {clause,
         {811,1},
         [{atom,{811,16},'>'},
          {var,{811,21},'A'},
          {atom,{811,24},'=<'},
          {var,{811,31},'B'}],
         [[{op,{811,42},'=<',{var,{811,40},'B'},{var,{811,45},'A'}}]],
         [{debug_line,811,311},{atom,{811,50},no}]},
     {clause,
         {812,1},
         [{atom,{812,16},'>'},
          {var,{812,21},'A'},
          {atom,{812,24},'>='},
          {var,{812,31},'B'}],
         [[{op,{812,42},'=<',{var,{812,40},'B'},{var,{812,45},'A'}}]],
         [{debug_line,812,312},{atom,{812,50},yes}]},
     {clause,
         {813,1},
         [{atom,{813,16},'>'},
          {var,{813,21},'A'},
          {atom,{813,24},'>'},
          {var,{813,31},'B'}],
         [[{op,{813,42},'=<',{var,{813,40},'B'},{var,{813,45},'A'}}]],
         [{debug_line,813,313},{atom,{813,50},yes}]},
     {clause,
         {815,1},
         [{atom,{815,16},'=='},
          {var,{815,22},'A'},
          {atom,{815,25},'=='},
          {var,{815,31},'B'}],
         [],
         [{debug_line,816,314},
          {'if',
              {816,5},
              [{clause,
                   {817,2},
                   [],
                   [[{op,{817,4},'==',{var,{817,2},'A'},{var,{817,7},'B'}}]],
                   [{debug_line,817,315},{atom,{817,12},yes}]},
               {clause,
                   {818,2},
                   [],
                   [[{atom,{818,2},true}]],
                   [{debug_line,818,316},{atom,{818,10},no}]}]}]},
     {clause,
         {820,1},
         [{atom,{820,16},'=='},
          {var,{820,22},'A'},
          {atom,{820,25},'/='},
          {var,{820,31},'B'}],
         [],
         [{debug_line,821,317},
          {'if',
              {821,5},
              [{clause,
                   {822,2},
                   [],
                   [[{op,{822,4},'==',{var,{822,2},'A'},{var,{822,7},'B'}}]],
                   [{debug_line,822,318},{atom,{822,12},no}]},
               {clause,
                   {823,2},
                   [],
                   [[{atom,{823,2},true}]],
                   [{debug_line,823,319},{atom,{823,10},yes}]}]}]},
     {clause,
         {825,1},
         [{atom,{825,16},'/='},
          {var,{825,22},'A'},
          {atom,{825,25},'/='},
          {var,{825,31},'B'}],
         [[{op,{825,41},'==',{var,{825,39},'A'},{var,{825,44},'B'}}]],
         [{debug_line,825,320},{atom,{825,49},yes}]},
     {clause,
         {826,1},
         [{atom,{826,16},'/='},
          {var,{826,22},'A'},
          {atom,{826,25},'=='},
          {var,{826,31},'B'}],
         [[{op,{826,41},'==',{var,{826,39},'A'},{var,{826,44},'B'}}]],
         [{debug_line,826,321},{atom,{826,49},no}]},
     {clause,
         {828,1},
         [{var,{828,16},'_'},
          {var,{828,19},'_'},
          {var,{828,22},'_'},
          {var,{828,25},'_'}],
         [],
         [{debug_line,828,322},
          {atom,[{text,"'maybe'"},{location,{828,31}}],'maybe'}]}]}.
{function,{830,1},
          will_succeed_vars,4,
          [{clause,{830,1},
                   [{var,{830,1},'_'},
                    {var,{830,1},'_'},
                    {var,{830,1},'_'},
                    {var,{830,1},'_'}],
                   [[{call,{830,1},
                           {remote,{830,1},
                                   {atom,{830,1},fake},
                                   {atom,{830,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,830,323},{atom,{830,1},ignore}]},
           {clause,{830,1},
                   [{atom,{830,19},'=/='},
                    {var,{830,26},'Var'},
                    {atom,{830,31},'=:='},
                    {var,{830,38},'Var'}],
                   [],
                   [{debug_line,830,324},{atom,{830,46},no}]},
           {clause,{831,1},
                   [{atom,{831,19},'=:='},
                    {var,{831,26},'Var'},
                    {atom,{831,31},'=/='},
                    {var,{831,38},'Var'}],
                   [],
                   [{debug_line,831,325},{atom,{831,46},no}]},
           {clause,{832,1},
                   [{atom,{832,19},'=:='},
                    {var,{832,26},'Var'},
                    {atom,{832,31},'>='},
                    {var,{832,38},'Var'}],
                   [],
                   [{debug_line,832,326},{atom,{832,46},yes}]},
           {clause,{833,1},
                   [{atom,{833,19},'=:='},
                    {var,{833,26},'Var'},
                    {atom,{833,31},'=<'},
                    {var,{833,38},'Var'}],
                   [],
                   [{debug_line,833,327},{atom,{833,46},yes}]},
           {clause,{835,1},
                   [{atom,{835,19},'/='},
                    {var,{835,25},'Var'},
                    {atom,{835,30},'=='},
                    {var,{835,36},'Var'}],
                   [],
                   [{debug_line,835,328},{atom,{835,44},no}]},
           {clause,{836,1},
                   [{atom,{836,19},'=='},
                    {var,{836,25},'Var'},
                    {atom,{836,30},'/='},
                    {var,{836,36},'Var'}],
                   [],
                   [{debug_line,836,329},{atom,{836,44},no}]},
           {clause,{838,1},
                   [{var,{838,19},'_'},
                    {var,{838,22},'_'},
                    {var,{838,25},'_'},
                    {var,{838,28},'_'}],
                   [],
                   [{debug_line,838,330},
                    {atom,[{text,"'maybe'"},{location,{838,34}}],'maybe'}]}]}.
{function,{840,1},
          eval_type_test,2,
          [{clause,{840,1},
                   [{var,{840,1},'_'},{var,{840,1},'_'}],
                   [[{call,{840,1},
                           {remote,{840,1},
                                   {atom,{840,1},fake},
                                   {atom,{840,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,840,331},{atom,{840,1},ignore}]},
           {clause,{840,1},
                   [{var,{840,16},'Test'},{var,{840,22},'Arg'}],
                   [],
                   [{debug_line,841,332},
                    {'case',{841,5},
                            {call,{841,10},
                                  {atom,{841,10},eval_type_test_1},
                                  [{var,{841,27},'Test'},
                                   {var,{841,33},'Arg'}]},
                            [{clause,{842,9},
                                     [{atom,{842,9},true}],
                                     [],
                                     [{debug_line,842,333},
                                      {atom,{842,17},yes}]},
                             {clause,{843,9},
                                     [{atom,{843,9},false}],
                                     [],
                                     [{debug_line,843,334},
                                      {atom,{843,18},no}]}]}]}]}.
{function,
    {846,1},
    eval_type_test_1,2,
    [{clause,
         {846,1},
         [{var,{846,1},'_'},{var,{846,1},'_'}],
         [[{call,
               {846,1},
               {remote,
                   {846,1},
                   {atom,{846,1},fake},
                   {atom,{846,1},is_beam_bif_info}},
               []}]],
         [{debug_line,846,335},{atom,{846,1},ignore}]},
     {clause,
         {846,1},
         [{atom,{846,18},is_nonempty_list},{var,{846,36},'Arg'}],
         [],
         [{debug_line,847,336},
          {'case',
              {847,5},
              {var,{847,10},'Arg'},
              [{clause,
                   {848,9},
                   [{cons,{848,9},{var,{848,10},'_'},{var,{848,12},'_'}}],
                   [],
                   [{debug_line,848,337},{atom,{848,18},true}]},
               {clause,
                   {849,9},
                   [{var,{849,9},'_'}],
                   [],
                   [{debug_line,849,338},{atom,{849,14},false}]}]}]},
     {clause,
         {851,1},
         [{tuple,
              {851,18},
              [{atom,{851,19},is_tagged_tuple},
               {var,{851,35},'Sz'},
               {var,{851,38},'Tag'}]},
          {var,{851,44},'Arg'}],
         [],
         [{debug_line,852,339},
          {'if',
              {852,5},
              [{clause,
                   {853,9},
                   [],
                   [[{op,{853,25},
                         '=:=',
                         {call,
                             {853,9},
                             {remote,
                                 {853,9},
                                 {atom,{853,9},erlang},
                                 {atom,{853,9},tuple_size}},
                             [{var,{853,20},'Arg'}]},
                         {var,{853,29},'Sz'}},
                     {op,{853,49},
                         '=:=',
                         {call,
                             {853,33},
                             {remote,
                                 {853,33},
                                 {atom,{853,33},erlang},
                                 {atom,{853,33},element}},
                             [{integer,{853,41},1},{var,{853,44},'Arg'}]},
                         {var,{853,53},'Tag'}}]],
                   [{debug_line,854,340},{atom,{854,13},true}]},
               {clause,
                   {855,9},
                   [],
                   [[{atom,{855,9},true}]],
                   [{debug_line,856,341},{atom,{856,13},false}]}]}]},
     {clause,
         {858,1},
         [{var,{858,18},'Test'},{var,{858,24},'Arg'}],
         [],
         [{debug_line,859,342},
          {call,
              {859,5},
              {remote,{859,11},{atom,{859,5},erlang},{var,{859,12},'Test'}},
              [{var,{859,17},'Arg'}]}]}]}.
{function,
    {905,1},
    combine_eqs,1,
    [{clause,
         {905,1},
         [{var,{905,1},'_'}],
         [[{call,
               {905,1},
               {remote,
                   {905,1},
                   {atom,{905,1},fake},
                   {atom,{905,1},is_beam_bif_info}},
               []}]],
         [{debug_line,905,343},{atom,{905,1},ignore}]},
     {clause,
         {905,1},
         [{match,
              {905,13},
              {tuple,
                  {905,13},
                  [{atom,{905,13},st},
                   {var,{905,20},'Blocks'},
                   {var,{905,13},'_'},
                   {var,{905,13},'_'},
                   {var,{905,13},'_'},
                   {var,{905,13},'_'}]},
              {var,{905,28},'St'}}],
         [],
         [{debug_line,906,344},
          {match,
              {906,5},
              {var,{906,5},'Ls'},
              {call,
                  {906,10},
                  {remote,
                      {906,10},
                      {atom,{906,10},lists},
                      {atom,{906,10},reverse}},
                  [{block,0,
                       [{call,
                            {906,18},
                            {remote,
                                {906,26},
                                {atom,{906,18},beam_ssa},
                                {atom,{906,27},rpo}},
                            [{var,{906,31},'Blocks'}]}]}]}},
          {debug_line,907,345},
          {call,
              {907,5},
              {atom,{907,5},combine_eqs_1},
              [{var,{907,19},'Ls'},{var,{907,23},'St'}]}]}]}.
{function,
 {909,1},
 combine_eqs_1,2,
 [{clause,
   {909,1},
   [{var,{909,1},'_'},{var,{909,1},'_'}],
   [[{call,
      {909,1},
      {remote,{909,1},{atom,{909,1},fake},{atom,{909,1},is_beam_bif_info}},
      []}]],
   [{debug_line,909,346},{atom,{909,1},ignore}]},
  {clause,
   {909,1},
   [{cons,{909,15},{var,{909,16},'L'},{var,{909,18},'Ls'}},
    {match,
     {909,23},
     {tuple,
      {909,23},
      [{atom,{909,23},st},
       {var,{909,30},'Blocks0'},
       {var,{909,23},'_'},
       {var,{909,23},'_'},
       {var,{909,23},'_'},
       {var,{909,23},'_'}]},
     {var,{909,39},'St0'}}],
   [],
   [{debug_line,910,347},
    {'case',
     {910,5},
     {call,
      {910,10},
      {atom,{910,10},comb_get_sw},
      [{var,{910,22},'L'},{var,{910,25},'St0'}]},
     [{clause,
       {911,9},
       [{atom,{911,9},none}],
       [],
       [{debug_line,912,348},
        {call,
         {912,13},
         {atom,{912,13},combine_eqs_1},
         [{var,{912,27},'Ls'},{var,{912,31},'St0'}]}]},
      {clause,
       {913,9},
       [{tuple,
         {913,9},
         [{var,{913,10},'_'},
          {var,{913,12},'Arg'},
          {var,{913,16},'_'},
          {var,{913,18},'Fail0'},
          {var,{913,24},'List0'}]}],
       [],
       [{debug_line,915,349},
        {'case',
         {915,13},
         {call,
          {915,18},
          {atom,{915,18},comb_get_sw},
          [{var,{915,30},'Fail0'},{var,{915,37},'St0'}]},
         [{clause,
           {916,17},
           [{tuple,
             {916,17},
             [{atom,{916,18},true},
              {var,{916,23},'Arg'},
              {var,{916,27},'Fail1'},
              {var,{916,33},'Fail'},
              {var,{916,38},'List1'}]}],
           [],
           [{debug_line,919,350},
            {'case',
             {919,21},
             {call,
              {919,26},
              {atom,{919,26},combine_lists},
              [{var,{919,40},'Fail1'},
               {var,{919,47},'List0'},
               {var,{919,54},'List1'},
               {var,{919,61},'Blocks0'}]},
             [{clause,
               {920,25},
               [{atom,{920,25},none}],
               [],
               [{debug_line,925,351},
                {call,
                 {925,29},
                 {atom,{925,29},combine_eqs_1},
                 [{var,{925,43},'Ls'},{var,{925,47},'St0'}]}]},
              {clause,
               {926,25},
               [{var,{926,25},'List'}],
               [],
               [{debug_line,928,352},
                {match,
                 {928,29},
                 {var,{928,29},'St'},
                 {call,
                  {928,34},
                  {atom,{928,34},combine_build_sw},
                  [{var,{928,51},'L'},
                   {var,{928,54},'Arg'},
                   {var,{928,59},'Fail'},
                   {var,{928,65},'List'},
                   {var,{928,71},'St0'}]}},
                {debug_line,929,353},
                {call,
                 {929,29},
                 {atom,{929,29},combine_eqs_1},
                 [{var,{929,43},'Ls'},{var,{929,47},'St'}]}]}]}]},
          {clause,
           {931,17},
           [{var,{931,17},'_'}],
           [],
           [{debug_line,934,354},
            {match,
             {934,21},
             {cons,
              {934,21},
              {tuple,{934,22},[{var,{934,23},'_'},{var,{934,25},'Succ'}]},
              {var,{934,31},'_'}},
             {var,{934,36},'List0'}},
            {debug_line,935,355},
            {'case',
             {935,21},
             {call,
              {935,26},
              {atom,{935,26},comb_get_sw},
              [{var,{935,38},'Succ'},{var,{935,44},'St0'}]},
             [{clause,
               {936,25},
               [{tuple,
                 {936,25},
                 [{atom,{936,26},true},
                  {var,{936,31},'Arg'},
                  {var,{936,35},'_'},
                  {var,{936,37},'_'},
                  {var,{936,39},'_'}]}],
               [],
               [{debug_line,950,356},
                {match,
                 {950,29},
                 {var,{950,29},'St'},
                 {call,
                  {950,34},
                  {atom,{950,34},combine_build_sw},
                  [{var,{950,51},'L'},
                   {var,{950,54},'Arg'},
                   {var,{950,59},'Fail0'},
                   {var,{950,66},'List0'},
                   {var,{950,73},'St0'}]}},
                {debug_line,951,357},
                {call,
                 {951,29},
                 {atom,{951,29},combine_eqs_1},
                 [{var,{951,43},'Ls'},{var,{951,47},'St'}]}]},
              {clause,
               {952,25},
               [{var,{952,25},'_'}],
               [],
               [{debug_line,953,358},
                {call,
                 {953,29},
                 {atom,{953,29},combine_eqs_1},
                 [{var,{953,43},'Ls'},{var,{953,47},'St0'}]}]}]}]}]}]}]}]},
  {clause,
   {957,1},
   [{nil,{957,15}},{var,{957,19},'St'}],
   [],
   [{debug_line,957,359},{var,{957,26},'St'}]}]}.
{function,
 {959,1},
 combine_build_sw,5,
 [{clause,
   {959,1},
   [{var,{959,1},'_'},
    {var,{959,1},'_'},
    {var,{959,1},'_'},
    {var,{959,1},'_'},
    {var,{959,1},'_'}],
   [[{call,
      {959,1},
      {remote,{959,1},{atom,{959,1},fake},{atom,{959,1},is_beam_bif_info}},
      []}]],
   [{debug_line,959,360},{atom,{959,1},ignore}]},
  {clause,
   {959,1},
   [{var,{959,18},'From'},
    {var,{959,24},'Arg'},
    {var,{959,29},'Fail'},
    {var,{959,35},'List'},
    {match,
     {959,41},
     {tuple,
      {959,41},
      [{atom,{959,41},st},
       {var,{959,48},'Blocks0'},
       {var,{959,41},'_'},
       {var,{959,41},'_'},
       {var,{959,41},'_'},
       {var,{959,41},'_'}]},
     {var,{959,57},'St'}}],
   [],
   [{debug_line,960,361},
    {match,
     {960,5},
     {var,{960,5},'Sw0'},
     {tuple,
      {960,11},
      [{atom,{960,11},b_switch},
       {map,{960,11},[]},
       {var,{960,25},'Arg'},
       {var,{960,34},'Fail'},
       {var,{960,44},'List'}]}},
    {debug_line,961,362},
    {match,
     {961,5},
     {var,{961,5},'Sw'},
     {call,
      {961,10},
      {remote,{961,18},{atom,{961,10},beam_ssa},{atom,{961,19},normalize}},
      [{var,{961,29},'Sw0'}]}},
    {debug_line,962,363},
    {match,
     {962,5},
     {var,{962,5},'Blk0'},
     {call,
      {962,12},
      {remote,{962,12},{atom,{962,12},erlang},{atom,{962,12},map_get}},
      [{var,{962,20},'From'},{var,{962,26},'Blocks0'}]}},
    {debug_line,963,364},
    {match,
     {963,5},
     {var,{963,5},'Blk'},
     {block,
      {963,11},
      [{match,{963,11},{var,{963,11},rec18},{var,{963,11},'Blk0'}},
       {'case',
        {963,22},
        {var,{963,11},rec18},
        [{clause,
          {963,22},
          [{tuple,
            {963,22},
            [{atom,{963,22},b_blk},
             {var,{963,22},'_'},
             {var,{963,22},'_'},
             {var,{963,22},'_'}]}],
          [],
          [{call,
            {963,22},
            {remote,
             {963,22},
             {atom,{963,22},erlang},
             {atom,{963,22},setelement}},
            [{integer,{963,22},4},{var,{963,11},rec18},{var,{963,27},'Sw'}]}]},
         {clause,
          [{generated,true},{location,{963,22}}],
          [{var,[{generated,true},{location,{963,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{963,22}}],
            {remote,
             [{generated,true},{location,{963,22}}],
             {atom,[{generated,true},{location,{963,22}}],erlang},
             {atom,[{generated,true},{location,{963,22}}],error}},
            [{tuple,
              [{generated,true},{location,{963,22}}],
              [{atom,[{generated,true},{location,{963,22}}],badrecord},
               {var,{963,11},rec18}]}]}]}]}]}},
    {debug_line,964,365},
    {match,
     {964,5},
     {var,{964,5},'Blocks'},
     {map,
      {964,21},
      {var,{964,14},'Blocks0'},
      [{map_field_exact,
        {964,28},
        {var,{964,23},'From'},
        {var,{964,31},'Blk'}}]}},
    {debug_line,965,366},
    {block,
     {965,5},
     [{match,{965,5},{var,{965,5},rec19},{var,{965,5},'St'}},
      {'case',
       {965,11},
       {var,{965,5},rec19},
       [{clause,
         {965,11},
         [{tuple,
           {965,11},
           [{atom,{965,11},st},
            {var,{965,11},'_'},
            {var,{965,11},'_'},
            {var,{965,11},'_'},
            {var,{965,11},'_'},
            {var,{965,11},'_'}]}],
         [],
         [{call,
           {965,11},
           {remote,{965,11},{atom,{965,11},erlang},{atom,{965,11},setelement}},
           [{integer,{965,11},2},
            {var,{965,5},rec19},
            {var,{965,14},'Blocks'}]}]},
        {clause,
         [{generated,true},{location,{965,11}}],
         [{var,[{generated,true},{location,{965,11}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{965,11}}],
           {remote,
            [{generated,true},{location,{965,11}}],
            {atom,[{generated,true},{location,{965,11}}],erlang},
            {atom,[{generated,true},{location,{965,11}}],error}},
           [{tuple,
             [{generated,true},{location,{965,11}}],
             [{atom,[{generated,true},{location,{965,11}}],badrecord},
              {var,{965,5},rec19}]}]}]}]}]}]}]}.
{function,
 {967,1},
 comb_get_sw,2,
 [{clause,
   {967,1},
   [{var,{967,1},'_'},{var,{967,1},'_'}],
   [[{call,
      {967,1},
      {remote,{967,1},{atom,{967,1},fake},{atom,{967,1},is_beam_bif_info}},
      []}]],
   [{debug_line,967,367},{atom,{967,1},ignore}]},
  {clause,
   {967,1},
   [{var,{967,13},'L'},
    {tuple,
     {967,16},
     [{atom,{967,16},st},
      {var,{967,23},'Blocks'},
      {var,{967,16},'_'},
      {var,{967,40},'Skippable'},
      {var,{967,16},'_'},
      {var,{967,16},'_'}]}],
   [],
   [{debug_line,968,368},
    {match,
     {968,5},
     {tuple,
      {968,5},
      [{atom,{968,5},b_blk},
       {var,{968,5},'_'},
       {var,{968,15},'Is'},
       {var,{968,23},'Last'}]},
     {call,
      {968,31},
      {remote,{968,31},{atom,{968,31},erlang},{atom,{968,31},map_get}},
      [{var,{968,39},'L'},{var,{968,42},'Blocks'}]}},
    {debug_line,969,369},
    {match,
     {969,5},
     {var,{969,5},'Safe0'},
     {call,
      {969,13},
      {remote,{969,13},{atom,{969,13},erlang},{atom,{969,13},is_map_key}},
      [{var,{969,24},'L'},{var,{969,27},'Skippable'}]}},
    {debug_line,970,370},
    {'case',
     {970,5},
     {var,{970,10},'Last'},
     [{clause,
       {971,9},
       [{tuple,
         {971,9},
         [{atom,{971,9},b_ret},{var,{971,9},'_'},{var,{971,9},'_'}]}],
       [],
       [{debug_line,972,371},{atom,{972,13},none}]},
      {clause,
       {973,9},
       [{tuple,
         {973,9},
         [{atom,{973,9},b_br},
          {var,{973,9},'_'},
          {match,
           {973,20},
           {tuple,{973,20},[{atom,{973,20},b_var},{var,{973,20},'_'}]},
           {var,{973,29},'Bool'}},
          {var,{973,39},'Succ'},
          {var,{973,49},'Fail'}]}],
       [],
       [{debug_line,974,372},
        {'case',
         {974,13},
         {call,
          {974,18},
          {atom,{974,18},comb_is},
          [{var,{974,26},'Is'},{var,{974,30},'Bool'},{var,{974,36},'Safe0'}]},
         [{clause,
           {975,17},
           [{tuple,{975,17},[{atom,{975,18},none},{var,{975,23},'Safe'}]}],
           [],
           [{debug_line,976,373},
            {tuple,
             {976,21},
             [{var,{976,22},'Safe'},
              {var,{976,27},'Bool'},
              {var,{976,32},'L'},
              {var,{976,34},'Fail'},
              {cons,
               {976,39},
               {tuple,
                {976,40},
                [{tuple,
                  {976,41},
                  [{atom,{976,41},b_literal},{atom,{976,56},true}]},
                 {var,{976,62},'Succ'}]},
               {nil,{976,67}}}]}]},
          {clause,
           {977,17},
           [{tuple,
             {977,17},
             [{tuple,
               {977,18},
               [{atom,{977,18},b_set},
                {var,{977,18},'_'},
                {var,{977,18},'_'},
                {tuple,{977,28},[{atom,{977,29},bif},{atom,{977,33},'=:='}]},
                {cons,
                 {977,45},
                 {match,
                  {977,46},
                  {tuple,{977,46},[{atom,{977,46},b_var},{var,{977,46},'_'}]},
                  {var,{977,55},'Arg'}},
                 {cons,
                  {977,59},
                  {match,
                   {977,59},
                   {tuple,
                    {977,59},
                    [{atom,{977,59},b_literal},{var,{977,59},'_'}]},
                   {var,{977,72},'Lit'}},
                  {nil,{977,75}}}}]},
              {var,{977,78},'Safe'}]}],
           [],
           [{debug_line,978,374},
            {tuple,
             {978,21},
             [{var,{978,22},'Safe'},
              {var,{978,27},'Arg'},
              {var,{978,31},'L'},
              {var,{978,33},'Fail'},
              {cons,
               {978,38},
               {tuple,{978,39},[{var,{978,40},'Lit'},{var,{978,44},'Succ'}]},
               {nil,{978,49}}}]}]},
          {clause,
           {979,17},
           [{tuple,
             {979,17},
             [{tuple,
               {979,18},
               [{atom,{979,18},b_set},
                {var,{979,18},'_'},
                {var,{979,18},'_'},
                {tuple,
                 {979,28},
                 [{atom,{979,29},bif},{atom,{979,33},is_boolean}]},
                {cons,
                 {979,50},
                 {match,
                  {979,51},
                  {tuple,{979,51},[{atom,{979,51},b_var},{var,{979,51},'_'}]},
                  {var,{979,60},'Arg'}},
                 {nil,{979,63}}}]},
              {var,{979,66},'Safe'}]}],
           [],
           [{debug_line,980,375},
            {match,
             {980,21},
             {var,{980,21},'SwList'},
             {cons,
              {980,30},
              {tuple,
               {980,31},
               [{tuple,
                 {980,32},
                 [{atom,{980,32},b_literal},{atom,{980,47},false}]},
                {var,{980,54},'Succ'}]},
              {cons,
               {981,31},
               {tuple,
                {981,31},
                [{tuple,
                  {981,32},
                  [{atom,{981,32},b_literal},{atom,{981,47},true}]},
                 {var,{981,53},'Succ'}]},
               {nil,{981,58}}}}},
            {debug_line,982,376},
            {tuple,
             {982,21},
             [{var,{982,22},'Safe'},
              {var,{982,27},'Arg'},
              {var,{982,31},'L'},
              {var,{982,33},'Fail'},
              {var,{982,38},'SwList'}]}]},
          {clause,
           {983,17},
           [{tuple,
             {983,17},
             [{tuple,
               {983,18},
               [{atom,{983,18},b_set},
                {var,{983,18},'_'},
                {var,{983,18},'_'},
                {var,{983,18},'_'},
                {var,{983,18},'_'}]},
              {var,{983,27},'_'}]}],
           [],
           [{debug_line,984,377},{atom,{984,21},none}]}]}]},
      {clause,
       {986,9},
       [{tuple,
         {986,9},
         [{atom,{986,9},b_br},
          {var,{986,9},'_'},
          {var,{986,9},'_'},
          {var,{986,9},'_'},
          {var,{986,9},'_'}]}],
       [],
       [{debug_line,987,378},{atom,{987,13},none}]},
      {clause,
       {988,9},
       [{tuple,
         {988,9},
         [{atom,{988,9},b_switch},
          {var,{988,9},'_'},
          {match,
           {988,23},
           {tuple,{988,23},[{atom,{988,23},b_var},{var,{988,23},'_'}]},
           {var,{988,32},'Arg'}},
          {var,{988,41},'Fail'},
          {var,{988,51},'List'}]}],
       [],
       [{debug_line,989,379},
        {match,
         {989,13},
         {tuple,{989,13},[{atom,{989,14},none},{var,{989,19},'Safe'}]},
         {call,
          {989,27},
          {atom,{989,27},comb_is},
          [{var,{989,35},'Is'},{atom,{989,39},none},{var,{989,45},'Safe0'}]}},
        {debug_line,990,380},
        {tuple,
         {990,13},
         [{var,{990,14},'Safe'},
          {var,{990,19},'Arg'},
          {var,{990,23},'L'},
          {var,{990,25},'Fail'},
          {var,{990,30},'List'}]}]}]}]}]}.
{function,
    {993,1},
    comb_is,3,
    [{clause,
         {993,1},
         [{var,{993,1},'_'},{var,{993,1},'_'},{var,{993,1},'_'}],
         [[{call,
               {993,1},
               {remote,
                   {993,1},
                   {atom,{993,1},fake},
                   {atom,{993,1},is_beam_bif_info}},
               []}]],
         [{debug_line,993,381},{atom,{993,1},ignore}]},
     {clause,
         {993,1},
         [{cons,
              {993,9},
              {match,
                  {993,10},
                  {tuple,
                      {993,10},
                      [{atom,{993,10},b_set},
                       {var,{993,10},'_'},
                       {match,
                           {993,21},
                           {tuple,
                               {993,21},
                               [{atom,{993,21},b_var},{var,{993,21},'_'}]},
                           {var,{993,30},'Bool'}},
                       {var,{993,10},'_'},
                       {var,{993,10},'_'}]},
                  {var,{993,36},'I'}},
              {nil,{993,37}}},
          {var,{993,40},'Bool'},
          {var,{993,46},'Safe'}],
         [],
         [{debug_line,994,382},
          {tuple,{994,5},[{var,{994,6},'I'},{var,{994,8},'Safe'}]}]},
     {clause,
         {995,1},
         [{cons,
              {995,9},
              {match,
                  {995,10},
                  {tuple,
                      {995,10},
                      [{atom,{995,10},b_set},
                       {var,{995,10},'_'},
                       {var,{995,10},'_'},
                       {var,{995,10},'_'},
                       {var,{995,10},'_'}]},
                  {var,{995,19},'I'}},
              {var,{995,21},'Is'}},
          {var,{995,26},'Bool'},
          {var,{995,32},'Safe0'}],
         [],
         [{debug_line,996,383},
          {match,
              {996,5},
              {var,{996,5},'Safe'},
              {'case',
                  {996,12},
                  {var,{996,12},'Safe0'},
                  [{clause,
                       {996,12},
                       [{atom,{996,12},true}],
                       [],
                       [{call,
                            {996,26},
                            {remote,
                                {996,34},
                                {atom,{996,26},beam_ssa},
                                {atom,{996,35},no_side_effect}},
                            [{var,{996,50},'I'}]}]},
                   {clause,
                       {996,12},
                       [{atom,{996,12},false}],
                       [],
                       [{atom,{996,12},false}]},
                   {clause,
                       [{generated,true},{location,{996,12}}],
                       [{var,{996,12},cov1}],
                       [],
                       [{call,
                            {996,12},
                            {remote,
                                {996,12},
                                {atom,{996,12},erlang},
                                {atom,{996,12},error}},
                            [{block,0,
                                 [{tuple,
                                      {996,12},
                                      [{atom,{996,12},badarg},
                                       {var,{996,12},cov1}]}]}]}]}]}},
          {debug_line,997,384},
          {call,
              {997,5},
              {atom,{997,5},comb_is},
              [{var,{997,13},'Is'},
               {var,{997,17},'Bool'},
               {var,{997,23},'Safe'}]}]},
     {clause,
         {998,1},
         [{nil,{998,9}},{var,{998,13},'_Bool'},{var,{998,20},'Safe'}],
         [],
         [{debug_line,999,385},
          {tuple,{999,5},[{atom,{999,6},none},{var,{999,11},'Safe'}]}]}]}.
{function,
    {1012,1},
    combine_lists,4,
    [{clause,
         {1012,1},
         [{var,{1012,1},'_'},
          {var,{1012,1},'_'},
          {var,{1012,1},'_'},
          {var,{1012,1},'_'}],
         [[{call,
               {1012,1},
               {remote,
                   {1012,1},
                   {atom,{1012,1},fake},
                   {atom,{1012,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1012,386},{atom,{1012,1},ignore}]},
     {clause,
         {1012,1},
         [{var,{1012,15},'Fail'},
          {var,{1012,21},'L1'},
          {var,{1012,25},'L2'},
          {var,{1012,29},'Blocks'}],
         [],
         [{debug_line,1013,387},
          {match,
              {1013,5},
              {var,{1013,5},'Ls'},
              {call,
                  {1013,10},
                  {remote,
                      {1013,18},
                      {atom,{1013,10},beam_ssa},
                      {atom,{1013,19},rpo}},
                  [{block,0,
                       [{lc,{1013,23},
                            {block,0,[{var,{1013,24},'Lbl'}]},
                            [{block,0,[{atom,{1013,43},true}]},
                             {generate_strict,
                                 {1013,39},
                                 {tuple,
                                     {1013,31},
                                     [{var,{1013,32},'_'},
                                      {var,{1013,34},'Lbl'}]},
                                 {var,{1013,43},'L1'}}]}]},
                   {var,{1013,48},'Blocks'}]}},
          {debug_line,1014,388},
          {'case',
              {1014,5},
              {call,
                  {1014,10},
                  {remote,
                      {1014,10},
                      {atom,{1014,10},lists},
                      {atom,{1014,10},member}},
                  [{var,{1014,17},'Fail'},{var,{1014,23},'Ls'}]},
              [{clause,
                   {1015,9},
                   [{atom,{1015,9},true}],
                   [],
                   [{debug_line,1021,389},{atom,{1021,13},none}]},
               {clause,
                   {1022,9},
                   [{atom,{1022,9},false}],
                   [],
                   [{debug_line,1026,390},
                    {call,
                        {1026,13},
                        {atom,{1026,13},combine_lists_1},
                        [{var,{1026,29},'L1'},{var,{1026,33},'L2'}]}]}]}]}]}.
{function,
 {1029,1},
 combine_lists_1,2,
 [{clause,
   {1029,1},
   [{var,{1029,1},'_'},{var,{1029,1},'_'}],
   [[{call,
      {1029,1},
      {remote,{1029,1},{atom,{1029,1},fake},{atom,{1029,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1029,391},{atom,{1029,1},ignore}]},
  {clause,
   {1029,1},
   [{var,{1029,17},'List0'},{var,{1029,24},'List1'}],
   [],
   [{debug_line,1030,392},
    {'case',
     {1030,5},
     {call,
      {1030,10},
      {atom,{1030,10},are_lists_compatible},
      [{var,{1030,31},'List0'},{var,{1030,38},'List1'}]},
     [{clause,
       {1031,9},
       [{atom,{1031,9},true}],
       [],
       [{debug_line,1032,393},
        {match,
         {1032,13},
         {var,{1032,13},'First'},
         {call,
          {1032,21},
          {remote,{1032,25},{atom,{1032,21},maps},{atom,{1032,26},from_list}},
          [{var,{1032,36},'List0'}]}},
        {debug_line,1033,394},
        {op,
         {1033,19},
         '++',
         {var,{1033,13},'List0'},
         {lc,
          {1033,22},
          {block,0,
           [{tuple,{1033,23},[{var,{1033,24},'Val'},{var,{1033,28},'Lbl'}]}]},
          [{block,0,[{atom,{1033,50},true}]},
           {generate_strict,
            {1033,46},
            {tuple,{1033,36},[{var,{1033,37},'Val'},{var,{1033,41},'Lbl'}]},
            {var,{1033,50},'List1'}},
           {block,0,[{debug_line,1034,395},{atom,{1034,36},true}]},
           {op,
            {1034,36},
            'not',
            {call,
             {1034,40},
             {remote,
              {1034,40},
              {atom,{1034,40},erlang},
              {atom,{1034,40},is_map_key}},
             [{var,{1034,51},'Val'},{var,{1034,56},'First'}]}}]}}]},
      {clause,
       {1035,9},
       [{atom,{1035,9},false}],
       [],
       [{debug_line,1036,396},{atom,{1036,13},none}]}]}]}]}.
{function,
    {1039,1},
    are_lists_compatible,2,
    [{clause,
         {1039,1},
         [{var,{1039,1},'_'},{var,{1039,1},'_'}],
         [[{call,
               {1039,1},
               {remote,
                   {1039,1},
                   {atom,{1039,1},fake},
                   {atom,{1039,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1039,397},{atom,{1039,1},ignore}]},
     {clause,
         {1039,1},
         [{cons,
              {1039,22},
              {tuple,
                  {1039,23},
                  [{tuple,
                       {1039,24},
                       [{atom,{1039,24},b_literal},{var,{1039,39},'Val1'}]},
                   {var,{1039,45},'_'}]},
              {var,{1039,48},'_'}},
          {cons,
              {1040,22},
              {tuple,
                  {1040,23},
                  [{tuple,
                       {1040,24},
                       [{atom,{1040,24},b_literal},{var,{1040,39},'Val2'}]},
                   {var,{1040,45},'_'}]},
              {var,{1040,48},'_'}}],
         [],
         [{debug_line,1041,398},
          {'case',
              {1041,5},
              {call,
                  {1041,10},
                  {atom,{1041,10},lit_type},
                  [{var,{1041,19},'Val1'}]},
              [{clause,
                   {1042,9},
                   [{atom,{1042,9},none}],
                   [],
                   [{debug_line,1042,399},{atom,{1042,17},false}]},
               {clause,
                   {1043,9},
                   [{var,{1043,9},'Type'}],
                   [],
                   [{debug_line,1043,400},
                    {op,{1043,22},
                        '=:=',
                        {var,{1043,17},'Type'},
                        {call,
                            {1043,26},
                            {atom,{1043,26},lit_type},
                            [{var,{1043,35},'Val2'}]}}]}]}]}]}.
{function,
    {1046,1},
    lit_type,1,
    [{clause,
         {1046,1},
         [{var,{1046,1},'_'}],
         [[{call,
               {1046,1},
               {remote,
                   {1046,1},
                   {atom,{1046,1},fake},
                   {atom,{1046,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1046,401},{atom,{1046,1},ignore}]},
     {clause,
         {1046,1},
         [{var,{1046,10},'Val'}],
         [],
         [{debug_line,1047,402},
          {'if',
              {1047,5},
              [{clause,
                   {1048,9},
                   [],
                   [[{call,
                         {1048,9},
                         {remote,
                             {1048,9},
                             {atom,{1048,9},erlang},
                             {atom,{1048,9},is_atom}},
                         [{var,{1048,17},'Val'}]}]],
                   [{debug_line,1048,403},{atom,{1048,25},atom}]},
               {clause,
                   {1049,9},
                   [],
                   [[{call,
                         {1049,9},
                         {remote,
                             {1049,9},
                             {atom,{1049,9},erlang},
                             {atom,{1049,9},is_float}},
                         [{var,{1049,18},'Val'}]}]],
                   [{debug_line,1049,404},{atom,{1049,26},float}]},
               {clause,
                   {1050,9},
                   [],
                   [[{call,
                         {1050,9},
                         {remote,
                             {1050,9},
                             {atom,{1050,9},erlang},
                             {atom,{1050,9},is_integer}},
                         [{var,{1050,20},'Val'}]}]],
                   [{debug_line,1050,405},{atom,{1050,28},integer}]},
               {clause,
                   {1051,9},
                   [],
                   [[{atom,{1051,9},true}]],
                   [{debug_line,1051,406},{atom,{1051,17},none}]}]}]}]}.
{function,
    {1121,1},
    opt_redundant_tests,1,
    [{clause,
         {1121,1},
         [{var,{1121,1},'_'}],
         [[{call,
               {1121,1},
               {remote,
                   {1121,1},
                   {atom,{1121,1},fake},
                   {atom,{1121,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1121,407},{atom,{1121,1},ignore}]},
     {clause,
         {1121,1},
         [{var,{1121,21},'Blocks'}],
         [],
         [{debug_line,1122,408},
          {match,
              {1122,5},
              {var,{1122,5},'All'},
              {map,
                  {1122,11},
                  [{map_field_assoc,
                       {1122,15},
                       {integer,{1122,13},0},
                       {map,{1122,18},[]}},
                   {map_field_assoc,
                       {1122,40},
                       {integer,{1122,24},1},
                       {map,{1122,43},[]}}]}},
          {debug_line,1123,409},
          {match,
              {1123,5},
              {var,{1123,5},'RPO'},
              {call,
                  {1123,11},
                  {remote,
                      {1123,19},
                      {atom,{1123,11},beam_ssa},
                      {atom,{1123,20},rpo}},
                  [{var,{1123,24},'Blocks'}]}},
          {debug_line,1124,410},
          {match,
              {1124,5},
              {var,{1124,5},'Linear'},
              {call,
                  {1124,14},
                  {atom,{1124,14},opt_redundant_tests},
                  [{var,{1124,34},'RPO'},
                   {var,{1124,39},'Blocks'},
                   {var,{1124,47},'All'}]}},
          {debug_line,1125,411},
          {call,
              {1125,5},
              {remote,
                  {1125,13},
                  {atom,{1125,5},beam_ssa},
                  {atom,{1125,14},trim_unreachable}},
              [{var,{1125,31},'Linear'}]}]}]}.
{function,
 {1127,1},
 opt_redundant_tests,3,
 [{clause,
   {1127,1},
   [{var,{1127,1},'_'},{var,{1127,1},'_'},{var,{1127,1},'_'}],
   [[{call,
      {1127,1},
      {remote,{1127,1},{atom,{1127,1},fake},{atom,{1127,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1127,412},{atom,{1127,1},ignore}]},
  {clause,
   {1127,1},
   [{cons,{1127,21},{var,{1127,22},'L'},{var,{1127,24},'Ls'}},
    {var,{1127,29},'Blocks'},
    {var,{1127,37},'All0'}],
   [],
   [{debug_line,1128,413},
    {'case',
     {1128,5},
     {var,{1128,10},'All0'},
     [{clause,
       {1129,9},
       [{map,
         {1129,9},
         [{map_field_exact,
           {1129,13},
           {var,{1129,11},'L'},
           {var,{1129,16},'Tests'}}]}],
       [],
       [{debug_line,1130,414},
        {match,
         {1130,13},
         {var,{1130,13},'Blk0'},
         {call,
          {1130,20},
          {remote,{1130,20},{atom,{1130,20},erlang},{atom,{1130,20},map_get}},
          [{var,{1130,28},'L'},{var,{1130,31},'Blocks'}]}},
        {debug_line,1131,415},
        {match,
         {1131,13},
         {var,{1131,13},'Tests'},
         {call,
          {1131,21},
          {remote,{1131,21},{atom,{1131,21},erlang},{atom,{1131,21},map_get}},
          [{var,{1131,29},'L'},{var,{1131,32},'All0'}]}},
        {debug_line,1132,416},
        {match,
         {1132,13},
         {var,{1132,13},'Blk1'},
         {call,
          {1132,20},
          {atom,{1132,20},opt_switch},
          [{var,{1132,31},'Blk0'},{var,{1132,37},'Tests'}]}},
        {debug_line,1133,417},
        {match,
         {1133,13},
         {tuple,
          {1133,13},
          [{atom,{1133,13},b_blk},
           {var,{1133,13},'_'},
           {var,{1133,23},'Is0'},
           {var,{1133,13},'_'}]},
         {var,{1133,30},'Blk1'}},
        {debug_line,1134,418},
        {'case',
         {1134,13},
         {call,
          {1134,18},
          {atom,{1134,18},opt_redundant_tests_is},
          [{var,{1134,41},'Is0'},{var,{1134,46},'Tests'},{nil,{1134,53}}]},
         [{clause,
           {1135,17},
           [{atom,{1135,17},none}],
           [],
           [{debug_line,1136,419},
            {match,
             {1136,21},
             {var,{1136,21},'All'},
             {call,
              {1136,27},
              {atom,{1136,27},update_successors},
              [{var,{1136,45},'Blk1'},
               {var,{1136,51},'Tests'},
               {var,{1136,58},'All0'}]}},
            {debug_line,1137,420},
            {cons,
             {1137,21},
             {tuple,{1137,22},[{var,{1137,23},'L'},{var,{1137,25},'Blk1'}]},
             {call,
              {1137,31},
              {atom,{1137,31},opt_redundant_tests},
              [{var,{1137,51},'Ls'},
               {var,{1137,55},'Blocks'},
               {var,{1137,63},'All'}]}}]},
          {clause,
           {1138,17},
           [{tuple,
             {1138,17},
             [{atom,{1138,18},new_test},
              {var,{1138,27},'Bool'},
              {var,{1138,32},'Test'},
              {var,{1138,37},'MustInvert'}]}],
           [],
           [{debug_line,1139,421},
            {match,
             {1139,21},
             {var,{1139,21},'All'},
             {call,
              {1139,27},
              {atom,{1139,27},update_successors},
              [{var,{1139,45},'Blk1'},
               {var,{1139,51},'Bool'},
               {var,{1139,57},'Test'},
               {var,{1139,63},'MustInvert'},
               {var,{1140,45},'Tests'},
               {var,{1140,52},'All0'}]}},
            {debug_line,1141,422},
            {cons,
             {1141,21},
             {tuple,{1141,22},[{var,{1141,23},'L'},{var,{1141,25},'Blk1'}]},
             {call,
              {1141,31},
              {atom,{1141,31},opt_redundant_tests},
              [{var,{1141,51},'Ls'},
               {var,{1141,55},'Blocks'},
               {var,{1141,63},'All'}]}}]},
          {clause,
           {1142,17},
           [{tuple,
             {1142,17},
             [{atom,{1142,18},old_test},
              {var,{1142,27},'Is'},
              {var,{1142,30},'BoolVar'},
              {var,{1142,38},'BoolValue'}]}],
           [],
           [{debug_line,1143,423},
            {match,
             {1143,21},
             {var,{1143,21},'Blk'},
             {'case',
              {1143,27},
              {var,{1143,32},'Blk1'},
              [{clause,
                {1144,31},
                [{tuple,
                  {1144,31},
                  [{atom,{1144,31},b_blk},
                   {var,{1144,31},'_'},
                   {var,{1144,31},'_'},
                   {match,
                    {1144,43},
                    {tuple,
                     {1144,43},
                     [{atom,{1144,43},b_br},
                      {var,{1144,43},'_'},
                      {var,{1144,54},'BoolVar'},
                      {var,{1144,43},'_'},
                      {var,{1144,43},'_'}]},
                    {var,{1144,63},'Br0'}}]}],
                [],
                [{debug_line,1145,424},
                 {match,
                  {1145,35},
                  {var,{1145,35},'Br'},
                  {call,
                   {1145,40},
                   {remote,
                    {1145,48},
                    {atom,{1145,40},beam_ssa},
                    {atom,{1145,49},normalize}},
                   [{block,0,
                     [{block,
                       {1145,59},
                       [{match,
                         {1145,59},
                         {var,{1145,59},rec20},
                         {var,{1145,59},'Br0'}},
                        {'case',
                         {1145,68},
                         {var,{1145,59},rec20},
                         [{clause,
                           {1145,68},
                           [{tuple,
                             {1145,68},
                             [{atom,{1145,68},b_br},
                              {var,{1145,68},'_'},
                              {var,{1145,68},'_'},
                              {var,{1145,68},'_'},
                              {var,{1145,68},'_'}]}],
                           [],
                           [{call,
                             {1145,68},
                             {remote,
                              {1145,68},
                              {atom,{1145,68},erlang},
                              {atom,{1145,68},setelement}},
                             [{integer,{1145,68},3},
                              {var,{1145,59},rec20},
                              {var,{1145,73},'BoolValue'}]}]},
                          {clause,
                           [{generated,true},{location,{1145,68}}],
                           [{var,[{generated,true},{location,{1145,68}}],'_'}],
                           [],
                           [{call,
                             [{generated,true},{location,{1145,68}}],
                             {remote,
                              [{generated,true},{location,{1145,68}}],
                              {atom,
                               [{generated,true},{location,{1145,68}}],
                               erlang},
                              {atom,
                               [{generated,true},{location,{1145,68}}],
                               error}},
                             [{tuple,
                               [{generated,true},{location,{1145,68}}],
                               [{atom,
                                 [{generated,true},{location,{1145,68}}],
                                 badrecord},
                                {var,{1145,59},rec20}]}]}]}]}]}]}]}},
                 {debug_line,1146,425},
                 {block,
                  {1146,35},
                  [{match,
                    {1146,35},
                    {var,{1146,35},rec21},
                    {var,{1146,35},'Blk1'}},
                   {'case',
                    {1146,46},
                    {var,{1146,35},rec21},
                    [{clause,
                      {1146,46},
                      [{tuple,
                        {1146,46},
                        [{atom,{1146,46},b_blk},
                         {var,{1146,46},'_'},
                         {var,{1146,46},'_'},
                         {var,{1146,46},'_'}]}],
                      [],
                      [{call,
                        {1146,46},
                        {remote,
                         {1146,46},
                         {atom,{1146,46},erlang},
                         {atom,{1146,46},setelement}},
                        [{integer,{1146,46},3},
                         {call,
                          {1146,52},
                          {remote,
                           {1146,52},
                           {atom,{1146,52},erlang},
                           {atom,{1146,52},setelement}},
                          [{integer,{1146,52},4},
                           {var,{1146,35},rec21},
                           {var,{1146,57},'Br'}]},
                         {var,{1146,49},'Is'}]}]},
                     {clause,
                      [{generated,true},{location,{1146,46}}],
                      [{var,[{generated,true},{location,{1146,46}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{1146,46}}],
                        {remote,
                         [{generated,true},{location,{1146,46}}],
                         {atom,[{generated,true},{location,{1146,46}}],erlang},
                         {atom,[{generated,true},{location,{1146,46}}],error}},
                        [{tuple,
                          [{generated,true},{location,{1146,46}}],
                          [{atom,
                            [{generated,true},{location,{1146,46}}],
                            badrecord},
                           {var,{1146,35},rec21}]}]}]}]}]}]},
               {clause,
                {1147,31},
                [{match,
                  {1147,31},
                  {tuple,
                   {1147,31},
                   [{atom,{1147,31},b_blk},
                    {var,{1147,31},'_'},
                    {var,{1147,31},'_'},
                    {var,{1147,31},'_'}]},
                  {var,{1147,40},'Blk2'}}],
                [],
                [{debug_line,1148,426},
                 {block,
                  {1148,35},
                  [{match,
                    {1148,35},
                    {var,{1148,35},rec22},
                    {var,{1148,35},'Blk2'}},
                   {'case',
                    {1148,46},
                    {var,{1148,35},rec22},
                    [{clause,
                      {1148,46},
                      [{tuple,
                        {1148,46},
                        [{atom,{1148,46},b_blk},
                         {var,{1148,46},'_'},
                         {var,{1148,46},'_'},
                         {var,{1148,46},'_'}]}],
                      [],
                      [{call,
                        {1148,46},
                        {remote,
                         {1148,46},
                         {atom,{1148,46},erlang},
                         {atom,{1148,46},setelement}},
                        [{integer,{1148,46},3},
                         {var,{1148,35},rec22},
                         {var,{1148,49},'Is'}]}]},
                     {clause,
                      [{generated,true},{location,{1148,46}}],
                      [{var,[{generated,true},{location,{1148,46}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{1148,46}}],
                        {remote,
                         [{generated,true},{location,{1148,46}}],
                         {atom,[{generated,true},{location,{1148,46}}],erlang},
                         {atom,[{generated,true},{location,{1148,46}}],error}},
                        [{tuple,
                          [{generated,true},{location,{1148,46}}],
                          [{atom,
                            [{generated,true},{location,{1148,46}}],
                            badrecord},
                           {var,{1148,35},rec22}]}]}]}]}]}]}]}},
            {debug_line,1150,427},
            {match,
             {1150,21},
             {var,{1150,21},'All'},
             {call,
              {1150,27},
              {atom,{1150,27},update_successors},
              [{var,{1150,45},'Blk'},
               {var,{1150,50},'Tests'},
               {var,{1150,57},'All0'}]}},
            {debug_line,1151,428},
            {cons,
             {1151,21},
             {tuple,{1151,22},[{var,{1151,23},'L'},{var,{1151,25},'Blk'}]},
             {call,
              {1151,30},
              {atom,{1151,30},opt_redundant_tests},
              [{var,{1151,50},'Ls'},
               {var,{1151,54},'Blocks'},
               {var,{1151,62},'All'}]}}]}]}]},
      {clause,
       {1153,9},
       [{map,{1153,9},[]}],
       [],
       [{debug_line,1154,429},
        {call,
         {1154,13},
         {atom,{1154,13},opt_redundant_tests},
         [{var,{1154,33},'Ls'},
          {var,{1154,37},'Blocks'},
          {var,{1154,45},'All0'}]}]}]}]},
  {clause,
   {1156,1},
   [{nil,{1156,21}},{var,{1156,25},'_Blocks'},{var,{1156,34},'_All'}],
   [],
   [{debug_line,1156,430},{nil,{1156,43}}]}]}.
{function,
 {1158,1},
 opt_switch,2,
 [{clause,
   {1158,1},
   [{var,{1158,1},'_'},{var,{1158,1},'_'}],
   [[{call,
      {1158,1},
      {remote,{1158,1},{atom,{1158,1},fake},{atom,{1158,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1158,431},{atom,{1158,1},ignore}]},
  {clause,
   {1158,1},
   [{match,
     {1158,12},
     {tuple,
      {1158,12},
      [{atom,{1158,12},b_blk},
       {var,{1158,12},'_'},
       {var,{1158,12},'_'},
       {match,
        {1158,24},
        {tuple,
         {1158,24},
         [{atom,{1158,24},b_switch},
          {var,{1158,24},'_'},
          {var,{1158,38},'Arg'},
          {var,{1158,24},'_'},
          {var,{1158,47},'List0'}]},
        {var,{1158,54},'Sw'}}]},
     {var,{1158,58},'Blk'}},
    {var,{1158,63},'Tests'}],
   [[{op,
      {1159,24},
      '=/=',
      {call,
       {1159,8},
       {remote,{1159,8},{atom,{1159,8},erlang},{atom,{1159,8},map_size}},
       [{var,{1159,17},'Tests'}]},
      {integer,{1159,28},0}}]],
   [{debug_line,1160,432},
    {match,
     {1160,5},
     {var,{1160,5},'List'},
     {call,
      {1160,12},
      {atom,{1160,12},opt_switch_1},
      [{var,{1160,25},'List0'},
       {var,{1160,32},'Arg'},
       {var,{1160,37},'Tests'}]}},
    {debug_line,1161,433},
    {block,
     {1161,5},
     [{match,
       {1161,15},
       {var,{1161,15},rec23},
       {block,
        {1161,20},
        [{match,{1161,20},{var,{1161,20},rec25},{var,{1161,20},'Sw'}},
         {'case',
          {1161,32},
          {var,{1161,20},rec25},
          [{clause,
            {1161,32},
            [{tuple,
              {1161,32},
              [{atom,{1161,32},b_switch},
               {var,{1161,32},'_'},
               {var,{1161,32},'_'},
               {var,{1161,32},'_'},
               {var,{1161,32},'_'}]}],
            [],
            [{call,
              {1161,32},
              {remote,
               {1161,32},
               {atom,{1161,32},erlang},
               {atom,{1161,32},setelement}},
              [{integer,{1161,32},5},
               {var,{1161,20},rec25},
               {var,{1161,37},'List'}]}]},
           {clause,
            [{generated,true},{location,{1161,32}}],
            [{var,[{generated,true},{location,{1161,32}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{1161,32}}],
              {remote,
               [{generated,true},{location,{1161,32}}],
               {atom,[{generated,true},{location,{1161,32}}],erlang},
               {atom,[{generated,true},{location,{1161,32}}],error}},
              [{tuple,
                [{generated,true},{location,{1161,32}}],
                [{atom,[{generated,true},{location,{1161,32}}],badrecord},
                 {var,{1161,20},rec25}]}]}]}]}]}},
      {match,{1161,5},{var,{1161,5},rec24},{var,{1161,5},'Blk'}},
      {'case',
       {1161,15},
       {var,{1161,5},rec24},
       [{clause,
         {1161,15},
         [{tuple,
           {1161,15},
           [{atom,{1161,15},b_blk},
            {var,{1161,15},'_'},
            {var,{1161,15},'_'},
            {var,{1161,15},'_'}]}],
         [],
         [{call,
           {1161,15},
           {remote,
            {1161,15},
            {atom,{1161,15},erlang},
            {atom,{1161,15},setelement}},
           [{integer,{1161,15},4},
            {var,{1161,5},rec24},
            {var,{1161,15},rec23}]}]},
        {clause,
         [{generated,true},{location,{1161,15}}],
         [{var,[{generated,true},{location,{1161,15}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1161,15}}],
           {remote,
            [{generated,true},{location,{1161,15}}],
            {atom,[{generated,true},{location,{1161,15}}],erlang},
            {atom,[{generated,true},{location,{1161,15}}],error}},
           [{tuple,
             [{generated,true},{location,{1161,15}}],
             [{atom,[{generated,true},{location,{1161,15}}],badrecord},
              {var,{1161,5},rec24}]}]}]}]}]}]},
  {clause,
   {1162,1},
   [{var,{1162,12},'Blk'},{var,{1162,17},'_Tests'}],
   [],
   [{debug_line,1162,434},{var,{1162,28},'Blk'}]}]}.
{function,
    {1164,1},
    opt_switch_1,3,
    [{clause,
         {1164,1},
         [{var,{1164,1},'_'},{var,{1164,1},'_'},{var,{1164,1},'_'}],
         [[{call,
               {1164,1},
               {remote,
                   {1164,1},
                   {atom,{1164,1},fake},
                   {atom,{1164,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1164,435},{atom,{1164,1},ignore}]},
     {clause,
         {1164,1},
         [{cons,
              {1164,14},
              {match,
                  {1164,15},
                  {tuple,
                      {1164,15},
                      [{var,{1164,16},'Lit'},{var,{1164,20},'_'}]},
                  {var,{1164,23},'H'}},
              {var,{1164,25},'T'}},
          {var,{1164,29},'Arg'},
          {var,{1164,34},'Tests'}],
         [],
         [{debug_line,1165,436},
          {'case',
              {1165,5},
              {var,{1165,10},'Tests'},
              [{clause,
                   {1166,9},
                   [{map,
                        {1166,9},
                        [{map_field_exact,
                             {1166,27},
                             {tuple,
                                 {1166,11},
                                 [{atom,{1166,12},'=:='},
                                  {var,{1166,18},'Arg'},
                                  {var,{1166,22},'Lit'}]},
                             {atom,{1166,30},false}}]}],
                   [],
                   [{debug_line,1167,437},
                    {call,
                        {1167,13},
                        {atom,{1167,13},opt_switch_1},
                        [{var,{1167,26},'T'},
                         {var,{1167,29},'Arg'},
                         {var,{1167,34},'Tests'}]}]},
               {clause,
                   {1168,9},
                   [{map,{1168,9},[]}],
                   [],
                   [{debug_line,1169,438},
                    {cons,
                        {1169,13},
                        {var,{1169,14},'H'},
                        {call,
                            {1169,16},
                            {atom,{1169,16},opt_switch_1},
                            [{var,{1169,29},'T'},
                             {var,{1169,32},'Arg'},
                             {var,{1169,37},'Tests'}]}}]}]}]},
     {clause,
         {1171,1},
         [{nil,{1171,14}},{var,{1171,18},'_'},{var,{1171,21},'_'}],
         [],
         [{debug_line,1171,439},{nil,{1171,27}}]}]}.
{function,
 {1173,1},
 opt_redundant_tests_is,3,
 [{clause,
   {1173,1},
   [{var,{1173,1},'_'},{var,{1173,1},'_'},{var,{1173,1},'_'}],
   [[{call,
      {1173,1},
      {remote,{1173,1},{atom,{1173,1},fake},{atom,{1173,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1173,440},{atom,{1173,1},ignore}]},
  {clause,
   {1173,1},
   [{cons,
     {1173,24},
     {match,
      {1173,25},
      {tuple,
       {1173,25},
       [{atom,{1173,25},b_set},
        {var,{1173,25},'_'},
        {var,{1173,52},'Bool'},
        {var,{1173,35},'Op'},
        {var,{1173,43},'Args'}]},
      {var,{1173,58},'I0'}},
     {nil,{1173,60}}},
    {var,{1173,63},'Tests'},
    {var,{1173,70},'Acc'}],
   [],
   [{debug_line,1174,441},
    {'case',
     {1174,5},
     {call,
      {1174,10},
      {atom,{1174,10},canonical_test},
      [{var,{1174,25},'Op'},{var,{1174,29},'Args'}]},
     [{clause,
       {1175,9},
       [{atom,{1175,9},none}],
       [],
       [{debug_line,1176,442},{atom,{1176,13},none}]},
      {clause,
       {1177,9},
       [{tuple,
         {1177,9},
         [{var,{1177,10},'Test'},{var,{1177,15},'MustInvert'}]}],
       [],
       [{debug_line,1178,443},
        {'case',
         {1178,13},
         {call,
          {1178,18},
          {atom,{1178,18},old_result},
          [{var,{1178,29},'Test'},{var,{1178,35},'Tests'}]},
         [{clause,
           {1179,17},
           [{var,{1179,17},'Result0'}],
           [[{call,
              {1179,30},
              {remote,
               {1179,30},
               {atom,{1179,30},erlang},
               {atom,{1179,30},is_boolean}},
              [{var,{1179,41},'Result0'}]}]],
           [{debug_line,1180,444},
            {'case',
             {1180,21},
             {call,
              {1180,26},
              {atom,{1180,26},gains_type_information},
              [{var,{1180,49},'I0'}]},
             [{clause,
               {1181,25},
               [{atom,{1181,25},false}],
               [],
               [{debug_line,1182,445},
                {match,
                 {1182,29},
                 {var,{1182,29},'Result'},
                 {tuple,
                  {1182,38},
                  [{atom,{1182,38},b_literal},
                   {op,
                    {1182,61},
                    'xor',
                    {var,{1182,53},'Result0'},
                    {var,{1182,65},'MustInvert'}}]}},
                {debug_line,1183,446},
                {match,
                 {1183,29},
                 {var,{1183,29},'I'},
                 {block,
                  {1183,33},
                  [{match,
                    {1183,57},
                    {var,{1183,57},rec26},
                    {cons,
                     {1183,62},
                     {var,{1183,63},'Result'},
                     {cons,
                      {1183,70},
                      {tuple,
                       {1183,70},
                       [{atom,{1183,70},b_literal},{atom,{1183,85},true}]},
                      {nil,{1183,90}}}}},
                   {match,
                    {1183,33},
                    {var,{1183,33},rec27},
                    {var,{1183,33},'I0'}},
                   {'case',
                    {1183,42},
                    {var,{1183,33},rec27},
                    [{clause,
                      {1183,42},
                      [{tuple,
                        {1183,42},
                        [{atom,{1183,42},b_set},
                         {var,{1183,42},'_'},
                         {var,{1183,42},'_'},
                         {var,{1183,42},'_'},
                         {var,{1183,42},'_'}]}],
                      [],
                      [{call,
                        {1183,42},
                        {remote,
                         {1183,42},
                         {atom,{1183,42},erlang},
                         {atom,{1183,42},setelement}},
                        [{integer,{1183,42},4},
                         {call,
                          {1183,57},
                          {remote,
                           {1183,57},
                           {atom,{1183,57},erlang},
                           {atom,{1183,57},setelement}},
                          [{integer,{1183,57},5},
                           {var,{1183,33},rec27},
                           {var,{1183,57},rec26}]},
                         {tuple,
                          {1183,45},
                          [{atom,{1183,46},bif},{atom,{1183,50},'=:='}]}]}]},
                     {clause,
                      [{generated,true},{location,{1183,42}}],
                      [{var,[{generated,true},{location,{1183,42}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{1183,42}}],
                        {remote,
                         [{generated,true},{location,{1183,42}}],
                         {atom,[{generated,true},{location,{1183,42}}],erlang},
                         {atom,[{generated,true},{location,{1183,42}}],error}},
                        [{tuple,
                          [{generated,true},{location,{1183,42}}],
                          [{atom,
                            [{generated,true},{location,{1183,42}}],
                            badrecord},
                           {var,{1183,33},rec27}]}]}]}]}]}},
                {debug_line,1184,447},
                {tuple,
                 {1184,29},
                 [{atom,{1184,30},old_test},
                  {call,
                   {1184,39},
                   {remote,
                    {1184,39},
                    {atom,{1184,39},lists},
                    {atom,{1184,39},reverse}},
                   [{var,{1184,47},'Acc'},
                    {block,0,
                     [{cons,{1184,52},{var,{1184,53},'I'},{nil,{1184,54}}}]}]},
                  {var,{1184,57},'Bool'},
                  {var,{1184,62},'Result'}]}]},
              {clause,
               {1185,25},
               [{atom,{1185,25},true}],
               [],
               [{debug_line,1191,448},{atom,{1191,29},none}]}]}]},
          {clause,
           {1193,17},
           [{atom,{1193,17},none}],
           [],
           [{debug_line,1194,449},
            {tuple,
             {1194,21},
             [{atom,{1194,22},new_test},
              {var,{1194,31},'Bool'},
              {var,{1194,36},'Test'},
              {var,{1194,41},'MustInvert'}]}]}]}]}]}]},
  {clause,
   {1197,1},
   [{cons,{1197,24},{var,{1197,25},'I'},{var,{1197,27},'Is'}},
    {var,{1197,32},'Tests'},
    {var,{1197,39},'Acc'}],
   [],
   [{debug_line,1198,450},
    {call,
     {1198,5},
     {atom,{1198,5},opt_redundant_tests_is},
     [{var,{1198,28},'Is'},
      {var,{1198,32},'Tests'},
      {block,0,
       [{cons,{1198,39},{var,{1198,40},'I'},{var,{1198,42},'Acc'}}]}]}]},
  {clause,
   {1199,1},
   [{nil,{1199,24}},{var,{1199,28},'_Tests'},{var,{1199,36},'_Acc'}],
   [],
   [{debug_line,1199,451},{atom,{1199,45},none}]}]}.
{function,
    {1203,1},
    gains_type_information,1,
    [{clause,
         {1203,1},
         [{var,{1203,1},'_'}],
         [[{call,
               {1203,1},
               {remote,
                   {1203,1},
                   {atom,{1203,1},fake},
                   {atom,{1203,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1203,452},{atom,{1203,1},ignore}]},
     {clause,
         {1203,1},
         [{tuple,
              {1203,24},
              [{atom,{1203,24},b_set},
               {var,{1203,36},'Anno'},
               {var,{1203,24},'_'},
               {tuple,{1203,44},[{atom,{1203,45},bif},{atom,{1203,49},'=:='}]},
               {var,{1203,61},'Args'}]}],
         [],
         [{debug_line,1204,453},
          {match,
              {1204,5},
              {var,{1204,5},'Types0'},
              {call,
                  {1204,14},
                  {remote,
                      {1204,18},
                      {atom,{1204,14},maps},
                      {atom,{1204,19},get}},
                  [{atom,{1204,23},arg_types},
                   {var,{1204,34},'Anno'},
                   {block,0,[{map,{1204,40},[]}]}]}},
          {debug_line,1205,454},
          {match,
              {1205,5},
              {var,{1205,5},'Types'},
              {call,
                  {1205,13},
                  {atom,{1205,13},complete_type_information},
                  [{var,{1205,39},'Args'},
                   {integer,{1205,45},0},
                   {var,{1205,48},'Types0'}]}},
          {debug_line,1206,455},
          {'case',
              {1206,5},
              {call,
                  {1206,10},
                  {remote,
                      {1206,10},
                      {atom,{1206,10},erlang},
                      {atom,{1206,10},map_size}},
                  [{var,{1206,19},'Types'}]},
              [{clause,
                   {1207,9},
                   [{integer,{1207,9},0}],
                   [],
                   [{debug_line,1208,456},{atom,{1208,13},false}]},
               {clause,
                   {1209,9},
                   [{integer,{1209,9},1}],
                   [],
                   [{debug_line,1210,457},{atom,{1210,13},true}]},
               {clause,
                   {1211,9},
                   [{integer,{1211,9},2}],
                   [],
                   [{debug_line,1212,458},
                    {'case',
                        {1212,13},
                        {var,{1212,18},'Types'},
                        [{clause,
                             {1213,17},
                             [{map,
                                  {1213,17},
                                  [{map_field_exact,
                                       {1213,21},
                                       {integer,{1213,19},0},
                                       {var,{1213,24},'Same'}},
                                   {map_field_exact,
                                       {1213,31},
                                       {integer,{1213,29},1},
                                       {var,{1213,34},'Same'}}]}],
                             [],
                             [{debug_line,1214,459},{atom,{1214,21},false}]},
                         {clause,
                             {1215,17},
                             [{map,{1215,17},[]}],
                             [],
                             [{debug_line,1216,460},
                              {atom,{1216,21},true}]}]}]}]}]},
     {clause,
         {1219,1},
         [{tuple,
              {1219,24},
              [{atom,{1219,24},b_set},
               {var,{1219,24},'_'},
               {var,{1219,24},'_'},
               {var,{1219,24},'_'},
               {var,{1219,24},'_'}]}],
         [],
         [{debug_line,1219,461},{atom,{1219,37},false}]}]}.
{function,
    {1221,1},
    complete_type_information,3,
    [{clause,
         {1221,1},
         [{var,{1221,1},'_'},{var,{1221,1},'_'},{var,{1221,1},'_'}],
         [[{call,
               {1221,1},
               {remote,
                   {1221,1},
                   {atom,{1221,1},fake},
                   {atom,{1221,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1221,462},{atom,{1221,1},ignore}]},
     {clause,
         {1221,1},
         [{cons,
              {1221,27},
              {tuple,
                  {1221,28},
                  [{atom,{1221,28},b_literal},{var,{1221,43},'Value'}]},
              {var,{1221,50},'As'}},
          {var,{1221,55},'N'},
          {var,{1221,58},'Types'}],
         [],
         [{debug_line,1222,463},
          {match,
              {1222,5},
              {var,{1222,5},'Type'},
              {call,
                  {1222,12},
                  {remote,
                      {1222,22},
                      {atom,{1222,12},beam_types},
                      {atom,{1222,23},make_type_from_value}},
                  [{var,{1222,44},'Value'}]}},
          {debug_line,1223,464},
          {call,
              {1223,5},
              {atom,{1223,5},complete_type_information},
              [{var,{1223,31},'As'},
               {block,0,
                   [{op,{1223,36},
                        '+',
                        {var,{1223,35},'N'},
                        {integer,{1223,37},1}}]},
               {block,0,
                   [{map,
                        {1223,45},
                        {var,{1223,40},'Types'},
                        [{map_field_assoc,
                             {1223,49},
                             {var,{1223,47},'N'},
                             {var,{1223,52},'Type'}}]}]}]}]},
     {clause,
         {1224,1},
         [{cons,
              {1224,27},
              {tuple,{1224,28},[{atom,{1224,28},b_var},{var,{1224,28},'_'}]},
              {var,{1224,37},'As'}},
          {var,{1224,42},'N'},
          {var,{1224,45},'Types'}],
         [],
         [{debug_line,1225,465},
          {call,
              {1225,5},
              {atom,{1225,5},complete_type_information},
              [{var,{1225,31},'As'},
               {block,0,
                   [{op,{1225,36},
                        '+',
                        {var,{1225,35},'N'},
                        {integer,{1225,37},1}}]},
               {var,{1225,40},'Types'}]}]},
     {clause,
         {1226,1},
         [{nil,{1226,27}},{var,{1226,31},'_'},{var,{1226,34},'Types'}],
         [],
         [{debug_line,1226,466},{var,{1226,44},'Types'}]}]}.
{function,
    {1228,1},
    old_result,2,
    [{clause,
         {1228,1},
         [{var,{1228,1},'_'},{var,{1228,1},'_'}],
         [[{call,
               {1228,1},
               {remote,
                   {1228,1},
                   {atom,{1228,1},fake},
                   {atom,{1228,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1228,467},{atom,{1228,1},ignore}]},
     {clause,
         {1228,1},
         [{var,{1228,12},'Test'},{var,{1228,18},'Tests'}],
         [],
         [{debug_line,1229,468},
          {'case',
              {1229,5},
              {var,{1229,10},'Tests'},
              [{clause,
                   {1230,9},
                   [{map,
                        {1230,9},
                        [{map_field_exact,
                             {1230,16},
                             {var,{1230,11},'Test'},
                             {var,{1230,19},'Val'}}]}],
                   [],
                   [{debug_line,1230,469},{var,{1230,27},'Val'}]},
               {clause,
                   {1231,9},
                   [{map,{1231,9},[]}],
                   [],
                   [{debug_line,1231,470},
                    {call,
                        {1231,16},
                        {atom,{1231,16},old_result_1},
                        [{var,{1231,29},'Test'},
                         {var,{1231,35},'Tests'}]}]}]}]}]}.
{function,
    {1248,1},
    old_result_1,2,
    [{clause,
         {1248,1},
         [{var,{1248,1},'_'},{var,{1248,1},'_'}],
         [[{call,
               {1248,1},
               {remote,
                   {1248,1},
                   {atom,{1248,1},fake},
                   {atom,{1248,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1248,471},{atom,{1248,1},ignore}]},
     {clause,
         {1248,1},
         [{tuple,
              {1248,14},
              [{atom,{1248,15},'=='},{var,{1248,20},'A'},{var,{1248,22},'B'}]},
          {var,{1248,26},'Tests'}],
         [],
         [{debug_line,1249,472},
          {'case',
              {1249,5},
              {var,{1249,10},'Tests'},
              [{clause,
                   {1250,9},
                   [{map,
                        {1250,9},
                        [{map_field_exact,
                             {1250,21},
                             {tuple,
                                 {1250,11},
                                 [{atom,{1250,12},'<'},
                                  {var,{1250,16},'A'},
                                  {var,{1250,18},'B'}]},
                             {atom,{1250,24},false}},
                         {map_field_exact,
                             {1250,42},
                             {tuple,
                                 {1250,31},
                                 [{atom,{1250,32},'=<'},
                                  {var,{1250,37},'A'},
                                  {var,{1250,39},'B'}]},
                             {atom,{1250,45},true}}]}],
                   [],
                   [{debug_line,1252,473},{atom,{1252,13},true}]},
               {clause,
                   {1253,9},
                   [{map,{1253,9},[]}],
                   [],
                   [{debug_line,1254,474},{atom,{1254,13},none}]}]}]},
     {clause,
         {1256,1},
         [{tuple,
              {1256,14},
              [{atom,{1256,15},'=<'},{var,{1256,20},'A'},{var,{1256,22},'B'}]},
          {var,{1256,26},'Tests'}],
         [],
         [{debug_line,1257,475},
          {'case',
              {1257,5},
              {var,{1257,10},'Tests'},
              [{clause,
                   {1258,9},
                   [{map,
                        {1258,9},
                        [{map_field_exact,
                             {1258,21},
                             {tuple,
                                 {1258,11},
                                 [{atom,{1258,12},'<'},
                                  {var,{1258,16},'A'},
                                  {var,{1258,18},'B'}]},
                             {atom,{1258,24},false}},
                         {map_field_exact,
                             {1258,42},
                             {tuple,
                                 {1258,31},
                                 [{atom,{1258,32},'=='},
                                  {var,{1258,37},'A'},
                                  {var,{1258,39},'B'}]},
                             {atom,{1258,45},false}}]}],
                   [],
                   [{debug_line,1260,476},{atom,{1260,13},false}]},
               {clause,
                   {1261,9},
                   [{map,{1261,9},[]}],
                   [],
                   [{debug_line,1262,477},{atom,{1262,13},none}]}]}]},
     {clause,
         {1264,1},
         [{tuple,
              {1264,14},
              [{atom,{1264,15},'<'},{var,{1264,19},'A'},{var,{1264,21},'B'}]},
          {var,{1264,25},'Tests'}],
         [],
         [{debug_line,1265,478},
          {'case',
              {1265,5},
              {var,{1265,10},'Tests'},
              [{clause,
                   {1266,9},
                   [{map,
                        {1266,9},
                        [{map_field_exact,
                             {1266,22},
                             {tuple,
                                 {1266,11},
                                 [{atom,{1266,12},'=<'},
                                  {var,{1266,17},'A'},
                                  {var,{1266,19},'B'}]},
                             {atom,{1266,25},true}},
                         {map_field_exact,
                             {1266,42},
                             {tuple,
                                 {1266,31},
                                 [{atom,{1266,32},'=='},
                                  {var,{1266,37},'A'},
                                  {var,{1266,39},'B'}]},
                             {atom,{1266,45},false}}]}],
                   [],
                   [{debug_line,1268,479},{atom,{1268,13},true}]},
               {clause,
                   {1269,9},
                   [{map,{1269,9},[]}],
                   [],
                   [{debug_line,1270,480},{atom,{1270,13},none}]}]}]},
     {clause,
         {1272,1},
         [{tuple,
              {1272,14},
              [{atom,{1272,15},is_nonempty_list},{var,{1272,32},'A'}]},
          {var,{1272,36},'Tests'}],
         [],
         [{debug_line,1273,481},
          {'case',
              {1273,5},
              {var,{1273,10},'Tests'},
              [{clause,
                   {1274,9},
                   [{map,
                        {1274,9},
                        [{map_field_exact,
                             {1274,23},
                             {tuple,
                                 {1274,11},
                                 [{atom,{1274,12},is_list},
                                  {var,{1274,20},'A'}]},
                             {atom,{1274,26},false}}]}],
                   [],
                   [{debug_line,1274,482},{atom,{1274,36},false}]},
               {clause,
                   {1275,9},
                   [{map,{1275,9},[]}],
                   [],
                   [{debug_line,1275,483},{atom,{1275,16},none}]}]}]},
     {clause,
         {1277,1},
         [{var,{1277,14},'_'},{var,{1277,17},'_'}],
         [],
         [{debug_line,1277,484},{atom,{1277,23},none}]}]}.
{function,
    {1310,1},
    canonical_test,2,
    [{clause,
         {1310,1},
         [{var,{1310,1},'_'},{var,{1310,1},'_'}],
         [[{call,
               {1310,1},
               {remote,
                   {1310,1},
                   {atom,{1310,1},fake},
                   {atom,{1310,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1310,485},{atom,{1310,1},ignore}]},
     {clause,
         {1310,1},
         [{var,{1310,16},'Op'},{var,{1310,20},'Args'}],
         [],
         [{debug_line,1311,486},
          {'case',
              {1311,5},
              {call,
                  {1311,10},
                  {atom,{1311,10},normalize_test},
                  [{var,{1311,25},'Op'},{var,{1311,29},'Args'}]},
              [{clause,
                   {1312,9},
                   [{atom,{1312,9},none}],
                   [],
                   [{debug_line,1313,487},{atom,{1313,13},none}]},
               {clause,
                   {1314,9},
                   [{var,{1314,9},'Test'}],
                   [],
                   [{debug_line,1315,488},
                    {match,
                        {1315,13},
                        {var,{1315,13},'Inv'},
                        {'case',
                            {1315,19},
                            {var,{1315,24},'Test'},
                            [{clause,
                                 {1316,23},
                                 [{tuple,
                                      {1316,23},
                                      [{atom,{1316,24},'=/='},
                                       {var,{1316,30},'_'},
                                       {var,{1316,32},'_'}]}],
                                 [],
                                 [{debug_line,1316,489},
                                  {atom,{1316,38},true}]},
                             {clause,
                                 {1317,23},
                                 [{tuple,
                                      {1317,23},
                                      [{atom,{1317,24},'/='},
                                       {var,{1317,29},'_'},
                                       {var,{1317,31},'_'}]}],
                                 [],
                                 [{debug_line,1317,490},
                                  {atom,{1317,37},true}]},
                             {clause,
                                 {1318,23},
                                 [{tuple,
                                      {1318,23},
                                      [{atom,{1318,24},'>'},
                                       {var,{1318,28},'_'},
                                       {var,{1318,30},'_'}]}],
                                 [],
                                 [{debug_line,1318,491},
                                  {atom,{1318,36},true}]},
                             {clause,
                                 {1319,23},
                                 [{tuple,
                                      {1319,23},
                                      [{atom,{1319,24},'>='},
                                       {var,{1319,29},'_'},
                                       {var,{1319,31},'_'}]}],
                                 [],
                                 [{debug_line,1319,492},
                                  {atom,{1319,37},true}]},
                             {clause,
                                 {1320,23},
                                 [{var,{1320,23},'_'}],
                                 [],
                                 [{debug_line,1320,493},
                                  {atom,{1320,28},false}]}]}},
                    {debug_line,1322,494},
                    {'case',
                        {1322,13},
                        {var,{1322,18},'Inv'},
                        [{clause,
                             {1323,17},
                             [{atom,{1323,17},true}],
                             [],
                             [{debug_line,1323,495},
                              {tuple,
                                  {1323,25},
                                  [{call,
                                       {1323,26},
                                       {atom,{1323,26},invert_test},
                                       [{var,{1323,38},'Test'}]},
                                   {atom,{1323,44},true}]}]},
                         {clause,
                             {1324,17},
                             [{atom,{1324,17},false}],
                             [],
                             [{debug_line,1324,496},
                              {tuple,
                                  {1324,26},
                                  [{var,{1324,27},'Test'},
                                   {atom,{1324,32},false}]}]}]}]}]}]}]}.
{function,
    {1328,1},
    update_successors,6,
    [{clause,
         {1328,1},
         [{var,{1328,1},'_'},
          {var,{1328,1},'_'},
          {var,{1328,1},'_'},
          {var,{1328,1},'_'},
          {var,{1328,1},'_'},
          {var,{1328,1},'_'}],
         [[{call,
               {1328,1},
               {remote,
                   {1328,1},
                   {atom,{1328,1},fake},
                   {atom,{1328,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1328,497},{atom,{1328,1},ignore}]},
     {clause,
         {1328,1},
         [{tuple,
              {1328,19},
              [{atom,{1328,19},b_blk},
               {var,{1328,19},'_'},
               {var,{1328,19},'_'},
               {tuple,
                   {1328,31},
                   [{atom,{1328,31},b_br},
                    {var,{1328,31},'_'},
                    {var,{1328,42},'Bool'},
                    {var,{1328,52},'Succ'},
                    {var,{1328,62},'Fail'}]}]},
          {var,{1329,19},'Bool'},
          {var,{1329,25},'Test'},
          {var,{1329,31},'MustInvert'},
          {var,{1329,43},'Tests'},
          {var,{1329,50},'All0'}],
         [],
         [{debug_line,1330,498},
          {match,
              {1330,5},
              {var,{1330,5},'All1'},
              {call,
                  {1330,12},
                  {atom,{1330,12},update_successor},
                  [{var,{1330,29},'Succ'},
                   {block,0,
                       [{map,
                            {1330,40},
                            {var,{1330,35},'Tests'},
                            [{map_field_assoc,
                                 {1330,47},
                                 {var,{1330,42},'Test'},
                                 {op,{1330,50},
                                     'not',
                                     {var,{1330,54},'MustInvert'}}}]}]},
                   {var,{1330,67},'All0'}]}},
          {debug_line,1331,499},
          {call,
              {1331,5},
              {atom,{1331,5},update_successor},
              [{var,{1331,22},'Fail'},
               {block,0,
                   [{map,
                        {1331,33},
                        {var,{1331,28},'Tests'},
                        [{map_field_assoc,
                             {1331,40},
                             {var,{1331,35},'Test'},
                             {var,{1331,43},'MustInvert'}}]}]},
               {var,{1331,56},'All1'}]}]},
     {clause,
         {1332,1},
         [{var,{1332,19},'Blk'},
          {var,{1332,24},'_'},
          {var,{1332,27},'_'},
          {var,{1332,30},'_'},
          {var,{1332,33},'TestsA'},
          {var,{1332,41},'All'}],
         [],
         [{debug_line,1333,500},
          {call,
              {1333,5},
              {atom,{1333,5},update_successors},
              [{var,{1333,23},'Blk'},
               {var,{1333,28},'TestsA'},
               {var,{1333,36},'All'}]}]}]}.
{function,
    {1335,1},
    update_successors,3,
    [{clause,
         {1335,1},
         [{var,{1335,1},'_'},{var,{1335,1},'_'},{var,{1335,1},'_'}],
         [[{call,
               {1335,1},
               {remote,
                   {1335,1},
                   {atom,{1335,1},fake},
                   {atom,{1335,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1335,501},{atom,{1335,1},ignore}]},
     {clause,
         {1335,1},
         [{tuple,
              {1335,19},
              [{atom,{1335,19},b_blk},
               {var,{1335,19},'_'},
               {var,{1335,19},'_'},
               {tuple,
                   {1335,31},
                   [{atom,{1335,31},b_ret},
                    {var,{1335,31},'_'},
                    {var,{1335,31},'_'}]}]},
          {var,{1335,42},'_Tests'},
          {var,{1335,50},'All'}],
         [],
         [{debug_line,1336,502},{var,{1336,5},'All'}]},
     {clause,
         {1337,1},
         [{tuple,
              {1337,19},
              [{atom,{1337,19},b_blk},
               {var,{1337,19},'_'},
               {var,{1337,19},'_'},
               {tuple,
                   {1337,31},
                   [{atom,{1337,31},b_switch},
                    {var,{1337,31},'_'},
                    {var,{1337,45},'Arg'},
                    {var,{1337,54},'Fail'},
                    {var,{1337,64},'List'}]}]},
          {var,{1338,19},'Tests'},
          {var,{1338,26},'All0'}],
         [],
         [{debug_line,1339,503},
          {match,
              {1339,5},
              {var,{1339,5},'All1'},
              {call,
                  {1339,12},
                  {atom,{1339,12},update_successors_sw_fail},
                  [{var,{1339,38},'List'},
                   {var,{1339,44},'Arg'},
                   {var,{1339,49},'Fail'},
                   {var,{1339,55},'Tests'},
                   {var,{1339,62},'All0'}]}},
          {debug_line,1340,504},
          {call,
              {1340,5},
              {atom,{1340,5},update_successors_sw},
              [{var,{1340,26},'List'},
               {var,{1340,32},'Arg'},
               {var,{1340,37},'Tests'},
               {var,{1340,44},'All1'}]}]},
     {clause,
         {1341,1},
         [{var,{1341,19},'Blk'},{var,{1341,24},'Tests'},{var,{1341,31},'All'}],
         [],
         [{debug_line,1342,505},
          {call,
              {1342,5},
              {remote,{1342,5},{atom,{1342,5},lists},{atom,{1342,5},foldl}},
              [{block,0,
                   [{'fun',
                        {1342,11},
                        {clauses,
                            [{clause,
                                 {1342,14},
                                 [{var,{1342,15},'L'},{var,{1342,18},'A'}],
                                 [],
                                 [{debug_line,1343,506},
                                  {call,
                                      {1343,19},
                                      {atom,{1343,19},update_successor},
                                      [{var,{1343,36},'L'},
                                       {var,{1343,39},'Tests'},
                                       {var,{1343,46},'A'}]}]}]}}]},
               {var,{1344,16},'All'},
               {block,0,
                   [{debug_line,1344,507},
                    {call,
                        {1344,21},
                        {remote,
                            {1344,29},
                            {atom,{1344,21},beam_ssa},
                            {atom,{1344,30},successors}},
                        [{var,{1344,41},'Blk'}]}]}]}]}]}.
{function,
 {1346,1},
 update_successors_sw_fail,5,
 [{clause,
   {1346,1},
   [{var,{1346,1},'_'},
    {var,{1346,1},'_'},
    {var,{1346,1},'_'},
    {var,{1346,1},'_'},
    {var,{1346,1},'_'}],
   [[{call,
      {1346,1},
      {remote,{1346,1},{atom,{1346,1},fake},{atom,{1346,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1346,508},{atom,{1346,1},ignore}]},
  {clause,
   {1346,1},
   [{var,{1346,27},'List'},
    {var,{1346,33},'Arg'},
    {var,{1346,38},'Fail'},
    {var,{1346,44},'Tests0'},
    {var,{1346,52},'All'}],
   [],
   [{debug_line,1347,509},
    {match,
     {1347,5},
     {var,{1347,5},'Tests'},
     {call,
      {1347,13},
      {remote,{1347,13},{atom,{1347,13},lists},{atom,{1347,13},foldl}},
      [{block,0,
        [{'fun',
          {1347,19},
          {clauses,
           [{clause,
             {1347,22},
             [{tuple,{1347,23},[{var,{1347,24},'Lit'},{var,{1347,28},'_'}]},
              {var,{1347,32},'A'}],
             [],
             [{debug_line,1348,510},
              {map,
               {1348,28},
               {var,{1348,27},'A'},
               [{map_field_assoc,
                 {1348,46},
                 {tuple,
                  {1348,30},
                  [{atom,{1348,31},'=:='},
                   {var,{1348,37},'Arg'},
                   {var,{1348,41},'Lit'}]},
                 {atom,{1348,49},false}}]}]}]}}]},
       {var,{1349,24},'Tests0'},
       {var,{1349,32},'List'}]}},
    {debug_line,1350,511},
    {call,
     {1350,5},
     {atom,{1350,5},update_successor},
     [{var,{1350,22},'Fail'},
      {var,{1350,28},'Tests'},
      {var,{1350,35},'All'}]}]}]}.
{function,
    {1352,1},
    update_successors_sw,4,
    [{clause,
         {1352,1},
         [{var,{1352,1},'_'},
          {var,{1352,1},'_'},
          {var,{1352,1},'_'},
          {var,{1352,1},'_'}],
         [[{call,
               {1352,1},
               {remote,
                   {1352,1},
                   {atom,{1352,1},fake},
                   {atom,{1352,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1352,512},{atom,{1352,1},ignore}]},
     {clause,
         {1352,1},
         [{cons,
              {1352,22},
              {tuple,{1352,23},[{var,{1352,24},'Lit'},{var,{1352,28},'L'}]},
              {var,{1352,31},'T'}},
          {var,{1352,35},'Arg'},
          {var,{1352,40},'Tests'},
          {var,{1352,47},'All0'}],
         [],
         [{debug_line,1353,513},
          {match,
              {1353,5},
              {var,{1353,5},'All'},
              {call,
                  {1353,11},
                  {atom,{1353,11},update_successor},
                  [{var,{1353,28},'L'},
                   {block,0,
                       [{map,
                            {1353,36},
                            {var,{1353,31},'Tests'},
                            [{map_field_assoc,
                                 {1353,54},
                                 {tuple,
                                     {1353,38},
                                     [{atom,{1353,39},'=:='},
                                      {var,{1353,45},'Arg'},
                                      {var,{1353,49},'Lit'}]},
                                 {atom,{1353,57},true}}]}]},
                   {var,{1353,64},'All0'}]}},
          {debug_line,1354,514},
          {call,
              {1354,5},
              {atom,{1354,5},update_successors_sw},
              [{var,{1354,26},'T'},
               {var,{1354,29},'Arg'},
               {var,{1354,34},'Tests'},
               {var,{1354,41},'All'}]}]},
     {clause,
         {1355,1},
         [{nil,{1355,22}},
          {var,{1355,26},'_'},
          {var,{1355,29},'_'},
          {var,{1355,32},'All'}],
         [],
         [{debug_line,1355,515},{var,{1355,40},'All'}]}]}.
{function,
    {1357,1},
    update_successor,3,
    [{clause,
         {1357,1},
         [{var,{1357,1},'_'},{var,{1357,1},'_'},{var,{1357,1},'_'}],
         [[{call,
               {1357,1},
               {remote,
                   {1357,1},
                   {atom,{1357,1},fake},
                   {atom,{1357,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1357,516},{atom,{1357,1},ignore}]},
     {clause,
         {1357,1},
         [{integer,{1357,19},1},
          {var,{1357,36},'_Tests'},
          {var,{1357,44},'All'}],
         [],
         [{debug_line,1358,517},{var,{1358,5},'All'}]},
     {clause,
         {1359,1},
         [{var,{1359,18},'L'},{var,{1359,21},'TestsA'},{var,{1359,29},'All0'}],
         [],
         [{debug_line,1360,518},
          {'case',
              {1360,5},
              {var,{1360,10},'All0'},
              [{clause,
                   {1361,9},
                   [{map,
                        {1361,9},
                        [{map_field_exact,
                             {1361,13},
                             {var,{1361,11},'L'},
                             {var,{1361,16},'TestsB'}}]}],
                   [],
                   [{debug_line,1362,519},
                    {map,
                        {1362,17},
                        {var,{1362,13},'All0'},
                        [{map_field_exact,
                             {1362,21},
                             {var,{1362,19},'L'},
                             {call,
                                 {1362,24},
                                 {atom,{1362,24},maps_intersect_kv},
                                 [{var,{1362,42},'TestsA'},
                                  {var,{1362,50},'TestsB'}]}}]}]},
               {clause,
                   {1363,9},
                   [{map,{1363,9},[]}],
                   [],
                   [{debug_line,1364,520},
                    {map,
                        {1364,17},
                        {var,{1364,13},'All0'},
                        [{map_field_assoc,
                             {1364,21},
                             {var,{1364,19},'L'},
                             {var,{1364,24},'TestsA'}}]}]}]}]}]}.
{function,
    {1367,1},
    maps_intersect_kv,2,
    [{clause,
         {1367,1},
         [{var,{1367,1},'_'},{var,{1367,1},'_'}],
         [[{call,
               {1367,1},
               {remote,
                   {1367,1},
                   {atom,{1367,1},fake},
                   {atom,{1367,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1367,521},{atom,{1367,1},ignore}]},
     {clause,
         {1367,1},
         [{var,{1367,19},'Map'},{var,{1367,24},'Map'}],
         [],
         [{debug_line,1368,522},{var,{1368,5},'Map'}]},
     {clause,
         {1369,1},
         [{var,{1369,19},'Map1'},{var,{1369,25},'Map2'}],
         [],
         [{debug_line,1370,523},
          {'if',
              {1370,5},
              [{clause,
                   {1371,9},
                   [],
                   [[{op,{1371,24},
                         '<',
                         {call,
                             {1371,9},
                             {remote,
                                 {1371,9},
                                 {atom,{1371,9},erlang},
                                 {atom,{1371,9},map_size}},
                             [{var,{1371,18},'Map1'}]},
                         {call,
                             {1371,26},
                             {remote,
                                 {1371,26},
                                 {atom,{1371,26},erlang},
                                 {atom,{1371,26},map_size}},
                             [{var,{1371,35},'Map2'}]}}]],
                   [{debug_line,1372,524},
                    {call,
                        {1372,13},
                        {atom,{1372,13},map_intersect_kv_1},
                        [{var,{1372,32},'Map1'},{var,{1372,38},'Map2'}]}]},
               {clause,
                   {1373,9},
                   [],
                   [[{atom,{1373,9},true}]],
                   [{debug_line,1374,525},
                    {call,
                        {1374,13},
                        {atom,{1374,13},map_intersect_kv_1},
                        [{var,{1374,32},'Map2'},
                         {var,{1374,38},'Map1'}]}]}]}]}]}.
{function,
    {1377,1},
    map_intersect_kv_1,2,
    [{clause,
         {1377,1},
         [{var,{1377,1},'_'},{var,{1377,1},'_'}],
         [[{call,
               {1377,1},
               {remote,
                   {1377,1},
                   {atom,{1377,1},fake},
                   {atom,{1377,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1377,526},{atom,{1377,1},ignore}]},
     {clause,
         {1377,1},
         [{var,{1377,20},'SmallMap'},{var,{1377,30},'BigMap'}],
         [],
         [{debug_line,1378,527},
          {match,
              {1378,5},
              {var,{1378,5},'Next'},
              {call,
                  {1378,12},
                  {remote,
                      {1378,16},
                      {atom,{1378,12},maps},
                      {atom,{1378,17},next}},
                  [{block,0,
                       [{call,
                            {1378,22},
                            {remote,
                                {1378,26},
                                {atom,{1378,22},maps},
                                {atom,{1378,27},iterator}},
                            [{var,{1378,36},'SmallMap'}]}]}]}},
          {debug_line,1379,528},
          {'case',
              {1379,5},
              {call,
                  {1379,10},
                  {atom,{1379,10},maps_is_subset_kv},
                  [{var,{1379,28},'Next'},{var,{1379,34},'BigMap'}]},
              [{clause,
                   {1380,9},
                   [{atom,{1380,9},true}],
                   [],
                   [{debug_line,1380,529},{var,{1380,17},'SmallMap'}]},
               {clause,
                   {1381,9},
                   [{atom,{1381,9},false}],
                   [],
                   [{debug_line,1381,530},
                    {call,
                        {1381,18},
                        {atom,{1381,18},map_intersect_kv_2},
                        [{var,{1381,37},'Next'},
                         {var,{1381,43},'BigMap'},
                         {nil,{1381,51}}]}]}]}]}]}.
{function,
    {1384,1},
    map_intersect_kv_2,3,
    [{clause,
         {1384,1},
         [{var,{1384,1},'_'},{var,{1384,1},'_'},{var,{1384,1},'_'}],
         [[{call,
               {1384,1},
               {remote,
                   {1384,1},
                   {atom,{1384,1},fake},
                   {atom,{1384,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1384,531},{atom,{1384,1},ignore}]},
     {clause,
         {1384,1},
         [{tuple,
              {1384,20},
              [{var,{1384,21},'K'},
               {var,{1384,24},'V'},
               {var,{1384,27},'Iterator'}]},
          {var,{1384,38},'BigMap'},
          {var,{1384,46},'Acc'}],
         [],
         [{debug_line,1385,532},
          {match,
              {1385,5},
              {var,{1385,5},'Next'},
              {call,
                  {1385,12},
                  {remote,
                      {1385,16},
                      {atom,{1385,12},maps},
                      {atom,{1385,17},next}},
                  [{var,{1385,22},'Iterator'}]}},
          {debug_line,1386,533},
          {'case',
              {1386,5},
              {var,{1386,10},'BigMap'},
              [{clause,
                   {1387,9},
                   [{map,
                        {1387,9},
                        [{map_field_exact,
                             {1387,13},
                             {var,{1387,11},'K'},
                             {var,{1387,16},'V'}}]}],
                   [],
                   [{debug_line,1388,534},
                    {call,
                        {1388,13},
                        {atom,{1388,13},map_intersect_kv_2},
                        [{var,{1388,32},'Next'},
                         {var,{1388,38},'BigMap'},
                         {block,0,
                             [{cons,
                                  {1388,46},
                                  {tuple,
                                      {1388,47},
                                      [{var,{1388,48},'K'},
                                       {var,{1388,50},'V'}]},
                                  {var,{1388,53},'Acc'}}]}]}]},
               {clause,
                   {1389,9},
                   [{map,{1389,9},[]}],
                   [],
                   [{debug_line,1390,535},
                    {call,
                        {1390,13},
                        {atom,{1390,13},map_intersect_kv_2},
                        [{var,{1390,32},'Next'},
                         {var,{1390,38},'BigMap'},
                         {var,{1390,46},'Acc'}]}]}]}]},
     {clause,
         {1392,1},
         [{atom,{1392,20},none},
          {var,{1392,26},'_BigMap'},
          {var,{1392,35},'Acc'}],
         [],
         [{debug_line,1393,536},
          {call,
              {1393,5},
              {remote,
                  {1393,9},
                  {atom,{1393,5},maps},
                  {atom,{1393,10},from_list}},
              [{var,{1393,20},'Acc'}]}]}]}.
{function,
    {1395,1},
    maps_is_subset_kv,2,
    [{clause,
         {1395,1},
         [{var,{1395,1},'_'},{var,{1395,1},'_'}],
         [[{call,
               {1395,1},
               {remote,
                   {1395,1},
                   {atom,{1395,1},fake},
                   {atom,{1395,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1395,537},{atom,{1395,1},ignore}]},
     {clause,
         {1395,1},
         [{tuple,
              {1395,19},
              [{var,{1395,20},'K'},
               {var,{1395,23},'V'},
               {var,{1395,26},'Iterator'}]},
          {var,{1395,37},'BigMap'}],
         [],
         [{debug_line,1396,538},
          {match,
              {1396,5},
              {var,{1396,5},'Next'},
              {call,
                  {1396,12},
                  {remote,
                      {1396,16},
                      {atom,{1396,12},maps},
                      {atom,{1396,17},next}},
                  [{var,{1396,22},'Iterator'}]}},
          {debug_line,1397,539},
          {'case',
              {1397,5},
              {var,{1397,10},'BigMap'},
              [{clause,
                   {1398,9},
                   [{map,
                        {1398,9},
                        [{map_field_exact,
                             {1398,13},
                             {var,{1398,11},'K'},
                             {var,{1398,16},'V'}}]}],
                   [],
                   [{debug_line,1399,540},
                    {call,
                        {1399,13},
                        {atom,{1399,13},maps_is_subset_kv},
                        [{var,{1399,31},'Next'},{var,{1399,37},'BigMap'}]}]},
               {clause,
                   {1400,9},
                   [{map,{1400,9},[]}],
                   [],
                   [{debug_line,1401,541},{atom,{1401,13},false}]}]}]},
     {clause,
         {1403,1},
         [{atom,{1403,19},none},{var,{1403,25},'_BigMap'}],
         [],
         [{debug_line,1403,542},{atom,{1403,37},true}]}]}.
{function,
    {1409,1},
    used_vars,1,
    [{clause,
         {1409,1},
         [{var,{1409,1},'_'}],
         [[{call,
               {1409,1},
               {remote,
                   {1409,1},
                   {atom,{1409,1},fake},
                   {atom,{1409,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1409,543},{atom,{1409,1},ignore}]},
     {clause,
         {1409,1},
         [{var,{1409,11},'Linear'}],
         [],
         [{debug_line,1410,544},
          {call,
              {1410,5},
              {atom,{1410,5},used_vars},
              [{block,0,
                   [{call,
                        {1410,15},
                        {remote,
                            {1410,15},
                            {atom,{1410,15},lists},
                            {atom,{1410,15},reverse}},
                        [{var,{1410,23},'Linear'}]}]},
               {block,0,[{map,{1410,32},[]}]},
               {block,0,[{map,{1410,37},[]}]}]}]}]}.
{function,
    {1412,1},
    used_vars,3,
    [{clause,
         {1412,1},
         [{var,{1412,1},'_'},{var,{1412,1},'_'},{var,{1412,1},'_'}],
         [[{call,
               {1412,1},
               {remote,
                   {1412,1},
                   {atom,{1412,1},fake},
                   {atom,{1412,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1412,545},{atom,{1412,1},ignore}]},
     {clause,
         {1412,1},
         [{cons,
              {1412,11},
              {tuple,
                  {1412,12},
                  [{var,{1412,13},'L'},
                   {match,
                       {1412,15},
                       {tuple,
                           {1412,15},
                           [{atom,{1412,15},b_blk},
                            {var,{1412,15},'_'},
                            {var,{1412,25},'Is'},
                            {var,{1412,15},'_'}]},
                       {var,{1412,29},'Blk'}}]},
              {var,{1412,34},'Bs'}},
          {var,{1412,39},'UsedVars0'},
          {var,{1412,50},'Skip0'}],
         [],
         [{debug_line,1417,546},
          {match,
              {1417,5},
              {var,{1417,5},'Successors'},
              {call,
                  {1417,18},
                  {remote,
                      {1417,26},
                      {atom,{1417,18},beam_ssa},
                      {atom,{1417,27},successors}},
                  [{var,{1417,38},'Blk'}]}},
          {debug_line,1418,547},
          {match,
              {1418,5},
              {var,{1418,5},'Used0'},
              {call,
                  {1418,13},
                  {atom,{1418,13},used_vars_succ},
                  [{var,{1418,28},'Successors'},
                   {var,{1418,40},'L'},
                   {var,{1418,43},'UsedVars0'},
                   {block,0,
                       [{call,
                            {1418,54},
                            {remote,
                                {1418,58},
                                {atom,{1418,54},sets},
                                {atom,{1418,59},new}},
                            []}]}]}},
          {debug_line,1419,548},
          {match,
              {1419,5},
              {var,{1419,5},'Used'},
              {call,
                  {1419,12},
                  {atom,{1419,12},used_vars_blk},
                  [{var,{1419,26},'Blk'},{var,{1419,31},'Used0'}]}},
          {debug_line,1420,549},
          {match,
              {1420,5},
              {var,{1420,5},'UsedVars'},
              {call,
                  {1420,16},
                  {atom,{1420,16},used_vars_phis},
                  [{var,{1420,31},'Is'},
                   {var,{1420,35},'L'},
                   {var,{1420,38},'Used'},
                   {var,{1420,44},'UsedVars0'}]}},
          {debug_line,1428,550},
          {match,
              {1428,5},
              {var,{1428,5},'Defined0'},
              {lc,{1428,16},
                  {block,0,[{var,{1428,17},'Def'}]},
                  [{block,0,[{atom,{1428,44},true}]},
                   {generate_strict,
                       {1428,40},
                       {tuple,
                           {1428,24},
                           [{atom,{1428,24},b_set},
                            {var,{1428,24},'_'},
                            {var,{1428,35},'Def'},
                            {var,{1428,24},'_'},
                            {var,{1428,24},'_'}]},
                       {var,{1428,44},'Is'}}]}},
          {debug_line,1429,551},
          {match,
              {1429,5},
              {var,{1429,5},'Defined'},
              {call,
                  {1429,15},
                  {remote,
                      {1429,19},
                      {atom,{1429,15},sets},
                      {atom,{1429,20},from_list}},
                  [{var,{1429,30},'Defined0'}]}},
          {debug_line,1430,552},
          {match,
              {1430,5},
              {var,{1430,5},'MaySkip'},
              {call,
                  {1430,15},
                  {remote,
                      {1430,19},
                      {atom,{1430,15},sets},
                      {atom,{1430,20},is_disjoint}},
                  [{var,{1430,32},'Defined'},{var,{1430,41},'Used0'}]}},
          {debug_line,1431,553},
          {'case',
              {1431,5},
              {var,{1431,10},'MaySkip'},
              [{clause,
                   {1432,9},
                   [{atom,{1432,9},true}],
                   [],
                   [{debug_line,1433,554},
                    {match,
                        {1433,13},
                        {var,{1433,13},'Skip'},
                        {map,
                            {1433,25},
                            {var,{1433,20},'Skip0'},
                            [{map_field_assoc,
                                 {1433,28},
                                 {var,{1433,27},'L'},
                                 {atom,{1433,30},true}}]}},
                    {debug_line,1434,555},
                    {call,
                        {1434,13},
                        {atom,{1434,13},used_vars},
                        [{var,{1434,23},'Bs'},
                         {var,{1434,27},'UsedVars'},
                         {var,{1434,37},'Skip'}]}]},
               {clause,
                   {1435,9},
                   [{atom,{1435,9},false}],
                   [],
                   [{debug_line,1436,556},
                    {call,
                        {1436,13},
                        {atom,{1436,13},used_vars},
                        [{var,{1436,23},'Bs'},
                         {var,{1436,27},'UsedVars'},
                         {var,{1436,37},'Skip0'}]}]}]}]},
     {clause,
         {1438,1},
         [{nil,{1438,11}},{var,{1438,15},'UsedVars'},{var,{1438,25},'Skip'}],
         [],
         [{debug_line,1439,557},
          {tuple,
              {1439,5},
              [{var,{1439,6},'UsedVars'},{var,{1439,15},'Skip'}]}]}]}.
{function,
    {1441,1},
    used_vars_succ,4,
    [{clause,
         {1441,1},
         [{var,{1441,1},'_'},
          {var,{1441,1},'_'},
          {var,{1441,1},'_'},
          {var,{1441,1},'_'}],
         [[{call,
               {1441,1},
               {remote,
                   {1441,1},
                   {atom,{1441,1},fake},
                   {atom,{1441,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1441,558},{atom,{1441,1},ignore}]},
     {clause,
         {1441,1},
         [{cons,{1441,16},{var,{1441,17},'S'},{var,{1441,19},'Ss'}},
          {var,{1441,24},'L'},
          {var,{1441,27},'LiveMap'},
          {var,{1441,36},'Live0'}],
         [],
         [{debug_line,1442,559},
          {match,
              {1442,5},
              {var,{1442,5},'Key'},
              {tuple,{1442,11},[{var,{1442,12},'S'},{var,{1442,14},'L'}]}},
          {debug_line,1443,560},
          {'case',
              {1443,5},
              {var,{1443,10},'LiveMap'},
              [{clause,
                   {1444,9},
                   [{map,
                        {1444,9},
                        [{map_field_exact,
                             {1444,14},
                             {var,{1444,11},'Key'},
                             {var,{1444,16},'Live'}}]}],
                   [],
                   [{debug_line,1447,561},
                    {call,
                        {1447,13},
                        {atom,{1447,13},used_vars_succ},
                        [{var,{1447,28},'Ss'},
                         {var,{1447,32},'L'},
                         {var,{1447,35},'LiveMap'},
                         {block,0,
                             [{call,
                                  {1447,44},
                                  {remote,
                                      {1447,48},
                                      {atom,{1447,44},sets},
                                      {atom,{1447,49},union}},
                                  [{var,{1447,55},'Live'},
                                   {var,{1447,61},'Live0'}]}]}]}]},
               {clause,
                   {1448,9},
                   [{map,
                        {1448,9},
                        [{map_field_exact,
                             {1448,12},
                             {var,{1448,11},'S'},
                             {var,{1448,14},'Live'}}]}],
                   [],
                   [{debug_line,1451,562},
                    {call,
                        {1451,13},
                        {atom,{1451,13},used_vars_succ},
                        [{var,{1451,28},'Ss'},
                         {var,{1451,32},'L'},
                         {var,{1451,35},'LiveMap'},
                         {block,0,
                             [{call,
                                  {1451,44},
                                  {remote,
                                      {1451,48},
                                      {atom,{1451,44},sets},
                                      {atom,{1451,49},union}},
                                  [{var,{1451,55},'Live'},
                                   {var,{1451,61},'Live0'}]}]}]}]},
               {clause,
                   {1452,9},
                   [{map,{1452,9},[]}],
                   [],
                   [{debug_line,1454,563},
                    {call,
                        {1454,13},
                        {atom,{1454,13},used_vars_succ},
                        [{var,{1454,28},'Ss'},
                         {var,{1454,32},'L'},
                         {var,{1454,35},'LiveMap'},
                         {var,{1454,44},'Live0'}]}]}]}]},
     {clause,
         {1456,1},
         [{nil,{1456,16}},
          {var,{1456,20},'_'},
          {var,{1456,23},'_'},
          {var,{1456,26},'Acc'}],
         [],
         [{debug_line,1456,564},{var,{1456,34},'Acc'}]}]}.
{function,
 {1458,1},
 used_vars_phis,4,
 [{clause,
   {1458,1},
   [{var,{1458,1},'_'},
    {var,{1458,1},'_'},
    {var,{1458,1},'_'},
    {var,{1458,1},'_'}],
   [[{call,
      {1458,1},
      {remote,{1458,1},{atom,{1458,1},fake},{atom,{1458,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1458,565},{atom,{1458,1},ignore}]},
  {clause,
   {1458,1},
   [{var,{1458,16},'Is'},
    {var,{1458,20},'L'},
    {var,{1458,23},'Live0'},
    {var,{1458,30},'UsedVars0'}],
   [],
   [{debug_line,1459,566},
    {match,
     {1459,5},
     {var,{1459,5},'UsedVars'},
     {map,
      {1459,25},
      {var,{1459,16},'UsedVars0'},
      [{map_field_assoc,
        {1459,28},
        {var,{1459,27},'L'},
        {var,{1459,30},'Live0'}}]}},
    {debug_line,1460,567},
    {match,
     {1460,5},
     {var,{1460,5},'Phis'},
     {call,
      {1460,12},
      {remote,{1460,12},{atom,{1460,12},lists},{atom,{1460,12},takewhile}},
      [{block,0,
        [{'fun',
          {1460,22},
          {clauses,
           [{clause,
             {1460,25},
             [{tuple,
               {1460,26},
               [{atom,{1460,26},b_set},
                {var,{1460,26},'_'},
                {var,{1460,26},'_'},
                {var,{1460,36},'Op'},
                {var,{1460,26},'_'}]}],
             [],
             [{op,
               {1460,47},
               '=:=',
               {var,{1460,44},'Op'},
               {atom,{1460,51},phi}}]}]}}]},
       {var,{1460,60},'Is'}]}},
    {debug_line,1461,568},
    {'case',
     {1461,5},
     {var,{1461,10},'Phis'},
     [{clause,
       {1462,9},
       [{nil,{1462,9}}],
       [],
       [{debug_line,1463,569},{var,{1463,13},'UsedVars'}]},
      {clause,
       {1464,9},
       [{cons,{1464,9},{var,{1464,10},'_'},{var,{1464,12},'_'}}],
       [],
       [{debug_line,1465,570},
        {match,
         {1465,13},
         {var,{1465,13},'PhiArgs'},
         {call,
          {1465,23},
          {remote,{1465,23},{atom,{1465,23},lists},{atom,{1465,23},append}},
          [{block,0,
            [{lc,
              {1465,30},
              {block,0,[{var,{1465,31},'Args'}]},
              [{block,0,[{atom,{1465,61},true}]},
               {generate_strict,
                {1465,57},
                {tuple,
                 {1465,39},
                 [{atom,{1465,39},b_set},
                  {var,{1465,39},'_'},
                  {var,{1465,39},'_'},
                  {var,{1465,39},'_'},
                  {var,{1465,51},'Args'}]},
                {var,{1465,61},'Phis'}}]}]}]}},
        {debug_line,1466,571},
        {'case',
         {1466,13},
         {lc,
          {1466,18},
          {block,0,
           [{tuple,{1466,19},[{var,{1466,20},'P'},{var,{1466,22},'V'}]}]},
          [{block,0,[{atom,{1466,46},true}]},
           {generate,
            {1466,43},
            {tuple,
             {1466,28},
             [{match,
               {1466,29},
               {tuple,{1466,29},[{atom,{1466,29},b_var},{var,{1466,29},'_'}]},
               {var,{1466,38},'V'}},
              {var,{1466,40},'P'}]},
            {var,{1466,46},'PhiArgs'}}]},
         [{clause,
           {1467,17},
           [{match,
             {1467,17},
             {cons,{1467,17},{var,{1467,18},'_'},{var,{1467,20},'_'}},
             {var,{1467,23},'PhiVars'}}],
           [],
           [{debug_line,1468,572},
            {match,
             {1468,21},
             {var,{1468,21},'PhiLive0'},
             {call,
              {1468,32},
              {atom,{1468,32},rel2fam},
              [{var,{1468,40},'PhiVars'}]}},
            {debug_line,1469,573},
            {match,
             {1469,21},
             {var,{1469,21},'PhiLive'},
             {mc,
              {1469,31},
              {map_field_assoc,
               {1469,39},
               {block,0,
                [{tuple,{1469,33},[{var,{1469,34},'L'},{var,{1469,36},'P'}]}]},
               {block,0,
                [{call,
                  {1469,42},
                  {atom,{1469,42},list_set_union},
                  [{var,{1469,57},'Vs'},{var,{1469,61},'Live0'}]}]}},
              [{block,0,[{debug_line,1470,574},{atom,{1470,46},true}]},
               {generate_strict,
                {1470,42},
                {tuple,{1470,35},[{var,{1470,36},'P'},{var,{1470,38},'Vs'}]},
                {var,{1470,46},'PhiLive0'}}]}},
            {debug_line,1471,575},
            {call,
             {1471,21},
             {remote,{1471,25},{atom,{1471,21},maps},{atom,{1471,26},merge}},
             [{var,{1471,32},'UsedVars'},{var,{1471,42},'PhiLive'}]}]},
          {clause,
           {1472,17},
           [{nil,{1472,17}}],
           [],
           [{debug_line,1474,576},{var,{1474,21},'UsedVars'}]}]}]}]}]}]}.
{function,
    {1478,1},
    used_vars_blk,2,
    [{clause,
         {1478,1},
         [{var,{1478,1},'_'},{var,{1478,1},'_'}],
         [[{call,
               {1478,1},
               {remote,
                   {1478,1},
                   {atom,{1478,1},fake},
                   {atom,{1478,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1478,577},{atom,{1478,1},ignore}]},
     {clause,
         {1478,1},
         [{tuple,
              {1478,15},
              [{atom,{1478,15},b_blk},
               {var,{1478,15},'_'},
               {var,{1478,25},'Is'},
               {var,{1478,33},'Last'}]},
          {var,{1478,40},'Used0'}],
         [],
         [{debug_line,1479,578},
          {match,
              {1479,5},
              {var,{1479,5},'Used'},
              {call,
                  {1479,12},
                  {atom,{1479,12},list_set_union},
                  [{block,0,
                       [{call,
                            {1479,27},
                            {remote,
                                {1479,35},
                                {atom,{1479,27},beam_ssa},
                                {atom,{1479,36},used}},
                            [{var,{1479,41},'Last'}]}]},
                   {var,{1479,48},'Used0'}]}},
          {debug_line,1480,579},
          {call,
              {1480,5},
              {atom,{1480,5},used_vars_is},
              [{block,0,
                   [{call,
                        {1480,18},
                        {remote,
                            {1480,18},
                            {atom,{1480,18},lists},
                            {atom,{1480,18},reverse}},
                        [{var,{1480,26},'Is'}]}]},
               {var,{1480,31},'Used'}]}]}]}.
{function,
    {1482,1},
    used_vars_is,2,
    [{clause,
         {1482,1},
         [{var,{1482,1},'_'},{var,{1482,1},'_'}],
         [[{call,
               {1482,1},
               {remote,
                   {1482,1},
                   {atom,{1482,1},fake},
                   {atom,{1482,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1482,580},{atom,{1482,1},ignore}]},
     {clause,
         {1482,1},
         [{cons,
              {1482,14},
              {tuple,
                  {1482,15},
                  [{atom,{1482,15},b_set},
                   {var,{1482,15},'_'},
                   {var,{1482,15},'_'},
                   {atom,{1482,25},phi},
                   {var,{1482,15},'_'}]},
              {var,{1482,30},'Is'}},
          {var,{1482,35},'Used'}],
         [],
         [{debug_line,1483,581},
          {call,
              {1483,5},
              {atom,{1483,5},used_vars_is},
              [{var,{1483,18},'Is'},{var,{1483,22},'Used'}]}]},
     {clause,
         {1484,1},
         [{cons,
              {1484,14},
              {match,
                  {1484,15},
                  {tuple,
                      {1484,15},
                      [{atom,{1484,15},b_set},
                       {var,{1484,15},'_'},
                       {var,{1484,26},'Dst'},
                       {var,{1484,15},'_'},
                       {var,{1484,15},'_'}]},
                  {var,{1484,31},'I'}},
              {var,{1484,33},'Is'}},
          {var,{1484,38},'Used0'}],
         [],
         [{debug_line,1485,582},
          {match,
              {1485,5},
              {var,{1485,5},'Used1'},
              {call,
                  {1485,13},
                  {atom,{1485,13},list_set_union},
                  [{block,0,
                       [{call,
                            {1485,28},
                            {remote,
                                {1485,36},
                                {atom,{1485,28},beam_ssa},
                                {atom,{1485,37},used}},
                            [{var,{1485,42},'I'}]}]},
                   {var,{1485,46},'Used0'}]}},
          {debug_line,1486,583},
          {match,
              {1486,5},
              {var,{1486,5},'Used'},
              {call,
                  {1486,12},
                  {remote,
                      {1486,16},
                      {atom,{1486,12},sets},
                      {atom,{1486,17},del_element}},
                  [{var,{1486,29},'Dst'},{var,{1486,34},'Used1'}]}},
          {debug_line,1487,584},
          {call,
              {1487,5},
              {atom,{1487,5},used_vars_is},
              [{var,{1487,18},'Is'},{var,{1487,22},'Used'}]}]},
     {clause,
         {1488,1},
         [{nil,{1488,14}},{var,{1488,18},'Used'}],
         [],
         [{debug_line,1489,585},{var,{1489,5},'Used'}]}]}.
{function,
    {1495,1},
    list_set_union,2,
    [{clause,
         {1495,1},
         [{var,{1495,1},'_'},{var,{1495,1},'_'}],
         [[{call,
               {1495,1},
               {remote,
                   {1495,1},
                   {atom,{1495,1},fake},
                   {atom,{1495,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1495,586},{atom,{1495,1},ignore}]},
     {clause,
         {1495,1},
         [{nil,{1495,16}},{var,{1495,20},'Set'}],
         [],
         [{debug_line,1496,587},{var,{1496,5},'Set'}]},
     {clause,
         {1497,1},
         [{cons,{1497,16},{var,{1497,17},'E'},{nil,{1497,18}}},
          {var,{1497,21},'Set'}],
         [],
         [{debug_line,1498,588},
          {call,
              {1498,5},
              {remote,
                  {1498,9},
                  {atom,{1498,5},sets},
                  {atom,{1498,10},add_element}},
              [{var,{1498,22},'E'},{var,{1498,25},'Set'}]}]},
     {clause,
         {1499,1},
         [{var,{1499,16},'List'},{var,{1499,22},'Set'}],
         [],
         [{debug_line,1500,589},
          {call,
              {1500,5},
              {remote,{1500,9},{atom,{1500,5},sets},{atom,{1500,10},union}},
              [{block,0,
                   [{call,
                        {1500,16},
                        {remote,
                            {1500,20},
                            {atom,{1500,16},sets},
                            {atom,{1500,21},from_list}},
                        [{var,{1500,31},'List'}]}]},
               {var,{1500,38},'Set'}]}]}]}.
{function,
    {1502,1},
    sub,2,
    [{clause,
         {1502,1},
         [{var,{1502,1},'_'},{var,{1502,1},'_'}],
         [[{call,
               {1502,1},
               {remote,
                   {1502,1},
                   {atom,{1502,1},fake},
                   {atom,{1502,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1502,590},{atom,{1502,1},ignore}]},
     {clause,
         {1502,1},
         [{match,
              {1502,5},
              {tuple,
                  {1502,5},
                  [{atom,{1502,5},b_set},
                   {var,{1502,5},'_'},
                   {var,{1502,5},'_'},
                   {var,{1502,5},'_'},
                   {var,{1502,17},'Args'}]},
              {var,{1502,23},'I'}},
          {var,{1502,26},'Sub'}],
         [[{op,{1502,50},
               '=/=',
               {call,
                   {1502,36},
                   {remote,
                       {1502,36},
                       {atom,{1502,36},erlang},
                       {atom,{1502,36},map_size}},
                   [{var,{1502,45},'Sub'}]},
               {integer,{1502,54},0}}]],
         [{debug_line,1503,591},
          {block,
              {1503,5},
              [{match,
                   {1503,13},
                   {var,{1503,13},rec28},
                   {lc,{1503,18},
                       {block,0,
                           [{call,
                                {1503,19},
                                {atom,{1503,19},sub_arg},
                                [{var,{1503,27},'A'},{var,{1503,30},'Sub'}]}]},
                       [{block,0,[{atom,{1503,43},true}]},
                        {generate,
                            {1503,40},
                            {var,{1503,38},'A'},
                            {var,{1503,43},'Args'}}]}},
               {match,{1503,5},{var,{1503,5},rec29},{var,{1503,5},'I'}},
               {'case',
                   {1503,13},
                   {var,{1503,5},rec29},
                   [{clause,
                        {1503,13},
                        [{tuple,
                             {1503,13},
                             [{atom,{1503,13},b_set},
                              {var,{1503,13},'_'},
                              {var,{1503,13},'_'},
                              {var,{1503,13},'_'},
                              {var,{1503,13},'_'}]}],
                        [],
                        [{call,
                             {1503,13},
                             {remote,
                                 {1503,13},
                                 {atom,{1503,13},erlang},
                                 {atom,{1503,13},setelement}},
                             [{integer,{1503,13},5},
                              {var,{1503,5},rec29},
                              {var,{1503,13},rec28}]}]},
                    {clause,
                        [{generated,true},{location,{1503,13}}],
                        [{var,[{generated,true},{location,{1503,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{1503,13}}],
                             {remote,
                                 [{generated,true},{location,{1503,13}}],
                                 {atom,
                                     [{generated,true},{location,{1503,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{1503,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{1503,13}}],
                                  [{atom,
                                       [{generated,true},{location,{1503,13}}],
                                       badrecord},
                                   {var,{1503,5},rec29}]}]}]}]}]}]},
     {clause,
         {1504,1},
         [{var,{1504,5},'I'},{var,{1504,8},'_Sub'}],
         [],
         [{debug_line,1504,592},{var,{1504,17},'I'}]}]}.
{function,
    {1506,1},
    sub_arg,2,
    [{clause,
         {1506,1},
         [{var,{1506,1},'_'},{var,{1506,1},'_'}],
         [[{call,
               {1506,1},
               {remote,
                   {1506,1},
                   {atom,{1506,1},fake},
                   {atom,{1506,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1506,593},{atom,{1506,1},ignore}]},
     {clause,
         {1506,1},
         [{match,
              {1506,9},
              {tuple,{1506,9},[{atom,{1506,9},b_var},{var,{1506,9},'_'}]},
              {var,{1506,18},'Old'}},
          {var,{1506,23},'Sub'}],
         [],
         [{debug_line,1507,594},
          {'case',
              {1507,5},
              {var,{1507,10},'Sub'},
              [{clause,
                   {1508,9},
                   [{map,
                        {1508,9},
                        [{map_field_exact,
                             {1508,14},
                             {var,{1508,11},'Old'},
                             {var,{1508,16},'New'}}]}],
                   [],
                   [{debug_line,1508,595},{var,{1508,24},'New'}]},
               {clause,
                   {1509,9},
                   [{map,{1509,9},[]}],
                   [],
                   [{debug_line,1509,596},{var,{1509,16},'Old'}]}]}]},
     {clause,
         {1511,1},
         [{var,{1511,9},'Old'},{var,{1511,14},'_Sub'}],
         [],
         [{debug_line,1511,597},{var,{1511,23},'Old'}]}]}.
{function,
    {1513,1},
    rel2fam,1,
    [{clause,
         {1513,1},
         [{var,{1513,1},'_'}],
         [[{call,
               {1513,1},
               {remote,
                   {1513,1},
                   {atom,{1513,1},fake},
                   {atom,{1513,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1513,598},{atom,{1513,1},ignore}]},
     {clause,
         {1513,1},
         [{var,{1513,9},'S0'}],
         [],
         [{debug_line,1514,599},
          {match,
              {1514,5},
              {var,{1514,5},'S1'},
              {call,
                  {1514,10},
                  {remote,
                      {1514,14},
                      {atom,{1514,10},sofs},
                      {atom,{1514,15},relation}},
                  [{var,{1514,24},'S0'}]}},
          {debug_line,1515,600},
          {match,
              {1515,5},
              {var,{1515,5},'S'},
              {call,
                  {1515,9},
                  {remote,
                      {1515,13},
                      {atom,{1515,9},sofs},
                      {atom,{1515,14},rel2fam}},
                  [{var,{1515,22},'S1'}]}},
          {debug_line,1516,601},
          {call,
              {1516,5},
              {remote,
                  {1516,9},
                  {atom,{1516,5},sofs},
                  {atom,{1516,10},to_external}},
              [{var,{1516,22},'S'}]}]}]}.
{eof,{1517,1}}.
