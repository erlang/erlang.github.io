{attribute,{1,1},file,{"sys_pre_attributes.erl",1}}.
{attribute,{22,2},module,sys_pre_attributes}.
{attribute,{25,2},export,[{parse_transform,2}]}.
{attribute,
    {29,2},
    record,
    {state,
        [{typed_record_field,
             {record_field,{29,17},{atom,{29,17},forms}},
             {type,{29,26},list,[{user_type,{29,27},form,[]}]}},
         {typed_record_field,
             {record_field,{30,3},{atom,{30,3},pre_ops},{nil,{30,13}}},
             {type,{30,19},list,[{user_type,{30,20},op,[]}]}},
         {typed_record_field,
             {record_field,{31,3},{atom,{31,3},post_ops},{nil,{31,14}}},
             {type,{31,20},list,[{user_type,{31,21},op,[]}]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},options}},
             {type,{32,28},list,[{user_type,{32,29},option,[]}]}}]}}.
{attribute,{63,2},type,{attribute,{type,{63,22},atom,[]},[]}}.
{attribute,{64,2},type,{value,{type,{64,18},term,[]},[]}}.
{attribute,{65,2},
           type,
           {form,{type,{65,17},
                       union,
                       [{type,{65,17},
                              tuple,
                              [{atom,{65,18},function},
                               {type,{65,28},integer,[]},
                               {type,{65,39},atom,[]},
                               {type,{65,47},arity,[]},
                               {var,{65,56},'_'}]},
                        {type,{66,17},
                              tuple,
                              [{atom,{66,18},attribute},
                               {type,{66,29},integer,[]},
                               {user_type,{66,40},attribute,[]},
                               {var,{66,53},'_'}]}]},
                 []}}.
{attribute,
    {67,2},
    type,
    {option,
        {type,
            {67,19},
            union,
            [{remote_type,
                 {67,19},
                 [{atom,{67,19},compile},{atom,{67,27},option},[]]},
             {type,
                 {68,19},
                 tuple,
                 [{atom,{68,20},attribute},
                  {atom,{68,33},insert},
                  {user_type,{68,43},attribute,[]},
                  {user_type,{68,56},value,[]}]},
             {type,
                 {69,19},
                 tuple,
                 [{atom,{69,20},attribute},
                  {atom,{69,33},replace},
                  {user_type,{69,44},attribute,[]},
                  {user_type,{69,57},value,[]}]},
             {type,
                 {70,19},
                 tuple,
                 [{atom,{70,20},attribute},
                  {atom,{70,33},delete},
                  {user_type,{70,43},attribute,[]}]}]},
        []}}.
{attribute,{71,2},
           type,
           {op,{type,{71,15},
                     union,
                     [{type,{71,15},
                            tuple,
                            [{atom,{71,16},insert},
                             {user_type,{71,26},attribute,[]},
                             {user_type,{71,39},value,[]}]},
                      {type,{72,15},
                            tuple,
                            [{atom,{72,16},replace},
                             {user_type,{72,27},attribute,[]},
                             {user_type,{72,40},value,[]}]},
                      {type,{73,15},
                            tuple,
                            [{atom,{73,16},delete},
                             {user_type,{73,26},attribute,[]}]}]},
               []}}.
{attribute,{75,2},
           spec,
           {{parse_transform,2},
            [{type,{75,22},
                   'fun',
                   [{type,{75,22},
                          product,
                          [{type,{75,23},list,[{user_type,{75,24},form,[]}]},
                           {type,{75,33},
                                 list,
                                 [{user_type,{75,34},option,[]}]}]},
                    {type,{75,48},list,[{user_type,{75,49},form,[]}]}]}]}}.
{function,
 {77,1},
 parse_transform,2,
 [{clause,
   {77,1},
   [{var,{77,1},'_'},{var,{77,1},'_'}],
   [[{call,
      {77,1},
      {remote,{77,1},{atom,{77,1},fake},{atom,{77,1},is_beam_bif_info}},
      []}]],
   [{debug_line,77,1},{atom,{77,1},ignore}]},
  {clause,
   {77,1},
   [{var,{77,17},'Forms'},{var,{77,24},'Options'}],
   [],
   [{debug_line,78,2},
    {match,
     {78,5},
     {var,{78,5},'S'},
     {tuple,
      {78,9},
      [{atom,{78,9},state},
       {var,{78,24},'Forms'},
       {nil,{78,9}},
       {nil,{78,9}},
       {var,{78,41},'Options'}]}},
    {debug_line,79,3},
    {match,
     {79,5},
     {var,{79,5},'S2'},
     {call,
      {79,10},
      {atom,{79,10},init_transform},
      [{var,{79,25},'Options'},{var,{79,34},'S'}]}},
    {debug_line,80,4},
    {call,
     {80,5},
     {atom,{80,5},report_verbose},
     [{block,0,[{string,{80,20},"Pre  options: ~p~n"}]},
      {block,0,
       [{cons,
         {80,42},
         {'case',
          {80,43},
          {var,{80,43},'S2'},
          [{clause,
            [{generated,true},{location,{80,43}}],
            [{tuple,
              [{generated,true},{location,{80,43}}],
              [{atom,{80,43},state},
               {var,{80,43},'_'},
               {var,{80,43},rec0},
               {var,{80,43},'_'},
               {var,{80,43},'_'}]}],
            [],
            [{var,{80,43},rec0}]},
           {clause,
            [{generated,true},{location,{80,43}}],
            [{var,{80,43},rec0}],
            [],
            [{call,
              [{generated,true},{location,{80,43}}],
              {remote,
               [{generated,true},{location,{80,43}}],
               {atom,[{generated,true},{location,{80,43}}],erlang},
               {atom,[{generated,true},{location,{80,43}}],error}},
              [{tuple,
                [{generated,true},{location,{80,43}}],
                [{atom,[{generated,true},{location,{80,43}}],badrecord},
                 {var,{80,43},rec0}]}]}]}]},
         {nil,{80,59}}}]},
      {var,{80,62},'S2'}]},
    {debug_line,81,5},
    {call,
     {81,5},
     {atom,{81,5},report_verbose},
     [{block,0,[{string,{81,20},"Post options: ~p~n"}]},
      {block,0,
       [{cons,
         {81,42},
         {'case',
          {81,43},
          {var,{81,43},'S2'},
          [{clause,
            [{generated,true},{location,{81,43}}],
            [{tuple,
              [{generated,true},{location,{81,43}}],
              [{atom,{81,43},state},
               {var,{81,43},'_'},
               {var,{81,43},'_'},
               {var,{81,43},rec1},
               {var,{81,43},'_'}]}],
            [],
            [{var,{81,43},rec1}]},
           {clause,
            [{generated,true},{location,{81,43}}],
            [{var,{81,43},rec1}],
            [],
            [{call,
              [{generated,true},{location,{81,43}}],
              {remote,
               [{generated,true},{location,{81,43}}],
               {atom,[{generated,true},{location,{81,43}}],erlang},
               {atom,[{generated,true},{location,{81,43}}],error}},
              [{tuple,
                [{generated,true},{location,{81,43}}],
                [{atom,[{generated,true},{location,{81,43}}],badrecord},
                 {var,{81,43},rec1}]}]}]}]},
         {nil,{81,60}}}]},
      {var,{81,63},'S2'}]},
    {debug_line,82,6},
    {match,
     {82,5},
     {var,{82,5},'S3'},
     {call,{82,10},{atom,{82,10},pre_transform},[{var,{82,24},'S2'}]}},
    {debug_line,83,7},
    {match,
     {83,5},
     {var,{83,5},'S4'},
     {call,{83,10},{atom,{83,10},post_transform},[{var,{83,25},'S3'}]}},
    {debug_line,84,8},
    {'case',
     {84,5},
     {var,{84,5},'S4'},
     [{clause,
       [{generated,true},{location,{84,5}}],
       [{tuple,
         [{generated,true},{location,{84,5}}],
         [{atom,{84,5},state},
          {var,{84,5},rec2},
          {var,{84,5},'_'},
          {var,{84,5},'_'},
          {var,{84,5},'_'}]}],
       [],
       [{var,{84,5},rec2}]},
      {clause,
       [{generated,true},{location,{84,5}}],
       [{var,{84,5},rec2}],
       [],
       [{call,
         [{generated,true},{location,{84,5}}],
         {remote,
          [{generated,true},{location,{84,5}}],
          {atom,[{generated,true},{location,{84,5}}],erlang},
          {atom,[{generated,true},{location,{84,5}}],error}},
         [{tuple,
           [{generated,true},{location,{84,5}}],
           [{atom,[{generated,true},{location,{84,5}}],badrecord},
            {var,{84,5},rec2}]}]}]}]}]}]}.
{function,
 {90,1},
 init_transform,2,
 [{clause,
   {90,1},
   [{var,{90,1},'_'},{var,{90,1},'_'}],
   [[{call,
      {90,1},
      {remote,{90,1},{atom,{90,1},fake},{atom,{90,1},is_beam_bif_info}},
      []}]],
   [{debug_line,90,9},{atom,{90,1},ignore}]},
  {clause,
   {90,1},
   [{cons,
     {90,16},
     {tuple,
      {90,17},
      [{atom,{90,18},attribute},
       {atom,{90,29},insert},
       {var,{90,37},'Name'},
       {var,{90,43},'Val'}]},
     {var,{90,50},'Tail'}},
    {var,{90,57},'S'}],
   [],
   [{debug_line,91,10},
    {match,
     {91,5},
     {var,{91,5},'Op'},
     {tuple,
      {91,10},
      [{atom,{91,11},insert},{var,{91,19},'Name'},{var,{91,25},'Val'}]}},
    {debug_line,92,11},
    {match,
     {92,5},
     {var,{92,5},'PostOps'},
     {cons,
      {92,15},
      {var,{92,16},'Op'},
      {'case',
       {92,21},
       {var,{92,21},'S'},
       [{clause,
         [{generated,true},{location,{92,21}}],
         [{tuple,
           [{generated,true},{location,{92,21}}],
           [{atom,{92,21},state},
            {var,{92,21},'_'},
            {var,{92,21},'_'},
            {var,{92,21},rec3},
            {var,{92,21},'_'}]}],
         [],
         [{var,{92,21},rec3}]},
        {clause,
         [{generated,true},{location,{92,21}}],
         [{var,{92,21},rec3}],
         [],
         [{call,
           [{generated,true},{location,{92,21}}],
           {remote,
            [{generated,true},{location,{92,21}}],
            {atom,[{generated,true},{location,{92,21}}],erlang},
            {atom,[{generated,true},{location,{92,21}}],error}},
           [{tuple,
             [{generated,true},{location,{92,21}}],
             [{atom,[{generated,true},{location,{92,21}}],badrecord},
              {var,{92,21},rec3}]}]}]}]}}},
    {debug_line,93,12},
    {call,
     {93,5},
     {atom,{93,5},init_transform},
     [{var,{93,20},'Tail'},
      {block,0,
       [{block,
         {93,26},
         [{match,{93,26},{var,{93,26},rec4},{var,{93,26},'S'}},
          {'case',
           {93,34},
           {var,{93,26},rec4},
           [{clause,
             {93,34},
             [{tuple,
               {93,34},
               [{atom,{93,34},state},
                {var,{93,34},'_'},
                {var,{93,34},'_'},
                {var,{93,34},'_'},
                {var,{93,34},'_'}]}],
             [],
             [{call,
               {93,34},
               {remote,
                {93,34},
                {atom,{93,34},erlang},
                {atom,{93,34},setelement}},
               [{integer,{93,34},4},
                {var,{93,26},rec4},
                {var,{93,45},'PostOps'}]}]},
            {clause,
             [{generated,true},{location,{93,34}}],
             [{var,[{generated,true},{location,{93,34}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{93,34}}],
               {remote,
                [{generated,true},{location,{93,34}}],
                {atom,[{generated,true},{location,{93,34}}],erlang},
                {atom,[{generated,true},{location,{93,34}}],error}},
               [{tuple,
                 [{generated,true},{location,{93,34}}],
                 [{atom,[{generated,true},{location,{93,34}}],badrecord},
                  {var,{93,26},rec4}]}]}]}]}]}]}]}]},
  {clause,
   {94,1},
   [{cons,
     {94,16},
     {tuple,
      {94,17},
      [{atom,{94,18},attribute},
       {atom,{94,29},replace},
       {var,{94,38},'Name'},
       {var,{94,44},'Val'}]},
     {var,{94,51},'Tail'}},
    {var,{94,58},'S'}],
   [],
   [{debug_line,95,13},
    {match,
     {95,5},
     {var,{95,5},'Op'},
     {tuple,
      {95,10},
      [{atom,{95,11},replace},{var,{95,20},'Name'},{var,{95,26},'Val'}]}},
    {debug_line,96,14},
    {match,
     {96,5},
     {var,{96,5},'PreOps'},
     {cons,
      {96,14},
      {var,{96,15},'Op'},
      {'case',
       {96,20},
       {var,{96,20},'S'},
       [{clause,
         [{generated,true},{location,{96,20}}],
         [{tuple,
           [{generated,true},{location,{96,20}}],
           [{atom,{96,20},state},
            {var,{96,20},'_'},
            {var,{96,20},rec5},
            {var,{96,20},'_'},
            {var,{96,20},'_'}]}],
         [],
         [{var,{96,20},rec5}]},
        {clause,
         [{generated,true},{location,{96,20}}],
         [{var,{96,20},rec5}],
         [],
         [{call,
           [{generated,true},{location,{96,20}}],
           {remote,
            [{generated,true},{location,{96,20}}],
            {atom,[{generated,true},{location,{96,20}}],erlang},
            {atom,[{generated,true},{location,{96,20}}],error}},
           [{tuple,
             [{generated,true},{location,{96,20}}],
             [{atom,[{generated,true},{location,{96,20}}],badrecord},
              {var,{96,20},rec5}]}]}]}]}}},
    {debug_line,97,15},
    {match,
     {97,5},
     {var,{97,5},'PostOps'},
     {cons,
      {97,15},
      {var,{97,16},'Op'},
      {'case',
       {97,21},
       {var,{97,21},'S'},
       [{clause,
         [{generated,true},{location,{97,21}}],
         [{tuple,
           [{generated,true},{location,{97,21}}],
           [{atom,{97,21},state},
            {var,{97,21},'_'},
            {var,{97,21},'_'},
            {var,{97,21},rec6},
            {var,{97,21},'_'}]}],
         [],
         [{var,{97,21},rec6}]},
        {clause,
         [{generated,true},{location,{97,21}}],
         [{var,{97,21},rec6}],
         [],
         [{call,
           [{generated,true},{location,{97,21}}],
           {remote,
            [{generated,true},{location,{97,21}}],
            {atom,[{generated,true},{location,{97,21}}],erlang},
            {atom,[{generated,true},{location,{97,21}}],error}},
           [{tuple,
             [{generated,true},{location,{97,21}}],
             [{atom,[{generated,true},{location,{97,21}}],badrecord},
              {var,{97,21},rec6}]}]}]}]}}},
    {debug_line,98,16},
    {call,
     {98,5},
     {atom,{98,5},init_transform},
     [{var,{98,20},'Tail'},
      {block,0,
       [{block,
         {98,26},
         [{match,{98,26},{var,{98,26},rec7},{var,{98,26},'S'}},
          {'case',
           {98,34},
           {var,{98,26},rec7},
           [{clause,
             {98,34},
             [{tuple,
               {98,34},
               [{atom,{98,34},state},
                {var,{98,34},'_'},
                {var,{98,34},'_'},
                {var,{98,34},'_'},
                {var,{98,34},'_'}]}],
             [],
             [{call,
               {98,34},
               {remote,
                {98,34},
                {atom,{98,34},erlang},
                {atom,{98,34},setelement}},
               [{integer,{98,34},3},
                {call,
                 {98,52},
                 {remote,
                  {98,52},
                  {atom,{98,52},erlang},
                  {atom,{98,52},setelement}},
                 [{integer,{98,52},4},
                  {var,{98,26},rec7},
                  {var,{98,63},'PostOps'}]},
                {var,{98,44},'PreOps'}]}]},
            {clause,
             [{generated,true},{location,{98,34}}],
             [{var,[{generated,true},{location,{98,34}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{98,34}}],
               {remote,
                [{generated,true},{location,{98,34}}],
                {atom,[{generated,true},{location,{98,34}}],erlang},
                {atom,[{generated,true},{location,{98,34}}],error}},
               [{tuple,
                 [{generated,true},{location,{98,34}}],
                 [{atom,[{generated,true},{location,{98,34}}],badrecord},
                  {var,{98,26},rec7}]}]}]}]}]}]}]}]},
  {clause,
   {99,1},
   [{cons,
     {99,16},
     {tuple,
      {99,17},
      [{atom,{99,18},attribute},{atom,{99,29},delete},{var,{99,37},'Name'}]},
     {var,{99,45},'Tail'}},
    {var,{99,52},'S'}],
   [],
   [{debug_line,100,17},
    {match,
     {100,5},
     {var,{100,5},'Op'},
     {tuple,{100,10},[{atom,{100,11},delete},{var,{100,19},'Name'}]}},
    {debug_line,101,18},
    {match,
     {101,5},
     {var,{101,5},'PreOps'},
     {cons,
      {101,14},
      {var,{101,15},'Op'},
      {'case',
       {101,20},
       {var,{101,20},'S'},
       [{clause,
         [{generated,true},{location,{101,20}}],
         [{tuple,
           [{generated,true},{location,{101,20}}],
           [{atom,{101,20},state},
            {var,{101,20},'_'},
            {var,{101,20},rec8},
            {var,{101,20},'_'},
            {var,{101,20},'_'}]}],
         [],
         [{var,{101,20},rec8}]},
        {clause,
         [{generated,true},{location,{101,20}}],
         [{var,{101,20},rec8}],
         [],
         [{call,
           [{generated,true},{location,{101,20}}],
           {remote,
            [{generated,true},{location,{101,20}}],
            {atom,[{generated,true},{location,{101,20}}],erlang},
            {atom,[{generated,true},{location,{101,20}}],error}},
           [{tuple,
             [{generated,true},{location,{101,20}}],
             [{atom,[{generated,true},{location,{101,20}}],badrecord},
              {var,{101,20},rec8}]}]}]}]}}},
    {debug_line,102,19},
    {call,
     {102,5},
     {atom,{102,5},init_transform},
     [{var,{102,20},'Tail'},
      {block,0,
       [{block,
         {102,26},
         [{match,{102,26},{var,{102,26},rec9},{var,{102,26},'S'}},
          {'case',
           {102,34},
           {var,{102,26},rec9},
           [{clause,
             {102,34},
             [{tuple,
               {102,34},
               [{atom,{102,34},state},
                {var,{102,34},'_'},
                {var,{102,34},'_'},
                {var,{102,34},'_'},
                {var,{102,34},'_'}]}],
             [],
             [{call,
               {102,34},
               {remote,
                {102,34},
                {atom,{102,34},erlang},
                {atom,{102,34},setelement}},
               [{integer,{102,34},3},
                {var,{102,26},rec9},
                {var,{102,44},'PreOps'}]}]},
            {clause,
             [{generated,true},{location,{102,34}}],
             [{var,[{generated,true},{location,{102,34}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{102,34}}],
               {remote,
                [{generated,true},{location,{102,34}}],
                {atom,[{generated,true},{location,{102,34}}],erlang},
                {atom,[{generated,true},{location,{102,34}}],error}},
               [{tuple,
                 [{generated,true},{location,{102,34}}],
                 [{atom,[{generated,true},{location,{102,34}}],badrecord},
                  {var,{102,26},rec9}]}]}]}]}]}]}]}]},
  {clause,
   {103,1},
   [{cons,{103,16},{var,{103,17},'_'},{var,{103,21},'T'}},{var,{103,25},'S'}],
   [],
   [{debug_line,104,20},
    {call,
     {104,5},
     {atom,{104,5},init_transform},
     [{var,{104,20},'T'},{var,{104,23},'S'}]}]},
  {clause,
   {105,1},
   [{nil,{105,16}},{var,{105,20},'S'}],
   [],
   [{debug_line,106,21},{var,{106,5},'S'}]}]}.
{function,
 {111,1},
 pre_transform,1,
 [{clause,
   {111,1},
   [{var,{111,1},'_'}],
   [[{call,
      {111,1},
      {remote,{111,1},{atom,{111,1},fake},{atom,{111,1},is_beam_bif_info}},
      []}]],
   [{debug_line,111,22},{atom,{111,1},ignore}]},
  {clause,
   {111,1},
   [{match,
     {111,15},
     {tuple,
      {111,15},
      [{atom,{111,15},state},
       {var,{111,15},'_'},
       {nil,{111,32}},
       {var,{111,15},'_'},
       {var,{111,15},'_'}]},
     {var,{111,38},'S'}}],
   [],
   [{debug_line,112,23},{var,{112,5},'S'}]},
  {clause,
   {113,1},
   [{var,{113,15},'S'}],
   [],
   [{debug_line,114,24},
    {call,
     {114,5},
     {atom,{114,5},pre_transform},
     [{block,0,
       [{'case',
         {114,19},
         {var,{114,19},'S'},
         [{clause,
           [{generated,true},{location,{114,19}}],
           [{tuple,
             [{generated,true},{location,{114,19}}],
             [{atom,{114,19},state},
              {var,{114,19},rec10},
              {var,{114,19},'_'},
              {var,{114,19},'_'},
              {var,{114,19},'_'}]}],
           [],
           [{var,{114,19},rec10}]},
          {clause,
           [{generated,true},{location,{114,19}}],
           [{var,{114,19},rec10}],
           [],
           [{call,
             [{generated,true},{location,{114,19}}],
             {remote,
              [{generated,true},{location,{114,19}}],
              {atom,[{generated,true},{location,{114,19}}],erlang},
              {atom,[{generated,true},{location,{114,19}}],error}},
             [{tuple,
               [{generated,true},{location,{114,19}}],
               [{atom,[{generated,true},{location,{114,19}}],badrecord},
                {var,{114,19},rec10}]}]}]}]}]},
      {nil,{114,34}},
      {var,{114,38},'S'}]}]}]}.
{function,
 {116,1},
 pre_transform,3,
 [{clause,
   {116,1},
   [{var,{116,1},'_'},{var,{116,1},'_'},{var,{116,1},'_'}],
   [[{call,
      {116,1},
      {remote,{116,1},{atom,{116,1},fake},{atom,{116,1},is_beam_bif_info}},
      []}]],
   [{debug_line,116,25},{atom,{116,1},ignore}]},
  {clause,
   {116,1},
   [{cons,{116,15},{var,{116,16},'H'},{var,{116,20},'T'}},
    {var,{116,24},'Acc'},
    {var,{116,29},'S'}],
   [],
   [{debug_line,117,26},
    {'case',
     {117,5},
     {var,{117,10},'H'},
     [{clause,
       {118,2},
       [{tuple,
         {118,2},
         [{atom,{118,3},attribute},
          {var,{118,14},'Anno'},
          {var,{118,20},'Name'},
          {var,{118,26},'Val'}]}],
       [],
       [{debug_line,119,27},
        {'case',
         {119,6},
         {call,
          {119,11},
          {remote,{119,16},{atom,{119,11},lists},{atom,{119,17},keyfind}},
          [{var,{119,25},'Name'},
           {integer,{119,31},2},
           {block,0,
            [{'case',
              {119,34},
              {var,{119,34},'S'},
              [{clause,
                [{generated,true},{location,{119,34}}],
                [{tuple,
                  [{generated,true},{location,{119,34}}],
                  [{atom,{119,34},state},
                   {var,{119,34},'_'},
                   {var,{119,34},rec11},
                   {var,{119,34},'_'},
                   {var,{119,34},'_'}]}],
                [],
                [{var,{119,34},rec11}]},
               {clause,
                [{generated,true},{location,{119,34}}],
                [{var,{119,34},rec11}],
                [],
                [{call,
                  [{generated,true},{location,{119,34}}],
                  {remote,
                   [{generated,true},{location,{119,34}}],
                   {atom,[{generated,true},{location,{119,34}}],erlang},
                   {atom,[{generated,true},{location,{119,34}}],error}},
                  [{tuple,
                    [{generated,true},{location,{119,34}}],
                    [{atom,[{generated,true},{location,{119,34}}],badrecord},
                     {var,{119,34},rec11}]}]}]}]}]}]},
         [{clause,
           {120,3},
           [{atom,{120,3},false}],
           [],
           [{debug_line,121,28},
            {call,
             {121,7},
             {atom,{121,7},pre_transform},
             [{var,{121,21},'T'},
              {block,0,
               [{cons,{121,24},{var,{121,25},'H'},{var,{121,29},'Acc'}}]},
              {var,{121,35},'S'}]}]},
          {clause,
           {123,3},
           [{tuple,
             {123,3},
             [{atom,{123,4},replace},
              {var,{123,13},'Name'},
              {var,{123,19},'NewVal'}]}],
           [],
           [{debug_line,124,29},
            {call,
             {124,7},
             {atom,{124,7},report_warning},
             [{block,0,[{string,{124,22},"Replace attribute ~p: ~p -> ~p~n"}]},
              {block,0,
               [{debug_line,125,30},
                {cons,
                 {125,8},
                 {var,{125,9},'Name'},
                 {cons,
                  {125,15},
                  {var,{125,15},'Val'},
                  {cons,{125,20},{var,{125,20},'NewVal'},{nil,{125,26}}}}}]},
              {var,{126,8},'S'}]},
            {debug_line,127,31},
            {match,
             {127,7},
             {var,{127,7},'New'},
             {tuple,
              {127,13},
              [{atom,{127,14},attribute},
               {var,{127,25},'Anno'},
               {var,{127,31},'Name'},
               {var,{127,37},'NewVal'}]}},
            {debug_line,128,32},
            {match,
             {128,7},
             {var,{128,7},'Pre'},
             {call,
              {128,13},
              {remote,
               {128,18},
               {atom,{128,13},lists},
               {atom,{128,19},keydelete}},
              [{var,{128,29},'Name'},
               {integer,{128,35},2},
               {block,0,
                [{'case',
                  {128,38},
                  {var,{128,38},'S'},
                  [{clause,
                    [{generated,true},{location,{128,38}}],
                    [{tuple,
                      [{generated,true},{location,{128,38}}],
                      [{atom,{128,38},state},
                       {var,{128,38},'_'},
                       {var,{128,38},rec12},
                       {var,{128,38},'_'},
                       {var,{128,38},'_'}]}],
                    [],
                    [{var,{128,38},rec12}]},
                   {clause,
                    [{generated,true},{location,{128,38}}],
                    [{var,{128,38},rec12}],
                    [],
                    [{call,
                      [{generated,true},{location,{128,38}}],
                      {remote,
                       [{generated,true},{location,{128,38}}],
                       {atom,[{generated,true},{location,{128,38}}],erlang},
                       {atom,[{generated,true},{location,{128,38}}],error}},
                      [{tuple,
                        [{generated,true},{location,{128,38}}],
                        [{atom,
                          [{generated,true},{location,{128,38}}],
                          badrecord},
                         {var,{128,38},rec12}]}]}]}]}]}]}},
            {debug_line,129,33},
            {match,
             {129,7},
             {var,{129,7},'Post'},
             {call,
              {129,14},
              {remote,
               {129,19},
               {atom,{129,14},lists},
               {atom,{129,20},keydelete}},
              [{var,{129,30},'Name'},
               {integer,{129,36},2},
               {block,0,
                [{'case',
                  {129,39},
                  {var,{129,39},'S'},
                  [{clause,
                    [{generated,true},{location,{129,39}}],
                    [{tuple,
                      [{generated,true},{location,{129,39}}],
                      [{atom,{129,39},state},
                       {var,{129,39},'_'},
                       {var,{129,39},'_'},
                       {var,{129,39},rec13},
                       {var,{129,39},'_'}]}],
                    [],
                    [{var,{129,39},rec13}]},
                   {clause,
                    [{generated,true},{location,{129,39}}],
                    [{var,{129,39},rec13}],
                    [],
                    [{call,
                      [{generated,true},{location,{129,39}}],
                      {remote,
                       [{generated,true},{location,{129,39}}],
                       {atom,[{generated,true},{location,{129,39}}],erlang},
                       {atom,[{generated,true},{location,{129,39}}],error}},
                      [{tuple,
                        [{generated,true},{location,{129,39}}],
                        [{atom,
                          [{generated,true},{location,{129,39}}],
                          badrecord},
                         {var,{129,39},rec13}]}]}]}]}]}]}},
            {debug_line,130,34},
            {match,
             {130,7},
             {var,{130,7},'S2'},
             {block,
              {130,12},
              [{match,{130,12},{var,{130,12},rec14},{var,{130,12},'S'}},
               {'case',
                {130,20},
                {var,{130,12},rec14},
                [{clause,
                  {130,20},
                  [{tuple,
                    {130,20},
                    [{atom,{130,20},state},
                     {var,{130,20},'_'},
                     {var,{130,20},'_'},
                     {var,{130,20},'_'},
                     {var,{130,20},'_'}]}],
                  [],
                  [{call,
                    {130,20},
                    {remote,
                     {130,20},
                     {atom,{130,20},erlang},
                     {atom,{130,20},setelement}},
                    [{integer,{130,20},3},
                     {call,
                      {130,35},
                      {remote,
                       {130,35},
                       {atom,{130,35},erlang},
                       {atom,{130,35},setelement}},
                      [{integer,{130,35},4},
                       {var,{130,12},rec14},
                       {var,{130,46},'Post'}]},
                     {var,{130,30},'Pre'}]}]},
                 {clause,
                  [{generated,true},{location,{130,20}}],
                  [{var,[{generated,true},{location,{130,20}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{130,20}}],
                    {remote,
                     [{generated,true},{location,{130,20}}],
                     {atom,[{generated,true},{location,{130,20}}],erlang},
                     {atom,[{generated,true},{location,{130,20}}],error}},
                    [{tuple,
                      [{generated,true},{location,{130,20}}],
                      [{atom,[{generated,true},{location,{130,20}}],badrecord},
                       {var,{130,12},rec14}]}]}]}]}]}},
            {debug_line,131,35},
            {'if',
             {131,7},
             [{clause,
               {132,4},
               [],
               [[{op,{132,8},'==',{var,{132,4},'Pre'},{nil,{132,11}}}]],
               [{debug_line,134,36},
                {match,
                 {134,8},
                 {var,{134,8},'Forms'},
                 {call,
                  {134,16},
                  {remote,
                   {134,21},
                   {atom,{134,16},lists},
                   {atom,{134,22},reverse}},
                  [{var,{134,30},'Acc'},
                   {block,0,
                    [{cons,
                      {134,35},
                      {var,{134,36},'New'},
                      {var,{134,42},'T'}}]}]}},
                {debug_line,135,37},
                {block,
                 {135,8},
                 [{match,{135,8},{var,{135,8},rec15},{var,{135,8},'S2'}},
                  {'case',
                   {135,17},
                   {var,{135,8},rec15},
                   [{clause,
                     {135,17},
                     [{tuple,
                       {135,17},
                       [{atom,{135,17},state},
                        {var,{135,17},'_'},
                        {var,{135,17},'_'},
                        {var,{135,17},'_'},
                        {var,{135,17},'_'}]}],
                     [],
                     [{call,
                       {135,17},
                       {remote,
                        {135,17},
                        {atom,{135,17},erlang},
                        {atom,{135,17},setelement}},
                       [{integer,{135,17},2},
                        {var,{135,8},rec15},
                        {var,{135,25},'Forms'}]}]},
                    {clause,
                     [{generated,true},{location,{135,17}}],
                     [{var,[{generated,true},{location,{135,17}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{135,17}}],
                       {remote,
                        [{generated,true},{location,{135,17}}],
                        {atom,[{generated,true},{location,{135,17}}],erlang},
                        {atom,[{generated,true},{location,{135,17}}],error}},
                       [{tuple,
                         [{generated,true},{location,{135,17}}],
                         [{atom,
                           [{generated,true},{location,{135,17}}],
                           badrecord},
                          {var,{135,8},rec15}]}]}]}]}]}]},
              {clause,
               {136,4},
               [],
               [[{atom,{136,4},true}]],
               [{debug_line,137,38},
                {call,
                 {137,8},
                 {atom,{137,8},pre_transform},
                 [{var,{137,22},'T'},
                  {block,0,
                   [{cons,
                     {137,25},
                     {var,{137,26},'New'},
                     {var,{137,32},'Acc'}}]},
                  {var,{137,38},'S2'}]}]}]}]},
          {clause,
           {140,3},
           [{tuple,{140,3},[{atom,{140,4},delete},{var,{140,12},'Name'}]}],
           [],
           [{debug_line,141,39},
            {call,
             {141,7},
             {atom,{141,7},report_warning},
             [{block,0,[{string,{141,22},"Delete attribute ~p: ~p~n"}]},
              {block,0,
               [{debug_line,142,40},
                {cons,
                 {142,8},
                 {var,{142,9},'Name'},
                 {cons,{142,15},{var,{142,15},'Val'},{nil,{142,18}}}}]},
              {var,{143,8},'S'}]},
            {debug_line,144,41},
            {call,
             {144,7},
             {atom,{144,7},pre_transform},
             [{var,{144,21},'T'},
              {var,{144,24},'Acc'},
              {var,{144,29},'S'}]}]}]}]},
      {clause,
       {146,2},
       [{var,{146,2},'_Any'}],
       [],
       [{debug_line,147,42},
        {call,
         {147,6},
         {atom,{147,6},pre_transform},
         [{var,{147,20},'T'},
          {block,0,[{cons,{147,23},{var,{147,24},'H'},{var,{147,28},'Acc'}}]},
          {var,{147,34},'S'}]}]}]}]},
  {clause,
   {149,1},
   [{nil,{149,15}},{var,{149,19},'Acc'},{var,{149,24},'S'}],
   [],
   [{debug_line,150,43},
    {block,
     {150,5},
     [{match,
       {150,13},
       {var,{150,13},rec16},
       {call,
        {150,21},
        {remote,{150,26},{atom,{150,21},lists},{atom,{150,27},reverse}},
        [{var,{150,35},'Acc'}]}},
      {match,{150,5},{var,{150,5},rec17},{var,{150,5},'S'}},
      {'case',
       {150,13},
       {var,{150,5},rec17},
       [{clause,
         {150,13},
         [{tuple,
           {150,13},
           [{atom,{150,13},state},
            {var,{150,13},'_'},
            {var,{150,13},'_'},
            {var,{150,13},'_'},
            {var,{150,13},'_'}]}],
         [],
         [{call,
           {150,13},
           {remote,{150,13},{atom,{150,13},erlang},{atom,{150,13},setelement}},
           [{integer,{150,13},2},{var,{150,5},rec17},{var,{150,13},rec16}]}]},
        {clause,
         [{generated,true},{location,{150,13}}],
         [{var,[{generated,true},{location,{150,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{150,13}}],
           {remote,
            [{generated,true},{location,{150,13}}],
            {atom,[{generated,true},{location,{150,13}}],erlang},
            {atom,[{generated,true},{location,{150,13}}],error}},
           [{tuple,
             [{generated,true},{location,{150,13}}],
             [{atom,[{generated,true},{location,{150,13}}],badrecord},
              {var,{150,5},rec17}]}]}]}]}]}]}]}.
{function,
 {155,1},
 post_transform,1,
 [{clause,
   {155,1},
   [{var,{155,1},'_'}],
   [[{call,
      {155,1},
      {remote,{155,1},{atom,{155,1},fake},{atom,{155,1},is_beam_bif_info}},
      []}]],
   [{debug_line,155,44},{atom,{155,1},ignore}]},
  {clause,
   {155,1},
   [{match,
     {155,16},
     {tuple,
      {155,16},
      [{atom,{155,16},state},
       {var,{155,16},'_'},
       {var,{155,16},'_'},
       {nil,{155,34}},
       {var,{155,16},'_'}]},
     {var,{155,40},'S'}}],
   [],
   [{debug_line,156,45},{var,{156,5},'S'}]},
  {clause,
   {157,1},
   [{var,{157,16},'S'}],
   [],
   [{debug_line,158,46},
    {call,
     {158,5},
     {atom,{158,5},post_transform},
     [{block,0,
       [{'case',
         {158,20},
         {var,{158,20},'S'},
         [{clause,
           [{generated,true},{location,{158,20}}],
           [{tuple,
             [{generated,true},{location,{158,20}}],
             [{atom,{158,20},state},
              {var,{158,20},rec18},
              {var,{158,20},'_'},
              {var,{158,20},'_'},
              {var,{158,20},'_'}]}],
           [],
           [{var,{158,20},rec18}]},
          {clause,
           [{generated,true},{location,{158,20}}],
           [{var,{158,20},rec18}],
           [],
           [{call,
             [{generated,true},{location,{158,20}}],
             {remote,
              [{generated,true},{location,{158,20}}],
              {atom,[{generated,true},{location,{158,20}}],erlang},
              {atom,[{generated,true},{location,{158,20}}],error}},
             [{tuple,
               [{generated,true},{location,{158,20}}],
               [{atom,[{generated,true},{location,{158,20}}],badrecord},
                {var,{158,20},rec18}]}]}]}]}]},
      {nil,{158,35}},
      {var,{158,39},'S'}]}]}]}.
{function,
 {160,1},
 post_transform,3,
 [{clause,
   {160,1},
   [{var,{160,1},'_'},{var,{160,1},'_'},{var,{160,1},'_'}],
   [[{call,
      {160,1},
      {remote,{160,1},{atom,{160,1},fake},{atom,{160,1},is_beam_bif_info}},
      []}]],
   [{debug_line,160,47},{atom,{160,1},ignore}]},
  {clause,
   {160,1},
   [{cons,{160,16},{var,{160,17},'H'},{var,{160,21},'T'}},
    {var,{160,25},'Acc'},
    {var,{160,30},'S'}],
   [],
   [{debug_line,161,48},
    {'case',
     {161,5},
     {var,{161,10},'H'},
     [{clause,
       {162,2},
       [{match,
         {162,2},
         {tuple,
          {162,2},
          [{atom,{162,3},attribute},
           {var,{162,14},'Anno'},
           {atom,{162,20},module},
           {var,{162,28},'_Val'}]},
         {var,{162,36},'Attribute'}}],
       [],
       [{debug_line,163,49},
        {match,
         {163,6},
         {var,{163,6},'Acc2'},
         {call,
          {163,13},
          {remote,{163,18},{atom,{163,13},lists},{atom,{163,19},reverse}},
          [{block,0,
            [{cons,
              {163,27},
              {var,{163,28},'Attribute'},
              {var,{163,40},'Acc'}}]}]}},
        {debug_line,164,50},
        {match,
         {164,6},
         {var,{164,6},'Forms'},
         {op,
          {164,19},
          '++',
          {var,{164,14},'Acc2'},
          {op,
           {164,55},
           '++',
           {call,
            {164,22},
            {atom,{164,22},attrs},
            [{block,0,
              [{'case',
                {164,28},
                {var,{164,28},'S'},
                [{clause,
                  [{generated,true},{location,{164,28}}],
                  [{tuple,
                    [{generated,true},{location,{164,28}}],
                    [{atom,{164,28},state},
                     {var,{164,28},'_'},
                     {var,{164,28},'_'},
                     {var,{164,28},rec19},
                     {var,{164,28},'_'}]}],
                  [],
                  [{var,{164,28},rec19}]},
                 {clause,
                  [{generated,true},{location,{164,28}}],
                  [{var,{164,28},rec19}],
                  [],
                  [{call,
                    [{generated,true},{location,{164,28}}],
                    {remote,
                     [{generated,true},{location,{164,28}}],
                     {atom,[{generated,true},{location,{164,28}}],erlang},
                     {atom,[{generated,true},{location,{164,28}}],error}},
                    [{tuple,
                      [{generated,true},{location,{164,28}}],
                      [{atom,[{generated,true},{location,{164,28}}],badrecord},
                       {var,{164,28},rec19}]}]}]}]}]},
             {var,{164,46},'Anno'},
             {var,{164,52},'S'}]},
           {var,{164,58},'T'}}}},
        {debug_line,165,51},
        {block,
         {165,6},
         [{match,{165,6},{var,{165,6},rec20},{var,{165,6},'S'}},
          {'case',
           {165,14},
           {var,{165,6},rec20},
           [{clause,
             {165,14},
             [{tuple,
               {165,14},
               [{atom,{165,14},state},
                {var,{165,14},'_'},
                {var,{165,14},'_'},
                {var,{165,14},'_'},
                {var,{165,14},'_'}]}],
             [],
             [{call,
               {165,14},
               {remote,
                {165,14},
                {atom,{165,14},erlang},
                {atom,{165,14},setelement}},
               [{integer,{165,14},2},
                {call,
                 {165,29},
                 {remote,
                  {165,29},
                  {atom,{165,29},erlang},
                  {atom,{165,29},setelement}},
                 [{integer,{165,29},4},{var,{165,6},rec20},{nil,{165,40}}]},
                {var,{165,22},'Forms'}]}]},
            {clause,
             [{generated,true},{location,{165,14}}],
             [{var,[{generated,true},{location,{165,14}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{165,14}}],
               {remote,
                [{generated,true},{location,{165,14}}],
                {atom,[{generated,true},{location,{165,14}}],erlang},
                {atom,[{generated,true},{location,{165,14}}],error}},
               [{tuple,
                 [{generated,true},{location,{165,14}}],
                 [{atom,[{generated,true},{location,{165,14}}],badrecord},
                  {var,{165,6},rec20}]}]}]}]}]}]},
      {clause,
       {166,2},
       [{var,{166,2},'_Any'}],
       [],
       [{debug_line,167,52},
        {call,
         {167,6},
         {atom,{167,6},post_transform},
         [{var,{167,21},'T'},
          {block,0,[{cons,{167,24},{var,{167,25},'H'},{var,{167,29},'Acc'}}]},
          {var,{167,35},'S'}]}]}]}]},
  {clause,
   {169,1},
   [{nil,{169,16}},{var,{169,20},'Acc'},{var,{169,25},'S'}],
   [],
   [{debug_line,170,53},
    {block,
     {170,5},
     [{match,
       {170,13},
       {var,{170,13},rec21},
       {call,
        {170,21},
        {remote,{170,26},{atom,{170,21},lists},{atom,{170,27},reverse}},
        [{var,{170,35},'Acc'}]}},
      {match,{170,5},{var,{170,5},rec22},{var,{170,5},'S'}},
      {'case',
       {170,13},
       {var,{170,5},rec22},
       [{clause,
         {170,13},
         [{tuple,
           {170,13},
           [{atom,{170,13},state},
            {var,{170,13},'_'},
            {var,{170,13},'_'},
            {var,{170,13},'_'},
            {var,{170,13},'_'}]}],
         [],
         [{call,
           {170,13},
           {remote,{170,13},{atom,{170,13},erlang},{atom,{170,13},setelement}},
           [{integer,{170,13},2},{var,{170,5},rec22},{var,{170,13},rec21}]}]},
        {clause,
         [{generated,true},{location,{170,13}}],
         [{var,[{generated,true},{location,{170,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{170,13}}],
           {remote,
            [{generated,true},{location,{170,13}}],
            {atom,[{generated,true},{location,{170,13}}],erlang},
            {atom,[{generated,true},{location,{170,13}}],error}},
           [{tuple,
             [{generated,true},{location,{170,13}}],
             [{atom,[{generated,true},{location,{170,13}}],badrecord},
              {var,{170,5},rec22}]}]}]}]}]}]}]}.
{function,
    {172,1},
    attrs,3,
    [{clause,
         {172,1},
         [{var,{172,1},'_'},{var,{172,1},'_'},{var,{172,1},'_'}],
         [[{call,
               {172,1},
               {remote,
                   {172,1},
                   {atom,{172,1},fake},
                   {atom,{172,1},is_beam_bif_info}},
               []}]],
         [{debug_line,172,54},{atom,{172,1},ignore}]},
     {clause,
         {172,1},
         [{cons,
              {172,7},
              {tuple,
                  {172,8},
                  [{atom,{172,9},replace},
                   {var,{172,18},'Name'},
                   {var,{172,24},'NewVal'}]},
              {var,{172,34},'T'}},
          {var,{172,38},'Anno'},
          {var,{172,44},'S'}],
         [],
         [{debug_line,173,55},
          {call,
              {173,5},
              {atom,{173,5},report_verbose},
              [{block,0,[{string,{173,20},"Insert attribute ~p: ~p~n"}]},
               {block,0,
                   [{cons,
                        {173,49},
                        {var,{173,50},'Name'},
                        {cons,
                            {173,56},
                            {var,{173,56},'NewVal'},
                            {nil,{173,62}}}}]},
               {var,{173,65},'S'}]},
          {debug_line,174,56},
          {cons,
              {174,5},
              {tuple,
                  {174,6},
                  [{atom,{174,7},attribute},
                   {var,{174,18},'Anno'},
                   {var,{174,24},'Name'},
                   {var,{174,30},'NewVal'}]},
              {call,
                  {174,40},
                  {atom,{174,40},attrs},
                  [{var,{174,46},'T'},
                   {var,{174,49},'Anno'},
                   {var,{174,55},'S'}]}}]},
     {clause,
         {175,1},
         [{cons,
              {175,7},
              {tuple,
                  {175,8},
                  [{atom,{175,9},insert},
                   {var,{175,17},'Name'},
                   {var,{175,23},'NewVal'}]},
              {var,{175,33},'T'}},
          {var,{175,37},'Anno'},
          {var,{175,43},'S'}],
         [],
         [{debug_line,176,57},
          {call,
              {176,5},
              {atom,{176,5},report_verbose},
              [{block,0,[{string,{176,20},"Insert attribute ~p: ~p~n"}]},
               {block,0,
                   [{cons,
                        {176,49},
                        {var,{176,50},'Name'},
                        {cons,
                            {176,56},
                            {var,{176,56},'NewVal'},
                            {nil,{176,62}}}}]},
               {var,{176,65},'S'}]},
          {debug_line,177,58},
          {cons,
              {177,5},
              {tuple,
                  {177,6},
                  [{atom,{177,7},attribute},
                   {var,{177,18},'Anno'},
                   {var,{177,24},'Name'},
                   {var,{177,30},'NewVal'}]},
              {call,
                  {177,40},
                  {atom,{177,40},attrs},
                  [{var,{177,46},'T'},
                   {var,{177,49},'Anno'},
                   {var,{177,55},'S'}]}}]},
     {clause,
         {178,1},
         [{nil,{178,7}},{var,{178,11},'_'},{var,{178,14},'_'}],
         [],
         [{debug_line,179,59},{nil,{179,5}}]}]}.
{function,
    {187,1},
    report_warning,3,
    [{clause,
         {187,1},
         [{var,{187,1},'_'},{var,{187,1},'_'},{var,{187,1},'_'}],
         [[{call,
               {187,1},
               {remote,
                   {187,1},
                   {atom,{187,1},fake},
                   {atom,{187,1},is_beam_bif_info}},
               []}]],
         [{debug_line,187,60},{atom,{187,1},ignore}]},
     {clause,
         {187,1},
         [{var,{187,16},'Format'},{var,{187,24},'Args'},{var,{187,30},'S'}],
         [],
         [{debug_line,188,61},
          {'case',
              {188,5},
              {call,{188,10},{atom,{188,10},is_warning},[{var,{188,21},'S'}]},
              [{clause,
                   {189,2},
                   [{atom,{189,2},true}],
                   [],
                   [{debug_line,190,62},
                    {call,
                        {190,6},
                        {remote,
                            {190,8},
                            {atom,{190,6},io},
                            {atom,{190,9},format}},
                        [{block,0,
                             [{op,{190,35},
                                  '++',
                                  {string,{190,16},"~p: * WARNING * "},
                                  {var,{190,38},'Format'}}]},
                         {block,0,
                             [{cons,
                                  {190,46},
                                  {atom,{190,48},sys_pre_attributes},
                                  {var,{190,57},'Args'}}]}]}]},
               {clause,
                   {191,2},
                   [{atom,{191,2},false}],
                   [],
                   [{debug_line,192,63},{atom,{192,6},ok}]}]}]}]}.
{function,
    {195,1},
    report_verbose,3,
    [{clause,
         {195,1},
         [{var,{195,1},'_'},{var,{195,1},'_'},{var,{195,1},'_'}],
         [[{call,
               {195,1},
               {remote,
                   {195,1},
                   {atom,{195,1},fake},
                   {atom,{195,1},is_beam_bif_info}},
               []}]],
         [{debug_line,195,64},{atom,{195,1},ignore}]},
     {clause,
         {195,1},
         [{var,{195,16},'Format'},{var,{195,24},'Args'},{var,{195,30},'S'}],
         [],
         [{debug_line,196,65},
          {'case',
              {196,5},
              {call,{196,10},{atom,{196,10},is_verbose},[{var,{196,21},'S'}]},
              [{clause,
                   {197,2},
                   [{atom,{197,2},true}],
                   [],
                   [{debug_line,198,66},
                    {call,
                        {198,6},
                        {remote,
                            {198,8},
                            {atom,{198,6},io},
                            {atom,{198,9},format}},
                        [{block,0,
                             [{op,{198,23},
                                  '++',
                                  {string,{198,16},"~p: "},
                                  {var,{198,26},'Format'}}]},
                         {block,0,
                             [{cons,
                                  {198,34},
                                  {atom,{198,36},sys_pre_attributes},
                                  {var,{198,45},'Args'}}]}]}]},
               {clause,
                   {199,2},
                   [{atom,{199,2},false}],
                   [],
                   [{debug_line,200,67},{atom,{200,6},ok}]}]}]}]}.
{function,
 {203,1},
 is_warning,1,
 [{clause,
   {203,1},
   [{var,{203,1},'_'}],
   [[{call,
      {203,1},
      {remote,{203,1},{atom,{203,1},fake},{atom,{203,1},is_beam_bif_info}},
      []}]],
   [{debug_line,203,68},{atom,{203,1},ignore}]},
  {clause,
   {203,1},
   [{var,{203,12},'S'}],
   [],
   [{debug_line,204,69},
    {op,
     {204,52},
     'or',
     {call,
      {204,5},
      {remote,{204,10},{atom,{204,5},lists},{atom,{204,11},member}},
      [{atom,{204,18},report_warnings},
       {block,0,
        [{'case',
          {204,35},
          {var,{204,35},'S'},
          [{clause,
            [{generated,true},{location,{204,35}}],
            [{tuple,
              [{generated,true},{location,{204,35}}],
              [{atom,{204,35},state},
               {var,{204,35},'_'},
               {var,{204,35},'_'},
               {var,{204,35},'_'},
               {var,{204,35},rec23}]}],
            [],
            [{var,{204,35},rec23}]},
           {clause,
            [{generated,true},{location,{204,35}}],
            [{var,{204,35},rec23}],
            [],
            [{call,
              [{generated,true},{location,{204,35}}],
              {remote,
               [{generated,true},{location,{204,35}}],
               {atom,[{generated,true},{location,{204,35}}],erlang},
               {atom,[{generated,true},{location,{204,35}}],error}},
              [{tuple,
                [{generated,true},{location,{204,35}}],
                [{atom,[{generated,true},{location,{204,35}}],badrecord},
                 {var,{204,35},rec23}]}]}]}]}]}]},
     {call,{204,55},{atom,{204,55},is_verbose},[{var,{204,66},'S'}]}}]}]}.
{function,
 {206,1},
 is_verbose,1,
 [{clause,
   {206,1},
   [{var,{206,1},'_'}],
   [[{call,
      {206,1},
      {remote,{206,1},{atom,{206,1},fake},{atom,{206,1},is_beam_bif_info}},
      []}]],
   [{debug_line,206,70},{atom,{206,1},ignore}]},
  {clause,
   {206,1},
   [{var,{206,12},'S'}],
   [],
   [{debug_line,207,71},
    {call,
     {207,5},
     {remote,{207,10},{atom,{207,5},lists},{atom,{207,11},member}},
     [{atom,{207,18},verbose},
      {block,0,
       [{'case',
         {207,27},
         {var,{207,27},'S'},
         [{clause,
           [{generated,true},{location,{207,27}}],
           [{tuple,
             [{generated,true},{location,{207,27}}],
             [{atom,{207,27},state},
              {var,{207,27},'_'},
              {var,{207,27},'_'},
              {var,{207,27},'_'},
              {var,{207,27},rec24}]}],
           [],
           [{var,{207,27},rec24}]},
          {clause,
           [{generated,true},{location,{207,27}}],
           [{var,{207,27},rec24}],
           [],
           [{call,
             [{generated,true},{location,{207,27}}],
             {remote,
              [{generated,true},{location,{207,27}}],
              {atom,[{generated,true},{location,{207,27}}],erlang},
              {atom,[{generated,true},{location,{207,27}}],error}},
             [{tuple,
               [{generated,true},{location,{207,27}}],
               [{atom,[{generated,true},{location,{207,27}}],badrecord},
                {var,{207,27},rec24}]}]}]}]}]}]}]}]}.
{eof,{208,1}}.
