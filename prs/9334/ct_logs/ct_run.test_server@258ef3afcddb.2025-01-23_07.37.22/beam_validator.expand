{attribute,{1,1},file,{"beam_validator.erl",1}}.
{attribute,{20,2},module,beam_validator}.
{attribute,{1,1},file,{"beam_asm.hrl",1}}.
{attribute,{1,1},file,{"beam_types.hrl",1}}.
{attribute,{91,2},
           type,
           {float_range,{type,{91,24},
                              union,
                              [{atom,{91,24},any},
                               {type,{91,32},
                                     tuple,
                                     [{atom,{91,33},'-inf'},
                                      {type,{91,40},float,[]}]},
                               {type,{91,51},
                                     tuple,
                                     [{type,{91,52},float,[]},
                                      {atom,{91,60},'+inf'}]}]},
                        []}}.
{attribute,
    {93,2},
    record,
    {t_atom,
        [{typed_record_field,
             {record_field,{93,18},{atom,{93,18},elements},{atom,{93,27},any}},
             {type,
                 {93,34},
                 union,
                 [{atom,{93,34},any},
                  {remote_type,
                      {93,42},
                      [{atom,{93,42},ordsets},
                       {atom,{93,50},ordset},
                       [{type,{93,57},atom,[]}]]}]}}]}}.
{attribute,
    {94,2},
    record,
    {t_bitstring,
        [{typed_record_field,
             {record_field,
                 {94,23},
                 {atom,{94,23},size_unit},
                 {integer,{94,33},1}},
             {type,{94,38},pos_integer,[]}},
         {typed_record_field,
             {record_field,
                 {99,23},
                 {atom,{99,23},appendable},
                 {atom,{99,34},false}},
             {type,{99,43},boolean,[]}}]}}.
{attribute,
    {100,2},
    record,
    {t_bs_context,
        [{typed_record_field,
             {record_field,
                 {100,24},
                 {atom,{100,24},tail_unit},
                 {integer,{100,34},1}},
             {type,{100,39},pos_integer,[]}}]}}.
{attribute,
    {101,2},
    record,
    {t_bs_matchable,
        [{typed_record_field,
             {record_field,
                 {101,26},
                 {atom,{101,26},tail_unit},
                 {integer,{101,36},1}},
             {type,{101,41},pos_integer,[]}}]}}.
{attribute,
    {102,2},
    record,
    {t_float,
        [{typed_record_field,
             {record_field,
                 {102,19},
                 {atom,{102,19},elements},
                 {atom,{102,28},any}},
             {user_type,{102,35},float_range,[]}}]}}.
{attribute,
    {103,2},
    record,
    {t_fun,
        [{typed_record_field,
             {record_field,{103,17},{atom,{103,17},arity},{atom,{103,23},any}},
             {type,
                 {103,30},
                 union,
                 [{type,{103,30},arity,[]},{atom,{103,40},any}]}},
         {typed_record_field,
             {record_field,
                 {104,17},
                 {atom,{104,17},target},
                 {atom,{104,24},any}},
             {type,
                 {104,31},
                 union,
                 [{type,
                      {104,31},
                      tuple,
                      [{type,{104,32},atom,[]},
                       {type,{104,40},non_neg_integer,[]}]},
                  {atom,{104,61},any}]}},
         {typed_record_field,
             {record_field,{105,17},{atom,{105,17},type},{atom,{105,22},any}},
             {user_type,{105,29},type,[]}}]}}.
{attribute,
    {106,2},
    record,
    {t_integer,
        [{typed_record_field,
             {record_field,
                 {106,21},
                 {atom,{106,21},elements},
                 {atom,{106,30},any}},
             {type,
                 {106,37},
                 union,
                 [{atom,{106,37},any},
                  {remote_type,
                      {106,45},
                      [{atom,{106,45},beam_bounds},
                       {atom,{106,57},range},
                       []]}]}}]}}.
{attribute,
    {107,2},
    record,
    {t_number,
        [{typed_record_field,
             {record_field,
                 {107,20},
                 {atom,{107,20},elements},
                 {atom,{107,29},any}},
             {type,
                 {107,36},
                 union,
                 [{atom,{107,36},any},
                  {remote_type,
                      {107,44},
                      [{atom,{107,44},beam_bounds},
                       {atom,{107,56},range},
                       []]}]}}]}}.
{attribute,
    {113,2},
    record,
    {t_map,
        [{typed_record_field,
             {record_field,
                 {113,17},
                 {atom,{113,17},super_key},
                 {atom,{113,27},any}},
             {user_type,{113,34},type,[]}},
         {typed_record_field,
             {record_field,
                 {114,17},
                 {atom,{114,17},super_value},
                 {atom,{114,29},any}},
             {user_type,{114,36},type,[]}}]}}.
{attribute,
    {122,2},
    record,
    {t_cons,
        [{typed_record_field,
             {record_field,{122,18},{atom,{122,18},type},{atom,{122,23},any}},
             {user_type,{122,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {122,38},
                 {atom,{122,38},terminator},
                 {atom,{122,49},any}},
             {user_type,{122,56},type,[]}}]}}.
{attribute,
    {123,2},
    record,
    {t_list,
        [{typed_record_field,
             {record_field,{123,18},{atom,{123,18},type},{atom,{123,23},any}},
             {user_type,{123,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {123,38},
                 {atom,{123,38},terminator},
                 {atom,{123,49},any}},
             {user_type,{123,56},type,[]}}]}}.
{attribute,
    {125,2},
    record,
    {t_tuple,
        [{typed_record_field,
             {record_field,{125,19},{atom,{125,19},size},{integer,{125,24},0}},
             {type,{125,29},integer,[]}},
         {typed_record_field,
             {record_field,
                 {126,19},
                 {atom,{126,19},exact},
                 {atom,{126,25},false}},
             {type,{126,34},boolean,[]}},
         {typed_record_field,
             {record_field,
                 {127,19},
                 {atom,{127,19},elements},
                 {map,{127,28},[]}},
             {user_type,{127,35},tuple_elements,[]}}]}}.
{attribute,
    {146,2},
    type,
    {tuple_elements,
        {type,
            {146,27},
            map,
            [{type,
                 {146,51},
                 map_field_assoc,
                 [{ann_type,
                      {146,30},
                      [{var,{146,30},'Key'},{type,{146,37},pos_integer,[]}]},
                  {user_type,{146,54},type,[]}]}]},
        []}}.
{attribute,{148,2},
           type,
           {normal_type,{type,{148,24},
                              union,
                              [{atom,{148,24},any},
                               {atom,{148,32},none},
                               {type,{149,24},
                                     record,
                                     [{atom,{149,25},t_number}]},
                               {type,{149,38},
                                     record,
                                     [{atom,{149,39},t_float}]},
                               {type,{149,51},
                                     record,
                                     [{atom,{149,52},t_integer}]},
                               {type,{150,24},record,[{atom,{150,25},t_atom}]},
                               {type,{151,24},
                                     record,
                                     [{atom,{151,25},t_bitstring}]},
                               {type,{151,41},
                                     record,
                                     [{atom,{151,42},t_bs_context}]},
                               {type,{151,59},
                                     record,
                                     [{atom,{151,60},t_bs_matchable}]},
                               {type,{152,24},record,[{atom,{152,25},t_fun}]},
                               {type,{153,24},record,[{atom,{153,25},t_list}]},
                               {type,{153,36},record,[{atom,{153,37},t_cons}]},
                               {atom,{153,48},nil},
                               {atom,{154,24},other},
                               {type,{155,24},record,[{atom,{155,25},t_map}]},
                               {atom,{156,24},identifier},
                               {atom,{157,24},pid},
                               {atom,{158,24},port},
                               {atom,{159,24},reference},
                               {type,{160,24},
                                     record,
                                     [{atom,{160,25},t_tuple}]}]},
                        []}}.
{attribute,{162,2},
           type,
           {other_type,{type,{162,23},
                             union,
                             [{atom,{162,23},none},
                              {type,{162,32},record,[{atom,{162,33},t_fun}]},
                              {type,{162,43},record,[{atom,{162,44},t_map}]},
                              {atom,{163,23},pid},
                              {atom,{163,31},port},
                              {atom,{163,40},reference},
                              {atom,{163,54},identifier},
                              {type,{164,23},
                                    record,
                                    [{atom,{164,24},t_bitstring}]},
                              {type,{164,40},
                                    record,
                                    [{atom,{164,41},t_bs_context}]},
                              {type,{165,23},
                                    record,
                                    [{atom,{165,24},t_bs_matchable}]}]},
                       []}}.
{attribute,
    {167,2},
    type,
    {record_key,
        {type,
            {167,23},
            tuple,
            [{ann_type,
                 {167,24},
                 [{var,{167,24},'Arity'},{type,{167,33},integer,[]}]},
             {ann_type,
                 {167,44},
                 [{var,{167,44},'Tag'},{user_type,{167,51},normal_type,[]}]}]},
        []}}.
{attribute,
    {168,2},
    type,
    {record_set,
        {remote_type,
            {168,23},
            [{atom,{168,23},ordsets},
             {atom,{168,31},ordset},
             [{type,
                  {168,38},
                  tuple,
                  [{user_type,{168,39},record_key,[]},
                   {type,{168,53},record,[{atom,{168,54},t_tuple}]}]}]]},
        []}}.
{attribute,{169,2},
           type,
           {tuple_set,{type,{169,22},
                            union,
                            [{type,{169,22},record,[{atom,{169,23},t_tuple}]},
                             {user_type,{169,35},record_set,[]}]},
                      []}}.
{attribute,
    {173,2},
    record,
    {t_union,
        [{typed_record_field,
             {record_field,{173,19},{atom,{173,19},atom},{atom,{173,24},none}},
             {type,
                 {173,32},
                 union,
                 [{atom,{173,32},none},
                  {type,{173,41},record,[{atom,{173,42},t_atom}]}]}},
         {typed_record_field,
             {record_field,{174,19},{atom,{174,19},list},{atom,{174,24},none}},
             {type,
                 {174,32},
                 union,
                 [{atom,{174,32},none},
                  {type,{174,41},record,[{atom,{174,42},t_list}]},
                  {type,{174,53},record,[{atom,{174,54},t_cons}]},
                  {atom,{174,65},nil}]}},
         {typed_record_field,
             {record_field,
                 {175,19},
                 {atom,{175,19},number},
                 {atom,{175,26},none}},
             {type,
                 {175,34},
                 union,
                 [{atom,{175,34},none},
                  {type,{175,43},record,[{atom,{175,44},t_number}]},
                  {type,{175,57},record,[{atom,{175,58},t_float}]},
                  {type,{175,70},record,[{atom,{175,71},t_integer}]}]}},
         {typed_record_field,
             {record_field,
                 {176,19},
                 {atom,{176,19},tuple_set},
                 {atom,{176,29},none}},
             {type,
                 {176,37},
                 union,
                 [{atom,{176,37},none},{user_type,{176,46},tuple_set,[]}]}},
         {typed_record_field,
             {record_field,
                 {177,19},
                 {atom,{177,19},other},
                 {atom,{177,25},none}},
             {type,
                 {177,33},
                 union,
                 [{atom,{177,33},other},
                  {user_type,{177,43},other_type,[]}]}}]}}.
{attribute,{179,2},
           type,
           {type,{type,{179,17},
                       union,
                       [{type,{179,17},record,[{atom,{179,18},t_union}]},
                        {user_type,{179,30},normal_type,[]}]},
                 []}}.
{attribute,{22,1},file,{"beam_asm.hrl",22}}.
{attribute,{23,2},
           type,
           {reg_num,{type,{23,20},
                          range,
                          [{integer,{23,20},0},{integer,{23,25},1023}]},
                    []}}.
{attribute,{25,2},
           type,
           {xreg,{type,{25,17},
                       tuple,
                       [{atom,{25,18},x},{user_type,{25,23},reg_num,[]}]},
                 []}}.
{attribute,{26,2},
           type,
           {yreg,{type,{26,17},
                       tuple,
                       [{atom,{26,18},y},{user_type,{26,23},reg_num,[]}]},
                 []}}.
{attribute,{27,2},
           type,
           {freg,{type,{27,17},
                       tuple,
                       [{atom,{27,18},fr},{user_type,{27,24},reg_num,[]}]},
                 []}}.
{attribute,{28,2},
           type,
           {zreg,{type,{28,17},
                       tuple,
                       [{atom,{28,18},z},{user_type,{28,23},reg_num,[]}]},
                 []}}.
{attribute,{30,2},
           type,
           {beam_reg,{type,{30,21},
                           union,
                           [{user_type,{30,21},xreg,[]},
                            {user_type,{30,30},yreg,[]},
                            {user_type,{30,39},freg,[]}]},
                     []}}.
{attribute,
    {32,2},
    type,
    {beam_literal,
        {type,
            {32,25},
            union,
            [{type,
                 {32,25},
                 tuple,
                 [{atom,{32,26},atom},
                  {type,
                      {32,32},
                      union,
                      [{type,{32,32},nil,[]},{type,{32,37},atom,[]}]}]},
             {type,
                 {33,25},
                 tuple,
                 [{atom,{33,26},float},
                  {type,
                      {33,33},
                      union,
                      [{type,{33,33},nil,[]},{type,{33,38},float,[]}]}]},
             {type,
                 {34,25},
                 tuple,
                 [{atom,{34,26},integer},
                  {type,
                      {34,35},
                      union,
                      [{type,{34,35},nil,[]},{type,{34,40},integer,[]}]}]},
             {type,
                 {35,25},
                 tuple,
                 [{atom,{35,26},literal},{type,{35,35},term,[]}]},
             {atom,{36,25},nil}]},
        []}}.
{attribute,{44,2},
           record,
           {tr,[{typed_record_field,{record_field,{44,14},{atom,{44,14},r}},
                                    {user_type,{44,19},beam_reg,[]}},
                {typed_record_field,{record_field,{44,31},{atom,{44,31},t}},
                                    {user_type,{44,36},type,[]}}]}}.
{attribute,{24,1},file,{"beam_validator.erl",24}}.
{attribute,{35,2},compile,{no_auto_import,[{min,2}]}}.
{attribute,{38,2},compile,{no_auto_import,[{error,1}]}}.
{attribute,{41,2},export,[{validate,2},{format_error,1}]}.
{attribute,{43,2},
           import,
           {lists,[{dropwhile,2},{foldl,3},{member,2},{reverse,2},{zip,2}]}}.
{attribute,
    {47,2},
    spec,
    {{validate,2},
     [{type,
          {47,15},
          bounded_fun,
          [{type,
               {47,15},
               'fun',
               [{type,
                    {47,15},
                    product,
                    [{var,{47,16},'Code'},{var,{47,22},'Level'}]},
                {var,{47,32},'Result'}]},
           [{type,
                {48,7},
                constraint,
                [{atom,{48,7},is_subtype},
                 [{var,{48,7},'Code'},
                  {remote_type,
                      {48,15},
                      [{atom,{48,15},beam_utils},
                       {atom,{48,26},module_code},
                       []]}]]},
            {type,
                {49,7},
                constraint,
                [{atom,{49,7},is_subtype},
                 [{var,{49,7},'Level'},
                  {type,
                      {49,16},
                      union,
                      [{atom,{49,16},strong},{atom,{49,25},weak}]}]]},
            {type,
                {50,7},
                constraint,
                [{atom,{50,7},is_subtype},
                 [{var,{50,7},'Result'},
                  {type,
                      {50,17},
                      union,
                      [{atom,{50,17},ok},
                       {type,
                           {50,22},
                           tuple,
                           [{atom,{50,23},error},
                            {type,
                                {50,30},
                                list,
                                [{type,
                                     {50,31},
                                     tuple,
                                     [{type,{50,32},atom,[]},
                                      {type,{50,40},list,[]}]}]}]}]}]]}]]}]}}.
{function,
 {52,1},
 validate,2,
 [{clause,
   {52,1},
   [{var,{52,1},'_'},{var,{52,1},'_'}],
   [[{call,
      {52,1},
      {remote,{52,1},{atom,{52,1},fake},{atom,{52,1},is_beam_bif_info}},
      []}]],
   [{debug_line,52,1},{atom,{52,1},ignore}]},
  {clause,
   {52,1},
   [{tuple,
     {52,10},
     [{var,{52,11},'Mod'},
      {var,{52,15},'Exp'},
      {var,{52,19},'Attr'},
      {var,{52,24},'Fs'},
      {var,{52,27},'Lc'}]},
    {var,{52,32},'Level'}],
   [[{call,
      {52,44},
      {remote,{52,44},{atom,{52,44},erlang},{atom,{52,44},is_atom}},
      [{var,{52,52},'Mod'}]},
     {call,
      {53,44},
      {remote,{53,44},{atom,{53,44},erlang},{atom,{53,44},is_list}},
      [{var,{53,52},'Exp'}]},
     {call,
      {54,44},
      {remote,{54,44},{atom,{54,44},erlang},{atom,{54,44},is_list}},
      [{var,{54,52},'Attr'}]},
     {call,
      {55,44},
      {remote,{55,44},{atom,{55,44},erlang},{atom,{55,44},is_integer}},
      [{var,{55,55},'Lc'}]}]],
   [{debug_line,56,2},
    {match,
     {56,5},
     {var,{56,5},'Ft'},
     {call,
      {56,10},
      {atom,{56,10},build_function_table},
      [{var,{56,31},'Fs'},{block,0,[{map,{56,35},[]}]}]}},
    {debug_line,57,3},
    {'case',
     {57,5},
     {call,
      {57,10},
      {atom,{57,10},validate_0},
      [{var,{57,21},'Fs'},
       {var,{57,25},'Mod'},
       {var,{57,30},'Level'},
       {var,{57,37},'Ft'}]},
     [{clause,{58,9},[{nil,{58,9}}],[],[{debug_line,59,4},{atom,{59,13},ok}]},
      {clause,
       {60,9},
       [{var,{60,9},'Es0'}],
       [],
       [{debug_line,61,5},
        {match,
         {61,13},
         {var,{61,13},'Es'},
         {lc,
          {61,18},
          {block,0,
           [{tuple,
             {61,19},
             [{integer,{61,20},1},
              {atom,{61,23},beam_validator},
              {var,{61,30},'E'}]}]},
          [{block,0,[{atom,{61,41},true}]},
           {generate,{61,38},{var,{61,36},'E'},{var,{61,41},'Es0'}}]}},
        {debug_line,62,6},
        {tuple,
         {62,13},
         [{atom,{62,14},error},
          {cons,
           {62,20},
           {tuple,
            {62,21},
            [{call,
              {62,22},
              {remote,
               {62,22},
               {atom,{62,22},erlang},
               {atom,{62,22},atom_to_list}},
              [{var,{62,35},'Mod'}]},
             {var,{62,40},'Es'}]},
           {nil,{62,43}}}]}]}]}]}]}.
{attribute,{65,2},
           spec,
           {{format_error,1},
            [{type,{65,19},
                   'fun',
                   [{type,{65,19},product,[{type,{65,20},term,[]}]},
                    {type,{65,31},iolist,[]}]}]}}.
{function,
 {67,1},
 format_error,1,
 [{clause,
   {67,1},
   [{var,{67,1},'_'}],
   [[{call,
      {67,1},
      {remote,{67,1},{atom,{67,1},fake},{atom,{67,1},is_beam_bif_info}},
      []}]],
   [{debug_line,67,7},{atom,{67,1},ignore}]},
  {clause,
   {67,1},
   [{tuple,
     {67,14},
     [{tuple,{67,15},[{var,{67,16},'_M'},{var,{67,19},'F'},{var,{67,21},'A'}]},
      {tuple,
       {67,24},
       [{var,{67,25},'I'},{var,{67,27},'Off'},{atom,{67,31},limit}]}]}],
   [],
   [{debug_line,68,8},
    {call,
     {68,5},
     {remote,{68,11},{atom,{68,5},io_lib},{atom,{68,12},format}},
     [{block,0,
       [{debug_line,69,9},
        {string,
         {69,7},
         "function ~p/~p+~p:~n  An implementation limit was reached.~n  Try reducing the complexity of this function.~n~n  Instruction: ~p~n"}]},
      {block,0,
       [{debug_line,72,10},
        {cons,
         {72,30},
         {var,{72,31},'F'},
         {cons,
          {72,33},
          {var,{72,33},'A'},
          {cons,
           {72,35},
           {var,{72,35},'Off'},
           {cons,{72,39},{var,{72,39},'I'},{nil,{72,40}}}}}}]}]}]},
  {clause,
   {73,1},
   [{tuple,
     {73,14},
     [{tuple,{73,15},[{var,{73,16},'_M'},{var,{73,19},'F'},{var,{73,21},'A'}]},
      {tuple,{73,24},[{atom,{73,25},undef_labels},{var,{73,38},'Lbls'}]}]}],
   [],
   [{debug_line,77,11},
    {op,
     {77,77},
     '++',
     {call,
      {74,5},
      {remote,{74,11},{atom,{74,5},io_lib},{atom,{74,12},format}},
      [{block,0,
        [{debug_line,75,12},
         {string,
          {75,7},
          "function ~p/~p:~n  Internal consistency check failed - please report this bug.~n  The following label(s) were referenced but not defined:~n"}]},
       {block,0,
        [{cons,
          {77,70},
          {var,{77,71},'F'},
          {cons,{77,73},{var,{77,73},'A'},{nil,{77,74}}}}]}]},
     {op,
      {78,7},
      '++',
      {string,{78,2},"  "},
      {op,
       {78,50},
       '++',
       {lc,
        {78,10},
        {block,0,
         [{debug_line,78,13},
          {cons,
           {78,11},
           {call,
            {78,12},
            {remote,
             {78,12},
             {atom,{78,12},erlang},
             {atom,{78,12},integer_to_list}},
            [{var,{78,28},'L'}]},
           {cons,{78,31},{string,{78,31}," "},{nil,{78,34}}}}]},
        [{block,0,[{atom,{78,44},true}]},
         {generate,{78,41},{var,{78,39},'L'},{var,{78,44},'Lbls'}}]},
       {string,{78,53},"\n"}}}}]},
  {clause,
   {79,1},
   [{tuple,
     {79,14},
     [{tuple,{79,15},[{var,{79,16},'_M'},{var,{79,19},'F'},{var,{79,21},'A'}]},
      {tuple,
       {79,24},
       [{var,{79,25},'I'},{var,{79,27},'Off'},{var,{79,31},'Desc'}]}]}],
   [],
   [{debug_line,80,14},
    {call,
     {80,5},
     {remote,{80,11},{atom,{80,5},io_lib},{atom,{80,12},format}},
     [{block,0,
       [{debug_line,81,15},
        {string,
         {81,7},
         "function ~p/~p+~p:~n  Internal consistency check failed - please report this bug.~n  Instruction: ~p~n  Error:       ~p:~n"}]},
      {block,0,
       [{debug_line,84,16},
        {cons,
         {84,31},
         {var,{84,32},'F'},
         {cons,
          {84,34},
          {var,{84,34},'A'},
          {cons,
           {84,36},
           {var,{84,36},'Off'},
           {cons,
            {84,40},
            {var,{84,40},'I'},
            {cons,{84,42},{var,{84,42},'Desc'},{nil,{84,46}}}}}}}]}]}]},
  {clause,
   {85,1},
   [{tuple,
     {85,14},
     [{tuple,{85,15},[{var,{85,16},'_M'},{var,{85,19},'F'},{var,{85,21},'A'}]},
      {atom,{85,24},too_many_arguments}]}],
   [],
   [{debug_line,89,17},
    {call,
     {89,5},
     {remote,{89,11},{atom,{89,5},io_lib},{atom,{89,12},format}},
     [{block,0,
       [{string,
         {89,19},
         "System limit reached: generated function ~p/~p has too many arguments."}]},
      {block,0,
       [{debug_line,90,18},
        {cons,
         {90,38},
         {var,{90,39},'F'},
         {cons,{90,42},{var,{90,42},'A'},{nil,{90,43}}}}]}]}]},
  {clause,
   {91,1},
   [{var,{91,14},'Error'}],
   [],
   [{debug_line,92,19},
    {call,
     {92,5},
     {remote,{92,11},{atom,{92,5},io_lib},{atom,{92,12},format}},
     [{block,0,[{string,{92,19},"~p~n"}]},
      {block,0,[{cons,{92,27},{var,{92,28},'Error'},{nil,{92,33}}}]}]}]}]}.
{function,
    {117,1},
    validate_0,4,
    [{clause,
         {117,1},
         [{var,{117,1},'_'},
          {var,{117,1},'_'},
          {var,{117,1},'_'},
          {var,{117,1},'_'}],
         [[{call,
               {117,1},
               {remote,
                   {117,1},
                   {atom,{117,1},fake},
                   {atom,{117,1},is_beam_bif_info}},
               []}]],
         [{debug_line,117,20},{atom,{117,1},ignore}]},
     {clause,
         {117,1},
         [{nil,{117,12}},
          {var,{117,16},'_Module'},
          {var,{117,25},'_Level'},
          {var,{117,33},'_Ft'}],
         [],
         [{debug_line,118,21},{nil,{118,5}}]},
     {clause,
         {119,1},
         [{cons,
              {119,12},
              {tuple,
                  {119,13},
                  [{atom,{119,14},function},
                   {var,{119,24},'Name'},
                   {var,{119,30},'Arity'},
                   {var,{119,37},'Entry'},
                   {var,{119,44},'Code'}]},
              {var,{119,52},'Fs'}},
          {var,{119,57},'Module'},
          {var,{119,65},'Level'},
          {var,{119,72},'Ft'}],
         [],
         [{debug_line,120,22},
          {match,
              {120,5},
              {var,{120,5},'MFA'},
              {tuple,
                  {120,11},
                  [{var,{120,12},'Module'},
                   {var,{120,20},'Name'},
                   {var,{120,26},'Arity'}]}},
          {debug_line,121,23},
          {'try',
              {121,5},
              [{call,
                   {121,9},
                   {atom,{121,9},validate_1},
                   [{var,{121,20},'Code'},
                    {var,{121,26},'MFA'},
                    {var,{121,31},'Entry'},
                    {var,{121,38},'Level'},
                    {var,{121,45},'Ft'}]}],
              [{clause,
                   {122,9},
                   [{var,{122,9},'_'}],
                   [],
                   [{debug_line,123,24},
                    {call,
                        {123,13},
                        {atom,{123,13},validate_0},
                        [{var,{123,24},'Fs'},
                         {var,{123,28},'Module'},
                         {var,{123,36},'Level'},
                         {var,{123,43},'Ft'}]}]}],
              [{clause,
                   {125,9},
                   [{tuple,
                        {125,9},
                        [{atom,{125,9},throw},
                         {var,{125,15},'Error'},
                         {var,{125,15},'_'}]}],
                   [],
                   [{debug_line,127,25},
                    {cons,
                        {127,13},
                        {var,{127,14},'Error'},
                        {call,
                            {127,22},
                            {atom,{127,22},validate_0},
                            [{var,{127,33},'Fs'},
                             {var,{127,37},'Module'},
                             {var,{127,45},'Level'},
                             {var,{127,52},'Ft'}]}}]},
               {clause,
                   {128,9},
                   [{tuple,
                        {128,9},
                        [{var,{128,9},'Class'},
                         {var,{128,15},'Error'},
                         {var,{128,21},'Stack'}]}],
                   [],
                   [{debug_line,130,26},
                    {call,
                        {130,13},
                        {remote,
                            {130,15},
                            {atom,{130,13},io},
                            {atom,{130,16},fwrite}},
                        [{block,0,[{string,{130,23},"Function: ~w/~w\n"}]},
                         {block,0,
                             [{cons,
                                  {130,44},
                                  {var,{130,45},'Name'},
                                  {cons,
                                      {130,50},
                                      {var,{130,50},'Arity'},
                                      {nil,{130,55}}}}]}]},
                    {debug_line,131,27},
                    {call,
                        {131,13},
                        {remote,
                            {131,19},
                            {atom,{131,13},erlang},
                            {atom,{131,20},raise}},
                        [{var,{131,26},'Class'},
                         {var,{131,33},'Error'},
                         {var,{131,40},'Stack'}]}]}],
              []}]}]}.
{attribute,{134,2},
           record,
           {t_abstract,[{record_field,{134,22},{atom,{134,22},kind}}]}}.
{attribute,
    {144,2},
    type,
    {validator_type,
        {type,
            {144,27},
            union,
            [{type,{144,27},record,[{atom,{144,28},t_abstract}]},
             {type,
                 {144,47},
                 'fun',
                 [{type,{144,47},product,[{user_type,{144,48},values,[]}]},
                  {user_type,{144,61},type,[]}]},
             {user_type,{144,71},type,[]}]},
        []}}.
{attribute,
    {146,2},
    record,
    {value_ref,
        [{typed_record_field,
             {record_field,{146,21},{atom,{146,21},id}},
             {user_type,{146,27},index,[]}}]}}.
{attribute,
    {147,2},
    record,
    {value,
        [{typed_record_field,
             {record_field,{147,17},{atom,{147,17},op}},
             {type,{147,23},term,[]}},
         {typed_record_field,
             {record_field,{147,31},{atom,{147,31},args}},
             {type,{147,39},list,[{user_type,{147,40},argument,[]}]}},
         {typed_record_field,
             {record_field,{147,53},{atom,{147,53},type}},
             {user_type,{147,61},validator_type,[]}}]}}.
{attribute,{149,2},
           type,
           {argument,{type,{149,21},
                           union,
                           [{type,{149,21},record,[{atom,{149,22},value_ref}]},
                            {user_type,{149,36},beam_literal,[]}]},
                     []}}.
{attribute,
    {150,2},
    type,
    {values,
        {type,
            {150,19},
            map,
            [{type,
                 {150,35},
                 map_field_assoc,
                 [{type,{150,22},record,[{atom,{150,23},value_ref}]},
                  {type,{150,38},record,[{atom,{150,39},value}]}]}]},
        []}}.
{attribute,{152,2},type,{index,{type,{152,18},non_neg_integer,[]},[]}}.
{attribute,
    {172,2},
    type,
    {tag,
        {type,
            {172,16},
            union,
            [{atom,{172,16},initialized},
             {atom,{173,16},uninitialized},
             {type,
                 {174,16},
                 tuple,
                 [{atom,{174,17},catchtag},
                  {remote_type,
                      {174,27},
                      [{atom,{174,27},ordsets},
                       {atom,{174,35},ordset},
                       [{user_type,{174,42},label,[]}]]}]},
             {type,
                 {175,16},
                 tuple,
                 [{atom,{175,17},trytag},
                  {remote_type,
                      {175,25},
                      [{atom,{175,25},ordsets},
                       {atom,{175,33},ordset},
                       [{user_type,{175,40},label,[]}]]}]}]},
        []}}.
{attribute,
    {177,2},
    type,
    {x_regs,
        {type,
            {177,19},
            map,
            [{type,
                 {177,35},
                 map_field_assoc,
                 [{type,
                      {177,22},
                      tuple,
                      [{atom,{177,23},x},{user_type,{177,26},index,[]}]},
                  {type,{177,38},record,[{atom,{177,39},value_ref}]}]}]},
        []}}.
{attribute,
    {178,2},
    type,
    {y_regs,
        {type,
            {178,19},
            map,
            [{type,
                 {178,35},
                 map_field_assoc,
                 [{type,
                      {178,22},
                      tuple,
                      [{atom,{178,23},y},{user_type,{178,26},index,[]}]},
                  {type,
                      {178,38},
                      union,
                      [{user_type,{178,38},tag,[]},
                       {type,
                           {178,46},
                           record,
                           [{atom,{178,47},value_ref}]}]}]}]},
        []}}.
{attribute,
    {181,2},
    record,
    {st,[{typed_record_field,
             {record_field,{183,10},{atom,{183,10},vs},{map,{183,13},[]}},
             {user_type,{183,20},values,[]}},
         {typed_record_field,
             {record_field,{185,10},{atom,{185,10},xs},{map,{185,13},[]}},
             {user_type,{185,20},x_regs,[]}},
         {typed_record_field,
             {record_field,{186,10},{atom,{186,10},ys},{map,{186,13},[]}},
             {user_type,{186,20},y_regs,[]}},
         {record_field,
             {187,10},
             {atom,{187,10},f},
             {call,{187,12},{atom,{187,12},init_fregs},[]}},
         {typed_record_field,
             {record_field,
                 {191,10},
                 {atom,{191,10},fragile},
                 {call,
                     {191,18},
                     {remote,
                         {191,22},
                         {atom,{191,18},sets},
                         {atom,{191,23},new}},
                     []}},
             {remote_type,
                 {191,32},
                 [{atom,{191,32},sets},{atom,{191,37},set},[]]}},
         {typed_record_field,
             {record_field,{196,10},{atom,{196,10},numy},{atom,{196,15},none}},
             {type,
                 {196,23},
                 union,
                 [{atom,{196,23},none},
                  {type,
                      {196,30},
                      tuple,
                      [{atom,{196,31},undecided},
                       {user_type,{196,41},index,[]}]},
                  {user_type,{196,52},index,[]}]}},
         {record_field,{198,10},{atom,{198,10},h},{integer,{198,12},0}},
         {record_field,{200,10},{atom,{200,10},hl},{integer,{200,13},0}},
         {record_field,{202,10},{atom,{202,10},hf},{integer,{202,13},0}},
         {record_field,{204,10},{atom,{204,10},ct},{nil,{204,13}}},
         {record_field,{206,10},{atom,{206,10},setelem},{atom,{206,18},false}},
         {record_field,
             {208,10},
             {atom,{208,10},puts_left},
             {atom,{208,20},none}},
         {typed_record_field,
             {record_field,
                 {215,10},
                 {atom,{215,10},recv_state},
                 {atom,{215,21},none}},
             {type,
                 {215,29},
                 union,
                 [{atom,{215,29},none},
                  {atom,{215,36},undecided},
                  {atom,{215,48},marked_position},
                  {atom,{215,66},entered_loop}]}},
         {typed_record_field,
             {record_field,
                 {223,10},
                 {atom,{223,10},ms_positions},
                 {map,{223,23},[]}},
             {type,
                 {223,30},
                 map,
                 [{type,
                      {223,53},
                      map_field_assoc,
                      [{ann_type,
                           {223,33},
                           [{var,{223,33},'Ctx'},
                            {type,
                                {223,40},
                                record,
                                [{atom,{223,41},value_ref}]}]},
                       {ann_type,
                           {223,56},
                           [{var,{223,56},'Pos'},
                            {type,
                                {223,63},
                                record,
                                [{atom,{223,64},value_ref}]}]}]}]}}]}}.
{attribute,{226,2},type,{label,{type,{226,25},integer,[]},[]}}.
{attribute,{227,2},
           type,
           {state,{type,{227,25},
                        union,
                        [{type,{227,25},record,[{atom,{227,26},st}]},
                         {atom,{227,33},none}]},
                  []}}.
{attribute,
    {230,2},
    record,
    {vst,
        [{typed_record_field,
             {record_field,
                 {232,10},
                 {atom,{232,10},current},
                 {atom,{232,18},none}},
             {user_type,{232,39},state,[]}},
         {typed_record_field,
             {record_field,{234,10},{atom,{234,10},level}},
             {type,
                 {234,39},
                 union,
                 [{atom,{234,39},strong},{atom,{234,48},weak}]}},
         {typed_record_field,
             {record_field,
                 {236,10},
                 {atom,{236,10},branched},
                 {map,{236,19},[]}},
             {type,
                 {236,39},
                 map,
                 [{type,
                      {236,50},
                      map_field_assoc,
                      [{user_type,{236,42},label,[]},
                       {user_type,{236,53},state,[]}]}]}},
         {typed_record_field,
             {record_field,
                 {238,10},
                 {atom,{238,10},labels},
                 {call,
                     {238,17},
                     {remote,
                         {238,21},
                         {atom,{238,17},sets},
                         {atom,{238,22},new}},
                     []}},
             {remote_type,
                 {238,34},
                 [{atom,{238,34},sets},{atom,{238,39},set},[]]}},
         {typed_record_field,
             {record_field,{240,10},{atom,{240,10},ft},{map,{240,13},[]}},
             {type,
                 {240,39},
                 map,
                 [{type,
                      {240,50},
                      map_field_assoc,
                      [{user_type,{240,42},label,[]},
                       {type,{240,53},map,any}]}]}},
         {typed_record_field,
             {record_field,
                 {242,10},
                 {atom,{242,10},ref_ctr},
                 {integer,{242,18},0}},
             {user_type,{242,39},index,[]}}]}}.
{function,
 {245,1},
 build_function_table,2,
 [{clause,
   {245,1},
   [{var,{245,1},'_'},{var,{245,1},'_'}],
   [[{call,
      {245,1},
      {remote,{245,1},{atom,{245,1},fake},{atom,{245,1},is_beam_bif_info}},
      []}]],
   [{debug_line,245,28},{atom,{245,1},ignore}]},
  {clause,
   {245,1},
   [{cons,
     {245,22},
     {tuple,
      {245,23},
      [{atom,{245,24},function},
       {var,{245,33},'Name'},
       {var,{245,38},'Arity'},
       {var,{245,44},'Entry'},
       {var,{245,50},'Code0'}]},
     {var,{245,57},'Fs'}},
    {var,{245,62},'Acc'}],
   [],
   [{debug_line,246,29},
    {match,
     {246,5},
     {var,{246,5},'Code'},
     {call,
      {246,12},
      {remote,{246,12},{atom,{246,12},lists},{atom,{246,12},dropwhile}},
      [{block,0,
        [{'fun',
          {246,22},
          {clauses,
           [{clause,
             {246,25},
             [{tuple,{246,26},[{atom,{246,27},label},{var,{246,33},'L'}]}],
             [[{op,{246,44},'=:=',{var,{246,42},'L'},{var,{246,48},'Entry'}}]],
             [{debug_line,247,30},{atom,{247,30},false}]},
            {clause,
             {248,25},
             [{var,{248,26},'_'}],
             [],
             [{debug_line,249,31},{atom,{249,30},true}]}]}}]},
       {var,{250,27},'Code0'}]}},
    {debug_line,251,32},
    {'case',
     {251,5},
     {var,{251,10},'Code'},
     [{clause,
       {252,9},
       [{cons,
         {252,9},
         {tuple,{252,10},[{atom,{252,11},label},{var,{252,17},'Entry'}]},
         {var,{252,26},'Is'}}],
       [],
       [{debug_line,253,33},
        {match,
         {253,13},
         {var,{253,13},'Info'},
         {map,
          {253,20},
          [{map_field_assoc,
            {253,28},
            {atom,{253,23},name},
            {var,{253,31},'Name'}},
           {map_field_assoc,
            {254,29},
            {atom,{254,23},arity},
            {var,{254,32},'Arity'}},
           {map_field_assoc,
            {255,38},
            {atom,{255,23},parameter_info},
            {call,
             {255,41},
             {atom,{255,41},find_parameter_info},
             [{var,{255,61},'Is'},
              {block,0,[{debug_line,255,34},{map,{255,65},[]}]}]}},
           {map_field_assoc,
            {256,36},
            {atom,{256,23},always_fails},
            {call,
             {256,39},
             {atom,{256,39},always_fails},
             [{var,{256,52},'Is'}]}}]}},
        {debug_line,257,35},
        {call,
         {257,13},
         {atom,{257,13},build_function_table},
         [{var,{257,34},'Fs'},
          {block,0,
           [{map,
             {257,41},
             {var,{257,38},'Acc'},
             [{map_field_assoc,
               {257,50},
               {var,{257,44},'Entry'},
               {var,{257,53},'Info'}}]}]}]}]},
      {clause,
       {258,9},
       [{var,{258,9},'_'}],
       [],
       [{debug_line,261,36},
        {call,
         {261,13},
         {atom,{261,13},build_function_table},
         [{var,{261,34},'Fs'},{var,{261,38},'Acc'}]}]}]}]},
  {clause,
   {263,1},
   [{nil,{263,22}},{var,{263,26},'Acc'}],
   [],
   [{debug_line,264,37},{var,{264,5},'Acc'}]}]}.
{function,
    {266,1},
    find_parameter_info,2,
    [{clause,
         {266,1},
         [{var,{266,1},'_'},{var,{266,1},'_'}],
         [[{call,
               {266,1},
               {remote,
                   {266,1},
                   {atom,{266,1},fake},
                   {atom,{266,1},is_beam_bif_info}},
               []}]],
         [{debug_line,266,38},{atom,{266,1},ignore}]},
     {clause,
         {266,1},
         [{cons,
              {266,21},
              {tuple,
                  {266,22},
                  [{atom,{266,23},'%'},
                   {tuple,
                       {266,28},
                       [{atom,{266,29},var_info},
                        {var,{266,39},'Reg'},
                        {var,{266,44},'Info'}]}]},
              {var,{266,53},'Is'}},
          {var,{266,58},'Acc'}],
         [],
         [{debug_line,267,39},
          {call,
              {267,5},
              {atom,{267,5},find_parameter_info},
              [{var,{267,25},'Is'},
               {block,0,
                   [{map,
                        {267,32},
                        {var,{267,29},'Acc'},
                        [{map_field_assoc,
                             {267,39},
                             {var,{267,35},'Reg'},
                             {var,{267,42},'Info'}}]}]}]}]},
     {clause,
         {268,1},
         [{cons,
              {268,21},
              {tuple,{268,22},[{atom,{268,23},'%'},{var,{268,28},'_'}]},
              {var,{268,33},'Is'}},
          {var,{268,38},'Acc'}],
         [],
         [{debug_line,269,40},
          {call,
              {269,5},
              {atom,{269,5},find_parameter_info},
              [{var,{269,25},'Is'},{var,{269,29},'Acc'}]}]},
     {clause,
         {270,1},
         [{var,{270,21},'_'},{var,{270,24},'Acc'}],
         [],
         [{debug_line,271,41},{var,{271,5},'Acc'}]}]}.
{function,{273,1},
          always_fails,1,
          [{clause,{273,1},
                   [{var,{273,1},'_'}],
                   [[{call,{273,1},
                           {remote,{273,1},
                                   {atom,{273,1},fake},
                                   {atom,{273,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,273,42},{atom,{273,1},ignore}]},
           {clause,{273,1},
                   [{cons,{273,14},
                          {tuple,{273,15},
                                 [{atom,{273,16},jump},{var,{273,21},'_'}]},
                          {var,{273,24},'_'}}],
                   [],
                   [{debug_line,273,43},{atom,{273,31},true}]},
           {clause,{274,1},
                   [{var,{274,14},'_'}],
                   [],
                   [{debug_line,274,44},{atom,{274,20},false}]}]}.
{function,{276,1},
          validate_1,5,
          [{clause,{276,1},
                   [{var,{276,1},'_'},
                    {var,{276,1},'_'},
                    {var,{276,1},'_'},
                    {var,{276,1},'_'},
                    {var,{276,1},'_'}],
                   [[{call,{276,1},
                           {remote,{276,1},
                                   {atom,{276,1},fake},
                                   {atom,{276,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,276,45},{atom,{276,1},ignore}]},
           {clause,{276,1},
                   [{var,{276,12},'Is'},
                    {var,{276,16},'MFA0'},
                    {var,{276,22},'Entry'},
                    {var,{276,29},'Level'},
                    {var,{276,36},'Ft'}],
                   [],
                   [{debug_line,277,46},
                    {match,{277,5},
                           {tuple,{277,5},
                                  [{var,{277,6},'Offset'},
                                   {var,{277,14},'MFA'},
                                   {var,{277,19},'Header'},
                                   {var,{277,27},'Body'}]},
                           {call,{277,35},
                                 {atom,{277,35},extract_header},
                                 [{var,{277,50},'Is'},
                                  {var,{277,54},'MFA0'},
                                  {var,{277,60},'Entry'},
                                  {integer,{277,67},1},
                                  {nil,{277,70}}]}},
                    {debug_line,279,47},
                    {match,{279,5},
                           {var,{279,5},'Vst0'},
                           {call,{279,12},
                                 {atom,{279,12},init_vst},
                                 [{var,{279,21},'MFA'},
                                  {var,{279,26},'Level'},
                                  {var,{279,33},'Ft'}]}},
                    {debug_line,283,48},
                    {match,{283,5},
                           {var,{283,5},'Vst1'},
                           {call,{283,12},
                                 {atom,{283,12},validate_instrs},
                                 [{var,{283,28},'Body'},
                                  {var,{283,34},'MFA'},
                                  {var,{283,39},'Offset'},
                                  {var,{283,47},'Vst0'}]}},
                    {debug_line,284,49},
                    {match,{284,5},
                           {var,{284,5},'Vst'},
                           {call,{284,11},
                                 {atom,{284,11},validate_instrs},
                                 [{var,{284,27},'Header'},
                                  {var,{284,35},'MFA'},
                                  {integer,{284,40},1},
                                  {var,{284,43},'Vst1'}]}},
                    {debug_line,286,50},
                    {call,{286,5},
                          {atom,{286,5},validate_branches},
                          [{var,{286,23},'MFA'},{var,{286,28},'Vst'}]}]}]}.
{function,
    {288,1},
    extract_header,5,
    [{clause,
         {288,1},
         [{var,{288,1},'_'},
          {var,{288,1},'_'},
          {var,{288,1},'_'},
          {var,{288,1},'_'},
          {var,{288,1},'_'}],
         [[{call,
               {288,1},
               {remote,
                   {288,1},
                   {atom,{288,1},fake},
                   {atom,{288,1},is_beam_bif_info}},
               []}]],
         [{debug_line,288,51},{atom,{288,1},ignore}]},
     {clause,
         {288,1},
         [{cons,
              {288,16},
              {match,
                  {288,17},
                  {tuple,
                      {288,17},
                      [{atom,{288,18},func_info},
                       {tuple,
                           {288,29},
                           [{atom,{288,30},atom},{var,{288,36},'Mod'}]},
                       {tuple,
                           {288,42},
                           [{atom,{288,43},atom},{var,{288,48},'Name'}]},
                       {var,{288,55},'Arity'}]},
                  {var,{288,62},'I'}},
              {match,
                  {289,17},
                  {cons,
                      {289,17},
                      {tuple,
                          {289,18},
                          [{atom,{289,19},label},{var,{289,26},'Entry'}]},
                      {var,{289,35},'_'}},
                  {var,{289,38},'Is'}}},
          {tuple,
              {290,16},
              [{var,{290,17},'_'},
               {var,{290,20},'Name'},
               {var,{290,26},'Arity'}]},
          {var,{290,34},'Entry'},
          {var,{290,41},'Offset'},
          {var,{290,49},'Acc'}],
         [],
         [{debug_line,291,52},
          {match,
              {291,5},
              {var,{291,5},'MFA'},
              {tuple,
                  {291,11},
                  [{var,{291,12},'Mod'},
                   {var,{291,17},'Name'},
                   {var,{291,23},'Arity'}]}},
          {debug_line,292,53},
          {'case',
              {292,5},
              {op,{292,16},'=<',{var,{292,10},'Arity'},{integer,{292,20},255}},
              [{clause,
                   {293,9},
                   [{atom,{293,9},true}],
                   [],
                   [{debug_line,293,54},
                    {tuple,
                        {293,17},
                        [{op,{293,25},
                             '+',
                             {var,{293,18},'Offset'},
                             {integer,{293,27},1}},
                         {var,{293,30},'MFA'},
                         {call,
                             {293,35},
                             {remote,
                                 {293,35},
                                 {atom,{293,35},lists},
                                 {atom,{293,35},reverse}},
                             [{var,{293,43},'Acc'},
                              {block,0,
                                  [{cons,
                                       {293,48},
                                       {var,{293,49},'I'},
                                       {nil,{293,50}}}]}]},
                         {var,{293,54},'Is'}]}]},
               {clause,
                   {294,9},
                   [{atom,{294,9},false}],
                   [],
                   [{debug_line,294,55},
                    {call,
                        {294,18},
                        {atom,{294,18},error},
                        [{block,0,
                             [{tuple,
                                  {294,24},
                                  [{var,{294,25},'MFA'},
                                   {atom,
                                       {294,30},
                                       too_many_arguments}]}]}]}]}]}]},
     {clause,
         {296,1},
         [{cons,
              {296,16},
              {match,
                  {296,17},
                  {tuple,{296,17},[{atom,{296,18},label},{var,{296,24},'_'}]},
                  {var,{296,27},'I'}},
              {var,{296,31},'Is'}},
          {var,{296,36},'MFA'},
          {var,{296,41},'Entry'},
          {var,{296,48},'Offset'},
          {var,{296,56},'Acc'}],
         [],
         [{debug_line,297,56},
          {call,
              {297,5},
              {atom,{297,5},extract_header},
              [{var,{297,20},'Is'},
               {var,{297,24},'MFA'},
               {var,{297,29},'Entry'},
               {block,0,
                   [{op,{297,43},
                        '+',
                        {var,{297,36},'Offset'},
                        {integer,{297,45},1}}]},
               {block,0,
                   [{cons,
                        {297,48},
                        {var,{297,49},'I'},
                        {var,{297,53},'Acc'}}]}]}]},
     {clause,
         {298,1},
         [{cons,
              {298,16},
              {match,
                  {298,17},
                  {tuple,{298,17},[{atom,{298,18},line},{var,{298,23},'_'}]},
                  {var,{298,26},'I'}},
              {var,{298,30},'Is'}},
          {var,{298,35},'MFA'},
          {var,{298,40},'Entry'},
          {var,{298,47},'Offset'},
          {var,{298,55},'Acc'}],
         [],
         [{debug_line,299,57},
          {call,
              {299,5},
              {atom,{299,5},extract_header},
              [{var,{299,20},'Is'},
               {var,{299,24},'MFA'},
               {var,{299,29},'Entry'},
               {block,0,
                   [{op,{299,43},
                        '+',
                        {var,{299,36},'Offset'},
                        {integer,{299,45},1}}]},
               {block,0,
                   [{cons,
                        {299,48},
                        {var,{299,49},'I'},
                        {var,{299,53},'Acc'}}]}]}]},
     {clause,
         {300,1},
         [{var,{300,16},'_Is'},
          {var,{300,21},'MFA'},
          {var,{300,26},'_Entry'},
          {var,{300,34},'_Offset'},
          {var,{300,43},'_Acc'}],
         [],
         [{debug_line,301,58},
          {call,
              {301,5},
              {atom,{301,5},error},
              [{block,0,
                   [{tuple,
                        {301,11},
                        [{var,{301,12},'MFA'},
                         {atom,{301,17},invalid_function_header}]}]}]}]}]}.
{function,
    {303,1},
    init_vst,3,
    [{clause,
         {303,1},
         [{var,{303,1},'_'},{var,{303,1},'_'},{var,{303,1},'_'}],
         [[{call,
               {303,1},
               {remote,
                   {303,1},
                   {atom,{303,1},fake},
                   {atom,{303,1},is_beam_bif_info}},
               []}]],
         [{debug_line,303,59},{atom,{303,1},ignore}]},
     {clause,
         {303,1},
         [{tuple,
              {303,10},
              [{var,{303,11},'_'},{var,{303,14},'_'},{var,{303,17},'Arity'}]},
          {var,{303,25},'Level'},
          {var,{303,32},'Ft'}],
         [],
         [{debug_line,304,60},
          {match,
              {304,5},
              {var,{304,5},'Vst'},
              {tuple,
                  {304,11},
                  [{atom,{304,11},vst},
                   {tuple,
                       {305,24},
                       [{atom,{305,24},st},
                        {map,{305,24},[]},
                        {map,{305,24},[]},
                        {map,{305,24},[]},
                        {call,{305,24},{atom,{305,24},init_fregs},[]},
                        {call,
                            {305,24},
                            {remote,
                                {305,24},
                                {atom,{305,24},sets},
                                {atom,{305,24},new}},
                            []},
                        {atom,{305,24},none},
                        {integer,{305,24},0},
                        {integer,{305,24},0},
                        {integer,{305,24},0},
                        {nil,{305,24}},
                        {atom,{305,24},false},
                        {atom,{305,24},none},
                        {atom,{305,24},none},
                        {map,{305,24},[]}]},
                   {var,{308,22},'Level'},
                   {map,{304,25},[]},
                   {call,
                       {307,23},
                       {remote,
                           {307,27},
                           {atom,{307,23},sets},
                           {atom,{307,28},new}},
                       []},
                   {var,{306,19},'Ft'},
                   {integer,{304,11},0}]}},
          {debug_line,309,61},
          {call,
              {309,5},
              {atom,{309,5},init_function_args},
              [{block,0,
                   [{op,{309,30},
                        '-',
                        {var,{309,24},'Arity'},
                        {integer,{309,32},1}}]},
               {var,{309,35},'Vst'}]}]}]}.
{function,
    {311,1},
    init_function_args,2,
    [{clause,
         {311,1},
         [{var,{311,1},'_'},{var,{311,1},'_'}],
         [[{call,
               {311,1},
               {remote,
                   {311,1},
                   {atom,{311,1},fake},
                   {atom,{311,1},is_beam_bif_info}},
               []}]],
         [{debug_line,311,62},{atom,{311,1},ignore}]},
     {clause,
         {311,1},
         [{op,{311,20},'-',{integer,{311,21},1}},{var,{311,24},'Vst'}],
         [],
         [{debug_line,312,63},{var,{312,5},'Vst'}]},
     {clause,
         {313,1},
         [{var,{313,20},'X'},{var,{313,23},'Vst'}],
         [],
         [{debug_line,314,64},
          {call,
              {314,5},
              {atom,{314,5},init_function_args},
              [{block,0,
                   [{op,{314,26},
                        '-',
                        {var,{314,24},'X'},
                        {integer,{314,28},1}}]},
               {block,0,
                   [{call,
                        {314,31},
                        {atom,{314,31},create_term},
                        [{atom,{314,43},any},
                         {atom,{314,48},argument},
                         {nil,{314,58}},
                         {block,0,
                             [{tuple,
                                  {314,62},
                                  [{atom,{314,63},x},{var,{314,65},'X'}]}]},
                         {var,{314,69},'Vst'}]}]}]}]}]}.
{function,
 {316,1},
 kill_heap_allocation,1,
 [{clause,
   {316,1},
   [{var,{316,1},'_'}],
   [[{call,
      {316,1},
      {remote,{316,1},{atom,{316,1},fake},{atom,{316,1},is_beam_bif_info}},
      []}]],
   [{debug_line,316,65},{atom,{316,1},ignore}]},
  {clause,
   {316,1},
   [{match,
     {316,22},
     {tuple,
      {316,22},
      [{atom,{316,22},vst},
       {var,{316,35},'St0'},
       {var,{316,22},'_'},
       {var,{316,22},'_'},
       {var,{316,22},'_'},
       {var,{316,22},'_'},
       {var,{316,22},'_'}]},
     {var,{316,40},'Vst'}}],
   [],
   [{debug_line,317,66},
    {match,
     {317,5},
     {var,{317,5},'St'},
     {block,
      {317,10},
      [{match,{317,10},{var,{317,10},rec0},{var,{317,10},'St0'}},
       {'case',
        {317,17},
        {var,{317,10},rec0},
        [{clause,
          {317,17},
          [{tuple,
            {317,17},
            [{atom,{317,17},st},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'},
             {var,{317,17},'_'}]}],
          [],
          [{call,
            {317,17},
            {remote,
             {317,17},
             {atom,{317,17},erlang},
             {atom,{317,17},setelement}},
            [{integer,{317,17},8},
             {call,
              {317,21},
              {remote,
               {317,21},
               {atom,{317,21},erlang},
               {atom,{317,21},setelement}},
              [{integer,{317,21},9},
               {call,
                {317,26},
                {remote,
                 {317,26},
                 {atom,{317,26},erlang},
                 {atom,{317,26},setelement}},
                [{integer,{317,26},10},
                 {var,{317,10},rec0},
                 {integer,{317,29},0}]},
               {integer,{317,24},0}]},
             {integer,{317,19},0}]}]},
         {clause,
          [{generated,true},{location,{317,17}}],
          [{var,[{generated,true},{location,{317,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{317,17}}],
            {remote,
             [{generated,true},{location,{317,17}}],
             {atom,[{generated,true},{location,{317,17}}],erlang},
             {atom,[{generated,true},{location,{317,17}}],error}},
            [{tuple,
              [{generated,true},{location,{317,17}}],
              [{atom,[{generated,true},{location,{317,17}}],badrecord},
               {var,{317,10},rec0}]}]}]}]}]}},
    {debug_line,318,67},
    {block,
     {318,5},
     [{match,{318,5},{var,{318,5},rec1},{var,{318,5},'Vst'}},
      {'case',
       {318,13},
       {var,{318,5},rec1},
       [{clause,
         {318,13},
         [{tuple,
           {318,13},
           [{atom,{318,13},vst},
            {var,{318,13},'_'},
            {var,{318,13},'_'},
            {var,{318,13},'_'},
            {var,{318,13},'_'},
            {var,{318,13},'_'},
            {var,{318,13},'_'}]}],
         [],
         [{call,
           {318,13},
           {remote,{318,13},{atom,{318,13},erlang},{atom,{318,13},setelement}},
           [{integer,{318,13},2},{var,{318,5},rec1},{var,{318,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{318,13}}],
         [{var,[{generated,true},{location,{318,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{318,13}}],
           {remote,
            [{generated,true},{location,{318,13}}],
            {atom,[{generated,true},{location,{318,13}}],erlang},
            {atom,[{generated,true},{location,{318,13}}],error}},
           [{tuple,
             [{generated,true},{location,{318,13}}],
             [{atom,[{generated,true},{location,{318,13}}],badrecord},
              {var,{318,5},rec1}]}]}]}]}]}]}]}.
{function,
    {320,1},
    validate_branches,2,
    [{clause,
         {320,1},
         [{var,{320,1},'_'},{var,{320,1},'_'}],
         [[{call,
               {320,1},
               {remote,
                   {320,1},
                   {atom,{320,1},fake},
                   {atom,{320,1},is_beam_bif_info}},
               []}]],
         [{debug_line,320,68},{atom,{320,1},ignore}]},
     {clause,
         {320,1},
         [{var,{320,19},'MFA'},{var,{320,24},'Vst'}],
         [],
         [{debug_line,321,69},
          {match,
              {321,5},
              {tuple,
                  {321,5},
                  [{atom,{321,5},vst},
                   {var,{321,5},'_'},
                   {var,{321,5},'_'},
                   {var,{321,20},'Targets0'},
                   {var,{321,37},'Labels0'},
                   {var,{321,5},'_'},
                   {var,{321,5},'_'}]},
              {var,{321,49},'Vst'}},
          {debug_line,322,70},
          {match,
              {322,5},
              {var,{322,5},'Targets'},
              {call,
                  {322,15},
                  {remote,{322,19},{atom,{322,15},maps},{atom,{322,20},keys}},
                  [{var,{322,25},'Targets0'}]}},
          {debug_line,323,71},
          {match,
              {323,5},
              {var,{323,5},'Labels'},
              {call,
                  {323,14},
                  {remote,
                      {323,18},
                      {atom,{323,14},sets},
                      {atom,{323,19},to_list}},
                  [{var,{323,27},'Labels0'}]}},
          {debug_line,324,72},
          {'case',
              {324,5},
              {op,{324,18},
                  '--',
                  {var,{324,10},'Targets'},
                  {var,{324,21},'Labels'}},
              [{clause,
                   {325,9},
                   [{match,
                        {325,9},
                        {cons,{325,9},{var,{325,10},'_'},{var,{325,12},'_'}},
                        {var,{325,15},'Undef'}}],
                   [],
                   [{debug_line,326,73},
                    {match,
                        {326,13},
                        {var,{326,13},'Error'},
                        {tuple,
                            {326,21},
                            [{atom,{326,22},undef_labels},
                             {var,{326,36},'Undef'}]}},
                    {debug_line,327,74},
                    {call,
                        {327,13},
                        {atom,{327,13},error},
                        [{block,0,
                             [{tuple,
                                  {327,19},
                                  [{var,{327,20},'MFA'},
                                   {var,{327,25},'Error'}]}]}]}]},
               {clause,
                   {328,9},
                   [{nil,{328,9}}],
                   [],
                   [{debug_line,329,75},{var,{329,13},'Vst'}]}]}]}]}.
{function,
 {332,1},
 validate_instrs,4,
 [{clause,
   {332,1},
   [{var,{332,1},'_'},{var,{332,1},'_'},{var,{332,1},'_'},{var,{332,1},'_'}],
   [[{call,
      {332,1},
      {remote,{332,1},{atom,{332,1},fake},{atom,{332,1},is_beam_bif_info}},
      []}]],
   [{debug_line,332,76},{atom,{332,1},ignore}]},
  {clause,
   {332,1},
   [{cons,{332,17},{var,{332,18},'I'},{var,{332,20},'Is'}},
    {var,{332,25},'MFA'},
    {var,{332,30},'Offset'},
    {var,{332,38},'Vst0'}],
   [],
   [{debug_line,333,77},
    {call,
     {333,5},
     {atom,{333,5},validate_instrs},
     [{var,{333,21},'Is'},
      {var,{333,25},'MFA'},
      {block,0,
       [{op,{333,36},'+',{var,{333,30},'Offset'},{integer,{333,37},1}}]},
      {block,0,
       [{debug_line,334,78},
        {'try',
         {334,21},
         [{debug_line,335,79},
          {match,
           {335,25},
           {var,{335,25},'Vst'},
           {call,
            {335,31},
            {atom,{335,31},validate_mutation},
            [{var,{335,49},'I'},{var,{335,52},'Vst0'}]}},
          {debug_line,336,80},
          {call,
           {336,25},
           {atom,{336,25},vi},
           [{var,{336,28},'I'},{var,{336,31},'Vst'}]}],
         [],
         [{clause,
           {337,27},
           [{tuple,
             {337,27},
             [{atom,{337,27},throw},
              {var,{337,27},'Error'},
              {var,{337,27},'_'}]}],
           [],
           [{debug_line,338,81},
            {call,
             {338,25},
             {atom,{338,25},error},
             [{block,0,
               [{tuple,
                 {338,31},
                 [{var,{338,32},'MFA'},
                  {tuple,
                   {338,37},
                   [{var,{338,38},'I'},
                    {var,{338,41},'Offset'},
                    {var,{338,49},'Error'}]}]}]}]}]}],
         []}]}]}]},
  {clause,
   {340,1},
   [{nil,{340,17}},
    {var,{340,21},'_MFA'},
    {var,{340,27},'_Offset'},
    {var,{340,36},'Vst'}],
   [],
   [{debug_line,341,82},{var,{341,5},'Vst'}]}]}.
{function,
 {343,1},
 vi,2,
 [{clause,
   {343,1},
   [{var,{343,1},'_'},{var,{343,1},'_'}],
   [[{call,
      {343,1},
      {remote,{343,1},{atom,{343,1},fake},{atom,{343,1},is_beam_bif_info}},
      []}]],
   [{debug_line,343,83},{atom,{343,1},ignore}]},
  {clause,
   {343,1},
   [{tuple,{343,4},[{atom,{343,5},label},{var,{343,11},'Lbl'}]},
    {match,
     {343,17},
     {tuple,
      {343,17},
      [{atom,{343,17},vst},
       {var,{343,30},'St0'},
       {var,{343,17},'_'},
       {var,{345,36},'Branched0'},
       {var,{346,34},'Labels0'},
       {var,{343,17},'_'},
       {var,{344,35},'Counter0'}]},
     {var,{346,43},'Vst'}}],
   [],
   [{debug_line,347,84},
    {match,
     {347,5},
     {tuple,{347,5},[{var,{347,6},'St'},{var,{347,10},'Counter'}]},
     {call,
      {347,21},
      {atom,{347,21},merge_states},
      [{var,{347,34},'Lbl'},
       {var,{347,39},'St0'},
       {var,{347,44},'Branched0'},
       {var,{347,55},'Counter0'}]}},
    {debug_line,349,85},
    {match,
     {349,5},
     {var,{349,5},'Branched'},
     {map,
      {349,25},
      {var,{349,16},'Branched0'},
      [{map_field_assoc,{349,32},{var,{349,28},'Lbl'},{var,{349,35},'St'}}]}},
    {debug_line,350,86},
    {match,
     {350,5},
     {var,{350,5},'Labels'},
     {call,
      {350,14},
      {remote,{350,18},{atom,{350,14},sets},{atom,{350,19},add_element}},
      [{var,{350,31},'Lbl'},{var,{350,36},'Labels0'}]}},
    {debug_line,352,87},
    {block,
     {352,5},
     [{match,{352,5},{var,{352,5},rec2},{var,{352,5},'Vst'}},
      {'case',
       {352,13},
       {var,{352,5},rec2},
       [{clause,
         {352,13},
         [{tuple,
           {352,13},
           [{atom,{352,13},vst},
            {var,{352,13},'_'},
            {var,{352,13},'_'},
            {var,{352,13},'_'},
            {var,{352,13},'_'},
            {var,{352,13},'_'},
            {var,{352,13},'_'}]}],
         [],
         [{call,
           {352,13},
           {remote,{352,13},{atom,{352,13},erlang},{atom,{352,13},setelement}},
           [{integer,{352,13},2},
            {call,
             {354,13},
             {remote,
              {354,13},
              {atom,{354,13},erlang},
              {atom,{354,13},setelement}},
             [{integer,{354,13},4},
              {call,
               {355,13},
               {remote,
                {355,13},
                {atom,{355,13},erlang},
                {atom,{355,13},setelement}},
               [{integer,{355,13},5},
                {call,
                 {353,13},
                 {remote,
                  {353,13},
                  {atom,{353,13},erlang},
                  {atom,{353,13},setelement}},
                 [{integer,{353,13},7},
                  {var,{352,5},rec2},
                  {var,{353,21},'Counter'}]},
                {var,{355,20},'Labels'}]},
              {var,{354,22},'Branched'}]},
            {var,{352,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{352,13}}],
         [{var,[{generated,true},{location,{352,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{352,13}}],
           {remote,
            [{generated,true},{location,{352,13}}],
            {atom,[{generated,true},{location,{352,13}}],erlang},
            {atom,[{generated,true},{location,{352,13}}],error}},
           [{tuple,
             [{generated,true},{location,{352,13}}],
             [{atom,[{generated,true},{location,{352,13}}],badrecord},
              {var,{352,5},rec2}]}]}]}]}]}]},
  {clause,
   {356,1},
   [{var,{356,4},'_I'},
    {match,
     {356,8},
     {tuple,
      {356,8},
      [{atom,{356,8},vst},
       {atom,{356,21},none},
       {var,{356,8},'_'},
       {var,{356,8},'_'},
       {var,{356,8},'_'},
       {var,{356,8},'_'},
       {var,{356,8},'_'}]},
     {var,{356,27},'Vst'}}],
   [],
   [{debug_line,358,88},{var,{358,5},'Vst'}]},
  {clause,
   {364,1},
   [{tuple,
     {364,4},
     [{atom,{364,5},'%'},
      {tuple,
       {364,10},
       [{atom,{364,11},var_info},
        {var,{364,21},'Reg'},
        {var,{364,26},'Info'}]}]},
    {var,{364,34},'Vst'}],
   [],
   [{debug_line,365,89},
    {call,
     {365,5},
     {atom,{365,5},validate_var_info},
     [{var,{365,23},'Info'},{var,{365,29},'Reg'},{var,{365,34},'Vst'}]}]},
  {clause,
   {366,1},
   [{tuple,
     {366,4},
     [{atom,{366,5},'%'},
      {tuple,
       {366,10},
       [{atom,{366,11},remove_fragility},{var,{366,29},'Reg'}]}]},
    {var,{366,36},'Vst'}],
   [],
   [{debug_line,373,90},
    {call,
     {373,5},
     {atom,{373,5},remove_fragility},
     [{var,{373,22},'Reg'},{var,{373,27},'Vst'}]}]},
  {clause,
   {374,1},
   [{tuple,{374,4},[{atom,{374,5},'%'},{var,{374,9},'_'}]},
    {var,{374,13},'Vst'}],
   [],
   [{debug_line,375,91},{var,{375,5},'Vst'}]},
  {clause,
   {376,1},
   [{tuple,{376,4},[{atom,{376,5},line},{var,{376,10},'_'}]},
    {var,{376,14},'Vst'}],
   [],
   [{debug_line,377,92},{var,{377,5},'Vst'}]},
  {clause,
   {378,1},
   [{tuple,
     {378,4},
     [{atom,{378,5},executable_line},
      {var,{378,21},'_'},
      {var,{378,23},'Index'}]},
    {var,{378,31},'Vst'}],
   [[{call,
      {378,41},
      {remote,{378,41},{atom,{378,41},erlang},{atom,{378,41},is_integer}},
      [{var,{378,52},'Index'}]}]],
   [{debug_line,379,93},{var,{379,5},'Vst'}]},
  {clause,
   {380,1},
   [{tuple,
     {380,4},
     [{atom,{380,5},debug_line},
      {var,{380,16},'_'},
      {var,{380,18},'Index'},
      {var,{380,24},'Live'},
      {var,{380,29},'Info'}]},
    {var,{380,36},'Vst'}],
   [[{call,
      {380,46},
      {remote,{380,46},{atom,{380,46},erlang},{atom,{380,46},is_integer}},
      [{var,{380,57},'Index'}]},
     {call,
      {381,46},
      {remote,{381,46},{atom,{381,46},erlang},{atom,{381,46},is_integer}},
      [{var,{381,57},'Live'}]}]],
   [{debug_line,382,94},
    {call,
     {382,5},
     {atom,{382,5},validate_debug_line},
     [{var,{382,25},'Info'},{var,{382,31},'Live'},{var,{382,37},'Vst'}]}]},
  {clause,
   {383,1},
   [{atom,{383,4},nif_start},{var,{383,15},'Vst'}],
   [],
   [{debug_line,384,95},{var,{384,5},'Vst'}]},
  {clause,
   {389,1},
   [{tuple,
     {389,4},
     [{atom,{389,5},move},{var,{389,10},'Src'},{var,{389,14},'Dst'}]},
    {var,{389,20},'Vst'}],
   [],
   [{debug_line,390,96},
    {call,
     {390,5},
     {atom,{390,5},assign},
     [{var,{390,12},'Src'},{var,{390,17},'Dst'},{var,{390,22},'Vst'}]}]},
  {clause,
   {391,1},
   [{tuple,
     {391,4},
     [{atom,{391,5},swap},{var,{391,10},'RegA'},{var,{391,15},'RegB'}]},
    {var,{391,22},'Vst0'}],
   [],
   [{debug_line,392,97},
    {call,
     {392,5},
     {atom,{392,5},assert_movable},
     [{var,{392,20},'RegA'},{var,{392,26},'Vst0'}]},
    {debug_line,393,98},
    {call,
     {393,5},
     {atom,{393,5},assert_movable},
     [{var,{393,20},'RegB'},{var,{393,26},'Vst0'}]},
    {debug_line,399,99},
    {match,
     {399,5},
     {var,{399,5},'Sources'},
     {cons,
      {399,15},
      {var,{399,16},'RegA'},
      {cons,{399,21},{var,{399,21},'RegB'},{nil,{399,25}}}}},
    {debug_line,400,100},
    {match,
     {400,5},
     {var,{400,5},'Vst1'},
     {call,
      {400,12},
      {atom,{400,12},propagate_fragility},
      [{var,{400,32},'RegA'},{var,{400,38},'Sources'},{var,{400,47},'Vst0'}]}},
    {debug_line,401,101},
    {match,
     {401,5},
     {var,{401,5},'Vst2'},
     {call,
      {401,12},
      {atom,{401,12},propagate_fragility},
      [{var,{401,32},'RegB'},{var,{401,38},'Sources'},{var,{401,47},'Vst1'}]}},
    {debug_line,404,102},
    {match,
     {404,5},
     {var,{404,5},'VrefA'},
     {call,
      {404,13},
      {atom,{404,13},get_reg_vref},
      [{var,{404,26},'RegA'},{var,{404,32},'Vst2'}]}},
    {debug_line,405,103},
    {match,
     {405,5},
     {var,{405,5},'VrefB'},
     {call,
      {405,13},
      {atom,{405,13},get_reg_vref},
      [{var,{405,26},'RegB'},{var,{405,32},'Vst2'}]}},
    {debug_line,406,104},
    {match,
     {406,5},
     {var,{406,5},'Vst'},
     {call,
      {406,11},
      {atom,{406,11},set_reg_vref},
      [{var,{406,24},'VrefB'},{var,{406,31},'RegA'},{var,{406,37},'Vst2'}]}},
    {debug_line,407,105},
    {call,
     {407,5},
     {atom,{407,5},set_reg_vref},
     [{var,{407,18},'VrefA'},{var,{407,25},'RegB'},{var,{407,31},'Vst'}]}]},
  {clause,
   {408,1},
   [{tuple,
     {408,4},
     [{atom,{408,5},fmove},
      {var,{408,11},'Src'},
      {match,
       {408,15},
       {tuple,{408,15},[{atom,{408,16},fr},{var,{408,19},'_'}]},
       {var,{408,22},'Dst'}}]},
    {var,{408,28},'Vst'}],
   [],
   [{debug_line,409,106},
    {call,
     {409,5},
     {atom,{409,5},assert_type},
     [{block,0,
       [{tuple,{409,17},[{atom,{409,17},t_float},{atom,{409,17},any}]}]},
      {var,{409,29},'Src'},
      {var,{409,34},'Vst'}]},
    {debug_line,410,107},
    {call,
     {410,5},
     {atom,{410,5},set_freg},
     [{var,{410,14},'Dst'},{var,{410,19},'Vst'}]}]},
  {clause,
   {411,1},
   [{tuple,
     {411,4},
     [{atom,{411,5},fmove},
      {match,
       {411,11},
       {tuple,{411,11},[{atom,{411,12},fr},{var,{411,15},'_'}]},
       {var,{411,18},'Src'}},
      {var,{411,22},'Dst'}]},
    {var,{411,28},'Vst0'}],
   [],
   [{debug_line,412,108},
    {call,
     {412,5},
     {atom,{412,5},assert_freg_set},
     [{var,{412,21},'Src'},{var,{412,26},'Vst0'}]},
    {debug_line,413,109},
    {match,
     {413,5},
     {var,{413,5},'Vst'},
     {call,{413,11},{atom,{413,11},eat_heap_float},[{var,{413,26},'Vst0'}]}},
    {debug_line,414,110},
    {call,
     {414,5},
     {atom,{414,5},create_term},
     [{block,0,
       [{tuple,{414,17},[{atom,{414,17},t_float},{atom,{414,17},any}]}]},
      {atom,{414,29},fmove},
      {nil,{414,36}},
      {var,{414,40},'Dst'},
      {var,{414,45},'Vst'}]}]},
  {clause,
   {415,1},
   [{tuple,
     {415,4},
     [{atom,{415,5},init_yregs},
      {tuple,{415,16},[{atom,{415,17},list},{var,{415,22},'Yregs'}]}]},
    {var,{415,31},'Vst0'}],
   [],
   [{debug_line,416,111},
    {'case',
     {416,5},
     {call,
      {416,10},
      {remote,{416,17},{atom,{416,10},ordsets},{atom,{416,18},from_list}},
      [{var,{416,28},'Yregs'}]},
     [{clause,
       {417,9},
       [{nil,{417,9}}],
       [],
       [{debug_line,417,112},
        {call,{417,15},{atom,{417,15},error},[{atom,{417,21},empty_list}]}]},
      {clause,
       {418,9},
       [{var,{418,9},'Yregs'}],
       [],
       [{debug_line,418,113},{atom,{418,18},ok}]},
      {clause,
       {419,9},
       [{var,{419,9},'_'}],
       [],
       [{debug_line,419,114},
        {call,{419,14},{atom,{419,14},error},[{atom,{419,20},not_ordset}]}]}]},
    {debug_line,421,115},
    {call,
     {421,5},
     {remote,{421,5},{atom,{421,5},lists},{atom,{421,5},foldl}},
     [{block,0,
       [{'fun',
         {421,11},
         {clauses,
          [{clause,
            {421,14},
            [{var,{421,15},'Y'},{var,{421,18},'Vst'}],
            [],
            [{debug_line,422,116},
             {call,
              {422,19},
              {atom,{422,19},create_tag},
              [{atom,{422,30},initialized},
               {atom,{422,43},init},
               {nil,{422,49}},
               {var,{422,53},'Y'},
               {var,{422,56},'Vst'}]}]}]}}]},
      {var,{423,16},'Vst0'},
      {var,{423,22},'Yregs'}]}]},
  {clause,
   {429,1},
   [{tuple,
     {429,4},
     [{atom,{429,5},jump},
      {tuple,{429,10},[{atom,{429,11},f},{var,{429,13},'Lbl'}]}]},
    {var,{429,20},'Vst'}],
   [],
   [{debug_line,430,117},
    {call,{430,5},{atom,{430,5},assert_no_exception},[{var,{430,25},'Lbl'}]},
    {debug_line,433,118},
    {call,
     {433,5},
     {atom,{433,5},branch},
     [{var,{433,12},'Lbl'},
      {var,{433,17},'Vst'},
      {block,0,[{'fun',{433,22},{function,kill_state,1}}]}]}]},
  {clause,
   {434,1},
   [{tuple,
     {434,4},
     [{atom,{434,5},select_val},
      {var,{434,16},'Src0'},
      {tuple,{434,21},[{atom,{434,22},f},{var,{434,24},'Fail'}]},
      {tuple,{434,30},[{atom,{434,31},list},{var,{434,36},'Choices'}]}]},
    {var,{434,47},'Vst'}],
   [],
   [{debug_line,435,119},
    {match,
     {435,5},
     {var,{435,5},'Src'},
     {call,
      {435,11},
      {atom,{435,11},unpack_typed_arg},
      [{var,{435,28},'Src0'},{var,{435,34},'Vst'}]}},
    {debug_line,436,120},
    {call,
     {436,5},
     {atom,{436,5},assert_term},
     [{var,{436,17},'Src'},{var,{436,22},'Vst'}]},
    {debug_line,437,121},
    {call,{437,5},{atom,{437,5},assert_choices},[{var,{437,20},'Choices'}]},
    {debug_line,438,122},
    {call,
     {438,5},
     {atom,{438,5},validate_select_val},
     [{var,{438,25},'Fail'},
      {var,{438,31},'Choices'},
      {var,{438,40},'Src'},
      {var,{438,45},'Vst'}]}]},
  {clause,
   {439,1},
   [{tuple,
     {439,4},
     [{atom,{439,5},select_tuple_arity},
      {var,{439,24},'Tuple0'},
      {tuple,{439,31},[{atom,{439,32},f},{var,{439,34},'Fail'}]},
      {tuple,{439,40},[{atom,{439,41},list},{var,{439,46},'Choices'}]}]},
    {var,{439,57},'Vst'}],
   [],
   [{debug_line,440,123},
    {match,
     {440,5},
     {var,{440,5},'Tuple'},
     {call,
      {440,13},
      {atom,{440,13},unpack_typed_arg},
      [{var,{440,30},'Tuple0'},{var,{440,38},'Vst'}]}},
    {debug_line,442,124},
    {call,
     {442,5},
     {atom,{442,5},assert_type},
     [{block,0,
       [{tuple,
         {442,17},
         [{atom,{442,17},t_tuple},
          {integer,{442,17},0},
          {atom,{442,17},false},
          {map,{442,17},[]}]}]},
      {var,{442,29},'Tuple'},
      {var,{442,36},'Vst'}]},
    {debug_line,443,125},
    {call,{443,5},{atom,{443,5},assert_arities},[{var,{443,20},'Choices'}]},
    {debug_line,444,126},
    {call,
     {444,5},
     {atom,{444,5},validate_select_tuple_arity},
     [{var,{444,33},'Fail'},
      {var,{444,39},'Choices'},
      {var,{444,48},'Tuple'},
      {var,{444,55},'Vst'}]}]},
  {clause,
   {445,1},
   [{tuple,
     {445,4},
     [{atom,{445,5},test},
      {atom,{445,10},has_map_fields},
      {tuple,{445,25},[{atom,{445,26},f},{var,{445,28},'Lbl'}]},
      {var,{445,33},'Src'},
      {tuple,{445,37},[{atom,{445,38},list},{var,{445,43},'List'}]}]},
    {var,{445,51},'Vst'}],
   [],
   [{debug_line,446,127},
    {call,
     {446,5},
     {atom,{446,5},verify_has_map_fields},
     [{var,{446,27},'Lbl'},
      {var,{446,32},'Src'},
      {var,{446,37},'List'},
      {var,{446,43},'Vst'}]}]},
  {clause,
   {447,1},
   [{tuple,
     {447,4},
     [{atom,{447,5},test},
      {atom,{447,10},is_atom},
      {tuple,{447,18},[{atom,{447,19},f},{var,{447,21},'Lbl'}]},
      {cons,{447,26},{var,{447,27},'Src'},{nil,{447,30}}}]},
    {var,{447,34},'Vst'}],
   [],
   [{debug_line,448,128},
    {call,
     {448,5},
     {atom,{448,5},type_test},
     [{var,{448,15},'Lbl'},
      {block,0,
       [{tuple,{448,20},[{atom,{448,20},t_atom},{atom,{448,20},any}]}]},
      {var,{448,31},'Src'},
      {var,{448,36},'Vst'}]}]},
  {clause,
   {449,1},
   [{tuple,
     {449,4},
     [{atom,{449,5},test},
      {atom,{449,10},is_binary},
      {tuple,{449,20},[{atom,{449,21},f},{var,{449,23},'Lbl'}]},
      {cons,{449,28},{var,{449,29},'Src'},{nil,{449,32}}}]},
    {var,{449,36},'Vst'}],
   [],
   [{debug_line,450,129},
    {call,
     {450,5},
     {atom,{450,5},type_test},
     [{var,{450,15},'Lbl'},
      {block,0,
       [{tuple,
         {450,20},
         [{atom,{450,20},t_bitstring},
          {integer,{450,43},8},
          {atom,{450,20},false}]}]},
      {var,{450,47},'Src'},
      {var,{450,52},'Vst'}]}]},
  {clause,
   {451,1},
   [{tuple,
     {451,4},
     [{atom,{451,5},test},
      {atom,{451,10},is_bitstr},
      {tuple,{451,20},[{atom,{451,21},f},{var,{451,23},'Lbl'}]},
      {cons,{451,28},{var,{451,29},'Src'},{nil,{451,32}}}]},
    {var,{451,36},'Vst'}],
   [],
   [{debug_line,452,130},
    {call,
     {452,5},
     {atom,{452,5},type_test},
     [{var,{452,15},'Lbl'},
      {block,0,
       [{tuple,
         {452,20},
         [{atom,{452,20},t_bitstring},
          {integer,{452,20},1},
          {atom,{452,20},false}]}]},
      {var,{452,36},'Src'},
      {var,{452,41},'Vst'}]}]},
  {clause,
   {453,1},
   [{tuple,
     {453,4},
     [{atom,{453,5},test},
      {atom,{453,10},is_boolean},
      {tuple,{453,21},[{atom,{453,22},f},{var,{453,24},'Lbl'}]},
      {cons,{453,29},{var,{453,30},'Src'},{nil,{453,33}}}]},
    {var,{453,37},'Vst'}],
   [],
   [{debug_line,454,131},
    {call,
     {454,5},
     {atom,{454,5},type_test},
     [{var,{454,15},'Lbl'},
      {block,0,
       [{call,
         {454,20},
         {remote,
          {454,30},
          {atom,{454,20},beam_types},
          {atom,{454,31},make_boolean}},
         []}]},
      {var,{454,47},'Src'},
      {var,{454,52},'Vst'}]}]},
  {clause,
   {455,1},
   [{tuple,
     {455,4},
     [{atom,{455,5},test},
      {atom,{455,10},is_float},
      {tuple,{455,19},[{atom,{455,20},f},{var,{455,22},'Lbl'}]},
      {cons,{455,27},{var,{455,28},'Src'},{nil,{455,31}}}]},
    {var,{455,35},'Vst'}],
   [],
   [{debug_line,456,132},
    {call,
     {456,5},
     {atom,{456,5},type_test},
     [{var,{456,15},'Lbl'},
      {block,0,
       [{tuple,{456,20},[{atom,{456,20},t_float},{atom,{456,20},any}]}]},
      {var,{456,32},'Src'},
      {var,{456,37},'Vst'}]}]},
  {clause,
   {457,1},
   [{tuple,
     {457,4},
     [{atom,{457,5},test},
      {atom,{457,10},is_function},
      {tuple,{457,22},[{atom,{457,23},f},{var,{457,25},'Lbl'}]},
      {cons,{457,30},{var,{457,31},'Src'},{nil,{457,34}}}]},
    {var,{457,38},'Vst'}],
   [],
   [{debug_line,458,133},
    {call,
     {458,5},
     {atom,{458,5},type_test},
     [{var,{458,15},'Lbl'},
      {block,0,
       [{tuple,
         {458,20},
         [{atom,{458,20},t_fun},
          {atom,{458,20},any},
          {atom,{458,20},any},
          {atom,{458,20},any}]}]},
      {var,{458,30},'Src'},
      {var,{458,35},'Vst'}]}]},
  {clause,
   {459,1},
   [{tuple,
     {459,4},
     [{atom,{459,5},test},
      {atom,{459,10},is_function2},
      {tuple,{459,23},[{atom,{459,24},f},{var,{459,26},'Lbl'}]},
      {cons,
       {459,31},
       {var,{459,32},'Src'},
       {cons,
        {459,36},
        {tuple,{459,36},[{atom,{459,37},integer},{var,{459,45},'Arity'}]},
        {nil,{459,51}}}}]},
    {var,{459,55},'Vst'}],
   [[{op,{460,14},'>=',{var,{460,8},'Arity'},{integer,{460,17},0}},
     {op,{460,26},'=<',{var,{460,20},'Arity'},{integer,{460,30},255}}]],
   [{debug_line,461,134},
    {call,
     {461,5},
     {atom,{461,5},type_test},
     [{var,{461,15},'Lbl'},
      {block,0,
       [{tuple,
         {461,20},
         [{atom,{461,20},t_fun},
          {var,{461,33},'Arity'},
          {atom,{461,20},any},
          {atom,{461,20},any}]}]},
      {var,{461,41},'Src'},
      {var,{461,46},'Vst'}]}]},
  {clause,
   {462,1},
   [{tuple,
     {462,4},
     [{atom,{462,5},test},
      {atom,{462,10},is_function2},
      {tuple,{462,23},[{atom,{462,24},f},{var,{462,26},'Lbl'}]},
      {cons,
       {462,31},
       {var,{462,32},'Src0'},
       {cons,{462,37},{var,{462,37},'_Arity'},{nil,{462,43}}}}]},
    {var,{462,47},'Vst'}],
   [],
   [{debug_line,463,135},
    {match,
     {463,5},
     {var,{463,5},'Src'},
     {call,
      {463,11},
      {atom,{463,11},unpack_typed_arg},
      [{var,{463,28},'Src0'},{var,{463,34},'Vst'}]}},
    {debug_line,464,136},
    {call,
     {464,5},
     {atom,{464,5},assert_term},
     [{var,{464,17},'Src'},{var,{464,22},'Vst'}]},
    {debug_line,465,137},
    {call,
     {465,5},
     {atom,{465,5},branch},
     [{var,{465,12},'Lbl'},
      {var,{465,17},'Vst'},
      {block,0,
       [{debug_line,466,138},
        {'fun',
         {466,12},
         {clauses,
          [{clause,
            {466,15},
            [{var,{466,16},'FailVst'}],
            [],
            [{debug_line,470,139},{var,{470,20},'FailVst'}]}]}}]},
      {block,0,
       [{debug_line,472,140},
        {'fun',
         {472,12},
         {clauses,
          [{clause,
            {472,15},
            [{var,{472,16},'SuccVst'}],
            [],
            [{debug_line,473,141},
             {call,
              {473,20},
              {atom,{473,20},update_type},
              [{block,0,[{'fun',{473,32},{function,meet,2}}]},
               {block,0,
                [{tuple,
                  {473,44},
                  [{atom,{473,44},t_fun},
                   {atom,{473,44},any},
                   {atom,{473,44},any},
                   {atom,{473,44},any}]}]},
               {var,{473,54},'Src'},
               {var,{473,59},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {475,1},
   [{tuple,
     {475,4},
     [{atom,{475,5},test},
      {atom,{475,10},is_tuple},
      {tuple,{475,19},[{atom,{475,20},f},{var,{475,22},'Lbl'}]},
      {cons,{475,27},{var,{475,28},'Src'},{nil,{475,31}}}]},
    {var,{475,35},'Vst'}],
   [],
   [{debug_line,476,142},
    {call,
     {476,5},
     {atom,{476,5},type_test},
     [{var,{476,15},'Lbl'},
      {block,0,
       [{tuple,
         {476,20},
         [{atom,{476,20},t_tuple},
          {integer,{476,20},0},
          {atom,{476,20},false},
          {map,{476,20},[]}]}]},
      {var,{476,32},'Src'},
      {var,{476,37},'Vst'}]}]},
  {clause,
   {477,1},
   [{tuple,
     {477,4},
     [{atom,{477,5},test},
      {atom,{477,10},is_integer},
      {tuple,{477,21},[{atom,{477,22},f},{var,{477,24},'Lbl'}]},
      {cons,{477,29},{var,{477,30},'Src'},{nil,{477,33}}}]},
    {var,{477,37},'Vst'}],
   [],
   [{debug_line,478,143},
    {call,
     {478,5},
     {atom,{478,5},type_test},
     [{var,{478,15},'Lbl'},
      {block,0,
       [{tuple,{478,20},[{atom,{478,20},t_integer},{atom,{478,20},any}]}]},
      {var,{478,34},'Src'},
      {var,{478,39},'Vst'}]}]},
  {clause,
   {479,1},
   [{tuple,
     {479,4},
     [{atom,{479,5},test},
      {atom,{479,10},is_nonempty_list},
      {tuple,{479,27},[{atom,{479,28},f},{var,{479,30},'Lbl'}]},
      {cons,{479,35},{var,{479,36},'Src'},{nil,{479,39}}}]},
    {var,{479,43},'Vst'}],
   [],
   [{debug_line,480,144},
    {call,
     {480,5},
     {atom,{480,5},type_test},
     [{var,{480,15},'Lbl'},
      {block,0,
       [{tuple,
         {480,20},
         [{atom,{480,20},t_cons},{atom,{480,20},any},{atom,{480,20},any}]}]},
      {var,{480,31},'Src'},
      {var,{480,36},'Vst'}]}]},
  {clause,
   {481,1},
   [{tuple,
     {481,4},
     [{atom,{481,5},test},
      {atom,{481,10},is_number},
      {tuple,{481,20},[{atom,{481,21},f},{var,{481,23},'Lbl'}]},
      {cons,{481,28},{var,{481,29},'Src'},{nil,{481,32}}}]},
    {var,{481,36},'Vst'}],
   [],
   [{debug_line,482,145},
    {call,
     {482,5},
     {atom,{482,5},type_test},
     [{var,{482,15},'Lbl'},
      {block,0,
       [{tuple,{482,20},[{atom,{482,20},t_number},{atom,{482,20},any}]}]},
      {var,{482,33},'Src'},
      {var,{482,38},'Vst'}]}]},
  {clause,
   {483,1},
   [{tuple,
     {483,4},
     [{atom,{483,5},test},
      {atom,{483,10},is_list},
      {tuple,{483,18},[{atom,{483,19},f},{var,{483,21},'Lbl'}]},
      {cons,{483,26},{var,{483,27},'Src'},{nil,{483,30}}}]},
    {var,{483,34},'Vst'}],
   [],
   [{debug_line,484,146},
    {call,
     {484,5},
     {atom,{484,5},type_test},
     [{var,{484,15},'Lbl'},
      {block,0,
       [{tuple,
         {484,20},
         [{atom,{484,20},t_list},{atom,{484,20},any},{atom,{484,20},any}]}]},
      {var,{484,31},'Src'},
      {var,{484,36},'Vst'}]}]},
  {clause,
   {485,1},
   [{tuple,
     {485,4},
     [{atom,{485,5},test},
      {atom,{485,10},is_map},
      {tuple,{485,17},[{atom,{485,18},f},{var,{485,20},'Lbl'}]},
      {cons,{485,25},{var,{485,26},'Src'},{nil,{485,29}}}]},
    {var,{485,33},'Vst'}],
   [],
   [{debug_line,486,147},
    {call,
     {486,5},
     {atom,{486,5},type_test},
     [{var,{486,15},'Lbl'},
      {block,0,
       [{tuple,
         {486,20},
         [{atom,{486,20},t_map},{atom,{486,20},any},{atom,{486,20},any}]}]},
      {var,{486,30},'Src'},
      {var,{486,35},'Vst'}]}]},
  {clause,
   {487,1},
   [{tuple,
     {487,4},
     [{atom,{487,5},test},
      {atom,{487,10},is_nil},
      {tuple,{487,17},[{atom,{487,18},f},{var,{487,20},'Lbl'}]},
      {cons,{487,25},{var,{487,26},'Src0'},{nil,{487,30}}}]},
    {var,{487,34},'Vst'}],
   [],
   [{debug_line,490,148},
    {match,
     {490,5},
     {var,{490,5},'Src'},
     {call,
      {490,11},
      {atom,{490,11},unpack_typed_arg},
      [{var,{490,28},'Src0'},{var,{490,34},'Vst'}]}},
    {debug_line,491,149},
    {call,
     {491,5},
     {atom,{491,5},assert_term},
     [{var,{491,17},'Src'},{var,{491,22},'Vst'}]},
    {debug_line,492,150},
    {call,
     {492,5},
     {atom,{492,5},branch},
     [{var,{492,12},'Lbl'},
      {var,{492,17},'Vst'},
      {block,0,
       [{debug_line,493,151},
        {'fun',
         {493,12},
         {clauses,
          [{clause,
            {493,15},
            [{var,{493,16},'FailVst'}],
            [],
            [{debug_line,494,152},
             {call,
              {494,20},
              {atom,{494,20},update_ne_types},
              [{var,{494,36},'Src'},
               {atom,{494,41},nil},
               {var,{494,46},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,496,153},
        {'fun',
         {496,12},
         {clauses,
          [{clause,
            {496,15},
            [{var,{496,16},'SuccVst'}],
            [],
            [{debug_line,497,154},
             {call,
              {497,20},
              {atom,{497,20},update_eq_types},
              [{var,{497,36},'Src'},
               {atom,{497,41},nil},
               {var,{497,46},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {499,1},
   [{tuple,
     {499,4},
     [{atom,{499,5},test},
      {atom,{499,10},is_pid},
      {tuple,{499,17},[{atom,{499,18},f},{var,{499,20},'Lbl'}]},
      {cons,{499,25},{var,{499,26},'Src'},{nil,{499,29}}}]},
    {var,{499,33},'Vst'}],
   [],
   [{debug_line,500,155},
    {call,
     {500,5},
     {atom,{500,5},type_test},
     [{var,{500,15},'Lbl'},
      {atom,{500,20},pid},
      {var,{500,25},'Src'},
      {var,{500,30},'Vst'}]}]},
  {clause,
   {501,1},
   [{tuple,
     {501,4},
     [{atom,{501,5},test},
      {atom,{501,10},is_port},
      {tuple,{501,18},[{atom,{501,19},f},{var,{501,21},'Lbl'}]},
      {cons,{501,26},{var,{501,27},'Src'},{nil,{501,30}}}]},
    {var,{501,34},'Vst'}],
   [],
   [{debug_line,502,156},
    {call,
     {502,5},
     {atom,{502,5},type_test},
     [{var,{502,15},'Lbl'},
      {atom,{502,20},port},
      {var,{502,26},'Src'},
      {var,{502,31},'Vst'}]}]},
  {clause,
   {503,1},
   [{tuple,
     {503,4},
     [{atom,{503,5},test},
      {atom,{503,10},is_reference},
      {tuple,{503,23},[{atom,{503,24},f},{var,{503,26},'Lbl'}]},
      {cons,{503,31},{var,{503,32},'Src'},{nil,{503,35}}}]},
    {var,{503,39},'Vst'}],
   [],
   [{debug_line,504,157},
    {call,
     {504,5},
     {atom,{504,5},type_test},
     [{var,{504,15},'Lbl'},
      {atom,{504,20},reference},
      {var,{504,31},'Src'},
      {var,{504,36},'Vst'}]}]},
  {clause,
   {505,1},
   [{tuple,
     {505,4},
     [{atom,{505,5},test},
      {atom,{505,10},test_arity},
      {tuple,{505,21},[{atom,{505,22},f},{var,{505,24},'Lbl'}]},
      {cons,
       {505,29},
       {var,{505,30},'Tuple'},
       {cons,{505,36},{var,{505,36},'Sz'},{nil,{505,38}}}}]},
    {var,{505,42},'Vst'}],
   [[{call,
      {505,52},
      {remote,{505,52},{atom,{505,52},erlang},{atom,{505,52},is_integer}},
      [{var,{505,63},'Sz'}]}]],
   [{debug_line,506,158},
    {call,
     {506,5},
     {atom,{506,5},assert_type},
     [{block,0,
       [{tuple,
         {506,17},
         [{atom,{506,17},t_tuple},
          {integer,{506,17},0},
          {atom,{506,17},false},
          {map,{506,17},[]}]}]},
      {var,{506,29},'Tuple'},
      {var,{506,36},'Vst'}]},
    {debug_line,507,159},
    {match,
     {507,5},
     {var,{507,5},'Type'},
     {tuple,
      {507,13},
      [{atom,{507,13},t_tuple},
       {var,{507,38},'Sz'},
       {atom,{507,28},true},
       {map,{507,13},[]}]}},
    {debug_line,508,160},
    {call,
     {508,5},
     {atom,{508,5},type_test},
     [{var,{508,15},'Lbl'},
      {var,{508,20},'Type'},
      {var,{508,26},'Tuple'},
      {var,{508,33},'Vst'}]}]},
  {clause,
   {509,1},
   [{tuple,
     {509,4},
     [{atom,{509,5},test},
      {atom,{509,10},is_tagged_tuple},
      {tuple,{509,26},[{atom,{509,27},f},{var,{509,29},'Lbl'}]},
      {cons,
       {509,34},
       {var,{509,35},'Src0'},
       {cons,
        {509,40},
        {var,{509,40},'Sz'},
        {cons,{509,43},{var,{509,43},'Atom'},{nil,{509,47}}}}}]},
    {var,{509,51},'Vst'}],
   [],
   [{debug_line,510,161},
    {match,
     {510,5},
     {var,{510,5},'Src'},
     {call,
      {510,11},
      {atom,{510,11},unpack_typed_arg},
      [{var,{510,28},'Src0'},{var,{510,34},'Vst'}]}},
    {debug_line,511,162},
    {call,
     {511,5},
     {atom,{511,5},assert_term},
     [{var,{511,17},'Src'},{var,{511,22},'Vst'}]},
    {debug_line,512,163},
    {match,
     {512,5},
     {var,{512,5},'Es'},
     {map,
      {512,10},
      [{map_field_assoc,
        {512,15},
        {integer,{512,13},1},
        {call,
         {512,18},
         {atom,{512,18},get_literal_type},
         [{var,{512,35},'Atom'}]}}]}},
    {debug_line,513,164},
    {match,
     {513,5},
     {var,{513,5},'Type'},
     {tuple,
      {513,12},
      [{atom,{513,12},t_tuple},
       {var,{513,37},'Sz'},
       {atom,{513,27},true},
       {var,{513,49},'Es'}]}},
    {debug_line,514,165},
    {call,
     {514,5},
     {atom,{514,5},type_test},
     [{var,{514,15},'Lbl'},
      {var,{514,20},'Type'},
      {var,{514,26},'Src'},
      {var,{514,31},'Vst'}]}]},
  {clause,
   {515,1},
   [{tuple,
     {515,4},
     [{atom,{515,5},test},
      {atom,{515,10},is_eq_exact},
      {tuple,{515,22},[{atom,{515,23},f},{var,{515,25},'Lbl'}]},
      {cons,
       {515,30},
       {var,{515,31},'Src0'},
       {cons,{515,36},{var,{515,36},'Val0'},{nil,{515,40}}}}]},
    {var,{515,44},'Vst'}],
   [],
   [{debug_line,516,166},
    {call,{516,5},{atom,{516,5},assert_no_exception},[{var,{516,25},'Lbl'}]},
    {debug_line,517,167},
    {match,
     {517,5},
     {var,{517,5},'Src'},
     {call,
      {517,11},
      {atom,{517,11},unpack_typed_arg},
      [{var,{517,28},'Src0'},{var,{517,34},'Vst'}]}},
    {debug_line,518,168},
    {call,
     {518,5},
     {atom,{518,5},assert_term},
     [{var,{518,17},'Src'},{var,{518,22},'Vst'}]},
    {debug_line,519,169},
    {match,
     {519,5},
     {var,{519,5},'Val'},
     {call,
      {519,11},
      {atom,{519,11},unpack_typed_arg},
      [{var,{519,28},'Val0'},{var,{519,34},'Vst'}]}},
    {debug_line,520,170},
    {call,
     {520,5},
     {atom,{520,5},assert_term},
     [{var,{520,17},'Val'},{var,{520,22},'Vst'}]},
    {debug_line,521,171},
    {call,
     {521,5},
     {atom,{521,5},branch},
     [{var,{521,12},'Lbl'},
      {var,{521,17},'Vst'},
      {block,0,
       [{debug_line,522,172},
        {'fun',
         {522,12},
         {clauses,
          [{clause,
            {522,15},
            [{var,{522,16},'FailVst'}],
            [],
            [{debug_line,523,173},
             {call,
              {523,20},
              {atom,{523,20},update_ne_types},
              [{var,{523,36},'Src'},
               {var,{523,41},'Val'},
               {var,{523,46},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,525,174},
        {'fun',
         {525,12},
         {clauses,
          [{clause,
            {525,15},
            [{var,{525,16},'SuccVst'}],
            [],
            [{debug_line,526,175},
             {call,
              {526,20},
              {atom,{526,20},update_eq_types},
              [{var,{526,36},'Src'},
               {var,{526,41},'Val'},
               {var,{526,46},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {528,1},
   [{tuple,
     {528,4},
     [{atom,{528,5},test},
      {atom,{528,10},is_ne_exact},
      {tuple,{528,22},[{atom,{528,23},f},{var,{528,25},'Lbl'}]},
      {cons,
       {528,30},
       {var,{528,31},'Src0'},
       {cons,{528,36},{var,{528,36},'Val0'},{nil,{528,40}}}}]},
    {var,{528,44},'Vst'}],
   [],
   [{debug_line,529,176},
    {call,{529,5},{atom,{529,5},assert_no_exception},[{var,{529,25},'Lbl'}]},
    {debug_line,530,177},
    {match,
     {530,5},
     {var,{530,5},'Src'},
     {call,
      {530,11},
      {atom,{530,11},unpack_typed_arg},
      [{var,{530,28},'Src0'},{var,{530,34},'Vst'}]}},
    {debug_line,531,178},
    {call,
     {531,5},
     {atom,{531,5},assert_term},
     [{var,{531,17},'Src'},{var,{531,22},'Vst'}]},
    {debug_line,532,179},
    {match,
     {532,5},
     {var,{532,5},'Val'},
     {call,
      {532,11},
      {atom,{532,11},unpack_typed_arg},
      [{var,{532,28},'Val0'},{var,{532,34},'Vst'}]}},
    {debug_line,533,180},
    {call,
     {533,5},
     {atom,{533,5},assert_term},
     [{var,{533,17},'Val'},{var,{533,22},'Vst'}]},
    {debug_line,534,181},
    {call,
     {534,5},
     {atom,{534,5},branch},
     [{var,{534,12},'Lbl'},
      {var,{534,17},'Vst'},
      {block,0,
       [{debug_line,535,182},
        {'fun',
         {535,12},
         {clauses,
          [{clause,
            {535,15},
            [{var,{535,16},'FailVst'}],
            [],
            [{debug_line,536,183},
             {call,
              {536,20},
              {atom,{536,20},update_eq_types},
              [{var,{536,36},'Src'},
               {var,{536,41},'Val'},
               {var,{536,46},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,538,184},
        {'fun',
         {538,12},
         {clauses,
          [{clause,
            {538,15},
            [{var,{538,16},'SuccVst'}],
            [],
            [{debug_line,539,185},
             {call,
              {539,20},
              {atom,{539,20},update_ne_types},
              [{var,{539,36},'Src'},
               {var,{539,41},'Val'},
               {var,{539,46},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {547,1},
   [{tuple,
     {547,4},
     [{atom,{547,5},get_list},
      {var,{547,14},'Src'},
      {var,{547,18},'D1'},
      {var,{547,21},'D2'}]},
    {var,{547,26},'Vst0'}],
   [],
   [{debug_line,548,186},
    {call,{548,5},{atom,{548,5},assert_not_literal},[{var,{548,24},'Src'}]},
    {debug_line,549,187},
    {call,
     {549,5},
     {atom,{549,5},assert_type},
     [{block,0,
       [{tuple,
         {549,17},
         [{atom,{549,17},t_cons},{atom,{549,17},any},{atom,{549,17},any}]}]},
      {var,{549,28},'Src'},
      {var,{549,33},'Vst0'}]},
    {debug_line,551,188},
    {match,
     {551,5},
     {var,{551,5},'SrcType'},
     {call,
      {551,15},
      {atom,{551,15},get_term_type},
      [{var,{551,29},'Src'},{var,{551,34},'Vst0'}]}},
    {debug_line,552,189},
    {match,
     {552,5},
     {tuple,
      {552,5},
      [{var,{552,6},'HeadType'},{var,{552,16},'_'},{var,{552,19},'_'}]},
     {call,
      {552,24},
      {remote,{552,39},{atom,{552,24},beam_call_types},{atom,{552,40},types}},
      [{atom,{552,46},erlang},
       {atom,{552,54},hd},
       {block,0,[{cons,{552,58},{var,{552,59},'SrcType'},{nil,{552,66}}}]}]}},
    {debug_line,553,190},
    {match,
     {553,5},
     {tuple,
      {553,5},
      [{var,{553,6},'TailType'},{var,{553,16},'_'},{var,{553,19},'_'}]},
     {call,
      {553,24},
      {remote,{553,39},{atom,{553,24},beam_call_types},{atom,{553,40},types}},
      [{atom,{553,46},erlang},
       {atom,{553,54},tl},
       {block,0,[{cons,{553,58},{var,{553,59},'SrcType'},{nil,{553,66}}}]}]}},
    {debug_line,555,191},
    {match,
     {555,5},
     {var,{555,5},'Vst'},
     {call,
      {555,11},
      {atom,{555,11},extract_term},
      [{var,{555,24},'HeadType'},
       {atom,{555,34},get_hd},
       {block,0,[{cons,{555,42},{var,{555,43},'Src'},{nil,{555,46}}}]},
       {var,{555,49},'D1'},
       {var,{555,53},'Vst0'}]}},
    {debug_line,556,192},
    {call,
     {556,5},
     {atom,{556,5},extract_term},
     [{var,{556,18},'TailType'},
      {atom,{556,28},get_tl},
      {block,0,[{cons,{556,36},{var,{556,37},'Src'},{nil,{556,40}}}]},
      {var,{556,43},'D2'},
      {var,{556,47},'Vst'},
      {var,{556,52},'Vst0'}]}]},
  {clause,
   {557,1},
   [{tuple,
     {557,4},
     [{atom,{557,5},get_hd},{var,{557,12},'Src'},{var,{557,16},'Dst'}]},
    {var,{557,22},'Vst'}],
   [],
   [{debug_line,558,193},
    {call,{558,5},{atom,{558,5},assert_not_literal},[{var,{558,24},'Src'}]},
    {debug_line,559,194},
    {call,
     {559,5},
     {atom,{559,5},assert_type},
     [{block,0,
       [{tuple,
         {559,17},
         [{atom,{559,17},t_cons},{atom,{559,17},any},{atom,{559,17},any}]}]},
      {var,{559,28},'Src'},
      {var,{559,33},'Vst'}]},
    {debug_line,561,195},
    {match,
     {561,5},
     {var,{561,5},'SrcType'},
     {call,
      {561,15},
      {atom,{561,15},get_term_type},
      [{var,{561,29},'Src'},{var,{561,34},'Vst'}]}},
    {debug_line,562,196},
    {match,
     {562,5},
     {tuple,
      {562,5},
      [{var,{562,6},'HeadType'},{var,{562,16},'_'},{var,{562,19},'_'}]},
     {call,
      {562,24},
      {remote,{562,39},{atom,{562,24},beam_call_types},{atom,{562,40},types}},
      [{atom,{562,46},erlang},
       {atom,{562,54},hd},
       {block,0,[{cons,{562,58},{var,{562,59},'SrcType'},{nil,{562,66}}}]}]}},
    {debug_line,564,197},
    {call,
     {564,5},
     {atom,{564,5},extract_term},
     [{var,{564,18},'HeadType'},
      {atom,{564,28},get_hd},
      {block,0,[{cons,{564,36},{var,{564,37},'Src'},{nil,{564,40}}}]},
      {var,{564,43},'Dst'},
      {var,{564,48},'Vst'}]}]},
  {clause,
   {565,1},
   [{tuple,
     {565,4},
     [{atom,{565,5},get_tl},{var,{565,12},'Src'},{var,{565,16},'Dst'}]},
    {var,{565,22},'Vst'}],
   [],
   [{debug_line,566,198},
    {call,{566,5},{atom,{566,5},assert_not_literal},[{var,{566,24},'Src'}]},
    {debug_line,567,199},
    {call,
     {567,5},
     {atom,{567,5},assert_type},
     [{block,0,
       [{tuple,
         {567,17},
         [{atom,{567,17},t_cons},{atom,{567,17},any},{atom,{567,17},any}]}]},
      {var,{567,28},'Src'},
      {var,{567,33},'Vst'}]},
    {debug_line,569,200},
    {match,
     {569,5},
     {var,{569,5},'SrcType'},
     {call,
      {569,15},
      {atom,{569,15},get_term_type},
      [{var,{569,29},'Src'},{var,{569,34},'Vst'}]}},
    {debug_line,570,201},
    {match,
     {570,5},
     {tuple,
      {570,5},
      [{var,{570,6},'TailType'},{var,{570,16},'_'},{var,{570,19},'_'}]},
     {call,
      {570,24},
      {remote,{570,39},{atom,{570,24},beam_call_types},{atom,{570,40},types}},
      [{atom,{570,46},erlang},
       {atom,{570,54},tl},
       {block,0,[{cons,{570,58},{var,{570,59},'SrcType'},{nil,{570,66}}}]}]}},
    {debug_line,572,202},
    {call,
     {572,5},
     {atom,{572,5},extract_term},
     [{var,{572,18},'TailType'},
      {atom,{572,28},get_tl},
      {block,0,[{cons,{572,36},{var,{572,37},'Src'},{nil,{572,40}}}]},
      {var,{572,43},'Dst'},
      {var,{572,48},'Vst'}]}]},
  {clause,
   {573,1},
   [{tuple,
     {573,4},
     [{atom,{573,5},get_tuple_element},
      {var,{573,23},'Src'},
      {var,{573,27},'N'},
      {var,{573,29},'Dst'}]},
    {var,{573,35},'Vst'}],
   [],
   [{debug_line,574,203},
    {match,
     {574,5},
     {var,{574,5},'Index'},
     {op,{574,14},'+',{var,{574,13},'N'},{integer,{574,15},1}}},
    {debug_line,575,204},
    {call,{575,5},{atom,{575,5},assert_not_literal},[{var,{575,24},'Src'}]},
    {debug_line,576,205},
    {call,
     {576,5},
     {atom,{576,5},assert_type},
     [{block,0,
       [{tuple,
         {576,17},
         [{atom,{576,17},t_tuple},
          {var,{576,31},'Index'},
          {atom,{576,17},false},
          {map,{576,17},[]}]}]},
      {var,{576,39},'Src'},
      {var,{576,44},'Vst'}]},
    {debug_line,578,206},
    {match,
     {578,5},
     {var,{578,5},'VRef'},
     {call,
      {578,12},
      {atom,{578,12},get_reg_vref},
      [{var,{578,25},'Src'},{var,{578,30},'Vst'}]}},
    {debug_line,579,207},
    {match,
     {579,5},
     {var,{579,5},'Type'},
     {'fun',
      {579,12},
      {clauses,
       [{clause,
         {579,15},
         [{var,{579,16},'Vs'}],
         [],
         [{debug_line,580,208},
          {match,
           {580,21},
           {tuple,
            {580,21},
            [{atom,{580,21},value},
             {var,{580,21},'_'},
             {var,{580,21},'_'},
             {var,{580,33},'T'}]},
           {call,
            {580,38},
            {remote,{580,38},{atom,{580,38},erlang},{atom,{580,38},map_get}},
            [{var,{580,46},'VRef'},{var,{580,52},'Vs'}]}},
          {debug_line,581,209},
          {match,
           {581,21},
           {tuple,
            {581,21},
            [{atom,{581,21},t_tuple},
             {var,{581,21},'_'},
             {var,{581,21},'_'},
             {var,{581,39},'Es'}]},
           {call,
            {581,45},
            {atom,{581,45},normalize},
            [{block,0,
              [{call,
                {581,55},
                {atom,{581,55},concrete_type},
                [{var,{581,69},'T'},{var,{581,72},'Vs'}]}]}]}},
          {debug_line,582,210},
          {call,
           {582,21},
           {remote,
            {582,31},
            {atom,{582,21},beam_types},
            {atom,{582,32},get_tuple_element}},
           [{var,{582,50},'Index'},{var,{582,57},'Es'}]}]}]}}},
    {debug_line,585,211},
    {call,
     {585,5},
     {atom,{585,5},extract_term},
     [{var,{585,18},'Type'},
      {block,0,
       [{tuple,{585,24},[{atom,{585,25},bif},{atom,{585,29},element}]}]},
      {block,0,
       [{cons,
         {585,39},
         {tuple,{585,40},[{atom,{585,41},integer},{var,{585,49},'Index'}]},
         {cons,{585,57},{var,{585,57},'Src'},{nil,{585,60}}}}]},
      {var,{585,63},'Dst'},
      {var,{585,68},'Vst'}]}]},
  {clause,
   {591,1},
   [{tuple,
     {591,4},
     [{atom,{591,5},test_heap},{var,{591,15},'Heap'},{var,{591,20},'Live'}]},
    {var,{591,27},'Vst'}],
   [],
   [{debug_line,592,212},
    {call,
     {592,5},
     {atom,{592,5},test_heap},
     [{var,{592,15},'Heap'},{var,{592,21},'Live'},{var,{592,27},'Vst'}]}]},
  {clause,
   {593,1},
   [{tuple,
     {593,4},
     [{atom,{593,5},allocate},{var,{593,14},'Stk'},{var,{593,18},'Live'}]},
    {var,{593,25},'Vst'}],
   [],
   [{debug_line,594,213},
    {call,
     {594,5},
     {atom,{594,5},allocate},
     [{atom,{594,14},uninitialized},
      {var,{594,29},'Stk'},
      {integer,{594,34},0},
      {var,{594,37},'Live'},
      {var,{594,43},'Vst'}]}]},
  {clause,
   {595,1},
   [{tuple,
     {595,4},
     [{atom,{595,5},allocate_heap},
      {var,{595,19},'Stk'},
      {var,{595,23},'Heap'},
      {var,{595,28},'Live'}]},
    {var,{595,35},'Vst'}],
   [],
   [{debug_line,596,214},
    {call,
     {596,5},
     {atom,{596,5},allocate},
     [{atom,{596,14},uninitialized},
      {var,{596,29},'Stk'},
      {var,{596,34},'Heap'},
      {var,{596,40},'Live'},
      {var,{596,46},'Vst'}]}]},
  {clause,
   {597,1},
   [{tuple,{597,4},[{atom,{597,5},deallocate},{var,{597,16},'StkSize'}]},
    {match,
     {597,26},
     {tuple,
      {597,26},
      [{atom,{597,26},vst},
       {tuple,
        {597,39},
        [{atom,{597,39},st},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,48},'StkSize'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'},
         {var,{597,39},'_'}]},
       {var,{597,26},'_'},
       {var,{597,26},'_'},
       {var,{597,26},'_'},
       {var,{597,26},'_'},
       {var,{597,26},'_'}]},
     {var,{597,58},'Vst'}}],
   [],
   [{debug_line,598,215},
    {call,{598,5},{atom,{598,5},verify_no_ct},[{var,{598,18},'Vst'}]},
    {debug_line,599,216},
    {call,{599,5},{atom,{599,5},deallocate},[{var,{599,16},'Vst'}]}]},
  {clause,
   {600,1},
   [{tuple,{600,4},[{atom,{600,5},deallocate},{var,{600,16},'_'}]},
    {tuple,
     {600,20},
     [{atom,{600,20},vst},
      {tuple,
       {600,33},
       [{atom,{600,33},st},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,42},'NumY'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'},
        {var,{600,33},'_'}]},
      {var,{600,20},'_'},
      {var,{600,20},'_'},
      {var,{600,20},'_'},
      {var,{600,20},'_'},
      {var,{600,20},'_'}]}],
   [],
   [{debug_line,601,217},
    {call,
     {601,5},
     {atom,{601,5},error},
     [{block,0,
       [{tuple,
         {601,11},
         [{atom,{601,12},allocated},{var,{601,22},'NumY'}]}]}]}]},
  {clause,
   {602,1},
   [{tuple,
     {602,4},
     [{atom,{602,5},trim},{var,{602,10},'N'},{var,{602,12},'Remaining'}]},
    {match,
     {602,24},
     {tuple,
      {602,24},
      [{atom,{602,24},vst},
       {var,{602,37},'St0'},
       {var,{602,24},'_'},
       {var,{602,24},'_'},
       {var,{602,24},'_'},
       {var,{602,24},'_'},
       {var,{602,24},'_'}]},
     {var,{602,42},'Vst'}}],
   [],
   [{debug_line,603,218},
    {match,
     {603,5},
     {tuple,
      {603,5},
      [{atom,{603,5},st},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,14},'NumY'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'},
       {var,{603,5},'_'}]},
     {var,{603,22},'St0'}},
    {debug_line,604,219},
    {'if',
     {604,5},
     [{clause,
       {605,9},
       [],
       [[{op,{605,11},'=<',{var,{605,9},'N'},{var,{605,14},'NumY'}},
         {op,
          {605,32},
          '=:=',
          {op,{605,21},'+',{var,{605,20},'N'},{var,{605,22},'Remaining'}},
          {var,{605,36},'NumY'}}]],
       [{debug_line,606,220},
        {block,
         {606,13},
         [{match,
           {606,21},
           {var,{606,21},rec3},
           {call,
            {606,29},
            {atom,{606,29},trim_stack},
            [{var,{606,40},'N'},
             {integer,{606,43},0},
             {var,{606,46},'NumY'},
             {var,{606,52},'St0'}]}},
          {match,{606,13},{var,{606,13},rec4},{var,{606,13},'Vst'}},
          {'case',
           {606,21},
           {var,{606,13},rec4},
           [{clause,
             {606,21},
             [{tuple,
               {606,21},
               [{atom,{606,21},vst},
                {var,{606,21},'_'},
                {var,{606,21},'_'},
                {var,{606,21},'_'},
                {var,{606,21},'_'},
                {var,{606,21},'_'},
                {var,{606,21},'_'}]}],
             [],
             [{call,
               {606,21},
               {remote,
                {606,21},
                {atom,{606,21},erlang},
                {atom,{606,21},setelement}},
               [{integer,{606,21},2},
                {var,{606,13},rec4},
                {var,{606,21},rec3}]}]},
            {clause,
             [{generated,true},{location,{606,21}}],
             [{var,[{generated,true},{location,{606,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{606,21}}],
               {remote,
                [{generated,true},{location,{606,21}}],
                {atom,[{generated,true},{location,{606,21}}],erlang},
                {atom,[{generated,true},{location,{606,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{606,21}}],
                 [{atom,[{generated,true},{location,{606,21}}],badrecord},
                  {var,{606,13},rec4}]}]}]}]}]}]},
      {clause,
       {607,9},
       [],
       [[{op,{607,11},'>',{var,{607,9},'N'},{var,{607,13},'NumY'}}],
        [{op,
          {607,31},
          '=/=',
          {op,{607,20},'+',{var,{607,19},'N'},{var,{607,21},'Remaining'}},
          {var,{607,35},'NumY'}}]],
       [{debug_line,608,221},
        {call,
         {608,13},
         {atom,{608,13},error},
         [{block,0,
           [{tuple,
             {608,19},
             [{atom,{608,20},trim},
              {var,{608,25},'N'},
              {var,{608,27},'Remaining'},
              {atom,{608,37},allocated},
              {var,{608,47},'NumY'}]}]}]}]}]}]},
  {clause,
   {615,1},
   [{tuple,
     {615,4},
     [{atom,{615,5},put_list},
      {var,{615,14},'A'},
      {var,{615,16},'B'},
      {var,{615,18},'Dst'}]},
    {var,{615,24},'Vst0'}],
   [],
   [{debug_line,616,222},
    {match,
     {616,5},
     {var,{616,5},'Vst'},
     {call,
      {616,11},
      {atom,{616,11},eat_heap},
      [{integer,{616,20},2},{var,{616,23},'Vst0'}]}},
    {debug_line,618,223},
    {match,
     {618,5},
     {var,{618,5},'Head'},
     {call,
      {618,12},
      {atom,{618,12},get_term_type},
      [{var,{618,26},'A'},{var,{618,29},'Vst'}]}},
    {debug_line,619,224},
    {match,
     {619,5},
     {var,{619,5},'Tail'},
     {call,
      {619,12},
      {atom,{619,12},get_term_type},
      [{var,{619,26},'B'},{var,{619,29},'Vst'}]}},
    {debug_line,621,225},
    {call,
     {621,5},
     {atom,{621,5},create_term},
     [{block,0,
       [{call,
         {621,17},
         {remote,
          {621,27},
          {atom,{621,17},beam_types},
          {atom,{621,28},make_cons}},
         [{var,{621,38},'Head'},{var,{621,44},'Tail'}]}]},
      {atom,{621,51},put_list},
      {block,0,
       [{cons,
         {621,61},
         {var,{621,62},'A'},
         {cons,{621,65},{var,{621,65},'B'},{nil,{621,66}}}}]},
      {var,{621,69},'Dst'},
      {var,{621,74},'Vst'}]}]},
  {clause,
   {622,1},
   [{tuple,
     {622,4},
     [{atom,{622,5},put_tuple2},
      {var,{622,16},'Dst'},
      {tuple,{622,20},[{atom,{622,21},list},{var,{622,26},'Elements'}]}]},
    {var,{622,38},'Vst0'}],
   [],
   [{debug_line,623,226},
    {match,
     {623,5},
     {var,{623,5},'_'},
     {lc,
      {623,9},
      {block,0,
       [{call,
         {623,10},
         {atom,{623,10},assert_term},
         [{var,{623,22},'El'},{var,{623,26},'Vst0'}]}]},
      [{block,0,[{atom,{623,41},true}]},
       {generate,{623,38},{var,{623,35},'El'},{var,{623,41},'Elements'}}]}},
    {debug_line,624,227},
    {match,
     {624,5},
     {var,{624,5},'Size'},
     {call,
      {624,12},
      {remote,{624,12},{atom,{624,12},erlang},{atom,{624,12},length}},
      [{var,{624,19},'Elements'}]}},
    {debug_line,625,228},
    {match,
     {625,5},
     {var,{625,5},'Vst'},
     {call,
      {625,11},
      {atom,{625,11},eat_heap},
      [{block,0,
        [{op,{625,24},'+',{var,{625,20},'Size'},{integer,{625,25},1}}]},
       {var,{625,28},'Vst0'}]}},
    {debug_line,626,229},
    {match,
     {626,5},
     {tuple,{626,5},[{var,{626,6},'Es'},{var,{626,9},'_'}]},
     {call,
      {626,14},
      {remote,{626,14},{atom,{626,14},lists},{atom,{626,14},foldl}},
      [{block,0,
        [{'fun',
          {626,20},
          {clauses,
           [{clause,
             {626,23},
             [{var,{626,24},'Val'},
              {tuple,{626,29},[{var,{626,30},'Es0'},{var,{626,35},'Index'}]}],
             [],
             [{debug_line,627,230},
              {match,
               {627,24},
               {var,{627,24},'Type'},
               {call,
                {627,31},
                {atom,{627,31},get_term_type},
                [{var,{627,45},'Val'},{var,{627,50},'Vst0'}]}},
              {debug_line,628,231},
              {match,
               {628,24},
               {var,{628,24},'Es'},
               {call,
                {628,29},
                {remote,
                 {628,39},
                 {atom,{628,29},beam_types},
                 {atom,{628,40},set_tuple_element}},
                [{var,{628,58},'Index'},
                 {var,{628,65},'Type'},
                 {var,{628,71},'Es0'}]}},
              {debug_line,629,232},
              {tuple,
               {629,24},
               [{var,{629,25},'Es'},
                {op,
                 {629,35},
                 '+',
                 {var,{629,29},'Index'},
                 {integer,{629,37},1}}]}]}]}}]},
       {block,0,
        [{debug_line,630,233},
         {tuple,{630,25},[{map,{630,26},[]},{integer,{630,31},1}]}]},
       {var,{630,35},'Elements'}]}},
    {debug_line,631,234},
    {match,
     {631,5},
     {var,{631,5},'Type'},
     {tuple,
      {631,12},
      [{atom,{631,12},t_tuple},
       {var,{631,37},'Size'},
       {atom,{631,27},true},
       {var,{631,51},'Es'}]}},
    {debug_line,632,235},
    {call,
     {632,5},
     {atom,{632,5},create_term},
     [{var,{632,17},'Type'},
      {atom,{632,23},put_tuple2},
      {nil,{632,35}},
      {var,{632,39},'Dst'},
      {var,{632,44},'Vst'}]}]},
  {clause,
   {633,1},
   [{tuple,
     {633,4},
     [{atom,{633,5},set_tuple_element},
      {var,{633,23},'Src'},
      {var,{633,27},'Tuple'},
      {var,{633,33},'N'}]},
    {var,{633,37},'Vst'}],
   [],
   [{debug_line,636,236},
    {match,
     {636,5},
     {var,{636,5},'I'},
     {op,{636,11},'+',{var,{636,9},'N'},{integer,{636,13},1}}},
    {debug_line,637,237},
    {call,
     {637,5},
     {atom,{637,5},assert_term},
     [{var,{637,17},'Src'},{var,{637,22},'Vst'}]},
    {debug_line,638,238},
    {call,
     {638,5},
     {atom,{638,5},assert_type},
     [{block,0,
       [{tuple,
         {638,17},
         [{atom,{638,17},t_tuple},
          {var,{638,31},'I'},
          {atom,{638,17},false},
          {map,{638,17},[]}]}]},
      {var,{638,35},'Tuple'},
      {var,{638,42},'Vst'}]},
    {debug_line,643,239},
    {match,
     {643,5},
     {var,{643,5},'TupleType0'},
     {call,
      {643,18},
      {atom,{643,18},get_term_type},
      [{var,{643,32},'Tuple'},{var,{643,39},'Vst'}]}},
    {debug_line,644,240},
    {match,
     {644,5},
     {var,{644,5},'ArgType'},
     {call,
      {644,15},
      {atom,{644,15},get_term_type},
      [{var,{644,29},'Src'},{var,{644,34},'Vst'}]}},
    {debug_line,645,241},
    {match,
     {645,5},
     {var,{645,5},'TupleType'},
     {call,
      {645,17},
      {remote,
       {645,27},
       {atom,{645,17},beam_types},
       {atom,{645,28},update_tuple}},
      [{var,{645,41},'TupleType0'},
       {block,0,
        [{cons,
          {645,53},
          {tuple,{645,54},[{var,{645,55},'I'},{var,{645,58},'ArgType'}]},
          {nil,{645,66}}}]}]}},
    {debug_line,646,242},
    {call,
     {646,5},
     {atom,{646,5},override_type},
     [{var,{646,19},'TupleType'},
      {var,{646,30},'Tuple'},
      {var,{646,37},'Vst'}]}]},
  {clause,
   {647,1},
   [{tuple,
     {647,4},
     [{atom,{647,5},update_record},
      {var,{647,19},'_Hint'},
      {var,{647,25},'Size'},
      {var,{647,30},'Src'},
      {var,{647,34},'Dst'},
      {tuple,{647,38},[{atom,{647,39},list},{var,{647,44},'Ss'}]}]},
    {var,{647,50},'Vst'}],
   [],
   [{debug_line,648,243},
    {call,
     {648,5},
     {atom,{648,5},verify_update_record},
     [{var,{648,26},'Size'},
      {var,{648,32},'Src'},
      {var,{648,37},'Dst'},
      {var,{648,42},'Ss'},
      {var,{648,46},'Vst'}]}]},
  {clause,
   {654,1},
   [{tuple,{654,4},[{atom,{654,5},apply},{var,{654,11},'Live'}]},
    {var,{654,18},'Vst'}],
   [],
   [{debug_line,655,244},
    {call,
     {655,5},
     {atom,{655,5},validate_body_call},
     [{atom,{655,24},apply},
      {block,0,[{op,{655,35},'+',{var,{655,31},'Live'},{integer,{655,36},2}}]},
      {var,{655,39},'Vst'}]}]},
  {clause,
   {656,1},
   [{tuple,
     {656,4},
     [{atom,{656,5},apply_last},{var,{656,16},'Live'},{var,{656,21},'N'}]},
    {var,{656,25},'Vst'}],
   [],
   [{debug_line,657,245},
    {call,
     {657,5},
     {atom,{657,5},validate_tail_call},
     [{var,{657,24},'N'},
      {atom,{657,27},apply},
      {block,0,[{op,{657,38},'+',{var,{657,34},'Live'},{integer,{657,39},2}}]},
      {var,{657,42},'Vst'}]}]},
  {clause,
   {658,1},
   [{tuple,
     {658,4},
     [{atom,{658,5},call},{var,{658,10},'Live'},{var,{658,15},'Func'}]},
    {var,{658,22},'Vst'}],
   [],
   [{debug_line,659,246},
    {call,
     {659,5},
     {atom,{659,5},validate_body_call},
     [{var,{659,24},'Func'},{var,{659,30},'Live'},{var,{659,36},'Vst'}]}]},
  {clause,
   {660,1},
   [{tuple,
     {660,4},
     [{atom,{660,5},call_ext},{var,{660,14},'Live'},{var,{660,19},'Func'}]},
    {var,{660,26},'Vst'}],
   [],
   [{debug_line,661,247},
    {call,
     {661,5},
     {atom,{661,5},validate_body_call},
     [{var,{661,24},'Func'},{var,{661,30},'Live'},{var,{661,36},'Vst'}]}]},
  {clause,
   {662,1},
   [{tuple,
     {662,4},
     [{atom,{662,5},call_only},{var,{662,15},'Live'},{var,{662,20},'Func'}]},
    {var,{662,27},'Vst'}],
   [],
   [{debug_line,663,248},
    {call,
     {663,5},
     {atom,{663,5},validate_tail_call},
     [{atom,{663,24},none},
      {var,{663,30},'Func'},
      {var,{663,36},'Live'},
      {var,{663,42},'Vst'}]}]},
  {clause,
   {664,1},
   [{tuple,
     {664,4},
     [{atom,{664,5},call_ext_only},
      {var,{664,19},'Live'},
      {var,{664,24},'Func'}]},
    {var,{664,31},'Vst'}],
   [],
   [{debug_line,665,249},
    {call,
     {665,5},
     {atom,{665,5},validate_tail_call},
     [{atom,{665,24},none},
      {var,{665,30},'Func'},
      {var,{665,36},'Live'},
      {var,{665,42},'Vst'}]}]},
  {clause,
   {666,1},
   [{tuple,
     {666,4},
     [{atom,{666,5},call_last},
      {var,{666,15},'Live'},
      {var,{666,20},'Func'},
      {var,{666,25},'N'}]},
    {var,{666,29},'Vst'}],
   [],
   [{debug_line,667,250},
    {call,
     {667,5},
     {atom,{667,5},validate_tail_call},
     [{var,{667,24},'N'},
      {var,{667,27},'Func'},
      {var,{667,33},'Live'},
      {var,{667,39},'Vst'}]}]},
  {clause,
   {668,1},
   [{tuple,
     {668,4},
     [{atom,{668,5},call_ext_last},
      {var,{668,19},'Live'},
      {var,{668,24},'Func'},
      {var,{668,29},'N'}]},
    {var,{668,33},'Vst'}],
   [],
   [{debug_line,669,251},
    {call,
     {669,5},
     {atom,{669,5},validate_tail_call},
     [{var,{669,24},'N'},
      {var,{669,27},'Func'},
      {var,{669,33},'Live'},
      {var,{669,39},'Vst'}]}]},
  {clause,
   {670,1},
   [{tuple,
     {670,4},
     [{atom,{670,5},call_fun2},
      {tuple,{670,15},[{atom,{670,16},f},{var,{670,18},'Lbl'}]},
      {var,{670,23},'Live'},
      {var,{670,28},'Fun0'}]},
    {match,
     {670,35},
     {tuple,
      {670,35},
      [{atom,{670,35},vst},
       {var,{670,35},'_'},
       {var,{670,35},'_'},
       {var,{670,35},'_'},
       {var,{670,35},'_'},
       {var,{670,43},'Ft'},
       {var,{670,35},'_'}]},
     {var,{670,47},'Vst'}}],
   [],
   [{debug_line,676,252},
    {match,
     {676,5},
     {map,
      {676,5},
      [{map_field_exact,{676,13},{atom,{676,8},name},{var,{676,16},'Name'}},
       {map_field_exact,
        {676,28},
        {atom,{676,22},arity},
        {var,{676,31},'TotalArity'}}]},
     {call,
      {676,46},
      {remote,{676,46},{atom,{676,46},erlang},{atom,{676,46},map_get}},
      [{var,{676,54},'Lbl'},{var,{676,59},'Ft'}]}},
    {debug_line,677,253},
    {match,
     {677,5},
     {tuple,
      {677,5},
      [{atom,{677,5},tr},
       {var,{677,46},'Fun'},
       {tuple,
        {677,11},
        [{atom,{677,11},t_fun},
         {var,{677,11},'_'},
         {tuple,{677,25},[{var,{677,26},'Name'},{var,{677,31},'TotalArity'}]},
         {var,{677,11},'_'}]}]},
     {var,{677,53},'Fun0'}},
    {debug_line,678,254},
    {match,
     {678,5},
     {atom,{678,5},true},
     {op,{678,17},'<',{var,{678,12},'Live'},{var,{678,19},'TotalArity'}}},
    {debug_line,679,255},
    {call,
     {679,5},
     {atom,{679,5},assert_term},
     [{var,{679,17},'Fun'},{var,{679,22},'Vst'}]},
    {debug_line,680,256},
    {call,
     {680,5},
     {atom,{680,5},validate_body_call},
     [{atom,{680,24},'fun'},{var,{680,31},'Live'},{var,{680,37},'Vst'}]}]},
  {clause,
   {681,1},
   [{tuple,
     {681,4},
     [{atom,{681,5},call_fun2},
      {var,{681,15},'Tag'},
      {var,{681,19},'Live'},
      {var,{681,24},'Fun0'}]},
    {var,{681,31},'Vst'}],
   [],
   [{debug_line,682,257},
    {match,
     {682,5},
     {var,{682,5},'Fun'},
     {call,
      {682,11},
      {atom,{682,11},unpack_typed_arg},
      [{var,{682,28},'Fun0'},{var,{682,34},'Vst'}]}},
    {debug_line,683,258},
    {call,
     {683,5},
     {atom,{683,5},assert_term},
     [{var,{683,17},'Fun'},{var,{683,22},'Vst'}]},
    {debug_line,685,259},
    {'case',
     {685,5},
     {var,{685,10},'Tag'},
     [{clause,
       {686,9},
       [{tuple,{686,9},[{atom,{686,10},atom},{atom,{686,15},safe}]}],
       [],
       [{debug_line,686,260},{atom,{686,24},ok}]},
      {clause,
       {687,9},
       [{tuple,{687,9},[{atom,{687,10},atom},{atom,{687,15},unsafe}]}],
       [],
       [{debug_line,687,261},{atom,{687,26},ok}]},
      {clause,
       {688,9},
       [{var,{688,9},'_'}],
       [],
       [{debug_line,688,262},
        {call,
         {688,14},
         {atom,{688,14},error},
         [{block,0,
           [{tuple,
             {688,20},
             [{atom,{688,21},invalid_tag},{var,{688,33},'Tag'}]}]}]}]}]},
    {debug_line,691,263},
    {call,
     {691,5},
     {atom,{691,5},branch},
     [{integer,{691,13},0},
      {var,{691,30},'Vst'},
      {block,0,
       [{debug_line,692,264},
        {'fun',
         {692,12},
         {clauses,
          [{clause,
            {692,15},
            [{var,{692,16},'SuccVst0'}],
            [],
            [{debug_line,693,265},
             {match,
              {693,20},
              {var,{693,20},'SuccVst'},
              {call,
               {693,30},
               {atom,{693,30},update_type},
               [{block,0,[{'fun',{693,42},{function,meet,2}}]},
                {block,0,
                 [{tuple,
                   {693,54},
                   [{atom,{693,54},t_fun},
                    {var,{693,67},'Live'},
                    {atom,{693,54},any},
                    {atom,{693,54},any}]}]},
                {var,{694,42},'Fun'},
                {var,{694,47},'SuccVst0'}]}},
             {debug_line,695,266},
             {call,
              {695,20},
              {atom,{695,20},validate_body_call},
              [{atom,{695,39},'fun'},
               {var,{695,46},'Live'},
               {var,{695,52},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {697,1},
   [{tuple,{697,4},[{atom,{697,5},call_fun},{var,{697,14},'Live'}]},
    {var,{697,21},'Vst'}],
   [],
   [{debug_line,698,267},
    {match,
     {698,5},
     {var,{698,5},'Fun'},
     {tuple,{698,11},[{atom,{698,12},x},{var,{698,14},'Live'}]}},
    {debug_line,699,268},
    {call,
     {699,5},
     {atom,{699,5},assert_term},
     [{var,{699,17},'Fun'},{var,{699,22},'Vst'}]},
    {debug_line,701,269},
    {call,
     {701,5},
     {atom,{701,5},branch},
     [{integer,{701,13},0},
      {var,{701,30},'Vst'},
      {block,0,
       [{debug_line,702,270},
        {'fun',
         {702,12},
         {clauses,
          [{clause,
            {702,15},
            [{var,{702,16},'SuccVst0'}],
            [],
            [{debug_line,703,271},
             {match,
              {703,20},
              {var,{703,20},'SuccVst'},
              {call,
               {703,30},
               {atom,{703,30},update_type},
               [{block,0,[{'fun',{703,42},{function,meet,2}}]},
                {block,0,
                 [{tuple,
                   {703,54},
                   [{atom,{703,54},t_fun},
                    {var,{703,67},'Live'},
                    {atom,{703,54},any},
                    {atom,{703,54},any}]}]},
                {var,{704,42},'Fun'},
                {var,{704,47},'SuccVst0'}]}},
             {debug_line,705,272},
             {call,
              {705,20},
              {atom,{705,20},validate_body_call},
              [{atom,{705,39},'fun'},
               {block,0,
                [{op,
                  {705,50},
                  '+',
                  {var,{705,46},'Live'},
                  {integer,{705,51},1}}]},
               {var,{705,54},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {707,1},
   [{tuple,
     {707,4},
     [{atom,{707,5},make_fun3},
      {tuple,{707,15},[{atom,{707,16},f},{var,{707,18},'Lbl'}]},
      {var,{707,23},'_'},
      {var,{707,25},'_'},
      {var,{707,27},'Dst'},
      {tuple,{707,31},[{atom,{707,32},list},{var,{707,37},'Env'}]}]},
    {match,
     {707,44},
     {tuple,
      {707,44},
      [{atom,{707,44},vst},
       {var,{707,44},'_'},
       {var,{707,44},'_'},
       {var,{707,44},'_'},
       {var,{707,44},'_'},
       {var,{707,52},'Ft'},
       {var,{707,44},'_'}]},
     {var,{707,56},'Vst0'}}],
   [],
   [{debug_line,708,273},
    {match,
     {708,5},
     {var,{708,5},'_'},
     {lc,
      {708,9},
      {block,0,
       [{call,
         {708,10},
         {atom,{708,10},assert_term},
         [{var,{708,22},'E'},{var,{708,25},'Vst0'}]}]},
      [{block,0,[{atom,{708,39},true}]},
       {generate,{708,36},{var,{708,34},'E'},{var,{708,39},'Env'}}]}},
    {debug_line,709,274},
    {match,
     {709,5},
     {var,{709,5},'NumFree'},
     {call,
      {709,15},
      {remote,{709,15},{atom,{709,15},erlang},{atom,{709,15},length}},
      [{var,{709,22},'Env'}]}},
    {debug_line,711,275},
    {match,
     {711,5},
     {map,
      {711,5},
      [{map_field_exact,{711,13},{atom,{711,8},name},{var,{711,16},'Name'}},
       {map_field_exact,
        {711,28},
        {atom,{711,22},arity},
        {var,{711,31},'TotalArity'}}]},
     {call,
      {711,46},
      {remote,{711,46},{atom,{711,46},erlang},{atom,{711,46},map_get}},
      [{var,{711,54},'Lbl'},{var,{711,59},'Ft'}]}},
    {debug_line,712,276},
    {match,
     {712,5},
     {var,{712,5},'Arity'},
     {op,{712,24},'-',{var,{712,13},'TotalArity'},{var,{712,26},'NumFree'}}},
    {debug_line,713,277},
    {match,
     {713,5},
     {atom,{713,5},true},
     {op,{713,18},'>=',{var,{713,12},'Arity'},{integer,{713,21},0}}},
    {debug_line,715,278},
    {match,
     {715,5},
     {var,{715,5},'Vst'},
     {call,{715,11},{atom,{715,11},eat_heap_fun},[{var,{715,24},'Vst0'}]}},
    {debug_line,717,279},
    {match,
     {717,5},
     {var,{717,5},'Type'},
     {tuple,
      {717,12},
      [{atom,{717,12},t_fun},
       {var,{717,50},'Arity'},
       {tuple,{717,26},[{var,{717,27},'Name'},{var,{717,32},'TotalArity'}]},
       {atom,{717,12},any}]}},
    {debug_line,719,280},
    {call,
     {719,5},
     {atom,{719,5},create_term},
     [{var,{719,17},'Type'},
      {atom,{719,23},make_fun},
      {nil,{719,33}},
      {var,{719,37},'Dst'},
      {var,{719,42},'Vst'}]}]},
  {clause,
   {720,1},
   [{atom,{720,4},return},{var,{720,12},'Vst'}],
   [],
   [{debug_line,721,281},
    {call,
     {721,5},
     {atom,{721,5},assert_durable_term},
     [{block,0,[{tuple,{721,25},[{atom,{721,26},x},{integer,{721,28},0}]}]},
      {var,{721,32},'Vst'}]},
    {debug_line,722,282},
    {call,{722,5},{atom,{722,5},verify_return},[{var,{722,19},'Vst'}]}]},
  {clause,
   {728,1},
   [{tuple,
     {728,4},
     [{atom,{728,5},bif},
      {var,{728,9},'Op'},
      {tuple,{728,12},[{atom,{728,13},f},{var,{728,15},'Fail'}]},
      {var,{728,21},'Ss0'},
      {var,{728,25},'Dst0'}]},
    {var,{728,32},'Vst0'}],
   [],
   [{debug_line,729,283},
    {match,
     {729,5},
     {var,{729,5},'Ss'},
     {lc,
      {729,10},
      {block,0,
       [{call,
         {729,11},
         {atom,{729,11},unpack_typed_arg},
         [{var,{729,28},'Arg'},{var,{729,33},'Vst0'}]}]},
      [{block,0,[{atom,{729,49},true}]},
       {generate,{729,46},{var,{729,42},'Arg'},{var,{729,49},'Ss0'}}]}},
    {debug_line,730,284},
    {match,
     {730,5},
     {var,{730,5},'Dst'},
     {call,
      {730,11},
      {atom,{730,11},unpack_typed_arg},
      [{var,{730,28},'Dst0'},{var,{730,34},'Vst0'}]}},
    {debug_line,732,285},
    {'case',
     {732,5},
     {call,
      {732,10},
      {atom,{732,10},is_float_arith_bif},
      [{var,{732,29},'Op'},{var,{732,33},'Ss'}]},
     [{clause,
       {733,9},
       [{atom,{733,9},true}],
       [],
       [{debug_line,734,286},
        {match,{734,14},{integer,{734,14},0},{var,{734,32},'Fail'}},
        {debug_line,735,287},
        {call,
         {735,13},
         {atom,{735,13},validate_float_arith_bif},
         [{var,{735,38},'Ss'},{var,{735,42},'Dst'},{var,{735,47},'Vst0'}]}]},
      {clause,
       {736,9},
       [{atom,{736,9},false}],
       [],
       [{debug_line,737,288},
        {call,
         {737,13},
         {atom,{737,13},validate_bif},
         [{atom,{737,26},bif},
          {var,{737,31},'Op'},
          {var,{737,35},'Fail'},
          {var,{737,41},'Ss'},
          {var,{737,45},'Dst'},
          {var,{737,50},'Vst0'},
          {var,{737,56},'Vst0'}]}]}]}]},
  {clause,
   {739,1},
   [{tuple,
     {739,4},
     [{atom,{739,5},gc_bif},
      {var,{739,12},'Op'},
      {tuple,{739,15},[{atom,{739,16},f},{var,{739,18},'Fail'}]},
      {var,{739,24},'Live'},
      {var,{739,29},'Ss0'},
      {var,{739,33},'Dst0'}]},
    {var,{739,40},'Vst0'}],
   [],
   [{debug_line,740,289},
    {match,
     {740,5},
     {var,{740,5},'Ss'},
     {lc,
      {740,10},
      {block,0,
       [{call,
         {740,11},
         {atom,{740,11},unpack_typed_arg},
         [{var,{740,28},'Arg'},{var,{740,33},'Vst0'}]}]},
      [{block,0,[{atom,{740,49},true}]},
       {generate,{740,46},{var,{740,42},'Arg'},{var,{740,49},'Ss0'}}]}},
    {debug_line,741,290},
    {match,
     {741,5},
     {var,{741,5},'Dst'},
     {call,
      {741,11},
      {atom,{741,11},unpack_typed_arg},
      [{var,{741,28},'Dst0'},{var,{741,34},'Vst0'}]}},
    {debug_line,743,291},
    {call,
     {743,5},
     {atom,{743,5},verify_live},
     [{var,{743,17},'Live'},{var,{743,23},'Vst0'}]},
    {debug_line,744,292},
    {call,{744,5},{atom,{744,5},verify_y_init},[{var,{744,19},'Vst0'}]},
    {debug_line,748,293},
    {match,
     {748,5},
     {var,{748,5},'Vst1'},
     {call,
      {748,12},
      {atom,{748,12},kill_heap_allocation},
      [{var,{748,33},'Vst0'}]}},
    {debug_line,749,294},
    {match,
     {749,5},
     {var,{749,5},'Vst'},
     {call,
      {749,11},
      {atom,{749,11},prune_x_regs},
      [{var,{749,24},'Live'},{var,{749,30},'Vst1'}]}},
    {debug_line,751,295},
    {call,
     {751,5},
     {atom,{751,5},validate_bif},
     [{atom,{751,18},gc_bif},
      {var,{751,26},'Op'},
      {var,{751,30},'Fail'},
      {var,{751,36},'Ss'},
      {var,{751,40},'Dst'},
      {var,{751,45},'Vst0'},
      {var,{751,51},'Vst'}]}]},
  {clause,
   {757,1},
   [{atom,{757,4},send},{var,{757,10},'Vst'}],
   [],
   [{debug_line,758,296},
    {call,
     {758,5},
     {atom,{758,5},validate_body_call},
     [{atom,{758,24},send},{integer,{758,30},2},{var,{758,33},'Vst'}]}]},
  {clause,
   {759,1},
   [{tuple,
     {759,4},
     [{atom,{759,5},loop_rec},
      {tuple,{759,14},[{atom,{759,15},f},{var,{759,17},'Fail'}]},
      {var,{759,23},'Dst'}]},
    {var,{759,29},'Vst0'}],
   [],
   [{debug_line,760,297},
    {call,{760,5},{atom,{760,5},assert_no_exception},[{var,{760,25},'Fail'}]},
    {debug_line,762,298},
    {match,
     {762,5},
     {var,{762,5},'Vst'},
     {call,
      {762,11},
      {atom,{762,11},update_receive_state},
      [{atom,{762,32},entered_loop},{var,{762,46},'Vst0'}]}},
    {debug_line,764,299},
    {call,
     {764,5},
     {atom,{764,5},branch},
     [{var,{764,12},'Fail'},
      {var,{764,18},'Vst'},
      {block,0,
       [{debug_line,765,300},
        {'fun',
         {765,12},
         {clauses,
          [{clause,
            {765,15},
            [{var,{765,16},'SuccVst0'}],
            [],
            [{debug_line,770,301},
             {match,
              {770,20},
              {tuple,{770,20},[{var,{770,21},'Ref'},{var,{770,26},'SuccVst'}]},
              {call,
               {770,37},
               {atom,{770,37},new_value},
               [{atom,{770,47},any},
                {atom,{770,52},loop_rec},
                {nil,{770,62}},
                {var,{770,66},'SuccVst0'}]}},
             {debug_line,771,302},
             {call,
              {771,20},
              {atom,{771,20},mark_fragile},
              [{var,{771,33},'Dst'},
               {block,0,
                [{call,
                  {771,38},
                  {atom,{771,38},set_reg_vref},
                  [{var,{771,51},'Ref'},
                   {var,{771,56},'Dst'},
                   {var,{771,61},'SuccVst'}]}]}]}]}]}}]}]}]},
  {clause,
   {773,1},
   [{tuple,{773,4},[{atom,{773,5},loop_rec_end},{var,{773,18},'Lbl'}]},
    {var,{773,24},'Vst'}],
   [],
   [{debug_line,774,303},
    {call,{774,5},{atom,{774,5},assert_no_exception},[{var,{774,25},'Lbl'}]},
    {debug_line,775,304},
    {call,{775,5},{atom,{775,5},verify_y_init},[{var,{775,19},'Vst'}]},
    {debug_line,776,305},
    {call,{776,5},{atom,{776,5},kill_state},[{var,{776,16},'Vst'}]}]},
  {clause,
   {777,1},
   [{tuple,
     {777,4},
     [{match,{777,5},{atom,{777,5},recv_marker_reserve},{var,{777,25},'Op'}},
      {var,{777,29},'Dst'}]},
    {var,{777,35},'Vst'}],
   [],
   [{debug_line,778,306},
    {call,
     {778,5},
     {atom,{778,5},create_term},
     [{block,0,
       [{tuple,
         {778,17},
         [{atom,{778,17},t_abstract},{atom,{778,34},receive_marker}]}]},
      {var,{778,51},'Op'},
      {nil,{778,55}},
      {var,{778,59},'Dst'},
      {var,{778,64},'Vst'}]}]},
  {clause,
   {779,1},
   [{tuple,
     {779,4},
     [{atom,{779,5},recv_marker_bind},
      {var,{779,23},'Marker'},
      {var,{779,31},'Ref'}]},
    {var,{779,37},'Vst'}],
   [],
   [{debug_line,780,307},
    {call,
     {780,5},
     {atom,{780,5},assert_type},
     [{block,0,
       [{tuple,
         {780,17},
         [{atom,{780,17},t_abstract},{atom,{780,34},receive_marker}]}]},
      {var,{780,51},'Marker'},
      {var,{780,59},'Vst'}]},
    {debug_line,781,308},
    {call,
     {781,5},
     {atom,{781,5},assert_durable_term},
     [{var,{781,25},'Ref'},{var,{781,30},'Vst'}]},
    {debug_line,782,309},
    {call,{782,5},{atom,{782,5},assert_not_literal},[{var,{782,24},'Ref'}]},
    {debug_line,783,310},
    {var,{783,5},'Vst'}]},
  {clause,
   {784,1},
   [{tuple,{784,4},[{atom,{784,5},recv_marker_clear},{var,{784,24},'Ref'}]},
    {var,{784,30},'Vst'}],
   [],
   [{debug_line,785,311},
    {call,
     {785,5},
     {atom,{785,5},assert_durable_term},
     [{var,{785,25},'Ref'},{var,{785,30},'Vst'}]},
    {debug_line,786,312},
    {call,{786,5},{atom,{786,5},assert_not_literal},[{var,{786,24},'Ref'}]},
    {debug_line,787,313},
    {var,{787,5},'Vst'}]},
  {clause,
   {788,1},
   [{tuple,{788,4},[{atom,{788,5},recv_marker_use},{var,{788,22},'Ref'}]},
    {var,{788,28},'Vst'}],
   [],
   [{debug_line,789,314},
    {call,
     {789,5},
     {atom,{789,5},assert_durable_term},
     [{var,{789,25},'Ref'},{var,{789,30},'Vst'}]},
    {debug_line,790,315},
    {call,{790,5},{atom,{790,5},assert_not_literal},[{var,{790,24},'Ref'}]},
    {debug_line,791,316},
    {call,
     {791,5},
     {atom,{791,5},update_receive_state},
     [{atom,{791,26},marked_position},{var,{791,43},'Vst'}]}]},
  {clause,
   {792,1},
   [{atom,{792,4},remove_message},{var,{792,20},'Vst0'}],
   [],
   [{debug_line,793,317},
    {match,
     {793,5},
     {var,{793,5},'Vst'},
     {call,
      {793,11},
      {atom,{793,11},update_receive_state},
      [{atom,{793,32},none},{var,{793,38},'Vst0'}]}},
    {debug_line,797,318},
    {call,{797,5},{atom,{797,5},remove_fragility},[{var,{797,22},'Vst'}]}]},
  {clause,
   {798,1},
   [{atom,{798,4},timeout},{var,{798,13},'Vst0'}],
   [],
   [{debug_line,799,319},
    {match,
     {799,5},
     {var,{799,5},'Vst'},
     {call,
      {799,11},
      {atom,{799,11},update_receive_state},
      [{atom,{799,32},none},{var,{799,38},'Vst0'}]}},
    {debug_line,800,320},
    {call,
     {800,5},
     {atom,{800,5},prune_x_regs},
     [{integer,{800,18},0},{var,{800,21},'Vst'}]}]},
  {clause,
   {801,1},
   [{tuple,
     {801,4},
     [{atom,{801,5},wait},
      {tuple,{801,10},[{atom,{801,11},f},{var,{801,13},'Lbl'}]}]},
    {var,{801,20},'Vst'}],
   [],
   [{debug_line,802,321},
    {call,{802,5},{atom,{802,5},assert_no_exception},[{var,{802,25},'Lbl'}]},
    {debug_line,803,322},
    {call,{803,5},{atom,{803,5},verify_y_init},[{var,{803,19},'Vst'}]},
    {debug_line,804,323},
    {call,
     {804,5},
     {atom,{804,5},branch},
     [{var,{804,12},'Lbl'},
      {var,{804,17},'Vst'},
      {block,0,[{'fun',{804,22},{function,kill_state,1}}]}]}]},
  {clause,
   {805,1},
   [{tuple,
     {805,4},
     [{atom,{805,5},wait_timeout},
      {tuple,{805,18},[{atom,{805,19},f},{var,{805,21},'Lbl'}]},
      {var,{805,26},'Src'}]},
    {var,{805,32},'Vst0'}],
   [],
   [{debug_line,806,324},
    {call,{806,5},{atom,{806,5},assert_no_exception},[{var,{806,25},'Lbl'}]},
    {debug_line,808,325},
    {call,
     {808,5},
     {atom,{808,5},assert_term},
     [{var,{808,17},'Src'},{var,{808,22},'Vst0'}]},
    {debug_line,809,326},
    {call,{809,5},{atom,{809,5},verify_y_init},[{var,{809,19},'Vst0'}]},
    {debug_line,811,327},
    {match,
     {811,5},
     {var,{811,5},'Vst'},
     {call,
      {811,11},
      {atom,{811,11},branch},
      [{var,{811,18},'Lbl'},
       {block,0,
        [{call,
          {811,23},
          {atom,{811,23},schedule_out},
          [{integer,{811,36},0},{var,{811,39},'Vst0'}]}]}]}},
    {debug_line,812,328},
    {call,
     {812,5},
     {atom,{812,5},branch},
     [{integer,{812,13},0},{var,{812,30},'Vst'}]}]},
  {clause,
   {817,1},
   [{tuple,
     {817,4},
     [{atom,{817,5},'catch'},
      {var,{817,13},'Dst'},
      {tuple,{817,17},[{atom,{817,18},f},{var,{817,20},'Fail'}]}]},
    {var,{817,28},'Vst'}],
   [[{op,{817,43},'=/=',{var,{817,38},'Fail'},{atom,{817,47},none}}]],
   [{debug_line,818,329},
    {call,
     {818,5},
     {atom,{818,5},init_try_catch_branch},
     [{atom,{818,27},catchtag},
      {var,{818,37},'Dst'},
      {var,{818,42},'Fail'},
      {var,{818,48},'Vst'}]}]},
  {clause,
   {819,1},
   [{tuple,
     {819,4},
     [{atom,{819,5},'try'},
      {var,{819,11},'Dst'},
      {tuple,{819,15},[{atom,{819,16},f},{var,{819,18},'Fail'}]}]},
    {var,{819,26},'Vst'}],
   [[{op,{819,41},'=/=',{var,{819,36},'Fail'},{atom,{819,45},none}}]],
   [{debug_line,820,330},
    {call,
     {820,5},
     {atom,{820,5},init_try_catch_branch},
     [{atom,{820,27},trytag},
      {var,{820,35},'Dst'},
      {var,{820,40},'Fail'},
      {var,{820,46},'Vst'}]}]},
  {clause,
   {821,1},
   [{tuple,{821,4},[{atom,{821,5},catch_end},{var,{821,15},'Reg'}]},
    {match,
     {821,21},
     {tuple,
      {821,21},
      [{atom,{821,21},vst},
       {tuple,
        {821,34},
        [{atom,{821,34},st},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {cons,{821,41},{var,{821,42},'Tag'},{var,{821,46},'_'}},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'},
         {var,{821,34},'_'}]},
       {var,{821,21},'_'},
       {var,{821,21},'_'},
       {var,{821,21},'_'},
       {var,{821,21},'_'},
       {var,{821,21},'_'}]},
     {var,{821,51},'Vst0'}}],
   [],
   [{debug_line,822,331},
    {'case',
     {822,5},
     {call,
      {822,10},
      {atom,{822,10},get_tag_type},
      [{var,{822,23},'Reg'},{var,{822,28},'Vst0'}]},
     [{clause,
       {823,9},
       [{match,
         {823,9},
         {tuple,{823,9},[{atom,{823,10},catchtag},{var,{823,19},'_Fail'}]},
         {var,{823,26},'Tag'}}],
       [],
       [{debug_line,824,332},
        {match,
         {824,13},
         {var,{824,13},'Vst'},
         {call,
          {824,19},
          {atom,{824,19},kill_catch_tag},
          [{var,{824,34},'Reg'},{var,{824,39},'Vst0'}]}},
        {debug_line,827,333},
        {call,
         {827,13},
         {atom,{827,13},create_term},
         [{atom,{827,25},any},
          {atom,{827,30},catch_end},
          {nil,{827,41}},
          {block,0,
           [{tuple,{827,45},[{atom,{827,46},x},{integer,{827,48},0}]}]},
          {var,{827,52},'Vst'}]}]},
      {clause,
       {828,9},
       [{var,{828,9},'Type'}],
       [],
       [{debug_line,829,334},
        {call,
         {829,13},
         {atom,{829,13},error},
         [{block,0,
           [{tuple,
             {829,19},
             [{atom,{829,20},wrong_tag_type},{var,{829,35},'Type'}]}]}]}]}]}]},
  {clause,
   {831,1},
   [{tuple,{831,4},[{atom,{831,5},try_end},{var,{831,13},'Reg'}]},
    {match,
     {831,19},
     {tuple,
      {831,19},
      [{atom,{831,19},vst},
       {tuple,
        {831,32},
        [{atom,{831,32},st},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {cons,{831,39},{var,{831,40},'Tag'},{var,{831,44},'_'}},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'},
         {var,{831,32},'_'}]},
       {var,{831,19},'_'},
       {var,{831,19},'_'},
       {var,{831,19},'_'},
       {var,{831,19},'_'},
       {var,{831,19},'_'}]},
     {var,{831,49},'Vst'}}],
   [],
   [{debug_line,832,335},
    {'case',
     {832,5},
     {call,
      {832,10},
      {atom,{832,10},get_tag_type},
      [{var,{832,23},'Reg'},{var,{832,28},'Vst'}]},
     [{clause,
       {833,9},
       [{match,
         {833,9},
         {tuple,{833,9},[{atom,{833,10},trytag},{var,{833,17},'_Fail'}]},
         {var,{833,24},'Tag'}}],
       [],
       [{debug_line,835,336},
        {call,
         {835,13},
         {atom,{835,13},kill_catch_tag},
         [{var,{835,28},'Reg'},{var,{835,33},'Vst'}]}]},
      {clause,
       {836,9},
       [{var,{836,9},'Type'}],
       [],
       [{debug_line,837,337},
        {call,
         {837,13},
         {atom,{837,13},error},
         [{block,0,
           [{tuple,
             {837,19},
             [{atom,{837,20},wrong_tag_type},{var,{837,35},'Type'}]}]}]}]}]}]},
  {clause,
   {839,1},
   [{tuple,{839,4},[{atom,{839,5},try_case},{var,{839,14},'Reg'}]},
    {match,
     {839,20},
     {tuple,
      {839,20},
      [{atom,{839,20},vst},
       {tuple,
        {839,33},
        [{atom,{839,33},st},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {cons,{839,40},{var,{839,41},'Tag'},{var,{839,45},'_'}},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'},
         {var,{839,33},'_'}]},
       {var,{839,20},'_'},
       {var,{839,20},'_'},
       {var,{839,20},'_'},
       {var,{839,20},'_'},
       {var,{839,20},'_'}]},
     {var,{839,50},'Vst0'}}],
   [],
   [{debug_line,840,338},
    {'case',
     {840,5},
     {call,
      {840,10},
      {atom,{840,10},get_tag_type},
      [{var,{840,23},'Reg'},{var,{840,28},'Vst0'}]},
     [{clause,
       {841,9},
       [{match,
         {841,9},
         {tuple,{841,9},[{atom,{841,10},trytag},{var,{841,17},'_Fail'}]},
         {var,{841,24},'Tag'}}],
       [],
       [{debug_line,845,339},
        {match,
         {845,13},
         {var,{845,13},'Vst1'},
         {call,
          {845,20},
          {atom,{845,20},kill_catch_tag},
          [{var,{845,35},'Reg'},{var,{845,40},'Vst0'}]}},
        {debug_line,846,340},
        {match,
         {846,13},
         {var,{846,13},'Vst2'},
         {call,
          {846,20},
          {atom,{846,20},schedule_out},
          [{integer,{846,33},0},{var,{846,36},'Vst1'}]}},
        {debug_line,849,341},
        {match,
         {849,13},
         {var,{849,13},'ClassType'},
         {tuple,
          {849,25},
          [{atom,{849,25},t_atom},
           {cons,
            {849,42},
            {atom,{849,43},error},
            {cons,
             {849,49},
             {atom,{849,49},exit},
             {cons,{849,54},{atom,{849,54},throw},{nil,{849,59}}}}}]}},
        {debug_line,850,342},
        {match,
         {850,13},
         {var,{850,13},'Vst3'},
         {call,
          {850,20},
          {atom,{850,20},create_term},
          [{var,{850,32},'ClassType'},
           {atom,{850,43},try_case},
           {nil,{850,53}},
           {block,0,
            [{tuple,{850,57},[{atom,{850,58},x},{integer,{850,60},0}]}]},
           {var,{850,64},'Vst2'}]}},
        {debug_line,851,343},
        {match,
         {851,13},
         {var,{851,13},'Vst'},
         {call,
          {851,19},
          {atom,{851,19},create_term},
          [{atom,{851,31},any},
           {atom,{851,36},try_case},
           {nil,{851,46}},
           {block,0,
            [{tuple,{851,50},[{atom,{851,51},x},{integer,{851,53},1}]}]},
           {var,{851,57},'Vst3'}]}},
        {debug_line,852,344},
        {call,
         {852,13},
         {atom,{852,13},create_term},
         [{atom,{852,25},any},
          {atom,{852,30},try_case},
          {nil,{852,40}},
          {block,0,
           [{tuple,{852,44},[{atom,{852,45},x},{integer,{852,47},2}]}]},
          {var,{852,51},'Vst'}]}]},
      {clause,
       {853,9},
       [{var,{853,9},'Type'}],
       [],
       [{debug_line,854,345},
        {call,
         {854,13},
         {atom,{854,13},error},
         [{block,0,
           [{tuple,
             {854,19},
             [{atom,{854,20},wrong_tag_type},{var,{854,35},'Type'}]}]}]}]}]}]},
  {clause,
   {856,1},
   [{atom,{856,4},build_stacktrace},{var,{856,22},'Vst0'}],
   [],
   [{debug_line,857,346},
    {call,{857,5},{atom,{857,5},verify_y_init},[{var,{857,19},'Vst0'}]},
    {debug_line,858,347},
    {call,
     {858,5},
     {atom,{858,5},verify_live},
     [{integer,{858,17},1},{var,{858,20},'Vst0'}]},
    {debug_line,860,348},
    {match,
     {860,5},
     {var,{860,5},'Vst'},
     {call,
      {860,11},
      {atom,{860,11},prune_x_regs},
      [{integer,{860,24},1},{var,{860,27},'Vst0'}]}},
    {debug_line,861,349},
    {match,
     {861,5},
     {var,{861,5},'Reg'},
     {tuple,{861,11},[{atom,{861,12},x},{integer,{861,14},0}]}},
    {debug_line,863,350},
    {call,
     {863,5},
     {atom,{863,5},assert_durable_term},
     [{var,{863,25},'Reg'},{var,{863,30},'Vst'}]},
    {debug_line,864,351},
    {call,
     {864,5},
     {atom,{864,5},create_term},
     [{block,0,
       [{tuple,
         {864,17},
         [{atom,{864,17},t_list},{atom,{864,17},any},{atom,{864,17},any}]}]},
      {atom,{864,28},build_stacktrace},
      {nil,{864,46}},
      {var,{864,50},'Reg'},
      {var,{864,55},'Vst'}]}]},
  {clause,
   {870,1},
   [{tuple,
     {870,4},
     [{atom,{870,5},get_map_elements},
      {tuple,{870,22},[{atom,{870,23},f},{var,{870,25},'Fail'}]},
      {var,{870,31},'Src0'},
      {tuple,{870,36},[{atom,{870,37},list},{var,{870,42},'List'}]}]},
    {var,{870,50},'Vst'}],
   [],
   [{debug_line,871,352},
    {match,
     {871,5},
     {var,{871,5},'Src'},
     {call,
      {871,11},
      {atom,{871,11},unpack_typed_arg},
      [{var,{871,28},'Src0'},{var,{871,34},'Vst'}]}},
    {debug_line,872,353},
    {call,
     {872,5},
     {atom,{872,5},verify_get_map},
     [{var,{872,20},'Fail'},
      {var,{872,26},'Src'},
      {var,{872,31},'List'},
      {var,{872,37},'Vst'}]}]},
  {clause,
   {873,1},
   [{tuple,
     {873,4},
     [{match,{873,5},{atom,{873,5},put_map_assoc},{var,{873,19},'Op'}},
      {tuple,{873,22},[{atom,{873,23},f},{var,{873,25},'Fail'}]},
      {var,{873,31},'Src'},
      {var,{873,35},'Dst'},
      {var,{873,39},'Live'},
      {tuple,{873,44},[{atom,{873,45},list},{var,{873,50},'List'}]}]},
    {var,{873,58},'Vst'}],
   [],
   [{debug_line,874,354},
    {call,
     {874,5},
     {atom,{874,5},verify_put_map},
     [{var,{874,20},'Op'},
      {var,{874,24},'Fail'},
      {var,{874,30},'Src'},
      {var,{874,35},'Dst'},
      {var,{874,40},'Live'},
      {var,{874,46},'List'},
      {var,{874,52},'Vst'}]}]},
  {clause,
   {875,1},
   [{tuple,
     {875,4},
     [{match,{875,5},{atom,{875,5},put_map_exact},{var,{875,19},'Op'}},
      {tuple,{875,22},[{atom,{875,23},f},{var,{875,25},'Fail'}]},
      {var,{875,31},'Src'},
      {var,{875,35},'Dst'},
      {var,{875,39},'Live'},
      {tuple,{875,44},[{atom,{875,45},list},{var,{875,50},'List'}]}]},
    {var,{875,58},'Vst'}],
   [],
   [{debug_line,876,355},
    {call,
     {876,5},
     {atom,{876,5},verify_put_map},
     [{var,{876,20},'Op'},
      {var,{876,24},'Fail'},
      {var,{876,30},'Src'},
      {var,{876,35},'Dst'},
      {var,{876,40},'Live'},
      {var,{876,46},'List'},
      {var,{876,52},'Vst'}]}]},
  {clause,
   {882,1},
   [{tuple,
     {882,4},
     [{atom,{882,5},bs_match},
      {tuple,{882,14},[{atom,{882,15},f},{var,{882,17},'Fail'}]},
      {var,{882,23},'Ctx0'},
      {tuple,{882,28},[{atom,{882,29},commands},{var,{882,38},'List'}]}]},
    {var,{882,46},'Vst'}],
   [],
   [{debug_line,883,356},
    {match,
     {883,5},
     {var,{883,5},'Ctx'},
     {call,
      {883,11},
      {atom,{883,11},unpack_typed_arg},
      [{var,{883,28},'Ctx0'},{var,{883,34},'Vst'}]}},
    {debug_line,885,357},
    {call,{885,5},{atom,{885,5},assert_no_exception},[{var,{885,25},'Fail'}]},
    {debug_line,886,358},
    {call,
     {886,5},
     {atom,{886,5},assert_type},
     [{block,0,
       [{tuple,{886,17},[{atom,{886,17},t_bs_context},{integer,{886,17},1}]}]},
      {var,{886,34},'Ctx'},
      {var,{886,39},'Vst'}]},
    {debug_line,887,359},
    {call,{887,5},{atom,{887,5},verify_y_init},[{var,{887,19},'Vst'}]},
    {debug_line,889,360},
    {call,
     {889,5},
     {atom,{889,5},branch},
     [{var,{889,12},'Fail'},
      {var,{889,18},'Vst'},
      {block,0,
       [{debug_line,890,361},
        {'fun',
         {890,12},
         {clauses,
          [{clause,
            {890,15},
            [{var,{890,16},'FailVst'}],
            [],
            [{debug_line,891,362},
             {call,
              {891,20},
              {atom,{891,20},validate_failed_bs_match},
              [{var,{891,45},'List'},
               {var,{891,51},'Ctx'},
               {var,{891,56},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,893,363},
        {'fun',
         {893,12},
         {clauses,
          [{clause,
            {893,15},
            [{var,{893,16},'SuccVst'}],
            [],
            [{debug_line,894,364},
             {call,
              {894,20},
              {atom,{894,20},validate_bs_match},
              [{var,{894,38},'List'},
               {var,{894,44},'Ctx'},
               {integer,{894,49},1},
               {var,{894,52},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {896,1},
   [{tuple,
     {896,4},
     [{atom,{896,5},bs_get_tail},
      {var,{896,17},'Ctx'},
      {var,{896,21},'Dst'},
      {var,{896,25},'Live'}]},
    {var,{896,32},'Vst0'}],
   [],
   [{debug_line,897,365},
    {call,
     {897,5},
     {atom,{897,5},assert_type},
     [{block,0,
       [{tuple,{897,17},[{atom,{897,17},t_bs_context},{integer,{897,17},1}]}]},
      {var,{897,34},'Ctx'},
      {var,{897,39},'Vst0'}]},
    {debug_line,898,366},
    {call,
     {898,5},
     {atom,{898,5},verify_live},
     [{var,{898,17},'Live'},{var,{898,23},'Vst0'}]},
    {debug_line,899,367},
    {call,{899,5},{atom,{899,5},verify_y_init},[{var,{899,19},'Vst0'}]},
    {debug_line,901,368},
    {match,
     {901,5},
     {tuple,{901,5},[{atom,{901,5},t_bs_context},{var,{901,29},'Unit'}]},
     {call,
      {901,37},
      {atom,{901,37},get_concrete_type},
      [{var,{901,55},'Ctx'},{var,{901,60},'Vst0'}]}},
    {debug_line,903,369},
    {match,
     {903,5},
     {var,{903,5},'Vst'},
     {call,
      {903,11},
      {atom,{903,11},prune_x_regs},
      [{var,{903,24},'Live'},{var,{903,30},'Vst0'}]}},
    {debug_line,904,370},
    {call,
     {904,5},
     {atom,{904,5},extract_term},
     [{block,0,
       [{tuple,
         {904,18},
         [{atom,{904,18},t_bitstring},
          {var,{904,41},'Unit'},
          {atom,{904,18},false}]}]},
      {atom,{904,48},bs_get_tail},
      {block,0,[{cons,{904,61},{var,{904,62},'Ctx'},{nil,{904,65}}}]},
      {var,{904,68},'Dst'},
      {var,{905,18},'Vst'},
      {var,{905,23},'Vst0'}]}]},
  {clause,
   {906,1},
   [{tuple,
     {906,4},
     [{atom,{906,5},bs_start_match4},
      {var,{906,21},'Fail'},
      {var,{906,26},'Live'},
      {var,{906,31},'Src'},
      {var,{906,35},'Dst'}]},
    {var,{906,41},'Vst'}],
   [],
   [{debug_line,907,371},
    {call,
     {907,5},
     {atom,{907,5},validate_bs_start_match},
     [{var,{907,29},'Fail'},
      {var,{907,35},'Live'},
      {var,{907,41},'Src'},
      {var,{907,46},'Dst'},
      {var,{907,51},'Vst'}]}]},
  {clause,
   {908,1},
   [{tuple,
     {908,4},
     [{atom,{908,5},test},
      {atom,{908,10},bs_start_match3},
      {match,
       {908,26},
       {tuple,{908,26},[{atom,{908,27},f},{var,{908,29},'_'}]},
       {var,{908,32},'Fail'}},
      {var,{908,37},'Live'},
      {cons,{908,42},{var,{908,43},'Src'},{nil,{908,46}}},
      {var,{908,48},'Dst'}]},
    {var,{908,54},'Vst'}],
   [],
   [{debug_line,909,372},
    {call,
     {909,5},
     {atom,{909,5},validate_bs_start_match},
     [{var,{909,29},'Fail'},
      {var,{909,35},'Live'},
      {var,{909,41},'Src'},
      {var,{909,46},'Dst'},
      {var,{909,51},'Vst'}]}]},
  {clause,
   {910,1},
   [{tuple,
     {910,4},
     [{atom,{910,5},test},
      {atom,{910,10},bs_match_string},
      {tuple,{910,26},[{atom,{910,27},f},{var,{910,29},'Fail'}]},
      {cons,
       {910,35},
       {var,{910,36},'Ctx'},
       {cons,
        {910,40},
        {var,{910,40},'Stride'},
        {cons,
         {910,47},
         {tuple,{910,47},[{atom,{910,48},string},{var,{910,55},'String'}]},
         {nil,{910,62}}}}}]},
    {var,{910,66},'Vst'}],
   [],
   [{debug_line,911,373},
    {match,
     {911,5},
     {atom,{911,5},true},
     {call,
      {911,12},
      {remote,{911,12},{atom,{911,12},erlang},{atom,{911,12},is_bitstring}},
      [{var,{911,25},'String'}]}},
    {debug_line,912,374},
    {call,
     {912,5},
     {atom,{912,5},validate_bs_skip},
     [{var,{912,22},'Fail'},
      {var,{912,28},'Ctx'},
      {var,{912,33},'Stride'},
      {var,{912,41},'Vst'}]}]},
  {clause,
   {913,1},
   [{tuple,
     {913,4},
     [{atom,{913,5},test},
      {atom,{913,10},bs_skip_bits2},
      {tuple,{913,24},[{atom,{913,25},f},{var,{913,27},'Fail'}]},
      {cons,
       {913,33},
       {var,{913,34},'Ctx'},
       {cons,
        {913,38},
        {var,{913,38},'Size0'},
        {cons,
         {913,44},
         {var,{913,44},'Unit'},
         {cons,{913,49},{var,{913,49},'_Flags'},{nil,{913,55}}}}}}]},
    {var,{913,59},'Vst'}],
   [],
   [{debug_line,914,375},
    {match,
     {914,5},
     {var,{914,5},'Size'},
     {call,
      {914,12},
      {atom,{914,12},unpack_typed_arg},
      [{var,{914,29},'Size0'},{var,{914,36},'Vst'}]}},
    {debug_line,915,376},
    {call,
     {915,5},
     {atom,{915,5},assert_term},
     [{var,{915,17},'Size'},{var,{915,23},'Vst'}]},
    {debug_line,917,377},
    {match,
     {917,5},
     {var,{917,5},'Stride'},
     {'case',
      {917,14},
      {call,
       {917,19},
       {atom,{917,19},get_concrete_type},
       [{var,{917,37},'Size'},{var,{917,43},'Vst'}]},
      [{clause,
        {918,18},
        [{tuple,
          {918,18},
          [{atom,{918,18},t_integer},
           {tuple,{918,38},[{var,{918,39},'Same'},{var,{918,44},'Same'}]}]}],
        [],
        [{debug_line,918,378},
         {op,{918,59},'*',{var,{918,54},'Same'},{var,{918,61},'Unit'}}]},
       {clause,
        {919,18},
        [{var,{919,18},'_'}],
        [],
        [{debug_line,919,379},{var,{919,23},'Unit'}]}]}},
    {debug_line,922,380},
    {call,
     {922,5},
     {atom,{922,5},validate_bs_skip},
     [{var,{922,22},'Fail'},
      {var,{922,28},'Ctx'},
      {var,{922,33},'Stride'},
      {var,{922,41},'Vst'}]}]},
  {clause,
   {923,1},
   [{tuple,
     {923,4},
     [{atom,{923,5},test},
      {atom,{923,10},bs_test_tail2},
      {tuple,{923,24},[{atom,{923,25},f},{var,{923,27},'Fail'}]},
      {cons,
       {923,33},
       {var,{923,34},'Ctx'},
       {cons,{923,38},{var,{923,38},'_Size'},{nil,{923,43}}}}]},
    {var,{923,47},'Vst'}],
   [],
   [{debug_line,924,381},
    {call,{924,5},{atom,{924,5},assert_no_exception},[{var,{924,25},'Fail'}]},
    {debug_line,925,382},
    {call,
     {925,5},
     {atom,{925,5},assert_type},
     [{block,0,
       [{tuple,{925,17},[{atom,{925,17},t_bs_context},{integer,{925,17},1}]}]},
      {var,{925,34},'Ctx'},
      {var,{925,39},'Vst'}]},
    {debug_line,926,383},
    {call,
     {926,5},
     {atom,{926,5},branch},
     [{var,{926,12},'Fail'},{var,{926,18},'Vst'}]}]},
  {clause,
   {927,1},
   [{tuple,
     {927,4},
     [{atom,{927,5},test},
      {atom,{927,10},bs_test_unit},
      {tuple,{927,23},[{atom,{927,24},f},{var,{927,26},'Fail'}]},
      {cons,
       {927,32},
       {var,{927,33},'Ctx'},
       {cons,{927,37},{var,{927,37},'Unit'},{nil,{927,41}}}}]},
    {var,{927,45},'Vst'}],
   [],
   [{debug_line,928,384},
    {call,
     {928,5},
     {atom,{928,5},assert_type},
     [{block,0,
       [{tuple,{928,17},[{atom,{928,17},t_bs_context},{integer,{928,17},1}]}]},
      {var,{928,34},'Ctx'},
      {var,{928,39},'Vst'}]},
    {debug_line,930,385},
    {match,
     {930,5},
     {var,{930,5},'Type'},
     {tuple,{930,12},[{atom,{930,12},t_bs_context},{var,{930,36},'Unit'}]}},
    {debug_line,932,386},
    {call,
     {932,5},
     {atom,{932,5},branch},
     [{var,{932,12},'Fail'},
      {var,{932,18},'Vst'},
      {block,0,
       [{debug_line,933,387},
        {'fun',
         {933,12},
         {clauses,
          [{clause,
            {933,15},
            [{var,{933,16},'FailVst'}],
            [],
            [{debug_line,934,388},
             {call,
              {934,20},
              {atom,{934,20},update_type},
              [{block,0,[{'fun',{934,32},{function,subtract,2}}]},
               {var,{934,48},'Type'},
               {var,{934,54},'Ctx'},
               {var,{934,59},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,936,389},
        {'fun',
         {936,12},
         {clauses,
          [{clause,
            {936,15},
            [{var,{936,16},'SuccVst0'}],
            [],
            [{debug_line,937,390},
             {match,
              {937,20},
              {var,{937,20},'SuccVst'},
              {call,
               {937,30},
               {atom,{937,30},update_bs_unit},
               [{var,{937,45},'Ctx'},
                {var,{937,50},'Unit'},
                {var,{937,56},'SuccVst0'}]}},
             {debug_line,938,391},
             {call,
              {938,20},
              {atom,{938,20},update_type},
              [{block,0,[{'fun',{938,32},{function,meet,2}}]},
               {var,{938,44},'Type'},
               {var,{938,50},'Ctx'},
               {var,{938,55},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {940,1},
   [{tuple,
     {940,4},
     [{atom,{940,5},test},
      {atom,{940,10},bs_skip_utf8},
      {tuple,{940,23},[{atom,{940,24},f},{var,{940,26},'Fail'}]},
      {cons,
       {940,32},
       {var,{940,33},'Ctx'},
       {cons,
        {940,37},
        {var,{940,37},'Live'},
        {cons,{940,42},{var,{940,42},'_'},{nil,{940,43}}}}}]},
    {var,{940,47},'Vst'}],
   [],
   [{debug_line,941,392},
    {call,
     {941,5},
     {atom,{941,5},validate_bs_skip},
     [{var,{941,22},'Fail'},
      {var,{941,28},'Ctx'},
      {integer,{941,33},8},
      {var,{941,36},'Live'},
      {var,{941,42},'Vst'}]}]},
  {clause,
   {942,1},
   [{tuple,
     {942,4},
     [{atom,{942,5},test},
      {atom,{942,10},bs_skip_utf16},
      {tuple,{942,24},[{atom,{942,25},f},{var,{942,27},'Fail'}]},
      {cons,
       {942,33},
       {var,{942,34},'Ctx'},
       {cons,
        {942,38},
        {var,{942,38},'Live'},
        {cons,{942,43},{var,{942,43},'_'},{nil,{942,44}}}}}]},
    {var,{942,48},'Vst'}],
   [],
   [{debug_line,943,393},
    {call,
     {943,5},
     {atom,{943,5},validate_bs_skip},
     [{var,{943,22},'Fail'},
      {var,{943,28},'Ctx'},
      {integer,{943,33},16},
      {var,{943,37},'Live'},
      {var,{943,43},'Vst'}]}]},
  {clause,
   {944,1},
   [{tuple,
     {944,4},
     [{atom,{944,5},test},
      {atom,{944,10},bs_skip_utf32},
      {tuple,{944,24},[{atom,{944,25},f},{var,{944,27},'Fail'}]},
      {cons,
       {944,33},
       {var,{944,34},'Ctx'},
       {cons,
        {944,38},
        {var,{944,38},'Live'},
        {cons,{944,43},{var,{944,43},'_'},{nil,{944,44}}}}}]},
    {var,{944,48},'Vst'}],
   [],
   [{debug_line,945,394},
    {call,
     {945,5},
     {atom,{945,5},validate_bs_skip},
     [{var,{945,22},'Fail'},
      {var,{945,28},'Ctx'},
      {integer,{945,33},32},
      {var,{945,37},'Live'},
      {var,{945,43},'Vst'}]}]},
  {clause,
   {946,1},
   [{tuple,
     {946,4},
     [{atom,{946,5},test},
      {match,{946,10},{atom,{946,10},bs_get_binary2},{var,{946,25},'Op'}},
      {tuple,{946,28},[{atom,{946,29},f},{var,{946,31},'Fail'}]},
      {var,{946,37},'Live'},
      {cons,
       {946,42},
       {var,{946,43},'Ctx'},
       {cons,
        {946,47},
        {tuple,{946,47},[{atom,{946,48},atom},{atom,{946,53},all}]},
        {cons,
         {946,58},
         {var,{946,58},'Unit'},
         {cons,{946,63},{var,{946,63},'_'},{nil,{946,64}}}}}},
      {var,{946,66},'Dst'}]},
    {var,{946,72},'Vst'}],
   [],
   [{debug_line,947,395},
    {match,
     {947,5},
     {var,{947,5},'Type'},
     {tuple,
      {947,12},
      [{atom,{947,12},t_bitstring},
       {var,{947,35},'Unit'},
       {atom,{947,12},false}]}},
    {debug_line,948,396},
    {call,
     {948,5},
     {atom,{948,5},validate_bs_get_all},
     [{var,{948,25},'Op'},
      {var,{948,29},'Fail'},
      {var,{948,35},'Ctx'},
      {var,{948,40},'Live'},
      {var,{948,46},'Unit'},
      {var,{948,52},'Type'},
      {var,{948,58},'Dst'},
      {var,{948,63},'Vst'}]}]},
  {clause,
   {949,1},
   [{tuple,
     {949,4},
     [{atom,{949,5},test},
      {match,{949,10},{atom,{949,10},bs_get_binary2},{var,{949,25},'Op'}},
      {tuple,{949,28},[{atom,{949,29},f},{var,{949,31},'Fail'}]},
      {var,{949,37},'Live'},
      {cons,
       {949,42},
       {var,{949,43},'Ctx'},
       {cons,
        {949,47},
        {var,{949,47},'Size'},
        {cons,
         {949,52},
         {var,{949,52},'Unit'},
         {cons,{949,57},{var,{949,57},'_'},{nil,{949,58}}}}}},
      {var,{949,60},'Dst'}]},
    {var,{949,66},'Vst'}],
   [],
   [{debug_line,950,397},
    {match,
     {950,5},
     {var,{950,5},'Type'},
     {tuple,
      {950,12},
      [{atom,{950,12},t_bitstring},
       {call,
        {950,35},
        {atom,{950,35},bsm_size_unit},
        [{var,{950,49},'Size'},{var,{950,55},'Unit'}]},
       {atom,{950,12},false}]}},
    {debug_line,951,398},
    {match,
     {951,5},
     {var,{951,5},'Stride'},
     {call,
      {951,14},
      {atom,{951,14},bsm_stride},
      [{var,{951,25},'Size'},{var,{951,31},'Unit'}]}},
    {debug_line,952,399},
    {call,
     {952,5},
     {atom,{952,5},validate_bs_get},
     [{var,{952,21},'Op'},
      {var,{952,25},'Fail'},
      {var,{952,31},'Ctx'},
      {var,{952,36},'Live'},
      {var,{952,42},'Stride'},
      {var,{952,50},'Type'},
      {var,{952,56},'Dst'},
      {var,{952,61},'Vst'}]}]},
  {clause,
   {953,1},
   [{tuple,
     {953,4},
     [{atom,{953,5},test},
      {match,{953,10},{atom,{953,10},bs_get_integer2},{var,{953,26},'Op'}},
      {tuple,{953,29},[{atom,{953,30},f},{var,{953,32},'Fail'}]},
      {var,{953,38},'Live'},
      {cons,
       {954,5},
       {var,{954,6},'Ctx'},
       {cons,
        {954,10},
        {tuple,{954,10},[{atom,{954,11},integer},{var,{954,19},'Size'}]},
        {cons,
         {954,25},
         {var,{954,25},'Unit'},
         {cons,
          {954,30},
          {tuple,
           {954,30},
           [{atom,{954,31},field_flags},{var,{954,43},'Flags'}]},
          {nil,{954,49}}}}}},
      {var,{954,51},'Dst'}]},
    {var,{954,56},'Vst'}],
   [],
   [{debug_line,955,400},
    {match,
     {955,5},
     {var,{955,5},'Type'},
     {call,
      {955,12},
      {atom,{955,12},bs_integer_type},
      [{block,0,
        [{tuple,{955,28},[{var,{955,29},'Size'},{var,{955,35},'Size'}]}]},
       {var,{955,42},'Unit'},
       {var,{955,48},'Flags'}]}},
    {debug_line,956,401},
    {match,
     {956,5},
     {var,{956,5},'Stride'},
     {op,{956,19},'*',{var,{956,14},'Unit'},{var,{956,21},'Size'}}},
    {debug_line,957,402},
    {call,
     {957,5},
     {atom,{957,5},validate_bs_get},
     [{var,{957,21},'Op'},
      {var,{957,25},'Fail'},
      {var,{957,31},'Ctx'},
      {var,{957,36},'Live'},
      {var,{957,42},'Stride'},
      {var,{957,50},'Type'},
      {var,{957,56},'Dst'},
      {var,{957,61},'Vst'}]}]},
  {clause,
   {958,1},
   [{tuple,
     {958,4},
     [{atom,{958,5},test},
      {match,{958,10},{atom,{958,10},bs_get_integer2},{var,{958,26},'Op'}},
      {tuple,{958,29},[{atom,{958,30},f},{var,{958,32},'Fail'}]},
      {var,{958,38},'Live'},
      {cons,
       {958,43},
       {var,{958,44},'Ctx'},
       {cons,
        {958,48},
        {var,{958,48},'Sz0'},
        {cons,
         {958,52},
         {var,{958,52},'Unit'},
         {cons,
          {958,57},
          {tuple,
           {958,57},
           [{atom,{958,58},field_flags},{var,{958,70},'Flags'}]},
          {nil,{958,76}}}}}},
      {var,{958,78},'Dst'}]},
    {var,{958,83},'Vst'}],
   [],
   [{debug_line,959,403},
    {match,
     {959,5},
     {var,{959,5},'Sz'},
     {call,
      {959,10},
      {atom,{959,10},unpack_typed_arg},
      [{var,{959,27},'Sz0'},{var,{959,32},'Vst'}]}},
    {debug_line,960,404},
    {match,
     {960,5},
     {var,{960,5},'Type'},
     {'case',
      {960,12},
      {call,
       {960,17},
       {atom,{960,17},meet},
       [{block,0,
         [{call,
           {960,22},
           {atom,{960,22},get_term_type},
           [{var,{960,36},'Sz'},{var,{960,40},'Vst'}]}]},
        {block,0,
         [{tuple,{960,46},[{atom,{960,46},t_integer},{atom,{960,46},any}]}]}]},
      [{clause,
        {961,16},
        [{tuple,{961,16},[{atom,{961,16},t_integer},{var,{961,36},'Bounds'}]}],
        [],
        [{debug_line,962,405},
         {call,
          {962,20},
          {atom,{962,20},bs_integer_type},
          [{var,{962,36},'Bounds'},
           {var,{962,44},'Unit'},
           {var,{962,50},'Flags'}]}]},
       {clause,
        {963,16},
        [{atom,{963,16},none}],
        [],
        [{debug_line,964,406},{atom,{964,20},none}]}]}},
    {debug_line,966,407},
    {call,
     {966,5},
     {atom,{966,5},validate_bs_get},
     [{var,{966,21},'Op'},
      {var,{966,25},'Fail'},
      {var,{966,31},'Ctx'},
      {var,{966,36},'Live'},
      {var,{966,42},'Unit'},
      {var,{966,48},'Type'},
      {var,{966,54},'Dst'},
      {var,{966,59},'Vst'}]}]},
  {clause,
   {967,1},
   [{tuple,
     {967,4},
     [{atom,{967,5},test},
      {match,{967,10},{atom,{967,10},bs_get_float2},{var,{967,24},'Op'}},
      {tuple,{967,27},[{atom,{967,28},f},{var,{967,30},'Fail'}]},
      {var,{967,36},'Live'},
      {cons,
       {967,41},
       {var,{967,42},'Ctx'},
       {cons,
        {967,46},
        {var,{967,46},'Size'},
        {cons,
         {967,51},
         {var,{967,51},'Unit'},
         {cons,{967,56},{var,{967,56},'_'},{nil,{967,57}}}}}},
      {var,{967,59},'Dst'}]},
    {var,{967,64},'Vst'}],
   [],
   [{debug_line,968,408},
    {match,
     {968,5},
     {var,{968,5},'Stride'},
     {call,
      {968,14},
      {atom,{968,14},bsm_stride},
      [{var,{968,25},'Size'},{var,{968,31},'Unit'}]}},
    {debug_line,969,409},
    {call,
     {969,5},
     {atom,{969,5},validate_bs_get},
     [{var,{969,21},'Op'},
      {var,{969,25},'Fail'},
      {var,{969,31},'Ctx'},
      {var,{969,36},'Live'},
      {var,{969,42},'Stride'},
      {block,0,
       [{tuple,{969,50},[{atom,{969,50},t_float},{atom,{969,50},any}]}]},
      {var,{969,62},'Dst'},
      {var,{969,67},'Vst'}]}]},
  {clause,
   {970,1},
   [{tuple,
     {970,4},
     [{atom,{970,5},test},
      {match,{970,10},{atom,{970,10},bs_get_utf8},{var,{970,22},'Op'}},
      {tuple,{970,25},[{atom,{970,26},f},{var,{970,28},'Fail'}]},
      {var,{970,34},'Live'},
      {cons,
       {970,39},
       {var,{970,40},'Ctx'},
       {cons,{970,44},{var,{970,44},'_'},{nil,{970,45}}}},
      {var,{970,47},'Dst'}]},
    {var,{970,53},'Vst'}],
   [],
   [{debug_line,971,410},
    {match,
     {971,5},
     {var,{971,5},'Type'},
     {call,
      {971,12},
      {remote,
       {971,22},
       {atom,{971,12},beam_types},
       {atom,{971,23},make_integer}},
      [{integer,{971,36},0},{integer,{971,40},1114111}]}},
    {debug_line,972,411},
    {call,
     {972,5},
     {atom,{972,5},validate_bs_get},
     [{var,{972,21},'Op'},
      {var,{972,25},'Fail'},
      {var,{972,31},'Ctx'},
      {var,{972,36},'Live'},
      {integer,{972,42},8},
      {var,{972,45},'Type'},
      {var,{972,51},'Dst'},
      {var,{972,56},'Vst'}]}]},
  {clause,
   {973,1},
   [{tuple,
     {973,4},
     [{atom,{973,5},test},
      {match,{973,10},{atom,{973,10},bs_get_utf16},{var,{973,23},'Op'}},
      {tuple,{973,26},[{atom,{973,27},f},{var,{973,29},'Fail'}]},
      {var,{973,35},'Live'},
      {cons,
       {973,40},
       {var,{973,41},'Ctx'},
       {cons,{973,45},{var,{973,45},'_'},{nil,{973,46}}}},
      {var,{973,48},'Dst'}]},
    {var,{973,54},'Vst'}],
   [],
   [{debug_line,974,412},
    {match,
     {974,5},
     {var,{974,5},'Type'},
     {call,
      {974,12},
      {remote,
       {974,22},
       {atom,{974,12},beam_types},
       {atom,{974,23},make_integer}},
      [{integer,{974,36},0},{integer,{974,40},1114111}]}},
    {debug_line,975,413},
    {call,
     {975,5},
     {atom,{975,5},validate_bs_get},
     [{var,{975,21},'Op'},
      {var,{975,25},'Fail'},
      {var,{975,31},'Ctx'},
      {var,{975,36},'Live'},
      {integer,{975,42},16},
      {var,{975,46},'Type'},
      {var,{975,52},'Dst'},
      {var,{975,57},'Vst'}]}]},
  {clause,
   {976,1},
   [{tuple,
     {976,4},
     [{atom,{976,5},test},
      {match,{976,10},{atom,{976,10},bs_get_utf32},{var,{976,23},'Op'}},
      {tuple,{976,26},[{atom,{976,27},f},{var,{976,29},'Fail'}]},
      {var,{976,35},'Live'},
      {cons,
       {976,40},
       {var,{976,41},'Ctx'},
       {cons,{976,45},{var,{976,45},'_'},{nil,{976,46}}}},
      {var,{976,48},'Dst'}]},
    {var,{976,54},'Vst'}],
   [],
   [{debug_line,977,414},
    {match,
     {977,5},
     {var,{977,5},'Type'},
     {call,
      {977,12},
      {remote,
       {977,22},
       {atom,{977,12},beam_types},
       {atom,{977,23},make_integer}},
      [{integer,{977,36},0},{integer,{977,40},1114111}]}},
    {debug_line,978,415},
    {call,
     {978,5},
     {atom,{978,5},validate_bs_get},
     [{var,{978,21},'Op'},
      {var,{978,25},'Fail'},
      {var,{978,31},'Ctx'},
      {var,{978,36},'Live'},
      {integer,{978,42},32},
      {var,{978,46},'Type'},
      {var,{978,52},'Dst'},
      {var,{978,57},'Vst'}]}]},
  {clause,
   {979,1},
   [{tuple,
     {979,4},
     [{atom,{979,5},test},
      {atom,{979,10},is_lt},
      {tuple,{979,16},[{atom,{979,17},f},{var,{979,19},'Fail'}]},
      {var,{979,25},'Args0'}]},
    {var,{979,33},'Vst'}],
   [],
   [{debug_line,980,416},
    {match,
     {980,5},
     {var,{980,5},'Args'},
     {lc,
      {980,12},
      {block,0,
       [{call,
         {980,13},
         {atom,{980,13},unpack_typed_arg},
         [{var,{980,30},'Arg'},{var,{980,35},'Vst'}]}]},
      [{block,0,[{atom,{980,50},true}]},
       {generate,{980,47},{var,{980,43},'Arg'},{var,{980,50},'Args0'}}]}},
    {debug_line,981,417},
    {call,
     {981,5},
     {atom,{981,5},validate_src},
     [{var,{981,18},'Args'},{var,{981,24},'Vst'}]},
    {debug_line,982,418},
    {match,
     {982,5},
     {var,{982,5},'Types'},
     {lc,
      {982,13},
      {block,0,
       [{call,
         {982,14},
         {atom,{982,14},get_term_type},
         [{var,{982,28},'Arg'},{var,{982,33},'Vst'}]}]},
      [{block,0,[{atom,{982,48},true}]},
       {generate,{982,45},{var,{982,41},'Arg'},{var,{982,48},'Args'}}]}},
    {debug_line,983,419},
    {call,
     {983,5},
     {atom,{983,5},branch},
     [{var,{983,12},'Fail'},
      {var,{983,18},'Vst'},
      {block,0,
       [{debug_line,984,420},
        {'fun',
         {984,12},
         {clauses,
          [{clause,
            {984,15},
            [{var,{984,16},'FailVst'}],
            [],
            [{debug_line,985,421},
             {call,
              {985,20},
              {atom,{985,20},infer_relop_types},
              [{atom,{985,38},'>='},
               {var,{985,44},'Args'},
               {var,{985,50},'Types'},
               {var,{985,57},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,987,422},
        {'fun',
         {987,12},
         {clauses,
          [{clause,
            {987,15},
            [{var,{987,16},'SuccVst'}],
            [],
            [{debug_line,988,423},
             {call,
              {988,20},
              {atom,{988,20},infer_relop_types},
              [{atom,{988,38},'<'},
               {var,{988,43},'Args'},
               {var,{988,49},'Types'},
               {var,{988,56},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {990,1},
   [{tuple,
     {990,4},
     [{atom,{990,5},test},
      {atom,{990,10},is_ge},
      {tuple,{990,16},[{atom,{990,17},f},{var,{990,19},'Fail'}]},
      {var,{990,25},'Args0'}]},
    {var,{990,33},'Vst'}],
   [],
   [{debug_line,991,424},
    {match,
     {991,5},
     {var,{991,5},'Args'},
     {lc,
      {991,12},
      {block,0,
       [{call,
         {991,13},
         {atom,{991,13},unpack_typed_arg},
         [{var,{991,30},'Arg'},{var,{991,35},'Vst'}]}]},
      [{block,0,[{atom,{991,50},true}]},
       {generate,{991,47},{var,{991,43},'Arg'},{var,{991,50},'Args0'}}]}},
    {debug_line,992,425},
    {call,
     {992,5},
     {atom,{992,5},validate_src},
     [{var,{992,18},'Args'},{var,{992,24},'Vst'}]},
    {debug_line,993,426},
    {match,
     {993,5},
     {var,{993,5},'Types'},
     {lc,
      {993,13},
      {block,0,
       [{call,
         {993,14},
         {atom,{993,14},get_term_type},
         [{var,{993,28},'Arg'},{var,{993,33},'Vst'}]}]},
      [{block,0,[{atom,{993,48},true}]},
       {generate,{993,45},{var,{993,41},'Arg'},{var,{993,48},'Args'}}]}},
    {debug_line,994,427},
    {call,
     {994,5},
     {atom,{994,5},branch},
     [{var,{994,12},'Fail'},
      {var,{994,18},'Vst'},
      {block,0,
       [{debug_line,995,428},
        {'fun',
         {995,12},
         {clauses,
          [{clause,
            {995,15},
            [{var,{995,16},'FailVst'}],
            [],
            [{debug_line,996,429},
             {call,
              {996,20},
              {atom,{996,20},infer_relop_types},
              [{atom,{996,38},'<'},
               {var,{996,43},'Args'},
               {var,{996,49},'Types'},
               {var,{996,56},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,998,430},
        {'fun',
         {998,12},
         {clauses,
          [{clause,
            {998,15},
            [{var,{998,16},'SuccVst'}],
            [],
            [{debug_line,999,431},
             {call,
              {999,20},
              {atom,{999,20},infer_relop_types},
              [{atom,{999,38},'>='},
               {var,{999,44},'Args'},
               {var,{999,50},'Types'},
               {var,{999,57},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {1001,1},
   [{tuple,
     {1001,4},
     [{atom,{1001,5},test},
      {var,{1001,10},'_Op'},
      {tuple,{1001,14},[{atom,{1001,15},f},{var,{1001,17},'Lbl'}]},
      {var,{1001,22},'Ss'}]},
    {var,{1001,27},'Vst'}],
   [],
   [{debug_line,1002,432},
    {call,
     {1002,5},
     {atom,{1002,5},validate_src},
     [{block,0,
       [{lc,
         {1002,18},
         {block,0,
          [{call,
            {1002,19},
            {atom,{1002,19},unpack_typed_arg},
            [{var,{1002,36},'Arg'},{var,{1002,41},'Vst'}]}]},
         [{block,0,[{atom,{1002,56},true}]},
          {generate,{1002,53},{var,{1002,49},'Arg'},{var,{1002,56},'Ss'}}]}]},
      {var,{1002,61},'Vst'}]},
    {debug_line,1003,433},
    {call,
     {1003,5},
     {atom,{1003,5},branch},
     [{var,{1003,12},'Lbl'},{var,{1003,17},'Vst'}]}]},
  {clause,
   {1009,1},
   [{tuple,
     {1009,4},
     [{atom,{1009,5},bs_get_position},
      {var,{1009,22},'Ctx'},
      {var,{1009,27},'Dst'},
      {var,{1009,32},'Live'}]},
    {var,{1009,39},'Vst0'}],
   [],
   [{debug_line,1010,434},
    {call,
     {1010,5},
     {atom,{1010,5},assert_type},
     [{block,0,
       [{tuple,
         {1010,17},
         [{atom,{1010,17},t_bs_context},{integer,{1010,17},1}]}]},
      {var,{1010,34},'Ctx'},
      {var,{1010,39},'Vst0'}]},
    {debug_line,1012,435},
    {call,
     {1012,5},
     {atom,{1012,5},verify_live},
     [{var,{1012,17},'Live'},{var,{1012,23},'Vst0'}]},
    {debug_line,1013,436},
    {call,{1013,5},{atom,{1013,5},verify_y_init},[{var,{1013,19},'Vst0'}]},
    {debug_line,1015,437},
    {match,
     {1015,5},
     {tuple,{1015,5},[{atom,{1015,5},t_bs_context},{var,{1015,29},'Unit'}]},
     {call,
      {1015,37},
      {atom,{1015,37},get_concrete_type},
      [{var,{1015,55},'Ctx'},{var,{1015,60},'Vst0'}]}},
    {debug_line,1017,438},
    {match,
     {1017,5},
     {var,{1017,5},'Vst1'},
     {call,
      {1017,12},
      {atom,{1017,12},prune_x_regs},
      [{var,{1017,25},'Live'},{var,{1017,31},'Vst0'}]}},
    {debug_line,1018,439},
    {match,
     {1018,5},
     {var,{1018,5},'Vst'},
     {call,
      {1018,11},
      {atom,{1018,11},create_term},
      [{block,0,
        [{tuple,
          {1018,23},
          [{atom,{1018,23},t_abstract},
           {tuple,
            {1018,40},
            [{atom,{1018,41},ms_position},{var,{1018,54},'Unit'}]}]}]},
       {atom,{1019,24},bs_get_position},
       {block,0,
        [{debug_line,1019,440},
         {cons,{1019,41},{var,{1019,42},'Ctx'},{nil,{1019,45}}}]},
       {var,{1019,48},'Dst'},
       {var,{1019,53},'Vst1'},
       {var,{1019,59},'Vst0'}]}},
    {debug_line,1021,441},
    {call,
     {1021,5},
     {atom,{1021,5},mark_current_ms_position},
     [{var,{1021,30},'Ctx'},{var,{1021,35},'Dst'},{var,{1021,40},'Vst'}]}]},
  {clause,
   {1022,1},
   [{tuple,
     {1022,4},
     [{atom,{1022,5},bs_set_position},
      {var,{1022,22},'Ctx'},
      {var,{1022,27},'Pos'}]},
    {var,{1022,33},'Vst0'}],
   [],
   [{debug_line,1023,442},
    {call,
     {1023,5},
     {atom,{1023,5},assert_type},
     [{block,0,
       [{tuple,
         {1023,17},
         [{atom,{1023,17},t_bs_context},{integer,{1023,17},1}]}]},
      {var,{1023,34},'Ctx'},
      {var,{1023,39},'Vst0'}]},
    {debug_line,1024,443},
    {call,
     {1024,5},
     {atom,{1024,5},assert_type},
     [{block,0,
       [{tuple,
         {1024,17},
         [{atom,{1024,17},t_abstract},
          {tuple,
           {1024,34},
           [{atom,{1024,35},ms_position},{integer,{1024,47},1}]}]}]},
      {var,{1024,52},'Pos'},
      {var,{1024,57},'Vst0'}]},
    {debug_line,1026,444},
    {match,
     {1026,5},
     {tuple,
      {1026,5},
      [{atom,{1026,5},t_abstract},
       {tuple,
        {1026,22},
        [{atom,{1026,23},ms_position},{var,{1026,35},'Unit'}]}]},
     {call,
      {1026,44},
      {atom,{1026,44},get_concrete_type},
      [{var,{1026,62},'Pos'},{var,{1026,67},'Vst0'}]}},
    {debug_line,1027,445},
    {match,
     {1027,5},
     {var,{1027,5},'Vst'},
     {call,
      {1027,11},
      {atom,{1027,11},override_type},
      [{block,0,
        [{tuple,
          {1027,25},
          [{atom,{1027,25},t_bs_context},{var,{1027,49},'Unit'}]}]},
       {var,{1027,56},'Ctx'},
       {var,{1027,61},'Vst0'}]}},
    {debug_line,1029,446},
    {call,
     {1029,5},
     {atom,{1029,5},mark_current_ms_position},
     [{var,{1029,30},'Ctx'},{var,{1029,35},'Pos'},{var,{1029,40},'Vst'}]}]},
  {clause,
   {1034,1},
   [{tuple,
     {1034,4},
     [{atom,{1034,5},fconv},
      {var,{1034,11},'Src0'},
      {match,
       {1034,16},
       {tuple,{1034,16},[{atom,{1034,17},fr},{var,{1034,20},'_'}]},
       {var,{1034,23},'Dst'}}]},
    {var,{1034,29},'Vst'}],
   [],
   [{debug_line,1035,447},
    {match,
     {1035,5},
     {var,{1035,5},'Src'},
     {call,
      {1035,11},
      {atom,{1035,11},unpack_typed_arg},
      [{var,{1035,28},'Src0'},{var,{1035,34},'Vst'}]}},
    {debug_line,1037,448},
    {call,
     {1037,5},
     {atom,{1037,5},assert_term},
     [{var,{1037,17},'Src'},{var,{1037,22},'Vst'}]},
    {debug_line,1038,449},
    {call,
     {1038,5},
     {atom,{1038,5},branch},
     [{integer,{1038,13},0},
      {var,{1038,30},'Vst'},
      {block,0,
       [{debug_line,1039,450},
        {'fun',
         {1039,12},
         {clauses,
          [{clause,
            {1039,15},
            [{var,{1039,16},'SuccVst0'}],
            [],
            [{debug_line,1040,451},
             {match,
              {1040,20},
              {var,{1040,20},'SuccVst'},
              {call,
               {1040,30},
               {atom,{1040,30},update_type},
               [{block,0,[{'fun',{1040,42},{function,meet,2}}]},
                {block,0,
                 [{tuple,
                   {1040,54},
                   [{atom,{1040,54},t_number},{atom,{1040,54},any}]}]},
                {var,{1040,67},'Src'},
                {var,{1040,72},'SuccVst0'}]}},
             {debug_line,1041,452},
             {call,
              {1041,20},
              {atom,{1041,20},set_freg},
              [{var,{1041,29},'Dst'},{var,{1041,34},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {1048,1},
   [{tuple,
     {1048,4},
     [{atom,{1048,5},func_info},
      {tuple,{1048,16},[{atom,{1048,17},atom},{var,{1048,23},'_Mod'}]},
      {tuple,{1048,30},[{atom,{1048,31},atom},{var,{1048,37},'_Name'}]},
      {var,{1048,45},'Arity'}]},
    {var,{1048,53},'Vst'}],
   [],
   [{debug_line,1049,453},
    {match,
     {1049,5},
     {tuple,
      {1049,5},
      [{atom,{1049,5},vst},
       {tuple,
        {1049,18},
        [{atom,{1049,18},st},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,27},'NumY'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'},
         {var,{1049,18},'_'}]},
       {var,{1049,5},'_'},
       {var,{1049,5},'_'},
       {var,{1049,5},'_'},
       {var,{1049,5},'_'},
       {var,{1049,5},'_'}]},
     {var,{1049,36},'Vst'}},
    {debug_line,1050,454},
    {'if',
     {1050,5},
     [{clause,
       {1051,10},
       [],
       [[{op,{1051,15},'=:=',{var,{1051,10},'NumY'},{atom,{1051,19},none}}]],
       [{debug_line,1052,455},
        {call,
         {1052,13},
         {atom,{1052,13},verify_live},
         [{var,{1052,25},'Arity'},{var,{1052,32},'Vst'}]},
        {debug_line,1053,456},
        {call,
         {1053,13},
         {atom,{1053,13},verify_call_args},
         [{atom,{1053,30},func_info},
          {var,{1053,41},'Arity'},
          {var,{1053,48},'Vst'}]},
        {debug_line,1055,457},
        {call,
         {1055,13},
         {atom,{1055,13},branch},
         [{integer,{1055,21},0},
          {var,{1055,38},'Vst'},
          {block,0,[{'fun',{1055,43},{function,kill_state,1}}]}]}]},
      {clause,
       {1056,10},
       [],
       [[{op,{1056,15},'=/=',{var,{1056,10},'NumY'},{atom,{1056,19},none}}]],
       [{debug_line,1057,458},
        {call,
         {1057,13},
         {atom,{1057,13},error},
         [{block,0,
           [{tuple,
             {1057,19},
             [{atom,{1057,20},allocated},{var,{1057,31},'NumY'}]}]}]}]}]}]},
  {clause,
   {1059,1},
   [{tuple,{1059,4},[{atom,{1059,5},badmatch},{var,{1059,14},'Src'}]},
    {var,{1059,20},'Vst'}],
   [],
   [{debug_line,1060,459},
    {call,
     {1060,5},
     {atom,{1060,5},assert_durable_term},
     [{var,{1060,25},'Src'},{var,{1060,30},'Vst'}]},
    {debug_line,1061,460},
    {call,
     {1061,5},
     {atom,{1061,5},branch},
     [{integer,{1061,13},0},
      {var,{1061,30},'Vst'},
      {block,0,[{'fun',{1061,35},{function,kill_state,1}}]}]}]},
  {clause,
   {1062,1},
   [{tuple,{1062,4},[{atom,{1062,5},case_end},{var,{1062,14},'Src'}]},
    {var,{1062,20},'Vst'}],
   [],
   [{debug_line,1063,461},
    {call,
     {1063,5},
     {atom,{1063,5},assert_durable_term},
     [{var,{1063,25},'Src'},{var,{1063,30},'Vst'}]},
    {debug_line,1064,462},
    {call,
     {1064,5},
     {atom,{1064,5},branch},
     [{integer,{1064,13},0},
      {var,{1064,30},'Vst'},
      {block,0,[{'fun',{1064,35},{function,kill_state,1}}]}]}]},
  {clause,
   {1065,1},
   [{atom,{1065,4},if_end},{var,{1065,12},'Vst'}],
   [],
   [{debug_line,1066,463},
    {call,
     {1066,5},
     {atom,{1066,5},branch},
     [{integer,{1066,13},0},
      {var,{1066,30},'Vst'},
      {block,0,[{'fun',{1066,35},{function,kill_state,1}}]}]}]},
  {clause,
   {1067,1},
   [{tuple,{1067,4},[{atom,{1067,5},try_case_end},{var,{1067,18},'Src'}]},
    {var,{1067,24},'Vst'}],
   [],
   [{debug_line,1068,464},
    {call,
     {1068,5},
     {atom,{1068,5},assert_durable_term},
     [{var,{1068,25},'Src'},{var,{1068,30},'Vst'}]},
    {debug_line,1069,465},
    {call,
     {1069,5},
     {atom,{1069,5},branch},
     [{integer,{1069,13},0},
      {var,{1069,30},'Vst'},
      {block,0,[{'fun',{1069,35},{function,kill_state,1}}]}]}]},
  {clause,
   {1070,1},
   [{tuple,{1070,4},[{atom,{1070,5},badrecord},{var,{1070,15},'Src'}]},
    {var,{1070,21},'Vst'}],
   [],
   [{debug_line,1071,466},
    {call,
     {1071,5},
     {atom,{1071,5},assert_durable_term},
     [{var,{1071,25},'Src'},{var,{1071,30},'Vst'}]},
    {debug_line,1072,467},
    {call,
     {1072,5},
     {atom,{1072,5},branch},
     [{integer,{1072,13},0},
      {var,{1072,30},'Vst'},
      {block,0,[{'fun',{1072,35},{function,kill_state,1}}]}]}]},
  {clause,
   {1073,1},
   [{match,{1073,4},{atom,{1073,4},raw_raise},{var,{1073,14},'I'}},
    {var,{1073,17},'Vst0'}],
   [],
   [{debug_line,1074,468},
    {call,
     {1074,5},
     {atom,{1074,5},validate_body_call},
     [{var,{1074,24},'I'},{integer,{1074,27},3},{var,{1074,30},'Vst0'}]}]},
  {clause,
   {1080,1},
   [{match,{1080,4},{atom,{1080,4},bs_init_writable},{var,{1080,21},'I'}},
    {var,{1080,24},'Vst'}],
   [],
   [{debug_line,1081,469},
    {call,
     {1081,5},
     {atom,{1081,5},validate_body_call},
     [{var,{1081,24},'I'},{integer,{1081,27},1},{var,{1081,30},'Vst'}]}]},
  {clause,
   {1082,1},
   [{tuple,
     {1082,4},
     [{atom,{1082,5},bs_create_bin},
      {tuple,{1082,19},[{atom,{1082,20},f},{var,{1082,22},'Fail'}]},
      {var,{1082,28},'Heap'},
      {var,{1082,33},'Live'},
      {var,{1082,38},'Unit'},
      {var,{1082,43},'Dst'},
      {tuple,{1082,47},[{atom,{1082,48},list},{var,{1082,53},'List0'}]}]},
    {var,{1082,62},'Vst0'}],
   [],
   [{debug_line,1083,470},
    {call,
     {1083,5},
     {atom,{1083,5},verify_live},
     [{var,{1083,17},'Live'},{var,{1083,23},'Vst0'}]},
    {debug_line,1084,471},
    {call,{1084,5},{atom,{1084,5},verify_y_init},[{var,{1084,19},'Vst0'}]},
    {debug_line,1085,472},
    {match,
     {1085,5},
     {var,{1085,5},'List'},
     {lc,
      {1085,12},
      {block,0,
       [{call,
         {1085,13},
         {atom,{1085,13},unpack_typed_arg},
         [{var,{1085,30},'Arg'},{var,{1085,35},'Vst0'}]}]},
      [{block,0,[{atom,{1085,51},true}]},
       {generate,{1085,48},{var,{1085,44},'Arg'},{var,{1085,51},'List0'}}]}},
    {debug_line,1086,473},
    {call,
     {1086,5},
     {atom,{1086,5},verify_create_bin_list},
     [{var,{1086,28},'List'},{var,{1086,34},'Vst0'}]},
    {debug_line,1087,474},
    {match,
     {1087,5},
     {var,{1087,5},'Vst'},
     {call,
      {1087,11},
      {atom,{1087,11},prune_x_regs},
      [{var,{1087,24},'Live'},{var,{1087,30},'Vst0'}]}},
    {debug_line,1088,475},
    {call,
     {1088,5},
     {atom,{1088,5},branch},
     [{var,{1088,12},'Fail'},
      {var,{1088,18},'Vst'},
      {block,0,
       [{debug_line,1089,476},
        {'fun',
         {1089,12},
         {clauses,
          [{clause,
            {1089,15},
            [{var,{1089,16},'FailVst0'}],
            [],
            [{debug_line,1090,477},
             {call,
              {1090,20},
              {atom,{1090,20},heap_alloc},
              [{integer,{1090,31},0},{var,{1090,34},'FailVst0'}]}]}]}}]},
      {block,0,
       [{debug_line,1092,478},
        {'fun',
         {1092,12},
         {clauses,
          [{clause,
            {1092,15},
            [{var,{1092,16},'SuccVst0'}],
            [],
            [{debug_line,1093,479},
             {match,
              {1093,20},
              {var,{1093,20},'SuccVst1'},
              {call,
               {1093,31},
               {atom,{1093,31},update_create_bin_list},
               [{var,{1093,54},'List'},{var,{1093,60},'SuccVst0'}]}},
             {debug_line,1094,480},
             {match,
              {1094,20},
              {var,{1094,20},'SuccVst'},
              {call,
               {1094,30},
               {atom,{1094,30},heap_alloc},
               [{var,{1094,41},'Heap'},{var,{1094,47},'SuccVst1'}]}},
             {debug_line,1095,481},
             {call,
              {1095,20},
              {atom,{1095,20},create_term},
              [{block,0,
                [{tuple,
                  {1095,32},
                  [{atom,{1095,32},t_bitstring},
                   {var,{1095,55},'Unit'},
                   {atom,{1095,32},false}]}]},
               {atom,{1095,62},bs_create_bin},
               {nil,{1095,77}},
               {var,{1095,81},'Dst'},
               {var,{1096,32},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {1099,1},
   [{var,{1099,4},'_'},{var,{1099,7},'_'}],
   [],
   [{debug_line,1100,482},
    {call,
     {1100,5},
     {atom,{1100,5},error},
     [{atom,{1100,11},unknown_instruction}]}]}]}.
{function,
 {1102,1},
 infer_relop_types,4,
 [{clause,
   {1102,1},
   [{var,{1102,1},'_'},
    {var,{1102,1},'_'},
    {var,{1102,1},'_'},
    {var,{1102,1},'_'}],
   [[{call,
      {1102,1},
      {remote,{1102,1},{atom,{1102,1},fake},{atom,{1102,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1102,483},{atom,{1102,1},ignore}]},
  {clause,
   {1102,1},
   [{var,{1102,19},'Op'},
    {var,{1102,23},'Args'},
    {var,{1102,29},'Types'},
    {var,{1102,36},'Vst'}],
   [],
   [{debug_line,1103,484},
    {'case',
     {1103,5},
     {call,
      {1103,10},
      {atom,{1103,10},infer_relop_types},
      [{var,{1103,28},'Op'},{var,{1103,32},'Types'}]},
     [{clause,
       {1104,9},
       [{nil,{1104,9}}],
       [],
       [{debug_line,1105,485},{var,{1105,13},'Vst'}]},
      {clause,
       {1106,9},
       [{var,{1106,9},'Infer'}],
       [],
       [{debug_line,1107,486},
        {match,
         {1107,13},
         {var,{1107,13},'Zipped'},
         {call,
          {1107,22},
          {remote,{1107,22},{atom,{1107,22},lists},{atom,{1107,22},zip}},
          [{var,{1107,26},'Args'},{var,{1107,32},'Infer'}]}},
        {debug_line,1108,487},
        {call,
         {1108,13},
         {remote,{1108,13},{atom,{1108,13},lists},{atom,{1108,13},foldl}},
         [{block,0,
           [{'fun',
             {1108,19},
             {clauses,
              [{clause,
                {1108,22},
                [{tuple,{1108,23},[{var,{1108,24},'V'},{var,{1108,26},'T'}]},
                 {var,{1108,30},'Acc'}],
                [],
                [{debug_line,1109,488},
                 {call,
                  {1109,27},
                  {atom,{1109,27},update_type},
                  [{block,0,[{'fun',{1109,39},{function,meet,2}}]},
                   {var,{1109,51},'T'},
                   {var,{1109,54},'V'},
                   {var,{1109,57},'Acc'}]}]}]}}]},
          {var,{1110,24},'Vst'},
          {var,{1110,29},'Zipped'}]}]}]}]}]}.
{function,
 {1113,1},
 infer_relop_types,2,
 [{clause,
   {1113,1},
   [{var,{1113,1},'_'},{var,{1113,1},'_'}],
   [[{call,
      {1113,1},
      {remote,{1113,1},{atom,{1113,1},fake},{atom,{1113,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1113,489},{atom,{1113,1},ignore}]},
  {clause,
   {1113,1},
   [{var,{1113,19},'Op'},
    {cons,
     {1113,23},
     {tuple,{1113,24},[{atom,{1113,24},t_integer},{var,{1113,44},'R1'}]},
     {cons,
      {1114,24},
      {tuple,{1114,24},[{atom,{1114,24},t_integer},{var,{1114,44},'R2'}]},
      {nil,{1114,47}}}}],
   [],
   [{debug_line,1115,490},
    {'case',
     {1115,5},
     {call,
      {1115,10},
      {remote,
       {1115,21},
       {atom,{1115,10},beam_bounds},
       {atom,{1115,22},infer_relop_types}},
      [{var,{1115,40},'Op'},{var,{1115,44},'R1'},{var,{1115,48},'R2'}]},
     [{clause,
       {1116,9},
       [{tuple,{1116,9},[{var,{1116,10},'NewR1'},{var,{1116,16},'NewR2'}]}],
       [],
       [{debug_line,1117,491},
        {match,
         {1117,13},
         {var,{1117,13},'NewType1'},
         {tuple,
          {1117,24},
          [{atom,{1117,24},t_integer},{var,{1117,44},'NewR1'}]}},
        {debug_line,1118,492},
        {match,
         {1118,13},
         {var,{1118,13},'NewType2'},
         {tuple,
          {1118,24},
          [{atom,{1118,24},t_integer},{var,{1118,44},'NewR2'}]}},
        {debug_line,1119,493},
        {cons,
         {1119,13},
         {var,{1119,14},'NewType1'},
         {cons,{1119,23},{var,{1119,23},'NewType2'},{nil,{1119,31}}}}]},
      {clause,
       {1120,9},
       [{atom,{1120,9},none}],
       [],
       [{debug_line,1121,494},
        {cons,
         {1121,13},
         {atom,{1121,14},none},
         {cons,{1121,20},{atom,{1121,20},none},{nil,{1121,24}}}}]},
      {clause,
       {1122,9},
       [{atom,{1122,9},any}],
       [],
       [{debug_line,1123,495},{nil,{1123,13}}]}]}]},
  {clause,
   {1125,1},
   [{var,{1125,19},'Op0'},
    {cons,
     {1125,24},
     {var,{1125,25},'Type1'},
     {cons,{1125,31},{var,{1125,31},'Type2'},{nil,{1125,36}}}}],
   [],
   [{debug_line,1126,496},
    {match,
     {1126,5},
     {var,{1126,5},'Op'},
     {'case',
      {1126,10},
      {var,{1126,15},'Op0'},
      [{clause,
        {1127,14},
        [{atom,{1127,14},'<'}],
        [],
        [{debug_line,1127,497},{atom,{1127,21},'=<'}]},
       {clause,
        {1128,14},
        [{atom,{1128,14},'>'}],
        [],
        [{debug_line,1128,498},{atom,{1128,21},'>='}]},
       {clause,
        {1129,14},
        [{var,{1129,14},'_'}],
        [],
        [{debug_line,1129,499},{var,{1129,19},'Op0'}]}]}},
    {debug_line,1131,500},
    {'case',
     {1131,5},
     {tuple,
      {1131,10},
      [{call,
        {1131,11},
        {atom,{1131,11},infer_get_range},
        [{var,{1131,27},'Type1'}]},
       {call,
        {1131,34},
        {atom,{1131,34},infer_get_range},
        [{var,{1131,50},'Type2'}]}]},
     [{clause,
       {1132,9},
       [{match,
         {1132,9},
         {tuple,{1132,9},[{atom,{1132,10},none},{var,{1132,15},'_'}]},
         {var,{1132,18},'R'}}],
       [],
       [{debug_line,1133,501},
        {cons,
         {1133,13},
         {call,
          {1133,14},
          {atom,{1133,14},infer_relop_any},
          [{var,{1133,30},'Op'},{var,{1133,34},'R'},{var,{1133,37},'Type1'}]},
         {cons,{1133,44},{var,{1133,44},'Type2'},{nil,{1133,49}}}}]},
      {clause,
       {1134,9},
       [{match,
         {1134,9},
         {tuple,{1134,9},[{var,{1134,10},'_'},{atom,{1134,12},none}]},
         {var,{1134,18},'R'}}],
       [],
       [{debug_line,1135,502},
        {cons,
         {1135,13},
         {var,{1135,14},'Type1'},
         {cons,
          {1135,20},
          {call,
           {1135,20},
           {atom,{1135,20},infer_relop_any},
           [{var,{1135,36},'Op'},{var,{1135,40},'R'},{var,{1135,43},'Type2'}]},
          {nil,{1135,49}}}}]},
      {clause,
       {1136,9},
       [{tuple,{1136,9},[{var,{1136,10},'R1'},{var,{1136,13},'R2'}]}],
       [],
       [{debug_line,1137,503},
        {'case',
         {1137,13},
         {call,
          {1137,18},
          {remote,
           {1137,29},
           {atom,{1137,18},beam_bounds},
           {atom,{1137,30},infer_relop_types}},
          [{var,{1137,48},'Op'},{var,{1137,52},'R1'},{var,{1137,56},'R2'}]},
         [{clause,
           {1138,17},
           [{tuple,
             {1138,17},
             [{var,{1138,18},'NewR1'},{var,{1138,24},'NewR2'}]}],
           [],
           [{debug_line,1139,504},
            {match,
             {1139,21},
             {var,{1139,21},'NewType1'},
             {call,
              {1139,32},
              {atom,{1139,32},meet},
              [{block,0,
                [{tuple,
                  {1139,37},
                  [{atom,{1139,37},t_number},{var,{1139,56},'NewR1'}]}]},
               {var,{1139,64},'Type1'}]}},
            {debug_line,1140,505},
            {match,
             {1140,21},
             {var,{1140,21},'NewType2'},
             {call,
              {1140,32},
              {atom,{1140,32},meet},
              [{block,0,
                [{tuple,
                  {1140,37},
                  [{atom,{1140,37},t_number},{var,{1140,56},'NewR2'}]}]},
               {var,{1140,64},'Type2'}]}},
            {debug_line,1141,506},
            {cons,
             {1141,21},
             {var,{1141,22},'NewType1'},
             {cons,{1141,31},{var,{1141,31},'NewType2'},{nil,{1141,39}}}}]},
          {clause,
           {1142,17},
           [{atom,{1142,17},none}],
           [],
           [{debug_line,1143,507},
            {cons,
             {1143,21},
             {atom,{1143,22},none},
             {cons,{1143,28},{atom,{1143,28},none},{nil,{1143,32}}}}]},
          {clause,
           {1144,17},
           [{atom,{1144,17},any}],
           [],
           [{debug_line,1145,508},{nil,{1145,21}}]}]}]}]}]},
  {clause,
   {1148,1},
   [{var,{1148,19},'_'},{var,{1148,22},'_'}],
   [],
   [{debug_line,1149,509},{nil,{1149,5}}]}]}.
{function,
    {1151,1},
    infer_relop_any,3,
    [{clause,
         {1151,1},
         [{var,{1151,1},'_'},{var,{1151,1},'_'},{var,{1151,1},'_'}],
         [[{call,
               {1151,1},
               {remote,
                   {1151,1},
                   {atom,{1151,1},fake},
                   {atom,{1151,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1151,510},{atom,{1151,1},ignore}]},
     {clause,
         {1151,1},
         [{atom,{1151,17},'=<'},
          {tuple,{1151,23},[{atom,{1151,24},none},{atom,{1151,29},any}]},
          {var,{1151,35},'Type'}],
         [],
         [{debug_line,1152,511},
          {match,
              {1152,5},
              {var,{1152,5},'N'},
              {tuple,{1152,9},[{atom,{1152,9},t_number},{atom,{1152,9},any}]}},
          {debug_line,1153,512},
          {call,
              {1153,5},
              {atom,{1153,5},meet},
              [{var,{1153,10},'N'},{var,{1153,13},'Type'}]}]},
     {clause,
         {1154,1},
         [{atom,{1154,17},'=<'},
          {tuple,
              {1154,23},
              [{atom,{1154,24},none},
               {tuple,{1154,29},[{var,{1154,30},'_'},{var,{1154,32},'Max'}]}]},
          {var,{1154,39},'Type'}],
         [],
         [{debug_line,1155,513},
          {match,
              {1155,5},
              {var,{1155,5},'N'},
              {call,
                  {1155,9},
                  {atom,{1155,9},infer_make_number},
                  [{block,0,
                       [{tuple,
                            {1155,27},
                            [{atom,{1155,28},'-inf'},
                             {var,{1155,35},'Max'}]}]}]}},
          {debug_line,1156,514},
          {call,
              {1156,5},
              {atom,{1156,5},meet},
              [{var,{1156,10},'N'},{var,{1156,13},'Type'}]}]},
     {clause,
         {1157,1},
         [{atom,{1157,17},'>='},
          {tuple,{1157,23},[{atom,{1157,24},any},{atom,{1157,28},none}]},
          {var,{1157,35},'Type'}],
         [],
         [{debug_line,1158,515},
          {match,
              {1158,5},
              {var,{1158,5},'N'},
              {tuple,{1158,9},[{atom,{1158,9},t_number},{atom,{1158,9},any}]}},
          {debug_line,1159,516},
          {call,
              {1159,5},
              {atom,{1159,5},meet},
              [{var,{1159,10},'N'},{var,{1159,13},'Type'}]}]},
     {clause,
         {1160,1},
         [{atom,{1160,17},'>='},
          {tuple,
              {1160,23},
              [{tuple,{1160,24},[{var,{1160,25},'_'},{var,{1160,27},'Max'}]},
               {atom,{1160,32},none}]},
          {var,{1160,39},'Type'}],
         [],
         [{debug_line,1161,517},
          {match,
              {1161,5},
              {var,{1161,5},'N'},
              {call,
                  {1161,9},
                  {atom,{1161,9},infer_make_number},
                  [{block,0,
                       [{tuple,
                            {1161,27},
                            [{atom,{1161,28},'-inf'},
                             {var,{1161,35},'Max'}]}]}]}},
          {debug_line,1162,518},
          {call,
              {1162,5},
              {atom,{1162,5},meet},
              [{var,{1162,10},'N'},{var,{1162,13},'Type'}]}]},
     {clause,
         {1163,1},
         [{atom,{1163,17},'>='},
          {tuple,
              {1163,23},
              [{atom,{1163,24},none},
               {tuple,{1163,29},[{var,{1163,30},'Min'},{var,{1163,34},'_'}]}]},
          {var,{1163,39},'Type'}],
         [[{call,
               {1163,50},
               {remote,
                   {1163,50},
                   {atom,{1163,50},erlang},
                   {atom,{1163,50},is_integer}},
               [{var,{1163,61},'Min'}]}]],
         [{debug_line,1164,519},
          {match,
              {1164,5},
              {var,{1164,5},'N'},
              {tuple,
                  {1164,9},
                  [{atom,{1164,9},t_number},
                   {tuple,
                       {1164,28},
                       [{atom,{1164,29},'-inf'},{var,{1164,36},'Min'}]}]}},
          {debug_line,1165,520},
          {call,
              {1165,5},
              {atom,{1165,5},meet},
              [{block,0,
                   [{call,
                        {1165,10},
                        {atom,{1165,10},subtract},
                        [{atom,{1165,19},any},{var,{1165,24},'N'}]}]},
               {var,{1165,28},'Type'}]}]},
     {clause,
         {1166,1},
         [{atom,{1166,17},'=<'},
          {tuple,
              {1166,23},
              [{tuple,{1166,24},[{var,{1166,25},'Min'},{var,{1166,29},'_'}]},
               {atom,{1166,32},none}]},
          {var,{1166,39},'Type'}],
         [[{call,
               {1166,50},
               {remote,
                   {1166,50},
                   {atom,{1166,50},erlang},
                   {atom,{1166,50},is_integer}},
               [{var,{1166,61},'Min'}]}]],
         [{debug_line,1167,521},
          {match,
              {1167,5},
              {var,{1167,5},'N'},
              {tuple,
                  {1167,9},
                  [{atom,{1167,9},t_number},
                   {tuple,
                       {1167,28},
                       [{atom,{1167,29},'-inf'},{var,{1167,36},'Min'}]}]}},
          {debug_line,1168,522},
          {call,
              {1168,5},
              {atom,{1168,5},meet},
              [{block,0,
                   [{call,
                        {1168,10},
                        {atom,{1168,10},subtract},
                        [{atom,{1168,19},any},{var,{1168,24},'N'}]}]},
               {var,{1168,28},'Type'}]}]},
     {clause,
         {1169,1},
         [{var,{1169,17},'_'},{var,{1169,20},'_'},{var,{1169,23},'Type'}],
         [],
         [{debug_line,1170,523},{var,{1170,5},'Type'}]}]}.
{function,{1172,1},
          infer_make_number,1,
          [{clause,{1172,1},
                   [{var,{1172,1},'_'}],
                   [[{call,{1172,1},
                           {remote,{1172,1},
                                   {atom,{1172,1},fake},
                                   {atom,{1172,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1172,524},{atom,{1172,1},ignore}]},
           {clause,{1172,1},
                   [{tuple,{1172,19},
                           [{atom,{1172,20},'-inf'},{atom,{1172,27},'+inf'}]}],
                   [],
                   [{debug_line,1173,525},
                    {tuple,{1173,5},
                           [{atom,{1173,5},t_number},{atom,{1173,5},any}]}]},
           {clause,{1174,1},
                   [{match,{1174,19},
                           {tuple,{1174,19},
                                  [{var,{1174,20},'_'},{var,{1174,22},'_'}]},
                           {var,{1174,25},'R'}}],
                   [],
                   [{debug_line,1175,526},
                    {tuple,{1175,5},
                           [{atom,{1175,5},t_number},{var,{1175,24},'R'}]}]}]}.
{function,{1177,1},
          infer_get_range,1,
          [{clause,{1177,1},
                   [{var,{1177,1},'_'}],
                   [[{call,{1177,1},
                           {remote,{1177,1},
                                   {atom,{1177,1},fake},
                                   {atom,{1177,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1177,527},{atom,{1177,1},ignore}]},
           {clause,{1177,1},
                   [{tuple,{1177,17},
                           [{atom,{1177,17},t_integer},{var,{1177,37},'R'}]}],
                   [],
                   [{debug_line,1177,528},{var,{1177,44},'R'}]},
           {clause,{1178,1},
                   [{tuple,{1178,17},
                           [{atom,{1178,17},t_number},{var,{1178,36},'R'}]}],
                   [],
                   [{debug_line,1178,529},{var,{1178,43},'R'}]},
           {clause,{1179,1},
                   [{var,{1179,17},'_'}],
                   [],
                   [{debug_line,1179,530},{atom,{1179,23},none}]}]}.
{function,
    {1181,1},
    validate_var_info,3,
    [{clause,
         {1181,1},
         [{var,{1181,1},'_'},{var,{1181,1},'_'},{var,{1181,1},'_'}],
         [[{call,
               {1181,1},
               {remote,
                   {1181,1},
                   {atom,{1181,1},fake},
                   {atom,{1181,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1181,531},{atom,{1181,1},ignore}]},
     {clause,
         {1181,1},
         [{cons,
              {1181,19},
              {tuple,
                  {1181,20},
                  [{atom,{1181,21},fun_type},{var,{1181,31},'Type'}]},
              {var,{1181,39},'Info'}},
          {var,{1181,46},'Reg'},
          {var,{1181,51},'Vst0'}],
         [],
         [{debug_line,1184,532},
          {match,
              {1184,5},
              {var,{1184,5},'Vst'},
              {call,
                  {1184,11},
                  {atom,{1184,11},update_type},
                  [{block,0,[{'fun',{1184,23},{function,meet,2}}]},
                   {block,0,
                       [{tuple,
                            {1184,35},
                            [{atom,{1184,35},t_fun},
                             {atom,{1184,35},any},
                             {atom,{1184,35},any},
                             {var,{1184,47},'Type'}]}]},
                   {var,{1184,54},'Reg'},
                   {var,{1184,59},'Vst0'}]}},
          {debug_line,1185,533},
          {call,
              {1185,5},
              {atom,{1185,5},validate_var_info},
              [{var,{1185,23},'Info'},
               {var,{1185,29},'Reg'},
               {var,{1185,34},'Vst'}]}]},
     {clause,
         {1186,1},
         [{cons,
              {1186,19},
              {tuple,{1186,20},[{atom,{1186,21},type},{atom,{1186,27},none}]},
              {var,{1186,35},'_Info'}},
          {var,{1186,43},'_Reg'},
          {var,{1186,49},'Vst'}],
         [],
         [{debug_line,1188,534},
          {call,{1188,5},{atom,{1188,5},kill_state},[{var,{1188,16},'Vst'}]}]},
     {clause,
         {1189,1},
         [{cons,
              {1189,19},
              {tuple,{1189,20},[{atom,{1189,21},type},{var,{1189,27},'Type'}]},
              {var,{1189,35},'Info'}},
          {var,{1189,42},'Reg'},
          {var,{1189,47},'Vst0'}],
         [],
         [{debug_line,1193,535},
          {match,
              {1193,5},
              {var,{1193,5},'Vst'},
              {call,
                  {1193,11},
                  {atom,{1193,11},update_type},
                  [{block,0,[{'fun',{1193,23},{function,meet,2}}]},
                   {var,{1193,35},'Type'},
                   {var,{1193,41},'Reg'},
                   {var,{1193,46},'Vst0'}]}},
          {debug_line,1194,536},
          {call,
              {1194,5},
              {atom,{1194,5},validate_var_info},
              [{var,{1194,23},'Info'},
               {var,{1194,29},'Reg'},
               {var,{1194,34},'Vst'}]}]},
     {clause,
         {1195,1},
         [{cons,{1195,19},{var,{1195,20},'_'},{var,{1195,24},'Info'}},
          {var,{1195,31},'Reg'},
          {var,{1195,36},'Vst'}],
         [],
         [{debug_line,1196,537},
          {call,
              {1196,5},
              {atom,{1196,5},validate_var_info},
              [{var,{1196,23},'Info'},
               {var,{1196,29},'Reg'},
               {var,{1196,34},'Vst'}]}]},
     {clause,
         {1197,1},
         [{nil,{1197,19}},{var,{1197,23},'_Reg'},{var,{1197,29},'Vst'}],
         [],
         [{debug_line,1198,538},{var,{1198,5},'Vst'}]}]}.
{function,
    {1203,1},
    validate_tail_call,4,
    [{clause,
         {1203,1},
         [{var,{1203,1},'_'},
          {var,{1203,1},'_'},
          {var,{1203,1},'_'},
          {var,{1203,1},'_'}],
         [[{call,
               {1203,1},
               {remote,
                   {1203,1},
                   {atom,{1203,1},fake},
                   {atom,{1203,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1203,539},{atom,{1203,1},ignore}]},
     {clause,
         {1203,1},
         [{var,{1203,20},'Deallocate'},
          {var,{1203,32},'Func'},
          {var,{1203,38},'Live'},
          {match,
              {1203,44},
              {tuple,
                  {1203,44},
                  [{atom,{1203,44},vst},
                   {tuple,
                       {1203,57},
                       [{atom,{1203,57},st},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,66},'NumY'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'},
                        {var,{1203,57},'_'}]},
                   {var,{1203,44},'_'},
                   {var,{1203,44},'_'},
                   {var,{1203,44},'_'},
                   {var,{1203,44},'_'},
                   {var,{1203,44},'_'}]},
              {var,{1203,73},'Vst0'}}],
         [],
         [{debug_line,1204,540},
          {call,
              {1204,5},
              {atom,{1204,5},verify_y_init},
              [{var,{1204,19},'Vst0'}]},
          {debug_line,1205,541},
          {call,
              {1205,5},
              {atom,{1205,5},verify_live},
              [{var,{1205,17},'Live'},{var,{1205,23},'Vst0'}]},
          {debug_line,1206,542},
          {call,
              {1206,5},
              {atom,{1206,5},verify_call_args},
              [{var,{1206,22},'Func'},
               {var,{1206,28},'Live'},
               {var,{1206,34},'Vst0'}]},
          {debug_line,1208,543},
          {'case',
              {1208,5},
              {call,
                  {1208,10},
                  {atom,{1208,10},will_call_succeed},
                  [{var,{1208,28},'Func'},
                   {var,{1208,34},'Live'},
                   {var,{1208,40},'Vst0'}]},
              [{clause,
                   {1209,9},
                   [{atom,{1209,9},yes}],
                   [[{op,{1209,29},
                         '=:=',
                         {var,{1209,18},'Deallocate'},
                         {var,{1209,33},'NumY'}}]],
                   [{debug_line,1211,544},
                    {match,
                        {1211,13},
                        {var,{1211,13},'Vst'},
                        {call,
                            {1211,19},
                            {atom,{1211,19},deallocate},
                            [{var,{1211,30},'Vst0'}]}},
                    {debug_line,1212,545},
                    {call,
                        {1212,13},
                        {atom,{1212,13},verify_return},
                        [{var,{1212,27},'Vst'}]}]},
               {clause,
                   [{text,"'maybe'"},{location,{1213,9}}],
                   [{atom,[{text,"'maybe'"},{location,{1213,9}}],'maybe'}],
                   [[{op,{1213,33},
                         '=:=',
                         {var,{1213,22},'Deallocate'},
                         {var,{1213,37},'NumY'}}]],
                   [{debug_line,1215,546},
                    {match,
                        {1215,13},
                        {var,{1215,13},'Vst'},
                        {call,
                            {1215,19},
                            {atom,{1215,19},deallocate},
                            [{var,{1215,30},'Vst0'}]}},
                    {debug_line,1216,547},
                    {call,
                        {1216,13},
                        {atom,{1216,13},branch},
                        [{integer,{1216,21},0},
                         {var,{1216,38},'Vst'},
                         {block,0,
                             [{'fun',
                                  {1216,43},
                                  {function,verify_return,1}}]}]}]},
               {clause,
                   {1217,9},
                   [{atom,{1217,9},no}],
                   [],
                   [{debug_line,1220,548},
                    {call,
                        {1220,13},
                        {atom,{1220,13},branch},
                        [{integer,{1220,21},0},
                         {var,{1220,38},'Vst0'},
                         {block,0,
                             [{'fun',{1220,44},{function,kill_state,1}}]}]}]},
               {clause,
                   {1221,9},
                   [{var,{1221,9},'_'}],
                   [[{op,{1221,27},
                         '=/=',
                         {var,{1221,16},'Deallocate'},
                         {var,{1221,31},'NumY'}}]],
                   [{debug_line,1222,549},
                    {call,
                        {1222,13},
                        {atom,{1222,13},error},
                        [{block,0,
                             [{tuple,
                                  {1222,19},
                                  [{atom,{1222,20},allocated},
                                   {var,{1222,31},'NumY'}]}]}]}]}]}]}]}.
{function,
 {1228,1},
 validate_body_call,3,
 [{clause,
   {1228,1},
   [{var,{1228,1},'_'},{var,{1228,1},'_'},{var,{1228,1},'_'}],
   [[{call,
      {1228,1},
      {remote,{1228,1},{atom,{1228,1},fake},{atom,{1228,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1228,550},{atom,{1228,1},ignore}]},
  {clause,
   {1228,1},
   [{var,{1228,20},'Func'},
    {var,{1228,26},'Live'},
    {match,
     {1229,20},
     {tuple,
      {1229,20},
      [{atom,{1229,20},vst},
       {tuple,
        {1229,33},
        [{atom,{1229,33},st},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,42},'NumY'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'},
         {var,{1229,33},'_'}]},
       {var,{1229,20},'_'},
       {var,{1229,20},'_'},
       {var,{1229,20},'_'},
       {var,{1229,20},'_'},
       {var,{1229,20},'_'}]},
     {var,{1229,49},'Vst'}}],
   [[{call,
      {1229,59},
      {remote,{1229,59},{atom,{1229,59},erlang},{atom,{1229,59},is_integer}},
      [{var,{1229,70},'NumY'}]}]],
   [{debug_line,1230,551},
    {call,{1230,5},{atom,{1230,5},verify_y_init},[{var,{1230,19},'Vst'}]},
    {debug_line,1231,552},
    {call,
     {1231,5},
     {atom,{1231,5},verify_live},
     [{var,{1231,17},'Live'},{var,{1231,23},'Vst'}]},
    {debug_line,1232,553},
    {call,
     {1232,5},
     {atom,{1232,5},verify_call_args},
     [{var,{1232,22},'Func'},{var,{1232,28},'Live'},{var,{1232,34},'Vst'}]},
    {debug_line,1234,554},
    {match,
     {1234,5},
     {var,{1234,5},'SuccFun'},
     {'fun',
      {1234,15},
      {clauses,
       [{clause,
         {1234,18},
         [{var,{1234,19},'SuccVst0'}],
         [],
         [{debug_line,1241,555},
          {match,
           {1241,23},
           {tuple,
            {1241,23},
            [{var,{1241,24},'RetType'},
             {var,{1241,33},'_'},
             {var,{1241,36},'_'}]},
           {call,
            {1241,41},
            {atom,{1241,41},call_types},
            [{var,{1241,52},'Func'},
             {var,{1241,58},'Live'},
             {var,{1241,64},'SuccVst0'}]}},
          {debug_line,1242,556},
          {match,
           {1242,23},
           {atom,{1242,23},true},
           {op,
            {1242,38},
            '=/=',
            {var,{1242,30},'RetType'},
            {atom,{1242,42},none}}},
          {debug_line,1244,557},
          {match,
           {1244,23},
           {var,{1244,23},'SuccVst'},
           {call,
            {1244,33},
            {atom,{1244,33},schedule_out},
            [{integer,{1244,46},0},{var,{1244,49},'SuccVst0'}]}},
          {debug_line,1246,558},
          {call,
           {1246,23},
           {atom,{1246,23},create_term},
           [{var,{1246,35},'RetType'},
            {atom,{1246,44},call},
            {nil,{1246,50}},
            {block,0,
             [{tuple,{1246,54},[{atom,{1246,55},x},{integer,{1246,57},0}]}]},
            {var,{1246,61},'SuccVst'}]}]}]}}},
    {debug_line,1249,559},
    {'case',
     {1249,5},
     {call,
      {1249,10},
      {atom,{1249,10},will_call_succeed},
      [{var,{1249,28},'Func'},{var,{1249,34},'Live'},{var,{1249,40},'Vst'}]},
     [{clause,
       {1250,9},
       [{atom,{1250,9},yes}],
       [],
       [{debug_line,1251,560},
        {call,{1251,13},{var,{1251,13},'SuccFun'},[{var,{1251,21},'Vst'}]}]},
      {clause,
       [{text,"'maybe'"},{location,{1252,9}}],
       [{atom,[{text,"'maybe'"},{location,{1252,9}}],'maybe'}],
       [],
       [{debug_line,1253,561},
        {call,
         {1253,13},
         {atom,{1253,13},branch},
         [{integer,{1253,21},0},
          {var,{1253,38},'Vst'},
          {var,{1253,43},'SuccFun'}]}]},
      {clause,
       {1254,9},
       [{atom,{1254,9},no}],
       [],
       [{debug_line,1255,562},
        {call,
         {1255,13},
         {atom,{1255,13},branch},
         [{integer,{1255,21},0},
          {var,{1255,38},'Vst'},
          {block,0,[{'fun',{1255,43},{function,kill_state,1}}]}]}]}]}]},
  {clause,
   {1257,1},
   [{var,{1257,20},'_'},
    {var,{1257,23},'_'},
    {tuple,
     {1257,26},
     [{atom,{1257,26},vst},
      {tuple,
       {1257,39},
       [{atom,{1257,39},st},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,48},'NumY'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'},
        {var,{1257,39},'_'}]},
      {var,{1257,26},'_'},
      {var,{1257,26},'_'},
      {var,{1257,26},'_'},
      {var,{1257,26},'_'},
      {var,{1257,26},'_'}]}],
   [],
   [{debug_line,1258,563},
    {call,
     {1258,5},
     {atom,{1258,5},error},
     [{block,0,
       [{tuple,
         {1258,11},
         [{atom,{1258,12},allocated},{var,{1258,23},'NumY'}]}]}]}]}]}.
{function,
 {1260,1},
 init_try_catch_branch,4,
 [{clause,
   {1260,1},
   [{var,{1260,1},'_'},
    {var,{1260,1},'_'},
    {var,{1260,1},'_'},
    {var,{1260,1},'_'}],
   [[{call,
      {1260,1},
      {remote,{1260,1},{atom,{1260,1},fake},{atom,{1260,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1260,564},{atom,{1260,1},ignore}]},
  {clause,
   {1260,1},
   [{var,{1260,23},'Kind'},
    {var,{1260,29},'Dst'},
    {var,{1260,34},'Fail'},
    {var,{1260,40},'Vst0'}],
   [],
   [{debug_line,1261,565},
    {call,
     {1261,5},
     {atom,{1261,5},assert_no_exception},
     [{var,{1261,25},'Fail'}]},
    {debug_line,1263,566},
    {match,
     {1263,5},
     {var,{1263,5},'Tag'},
     {tuple,
      {1263,11},
      [{var,{1263,12},'Kind'},
       {cons,{1263,18},{var,{1263,19},'Fail'},{nil,{1263,23}}}]}},
    {debug_line,1264,567},
    {match,
     {1264,5},
     {var,{1264,5},'Vst'},
     {call,
      {1264,11},
      {atom,{1264,11},create_tag},
      [{var,{1264,22},'Tag'},
       {atom,{1264,27},try_catch},
       {nil,{1264,40}},
       {var,{1264,44},'Dst'},
       {var,{1264,49},'Vst0'}]}},
    {debug_line,1266,568},
    {match,
     {1266,5},
     {tuple,
      {1266,5},
      [{atom,{1266,5},vst},
       {var,{1266,18},'St0'},
       {var,{1266,5},'_'},
       {var,{1266,5},'_'},
       {var,{1266,5},'_'},
       {var,{1266,5},'_'},
       {var,{1266,5},'_'}]},
     {var,{1266,25},'Vst'}},
    {debug_line,1267,569},
    {match,
     {1267,5},
     {tuple,
      {1267,5},
      [{atom,{1267,5},st},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,12},'Tags'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'},
       {var,{1267,5},'_'}]},
     {var,{1267,18},'St0'}},
    {debug_line,1268,570},
    {match,
     {1268,5},
     {var,{1268,5},'St'},
     {block,
      {1268,10},
      [{match,
        {1268,17},
        {var,{1268,17},rec5},
        {cons,{1268,20},{var,{1268,21},'Tag'},{var,{1268,25},'Tags'}}},
       {match,{1268,10},{var,{1268,10},rec6},{var,{1268,10},'St0'}},
       {'case',
        {1268,17},
        {var,{1268,10},rec6},
        [{clause,
          {1268,17},
          [{tuple,
            {1268,17},
            [{atom,{1268,17},st},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'},
             {var,{1268,17},'_'}]}],
          [],
          [{call,
            {1268,17},
            {remote,
             {1268,17},
             {atom,{1268,17},erlang},
             {atom,{1268,17},setelement}},
            [{integer,{1268,17},11},
             {var,{1268,10},rec6},
             {var,{1268,17},rec5}]}]},
         {clause,
          [{generated,true},{location,{1268,17}}],
          [{var,[{generated,true},{location,{1268,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1268,17}}],
            {remote,
             [{generated,true},{location,{1268,17}}],
             {atom,[{generated,true},{location,{1268,17}}],erlang},
             {atom,[{generated,true},{location,{1268,17}}],error}},
            [{tuple,
              [{generated,true},{location,{1268,17}}],
              [{atom,[{generated,true},{location,{1268,17}}],badrecord},
               {var,{1268,10},rec6}]}]}]}]}]}},
    {debug_line,1270,571},
    {block,
     {1270,5},
     [{match,{1270,5},{var,{1270,5},rec7},{var,{1270,5},'Vst'}},
      {'case',
       {1270,13},
       {var,{1270,5},rec7},
       [{clause,
         {1270,13},
         [{tuple,
           {1270,13},
           [{atom,{1270,13},vst},
            {var,{1270,13},'_'},
            {var,{1270,13},'_'},
            {var,{1270,13},'_'},
            {var,{1270,13},'_'},
            {var,{1270,13},'_'},
            {var,{1270,13},'_'}]}],
         [],
         [{call,
           {1270,13},
           {remote,
            {1270,13},
            {atom,{1270,13},erlang},
            {atom,{1270,13},setelement}},
           [{integer,{1270,13},2},{var,{1270,5},rec7},{var,{1270,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{1270,13}}],
         [{var,[{generated,true},{location,{1270,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1270,13}}],
           {remote,
            [{generated,true},{location,{1270,13}}],
            {atom,[{generated,true},{location,{1270,13}}],erlang},
            {atom,[{generated,true},{location,{1270,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1270,13}}],
             [{atom,[{generated,true},{location,{1270,13}}],badrecord},
              {var,{1270,5},rec7}]}]}]}]}]}]}]}.
{function,
    {1272,1},
    verify_has_map_fields,4,
    [{clause,
         {1272,1},
         [{var,{1272,1},'_'},
          {var,{1272,1},'_'},
          {var,{1272,1},'_'},
          {var,{1272,1},'_'}],
         [[{call,
               {1272,1},
               {remote,
                   {1272,1},
                   {atom,{1272,1},fake},
                   {atom,{1272,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1272,572},{atom,{1272,1},ignore}]},
     {clause,
         {1272,1},
         [{var,{1272,23},'Lbl'},
          {var,{1272,28},'Src'},
          {var,{1272,33},'List'},
          {var,{1272,39},'Vst'}],
         [],
         [{debug_line,1273,573},
          {call,
              {1273,5},
              {atom,{1273,5},assert_type},
              [{block,0,
                   [{tuple,
                        {1273,17},
                        [{atom,{1273,17},t_map},
                         {atom,{1273,17},any},
                         {atom,{1273,17},any}]}]},
               {var,{1273,27},'Src'},
               {var,{1273,32},'Vst'}]},
          {debug_line,1274,574},
          {call,
              {1274,5},
              {atom,{1274,5},assert_unique_map_keys},
              [{var,{1274,28},'List'}]},
          {debug_line,1275,575},
          {call,
              {1275,5},
              {atom,{1275,5},verify_map_fields},
              [{var,{1275,23},'List'},
               {var,{1275,29},'Src'},
               {var,{1275,34},'Lbl'},
               {var,{1275,39},'Vst'}]}]}]}.
{function,
    {1277,1},
    verify_map_fields,4,
    [{clause,
         {1277,1},
         [{var,{1277,1},'_'},
          {var,{1277,1},'_'},
          {var,{1277,1},'_'},
          {var,{1277,1},'_'}],
         [[{call,
               {1277,1},
               {remote,
                   {1277,1},
                   {atom,{1277,1},fake},
                   {atom,{1277,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1277,576},{atom,{1277,1},ignore}]},
     {clause,
         {1277,1},
         [{cons,{1277,19},{var,{1277,20},'Key'},{var,{1277,26},'Keys'}},
          {var,{1277,33},'Map'},
          {var,{1277,38},'Lbl'},
          {var,{1277,43},'Vst'}],
         [],
         [{debug_line,1278,577},
          {call,
              {1278,5},
              {atom,{1278,5},assert_term},
              [{var,{1278,17},'Key'},{var,{1278,22},'Vst'}]},
          {debug_line,1279,578},
          {'case',
              {1279,5},
              {call,
                  {1279,10},
                  {atom,{1279,10},bif_types},
                  [{atom,{1279,20},map_get},
                   {block,0,
                       [{cons,
                            {1279,29},
                            {var,{1279,30},'Key'},
                            {cons,
                                {1279,35},
                                {var,{1279,35},'Map'},
                                {nil,{1279,38}}}}]},
                   {var,{1279,41},'Vst'}]},
              [{clause,
                   {1280,9},
                   [{tuple,
                        {1280,9},
                        [{atom,{1280,10},none},
                         {var,{1280,16},'_'},
                         {var,{1280,19},'_'}]}],
                   [],
                   [{debug_line,1280,579},
                    {call,
                        {1280,25},
                        {atom,{1280,25},kill_state},
                        [{var,{1280,36},'Vst'}]}]},
               {clause,
                   {1281,9},
                   [{tuple,
                        {1281,9},
                        [{var,{1281,10},'_'},
                         {var,{1281,13},'_'},
                         {var,{1281,16},'_'}]}],
                   [],
                   [{debug_line,1281,580},
                    {call,
                        {1281,22},
                        {atom,{1281,22},verify_map_fields},
                        [{var,{1281,40},'Keys'},
                         {var,{1281,46},'Map'},
                         {var,{1281,51},'Lbl'},
                         {var,{1281,56},'Vst'}]}]}]}]},
     {clause,
         {1283,1},
         [{nil,{1283,19}},
          {var,{1283,23},'_Map'},
          {var,{1283,29},'Lbl'},
          {var,{1283,34},'Vst'}],
         [],
         [{debug_line,1284,581},
          {call,
              {1284,5},
              {atom,{1284,5},branch},
              [{var,{1284,12},'Lbl'},{var,{1284,17},'Vst'}]}]}]}.
{function,
 {1286,1},
 verify_get_map,4,
 [{clause,
   {1286,1},
   [{var,{1286,1},'_'},
    {var,{1286,1},'_'},
    {var,{1286,1},'_'},
    {var,{1286,1},'_'}],
   [[{call,
      {1286,1},
      {remote,{1286,1},{atom,{1286,1},fake},{atom,{1286,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1286,582},{atom,{1286,1},ignore}]},
  {clause,
   {1286,1},
   [{var,{1286,16},'Fail'},
    {var,{1286,22},'Src'},
    {var,{1286,27},'List'},
    {var,{1286,33},'Vst0'}],
   [],
   [{debug_line,1287,583},
    {call,
     {1287,5},
     {atom,{1287,5},assert_no_exception},
     [{var,{1287,25},'Fail'}]},
    {debug_line,1288,584},
    {call,{1288,5},{atom,{1288,5},assert_not_literal},[{var,{1288,24},'Src'}]},
    {debug_line,1289,585},
    {call,
     {1289,5},
     {atom,{1289,5},assert_type},
     [{block,0,
       [{tuple,
         {1289,17},
         [{atom,{1289,17},t_map},{atom,{1289,17},any},{atom,{1289,17},any}]}]},
      {var,{1289,27},'Src'},
      {var,{1289,32},'Vst0'}]},
    {debug_line,1291,586},
    {call,
     {1291,5},
     {atom,{1291,5},branch},
     [{var,{1291,12},'Fail'},
      {var,{1291,18},'Vst0'},
      {block,0,
       [{debug_line,1292,587},
        {'fun',
         {1292,12},
         {clauses,
          [{clause,
            {1292,15},
            [{var,{1292,16},'FailVst'}],
            [],
            [{debug_line,1293,588},
             {call,
              {1293,20},
              {atom,{1293,20},clobber_map_vals},
              [{var,{1293,37},'List'},
               {var,{1293,43},'Src'},
               {var,{1293,48},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,1295,589},
        {'fun',
         {1295,12},
         {clauses,
          [{clause,
            {1295,15},
            [{var,{1295,16},'SuccVst'}],
            [],
            [{debug_line,1296,590},
             {match,
              {1296,20},
              {var,{1296,20},'Keys'},
              {call,
               {1296,27},
               {atom,{1296,27},extract_map_keys},
               [{var,{1296,44},'List'},{var,{1296,50},'SuccVst'}]}},
             {debug_line,1297,591},
             {call,
              {1297,20},
              {atom,{1297,20},assert_unique_map_keys},
              [{var,{1297,43},'Keys'}]},
             {debug_line,1298,592},
             {call,
              {1298,20},
              {atom,{1298,20},extract_map_vals},
              [{var,{1298,37},'List'},
               {var,{1298,43},'Src'},
               {var,{1298,48},'SuccVst'}]}]}]}}]}]}]}]}.
{function,
 {1310,1},
 clobber_map_vals,3,
 [{clause,
   {1310,1},
   [{var,{1310,1},'_'},{var,{1310,1},'_'},{var,{1310,1},'_'}],
   [[{call,
      {1310,1},
      {remote,{1310,1},{atom,{1310,1},fake},{atom,{1310,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1310,593},{atom,{1310,1},ignore}]},
  {clause,
   {1310,1},
   [{cons,
     {1310,18},
     {var,{1310,19},'Key0'},
     {cons,{1310,25},{var,{1310,25},'Dst'},{var,{1310,31},'T'}}},
    {var,{1310,35},'Map'},
    {var,{1310,40},'Vst0'}],
   [],
   [{debug_line,1311,594},
    {match,
     {1311,5},
     {var,{1311,5},'Key'},
     {call,
      {1311,11},
      {atom,{1311,11},unpack_typed_arg},
      [{var,{1311,28},'Key0'},{var,{1311,34},'Vst0'}]}},
    {debug_line,1312,595},
    {'case',
     {1312,5},
     {call,
      {1312,10},
      {atom,{1312,10},is_reg_initialized},
      [{var,{1312,29},'Dst'},{var,{1312,34},'Vst0'}]},
     [{clause,
       {1313,9},
       [{atom,{1313,9},true}],
       [],
       [{debug_line,1314,596},
        {match,
         {1314,13},
         {var,{1314,13},'Vst'},
         {call,
          {1314,19},
          {atom,{1314,19},extract_term},
          [{atom,{1314,32},any},
           {block,0,
            [{tuple,
              {1314,37},
              [{atom,{1314,38},bif},{atom,{1314,42},map_get}]}]},
           {block,0,
            [{cons,
              {1314,52},
              {var,{1314,53},'Key'},
              {cons,{1314,58},{var,{1314,58},'Map'},{nil,{1314,61}}}}]},
           {var,{1314,64},'Dst'},
           {var,{1314,69},'Vst0'}]}},
        {debug_line,1315,597},
        {call,
         {1315,13},
         {atom,{1315,13},clobber_map_vals},
         [{var,{1315,30},'T'},{var,{1315,33},'Map'},{var,{1315,38},'Vst'}]}]},
      {clause,
       {1316,9},
       [{atom,{1316,9},false}],
       [],
       [{debug_line,1317,598},
        {call,
         {1317,13},
         {atom,{1317,13},clobber_map_vals},
         [{var,{1317,30},'T'},
          {var,{1317,33},'Map'},
          {var,{1317,38},'Vst0'}]}]}]}]},
  {clause,
   {1319,1},
   [{nil,{1319,18}},{var,{1319,22},'_Map'},{var,{1319,28},'Vst'}],
   [],
   [{debug_line,1320,599},{var,{1320,5},'Vst'}]}]}.
{function,
    {1322,1},
    is_reg_initialized,2,
    [{clause,
         {1322,1},
         [{var,{1322,1},'_'},{var,{1322,1},'_'}],
         [[{call,
               {1322,1},
               {remote,
                   {1322,1},
                   {atom,{1322,1},fake},
                   {atom,{1322,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1322,600},{atom,{1322,1},ignore}]},
     {clause,
         {1322,1},
         [{match,
              {1322,20},
              {tuple,{1322,20},[{atom,{1322,21},x},{var,{1322,23},'_'}]},
              {var,{1322,26},'Reg'}},
          {tuple,
              {1322,31},
              [{atom,{1322,31},vst},
               {tuple,
                   {1322,44},
                   [{atom,{1322,44},st},
                    {var,{1322,44},'_'},
                    {var,{1322,51},'Xs'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'},
                    {var,{1322,44},'_'}]},
               {var,{1322,31},'_'},
               {var,{1322,31},'_'},
               {var,{1322,31},'_'},
               {var,{1322,31},'_'},
               {var,{1322,31},'_'}]}],
         [],
         [{debug_line,1323,601},
          {call,
              {1323,5},
              {remote,
                  {1323,5},
                  {atom,{1323,5},erlang},
                  {atom,{1323,5},is_map_key}},
              [{var,{1323,16},'Reg'},{var,{1323,21},'Xs'}]}]},
     {clause,
         {1324,1},
         [{match,
              {1324,20},
              {tuple,{1324,20},[{atom,{1324,21},y},{var,{1324,23},'_'}]},
              {var,{1324,26},'Reg'}},
          {tuple,
              {1324,31},
              [{atom,{1324,31},vst},
               {tuple,
                   {1324,44},
                   [{atom,{1324,44},st},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,51},'Ys'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'},
                    {var,{1324,44},'_'}]},
               {var,{1324,31},'_'},
               {var,{1324,31},'_'},
               {var,{1324,31},'_'},
               {var,{1324,31},'_'},
               {var,{1324,31},'_'}]}],
         [],
         [{debug_line,1325,602},
          {'case',
              {1325,5},
              {var,{1325,10},'Ys'},
              [{clause,
                   {1326,9},
                   [{map,
                        {1326,9},
                        [{map_field_exact,
                             {1326,14},
                             {var,{1326,11},'Reg'},
                             {var,{1326,16},'Val'}}]}],
                   [],
                   [{debug_line,1327,603},
                    {op,{1327,17},
                        '=/=',
                        {var,{1327,13},'Val'},
                        {atom,{1327,21},uninitialized}}]},
               {clause,
                   {1328,9},
                   [{map,{1328,9},[]}],
                   [],
                   [{debug_line,1329,604},{atom,{1329,13},false}]}]}]},
     {clause,
         {1331,1},
         [{var,{1331,20},'V'},
          {tuple,
              {1331,23},
              [{atom,{1331,23},vst},
               {var,{1331,23},'_'},
               {var,{1331,23},'_'},
               {var,{1331,23},'_'},
               {var,{1331,23},'_'},
               {var,{1331,23},'_'},
               {var,{1331,23},'_'}]}],
         [],
         [{debug_line,1331,605},
          {call,
              {1331,34},
              {atom,{1331,34},error},
              [{block,0,
                   [{tuple,
                        {1331,40},
                        [{atom,{1331,41},not_a_register},
                         {var,{1331,57},'V'}]}]}]}]}]}.
{function,{1333,1},
          extract_map_keys,2,
          [{clause,{1333,1},
                   [{var,{1333,1},'_'},{var,{1333,1},'_'}],
                   [[{call,{1333,1},
                           {remote,{1333,1},
                                   {atom,{1333,1},fake},
                                   {atom,{1333,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1333,606},{atom,{1333,1},ignore}]},
           {clause,{1333,1},
                   [{cons,{1333,18},
                          {var,{1333,19},'Key'},
                          {cons,{1333,23},
                                {var,{1333,23},'_Val'},
                                {var,{1333,30},'T'}}},
                    {var,{1333,34},'Vst'}],
                   [],
                   [{debug_line,1334,607},
                    {cons,{1334,5},
                          {call,{1334,6},
                                {atom,{1334,6},unpack_typed_arg},
                                [{var,{1334,23},'Key'},{var,{1334,28},'Vst'}]},
                          {call,{1334,35},
                                {atom,{1334,35},extract_map_keys},
                                [{var,{1334,52},'T'},
                                 {var,{1334,55},'Vst'}]}}]},
           {clause,{1335,1},
                   [{nil,{1335,18}},{var,{1335,22},'_Vst'}],
                   [],
                   [{debug_line,1336,608},{nil,{1336,5}}]}]}.
{function,
    {1339,1},
    extract_map_vals,3,
    [{clause,
         {1339,1},
         [{var,{1339,1},'_'},{var,{1339,1},'_'},{var,{1339,1},'_'}],
         [[{call,
               {1339,1},
               {remote,
                   {1339,1},
                   {atom,{1339,1},fake},
                   {atom,{1339,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1339,609},{atom,{1339,1},ignore}]},
     {clause,
         {1339,1},
         [{var,{1339,18},'List'},
          {var,{1339,24},'Src'},
          {var,{1339,29},'SuccVst'}],
         [],
         [{debug_line,1340,610},
          {match,
              {1340,5},
              {var,{1340,5},'Seen'},
              {call,
                  {1340,12},
                  {remote,
                      {1340,16},
                      {atom,{1340,12},sets},
                      {atom,{1340,17},new}},
                  []}},
          {debug_line,1341,611},
          {call,
              {1341,5},
              {atom,{1341,5},extract_map_vals},
              [{var,{1341,22},'List'},
               {var,{1341,28},'Src'},
               {var,{1341,33},'Seen'},
               {var,{1341,39},'SuccVst'},
               {var,{1341,48},'SuccVst'}]}]}]}.
{function,
 {1343,1},
 extract_map_vals,5,
 [{clause,
   {1343,1},
   [{var,{1343,1},'_'},
    {var,{1343,1},'_'},
    {var,{1343,1},'_'},
    {var,{1343,1},'_'},
    {var,{1343,1},'_'}],
   [[{call,
      {1343,1},
      {remote,{1343,1},{atom,{1343,1},fake},{atom,{1343,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1343,612},{atom,{1343,1},ignore}]},
  {clause,
   {1343,1},
   [{cons,
     {1343,18},
     {var,{1343,19},'Key0'},
     {cons,{1343,25},{var,{1343,25},'Dst'},{var,{1343,31},'Vs'}}},
    {var,{1343,36},'Map'},
    {var,{1343,41},'Seen0'},
    {var,{1343,48},'Vst0'},
    {var,{1343,54},'Vsti0'}],
   [],
   [{debug_line,1344,613},
    {'case',
     {1344,5},
     {call,
      {1344,10},
      {remote,{1344,14},{atom,{1344,10},sets},{atom,{1344,15},is_element}},
      [{var,{1344,26},'Dst'},{var,{1344,31},'Seen0'}]},
     [{clause,
       {1345,9},
       [{atom,{1345,9},true}],
       [],
       [{debug_line,1347,614},
        {call,
         {1347,13},
         {atom,{1347,13},error},
         [{atom,{1347,19},conflicting_destinations}]}]},
      {clause,
       {1348,9},
       [{atom,{1348,9},false}],
       [],
       [{debug_line,1349,615},
        {match,
         {1349,13},
         {var,{1349,13},'Key'},
         {call,
          {1349,19},
          {atom,{1349,19},unpack_typed_arg},
          [{var,{1349,36},'Key0'},{var,{1349,42},'Vsti0'}]}},
        {debug_line,1350,616},
        {call,
         {1350,13},
         {atom,{1350,13},assert_term},
         [{var,{1350,25},'Key'},{var,{1350,30},'Vst0'}]},
        {debug_line,1351,617},
        {'case',
         {1351,13},
         {call,
          {1351,18},
          {atom,{1351,18},bif_types},
          [{atom,{1351,28},map_get},
           {block,0,
            [{cons,
              {1351,37},
              {var,{1351,38},'Key'},
              {cons,{1351,43},{var,{1351,43},'Map'},{nil,{1351,46}}}}]},
           {var,{1351,49},'Vst0'}]},
         [{clause,
           {1352,17},
           [{tuple,
             {1352,17},
             [{atom,{1352,18},none},{var,{1352,24},'_'},{var,{1352,27},'_'}]}],
           [],
           [{debug_line,1353,618},
            {call,
             {1353,21},
             {atom,{1353,21},kill_state},
             [{var,{1353,32},'Vsti0'}]}]},
          {clause,
           {1354,17},
           [{tuple,
             {1354,17},
             [{var,{1354,18},'DstType'},
              {var,{1354,27},'_'},
              {var,{1354,30},'_'}]}],
           [],
           [{debug_line,1355,619},
            {match,
             {1355,21},
             {var,{1355,21},'Vsti'},
             {call,
              {1355,28},
              {atom,{1355,28},extract_term},
              [{var,{1355,41},'DstType'},
               {block,0,
                [{tuple,
                  {1355,50},
                  [{atom,{1355,51},bif},{atom,{1355,55},map_get}]}]},
               {block,0,
                [{debug_line,1356,620},
                 {cons,
                  {1356,41},
                  {var,{1356,42},'Key'},
                  {cons,{1356,47},{var,{1356,47},'Map'},{nil,{1356,50}}}}]},
               {var,{1356,53},'Dst'},
               {var,{1356,58},'Vsti0'}]}},
            {debug_line,1357,621},
            {match,
             {1357,21},
             {var,{1357,21},'Seen'},
             {call,
              {1357,28},
              {remote,
               {1357,32},
               {atom,{1357,28},sets},
               {atom,{1357,33},add_element}},
              [{var,{1357,45},'Dst'},{var,{1357,50},'Seen0'}]}},
            {debug_line,1358,622},
            {call,
             {1358,21},
             {atom,{1358,21},extract_map_vals},
             [{var,{1358,38},'Vs'},
              {var,{1358,42},'Map'},
              {var,{1358,47},'Seen'},
              {var,{1358,53},'Vst0'},
              {var,{1358,59},'Vsti'}]}]}]}]}]}]},
  {clause,
   {1361,1},
   [{nil,{1361,18}},
    {var,{1361,22},'_Map'},
    {var,{1361,28},'_Seen'},
    {var,{1361,35},'_Vst0'},
    {var,{1361,42},'Vst'}],
   [],
   [{debug_line,1362,623},{var,{1362,5},'Vst'}]}]}.
{function,
 {1364,1},
 verify_put_map,7,
 [{clause,
   {1364,1},
   [{var,{1364,1},'_'},
    {var,{1364,1},'_'},
    {var,{1364,1},'_'},
    {var,{1364,1},'_'},
    {var,{1364,1},'_'},
    {var,{1364,1},'_'},
    {var,{1364,1},'_'}],
   [[{call,
      {1364,1},
      {remote,{1364,1},{atom,{1364,1},fake},{atom,{1364,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1364,624},{atom,{1364,1},ignore}]},
  {clause,
   {1364,1},
   [{var,{1364,16},'Op'},
    {var,{1364,20},'Fail'},
    {var,{1364,26},'Src'},
    {var,{1364,31},'Dst'},
    {var,{1364,36},'Live'},
    {var,{1364,42},'List'},
    {var,{1364,48},'Vst0'}],
   [],
   [{debug_line,1365,625},
    {call,
     {1365,5},
     {atom,{1365,5},assert_type},
     [{block,0,
       [{tuple,
         {1365,17},
         [{atom,{1365,17},t_map},{atom,{1365,17},any},{atom,{1365,17},any}]}]},
      {var,{1365,27},'Src'},
      {var,{1365,32},'Vst0'}]},
    {debug_line,1366,626},
    {call,
     {1366,5},
     {atom,{1366,5},verify_live},
     [{var,{1366,17},'Live'},{var,{1366,23},'Vst0'}]},
    {debug_line,1367,627},
    {call,{1367,5},{atom,{1367,5},verify_y_init},[{var,{1367,19},'Vst0'}]},
    {debug_line,1369,628},
    {match,
     {1369,5},
     {var,{1369,5},'_'},
     {lc,
      {1369,9},
      {block,0,
       [{call,
         {1369,10},
         {atom,{1369,10},assert_term},
         [{var,{1369,22},'Term'},{var,{1369,28},'Vst0'}]}]},
      [{block,0,[{atom,{1369,45},true}]},
       {generate,{1369,42},{var,{1369,37},'Term'},{var,{1369,45},'List'}}]}},
    {debug_line,1370,629},
    {match,
     {1370,5},
     {var,{1370,5},'Vst'},
     {call,
      {1370,11},
      {atom,{1370,11},heap_alloc},
      [{integer,{1370,22},0},{var,{1370,25},'Vst0'}]}},
    {debug_line,1372,630},
    {match,
     {1372,5},
     {var,{1372,5},'SuccFun'},
     {'fun',
      {1372,15},
      {clauses,
       [{clause,
         {1372,18},
         [{var,{1372,19},'SuccVst0'}],
         [],
         [{debug_line,1373,631},
          {match,
           {1373,23},
           {var,{1373,23},'SuccVst'},
           {call,
            {1373,33},
            {atom,{1373,33},prune_x_regs},
            [{var,{1373,46},'Live'},{var,{1373,52},'SuccVst0'}]}},
          {debug_line,1374,632},
          {match,
           {1374,23},
           {var,{1374,23},'Keys'},
           {call,
            {1374,30},
            {atom,{1374,30},extract_map_keys},
            [{var,{1374,47},'List'},{var,{1374,53},'SuccVst'}]}},
          {debug_line,1375,633},
          {call,
           {1375,23},
           {atom,{1375,23},assert_unique_map_keys},
           [{var,{1375,46},'Keys'}]},
          {debug_line,1377,634},
          {match,
           {1377,23},
           {var,{1377,23},'Type'},
           {call,
            {1377,30},
            {atom,{1377,30},put_map_type},
            [{var,{1377,43},'Src'},
             {var,{1377,48},'List'},
             {var,{1377,54},'Vst'}]}},
          {debug_line,1378,635},
          {call,
           {1378,23},
           {atom,{1378,23},create_term},
           [{var,{1378,35},'Type'},
            {var,{1378,41},'Op'},
            {block,0,[{cons,{1378,45},{var,{1378,46},'Src'},{nil,{1378,49}}}]},
            {var,{1378,52},'Dst'},
            {var,{1378,57},'SuccVst'},
            {var,{1378,66},'SuccVst0'}]}]}]}}},
    {debug_line,1381,636},
    {'case',
     {1381,5},
     {var,{1381,10},'Op'},
     [{clause,
       {1382,9},
       [{atom,{1382,9},put_map_exact}],
       [],
       [{debug_line,1383,637},
        {call,
         {1383,13},
         {atom,{1383,13},branch},
         [{var,{1383,20},'Fail'},
          {var,{1383,26},'Vst'},
          {var,{1383,31},'SuccFun'}]}]},
      {clause,
       {1384,9},
       [{atom,{1384,9},put_map_assoc}],
       [],
       [{debug_line,1386,638},
        {match,{1386,14},{integer,{1386,14},0},{var,{1386,32},'Fail'}},
        {debug_line,1387,639},
        {call,
         {1387,13},
         {var,{1387,13},'SuccFun'},
         [{var,{1387,21},'Vst'}]}]}]}]}]}.
{function,{1390,1},
          put_map_type,3,
          [{clause,{1390,1},
                   [{var,{1390,1},'_'},{var,{1390,1},'_'},{var,{1390,1},'_'}],
                   [[{call,{1390,1},
                           {remote,{1390,1},
                                   {atom,{1390,1},fake},
                                   {atom,{1390,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1390,640},{atom,{1390,1},ignore}]},
           {clause,{1390,1},
                   [{var,{1390,14},'Map0'},
                    {var,{1390,20},'List'},
                    {var,{1390,26},'Vst'}],
                   [],
                   [{debug_line,1391,641},
                    {match,{1391,5},
                           {var,{1391,5},'Map'},
                           {call,{1391,11},
                                 {atom,{1391,11},get_term_type},
                                 [{var,{1391,25},'Map0'},
                                  {var,{1391,31},'Vst'}]}},
                    {debug_line,1392,642},
                    {call,{1392,5},
                          {atom,{1392,5},pmt_1},
                          [{var,{1392,11},'List'},
                           {var,{1392,17},'Vst'},
                           {var,{1392,22},'Map'}]}]}]}.
{function,
    {1394,1},
    pmt_1,3,
    [{clause,
         {1394,1},
         [{var,{1394,1},'_'},{var,{1394,1},'_'},{var,{1394,1},'_'}],
         [[{call,
               {1394,1},
               {remote,
                   {1394,1},
                   {atom,{1394,1},fake},
                   {atom,{1394,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1394,643},{atom,{1394,1},ignore}]},
     {clause,
         {1394,1},
         [{cons,
              {1394,7},
              {var,{1394,8},'Key0'},
              {cons,
                  {1394,14},
                  {var,{1394,14},'Value0'},
                  {var,{1394,23},'List'}}},
          {var,{1394,30},'Vst'},
          {var,{1394,35},'Acc0'}],
         [],
         [{debug_line,1395,644},
          {match,
              {1395,5},
              {var,{1395,5},'Key'},
              {call,
                  {1395,11},
                  {atom,{1395,11},get_term_type},
                  [{var,{1395,25},'Key0'},{var,{1395,31},'Vst'}]}},
          {debug_line,1396,645},
          {match,
              {1396,5},
              {var,{1396,5},'Value'},
              {call,
                  {1396,13},
                  {atom,{1396,13},get_term_type},
                  [{var,{1396,27},'Value0'},{var,{1396,35},'Vst'}]}},
          {debug_line,1397,646},
          {match,
              {1397,5},
              {tuple,
                  {1397,5},
                  [{var,{1397,6},'Acc'},
                   {var,{1397,11},'_'},
                   {var,{1397,14},'_'}]},
              {call,
                  {1397,19},
                  {remote,
                      {1397,34},
                      {atom,{1397,19},beam_call_types},
                      {atom,{1397,35},types}},
                  [{atom,{1397,41},maps},
                   {atom,{1397,47},put},
                   {block,0,
                       [{cons,
                            {1397,52},
                            {var,{1397,53},'Key'},
                            {cons,
                                {1397,58},
                                {var,{1397,58},'Value'},
                                {cons,
                                    {1397,65},
                                    {var,{1397,65},'Acc0'},
                                    {nil,{1397,69}}}}}]}]}},
          {debug_line,1398,647},
          {call,
              {1398,5},
              {atom,{1398,5},pmt_1},
              [{var,{1398,11},'List'},
               {var,{1398,17},'Vst'},
               {var,{1398,22},'Acc'}]}]},
     {clause,
         {1399,1},
         [{nil,{1399,7}},{var,{1399,11},'_Vst'},{var,{1399,17},'Acc'}],
         [],
         [{debug_line,1400,648},{var,{1400,5},'Acc'}]}]}.
{function,
    {1402,1},
    verify_update_record,5,
    [{clause,
         {1402,1},
         [{var,{1402,1},'_'},
          {var,{1402,1},'_'},
          {var,{1402,1},'_'},
          {var,{1402,1},'_'},
          {var,{1402,1},'_'}],
         [[{call,
               {1402,1},
               {remote,
                   {1402,1},
                   {atom,{1402,1},fake},
                   {atom,{1402,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1402,649},{atom,{1402,1},ignore}]},
     {clause,
         {1402,1},
         [{var,{1402,22},'Size'},
          {var,{1402,28},'Src0'},
          {var,{1402,34},'Dst'},
          {var,{1402,39},'List0'},
          {var,{1402,46},'Vst0'}],
         [],
         [{debug_line,1403,650},
          {match,
              {1403,5},
              {var,{1403,5},'Src'},
              {call,
                  {1403,11},
                  {atom,{1403,11},unpack_typed_arg},
                  [{var,{1403,28},'Src0'},{var,{1403,34},'Vst0'}]}},
          {debug_line,1404,651},
          {match,
              {1404,5},
              {var,{1404,5},'List'},
              {lc,{1404,12},
                  {block,0,
                      [{call,
                           {1404,13},
                           {atom,{1404,13},unpack_typed_arg},
                           [{var,{1404,30},'Arg'},{var,{1404,35},'Vst0'}]}]},
                  [{block,0,[{atom,{1404,51},true}]},
                   {generate,
                       {1404,48},
                       {var,{1404,44},'Arg'},
                       {var,{1404,51},'List0'}}]}},
          {debug_line,1405,652},
          {call,
              {1405,5},
              {atom,{1405,5},assert_type},
              [{block,0,
                   [{tuple,
                        {1405,17},
                        [{atom,{1405,17},t_tuple},
                         {var,{1405,42},'Size'},
                         {atom,{1405,32},true},
                         {map,{1405,17},[]}]}]},
               {var,{1405,49},'Src'},
               {var,{1405,54},'Vst0'}]},
          {debug_line,1406,653},
          {call,
              {1406,5},
              {atom,{1406,5},verify_y_init},
              [{var,{1406,19},'Vst0'}]},
          {debug_line,1408,654},
          {match,
              {1408,5},
              {var,{1408,5},'Vst'},
              {call,
                  {1408,11},
                  {atom,{1408,11},eat_heap},
                  [{block,0,
                       [{op,{1408,25},
                            '+',
                            {var,{1408,20},'Size'},
                            {integer,{1408,27},1}}]},
                   {var,{1408,30},'Vst0'}]}},
          {debug_line,1410,655},
          {'case',
              {1410,5},
              {call,
                  {1410,10},
                  {atom,{1410,10},update_tuple_type},
                  [{var,{1410,28},'List'},
                   {var,{1410,34},'Src'},
                   {var,{1410,39},'Vst'}]},
              [{clause,
                   {1411,9},
                   [{atom,{1411,9},none}],
                   [],
                   [{debug_line,1411,656},
                    {call,
                        {1411,17},
                        {atom,{1411,17},error},
                        [{atom,{1411,23},invalid_index}]}]},
               {clause,
                   {1412,9},
                   [{var,{1412,9},'Type'}],
                   [],
                   [{debug_line,1412,657},
                    {call,
                        {1412,17},
                        {atom,{1412,17},create_term},
                        [{var,{1412,29},'Type'},
                         {atom,{1412,35},update_record},
                         {nil,{1412,50}},
                         {var,{1412,54},'Dst'},
                         {var,{1412,59},'Vst'}]}]}]}]}]}.
{function,
    {1415,1},
    update_tuple_type,3,
    [{clause,
         {1415,1},
         [{var,{1415,1},'_'},{var,{1415,1},'_'},{var,{1415,1},'_'}],
         [[{call,
               {1415,1},
               {remote,
                   {1415,1},
                   {atom,{1415,1},fake},
                   {atom,{1415,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1415,658},{atom,{1415,1},ignore}]},
     {clause,
         {1415,1},
         [{match,
              {1415,19},
              {cons,{1415,19},{var,{1415,20},'_'},{var,{1415,22},'_'}},
              {var,{1415,25},'Updates0'}},
          {var,{1415,35},'Src'},
          {var,{1415,40},'Vst'}],
         [],
         [{debug_line,1416,659},
          {match,
              {1416,5},
              {var,{1416,5},'Filter'},
              {tuple,
                  {1416,14},
                  [{atom,{1416,14},t_tuple},
                   {call,
                       {1416,28},
                       {atom,{1416,28},update_tuple_highest_index},
                       [{var,{1416,55},'Updates0'},
                        {block,0,[{op,{1416,65},'-',{integer,{1416,66},1}}]}]},
                   {atom,{1416,14},false},
                   {map,{1416,14},[]}]}},
          {debug_line,1417,660},
          {'case',
              {1417,5},
              {call,
                  {1417,10},
                  {atom,{1417,10},meet},
                  [{block,0,
                       [{call,
                            {1417,15},
                            {atom,{1417,15},get_term_type},
                            [{var,{1417,29},'Src'},{var,{1417,34},'Vst'}]}]},
                   {var,{1417,40},'Filter'}]},
              [{clause,
                   {1418,9},
                   [{atom,{1418,9},none}],
                   [],
                   [{debug_line,1419,661},{atom,{1419,13},none}]},
               {clause,
                   {1420,9},
                   [{var,{1420,9},'TupleType'}],
                   [],
                   [{debug_line,1421,662},
                    {match,
                        {1421,13},
                        {var,{1421,13},'Updates'},
                        {call,
                            {1421,23},
                            {atom,{1421,23},update_tuple_type_1},
                            [{var,{1421,43},'Updates0'},
                             {var,{1421,53},'Vst'}]}},
                    {debug_line,1422,663},
                    {call,
                        {1422,13},
                        {remote,
                            {1422,23},
                            {atom,{1422,13},beam_types},
                            {atom,{1422,24},update_tuple}},
                        [{var,{1422,37},'TupleType'},
                         {var,{1422,48},'Updates'}]}]}]}]}]}.
{function,
    {1425,1},
    update_tuple_type_1,2,
    [{clause,
         {1425,1},
         [{var,{1425,1},'_'},{var,{1425,1},'_'}],
         [[{call,
               {1425,1},
               {remote,
                   {1425,1},
                   {atom,{1425,1},fake},
                   {atom,{1425,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1425,664},{atom,{1425,1},ignore}]},
     {clause,
         {1425,1},
         [{cons,
              {1425,21},
              {var,{1425,22},'Index'},
              {cons,
                  {1425,29},
                  {var,{1425,29},'Value'},
                  {var,{1425,37},'Updates'}}},
          {var,{1425,47},'Vst'}],
         [],
         [{debug_line,1426,665},
          {cons,
              {1426,5},
              {tuple,
                  {1426,6},
                  [{var,{1426,7},'Index'},
                   {call,
                       {1426,14},
                       {atom,{1426,14},get_term_type},
                       [{var,{1426,28},'Value'},{var,{1426,35},'Vst'}]}]},
              {call,
                  {1426,43},
                  {atom,{1426,43},update_tuple_type_1},
                  [{var,{1426,63},'Updates'},{var,{1426,72},'Vst'}]}}]},
     {clause,
         {1427,1},
         [{nil,{1427,21}},{var,{1427,25},'_Vst'}],
         [],
         [{debug_line,1428,666},{nil,{1428,5}}]}]}.
{function,
    {1430,1},
    update_tuple_highest_index,2,
    [{clause,
         {1430,1},
         [{var,{1430,1},'_'},{var,{1430,1},'_'}],
         [[{call,
               {1430,1},
               {remote,
                   {1430,1},
                   {atom,{1430,1},fake},
                   {atom,{1430,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1430,667},{atom,{1430,1},ignore}]},
     {clause,
         {1430,1},
         [{cons,
              {1430,28},
              {var,{1430,29},'Index'},
              {cons,{1430,36},{var,{1430,36},'_Val'},{var,{1430,43},'List'}}},
          {var,{1430,50},'Acc'}],
         [[{call,
               {1430,60},
               {remote,
                   {1430,60},
                   {atom,{1430,60},erlang},
                   {atom,{1430,60},is_integer}},
               [{var,{1430,71},'Index'}]}]],
         [{debug_line,1431,668},
          {call,
              {1431,5},
              {atom,{1431,5},update_tuple_highest_index},
              [{var,{1431,32},'List'},
               {block,0,
                   [{call,
                        {1431,38},
                        {remote,
                            {1431,38},
                            {atom,{1431,38},erlang},
                            {atom,{1431,38},max}},
                        [{var,{1431,42},'Index'},{var,{1431,49},'Acc'}]}]}]}]},
     {clause,
         {1432,1},
         [{nil,{1432,28}},{var,{1432,32},'Acc'}],
         [[{op,{1432,46},'>=',{var,{1432,42},'Acc'},{integer,{1432,49},1}}]],
         [{debug_line,1433,669},{var,{1433,5},'Acc'}]}]}.
{function,
    {1435,1},
    verify_create_bin_list,2,
    [{clause,
         {1435,1},
         [{var,{1435,1},'_'},{var,{1435,1},'_'}],
         [[{call,
               {1435,1},
               {remote,
                   {1435,1},
                   {atom,{1435,1},fake},
                   {atom,{1435,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1435,670},{atom,{1435,1},ignore}]},
     {clause,
         {1435,1},
         [{cons,
              {1435,24},
              {tuple,
                  {1435,25},
                  [{atom,{1435,26},atom},{atom,{1435,31},string}]},
              {cons,
                  {1435,39},
                  {var,{1435,39},'_Seg'},
                  {cons,
                      {1435,44},
                      {var,{1435,44},'Unit'},
                      {cons,
                          {1435,49},
                          {var,{1435,49},'Flags'},
                          {cons,
                              {1435,55},
                              {var,{1435,55},'Val'},
                              {cons,
                                  {1435,59},
                                  {var,{1435,59},'Size'},
                                  {var,{1435,64},'Args'}}}}}}},
          {var,{1435,71},'Vst'}],
         [],
         [{debug_line,1436,671},
          {call,
              {1436,5},
              {atom,{1436,5},assert_bs_unit},
              [{block,0,
                   [{tuple,
                        {1436,20},
                        [{atom,{1436,21},atom},{atom,{1436,26},string}]}]},
               {var,{1436,35},'Unit'}]},
          {debug_line,1437,672},
          {call,
              {1437,5},
              {atom,{1437,5},assert_term},
              [{var,{1437,17},'Flags'},{var,{1437,24},'Vst'}]},
          {debug_line,1438,673},
          {'case',
              {1438,5},
              {var,{1438,10},'Val'},
              [{clause,
                   {1439,9},
                   [{tuple,
                        {1439,9},
                        [{atom,{1439,10},string},{var,{1439,17},'Bs'}]}],
                   [[{call,
                         {1439,26},
                         {remote,
                             {1439,26},
                             {atom,{1439,26},erlang},
                             {atom,{1439,26},is_binary}},
                         [{var,{1439,36},'Bs'}]}]],
                   [{debug_line,1439,674},{atom,{1439,43},ok}]},
               {clause,
                   {1440,9},
                   [{var,{1440,9},'_'}],
                   [],
                   [{debug_line,1440,675},
                    {call,
                        {1440,14},
                        {atom,{1440,14},error},
                        [{block,0,
                             [{tuple,
                                  {1440,20},
                                  [{atom,{1440,21},not_string},
                                   {var,{1440,32},'Val'}]}]}]}]}]},
          {debug_line,1442,676},
          {call,
              {1442,5},
              {atom,{1442,5},assert_term},
              [{var,{1442,17},'Flags'},{var,{1442,24},'Vst'}]},
          {debug_line,1443,677},
          {call,
              {1443,5},
              {atom,{1443,5},assert_term},
              [{var,{1443,17},'Size'},{var,{1443,23},'Vst'}]},
          {debug_line,1444,678},
          {call,
              {1444,5},
              {atom,{1444,5},verify_create_bin_list},
              [{var,{1444,28},'Args'},{var,{1444,34},'Vst'}]}]},
     {clause,
         {1445,1},
         [{cons,
              {1445,24},
              {var,{1445,25},'Type'},
              {cons,
                  {1445,30},
                  {var,{1445,30},'_Seg'},
                  {cons,
                      {1445,35},
                      {var,{1445,35},'Unit'},
                      {cons,
                          {1445,40},
                          {var,{1445,40},'Flags'},
                          {cons,
                              {1445,46},
                              {var,{1445,46},'Val'},
                              {cons,
                                  {1445,50},
                                  {var,{1445,50},'Size'},
                                  {var,{1445,55},'Args'}}}}}}},
          {var,{1445,62},'Vst'}],
         [],
         [{debug_line,1446,679},
          {call,
              {1446,5},
              {atom,{1446,5},assert_term},
              [{var,{1446,17},'Type'},{var,{1446,23},'Vst'}]},
          {debug_line,1447,680},
          {call,
              {1447,5},
              {atom,{1447,5},assert_bs_unit},
              [{var,{1447,20},'Type'},{var,{1447,26},'Unit'}]},
          {debug_line,1448,681},
          {call,
              {1448,5},
              {atom,{1448,5},assert_term},
              [{var,{1448,17},'Flags'},{var,{1448,24},'Vst'}]},
          {debug_line,1449,682},
          {call,
              {1449,5},
              {atom,{1449,5},assert_term},
              [{var,{1449,17},'Val'},{var,{1449,22},'Vst'}]},
          {debug_line,1450,683},
          {call,
              {1450,5},
              {atom,{1450,5},assert_term},
              [{var,{1450,17},'Size'},{var,{1450,23},'Vst'}]},
          {debug_line,1451,684},
          {call,
              {1451,5},
              {atom,{1451,5},verify_create_bin_list},
              [{var,{1451,28},'Args'},{var,{1451,34},'Vst'}]}]},
     {clause,
         {1452,1},
         [{nil,{1452,24}},{var,{1452,28},'_Vst'}],
         [],
         [{debug_line,1452,685},{atom,{1452,37},ok}]}]}.
{function,
    {1454,1},
    update_create_bin_list,2,
    [{clause,
         {1454,1},
         [{var,{1454,1},'_'},{var,{1454,1},'_'}],
         [[{call,
               {1454,1},
               {remote,
                   {1454,1},
                   {atom,{1454,1},fake},
                   {atom,{1454,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1454,686},{atom,{1454,1},ignore}]},
     {clause,
         {1454,1},
         [{cons,
              {1454,24},
              {tuple,
                  {1454,25},
                  [{atom,{1454,26},atom},{atom,{1454,31},string}]},
              {cons,
                  {1454,39},
                  {var,{1454,39},'_Seg'},
                  {cons,
                      {1454,44},
                      {var,{1454,44},'_Unit'},
                      {cons,
                          {1454,50},
                          {var,{1454,50},'_Flags'},
                          {cons,
                              {1454,57},
                              {var,{1454,57},'_Val'},
                              {cons,
                                  {1454,62},
                                  {var,{1454,62},'_Size'},
                                  {var,{1454,68},'T'}}}}}}},
          {var,{1454,72},'Vst'}],
         [],
         [{debug_line,1455,687},
          {call,
              {1455,5},
              {atom,{1455,5},update_create_bin_list},
              [{var,{1455,28},'T'},{var,{1455,31},'Vst'}]}]},
     {clause,
         {1456,1},
         [{cons,
              {1456,24},
              {tuple,{1456,25},[{atom,{1456,26},atom},{var,{1456,31},'Op'}]},
              {cons,
                  {1456,35},
                  {var,{1456,35},'_Seg'},
                  {cons,
                      {1456,40},
                      {var,{1456,40},'_Unit'},
                      {cons,
                          {1456,46},
                          {var,{1456,46},'_Flags'},
                          {cons,
                              {1456,53},
                              {var,{1456,53},'Val'},
                              {cons,
                                  {1456,57},
                                  {var,{1456,57},'_Size'},
                                  {var,{1456,63},'T'}}}}}}},
          {var,{1456,67},'Vst0'}],
         [],
         [{debug_line,1457,688},
          {match,
              {1457,5},
              {var,{1457,5},'Type'},
              {call,
                  {1457,12},
                  {atom,{1457,12},update_create_bin_type},
                  [{var,{1457,35},'Op'}]}},
          {debug_line,1458,689},
          {match,
              {1458,5},
              {var,{1458,5},'Vst'},
              {call,
                  {1458,11},
                  {atom,{1458,11},update_type},
                  [{block,0,[{'fun',{1458,23},{function,meet,2}}]},
                   {var,{1458,35},'Type'},
                   {var,{1458,41},'Val'},
                   {var,{1458,46},'Vst0'}]}},
          {debug_line,1459,690},
          {call,
              {1459,5},
              {atom,{1459,5},update_create_bin_list},
              [{var,{1459,28},'T'},{var,{1459,31},'Vst'}]}]},
     {clause,
         {1460,1},
         [{nil,{1460,24}},{var,{1460,28},'Vst'}],
         [],
         [{debug_line,1460,691},{var,{1460,36},'Vst'}]}]}.
{function,{1462,1},
          update_create_bin_type,1,
          [{clause,{1462,1},
                   [{var,{1462,1},'_'}],
                   [[{call,{1462,1},
                           {remote,{1462,1},
                                   {atom,{1462,1},fake},
                                   {atom,{1462,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1462,692},{atom,{1462,1},ignore}]},
           {clause,{1462,1},
                   [{atom,{1462,24},append}],
                   [],
                   [{debug_line,1462,693},
                    {tuple,{1462,35},
                           [{atom,{1462,35},t_bitstring},
                            {integer,{1462,35},1},
                            {atom,{1462,35},false}]}]},
           {clause,{1463,1},
                   [{atom,{1463,24},private_append}],
                   [],
                   [{debug_line,1463,694},
                    {tuple,{1463,43},
                           [{atom,{1463,43},t_bitstring},
                            {integer,{1463,43},1},
                            {atom,{1463,43},false}]}]},
           {clause,{1464,1},
                   [{atom,{1464,24},binary}],
                   [],
                   [{debug_line,1464,695},
                    {tuple,{1464,35},
                           [{atom,{1464,35},t_bitstring},
                            {integer,{1464,35},1},
                            {atom,{1464,35},false}]}]},
           {clause,{1465,1},
                   [{atom,{1465,24},float}],
                   [],
                   [{debug_line,1465,696},
                    {tuple,{1465,34},
                           [{atom,{1465,34},t_number},{atom,{1465,34},any}]}]},
           {clause,{1466,1},
                   [{atom,{1466,24},integer}],
                   [],
                   [{debug_line,1466,697},
                    {tuple,{1466,36},
                           [{atom,{1466,36},t_integer},
                            {atom,{1466,36},any}]}]},
           {clause,{1467,1},
                   [{atom,{1467,24},utf8}],
                   [],
                   [{debug_line,1467,698},
                    {tuple,{1467,33},
                           [{atom,{1467,33},t_integer},
                            {atom,{1467,33},any}]}]},
           {clause,{1468,1},
                   [{atom,{1468,24},utf16}],
                   [],
                   [{debug_line,1468,699},
                    {tuple,{1468,34},
                           [{atom,{1468,34},t_integer},
                            {atom,{1468,34},any}]}]},
           {clause,{1469,1},
                   [{atom,{1469,24},utf32}],
                   [],
                   [{debug_line,1469,700},
                    {tuple,{1469,34},
                           [{atom,{1469,34},t_integer},
                            {atom,{1469,34},any}]}]}]}.
{function,
    {1471,1},
    assert_bs_unit,2,
    [{clause,
         {1471,1},
         [{var,{1471,1},'_'},{var,{1471,1},'_'}],
         [[{call,
               {1471,1},
               {remote,
                   {1471,1},
                   {atom,{1471,1},fake},
                   {atom,{1471,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1471,701},{atom,{1471,1},ignore}]},
     {clause,
         {1471,1},
         [{tuple,{1471,16},[{atom,{1471,17},atom},{var,{1471,22},'Type'}]},
          {integer,{1471,29},0}],
         [],
         [{debug_line,1472,702},
          {'case',
              {1472,5},
              {var,{1472,10},'Type'},
              [{clause,
                   {1473,9},
                   [{atom,{1473,9},utf8}],
                   [],
                   [{debug_line,1473,703},{atom,{1473,17},ok}]},
               {clause,
                   {1474,9},
                   [{atom,{1474,9},utf16}],
                   [],
                   [{debug_line,1474,704},{atom,{1474,18},ok}]},
               {clause,
                   {1475,9},
                   [{atom,{1475,9},utf32}],
                   [],
                   [{debug_line,1475,705},{atom,{1475,18},ok}]},
               {clause,
                   {1476,9},
                   [{var,{1476,9},'_'}],
                   [],
                   [{debug_line,1476,706},
                    {call,
                        {1476,14},
                        {atom,{1476,14},error},
                        [{block,0,
                             [{tuple,
                                  {1476,20},
                                  [{atom,{1476,21},zero_unit_invalid_for_type},
                                   {var,{1476,48},'Type'}]}]}]}]}]}]},
     {clause,
         {1478,1},
         [{tuple,{1478,16},[{atom,{1478,17},atom},{var,{1478,22},'_Type'}]},
          {var,{1478,30},'Unit'}],
         [[{call,
               {1478,41},
               {remote,
                   {1478,41},
                   {atom,{1478,41},erlang},
                   {atom,{1478,41},is_integer}},
               [{var,{1478,52},'Unit'}]},
           {op,{1478,61},'<',{integer,{1478,59},0},{var,{1478,63},'Unit'}},
           {op,{1478,74},
               '=<',
               {var,{1478,69},'Unit'},
               {integer,{1478,77},256}}]],
         [{debug_line,1479,707},{atom,{1479,5},ok}]},
     {clause,
         {1480,1},
         [{var,{1480,16},'_'},{var,{1480,19},'Unit'}],
         [],
         [{debug_line,1481,708},
          {call,
              {1481,5},
              {atom,{1481,5},error},
              [{block,0,
                   [{tuple,
                        {1481,11},
                        [{atom,{1481,12},invalid},
                         {var,{1481,20},'Unit'}]}]}]}]}]}.
{function,
    {1487,1},
    verify_return,1,
    [{clause,
         {1487,1},
         [{var,{1487,1},'_'}],
         [[{call,
               {1487,1},
               {remote,
                   {1487,1},
                   {atom,{1487,1},fake},
                   {atom,{1487,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1487,709},{atom,{1487,1},ignore}]},
     {clause,
         {1487,1},
         [{tuple,
              {1487,15},
              [{atom,{1487,15},vst},
               {tuple,
                   {1487,28},
                   [{atom,{1487,28},st},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,37},'NumY'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'},
                    {var,{1487,28},'_'}]},
               {var,{1487,15},'_'},
               {var,{1487,15},'_'},
               {var,{1487,15},'_'},
               {var,{1487,15},'_'},
               {var,{1487,15},'_'}]}],
         [[{op,{1487,55},'=/=',{var,{1487,50},'NumY'},{atom,{1487,59},none}}]],
         [{debug_line,1488,710},
          {call,
              {1488,5},
              {atom,{1488,5},error},
              [{block,0,
                   [{tuple,
                        {1488,11},
                        [{atom,{1488,12},stack_frame},
                         {var,{1488,24},'NumY'}]}]}]}]},
     {clause,
         {1489,1},
         [{tuple,
              {1489,15},
              [{atom,{1489,15},vst},
               {tuple,
                   {1489,28},
                   [{atom,{1489,28},st},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,28},'_'},
                    {var,{1489,43},'State'},
                    {var,{1489,28},'_'}]},
               {var,{1489,15},'_'},
               {var,{1489,15},'_'},
               {var,{1489,15},'_'},
               {var,{1489,15},'_'},
               {var,{1489,15},'_'}]}],
         [[{op,{1489,63},
               '=/=',
               {var,{1489,57},'State'},
               {atom,{1489,67},none}}]],
         [{debug_line,1491,711},
          {call,
              {1491,5},
              {atom,{1491,5},error},
              [{block,0,
                   [{tuple,
                        {1491,11},
                        [{atom,{1491,12},return_in_receive},
                         {var,{1491,30},'State'}]}]}]}]},
     {clause,
         {1492,1},
         [{var,{1492,15},'Vst'}],
         [],
         [{debug_line,1493,712},
          {call,{1493,5},{atom,{1493,5},verify_no_ct},[{var,{1493,18},'Vst'}]},
          {debug_line,1494,713},
          {call,
              {1494,5},
              {atom,{1494,5},kill_state},
              [{var,{1494,16},'Vst'}]}]}]}.
{function,
    {1504,1},
    validate_bif,7,
    [{clause,
         {1504,1},
         [{var,{1504,1},'_'},
          {var,{1504,1},'_'},
          {var,{1504,1},'_'},
          {var,{1504,1},'_'},
          {var,{1504,1},'_'},
          {var,{1504,1},'_'},
          {var,{1504,1},'_'}],
         [[{call,
               {1504,1},
               {remote,
                   {1504,1},
                   {atom,{1504,1},fake},
                   {atom,{1504,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1504,714},{atom,{1504,1},ignore}]},
     {clause,
         {1504,1},
         [{var,{1504,14},'Kind'},
          {var,{1504,20},'Op'},
          {var,{1504,24},'Fail'},
          {var,{1504,30},'Ss'},
          {var,{1504,34},'Dst'},
          {var,{1504,39},'OrigVst'},
          {var,{1504,48},'Vst'}],
         [],
         [{debug_line,1505,715},
          {call,
              {1505,5},
              {atom,{1505,5},validate_bif_sources},
              [{var,{1505,26},'Op'},
               {var,{1505,30},'Ss'},
               {var,{1505,34},'Vst'}]},
          {debug_line,1506,716},
          {'case',
              {1506,5},
              {call,
                  {1506,10},
                  {atom,{1506,10},will_bif_succeed},
                  [{var,{1506,27},'Op'},
                   {var,{1506,31},'Ss'},
                   {var,{1506,35},'Vst'}]},
              [{clause,
                   {1507,9},
                   [{atom,{1507,9},yes}],
                   [],
                   [{debug_line,1510,717},
                    {call,
                        {1510,13},
                        {atom,{1510,13},validate_bif_1},
                        [{var,{1510,28},'Kind'},
                         {var,{1510,34},'Op'},
                         {atom,{1510,38},cannot_fail},
                         {var,{1510,51},'Ss'},
                         {var,{1510,55},'Dst'},
                         {var,{1510,60},'OrigVst'},
                         {var,{1510,69},'Vst'}]}]},
               {clause,
                   {1511,9},
                   [{atom,{1511,9},no}],
                   [],
                   [{debug_line,1514,718},
                    {call,
                        {1514,13},
                        {atom,{1514,13},branch},
                        [{var,{1514,20},'Fail'},
                         {var,{1514,26},'Vst'},
                         {block,0,
                             [{'fun',{1514,31},{function,kill_state,1}}]}]}]},
               {clause,
                   [{text,"'maybe'"},{location,{1515,9}}],
                   [{atom,[{text,"'maybe'"},{location,{1515,9}}],'maybe'}],
                   [],
                   [{debug_line,1516,719},
                    {call,
                        {1516,13},
                        {atom,{1516,13},validate_bif_1},
                        [{var,{1516,28},'Kind'},
                         {var,{1516,34},'Op'},
                         {var,{1516,38},'Fail'},
                         {var,{1516,44},'Ss'},
                         {var,{1516,48},'Dst'},
                         {var,{1516,53},'OrigVst'},
                         {var,{1516,62},'Vst'}]}]}]}]}]}.
{function,
 {1519,1},
 validate_bif_1,7,
 [{clause,
   {1519,1},
   [{var,{1519,1},'_'},
    {var,{1519,1},'_'},
    {var,{1519,1},'_'},
    {var,{1519,1},'_'},
    {var,{1519,1},'_'},
    {var,{1519,1},'_'},
    {var,{1519,1},'_'}],
   [[{call,
      {1519,1},
      {remote,{1519,1},{atom,{1519,1},fake},{atom,{1519,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1519,720},{atom,{1519,1},ignore}]},
  {clause,
   {1519,1},
   [{var,{1519,16},'Kind'},
    {var,{1519,22},'Op'},
    {atom,{1519,26},cannot_fail},
    {var,{1519,39},'Ss'},
    {var,{1519,43},'Dst'},
    {var,{1519,48},'OrigVst'},
    {var,{1519,57},'Vst0'}],
   [],
   [{debug_line,1524,721},
    {match,
     {1524,5},
     {tuple,
      {1524,5},
      [{var,{1524,6},'Type'},
       {var,{1524,12},'ArgTypes'},
       {var,{1524,22},'_CanSubtract'}]},
     {call,
      {1524,38},
      {atom,{1524,38},bif_types},
      [{var,{1524,48},'Op'},{var,{1524,52},'Ss'},{var,{1524,56},'Vst0'}]}},
    {debug_line,1525,722},
    {match,
     {1525,5},
     {var,{1525,5},'ZippedArgs'},
     {call,
      {1525,18},
      {remote,{1525,18},{atom,{1525,18},lists},{atom,{1525,18},zip}},
      [{var,{1525,22},'Ss'},{var,{1525,26},'ArgTypes'}]}},
    {debug_line,1527,723},
    {match,
     {1527,5},
     {var,{1527,5},'Vst'},
     {call,
      {1527,11},
      {remote,{1527,11},{atom,{1527,11},lists},{atom,{1527,11},foldl}},
      [{block,0,
        [{'fun',
          {1527,17},
          {clauses,
           [{clause,
             {1527,20},
             [{tuple,{1527,21},[{var,{1527,22},'A'},{var,{1527,25},'T'}]},
              {var,{1527,29},'V'}],
             [],
             [{debug_line,1528,724},
              {call,
               {1528,29},
               {atom,{1528,29},update_type},
               [{block,0,[{'fun',{1528,41},{function,meet,2}}]},
                {var,{1528,53},'T'},
                {var,{1528,56},'A'},
                {var,{1528,59},'V'}]}]}]}}]},
       {var,{1529,26},'Vst0'},
       {var,{1529,32},'ZippedArgs'}]}},
    {debug_line,1531,725},
    {match,
     {1531,5},
     {atom,{1531,5},true},
     {op,{1531,17},'=/=',{var,{1531,12},'Type'},{atom,{1531,21},none}}},
    {debug_line,1533,726},
    {call,
     {1533,5},
     {atom,{1533,5},extract_term},
     [{var,{1533,18},'Type'},
      {block,0,
       [{tuple,{1533,24},[{var,{1533,25},'Kind'},{var,{1533,31},'Op'}]}]},
      {var,{1533,36},'Ss'},
      {var,{1533,40},'Dst'},
      {var,{1533,45},'Vst'},
      {var,{1533,50},'OrigVst'}]}]},
  {clause,
   {1534,1},
   [{var,{1534,16},'Kind'},
    {var,{1534,22},'Op'},
    {var,{1534,26},'Fail'},
    {var,{1534,32},'Ss'},
    {var,{1534,36},'Dst'},
    {var,{1534,41},'OrigVst'},
    {var,{1534,50},'Vst'}],
   [],
   [{debug_line,1535,727},
    {match,
     {1535,5},
     {tuple,
      {1535,5},
      [{var,{1535,6},'Type'},
       {var,{1535,12},'ArgTypes'},
       {var,{1535,22},'CanSubtract'}]},
     {call,
      {1535,37},
      {atom,{1535,37},bif_types},
      [{var,{1535,47},'Op'},{var,{1535,51},'Ss'},{var,{1535,55},'Vst'}]}},
    {debug_line,1536,728},
    {match,
     {1536,5},
     {var,{1536,5},'ZippedArgs'},
     {call,
      {1536,18},
      {remote,{1536,18},{atom,{1536,18},lists},{atom,{1536,18},zip}},
      [{var,{1536,22},'Ss'},{var,{1536,26},'ArgTypes'}]}},
    {debug_line,1538,729},
    {match,
     {1538,5},
     {var,{1538,5},'FailFun'},
     {'case',
      {1538,15},
      {var,{1538,20},'CanSubtract'},
      [{clause,
        {1539,19},
        [{atom,{1539,19},true}],
        [],
        [{debug_line,1540,730},
         {'fun',
          {1540,27},
          {clauses,
           [{clause,
             {1540,30},
             [{var,{1540,31},'FailVst0'}],
             [],
             [{debug_line,1541,731},
              {call,
               {1541,31},
               {remote,
                {1541,31},
                {atom,{1541,31},lists},
                {atom,{1541,31},foldl}},
               [{block,0,
                 [{'fun',
                   {1541,37},
                   {clauses,
                    [{clause,
                      {1541,40},
                      [{tuple,
                        {1541,41},
                        [{var,{1541,42},'A'},{var,{1541,45},'T'}]},
                       {var,{1541,49},'V'}],
                      [],
                      [{debug_line,1542,732},
                       {call,
                        {1542,45},
                        {atom,{1542,45},update_type},
                        [{block,0,[{'fun',{1542,57},{function,subtract,2}}]},
                         {var,{1542,73},'T'},
                         {var,{1542,76},'A'},
                         {var,{1542,79},'V'}]}]}]}}]},
                {var,{1543,42},'FailVst0'},
                {var,{1543,52},'ZippedArgs'}]}]}]}}]},
       {clause,
        {1545,19},
        [{atom,{1545,19},false}],
        [],
        [{debug_line,1546,733},
         {'fun',
          {1546,23},
          {clauses,
           [{clause,
             {1546,26},
             [{var,{1546,27},'S'}],
             [],
             [{var,{1546,33},'S'}]}]}}]}]}},
    {debug_line,1548,734},
    {match,
     {1548,5},
     {var,{1548,5},'SuccFun'},
     {'fun',
      {1548,15},
      {clauses,
       [{clause,
         {1548,18},
         [{var,{1548,19},'SuccVst0'}],
         [],
         [{debug_line,1549,735},
          {match,
           {1549,19},
           {var,{1549,19},'SuccVst'},
           {call,
            {1549,29},
            {remote,{1549,29},{atom,{1549,29},lists},{atom,{1549,29},foldl}},
            [{block,0,
              [{'fun',
                {1549,35},
                {clauses,
                 [{clause,
                   {1549,38},
                   [{tuple,
                     {1549,39},
                     [{var,{1549,40},'A'},{var,{1549,43},'T'}]},
                    {var,{1549,47},'V'}],
                   [],
                   [{debug_line,1550,736},
                    {call,
                     {1550,43},
                     {atom,{1550,43},update_type},
                     [{block,0,[{'fun',{1550,55},{function,meet,2}}]},
                      {var,{1550,67},'T'},
                      {var,{1550,70},'A'},
                      {var,{1550,73},'V'}]}]}]}}]},
             {var,{1551,40},'SuccVst0'},
             {var,{1551,50},'ZippedArgs'}]}},
          {debug_line,1552,737},
          {call,
           {1552,19},
           {atom,{1552,19},extract_term},
           [{var,{1552,32},'Type'},
            {block,0,
             [{tuple,
               {1552,38},
               [{var,{1552,39},'Kind'},{var,{1552,45},'Op'}]}]},
            {var,{1552,50},'Ss'},
            {var,{1552,54},'Dst'},
            {var,{1552,59},'SuccVst'},
            {var,{1552,68},'OrigVst'}]}]}]}}},
    {debug_line,1555,738},
    {call,
     {1555,5},
     {atom,{1555,5},branch},
     [{var,{1555,12},'Fail'},
      {var,{1555,18},'Vst'},
      {var,{1555,23},'FailFun'},
      {var,{1555,32},'SuccFun'}]}]}]}.
{function,
    {1557,1},
    validate_bif_sources,3,
    [{clause,
         {1557,1},
         [{var,{1557,1},'_'},{var,{1557,1},'_'},{var,{1557,1},'_'}],
         [[{call,
               {1557,1},
               {remote,
                   {1557,1},
                   {atom,{1557,1},fake},
                   {atom,{1557,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1557,739},{atom,{1557,1},ignore}]},
     {clause,
         {1557,1},
         [{var,{1557,22},'Op'},{var,{1557,26},'Ss'},{var,{1557,30},'Vst'}],
         [[{op,{1558,11},'=:=',{var,{1558,8},'Op'},{atom,{1558,15},bit_size}}],
          [{op,{1559,11},
               '=:=',
               {var,{1559,8},'Op'},
               {atom,{1559,15},byte_size}}]],
         [{debug_line,1561,740},
          {match,
              {1561,5},
              {var,{1561,5},'_'},
              {lc,{1561,9},
                  {block,0,
                      [{call,
                           {1561,10},
                           {atom,{1561,10},assert_movable},
                           [{var,{1561,25},'S'},{var,{1561,28},'Vst'}]}]},
                  [{block,0,[{atom,{1561,41},true}]},
                   {generate,
                       {1561,38},
                       {var,{1561,36},'S'},
                       {var,{1561,41},'Ss'}}]}},
          {debug_line,1562,741},
          {atom,{1562,5},ok}]},
     {clause,
         {1563,1},
         [{var,{1563,22},'_'},{var,{1563,25},'Ss'},{var,{1563,29},'Vst'}],
         [],
         [{debug_line,1564,742},
          {call,
              {1564,5},
              {atom,{1564,5},validate_src},
              [{var,{1564,18},'Ss'},{var,{1564,22},'Vst'}]}]}]}.
{function,
 {1570,1},
 validate_bs_start_match,5,
 [{clause,
   {1570,1},
   [{var,{1570,1},'_'},
    {var,{1570,1},'_'},
    {var,{1570,1},'_'},
    {var,{1570,1},'_'},
    {var,{1570,1},'_'}],
   [[{call,
      {1570,1},
      {remote,{1570,1},{atom,{1570,1},fake},{atom,{1570,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1570,743},{atom,{1570,1},ignore}]},
  {clause,
   {1570,1},
   [{tuple,{1570,25},[{atom,{1570,26},atom},{atom,{1570,31},resume}]},
    {var,{1570,40},'Live'},
    {var,{1570,46},'Src'},
    {var,{1570,51},'Dst'},
    {var,{1570,56},'Vst0'}],
   [],
   [{debug_line,1571,744},
    {call,
     {1571,5},
     {atom,{1571,5},assert_type},
     [{block,0,
       [{tuple,
         {1571,17},
         [{atom,{1571,17},t_bs_context},{integer,{1571,17},1}]}]},
      {var,{1571,34},'Src'},
      {var,{1571,39},'Vst0'}]},
    {debug_line,1572,745},
    {call,
     {1572,5},
     {atom,{1572,5},verify_live},
     [{var,{1572,17},'Live'},{var,{1572,23},'Vst0'}]},
    {debug_line,1573,746},
    {call,{1573,5},{atom,{1573,5},verify_y_init},[{var,{1573,19},'Vst0'}]},
    {debug_line,1575,747},
    {match,
     {1575,5},
     {var,{1575,5},'Vst'},
     {call,
      {1575,11},
      {atom,{1575,11},prune_x_regs},
      [{var,{1575,24},'Live'},{var,{1575,30},'Src'},{var,{1575,35},'Vst0'}]}},
    {debug_line,1576,748},
    {call,
     {1576,5},
     {atom,{1576,5},assign},
     [{var,{1576,12},'Src'},{var,{1576,17},'Dst'},{var,{1576,22},'Vst'}]}]},
  {clause,
   {1577,1},
   [{tuple,{1577,25},[{atom,{1577,26},atom},{atom,{1577,31},no_fail}]},
    {var,{1577,41},'Live'},
    {var,{1577,47},'Src'},
    {var,{1577,52},'Dst'},
    {var,{1577,57},'Vst0'}],
   [],
   [{debug_line,1578,749},
    {call,
     {1578,5},
     {atom,{1578,5},verify_live},
     [{var,{1578,17},'Live'},{var,{1578,23},'Vst0'}]},
    {debug_line,1579,750},
    {call,{1579,5},{atom,{1579,5},verify_y_init},[{var,{1579,19},'Vst0'}]},
    {debug_line,1581,751},
    {match,
     {1581,5},
     {var,{1581,5},'Vst1'},
     {call,
      {1581,12},
      {atom,{1581,12},update_type},
      [{block,0,[{'fun',{1581,24},{function,meet,2}}]},
       {block,0,
        [{tuple,
          {1581,36},
          [{atom,{1581,36},t_bs_matchable},{integer,{1581,36},1}]}]},
       {var,{1581,55},'Src'},
       {var,{1581,60},'Vst0'}]}},
    {debug_line,1584,752},
    {match,
     {1584,5},
     {var,{1584,5},'SrcType'},
     {call,
      {1584,15},
      {atom,{1584,15},get_movable_term_type},
      [{var,{1584,37},'Src'},{var,{1584,42},'Vst1'}]}},
    {debug_line,1585,753},
    {match,
     {1585,5},
     {var,{1585,5},'TailUnit'},
     {call,
      {1585,16},
      {remote,
       {1585,26},
       {atom,{1585,16},beam_types},
       {atom,{1585,27},get_bs_matchable_unit}},
      [{var,{1585,49},'SrcType'}]}},
    {debug_line,1587,754},
    {match,
     {1587,5},
     {var,{1587,5},'Vst'},
     {call,
      {1587,11},
      {atom,{1587,11},prune_x_regs},
      [{var,{1587,24},'Live'},{var,{1587,30},'Src'},{var,{1587,35},'Vst1'}]}},
    {debug_line,1588,755},
    {call,
     {1588,5},
     {atom,{1588,5},extract_term},
     [{block,0,
       [{tuple,
         {1588,18},
         [{atom,{1588,18},t_bs_context},{var,{1588,42},'TailUnit'}]}]},
      {atom,{1588,53},bs_start_match},
      {block,0,
       [{debug_line,1589,756},
        {cons,{1589,18},{var,{1589,19},'Src'},{nil,{1589,22}}}]},
      {var,{1589,25},'Dst'},
      {var,{1589,30},'Vst'},
      {var,{1589,35},'Vst0'}]}]},
  {clause,
   {1590,1},
   [{tuple,{1590,25},[{atom,{1590,26},f},{var,{1590,28},'Fail'}]},
    {var,{1590,35},'Live'},
    {var,{1590,41},'Src'},
    {var,{1590,46},'Dst'},
    {var,{1590,51},'Vst'}],
   [],
   [{debug_line,1591,757},
    {call,
     {1591,5},
     {atom,{1591,5},assert_no_exception},
     [{var,{1591,25},'Fail'}]},
    {debug_line,1593,758},
    {call,
     {1593,5},
     {atom,{1593,5},branch},
     [{var,{1593,12},'Fail'},
      {var,{1593,18},'Vst'},
      {block,0,
       [{debug_line,1594,759},
        {'fun',
         {1594,12},
         {clauses,
          [{clause,
            {1594,15},
            [{var,{1594,16},'FailVst'}],
            [],
            [{debug_line,1595,760},
             {call,
              {1595,20},
              {atom,{1595,20},update_type},
              [{block,0,[{'fun',{1595,32},{function,subtract,2}}]},
               {block,0,
                [{tuple,
                  {1595,48},
                  [{atom,{1595,48},t_bs_matchable},{integer,{1595,48},1}]}]},
               {var,{1595,67},'Src'},
               {var,{1595,72},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,1597,761},
        {'fun',
         {1597,12},
         {clauses,
          [{clause,
            {1597,15},
            [{var,{1597,16},'SuccVst'}],
            [],
            [{debug_line,1598,762},
             {call,
              {1598,20},
              {atom,{1598,20},validate_bs_start_match},
              [{block,0,
                [{tuple,
                  {1598,44},
                  [{atom,{1598,45},atom},{atom,{1598,50},no_fail}]}]},
               {var,{1598,60},'Live'},
               {var,{1599,44},'Src'},
               {var,{1599,49},'Dst'},
               {var,{1599,54},'SuccVst'}]}]}]}}]}]}]}]}.
{function,
 {1606,1},
 validate_bs_match,4,
 [{clause,
   {1606,1},
   [{var,{1606,1},'_'},
    {var,{1606,1},'_'},
    {var,{1606,1},'_'},
    {var,{1606,1},'_'}],
   [[{call,
      {1606,1},
      {remote,{1606,1},{atom,{1606,1},fake},{atom,{1606,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1606,763},{atom,{1606,1},ignore}]},
  {clause,
   {1606,1},
   [{cons,{1606,19},{var,{1606,20},'I'},{var,{1606,22},'Is'}},
    {var,{1606,27},'Ctx'},
    {var,{1606,32},'Unit0'},
    {var,{1606,39},'Vst0'}],
   [],
   [{debug_line,1607,764},
    {'case',
     {1607,5},
     {var,{1607,10},'I'},
     [{clause,
       {1608,9},
       [{tuple,
         {1608,9},
         [{atom,{1608,10},ensure_at_least},
          {var,{1608,26},'_Size'},
          {var,{1608,32},'Unit'}]}],
       [],
       [{debug_line,1609,765},
        {match,
         {1609,13},
         {var,{1609,13},'Type'},
         {tuple,
          {1609,20},
          [{atom,{1609,20},t_bs_context},{var,{1609,44},'Unit'}]}},
        {debug_line,1610,766},
        {match,
         {1610,13},
         {var,{1610,13},'Vst1'},
         {call,
          {1610,20},
          {atom,{1610,20},update_bs_unit},
          [{var,{1610,35},'Ctx'},
           {var,{1610,40},'Unit'},
           {var,{1610,46},'Vst0'}]}},
        {debug_line,1611,767},
        {match,
         {1611,13},
         {var,{1611,13},'Vst'},
         {call,
          {1611,19},
          {atom,{1611,19},update_type},
          [{block,0,[{'fun',{1611,31},{function,meet,2}}]},
           {var,{1611,43},'Type'},
           {var,{1611,49},'Ctx'},
           {var,{1611,54},'Vst1'}]}},
        {debug_line,1612,768},
        {call,
         {1612,13},
         {atom,{1612,13},validate_bs_match},
         [{var,{1612,31},'Is'},
          {var,{1612,35},'Ctx'},
          {var,{1612,40},'Unit'},
          {var,{1612,46},'Vst'}]}]},
      {clause,
       {1613,9},
       [{tuple,
         {1613,9},
         [{atom,{1613,10},ensure_exactly},{var,{1613,25},'_Stride'}]}],
       [],
       [{debug_line,1614,769},
        {call,
         {1614,13},
         {atom,{1614,13},validate_bs_match},
         [{var,{1614,31},'Is'},
          {var,{1614,35},'Ctx'},
          {var,{1614,40},'Unit0'},
          {var,{1614,47},'Vst0'}]}]},
      {clause,
       {1615,9},
       [{tuple,
         {1615,9},
         [{atom,{1615,10},'=:='},
          {atom,{1615,16},nil},
          {var,{1615,20},'Bits'},
          {var,{1615,25},'Value'}]}],
       [[{op,{1615,42},'=<',{var,{1615,37},'Bits'},{integer,{1615,45},64}},
         {call,
          {1615,49},
          {remote,
           {1615,49},
           {atom,{1615,49},erlang},
           {atom,{1615,49},is_integer}},
          [{var,{1615,60},'Value'}]}]],
       [{debug_line,1616,770},
        {call,
         {1616,13},
         {atom,{1616,13},validate_bs_match},
         [{var,{1616,31},'Is'},
          {var,{1616,35},'Ctx'},
          {var,{1616,40},'Unit0'},
          {var,{1616,47},'Vst0'}]}]},
      {clause,
       {1617,9},
       [{tuple,
         {1617,9},
         [{var,{1617,10},'Type0'},
          {var,{1617,16},'Live'},
          {tuple,{1617,21},[{atom,{1617,22},literal},{var,{1617,30},'Flags'}]},
          {var,{1617,37},'Size'},
          {var,{1617,42},'Unit'},
          {var,{1617,47},'Dst'}]}],
       [[{op,{1617,63},'=:=',{var,{1617,57},'Type0'},{atom,{1617,67},binary}}],
        [{op,
          {1618,63},
          '=:=',
          {var,{1618,57},'Type0'},
          {atom,{1618,67},integer}}]],
       [{debug_line,1619,771},
        {call,
         {1619,13},
         {atom,{1619,13},validate_ctx_live},
         [{var,{1619,31},'Ctx'},{var,{1619,36},'Live'}]},
        {debug_line,1620,772},
        {call,
         {1620,13},
         {atom,{1620,13},verify_live},
         [{var,{1620,25},'Live'},{var,{1620,31},'Vst0'}]},
        {debug_line,1621,773},
        {match,
         {1621,13},
         {var,{1621,13},'Vst1'},
         {call,
          {1621,20},
          {atom,{1621,20},prune_x_regs},
          [{var,{1621,33},'Live'},{var,{1621,39},'Vst0'}]}},
        {debug_line,1622,774},
        {match,
         {1622,13},
         {var,{1622,13},'Type'},
         {'case',
          {1622,20},
          {var,{1622,25},'Type0'},
          [{clause,
            {1623,24},
            [{atom,{1623,24},integer}],
            [],
            [{debug_line,1624,775},
             {match,
              {1624,28},
              {atom,{1624,28},true},
              {call,
               {1624,35},
               {remote,
                {1624,35},
                {atom,{1624,35},erlang},
                {atom,{1624,35},is_integer}},
               [{var,{1624,46},'Size'}]}},
             {debug_line,1625,776},
             {call,
              {1625,28},
              {atom,{1625,28},bs_integer_type},
              [{block,0,
                [{tuple,
                  {1625,44},
                  [{var,{1625,45},'Size'},{var,{1625,51},'Size'}]}]},
               {var,{1625,58},'Unit'},
               {var,{1625,64},'Flags'}]}]},
           {clause,
            {1626,24},
            [{atom,{1626,24},binary}],
            [],
            [{debug_line,1627,777},
             {match,
              {1627,28},
              {var,{1627,28},'SizeUnit'},
              {call,
               {1627,39},
               {atom,{1627,39},bsm_size_unit},
               [{block,0,
                 [{tuple,
                   {1627,53},
                   [{atom,{1627,54},integer},{var,{1627,62},'Size'}]}]},
                {var,{1627,69},'Unit'}]}},
             {debug_line,1628,778},
             {tuple,
              {1628,28},
              [{atom,{1628,28},t_bitstring},
               {var,{1628,51},'SizeUnit'},
               {atom,{1628,28},false}]}]}]}},
        {debug_line,1630,779},
        {match,
         {1630,13},
         {var,{1630,13},'Vst'},
         {call,
          {1630,19},
          {atom,{1630,19},extract_term},
          [{var,{1630,32},'Type'},
           {atom,{1630,38},bs_match},
           {block,0,[{cons,{1630,48},{var,{1630,49},'Ctx'},{nil,{1630,52}}}]},
           {var,{1630,55},'Dst'},
           {var,{1630,60},'Vst1'},
           {var,{1630,66},'Vst0'}]}},
        {debug_line,1631,780},
        {call,
         {1631,13},
         {atom,{1631,13},validate_bs_match},
         [{var,{1631,31},'Is'},
          {var,{1631,35},'Ctx'},
          {var,{1631,40},'Unit0'},
          {var,{1631,47},'Vst'}]}]},
      {clause,
       {1632,9},
       [{tuple,{1632,9},[{atom,{1632,10},skip},{var,{1632,15},'_Stride'}]}],
       [],
       [{debug_line,1633,781},
        {call,
         {1633,13},
         {atom,{1633,13},validate_bs_match},
         [{var,{1633,31},'Is'},
          {var,{1633,35},'Ctx'},
          {var,{1633,40},'Unit0'},
          {var,{1633,47},'Vst0'}]}]},
      {clause,
       {1634,9},
       [{tuple,
         {1634,9},
         [{atom,{1634,10},get_tail},
          {var,{1634,19},'Live'},
          {var,{1634,24},'_'},
          {var,{1634,26},'Dst'}]}],
       [],
       [{debug_line,1635,782},
        {call,
         {1635,13},
         {atom,{1635,13},validate_ctx_live},
         [{var,{1635,31},'Ctx'},{var,{1635,36},'Live'}]},
        {debug_line,1636,783},
        {call,
         {1636,13},
         {atom,{1636,13},verify_live},
         [{var,{1636,25},'Live'},{var,{1636,31},'Vst0'}]},
        {debug_line,1637,784},
        {match,
         {1637,13},
         {var,{1637,13},'Vst1'},
         {call,
          {1637,20},
          {atom,{1637,20},prune_x_regs},
          [{var,{1637,33},'Live'},{var,{1637,39},'Vst0'}]}},
        {debug_line,1638,785},
        {match,
         {1638,13},
         {tuple,
          {1638,13},
          [{atom,{1638,13},t_bs_context},{var,{1638,37},'Unit'}]},
         {call,
          {1638,45},
          {atom,{1638,45},get_concrete_type},
          [{var,{1638,63},'Ctx'},{var,{1638,68},'Vst0'}]}},
        {debug_line,1639,786},
        {match,
         {1639,13},
         {var,{1639,13},'Type'},
         {tuple,
          {1639,20},
          [{atom,{1639,20},t_bitstring},
           {var,{1639,43},'Unit'},
           {atom,{1639,20},false}]}},
        {debug_line,1640,787},
        {match,
         {1640,13},
         {var,{1640,13},'Vst'},
         {call,
          {1640,19},
          {atom,{1640,19},extract_term},
          [{var,{1640,32},'Type'},
           {atom,{1640,38},get_tail},
           {block,0,[{cons,{1640,48},{var,{1640,49},'Ctx'},{nil,{1640,52}}}]},
           {var,{1640,55},'Dst'},
           {var,{1640,60},'Vst1'},
           {var,{1640,66},'Vst0'}]}},
        {debug_line,1642,788},
        {call,
         {1642,13},
         {atom,{1642,13},validate_bs_match},
         [{var,{1642,31},'Is'},
          {var,{1642,35},'Ctx'},
          {var,{1642,40},'Unit'},
          {var,{1642,46},'Vst'}]}]}]}]},
  {clause,
   {1644,1},
   [{nil,{1644,19}},
    {var,{1644,23},'_Ctx'},
    {var,{1644,29},'_Unit'},
    {var,{1644,36},'Vst'}],
   [],
   [{debug_line,1645,789},{var,{1645,5},'Vst'}]}]}.
{function,
    {1647,1},
    validate_ctx_live,2,
    [{clause,
         {1647,1},
         [{var,{1647,1},'_'},{var,{1647,1},'_'}],
         [[{call,
               {1647,1},
               {remote,
                   {1647,1},
                   {atom,{1647,1},fake},
                   {atom,{1647,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1647,790},{atom,{1647,1},ignore}]},
     {clause,
         {1647,1},
         [{match,
              {1647,19},
              {tuple,{1647,19},[{atom,{1647,20},x},{var,{1647,22},'X'}]},
              {var,{1647,25},'Ctx'}},
          {var,{1647,30},'Live'}],
         [[{op,{1647,43},'>=',{var,{1647,41},'X'},{var,{1647,46},'Live'}}]],
         [{debug_line,1648,791},
          {call,
              {1648,5},
              {atom,{1648,5},error},
              [{block,0,
                   [{tuple,
                        {1648,11},
                        [{atom,{1648,12},live_does_not_preserve_context},
                         {var,{1648,43},'Live'},
                         {var,{1648,48},'Ctx'}]}]}]}]},
     {clause,
         {1649,1},
         [{var,{1649,19},'_'},{var,{1649,22},'_'}],
         [],
         [{debug_line,1650,792},{atom,{1650,5},ok}]}]}.
{function,{1652,1},
          validate_failed_bs_match,3,
          [{clause,{1652,1},
                   [{var,{1652,1},'_'},{var,{1652,1},'_'},{var,{1652,1},'_'}],
                   [[{call,{1652,1},
                           {remote,{1652,1},
                                   {atom,{1652,1},fake},
                                   {atom,{1652,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1652,793},{atom,{1652,1},ignore}]},
           {clause,{1652,1},
                   [{cons,{1652,26},
                          {tuple,{1652,27},
                                 [{atom,{1652,28},ensure_at_least},
                                  {var,{1652,44},'_Size'},
                                  {var,{1652,50},'Unit'}]},
                          {var,{1652,56},'_'}},
                    {var,{1652,60},'Ctx'},
                    {var,{1652,65},'Vst'}],
                   [],
                   [{debug_line,1653,794},
                    {match,{1653,5},
                           {var,{1653,5},'Type'},
                           {tuple,{1653,12},
                                  [{atom,{1653,12},t_bs_context},
                                   {var,{1653,36},'Unit'}]}},
                    {debug_line,1654,795},
                    {call,{1654,5},
                          {atom,{1654,5},update_type},
                          [{block,0,[{'fun',{1654,17},{function,subtract,2}}]},
                           {var,{1654,33},'Type'},
                           {var,{1654,39},'Ctx'},
                           {var,{1654,44},'Vst'}]}]},
           {clause,{1655,1},
                   [{cons,{1655,26},{var,{1655,27},'_'},{var,{1655,29},'Is'}},
                    {var,{1655,34},'Ctx'},
                    {var,{1655,39},'Vst'}],
                   [],
                   [{debug_line,1656,796},
                    {call,{1656,5},
                          {atom,{1656,5},validate_failed_bs_match},
                          [{var,{1656,30},'Is'},
                           {var,{1656,34},'Ctx'},
                           {var,{1656,39},'Vst'}]}]},
           {clause,{1657,1},
                   [{nil,{1657,26}},
                    {var,{1657,30},'_Ctx'},
                    {var,{1657,36},'Vst'}],
                   [],
                   [{debug_line,1658,797},{var,{1658,5},'Vst'}]}]}.
{function,
 {1660,1},
 bs_integer_type,3,
 [{clause,
   {1660,1},
   [{var,{1660,1},'_'},{var,{1660,1},'_'},{var,{1660,1},'_'}],
   [[{call,
      {1660,1},
      {remote,{1660,1},{atom,{1660,1},fake},{atom,{1660,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1660,798},{atom,{1660,1},ignore}]},
  {clause,
   {1660,1},
   [{var,{1660,17},'Bounds'},{var,{1660,25},'Unit'},{var,{1660,31},'Flags'}],
   [],
   [{debug_line,1661,799},
    {'case',
     {1661,5},
     {call,
      {1661,10},
      {remote,{1661,21},{atom,{1661,10},beam_bounds},{atom,{1661,22},bounds}},
      [{atom,{1661,29},'*'},
       {var,{1661,34},'Bounds'},
       {block,0,
        [{tuple,{1661,42},[{var,{1661,43},'Unit'},{var,{1661,49},'Unit'}]}]}]},
     [{clause,
       {1662,9},
       [{tuple,{1662,9},[{var,{1662,10},'_'},{var,{1662,13},'MaxBits'}]}],
       [[{call,
          {1662,27},
          {remote,
           {1662,27},
           {atom,{1662,27},erlang},
           {atom,{1662,27},is_integer}},
          [{var,{1662,38},'MaxBits'}]},
         {op,{1662,56},'>=',{var,{1662,48},'MaxBits'},{integer,{1662,59},1}},
         {op,
          {1662,70},
          '=<',
          {var,{1662,62},'MaxBits'},
          {integer,{1662,73},64}}]],
       [{debug_line,1663,800},
        {'case',
         {1663,13},
         {call,
          {1663,18},
          {remote,{1663,18},{atom,{1663,18},lists},{atom,{1663,18},member}},
          [{atom,{1663,25},signed},{var,{1663,33},'Flags'}]},
         [{clause,
           {1664,17},
           [{atom,{1664,17},true}],
           [],
           [{debug_line,1665,801},
            {match,
             {1665,21},
             {var,{1665,21},'Max'},
             {op,
              {1665,49},
              '-',
              {op,
               {1665,30},
               'bsl',
               {integer,{1665,28},1},
               {op,
                {1665,43},
                '-',
                {var,{1665,35},'MaxBits'},
                {integer,{1665,45},1}}},
              {integer,{1665,51},1}}},
            {debug_line,1666,802},
            {match,
             {1666,21},
             {var,{1666,21},'Min'},
             {op,
              {1666,27},
              '-',
              {op,{1666,33},'+',{var,{1666,29},'Max'},{integer,{1666,35},1}}}},
            {debug_line,1667,803},
            {call,
             {1667,21},
             {remote,
              {1667,31},
              {atom,{1667,21},beam_types},
              {atom,{1667,32},make_integer}},
             [{var,{1667,45},'Min'},{var,{1667,50},'Max'}]}]},
          {clause,
           {1668,17},
           [{atom,{1668,17},false}],
           [],
           [{debug_line,1669,804},
            {match,
             {1669,21},
             {var,{1669,21},'Max'},
             {op,
              {1669,43},
              '-',
              {op,
               {1669,30},
               'bsl',
               {integer,{1669,28},1},
               {var,{1669,34},'MaxBits'}},
              {integer,{1669,45},1}}},
            {debug_line,1670,805},
            {call,
             {1670,21},
             {remote,
              {1670,31},
              {atom,{1670,21},beam_types},
              {atom,{1670,32},make_integer}},
             [{integer,{1670,45},0},{var,{1670,48},'Max'}]}]}]}]},
      {clause,
       {1672,9},
       [{tuple,{1672,9},[{var,{1672,10},'_'},{integer,{1672,13},0}]}],
       [],
       [{debug_line,1673,806},
        {call,
         {1673,13},
         {remote,
          {1673,23},
          {atom,{1673,13},beam_types},
          {atom,{1673,24},make_integer}},
         [{integer,{1673,37},0}]}]},
      {clause,
       {1674,9},
       [{var,{1674,9},'_'}],
       [],
       [{debug_line,1675,807},
        {'case',
         {1675,13},
         {call,
          {1675,18},
          {remote,{1675,18},{atom,{1675,18},lists},{atom,{1675,18},member}},
          [{atom,{1675,25},signed},{var,{1675,33},'Flags'}]},
         [{clause,
           {1676,17},
           [{atom,{1676,17},true}],
           [],
           [{debug_line,1676,808},
            {tuple,
             {1676,25},
             [{atom,{1676,25},t_integer},{atom,{1676,25},any}]}]},
          {clause,
           {1677,17},
           [{atom,{1677,17},false}],
           [],
           [{debug_line,1677,809},
            {tuple,
             {1677,26},
             [{atom,{1677,26},t_integer},
              {tuple,
               {1677,46},
               [{integer,{1677,47},0},{atom,{1677,49},'+inf'}]}]}]}]}]}]}]}]}.
{function,
 {1685,1},
 validate_bs_get,8,
 [{clause,
   {1685,1},
   [{var,{1685,1},'_'},
    {var,{1685,1},'_'},
    {var,{1685,1},'_'},
    {var,{1685,1},'_'},
    {var,{1685,1},'_'},
    {var,{1685,1},'_'},
    {var,{1685,1},'_'},
    {var,{1685,1},'_'}],
   [[{call,
      {1685,1},
      {remote,{1685,1},{atom,{1685,1},fake},{atom,{1685,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1685,810},{atom,{1685,1},ignore}]},
  {clause,
   {1685,1},
   [{var,{1685,17},'_Op'},
    {var,{1685,22},'Fail'},
    {var,{1685,28},'Ctx0'},
    {var,{1685,34},'Live'},
    {var,{1685,40},'_Stride'},
    {atom,{1685,49},none},
    {var,{1685,55},'_Dst'},
    {var,{1685,61},'Vst'}],
   [],
   [{debug_line,1686,811},
    {match,
     {1686,5},
     {var,{1686,5},'Ctx'},
     {call,
      {1686,11},
      {atom,{1686,11},unpack_typed_arg},
      [{var,{1686,28},'Ctx0'},{var,{1686,34},'Vst'}]}},
    {debug_line,1687,812},
    {call,
     {1687,5},
     {atom,{1687,5},validate_bs_get_1},
     [{var,{1688,7},'Fail'},
      {var,{1688,13},'Ctx'},
      {var,{1688,18},'Live'},
      {var,{1688,24},'Vst'},
      {block,0,
       [{debug_line,1689,813},
        {'fun',
         {1689,7},
         {clauses,
          [{clause,
            {1689,10},
            [{var,{1689,11},'SuccVst'}],
            [],
            [{debug_line,1690,814},
             {call,
              {1690,15},
              {atom,{1690,15},kill_state},
              [{var,{1690,26},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {1692,1},
   [{var,{1692,17},'Op'},
    {var,{1692,21},'Fail'},
    {var,{1692,27},'Ctx0'},
    {var,{1692,33},'Live'},
    {var,{1692,39},'Stride'},
    {var,{1692,47},'Type'},
    {var,{1692,53},'Dst'},
    {var,{1692,58},'Vst'}],
   [],
   [{debug_line,1693,815},
    {match,
     {1693,5},
     {var,{1693,5},'Ctx'},
     {call,
      {1693,11},
      {atom,{1693,11},unpack_typed_arg},
      [{var,{1693,28},'Ctx0'},{var,{1693,34},'Vst'}]}},
    {debug_line,1694,816},
    {call,
     {1694,5},
     {atom,{1694,5},validate_bs_get_1},
     [{var,{1695,7},'Fail'},
      {var,{1695,13},'Ctx'},
      {var,{1695,18},'Live'},
      {var,{1695,24},'Vst'},
      {block,0,
       [{debug_line,1696,817},
        {'fun',
         {1696,7},
         {clauses,
          [{clause,
            {1696,10},
            [{var,{1696,11},'SuccVst0'}],
            [],
            [{debug_line,1697,818},
             {match,
              {1697,15},
              {var,{1697,15},'SuccVst1'},
              {call,
               {1697,26},
               {atom,{1697,26},advance_bs_context},
               [{var,{1697,45},'Ctx'},
                {var,{1697,50},'Stride'},
                {var,{1697,58},'SuccVst0'}]}},
             {debug_line,1698,819},
             {match,
              {1698,15},
              {var,{1698,15},'SuccVst'},
              {call,
               {1698,25},
               {atom,{1698,25},prune_x_regs},
               [{var,{1698,38},'Live'},{var,{1698,44},'SuccVst1'}]}},
             {debug_line,1699,820},
             {call,
              {1699,15},
              {atom,{1699,15},extract_term},
              [{var,{1699,28},'Type'},
               {var,{1699,34},'Op'},
               {block,0,
                [{cons,{1699,38},{var,{1699,39},'Ctx'},{nil,{1699,42}}}]},
               {var,{1699,45},'Dst'},
               {var,{1699,50},'SuccVst'},
               {var,{1699,59},'SuccVst0'}]}]}]}}]}]}]}]}.
{function,
 {1702,1},
 validate_bs_get_all,8,
 [{clause,
   {1702,1},
   [{var,{1702,1},'_'},
    {var,{1702,1},'_'},
    {var,{1702,1},'_'},
    {var,{1702,1},'_'},
    {var,{1702,1},'_'},
    {var,{1702,1},'_'},
    {var,{1702,1},'_'},
    {var,{1702,1},'_'}],
   [[{call,
      {1702,1},
      {remote,{1702,1},{atom,{1702,1},fake},{atom,{1702,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1702,821},{atom,{1702,1},ignore}]},
  {clause,
   {1702,1},
   [{var,{1702,21},'Op'},
    {var,{1702,25},'Fail'},
    {var,{1702,31},'Ctx0'},
    {var,{1702,37},'Live'},
    {var,{1702,43},'Stride'},
    {var,{1702,51},'Type'},
    {var,{1702,57},'Dst'},
    {var,{1702,62},'Vst'}],
   [],
   [{debug_line,1703,822},
    {match,
     {1703,5},
     {var,{1703,5},'Ctx'},
     {call,
      {1703,11},
      {atom,{1703,11},unpack_typed_arg},
      [{var,{1703,28},'Ctx0'},{var,{1703,34},'Vst'}]}},
    {debug_line,1704,823},
    {call,
     {1704,5},
     {atom,{1704,5},validate_bs_get_1},
     [{var,{1705,7},'Fail'},
      {var,{1705,13},'Ctx'},
      {var,{1705,18},'Live'},
      {var,{1705,24},'Vst'},
      {block,0,
       [{debug_line,1706,824},
        {'fun',
         {1706,7},
         {clauses,
          [{clause,
            {1706,10},
            [{var,{1706,11},'SuccVst0'}],
            [],
            [{debug_line,1710,825},
             {match,
              {1710,15},
              {var,{1710,15},'SuccVst1'},
              {call,
               {1710,26},
               {atom,{1710,26},update_bs_unit},
               [{var,{1710,41},'Ctx'},
                {var,{1710,46},'Stride'},
                {var,{1710,54},'SuccVst0'}]}},
             {debug_line,1712,826},
             {match,
              {1712,15},
              {var,{1712,15},'SuccVst2'},
              {call,
               {1712,26},
               {atom,{1712,26},advance_bs_context},
               [{var,{1712,45},'Ctx'},
                {var,{1712,50},'Stride'},
                {var,{1712,58},'SuccVst1'}]}},
             {debug_line,1713,827},
             {match,
              {1713,15},
              {var,{1713,15},'SuccVst'},
              {call,
               {1713,25},
               {atom,{1713,25},prune_x_regs},
               [{var,{1713,38},'Live'},{var,{1713,44},'SuccVst2'}]}},
             {debug_line,1714,828},
             {call,
              {1714,15},
              {atom,{1714,15},extract_term},
              [{var,{1714,28},'Type'},
               {var,{1714,34},'Op'},
               {block,0,
                [{cons,{1714,38},{var,{1714,39},'Ctx'},{nil,{1714,42}}}]},
               {var,{1714,45},'Dst'},
               {var,{1714,50},'SuccVst'},
               {var,{1714,59},'SuccVst0'}]}]}]}}]}]}]}]}.
{function,
    {1717,1},
    validate_bs_get_1,5,
    [{clause,
         {1717,1},
         [{var,{1717,1},'_'},
          {var,{1717,1},'_'},
          {var,{1717,1},'_'},
          {var,{1717,1},'_'},
          {var,{1717,1},'_'}],
         [[{call,
               {1717,1},
               {remote,
                   {1717,1},
                   {atom,{1717,1},fake},
                   {atom,{1717,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1717,829},{atom,{1717,1},ignore}]},
     {clause,
         {1717,1},
         [{var,{1717,19},'Fail'},
          {var,{1717,25},'Ctx'},
          {var,{1717,30},'Live'},
          {var,{1717,36},'Vst'},
          {var,{1717,41},'SuccFun'}],
         [],
         [{debug_line,1718,830},
          {call,
              {1718,5},
              {atom,{1718,5},assert_no_exception},
              [{var,{1718,25},'Fail'}]},
          {debug_line,1720,831},
          {call,
              {1720,5},
              {atom,{1720,5},assert_type},
              [{block,0,
                   [{tuple,
                        {1720,17},
                        [{atom,{1720,17},t_bs_context},
                         {integer,{1720,17},1}]}]},
               {var,{1720,34},'Ctx'},
               {var,{1720,39},'Vst'}]},
          {debug_line,1721,832},
          {call,
              {1721,5},
              {atom,{1721,5},verify_live},
              [{var,{1721,17},'Live'},{var,{1721,23},'Vst'}]},
          {debug_line,1722,833},
          {call,
              {1722,5},
              {atom,{1722,5},verify_y_init},
              [{var,{1722,19},'Vst'}]},
          {debug_line,1724,834},
          {call,
              {1724,5},
              {atom,{1724,5},branch},
              [{var,{1724,12},'Fail'},
               {var,{1724,18},'Vst'},
               {var,{1724,23},'SuccFun'}]}]}]}.
{function,{1729,1},
          validate_bs_skip,4,
          [{clause,{1729,1},
                   [{var,{1729,1},'_'},
                    {var,{1729,1},'_'},
                    {var,{1729,1},'_'},
                    {var,{1729,1},'_'}],
                   [[{call,{1729,1},
                           {remote,{1729,1},
                                   {atom,{1729,1},fake},
                                   {atom,{1729,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1729,835},{atom,{1729,1},ignore}]},
           {clause,{1729,1},
                   [{var,{1729,18},'Fail'},
                    {var,{1729,24},'Ctx'},
                    {var,{1729,29},'Stride'},
                    {var,{1729,37},'Vst'}],
                   [],
                   [{debug_line,1730,836},
                    {call,{1730,5},
                          {atom,{1730,5},validate_bs_skip},
                          [{var,{1730,22},'Fail'},
                           {var,{1730,28},'Ctx'},
                           {var,{1730,33},'Stride'},
                           {atom,{1730,41},no_live},
                           {var,{1730,50},'Vst'}]}]}]}.
{function,
    {1732,1},
    validate_bs_skip,5,
    [{clause,
         {1732,1},
         [{var,{1732,1},'_'},
          {var,{1732,1},'_'},
          {var,{1732,1},'_'},
          {var,{1732,1},'_'},
          {var,{1732,1},'_'}],
         [[{call,
               {1732,1},
               {remote,
                   {1732,1},
                   {atom,{1732,1},fake},
                   {atom,{1732,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1732,837},{atom,{1732,1},ignore}]},
     {clause,
         {1732,1},
         [{var,{1732,18},'Fail'},
          {var,{1732,24},'Ctx'},
          {var,{1732,29},'Stride'},
          {var,{1732,37},'Live'},
          {var,{1732,43},'Vst'}],
         [],
         [{debug_line,1733,838},
          {call,
              {1733,5},
              {atom,{1733,5},assert_no_exception},
              [{var,{1733,25},'Fail'}]},
          {debug_line,1735,839},
          {call,
              {1735,5},
              {atom,{1735,5},assert_type},
              [{block,0,
                   [{tuple,
                        {1735,17},
                        [{atom,{1735,17},t_bs_context},
                         {integer,{1735,17},1}]}]},
               {var,{1735,34},'Ctx'},
               {var,{1735,39},'Vst'}]},
          {debug_line,1737,840},
          {call,
              {1737,5},
              {atom,{1737,5},validate_bs_skip_1},
              [{var,{1737,24},'Fail'},
               {var,{1737,30},'Ctx'},
               {var,{1737,35},'Stride'},
               {var,{1737,43},'Live'},
               {var,{1737,49},'Vst'}]}]}]}.
{function,
 {1739,1},
 validate_bs_skip_1,5,
 [{clause,
   {1739,1},
   [{var,{1739,1},'_'},
    {var,{1739,1},'_'},
    {var,{1739,1},'_'},
    {var,{1739,1},'_'},
    {var,{1739,1},'_'}],
   [[{call,
      {1739,1},
      {remote,{1739,1},{atom,{1739,1},fake},{atom,{1739,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1739,841},{atom,{1739,1},ignore}]},
  {clause,
   {1739,1},
   [{var,{1739,20},'Fail'},
    {var,{1739,26},'Ctx'},
    {var,{1739,31},'Stride'},
    {atom,{1739,39},no_live},
    {var,{1739,48},'Vst'}],
   [],
   [{debug_line,1740,842},
    {call,
     {1740,5},
     {atom,{1740,5},branch},
     [{var,{1740,12},'Fail'},
      {var,{1740,18},'Vst'},
      {block,0,
       [{debug_line,1741,843},
        {'fun',
         {1741,12},
         {clauses,
          [{clause,
            {1741,15},
            [{var,{1741,16},'SuccVst'}],
            [],
            [{debug_line,1742,844},
             {call,
              {1742,20},
              {atom,{1742,20},advance_bs_context},
              [{var,{1742,39},'Ctx'},
               {var,{1742,44},'Stride'},
               {var,{1742,52},'SuccVst'}]}]}]}}]}]}]},
  {clause,
   {1744,1},
   [{var,{1744,20},'Fail'},
    {var,{1744,26},'Ctx'},
    {var,{1744,31},'Stride'},
    {var,{1744,39},'Live'},
    {var,{1744,45},'Vst'}],
   [],
   [{debug_line,1745,845},
    {call,{1745,5},{atom,{1745,5},verify_y_init},[{var,{1745,19},'Vst'}]},
    {debug_line,1746,846},
    {call,
     {1746,5},
     {atom,{1746,5},verify_live},
     [{var,{1746,17},'Live'},{var,{1746,23},'Vst'}]},
    {debug_line,1747,847},
    {call,
     {1747,5},
     {atom,{1747,5},branch},
     [{var,{1747,12},'Fail'},
      {var,{1747,18},'Vst'},
      {block,0,
       [{debug_line,1748,848},
        {'fun',
         {1748,12},
         {clauses,
          [{clause,
            {1748,15},
            [{var,{1748,16},'SuccVst0'}],
            [],
            [{debug_line,1749,849},
             {match,
              {1749,20},
              {var,{1749,20},'SuccVst'},
              {call,
               {1749,30},
               {atom,{1749,30},advance_bs_context},
               [{var,{1749,49},'Ctx'},
                {var,{1749,54},'Stride'},
                {var,{1749,62},'SuccVst0'}]}},
             {debug_line,1750,850},
             {call,
              {1750,20},
              {atom,{1750,20},prune_x_regs},
              [{var,{1750,33},'Live'},{var,{1750,39},'SuccVst'}]}]}]}}]}]}]}]}.
{function,
    {1753,1},
    advance_bs_context,3,
    [{clause,
         {1753,1},
         [{var,{1753,1},'_'},{var,{1753,1},'_'},{var,{1753,1},'_'}],
         [[{call,
               {1753,1},
               {remote,
                   {1753,1},
                   {atom,{1753,1},fake},
                   {atom,{1753,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1753,851},{atom,{1753,1},ignore}]},
     {clause,
         {1753,1},
         [{var,{1753,20},'_Ctx'},{integer,{1753,26},0},{var,{1753,29},'Vst'}],
         [],
         [{debug_line,1756,852},{var,{1756,5},'Vst'}]},
     {clause,
         {1757,1},
         [{var,{1757,20},'_Ctx'},
          {var,{1757,26},'Stride'},
          {var,{1757,34},'_Vst'}],
         [[{op,{1757,52},'<',{var,{1757,45},'Stride'},{integer,{1757,54},0}}]],
         [{debug_line,1759,853},
          {call,
              {1759,5},
              {remote,{1759,5},{atom,{1759,5},erlang},{atom,{1759,5},throw}},
              [{block,0,
                   [{tuple,
                        {1759,11},
                        [{atom,{1759,12},invalid_argument},
                         {tuple,
                             {1759,30},
                             [{atom,{1759,31},negative_stride},
                              {var,{1759,48},'Stride'}]}]}]}]}]},
     {clause,
         {1760,1},
         [{var,{1760,20},'Ctx'},
          {var,{1760,25},'Stride'},
          {var,{1760,33},'Vst0'}],
         [],
         [{debug_line,1761,854},
          {match,
              {1761,5},
              {var,{1761,5},'Vst'},
              {call,
                  {1761,11},
                  {atom,{1761,11},update_type},
                  [{block,0,[{'fun',{1761,23},{function,join,2}}]},
                   {block,0,
                       [{tuple,
                            {1761,35},
                            [{atom,{1761,35},t_bs_context},
                             {var,{1761,59},'Stride'}]}]},
                   {var,{1761,68},'Ctx'},
                   {var,{1761,73},'Vst0'}]}},
          {debug_line,1765,855},
          {call,
              {1765,5},
              {atom,{1765,5},invalidate_current_ms_position},
              [{var,{1765,36},'Ctx'},{var,{1765,41},'Vst'}]}]}]}.
{function,
    {1768,1},
    update_bs_unit,3,
    [{clause,
         {1768,1},
         [{var,{1768,1},'_'},{var,{1768,1},'_'},{var,{1768,1},'_'}],
         [[{call,
               {1768,1},
               {remote,
                   {1768,1},
                   {atom,{1768,1},fake},
                   {atom,{1768,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1768,856},{atom,{1768,1},ignore}]},
     {clause,
         {1768,1},
         [{var,{1768,16},'Ctx'},
          {var,{1768,21},'Unit'},
          {match,
              {1768,27},
              {tuple,
                  {1768,27},
                  [{atom,{1768,27},vst},
                   {var,{1768,40},'St'},
                   {var,{1768,27},'_'},
                   {var,{1768,27},'_'},
                   {var,{1768,27},'_'},
                   {var,{1768,27},'_'},
                   {var,{1768,27},'_'}]},
              {var,{1768,44},'Vst'}}],
         [],
         [{debug_line,1769,857},
          {match,
              {1769,5},
              {var,{1769,5},'CtxRef'},
              {call,
                  {1769,14},
                  {atom,{1769,14},get_reg_vref},
                  [{var,{1769,27},'Ctx'},{var,{1769,32},'Vst'}]}},
          {debug_line,1771,858},
          {'case',
              {1771,5},
              {'case',
                  {1771,10},
                  {var,{1771,10},'St'},
                  [{clause,
                       [{generated,true},{location,{1771,10}}],
                       [{tuple,
                            [{generated,true},{location,{1771,10}}],
                            [{atom,{1771,10},st},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},'_'},
                             {var,{1771,10},rec8}]}],
                       [],
                       [{var,{1771,10},rec8}]},
                   {clause,
                       [{generated,true},{location,{1771,10}}],
                       [{var,{1771,10},rec8}],
                       [],
                       [{call,
                            [{generated,true},{location,{1771,10}}],
                            {remote,
                                [{generated,true},{location,{1771,10}}],
                                {atom,
                                    [{generated,true},{location,{1771,10}}],
                                    erlang},
                                {atom,
                                    [{generated,true},{location,{1771,10}}],
                                    error}},
                            [{tuple,
                                 [{generated,true},{location,{1771,10}}],
                                 [{atom,
                                      [{generated,true},{location,{1771,10}}],
                                      badrecord},
                                  {var,{1771,10},rec8}]}]}]}]},
              [{clause,
                   {1772,9},
                   [{map,
                        {1772,9},
                        [{map_field_exact,
                             {1772,19},
                             {var,{1772,12},'CtxRef'},
                             {var,{1772,22},'PosRef'}}]}],
                   [],
                   [{debug_line,1773,859},
                    {match,
                        {1773,13},
                        {var,{1773,13},'PosType'},
                        {tuple,
                            {1773,23},
                            [{atom,{1773,23},t_abstract},
                             {tuple,
                                 {1773,40},
                                 [{atom,{1773,41},ms_position},
                                  {var,{1773,54},'Unit'}]}]}},
                    {debug_line,1774,860},
                    {call,
                        {1774,13},
                        {atom,{1774,13},update_type},
                        [{block,0,[{'fun',{1774,25},{function,meet,2}}]},
                         {var,{1774,37},'PosType'},
                         {var,{1774,46},'PosRef'},
                         {var,{1774,54},'Vst'}]}]},
               {clause,
                   {1775,9},
                   [{map,{1775,9},[]}],
                   [],
                   [{debug_line,1776,861},{var,{1776,13},'Vst'}]}]}]}]}.
{function,
 {1779,1},
 mark_current_ms_position,3,
 [{clause,
   {1779,1},
   [{var,{1779,1},'_'},{var,{1779,1},'_'},{var,{1779,1},'_'}],
   [[{call,
      {1779,1},
      {remote,{1779,1},{atom,{1779,1},fake},{atom,{1779,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1779,862},{atom,{1779,1},ignore}]},
  {clause,
   {1779,1},
   [{var,{1779,26},'Ctx'},
    {var,{1779,31},'Pos'},
    {match,
     {1779,36},
     {tuple,
      {1779,36},
      [{atom,{1779,36},vst},
       {var,{1779,49},'St0'},
       {var,{1779,36},'_'},
       {var,{1779,36},'_'},
       {var,{1779,36},'_'},
       {var,{1779,36},'_'},
       {var,{1779,36},'_'}]},
     {var,{1779,54},'Vst'}}],
   [],
   [{debug_line,1780,863},
    {match,
     {1780,5},
     {var,{1780,5},'CtxRef'},
     {call,
      {1780,14},
      {atom,{1780,14},get_reg_vref},
      [{var,{1780,27},'Ctx'},{var,{1780,32},'Vst'}]}},
    {debug_line,1781,864},
    {match,
     {1781,5},
     {var,{1781,5},'PosRef'},
     {call,
      {1781,14},
      {atom,{1781,14},get_reg_vref},
      [{var,{1781,27},'Pos'},{var,{1781,32},'Vst'}]}},
    {debug_line,1783,865},
    {match,
     {1783,5},
     {tuple,
      {1783,5},
      [{atom,{1783,5},st},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,5},'_'},
       {var,{1783,22},'MsPos0'}]},
     {var,{1783,32},'St0'}},
    {debug_line,1785,866},
    {match,
     {1785,5},
     {var,{1785,5},'MsPos'},
     {map,
      {1785,19},
      {var,{1785,13},'MsPos0'},
      [{map_field_assoc,
        {1785,29},
        {var,{1785,22},'CtxRef'},
        {var,{1785,32},'PosRef'}}]}},
    {debug_line,1787,867},
    {match,
     {1787,5},
     {var,{1787,5},'St'},
     {block,
      {1787,10},
      [{match,{1787,10},{var,{1787,10},rec9},{var,{1787,10},'St0'}},
       {'case',
        {1787,18},
        {var,{1787,10},rec9},
        [{clause,
          {1787,18},
          [{tuple,
            {1787,18},
            [{atom,{1787,18},st},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'},
             {var,{1787,18},'_'}]}],
          [],
          [{call,
            {1787,18},
            {remote,
             {1787,18},
             {atom,{1787,18},erlang},
             {atom,{1787,18},setelement}},
            [{integer,{1787,18},15},
             {var,{1787,10},rec9},
             {var,{1787,31},'MsPos'}]}]},
         {clause,
          [{generated,true},{location,{1787,18}}],
          [{var,[{generated,true},{location,{1787,18}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1787,18}}],
            {remote,
             [{generated,true},{location,{1787,18}}],
             {atom,[{generated,true},{location,{1787,18}}],erlang},
             {atom,[{generated,true},{location,{1787,18}}],error}},
            [{tuple,
              [{generated,true},{location,{1787,18}}],
              [{atom,[{generated,true},{location,{1787,18}}],badrecord},
               {var,{1787,10},rec9}]}]}]}]}]}},
    {debug_line,1788,868},
    {block,
     {1788,5},
     [{match,{1788,5},{var,{1788,5},rec10},{var,{1788,5},'Vst'}},
      {'case',
       {1788,13},
       {var,{1788,5},rec10},
       [{clause,
         {1788,13},
         [{tuple,
           {1788,13},
           [{atom,{1788,13},vst},
            {var,{1788,13},'_'},
            {var,{1788,13},'_'},
            {var,{1788,13},'_'},
            {var,{1788,13},'_'},
            {var,{1788,13},'_'},
            {var,{1788,13},'_'}]}],
         [],
         [{call,
           {1788,13},
           {remote,
            {1788,13},
            {atom,{1788,13},erlang},
            {atom,{1788,13},setelement}},
           [{integer,{1788,13},2},
            {var,{1788,5},rec10},
            {var,{1788,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{1788,13}}],
         [{var,[{generated,true},{location,{1788,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1788,13}}],
           {remote,
            [{generated,true},{location,{1788,13}}],
            {atom,[{generated,true},{location,{1788,13}}],erlang},
            {atom,[{generated,true},{location,{1788,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1788,13}}],
             [{atom,[{generated,true},{location,{1788,13}}],badrecord},
              {var,{1788,5},rec10}]}]}]}]}]}]}]}.
{function,
 {1790,1},
 invalidate_current_ms_position,2,
 [{clause,
   {1790,1},
   [{var,{1790,1},'_'},{var,{1790,1},'_'}],
   [[{call,
      {1790,1},
      {remote,{1790,1},{atom,{1790,1},fake},{atom,{1790,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1790,869},{atom,{1790,1},ignore}]},
  {clause,
   {1790,1},
   [{var,{1790,32},'Ctx'},
    {match,
     {1790,37},
     {tuple,
      {1790,37},
      [{atom,{1790,37},vst},
       {var,{1790,50},'St0'},
       {var,{1790,37},'_'},
       {var,{1790,37},'_'},
       {var,{1790,37},'_'},
       {var,{1790,37},'_'},
       {var,{1790,37},'_'}]},
     {var,{1790,55},'Vst'}}],
   [],
   [{debug_line,1791,870},
    {match,
     {1791,5},
     {var,{1791,5},'CtxRef'},
     {call,
      {1791,14},
      {atom,{1791,14},get_reg_vref},
      [{var,{1791,27},'Ctx'},{var,{1791,32},'Vst'}]}},
    {debug_line,1792,871},
    {match,
     {1792,5},
     {tuple,
      {1792,5},
      [{atom,{1792,5},st},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,5},'_'},
       {var,{1792,22},'MsPos0'}]},
     {var,{1792,32},'St0'}},
    {debug_line,1794,872},
    {'case',
     {1794,5},
     {var,{1794,10},'MsPos0'},
     [{clause,
       {1795,9},
       [{map,
         {1795,9},
         [{map_field_exact,
           {1795,19},
           {var,{1795,12},'CtxRef'},
           {var,{1795,22},'_'}}]}],
       [],
       [{debug_line,1796,873},
        {match,
         {1796,13},
         {var,{1796,13},'MsPos'},
         {call,
          {1796,21},
          {remote,{1796,25},{atom,{1796,21},maps},{atom,{1796,26},remove}},
          [{var,{1796,33},'CtxRef'},{var,{1796,41},'MsPos0'}]}},
        {debug_line,1797,874},
        {match,
         {1797,13},
         {var,{1797,13},'St'},
         {block,
          {1797,18},
          [{match,{1797,18},{var,{1797,18},rec11},{var,{1797,18},'St0'}},
           {'case',
            {1797,25},
            {var,{1797,18},rec11},
            [{clause,
              {1797,25},
              [{tuple,
                {1797,25},
                [{atom,{1797,25},st},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'},
                 {var,{1797,25},'_'}]}],
              [],
              [{call,
                {1797,25},
                {remote,
                 {1797,25},
                 {atom,{1797,25},erlang},
                 {atom,{1797,25},setelement}},
                [{integer,{1797,25},15},
                 {var,{1797,18},rec11},
                 {var,{1797,38},'MsPos'}]}]},
             {clause,
              [{generated,true},{location,{1797,25}}],
              [{var,[{generated,true},{location,{1797,25}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1797,25}}],
                {remote,
                 [{generated,true},{location,{1797,25}}],
                 {atom,[{generated,true},{location,{1797,25}}],erlang},
                 {atom,[{generated,true},{location,{1797,25}}],error}},
                [{tuple,
                  [{generated,true},{location,{1797,25}}],
                  [{atom,[{generated,true},{location,{1797,25}}],badrecord},
                   {var,{1797,18},rec11}]}]}]}]}]}},
        {debug_line,1798,875},
        {block,
         {1798,13},
         [{match,{1798,13},{var,{1798,13},rec12},{var,{1798,13},'Vst'}},
          {'case',
           {1798,21},
           {var,{1798,13},rec12},
           [{clause,
             {1798,21},
             [{tuple,
               {1798,21},
               [{atom,{1798,21},vst},
                {var,{1798,21},'_'},
                {var,{1798,21},'_'},
                {var,{1798,21},'_'},
                {var,{1798,21},'_'},
                {var,{1798,21},'_'},
                {var,{1798,21},'_'}]}],
             [],
             [{call,
               {1798,21},
               {remote,
                {1798,21},
                {atom,{1798,21},erlang},
                {atom,{1798,21},setelement}},
               [{integer,{1798,21},2},
                {var,{1798,13},rec12},
                {var,{1798,29},'St'}]}]},
            {clause,
             [{generated,true},{location,{1798,21}}],
             [{var,[{generated,true},{location,{1798,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1798,21}}],
               {remote,
                [{generated,true},{location,{1798,21}}],
                {atom,[{generated,true},{location,{1798,21}}],erlang},
                {atom,[{generated,true},{location,{1798,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1798,21}}],
                 [{atom,[{generated,true},{location,{1798,21}}],badrecord},
                  {var,{1798,13},rec12}]}]}]}]}]}]},
      {clause,
       {1799,9},
       [{map,{1799,9},[]}],
       [],
       [{debug_line,1800,876},{var,{1800,13},'Vst'}]}]}]}]}.
{function,
 {1806,1},
 type_test,4,
 [{clause,
   {1806,1},
   [{var,{1806,1},'_'},
    {var,{1806,1},'_'},
    {var,{1806,1},'_'},
    {var,{1806,1},'_'}],
   [[{call,
      {1806,1},
      {remote,{1806,1},{atom,{1806,1},fake},{atom,{1806,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1806,877},{atom,{1806,1},ignore}]},
  {clause,
   {1806,1},
   [{var,{1806,11},'Fail'},
    {var,{1806,17},'Type'},
    {var,{1806,23},'Reg0'},
    {var,{1806,29},'Vst'}],
   [],
   [{debug_line,1807,878},
    {match,
     {1807,5},
     {var,{1807,5},'Reg'},
     {call,
      {1807,11},
      {atom,{1807,11},unpack_typed_arg},
      [{var,{1807,28},'Reg0'},{var,{1807,34},'Vst'}]}},
    {debug_line,1809,879},
    {call,
     {1809,5},
     {atom,{1809,5},assert_term},
     [{var,{1809,17},'Reg'},{var,{1809,22},'Vst'}]},
    {debug_line,1810,880},
    {call,
     {1810,5},
     {atom,{1810,5},assert_no_exception},
     [{var,{1810,25},'Fail'}]},
    {debug_line,1811,881},
    {call,
     {1811,5},
     {atom,{1811,5},branch},
     [{var,{1811,12},'Fail'},
      {var,{1811,18},'Vst'},
      {block,0,
       [{debug_line,1812,882},
        {'fun',
         {1812,12},
         {clauses,
          [{clause,
            {1812,15},
            [{var,{1812,16},'FailVst'}],
            [],
            [{debug_line,1813,883},
             {call,
              {1813,20},
              {atom,{1813,20},update_type},
              [{block,0,[{'fun',{1813,32},{function,subtract,2}}]},
               {var,{1813,48},'Type'},
               {var,{1813,54},'Reg'},
               {var,{1813,59},'FailVst'}]}]}]}}]},
      {block,0,
       [{debug_line,1815,884},
        {'fun',
         {1815,12},
         {clauses,
          [{clause,
            {1815,15},
            [{var,{1815,16},'SuccVst'}],
            [],
            [{debug_line,1816,885},
             {call,
              {1816,20},
              {atom,{1816,20},update_type},
              [{block,0,[{'fun',{1816,32},{function,meet,2}}]},
               {var,{1816,44},'Type'},
               {var,{1816,50},'Reg'},
               {var,{1816,55},'SuccVst'}]}]}]}}]}]}]}]}.
{function,{1827,1},
          validate_mutation,2,
          [{clause,{1827,1},
                   [{var,{1827,1},'_'},{var,{1827,1},'_'}],
                   [[{call,{1827,1},
                           {remote,{1827,1},
                                   {atom,{1827,1},fake},
                                   {atom,{1827,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1827,886},{atom,{1827,1},ignore}]},
           {clause,{1827,1},
                   [{var,{1827,19},'I'},{var,{1827,22},'Vst'}],
                   [],
                   [{debug_line,1828,887},
                    {call,{1828,5},
                          {atom,{1828,5},vm_1},
                          [{var,{1828,10},'I'},{var,{1828,13},'Vst'}]}]}]}.
{function,
 {1830,1},
 vm_1,2,
 [{clause,
   {1830,1},
   [{var,{1830,1},'_'},{var,{1830,1},'_'}],
   [[{call,
      {1830,1},
      {remote,{1830,1},{atom,{1830,1},fake},{atom,{1830,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1830,888},{atom,{1830,1},ignore}]},
  {clause,
   {1830,1},
   [{tuple,
     {1830,6},
     [{atom,{1830,7},move},{var,{1830,12},'_'},{var,{1830,14},'_'}]},
    {var,{1830,18},'Vst'}],
   [],
   [{debug_line,1831,889},{var,{1831,5},'Vst'}]},
  {clause,
   {1832,1},
   [{tuple,
     {1832,6},
     [{atom,{1832,7},swap},{var,{1832,12},'_'},{var,{1832,14},'_'}]},
    {var,{1832,18},'Vst'}],
   [],
   [{debug_line,1833,890},{var,{1833,5},'Vst'}]},
  {clause,
   {1834,1},
   [{tuple,
     {1834,6},
     [{atom,{1834,7},call_ext},
      {integer,{1834,16},3},
      {tuple,
       {1834,18},
       [{atom,{1834,19},extfunc},
        {atom,{1834,27},erlang},
        {atom,{1834,34},setelement},
        {integer,{1834,45},3}]}]},
    {match,
     {1834,50},
     {tuple,
      {1834,50},
      [{atom,{1834,50},vst},
       {match,
        {1834,63},
        {tuple,
         {1834,63},
         [{atom,{1834,63},st},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'},
          {var,{1834,63},'_'}]},
        {var,{1834,69},'St'}},
       {var,{1834,50},'_'},
       {var,{1834,50},'_'},
       {var,{1834,50},'_'},
       {var,{1834,50},'_'},
       {var,{1834,50},'_'}]},
     {var,{1834,73},'Vst'}}],
   [],
   [{debug_line,1835,891},
    {block,
     {1835,5},
     [{match,
       {1835,13},
       {var,{1835,13},rec13},
       {block,
        {1835,21},
        [{match,{1835,21},{var,{1835,21},rec15},{var,{1835,21},'St'}},
         {'case',
          {1835,27},
          {var,{1835,21},rec15},
          [{clause,
            {1835,27},
            [{tuple,
              {1835,27},
              [{atom,{1835,27},st},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'},
               {var,{1835,27},'_'}]}],
            [],
            [{call,
              {1835,27},
              {remote,
               {1835,27},
               {atom,{1835,27},erlang},
               {atom,{1835,27},setelement}},
              [{integer,{1835,27},12},
               {var,{1835,21},rec15},
               {atom,{1835,35},true}]}]},
           {clause,
            [{generated,true},{location,{1835,27}}],
            [{var,[{generated,true},{location,{1835,27}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{1835,27}}],
              {remote,
               [{generated,true},{location,{1835,27}}],
               {atom,[{generated,true},{location,{1835,27}}],erlang},
               {atom,[{generated,true},{location,{1835,27}}],error}},
              [{tuple,
                [{generated,true},{location,{1835,27}}],
                [{atom,[{generated,true},{location,{1835,27}}],badrecord},
                 {var,{1835,21},rec15}]}]}]}]}]}},
      {match,{1835,5},{var,{1835,5},rec14},{var,{1835,5},'Vst'}},
      {'case',
       {1835,13},
       {var,{1835,5},rec14},
       [{clause,
         {1835,13},
         [{tuple,
           {1835,13},
           [{atom,{1835,13},vst},
            {var,{1835,13},'_'},
            {var,{1835,13},'_'},
            {var,{1835,13},'_'},
            {var,{1835,13},'_'},
            {var,{1835,13},'_'},
            {var,{1835,13},'_'}]}],
         [],
         [{call,
           {1835,13},
           {remote,
            {1835,13},
            {atom,{1835,13},erlang},
            {atom,{1835,13},setelement}},
           [{integer,{1835,13},2},
            {var,{1835,5},rec14},
            {var,{1835,13},rec13}]}]},
        {clause,
         [{generated,true},{location,{1835,13}}],
         [{var,[{generated,true},{location,{1835,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1835,13}}],
           {remote,
            [{generated,true},{location,{1835,13}}],
            {atom,[{generated,true},{location,{1835,13}}],erlang},
            {atom,[{generated,true},{location,{1835,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1835,13}}],
             [{atom,[{generated,true},{location,{1835,13}}],badrecord},
              {var,{1835,5},rec14}]}]}]}]}]}]},
  {clause,
   {1836,1},
   [{tuple,
     {1836,6},
     [{atom,{1836,7},set_tuple_element},
      {var,{1836,25},'_'},
      {var,{1836,27},'_'},
      {var,{1836,29},'_'}]},
    {tuple,
     {1836,33},
     [{atom,{1836,33},vst},
      {tuple,
       {1836,46},
       [{atom,{1836,46},st},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {atom,{1836,58},false},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'},
        {var,{1836,46},'_'}]},
      {var,{1836,33},'_'},
      {var,{1836,33},'_'},
      {var,{1836,33},'_'},
      {var,{1836,33},'_'},
      {var,{1836,33},'_'}]}],
   [],
   [{debug_line,1837,892},
    {call,
     {1837,5},
     {atom,{1837,5},error},
     [{atom,{1837,11},illegal_context_for_set_tuple_element}]}]},
  {clause,
   {1838,1},
   [{tuple,
     {1838,6},
     [{atom,{1838,7},set_tuple_element},
      {var,{1838,25},'_'},
      {var,{1838,27},'_'},
      {var,{1838,29},'_'}]},
    {match,
     {1838,33},
     {tuple,
      {1838,33},
      [{atom,{1838,33},vst},
       {tuple,
        {1838,46},
        [{atom,{1838,46},st},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {atom,{1838,58},true},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'},
         {var,{1838,46},'_'}]},
       {var,{1838,33},'_'},
       {var,{1838,33},'_'},
       {var,{1838,33},'_'},
       {var,{1838,33},'_'},
       {var,{1838,33},'_'}]},
     {var,{1838,65},'Vst'}}],
   [],
   [{debug_line,1839,893},{var,{1839,5},'Vst'}]},
  {clause,
   {1840,1},
   [{tuple,
     {1840,6},
     [{atom,{1840,7},get_tuple_element},
      {var,{1840,25},'_'},
      {var,{1840,27},'_'},
      {var,{1840,29},'_'}]},
    {var,{1840,33},'Vst'}],
   [],
   [{debug_line,1841,894},{var,{1841,5},'Vst'}]},
  {clause,
   {1842,1},
   [{tuple,{1842,6},[{atom,{1842,7},line},{var,{1842,12},'_'}]},
    {var,{1842,16},'Vst'}],
   [],
   [{debug_line,1843,895},{var,{1843,5},'Vst'}]},
  {clause,
   {1844,1},
   [{var,{1844,6},'_'},
    {match,
     {1844,9},
     {tuple,
      {1844,9},
      [{atom,{1844,9},vst},
       {match,
        {1844,22},
        {tuple,
         {1844,22},
         [{atom,{1844,22},st},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {atom,{1844,34},true},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'},
          {var,{1844,22},'_'}]},
        {var,{1844,40},'St'}},
       {var,{1844,9},'_'},
       {var,{1844,9},'_'},
       {var,{1844,9},'_'},
       {var,{1844,9},'_'},
       {var,{1844,9},'_'}]},
     {var,{1844,44},'Vst'}}],
   [],
   [{debug_line,1845,896},
    {block,
     {1845,5},
     [{match,
       {1845,13},
       {var,{1845,13},rec16},
       {block,
        {1845,21},
        [{match,{1845,21},{var,{1845,21},rec18},{var,{1845,21},'St'}},
         {'case',
          {1845,27},
          {var,{1845,21},rec18},
          [{clause,
            {1845,27},
            [{tuple,
              {1845,27},
              [{atom,{1845,27},st},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'},
               {var,{1845,27},'_'}]}],
            [],
            [{call,
              {1845,27},
              {remote,
               {1845,27},
               {atom,{1845,27},erlang},
               {atom,{1845,27},setelement}},
              [{integer,{1845,27},12},
               {var,{1845,21},rec18},
               {atom,{1845,35},false}]}]},
           {clause,
            [{generated,true},{location,{1845,27}}],
            [{var,[{generated,true},{location,{1845,27}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{1845,27}}],
              {remote,
               [{generated,true},{location,{1845,27}}],
               {atom,[{generated,true},{location,{1845,27}}],erlang},
               {atom,[{generated,true},{location,{1845,27}}],error}},
              [{tuple,
                [{generated,true},{location,{1845,27}}],
                [{atom,[{generated,true},{location,{1845,27}}],badrecord},
                 {var,{1845,21},rec18}]}]}]}]}]}},
      {match,{1845,5},{var,{1845,5},rec17},{var,{1845,5},'Vst'}},
      {'case',
       {1845,13},
       {var,{1845,5},rec17},
       [{clause,
         {1845,13},
         [{tuple,
           {1845,13},
           [{atom,{1845,13},vst},
            {var,{1845,13},'_'},
            {var,{1845,13},'_'},
            {var,{1845,13},'_'},
            {var,{1845,13},'_'},
            {var,{1845,13},'_'},
            {var,{1845,13},'_'}]}],
         [],
         [{call,
           {1845,13},
           {remote,
            {1845,13},
            {atom,{1845,13},erlang},
            {atom,{1845,13},setelement}},
           [{integer,{1845,13},2},
            {var,{1845,5},rec17},
            {var,{1845,13},rec16}]}]},
        {clause,
         [{generated,true},{location,{1845,13}}],
         [{var,[{generated,true},{location,{1845,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1845,13}}],
           {remote,
            [{generated,true},{location,{1845,13}}],
            {atom,[{generated,true},{location,{1845,13}}],erlang},
            {atom,[{generated,true},{location,{1845,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1845,13}}],
             [{atom,[{generated,true},{location,{1845,13}}],badrecord},
              {var,{1845,5},rec17}]}]}]}]}]}]},
  {clause,
   {1846,1},
   [{var,{1846,6},'_'},{var,{1846,9},'Vst'}],
   [],
   [{debug_line,1846,897},{var,{1846,17},'Vst'}]}]}.
{function,
    {1848,1},
    kill_state,1,
    [{clause,
         {1848,1},
         [{var,{1848,1},'_'}],
         [[{call,
               {1848,1},
               {remote,
                   {1848,1},
                   {atom,{1848,1},fake},
                   {atom,{1848,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1848,898},{atom,{1848,1},ignore}]},
     {clause,
         {1848,1},
         [{var,{1848,12},'Vst'}],
         [],
         [{debug_line,1849,899},
          {block,
              {1849,5},
              [{match,{1849,5},{var,{1849,5},rec19},{var,{1849,5},'Vst'}},
               {'case',
                   {1849,13},
                   {var,{1849,5},rec19},
                   [{clause,
                        {1849,13},
                        [{tuple,
                             {1849,13},
                             [{atom,{1849,13},vst},
                              {var,{1849,13},'_'},
                              {var,{1849,13},'_'},
                              {var,{1849,13},'_'},
                              {var,{1849,13},'_'},
                              {var,{1849,13},'_'},
                              {var,{1849,13},'_'}]}],
                        [],
                        [{call,
                             {1849,13},
                             {remote,
                                 {1849,13},
                                 {atom,{1849,13},erlang},
                                 {atom,{1849,13},setelement}},
                             [{integer,{1849,13},2},
                              {var,{1849,5},rec19},
                              {atom,{1849,21},none}]}]},
                    {clause,
                        [{generated,true},{location,{1849,13}}],
                        [{var,[{generated,true},{location,{1849,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{1849,13}}],
                             {remote,
                                 [{generated,true},{location,{1849,13}}],
                                 {atom,
                                     [{generated,true},{location,{1849,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{1849,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{1849,13}}],
                                  [{atom,
                                       [{generated,true},{location,{1849,13}}],
                                       badrecord},
                                   {var,{1849,5},rec19}]}]}]}]}]}]}]}.
{function,
    {1851,1},
    verify_call_args,3,
    [{clause,
         {1851,1},
         [{var,{1851,1},'_'},{var,{1851,1},'_'},{var,{1851,1},'_'}],
         [[{call,
               {1851,1},
               {remote,
                   {1851,1},
                   {atom,{1851,1},fake},
                   {atom,{1851,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1851,900},{atom,{1851,1},ignore}]},
     {clause,
         {1851,1},
         [{var,{1851,18},'_'},
          {integer,{1851,21},0},
          {tuple,
              {1851,24},
              [{atom,{1851,24},vst},
               {var,{1851,24},'_'},
               {var,{1851,24},'_'},
               {var,{1851,24},'_'},
               {var,{1851,24},'_'},
               {var,{1851,24},'_'},
               {var,{1851,24},'_'}]}],
         [],
         [{debug_line,1852,901},{atom,{1852,5},ok}]},
     {clause,
         {1853,1},
         [{tuple,{1853,18},[{atom,{1853,19},f},{var,{1853,21},'Lbl'}]},
          {var,{1853,27},'Live'},
          {match,
              {1853,33},
              {tuple,
                  {1853,33},
                  [{atom,{1853,33},vst},
                   {var,{1853,33},'_'},
                   {var,{1853,33},'_'},
                   {var,{1853,33},'_'},
                   {var,{1853,33},'_'},
                   {var,{1853,41},'Ft'},
                   {var,{1853,33},'_'}]},
              {var,{1853,45},'Vst'}}],
         [],
         [{debug_line,1854,902},
          {'case',
              {1854,5},
              {var,{1854,10},'Ft'},
              [{clause,
                   {1855,9},
                   [{map,
                        {1855,9},
                        [{map_field_exact,
                             {1855,16},
                             {var,{1855,12},'Lbl'},
                             {var,{1855,19},'FuncInfo'}}]}],
                   [],
                   [{debug_line,1856,903},
                    {match,
                        {1856,13},
                        {map,
                            {1856,13},
                            [{map_field_exact,
                                 {1856,22},
                                 {atom,{1856,16},arity},
                                 {var,{1856,25},'Live'}},
                             {map_field_exact,
                                 {1857,31},
                                 {atom,{1857,16},parameter_info},
                                 {var,{1857,34},'ParamInfo'}}]},
                        {var,{1857,48},'FuncInfo'}},
                    {debug_line,1858,904},
                    {call,
                        {1858,13},
                        {atom,{1858,13},verify_local_args},
                        [{block,0,
                             [{op,{1858,36},
                                  '-',
                                  {var,{1858,31},'Live'},
                                  {integer,{1858,38},1}}]},
                         {var,{1858,41},'ParamInfo'},
                         {block,0,[{map,{1858,52},[]}]},
                         {var,{1858,57},'Vst'}]}]},
               {clause,
                   {1859,9},
                   [{map,{1859,9},[]}],
                   [],
                   [{debug_line,1860,905},
                    {call,
                        {1860,13},
                        {atom,{1860,13},error},
                        [{atom,
                             {1860,19},
                             local_call_to_unknown_function}]}]}]}]},
     {clause,
         {1862,1},
         [{var,{1862,18},'_'},{var,{1862,21},'Live'},{var,{1862,27},'Vst'}],
         [],
         [{debug_line,1863,906},
          {call,
              {1863,5},
              {atom,{1863,5},verify_remote_args_1},
              [{block,0,
                   [{op,{1863,31},
                        '-',
                        {var,{1863,26},'Live'},
                        {integer,{1863,33},1}}]},
               {var,{1863,36},'Vst'}]}]}]}.
{function,
    {1865,1},
    verify_remote_args_1,2,
    [{clause,
         {1865,1},
         [{var,{1865,1},'_'},{var,{1865,1},'_'}],
         [[{call,
               {1865,1},
               {remote,
                   {1865,1},
                   {atom,{1865,1},fake},
                   {atom,{1865,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1865,907},{atom,{1865,1},ignore}]},
     {clause,
         {1865,1},
         [{op,{1865,22},'-',{integer,{1865,23},1}},{var,{1865,26},'_'}],
         [],
         [{debug_line,1866,908},{atom,{1866,5},ok}]},
     {clause,
         {1867,1},
         [{var,{1867,22},'X'},{var,{1867,25},'Vst'}],
         [],
         [{debug_line,1868,909},
          {call,
              {1868,5},
              {atom,{1868,5},assert_durable_term},
              [{block,0,
                   [{tuple,
                        {1868,25},
                        [{atom,{1868,26},x},{var,{1868,29},'X'}]}]},
               {var,{1868,33},'Vst'}]},
          {debug_line,1869,910},
          {call,
              {1869,5},
              {atom,{1869,5},verify_remote_args_1},
              [{block,0,
                   [{op,{1869,28},
                        '-',
                        {var,{1869,26},'X'},
                        {integer,{1869,30},1}}]},
               {var,{1869,33},'Vst'}]}]}]}.
{function,
 {1871,1},
 verify_local_args,4,
 [{clause,
   {1871,1},
   [{var,{1871,1},'_'},
    {var,{1871,1},'_'},
    {var,{1871,1},'_'},
    {var,{1871,1},'_'}],
   [[{call,
      {1871,1},
      {remote,{1871,1},{atom,{1871,1},fake},{atom,{1871,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1871,911},{atom,{1871,1},ignore}]},
  {clause,
   {1871,1},
   [{op,{1871,19},'-',{integer,{1871,20},1}},
    {var,{1871,23},'_ParamInfo'},
    {var,{1871,35},'_CtxIds'},
    {var,{1871,44},'_Vst'}],
   [],
   [{debug_line,1872,912},{atom,{1872,5},ok}]},
  {clause,
   {1873,1},
   [{var,{1873,19},'X'},
    {var,{1873,22},'ParamInfo'},
    {var,{1873,33},'CtxRefs'},
    {var,{1873,42},'Vst'}],
   [],
   [{debug_line,1874,913},
    {match,
     {1874,5},
     {var,{1874,5},'Reg'},
     {tuple,{1874,11},[{atom,{1874,12},x},{var,{1874,15},'X'}]}},
    {debug_line,1875,914},
    {call,
     {1875,5},
     {atom,{1875,5},assert_not_fragile},
     [{var,{1875,24},'Reg'},{var,{1875,29},'Vst'}]},
    {debug_line,1876,915},
    {'case',
     {1876,5},
     {call,
      {1876,10},
      {atom,{1876,10},get_movable_term_type},
      [{var,{1876,32},'Reg'},{var,{1876,37},'Vst'}]},
     [{clause,
       {1877,9},
       [{match,
         {1877,9},
         {tuple,{1877,9},[{atom,{1877,9},t_bs_context},{var,{1877,9},'_'}]},
         {var,{1877,25},'Type'}}],
       [],
       [{debug_line,1878,916},
        {match,
         {1878,13},
         {var,{1878,13},'VRef'},
         {call,
          {1878,20},
          {atom,{1878,20},get_reg_vref},
          [{var,{1878,33},'Reg'},{var,{1878,38},'Vst'}]}},
        {debug_line,1879,917},
        {'case',
         {1879,13},
         {var,{1879,18},'CtxRefs'},
         [{clause,
           {1880,17},
           [{map,
             {1880,17},
             [{map_field_exact,
               {1880,25},
               {var,{1880,20},'VRef'},
               {var,{1880,28},'Other'}}]}],
           [],
           [{debug_line,1881,918},
            {call,
             {1881,21},
             {atom,{1881,21},error},
             [{block,0,
               [{tuple,
                 {1881,27},
                 [{atom,{1881,28},multiple_match_contexts},
                  {cons,
                   {1881,53},
                   {var,{1881,54},'Reg'},
                   {cons,
                    {1881,59},
                    {var,{1881,59},'Other'},
                    {nil,{1881,64}}}}]}]}]}]},
          {clause,
           {1882,17},
           [{map,{1882,17},[]}],
           [],
           [{debug_line,1883,919},
            {call,
             {1883,21},
             {atom,{1883,21},verify_arg_type},
             [{var,{1883,37},'Reg'},
              {var,{1883,42},'Type'},
              {var,{1883,48},'ParamInfo'},
              {var,{1883,59},'Vst'}]},
            {debug_line,1884,920},
            {call,
             {1884,21},
             {atom,{1884,21},verify_local_args},
             [{block,0,
               [{op,{1884,41},'-',{var,{1884,39},'X'},{integer,{1884,43},1}}]},
              {var,{1884,46},'ParamInfo'},
              {block,0,
               [{debug_line,1885,921},
                {map,
                 {1885,46},
                 {var,{1885,39},'CtxRefs'},
                 [{map_field_assoc,
                   {1885,54},
                   {var,{1885,49},'VRef'},
                   {var,{1885,57},'Reg'}}]}]},
              {var,{1885,64},'Vst'}]}]}]}]},
      {clause,
       {1887,9},
       [{var,{1887,9},'Type'}],
       [],
       [{debug_line,1888,922},
        {call,
         {1888,13},
         {atom,{1888,13},verify_arg_type},
         [{var,{1888,29},'Reg'},
          {var,{1888,34},'Type'},
          {var,{1888,40},'ParamInfo'},
          {var,{1888,51},'Vst'}]},
        {debug_line,1889,923},
        {call,
         {1889,13},
         {atom,{1889,13},verify_local_args},
         [{block,0,
           [{op,{1889,33},'-',{var,{1889,31},'X'},{integer,{1889,35},1}}]},
          {var,{1889,38},'ParamInfo'},
          {var,{1889,49},'CtxRefs'},
          {var,{1889,58},'Vst'}]}]}]}]}]}.
{function,
    {1892,1},
    verify_arg_type,4,
    [{clause,
         {1892,1},
         [{var,{1892,1},'_'},
          {var,{1892,1},'_'},
          {var,{1892,1},'_'},
          {var,{1892,1},'_'}],
         [[{call,
               {1892,1},
               {remote,
                   {1892,1},
                   {atom,{1892,1},fake},
                   {atom,{1892,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1892,924},{atom,{1892,1},ignore}]},
     {clause,
         {1892,1},
         [{var,{1892,17},'Reg'},
          {var,{1892,22},'GivenType'},
          {var,{1892,33},'ParamInfo'},
          {var,{1892,44},'Vst'}],
         [],
         [{debug_line,1893,925},
          {'case',
              {1893,5},
              {tuple,
                  {1893,10},
                  [{var,{1893,11},'ParamInfo'},{var,{1893,22},'GivenType'}]},
              [{clause,
                   {1894,9},
                   [{tuple,
                        {1894,9},
                        [{map,
                             {1894,10},
                             [{map_field_exact,
                                  {1894,17},
                                  {var,{1894,13},'Reg'},
                                  {var,{1894,20},'Info'}}]},
                         {tuple,
                             {1894,28},
                             [{atom,{1894,28},t_bs_context},
                              {var,{1894,28},'_'}]}]}],
                   [],
                   [{debug_line,1897,926},
                    {'case',
                        {1897,13},
                        {call,
                            {1897,18},
                            {remote,
                                {1897,18},
                                {atom,{1897,18},lists},
                                {atom,{1897,18},member}},
                            [{atom,{1897,25},accepts_match_context},
                             {var,{1897,48},'Info'}]},
                        [{clause,
                             {1898,17},
                             [{atom,{1898,17},true}],
                             [],
                             [{debug_line,1898,927},
                              {call,
                                  {1898,25},
                                  {atom,{1898,25},verify_arg_type_1},
                                  [{var,{1898,43},'Reg'},
                                   {var,{1898,48},'GivenType'},
                                   {var,{1898,59},'Info'},
                                   {var,{1898,65},'Vst'}]}]},
                         {clause,
                             {1899,17},
                             [{atom,{1899,17},false}],
                             [],
                             [{debug_line,1899,928},
                              {call,
                                  {1899,26},
                                  {atom,{1899,26},error},
                                  [{atom,{1899,32},no_bs_start_match2}]}]}]}]},
               {clause,
                   {1901,9},
                   [{tuple,
                        {1901,9},
                        [{var,{1901,10},'_'},
                         {tuple,
                             {1901,13},
                             [{atom,{1901,13},t_bs_context},
                              {var,{1901,13},'_'}]}]}],
                   [],
                   [{debug_line,1902,929},
                    {call,
                        {1902,13},
                        {atom,{1902,13},error},
                        [{atom,{1902,19},no_bs_start_match2}]}]},
               {clause,
                   {1903,9},
                   [{tuple,
                        {1903,9},
                        [{map,
                             {1903,10},
                             [{map_field_exact,
                                  {1903,17},
                                  {var,{1903,13},'Reg'},
                                  {var,{1903,20},'Info'}}]},
                         {var,{1903,28},'_'}]}],
                   [],
                   [{debug_line,1904,930},
                    {call,
                        {1904,13},
                        {atom,{1904,13},verify_arg_type_1},
                        [{var,{1904,31},'Reg'},
                         {var,{1904,36},'GivenType'},
                         {var,{1904,47},'Info'},
                         {var,{1904,53},'Vst'}]}]},
               {clause,
                   {1905,9},
                   [{tuple,{1905,9},[{map,{1905,10},[]},{var,{1905,15},'_'}]}],
                   [],
                   [{debug_line,1906,931},{atom,{1906,13},ok}]}]}]}]}.
{function,
 {1909,1},
 verify_arg_type_1,4,
 [{clause,
   {1909,1},
   [{var,{1909,1},'_'},
    {var,{1909,1},'_'},
    {var,{1909,1},'_'},
    {var,{1909,1},'_'}],
   [[{call,
      {1909,1},
      {remote,{1909,1},{atom,{1909,1},fake},{atom,{1909,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1909,932},{atom,{1909,1},ignore}]},
  {clause,
   {1909,1},
   [{var,{1909,19},'Reg'},
    {var,{1909,24},'GivenType'},
    {var,{1909,35},'Info'},
    {var,{1909,41},'Vst'}],
   [],
   [{debug_line,1910,933},
    {match,
     {1910,5},
     {var,{1910,5},'RequiredType'},
     {call,
      {1910,20},
      {remote,{1910,29},{atom,{1910,20},proplists},{atom,{1910,30},get_value}},
      [{atom,{1910,40},type},{var,{1910,46},'Info'},{atom,{1910,52},any}]}},
    {debug_line,1911,934},
    {'case',
     {1911,5},
     {call,
      {1911,10},
      {atom,{1911,10},meet},
      [{var,{1911,15},'GivenType'},{var,{1911,26},'RequiredType'}]},
     [{clause,
       {1912,9},
       [{var,{1912,9},'Type'}],
       [[{op,{1912,24},'=/=',{var,{1912,19},'Type'},{atom,{1912,28},none}},
         {op,
          [{generated,true},{location,{1912,34}}],
          'and',
          {op,
           [{generated,true},{location,{1912,34}}],
           'orelse',
           {call,
            [{generated,true},{location,{1912,34}}],
            {remote,
             [{generated,true},{location,{1912,34}}],
             {atom,[{generated,true},{location,{1912,34}}],erlang},
             {atom,[{generated,true},{location,{1912,34}}],is_record}},
            [{var,{1912,34},'Vst'},
             {atom,[{generated,true},{location,{1912,34}}],vst},
             {integer,[{generated,true},{location,{1912,34}}],7}]},
           {atom,[{generated,true},{location,{1912,34}}],fail}},
          {op,
           {1912,48},
           '=:=',
           {call,
            {1912,34},
            {remote,
             {1912,34},
             {atom,{1912,34},erlang},
             {atom,{1912,34},element}},
            [{integer,{1912,34},3},{var,{1912,34},'Vst'}]},
           {atom,{1912,52},weak}}}]],
       [{debug_line,1939,935},{atom,{1939,13},ok}]},
      {clause,
       {1940,9},
       [{var,{1940,9},'GivenType'}],
       [],
       [{debug_line,1941,936},
        {match,
         {1941,13},
         {atom,{1941,13},true},
         {op,
          {1941,30},
          '=/=',
          {var,{1941,20},'GivenType'},
          {atom,{1941,34},none}}},
        {debug_line,1942,937},
        {atom,{1942,13},ok}]},
      {clause,
       {1943,9},
       [{var,{1943,9},'_'}],
       [],
       [{debug_line,1944,938},
        {call,
         {1944,13},
         {atom,{1944,13},error},
         [{block,0,
           [{tuple,
             {1944,19},
             [{atom,{1944,20},bad_arg_type},
              {var,{1944,34},'Reg'},
              {var,{1944,39},'GivenType'},
              {var,{1944,50},'RequiredType'}]}]}]}]}]}]}]}.
{function,
 {1947,1},
 allocate,5,
 [{clause,
   {1947,1},
   [{var,{1947,1},'_'},
    {var,{1947,1},'_'},
    {var,{1947,1},'_'},
    {var,{1947,1},'_'},
    {var,{1947,1},'_'}],
   [[{call,
      {1947,1},
      {remote,{1947,1},{atom,{1947,1},fake},{atom,{1947,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1947,939},{atom,{1947,1},ignore}]},
  {clause,
   {1947,1},
   [{var,{1947,10},'Tag'},
    {var,{1947,15},'Stk'},
    {var,{1947,20},'Heap'},
    {var,{1947,26},'Live'},
    {match,
     {1947,32},
     {tuple,
      {1947,32},
      [{atom,{1947,32},vst},
       {match,
        {1947,45},
        {tuple,
         {1947,45},
         [{atom,{1947,45},st},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {atom,{1947,54},none},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'},
          {var,{1947,45},'_'}]},
        {var,{1947,60},'St'}},
       {var,{1947,32},'_'},
       {var,{1947,32},'_'},
       {var,{1947,32},'_'},
       {var,{1947,32},'_'},
       {var,{1947,32},'_'}]},
     {var,{1947,64},'Vst0'}}],
   [],
   [{debug_line,1948,940},
    {call,
     {1948,5},
     {atom,{1948,5},verify_live},
     [{var,{1948,17},'Live'},{var,{1948,23},'Vst0'}]},
    {debug_line,1949,941},
    {match,
     {1949,5},
     {var,{1949,5},'Vst1'},
     {block,
      {1949,12},
      [{match,
        {1949,21},
        {var,{1949,21},rec20},
        {block,
         {1949,29},
         [{match,{1949,29},{var,{1949,29},rec22},{var,{1949,29},'St'}},
          {'case',
           {1949,35},
           {var,{1949,29},rec22},
           [{clause,
             {1949,35},
             [{tuple,
               {1949,35},
               [{atom,{1949,35},st},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'},
                {var,{1949,35},'_'}]}],
             [],
             [{call,
               {1949,35},
               {remote,
                {1949,35},
                {atom,{1949,35},erlang},
                {atom,{1949,35},setelement}},
               [{integer,{1949,35},7},
                {var,{1949,29},rec22},
                {var,{1949,40},'Stk'}]}]},
            {clause,
             [{generated,true},{location,{1949,35}}],
             [{var,[{generated,true},{location,{1949,35}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1949,35}}],
               {remote,
                [{generated,true},{location,{1949,35}}],
                {atom,[{generated,true},{location,{1949,35}}],erlang},
                {atom,[{generated,true},{location,{1949,35}}],error}},
               [{tuple,
                 [{generated,true},{location,{1949,35}}],
                 [{atom,[{generated,true},{location,{1949,35}}],badrecord},
                  {var,{1949,29},rec22}]}]}]}]}]}},
       {match,{1949,12},{var,{1949,12},rec21},{var,{1949,12},'Vst0'}},
       {'case',
        {1949,21},
        {var,{1949,12},rec21},
        [{clause,
          {1949,21},
          [{tuple,
            {1949,21},
            [{atom,{1949,21},vst},
             {var,{1949,21},'_'},
             {var,{1949,21},'_'},
             {var,{1949,21},'_'},
             {var,{1949,21},'_'},
             {var,{1949,21},'_'},
             {var,{1949,21},'_'}]}],
          [],
          [{call,
            {1949,21},
            {remote,
             {1949,21},
             {atom,{1949,21},erlang},
             {atom,{1949,21},setelement}},
            [{integer,{1949,21},2},
             {var,{1949,12},rec21},
             {var,{1949,21},rec20}]}]},
         {clause,
          [{generated,true},{location,{1949,21}}],
          [{var,[{generated,true},{location,{1949,21}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1949,21}}],
            {remote,
             [{generated,true},{location,{1949,21}}],
             {atom,[{generated,true},{location,{1949,21}}],erlang},
             {atom,[{generated,true},{location,{1949,21}}],error}},
            [{tuple,
              [{generated,true},{location,{1949,21}}],
              [{atom,[{generated,true},{location,{1949,21}}],badrecord},
               {var,{1949,12},rec21}]}]}]}]}]}},
    {debug_line,1950,942},
    {match,
     {1950,5},
     {var,{1950,5},'Vst2'},
     {call,
      {1950,12},
      {atom,{1950,12},prune_x_regs},
      [{var,{1950,25},'Live'},{var,{1950,31},'Vst1'}]}},
    {debug_line,1951,943},
    {match,
     {1951,5},
     {var,{1951,5},'Vst'},
     {call,
      {1951,11},
      {atom,{1951,11},init_stack},
      [{var,{1951,22},'Tag'},
       {block,0,
        [{op,{1951,31},'-',{var,{1951,27},'Stk'},{integer,{1951,33},1}}]},
       {var,{1951,36},'Vst2'}]}},
    {debug_line,1952,944},
    {call,
     {1952,5},
     {atom,{1952,5},heap_alloc},
     [{var,{1952,16},'Heap'},{var,{1952,22},'Vst'}]}]},
  {clause,
   {1953,1},
   [{var,{1953,10},'_'},
    {var,{1953,13},'_'},
    {var,{1953,16},'_'},
    {var,{1953,19},'_'},
    {tuple,
     {1953,22},
     [{atom,{1953,22},vst},
      {tuple,
       {1953,35},
       [{atom,{1953,35},st},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,44},'Numy'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'},
        {var,{1953,35},'_'}]},
      {var,{1953,22},'_'},
      {var,{1953,22},'_'},
      {var,{1953,22},'_'},
      {var,{1953,22},'_'},
      {var,{1953,22},'_'}]}],
   [],
   [{debug_line,1954,945},
    {call,
     {1954,5},
     {atom,{1954,5},error},
     [{block,0,
       [{tuple,
         {1954,11},
         [{atom,{1954,12},existing_stack_frame},
          {tuple,
           {1954,33},
           [{atom,{1954,34},size},{var,{1954,39},'Numy'}]}]}]}]}]}]}.
{function,
 {1956,1},
 deallocate,1,
 [{clause,
   {1956,1},
   [{var,{1956,1},'_'}],
   [[{call,
      {1956,1},
      {remote,{1956,1},{atom,{1956,1},fake},{atom,{1956,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1956,946},{atom,{1956,1},ignore}]},
  {clause,
   {1956,1},
   [{match,
     {1956,12},
     {tuple,
      {1956,12},
      [{atom,{1956,12},vst},
       {var,{1956,25},'St'},
       {var,{1956,12},'_'},
       {var,{1956,12},'_'},
       {var,{1956,12},'_'},
       {var,{1956,12},'_'},
       {var,{1956,12},'_'}]},
     {var,{1956,29},'Vst'}}],
   [],
   [{debug_line,1957,947},
    {block,
     {1957,5},
     [{match,
       {1957,13},
       {var,{1957,13},rec23},
       {block,
        {1957,21},
        [{match,{1957,21},{var,{1957,21},rec25},{var,{1957,21},'St'}},
         {'case',
          {1957,27},
          {var,{1957,21},rec25},
          [{clause,
            {1957,27},
            [{tuple,
              {1957,27},
              [{atom,{1957,27},st},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'},
               {var,{1957,27},'_'}]}],
            [],
            [{call,
              {1957,27},
              {remote,
               {1957,27},
               {atom,{1957,27},erlang},
               {atom,{1957,27},setelement}},
              [{integer,{1957,27},4},
               {call,
                {1957,34},
                {remote,
                 {1957,34},
                 {atom,{1957,34},erlang},
                 {atom,{1957,34},setelement}},
                [{integer,{1957,34},7},
                 {var,{1957,21},rec25},
                 {atom,{1957,39},none}]},
               {map,{1957,30},[]}]}]},
           {clause,
            [{generated,true},{location,{1957,27}}],
            [{var,[{generated,true},{location,{1957,27}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{1957,27}}],
              {remote,
               [{generated,true},{location,{1957,27}}],
               {atom,[{generated,true},{location,{1957,27}}],erlang},
               {atom,[{generated,true},{location,{1957,27}}],error}},
              [{tuple,
                [{generated,true},{location,{1957,27}}],
                [{atom,[{generated,true},{location,{1957,27}}],badrecord},
                 {var,{1957,21},rec25}]}]}]}]}]}},
      {match,{1957,5},{var,{1957,5},rec24},{var,{1957,5},'Vst'}},
      {'case',
       {1957,13},
       {var,{1957,5},rec24},
       [{clause,
         {1957,13},
         [{tuple,
           {1957,13},
           [{atom,{1957,13},vst},
            {var,{1957,13},'_'},
            {var,{1957,13},'_'},
            {var,{1957,13},'_'},
            {var,{1957,13},'_'},
            {var,{1957,13},'_'},
            {var,{1957,13},'_'}]}],
         [],
         [{call,
           {1957,13},
           {remote,
            {1957,13},
            {atom,{1957,13},erlang},
            {atom,{1957,13},setelement}},
           [{integer,{1957,13},2},
            {var,{1957,5},rec24},
            {var,{1957,13},rec23}]}]},
        {clause,
         [{generated,true},{location,{1957,13}}],
         [{var,[{generated,true},{location,{1957,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1957,13}}],
           {remote,
            [{generated,true},{location,{1957,13}}],
            {atom,[{generated,true},{location,{1957,13}}],erlang},
            {atom,[{generated,true},{location,{1957,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1957,13}}],
             [{atom,[{generated,true},{location,{1957,13}}],badrecord},
              {var,{1957,5},rec24}]}]}]}]}]}]}]}.
{function,
    {1959,1},
    init_stack,3,
    [{clause,
         {1959,1},
         [{var,{1959,1},'_'},{var,{1959,1},'_'},{var,{1959,1},'_'}],
         [[{call,
               {1959,1},
               {remote,
                   {1959,1},
                   {atom,{1959,1},fake},
                   {atom,{1959,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1959,948},{atom,{1959,1},ignore}]},
     {clause,
         {1959,1},
         [{var,{1959,12},'_Tag'},
          {op,{1959,18},'-',{integer,{1959,19},1}},
          {var,{1959,22},'Vst'}],
         [],
         [{debug_line,1960,949},{var,{1960,5},'Vst'}]},
     {clause,
         {1961,1},
         [{var,{1961,12},'Tag'},{var,{1961,17},'Y'},{var,{1961,20},'Vst'}],
         [],
         [{debug_line,1962,950},
          {call,
              {1962,5},
              {atom,{1962,5},init_stack},
              [{var,{1962,16},'Tag'},
               {block,0,
                   [{op,{1962,23},
                        '-',
                        {var,{1962,21},'Y'},
                        {integer,{1962,25},1}}]},
               {block,0,
                   [{call,
                        {1962,28},
                        {atom,{1962,28},create_tag},
                        [{var,{1962,39},'Tag'},
                         {atom,{1962,44},allocate},
                         {nil,{1962,54}},
                         {block,0,
                             [{tuple,
                                  {1962,58},
                                  [{atom,{1962,59},y},{var,{1962,61},'Y'}]}]},
                         {var,{1962,65},'Vst'}]}]}]}]}]}.
{function,
 {1964,1},
 trim_stack,4,
 [{clause,
   {1964,1},
   [{var,{1964,1},'_'},
    {var,{1964,1},'_'},
    {var,{1964,1},'_'},
    {var,{1964,1},'_'}],
   [[{call,
      {1964,1},
      {remote,{1964,1},{atom,{1964,1},fake},{atom,{1964,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1964,951},{atom,{1964,1},ignore}]},
  {clause,
   {1964,1},
   [{var,{1964,12},'From'},
    {var,{1964,18},'To'},
    {var,{1964,22},'Top'},
    {match,
     {1964,27},
     {tuple,
      {1964,27},
      [{atom,{1964,27},st},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,34},'Ys0'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'},
       {var,{1964,27},'_'}]},
     {var,{1964,39},'St'}}],
   [[{op,{1964,53},'=:=',{var,{1964,48},'From'},{var,{1964,57},'Top'}}]],
   [{debug_line,1965,952},
    {match,
     {1965,5},
     {var,{1965,5},'Ys'},
     {mc,
      {1965,10},
      {map_field_assoc,
       {1965,16},
       {block,0,[{var,{1965,12},'Reg'}]},
       {block,0,[{var,{1965,19},'Val'}]}},
      [{block,0,[{atom,{1965,46},true}]},
       {m_generate,
        {1965,43},
        {map_field_exact,
         {1965,36},
         {match,
          {1965,26},
          {tuple,{1965,26},[{atom,{1965,27},y},{var,{1965,29},'Y'}]},
          {var,{1965,32},'Reg'}},
         {var,{1965,39},'Val'}},
        {var,{1965,46},'Ys0'}},
       {block,0,[{atom,{1965,53},true}]},
       {op,{1965,53},'<',{var,{1965,51},'Y'},{var,{1965,55},'To'}}]}},
    {debug_line,1966,953},
    {block,
     {1966,5},
     [{match,{1966,5},{var,{1966,5},rec26},{var,{1966,5},'St'}},
      {'case',
       {1966,19},
       {var,{1966,5},rec26},
       [{clause,
         {1966,19},
         [{tuple,
           {1966,19},
           [{atom,{1966,19},st},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'},
            {var,{1966,19},'_'}]}],
         [],
         [{call,
           {1966,19},
           {remote,
            {1966,19},
            {atom,{1966,19},erlang},
            {atom,{1966,19},setelement}},
           [{integer,{1966,19},4},
            {call,
             {1966,11},
             {remote,
              {1966,11},
              {atom,{1966,11},erlang},
              {atom,{1966,11},setelement}},
             [{integer,{1966,11},7},
              {var,{1966,5},rec26},
              {var,{1966,16},'To'}]},
            {var,{1966,22},'Ys'}]}]},
        {clause,
         [{generated,true},{location,{1966,19}}],
         [{var,[{generated,true},{location,{1966,19}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1966,19}}],
           {remote,
            [{generated,true},{location,{1966,19}}],
            {atom,[{generated,true},{location,{1966,19}}],erlang},
            {atom,[{generated,true},{location,{1966,19}}],error}},
           [{tuple,
             [{generated,true},{location,{1966,19}}],
             [{atom,[{generated,true},{location,{1966,19}}],badrecord},
              {var,{1966,5},rec26}]}]}]}]}]}]},
  {clause,
   {1967,1},
   [{var,{1967,12},'From'},
    {var,{1967,18},'To'},
    {var,{1967,22},'Top'},
    {var,{1967,27},'St0'}],
   [],
   [{debug_line,1968,954},
    {match,
     {1968,5},
     {var,{1968,5},'Src'},
     {tuple,{1968,11},[{atom,{1968,12},y},{var,{1968,15},'From'}]}},
    {debug_line,1969,955},
    {match,
     {1969,5},
     {var,{1969,5},'Dst'},
     {tuple,{1969,11},[{atom,{1969,12},y},{var,{1969,15},'To'}]}},
    {debug_line,1971,956},
    {match,
     {1971,5},
     {tuple,
      {1971,5},
      [{atom,{1971,5},st},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,12},'Ys0'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'},
       {var,{1971,5},'_'}]},
     {var,{1971,19},'St0'}},
    {debug_line,1972,957},
    {match,
     {1972,5},
     {var,{1972,5},'Ys'},
     {'case',
      {1972,10},
      {var,{1972,15},'Ys0'},
      [{clause,
        {1973,14},
        [{map,
          {1973,14},
          [{map_field_exact,
            {1973,21},
            {var,{1973,17},'Src'},
            {var,{1973,24},'Ref'}}]}],
        [],
        [{debug_line,1973,958},
         {map,
          {1973,36},
          {var,{1973,33},'Ys0'},
          [{map_field_assoc,
            {1973,43},
            {var,{1973,39},'Dst'},
            {var,{1973,46},'Ref'}}]}]},
       {clause,
        {1974,14},
        [{map,{1974,14},[]}],
        [],
        [{debug_line,1974,959},
         {call,
          {1974,21},
          {atom,{1974,21},error},
          [{block,0,
            [{tuple,
              {1974,27},
              [{atom,{1974,28},invalid_shift},
               {var,{1974,42},'Src'},
               {var,{1974,46},'Dst'}]}]}]}]}]}},
    {debug_line,1976,960},
    {match,
     {1976,5},
     {var,{1976,5},'St'},
     {block,
      {1976,10},
      [{match,{1976,10},{var,{1976,10},rec27},{var,{1976,10},'St0'}},
       {'case',
        {1976,17},
        {var,{1976,10},rec27},
        [{clause,
          {1976,17},
          [{tuple,
            {1976,17},
            [{atom,{1976,17},st},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'},
             {var,{1976,17},'_'}]}],
          [],
          [{call,
            {1976,17},
            {remote,
             {1976,17},
             {atom,{1976,17},erlang},
             {atom,{1976,17},setelement}},
            [{integer,{1976,17},4},
             {var,{1976,10},rec27},
             {var,{1976,20},'Ys'}]}]},
         {clause,
          [{generated,true},{location,{1976,17}}],
          [{var,[{generated,true},{location,{1976,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1976,17}}],
            {remote,
             [{generated,true},{location,{1976,17}}],
             {atom,[{generated,true},{location,{1976,17}}],erlang},
             {atom,[{generated,true},{location,{1976,17}}],error}},
            [{tuple,
              [{generated,true},{location,{1976,17}}],
              [{atom,[{generated,true},{location,{1976,17}}],badrecord},
               {var,{1976,10},rec27}]}]}]}]}]}},
    {debug_line,1978,961},
    {call,
     {1978,5},
     {atom,{1978,5},trim_stack},
     [{block,0,
       [{op,{1978,21},'+',{var,{1978,16},'From'},{integer,{1978,23},1}}]},
      {block,0,
       [{op,{1978,29},'+',{var,{1978,26},'To'},{integer,{1978,31},1}}]},
      {var,{1978,34},'Top'},
      {var,{1978,39},'St'}]}]}]}.
{function,{1980,1},
          test_heap,3,
          [{clause,{1980,1},
                   [{var,{1980,1},'_'},{var,{1980,1},'_'},{var,{1980,1},'_'}],
                   [[{call,{1980,1},
                           {remote,{1980,1},
                                   {atom,{1980,1},fake},
                                   {atom,{1980,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1980,962},{atom,{1980,1},ignore}]},
           {clause,{1980,1},
                   [{var,{1980,11},'Heap'},
                    {var,{1980,17},'Live'},
                    {var,{1980,23},'Vst0'}],
                   [],
                   [{debug_line,1981,963},
                    {call,{1981,5},
                          {atom,{1981,5},verify_live},
                          [{var,{1981,17},'Live'},{var,{1981,23},'Vst0'}]},
                    {debug_line,1982,964},
                    {call,{1982,5},
                          {atom,{1982,5},verify_y_init},
                          [{var,{1982,19},'Vst0'}]},
                    {debug_line,1983,965},
                    {match,{1983,5},
                           {var,{1983,5},'Vst'},
                           {call,{1983,11},
                                 {atom,{1983,11},prune_x_regs},
                                 [{var,{1983,24},'Live'},
                                  {var,{1983,30},'Vst0'}]}},
                    {debug_line,1984,966},
                    {call,{1984,5},
                          {atom,{1984,5},heap_alloc},
                          [{var,{1984,16},'Heap'},{var,{1984,22},'Vst'}]}]}]}.
{function,
 {1986,1},
 heap_alloc,2,
 [{clause,
   {1986,1},
   [{var,{1986,1},'_'},{var,{1986,1},'_'}],
   [[{call,
      {1986,1},
      {remote,{1986,1},{atom,{1986,1},fake},{atom,{1986,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1986,967},{atom,{1986,1},ignore}]},
  {clause,
   {1986,1},
   [{var,{1986,12},'Heap'},
    {match,
     {1986,18},
     {tuple,
      {1986,18},
      [{atom,{1986,18},vst},
       {var,{1986,31},'St0'},
       {var,{1986,18},'_'},
       {var,{1986,18},'_'},
       {var,{1986,18},'_'},
       {var,{1986,18},'_'},
       {var,{1986,18},'_'}]},
     {var,{1986,36},'Vst'}}],
   [],
   [{debug_line,1987,968},
    {match,
     {1987,5},
     {tuple,
      {1987,5},
      [{var,{1987,6},'HeapWords'},
       {var,{1987,17},'Floats'},
       {var,{1987,25},'Funs'}]},
     {call,{1987,33},{atom,{1987,33},heap_alloc_1},[{var,{1987,46},'Heap'}]}},
    {debug_line,1989,969},
    {match,
     {1989,5},
     {var,{1989,5},'St'},
     {block,
      {1989,10},
      [{match,{1989,10},{var,{1989,10},rec28},{var,{1989,10},'St0'}},
       {'case',
        {1989,17},
        {var,{1989,10},rec28},
        [{clause,
          {1989,17},
          [{tuple,
            {1989,17},
            [{atom,{1989,17},st},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'},
             {var,{1989,17},'_'}]}],
          [],
          [{call,
            {1989,17},
            {remote,
             {1989,17},
             {atom,{1989,17},erlang},
             {atom,{1989,17},setelement}},
            [{integer,{1989,17},8},
             {call,
              {1989,39},
              {remote,
               {1989,39},
               {atom,{1989,39},erlang},
               {atom,{1989,39},setelement}},
              [{integer,{1989,39},9},
               {call,
                {1989,29},
                {remote,
                 {1989,29},
                 {atom,{1989,29},erlang},
                 {atom,{1989,29},setelement}},
                [{integer,{1989,29},10},
                 {var,{1989,10},rec28},
                 {var,{1989,32},'Floats'}]},
               {var,{1989,42},'Funs'}]},
             {var,{1989,19},'HeapWords'}]}]},
         {clause,
          [{generated,true},{location,{1989,17}}],
          [{var,[{generated,true},{location,{1989,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1989,17}}],
            {remote,
             [{generated,true},{location,{1989,17}}],
             {atom,[{generated,true},{location,{1989,17}}],erlang},
             {atom,[{generated,true},{location,{1989,17}}],error}},
            [{tuple,
              [{generated,true},{location,{1989,17}}],
              [{atom,[{generated,true},{location,{1989,17}}],badrecord},
               {var,{1989,10},rec28}]}]}]}]}]}},
    {debug_line,1991,970},
    {block,
     {1991,5},
     [{match,{1991,5},{var,{1991,5},rec29},{var,{1991,5},'Vst'}},
      {'case',
       {1991,13},
       {var,{1991,5},rec29},
       [{clause,
         {1991,13},
         [{tuple,
           {1991,13},
           [{atom,{1991,13},vst},
            {var,{1991,13},'_'},
            {var,{1991,13},'_'},
            {var,{1991,13},'_'},
            {var,{1991,13},'_'},
            {var,{1991,13},'_'},
            {var,{1991,13},'_'}]}],
         [],
         [{call,
           {1991,13},
           {remote,
            {1991,13},
            {atom,{1991,13},erlang},
            {atom,{1991,13},setelement}},
           [{integer,{1991,13},2},
            {var,{1991,5},rec29},
            {var,{1991,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{1991,13}}],
         [{var,[{generated,true},{location,{1991,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1991,13}}],
           {remote,
            [{generated,true},{location,{1991,13}}],
            {atom,[{generated,true},{location,{1991,13}}],erlang},
            {atom,[{generated,true},{location,{1991,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1991,13}}],
             [{atom,[{generated,true},{location,{1991,13}}],badrecord},
              {var,{1991,5},rec29}]}]}]}]}]}]}]}.
{function,{1993,1},
          heap_alloc_1,1,
          [{clause,{1993,1},
                   [{var,{1993,1},'_'}],
                   [[{call,{1993,1},
                           {remote,{1993,1},
                                   {atom,{1993,1},fake},
                                   {atom,{1993,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1993,971},{atom,{1993,1},ignore}]},
           {clause,{1993,1},
                   [{tuple,{1993,14},
                           [{atom,{1993,15},alloc},{var,{1993,22},'Alloc'}]}],
                   [],
                   [{debug_line,1994,972},
                    {call,{1994,5},
                          {atom,{1994,5},heap_alloc_2},
                          [{var,{1994,18},'Alloc'},
                           {integer,{1994,25},0},
                           {integer,{1994,28},0},
                           {integer,{1994,31},0}]}]},
           {clause,{1995,1},
                   [{var,{1995,14},'HeapWords'}],
                   [[{call,{1995,30},
                           {remote,{1995,30},
                                   {atom,{1995,30},erlang},
                                   {atom,{1995,30},is_integer}},
                           [{var,{1995,41},'HeapWords'}]}]],
                   [{debug_line,1996,973},
                    {tuple,{1996,5},
                           [{var,{1996,6},'HeapWords'},
                            {integer,{1996,17},0},
                            {integer,{1996,20},0}]}]}]}.
{function,{1998,1},
          heap_alloc_2,4,
          [{clause,{1998,1},
                   [{var,{1998,1},'_'},
                    {var,{1998,1},'_'},
                    {var,{1998,1},'_'},
                    {var,{1998,1},'_'}],
                   [[{call,{1998,1},
                           {remote,{1998,1},
                                   {atom,{1998,1},fake},
                                   {atom,{1998,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1998,974},{atom,{1998,1},ignore}]},
           {clause,{1998,1},
                   [{cons,{1998,14},
                          {tuple,{1998,15},
                                 [{atom,{1998,16},words},
                                  {var,{1998,23},'HeapWords'}]},
                          {var,{1998,36},'T'}},
                    {integer,{1998,40},0},
                    {var,{1998,43},'Floats'},
                    {var,{1998,51},'Funs'}],
                   [],
                   [{debug_line,1999,975},
                    {call,{1999,5},
                          {atom,{1999,5},heap_alloc_2},
                          [{var,{1999,18},'T'},
                           {var,{1999,21},'HeapWords'},
                           {var,{1999,32},'Floats'},
                           {var,{1999,40},'Funs'}]}]},
           {clause,{2000,1},
                   [{cons,{2000,14},
                          {tuple,{2000,15},
                                 [{atom,{2000,16},floats},
                                  {var,{2000,24},'Floats'}]},
                          {var,{2000,34},'T'}},
                    {var,{2000,38},'HeapWords'},
                    {integer,{2000,49},0},
                    {var,{2000,52},'Funs'}],
                   [],
                   [{debug_line,2001,976},
                    {call,{2001,5},
                          {atom,{2001,5},heap_alloc_2},
                          [{var,{2001,18},'T'},
                           {var,{2001,21},'HeapWords'},
                           {var,{2001,32},'Floats'},
                           {var,{2001,40},'Funs'}]}]},
           {clause,{2002,1},
                   [{cons,{2002,14},
                          {tuple,{2002,15},
                                 [{atom,{2002,16},funs},
                                  {var,{2002,22},'Funs'}]},
                          {var,{2002,30},'T'}},
                    {var,{2002,34},'HeapWords'},
                    {var,{2002,45},'Floats'},
                    {integer,{2002,53},0}],
                   [],
                   [{debug_line,2003,977},
                    {call,{2003,5},
                          {atom,{2003,5},heap_alloc_2},
                          [{var,{2003,18},'T'},
                           {var,{2003,21},'HeapWords'},
                           {var,{2003,32},'Floats'},
                           {var,{2003,40},'Funs'}]}]},
           {clause,{2004,1},
                   [{nil,{2004,14}},
                    {var,{2004,18},'HeapWords'},
                    {var,{2004,29},'Floats'},
                    {var,{2004,37},'Funs'}],
                   [],
                   [{debug_line,2005,978},
                    {tuple,{2005,5},
                           [{var,{2005,6},'HeapWords'},
                            {var,{2005,17},'Floats'},
                            {var,{2005,25},'Funs'}]}]}]}.
{function,{2007,1},
          schedule_out,2,
          [{clause,{2007,1},
                   [{var,{2007,1},'_'},{var,{2007,1},'_'}],
                   [[{call,{2007,1},
                           {remote,{2007,1},
                                   {atom,{2007,1},fake},
                                   {atom,{2007,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2007,979},{atom,{2007,1},ignore}]},
           {clause,{2007,1},
                   [{var,{2007,14},'Live'},{var,{2007,20},'Vst0'}],
                   [[{call,{2007,31},
                           {remote,{2007,31},
                                   {atom,{2007,31},erlang},
                                   {atom,{2007,31},is_integer}},
                           [{var,{2007,42},'Live'}]}]],
                   [{debug_line,2008,980},
                    {match,{2008,5},
                           {var,{2008,5},'Vst1'},
                           {call,{2008,12},
                                 {atom,{2008,12},prune_x_regs},
                                 [{var,{2008,25},'Live'},
                                  {var,{2008,31},'Vst0'}]}},
                    {debug_line,2009,981},
                    {match,{2009,5},
                           {var,{2009,5},'Vst2'},
                           {call,{2009,12},
                                 {atom,{2009,12},kill_heap_allocation},
                                 [{var,{2009,33},'Vst1'}]}},
                    {debug_line,2010,982},
                    {match,{2010,5},
                           {var,{2010,5},'Vst'},
                           {call,{2010,11},
                                 {atom,{2010,11},kill_fregs},
                                 [{var,{2010,22},'Vst2'}]}},
                    {debug_line,2011,983},
                    {call,{2011,5},
                          {atom,{2011,5},update_receive_state},
                          [{atom,{2011,26},none},{var,{2011,32},'Vst'}]}]}]}.
{function,{2013,1},
          prune_x_regs,2,
          [{clause,{2013,1},
                   [{var,{2013,1},'_'},{var,{2013,1},'_'}],
                   [[{call,{2013,1},
                           {remote,{2013,1},
                                   {atom,{2013,1},fake},
                                   {atom,{2013,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2013,984},{atom,{2013,1},ignore}]},
           {clause,{2013,1},
                   [{var,{2013,14},'Live'},{var,{2013,20},'Vst'}],
                   [[{call,{2013,30},
                           {remote,{2013,30},
                                   {atom,{2013,30},erlang},
                                   {atom,{2013,30},is_integer}},
                           [{var,{2013,41},'Live'}]}]],
                   [{debug_line,2014,985},
                    {call,{2014,5},
                          {atom,{2014,5},prune_x_regs},
                          [{var,{2014,18},'Live'},
                           {nil,{2014,24}},
                           {var,{2014,28},'Vst'}]}]}]}.
{function,
 {2016,1},
 prune_x_regs,3,
 [{clause,
   {2016,1},
   [{var,{2016,1},'_'},{var,{2016,1},'_'},{var,{2016,1},'_'}],
   [[{call,
      {2016,1},
      {remote,{2016,1},{atom,{2016,1},fake},{atom,{2016,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2016,986},{atom,{2016,1},ignore}]},
  {clause,
   {2016,1},
   [{var,{2016,14},'Live'},
    {var,{2016,20},'Preserved'},
    {match,
     {2016,31},
     {tuple,
      {2016,31},
      [{atom,{2016,31},vst},
       {var,{2016,44},'St0'},
       {var,{2016,31},'_'},
       {var,{2016,31},'_'},
       {var,{2016,31},'_'},
       {var,{2016,31},'_'},
       {var,{2016,31},'_'}]},
     {var,{2016,49},'Vst'}}],
   [[{call,
      {2016,59},
      {remote,{2016,59},{atom,{2016,59},erlang},{atom,{2016,59},is_integer}},
      [{var,{2016,70},'Live'}]}]],
   [{debug_line,2017,987},
    {match,
     {2017,5},
     {tuple,
      {2017,5},
      [{atom,{2017,5},st},
       {var,{2017,5},'_'},
       {var,{2017,29},'Xs0'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'},
       {var,{2017,17},'Fragile0'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'},
       {var,{2017,5},'_'}]},
     {var,{2017,36},'St0'}},
    {debug_line,2018,988},
    {match,
     {2018,5},
     {var,{2018,5},'Fragile'},
     {call,
      {2018,15},
      {remote,{2018,19},{atom,{2018,15},sets},{atom,{2018,20},filter}},
      [{block,0,
        [{'fun',
          {2018,27},
          {clauses,
           [{clause,
             {2018,30},
             [{match,
               {2018,31},
               {tuple,{2018,31},[{atom,{2018,32},x},{var,{2018,34},'X'}]},
               {var,{2018,37},'Reg'}}],
             [],
             [{debug_line,2019,989},
              {'case',
               {2019,37},
               {op,{2019,37},'<',{var,{2019,35},'X'},{var,{2019,39},'Live'}},
               [{clause,
                 {2019,37},
                 [{atom,{2019,37},true}],
                 [],
                 [{atom,{2019,37},true}]},
                {clause,
                 {2019,37},
                 [{atom,{2019,37},false}],
                 [],
                 [{op,
                   {2019,55},
                   '=:=',
                   {var,{2019,51},'Reg'},
                   {var,{2019,59},'Preserved'}}]},
                {clause,
                 [{generated,true},{location,{2019,37}}],
                 [{var,{2019,37},cov1}],
                 [],
                 [{call,
                   {2019,37},
                   {remote,
                    {2019,37},
                    {atom,{2019,37},erlang},
                    {atom,{2019,37},error}},
                   [{block,0,
                     [{tuple,
                       {2019,37},
                       [{atom,{2019,37},badarg},
                        {var,{2019,37},cov1}]}]}]}]}]}]},
            {clause,
             {2020,30},
             [{tuple,{2020,31},[{atom,{2020,32},y},{var,{2020,34},'_'}]}],
             [],
             [{debug_line,2021,990},{atom,{2021,35},true}]}]}}]},
       {var,{2022,31},'Fragile0'}]}},
    {debug_line,2023,991},
    {match,
     {2023,5},
     {var,{2023,5},'Xs'},
     {mc,
      {2023,10},
      {map_field_assoc,
       {2023,16},
       {block,0,[{var,{2023,12},'Reg'}]},
       {block,0,[{var,{2023,19},'Val'}]}},
      [{block,0,[{atom,{2023,46},true}]},
       {m_generate,
        {2023,43},
        {map_field_exact,
         {2023,36},
         {match,
          {2023,26},
          {tuple,{2023,26},[{atom,{2023,27},x},{var,{2023,29},'X'}]},
          {var,{2023,32},'Reg'}},
         {var,{2023,39},'Val'}},
        {var,{2023,46},'Xs0'}},
       {block,0,[{debug_line,2024,992},{atom,{2024,22},true}]},
       {op,
        {2024,22},
        'orelse',
        {op,{2024,15},'<',{var,{2024,13},'X'},{var,{2024,17},'Live'}},
        {op,
         {2024,31},
         '=:=',
         {var,{2024,29},'X'},
         {var,{2024,35},'Preserved'}}}]}},
    {debug_line,2025,993},
    {match,
     {2025,5},
     {var,{2025,5},'St'},
     {block,
      {2025,10},
      [{match,{2025,10},{var,{2025,10},rec30},{var,{2025,10},'St0'}},
       {'case',
        {2025,33},
        {var,{2025,10},rec30},
        [{clause,
          {2025,33},
          [{tuple,
            {2025,33},
            [{atom,{2025,33},st},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'},
             {var,{2025,33},'_'}]}],
          [],
          [{call,
            {2025,33},
            {remote,
             {2025,33},
             {atom,{2025,33},erlang},
             {atom,{2025,33},setelement}},
            [{integer,{2025,33},3},
             {call,
              {2025,17},
              {remote,
               {2025,17},
               {atom,{2025,17},erlang},
               {atom,{2025,17},setelement}},
              [{integer,{2025,17},6},
               {var,{2025,10},rec30},
               {var,{2025,25},'Fragile'}]},
             {var,{2025,36},'Xs'}]}]},
         {clause,
          [{generated,true},{location,{2025,33}}],
          [{var,[{generated,true},{location,{2025,33}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2025,33}}],
            {remote,
             [{generated,true},{location,{2025,33}}],
             {atom,[{generated,true},{location,{2025,33}}],erlang},
             {atom,[{generated,true},{location,{2025,33}}],error}},
            [{tuple,
              [{generated,true},{location,{2025,33}}],
              [{atom,[{generated,true},{location,{2025,33}}],badrecord},
               {var,{2025,10},rec30}]}]}]}]}]}},
    {debug_line,2026,994},
    {block,
     {2026,5},
     [{match,{2026,5},{var,{2026,5},rec31},{var,{2026,5},'Vst'}},
      {'case',
       {2026,13},
       {var,{2026,5},rec31},
       [{clause,
         {2026,13},
         [{tuple,
           {2026,13},
           [{atom,{2026,13},vst},
            {var,{2026,13},'_'},
            {var,{2026,13},'_'},
            {var,{2026,13},'_'},
            {var,{2026,13},'_'},
            {var,{2026,13},'_'},
            {var,{2026,13},'_'}]}],
         [],
         [{call,
           {2026,13},
           {remote,
            {2026,13},
            {atom,{2026,13},erlang},
            {atom,{2026,13},setelement}},
           [{integer,{2026,13},2},
            {var,{2026,5},rec31},
            {var,{2026,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{2026,13}}],
         [{var,[{generated,true},{location,{2026,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{2026,13}}],
           {remote,
            [{generated,true},{location,{2026,13}}],
            {atom,[{generated,true},{location,{2026,13}}],erlang},
            {atom,[{generated,true},{location,{2026,13}}],error}},
           [{tuple,
             [{generated,true},{location,{2026,13}}],
             [{atom,[{generated,true},{location,{2026,13}}],badrecord},
              {var,{2026,5},rec31}]}]}]}]}]}]}]}.
{function,
    {2030,1},
    assert_choices,1,
    [{clause,
         {2030,1},
         [{var,{2030,1},'_'}],
         [[{call,
               {2030,1},
               {remote,
                   {2030,1},
                   {atom,{2030,1},fake},
                   {atom,{2030,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2030,995},{atom,{2030,1},ignore}]},
     {clause,
         {2030,1},
         [{cons,
              {2030,16},
              {tuple,{2030,17},[{var,{2030,18},'Tag'},{var,{2030,22},'_'}]},
              {cons,
                  {2030,25},
                  {tuple,{2030,25},[{atom,{2030,26},f},{var,{2030,28},'_'}]},
                  {var,{2030,31},'T'}}}],
         [],
         [{debug_line,2031,996},
          {'if',
              {2031,5},
              [{clause,
                   {2032,9},
                   [],
                   [[{op,{2032,13},
                         '=:=',
                         {var,{2032,9},'Tag'},
                         {atom,{2032,17},atom}}],
                    [{op,{2032,27},
                         '=:=',
                         {var,{2032,23},'Tag'},
                         {atom,{2032,31},float}}],
                    [{op,{2032,42},
                         '=:=',
                         {var,{2032,38},'Tag'},
                         {atom,{2032,46},integer}}]],
                   [{debug_line,2033,997},
                    {call,
                        {2033,13},
                        {atom,{2033,13},assert_choices_1},
                        [{var,{2033,30},'T'},{var,{2033,33},'Tag'}]}]},
               {clause,
                   {2034,9},
                   [],
                   [[{atom,{2034,9},true}]],
                   [{debug_line,2035,998},
                    {call,
                        {2035,13},
                        {atom,{2035,13},error},
                        [{atom,{2035,19},bad_select_list}]}]}]}]},
     {clause,
         {2037,1},
         [{nil,{2037,16}}],
         [],
         [{debug_line,2037,999},{atom,{2037,23},ok}]}]}.
{function,
    {2039,1},
    assert_choices_1,2,
    [{clause,
         {2039,1},
         [{var,{2039,1},'_'},{var,{2039,1},'_'}],
         [[{call,
               {2039,1},
               {remote,
                   {2039,1},
                   {atom,{2039,1},fake},
                   {atom,{2039,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2039,1000},{atom,{2039,1},ignore}]},
     {clause,
         {2039,1},
         [{cons,
              {2039,18},
              {tuple,{2039,19},[{var,{2039,20},'Tag'},{var,{2039,24},'_'}]},
              {cons,
                  {2039,27},
                  {tuple,{2039,27},[{atom,{2039,28},f},{var,{2039,30},'_'}]},
                  {var,{2039,33},'T'}}},
          {var,{2039,37},'Tag'}],
         [],
         [{debug_line,2040,1001},
          {call,
              {2040,5},
              {atom,{2040,5},assert_choices_1},
              [{var,{2040,22},'T'},{var,{2040,25},'Tag'}]}]},
     {clause,
         {2041,1},
         [{cons,
              {2041,18},
              {var,{2041,19},'_'},
              {cons,
                  {2041,21},
                  {tuple,{2041,21},[{atom,{2041,22},f},{var,{2041,24},'_'}]},
                  {var,{2041,27},'_'}}},
          {var,{2041,31},'_Tag'}],
         [],
         [{debug_line,2042,1002},
          {call,
              {2042,5},
              {atom,{2042,5},error},
              [{atom,{2042,11},bad_select_list}]}]},
     {clause,
         {2043,1},
         [{nil,{2043,18}},{var,{2043,22},'_Tag'}],
         [],
         [{debug_line,2043,1003},{atom,{2043,31},ok}]}]}.
{function,
    {2045,1},
    assert_arities,1,
    [{clause,
         {2045,1},
         [{var,{2045,1},'_'}],
         [[{call,
               {2045,1},
               {remote,
                   {2045,1},
                   {atom,{2045,1},fake},
                   {atom,{2045,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2045,1004},{atom,{2045,1},ignore}]},
     {clause,
         {2045,1},
         [{cons,
              {2045,16},
              {var,{2045,17},'Arity'},
              {cons,
                  {2045,23},
                  {tuple,{2045,23},[{atom,{2045,24},f},{var,{2045,26},'_'}]},
                  {var,{2045,29},'T'}}}],
         [[{call,
               {2045,38},
               {remote,
                   {2045,38},
                   {atom,{2045,38},erlang},
                   {atom,{2045,38},is_integer}},
               [{var,{2045,49},'Arity'}]}]],
         [{debug_line,2046,1005},
          {call,
              {2046,5},
              {atom,{2046,5},assert_arities},
              [{var,{2046,20},'T'}]}]},
     {clause,
         {2047,1},
         [{nil,{2047,16}}],
         [],
         [{debug_line,2047,1006},{atom,{2047,23},ok}]},
     {clause,
         {2048,1},
         [{var,{2048,16},'_'}],
         [],
         [{debug_line,2048,1007},
          {call,
              {2048,22},
              {atom,{2048,22},error},
              [{atom,{2048,28},bad_tuple_arity_list}]}]}]}.
{function,{2050,1},
          is_float_arith_bif,2,
          [{clause,{2050,1},
                   [{var,{2050,1},'_'},{var,{2050,1},'_'}],
                   [[{call,{2050,1},
                           {remote,{2050,1},
                                   {atom,{2050,1},fake},
                                   {atom,{2050,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2050,1008},{atom,{2050,1},ignore}]},
           {clause,{2050,1},
                   [{atom,{2050,20},fadd},
                    {cons,{2050,26},
                          {var,{2050,27},'_'},
                          {cons,{2050,30},
                                {var,{2050,30},'_'},
                                {nil,{2050,31}}}}],
                   [],
                   [{debug_line,2050,1009},{atom,{2050,37},true}]},
           {clause,{2051,1},
                   [{atom,{2051,20},fdiv},
                    {cons,{2051,26},
                          {var,{2051,27},'_'},
                          {cons,{2051,30},
                                {var,{2051,30},'_'},
                                {nil,{2051,31}}}}],
                   [],
                   [{debug_line,2051,1010},{atom,{2051,37},true}]},
           {clause,{2052,1},
                   [{atom,{2052,20},fmul},
                    {cons,{2052,26},
                          {var,{2052,27},'_'},
                          {cons,{2052,30},
                                {var,{2052,30},'_'},
                                {nil,{2052,31}}}}],
                   [],
                   [{debug_line,2052,1011},{atom,{2052,37},true}]},
           {clause,{2053,1},
                   [{atom,{2053,20},fnegate},
                    {cons,{2053,29},{var,{2053,30},'_'},{nil,{2053,31}}}],
                   [],
                   [{debug_line,2053,1012},{atom,{2053,37},true}]},
           {clause,{2054,1},
                   [{atom,{2054,20},fsub},
                    {cons,{2054,26},
                          {var,{2054,27},'_'},
                          {cons,{2054,30},
                                {var,{2054,30},'_'},
                                {nil,{2054,31}}}}],
                   [],
                   [{debug_line,2054,1013},{atom,{2054,37},true}]},
           {clause,{2055,1},
                   [{var,{2055,20},'_'},{var,{2055,23},'_'}],
                   [],
                   [{debug_line,2055,1014},{atom,{2055,29},false}]}]}.
{function,
    {2057,1},
    validate_float_arith_bif,3,
    [{clause,
         {2057,1},
         [{var,{2057,1},'_'},{var,{2057,1},'_'},{var,{2057,1},'_'}],
         [[{call,
               {2057,1},
               {remote,
                   {2057,1},
                   {atom,{2057,1},fake},
                   {atom,{2057,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2057,1015},{atom,{2057,1},ignore}]},
     {clause,
         {2057,1},
         [{var,{2057,26},'Ss'},{var,{2057,30},'Dst'},{var,{2057,35},'Vst'}],
         [],
         [{debug_line,2058,1016},
          {match,
              {2058,5},
              {var,{2058,5},'_'},
              {lc,{2058,9},
                  {block,0,
                      [{call,
                           {2058,10},
                           {atom,{2058,10},assert_freg_set},
                           [{var,{2058,26},'S'},{var,{2058,29},'Vst'}]}]},
                  [{block,0,[{atom,{2058,42},true}]},
                   {generate,
                       {2058,39},
                       {var,{2058,37},'S'},
                       {var,{2058,42},'Ss'}}]}},
          {debug_line,2059,1017},
          {call,
              {2059,5},
              {atom,{2059,5},set_freg},
              [{var,{2059,14},'Dst'},{var,{2059,19},'Vst'}]}]}]}.
{function,{2061,1},
          init_fregs,0,
          [{clause,{2061,1},
                   [],
                   [[{call,{2061,1},
                           {remote,{2061,1},
                                   {atom,{2061,1},fake},
                                   {atom,{2061,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2061,1018},{atom,{2061,1},ignore}]},
           {clause,{2061,1},
                   [],[],
                   [{debug_line,2061,1019},{integer,{2061,17},0}]}]}.
{function,
 {2063,1},
 kill_fregs,1,
 [{clause,
   {2063,1},
   [{var,{2063,1},'_'}],
   [[{call,
      {2063,1},
      {remote,{2063,1},{atom,{2063,1},fake},{atom,{2063,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2063,1020},{atom,{2063,1},ignore}]},
  {clause,
   {2063,1},
   [{match,
     {2063,12},
     {tuple,
      {2063,12},
      [{atom,{2063,12},vst},
       {var,{2063,25},'St0'},
       {var,{2063,12},'_'},
       {var,{2063,12},'_'},
       {var,{2063,12},'_'},
       {var,{2063,12},'_'},
       {var,{2063,12},'_'}]},
     {var,{2063,30},'Vst'}}],
   [],
   [{debug_line,2064,1021},
    {match,
     {2064,5},
     {var,{2064,5},'St'},
     {block,
      {2064,10},
      [{match,
        {2064,17},
        {var,{2064,17},rec32},
        {call,{2064,19},{atom,{2064,19},init_fregs},[]}},
       {match,{2064,10},{var,{2064,10},rec33},{var,{2064,10},'St0'}},
       {'case',
        {2064,17},
        {var,{2064,10},rec33},
        [{clause,
          {2064,17},
          [{tuple,
            {2064,17},
            [{atom,{2064,17},st},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'},
             {var,{2064,17},'_'}]}],
          [],
          [{call,
            {2064,17},
            {remote,
             {2064,17},
             {atom,{2064,17},erlang},
             {atom,{2064,17},setelement}},
            [{integer,{2064,17},5},
             {var,{2064,10},rec33},
             {var,{2064,17},rec32}]}]},
         {clause,
          [{generated,true},{location,{2064,17}}],
          [{var,[{generated,true},{location,{2064,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2064,17}}],
            {remote,
             [{generated,true},{location,{2064,17}}],
             {atom,[{generated,true},{location,{2064,17}}],erlang},
             {atom,[{generated,true},{location,{2064,17}}],error}},
            [{tuple,
              [{generated,true},{location,{2064,17}}],
              [{atom,[{generated,true},{location,{2064,17}}],badrecord},
               {var,{2064,10},rec33}]}]}]}]}]}},
    {debug_line,2065,1022},
    {block,
     {2065,5},
     [{match,{2065,5},{var,{2065,5},rec34},{var,{2065,5},'Vst'}},
      {'case',
       {2065,13},
       {var,{2065,5},rec34},
       [{clause,
         {2065,13},
         [{tuple,
           {2065,13},
           [{atom,{2065,13},vst},
            {var,{2065,13},'_'},
            {var,{2065,13},'_'},
            {var,{2065,13},'_'},
            {var,{2065,13},'_'},
            {var,{2065,13},'_'},
            {var,{2065,13},'_'}]}],
         [],
         [{call,
           {2065,13},
           {remote,
            {2065,13},
            {atom,{2065,13},erlang},
            {atom,{2065,13},setelement}},
           [{integer,{2065,13},2},
            {var,{2065,5},rec34},
            {var,{2065,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{2065,13}}],
         [{var,[{generated,true},{location,{2065,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{2065,13}}],
           {remote,
            [{generated,true},{location,{2065,13}}],
            {atom,[{generated,true},{location,{2065,13}}],erlang},
            {atom,[{generated,true},{location,{2065,13}}],error}},
           [{tuple,
             [{generated,true},{location,{2065,13}}],
             [{atom,[{generated,true},{location,{2065,13}}],badrecord},
              {var,{2065,5},rec34}]}]}]}]}]}]}]}.
{function,
 {2067,1},
 set_freg,2,
 [{clause,
   {2067,1},
   [{var,{2067,1},'_'},{var,{2067,1},'_'}],
   [[{call,
      {2067,1},
      {remote,{2067,1},{atom,{2067,1},fake},{atom,{2067,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2067,1023},{atom,{2067,1},ignore}]},
  {clause,
   {2067,1},
   [{match,
     {2067,10},
     {tuple,{2067,10},[{atom,{2067,11},fr},{var,{2067,14},'Fr'}]},
     {var,{2067,18},'Freg'}},
    {match,
     {2067,24},
     {tuple,
      {2067,24},
      [{atom,{2067,24},vst},
       {match,
        {2067,37},
        {tuple,
         {2067,37},
         [{atom,{2067,37},st},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,43},'Fregs0'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'},
          {var,{2067,37},'_'}]},
        {var,{2067,51},'St'}},
       {var,{2067,24},'_'},
       {var,{2067,24},'_'},
       {var,{2067,24},'_'},
       {var,{2067,24},'_'},
       {var,{2067,24},'_'}]},
     {var,{2067,55},'Vst'}}],
   [],
   [{debug_line,2068,1024},
    {call,{2068,5},{atom,{2068,5},check_limit},[{var,{2068,17},'Freg'}]},
    {debug_line,2069,1025},
    {match,
     {2069,5},
     {var,{2069,5},'Bit'},
     {op,{2069,13},'bsl',{integer,{2069,11},1},{var,{2069,17},'Fr'}}},
    {debug_line,2070,1026},
    {'if',
     {2070,5},
     [{clause,
       {2071,2},
       [],
       [[{op,
          {2071,18},
          '=:=',
          {op,{2071,9},'band',{var,{2071,2},'Fregs0'},{var,{2071,14},'Bit'}},
          {integer,{2071,22},0}}]],
       [{debug_line,2072,1027},
        {match,
         {2072,6},
         {var,{2072,6},'Fregs'},
         {op,{2072,21},'bor',{var,{2072,14},'Fregs0'},{var,{2072,25},'Bit'}}},
        {debug_line,2073,1028},
        {block,
         {2073,6},
         [{match,
           {2073,14},
           {var,{2073,14},rec35},
           {block,
            {2073,22},
            [{match,{2073,22},{var,{2073,22},rec37},{var,{2073,22},'St'}},
             {'case',
              {2073,28},
              {var,{2073,22},rec37},
              [{clause,
                {2073,28},
                [{tuple,
                  {2073,28},
                  [{atom,{2073,28},st},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'},
                   {var,{2073,28},'_'}]}],
                [],
                [{call,
                  {2073,28},
                  {remote,
                   {2073,28},
                   {atom,{2073,28},erlang},
                   {atom,{2073,28},setelement}},
                  [{integer,{2073,28},5},
                   {var,{2073,22},rec37},
                   {var,{2073,30},'Fregs'}]}]},
               {clause,
                [{generated,true},{location,{2073,28}}],
                [{var,[{generated,true},{location,{2073,28}}],'_'}],
                [],
                [{call,
                  [{generated,true},{location,{2073,28}}],
                  {remote,
                   [{generated,true},{location,{2073,28}}],
                   {atom,[{generated,true},{location,{2073,28}}],erlang},
                   {atom,[{generated,true},{location,{2073,28}}],error}},
                  [{tuple,
                    [{generated,true},{location,{2073,28}}],
                    [{atom,[{generated,true},{location,{2073,28}}],badrecord},
                     {var,{2073,22},rec37}]}]}]}]}]}},
          {match,{2073,6},{var,{2073,6},rec36},{var,{2073,6},'Vst'}},
          {'case',
           {2073,14},
           {var,{2073,6},rec36},
           [{clause,
             {2073,14},
             [{tuple,
               {2073,14},
               [{atom,{2073,14},vst},
                {var,{2073,14},'_'},
                {var,{2073,14},'_'},
                {var,{2073,14},'_'},
                {var,{2073,14},'_'},
                {var,{2073,14},'_'},
                {var,{2073,14},'_'}]}],
             [],
             [{call,
               {2073,14},
               {remote,
                {2073,14},
                {atom,{2073,14},erlang},
                {atom,{2073,14},setelement}},
               [{integer,{2073,14},2},
                {var,{2073,6},rec36},
                {var,{2073,14},rec35}]}]},
            {clause,
             [{generated,true},{location,{2073,14}}],
             [{var,[{generated,true},{location,{2073,14}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2073,14}}],
               {remote,
                [{generated,true},{location,{2073,14}}],
                {atom,[{generated,true},{location,{2073,14}}],erlang},
                {atom,[{generated,true},{location,{2073,14}}],error}},
               [{tuple,
                 [{generated,true},{location,{2073,14}}],
                 [{atom,[{generated,true},{location,{2073,14}}],badrecord},
                  {var,{2073,6},rec36}]}]}]}]}]}]},
      {clause,
       {2074,2},
       [],
       [[{atom,{2074,2},true}]],
       [{debug_line,2074,1029},{var,{2074,10},'Vst'}]}]}]},
  {clause,
   {2076,1},
   [{var,{2076,10},'Fr'},{var,{2076,14},'_'}],
   [],
   [{debug_line,2076,1030},
    {call,
     {2076,20},
     {atom,{2076,20},error},
     [{block,0,
       [{tuple,
         {2076,26},
         [{atom,{2076,27},bad_target},{var,{2076,38},'Fr'}]}]}]}]}]}.
{function,
    {2078,1},
    assert_freg_set,2,
    [{clause,
         {2078,1},
         [{var,{2078,1},'_'},{var,{2078,1},'_'}],
         [[{call,
               {2078,1},
               {remote,
                   {2078,1},
                   {atom,{2078,1},fake},
                   {atom,{2078,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2078,1031},{atom,{2078,1},ignore}]},
     {clause,
         {2078,1},
         [{match,
              {2078,17},
              {tuple,{2078,17},[{atom,{2078,18},fr},{var,{2078,21},'Fr'}]},
              {var,{2078,25},'Freg'}},
          {tuple,
              {2078,31},
              [{atom,{2078,31},vst},
               {tuple,
                   {2078,44},
                   [{atom,{2078,44},st},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,50},'Fregs'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'},
                    {var,{2078,44},'_'}]},
               {var,{2078,31},'_'},
               {var,{2078,31},'_'},
               {var,{2078,31},'_'},
               {var,{2078,31},'_'},
               {var,{2078,31},'_'}]}],
         [[{call,
               {2079,8},
               {remote,
                   {2079,8},
                   {atom,{2079,8},erlang},
                   {atom,{2079,8},is_integer}},
               [{var,{2079,19},'Fr'}]},
           {op,{2079,26},'=<',{integer,{2079,24},0},{var,{2079,29},'Fr'}}]],
         [{debug_line,2080,1032},
          {'if',
              {2080,5},
              [{clause,
                   {2081,3},
                   [],
                   [[{op,{2081,24},
                         '=:=',
                         {op,{2081,17},
                             'band',
                             {op,{2081,9},
                                 'bsr',
                                 {var,{2081,3},'Fregs'},
                                 {var,{2081,13},'Fr'}},
                             {integer,{2081,22},1}},
                         {integer,{2081,28},0}}]],
                   [{debug_line,2082,1033},
                    {call,
                        {2082,6},
                        {atom,{2082,6},error},
                        [{block,0,
                             [{tuple,
                                  {2082,12},
                                  [{atom,{2082,13},uninitialized_reg},
                                   {var,{2082,31},'Freg'}]}]}]}]},
               {clause,
                   {2083,2},
                   [],
                   [[{atom,{2083,2},true}]],
                   [{debug_line,2084,1034},{atom,{2084,6},ok}]}]}]},
     {clause,
         {2086,1},
         [{var,{2086,17},'Fr'},{var,{2086,21},'_'}],
         [],
         [{debug_line,2086,1035},
          {call,
              {2086,27},
              {atom,{2086,27},error},
              [{block,0,
                   [{tuple,
                        {2086,33},
                        [{atom,{2086,34},bad_source},
                         {var,{2086,45},'Fr'}]}]}]}]}]}.
{function,
    {2096,1},
    assert_unique_map_keys,1,
    [{clause,
         {2096,1},
         [{var,{2096,1},'_'}],
         [[{call,
               {2096,1},
               {remote,
                   {2096,1},
                   {atom,{2096,1},fake},
                   {atom,{2096,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2096,1036},{atom,{2096,1},ignore}]},
     {clause,
         {2096,1},
         [{nil,{2096,24}}],
         [],
         [{debug_line,2099,1037},
          {call,
              {2099,5},
              {atom,{2099,5},error},
              [{atom,{2099,11},empty_field_list}]}]},
     {clause,
         {2100,1},
         [{cons,{2100,24},{var,{2100,25},'_'},{nil,{2100,26}}}],
         [],
         [{debug_line,2101,1038},{atom,{2101,5},ok}]},
     {clause,
         {2102,1},
         [{match,
              {2102,24},
              {cons,
                  {2102,24},
                  {var,{2102,25},'_'},
                  {cons,{2102,27},{var,{2102,27},'_'},{var,{2102,29},'_'}}},
              {var,{2102,32},'Ls'}}],
         [],
         [{debug_line,2103,1039},
          {match,
              {2103,5},
              {var,{2103,5},'Vs'},
              {lc,{2103,10},
                  {block,
                      {2103,11},
                      [{debug_line,2104,1040},
                       {call,
                           {2104,15},
                           {atom,{2104,15},assert_literal},
                           [{var,{2104,30},'L'}]},
                       {debug_line,2105,1041},
                       {var,{2105,15},'L'}]},
                  [{block,0,[{debug_line,2106,1042},{atom,{2106,23},true}]},
                   {generate,
                       {2106,20},
                       {var,{2106,18},'L'},
                       {var,{2106,23},'Ls'}}]}},
          {debug_line,2107,1043},
          {'case',
              {2107,5},
              {op,{2107,21},
                  '=:=',
                  {call,
                      {2107,10},
                      {remote,
                          {2107,10},
                          {atom,{2107,10},erlang},
                          {atom,{2107,10},length}},
                      [{var,{2107,17},'Vs'}]},
                  {call,
                      {2107,25},
                      {remote,
                          {2107,29},
                          {atom,{2107,25},sets},
                          {atom,{2107,30},size}},
                      [{block,0,
                           [{call,
                                {2107,35},
                                {remote,
                                    {2107,39},
                                    {atom,{2107,35},sets},
                                    {atom,{2107,40},from_list}},
                                [{var,{2107,50},'Vs'}]}]}]}},
              [{clause,
                   {2108,9},
                   [{atom,{2108,9},true}],
                   [],
                   [{debug_line,2108,1044},{atom,{2108,17},ok}]},
               {clause,
                   {2109,9},
                   [{atom,{2109,9},false}],
                   [],
                   [{debug_line,2109,1045},
                    {call,
                        {2109,18},
                        {atom,{2109,18},error},
                        [{atom,{2109,24},keys_not_unique}]}]}]}]}]}.
{function,{2112,1},
          bsm_stride,2,
          [{clause,{2112,1},
                   [{var,{2112,1},'_'},{var,{2112,1},'_'}],
                   [[{call,{2112,1},
                           {remote,{2112,1},
                                   {atom,{2112,1},fake},
                                   {atom,{2112,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2112,1046},{atom,{2112,1},ignore}]},
           {clause,{2112,1},
                   [{tuple,{2112,12},
                           [{atom,{2112,13},integer},{var,{2112,22},'Size'}]},
                    {var,{2112,29},'Unit'}],
                   [],
                   [{debug_line,2113,1047},
                    {op,{2113,10},
                        '*',
                        {var,{2113,5},'Size'},
                        {var,{2113,12},'Unit'}}]},
           {clause,{2114,1},
                   [{var,{2114,12},'_Size'},{var,{2114,19},'Unit'}],
                   [],
                   [{debug_line,2115,1048},{var,{2115,5},'Unit'}]}]}.
{function,{2117,1},
          bsm_size_unit,2,
          [{clause,{2117,1},
                   [{var,{2117,1},'_'},{var,{2117,1},'_'}],
                   [[{call,{2117,1},
                           {remote,{2117,1},
                                   {atom,{2117,1},fake},
                                   {atom,{2117,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2117,1049},{atom,{2117,1},ignore}]},
           {clause,{2117,1},
                   [{tuple,{2117,15},
                           [{atom,{2117,16},integer},{var,{2117,25},'Size'}]},
                    {var,{2117,32},'Unit'}],
                   [],
                   [{debug_line,2118,1050},
                    {op,{2118,18},
                        '*',
                        {call,{2118,5},
                              {remote,{2118,5},
                                      {atom,{2118,5},erlang},
                                      {atom,{2118,5},max}},
                              [{integer,{2118,9},1},{var,{2118,12},'Size'}]},
                        {call,{2118,20},
                              {remote,{2118,20},
                                      {atom,{2118,20},erlang},
                                      {atom,{2118,20},max}},
                              [{integer,{2118,24},1},
                               {var,{2118,27},'Unit'}]}}]},
           {clause,{2119,1},
                   [{var,{2119,15},'_Size'},{var,{2119,22},'Unit'}],
                   [],
                   [{debug_line,2120,1051},
                    {call,{2120,5},
                          {remote,{2120,5},
                                  {atom,{2120,5},erlang},
                                  {atom,{2120,5},max}},
                          [{integer,{2120,9},1},{var,{2120,12},'Unit'}]}]}]}.
{function,
 {2122,1},
 validate_select_val,4,
 [{clause,
   {2122,1},
   [{var,{2122,1},'_'},
    {var,{2122,1},'_'},
    {var,{2122,1},'_'},
    {var,{2122,1},'_'}],
   [[{call,
      {2122,1},
      {remote,{2122,1},{atom,{2122,1},fake},{atom,{2122,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2122,1052},{atom,{2122,1},ignore}]},
  {clause,
   {2122,1},
   [{var,{2122,21},'_Fail'},
    {var,{2122,28},'_Choices'},
    {var,{2122,38},'_Src'},
    {match,
     {2122,44},
     {tuple,
      {2122,44},
      [{atom,{2122,44},vst},
       {atom,{2122,57},none},
       {var,{2122,44},'_'},
       {var,{2122,44},'_'},
       {var,{2122,44},'_'},
       {var,{2122,44},'_'},
       {var,{2122,44},'_'}]},
     {var,{2122,63},'Vst'}}],
   [],
   [{debug_line,2125,1053},{var,{2125,5},'Vst'}]},
  {clause,
   {2126,1},
   [{var,{2126,21},'Fail'},
    {cons,
     {2126,27},
     {var,{2126,28},'Val'},
     {cons,
      {2126,32},
      {tuple,{2126,32},[{atom,{2126,33},f},{var,{2126,35},'L'}]},
      {var,{2126,38},'T'}}},
    {var,{2126,42},'Src'},
    {var,{2126,47},'Vst0'}],
   [],
   [{debug_line,2127,1054},
    {match,
     {2127,5},
     {var,{2127,5},'Vst'},
     {call,
      {2127,11},
      {atom,{2127,11},branch},
      [{var,{2127,18},'L'},
       {var,{2127,21},'Vst0'},
       {block,0,
        [{debug_line,2128,1055},
         {'fun',
          {2128,18},
          {clauses,
           [{clause,
             {2128,21},
             [{var,{2128,22},'BranchVst'}],
             [],
             [{debug_line,2129,1056},
              {call,
               {2129,26},
               {atom,{2129,26},update_eq_types},
               [{var,{2129,42},'Src'},
                {var,{2129,47},'Val'},
                {var,{2129,52},'BranchVst'}]}]}]}}]},
       {block,0,
        [{debug_line,2131,1057},
         {'fun',
          {2131,18},
          {clauses,
           [{clause,
             {2131,21},
             [{var,{2131,22},'FailVst'}],
             [],
             [{debug_line,2132,1058},
              {call,
               {2132,26},
               {atom,{2132,26},update_ne_types},
               [{var,{2132,42},'Src'},
                {var,{2132,47},'Val'},
                {var,{2132,52},'FailVst'}]}]}]}}]}]}},
    {debug_line,2134,1059},
    {call,
     {2134,5},
     {atom,{2134,5},validate_select_val},
     [{var,{2134,25},'Fail'},
      {var,{2134,31},'T'},
      {var,{2134,34},'Src'},
      {var,{2134,39},'Vst'}]}]},
  {clause,
   {2135,1},
   [{var,{2135,21},'Fail'},
    {nil,{2135,27}},
    {var,{2135,31},'_Src'},
    {var,{2135,37},'Vst'}],
   [],
   [{debug_line,2136,1060},
    {call,
     {2136,5},
     {atom,{2136,5},branch},
     [{var,{2136,12},'Fail'},
      {var,{2136,18},'Vst'},
      {block,0,
       [{debug_line,2137,1061},
        {'fun',
         {2137,12},
         {clauses,
          [{clause,
            {2137,15},
            [{var,{2137,16},'SuccVst'}],
            [],
            [{debug_line,2139,1062},
             {call,
              {2139,20},
              {atom,{2139,20},kill_state},
              [{var,{2139,31},'SuccVst'}]}]}]}}]}]}]}]}.
{function,
 {2142,1},
 validate_select_tuple_arity,4,
 [{clause,
   {2142,1},
   [{var,{2142,1},'_'},
    {var,{2142,1},'_'},
    {var,{2142,1},'_'},
    {var,{2142,1},'_'}],
   [[{call,
      {2142,1},
      {remote,{2142,1},{atom,{2142,1},fake},{atom,{2142,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2142,1063},{atom,{2142,1},ignore}]},
  {clause,
   {2142,1},
   [{var,{2142,29},'_Fail'},
    {var,{2142,36},'_Choices'},
    {var,{2142,46},'_Src'},
    {match,
     {2142,52},
     {tuple,
      {2142,52},
      [{atom,{2142,52},vst},
       {atom,{2142,65},none},
       {var,{2142,52},'_'},
       {var,{2142,52},'_'},
       {var,{2142,52},'_'},
       {var,{2142,52},'_'},
       {var,{2142,52},'_'}]},
     {var,{2142,71},'Vst'}}],
   [],
   [{debug_line,2145,1064},{var,{2145,5},'Vst'}]},
  {clause,
   {2146,1},
   [{var,{2146,29},'Fail'},
    {cons,
     {2146,35},
     {var,{2146,36},'Arity'},
     {cons,
      {2146,42},
      {tuple,{2146,42},[{atom,{2146,43},f},{var,{2146,45},'L'}]},
      {var,{2146,48},'T'}}},
    {var,{2146,52},'Tuple'},
    {var,{2146,59},'Vst0'}],
   [],
   [{debug_line,2147,1065},
    {match,
     {2147,5},
     {var,{2147,5},'Type'},
     {tuple,
      {2147,12},
      [{atom,{2147,12},t_tuple},
       {var,{2147,37},'Arity'},
       {atom,{2147,27},true},
       {map,{2147,12},[]}]}},
    {debug_line,2148,1066},
    {match,
     {2148,5},
     {var,{2148,5},'Vst'},
     {call,
      {2148,11},
      {atom,{2148,11},branch},
      [{var,{2148,18},'L'},
       {var,{2148,21},'Vst0'},
       {block,0,
        [{debug_line,2149,1067},
         {'fun',
          {2149,18},
          {clauses,
           [{clause,
             {2149,21},
             [{var,{2149,22},'BranchVst'}],
             [],
             [{debug_line,2150,1068},
              {call,
               {2150,26},
               {atom,{2150,26},update_type},
               [{block,0,[{'fun',{2150,38},{function,meet,2}}]},
                {var,{2150,50},'Type'},
                {var,{2150,56},'Tuple'},
                {var,{2150,63},'BranchVst'}]}]}]}}]},
       {block,0,
        [{debug_line,2152,1069},
         {'fun',
          {2152,18},
          {clauses,
           [{clause,
             {2152,21},
             [{var,{2152,22},'FailVst'}],
             [],
             [{debug_line,2153,1070},
              {call,
               {2153,26},
               {atom,{2153,26},update_type},
               [{block,0,[{'fun',{2153,38},{function,subtract,2}}]},
                {var,{2153,54},'Type'},
                {var,{2153,60},'Tuple'},
                {var,{2153,67},'FailVst'}]}]}]}}]}]}},
    {debug_line,2155,1071},
    {call,
     {2155,5},
     {atom,{2155,5},validate_select_tuple_arity},
     [{var,{2155,33},'Fail'},
      {var,{2155,39},'T'},
      {var,{2155,42},'Tuple'},
      {var,{2155,49},'Vst'}]}]},
  {clause,
   {2156,1},
   [{var,{2156,29},'Fail'},
    {nil,{2156,35}},
    {var,{2156,39},'_'},
    {match,
     {2156,42},
     {tuple,
      {2156,42},
      [{atom,{2156,42},vst},
       {var,{2156,42},'_'},
       {var,{2156,42},'_'},
       {var,{2156,42},'_'},
       {var,{2156,42},'_'},
       {var,{2156,42},'_'},
       {var,{2156,42},'_'}]},
     {var,{2156,49},'Vst'}}],
   [],
   [{debug_line,2157,1072},
    {call,
     {2157,5},
     {atom,{2157,5},branch},
     [{var,{2157,12},'Fail'},
      {var,{2157,18},'Vst'},
      {block,0,
       [{debug_line,2158,1073},
        {'fun',
         {2158,12},
         {clauses,
          [{clause,
            {2158,15},
            [{var,{2158,16},'SuccVst'}],
            [],
            [{debug_line,2160,1074},
             {call,
              {2160,20},
              {atom,{2160,20},kill_state},
              [{var,{2160,31},'SuccVst'}]}]}]}}]}]}]}]}.
{function,
    {2167,1},
    validate_debug_line,3,
    [{clause,
         {2167,1},
         [{var,{2167,1},'_'},{var,{2167,1},'_'},{var,{2167,1},'_'}],
         [[{call,
               {2167,1},
               {remote,
                   {2167,1},
                   {atom,{2167,1},fake},
                   {atom,{2167,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2167,1075},{atom,{2167,1},ignore}]},
     {clause,
         {2167,1},
         [{tuple,{2167,21},[{atom,{2167,22},entry},{var,{2167,28},'Args'}]},
          {var,{2167,35},'Live'},
          {match,
              {2167,41},
              {tuple,
                  {2167,41},
                  [{atom,{2167,41},vst},
                   {var,{2167,54},'St'},
                   {var,{2167,41},'_'},
                   {var,{2167,41},'_'},
                   {var,{2167,41},'_'},
                   {var,{2167,41},'_'},
                   {var,{2167,41},'_'}]},
              {var,{2167,58},'Vst'}}],
         [],
         [{debug_line,2168,1076},
          {'case',
              {2168,5},
              {var,{2168,10},'St'},
              [{clause,
                   {2169,9},
                   [{tuple,
                        {2169,9},
                        [{atom,{2169,9},st},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {atom,{2169,18},none},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'},
                         {var,{2169,9},'_'}]}],
                   [],
                   [{debug_line,2170,1077},{atom,{2170,13},ok}]},
               {clause,
                   {2171,9},
                   [{tuple,
                        {2171,9},
                        [{atom,{2171,9},st},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,18},'ActualStk'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'},
                         {var,{2171,9},'_'}]}],
                   [],
                   [{debug_line,2172,1078},
                    {call,
                        {2172,13},
                        {atom,{2172,13},error},
                        [{block,0,
                             [{tuple,
                                  {2172,19},
                                  [{atom,{2172,20},beam_debug_info},
                                   {atom,{2172,36},frame_size},
                                   {atom,{2172,47},none},
                                   {atom,{2172,52},actual},
                                   {var,{2172,59},'ActualStk'}]}]}]}]}]},
          {debug_line,2174,1079},
          {call,
              {2174,5},
              {atom,{2174,5},verify_live},
              [{var,{2174,17},'Live'},{var,{2174,23},'Vst'}]},
          {debug_line,2175,1080},
          {call,
              {2175,5},
              {atom,{2175,5},verify_y_init},
              [{var,{2175,19},'Vst'}]},
          {debug_line,2176,1081},
          {match,
              {2176,5},
              {var,{2176,5},'_'},
              {lc,{2176,9},
                  {block,0,
                      [{call,
                           {2176,10},
                           {atom,{2176,10},get_term_type},
                           [{var,{2176,24},'Reg'},{var,{2176,29},'Vst'}]}]},
                  [{block,0,[{atom,{2176,55},true}]},
                   {generate_strict,
                       {2176,51},
                       {tuple,
                           {2176,37},
                           [{var,{2176,38},'_Name'},
                            {cons,
                                {2176,44},
                                {var,{2176,45},'Reg'},
                                {nil,{2176,48}}}]},
                       {var,{2176,55},'Args'}}]}},
          {debug_line,2177,1082},
          {call,
              {2177,5},
              {atom,{2177,5},prune_x_regs},
              [{var,{2177,18},'Live'},{var,{2177,24},'Vst'}]}]},
     {clause,
         {2178,1},
         [{tuple,{2178,21},[{var,{2178,22},'Stk'},{var,{2178,26},'Vars'}]},
          {var,{2178,33},'Live'},
          {match,
              {2178,39},
              {tuple,
                  {2178,39},
                  [{atom,{2178,39},vst},
                   {var,{2178,52},'St'},
                   {var,{2178,39},'_'},
                   {var,{2178,39},'_'},
                   {var,{2178,39},'_'},
                   {var,{2178,39},'_'},
                   {var,{2178,39},'_'}]},
              {var,{2178,56},'Vst0'}}],
         [],
         [{debug_line,2179,1083},
          {'case',
              {2179,5},
              {var,{2179,10},'St'},
              [{clause,
                   {2180,9},
                   [{tuple,
                        {2180,9},
                        [{atom,{2180,9},st},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,18},'Stk'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'},
                         {var,{2180,9},'_'}]}],
                   [],
                   [{debug_line,2181,1084},{atom,{2181,13},ok}]},
               {clause,
                   {2182,9},
                   [{tuple,
                        {2182,9},
                        [{atom,{2182,9},st},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,18},'ActualStk'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'},
                         {var,{2182,9},'_'}]}],
                   [],
                   [{debug_line,2183,1085},
                    {call,
                        {2183,13},
                        {atom,{2183,13},error},
                        [{block,0,
                             [{tuple,
                                  {2183,19},
                                  [{atom,{2183,20},beam_debug_info},
                                   {atom,{2183,36},frame_size},
                                   {var,{2183,47},'Stk'},
                                   {atom,{2183,51},actual},
                                   {var,{2183,58},'ActualStk'}]}]}]}]}]},
          {debug_line,2186,1086},
          {call,
              {2186,5},
              {atom,{2186,5},verify_live},
              [{var,{2186,17},'Live'},{var,{2186,23},'Vst0'}]},
          {debug_line,2187,1087},
          {call,
              {2187,5},
              {atom,{2187,5},verify_y_init},
              [{var,{2187,19},'Vst0'}]},
          {debug_line,2188,1088},
          {match,
              {2188,5},
              {var,{2188,5},'Vst'},
              {call,
                  {2188,11},
                  {atom,{2188,11},prune_x_regs},
                  [{var,{2188,24},'Live'},{var,{2188,30},'Vst0'}]}},
          {debug_line,2189,1089},
          {match,
              {2189,5},
              {var,{2189,5},'_'},
              {lc,{2189,9},
                  {block,0,
                      [{call,
                           {2189,10},
                           {atom,{2189,10},validate_dbg_vars},
                           [{var,{2189,28},'Regs'},
                            {var,{2189,34},'Name'},
                            {var,{2189,40},'Vst'}]}]},
                  [{block,0,[{atom,{2189,64},true}]},
                   {generate_strict,
                       {2189,60},
                       {tuple,
                           {2189,48},
                           [{var,{2189,49},'Name'},{var,{2189,54},'Regs'}]},
                       {var,{2189,64},'Vars'}}]}},
          {debug_line,2190,1090},
          {var,{2190,5},'Vst'}]}]}.
{function,{2192,1},
          validate_dbg_vars,3,
          [{clause,{2192,1},
                   [{var,{2192,1},'_'},{var,{2192,1},'_'},{var,{2192,1},'_'}],
                   [[{call,{2192,1},
                           {remote,{2192,1},
                                   {atom,{2192,1},fake},
                                   {atom,{2192,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2192,1091},{atom,{2192,1},ignore}]},
           {clause,{2192,1},
                   [{cons,{2192,19},{var,{2192,20},'R'},{var,{2192,22},'Rs'}},
                    {var,{2192,27},'Name'},
                    {var,{2192,33},'Vst'}],
                   [],
                   [{debug_line,2193,1092},
                    {match,{2193,5},
                           {var,{2193,5},'Type'},
                           {call,{2193,12},
                                 {atom,{2193,12},get_term_type},
                                 [{var,{2193,26},'R'},{var,{2193,29},'Vst'}]}},
                    {debug_line,2194,1093},
                    {call,{2194,5},
                          {atom,{2194,5},validate_dbg_vars},
                          [{var,{2194,23},'Rs'},
                           {var,{2194,27},'Type'},
                           {var,{2194,33},'Name'},
                           {var,{2194,39},'Vst'}]}]}]}.
{function,
    {2196,1},
    validate_dbg_vars,4,
    [{clause,
         {2196,1},
         [{var,{2196,1},'_'},
          {var,{2196,1},'_'},
          {var,{2196,1},'_'},
          {var,{2196,1},'_'}],
         [[{call,
               {2196,1},
               {remote,
                   {2196,1},
                   {atom,{2196,1},fake},
                   {atom,{2196,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2196,1094},{atom,{2196,1},ignore}]},
     {clause,
         {2196,1},
         [{cons,{2196,19},{var,{2196,20},'R'},{var,{2196,22},'Rs'}},
          {var,{2196,27},'Type'},
          {var,{2196,33},'Name'},
          {var,{2196,39},'Vst'}],
         [],
         [{debug_line,2197,1095},
          {'case',
              {2197,5},
              {call,
                  {2197,10},
                  {atom,{2197,10},get_term_type},
                  [{var,{2197,24},'R'},{var,{2197,27},'Vst'}]},
              [{clause,
                   {2198,9},
                   [{var,{2198,9},'Type'}],
                   [],
                   [{debug_line,2199,1096},
                    {call,
                        {2199,13},
                        {atom,{2199,13},validate_dbg_vars},
                        [{var,{2199,31},'Rs'},
                         {var,{2199,35},'Type'},
                         {var,{2199,41},'Name'},
                         {var,{2199,47},'Vst'}]}]},
               {clause,
                   {2200,9},
                   [{var,{2200,9},'OtherType'}],
                   [],
                   [{debug_line,2201,1097},
                    {call,
                        {2201,13},
                        {atom,{2201,13},error},
                        [{block,0,
                             [{tuple,
                                  {2201,19},
                                  [{atom,{2201,20},type_mismatch},
                                   {var,{2201,34},'Name'},
                                   {var,{2201,39},'OtherType'},
                                   {var,{2201,49},'Type'}]}]}]}]}]}]},
     {clause,
         {2203,1},
         [{nil,{2203,19}},
          {var,{2203,23},'_Type'},
          {var,{2203,30},'_Name'},
          {var,{2203,37},'_Vst'}],
         [],
         [{debug_line,2204,1098},{atom,{2204,5},ok}]}]}.
{function,
    {2212,1},
    infer_types,4,
    [{clause,
         {2212,1},
         [{var,{2212,1},'_'},
          {var,{2212,1},'_'},
          {var,{2212,1},'_'},
          {var,{2212,1},'_'}],
         [[{call,
               {2212,1},
               {remote,
                   {2212,1},
                   {atom,{2212,1},fake},
                   {atom,{2212,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2212,1099},{atom,{2212,1},ignore}]},
     {clause,
         {2212,1},
         [{var,{2212,13},'CompareOp'},
          {match,
              {2212,24},
              {tuple,{2212,24},[{var,{2212,25},'Kind'},{var,{2212,30},'_'}]},
              {var,{2212,33},'LHS'}},
          {var,{2212,38},'RHS'},
          {var,{2212,43},'Vst'}],
         [[{op,{2212,58},'=:=',{var,{2212,53},'Kind'},{atom,{2212,62},x}}],
          [{op,{2212,70},'=:=',{var,{2212,65},'Kind'},{atom,{2212,74},y}}]],
         [{debug_line,2213,1100},
          {call,
              {2213,5},
              {atom,{2213,5},infer_types},
              [{var,{2213,17},'CompareOp'},
               {block,0,
                   [{call,
                        {2213,28},
                        {atom,{2213,28},get_reg_vref},
                        [{var,{2213,41},'LHS'},{var,{2213,46},'Vst'}]}]},
               {var,{2213,52},'RHS'},
               {var,{2213,57},'Vst'}]}]},
     {clause,
         {2214,1},
         [{var,{2214,13},'CompareOp'},
          {var,{2214,24},'LHS'},
          {match,
              {2214,29},
              {tuple,{2214,29},[{var,{2214,30},'Kind'},{var,{2214,35},'_'}]},
              {var,{2214,38},'RHS'}},
          {var,{2214,43},'Vst'}],
         [[{op,{2214,58},'=:=',{var,{2214,53},'Kind'},{atom,{2214,62},x}}],
          [{op,{2214,70},'=:=',{var,{2214,65},'Kind'},{atom,{2214,74},y}}]],
         [{debug_line,2215,1101},
          {call,
              {2215,5},
              {atom,{2215,5},infer_types},
              [{var,{2215,17},'CompareOp'},
               {var,{2215,28},'LHS'},
               {block,0,
                   [{call,
                        {2215,33},
                        {atom,{2215,33},get_reg_vref},
                        [{var,{2215,46},'RHS'},{var,{2215,51},'Vst'}]}]},
               {var,{2215,57},'Vst'}]}]},
     {clause,
         {2216,1},
         [{var,{2216,13},'CompareOp'},
          {var,{2216,24},'LHS'},
          {var,{2216,29},'RHS'},
          {match,
              {2216,34},
              {tuple,
                  {2216,34},
                  [{atom,{2216,34},vst},
                   {tuple,
                       {2216,47},
                       [{atom,{2216,47},st},
                        {var,{2216,54},'Vs'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'},
                        {var,{2216,47},'_'}]},
                   {var,{2216,34},'_'},
                   {var,{2216,34},'_'},
                   {var,{2216,34},'_'},
                   {var,{2216,34},'_'},
                   {var,{2216,34},'_'}]},
              {var,{2216,59},'Vst0'}}],
         [],
         [{debug_line,2217,1102},
          {'case',
              {2217,5},
              {var,{2217,10},'Vs'},
              [{clause,
                   {2218,9},
                   [{map,
                        {2218,9},
                        [{map_field_exact,
                             {2218,16},
                             {var,{2218,12},'LHS'},
                             {var,{2218,19},'LEntry'}},
                         {map_field_exact,
                             {2218,31},
                             {var,{2218,27},'RHS'},
                             {var,{2218,34},'REntry'}}]}],
                   [],
                   [{debug_line,2219,1103},
                    {match,
                        {2219,13},
                        {var,{2219,13},'Vst'},
                        {call,
                            {2219,19},
                            {atom,{2219,19},infer_types_1},
                            [{var,{2219,33},'LEntry'},
                             {block,0,
                                 [{call,
                                      {2219,41},
                                      {atom,{2219,41},canonical_value},
                                      [{var,{2219,57},'RHS'},
                                       {var,{2219,62},'Vst0'}]}]},
                             {var,{2220,33},'CompareOp'},
                             {var,{2220,44},'Vst0'}]}},
                    {debug_line,2221,1104},
                    {call,
                        {2221,13},
                        {atom,{2221,13},infer_types_1},
                        [{var,{2221,27},'REntry'},
                         {block,0,
                             [{call,
                                  {2221,35},
                                  {atom,{2221,35},canonical_value},
                                  [{var,{2221,51},'LHS'},
                                   {var,{2221,56},'Vst'}]}]},
                         {var,{2222,27},'CompareOp'},
                         {var,{2222,38},'Vst'}]}]},
               {clause,
                   {2223,9},
                   [{map,
                        {2223,9},
                        [{map_field_exact,
                             {2223,16},
                             {var,{2223,12},'LHS'},
                             {var,{2223,19},'LEntry'}}]}],
                   [],
                   [{debug_line,2224,1105},
                    {call,
                        {2224,13},
                        {atom,{2224,13},infer_types_1},
                        [{var,{2224,27},'LEntry'},
                         {block,0,
                             [{call,
                                  {2224,35},
                                  {atom,{2224,35},canonical_value},
                                  [{var,{2224,51},'RHS'},
                                   {var,{2224,56},'Vst0'}]}]},
                         {var,{2224,63},'CompareOp'},
                         {var,{2224,74},'Vst0'}]}]},
               {clause,
                   {2225,9},
                   [{map,
                        {2225,9},
                        [{map_field_exact,
                             {2225,16},
                             {var,{2225,12},'RHS'},
                             {var,{2225,19},'REntry'}}]}],
                   [],
                   [{debug_line,2226,1106},
                    {call,
                        {2226,13},
                        {atom,{2226,13},infer_types_1},
                        [{var,{2226,27},'REntry'},
                         {block,0,
                             [{call,
                                  {2226,35},
                                  {atom,{2226,35},canonical_value},
                                  [{var,{2226,51},'LHS'},
                                   {var,{2226,56},'Vst0'}]}]},
                         {var,{2226,63},'CompareOp'},
                         {var,{2226,74},'Vst0'}]}]},
               {clause,
                   {2227,9},
                   [{map,{2227,9},[]}],
                   [],
                   [{debug_line,2228,1107},{var,{2228,13},'Vst0'}]}]}]}]}.
{function,
 {2231,1},
 infer_types_1,4,
 [{clause,
   {2231,1},
   [{var,{2231,1},'_'},
    {var,{2231,1},'_'},
    {var,{2231,1},'_'},
    {var,{2231,1},'_'}],
   [[{call,
      {2231,1},
      {remote,{2231,1},{atom,{2231,1},fake},{atom,{2231,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2231,1108},{atom,{2231,1},ignore}]},
  {clause,
   {2231,1},
   [{tuple,
     {2231,15},
     [{atom,{2231,15},value},
      {tuple,{2231,25},[{atom,{2231,26},bif},{atom,{2231,30},'and'}]},
      {cons,
       {2231,42},
       {var,{2231,43},'LHS'},
       {cons,{2231,47},{var,{2231,47},'RHS'},{nil,{2231,50}}}},
      {var,{2231,15},'_'}]},
    {var,{2231,54},'Val'},
    {var,{2231,59},'Op'},
    {var,{2231,63},'Vst0'}],
   [],
   [{debug_line,2232,1109},
    {'case',
     {2232,5},
     {var,{2232,10},'Val'},
     [{clause,
       {2233,9},
       [{tuple,{2233,9},[{atom,{2233,10},atom},{var,{2233,16},'Bool'}]}],
       [[{op,{2233,30},'=:=',{var,{2233,27},'Op'},{atom,{2233,34},eq_exact}},
         {var,{2233,44},'Bool'}],
        [{op,{2233,53},'=:=',{var,{2233,50},'Op'},{atom,{2233,57},ne_exact}},
         {op,{2233,67},'not',{var,{2233,71},'Bool'}}]],
       [{debug_line,2234,1110},
        {match,
         {2234,13},
         {var,{2234,13},'Vst'},
         {call,
          {2234,19},
          {atom,{2234,19},update_eq_types},
          [{var,{2234,35},'LHS'},
           {block,0,
            [{tuple,{2234,40},[{atom,{2234,41},atom},{atom,{2234,46},true}]}]},
           {var,{2234,53},'Vst0'}]}},
        {debug_line,2235,1111},
        {call,
         {2235,13},
         {atom,{2235,13},update_eq_types},
         [{var,{2235,29},'RHS'},
          {block,0,
           [{tuple,{2235,34},[{atom,{2235,35},atom},{atom,{2235,40},true}]}]},
          {var,{2235,47},'Vst'}]}]},
      {clause,
       {2236,9},
       [{var,{2236,9},'_'}],
       [],
       [{debug_line,2239,1112},{var,{2239,13},'Vst0'}]}]}]},
  {clause,
   {2241,1},
   [{tuple,
     {2241,15},
     [{atom,{2241,15},value},
      {tuple,{2241,25},[{atom,{2241,26},bif},{atom,{2241,30},'or'}]},
      {cons,
       {2241,41},
       {var,{2241,42},'LHS'},
       {cons,{2241,46},{var,{2241,46},'RHS'},{nil,{2241,49}}}},
      {var,{2241,15},'_'}]},
    {var,{2241,53},'Val'},
    {var,{2241,58},'Op'},
    {var,{2241,62},'Vst0'}],
   [],
   [{debug_line,2242,1113},
    {'case',
     {2242,5},
     {var,{2242,10},'Val'},
     [{clause,
       {2243,9},
       [{tuple,{2243,9},[{atom,{2243,10},atom},{var,{2243,16},'Bool'}]}],
       [[{op,{2243,30},'=:=',{var,{2243,27},'Op'},{atom,{2243,34},eq_exact}},
         {op,{2243,44},'not',{var,{2243,48},'Bool'}}],
        [{op,{2243,57},'=:=',{var,{2243,54},'Op'},{atom,{2243,61},ne_exact}},
         {var,{2243,71},'Bool'}]],
       [{debug_line,2244,1114},
        {match,
         {2244,13},
         {var,{2244,13},'Vst'},
         {call,
          {2244,19},
          {atom,{2244,19},update_eq_types},
          [{var,{2244,35},'LHS'},
           {block,0,
            [{tuple,
              {2244,40},
              [{atom,{2244,41},atom},{atom,{2244,46},false}]}]},
           {var,{2244,54},'Vst0'}]}},
        {debug_line,2245,1115},
        {call,
         {2245,13},
         {atom,{2245,13},update_eq_types},
         [{var,{2245,29},'RHS'},
          {block,0,
           [{tuple,{2245,34},[{atom,{2245,35},atom},{atom,{2245,40},false}]}]},
          {var,{2245,48},'Vst'}]}]},
      {clause,
       {2246,9},
       [{var,{2246,9},'_'}],
       [],
       [{debug_line,2249,1116},{var,{2249,13},'Vst0'}]}]}]},
  {clause,
   {2251,1},
   [{tuple,
     {2251,15},
     [{atom,{2251,15},value},
      {tuple,{2251,25},[{atom,{2251,26},bif},{atom,{2251,30},'not'}]},
      {cons,{2251,42},{var,{2251,43},'Arg'},{nil,{2251,46}}},
      {var,{2251,15},'_'}]},
    {var,{2251,50},'Val'},
    {var,{2251,55},'Op'},
    {var,{2251,59},'Vst0'}],
   [],
   [{debug_line,2252,1117},
    {'case',
     {2252,5},
     {var,{2252,10},'Val'},
     [{clause,
       {2253,9},
       [{tuple,{2253,9},[{atom,{2253,10},atom},{var,{2253,16},'Bool'}]}],
       [[{op,{2253,30},'=:=',{var,{2253,27},'Op'},{atom,{2253,34},eq_exact}},
         {var,{2253,44},'Bool'}],
        [{op,{2253,53},'=:=',{var,{2253,50},'Op'},{atom,{2253,57},ne_exact}},
         {op,{2253,67},'not',{var,{2253,71},'Bool'}}]],
       [{debug_line,2254,1118},
        {call,
         {2254,13},
         {atom,{2254,13},update_eq_types},
         [{var,{2254,29},'Arg'},
          {block,0,
           [{tuple,{2254,34},[{atom,{2254,35},atom},{atom,{2254,40},false}]}]},
          {var,{2254,48},'Vst0'}]}]},
      {clause,
       {2255,9},
       [{tuple,{2255,9},[{atom,{2255,10},atom},{var,{2255,16},'Bool'}]}],
       [[{op,{2255,30},'=:=',{var,{2255,27},'Op'},{atom,{2255,34},eq_exact}},
         {op,{2255,44},'not',{var,{2255,48},'Bool'}}],
        [{op,{2255,57},'=:=',{var,{2255,54},'Op'},{atom,{2255,61},ne_exact}},
         {var,{2255,71},'Bool'}]],
       [{debug_line,2256,1119},
        {call,
         {2256,13},
         {atom,{2256,13},update_eq_types},
         [{var,{2256,29},'Arg'},
          {block,0,
           [{tuple,{2256,34},[{atom,{2256,35},atom},{atom,{2256,40},true}]}]},
          {var,{2256,47},'Vst0'}]}]},
      {clause,
       {2257,9},
       [{var,{2257,9},'_'}],
       [],
       [{debug_line,2258,1120},{var,{2258,13},'Vst0'}]}]}]},
  {clause,
   {2260,1},
   [{tuple,
     {2260,15},
     [{atom,{2260,15},value},
      {tuple,{2260,25},[{atom,{2260,26},bif},{atom,{2260,30},'=:='}]},
      {cons,
       {2260,42},
       {var,{2260,43},'LHS'},
       {cons,{2260,47},{var,{2260,47},'RHS'},{nil,{2260,50}}}},
      {var,{2260,15},'_'}]},
    {var,{2260,54},'Val'},
    {var,{2260,59},'Op'},
    {var,{2260,63},'Vst'}],
   [],
   [{debug_line,2261,1121},
    {'case',
     {2261,5},
     {var,{2261,10},'Val'},
     [{clause,
       {2262,9},
       [{tuple,{2262,9},[{atom,{2262,10},atom},{var,{2262,16},'Bool'}]}],
       [[{op,{2262,30},'=:=',{var,{2262,27},'Op'},{atom,{2262,34},eq_exact}},
         {var,{2262,44},'Bool'}],
        [{op,{2262,53},'=:=',{var,{2262,50},'Op'},{atom,{2262,57},ne_exact}},
         {op,{2262,67},'not',{var,{2262,71},'Bool'}}]],
       [{debug_line,2263,1122},
        {call,
         {2263,13},
         {atom,{2263,13},update_eq_types},
         [{var,{2263,29},'LHS'},
          {var,{2263,34},'RHS'},
          {var,{2263,39},'Vst'}]}]},
      {clause,
       {2264,9},
       [{tuple,{2264,9},[{atom,{2264,10},atom},{var,{2264,16},'Bool'}]}],
       [[{op,{2264,30},'=:=',{var,{2264,27},'Op'},{atom,{2264,34},ne_exact}},
         {var,{2264,44},'Bool'}],
        [{op,{2264,53},'=:=',{var,{2264,50},'Op'},{atom,{2264,57},eq_exact}},
         {op,{2264,67},'not',{var,{2264,71},'Bool'}}]],
       [{debug_line,2265,1123},
        {call,
         {2265,13},
         {atom,{2265,13},update_ne_types},
         [{var,{2265,29},'LHS'},
          {var,{2265,34},'RHS'},
          {var,{2265,39},'Vst'}]}]},
      {clause,
       {2266,9},
       [{var,{2266,9},'_'}],
       [],
       [{debug_line,2267,1124},{var,{2267,13},'Vst'}]}]}]},
  {clause,
   {2269,1},
   [{tuple,
     {2269,15},
     [{atom,{2269,15},value},
      {tuple,{2269,25},[{atom,{2269,26},bif},{atom,{2269,30},'=/='}]},
      {cons,
       {2269,42},
       {var,{2269,43},'LHS'},
       {cons,{2269,47},{var,{2269,47},'RHS'},{nil,{2269,50}}}},
      {var,{2269,15},'_'}]},
    {var,{2269,54},'Val'},
    {var,{2269,59},'Op'},
    {var,{2269,63},'Vst'}],
   [],
   [{debug_line,2270,1125},
    {'case',
     {2270,5},
     {var,{2270,10},'Val'},
     [{clause,
       {2271,9},
       [{tuple,{2271,9},[{atom,{2271,10},atom},{var,{2271,16},'Bool'}]}],
       [[{op,{2271,30},'=:=',{var,{2271,27},'Op'},{atom,{2271,34},eq_exact}},
         {var,{2271,44},'Bool'}],
        [{op,{2271,53},'=:=',{var,{2271,50},'Op'},{atom,{2271,57},ne_exact}},
         {op,{2271,67},'not',{var,{2271,71},'Bool'}}]],
       [{debug_line,2272,1126},
        {call,
         {2272,13},
         {atom,{2272,13},update_ne_types},
         [{var,{2272,29},'LHS'},
          {var,{2272,34},'RHS'},
          {var,{2272,39},'Vst'}]}]},
      {clause,
       {2273,9},
       [{tuple,{2273,9},[{atom,{2273,10},atom},{var,{2273,16},'Bool'}]}],
       [[{op,{2273,30},'=:=',{var,{2273,27},'Op'},{atom,{2273,34},ne_exact}},
         {var,{2273,44},'Bool'}],
        [{op,{2273,53},'=:=',{var,{2273,50},'Op'},{atom,{2273,57},eq_exact}},
         {op,{2273,67},'not',{var,{2273,71},'Bool'}}]],
       [{debug_line,2274,1127},
        {call,
         {2274,13},
         {atom,{2274,13},update_eq_types},
         [{var,{2274,29},'LHS'},
          {var,{2274,34},'RHS'},
          {var,{2274,39},'Vst'}]}]},
      {clause,
       {2275,9},
       [{var,{2275,9},'_'}],
       [],
       [{debug_line,2276,1128},{var,{2276,13},'Vst'}]}]}]},
  {clause,
   {2278,1},
   [{tuple,
     {2278,15},
     [{atom,{2278,15},value},
      {tuple,{2278,25},[{atom,{2278,26},bif},{var,{2278,30},'RelOp'}]},
      {match,
       {2278,42},
       {cons,
        {2278,42},
        {var,{2278,43},'_'},
        {cons,{2278,45},{var,{2278,45},'_'},{nil,{2278,46}}}},
       {var,{2278,48},'Args'}},
      {var,{2278,15},'_'}]},
    {var,{2278,55},'Val'},
    {var,{2278,60},'Op'},
    {var,{2278,64},'Vst'}],
   [[{op,{2279,14},'=:=',{var,{2279,8},'RelOp'},{atom,{2279,18},'<'}}],
    [{op,{2279,29},'=:=',{var,{2279,23},'RelOp'},{atom,{2279,33},'=<'}}],
    [{op,{2279,45},'=:=',{var,{2279,39},'RelOp'},{atom,{2279,49},'>='}}],
    [{op,{2279,61},'=:=',{var,{2279,55},'RelOp'},{atom,{2279,65},'>'}}]],
   [{debug_line,2280,1129},
    {'case',
     {2280,5},
     {var,{2280,10},'Val'},
     [{clause,
       {2281,9},
       [{tuple,{2281,9},[{atom,{2281,10},atom},{var,{2281,16},'Bool'}]}],
       [[{op,{2281,30},'=:=',{var,{2281,27},'Op'},{atom,{2281,34},eq_exact}},
         {var,{2281,44},'Bool'}],
        [{op,{2281,53},'=:=',{var,{2281,50},'Op'},{atom,{2281,57},ne_exact}},
         {op,{2281,67},'not',{var,{2281,71},'Bool'}}]],
       [{debug_line,2282,1130},
        {match,
         {2282,13},
         {var,{2282,13},'Types'},
         {lc,
          {2282,21},
          {block,0,
           [{call,
             {2282,22},
             {atom,{2282,22},get_term_type},
             [{var,{2282,36},'Arg'},{var,{2282,41},'Vst'}]}]},
          [{block,0,[{atom,{2282,56},true}]},
           {generate,
            {2282,53},
            {var,{2282,49},'Arg'},
            {var,{2282,56},'Args'}}]}},
        {debug_line,2283,1131},
        {call,
         {2283,13},
         {atom,{2283,13},infer_relop_types},
         [{var,{2283,31},'RelOp'},
          {var,{2283,38},'Args'},
          {var,{2283,44},'Types'},
          {var,{2283,51},'Vst'}]}]},
      {clause,
       {2284,9},
       [{tuple,{2284,9},[{atom,{2284,10},atom},{var,{2284,16},'Bool'}]}],
       [[{op,{2284,30},'=:=',{var,{2284,27},'Op'},{atom,{2284,34},ne_exact}},
         {var,{2284,44},'Bool'}],
        [{op,{2284,53},'=:=',{var,{2284,50},'Op'},{atom,{2284,57},eq_exact}},
         {op,{2284,67},'not',{var,{2284,71},'Bool'}}]],
       [{debug_line,2285,1132},
        {match,
         {2285,13},
         {var,{2285,13},'Types'},
         {lc,
          {2285,21},
          {block,0,
           [{call,
             {2285,22},
             {atom,{2285,22},get_term_type},
             [{var,{2285,36},'Arg'},{var,{2285,41},'Vst'}]}]},
          [{block,0,[{atom,{2285,56},true}]},
           {generate,
            {2285,53},
            {var,{2285,49},'Arg'},
            {var,{2285,56},'Args'}}]}},
        {debug_line,2286,1133},
        {call,
         {2286,13},
         {atom,{2286,13},infer_relop_types},
         [{block,0,
           [{call,
             {2286,31},
             {atom,{2286,31},invert_relop},
             [{var,{2286,44},'RelOp'}]}]},
          {var,{2286,52},'Args'},
          {var,{2286,58},'Types'},
          {var,{2286,65},'Vst'}]}]},
      {clause,
       {2287,9},
       [{var,{2287,9},'_'}],
       [],
       [{debug_line,2288,1134},{var,{2288,13},'Vst'}]}]}]},
  {clause,
   {2290,1},
   [{tuple,
     {2290,15},
     [{atom,{2290,15},value},
      {tuple,{2290,25},[{atom,{2290,26},bif},{atom,{2290,30},is_atom}]},
      {cons,{2290,44},{var,{2290,45},'Src'},{nil,{2290,48}}},
      {var,{2290,15},'_'}]},
    {var,{2290,52},'Val'},
    {var,{2290,57},'Op'},
    {var,{2290,61},'Vst'}],
   [],
   [{debug_line,2291,1135},
    {call,
     {2291,5},
     {atom,{2291,5},infer_type_test_bif},
     [{block,0,
       [{tuple,{2291,25},[{atom,{2291,25},t_atom},{atom,{2291,25},any}]}]},
      {var,{2291,36},'Src'},
      {var,{2291,41},'Val'},
      {var,{2291,46},'Op'},
      {var,{2291,50},'Vst'}]}]},
  {clause,
   {2292,1},
   [{tuple,
     {2292,15},
     [{atom,{2292,15},value},
      {tuple,{2292,25},[{atom,{2292,26},bif},{atom,{2292,30},is_boolean}]},
      {cons,{2292,47},{var,{2292,48},'Src'},{nil,{2292,51}}},
      {var,{2292,15},'_'}]},
    {var,{2292,55},'Val'},
    {var,{2292,60},'Op'},
    {var,{2292,64},'Vst'}],
   [],
   [{debug_line,2293,1136},
    {call,
     {2293,5},
     {atom,{2293,5},infer_type_test_bif},
     [{block,0,
       [{call,
         {2293,25},
         {remote,
          {2293,35},
          {atom,{2293,25},beam_types},
          {atom,{2293,36},make_boolean}},
         []}]},
      {var,{2293,52},'Src'},
      {var,{2293,57},'Val'},
      {var,{2293,62},'Op'},
      {var,{2293,66},'Vst'}]}]},
  {clause,
   {2294,1},
   [{tuple,
     {2294,15},
     [{atom,{2294,15},value},
      {tuple,{2294,25},[{atom,{2294,26},bif},{atom,{2294,30},is_binary}]},
      {cons,{2294,46},{var,{2294,47},'Src'},{nil,{2294,50}}},
      {var,{2294,15},'_'}]},
    {var,{2294,54},'Val'},
    {var,{2294,59},'Op'},
    {var,{2294,63},'Vst'}],
   [],
   [{debug_line,2295,1137},
    {call,
     {2295,5},
     {atom,{2295,5},infer_type_test_bif},
     [{block,0,
       [{tuple,
         {2295,25},
         [{atom,{2295,25},t_bitstring},
          {integer,{2295,48},8},
          {atom,{2295,25},false}]}]},
      {var,{2295,52},'Src'},
      {var,{2295,57},'Val'},
      {var,{2295,62},'Op'},
      {var,{2295,66},'Vst'}]}]},
  {clause,
   {2296,1},
   [{tuple,
     {2296,15},
     [{atom,{2296,15},value},
      {tuple,{2296,25},[{atom,{2296,26},bif},{atom,{2296,30},is_bitstring}]},
      {cons,{2296,49},{var,{2296,50},'Src'},{nil,{2296,53}}},
      {var,{2296,15},'_'}]},
    {var,{2296,57},'Val'},
    {var,{2296,62},'Op'},
    {var,{2296,66},'Vst'}],
   [],
   [{debug_line,2297,1138},
    {call,
     {2297,5},
     {atom,{2297,5},infer_type_test_bif},
     [{block,0,
       [{tuple,
         {2297,25},
         [{atom,{2297,25},t_bitstring},
          {integer,{2297,25},1},
          {atom,{2297,25},false}]}]},
      {var,{2297,41},'Src'},
      {var,{2297,46},'Val'},
      {var,{2297,51},'Op'},
      {var,{2297,55},'Vst'}]}]},
  {clause,
   {2298,1},
   [{tuple,
     {2298,15},
     [{atom,{2298,15},value},
      {tuple,{2298,25},[{atom,{2298,26},bif},{atom,{2298,30},is_float}]},
      {cons,{2298,45},{var,{2298,46},'Src'},{nil,{2298,49}}},
      {var,{2298,15},'_'}]},
    {var,{2298,53},'Val'},
    {var,{2298,58},'Op'},
    {var,{2298,62},'Vst'}],
   [],
   [{debug_line,2299,1139},
    {call,
     {2299,5},
     {atom,{2299,5},infer_type_test_bif},
     [{block,0,
       [{tuple,{2299,25},[{atom,{2299,25},t_float},{atom,{2299,25},any}]}]},
      {var,{2299,37},'Src'},
      {var,{2299,42},'Val'},
      {var,{2299,47},'Op'},
      {var,{2299,51},'Vst'}]}]},
  {clause,
   {2300,1},
   [{tuple,
     {2300,15},
     [{atom,{2300,15},value},
      {tuple,{2300,25},[{atom,{2300,26},bif},{atom,{2300,30},is_function}]},
      {cons,
       {2300,48},
       {var,{2300,49},'Src'},
       {cons,
        {2300,53},
        {tuple,{2300,53},[{atom,{2300,54},integer},{var,{2300,62},'Arity'}]},
        {nil,{2300,68}}}},
      {var,{2300,15},'_'}]},
    {var,{2301,15},'Val'},
    {var,{2301,20},'Op'},
    {var,{2301,24},'Vst'}],
   [[{op,{2302,14},'>=',{var,{2302,8},'Arity'},{integer,{2302,17},0}},
     {op,{2302,26},'=<',{var,{2302,20},'Arity'},{integer,{2302,30},255}}]],
   [{debug_line,2303,1140},
    {call,
     {2303,5},
     {atom,{2303,5},infer_type_test_bif},
     [{block,0,
       [{tuple,
         {2303,25},
         [{atom,{2303,25},t_fun},
          {var,{2303,38},'Arity'},
          {atom,{2303,25},any},
          {atom,{2303,25},any}]}]},
      {var,{2303,46},'Src'},
      {var,{2303,51},'Val'},
      {var,{2303,56},'Op'},
      {var,{2303,60},'Vst'}]}]},
  {clause,
   {2304,1},
   [{tuple,
     {2304,15},
     [{atom,{2304,15},value},
      {tuple,{2304,25},[{atom,{2304,26},bif},{atom,{2304,30},is_function}]},
      {cons,
       {2304,48},
       {var,{2304,49},'Src'},
       {cons,{2304,53},{var,{2304,53},'_Arity'},{nil,{2304,59}}}},
      {var,{2304,15},'_'}]},
    {var,{2304,63},'Val'},
    {var,{2304,68},'Op'},
    {var,{2304,72},'Vst'}],
   [],
   [{debug_line,2305,1141},
    {'case',
     {2305,5},
     {var,{2305,10},'Val'},
     [{clause,
       {2306,9},
       [{tuple,{2306,9},[{atom,{2306,10},atom},{var,{2306,16},'Bool'}]}],
       [[{op,{2306,30},'=:=',{var,{2306,27},'Op'},{atom,{2306,34},eq_exact}},
         {var,{2306,44},'Bool'}],
        [{op,{2306,53},'=:=',{var,{2306,50},'Op'},{atom,{2306,57},ne_exact}},
         {op,{2306,67},'not',{var,{2306,71},'Bool'}}]],
       [{debug_line,2307,1142},
        {call,
         {2307,13},
         {atom,{2307,13},update_type},
         [{block,0,[{'fun',{2307,25},{function,meet,2}}]},
          {block,0,
           [{tuple,
             {2307,37},
             [{atom,{2307,37},t_fun},
              {atom,{2307,37},any},
              {atom,{2307,37},any},
              {atom,{2307,37},any}]}]},
          {var,{2307,47},'Src'},
          {var,{2307,52},'Vst'}]}]},
      {clause,
       {2308,9},
       [{var,{2308,9},'_'}],
       [],
       [{debug_line,2312,1143},{var,{2312,13},'Vst'}]}]}]},
  {clause,
   {2314,1},
   [{tuple,
     {2314,15},
     [{atom,{2314,15},value},
      {tuple,{2314,25},[{atom,{2314,26},bif},{atom,{2314,30},is_function}]},
      {cons,{2314,48},{var,{2314,49},'Src'},{nil,{2314,52}}},
      {var,{2314,15},'_'}]},
    {var,{2314,56},'Val'},
    {var,{2314,61},'Op'},
    {var,{2314,65},'Vst'}],
   [],
   [{debug_line,2315,1144},
    {call,
     {2315,5},
     {atom,{2315,5},infer_type_test_bif},
     [{block,0,
       [{tuple,
         {2315,25},
         [{atom,{2315,25},t_fun},
          {atom,{2315,25},any},
          {atom,{2315,25},any},
          {atom,{2315,25},any}]}]},
      {var,{2315,35},'Src'},
      {var,{2315,40},'Val'},
      {var,{2315,45},'Op'},
      {var,{2315,49},'Vst'}]}]},
  {clause,
   {2316,1},
   [{tuple,
     {2316,15},
     [{atom,{2316,15},value},
      {tuple,{2316,25},[{atom,{2316,26},bif},{atom,{2316,30},is_integer}]},
      {cons,{2316,47},{var,{2316,48},'Src'},{nil,{2316,51}}},
      {var,{2316,15},'_'}]},
    {var,{2316,55},'Val'},
    {var,{2316,60},'Op'},
    {var,{2316,64},'Vst'}],
   [],
   [{debug_line,2317,1145},
    {call,
     {2317,5},
     {atom,{2317,5},infer_type_test_bif},
     [{block,0,
       [{tuple,{2317,25},[{atom,{2317,25},t_integer},{atom,{2317,25},any}]}]},
      {var,{2317,39},'Src'},
      {var,{2317,44},'Val'},
      {var,{2317,49},'Op'},
      {var,{2317,53},'Vst'}]}]},
  {clause,
   {2318,1},
   [{tuple,
     {2318,15},
     [{atom,{2318,15},value},
      {tuple,{2318,25},[{atom,{2318,26},bif},{atom,{2318,30},is_list}]},
      {cons,{2318,44},{var,{2318,45},'Src'},{nil,{2318,48}}},
      {var,{2318,15},'_'}]},
    {var,{2318,52},'Val'},
    {var,{2318,57},'Op'},
    {var,{2318,61},'Vst'}],
   [],
   [{debug_line,2319,1146},
    {call,
     {2319,5},
     {atom,{2319,5},infer_type_test_bif},
     [{block,0,
       [{tuple,
         {2319,25},
         [{atom,{2319,25},t_list},
          {atom,{2319,25},any},
          {atom,{2319,25},any}]}]},
      {var,{2319,36},'Src'},
      {var,{2319,41},'Val'},
      {var,{2319,46},'Op'},
      {var,{2319,50},'Vst'}]}]},
  {clause,
   {2320,1},
   [{tuple,
     {2320,15},
     [{atom,{2320,15},value},
      {tuple,{2320,25},[{atom,{2320,26},bif},{atom,{2320,30},is_map}]},
      {cons,{2320,43},{var,{2320,44},'Src'},{nil,{2320,47}}},
      {var,{2320,15},'_'}]},
    {var,{2320,51},'Val'},
    {var,{2320,56},'Op'},
    {var,{2320,60},'Vst'}],
   [],
   [{debug_line,2321,1147},
    {call,
     {2321,5},
     {atom,{2321,5},infer_type_test_bif},
     [{block,0,
       [{tuple,
         {2321,25},
         [{atom,{2321,25},t_map},{atom,{2321,25},any},{atom,{2321,25},any}]}]},
      {var,{2321,35},'Src'},
      {var,{2321,40},'Val'},
      {var,{2321,45},'Op'},
      {var,{2321,49},'Vst'}]}]},
  {clause,
   {2322,1},
   [{tuple,
     {2322,15},
     [{atom,{2322,15},value},
      {tuple,{2322,25},[{atom,{2322,26},bif},{atom,{2322,30},is_number}]},
      {cons,{2322,46},{var,{2322,47},'Src'},{nil,{2322,50}}},
      {var,{2322,15},'_'}]},
    {var,{2322,54},'Val'},
    {var,{2322,59},'Op'},
    {var,{2322,63},'Vst'}],
   [],
   [{debug_line,2323,1148},
    {call,
     {2323,5},
     {atom,{2323,5},infer_type_test_bif},
     [{block,0,
       [{tuple,{2323,25},[{atom,{2323,25},t_number},{atom,{2323,25},any}]}]},
      {var,{2323,38},'Src'},
      {var,{2323,43},'Val'},
      {var,{2323,48},'Op'},
      {var,{2323,52},'Vst'}]}]},
  {clause,
   {2324,1},
   [{tuple,
     {2324,15},
     [{atom,{2324,15},value},
      {tuple,{2324,25},[{atom,{2324,26},bif},{atom,{2324,30},is_pid}]},
      {cons,{2324,43},{var,{2324,44},'Src'},{nil,{2324,47}}},
      {var,{2324,15},'_'}]},
    {var,{2324,51},'Val'},
    {var,{2324,56},'Op'},
    {var,{2324,60},'Vst'}],
   [],
   [{debug_line,2325,1149},
    {call,
     {2325,5},
     {atom,{2325,5},infer_type_test_bif},
     [{atom,{2325,25},pid},
      {var,{2325,30},'Src'},
      {var,{2325,35},'Val'},
      {var,{2325,40},'Op'},
      {var,{2325,44},'Vst'}]}]},
  {clause,
   {2326,1},
   [{tuple,
     {2326,15},
     [{atom,{2326,15},value},
      {tuple,{2326,25},[{atom,{2326,26},bif},{atom,{2326,30},is_port}]},
      {cons,{2326,44},{var,{2326,45},'Src'},{nil,{2326,48}}},
      {var,{2326,15},'_'}]},
    {var,{2326,52},'Val'},
    {var,{2326,57},'Op'},
    {var,{2326,61},'Vst'}],
   [],
   [{debug_line,2327,1150},
    {call,
     {2327,5},
     {atom,{2327,5},infer_type_test_bif},
     [{atom,{2327,25},port},
      {var,{2327,31},'Src'},
      {var,{2327,36},'Val'},
      {var,{2327,41},'Op'},
      {var,{2327,45},'Vst'}]}]},
  {clause,
   {2328,1},
   [{tuple,
     {2328,15},
     [{atom,{2328,15},value},
      {tuple,{2328,25},[{atom,{2328,26},bif},{atom,{2328,30},is_reference}]},
      {cons,{2328,49},{var,{2328,50},'Src'},{nil,{2328,53}}},
      {var,{2328,15},'_'}]},
    {var,{2328,57},'Val'},
    {var,{2328,62},'Op'},
    {var,{2328,66},'Vst'}],
   [],
   [{debug_line,2329,1151},
    {call,
     {2329,5},
     {atom,{2329,5},infer_type_test_bif},
     [{atom,{2329,25},reference},
      {var,{2329,36},'Src'},
      {var,{2329,41},'Val'},
      {var,{2329,46},'Op'},
      {var,{2329,50},'Vst'}]}]},
  {clause,
   {2330,1},
   [{tuple,
     {2330,15},
     [{atom,{2330,15},value},
      {tuple,{2330,25},[{atom,{2330,26},bif},{atom,{2330,30},is_tuple}]},
      {cons,{2330,45},{var,{2330,46},'Src'},{nil,{2330,49}}},
      {var,{2330,15},'_'}]},
    {var,{2330,53},'Val'},
    {var,{2330,58},'Op'},
    {var,{2330,62},'Vst'}],
   [],
   [{debug_line,2331,1152},
    {call,
     {2331,5},
     {atom,{2331,5},infer_type_test_bif},
     [{block,0,
       [{tuple,
         {2331,25},
         [{atom,{2331,25},t_tuple},
          {integer,{2331,25},0},
          {atom,{2331,25},false},
          {map,{2331,25},[]}]}]},
      {var,{2331,37},'Src'},
      {var,{2331,42},'Val'},
      {var,{2331,47},'Op'},
      {var,{2331,51},'Vst'}]}]},
  {clause,
   {2332,1},
   [{tuple,
     {2332,15},
     [{atom,{2332,15},value},
      {tuple,{2332,25},[{atom,{2332,26},bif},{atom,{2332,30},tuple_size}]},
      {cons,{2332,48},{var,{2332,49},'Tuple'},{nil,{2332,54}}},
      {var,{2332,15},'_'}]},
    {tuple,{2333,15},[{atom,{2333,16},integer},{var,{2333,24},'Arity'}]},
    {var,{2333,32},'Op'},
    {var,{2333,36},'Vst'}],
   [],
   [{debug_line,2334,1153},
    {match,
     {2334,5},
     {var,{2334,5},'Type'},
     {tuple,
      {2334,12},
      [{atom,{2334,12},t_tuple},
       {var,{2334,37},'Arity'},
       {atom,{2334,27},true},
       {map,{2334,12},[]}]}},
    {debug_line,2335,1154},
    {'case',
     {2335,5},
     {var,{2335,10},'Op'},
     [{clause,
       {2336,9},
       [{atom,{2336,9},eq_exact}],
       [],
       [{debug_line,2336,1155},
        {call,
         {2336,21},
         {atom,{2336,21},update_type},
         [{block,0,[{'fun',{2336,33},{function,meet,2}}]},
          {var,{2336,45},'Type'},
          {var,{2336,51},'Tuple'},
          {var,{2336,58},'Vst'}]}]},
      {clause,
       {2337,9},
       [{atom,{2337,9},ne_exact}],
       [],
       [{debug_line,2337,1156},
        {call,
         {2337,21},
         {atom,{2337,21},update_type},
         [{block,0,[{'fun',{2337,33},{function,subtract,2}}]},
          {var,{2337,49},'Type'},
          {var,{2337,55},'Tuple'},
          {var,{2337,62},'Vst'}]}]}]}]},
  {clause,
   {2339,1},
   [{tuple,
     {2339,15},
     [{atom,{2339,15},value},
      {tuple,{2339,25},[{atom,{2339,26},bif},{atom,{2339,30},element}]},
      {cons,
       {2339,44},
       {tuple,{2339,45},[{atom,{2339,46},integer},{var,{2339,54},'Index'}]},
       {cons,{2339,62},{var,{2339,62},'Tuple'},{nil,{2339,67}}}},
      {var,{2339,15},'_'}]},
    {var,{2340,15},'Val'},
    {atom,{2340,20},eq_exact},
    {var,{2340,30},'Vst'}],
   [[{op,{2341,14},'>=',{var,{2341,8},'Index'},{integer,{2341,17},1}}]],
   [{debug_line,2342,1157},
    {match,
     {2342,5},
     {var,{2342,5},'ValType'},
     {call,
      {2342,15},
      {atom,{2342,15},get_term_type},
      [{var,{2342,29},'Val'},{var,{2342,34},'Vst'}]}},
    {debug_line,2343,1158},
    {match,
     {2343,5},
     {var,{2343,5},'Es'},
     {call,
      {2343,10},
      {remote,
       {2343,20},
       {atom,{2343,10},beam_types},
       {atom,{2343,21},set_tuple_element}},
      [{var,{2343,39},'Index'},
       {var,{2343,46},'ValType'},
       {block,0,[{map,{2343,55},[]}]}]}},
    {debug_line,2344,1159},
    {match,
     {2344,5},
     {var,{2344,5},'TupleType'},
     {tuple,
      {2344,17},
      [{atom,{2344,17},t_tuple},
       {var,{2344,31},'Index'},
       {atom,{2344,17},false},
       {var,{2344,46},'Es'}]}},
    {debug_line,2345,1160},
    {call,
     {2345,5},
     {atom,{2345,5},update_type},
     [{block,0,[{'fun',{2345,17},{function,meet,2}}]},
      {var,{2345,29},'TupleType'},
      {var,{2345,40},'Tuple'},
      {var,{2345,47},'Vst'}]}]},
  {clause,
   {2346,1},
   [{tuple,
     {2346,15},
     [{atom,{2346,15},value},
      {tuple,{2346,25},[{atom,{2346,26},bif},{atom,{2346,30},element}]},
      {cons,
       {2346,44},
       {tuple,{2346,45},[{atom,{2346,46},integer},{var,{2346,54},'Index'}]},
       {cons,{2346,62},{var,{2346,62},'Tuple'},{nil,{2346,67}}}},
      {var,{2346,15},'_'}]},
    {var,{2347,15},'Val'},
    {atom,{2347,20},ne_exact},
    {var,{2347,30},'Vst'}],
   [[{op,{2348,14},'>=',{var,{2348,8},'Index'},{integer,{2348,17},1}}]],
   [{debug_line,2351,1161},
    {match,
     {2351,5},
     {var,{2351,5},'ValType'},
     {call,
      {2351,15},
      {atom,{2351,15},get_term_type},
      [{var,{2351,29},'Val'},{var,{2351,34},'Vst'}]}},
    {debug_line,2352,1162},
    {'case',
     {2352,5},
     {call,
      {2352,10},
      {remote,
       {2352,20},
       {atom,{2352,10},beam_types},
       {atom,{2352,21},is_singleton_type}},
      [{var,{2352,39},'ValType'}]},
     [{clause,
       {2353,9},
       [{atom,{2353,9},true}],
       [],
       [{debug_line,2354,1163},
        {'case',
         {2354,13},
         {call,
          {2354,18},
          {remote,
           {2354,28},
           {atom,{2354,18},beam_types},
           {atom,{2354,29},set_tuple_element}},
          [{var,{2354,47},'Index'},
           {var,{2354,54},'ValType'},
           {block,0,[{map,{2354,63},[]}]}]},
         [{clause,
           {2355,17},
           [{match,
             {2355,17},
             {map,
              {2355,17},
              [{map_field_exact,
                {2355,26},
                {var,{2355,20},'Index'},
                {var,{2355,29},'_'}}]},
             {var,{2355,33},'Es'}}],
           [],
           [{debug_line,2356,1164},
            {match,
             {2356,21},
             {var,{2356,21},'TupleType'},
             {tuple,
              {2356,33},
              [{atom,{2356,33},t_tuple},
               {var,{2356,47},'Index'},
               {atom,{2356,33},false},
               {var,{2356,62},'Es'}]}},
            {debug_line,2357,1165},
            {call,
             {2357,21},
             {atom,{2357,21},update_type},
             [{block,0,[{'fun',{2357,33},{function,subtract,2}}]},
              {var,{2357,49},'TupleType'},
              {var,{2357,60},'Tuple'},
              {var,{2357,67},'Vst'}]}]},
          {clause,
           {2358,17},
           [{map,{2358,17},[]}],
           [],
           [{debug_line,2361,1166},{var,{2361,21},'Vst'}]}]}]},
      {clause,
       {2363,9},
       [{atom,{2363,9},false}],
       [],
       [{debug_line,2364,1167},{var,{2364,13},'Vst'}]}]}]},
  {clause,
   {2366,1},
   [{var,{2366,15},'_'},
    {var,{2366,18},'_'},
    {var,{2366,21},'_'},
    {var,{2366,24},'Vst'}],
   [],
   [{debug_line,2367,1168},{var,{2367,5},'Vst'}]}]}.
{function,
    {2369,1},
    infer_type_test_bif,5,
    [{clause,
         {2369,1},
         [{var,{2369,1},'_'},
          {var,{2369,1},'_'},
          {var,{2369,1},'_'},
          {var,{2369,1},'_'},
          {var,{2369,1},'_'}],
         [[{call,
               {2369,1},
               {remote,
                   {2369,1},
                   {atom,{2369,1},fake},
                   {atom,{2369,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2369,1169},{atom,{2369,1},ignore}]},
     {clause,
         {2369,1},
         [{var,{2369,21},'Type'},
          {var,{2369,27},'Src'},
          {var,{2369,32},'Val'},
          {var,{2369,37},'Op'},
          {var,{2369,41},'Vst'}],
         [],
         [{debug_line,2370,1170},
          {'case',
              {2370,5},
              {var,{2370,10},'Val'},
              [{clause,
                   {2371,9},
                   [{tuple,
                        {2371,9},
                        [{atom,{2371,10},atom},{var,{2371,16},'Bool'}]}],
                   [[{op,{2371,30},
                         '=:=',
                         {var,{2371,27},'Op'},
                         {atom,{2371,34},eq_exact}},
                     {var,{2371,44},'Bool'}],
                    [{op,{2371,53},
                         '=:=',
                         {var,{2371,50},'Op'},
                         {atom,{2371,57},ne_exact}},
                     {op,{2371,67},'not',{var,{2371,71},'Bool'}}]],
                   [{debug_line,2372,1171},
                    {call,
                        {2372,13},
                        {atom,{2372,13},update_type},
                        [{block,0,[{'fun',{2372,25},{function,meet,2}}]},
                         {var,{2372,37},'Type'},
                         {var,{2372,43},'Src'},
                         {var,{2372,48},'Vst'}]}]},
               {clause,
                   {2373,9},
                   [{tuple,
                        {2373,9},
                        [{atom,{2373,10},atom},{var,{2373,16},'Bool'}]}],
                   [[{op,{2373,30},
                         '=:=',
                         {var,{2373,27},'Op'},
                         {atom,{2373,34},ne_exact}},
                     {var,{2373,44},'Bool'}],
                    [{op,{2373,53},
                         '=:=',
                         {var,{2373,50},'Op'},
                         {atom,{2373,57},eq_exact}},
                     {op,{2373,67},'not',{var,{2373,71},'Bool'}}]],
                   [{debug_line,2374,1172},
                    {call,
                        {2374,13},
                        {atom,{2374,13},update_type},
                        [{block,0,[{'fun',{2374,25},{function,subtract,2}}]},
                         {var,{2374,41},'Type'},
                         {var,{2374,47},'Src'},
                         {var,{2374,52},'Vst'}]}]},
               {clause,
                   {2375,9},
                   [{var,{2375,9},'_'}],
                   [],
                   [{debug_line,2376,1173},{var,{2376,13},'Vst'}]}]}]}]}.
{function,{2379,1},
          invert_relop,1,
          [{clause,{2379,1},
                   [{var,{2379,1},'_'}],
                   [[{call,{2379,1},
                           {remote,{2379,1},
                                   {atom,{2379,1},fake},
                                   {atom,{2379,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2379,1174},{atom,{2379,1},ignore}]},
           {clause,{2379,1},
                   [{atom,{2379,14},'<'}],
                   [],
                   [{debug_line,2379,1175},{atom,{2379,22},'>='}]},
           {clause,{2380,1},
                   [{atom,{2380,14},'=<'}],
                   [],
                   [{debug_line,2380,1176},{atom,{2380,23},'>'}]},
           {clause,{2381,1},
                   [{atom,{2381,14},'>='}],
                   [],
                   [{debug_line,2381,1177},{atom,{2381,23},'<'}]},
           {clause,{2382,1},
                   [{atom,{2382,14},'>'}],
                   [],
                   [{debug_line,2382,1178},{atom,{2382,22},'=<'}]}]}.
{function,
    {2389,1},
    assign,3,
    [{clause,
         {2389,1},
         [{var,{2389,1},'_'},{var,{2389,1},'_'},{var,{2389,1},'_'}],
         [[{call,
               {2389,1},
               {remote,
                   {2389,1},
                   {atom,{2389,1},fake},
                   {atom,{2389,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2389,1179},{atom,{2389,1},ignore}]},
     {clause,
         {2389,1},
         [{match,
              {2389,8},
              {tuple,{2389,8},[{atom,{2389,9},y},{var,{2389,11},'_'}]},
              {var,{2389,14},'Src'}},
          {match,
              {2389,19},
              {tuple,{2389,19},[{atom,{2389,20},y},{var,{2389,22},'_'}]},
              {var,{2389,25},'Dst'}},
          {var,{2389,30},'Vst'}],
         [],
         [{debug_line,2392,1180},
          {'case',
              {2392,5},
              {call,
                  {2392,10},
                  {atom,{2392,10},get_raw_type},
                  [{var,{2392,23},'Src'},{var,{2392,28},'Vst'}]},
              [{clause,
                   {2393,9},
                   [{atom,{2393,9},initialized}],
                   [],
                   [{debug_line,2393,1181},
                    {call,
                        {2393,24},
                        {atom,{2393,24},create_tag},
                        [{atom,{2393,35},initialized},
                         {atom,{2393,48},init},
                         {nil,{2393,54}},
                         {var,{2393,58},'Dst'},
                         {var,{2393,63},'Vst'}]}]},
               {clause,
                   {2394,9},
                   [{var,{2394,9},'_'}],
                   [],
                   [{debug_line,2394,1182},
                    {call,
                        {2394,14},
                        {atom,{2394,14},assign_1},
                        [{var,{2394,23},'Src'},
                         {var,{2394,28},'Dst'},
                         {var,{2394,33},'Vst'}]}]}]}]},
     {clause,
         {2396,1},
         [{match,
              {2396,8},
              {tuple,{2396,8},[{var,{2396,9},'Kind'},{var,{2396,14},'_'}]},
              {var,{2396,17},'Src'}},
          {var,{2396,22},'Dst'},
          {var,{2396,27},'Vst'}],
         [[{op,{2396,42},'=:=',{var,{2396,37},'Kind'},{atom,{2396,46},x}}],
          [{op,{2396,54},'=:=',{var,{2396,49},'Kind'},{atom,{2396,58},y}}]],
         [{debug_line,2397,1183},
          {call,
              {2397,5},
              {atom,{2397,5},assign_1},
              [{var,{2397,14},'Src'},
               {var,{2397,19},'Dst'},
               {var,{2397,24},'Vst'}]}]},
     {clause,
         {2398,1},
         [{var,{2398,8},'Literal'},
          {var,{2398,17},'Dst'},
          {var,{2398,22},'Vst'}],
         [],
         [{debug_line,2399,1184},
          {match,
              {2399,5},
              {var,{2399,5},'Type'},
              {call,
                  {2399,12},
                  {atom,{2399,12},get_literal_type},
                  [{var,{2399,29},'Literal'}]}},
          {debug_line,2400,1185},
          {call,
              {2400,5},
              {atom,{2400,5},create_term},
              [{var,{2400,17},'Type'},
               {atom,{2400,23},move},
               {block,0,
                   [{cons,
                        {2400,29},
                        {var,{2400,30},'Literal'},
                        {nil,{2400,37}}}]},
               {var,{2400,40},'Dst'},
               {var,{2400,45},'Vst'}]}]}]}.
{function,
 {2404,1},
 create_tag,5,
 [{clause,
   {2404,1},
   [{var,{2404,1},'_'},
    {var,{2404,1},'_'},
    {var,{2404,1},'_'},
    {var,{2404,1},'_'},
    {var,{2404,1},'_'}],
   [[{call,
      {2404,1},
      {remote,{2404,1},{atom,{2404,1},fake},{atom,{2404,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2404,1186},{atom,{2404,1},ignore}]},
  {clause,
   {2404,1},
   [{var,{2404,12},'Tag'},
    {var,{2404,17},'_Op'},
    {var,{2404,22},'_Ss'},
    {match,
     {2404,27},
     {tuple,{2404,27},[{atom,{2404,28},y},{var,{2404,30},'_'}]},
     {var,{2404,33},'Dst'}},
    {match,
     {2404,38},
     {tuple,
      {2404,38},
      [{atom,{2404,38},vst},
       {match,
        {2404,51},
        {tuple,
         {2404,51},
         [{atom,{2404,51},st},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,58},'Ys0'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'},
          {var,{2404,51},'_'}]},
        {var,{2404,63},'St0'}},
       {var,{2404,38},'_'},
       {var,{2404,38},'_'},
       {var,{2404,38},'_'},
       {var,{2404,38},'_'},
       {var,{2404,38},'_'}]},
     {var,{2404,68},'Vst'}}],
   [],
   [{debug_line,2405,1187},
    {'case',
     {2405,5},
     {call,
      {2405,10},
      {remote,{2405,14},{atom,{2405,10},maps},{atom,{2405,15},get}},
      [{var,{2405,19},'Dst'},
       {var,{2405,24},'Ys0'},
       {atom,{2405,29},uninitialized}]},
     [{clause,
       {2406,9},
       [{match,
         {2406,9},
         {tuple,{2406,9},[{atom,{2406,10},catchtag},{var,{2406,19},'_'}]},
         {var,{2406,22},'Prev'}}],
       [],
       [{debug_line,2407,1188},
        {call,{2407,13},{atom,{2407,13},error},[{var,{2407,19},'Prev'}]}]},
      {clause,
       {2408,9},
       [{match,
         {2408,9},
         {tuple,{2408,9},[{atom,{2408,10},trytag},{var,{2408,17},'_'}]},
         {var,{2408,20},'Prev'}}],
       [],
       [{debug_line,2409,1189},
        {call,{2409,13},{atom,{2409,13},error},[{var,{2409,19},'Prev'}]}]},
      {clause,
       {2410,9},
       [{var,{2410,9},'_'}],
       [],
       [{debug_line,2411,1190},
        {call,
         {2411,13},
         {atom,{2411,13},check_try_catch_tags},
         [{var,{2411,34},'Tag'},{var,{2411,39},'Dst'},{var,{2411,44},'Vst'}]},
        {debug_line,2412,1191},
        {match,
         {2412,13},
         {var,{2412,13},'Ys'},
         {map,
          {2412,21},
          {var,{2412,18},'Ys0'},
          [{map_field_assoc,
            {2412,28},
            {var,{2412,24},'Dst'},
            {var,{2412,31},'Tag'}}]}},
        {debug_line,2413,1192},
        {match,
         {2413,13},
         {var,{2413,13},'St'},
         {block,
          {2413,18},
          [{match,{2413,18},{var,{2413,18},rec38},{var,{2413,18},'St0'}},
           {'case',
            {2413,25},
            {var,{2413,18},rec38},
            [{clause,
              {2413,25},
              [{tuple,
                {2413,25},
                [{atom,{2413,25},st},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'},
                 {var,{2413,25},'_'}]}],
              [],
              [{call,
                {2413,25},
                {remote,
                 {2413,25},
                 {atom,{2413,25},erlang},
                 {atom,{2413,25},setelement}},
                [{integer,{2413,25},4},
                 {var,{2413,18},rec38},
                 {var,{2413,28},'Ys'}]}]},
             {clause,
              [{generated,true},{location,{2413,25}}],
              [{var,[{generated,true},{location,{2413,25}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2413,25}}],
                {remote,
                 [{generated,true},{location,{2413,25}}],
                 {atom,[{generated,true},{location,{2413,25}}],erlang},
                 {atom,[{generated,true},{location,{2413,25}}],error}},
                [{tuple,
                  [{generated,true},{location,{2413,25}}],
                  [{atom,[{generated,true},{location,{2413,25}}],badrecord},
                   {var,{2413,18},rec38}]}]}]}]}]}},
        {debug_line,2414,1193},
        {call,
         {2414,13},
         {atom,{2414,13},remove_fragility},
         [{var,{2414,30},'Dst'},
          {block,0,
           [{block,
             {2414,35},
             [{match,{2414,35},{var,{2414,35},rec39},{var,{2414,35},'Vst'}},
              {'case',
               {2414,43},
               {var,{2414,35},rec39},
               [{clause,
                 {2414,43},
                 [{tuple,
                   {2414,43},
                   [{atom,{2414,43},vst},
                    {var,{2414,43},'_'},
                    {var,{2414,43},'_'},
                    {var,{2414,43},'_'},
                    {var,{2414,43},'_'},
                    {var,{2414,43},'_'},
                    {var,{2414,43},'_'}]}],
                 [],
                 [{call,
                   {2414,43},
                   {remote,
                    {2414,43},
                    {atom,{2414,43},erlang},
                    {atom,{2414,43},setelement}},
                   [{integer,{2414,43},2},
                    {var,{2414,35},rec39},
                    {var,{2414,51},'St'}]}]},
                {clause,
                 [{generated,true},{location,{2414,43}}],
                 [{var,[{generated,true},{location,{2414,43}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{2414,43}}],
                   {remote,
                    [{generated,true},{location,{2414,43}}],
                    {atom,[{generated,true},{location,{2414,43}}],erlang},
                    {atom,[{generated,true},{location,{2414,43}}],error}},
                   [{tuple,
                     [{generated,true},{location,{2414,43}}],
                     [{atom,[{generated,true},{location,{2414,43}}],badrecord},
                      {var,{2414,35},rec39}]}]}]}]}]}]}]}]}]}]},
  {clause,
   {2416,1},
   [{var,{2416,12},'_Tag'},
    {var,{2416,18},'_Op'},
    {var,{2416,23},'_Ss'},
    {var,{2416,28},'Dst'},
    {var,{2416,33},'_Vst'}],
   [],
   [{debug_line,2417,1194},
    {call,
     {2417,5},
     {atom,{2417,5},error},
     [{block,0,
       [{tuple,
         {2417,11},
         [{atom,{2417,12},invalid_tag_register},
          {var,{2417,34},'Dst'}]}]}]}]}]}.
{function,
 {2420,1},
 kill_tag,2,
 [{clause,
   {2420,1},
   [{var,{2420,1},'_'},{var,{2420,1},'_'}],
   [[{call,
      {2420,1},
      {remote,{2420,1},{atom,{2420,1},fake},{atom,{2420,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2420,1195},{atom,{2420,1},ignore}]},
  {clause,
   {2420,1},
   [{match,
     {2420,10},
     {tuple,{2420,10},[{atom,{2420,11},y},{var,{2420,13},'_'}]},
     {var,{2420,16},'Reg'}},
    {match,
     {2420,21},
     {tuple,
      {2420,21},
      [{atom,{2420,21},vst},
       {match,
        {2420,34},
        {tuple,
         {2420,34},
         [{atom,{2420,34},st},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,41},'Ys0'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'},
          {var,{2420,34},'_'}]},
        {var,{2420,46},'St0'}},
       {var,{2420,21},'_'},
       {var,{2420,21},'_'},
       {var,{2420,21},'_'},
       {var,{2420,21},'_'},
       {var,{2420,21},'_'}]},
     {var,{2420,51},'Vst'}}],
   [],
   [{debug_line,2421,1196},
    {match,
     {2421,5},
     {var,{2421,5},'_'},
     {call,
      {2421,9},
      {atom,{2421,9},get_tag_type},
      [{var,{2421,22},'Reg'},{var,{2421,27},'Vst'}]}},
    {debug_line,2422,1197},
    {match,
     {2422,5},
     {var,{2422,5},'Ys'},
     {map,
      {2422,13},
      {var,{2422,10},'Ys0'},
      [{map_field_assoc,
        {2422,20},
        {var,{2422,16},'Reg'},
        {atom,{2422,23},initialized}}]}},
    {debug_line,2423,1198},
    {block,
     {2423,5},
     [{match,
       {2423,13},
       {var,{2423,13},rec40},
       {block,
        {2423,21},
        [{match,{2423,21},{var,{2423,21},rec42},{var,{2423,21},'St0'}},
         {'case',
          {2423,28},
          {var,{2423,21},rec42},
          [{clause,
            {2423,28},
            [{tuple,
              {2423,28},
              [{atom,{2423,28},st},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'},
               {var,{2423,28},'_'}]}],
            [],
            [{call,
              {2423,28},
              {remote,
               {2423,28},
               {atom,{2423,28},erlang},
               {atom,{2423,28},setelement}},
              [{integer,{2423,28},4},
               {var,{2423,21},rec42},
               {var,{2423,31},'Ys'}]}]},
           {clause,
            [{generated,true},{location,{2423,28}}],
            [{var,[{generated,true},{location,{2423,28}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{2423,28}}],
              {remote,
               [{generated,true},{location,{2423,28}}],
               {atom,[{generated,true},{location,{2423,28}}],erlang},
               {atom,[{generated,true},{location,{2423,28}}],error}},
              [{tuple,
                [{generated,true},{location,{2423,28}}],
                [{atom,[{generated,true},{location,{2423,28}}],badrecord},
                 {var,{2423,21},rec42}]}]}]}]}]}},
      {match,{2423,5},{var,{2423,5},rec41},{var,{2423,5},'Vst'}},
      {'case',
       {2423,13},
       {var,{2423,5},rec41},
       [{clause,
         {2423,13},
         [{tuple,
           {2423,13},
           [{atom,{2423,13},vst},
            {var,{2423,13},'_'},
            {var,{2423,13},'_'},
            {var,{2423,13},'_'},
            {var,{2423,13},'_'},
            {var,{2423,13},'_'},
            {var,{2423,13},'_'}]}],
         [],
         [{call,
           {2423,13},
           {remote,
            {2423,13},
            {atom,{2423,13},erlang},
            {atom,{2423,13},setelement}},
           [{integer,{2423,13},2},
            {var,{2423,5},rec41},
            {var,{2423,13},rec40}]}]},
        {clause,
         [{generated,true},{location,{2423,13}}],
         [{var,[{generated,true},{location,{2423,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{2423,13}}],
           {remote,
            [{generated,true},{location,{2423,13}}],
            {atom,[{generated,true},{location,{2423,13}}],erlang},
            {atom,[{generated,true},{location,{2423,13}}],error}},
           [{tuple,
             [{generated,true},{location,{2423,13}}],
             [{atom,[{generated,true},{location,{2423,13}}],badrecord},
              {var,{2423,5},rec41}]}]}]}]}]}]}]}.
{function,{2426,1},
          create_term,5,
          [{clause,{2426,1},
                   [{var,{2426,1},'_'},
                    {var,{2426,1},'_'},
                    {var,{2426,1},'_'},
                    {var,{2426,1},'_'},
                    {var,{2426,1},'_'}],
                   [[{call,{2426,1},
                           {remote,{2426,1},
                                   {atom,{2426,1},fake},
                                   {atom,{2426,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2426,1199},{atom,{2426,1},ignore}]},
           {clause,{2426,1},
                   [{var,{2426,13},'Type'},
                    {var,{2426,19},'Op'},
                    {var,{2426,23},'Ss0'},
                    {var,{2426,28},'Dst'},
                    {var,{2426,33},'Vst0'}],
                   [],
                   [{debug_line,2427,1200},
                    {call,{2427,5},
                          {atom,{2427,5},create_term},
                          [{var,{2427,17},'Type'},
                           {var,{2427,23},'Op'},
                           {var,{2427,27},'Ss0'},
                           {var,{2427,32},'Dst'},
                           {var,{2427,37},'Vst0'},
                           {var,{2427,43},'Vst0'}]}]}]}.
{function,
    {2431,1},
    create_term,6,
    [{clause,
         {2431,1},
         [{var,{2431,1},'_'},
          {var,{2431,1},'_'},
          {var,{2431,1},'_'},
          {var,{2431,1},'_'},
          {var,{2431,1},'_'},
          {var,{2431,1},'_'}],
         [[{call,
               {2431,1},
               {remote,
                   {2431,1},
                   {atom,{2431,1},fake},
                   {atom,{2431,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2431,1201},{atom,{2431,1},ignore}]},
     {clause,
         {2431,1},
         [{var,{2431,13},'Type'},
          {var,{2431,19},'Op'},
          {var,{2431,23},'Ss0'},
          {var,{2431,28},'Dst'},
          {var,{2431,33},'Vst0'},
          {var,{2431,39},'OrigVst'}],
         [],
         [{debug_line,2432,1202},
          {match,
              {2432,5},
              {tuple,{2432,5},[{var,{2432,6},'Ref'},{var,{2432,11},'Vst1'}]},
              {call,
                  {2432,19},
                  {atom,{2432,19},new_value},
                  [{var,{2432,29},'Type'},
                   {var,{2432,35},'Op'},
                   {block,0,
                       [{call,
                            {2432,39},
                            {atom,{2432,39},resolve_args},
                            [{var,{2432,52},'Ss0'},
                             {var,{2432,57},'OrigVst'}]}]},
                   {var,{2432,67},'Vst0'}]}},
          {debug_line,2433,1203},
          {match,
              {2433,5},
              {var,{2433,5},'Vst'},
              {call,
                  {2433,11},
                  {atom,{2433,11},remove_fragility},
                  [{var,{2433,28},'Dst'},{var,{2433,33},'Vst1'}]}},
          {debug_line,2434,1204},
          {call,
              {2434,5},
              {atom,{2434,5},set_reg_vref},
              [{var,{2434,18},'Ref'},
               {var,{2434,23},'Dst'},
               {var,{2434,28},'Vst'}]}]}]}.
{function,{2437,1},
          extract_term,5,
          [{clause,{2437,1},
                   [{var,{2437,1},'_'},
                    {var,{2437,1},'_'},
                    {var,{2437,1},'_'},
                    {var,{2437,1},'_'},
                    {var,{2437,1},'_'}],
                   [[{call,{2437,1},
                           {remote,{2437,1},
                                   {atom,{2437,1},fake},
                                   {atom,{2437,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2437,1205},{atom,{2437,1},ignore}]},
           {clause,{2437,1},
                   [{var,{2437,14},'Type'},
                    {var,{2437,20},'Op'},
                    {var,{2437,24},'Ss0'},
                    {var,{2437,29},'Dst'},
                    {var,{2437,34},'Vst0'}],
                   [],
                   [{debug_line,2438,1206},
                    {call,{2438,5},
                          {atom,{2438,5},extract_term},
                          [{var,{2438,18},'Type'},
                           {var,{2438,24},'Op'},
                           {var,{2438,28},'Ss0'},
                           {var,{2438,33},'Dst'},
                           {var,{2438,38},'Vst0'},
                           {var,{2438,44},'Vst0'}]}]}]}.
{function,
    {2442,1},
    extract_term,6,
    [{clause,
         {2442,1},
         [{var,{2442,1},'_'},
          {var,{2442,1},'_'},
          {var,{2442,1},'_'},
          {var,{2442,1},'_'},
          {var,{2442,1},'_'},
          {var,{2442,1},'_'}],
         [[{call,
               {2442,1},
               {remote,
                   {2442,1},
                   {atom,{2442,1},fake},
                   {atom,{2442,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2442,1207},{atom,{2442,1},ignore}]},
     {clause,
         {2442,1},
         [{var,{2442,14},'Type'},
          {var,{2442,20},'Op'},
          {var,{2442,24},'Ss0'},
          {var,{2442,29},'Dst'},
          {var,{2442,34},'Vst0'},
          {var,{2442,40},'OrigVst'}],
         [],
         [{debug_line,2443,1208},
          {match,
              {2443,5},
              {tuple,{2443,5},[{var,{2443,6},'Ref'},{var,{2443,11},'Vst1'}]},
              {call,
                  {2443,19},
                  {atom,{2443,19},new_value},
                  [{var,{2443,29},'Type'},
                   {var,{2443,35},'Op'},
                   {block,0,
                       [{call,
                            {2443,39},
                            {atom,{2443,39},resolve_args},
                            [{var,{2443,52},'Ss0'},
                             {var,{2443,57},'OrigVst'}]}]},
                   {var,{2443,67},'Vst0'}]}},
          {debug_line,2444,1209},
          {match,
              {2444,5},
              {var,{2444,5},'Vst'},
              {call,
                  {2444,11},
                  {atom,{2444,11},propagate_fragility},
                  [{var,{2444,31},'Dst'},
                   {var,{2444,36},'Ss0'},
                   {var,{2444,41},'Vst1'}]}},
          {debug_line,2445,1210},
          {call,
              {2445,5},
              {atom,{2445,5},set_reg_vref},
              [{var,{2445,18},'Ref'},
               {var,{2445,23},'Dst'},
               {var,{2445,28},'Vst'}]}]}]}.
{function,
    {2450,1},
    resolve_args,2,
    [{clause,
         {2450,1},
         [{var,{2450,1},'_'},{var,{2450,1},'_'}],
         [[{call,
               {2450,1},
               {remote,
                   {2450,1},
                   {atom,{2450,1},fake},
                   {atom,{2450,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2450,1211},{atom,{2450,1},ignore}]},
     {clause,
         {2450,1},
         [{cons,
              {2450,14},
              {match,
                  {2450,15},
                  {tuple,
                      {2450,15},
                      [{var,{2450,16},'Kind'},{var,{2450,21},'_'}]},
                  {var,{2450,24},'Src'}},
              {var,{2450,30},'Args'}},
          {var,{2450,37},'Vst'}],
         [[{op,{2450,52},'=:=',{var,{2450,47},'Kind'},{atom,{2450,56},x}}],
          [{op,{2450,64},'=:=',{var,{2450,59},'Kind'},{atom,{2450,68},y}}]],
         [{debug_line,2451,1212},
          {cons,
              {2451,5},
              {call,
                  {2451,6},
                  {atom,{2451,6},get_reg_vref},
                  [{var,{2451,19},'Src'},{var,{2451,24},'Vst'}]},
              {call,
                  {2451,31},
                  {atom,{2451,31},resolve_args},
                  [{var,{2451,44},'Args'},{var,{2451,50},'Vst'}]}}]},
     {clause,
         {2452,1},
         [{cons,{2452,14},{var,{2452,15},'Lit'},{var,{2452,21},'Args'}},
          {var,{2452,28},'Vst'}],
         [],
         [{debug_line,2453,1213},
          {call,
              {2453,5},
              {atom,{2453,5},assert_literal},
              [{var,{2453,20},'Lit'}]},
          {debug_line,2454,1214},
          {cons,
              {2454,5},
              {var,{2454,6},'Lit'},
              {call,
                  {2454,12},
                  {atom,{2454,12},resolve_args},
                  [{var,{2454,25},'Args'},{var,{2454,31},'Vst'}]}}]},
     {clause,
         {2455,1},
         [{nil,{2455,14}},{var,{2455,18},'_Vst'}],
         [],
         [{debug_line,2456,1215},{nil,{2456,5}}]}]}.
{function,
    {2460,1},
    override_type,3,
    [{clause,
         {2460,1},
         [{var,{2460,1},'_'},{var,{2460,1},'_'},{var,{2460,1},'_'}],
         [[{call,
               {2460,1},
               {remote,
                   {2460,1},
                   {atom,{2460,1},fake},
                   {atom,{2460,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2460,1216},{atom,{2460,1},ignore}]},
     {clause,
         {2460,1},
         [{var,{2460,15},'Type'},{var,{2460,21},'Reg'},{var,{2460,26},'Vst'}],
         [],
         [{debug_line,2461,1217},
          {call,
              {2461,5},
              {atom,{2461,5},update_type},
              [{block,0,
                   [{'fun',
                        {2461,17},
                        {clauses,
                            [{clause,
                                 {2461,20},
                                 [{var,{2461,21},'_'},{var,{2461,24},'T'}],
                                 [],
                                 [{var,{2461,30},'T'}]}]}}]},
               {var,{2461,37},'Type'},
               {var,{2461,43},'Reg'},
               {var,{2461,48},'Vst'}]}]}]}.
{function,
    {2465,1},
    update_type,4,
    [{clause,
         {2465,1},
         [{var,{2465,1},'_'},
          {var,{2465,1},'_'},
          {var,{2465,1},'_'},
          {var,{2465,1},'_'}],
         [[{call,
               {2465,1},
               {remote,
                   {2465,1},
                   {atom,{2465,1},fake},
                   {atom,{2465,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2465,1218},{atom,{2465,1},ignore}]},
     {clause,
         {2465,1},
         [{var,{2465,13},'Merge'},
          {var,{2465,20},'With'},
          {match,
              {2465,26},
              {tuple,
                  {2465,26},
                  [{atom,{2465,26},value_ref},{var,{2465,26},'_'}]},
              {var,{2465,39},'Ref'}},
          {var,{2465,44},'Vst0'}],
         [],
         [{debug_line,2484,1219},
          {match,
              {2484,5},
              {var,{2484,5},'Current'},
              {call,
                  {2484,15},
                  {atom,{2484,15},get_concrete_type},
                  [{var,{2484,33},'Ref'},{var,{2484,38},'Vst0'}]}},
          {debug_line,2485,1220},
          {'case',
              {2485,5},
              {call,
                  {2485,10},
                  {var,{2485,10},'Merge'},
                  [{var,{2485,16},'Current'},{var,{2485,25},'With'}]},
              [{clause,
                   {2486,9},
                   [{atom,{2486,9},none}],
                   [],
                   [{debug_line,2487,1221},
                    {call,
                        {2487,13},
                        {remote,
                            {2487,13},
                            {atom,{2487,13},erlang},
                            {atom,{2487,13},throw}},
                        [{block,0,
                             [{tuple,
                                  {2487,19},
                                  [{atom,{2487,20},type_conflict},
                                   {var,{2487,35},'Current'},
                                   {var,{2487,44},'With'}]}]}]}]},
               {clause,
                   {2488,9},
                   [{var,{2488,9},'Current'}],
                   [],
                   [{debug_line,2489,1222},{var,{2489,13},'Vst0'}]},
               {clause,
                   {2490,9},
                   [{var,{2490,9},'Type'}],
                   [],
                   [{debug_line,2491,1223},
                    {match,
                        {2491,13},
                        {var,{2491,13},'Vst'},
                        {call,
                            {2491,19},
                            {atom,{2491,19},update_container_type},
                            [{var,{2491,41},'Type'},
                             {var,{2491,47},'Ref'},
                             {var,{2491,52},'Vst0'}]}},
                    {debug_line,2492,1224},
                    {call,
                        {2492,13},
                        {atom,{2492,13},set_type},
                        [{var,{2492,22},'Type'},
                         {var,{2492,28},'Ref'},
                         {var,{2492,33},'Vst'}]}]}]}]},
     {clause,
         {2494,1},
         [{var,{2494,13},'Merge'},
          {var,{2494,20},'With'},
          {match,
              {2494,26},
              {tuple,{2494,26},[{var,{2494,27},'Kind'},{var,{2494,32},'_'}]},
              {var,{2494,35},'Reg'}},
          {var,{2494,40},'Vst'}],
         [[{op,{2494,55},'=:=',{var,{2494,50},'Kind'},{atom,{2494,59},x}}],
          [{op,{2494,67},'=:=',{var,{2494,62},'Kind'},{atom,{2494,71},y}}]],
         [{debug_line,2495,1225},
          {call,
              {2495,5},
              {atom,{2495,5},update_type},
              [{var,{2495,17},'Merge'},
               {var,{2495,24},'With'},
               {block,0,
                   [{call,
                        {2495,30},
                        {atom,{2495,30},get_reg_vref},
                        [{var,{2495,43},'Reg'},{var,{2495,48},'Vst'}]}]},
               {var,{2495,54},'Vst'}]}]},
     {clause,
         {2496,1},
         [{var,{2496,13},'Merge'},
          {var,{2496,20},'With'},
          {var,{2496,26},'Literal'},
          {var,{2496,35},'Vst'}],
         [],
         [{debug_line,2499,1226},
          {match,
              {2499,5},
              {var,{2499,5},'Type'},
              {call,
                  {2499,12},
                  {atom,{2499,12},get_literal_type},
                  [{var,{2499,29},'Literal'}]}},
          {debug_line,2500,1227},
          {'case',
              {2500,5},
              {call,
                  {2500,10},
                  {var,{2500,10},'Merge'},
                  [{var,{2500,16},'Type'},{var,{2500,22},'With'}]},
              [{clause,
                   {2501,9},
                   [{atom,{2501,9},none}],
                   [],
                   [{debug_line,2501,1228},
                    {call,
                        {2501,17},
                        {remote,
                            {2501,17},
                            {atom,{2501,17},erlang},
                            {atom,{2501,17},throw}},
                        [{block,0,
                             [{tuple,
                                  {2501,23},
                                  [{atom,{2501,24},type_conflict},
                                   {var,{2501,39},'Type'},
                                   {var,{2501,45},'With'}]}]}]}]},
               {clause,
                   {2502,9},
                   [{var,{2502,9},'_Type'}],
                   [],
                   [{debug_line,2502,1229},{var,{2502,18},'Vst'}]}]}]}]}.
{function,
 {2506,1},
 update_container_type,3,
 [{clause,
   {2506,1},
   [{var,{2506,1},'_'},{var,{2506,1},'_'},{var,{2506,1},'_'}],
   [[{call,
      {2506,1},
      {remote,{2506,1},{atom,{2506,1},fake},{atom,{2506,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2506,1230},{atom,{2506,1},ignore}]},
  {clause,
   {2506,1},
   [{var,{2506,23},'Type'},
    {var,{2506,29},'Ref'},
    {match,
     {2506,34},
     {tuple,
      {2506,34},
      [{atom,{2506,34},vst},
       {tuple,
        {2506,47},
        [{atom,{2506,47},st},
         {var,{2506,54},'Vs'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'},
         {var,{2506,47},'_'}]},
       {var,{2506,34},'_'},
       {var,{2506,34},'_'},
       {var,{2506,34},'_'},
       {var,{2506,34},'_'},
       {var,{2506,34},'_'}]},
     {var,{2506,59},'Vst'}}],
   [],
   [{debug_line,2507,1231},
    {'case',
     {2507,5},
     {var,{2507,10},'Vs'},
     [{clause,
       {2508,9},
       [{map,
         {2508,9},
         [{map_field_exact,
           {2508,16},
           {var,{2508,12},'Ref'},
           {tuple,
            {2508,19},
            [{atom,{2508,19},value},
             {tuple,{2508,29},[{atom,{2508,30},bif},{atom,{2508,34},element}]},
             {cons,
              {2509,31},
              {tuple,
               {2509,32},
               [{atom,{2509,33},integer},{var,{2509,41},'Index'}]},
              {cons,{2509,48},{var,{2509,48},'Tuple'},{nil,{2509,53}}}},
             {var,{2508,19},'_'}]}}]}],
       [[{op,{2509,69},'>=',{var,{2509,63},'Index'},{integer,{2509,72},1}}]],
       [{debug_line,2510,1232},
        {'case',
         {2510,13},
         {tuple,{2510,18},[{var,{2510,19},'Index'},{var,{2510,25},'Type'}]},
         [{clause,
           {2511,17},
           [{tuple,
             {2511,17},
             [{integer,{2511,18},1},
              {tuple,
               {2511,20},
               [{atom,{2511,20},t_atom},
                {cons,
                 {2511,37},
                 {var,{2511,38},'_'},
                 {cons,
                  {2511,40},
                  {var,{2511,40},'_'},
                  {var,{2511,42},'_'}}}]}]}],
           [],
           [{debug_line,2515,1233},
            {call,
             {2515,21},
             {atom,{2515,21},update_type},
             [{block,0,[{'fun',{2515,33},{function,meet_tuple_set,2}}]},
              {var,{2515,55},'Type'},
              {var,{2515,61},'Tuple'},
              {var,{2515,68},'Vst'}]}]},
          {clause,
           {2516,17},
           [{tuple,{2516,17},[{var,{2516,18},'_'},{var,{2516,20},'_'}]}],
           [],
           [{debug_line,2517,1234},
            {match,
             {2517,21},
             {var,{2517,21},'Es'},
             {call,
              {2517,26},
              {remote,
               {2517,36},
               {atom,{2517,26},beam_types},
               {atom,{2517,37},set_tuple_element}},
              [{var,{2517,55},'Index'},
               {var,{2517,62},'Type'},
               {block,0,[{map,{2517,68},[]}]}]}},
            {debug_line,2518,1235},
            {match,
             {2518,21},
             {var,{2518,21},'TupleType'},
             {tuple,
              {2518,33},
              [{atom,{2518,33},t_tuple},
               {var,{2518,47},'Index'},
               {atom,{2518,33},false},
               {var,{2518,62},'Es'}]}},
            {debug_line,2519,1236},
            {call,
             {2519,21},
             {atom,{2519,21},update_type},
             [{block,0,[{'fun',{2519,33},{function,meet,2}}]},
              {var,{2519,45},'TupleType'},
              {var,{2519,56},'Tuple'},
              {var,{2519,63},'Vst'}]}]}]}]},
      {clause,
       {2521,9},
       [{map,{2521,9},[]}],
       [],
       [{debug_line,2522,1237},{var,{2522,13},'Vst'}]}]}]}]}.
{function,
 {2525,1},
 meet_tuple_set,2,
 [{clause,
   {2525,1},
   [{var,{2525,1},'_'},{var,{2525,1},'_'}],
   [[{call,
      {2525,1},
      {remote,{2525,1},{atom,{2525,1},fake},{atom,{2525,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2525,1238},{atom,{2525,1},ignore}]},
  {clause,
   {2525,1},
   [{var,{2525,16},'Type'},
    {tuple,{2525,22},[{atom,{2525,22},t_atom},{var,{2525,39},'Atoms'}]}],
   [],
   [{debug_line,2527,1239},
    {match,
     {2527,5},
     {tuple,
      {2527,5},
      [{atom,{2527,5},t_tuple},
       {var,{2527,19},'Size'},
       {var,{2527,30},'Exact'},
       {var,{2527,5},'_'}]},
     {call,
      {2527,39},
      {atom,{2527,39},normalize},
      [{block,0,
        [{call,
          {2527,49},
          {atom,{2527,49},meet},
          [{var,{2527,54},'Type'},
           {block,0,
            [{tuple,
              {2527,60},
              [{atom,{2527,60},t_tuple},
               {integer,{2527,60},0},
               {atom,{2527,60},false},
               {map,{2527,60},[]}]}]}]}]}]}},
    {debug_line,2528,1240},
    {match,
     {2528,5},
     {var,{2528,5},'Tuples'},
     {lc,
      {2528,14},
      {block,0,
       [{tuple,
         {2528,15},
         [{atom,{2528,15},t_tuple},
          {var,{2528,29},'Size'},
          {var,{2528,40},'Exact'},
          {map,
           {2529,33},
           [{map_field_assoc,
             {2529,37},
             {integer,{2529,35},1},
             {tuple,
              {2529,40},
              [{atom,{2529,40},t_atom},
               {cons,{2529,57},{var,{2529,58},'A'},{nil,{2529,59}}}]}}]}]}]},
      [{block,0,[{debug_line,2530,1241},{atom,{2530,23},true}]},
       {generate,{2530,20},{var,{2530,18},'A'},{var,{2530,23},'Atoms'}}]}},
    {debug_line,2531,1242},
    {match,
     {2531,5},
     {var,{2531,5},'TupleSet'},
     {call,
      {2531,16},
      {remote,{2531,16},{atom,{2531,16},lists},{atom,{2531,16},foldl}},
      [{block,0,[{'fun',{2531,22},{function,join,2}}]},
       {block,0,
        [{call,
          {2531,34},
          {remote,{2531,34},{atom,{2531,34},erlang},{atom,{2531,34},hd}},
          [{var,{2531,37},'Tuples'}]}]},
       {block,0,
        [{call,
          {2531,46},
          {remote,{2531,46},{atom,{2531,46},erlang},{atom,{2531,46},tl}},
          [{var,{2531,49},'Tuples'}]}]}]}},
    {debug_line,2532,1243},
    {call,
     {2532,5},
     {atom,{2532,5},meet},
     [{var,{2532,10},'Type'},{var,{2532,16},'TupleSet'}]}]}]}.
{function,
    {2534,1},
    update_eq_types,3,
    [{clause,
         {2534,1},
         [{var,{2534,1},'_'},{var,{2534,1},'_'},{var,{2534,1},'_'}],
         [[{call,
               {2534,1},
               {remote,
                   {2534,1},
                   {atom,{2534,1},fake},
                   {atom,{2534,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2534,1244},{atom,{2534,1},ignore}]},
     {clause,
         {2534,1},
         [{var,{2534,17},'LHS'},{var,{2534,22},'RHS'},{var,{2534,27},'Vst0'}],
         [],
         [{debug_line,2535,1245},
          {match,
              {2535,5},
              {var,{2535,5},'LType'},
              {call,
                  {2535,13},
                  {atom,{2535,13},get_term_type},
                  [{var,{2535,27},'LHS'},{var,{2535,32},'Vst0'}]}},
          {debug_line,2536,1246},
          {match,
              {2536,5},
              {var,{2536,5},'RType'},
              {call,
                  {2536,13},
                  {atom,{2536,13},get_term_type},
                  [{var,{2536,27},'RHS'},{var,{2536,32},'Vst0'}]}},
          {debug_line,2538,1247},
          {match,
              {2538,5},
              {var,{2538,5},'Vst1'},
              {call,
                  {2538,12},
                  {atom,{2538,12},update_type},
                  [{block,0,[{'fun',{2538,24},{function,meet,2}}]},
                   {var,{2538,36},'RType'},
                   {var,{2538,43},'LHS'},
                   {var,{2538,48},'Vst0'}]}},
          {debug_line,2539,1248},
          {match,
              {2539,5},
              {var,{2539,5},'Vst'},
              {call,
                  {2539,11},
                  {atom,{2539,11},update_type},
                  [{block,0,[{'fun',{2539,23},{function,meet,2}}]},
                   {var,{2539,35},'LType'},
                   {var,{2539,42},'RHS'},
                   {var,{2539,47},'Vst1'}]}},
          {debug_line,2541,1249},
          {call,
              {2541,5},
              {atom,{2541,5},infer_types},
              [{atom,{2541,17},eq_exact},
               {var,{2541,27},'LHS'},
               {var,{2541,32},'RHS'},
               {var,{2541,37},'Vst'}]}]}]}.
{function,{2543,1},
          update_ne_types,3,
          [{clause,{2543,1},
                   [{var,{2543,1},'_'},{var,{2543,1},'_'},{var,{2543,1},'_'}],
                   [[{call,{2543,1},
                           {remote,{2543,1},
                                   {atom,{2543,1},fake},
                                   {atom,{2543,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2543,1250},{atom,{2543,1},ignore}]},
           {clause,{2543,1},
                   [{var,{2543,17},'LHS'},
                    {var,{2543,22},'RHS'},
                    {var,{2543,27},'Vst0'}],
                   [],
                   [{debug_line,2544,1251},
                    {match,{2544,5},
                           {var,{2544,5},'Vst1'},
                           {call,{2544,12},
                                 {atom,{2544,12},update_ne_types_1},
                                 [{var,{2544,30},'LHS'},
                                  {var,{2544,35},'RHS'},
                                  {var,{2544,40},'Vst0'}]}},
                    {debug_line,2545,1252},
                    {match,{2545,5},
                           {var,{2545,5},'Vst'},
                           {call,{2545,11},
                                 {atom,{2545,11},update_ne_types_1},
                                 [{var,{2545,29},'RHS'},
                                  {var,{2545,34},'LHS'},
                                  {var,{2545,39},'Vst1'}]}},
                    {debug_line,2547,1253},
                    {call,{2547,5},
                          {atom,{2547,5},infer_types},
                          [{atom,{2547,17},ne_exact},
                           {var,{2547,27},'LHS'},
                           {var,{2547,32},'RHS'},
                           {var,{2547,37},'Vst'}]}]}]}.
{function,
    {2549,1},
    update_ne_types_1,3,
    [{clause,
         {2549,1},
         [{var,{2549,1},'_'},{var,{2549,1},'_'},{var,{2549,1},'_'}],
         [[{call,
               {2549,1},
               {remote,
                   {2549,1},
                   {atom,{2549,1},fake},
                   {atom,{2549,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2549,1254},{atom,{2549,1},ignore}]},
     {clause,
         {2549,1},
         [{var,{2549,19},'LHS'},{var,{2549,24},'RHS'},{var,{2549,29},'Vst0'}],
         [],
         [{debug_line,2559,1255},
          {match,
              {2559,5},
              {var,{2559,5},'RType'},
              {call,
                  {2559,13},
                  {atom,{2559,13},get_term_type},
                  [{var,{2559,27},'RHS'},{var,{2559,32},'Vst0'}]}},
          {debug_line,2560,1256},
          {'case',
              {2560,5},
              {call,
                  {2560,10},
                  {remote,
                      {2560,20},
                      {atom,{2560,10},beam_types},
                      {atom,{2560,21},is_singleton_type}},
                  [{var,{2560,39},'RType'}]},
              [{clause,
                   {2561,9},
                   [{atom,{2561,9},true}],
                   [],
                   [{debug_line,2562,1257},
                    {match,
                        {2562,13},
                        {var,{2562,13},'Vst'},
                        {call,
                            {2562,19},
                            {atom,{2562,19},update_type},
                            [{block,0,
                                 [{'fun',{2562,31},{function,subtract,2}}]},
                             {var,{2562,47},'RType'},
                             {var,{2562,54},'LHS'},
                             {var,{2562,59},'Vst0'}]}},
                    {debug_line,2567,1258},
                    {'case',
                        {2567,13},
                        {call,
                            {2567,18},
                            {atom,{2567,18},canonical_value},
                            [{var,{2567,34},'LHS'},{var,{2567,39},'Vst'}]},
                        [{clause,
                             {2568,17},
                             [{var,{2568,17},'LHS'}],
                             [],
                             [{debug_line,2568,1259},{var,{2568,24},'Vst'}]},
                         {clause,
                             {2569,17},
                             [{var,{2569,17},'Value'}],
                             [],
                             [{debug_line,2569,1260},
                              {call,
                                  {2569,26},
                                  {atom,{2569,26},infer_types},
                                  [{atom,{2569,38},eq_exact},
                                   {var,{2569,48},'LHS'},
                                   {var,{2569,53},'Value'},
                                   {var,{2569,60},'Vst'}]}]}]}]},
               {clause,
                   {2571,9},
                   [{atom,{2571,9},false}],
                   [],
                   [{debug_line,2572,1261},{var,{2572,13},'Vst0'}]}]}]}]}.
{function,
    {2577,1},
    assign_1,3,
    [{clause,
         {2577,1},
         [{var,{2577,1},'_'},{var,{2577,1},'_'},{var,{2577,1},'_'}],
         [[{call,
               {2577,1},
               {remote,
                   {2577,1},
                   {atom,{2577,1},fake},
                   {atom,{2577,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2577,1262},{atom,{2577,1},ignore}]},
     {clause,
         {2577,1},
         [{var,{2577,10},'Src'},{var,{2577,15},'Dst'},{var,{2577,20},'Vst0'}],
         [],
         [{debug_line,2578,1263},
          {call,
              {2578,5},
              {atom,{2578,5},assert_movable},
              [{var,{2578,20},'Src'},{var,{2578,25},'Vst0'}]},
          {debug_line,2579,1264},
          {match,
              {2579,5},
              {var,{2579,5},'Vst'},
              {call,
                  {2579,11},
                  {atom,{2579,11},propagate_fragility},
                  [{var,{2579,31},'Dst'},
                   {block,0,
                       [{cons,
                            {2579,36},
                            {var,{2579,37},'Src'},
                            {nil,{2579,40}}}]},
                   {var,{2579,43},'Vst0'}]}},
          {debug_line,2580,1265},
          {call,
              {2580,5},
              {atom,{2580,5},set_reg_vref},
              [{block,0,
                   [{call,
                        {2580,18},
                        {atom,{2580,18},get_reg_vref},
                        [{var,{2580,31},'Src'},{var,{2580,36},'Vst'}]}]},
               {var,{2580,42},'Dst'},
               {var,{2580,47},'Vst'}]}]}]}.
{function,
 {2582,1},
 set_reg_vref,3,
 [{clause,
   {2582,1},
   [{var,{2582,1},'_'},{var,{2582,1},'_'},{var,{2582,1},'_'}],
   [[{call,
      {2582,1},
      {remote,{2582,1},{atom,{2582,1},fake},{atom,{2582,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2582,1266},{atom,{2582,1},ignore}]},
  {clause,
   {2582,1},
   [{var,{2582,14},'Ref'},
    {match,
     {2582,19},
     {tuple,{2582,19},[{atom,{2582,20},x},{var,{2582,22},'_'}]},
     {var,{2582,25},'Dst'}},
    {var,{2582,30},'Vst'}],
   [],
   [{debug_line,2583,1267},
    {call,{2583,5},{atom,{2583,5},check_limit},[{var,{2583,17},'Dst'}]},
    {debug_line,2584,1268},
    {match,
     {2584,5},
     {tuple,
      {2584,5},
      [{atom,{2584,5},vst},
       {match,
        {2584,18},
        {tuple,
         {2584,18},
         [{atom,{2584,18},st},
          {var,{2584,18},'_'},
          {var,{2584,25},'Xs0'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'},
          {var,{2584,18},'_'}]},
        {var,{2584,30},'St0'}},
       {var,{2584,5},'_'},
       {var,{2584,5},'_'},
       {var,{2584,5},'_'},
       {var,{2584,5},'_'},
       {var,{2584,5},'_'}]},
     {var,{2584,37},'Vst'}},
    {debug_line,2585,1269},
    {match,
     {2585,5},
     {var,{2585,5},'St'},
     {block,
      {2585,10},
      [{match,
        {2585,17},
        {var,{2585,17},rec43},
        {map,
         {2585,23},
         {var,{2585,20},'Xs0'},
         [{map_field_assoc,
           {2585,30},
           {var,{2585,26},'Dst'},
           {var,{2585,33},'Ref'}}]}},
       {match,{2585,10},{var,{2585,10},rec44},{var,{2585,10},'St0'}},
       {'case',
        {2585,17},
        {var,{2585,10},rec44},
        [{clause,
          {2585,17},
          [{tuple,
            {2585,17},
            [{atom,{2585,17},st},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'},
             {var,{2585,17},'_'}]}],
          [],
          [{call,
            {2585,17},
            {remote,
             {2585,17},
             {atom,{2585,17},erlang},
             {atom,{2585,17},setelement}},
            [{integer,{2585,17},3},
             {var,{2585,10},rec44},
             {var,{2585,17},rec43}]}]},
         {clause,
          [{generated,true},{location,{2585,17}}],
          [{var,[{generated,true},{location,{2585,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2585,17}}],
            {remote,
             [{generated,true},{location,{2585,17}}],
             {atom,[{generated,true},{location,{2585,17}}],erlang},
             {atom,[{generated,true},{location,{2585,17}}],error}},
            [{tuple,
              [{generated,true},{location,{2585,17}}],
              [{atom,[{generated,true},{location,{2585,17}}],badrecord},
               {var,{2585,10},rec44}]}]}]}]}]}},
    {debug_line,2586,1270},
    {block,
     {2586,5},
     [{match,{2586,5},{var,{2586,5},rec45},{var,{2586,5},'Vst'}},
      {'case',
       {2586,13},
       {var,{2586,5},rec45},
       [{clause,
         {2586,13},
         [{tuple,
           {2586,13},
           [{atom,{2586,13},vst},
            {var,{2586,13},'_'},
            {var,{2586,13},'_'},
            {var,{2586,13},'_'},
            {var,{2586,13},'_'},
            {var,{2586,13},'_'},
            {var,{2586,13},'_'}]}],
         [],
         [{call,
           {2586,13},
           {remote,
            {2586,13},
            {atom,{2586,13},erlang},
            {atom,{2586,13},setelement}},
           [{integer,{2586,13},2},
            {var,{2586,5},rec45},
            {var,{2586,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{2586,13}}],
         [{var,[{generated,true},{location,{2586,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{2586,13}}],
           {remote,
            [{generated,true},{location,{2586,13}}],
            {atom,[{generated,true},{location,{2586,13}}],erlang},
            {atom,[{generated,true},{location,{2586,13}}],error}},
           [{tuple,
             [{generated,true},{location,{2586,13}}],
             [{atom,[{generated,true},{location,{2586,13}}],badrecord},
              {var,{2586,5},rec45}]}]}]}]}]}]},
  {clause,
   {2587,1},
   [{var,{2587,14},'Ref'},
    {match,
     {2587,19},
     {tuple,{2587,19},[{atom,{2587,20},y},{var,{2587,22},'_'}]},
     {var,{2587,25},'Dst'}},
    {match,
     {2587,30},
     {tuple,
      {2587,30},
      [{atom,{2587,30},vst},
       {match,
        {2587,43},
        {tuple,
         {2587,43},
         [{atom,{2587,43},st},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,50},'Ys0'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'},
          {var,{2587,43},'_'}]},
        {var,{2587,55},'St0'}},
       {var,{2587,30},'_'},
       {var,{2587,30},'_'},
       {var,{2587,30},'_'},
       {var,{2587,30},'_'},
       {var,{2587,30},'_'}]},
     {var,{2587,62},'Vst'}}],
   [],
   [{debug_line,2588,1271},
    {call,{2588,5},{atom,{2588,5},check_limit},[{var,{2588,17},'Dst'}]},
    {debug_line,2589,1272},
    {'case',
     {2589,5},
     {var,{2589,10},'Ys0'},
     [{clause,
       {2590,9},
       [{map,
         {2590,9},
         [{map_field_exact,
           {2590,16},
           {var,{2590,12},'Dst'},
           {match,
            {2590,19},
            {tuple,{2590,19},[{atom,{2590,20},catchtag},{var,{2590,29},'_'}]},
            {var,{2590,32},'Tag'}}}]}],
       [],
       [{debug_line,2591,1273},
        {call,{2591,13},{atom,{2591,13},error},[{var,{2591,19},'Tag'}]}]},
      {clause,
       {2592,9},
       [{map,
         {2592,9},
         [{map_field_exact,
           {2592,16},
           {var,{2592,12},'Dst'},
           {match,
            {2592,19},
            {tuple,{2592,19},[{atom,{2592,20},trytag},{var,{2592,27},'_'}]},
            {var,{2592,30},'Tag'}}}]}],
       [],
       [{debug_line,2593,1274},
        {call,{2593,13},{atom,{2593,13},error},[{var,{2593,19},'Tag'}]}]},
      {clause,
       {2594,9},
       [{map,
         {2594,9},
         [{map_field_exact,
           {2594,16},
           {var,{2594,12},'Dst'},
           {var,{2594,19},'_'}}]}],
       [],
       [{debug_line,2595,1275},
        {match,
         {2595,13},
         {var,{2595,13},'St'},
         {block,
          {2595,18},
          [{match,
            {2595,25},
            {var,{2595,25},rec46},
            {map,
             {2595,31},
             {var,{2595,28},'Ys0'},
             [{map_field_assoc,
               {2595,38},
               {var,{2595,34},'Dst'},
               {var,{2595,41},'Ref'}}]}},
           {match,{2595,18},{var,{2595,18},rec47},{var,{2595,18},'St0'}},
           {'case',
            {2595,25},
            {var,{2595,18},rec47},
            [{clause,
              {2595,25},
              [{tuple,
                {2595,25},
                [{atom,{2595,25},st},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'},
                 {var,{2595,25},'_'}]}],
              [],
              [{call,
                {2595,25},
                {remote,
                 {2595,25},
                 {atom,{2595,25},erlang},
                 {atom,{2595,25},setelement}},
                [{integer,{2595,25},4},
                 {var,{2595,18},rec47},
                 {var,{2595,25},rec46}]}]},
             {clause,
              [{generated,true},{location,{2595,25}}],
              [{var,[{generated,true},{location,{2595,25}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2595,25}}],
                {remote,
                 [{generated,true},{location,{2595,25}}],
                 {atom,[{generated,true},{location,{2595,25}}],erlang},
                 {atom,[{generated,true},{location,{2595,25}}],error}},
                [{tuple,
                  [{generated,true},{location,{2595,25}}],
                  [{atom,[{generated,true},{location,{2595,25}}],badrecord},
                   {var,{2595,18},rec47}]}]}]}]}]}},
        {debug_line,2596,1276},
        {block,
         {2596,13},
         [{match,{2596,13},{var,{2596,13},rec48},{var,{2596,13},'Vst'}},
          {'case',
           {2596,21},
           {var,{2596,13},rec48},
           [{clause,
             {2596,21},
             [{tuple,
               {2596,21},
               [{atom,{2596,21},vst},
                {var,{2596,21},'_'},
                {var,{2596,21},'_'},
                {var,{2596,21},'_'},
                {var,{2596,21},'_'},
                {var,{2596,21},'_'},
                {var,{2596,21},'_'}]}],
             [],
             [{call,
               {2596,21},
               {remote,
                {2596,21},
                {atom,{2596,21},erlang},
                {atom,{2596,21},setelement}},
               [{integer,{2596,21},2},
                {var,{2596,13},rec48},
                {var,{2596,29},'St'}]}]},
            {clause,
             [{generated,true},{location,{2596,21}}],
             [{var,[{generated,true},{location,{2596,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2596,21}}],
               {remote,
                [{generated,true},{location,{2596,21}}],
                {atom,[{generated,true},{location,{2596,21}}],erlang},
                {atom,[{generated,true},{location,{2596,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{2596,21}}],
                 [{atom,[{generated,true},{location,{2596,21}}],badrecord},
                  {var,{2596,13},rec48}]}]}]}]}]}]},
      {clause,
       {2597,9},
       [{map,{2597,9},[]}],
       [],
       [{debug_line,2600,1277},
        {call,
         {2600,13},
         {atom,{2600,13},error},
         [{block,0,
           [{tuple,
             {2600,19},
             [{atom,{2600,20},invalid_store},{var,{2600,35},'Dst'}]}]}]}]}]}]},
  {clause,
   {2602,1},
   [{var,{2602,14},'_Ref'},{var,{2602,20},'Dst'},{var,{2602,25},'_Vst'}],
   [],
   [{debug_line,2603,1278},
    {call,
     {2603,5},
     {atom,{2603,5},error},
     [{block,0,
       [{tuple,
         {2603,11},
         [{atom,{2603,12},invalid_register},{var,{2603,30},'Dst'}]}]}]}]}]}.
{function,
    {2605,1},
    get_reg_vref,2,
    [{clause,
         {2605,1},
         [{var,{2605,1},'_'},{var,{2605,1},'_'}],
         [[{call,
               {2605,1},
               {remote,
                   {2605,1},
                   {atom,{2605,1},fake},
                   {atom,{2605,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2605,1279},{atom,{2605,1},ignore}]},
     {clause,
         {2605,1},
         [{match,
              {2605,14},
              {tuple,{2605,14},[{atom,{2605,15},x},{var,{2605,17},'_'}]},
              {var,{2605,20},'Src'}},
          {tuple,
              {2605,25},
              [{atom,{2605,25},vst},
               {tuple,
                   {2605,38},
                   [{atom,{2605,38},st},
                    {var,{2605,38},'_'},
                    {var,{2605,45},'Xs'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'},
                    {var,{2605,38},'_'}]},
               {var,{2605,25},'_'},
               {var,{2605,25},'_'},
               {var,{2605,25},'_'},
               {var,{2605,25},'_'},
               {var,{2605,25},'_'}]}],
         [],
         [{debug_line,2606,1280},
          {call,{2606,5},{atom,{2606,5},check_limit},[{var,{2606,17},'Src'}]},
          {debug_line,2607,1281},
          {'case',
              {2607,5},
              {var,{2607,10},'Xs'},
              [{clause,
                   {2608,9},
                   [{map,
                        {2608,9},
                        [{map_field_exact,
                             {2608,16},
                             {var,{2608,12},'Src'},
                             {match,
                                 {2608,19},
                                 {tuple,
                                     {2608,19},
                                     [{atom,{2608,19},value_ref},
                                      {var,{2608,19},'_'}]},
                                 {var,{2608,32},'Ref'}}}]}],
                   [],
                   [{debug_line,2609,1282},{var,{2609,13},'Ref'}]},
               {clause,
                   {2610,9},
                   [{map,{2610,9},[]}],
                   [],
                   [{debug_line,2611,1283},
                    {call,
                        {2611,13},
                        {atom,{2611,13},error},
                        [{block,0,
                             [{tuple,
                                  {2611,19},
                                  [{atom,{2611,20},uninitialized_reg},
                                   {var,{2611,39},'Src'}]}]}]}]}]}]},
     {clause,
         {2613,1},
         [{match,
              {2613,14},
              {tuple,{2613,14},[{atom,{2613,15},y},{var,{2613,17},'_'}]},
              {var,{2613,20},'Src'}},
          {tuple,
              {2613,25},
              [{atom,{2613,25},vst},
               {tuple,
                   {2613,38},
                   [{atom,{2613,38},st},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,45},'Ys'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'},
                    {var,{2613,38},'_'}]},
               {var,{2613,25},'_'},
               {var,{2613,25},'_'},
               {var,{2613,25},'_'},
               {var,{2613,25},'_'},
               {var,{2613,25},'_'}]}],
         [],
         [{debug_line,2614,1284},
          {call,{2614,5},{atom,{2614,5},check_limit},[{var,{2614,17},'Src'}]},
          {debug_line,2615,1285},
          {'case',
              {2615,5},
              {var,{2615,10},'Ys'},
              [{clause,
                   {2616,9},
                   [{map,
                        {2616,9},
                        [{map_field_exact,
                             {2616,16},
                             {var,{2616,12},'Src'},
                             {match,
                                 {2616,19},
                                 {tuple,
                                     {2616,19},
                                     [{atom,{2616,19},value_ref},
                                      {var,{2616,19},'_'}]},
                                 {var,{2616,32},'Ref'}}}]}],
                   [],
                   [{debug_line,2617,1286},{var,{2617,13},'Ref'}]},
               {clause,
                   {2618,9},
                   [{map,
                        {2618,9},
                        [{map_field_exact,
                             {2618,16},
                             {var,{2618,12},'Src'},
                             {atom,{2618,19},initialized}}]}],
                   [],
                   [{debug_line,2619,1287},
                    {call,
                        {2619,13},
                        {atom,{2619,13},error},
                        [{block,0,
                             [{tuple,
                                  {2619,19},
                                  [{atom,{2619,20},unassigned},
                                   {var,{2619,32},'Src'}]}]}]}]},
               {clause,
                   {2620,9},
                   [{map,
                        {2620,9},
                        [{map_field_exact,
                             {2620,16},
                             {var,{2620,12},'Src'},
                             {var,{2620,19},'Tag'}}]}],
                   [[{op,{2620,34},
                         '=/=',
                         {var,{2620,30},'Tag'},
                         {atom,{2620,38},uninitialized}}]],
                   [{debug_line,2621,1288},
                    {call,
                        {2621,13},
                        {atom,{2621,13},error},
                        [{var,{2621,19},'Tag'}]}]},
               {clause,
                   {2622,9},
                   [{map,{2622,9},[]}],
                   [],
                   [{debug_line,2623,1289},
                    {call,
                        {2623,13},
                        {atom,{2623,13},error},
                        [{block,0,
                             [{tuple,
                                  {2623,19},
                                  [{atom,{2623,20},uninitialized_reg},
                                   {var,{2623,39},'Src'}]}]}]}]}]}]},
     {clause,
         {2625,1},
         [{var,{2625,14},'Src'},{var,{2625,19},'_Vst'}],
         [],
         [{debug_line,2626,1290},
          {call,
              {2626,5},
              {atom,{2626,5},error},
              [{block,0,
                   [{tuple,
                        {2626,11},
                        [{atom,{2626,12},invalid_register},
                         {var,{2626,30},'Src'}]}]}]}]}]}.
{function,
 {2628,1},
 set_type,3,
 [{clause,
   {2628,1},
   [{var,{2628,1},'_'},{var,{2628,1},'_'},{var,{2628,1},'_'}],
   [[{call,
      {2628,1},
      {remote,{2628,1},{atom,{2628,1},fake},{atom,{2628,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2628,1291},{atom,{2628,1},ignore}]},
  {clause,
   {2628,1},
   [{var,{2628,10},'Type'},
    {match,
     {2628,16},
     {tuple,{2628,16},[{atom,{2628,16},value_ref},{var,{2628,16},'_'}]},
     {var,{2628,29},'Ref'}},
    {match,
     {2628,34},
     {tuple,
      {2628,34},
      [{atom,{2628,34},vst},
       {match,
        {2628,47},
        {tuple,
         {2628,47},
         [{atom,{2628,47},st},
          {var,{2628,54},'Vs0'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'},
          {var,{2628,47},'_'}]},
        {var,{2628,59},'St'}},
       {var,{2628,34},'_'},
       {var,{2628,34},'_'},
       {var,{2628,34},'_'},
       {var,{2628,34},'_'},
       {var,{2628,34},'_'}]},
     {var,{2628,63},'Vst'}}],
   [],
   [{debug_line,2629,1292},
    {match,
     {2629,5},
     {map,
      {2629,5},
      [{map_field_exact,
        {2629,12},
        {var,{2629,8},'Ref'},
        {match,
         {2629,15},
         {tuple,
          {2629,15},
          [{atom,{2629,15},value},
           {var,{2629,15},'_'},
           {var,{2629,15},'_'},
           {var,{2629,15},'_'}]},
         {var,{2629,24},'Entry'}}}]},
     {var,{2629,34},'Vs0'}},
    {debug_line,2630,1293},
    {match,
     {2630,5},
     {var,{2630,5},'Vs'},
     {map,
      {2630,13},
      {var,{2630,10},'Vs0'},
      [{map_field_assoc,
        {2630,20},
        {var,{2630,16},'Ref'},
        {block,
         {2630,23},
         [{match,{2630,23},{var,{2630,23},rec49},{var,{2630,23},'Entry'}},
          {'case',
           {2630,35},
           {var,{2630,23},rec49},
           [{clause,
             {2630,35},
             [{tuple,
               {2630,35},
               [{atom,{2630,35},value},
                {var,{2630,35},'_'},
                {var,{2630,35},'_'},
                {var,{2630,35},'_'}]}],
             [],
             [{call,
               {2630,35},
               {remote,
                {2630,35},
                {atom,{2630,35},erlang},
                {atom,{2630,35},setelement}},
               [{integer,{2630,35},4},
                {var,{2630,23},rec49},
                {var,{2630,40},'Type'}]}]},
            {clause,
             [{generated,true},{location,{2630,35}}],
             [{var,[{generated,true},{location,{2630,35}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2630,35}}],
               {remote,
                [{generated,true},{location,{2630,35}}],
                {atom,[{generated,true},{location,{2630,35}}],erlang},
                {atom,[{generated,true},{location,{2630,35}}],error}},
               [{tuple,
                 [{generated,true},{location,{2630,35}}],
                 [{atom,[{generated,true},{location,{2630,35}}],badrecord},
                  {var,{2630,23},rec49}]}]}]}]}]}}]}},
    {debug_line,2631,1294},
    {block,
     {2631,5},
     [{match,
       {2631,13},
       {var,{2631,13},rec50},
       {block,
        {2631,21},
        [{match,{2631,21},{var,{2631,21},rec52},{var,{2631,21},'St'}},
         {'case',
          {2631,27},
          {var,{2631,21},rec52},
          [{clause,
            {2631,27},
            [{tuple,
              {2631,27},
              [{atom,{2631,27},st},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'},
               {var,{2631,27},'_'}]}],
            [],
            [{call,
              {2631,27},
              {remote,
               {2631,27},
               {atom,{2631,27},erlang},
               {atom,{2631,27},setelement}},
              [{integer,{2631,27},2},
               {var,{2631,21},rec52},
               {var,{2631,30},'Vs'}]}]},
           {clause,
            [{generated,true},{location,{2631,27}}],
            [{var,[{generated,true},{location,{2631,27}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{2631,27}}],
              {remote,
               [{generated,true},{location,{2631,27}}],
               {atom,[{generated,true},{location,{2631,27}}],erlang},
               {atom,[{generated,true},{location,{2631,27}}],error}},
              [{tuple,
                [{generated,true},{location,{2631,27}}],
                [{atom,[{generated,true},{location,{2631,27}}],badrecord},
                 {var,{2631,21},rec52}]}]}]}]}]}},
      {match,{2631,5},{var,{2631,5},rec51},{var,{2631,5},'Vst'}},
      {'case',
       {2631,13},
       {var,{2631,5},rec51},
       [{clause,
         {2631,13},
         [{tuple,
           {2631,13},
           [{atom,{2631,13},vst},
            {var,{2631,13},'_'},
            {var,{2631,13},'_'},
            {var,{2631,13},'_'},
            {var,{2631,13},'_'},
            {var,{2631,13},'_'},
            {var,{2631,13},'_'}]}],
         [],
         [{call,
           {2631,13},
           {remote,
            {2631,13},
            {atom,{2631,13},erlang},
            {atom,{2631,13},setelement}},
           [{integer,{2631,13},2},
            {var,{2631,5},rec51},
            {var,{2631,13},rec50}]}]},
        {clause,
         [{generated,true},{location,{2631,13}}],
         [{var,[{generated,true},{location,{2631,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{2631,13}}],
           {remote,
            [{generated,true},{location,{2631,13}}],
            {atom,[{generated,true},{location,{2631,13}}],erlang},
            {atom,[{generated,true},{location,{2631,13}}],error}},
           [{tuple,
             [{generated,true},{location,{2631,13}}],
             [{atom,[{generated,true},{location,{2631,13}}],badrecord},
              {var,{2631,5},rec51}]}]}]}]}]}]}]}.
{function,
 {2633,1},
 new_value,4,
 [{clause,
   {2633,1},
   [{var,{2633,1},'_'},
    {var,{2633,1},'_'},
    {var,{2633,1},'_'},
    {var,{2633,1},'_'}],
   [[{call,
      {2633,1},
      {remote,{2633,1},{atom,{2633,1},fake},{atom,{2633,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2633,1295},{atom,{2633,1},ignore}]},
  {clause,
   {2633,1},
   [{atom,{2633,11},none},
    {var,{2633,17},'_'},
    {var,{2633,20},'_'},
    {var,{2633,23},'_'}],
   [],
   [{debug_line,2634,1296},
    {call,
     {2634,5},
     {atom,{2634,5},error},
     [{atom,{2634,11},creating_none_value}]}]},
  {clause,
   {2635,1},
   [{var,{2635,11},'Type'},
    {var,{2635,17},'Op'},
    {var,{2635,21},'Ss'},
    {match,
     {2635,25},
     {tuple,
      {2635,25},
      [{atom,{2635,25},vst},
       {match,
        {2635,38},
        {tuple,
         {2635,38},
         [{atom,{2635,38},st},
          {var,{2635,45},'Vs0'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'},
          {var,{2635,38},'_'}]},
        {var,{2635,50},'St'}},
       {var,{2635,25},'_'},
       {var,{2635,25},'_'},
       {var,{2635,25},'_'},
       {var,{2635,25},'_'},
       {var,{2635,61},'Counter'}]},
     {var,{2635,70},'Vst'}}],
   [],
   [{debug_line,2636,1297},
    {match,
     {2636,5},
     {var,{2636,5},'Ref'},
     {tuple,{2636,11},[{atom,{2636,11},value_ref},{var,{2636,25},'Counter'}]}},
    {debug_line,2637,1298},
    {match,
     {2637,5},
     {var,{2637,5},'Vs'},
     {map,
      {2637,13},
      {var,{2637,10},'Vs0'},
      [{map_field_assoc,
        {2637,20},
        {var,{2637,16},'Ref'},
        {tuple,
         {2637,23},
         [{atom,{2637,23},value},
          {var,{2637,33},'Op'},
          {var,{2637,41},'Ss'},
          {var,{2637,49},'Type'}]}}]}},
    {debug_line,2639,1299},
    {tuple,
     {2639,5},
     [{var,{2639,6},'Ref'},
      {block,
       {2639,11},
       [{match,
         {2639,19},
         {var,{2639,19},rec53},
         {block,
          {2639,27},
          [{match,{2639,27},{var,{2639,27},rec56},{var,{2639,27},'St'}},
           {'case',
            {2639,33},
            {var,{2639,27},rec56},
            [{clause,
              {2639,33},
              [{tuple,
                {2639,33},
                [{atom,{2639,33},st},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'},
                 {var,{2639,33},'_'}]}],
              [],
              [{call,
                {2639,33},
                {remote,
                 {2639,33},
                 {atom,{2639,33},erlang},
                 {atom,{2639,33},setelement}},
                [{integer,{2639,33},2},
                 {var,{2639,27},rec56},
                 {var,{2639,36},'Vs'}]}]},
             {clause,
              [{generated,true},{location,{2639,33}}],
              [{var,[{generated,true},{location,{2639,33}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2639,33}}],
                {remote,
                 [{generated,true},{location,{2639,33}}],
                 {atom,[{generated,true},{location,{2639,33}}],erlang},
                 {atom,[{generated,true},{location,{2639,33}}],error}},
                [{tuple,
                  [{generated,true},{location,{2639,33}}],
                  [{atom,[{generated,true},{location,{2639,33}}],badrecord},
                   {var,{2639,27},rec56}]}]}]}]}]}},
        {match,
         {2639,40},
         {var,{2639,40},rec54},
         {op,{2639,55},'+',{var,{2639,48},'Counter'},{integer,{2639,56},1}}},
        {match,{2639,11},{var,{2639,11},rec55},{var,{2639,11},'Vst'}},
        {'case',
         {2639,19},
         {var,{2639,11},rec55},
         [{clause,
           {2639,19},
           [{tuple,
             {2639,19},
             [{atom,{2639,19},vst},
              {var,{2639,19},'_'},
              {var,{2639,19},'_'},
              {var,{2639,19},'_'},
              {var,{2639,19},'_'},
              {var,{2639,19},'_'},
              {var,{2639,19},'_'}]}],
           [],
           [{call,
             {2639,19},
             {remote,
              {2639,19},
              {atom,{2639,19},erlang},
              {atom,{2639,19},setelement}},
             [{integer,{2639,19},2},
              {call,
               {2639,40},
               {remote,
                {2639,40},
                {atom,{2639,40},erlang},
                {atom,{2639,40},setelement}},
               [{integer,{2639,40},7},
                {var,{2639,11},rec55},
                {var,{2639,40},rec54}]},
              {var,{2639,19},rec53}]}]},
          {clause,
           [{generated,true},{location,{2639,19}}],
           [{var,[{generated,true},{location,{2639,19}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2639,19}}],
             {remote,
              [{generated,true},{location,{2639,19}}],
              {atom,[{generated,true},{location,{2639,19}}],erlang},
              {atom,[{generated,true},{location,{2639,19}}],error}},
             [{tuple,
               [{generated,true},{location,{2639,19}}],
               [{atom,[{generated,true},{location,{2639,19}}],badrecord},
                {var,{2639,11},rec55}]}]}]}]}]}]}]}]}.
{function,
 {2641,1},
 kill_catch_tag,2,
 [{clause,
   {2641,1},
   [{var,{2641,1},'_'},{var,{2641,1},'_'}],
   [[{call,
      {2641,1},
      {remote,{2641,1},{atom,{2641,1},fake},{atom,{2641,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2641,1300},{atom,{2641,1},ignore}]},
  {clause,
   {2641,1},
   [{var,{2641,16},'Reg'},
    {match,
     {2641,21},
     {tuple,
      {2641,21},
      [{atom,{2641,21},vst},
       {match,
        {2641,34},
        {tuple,
         {2641,34},
         [{atom,{2641,34},st},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {cons,{2641,41},{var,{2641,42},'Tag'},{var,{2641,46},'Tags'}},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'},
          {var,{2641,34},'_'}]},
        {var,{2641,53},'St'}},
       {var,{2641,21},'_'},
       {var,{2641,21},'_'},
       {var,{2641,21},'_'},
       {var,{2641,21},'_'},
       {var,{2641,21},'_'}]},
     {var,{2641,57},'Vst0'}}],
   [],
   [{debug_line,2642,1301},
    {match,
     {2642,5},
     {var,{2642,5},'Vst'},
     {block,
      {2642,11},
      [{match,
        {2642,20},
        {var,{2642,20},rec57},
        {block,
         {2642,28},
         [{match,{2642,28},{var,{2642,28},rec59},{var,{2642,28},'St'}},
          {'case',
           {2642,34},
           {var,{2642,28},rec59},
           [{clause,
             {2642,34},
             [{tuple,
               {2642,34},
               [{atom,{2642,34},st},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'},
                {var,{2642,34},'_'}]}],
             [],
             [{call,
               {2642,34},
               {remote,
                {2642,34},
                {atom,{2642,34},erlang},
                {atom,{2642,34},setelement}},
               [{integer,{2642,34},11},
                {var,{2642,28},rec59},
                {var,{2642,37},'Tags'}]}]},
            {clause,
             [{generated,true},{location,{2642,34}}],
             [{var,[{generated,true},{location,{2642,34}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{2642,34}}],
               {remote,
                [{generated,true},{location,{2642,34}}],
                {atom,[{generated,true},{location,{2642,34}}],erlang},
                {atom,[{generated,true},{location,{2642,34}}],error}},
               [{tuple,
                 [{generated,true},{location,{2642,34}}],
                 [{atom,[{generated,true},{location,{2642,34}}],badrecord},
                  {var,{2642,28},rec59}]}]}]}]}]}},
       {match,{2642,11},{var,{2642,11},rec58},{var,{2642,11},'Vst0'}},
       {'case',
        {2642,20},
        {var,{2642,11},rec58},
        [{clause,
          {2642,20},
          [{tuple,
            {2642,20},
            [{atom,{2642,20},vst},
             {var,{2642,20},'_'},
             {var,{2642,20},'_'},
             {var,{2642,20},'_'},
             {var,{2642,20},'_'},
             {var,{2642,20},'_'},
             {var,{2642,20},'_'}]}],
          [],
          [{call,
            {2642,20},
            {remote,
             {2642,20},
             {atom,{2642,20},erlang},
             {atom,{2642,20},setelement}},
            [{integer,{2642,20},2},
             {var,{2642,11},rec58},
             {var,{2642,20},rec57}]}]},
         {clause,
          [{generated,true},{location,{2642,20}}],
          [{var,[{generated,true},{location,{2642,20}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2642,20}}],
            {remote,
             [{generated,true},{location,{2642,20}}],
             {atom,[{generated,true},{location,{2642,20}}],erlang},
             {atom,[{generated,true},{location,{2642,20}}],error}},
            [{tuple,
              [{generated,true},{location,{2642,20}}],
              [{atom,[{generated,true},{location,{2642,20}}],badrecord},
               {var,{2642,11},rec58}]}]}]}]}]}},
    {debug_line,2643,1302},
    {match,
     {2643,5},
     {var,{2643,5},'Tag'},
     {call,
      {2643,11},
      {atom,{2643,11},get_tag_type},
      [{var,{2643,24},'Reg'},{var,{2643,29},'Vst'}]}},
    {debug_line,2644,1303},
    {call,
     {2644,5},
     {atom,{2644,5},kill_tag},
     [{var,{2644,14},'Reg'},{var,{2644,19},'Vst'}]}]}]}.
{function,
 {2646,1},
 check_try_catch_tags,3,
 [{clause,
   {2646,1},
   [{var,{2646,1},'_'},{var,{2646,1},'_'},{var,{2646,1},'_'}],
   [[{call,
      {2646,1},
      {remote,{2646,1},{atom,{2646,1},fake},{atom,{2646,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2646,1304},{atom,{2646,1},ignore}]},
  {clause,
   {2646,1},
   [{var,{2646,22},'Type'},
    {match,
     {2646,28},
     {tuple,{2646,28},[{atom,{2646,29},y},{var,{2646,31},'N'}]},
     {var,{2646,34},'Reg'}},
    {var,{2646,39},'Vst'}],
   [],
   [{debug_line,2651,1305},
    {'case',
     {2651,5},
     {call,
      {2651,10},
      {atom,{2651,10},is_try_catch_tag},
      [{var,{2651,27},'Type'}]},
     [{clause,
       {2652,9},
       [{atom,{2652,9},true}],
       [],
       [{debug_line,2653,1306},
        {'case',
         {2653,13},
         {call,
          {2653,18},
          {atom,{2653,18},collect_try_catch_tags},
          [{block,0,
            [{op,{2653,43},'-',{var,{2653,41},'N'},{integer,{2653,45},1}}]},
           {var,{2653,48},'Vst'},
           {nil,{2653,53}}]},
         [{clause,
           {2654,17},
           [{match,
             {2654,17},
             {cons,{2654,17},{var,{2654,18},'_'},{var,{2654,20},'_'}},
             {var,{2654,23},'Bad'}}],
           [],
           [{debug_line,2654,1307},
            {call,
             {2654,30},
             {atom,{2654,30},error},
             [{block,0,
               [{tuple,
                 {2654,36},
                 [{atom,{2654,37},bad_try_catch_nesting},
                  {var,{2654,60},'Reg'},
                  {var,{2654,65},'Bad'}]}]}]}]},
          {clause,
           {2655,17},
           [{nil,{2655,17}}],
           [],
           [{debug_line,2655,1308},{atom,{2655,23},ok}]}]}]},
      {clause,
       {2657,9},
       [{atom,{2657,9},false}],
       [],
       [{debug_line,2658,1309},{atom,{2658,13},ok}]}]}]}]}.
{function,{2661,1},
          assert_no_exception,1,
          [{clause,{2661,1},
                   [{var,{2661,1},'_'}],
                   [[{call,{2661,1},
                           {remote,{2661,1},
                                   {atom,{2661,1},fake},
                                   {atom,{2661,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2661,1310},{atom,{2661,1},ignore}]},
           {clause,{2661,1},
                   [{integer,{2661,22},0}],
                   [],
                   [{debug_line,2662,1311},
                    {call,{2662,5},
                          {atom,{2662,5},error},
                          [{atom,{2662,11},throws_exception}]}]},
           {clause,{2663,1},
                   [{var,{2663,21},'_'}],
                   [],
                   [{debug_line,2664,1312},{atom,{2664,5},ok}]}]}.
{function,{2666,1},
          assert_term,2,
          [{clause,{2666,1},
                   [{var,{2666,1},'_'},{var,{2666,1},'_'}],
                   [[{call,{2666,1},
                           {remote,{2666,1},
                                   {atom,{2666,1},fake},
                                   {atom,{2666,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2666,1313},{atom,{2666,1},ignore}]},
           {clause,{2666,1},
                   [{var,{2666,13},'Src'},{var,{2666,18},'Vst'}],
                   [],
                   [{debug_line,2667,1314},
                    {match,{2667,5},
                           {var,{2667,5},'_'},
                           {call,{2667,9},
                                 {atom,{2667,9},get_term_type},
                                 [{var,{2667,23},'Src'},
                                  {var,{2667,28},'Vst'}]}},
                    {debug_line,2668,1315},
                    {atom,{2668,5},ok}]}]}.
{function,{2670,1},
          assert_movable,2,
          [{clause,{2670,1},
                   [{var,{2670,1},'_'},{var,{2670,1},'_'}],
                   [[{call,{2670,1},
                           {remote,{2670,1},
                                   {atom,{2670,1},fake},
                                   {atom,{2670,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2670,1316},{atom,{2670,1},ignore}]},
           {clause,{2670,1},
                   [{var,{2670,16},'Src'},{var,{2670,21},'Vst'}],
                   [],
                   [{debug_line,2671,1317},
                    {match,{2671,5},
                           {var,{2671,5},'_'},
                           {call,{2671,9},
                                 {atom,{2671,9},get_movable_term_type},
                                 [{var,{2671,31},'Src'},
                                  {var,{2671,36},'Vst'}]}},
                    {debug_line,2672,1318},
                    {atom,{2672,5},ok}]}]}.
{function,
    {2674,1},
    assert_literal,1,
    [{clause,
         {2674,1},
         [{var,{2674,1},'_'}],
         [[{call,
               {2674,1},
               {remote,
                   {2674,1},
                   {atom,{2674,1},fake},
                   {atom,{2674,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2674,1319},{atom,{2674,1},ignore}]},
     {clause,
         {2674,1},
         [{var,{2674,16},'Src'}],
         [],
         [{debug_line,2675,1320},
          {'case',
              {2675,5},
              {call,
                  {2675,10},
                  {atom,{2675,10},is_literal},
                  [{var,{2675,21},'Src'}]},
              [{clause,
                   {2676,9},
                   [{atom,{2676,9},true}],
                   [],
                   [{debug_line,2676,1321},{atom,{2676,17},ok}]},
               {clause,
                   {2677,9},
                   [{atom,{2677,9},false}],
                   [],
                   [{debug_line,2677,1322},
                    {call,
                        {2677,18},
                        {atom,{2677,18},error},
                        [{block,0,
                             [{tuple,
                                  {2677,24},
                                  [{atom,{2677,25},literal_required},
                                   {var,{2677,42},'Src'}]}]}]}]}]}]}]}.
{function,
    {2680,1},
    assert_not_literal,1,
    [{clause,
         {2680,1},
         [{var,{2680,1},'_'}],
         [[{call,
               {2680,1},
               {remote,
                   {2680,1},
                   {atom,{2680,1},fake},
                   {atom,{2680,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2680,1323},{atom,{2680,1},ignore}]},
     {clause,
         {2680,1},
         [{var,{2680,20},'Src'}],
         [],
         [{debug_line,2681,1324},
          {'case',
              {2681,5},
              {call,
                  {2681,10},
                  {atom,{2681,10},is_literal},
                  [{var,{2681,21},'Src'}]},
              [{clause,
                   {2682,9},
                   [{atom,{2682,9},true}],
                   [],
                   [{debug_line,2682,1325},
                    {call,
                        {2682,17},
                        {atom,{2682,17},error},
                        [{block,0,
                             [{tuple,
                                  {2682,23},
                                  [{atom,{2682,24},literal_not_allowed},
                                   {var,{2682,44},'Src'}]}]}]}]},
               {clause,
                   {2683,9},
                   [{atom,{2683,9},false}],
                   [],
                   [{debug_line,2683,1326},{atom,{2683,18},ok}]}]}]}]}.
{function,{2686,1},
          is_literal,1,
          [{clause,{2686,1},
                   [{var,{2686,1},'_'}],
                   [[{call,{2686,1},
                           {remote,{2686,1},
                                   {atom,{2686,1},fake},
                                   {atom,{2686,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2686,1327},{atom,{2686,1},ignore}]},
           {clause,{2686,1},
                   [{atom,{2686,12},nil}],
                   [],
                   [{debug_line,2686,1328},{atom,{2686,20},true}]},
           {clause,{2687,1},
                   [{tuple,{2687,12},
                           [{atom,{2687,13},atom},{var,{2687,18},'A'}]}],
                   [[{call,{2687,27},
                           {remote,{2687,27},
                                   {atom,{2687,27},erlang},
                                   {atom,{2687,27},is_atom}},
                           [{var,{2687,35},'A'}]}]],
                   [{debug_line,2687,1329},{atom,{2687,41},true}]},
           {clause,{2688,1},
                   [{tuple,{2688,12},
                           [{atom,{2688,13},float},{var,{2688,19},'F'}]}],
                   [[{call,{2688,28},
                           {remote,{2688,28},
                                   {atom,{2688,28},erlang},
                                   {atom,{2688,28},is_float}},
                           [{var,{2688,37},'F'}]}]],
                   [{debug_line,2688,1330},{atom,{2688,43},true}]},
           {clause,{2689,1},
                   [{tuple,{2689,12},
                           [{atom,{2689,13},integer},{var,{2689,21},'I'}]}],
                   [[{call,{2689,30},
                           {remote,{2689,30},
                                   {atom,{2689,30},erlang},
                                   {atom,{2689,30},is_integer}},
                           [{var,{2689,41},'I'}]}]],
                   [{debug_line,2689,1331},{atom,{2689,47},true}]},
           {clause,{2690,1},
                   [{tuple,{2690,12},
                           [{atom,{2690,13},literal},{var,{2690,21},'_L'}]}],
                   [],
                   [{debug_line,2690,1332},{atom,{2690,29},true}]},
           {clause,{2691,1},
                   [{var,{2691,12},'_'}],
                   [],
                   [{debug_line,2691,1333},{atom,{2691,18},false}]}]}.
{function,{2693,1},
          value_to_literal,1,
          [{clause,{2693,1},
                   [{var,{2693,1},'_'}],
                   [[{call,{2693,1},
                           {remote,{2693,1},
                                   {atom,{2693,1},fake},
                                   {atom,{2693,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2693,1334},{atom,{2693,1},ignore}]},
           {clause,{2693,1},
                   [{nil,{2693,18}}],
                   [],
                   [{debug_line,2693,1335},{atom,{2693,25},nil}]},
           {clause,{2694,1},
                   [{var,{2694,18},'A'}],
                   [[{call,{2694,26},
                           {remote,{2694,26},
                                   {atom,{2694,26},erlang},
                                   {atom,{2694,26},is_atom}},
                           [{var,{2694,34},'A'}]}]],
                   [{debug_line,2694,1336},
                    {tuple,{2694,40},
                           [{atom,{2694,41},atom},{var,{2694,46},'A'}]}]},
           {clause,{2695,1},
                   [{var,{2695,18},'F'}],
                   [[{call,{2695,26},
                           {remote,{2695,26},
                                   {atom,{2695,26},erlang},
                                   {atom,{2695,26},is_float}},
                           [{var,{2695,35},'F'}]}]],
                   [{debug_line,2695,1337},
                    {tuple,{2695,41},
                           [{atom,{2695,42},float},{var,{2695,48},'F'}]}]},
           {clause,{2696,1},
                   [{var,{2696,18},'I'}],
                   [[{call,{2696,26},
                           {remote,{2696,26},
                                   {atom,{2696,26},erlang},
                                   {atom,{2696,26},is_integer}},
                           [{var,{2696,37},'I'}]}]],
                   [{debug_line,2696,1338},
                    {tuple,{2696,43},
                           [{atom,{2696,44},integer},{var,{2696,52},'I'}]}]},
           {clause,{2697,1},
                   [{var,{2697,18},'Other'}],
                   [],
                   [{debug_line,2697,1339},
                    {tuple,{2697,28},
                           [{atom,{2697,29},literal},
                            {var,{2697,37},'Other'}]}]}]}.
{function,
    {2699,1},
    canonical_value,2,
    [{clause,
         {2699,1},
         [{var,{2699,1},'_'},{var,{2699,1},'_'}],
         [[{call,
               {2699,1},
               {remote,
                   {2699,1},
                   {atom,{2699,1},fake},
                   {atom,{2699,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2699,1340},{atom,{2699,1},ignore}]},
     {clause,
         {2699,1},
         [{var,{2699,17},'Val'},{var,{2699,22},'Vst'}],
         [],
         [{debug_line,2700,1341},
          {match,
              {2700,5},
              {var,{2700,5},'Type'},
              {call,
                  {2700,12},
                  {atom,{2700,12},get_term_type},
                  [{var,{2700,26},'Val'},{var,{2700,31},'Vst'}]}},
          {debug_line,2701,1342},
          {'case',
              {2701,5},
              {call,
                  {2701,10},
                  {remote,
                      {2701,20},
                      {atom,{2701,10},beam_types},
                      {atom,{2701,21},is_singleton_type}},
                  [{var,{2701,39},'Type'}]},
              [{clause,
                   {2702,9},
                   [{atom,{2702,9},true}],
                   [],
                   [{debug_line,2703,1343},
                    {'case',
                        {2703,13},
                        {call,
                            {2703,18},
                            {remote,
                                {2703,28},
                                {atom,{2703,18},beam_types},
                                {atom,{2703,29},get_singleton_value}},
                            [{var,{2703,49},'Type'}]},
                        [{clause,
                             {2704,17},
                             [{tuple,
                                  {2704,17},
                                  [{atom,{2704,18},ok},
                                   {var,{2704,22},'Res'}]}],
                             [],
                             [{debug_line,2704,1344},
                              {call,
                                  {2704,30},
                                  {atom,{2704,30},value_to_literal},
                                  [{var,{2704,47},'Res'}]}]},
                         {clause,
                             {2705,17},
                             [{atom,{2705,17},error}],
                             [],
                             [{debug_line,2705,1345},
                              {var,{2705,26},'Val'}]}]}]},
               {clause,
                   {2707,9},
                   [{atom,{2707,9},false}],
                   [],
                   [{debug_line,2708,1346},{var,{2708,13},'Val'}]}]}]}]}.
{function,
    {2717,1},
    normalize,1,
    [{clause,
         {2717,1},
         [{var,{2717,1},'_'}],
         [[{call,
               {2717,1},
               {remote,
                   {2717,1},
                   {atom,{2717,1},fake},
                   {atom,{2717,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2717,1347},{atom,{2717,1},ignore}]},
     {clause,
         {2717,1},
         [{match,
              {2717,11},
              {tuple,
                  {2717,11},
                  [{atom,{2717,11},t_abstract},{var,{2717,11},'_'}]},
              {var,{2717,25},'A'}}],
         [],
         [{debug_line,2717,1348},
          {call,
              {2717,31},
              {atom,{2717,31},error},
              [{block,0,
                   [{tuple,
                        {2717,37},
                        [{atom,{2717,38},abstract_type},
                         {var,{2717,53},'A'}]}]}]}]},
     {clause,
         {2718,1},
         [{var,{2718,11},'T'}],
         [],
         [{debug_line,2718,1349},
          {call,
              {2718,17},
              {remote,
                  {2718,27},
                  {atom,{2718,17},beam_types},
                  {atom,{2718,28},normalize}},
              [{var,{2718,38},'T'}]}]}]}.
{function,
    {2720,1},
    join,2,
    [{clause,
         {2720,1},
         [{var,{2720,1},'_'},{var,{2720,1},'_'}],
         [[{call,
               {2720,1},
               {remote,
                   {2720,1},
                   {atom,{2720,1},fake},
                   {atom,{2720,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2720,1350},{atom,{2720,1},ignore}]},
     {clause,
         {2720,1},
         [{var,{2720,6},'Same'},{var,{2720,12},'Same'}],
         [],
         [{debug_line,2721,1351},{var,{2721,5},'Same'}]},
     {clause,
         {2722,1},
         [{tuple,
              {2722,6},
              [{atom,{2722,6},t_abstract},
               {tuple,
                   {2722,23},
                   [{atom,{2722,24},ms_position},{var,{2722,37},'UnitA'}]}]},
          {tuple,
              {2723,6},
              [{atom,{2723,6},t_abstract},
               {tuple,
                   {2723,23},
                   [{atom,{2723,24},ms_position},{var,{2723,37},'UnitB'}]}]}],
         [],
         [{debug_line,2724,1352},
          {tuple,
              {2724,5},
              [{atom,{2724,5},t_abstract},
               {tuple,
                   {2724,22},
                   [{atom,{2724,23},ms_position},
                    {call,
                        {2724,36},
                        {atom,{2724,36},gcd},
                        [{var,{2724,40},'UnitA'},
                         {var,{2724,47},'UnitB'}]}]}]}]},
     {clause,
         {2725,1},
         [{match,
              {2725,6},
              {tuple,{2725,6},[{atom,{2725,6},t_abstract},{var,{2725,6},'_'}]},
              {var,{2725,20},'A'}},
          {var,{2725,23},'B'}],
         [],
         [{debug_line,2726,1353},
          {tuple,
              {2726,5},
              [{atom,{2726,5},t_abstract},
               {tuple,
                   {2726,22},
                   [{atom,{2726,23},join},
                    {var,{2726,29},'A'},
                    {var,{2726,32},'B'}]}]}]},
     {clause,
         {2727,1},
         [{var,{2727,6},'A'},
          {match,
              {2727,9},
              {tuple,{2727,9},[{atom,{2727,9},t_abstract},{var,{2727,9},'_'}]},
              {var,{2727,23},'B'}}],
         [],
         [{debug_line,2728,1354},
          {tuple,
              {2728,5},
              [{atom,{2728,5},t_abstract},
               {tuple,
                   {2728,22},
                   [{atom,{2728,23},join},
                    {var,{2728,29},'A'},
                    {var,{2728,32},'B'}]}]}]},
     {clause,
         {2729,1},
         [{var,{2729,6},'A'},{var,{2729,9},'B'}],
         [],
         [{debug_line,2730,1355},
          {call,
              {2730,5},
              {remote,
                  {2730,15},
                  {atom,{2730,5},beam_types},
                  {atom,{2730,16},join}},
              [{var,{2730,21},'A'},{var,{2730,24},'B'}]}]}]}.
{function,{2732,1},
          meet,2,
          [{clause,{2732,1},
                   [{var,{2732,1},'_'},{var,{2732,1},'_'}],
                   [[{call,{2732,1},
                           {remote,{2732,1},
                                   {atom,{2732,1},fake},
                                   {atom,{2732,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2732,1356},{atom,{2732,1},ignore}]},
           {clause,{2732,1},
                   [{var,{2732,6},'Same'},{var,{2732,12},'Same'}],
                   [],
                   [{debug_line,2733,1357},{var,{2733,5},'Same'}]},
           {clause,{2734,1},
                   [{tuple,{2734,6},
                           [{atom,{2734,6},t_abstract},
                            {tuple,{2734,23},
                                   [{atom,{2734,24},ms_position},
                                    {var,{2734,37},'UnitA'}]}]},
                    {tuple,{2735,6},
                           [{atom,{2735,6},t_abstract},
                            {tuple,{2735,23},
                                   [{atom,{2735,24},ms_position},
                                    {var,{2735,37},'UnitB'}]}]}],
                   [],
                   [{debug_line,2736,1358},
                    {match,{2736,5},
                           {var,{2736,5},'Unit'},
                           {op,{2736,26},
                               'div',
                               {op,{2736,18},
                                   '*',
                                   {var,{2736,12},'UnitA'},
                                   {var,{2736,20},'UnitB'}},
                               {call,{2736,30},
                                     {atom,{2736,30},gcd},
                                     [{var,{2736,34},'UnitA'},
                                      {var,{2736,41},'UnitB'}]}}},
                    {debug_line,2737,1359},
                    {tuple,{2737,5},
                           [{atom,{2737,5},t_abstract},
                            {tuple,{2737,22},
                                   [{atom,{2737,23},ms_position},
                                    {var,{2737,36},'Unit'}]}]}]},
           {clause,{2738,1},
                   [{match,{2738,6},
                           {tuple,{2738,6},
                                  [{atom,{2738,6},t_abstract},
                                   {var,{2738,6},'_'}]},
                           {var,{2738,20},'A'}},
                    {var,{2738,23},'B'}],
                   [],
                   [{debug_line,2739,1360},
                    {tuple,{2739,5},
                           [{atom,{2739,5},t_abstract},
                            {tuple,{2739,22},
                                   [{atom,{2739,23},meet},
                                    {var,{2739,29},'A'},
                                    {var,{2739,32},'B'}]}]}]},
           {clause,{2740,1},
                   [{var,{2740,6},'A'},
                    {match,{2740,9},
                           {tuple,{2740,9},
                                  [{atom,{2740,9},t_abstract},
                                   {var,{2740,9},'_'}]},
                           {var,{2740,23},'B'}}],
                   [],
                   [{debug_line,2741,1361},
                    {tuple,{2741,5},
                           [{atom,{2741,5},t_abstract},
                            {tuple,{2741,22},
                                   [{atom,{2741,23},meet},
                                    {var,{2741,29},'A'},
                                    {var,{2741,32},'B'}]}]}]},
           {clause,{2742,1},
                   [{var,{2742,6},'A'},{var,{2742,9},'B'}],
                   [],
                   [{debug_line,2743,1362},
                    {call,{2743,5},
                          {remote,{2743,15},
                                  {atom,{2743,5},beam_types},
                                  {atom,{2743,16},meet}},
                          [{var,{2743,21},'A'},{var,{2743,24},'B'}]}]}]}.
{function,{2745,1},
          subtract,2,
          [{clause,{2745,1},
                   [{var,{2745,1},'_'},{var,{2745,1},'_'}],
                   [[{call,{2745,1},
                           {remote,{2745,1},
                                   {atom,{2745,1},fake},
                                   {atom,{2745,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2745,1363},{atom,{2745,1},ignore}]},
           {clause,{2745,1},
                   [{match,{2745,10},
                           {tuple,{2745,10},
                                  [{atom,{2745,10},t_abstract},
                                   {var,{2745,10},'_'}]},
                           {var,{2745,24},'A'}},
                    {var,{2745,27},'B'}],
                   [],
                   [{debug_line,2746,1364},
                    {tuple,{2746,5},
                           [{atom,{2746,5},t_abstract},
                            {tuple,{2746,22},
                                   [{atom,{2746,23},subtract},
                                    {var,{2746,33},'A'},
                                    {var,{2746,36},'B'}]}]}]},
           {clause,{2747,1},
                   [{var,{2747,10},'A'},
                    {match,{2747,13},
                           {tuple,{2747,13},
                                  [{atom,{2747,13},t_abstract},
                                   {var,{2747,13},'_'}]},
                           {var,{2747,27},'B'}}],
                   [],
                   [{debug_line,2748,1365},
                    {tuple,{2748,5},
                           [{atom,{2748,5},t_abstract},
                            {tuple,{2748,22},
                                   [{atom,{2748,23},subtract},
                                    {var,{2748,33},'A'},
                                    {var,{2748,36},'B'}]}]}]},
           {clause,{2749,1},
                   [{var,{2749,10},'A'},{var,{2749,13},'B'}],
                   [],
                   [{debug_line,2750,1366},
                    {call,{2750,5},
                          {remote,{2750,15},
                                  {atom,{2750,5},beam_types},
                                  {atom,{2750,16},subtract}},
                          [{var,{2750,25},'A'},{var,{2750,28},'B'}]}]}]}.
{function,
 {2752,1},
 assert_type,3,
 [{clause,
   {2752,1},
   [{var,{2752,1},'_'},{var,{2752,1},'_'},{var,{2752,1},'_'}],
   [[{call,
      {2752,1},
      {remote,{2752,1},{atom,{2752,1},fake},{atom,{2752,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2752,1367},{atom,{2752,1},ignore}]},
  {clause,
   {2752,1},
   [{var,{2752,13},'RequiredType'},
    {var,{2752,27},'Term'},
    {var,{2752,33},'Vst'}],
   [],
   [{debug_line,2753,1368},
    {match,
     {2753,5},
     {var,{2753,5},'GivenType'},
     {call,
      {2753,17},
      {atom,{2753,17},get_movable_term_type},
      [{var,{2753,39},'Term'},{var,{2753,45},'Vst'}]}},
    {debug_line,2754,1369},
    {'case',
     {2754,5},
     {call,
      {2754,10},
      {atom,{2754,10},meet},
      [{var,{2754,15},'RequiredType'},{var,{2754,29},'GivenType'}]},
     [{clause,
       {2755,9},
       [{var,{2755,9},'GivenType'}],
       [],
       [{debug_line,2756,1370},{atom,{2756,13},ok}]},
      {clause,
       {2757,9},
       [{var,{2757,9},'_RequiredType'}],
       [],
       [{debug_line,2758,1371},
        {call,
         {2758,13},
         {atom,{2758,13},error},
         [{block,0,
           [{tuple,
             {2758,19},
             [{atom,{2758,20},bad_type},
              {tuple,
               {2758,29},
               [{atom,{2758,30},needed},{var,{2758,37},'RequiredType'}]},
              {tuple,
               {2758,51},
               [{atom,{2758,52},actual},
                {var,{2758,59},'GivenType'}]}]}]}]}]}]}]}]}.
{function,
    {2761,1},
    validate_src,2,
    [{clause,
         {2761,1},
         [{var,{2761,1},'_'},{var,{2761,1},'_'}],
         [[{call,
               {2761,1},
               {remote,
                   {2761,1},
                   {atom,{2761,1},fake},
                   {atom,{2761,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2761,1372},{atom,{2761,1},ignore}]},
     {clause,
         {2761,1},
         [{var,{2761,14},'Ss'},{var,{2761,18},'Vst'}],
         [[{call,
               {2761,28},
               {remote,
                   {2761,28},
                   {atom,{2761,28},erlang},
                   {atom,{2761,28},is_list}},
               [{var,{2761,36},'Ss'}]}]],
         [{debug_line,2762,1373},
          {match,
              {2762,5},
              {var,{2762,5},'_'},
              {lc,{2762,9},
                  {block,0,
                      [{call,
                           {2762,10},
                           {atom,{2762,10},assert_term},
                           [{var,{2762,22},'S'},{var,{2762,25},'Vst'}]}]},
                  [{block,0,[{atom,{2762,38},true}]},
                   {generate,
                       {2762,35},
                       {var,{2762,33},'S'},
                       {var,{2762,38},'Ss'}}]}},
          {debug_line,2763,1374},
          {atom,{2763,5},ok}]}]}.
{function,
    {2765,1},
    unpack_typed_arg,2,
    [{clause,
         {2765,1},
         [{var,{2765,1},'_'},{var,{2765,1},'_'}],
         [[{call,
               {2765,1},
               {remote,
                   {2765,1},
                   {atom,{2765,1},fake},
                   {atom,{2765,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2765,1375},{atom,{2765,1},ignore}]},
     {clause,
         {2765,1},
         [{tuple,
              {2765,18},
              [{atom,{2765,18},tr},
               {var,{2765,24},'Reg'},
               {var,{2765,30},'Type'}]},
          {var,{2765,37},'Vst'}],
         [],
         [{debug_line,2769,1376},
          {match,
              {2769,5},
              {var,{2769,5},'Current'},
              {call,
                  {2769,15},
                  {atom,{2769,15},get_movable_term_type},
                  [{var,{2769,37},'Reg'},{var,{2769,42},'Vst'}]}},
          {debug_line,2770,1377},
          {'case',
              {2770,5},
              {call,
                  {2770,10},
                  {remote,
                      {2770,20},
                      {atom,{2770,10},beam_types},
                      {atom,{2770,21},meet}},
                  [{var,{2770,26},'Current'},{var,{2770,35},'Type'}]},
              [{clause,
                   {2771,9},
                   [{atom,{2771,9},none}],
                   [],
                   [{debug_line,2772,1378},
                    {call,
                        {2772,13},
                        {remote,
                            {2772,13},
                            {atom,{2772,13},erlang},
                            {atom,{2772,13},throw}},
                        [{block,0,
                             [{tuple,
                                  {2772,19},
                                  [{atom,{2772,20},bad_typed_register},
                                   {var,{2772,40},'Current'},
                                   {var,{2772,49},'Type'}]}]}]}]},
               {clause,
                   {2773,9},
                   [{var,{2773,9},'_'}],
                   [],
                   [{debug_line,2774,1379},{atom,{2774,13},ok}]}]},
          {debug_line,2776,1380},
          {var,{2776,5},'Reg'}]},
     {clause,
         {2777,1},
         [{var,{2777,18},'Arg'},{var,{2777,23},'_Vst'}],
         [],
         [{debug_line,2778,1381},{var,{2778,5},'Arg'}]}]}.
{function,
    {2783,1},
    get_concrete_type,2,
    [{clause,
         {2783,1},
         [{var,{2783,1},'_'},{var,{2783,1},'_'}],
         [[{call,
               {2783,1},
               {remote,
                   {2783,1},
                   {atom,{2783,1},fake},
                   {atom,{2783,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2783,1382},{atom,{2783,1},ignore}]},
     {clause,
         {2783,1},
         [{var,{2783,19},'Src'},
          {match,
              {2783,24},
              {tuple,
                  {2783,24},
                  [{atom,{2783,24},vst},
                   {tuple,
                       {2783,37},
                       [{atom,{2783,37},st},
                        {var,{2783,44},'Vs'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'},
                        {var,{2783,37},'_'}]},
                   {var,{2783,24},'_'},
                   {var,{2783,24},'_'},
                   {var,{2783,24},'_'},
                   {var,{2783,24},'_'},
                   {var,{2783,24},'_'}]},
              {var,{2783,49},'Vst'}}],
         [],
         [{debug_line,2784,1383},
          {call,
              {2784,5},
              {atom,{2784,5},concrete_type},
              [{block,0,
                   [{call,
                        {2784,19},
                        {atom,{2784,19},get_raw_type},
                        [{var,{2784,32},'Src'},{var,{2784,37},'Vst'}]}]},
               {var,{2784,43},'Vs'}]}]}]}.
{function,
    {2790,1},
    get_term_type,2,
    [{clause,
         {2790,1},
         [{var,{2790,1},'_'},{var,{2790,1},'_'}],
         [[{call,
               {2790,1},
               {remote,
                   {2790,1},
                   {atom,{2790,1},fake},
                   {atom,{2790,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2790,1384},{atom,{2790,1},ignore}]},
     {clause,
         {2790,1},
         [{var,{2790,15},'Src'},{var,{2790,20},'Vst'}],
         [],
         [{debug_line,2791,1385},
          {'case',
              {2791,5},
              {call,
                  {2791,10},
                  {atom,{2791,10},get_movable_term_type},
                  [{var,{2791,32},'Src'},{var,{2791,37},'Vst'}]},
              [{clause,
                   {2792,9},
                   [{tuple,
                        {2792,9},
                        [{atom,{2792,9},t_bs_context},{var,{2792,9},'_'}]}],
                   [],
                   [{debug_line,2792,1386},
                    {call,
                        {2792,28},
                        {atom,{2792,28},error},
                        [{block,0,
                             [{tuple,
                                  {2792,34},
                                  [{atom,{2792,35},match_context},
                                   {var,{2792,49},'Src'}]}]}]}]},
               {clause,
                   {2793,9},
                   [{tuple,
                        {2793,9},
                        [{atom,{2793,9},t_abstract},{var,{2793,9},'_'}]}],
                   [],
                   [{debug_line,2793,1387},
                    {call,
                        {2793,26},
                        {atom,{2793,26},error},
                        [{block,0,
                             [{tuple,
                                  {2793,32},
                                  [{atom,{2793,33},abstract_term},
                                   {var,{2793,47},'Src'}]}]}]}]},
               {clause,
                   {2794,9},
                   [{var,{2794,9},'Type'}],
                   [],
                   [{debug_line,2794,1388},{var,{2794,17},'Type'}]}]}]}]}.
{function,
    {2801,1},
    get_movable_term_type,2,
    [{clause,
         {2801,1},
         [{var,{2801,1},'_'},{var,{2801,1},'_'}],
         [[{call,
               {2801,1},
               {remote,
                   {2801,1},
                   {atom,{2801,1},fake},
                   {atom,{2801,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2801,1389},{atom,{2801,1},ignore}]},
     {clause,
         {2801,1},
         [{var,{2801,23},'Src'},{var,{2801,28},'Vst'}],
         [],
         [{debug_line,2802,1390},
          {'case',
              {2802,5},
              {call,
                  {2802,10},
                  {atom,{2802,10},get_concrete_type},
                  [{var,{2802,28},'Src'},{var,{2802,33},'Vst'}]},
              [{clause,
                   {2803,9},
                   [{tuple,
                        {2803,9},
                        [{atom,{2803,9},t_abstract},
                         {match,
                             {2803,26},
                             {atom,{2803,26},unfinished_tuple},
                             {var,{2803,43},'Kind'}}]}],
                   [],
                   [{debug_line,2803,1391},
                    {call,
                        {2803,52},
                        {atom,{2803,52},error},
                        [{block,0,
                             [{tuple,
                                  {2803,58},
                                  [{var,{2803,59},'Kind'},
                                   {var,{2803,64},'Src'}]}]}]}]},
               {clause,
                   {2804,9},
                   [{atom,{2804,9},initialized}],
                   [],
                   [{debug_line,2804,1392},
                    {call,
                        {2804,24},
                        {atom,{2804,24},error},
                        [{block,0,
                             [{tuple,
                                  {2804,30},
                                  [{atom,{2804,31},unassigned},
                                   {var,{2804,42},'Src'}]}]}]}]},
               {clause,
                   {2805,9},
                   [{atom,{2805,9},uninitialized}],
                   [],
                   [{debug_line,2805,1393},
                    {call,
                        {2805,26},
                        {atom,{2805,26},error},
                        [{block,0,
                             [{tuple,
                                  {2805,32},
                                  [{atom,{2805,33},uninitialized_reg},
                                   {var,{2805,51},'Src'}]}]}]}]},
               {clause,
                   {2806,9},
                   [{tuple,
                        {2806,9},
                        [{atom,{2806,10},catchtag},{var,{2806,19},'_'}]}],
                   [],
                   [{debug_line,2806,1394},
                    {call,
                        {2806,25},
                        {atom,{2806,25},error},
                        [{block,0,
                             [{tuple,
                                  {2806,31},
                                  [{atom,{2806,32},catchtag},
                                   {var,{2806,41},'Src'}]}]}]}]},
               {clause,
                   {2807,9},
                   [{tuple,
                        {2807,9},
                        [{atom,{2807,10},trytag},{var,{2807,17},'_'}]}],
                   [],
                   [{debug_line,2807,1395},
                    {call,
                        {2807,23},
                        {atom,{2807,23},error},
                        [{block,0,
                             [{tuple,
                                  {2807,29},
                                  [{atom,{2807,30},trytag},
                                   {var,{2807,37},'Src'}]}]}]}]},
               {clause,
                   {2808,9},
                   [{var,{2808,9},'Type'}],
                   [],
                   [{debug_line,2808,1396},{var,{2808,17},'Type'}]}]}]}]}.
{function,
    {2814,1},
    get_tag_type,2,
    [{clause,
         {2814,1},
         [{var,{2814,1},'_'},{var,{2814,1},'_'}],
         [[{call,
               {2814,1},
               {remote,
                   {2814,1},
                   {atom,{2814,1},fake},
                   {atom,{2814,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2814,1397},{atom,{2814,1},ignore}]},
     {clause,
         {2814,1},
         [{match,
              {2814,14},
              {tuple,{2814,14},[{atom,{2814,15},y},{var,{2814,17},'_'}]},
              {var,{2814,20},'Src'}},
          {var,{2814,25},'Vst'}],
         [],
         [{debug_line,2815,1398},
          {'case',
              {2815,5},
              {call,
                  {2815,10},
                  {atom,{2815,10},get_raw_type},
                  [{var,{2815,23},'Src'},{var,{2815,28},'Vst'}]},
              [{clause,
                   {2816,9},
                   [{match,
                        {2816,9},
                        {tuple,
                            {2816,9},
                            [{atom,{2816,10},catchtag},{var,{2816,20},'_'}]},
                        {var,{2816,23},'Tag'}}],
                   [],
                   [{debug_line,2816,1399},{var,{2816,30},'Tag'}]},
               {clause,
                   {2817,9},
                   [{match,
                        {2817,9},
                        {tuple,
                            {2817,9},
                            [{atom,{2817,10},trytag},{var,{2817,18},'_'}]},
                        {var,{2817,21},'Tag'}}],
                   [],
                   [{debug_line,2817,1400},{var,{2817,28},'Tag'}]},
               {clause,
                   {2818,9},
                   [{match,
                        {2818,9},
                        {atom,{2818,9},uninitialized},
                        {var,{2818,23},'Tag'}}],
                   [],
                   [{debug_line,2818,1401},{var,{2818,30},'Tag'}]},
               {clause,
                   {2819,9},
                   [{match,
                        {2819,9},
                        {atom,{2819,9},initialized},
                        {var,{2819,21},'Tag'}}],
                   [],
                   [{debug_line,2819,1402},{var,{2819,28},'Tag'}]},
               {clause,
                   {2820,9},
                   [{var,{2820,9},'Other'}],
                   [],
                   [{debug_line,2820,1403},
                    {call,
                        {2820,18},
                        {atom,{2820,18},error},
                        [{block,0,
                             [{tuple,
                                  {2820,24},
                                  [{atom,{2820,25},invalid_tag},
                                   {var,{2820,37},'Src'},
                                   {var,{2820,41},'Other'}]}]}]}]}]}]},
     {clause,
         {2822,1},
         [{var,{2822,14},'Src'},{var,{2822,19},'_'}],
         [],
         [{debug_line,2823,1404},
          {call,
              {2823,5},
              {atom,{2823,5},error},
              [{block,0,
                   [{tuple,
                        {2823,11},
                        [{atom,{2823,12},invalid_tag_register},
                         {var,{2823,33},'Src'}]}]}]}]}]}.
{function,
    {2828,1},
    get_raw_type,2,
    [{clause,
         {2828,1},
         [{var,{2828,1},'_'},{var,{2828,1},'_'}],
         [[{call,
               {2828,1},
               {remote,
                   {2828,1},
                   {atom,{2828,1},fake},
                   {atom,{2828,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2828,1405},{atom,{2828,1},ignore}]},
     {clause,
         {2828,1},
         [{match,
              {2828,14},
              {tuple,{2828,14},[{atom,{2828,15},x},{var,{2828,17},'X'}]},
              {var,{2828,20},'Src'}},
          {match,
              {2828,25},
              {tuple,
                  {2828,25},
                  [{atom,{2828,25},vst},
                   {tuple,
                       {2828,38},
                       [{atom,{2828,38},st},
                        {var,{2828,38},'_'},
                        {var,{2828,45},'Xs'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'},
                        {var,{2828,38},'_'}]},
                   {var,{2828,25},'_'},
                   {var,{2828,25},'_'},
                   {var,{2828,25},'_'},
                   {var,{2828,25},'_'},
                   {var,{2828,25},'_'}]},
              {var,{2828,50},'Vst'}}],
         [[{call,
               {2828,60},
               {remote,
                   {2828,60},
                   {atom,{2828,60},erlang},
                   {atom,{2828,60},is_integer}},
               [{var,{2828,71},'X'}]}]],
         [{debug_line,2829,1406},
          {call,{2829,5},{atom,{2829,5},check_limit},[{var,{2829,17},'Src'}]},
          {debug_line,2830,1407},
          {'case',
              {2830,5},
              {var,{2830,10},'Xs'},
              [{clause,
                   {2831,9},
                   [{map,
                        {2831,9},
                        [{map_field_exact,
                             {2831,16},
                             {var,{2831,12},'Src'},
                             {match,
                                 {2831,19},
                                 {tuple,
                                     {2831,19},
                                     [{atom,{2831,19},value_ref},
                                      {var,{2831,19},'_'}]},
                                 {var,{2831,32},'Ref'}}}]}],
                   [],
                   [{debug_line,2831,1408},
                    {call,
                        {2831,41},
                        {atom,{2831,41},get_raw_type},
                        [{var,{2831,54},'Ref'},{var,{2831,59},'Vst'}]}]},
               {clause,
                   {2832,9},
                   [{map,{2832,9},[]}],
                   [],
                   [{debug_line,2832,1409},
                    {atom,{2832,16},uninitialized}]}]}]},
     {clause,
         {2834,1},
         [{match,
              {2834,14},
              {tuple,{2834,14},[{atom,{2834,15},y},{var,{2834,17},'Y'}]},
              {var,{2834,20},'Src'}},
          {match,
              {2834,25},
              {tuple,
                  {2834,25},
                  [{atom,{2834,25},vst},
                   {tuple,
                       {2834,38},
                       [{atom,{2834,38},st},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,45},'Ys'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'},
                        {var,{2834,38},'_'}]},
                   {var,{2834,25},'_'},
                   {var,{2834,25},'_'},
                   {var,{2834,25},'_'},
                   {var,{2834,25},'_'},
                   {var,{2834,25},'_'}]},
              {var,{2834,50},'Vst'}}],
         [[{call,
               {2834,60},
               {remote,
                   {2834,60},
                   {atom,{2834,60},erlang},
                   {atom,{2834,60},is_integer}},
               [{var,{2834,71},'Y'}]}]],
         [{debug_line,2835,1410},
          {call,{2835,5},{atom,{2835,5},check_limit},[{var,{2835,17},'Src'}]},
          {debug_line,2836,1411},
          {'case',
              {2836,5},
              {var,{2836,10},'Ys'},
              [{clause,
                   {2837,9},
                   [{map,
                        {2837,9},
                        [{map_field_exact,
                             {2837,16},
                             {var,{2837,12},'Src'},
                             {match,
                                 {2837,19},
                                 {tuple,
                                     {2837,19},
                                     [{atom,{2837,19},value_ref},
                                      {var,{2837,19},'_'}]},
                                 {var,{2837,32},'Ref'}}}]}],
                   [],
                   [{debug_line,2837,1412},
                    {call,
                        {2837,41},
                        {atom,{2837,41},get_raw_type},
                        [{var,{2837,54},'Ref'},{var,{2837,59},'Vst'}]}]},
               {clause,
                   {2838,9},
                   [{map,
                        {2838,9},
                        [{map_field_exact,
                             {2838,16},
                             {var,{2838,12},'Src'},
                             {var,{2838,19},'Tag'}}]}],
                   [],
                   [{debug_line,2838,1413},{var,{2838,28},'Tag'}]},
               {clause,
                   {2839,9},
                   [{map,{2839,9},[]}],
                   [],
                   [{debug_line,2839,1414},
                    {atom,{2839,16},uninitialized}]}]}]},
     {clause,
         {2841,1},
         [{match,
              {2841,14},
              {tuple,
                  {2841,14},
                  [{atom,{2841,14},value_ref},{var,{2841,14},'_'}]},
              {var,{2841,27},'Ref'}},
          {tuple,
              {2841,32},
              [{atom,{2841,32},vst},
               {tuple,
                   {2841,45},
                   [{atom,{2841,45},st},
                    {var,{2841,52},'Vs'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'},
                    {var,{2841,45},'_'}]},
               {var,{2841,32},'_'},
               {var,{2841,32},'_'},
               {var,{2841,32},'_'},
               {var,{2841,32},'_'},
               {var,{2841,32},'_'}]}],
         [],
         [{debug_line,2842,1415},
          {'case',
              {2842,5},
              {var,{2842,10},'Vs'},
              [{clause,
                   {2843,9},
                   [{map,
                        {2843,9},
                        [{map_field_exact,
                             {2843,16},
                             {var,{2843,12},'Ref'},
                             {tuple,
                                 {2843,19},
                                 [{atom,{2843,19},value},
                                  {var,{2843,19},'_'},
                                  {var,{2843,19},'_'},
                                  {var,{2843,31},'Type'}]}}]}],
                   [],
                   [{debug_line,2843,1416},{var,{2843,42},'Type'}]},
               {clause,
                   {2844,9},
                   [{map,{2844,9},[]}],
                   [],
                   [{debug_line,2844,1417},{atom,{2844,16},none}]}]}]},
     {clause,
         {2846,1},
         [{var,{2846,14},'Src'},
          {tuple,
              {2846,19},
              [{atom,{2846,19},vst},
               {tuple,
                   {2846,32},
                   [{atom,{2846,32},st},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'},
                    {var,{2846,32},'_'}]},
               {var,{2846,19},'_'},
               {var,{2846,19},'_'},
               {var,{2846,19},'_'},
               {var,{2846,19},'_'},
               {var,{2846,19},'_'}]}],
         [],
         [{debug_line,2847,1418},
          {call,
              {2847,5},
              {atom,{2847,5},get_literal_type},
              [{var,{2847,22},'Src'}]}]}]}.
{function,
    {2849,1},
    get_literal_type,1,
    [{clause,
         {2849,1},
         [{var,{2849,1},'_'}],
         [[{call,
               {2849,1},
               {remote,
                   {2849,1},
                   {atom,{2849,1},fake},
                   {atom,{2849,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2849,1419},{atom,{2849,1},ignore}]},
     {clause,
         {2849,1},
         [{atom,{2849,18},nil}],
         [],
         [{debug_line,2850,1420},
          {call,
              {2850,5},
              {remote,
                  {2850,15},
                  {atom,{2850,5},beam_types},
                  {atom,{2850,16},make_type_from_value}},
              [{nil,{2850,37}}]}]},
     {clause,
         {2851,1},
         [{tuple,{2851,18},[{atom,{2851,19},atom},{var,{2851,24},'A'}]}],
         [[{call,
               {2851,33},
               {remote,
                   {2851,33},
                   {atom,{2851,33},erlang},
                   {atom,{2851,33},is_atom}},
               [{var,{2851,41},'A'}]}]],
         [{debug_line,2852,1421},
          {call,
              {2852,5},
              {remote,
                  {2852,15},
                  {atom,{2852,5},beam_types},
                  {atom,{2852,16},make_type_from_value}},
              [{var,{2852,37},'A'}]}]},
     {clause,
         {2853,1},
         [{tuple,{2853,18},[{atom,{2853,19},float},{var,{2853,25},'F'}]}],
         [[{call,
               {2853,34},
               {remote,
                   {2853,34},
                   {atom,{2853,34},erlang},
                   {atom,{2853,34},is_float}},
               [{var,{2853,43},'F'}]}]],
         [{debug_line,2854,1422},
          {call,
              {2854,5},
              {remote,
                  {2854,15},
                  {atom,{2854,5},beam_types},
                  {atom,{2854,16},make_type_from_value}},
              [{var,{2854,37},'F'}]}]},
     {clause,
         {2855,1},
         [{tuple,{2855,18},[{atom,{2855,19},integer},{var,{2855,27},'I'}]}],
         [[{call,
               {2855,36},
               {remote,
                   {2855,36},
                   {atom,{2855,36},erlang},
                   {atom,{2855,36},is_integer}},
               [{var,{2855,47},'I'}]}]],
         [{debug_line,2856,1423},
          {call,
              {2856,5},
              {remote,
                  {2856,15},
                  {atom,{2856,5},beam_types},
                  {atom,{2856,16},make_type_from_value}},
              [{var,{2856,37},'I'}]}]},
     {clause,
         {2857,1},
         [{tuple,{2857,18},[{atom,{2857,19},literal},{var,{2857,27},'L'}]}],
         [],
         [{debug_line,2858,1424},
          {call,
              {2858,5},
              {remote,
                  {2858,15},
                  {atom,{2858,5},beam_types},
                  {atom,{2858,16},make_type_from_value}},
              [{var,{2858,37},'L'}]}]},
     {clause,
         {2859,1},
         [{var,{2859,18},'T'}],
         [],
         [{debug_line,2860,1425},
          {call,
              {2860,5},
              {atom,{2860,5},error},
              [{block,0,
                   [{tuple,
                        {2860,11},
                        [{atom,{2860,12},not_literal},
                         {var,{2860,24},'T'}]}]}]}]}]}.
{attribute,
    {2872,2},
    spec,
    {{branch,4},
     [{type,
          {2872,13},
          bounded_fun,
          [{type,
               {2872,13},
               'fun',
               [{type,
                    {2872,13},
                    product,
                    [{ann_type,
                         {2872,14},
                         [{var,{2872,14},'Lbl'},
                          {user_type,{2872,21},label,[]}]},
                     {ann_type,
                         {2873,14},
                         [{var,{2873,14},'Original'},
                          {type,{2873,26},record,[{atom,{2873,27},vst}]}]},
                     {ann_type,
                         {2874,14},
                         [{var,{2874,14},'FailFun'},
                          {var,{2874,25},'BranchFun'}]},
                     {ann_type,
                         {2875,14},
                         [{var,{2875,14},'SuccFun'},
                          {var,{2875,25},'BranchFun'}]}]},
                {type,{2875,39},record,[{atom,{2875,40},vst}]}]},
           [{type,
                {2876,6},
                constraint,
                [{atom,{2876,6},is_subtype},
                 [{var,{2876,6},'BranchFun'},
                  {type,
                      {2876,23},
                      'fun',
                      [{type,
                           {2876,23},
                           product,
                           [{type,{2876,24},record,[{atom,{2876,25},vst}]}]},
                       {type,
                           {2876,35},
                           record,
                           [{atom,{2876,36},vst}]}]}]]}]]}]}}.
{function,
 {2877,1},
 branch,4,
 [{clause,
   {2877,1},
   [{var,{2877,1},'_'},
    {var,{2877,1},'_'},
    {var,{2877,1},'_'},
    {var,{2877,1},'_'}],
   [[{call,
      {2877,1},
      {remote,{2877,1},{atom,{2877,1},fake},{atom,{2877,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2877,1426},{atom,{2877,1},ignore}]},
  {clause,
   {2877,1},
   [{var,{2877,8},'Lbl'},
    {var,{2877,13},'Vst0'},
    {var,{2877,19},'FailFun'},
    {var,{2877,28},'SuccFun'}],
   [],
   [{debug_line,2878,1427},
    {call,
     {2878,5},
     {atom,{2878,5},validate_branch},
     [{var,{2878,21},'Lbl'},{var,{2878,26},'Vst0'}]},
    {debug_line,2879,1428},
    {match,
     {2879,5},
     {tuple,
      {2879,5},
      [{atom,{2879,5},vst},
       {var,{2879,18},'St0'},
       {var,{2879,5},'_'},
       {var,{2879,5},'_'},
       {var,{2879,5},'_'},
       {var,{2879,5},'_'},
       {var,{2879,5},'_'}]},
     {var,{2879,25},'Vst0'}},
    {debug_line,2881,1429},
    {'try',
     {2881,5},
     [{call,{2881,9},{var,{2881,9},'FailFun'},[{var,{2881,17},'Vst0'}]}],
     [{clause,
       {2882,9},
       [{var,{2882,9},'Vst1'}],
       [],
       [{debug_line,2883,1430},
        {match,
         {2883,13},
         {var,{2883,13},'Vst2'},
         {call,
          {2883,20},
          {atom,{2883,20},fork_state},
          [{var,{2883,31},'Lbl'},{var,{2883,36},'Vst1'}]}},
        {debug_line,2884,1431},
        {match,
         {2884,13},
         {var,{2884,13},'Vst'},
         {block,
          {2884,19},
          [{match,{2884,19},{var,{2884,19},rec60},{var,{2884,19},'Vst2'}},
           {'case',
            {2884,28},
            {var,{2884,19},rec60},
            [{clause,
              {2884,28},
              [{tuple,
                {2884,28},
                [{atom,{2884,28},vst},
                 {var,{2884,28},'_'},
                 {var,{2884,28},'_'},
                 {var,{2884,28},'_'},
                 {var,{2884,28},'_'},
                 {var,{2884,28},'_'},
                 {var,{2884,28},'_'}]}],
              [],
              [{call,
                {2884,28},
                {remote,
                 {2884,28},
                 {atom,{2884,28},erlang},
                 {atom,{2884,28},setelement}},
                [{integer,{2884,28},2},
                 {var,{2884,19},rec60},
                 {var,{2884,36},'St0'}]}]},
             {clause,
              [{generated,true},{location,{2884,28}}],
              [{var,[{generated,true},{location,{2884,28}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2884,28}}],
                {remote,
                 [{generated,true},{location,{2884,28}}],
                 {atom,[{generated,true},{location,{2884,28}}],erlang},
                 {atom,[{generated,true},{location,{2884,28}}],error}},
                [{tuple,
                  [{generated,true},{location,{2884,28}}],
                  [{atom,[{generated,true},{location,{2884,28}}],badrecord},
                   {var,{2884,19},rec60}]}]}]}]}]}},
        {debug_line,2885,1432},
        {'try',
         {2885,13},
         [{call,{2885,17},{var,{2885,17},'SuccFun'},[{var,{2885,25},'Vst'}]}],
         [{clause,
           {2886,17},
           [{var,{2886,17},'V'}],
           [],
           [{debug_line,2886,1433},{var,{2886,22},'V'}]}],
         [{clause,
           {2889,17},
           [{tuple,
             {2889,17},
             [{atom,{2889,17},throw},
              {tuple,
               {2889,17},
               [{atom,{2889,18},type_conflict},
                {var,{2889,33},'_'},
                {var,{2889,36},'_'}]},
              {var,{2889,36},'_'}]}],
           [],
           [{debug_line,2890,1434},
            {call,
             {2890,21},
             {atom,{2890,21},kill_state},
             [{var,{2890,32},'Vst'}]}]},
          {clause,
           {2891,17},
           [{tuple,
             {2891,17},
             [{atom,{2891,17},throw},
              {tuple,
               {2891,17},
               [{atom,{2891,18},invalid_argument},{var,{2891,36},'_'}]},
              {var,{2891,36},'_'}]}],
           [],
           [{debug_line,2892,1435},
            {call,
             {2892,21},
             {atom,{2892,21},kill_state},
             [{var,{2892,32},'Vst'}]}]}],
         []}]}],
     [{clause,
       {2898,9},
       [{tuple,
         {2898,9},
         [{atom,{2898,9},throw},
          {tuple,
           {2898,9},
           [{atom,{2898,10},type_conflict},
            {var,{2898,25},'_'},
            {var,{2898,28},'_'}]},
          {var,{2898,28},'_'}]}],
       [],
       [{debug_line,2899,1436},
        {call,{2899,13},{var,{2899,13},'SuccFun'},[{var,{2899,21},'Vst0'}]}]},
      {clause,
       {2900,9},
       [{tuple,
         {2900,9},
         [{atom,{2900,9},throw},
          {tuple,
           {2900,9},
           [{atom,{2900,10},invalid_argument},{var,{2900,28},'_'}]},
          {var,{2900,28},'_'}]}],
       [],
       [{debug_line,2901,1437},
        {call,{2901,13},{var,{2901,13},'SuccFun'},[{var,{2901,21},'Vst0'}]}]}],
     []}]}]}.
{function,{2904,1},
          validate_branch,2,
          [{clause,{2904,1},
                   [{var,{2904,1},'_'},{var,{2904,1},'_'}],
                   [[{call,{2904,1},
                           {remote,{2904,1},
                                   {atom,{2904,1},fake},
                                   {atom,{2904,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2904,1438},{atom,{2904,1},ignore}]},
           {clause,{2904,1},
                   [{var,{2904,17},'Lbl'},
                    {tuple,{2904,22},
                           [{atom,{2904,22},vst},
                            {tuple,{2904,35},
                                   [{atom,{2904,35},st},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,42},'Tags'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'},
                                    {var,{2904,35},'_'}]},
                            {var,{2904,22},'_'},
                            {var,{2904,22},'_'},
                            {var,{2904,22},'_'},
                            {var,{2904,22},'_'},
                            {var,{2904,22},'_'}]}],
                   [],
                   [{debug_line,2905,1439},
                    {call,{2905,5},
                          {atom,{2905,5},validate_branch_1},
                          [{var,{2905,23},'Lbl'},{var,{2905,28},'Tags'}]}]}]}.
{function,
    {2907,1},
    validate_branch_1,2,
    [{clause,
         {2907,1},
         [{var,{2907,1},'_'},{var,{2907,1},'_'}],
         [[{call,
               {2907,1},
               {remote,
                   {2907,1},
                   {atom,{2907,1},fake},
                   {atom,{2907,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2907,1440},{atom,{2907,1},ignore}]},
     {clause,
         {2907,1},
         [{var,{2907,19},'Lbl'},
          {cons,
              {2907,24},
              {tuple,
                  {2907,25},
                  [{atom,{2907,26},trytag},{var,{2907,34},'FailLbls'}]},
              {var,{2907,46},'Tags'}}],
         [],
         [{debug_line,2913,1441},
          {'case',
              {2913,5},
              {call,
                  {2913,10},
                  {remote,
                      {2913,17},
                      {atom,{2913,10},ordsets},
                      {atom,{2913,18},is_element}},
                  [{var,{2913,29},'Lbl'},{var,{2913,34},'FailLbls'}]},
              [{clause,
                   {2914,9},
                   [{atom,{2914,9},true}],
                   [],
                   [{debug_line,2914,1442},
                    {call,
                        {2914,17},
                        {atom,{2914,17},error},
                        [{block,0,
                             [{tuple,
                                  {2914,23},
                                  [{atom,{2914,24},illegal_branch},
                                   {atom,{2914,40},try_handler},
                                   {var,{2914,53},'Lbl'}]}]}]}]},
               {clause,
                   {2915,9},
                   [{atom,{2915,9},false}],
                   [],
                   [{debug_line,2915,1443},
                    {call,
                        {2915,18},
                        {atom,{2915,18},validate_branch_1},
                        [{var,{2915,36},'Lbl'},{var,{2915,41},'Tags'}]}]}]}]},
     {clause,
         {2917,1},
         [{var,{2917,19},'Lbl'},
          {cons,{2917,24},{var,{2917,25},'_'},{var,{2917,29},'Tags'}}],
         [],
         [{debug_line,2918,1444},
          {call,
              {2918,5},
              {atom,{2918,5},validate_branch_1},
              [{var,{2918,23},'Lbl'},{var,{2918,28},'Tags'}]}]},
     {clause,
         {2919,1},
         [{var,{2919,19},'_Lbl'},{var,{2919,25},'_Tags'}],
         [],
         [{debug_line,2920,1445},{atom,{2920,5},ok}]}]}.
{function,
    {2924,1},
    branch,3,
    [{clause,
         {2924,1},
         [{var,{2924,1},'_'},{var,{2924,1},'_'},{var,{2924,1},'_'}],
         [[{call,
               {2924,1},
               {remote,
                   {2924,1},
                   {atom,{2924,1},fake},
                   {atom,{2924,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2924,1446},{atom,{2924,1},ignore}]},
     {clause,
         {2924,1},
         [{var,{2924,8},'Fail'},
          {var,{2924,14},'Vst'},
          {var,{2924,19},'SuccFun'}],
         [],
         [{debug_line,2925,1447},
          {call,
              {2925,5},
              {atom,{2925,5},branch},
              [{var,{2925,12},'Fail'},
               {var,{2925,18},'Vst'},
               {block,0,
                   [{'fun',
                        {2925,23},
                        {clauses,
                            [{clause,
                                 {2925,26},
                                 [{var,{2925,27},'V'}],
                                 [],
                                 [{var,{2925,33},'V'}]}]}}]},
               {var,{2925,40},'SuccFun'}]}]}]}.
{function,
    {2929,1},
    branch,2,
    [{clause,
         {2929,1},
         [{var,{2929,1},'_'},{var,{2929,1},'_'}],
         [[{call,
               {2929,1},
               {remote,
                   {2929,1},
                   {atom,{2929,1},fake},
                   {atom,{2929,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2929,1448},{atom,{2929,1},ignore}]},
     {clause,
         {2929,1},
         [{var,{2929,8},'Fail'},{var,{2929,14},'Vst'}],
         [],
         [{debug_line,2930,1449},
          {call,
              {2930,5},
              {atom,{2930,5},branch},
              [{var,{2930,12},'Fail'},
               {var,{2930,18},'Vst'},
               {block,0,
                   [{'fun',
                        {2930,23},
                        {clauses,
                            [{clause,
                                 {2930,26},
                                 [{var,{2930,27},'V'}],
                                 [],
                                 [{var,{2930,33},'V'}]}]}}]}]}]}]}.
{function,
    {2934,1},
    fork_state,2,
    [{clause,
         {2934,1},
         [{var,{2934,1},'_'},{var,{2934,1},'_'}],
         [[{call,
               {2934,1},
               {remote,
                   {2934,1},
                   {atom,{2934,1},fake},
                   {atom,{2934,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2934,1450},{atom,{2934,1},ignore}]},
     {clause,
         {2934,1},
         [{integer,{2934,13},0},{var,{2934,30},'Vst0'}],
         [],
         [{debug_line,2935,1451},
          {match,
              {2935,5},
              {tuple,
                  {2935,5},
                  [{atom,{2935,5},vst},
                   {tuple,
                       {2935,18},
                       [{atom,{2935,18},st},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'},
                        {var,{2935,40},'NumY'},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'},
                        {var,{2935,25},'CatchTags'},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'},
                        {var,{2935,18},'_'}]},
                   {var,{2935,5},'_'},
                   {var,{2935,5},'_'},
                   {var,{2935,5},'_'},
                   {var,{2935,5},'_'},
                   {var,{2935,5},'_'}]},
              {var,{2935,49},'Vst0'}},
          {debug_line,2939,1452},
          {call,
              {2939,5},
              {atom,{2939,5},verify_y_init},
              [{var,{2939,19},'Vst0'}]},
          {debug_line,2941,1453},
          {'case',
              {2941,5},
              {var,{2941,10},'CatchTags'},
              [{clause,
                   {2942,9},
                   [{cons,
                        {2942,9},
                        {tuple,
                            {2942,10},
                            [{var,{2942,11},'_'},
                             {cons,
                                 {2942,14},
                                 {var,{2942,15},'Fail'},
                                 {nil,{2942,19}}}]},
                        {var,{2942,24},'_'}}],
                   [[{call,
                         {2942,32},
                         {remote,
                             {2942,32},
                             {atom,{2942,32},erlang},
                             {atom,{2942,32},is_integer}},
                         [{var,{2942,43},'Fail'}]}]],
                   [{debug_line,2943,1454},
                    {match,
                        {2943,13},
                        {atom,{2943,13},true},
                        {op,{2943,25},
                            '=/=',
                            {var,{2943,20},'Fail'},
                            {integer,{2943,30},0}}},
                    {debug_line,2944,1455},
                    {match,
                        {2944,13},
                        {atom,{2944,13},true},
                        {op,{2944,25},
                            '=/=',
                            {var,{2944,20},'NumY'},
                            {atom,{2944,29},none}}},
                    {debug_line,2947,1456},
                    {match,
                        {2947,13},
                        {var,{2947,13},'Vst'},
                        {call,
                            {2947,19},
                            {atom,{2947,19},update_receive_state},
                            [{atom,{2947,40},none},{var,{2947,46},'Vst0'}]}},
                    {debug_line,2948,1457},
                    {call,
                        {2948,13},
                        {atom,{2948,13},fork_state},
                        [{var,{2948,24},'Fail'},{var,{2948,30},'Vst'}]}]},
               {clause,
                   {2949,9},
                   [{nil,{2949,9}}],
                   [],
                   [{debug_line,2951,1458},{var,{2951,13},'Vst0'}]},
               {clause,
                   {2952,9},
                   [{var,{2952,9},'_'}],
                   [],
                   [{debug_line,2953,1459},
                    {call,
                        {2953,13},
                        {atom,{2953,13},error},
                        [{atom,{2953,19},ambiguous_catch_try_state}]}]}]}]},
     {clause,
         {2955,1},
         [{var,{2955,12},'L'},
          {match,
              {2955,15},
              {tuple,
                  {2955,15},
                  [{atom,{2955,15},vst},
                   {var,{2955,28},'St0'},
                   {var,{2955,15},'_'},
                   {var,{2955,41},'Branched0'},
                   {var,{2955,15},'_'},
                   {var,{2955,15},'_'},
                   {var,{2955,59},'Counter0'}]},
              {var,{2955,69},'Vst'}}],
         [],
         [{debug_line,2956,1460},
          {match,
              {2956,5},
              {tuple,{2956,5},[{var,{2956,6},'St'},{var,{2956,10},'Counter'}]},
              {call,
                  {2956,21},
                  {atom,{2956,21},merge_states},
                  [{var,{2956,34},'L'},
                   {var,{2956,37},'St0'},
                   {var,{2956,42},'Branched0'},
                   {var,{2956,53},'Counter0'}]}},
          {debug_line,2957,1461},
          {match,
              {2957,5},
              {var,{2957,5},'Branched'},
              {map,
                  {2957,25},
                  {var,{2957,16},'Branched0'},
                  [{map_field_assoc,
                       {2957,30},
                       {var,{2957,28},'L'},
                       {var,{2957,33},'St'}}]}},
          {debug_line,2958,1462},
          {block,
              {2958,5},
              [{match,{2958,5},{var,{2958,5},rec61},{var,{2958,5},'Vst'}},
               {'case',
                   {2958,13},
                   {var,{2958,5},rec61},
                   [{clause,
                        {2958,13},
                        [{tuple,
                             {2958,13},
                             [{atom,{2958,13},vst},
                              {var,{2958,13},'_'},
                              {var,{2958,13},'_'},
                              {var,{2958,13},'_'},
                              {var,{2958,13},'_'},
                              {var,{2958,13},'_'},
                              {var,{2958,13},'_'}]}],
                        [],
                        [{call,
                             {2958,13},
                             {remote,
                                 {2958,13},
                                 {atom,{2958,13},erlang},
                                 {atom,{2958,13},setelement}},
                             [{integer,{2958,13},4},
                              {call,
                                  {2958,31},
                                  {remote,
                                      {2958,31},
                                      {atom,{2958,31},erlang},
                                      {atom,{2958,31},setelement}},
                                  [{integer,{2958,31},7},
                                   {var,{2958,5},rec61},
                                   {var,{2958,39},'Counter'}]},
                              {var,{2958,22},'Branched'}]}]},
                    {clause,
                        [{generated,true},{location,{2958,13}}],
                        [{var,[{generated,true},{location,{2958,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{2958,13}}],
                             {remote,
                                 [{generated,true},{location,{2958,13}}],
                                 {atom,
                                     [{generated,true},{location,{2958,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{2958,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{2958,13}}],
                                  [{atom,
                                       [{generated,true},{location,{2958,13}}],
                                       badrecord},
                                   {var,{2958,5},rec61}]}]}]}]}]}]}]}.
{function,
    {2964,1},
    merge_states,4,
    [{clause,
         {2964,1},
         [{var,{2964,1},'_'},
          {var,{2964,1},'_'},
          {var,{2964,1},'_'},
          {var,{2964,1},'_'}],
         [[{call,
               {2964,1},
               {remote,
                   {2964,1},
                   {atom,{2964,1},fake},
                   {atom,{2964,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2964,1463},{atom,{2964,1},ignore}]},
     {clause,
         {2964,1},
         [{var,{2964,14},'L'},
          {var,{2964,17},'St'},
          {var,{2964,21},'Branched'},
          {var,{2964,31},'Counter'}],
         [[{op,{2964,47},'=/=',{var,{2964,45},'L'},{integer,{2964,51},0}}]],
         [{debug_line,2965,1464},
          {'case',
              {2965,5},
              {var,{2965,10},'Branched'},
              [{clause,
                   {2966,9},
                   [{map,
                        {2966,9},
                        [{map_field_exact,
                             {2966,14},
                             {var,{2966,12},'L'},
                             {var,{2966,17},'OtherSt'}}]}],
                   [],
                   [{debug_line,2966,1465},
                    {call,
                        {2966,30},
                        {atom,{2966,30},merge_states_1},
                        [{var,{2966,45},'St'},
                         {var,{2966,49},'OtherSt'},
                         {var,{2966,58},'Counter'}]}]},
               {clause,
                   {2967,9},
                   [{map,{2967,9},[]}],
                   [],
                   [{debug_line,2967,1466},
                    {tuple,
                        {2967,16},
                        [{var,{2967,17},'St'},
                         {var,{2967,21},'Counter'}]}]}]}]}]}.
{function,
    {2970,1},
    merge_states_1,3,
    [{clause,
         {2970,1},
         [{var,{2970,1},'_'},{var,{2970,1},'_'},{var,{2970,1},'_'}],
         [[{call,
               {2970,1},
               {remote,
                   {2970,1},
                   {atom,{2970,1},fake},
                   {atom,{2970,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2970,1467},{atom,{2970,1},ignore}]},
     {clause,
         {2970,1},
         [{var,{2970,16},'St'},
          {atom,{2970,20},none},
          {var,{2970,26},'Counter'}],
         [],
         [{debug_line,2971,1468},
          {tuple,{2971,5},[{var,{2971,6},'St'},{var,{2971,10},'Counter'}]}]},
     {clause,
         {2972,1},
         [{atom,{2972,16},none},
          {var,{2972,22},'St'},
          {var,{2972,26},'Counter'}],
         [],
         [{debug_line,2973,1469},
          {tuple,{2973,5},[{var,{2973,6},'St'},{var,{2973,10},'Counter'}]}]},
     {clause,
         {2974,1},
         [{var,{2974,16},'StA'},
          {var,{2974,21},'StB'},
          {var,{2974,26},'Counter0'}],
         [],
         [{debug_line,2975,1470},
          {match,
              {2975,5},
              {tuple,
                  {2975,5},
                  [{atom,{2975,5},st},
                   {var,{2975,26},'VsA'},
                   {var,{2975,12},'XsA'},
                   {var,{2975,19},'YsA'},
                   {var,{2975,5},'_'},
                   {var,{2975,38},'FragA'},
                   {var,{2975,49},'NumYA'},
                   {var,{2976,11},'HA'},
                   {var,{2975,5},'_'},
                   {var,{2975,5},'_'},
                   {var,{2976,17},'CtA'},
                   {var,{2975,5},'_'},
                   {var,{2975,5},'_'},
                   {var,{2976,32},'RecvStA'},
                   {var,{2977,22},'MsPosA'}]},
              {var,{2977,32},'StA'}},
          {debug_line,2978,1471},
          {match,
              {2978,5},
              {tuple,
                  {2978,5},
                  [{atom,{2978,5},st},
                   {var,{2978,26},'VsB'},
                   {var,{2978,12},'XsB'},
                   {var,{2978,19},'YsB'},
                   {var,{2978,5},'_'},
                   {var,{2978,38},'FragB'},
                   {var,{2978,49},'NumYB'},
                   {var,{2979,11},'HB'},
                   {var,{2978,5},'_'},
                   {var,{2978,5},'_'},
                   {var,{2979,17},'CtB'},
                   {var,{2978,5},'_'},
                   {var,{2978,5},'_'},
                   {var,{2979,32},'RecvStB'},
                   {var,{2980,22},'MsPosB'}]},
              {var,{2980,32},'StB'}},
          {debug_line,2990,1472},
          {match,
              {2990,5},
              {tuple,
                  {2990,5},
                  [{var,{2990,6},'Xs'},
                   {var,{2990,10},'Merge0'},
                   {var,{2990,18},'Counter1'}]},
              {call,
                  {2990,30},
                  {atom,{2990,30},merge_regs},
                  [{var,{2990,41},'XsA'},
                   {var,{2990,46},'XsB'},
                   {block,0,[{map,{2990,51},[]}]},
                   {var,{2990,56},'Counter0'}]}},
          {debug_line,2991,1473},
          {match,
              {2991,5},
              {tuple,
                  {2991,5},
                  [{var,{2991,6},'Ys'},
                   {var,{2991,10},'Merge'},
                   {var,{2991,17},'Counter'}]},
              {call,
                  {2991,28},
                  {atom,{2991,28},merge_regs},
                  [{var,{2991,39},'YsA'},
                   {var,{2991,44},'YsB'},
                   {var,{2991,49},'Merge0'},
                   {var,{2991,57},'Counter1'}]}},
          {debug_line,2992,1474},
          {match,
              {2992,5},
              {var,{2992,5},'Vs'},
              {call,
                  {2992,10},
                  {atom,{2992,10},merge_values},
                  [{var,{2992,23},'Merge'},
                   {var,{2992,30},'VsA'},
                   {var,{2992,35},'VsB'}]}},
          {debug_line,2994,1475},
          {match,
              {2994,5},
              {var,{2994,5},'RecvSt'},
              {call,
                  {2994,14},
                  {atom,{2994,14},merge_receive_state},
                  [{var,{2994,34},'RecvStA'},{var,{2994,43},'RecvStB'}]}},
          {debug_line,2995,1476},
          {match,
              {2995,5},
              {var,{2995,5},'MsPos'},
              {call,
                  {2995,13},
                  {atom,{2995,13},merge_ms_positions},
                  [{var,{2995,32},'MsPosA'},
                   {var,{2995,40},'MsPosB'},
                   {var,{2995,48},'Vs'}]}},
          {debug_line,2996,1477},
          {match,
              {2996,5},
              {var,{2996,5},'Fragile'},
              {call,
                  {2996,15},
                  {atom,{2996,15},merge_fragility},
                  [{var,{2996,31},'FragA'},{var,{2996,38},'FragB'}]}},
          {debug_line,2997,1478},
          {match,
              {2997,5},
              {var,{2997,5},'NumY'},
              {call,
                  {2997,12},
                  {atom,{2997,12},merge_stk},
                  [{var,{2997,22},'YsA'},
                   {var,{2997,27},'YsB'},
                   {var,{2997,32},'NumYA'},
                   {var,{2997,39},'NumYB'}]}},
          {debug_line,2998,1479},
          {match,
              {2998,5},
              {var,{2998,5},'Ct'},
              {call,
                  {2998,10},
                  {atom,{2998,10},merge_ct},
                  [{var,{2998,19},'CtA'},{var,{2998,24},'CtB'}]}},
          {debug_line,3000,1480},
          {match,
              {3000,5},
              {var,{3000,5},'St'},
              {tuple,
                  {3000,10},
                  [{atom,{3000,10},st},
                   {var,{3000,29},'Vs'},
                   {var,{3000,17},'Xs'},
                   {var,{3000,23},'Ys'},
                   {call,{3000,10},{atom,{3000,10},init_fregs},[]},
                   {var,{3000,40},'Fragile'},
                   {var,{3000,53},'NumY'},
                   {call,
                       {3001,16},
                       {atom,{3001,16},min},
                       [{var,{3001,20},'HA'},{var,{3001,24},'HB'}]},
                   {integer,{3000,10},0},
                   {integer,{3000,10},0},
                   {var,{3001,31},'Ct'},
                   {atom,{3000,10},false},
                   {atom,{3000,10},none},
                   {var,{3001,45},'RecvSt'},
                   {var,{3002,27},'MsPos'}]}},
          {debug_line,3004,1481},
          {tuple,{3004,5},[{var,{3004,6},'St'},{var,{3004,10},'Counter'}]}]}]}.
{function,
    {3008,1},
    merge_regs,4,
    [{clause,
         {3008,1},
         [{var,{3008,1},'_'},
          {var,{3008,1},'_'},
          {var,{3008,1},'_'},
          {var,{3008,1},'_'}],
         [[{call,
               {3008,1},
               {remote,
                   {3008,1},
                   {atom,{3008,1},fake},
                   {atom,{3008,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3008,1482},{atom,{3008,1},ignore}]},
     {clause,
         {3008,1},
         [{var,{3008,12},'RsA'},
          {var,{3008,17},'RsB'},
          {var,{3008,22},'Merge'},
          {var,{3008,29},'Counter'}],
         [],
         [{debug_line,3009,1483},
          {match,
              {3009,5},
              {var,{3009,5},'Keys'},
              {'if',
                  {3009,12},
                  [{clause,
                       {3010,16},
                       [],
                       [[{op,{3010,30},
                             '=<',
                             {call,
                                 {3010,16},
                                 {remote,
                                     {3010,16},
                                     {atom,{3010,16},erlang},
                                     {atom,{3010,16},map_size}},
                                 [{var,{3010,25},'RsA'}]},
                             {call,
                                 {3010,33},
                                 {remote,
                                     {3010,33},
                                     {atom,{3010,33},erlang},
                                     {atom,{3010,33},map_size}},
                                 [{var,{3010,42},'RsB'}]}}]],
                       [{debug_line,3010,1484},
                        {call,
                            {3010,50},
                            {remote,
                                {3010,54},
                                {atom,{3010,50},maps},
                                {atom,{3010,55},keys}},
                            [{var,{3010,60},'RsA'}]}]},
                   {clause,
                       {3011,16},
                       [],
                       [[{op,{3011,30},
                             '>',
                             {call,
                                 {3011,16},
                                 {remote,
                                     {3011,16},
                                     {atom,{3011,16},erlang},
                                     {atom,{3011,16},map_size}},
                                 [{var,{3011,25},'RsA'}]},
                             {call,
                                 {3011,32},
                                 {remote,
                                     {3011,32},
                                     {atom,{3011,32},erlang},
                                     {atom,{3011,32},map_size}},
                                 [{var,{3011,41},'RsB'}]}}]],
                       [{debug_line,3011,1485},
                        {call,
                            {3011,49},
                            {remote,
                                {3011,53},
                                {atom,{3011,49},maps},
                                {atom,{3011,54},keys}},
                            [{var,{3011,59},'RsB'}]}]}]}},
          {debug_line,3013,1486},
          {call,
              {3013,5},
              {atom,{3013,5},merge_regs_1},
              [{var,{3013,18},'Keys'},
               {var,{3013,24},'RsA'},
               {var,{3013,29},'RsB'},
               {block,0,[{map,{3013,34},[]}]},
               {var,{3013,39},'Merge'},
               {var,{3013,46},'Counter'}]}]}]}.
{function,
 {3015,1},
 merge_regs_1,6,
 [{clause,
   {3015,1},
   [{var,{3015,1},'_'},
    {var,{3015,1},'_'},
    {var,{3015,1},'_'},
    {var,{3015,1},'_'},
    {var,{3015,1},'_'},
    {var,{3015,1},'_'}],
   [[{call,
      {3015,1},
      {remote,{3015,1},{atom,{3015,1},fake},{atom,{3015,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3015,1487},{atom,{3015,1},ignore}]},
  {clause,
   {3015,1},
   [{cons,{3015,14},{var,{3015,15},'Reg'},{var,{3015,21},'Keys'}},
    {var,{3015,28},'RsA'},
    {var,{3015,33},'RsB'},
    {var,{3015,38},'Regs'},
    {var,{3015,44},'Merge0'},
    {var,{3015,52},'Counter0'}],
   [],
   [{debug_line,3016,1488},
    {'case',
     {3016,5},
     {tuple,{3016,10},[{var,{3016,11},'RsA'},{var,{3016,16},'RsB'}]},
     [{clause,
       {3017,9},
       [{tuple,
         {3017,9},
         [{map,
           {3017,10},
           [{map_field_exact,
             {3017,17},
             {var,{3017,13},'Reg'},
             {match,
              {3017,20},
              {tuple,
               {3017,20},
               [{atom,{3017,20},value_ref},{var,{3017,20},'_'}]},
              {var,{3017,33},'RefA'}}}]},
          {map,
           {3017,41},
           [{map_field_exact,
             {3017,48},
             {var,{3017,44},'Reg'},
             {match,
              {3017,51},
              {tuple,
               {3017,51},
               [{atom,{3017,51},value_ref},{var,{3017,51},'_'}]},
              {var,{3017,64},'RefB'}}}]}]}],
       [],
       [{debug_line,3018,1489},
        {match,
         {3018,13},
         {tuple,
          {3018,13},
          [{var,{3018,14},'Ref'},
           {var,{3018,19},'Merge'},
           {var,{3018,26},'Counter'}]},
         {call,
          {3018,37},
          {atom,{3018,37},merge_vrefs},
          [{var,{3018,49},'RefA'},
           {var,{3018,55},'RefB'},
           {var,{3018,61},'Merge0'},
           {var,{3018,69},'Counter0'}]}},
        {debug_line,3019,1490},
        {call,
         {3019,13},
         {atom,{3019,13},merge_regs_1},
         [{var,{3019,26},'Keys'},
          {var,{3019,32},'RsA'},
          {var,{3019,37},'RsB'},
          {block,0,
           [{map,
             {3019,46},
             {var,{3019,42},'Regs'},
             [{map_field_assoc,
               {3019,53},
               {var,{3019,49},'Reg'},
               {var,{3019,56},'Ref'}}]}]},
          {var,{3019,63},'Merge'},
          {var,{3019,70},'Counter'}]}]},
      {clause,
       {3020,9},
       [{tuple,
         {3020,9},
         [{map,
           {3020,10},
           [{map_field_exact,
             {3020,17},
             {var,{3020,13},'Reg'},
             {var,{3020,20},'TagA'}}]},
          {map,
           {3020,28},
           [{map_field_exact,
             {3020,35},
             {var,{3020,31},'Reg'},
             {var,{3020,38},'TagB'}}]}]}],
       [],
       [{debug_line,3025,1491},
        {match,
         {3025,13},
         {tuple,{3025,13},[{atom,{3025,14},y},{var,{3025,17},'_'}]},
         {var,{3025,22},'Reg'}},
        {debug_line,3026,1492},
        {call,
         {3026,13},
         {atom,{3026,13},merge_regs_1},
         [{var,{3026,26},'Keys'},
          {var,{3026,32},'RsA'},
          {var,{3026,37},'RsB'},
          {block,0,
           [{map,
             {3026,46},
             {var,{3026,42},'Regs'},
             [{map_field_assoc,
               {3026,53},
               {var,{3026,49},'Reg'},
               {call,
                {3026,56},
                {atom,{3026,56},merge_tags},
                [{var,{3026,67},'TagA'},{var,{3026,72},'TagB'}]}}]}]},
          {var,{3027,26},'Merge0'},
          {var,{3027,34},'Counter0'}]}]},
      {clause,
       {3028,9},
       [{tuple,{3028,9},[{map,{3028,10},[]},{map,{3028,15},[]}]}],
       [],
       [{debug_line,3029,1493},
        {call,
         {3029,13},
         {atom,{3029,13},merge_regs_1},
         [{var,{3029,26},'Keys'},
          {var,{3029,32},'RsA'},
          {var,{3029,37},'RsB'},
          {var,{3029,42},'Regs'},
          {var,{3029,48},'Merge0'},
          {var,{3029,56},'Counter0'}]}]}]}]},
  {clause,
   {3031,1},
   [{nil,{3031,14}},
    {var,{3031,18},'_'},
    {var,{3031,21},'_'},
    {var,{3031,24},'Regs'},
    {var,{3031,30},'Merge'},
    {var,{3031,37},'Counter'}],
   [],
   [{debug_line,3032,1494},
    {tuple,
     {3032,5},
     [{var,{3032,6},'Regs'},
      {var,{3032,12},'Merge'},
      {var,{3032,19},'Counter'}]}]}]}.
{function,
    {3034,1},
    merge_tags,2,
    [{clause,
         {3034,1},
         [{var,{3034,1},'_'},{var,{3034,1},'_'}],
         [[{call,
               {3034,1},
               {remote,
                   {3034,1},
                   {atom,{3034,1},fake},
                   {atom,{3034,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3034,1495},{atom,{3034,1},ignore}]},
     {clause,
         {3034,1},
         [{var,{3034,12},'Same'},{var,{3034,18},'Same'}],
         [],
         [{debug_line,3035,1496},{var,{3035,5},'Same'}]},
     {clause,
         {3036,1},
         [{atom,{3036,12},uninitialized},{var,{3036,27},'_'}],
         [],
         [{debug_line,3037,1497},{atom,{3037,5},uninitialized}]},
     {clause,
         {3038,1},
         [{var,{3038,12},'_'},{atom,{3038,15},uninitialized}],
         [],
         [{debug_line,3039,1498},{atom,{3039,5},uninitialized}]},
     {clause,
         {3040,1},
         [{tuple,{3040,12},[{atom,{3040,13},trytag},{var,{3040,21},'LblsA'}]},
          {tuple,{3040,29},[{atom,{3040,30},trytag},{var,{3040,38},'LblsB'}]}],
         [],
         [{debug_line,3041,1499},
          {tuple,
              {3041,5},
              [{atom,{3041,6},trytag},
               {call,
                   {3041,14},
                   {remote,
                       {3041,21},
                       {atom,{3041,14},ordsets},
                       {atom,{3041,22},union}},
                   [{var,{3041,28},'LblsA'},{var,{3041,35},'LblsB'}]}]}]},
     {clause,
         {3042,1},
         [{tuple,
              {3042,12},
              [{atom,{3042,13},catchtag},{var,{3042,23},'LblsA'}]},
          {tuple,
              {3042,31},
              [{atom,{3042,32},catchtag},{var,{3042,42},'LblsB'}]}],
         [],
         [{debug_line,3043,1500},
          {tuple,
              {3043,5},
              [{atom,{3043,6},catchtag},
               {call,
                   {3043,16},
                   {remote,
                       {3043,23},
                       {atom,{3043,16},ordsets},
                       {atom,{3043,24},union}},
                   [{var,{3043,30},'LblsA'},{var,{3043,37},'LblsB'}]}]}]},
     {clause,
         {3044,1},
         [{var,{3044,12},'_A'},{var,{3044,16},'_B'}],
         [],
         [{debug_line,3047,1501},{atom,{3047,5},initialized}]}]}.
{function,
    {3049,1},
    merge_vrefs,4,
    [{clause,
         {3049,1},
         [{var,{3049,1},'_'},
          {var,{3049,1},'_'},
          {var,{3049,1},'_'},
          {var,{3049,1},'_'}],
         [[{call,
               {3049,1},
               {remote,
                   {3049,1},
                   {atom,{3049,1},fake},
                   {atom,{3049,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3049,1502},{atom,{3049,1},ignore}]},
     {clause,
         {3049,1},
         [{var,{3049,13},'Ref'},
          {var,{3049,18},'Ref'},
          {var,{3049,23},'Merge'},
          {var,{3049,30},'Counter'}],
         [],
         [{debug_line,3052,1503},
          {tuple,
              {3052,5},
              [{var,{3052,6},'Ref'},
               {map,
                   {3052,16},
                   {var,{3052,11},'Merge'},
                   [{map_field_assoc,
                        {3052,23},
                        {var,{3052,19},'Ref'},
                        {var,{3052,26},'Ref'}}]},
               {var,{3052,33},'Counter'}]}]},
     {clause,
         {3053,1},
         [{var,{3053,13},'RefA'},
          {var,{3053,19},'RefB'},
          {var,{3053,25},'Merge'},
          {var,{3053,32},'Counter'}],
         [],
         [{debug_line,3056,1504},
          {match,
              {3056,5},
              {var,{3056,5},'Key'},
              {tuple,
                  {3056,11},
                  [{var,{3056,12},'RefA'},{var,{3056,18},'RefB'}]}},
          {debug_line,3057,1505},
          {'case',
              {3057,5},
              {var,{3057,10},'Merge'},
              [{clause,
                   {3058,9},
                   [{map,
                        {3058,9},
                        [{map_field_exact,
                             {3058,16},
                             {var,{3058,12},'Key'},
                             {var,{3058,19},'Ref'}}]}],
                   [],
                   [{debug_line,3059,1506},
                    {tuple,
                        {3059,13},
                        [{var,{3059,14},'Ref'},
                         {var,{3059,19},'Merge'},
                         {var,{3059,26},'Counter'}]}]},
               {clause,
                   {3060,9},
                   [{map,{3060,9},[]}],
                   [],
                   [{debug_line,3061,1507},
                    {match,
                        {3061,13},
                        {var,{3061,13},'Ref'},
                        {tuple,
                            {3061,19},
                            [{atom,{3061,19},value_ref},
                             {var,{3061,33},'Counter'}]}},
                    {debug_line,3062,1508},
                    {tuple,
                        {3062,13},
                        [{var,{3062,14},'Ref'},
                         {map,
                             {3062,24},
                             {var,{3062,19},'Merge'},
                             [{map_field_assoc,
                                  {3062,31},
                                  {var,{3062,27},'Key'},
                                  {var,{3062,34},'Ref'}}]},
                         {op,{3062,49},
                             '+',
                             {var,{3062,41},'Counter'},
                             {integer,{3062,51},1}}]}]}]}]}]}.
{function,
    {3065,1},
    merge_values,3,
    [{clause,
         {3065,1},
         [{var,{3065,1},'_'},{var,{3065,1},'_'},{var,{3065,1},'_'}],
         [[{call,
               {3065,1},
               {remote,
                   {3065,1},
                   {atom,{3065,1},fake},
                   {atom,{3065,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3065,1509},{atom,{3065,1},ignore}]},
     {clause,
         {3065,1},
         [{var,{3065,14},'Merge'},{var,{3065,21},'VsA'},{var,{3065,26},'VsB'}],
         [],
         [{debug_line,3066,1510},
          {call,
              {3066,5},
              {remote,{3066,9},{atom,{3066,5},maps},{atom,{3066,10},fold}},
              [{block,0,
                   [{'fun',
                        {3066,15},
                        {clauses,
                            [{clause,
                                 {3066,18},
                                 [{var,{3066,19},'Spec'},
                                  {var,{3066,25},'New'},
                                  {var,{3066,30},'Acc'}],
                                 [],
                                 [{debug_line,3067,1511},
                                  {call,
                                      {3067,23},
                                      {atom,{3067,23},mv_1},
                                      [{var,{3067,28},'Spec'},
                                       {var,{3067,34},'New'},
                                       {var,{3067,39},'VsA'},
                                       {var,{3067,44},'VsB'},
                                       {var,{3067,49},'Acc'}]}]}]}}]},
               {block,0,[{debug_line,3068,1512},{map,{3068,20},[]}]},
               {var,{3068,25},'Merge'}]}]}]}.
{function,
 {3070,1},
 mv_1,5,
 [{clause,
   {3070,1},
   [{var,{3070,1},'_'},
    {var,{3070,1},'_'},
    {var,{3070,1},'_'},
    {var,{3070,1},'_'},
    {var,{3070,1},'_'}],
   [[{call,
      {3070,1},
      {remote,{3070,1},{atom,{3070,1},fake},{atom,{3070,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3070,1513},{atom,{3070,1},ignore}]},
  {clause,
   {3070,1},
   [{var,{3070,6},'Same'},
    {var,{3070,12},'Same'},
    {var,{3070,18},'VsA'},
    {var,{3070,23},'VsB'},
    {var,{3070,28},'Acc0'}],
   [],
   [{debug_line,3073,1514},
    {match,
     {3073,5},
     {var,{3073,5},'Entry'},
     {'case',
      {3073,13},
      {tuple,{3073,18},[{var,{3073,19},'VsA'},{var,{3073,24},'VsB'}]},
      [{clause,
        {3074,17},
        [{tuple,
          {3074,17},
          [{map,
            {3074,18},
            [{map_field_exact,
              {3074,26},
              {var,{3074,21},'Same'},
              {var,{3074,29},'Entry0'}}]},
           {map,
            {3074,39},
            [{map_field_exact,
              {3074,47},
              {var,{3074,42},'Same'},
              {var,{3074,50},'Entry0'}}]}]}],
        [],
        [{debug_line,3075,1515},{var,{3075,21},'Entry0'}]},
       {clause,
        {3076,17},
        [{tuple,
          {3076,17},
          [{map,
            {3076,18},
            [{map_field_exact,
              {3076,26},
              {var,{3076,21},'Same'},
              {match,
               {3076,29},
               {tuple,
                {3076,29},
                [{atom,{3076,29},value},
                 {var,{3076,29},'_'},
                 {var,{3076,29},'_'},
                 {var,{3076,41},'TypeA'}]},
               {var,{3076,48},'Entry0'}}}]},
           {map,
            {3077,18},
            [{map_field_exact,
              {3077,26},
              {var,{3077,21},'Same'},
              {tuple,
               {3077,29},
               [{atom,{3077,29},value},
                {var,{3077,29},'_'},
                {var,{3077,29},'_'},
                {var,{3077,41},'TypeB'}]}}]}]}],
        [],
        [{debug_line,3078,1516},
         {match,
          {3078,21},
          {var,{3078,21},'ConcreteA'},
          {call,
           {3078,33},
           {atom,{3078,33},concrete_type},
           [{var,{3078,47},'TypeA'},{var,{3078,54},'VsA'}]}},
         {debug_line,3079,1517},
         {match,
          {3079,21},
          {var,{3079,21},'ConcreteB'},
          {call,
           {3079,33},
           {atom,{3079,33},concrete_type},
           [{var,{3079,47},'TypeB'},{var,{3079,54},'VsB'}]}},
         {debug_line,3080,1518},
         {block,
          {3080,21},
          [{match,
            {3080,34},
            {var,{3080,34},rec62},
            {call,
             {3080,39},
             {atom,{3080,39},join},
             [{var,{3080,44},'ConcreteA'},{var,{3080,55},'ConcreteB'}]}},
           {match,{3080,21},{var,{3080,21},rec63},{var,{3080,21},'Entry0'}},
           {'case',
            {3080,34},
            {var,{3080,21},rec63},
            [{clause,
              {3080,34},
              [{tuple,
                {3080,34},
                [{atom,{3080,34},value},
                 {var,{3080,34},'_'},
                 {var,{3080,34},'_'},
                 {var,{3080,34},'_'}]}],
              [],
              [{call,
                {3080,34},
                {remote,
                 {3080,34},
                 {atom,{3080,34},erlang},
                 {atom,{3080,34},setelement}},
                [{integer,{3080,34},4},
                 {var,{3080,21},rec63},
                 {var,{3080,34},rec62}]}]},
             {clause,
              [{generated,true},{location,{3080,34}}],
              [{var,[{generated,true},{location,{3080,34}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{3080,34}}],
                {remote,
                 [{generated,true},{location,{3080,34}}],
                 {atom,[{generated,true},{location,{3080,34}}],erlang},
                 {atom,[{generated,true},{location,{3080,34}}],error}},
                [{tuple,
                  [{generated,true},{location,{3080,34}}],
                  [{atom,[{generated,true},{location,{3080,34}}],badrecord},
                   {var,{3080,21},rec63}]}]}]}]}]}]}]}},
    {debug_line,3083,1519},
    {match,
     {3083,5},
     {var,{3083,5},'Acc'},
     {map,
      {3083,15},
      {var,{3083,11},'Acc0'},
      [{map_field_assoc,
        {3083,23},
        {var,{3083,18},'Same'},
        {var,{3083,26},'Entry'}}]}},
    {debug_line,3087,1520},
    {call,
     {3087,5},
     {atom,{3087,5},mv_args},
     [{block,0,
       [{'case',
         {3087,13},
         {var,{3087,13},'Entry'},
         [{clause,
           [{generated,true},{location,{3087,13}}],
           [{tuple,
             [{generated,true},{location,{3087,13}}],
             [{atom,{3087,13},value},
              {var,{3087,13},'_'},
              {var,{3087,13},rec64},
              {var,{3087,13},'_'}]}],
           [],
           [{var,{3087,13},rec64}]},
          {clause,
           [{generated,true},{location,{3087,13}}],
           [{var,{3087,13},rec64}],
           [],
           [{call,
             [{generated,true},{location,{3087,13}}],
             {remote,
              [{generated,true},{location,{3087,13}}],
              {atom,[{generated,true},{location,{3087,13}}],erlang},
              {atom,[{generated,true},{location,{3087,13}}],error}},
             [{tuple,
               [{generated,true},{location,{3087,13}}],
               [{atom,[{generated,true},{location,{3087,13}}],badrecord},
                {var,{3087,13},rec64}]}]}]}]}]},
      {var,{3087,31},'VsA'},
      {var,{3087,36},'VsB'},
      {var,{3087,41},'Acc'}]}]},
  {clause,
   {3088,1},
   [{tuple,{3088,6},[{var,{3088,7},'RefA'},{var,{3088,13},'RefB'}]},
    {var,{3088,20},'New'},
    {var,{3088,25},'VsA'},
    {var,{3088,30},'VsB'},
    {var,{3088,35},'Acc'}],
   [],
   [{debug_line,3089,1521},
    {match,
     {3089,5},
     {tuple,
      {3089,5},
      [{atom,{3089,5},value},
       {var,{3089,5},'_'},
       {var,{3089,5},'_'},
       {var,{3089,17},'TypeA'}]},
     {call,
      {3089,26},
      {remote,{3089,26},{atom,{3089,26},erlang},{atom,{3089,26},map_get}},
      [{var,{3089,34},'RefA'},{var,{3089,40},'VsA'}]}},
    {debug_line,3090,1522},
    {match,
     {3090,5},
     {tuple,
      {3090,5},
      [{atom,{3090,5},value},
       {var,{3090,5},'_'},
       {var,{3090,5},'_'},
       {var,{3090,17},'TypeB'}]},
     {call,
      {3090,26},
      {remote,{3090,26},{atom,{3090,26},erlang},{atom,{3090,26},map_get}},
      [{var,{3090,34},'RefB'},{var,{3090,40},'VsB'}]}},
    {debug_line,3092,1523},
    {match,
     {3092,5},
     {var,{3092,5},'ConcreteA'},
     {call,
      {3092,17},
      {atom,{3092,17},concrete_type},
      [{var,{3092,31},'TypeA'},{var,{3092,38},'VsA'}]}},
    {debug_line,3093,1524},
    {match,
     {3093,5},
     {var,{3093,5},'ConcreteB'},
     {call,
      {3093,17},
      {atom,{3093,17},concrete_type},
      [{var,{3093,31},'TypeB'},{var,{3093,38},'VsB'}]}},
    {debug_line,3094,1525},
    {map,
     {3094,8},
     {var,{3094,5},'Acc'},
     [{map_field_assoc,
       {3094,15},
       {var,{3094,11},'New'},
       {tuple,
        {3094,18},
        [{atom,{3094,18},value},
         {atom,{3094,28},join},
         {nil,{3094,38}},
         {call,
          {3094,46},
          {atom,{3094,46},join},
          [{var,{3094,51},'ConcreteA'},{var,{3094,62},'ConcreteB'}]}]}}]}]}]}.
{function,{3096,1},
          concrete_type,2,
          [{clause,{3096,1},
                   [{var,{3096,1},'_'},{var,{3096,1},'_'}],
                   [[{call,{3096,1},
                           {remote,{3096,1},
                                   {atom,{3096,1},fake},
                                   {atom,{3096,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3096,1526},{atom,{3096,1},ignore}]},
           {clause,{3096,1},
                   [{var,{3096,15},'T'},{var,{3096,18},'Vs'}],
                   [[{call,{3096,27},
                           {remote,{3096,27},
                                   {atom,{3096,27},erlang},
                                   {atom,{3096,27},is_function}},
                           [{var,{3096,39},'T'}]}]],
                   [{debug_line,3096,1527},
                    {call,{3096,45},
                          {var,{3096,45},'T'},
                          [{var,{3096,47},'Vs'}]}]},
           {clause,{3097,1},
                   [{var,{3097,15},'T'},{var,{3097,18},'_Vs'}],
                   [],
                   [{debug_line,3097,1528},{var,{3097,26},'T'}]}]}.
{function,
    {3099,1},
    mv_args,4,
    [{clause,
         {3099,1},
         [{var,{3099,1},'_'},
          {var,{3099,1},'_'},
          {var,{3099,1},'_'},
          {var,{3099,1},'_'}],
         [[{call,
               {3099,1},
               {remote,
                   {3099,1},
                   {atom,{3099,1},fake},
                   {atom,{3099,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3099,1529},{atom,{3099,1},ignore}]},
     {clause,
         {3099,1},
         [{cons,
              {3099,9},
              {match,
                  {3099,10},
                  {tuple,
                      {3099,10},
                      [{atom,{3099,10},value_ref},{var,{3099,10},'_'}]},
                  {var,{3099,23},'Arg'}},
              {var,{3099,29},'Args'}},
          {var,{3099,36},'VsA'},
          {var,{3099,41},'VsB'},
          {var,{3099,46},'Acc0'}],
         [],
         [{debug_line,3100,1530},
          {'case',
              {3100,5},
              {var,{3100,10},'Acc0'},
              [{clause,
                   {3101,9},
                   [{map,
                        {3101,9},
                        [{map_field_exact,
                             {3101,16},
                             {var,{3101,12},'Arg'},
                             {var,{3101,19},'_'}}]}],
                   [],
                   [{debug_line,3102,1531},
                    {call,
                        {3102,13},
                        {atom,{3102,13},mv_args},
                        [{var,{3102,21},'Args'},
                         {var,{3102,27},'VsA'},
                         {var,{3102,32},'VsB'},
                         {var,{3102,37},'Acc0'}]}]},
               {clause,
                   {3103,9},
                   [{map,{3103,9},[]}],
                   [],
                   [{debug_line,3104,1532},
                    {match,
                        {3104,13},
                        {var,{3104,13},'Acc'},
                        {call,
                            {3104,19},
                            {atom,{3104,19},mv_1},
                            [{var,{3104,24},'Arg'},
                             {var,{3104,29},'Arg'},
                             {var,{3104,34},'VsA'},
                             {var,{3104,39},'VsB'},
                             {var,{3104,44},'Acc0'}]}},
                    {debug_line,3105,1533},
                    {call,
                        {3105,13},
                        {atom,{3105,13},mv_args},
                        [{var,{3105,21},'Args'},
                         {var,{3105,27},'VsA'},
                         {var,{3105,32},'VsB'},
                         {var,{3105,37},'Acc'}]}]}]}]},
     {clause,
         {3107,1},
         [{cons,{3107,9},{var,{3107,10},'_'},{var,{3107,14},'Args'}},
          {var,{3107,21},'VsA'},
          {var,{3107,26},'VsB'},
          {var,{3107,31},'Acc'}],
         [],
         [{debug_line,3108,1534},
          {call,
              {3108,5},
              {atom,{3108,5},mv_args},
              [{var,{3108,13},'Args'},
               {var,{3108,19},'VsA'},
               {var,{3108,24},'VsB'},
               {var,{3108,29},'Acc'}]}]},
     {clause,
         {3109,1},
         [{nil,{3109,9}},
          {var,{3109,13},'_VsA'},
          {var,{3109,19},'_VsB'},
          {var,{3109,25},'Acc'}],
         [],
         [{debug_line,3110,1535},{var,{3110,5},'Acc'}]}]}.
{function,{3112,1},
          merge_fragility,2,
          [{clause,{3112,1},
                   [{var,{3112,1},'_'},{var,{3112,1},'_'}],
                   [[{call,{3112,1},
                           {remote,{3112,1},
                                   {atom,{3112,1},fake},
                                   {atom,{3112,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3112,1536},{atom,{3112,1},ignore}]},
           {clause,{3112,1},
                   [{var,{3112,17},'FragileA'},{var,{3112,27},'FragileB'}],
                   [],
                   [{debug_line,3113,1537},
                    {call,{3113,5},
                          {remote,{3113,9},
                                  {atom,{3113,5},sets},
                                  {atom,{3113,10},union}},
                          [{var,{3113,16},'FragileA'},
                           {var,{3113,26},'FragileB'}]}]}]}.
{function,
    {3115,1},
    merge_ms_positions,3,
    [{clause,
         {3115,1},
         [{var,{3115,1},'_'},{var,{3115,1},'_'},{var,{3115,1},'_'}],
         [[{call,
               {3115,1},
               {remote,
                   {3115,1},
                   {atom,{3115,1},fake},
                   {atom,{3115,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3115,1538},{atom,{3115,1},ignore}]},
     {clause,
         {3115,1},
         [{var,{3115,20},'MsPosA'},
          {var,{3115,28},'MsPosB'},
          {var,{3115,36},'Vs'}],
         [],
         [{debug_line,3116,1539},
          {match,
              {3116,5},
              {var,{3116,5},'Keys'},
              {'if',
                  {3116,12},
                  [{clause,
                       {3117,16},
                       [],
                       [[{op,{3117,33},
                             '=<',
                             {call,
                                 {3117,16},
                                 {remote,
                                     {3117,16},
                                     {atom,{3117,16},erlang},
                                     {atom,{3117,16},map_size}},
                                 [{var,{3117,25},'MsPosA'}]},
                             {call,
                                 {3117,36},
                                 {remote,
                                     {3117,36},
                                     {atom,{3117,36},erlang},
                                     {atom,{3117,36},map_size}},
                                 [{var,{3117,45},'MsPosB'}]}}]],
                       [{debug_line,3117,1540},
                        {call,
                            {3117,56},
                            {remote,
                                {3117,60},
                                {atom,{3117,56},maps},
                                {atom,{3117,61},keys}},
                            [{var,{3117,66},'MsPosA'}]}]},
                   {clause,
                       {3118,16},
                       [],
                       [[{op,{3118,33},
                             '>',
                             {call,
                                 {3118,16},
                                 {remote,
                                     {3118,16},
                                     {atom,{3118,16},erlang},
                                     {atom,{3118,16},map_size}},
                                 [{var,{3118,25},'MsPosA'}]},
                             {call,
                                 {3118,35},
                                 {remote,
                                     {3118,35},
                                     {atom,{3118,35},erlang},
                                     {atom,{3118,35},map_size}},
                                 [{var,{3118,44},'MsPosB'}]}}]],
                       [{debug_line,3118,1541},
                        {call,
                            {3118,55},
                            {remote,
                                {3118,59},
                                {atom,{3118,55},maps},
                                {atom,{3118,60},keys}},
                            [{var,{3118,65},'MsPosB'}]}]}]}},
          {debug_line,3120,1542},
          {call,
              {3120,5},
              {atom,{3120,5},merge_ms_positions_1},
              [{var,{3120,26},'Keys'},
               {var,{3120,32},'MsPosA'},
               {var,{3120,40},'MsPosB'},
               {var,{3120,48},'Vs'},
               {block,0,[{map,{3120,52},[]}]}]}]}]}.
{function,
    {3122,1},
    merge_ms_positions_1,5,
    [{clause,
         {3122,1},
         [{var,{3122,1},'_'},
          {var,{3122,1},'_'},
          {var,{3122,1},'_'},
          {var,{3122,1},'_'},
          {var,{3122,1},'_'}],
         [[{call,
               {3122,1},
               {remote,
                   {3122,1},
                   {atom,{3122,1},fake},
                   {atom,{3122,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3122,1543},{atom,{3122,1},ignore}]},
     {clause,
         {3122,1},
         [{cons,{3122,22},{var,{3122,23},'Key'},{var,{3122,29},'Keys'}},
          {var,{3122,36},'MsPosA'},
          {var,{3122,44},'MsPosB'},
          {var,{3122,52},'Vs'},
          {var,{3122,56},'Acc'}],
         [],
         [{debug_line,3123,1544},
          {'case',
              {3123,5},
              {tuple,
                  {3123,10},
                  [{var,{3123,11},'MsPosA'},{var,{3123,19},'MsPosB'}]},
              [{clause,
                   {3124,9},
                   [{tuple,
                        {3124,9},
                        [{map,
                             {3124,10},
                             [{map_field_exact,
                                  {3124,17},
                                  {var,{3124,13},'Key'},
                                  {var,{3124,20},'Pos'}}]},
                         {map,
                             {3124,27},
                             [{map_field_exact,
                                  {3124,34},
                                  {var,{3124,30},'Key'},
                                  {var,{3124,37},'Pos'}}]}]}],
                   [[{call,
                         {3124,49},
                         {remote,
                             {3124,49},
                             {atom,{3124,49},erlang},
                             {atom,{3124,49},is_map_key}},
                         [{var,{3124,60},'Pos'},{var,{3124,65},'Vs'}]}]],
                   [{debug_line,3125,1545},
                    {call,
                        {3125,13},
                        {atom,{3125,13},merge_ms_positions_1},
                        [{var,{3125,34},'Keys'},
                         {var,{3125,40},'MsPosA'},
                         {var,{3125,48},'MsPosB'},
                         {var,{3125,56},'Vs'},
                         {block,0,
                             [{map,
                                  {3125,63},
                                  {var,{3125,60},'Acc'},
                                  [{map_field_assoc,
                                       {3125,70},
                                       {var,{3125,66},'Key'},
                                       {var,{3125,73},'Pos'}}]}]}]}]},
               {clause,
                   {3126,9},
                   [{tuple,{3126,9},[{map,{3126,10},[]},{map,{3126,15},[]}]}],
                   [],
                   [{debug_line,3127,1546},
                    {call,
                        {3127,13},
                        {atom,{3127,13},merge_ms_positions_1},
                        [{var,{3127,34},'Keys'},
                         {var,{3127,40},'MsPosA'},
                         {var,{3127,48},'MsPosB'},
                         {var,{3127,56},'Vs'},
                         {var,{3127,60},'Acc'}]}]}]}]},
     {clause,
         {3129,1},
         [{nil,{3129,22}},
          {var,{3129,26},'_MsPosA'},
          {var,{3129,35},'_MsPosB'},
          {var,{3129,44},'_Vs'},
          {var,{3129,49},'Acc'}],
         [],
         [{debug_line,3130,1547},{var,{3130,5},'Acc'}]}]}.
{function,{3132,1},
          merge_receive_state,2,
          [{clause,{3132,1},
                   [{var,{3132,1},'_'},{var,{3132,1},'_'}],
                   [[{call,{3132,1},
                           {remote,{3132,1},
                                   {atom,{3132,1},fake},
                                   {atom,{3132,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3132,1548},{atom,{3132,1},ignore}]},
           {clause,{3132,1},
                   [{var,{3132,21},'Same'},{var,{3132,27},'Same'}],
                   [],
                   [{debug_line,3132,1549},{var,{3132,36},'Same'}]},
           {clause,{3133,1},
                   [{var,{3133,21},'_'},{var,{3133,24},'_'}],
                   [],
                   [{debug_line,3133,1550},{atom,{3133,30},undecided}]}]}.
{function,{3135,1},
          merge_stk,4,
          [{clause,{3135,1},
                   [{var,{3135,1},'_'},
                    {var,{3135,1},'_'},
                    {var,{3135,1},'_'},
                    {var,{3135,1},'_'}],
                   [[{call,{3135,1},
                           {remote,{3135,1},
                                   {atom,{3135,1},fake},
                                   {atom,{3135,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3135,1551},{atom,{3135,1},ignore}]},
           {clause,{3135,1},
                   [{var,{3135,11},'_'},
                    {var,{3135,14},'_'},
                    {var,{3135,17},'S'},
                    {var,{3135,20},'S'}],
                   [],
                   [{debug_line,3136,1552},{var,{3136,5},'S'}]},
           {clause,{3137,1},
                   [{var,{3137,11},'YsA'},
                    {var,{3137,16},'YsB'},
                    {var,{3137,21},'StkA'},
                    {var,{3137,27},'StkB'}],
                   [],
                   [{debug_line,3138,1553},
                    {call,{3138,5},
                          {atom,{3138,5},merge_stk_undecided},
                          [{var,{3138,25},'YsA'},
                           {var,{3138,30},'YsB'},
                           {var,{3138,35},'StkA'},
                           {var,{3138,41},'StkB'}]}]}]}.
{function,
    {3140,1},
    merge_stk_undecided,4,
    [{clause,
         {3140,1},
         [{var,{3140,1},'_'},
          {var,{3140,1},'_'},
          {var,{3140,1},'_'},
          {var,{3140,1},'_'}],
         [[{call,
               {3140,1},
               {remote,
                   {3140,1},
                   {atom,{3140,1},fake},
                   {atom,{3140,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3140,1554},{atom,{3140,1},ignore}]},
     {clause,
         {3140,1},
         [{var,{3140,21},'YsA'},
          {var,{3140,26},'YsB'},
          {tuple,
              {3140,31},
              [{atom,{3140,32},undecided},{var,{3140,43},'StkA'}]},
          {tuple,
              {3140,50},
              [{atom,{3140,51},undecided},{var,{3140,62},'StkB'}]}],
         [],
         [{debug_line,3144,1555},
          {match,
              {3144,5},
              {atom,{3144,5},ok},
              {call,
                  {3144,10},
                  {atom,{3144,10},merge_stk_verify_init},
                  [{block,0,
                       [{op,{3144,37},
                            '-',
                            {var,{3144,32},'StkA'},
                            {integer,{3144,39},1}}]},
                   {var,{3144,42},'YsA'}]}},
          {debug_line,3145,1556},
          {match,
              {3145,5},
              {atom,{3145,5},ok},
              {call,
                  {3145,10},
                  {atom,{3145,10},merge_stk_verify_init},
                  [{block,0,
                       [{op,{3145,37},
                            '-',
                            {var,{3145,32},'StkB'},
                            {integer,{3145,39},1}}]},
                   {var,{3145,42},'YsB'}]}},
          {debug_line,3147,1557},
          {tuple,
              {3147,5},
              [{atom,{3147,6},undecided},
               {call,
                   {3147,17},
                   {atom,{3147,17},min},
                   [{var,{3147,21},'StkA'},{var,{3147,27},'StkB'}]}]}]},
     {clause,
         {3148,1},
         [{var,{3148,21},'YsA'},
          {var,{3148,26},'YsB'},
          {var,{3148,31},'StkA'},
          {var,{3148,37},'StkB'}],
         [[{call,
               {3148,48},
               {remote,
                   {3148,48},
                   {atom,{3148,48},erlang},
                   {atom,{3148,48},is_integer}},
               [{var,{3148,59},'StkA'}]}]],
         [{debug_line,3149,1558},
          {call,
              {3149,5},
              {atom,{3149,5},merge_stk_undecided},
              [{var,{3149,25},'YsA'},
               {var,{3149,30},'YsB'},
               {block,0,
                   [{tuple,
                        {3149,35},
                        [{atom,{3149,36},undecided},{var,{3149,47},'StkA'}]}]},
               {var,{3149,54},'StkB'}]}]},
     {clause,
         {3150,1},
         [{var,{3150,21},'YsA'},
          {var,{3150,26},'YsB'},
          {var,{3150,31},'StkA'},
          {var,{3150,37},'StkB'}],
         [[{call,
               {3150,48},
               {remote,
                   {3150,48},
                   {atom,{3150,48},erlang},
                   {atom,{3150,48},is_integer}},
               [{var,{3150,59},'StkB'}]}]],
         [{debug_line,3151,1559},
          {call,
              {3151,5},
              {atom,{3151,5},merge_stk_undecided},
              [{var,{3151,25},'YsA'},
               {var,{3151,30},'YsB'},
               {var,{3151,35},'StkA'},
               {block,0,
                   [{tuple,
                        {3151,41},
                        [{atom,{3151,42},undecided},
                         {var,{3151,53},'StkB'}]}]}]}]},
     {clause,
         {3152,1},
         [{var,{3152,21},'YsA'},
          {var,{3152,26},'YsB'},
          {atom,{3152,31},none},
          {var,{3152,37},'StkB'}],
         [],
         [{debug_line,3153,1560},
          {call,
              {3153,5},
              {atom,{3153,5},merge_stk_undecided},
              [{var,{3153,25},'YsA'},
               {var,{3153,30},'YsB'},
               {block,0,
                   [{tuple,
                        {3153,35},
                        [{atom,{3153,36},undecided},{integer,{3153,47},0}]}]},
               {var,{3153,51},'StkB'}]}]},
     {clause,
         {3154,1},
         [{var,{3154,21},'YsA'},
          {var,{3154,26},'YsB'},
          {var,{3154,31},'StkA'},
          {atom,{3154,37},none}],
         [],
         [{debug_line,3155,1561},
          {call,
              {3155,5},
              {atom,{3155,5},merge_stk_undecided},
              [{var,{3155,25},'YsA'},
               {var,{3155,30},'YsB'},
               {var,{3155,35},'StkA'},
               {block,0,
                   [{tuple,
                        {3155,41},
                        [{atom,{3155,42},undecided},
                         {integer,{3155,53},0}]}]}]}]}]}.
{function,
    {3157,1},
    merge_stk_verify_init,2,
    [{clause,
         {3157,1},
         [{var,{3157,1},'_'},{var,{3157,1},'_'}],
         [[{call,
               {3157,1},
               {remote,
                   {3157,1},
                   {atom,{3157,1},fake},
                   {atom,{3157,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3157,1562},{atom,{3157,1},ignore}]},
     {clause,
         {3157,1},
         [{op,{3157,23},'-',{integer,{3157,24},1}},{var,{3157,27},'_Ys'}],
         [],
         [{debug_line,3158,1563},{atom,{3158,5},ok}]},
     {clause,
         {3159,1},
         [{var,{3159,23},'Y'},{var,{3159,26},'Ys'}],
         [],
         [{debug_line,3160,1564},
          {match,
              {3160,5},
              {var,{3160,5},'Reg'},
              {tuple,{3160,11},[{atom,{3160,12},y},{var,{3160,15},'Y'}]}},
          {debug_line,3161,1565},
          {'case',
              {3161,5},
              {var,{3161,10},'Ys'},
              [{clause,
                   {3162,9},
                   [{map,
                        {3162,9},
                        [{map_field_exact,
                             {3162,16},
                             {var,{3162,12},'Reg'},
                             {var,{3162,19},'TagOrVRef'}}]}],
                   [[{op,{3162,46},
                         '=/=',
                         {var,{3162,36},'TagOrVRef'},
                         {atom,{3162,50},uninitialized}}]],
                   [{debug_line,3163,1566},
                    {call,
                        {3163,13},
                        {atom,{3163,13},merge_stk_verify_init},
                        [{block,0,
                             [{op,{3163,37},
                                  '-',
                                  {var,{3163,35},'Y'},
                                  {integer,{3163,39},1}}]},
                         {var,{3163,42},'Ys'}]}]},
               {clause,
                   {3164,9},
                   [{map,{3164,9},[]}],
                   [],
                   [{debug_line,3165,1567},
                    {call,
                        {3165,13},
                        {atom,{3165,13},error},
                        [{block,0,
                             [{tuple,
                                  {3165,19},
                                  [{atom,{3165,20},unsafe_stack},
                                   {var,{3165,34},'Reg'},
                                   {var,{3165,39},'Ys'}]}]}]}]}]}]}]}.
{function,{3168,1},
          merge_ct,2,
          [{clause,{3168,1},
                   [{var,{3168,1},'_'},{var,{3168,1},'_'}],
                   [[{call,{3168,1},
                           {remote,{3168,1},
                                   {atom,{3168,1},fake},
                                   {atom,{3168,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3168,1568},{atom,{3168,1},ignore}]},
           {clause,{3168,1},
                   [{var,{3168,10},'S'},{var,{3168,13},'S'}],
                   [],
                   [{debug_line,3168,1569},{var,{3168,19},'S'}]},
           {clause,{3169,1},
                   [{var,{3169,10},'Ct0'},{var,{3169,15},'Ct1'}],
                   [],
                   [{debug_line,3169,1570},
                    {call,{3169,23},
                          {atom,{3169,23},merge_ct_1},
                          [{var,{3169,34},'Ct0'},{var,{3169,39},'Ct1'}]}]}]}.
{function,
    {3171,1},
    merge_ct_1,2,
    [{clause,
         {3171,1},
         [{var,{3171,1},'_'},{var,{3171,1},'_'}],
         [[{call,
               {3171,1},
               {remote,
                   {3171,1},
                   {atom,{3171,1},fake},
                   {atom,{3171,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3171,1571},{atom,{3171,1},ignore}]},
     {clause,
         {3171,1},
         [{nil,{3171,12}},{nil,{3171,16}}],
         [],
         [{debug_line,3172,1572},{nil,{3172,5}}]},
     {clause,
         {3173,1},
         [{cons,
              {3173,12},
              {tuple,
                  {3173,13},
                  [{atom,{3173,14},trytag},{var,{3173,22},'LblsA'}]},
              {var,{3173,31},'CtA'}},
          {cons,
              {3173,37},
              {tuple,
                  {3173,38},
                  [{atom,{3173,39},trytag},{var,{3173,47},'LblsB'}]},
              {var,{3173,56},'CtB'}}],
         [],
         [{debug_line,3174,1573},
          {cons,
              {3174,5},
              {tuple,
                  {3174,6},
                  [{atom,{3174,7},trytag},
                   {call,
                       {3174,15},
                       {remote,
                           {3174,22},
                           {atom,{3174,15},ordsets},
                           {atom,{3174,23},union}},
                       [{var,{3174,29},'LblsA'},{var,{3174,36},'LblsB'}]}]},
              {call,
                  {3174,46},
                  {atom,{3174,46},merge_ct_1},
                  [{var,{3174,57},'CtA'},{var,{3174,62},'CtB'}]}}]},
     {clause,
         {3175,1},
         [{cons,
              {3175,12},
              {tuple,
                  {3175,13},
                  [{atom,{3175,14},catchtag},{var,{3175,24},'LblsA'}]},
              {var,{3175,33},'CtA'}},
          {cons,
              {3175,39},
              {tuple,
                  {3175,40},
                  [{atom,{3175,41},catchtag},{var,{3175,51},'LblsB'}]},
              {var,{3175,60},'CtB'}}],
         [],
         [{debug_line,3176,1574},
          {cons,
              {3176,5},
              {tuple,
                  {3176,6},
                  [{atom,{3176,7},catchtag},
                   {call,
                       {3176,17},
                       {remote,
                           {3176,24},
                           {atom,{3176,17},ordsets},
                           {atom,{3176,25},union}},
                       [{var,{3176,31},'LblsA'},{var,{3176,38},'LblsB'}]}]},
              {call,
                  {3176,48},
                  {atom,{3176,48},merge_ct_1},
                  [{var,{3176,59},'CtA'},{var,{3176,64},'CtB'}]}}]},
     {clause,
         {3177,1},
         [{var,{3177,12},'_'},{var,{3177,15},'_'}],
         [],
         [{debug_line,3178,1575},{atom,{3178,5},undecided}]}]}.
{function,
 {3180,1},
 verify_y_init,1,
 [{clause,
   {3180,1},
   [{var,{3180,1},'_'}],
   [[{call,
      {3180,1},
      {remote,{3180,1},{atom,{3180,1},fake},{atom,{3180,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3180,1576},{atom,{3180,1},ignore}]},
  {clause,
   {3180,1},
   [{match,
     {3180,15},
     {tuple,
      {3180,15},
      [{atom,{3180,15},vst},
       {tuple,
        {3180,28},
        [{atom,{3180,28},st},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'},
         {var,{3180,45},'Ys'},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'},
         {var,{3180,37},'NumY'},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'},
         {var,{3180,28},'_'}]},
       {var,{3180,15},'_'},
       {var,{3180,15},'_'},
       {var,{3180,15},'_'},
       {var,{3180,15},'_'},
       {var,{3180,15},'_'}]},
     {var,{3180,50},'Vst'}}],
   [[{call,
      {3180,60},
      {remote,{3180,60},{atom,{3180,60},erlang},{atom,{3180,60},is_integer}},
      [{var,{3180,71},'NumY'}]}]],
   [{debug_line,3181,1577},
    {match,
     {3181,5},
     {var,{3181,5},'HighestY'},
     {call,
      {3181,16},
      {remote,{3181,20},{atom,{3181,16},maps},{atom,{3181,21},fold}},
      [{block,0,
        [{'fun',
          {3181,26},
          {clauses,
           [{clause,
             {3181,29},
             [{tuple,{3181,30},[{atom,{3181,31},y},{var,{3181,33},'Y'}]},
              {var,{3181,37},'_'},
              {var,{3181,40},'Acc'}],
             [],
             [{call,
               {3181,48},
               {remote,{3181,48},{atom,{3181,48},erlang},{atom,{3181,48},max}},
               [{var,{3181,52},'Y'},{var,{3181,55},'Acc'}]}]}]}}]},
       {block,0,[{op,{3181,65},'-',{integer,{3181,66},1}}]},
       {var,{3181,69},'Ys'}]}},
    {debug_line,3182,1578},
    {match,
     {3182,5},
     {atom,{3182,5},true},
     {op,{3182,17},'>',{var,{3182,12},'NumY'},{var,{3182,19},'HighestY'}}},
    {debug_line,3183,1579},
    {call,
     {3183,5},
     {atom,{3183,5},verify_y_init_1},
     [{block,0,
       [{op,{3183,26},'-',{var,{3183,21},'NumY'},{integer,{3183,28},1}}]},
      {var,{3183,31},'Vst'}]},
    {debug_line,3184,1580},
    {atom,{3184,5},ok}]},
  {clause,
   {3185,1},
   [{match,
     {3185,15},
     {tuple,
      {3185,15},
      [{atom,{3185,15},vst},
       {tuple,
        {3185,28},
        [{atom,{3185,28},st},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'},
         {var,{3185,61},'Ys'},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'},
         {tuple,
          {3185,37},
          [{atom,{3185,38},undecided},{var,{3185,48},'MinSlots'}]},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'},
         {var,{3185,28},'_'}]},
       {var,{3185,15},'_'},
       {var,{3185,15},'_'},
       {var,{3185,15},'_'},
       {var,{3185,15},'_'},
       {var,{3185,15},'_'}]},
     {var,{3185,66},'Vst'}}],
   [],
   [{debug_line,3186,1581},
    {match,
     {3186,5},
     {var,{3186,5},'HighestY'},
     {call,
      {3186,16},
      {remote,{3186,20},{atom,{3186,16},maps},{atom,{3186,21},fold}},
      [{block,0,
        [{'fun',
          {3186,26},
          {clauses,
           [{clause,
             {3186,29},
             [{tuple,{3186,30},[{atom,{3186,31},y},{var,{3186,33},'Y'}]},
              {var,{3186,37},'_'},
              {var,{3186,40},'Acc'}],
             [],
             [{call,
               {3186,48},
               {remote,{3186,48},{atom,{3186,48},erlang},{atom,{3186,48},max}},
               [{var,{3186,52},'Y'},{var,{3186,55},'Acc'}]}]}]}}]},
       {block,0,[{op,{3186,65},'-',{integer,{3186,66},1}}]},
       {var,{3186,69},'Ys'}]}},
    {debug_line,3187,1582},
    {match,
     {3187,5},
     {atom,{3187,5},true},
     {op,{3187,21},'>',{var,{3187,12},'MinSlots'},{var,{3187,23},'HighestY'}}},
    {debug_line,3188,1583},
    {call,
     {3188,5},
     {atom,{3188,5},verify_y_init_1},
     [{var,{3188,21},'HighestY'},{var,{3188,31},'Vst'}]}]},
  {clause,
   {3189,1},
   [{tuple,
     {3189,15},
     [{atom,{3189,15},vst},
      {var,{3189,15},'_'},
      {var,{3189,15},'_'},
      {var,{3189,15},'_'},
      {var,{3189,15},'_'},
      {var,{3189,15},'_'},
      {var,{3189,15},'_'}]}],
   [],
   [{debug_line,3190,1584},{atom,{3190,5},ok}]}]}.
{function,
    {3192,1},
    verify_y_init_1,2,
    [{clause,
         {3192,1},
         [{var,{3192,1},'_'},{var,{3192,1},'_'}],
         [[{call,
               {3192,1},
               {remote,
                   {3192,1},
                   {atom,{3192,1},fake},
                   {atom,{3192,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3192,1585},{atom,{3192,1},ignore}]},
     {clause,
         {3192,1},
         [{op,{3192,17},'-',{integer,{3192,18},1}},{var,{3192,21},'_Vst'}],
         [],
         [{debug_line,3193,1586},{atom,{3193,5},ok}]},
     {clause,
         {3194,1},
         [{var,{3194,17},'Y'},{var,{3194,20},'Vst'}],
         [],
         [{debug_line,3195,1587},
          {match,
              {3195,5},
              {var,{3195,5},'Reg'},
              {tuple,{3195,11},[{atom,{3195,12},y},{var,{3195,15},'Y'}]}},
          {debug_line,3196,1588},
          {call,
              {3196,5},
              {atom,{3196,5},assert_not_fragile},
              [{var,{3196,24},'Reg'},{var,{3196,29},'Vst'}]},
          {debug_line,3197,1589},
          {'case',
              {3197,5},
              {call,
                  {3197,10},
                  {atom,{3197,10},get_raw_type},
                  [{var,{3197,23},'Reg'},{var,{3197,28},'Vst'}]},
              [{clause,
                   {3198,9},
                   [{atom,{3198,9},uninitialized}],
                   [],
                   [{debug_line,3198,1590},
                    {call,
                        {3198,26},
                        {atom,{3198,26},error},
                        [{block,0,
                             [{tuple,
                                  {3198,32},
                                  [{atom,{3198,33},uninitialized_reg},
                                   {var,{3198,51},'Reg'}]}]}]}]},
               {clause,
                   {3199,9},
                   [{var,{3199,9},'_'}],
                   [],
                   [{debug_line,3199,1591},
                    {call,
                        {3199,14},
                        {atom,{3199,14},verify_y_init_1},
                        [{block,0,
                             [{op,{3199,32},
                                  '-',
                                  {var,{3199,30},'Y'},
                                  {integer,{3199,34},1}}]},
                         {var,{3199,37},'Vst'}]}]}]}]}]}.
{function,
    {3202,1},
    verify_live,2,
    [{clause,
         {3202,1},
         [{var,{3202,1},'_'},{var,{3202,1},'_'}],
         [[{call,
               {3202,1},
               {remote,
                   {3202,1},
                   {atom,{3202,1},fake},
                   {atom,{3202,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3202,1592},{atom,{3202,1},ignore}]},
     {clause,
         {3202,1},
         [{integer,{3202,13},0},{var,{3202,16},'_Vst'}],
         [],
         [{debug_line,3203,1593},{atom,{3203,5},ok}]},
     {clause,
         {3204,1},
         [{var,{3204,13},'Live'},{var,{3204,19},'Vst'}],
         [[{call,
               {3204,29},
               {remote,
                   {3204,29},
                   {atom,{3204,29},erlang},
                   {atom,{3204,29},is_integer}},
               [{var,{3204,40},'Live'}]},
           {op,{3204,49},'<',{integer,{3204,47},0},{var,{3204,51},'Live'}},
           {op,{3204,62},
               '=<',
               {var,{3204,57},'Live'},
               {integer,{3204,65},1023}}]],
         [{debug_line,3205,1594},
          {call,
              {3205,5},
              {atom,{3205,5},verify_live_1},
              [{block,0,
                   [{op,{3205,24},
                        '-',
                        {var,{3205,19},'Live'},
                        {integer,{3205,26},1}}]},
               {var,{3205,29},'Vst'}]}]},
     {clause,
         {3206,1},
         [{var,{3206,13},'Live'},{var,{3206,19},'_Vst'}],
         [],
         [{debug_line,3207,1595},
          {call,
              {3207,5},
              {atom,{3207,5},error},
              [{block,0,
                   [{tuple,
                        {3207,11},
                        [{atom,{3207,12},bad_number_of_live_regs},
                         {var,{3207,36},'Live'}]}]}]}]}]}.
{function,
    {3209,1},
    verify_live_1,2,
    [{clause,
         {3209,1},
         [{var,{3209,1},'_'},{var,{3209,1},'_'}],
         [[{call,
               {3209,1},
               {remote,
                   {3209,1},
                   {atom,{3209,1},fake},
                   {atom,{3209,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3209,1596},{atom,{3209,1},ignore}]},
     {clause,
         {3209,1},
         [{op,{3209,15},'-',{integer,{3209,16},1}},{var,{3209,19},'_'}],
         [],
         [{debug_line,3210,1597},{atom,{3210,5},ok}]},
     {clause,
         {3211,1},
         [{var,{3211,15},'X'},{var,{3211,18},'Vst'}],
         [[{call,
               {3211,28},
               {remote,
                   {3211,28},
                   {atom,{3211,28},erlang},
                   {atom,{3211,28},is_integer}},
               [{var,{3211,39},'X'}]}]],
         [{debug_line,3212,1598},
          {match,
              {3212,5},
              {var,{3212,5},'Reg'},
              {tuple,{3212,11},[{atom,{3212,12},x},{var,{3212,15},'X'}]}},
          {debug_line,3213,1599},
          {'case',
              {3213,5},
              {call,
                  {3213,10},
                  {atom,{3213,10},get_raw_type},
                  [{var,{3213,23},'Reg'},{var,{3213,28},'Vst'}]},
              [{clause,
                   {3214,9},
                   [{atom,{3214,9},uninitialized}],
                   [],
                   [{debug_line,3214,1600},
                    {call,
                        {3214,26},
                        {atom,{3214,26},error},
                        [{block,0,
                             [{tuple,
                                  {3214,32},
                                  [{var,{3214,33},'Reg'},
                                   {atom,{3214,38},not_live}]}]}]}]},
               {clause,
                   {3215,9},
                   [{var,{3215,9},'_'}],
                   [],
                   [{debug_line,3215,1601},
                    {call,
                        {3215,14},
                        {atom,{3215,14},verify_live_1},
                        [{block,0,
                             [{op,{3215,30},
                                  '-',
                                  {var,{3215,28},'X'},
                                  {integer,{3215,32},1}}]},
                         {var,{3215,35},'Vst'}]}]}]}]}]}.
{function,
 {3218,1},
 verify_no_ct,1,
 [{clause,
   {3218,1},
   [{var,{3218,1},'_'}],
   [[{call,
      {3218,1},
      {remote,{3218,1},{atom,{3218,1},fake},{atom,{3218,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3218,1602},{atom,{3218,1},ignore}]},
  {clause,
   {3218,1},
   [{tuple,
     {3218,14},
     [{atom,{3218,14},vst},
      {tuple,
       {3218,27},
       [{atom,{3218,27},st},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {atom,{3218,36},none},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'},
        {var,{3218,27},'_'}]},
      {var,{3218,14},'_'},
      {var,{3218,14},'_'},
      {var,{3218,14},'_'},
      {var,{3218,14},'_'},
      {var,{3218,14},'_'}]}],
   [],
   [{debug_line,3219,1603},{atom,{3219,5},ok}]},
  {clause,
   {3220,1},
   [{tuple,
     {3220,14},
     [{atom,{3220,14},vst},
      {tuple,
       {3220,27},
       [{atom,{3220,27},st},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {tuple,{3220,36},[{atom,{3220,37},undecided},{var,{3220,47},'_'}]},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'},
        {var,{3220,27},'_'}]},
      {var,{3220,14},'_'},
      {var,{3220,14},'_'},
      {var,{3220,14},'_'},
      {var,{3220,14},'_'},
      {var,{3220,14},'_'}]}],
   [],
   [{debug_line,3221,1604},
    {call,
     {3221,5},
     {atom,{3221,5},error},
     [{atom,{3221,11},unknown_size_of_stackframe}]}]},
  {clause,
   {3222,1},
   [{match,
     {3222,14},
     {tuple,
      {3222,14},
      [{atom,{3222,14},vst},
       {var,{3222,27},'St'},
       {var,{3222,14},'_'},
       {var,{3222,14},'_'},
       {var,{3222,14},'_'},
       {var,{3222,14},'_'},
       {var,{3222,14},'_'}]},
     {var,{3222,31},'Vst'}}],
   [],
   [{debug_line,3223,1605},
    {'case',
     {3223,5},
     {call,
      {3223,10},
      {atom,{3223,10},collect_try_catch_tags},
      [{block,0,
        [{op,
          {3223,44},
          '-',
          {'case',
           {3223,33},
           {var,{3223,33},'St'},
           [{clause,
             [{generated,true},{location,{3223,33}}],
             [{tuple,
               [{generated,true},{location,{3223,33}}],
               [{atom,{3223,33},st},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},rec65},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'},
                {var,{3223,33},'_'}]}],
             [],
             [{var,{3223,33},rec65}]},
            {clause,
             [{generated,true},{location,{3223,33}}],
             [{var,{3223,33},rec65}],
             [],
             [{call,
               [{generated,true},{location,{3223,33}}],
               {remote,
                [{generated,true},{location,{3223,33}}],
                {atom,[{generated,true},{location,{3223,33}}],erlang},
                {atom,[{generated,true},{location,{3223,33}}],error}},
               [{tuple,
                 [{generated,true},{location,{3223,33}}],
                 [{atom,[{generated,true},{location,{3223,33}}],badrecord},
                  {var,{3223,33},rec65}]}]}]}]},
          {integer,{3223,46},1}}]},
       {var,{3223,49},'Vst'},
       {nil,{3223,54}}]},
     [{clause,
       {3224,9},
       [{match,
         {3224,9},
         {cons,{3224,9},{var,{3224,10},'_'},{var,{3224,12},'_'}},
         {var,{3224,15},'Bad'}}],
       [],
       [{debug_line,3224,1606},
        {call,
         {3224,22},
         {atom,{3224,22},error},
         [{block,0,
           [{tuple,
             {3224,28},
             [{atom,{3224,29},unfinished_catch_try},
              {var,{3224,50},'Bad'}]}]}]}]},
      {clause,
       {3225,9},
       [{nil,{3225,9}}],
       [],
       [{debug_line,3225,1607},{atom,{3225,15},ok}]}]}]}]}.
{function,
    {3229,1},
    collect_try_catch_tags,3,
    [{clause,
         {3229,1},
         [{var,{3229,1},'_'},{var,{3229,1},'_'},{var,{3229,1},'_'}],
         [[{call,
               {3229,1},
               {remote,
                   {3229,1},
                   {atom,{3229,1},fake},
                   {atom,{3229,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3229,1608},{atom,{3229,1},ignore}]},
     {clause,
         {3229,1},
         [{op,{3229,24},'-',{integer,{3229,25},1}},
          {var,{3229,28},'_Vst'},
          {var,{3229,34},'Acc'}],
         [],
         [{debug_line,3230,1609},{var,{3230,5},'Acc'}]},
     {clause,
         {3231,1},
         [{var,{3231,24},'Y'},{var,{3231,27},'Vst'},{var,{3231,32},'Acc0'}],
         [],
         [{debug_line,3232,1610},
          {match,
              {3232,5},
              {var,{3232,5},'Tag'},
              {call,
                  {3232,11},
                  {atom,{3232,11},get_raw_type},
                  [{block,0,
                       [{tuple,
                            {3232,24},
                            [{atom,{3232,25},y},{var,{3232,28},'Y'}]}]},
                   {var,{3232,32},'Vst'}]}},
          {debug_line,3233,1611},
          {match,
              {3233,5},
              {var,{3233,5},'Acc'},
              {'case',
                  {3233,11},
                  {call,
                      {3233,16},
                      {atom,{3233,16},is_try_catch_tag},
                      [{var,{3233,33},'Tag'}]},
                  [{clause,
                       {3234,15},
                       [{atom,{3234,15},true}],
                       [],
                       [{debug_line,3234,1612},
                        {cons,
                            {3234,23},
                            {tuple,
                                {3234,24},
                                [{tuple,
                                     {3234,25},
                                     [{atom,{3234,26},y},{var,{3234,29},'Y'}]},
                                 {var,{3234,33},'Tag'}]},
                            {var,{3234,40},'Acc0'}}]},
                   {clause,
                       {3235,15},
                       [{atom,{3235,15},false}],
                       [],
                       [{debug_line,3235,1613},{var,{3235,24},'Acc0'}]}]}},
          {debug_line,3237,1614},
          {call,
              {3237,5},
              {atom,{3237,5},collect_try_catch_tags},
              [{block,0,
                   [{op,{3237,30},
                        '-',
                        {var,{3237,28},'Y'},
                        {integer,{3237,32},1}}]},
               {var,{3237,35},'Vst'},
               {var,{3237,40},'Acc'}]}]}]}.
{function,{3239,1},
          is_try_catch_tag,1,
          [{clause,{3239,1},
                   [{var,{3239,1},'_'}],
                   [[{call,{3239,1},
                           {remote,{3239,1},
                                   {atom,{3239,1},fake},
                                   {atom,{3239,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3239,1615},{atom,{3239,1},ignore}]},
           {clause,{3239,1},
                   [{tuple,{3239,18},
                           [{atom,{3239,19},catchtag},{var,{3239,28},'_'}]}],
                   [],
                   [{debug_line,3239,1616},{atom,{3239,35},true}]},
           {clause,{3240,1},
                   [{tuple,{3240,18},
                           [{atom,{3240,19},trytag},{var,{3240,26},'_'}]}],
                   [],
                   [{debug_line,3240,1617},{atom,{3240,33},true}]},
           {clause,{3241,1},
                   [{var,{3241,18},'_'}],
                   [],
                   [{debug_line,3241,1618},{atom,{3241,24},false}]}]}.
{function,
 {3243,1},
 eat_heap,2,
 [{clause,
   {3243,1},
   [{var,{3243,1},'_'},{var,{3243,1},'_'}],
   [[{call,
      {3243,1},
      {remote,{3243,1},{atom,{3243,1},fake},{atom,{3243,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3243,1619},{atom,{3243,1},ignore}]},
  {clause,
   {3243,1},
   [{var,{3243,10},'N'},
    {match,
     {3243,13},
     {tuple,
      {3243,13},
      [{atom,{3243,13},vst},
       {match,
        {3243,26},
        {tuple,
         {3243,26},
         [{atom,{3243,26},st},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,32},'Heap0'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'},
          {var,{3243,26},'_'}]},
        {var,{3243,39},'St'}},
       {var,{3243,13},'_'},
       {var,{3243,13},'_'},
       {var,{3243,13},'_'},
       {var,{3243,13},'_'},
       {var,{3243,13},'_'}]},
     {var,{3243,43},'Vst'}}],
   [],
   [{debug_line,3244,1620},
    {'case',
     {3244,5},
     {op,{3244,15},'-',{var,{3244,10},'Heap0'},{var,{3244,16},'N'}},
     [{clause,
       {3245,2},
       [{var,{3245,2},'Neg'}],
       [[{op,{3245,15},'<',{var,{3245,11},'Neg'},{integer,{3245,17},0}}]],
       [{debug_line,3246,1621},
        {call,
         {3246,6},
         {atom,{3246,6},error},
         [{block,0,
           [{tuple,
             {3246,12},
             [{atom,{3246,13},heap_overflow},
              {tuple,
               {3246,27},
               [{atom,{3246,28},left},{var,{3246,33},'Heap0'}]},
              {tuple,
               {3246,40},
               [{atom,{3246,41},wanted},{var,{3246,48},'N'}]}]}]}]}]},
      {clause,
       {3247,2},
       [{var,{3247,2},'Heap'}],
       [],
       [{debug_line,3248,1622},
        {block,
         {3248,6},
         [{match,
           {3248,14},
           {var,{3248,14},rec66},
           {block,
            {3248,22},
            [{match,{3248,22},{var,{3248,22},rec68},{var,{3248,22},'St'}},
             {'case',
              {3248,28},
              {var,{3248,22},rec68},
              [{clause,
                {3248,28},
                [{tuple,
                  {3248,28},
                  [{atom,{3248,28},st},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'},
                   {var,{3248,28},'_'}]}],
                [],
                [{call,
                  {3248,28},
                  {remote,
                   {3248,28},
                   {atom,{3248,28},erlang},
                   {atom,{3248,28},setelement}},
                  [{integer,{3248,28},8},
                   {var,{3248,22},rec68},
                   {var,{3248,30},'Heap'}]}]},
               {clause,
                [{generated,true},{location,{3248,28}}],
                [{var,[{generated,true},{location,{3248,28}}],'_'}],
                [],
                [{call,
                  [{generated,true},{location,{3248,28}}],
                  {remote,
                   [{generated,true},{location,{3248,28}}],
                   {atom,[{generated,true},{location,{3248,28}}],erlang},
                   {atom,[{generated,true},{location,{3248,28}}],error}},
                  [{tuple,
                    [{generated,true},{location,{3248,28}}],
                    [{atom,[{generated,true},{location,{3248,28}}],badrecord},
                     {var,{3248,22},rec68}]}]}]}]}]}},
          {match,{3248,6},{var,{3248,6},rec67},{var,{3248,6},'Vst'}},
          {'case',
           {3248,14},
           {var,{3248,6},rec67},
           [{clause,
             {3248,14},
             [{tuple,
               {3248,14},
               [{atom,{3248,14},vst},
                {var,{3248,14},'_'},
                {var,{3248,14},'_'},
                {var,{3248,14},'_'},
                {var,{3248,14},'_'},
                {var,{3248,14},'_'},
                {var,{3248,14},'_'}]}],
             [],
             [{call,
               {3248,14},
               {remote,
                {3248,14},
                {atom,{3248,14},erlang},
                {atom,{3248,14},setelement}},
               [{integer,{3248,14},2},
                {var,{3248,6},rec67},
                {var,{3248,14},rec66}]}]},
            {clause,
             [{generated,true},{location,{3248,14}}],
             [{var,[{generated,true},{location,{3248,14}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{3248,14}}],
               {remote,
                [{generated,true},{location,{3248,14}}],
                {atom,[{generated,true},{location,{3248,14}}],erlang},
                {atom,[{generated,true},{location,{3248,14}}],error}},
               [{tuple,
                 [{generated,true},{location,{3248,14}}],
                 [{atom,[{generated,true},{location,{3248,14}}],badrecord},
                  {var,{3248,6},rec67}]}]}]}]}]}]}]}]}]}.
{function,
 {3251,1},
 eat_heap_fun,1,
 [{clause,
   {3251,1},
   [{var,{3251,1},'_'}],
   [[{call,
      {3251,1},
      {remote,{3251,1},{atom,{3251,1},fake},{atom,{3251,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3251,1623},{atom,{3251,1},ignore}]},
  {clause,
   {3251,1},
   [{match,
     {3251,14},
     {tuple,
      {3251,14},
      [{atom,{3251,14},vst},
       {match,
        {3251,27},
        {tuple,
         {3251,27},
         [{atom,{3251,27},st},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,34},'HeapFuns0'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'},
          {var,{3251,27},'_'}]},
        {var,{3251,45},'St'}},
       {var,{3251,14},'_'},
       {var,{3251,14},'_'},
       {var,{3251,14},'_'},
       {var,{3251,14},'_'},
       {var,{3251,14},'_'}]},
     {var,{3251,49},'Vst'}}],
   [],
   [{debug_line,3252,1624},
    {'case',
     {3252,5},
     {op,{3252,19},'-',{var,{3252,10},'HeapFuns0'},{integer,{3252,20},1}},
     [{clause,
       {3253,2},
       [{var,{3253,2},'Neg'}],
       [[{op,{3253,15},'<',{var,{3253,11},'Neg'},{integer,{3253,17},0}}]],
       [{debug_line,3254,1625},
        {call,
         {3254,6},
         {atom,{3254,6},error},
         [{block,0,
           [{tuple,
             {3254,12},
             [{atom,{3254,13},heap_overflow},
              {tuple,
               {3254,27},
               [{atom,{3254,28},left},
                {tuple,
                 {3254,33},
                 [{var,{3254,34},'HeapFuns0'},{atom,{3254,44},funs}]}]},
              {tuple,
               {3254,51},
               [{atom,{3254,52},wanted},
                {tuple,
                 {3254,59},
                 [{integer,{3254,60},1},{atom,{3254,62},funs}]}]}]}]}]}]},
      {clause,
       {3255,2},
       [{var,{3255,2},'HeapFuns'}],
       [],
       [{debug_line,3256,1626},
        {block,
         {3256,6},
         [{match,
           {3256,14},
           {var,{3256,14},rec69},
           {block,
            {3256,22},
            [{match,{3256,22},{var,{3256,22},rec71},{var,{3256,22},'St'}},
             {'case',
              {3256,28},
              {var,{3256,22},rec71},
              [{clause,
                {3256,28},
                [{tuple,
                  {3256,28},
                  [{atom,{3256,28},st},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'},
                   {var,{3256,28},'_'}]}],
                [],
                [{call,
                  {3256,28},
                  {remote,
                   {3256,28},
                   {atom,{3256,28},erlang},
                   {atom,{3256,28},setelement}},
                  [{integer,{3256,28},9},
                   {var,{3256,22},rec71},
                   {var,{3256,31},'HeapFuns'}]}]},
               {clause,
                [{generated,true},{location,{3256,28}}],
                [{var,[{generated,true},{location,{3256,28}}],'_'}],
                [],
                [{call,
                  [{generated,true},{location,{3256,28}}],
                  {remote,
                   [{generated,true},{location,{3256,28}}],
                   {atom,[{generated,true},{location,{3256,28}}],erlang},
                   {atom,[{generated,true},{location,{3256,28}}],error}},
                  [{tuple,
                    [{generated,true},{location,{3256,28}}],
                    [{atom,[{generated,true},{location,{3256,28}}],badrecord},
                     {var,{3256,22},rec71}]}]}]}]}]}},
          {match,{3256,6},{var,{3256,6},rec70},{var,{3256,6},'Vst'}},
          {'case',
           {3256,14},
           {var,{3256,6},rec70},
           [{clause,
             {3256,14},
             [{tuple,
               {3256,14},
               [{atom,{3256,14},vst},
                {var,{3256,14},'_'},
                {var,{3256,14},'_'},
                {var,{3256,14},'_'},
                {var,{3256,14},'_'},
                {var,{3256,14},'_'},
                {var,{3256,14},'_'}]}],
             [],
             [{call,
               {3256,14},
               {remote,
                {3256,14},
                {atom,{3256,14},erlang},
                {atom,{3256,14},setelement}},
               [{integer,{3256,14},2},
                {var,{3256,6},rec70},
                {var,{3256,14},rec69}]}]},
            {clause,
             [{generated,true},{location,{3256,14}}],
             [{var,[{generated,true},{location,{3256,14}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{3256,14}}],
               {remote,
                [{generated,true},{location,{3256,14}}],
                {atom,[{generated,true},{location,{3256,14}}],erlang},
                {atom,[{generated,true},{location,{3256,14}}],error}},
               [{tuple,
                 [{generated,true},{location,{3256,14}}],
                 [{atom,[{generated,true},{location,{3256,14}}],badrecord},
                  {var,{3256,6},rec70}]}]}]}]}]}]}]}]}]}.
{function,
 {3259,1},
 eat_heap_float,1,
 [{clause,
   {3259,1},
   [{var,{3259,1},'_'}],
   [[{call,
      {3259,1},
      {remote,{3259,1},{atom,{3259,1},fake},{atom,{3259,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3259,1627},{atom,{3259,1},ignore}]},
  {clause,
   {3259,1},
   [{match,
     {3259,16},
     {tuple,
      {3259,16},
      [{atom,{3259,16},vst},
       {match,
        {3259,29},
        {tuple,
         {3259,29},
         [{atom,{3259,29},st},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,36},'HeapFloats0'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'},
          {var,{3259,29},'_'}]},
        {var,{3259,49},'St'}},
       {var,{3259,16},'_'},
       {var,{3259,16},'_'},
       {var,{3259,16},'_'},
       {var,{3259,16},'_'},
       {var,{3259,16},'_'}]},
     {var,{3259,53},'Vst'}}],
   [],
   [{debug_line,3260,1628},
    {'case',
     {3260,5},
     {op,{3260,21},'-',{var,{3260,10},'HeapFloats0'},{integer,{3260,22},1}},
     [{clause,
       {3261,2},
       [{var,{3261,2},'Neg'}],
       [[{op,{3261,15},'<',{var,{3261,11},'Neg'},{integer,{3261,17},0}}]],
       [{debug_line,3262,1629},
        {call,
         {3262,6},
         {atom,{3262,6},error},
         [{block,0,
           [{tuple,
             {3262,12},
             [{atom,{3262,13},heap_overflow},
              {tuple,
               {3262,27},
               [{atom,{3262,28},left},
                {tuple,
                 {3262,33},
                 [{var,{3262,34},'HeapFloats0'},{atom,{3262,46},floats}]}]},
              {tuple,
               {3262,55},
               [{atom,{3262,56},wanted},
                {tuple,
                 {3262,63},
                 [{integer,{3262,64},1},{atom,{3262,66},floats}]}]}]}]}]}]},
      {clause,
       {3263,2},
       [{var,{3263,2},'HeapFloats'}],
       [],
       [{debug_line,3264,1630},
        {block,
         {3264,6},
         [{match,
           {3264,14},
           {var,{3264,14},rec72},
           {block,
            {3264,22},
            [{match,{3264,22},{var,{3264,22},rec74},{var,{3264,22},'St'}},
             {'case',
              {3264,28},
              {var,{3264,22},rec74},
              [{clause,
                {3264,28},
                [{tuple,
                  {3264,28},
                  [{atom,{3264,28},st},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'},
                   {var,{3264,28},'_'}]}],
                [],
                [{call,
                  {3264,28},
                  {remote,
                   {3264,28},
                   {atom,{3264,28},erlang},
                   {atom,{3264,28},setelement}},
                  [{integer,{3264,28},10},
                   {var,{3264,22},rec74},
                   {var,{3264,31},'HeapFloats'}]}]},
               {clause,
                [{generated,true},{location,{3264,28}}],
                [{var,[{generated,true},{location,{3264,28}}],'_'}],
                [],
                [{call,
                  [{generated,true},{location,{3264,28}}],
                  {remote,
                   [{generated,true},{location,{3264,28}}],
                   {atom,[{generated,true},{location,{3264,28}}],erlang},
                   {atom,[{generated,true},{location,{3264,28}}],error}},
                  [{tuple,
                    [{generated,true},{location,{3264,28}}],
                    [{atom,[{generated,true},{location,{3264,28}}],badrecord},
                     {var,{3264,22},rec74}]}]}]}]}]}},
          {match,{3264,6},{var,{3264,6},rec73},{var,{3264,6},'Vst'}},
          {'case',
           {3264,14},
           {var,{3264,6},rec73},
           [{clause,
             {3264,14},
             [{tuple,
               {3264,14},
               [{atom,{3264,14},vst},
                {var,{3264,14},'_'},
                {var,{3264,14},'_'},
                {var,{3264,14},'_'},
                {var,{3264,14},'_'},
                {var,{3264,14},'_'},
                {var,{3264,14},'_'}]}],
             [],
             [{call,
               {3264,14},
               {remote,
                {3264,14},
                {atom,{3264,14},erlang},
                {atom,{3264,14},setelement}},
               [{integer,{3264,14},2},
                {var,{3264,6},rec73},
                {var,{3264,14},rec72}]}]},
            {clause,
             [{generated,true},{location,{3264,14}}],
             [{var,[{generated,true},{location,{3264,14}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{3264,14}}],
               {remote,
                [{generated,true},{location,{3264,14}}],
                {atom,[{generated,true},{location,{3264,14}}],erlang},
                {atom,[{generated,true},{location,{3264,14}}],error}},
               [{tuple,
                 [{generated,true},{location,{3264,14}}],
                 [{atom,[{generated,true},{location,{3264,14}}],badrecord},
                  {var,{3264,6},rec73}]}]}]}]}]}]}]}]}]}.
{function,
 {3281,1},
 update_receive_state,2,
 [{clause,
   {3281,1},
   [{var,{3281,1},'_'},{var,{3281,1},'_'}],
   [[{call,
      {3281,1},
      {remote,{3281,1},{atom,{3281,1},fake},{atom,{3281,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3281,1631},{atom,{3281,1},ignore}]},
  {clause,
   {3281,1},
   [{var,{3281,22},'New0'},
    {match,
     {3281,28},
     {tuple,
      {3281,28},
      [{atom,{3281,28},vst},
       {var,{3281,41},'St0'},
       {var,{3281,28},'_'},
       {var,{3281,28},'_'},
       {var,{3281,28},'_'},
       {var,{3281,28},'_'},
       {var,{3281,28},'_'}]},
     {var,{3281,46},'Vst'}}],
   [],
   [{debug_line,3282,1632},
    {match,
     {3282,5},
     {tuple,
      {3282,5},
      [{atom,{3282,5},st},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,5},'_'},
       {var,{3282,20},'Current'},
       {var,{3282,5},'_'}]},
     {var,{3282,31},'St0'}},
    {debug_line,3283,1633},
    {match,
     {3283,5},
     {var,{3283,5},'New'},
     {'case',
      {3283,11},
      {tuple,{3283,16},[{var,{3283,17},'Current'},{var,{3283,26},'New0'}]},
      [{clause,
        {3284,15},
        [{tuple,
          {3284,15},
          [{atom,{3284,16},none},{atom,{3284,22},marked_position}]}],
        [],
        [{debug_line,3285,1634},{atom,{3285,19},marked_position}]},
       {clause,
        {3286,15},
        [{tuple,
          {3286,15},
          [{atom,{3286,16},marked_position},{atom,{3286,33},entered_loop}]}],
        [],
        [{debug_line,3287,1635},{atom,{3287,19},entered_loop}]},
       {clause,
        {3288,15},
        [{tuple,
          {3288,15},
          [{atom,{3288,16},none},{atom,{3288,22},entered_loop}]}],
        [],
        [{debug_line,3289,1636},{atom,{3289,19},entered_loop}]},
       {clause,
        {3290,15},
        [{tuple,{3290,15},[{var,{3290,16},'_'},{atom,{3290,19},none}]}],
        [],
        [{debug_line,3291,1637},{atom,{3291,19},none}]},
       {clause,
        {3292,15},
        [{tuple,{3292,15},[{var,{3292,16},'_'},{var,{3292,19},'_'}]}],
        [],
        [{debug_line,3293,1638},
         {call,
          {3293,19},
          {atom,{3293,19},error},
          [{block,0,
            [{tuple,
              {3293,25},
              [{atom,{3293,26},invalid_receive_state_change},
               {var,{3293,56},'Current'},
               {var,{3293,65},'New0'}]}]}]}]}]}},
    {debug_line,3295,1639},
    {match,
     {3295,5},
     {var,{3295,5},'St'},
     {block,
      {3295,10},
      [{match,{3295,10},{var,{3295,10},rec75},{var,{3295,10},'St0'}},
       {'case',
        {3295,17},
        {var,{3295,10},rec75},
        [{clause,
          {3295,17},
          [{tuple,
            {3295,17},
            [{atom,{3295,17},st},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'},
             {var,{3295,17},'_'}]}],
          [],
          [{call,
            {3295,17},
            {remote,
             {3295,17},
             {atom,{3295,17},erlang},
             {atom,{3295,17},setelement}},
            [{integer,{3295,17},14},
             {var,{3295,10},rec75},
             {var,{3295,28},'New'}]}]},
         {clause,
          [{generated,true},{location,{3295,17}}],
          [{var,[{generated,true},{location,{3295,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3295,17}}],
            {remote,
             [{generated,true},{location,{3295,17}}],
             {atom,[{generated,true},{location,{3295,17}}],erlang},
             {atom,[{generated,true},{location,{3295,17}}],error}},
            [{tuple,
              [{generated,true},{location,{3295,17}}],
              [{atom,[{generated,true},{location,{3295,17}}],badrecord},
               {var,{3295,10},rec75}]}]}]}]}]}},
    {debug_line,3296,1640},
    {block,
     {3296,5},
     [{match,{3296,5},{var,{3296,5},rec76},{var,{3296,5},'Vst'}},
      {'case',
       {3296,13},
       {var,{3296,5},rec76},
       [{clause,
         {3296,13},
         [{tuple,
           {3296,13},
           [{atom,{3296,13},vst},
            {var,{3296,13},'_'},
            {var,{3296,13},'_'},
            {var,{3296,13},'_'},
            {var,{3296,13},'_'},
            {var,{3296,13},'_'},
            {var,{3296,13},'_'}]}],
         [],
         [{call,
           {3296,13},
           {remote,
            {3296,13},
            {atom,{3296,13},erlang},
            {atom,{3296,13},setelement}},
           [{integer,{3296,13},2},
            {var,{3296,5},rec76},
            {var,{3296,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{3296,13}}],
         [{var,[{generated,true},{location,{3296,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{3296,13}}],
           {remote,
            [{generated,true},{location,{3296,13}}],
            {atom,[{generated,true},{location,{3296,13}}],erlang},
            {atom,[{generated,true},{location,{3296,13}}],error}},
           [{tuple,
             [{generated,true},{location,{3296,13}}],
             [{atom,[{generated,true},{location,{3296,13}}],badrecord},
              {var,{3296,5},rec76}]}]}]}]}]}]}]}.
{function,
 {3307,1},
 mark_fragile,2,
 [{clause,
   {3307,1},
   [{var,{3307,1},'_'},{var,{3307,1},'_'}],
   [[{call,
      {3307,1},
      {remote,{3307,1},{atom,{3307,1},fake},{atom,{3307,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3307,1641},{atom,{3307,1},ignore}]},
  {clause,
   {3307,1},
   [{var,{3307,14},'Reg'},{var,{3307,19},'Vst'}],
   [],
   [{debug_line,3308,1642},
    {match,
     {3308,5},
     {tuple,
      {3308,5},
      [{atom,{3308,5},vst},
       {match,
        {3308,18},
        {tuple,
         {3308,18},
         [{atom,{3308,18},st},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,30},'Fragile0'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'},
          {var,{3308,18},'_'}]},
        {var,{3308,40},'St0'}},
       {var,{3308,5},'_'},
       {var,{3308,5},'_'},
       {var,{3308,5},'_'},
       {var,{3308,5},'_'},
       {var,{3308,5},'_'}]},
     {var,{3308,47},'Vst'}},
    {debug_line,3309,1643},
    {match,
     {3309,5},
     {var,{3309,5},'Fragile'},
     {call,
      {3309,15},
      {remote,{3309,19},{atom,{3309,15},sets},{atom,{3309,20},add_element}},
      [{var,{3309,32},'Reg'},{var,{3309,37},'Fragile0'}]}},
    {debug_line,3310,1644},
    {match,
     {3310,5},
     {var,{3310,5},'St'},
     {block,
      {3310,10},
      [{match,{3310,10},{var,{3310,10},rec77},{var,{3310,10},'St0'}},
       {'case',
        {3310,17},
        {var,{3310,10},rec77},
        [{clause,
          {3310,17},
          [{tuple,
            {3310,17},
            [{atom,{3310,17},st},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'},
             {var,{3310,17},'_'}]}],
          [],
          [{call,
            {3310,17},
            {remote,
             {3310,17},
             {atom,{3310,17},erlang},
             {atom,{3310,17},setelement}},
            [{integer,{3310,17},6},
             {var,{3310,10},rec77},
             {var,{3310,25},'Fragile'}]}]},
         {clause,
          [{generated,true},{location,{3310,17}}],
          [{var,[{generated,true},{location,{3310,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3310,17}}],
            {remote,
             [{generated,true},{location,{3310,17}}],
             {atom,[{generated,true},{location,{3310,17}}],erlang},
             {atom,[{generated,true},{location,{3310,17}}],error}},
            [{tuple,
              [{generated,true},{location,{3310,17}}],
              [{atom,[{generated,true},{location,{3310,17}}],badrecord},
               {var,{3310,10},rec77}]}]}]}]}]}},
    {debug_line,3311,1645},
    {block,
     {3311,5},
     [{match,{3311,5},{var,{3311,5},rec78},{var,{3311,5},'Vst'}},
      {'case',
       {3311,13},
       {var,{3311,5},rec78},
       [{clause,
         {3311,13},
         [{tuple,
           {3311,13},
           [{atom,{3311,13},vst},
            {var,{3311,13},'_'},
            {var,{3311,13},'_'},
            {var,{3311,13},'_'},
            {var,{3311,13},'_'},
            {var,{3311,13},'_'},
            {var,{3311,13},'_'}]}],
         [],
         [{call,
           {3311,13},
           {remote,
            {3311,13},
            {atom,{3311,13},erlang},
            {atom,{3311,13},setelement}},
           [{integer,{3311,13},2},
            {var,{3311,5},rec78},
            {var,{3311,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{3311,13}}],
         [{var,[{generated,true},{location,{3311,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{3311,13}}],
           {remote,
            [{generated,true},{location,{3311,13}}],
            {atom,[{generated,true},{location,{3311,13}}],erlang},
            {atom,[{generated,true},{location,{3311,13}}],error}},
           [{tuple,
             [{generated,true},{location,{3311,13}}],
             [{atom,[{generated,true},{location,{3311,13}}],badrecord},
              {var,{3311,5},rec78}]}]}]}]}]}]}]}.
{function,
 {3313,1},
 propagate_fragility,3,
 [{clause,
   {3313,1},
   [{var,{3313,1},'_'},{var,{3313,1},'_'},{var,{3313,1},'_'}],
   [[{call,
      {3313,1},
      {remote,{3313,1},{atom,{3313,1},fake},{atom,{3313,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3313,1646},{atom,{3313,1},ignore}]},
  {clause,
   {3313,1},
   [{var,{3313,21},'Reg'},
    {var,{3313,26},'Args'},
    {match,
     {3313,32},
     {tuple,
      {3313,32},
      [{atom,{3313,32},vst},
       {var,{3313,45},'St0'},
       {var,{3313,32},'_'},
       {var,{3313,32},'_'},
       {var,{3313,32},'_'},
       {var,{3313,32},'_'},
       {var,{3313,32},'_'}]},
     {var,{3313,50},'Vst'}}],
   [],
   [{debug_line,3314,1647},
    {match,
     {3314,5},
     {tuple,
      {3314,5},
      [{atom,{3314,5},st},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,17},'Fragile0'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'},
       {var,{3314,5},'_'}]},
     {var,{3314,29},'St0'}},
    {debug_line,3316,1648},
    {match,
     {3316,5},
     {var,{3316,5},'Sources'},
     {call,
      {3316,15},
      {remote,{3316,19},{atom,{3316,15},sets},{atom,{3316,20},from_list}},
      [{var,{3316,30},'Args'}]}},
    {debug_line,3317,1649},
    {match,
     {3317,5},
     {var,{3317,5},'Fragile'},
     {'case',
      {3317,15},
      {call,
       {3317,20},
       {remote,{3317,24},{atom,{3317,20},sets},{atom,{3317,25},is_disjoint}},
       [{var,{3317,37},'Sources'},{var,{3317,46},'Fragile0'}]},
      [{clause,
        {3318,19},
        [{atom,{3318,19},true}],
        [],
        [{debug_line,3318,1650},
         {call,
          {3318,27},
          {remote,
           {3318,31},
           {atom,{3318,27},sets},
           {atom,{3318,32},del_element}},
          [{var,{3318,44},'Reg'},{var,{3318,49},'Fragile0'}]}]},
       {clause,
        {3319,19},
        [{atom,{3319,19},false}],
        [],
        [{debug_line,3319,1651},
         {call,
          {3319,28},
          {remote,
           {3319,32},
           {atom,{3319,28},sets},
           {atom,{3319,33},add_element}},
          [{var,{3319,45},'Reg'},{var,{3319,50},'Fragile0'}]}]}]}},
    {debug_line,3322,1652},
    {match,
     {3322,5},
     {var,{3322,5},'St'},
     {block,
      {3322,10},
      [{match,{3322,10},{var,{3322,10},rec79},{var,{3322,10},'St0'}},
       {'case',
        {3322,17},
        {var,{3322,10},rec79},
        [{clause,
          {3322,17},
          [{tuple,
            {3322,17},
            [{atom,{3322,17},st},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'},
             {var,{3322,17},'_'}]}],
          [],
          [{call,
            {3322,17},
            {remote,
             {3322,17},
             {atom,{3322,17},erlang},
             {atom,{3322,17},setelement}},
            [{integer,{3322,17},6},
             {var,{3322,10},rec79},
             {var,{3322,25},'Fragile'}]}]},
         {clause,
          [{generated,true},{location,{3322,17}}],
          [{var,[{generated,true},{location,{3322,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3322,17}}],
            {remote,
             [{generated,true},{location,{3322,17}}],
             {atom,[{generated,true},{location,{3322,17}}],erlang},
             {atom,[{generated,true},{location,{3322,17}}],error}},
            [{tuple,
              [{generated,true},{location,{3322,17}}],
              [{atom,[{generated,true},{location,{3322,17}}],badrecord},
               {var,{3322,10},rec79}]}]}]}]}]}},
    {debug_line,3323,1653},
    {block,
     {3323,5},
     [{match,{3323,5},{var,{3323,5},rec80},{var,{3323,5},'Vst'}},
      {'case',
       {3323,13},
       {var,{3323,5},rec80},
       [{clause,
         {3323,13},
         [{tuple,
           {3323,13},
           [{atom,{3323,13},vst},
            {var,{3323,13},'_'},
            {var,{3323,13},'_'},
            {var,{3323,13},'_'},
            {var,{3323,13},'_'},
            {var,{3323,13},'_'},
            {var,{3323,13},'_'}]}],
         [],
         [{call,
           {3323,13},
           {remote,
            {3323,13},
            {atom,{3323,13},erlang},
            {atom,{3323,13},setelement}},
           [{integer,{3323,13},2},
            {var,{3323,5},rec80},
            {var,{3323,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{3323,13}}],
         [{var,[{generated,true},{location,{3323,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{3323,13}}],
           {remote,
            [{generated,true},{location,{3323,13}}],
            {atom,[{generated,true},{location,{3323,13}}],erlang},
            {atom,[{generated,true},{location,{3323,13}}],error}},
           [{tuple,
             [{generated,true},{location,{3323,13}}],
             [{atom,[{generated,true},{location,{3323,13}}],badrecord},
              {var,{3323,5},rec80}]}]}]}]}]}]}]}.
{function,
 {3327,1},
 remove_fragility,2,
 [{clause,
   {3327,1},
   [{var,{3327,1},'_'},{var,{3327,1},'_'}],
   [[{call,
      {3327,1},
      {remote,{3327,1},{atom,{3327,1},fake},{atom,{3327,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3327,1654},{atom,{3327,1},ignore}]},
  {clause,
   {3327,1},
   [{var,{3327,18},'Reg'},{var,{3327,23},'Vst'}],
   [],
   [{debug_line,3328,1655},
    {match,
     {3328,5},
     {tuple,
      {3328,5},
      [{atom,{3328,5},vst},
       {match,
        {3328,18},
        {tuple,
         {3328,18},
         [{atom,{3328,18},st},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,30},'Fragile0'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'},
          {var,{3328,18},'_'}]},
        {var,{3328,40},'St0'}},
       {var,{3328,5},'_'},
       {var,{3328,5},'_'},
       {var,{3328,5},'_'},
       {var,{3328,5},'_'},
       {var,{3328,5},'_'}]},
     {var,{3328,47},'Vst'}},
    {debug_line,3329,1656},
    {'case',
     {3329,5},
     {call,
      {3329,10},
      {remote,{3329,14},{atom,{3329,10},sets},{atom,{3329,15},is_element}},
      [{var,{3329,26},'Reg'},{var,{3329,31},'Fragile0'}]},
     [{clause,
       {3330,9},
       [{atom,{3330,9},true}],
       [],
       [{debug_line,3331,1657},
        {match,
         {3331,13},
         {var,{3331,13},'Fragile'},
         {call,
          {3331,23},
          {remote,
           {3331,27},
           {atom,{3331,23},sets},
           {atom,{3331,28},del_element}},
          [{var,{3331,40},'Reg'},{var,{3331,45},'Fragile0'}]}},
        {debug_line,3332,1658},
        {match,
         {3332,13},
         {var,{3332,13},'St'},
         {block,
          {3332,18},
          [{match,{3332,18},{var,{3332,18},rec81},{var,{3332,18},'St0'}},
           {'case',
            {3332,25},
            {var,{3332,18},rec81},
            [{clause,
              {3332,25},
              [{tuple,
                {3332,25},
                [{atom,{3332,25},st},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'},
                 {var,{3332,25},'_'}]}],
              [],
              [{call,
                {3332,25},
                {remote,
                 {3332,25},
                 {atom,{3332,25},erlang},
                 {atom,{3332,25},setelement}},
                [{integer,{3332,25},6},
                 {var,{3332,18},rec81},
                 {var,{3332,33},'Fragile'}]}]},
             {clause,
              [{generated,true},{location,{3332,25}}],
              [{var,[{generated,true},{location,{3332,25}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{3332,25}}],
                {remote,
                 [{generated,true},{location,{3332,25}}],
                 {atom,[{generated,true},{location,{3332,25}}],erlang},
                 {atom,[{generated,true},{location,{3332,25}}],error}},
                [{tuple,
                  [{generated,true},{location,{3332,25}}],
                  [{atom,[{generated,true},{location,{3332,25}}],badrecord},
                   {var,{3332,18},rec81}]}]}]}]}]}},
        {debug_line,3333,1659},
        {block,
         {3333,13},
         [{match,{3333,13},{var,{3333,13},rec82},{var,{3333,13},'Vst'}},
          {'case',
           {3333,21},
           {var,{3333,13},rec82},
           [{clause,
             {3333,21},
             [{tuple,
               {3333,21},
               [{atom,{3333,21},vst},
                {var,{3333,21},'_'},
                {var,{3333,21},'_'},
                {var,{3333,21},'_'},
                {var,{3333,21},'_'},
                {var,{3333,21},'_'},
                {var,{3333,21},'_'}]}],
             [],
             [{call,
               {3333,21},
               {remote,
                {3333,21},
                {atom,{3333,21},erlang},
                {atom,{3333,21},setelement}},
               [{integer,{3333,21},2},
                {var,{3333,13},rec82},
                {var,{3333,29},'St'}]}]},
            {clause,
             [{generated,true},{location,{3333,21}}],
             [{var,[{generated,true},{location,{3333,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{3333,21}}],
               {remote,
                [{generated,true},{location,{3333,21}}],
                {atom,[{generated,true},{location,{3333,21}}],erlang},
                {atom,[{generated,true},{location,{3333,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{3333,21}}],
                 [{atom,[{generated,true},{location,{3333,21}}],badrecord},
                  {var,{3333,13},rec82}]}]}]}]}]}]},
      {clause,
       {3334,9},
       [{atom,{3334,9},false}],
       [],
       [{debug_line,3335,1660},{var,{3335,13},'Vst'}]}]}]}]}.
{function,
 {3339,1},
 remove_fragility,1,
 [{clause,
   {3339,1},
   [{var,{3339,1},'_'}],
   [[{call,
      {3339,1},
      {remote,{3339,1},{atom,{3339,1},fake},{atom,{3339,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3339,1661},{atom,{3339,1},ignore}]},
  {clause,
   {3339,1},
   [{match,
     {3339,18},
     {tuple,
      {3339,18},
      [{atom,{3339,18},vst},
       {var,{3339,31},'St0'},
       {var,{3339,18},'_'},
       {var,{3339,18},'_'},
       {var,{3339,18},'_'},
       {var,{3339,18},'_'},
       {var,{3339,18},'_'}]},
     {var,{3339,36},'Vst'}}],
   [],
   [{debug_line,3340,1662},
    {match,
     {3340,5},
     {var,{3340,5},'St'},
     {block,
      {3340,10},
      [{match,
        {3340,17},
        {var,{3340,17},rec83},
        {call,
         {3340,25},
         {remote,{3340,29},{atom,{3340,25},sets},{atom,{3340,30},new}},
         []}},
       {match,{3340,10},{var,{3340,10},rec84},{var,{3340,10},'St0'}},
       {'case',
        {3340,17},
        {var,{3340,10},rec84},
        [{clause,
          {3340,17},
          [{tuple,
            {3340,17},
            [{atom,{3340,17},st},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'},
             {var,{3340,17},'_'}]}],
          [],
          [{call,
            {3340,17},
            {remote,
             {3340,17},
             {atom,{3340,17},erlang},
             {atom,{3340,17},setelement}},
            [{integer,{3340,17},6},
             {var,{3340,10},rec84},
             {var,{3340,17},rec83}]}]},
         {clause,
          [{generated,true},{location,{3340,17}}],
          [{var,[{generated,true},{location,{3340,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3340,17}}],
            {remote,
             [{generated,true},{location,{3340,17}}],
             {atom,[{generated,true},{location,{3340,17}}],erlang},
             {atom,[{generated,true},{location,{3340,17}}],error}},
            [{tuple,
              [{generated,true},{location,{3340,17}}],
              [{atom,[{generated,true},{location,{3340,17}}],badrecord},
               {var,{3340,10},rec84}]}]}]}]}]}},
    {debug_line,3341,1663},
    {block,
     {3341,5},
     [{match,{3341,5},{var,{3341,5},rec85},{var,{3341,5},'Vst'}},
      {'case',
       {3341,13},
       {var,{3341,5},rec85},
       [{clause,
         {3341,13},
         [{tuple,
           {3341,13},
           [{atom,{3341,13},vst},
            {var,{3341,13},'_'},
            {var,{3341,13},'_'},
            {var,{3341,13},'_'},
            {var,{3341,13},'_'},
            {var,{3341,13},'_'},
            {var,{3341,13},'_'}]}],
         [],
         [{call,
           {3341,13},
           {remote,
            {3341,13},
            {atom,{3341,13},erlang},
            {atom,{3341,13},setelement}},
           [{integer,{3341,13},2},
            {var,{3341,5},rec85},
            {var,{3341,21},'St'}]}]},
        {clause,
         [{generated,true},{location,{3341,13}}],
         [{var,[{generated,true},{location,{3341,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{3341,13}}],
           {remote,
            [{generated,true},{location,{3341,13}}],
            {atom,[{generated,true},{location,{3341,13}}],erlang},
            {atom,[{generated,true},{location,{3341,13}}],error}},
           [{tuple,
             [{generated,true},{location,{3341,13}}],
             [{atom,[{generated,true},{location,{3341,13}}],badrecord},
              {var,{3341,5},rec85}]}]}]}]}]}]}]}.
{function,{3343,1},
          assert_durable_term,2,
          [{clause,{3343,1},
                   [{var,{3343,1},'_'},{var,{3343,1},'_'}],
                   [[{call,{3343,1},
                           {remote,{3343,1},
                                   {atom,{3343,1},fake},
                                   {atom,{3343,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3343,1664},{atom,{3343,1},ignore}]},
           {clause,{3343,1},
                   [{var,{3343,21},'Src'},{var,{3343,26},'Vst'}],
                   [],
                   [{debug_line,3344,1665},
                    {call,{3344,5},
                          {atom,{3344,5},assert_term},
                          [{var,{3344,17},'Src'},{var,{3344,22},'Vst'}]},
                    {debug_line,3345,1666},
                    {call,{3345,5},
                          {atom,{3345,5},assert_not_fragile},
                          [{var,{3345,24},'Src'},{var,{3345,29},'Vst'}]}]}]}.
{function,
    {3347,1},
    assert_not_fragile,2,
    [{clause,
         {3347,1},
         [{var,{3347,1},'_'},{var,{3347,1},'_'}],
         [[{call,
               {3347,1},
               {remote,
                   {3347,1},
                   {atom,{3347,1},fake},
                   {atom,{3347,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3347,1667},{atom,{3347,1},ignore}]},
     {clause,
         {3347,1},
         [{match,
              {3347,20},
              {tuple,{3347,20},[{var,{3347,21},'Kind'},{var,{3347,26},'_'}]},
              {var,{3347,29},'Src'}},
          {var,{3347,34},'Vst'}],
         [[{op,{3347,49},'=:=',{var,{3347,44},'Kind'},{atom,{3347,53},x}}],
          [{op,{3347,61},'=:=',{var,{3347,56},'Kind'},{atom,{3347,65},y}}]],
         [{debug_line,3348,1668},
          {call,{3348,5},{atom,{3348,5},check_limit},[{var,{3348,17},'Src'}]},
          {debug_line,3349,1669},
          {match,
              {3349,5},
              {tuple,
                  {3349,5},
                  [{atom,{3349,5},vst},
                   {tuple,
                       {3349,18},
                       [{atom,{3349,18},st},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,30},'Fragile'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'},
                        {var,{3349,18},'_'}]},
                   {var,{3349,5},'_'},
                   {var,{3349,5},'_'},
                   {var,{3349,5},'_'},
                   {var,{3349,5},'_'},
                   {var,{3349,5},'_'}]},
              {var,{3349,42},'Vst'}},
          {debug_line,3350,1670},
          {'case',
              {3350,5},
              {call,
                  {3350,10},
                  {remote,
                      {3350,14},
                      {atom,{3350,10},sets},
                      {atom,{3350,15},is_element}},
                  [{var,{3350,26},'Src'},{var,{3350,31},'Fragile'}]},
              [{clause,
                   {3351,9},
                   [{atom,{3351,9},true}],
                   [],
                   [{debug_line,3351,1671},
                    {call,
                        {3351,17},
                        {atom,{3351,17},error},
                        [{block,0,
                             [{tuple,
                                  {3351,23},
                                  [{atom,{3351,24},fragile_message_reference},
                                   {var,{3351,51},'Src'}]}]}]}]},
               {clause,
                   {3352,9},
                   [{atom,{3352,9},false}],
                   [],
                   [{debug_line,3352,1672},{atom,{3352,18},ok}]}]}]},
     {clause,
         {3354,1},
         [{var,{3354,20},'Lit'},
          {tuple,
              {3354,25},
              [{atom,{3354,25},vst},
               {var,{3354,25},'_'},
               {var,{3354,25},'_'},
               {var,{3354,25},'_'},
               {var,{3354,25},'_'},
               {var,{3354,25},'_'},
               {var,{3354,25},'_'}]}],
         [],
         [{debug_line,3355,1673},
          {call,
              {3355,5},
              {atom,{3355,5},assert_literal},
              [{var,{3355,20},'Lit'}]},
          {debug_line,3356,1674},
          {atom,{3356,5},ok}]}]}.
{function,
    {3362,1},
    bif_types,3,
    [{clause,
         {3362,1},
         [{var,{3362,1},'_'},{var,{3362,1},'_'},{var,{3362,1},'_'}],
         [[{call,
               {3362,1},
               {remote,
                   {3362,1},
                   {atom,{3362,1},fake},
                   {atom,{3362,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3362,1675},{atom,{3362,1},ignore}]},
     {clause,
         {3362,1},
         [{var,{3362,11},'Op'},{var,{3362,15},'Ss'},{var,{3362,19},'Vst'}],
         [],
         [{debug_line,3365,1676},
          {match,
              {3365,5},
              {var,{3365,5},'Args'},
              {lc,{3365,12},
                  {block,0,
                      [{call,
                           {3365,13},
                           {atom,{3365,13},get_concrete_type},
                           [{var,{3365,31},'Arg'},{var,{3365,36},'Vst'}]}]},
                  [{block,0,[{atom,{3365,51},true}]},
                   {generate,
                       {3365,48},
                       {var,{3365,44},'Arg'},
                       {var,{3365,51},'Ss'}}]}},
          {debug_line,3366,1677},
          {'case',
              {3366,5},
              {tuple,{3366,10},[{var,{3366,11},'Op'},{var,{3366,14},'Ss'}]},
              [{clause,
                   {3367,9},
                   [{tuple,
                        {3367,9},
                        [{atom,{3367,10},element},
                         {cons,
                             {3367,18},
                             {var,{3367,19},'_'},
                             {cons,
                                 {3367,21},
                                 {tuple,
                                     {3367,21},
                                     [{atom,{3367,22},literal},
                                      {var,{3367,30},'Tuple'}]},
                                 {nil,{3367,36}}}}]}],
                   [[{op,{3367,62},
                         '>',
                         {call,
                             {3367,44},
                             {remote,
                                 {3367,44},
                                 {atom,{3367,44},erlang},
                                 {atom,{3367,44},tuple_size}},
                             [{var,{3367,55},'Tuple'}]},
                         {integer,{3367,64},0}}]],
                   [{debug_line,3368,1678},
                    {'case',
                        {3368,13},
                        {call,
                            {3368,18},
                            {remote,
                                {3368,33},
                                {atom,{3368,18},beam_call_types},
                                {atom,{3368,34},types}},
                            [{atom,{3368,40},erlang},
                             {var,{3368,48},'Op'},
                             {var,{3368,52},'Args'}]},
                        [{clause,
                             {3369,17},
                             [{tuple,
                                  {3369,17},
                                  [{atom,{3369,18},any},
                                   {var,{3369,22},'ArgTypes'},
                                   {var,{3369,31},'Safe'}]}],
                             [],
                             [{debug_line,3370,1679},
                              {match,
                                  {3370,21},
                                  {var,{3370,21},'RetType'},
                                  {call,
                                      {3370,31},
                                      {atom,{3370,31},join_tuple_elements},
                                      [{var,{3370,51},'Tuple'}]}},
                              {debug_line,3371,1680},
                              {tuple,
                                  {3371,21},
                                  [{var,{3371,22},'RetType'},
                                   {var,{3371,30},'ArgTypes'},
                                   {var,{3371,39},'Safe'}]}]},
                         {clause,
                             {3372,17},
                             [{var,{3372,17},'Other'}],
                             [],
                             [{debug_line,3373,1681},
                              {var,{3373,21},'Other'}]}]}]},
               {clause,
                   {3375,9},
                   [{tuple,
                        {3375,9},
                        [{var,{3375,10},'_'},{var,{3375,12},'_'}]}],
                   [],
                   [{debug_line,3376,1682},
                    {match,
                        {3376,13},
                        {var,{3376,13},'Res0'},
                        {call,
                            {3376,20},
                            {remote,
                                {3376,35},
                                {atom,{3376,20},beam_call_types},
                                {atom,{3376,36},types}},
                            [{atom,{3376,42},erlang},
                             {var,{3376,50},'Op'},
                             {var,{3376,54},'Args'}]}},
                    {debug_line,3377,1683},
                    {match,
                        {3377,13},
                        {tuple,
                            {3377,13},
                            [{var,{3377,14},'Ret0'},
                             {var,{3377,20},'ArgTypes'},
                             {var,{3377,30},'SubSafe'}]},
                        {var,{3377,41},'Res0'}},
                    {debug_line,3382,1684},
                    {'case',
                        {3382,13},
                        {call,
                            {3382,18},
                            {remote,
                                {3382,33},
                                {atom,{3382,18},beam_call_types},
                                {atom,{3382,34},arith_type}},
                            [{block,0,
                                 [{tuple,
                                      {3382,45},
                                      [{atom,{3382,46},bif},
                                       {var,{3382,51},'Op'}]}]},
                             {var,{3382,56},'Args'}]},
                        [{clause,
                             {3383,17},
                             [{atom,{3383,17},any}],
                             [],
                             [{debug_line,3383,1685},{var,{3383,24},'Res0'}]},
                         {clause,
                             {3384,17},
                             [{var,{3384,17},'Ret0'}],
                             [],
                             [{debug_line,3384,1686},{var,{3384,25},'Res0'}]},
                         {clause,
                             {3385,17},
                             [{var,{3385,17},'Ret'}],
                             [],
                             [{debug_line,3385,1687},
                              {tuple,
                                  {3385,24},
                                  [{call,
                                       {3385,25},
                                       {atom,{3385,25},meet},
                                       [{var,{3385,30},'Ret'},
                                        {var,{3385,35},'Ret0'}]},
                                   {var,{3385,42},'ArgTypes'},
                                   {var,{3385,52},'SubSafe'}]}]}]}]}]}]}]}.
{function,
    {3389,1},
    join_tuple_elements,1,
    [{clause,
         {3389,1},
         [{var,{3389,1},'_'}],
         [[{call,
               {3389,1},
               {remote,
                   {3389,1},
                   {atom,{3389,1},fake},
                   {atom,{3389,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3389,1688},{atom,{3389,1},ignore}]},
     {clause,
         {3389,1},
         [{var,{3389,21},'Tuple'}],
         [],
         [{debug_line,3390,1689},
          {call,
              {3390,5},
              {atom,{3390,5},join_tuple_elements},
              [{block,0,
                   [{call,
                        {3390,25},
                        {remote,
                            {3390,25},
                            {atom,{3390,25},erlang},
                            {atom,{3390,25},tuple_size}},
                        [{var,{3390,36},'Tuple'}]}]},
               {var,{3390,44},'Tuple'},
               {atom,{3390,51},none}]}]}]}.
{function,
    {3392,1},
    join_tuple_elements,3,
    [{clause,
         {3392,1},
         [{var,{3392,1},'_'},{var,{3392,1},'_'},{var,{3392,1},'_'}],
         [[{call,
               {3392,1},
               {remote,
                   {3392,1},
                   {atom,{3392,1},fake},
                   {atom,{3392,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3392,1690},{atom,{3392,1},ignore}]},
     {clause,
         {3392,1},
         [{integer,{3392,21},0},
          {var,{3392,24},'_Tuple'},
          {var,{3392,32},'Type'}],
         [],
         [{debug_line,3393,1691},{var,{3393,5},'Type'}]},
     {clause,
         {3394,1},
         [{var,{3394,21},'I'},{var,{3394,24},'Tuple'},{var,{3394,31},'Type0'}],
         [],
         [{debug_line,3395,1692},
          {match,
              {3395,5},
              {var,{3395,5},'Type1'},
              {call,
                  {3395,13},
                  {remote,
                      {3395,23},
                      {atom,{3395,13},beam_types},
                      {atom,{3395,24},make_type_from_value}},
                  [{block,0,
                       [{call,
                            {3395,45},
                            {remote,
                                {3395,45},
                                {atom,{3395,45},erlang},
                                {atom,{3395,45},element}},
                            [{var,{3395,53},'I'},
                             {var,{3395,56},'Tuple'}]}]}]}},
          {debug_line,3396,1693},
          {match,
              {3396,5},
              {var,{3396,5},'Type'},
              {call,
                  {3396,12},
                  {remote,
                      {3396,22},
                      {atom,{3396,12},beam_types},
                      {atom,{3396,23},join}},
                  [{var,{3396,28},'Type0'},{var,{3396,35},'Type1'}]}},
          {debug_line,3397,1694},
          {call,
              {3397,5},
              {atom,{3397,5},join_tuple_elements},
              [{block,0,
                   [{op,{3397,27},
                        '-',
                        {var,{3397,25},'I'},
                        {integer,{3397,29},1}}]},
               {var,{3397,32},'Tuple'},
               {var,{3397,39},'Type'}]}]}]}.
{function,
    {3399,1},
    call_types,3,
    [{clause,
         {3399,1},
         [{var,{3399,1},'_'},{var,{3399,1},'_'},{var,{3399,1},'_'}],
         [[{call,
               {3399,1},
               {remote,
                   {3399,1},
                   {atom,{3399,1},fake},
                   {atom,{3399,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3399,1695},{atom,{3399,1},ignore}]},
     {clause,
         {3399,1},
         [{tuple,
              {3399,12},
              [{atom,{3399,13},extfunc},
               {var,{3399,21},'M'},
               {var,{3399,23},'F'},
               {var,{3399,25},'A'}]},
          {var,{3399,29},'A'},
          {var,{3399,32},'Vst'}],
         [],
         [{debug_line,3400,1696},
          {match,
              {3400,5},
              {var,{3400,5},'Args'},
              {call,
                  {3400,12},
                  {atom,{3400,12},get_call_args},
                  [{var,{3400,26},'A'},{var,{3400,29},'Vst'}]}},
          {debug_line,3401,1697},
          {call,
              {3401,5},
              {remote,
                  {3401,20},
                  {atom,{3401,5},beam_call_types},
                  {atom,{3401,21},types}},
              [{var,{3401,27},'M'},
               {var,{3401,30},'F'},
               {var,{3401,33},'Args'}]}]},
     {clause,
         {3402,1},
         [{atom,{3402,12},bs_init_writable},
          {var,{3402,30},'A'},
          {var,{3402,33},'Vst'}],
         [],
         [{debug_line,3403,1698},
          {match,
              {3403,5},
              {var,{3403,5},'T'},
              {call,
                  {3403,9},
                  {remote,
                      {3403,19},
                      {atom,{3403,9},beam_types},
                      {atom,{3403,20},make_type_from_value}},
                  [{block,0,[{bin,{3403,41},[]}]}]}},
          {debug_line,3404,1699},
          {tuple,
              {3404,5},
              [{var,{3404,6},'T'},
               {call,
                   {3404,9},
                   {atom,{3404,9},get_call_args},
                   [{var,{3404,23},'A'},{var,{3404,26},'Vst'}]},
               {atom,{3404,32},false}]}]},
     {clause,
         {3405,1},
         [{var,{3405,12},'_'},{var,{3405,15},'A'},{var,{3405,18},'Vst'}],
         [],
         [{debug_line,3406,1700},
          {tuple,
              {3406,5},
              [{atom,{3406,6},any},
               {call,
                   {3406,11},
                   {atom,{3406,11},get_call_args},
                   [{var,{3406,25},'A'},{var,{3406,28},'Vst'}]},
               {atom,{3406,34},false}]}]}]}.
{function,
    {3408,1},
    will_bif_succeed,3,
    [{clause,
         {3408,1},
         [{var,{3408,1},'_'},{var,{3408,1},'_'},{var,{3408,1},'_'}],
         [[{call,
               {3408,1},
               {remote,
                   {3408,1},
                   {atom,{3408,1},fake},
                   {atom,{3408,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3408,1701},{atom,{3408,1},ignore}]},
     {clause,
         {3408,1},
         [{atom,{3408,18},raise},
          {cons,
              {3408,25},
              {var,{3408,26},'_'},
              {cons,{3408,28},{var,{3408,28},'_'},{nil,{3408,29}}}},
          {var,{3408,32},'_Vst'}],
         [],
         [{debug_line,3411,1702},{atom,{3411,5},no}]},
     {clause,
         {3412,1},
         [{var,{3412,18},'Op'},{var,{3412,22},'Ss'},{var,{3412,26},'Vst'}],
         [],
         [{debug_line,3413,1703},
          {'case',
              {3413,5},
              {call,
                  {3413,10},
                  {atom,{3413,10},is_float_arith_bif},
                  [{var,{3413,29},'Op'},{var,{3413,33},'Ss'}]},
              [{clause,
                   {3414,9},
                   [{atom,{3414,9},true}],
                   [],
                   [{debug_line,3415,1704},
                    {atom,[{text,"'maybe'"},{location,{3415,13}}],'maybe'}]},
               {clause,
                   {3416,9},
                   [{atom,{3416,9},false}],
                   [],
                   [{debug_line,3420,1705},
                    {match,
                        {3420,13},
                        {var,{3420,13},'Args'},
                        {lc,{3420,20},
                            {block,0,
                                [{call,
                                     {3420,21},
                                     {atom,{3420,21},get_concrete_type},
                                     [{var,{3420,39},'Arg'},
                                      {var,{3420,44},'Vst'}]}]},
                            [{block,0,[{atom,{3420,59},true}]},
                             {generate,
                                 {3420,56},
                                 {var,{3420,52},'Arg'},
                                 {var,{3420,59},'Ss'}}]}},
                    {debug_line,3421,1706},
                    {call,
                        {3421,13},
                        {remote,
                            {3421,28},
                            {atom,{3421,13},beam_call_types},
                            {atom,{3421,29},will_succeed}},
                        [{atom,{3421,42},erlang},
                         {var,{3421,50},'Op'},
                         {var,{3421,54},'Args'}]}]}]}]}]}.
{function,
    {3424,1},
    will_call_succeed,3,
    [{clause,
         {3424,1},
         [{var,{3424,1},'_'},{var,{3424,1},'_'},{var,{3424,1},'_'}],
         [[{call,
               {3424,1},
               {remote,
                   {3424,1},
                   {atom,{3424,1},fake},
                   {atom,{3424,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3424,1707},{atom,{3424,1},ignore}]},
     {clause,
         {3424,1},
         [{tuple,
              {3424,19},
              [{atom,{3424,20},extfunc},
               {var,{3424,28},'M'},
               {var,{3424,30},'F'},
               {var,{3424,32},'A'}]},
          {var,{3424,36},'_Live'},
          {var,{3424,43},'Vst'}],
         [],
         [{debug_line,3425,1708},
          {call,
              {3425,5},
              {remote,
                  {3425,20},
                  {atom,{3425,5},beam_call_types},
                  {atom,{3425,21},will_succeed}},
              [{var,{3425,34},'M'},
               {var,{3425,37},'F'},
               {block,0,
                   [{call,
                        {3425,40},
                        {atom,{3425,40},get_call_args},
                        [{var,{3425,54},'A'},{var,{3425,57},'Vst'}]}]}]}]},
     {clause,
         {3426,1},
         [{atom,{3426,19},bs_init_writable},
          {var,{3426,37},'_Live'},
          {var,{3426,44},'_Vst'}],
         [],
         [{debug_line,3427,1709},{atom,{3427,5},yes}]},
     {clause,
         {3428,1},
         [{atom,{3428,19},raw_raise},
          {var,{3428,30},'_Live'},
          {var,{3428,37},'_Vst'}],
         [],
         [{debug_line,3429,1710},{atom,{3429,5},no}]},
     {clause,
         {3430,1},
         [{tuple,{3430,19},[{atom,{3430,20},f},{var,{3430,22},'Lbl'}]},
          {var,{3430,28},'_Live'},
          {tuple,
              {3430,35},
              [{atom,{3430,35},vst},
               {var,{3430,35},'_'},
               {var,{3430,35},'_'},
               {var,{3430,35},'_'},
               {var,{3430,35},'_'},
               {var,{3430,43},'Ft'},
               {var,{3430,35},'_'}]}],
         [],
         [{debug_line,3431,1711},
          {'case',
              {3431,5},
              {var,{3431,10},'Ft'},
              [{clause,
                   {3432,9},
                   [{map,
                        {3432,9},
                        [{map_field_exact,
                             {3432,15},
                             {var,{3432,11},'Lbl'},
                             {map,
                                 {3432,18},
                                 [{map_field_exact,
                                      {3432,33},
                                      {atom,{3432,20},always_fails},
                                      {atom,{3432,36},true}}]}}]}],
                   [],
                   [{debug_line,3433,1712},{atom,{3433,13},no}]},
               {clause,
                   {3434,9},
                   [{map,{3434,9},[]}],
                   [],
                   [{debug_line,3435,1713},
                    {atom,
                        [{text,"'maybe'"},{location,{3435,13}}],
                        'maybe'}]}]}]},
     {clause,
         {3437,1},
         [{atom,{3437,19},apply},{var,{3437,26},'Live'},{var,{3437,32},'Vst'}],
         [],
         [{debug_line,3438,1714},
          {match,
              {3438,5},
              {var,{3438,5},'Mod'},
              {call,
                  {3438,11},
                  {atom,{3438,11},get_term_type},
                  [{block,0,
                       [{tuple,
                            {3438,25},
                            [{atom,{3438,26},x},
                             {op,{3438,32},
                                 '-',
                                 {var,{3438,28},'Live'},
                                 {integer,{3438,33},2}}]}]},
                   {var,{3438,37},'Vst'}]}},
          {debug_line,3439,1715},
          {match,
              {3439,5},
              {var,{3439,5},'Name'},
              {call,
                  {3439,12},
                  {atom,{3439,12},get_term_type},
                  [{block,0,
                       [{tuple,
                            {3439,26},
                            [{atom,{3439,27},x},
                             {op,{3439,33},
                                 '-',
                                 {var,{3439,29},'Live'},
                                 {integer,{3439,34},1}}]}]},
                   {var,{3439,38},'Vst'}]}},
          {debug_line,3440,1716},
          {'case',
              {3440,5},
              {tuple,{3440,10},[{var,{3440,11},'Mod'},{var,{3440,15},'Name'}]},
              [{clause,
                   {3441,9},
                   [{tuple,
                        {3441,9},
                        [{tuple,
                             {3441,10},
                             [{atom,{3441,10},t_atom},{var,{3441,10},'_'}]},
                         {tuple,
                             {3441,20},
                             [{atom,{3441,20},t_atom},{var,{3441,20},'_'}]}]}],
                   [],
                   [{debug_line,3442,1717},
                    {atom,[{text,"'maybe'"},{location,{3442,13}}],'maybe'}]},
               {clause,
                   {3443,9},
                   [{tuple,
                        {3443,9},
                        [{var,{3443,10},'_'},{var,{3443,12},'_'}]}],
                   [],
                   [{debug_line,3444,1718},{atom,{3444,13},no}]}]}]},
     {clause,
         {3446,1},
         [{var,{3446,19},'_Call'},
          {var,{3446,26},'_Live'},
          {var,{3446,33},'_Vst'}],
         [],
         [{debug_line,3447,1719},
          {atom,[{text,"'maybe'"},{location,{3447,5}}],'maybe'}]}]}.
{function,{3449,1},
          get_call_args,2,
          [{clause,{3449,1},
                   [{var,{3449,1},'_'},{var,{3449,1},'_'}],
                   [[{call,{3449,1},
                           {remote,{3449,1},
                                   {atom,{3449,1},fake},
                                   {atom,{3449,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3449,1720},{atom,{3449,1},ignore}]},
           {clause,{3449,1},
                   [{var,{3449,15},'Arity'},{var,{3449,22},'Vst'}],
                   [],
                   [{debug_line,3450,1721},
                    {call,{3450,5},
                          {atom,{3450,5},get_call_args_1},
                          [{integer,{3450,21},0},
                           {var,{3450,24},'Arity'},
                           {var,{3450,31},'Vst'}]}]}]}.
{function,
    {3452,1},
    get_call_args_1,3,
    [{clause,
         {3452,1},
         [{var,{3452,1},'_'},{var,{3452,1},'_'},{var,{3452,1},'_'}],
         [[{call,
               {3452,1},
               {remote,
                   {3452,1},
                   {atom,{3452,1},fake},
                   {atom,{3452,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3452,1722},{atom,{3452,1},ignore}]},
     {clause,
         {3452,1},
         [{var,{3452,17},'Arity'},{var,{3452,24},'Arity'},{var,{3452,31},'_'}],
         [],
         [{debug_line,3453,1723},{nil,{3453,5}}]},
     {clause,
         {3454,1},
         [{var,{3454,17},'N'},{var,{3454,20},'Arity'},{var,{3454,27},'Vst'}],
         [[{op,{3454,39},'<',{var,{3454,37},'N'},{var,{3454,41},'Arity'}}]],
         [{debug_line,3455,1724},
          {match,
              {3455,5},
              {var,{3455,5},'ArgType'},
              {call,
                  {3455,15},
                  {atom,{3455,15},get_movable_term_type},
                  [{block,0,
                       [{tuple,
                            {3455,37},
                            [{atom,{3455,38},x},{var,{3455,40},'N'}]}]},
                   {var,{3455,44},'Vst'}]}},
          {debug_line,3456,1725},
          {cons,
              {3456,5},
              {var,{3456,6},'ArgType'},
              {call,
                  {3456,16},
                  {atom,{3456,16},get_call_args_1},
                  [{block,0,
                       [{op,{3456,34},
                            '+',
                            {var,{3456,32},'N'},
                            {integer,{3456,36},1}}]},
                   {var,{3456,39},'Arity'},
                   {var,{3456,46},'Vst'}]}}]}]}.
{function,
    {3458,1},
    check_limit,1,
    [{clause,
         {3458,1},
         [{var,{3458,1},'_'}],
         [[{call,
               {3458,1},
               {remote,
                   {3458,1},
                   {atom,{3458,1},fake},
                   {atom,{3458,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3458,1726},{atom,{3458,1},ignore}]},
     {clause,
         {3458,1},
         [{match,
              {3458,13},
              {tuple,{3458,13},[{atom,{3458,14},x},{var,{3458,16},'X'}]},
              {var,{3458,19},'Src'}}],
         [[{call,
               {3458,29},
               {remote,
                   {3458,29},
                   {atom,{3458,29},erlang},
                   {atom,{3458,29},is_integer}},
               [{var,{3458,40},'X'}]}]],
         [{debug_line,3459,1727},
          {'if',
              {3459,5},
              [{clause,
                   {3461,9},
                   [],
                   [[{op,{3461,11},
                         '=<',
                         {integer,{3461,9},0},
                         {var,{3461,14},'X'}},
                     {op,{3461,19},
                         '<',
                         {var,{3461,17},'X'},
                         {integer,{3461,21},1023}}]],
                   [{debug_line,3461,1728},{atom,{3461,29},ok}]},
               {clause,
                   {3462,9},
                   [],
                   [[{op,{3462,14},
                         '=<',
                         {integer,{3462,9},1023},
                         {var,{3462,17},'X'}}]],
                   [{debug_line,3462,1729},
                    {call,
                        {3462,22},
                        {atom,{3462,22},error},
                        [{atom,{3462,28},limit}]}]},
               {clause,
                   {3463,9},
                   [],
                   [[{op,{3463,11},
                         '<',
                         {var,{3463,9},'X'},
                         {integer,{3463,13},0}}]],
                   [{debug_line,3463,1730},
                    {call,
                        {3463,18},
                        {atom,{3463,18},error},
                        [{block,0,
                             [{tuple,
                                  {3463,24},
                                  [{atom,{3463,25},bad_register},
                                   {var,{3463,39},'Src'}]}]}]}]}]}]},
     {clause,
         {3465,1},
         [{match,
              {3465,13},
              {tuple,{3465,13},[{atom,{3465,14},y},{var,{3465,16},'Y'}]},
              {var,{3465,19},'Src'}}],
         [[{call,
               {3465,29},
               {remote,
                   {3465,29},
                   {atom,{3465,29},erlang},
                   {atom,{3465,29},is_integer}},
               [{var,{3465,40},'Y'}]}]],
         [{debug_line,3466,1731},
          {'if',
              {3466,5},
              [{clause,
                   {3467,9},
                   [],
                   [[{op,{3467,11},
                         '=<',
                         {integer,{3467,9},0},
                         {var,{3467,14},'Y'}},
                     {op,{3467,19},
                         '<',
                         {var,{3467,17},'Y'},
                         {integer,{3467,21},1024}}]],
                   [{debug_line,3467,1732},{atom,{3467,29},ok}]},
               {clause,
                   {3468,9},
                   [],
                   [[{op,{3468,14},
                         '=<',
                         {integer,{3468,9},1024},
                         {var,{3468,17},'Y'}}]],
                   [{debug_line,3468,1733},
                    {call,
                        {3468,22},
                        {atom,{3468,22},error},
                        [{atom,{3468,28},limit}]}]},
               {clause,
                   {3469,9},
                   [],
                   [[{op,{3469,11},
                         '<',
                         {var,{3469,9},'Y'},
                         {integer,{3469,13},0}}]],
                   [{debug_line,3469,1734},
                    {call,
                        {3469,18},
                        {atom,{3469,18},error},
                        [{block,0,
                             [{tuple,
                                  {3469,24},
                                  [{atom,{3469,25},bad_register},
                                   {var,{3469,39},'Src'}]}]}]}]}]}]},
     {clause,
         {3471,1},
         [{match,
              {3471,13},
              {tuple,{3471,13},[{atom,{3471,14},fr},{var,{3471,17},'Fr'}]},
              {var,{3471,21},'Src'}}],
         [[{call,
               {3471,31},
               {remote,
                   {3471,31},
                   {atom,{3471,31},erlang},
                   {atom,{3471,31},is_integer}},
               [{var,{3471,42},'Fr'}]}]],
         [{debug_line,3472,1735},
          {'if',
              {3472,5},
              [{clause,
                   {3473,9},
                   [],
                   [[{op,{3473,11},
                         '=<',
                         {integer,{3473,9},0},
                         {var,{3473,14},'Fr'}},
                     {op,{3473,21},
                         '<',
                         {var,{3473,18},'Fr'},
                         {integer,{3473,23},1023}}]],
                   [{debug_line,3473,1736},{atom,{3473,31},ok}]},
               {clause,
                   {3474,9},
                   [],
                   [[{op,{3474,14},
                         '=<',
                         {integer,{3474,9},1023},
                         {var,{3474,17},'Fr'}}]],
                   [{debug_line,3474,1737},
                    {call,
                        {3474,23},
                        {atom,{3474,23},error},
                        [{atom,{3474,29},limit}]}]},
               {clause,
                   {3475,9},
                   [],
                   [[{op,{3475,12},
                         '<',
                         {var,{3475,9},'Fr'},
                         {integer,{3475,14},0}}]],
                   [{debug_line,3475,1738},
                    {call,
                        {3475,19},
                        {atom,{3475,19},error},
                        [{block,0,
                             [{tuple,
                                  {3475,25},
                                  [{atom,{3475,26},bad_register},
                                   {var,{3475,40},'Src'}]}]}]}]}]}]}]}.
{function,{3478,1},
          min,2,
          [{clause,{3478,1},
                   [{var,{3478,1},'_'},{var,{3478,1},'_'}],
                   [[{call,{3478,1},
                           {remote,{3478,1},
                                   {atom,{3478,1},fake},
                                   {atom,{3478,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3478,1739},{atom,{3478,1},ignore}]},
           {clause,{3478,1},
                   [{var,{3478,5},'A'},{var,{3478,8},'B'}],
                   [[{call,{3478,16},
                           {remote,{3478,16},
                                   {atom,{3478,16},erlang},
                                   {atom,{3478,16},is_integer}},
                           [{var,{3478,27},'A'}]},
                     {call,{3478,31},
                           {remote,{3478,31},
                                   {atom,{3478,31},erlang},
                                   {atom,{3478,31},is_integer}},
                           [{var,{3478,42},'B'}]},
                     {op,{3478,48},
                         '<',
                         {var,{3478,46},'A'},
                         {var,{3478,50},'B'}}]],
                   [{debug_line,3478,1740},{var,{3478,55},'A'}]},
           {clause,{3479,1},
                   [{var,{3479,5},'A'},{var,{3479,8},'B'}],
                   [[{call,{3479,16},
                           {remote,{3479,16},
                                   {atom,{3479,16},erlang},
                                   {atom,{3479,16},is_integer}},
                           [{var,{3479,27},'A'}]},
                     {call,{3479,31},
                           {remote,{3479,31},
                                   {atom,{3479,31},erlang},
                                   {atom,{3479,31},is_integer}},
                           [{var,{3479,42},'B'}]}]],
                   [{debug_line,3479,1741},{var,{3479,48},'B'}]}]}.
{function,
    {3481,1},
    gcd,2,
    [{clause,
         {3481,1},
         [{var,{3481,1},'_'},{var,{3481,1},'_'}],
         [[{call,
               {3481,1},
               {remote,
                   {3481,1},
                   {atom,{3481,1},fake},
                   {atom,{3481,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3481,1742},{atom,{3481,1},ignore}]},
     {clause,
         {3481,1},
         [{var,{3481,5},'A'},{var,{3481,8},'B'}],
         [],
         [{debug_line,3482,1743},
          {'case',
              {3482,5},
              {op,{3482,12},'rem',{var,{3482,10},'A'},{var,{3482,16},'B'}},
              [{clause,
                   {3483,9},
                   [{integer,{3483,9},0}],
                   [],
                   [{debug_line,3483,1744},{var,{3483,14},'B'}]},
               {clause,
                   {3484,9},
                   [{var,{3484,9},'X'}],
                   [],
                   [{debug_line,3484,1745},
                    {call,
                        {3484,14},
                        {atom,{3484,14},gcd},
                        [{var,{3484,18},'B'},{var,{3484,21},'X'}]}]}]}]}]}.
{function,{3487,1},
          error,1,
          [{clause,{3487,1},
                   [{var,{3487,1},'_'}],
                   [[{call,{3487,1},
                           {remote,{3487,1},
                                   {atom,{3487,1},fake},
                                   {atom,{3487,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3487,1746},{atom,{3487,1},ignore}]},
           {clause,{3487,1},
                   [{var,{3487,7},'Error'}],
                   [],
                   [{debug_line,3487,1747},
                    {call,{3487,17},
                          {remote,{3487,17},
                                  {atom,{3487,17},erlang},
                                  {atom,{3487,17},throw}},
                          [{var,{3487,23},'Error'}]}]}]}.
{eof,{3488,1}}.
