{attribute,{1,1},file,{"compile_SUITE.erl",1}}.
{attribute,{20,2},module,compile_SUITE}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,99,111,109,109,
             111,110,95,116,101,115,116,45,49,46,50,55,46,53,47,105,110,99,
             108,117,100,101,47,99,116,46,104,114,108],
            1}}.
{attribute,{25,1},file,{"compile_SUITE.erl",25}}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,115,116,100,
             108,105,98,45,54,46,50,47,105,110,99,108,117,100,101,47,101,114,
             108,95,99,111,109,112,105,108,101,46,104,114,108],
            1}}.
{attribute,
    {23,2},
    record,
    {options,
        [{typed_record_field,
             {record_field,{24,4},{atom,{24,4},includes},{nil,{24,13}}},
             {type,
                 {24,19},
                 list,
                 [{remote_type,
                      {24,20},
                      [{atom,{24,20},file},{atom,{24,25},filename},[]]}]}},
         {typed_record_field,
             {record_field,{26,4},{atom,{26,4},outdir},{string,{26,11},"."}},
             {remote_type,
                 {26,19},
                 [{atom,{26,19},file},{atom,{26,24},filename},[]]}},
         {typed_record_field,
             {record_field,
                 {28,4},
                 {atom,{28,4},output_type},
                 {atom,{28,16},undefined}},
             {type,{28,29},atom,[]}},
         {typed_record_field,
             {record_field,{29,4},{atom,{29,4},defines},{nil,{29,12}}},
             {type,
                 {29,19},
                 list,
                 [{type,
                      {29,20},
                      union,
                      [{type,{29,20},atom,[]},
                       {type,
                           {29,29},
                           tuple,
                           [{type,{29,30},atom,[]},{var,{29,37},'_'}]}]}]}},
         {typed_record_field,
             {record_field,{33,4},{atom,{33,4},warning},{integer,{33,12},1}},
             {type,{33,19},non_neg_integer,[]}},
         {typed_record_field,
             {record_field,{36,4},{atom,{36,4},verbose},{atom,{36,12},false}},
             {type,{36,21},boolean,[]}},
         {record_field,{37,4},{atom,{37,4},optimize},{integer,{37,13},999}},
         {typed_record_field,
             {record_field,{38,4},{atom,{38,4},specific},{nil,{38,13}}},
             {type,{38,19},list,[{var,{38,20},'_'}]}},
         {typed_record_field,
             {record_field,{39,4},{atom,{39,4},outfile},{string,{39,12},[]}},
             {remote_type,
                 {39,19},
                 [{atom,{39,19},file},{atom,{39,24},filename},[]]}},
         {typed_record_field,
             {record_field,{41,4},{atom,{41,4},cwd}},
             {remote_type,
                 {41,17},
                 [{atom,{41,17},file},{atom,{41,22},filename},[]]}}]}}.
{attribute,{26,1},file,{"compile_SUITE.erl",26}}.
{attribute,{27,2},
           export,
           [{all,0},
            {suite,0},
            {groups,0},
            {init_per_suite,1},
            {end_per_suite,1},
            {init_per_group,2},
            {end_per_group,2},
            {app_test,1},
            {appup_test,1},
            {bigE_roundtrip,1},
            {debug_info,4},
            {custom_debug_info,1},
            {custom_compile_info,1},
            {file_1,1},
            {forms_2,1},
            {module_mismatch,1},
            {outdir,1},
            {binary,1},
            {makedep,1},
            {cond_and_ifdef,1},
            {listings,1},
            {listings_big,1},
            {other_output,1},
            {encrypted_abstr,1},
            {strict_record,1},
            {utf8_atoms,1},
            {utf8_functions,1},
            {extra_chunks,1},
            {cover,1},
            {env,1},
            {core_pp,1},
            {tuple_calls,1},
            {core_roundtrip,1},
            {asm,1},
            {asm_labels,1},
            {sys_pre_attributes,1},
            {dialyzer,1},
            {no_core_prepare,1},
            {beam_ssa_pp_smoke_test,1},
            {warnings,1},
            {pre_load_check,1},
            {env_compiler_options,1},
            {bc_options,1},
            {deterministic_include,1},
            {deterministic_paths,1},
            {deterministic_docs,1},
            {compile_attribute,1},
            {message_printing,1},
            {other_options,1},
            {transforms,1},
            {erl_compile_api,1},
            {types_pp,1},
            {bs_init_writable,1},
            {annotations_pp,1},
            {option_order,1},
            {sys_coverage,1}]}.
{function,
    {48,1},
    suite,0,
    [{clause,
         {48,1},
         [],
         [[{call,
               {48,1},
               {remote,
                   {48,1},
                   {atom,{48,1},fake},
                   {atom,{48,1},is_beam_bif_info}},
               []}]],
         [{debug_line,48,1},{atom,{48,1},ignore}]},
     {clause,
         {48,1},
         [],[],
         [{debug_line,48,2},
          {cons,
              {48,12},
              {tuple,
                  {48,13},
                  [{atom,{48,14},ct_hooks},
                   {cons,
                       {48,23},
                       {atom,{48,24},ts_install_cth},
                       {nil,{48,38}}}]},
              {nil,{48,40}}}]}]}.
{attribute,{51,2},
           type,
           {all_return_type,{type,{51,28},list,[{type,{51,29},atom,[]}]},[]}}.
{attribute,{52,2},
           spec,
           {{all,0},
            [{type,{52,10},
                   'fun',
                   [{type,{52,10},product,[]},
                    {user_type,{52,16},all_return_type,[]}]}]}}.
{function,
 {54,1},
 all,0,
 [{clause,
   {54,1},
   [],
   [[{call,
      {54,1},
      {remote,{54,1},{atom,{54,1},fake},{atom,{54,1},is_beam_bif_info}},
      []}]],
   [{debug_line,54,3},{atom,{54,1},ignore}]},
  {clause,
   {54,1},
   [],[],
   [{debug_line,55,4},
    {cons,
     {55,5},
     {atom,{55,6},app_test},
     {cons,
      {55,16},
      {atom,{55,16},appup_test},
      {cons,
       {55,28},
       {atom,{55,28},bigE_roundtrip},
       {cons,
        {55,44},
        {atom,{55,44},file_1},
        {cons,
         {56,6},
         {atom,{56,6},forms_2},
         {cons,
          {56,15},
          {atom,{56,15},module_mismatch},
          {cons,
           {56,32},
           {atom,{56,32},outdir},
           {cons,
            {57,6},
            {atom,{57,6},binary},
            {cons,
             {57,14},
             {atom,{57,14},makedep},
             {cons,
              {57,23},
              {atom,{57,23},cond_and_ifdef},
              {cons,
               {57,39},
               {atom,{57,39},listings},
               {cons,
                {57,49},
                {atom,{57,49},listings_big},
                {cons,
                 {58,6},
                 {atom,{58,6},other_output},
                 {cons,
                  {58,20},
                  {atom,{58,20},encrypted_abstr},
                  {cons,
                   {58,37},
                   {atom,{58,37},tuple_calls},
                   {cons,
                    {59,6},
                    {atom,{59,6},strict_record},
                    {cons,
                     {59,21},
                     {atom,{59,21},utf8_atoms},
                     {cons,
                      {59,33},
                      {atom,{59,33},utf8_functions},
                      {cons,
                       {59,49},
                       {atom,{59,49},extra_chunks},
                       {cons,
                        {60,6},
                        {atom,{60,6},cover},
                        {cons,
                         {60,13},
                         {atom,{60,13},env},
                         {cons,
                          {60,18},
                          {atom,{60,18},core_pp},
                          {cons,
                           {60,27},
                           {atom,{60,27},core_roundtrip},
                           {cons,
                            {60,43},
                            {atom,{60,43},asm},
                            {cons,
                             {60,48},
                             {atom,{60,48},asm_labels},
                             {cons,
                              {60,60},
                              {atom,{60,60},no_core_prepare},
                              {cons,
                               {61,6},
                               {atom,{61,6},sys_pre_attributes},
                               {cons,
                                {61,26},
                                {atom,{61,26},dialyzer},
                                {cons,
                                 {61,36},
                                 {atom,{61,36},beam_ssa_pp_smoke_test},
                                 {cons,
                                  {62,6},
                                  {atom,{62,6},warnings},
                                  {cons,
                                   {62,16},
                                   {atom,{62,16},pre_load_check},
                                   {cons,
                                    {63,6},
                                    {atom,{63,6},env_compiler_options},
                                    {cons,
                                     {63,28},
                                     {atom,{63,28},custom_debug_info},
                                     {cons,
                                      {63,47},
                                      {atom,{63,47},bc_options},
                                      {cons,
                                       {64,6},
                                       {atom,{64,6},custom_compile_info},
                                       {cons,
                                        {64,27},
                                        {atom,{64,27},deterministic_include},
                                        {cons,
                                         {64,50},
                                         {atom,{64,50},deterministic_paths},
                                         {cons,
                                          {65,6},
                                          {atom,{65,6},deterministic_docs},
                                          {cons,
                                           {66,6},
                                           {atom,{66,6},compile_attribute},
                                           {cons,
                                            {66,25},
                                            {atom,{66,25},message_printing},
                                            {cons,
                                             {66,43},
                                             {atom,{66,43},other_options},
                                             {cons,
                                              {66,58},
                                              {atom,{66,58},transforms},
                                              {cons,
                                               {67,6},
                                               {atom,{67,6},erl_compile_api},
                                               {cons,
                                                {67,23},
                                                {atom,{67,23},types_pp},
                                                {cons,
                                                 {67,33},
                                                 {atom,
                                                  {67,33},
                                                  bs_init_writable},
                                                 {cons,
                                                  {67,51},
                                                  {atom,
                                                   {67,51},
                                                   annotations_pp},
                                                  {cons,
                                                   {68,6},
                                                   {atom,{68,6},option_order},
                                                   {cons,
                                                    {68,20},
                                                    {atom,
                                                     {68,20},
                                                     sys_coverage},
                                                    {nil,
                                                     {68,
                                                      32}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}]}]}.
{function,{70,1},
          groups,0,
          [{clause,{70,1},
                   [],
                   [[{call,{70,1},
                           {remote,{70,1},
                                   {atom,{70,1},fake},
                                   {atom,{70,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,70,5},{atom,{70,1},ignore}]},
           {clause,{70,1},[],[],[{debug_line,71,6},{nil,{71,5}}]}]}.
{function,{73,1},
          init_per_suite,1,
          [{clause,{73,1},
                   [{var,{73,1},'_'}],
                   [[{call,{73,1},
                           {remote,{73,1},
                                   {atom,{73,1},fake},
                                   {atom,{73,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,73,7},{atom,{73,1},ignore}]},
           {clause,{73,1},
                   [{var,{73,16},'Config'}],
                   [],
                   [{debug_line,74,8},
                    {call,{74,5},
                          {remote,{74,13},
                                  {atom,{74,5},test_lib},
                                  {atom,{74,14},recompile}},
                          [{atom,{74,25},compile_SUITE}]},
                    {debug_line,75,9},
                    {var,{75,5},'Config'}]}]}.
{function,{77,1},
          end_per_suite,1,
          [{clause,{77,1},
                   [{var,{77,1},'_'}],
                   [[{call,{77,1},
                           {remote,{77,1},
                                   {atom,{77,1},fake},
                                   {atom,{77,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,77,10},{atom,{77,1},ignore}]},
           {clause,{77,1},
                   [{var,{77,15},'_Config'}],
                   [],
                   [{debug_line,78,11},{atom,{78,5},ok}]}]}.
{function,{80,1},
          init_per_group,2,
          [{clause,{80,1},
                   [{var,{80,1},'_'},{var,{80,1},'_'}],
                   [[{call,{80,1},
                           {remote,{80,1},
                                   {atom,{80,1},fake},
                                   {atom,{80,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,80,12},{atom,{80,1},ignore}]},
           {clause,{80,1},
                   [{var,{80,16},'_GroupName'},{var,{80,28},'Config'}],
                   [],
                   [{debug_line,81,13},{var,{81,2},'Config'}]}]}.
{function,{83,1},
          end_per_group,2,
          [{clause,{83,1},
                   [{var,{83,1},'_'},{var,{83,1},'_'}],
                   [[{call,{83,1},
                           {remote,{83,1},
                                   {atom,{83,1},fake},
                                   {atom,{83,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,83,14},{atom,{83,1},ignore}]},
           {clause,{83,1},
                   [{var,{83,15},'_GroupName'},{var,{83,27},'Config'}],
                   [],
                   [{debug_line,84,15},{var,{84,2},'Config'}]}]}.
{function,{89,1},
          app_test,1,
          [{clause,{89,1},
                   [{var,{89,1},'_'}],
                   [[{call,{89,1},
                           {remote,{89,1},
                                   {atom,{89,1},fake},
                                   {atom,{89,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,89,16},{atom,{89,1},ignore}]},
           {clause,{89,1},
                   [{var,{89,10},'Config'}],
                   [[{call,{89,23},
                           {remote,{89,23},
                                   {atom,{89,23},erlang},
                                   {atom,{89,23},is_list}},
                           [{var,{89,31},'Config'}]}]],
                   [{debug_line,90,17},
                    {call,{90,5},
                          {remote,{90,16},
                                  {atom,{90,5},test_server},
                                  {atom,{90,17},app_test}},
                          [{atom,{90,26},compiler}]}]}]}.
{function,
    {93,1},
    appup_test,1,
    [{clause,
         {93,1},
         [{var,{93,1},'_'}],
         [[{call,
               {93,1},
               {remote,
                   {93,1},
                   {atom,{93,1},fake},
                   {atom,{93,1},is_beam_bif_info}},
               []}]],
         [{debug_line,93,18},{atom,{93,1},ignore}]},
     {clause,
         {93,1},
         [{var,{93,12},'Config'}],
         [[{call,
               {93,25},
               {remote,{93,25},{atom,{93,25},erlang},{atom,{93,25},is_list}},
               [{var,{93,33},'Config'}]}]],
         [{debug_line,94,19},
          {match,
              {94,5},
              {atom,{94,5},ok},
              {call,
                  {94,10},
                  {remote,
                      {94,21},
                      {atom,{94,10},test_server},
                      {atom,{94,22},appup_test}},
                  [{atom,{94,33},compiler}]}}]}]}.
{function,
 {99,1},
 bigE_roundtrip,1,
 [{clause,
   {99,1},
   [{var,{99,1},'_'}],
   [[{call,
      {99,1},
      {remote,{99,1},{atom,{99,1},fake},{atom,{99,1},is_beam_bif_info}},
      []}]],
   [{debug_line,99,20},{atom,{99,1},ignore}]},
  {clause,
   {99,1},
   [{var,{99,16},'Config'}],
   [[{call,
      {99,29},
      {remote,{99,29},{atom,{99,29},erlang},{atom,{99,29},is_list}},
      [{var,{99,37},'Config'}]}]],
   [{debug_line,100,21},
    {match,
     {100,5},
     {var,{100,5},'DataDir'},
     {call,
      {100,15},
      {remote,{100,24},{atom,{100,15},proplists},{atom,{100,25},get_value}},
      [{atom,{100,35},data_dir},{var,{100,45},'Config'}]}},
    {debug_line,101,22},
    {match,
     {101,5},
     {var,{101,5},'PrivDir'},
     {call,
      {101,15},
      {remote,{101,24},{atom,{101,15},proplists},{atom,{101,25},get_value}},
      [{atom,{101,35},priv_dir},{var,{101,45},'Config'}]}},
    {debug_line,102,23},
    {match,
     {102,5},
     {var,{102,5},'Source'},
     {call,
      {102,14},
      {remote,{102,22},{atom,{102,14},filename},{atom,{102,23},join}},
      [{var,{102,28},'DataDir'},{block,0,[{string,{102,37},"bigE.erl"}]}]}},
    {debug_line,103,24},
    {match,
     {103,5},
     {var,{103,5},'TargetDir'},
     {call,
      {103,17},
      {remote,{103,25},{atom,{103,17},filename},{atom,{103,26},join}},
      [{var,{103,31},'PrivDir'},{block,0,[{string,{103,40},"bigE"}]}]}},
    {debug_line,104,25},
    {match,
     {104,5},
     {var,{104,5},'Target'},
     {call,
      {104,14},
      {remote,{104,22},{atom,{104,14},filename},{atom,{104,23},join}},
      [{var,{104,28},'TargetDir'},{block,0,[{string,{104,39},"bigE.E"}]}]}},
    {debug_line,105,26},
    {match,
     {105,5},
     {var,{105,5},'TargetSource'},
     {call,
      {105,20},
      {remote,{105,28},{atom,{105,20},filename},{atom,{105,29},join}},
      [{var,{105,34},'TargetDir'},{block,0,[{string,{105,45},"bigE.erl"}]}]}},
    {debug_line,106,27},
    {match,
     {106,5},
     {atom,{106,5},ok},
     {call,
      {106,10},
      {remote,{106,14},{atom,{106,10},file},{atom,{106,15},make_dir}},
      [{var,{106,24},'TargetDir'}]}},
    {debug_line,107,28},
    {call,
     {107,5},
     {remote,{107,7},{atom,{107,5},io},{atom,{107,8},format}},
     [{block,0,[{string,{107,15},"Source: ~p~nTargetDir: ~p~nTarget: ~p\n"}]},
      {block,0,
       [{debug_line,108,29},
        {cons,
         {108,15},
         {var,{108,16},'Source'},
         {cons,
          {108,24},
          {var,{108,24},'TargetDir'},
          {cons,{108,35},{var,{108,35},'Target'},{nil,{108,41}}}}}]}]},
    {debug_line,109,30},
    {'case',
     {109,5},
     {call,
      {109,10},
      {remote,{109,17},{atom,{109,10},compile},{atom,{109,18},file}},
      [{var,{109,23},'Source'},
       {block,0,
        [{debug_line,110,31},
         {cons,
          {110,23},
          {atom,{110,24},'E'},
          {cons,
           {110,29},
           {atom,{110,29},warnings_as_errors},
           {cons,
            {110,49},
            {tuple,
             {110,49},
             [{atom,{110,50},outdir},{var,{110,58},'TargetDir'}]},
            {nil,{110,68}}}}}]}]},
     [{clause,
       {111,9},
       [{tuple,{111,9},[{atom,{111,10},ok},{var,{111,14},'_'}]}],
       [],
       [{debug_line,111,32},{atom,{111,20},ok}]},
      {clause,
       {112,9},
       [{var,{112,9},'Other'}],
       [],
       [{debug_line,112,33},
        {call,
         {112,18},
         {remote,{112,20},{atom,{112,18},ct},{atom,{112,21},fail}},
         [{block,0,
           [{tuple,
             {112,26},
             [{atom,{112,27},unexpected_result},
              {var,{112,46},'Other'}]}]}]}]}]},
    {debug_line,117,34},
    {match,
     {117,5},
     {atom,{117,5},ok},
     {call,
      {117,10},
      {remote,{117,14},{atom,{117,10},file},{atom,{117,15},rename}},
      [{var,{117,22},'Target'},{var,{117,30},'TargetSource'}]}},
    {debug_line,118,35},
    {'case',
     {118,5},
     {call,
      {118,10},
      {remote,{118,17},{atom,{118,10},compile},{atom,{118,18},file}},
      [{var,{118,23},'TargetSource'},
       {block,0,
        [{debug_line,119,36},
         {cons,
          {119,23},
          {atom,{119,24},warnings_as_errors},
          {cons,
           {119,44},
           {tuple,
            {119,44},
            [{atom,{119,45},outdir},{var,{119,53},'TargetDir'}]},
           {nil,{119,63}}}}]}]},
     [{clause,
       {120,9},
       [{tuple,{120,9},[{atom,{120,10},ok},{var,{120,14},'_'}]}],
       [],
       [{debug_line,120,37},{atom,{120,20},ok}]},
      {clause,
       {121,9},
       [{var,{121,9},'Other1'}],
       [],
       [{debug_line,121,38},
        {call,
         {121,19},
         {remote,{121,21},{atom,{121,19},ct},{atom,{121,22},fail}},
         [{block,0,
           [{tuple,
             {121,27},
             [{atom,{121,28},unexpected_result},
              {var,{121,47},'Other1'}]}]}]}]}]},
    {debug_line,123,39},
    {call,
     {123,5},
     {remote,{123,9},{atom,{123,5},file},{atom,{123,10},delete}},
     [{var,{123,17},'TargetSource'}]},
    {debug_line,124,40},
    {call,
     {124,5},
     {remote,{124,9},{atom,{124,5},file},{atom,{124,10},del_dir}},
     [{var,{124,18},'TargetDir'}]},
    {debug_line,125,41},
    {atom,{125,5},ok}]}]}.
{function,
 {130,1},
 file_1,1,
 [{clause,
   {130,1},
   [{var,{130,1},'_'}],
   [[{call,
      {130,1},
      {remote,{130,1},{atom,{130,1},fake},{atom,{130,1},is_beam_bif_info}},
      []}]],
   [{debug_line,130,42},{atom,{130,1},ignore}]},
  {clause,
   {130,1},
   [{var,{130,8},'Config'}],
   [[{call,
      {130,21},
      {remote,{130,21},{atom,{130,21},erlang},{atom,{130,21},is_list}},
      [{var,{130,29},'Config'}]}]],
   [{debug_line,131,43},
    {call,
     {131,5},
     {remote,{131,5},{atom,{131,5},erlang},{atom,{131,5},process_flag}},
     [{atom,{131,18},trap_exit},{atom,{131,29},true}]},
    {debug_line,133,44},
    {match,
     {133,5},
     {var,{133,5},'DataDir'},
     {call,
      {133,15},
      {remote,{133,24},{atom,{133,15},proplists},{atom,{133,25},get_value}},
      [{atom,{133,35},data_dir},{var,{133,45},'Config'}]}},
    {debug_line,134,45},
    {match,
     {134,5},
     {var,{134,5},'PrivDir'},
     {call,
      {134,15},
      {remote,{134,24},{atom,{134,15},proplists},{atom,{134,25},get_value}},
      [{atom,{134,35},priv_dir},{var,{134,45},'Config'}]}},
    {debug_line,136,46},
    {match,
     {136,5},
     {tuple,{136,5},[{var,{136,6},'Simple'},{var,{136,14},'Target'}]},
     {call,
      {136,24},
      {atom,{136,24},get_files},
      [{var,{136,34},'Config'},
       {atom,{136,42},simple},
       {block,0,[{string,{136,50},"file_1"}]}]}},
    {debug_line,137,47},
    {match,
     {137,5},
     {tuple,{137,5},[{atom,{137,6},ok},{var,{137,10},'Cwd'}]},
     {call,
      {137,17},
      {remote,{137,21},{atom,{137,17},file},{atom,{137,22},get_cwd}},
      []}},
    {debug_line,138,48},
    {match,
     {138,5},
     {atom,{138,5},ok},
     {call,
      {138,10},
      {remote,{138,14},{atom,{138,10},file},{atom,{138,15},set_cwd}},
      [{block,0,
        [{call,
          {138,23},
          {remote,{138,31},{atom,{138,23},filename},{atom,{138,32},dirname}},
          [{var,{138,40},'Target'}]}]}]}},
    {debug_line,140,49},
    {match,
     {140,5},
     {tuple,{140,5},[{atom,{140,6},ok},{atom,{140,9},simple}]},
     {call,
      {140,19},
      {remote,{140,26},{atom,{140,19},compile},{atom,{140,27},file}},
      [{var,{140,32},'Simple'},
       {block,0,[{cons,{140,40},{atom,{140,41},slim},{nil,{140,45}}}]}]}},
    {debug_line,141,50},
    {match,
     {141,5},
     {tuple,{141,5},[{atom,{141,6},ok},{atom,{141,9},simple}]},
     {call,
      {141,19},
      {remote,{141,26},{atom,{141,19},compile},{atom,{141,27},file}},
      [{var,{141,32},'Simple'}]}},
    {debug_line,143,51},
    {call,
     {143,5},
     {atom,{143,5},compile_and_verify},
     [{var,{143,24},'Simple'},{var,{143,32},'Target'},{nil,{143,40}}]},
    {debug_line,144,52},
    {call,
     {144,5},
     {atom,{144,5},compile_and_verify},
     [{var,{144,24},'Simple'},
      {var,{144,32},'Target'},
      {block,0,[{cons,{144,40},{atom,{144,41},debug_info},{nil,{144,51}}}]}]},
    {debug_line,145,53},
    {call,
     {145,5},
     {atom,{145,5},compile_and_verify},
     [{var,{145,24},'Simple'},
      {var,{145,32},'Target'},
      {block,0,[{cons,{145,40},{atom,{145,41},no_postopt},{nil,{145,51}}}]}]},
    {debug_line,147,54},
    {match,
     {147,5},
     {tuple,{147,5},[{atom,{147,6},ok},{atom,{147,9},simple}]},
     {call,
      {147,19},
      {remote,{147,26},{atom,{147,19},compile},{atom,{147,27},file}},
      [{var,{147,32},'Simple'},
       {block,0,
        [{cons,{147,40},{atom,{147,41},no_line_info},{nil,{147,53}}}]}]}},
    {debug_line,148,55},
    {match,
     {148,5},
     {tuple,{148,5},[{atom,{148,6},ok},{atom,{148,9},simple}]},
     {call,
      {148,19},
      {remote,{148,26},{atom,{148,19},compile},{atom,{148,27},file}},
      [{var,{148,32},'Simple'},
       {block,0,
        [{cons,
          {148,40},
          {tuple,{148,41},[{atom,{148,42},eprof},{atom,{148,48},beam_z}]},
          {nil,{148,55}}}]}]}},
    {debug_line,149,56},
    {match,
     {149,5},
     {tuple,{149,5},[{atom,{149,6},ok},{atom,{149,9},simple}]},
     {call,
      {149,19},
      {remote,{149,26},{atom,{149,19},compile},{atom,{149,27},file}},
      [{var,{149,32},'Simple'},
       {block,0,
        [{cons,
          {149,40},
          {tuple,{149,41},[{atom,{149,42},call_time},{atom,{149,52},beam_z}]},
          {nil,{149,59}}}]}]}},
    {debug_line,150,57},
    {match,
     {150,5},
     {tuple,{150,5},[{atom,{150,6},ok},{atom,{150,9},simple}]},
     {call,
      {150,19},
      {remote,{150,26},{atom,{150,19},compile},{atom,{150,27},file}},
      [{var,{150,32},'Simple'},
       {block,0,
        [{cons,
          {150,40},
          {tuple,
           {150,41},
           [{atom,{150,42},call_memory},{atom,{150,54},beam_z}]},
          {nil,{150,61}}}]}]}},
    {debug_line,153,58},
    {match,
     {153,5},
     {tuple,{153,5},[{atom,{153,6},ok},{atom,{153,9},simple}]},
     {call,
      {153,19},
      {remote,{153,26},{atom,{153,19},compile},{atom,{153,27},file}},
      [{var,{153,32},'Simple'},{atom,{153,40},no_postopt}]}},
    {debug_line,156,59},
    {match,
     {156,5},
     {tuple,{156,5},[{atom,{156,6},ok},{nil,{156,9}}]},
     {call,
      {156,15},
      {remote,{156,22},{atom,{156,15},compile},{atom,{156,23},file}},
      [{var,{156,28},'Simple'},
       {block,0,[{cons,{156,36},{atom,{156,37},dabstr},{nil,{156,43}}}]}]}},
    {debug_line,157,60},
    {match,
     {157,5},
     {tuple,{157,5},[{atom,{157,6},ok},{atom,{157,9},simple}]},
     {call,
      {157,19},
      {remote,{157,26},{atom,{157,19},compile},{atom,{157,27},file}},
      [{block,0,
        [{call,
          {157,32},
          {remote,{157,40},{atom,{157,32},filename},{atom,{157,41},rootname}},
          [{var,{157,50},'Target'}]}]},
       {block,0,
        [{cons,{157,59},{atom,{157,60},from_abstr},{nil,{157,70}}}]}]}},
    {debug_line,158,61},
    {match,
     {158,5},
     {atom,{158,5},ok},
     {call,
      {158,10},
      {remote,{158,14},{atom,{158,10},file},{atom,{158,15},delete}},
      [{block,0,
        [{op,
          {158,48},
          '++',
          {call,
           {158,22},
           {remote,{158,30},{atom,{158,22},filename},{atom,{158,31},rootname}},
           [{var,{158,40},'Target'}]},
          {string,{158,51},".abstr"}}]}]}},
    {debug_line,161,62},
    {match,
     {161,5},
     {tuple,{161,5},[{atom,{161,6},ok},{atom,{161,9},simple}]},
     {call,
      {161,19},
      {remote,{161,26},{atom,{161,19},compile},{atom,{161,27},file}},
      [{var,{161,32},'Simple'},
       {block,0,
        [{cons,{161,40},{atom,{161,41},deterministic},{nil,{161,54}}}]}]}},
    {debug_line,162,63},
    {match,
     {162,5},
     {tuple,{162,5},[{atom,{162,6},module},{atom,{162,13},simple}]},
     {call,
      {162,23},
      {remote,{162,24},{atom,{162,23},c},{atom,{162,25},l}},
      [{atom,{162,27},simple}]}},
    {debug_line,163,64},
    {match,
     {163,5},
     {cons,
      {163,5},
      {tuple,{163,6},[{atom,{163,7},version},{var,{163,15},'_'}]},
      {nil,{163,17}}},
     {call,
      {163,21},
      {remote,{163,27},{atom,{163,21},simple},{atom,{163,28},module_info}},
      [{atom,{163,40},compile}]}},
    {debug_line,164,65},
    {match,
     {164,5},
     {atom,{164,5},true},
     {call,
      {164,12},
      {remote,{164,16},{atom,{164,12},code},{atom,{164,17},delete}},
      [{atom,{164,24},simple}]}},
    {debug_line,165,66},
    {match,
     {165,5},
     {atom,{165,5},false},
     {call,
      {165,13},
      {remote,{165,17},{atom,{165,13},code},{atom,{165,18},purge}},
      [{atom,{165,24},simple}]}},
    {debug_line,167,67},
    {match,
     {167,5},
     {atom,{167,5},ok},
     {call,
      {167,10},
      {remote,{167,14},{atom,{167,10},file},{atom,{167,15},set_cwd}},
      [{var,{167,23},'Cwd'}]}},
    {debug_line,168,68},
    {match,
     {168,5},
     {atom,{168,5},true},
     {call,{168,12},{atom,{168,12},exists},[{var,{168,19},'Target'}]}},
    {debug_line,169,69},
    {match,
     {169,5},
     {atom,{169,5},passed},
     {call,
      {169,14},
      {atom,{169,14},run},
      [{var,{169,18},'Target'},{atom,{169,26},test},{nil,{169,32}}]}},
    {debug_line,172,70},
    {match,{172,5},{var,{172,5},'Det'},{atom,{172,11},deterministic_module}},
    {debug_line,173,71},
    {match,
     {173,5},
     {tuple,{173,5},[{var,{173,6},'DetPath'},{var,{173,15},'DetTarget'}]},
     {call,
      {173,28},
      {atom,{173,28},get_files},
      [{var,{173,38},'Config'},
       {var,{173,46},'Det'},
       {block,0,[{string,{173,51},"det_target"}]}]}},
    {debug_line,174,72},
    {match,
     {174,5},
     {tuple,
      {174,5},
      [{atom,{174,6},ok},{var,{174,9},'Det'},{var,{174,13},'DetCode'}]},
     {call,
      {174,24},
      {remote,{174,31},{atom,{174,24},compile},{atom,{174,32},file}},
      [{var,{174,37},'DetPath'},
       {block,0,[{cons,{174,46},{atom,{174,47},binary},{nil,{174,53}}}]}]}},
    {debug_line,175,73},
    {match,
     {175,5},
     {tuple,{175,5},[{atom,{175,6},module},{var,{175,13},'Det'}]},
     {call,
      {175,20},
      {remote,{175,24},{atom,{175,20},code},{atom,{175,25},load_binary}},
      [{var,{175,37},'Det'},
       {block,0,[{string,{175,42},[]}]},
       {var,{175,46},'DetCode'}]}},
    {debug_line,176,74},
    {match,
     {176,5},
     {cons,
      {176,5},
      {tuple,{176,6},[{atom,{176,7},version},{var,{176,15},'_'}]},
      {nil,{176,17}}},
     {call,
      {176,21},
      {remote,{176,24},{var,{176,21},'Det'},{atom,{176,25},module_info}},
      [{atom,{176,37},compile}]}},
    {debug_line,177,75},
    {match,
     {177,5},
     {atom,{177,5},true},
     {call,
      {177,12},
      {remote,{177,16},{atom,{177,12},code},{atom,{177,17},delete}},
      [{var,{177,24},'Det'}]}},
    {debug_line,178,76},
    {match,
     {178,5},
     {atom,{178,5},false},
     {call,
      {178,13},
      {remote,{178,17},{atom,{178,13},code},{atom,{178,18},purge}},
      [{var,{178,24},'Det'}]}},
    {debug_line,181,77},
    {match,
     {181,5},
     {var,{181,5},'NonExisting'},
     {atom,{181,19},definitely__no__such__module}},
    {debug_line,182,78},
    {match,
     {182,5},
     {atom,{182,5},error},
     {call,
      {182,13},
      {remote,{182,20},{atom,{182,13},compile},{atom,{182,21},file}},
      [{var,{182,26},'NonExisting'},
       {block,0,[{cons,{182,39},{atom,{182,40},report},{nil,{182,46}}}]}]}},
    {debug_line,183,79},
    {match,
     {183,5},
     {atom,{183,5},error},
     {call,
      {183,13},
      {remote,{183,20},{atom,{183,13},compile},{atom,{183,21},file}},
      [{var,{183,26},'NonExisting'},
       {block,0,
        [{cons,
          {183,39},
          {atom,{183,40},from_abstr},
          {cons,{183,51},{atom,{183,51},report},{nil,{183,57}}}}]}]}},
    {debug_line,184,80},
    {match,
     {184,5},
     {atom,{184,5},error},
     {call,
      {184,13},
      {remote,{184,20},{atom,{184,13},compile},{atom,{184,21},file}},
      [{var,{184,26},'NonExisting'},
       {block,0,
        [{cons,
          {184,39},
          {atom,{184,40},from_core},
          {cons,{184,50},{atom,{184,50},report},{nil,{184,56}}}}]}]}},
    {debug_line,185,81},
    {match,
     {185,5},
     {atom,{185,5},error},
     {call,
      {185,13},
      {remote,{185,20},{atom,{185,13},compile},{atom,{185,21},file}},
      [{var,{185,26},'NonExisting'},
       {block,0,
        [{cons,
          {185,39},
          {atom,{185,40},from_asm},
          {cons,{185,49},{atom,{185,49},report},{nil,{185,55}}}}]}]}},
    {debug_line,187,82},
    {match,
     {187,5},
     {atom,{187,5},error},
     {call,
      {187,13},
      {remote,{187,20},{atom,{187,13},compile},{atom,{187,21},file}},
      [{block,0,
        [{call,
          {187,26},
          {remote,{187,34},{atom,{187,26},filename},{atom,{187,35},join}},
          [{var,{187,40},'DataDir'},
           {block,0,[{string,{187,49},"bad_core"}]}]}]},
       {block,0,
        [{cons,
          {187,62},
          {atom,{187,63},from_core},
          {cons,{187,73},{atom,{187,73},report},{nil,{187,79}}}}]}]}},
    {debug_line,188,83},
    {match,
     {188,5},
     {atom,{188,5},error},
     {call,
      {188,13},
      {remote,{188,20},{atom,{188,13},compile},{atom,{188,21},file}},
      [{block,0,
        [{call,
          {188,26},
          {remote,{188,34},{atom,{188,26},filename},{atom,{188,35},join}},
          [{var,{188,40},'DataDir'},
           {block,0,[{string,{188,49},"bad_core_tokens"}]}]}]},
       {block,0,
        [{cons,
          {188,69},
          {atom,{188,70},from_core},
          {cons,{188,80},{atom,{188,80},report},{nil,{188,86}}}}]}]}},
    {debug_line,191,84},
    {match,
     {191,5},
     {var,{191,5},'ObsoleteOptions'},
     {cons,
      {191,23},
      {atom,{191,24},r18},
      {cons,
       {191,28},
       {atom,{191,28},r19},
       {cons,
        {191,32},
        {atom,{191,32},r20},
        {cons,
         {191,36},
         {atom,{191,36},r21},
         {cons,
          {191,40},
          {atom,{191,40},r22},
          {cons,
           {191,44},
           {atom,{191,44},r23},
           {cons,
            {192,24},
            {atom,{192,24},no_bsm3},
            {cons,
             {192,32},
             {atom,{192,32},no_get_hd_tl},
             {cons,
              {192,45},
              {atom,{192,45},no_put_tuple2},
              {cons,
               {192,59},
               {atom,{192,59},no_utf8_atoms},
               {cons,
                {193,24},
                {atom,{193,24},no_swap},
                {cons,
                 {193,32},
                 {atom,{193,32},no_init_yregs},
                 {cons,
                  {193,46},
                  {atom,{193,46},no_shared_fun_wrappers},
                  {cons,
                   {193,69},
                   {atom,{193,69},no_make_fun3},
                   {nil,{193,81}}}}}}}}}}}}}}}}},
    {debug_line,194,85},
    {match,
     {194,5},
     {var,{194,5},'_'},
     {lc,
      {194,9},
      {block,
       {194,10},
       [{debug_line,195,86},
        {match,
         {195,14},
         {tuple,
          {195,14},
          [{atom,{195,15},error},
           {cons,
            {195,21},
            {tuple,
             {195,22},
             [{var,{195,23},'_Simple'},
              {cons,
               {196,23},
               {tuple,
                {196,24},
                [{atom,{196,25},none},
                 {atom,{196,30},compile},
                 {tuple,
                  {196,38},
                  [{atom,{196,39},obsolete_option},{var,{196,55},'Opt'}]}]},
               {nil,{196,60}}}]},
            {nil,{196,62}}},
           {nil,{197,15}}]},
         {call,
          {198,18},
          {remote,{198,25},{atom,{198,18},compile},{atom,{198,26},file}},
          [{var,{198,31},'Simple'},
           {block,0,
            [{debug_line,198,87},
             {cons,
              {198,39},
              {var,{198,40},'Opt'},
              {cons,{198,44},{atom,{198,44},return},{nil,{198,50}}}}]}]}},
        {debug_line,199,88},
        {match,
         {199,14},
         {atom,{199,14},error},
         {call,
          {199,22},
          {remote,{199,29},{atom,{199,22},compile},{atom,{199,30},file}},
          [{var,{199,35},'Simple'},
           {block,0,
            [{cons,
              {199,43},
              {var,{199,44},'Opt'},
              {cons,{199,48},{atom,{199,48},report},{nil,{199,54}}}}]}]}}]},
      [{block,0,[{debug_line,200,89},{atom,{200,24},true}]},
       {generate,
        {200,21},
        {var,{200,17},'Opt'},
        {var,{200,24},'ObsoleteOptions'}}]}},
    {debug_line,204,90},
    {match,
     {204,5},
     {var,{204,5},'Simple'},
     {call,
      {204,14},
      {remote,{204,22},{atom,{204,14},filename},{atom,{204,23},join}},
      [{var,{204,28},'DataDir'},{block,0,[{string,{204,37},"simple"}]}]}},
    {debug_line,205,91},
    {match,
     {205,5},
     {var,{205,5},'SimpleTempFile'},
     {call,
      {205,22},
      {remote,{205,30},{atom,{205,22},filename},{atom,{205,31},join}},
      [{var,{205,36},'PrivDir'},{block,0,[{string,{205,45},"simple.bea#"}]}]}},
    {debug_line,206,92},
    {match,
     {206,5},
     {var,{206,5},'SimpleOutputFile'},
     {call,
      {206,24},
      {remote,{206,32},{atom,{206,24},filename},{atom,{206,33},join}},
      [{var,{206,38},'PrivDir'},{block,0,[{string,{206,47},"simple.beam"}]}]}},
    {debug_line,207,93},
    {match,
     {207,5},
     {atom,{207,5},ok},
     {call,
      {207,10},
      {remote,{207,14},{atom,{207,10},file},{atom,{207,15},make_dir}},
      [{var,{207,24},'SimpleTempFile'}]}},
    {debug_line,208,94},
    {match,
     {208,5},
     {atom,{208,5},ok},
     {call,
      {208,10},
      {remote,{208,14},{atom,{208,10},file},{atom,{208,15},make_dir}},
      [{var,{208,24},'SimpleOutputFile'}]}},
    {debug_line,209,95},
    {'try',
     {209,5},
     [{debug_line,210,96},
      {match,
       {210,9},
       {atom,{210,9},error},
       {call,
        {210,17},
        {remote,{210,24},{atom,{210,17},compile},{atom,{210,25},file}},
        [{var,{210,30},'Simple'},
         {block,0,
          [{cons,
            {210,38},
            {tuple,{210,39},[{atom,{210,40},outdir},{var,{210,47},'PrivDir'}]},
            {cons,{210,57},{atom,{210,57},report},{nil,{210,63}}}}]}]}},
      {debug_line,211,97},
      {match,
       {211,9},
       {var,{211,9},'_'},
       {call,
        {211,13},
        {remote,{211,17},{atom,{211,13},file},{atom,{211,18},del_dir}},
        [{var,{211,26},'SimpleTempFile'}]}},
      {debug_line,212,98},
      {match,
       {212,9},
       {atom,{212,9},error},
       {call,
        {212,17},
        {remote,{212,24},{atom,{212,17},compile},{atom,{212,25},file}},
        [{var,{212,30},'Simple'},
         {block,0,
          [{cons,
            {212,38},
            {tuple,{212,39},[{atom,{212,40},outdir},{var,{212,47},'PrivDir'}]},
            {cons,{212,57},{atom,{212,57},report},{nil,{212,63}}}}]}]}}],
     [],[],
     [{debug_line,214,99},
      {match,
       {214,9},
       {var,{214,9},'_'},
       {call,
        {214,13},
        {remote,{214,17},{atom,{214,13},file},{atom,{214,18},del_dir}},
        [{var,{214,26},'SimpleTempFile'}]}},
      {debug_line,215,100},
      {match,
       {215,9},
       {var,{215,9},'_'},
       {call,
        {215,13},
        {remote,{215,17},{atom,{215,13},file},{atom,{215,18},del_dir}},
        [{var,{215,26},'SimpleOutputFile'}]}}]},
    {debug_line,219,101},
    {match,
     {219,5},
     {atom,{219,5},ok},
     {call,
      {219,10},
      {remote,{219,14},{atom,{219,10},file},{atom,{219,15},delete}},
      [{var,{219,22},'Target'}]}},
    {debug_line,220,102},
    {match,
     {220,5},
     {atom,{220,5},ok},
     {call,
      {220,10},
      {remote,{220,14},{atom,{220,10},file},{atom,{220,15},del_dir}},
      [{block,0,
        [{call,
          {220,23},
          {remote,{220,31},{atom,{220,23},filename},{atom,{220,32},dirname}},
          [{var,{220,40},'Target'}]}]}]}},
    {debug_line,221,103},
    {match,
     {221,5},
     {atom,{221,5},ok},
     {call,
      {221,10},
      {remote,{221,14},{atom,{221,10},file},{atom,{221,15},del_dir}},
      [{block,0,
        [{call,
          {221,23},
          {remote,{221,31},{atom,{221,23},filename},{atom,{221,32},dirname}},
          [{var,{221,40},'DetTarget'}]}]}]}},
    {debug_line,224,104},
    {'receive',
     {224,5},
     [{clause,
       {225,2},
       [{var,{225,2},'Any'}],
       [],
       [{debug_line,226,105},
        {call,
         {226,6},
         {remote,{226,8},{atom,{226,6},ct},{atom,{226,9},fail}},
         [{block,0,
           [{tuple,
             {226,14},
             [{atom,{226,15},unexpected},{var,{226,26},'Any'}]}]}]}]}],
     {integer,{227,11},10},
     [{debug_line,228,106},{atom,{228,6},ok}]},
    {debug_line,231,107},
    {atom,{231,5},ok}]}]}.
{function,
 {233,1},
 forms_2,1,
 [{clause,
   {233,1},
   [{var,{233,1},'_'}],
   [[{call,
      {233,1},
      {remote,{233,1},{atom,{233,1},fake},{atom,{233,1},is_beam_bif_info}},
      []}]],
   [{debug_line,233,108},{atom,{233,1},ignore}]},
  {clause,
   {233,1},
   [{var,{233,9},'Config'}],
   [[{call,
      {233,22},
      {remote,{233,22},{atom,{233,22},erlang},{atom,{233,22},is_list}},
      [{var,{233,30},'Config'}]}]],
   [{debug_line,234,109},
    {match,
     {234,5},
     {tuple,{234,5},[{var,{234,6},'Simple'},{var,{234,14},'Target'}]},
     {call,
      {234,24},
      {atom,{234,24},get_files},
      [{var,{234,34},'Config'},
       {atom,{234,42},simple},
       {block,0,[{string,{234,50},"file_1"}]}]}},
    {debug_line,235,110},
    {match,
     {235,5},
     {atom,{235,5},ok},
     {call,
      {235,10},
      {remote,{235,14},{atom,{235,10},file},{atom,{235,15},del_dir}},
      [{block,0,
        [{call,
          {235,23},
          {remote,{235,31},{atom,{235,23},filename},{atom,{235,32},dirname}},
          [{var,{235,40},'Target'}]}]}]}},
    {debug_line,237,111},
    {match,{237,5},{var,{237,5},'Src'},{var,{237,11},'Simple'}},
    {debug_line,238,112},
    {match,
     {238,5},
     {var,{238,5},'AbsSrc'},
     {call,
      {238,14},
      {remote,{238,22},{atom,{238,14},filename},{atom,{238,23},absname}},
      [{var,{238,31},'Src'}]}},
    {debug_line,239,113},
    {match,
     {239,5},
     {tuple,
      {239,5},
      [{atom,{239,6},ok},{nil,{239,9}},{var,{239,12},'SimpleCode'}]},
     {call,
      {239,26},
      {remote,{239,33},{atom,{239,26},compile},{atom,{239,34},file}},
      [{var,{239,39},'Simple'},
       {block,0,
        [{cons,
          {239,47},
          {atom,{239,48},dabstr},
          {cons,{239,55},{atom,{239,55},binary},{nil,{239,61}}}}]}]}},
    {debug_line,241,114},
    {match,
     {241,5},
     {tuple,
      {241,5},
      [{atom,{241,6},ok},{atom,{241,9},simple},{var,{241,16},'Bin1'}]},
     {call,
      {241,24},
      {remote,{241,31},{atom,{241,24},compile},{atom,{241,32},forms}},
      [{var,{241,38},'SimpleCode'},
       {block,0,
        [{cons,
          {241,50},
          {atom,{241,51},binary},
          {cons,
           {241,58},
           {tuple,{241,58},[{atom,{241,59},source},{var,{241,66},'Src'}]},
           {nil,{241,70}}}}]}]}},
    {debug_line,242,115},
    {match,
     {242,5},
     {tuple,
      {242,5},
      [{atom,{242,6},ok},{atom,{242,9},simple},{var,{242,16},'_'}]},
     {call,
      {242,21},
      {remote,{242,28},{atom,{242,21},compile},{atom,{242,29},forms}},
      [{var,{242,35},'SimpleCode'},
       {block,0,
        [{debug_line,243,116},
         {cons,
          {243,35},
          {atom,{243,36},binary},
          {cons,
           {243,43},
           {tuple,
            {243,43},
            [{atom,{243,44},error_location},{atom,{243,59},line}]},
           {cons,
            {243,65},
            {tuple,{243,65},[{atom,{243,66},source},{var,{243,73},'Src'}]},
            {nil,{243,77}}}}}]}]}},
    {debug_line,246,117},
    {match,
     {246,5},
     {tuple,
      {246,5},
      [{atom,{246,6},ok},{atom,{246,9},simple},{var,{246,16},'_'}]},
     {call,
      {246,21},
      {remote,{246,28},{atom,{246,21},compile},{atom,{246,29},forms}},
      [{var,{246,35},'SimpleCode'},{atom,{246,47},no_postopt}]}},
    {debug_line,249,118},
    {match,
     {249,5},
     {var,{249,5},'AbsSrc'},
     {call,
      {249,14},
      {atom,{249,14},forms_load_code},
      [{atom,{249,30},simple},{var,{249,38},'Src'},{var,{249,43},'Bin1'}]}},
    {debug_line,252,119},
    {match,
     {252,5},
     {var,{252,5},'PrivDir'},
     {call,
      {252,15},
      {remote,{252,24},{atom,{252,15},proplists},{atom,{252,25},get_value}},
      [{atom,{252,35},priv_dir},{var,{252,45},'Config'}]}},
    {debug_line,253,120},
    {match,
     {253,5},
     {var,{253,5},'WorkDir'},
     {call,
      {253,15},
      {remote,{253,23},{atom,{253,15},filename},{atom,{253,24},join}},
      [{var,{253,29},'PrivDir'},{atom,{253,39},forms_2}]}},
    {debug_line,254,121},
    {match,
     {254,5},
     {atom,{254,5},ok},
     {call,
      {254,10},
      {remote,{254,14},{atom,{254,10},file},{atom,{254,15},make_dir}},
      [{var,{254,24},'WorkDir'}]}},
    {debug_line,255,122},
    {match,
     {255,5},
     {atom,{255,5},ok},
     {call,
      {255,10},
      {remote,{255,14},{atom,{255,10},file},{atom,{255,15},set_cwd}},
      [{var,{255,23},'WorkDir'}]}},
    {debug_line,256,123},
    {'case',
     {256,5},
     {call,
      {256,10},
      {remote,{256,12},{atom,{256,10},os},{atom,{256,13},type}},
      []},
     [{clause,
       {257,2},
       [{tuple,{257,2},[{atom,{257,3},unix},{var,{257,8},'_'}]}],
       [],
       [{debug_line,257,124},
        {call,
         {257,14},
         {remote,{257,16},{atom,{257,14},os},{atom,{257,17},cmd}},
         [{block,0,
           [{op,
             {257,31},
             '++',
             {string,{257,21},"rm -rf "},
             {var,{257,34},'WorkDir'}}]}]}]},
      {clause,
       {258,2},
       [{var,{258,2},'_'}],
       [],
       [{debug_line,258,125},{atom,{258,7},ok}]}]},
    {debug_line,260,126},
    {match,
     {260,5},
     {tuple,
      {260,5},
      [{atom,{260,6},ok},{atom,{260,9},simple},{var,{260,16},'Bin2'}]},
     {call,
      {260,24},
      {remote,{260,31},{atom,{260,24},compile},{atom,{260,32},forms}},
      [{var,{260,38},'SimpleCode'}]}},
    {debug_line,261,127},
    {match,
     {261,5},
     {atom,{261,5},undefined},
     {call,
      {261,17},
      {atom,{261,17},forms_load_code},
      [{atom,{261,33},simple},
       {block,0,[{string,{261,41},"ignore"}]},
       {var,{261,51},'Bin2'}]}},
    {debug_line,263,128},
    {match,
     {263,5},
     {tuple,
      {263,5},
      [{atom,{263,6},ok},{atom,{263,9},simple},{var,{263,16},'Bin3'}]},
     {call,
      {263,24},
      {remote,{263,31},{atom,{263,24},compile},{atom,{263,32},forms}},
      [{var,{263,38},'SimpleCode'},
       {block,0,
        [{cons,
          {263,50},
          {tuple,{263,51},[{atom,{263,52},source},{var,{263,59},'Src'}]},
          {cons,{263,64},{atom,{263,64},report},{nil,{263,70}}}}]}]}},
    {debug_line,264,129},
    {'case',
     {264,5},
     {call,
      {264,10},
      {atom,{264,10},forms_load_code},
      [{atom,{264,26},simple},
       {block,0,[{string,{264,34},"ignore"}]},
       {var,{264,44},'Bin3'}]},
     [{clause,
       {265,2},
       [{var,{265,2},'Src'}],
       [],
       [{debug_line,266,130},{atom,{266,6},ok}]},
      {clause,
       {267,2},
       [{var,{267,2},'AbsSrc'}],
       [],
       [{debug_line,268,131},{atom,{268,6},ok}]}]},
    {debug_line,271,132},
    {match,
     {271,5},
     {tuple,
      {271,5},
      [{atom,{271,6},ok},{atom,{271,9},simple},{var,{271,16},'Core'}]},
     {call,
      {271,24},
      {remote,{271,31},{atom,{271,24},compile},{atom,{271,32},forms}},
      [{var,{271,38},'SimpleCode'},
       {block,0,
        [{cons,
          {271,50},
          {atom,{271,51},to_core0},
          {cons,{271,60},{atom,{271,60},binary},{nil,{271,66}}}}]}]}},
    {debug_line,272,133},
    {call,
     {272,5},
     {atom,{272,5},forms_compile_and_load},
     [{var,{272,28},'Core'},
      {block,0,[{cons,{272,34},{atom,{272,35},from_core},{nil,{272,44}}}]}]},
    {debug_line,274,134},
    {match,
     {274,5},
     {tuple,
      {274,5},
      [{atom,{274,6},ok},{atom,{274,9},simple},{var,{274,16},'Asm'}]},
     {call,
      {274,23},
      {remote,{274,30},{atom,{274,23},compile},{atom,{274,31},forms}},
      [{var,{274,37},'SimpleCode'},
       {block,0,
        [{cons,
          {274,49},
          {atom,{274,50},to_asm},
          {cons,{274,57},{atom,{274,57},binary},{nil,{274,63}}}}]}]}},
    {debug_line,275,135},
    {call,
     {275,5},
     {atom,{275,5},forms_compile_and_load},
     [{var,{275,28},'Asm'},
      {block,0,[{cons,{275,33},{atom,{275,34},from_asm},{nil,{275,42}}}]}]},
    {debug_line,279,136},
    {call,
     {279,5},
     {atom,{279,5},forms_compile_and_load},
     [{var,{279,28},'SimpleCode'},
      {block,0,[{cons,{279,40},{atom,{279,41},from_abstr},{nil,{279,51}}}]}]},
    {debug_line,282,137},
    {match,
     {282,5},
     {atom,{282,5},error},
     {call,
      {282,13},
      {remote,{282,20},{atom,{282,13},compile},{atom,{282,21},forms}},
      [{atom,{282,27},bad_core},
       {block,0,
        [{cons,
          {282,37},
          {atom,{282,38},from_core},
          {cons,{282,48},{atom,{282,48},report},{nil,{282,54}}}}]}]}},
    {debug_line,283,138},
    {match,
     {283,5},
     {atom,{283,5},error},
     {call,
      {283,13},
      {remote,{283,20},{atom,{283,13},compile},{atom,{283,21},forms}},
      [{atom,{283,27},bad_asm},
       {block,0,
        [{cons,
          {283,36},
          {atom,{283,37},from_asm},
          {cons,{283,46},{atom,{283,46},report},{nil,{283,52}}}}]}]}},
    {debug_line,285,139},
    {atom,{285,5},ok}]}]}.
{function,
    {288,1},
    forms_load_code,3,
    [{clause,
         {288,1},
         [{var,{288,1},'_'},{var,{288,1},'_'},{var,{288,1},'_'}],
         [[{call,
               {288,1},
               {remote,
                   {288,1},
                   {atom,{288,1},fake},
                   {atom,{288,1},is_beam_bif_info}},
               []}]],
         [{debug_line,288,140},{atom,{288,1},ignore}]},
     {clause,
         {288,1},
         [{var,{288,17},'Mod'},{var,{288,22},'Src'},{var,{288,27},'Bin'}],
         [],
         [{debug_line,289,141},
          {match,
              {289,5},
              {tuple,{289,5},[{atom,{289,6},module},{var,{289,13},'Mod'}]},
              {call,
                  {289,20},
                  {remote,
                      {289,24},
                      {atom,{289,20},code},
                      {atom,{289,25},load_binary}},
                  [{var,{289,37},'Mod'},
                   {var,{289,42},'Src'},
                   {var,{289,47},'Bin'}]}},
          {debug_line,290,142},
          {match,
              {290,5},
              {var,{290,5},'Info'},
              {call,
                  {290,12},
                  {remote,
                      {290,15},
                      {var,{290,12},'Mod'},
                      {atom,{290,16},module_info}},
                  [{atom,{290,28},compile}]}},
          {debug_line,291,143},
          {match,
              {291,5},
              {var,{291,5},'SourceOption'},
              {call,
                  {291,20},
                  {remote,
                      {291,29},
                      {atom,{291,20},proplists},
                      {atom,{291,30},get_value}},
                  [{atom,{291,40},source},{var,{291,48},'Info'}]}},
          {debug_line,294,144},
          {match,
              {294,5},
              {nil,{294,5}},
              {call,
                  {294,10},
                  {remote,
                      {294,19},
                      {atom,{294,10},proplists},
                      {atom,{294,20},get_value}},
                  [{atom,{294,30},options},{var,{294,39},'Info'}]}},
          {debug_line,297,145},
          {match,
              {297,5},
              {atom,{297,5},true},
              {call,
                  {297,12},
                  {remote,
                      {297,16},
                      {atom,{297,12},code},
                      {atom,{297,17},delete}},
                  [{atom,{297,24},simple}]}},
          {debug_line,298,146},
          {match,
              {298,5},
              {atom,{298,5},false},
              {call,
                  {298,13},
                  {remote,{298,17},{atom,{298,13},code},{atom,{298,18},purge}},
                  [{atom,{298,24},simple}]}},
          {debug_line,300,147},
          {var,{300,5},'SourceOption'}]}]}.
{function,
    {302,1},
    forms_compile_and_load,2,
    [{clause,
         {302,1},
         [{var,{302,1},'_'},{var,{302,1},'_'}],
         [[{call,
               {302,1},
               {remote,
                   {302,1},
                   {atom,{302,1},fake},
                   {atom,{302,1},is_beam_bif_info}},
               []}]],
         [{debug_line,302,148},{atom,{302,1},ignore}]},
     {clause,
         {302,1},
         [{var,{302,24},'Code'},{var,{302,30},'Opts'}],
         [],
         [{debug_line,303,149},
          {match,{303,5},{var,{303,5},'Mod'},{atom,{303,11},simple}},
          {debug_line,304,150},
          {match,
              {304,5},
              {tuple,
                  {304,5},
                  [{atom,{304,6},ok},
                   {var,{304,9},'Mod'},
                   {var,{304,13},'Bin'}]},
              {call,
                  {304,20},
                  {remote,
                      {304,27},
                      {atom,{304,20},compile},
                      {atom,{304,28},forms}},
                  [{var,{304,34},'Code'},{var,{304,40},'Opts'}]}},
          {debug_line,305,151},
          {match,
              {305,5},
              {tuple,{305,5},[{atom,{305,6},module},{var,{305,13},'Mod'}]},
              {call,
                  {305,20},
                  {remote,
                      {305,24},
                      {atom,{305,20},code},
                      {atom,{305,25},load_binary}},
                  [{var,{305,37},'Mod'},
                   {block,0,[{string,{305,42},"ignore"}]},
                   {var,{305,52},'Bin'}]}},
          {debug_line,306,152},
          {match,
              {306,5},
              {var,{306,5},'_'},
              {call,
                  {306,9},
                  {remote,
                      {306,12},
                      {var,{306,9},'Mod'},
                      {atom,{306,13},module_info}},
                  []}},
          {debug_line,307,153},
          {match,
              {307,5},
              {atom,{307,5},true},
              {call,
                  {307,12},
                  {remote,
                      {307,16},
                      {atom,{307,12},code},
                      {atom,{307,17},delete}},
                  [{atom,{307,24},simple}]}},
          {debug_line,308,154},
          {match,
              {308,5},
              {atom,{308,5},false},
              {call,
                  {308,13},
                  {remote,{308,17},{atom,{308,13},code},{atom,{308,18},purge}},
                  [{atom,{308,24},simple}]}},
          {debug_line,309,155},
          {atom,{309,5},ok}]}]}.
{function,
 {311,1},
 module_mismatch,1,
 [{clause,
   {311,1},
   [{var,{311,1},'_'}],
   [[{call,
      {311,1},
      {remote,{311,1},{atom,{311,1},fake},{atom,{311,1},is_beam_bif_info}},
      []}]],
   [{debug_line,311,156},{atom,{311,1},ignore}]},
  {clause,
   {311,1},
   [{var,{311,17},'Config'}],
   [[{call,
      {311,30},
      {remote,{311,30},{atom,{311,30},erlang},{atom,{311,30},is_list}},
      [{var,{311,38},'Config'}]}]],
   [{debug_line,312,157},
    {match,
     {312,5},
     {var,{312,5},'DataDir'},
     {call,
      {312,15},
      {remote,{312,24},{atom,{312,15},proplists},{atom,{312,25},get_value}},
      [{atom,{312,35},data_dir},{var,{312,45},'Config'}]}},
    {debug_line,313,158},
    {match,
     {313,5},
     {var,{313,5},'File'},
     {call,
      {313,12},
      {remote,{313,20},{atom,{313,12},filename},{atom,{313,21},join}},
      [{var,{313,26},'DataDir'},
       {block,0,[{string,{313,35},"wrong_module_name.erl"}]}]}},
    {debug_line,314,159},
    {match,
     {314,5},
     {tuple,
      {314,5},
      [{atom,{314,6},error},
       {cons,
        {314,12},
        {tuple,
         {314,13},
         [{string,{314,14},"wrong_module_name.beam"},
          {cons,
           {315,7},
           {tuple,
            {315,8},
            [{atom,{315,9},none},
             {atom,{315,14},compile},
             {tuple,
              {315,22},
              [{atom,{315,23},module_name},
               {atom,{315,35},arne},
               {string,{315,40},"wrong_module_name"}]}]},
           {nil,{315,61}}}]},
        {nil,{315,63}}},
       {nil,{316,5}}]},
     {call,
      {316,11},
      {remote,{316,18},{atom,{316,11},compile},{atom,{316,19},file}},
      [{var,{316,24},'File'},
       {block,0,
        [{debug_line,316,160},
         {cons,{316,30},{atom,{316,31},return},{nil,{316,37}}}]}]}},
    {debug_line,317,161},
    {match,
     {317,5},
     {atom,{317,5},error},
     {call,
      {317,13},
      {remote,{317,20},{atom,{317,13},compile},{atom,{317,21},file}},
      [{var,{317,26},'File'},
       {block,0,[{cons,{317,32},{atom,{317,33},report},{nil,{317,39}}}]}]}},
    {debug_line,319,162},
    {match,
     {319,5},
     {tuple,{319,5},[{atom,{319,6},ok},{atom,{319,9},arne},{nil,{319,14}}]},
     {call,
      {319,20},
      {remote,{319,27},{atom,{319,20},compile},{atom,{319,28},file}},
      [{var,{319,33},'File'},
       {block,0,
        [{debug_line,320,163},
         {cons,
          {320,11},
          {atom,{320,12},return},
          {cons,
           {320,19},
           {atom,{320,19},no_error_module_mismatch},
           {nil,{320,43}}}}]}]}},
    {debug_line,322,164},
    {atom,{322,5},ok}]}]}.
{function,
 {326,1},
 outdir,1,
 [{clause,
   {326,1},
   [{var,{326,1},'_'}],
   [[{call,
      {326,1},
      {remote,{326,1},{atom,{326,1},fake},{atom,{326,1},is_beam_bif_info}},
      []}]],
   [{debug_line,326,165},{atom,{326,1},ignore}]},
  {clause,
   {326,1},
   [{var,{326,8},'Config'}],
   [[{call,
      {326,21},
      {remote,{326,21},{atom,{326,21},erlang},{atom,{326,21},is_list}},
      [{var,{326,29},'Config'}]}]],
   [{debug_line,327,166},
    {match,
     {327,5},
     {tuple,{327,5},[{var,{327,6},'Simple'},{var,{327,14},'Target'}]},
     {call,
      {327,24},
      {atom,{327,24},get_files},
      [{var,{327,34},'Config'},
       {atom,{327,42},simple},
       {block,0,[{string,{327,50},"outdir"}]}]}},
    {debug_line,328,167},
    {match,
     {328,5},
     {tuple,{328,5},[{atom,{328,6},ok},{atom,{328,10},simple}]},
     {call,
      {328,20},
      {remote,{328,27},{atom,{328,20},compile},{atom,{328,28},file}},
      [{var,{328,33},'Simple'},
       {block,0,
        [{cons,
          {328,41},
          {tuple,
           {328,42},
           [{atom,{328,43},outdir},
            {call,
             {328,51},
             {remote,
              {328,59},
              {atom,{328,51},filename},
              {atom,{328,60},dirname}},
             [{var,{328,68},'Target'}]}]},
          {nil,{328,76}}}]}]}},
    {debug_line,329,168},
    {match,
     {329,5},
     {atom,{329,5},true},
     {call,{329,12},{atom,{329,12},exists},[{var,{329,19},'Target'}]}},
    {debug_line,330,169},
    {match,
     {330,5},
     {atom,{330,5},passed},
     {call,
      {330,14},
      {atom,{330,14},run},
      [{var,{330,18},'Target'},{atom,{330,26},test},{nil,{330,32}}]}},
    {debug_line,331,170},
    {match,
     {331,5},
     {atom,{331,5},ok},
     {call,
      {331,10},
      {remote,{331,14},{atom,{331,10},file},{atom,{331,15},delete}},
      [{var,{331,22},'Target'}]}},
    {debug_line,332,171},
    {match,
     {332,5},
     {atom,{332,5},ok},
     {call,
      {332,10},
      {remote,{332,14},{atom,{332,10},file},{atom,{332,15},del_dir}},
      [{block,0,
        [{call,
          {332,23},
          {remote,{332,31},{atom,{332,23},filename},{atom,{332,32},dirname}},
          [{var,{332,40},'Target'}]}]}]}},
    {debug_line,333,172},
    {atom,{333,5},ok}]}]}.
{function,
    {337,1},
    binary,1,
    [{clause,
         {337,1},
         [{var,{337,1},'_'}],
         [[{call,
               {337,1},
               {remote,
                   {337,1},
                   {atom,{337,1},fake},
                   {atom,{337,1},is_beam_bif_info}},
               []}]],
         [{debug_line,337,173},{atom,{337,1},ignore}]},
     {clause,
         {337,1},
         [{var,{337,8},'Config'}],
         [[{call,
               {337,21},
               {remote,
                   {337,21},
                   {atom,{337,21},erlang},
                   {atom,{337,21},is_list}},
               [{var,{337,29},'Config'}]}]],
         [{debug_line,338,174},
          {match,
              {338,5},
              {tuple,{338,5},[{var,{338,6},'Simple'},{var,{338,14},'Target'}]},
              {call,
                  {338,24},
                  {atom,{338,24},get_files},
                  [{var,{338,34},'Config'},
                   {atom,{338,42},simple},
                   {block,0,[{string,{338,50},"binary"}]}]}},
          {debug_line,339,175},
          {match,
              {339,5},
              {tuple,
                  {339,5},
                  [{atom,{339,6},ok},
                   {atom,{339,10},simple},
                   {var,{339,18},'Binary'}]},
              {call,
                  {339,28},
                  {remote,
                      {339,35},
                      {atom,{339,28},compile},
                      {atom,{339,36},file}},
                  [{var,{339,41},'Simple'},
                   {block,0,
                       [{cons,
                            {339,49},
                            {atom,{339,50},binary},
                            {nil,{339,56}}}]}]}},
          {debug_line,340,176},
          {call,
              {340,5},
              {remote,{340,9},{atom,{340,5},code},{atom,{340,10},load_binary}},
              [{atom,{340,22},simple},
               {var,{340,30},'Target'},
               {var,{340,38},'Binary'}]},
          {debug_line,341,177},
          {match,
              {341,5},
              {atom,{341,5},passed},
              {call,
                  {341,14},
                  {remote,
                      {341,20},
                      {atom,{341,14},simple},
                      {atom,{341,21},test}},
                  []}},
          {debug_line,342,178},
          {match,
              {342,5},
              {atom,{342,5},true},
              {call,
                  {342,12},
                  {remote,
                      {342,16},
                      {atom,{342,12},code},
                      {atom,{342,17},delete}},
                  [{atom,{342,24},simple}]}},
          {debug_line,343,179},
          {match,
              {343,5},
              {atom,{343,5},false},
              {call,
                  {343,13},
                  {remote,{343,17},{atom,{343,13},code},{atom,{343,18},purge}},
                  [{atom,{343,24},simple}]}},
          {debug_line,344,180},
          {match,
              {344,5},
              {atom,{344,5},ok},
              {call,
                  {344,10},
                  {remote,
                      {344,14},
                      {atom,{344,10},file},
                      {atom,{344,15},del_dir}},
                  [{block,0,
                       [{call,
                            {344,23},
                            {remote,
                                {344,31},
                                {atom,{344,23},filename},
                                {atom,{344,32},dirname}},
                            [{var,{344,40},'Target'}]}]}]}},
          {debug_line,345,181},
          {atom,{345,5},ok}]}]}.
{function,
 {349,1},
 makedep,1,
 [{clause,
   {349,1},
   [{var,{349,1},'_'}],
   [[{call,
      {349,1},
      {remote,{349,1},{atom,{349,1},fake},{atom,{349,1},is_beam_bif_info}},
      []}]],
   [{debug_line,349,182},{atom,{349,1},ignore}]},
  {clause,
   {349,1},
   [{var,{349,9},'Config'}],
   [[{call,
      {349,22},
      {remote,{349,22},{atom,{349,22},erlang},{atom,{349,22},is_list}},
      [{var,{349,30},'Config'}]}]],
   [{debug_line,350,183},
    {match,
     {350,5},
     {var,{350,5},'DataDir'},
     {call,
      {350,15},
      {remote,{350,24},{atom,{350,15},proplists},{atom,{350,25},get_value}},
      [{atom,{350,35},data_dir},{var,{350,45},'Config'}]}},
    {debug_line,351,184},
    {match,
     {351,5},
     {var,{351,5},'PrivDir'},
     {call,
      {351,15},
      {remote,{351,24},{atom,{351,15},proplists},{atom,{351,25},get_value}},
      [{atom,{351,35},priv_dir},{var,{351,45},'Config'}]}},
    {debug_line,353,185},
    {match,
     {353,5},
     {tuple,{353,5},[{var,{353,6},'Simple'},{var,{353,13},'Target'}]},
     {call,
      {353,23},
      {atom,{353,23},get_files},
      [{var,{353,33},'Config'},
       {atom,{353,41},simple},
       {block,0,[{string,{353,49},"makedep"}]}]}},
    {debug_line,354,186},
    {match,
     {354,5},
     {var,{354,5},'SimpleRootname'},
     {call,
      {354,22},
      {remote,{354,30},{atom,{354,22},filename},{atom,{354,31},rootname}},
      [{var,{354,40},'Simple'}]}},
    {debug_line,355,187},
    {match,
     {355,5},
     {var,{355,5},'IncludeDir'},
     {call,
      {355,18},
      {remote,{355,26},{atom,{355,18},filename},{atom,{355,27},join}},
      [{block,0,
        [{call,
          {355,32},
          {remote,{355,40},{atom,{355,32},filename},{atom,{355,41},dirname}},
          [{var,{355,49},'Simple'}]}]},
       {block,0,[{string,{355,58},"include"}]}]}},
    {debug_line,356,188},
    {match,
     {356,5},
     {var,{356,5},'IncludeOptions'},
     {cons,
      {356,22},
      {tuple,{357,9},[{atom,{357,10},d},{atom,{357,12},need_foo}]},
      {cons,
       {358,9},
       {tuple,
        {358,9},
        [{atom,{358,10},d},{atom,{358,12},foo_value},{integer,{358,22},42}]},
       {cons,
        {359,9},
        {tuple,{359,9},[{atom,{359,10},d},{atom,{359,12},include_generated}]},
        {cons,
         {360,9},
         {tuple,{360,9},[{atom,{360,10},i},{var,{360,12},'IncludeDir'}]},
         {nil,{361,8}}}}}}},
    {debug_line,364,189},
    {match,
     {364,5},
     {var,{364,5},'BasicMf1Name'},
     {op,
      {364,35},
      '++',
      {var,{364,20},'SimpleRootname'},
      {string,{364,38},"-basic1.mk"}}},
    {debug_line,365,190},
    {match,
     {365,5},
     {tuple,{365,5},[{atom,{365,6},ok},{var,{365,9},'BasicMf1'}]},
     {call,
      {365,21},
      {remote,{365,25},{atom,{365,21},file},{atom,{365,26},read_file}},
      [{var,{365,36},'BasicMf1Name'}]}},
    {debug_line,366,191},
    {match,
     {366,5},
     {tuple,
      {366,5},
      [{atom,{366,6},ok},{var,{366,9},'_'},{var,{366,11},'Mf1'}]},
     {call,
      {366,18},
      {remote,{366,25},{atom,{366,18},compile},{atom,{366,26},file}},
      [{var,{366,31},'Simple'},
       {block,0,
        [{cons,
          {366,39},
          {atom,{366,40},binary},
          {cons,{366,47},{atom,{366,47},makedep},{nil,{366,54}}}}]}]}},
    {debug_line,367,192},
    {match,
     {367,5},
     {var,{367,5},'BasicMf1'},
     {call,
      {367,16},
      {atom,{367,16},makedep_canonicalize_result},
      [{var,{367,44},'Mf1'},{var,{367,49},'DataDir'}]}},
    {debug_line,370,193},
    {match,
     {370,5},
     {var,{370,5},'BasicMf2Name'},
     {op,
      {370,35},
      '++',
      {var,{370,20},'SimpleRootname'},
      {string,{370,38},"-basic2.mk"}}},
    {debug_line,371,194},
    {match,
     {371,5},
     {tuple,{371,5},[{atom,{371,6},ok},{var,{371,9},'BasicMf2'}]},
     {call,
      {371,21},
      {remote,{371,25},{atom,{371,21},file},{atom,{371,26},read_file}},
      [{var,{371,36},'BasicMf2Name'}]}},
    {debug_line,372,195},
    {match,
     {372,5},
     {tuple,
      {372,5},
      [{atom,{372,6},ok},{var,{372,9},'_'},{var,{372,11},'Mf2'}]},
     {call,
      {372,18},
      {remote,{372,25},{atom,{372,18},compile},{atom,{372,26},file}},
      [{var,{372,31},'Simple'},
       {block,0,
        [{cons,
          {372,39},
          {atom,{372,40},binary},
          {cons,
           {372,47},
           {atom,{372,47},makedep},
           {var,{372,55},'IncludeOptions'}}}]}]}},
    {debug_line,373,196},
    {match,
     {373,5},
     {var,{373,5},'BasicMf2'},
     {call,
      {373,16},
      {atom,{373,16},makedep_canonicalize_result},
      [{var,{373,44},'Mf2'},{var,{373,49},'DataDir'}]}},
    {debug_line,376,197},
    {match,
     {376,5},
     {var,{376,5},'MissingMfName'},
     {op,
      {376,36},
      '++',
      {var,{376,21},'SimpleRootname'},
      {string,{376,39},"-missing.mk"}}},
    {debug_line,377,198},
    {match,
     {377,5},
     {tuple,{377,5},[{atom,{377,6},ok},{var,{377,9},'MissingMf'}]},
     {call,
      {377,22},
      {remote,{377,26},{atom,{377,22},file},{atom,{377,27},read_file}},
      [{var,{377,37},'MissingMfName'}]}},
    {debug_line,378,199},
    {match,
     {378,5},
     {tuple,
      {378,5},
      [{atom,{378,6},ok},{var,{378,9},'_'},{var,{378,11},'Mf3'}]},
     {call,
      {378,18},
      {remote,{378,25},{atom,{378,18},compile},{atom,{378,26},file}},
      [{var,{378,31},'Simple'},
       {block,0,
        [{debug_line,379,200},
         {cons,
          {379,7},
          {atom,{379,8},binary},
          {cons,
           {379,15},
           {atom,{379,15},makedep},
           {cons,
            {379,23},
            {atom,{379,23},makedep_add_missing},
            {var,{379,43},'IncludeOptions'}}}}]}]}},
    {debug_line,380,201},
    {match,
     {380,5},
     {var,{380,5},'MissingMf'},
     {call,
      {380,17},
      {atom,{380,17},makedep_canonicalize_result},
      [{var,{380,45},'Mf3'},{var,{380,50},'DataDir'}]}},
    {debug_line,383,202},
    {match,
     {383,5},
     {var,{383,5},'TargetMf1Name'},
     {op,
      {383,36},
      '++',
      {var,{383,21},'SimpleRootname'},
      {string,{383,39},"-target1.mk"}}},
    {debug_line,384,203},
    {match,
     {384,5},
     {tuple,{384,5},[{atom,{384,6},ok},{var,{384,9},'TargetMf1'}]},
     {call,
      {384,22},
      {remote,{384,26},{atom,{384,22},file},{atom,{384,27},read_file}},
      [{var,{384,37},'TargetMf1Name'}]}},
    {debug_line,385,204},
    {match,
     {385,5},
     {tuple,
      {385,5},
      [{atom,{385,6},ok},{var,{385,9},'_'},{var,{385,11},'Mf4'}]},
     {call,
      {385,18},
      {remote,{385,25},{atom,{385,18},compile},{atom,{385,26},file}},
      [{var,{385,31},'Simple'},
       {block,0,
        [{debug_line,386,205},
         {cons,
          {386,7},
          {atom,{386,8},binary},
          {cons,
           {386,15},
           {atom,{386,15},makedep},
           {cons,
            {386,23},
            {tuple,
             {386,23},
             [{atom,{386,24},makedep_target},{string,{386,39},"$target"}]},
            {var,{386,50},'IncludeOptions'}}}}]}]}},
    {debug_line,387,206},
    {match,
     {387,5},
     {var,{387,5},'TargetMf1'},
     {call,
      {387,17},
      {atom,{387,17},makedep_modify_target},
      [{block,0,
        [{debug_line,388,207},
         {call,
          {388,7},
          {atom,{388,7},makedep_canonicalize_result},
          [{var,{388,35},'Mf4'},{var,{388,40},'DataDir'}]}]},
       {block,0,[{string,{388,50},"$$target"}]}]}},
    {debug_line,391,208},
    {match,
     {391,5},
     {var,{391,5},'TargetMf2Name'},
     {op,
      {391,36},
      '++',
      {var,{391,21},'SimpleRootname'},
      {string,{391,39},"-target2.mk"}}},
    {debug_line,392,209},
    {match,
     {392,5},
     {tuple,{392,5},[{atom,{392,6},ok},{var,{392,9},'TargetMf2'}]},
     {call,
      {392,22},
      {remote,{392,26},{atom,{392,22},file},{atom,{392,27},read_file}},
      [{var,{392,37},'TargetMf2Name'}]}},
    {debug_line,393,210},
    {match,
     {393,5},
     {tuple,
      {393,5},
      [{atom,{393,6},ok},{var,{393,9},'_'},{var,{393,11},'Mf5'}]},
     {call,
      {393,18},
      {remote,{393,25},{atom,{393,18},compile},{atom,{393,26},file}},
      [{var,{393,31},'Simple'},
       {block,0,
        [{debug_line,394,211},
         {cons,
          {394,7},
          {atom,{394,8},binary},
          {cons,
           {394,15},
           {atom,{394,15},makedep},
           {cons,
            {394,23},
            {tuple,
             {394,23},
             [{atom,{394,24},makedep_target},{string,{394,39},"$target"}]},
            {cons,
             {394,50},
             {atom,{394,50},makedep_quote_target},
             {var,{395,9},'IncludeOptions'}}}}}]}]}},
    {debug_line,396,212},
    {match,
     {396,5},
     {var,{396,5},'TargetMf2'},
     {call,
      {396,17},
      {atom,{396,17},makedep_modify_target},
      [{block,0,
        [{debug_line,397,213},
         {call,
          {397,7},
          {atom,{397,7},makedep_canonicalize_result},
          [{var,{397,35},'Mf5'},{var,{397,40},'DataDir'}]}]},
       {block,0,[{string,{397,50},"$$target"}]}]}},
    {debug_line,400,214},
    {match,
     {400,5},
     {tuple,{400,5},[{atom,{400,6},ok},{var,{400,9},'_'}]},
     {call,
      {400,14},
      {remote,{400,21},{atom,{400,14},compile},{atom,{400,22},file}},
      [{var,{400,27},'Simple'},
       {block,0,
        [{debug_line,401,215},
         {cons,
          {401,7},
          {atom,{401,8},makedep},
          {cons,
           {401,16},
           {tuple,
            {401,16},
            [{atom,{401,17},makedep_output},{var,{401,32},'Target'}]},
           {var,{401,40},'IncludeOptions'}}}]}]}},
    {debug_line,402,216},
    {match,
     {402,5},
     {tuple,{402,5},[{atom,{402,6},ok},{var,{402,9},'Mf6'}]},
     {call,
      {402,16},
      {remote,{402,20},{atom,{402,16},file},{atom,{402,21},read_file}},
      [{var,{402,31},'Target'}]}},
    {debug_line,403,217},
    {match,
     {403,5},
     {var,{403,5},'BasicMf2'},
     {call,
      {403,16},
      {atom,{403,16},makedep_canonicalize_result},
      [{var,{403,44},'Mf6'},{var,{403,49},'DataDir'}]}},
    {debug_line,406,218},
    {match,
     {406,5},
     {var,{406,5},'PhonyMfName'},
     {op,
      {406,34},
      '++',
      {var,{406,19},'SimpleRootname'},
      {string,{406,37},"-phony.mk"}}},
    {debug_line,407,219},
    {match,
     {407,5},
     {tuple,{407,5},[{atom,{407,6},ok},{var,{407,9},'PhonyMf'}]},
     {call,
      {407,20},
      {remote,{407,24},{atom,{407,20},file},{atom,{407,25},read_file}},
      [{var,{407,35},'PhonyMfName'}]}},
    {debug_line,408,220},
    {match,
     {408,5},
     {tuple,
      {408,5},
      [{atom,{408,6},ok},{var,{408,9},'_'},{var,{408,11},'Mf7'}]},
     {call,
      {408,18},
      {remote,{408,25},{atom,{408,18},compile},{atom,{408,26},file}},
      [{var,{408,31},'Simple'},
       {block,0,
        [{debug_line,409,221},
         {cons,
          {409,7},
          {atom,{409,8},binary},
          {cons,
           {409,15},
           {atom,{409,15},makedep},
           {cons,
            {409,23},
            {atom,{409,23},makedep_phony},
            {var,{409,37},'IncludeOptions'}}}}]}]}},
    {debug_line,410,222},
    {match,
     {410,5},
     {var,{410,5},'PhonyMf'},
     {call,
      {410,15},
      {atom,{410,15},makedep_canonicalize_result},
      [{var,{410,43},'Mf7'},{var,{410,48},'DataDir'}]}},
    {debug_line,413,223},
    {match,
     {413,5},
     {tuple,{413,5},[{atom,{413,6},ok},{var,{413,9},'_'}]},
     {call,
      {413,14},
      {remote,{413,21},{atom,{413,14},compile},{atom,{413,22},file}},
      [{var,{413,27},'Simple'},
       {block,0,
        [{cons,
          {413,35},
          {atom,{413,36},makedep},
          {var,{413,44},'IncludeOptions'}}]}]}},
    {debug_line,414,224},
    {match,
     {414,5},
     {tuple,{414,5},[{atom,{414,6},ok},{var,{414,9},'Mf8'}]},
     {call,
      {414,16},
      {remote,{414,20},{atom,{414,16},file},{atom,{414,21},read_file}},
      [{var,{414,31},'Target'}]}},
    {debug_line,415,225},
    {match,
     {415,5},
     {var,{415,5},'BasicMf2'},
     {call,
      {415,16},
      {atom,{415,16},makedep_canonicalize_result},
      [{var,{415,44},'Mf8'},{var,{415,49},'DataDir'}]}},
    {debug_line,418,226},
    {match,
     {418,5},
     {var,{418,5},'GeneratedHrl'},
     {call,
      {418,20},
      {remote,{418,28},{atom,{418,20},filename},{atom,{418,29},join}},
      [{var,{418,34},'PrivDir'},
       {block,0,[{string,{418,43},"generated.hrl"}]}]}},
    {debug_line,419,227},
    {match,
     {419,5},
     {var,{419,5},'GeneratedDoc'},
     {call,
      {419,20},
      {remote,{419,28},{atom,{419,20},filename},{atom,{419,29},join}},
      [{block,0,
        [{call,
          {419,34},
          {remote,
           {419,43},
           {atom,{419,34},proplists},
           {atom,{419,44},get_value}},
          [{atom,{419,54},data_dir},{var,{419,64},'Config'}]}]},
       {block,0,[{string,{419,73},"foo.md"}]}]}},
    {debug_line,420,228},
    {'try',
     {420,5},
     [{debug_line,421,229},
      {match,
       {421,9},
       {atom,{421,9},ok},
       {call,
        {421,14},
        {remote,{421,18},{atom,{421,14},file},{atom,{421,19},write_file}},
        [{var,{421,30},'GeneratedHrl'},{block,0,[{string,{421,44},[]}]}]}},
      {debug_line,422,230},
      {match,
       {422,9},
       {atom,{422,9},ok},
       {call,
        {422,14},
        {remote,{422,18},{atom,{422,14},file},{atom,{422,19},write_file}},
        [{var,{422,30},'GeneratedDoc'},{block,0,[{string,{422,44},[]}]}]}},
      {debug_line,423,231},
      {match,
       {423,9},
       {tuple,{423,9},[{atom,{423,10},ok},{atom,{423,13},simple}]},
       {call,
        {423,23},
        {remote,{423,30},{atom,{423,23},compile},{atom,{423,31},file}},
        [{var,{423,36},'Simple'},
         {block,0,
          [{cons,
            {423,44},
            {atom,{423,45},report},
            {cons,
             {423,52},
             {atom,{423,52},makedep_side_effect},
             {cons,
              {424,45},
              {tuple,
               {424,45},
               [{atom,{424,46},makedep_output},{var,{424,61},'Target'}]},
              {cons,
               {425,45},
               {tuple,{425,45},[{atom,{425,46},i},{var,{425,48},'PrivDir'}]},
               {var,{425,57},'IncludeOptions'}}}}}]}]}},
      {debug_line,426,232},
      {match,
       {426,9},
       {tuple,{426,9},[{atom,{426,10},ok},{var,{426,13},'Mf9'}]},
       {call,
        {426,20},
        {remote,{426,24},{atom,{426,20},file},{atom,{426,25},read_file}},
        [{var,{426,35},'Target'}]}},
      {debug_line,427,233},
      {match,
       {427,9},
       {var,{427,9},'BasicMf3'},
       {call,
        {427,20},
        {remote,
         {427,20},
         {atom,{427,20},erlang},
         {atom,{427,20},iolist_to_binary}},
        [{block,0,
          [{cons,
            {427,37},
            {call,
             {427,38},
             {remote,{427,44},{atom,{427,38},string},{atom,{427,45},trim}},
             [{var,{427,50},'BasicMf2'}]},
            {cons,
             {427,61},
             {string,{427,61}," $(srcdir)/foo.md "},
             {cons,
              {427,83},
              {call,
               {427,83},
               {remote,{427,91},{atom,{427,83},filename},{atom,{427,92},join}},
               [{var,{427,97},'PrivDir'},
                {block,0,[{string,{427,106},"generated.hrl"}]}]},
              {cons,{427,124},{string,{427,124},"\n"},{nil,{427,128}}}}}}]}]}},
      {debug_line,428,234},
      {match,
       {428,9},
       {var,{428,9},'BasicMf3'},
       {call,
        {428,20},
        {atom,{428,20},makedep_canonicalize_result},
        [{var,{428,48},'Mf9'},{var,{428,53},'DataDir'}]}},
      {debug_line,429,235},
      {match,
       {429,9},
       {atom,{429,9},error},
       {call,
        {429,17},
        {remote,{429,24},{atom,{429,17},compile},{atom,{429,25},file}},
        [{var,{429,30},'Simple'},
         {block,0,
          [{cons,
            {429,38},
            {atom,{429,39},report},
            {cons,
             {429,46},
             {atom,{429,46},makedep_side_effect},
             {cons,
              {430,39},
              {tuple,
               {430,39},
               [{atom,{430,40},makedep_output},{var,{430,55},'PrivDir'}]},
              {var,{430,64},'IncludeOptions'}}}}]}]}}],
     [],[],
     [{debug_line,432,236},
      {match,
       {432,9},
       {atom,{432,9},ok},
       {call,
        {432,14},
        {remote,{432,18},{atom,{432,14},file},{atom,{432,19},delete}},
        [{var,{432,26},'GeneratedHrl'}]}},
      {debug_line,433,237},
      {match,
       {433,9},
       {atom,{433,9},ok},
       {call,
        {433,14},
        {remote,{433,18},{atom,{433,14},file},{atom,{433,19},delete}},
        [{var,{433,26},'GeneratedDoc'}]}}]},
    {debug_line,437,238},
    {match,
     {437,5},
     {var,{437,5},'CompileModule'},
     {call,
      {437,21},
      {remote,{437,29},{atom,{437,21},filename},{atom,{437,30},join}},
      [{block,0,
        [{call,
          {437,35},
          {remote,{437,39},{atom,{437,35},code},{atom,{437,40},lib_dir}},
          [{atom,{437,48},compiler}]}]},
       {block,0,[{string,{437,59},"src/compile.erl"}]}]}},
    {debug_line,438,239},
    {match,
     {438,5},
     {tuple,{438,5},[{atom,{438,6},ok},{var,{438,9},'_'}]},
     {call,
      {438,14},
      {remote,{438,21},{atom,{438,14},compile},{atom,{438,22},file}},
      [{var,{438,27},'CompileModule'},
       {block,0,
        [{cons,
          {438,42},
          {atom,{438,43},report},
          {cons,
           {439,43},
           {atom,{439,43},makedep},
           {cons,
            {439,51},
            {tuple,
             {439,51},
             [{atom,{439,52},makedep_output},{atom,{439,67},standard_io}]},
            {cons,
             {440,43},
             {tuple,
              {440,43},
              [{atom,{440,44},i},
               {call,
                {440,46},
                {remote,
                 {440,54},
                 {atom,{440,46},filename},
                 {atom,{440,55},join}},
                [{block,0,
                  [{debug_line,440,240},
                   {call,
                    {440,60},
                    {remote,
                     {440,64},
                     {atom,{440,60},code},
                     {atom,{440,65},lib_dir}},
                    [{atom,{440,73},stdlib}]}]},
                 {block,0,[{string,{440,82},"include"}]}]}]},
             {nil,{440,93}}}}}}]}]}},
    {debug_line,443,241},
    {match,
     {443,5},
     {tuple,{443,5},[{atom,{443,6},ok},{var,{443,9},'_'}]},
     {call,
      {443,14},
      {remote,{443,21},{atom,{443,14},compile},{atom,{443,22},file}},
      [{var,{443,27},'Simple'},
       {block,0,
        [{cons,
          {443,35},
          {atom,{443,36},makedep},
          {cons,
           {443,44},
           {tuple,
            {443,44},
            [{atom,{443,45},makedep_output},{atom,{443,60},standard_io}]},
           {var,{443,73},'IncludeOptions'}}}]}]}},
    {debug_line,446,242},
    {match,
     {446,5},
     {atom,{446,5},error},
     {call,
      {446,13},
      {remote,{446,20},{atom,{446,13},compile},{atom,{446,21},file}},
      [{var,{446,26},'Simple'},
       {block,0,
        [{cons,
          {446,34},
          {atom,{446,35},report},
          {cons,
           {446,42},
           {atom,{446,42},makedep},
           {cons,
            {446,50},
            {tuple,
             {446,50},
             [{atom,{446,51},makedep_output},{var,{446,66},'DataDir'}]},
            {nil,{446,74}}}}}]}]}},
    {debug_line,447,243},
    {match,
     {447,5},
     {atom,{447,5},error},
     {call,
      {447,13},
      {remote,{447,20},{atom,{447,13},compile},{atom,{447,21},file}},
      [{var,{447,26},'Simple'},
       {block,0,
        [{cons,
          {447,34},
          {atom,{447,35},report},
          {cons,
           {447,42},
           {atom,{447,42},makedep},
           {cons,
            {447,50},
            {tuple,
             {447,50},
             [{atom,{447,51},makedep_output},
              {atom,{447,66},a_bad_output_device}]},
            {nil,{447,86}}}}}]}]}},
    {debug_line,449,244},
    {match,
     {449,5},
     {atom,{449,5},ok},
     {call,
      {449,10},
      {remote,{449,14},{atom,{449,10},file},{atom,{449,15},delete}},
      [{var,{449,22},'Target'}]}},
    {debug_line,450,245},
    {match,
     {450,5},
     {atom,{450,5},ok},
     {call,
      {450,10},
      {remote,{450,14},{atom,{450,10},file},{atom,{450,15},del_dir}},
      [{block,0,
        [{call,
          {450,23},
          {remote,{450,31},{atom,{450,23},filename},{atom,{450,32},dirname}},
          [{var,{450,40},'Target'}]}]}]}},
    {debug_line,451,246},
    {atom,{451,5},ok}]}]}.
{function,
 {453,1},
 makedep_canonicalize_result,2,
 [{clause,
   {453,1},
   [{var,{453,1},'_'},{var,{453,1},'_'}],
   [[{call,
      {453,1},
      {remote,{453,1},{atom,{453,1},fake},{atom,{453,1},is_beam_bif_info}},
      []}]],
   [{debug_line,453,247},{atom,{453,1},ignore}]},
  {clause,
   {453,1},
   [{var,{453,29},'Mf'},{var,{453,33},'DataDir'}],
   [],
   [{debug_line,454,248},
    {match,
     {454,5},
     {var,{454,5},'Mf0'},
     {call,
      {454,11},
      {remote,{454,11},{atom,{454,11},erlang},{atom,{454,11},binary_to_list}},
      [{var,{454,26},'Mf'}]}},
    {debug_line,456,249},
    {match,
     {456,5},
     {var,{456,5},'Mf1'},
     {call,
      {456,11},
      {remote,{456,13},{atom,{456,11},re},{atom,{456,14},replace}},
      [{var,{456,22},'Mf0'},
       {var,{456,27},'DataDir'},
       {block,0,[{string,{456,36},"$(srcdir)/"}]},
       {block,0,
        [{debug_line,457,250},
         {cons,
          {457,7},
          {atom,{457,8},global},
          {cons,
           {457,15},
           {atom,{457,15},multiline},
           {cons,
            {457,25},
            {tuple,{457,25},[{atom,{457,26},return},{atom,{457,33},list}]},
            {nil,{457,38}}}}}]}]}},
    {debug_line,459,251},
    {match,
     {459,5},
     {var,{459,5},'Mf2'},
     {call,
      {459,11},
      {remote,{459,13},{atom,{459,11},re},{atom,{459,14},replace}},
      [{var,{459,22},'Mf1'},
       {block,0,[{string,{459,27},"\\\\\n  "}]},
       {block,0,[{string,{459,39},[]}]},
       {block,0,
        [{cons,
          {459,43},
          {atom,{459,44},global},
          {cons,
           {459,51},
           {atom,{459,51},multiline},
           {cons,
            {459,61},
            {tuple,{459,61},[{atom,{459,62},return},{atom,{459,69},list}]},
            {nil,{459,74}}}}}]}]}},
    {debug_line,460,252},
    {call,
     {460,5},
     {remote,{460,5},{atom,{460,5},erlang},{atom,{460,5},list_to_binary}},
     [{var,{460,20},'Mf2'}]}]}]}.
{function,
    {462,1},
    makedep_modify_target,2,
    [{clause,
         {462,1},
         [{var,{462,1},'_'},{var,{462,1},'_'}],
         [[{call,
               {462,1},
               {remote,
                   {462,1},
                   {atom,{462,1},fake},
                   {atom,{462,1},is_beam_bif_info}},
               []}]],
         [{debug_line,462,253},{atom,{462,1},ignore}]},
     {clause,
         {462,1},
         [{var,{462,23},'Mf'},{var,{462,27},'Target'}],
         [],
         [{debug_line,463,254},
          {match,
              {463,5},
              {var,{463,5},'Mf0'},
              {call,
                  {463,11},
                  {remote,
                      {463,11},
                      {atom,{463,11},erlang},
                      {atom,{463,11},binary_to_list}},
                  [{var,{463,26},'Mf'}]}},
          {debug_line,464,255},
          {match,
              {464,5},
              {var,{464,5},'Mf1'},
              {call,
                  {464,11},
                  {remote,{464,13},{atom,{464,11},re},{atom,{464,14},replace}},
                  [{var,{464,22},'Mf0'},
                   {var,{464,27},'Target'},
                   {block,0,[{string,{464,35},"$target"}]},
                   {block,0,
                       [{cons,
                            {464,46},
                            {tuple,
                                {464,47},
                                [{atom,{464,48},return},{atom,{464,55},list}]},
                            {nil,{464,60}}}]}]}},
          {debug_line,465,256},
          {call,
              {465,5},
              {remote,
                  {465,5},
                  {atom,{465,5},erlang},
                  {atom,{465,5},list_to_binary}},
              [{var,{465,20},'Mf1'}]}]}]}.
{function,
 {469,1},
 no_core_prepare,1,
 [{clause,
   {469,1},
   [{var,{469,1},'_'}],
   [[{call,
      {469,1},
      {remote,{469,1},{atom,{469,1},fake},{atom,{469,1},is_beam_bif_info}},
      []}]],
   [{debug_line,469,257},{atom,{469,1},ignore}]},
  {clause,
   {469,1},
   [{var,{469,17},'_Config'}],
   [],
   [{debug_line,470,258},
    {match,
     {470,5},
     {var,{470,5},'Mod'},
     {tuple,
      {470,11},
      [{atom,{470,12},c_module},
       {nil,{470,21}},
       {tuple,
        {471,15},
        [{atom,{471,16},c_literal},
         {nil,{471,26}},
         {atom,{471,29},sample_receive}]},
       {cons,
        {472,15},
        {tuple,
         {472,16},
         [{atom,{472,17},c_var},
          {nil,{472,23}},
          {tuple,{472,26},[{atom,{472,27},discard},{integer,{472,35},0}]}]},
        {nil,{472,38}}},
       {nil,{473,15}},
       {cons,
        {474,15},
        {tuple,
         {474,16},
         [{tuple,
           {474,17},
           [{atom,{474,18},c_var},
            {nil,{474,24}},
            {tuple,{474,27},[{atom,{474,28},discard},{integer,{474,36},0}]}]},
          {tuple,
           {475,17},
           [{atom,{475,18},c_fun},
            {nil,{475,24}},
            {nil,{475,27}},
            {tuple,
             {476,21},
             [{atom,{476,22},c_case},
              {nil,{476,29}},
              {tuple,
               {477,25},
               [{atom,{477,26},c_values},{nil,{477,35}},{nil,{477,38}}]},
              {cons,
               {478,25},
               {tuple,
                {478,26},
                [{atom,{478,27},c_clause},
                 {nil,{478,36}},
                 {nil,{478,39}},
                 {tuple,
                  {479,30},
                  [{atom,{479,31},c_literal},
                   {nil,{479,41}},
                   {atom,{479,44},true}]},
                 {tuple,
                  {480,30},
                  [{atom,{480,31},c_receive},
                   {nil,{480,41}},
                   {nil,{480,44}},
                   {tuple,
                    {480,47},
                    [{atom,{480,48},c_literal},
                     {nil,{480,58}},
                     {integer,{480,61},0}]},
                   {tuple,
                    {480,64},
                    [{atom,{480,65},c_literal},
                     {nil,{480,75}},
                     {atom,{480,78},ok}]}]}]},
               {nil,{480,83}}}]}]}]},
        {nil,{480,87}}}]}},
    {debug_line,482,259},
    {match,
     {482,5},
     {tuple,
      {482,5},
      [{atom,{482,6},ok},
       {atom,{482,9},sample_receive},
       {var,{482,24},'_'},
       {var,{482,26},'_'}]},
     {call,
      {482,31},
      {remote,{482,38},{atom,{482,31},compile},{atom,{482,39},forms}},
      [{var,{482,45},'Mod'},
       {block,0,
        [{cons,
          {482,50},
          {atom,{482,51},from_core},
          {cons,
           {482,61},
           {atom,{482,61},binary},
           {cons,{482,68},{atom,{482,68},return},{nil,{482,74}}}}}]}]}},
    {debug_line,483,260},
    {match,
     {483,5},
     {tuple,
      {483,5},
      [{atom,{483,6},error},{var,{483,12},'_'},{var,{483,14},'_'}]},
     {call,
      {483,19},
      {remote,{483,26},{atom,{483,19},compile},{atom,{483,27},forms}},
      [{var,{483,33},'Mod'},
       {block,0,
        [{cons,
          {483,38},
          {atom,{483,39},from_core},
          {cons,
           {483,49},
           {atom,{483,49},binary},
           {cons,
            {483,56},
            {atom,{483,56},return},
            {cons,
             {483,63},
             {atom,{483,63},no_core_prepare},
             {nil,{483,78}}}}}}]}]}},
    {debug_line,484,261},
    {atom,{484,5},ok}]}]}.
{function,
    {486,1},
    cond_and_ifdef,1,
    [{clause,
         {486,1},
         [{var,{486,1},'_'}],
         [[{call,
               {486,1},
               {remote,
                   {486,1},
                   {atom,{486,1},fake},
                   {atom,{486,1},is_beam_bif_info}},
               []}]],
         [{debug_line,486,262},{atom,{486,1},ignore}]},
     {clause,
         {486,1},
         [{var,{486,16},'Config'}],
         [[{call,
               {486,29},
               {remote,
                   {486,29},
                   {atom,{486,29},erlang},
                   {atom,{486,29},is_list}},
               [{var,{486,37},'Config'}]}]],
         [{debug_line,487,263},
          {match,
              {487,5},
              {tuple,{487,5},[{var,{487,6},'Simple'},{var,{487,14},'Target'}]},
              {call,
                  {487,24},
                  {atom,{487,24},get_files},
                  [{var,{487,34},'Config'},
                   {atom,{487,42},simple},
                   {block,0,[{string,{487,50},"cond_and_ifdef"}]}]}},
          {debug_line,488,264},
          {match,
              {488,5},
              {var,{488,5},'IncludeDir'},
              {call,
                  {488,18},
                  {remote,
                      {488,26},
                      {atom,{488,18},filename},
                      {atom,{488,27},join}},
                  [{block,0,
                       [{call,
                            {488,32},
                            {remote,
                                {488,40},
                                {atom,{488,32},filename},
                                {atom,{488,41},dirname}},
                            [{var,{488,49},'Simple'}]}]},
                   {block,0,[{string,{488,58},"include"}]}]}},
          {debug_line,489,265},
          {match,
              {489,5},
              {var,{489,5},'Options'},
              {cons,
                  {489,15},
                  {tuple,
                      {489,16},
                      [{atom,{489,17},outdir},
                       {call,
                           {489,25},
                           {remote,
                               {489,33},
                               {atom,{489,25},filename},
                               {atom,{489,34},dirname}},
                           [{var,{489,42},'Target'}]}]},
                  {cons,
                      {490,8},
                      {tuple,
                          {490,8},
                          [{atom,{490,9},d},{atom,{490,12},need_foo}]},
                      {cons,
                          {490,23},
                          {tuple,
                              {490,23},
                              [{atom,{490,24},d},
                               {atom,{490,27},foo_value},
                               {integer,{490,38},42}]},
                          {cons,
                              {491,8},
                              {tuple,
                                  {491,8},
                                  [{atom,{491,9},i},
                                   {var,{491,12},'IncludeDir'}]},
                              {cons,
                                  {491,25},
                                  {atom,{491,25},report},
                                  {nil,{491,31}}}}}}}},
          {debug_line,492,266},
          {match,
              {492,5},
              {tuple,{492,5},[{atom,{492,6},ok},{atom,{492,10},simple}]},
              {call,
                  {492,20},
                  {remote,
                      {492,27},
                      {atom,{492,20},compile},
                      {atom,{492,28},file}},
                  [{var,{492,33},'Simple'},{var,{492,41},'Options'}]}},
          {debug_line,493,267},
          {match,
              {493,5},
              {atom,{493,5},true},
              {call,
                  {493,12},
                  {atom,{493,12},exists},
                  [{var,{493,19},'Target'}]}},
          {debug_line,494,268},
          {match,
              {494,5},
              {tuple,{494,5},[{atom,{494,6},hiker},{integer,{494,13},42}]},
              {call,
                  {494,19},
                  {atom,{494,19},run},
                  [{var,{494,23},'Target'},
                   {atom,{494,31},foo},
                   {nil,{494,36}}]}},
          {debug_line,495,269},
          {match,
              {495,5},
              {atom,{495,5},ok},
              {call,
                  {495,10},
                  {remote,
                      {495,14},
                      {atom,{495,10},file},
                      {atom,{495,15},delete}},
                  [{var,{495,22},'Target'}]}},
          {debug_line,496,270},
          {match,
              {496,5},
              {atom,{496,5},ok},
              {call,
                  {496,10},
                  {remote,
                      {496,14},
                      {atom,{496,10},file},
                      {atom,{496,15},del_dir}},
                  [{block,0,
                       [{call,
                            {496,23},
                            {remote,
                                {496,31},
                                {atom,{496,23},filename},
                                {atom,{496,32},dirname}},
                            [{var,{496,40},'Target'}]}]}]}},
          {debug_line,497,271},
          {atom,{497,5},ok}]}]}.
{function,
 {499,1},
 listings,1,
 [{clause,
   {499,1},
   [{var,{499,1},'_'}],
   [[{call,
      {499,1},
      {remote,{499,1},{atom,{499,1},fake},{atom,{499,1},is_beam_bif_info}},
      []}]],
   [{debug_line,499,272},{atom,{499,1},ignore}]},
  {clause,
   {499,1},
   [{var,{499,10},'Config'}],
   [[{call,
      {499,23},
      {remote,{499,23},{atom,{499,23},erlang},{atom,{499,23},is_list}},
      [{var,{499,31},'Config'}]}]],
   [{debug_line,500,273},
    {match,
     {500,5},
     {var,{500,5},'DataDir'},
     {call,
      {500,15},
      {remote,{500,24},{atom,{500,15},proplists},{atom,{500,25},get_value}},
      [{atom,{500,35},data_dir},{var,{500,45},'Config'}]}},
    {debug_line,501,274},
    {match,
     {501,5},
     {var,{501,5},'PrivDir'},
     {call,
      {501,15},
      {remote,{501,24},{atom,{501,15},proplists},{atom,{501,25},get_value}},
      [{atom,{501,35},priv_dir},{var,{501,45},'Config'}]}},
    {debug_line,502,275},
    {match,
     {502,5},
     {atom,{502,5},ok},
     {call,
      {502,10},
      {atom,{502,10},do_file_listings},
      [{var,{502,27},'DataDir'},
       {var,{502,36},'PrivDir'},
       {block,0,
        [{cons,
          {502,45},
          {string,{503,6},"simple"},
          {cons,
           {504,6},
           {string,{504,6},"small"},
           {cons,{505,6},{string,{505,6},"small_maps"},{nil,{506,2}}}}}]}]}},
    {debug_line,509,276},
    {match,
     {509,5},
     {var,{509,5},'Simple'},
     {call,
      {509,14},
      {remote,{509,22},{atom,{509,14},filename},{atom,{509,23},join}},
      [{var,{509,28},'DataDir'},{block,0,[{string,{509,37},"simple"}]}]}},
    {debug_line,510,277},
    {match,
     {510,5},
     {var,{510,5},'SimpleTarget'},
     {call,
      {510,20},
      {remote,{510,28},{atom,{510,20},filename},{atom,{510,29},join}},
      [{var,{510,34},'PrivDir'},{block,0,[{string,{510,43},"simple.S"}]}]}},
    {debug_line,511,278},
    {match,
     {511,5},
     {atom,{511,5},ok},
     {call,
      {511,10},
      {remote,{511,14},{atom,{511,10},file},{atom,{511,15},make_dir}},
      [{var,{511,24},'SimpleTarget'}]}},
    {debug_line,512,279},
    {'try',
     {512,5},
     [{debug_line,513,280},
      {match,
       {513,9},
       {atom,{513,9},error},
       {call,
        {513,17},
        {remote,{513,24},{atom,{513,17},compile},{atom,{513,25},file}},
        [{var,{513,30},'Simple'},
         {block,0,
          [{cons,
            {513,38},
            {atom,{513,39},'S'},
            {cons,
             {513,44},
             {tuple,
              {513,44},
              [{atom,{513,45},outdir},{var,{513,52},'PrivDir'}]},
             {cons,{513,62},{atom,{513,62},report},{nil,{513,68}}}}}]}]}}],
     [],[],
     [{debug_line,515,281},
      {match,
       {515,9},
       {atom,{515,9},ok},
       {call,
        {515,14},
        {remote,{515,18},{atom,{515,14},file},{atom,{515,19},del_dir}},
        [{var,{515,27},'SimpleTarget'}]}}]},
    {debug_line,518,282},
    {atom,{518,5},ok}]}]}.
{function,
 {520,1},
 do_file_listings,3,
 [{clause,
   {520,1},
   [{var,{520,1},'_'},{var,{520,1},'_'},{var,{520,1},'_'}],
   [[{call,
      {520,1},
      {remote,{520,1},{atom,{520,1},fake},{atom,{520,1},is_beam_bif_info}},
      []}]],
   [{debug_line,520,283},{atom,{520,1},ignore}]},
  {clause,
   {520,1},
   [{var,{520,18},'_'},{var,{520,21},'_'},{nil,{520,24}}],
   [],
   [{debug_line,520,284},{atom,{520,31},ok}]},
  {clause,
   {521,1},
   [{var,{521,18},'DataDir'},
    {var,{521,27},'PrivDir'},
    {cons,{521,36},{var,{521,37},'File'},{var,{521,42},'Files'}}],
   [],
   [{debug_line,522,285},
    {match,
     {522,5},
     {var,{522,5},'Simple'},
     {call,
      {522,14},
      {remote,{522,22},{atom,{522,14},filename},{atom,{522,23},join}},
      [{var,{522,28},'DataDir'},{var,{522,37},'File'}]}},
    {debug_line,523,286},
    {match,
     {523,5},
     {var,{523,5},'TargetDir'},
     {call,
      {523,17},
      {remote,{523,25},{atom,{523,17},filename},{atom,{523,26},join}},
      [{var,{523,31},'PrivDir'},{atom,{523,40},listings}]}},
    {debug_line,524,287},
    {match,
     {524,5},
     {atom,{524,5},ok},
     {call,
      {524,10},
      {remote,{524,14},{atom,{524,10},file},{atom,{524,15},make_dir}},
      [{var,{524,24},'TargetDir'}]}},
    {debug_line,526,288},
    {match,
     {526,5},
     {var,{526,5},'List'},
     {cons,
      {526,12},
      {tuple,{526,13},[{atom,{526,14},'S'},{string,{526,18},".S"}]},
      {cons,
       {527,13},
       {tuple,{527,13},[{atom,{527,14},'E'},{string,{527,18},".E"}]},
       {cons,
        {528,13},
        {tuple,{528,13},[{atom,{528,14},'P'},{string,{528,18},".P"}]},
        {cons,
         {529,13},
         {tuple,{529,13},[{atom,{529,14},dpp},{string,{529,19},".pp"}]},
         {cons,
          {530,13},
          {tuple,{530,13},[{atom,{530,14},dabstr},{string,{530,22},".abstr"}]},
          {cons,
           {531,13},
           {tuple,{531,13},[{atom,{531,14},dexp},{string,{531,20},".expand"}]},
           {cons,
            {532,13},
            {tuple,{532,13},[{atom,{532,14},dcore},{string,{532,21},".core"}]},
            {cons,
             {533,13},
             {tuple,
              {533,13},
              [{atom,{533,14},doldinline},{string,{533,26},".oldinline"}]},
             {cons,
              {534,13},
              {tuple,
               {534,13},
               [{atom,{534,14},dinline},{string,{534,23},".inline"}]},
              {cons,
               {535,13},
               {tuple,
                {535,13},
                [{atom,{535,14},dcore},{string,{535,21},".core"}]},
               {cons,
                {536,13},
                {tuple,
                 {536,13},
                 [{atom,{536,14},dcopt},{string,{536,21},".copt"}]},
                {cons,
                 {537,13},
                 {tuple,
                  {537,13},
                  [{atom,{537,14},dcbsm},{string,{537,21},".core_bsm"}]},
                 {cons,
                  {538,13},
                  {tuple,
                   {538,13},
                   [{atom,{538,14},dssa},{string,{538,20},".ssa"}]},
                  {cons,
                   {539,13},
                   {tuple,
                    {539,13},
                    [{atom,{539,14},dbool},{string,{539,21},".bool"}]},
                   {cons,
                    {540,13},
                    {tuple,
                     {540,13},
                     [{atom,{540,14},dssashare},
                      {string,{540,25},".ssashare"}]},
                    {cons,
                     {541,13},
                     {tuple,
                      {541,13},
                      [{atom,{541,14},dssaopt},{string,{541,23},".ssaopt"}]},
                     {cons,
                      {542,13},
                      {tuple,
                       {542,13},
                       [{atom,{542,14},dprecg},
                        {string,{542,22},".precodegen"}]},
                      {cons,
                       {543,13},
                       {tuple,
                        {543,13},
                        [{atom,{543,14},dcg},{string,{543,19},".codegen"}]},
                       {cons,
                        {544,13},
                        {tuple,
                         {544,13},
                         [{atom,{544,14},dblk},{string,{544,20},".block"}]},
                        {cons,
                         {545,13},
                         {tuple,
                          {545,13},
                          [{atom,{545,14},djmp},{string,{545,20},".jump"}]},
                         {cons,
                          {546,13},
                          {tuple,
                           {546,13},
                           [{atom,{546,14},dclean},
                            {string,{546,22},".clean"}]},
                          {cons,
                           {547,13},
                           {tuple,
                            {547,13},
                            [{atom,{547,14},dopt},
                             {string,{547,20},".optimize"}]},
                           {cons,
                            {548,13},
                            {tuple,
                             {548,13},
                             [{atom,{548,14},diffable},
                              {string,{548,24},".S"}]},
                            {nil,{548,29}}}}}}}}}}}}}}}}}}}}}}}}}},
    {debug_line,549,289},
    {call,
     {549,5},
     {atom,{549,5},p_listings},
     [{var,{549,16},'List'},
      {var,{549,22},'Simple'},
      {var,{549,30},'TargetDir'}]},
    {debug_line,552,290},
    {call,
     {552,5},
     {atom,{552,5},do_listing},
     [{var,{552,16},'Simple'},
      {var,{552,24},'TargetDir'},
      {atom,{552,35},to_pp},
      {block,0,[{string,{552,42},".P"}]}]},
    {debug_line,553,291},
    {call,
     {553,5},
     {atom,{553,5},do_listing},
     [{var,{553,16},'Simple'},
      {var,{553,24},'TargetDir'},
      {atom,{553,35},to_exp},
      {block,0,[{string,{553,43},".E"}]}]},
    {debug_line,554,292},
    {call,
     {554,5},
     {atom,{554,5},do_listing},
     [{var,{554,16},'Simple'},
      {var,{554,24},'TargetDir'},
      {atom,{554,35},to_core0},
      {block,0,[{string,{554,45},".core"}]}]},
    {debug_line,555,293},
    {match,
     {555,5},
     {atom,{555,5},ok},
     {call,
      {555,10},
      {remote,{555,14},{atom,{555,10},file},{atom,{555,15},delete}},
      [{block,0,
        [{call,
          {555,22},
          {remote,{555,30},{atom,{555,22},filename},{atom,{555,31},join}},
          [{var,{555,36},'TargetDir'},
           {block,0,
            [{op,
              {555,52},
              '++',
              {var,{555,47},'File'},
              {string,{555,55},".core"}}]}]}]}]}},
    {debug_line,556,294},
    {call,
     {556,5},
     {atom,{556,5},do_listing},
     [{var,{556,16},'Simple'},
      {var,{556,24},'TargetDir'},
      {atom,{556,35},to_core},
      {block,0,[{string,{556,44},".core"}]}]},
    {debug_line,557,295},
    {call,
     {557,5},
     {atom,{557,5},do_listing},
     [{var,{557,16},'Simple'},
      {var,{557,24},'TargetDir'},
      {atom,{557,35},to_dis},
      {block,0,[{string,{557,43},".dis"}]}]},
    {debug_line,560,296},
    {call,
     {560,5},
     {remote,{560,10},{atom,{560,5},lists},{atom,{560,11},foreach}},
     [{block,0,
       [{'fun',
         {560,19},
         {clauses,
          [{clause,
            {560,22},
            [{var,{560,23},'F'}],
            [],
            [{match,
              {560,29},
              {atom,{560,29},ok},
              {call,
               {560,34},
               {remote,{560,38},{atom,{560,34},file},{atom,{560,39},delete}},
               [{var,{560,46},'F'}]}}]}]}}]},
      {block,0,
       [{debug_line,561,297},
        {call,
         {561,2},
         {remote,{561,9},{atom,{561,2},filelib},{atom,{561,10},wildcard}},
         [{block,0,
           [{call,
             {561,19},
             {remote,{561,27},{atom,{561,19},filename},{atom,{561,28},join}},
             [{var,{561,33},'TargetDir'},
              {block,0,[{string,{561,44},"*"}]}]}]}]}]}]},
    {debug_line,562,298},
    {match,
     {562,5},
     {atom,{562,5},ok},
     {call,
      {562,10},
      {remote,{562,14},{atom,{562,10},file},{atom,{562,15},del_dir}},
      [{var,{562,23},'TargetDir'}]}},
    {debug_line,564,299},
    {call,
     {564,5},
     {atom,{564,5},do_file_listings},
     [{var,{564,22},'DataDir'},
      {var,{564,30},'PrivDir'},
      {var,{564,38},'Files'}]}]}]}.
{function,
 {566,1},
 listings_big,1,
 [{clause,
   {566,1},
   [{var,{566,1},'_'}],
   [[{call,
      {566,1},
      {remote,{566,1},{atom,{566,1},fake},{atom,{566,1},is_beam_bif_info}},
      []}]],
   [{debug_line,566,300},{atom,{566,1},ignore}]},
  {clause,
   {566,1},
   [{var,{566,14},'Config'}],
   [[{call,
      {566,27},
      {remote,{566,27},{atom,{566,27},erlang},{atom,{566,27},is_list}},
      [{var,{566,35},'Config'}]}]],
   [{debug_line,567,301},
    {match,
     {567,5},
     {tuple,{567,5},[{var,{567,6},'Big'},{var,{567,10},'Target'}]},
     {call,
      {567,20},
      {atom,{567,20},get_files},
      [{var,{567,30},'Config'},
       {atom,{567,38},big},
       {atom,{567,43},listings_big}]}},
    {debug_line,568,302},
    {match,
     {568,5},
     {var,{568,5},'TargetDir'},
     {call,
      {568,17},
      {remote,{568,25},{atom,{568,17},filename},{atom,{568,26},dirname}},
      [{var,{568,34},'Target'}]}},
    {debug_line,569,303},
    {match,
     {569,5},
     {var,{569,5},'List'},
     {cons,
      {569,12},
      {tuple,{569,13},[{atom,{569,14},'S'},{string,{569,18},".S"}]},
      {cons,
       {570,13},
       {tuple,{570,13},[{atom,{570,14},'E'},{string,{570,18},".E"}]},
       {cons,
        {571,13},
        {tuple,{571,13},[{atom,{571,14},'P'},{string,{571,18},".P"}]},
        {cons,
         {572,13},
         {tuple,{572,13},[{atom,{572,14},dssa},{string,{572,20},".ssa"}]},
         {cons,
          {573,13},
          {tuple,
           {573,13},
           [{atom,{573,14},dssaopt},{string,{573,23},".ssaopt"}]},
          {cons,
           {574,13},
           {tuple,
            {574,13},
            [{atom,{574,14},dprecg},{string,{574,22},".precodegen"}]},
           {cons,
            {575,13},
            {tuple,{575,13},[{atom,{575,14},to_dis},{string,{575,22},".dis"}]},
            {nil,{575,29}}}}}}}}}},
    {debug_line,576,304},
    {call,
     {576,5},
     {atom,{576,5},p_listings},
     [{var,{576,16},'List'},
      {var,{576,22},'Big'},
      {var,{576,27},'TargetDir'}]}]}]}.
{function,
 {578,1},
 p_listings,3,
 [{clause,
   {578,1},
   [{var,{578,1},'_'},{var,{578,1},'_'},{var,{578,1},'_'}],
   [[{call,
      {578,1},
      {remote,{578,1},{atom,{578,1},fake},{atom,{578,1},is_beam_bif_info}},
      []}]],
   [{debug_line,578,305},{atom,{578,1},ignore}]},
  {clause,
   {578,1},
   [{var,{578,12},'List'},{var,{578,18},'File'},{var,{578,24},'BaseDir'}],
   [],
   [{debug_line,579,306},
    {match,
     {579,5},
     {var,{579,5},'Run'},
     {'fun',
      {579,11},
      {clauses,
       [{clause,
         {579,14},
         [{tuple,
           {579,15},
           [{var,{579,16},'Option'},{var,{579,23},'Extension'}]}],
         [],
         [{debug_line,580,307},
          {match,
           {580,19},
           {var,{580,19},'Uniq'},
           {call,
            {580,26},
            {remote,
             {580,32},
             {atom,{580,26},erlang},
             {atom,{580,33},unique_integer}},
            [{block,0,
              [{cons,{580,48},{atom,{580,49},positive},{nil,{580,57}}}]}]}},
          {debug_line,581,308},
          {match,
           {581,19},
           {var,{581,19},'Dir'},
           {call,
            {581,25},
            {remote,{581,33},{atom,{581,25},filename},{atom,{581,34},join}},
            [{var,{581,39},'BaseDir'},
             {block,0,
              [{call,
                {581,48},
                {remote,
                 {581,48},
                 {atom,{581,48},erlang},
                 {atom,{581,48},integer_to_list}},
                [{var,{581,64},'Uniq'}]}]}]}},
          {debug_line,582,309},
          {match,
           {582,19},
           {atom,{582,19},ok},
           {call,
            {582,24},
            {remote,{582,28},{atom,{582,24},file},{atom,{582,29},make_dir}},
            [{var,{582,38},'Dir'}]}},
          {debug_line,583,310},
          {'try',
           {583,19},
           [{debug_line,584,311},
            {call,
             {584,23},
             {atom,{584,23},do_listing},
             [{var,{584,34},'File'},
              {var,{584,40},'Dir'},
              {var,{584,45},'Option'},
              {var,{584,53},'Extension'}]},
            {debug_line,585,312},
            {atom,{585,23},ok}],
           [],
           [{clause,
             {587,23},
             [{tuple,
               {587,23},
               [{var,{587,23},'Class'},
                {var,{587,29},'Error'},
                {var,{587,35},'Stk'}]}],
             [],
             [{debug_line,588,313},
              {call,
               {588,27},
               {remote,{588,29},{atom,{588,27},io},{atom,{588,30},format}},
               [{block,0,[{string,{588,37},"~p:~p\n~p\n"}]},
                {block,0,
                 [{cons,
                   {588,52},
                   {var,{588,53},'Class'},
                   {cons,
                    {588,59},
                    {var,{588,59},'Error'},
                    {cons,{588,65},{var,{588,65},'Stk'},{nil,{588,68}}}}}]}]},
              {debug_line,589,314},
              {atom,{589,27},error}]}],
           [{debug_line,591,315},
            {match,
             {591,23},
             {var,{591,23},'_'},
             {lc,
              {591,27},
              {block,0,
               [{match,
                 {591,28},
                 {atom,{591,28},ok},
                 {call,
                  {591,33},
                  {remote,
                   {591,37},
                   {atom,{591,33},file},
                   {atom,{591,38},delete}},
                  [{var,{591,45},'F'}]}}]},
              [{generate,
                {592,33},
                {var,{592,31},'F'},
                {call,
                 {592,36},
                 {remote,
                  {592,43},
                  {atom,{592,36},filelib},
                  {atom,{592,44},wildcard}},
                 [{block,0,
                   [{debug_line,592,316},
                    {call,
                     {592,53},
                     {remote,
                      {592,61},
                      {atom,{592,53},filename},
                      {atom,{592,62},join}},
                     [{var,{592,67},'Dir'},
                      {block,0,[{string,{592,72},"*"}]}]}]}]}}]}},
            {debug_line,593,317},
            {match,
             {593,23},
             {atom,{593,23},ok},
             {call,
              {593,28},
              {remote,{593,32},{atom,{593,28},file},{atom,{593,33},del_dir}},
              [{var,{593,41},'Dir'}]}}]}]}]}}},
    {debug_line,596,318},
    {call,
     {596,5},
     {remote,{596,13},{atom,{596,5},test_lib},{atom,{596,14},p_run}},
     [{var,{596,20},'Run'},{var,{596,25},'List'}]}]}]}.
{function,
    {598,1},
    other_output,1,
    [{clause,
         {598,1},
         [{var,{598,1},'_'}],
         [[{call,
               {598,1},
               {remote,
                   {598,1},
                   {atom,{598,1},fake},
                   {atom,{598,1},is_beam_bif_info}},
               []}]],
         [{debug_line,598,319},{atom,{598,1},ignore}]},
     {clause,
         {598,1},
         [{var,{598,14},'Config'}],
         [[{call,
               {598,27},
               {remote,
                   {598,27},
                   {atom,{598,27},erlang},
                   {atom,{598,27},is_list}},
               [{var,{598,35},'Config'}]}]],
         [{debug_line,599,320},
          {match,
              {599,5},
              {tuple,
                  {599,5},
                  [{var,{599,6},'Simple'},{var,{599,13},'_Target'}]},
              {call,
                  {599,24},
                  {atom,{599,24},get_files},
                  [{var,{599,34},'Config'},
                   {atom,{599,42},simple},
                   {block,0,[{string,{599,50},"other_output"}]}]}},
          {debug_line,601,321},
          {call,
              {601,5},
              {remote,{601,7},{atom,{601,5},io},{atom,{601,8},put_chars}},
              [{block,0,[{string,{601,18},"to_pp"}]}]},
          {debug_line,602,322},
          {match,
              {602,5},
              {tuple,
                  {602,5},
                  [{atom,{602,6},ok},{nil,{602,9}},{var,{602,12},'PP'}]},
              {call,
                  {602,18},
                  {remote,
                      {602,25},
                      {atom,{602,18},compile},
                      {atom,{602,26},file}},
                  [{var,{602,31},'Simple'},
                   {block,0,
                       [{cons,
                            {602,39},
                            {atom,{602,40},to_pp},
                            {cons,
                                {602,46},
                                {atom,{602,46},binary},
                                {cons,
                                    {602,53},
                                    {atom,{602,53},time},
                                    {nil,{602,57}}}}}]}]}},
          {debug_line,603,323},
          {match,
              {603,5},
              {nil,{603,5}},
              {lc,{603,10},
                  {block,0,[{var,{603,11},'E'}]},
                  [{block,0,[{atom,{603,21},true}]},
                   {generate,{603,18},{var,{603,16},'E'},{var,{603,21},'PP'}},
                   {block,0,[{debug_line,604,328},{atom,{604,9},true}]},
                   {block,
                       {604,9},
                       [{debug_line,605,324},
                        {'case',
                            {605,6},
                            {call,
                                {605,11},
                                {remote,
                                    {605,11},
                                    {atom,{605,11},erlang},
                                    {atom,{605,11},element}},
                                [{integer,{605,19},1},{var,{605,22},'E'}]},
                            [{clause,
                                 {606,10},
                                 [{atom,{606,10},attribute}],
                                 [],
                                 [{debug_line,606,325},{atom,{606,23},false}]},
                             {clause,
                                 {607,10},
                                 [{atom,{607,10},function}],
                                 [],
                                 [{debug_line,607,326},{atom,{607,22},false}]},
                             {clause,
                                 {608,10},
                                 [{atom,{608,10},eof}],
                                 [],
                                 [{debug_line,608,327},
                                  {atom,{608,17},false}]}]}]}]}},
          {debug_line,612,329},
          {call,
              {612,5},
              {remote,{612,7},{atom,{612,5},io},{atom,{612,8},put_chars}},
              [{block,0,[{string,{612,18},"to_exp (file)"}]}]},
          {debug_line,613,330},
          {match,
              {613,5},
              {tuple,
                  {613,5},
                  [{atom,{613,6},ok},{nil,{613,9}},{var,{613,12},'Expand'}]},
              {call,
                  {613,22},
                  {remote,
                      {613,29},
                      {atom,{613,22},compile},
                      {atom,{613,30},file}},
                  [{var,{613,35},'Simple'},
                   {block,0,
                       [{cons,
                            {613,43},
                            {atom,{613,44},to_exp},
                            {cons,
                                {613,51},
                                {atom,{613,51},binary},
                                {cons,
                                    {613,58},
                                    {atom,{613,58},time},
                                    {nil,{613,62}}}}}]}]}},
          {debug_line,614,331},
          {match,
              {614,5},
              {atom,{614,5},true},
              {call,
                  {614,12},
                  {remote,
                      {614,12},
                      {atom,{614,12},erlang},
                      {atom,{614,12},is_list}},
                  [{var,{614,20},'Expand'}]}},
          {debug_line,615,332},
          {match,
              {615,5},
              {tuple,
                  {615,5},
                  [{atom,{615,6},attribute},
                   {var,{615,16},'_'},
                   {atom,{615,18},module},
                   {atom,{615,25},simple}]},
              {call,
                  {615,35},
                  {remote,
                      {615,40},
                      {atom,{615,35},lists},
                      {atom,{615,41},keyfind}},
                  [{atom,{615,49},module},
                   {integer,{615,57},3},
                   {var,{615,60},'Expand'}]}},
          {debug_line,616,333},
          {call,
              {616,5},
              {remote,{616,7},{atom,{616,5},io},{atom,{616,8},put_chars}},
              [{block,0,[{string,{616,18},"to_exp (forms)"}]}]},
          {debug_line,617,334},
          {match,
              {617,5},
              {tuple,
                  {617,5},
                  [{atom,{617,6},ok},{nil,{617,9}},{var,{617,12},'Expand'}]},
              {call,
                  {617,22},
                  {remote,
                      {617,29},
                      {atom,{617,22},compile},
                      {atom,{617,30},forms}},
                  [{var,{617,36},'PP'},
                   {block,0,
                       [{cons,
                            {617,40},
                            {atom,{617,41},to_exp},
                            {cons,
                                {617,48},
                                {atom,{617,48},binary},
                                {cons,
                                    {617,55},
                                    {atom,{617,55},time},
                                    {nil,{617,59}}}}}]}]}},
          {debug_line,619,335},
          {call,
              {619,5},
              {remote,{619,7},{atom,{619,5},io},{atom,{619,8},put_chars}},
              [{block,0,[{string,{619,18},"to_core (file)"}]}]},
          {debug_line,620,336},
          {match,
              {620,5},
              {tuple,
                  {620,5},
                  [{atom,{620,6},ok},
                   {atom,{620,9},simple},
                   {var,{620,16},'Core'}]},
              {call,
                  {620,24},
                  {remote,
                      {620,31},
                      {atom,{620,24},compile},
                      {atom,{620,32},file}},
                  [{var,{620,37},'Simple'},
                   {block,0,
                       [{cons,
                            {620,45},
                            {atom,{620,46},to_core},
                            {cons,
                                {620,54},
                                {atom,{620,54},binary},
                                {cons,
                                    {620,61},
                                    {atom,{620,61},time},
                                    {nil,{620,65}}}}}]}]}},
          {debug_line,621,337},
          {match,
              {621,5},
              {atom,{621,5},c_module},
              {call,
                  {621,16},
                  {remote,
                      {621,16},
                      {atom,{621,16},erlang},
                      {atom,{621,16},element}},
                  [{integer,{621,24},1},{var,{621,27},'Core'}]}},
          {debug_line,622,338},
          {match,
              {622,5},
              {tuple,{622,5},[{atom,{622,6},ok},{var,{622,9},'_'}]},
              {call,
                  {622,14},
                  {remote,
                      {622,23},
                      {atom,{622,14},core_lint},
                      {atom,{622,24},module}},
                  [{var,{622,31},'Core'}]}},
          {debug_line,623,339},
          {call,
              {623,5},
              {remote,{623,7},{atom,{623,5},io},{atom,{623,8},put_chars}},
              [{block,0,[{string,{623,18},"to_core (forms)"}]}]},
          {debug_line,624,340},
          {match,
              {624,5},
              {tuple,
                  {624,5},
                  [{atom,{624,6},ok},
                   {atom,{624,9},simple},
                   {var,{624,16},'Core'}]},
              {call,
                  {624,24},
                  {remote,
                      {624,31},
                      {atom,{624,24},compile},
                      {atom,{624,32},forms}},
                  [{var,{624,38},'PP'},
                   {block,0,
                       [{cons,
                            {624,42},
                            {atom,{624,43},to_core},
                            {cons,
                                {624,51},
                                {atom,{624,51},binary},
                                {cons,
                                    {624,58},
                                    {atom,{624,58},time},
                                    {nil,{624,62}}}}}]}]}},
          {debug_line,626,341},
          {call,
              {626,5},
              {remote,{626,7},{atom,{626,5},io},{atom,{626,8},put_chars}},
              [{block,0,[{string,{626,18},"to_asm (file)"}]}]},
          {debug_line,627,342},
          {match,
              {627,5},
              {tuple,
                  {627,5},
                  [{atom,{627,6},ok},
                   {atom,{627,9},simple},
                   {var,{627,16},'Asm'}]},
              {call,
                  {627,23},
                  {remote,
                      {627,30},
                      {atom,{627,23},compile},
                      {atom,{627,31},file}},
                  [{var,{627,36},'Simple'},
                   {block,0,
                       [{cons,
                            {627,44},
                            {atom,{627,45},to_asm},
                            {cons,
                                {627,52},
                                {atom,{627,52},binary},
                                {cons,
                                    {627,59},
                                    {atom,{627,59},time},
                                    {nil,{627,63}}}}}]}]}},
          {debug_line,628,343},
          {match,
              {628,5},
              {tuple,
                  {628,5},
                  [{atom,{628,6},simple},
                   {var,{628,13},'_'},
                   {var,{628,15},'_'},
                   {var,{628,17},'_'},
                   {var,{628,19},'_'}]},
              {var,{628,24},'Asm'}},
          {debug_line,629,344},
          {call,
              {629,5},
              {remote,{629,7},{atom,{629,5},io},{atom,{629,8},put_chars}},
              [{block,0,[{string,{629,18},"to_asm (forms)"}]}]},
          {debug_line,630,345},
          {match,
              {630,5},
              {tuple,
                  {630,5},
                  [{atom,{630,6},ok},
                   {atom,{630,9},simple},
                   {var,{630,16},'Asm'}]},
              {call,
                  {630,23},
                  {remote,
                      {630,30},
                      {atom,{630,23},compile},
                      {atom,{630,31},forms}},
                  [{var,{630,37},'PP'},
                   {block,0,
                       [{cons,
                            {630,41},
                            {atom,{630,42},to_asm},
                            {cons,
                                {630,49},
                                {atom,{630,49},binary},
                                {cons,
                                    {630,56},
                                    {atom,{630,56},time},
                                    {nil,{630,60}}}}}]}]}},
          {debug_line,632,346},
          {atom,{632,5},ok}]}]}.
{function,
 {634,1},
 encrypted_abstr,1,
 [{clause,
   {634,1},
   [{var,{634,1},'_'}],
   [[{call,
      {634,1},
      {remote,{634,1},{atom,{634,1},fake},{atom,{634,1},is_beam_bif_info}},
      []}]],
   [{debug_line,634,347},{atom,{634,1},ignore}]},
  {clause,
   {634,1},
   [{var,{634,17},'Config'}],
   [[{call,
      {634,30},
      {remote,{634,30},{atom,{634,30},erlang},{atom,{634,30},is_list}},
      [{var,{634,38},'Config'}]}]],
   [{debug_line,635,348},
    {match,
     {635,5},
     {tuple,{635,5},[{var,{635,6},'Simple'},{var,{635,13},'Target'}]},
     {call,
      {635,23},
      {atom,{635,23},get_files},
      [{var,{635,33},'Config'},
       {atom,{635,41},simple},
       {block,0,[{string,{635,49},"encrypted_abstr"}]}]}},
    {debug_line,637,349},
    {match,
     {637,5},
     {var,{637,5},'Res'},
     {'case',
      {637,11},
      {call,{637,16},{atom,{637,16},has_crypto},[]},
      [{clause,
        {638,8},
        [{atom,{638,8},false}],
        [],
        [{debug_line,640,350},
         {call,
          {640,5},
          {atom,{640,5},encrypted_abstr_no_crypto},
          [{var,{640,31},'Simple'},{var,{640,39},'Target'}]},
         {debug_line,641,351},
         {tuple,
          {641,5},
          [{atom,{641,6},comment},
           {string,{641,14},"The crypto application is missing or broken"}]}]},
       {clause,
        {642,8},
        [{atom,{642,8},true}],
        [],
        [{debug_line,645,352},
         {match,
          {645,5},
          {var,{645,5},'OldPath'},
          {call,
           {645,15},
           {remote,{645,19},{atom,{645,15},code},{atom,{645,20},get_path}},
           []}},
         {debug_line,646,353},
         {'try',
          {646,5},
          [{debug_line,647,354},
           {match,
            {647,9},
            {var,{647,9},'NewPath'},
            {op,
             {647,27},
             '--',
             {var,{647,19},'OldPath'},
             {cons,
              {647,30},
              {call,
               {647,31},
               {remote,
                {647,39},
                {atom,{647,31},filename},
                {atom,{647,40},dirname}},
               [{block,0,
                 [{call,
                   {647,48},
                   {remote,
                    {647,52},
                    {atom,{647,48},code},
                    {atom,{647,53},which}},
                   [{atom,{647,59},crypto}]}]}]},
              {nil,{647,67}}}}},
           {debug_line,648,355},
           {'catch',
            {648,10},
            {call,
             {648,16},
             {remote,
              {648,27},
              {atom,{648,16},application},
              {atom,{648,28},stop}},
             [{atom,{648,33},crypto}]}},
           {debug_line,649,356},
           {call,
            {649,9},
            {remote,{649,13},{atom,{649,9},code},{atom,{649,14},delete}},
            [{atom,{649,21},crypto}]},
           {debug_line,650,357},
           {call,
            {650,9},
            {remote,{650,13},{atom,{650,9},code},{atom,{650,14},purge}},
            [{atom,{650,20},crypto}]},
           {debug_line,651,358},
           {call,
            {651,9},
            {remote,{651,13},{atom,{651,9},code},{atom,{651,14},set_path}},
            [{var,{651,23},'NewPath'}]},
           {debug_line,652,359},
           {call,
            {652,9},
            {atom,{652,9},encrypted_abstr_no_crypto},
            [{var,{652,35},'Simple'},{var,{652,43},'Target'}]}],
          [],[],
          [{debug_line,654,360},
           {call,
            {654,6},
            {remote,{654,10},{atom,{654,6},code},{atom,{654,11},set_path}},
            [{var,{654,20},'OldPath'}]}]},
         {debug_line,658,361},
         {call,
          {658,5},
          {atom,{658,5},encrypted_abstr_1},
          [{var,{658,23},'Simple'},{var,{658,31},'Target'}]},
         {debug_line,659,362},
         {match,
          {659,5},
          {atom,{659,5},ok},
          {call,
           {659,10},
           {remote,{659,14},{atom,{659,10},file},{atom,{659,15},delete}},
           [{var,{659,22},'Target'}]}},
         {debug_line,660,363},
         {match,
          {660,5},
          {var,{660,5},'_'},
          {call,
           {660,9},
           {remote,{660,13},{atom,{660,9},file},{atom,{660,14},del_dir_r}},
           [{block,0,
             [{call,
               {660,24},
               {remote,
                {660,32},
                {atom,{660,24},filename},
                {atom,{660,33},dirname}},
               [{var,{660,41},'Target'}]}]}]}}]}]}},
    {debug_line,664,364},
    {var,{664,5},'Res'}]}]}.
{function,
 {666,1},
 encrypted_abstr_1,2,
 [{clause,
   {666,1},
   [{var,{666,1},'_'},{var,{666,1},'_'}],
   [[{call,
      {666,1},
      {remote,{666,1},{atom,{666,1},fake},{atom,{666,1},is_beam_bif_info}},
      []}]],
   [{debug_line,666,365},{atom,{666,1},ignore}]},
  {clause,
   {666,1},
   [{var,{666,19},'Simple'},{var,{666,27},'Target'}],
   [],
   [{debug_line,667,366},
    {match,
     {667,5},
     {var,{667,5},'TargetDir'},
     {call,
      {667,17},
      {remote,{667,25},{atom,{667,17},filename},{atom,{667,26},dirname}},
      [{var,{667,34},'Target'}]}},
    {debug_line,668,367},
    {match,{668,5},{var,{668,5},'Key'},{string,{668,11},"ablurf123BX#$;3"}},
    {debug_line,669,368},
    {call,{669,5},{atom,{669,5},install_crypto_key},[{var,{669,24},'Key'}]},
    {debug_line,670,369},
    {match,
     {670,5},
     {tuple,{670,5},[{atom,{670,6},ok},{atom,{670,9},simple}]},
     {call,
      {670,19},
      {remote,{670,26},{atom,{670,19},compile},{atom,{670,27},file}},
      [{var,{670,32},'Simple'},
       {block,0,
        [{debug_line,671,370},
         {cons,
          {671,10},
          {atom,{671,11},debug_info},
          {cons,
           {671,22},
           {tuple,
            {671,22},
            [{atom,{671,23},debug_info_key},{var,{671,38},'Key'}]},
           {cons,
            {672,11},
            {tuple,
             {672,11},
             [{atom,{672,12},outdir},{var,{672,19},'TargetDir'}]},
            {nil,{672,29}}}}}]}]}},
    {debug_line,673,371},
    {call,
     {673,5},
     {atom,{673,5},verify_abstract},
     [{var,{673,21},'Target'},{atom,{673,29},erl_abstract_code}]},
    {debug_line,675,372},
    {match,
     {675,5},
     {tuple,{675,5},[{atom,{675,6},ok},{atom,{675,9},simple}]},
     {call,
      {675,19},
      {remote,{675,26},{atom,{675,19},compile},{atom,{675,27},file}},
      [{var,{675,32},'Simple'},
       {block,0,
        [{debug_line,676,373},
         {cons,
          {676,10},
          {tuple,
           {676,11},
           [{atom,{676,12},debug_info_key},{var,{676,27},'Key'}]},
          {cons,
           {677,11},
           {tuple,
            {677,11},
            [{atom,{677,12},outdir},{var,{677,19},'TargetDir'}]},
           {nil,{677,29}}}}]}]}},
    {debug_line,678,374},
    {call,
     {678,5},
     {atom,{678,5},verify_abstract},
     [{var,{678,21},'Target'},{atom,{678,29},erl_abstract_code}]},
    {debug_line,680,375},
    {match,
     {680,5},
     {tuple,{680,5},[{atom,{680,6},ok},{atom,{680,9},simple}]},
     {call,
      {680,19},
      {remote,{680,26},{atom,{680,19},compile},{atom,{680,27},file}},
      [{var,{680,32},'Simple'},
       {block,0,
        [{debug_line,681,376},
         {cons,
          {681,10},
          {atom,{681,11},debug_info},
          {cons,
           {681,22},
           {tuple,
            {681,22},
            [{atom,{681,23},debug_info_key},
             {tuple,
              {681,38},
              [{atom,{681,39},des3_cbc},{var,{681,48},'Key'}]}]},
           {cons,
            {682,11},
            {tuple,
             {682,11},
             [{atom,{682,12},outdir},{var,{682,19},'TargetDir'}]},
            {nil,{682,29}}}}}]}]}},
    {debug_line,683,377},
    {call,
     {683,5},
     {atom,{683,5},verify_abstract},
     [{var,{683,21},'Target'},{atom,{683,29},erl_abstract_code}]},
    {debug_line,685,378},
    {match,
     {685,5},
     {tuple,{685,5},[{atom,{685,6},ok},{atom,{685,9},simple}]},
     {call,
      {685,19},
      {remote,{685,26},{atom,{685,19},compile},{atom,{685,27},file}},
      [{var,{685,32},'Simple'},
       {block,0,
        [{debug_line,686,379},
         {cons,
          {686,10},
          {tuple,
           {686,11},
           [{atom,{686,12},debug_info},
            {tuple,
             {686,23},
             [{atom,{686,25},compile_SUITE},{atom,{686,32},ok}]}]},
          {cons,
           {687,11},
           {tuple,
            {687,11},
            [{atom,{687,12},debug_info_key},{var,{687,27},'Key'}]},
           {cons,
            {688,11},
            {tuple,
             {688,11},
             [{atom,{688,12},outdir},{var,{688,19},'TargetDir'}]},
            {nil,{688,29}}}}}]}]}},
    {debug_line,689,380},
    {call,
     {689,5},
     {atom,{689,5},verify_abstract},
     [{var,{689,21},'Target'},{atom,{689,30},compile_SUITE}]},
    {debug_line,691,381},
    {match,
     {691,5},
     {tuple,
      {691,5},
      [{atom,{691,6},ok},
       {tuple,
        {691,9},
        [{atom,{691,10},simple},
         {cons,
          {691,17},
          {tuple,
           {691,18},
           [{atom,{691,19},compile_info},{var,{691,32},'CInfo'}]},
          {nil,{691,38}}}]}]},
     {call,
      {692,2},
      {remote,{692,10},{atom,{692,2},beam_lib},{atom,{692,11},chunks}},
      [{var,{692,18},'Target'},
       {block,0,
        [{debug_line,692,382},
         {cons,{692,26},{atom,{692,27},compile_info},{nil,{692,39}}}]}]}},
    {debug_line,693,383},
    {match,
     {693,5},
     {tuple,{693,5},[{var,{693,6},'_'},{var,{693,8},'Opts'}]},
     {call,
      {693,16},
      {remote,{693,21},{atom,{693,16},lists},{atom,{693,22},keyfind}},
      [{atom,{693,30},options},{integer,{693,39},1},{var,{693,42},'CInfo'}]}},
    {debug_line,694,384},
    {match,
     {694,5},
     {tuple,{694,5},[{var,{694,6},'_'},{atom,{694,8},'********'}]},
     {call,
      {694,22},
      {remote,{694,27},{atom,{694,22},lists},{atom,{694,28},keyfind}},
      [{atom,{694,36},debug_info_key},
       {integer,{694,52},1},
       {var,{694,55},'Opts'}]}},
    {debug_line,697,385},
    {match,
     {697,5},
     {atom,{697,5},error},
     {call,
      {697,13},
      {remote,{697,20},{atom,{697,13},compile},{atom,{697,21},file}},
      [{var,{697,26},'Simple'},
       {block,0,
        [{debug_line,698,386},
         {cons,
          {698,11},
          {atom,{698,12},debug_info},
          {cons,
           {698,23},
           {tuple,
            {698,23},
            [{atom,{698,24},debug_info_key},
             {tuple,{698,39},[{atom,{698,40},blurf},{string,{698,46},"ss"}]}]},
           {cons,{698,53},{atom,{698,53},report},{nil,{698,59}}}}}]}]}},
    {debug_line,699,387},
    {match,
     {699,5},
     {atom,{699,5},error},
     {call,
      {699,13},
      {remote,{699,20},{atom,{699,13},compile},{atom,{699,21},file}},
      [{var,{699,26},'Simple'},
       {block,0,
        [{debug_line,700,388},
         {cons,
          {700,11},
          {atom,{700,12},debug_info},
          {cons,
           {700,23},
           {tuple,
            {700,23},
            [{atom,{700,24},debug_info_key},
             {tuple,
              {700,39},
              [{atom,{700,40},blurf},
               {integer,{700,46},1},
               {string,{700,48},"ss"}]}]},
           {cons,{700,55},{atom,{700,55},report},{nil,{700,61}}}}}]}]}},
    {debug_line,701,389},
    {match,
     {701,5},
     {atom,{701,5},error},
     {call,
      {701,13},
      {remote,{701,20},{atom,{701,13},compile},{atom,{701,21},file}},
      [{var,{701,26},'Simple'},
       {block,0,
        [{debug_line,702,390},
         {cons,
          {702,11},
          {atom,{702,12},debug_info},
          {cons,
           {702,23},
           {tuple,
            {702,23},
            [{atom,{702,24},debug_info_key},{integer,{702,39},42}]},
           {cons,{702,43},{atom,{702,43},report},{nil,{702,49}}}}}]}]}},
    {debug_line,704,391},
    {call,
     {704,5},
     {remote,
      {704,13},
      {atom,{704,5},beam_lib},
      {atom,{704,14},clear_crypto_key_fun}},
     []},
    {debug_line,708,392},
    {match,
     {708,5},
     {var,{708,5},'TestHome'},
     {call,
      {708,16},
      {remote,{708,24},{atom,{708,16},filename},{atom,{708,25},join}},
      [{var,{708,30},'TargetDir'},{block,0,[{string,{708,41},"home"}]}]}},
    {debug_line,709,393},
    {call,
     {709,5},
     {remote,{709,12},{atom,{709,5},filelib},{atom,{709,13},ensure_dir}},
     [{var,{709,24},'TestHome'}]},
    {debug_line,710,394},
    {match,
     {710,5},
     {var,{710,5},'HomeEnv'},
     {'case',
      {710,15},
      {call,
       {710,20},
       {remote,{710,22},{atom,{710,20},os},{atom,{710,23},type}},
       []},
      [{clause,
        {711,19},
        [{tuple,{711,19},[{atom,{711,20},win32},{var,{711,27},'_'}]}],
        [],
        [{debug_line,712,395},
         {match,
          {712,23},
          {cons,{712,23},{var,{712,24},'Drive'},{var,{712,32},'Path'}},
          {call,
           {712,40},
           {remote,{712,48},{atom,{712,40},filename},{atom,{712,49},split}},
           [{var,{712,55},'TestHome'}]}},
         {debug_line,713,396},
         {cons,
          {713,23},
          {tuple,
           {713,24},
           [{string,{713,25},"APPDATA"},
            {call,
             {713,36},
             {remote,{713,44},{atom,{713,36},filename},{atom,{713,45},join}},
             [{var,{713,50},'TestHome'},
              {block,0,[{string,{713,59},"AppData"}]}]}]},
          {cons,
           {714,24},
           {tuple,
            {714,24},
            [{string,{714,25},"HOMEDRIVE"},{var,{714,38},'Drive'}]},
           {cons,
            {714,46},
            {tuple,
             {714,46},
             [{string,{714,47},"HOMEPATH"},
              {call,
               {714,59},
               {remote,{714,67},{atom,{714,59},filename},{atom,{714,68},join}},
               [{var,{714,73},'Path'}]}]},
            {nil,{714,79}}}}}]},
       {clause,
        {715,19},
        [{var,{715,19},'_'}],
        [],
        [{debug_line,716,397},
         {cons,
          {716,23},
          {tuple,
           {716,24},
           [{string,{716,25},"HOME"},{var,{716,33},'TestHome'}]},
          {nil,{716,42}}}]}]}},
    {debug_line,719,398},
    {match,
     {719,5},
     {tuple,
      {719,5},
      [{atom,{719,6},ok},{var,{719,10},'Peer'},{var,{719,16},'Node'}]},
     {call,
      {719,25},
      {remote,{719,25},{atom,{719,25},test_server},{atom,{719,25},start_peer}},
      [{block,0,
        [{map,
          {719,33},
          [{map_field_assoc,
            {719,40},
            {atom,{719,36},env},
            {var,{719,43},'HomeEnv'}}]}]},
       {atom,{719,51},compile_SUITE},
       {atom,{719,51},encrypted_abstr_1}]}},
    {debug_line,721,399},
    {call,
     {721,5},
     {remote,{721,9},{atom,{721,5},erpc},{atom,{721,10},call}},
     [{var,{722,7},'Node'},
      {block,0,
       [{debug_line,723,400},
        {'fun',
         {723,7},
         {clauses,
          [{clause,
            {723,10},
            [],[],
            [{debug_line,724,401},
             {match,
              {724,15},
              {atom,{724,15},ok},
              {call,
               {724,20},
               {remote,{724,24},{atom,{724,20},file},{atom,{724,25},set_cwd}},
               [{var,{724,33},'TargetDir'}]}},
             {debug_line,726,402},
             {match,
              {726,15},
              {atom,{726,15},error},
              {call,
               {726,23},
               {remote,{726,30},{atom,{726,23},compile},{atom,{726,31},file}},
               [{var,{726,36},'Simple'},
                {block,0,
                 [{cons,
                   {726,44},
                   {atom,{726,45},encrypt_debug_info},
                   {cons,{726,64},{atom,{726,64},report},{nil,{726,70}}}}]}]}},
             {debug_line,728,403},
             {match,
              {728,15},
              {var,{728,15},'CWDKey'},
              {string,{728,24},"better use another key here"}},
             {debug_line,729,404},
             {match,
              {729,15},
              {var,{729,15},'CWDFile'},
              {string,{729,25},".erlang.crypt"}},
             {debug_line,730,405},
             {match,
              {730,15},
              {var,{730,15},'XDGKey'},
              {string,{730,24},"better use yet another key here"}},
             {debug_line,731,406},
             {match,
              {731,15},
              {var,{731,15},'XDGFile'},
              {call,
               {731,25},
               {remote,{731,33},{atom,{731,25},filename},{atom,{731,34},join}},
               [{block,0,
                 [{debug_line,732,407},
                  {call,
                   {732,27},
                   {remote,
                    {732,35},
                    {atom,{732,27},filename},
                    {atom,{732,36},basedir}},
                   [{atom,{732,44},user_config},
                    {block,0,[{string,{732,56},"erlang"}]}]}]},
                {block,0,
                 [{debug_line,733,408},{string,{733,27},".erlang.crypt"}]}]}},
             {debug_line,734,409},
             {match,
              {734,15},
              {var,{734,15},'HOMEKey'},
              {string,{734,25},"better use the home key here"}},
             {debug_line,735,410},
             {match,
              {735,15},
              {var,{735,15},'HOMEFile'},
              {call,
               {735,26},
               {remote,{735,34},{atom,{735,26},filename},{atom,{735,35},join}},
               [{var,{735,40},'TestHome'},
                {block,0,[{string,{735,49},".erlang.crypt"}]}]}},
             {debug_line,737,411},
             {call,
              {737,15},
              {atom,{737,15},write_crypt_file},
              [{var,{737,32},'CWDFile'},{var,{737,41},'CWDKey'}]},
             {debug_line,738,412},
             {call,
              {738,15},
              {atom,{738,15},write_crypt_file},
              [{var,{738,32},'XDGFile'},{var,{738,41},'XDGKey'}]},
             {debug_line,739,413},
             {call,
              {739,15},
              {atom,{739,15},write_crypt_file},
              [{var,{739,32},'HOMEFile'},{var,{739,42},'HOMEKey'}]},
             {debug_line,742,414},
             {match,
              {742,15},
              {tuple,{742,15},[{atom,{742,16},ok},{atom,{742,19},simple}]},
              {call,
               {742,29},
               {remote,{742,36},{atom,{742,29},compile},{atom,{742,37},file}},
               [{var,{742,42},'Simple'},
                {block,0,
                 [{cons,
                   {742,50},
                   {atom,{742,51},encrypt_debug_info},
                   {cons,{742,70},{atom,{742,70},report},{nil,{742,76}}}}]}]}},
             {debug_line,743,415},
             {call,
              {743,15},
              {atom,{743,15},verify_abstract},
              [{block,0,[{string,{743,31},"simple.beam"}]},
               {atom,{743,46},erl_abstract_code}]},
             {debug_line,744,416},
             {match,
              {744,15},
              {atom,{744,15},ok},
              {call,
               {744,20},
               {remote,{744,24},{atom,{744,20},file},{atom,{744,25},delete}},
               [{var,{744,32},'CWDFile'}]}},
             {debug_line,745,417},
             {call,
              {745,15},
              {remote,
               {745,23},
               {atom,{745,15},beam_lib},
               {atom,{745,24},clear_crypto_key_fun}},
              []},
             {debug_line,748,418},
             {match,
              {748,15},
              {tuple,
               {748,15},
               [{atom,{748,16},error},
                {atom,{748,22},beam_lib},
                {tuple,
                 {748,31},
                 [{atom,{748,32},key_missing_or_invalid},
                  {string,{748,55},"simple.beam"},
                  {atom,{748,69},abstract_code}]}]},
              {call,
               {749,19},
               {remote,
                {749,27},
                {atom,{749,19},beam_lib},
                {atom,{749,28},chunks}},
               [{block,0,
                 [{debug_line,749,419},{string,{749,35},"simple.beam"}]},
                {block,0,
                 [{cons,
                   {749,50},
                   {atom,{749,51},abstract_code},
                   {nil,{749,64}}}]}]}},
             {debug_line,752,420},
             {match,
              {752,15},
              {tuple,{752,15},[{atom,{752,16},ok},{atom,{752,19},simple}]},
              {call,
               {752,29},
               {remote,{752,36},{atom,{752,29},compile},{atom,{752,37},file}},
               [{var,{752,42},'Simple'},
                {block,0,
                 [{cons,
                   {752,50},
                   {atom,{752,51},encrypt_debug_info},
                   {cons,{752,70},{atom,{752,70},report},{nil,{752,76}}}}]}]}},
             {debug_line,753,421},
             {call,
              {753,15},
              {atom,{753,15},verify_abstract},
              [{block,0,[{string,{753,31},"simple.beam"}]},
               {atom,{753,46},erl_abstract_code}]},
             {debug_line,754,422},
             {match,
              {754,15},
              {atom,{754,15},ok},
              {call,
               {754,20},
               {remote,{754,24},{atom,{754,20},file},{atom,{754,25},delete}},
               [{var,{754,32},'HOMEFile'}]}},
             {debug_line,755,423},
             {call,
              {755,15},
              {remote,
               {755,23},
               {atom,{755,15},beam_lib},
               {atom,{755,24},clear_crypto_key_fun}},
              []},
             {debug_line,758,424},
             {match,
              {758,15},
              {tuple,
               {758,15},
               [{atom,{758,16},error},
                {atom,{758,22},beam_lib},
                {tuple,
                 {758,31},
                 [{atom,{758,32},key_missing_or_invalid},
                  {string,{758,55},"simple.beam"},
                  {atom,{758,69},abstract_code}]}]},
              {call,
               {759,19},
               {remote,
                {759,27},
                {atom,{759,19},beam_lib},
                {atom,{759,28},chunks}},
               [{block,0,
                 [{debug_line,759,425},{string,{759,35},"simple.beam"}]},
                {block,0,
                 [{cons,
                   {759,50},
                   {atom,{759,51},abstract_code},
                   {nil,{759,64}}}]}]}},
             {debug_line,763,426},
             {match,
              {763,15},
              {tuple,{763,15},[{atom,{763,16},ok},{atom,{763,19},simple}]},
              {call,
               {763,29},
               {remote,{763,36},{atom,{763,29},compile},{atom,{763,37},file}},
               [{var,{763,42},'Simple'},
                {block,0,
                 [{cons,
                   {763,50},
                   {atom,{763,51},encrypt_debug_info},
                   {cons,{763,70},{atom,{763,70},report},{nil,{763,76}}}}]}]}},
             {debug_line,764,427},
             {call,
              {764,15},
              {atom,{764,15},verify_abstract},
              [{block,0,[{string,{764,31},"simple.beam"}]},
               {atom,{764,46},erl_abstract_code}]},
             {debug_line,765,428},
             {match,
              {765,15},
              {atom,{765,15},ok},
              {call,
               {765,20},
               {remote,{765,24},{atom,{765,20},file},{atom,{765,25},delete}},
               [{var,{765,32},'XDGFile'}]}},
             {debug_line,767,429},
             {call,
              {767,15},
              {remote,
               {767,23},
               {atom,{767,15},beam_lib},
               {atom,{767,24},clear_crypto_key_fun}},
              []},
             {debug_line,768,430},
             {match,
              {768,15},
              {tuple,
               {768,15},
               [{atom,{768,16},error},
                {atom,{768,22},beam_lib},
                {tuple,
                 {768,31},
                 [{atom,{768,32},key_missing_or_invalid},
                  {string,{768,55},"simple.beam"},
                  {atom,{768,69},abstract_code}]}]},
              {call,
               {769,19},
               {remote,
                {769,27},
                {atom,{769,19},beam_lib},
                {atom,{769,28},chunks}},
               [{block,0,
                 [{debug_line,769,431},{string,{769,35},"simple.beam"}]},
                {block,0,
                 [{cons,
                   {769,50},
                   {atom,{769,51},abstract_code},
                   {nil,{769,64}}}]}]}}]}]}}]}]},
    {debug_line,773,432},
    {call,
     {773,5},
     {remote,{773,9},{atom,{773,5},peer},{atom,{773,10},stop}},
     [{var,{773,15},'Peer'}]},
    {debug_line,777,433},
    {call,
     {777,5},
     {atom,{777,5},install_crypto_key},
     [{block,0,[{string,{777,24},"an old key"}]}]},
    {debug_line,778,434},
    {match,
     {778,5},
     {var,{778,5},'KeyCompat'},
     {call,
      {778,17},
      {remote,{778,25},{atom,{778,17},filename},{atom,{778,26},join}},
      [{block,0,
        [{call,
          {778,31},
          {remote,{778,39},{atom,{778,31},filename},{atom,{778,40},dirname}},
          [{var,{778,48},'Simple'}]}]},
       {block,0,
        [{debug_line,779,435},{string,{779,10},"key_compatibility"}]}]}},
    {debug_line,780,436},
    {match,
     {780,5},
     {tuple,
      {780,5},
      [{atom,{780,6},ok},
       {tuple,
        {780,9},
        [{atom,{780,10},key_compatibility},
         {cons,{780,28},{var,{780,29},'Chunk'},{nil,{780,34}}}]}]},
     {call,
      {780,40},
      {remote,{780,48},{atom,{780,40},beam_lib},{atom,{780,49},chunks}},
      [{var,{780,56},'KeyCompat'},
       {block,0,
        [{debug_line,781,437},
         {cons,{781,14},{atom,{781,15},abstract_code},{nil,{781,28}}}]}]}},
    {debug_line,782,438},
    {match,
     {782,5},
     {tuple,
      {782,5},
      [{atom,{782,6},abstract_code},
       {tuple,{782,20},[{atom,{782,21},raw_abstract_v1},{var,{782,37},'_'}]}]},
     {var,{782,43},'Chunk'}},
    {debug_line,784,439},
    {atom,{784,5},ok}]}]}.
{function,
    {786,1},
    write_crypt_file,2,
    [{clause,
         {786,1},
         [{var,{786,1},'_'},{var,{786,1},'_'}],
         [[{call,
               {786,1},
               {remote,
                   {786,1},
                   {atom,{786,1},fake},
                   {atom,{786,1},is_beam_bif_info}},
               []}]],
         [{debug_line,786,440},{atom,{786,1},ignore}]},
     {clause,
         {786,1},
         [{var,{786,18},'File'},{var,{786,24},'Key'}],
         [],
         [{debug_line,787,441},
          {match,
              {787,5},
              {var,{787,5},'Contents'},
              {cons,
                  {787,16},
                  {string,{787,17},"[{debug_info,des3_cbc,simple,\""},
                  {cons,
                      {787,51},
                      {var,{787,51},'Key'},
                      {cons,
                          {787,55},
                          {string,{787,55},"\"}].\n"},
                          {nil,{787,64}}}}}},
          {debug_line,788,442},
          {call,
              {788,5},
              {remote,{788,7},{atom,{788,5},io},{atom,{788,8},format}},
              [{block,0,[{string,{788,15},"~s: ~s\n"}]},
               {block,0,
                   [{cons,
                        {788,27},
                        {var,{788,28},'File'},
                        {cons,
                            {788,34},
                            {var,{788,34},'Contents'},
                            {nil,{788,42}}}}]}]},
          {debug_line,789,443},
          {match,
              {789,5},
              {atom,{789,5},ok},
              {call,
                  {789,10},
                  {remote,
                      {789,17},
                      {atom,{789,10},filelib},
                      {atom,{789,18},ensure_dir}},
                  [{var,{789,29},'File'}]}},
          {debug_line,790,444},
          {match,
              {790,5},
              {atom,{790,5},ok},
              {call,
                  {790,10},
                  {remote,
                      {790,14},
                      {atom,{790,10},file},
                      {atom,{790,15},write_file}},
                  [{var,{790,26},'File'},{var,{790,32},'Contents'}]}}]}]}.
{function,
 {792,1},
 encrypted_abstr_no_crypto,2,
 [{clause,
   {792,1},
   [{var,{792,1},'_'},{var,{792,1},'_'}],
   [[{call,
      {792,1},
      {remote,{792,1},{atom,{792,1},fake},{atom,{792,1},is_beam_bif_info}},
      []}]],
   [{debug_line,792,445},{atom,{792,1},ignore}]},
  {clause,
   {792,1},
   [{var,{792,27},'Simple'},{var,{792,35},'Target'}],
   [],
   [{debug_line,793,446},
    {call,
     {793,5},
     {remote,{793,7},{atom,{793,5},io},{atom,{793,8},format}},
     [{block,0,[{string,{793,15},"simpe: ~p~n"}]},
      {block,0,[{cons,{793,30},{var,{793,31},'Simple'},{nil,{793,37}}}]}]},
    {debug_line,794,447},
    {match,
     {794,5},
     {var,{794,5},'TargetDir'},
     {call,
      {794,17},
      {remote,{794,25},{atom,{794,17},filename},{atom,{794,26},dirname}},
      [{var,{794,34},'Target'}]}},
    {debug_line,795,448},
    {match,{795,5},{var,{795,5},'Key'},{string,{795,11},"ablurf123BX#$;3"}},
    {debug_line,796,449},
    {match,
     {796,5},
     {atom,{796,5},error},
     {call,
      {796,13},
      {remote,{796,20},{atom,{796,13},compile},{atom,{796,21},file}},
      [{var,{796,26},'Simple'},
       {block,0,
        [{debug_line,797,450},
         {cons,
          {797,11},
          {atom,{797,12},debug_info},
          {cons,
           {797,23},
           {tuple,
            {797,23},
            [{atom,{797,24},debug_info_key},{var,{797,39},'Key'}]},
           {cons,
            {798,5},
            {tuple,{798,5},[{atom,{798,6},outdir},{var,{798,13},'TargetDir'}]},
            {cons,{798,24},{atom,{798,24},report},{nil,{798,30}}}}}}]}]}},
    {debug_line,799,451},
    {atom,{799,5},ok}]}]}.
{function,
    {801,1},
    verify_abstract,2,
    [{clause,
         {801,1},
         [{var,{801,1},'_'},{var,{801,1},'_'}],
         [[{call,
               {801,1},
               {remote,
                   {801,1},
                   {atom,{801,1},fake},
                   {atom,{801,1},is_beam_bif_info}},
               []}]],
         [{debug_line,801,452},{atom,{801,1},ignore}]},
     {clause,
         {801,1},
         [{var,{801,17},'Beam'},{var,{801,23},'Backend'}],
         [],
         [{debug_line,802,453},
          {match,
              {802,5},
              {tuple,
                  {802,5},
                  [{atom,{802,6},ok},
                   {tuple,
                       {802,9},
                       [{atom,{802,10},simple},
                        {cons,
                            {802,17},
                            {var,{802,18},'Abst'},
                            {cons,
                                {802,24},
                                {var,{802,24},'Dbgi'},
                                {nil,{802,28}}}}]}]},
              {call,
                  {802,34},
                  {remote,
                      {802,42},
                      {atom,{802,34},beam_lib},
                      {atom,{802,43},chunks}},
                  [{var,{802,50},'Beam'},
                   {block,0,
                       [{cons,
                            {802,56},
                            {atom,{802,57},abstract_code},
                            {cons,
                                {802,72},
                                {atom,{802,72},debug_info},
                                {nil,{802,82}}}}]}]}},
          {debug_line,803,454},
          {match,
              {803,5},
              {tuple,
                  {803,5},
                  [{atom,{803,6},abstract_code},
                   {tuple,
                       {803,20},
                       [{atom,{803,21},raw_abstract_v1},{var,{803,37},'_'}]}]},
              {var,{803,43},'Abst'}},
          {debug_line,804,455},
          {match,
              {804,5},
              {tuple,
                  {804,5},
                  [{atom,{804,6},debug_info},
                   {tuple,
                       {804,17},
                       [{atom,{804,18},debug_info_v1},
                        {var,{804,32},'Backend'},
                        {var,{804,40},'_'}]}]},
              {var,{804,46},'Dbgi'}}]}]}.
{function,
    {806,1},
    has_crypto,0,
    [{clause,
         {806,1},
         [],
         [[{call,
               {806,1},
               {remote,
                   {806,1},
                   {atom,{806,1},fake},
                   {atom,{806,1},is_beam_bif_info}},
               []}]],
         [{debug_line,806,456},{atom,{806,1},ignore}]},
     {clause,
         {806,1},
         [],[],
         [{debug_line,807,457},
          {'try',
              {807,5},
              [{debug_line,808,458},
               {call,
                   {808,2},
                   {remote,
                       {808,13},
                       {atom,{808,2},application},
                       {atom,{808,14},start}},
                   [{atom,{808,20},crypto}]},
               {debug_line,809,459},
               {call,
                   {809,2},
                   {remote,
                       {809,13},
                       {atom,{809,2},application},
                       {atom,{809,14},stop}},
                   [{atom,{809,19},crypto}]},
               {debug_line,810,460},
               {atom,{810,2},true}],
              [],
              [{clause,
                   {812,2},
                   [{tuple,
                        {812,2},
                        [{atom,{812,2},error},
                         {var,{812,8},'_'},
                         {var,{812,8},'_'}]}],
                   [],
                   [{debug_line,812,461},{atom,{812,13},false}]}],
              []}]}]}.
{function,
    {815,1},
    install_crypto_key,1,
    [{clause,
         {815,1},
         [{var,{815,1},'_'}],
         [[{call,
               {815,1},
               {remote,
                   {815,1},
                   {atom,{815,1},fake},
                   {atom,{815,1},is_beam_bif_info}},
               []}]],
         [{debug_line,815,462},{atom,{815,1},ignore}]},
     {clause,
         {815,1},
         [{var,{815,20},'Key'}],
         [],
         [{debug_line,816,463},
          {match,
              {816,5},
              {var,{816,5},'F'},
              {'fun',
                  {816,9},
                  {clauses,
                      [{clause,
                           {816,13},
                           [{atom,{816,14},init}],
                           [],
                           [{atom,{816,23},ok}]},
                       {clause,
                           {817,6},
                           [{tuple,
                                {817,7},
                                [{atom,{817,8},debug_info},
                                 {atom,{817,19},des3_cbc},
                                 {var,{817,28},'_'},
                                 {var,{817,30},'_'}]}],
                           [],
                           [{debug_line,817,464},{var,{817,37},'Key'}]},
                       {clause,
                           {818,6},
                           [{atom,{818,7},clear}],
                           [],
                           [{debug_line,818,465},{atom,{818,17},ok}]}]}}},
          {debug_line,820,466},
          {match,
              {820,5},
              {atom,{820,5},ok},
              {call,
                  {820,10},
                  {remote,
                      {820,18},
                      {atom,{820,10},beam_lib},
                      {atom,{820,19},crypto_key_fun}},
                  [{var,{820,34},'F'}]}}]}]}.
{function,{823,1},
          debug_info,4,
          [{clause,{823,1},
                   [{var,{823,1},'_'},
                    {var,{823,1},'_'},
                    {var,{823,1},'_'},
                    {var,{823,1},'_'}],
                   [[{call,{823,1},
                           {remote,{823,1},
                                   {atom,{823,1},fake},
                                   {atom,{823,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,823,467},{atom,{823,1},ignore}]},
           {clause,{823,1},
                   [{atom,{823,12},erlang_v1},
                    {var,{823,23},'Module'},
                    {atom,{823,31},ok},
                    {var,{823,35},'_Opts'}],
                   [],
                   [{debug_line,824,468},
                    {tuple,{824,5},
                           [{atom,{824,6},ok},
                            {cons,{824,10},
                                  {var,{824,11},'Module'},
                                  {nil,{824,17}}}]}]},
           {clause,{825,1},
                   [{atom,{825,12},erlang_v1},
                    {var,{825,23},'_Module'},
                    {atom,{825,32},error},
                    {var,{825,39},'_Opts'}],
                   [],
                   [{debug_line,826,469},
                    {tuple,{826,5},
                           [{atom,{826,6},error},
                            {atom,{826,13},unknown_format}]}]}]}.
{function,
 {828,1},
 custom_debug_info,1,
 [{clause,
   {828,1},
   [{var,{828,1},'_'}],
   [[{call,
      {828,1},
      {remote,{828,1},{atom,{828,1},fake},{atom,{828,1},is_beam_bif_info}},
      []}]],
   [{debug_line,828,470},{atom,{828,1},ignore}]},
  {clause,
   {828,1},
   [{var,{828,19},'Config'}],
   [[{call,
      {828,32},
      {remote,{828,32},{atom,{828,32},erlang},{atom,{828,32},is_list}},
      [{var,{828,40},'Config'}]}]],
   [{debug_line,829,471},
    {match,
     {829,5},
     {tuple,{829,5},[{var,{829,6},'Simple'},{var,{829,13},'_'}]},
     {call,
      {829,18},
      {atom,{829,18},get_files},
      [{var,{829,28},'Config'},
       {atom,{829,36},simple},
       {block,0,[{string,{829,44},"file_1"}]}]}},
    {debug_line,831,472},
    {match,
     {831,5},
     {tuple,
      {831,5},
      [{atom,{831,6},ok},{atom,{831,9},simple},{var,{831,16},'OkBin'}]},
     {call,
      {831,25},
      {remote,{831,32},{atom,{831,25},compile},{atom,{831,33},file}},
      [{var,{831,38},'Simple'},
       {block,0,
        [{cons,
          {831,46},
          {atom,{831,47},binary},
          {cons,
           {831,55},
           {tuple,
            {831,55},
            [{atom,{831,56},debug_info},
             {tuple,
              {831,67},
              [{atom,{831,69},compile_SUITE},{atom,{831,76},ok}]}]},
           {nil,{831,80}}}}]}]}},
    {debug_line,832,473},
    {match,
     {832,5},
     {tuple,
      {832,5},
      [{atom,{832,6},ok},
       {tuple,
        {832,9},
        [{atom,{832,10},simple},
         {cons,
          {832,17},
          {tuple,
           {832,18},
           [{atom,{832,19},abstract_code},
            {tuple,
             {832,33},
             [{atom,{832,34},raw_abstract_v1},
              {cons,{832,50},{atom,{832,51},simple},{nil,{832,57}}}]}]},
          {nil,{832,60}}}]}]},
     {call,
      {833,2},
      {remote,{833,10},{atom,{833,2},beam_lib},{atom,{833,11},chunks}},
      [{var,{833,18},'OkBin'},
       {block,0,
        [{debug_line,833,474},
         {cons,{833,25},{atom,{833,26},abstract_code},{nil,{833,39}}}]}]}},
    {debug_line,834,475},
    {match,
     {834,5},
     {tuple,
      {834,5},
      [{atom,{834,6},ok},
       {tuple,
        {834,9},
        [{atom,{834,10},simple},
         {cons,
          {834,17},
          {tuple,
           {834,18},
           [{atom,{834,19},debug_info},
            {tuple,
             {834,30},
             [{atom,{834,31},debug_info_v1},
              {atom,{834,46},compile_SUITE},
              {atom,{834,53},ok}]}]},
          {nil,{834,57}}}]}]},
     {call,
      {835,2},
      {remote,{835,10},{atom,{835,2},beam_lib},{atom,{835,11},chunks}},
      [{var,{835,18},'OkBin'},
       {block,0,
        [{debug_line,835,476},
         {cons,{835,25},{atom,{835,26},debug_info},{nil,{835,36}}}]}]}},
    {debug_line,837,477},
    {match,
     {837,5},
     {tuple,
      {837,5},
      [{atom,{837,6},ok},{atom,{837,9},simple},{var,{837,16},'ErrorBin'}]},
     {call,
      {837,28},
      {remote,{837,35},{atom,{837,28},compile},{atom,{837,36},file}},
      [{var,{837,41},'Simple'},
       {block,0,
        [{cons,
          {837,49},
          {atom,{837,50},binary},
          {cons,
           {837,58},
           {tuple,
            {837,58},
            [{atom,{837,59},debug_info},
             {tuple,
              {837,70},
              [{atom,{837,72},compile_SUITE},{atom,{837,79},error}]}]},
           {nil,{837,86}}}}]}]}},
    {debug_line,838,478},
    {match,
     {838,5},
     {tuple,
      {838,5},
      [{atom,{838,6},ok},
       {tuple,
        {838,9},
        [{atom,{838,10},simple},
         {cons,
          {838,17},
          {tuple,
           {838,18},
           [{atom,{838,19},abstract_code},{atom,{838,33},no_abstract_code}]},
          {nil,{838,50}}}]}]},
     {call,
      {839,2},
      {remote,{839,10},{atom,{839,2},beam_lib},{atom,{839,11},chunks}},
      [{var,{839,18},'ErrorBin'},
       {block,0,
        [{debug_line,839,479},
         {cons,{839,28},{atom,{839,29},abstract_code},{nil,{839,42}}}]}]}},
    {debug_line,840,480},
    {match,
     {840,5},
     {tuple,
      {840,5},
      [{atom,{840,6},ok},
       {tuple,
        {840,9},
        [{atom,{840,10},simple},
         {cons,
          {840,17},
          {tuple,
           {840,18},
           [{atom,{840,19},debug_info},
            {tuple,
             {840,30},
             [{atom,{840,31},debug_info_v1},
              {atom,{840,46},compile_SUITE},
              {atom,{840,53},error}]}]},
          {nil,{840,60}}}]}]},
     {call,
      {841,2},
      {remote,{841,10},{atom,{841,2},beam_lib},{atom,{841,11},chunks}},
      [{var,{841,18},'ErrorBin'},
       {block,0,
        [{debug_line,841,481},
         {cons,{841,28},{atom,{841,29},debug_info},{nil,{841,39}}}]}]}}]}]}.
{function,
    {843,1},
    custom_compile_info,1,
    [{clause,
         {843,1},
         [{var,{843,1},'_'}],
         [[{call,
               {843,1},
               {remote,
                   {843,1},
                   {atom,{843,1},fake},
                   {atom,{843,1},is_beam_bif_info}},
               []}]],
         [{debug_line,843,482},{atom,{843,1},ignore}]},
     {clause,
         {843,1},
         [{var,{843,21},'Config'}],
         [[{call,
               {843,34},
               {remote,
                   {843,34},
                   {atom,{843,34},erlang},
                   {atom,{843,34},is_list}},
               [{var,{843,42},'Config'}]}]],
         [{debug_line,844,483},
          {match,
              {844,5},
              {var,{844,5},'Anno'},
              {call,
                  {844,12},
                  {remote,
                      {844,20},
                      {atom,{844,12},erl_anno},
                      {atom,{844,21},new}},
                  [{integer,{844,25},1}]}},
          {debug_line,845,484},
          {match,
              {845,5},
              {var,{845,5},'Forms'},
              {cons,
                  {845,13},
                  {tuple,
                      {845,14},
                      [{atom,{845,15},attribute},
                       {var,{845,25},'Anno'},
                       {atom,{845,30},module},
                       {atom,{845,37},custom_compile_info}]},
                  {nil,{845,57}}}},
          {debug_line,846,485},
          {match,
              {846,5},
              {var,{846,5},'Opts'},
              {cons,
                  {846,12},
                  {atom,{846,13},binary},
                  {cons,
                      {846,20},
                      {tuple,
                          {846,20},
                          [{atom,{846,21},compile_info},
                           {cons,
                               {846,34},
                               {tuple,
                                   {846,35},
                                   [{atom,{846,36},another},
                                    {atom,{846,44},version}]},
                               {nil,{846,52}}}]},
                      {nil,{846,54}}}}},
          {debug_line,848,486},
          {match,
              {848,5},
              {tuple,
                  {848,5},
                  [{atom,{848,6},ok},
                   {atom,{848,9},custom_compile_info},
                   {var,{848,29},'Bin'}]},
              {call,
                  {848,36},
                  {remote,
                      {848,43},
                      {atom,{848,36},compile},
                      {atom,{848,44},forms}},
                  [{var,{848,50},'Forms'},{var,{848,57},'Opts'}]}},
          {debug_line,849,487},
          {match,
              {849,5},
              {tuple,
                  {849,5},
                  [{atom,{849,6},ok},
                   {tuple,
                       {849,9},
                       [{atom,{849,10},custom_compile_info},
                        {cons,
                            {849,30},
                            {tuple,
                                {849,31},
                                [{atom,{849,32},compile_info},
                                 {var,{849,45},'CompileInfo'}]},
                            {nil,{849,57}}}]}]},
              {call,
                  {850,2},
                  {remote,
                      {850,10},
                      {atom,{850,2},beam_lib},
                      {atom,{850,11},chunks}},
                  [{var,{850,18},'Bin'},
                   {block,0,
                       [{debug_line,850,488},
                        {cons,
                            {850,23},
                            {atom,{850,24},compile_info},
                            {nil,{850,36}}}]}]}},
          {debug_line,851,489},
          {match,
              {851,5},
              {atom,{851,5},version},
              {call,
                  {851,15},
                  {remote,
                      {851,24},
                      {atom,{851,15},proplists},
                      {atom,{851,25},get_value}},
                  [{atom,{851,35},another},{var,{851,44},'CompileInfo'}]}},
          {debug_line,852,490},
          {match,
              {852,5},
              {var,{852,5},'CompileOpts'},
              {call,
                  {852,19},
                  {remote,
                      {852,28},
                      {atom,{852,19},proplists},
                      {atom,{852,29},get_value}},
                  [{atom,{852,39},options},{var,{852,48},'CompileInfo'}]}},
          {debug_line,853,491},
          {match,
              {853,5},
              {atom,{853,5},undefined},
              {call,
                  {853,17},
                  {remote,
                      {853,26},
                      {atom,{853,17},proplists},
                      {atom,{853,27},get_value}},
                  [{atom,{853,37},compile_info},
                   {var,{853,51},'CompileOpts'}]}},
          {debug_line,855,492},
          {match,
              {855,5},
              {tuple,
                  {855,5},
                  [{atom,{855,6},ok},
                   {atom,{855,9},custom_compile_info},
                   {var,{855,29},'DetBin'}]},
              {call,
                  {855,39},
                  {remote,
                      {855,46},
                      {atom,{855,39},compile},
                      {atom,{855,47},forms}},
                  [{var,{855,53},'Forms'},
                   {block,0,
                       [{cons,
                            {855,60},
                            {atom,{855,61},deterministic},
                            {var,{855,75},'Opts'}}]}]}},
          {debug_line,856,493},
          {match,
              {856,5},
              {tuple,
                  {856,5},
                  [{atom,{856,6},ok},
                   {tuple,
                       {856,9},
                       [{atom,{856,10},custom_compile_info},
                        {cons,
                            {856,30},
                            {tuple,
                                {856,31},
                                [{atom,{856,32},compile_info},
                                 {var,{856,45},'DetInfo'}]},
                            {nil,{856,53}}}]}]},
              {call,
                  {857,2},
                  {remote,
                      {857,10},
                      {atom,{857,2},beam_lib},
                      {atom,{857,11},chunks}},
                  [{var,{857,18},'DetBin'},
                   {block,0,
                       [{debug_line,857,494},
                        {cons,
                            {857,26},
                            {atom,{857,27},compile_info},
                            {nil,{857,39}}}]}]}},
          {debug_line,858,495},
          {match,
              {858,5},
              {atom,{858,5},version},
              {call,
                  {858,15},
                  {remote,
                      {858,24},
                      {atom,{858,15},proplists},
                      {atom,{858,25},get_value}},
                  [{atom,{858,35},another},{var,{858,44},'DetInfo'}]}}]}]}.
{function,
    {860,1},
    cover,1,
    [{clause,
         {860,1},
         [{var,{860,1},'_'}],
         [[{call,
               {860,1},
               {remote,
                   {860,1},
                   {atom,{860,1},fake},
                   {atom,{860,1},is_beam_bif_info}},
               []}]],
         [{debug_line,860,496},{atom,{860,1},ignore}]},
     {clause,
         {860,1},
         [{var,{860,7},'Config'}],
         [[{call,
               {860,20},
               {remote,
                   {860,20},
                   {atom,{860,20},erlang},
                   {atom,{860,20},is_list}},
               [{var,{860,28},'Config'}]}]],
         [{debug_line,861,497},
          {call,
              {861,5},
              {remote,{861,7},{atom,{861,5},io},{atom,{861,8},format}},
              [{block,0,[{string,{861,15},"~p\n"}]},
               {block,0,
                   [{cons,
                        {861,23},
                        {call,
                            {861,24},
                            {remote,
                                {861,31},
                                {atom,{861,24},compile},
                                {atom,{861,32},options}},
                            []},
                        {nil,{861,41}}}]}]},
          {debug_line,862,498},
          {atom,{862,5},ok}]}]}.
{function,
 {864,1},
 do_listing,4,
 [{clause,
   {864,1},
   [{var,{864,1},'_'},{var,{864,1},'_'},{var,{864,1},'_'},{var,{864,1},'_'}],
   [[{call,
      {864,1},
      {remote,{864,1},{atom,{864,1},fake},{atom,{864,1},is_beam_bif_info}},
      []}]],
   [{debug_line,864,499},{atom,{864,1},ignore}]},
  {clause,
   {864,1},
   [{var,{864,12},'Source'},
    {var,{864,20},'TargetDir'},
    {var,{864,31},'Type'},
    {var,{864,37},'Ext'}],
   [],
   [{debug_line,865,500},
    {call,
     {865,5},
     {remote,{865,7},{atom,{865,5},io},{atom,{865,8},format}},
     [{block,0,
       [{string,{865,15},"Source: ~p TargetDir: ~p\n  Type: ~p Ext: ~p\n"}]},
      {block,0,
       [{debug_line,866,501},
        {cons,
         {866,8},
         {var,{866,9},'Source'},
         {cons,
          {866,17},
          {var,{866,17},'TargetDir'},
          {cons,
           {866,28},
           {var,{866,28},'Type'},
           {cons,{866,34},{var,{866,34},'Ext'},{nil,{866,37}}}}}}]}]},
    {debug_line,867,502},
    {'case',
     {867,5},
     {call,
      {867,10},
      {remote,{867,17},{atom,{867,10},compile},{atom,{867,18},file}},
      [{var,{867,23},'Source'},
       {block,0,
        [{cons,
          {867,31},
          {var,{867,32},'Type'},
          {cons,
           {867,38},
           {atom,{867,38},time},
           {cons,
            {867,44},
            {tuple,
             {867,44},
             [{atom,{867,45},outdir},{var,{867,53},'TargetDir'}]},
            {nil,{867,63}}}}}]}]},
     [{clause,
       {868,2},
       [{tuple,{868,2},[{atom,{868,3},ok},{var,{868,7},'_'}]}],
       [],
       [{debug_line,868,503},{atom,{868,13},ok}]},
      {clause,
       {869,2},
       [{var,{869,2},'Other'}],
       [],
       [{debug_line,869,504},
        {call,
         {869,11},
         {remote,{869,13},{atom,{869,11},ct},{atom,{869,14},fail}},
         [{block,0,
           [{tuple,
             {869,19},
             [{atom,{869,20},unexpected_result},
              {var,{869,39},'Other'}]}]}]}]}]},
    {debug_line,871,505},
    {match,
     {871,5},
     {var,{871,5},'SourceBase'},
     {call,
      {871,18},
      {remote,{871,26},{atom,{871,18},filename},{atom,{871,27},rootname}},
      [{block,0,
        [{call,
          {871,36},
          {remote,{871,44},{atom,{871,36},filename},{atom,{871,45},basename}},
          [{var,{871,54},'Source'}]}]}]}},
    {debug_line,873,506},
    {match,
     {873,5},
     {var,{873,5},'Target'},
     {call,
      {873,14},
      {remote,{873,22},{atom,{873,14},filename},{atom,{873,23},join}},
      [{var,{873,28},'TargetDir'},
       {block,0,
        [{op,
          {873,50},
          '++',
          {var,{873,39},'SourceBase'},
          {var,{873,53},'Ext'}}]}]}},
    {debug_line,874,507},
    {match,
     {874,5},
     {atom,{874,5},true},
     {call,{874,12},{atom,{874,12},exists},[{var,{874,19},'Target'}]}}]}]}.
{function,
    {876,1},
    get_files,3,
    [{clause,
         {876,1},
         [{var,{876,1},'_'},{var,{876,1},'_'},{var,{876,1},'_'}],
         [[{call,
               {876,1},
               {remote,
                   {876,1},
                   {atom,{876,1},fake},
                   {atom,{876,1},is_beam_bif_info}},
               []}]],
         [{debug_line,876,508},{atom,{876,1},ignore}]},
     {clause,
         {876,1},
         [{var,{876,11},'Config'},
          {var,{876,19},'Module'},
          {var,{876,27},'OutputName'}],
         [],
         [{debug_line,877,509},
          {call,
              {877,5},
              {remote,{877,9},{atom,{877,5},code},{atom,{877,10},delete}},
              [{var,{877,17},'Module'}]},
          {debug_line,878,510},
          {call,
              {878,5},
              {remote,{878,9},{atom,{878,5},code},{atom,{878,10},purge}},
              [{var,{878,16},'Module'}]},
          {debug_line,879,511},
          {match,
              {879,5},
              {var,{879,5},'DataDir'},
              {call,
                  {879,15},
                  {remote,
                      {879,24},
                      {atom,{879,15},proplists},
                      {atom,{879,25},get_value}},
                  [{atom,{879,35},data_dir},{var,{879,45},'Config'}]}},
          {debug_line,880,512},
          {match,
              {880,5},
              {var,{880,5},'PrivDir'},
              {call,
                  {880,15},
                  {remote,
                      {880,24},
                      {atom,{880,15},proplists},
                      {atom,{880,25},get_value}},
                  [{atom,{880,35},priv_dir},{var,{880,45},'Config'}]}},
          {debug_line,881,513},
          {match,
              {881,5},
              {var,{881,5},'Src'},
              {call,
                  {881,11},
                  {remote,
                      {881,19},
                      {atom,{881,11},filename},
                      {atom,{881,20},join}},
                  [{var,{881,25},'DataDir'},
                   {block,0,
                       [{call,
                            {881,34},
                            {remote,
                                {881,34},
                                {atom,{881,34},erlang},
                                {atom,{881,34},atom_to_list}},
                            [{var,{881,47},'Module'}]}]}]}},
          {debug_line,882,514},
          {match,
              {882,5},
              {var,{882,5},'TargetDir'},
              {call,
                  {882,17},
                  {remote,
                      {882,25},
                      {atom,{882,17},filename},
                      {atom,{882,26},join}},
                  [{var,{882,31},'PrivDir'},{var,{882,40},'OutputName'}]}},
          {debug_line,883,515},
          {match,
              {883,5},
              {atom,{883,5},ok},
              {call,
                  {883,10},
                  {remote,
                      {883,14},
                      {atom,{883,10},file},
                      {atom,{883,15},make_dir}},
                  [{var,{883,24},'TargetDir'}]}},
          {debug_line,884,516},
          {match,
              {884,5},
              {var,{884,5},'File'},
              {op,{884,33},
                  '++',
                  {call,
                      {884,12},
                      {remote,
                          {884,12},
                          {atom,{884,12},erlang},
                          {atom,{884,12},atom_to_list}},
                      [{var,{884,25},'Module'}]},
                  {call,
                      {884,36},
                      {remote,
                          {884,40},
                          {atom,{884,36},code},
                          {atom,{884,41},objfile_extension}},
                      []}}},
          {debug_line,885,517},
          {match,
              {885,5},
              {var,{885,5},'Target'},
              {call,
                  {885,14},
                  {remote,
                      {885,22},
                      {atom,{885,14},filename},
                      {atom,{885,23},join}},
                  [{var,{885,28},'TargetDir'},{var,{885,39},'File'}]}},
          {debug_line,886,518},
          {tuple,{886,5},[{var,{886,6},'Src'},{var,{886,11},'Target'}]}]}]}.
{function,
 {888,1},
 run,3,
 [{clause,
   {888,1},
   [{var,{888,1},'_'},{var,{888,1},'_'},{var,{888,1},'_'}],
   [[{call,
      {888,1},
      {remote,{888,1},{atom,{888,1},fake},{atom,{888,1},is_beam_bif_info}},
      []}]],
   [{debug_line,888,519},{atom,{888,1},ignore}]},
  {clause,
   {888,1},
   [{var,{888,5},'Target'},{var,{888,13},'Func'},{var,{888,19},'Args'}],
   [],
   [{debug_line,889,520},
    {match,
     {889,5},
     {var,{889,5},'Module'},
     {call,
      {889,14},
      {remote,{889,14},{atom,{889,14},erlang},{atom,{889,14},list_to_atom}},
      [{block,0,
        [{call,
          {889,27},
          {remote,{889,35},{atom,{889,27},filename},{atom,{889,36},rootname}},
          [{block,0,
            [{call,
              {889,45},
              {remote,
               {889,53},
               {atom,{889,45},filename},
               {atom,{889,54},basename}},
              [{var,{889,63},'Target'}]}]}]}]}]}},
    {debug_line,890,521},
    {match,
     {890,5},
     {tuple,{890,5},[{atom,{890,6},module},{var,{890,14},'Module'}]},
     {call,
      {890,24},
      {remote,{890,28},{atom,{890,24},code},{atom,{890,29},load_abs}},
      [{block,0,
        [{call,
          {890,38},
          {remote,{890,46},{atom,{890,38},filename},{atom,{890,47},rootname}},
          [{var,{890,56},'Target'}]}]}]}},
    {debug_line,891,522},
    {match,
     {891,5},
     {var,{891,5},'Result'},
     {'catch',
      {891,15},
      {call,
       {891,21},
       {remote,{891,21},{atom,{891,21},erlang},{atom,{891,21},apply}},
       [{var,{891,27},'Module'},
        {var,{891,35},'Func'},
        {var,{891,41},'Args'}]}}},
    {debug_line,892,523},
    {match,
     {892,5},
     {atom,{892,5},true},
     {call,
      {892,12},
      {remote,{892,16},{atom,{892,12},code},{atom,{892,17},delete}},
      [{var,{892,24},'Module'}]}},
    {debug_line,893,524},
    {match,
     {893,5},
     {atom,{893,5},false},
     {call,
      {893,13},
      {remote,{893,17},{atom,{893,13},code},{atom,{893,18},purge}},
      [{var,{893,24},'Module'}]}},
    {debug_line,894,525},
    {var,{894,5},'Result'}]}]}.
{function,
    {896,1},
    exists,1,
    [{clause,
         {896,1},
         [{var,{896,1},'_'}],
         [[{call,
               {896,1},
               {remote,
                   {896,1},
                   {atom,{896,1},fake},
                   {atom,{896,1},is_beam_bif_info}},
               []}]],
         [{debug_line,896,526},{atom,{896,1},ignore}]},
     {clause,
         {896,1},
         [{var,{896,8},'Name'}],
         [],
         [{debug_line,897,527},
          {'case',
              {897,5},
              {call,
                  {897,10},
                  {remote,
                      {897,14},
                      {atom,{897,10},file},
                      {atom,{897,15},read_file_info}},
                  [{var,{897,30},'Name'}]},
              [{clause,
                   {898,2},
                   [{tuple,{898,2},[{atom,{898,3},ok},{var,{898,7},'_'}]}],
                   [],
                   [{debug_line,898,528},{atom,{898,16},true}]},
               {clause,
                   {899,2},
                   [{tuple,{899,2},[{atom,{899,3},error},{var,{899,10},'_'}]}],
                   [],
                   [{debug_line,899,529},{atom,{899,16},false}]}]}]}]}.
{function,
    {903,1},
    strict_record,1,
    [{clause,
         {903,1},
         [{var,{903,1},'_'}],
         [[{call,
               {903,1},
               {remote,
                   {903,1},
                   {atom,{903,1},fake},
                   {atom,{903,1},is_beam_bif_info}},
               []}]],
         [{debug_line,903,530},{atom,{903,1},ignore}]},
     {clause,
         {903,1},
         [{var,{903,15},'Config'}],
         [[{call,
               {903,28},
               {remote,
                   {903,28},
                   {atom,{903,28},erlang},
                   {atom,{903,28},is_list}},
               [{var,{903,36},'Config'}]}]],
         [{debug_line,904,531},
          {match,
              {904,5},
              {var,{904,5},'Priv'},
              {call,
                  {904,12},
                  {remote,
                      {904,21},
                      {atom,{904,12},proplists},
                      {atom,{904,22},get_value}},
                  [{atom,{904,32},priv_dir},{var,{904,42},'Config'}]}},
          {debug_line,905,532},
          {match,
              {905,5},
              {atom,{905,5},ok},
              {call,
                  {905,10},
                  {remote,
                      {905,14},
                      {atom,{905,10},file},
                      {atom,{905,15},set_cwd}},
                  [{block,0,
                       [{call,
                            {905,23},
                            {remote,
                                {905,32},
                                {atom,{905,23},proplists},
                                {atom,{905,33},get_value}},
                            [{atom,{905,43},data_dir},
                             {var,{905,53},'Config'}]}]}]}},
          {debug_line,906,533},
          {match,
              {906,5},
              {var,{906,5},'Opts'},
              {cons,
                  {906,12},
                  {tuple,
                      {906,13},
                      [{atom,{906,14},outdir},{var,{906,21},'Priv'}]},
                  {cons,
                      {906,27},
                      {atom,{906,27},report_errors},
                      {nil,{906,40}}}}},
          {debug_line,907,534},
          {match,{907,5},{var,{907,5},'M'},{atom,{907,9},record_access}},
          {debug_line,909,535},
          {match,
              {909,5},
              {tuple,{909,5},[{atom,{909,6},ok},{var,{909,9},'M'}]},
              {call,
                  {909,14},
                  {remote,{909,15},{atom,{909,14},c},{atom,{909,16},c}},
                  [{var,{909,18},'M'},
                   {block,0,
                       [{cons,
                            {909,21},
                            {atom,{909,22},strict_record_tests},
                            {var,{909,42},'Opts'}}]}]}},
          {debug_line,910,536},
          {match,
              {910,5},
              {var,{910,5},'Turtle'},
              {call,{910,14},{atom,{910,14},test_strict},[]}},
          {debug_line,912,537},
          {match,
              {912,5},
              {tuple,{912,5},[{atom,{912,6},ok},{var,{912,9},'M'}]},
              {call,
                  {912,14},
                  {remote,{912,15},{atom,{912,14},c},{atom,{912,16},c}},
                  [{var,{912,18},'M'},
                   {block,0,
                       [{cons,
                            {912,21},
                            {atom,{912,22},no_strict_record_tests},
                            {var,{912,45},'Opts'}}]}]}},
          {debug_line,913,538},
          {match,
              {913,5},
              {var,{913,5},'Turtle'},
              {call,{913,14},{atom,{913,14},test_sloppy},[]}},
          {debug_line,916,539},
          {match,
              {916,5},
              {tuple,{916,5},[{atom,{916,6},ok},{var,{916,9},'M'}]},
              {call,
                  {916,14},
                  {remote,{916,15},{atom,{916,14},c},{atom,{916,16},c}},
                  [{var,{916,18},'M'},
                   {block,0,
                       [{cons,
                            {916,21},
                            {atom,{916,22},strict_record_tests},
                            {cons,
                                {916,42},
                                {atom,{916,42},no_strict_record_tests},
                                {var,{916,65},'Opts'}}}]}]}},
          {debug_line,917,540},
          {match,
              {917,5},
              {var,{917,5},'Turtle'},
              {call,{917,14},{atom,{917,14},test_sloppy},[]}},
          {debug_line,918,541},
          {match,
              {918,5},
              {tuple,{918,5},[{atom,{918,6},ok},{var,{918,9},'M'}]},
              {call,
                  {918,14},
                  {remote,{918,15},{atom,{918,14},c},{atom,{918,16},c}},
                  [{var,{918,18},'M'},
                   {block,0,
                       [{cons,
                            {918,21},
                            {atom,{918,22},no_strict_record_tests},
                            {cons,
                                {918,45},
                                {atom,{918,45},strict_record_tests},
                                {var,{918,65},'Opts'}}}]}]}},
          {debug_line,919,542},
          {match,
              {919,5},
              {var,{919,5},'Turtle'},
              {call,{919,14},{atom,{919,14},test_strict},[]}},
          {debug_line,922,543},
          {match,
              {922,5},
              {tuple,{922,5},[{atom,{922,6},ok},{var,{922,9},'M'}]},
              {call,
                  {922,14},
                  {remote,{922,15},{atom,{922,14},c},{atom,{922,16},c}},
                  [{var,{922,18},'M'},
                   {block,0,
                       [{cons,
                            {922,21},
                            {tuple,
                                {922,22},
                                [{atom,{922,23},outdir},
                                 {var,{922,30},'Priv'}]},
                            {cons,
                                {922,36},
                                {atom,{922,36},report_errors},
                                {nil,{922,49}}}}]}]}},
          {debug_line,923,544},
          {'try',
              {923,5},
              [{debug_line,924,545},
               {match,
                   {924,9},
                   {tuple,{924,9},[{integer,{924,10},1},{integer,{924,12},2}]},
                   {call,
                       {924,17},
                       {remote,
                           {924,30},
                           {atom,{924,17},record_access},
                           {atom,{924,31},test}},
                       [{var,{924,36},'Turtle'}]}},
               {debug_line,925,546},
               {tuple,
                   {925,9},
                   [{atom,{925,10},comment},
                    {string,{925,18},"Default: no_strict_record_tests"}]}],
              [],
              [{clause,
                   {927,9},
                   [{tuple,
                        {927,9},
                        [{atom,{927,9},error},
                         {tuple,
                             {927,15},
                             [{atom,{927,16},badrecord},
                              {var,{927,26},'Turtle'}]},
                         {var,{927,26},'_'}]}],
                   [],
                   [{debug_line,928,547},
                    {tuple,
                        {928,13},
                        [{atom,{928,14},comment},
                         {string,{928,22},"Default: strict_record_tests"}]}]}],
              []}]}]}.
{function,
    {931,1},
    test_strict,0,
    [{clause,
         {931,1},
         [],
         [[{call,
               {931,1},
               {remote,
                   {931,1},
                   {atom,{931,1},fake},
                   {atom,{931,1},is_beam_bif_info}},
               []}]],
         [{debug_line,931,548},{atom,{931,1},ignore}]},
     {clause,
         {931,1},
         [],[],
         [{debug_line,932,549},
          {match,
              {932,5},
              {var,{932,5},'Turtle'},
              {call,
                  {932,14},
                  {remote,
                      {932,27},
                      {atom,{932,14},record_access},
                      {atom,{932,28},turtle}},
                  []}},
          {debug_line,933,550},
          {'try',
              {933,5},
              [{debug_line,934,551},
               {call,
                   {934,9},
                   {remote,
                       {934,22},
                       {atom,{934,9},record_access},
                       {atom,{934,23},test}},
                   [{var,{934,28},'Turtle'}]}],
              [],
              [{clause,
                   {936,9},
                   [{tuple,
                        {936,9},
                        [{atom,{936,9},error},
                         {tuple,
                             {936,15},
                             [{atom,{936,16},badrecord},
                              {var,{936,26},'Turtle'}]},
                         {var,{936,26},'_'}]}],
                   [],
                   [{debug_line,937,552},{atom,{937,13},ok}]}],
              []},
          {debug_line,939,553},
          {var,{939,5},'Turtle'}]}]}.
{function,
    {941,1},
    test_sloppy,0,
    [{clause,
         {941,1},
         [],
         [[{call,
               {941,1},
               {remote,
                   {941,1},
                   {atom,{941,1},fake},
                   {atom,{941,1},is_beam_bif_info}},
               []}]],
         [{debug_line,941,554},{atom,{941,1},ignore}]},
     {clause,
         {941,1},
         [],[],
         [{debug_line,942,555},
          {match,
              {942,5},
              {var,{942,5},'Turtle'},
              {call,
                  {942,14},
                  {remote,
                      {942,27},
                      {atom,{942,14},record_access},
                      {atom,{942,28},turtle}},
                  []}},
          {debug_line,943,556},
          {match,
              {943,5},
              {tuple,{943,5},[{integer,{943,6},1},{integer,{943,8},2}]},
              {call,
                  {943,13},
                  {remote,
                      {943,26},
                      {atom,{943,13},record_access},
                      {atom,{943,27},test}},
                  [{var,{943,32},'Turtle'}]}},
          {debug_line,944,557},
          {var,{944,5},'Turtle'}]}]}.
{function,
 {946,1},
 utf8_atoms,1,
 [{clause,
   {946,1},
   [{var,{946,1},'_'}],
   [[{call,
      {946,1},
      {remote,{946,1},{atom,{946,1},fake},{atom,{946,1},is_beam_bif_info}},
      []}]],
   [{debug_line,946,558},{atom,{946,1},ignore}]},
  {clause,
   {946,1},
   [{var,{946,12},'Config'}],
   [[{call,
      {946,25},
      {remote,{946,25},{atom,{946,25},erlang},{atom,{946,25},is_list}},
      [{var,{946,33},'Config'}]}]],
   [{debug_line,947,559},
    {call,
     {947,5},
     {atom,{947,5},do_utf8_atom},
     [{block,0,
       [{call,
         {947,18},
         {remote,
          {947,18},
          {atom,{947,18},erlang},
          {atom,{947,18},binary_to_atom}},
         [{block,0,
           [{bin,
             {947,33},
             [{bin_element,
               {947,35},
               {string,{947,35},[12371,12435,12395,12385,12399]},
               default,
               [utf8]}]}]},
          {atom,{947,51},utf8}]}]}]},
    {debug_line,949,560},
    {match,
     {949,5},
     {var,{949,5},'LongAtom'},
     {call,
      {949,16},
      {remote,{949,16},{atom,{949,16},erlang},{atom,{949,16},binary_to_atom}},
      [{block,0,
        [{call,
          {949,31},
          {remote,{949,37},{atom,{949,31},binary},{atom,{949,38},copy}},
          [{block,0,
            [{bin,
              {949,43},
              [{bin_element,{949,45},{integer,{949,45},240},default,default},
               {bin_element,{949,49},{integer,{949,49},159},default,default},
               {bin_element,{949,53},{integer,{949,53},159},default,default},
               {bin_element,
                {949,57},
                {integer,{949,57},166},
                default,default}]}]},
           {integer,{949,64},255}]}]}]}},
    {debug_line,950,561},
    {call,{950,5},{atom,{950,5},do_utf8_atom},[{var,{950,18},'LongAtom'}]},
    {debug_line,952,562},
    {atom,{952,5},ok}]}]}.
{function,
 {954,1},
 do_utf8_atom,1,
 [{clause,
   {954,1},
   [{var,{954,1},'_'}],
   [[{call,
      {954,1},
      {remote,{954,1},{atom,{954,1},fake},{atom,{954,1},is_beam_bif_info}},
      []}]],
   [{debug_line,954,563},{atom,{954,1},ignore}]},
  {clause,
   {954,1},
   [{var,{954,14},'Atom'}],
   [],
   [{debug_line,955,564},
    {match,{955,5},{var,{955,5},'Mod'},{atom,{955,12},do_utf8_atom}},
    {debug_line,956,565},
    {match,
     {956,5},
     {var,{956,5},'Anno'},
     {call,
      {956,12},
      {remote,{956,20},{atom,{956,12},erl_anno},{atom,{956,21},new}},
      [{integer,{956,25},1}]}},
    {debug_line,957,566},
    {match,
     {957,5},
     {var,{957,5},'Forms'},
     {cons,
      {957,13},
      {tuple,
       {957,14},
       [{atom,{957,15},attribute},
        {var,{957,25},'Anno'},
        {atom,{957,30},module},
        {var,{957,37},'Mod'}]},
      {cons,
       {958,14},
       {tuple,
        {958,14},
        [{atom,{958,15},attribute},
         {var,{958,25},'Anno'},
         {atom,{958,30},compile},
         {cons,{958,38},{atom,{958,39},export_all},{nil,{958,49}}}]},
       {cons,
        {959,7},
        {tuple,
         {959,7},
         [{atom,{959,8},function},
          {var,{959,17},'Anno'},
          {atom,{959,22},atom},
          {integer,{959,27},0},
          {cons,
           {959,29},
           {tuple,
            {959,30},
            [{atom,{959,31},clause},
             {var,{959,38},'Anno'},
             {nil,{959,43}},
             {nil,{959,46}},
             {cons,
              {959,49},
              {tuple,
               {959,50},
               [{atom,{959,51},atom},
                {var,{959,56},'Anno'},
                {var,{959,61},'Atom'}]},
              {nil,{959,66}}}]},
           {nil,{959,68}}}]},
        {nil,{959,70}}}}}},
    {debug_line,961,567},
    {match,
     {961,5},
     {tuple,
      {961,5},
      [{atom,{961,6},ok},{var,{961,9},'Mod'},{var,{961,13},'Utf8AtomBin'}]},
     {call,
      {961,28},
      {remote,{961,35},{atom,{961,28},compile},{atom,{961,36},forms}},
      [{var,{961,42},'Forms'},
       {block,0,
        [{cons,
          {961,49},
          {atom,{961,50},binary},
          {cons,{961,57},{atom,{961,57},report},{nil,{961,63}}}}]}]}},
    {debug_line,962,568},
    {match,
     {962,5},
     {tuple,
      {962,5},
      [{atom,{962,6},ok},
       {tuple,
        {962,9},
        [{var,{962,10},'Mod'},
         {cons,
          {962,14},
          {tuple,{962,15},[{atom,{962,16},atoms},{var,{962,22},'_'}]},
          {nil,{962,24}}}]}]},
     {call,
      {962,30},
      {remote,{962,38},{atom,{962,30},beam_lib},{atom,{962,39},chunks}},
      [{var,{962,46},'Utf8AtomBin'},
       {block,0,[{cons,{962,59},{atom,{962,60},atoms},{nil,{962,65}}}]}]}},
    {debug_line,964,569},
    {call,
     {964,5},
     {remote,{964,9},{atom,{964,5},code},{atom,{964,10},load_binary}},
     [{var,{964,22},'Mod'},
      {block,0,[{string,{964,27},"compile_SUITE"}]},
      {var,{964,44},'Utf8AtomBin'}]},
    {debug_line,966,570},
    {match,
     {966,5},
     {var,{966,5},'Atom'},
     {call,
      {966,12},
      {remote,{966,15},{var,{966,12},'Mod'},{atom,{966,16},atom}},
      []}},
    {debug_line,967,571},
    {match,
     {967,5},
     {atom,{967,5},true},
     {call,
      {967,12},
      {remote,{967,12},{atom,{967,12},erlang},{atom,{967,12},is_atom}},
      [{var,{967,20},'Atom'}]}},
    {debug_line,969,572},
    {match,
     {969,5},
     {atom,{969,5},true},
     {call,
      {969,12},
      {remote,{969,16},{atom,{969,12},code},{atom,{969,17},delete}},
      [{var,{969,24},'Mod'}]}},
    {debug_line,970,573},
    {match,
     {970,5},
     {atom,{970,5},false},
     {call,
      {970,13},
      {remote,{970,17},{atom,{970,13},code},{atom,{970,18},purge}},
      [{var,{970,24},'Mod'}]}},
    {debug_line,972,574},
    {atom,{972,5},ok}]}]}.
{function,
 {974,1},
 utf8_functions,1,
 [{clause,
   {974,1},
   [{var,{974,1},'_'}],
   [[{call,
      {974,1},
      {remote,{974,1},{atom,{974,1},fake},{atom,{974,1},is_beam_bif_info}},
      []}]],
   [{debug_line,974,575},{atom,{974,1},ignore}]},
  {clause,
   {974,1},
   [{var,{974,16},'Config'}],
   [[{call,
      {974,29},
      {remote,{974,29},{atom,{974,29},erlang},{atom,{974,29},is_list}},
      [{var,{974,37},'Config'}]}]],
   [{debug_line,975,576},
    {match,
     {975,5},
     {var,{975,5},'Anno'},
     {call,
      {975,12},
      {remote,{975,20},{atom,{975,12},erl_anno},{atom,{975,21},new}},
      [{integer,{975,25},1}]}},
    {debug_line,976,577},
    {match,
     {976,5},
     {var,{976,5},'Atom'},
     {call,
      {976,12},
      {remote,{976,12},{atom,{976,12},erlang},{atom,{976,12},binary_to_atom}},
      [{block,0,
        [{bin,
          {976,27},
          [{bin_element,
            {976,29},
            {string,{976,29},[12371,12435,12395,12385,12399]},
            default,
            [utf8]}]}]},
       {atom,{976,45},utf8}]}},
    {debug_line,977,578},
    {match,
     {977,5},
     {var,{977,5},'Forms'},
     {cons,
      {977,13},
      {tuple,
       {977,14},
       [{atom,{977,15},attribute},
        {var,{977,25},'Anno'},
        {atom,{977,30},compile},
        {cons,{977,38},{atom,{977,39},export_all},{nil,{977,49}}}]},
      {cons,
       {978,7},
       {tuple,
        {978,7},
        [{atom,{978,8},function},
         {var,{978,17},'Anno'},
         {var,{978,22},'Atom'},
         {integer,{978,27},0},
         {cons,
          {978,29},
          {tuple,
           {978,30},
           [{atom,{978,31},clause},
            {var,{978,38},'Anno'},
            {nil,{978,43}},
            {nil,{978,46}},
            {cons,
             {978,49},
             {tuple,
              {978,50},
              [{atom,{978,51},atom},
               {var,{978,56},'Anno'},
               {atom,{978,61},world}]},
             {nil,{978,67}}}]},
          {nil,{978,69}}}]},
       {nil,{978,71}}}}},
    {debug_line,980,579},
    {match,
     {980,5},
     {var,{980,5},'Utf8FunctionForms'},
     {cons,
      {980,25},
      {tuple,
       {980,26},
       [{atom,{980,27},attribute},
        {var,{980,37},'Anno'},
        {atom,{980,42},module},
        {atom,{980,49},utf8_function}]},
      {var,{980,64},'Forms'}}},
    {debug_line,981,580},
    {match,
     {981,5},
     {tuple,
      {981,5},
      [{atom,{981,6},ok},
       {atom,{981,9},utf8_function},
       {var,{981,23},'Utf8FunctionBin'}]},
     {call,
      {982,2},
      {remote,{982,9},{atom,{982,2},compile},{atom,{982,10},forms}},
      [{var,{982,16},'Utf8FunctionForms'},
       {block,0,
        [{debug_line,982,581},
         {cons,{982,35},{atom,{982,36},binary},{nil,{982,42}}}]}]}},
    {debug_line,983,582},
    {match,
     {983,5},
     {tuple,
      {983,5},
      [{atom,{983,6},ok},
       {tuple,
        {983,9},
        [{atom,{983,10},utf8_function},
         {cons,
          {983,24},
          {tuple,{983,25},[{atom,{983,26},atoms},{var,{983,32},'_'}]},
          {nil,{983,34}}}]}]},
     {call,
      {984,2},
      {remote,{984,10},{atom,{984,2},beam_lib},{atom,{984,11},chunks}},
      [{var,{984,18},'Utf8FunctionBin'},
       {block,0,
        [{debug_line,984,583},
         {cons,{984,35},{atom,{984,36},atoms},{nil,{984,41}}}]}]}},
    {debug_line,985,584},
    {call,
     {985,5},
     {remote,{985,9},{atom,{985,5},code},{atom,{985,10},load_binary}},
     [{atom,{985,22},utf8_function},
      {block,0,[{string,{985,37},"compile_SUITE"}]},
      {var,{985,54},'Utf8FunctionBin'}]},
    {debug_line,986,585},
    {match,
     {986,5},
     {atom,{986,5},world},
     {call,
      {986,13},
      {remote,{986,26},{atom,{986,13},utf8_function},{var,{986,27},'Atom'}},
      []}},
    {debug_line,988,586},
    {match,
     {988,5},
     {var,{988,5},'NoUtf8FunctionForms'},
     {cons,
      {988,27},
      {tuple,
       {988,28},
       [{atom,{988,29},attribute},
        {var,{988,39},'Anno'},
        {atom,{988,44},module},
        {atom,{988,51},no_utf8_function}]},
      {var,{988,69},'Forms'}}},
    {debug_line,989,587},
    {match,
     {989,5},
     {atom,{989,5},error},
     {call,
      {989,13},
      {remote,{989,20},{atom,{989,13},compile},{atom,{989,21},forms}},
      [{var,{989,27},'NoUtf8FunctionForms'},
       {block,0,
        [{cons,
          {989,48},
          {atom,{989,49},binary},
          {cons,{989,57},{atom,{989,57},r19},{nil,{989,60}}}}]}]}}]}]}.
{function,
 {991,1},
 extra_chunks,1,
 [{clause,
   {991,1},
   [{var,{991,1},'_'}],
   [[{call,
      {991,1},
      {remote,{991,1},{atom,{991,1},fake},{atom,{991,1},is_beam_bif_info}},
      []}]],
   [{debug_line,991,588},{atom,{991,1},ignore}]},
  {clause,
   {991,1},
   [{var,{991,14},'Config'}],
   [[{call,
      {991,27},
      {remote,{991,27},{atom,{991,27},erlang},{atom,{991,27},is_list}},
      [{var,{991,35},'Config'}]}]],
   [{debug_line,992,589},
    {match,
     {992,5},
     {var,{992,5},'Anno'},
     {call,
      {992,12},
      {remote,{992,20},{atom,{992,12},erl_anno},{atom,{992,21},new}},
      [{integer,{992,25},1}]}},
    {debug_line,993,590},
    {match,
     {993,5},
     {var,{993,5},'Forms'},
     {cons,
      {993,13},
      {tuple,
       {993,14},
       [{atom,{993,15},attribute},
        {var,{993,25},'Anno'},
        {atom,{993,30},module},
        {atom,{993,37},extra_chunks}]},
      {nil,{993,50}}}},
    {debug_line,995,591},
    {match,
     {995,5},
     {tuple,
      {995,5},
      [{atom,{995,6},ok},
       {atom,{995,9},extra_chunks},
       {var,{995,22},'ExtraChunksBinary'}]},
     {call,
      {996,2},
      {remote,{996,9},{atom,{996,2},compile},{atom,{996,10},forms}},
      [{var,{996,16},'Forms'},
       {block,0,
        [{debug_line,996,592},
         {cons,
          {996,23},
          {atom,{996,24},binary},
          {cons,
           {996,32},
           {tuple,
            {996,32},
            [{atom,{996,33},extra_chunks},
             {cons,
              {996,47},
              {tuple,
               {996,48},
               [{bin,
                 {996,49},
                 [{bin_element,
                   {996,51},
                   {string,{996,51},"ExCh"},
                   default,default}]},
                {bin,
                 {996,61},
                 [{bin_element,
                   {996,63},
                   {string,{996,63},"Contents"},
                   default,default}]}]},
              {nil,{996,76}}}]},
           {nil,{996,78}}}}]}]}},
    {debug_line,997,593},
    {match,
     {997,5},
     {tuple,
      {997,5},
      [{atom,{997,6},ok},
       {tuple,
        {997,9},
        [{atom,{997,10},extra_chunks},
         {cons,
          {997,23},
          {tuple,
           {997,24},
           [{string,{997,25},"ExCh"},
            {bin,
             {997,32},
             [{bin_element,
               {997,34},
               {string,{997,34},"Contents"},
               default,default}]}]},
          {nil,{997,47}}}]}]},
     {call,
      {998,2},
      {remote,{998,10},{atom,{998,2},beam_lib},{atom,{998,11},chunks}},
      [{var,{998,18},'ExtraChunksBinary'},
       {block,0,
        [{debug_line,998,594},
         {cons,{998,37},{string,{998,38},"ExCh"},{nil,{998,44}}}]}]}}]}]}.
{function,
 {1000,1},
 tuple_calls,1,
 [{clause,
   {1000,1},
   [{var,{1000,1},'_'}],
   [[{call,
      {1000,1},
      {remote,{1000,1},{atom,{1000,1},fake},{atom,{1000,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1000,595},{atom,{1000,1},ignore}]},
  {clause,
   {1000,1},
   [{var,{1000,13},'Config'}],
   [[{call,
      {1000,26},
      {remote,{1000,26},{atom,{1000,26},erlang},{atom,{1000,26},is_list}},
      [{var,{1000,34},'Config'}]}]],
   [{debug_line,1001,596},
    {match,
     {1001,5},
     {var,{1001,5},'Anno'},
     {call,
      {1001,12},
      {remote,{1001,20},{atom,{1001,12},erl_anno},{atom,{1001,21},new}},
      [{integer,{1001,25},1}]}},
    {debug_line,1002,597},
    {match,
     {1002,5},
     {var,{1002,5},'Forms'},
     {cons,
      {1002,13},
      {tuple,
       {1002,14},
       [{atom,{1002,15},attribute},
        {var,{1002,25},'Anno'},
        {atom,{1002,30},export},
        {cons,
         {1002,37},
         {tuple,{1002,38},[{atom,{1002,39},size},{integer,{1002,44},1}]},
         {cons,
          {1002,47},
          {tuple,{1002,47},[{atom,{1002,48},store},{integer,{1002,54},1}]},
          {nil,{1002,56}}}}]},
      {cons,
       {1003,7},
       {tuple,
        {1003,7},
        [{atom,{1003,8},function},
         {var,{1003,17},'Anno'},
         {atom,{1003,22},size},
         {integer,{1003,27},1},
         {cons,
          {1004,8},
          {tuple,
           {1004,9},
           [{atom,{1004,10},clause},
            {var,{1004,17},'Anno'},
            {cons,
             {1004,22},
             {tuple,
              {1004,23},
              [{atom,{1004,24},var},
               {var,{1004,28},'Anno'},
               {atom,{1004,33},mod}]},
             {nil,{1004,37}}},
            {nil,{1004,39}},
            {cons,
             {1005,9},
             {tuple,
              {1005,10},
              [{atom,{1005,11},call},
               {var,{1005,16},'Anno'},
               {tuple,
                {1005,21},
                [{atom,{1005,22},remote},
                 {var,{1005,29},'Anno'},
                 {tuple,
                  {1005,34},
                  [{atom,{1005,35},var},
                   {var,{1005,39},'Anno'},
                   {atom,{1005,44},mod}]},
                 {tuple,
                  {1005,49},
                  [{atom,{1005,50},atom},
                   {var,{1005,55},'Anno'},
                   {atom,{1005,60},size}]}]},
               {nil,{1006,18}}]},
             {nil,{1006,21}}}]},
          {nil,{1006,23}}}]},
       {cons,
        {1007,7},
        {tuple,
         {1007,7},
         [{atom,{1007,8},function},
          {var,{1007,17},'Anno'},
          {atom,{1007,22},store},
          {integer,{1007,28},1},
          {cons,
           {1008,8},
           {tuple,
            {1008,9},
            [{atom,{1008,10},clause},
             {var,{1008,17},'Anno'},
             {cons,
              {1008,22},
              {tuple,
               {1008,23},
               [{atom,{1008,24},var},
                {var,{1008,28},'Anno'},
                {atom,{1008,33},mod}]},
              {nil,{1008,37}}},
             {nil,{1008,39}},
             {cons,
              {1009,9},
              {tuple,
               {1009,10},
               [{atom,{1009,11},call},
                {var,{1009,16},'Anno'},
                {tuple,
                 {1009,21},
                 [{atom,{1009,22},remote},
                  {var,{1009,29},'Anno'},
                  {tuple,
                   {1009,34},
                   [{atom,{1009,35},var},
                    {var,{1009,39},'Anno'},
                    {atom,{1009,44},mod}]},
                  {tuple,
                   {1009,49},
                   [{atom,{1009,50},atom},
                    {var,{1009,55},'Anno'},
                    {atom,{1009,60},store}]}]},
                {cons,
                 {1010,18},
                 {tuple,
                  {1010,19},
                  [{atom,{1010,20},atom},
                   {var,{1010,25},'Anno'},
                   {atom,{1010,30},key}]},
                 {cons,
                  {1010,35},
                  {tuple,
                   {1010,35},
                   [{atom,{1010,36},atom},
                    {var,{1010,41},'Anno'},
                    {atom,{1010,46},value}]},
                  {nil,{1010,52}}}}]},
              {nil,{1010,54}}}]},
           {nil,{1010,56}}}]},
        {nil,{1010,58}}}}}},
    {debug_line,1012,598},
    {match,
     {1012,5},
     {var,{1012,5},'TupleCallsFalse'},
     {cons,
      {1012,23},
      {tuple,
       {1012,24},
       [{atom,{1012,25},attribute},
        {var,{1012,35},'Anno'},
        {atom,{1012,40},module},
        {atom,{1012,47},tuple_calls_false}]},
      {var,{1012,66},'Forms'}}},
    {debug_line,1013,599},
    {match,
     {1013,5},
     {tuple,
      {1013,5},
      [{atom,{1013,6},ok},
       {var,{1013,9},'_'},
       {var,{1013,11},'TupleCallsFalseBinary'}]},
     {call,
      {1013,36},
      {remote,{1013,43},{atom,{1013,36},compile},{atom,{1013,44},forms}},
      [{var,{1013,50},'TupleCallsFalse'},
       {block,0,[{cons,{1013,67},{atom,{1013,68},binary},{nil,{1013,74}}}]}]}},
    {debug_line,1014,600},
    {call,
     {1014,5},
     {remote,{1014,9},{atom,{1014,5},code},{atom,{1014,10},load_binary}},
     [{atom,{1014,22},tuple_calls_false},
      {block,0,[{string,{1014,41},"compile_SUITE.erl"}]},
      {var,{1014,62},'TupleCallsFalseBinary'}]},
    {debug_line,1015,601},
    {match,
     {1015,5},
     {tuple,
      {1015,5},
      [{atom,{1015,6},'EXIT'},
       {tuple,{1015,13},[{atom,{1015,14},badarg},{var,{1015,21},'_'}]}]},
     {'catch',
      {1015,28},
      {call,
       {1015,34},
       {remote,
        {1015,51},
        {atom,{1015,34},tuple_calls_false},
        {atom,{1015,52},store}},
       [{block,0,[{call,{1015,58},{atom,{1015,58},dict},[]}]}]}}},
    {debug_line,1016,602},
    {match,
     {1016,5},
     {tuple,
      {1016,5},
      [{atom,{1016,6},'EXIT'},
       {tuple,{1016,13},[{atom,{1016,14},badarg},{var,{1016,21},'_'}]}]},
     {'catch',
      {1016,28},
      {call,
       {1016,34},
       {remote,
        {1016,51},
        {atom,{1016,34},tuple_calls_false},
        {atom,{1016,52},size}},
       [{block,0,[{call,{1016,57},{atom,{1016,57},dict},[]}]}]}}},
    {debug_line,1017,603},
    {match,
     {1017,5},
     {tuple,
      {1017,5},
      [{atom,{1017,6},'EXIT'},
       {tuple,{1017,13},[{atom,{1017,14},badarg},{var,{1017,21},'_'}]}]},
     {'catch',
      {1017,28},
      {call,
       {1017,34},
       {remote,
        {1017,51},
        {atom,{1017,34},tuple_calls_false},
        {atom,{1017,52},size}},
       [{block,0,[{call,{1017,57},{atom,{1017,57},empty_tuple},[]}]}]}}},
    {debug_line,1019,604},
    {match,
     {1019,5},
     {var,{1019,5},'TupleCallsTrue'},
     {cons,
      {1019,22},
      {tuple,
       {1019,23},
       [{atom,{1019,24},attribute},
        {var,{1019,34},'Anno'},
        {atom,{1019,39},module},
        {atom,{1019,46},tuple_calls_true}]},
      {var,{1019,64},'Forms'}}},
    {debug_line,1020,605},
    {match,
     {1020,5},
     {tuple,
      {1020,5},
      [{atom,{1020,6},ok},
       {var,{1020,9},'_'},
       {var,{1020,11},'TupleCallsTrueBinary'}]},
     {call,
      {1020,35},
      {remote,{1020,42},{atom,{1020,35},compile},{atom,{1020,43},forms}},
      [{var,{1020,49},'TupleCallsTrue'},
       {block,0,
        [{cons,
          {1020,65},
          {atom,{1020,66},binary},
          {cons,{1020,73},{atom,{1020,73},tuple_calls},{nil,{1020,84}}}}]}]}},
    {debug_line,1021,606},
    {call,
     {1021,5},
     {remote,{1021,9},{atom,{1021,5},code},{atom,{1021,10},load_binary}},
     [{atom,{1021,22},tuple_calls_true},
      {block,0,[{string,{1021,40},"compile_SUITE.erl"}]},
      {var,{1021,61},'TupleCallsTrueBinary'}]},
    {debug_line,1022,607},
    {match,
     {1022,5},
     {var,{1022,5},'Dict'},
     {call,
      {1022,12},
      {remote,
       {1022,28},
       {atom,{1022,12},tuple_calls_true},
       {atom,{1022,29},store}},
      [{block,0,[{call,{1022,35},{atom,{1022,35},dict},[]}]}]}},
    {debug_line,1023,608},
    {match,
     {1023,5},
     {integer,{1023,5},1},
     {call,
      {1023,9},
      {remote,
       {1023,25},
       {atom,{1023,9},tuple_calls_true},
       {atom,{1023,26},size}},
      [{var,{1023,31},'Dict'}]}},
    {debug_line,1024,609},
    {match,
     {1024,5},
     {tuple,
      {1024,5},
      [{atom,{1024,6},'EXIT'},
       {tuple,{1024,13},[{atom,{1024,14},badarg},{var,{1024,21},'_'}]}]},
     {'catch',
      {1024,28},
      {call,
       {1024,34},
       {remote,
        {1024,50},
        {atom,{1024,34},tuple_calls_true},
        {atom,{1024,51},size}},
       [{block,0,[{call,{1024,56},{atom,{1024,56},empty_tuple},[]}]}]}}},
    {debug_line,1026,610},
    {atom,{1026,5},ok}]}]}.
{function,{1028,1},
          dict,0,
          [{clause,{1028,1},
                   [],
                   [[{call,{1028,1},
                           {remote,{1028,1},
                                   {atom,{1028,1},fake},
                                   {atom,{1028,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1028,611},{atom,{1028,1},ignore}]},
           {clause,{1028,1},
                   [],[],
                   [{debug_line,1029,612},
                    {call,{1029,5},
                          {remote,{1029,9},
                                  {atom,{1029,5},dict},
                                  {atom,{1029,10},new}},
                          []}]}]}.
{function,{1030,1},
          empty_tuple,0,
          [{clause,{1030,1},
                   [],
                   [[{call,{1030,1},
                           {remote,{1030,1},
                                   {atom,{1030,1},fake},
                                   {atom,{1030,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1030,613},{atom,{1030,1},ignore}]},
           {clause,{1030,1},
                   [],[],
                   [{debug_line,1031,614},{tuple,{1031,5},[]}]}]}.
{function,
    {1033,1},
    env,1,
    [{clause,
         {1033,1},
         [{var,{1033,1},'_'}],
         [[{call,
               {1033,1},
               {remote,
                   {1033,1},
                   {atom,{1033,1},fake},
                   {atom,{1033,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1033,615},{atom,{1033,1},ignore}]},
     {clause,
         {1033,1},
         [{var,{1033,5},'Config'}],
         [[{call,
               {1033,18},
               {remote,
                   {1033,18},
                   {atom,{1033,18},erlang},
                   {atom,{1033,18},is_list}},
               [{var,{1033,26},'Config'}]}]],
         [{debug_line,1034,616},
          {match,
              {1034,5},
              {tuple,
                  {1034,5},
                  [{var,{1034,6},'Simple'},{var,{1034,13},'Target'}]},
              {call,
                  {1034,23},
                  {atom,{1034,23},get_files},
                  [{var,{1034,33},'Config'},
                   {atom,{1034,41},simple},
                   {atom,{1034,49},env}]}},
          {debug_line,1035,617},
          {match,
              {1035,5},
              {tuple,{1035,5},[{atom,{1035,6},ok},{var,{1035,9},'Cwd'}]},
              {call,
                  {1035,16},
                  {remote,
                      {1035,20},
                      {atom,{1035,16},file},
                      {atom,{1035,21},get_cwd}},
                  []}},
          {debug_line,1036,618},
          {match,
              {1036,5},
              {atom,{1036,5},ok},
              {call,
                  {1036,10},
                  {remote,
                      {1036,14},
                      {atom,{1036,10},file},
                      {atom,{1036,15},set_cwd}},
                  [{block,0,
                       [{call,
                            {1036,23},
                            {remote,
                                {1036,31},
                                {atom,{1036,23},filename},
                                {atom,{1036,32},dirname}},
                            [{var,{1036,40},'Target'}]}]}]}},
          {debug_line,1038,619},
          {match,
              {1038,5},
              {atom,{1038,5},true},
              {call,
                  {1038,12},
                  {remote,
                      {1038,14},
                      {atom,{1038,12},os},
                      {atom,{1038,15},putenv}},
                  [{block,0,[{string,{1038,22},"ERL_COMPILER_OPTIONS"}]},
                   {block,0,[{string,{1038,46},"binary"}]}]}},
          {debug_line,1039,620},
          {'try',
              {1039,5},
              [{debug_line,1040,621},
               {call,
                   {1040,2},
                   {atom,{1040,2},env_1},
                   [{var,{1040,8},'Simple'},{var,{1040,16},'Target'}]}],
              [],[],
              [{debug_line,1042,622},
               {match,
                   {1042,2},
                   {atom,{1042,2},true},
                   {call,
                       {1042,9},
                       {remote,
                           {1042,11},
                           {atom,{1042,9},os},
                           {atom,{1042,12},putenv}},
                       [{block,0,[{string,{1042,19},"ERL_COMPILER_OPTIONS"}]},
                        {block,0,[{string,{1042,43},"ignore_me"}]}]}},
               {debug_line,1043,623},
               {call,
                   {1043,2},
                   {remote,
                       {1043,6},
                       {atom,{1043,2},file},
                       {atom,{1043,7},set_cwd}},
                   [{var,{1043,15},'Cwd'}]},
               {debug_line,1044,624},
               {call,
                   {1044,2},
                   {remote,
                       {1044,6},
                       {atom,{1044,2},file},
                       {atom,{1044,7},delete}},
                   [{var,{1044,14},'Target'}]},
               {debug_line,1045,625},
               {call,
                   {1045,2},
                   {remote,
                       {1045,6},
                       {atom,{1045,2},file},
                       {atom,{1045,7},del_dir}},
                   [{block,0,
                        [{call,
                             {1045,15},
                             {remote,
                                 {1045,23},
                                 {atom,{1045,15},filename},
                                 {atom,{1045,24},dirname}},
                             [{var,{1045,32},'Target'}]}]}]}]},
          {debug_line,1047,626},
          {atom,{1047,5},ok}]}]}.
{function,
    {1049,1},
    env_1,2,
    [{clause,
         {1049,1},
         [{var,{1049,1},'_'},{var,{1049,1},'_'}],
         [[{call,
               {1049,1},
               {remote,
                   {1049,1},
                   {atom,{1049,1},fake},
                   {atom,{1049,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1049,627},{atom,{1049,1},ignore}]},
     {clause,
         {1049,1},
         [{var,{1049,7},'Simple'},{var,{1049,15},'Target'}],
         [],
         [{debug_line,1051,628},
          {match,
              {1051,5},
              {tuple,
                  {1051,5},
                  [{atom,{1051,6},ok},
                   {atom,{1051,9},simple},
                   {bin,
                       {1051,16},
                       [{bin_element,
                            {1051,18},
                            {var,{1051,18},'_'},
                            default,
                            [binary]}]}]},
              {call,
                  {1051,32},
                  {remote,
                      {1051,39},
                      {atom,{1051,32},compile},
                      {atom,{1051,40},file}},
                  [{var,{1051,45},'Simple'}]}},
          {debug_line,1052,629},
          {match,
              {1052,5},
              {tuple,{1052,5},[{atom,{1052,6},ok},{atom,{1052,9},simple}]},
              {call,
                  {1052,19},
                  {remote,
                      {1052,26},
                      {atom,{1052,19},compile},
                      {atom,{1052,27},noenv_file}},
                  [{var,{1052,38},'Simple'},
                   {block,0,
                       [{cons,
                            {1052,46},
                            {atom,{1052,47},debug_info},
                            {nil,{1052,57}}}]}]}},
          {debug_line,1053,630},
          {match,
              {1053,5},
              {tuple,{1053,5},[{atom,{1053,6},ok},{atom,{1053,9},simple}]},
              {call,
                  {1053,19},
                  {remote,
                      {1053,26},
                      {atom,{1053,19},compile},
                      {atom,{1053,27},noenv_file}},
                  [{var,{1053,38},'Simple'},{atom,{1053,46},debug_info}]}},
          {debug_line,1055,631},
          {match,
              {1055,5},
              {atom,{1055,5},true},
              {call,
                  {1055,12},
                  {atom,{1055,12},exists},
                  [{var,{1055,19},'Target'}]}},
          {debug_line,1056,632},
          {match,
              {1056,5},
              {tuple,
                  {1056,5},
                  [{atom,{1056,6},ok},
                   {tuple,
                       {1056,9},
                       [{atom,{1056,10},simple},
                        {cons,
                            {1056,17},
                            {tuple,
                                {1056,18},
                                [{atom,{1056,19},abstract_code},
                                 {var,{1056,33},'Abstr0'}]},
                            {nil,{1056,40}}}]}]},
              {call,
                  {1057,2},
                  {remote,
                      {1057,10},
                      {atom,{1057,2},beam_lib},
                      {atom,{1057,11},chunks}},
                  [{var,{1057,18},'Target'},
                   {block,0,
                       [{debug_line,1057,633},
                        {cons,
                            {1057,26},
                            {atom,{1057,27},abstract_code},
                            {nil,{1057,40}}}]}]}},
          {debug_line,1058,634},
          {match,
              {1058,5},
              {tuple,
                  {1058,5},
                  [{atom,{1058,6},raw_abstract_v1},{var,{1058,22},'Forms'}]},
              {var,{1058,31},'Abstr0'}},
          {debug_line,1061,635},
          {match,
              {1061,5},
              {atom,{1061,5},true},
              {call,
                  {1061,12},
                  {remote,
                      {1061,14},
                      {atom,{1061,12},os},
                      {atom,{1061,15},putenv}},
                  [{block,0,[{string,{1061,22},"ERL_COMPILER_OPTIONS"}]},
                   {block,0,[{string,{1061,46},"strong_validation"}]}]}},
          {debug_line,1062,636},
          {match,
              {1062,5},
              {tuple,{1062,5},[{atom,{1062,6},ok},{atom,{1062,9},simple}]},
              {call,
                  {1062,19},
                  {remote,
                      {1062,26},
                      {atom,{1062,19},compile},
                      {atom,{1062,27},forms}},
                  [{var,{1062,33},'Forms'}]}},
          {debug_line,1063,637},
          {match,
              {1063,5},
              {tuple,
                  {1063,5},
                  [{atom,{1063,6},ok},
                   {atom,{1063,9},simple},
                   {bin,
                       {1063,16},
                       [{bin_element,
                            {1063,18},
                            {string,{1063,18},"FOR1"},
                            default,default},
                        {bin_element,
                            {1063,25},
                            {var,{1063,25},'_'},
                            default,
                            [binary]}]}]},
              {call,
                  {1063,39},
                  {remote,
                      {1063,46},
                      {atom,{1063,39},compile},
                      {atom,{1063,47},noenv_forms}},
                  [{var,{1063,59},'Forms'},{nil,{1063,66}}]}},
          {debug_line,1066,638},
          {match,
              {1066,5},
              {atom,{1066,5},false},
              {call,
                  {1066,13},
                  {remote,
                      {1066,20},
                      {atom,{1066,13},compile},
                      {atom,{1066,21},output_generated}},
                  [{nil,{1066,38}}]}},
          {debug_line,1067,639},
          {match,
              {1067,5},
              {atom,{1067,5},true},
              {call,
                  {1067,12},
                  {remote,
                      {1067,19},
                      {atom,{1067,12},compile},
                      {atom,{1067,20},noenv_output_generated}},
                  [{nil,{1067,43}}]}},
          {debug_line,1069,640},
          {match,
              {1069,5},
              {atom,{1069,5},ok},
              {call,
                  {1069,10},
                  {remote,
                      {1069,14},
                      {atom,{1069,10},file},
                      {atom,{1069,15},delete}},
                  [{var,{1069,22},'Target'}]}},
          {debug_line,1072,641},
          {match,
              {1072,5},
              {atom,{1072,5},true},
              {call,
                  {1072,12},
                  {remote,
                      {1072,14},
                      {atom,{1072,12},os},
                      {atom,{1072,15},putenv}},
                  [{block,0,[{string,{1072,22},"ERL_COMPILER_OPTIONS"}]},
                   {block,0,[{string,{1072,46},"'unterminated_atom"}]}]}},
          {debug_line,1073,642},
          {match,
              {1073,5},
              {tuple,{1073,5},[{atom,{1073,6},ok},{nil,{1073,9}}]},
              {call,
                  {1073,15},
                  {remote,
                      {1073,22},
                      {atom,{1073,15},compile},
                      {atom,{1073,23},forms}},
                  [{var,{1073,29},'Forms'},
                   {block,0,
                       [{cons,
                            {1073,36},
                            {atom,{1073,37},basic_validation},
                            {nil,{1073,53}}}]}]}},
          {debug_line,1074,643},
          {match,
              {1074,5},
              {atom,{1074,5},true},
              {call,
                  {1074,12},
                  {remote,
                      {1074,14},
                      {atom,{1074,12},os},
                      {atom,{1074,15},putenv}},
                  [{block,0,[{string,{1074,22},"ERL_COMPILER_OPTIONS"}]},
                   {block,0,[{string,{1074,46},",,,"}]}]}},
          {debug_line,1075,644},
          {match,
              {1075,5},
              {tuple,{1075,5},[{atom,{1075,6},ok},{nil,{1075,9}}]},
              {call,
                  {1075,15},
                  {remote,
                      {1075,22},
                      {atom,{1075,15},compile},
                      {atom,{1075,23},forms}},
                  [{var,{1075,29},'Forms'},
                   {block,0,
                       [{cons,
                            {1075,36},
                            {atom,{1075,37},basic_validation},
                            {nil,{1075,53}}}]}]}},
          {debug_line,1076,645},
          {match,
              {1076,5},
              {tuple,
                  {1076,5},
                  [{atom,{1076,6},ok},
                   {atom,{1076,9},simple},
                   {bin,
                       {1076,16},
                       [{bin_element,
                            {1076,18},
                            {string,{1076,18},"FOR1"},
                            default,default},
                        {bin_element,
                            {1076,25},
                            {var,{1076,25},'_'},
                            default,
                            [binary]}]}]},
              {call,
                  {1076,39},
                  {remote,
                      {1076,46},
                      {atom,{1076,39},compile},
                      {atom,{1076,47},noenv_forms}},
                  [{var,{1076,59},'Forms'},{atom,{1076,66},no_postopt}]}},
          {debug_line,1078,646},
          {atom,{1078,5},ok}]}]}.
{function,
 {1083,1},
 core_pp,1,
 [{clause,
   {1083,1},
   [{var,{1083,1},'_'}],
   [[{call,
      {1083,1},
      {remote,{1083,1},{atom,{1083,1},fake},{atom,{1083,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1083,647},{atom,{1083,1},ignore}]},
  {clause,
   {1083,1},
   [{var,{1083,9},'Config'}],
   [[{call,
      {1083,22},
      {remote,{1083,22},{atom,{1083,22},erlang},{atom,{1083,22},is_list}},
      [{var,{1083,30},'Config'}]}]],
   [{debug_line,1084,648},
    {match,
     {1084,5},
     {var,{1084,5},'PrivDir'},
     {call,
      {1084,15},
      {remote,{1084,24},{atom,{1084,15},proplists},{atom,{1084,25},get_value}},
      [{atom,{1084,35},priv_dir},{var,{1084,45},'Config'}]}},
    {debug_line,1085,649},
    {match,
     {1085,5},
     {var,{1085,5},'Outdir'},
     {call,
      {1085,14},
      {remote,{1085,22},{atom,{1085,14},filename},{atom,{1085,23},join}},
      [{var,{1085,28},'PrivDir'},
       {block,0,
        [{call,
          {1085,37},
          {remote,
           {1085,37},
           {atom,{1085,37},erlang},
           {atom,{1085,37},atom_to_list}},
          [{atom,{1085,51},core_pp}]}]}]}},
    {debug_line,1086,650},
    {match,
     {1086,5},
     {atom,{1086,5},ok},
     {call,
      {1086,10},
      {remote,{1086,14},{atom,{1086,10},file},{atom,{1086,15},make_dir}},
      [{var,{1086,24},'Outdir'}]}},
    {debug_line,1088,651},
    {match,
     {1088,5},
     {var,{1088,5},'TestBeams'},
     {call,{1088,17},{atom,{1088,17},get_unique_beam_files},[]}},
    {debug_line,1089,652},
    {match,
     {1089,5},
     {var,{1089,5},'Abstr'},
     {lc,
      {1089,13},
      {block,
       {1089,14},
       [{match,
         {1089,20},
         {tuple,
          {1089,20},
          [{atom,{1089,21},ok},
           {tuple,
            {1089,24},
            [{var,{1089,25},'Mod'},
             {cons,
              {1089,29},
              {tuple,
               {1089,30},
               [{atom,{1089,31},abstract_code},
                {tuple,
                 {1090,9},
                 [{atom,{1090,10},raw_abstract_v1},{var,{1090,26},'Abstr'}]}]},
              {nil,{1090,33}}}]}]},
         {call,
          {1091,9},
          {remote,{1091,17},{atom,{1091,9},beam_lib},{atom,{1091,18},chunks}},
          [{var,{1091,25},'Beam'},
           {block,0,
            [{debug_line,1091,653},
             {cons,
              {1091,31},
              {atom,{1091,32},abstract_code},
              {nil,{1091,45}}}]}]}},
        {debug_line,1092,654},
        {tuple,{1092,5},[{var,{1092,6},'Mod'},{var,{1092,10},'Abstr'}]}]},
      [{block,0,[{atom,{1092,32},true}]},
       {generate,
        {1092,29},
        {var,{1092,24},'Beam'},
        {var,{1092,32},'TestBeams'}}]}},
    {debug_line,1093,655},
    {call,
     {1093,5},
     {remote,{1093,13},{atom,{1093,5},test_lib},{atom,{1093,14},p_run}},
     [{block,0,
       [{'fun',
         {1093,20},
         {clauses,
          [{clause,
            {1093,23},
            [{var,{1093,24},'F'}],
            [],
            [{call,
              {1093,30},
              {atom,{1093,30},do_core_pp},
              [{var,{1093,41},'F'},{var,{1093,44},'Outdir'}]}]}]}}]},
      {var,{1093,57},'Abstr'}]}]}]}.
{function,
 {1095,1},
 do_core_pp,2,
 [{clause,
   {1095,1},
   [{var,{1095,1},'_'},{var,{1095,1},'_'}],
   [[{call,
      {1095,1},
      {remote,{1095,1},{atom,{1095,1},fake},{atom,{1095,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1095,656},{atom,{1095,1},ignore}]},
  {clause,
   {1095,1},
   [{tuple,{1095,12},[{var,{1095,13},'M'},{var,{1095,15},'A'}]},
    {var,{1095,19},'Outdir'}],
   [],
   [{debug_line,1096,657},
    {'try',
     {1096,5},
     [{debug_line,1097,658},
      {call,
       {1097,2},
       {atom,{1097,2},do_core_pp_1},
       [{var,{1097,15},'M'},{var,{1097,18},'A'},{var,{1097,21},'Outdir'}]}],
     [],
     [{clause,
       {1099,2},
       [{tuple,
         {1099,2},
         [{atom,{1099,2},throw},
          {tuple,{1099,8},[{atom,{1099,9},error},{var,{1099,15},'Error'}]},
          {var,{1099,15},'_'}]}],
       [],
       [{debug_line,1100,659},
        {call,
         {1100,6},
         {remote,{1100,8},{atom,{1100,6},io},{atom,{1100,9},format}},
         [{block,0,
           [{string,
             {1100,16},
             "*** compilation failure '~p' for module ~s\n"}]},
          {block,0,
           [{debug_line,1101,660},
            {cons,
             {1101,9},
             {var,{1101,10},'Error'},
             {cons,{1101,16},{var,{1101,16},'M'},{nil,{1101,17}}}}]}]},
        {debug_line,1102,661},
        {atom,{1102,6},error}]},
      {clause,
       {1103,2},
       [{tuple,
         {1103,2},
         [{var,{1103,2},'Class'},
          {var,{1103,8},'Error'},
          {var,{1103,14},'Stk'}]}],
       [],
       [{debug_line,1104,662},
        {call,
         {1104,6},
         {remote,{1104,8},{atom,{1104,6},io},{atom,{1104,9},format}},
         [{block,0,[{string,{1104,16},"~p: ~p ~p\n~p\n"}]},
          {block,0,
           [{cons,
             {1104,35},
             {var,{1104,36},'M'},
             {cons,
              {1104,38},
              {var,{1104,38},'Class'},
              {cons,
               {1104,44},
               {var,{1104,44},'Error'},
               {cons,{1104,50},{var,{1104,50},'Stk'},{nil,{1104,53}}}}}}]}]},
        {debug_line,1105,663},
        {atom,{1105,6},error}]}],
     []}]}]}.
{function,
 {1108,1},
 do_core_pp_1,3,
 [{clause,
   {1108,1},
   [{var,{1108,1},'_'},{var,{1108,1},'_'},{var,{1108,1},'_'}],
   [[{call,
      {1108,1},
      {remote,{1108,1},{atom,{1108,1},fake},{atom,{1108,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1108,664},{atom,{1108,1},ignore}]},
  {clause,
   {1108,1},
   [{var,{1108,14},'M'},{var,{1108,17},'A'},{var,{1108,20},'Outdir'}],
   [],
   [{debug_line,1109,665},
    {match,
     {1109,5},
     {tuple,
      {1109,5},
      [{atom,{1109,6},ok},{var,{1109,9},'M'},{var,{1109,11},'Core0'}]},
     {call,
      {1109,20},
      {remote,{1109,27},{atom,{1109,20},compile},{atom,{1109,28},forms}},
      [{var,{1109,34},'A'},
       {block,0,
        [{cons,{1109,37},{atom,{1109,38},to_core},{nil,{1109,45}}}]}]}},
    {debug_line,1110,666},
    {match,
     {1110,5},
     {var,{1110,5},'CoreFile'},
     {call,
      {1110,16},
      {remote,{1110,24},{atom,{1110,16},filename},{atom,{1110,25},join}},
      [{var,{1110,30},'Outdir'},
       {block,0,
        [{op,
          {1110,53},
          '++',
          {call,
           {1110,38},
           {remote,
            {1110,38},
            {atom,{1110,38},erlang},
            {atom,{1110,38},atom_to_list}},
           [{var,{1110,51},'M'}]},
          {string,{1110,55},".core"}}]}]}},
    {debug_line,1111,667},
    {match,
     {1111,5},
     {var,{1111,5},'CorePP'},
     {call,
      {1111,14},
      {remote,{1111,21},{atom,{1111,14},core_pp},{atom,{1111,22},format}},
      [{var,{1111,29},'Core0'}]}},
    {debug_line,1112,668},
    {match,
     {1112,5},
     {atom,{1112,5},ok},
     {call,
      {1112,10},
      {remote,{1112,14},{atom,{1112,10},file},{atom,{1112,15},write_file}},
      [{var,{1112,26},'CoreFile'},
       {block,0,
        [{call,
          {1112,36},
          {remote,
           {1112,43},
           {atom,{1112,36},unicode},
           {atom,{1112,44},characters_to_binary}},
          [{var,{1112,65},'CorePP'}]}]}]}},
    {debug_line,1115,669},
    {match,
     {1115,5},
     {var,{1115,5},'Core'},
     {'case',
      {1115,12},
      {call,
       {1115,17},
       {remote,{1115,24},{atom,{1115,17},compile},{atom,{1115,25},file}},
       [{var,{1115,30},'CoreFile'},
        {block,0,
         [{cons,
           {1115,40},
           {atom,{1115,41},report_errors},
           {cons,
            {1115,55},
            {atom,{1115,55},from_core},
            {cons,
             {1115,65},
             {atom,{1115,65},no_copt},
             {cons,
              {1115,73},
              {atom,{1115,73},to_core},
              {cons,{1115,81},{atom,{1115,81},binary},{nil,{1115,87}}}}}}}]}]},
      [{clause,
        {1116,9},
        [{tuple,
          {1116,9},
          [{atom,{1116,10},ok},{var,{1116,13},'M'},{var,{1116,15},'Core1'}]}],
        [],
        [{debug_line,1116,670},{var,{1116,25},'Core1'}]},
       {clause,
        {1117,9},
        [{var,{1117,9},'Other'}],
        [],
        [{debug_line,1117,671},
         {call,
          {1117,18},
          {remote,{1117,18},{atom,{1117,18},erlang},{atom,{1117,18},throw}},
          [{block,0,
            [{tuple,
              {1117,24},
              [{atom,{1117,25},error},{var,{1117,31},'Other'}]}]}]}]}]}},
    {debug_line,1119,672},
    {match,
     {1119,5},
     {atom,{1119,5},ok},
     {call,
      {1119,10},
      {remote,{1119,14},{atom,{1119,10},file},{atom,{1119,15},delete}},
      [{var,{1119,22},'CoreFile'}]}},
    {debug_line,1122,673},
    {call,
     {1122,5},
     {atom,{1122,5},compile_forms},
     [{var,{1122,19},'M'},
      {var,{1122,22},'Core'},
      {block,0,
       [{cons,
         {1122,28},
         {atom,{1122,29},clint},
         {cons,
          {1122,35},
          {atom,{1122,35},ssalint},
          {cons,
           {1122,43},
           {atom,{1122,43},from_core},
           {cons,{1122,53},{atom,{1122,53},binary},{nil,{1122,59}}}}}}]}]},
    {debug_line,1131,674},
    {call,
     {1131,5},
     {atom,{1131,5},compile_forms},
     [{var,{1131,19},'M'},
      {var,{1131,22},'Core'},
      {block,0,
       [{cons,
         {1131,28},
         {atom,{1131,29},clint},
         {cons,
          {1131,35},
          {atom,{1131,35},ssalint},
          {cons,
           {1131,43},
           {atom,{1131,43},from_core},
           {cons,
            {1131,53},
            {atom,{1131,53},no_copt},
            {cons,{1131,61},{atom,{1131,61},binary},{nil,{1131,67}}}}}}}]}]},
    {debug_line,1133,675},
    {atom,{1133,5},ok}]}]}.
{function,
    {1135,1},
    compile_forms,3,
    [{clause,
         {1135,1},
         [{var,{1135,1},'_'},{var,{1135,1},'_'},{var,{1135,1},'_'}],
         [[{call,
               {1135,1},
               {remote,
                   {1135,1},
                   {atom,{1135,1},fake},
                   {atom,{1135,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1135,676},{atom,{1135,1},ignore}]},
     {clause,
         {1135,1},
         [{var,{1135,15},'Mod'},
          {var,{1135,20},'Forms'},
          {var,{1135,27},'Opts'}],
         [],
         [{debug_line,1136,677},
          {'case',
              {1136,5},
              {call,
                  {1136,10},
                  {remote,
                      {1136,17},
                      {atom,{1136,10},compile},
                      {atom,{1136,18},forms}},
                  [{var,{1136,24},'Forms'},
                   {block,0,
                       [{cons,
                            {1136,31},
                            {atom,{1136,32},report_errors},
                            {var,{1136,46},'Opts'}}]}]},
              [{clause,
                   {1137,2},
                   [{tuple,
                        {1137,2},
                        [{atom,{1137,3},ok},
                         {var,{1137,6},'Mod'},
                         {var,{1137,10},'_'}]}],
                   [],
                   [{debug_line,1137,678},{atom,{1137,17},ok}]},
               {clause,
                   {1138,2},
                   [{var,{1138,2},'Other'}],
                   [],
                   [{debug_line,1138,679},
                    {call,
                        {1138,11},
                        {remote,
                            {1138,11},
                            {atom,{1138,11},erlang},
                            {atom,{1138,11},throw}},
                        [{block,0,
                             [{tuple,
                                  {1138,17},
                                  [{atom,{1138,18},error},
                                   {var,{1138,24},'Other'}]}]}]}]}]}]}]}.
{function,
    {1143,1},
    core_roundtrip,1,
    [{clause,
         {1143,1},
         [{var,{1143,1},'_'}],
         [[{call,
               {1143,1},
               {remote,
                   {1143,1},
                   {atom,{1143,1},fake},
                   {atom,{1143,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1143,680},{atom,{1143,1},ignore}]},
     {clause,
         {1143,1},
         [{var,{1143,16},'Config'}],
         [],
         [{debug_line,1144,681},
          {match,
              {1144,5},
              {var,{1144,5},'PrivDir'},
              {call,
                  {1144,15},
                  {remote,
                      {1144,24},
                      {atom,{1144,15},proplists},
                      {atom,{1144,25},get_value}},
                  [{atom,{1144,35},priv_dir},{var,{1144,45},'Config'}]}},
          {debug_line,1145,682},
          {match,
              {1145,5},
              {var,{1145,5},'Outdir'},
              {call,
                  {1145,14},
                  {remote,
                      {1145,22},
                      {atom,{1145,14},filename},
                      {atom,{1145,23},join}},
                  [{var,{1145,28},'PrivDir'},
                   {block,0,
                       [{call,
                            {1145,37},
                            {remote,
                                {1145,37},
                                {atom,{1145,37},erlang},
                                {atom,{1145,37},atom_to_list}},
                            [{atom,{1145,51},core_roundtrip}]}]}]}},
          {debug_line,1146,683},
          {match,
              {1146,5},
              {atom,{1146,5},ok},
              {call,
                  {1146,10},
                  {remote,
                      {1146,14},
                      {atom,{1146,10},file},
                      {atom,{1146,15},make_dir}},
                  [{var,{1146,24},'Outdir'}]}},
          {debug_line,1148,684},
          {match,
              {1148,5},
              {var,{1148,5},'TestBeams'},
              {call,{1148,17},{atom,{1148,17},get_unique_beam_files},[]}},
          {debug_line,1150,685},
          {match,
              {1150,5},
              {var,{1150,5},'Test'},
              {'fun',
                  {1150,12},
                  {clauses,
                      [{clause,
                           {1150,15},
                           [{var,{1150,16},'F'}],
                           [],
                           [{call,
                                {1150,22},
                                {atom,{1150,22},do_core_roundtrip},
                                [{var,{1150,40},'F'},
                                 {var,{1150,43},'Outdir'}]}]}]}}},
          {debug_line,1151,686},
          {'case',
              {1151,5},
              {call,
                  {1151,10},
                  {remote,
                      {1151,16},
                      {atom,{1151,10},erlang},
                      {atom,{1151,17},system_info}},
                  [{atom,{1151,29},wordsize}]},
              [{clause,
                   {1152,9},
                   [{integer,{1152,9},4}],
                   [],
                   [{debug_line,1155,687},
                    {call,
                        {1155,13},
                        {remote,
                            {1155,21},
                            {atom,{1155,13},test_lib},
                            {atom,{1155,22},p_run}},
                        [{var,{1155,28},'Test'},
                         {var,{1155,34},'TestBeams'},
                         {integer,{1155,45},1}]}]},
               {clause,
                   {1156,9},
                   [{integer,{1156,9},8}],
                   [],
                   [{debug_line,1157,688},
                    {call,
                        {1157,13},
                        {remote,
                            {1157,21},
                            {atom,{1157,13},test_lib},
                            {atom,{1157,22},p_run}},
                        [{var,{1157,28},'Test'},
                         {var,{1157,34},'TestBeams'}]}]}]}]}]}.
{function,
 {1160,1},
 do_core_roundtrip,2,
 [{clause,
   {1160,1},
   [{var,{1160,1},'_'},{var,{1160,1},'_'}],
   [[{call,
      {1160,1},
      {remote,{1160,1},{atom,{1160,1},fake},{atom,{1160,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1160,689},{atom,{1160,1},ignore}]},
  {clause,
   {1160,1},
   [{var,{1160,19},'Beam'},{var,{1160,25},'Outdir'}],
   [],
   [{debug_line,1161,690},
    {'try',
     {1161,5},
     [{debug_line,1162,691},
      {match,
       {1162,2},
       {tuple,
        {1162,2},
        [{atom,{1162,3},ok},
         {tuple,
          {1162,6},
          [{var,{1162,7},'Mod'},
           {cons,
            {1162,11},
            {tuple,
             {1162,12},
             [{atom,{1162,13},abstract_code},
              {tuple,
               {1162,27},
               [{atom,{1162,28},raw_abstract_v1},{var,{1162,44},'Abstr'}]}]},
            {nil,{1162,51}}}]}]},
       {call,
        {1163,6},
        {remote,{1163,14},{atom,{1163,6},beam_lib},{atom,{1163,15},chunks}},
        [{var,{1163,22},'Beam'},
         {block,0,
          [{debug_line,1163,692},
           {cons,
            {1163,28},
            {atom,{1163,29},abstract_code},
            {nil,{1163,42}}}]}]}},
      {debug_line,1164,693},
      {call,
       {1164,2},
       {atom,{1164,2},do_core_roundtrip_1},
       [{var,{1164,22},'Mod'},
        {var,{1164,27},'Abstr'},
        {var,{1164,34},'Outdir'}]}],
     [],
     [{clause,
       {1166,2},
       [{tuple,
         {1166,2},
         [{atom,{1166,2},throw},
          {tuple,{1166,8},[{atom,{1166,9},error},{var,{1166,15},'Error'}]},
          {var,{1166,15},'_'}]}],
       [],
       [{debug_line,1167,694},
        {call,
         {1167,6},
         {remote,{1167,8},{atom,{1167,6},io},{atom,{1167,9},format}},
         [{block,0,
           [{string,{1167,16},"*** compilation failure '~p' for file ~s\n"}]},
          {block,0,
           [{debug_line,1168,695},
            {cons,
             {1168,9},
             {var,{1168,10},'Error'},
             {cons,{1168,16},{var,{1168,16},'Beam'},{nil,{1168,20}}}}]}]},
        {debug_line,1169,696},
        {atom,{1169,6},error}]},
      {clause,
       {1170,2},
       [{tuple,
         {1170,2},
         [{var,{1170,2},'Class'},
          {var,{1170,8},'Error'},
          {var,{1170,14},'Stk'}]}],
       [],
       [{debug_line,1171,697},
        {call,
         {1171,6},
         {remote,{1171,8},{atom,{1171,6},io},{atom,{1171,9},format}},
         [{block,0,[{string,{1171,16},"~p: ~p ~p\n~p\n"}]},
          {block,0,
           [{cons,
             {1171,35},
             {var,{1171,36},'Beam'},
             {cons,
              {1171,41},
              {var,{1171,41},'Class'},
              {cons,
               {1171,47},
               {var,{1171,47},'Error'},
               {cons,{1171,53},{var,{1171,53},'Stk'},{nil,{1171,56}}}}}}]}]},
        {debug_line,1172,698},
        {atom,{1172,6},error}]}],
     []}]}]}.
{function,
    {1175,1},
    do_core_roundtrip_1,3,
    [{clause,
         {1175,1},
         [{var,{1175,1},'_'},{var,{1175,1},'_'},{var,{1175,1},'_'}],
         [[{call,
               {1175,1},
               {remote,
                   {1175,1},
                   {atom,{1175,1},fake},
                   {atom,{1175,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1175,699},{atom,{1175,1},ignore}]},
     {clause,
         {1175,1},
         [{var,{1175,21},'Mod'},
          {var,{1175,26},'Abstr'},
          {var,{1175,33},'Outdir'}],
         [],
         [{debug_line,1176,700},
          {match,
              {1176,5},
              {tuple,
                  {1176,5},
                  [{atom,{1176,6},ok},
                   {var,{1176,9},'Mod'},
                   {var,{1176,13},'Core0'}]},
              {call,
                  {1176,22},
                  {remote,
                      {1176,29},
                      {atom,{1176,22},compile},
                      {atom,{1176,30},forms}},
                  [{var,{1176,36},'Abstr'},
                   {block,0,
                       [{cons,
                            {1176,43},
                            {atom,{1176,44},to_core0},
                            {nil,{1176,52}}}]}]}},
          {debug_line,1177,701},
          {call,
              {1177,5},
              {atom,{1177,5},do_core_roundtrip_2},
              [{var,{1177,25},'Mod'},
               {var,{1177,30},'Core0'},
               {var,{1177,37},'Outdir'}]},
          {debug_line,1181,702},
          {match,
              {1181,5},
              {tuple,{1181,5},[{var,{1181,6},'Core1'},{var,{1181,12},'_'}]},
              {call,
                  {1181,17},
                  {remote,
                      {1181,27},
                      {atom,{1181,17},cerl_trees},
                      {atom,{1181,28},label}},
                  [{var,{1181,34},'Core0'}]}},
          {debug_line,1182,703},
          {call,
              {1182,5},
              {atom,{1182,5},do_core_roundtrip_2},
              [{var,{1182,25},'Mod'},
               {var,{1182,30},'Core1'},
               {var,{1182,37},'Outdir'}]},
          {debug_line,1186,704},
          {match,
              {1186,5},
              {tuple,
                  {1186,5},
                  [{atom,{1186,6},ok},
                   {var,{1186,9},'Mod'},
                   {var,{1186,13},'Core2'}]},
              {call,
                  {1186,22},
                  {remote,
                      {1186,29},
                      {atom,{1186,22},compile},
                      {atom,{1186,30},forms}},
                  [{var,{1186,36},'Abstr'},
                   {block,0,
                       [{cons,
                            {1186,43},
                            {atom,{1186,44},inline},
                            {cons,
                                {1186,51},
                                {atom,{1186,51},to_core},
                                {nil,{1186,58}}}}]}]}},
          {debug_line,1187,705},
          {call,
              {1187,5},
              {atom,{1187,5},do_core_roundtrip_2},
              [{var,{1187,25},'Mod'},
               {var,{1187,30},'Core2'},
               {var,{1187,37},'Outdir'}]}]}]}.
{function,
 {1189,1},
 do_core_roundtrip_2,3,
 [{clause,
   {1189,1},
   [{var,{1189,1},'_'},{var,{1189,1},'_'},{var,{1189,1},'_'}],
   [[{call,
      {1189,1},
      {remote,{1189,1},{atom,{1189,1},fake},{atom,{1189,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1189,706},{atom,{1189,1},ignore}]},
  {clause,
   {1189,1},
   [{var,{1189,21},'M'},{var,{1189,24},'Core0'},{var,{1189,31},'Outdir'}],
   [],
   [{debug_line,1190,707},
    {match,
     {1190,5},
     {var,{1190,5},'CoreFile'},
     {call,
      {1190,16},
      {remote,{1190,24},{atom,{1190,16},filename},{atom,{1190,25},join}},
      [{var,{1190,30},'Outdir'},
       {block,0,
        [{op,
          {1190,53},
          '++',
          {call,
           {1190,38},
           {remote,
            {1190,38},
            {atom,{1190,38},erlang},
            {atom,{1190,38},atom_to_list}},
           [{var,{1190,51},'M'}]},
          {string,{1190,55},".core"}}]}]}},
    {debug_line,1191,708},
    {match,
     {1191,5},
     {var,{1191,5},'CorePP'},
     {call,
      {1191,14},
      {remote,{1191,21},{atom,{1191,14},core_pp},{atom,{1191,22},format_all}},
      [{var,{1191,33},'Core0'}]}},
    {debug_line,1192,709},
    {match,
     {1192,5},
     {atom,{1192,5},ok},
     {call,
      {1192,10},
      {remote,{1192,14},{atom,{1192,10},file},{atom,{1192,15},write_file}},
      [{var,{1192,26},'CoreFile'},
       {block,0,
        [{call,
          {1192,36},
          {remote,
           {1192,43},
           {atom,{1192,36},unicode},
           {atom,{1192,44},characters_to_binary}},
          [{var,{1192,65},'CorePP'}]}]}]}},
    {debug_line,1195,710},
    {match,
     {1195,5},
     {var,{1195,5},'Core2'},
     {'case',
      {1195,13},
      {call,
       {1195,18},
       {remote,{1195,25},{atom,{1195,18},compile},{atom,{1195,26},file}},
       [{var,{1195,31},'CoreFile'},
        {block,0,
         [{cons,
           {1195,41},
           {atom,{1195,42},report_errors},
           {cons,
            {1195,56},
            {atom,{1195,56},from_core},
            {cons,
             {1196,7},
             {atom,{1196,7},no_copt},
             {cons,
              {1196,15},
              {atom,{1196,15},to_core},
              {cons,{1196,23},{atom,{1196,23},binary},{nil,{1196,29}}}}}}}]}]},
      [{clause,
        {1197,3},
        [{tuple,
          {1197,3},
          [{atom,{1197,4},ok},{var,{1197,7},'M'},{var,{1197,9},'Core1'}]}],
        [],
        [{debug_line,1197,711},{var,{1197,19},'Core1'}]},
       {clause,
        {1198,3},
        [{var,{1198,3},'Other'}],
        [],
        [{debug_line,1198,712},
         {call,
          {1198,12},
          {remote,{1198,12},{atom,{1198,12},erlang},{atom,{1198,12},throw}},
          [{block,0,
            [{tuple,
              {1198,18},
              [{atom,{1198,19},error},{var,{1198,25},'Other'}]}]}]}]}]}},
    {debug_line,1200,713},
    {match,
     {1200,5},
     {var,{1200,5},'Core'},
     {call,
      {1200,12},
      {atom,{1200,12},undo_var_translation},
      [{var,{1200,33},'Core2'}]}},
    {debug_line,1201,714},
    {match,
     {1201,5},
     {atom,{1201,5},ok},
     {call,
      {1201,10},
      {remote,{1201,14},{atom,{1201,10},file},{atom,{1201,15},delete}},
      [{var,{1201,22},'CoreFile'}]}},
    {debug_line,1203,715},
    {'case',
     {1203,5},
     {call,
      {1203,10},
      {atom,{1203,10},cmp_core},
      [{var,{1203,19},'Core0'},{var,{1203,26},'Core'},{var,{1203,32},'M'}]},
     [{clause,
       {1204,2},
       [{atom,{1204,2},true}],
       [],
       [{debug_line,1204,716},{atom,{1204,10},ok}]},
      {clause,
       {1205,2},
       [{atom,{1205,2},false}],
       [],
       [{debug_line,1205,717},{atom,{1205,11},error}]}]}]}]}.
{function,
 {1208,1},
 undo_var_translation,1,
 [{clause,
   {1208,1},
   [{var,{1208,1},'_'}],
   [[{call,
      {1208,1},
      {remote,{1208,1},{atom,{1208,1},fake},{atom,{1208,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1208,718},{atom,{1208,1},ignore}]},
  {clause,
   {1208,1},
   [{var,{1208,22},'Tree'}],
   [],
   [{debug_line,1209,719},
    {match,
     {1209,5},
     {var,{1209,5},'F'},
     {'fun',
      {1209,9},
      {clauses,
       [{clause,
         {1209,12},
         [{var,{1209,13},'Node'}],
         [],
         [{debug_line,1210,720},
          {'case',
           {1210,3},
           {call,
            {1210,8},
            {remote,{1210,12},{atom,{1210,8},cerl},{atom,{1210,13},is_c_var}},
            [{var,{1210,22},'Node'}]},
           [{clause,
             {1211,7},
             [{atom,{1211,7},true}],
             [],
             [{debug_line,1212,721},
              {match,
               {1212,4},
               {var,{1212,4},'Name0'},
               {call,
                {1212,12},
                {remote,
                 {1212,16},
                 {atom,{1212,12},cerl},
                 {atom,{1212,17},var_name}},
                [{var,{1212,26},'Node'}]}},
              {debug_line,1213,722},
              {'try',
               {1213,4},
               [{call,
                 {1213,8},
                 {remote,
                  {1213,8},
                  {atom,{1213,8},erlang},
                  {atom,{1213,8},atom_to_list}},
                 [{var,{1213,21},'Name0'}]}],
               [{clause,
                 {1214,8},
                 [{op,
                   {1214,12},
                   '++',
                   {string,{1214,8},"_X"},
                   {var,{1214,14},'Name'}}],
                 [],
                 [{debug_line,1215,723},
                  {call,
                   {1215,5},
                   {remote,
                    {1215,9},
                    {atom,{1215,5},cerl},
                    {atom,{1215,10},update_c_var}},
                   [{var,{1215,23},'Node'},
                    {block,0,
                     [{call,
                       {1215,29},
                       {remote,
                        {1215,29},
                        {atom,{1215,29},erlang},
                        {atom,{1215,29},list_to_atom}},
                       [{var,{1215,42},'Name'}]}]}]}]},
                {clause,
                 {1216,8},
                 [{op,
                   {1216,11},
                   '++',
                   {string,{1216,8},"_"},
                   {var,{1216,13},'Name'}}],
                 [],
                 [{debug_line,1217,724},
                  {call,
                   {1217,5},
                   {remote,
                    {1217,9},
                    {atom,{1217,5},cerl},
                    {atom,{1217,10},update_c_var}},
                   [{var,{1217,23},'Node'},
                    {block,0,
                     [{call,
                       {1217,29},
                       {remote,
                        {1217,29},
                        {atom,{1217,29},erlang},
                        {atom,{1217,29},list_to_atom}},
                       [{var,{1217,42},'Name'}]}]}]}]},
                {clause,
                 {1218,8},
                 [{var,{1218,8},'_'}],
                 [],
                 [{debug_line,1219,725},{var,{1219,5},'Node'}]}],
               [{clause,
                 {1221,8},
                 [{tuple,
                   {1221,8},
                   [{atom,{1221,8},error},
                    {atom,{1221,14},badarg},
                    {var,{1221,14},'_'}]}],
                 [],
                 [{debug_line,1222,726},{var,{1222,5},'Node'}]}],
               []}]},
            {clause,
             {1225,7},
             [{atom,{1225,7},false}],
             [],
             [{debug_line,1226,727},{var,{1226,4},'Node'}]}]}]}]}}},
    {debug_line,1229,728},
    {call,
     {1229,5},
     {remote,{1229,15},{atom,{1229,5},cerl_trees},{atom,{1229,16},map}},
     [{var,{1229,20},'F'},{var,{1229,23},'Tree'}]}]}]}.
{function,
    {1231,1},
    cmp_core,3,
    [{clause,
         {1231,1},
         [{var,{1231,1},'_'},{var,{1231,1},'_'},{var,{1231,1},'_'}],
         [[{call,
               {1231,1},
               {remote,
                   {1231,1},
                   {atom,{1231,1},fake},
                   {atom,{1231,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1231,729},{atom,{1231,1},ignore}]},
     {clause,
         {1231,1},
         [{var,{1231,10},'E'},{var,{1231,13},'E'},{var,{1231,16},'_Mod'}],
         [],
         [{debug_line,1232,730},{atom,{1232,5},true}]},
     {clause,
         {1233,1},
         [{var,{1233,10},'M1'},{var,{1233,14},'M2'},{var,{1233,18},'Mod'}],
         [],
         [{debug_line,1234,731},
          {call,
              {1234,5},
              {atom,{1234,5},cmp_core_fs},
              [{block,0,
                   [{call,
                        {1234,17},
                        {remote,
                            {1234,21},
                            {atom,{1234,17},cerl},
                            {atom,{1234,22},module_defs}},
                        [{var,{1234,34},'M1'}]}]},
               {block,0,
                   [{call,
                        {1234,39},
                        {remote,
                            {1234,43},
                            {atom,{1234,39},cerl},
                            {atom,{1234,44},module_defs}},
                        [{var,{1234,56},'M2'}]}]},
               {var,{1234,61},'Mod'}]}]}]}.
{function,
    {1236,1},
    cmp_core_fs,3,
    [{clause,
         {1236,1},
         [{var,{1236,1},'_'},{var,{1236,1},'_'},{var,{1236,1},'_'}],
         [[{call,
               {1236,1},
               {remote,
                   {1236,1},
                   {atom,{1236,1},fake},
                   {atom,{1236,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1236,732},{atom,{1236,1},ignore}]},
     {clause,
         {1236,1},
         [{cons,{1236,13},{var,{1236,14},'F1'},{var,{1236,17},'T1'}},
          {cons,{1236,22},{var,{1236,23},'F2'},{var,{1236,26},'T2'}},
          {var,{1236,31},'Mod'}],
         [],
         [{debug_line,1237,733},
          {'case',
              {1237,5},
              {call,
                  {1237,5},
                  {atom,{1237,5},cmp_core_f},
                  [{var,{1237,16},'F1'},
                   {var,{1237,20},'F2'},
                   {var,{1237,24},'Mod'}]},
              [{clause,
                   {1237,5},
                   [{atom,{1237,5},true}],
                   [],
                   [{call,
                        {1237,37},
                        {atom,{1237,37},cmp_core_fs},
                        [{var,{1237,49},'T1'},
                         {var,{1237,53},'T2'},
                         {var,{1237,57},'Mod'}]}]},
               {clause,
                   {1237,5},
                   [{atom,{1237,5},false}],
                   [],
                   [{atom,{1237,5},false}]},
               {clause,
                   [{generated,true},{location,{1237,5}}],
                   [{var,{1237,5},cov1}],
                   [],
                   [{call,
                        {1237,5},
                        {remote,
                            {1237,5},
                            {atom,{1237,5},erlang},
                            {atom,{1237,5},error}},
                        [{block,0,
                             [{tuple,
                                  {1237,5},
                                  [{atom,{1237,5},badarg},
                                   {var,{1237,5},cov1}]}]}]}]}]}]},
     {clause,
         {1238,1},
         [{nil,{1238,13}},{nil,{1238,17}},{var,{1238,21},'_Mod'}],
         [],
         [{debug_line,1239,734},{atom,{1239,5},true}]},
     {clause,
         {1240,1},
         [{var,{1240,13},'_'},{var,{1240,16},'_'},{var,{1240,19},'_Mod'}],
         [],
         [{debug_line,1241,735},{atom,{1241,5},false}]}]}.
{function,
 {1243,1},
 cmp_core_f,3,
 [{clause,
   {1243,1},
   [{var,{1243,1},'_'},{var,{1243,1},'_'},{var,{1243,1},'_'}],
   [[{call,
      {1243,1},
      {remote,{1243,1},{atom,{1243,1},fake},{atom,{1243,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1243,736},{atom,{1243,1},ignore}]},
  {clause,
   {1243,1},
   [{var,{1243,12},'E'},{var,{1243,15},'E'},{var,{1243,18},'_Mod'}],
   [],
   [{debug_line,1244,737},{atom,{1244,5},true}]},
  {clause,
   {1245,1},
   [{tuple,{1245,12},[{var,{1245,13},'Name'},{var,{1245,18},'F1'}]},
    {tuple,{1245,23},[{var,{1245,24},'Name'},{var,{1245,29},'F2'}]},
    {var,{1245,34},'Mod'}],
   [],
   [{debug_line,1246,738},
    {'case',
     {1246,5},
     {call,
      {1246,10},
      {atom,{1246,10},diff},
      [{var,{1246,15},'F1'},{var,{1246,19},'F2'}]},
     [{clause,
       {1247,2},
       [{var,{1247,2},'F1'}],
       [],
       [{debug_line,1248,739},{atom,{1248,6},true}]},
      {clause,
       {1249,2},
       [{var,{1249,2},'Diff'}],
       [],
       [{debug_line,1250,740},
        {call,
         {1250,6},
         {remote,{1250,8},{atom,{1250,6},io},{atom,{1250,9},format}},
         [{block,0,[{string,{1250,16},"~p ~p:\n~p\n"}]},
          {block,0,
           [{cons,
             {1250,32},
             {var,{1250,33},'Mod'},
             {cons,
              {1250,37},
              {var,{1250,37},'Name'},
              {cons,{1250,42},{var,{1250,42},'Diff'},{nil,{1250,46}}}}}]}]},
        {debug_line,1251,741},
        {atom,{1251,6},false}]}]}]}]}.
{function,
 {1254,1},
 diff,2,
 [{clause,
   {1254,1},
   [{var,{1254,1},'_'},{var,{1254,1},'_'}],
   [[{call,
      {1254,1},
      {remote,{1254,1},{atom,{1254,1},fake},{atom,{1254,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1254,742},{atom,{1254,1},ignore}]},
  {clause,
   {1254,1},
   [{var,{1254,6},'E'},{var,{1254,9},'E'}],
   [],
   [{debug_line,1255,743},{var,{1255,5},'E'}]},
  {clause,
   {1256,1},
   [{cons,{1256,6},{var,{1256,7},'H1'},{var,{1256,10},'T1'}},
    {cons,{1256,15},{var,{1256,16},'H2'},{var,{1256,19},'T2'}}],
   [],
   [{debug_line,1257,744},
    {cons,
     {1257,5},
     {call,
      {1257,6},
      {atom,{1257,6},diff},
      [{var,{1257,11},'H1'},{var,{1257,15},'H2'}]},
     {call,
      {1257,19},
      {atom,{1257,19},diff},
      [{var,{1257,24},'T1'},{var,{1257,28},'T2'}]}}]},
  {clause,
   {1258,1},
   [{var,{1258,6},'T1'},{var,{1258,10},'T2'}],
   [[{op,
      {1258,34},
      '=:=',
      {call,
       {1258,19},
       {remote,{1258,19},{atom,{1258,19},erlang},{atom,{1258,19},tuple_size}},
       [{var,{1258,30},'T1'}]},
      {call,
       {1258,38},
       {remote,{1258,38},{atom,{1258,38},erlang},{atom,{1258,38},tuple_size}},
       [{var,{1258,49},'T2'}]}}]],
   [{debug_line,1259,745},
    {'case',
     {1259,5},
     {'case',
      {1259,10},
      {call,
       {1259,10},
       {remote,{1259,14},{atom,{1259,10},cerl},{atom,{1259,15},is_c_var}},
       [{var,{1259,24},'T1'}]},
      [{clause,
        {1259,10},
        [{atom,{1259,10},true}],
        [],
        [{call,
          {1259,36},
          {remote,{1259,40},{atom,{1259,36},cerl},{atom,{1259,41},is_c_var}},
          [{var,{1259,50},'T2'}]}]},
       {clause,{1259,10},[{atom,{1259,10},false}],[],[{atom,{1259,10},false}]},
       {clause,
        [{generated,true},{location,{1259,10}}],
        [{var,{1259,10},cov1}],
        [],
        [{call,
          {1259,10},
          {remote,{1259,10},{atom,{1259,10},erlang},{atom,{1259,10},error}},
          [{block,0,
            [{tuple,
              {1259,10},
              [{atom,{1259,10},badarg},{var,{1259,10},cov1}]}]}]}]}]},
     [{clause,
       {1260,9},
       [{atom,{1260,9},true}],
       [],
       [{debug_line,1261,746},
        {call,
         {1261,13},
         {atom,{1261,13},diff_var},
         [{var,{1261,22},'T1'},{var,{1261,26},'T2'}]}]},
      {clause,
       {1262,9},
       [{atom,{1262,9},false}],
       [],
       [{debug_line,1263,747},
        {'case',
         {1263,13},
         {'case',
          {1263,18},
          {call,
           {1263,18},
           {remote,{1263,22},{atom,{1263,18},cerl},{atom,{1263,23},is_c_map}},
           [{var,{1263,32},'T1'}]},
          [{clause,
            {1263,18},
            [{atom,{1263,18},true}],
            [],
            [{call,
              {1263,44},
              {remote,
               {1263,48},
               {atom,{1263,44},cerl},
               {atom,{1263,49},is_c_map}},
              [{var,{1263,58},'T2'}]}]},
           {clause,
            {1263,18},
            [{atom,{1263,18},false}],
            [],
            [{atom,{1263,18},false}]},
           {clause,
            [{generated,true},{location,{1263,18}}],
            [{var,{1263,18},cov2}],
            [],
            [{call,
              {1263,18},
              {remote,
               {1263,18},
               {atom,{1263,18},erlang},
               {atom,{1263,18},error}},
              [{block,0,
                [{tuple,
                  {1263,18},
                  [{atom,{1263,18},badarg},{var,{1263,18},cov2}]}]}]}]}]},
         [{clause,
           {1264,17},
           [{atom,{1264,17},true}],
           [],
           [{debug_line,1265,748},
            {call,
             {1265,21},
             {atom,{1265,21},diff_map},
             [{var,{1265,30},'T1'},{var,{1265,34},'T2'}]}]},
          {clause,
           {1266,17},
           [{atom,{1266,17},false}],
           [],
           [{debug_line,1267,749},
            {call,
             {1267,21},
             {atom,{1267,21},diff_tuple},
             [{var,{1267,32},'T1'},{var,{1267,36},'T2'}]}]}]}]}]}]},
  {clause,
   {1270,1},
   [{var,{1270,6},'E1'},{var,{1270,10},'E2'}],
   [],
   [{debug_line,1271,750},
    {tuple,
     {1271,5},
     [{atom,{1271,6},'DIFF'},{var,{1271,13},'E1'},{var,{1271,16},'E2'}]}]}]}.
{function,
 {1273,1},
 diff_var,2,
 [{clause,
   {1273,1},
   [{var,{1273,1},'_'},{var,{1273,1},'_'}],
   [[{call,
      {1273,1},
      {remote,{1273,1},{atom,{1273,1},fake},{atom,{1273,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1273,751},{atom,{1273,1},ignore}]},
  {clause,
   {1273,1},
   [{var,{1273,10},'V1'},{var,{1273,14},'V2'}],
   [],
   [{debug_line,1274,752},
    {'case',
     {1274,5},
     {tuple,
      {1274,10},
      [{call,
        {1274,11},
        {remote,{1274,15},{atom,{1274,11},cerl},{atom,{1274,16},var_name}},
        [{var,{1274,25},'V1'}]},
       {call,
        {1274,29},
        {remote,{1274,33},{atom,{1274,29},cerl},{atom,{1274,34},var_name}},
        [{var,{1274,43},'V2'}]}]},
     [{clause,
       {1275,9},
       [{tuple,{1275,9},[{var,{1275,10},'Same'},{var,{1275,15},'Same'}]}],
       [],
       [{debug_line,1276,753},{var,{1276,13},'V1'}]},
      {clause,
       {1277,9},
       [{tuple,{1277,9},[{var,{1277,10},'Name1'},{var,{1277,16},'Name2'}]}],
       [],
       [{debug_line,1280,754},
        {'case',
         {1280,13},
         {'case',
          {1280,18},
          {call,
           {1280,18},
           {remote,
            {1280,18},
            {atom,{1280,18},erlang},
            {atom,{1280,18},is_integer}},
           [{var,{1280,29},'Name1'}]},
          [{clause,
            {1280,18},
            [{atom,{1280,18},true}],
            [],
            [{debug_line,1281,755},
             {op,
              {1281,54},
              '=:=',
              {call,
               {1281,17},
               {remote,
                {1281,17},
                {atom,{1281,17},erlang},
                {atom,{1281,17},list_to_atom}},
               [{block,0,
                 [{call,
                   {1281,30},
                   {remote,
                    {1281,30},
                    {atom,{1281,30},erlang},
                    {atom,{1281,30},integer_to_list}},
                   [{var,{1281,46},'Name1'}]}]}]},
              {var,{1281,58},'Name2'}}]},
           {clause,
            {1280,18},
            [{atom,{1280,18},false}],
            [],
            [{atom,{1280,18},false}]},
           {clause,
            [{generated,true},{location,{1280,18}}],
            [{var,{1280,18},cov1}],
            [],
            [{call,
              {1280,18},
              {remote,
               {1280,18},
               {atom,{1280,18},erlang},
               {atom,{1280,18},error}},
              [{block,0,
                [{tuple,
                  {1280,18},
                  [{atom,{1280,18},badarg},{var,{1280,18},cov1}]}]}]}]}]},
         [{clause,
           {1282,17},
           [{atom,{1282,17},true}],
           [],
           [{debug_line,1283,756},{var,{1283,21},'V1'}]},
          {clause,
           {1284,17},
           [{var,{1284,17},'_'}],
           [],
           [{debug_line,1285,757},
            {call,
             {1285,21},
             {remote,
              {1285,25},
              {atom,{1285,21},cerl},
              {atom,{1285,26},update_c_var}},
             [{var,{1285,39},'V1'},
              {block,0,
               [{tuple,
                 {1285,43},
                 [{atom,{1285,44},'DIFF'},
                  {var,{1285,51},'Name1'},
                  {var,{1285,57},'Name2'}]}]}]}]}]}]}]}]}]}.
{function,
    {1293,1},
    diff_map,2,
    [{clause,
         {1293,1},
         [{var,{1293,1},'_'},{var,{1293,1},'_'}],
         [[{call,
               {1293,1},
               {remote,
                   {1293,1},
                   {atom,{1293,1},fake},
                   {atom,{1293,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1293,758},{atom,{1293,1},ignore}]},
     {clause,
         {1293,1},
         [{var,{1293,10},'M'},{var,{1293,13},'M'}],
         [],
         [{debug_line,1294,759},{var,{1294,5},'M'}]},
     {clause,
         {1295,1},
         [{var,{1295,10},'M1'},{var,{1295,14},'M2'}],
         [],
         [{debug_line,1296,760},
          {'case',
              {1296,5},
              {op,{1296,27},
                  '=:=',
                  {call,
                      {1296,10},
                      {remote,
                          {1296,14},
                          {atom,{1296,10},cerl},
                          {atom,{1296,15},get_ann}},
                      [{var,{1296,23},'M1'}]},
                  {call,
                      {1296,31},
                      {remote,
                          {1296,35},
                          {atom,{1296,31},cerl},
                          {atom,{1296,36},get_ann}},
                      [{var,{1296,44},'M2'}]}},
              [{clause,
                   {1297,9},
                   [{atom,{1297,9},false}],
                   [],
                   [{debug_line,1298,761},
                    {call,
                        {1298,13},
                        {atom,{1298,13},diff_tuple},
                        [{var,{1298,24},'M1'},{var,{1298,28},'M2'}]}]},
               {clause,
                   {1299,9},
                   [{atom,{1299,9},true}],
                   [],
                   [{debug_line,1300,762},
                    {'case',
                        {1300,13},
                        {op,{1300,42},
                            '=:=',
                            {call,
                                {1300,18},
                                {atom,{1300,18},remove_compiler_gen},
                                [{var,{1300,38},'M1'}]},
                            {call,
                                {1300,46},
                                {atom,{1300,46},remove_compiler_gen},
                                [{var,{1300,66},'M2'}]}},
                        [{clause,
                             {1301,17},
                             [{atom,{1301,17},true}],
                             [],
                             [{debug_line,1302,763},{var,{1302,21},'M1'}]},
                         {clause,
                             {1303,17},
                             [{atom,{1303,17},false}],
                             [],
                             [{debug_line,1304,764},
                              {call,
                                  {1304,21},
                                  {atom,{1304,21},diff_tuple},
                                  [{var,{1304,32},'M1'},
                                   {var,{1304,36},'M2'}]}]}]}]}]}]}]}.
{function,
    {1308,1},
    diff_tuple,2,
    [{clause,
         {1308,1},
         [{var,{1308,1},'_'},{var,{1308,1},'_'}],
         [[{call,
               {1308,1},
               {remote,
                   {1308,1},
                   {atom,{1308,1},fake},
                   {atom,{1308,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1308,765},{atom,{1308,1},ignore}]},
     {clause,
         {1308,1},
         [{var,{1308,12},'T1'},{var,{1308,16},'T2'}],
         [],
         [{debug_line,1309,766},
          {match,
              {1309,5},
              {var,{1309,5},'L'},
              {call,
                  {1309,9},
                  {atom,{1309,9},diff},
                  [{block,0,
                       [{call,
                            {1309,14},
                            {remote,
                                {1309,14},
                                {atom,{1309,14},erlang},
                                {atom,{1309,14},tuple_to_list}},
                            [{var,{1309,28},'T1'}]}]},
                   {block,0,
                       [{call,
                            {1309,33},
                            {remote,
                                {1309,33},
                                {atom,{1309,33},erlang},
                                {atom,{1309,33},tuple_to_list}},
                            [{var,{1309,47},'T2'}]}]}]}},
          {debug_line,1310,767},
          {call,
              {1310,5},
              {remote,
                  {1310,5},
                  {atom,{1310,5},erlang},
                  {atom,{1310,5},list_to_tuple}},
              [{var,{1310,19},'L'}]}]}]}.
{function,
    {1312,1},
    remove_compiler_gen,1,
    [{clause,
         {1312,1},
         [{var,{1312,1},'_'}],
         [[{call,
               {1312,1},
               {remote,
                   {1312,1},
                   {atom,{1312,1},fake},
                   {atom,{1312,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1312,768},{atom,{1312,1},ignore}]},
     {clause,
         {1312,1},
         [{var,{1312,21},'M'}],
         [],
         [{debug_line,1313,769},
          {match,
              {1313,5},
              {var,{1313,5},'Arg0'},
              {call,
                  {1313,12},
                  {remote,
                      {1313,16},
                      {atom,{1313,12},cerl},
                      {atom,{1313,17},map_arg}},
                  [{var,{1313,25},'M'}]}},
          {debug_line,1314,770},
          {match,
              {1314,5},
              {var,{1314,5},'Arg'},
              {call,
                  {1314,11},
                  {remote,
                      {1314,15},
                      {atom,{1314,11},cerl},
                      {atom,{1314,16},set_ann}},
                  [{var,{1314,24},'Arg0'},{nil,{1314,30}}]}},
          {debug_line,1315,771},
          {match,
              {1315,5},
              {var,{1315,5},'Es0'},
              {call,
                  {1315,11},
                  {remote,
                      {1315,15},
                      {atom,{1315,11},cerl},
                      {atom,{1315,16},map_es}},
                  [{var,{1315,23},'M'}]}},
          {debug_line,1316,772},
          {match,
              {1316,5},
              {var,{1316,5},'Es'},
              {lc,{1316,10},
                  {block,0,
                      [{call,
                           {1316,11},
                           {atom,{1316,11},remove_compiler_gen_1},
                           [{var,{1316,33},'Pair'}]}]},
                  [{block,0,[{atom,{1316,50},true}]},
                   {generate,
                       {1316,47},
                       {var,{1316,42},'Pair'},
                       {var,{1316,50},'Es0'}}]}},
          {debug_line,1317,773},
          {call,
              {1317,5},
              {remote,
                  {1317,9},
                  {atom,{1317,5},cerl},
                  {atom,{1317,10},update_c_map}},
              [{var,{1317,23},'M'},
               {var,{1317,26},'Arg'},
               {var,{1317,31},'Es'}]}]}]}.
{function,
    {1319,1},
    remove_compiler_gen_1,1,
    [{clause,
         {1319,1},
         [{var,{1319,1},'_'}],
         [[{call,
               {1319,1},
               {remote,
                   {1319,1},
                   {atom,{1319,1},fake},
                   {atom,{1319,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1319,774},{atom,{1319,1},ignore}]},
     {clause,
         {1319,1},
         [{var,{1319,23},'Pair'}],
         [],
         [{debug_line,1320,775},
          {match,
              {1320,5},
              {var,{1320,5},'Op0'},
              {call,
                  {1320,11},
                  {remote,
                      {1320,15},
                      {atom,{1320,11},cerl},
                      {atom,{1320,16},map_pair_op}},
                  [{var,{1320,28},'Pair'}]}},
          {debug_line,1321,776},
          {match,
              {1321,5},
              {var,{1321,5},'Op'},
              {call,
                  {1321,10},
                  {remote,
                      {1321,14},
                      {atom,{1321,10},cerl},
                      {atom,{1321,15},set_ann}},
                  [{var,{1321,23},'Op0'},{nil,{1321,28}}]}},
          {debug_line,1322,777},
          {match,
              {1322,5},
              {var,{1322,5},'K'},
              {call,
                  {1322,9},
                  {atom,{1322,9},map_var},
                  [{block,0,
                       [{call,
                            {1322,17},
                            {remote,
                                {1322,21},
                                {atom,{1322,17},cerl},
                                {atom,{1322,22},map_pair_key}},
                            [{var,{1322,35},'Pair'}]}]}]}},
          {debug_line,1323,778},
          {match,
              {1323,5},
              {var,{1323,5},'V'},
              {call,
                  {1323,9},
                  {atom,{1323,9},map_var},
                  [{block,0,
                       [{call,
                            {1323,17},
                            {remote,
                                {1323,21},
                                {atom,{1323,17},cerl},
                                {atom,{1323,22},map_pair_val}},
                            [{var,{1323,35},'Pair'}]}]}]}},
          {debug_line,1324,779},
          {call,
              {1324,5},
              {remote,
                  {1324,9},
                  {atom,{1324,5},cerl},
                  {atom,{1324,10},update_c_map_pair}},
              [{var,{1324,28},'Pair'},
               {var,{1324,34},'Op'},
               {var,{1324,38},'K'},
               {var,{1324,41},'V'}]}]}]}.
{function,
 {1326,1},
 map_var,1,
 [{clause,
   {1326,1},
   [{var,{1326,1},'_'}],
   [[{call,
      {1326,1},
      {remote,{1326,1},{atom,{1326,1},fake},{atom,{1326,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1326,780},{atom,{1326,1},ignore}]},
  {clause,
   {1326,1},
   [{var,{1326,9},'Var'}],
   [],
   [{debug_line,1327,781},
    {'case',
     {1327,5},
     {call,
      {1327,10},
      {remote,{1327,14},{atom,{1327,10},cerl},{atom,{1327,15},is_c_var}},
      [{var,{1327,24},'Var'}]},
     [{clause,
       {1328,9},
       [{atom,{1328,9},true}],
       [],
       [{debug_line,1329,782},
        {'case',
         {1329,13},
         {call,
          {1329,18},
          {remote,{1329,22},{atom,{1329,18},cerl},{atom,{1329,23},var_name}},
          [{var,{1329,32},'Var'}]},
         [{clause,
           {1330,17},
           [{var,{1330,17},'Name'}],
           [[{call,
              {1330,27},
              {remote,
               {1330,27},
               {atom,{1330,27},erlang},
               {atom,{1330,27},is_atom}},
              [{var,{1330,35},'Name'}]}]],
           [{debug_line,1331,783},
            {match,
             {1331,21},
             {var,{1331,21},'L'},
             {call,
              {1331,25},
              {remote,
               {1331,25},
               {atom,{1331,25},erlang},
               {atom,{1331,25},atom_to_list}},
              [{var,{1331,38},'Name'}]}},
            {debug_line,1332,784},
            {'try',
             {1332,21},
             [{call,
               {1332,25},
               {remote,
                {1332,25},
                {atom,{1332,25},erlang},
                {atom,{1332,25},list_to_integer}},
               [{var,{1332,41},'L'}]}],
             [{clause,
               {1333,25},
               [{var,{1333,25},'Int'}],
               [],
               [{debug_line,1334,785},
                {call,
                 {1334,29},
                 {remote,
                  {1334,33},
                  {atom,{1334,29},cerl},
                  {atom,{1334,34},update_c_var}},
                 [{var,{1334,47},'Var'},{var,{1334,52},'Int'}]}]}],
             [{clause,
               {1336,25},
               [{tuple,
                 {1336,25},
                 [{atom,{1336,25},error},
                  {var,{1336,31},'_'},
                  {var,{1336,31},'_'}]}],
               [],
               [{debug_line,1337,786},{var,{1337,29},'Var'}]}],
             []}]},
          {clause,
           {1339,17},
           [{var,{1339,17},'_'}],
           [],
           [{debug_line,1340,787},{var,{1340,21},'Var'}]}]}]},
      {clause,
       {1342,9},
       [{atom,{1342,9},false}],
       [],
       [{debug_line,1343,788},{var,{1343,13},'Var'}]}]}]}]}.
{function,
 {1349,1},
 asm,1,
 [{clause,
   {1349,1},
   [{var,{1349,1},'_'}],
   [[{call,
      {1349,1},
      {remote,{1349,1},{atom,{1349,1},fake},{atom,{1349,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1349,789},{atom,{1349,1},ignore}]},
  {clause,
   {1349,1},
   [{var,{1349,5},'Config'}],
   [[{call,
      {1349,18},
      {remote,{1349,18},{atom,{1349,18},erlang},{atom,{1349,18},is_list}},
      [{var,{1349,26},'Config'}]}]],
   [{debug_line,1350,790},
    {match,
     {1350,5},
     {var,{1350,5},'PrivDir'},
     {call,
      {1350,15},
      {remote,{1350,24},{atom,{1350,15},proplists},{atom,{1350,25},get_value}},
      [{atom,{1350,35},priv_dir},{var,{1350,45},'Config'}]}},
    {debug_line,1351,791},
    {match,
     {1351,5},
     {var,{1351,5},'Outdir'},
     {call,
      {1351,14},
      {remote,{1351,22},{atom,{1351,14},filename},{atom,{1351,23},join}},
      [{var,{1351,28},'PrivDir'},{block,0,[{string,{1351,37},"asm"}]}]}},
    {debug_line,1352,792},
    {match,
     {1352,5},
     {atom,{1352,5},ok},
     {call,
      {1352,10},
      {remote,{1352,14},{atom,{1352,10},file},{atom,{1352,15},make_dir}},
      [{var,{1352,24},'Outdir'}]}},
    {debug_line,1354,793},
    {match,
     {1354,5},
     {var,{1354,5},'TestBeams'},
     {call,{1354,17},{atom,{1354,17},get_unique_beam_files},[]}},
    {debug_line,1355,794},
    {match,
     {1355,5},
     {var,{1355,5},'Res'},
     {call,
      {1355,11},
      {remote,{1355,19},{atom,{1355,11},test_lib},{atom,{1355,20},p_run}},
      [{block,0,
        [{'fun',
          {1355,26},
          {clauses,
           [{clause,
             {1355,29},
             [{var,{1355,30},'F'}],
             [],
             [{call,
               {1355,36},
               {atom,{1355,36},do_asm},
               [{var,{1355,43},'F'},{var,{1355,46},'Outdir'}]}]}]}}]},
       {var,{1355,59},'TestBeams'}]}},
    {debug_line,1356,795},
    {var,{1356,5},'Res'}]}]}.
{function,
 {1359,1},
 do_asm,2,
 [{clause,
   {1359,1},
   [{var,{1359,1},'_'},{var,{1359,1},'_'}],
   [[{call,
      {1359,1},
      {remote,{1359,1},{atom,{1359,1},fake},{atom,{1359,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1359,796},{atom,{1359,1},ignore}]},
  {clause,
   {1359,1},
   [{var,{1359,8},'Beam'},{var,{1359,14},'Outdir'}],
   [],
   [{debug_line,1360,797},
    {match,
     {1360,5},
     {tuple,
      {1360,5},
      [{atom,{1360,6},ok},
       {tuple,
        {1360,9},
        [{var,{1360,10},'M'},
         {cons,
          {1360,12},
          {tuple,
           {1360,13},
           [{atom,{1360,14},abstract_code},
            {tuple,
             {1360,28},
             [{atom,{1360,29},raw_abstract_v1},{var,{1360,45},'A'}]}]},
          {nil,{1360,48}}}]}]},
     {call,
      {1361,2},
      {remote,{1361,10},{atom,{1361,2},beam_lib},{atom,{1361,11},chunks}},
      [{var,{1361,18},'Beam'},
       {block,0,
        [{debug_line,1361,798},
         {cons,{1361,24},{atom,{1361,25},abstract_code},{nil,{1361,38}}}]}]}},
    {debug_line,1362,799},
    {'try',
     {1362,5},
     [{debug_line,1363,800},
      {match,
       {1363,9},
       {var,{1363,9},'Opts'},
       {call,
        {1363,16},
        {remote,{1363,24},{atom,{1363,16},test_lib},{atom,{1363,25},opt_opts}},
        [{var,{1363,34},'M'}]}},
      {debug_line,1364,801},
      {match,
       {1364,2},
       {tuple,
        {1364,2},
        [{atom,{1364,3},ok},{var,{1364,6},'M'},{var,{1364,8},'Asm'}]},
       {call,
        {1364,15},
        {remote,{1364,22},{atom,{1364,15},compile},{atom,{1364,23},forms}},
        [{var,{1364,29},'A'},
         {block,0,
          [{cons,{1364,32},{atom,{1364,33},'S'},{var,{1364,37},'Opts'}}]}]}},
      {debug_line,1365,802},
      {match,
       {1365,2},
       {var,{1365,2},'AsmFile'},
       {call,
        {1365,12},
        {remote,{1365,20},{atom,{1365,12},filename},{atom,{1365,21},join}},
        [{var,{1365,26},'Outdir'},
         {block,0,
          [{op,
            {1365,49},
            '++',
            {call,
             {1365,34},
             {remote,
              {1365,34},
              {atom,{1365,34},erlang},
              {atom,{1365,34},atom_to_list}},
             [{var,{1365,47},'M'}]},
            {string,{1365,51},".S"}}]}]}},
      {debug_line,1366,803},
      {match,
       {1366,2},
       {tuple,{1366,2},[{atom,{1366,3},ok},{var,{1366,6},'Fd'}]},
       {call,
        {1366,12},
        {remote,{1366,16},{atom,{1366,12},file},{atom,{1366,17},open}},
        [{var,{1366,22},'AsmFile'},
         {block,0,
          [{cons,
            {1366,31},
            {atom,{1366,32},write},
            {cons,
             {1366,38},
             {tuple,
              {1366,38},
              [{atom,{1366,39},encoding},{atom,{1366,48},utf8}]},
             {nil,{1366,53}}}}]}]}},
      {debug_line,1367,804},
      {call,
       {1367,2},
       {remote,{1367,14},{atom,{1367,2},beam_listing},{atom,{1367,15},module}},
       [{var,{1367,22},'Fd'},{var,{1367,26},'Asm'}]},
      {debug_line,1368,805},
      {match,
       {1368,2},
       {atom,{1368,2},ok},
       {call,
        {1368,7},
        {remote,{1368,11},{atom,{1368,7},file},{atom,{1368,12},close}},
        [{var,{1368,18},'Fd'}]}},
      {debug_line,1369,806},
      {'case',
       {1369,9},
       {call,
        {1369,14},
        {remote,{1369,21},{atom,{1369,14},compile},{atom,{1369,22},file}},
        [{var,{1369,27},'AsmFile'},
         {block,0,
          [{cons,
            {1369,36},
            {atom,{1369,37},from_asm},
            {cons,
             {1369,46},
             {atom,{1369,46},binary},
             {cons,
              {1369,53},
              {atom,{1369,53},report},
              {var,{1369,60},'Opts'}}}}]}]},
       [{clause,
         {1370,6},
         [{tuple,
           {1370,6},
           [{atom,{1370,7},ok},{var,{1370,10},'M'},{var,{1370,12},'_'}]}],
         [],
         [{debug_line,1371,807},
          {match,
           {1371,3},
           {atom,{1371,3},ok},
           {call,
            {1371,8},
            {remote,{1371,12},{atom,{1371,8},file},{atom,{1371,13},delete}},
            [{var,{1371,20},'AsmFile'}]}}]},
        {clause,
         {1372,6},
         [{var,{1372,6},'Other'}],
         [],
         [{debug_line,1373,808},
          {call,
           {1373,3},
           {remote,{1373,5},{atom,{1373,3},io},{atom,{1373,6},format}},
           [{block,0,[{string,{1373,13},"*** failure '~p' for ~s\n"}]},
            {block,0,
             [{debug_line,1374,809},
              {cons,
               {1374,6},
               {var,{1374,7},'Other'},
               {cons,{1374,13},{var,{1374,13},'AsmFile'},{nil,{1374,20}}}}]}]},
          {debug_line,1375,810},
          {atom,{1375,3},error}]}]}],
     [],
     [{clause,
       {1377,11},
       [{tuple,
         {1377,11},
         [{var,{1377,11},'Class'},
          {var,{1377,17},'Error'},
          {var,{1377,23},'Stk'}]}],
       [],
       [{debug_line,1378,811},
        {call,
         {1378,6},
         {remote,{1378,8},{atom,{1378,6},io},{atom,{1378,9},format}},
         [{block,0,[{string,{1378,16},"~p: ~p ~p\n~p\n"}]},
          {block,0,
           [{cons,
             {1378,35},
             {var,{1378,36},'M'},
             {cons,
              {1378,38},
              {var,{1378,38},'Class'},
              {cons,
               {1378,44},
               {var,{1378,44},'Error'},
               {cons,{1378,50},{var,{1378,50},'Stk'},{nil,{1378,53}}}}}}]}]},
        {debug_line,1379,812},
        {atom,{1379,6},error}]}],
     []}]}]}.
{function,
    {1387,1},
    asm_labels,1,
    [{clause,
         {1387,1},
         [{var,{1387,1},'_'}],
         [[{call,
               {1387,1},
               {remote,
                   {1387,1},
                   {atom,{1387,1},fake},
                   {atom,{1387,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1387,813},{atom,{1387,1},ignore}]},
     {clause,
         {1387,1},
         [{var,{1387,12},'Config'}],
         [],
         [{debug_line,1388,814},
          {match,
              {1388,5},
              {var,{1388,5},'DataDir'},
              {call,
                  {1388,15},
                  {remote,
                      {1388,24},
                      {atom,{1388,15},proplists},
                      {atom,{1388,25},get_value}},
                  [{atom,{1388,35},data_dir},{var,{1388,45},'Config'}]}},
          {debug_line,1389,815},
          {match,
              {1389,5},
              {var,{1389,5},'PrivDir'},
              {call,
                  {1389,15},
                  {remote,
                      {1389,24},
                      {atom,{1389,15},proplists},
                      {atom,{1389,25},get_value}},
                  [{atom,{1389,35},priv_dir},{var,{1389,45},'Config'}]}},
          {debug_line,1390,816},
          {match,
              {1390,5},
              {var,{1390,5},'InFile'},
              {call,
                  {1390,14},
                  {remote,
                      {1390,22},
                      {atom,{1390,14},filename},
                      {atom,{1390,23},join}},
                  [{var,{1390,28},'DataDir'},
                   {block,0,[{string,{1390,37},"asm_labels.erl"}]}]}},
          {debug_line,1391,817},
          {match,
              {1391,5},
              {var,{1391,5},'OutDir'},
              {call,
                  {1391,14},
                  {remote,
                      {1391,22},
                      {atom,{1391,14},filename},
                      {atom,{1391,23},join}},
                  [{var,{1391,28},'PrivDir'},
                   {block,0,[{string,{1391,37},"asm_labels"}]}]}},
          {debug_line,1392,818},
          {match,
              {1392,5},
              {var,{1392,5},'OutFile'},
              {call,
                  {1392,15},
                  {remote,
                      {1392,23},
                      {atom,{1392,15},filename},
                      {atom,{1392,24},join}},
                  [{var,{1392,29},'OutDir'},
                   {block,0,[{string,{1392,37},"asm_labels.S"}]}]}},
          {debug_line,1393,819},
          {match,
              {1393,5},
              {atom,{1393,5},ok},
              {call,
                  {1393,10},
                  {remote,
                      {1393,14},
                      {atom,{1393,10},file},
                      {atom,{1393,15},make_dir}},
                  [{var,{1393,24},'OutDir'}]}},
          {debug_line,1394,820},
          {match,
              {1394,5},
              {tuple,{1394,5},[{atom,{1394,6},ok},{atom,{1394,9},asm_labels}]},
              {call,
                  {1394,23},
                  {remote,
                      {1394,30},
                      {atom,{1394,23},compile},
                      {atom,{1394,31},file}},
                  [{var,{1394,36},'InFile'},
                   {block,0,
                       [{cons,
                            {1394,44},
                            {atom,{1394,45},'S'},
                            {cons,
                                {1394,49},
                                {tuple,
                                    {1394,49},
                                    [{atom,{1394,50},outdir},
                                     {var,{1394,57},'OutDir'}]},
                                {nil,{1394,64}}}}]}]}},
          {debug_line,1395,821},
          {match,
              {1395,5},
              {tuple,{1395,5},[{atom,{1395,6},ok},{var,{1395,9},'Listing'}]},
              {call,
                  {1395,20},
                  {remote,
                      {1395,24},
                      {atom,{1395,20},file},
                      {atom,{1395,25},read_file}},
                  [{var,{1395,35},'OutFile'}]}},
          {debug_line,1396,822},
          {match,
              {1396,5},
              {var,{1396,5},'Os'},
              {cons,
                  {1396,10},
                  {atom,{1396,11},global},
                  {cons,
                      {1396,18},
                      {atom,{1396,18},multiline},
                      {cons,
                          {1396,28},
                          {tuple,
                              {1396,28},
                              [{atom,{1396,29},capture},
                               {atom,{1396,37},all_but_first},
                               {atom,{1396,51},list}]},
                          {nil,{1396,56}}}}}},
          {debug_line,1397,823},
          {match,
              {1397,5},
              {tuple,
                  {1397,5},
                  [{atom,{1397,6},match},
                   {cons,{1397,12},{var,{1397,13},'_'},{nil,{1397,14}}}]},
              {call,
                  {1397,19},
                  {remote,{1397,21},{atom,{1397,19},re},{atom,{1397,22},run}},
                  [{var,{1397,26},'Listing'},
                   {block,0,
                       [{string,{1397,35},"({call,.+,{f,.+}}\\. % foo/1)"}]},
                   {var,{1397,68},'Os'}]}},
          {debug_line,1398,824},
          {match,
              {1398,5},
              {tuple,
                  {1398,5},
                  [{atom,{1398,6},match},
                   {cons,{1398,12},{var,{1398,13},'_'},{nil,{1398,14}}}]},
              {call,
                  {1398,19},
                  {remote,{1398,21},{atom,{1398,19},re},{atom,{1398,22},run}},
                  [{var,{1398,26},'Listing'},
                   {block,0,
                       [{string,
                            {1398,35},
                            "({call_only,.+,{f,.+}}\\. % foo/1)"}]},
                   {var,{1398,73},'Os'}]}},
          {debug_line,1399,825},
          {match,
              {1399,5},
              {tuple,
                  {1399,5},
                  [{atom,{1399,6},match},
                   {cons,{1399,12},{var,{1399,13},'_'},{nil,{1399,14}}}]},
              {call,
                  {1399,19},
                  {remote,{1399,21},{atom,{1399,19},re},{atom,{1399,22},run}},
                  [{var,{1399,26},'Listing'},
                   {block,0,
                       [{string,
                            {1399,35},
                            "({call_last,.+,{f,.+},.+}\\. % bar/1)"}]},
                   {var,{1399,76},'Os'}]}},
          {debug_line,1400,826},
          {match,
              {1400,5},
              {atom,{1400,5},ok},
              {call,
                  {1400,10},
                  {remote,
                      {1400,14},
                      {atom,{1400,10},file},
                      {atom,{1400,15},del_dir_r}},
                  [{var,{1400,25},'OutDir'}]}}]}]}.
{function,
 {1402,1},
 sys_pre_attributes,1,
 [{clause,
   {1402,1},
   [{var,{1402,1},'_'}],
   [[{call,
      {1402,1},
      {remote,{1402,1},{atom,{1402,1},fake},{atom,{1402,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1402,827},{atom,{1402,1},ignore}]},
  {clause,
   {1402,1},
   [{var,{1402,20},'Config'}],
   [],
   [{debug_line,1403,828},
    {match,
     {1403,5},
     {var,{1403,5},'DataDir'},
     {call,
      {1403,15},
      {remote,{1403,24},{atom,{1403,15},proplists},{atom,{1403,25},get_value}},
      [{atom,{1403,35},data_dir},{var,{1403,45},'Config'}]}},
    {debug_line,1404,829},
    {match,
     {1404,5},
     {var,{1404,5},'File'},
     {call,
      {1404,12},
      {remote,{1404,20},{atom,{1404,12},filename},{atom,{1404,21},join}},
      [{var,{1404,26},'DataDir'},
       {block,0,[{string,{1404,35},"attributes.erl"}]}]}},
    {debug_line,1405,830},
    {match,{1405,5},{var,{1405,5},'Mod'},{atom,{1405,11},attributes}},
    {debug_line,1406,831},
    {match,
     {1406,5},
     {var,{1406,5},'CommonOpts'},
     {cons,
      {1406,18},
      {atom,{1406,19},binary},
      {cons,
       {1406,26},
       {atom,{1406,26},report},
       {cons,
        {1406,33},
        {atom,{1406,33},verbose},
        {cons,
         {1407,5},
         {tuple,
          {1407,5},
          [{atom,{1407,6},parse_transform},
           {atom,{1407,22},sys_pre_attributes}]},
         {nil,{1407,41}}}}}}},
    {debug_line,1408,832},
    {match,
     {1408,5},
     {var,{1408,5},'PreOpts'},
     {cons,
      {1408,15},
      {tuple,
       {1408,16},
       [{atom,{1408,17},attribute},
        {atom,{1408,27},delete},
        {atom,{1408,34},deleted}]},
      {nil,{1408,42}}}},
    {debug_line,1409,833},
    {match,
     {1409,5},
     {var,{1409,5},'PostOpts'},
     {cons,
      {1409,16},
      {tuple,
       {1409,17},
       [{atom,{1409,18},attribute},
        {atom,{1409,28},insert},
        {atom,{1409,35},inserted},
        {string,{1409,44},"value"}]},
      {nil,{1409,52}}}},
    {debug_line,1410,834},
    {match,
     {1410,5},
     {var,{1410,5},'PrePostOpts'},
     {cons,
      {1410,19},
      {tuple,
       {1410,20},
       [{atom,{1410,21},attribute},
        {atom,{1410,31},replace},
        {atom,{1410,39},replaced},
        {integer,{1410,48},42}]},
      {cons,
       {1411,6},
       {tuple,
        {1411,6},
        [{atom,{1411,7},attribute},
         {atom,{1411,17},replace},
         {atom,{1411,25},replace_nonexisting},
         {atom,{1411,45},new}]},
       {nil,{1411,49}}}}},
    {debug_line,1412,835},
    {match,
     {1412,5},
     {tuple,
      {1412,5},
      [{atom,{1412,6},ok},{var,{1412,9},'Mod'},{var,{1412,13},'Code'}]},
     {call,
      {1412,21},
      {remote,{1412,28},{atom,{1412,21},compile},{atom,{1412,29},file}},
      [{var,{1412,34},'File'},
       {block,0,
        [{op,
          {1412,52},
          '++',
          {var,{1412,40},'PrePostOpts'},
          {op,
           {1412,63},
           '++',
           {var,{1412,55},'PreOpts'},
           {op,
            {1413,19},
            '++',
            {var,{1413,10},'PostOpts'},
            {var,{1413,22},'CommonOpts'}}}}]}]}},
    {debug_line,1414,836},
    {call,
     {1414,5},
     {remote,{1414,9},{atom,{1414,5},code},{atom,{1414,10},load_binary}},
     [{var,{1414,22},'Mod'},{var,{1414,27},'File'},{var,{1414,33},'Code'}]},
    {debug_line,1415,837},
    {match,
     {1415,5},
     {var,{1415,5},'Attr'},
     {call,
      {1415,12},
      {remote,{1415,15},{var,{1415,12},'Mod'},{atom,{1415,16},module_info}},
      [{atom,{1415,28},attributes}]}},
    {debug_line,1416,838},
    {call,
     {1416,5},
     {remote,{1416,7},{atom,{1416,5},io},{atom,{1416,8},format}},
     [{block,0,[{string,{1416,15},"~p"}]},
      {block,0,[{cons,{1416,21},{var,{1416,22},'Attr'},{nil,{1416,26}}}]}]},
    {debug_line,1417,839},
    {match,
     {1417,5},
     {tuple,{1417,5},[{atom,{1417,6},inserted},{string,{1417,15},"value"}]},
     {call,
      {1417,26},
      {remote,{1417,31},{atom,{1417,26},lists},{atom,{1417,32},keyfind}},
      [{atom,{1417,40},inserted},
       {integer,{1417,50},1},
       {var,{1417,53},'Attr'}]}},
    {debug_line,1418,840},
    {match,
     {1418,5},
     {tuple,
      {1418,5},
      [{atom,{1418,6},replaced},
       {cons,{1418,15},{integer,{1418,16},42},{nil,{1418,18}}}]},
     {call,
      {1418,23},
      {remote,{1418,28},{atom,{1418,23},lists},{atom,{1418,29},keyfind}},
      [{atom,{1418,37},replaced},
       {integer,{1418,47},1},
       {var,{1418,50},'Attr'}]}},
    {debug_line,1419,841},
    {match,
     {1419,5},
     {tuple,
      {1419,5},
      [{atom,{1419,6},replace_nonexisting},
       {cons,{1419,26},{atom,{1419,27},new},{nil,{1419,30}}}]},
     {call,
      {1419,35},
      {remote,{1419,40},{atom,{1419,35},lists},{atom,{1419,41},keyfind}},
      [{atom,{1419,49},replace_nonexisting},
       {integer,{1419,70},1},
       {var,{1419,73},'Attr'}]}},
    {debug_line,1420,842},
    {match,
     {1420,5},
     {atom,{1420,5},false},
     {call,
      {1420,13},
      {remote,{1420,18},{atom,{1420,13},lists},{atom,{1420,19},keymember}},
      [{atom,{1420,29},deleted},
       {integer,{1420,38},1},
       {var,{1420,41},'Attr'}]}},
    {debug_line,1423,843},
    {match,
     {1423,5},
     {tuple,
      {1423,5},
      [{atom,{1423,6},ok},{var,{1423,9},'Mod'},{var,{1423,13},'_'}]},
     {call,
      {1423,18},
      {remote,{1423,25},{atom,{1423,18},compile},{atom,{1423,26},file}},
      [{var,{1423,31},'File'},
       {block,0,
        [{op,
          {1423,46},
          '++',
          {var,{1423,37},'PostOpts'},
          {var,{1423,49},'CommonOpts'}}]}]}},
    {debug_line,1424,844},
    {match,
     {1424,5},
     {tuple,
      {1424,5},
      [{atom,{1424,6},ok},{var,{1424,9},'Mod'},{var,{1424,13},'_'}]},
     {call,
      {1424,18},
      {remote,{1424,25},{atom,{1424,18},compile},{atom,{1424,26},file}},
      [{var,{1424,31},'File'},
       {block,0,
        [{op,
          {1424,48},
          '--',
          {var,{1424,37},'CommonOpts'},
          {cons,{1424,51},{atom,{1424,52},verbose},{nil,{1424,59}}}}]}]}},
    {debug_line,1425,845},
    {match,
     {1425,5},
     {tuple,
      {1425,5},
      [{atom,{1425,6},ok},{var,{1425,9},'Mod'},{var,{1425,13},'_'}]},
     {call,
      {1425,18},
      {remote,{1425,25},{atom,{1425,18},compile},{atom,{1425,26},file}},
      [{var,{1425,31},'File'},
       {block,0,
        [{op,
          {1425,45},
          '++',
          {var,{1425,37},'PreOpts'},
          {var,{1425,48},'CommonOpts'}}]}]}},
    {debug_line,1426,846},
    {match,
     {1426,5},
     {tuple,
      {1426,5},
      [{atom,{1426,6},ok},{var,{1426,9},'Mod'},{var,{1426,13},'_'}]},
     {call,
      {1426,18},
      {remote,{1426,25},{atom,{1426,18},compile},{atom,{1426,26},file}},
      [{var,{1426,31},'File'},
       {block,0,
        [{debug_line,1427,847},
         {cons,
          {1427,10},
          {tuple,
           {1427,11},
           [{atom,{1427,12},attribute},
            {atom,{1427,22},replace},
            {atom,{1427,30},replaced},
            {integer,{1427,39},42}]},
          {var,{1427,43},'CommonOpts'}}]}]}},
    {debug_line,1428,848},
    {match,
     {1428,5},
     {tuple,
      {1428,5},
      [{atom,{1428,6},ok},{var,{1428,9},'Mod'},{var,{1428,13},'_'}]},
     {call,
      {1428,18},
      {remote,{1428,25},{atom,{1428,18},compile},{atom,{1428,26},file}},
      [{var,{1428,31},'File'},
       {block,0,
        [{op,
          {1428,49},
          '++',
          {var,{1428,37},'PrePostOpts'},
          {op,
           {1428,60},
           '++',
           {var,{1428,52},'PreOpts'},
           {op,
            {1429,16},
            '++',
            {var,{1429,7},'PostOpts'},
            {op,
             {1429,30},
             '--',
             {var,{1429,19},'CommonOpts'},
             {cons,
              {1430,7},
              {atom,{1430,8},report},
              {cons,
               {1430,15},
               {atom,{1430,15},verbose},
               {nil,{1430,22}}}}}}}}]}]}},
    {debug_line,1431,849},
    {atom,{1431,5},ok}]}]}.
{function,
    {1434,1},
    dialyzer,1,
    [{clause,
         {1434,1},
         [{var,{1434,1},'_'}],
         [[{call,
               {1434,1},
               {remote,
                   {1434,1},
                   {atom,{1434,1},fake},
                   {atom,{1434,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1434,850},{atom,{1434,1},ignore}]},
     {clause,
         {1434,1},
         [{var,{1434,10},'Config'}],
         [],
         [{debug_line,1435,851},
          {match,
              {1435,5},
              {var,{1435,5},'Priv'},
              {call,
                  {1435,12},
                  {remote,
                      {1435,21},
                      {atom,{1435,12},proplists},
                      {atom,{1435,22},get_value}},
                  [{atom,{1435,32},priv_dir},{var,{1435,42},'Config'}]}},
          {debug_line,1436,852},
          {match,
              {1436,5},
              {atom,{1436,5},ok},
              {call,
                  {1436,10},
                  {remote,
                      {1436,14},
                      {atom,{1436,10},file},
                      {atom,{1436,15},set_cwd}},
                  [{block,0,
                       [{call,
                            {1436,23},
                            {remote,
                                {1436,32},
                                {atom,{1436,23},proplists},
                                {atom,{1436,33},get_value}},
                            [{atom,{1436,43},data_dir},
                             {var,{1436,53},'Config'}]}]}]}},
          {debug_line,1437,853},
          {match,
              {1437,5},
              {var,{1437,5},'Opts'},
              {cons,
                  {1437,12},
                  {tuple,
                      {1437,13},
                      [{atom,{1437,14},outdir},{var,{1437,21},'Priv'}]},
                  {cons,
                      {1437,27},
                      {atom,{1437,27},report_errors},
                      {nil,{1437,40}}}}},
          {debug_line,1438,854},
          {match,{1438,5},{var,{1438,5},'M'},{atom,{1438,9},dialyzer_test}},
          {debug_line,1439,855},
          {match,
              {1439,5},
              {tuple,{1439,5},[{atom,{1439,6},ok},{var,{1439,9},'M'}]},
              {call,
                  {1439,14},
                  {remote,{1439,15},{atom,{1439,14},c},{atom,{1439,16},c}},
                  [{var,{1439,18},'M'},
                   {block,0,
                       [{cons,
                            {1439,21},
                            {atom,{1439,22},dialyzer},
                            {var,{1439,31},'Opts'}}]}]}},
          {debug_line,1440,856},
          {match,
              {1440,5},
              {cons,
                  {1440,5},
                  {tuple,
                      {1440,6},
                      [{atom,{1440,7},a},
                       {atom,{1440,9},b},
                       {atom,{1440,11},c}]},
                  {nil,{1440,13}}},
              {call,
                  {1440,17},
                  {remote,{1440,18},{var,{1440,17},'M'},{var,{1440,19},'M'}},
                  []}},
          {debug_line,1443,857},
          {match,
              {1443,5},
              {tuple,{1443,5},[{atom,{1443,6},ok},{var,{1443,9},'M'}]},
              {call,
                  {1443,14},
                  {remote,{1443,15},{atom,{1443,14},c},{atom,{1443,16},c}},
                  [{var,{1443,18},'M'},{var,{1443,21},'Opts'}]}},
          {debug_line,1444,858},
          {match,
              {1444,5},
              {cons,
                  {1444,5},
                  {tuple,
                      {1444,6},
                      [{atom,{1444,7},a},
                       {atom,{1444,9},b},
                       {atom,{1444,11},c}]},
                  {nil,{1444,13}}},
              {call,
                  {1444,17},
                  {remote,{1444,18},{var,{1444,17},'M'},{var,{1444,19},'M'}},
                  []}},
          {debug_line,1445,859},
          {atom,{1445,5},ok}]}]}.
{function,
    {1447,1},
    beam_ssa_pp_smoke_test,1,
    [{clause,
         {1447,1},
         [{var,{1447,1},'_'}],
         [[{call,
               {1447,1},
               {remote,
                   {1447,1},
                   {atom,{1447,1},fake},
                   {atom,{1447,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1447,860},{atom,{1447,1},ignore}]},
     {clause,
         {1447,1},
         [{var,{1447,24},'Config'}],
         [],
         [{debug_line,1448,861},
          {match,
              {1448,5},
              {var,{1448,5},'PrivDir'},
              {call,
                  {1448,15},
                  {remote,
                      {1448,24},
                      {atom,{1448,15},proplists},
                      {atom,{1448,25},get_value}},
                  [{atom,{1448,35},priv_dir},{var,{1448,45},'Config'}]}},
          {debug_line,1449,862},
          {match,
              {1449,5},
              {var,{1449,5},'Outdir'},
              {call,
                  {1449,14},
                  {remote,
                      {1449,22},
                      {atom,{1449,14},filename},
                      {atom,{1449,23},join}},
                  [{var,{1449,28},'PrivDir'},
                   {block,0,
                       [{call,
                            {1449,37},
                            {remote,
                                {1449,37},
                                {atom,{1449,37},erlang},
                                {atom,{1449,37},atom_to_list}},
                            [{atom,{1449,51},beam_ssa_pp_smoke_test}]}]}]}},
          {debug_line,1450,863},
          {match,
              {1450,5},
              {atom,{1450,5},ok},
              {call,
                  {1450,10},
                  {remote,
                      {1450,14},
                      {atom,{1450,10},file},
                      {atom,{1450,15},make_dir}},
                  [{var,{1450,24},'Outdir'}]}},
          {debug_line,1451,864},
          {match,
              {1451,5},
              {var,{1451,5},'TestBeams'},
              {call,{1451,17},{atom,{1451,17},get_unique_beam_files},[]}},
          {debug_line,1452,865},
          {call,
              {1452,5},
              {remote,
                  {1452,13},
                  {atom,{1452,5},test_lib},
                  {atom,{1452,14},p_run}},
              [{block,0,
                   [{'fun',
                        {1452,20},
                        {clauses,
                            [{clause,
                                 {1452,23},
                                 [{var,{1452,24},'F'}],
                                 [],
                                 [{call,
                                      {1452,30},
                                      {atom,{1452,30},beam_ssa_pp},
                                      [{var,{1452,42},'F'},
                                       {var,{1452,45},'Outdir'}]}]}]}}]},
               {var,{1452,58},'TestBeams'}]}]}]}.
{function,
 {1454,1},
 beam_ssa_pp,2,
 [{clause,
   {1454,1},
   [{var,{1454,1},'_'},{var,{1454,1},'_'}],
   [[{call,
      {1454,1},
      {remote,{1454,1},{atom,{1454,1},fake},{atom,{1454,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1454,866},{atom,{1454,1},ignore}]},
  {clause,
   {1454,1},
   [{var,{1454,13},'Beam'},{var,{1454,19},'Outdir'}],
   [],
   [{debug_line,1455,867},
    {'try',
     {1455,5},
     [{debug_line,1456,868},
      {match,
       {1456,2},
       {tuple,
        {1456,2},
        [{atom,{1456,3},ok},
         {tuple,
          {1456,6},
          [{var,{1456,7},'Mod'},
           {cons,
            {1456,11},
            {tuple,
             {1456,12},
             [{atom,{1456,13},abstract_code},
              {tuple,
               {1456,27},
               [{atom,{1456,28},raw_abstract_v1},{var,{1456,44},'Abstr'}]}]},
            {nil,{1456,51}}}]}]},
       {call,
        {1457,6},
        {remote,{1457,14},{atom,{1457,6},beam_lib},{atom,{1457,15},chunks}},
        [{var,{1457,22},'Beam'},
         {block,0,
          [{debug_line,1457,869},
           {cons,
            {1457,28},
            {atom,{1457,29},abstract_code},
            {nil,{1457,42}}}]}]}},
      {debug_line,1458,870},
      {call,
       {1458,2},
       {atom,{1458,2},beam_ssa_pp_1},
       [{var,{1458,16},'Mod'},
        {var,{1458,21},'Abstr'},
        {var,{1458,28},'Outdir'}]}],
     [],
     [{clause,
       {1460,2},
       [{tuple,
         {1460,2},
         [{atom,{1460,2},throw},
          {tuple,{1460,8},[{atom,{1460,9},error},{var,{1460,15},'Error'}]},
          {var,{1460,15},'_'}]}],
       [],
       [{debug_line,1461,871},
        {call,
         {1461,6},
         {remote,{1461,8},{atom,{1461,6},io},{atom,{1461,9},format}},
         [{block,0,
           [{string,{1461,16},"*** compilation failure '~p' for file ~s\n"}]},
          {block,0,
           [{debug_line,1462,872},
            {cons,
             {1462,9},
             {var,{1462,10},'Error'},
             {cons,{1462,16},{var,{1462,16},'Beam'},{nil,{1462,20}}}}]}]},
        {debug_line,1463,873},
        {atom,{1463,6},error}]},
      {clause,
       {1464,2},
       [{tuple,
         {1464,2},
         [{var,{1464,2},'Class'},
          {var,{1464,8},'Error'},
          {var,{1464,14},'Stk'}]}],
       [],
       [{debug_line,1465,874},
        {call,
         {1465,6},
         {remote,{1465,8},{atom,{1465,6},io},{atom,{1465,9},format}},
         [{block,0,[{string,{1465,16},"~p: ~p ~p\n~p\n"}]},
          {block,0,
           [{cons,
             {1465,35},
             {var,{1465,36},'Beam'},
             {cons,
              {1465,41},
              {var,{1465,41},'Class'},
              {cons,
               {1465,47},
               {var,{1465,47},'Error'},
               {cons,{1465,53},{var,{1465,53},'Stk'},{nil,{1465,56}}}}}}]}]},
        {debug_line,1466,875},
        {atom,{1466,6},error}]}],
     []}]}]}.
{function,
    {1469,1},
    beam_ssa_pp_1,3,
    [{clause,
         {1469,1},
         [{var,{1469,1},'_'},{var,{1469,1},'_'},{var,{1469,1},'_'}],
         [[{call,
               {1469,1},
               {remote,
                   {1469,1},
                   {atom,{1469,1},fake},
                   {atom,{1469,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1469,876},{atom,{1469,1},ignore}]},
     {clause,
         {1469,1},
         [{var,{1469,15},'Mod'},
          {var,{1469,20},'Abstr'},
          {var,{1469,27},'Outdir'}],
         [],
         [{debug_line,1470,877},
          {match,
              {1470,5},
              {var,{1470,5},'Opts'},
              {call,
                  {1470,12},
                  {remote,
                      {1470,20},
                      {atom,{1470,12},test_lib},
                      {atom,{1470,21},opt_opts}},
                  [{var,{1470,30},'Mod'}]}},
          {debug_line,1471,878},
          {match,
              {1471,5},
              {tuple,
                  {1471,5},
                  [{atom,{1471,6},ok},
                   {var,{1471,9},'Mod'},
                   {var,{1471,13},'SSA'}]},
              {call,
                  {1471,20},
                  {remote,
                      {1471,27},
                      {atom,{1471,20},compile},
                      {atom,{1471,28},forms}},
                  [{var,{1471,34},'Abstr'},
                   {block,0,
                       [{cons,
                            {1471,41},
                            {atom,{1471,42},dssaopt},
                            {var,{1471,50},'Opts'}}]}]}},
          {debug_line,1472,879},
          {match,
              {1472,5},
              {var,{1472,5},'ListFile'},
              {call,
                  {1472,16},
                  {remote,
                      {1472,24},
                      {atom,{1472,16},filename},
                      {atom,{1472,25},join}},
                  [{var,{1472,30},'Outdir'},
                   {block,0,
                       [{op,{1472,56},
                            '++',
                            {call,
                                {1472,38},
                                {remote,
                                    {1472,38},
                                    {atom,{1472,38},erlang},
                                    {atom,{1472,38},atom_to_list}},
                                [{var,{1472,51},'Mod'}]},
                            {string,{1472,59},".ssaopt"}}]}]}},
          {debug_line,1473,880},
          {match,
              {1473,5},
              {tuple,{1473,5},[{atom,{1473,6},ok},{var,{1473,9},'Fd'}]},
              {call,
                  {1473,15},
                  {remote,
                      {1473,19},
                      {atom,{1473,15},file},
                      {atom,{1473,20},open}},
                  [{var,{1473,25},'ListFile'},
                   {block,0,
                       [{cons,
                            {1473,35},
                            {atom,{1473,36},write},
                            {cons,
                                {1473,42},
                                {tuple,
                                    {1473,42},
                                    [{atom,{1473,43},encoding},
                                     {atom,{1473,52},utf8}]},
                                {nil,{1473,57}}}}]}]}},
          {debug_line,1474,881},
          {call,
              {1474,5},
              {remote,
                  {1474,17},
                  {atom,{1474,5},beam_listing},
                  {atom,{1474,18},module}},
              [{var,{1474,25},'Fd'},{var,{1474,29},'SSA'}]},
          {debug_line,1475,882},
          {match,
              {1475,5},
              {atom,{1475,5},ok},
              {call,
                  {1475,10},
                  {remote,
                      {1475,14},
                      {atom,{1475,10},file},
                      {atom,{1475,15},close}},
                  [{var,{1475,21},'Fd'}]}}]}]}.
{function,
    {1478,1},
    warnings,1,
    [{clause,
         {1478,1},
         [{var,{1478,1},'_'}],
         [[{call,
               {1478,1},
               {remote,
                   {1478,1},
                   {atom,{1478,1},fake},
                   {atom,{1478,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1478,883},{atom,{1478,1},ignore}]},
     {clause,
         {1478,1},
         [{var,{1478,10},'_Config'}],
         [],
         [{debug_line,1479,884},
          {match,
              {1479,5},
              {var,{1479,5},'Files'},
              {call,
                  {1479,13},
                  {remote,
                      {1479,21},
                      {atom,{1479,13},test_lib},
                      {atom,{1479,22},get_unique_files}},
                  [{block,0,[{string,{1479,39},".erl"}]}]}},
          {debug_line,1480,885},
          {call,
              {1480,5},
              {remote,
                  {1480,13},
                  {atom,{1480,5},test_lib},
                  {atom,{1480,14},p_run}},
              [{block,0,[{'fun',{1480,20},{function,do_warnings,1}}]},
               {var,{1480,39},'Files'}]}]}]}.
{function,
    {1482,1},
    do_warnings,1,
    [{clause,
         {1482,1},
         [{var,{1482,1},'_'}],
         [[{call,
               {1482,1},
               {remote,
                   {1482,1},
                   {atom,{1482,1},fake},
                   {atom,{1482,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1482,886},{atom,{1482,1},ignore}]},
     {clause,
         {1482,1},
         [{var,{1482,13},'F'}],
         [],
         [{debug_line,1483,887},
          {match,
              {1483,5},
              {var,{1483,5},'Options'},
              {cons,
                  {1483,15},
                  {tuple,
                      {1483,16},
                      [{atom,{1483,17},feature},
                       {atom,{1483,25},maybe_expr},
                       {atom,{1483,36},enable}]},
                  {cons,
                      {1483,44},
                      {atom,{1483,44},binary},
                      {cons,
                          {1483,51},
                          {atom,{1483,51},bin_opt_info},
                          {cons,
                              {1483,64},
                              {atom,{1483,64},recv_opt_info},
                              {cons,
                                  {1483,78},
                                  {atom,{1483,78},return},
                                  {nil,{1483,84}}}}}}}},
          {debug_line,1484,888},
          {match,
              {1484,5},
              {tuple,
                  {1484,5},
                  [{atom,{1484,6},ok},
                   {var,{1484,9},'_'},
                   {var,{1484,11},'_'},
                   {var,{1484,13},'Ws'}]},
              {call,
                  {1484,19},
                  {remote,
                      {1484,26},
                      {atom,{1484,19},compile},
                      {atom,{1484,27},file}},
                  [{var,{1484,32},'F'},{var,{1484,35},'Options'}]}},
          {debug_line,1485,889},
          {call,
              {1485,5},
              {atom,{1485,5},do_warnings_1},
              [{var,{1485,19},'Ws'},{var,{1485,23},'F'}]}]}]}.
{function,
    {1487,1},
    do_warnings_1,2,
    [{clause,
         {1487,1},
         [{var,{1487,1},'_'},{var,{1487,1},'_'}],
         [[{call,
               {1487,1},
               {remote,
                   {1487,1},
                   {atom,{1487,1},fake},
                   {atom,{1487,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1487,890},{atom,{1487,1},ignore}]},
     {clause,
         {1487,1},
         [{cons,
              {1487,15},
              {tuple,
                  {1487,16},
                  [{string,{1487,17},"no_file"},{var,{1487,27},'Ws'}]},
              {var,{1487,31},'_'}},
          {var,{1487,35},'F'}],
         [],
         [{debug_line,1488,891},
          {call,
              {1488,5},
              {remote,{1488,7},{atom,{1488,5},io},{atom,{1488,8},format}},
              [{block,0,
                   [{string,
                        {1488,15},
                        "~s:\nMissing file for warnings: ~p\n"}]},
               {block,0,
                   [{debug_line,1489,892},
                    {cons,
                        {1489,8},
                        {var,{1489,9},'F'},
                        {cons,
                            {1489,11},
                            {var,{1489,11},'Ws'},
                            {nil,{1489,13}}}}]}]},
          {debug_line,1490,893},
          {atom,{1490,5},error}]},
     {clause,
         {1491,1},
         [{cons,
              {1491,15},
              {tuple,{1491,16},[{var,{1491,17},'Name'},{var,{1491,22},'Ws'}]},
              {var,{1491,26},'T'}},
          {var,{1491,30},'F'}],
         [],
         [{debug_line,1492,894},
          {'case',
              {1492,5},
              {call,
                  {1492,10},
                  {remote,
                      {1492,18},
                      {atom,{1492,10},filename},
                      {atom,{1492,19},extension}},
                  [{var,{1492,29},'Name'}]},
              [{clause,
                   {1493,2},
                   [{string,{1493,2},".erl"}],
                   [],
                   [{debug_line,1494,895},
                    {call,
                        {1494,6},
                        {atom,{1494,6},do_warnings_2},
                        [{var,{1494,20},'Ws'},
                         {var,{1494,24},'T'},
                         {var,{1494,27},'F'}]}]},
               {clause,
                   {1495,2},
                   [{var,{1495,2},'_'}],
                   [],
                   [{debug_line,1496,896},
                    {call,
                        {1496,6},
                        {remote,
                            {1496,8},
                            {atom,{1496,6},io},
                            {atom,{1496,9},format}},
                        [{block,0,
                             [{string,{1496,16},"~s:\nNo .erl extension\n"}]},
                         {block,0,
                             [{cons,
                                  {1496,44},
                                  {var,{1496,45},'F'},
                                  {nil,{1496,46}}}]}]},
                    {debug_line,1497,897},
                    {atom,{1497,6},error}]}]}]},
     {clause,
         {1499,1},
         [{nil,{1499,15}},{var,{1499,19},'_'}],
         [],
         [{debug_line,1499,898},{atom,{1499,25},ok}]}]}.
{function,
    {1501,1},
    do_warnings_2,3,
    [{clause,
         {1501,1},
         [{var,{1501,1},'_'},{var,{1501,1},'_'},{var,{1501,1},'_'}],
         [[{call,
               {1501,1},
               {remote,
                   {1501,1},
                   {atom,{1501,1},fake},
                   {atom,{1501,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1501,899},{atom,{1501,1},ignore}]},
     {clause,
         {1501,1},
         [{cons,
              {1501,15},
              {match,
                  {1501,16},
                  {tuple,
                      {1501,16},
                      [{var,{1501,17},'Pos'},
                       {var,{1501,21},'_'},
                       {var,{1501,23},'_'}]},
                  {var,{1501,26},'W'}},
              {var,{1501,28},'T'}},
          {var,{1501,32},'Next'},
          {var,{1501,38},'F'}],
         [],
         [{debug_line,1502,900},
          {'case',
              {1502,5},
              {var,{1502,10},'Pos'},
              [{clause,
                   {1503,2},
                   [{var,{1503,2},'Line'}],
                   [[{call,
                         {1503,12},
                         {remote,
                             {1503,12},
                             {atom,{1503,12},erlang},
                             {atom,{1503,12},is_integer}},
                         [{var,{1503,23},'Line'}]}]],
                   [{debug_line,1504,901},
                    {call,
                        {1504,6},
                        {atom,{1504,6},do_warnings_2},
                        [{var,{1504,20},'T'},
                         {var,{1504,23},'Next'},
                         {var,{1504,29},'F'}]}]},
               {clause,
                   {1505,2},
                   [{tuple,
                        {1505,2},
                        [{var,{1505,3},'Line'},{var,{1505,8},'Col'}]}],
                   [[{call,
                         {1505,18},
                         {remote,
                             {1505,18},
                             {atom,{1505,18},erlang},
                             {atom,{1505,18},is_integer}},
                         [{var,{1505,29},'Line'}]},
                     {call,
                         {1505,36},
                         {remote,
                             {1505,36},
                             {atom,{1505,36},erlang},
                             {atom,{1505,36},is_integer}},
                         [{var,{1505,47},'Col'}]}]],
                   [{debug_line,1506,902},
                    {call,
                        {1506,6},
                        {atom,{1506,6},do_warnings_2},
                        [{var,{1506,20},'T'},
                         {var,{1506,23},'Next'},
                         {var,{1506,29},'F'}]}]},
               {clause,
                   {1507,2},
                   [{atom,{1507,2},true}],
                   [],
                   [{debug_line,1508,903},
                    {call,
                        {1508,6},
                        {remote,
                            {1508,8},
                            {atom,{1508,6},io},
                            {atom,{1508,9},format}},
                        [{block,0,
                             [{string,
                                  {1508,16},
                                  "~s:\nMissing line number: ~p\n"}]},
                         {block,0,
                             [{debug_line,1509,904},
                              {cons,
                                  {1509,9},
                                  {var,{1509,10},'F'},
                                  {cons,
                                      {1509,12},
                                      {var,{1509,12},'W'},
                                      {nil,{1509,13}}}}]}]},
                    {debug_line,1510,905},
                    {atom,{1510,6},error}]}]}]},
     {clause,
         {1512,1},
         [{nil,{1512,15}},{var,{1512,19},'Next'},{var,{1512,25},'F'}],
         [],
         [{debug_line,1513,906},
          {call,
              {1513,5},
              {atom,{1513,5},do_warnings_1},
              [{var,{1513,19},'Next'},{var,{1513,25},'F'}]}]}]}.
{function,
    {1515,1},
    message_printing,1,
    [{clause,
         {1515,1},
         [{var,{1515,1},'_'}],
         [[{call,
               {1515,1},
               {remote,
                   {1515,1},
                   {atom,{1515,1},fake},
                   {atom,{1515,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1515,907},{atom,{1515,1},ignore}]},
     {clause,
         {1515,1},
         [{var,{1515,18},'Config'}],
         [],
         [{debug_line,1516,908},
          {match,
              {1516,5},
              {var,{1516,5},'DataDir'},
              {call,
                  {1516,15},
                  {remote,
                      {1516,24},
                      {atom,{1516,15},proplists},
                      {atom,{1516,25},get_value}},
                  [{atom,{1516,35},data_dir},{var,{1516,45},'Config'}]}},
          {debug_line,1517,909},
          {match,
              {1517,5},
              {var,{1517,5},'PrivDir'},
              {call,
                  {1517,15},
                  {remote,
                      {1517,24},
                      {atom,{1517,15},proplists},
                      {atom,{1517,25},get_value}},
                  [{atom,{1517,35},priv_dir},{var,{1517,45},'Config'}]}},
          {debug_line,1519,910},
          {match,
              {1519,5},
              {var,{1519,5},'BadEncFile'},
              {call,
                  {1519,18},
                  {remote,
                      {1519,26},
                      {atom,{1519,18},filename},
                      {atom,{1519,27},join}},
                  [{var,{1519,32},'DataDir'},
                   {block,0,[{string,{1519,41},"bad_enc.erl"}]}]}},
          {debug_line,1520,911},
          {match,
              {1520,5},
              {tuple,
                  {1520,5},
                  [{atom,{1520,6},error},
                   {var,{1520,12},'BadEncErrors'},
                   {nil,{1520,26}}]},
              {call,
                  {1520,32},
                  {remote,
                      {1520,39},
                      {atom,{1520,32},compile},
                      {atom,{1520,40},file}},
                  [{var,{1520,45},'BadEncFile'},
                   {block,0,
                       [{cons,
                            {1520,57},
                            {atom,{1520,58},return},
                            {nil,{1520,64}}}]}]}},
          {debug_line,1522,912},
          {match,
              {1522,5},
              {cons,
                  {1522,5},
                  {string,
                      {1522,6},
                      ":7:15: cannot parse file, giving up\n%    7| \t    {ok, \"xyz\n%     | \t             ^\n\n"},
                  {cons,
                      {1526,6},
                      {string,
                          {1526,6},
                          ":7:15: cannot translate from UTF-8\n%    7| \t    {ok, \"xyz\n%     | \t             ^\n\n"},
                      {nil,{1529,5}}}},
              {call,
                  {1529,9},
                  {atom,{1529,9},messages},
                  [{var,{1529,18},'BadEncErrors'}]}},
          {debug_line,1531,913},
          {match,
              {1531,5},
              {var,{1531,5},'UTF8File'},
              {call,
                  {1531,16},
                  {remote,
                      {1531,24},
                      {atom,{1531,16},filename},
                      {atom,{1531,25},join}},
                  [{var,{1531,30},'DataDir'},
                   {block,0,[{string,{1531,39},"col_utf8.erl"}]}]}},
          {debug_line,1532,914},
          {match,
              {1532,5},
              {tuple,
                  {1532,5},
                  [{atom,{1532,6},ok},
                   {var,{1532,9},'_'},
                   {var,{1532,11},'UTF8Errors'}]},
              {call,
                  {1532,25},
                  {remote,
                      {1532,32},
                      {atom,{1532,25},compile},
                      {atom,{1532,33},file}},
                  [{var,{1532,38},'UTF8File'},
                   {block,0,
                       [{cons,
                            {1532,48},
                            {atom,{1532,49},return},
                            {nil,{1532,55}}}]}]}},
          {debug_line,1533,915},
          {match,
              {1533,5},
              {cons,
                  {1533,5},
                  {string,
                      {1533,6},
                      ":5:23: a term is constructed, but never used\n%    5|     B = <<\"xyzåäö\">>,\t<<\"12345\">>,\n%     |                      \t^\n\n"},
                  {nil,{1536,5}}},
              {call,
                  {1536,9},
                  {atom,{1536,9},messages},
                  [{var,{1536,18},'UTF8Errors'}]}},
          {debug_line,1538,916},
          {match,
              {1538,5},
              {var,{1538,5},'Latin1File'},
              {call,
                  {1538,18},
                  {remote,
                      {1538,26},
                      {atom,{1538,18},filename},
                      {atom,{1538,27},join}},
                  [{var,{1538,32},'DataDir'},
                   {block,0,[{string,{1538,41},"col_lat1.erl"}]}]}},
          {debug_line,1539,917},
          {match,
              {1539,5},
              {tuple,
                  {1539,5},
                  [{atom,{1539,6},ok},
                   {var,{1539,9},'_'},
                   {var,{1539,11},'Latin1Errors'}]},
              {call,
                  {1539,27},
                  {remote,
                      {1539,34},
                      {atom,{1539,27},compile},
                      {atom,{1539,35},file}},
                  [{var,{1539,40},'Latin1File'},
                   {block,0,
                       [{cons,
                            {1539,52},
                            {atom,{1539,53},return},
                            {nil,{1539,59}}}]}]}},
          {debug_line,1540,918},
          {match,
              {1540,5},
              {cons,
                  {1540,5},
                  {string,
                      {1540,6},
                      ":6:23: a term is constructed, but never used\n%    6|     B = <<\"xyzåäö\">>,\t<<\"12345\">>,\n%     |                      \t^\n\n"},
                  {nil,{1543,5}}},
              {call,
                  {1543,9},
                  {atom,{1543,9},messages},
                  [{var,{1543,18},'Latin1Errors'}]}},
          {debug_line,1545,919},
          {match,
              {1545,5},
              {var,{1545,5},'LongFile'},
              {call,
                  {1545,16},
                  {remote,
                      {1545,24},
                      {atom,{1545,16},filename},
                      {atom,{1545,25},join}},
                  [{var,{1545,30},'PrivDir'},
                   {block,0,[{string,{1545,39},"long.erl"}]}]}},
          {debug_line,1546,920},
          {match,
              {1546,5},
              {var,{1546,5},'Long'},
              {cons,
                  {1546,12},
                  {string,{1546,13},"-module(long).\n"},
                  {cons,
                      {1547,13},
                      {string,{1547,13},"-export([foo/0]).\n"},
                      {cons,
                          {1548,13},
                          {string,{1548,13},"unused() -> ok.\n"},
                          {cons,
                              {1549,13},
                              {call,
                                  {1549,13},
                                  {remote,
                                      {1549,18},
                                      {atom,{1549,13},lists},
                                      {atom,{1549,19},duplicate}},
                                  [{integer,{1549,29},10000},
                                   {block,0,
                                       [{debug_line,1549,921},
                                        {char,{1549,36},10}]}]},
                              {cons,
                                  {1550,13},
                                  {string,{1550,13},"foo() -> bar().\n"},
                                  {nil,{1550,32}}}}}}}},
          {debug_line,1551,922},
          {match,
              {1551,5},
              {atom,{1551,5},ok},
              {call,
                  {1551,10},
                  {remote,
                      {1551,14},
                      {atom,{1551,10},file},
                      {atom,{1551,15},write_file}},
                  [{var,{1551,26},'LongFile'},{var,{1551,36},'Long'}]}},
          {debug_line,1552,923},
          {match,
              {1552,5},
              {tuple,
                  {1552,5},
                  [{atom,{1552,6},error},
                   {var,{1552,12},'LongErrors'},
                   {var,{1552,23},'LongWarnings'}]},
              {call,
                  {1552,39},
                  {remote,
                      {1552,46},
                      {atom,{1552,39},compile},
                      {atom,{1552,47},file}},
                  [{var,{1552,52},'LongFile'},
                   {block,0,
                       [{cons,
                            {1552,62},
                            {atom,{1552,63},return},
                            {nil,{1552,69}}}]}]}},
          {debug_line,1553,924},
          {match,
              {1553,5},
              {cons,
                  {1553,5},
                  {string,
                      {1553,6},
                      ":10004:10: function bar/0 undefined\n% 10004| foo() -> bar().\n%      |          ^\n\n"},
                  {nil,{1556,5}}},
              {call,
                  {1556,9},
                  {atom,{1556,9},messages},
                  [{var,{1556,18},'LongErrors'}]}},
          {debug_line,1557,925},
          {match,
              {1557,5},
              {cons,
                  {1557,5},
                  {string,
                      {1557,6},
                      ":3:1: function unused/0 is unused\n%    3| unused() -> ok.\n%     | ^\n\n"},
                  {nil,{1560,5}}},
              {call,
                  {1560,9},
                  {atom,{1560,9},messages},
                  [{var,{1560,18},'LongWarnings'}]}},
          {debug_line,1561,926},
          {match,
              {1561,5},
              {atom,{1561,5},ok},
              {call,
                  {1561,10},
                  {remote,
                      {1561,14},
                      {atom,{1561,10},file},
                      {atom,{1561,15},delete}},
                  [{var,{1561,22},'LongFile'}]}},
          {debug_line,1563,927},
          {match,
              {1563,5},
              {tuple,{1563,5},[{atom,{1563,6},ok},{var,{1563,9},'OldCwd'}]},
              {call,
                  {1563,19},
                  {remote,
                      {1563,23},
                      {atom,{1563,19},file},
                      {atom,{1563,24},get_cwd}},
                  []}},
          {debug_line,1564,928},
          {'try',
              {1564,5},
              [{debug_line,1565,929},
               {match,
                   {1565,9},
                   {atom,{1565,9},ok},
                   {call,
                       {1565,14},
                       {remote,
                           {1565,18},
                           {atom,{1565,14},file},
                           {atom,{1565,19},set_cwd}},
                       [{var,{1565,27},'DataDir'}]}},
               {debug_line,1566,930},
               {match,
                   {1566,9},
                   {tuple,
                       {1566,9},
                       [{atom,{1566,10},ok},
                        {atom,{1566,13},cover_messages},
                        {var,{1566,28},'_'}]},
                   {call,
                       {1566,33},
                       {remote,
                           {1566,40},
                           {atom,{1566,33},compile},
                           {atom,{1566,41},file}},
                       [{atom,{1566,46},cover_messages},
                        {block,0,
                            [{cons,
                                 {1566,62},
                                 {atom,{1566,63},report},
                                 {cons,
                                     {1566,71},
                                     {atom,{1566,71},binary},
                                     {nil,{1566,77}}}}]}]}}],
              [],[],
              [{debug_line,1568,931},
               {call,
                   {1568,9},
                   {remote,
                       {1568,13},
                       {atom,{1568,9},file},
                       {atom,{1568,14},set_cwd}},
                   [{var,{1568,22},'OldCwd'}]}]},
          {debug_line,1571,932},
          {atom,{1571,5},ok}]}]}.
{function,
 {1573,1},
 messages,1,
 [{clause,
   {1573,1},
   [{var,{1573,1},'_'}],
   [[{call,
      {1573,1},
      {remote,{1573,1},{atom,{1573,1},fake},{atom,{1573,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1573,933},{atom,{1573,1},ignore}]},
  {clause,
   {1573,1},
   [{var,{1573,10},'Errors'}],
   [],
   [{debug_line,1574,934},
    {call,
     {1574,5},
     {remote,{1574,10},{atom,{1574,5},lists},{atom,{1574,11},flatmap}},
     [{block,0,
       [{'fun',
         {1574,19},
         {clauses,
          [{clause,
            {1574,23},
            [{tuple,
              {1574,24},
              [{tuple,{1574,25},[{var,{1574,26},'File'},{var,{1574,31},'_L'}]},
               {var,{1574,35},'Descs'}]}],
            [],
            [{call,
              {1574,46},
              {atom,{1574,46},format_descs},
              [{var,{1574,59},'File'},{var,{1574,65},'Descs'}]}]},
           {clause,
            {1575,23},
            [{tuple,
              {1575,24},
              [{var,{1575,25},'File'},{var,{1575,30},'Descs'}]}],
            [],
            [{debug_line,1575,935},
             {call,
              {1575,41},
              {atom,{1575,41},format_descs},
              [{var,{1575,54},'File'},{var,{1575,60},'Descs'}]}]}]}}]},
      {var,{1577,19},'Errors'}]}]}]}.
{function,
    {1579,1},
    format_descs,2,
    [{clause,
         {1579,1},
         [{var,{1579,1},'_'},{var,{1579,1},'_'}],
         [[{call,
               {1579,1},
               {remote,
                   {1579,1},
                   {atom,{1579,1},fake},
                   {atom,{1579,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1579,936},{atom,{1579,1},ignore}]},
     {clause,
         {1579,1},
         [{var,{1579,14},'File'},{var,{1579,20},'Descs'}],
         [],
         [{debug_line,1580,937},
          {lc,{1580,5},
              {block,0,
                  [{call,
                       {1580,6},
                       {atom,{1580,6},strip_prefix},
                       [{var,{1580,19},'File'},
                        {block,0,
                            [{call,
                                 {1580,25},
                                 {remote,
                                     {1580,30},
                                     {atom,{1580,25},lists},
                                     {atom,{1580,31},flatten}},
                                 [{var,{1580,39},'Text'}]}]}]}]},
              [{generate,
                   {1581,24},
                   {tuple,
                       {1581,9},
                       [{var,{1581,10},'_Where'},{var,{1581,18},'Text'}]},
                   {call,
                       {1581,27},
                       {remote,
                           {1581,39},
                           {atom,{1581,27},sys_messages},
                           {atom,{1581,40},format_messages}},
                       [{var,{1581,56},'File'},
                        {block,0,
                            [{debug_line,1581,938},{string,{1581,62},[]}]},
                        {var,{1581,66},'Descs'},
                        {nil,{1581,73}}]}}]}]}]}.
{function,
    {1583,1},
    strip_prefix,2,
    [{clause,
         {1583,1},
         [{var,{1583,1},'_'},{var,{1583,1},'_'}],
         [[{call,
               {1583,1},
               {remote,
                   {1583,1},
                   {atom,{1583,1},fake},
                   {atom,{1583,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1583,939},{atom,{1583,1},ignore}]},
     {clause,
         {1583,1},
         [{var,{1583,14},'Prefix'},{var,{1583,22},'String'}],
         [],
         [{debug_line,1584,940},
          {'case',
              {1584,5},
              {call,
                  {1584,10},
                  {remote,
                      {1584,16},
                      {atom,{1584,10},string},
                      {atom,{1584,17},prefix}},
                  [{var,{1584,24},'String'},{var,{1584,32},'Prefix'}]},
              [{clause,
                   {1585,9},
                   [{atom,{1585,9},nomatch}],
                   [],
                   [{debug_line,1585,941},{var,{1585,20},'String'}]},
               {clause,
                   {1586,9},
                   [{var,{1586,9},'Rest'}],
                   [],
                   [{debug_line,1586,942},{var,{1586,17},'Rest'}]}]}]}]}.
{function,
    {1592,1},
    pre_load_check,1,
    [{clause,
         {1592,1},
         [{var,{1592,1},'_'}],
         [[{call,
               {1592,1},
               {remote,
                   {1592,1},
                   {atom,{1592,1},fake},
                   {atom,{1592,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1592,943},{atom,{1592,1},ignore}]},
     {clause,
         {1592,1},
         [{var,{1592,16},'Config'}],
         [],
         [{debug_line,1593,944},
          {'case',
              {1593,5},
              {call,
                  {1593,10},
                  {remote,
                      {1593,21},
                      {atom,{1593,10},test_server},
                      {atom,{1593,22},is_cover}},
                  []},
              [{clause,
                   {1594,9},
                   [{atom,{1594,9},true}],
                   [],
                   [{debug_line,1595,945},
                    {tuple,
                        {1595,13},
                        [{atom,{1595,14},skip},
                         {string,{1595,19},"Cover is running"}]}]},
               {clause,
                   {1596,9},
                   [{atom,{1596,9},false}],
                   [],
                   [{debug_line,1597,946},
                    {'try',
                        {1597,13},
                        [{debug_line,1598,947},
                         {call,
                             {1598,17},
                             {atom,{1598,17},do_pre_load_check},
                             [{var,{1598,35},'Config'}]}],
                        [],[],
                        [{debug_line,1600,948},
                         {call,
                             {1600,17},
                             {remote,
                                 {1600,20},
                                 {atom,{1600,17},dbg},
                                 {atom,{1600,21},stop}},
                             []}]}]}]}]}]}.
{function,
    {1604,1},
    do_pre_load_check,1,
    [{clause,
         {1604,1},
         [{var,{1604,1},'_'}],
         [[{call,
               {1604,1},
               {remote,
                   {1604,1},
                   {atom,{1604,1},fake},
                   {atom,{1604,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1604,949},{atom,{1604,1},ignore}]},
     {clause,
         {1604,1},
         [{var,{1604,19},'Config'}],
         [],
         [{debug_line,1605,950},
          {match,
              {1605,5},
              {var,{1605,5},'DataDir'},
              {call,
                  {1605,16},
                  {remote,
                      {1605,16},
                      {atom,{1605,16},test_server},
                      {atom,{1605,16},lookup_config}},
                  [{atom,{1605,23},data_dir},{var,{1605,33},'Config'}]}},
          {debug_line,1606,951},
          {match,
              {1606,5},
              {var,{1606,5},'Simple'},
              {call,
                  {1606,14},
                  {remote,
                      {1606,22},
                      {atom,{1606,14},filename},
                      {atom,{1606,23},join}},
                  [{var,{1606,28},'DataDir'},
                   {block,0,[{string,{1606,37},"simple.erl"}]}]}},
          {debug_line,1607,952},
          {match,
              {1607,5},
              {var,{1607,5},'Big'},
              {call,
                  {1607,11},
                  {remote,
                      {1607,19},
                      {atom,{1607,11},filename},
                      {atom,{1607,20},join}},
                  [{var,{1607,25},'DataDir'},
                   {block,0,[{string,{1607,34},"big.erl"}]}]}},
          {debug_line,1608,953},
          {match,
              {1608,5},
              {tuple,{1608,5},[{atom,{1608,6},ok},{var,{1608,9},'_'}]},
              {call,
                  {1608,14},
                  {remote,
                      {1608,17},
                      {atom,{1608,14},dbg},
                      {atom,{1608,18},tracer}},
                  [{atom,{1608,25},process},
                   {block,0,
                       [{tuple,
                            {1608,34},
                            [{'fun',{1608,35},{function,pre_load_trace,2}},
                             {nil,{1608,56}}]}]}]}},
          {debug_line,1609,954},
          {call,
              {1609,5},
              {remote,{1609,8},{atom,{1609,5},dbg},{atom,{1609,9},p}},
              [{block,0,
                   [{call,
                        {1609,11},
                        {remote,
                            {1609,11},
                            {atom,{1609,11},erlang},
                            {atom,{1609,11},self}},
                        []}]},
               {atom,{1609,19},call}]},
          {debug_line,1610,955},
          {call,
              {1610,5},
              {remote,{1610,8},{atom,{1610,5},dbg},{atom,{1610,9},p}},
              [{atom,{1610,11},new},{atom,{1610,16},call}]},
          {debug_line,1611,956},
          {match,
              {1611,5},
              {tuple,{1611,5},[{atom,{1611,6},ok},{var,{1611,9},'_'}]},
              {call,
                  {1611,14},
                  {remote,{1611,17},{atom,{1611,14},dbg},{atom,{1611,18},tpl}},
                  [{block,0,
                       [{tuple,
                            {1611,22},
                            [{atom,{1611,24},compile_SUITE},
                             {atom,{1611,31},get_trace_data},
                             {integer,{1611,46},0}]}]},
                   {nil,{1611,50}}]}},
          {debug_line,1612,957},
          {match,
              {1612,5},
              {tuple,{1612,5},[{atom,{1612,6},ok},{var,{1612,9},'_'}]},
              {call,
                  {1612,14},
                  {remote,{1612,17},{atom,{1612,14},dbg},{atom,{1612,18},tp}},
                  [{block,0,
                       [{tuple,
                            {1612,21},
                            [{atom,{1612,22},code},
                             {atom,{1612,27},ensure_modules_loaded},
                             {integer,{1612,49},1}]}]},
                   {nil,{1612,53}}]}},
          {debug_line,1617,958},
          {match,
              {1617,5},
              {var,{1617,5},'Opts'},
              {tuple,
                  {1617,12},
                  [{atom,{1617,12},options},
                   {nil,{1617,12}},
                   {string,{1617,12},"."},
                   {atom,{1617,12},undefined},
                   {nil,{1617,12}},
                   {integer,{1617,12},1},
                   {atom,{1617,12},false},
                   {integer,{1617,12},999},
                   {cons,{1617,30},{atom,{1617,31},binary},{nil,{1617,37}}},
                   {string,{1617,12},[]},
                   {atom,{1617,12},undefined}]}},
          {debug_line,1618,959},
          {match,
              {1618,5},
              {tuple,
                  {1618,5},
                  [{atom,{1618,6},ok},
                   {atom,{1618,9},simple},
                   {var,{1618,16},'_'}]},
              {call,
                  {1618,21},
                  {remote,
                      {1618,28},
                      {atom,{1618,21},compile},
                      {atom,{1618,29},compile}},
                  [{var,{1618,37},'Simple'},
                   {block,0,[{string,{1618,45},[]}]},
                   {var,{1618,49},'Opts'}]}},
          {debug_line,1619,960},
          {match,
              {1619,5},
              {cons,
                  {1619,5},
                  {tuple,
                      {1619,6},
                      [{atom,{1619,7},code},
                       {atom,{1619,12},ensure_modules_loaded},
                       {cons,
                           {1619,34},
                           {var,{1619,35},'PreLoaded0'},
                           {nil,{1619,45}}}]},
                  {nil,{1619,47}}},
              {call,{1619,51},{atom,{1619,51},get_trace_data},[]}},
          {debug_line,1620,961},
          {match,
              {1620,5},
              {var,{1620,5},'PreLoaded1'},
              {call,
                  {1620,18},
                  {remote,
                      {1620,25},
                      {atom,{1620,18},ordsets},
                      {atom,{1620,26},from_list}},
                  [{var,{1620,36},'PreLoaded0'}]}},
          {debug_line,1624,962},
          {'case',
              {1624,5},
              {call,
                  {1624,10},
                  {remote,
                      {1624,17},
                      {atom,{1624,10},ordsets},
                      {atom,{1624,18},is_element}},
                  [{atom,{1624,29},compile},{var,{1624,38},'PreLoaded1'}]},
              [{clause,
                   {1625,2},
                   [{atom,{1625,2},true}],
                   [],
                   [{debug_line,1626,963},
                    {call,
                        {1626,6},
                        {remote,
                            {1626,8},
                            {atom,{1626,6},io},
                            {atom,{1626,9},put_chars}},
                        [{block,0,
                             [{string,
                                  {1626,19},
                                  "The 'compile' module should not be included in the list of modules to be pre-loaded."}]}]},
                    {debug_line,1628,964},
                    {call,
                        {1628,6},
                        {remote,
                            {1628,8},
                            {atom,{1628,6},ct},
                            {atom,{1628,9},fail}},
                        [{atom,{1628,14},compile}]}]},
               {clause,
                   {1629,2},
                   [{atom,{1629,2},false}],
                   [],
                   [{debug_line,1630,965},{nil,{1630,6}}]}]},
          {debug_line,1632,966},
          {match,
              {1632,5},
              {var,{1632,5},'PreLoaded'},
              {call,
                  {1632,17},
                  {remote,
                      {1632,24},
                      {atom,{1632,17},ordsets},
                      {atom,{1632,25},add_element}},
                  [{atom,{1632,37},compile},{var,{1632,46},'PreLoaded1'}]}},
          {debug_line,1637,967},
          {match,
              {1637,5},
              {var,{1637,5},'CompilerMods'},
              {call,{1637,20},{atom,{1637,20},compiler_modules},[]}},
          {debug_line,1638,968},
          {match,
              {1638,5},
              {var,{1638,5},'Unload'},
              {call,
                  {1638,14},
                  {remote,
                      {1638,21},
                      {atom,{1638,14},ordsets},
                      {atom,{1638,22},union}},
                  [{block,0,
                       [{call,
                            {1638,28},
                            {remote,
                                {1638,35},
                                {atom,{1638,28},ordsets},
                                {atom,{1638,36},from_list}},
                            [{var,{1638,46},'CompilerMods'}]}]},
                   {var,{1638,61},'PreLoaded'}]}},
          {debug_line,1639,969},
          {match,
              {1639,5},
              {var,{1639,5},'_'},
              {lc,{1639,9},
                  {block,
                      {1639,10},
                      [{debug_line,1640,970},
                       {call,
                           {1640,7},
                           {remote,
                               {1640,11},
                               {atom,{1640,7},code},
                               {atom,{1640,12},delete}},
                           [{var,{1640,19},'M'}]},
                       {debug_line,1641,971},
                       {call,
                           {1641,7},
                           {remote,
                               {1641,11},
                               {atom,{1641,7},code},
                               {atom,{1641,12},purge}},
                           [{var,{1641,18},'M'}]}]},
                  [{block,0,[{debug_line,1642,972},{atom,{1642,15},true}]},
                   {generate,
                       {1642,12},
                       {var,{1642,10},'M'},
                       {var,{1642,15},'Unload'}}]}},
          {debug_line,1644,973},
          {match,
              {1644,5},
              {tuple,{1644,5},[{atom,{1644,6},ok},{var,{1644,9},'_'}]},
              {call,
                  {1644,14},
                  {remote,{1644,17},{atom,{1644,14},dbg},{atom,{1644,18},ctp}},
                  [{block,0,
                       [{tuple,
                            {1644,22},
                            [{atom,{1644,23},code},
                             {atom,{1644,28},ensure_modules_loaded},
                             {integer,{1644,50},1}]}]}]}},
          {debug_line,1645,974},
          {match,
              {1645,5},
              {tuple,{1645,5},[{atom,{1645,6},ok},{var,{1645,9},'_'}]},
              {call,
                  {1645,14},
                  {remote,{1645,17},{atom,{1645,14},dbg},{atom,{1645,18},tp}},
                  [{block,0,
                       [{tuple,
                            {1645,21},
                            [{atom,{1645,22},code},
                             {atom,{1645,27},ensure_loaded},
                             {integer,{1645,41},1}]}]},
                   {nil,{1645,45}}]}},
          {debug_line,1646,975},
          {match,
              {1646,5},
              {tuple,
                  {1646,5},
                  [{atom,{1646,6},ok},
                   {atom,{1646,9},big},
                   {var,{1646,13},'_'}]},
              {call,
                  {1646,18},
                  {remote,
                      {1646,25},
                      {atom,{1646,18},compile},
                      {atom,{1646,26},file}},
                  [{var,{1646,31},'Big'},
                   {block,0,
                       [{cons,
                            {1646,36},
                            {atom,{1646,37},binary},
                            {nil,{1646,43}}}]}]}},
          {debug_line,1647,976},
          {match,
              {1647,5},
              {var,{1647,5},'WasLoaded0'},
              {call,{1647,18},{atom,{1647,18},get_trace_data},[]}},
          {debug_line,1648,977},
          {match,
              {1648,5},
              {var,{1648,5},'WasLoaded1'},
              {lc,{1648,18},
                  {block,0,[{var,{1648,19},'M'}]},
                  [{block,0,[{atom,{1648,52},true}]},
                   {generate,
                       {1648,49},
                       {tuple,
                           {1648,24},
                           [{atom,{1648,25},code},
                            {atom,{1648,30},ensure_loaded},
                            {cons,
                                {1648,44},
                                {var,{1648,45},'M'},
                                {nil,{1648,46}}}]},
                       {var,{1648,52},'WasLoaded0'}}]}},
          {debug_line,1649,978},
          {match,
              {1649,5},
              {var,{1649,5},'WasLoaded'},
              {call,
                  {1649,17},
                  {remote,
                      {1649,24},
                      {atom,{1649,17},ordsets},
                      {atom,{1649,25},from_list}},
                  [{var,{1649,35},'WasLoaded1'}]}},
          {debug_line,1652,979},
          {'case',
              {1652,5},
              {call,
                  {1652,10},
                  {remote,
                      {1652,17},
                      {atom,{1652,10},ordsets},
                      {atom,{1652,18},subtract}},
                  [{var,{1652,27},'WasLoaded'},{var,{1652,38},'PreLoaded'}]},
              [{clause,
                   {1653,2},
                   [{nil,{1653,2}}],
                   [],
                   [{debug_line,1654,980},{atom,{1654,6},ok}]},
               {clause,
                   {1655,2},
                   [{match,
                        {1655,2},
                        {cons,{1655,2},{var,{1655,3},'_'},{var,{1655,5},'_'}},
                        {var,{1655,8},'NotPreLoaded'}}],
                   [],
                   [{debug_line,1656,981},
                    {call,
                        {1656,6},
                        {remote,
                            {1656,8},
                            {atom,{1656,6},io},
                            {atom,{1656,9},format}},
                        [{block,0,
                             [{string,
                                  {1656,16},
                                  "The following modules were used but not pre-loaded:\n~p\n"}]},
                         {block,0,
                             [{debug_line,1658,982},
                              {cons,
                                  {1658,9},
                                  {var,{1658,10},'NotPreLoaded'},
                                  {nil,{1658,22}}}]}]},
                    {debug_line,1659,983},
                    {call,
                        {1659,6},
                        {remote,
                            {1659,8},
                            {atom,{1659,6},ct},
                            {atom,{1659,9},fail}},
                        [{block,0,
                             [{tuple,
                                  {1659,14},
                                  [{atom,{1659,15},not_preload},
                                   {var,{1659,27},'NotPreLoaded'}]}]}]}]}]},
          {debug_line,1663,984},
          {'case',
              {1663,5},
              {call,
                  {1663,10},
                  {remote,
                      {1663,17},
                      {atom,{1663,10},ordsets},
                      {atom,{1663,18},subtract}},
                  [{var,{1663,27},'PreLoaded'},{var,{1663,38},'WasLoaded'}]},
              [{clause,
                   {1664,2},
                   [{nil,{1664,2}}],
                   [],
                   [{debug_line,1665,985},{atom,{1665,6},ok}]},
               {clause,
                   {1666,2},
                   [{match,
                        {1666,2},
                        {cons,{1666,2},{var,{1666,3},'_'},{var,{1666,5},'_'}},
                        {var,{1666,8},'NotUsed'}}],
                   [],
                   [{debug_line,1667,986},
                    {call,
                        {1667,6},
                        {remote,
                            {1667,8},
                            {atom,{1667,6},io},
                            {atom,{1667,9},format}},
                        [{block,0,
                             [{string,
                                  {1667,16},
                                  "The following modules were pre-loaded but not used:\n~p\n"}]},
                         {block,0,
                             [{debug_line,1669,987},
                              {cons,
                                  {1669,9},
                                  {var,{1669,10},'NotUsed'},
                                  {nil,{1669,17}}}]}]},
                    {debug_line,1670,988},
                    {call,
                        {1670,6},
                        {remote,
                            {1670,8},
                            {atom,{1670,6},ct},
                            {atom,{1670,9},fail}},
                        [{block,0,
                             [{tuple,
                                  {1670,14},
                                  [{atom,{1670,15},not_used},
                                   {var,{1670,24},'NotUsed'}]}]}]}]}]},
          {debug_line,1673,989},
          {atom,{1673,5},ok}]}]}.
{function,{1675,1},
          get_trace_data,0,
          [{clause,{1675,1},
                   [],
                   [[{call,{1675,1},
                           {remote,{1675,1},
                                   {atom,{1675,1},fake},
                                   {atom,{1675,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1675,990},{atom,{1675,1},ignore}]},
           {clause,{1675,1},
                   [],[],
                   [{debug_line,1679,991},
                    {call,{1679,5},{atom,{1679,5},do_get_trace_data},[]}]}]}.
{function,
    {1681,1},
    do_get_trace_data,0,
    [{clause,
         {1681,1},
         [],
         [[{call,
               {1681,1},
               {remote,
                   {1681,1},
                   {atom,{1681,1},fake},
                   {atom,{1681,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1681,992},{atom,{1681,1},ignore}]},
     {clause,
         {1681,1},
         [],[],
         [{debug_line,1682,993},
          {'receive',
              {1682,5},
              [{clause,
                   {1683,2},
                   [{tuple,
                        {1683,2},
                        [{atom,{1683,3},trace_data},{var,{1683,14},'Data'}]}],
                   [],
                   [{debug_line,1683,994},{var,{1683,23},'Data'}]}]}]}]}.
{function,{1686,1},
          pre_load_trace,2,
          [{clause,{1686,1},
                   [{var,{1686,1},'_'},{var,{1686,1},'_'}],
                   [[{call,{1686,1},
                           {remote,{1686,1},
                                   {atom,{1686,1},fake},
                                   {atom,{1686,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1686,995},{atom,{1686,1},ignore}]},
           {clause,{1686,1},
                   [{tuple,{1686,16},
                           [{atom,{1686,17},trace},
                            {var,{1686,23},'Pid'},
                            {atom,{1686,27},call},
                            {tuple,{1686,32},
                                   [{atom,{1686,34},compile_SUITE},
                                    {atom,{1686,41},get_trace_data},
                                    {nil,{1686,56}}]}]},
                    {var,{1686,62},'Acc'}],
                   [],
                   [{debug_line,1687,996},
                    {op,{1687,9},
                        '!',
                        {var,{1687,5},'Pid'},
                        {tuple,{1687,11},
                               [{atom,{1687,12},trace_data},
                                {var,{1687,23},'Acc'}]}},
                    {debug_line,1688,997},
                    {nil,{1688,5}}]},
           {clause,{1689,1},
                   [{tuple,{1689,16},
                           [{atom,{1689,17},trace},
                            {var,{1689,23},'_'},
                            {atom,{1689,25},call},
                            {var,{1689,30},'MFA'}]},
                    {var,{1689,36},'Acc'}],
                   [],
                   [{debug_line,1690,998},
                    {cons,{1690,5},
                          {var,{1690,6},'MFA'},
                          {var,{1690,10},'Acc'}}]}]}.
{function,
 {1692,1},
 compiler_modules,0,
 [{clause,
   {1692,1},
   [],
   [[{call,
      {1692,1},
      {remote,{1692,1},{atom,{1692,1},fake},{atom,{1692,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1692,999},{atom,{1692,1},ignore}]},
  {clause,
   {1692,1},
   [],[],
   [{debug_line,1693,1000},
    {match,
     {1693,5},
     {var,{1693,5},'Wc'},
     {call,
      {1693,10},
      {remote,{1693,18},{atom,{1693,10},filename},{atom,{1693,19},join}},
      [{block,0,
        [{cons,
          {1693,24},
          {call,
           {1693,25},
           {remote,{1693,29},{atom,{1693,25},code},{atom,{1693,30},lib_dir}},
           [{atom,{1693,38},compiler}]},
          {cons,
           {1693,48},
           {string,{1693,48},"ebin"},
           {cons,{1693,55},{string,{1693,55},"*.beam"},{nil,{1693,63}}}}}]}]}},
    {debug_line,1694,1001},
    {match,
     {1694,5},
     {var,{1694,5},'Ms'},
     {call,
      {1694,10},
      {remote,{1694,17},{atom,{1694,10},filelib},{atom,{1694,18},wildcard}},
      [{var,{1694,27},'Wc'}]}},
    {debug_line,1695,1002},
    {match,{1695,5},{var,{1695,5},'FN'},{atom,{1695,10},filename}},
    {debug_line,1696,1003},
    {lc,
     {1696,5},
     {block,0,
      [{call,
        {1696,6},
        {remote,{1696,6},{atom,{1696,6},erlang},{atom,{1696,6},list_to_atom}},
        [{block,0,
          [{call,
            {1696,19},
            {remote,{1696,21},{var,{1696,19},'FN'},{atom,{1696,22},rootname}},
            [{block,0,
              [{call,
                {1696,31},
                {remote,
                 {1696,33},
                 {var,{1696,31},'FN'},
                 {atom,{1696,34},basename}},
                [{var,{1696,43},'M'}]}]},
             {block,0,[{string,{1696,47},".beam"}]}]}]}]}]},
     [{block,0,[{atom,{1696,65},true}]},
      {generate,{1696,62},{var,{1696,60},'M'},{var,{1696,65},'Ms'}}]}]}]}.
{function,
 {1701,1},
 env_compiler_options,1,
 [{clause,
   {1701,1},
   [{var,{1701,1},'_'}],
   [[{call,
      {1701,1},
      {remote,{1701,1},{atom,{1701,1},fake},{atom,{1701,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1701,1004},{atom,{1701,1},ignore}]},
  {clause,
   {1701,1},
   [{var,{1701,22},'_Config'}],
   [],
   [{debug_line,1702,1005},
    {match,
     {1702,5},
     {var,{1702,5},'Cases'},
     {cons,
      {1702,13},
      {tuple,
       {1703,9},
       [{string,{1703,10},"bin_opt_info"},
        {cons,{1703,26},{atom,{1703,27},bin_opt_info},{nil,{1703,39}}}]},
      {cons,
       {1704,9},
       {tuple,
        {1704,9},
        [{string,{1704,10},"recv_opt_info"},
         {cons,{1704,27},{atom,{1704,28},recv_opt_info},{nil,{1704,41}}}]},
       {cons,
        {1705,9},
        {tuple,
         {1705,9},
         [{string,{1705,10},"'S'"},
          {cons,{1705,17},{atom,{1705,18},'S'},{nil,{1705,21}}}]},
        {cons,
         {1706,9},
         {tuple,
          {1706,9},
          [{string,{1706,10},"{source, \"test.erl\"}"},
           {cons,
            {1706,36},
            {tuple,
             {1706,37},
             [{atom,{1706,38},source},{string,{1706,46},"test.erl"}]},
            {nil,{1706,57}}}]},
         {cons,
          {1707,9},
          {tuple,
           {1707,9},
           [{string,{1707,10},"[{d,macro_one,1},{d,macro_two}]"},
            {cons,
             {1707,45},
             {tuple,
              {1707,46},
              [{atom,{1707,47},d},
               {atom,{1707,50},macro_one},
               {integer,{1707,61},1}]},
             {cons,
              {1707,65},
              {tuple,
               {1707,65},
               [{atom,{1707,66},d},{atom,{1707,69},macro_two}]},
              {nil,{1707,79}}}}]},
          {cons,
           {1708,9},
           {tuple,
            {1708,9},
            [{string,{1708,10},"[warn_export_all, warn_export_vars]"},
             {cons,
              {1708,49},
              {atom,{1708,50},warn_export_all},
              {cons,
               {1708,67},
               {atom,{1708,67},warn_export_vars},
               {nil,{1708,83}}}}]},
           {nil,{1709,5}}}}}}}}},
    {debug_line,1710,1006},
    {match,
     {1710,5},
     {var,{1710,5},'F'},
     {'fun',
      {1710,9},
      {clauses,
       [{clause,
         {1710,12},
         [{tuple,
           {1710,13},
           [{var,{1710,14},'Env'},{var,{1710,19},'Expected'}]}],
         [],
         [{debug_line,1711,1007},
          {match,
           {1711,9},
           {atom,{1711,9},true},
           {call,
            {1711,16},
            {remote,{1711,18},{atom,{1711,16},os},{atom,{1711,19},putenv}},
            [{block,0,[{string,{1711,26},"ERL_COMPILER_OPTIONS"}]},
             {var,{1711,50},'Env'}]}},
          {debug_line,1712,1008},
          {match,
           {1712,9},
           {var,{1712,9},'Expected'},
           {call,
            {1712,20},
            {remote,
             {1712,27},
             {atom,{1712,20},compile},
             {atom,{1712,28},env_compiler_options}},
            []}}]}]}}},
    {debug_line,1714,1009},
    {call,
     {1714,5},
     {remote,{1714,10},{atom,{1714,5},lists},{atom,{1714,11},foreach}},
     [{var,{1714,19},'F'},{var,{1714,22},'Cases'}]}]}]}.
{function,
 {1718,1},
 bc_options,1,
 [{clause,
   {1718,1},
   [{var,{1718,1},'_'}],
   [[{call,
      {1718,1},
      {remote,{1718,1},{atom,{1718,1},fake},{atom,{1718,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1718,1010},{atom,{1718,1},ignore}]},
  {clause,
   {1718,1},
   [{var,{1718,12},'Config'}],
   [],
   [{debug_line,1719,1011},
    {match,
     {1719,5},
     {var,{1719,5},'DataDir'},
     {call,
      {1719,15},
      {remote,{1719,24},{atom,{1719,15},proplists},{atom,{1719,25},get_value}},
      [{atom,{1719,35},data_dir},{var,{1719,45},'Config'}]}},
    {debug_line,1721,1012},
    {match,
     {1721,5},
     {var,{1721,5},'DataDir'},
     {call,
      {1721,15},
      {remote,{1721,24},{atom,{1721,15},proplists},{atom,{1721,25},get_value}},
      [{atom,{1721,35},data_dir},{var,{1721,45},'Config'}]}},
    {debug_line,1723,1013},
    {match,
     {1723,5},
     {var,{1723,5},'L'},
     {cons,
      {1723,9},
      {tuple,
       {1723,10},
       [{integer,{1723,11},177},{atom,{1723,16},small_float},{nil,{1723,29}}]},
      {cons,
       {1725,10},
       {tuple,
        {1725,10},
        [{integer,{1725,11},177},
         {atom,{1725,16},small},
         {cons,
          {1725,23},
          {atom,{1725,24},no_ssa_opt_record},
          {cons,
           {1726,24},
           {atom,{1726,24},no_ssa_opt_float},
           {cons,
            {1727,24},
            {atom,{1727,24},no_line_info},
            {cons,
             {1728,24},
             {atom,{1728,24},no_type_opt},
             {cons,
              {1729,24},
              {atom,{1729,24},no_bs_match},
              {nil,{1729,35}}}}}}}]},
       {cons,
        {1731,10},
        {tuple,
         {1731,10},
         [{integer,{1731,11},177},
          {atom,{1731,16},funs},
          {cons,
           {1731,22},
           {atom,{1731,23},no_ssa_opt_record},
           {cons,
            {1732,23},
            {atom,{1732,23},no_ssa_opt_float},
            {cons,
             {1733,23},
             {atom,{1733,23},no_line_info},
             {cons,
              {1734,23},
              {atom,{1734,23},no_stack_trimming},
              {cons,
               {1735,23},
               {atom,{1735,23},no_type_opt},
               {nil,{1735,34}}}}}}}]},
        {cons,
         {1737,10},
         {tuple,
          {1737,10},
          [{integer,{1737,11},177},
           {atom,{1737,16},small_maps},
           {cons,{1737,28},{atom,{1737,29},no_type_opt},{nil,{1737,40}}}]},
         {cons,
          {1739,10},
          {tuple,
           {1739,10},
           [{integer,{1739,11},177},
            {atom,{1739,16},big},
            {cons,
             {1739,21},
             {atom,{1739,22},no_ssa_opt_record},
             {cons,
              {1740,22},
              {atom,{1740,22},no_ssa_opt_float},
              {cons,
               {1741,22},
               {atom,{1741,22},no_line_info},
               {cons,
                {1742,22},
                {atom,{1742,22},no_type_opt},
                {nil,{1742,33}}}}}}]},
          {cons,
           {1744,10},
           {tuple,
            {1744,10},
            [{integer,{1744,11},178},
             {atom,{1744,16},small},
             {cons,{1744,23},{atom,{1744,24},r25},{nil,{1744,27}}}]},
           {cons,
            {1745,10},
            {tuple,
             {1745,10},
             [{integer,{1745,11},178},
              {atom,{1745,16},big},
              {cons,{1745,21},{atom,{1745,22},r25},{nil,{1745,25}}}]},
            {cons,
             {1746,10},
             {tuple,
              {1746,10},
              [{integer,{1746,11},178},{atom,{1746,16},funs},{nil,{1746,22}}]},
             {cons,
              {1747,10},
              {tuple,
               {1747,10},
               [{integer,{1747,11},178},{atom,{1747,16},big},{nil,{1747,21}}]},
              {cons,
               {1749,10},
               {tuple,
                {1749,10},
                [{integer,{1749,11},182},
                 {atom,{1749,16},small},
                 {cons,{1749,23},{atom,{1749,24},r26},{nil,{1749,27}}}]},
               {cons,
                {1750,10},
                {tuple,
                 {1750,10},
                 [{integer,{1750,11},182},
                  {atom,{1750,16},small},
                  {nil,{1750,23}}]},
                {cons,
                 {1752,10},
                 {tuple,
                  {1752,10},
                  [{integer,{1752,11},183},
                   {atom,{1752,16},small},
                   {cons,
                    {1752,23},
                    {atom,{1752,24},line_coverage},
                    {nil,{1752,37}}}]},
                 {cons,
                  {1754,10},
                  {tuple,
                   {1754,10},
                   [{integer,{1754,11},184},
                    {atom,{1754,16},small},
                    {cons,
                     {1754,23},
                     {atom,{1754,24},beam_debug_info},
                     {nil,{1754,39}}}]},
                  {cons,
                   {1755,10},
                   {tuple,
                    {1755,10},
                    [{integer,{1755,11},184},
                     {atom,{1755,16},big},
                     {cons,
                      {1755,21},
                      {atom,{1755,22},beam_debug_info},
                      {nil,{1755,37}}}]},
                   {nil,{1756,9}}}}}}}}}}}}}}}}},
    {debug_line,1758,1014},
    {match,
     {1758,5},
     {var,{1758,5},'Test'},
     {'fun',
      {1758,12},
      {clauses,
       [{clause,
         {1758,15},
         [{tuple,
           {1758,16},
           [{var,{1758,17},'Expected'},
            {var,{1758,26},'Mod'},
            {var,{1758,30},'Options'}]}],
         [],
         [{debug_line,1759,1015},
          {'case',
           {1759,20},
           {call,
            {1759,25},
            {atom,{1759,25},highest_opcode},
            [{var,{1759,40},'DataDir'},
             {var,{1759,49},'Mod'},
             {var,{1759,54},'Options'}]},
           [{clause,
             {1760,24},
             [{var,{1760,24},'Expected'}],
             [],
             [{debug_line,1761,1016},{atom,{1761,28},ok}]},
            {clause,
             {1762,24},
             [{var,{1762,24},'Got'}],
             [],
             [{debug_line,1763,1017},
              {call,
               {1763,28},
               {remote,{1763,30},{atom,{1763,28},io},{atom,{1763,31},format}},
               [{block,0,
                 [{string,
                   {1763,38},
                   "*** module ~p, options ~p => got ~p; expected ~p\n"}]},
                {block,0,
                 [{debug_line,1764,1018},
                  {cons,
                   {1764,38},
                   {var,{1764,39},'Mod'},
                   {cons,
                    {1764,43},
                    {var,{1764,43},'Options'},
                    {cons,
                     {1764,51},
                     {var,{1764,51},'Got'},
                     {cons,
                      {1764,55},
                      {var,{1764,55},'Expected'},
                      {nil,{1764,63}}}}}}]}]},
              {debug_line,1765,1019},
              {atom,{1765,28},error}]}]}]}]}}},
    {debug_line,1768,1020},
    {call,
     {1768,5},
     {remote,{1768,13},{atom,{1768,5},test_lib},{atom,{1768,14},p_run}},
     [{var,{1768,20},'Test'},{var,{1768,26},'L'}]},
    {debug_line,1769,1021},
    {atom,{1769,5},ok}]}]}.
{function,
    {1771,1},
    highest_opcode,3,
    [{clause,
         {1771,1},
         [{var,{1771,1},'_'},{var,{1771,1},'_'},{var,{1771,1},'_'}],
         [[{call,
               {1771,1},
               {remote,
                   {1771,1},
                   {atom,{1771,1},fake},
                   {atom,{1771,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1771,1022},{atom,{1771,1},ignore}]},
     {clause,
         {1771,1},
         [{var,{1771,16},'DataDir'},
          {var,{1771,25},'Mod'},
          {var,{1771,30},'Opt'}],
         [],
         [{debug_line,1772,1023},
          {match,
              {1772,5},
              {var,{1772,5},'Src'},
              {call,
                  {1772,11},
                  {remote,
                      {1772,19},
                      {atom,{1772,11},filename},
                      {atom,{1772,20},join}},
                  [{var,{1772,25},'DataDir'},
                   {block,0,
                       [{op,{1772,51},
                            '++',
                            {call,
                                {1772,34},
                                {remote,
                                    {1772,34},
                                    {atom,{1772,34},erlang},
                                    {atom,{1772,34},atom_to_list}},
                                [{var,{1772,47},'Mod'}]},
                            {string,{1772,53},".erl"}}]}]}},
          {debug_line,1773,1024},
          {match,
              {1773,5},
              {tuple,
                  {1773,5},
                  [{atom,{1773,6},ok},
                   {var,{1773,9},'Mod'},
                   {var,{1773,13},'Beam'}]},
              {call,
                  {1773,21},
                  {remote,
                      {1773,28},
                      {atom,{1773,21},compile},
                      {atom,{1773,29},file}},
                  [{var,{1773,34},'Src'},
                   {block,0,
                       [{cons,
                            {1773,39},
                            {atom,{1773,40},binary},
                            {cons,
                                {1773,47},
                                {atom,{1773,47},report_errors},
                                {var,{1773,61},'Opt'}}}]}]}},
          {debug_line,1774,1025},
          {call,
              {1774,5},
              {remote,
                  {1774,13},
                  {atom,{1774,5},test_lib},
                  {atom,{1774,14},highest_opcode}},
              [{var,{1774,29},'Beam'}]}]}]}.
{function,
 {1776,1},
 deterministic_include,1,
 [{clause,
   {1776,1},
   [{var,{1776,1},'_'}],
   [[{call,
      {1776,1},
      {remote,{1776,1},{atom,{1776,1},fake},{atom,{1776,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1776,1026},{atom,{1776,1},ignore}]},
  {clause,
   {1776,1},
   [{var,{1776,23},'Config'}],
   [[{call,
      {1776,36},
      {remote,{1776,36},{atom,{1776,36},erlang},{atom,{1776,36},is_list}},
      [{var,{1776,44},'Config'}]}]],
   [{debug_line,1777,1027},
    {match,
     {1777,5},
     {var,{1777,5},'DataDir'},
     {call,
      {1777,15},
      {remote,{1777,24},{atom,{1777,15},proplists},{atom,{1777,25},get_value}},
      [{atom,{1777,35},data_dir},{var,{1777,45},'Config'}]}},
    {debug_line,1778,1028},
    {match,
     {1778,5},
     {var,{1778,5},'Simple'},
     {call,
      {1778,14},
      {remote,{1778,22},{atom,{1778,14},filename},{atom,{1778,23},join}},
      [{var,{1778,28},'DataDir'},{block,0,[{string,{1778,37},"simple"}]}]}},
    {debug_line,1782,1029},
    {match,
     {1782,5},
     {tuple,
      {1782,5},
      [{atom,{1782,6},ok},{var,{1782,9},'_'},{var,{1782,11},'NonDetA'}]},
     {call,
      {1782,22},
      {remote,{1782,29},{atom,{1782,22},compile},{atom,{1782,30},file}},
      [{var,{1782,35},'Simple'},
       {block,0,
        [{cons,
          {1782,43},
          {atom,{1782,44},binary},
          {cons,
           {1782,52},
           {tuple,{1782,52},[{atom,{1782,53},i},{string,{1782,55},"gurka"}]},
           {nil,{1782,63}}}}]}]}},
    {debug_line,1783,1030},
    {match,
     {1783,5},
     {tuple,
      {1783,5},
      [{atom,{1783,6},ok},{var,{1783,9},'_'},{var,{1783,11},'NonDetB'}]},
     {call,
      {1783,22},
      {remote,{1783,29},{atom,{1783,22},compile},{atom,{1783,30},file}},
      [{var,{1783,35},'Simple'},
       {block,0,
        [{cons,
          {1783,43},
          {atom,{1783,44},binary},
          {cons,
           {1783,52},
           {tuple,{1783,52},[{atom,{1783,53},i},{string,{1783,55},"gaffel"}]},
           {nil,{1783,64}}}}]}]}},
    {debug_line,1784,1031},
    {match,
     {1784,5},
     {atom,{1784,5},true},
     {op,{1784,20},'=/=',{var,{1784,12},'NonDetA'},{var,{1784,24},'NonDetB'}}},
    {debug_line,1787,1032},
    {match,
     {1787,5},
     {tuple,
      {1787,5},
      [{atom,{1787,6},ok},{var,{1787,9},'_'},{var,{1787,11},'DetC'}]},
     {call,
      {1787,19},
      {remote,{1787,26},{atom,{1787,19},compile},{atom,{1787,27},file}},
      [{var,{1787,32},'Simple'},
       {block,0,
        [{cons,
          {1787,40},
          {atom,{1787,41},binary},
          {cons,
           {1787,49},
           {atom,{1787,49},deterministic},
           {cons,
            {1787,64},
            {tuple,{1787,64},[{atom,{1787,65},i},{string,{1787,67},"gurka"}]},
            {nil,{1787,75}}}}}]}]}},
    {debug_line,1788,1033},
    {match,
     {1788,5},
     {tuple,
      {1788,5},
      [{atom,{1788,6},ok},{var,{1788,9},'_'},{var,{1788,11},'DetD'}]},
     {call,
      {1788,19},
      {remote,{1788,26},{atom,{1788,19},compile},{atom,{1788,27},file}},
      [{var,{1788,32},'Simple'},
       {block,0,
        [{cons,
          {1788,40},
          {atom,{1788,41},binary},
          {cons,
           {1788,49},
           {atom,{1788,49},deterministic},
           {cons,
            {1788,64},
            {tuple,{1788,64},[{atom,{1788,65},i},{string,{1788,67},"gaffel"}]},
            {nil,{1788,76}}}}}]}]}},
    {debug_line,1789,1034},
    {match,
     {1789,5},
     {atom,{1789,5},true},
     {op,{1789,17},'=:=',{var,{1789,12},'DetC'},{var,{1789,21},'DetD'}}},
    {debug_line,1791,1035},
    {atom,{1791,5},ok}]}]}.
{function,
    {1793,1},
    deterministic_paths,1,
    [{clause,
         {1793,1},
         [{var,{1793,1},'_'}],
         [[{call,
               {1793,1},
               {remote,
                   {1793,1},
                   {atom,{1793,1},fake},
                   {atom,{1793,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1793,1036},{atom,{1793,1},ignore}]},
     {clause,
         {1793,1},
         [{var,{1793,21},'Config'}],
         [[{call,
               {1793,34},
               {remote,
                   {1793,34},
                   {atom,{1793,34},erlang},
                   {atom,{1793,34},is_list}},
               [{var,{1793,42},'Config'}]}]],
         [{debug_line,1794,1037},
          {match,
              {1794,5},
              {var,{1794,5},'DataDir'},
              {call,
                  {1794,15},
                  {remote,
                      {1794,24},
                      {atom,{1794,15},proplists},
                      {atom,{1794,25},get_value}},
                  [{atom,{1794,35},data_dir},{var,{1794,45},'Config'}]}},
          {debug_line,1798,1038},
          {match,
              {1798,5},
              {atom,{1798,5},true},
              {call,
                  {1798,12},
                  {atom,{1798,12},deterministic_paths_1},
                  [{var,{1798,34},'DataDir'},
                   {block,0,[{string,{1798,43},"simple"}]},
                   {nil,{1798,53}}]}},
          {debug_line,1801,1039},
          {match,
              {1801,5},
              {atom,{1801,5},false},
              {call,
                  {1801,13},
                  {atom,{1801,13},deterministic_paths_1},
                  [{var,{1801,35},'DataDir'},
                   {block,0,[{string,{1801,44},"simple"}]},
                   {block,0,
                       [{cons,
                            {1801,54},
                            {atom,{1801,55},deterministic},
                            {nil,{1801,68}}}]}]}},
          {debug_line,1803,1040},
          {atom,{1803,5},ok}]}]}.
{function,
    {1805,1},
    deterministic_paths_1,3,
    [{clause,
         {1805,1},
         [{var,{1805,1},'_'},{var,{1805,1},'_'},{var,{1805,1},'_'}],
         [[{call,
               {1805,1},
               {remote,
                   {1805,1},
                   {atom,{1805,1},fake},
                   {atom,{1805,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1805,1041},{atom,{1805,1},ignore}]},
     {clause,
         {1805,1},
         [{var,{1805,23},'DataDir'},
          {var,{1805,32},'Name'},
          {var,{1805,38},'Opts'}],
         [],
         [{debug_line,1806,1042},
          {match,
              {1806,5},
              {var,{1806,5},'Simple'},
              {call,
                  {1806,14},
                  {remote,
                      {1806,22},
                      {atom,{1806,14},filename},
                      {atom,{1806,23},join}},
                  [{var,{1806,28},'DataDir'},
                   {block,0,[{string,{1806,37},"simple"}]}]}},
          {debug_line,1807,1043},
          {match,
              {1807,5},
              {tuple,{1807,5},[{atom,{1807,6},ok},{var,{1807,10},'Cwd'}]},
              {call,
                  {1807,17},
                  {remote,
                      {1807,21},
                      {atom,{1807,17},file},
                      {atom,{1807,22},get_cwd}},
                  []}},
          {debug_line,1808,1044},
          {'try',
              {1808,5},
              [{debug_line,1809,1045},
               {match,
                   {1809,9},
                   {tuple,
                       {1809,9},
                       [{atom,{1809,10},ok},
                        {var,{1809,13},'_'},
                        {var,{1809,15},'A'}]},
                   {call,
                       {1809,20},
                       {remote,
                           {1809,27},
                           {atom,{1809,20},compile},
                           {atom,{1809,28},file}},
                       [{var,{1809,33},'Simple'},
                        {block,0,
                            [{cons,
                                 {1809,41},
                                 {atom,{1809,42},binary},
                                 {var,{1809,51},'Opts'}}]}]}},
               {debug_line,1810,1046},
               {match,
                   {1810,9},
                   {atom,{1810,9},ok},
                   {call,
                       {1810,14},
                       {remote,
                           {1810,18},
                           {atom,{1810,14},file},
                           {atom,{1810,19},set_cwd}},
                       [{var,{1810,27},'DataDir'}]}},
               {debug_line,1811,1047},
               {match,
                   {1811,9},
                   {tuple,
                       {1811,9},
                       [{atom,{1811,10},ok},
                        {var,{1811,13},'_'},
                        {var,{1811,15},'B'}]},
                   {call,
                       {1811,20},
                       {remote,
                           {1811,27},
                           {atom,{1811,20},compile},
                           {atom,{1811,28},file}},
                       [{var,{1811,33},'Name'},
                        {block,0,
                            [{cons,
                                 {1811,39},
                                 {atom,{1811,40},binary},
                                 {var,{1811,49},'Opts'}}]}]}},
               {debug_line,1812,1048},
               {op,{1812,11},'=/=',{var,{1812,9},'A'},{var,{1812,15},'B'}}],
              [],[],
              [{debug_line,1814,1049},
               {call,
                   {1814,9},
                   {remote,
                       {1814,13},
                       {atom,{1814,9},file},
                       {atom,{1814,14},set_cwd}},
                   [{var,{1814,22},'Cwd'}]}]}]}]}.
{function,
    {1818,1},
    deterministic_docs,1,
    [{clause,
         {1818,1},
         [{var,{1818,1},'_'}],
         [[{call,
               {1818,1},
               {remote,
                   {1818,1},
                   {atom,{1818,1},fake},
                   {atom,{1818,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1818,1050},{atom,{1818,1},ignore}]},
     {clause,
         {1818,1},
         [{var,{1818,20},'Config'}],
         [[{call,
               {1818,33},
               {remote,
                   {1818,33},
                   {atom,{1818,33},erlang},
                   {atom,{1818,33},is_list}},
               [{var,{1818,41},'Config'}]}]],
         [{debug_line,1819,1051},
          {match,
              {1819,5},
              {var,{1819,5},'DataDir'},
              {call,
                  {1819,15},
                  {remote,
                      {1819,24},
                      {atom,{1819,15},proplists},
                      {atom,{1819,25},get_value}},
                  [{atom,{1819,35},data_dir},{var,{1819,45},'Config'}]}},
          {debug_line,1820,1052},
          {match,
              {1820,5},
              {var,{1820,5},'Filepath'},
              {call,
                  {1820,16},
                  {remote,
                      {1820,24},
                      {atom,{1820,16},filename},
                      {atom,{1820,25},join}},
                  [{var,{1820,30},'DataDir'},
                   {block,0,[{string,{1820,39},"ssh"}]}]}},
          {debug_line,1821,1053},
          {match,
              {1821,5},
              {atom,{1821,5},true},
              {call,
                  {1821,12},
                  {atom,{1821,12},deterministic_docs_1},
                  [{var,{1821,33},'Filepath'},
                   {block,0,
                       [{cons,
                            {1821,43},
                            {atom,{1821,44},binary},
                            {cons,
                                {1821,52},
                                {atom,{1821,52},deterministic},
                                {nil,{1821,65}}}}]},
                   {integer,{1821,68},25}]}},
          {debug_line,1822,1054},
          {atom,{1822,5},ok}]}]}.
{function,
 {1824,1},
 deterministic_docs_1,3,
 [{clause,
   {1824,1},
   [{var,{1824,1},'_'},{var,{1824,1},'_'},{var,{1824,1},'_'}],
   [[{call,
      {1824,1},
      {remote,{1824,1},{atom,{1824,1},fake},{atom,{1824,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1824,1055},{atom,{1824,1},ignore}]},
  {clause,
   {1824,1},
   [{var,{1824,22},'Filepath'},
    {var,{1824,32},'Opts'},
    {var,{1824,38},'Checks'}],
   [],
   [{debug_line,1825,1056},
    {match,
     {1825,5},
     {tuple,
      {1825,5},
      [{atom,{1825,6},ok},{var,{1825,10},'_'},{var,{1825,13},'Reference'}]},
     {call,
      {1825,26},
      {remote,{1825,33},{atom,{1825,26},compile},{atom,{1825,34},file}},
      [{var,{1825,39},'Filepath'},{var,{1825,49},'Opts'}]}},
    {debug_line,1826,1057},
    {call,
     {1826,5},
     {remote,{1826,10},{atom,{1826,5},lists},{atom,{1826,11},all}},
     [{block,0,
       [{debug_line,1827,1058},
        {'fun',
         {1827,7},
         {clauses,
          [{clause,
            {1827,10},
            [{var,{1827,11},'_'}],
            [],
            [{debug_line,1828,1059},
             {match,
              {1828,15},
              {tuple,
               {1828,15},
               [{atom,{1828,16},ok},
                {var,{1828,20},'Peer'},
                {var,{1828,26},'Node'}]},
              {call,
               {1828,35},
               {remote,
                {1828,35},
                {atom,{1828,35},test_server},
                {atom,{1828,35},start_peer}},
               [{block,0,[{map,{1828,43},[]}]},
                {atom,{1828,45},compile_SUITE},
                {atom,{1828,45},deterministic_docs_1}]}},
             {debug_line,1829,1060},
             {match,
              {1829,15},
              {tuple,
               {1829,15},
               [{atom,{1829,16},ok},
                {var,{1829,20},'_'},
                {var,{1829,23},'Testing'}]},
              {call,
               {1830,19},
               {remote,{1830,23},{atom,{1830,19},erpc},{atom,{1830,24},call}},
               [{var,{1831,21},'Node'},
                {block,0,
                 [{debug_line,1832,1061},
                  {'fun',
                   {1832,21},
                   {clauses,
                    [{clause,
                      {1832,24},
                      [],[],
                      [{debug_line,1833,1062},
                       {call,
                        {1833,29},
                        {remote,
                         {1833,36},
                         {atom,{1833,29},compile},
                         {atom,{1833,37},file}},
                        [{var,{1833,42},'Filepath'},
                         {var,{1833,52},'Opts'}]}]}]}}]}]}},
             {debug_line,1835,1063},
             {call,
              {1835,15},
              {remote,{1835,19},{atom,{1835,15},peer},{atom,{1835,20},stop}},
              [{var,{1835,25},'Peer'}]},
             {debug_line,1836,1064},
             {op,
              {1836,23},
              '=:=',
              {var,{1836,15},'Testing'},
              {var,{1836,27},'Reference'}}]}]}}]},
      {block,0,
       [{debug_line,1837,1065},
        {call,
         {1837,12},
         {remote,{1837,17},{atom,{1837,12},lists},{atom,{1837,18},seq}},
         [{integer,{1837,22},1},{var,{1837,25},'Checks'}]}]}]}]}]}.
{function,
    {1840,1},
    compile_attribute,1,
    [{clause,
         {1840,1},
         [{var,{1840,1},'_'}],
         [[{call,
               {1840,1},
               {remote,
                   {1840,1},
                   {atom,{1840,1},fake},
                   {atom,{1840,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1840,1066},{atom,{1840,1},ignore}]},
     {clause,
         {1840,1},
         [{var,{1840,19},'Config'}],
         [[{call,
               {1840,32},
               {remote,
                   {1840,32},
                   {atom,{1840,32},erlang},
                   {atom,{1840,32},is_list}},
               [{var,{1840,40},'Config'}]}]],
         [{debug_line,1841,1067},
          {match,
              {1841,5},
              {var,{1841,5},'DataDir'},
              {call,
                  {1841,15},
                  {remote,
                      {1841,24},
                      {atom,{1841,15},proplists},
                      {atom,{1841,25},get_value}},
                  [{atom,{1841,35},data_dir},{var,{1841,45},'Config'}]}},
          {debug_line,1845,1068},
          {call,
              {1845,5},
              {atom,{1845,5},debug_info_attribute},
              [{var,{1845,26},'DataDir'},
               {block,0,[{string,{1845,35},"debug_info"}]},
               {block,0,
                   [{cons,
                        {1845,49},
                        {atom,{1845,50},debug_info},
                        {nil,{1845,60}}}]}]},
          {debug_line,1846,1069},
          {call,
              {1846,5},
              {atom,{1846,5},debug_info_attribute},
              [{var,{1846,26},'DataDir'},
               {block,0,[{string,{1846,35},"debug_info"}]},
               {nil,{1846,49}}]},
          {debug_line,1848,1070},
          {atom,{1848,5},ok}]}]}.
{function,
    {1850,1},
    debug_info_attribute,3,
    [{clause,
         {1850,1},
         [{var,{1850,1},'_'},{var,{1850,1},'_'},{var,{1850,1},'_'}],
         [[{call,
               {1850,1},
               {remote,
                   {1850,1},
                   {atom,{1850,1},fake},
                   {atom,{1850,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1850,1071},{atom,{1850,1},ignore}]},
     {clause,
         {1850,1},
         [{var,{1850,22},'DataDir'},
          {var,{1850,31},'Name'},
          {var,{1850,37},'Opts'}],
         [],
         [{debug_line,1851,1072},
          {match,
              {1851,5},
              {var,{1851,5},'File'},
              {call,
                  {1851,12},
                  {remote,
                      {1851,20},
                      {atom,{1851,12},filename},
                      {atom,{1851,21},join}},
                  [{var,{1851,26},'DataDir'},{var,{1851,35},'Name'}]}},
          {debug_line,1852,1073},
          {match,
              {1852,5},
              {tuple,
                  {1852,5},
                  [{atom,{1852,6},ok},
                   {var,{1852,9},'_'},
                   {var,{1852,11},'Bin'}]},
              {call,
                  {1852,18},
                  {remote,
                      {1852,25},
                      {atom,{1852,18},compile},
                      {atom,{1852,26},file}},
                  [{var,{1852,31},'File'},
                   {block,0,
                       [{cons,
                            {1852,37},
                            {atom,{1852,38},binary},
                            {var,{1852,47},'Opts'}}]}]}},
          {debug_line,1853,1074},
          {match,
              {1853,5},
              {tuple,
                  {1853,5},
                  [{atom,{1853,6},ok},
                   {tuple,
                       {1853,10},
                       [{var,{1853,11},'_'},{var,{1853,14},'Attrs'}]}]},
              {call,
                  {1853,24},
                  {remote,
                      {1853,32},
                      {atom,{1853,24},beam_lib},
                      {atom,{1853,33},chunks}},
                  [{var,{1853,40},'Bin'},
                   {block,0,
                       [{cons,
                            {1853,45},
                            {atom,{1853,46},debug_info},
                            {nil,{1853,56}}}]}]}},
          {debug_line,1855,1075},
          {match,
              {1855,5},
              {cons,
                  {1855,5},
                  {tuple,
                      {1855,6},
                      [{atom,{1855,7},debug_info},
                       {tuple,
                           {1855,18},
                           [{atom,{1855,19},debug_info_v1},
                            {atom,{1855,33},erl_abstract_code},
                            {tuple,
                                {1855,52},
                                [{var,{1855,53},'Forms'},
                                 {var,{1855,60},'_'}]}]}]},
                  {nil,{1855,64}}},
              {var,{1855,68},'Attrs'}},
          {debug_line,1856,1076},
          {match,
              {1856,5},
              {cons,
                  {1856,5},
                  {tuple,
                      {1856,6},
                      [{atom,{1856,7},attribute},
                       {tuple,
                           {1856,17},
                           [{integer,{1856,18},1},{integer,{1856,20},1}]},
                       {atom,{1856,23},file},
                       {tuple,
                           {1856,28},
                           [{var,{1856,29},'_'},{integer,{1856,31},1}]}]},
                  {cons,
                      {1857,6},
                      {tuple,
                          {1857,6},
                          [{atom,{1857,7},attribute},
                           {tuple,
                               {1857,17},
                               [{integer,{1857,18},1},{integer,{1857,20},2}]},
                           {atom,{1857,23},module},
                           {atom,{1857,30},debug_info}]},
                      {cons,
                          {1858,6},
                          {tuple,
                              {1858,6},
                              [{atom,{1858,7},attribute},
                               {tuple,
                                   {1858,17},
                                   [{integer,{1858,18},2},
                                    {integer,{1858,20},2}]},
                               {atom,{1858,23},compile},
                               {cons,
                                   {1858,31},
                                   {atom,{1858,32},debug_info},
                                   {nil,{1858,42}}}]},
                          {cons,
                              {1859,6},
                              {tuple,
                                  {1859,6},
                                  [{atom,{1859,7},eof},{var,{1859,11},'_'}]},
                              {nil,{1859,13}}}}}},
              {call,
                  {1859,17},
                  {atom,{1859,17},forms_to_terms},
                  [{var,{1859,32},'Forms'}]}},
          {debug_line,1861,1077},
          {atom,{1861,5},ok}]}]}.
{function,
    {1863,1},
    forms_to_terms,1,
    [{clause,
         {1863,1},
         [{var,{1863,1},'_'}],
         [[{call,
               {1863,1},
               {remote,
                   {1863,1},
                   {atom,{1863,1},fake},
                   {atom,{1863,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1863,1078},{atom,{1863,1},ignore}]},
     {clause,
         {1863,1},
         [{var,{1863,16},'Forms'}],
         [],
         [{debug_line,1864,1079},
          {lc,{1864,5},
              {block,0,
                  [{call,
                       {1864,6},
                       {remote,
                           {1864,15},
                           {atom,{1864,6},erl_parse},
                           {atom,{1864,16},anno_to_term}},
                       [{var,{1864,29},'Form'}]}]},
              [{block,0,[{atom,{1864,46},true}]},
               {generate,
                   {1864,43},
                   {var,{1864,38},'Form'},
                   {var,{1864,46},'Forms'}}]}]}]}.
{function,
 {1867,1},
 other_options,1,
 [{clause,
   {1867,1},
   [{var,{1867,1},'_'}],
   [[{call,
      {1867,1},
      {remote,{1867,1},{atom,{1867,1},fake},{atom,{1867,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1867,1080},{atom,{1867,1},ignore}]},
  {clause,
   {1867,1},
   [{var,{1867,15},'Config'}],
   [],
   [{debug_line,1868,1081},
    {match,
     {1868,5},
     {var,{1868,5},'DataDir'},
     {call,
      {1868,15},
      {remote,{1868,24},{atom,{1868,15},proplists},{atom,{1868,25},get_value}},
      [{atom,{1868,35},data_dir},{var,{1868,45},'Config'}]}},
    {debug_line,1872,1082},
    {match,
     {1872,5},
     {var,{1872,5},'Big'},
     {call,
      {1872,11},
      {remote,{1872,19},{atom,{1872,11},filename},{atom,{1872,20},join}},
      [{var,{1872,25},'DataDir'},{block,0,[{string,{1872,34},"big"}]}]}},
    {debug_line,1873,1083},
    {match,
     {1873,5},
     {tuple,
      {1873,5},
      [{atom,{1873,6},ok},
       {atom,{1873,9},big},
       {bin,
        {1873,13},
        [{bin_element,{1873,15},{var,{1873,15},'_'},default,[binary]}]}]},
     {call,
      {1874,9},
      {remote,{1874,16},{atom,{1874,9},compile},{atom,{1874,17},file}},
      [{var,{1874,22},'Big'},
       {block,0,
        [{debug_line,1874,1084},
         {cons,
          {1874,27},
          {atom,{1874,28},binary},
          {cons,
           {1875,28},
           {atom,{1875,28},no_spawn_compiler_process},
           {cons,
            {1876,28},
            {atom,{1876,28},brief},
            {cons,
             {1877,28},
             {atom,{1877,28},absolute_source},
             {cons,{1878,28},{atom,{1878,28},report},{nil,{1878,34}}}}}}}]}]}},
    {debug_line,1882,1085},
    {match,
     {1882,5},
     {var,{1882,5},'Small'},
     {call,
      {1882,13},
      {remote,{1882,21},{atom,{1882,13},filename},{atom,{1882,22},join}},
      [{var,{1882,27},'DataDir'},{block,0,[{string,{1882,36},"small"}]}]}},
    {debug_line,1883,1086},
    {match,
     {1883,5},
     {tuple,{1883,5},[{atom,{1883,6},ok},{atom,{1883,9},small}]},
     {call,
      {1883,18},
      {remote,{1883,25},{atom,{1883,18},compile},{atom,{1883,26},file}},
      [{var,{1883,31},'Small'},
       {block,0,
        [{cons,
          {1883,38},
          {atom,{1883,39},report},
          {cons,
           {1883,47},
           {atom,{1883,47},no_inline},
           {cons,
            {1883,58},
            {atom,{1883,58},compressed},
            {cons,{1883,70},{atom,{1883,70},beam},{nil,{1883,74}}}}}}]}]}},
    {debug_line,1885,1087},
    {atom,{1885,5},ok}]}]}.
{function,
    {1888,1},
    transforms,1,
    [{clause,
         {1888,1},
         [{var,{1888,1},'_'}],
         [[{call,
               {1888,1},
               {remote,
                   {1888,1},
                   {atom,{1888,1},fake},
                   {atom,{1888,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1888,1088},{atom,{1888,1},ignore}]},
     {clause,
         {1888,1},
         [{var,{1888,12},'Config'}],
         [],
         [{debug_line,1889,1089},
          {match,
              {1889,5},
              {tuple,{1889,5},[{atom,{1889,6},ok},{var,{1889,10},'Cwd'}]},
              {call,
                  {1889,17},
                  {remote,
                      {1889,21},
                      {atom,{1889,17},file},
                      {atom,{1889,22},get_cwd}},
                  []}},
          {debug_line,1890,1090},
          {'try',
              {1890,5},
              [{debug_line,1891,1091},
               {call,
                   {1891,9},
                   {atom,{1891,9},do_transforms},
                   [{var,{1891,23},'Config'}]}],
              [],[],
              [{debug_line,1893,1092},
               {call,
                   {1893,9},
                   {remote,
                       {1893,13},
                       {atom,{1893,9},file},
                       {atom,{1893,14},set_cwd}},
                   [{var,{1893,22},'Cwd'}]}]}]}]}.
{function,
 {1896,1},
 do_transforms,1,
 [{clause,
   {1896,1},
   [{var,{1896,1},'_'}],
   [[{call,
      {1896,1},
      {remote,{1896,1},{atom,{1896,1},fake},{atom,{1896,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1896,1093},{atom,{1896,1},ignore}]},
  {clause,
   {1896,1},
   [{var,{1896,15},'Config'}],
   [],
   [{debug_line,1897,1094},
    {match,
     {1897,5},
     {var,{1897,5},'DataDir'},
     {call,
      {1897,15},
      {remote,{1897,24},{atom,{1897,15},proplists},{atom,{1897,25},get_value}},
      [{atom,{1897,35},data_dir},{var,{1897,45},'Config'}]}},
    {debug_line,1898,1095},
    {match,
     {1898,5},
     {var,{1898,5},'PrivDir'},
     {call,
      {1898,15},
      {remote,{1898,24},{atom,{1898,15},proplists},{atom,{1898,25},get_value}},
      [{atom,{1898,35},priv_dir},{var,{1898,45},'Config'}]}},
    {debug_line,1899,1096},
    {match,
     {1899,5},
     {var,{1899,5},'TargetDir'},
     {call,
      {1899,17},
      {remote,{1899,25},{atom,{1899,17},filename},{atom,{1899,26},join}},
      [{var,{1899,31},'PrivDir'},{atom,{1899,41},do_transforms}]}},
    {debug_line,1900,1097},
    {match,
     {1900,5},
     {atom,{1900,5},ok},
     {call,
      {1900,10},
      {remote,{1900,14},{atom,{1900,10},file},{atom,{1900,15},make_dir}},
      [{var,{1900,24},'TargetDir'}]}},
    {debug_line,1901,1098},
    {match,
     {1901,5},
     {atom,{1901,5},ok},
     {call,
      {1901,10},
      {remote,{1901,14},{atom,{1901,10},file},{atom,{1901,15},set_cwd}},
      [{var,{1901,23},'TargetDir'}]}},
    {debug_line,1904,1099},
    {match,
     {1904,5},
     {var,{1904,5},'LinePt'},
     {call,
      {1904,14},
      {remote,{1904,22},{atom,{1904,14},filename},{atom,{1904,23},join}},
      [{var,{1904,28},'DataDir'},{block,0,[{string,{1904,37},"line_pt"}]}]}},
    {debug_line,1905,1100},
    {match,
     {1905,5},
     {tuple,{1905,5},[{atom,{1905,6},ok},{atom,{1905,9},line_pt}]},
     {call,
      {1905,20},
      {remote,{1905,27},{atom,{1905,20},compile},{atom,{1905,28},file}},
      [{var,{1905,33},'LinePt'},
       {block,0,
        [{cons,
          {1905,41},
          {atom,{1905,42},report},
          {cons,
           {1905,50},
           {tuple,
            {1905,50},
            [{atom,{1905,51},outdir},{var,{1905,58},'TargetDir'}]},
           {nil,{1905,68}}}}]}]}},
    {debug_line,1906,1101},
    {match,
     {1906,5},
     {var,{1906,5},'ColumnPt'},
     {call,
      {1906,16},
      {remote,{1906,24},{atom,{1906,16},filename},{atom,{1906,25},join}},
      [{var,{1906,30},'DataDir'},{block,0,[{string,{1906,39},"column_pt"}]}]}},
    {debug_line,1907,1102},
    {match,
     {1907,5},
     {tuple,{1907,5},[{atom,{1907,6},ok},{atom,{1907,9},column_pt}]},
     {call,
      {1907,22},
      {remote,{1907,29},{atom,{1907,22},compile},{atom,{1907,30},file}},
      [{var,{1907,35},'ColumnPt'},
       {block,0,
        [{cons,
          {1907,45},
          {atom,{1907,46},report},
          {cons,
           {1907,54},
           {tuple,
            {1907,54},
            [{atom,{1907,55},outdir},{var,{1907,62},'TargetDir'}]},
           {nil,{1907,72}}}}]}]}},
    {debug_line,1908,1103},
    {match,
     {1908,5},
     {var,{1908,5},'GenericPt'},
     {call,
      {1908,17},
      {remote,{1908,25},{atom,{1908,17},filename},{atom,{1908,26},join}},
      [{var,{1908,31},'DataDir'},
       {block,0,[{string,{1908,40},"generic_pt"}]}]}},
    {debug_line,1909,1104},
    {match,
     {1909,5},
     {tuple,{1909,5},[{atom,{1909,6},ok},{atom,{1909,9},generic_pt}]},
     {call,
      {1909,23},
      {remote,{1909,30},{atom,{1909,23},compile},{atom,{1909,31},file}},
      [{var,{1909,36},'GenericPt'},
       {block,0,
        [{cons,
          {1909,47},
          {atom,{1909,48},report},
          {cons,
           {1909,56},
           {tuple,
            {1909,56},
            [{atom,{1909,57},outdir},{var,{1909,64},'TargetDir'}]},
           {nil,{1909,74}}}}]}]}},
    {debug_line,1913,1105},
    {match,
     {1913,5},
     {var,{1913,5},'Big'},
     {call,
      {1913,11},
      {remote,{1913,19},{atom,{1913,11},filename},{atom,{1913,20},join}},
      [{var,{1913,25},'DataDir'},{block,0,[{string,{1913,34},"big"}]}]}},
    {debug_line,1914,1106},
    {match,
     {1914,5},
     {tuple,
      {1914,5},
      [{nil,{1914,6}},
       {cons,{1914,9},{var,{1914,10},'_'},{var,{1914,12},'_'}}]},
     {call,
      {1914,18},
      {atom,{1914,18},compile_partition_warnings},
      [{var,{1914,45},'Big'},
       {block,0,
        [{cons,
          {1914,50},
          {tuple,
           {1914,51},
           [{atom,{1914,52},parse_transform},{atom,{1914,68},line_pt}]},
          {nil,{1914,76}}}]}]}},
    {debug_line,1918,1107},
    {match,
     {1918,5},
     {tuple,
      {1918,5},
      [{cons,{1918,6},{var,{1918,7},'_'},{var,{1918,9},'_'}},{nil,{1918,12}}]},
     {call,
      {1918,18},
      {atom,{1918,18},compile_partition_warnings},
      [{var,{1918,45},'Big'},
       {block,0,
        [{cons,
          {1918,50},
          {tuple,
           {1918,51},
           [{atom,{1918,52},parse_transform},{atom,{1918,68},column_pt}]},
          {nil,{1918,78}}}]}]}},
    {debug_line,1922,1108},
    {match,
     {1922,5},
     {tuple,
      {1922,5},
      [{nil,{1922,6}},
       {cons,{1922,9},{var,{1922,10},'_'},{var,{1922,12},'_'}}]},
     {call,
      {1922,18},
      {atom,{1922,18},compile_partition_warnings},
      [{var,{1922,45},'Big'},
       {block,0,
        [{cons,
          {1922,50},
          {tuple,
           {1922,51},
           [{atom,{1922,52},error_location},{atom,{1922,67},line}]},
          {cons,
           {1923,51},
           {tuple,
            {1923,51},
            [{atom,{1923,52},parse_transform},{atom,{1923,68},column_pt}]},
           {nil,{1923,78}}}}]}]}},
    {debug_line,1927,1109},
    {match,
     {1927,5},
     {tuple,
      {1927,5},
      [{nil,{1927,6}},
       {cons,{1927,9},{var,{1927,10},'_'},{var,{1927,12},'_'}}]},
     {call,
      {1927,18},
      {atom,{1927,18},compile_partition_warnings},
      [{var,{1927,45},'Big'},
       {block,0,
        [{cons,
          {1927,50},
          {tuple,
           {1927,51},
           [{atom,{1927,52},parse_transform},{atom,{1927,68},column_pt}]},
          {cons,
           {1928,51},
           {tuple,
            {1928,51},
            [{atom,{1928,52},parse_transform},{atom,{1928,68},line_pt}]},
           {nil,{1928,76}}}}]}]}},
    {debug_line,1932,1110},
    {match,
     {1932,5},
     {tuple,
      {1932,5},
      [{nil,{1932,6}},
       {cons,{1932,9},{var,{1932,10},'_'},{var,{1932,12},'_'}}]},
     {call,
      {1932,18},
      {atom,{1932,18},compile_partition_warnings},
      [{var,{1932,45},'Big'},
       {block,0,
        [{cons,
          {1932,50},
          {tuple,
           {1932,51},
           [{atom,{1932,52},error_location},{atom,{1932,67},line}]},
          {cons,
           {1933,51},
           {atom,{1933,51},add_columns},
           {cons,
            {1934,51},
            {tuple,
             {1934,51},
             [{atom,{1934,52},parse_transform},{atom,{1934,68},column_pt}]},
            {nil,{1934,78}}}}}]}]}},
    {debug_line,1939,1111},
    {match,
     {1939,5},
     {tuple,
      {1939,5},
      [{nil,{1939,6}},
       {cons,{1939,9},{var,{1939,10},'_'},{var,{1939,12},'_'}}]},
     {call,
      {1939,18},
      {atom,{1939,18},compile_partition_warnings},
      [{var,{1939,45},'Big'},
       {block,0,
        [{cons,
          {1939,50},
          {tuple,
           {1939,51},
           [{atom,{1939,52},error_location},{atom,{1939,67},line}]},
          {cons,
           {1940,51},
           {atom,{1940,51},add_columns},
           {cons,
            {1941,51},
            {tuple,
             {1941,51},
             [{atom,{1941,52},parse_transform},{atom,{1941,68},column_pt}]},
            {cons,
             {1942,51},
             {tuple,
              {1942,51},
              [{atom,{1942,52},parse_transform},{atom,{1942,68},column_pt}]},
             {nil,{1942,78}}}}}}]}]}},
    {debug_line,1946,1112},
    {match,
     {1946,5},
     {tuple,
      {1946,5},
      [{atom,{1946,6},error},
       {cons,
        {1946,12},
        {tuple,
         {1946,13},
         [{var,{1946,14},'_What'},
          {cons,
           {1946,20},
           {tuple,
            {1946,21},
            [{var,{1946,22},'Line'},{var,{1946,27},'_'},{var,{1946,29},'_'}]},
           {nil,{1946,31}}}]},
        {nil,{1946,33}}},
       {cons,{1946,35},{var,{1946,36},'_'},{var,{1946,38},'_'}}]},
     {call,
      {1947,9},
      {atom,{1947,9},compile_partition_warnings},
      [{var,{1947,36},'Big'},
       {block,0,
        [{debug_line,1947,1113},
         {cons,
          {1947,41},
          {tuple,
           {1947,42},
           [{atom,{1947,43},error_location},{atom,{1947,58},line}]},
          {cons,
           {1948,42},
           {atom,{1948,42},add_columns},
           {cons,
            {1949,42},
            {atom,{1949,42},add_error},
            {cons,
             {1950,42},
             {tuple,
              {1950,42},
              [{atom,{1950,43},parse_transform},{atom,{1950,59},column_pt}]},
             {nil,{1950,69}}}}}}]}]}},
    {debug_line,1951,1114},
    {match,
     {1951,5},
     {atom,{1951,5},true},
     {call,
      {1951,12},
      {remote,{1951,12},{atom,{1951,12},erlang},{atom,{1951,12},is_integer}},
      [{var,{1951,23},'Line'}]}},
    {debug_line,1954,1115},
    {match,
     {1954,5},
     {tuple,
      {1954,5},
      [{atom,{1954,6},ok},{atom,{1954,9},big},{var,{1954,13},'_'}]},
     {call,
      {1954,18},
      {remote,{1954,25},{atom,{1954,18},compile},{atom,{1954,26},file}},
      [{var,{1954,31},'Big'},
       {block,0,
        [{cons,
          {1954,36},
          {atom,{1954,37},binary},
          {cons,
           {1954,45},
           {atom,{1954,45},time},
           {cons,
            {1954,51},
            {atom,{1954,51},report},
            {cons,
             {1955,37},
             {tuple,
              {1955,37},
              [{atom,{1955,38},core_transform},{atom,{1955,53},generic_pt}]},
             {cons,
              {1956,37},
              {tuple,
               {1956,37},
               [{atom,{1956,38},parse_transform},{atom,{1956,54},generic_pt}]},
              {nil,{1956,65}}}}}}}]}]}},
    {debug_line,1959,1116},
    {match,
     {1959,5},
     {var,{1959,5},'Simple'},
     {call,
      {1959,14},
      {remote,{1959,22},{atom,{1959,14},filename},{atom,{1959,23},join}},
      [{var,{1959,28},'DataDir'},{atom,{1959,37},simple}]}},
    {debug_line,1960,1117},
    {match,
     {1960,5},
     {atom,{1960,5},error},
     {call,
      {1960,13},
      {remote,{1960,20},{atom,{1960,13},compile},{atom,{1960,21},file}},
      [{var,{1960,26},'Simple'},
       {block,0,
        [{cons,
          {1960,34},
          {atom,{1960,35},report},
          {cons,
           {1960,43},
           {tuple,
            {1960,43},
            [{atom,{1960,44},core_transform},{atom,{1960,59},generic_pt}]},
           {cons,
            {1960,72},
            {tuple,{1960,72},[{atom,{1960,73},action},{atom,{1960,81},crash}]},
            {nil,{1960,87}}}}}]}]}},
    {debug_line,1961,1118},
    {match,
     {1961,5},
     {tuple,
      {1961,5},
      [{atom,{1961,6},error},{var,{1961,12},'_'},{nil,{1961,14}}]},
     {call,
      {1961,20},
      {remote,{1961,27},{atom,{1961,20},compile},{atom,{1961,28},file}},
      [{var,{1961,33},'Simple'},
       {block,0,
        [{cons,
          {1961,41},
          {atom,{1961,42},return},
          {cons,
           {1961,50},
           {tuple,
            {1961,50},
            [{atom,{1961,51},core_transform},{atom,{1961,66},generic_pt}]},
           {cons,
            {1961,79},
            {tuple,{1961,79},[{atom,{1961,80},action},{atom,{1961,88},crash}]},
            {nil,{1961,94}}}}}]}]}},
    {debug_line,1963,1119},
    {match,
     {1963,5},
     {atom,{1963,5},error},
     {call,
      {1963,13},
      {remote,{1963,20},{atom,{1963,13},compile},{atom,{1963,21},file}},
      [{var,{1963,26},'Simple'},
       {block,0,
        [{cons,
          {1963,34},
          {atom,{1963,35},report},
          {cons,
           {1963,43},
           {tuple,
            {1963,43},
            [{atom,{1963,44},core_transform},{atom,{1963,59},generic_pt}]},
           {cons,
            {1963,72},
            {tuple,{1963,72},[{atom,{1963,73},action},{atom,{1963,81},throw}]},
            {nil,{1963,87}}}}}]}]}},
    {debug_line,1964,1120},
    {match,
     {1964,5},
     {tuple,
      {1964,5},
      [{atom,{1964,6},error},{var,{1964,12},'_'},{nil,{1964,14}}]},
     {call,
      {1964,20},
      {remote,{1964,27},{atom,{1964,20},compile},{atom,{1964,28},file}},
      [{var,{1964,33},'Simple'},
       {block,0,
        [{cons,
          {1964,41},
          {atom,{1964,42},return},
          {cons,
           {1964,50},
           {tuple,
            {1964,50},
            [{atom,{1964,51},core_transform},{atom,{1964,66},generic_pt}]},
           {cons,
            {1964,79},
            {tuple,{1964,79},[{atom,{1964,80},action},{atom,{1964,88},throw}]},
            {nil,{1964,94}}}}}]}]}},
    {debug_line,1966,1121},
    {match,
     {1966,5},
     {atom,{1966,5},error},
     {call,
      {1966,13},
      {remote,{1966,20},{atom,{1966,13},compile},{atom,{1966,21},file}},
      [{var,{1966,26},'Simple'},
       {block,0,
        [{cons,
          {1966,34},
          {atom,{1966,35},report},
          {cons,
           {1966,43},
           {tuple,
            {1966,43},
            [{atom,{1966,44},core_transform},{atom,{1966,59},generic_pt}]},
           {cons,
            {1966,72},
            {tuple,{1966,72},[{atom,{1966,73},action},{atom,{1966,81},exit}]},
            {nil,{1966,86}}}}}]}]}},
    {debug_line,1967,1122},
    {match,
     {1967,5},
     {tuple,
      {1967,5},
      [{atom,{1967,6},error},{var,{1967,12},'_'},{nil,{1967,14}}]},
     {call,
      {1967,20},
      {remote,{1967,27},{atom,{1967,20},compile},{atom,{1967,28},file}},
      [{var,{1967,33},'Simple'},
       {block,0,
        [{cons,
          {1967,41},
          {atom,{1967,42},return},
          {cons,
           {1967,50},
           {tuple,
            {1967,50},
            [{atom,{1967,51},core_transform},{atom,{1967,66},generic_pt}]},
           {cons,
            {1967,79},
            {tuple,{1967,79},[{atom,{1967,80},action},{atom,{1967,88},exit}]},
            {nil,{1967,93}}}}}]}]}},
    {debug_line,1970,1123},
    {match,
     {1970,5},
     {atom,{1970,5},error},
     {call,
      {1970,13},
      {remote,{1970,20},{atom,{1970,13},compile},{atom,{1970,21},file}},
      [{var,{1970,26},'Simple'},
       {block,0,
        [{cons,
          {1970,34},
          {atom,{1970,35},report},
          {cons,
           {1970,43},
           {tuple,
            {1970,43},
            [{atom,{1970,44},parse_transform},{atom,{1970,60},generic_pt}]},
           {cons,
            {1970,73},
            {tuple,{1970,73},[{atom,{1970,74},action},{atom,{1970,82},crash}]},
            {nil,{1970,88}}}}}]}]}},
    {debug_line,1971,1124},
    {match,
     {1971,5},
     {tuple,
      {1971,5},
      [{atom,{1971,6},error},{var,{1971,12},'_'},{nil,{1971,14}}]},
     {call,
      {1971,20},
      {remote,{1971,27},{atom,{1971,20},compile},{atom,{1971,28},file}},
      [{var,{1971,33},'Simple'},
       {block,0,
        [{cons,
          {1971,41},
          {atom,{1971,42},return},
          {cons,
           {1971,50},
           {tuple,
            {1971,50},
            [{atom,{1971,51},parse_transform},{atom,{1971,67},generic_pt}]},
           {cons,
            {1971,80},
            {tuple,{1971,80},[{atom,{1971,81},action},{atom,{1971,89},crash}]},
            {nil,{1971,95}}}}}]}]}},
    {debug_line,1973,1125},
    {match,
     {1973,5},
     {atom,{1973,5},error},
     {call,
      {1973,13},
      {remote,{1973,20},{atom,{1973,13},compile},{atom,{1973,21},file}},
      [{var,{1973,26},'Simple'},
       {block,0,
        [{cons,
          {1973,34},
          {atom,{1973,35},report},
          {cons,
           {1973,43},
           {tuple,
            {1973,43},
            [{atom,{1973,44},parse_transform},{atom,{1973,60},generic_pt}]},
           {cons,
            {1973,73},
            {tuple,{1973,73},[{atom,{1973,74},action},{atom,{1973,82},throw}]},
            {nil,{1973,88}}}}}]}]}},
    {debug_line,1974,1126},
    {match,
     {1974,5},
     {tuple,
      {1974,5},
      [{atom,{1974,6},error},{var,{1974,12},'_'},{nil,{1974,14}}]},
     {call,
      {1974,20},
      {remote,{1974,27},{atom,{1974,20},compile},{atom,{1974,28},file}},
      [{var,{1974,33},'Simple'},
       {block,0,
        [{cons,
          {1974,41},
          {atom,{1974,42},return},
          {cons,
           {1974,50},
           {tuple,
            {1974,50},
            [{atom,{1974,51},parse_transform},{atom,{1974,67},generic_pt}]},
           {cons,
            {1974,80},
            {tuple,{1974,80},[{atom,{1974,81},action},{atom,{1974,89},throw}]},
            {nil,{1974,95}}}}}]}]}},
    {debug_line,1976,1127},
    {match,
     {1976,5},
     {atom,{1976,5},error},
     {call,
      {1976,13},
      {remote,{1976,20},{atom,{1976,13},compile},{atom,{1976,21},file}},
      [{var,{1976,26},'Simple'},
       {block,0,
        [{cons,
          {1976,34},
          {atom,{1976,35},report},
          {cons,
           {1976,43},
           {tuple,
            {1976,43},
            [{atom,{1976,44},parse_transform},{atom,{1976,60},generic_pt}]},
           {cons,
            {1976,73},
            {tuple,{1976,73},[{atom,{1976,74},action},{atom,{1976,82},exit}]},
            {nil,{1976,87}}}}}]}]}},
    {debug_line,1977,1128},
    {match,
     {1977,5},
     {tuple,
      {1977,5},
      [{atom,{1977,6},error},{var,{1977,12},'_'},{nil,{1977,14}}]},
     {call,
      {1977,20},
      {remote,{1977,27},{atom,{1977,20},compile},{atom,{1977,28},file}},
      [{var,{1977,33},'Simple'},
       {block,0,
        [{cons,
          {1977,41},
          {atom,{1977,42},return},
          {cons,
           {1977,50},
           {tuple,
            {1977,50},
            [{atom,{1977,51},parse_transform},{atom,{1977,67},generic_pt}]},
           {cons,
            {1977,80},
            {tuple,{1977,80},[{atom,{1977,81},action},{atom,{1977,89},exit}]},
            {nil,{1977,94}}}}}]}]}},
    {debug_line,1980,1129},
    {match,
     {1980,5},
     {tuple,{1980,5},[{atom,{1980,6},ok},{atom,{1980,9},simple}]},
     {call,
      {1980,19},
      {remote,{1980,26},{atom,{1980,19},compile},{atom,{1980,27},file}},
      [{var,{1980,32},'Simple'},
       {block,0,
        [{cons,
          {1980,40},
          {atom,{1980,41},report},
          {cons,
           {1980,49},
           {tuple,
            {1980,49},
            [{atom,{1980,50},parse_transform},{atom,{1980,66},generic_pt}]},
           {cons,
            {1980,79},
            {tuple,
             {1980,79},
             [{atom,{1980,80},action},{atom,{1980,88},warning}]},
            {nil,{1980,96}}}}}]}]}},
    {debug_line,1981,1130},
    {match,
     {1981,5},
     {tuple,
      {1981,5},
      [{atom,{1981,6},ok},
       {atom,{1981,9},simple},
       {cons,{1981,16},{var,{1981,17},'_'},{var,{1981,19},'_'}}]},
     {call,
      {1981,25},
      {remote,{1981,32},{atom,{1981,25},compile},{atom,{1981,33},file}},
      [{var,{1981,38},'Simple'},
       {block,0,
        [{cons,
          {1981,46},
          {atom,{1981,47},return},
          {cons,
           {1981,55},
           {tuple,
            {1981,55},
            [{atom,{1981,56},parse_transform},{atom,{1981,72},generic_pt}]},
           {cons,
            {1981,85},
            {tuple,
             {1981,85},
             [{atom,{1981,86},action},{atom,{1981,94},warning}]},
            {nil,{1981,102}}}}}]}]}},
    {debug_line,1982,1131},
    {match,
     {1982,5},
     {atom,{1982,5},error},
     {call,
      {1982,13},
      {remote,{1982,20},{atom,{1982,13},compile},{atom,{1982,21},file}},
      [{var,{1982,26},'Simple'},
       {block,0,
        [{cons,
          {1982,34},
          {atom,{1982,35},report},
          {cons,
           {1982,43},
           {tuple,
            {1982,43},
            [{atom,{1982,44},parse_transform},{atom,{1982,60},generic_pt}]},
           {cons,
            {1982,73},
            {tuple,{1982,73},[{atom,{1982,74},action},{atom,{1982,82},error}]},
            {nil,{1982,88}}}}}]}]}},
    {debug_line,1983,1132},
    {match,
     {1983,5},
     {tuple,
      {1983,5},
      [{atom,{1983,6},error},
       {cons,{1983,12},{var,{1983,13},'_'},{var,{1983,15},'_'}},
       {cons,{1983,18},{var,{1983,19},'_'},{var,{1983,21},'_'}}]},
     {call,
      {1983,27},
      {remote,{1983,34},{atom,{1983,27},compile},{atom,{1983,35},file}},
      [{var,{1983,40},'Simple'},
       {block,0,
        [{cons,
          {1983,48},
          {atom,{1983,49},return},
          {cons,
           {1983,57},
           {tuple,
            {1983,57},
            [{atom,{1983,58},parse_transform},{atom,{1983,74},generic_pt}]},
           {cons,
            {1983,87},
            {tuple,{1983,87},[{atom,{1983,88},action},{atom,{1983,96},error}]},
            {nil,{1983,102}}}}}]}]}},
    {debug_line,1984,1133},
    {match,
     {1984,5},
     {atom,{1984,5},error},
     {call,
      {1984,13},
      {remote,{1984,20},{atom,{1984,13},compile},{atom,{1984,21},file}},
      [{var,{1984,26},'Simple'},
       {block,0,
        [{cons,
          {1984,34},
          {atom,{1984,35},report},
          {cons,
           {1984,43},
           {tuple,
            {1984,43},
            [{atom,{1984,44},parse_transform},{atom,{1984,60},generic_pt}]},
           {cons,
            {1984,73},
            {tuple,
             {1984,73},
             [{atom,{1984,74},action},{atom,{1984,82},undefined_error}]},
            {nil,{1984,98}}}}}]}]}},
    {debug_line,1985,1134},
    {match,
     {1985,5},
     {tuple,
      {1985,5},
      [{atom,{1985,6},error},
       {cons,{1985,12},{var,{1985,13},'_'},{var,{1985,15},'_'}},
       {nil,{1985,18}}]},
     {call,
      {1985,24},
      {remote,{1985,31},{atom,{1985,24},compile},{atom,{1985,32},file}},
      [{var,{1985,37},'Simple'},
       {block,0,
        [{cons,
          {1985,45},
          {atom,{1985,46},return},
          {cons,
           {1985,54},
           {tuple,
            {1985,54},
            [{atom,{1985,55},parse_transform},{atom,{1985,71},generic_pt}]},
           {cons,
            {1985,84},
            {tuple,
             {1985,84},
             [{atom,{1985,85},action},{atom,{1985,93},undefined_error}]},
            {nil,{1985,109}}}}}]}]}},
    {debug_line,1987,1135},
    {atom,{1987,5},ok}]}]}.
{function,
 {1989,1},
 compile_partition_warnings,2,
 [{clause,
   {1989,1},
   [{var,{1989,1},'_'},{var,{1989,1},'_'}],
   [[{call,
      {1989,1},
      {remote,{1989,1},{atom,{1989,1},fake},{atom,{1989,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1989,1136},{atom,{1989,1},ignore}]},
  {clause,
   {1989,1},
   [{var,{1989,28},'Source'},{var,{1989,36},'Opts'}],
   [],
   [{debug_line,1990,1137},
    {'case',
     {1990,5},
     {call,
      {1990,10},
      {remote,{1990,17},{atom,{1990,10},compile},{atom,{1990,18},file}},
      [{var,{1990,23},'Source'},
       {block,0,
        [{cons,
          {1990,31},
          {atom,{1990,32},binary},
          {cons,{1990,40},{atom,{1990,40},return},{var,{1990,49},'Opts'}}}]}]},
     [{clause,
       {1991,9},
       [{tuple,
         {1991,9},
         [{atom,{1991,10},ok},
          {atom,{1991,13},big},
          {bin,
           {1991,17},
           [{bin_element,{1991,19},{var,{1991,19},'_'},default,[binary]}]},
          {var,{1991,30},'Ws0'}]}],
       [],
       [{debug_line,1992,1138},
        {match,
         {1992,13},
         {cons,
          {1992,13},
          {tuple,
           {1992,14},
           [{var,{1992,15},'_SourcePath'},{var,{1992,27},'Ws'}]},
          {nil,{1992,30}}},
         {var,{1992,34},'Ws0'}},
        {debug_line,1995,1139},
        {call,
         {1995,13},
         {remote,{1995,18},{atom,{1995,13},lists},{atom,{1995,19},partition}},
         [{block,0,
           [{'fun',
             {1995,29},
             {clauses,
              [{clause,
                {1995,32},
                [{tuple,
                  {1995,33},
                  [{tuple,{1995,34},[{var,{1995,35},'L'},{var,{1995,37},'C'}]},
                   {var,{1995,40},'_'},
                   {var,{1995,42},'_'}]}],
                [[{call,
                   {1995,51},
                   {remote,
                    {1995,51},
                    {atom,{1995,51},erlang},
                    {atom,{1995,51},is_integer}},
                   [{var,{1995,62},'L'}]},
                  {call,
                   {1995,66},
                   {remote,
                    {1995,66},
                    {atom,{1995,66},erlang},
                    {atom,{1995,66},is_integer}},
                   [{var,{1995,77},'C'}]}]],
                [{atom,{1995,83},true}]},
               {clause,
                {1996,32},
                [{tuple,
                  {1996,33},
                  [{var,{1996,34},'L'},
                   {var,{1996,36},'_'},
                   {var,{1996,38},'_'}]}],
                [[{call,
                   {1996,47},
                   {remote,
                    {1996,47},
                    {atom,{1996,47},erlang},
                    {atom,{1996,47},is_integer}},
                   [{var,{1996,58},'L'}]}]],
                [{debug_line,1996,1140},{atom,{1996,64},false}]}]}}]},
          {var,{1997,34},'Ws'}]}]},
      {clause,
       {1998,9},
       [{var,{1998,9},'Error'}],
       [],
       [{debug_line,1999,1141},{var,{1999,13},'Error'}]}]}]}]}.
{function,
 {2003,1},
 erl_compile_api,1,
 [{clause,
   {2003,1},
   [{var,{2003,1},'_'}],
   [[{call,
      {2003,1},
      {remote,{2003,1},{atom,{2003,1},fake},{atom,{2003,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2003,1142},{atom,{2003,1},ignore}]},
  {clause,
   {2003,1},
   [{var,{2003,17},'Config'}],
   [],
   [{debug_line,2004,1143},
    {match,
     {2004,5},
     {var,{2004,5},'DataDir'},
     {call,
      {2004,15},
      {remote,{2004,24},{atom,{2004,15},proplists},{atom,{2004,25},get_value}},
      [{atom,{2004,35},data_dir},{var,{2004,45},'Config'}]}},
    {debug_line,2005,1144},
    {match,
     {2005,5},
     {var,{2005,5},'PrivDir'},
     {call,
      {2005,15},
      {remote,{2005,24},{atom,{2005,15},proplists},{atom,{2005,25},get_value}},
      [{atom,{2005,35},priv_dir},{var,{2005,45},'Config'}]}},
    {debug_line,2006,1145},
    {match,
     {2006,5},
     {var,{2006,5},'Simple'},
     {call,
      {2006,14},
      {remote,{2006,22},{atom,{2006,14},filename},{atom,{2006,23},join}},
      [{var,{2006,28},'DataDir'},
       {block,0,[{string,{2006,37},"simple.erl"}]}]}},
    {debug_line,2008,1146},
    {match,
     {2008,5},
     {var,{2008,5},'Opts'},
     {tuple,
      {2008,12},
      [{atom,{2008,12},options},
       {nil,{2008,12}},
       {var,{2008,28},'PrivDir'},
       {atom,{2008,12},undefined},
       {nil,{2008,12}},
       {integer,{2008,12},1},
       {atom,{2008,12},false},
       {integer,{2008,12},999},
       {nil,{2008,12}},
       {string,{2008,12},[]},
       {atom,{2008,12},undefined}]}},
    {debug_line,2009,1147},
    {match,
     {2009,5},
     {var,{2009,5},'BinOpts'},
     {block,
      {2009,15},
      [{match,{2009,15},{var,{2009,15},rec0},{var,{2009,15},'Opts'}},
       {'case',
        {2009,28},
        {var,{2009,15},rec0},
        [{clause,
          {2009,28},
          [{tuple,
            {2009,28},
            [{atom,{2009,28},options},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'},
             {var,{2009,28},'_'}]}],
          [],
          [{call,
            {2009,28},
            {remote,
             {2009,28},
             {atom,{2009,28},erlang},
             {atom,{2009,28},setelement}},
            [{integer,{2009,28},9},
             {var,{2009,15},rec0},
             {cons,{2009,37},{atom,{2009,38},binary},{nil,{2009,44}}}]}]},
         {clause,
          [{generated,true},{location,{2009,28}}],
          [{var,[{generated,true},{location,{2009,28}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2009,28}}],
            {remote,
             [{generated,true},{location,{2009,28}}],
             {atom,[{generated,true},{location,{2009,28}}],erlang},
             {atom,[{generated,true},{location,{2009,28}}],error}},
            [{tuple,
              [{generated,true},{location,{2009,28}}],
              [{atom,[{generated,true},{location,{2009,28}}],badrecord},
               {var,{2009,15},rec0}]}]}]}]}]}},
    {debug_line,2011,1148},
    {match,
     {2011,5},
     {atom,{2011,5},ok},
     {call,
      {2011,10},
      {remote,{2011,17},{atom,{2011,10},compile},{atom,{2011,18},compile}},
      [{var,{2011,26},'Simple'},
       {block,0,[{string,{2011,34},"ignored"}]},
       {var,{2011,45},'Opts'}]}},
    {debug_line,2012,1149},
    {match,
     {2012,5},
     {atom,{2012,5},ok},
     {call,
      {2012,10},
      {remote,{2012,17},{atom,{2012,10},compile},{atom,{2012,18},compile}},
      [{var,{2012,26},'Simple'},
       {block,0,[{string,{2012,34},"ignored"}]},
       {block,0,
        [{block,
          {2012,45},
          [{match,
            {2012,70},
            {var,{2012,70},rec1},
            {cons,{2012,79},{var,{2012,80},'PrivDir'},{nil,{2012,87}}}},
           {match,{2012,45},{var,{2012,45},rec2},{var,{2012,45},'Opts'}},
           {'case',
            {2012,70},
            {var,{2012,45},rec2},
            [{clause,
              {2012,70},
              [{tuple,
                {2012,70},
                [{atom,{2012,70},options},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'},
                 {var,{2012,70},'_'}]}],
              [],
              [{call,
                {2012,70},
                {remote,
                 {2012,70},
                 {atom,{2012,70},erlang},
                 {atom,{2012,70},setelement}},
                [{integer,{2012,70},2},
                 {call,
                  {2012,58},
                  {remote,
                   {2012,58},
                   {atom,{2012,58},erlang},
                   {atom,{2012,58},setelement}},
                  [{integer,{2012,58},11},
                   {var,{2012,45},rec2},
                   {var,{2012,62},'PrivDir'}]},
                 {var,{2012,70},rec1}]}]},
             {clause,
              [{generated,true},{location,{2012,70}}],
              [{var,[{generated,true},{location,{2012,70}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2012,70}}],
                {remote,
                 [{generated,true},{location,{2012,70}}],
                 {atom,[{generated,true},{location,{2012,70}}],erlang},
                 {atom,[{generated,true},{location,{2012,70}}],error}},
                [{tuple,
                  [{generated,true},{location,{2012,70}}],
                  [{atom,[{generated,true},{location,{2012,70}}],badrecord},
                   {var,{2012,45},rec2}]}]}]}]}]}]}]}},
    {debug_line,2013,1150},
    {match,
     {2013,5},
     {tuple,
      {2013,5},
      [{atom,{2013,6},ok},{atom,{2013,9},simple},{var,{2013,16},'_'}]},
     {call,
      {2013,21},
      {remote,{2013,28},{atom,{2013,21},compile},{atom,{2013,29},compile}},
      [{var,{2013,37},'Simple'},
       {block,0,[{string,{2013,45},"ignored"}]},
       {var,{2013,56},'BinOpts'}]}},
    {debug_line,2015,1151},
    {match,
     {2015,5},
     {atom,{2015,5},ok},
     {call,
      {2015,10},
      {remote,{2015,17},{atom,{2015,10},compile},{atom,{2015,18},compile}},
      [{var,{2015,26},'Simple'},
       {block,0,[{string,{2015,34},"ignored"}]},
       {block,0,
        [{block,
          {2015,45},
          [{match,{2015,45},{var,{2015,45},rec3},{var,{2015,45},'Opts'}},
           {'case',
            {2015,58},
            {var,{2015,45},rec3},
            [{clause,
              {2015,58},
              [{tuple,
                {2015,58},
                [{atom,{2015,58},options},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'},
                 {var,{2015,58},'_'}]}],
              [],
              [{call,
                {2015,58},
                {remote,
                 {2015,58},
                 {atom,{2015,58},erlang},
                 {atom,{2015,58},setelement}},
                [{integer,{2015,58},9},
                 {var,{2015,45},rec3},
                 {cons,{2015,67},{atom,{2015,68},dabstr},{nil,{2015,74}}}]}]},
             {clause,
              [{generated,true},{location,{2015,58}}],
              [{var,[{generated,true},{location,{2015,58}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2015,58}}],
                {remote,
                 [{generated,true},{location,{2015,58}}],
                 {atom,[{generated,true},{location,{2015,58}}],erlang},
                 {atom,[{generated,true},{location,{2015,58}}],error}},
                [{tuple,
                  [{generated,true},{location,{2015,58}}],
                  [{atom,[{generated,true},{location,{2015,58}}],badrecord},
                   {var,{2015,45},rec3}]}]}]}]}]}]}]}},
    {debug_line,2016,1152},
    {match,
     {2016,5},
     {atom,{2016,5},ok},
     {call,
      {2016,10},
      {remote,{2016,17},{atom,{2016,10},compile},{atom,{2016,18},compile}},
      [{var,{2016,26},'Simple'},
       {block,0,[{string,{2016,34},"ignored"}]},
       {block,0,
        [{block,
          {2016,45},
          [{match,{2016,45},{var,{2016,45},rec4},{var,{2016,45},'Opts'}},
           {'case',
            {2016,58},
            {var,{2016,45},rec4},
            [{clause,
              {2016,58},
              [{tuple,
                {2016,58},
                [{atom,{2016,58},options},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'},
                 {var,{2016,58},'_'}]}],
              [],
              [{call,
                {2016,58},
                {remote,
                 {2016,58},
                 {atom,{2016,58},erlang},
                 {atom,{2016,58},setelement}},
                [{integer,{2016,58},9},
                 {var,{2016,45},rec4},
                 {cons,{2016,67},{atom,{2016,68},to_core},{nil,{2016,75}}}]}]},
             {clause,
              [{generated,true},{location,{2016,58}}],
              [{var,[{generated,true},{location,{2016,58}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2016,58}}],
                {remote,
                 [{generated,true},{location,{2016,58}}],
                 {atom,[{generated,true},{location,{2016,58}}],erlang},
                 {atom,[{generated,true},{location,{2016,58}}],error}},
                [{tuple,
                  [{generated,true},{location,{2016,58}}],
                  [{atom,[{generated,true},{location,{2016,58}}],badrecord},
                   {var,{2016,45},rec4}]}]}]}]}]}]}]}},
    {debug_line,2017,1153},
    {match,
     {2017,5},
     {atom,{2017,5},ok},
     {call,
      {2017,10},
      {remote,{2017,17},{atom,{2017,10},compile},{atom,{2017,18},compile}},
      [{var,{2017,26},'Simple'},
       {block,0,[{string,{2017,34},"ignored"}]},
       {block,0,
        [{block,
          {2017,45},
          [{match,{2017,45},{var,{2017,45},rec5},{var,{2017,45},'Opts'}},
           {'case',
            {2017,58},
            {var,{2017,45},rec5},
            [{clause,
              {2017,58},
              [{tuple,
                {2017,58},
                [{atom,{2017,58},options},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'},
                 {var,{2017,58},'_'}]}],
              [],
              [{call,
                {2017,58},
                {remote,
                 {2017,58},
                 {atom,{2017,58},erlang},
                 {atom,{2017,58},setelement}},
                [{integer,{2017,58},9},
                 {var,{2017,45},rec5},
                 {cons,{2017,67},{atom,{2017,68},to_asm},{nil,{2017,74}}}]}]},
             {clause,
              [{generated,true},{location,{2017,58}}],
              [{var,[{generated,true},{location,{2017,58}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2017,58}}],
                {remote,
                 [{generated,true},{location,{2017,58}}],
                 {atom,[{generated,true},{location,{2017,58}}],erlang},
                 {atom,[{generated,true},{location,{2017,58}}],error}},
                [{tuple,
                  [{generated,true},{location,{2017,58}}],
                  [{atom,[{generated,true},{location,{2017,58}}],badrecord},
                   {var,{2017,45},rec5}]}]}]}]}]}]}]}},
    {debug_line,2019,1154},
    {match,
     {2019,5},
     {var,{2019,5},'SimpleAbstr'},
     {call,
      {2019,19},
      {remote,{2019,27},{atom,{2019,19},filename},{atom,{2019,28},join}},
      [{var,{2019,33},'PrivDir'},
       {block,0,[{string,{2019,42},"simple.abstr"}]}]}},
    {debug_line,2020,1155},
    {match,
     {2020,5},
     {var,{2020,5},'SimpleCore'},
     {call,
      {2020,18},
      {remote,{2020,26},{atom,{2020,18},filename},{atom,{2020,27},join}},
      [{var,{2020,32},'PrivDir'},
       {block,0,[{string,{2020,41},"simple.core"}]}]}},
    {debug_line,2021,1156},
    {match,
     {2021,5},
     {var,{2021,5},'SimpleAsm'},
     {call,
      {2021,17},
      {remote,{2021,25},{atom,{2021,17},filename},{atom,{2021,26},join}},
      [{var,{2021,31},'PrivDir'},{block,0,[{string,{2021,40},"simple.S"}]}]}},
    {debug_line,2023,1157},
    {match,
     {2023,5},
     {atom,{2023,5},ok},
     {call,
      {2023,10},
      {remote,
       {2023,17},
       {atom,{2023,10},compile},
       {atom,{2023,18},compile_abstr}},
      [{var,{2023,32},'SimpleAbstr'},
       {block,0,[{string,{2023,45},"ignored"}]},
       {var,{2023,56},'Opts'}]}},
    {debug_line,2024,1158},
    {match,
     {2024,5},
     {atom,{2024,5},ok},
     {call,
      {2024,10},
      {remote,
       {2024,17},
       {atom,{2024,10},compile},
       {atom,{2024,18},compile_core}},
      [{var,{2024,31},'SimpleCore'},
       {block,0,[{string,{2024,43},"ignored"}]},
       {var,{2024,54},'Opts'}]}},
    {debug_line,2025,1159},
    {match,
     {2025,5},
     {atom,{2025,5},ok},
     {call,
      {2025,10},
      {remote,{2025,17},{atom,{2025,10},compile},{atom,{2025,18},compile_asm}},
      [{var,{2025,30},'SimpleAsm'},
       {block,0,[{string,{2025,41},"ignored"}]},
       {var,{2025,52},'Opts'}]}},
    {debug_line,2027,1160},
    {match,
     {2027,5},
     {tuple,
      {2027,5},
      [{atom,{2027,6},ok},
       {atom,{2027,9},simple},
       {bin,
        {2027,16},
        [{bin_element,{2027,18},{var,{2027,18},'_'},default,[binary]}]}]},
     {call,
      {2027,32},
      {remote,
       {2027,39},
       {atom,{2027,32},compile},
       {atom,{2027,40},compile_abstr}},
      [{var,{2027,54},'SimpleAbstr'},
       {block,0,[{string,{2027,67},"ignored"}]},
       {var,{2027,78},'BinOpts'}]}},
    {debug_line,2028,1161},
    {match,
     {2028,5},
     {tuple,
      {2028,5},
      [{atom,{2028,6},ok},
       {atom,{2028,9},simple},
       {bin,
        {2028,16},
        [{bin_element,{2028,18},{var,{2028,18},'_'},default,[binary]}]}]},
     {call,
      {2028,32},
      {remote,
       {2028,39},
       {atom,{2028,32},compile},
       {atom,{2028,40},compile_core}},
      [{var,{2028,53},'SimpleCore'},
       {block,0,[{string,{2028,65},"ignored"}]},
       {var,{2028,76},'BinOpts'}]}},
    {debug_line,2029,1162},
    {match,
     {2029,5},
     {tuple,
      {2029,5},
      [{atom,{2029,6},ok},
       {atom,{2029,9},simple},
       {bin,
        {2029,16},
        [{bin_element,{2029,18},{var,{2029,18},'_'},default,[binary]}]}]},
     {call,
      {2029,32},
      {remote,{2029,39},{atom,{2029,32},compile},{atom,{2029,40},compile_asm}},
      [{var,{2029,52},'SimpleAsm'},
       {block,0,[{string,{2029,63},"ignored"}]},
       {var,{2029,74},'BinOpts'}]}},
    {debug_line,2031,1163},
    {match,
     {2031,5},
     {var,{2031,5},'NeedsDefines'},
     {call,
      {2031,20},
      {remote,{2031,28},{atom,{2031,20},filename},{atom,{2031,29},join}},
      [{var,{2031,34},'DataDir'},
       {block,0,[{string,{2031,43},"needs_defines.erl"}]}]}},
    {debug_line,2032,1164},
    {match,
     {2032,5},
     {atom,{2032,5},ok},
     {call,
      {2032,10},
      {remote,{2032,17},{atom,{2032,10},compile},{atom,{2032,18},compile}},
      [{var,{2032,26},'NeedsDefines'},
       {block,0,[{string,{2032,40},"ignored"}]},
       {block,0,
        [{block,
          {2032,51},
          [{match,{2032,51},{var,{2032,51},rec6},{var,{2032,51},'Opts'}},
           {'case',
            {2032,64},
            {var,{2032,51},rec6},
            [{clause,
              {2032,64},
              [{tuple,
                {2032,64},
                [{atom,{2032,64},options},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'},
                 {var,{2032,64},'_'}]}],
              [],
              [{call,
                {2032,64},
                {remote,
                 {2032,64},
                 {atom,{2032,64},erlang},
                 {atom,{2032,64},setelement}},
                [{integer,{2032,64},5},
                 {var,{2032,51},rec6},
                 {cons,
                  {2032,72},
                  {atom,{2032,73},compile_this},
                  {cons,
                   {2032,86},
                   {tuple,
                    {2032,86},
                    [{atom,{2032,87},'TEST_RESULT'},
                     {atom,{2032,101},whatever}]},
                   {nil,{2032,110}}}}]}]},
             {clause,
              [{generated,true},{location,{2032,64}}],
              [{var,[{generated,true},{location,{2032,64}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2032,64}}],
                {remote,
                 [{generated,true},{location,{2032,64}}],
                 {atom,[{generated,true},{location,{2032,64}}],erlang},
                 {atom,[{generated,true},{location,{2032,64}}],error}},
                [{tuple,
                  [{generated,true},{location,{2032,64}}],
                  [{atom,[{generated,true},{location,{2032,64}}],badrecord},
                   {var,{2032,51},rec6}]}]}]}]}]}]}]}},
    {debug_line,2034,1165},
    {match,
     {2034,5},
     {atom,{2034,5},ok},
     {call,
      {2034,10},
      {remote,{2034,14},{atom,{2034,10},file},{atom,{2034,15},delete}},
      [{var,{2034,22},'SimpleAbstr'}]}},
    {debug_line,2035,1166},
    {match,
     {2035,5},
     {atom,{2035,5},ok},
     {call,
      {2035,10},
      {remote,{2035,14},{atom,{2035,10},file},{atom,{2035,15},delete}},
      [{var,{2035,22},'SimpleCore'}]}},
    {debug_line,2036,1167},
    {match,
     {2036,5},
     {atom,{2036,5},ok},
     {call,
      {2036,10},
      {remote,{2036,14},{atom,{2036,10},file},{atom,{2036,15},delete}},
      [{var,{2036,22},'SimpleAsm'}]}},
    {debug_line,2037,1168},
    {match,
     {2037,5},
     {atom,{2037,5},ok},
     {call,
      {2037,10},
      {remote,{2037,14},{atom,{2037,10},file},{atom,{2037,15},delete}},
      [{block,0,
        [{call,
          {2037,22},
          {remote,{2037,30},{atom,{2037,22},filename},{atom,{2037,31},join}},
          [{var,{2037,36},'PrivDir'},
           {block,0,[{string,{2037,45},"simple.beam"}]}]}]}]}},
    {debug_line,2038,1169},
    {match,
     {2038,5},
     {atom,{2038,5},ok},
     {call,
      {2038,10},
      {remote,{2038,14},{atom,{2038,10},file},{atom,{2038,15},delete}},
      [{block,0,
        [{call,
          {2038,22},
          {remote,{2038,30},{atom,{2038,22},filename},{atom,{2038,31},join}},
          [{var,{2038,36},'PrivDir'},
           {block,0,[{string,{2038,45},"needs_defines.beam"}]}]}]}]}},
    {debug_line,2040,1170},
    {atom,{2040,5},ok}]}]}.
{function,
 {2049,1},
 types_pp,1,
 [{clause,
   {2049,1},
   [{var,{2049,1},'_'}],
   [[{call,
      {2049,1},
      {remote,{2049,1},{atom,{2049,1},fake},{atom,{2049,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2049,1171},{atom,{2049,1},ignore}]},
  {clause,
   {2049,1},
   [{var,{2049,10},'Config'}],
   [[{call,
      {2049,23},
      {remote,{2049,23},{atom,{2049,23},erlang},{atom,{2049,23},is_list}},
      [{var,{2049,31},'Config'}]}]],
   [{debug_line,2050,1172},
    {match,
     {2050,5},
     {var,{2050,5},'DataDir'},
     {call,
      {2050,15},
      {remote,{2050,24},{atom,{2050,15},proplists},{atom,{2050,25},get_value}},
      [{atom,{2050,35},data_dir},{var,{2050,45},'Config'}]}},
    {debug_line,2051,1173},
    {match,
     {2051,5},
     {var,{2051,5},'PrivDir'},
     {call,
      {2051,15},
      {remote,{2051,24},{atom,{2051,15},proplists},{atom,{2051,25},get_value}},
      [{atom,{2051,35},priv_dir},{var,{2051,45},'Config'}]}},
    {debug_line,2052,1174},
    {match,
     {2052,5},
     {var,{2052,5},'TargetDir'},
     {call,
      {2052,17},
      {remote,{2052,25},{atom,{2052,17},filename},{atom,{2052,26},join}},
      [{var,{2052,31},'PrivDir'},{atom,{2052,40},types_pp}]}},
    {debug_line,2053,1175},
    {match,
     {2053,5},
     {var,{2053,5},'File'},
     {call,
      {2053,12},
      {remote,{2053,20},{atom,{2053,12},filename},{atom,{2053,21},join}},
      [{var,{2053,26},'DataDir'},
       {block,0,[{string,{2053,35},"types_pp.erl"}]}]}},
    {debug_line,2054,1176},
    {match,
     {2054,5},
     {var,{2054,5},'Listing'},
     {call,
      {2054,15},
      {remote,{2054,23},{atom,{2054,15},filename},{atom,{2054,24},join}},
      [{var,{2054,29},'TargetDir'},
       {block,0,[{string,{2054,40},"types_pp.ssaopt"}]}]}},
    {debug_line,2055,1177},
    {match,
     {2055,5},
     {atom,{2055,5},ok},
     {call,
      {2055,10},
      {remote,{2055,14},{atom,{2055,10},file},{atom,{2055,15},make_dir}},
      [{var,{2055,24},'TargetDir'}]}},
    {debug_line,2057,1178},
    {match,
     {2057,5},
     {tuple,{2057,5},[{atom,{2057,6},ok},{var,{2057,9},'_'}]},
     {call,
      {2057,14},
      {remote,{2057,21},{atom,{2057,14},compile},{atom,{2057,22},file}},
      [{var,{2057,27},'File'},
       {block,0,
        [{cons,
          {2057,33},
          {atom,{2057,34},dssaopt},
          {cons,
           {2057,43},
           {tuple,
            {2057,43},
            [{atom,{2057,44},outdir},{var,{2057,52},'TargetDir'}]},
           {nil,{2057,62}}}}]}]}},
    {debug_line,2058,1179},
    {match,
     {2058,5},
     {tuple,{2058,5},[{atom,{2058,6},ok},{var,{2058,10},'Data'}]},
     {call,
      {2058,18},
      {remote,{2058,22},{atom,{2058,18},file},{atom,{2058,23},read_file}},
      [{var,{2058,33},'Listing'}]}},
    {debug_line,2059,1180},
    {match,
     {2059,5},
     {var,{2059,5},'Lines'},
     {call,
      {2059,13},
      {remote,{2059,19},{atom,{2059,13},string},{atom,{2059,20},split}},
      [{block,0,
        [{call,
          {2059,26},
          {remote,
           {2059,26},
           {atom,{2059,26},erlang},
           {atom,{2059,26},binary_to_list}},
          [{var,{2059,41},'Data'}]}]},
       {block,0,[{string,{2059,48},"\n"}]},
       {atom,{2059,54},all}]}},
    {debug_line,2060,1181},
    {match,
     {2060,5},
     {var,{2060,5},'ResultTypes'},
     {call,
      {2060,19},
      {atom,{2060,19},get_result_types},
      [{var,{2060,36},'Lines'}]}},
    {debug_line,2061,1182},
    {call,
     {2061,5},
     {remote,{2061,7},{atom,{2061,5},io},{atom,{2061,8},format}},
     [{block,0,[{string,{2061,15},"Calls: ~p~n"}]},
      {block,0,
       [{cons,{2061,30},{var,{2061,31},'ResultTypes'},{nil,{2061,42}}}]}]},
    {debug_line,2063,1183},
    {match,
     {2063,5},
     {var,{2063,5},'TypesToCheck'},
     {cons,
      {2063,20},
      {tuple,
       {2063,21},
       [{atom,{2063,22},make_atom},{string,{2063,33},"'an_atom'"}]},
      {cons,
       {2064,21},
       {tuple,
        {2064,21},
        [{atom,{2064,22},make_number},{string,{2064,35},"number()"}]},
       {cons,
        {2065,21},
        {tuple,
         {2065,21},
         [{atom,{2065,22},make_float},{string,{2065,34},"3.14"}]},
        {cons,
         {2066,21},
         {tuple,
          {2066,21},
          [{atom,{2066,22},make_integer},{string,{2066,36},"17"}]},
         {cons,
          {2067,21},
          {tuple,
           {2067,21},
           [{atom,{2067,22},make_integer_range},{string,{2067,42},"0..3"}]},
          {cons,
           {2068,21},
           {tuple,
            {2068,21},
            [{atom,{2068,22},make_nil},{string,{2068,32},"nil()"}]},
           {cons,
            {2069,21},
            {tuple,
             {2069,21},
             [{atom,{2069,22},make_list},{string,{2069,33},"list(any())"}]},
            {cons,
             {2070,21},
             {tuple,
              {2070,21},
              [{atom,{2070,22},make_list_of_ints},
               {string,{2070,41},"list(integer())"}]},
             {cons,
              {2071,21},
              {tuple,
               {2071,21},
               [{atom,{2071,22},make_maybe_improper_list},
                {string,{2072,22},"maybe_improper_list(any(), any())"}]},
              {cons,
               {2073,21},
               {tuple,
                {2073,21},
                [{atom,{2073,22},make_nonempty_list},
                 {string,{2073,42},"nonempty_list(any())"}]},
               {cons,
                {2074,21},
                {tuple,
                 {2074,21},
                 [{atom,{2074,22},make_nonempty_improper_list},
                  {string,
                   {2075,22},
                   "nonempty_improper_list(any(), ''end'')"}]},
                {cons,
                 {2076,21},
                 {tuple,
                  {2076,21},
                  [{atom,{2076,22},make_empty_map},{string,{2076,38},"#{}"}]},
                 {cons,
                  {2077,21},
                  {tuple,
                   {2077,21},
                   [{atom,{2077,22},make_map},{string,{2077,32},"map()"}]},
                  {cons,
                   {2078,21},
                   {tuple,
                    {2078,21},
                    [{atom,{2078,22},make_map_known_types},
                     {string,{2078,44},"#{integer()=>float()}"}]},
                   {cons,
                    {2079,21},
                    {tuple,
                     {2079,21},
                     [{atom,{2079,22},make_fun_unknown_arity_known_type},
                      {string,{2080,22},"fun((...) -> number())"}]},
                    {cons,
                     {2081,21},
                     {tuple,
                      {2081,21},
                      [{atom,{2081,22},make_fun_known_arity_known_type},
                       {string,{2082,22},"fun((_, _) -> number())"}]},
                     {cons,
                      {2083,21},
                      {tuple,
                       {2083,21},
                       [{atom,{2083,22},make_fun_unknown_arity_unknown_type},
                        {string,{2084,22},"fun()"}]},
                      {cons,
                       {2085,21},
                       {tuple,
                        {2085,21},
                        [{atom,{2085,22},make_fun_known_arity_unknown_type},
                         {string,{2086,22},"fun((_, _))"}]},
                       {cons,
                        {2087,21},
                        {tuple,
                         {2087,21},
                         [{atom,{2087,22},make_unconstrained_tuple},
                          {string,{2087,48},"{...}"}]},
                        {cons,
                         {2088,21},
                         {tuple,
                          {2088,21},
                          [{atom,{2088,22},make_known_size_tuple},
                           {string,
                            {2089,22},
                            "{any(), any(), any(), any(), any()}"}]},
                         {cons,
                          {2090,21},
                          {tuple,
                           {2090,21},
                           [{atom,{2090,22},make_inexact_tuple},
                            {string,{2090,42},"{any(), any(), any(), ...}"}]},
                          {cons,
                           {2091,21},
                           {tuple,
                            {2091,21},
                            [{atom,{2091,22},make_union},
                             {string,
                              {2092,22},
                              "'foo' | nonempty_list(1..3) | number(3, 7) | {'tag0', 1, 2} | {'tag1', 3, 4} | bitstring(8)"}]},
                           {cons,
                            {2094,21},
                            {tuple,
                             {2094,21},
                             [{atom,{2094,22},make_bitstring},
                              {string,{2094,38},"bitstring(8)"}]},
                            {cons,
                             {2095,21},
                             {tuple,
                              {2095,21},
                              [{atom,{2095,22},make_none},
                               {string,{2095,33},"none()"}]},
                             {nil,{2095,42}}}}}}}}}}}}}}}}}}}}}}}}}}},
    {debug_line,2096,1184},
    {call,
     {2096,5},
     {remote,{2096,10},{atom,{2096,5},lists},{atom,{2096,11},foreach}},
     [{block,0,
       [{'fun',
         {2096,19},
         {clauses,
          [{clause,
            {2096,22},
            [{tuple,
              {2096,23},
              [{var,{2096,24},'FunName'},{var,{2096,33},'Expected'}]}],
            [],
            [{debug_line,2097,1185},
             {match,
              {2097,27},
              {var,{2097,27},'Actual'},
              {call,
               {2097,36},
               {remote,
                {2097,36},
                {atom,{2097,36},erlang},
                {atom,{2097,36},map_get}},
               [{block,0,
                 [{call,
                   {2097,44},
                   {remote,
                    {2097,44},
                    {atom,{2097,44},erlang},
                    {atom,{2097,44},atom_to_list}},
                   [{var,{2097,57},'FunName'}]}]},
                {var,{2097,67},'ResultTypes'}]}},
             {debug_line,2098,1186},
             {'case',
              {2098,27},
              {var,{2098,32},'Actual'},
              [{clause,
                {2099,31},
                [{var,{2099,31},'Expected'}],
                [],
                [{debug_line,2100,1187},{atom,{2100,35},ok}]},
               {clause,
                {2101,31},
                [{var,{2101,31},'_'}],
                [],
                [{debug_line,2102,1188},
                 {call,
                  {2102,35},
                  {remote,{2102,37},{atom,{2102,35},ct},{atom,{2102,38},fail}},
                  [{block,0,
                    [{string,
                      {2102,43},
                      "Expected type of ~p is ~s, found ~s"}]},
                   {block,0,
                    [{debug_line,2103,1189},
                     {cons,
                      {2103,43},
                      {var,{2103,44},'FunName'},
                      {cons,
                       {2103,53},
                       {var,{2103,53},'Expected'},
                       {cons,
                        {2103,63},
                        {var,{2103,63},'Actual'},
                        {nil,{2103,69}}}}}]}]}]}]}]}]}}]},
      {var,{2105,24},'TypesToCheck'}]},
    {debug_line,2106,1190},
    {match,
     {2106,5},
     {atom,{2106,5},ok},
     {call,
      {2106,10},
      {remote,{2106,14},{atom,{2106,10},file},{atom,{2106,15},del_dir_r}},
      [{var,{2106,25},'TargetDir'}]}},
    {debug_line,2107,1191},
    {atom,{2107,5},ok}]}]}.
{function,{2112,1},
          get_result_types,1,
          [{clause,{2112,1},
                   [{var,{2112,1},'_'}],
                   [[{call,{2112,1},
                           {remote,{2112,1},
                                   {atom,{2112,1},fake},
                                   {atom,{2112,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2112,1192},{atom,{2112,1},ignore}]},
           {clause,{2112,1},
                   [{var,{2112,18},'Lines'}],
                   [],
                   [{debug_line,2113,1193},
                    {call,{2113,5},
                          {atom,{2113,5},get_result_types},
                          [{var,{2113,22},'Lines'},
                           {atom,{2113,29},none},
                           {block,0,[{map,{2113,35},[]}]}]}]}]}.
{function,
 {2115,1},
 get_result_types,3,
 [{clause,
   {2115,1},
   [{var,{2115,1},'_'},{var,{2115,1},'_'},{var,{2115,1},'_'}],
   [[{call,
      {2115,1},
      {remote,{2115,1},{atom,{2115,1},fake},{atom,{2115,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2115,1194},{atom,{2115,1},ignore}]},
  {clause,
   {2115,1},
   [{cons,
     {2115,18},
     {op,
      {2115,38},
      '++',
      {string,{2115,19},"  %% Result type:"},
      {var,{2115,40},'_'}},
     {cons,
      {2115,42},
      {op,
       {2115,52},
       '++',
       {string,{2115,42},"  %%    "},
       {var,{2115,54},'TypeLine'}},
      {var,{2115,63},'Lines'}}},
    {var,{2115,71},'_'},
    {var,{2115,74},'Acc'}],
   [],
   [{debug_line,2116,1195},
    {call,
     {2116,5},
     {atom,{2116,5},get_result_types},
     [{var,{2116,22},'Lines'},
      {var,{2116,29},'TypeLine'},
      {var,{2116,39},'Acc'}]}]},
  {clause,
   {2117,1},
   [{cons,{2117,18},{var,{2117,19},'Line'},{var,{2117,24},'Lines'}},
    {var,{2117,32},'TypeLine'},
    {var,{2117,42},'Acc0'}],
   [],
   [{debug_line,2118,1196},
    {match,
     {2118,5},
     {var,{2118,5},'Split'},
     {call,
      {2118,13},
      {remote,{2118,19},{atom,{2118,13},string},{atom,{2118,20},split}},
      [{var,{2118,26},'Line'},{block,0,[{string,{2118,32},"="}]}]}},
    {debug_line,2119,1197},
    {match,
     {2119,5},
     {var,{2119,5},'Acc'},
     {'case',
      {2119,11},
      {var,{2119,16},'Split'},
      [{clause,
        {2120,15},
        [{cons,
          {2120,15},
          {var,{2120,16},'_'},
          {cons,
           {2120,19},
           {op,
            {2120,27},
            '++',
            {string,{2120,19}," call"},
            {var,{2120,30},'Rest'}},
           {nil,{2120,34}}}}],
        [],
        [{debug_line,2121,1198},
         {'case',
          {2121,19},
          {call,
           {2121,24},
           {remote,{2121,30},{atom,{2121,24},string},{atom,{2121,31},split}},
           [{var,{2121,37},'Rest'},
            {block,0,[{string,{2121,43},"`"}]},
            {atom,{2121,48},all}]},
          [{clause,
            {2122,23},
            [{cons,
              {2122,23},
              {var,{2122,24},'_'},
              {cons,
               {2122,26},
               {var,{2122,26},'Callee'},
               {cons,{2122,33},{var,{2122,33},'_'},{nil,{2122,34}}}}}],
            [],
            [{debug_line,2123,1199},
             {map,
              {2123,31},
              {var,{2123,27},'Acc0'},
              [{map_field_assoc,
                {2123,41},
                {var,{2123,34},'Callee'},
                {var,{2123,44},'TypeLine'}}]}]},
           {clause,
            {2124,23},
            [{var,{2124,23},'_'}],
            [],
            [{debug_line,2125,1200},{var,{2125,27},'Acc0'}]}]}]},
       {clause,
        {2127,15},
        [{var,{2127,15},'_'}],
        [],
        [{debug_line,2128,1201},{var,{2128,19},'Acc0'}]}]}},
    {debug_line,2130,1202},
    {call,
     {2130,5},
     {atom,{2130,5},get_result_types},
     [{var,{2130,22},'Lines'},
      {var,{2130,29},'TypeLine'},
      {var,{2130,39},'Acc'}]}]},
  {clause,
   {2131,1},
   [{nil,{2131,18}},{var,{2131,22},'_'},{var,{2131,25},'Acc'}],
   [],
   [{debug_line,2132,1203},{var,{2132,5},'Acc'}]}]}.
{function,
    {2135,1},
    bs_init_writable,1,
    [{clause,
         {2135,1},
         [{var,{2135,1},'_'}],
         [[{call,
               {2135,1},
               {remote,
                   {2135,1},
                   {atom,{2135,1},fake},
                   {atom,{2135,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2135,1204},{atom,{2135,1},ignore}]},
     {clause,
         {2135,1},
         [{var,{2135,18},'Config'}],
         [],
         [{debug_line,2136,1205},
          {match,
              {2136,5},
              {var,{2136,5},'DataDir'},
              {call,
                  {2136,15},
                  {remote,
                      {2136,24},
                      {atom,{2136,15},proplists},
                      {atom,{2136,25},get_value}},
                  [{atom,{2136,35},data_dir},{var,{2136,45},'Config'}]}},
          {debug_line,2137,1206},
          {match,
              {2137,5},
              {var,{2137,5},'PrivDir'},
              {call,
                  {2137,15},
                  {remote,
                      {2137,24},
                      {atom,{2137,15},proplists},
                      {atom,{2137,25},get_value}},
                  [{atom,{2137,35},priv_dir},{var,{2137,45},'Config'}]}},
          {debug_line,2138,1207},
          {match,
              {2138,5},
              {var,{2138,5},'InFile'},
              {call,
                  {2138,14},
                  {remote,
                      {2138,22},
                      {atom,{2138,14},filename},
                      {atom,{2138,23},join}},
                  [{var,{2138,28},'DataDir'},
                   {block,0,[{string,{2138,37},"bs_init_writable.erl"}]}]}},
          {debug_line,2139,1208},
          {match,
              {2139,5},
              {var,{2139,5},'OutDir'},
              {call,
                  {2139,14},
                  {remote,
                      {2139,22},
                      {atom,{2139,14},filename},
                      {atom,{2139,23},join}},
                  [{var,{2139,28},'PrivDir'},
                   {block,0,[{string,{2139,37},"bs_init_writable"}]}]}},
          {debug_line,2140,1209},
          {match,
              {2140,5},
              {var,{2140,5},'OutFile'},
              {call,
                  {2140,15},
                  {remote,
                      {2140,23},
                      {atom,{2140,15},filename},
                      {atom,{2140,24},join}},
                  [{var,{2140,29},'OutDir'},
                   {block,0,[{string,{2140,37},"bs_init_writable.S"}]}]}},
          {debug_line,2141,1210},
          {match,
              {2141,5},
              {atom,{2141,5},ok},
              {call,
                  {2141,10},
                  {remote,
                      {2141,14},
                      {atom,{2141,10},file},
                      {atom,{2141,15},make_dir}},
                  [{var,{2141,24},'OutDir'}]}},
          {debug_line,2142,1211},
          {match,
              {2142,5},
              {tuple,
                  {2142,5},
                  [{atom,{2142,6},ok},{atom,{2142,9},bs_init_writable}]},
              {call,
                  {2142,29},
                  {remote,
                      {2142,36},
                      {atom,{2142,29},compile},
                      {atom,{2142,37},file}},
                  [{var,{2142,42},'InFile'},
                   {block,0,
                       [{cons,
                            {2142,50},
                            {atom,{2142,51},'S'},
                            {cons,
                                {2142,55},
                                {tuple,
                                    {2142,55},
                                    [{atom,{2142,56},outdir},
                                     {var,{2142,63},'OutDir'}]},
                                {nil,{2142,70}}}}]}]}},
          {debug_line,2143,1212},
          {match,
              {2143,5},
              {tuple,{2143,5},[{atom,{2143,6},ok},{var,{2143,9},'Listing'}]},
              {call,
                  {2143,20},
                  {remote,
                      {2143,24},
                      {atom,{2143,20},file},
                      {atom,{2143,25},read_file}},
                  [{var,{2143,35},'OutFile'}]}},
          {debug_line,2144,1213},
          {match,
              {2144,5},
              {var,{2144,5},'Os'},
              {cons,
                  {2144,10},
                  {atom,{2144,11},global},
                  {cons,
                      {2144,18},
                      {atom,{2144,18},multiline},
                      {cons,
                          {2144,28},
                          {tuple,
                              {2144,28},
                              [{atom,{2144,29},capture},
                               {atom,{2144,37},all_but_first},
                               {atom,{2144,51},list}]},
                          {nil,{2144,56}}}}}},
          {debug_line,2146,1214},
          {match,
              {2146,5},
              {atom,{2146,5},nomatch},
              {call,
                  {2146,15},
                  {remote,{2146,17},{atom,{2146,15},re},{atom,{2146,18},run}},
                  [{var,{2146,22},'Listing'},
                   {block,0,[{string,{2146,31},"({test,is_bitstr,.+})"}]},
                   {var,{2146,56},'Os'}]}},
          {debug_line,2148,1215},
          {match,
              {2148,5},
              {atom,{2148,5},nomatch},
              {call,
                  {2148,15},
                  {remote,{2148,17},{atom,{2148,15},re},{atom,{2148,18},run}},
                  [{var,{2148,22},'Listing'},
                   {block,0,[{string,{2148,31},"({test,is_binary,.+})"}]},
                   {var,{2148,56},'Os'}]}},
          {debug_line,2149,1216},
          {match,
              {2149,5},
              {atom,{2149,5},ok},
              {call,
                  {2149,10},
                  {remote,
                      {2149,14},
                      {atom,{2149,10},file},
                      {atom,{2149,15},del_dir_r}},
                  [{var,{2149,25},'OutDir'}]}}]}]}.
{function,
    {2157,1},
    annotations_pp,1,
    [{clause,
         {2157,1},
         [{var,{2157,1},'_'}],
         [[{call,
               {2157,1},
               {remote,
                   {2157,1},
                   {atom,{2157,1},fake},
                   {atom,{2157,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2157,1217},{atom,{2157,1},ignore}]},
     {clause,
         {2157,1},
         [{var,{2157,16},'Config'}],
         [[{call,
               {2157,29},
               {remote,
                   {2157,29},
                   {atom,{2157,29},erlang},
                   {atom,{2157,29},is_list}},
               [{var,{2157,37},'Config'}]}]],
         [{debug_line,2158,1218},
          {match,
              {2158,5},
              {var,{2158,5},'DataDir'},
              {call,
                  {2158,15},
                  {remote,
                      {2158,24},
                      {atom,{2158,15},proplists},
                      {atom,{2158,25},get_value}},
                  [{atom,{2158,35},data_dir},{var,{2158,45},'Config'}]}},
          {debug_line,2159,1219},
          {match,
              {2159,5},
              {var,{2159,5},'PrivDir'},
              {call,
                  {2159,15},
                  {remote,
                      {2159,24},
                      {atom,{2159,15},proplists},
                      {atom,{2159,25},get_value}},
                  [{atom,{2159,35},priv_dir},{var,{2159,45},'Config'}]}},
          {debug_line,2160,1220},
          {match,
              {2160,5},
              {var,{2160,5},'TargetDir'},
              {call,
                  {2160,17},
                  {remote,
                      {2160,25},
                      {atom,{2160,17},filename},
                      {atom,{2160,26},join}},
                  [{var,{2160,31},'PrivDir'},{atom,{2160,40},types_pp}]}},
          {debug_line,2161,1221},
          {match,
              {2161,5},
              {var,{2161,5},'File'},
              {call,
                  {2161,12},
                  {remote,
                      {2161,20},
                      {atom,{2161,12},filename},
                      {atom,{2161,21},join}},
                  [{var,{2161,26},'DataDir'},
                   {block,0,[{string,{2161,35},"annotations_pp.erl"}]}]}},
          {debug_line,2162,1222},
          {match,
              {2162,5},
              {var,{2162,5},'Listing'},
              {call,
                  {2162,15},
                  {remote,
                      {2162,23},
                      {atom,{2162,15},filename},
                      {atom,{2162,24},join}},
                  [{var,{2162,29},'TargetDir'},
                   {block,0,[{string,{2162,40},"annotations_pp.ssaopt"}]}]}},
          {debug_line,2163,1223},
          {match,
              {2163,5},
              {atom,{2163,5},ok},
              {call,
                  {2163,10},
                  {remote,
                      {2163,14},
                      {atom,{2163,10},file},
                      {atom,{2163,15},make_dir}},
                  [{var,{2163,24},'TargetDir'}]}},
          {debug_line,2165,1224},
          {match,
              {2165,5},
              {tuple,{2165,5},[{atom,{2165,6},ok},{var,{2165,9},'_'}]},
              {call,
                  {2165,14},
                  {remote,
                      {2165,21},
                      {atom,{2165,14},compile},
                      {atom,{2165,22},file}},
                  [{var,{2165,27},'File'},
                   {block,0,
                       [{cons,
                            {2165,33},
                            {atom,{2165,34},dssaopt},
                            {cons,
                                {2165,43},
                                {tuple,
                                    {2165,43},
                                    [{atom,{2165,44},outdir},
                                     {var,{2165,52},'TargetDir'}]},
                                {nil,{2165,62}}}}]}]}},
          {debug_line,2166,1225},
          {match,
              {2166,5},
              {tuple,{2166,5},[{atom,{2166,6},ok},{var,{2166,10},'Data'}]},
              {call,
                  {2166,18},
                  {remote,
                      {2166,22},
                      {atom,{2166,18},file},
                      {atom,{2166,23},read_file}},
                  [{var,{2166,33},'Listing'}]}},
          {debug_line,2167,1226},
          {match,
              {2167,5},
              {var,{2167,5},'Lines'},
              {call,
                  {2167,13},
                  {remote,
                      {2167,19},
                      {atom,{2167,13},string},
                      {atom,{2167,20},split}},
                  [{block,0,
                       [{call,
                            {2167,26},
                            {remote,
                                {2167,26},
                                {atom,{2167,26},erlang},
                                {atom,{2167,26},binary_to_list}},
                            [{var,{2167,41},'Data'}]}]},
                   {block,0,[{string,{2167,48},"\n"}]},
                   {atom,{2167,54},all}]}},
          {debug_line,2169,1227},
          {match,
              {2169,5},
              {var,{2169,5},'ResultTypes'},
              {call,
                  {2169,19},
                  {atom,{2169,19},get_annotations},
                  [{block,0,[{string,{2169,35},"  %% Result type:"}]},
                   {var,{2169,56},'Lines'}]}},
          {debug_line,2170,1228},
          {match,
              {2170,5},
              {integer,{2170,5},10},
              {call,
                  {2170,10},
                  {remote,
                      {2170,10},
                      {atom,{2170,10},erlang},
                      {atom,{2170,10},length}},
                  [{var,{2170,17},'ResultTypes'}]}},
          {debug_line,2172,1229},
          {match,
              {2172,5},
              {var,{2172,5},'Uniques'},
              {call,
                  {2172,15},
                  {atom,{2172,15},get_annotations},
                  [{block,0,[{string,{2172,31},"  %% Unique:"}]},
                   {var,{2172,47},'Lines'}]}},
          {debug_line,2173,1230},
          {match,
              {2173,5},
              {integer,{2173,5},10},
              {call,
                  {2173,10},
                  {remote,
                      {2173,10},
                      {atom,{2173,10},erlang},
                      {atom,{2173,10},length}},
                  [{var,{2173,17},'Uniques'}]}},
          {debug_line,2175,1231},
          {match,
              {2175,5},
              {var,{2175,5},'Aliased'},
              {call,
                  {2175,15},
                  {atom,{2175,15},get_annotations},
                  [{block,0,[{string,{2175,31},"  %% Aliased:"}]},
                   {var,{2175,48},'Lines'}]}},
          {debug_line,2176,1232},
          {match,
              {2176,5},
              {integer,{2176,5},13},
              {call,
                  {2176,10},
                  {remote,
                      {2176,10},
                      {atom,{2176,10},erlang},
                      {atom,{2176,10},length}},
                  [{var,{2176,17},'Aliased'}]}},
          {debug_line,2178,1233},
          {match,
              {2178,5},
              {atom,{2178,5},ok},
              {call,
                  {2178,10},
                  {remote,
                      {2178,14},
                      {atom,{2178,10},file},
                      {atom,{2178,15},del_dir_r}},
                  [{var,{2178,25},'TargetDir'}]}},
          {debug_line,2179,1234},
          {atom,{2179,5},ok}]}]}.
{function,{2181,1},
          get_annotations,2,
          [{clause,{2181,1},
                   [{var,{2181,1},'_'},{var,{2181,1},'_'}],
                   [[{call,{2181,1},
                           {remote,{2181,1},
                                   {atom,{2181,1},fake},
                                   {atom,{2181,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2181,1235},{atom,{2181,1},ignore}]},
           {clause,{2181,1},
                   [{var,{2181,17},'Key'},
                    {cons,{2181,22},
                          {var,{2181,23},'Key'},
                          {cons,{2181,27},
                                {op,{2181,37},
                                    '++',
                                    {string,{2181,27},"  %%    "},
                                    {var,{2181,39},'Anno'}},
                                {var,{2181,44},'Lines'}}}],
                   [],
                   [{debug_line,2182,1236},
                    {cons,{2182,5},
                          {var,{2182,6},'Anno'},
                          {call,{2182,11},
                                {atom,{2182,11},get_annotations},
                                [{var,{2182,27},'Key'},
                                 {var,{2182,32},'Lines'}]}}]},
           {clause,{2183,1},
                   [{var,{2183,17},'Key'},
                    {cons,{2183,22},
                          {var,{2183,23},'_'},
                          {var,{2183,25},'Lines'}}],
                   [],
                   [{debug_line,2184,1237},
                    {call,{2184,5},
                          {atom,{2184,5},get_annotations},
                          [{var,{2184,21},'Key'},{var,{2184,26},'Lines'}]}]},
           {clause,{2185,1},
                   [{var,{2185,17},'_'},{nil,{2185,20}}],
                   [],
                   [{debug_line,2186,1238},{nil,{2186,5}}]}]}.
{function,
 {2188,1},
 option_order,1,
 [{clause,
   {2188,1},
   [{var,{2188,1},'_'}],
   [[{call,
      {2188,1},
      {remote,{2188,1},{atom,{2188,1},fake},{atom,{2188,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2188,1239},{atom,{2188,1},ignore}]},
  {clause,
   {2188,1},
   [{var,{2188,14},'Config'}],
   [],
   [{debug_line,2189,1240},
    {match,
     {2189,5},
     {var,{2189,5},'Ts'},
     {cons,
      {2189,10},
      {tuple,
       {2189,11},
       [{atom,{2189,12},spec1},
        {bin,
         {2190,12},
         [{bin_element,
           {2190,13},
           {string,{2190,13},"-compile(nowarn_missing_spec).\nfoo() -> ok."},
           default,
           [utf8]}]},
        {nil,{2194,12}},
        {cons,{2195,12},{atom,{2195,13},warn_missing_spec},{nil,{2195,30}}},
        {nil,{2196,12}}]},
      {cons,
       {2197,11},
       {tuple,
        {2197,11},
        [{atom,{2197,12},spec2},
         {bin,
          {2198,12},
          [{bin_element,
            {2198,13},
            {string,{2198,13},"foo() -> ok."},
            default,
            [utf8]}]},
         {cons,
          {2201,12},
          {tuple,
           {2201,13},
           [{string,{2201,14},"ERL_COMPILER_OPTIONS"},
            {string,{2201,38},"warn_missing_spec"}]},
          {nil,{2201,58}}},
         {cons,{2202,12},{atom,{2202,13},nowarn_missing_spec},{nil,{2202,32}}},
         {nil,{2203,12}}]},
       {cons,
        {2204,11},
        {tuple,
         {2204,11},
         [{atom,{2204,12},spec3},
          {bin,
           {2205,12},
           [{bin_element,
             {2205,13},
             {string,{2205,13},"-compile(nowarn_missing_spec).\nfoo() -> ok."},
             default,
             [utf8]}]},
          {cons,
           {2209,12},
           {tuple,
            {2209,13},
            [{string,{2209,14},"ERL_COMPILER_OPTIONS"},
             {string,{2209,38},"nowarn_missing_spec"}]},
           {nil,{2209,60}}},
          {cons,{2210,12},{atom,{2210,13},warn_missing_spec},{nil,{2210,30}}},
          {nil,{2211,12}}]},
        {cons,
         {2212,11},
         {tuple,
          {2212,11},
          [{atom,{2212,12},spec4},
           {bin,
            {2213,12},
            [{bin_element,
              {2213,13},
              {string,{2213,13},"-compile(warn_missing_spec).\nfoo() -> ok."},
              default,
              [utf8]}]},
           {cons,
            {2217,12},
            {tuple,
             {2217,13},
             [{string,{2217,14},"ERL_COMPILER_OPTIONS"},
              {string,{2217,38},"nowarn_missing_spec"}]},
            {nil,{2217,60}}},
           {nil,{2218,12}},
           {tuple,
            {2219,12},
            [{atom,{2219,13},warnings},
             {cons,
              {2219,22},
              {tuple,
               {2219,23},
               [{tuple,
                 {2219,24},
                 [{integer,{2219,25},2},{integer,{2219,27},1}]},
                {atom,{2219,30},erl_lint},
                {tuple,
                 {2219,39},
                 [{atom,{2219,40},missing_spec},
                  {tuple,
                   {2219,53},
                   [{atom,{2219,54},foo},{integer,{2219,58},0}]}]}]},
              {nil,{2219,62}}}]}]},
         {cons,
          {2221,11},
          {tuple,
           {2221,11},
           [{atom,{2221,12},spec5},
            {bin,
             {2222,12},
             [{bin_element,
               {2222,13},
               {string,
                {2222,13},
                "-compile([warn_missing_spec,nowarn_missing_spec]).\nfoo() -> ok."},
               default,
               [utf8]}]},
            {cons,
             {2226,12},
             {tuple,
              {2226,13},
              [{string,{2226,14},"ERL_COMPILER_OPTIONS"},
               {string,{2226,38},"nowarn_missing_spec"}]},
             {nil,{2226,60}}},
            {cons,
             {2227,12},
             {atom,{2227,13},warn_missing_spec},
             {nil,{2227,30}}},
            {nil,{2228,12}}]},
          {cons,
           {2229,11},
           {tuple,
            {2229,11},
            [{atom,{2229,12},records1},
             {bin,
              {2230,12},
              [{bin_element,
                {2230,13},
                {string,
                 {2230,13},
                 "-record(r, {x,y}).\nrec_test(#r{x=X,y=Y}) -> X + Y."},
                default,
                [utf8]}]},
             {nil,{2234,12}},
             {cons,
              {2235,12},
              {atom,{2235,13},strict_record_tests},
              {nil,{2235,32}}},
             {'fun',
              {2236,12},
              {clauses,
               [{clause,
                 {2236,15},
                 [{var,{2236,16},'M'}],
                 [],
                 [{debug_line,2237,1241},
                  {'try',
                   {2237,20},
                   [{call,
                     {2237,24},
                     {remote,
                      {2237,25},
                      {var,{2237,24},'M'},
                      {atom,{2237,26},rec_test}},
                     [{block,0,
                       [{tuple,
                         {2237,35},
                         [{atom,{2237,36},r},
                          {integer,{2237,38},1},
                          {integer,{2237,40},2},
                          {integer,{2237,42},3}]}]}]}],
                   [{clause,
                     {2238,24},
                     [{integer,{2238,24},3}],
                     [],
                     [{debug_line,2239,1242},
                      {call,{2239,28},{atom,{2239,28},fail},[]}]}],
                   [{clause,
                     {2241,24},
                     [{tuple,
                       {2241,24},
                       [{atom,{2241,24},error},
                        {atom,{2241,30},function_clause},
                        {var,{2241,30},'_'}]}],
                     [],
                     [{debug_line,2242,1243},{atom,{2242,28},ok}]}],
                   []}]}]}}]},
           {cons,
            {2245,11},
            {tuple,
             {2245,11},
             [{atom,{2245,12},records2},
              {bin,
               {2246,12},
               [{bin_element,
                 {2246,13},
                 {string,
                  {2246,13},
                  "-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y."},
                 default,
                 [utf8]}]},
              {nil,{2250,12}},
              {cons,
               {2251,12},
               {atom,{2251,13},no_strict_record_tests},
               {nil,{2251,35}}},
              {'fun',
               {2252,12},
               {clauses,
                [{clause,
                  {2252,15},
                  [{var,{2252,16},'M'}],
                  [],
                  [{debug_line,2253,1244},
                   {match,
                    {2253,20},
                    {integer,{2253,20},3},
                    {call,
                     {2253,24},
                     {remote,
                      {2253,25},
                      {var,{2253,24},'M'},
                      {atom,{2253,26},rec_test}},
                     [{block,0,
                       [{tuple,
                         {2253,35},
                         [{atom,{2253,36},r},
                          {integer,{2253,38},1},
                          {integer,{2253,40},2},
                          {integer,{2253,42},3}]}]}]}},
                   {debug_line,2254,1245},
                   {atom,{2254,20},ok}]}]}}]},
            {cons,
             {2256,11},
             {tuple,
              {2256,11},
              [{atom,{2256,12},records3},
               {bin,
                {2257,12},
                [{bin_element,
                  {2257,13},
                  {string,
                   {2257,13},
                   "-compile(no_strict_record_tests).\n-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y."},
                  default,
                  [utf8]}]},
               {nil,{2262,12}},
               {cons,
                {2263,12},
                {atom,{2263,13},strict_record_tests},
                {nil,{2263,32}}},
               {'fun',
                {2264,12},
                {clauses,
                 [{clause,
                   {2264,15},
                   [{var,{2264,16},'M'}],
                   [],
                   [{debug_line,2265,1246},
                    {match,
                     {2265,20},
                     {integer,{2265,20},3},
                     {call,
                      {2265,24},
                      {remote,
                       {2265,25},
                       {var,{2265,24},'M'},
                       {atom,{2265,26},rec_test}},
                      [{block,0,
                        [{tuple,
                          {2265,35},
                          [{atom,{2265,36},r},
                           {integer,{2265,38},1},
                           {integer,{2265,40},2},
                           {integer,{2265,42},3}]}]}]}},
                    {debug_line,2266,1247},
                    {atom,{2266,20},ok}]}]}}]},
             {cons,
              {2268,11},
              {tuple,
               {2268,11},
               [{atom,{2268,12},records4},
                {bin,
                 {2269,12},
                 [{bin_element,
                   {2269,13},
                   {string,
                    {2269,13},
                    "-record(r, {x,y}).\nrec_test(#r{x=X,y=Y}) -> X + Y."},
                   default,
                   [utf8]}]},
                {cons,
                 {2273,12},
                 {tuple,
                  {2273,13},
                  [{string,{2273,14},"ERL_COMPILER_OPTIONS"},
                   {string,{2273,38},"strict_record_tests"}]},
                 {nil,{2273,60}}},
                {nil,{2274,12}},
                {'fun',
                 {2275,12},
                 {clauses,
                  [{clause,
                    {2275,15},
                    [{var,{2275,16},'M'}],
                    [],
                    [{debug_line,2276,1248},
                     {'try',
                      {2276,20},
                      [{call,
                        {2276,24},
                        {remote,
                         {2276,25},
                         {var,{2276,24},'M'},
                         {atom,{2276,26},rec_test}},
                        [{block,0,
                          [{tuple,
                            {2276,35},
                            [{atom,{2276,36},r},
                             {integer,{2276,38},1},
                             {integer,{2276,40},2},
                             {integer,{2276,42},3}]}]}]}],
                      [{clause,
                        {2277,24},
                        [{integer,{2277,24},3}],
                        [],
                        [{debug_line,2278,1249},
                         {call,{2278,28},{atom,{2278,28},fail},[]}]}],
                      [{clause,
                        {2280,24},
                        [{tuple,
                          {2280,24},
                          [{atom,{2280,24},error},
                           {atom,{2280,30},function_clause},
                           {var,{2280,30},'_'}]}],
                        [],
                        [{debug_line,2281,1250},{atom,{2281,28},ok}]}],
                      []}]}]}}]},
              {cons,
               {2284,11},
               {tuple,
                {2284,11},
                [{atom,{2284,12},records5},
                 {bin,
                  {2285,12},
                  [{bin_element,
                    {2285,13},
                    {string,
                     {2285,13},
                     "-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y."},
                    default,
                    [utf8]}]},
                 {cons,
                  {2289,12},
                  {tuple,
                   {2289,13},
                   [{string,{2289,14},"ERL_COMPILER_OPTIONS"},
                    {string,{2289,38},"strict_record_tests"}]},
                  {nil,{2289,60}}},
                 {cons,
                  {2290,12},
                  {atom,{2290,13},no_strict_record_tests},
                  {nil,{2290,35}}},
                 {'fun',
                  {2291,12},
                  {clauses,
                   [{clause,
                     {2291,15},
                     [{var,{2291,16},'M'}],
                     [],
                     [{debug_line,2292,1251},
                      {match,
                       {2292,20},
                       {integer,{2292,20},3},
                       {call,
                        {2292,24},
                        {remote,
                         {2292,25},
                         {var,{2292,24},'M'},
                         {atom,{2292,26},rec_test}},
                        [{block,0,
                          [{tuple,
                            {2292,35},
                            [{atom,{2292,36},r},
                             {integer,{2292,38},1},
                             {integer,{2292,40},2},
                             {integer,{2292,42},3}]}]}]}},
                      {debug_line,2293,1252},
                      {atom,{2293,20},ok}]}]}}]},
               {cons,
                {2295,11},
                {tuple,
                 {2295,11},
                 [{atom,{2295,12},records6},
                  {bin,
                   {2296,12},
                   [{bin_element,
                     {2296,13},
                     {string,
                      {2296,13},
                      "-compile(no_strict_record_tests).\n-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y."},
                     default,
                     [utf8]}]},
                  {cons,
                   {2301,12},
                   {tuple,
                    {2301,13},
                    [{string,{2301,14},"ERL_COMPILER_OPTIONS"},
                     {string,{2301,38},"strict_record_tests"}]},
                   {nil,{2301,60}}},
                  {nil,{2302,12}},
                  {'fun',
                   {2303,12},
                   {clauses,
                    [{clause,
                      {2303,15},
                      [{var,{2303,16},'M'}],
                      [],
                      [{debug_line,2304,1253},
                       {match,
                        {2304,20},
                        {integer,{2304,20},3},
                        {call,
                         {2304,24},
                         {remote,
                          {2304,25},
                          {var,{2304,24},'M'},
                          {atom,{2304,26},rec_test}},
                         [{block,0,
                           [{tuple,
                             {2304,35},
                             [{atom,{2304,36},r},
                              {integer,{2304,38},1},
                              {integer,{2304,40},2},
                              {integer,{2304,42},3}]}]}]}},
                       {debug_line,2305,1254},
                       {atom,{2305,20},ok}]}]}}]},
                {cons,
                 {2307,11},
                 {tuple,
                  {2307,11},
                  [{atom,{2307,12},records7},
                   {bin,
                    {2308,12},
                    [{bin_element,
                      {2308,13},
                      {string,
                       {2308,13},
                       "-record(r, {x,y}).\nrec_test(R) -> R#r.x + R#r.y."},
                      default,
                      [utf8]}]},
                   {cons,
                    {2312,12},
                    {tuple,
                     {2312,13},
                     [{string,{2312,14},"ERL_COMPILER_OPTIONS"},
                      {string,{2312,38},"no_strict_record_tests"}]},
                    {nil,{2312,63}}},
                   {cons,
                    {2313,12},
                    {atom,{2313,13},no_strict_record_tests},
                    {cons,
                     {2313,37},
                     {atom,{2313,37},strict_record_tests},
                     {nil,{2313,56}}}},
                   {'fun',
                    {2314,12},
                    {clauses,
                     [{clause,
                       {2314,15},
                       [{var,{2314,16},'M'}],
                       [],
                       [{debug_line,2315,1255},
                        {'try',
                         {2315,20},
                         [{call,
                           {2315,24},
                           {remote,
                            {2315,25},
                            {var,{2315,24},'M'},
                            {atom,{2315,26},rec_test}},
                           [{block,0,
                             [{tuple,
                               {2315,35},
                               [{atom,{2315,36},r},
                                {integer,{2315,38},1},
                                {integer,{2315,40},2},
                                {integer,{2315,42},3}]}]}]}],
                         [{clause,
                           {2316,24},
                           [{integer,{2316,24},3}],
                           [],
                           [{debug_line,2317,1256},
                            {call,{2317,28},{atom,{2317,28},fail},[]}]}],
                         [{clause,
                           {2319,24},
                           [{tuple,
                             {2319,24},
                             [{atom,{2319,24},error},
                              {tuple,
                               {2319,30},
                               [{atom,{2319,31},badrecord},
                                {tuple,
                                 {2319,41},
                                 [{atom,{2319,42},r},
                                  {integer,{2319,44},1},
                                  {integer,{2319,46},2},
                                  {integer,{2319,48},3}]}]},
                              {var,{2319,48},'_'}]}],
                           [],
                           [{debug_line,2320,1257},{atom,{2320,28},ok}]}],
                         []}]}]}}]},
                 {nil,{2324,10}}}}}}}}}}}}}}},
    {debug_line,2325,1258},
    {call,
     {2325,5},
     {atom,{2325,5},run},
     [{var,{2325,9},'Config'},{var,{2325,17},'Ts'}]},
    {debug_line,2326,1259},
    {atom,{2326,5},ok}]}]}.
{function,
    {2328,1},
    sys_coverage,1,
    [{clause,
         {2328,1},
         [{var,{2328,1},'_'}],
         [[{call,
               {2328,1},
               {remote,
                   {2328,1},
                   {atom,{2328,1},fake},
                   {atom,{2328,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2328,1260},{atom,{2328,1},ignore}]},
     {clause,
         {2328,1},
         [{var,{2328,14},'Config'}],
         [],
         [{debug_line,2329,1261},
          {match,
              {2329,5},
              {var,{2329,5},'DataDir'},
              {call,
                  {2329,15},
                  {remote,
                      {2329,24},
                      {atom,{2329,15},proplists},
                      {atom,{2329,25},get_value}},
                  [{atom,{2329,35},data_dir},{var,{2329,45},'Config'}]}},
          {debug_line,2331,1262},
          {call,
              {2331,5},
              {atom,{2331,5},sys_coverage_1},
              [{var,{2331,20},'DataDir'}]},
          {debug_line,2332,1263},
          {call,
              {2332,5},
              {atom,{2332,5},sys_coverage_2},
              [{var,{2332,20},'DataDir'}]},
          {debug_line,2334,1264},
          {atom,{2334,5},ok}]}]}.
{function,
    {2338,1},
    sys_coverage_1,1,
    [{clause,
         {2338,1},
         [{var,{2338,1},'_'}],
         [[{call,
               {2338,1},
               {remote,
                   {2338,1},
                   {atom,{2338,1},fake},
                   {atom,{2338,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2338,1265},{atom,{2338,1},ignore}]},
     {clause,
         {2338,1},
         [{var,{2338,16},'DataDir'}],
         [],
         [{debug_line,2339,1266},
          {match,{2339,5},{var,{2339,5},'Mod'},{atom,{2339,11},exceptions}},
          {debug_line,2340,1267},
          {match,
              {2340,5},
              {var,{2340,5},'Source'},
              {call,
                  {2340,14},
                  {remote,
                      {2340,22},
                      {atom,{2340,14},filename},
                      {atom,{2340,23},join}},
                  [{var,{2340,28},'DataDir'},
                   {block,0,[{string,{2340,37},"exceptions"}]}]}},
          {debug_line,2341,1268},
          {match,
              {2341,5},
              {tuple,
                  {2341,5},
                  [{atom,{2341,6},ok},
                   {var,{2341,9},'Mod'},
                   {var,{2341,13},'Code'}]},
              {call,
                  {2341,21},
                  {remote,
                      {2341,28},
                      {atom,{2341,21},compile},
                      {atom,{2341,29},file}},
                  [{var,{2341,34},'Source'},
                   {block,0,
                       [{cons,
                            {2341,42},
                            {atom,{2341,43},line_coverage},
                            {cons,
                                {2341,57},
                                {atom,{2341,57},binary},
                                {cons,
                                    {2341,64},
                                    {atom,{2341,64},report},
                                    {nil,{2341,70}}}}}]}]}},
          {debug_line,2342,1269},
          {match,
              {2342,5},
              {tuple,{2342,5},[{atom,{2342,6},module},{var,{2342,13},'Mod'}]},
              {call,
                  {2342,20},
                  {remote,
                      {2342,24},
                      {atom,{2342,20},code},
                      {atom,{2342,25},load_binary}},
                  [{var,{2342,37},'Mod'},
                   {block,0,[{string,{2342,42},[]}]},
                   {var,{2342,46},'Code'}]}},
          {debug_line,2344,1270},
          {call,
              {2344,5},
              {remote,{2344,8},{var,{2344,5},'Mod'},{var,{2344,9},'Mod'}},
              [{var,{2344,13},'DataDir'}]},
          {debug_line,2346,1271},
          {match,
              {2346,5},
              {atom,{2346,5},true},
              {call,
                  {2346,12},
                  {remote,
                      {2346,16},
                      {atom,{2346,12},code},
                      {atom,{2346,17},delete}},
                  [{var,{2346,24},'Mod'}]}},
          {debug_line,2347,1272},
          {match,
              {2347,5},
              {atom,{2347,5},false},
              {call,
                  {2347,13},
                  {remote,
                      {2347,17},
                      {atom,{2347,13},code},
                      {atom,{2347,18},purge}},
                  [{var,{2347,24},'Mod'}]}},
          {debug_line,2349,1273},
          {atom,{2349,5},ok}]}]}.
{function,
    {2353,1},
    sys_coverage_2,1,
    [{clause,
         {2353,1},
         [{var,{2353,1},'_'}],
         [[{call,
               {2353,1},
               {remote,
                   {2353,1},
                   {atom,{2353,1},fake},
                   {atom,{2353,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2353,1274},{atom,{2353,1},ignore}]},
     {clause,
         {2353,1},
         [{var,{2353,16},'DataDir'}],
         [],
         [{debug_line,2354,1275},
          {match,
              {2354,5},
              {var,{2354,5},'Mod'},
              {atom,{2354,11},embedded_line_coverage}},
          {debug_line,2355,1276},
          {match,
              {2355,5},
              {var,{2355,5},'Source'},
              {call,
                  {2355,14},
                  {remote,
                      {2355,22},
                      {atom,{2355,14},filename},
                      {atom,{2355,23},join}},
                  [{var,{2355,28},'DataDir'},
                   {block,0,[{string,{2355,37},"embedded_line_coverage"}]}]}},
          {debug_line,2356,1277},
          {match,
              {2356,5},
              {tuple,
                  {2356,5},
                  [{atom,{2356,6},ok},
                   {var,{2356,9},'Mod'},
                   {var,{2356,13},'Asm'}]},
              {call,
                  {2356,20},
                  {remote,
                      {2356,27},
                      {atom,{2356,20},compile},
                      {atom,{2356,28},file}},
                  [{var,{2356,33},'Source'},
                   {block,0,
                       [{cons,
                            {2356,41},
                            {atom,{2356,42},'S'},
                            {cons,
                                {2356,46},
                                {atom,{2356,46},binary},
                                {cons,
                                    {2356,53},
                                    {atom,{2356,53},report},
                                    {nil,{2356,59}}}}}]}]}},
          {debug_line,2358,1278},
          {match,
              {2358,5},
              {tuple,
                  {2358,5},
                  [{var,{2358,6},'Mod'},
                   {var,{2358,10},'_'},
                   {var,{2358,12},'_'},
                   {var,{2358,14},'Fs'},
                   {var,{2358,17},'_'}]},
              {var,{2358,22},'Asm'}},
          {debug_line,2359,1279},
          {match,
              {2359,5},
              {cons,
                  {2359,5},
                  {tuple,
                      {2359,6},
                      [{atom,{2359,7},function},
                       {atom,{2359,16},add},
                       {integer,{2359,20},2},
                       {var,{2359,22},'_'},
                       {var,{2359,24},'Is'}]},
                  {var,{2359,28},'_'}},
              {var,{2359,33},'Fs'}},
          {debug_line,2360,1280},
          {match,
              {2360,5},
              {atom,{2360,5},true},
              {call,
                  {2360,12},
                  {remote,
                      {2360,17},
                      {atom,{2360,12},lists},
                      {atom,{2360,18},keymember}},
                  [{atom,{2360,28},executable_line},
                   {integer,{2360,45},1},
                   {var,{2360,48},'Is'}]}},
          {debug_line,2362,1281},
          {atom,{2362,5},ok}]}]}.
{function,
    {2368,1},
    compile_and_verify,3,
    [{clause,
         {2368,1},
         [{var,{2368,1},'_'},{var,{2368,1},'_'},{var,{2368,1},'_'}],
         [[{call,
               {2368,1},
               {remote,
                   {2368,1},
                   {atom,{2368,1},fake},
                   {atom,{2368,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2368,1282},{atom,{2368,1},ignore}]},
     {clause,
         {2368,1},
         [{var,{2368,20},'Name'},
          {var,{2368,26},'Target'},
          {var,{2368,34},'Opts'}],
         [],
         [{debug_line,2369,1283},
          {match,
              {2369,5},
              {var,{2369,5},'Mod'},
              {call,
                  {2369,11},
                  {remote,
                      {2369,11},
                      {atom,{2369,11},erlang},
                      {atom,{2369,11},list_to_atom}},
                  [{block,0,
                       [{call,
                            {2369,24},
                            {remote,
                                {2369,32},
                                {atom,{2369,24},filename},
                                {atom,{2369,33},basename}},
                            [{var,{2369,42},'Name'},
                             {block,0,[{string,{2369,48},".erl"}]}]}]}]}},
          {debug_line,2370,1284},
          {match,
              {2370,5},
              {tuple,{2370,5},[{atom,{2370,6},ok},{var,{2370,9},'Mod'}]},
              {call,
                  {2370,16},
                  {remote,
                      {2370,23},
                      {atom,{2370,16},compile},
                      {atom,{2370,24},file}},
                  [{var,{2370,29},'Name'},{var,{2370,35},'Opts'}]}},
          {debug_line,2371,1285},
          {match,
              {2371,5},
              {tuple,
                  {2371,5},
                  [{atom,{2371,6},ok},
                   {tuple,
                       {2371,9},
                       [{var,{2371,10},'Mod'},
                        {cons,
                            {2371,14},
                            {tuple,
                                {2371,15},
                                [{atom,{2371,16},compile_info},
                                 {var,{2371,29},'CInfo'}]},
                            {nil,{2371,35}}}]}]},
              {call,
                  {2372,2},
                  {remote,
                      {2372,10},
                      {atom,{2372,2},beam_lib},
                      {atom,{2372,11},chunks}},
                  [{var,{2372,18},'Target'},
                   {block,0,
                       [{debug_line,2372,1286},
                        {cons,
                            {2372,26},
                            {atom,{2372,27},compile_info},
                            {nil,{2372,39}}}]}]}},
          {debug_line,2373,1287},
          {match,
              {2373,5},
              {tuple,
                  {2373,5},
                  [{atom,{2373,6},options},{var,{2373,14},'BeamOpts'}]},
              {call,
                  {2373,26},
                  {remote,
                      {2373,31},
                      {atom,{2373,26},lists},
                      {atom,{2373,32},keyfind}},
                  [{atom,{2373,40},options},
                   {integer,{2373,49},1},
                   {var,{2373,52},'CInfo'}]}},
          {debug_line,2374,1288},
          {match,
              {2374,5},
              {var,{2374,5},'Opts'},
              {var,{2374,12},'BeamOpts'}}]}]}.
{function,{2376,1},
          get_unique_beam_files,0,
          [{clause,{2376,1},
                   [],
                   [[{call,{2376,1},
                           {remote,{2376,1},
                                   {atom,{2376,1},fake},
                                   {atom,{2376,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2376,1289},{atom,{2376,1},ignore}]},
           {clause,{2376,1},
                   [],[],
                   [{debug_line,2377,1290},
                    {call,{2377,5},
                          {remote,{2377,13},
                                  {atom,{2377,5},test_lib},
                                  {atom,{2377,14},get_unique_files}},
                          [{block,0,[{string,{2377,31},".beam"}]}]}]}]}.
{function,
 {2381,1},
 run,2,
 [{clause,
   {2381,1},
   [{var,{2381,1},'_'},{var,{2381,1},'_'}],
   [[{call,
      {2381,1},
      {remote,{2381,1},{atom,{2381,1},fake},{atom,{2381,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2381,1291},{atom,{2381,1},ignore}]},
  {clause,
   {2381,1},
   [{var,{2381,5},'Config'},{var,{2381,13},'Tests'}],
   [],
   [{debug_line,2382,1292},
    {match,
     {2382,5},
     {var,{2382,5},'F'},
     {'fun',
      {2382,9},
      {clauses,
       [{clause,
         {2382,12},
         [{tuple,
           {2382,13},
           [{var,{2382,14},'N'},
            {var,{2382,16},'P'},
            {var,{2382,18},'Env'},
            {var,{2382,22},'Ws'},
            {var,{2382,25},'Run'}]},
          {var,{2382,31},'_BadL'}],
         [[{call,
            {2382,43},
            {remote,
             {2382,43},
             {atom,{2382,43},erlang},
             {atom,{2382,43},is_function}},
            [{var,{2382,55},'Run'},{integer,{2382,60},1}]}]],
         [{debug_line,2383,1293},
          {'case',
           {2383,17},
           {'catch',
            {2383,22},
            {call,
             {2383,28},
             {atom,{2383,28},run_test},
             [{var,{2383,37},'Config'},
              {var,{2383,45},'P'},
              {var,{2383,48},'Env'},
              {var,{2383,53},'Ws'},
              {var,{2383,57},'Run'}]}},
           [{clause,
             {2384,21},
             [{atom,{2384,21},ok}],
             [],
             [{debug_line,2385,1294},{atom,{2385,25},ok}]},
            {clause,
             {2386,21},
             [{var,{2386,21},'Bad'}],
             [],
             [{debug_line,2387,1295},
              {call,
               {2387,25},
               {remote,{2387,27},{atom,{2387,25},io},{atom,{2387,28},format}},
               [{block,0,
                 [{string,
                   {2387,35},
                   "~nTest ~p failed. Expected~n  ~p~nbut got~n  ~p~n"}]},
                {block,0,
                 [{debug_line,2388,1296},
                  {cons,
                   {2388,54},
                   {var,{2388,55},'N'},
                   {cons,
                    {2388,58},
                    {atom,{2388,58},ok},
                    {cons,
                     {2388,62},
                     {var,{2388,62},'Bad'},
                     {nil,{2388,65}}}}}]}]},
              {debug_line,2389,1297},
              {call,{2389,25},{atom,{2389,25},fail},[]}]}]}]},
        {clause,
         {2391,12},
         [{tuple,
           {2391,13},
           [{var,{2391,14},'N'},
            {var,{2391,16},'P'},
            {var,{2391,18},'Env'},
            {var,{2391,22},'Ws'},
            {var,{2391,25},'Expected'}]},
          {var,{2391,36},'BadL'}],
         [[{call,
            {2392,20},
            {remote,
             {2392,20},
             {atom,{2392,20},erlang},
             {atom,{2392,20},is_list}},
            [{var,{2392,28},'Expected'}]}],
          [{call,
            {2392,39},
            {remote,
             {2392,39},
             {atom,{2392,39},erlang},
             {atom,{2392,39},is_tuple}},
            [{var,{2392,48},'Expected'}]}]],
         [{debug_line,2393,1298},
          {call,
           {2393,17},
           {remote,{2393,19},{atom,{2393,17},io},{atom,{2393,20},format}},
           [{block,0,[{string,{2393,27},"### ~s\n"}]},
            {block,0,[{cons,{2393,39},{var,{2393,40},'N'},{nil,{2393,41}}}]}]},
          {debug_line,2394,1299},
          {'case',
           {2394,17},
           {'catch',
            {2394,22},
            {call,
             {2394,28},
             {atom,{2394,28},run_test},
             [{var,{2394,37},'Config'},
              {var,{2394,45},'P'},
              {var,{2394,48},'Env'},
              {var,{2394,53},'Ws'},
              {atom,{2394,57},none}]}},
           [{clause,
             {2395,21},
             [{var,{2395,21},'Expected'}],
             [],
             [{debug_line,2396,1300},{var,{2396,25},'BadL'}]},
            {clause,
             {2397,21},
             [{var,{2397,21},'Bad'}],
             [],
             [{debug_line,2398,1301},
              {call,
               {2398,25},
               {remote,{2398,27},{atom,{2398,25},io},{atom,{2398,28},format}},
               [{block,0,
                 [{string,
                   {2398,35},
                   "~nTest ~p failed. Expected~n  ~p~nbut got~n  ~p~n"}]},
                {block,0,
                 [{debug_line,2399,1302},
                  {cons,
                   {2399,54},
                   {var,{2399,55},'N'},
                   {cons,
                    {2399,58},
                    {var,{2399,58},'Expected'},
                    {cons,
                     {2399,68},
                     {var,{2399,68},'Bad'},
                     {nil,{2399,71}}}}}]}]},
              {debug_line,2400,1303},
              {call,{2400,4},{atom,{2400,4},fail},[]}]}]}]}]}}},
    {debug_line,2403,1304},
    {call,
     {2403,5},
     {remote,{2403,10},{atom,{2403,5},lists},{atom,{2403,11},foldl}},
     [{var,{2403,17},'F'},{nil,{2403,20}},{var,{2403,24},'Tests'}]}]}]}.
{function,
    {2405,1},
    run_test,5,
    [{clause,
         {2405,1},
         [{var,{2405,1},'_'},
          {var,{2405,1},'_'},
          {var,{2405,1},'_'},
          {var,{2405,1},'_'},
          {var,{2405,1},'_'}],
         [[{call,
               {2405,1},
               {remote,
                   {2405,1},
                   {atom,{2405,1},fake},
                   {atom,{2405,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2405,1305},{atom,{2405,1},ignore}]},
     {clause,
         {2405,1},
         [{var,{2405,10},'Conf'},
          {var,{2405,16},'Test0'},
          {var,{2405,23},'Env'},
          {var,{2405,28},'Options'},
          {var,{2405,37},'Run'}],
         [],
         [{debug_line,2406,1306},
          {call,
              {2406,5},
              {atom,{2406,5},run_test_putenv},
              [{var,{2406,21},'Env'}]},
          {debug_line,2407,1307},
          {match,
              {2407,5},
              {var,{2407,5},'Module'},
              {op,{2407,25},
                  '++',
                  {string,{2407,14},"warnings"},
                  {call,
                      {2407,28},
                      {remote,
                          {2407,36},
                          {atom,{2407,28},test_lib},
                          {atom,{2407,37},uniq}},
                      []}}},
          {debug_line,2408,1308},
          {match,
              {2408,5},
              {var,{2408,5},'Filename'},
              {op,{2408,23},
                  '++',
                  {var,{2408,16},'Module'},
                  {string,{2408,26},".erl"}}},
          {debug_line,2409,1309},
          {match,
              {2409,5},
              {var,{2409,5},'DataDir'},
              {call,
                  {2409,15},
                  {remote,
                      {2409,24},
                      {atom,{2409,15},proplists},
                      {atom,{2409,25},get_value}},
                  [{atom,{2409,35},priv_dir},{var,{2409,45},'Conf'}]}},
          {debug_line,2410,1310},
          {match,
              {2410,5},
              {var,{2410,5},'Test1'},
              {cons,
                  {2410,13},
                  {string,{2410,14},"-module("},
                  {cons,
                      {2410,26},
                      {var,{2410,26},'Module'},
                      {cons,
                          {2410,34},
                          {string,{2410,34},"). -file( \""},
                          {cons,
                              {2410,50},
                              {var,{2410,50},'Filename'},
                              {cons,
                                  {2410,60},
                                  {string,{2410,60},"\", 1). "},
                                  {cons,
                                      {2410,72},
                                      {var,{2410,72},'Test0'},
                                      {nil,{2410,77}}}}}}}}},
          {debug_line,2411,1311},
          {match,
              {2411,5},
              {var,{2411,5},'Test'},
              {call,
                  {2411,12},
                  {remote,
                      {2411,12},
                      {atom,{2411,12},erlang},
                      {atom,{2411,12},iolist_to_binary}},
                  [{var,{2411,29},'Test1'}]}},
          {debug_line,2412,1312},
          {match,
              {2412,5},
              {var,{2412,5},'File'},
              {call,
                  {2412,12},
                  {remote,
                      {2412,20},
                      {atom,{2412,12},filename},
                      {atom,{2412,21},join}},
                  [{var,{2412,26},'DataDir'},{var,{2412,35},'Filename'}]}},
          {debug_line,2413,1313},
          {match,
              {2413,5},
              {var,{2413,5},'Opts'},
              {cons,
                  {2413,12},
                  {atom,{2413,13},binary},
                  {cons,
                      {2413,20},
                      {atom,{2413,20},export_all},
                      {cons,
                          {2413,31},
                          {atom,{2413,31},return},
                          {var,{2413,38},'Options'}}}}},
          {debug_line,2414,1314},
          {match,
              {2414,5},
              {atom,{2414,5},ok},
              {call,
                  {2414,10},
                  {remote,
                      {2414,14},
                      {atom,{2414,10},file},
                      {atom,{2414,15},write_file}},
                  [{var,{2414,26},'File'},{var,{2414,32},'Test'}]}},
          {debug_line,2417,1315},
          {match,
              {2417,5},
              {var,{2417,5},'_'},
              {call,
                  {2417,9},
                  {remote,
                      {2417,16},
                      {atom,{2417,9},compile},
                      {atom,{2417,17},file}},
                  [{var,{2417,22},'File'},
                   {block,0,
                       [{cons,
                            {2417,28},
                            {atom,{2417,29},binary},
                            {cons,
                                {2417,36},
                                {atom,{2417,36},export_all},
                                {cons,
                                    {2417,47},
                                    {atom,{2417,47},report},
                                    {var,{2417,54},'Options'}}}}]}]}},
          {debug_line,2420,1316},
          {match,
              {2420,5},
              {tuple,
                  {2420,5},
                  [{atom,{2420,6},ok},
                   {var,{2420,10},'Mod'},
                   {var,{2420,15},'Beam'},
                   {var,{2420,21},'Warnings'}]},
              {call,
                  {2420,33},
                  {remote,
                      {2420,40},
                      {atom,{2420,33},compile},
                      {atom,{2420,41},file}},
                  [{var,{2420,46},'File'},{var,{2420,52},'Opts'}]}},
          {debug_line,2421,1317},
          {match,
              {2421,5},
              {var,{2421,5},'_'},
              {call,
                  {2421,9},
                  {remote,
                      {2421,13},
                      {atom,{2421,9},file},
                      {atom,{2421,14},delete}},
                  [{var,{2421,21},'File'}]}},
          {debug_line,2423,1318},
          {'if',
              {2423,5},
              [{clause,
                   {2424,9},
                   [],
                   [[{call,
                         {2424,9},
                         {remote,
                             {2424,9},
                             {atom,{2424,9},erlang},
                             {atom,{2424,9},is_function}},
                         [{var,{2424,21},'Run'},{integer,{2424,26},1}]}]],
                   [{debug_line,2425,1319},
                    {match,
                        {2425,13},
                        {tuple,
                            {2425,13},
                            [{atom,{2425,14},module},{var,{2425,21},'Mod'}]},
                        {call,
                            {2425,28},
                            {remote,
                                {2425,32},
                                {atom,{2425,28},code},
                                {atom,{2425,33},load_binary}},
                            [{var,{2425,45},'Mod'},
                             {block,0,[{string,{2425,50},[]}]},
                             {var,{2425,54},'Beam'}]}},
                    {debug_line,2426,1320},
                    {match,
                        {2426,13},
                        {atom,{2426,13},ok},
                        {call,
                            {2426,18},
                            {var,{2426,18},'Run'},
                            [{var,{2426,22},'Mod'}]}},
                    {debug_line,2427,1321},
                    {call,
                        {2427,13},
                        {atom,{2427,13},run_test_unsetenv},
                        [{var,{2427,31},'Env'}]},
                    {debug_line,2428,1322},
                    {match,
                        {2428,13},
                        {atom,{2428,13},true},
                        {call,
                            {2428,20},
                            {remote,
                                {2428,24},
                                {atom,{2428,20},code},
                                {atom,{2428,25},delete}},
                            [{var,{2428,32},'Mod'}]}},
                    {debug_line,2429,1323},
                    {match,
                        {2429,13},
                        {var,{2429,13},'_'},
                        {call,
                            {2429,17},
                            {remote,
                                {2429,21},
                                {atom,{2429,17},code},
                                {atom,{2429,22},purge}},
                            [{var,{2429,28},'Mod'}]}},
                    {debug_line,2430,1324},
                    {atom,{2430,13},ok}]},
               {clause,
                   {2431,9},
                   [],
                   [[{op,{2431,13},
                         '=:=',
                         {var,{2431,9},'Run'},
                         {atom,{2431,17},none}}]],
                   [{debug_line,2432,1325},
                    {call,
                        {2432,13},
                        {atom,{2432,13},run_test_unsetenv},
                        [{var,{2432,31},'Env'}]},
                    {debug_line,2433,1326},
                    {match,
                        {2433,13},
                        {var,{2433,13},'Res'},
                        {call,
                            {2433,19},
                            {atom,{2433,19},get_warnings},
                            [{var,{2433,32},'Warnings'}]}},
                    {debug_line,2434,1327},
                    {'case',
                        {2434,13},
                        {var,{2434,18},'Res'},
                        [{clause,
                             {2435,17},
                             [{nil,{2435,17}}],
                             [],
                             [{debug_line,2436,1328},{nil,{2436,21}}]},
                         {clause,
                             {2437,17},
                             [{tuple,
                                  {2437,17},
                                  [{atom,{2437,18},warnings},
                                   {var,{2437,28},'Ws'}]}],
                             [],
                             [{debug_line,2438,1329},
                              {call,
                                  {2438,21},
                                  {atom,{2438,21},print_warnings},
                                  [{var,{2438,36},'Ws'},
                                   {var,{2438,40},'Test'}]},
                              {debug_line,2439,1330},
                              {var,{2439,21},'Res'}]}]}]}]}]}]}.
{function,
    {2443,1},
    run_test_putenv,1,
    [{clause,
         {2443,1},
         [{var,{2443,1},'_'}],
         [[{call,
               {2443,1},
               {remote,
                   {2443,1},
                   {atom,{2443,1},fake},
                   {atom,{2443,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2443,1331},{atom,{2443,1},ignore}]},
     {clause,
         {2443,1},
         [{var,{2443,17},'Env'}],
         [],
         [{debug_line,2444,1332},
          {match,
              {2444,5},
              {var,{2444,5},'_'},
              {lc,{2444,9},
                  {block,0,
                      [{match,
                           {2444,10},
                           {var,{2444,10},'_'},
                           {call,
                               {2444,14},
                               {remote,
                                   {2444,16},
                                   {atom,{2444,14},os},
                                   {atom,{2444,17},putenv}},
                               [{var,{2444,24},'Name'},
                                {var,{2444,30},'Value'}]}}]},
                  [{block,0,[{atom,{2444,56},true}]},
                   {generate,
                       {2444,53},
                       {tuple,
                           {2444,40},
                           [{var,{2444,41},'Name'},{var,{2444,46},'Value'}]},
                       {var,{2444,56},'Env'}}]}},
          {debug_line,2445,1333},
          {atom,{2445,5},ok}]}]}.
{function,
    {2447,1},
    run_test_unsetenv,1,
    [{clause,
         {2447,1},
         [{var,{2447,1},'_'}],
         [[{call,
               {2447,1},
               {remote,
                   {2447,1},
                   {atom,{2447,1},fake},
                   {atom,{2447,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2447,1334},{atom,{2447,1},ignore}]},
     {clause,
         {2447,1},
         [{var,{2447,19},'Env'}],
         [],
         [{debug_line,2448,1335},
          {match,
              {2448,5},
              {var,{2448,5},'_'},
              {lc,{2448,9},
                  {block,0,
                      [{match,
                           {2448,10},
                           {var,{2448,10},'_'},
                           {call,
                               {2448,14},
                               {remote,
                                   {2448,16},
                                   {atom,{2448,14},os},
                                   {atom,{2448,17},unsetenv}},
                               [{var,{2448,26},'Name'}]}}]},
                  [{block,0,[{atom,{2448,52},true}]},
                   {generate,
                       {2448,49},
                       {tuple,
                           {2448,35},
                           [{var,{2448,36},'Name'},{var,{2448,41},'_Value'}]},
                       {var,{2448,52},'Env'}}]}},
          {debug_line,2449,1336},
          {atom,{2449,5},ok}]}]}.
{function,
    {2451,1},
    get_warnings,1,
    [{clause,
         {2451,1},
         [{var,{2451,1},'_'}],
         [[{call,
               {2451,1},
               {remote,
                   {2451,1},
                   {atom,{2451,1},fake},
                   {atom,{2451,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2451,1337},{atom,{2451,1},ignore}]},
     {clause,
         {2451,1},
         [{nil,{2451,14}}],
         [],
         [{debug_line,2452,1338},{nil,{2452,5}}]},
     {clause,
         {2453,1},
         [{var,{2453,14},'WsL'}],
         [],
         [{debug_line,2454,1339},
          {'case',
              {2454,5},
              {var,{2454,10},'WsL'},
              [{clause,
                   {2455,9},
                   [{cons,
                        {2455,9},
                        {tuple,
                            {2455,10},
                            [{var,{2455,11},'_File'},{var,{2455,17},'Ws'}]},
                        {nil,{2455,20}}}],
                   [],
                   [{debug_line,2455,1340},
                    {tuple,
                        {2455,25},
                        [{atom,{2455,26},warnings},{var,{2455,36},'Ws'}]}]},
               {clause,
                   {2456,9},
                   [{var,{2456,9},'_'}],
                   [],
                   [{debug_line,2456,1341},
                    {tuple,
                        {2456,14},
                        [{atom,{2456,15},warnings},
                         {var,{2456,25},'WsL'}]}]}]}]}]}.
{function,
    {2459,1},
    print_warnings,2,
    [{clause,
         {2459,1},
         [{var,{2459,1},'_'},{var,{2459,1},'_'}],
         [[{call,
               {2459,1},
               {remote,
                   {2459,1},
                   {atom,{2459,1},fake},
                   {atom,{2459,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2459,1342},{atom,{2459,1},ignore}]},
     {clause,
         {2459,1},
         [{var,{2459,16},'Warnings'},{var,{2459,26},'Source'}],
         [],
         [{debug_line,2460,1343},
          {match,
              {2460,5},
              {var,{2460,5},'Lines'},
              {call,
                  {2460,13},
                  {remote,
                      {2460,19},
                      {atom,{2460,13},binary},
                      {atom,{2460,20},split}},
                  [{var,{2460,26},'Source'},
                   {block,0,
                       [{bin,
                            {2460,34},
                            [{bin_element,
                                 {2460,36},
                                 {string,{2460,36},"\n"},
                                 default,default}]}]},
                   {block,0,
                       [{cons,
                            {2460,44},
                            {atom,{2460,45},global},
                            {nil,{2460,51}}}]}]}},
          {debug_line,2461,1344},
          {match,
              {2461,5},
              {var,{2461,5},'Cs'},
              {lc,{2461,10},
                  {block,0,
                      [{call,
                           {2461,11},
                           {atom,{2461,11},print_warning},
                           [{var,{2461,25},'W'},{var,{2461,28},'Lines'}]}]},
                  [{block,0,[{atom,{2461,43},true}]},
                   {generate,
                       {2461,40},
                       {var,{2461,38},'W'},
                       {var,{2461,43},'Warnings'}}]}},
          {debug_line,2462,1345},
          {call,
              {2462,5},
              {remote,{2462,7},{atom,{2462,5},io},{atom,{2462,8},put_chars}},
              [{var,{2462,18},'Cs'}]},
          {debug_line,2463,1346},
          {atom,{2463,5},ok}]}]}.
{function,
 {2465,1},
 print_warning,2,
 [{clause,
   {2465,1},
   [{var,{2465,1},'_'},{var,{2465,1},'_'}],
   [[{call,
      {2465,1},
      {remote,{2465,1},{atom,{2465,1},fake},{atom,{2465,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2465,1347},{atom,{2465,1},ignore}]},
  {clause,
   {2465,1},
   [{tuple,
     {2465,15},
     [{tuple,{2465,16},[{var,{2465,17},'LineNum'},{var,{2465,25},'Column'}]},
      {var,{2465,33},'Mod'},
      {var,{2465,37},'Data'}]},
    {var,{2465,44},'Lines'}],
   [],
   [{debug_line,2466,1348},
    {match,
     {2466,5},
     {var,{2466,5},'Line0'},
     {call,
      {2466,13},
      {remote,{2466,18},{atom,{2466,13},lists},{atom,{2466,19},nth}},
      [{var,{2466,23},'LineNum'},{var,{2466,32},'Lines'}]}},
    {debug_line,2467,1349},
    {match,
     {2467,5},
     {bin,
      {2467,5},
      [{bin_element,
        {2467,7},
        {var,{2467,7},'Line1'},
        {op,{2467,20},'-',{var,{2467,14},'Column'},{integer,{2467,21},1}},
        [binary]},
       {bin_element,{2467,31},{var,{2467,31},'_'},default,[binary]}]},
     {var,{2467,44},'Line0'}},
    {debug_line,2468,1350},
    {match,
     {2468,5},
     {var,{2468,5},'Spaces'},
     {call,
      {2468,14},
      {remote,{2468,16},{atom,{2468,14},re},{atom,{2468,17},replace}},
      [{var,{2468,25},'Line1'},
       {block,0,
        [{bin,
          {2468,32},
          [{bin_element,
            {2468,34},
            {string,{2468,34},"[^\t]"},
            default,default}]}]},
       {block,0,
        [{bin,
          {2468,45},
          [{bin_element,{2468,47},{string,{2468,47}," "},default,default}]}]},
       {block,0,[{cons,{2468,54},{atom,{2468,55},global},{nil,{2468,61}}}]}]}},
    {debug_line,2469,1351},
    {match,
     {2469,5},
     {var,{2469,5},'CaretLine'},
     {cons,
      {2469,17},
      {var,{2469,18},'Spaces'},
      {cons,{2469,25},{string,{2469,25},"^"},{nil,{2469,28}}}}},
    {debug_line,2470,1352},
    {cons,
     {2470,5},
     {call,
      {2470,6},
      {remote,{2470,12},{atom,{2470,6},io_lib},{atom,{2470,13},format}},
      [{block,0,[{string,{2470,20},"~p:~p: ~ts\n"}]},
       {block,0,
        [{debug_line,2471,1353},
         {cons,
          {2471,20},
          {var,{2471,21},'LineNum'},
          {cons,
           {2471,29},
           {var,{2471,29},'Column'},
           {cons,
            {2471,36},
            {call,
             {2471,36},
             {remote,
              {2471,39},
              {var,{2471,36},'Mod'},
              {atom,{2471,40},format_error}},
             [{var,{2471,53},'Data'}]},
            {nil,{2471,58}}}}}]}]},
     {cons,
      {2472,6},
      {var,{2472,6},'Line0'},
      {cons,
       {2472,13},
       {string,{2472,13},"\n"},
       {cons,
        {2473,6},
        {var,{2473,6},'CaretLine'},
        {cons,{2473,17},{string,{2473,17},"\n\n"},{nil,{2473,23}}}}}}}]},
  {clause,
   {2474,1},
   [{var,{2474,15},'_'},{var,{2474,18},'_'}],
   [],
   [{debug_line,2475,1354},{nil,{2475,5}}]}]}.
{function,{2477,1},
          fail,0,
          [{clause,{2477,1},
                   [],
                   [[{call,{2477,1},
                           {remote,{2477,1},
                                   {atom,{2477,1},fake},
                                   {atom,{2477,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2477,1355},{atom,{2477,1},ignore}]},
           {clause,{2477,1},
                   [],[],
                   [{debug_line,2478,1356},
                    {call,{2478,5},
                          {remote,{2478,7},
                                  {atom,{2478,5},ct},
                                  {atom,{2478,8},fail}},
                          [{atom,{2478,13},failed}]}]}]}.
{eof,{2479,1}}.
