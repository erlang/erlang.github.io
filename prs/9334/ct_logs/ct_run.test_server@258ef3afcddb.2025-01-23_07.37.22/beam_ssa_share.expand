{attribute,{1,1},file,{"beam_ssa_share.erl",1}}.
{attribute,{35,2},module,beam_ssa_share}.
{attribute,{37,2},export,[{module,2},{block,2}]}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{40,1},file,{"beam_ssa_share.erl",40}}.
{attribute,{41,2},import,{lists,[{keyfind,3},{reverse,1},{sort,1}]}}.
{attribute,
    {43,2},
    spec,
    {{module,2},
     [{type,
          {43,13},
          'fun',
          [{type,
               {43,13},
               product,
               [{remote_type,
                    {43,14},
                    [{atom,{43,14},beam_ssa},{atom,{43,23},b_module},[]]},
                {type,
                    {43,35},
                    list,
                    [{remote_type,
                         {43,36},
                         [{atom,{43,36},compile},
                          {atom,{43,44},option},
                          []]}]}]},
           {type,
               {44,21},
               tuple,
               [{atom,{44,22},ok},
                {remote_type,
                    {44,27},
                    [{atom,{44,27},beam_ssa},
                     {atom,{44,36},b_module},
                     []]}]}]}]}}.
{function,
 {46,1},
 module,2,
 [{clause,
   {46,1},
   [{var,{46,1},'_'},{var,{46,1},'_'}],
   [[{call,
      {46,1},
      {remote,{46,1},{atom,{46,1},fake},{atom,{46,1},is_beam_bif_info}},
      []}]],
   [{debug_line,46,1},{atom,{46,1},ignore}]},
  {clause,
   {46,1},
   [{match,
     {46,8},
     {tuple,
      {46,8},
      [{atom,{46,8},b_module},
       {var,{46,8},'_'},
       {var,{46,8},'_'},
       {var,{46,8},'_'},
       {var,{46,8},'_'},
       {var,{46,23},'Fs0'}]},
     {var,{46,28},'Module'}},
    {var,{46,36},'_Opts'}],
   [],
   [{debug_line,47,2},
    {match,
     {47,5},
     {var,{47,5},'Fs'},
     {lc,
      {47,10},
      {block,0,[{call,{47,11},{atom,{47,11},function},[{var,{47,20},'F'}]}]},
      [{block,0,[{atom,{47,31},true}]},
       {generate,{47,28},{var,{47,26},'F'},{var,{47,31},'Fs0'}}]}},
    {debug_line,48,3},
    {tuple,
     {48,5},
     [{atom,{48,6},ok},
      {block,
       {48,9},
       [{match,{48,9},{var,{48,9},rec0},{var,{48,9},'Module'}},
        {'case',
         {48,25},
         {var,{48,9},rec0},
         [{clause,
           {48,25},
           [{tuple,
             {48,25},
             [{atom,{48,25},b_module},
              {var,{48,25},'_'},
              {var,{48,25},'_'},
              {var,{48,25},'_'},
              {var,{48,25},'_'},
              {var,{48,25},'_'}]}],
           [],
           [{call,
             {48,25},
             {remote,{48,25},{atom,{48,25},erlang},{atom,{48,25},setelement}},
             [{integer,{48,25},6},{var,{48,9},rec0},{var,{48,30},'Fs'}]}]},
          {clause,
           [{generated,true},{location,{48,25}}],
           [{var,[{generated,true},{location,{48,25}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{48,25}}],
             {remote,
              [{generated,true},{location,{48,25}}],
              {atom,[{generated,true},{location,{48,25}}],erlang},
              {atom,[{generated,true},{location,{48,25}}],error}},
             [{tuple,
               [{generated,true},{location,{48,25}}],
               [{atom,[{generated,true},{location,{48,25}}],badrecord},
                {var,{48,9},rec0}]}]}]}]}]}]}]}]}.
{attribute,
    {50,2},
    spec,
    {{block,2},
     [{type,
          {50,12},
          bounded_fun,
          [{type,
               {50,12},
               'fun',
               [{type,
                    {50,12},
                    product,
                    [{var,{50,13},'Blk0'},{var,{50,19},'Blocks0'}]},
                {var,{50,31},'Blk'}]},
           [{type,
                {51,7},
                constraint,
                [{atom,{51,7},is_subtype},
                 [{var,{51,7},'Blk0'},
                  {remote_type,
                      {51,15},
                      [{atom,{51,15},beam_ssa},{atom,{51,24},b_blk},[]]}]]},
            {type,
                {52,7},
                constraint,
                [{atom,{52,7},is_subtype},
                 [{var,{52,7},'Blocks0'},
                  {remote_type,
                      {52,18},
                      [{atom,{52,18},beam_ssa},
                       {atom,{52,27},block_map},
                       []]}]]},
            {type,
                {53,7},
                constraint,
                [{atom,{53,7},is_subtype},
                 [{var,{53,7},'Blk'},
                  {remote_type,
                      {53,14},
                      [{atom,{53,14},beam_ssa},
                       {atom,{53,23},b_blk},
                       []]}]]}]]}]}}.
{function,
 {55,1},
 block,2,
 [{clause,
   {55,1},
   [{var,{55,1},'_'},{var,{55,1},'_'}],
   [[{call,
      {55,1},
      {remote,{55,1},{atom,{55,1},fake},{atom,{55,1},is_beam_bif_info}},
      []}]],
   [{debug_line,55,4},{atom,{55,1},ignore}]},
  {clause,
   {55,1},
   [{match,
     {55,7},
     {tuple,
      {55,7},
      [{atom,{55,7},b_blk},
       {var,{55,7},'_'},
       {var,{55,17},'Is0'},
       {var,{55,26},'Last0'}]},
     {var,{55,33},'Blk'}},
    {var,{55,38},'Blocks'}],
   [[{call,
      {55,51},
      {remote,{55,51},{atom,{55,51},erlang},{atom,{55,51},is_map}},
      [{var,{55,58},'Blocks'}]}]],
   [{debug_line,56,5},
    {'case',
     {56,5},
     {call,
      {56,10},
      {atom,{56,10},share_terminator},
      [{var,{56,27},'Last0'},{var,{56,34},'Blocks'}]},
     [{clause,
       {57,9},
       [{atom,{57,9},none}],
       [],
       [{debug_line,58,6},{var,{58,13},'Blk'}]},
      {clause,
       {59,9},
       [{match,
         {59,9},
         {tuple,
          {59,9},
          [{atom,{59,9},b_br},
           {var,{59,9},'_'},
           {var,{59,9},'_'},
           {var,{59,20},'Same'},
           {var,{59,30},'Same'}]},
         {var,{59,36},'Last'}}],
       [],
       [{debug_line,62,7},
        {'case',
         {62,13},
         {call,
          {62,18},
          {remote,{62,18},{atom,{62,18},lists},{atom,{62,18},reverse}},
          [{var,{62,26},'Is0'}]},
         [{clause,
           {63,17},
           [{cons,
             {63,17},
             {tuple,
              {63,18},
              [{atom,{63,18},b_set},
               {var,{63,18},'_'},
               {var,{63,18},'_'},
               {tuple,{63,28},[{atom,{63,29},succeeded},{atom,{63,39},guard}]},
               {cons,{63,51},{var,{63,52},'Dst'},{nil,{63,55}}}]},
             {cons,
              {63,58},
              {tuple,
               {63,58},
               [{atom,{63,58},b_set},
                {var,{63,58},'_'},
                {var,{63,69},'Dst'},
                {var,{63,58},'_'},
                {var,{63,58},'_'}]},
              {var,{63,74},'Is'}}}],
           [],
           [{debug_line,67,8},
            {block,
             {67,21},
             [{match,
               {67,31},
               {var,{67,31},rec1},
               {call,
                {67,34},
                {remote,{67,34},{atom,{67,34},lists},{atom,{67,34},reverse}},
                [{var,{67,42},'Is'}]}},
              {match,
               {67,46},
               {var,{67,46},rec2},
               {call,
                {67,51},
                {remote,
                 {67,59},
                 {atom,{67,51},beam_ssa},
                 {atom,{67,60},normalize}},
                [{var,{67,70},'Last'}]}},
              {match,{67,21},{var,{67,21},rec3},{var,{67,21},'Blk'}},
              {'case',
               {67,31},
               {var,{67,21},rec3},
               [{clause,
                 {67,31},
                 [{tuple,
                   {67,31},
                   [{atom,{67,31},b_blk},
                    {var,{67,31},'_'},
                    {var,{67,31},'_'},
                    {var,{67,31},'_'}]}],
                 [],
                 [{call,
                   {67,31},
                   {remote,
                    {67,31},
                    {atom,{67,31},erlang},
                    {atom,{67,31},setelement}},
                   [{integer,{67,31},3},
                    {call,
                     {67,46},
                     {remote,
                      {67,46},
                      {atom,{67,46},erlang},
                      {atom,{67,46},setelement}},
                     [{integer,{67,46},4},
                      {var,{67,21},rec3},
                      {var,{67,46},rec2}]},
                    {var,{67,31},rec1}]}]},
                {clause,
                 [{generated,true},{location,{67,31}}],
                 [{var,[{generated,true},{location,{67,31}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{67,31}}],
                   {remote,
                    [{generated,true},{location,{67,31}}],
                    {atom,[{generated,true},{location,{67,31}}],erlang},
                    {atom,[{generated,true},{location,{67,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{67,31}}],
                     [{atom,[{generated,true},{location,{67,31}}],badrecord},
                      {var,{67,21},rec3}]}]}]}]}]}]},
          {clause,
           {68,17},
           [{var,{68,17},'_'}],
           [],
           [{debug_line,69,9},
            {block,
             {69,21},
             [{match,
               {69,31},
               {var,{69,31},rec4},
               {call,
                {69,36},
                {remote,
                 {69,44},
                 {atom,{69,36},beam_ssa},
                 {atom,{69,45},normalize}},
                [{var,{69,55},'Last'}]}},
              {match,{69,21},{var,{69,21},rec5},{var,{69,21},'Blk'}},
              {'case',
               {69,31},
               {var,{69,21},rec5},
               [{clause,
                 {69,31},
                 [{tuple,
                   {69,31},
                   [{atom,{69,31},b_blk},
                    {var,{69,31},'_'},
                    {var,{69,31},'_'},
                    {var,{69,31},'_'}]}],
                 [],
                 [{call,
                   {69,31},
                   {remote,
                    {69,31},
                    {atom,{69,31},erlang},
                    {atom,{69,31},setelement}},
                   [{integer,{69,31},4},
                    {var,{69,21},rec5},
                    {var,{69,31},rec4}]}]},
                {clause,
                 [{generated,true},{location,{69,31}}],
                 [{var,[{generated,true},{location,{69,31}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{69,31}}],
                   {remote,
                    [{generated,true},{location,{69,31}}],
                    {atom,[{generated,true},{location,{69,31}}],erlang},
                    {atom,[{generated,true},{location,{69,31}}],error}},
                   [{tuple,
                     [{generated,true},{location,{69,31}}],
                     [{atom,[{generated,true},{location,{69,31}}],badrecord},
                      {var,{69,21},rec5}]}]}]}]}]}]}]}]},
      {clause,
       {71,9},
       [{var,{71,9},'Last'}],
       [],
       [{debug_line,72,10},
        {block,
         {72,13},
         [{match,
           {72,23},
           {var,{72,23},rec6},
           {call,
            {72,28},
            {remote,{72,36},{atom,{72,28},beam_ssa},{atom,{72,37},normalize}},
            [{var,{72,47},'Last'}]}},
          {match,{72,13},{var,{72,13},rec7},{var,{72,13},'Blk'}},
          {'case',
           {72,23},
           {var,{72,13},rec7},
           [{clause,
             {72,23},
             [{tuple,
               {72,23},
               [{atom,{72,23},b_blk},
                {var,{72,23},'_'},
                {var,{72,23},'_'},
                {var,{72,23},'_'}]}],
             [],
             [{call,
               {72,23},
               {remote,
                {72,23},
                {atom,{72,23},erlang},
                {atom,{72,23},setelement}},
               [{integer,{72,23},4},{var,{72,13},rec7},{var,{72,23},rec6}]}]},
            {clause,
             [{generated,true},{location,{72,23}}],
             [{var,[{generated,true},{location,{72,23}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{72,23}}],
               {remote,
                [{generated,true},{location,{72,23}}],
                {atom,[{generated,true},{location,{72,23}}],erlang},
                {atom,[{generated,true},{location,{72,23}}],error}},
               [{tuple,
                 [{generated,true},{location,{72,23}}],
                 [{atom,[{generated,true},{location,{72,23}}],badrecord},
                  {var,{72,13},rec7}]}]}]}]}]}]}]}]}]}.
{function,
 {79,1},
 function,1,
 [{clause,
   {79,1},
   [{var,{79,1},'_'}],
   [[{call,
      {79,1},
      {remote,{79,1},{atom,{79,1},fake},{atom,{79,1},is_beam_bif_info}},
      []}]],
   [{debug_line,79,11},{atom,{79,1},ignore}]},
  {clause,
   {79,1},
   [{match,
     {79,10},
     {tuple,
      {79,10},
      [{atom,{79,10},b_function},
       {var,{79,27},'Anno'},
       {var,{79,10},'_'},
       {var,{79,35},'Blocks0'},
       {var,{79,10},'_'}]},
     {var,{79,44},'F'}}],
   [[{call,
      {79,52},
      {remote,{79,52},{atom,{79,52},erlang},{atom,{79,52},is_map}},
      [{var,{79,59},'Blocks0'}]}]],
   [{debug_line,80,12},
    {'try',
     {80,5},
     [{debug_line,81,13},
      {match,
       {81,9},
       {var,{81,9},'PO'},
       {call,
        {81,14},
        {remote,{81,14},{atom,{81,14},lists},{atom,{81,14},reverse}},
        [{block,0,
          [{call,
            {81,22},
            {remote,{81,30},{atom,{81,22},beam_ssa},{atom,{81,31},rpo}},
            [{var,{81,35},'Blocks0'}]}]}]}},
      {debug_line,82,14},
      {match,
       {82,9},
       {tuple,{82,9},[{var,{82,10},'Blocks1'},{var,{82,18},'Changed'}]},
       {call,
        {82,29},
        {atom,{82,29},blocks},
        [{var,{82,36},'PO'},{var,{82,40},'Blocks0'},{atom,{82,49},false}]}},
      {debug_line,83,15},
      {match,
       {83,9},
       {var,{83,9},'Blocks'},
       {'case',
        {83,18},
        {var,{83,23},'Changed'},
        [{clause,
          {84,22},
          [{atom,{84,22},true}],
          [],
          [{debug_line,85,16},
           {call,
            {85,26},
            {remote,
             {85,34},
             {atom,{85,26},beam_ssa},
             {atom,{85,35},trim_unreachable}},
            [{var,{85,52},'Blocks1'}]}]},
         {clause,
          {86,22},
          [{atom,{86,22},false}],
          [],
          [{debug_line,87,17},{var,{87,26},'Blocks0'}]}]}},
      {debug_line,89,18},
      {block,
       {89,9},
       [{match,{89,9},{var,{89,9},rec8},{var,{89,9},'F'}},
        {'case',
         {89,22},
         {var,{89,9},rec8},
         [{clause,
           {89,22},
           [{tuple,
             {89,22},
             [{atom,{89,22},b_function},
              {var,{89,22},'_'},
              {var,{89,22},'_'},
              {var,{89,22},'_'},
              {var,{89,22},'_'}]}],
           [],
           [{call,
             {89,22},
             {remote,{89,22},{atom,{89,22},erlang},{atom,{89,22},setelement}},
             [{integer,{89,22},4},{var,{89,9},rec8},{var,{89,25},'Blocks'}]}]},
          {clause,
           [{generated,true},{location,{89,22}}],
           [{var,[{generated,true},{location,{89,22}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{89,22}}],
             {remote,
              [{generated,true},{location,{89,22}}],
              {atom,[{generated,true},{location,{89,22}}],erlang},
              {atom,[{generated,true},{location,{89,22}}],error}},
             [{tuple,
               [{generated,true},{location,{89,22}}],
               [{atom,[{generated,true},{location,{89,22}}],badrecord},
                {var,{89,9},rec8}]}]}]}]}]}],
     [],
     [{clause,
       {91,9},
       [{tuple,
         {91,9},
         [{var,{91,9},'Class'},{var,{91,15},'Error'},{var,{91,21},'Stack'}]}],
       [],
       [{debug_line,92,19},
        {match,
         {92,13},
         {map,
          {92,13},
          [{map_field_exact,
            {92,24},
            {atom,{92,15},func_info},
            {tuple,
             {92,26},
             [{var,{92,27},'_'},
              {var,{92,29},'Name'},
              {var,{92,34},'Arity'}]}}]},
         {var,{92,44},'Anno'}},
        {debug_line,93,20},
        {call,
         {93,13},
         {remote,{93,15},{atom,{93,13},io},{atom,{93,16},fwrite}},
         [{block,0,[{string,{93,23},"Function: ~w/~w\n"}]},
          {block,0,
           [{cons,
             {93,44},
             {var,{93,45},'Name'},
             {cons,{93,50},{var,{93,50},'Arity'},{nil,{93,55}}}}]}]},
        {debug_line,94,21},
        {call,
         {94,13},
         {remote,{94,19},{atom,{94,13},erlang},{atom,{94,20},raise}},
         [{var,{94,26},'Class'},
          {var,{94,33},'Error'},
          {var,{94,40},'Stack'}]}]}],
     []}]}]}.
{function,
    {97,1},
    blocks,3,
    [{clause,
         {97,1},
         [{var,{97,1},'_'},{var,{97,1},'_'},{var,{97,1},'_'}],
         [[{call,
               {97,1},
               {remote,
                   {97,1},
                   {atom,{97,1},fake},
                   {atom,{97,1},is_beam_bif_info}},
               []}]],
         [{debug_line,97,22},{atom,{97,1},ignore}]},
     {clause,
         {97,1},
         [{cons,{97,8},{var,{97,9},'L'},{var,{97,11},'Ls'}},
          {var,{97,16},'Blocks'},
          {var,{97,24},'Changed'}],
         [],
         [{debug_line,98,23},
          {match,
              {98,5},
              {tuple,
                  {98,5},
                  [{atom,{98,5},b_blk},
                   {var,{98,5},'_'},
                   {var,{98,5},'_'},
                   {var,{98,17},'Last0'}]},
              {match,
                  {98,26},
                  {var,{98,26},'Blk0'},
                  {call,
                      {98,33},
                      {remote,
                          {98,33},
                          {atom,{98,33},erlang},
                          {atom,{98,33},map_get}},
                      [{var,{98,41},'L'},{var,{98,44},'Blocks'}]}}},
          {debug_line,99,24},
          {'case',
              {99,5},
              {call,
                  {99,10},
                  {atom,{99,10},block},
                  [{var,{99,16},'Blk0'},{var,{99,22},'Blocks'}]},
              [{clause,
                   {100,9},
                   [{tuple,
                        {100,9},
                        [{atom,{100,9},b_blk},
                         {var,{100,9},'_'},
                         {var,{100,9},'_'},
                         {var,{100,21},'Last0'}]}],
                   [],
                   [{debug_line,101,25},
                    {call,
                        {101,13},
                        {atom,{101,13},blocks},
                        [{var,{101,20},'Ls'},
                         {var,{101,24},'Blocks'},
                         {var,{101,32},'Changed'}]}]},
               {clause,
                   {102,9},
                   [{match,
                        {102,9},
                        {tuple,
                            {102,9},
                            [{atom,{102,9},b_blk},
                             {var,{102,9},'_'},
                             {var,{102,9},'_'},
                             {var,{102,9},'_'}]},
                        {var,{102,18},'Blk'}}],
                   [],
                   [{debug_line,103,26},
                    {call,
                        {103,13},
                        {atom,{103,13},blocks},
                        [{var,{103,20},'Ls'},
                         {block,0,
                             [{map,
                                  {103,30},
                                  {var,{103,24},'Blocks'},
                                  [{map_field_exact,
                                       {103,33},
                                       {var,{103,32},'L'},
                                       {var,{103,35},'Blk'}}]}]},
                         {atom,{103,41},true}]}]}]}]},
     {clause,
         {105,1},
         [{nil,{105,8}},{var,{105,12},'Blocks'},{var,{105,20},'Changed'}],
         [],
         [{debug_line,106,27},
          {tuple,
              {106,5},
              [{var,{106,6},'Blocks'},{var,{106,13},'Changed'}]}]}]}.
{function,
 {108,1},
 share_terminator,2,
 [{clause,
   {108,1},
   [{var,{108,1},'_'},{var,{108,1},'_'}],
   [[{call,
      {108,1},
      {remote,{108,1},{atom,{108,1},fake},{atom,{108,1},is_beam_bif_info}},
      []}]],
   [{debug_line,108,28},{atom,{108,1},ignore}]},
  {clause,
   {108,1},
   [{match,
     {108,18},
     {tuple,
      {108,18},
      [{atom,{108,18},b_br},
       {var,{108,18},'_'},
       {tuple,{108,29},[{atom,{108,29},b_var},{var,{108,29},'_'}]},
       {var,{108,43},'Succ0'},
       {var,{108,54},'Fail0'}]},
     {var,{108,61},'Br'}},
    {var,{108,65},'Blocks'}],
   [],
   [{debug_line,109,29},
    {match,
     {109,5},
     {tuple,{109,5},[{var,{109,6},'Succ'},{var,{109,11},'SuccBlk'}]},
     {call,
      {109,22},
      {atom,{109,22},shortcut_nonempty_block},
      [{var,{109,46},'Succ0'},{var,{109,53},'Blocks'}]}},
    {debug_line,110,30},
    {match,
     {110,5},
     {tuple,{110,5},[{var,{110,6},'Fail'},{var,{110,11},'FailBlk'}]},
     {call,
      {110,22},
      {atom,{110,22},shortcut_nonempty_block},
      [{var,{110,46},'Fail0'},{var,{110,53},'Blocks'}]}},
    {debug_line,111,31},
    {'case',
     {111,5},
     {call,
      {111,10},
      {atom,{111,10},are_equivalent},
      [{var,{111,25},'Succ'},
       {var,{111,31},'SuccBlk'},
       {var,{111,40},'Fail'},
       {var,{111,46},'FailBlk'},
       {var,{111,55},'Blocks'}]},
     [{clause,
       {112,9},
       [{atom,{112,9},true}],
       [],
       [{debug_line,114,32},
        {block,
         {114,13},
         [{match,{114,13},{var,{114,13},rec9},{var,{114,13},'Br'}},
          {'case',
           {114,21},
           {var,{114,13},rec9},
           [{clause,
             {114,21},
             [{tuple,
               {114,21},
               [{atom,{114,21},b_br},
                {var,{114,21},'_'},
                {var,{114,21},'_'},
                {var,{114,21},'_'},
                {var,{114,21},'_'}]}],
             [],
             [{call,
               {114,21},
               {remote,
                {114,21},
                {atom,{114,21},erlang},
                {atom,{114,21},setelement}},
               [{integer,{114,21},4},
                {call,
                 {114,31},
                 {remote,
                  {114,31},
                  {atom,{114,31},erlang},
                  {atom,{114,31},setelement}},
                 [{integer,{114,31},5},
                  {var,{114,13},rec9},
                  {var,{114,36},'Succ'}]},
                {var,{114,26},'Succ'}]}]},
            {clause,
             [{generated,true},{location,{114,21}}],
             [{var,[{generated,true},{location,{114,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{114,21}}],
               {remote,
                [{generated,true},{location,{114,21}}],
                {atom,[{generated,true},{location,{114,21}}],erlang},
                {atom,[{generated,true},{location,{114,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{114,21}}],
                 [{atom,[{generated,true},{location,{114,21}}],badrecord},
                  {var,{114,13},rec9}]}]}]}]}]}]},
      {clause,
       {115,9},
       [{atom,{115,9},false}],
       [],
       [{debug_line,116,33},
        {'if',
         {116,13},
         [{clause,
           {117,17},
           [],
           [[{op,{117,22},'=:=',{var,{117,17},'Succ'},{var,{117,26},'Succ0'}},
             {op,
              {117,38},
              '=:=',
              {var,{117,33},'Fail'},
              {var,{117,42},'Fail0'}}]],
           [{debug_line,119,34},{atom,{119,21},none}]},
          {clause,
           {120,17},
           [],
           [[{atom,{120,17},true}]],
           [{debug_line,123,35},
            {block,
             {123,21},
             [{match,{123,21},{var,{123,21},rec10},{var,{123,21},'Br'}},
              {'case',
               {123,29},
               {var,{123,21},rec10},
               [{clause,
                 {123,29},
                 [{tuple,
                   {123,29},
                   [{atom,{123,29},b_br},
                    {var,{123,29},'_'},
                    {var,{123,29},'_'},
                    {var,{123,29},'_'},
                    {var,{123,29},'_'}]}],
                 [],
                 [{call,
                   {123,29},
                   {remote,
                    {123,29},
                    {atom,{123,29},erlang},
                    {atom,{123,29},setelement}},
                   [{integer,{123,29},4},
                    {call,
                     {123,39},
                     {remote,
                      {123,39},
                      {atom,{123,39},erlang},
                      {atom,{123,39},setelement}},
                     [{integer,{123,39},5},
                      {var,{123,21},rec10},
                      {var,{123,44},'Fail'}]},
                    {var,{123,34},'Succ'}]}]},
                {clause,
                 [{generated,true},{location,{123,29}}],
                 [{var,[{generated,true},{location,{123,29}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{123,29}}],
                   {remote,
                    [{generated,true},{location,{123,29}}],
                    {atom,[{generated,true},{location,{123,29}}],erlang},
                    {atom,[{generated,true},{location,{123,29}}],error}},
                   [{tuple,
                     [{generated,true},{location,{123,29}}],
                     [{atom,[{generated,true},{location,{123,29}}],badrecord},
                      {var,{123,21},rec10}]}]}]}]}]}]}]}]}]}]},
  {clause,
   {126,1},
   [{match,
     {126,18},
     {tuple,
      {126,18},
      [{atom,{126,18},b_switch},
       {var,{126,18},'_'},
       {var,{126,18},'_'},
       {var,{126,18},'_'},
       {var,{126,18},'_'}]},
     {var,{126,30},'Sw'}},
    {var,{126,34},'Blocks'}],
   [],
   [{debug_line,127,36},
    {call,
     {127,5},
     {atom,{127,5},share_switch},
     [{var,{127,18},'Sw'},{var,{127,22},'Blocks'}]}]},
  {clause,
   {128,1},
   [{var,{128,18},'_Last'},{var,{128,25},'_Blocks'}],
   [],
   [{debug_line,128,37},{atom,{128,37},none}]}]}.
{function,
 {135,1},
 are_equivalent,5,
 [{clause,
   {135,1},
   [{var,{135,1},'_'},
    {var,{135,1},'_'},
    {var,{135,1},'_'},
    {var,{135,1},'_'},
    {var,{135,1},'_'}],
   [[{call,
      {135,1},
      {remote,{135,1},{atom,{135,1},fake},{atom,{135,1},is_beam_bif_info}},
      []}]],
   [{debug_line,135,38},{atom,{135,1},ignore}]},
  {clause,
   {135,1},
   [{var,{135,16},'_Succ'},
    {var,{135,23},'_'},
    {integer,{135,27},1},
    {var,{135,44},'_'},
    {var,{135,47},'_Blocks'}],
   [],
   [{debug_line,137,39},{atom,{137,5},false}]},
  {clause,
   {138,1},
   [{var,{138,16},'_Succ'},
    {tuple,
     {138,23},
     [{atom,{138,23},b_blk},
      {var,{138,23},'_'},
      {var,{138,33},'Is1'},
      {match,
       {138,42},
       {tuple,
        {138,42},
        [{atom,{138,42},b_ret},{var,{138,42},'_'},{var,{138,53},'RetVal1'}]},
       {var,{138,62},'Ret1'}}]},
    {var,{139,10},'_Fail'},
    {tuple,
     {139,17},
     [{atom,{139,17},b_blk},
      {var,{139,17},'_'},
      {var,{139,27},'Is2'},
      {match,
       {139,36},
       {tuple,
        {139,36},
        [{atom,{139,36},b_ret},{var,{139,36},'_'},{var,{139,47},'RetVal2'}]},
       {var,{139,56},'Ret2'}}]},
    {var,{139,63},'_Blocks'}],
   [],
   [{debug_line,140,40},
    {'case',
     {140,5},
     {tuple,{140,10},[{var,{140,11},'RetVal1'},{var,{140,19},'RetVal2'}]},
     [{clause,
       {141,9},
       [{tuple,
         {141,9},
         [{tuple,{141,10},[{atom,{141,10},b_literal},{var,{141,10},'_'}]},
          {tuple,{141,23},[{atom,{141,23},b_literal},{var,{141,23},'_'}]}]}],
       [],
       [{debug_line,142,41},
        {'case',
         {142,13},
         {op,{142,26},'=:=',{var,{142,18},'RetVal1'},{var,{142,30},'RetVal2'}},
         [{clause,
           {143,17},
           [{atom,{143,17},true}],
           [],
           [{debug_line,146,42},
            {match,
             {146,21},
             {var,{146,21},'Can1'},
             {call,
              {146,28},
              {atom,{146,28},canonical_is},
              [{var,{146,41},'Is1'}]}},
            {debug_line,147,43},
            {match,
             {147,21},
             {var,{147,21},'Can2'},
             {call,
              {147,28},
              {atom,{147,28},canonical_is},
              [{var,{147,41},'Is2'}]}},
            {debug_line,148,44},
            {op,{148,26},'=:=',{var,{148,21},'Can1'},{var,{148,30},'Can2'}}]},
          {clause,
           {149,17},
           [{atom,{149,17},false}],
           [],
           [{debug_line,151,45},{atom,{151,21},false}]}]}]},
      {clause,
       {153,9},
       [{tuple,
         {153,9},
         [{tuple,{153,10},[{atom,{153,10},b_var},{var,{153,10},'_'}]},
          {tuple,{153,19},[{atom,{153,19},b_var},{var,{153,19},'_'}]}]}],
       [],
       [{debug_line,156,46},
        {match,
         {156,13},
         {var,{156,13},'Can1'},
         {call,
          {156,20},
          {atom,{156,20},canonical_is},
          [{block,0,
            [{op,
              {156,37},
              '++',
              {var,{156,33},'Is1'},
              {cons,{156,40},{var,{156,41},'Ret1'},{nil,{156,45}}}}]}]}},
        {debug_line,157,47},
        {match,
         {157,13},
         {var,{157,13},'Can2'},
         {call,
          {157,20},
          {atom,{157,20},canonical_is},
          [{block,0,
            [{op,
              {157,37},
              '++',
              {var,{157,33},'Is2'},
              {cons,{157,40},{var,{157,41},'Ret2'},{nil,{157,45}}}}]}]}},
        {debug_line,158,48},
        {op,{158,18},'=:=',{var,{158,13},'Can1'},{var,{158,22},'Can2'}}]},
      {clause,
       {159,9},
       [{tuple,{159,9},[{var,{159,10},'_'},{var,{159,12},'_'}]}],
       [],
       [{debug_line,161,49},{atom,{161,13},false}]}]}]},
  {clause,
   {163,1},
   [{var,{163,16},'Succ'},
    {tuple,
     {164,10},
     [{atom,{164,10},b_blk},
      {var,{164,10},'_'},
      {var,{164,20},'Is1'},
      {tuple,
       {165,22},
       [{atom,{165,22},b_br},
        {var,{165,22},'_'},
        {tuple,{165,33},[{atom,{165,33},b_literal},{atom,{165,48},true}]},
        {var,{166,33},'Target'},
        {var,{165,22},'_'}]}]},
    {var,{167,10},'Fail'},
    {tuple,
     {168,10},
     [{atom,{168,10},b_blk},
      {var,{168,10},'_'},
      {var,{168,20},'Is2'},
      {tuple,
       {169,22},
       [{atom,{169,22},b_br},
        {var,{169,22},'_'},
        {tuple,{169,33},[{atom,{169,33},b_literal},{atom,{169,48},true}]},
        {var,{170,33},'Target'},
        {var,{169,22},'_'}]}]},
    {var,{171,10},'Blocks'}],
   [],
   [{debug_line,176,50},
    {match,
     {176,5},
     {tuple,
      {176,5},
      [{atom,{176,5},b_blk},
       {var,{176,5},'_'},
       {var,{176,15},'Is'},
       {var,{176,5},'_'}]},
     {call,
      {176,21},
      {remote,{176,21},{atom,{176,21},erlang},{atom,{176,21},map_get}},
      [{var,{176,29},'Target'},{var,{176,37},'Blocks'}]}},
    {debug_line,177,51},
    {match,
     {177,5},
     {var,{177,5},'Phis1'},
     {call,
      {177,13},
      {atom,{177,13},canonical_terminator_phis},
      [{var,{177,39},'Is'},{var,{177,43},'Succ'}]}},
    {debug_line,178,52},
    {match,
     {178,5},
     {var,{178,5},'Phis2'},
     {call,
      {178,13},
      {atom,{178,13},canonical_terminator_phis},
      [{var,{178,39},'Is'},{var,{178,43},'Fail'}]}},
    {debug_line,179,53},
    {'case',
     {179,5},
     {tuple,{179,10},[{var,{179,11},'Phis1'},{var,{179,17},'Phis2'}]},
     [{clause,
       {180,9},
       [{tuple,
         {180,9},
         [{cons,
           {180,10},
           {tuple,
            {180,11},
            [{atom,{180,11},b_set},
             {var,{180,11},'_'},
             {var,{180,11},'_'},
             {var,{180,11},'_'},
             {cons,
              {180,23},
              {tuple,{180,24},[{atom,{180,24},b_literal},{var,{180,24},'_'}]},
              {nil,{180,36}}}]},
           {var,{180,39},'_'}},
          {var,{180,42},'_'}]}],
       [[{op,{180,56},'=/=',{var,{180,50},'Phis1'},{var,{180,60},'Phis2'}}]],
       [{debug_line,182,54},{atom,{182,13},false}]},
      {clause,
       {183,9},
       [{tuple,
         {183,9},
         [{var,{183,10},'_'},
          {cons,
           {183,12},
           {tuple,
            {183,13},
            [{atom,{183,13},b_set},
             {var,{183,13},'_'},
             {var,{183,13},'_'},
             {var,{183,13},'_'},
             {cons,
              {183,25},
              {tuple,{183,26},[{atom,{183,26},b_literal},{var,{183,26},'_'}]},
              {nil,{183,38}}}]},
           {var,{183,41},'_'}}]}],
       [[{op,{183,56},'=/=',{var,{183,50},'Phis1'},{var,{183,60},'Phis2'}}]],
       [{debug_line,185,55},{atom,{185,13},false}]},
      {clause,
       {186,9},
       [{tuple,{186,9},[{var,{186,10},'_'},{var,{186,12},'_'}]}],
       [],
       [{debug_line,190,56},
        {match,
         {190,13},
         {var,{190,13},'Can1'},
         {call,
          {190,20},
          {atom,{190,20},canonical_is},
          [{block,0,
            [{op,
              {190,37},
              '++',
              {var,{190,33},'Is1'},
              {var,{190,40},'Phis1'}}]}]}},
        {debug_line,191,57},
        {match,
         {191,13},
         {var,{191,13},'Can2'},
         {call,
          {191,20},
          {atom,{191,20},canonical_is},
          [{block,0,
            [{op,
              {191,37},
              '++',
              {var,{191,33},'Is2'},
              {var,{191,40},'Phis2'}}]}]}},
        {debug_line,192,58},
        {op,{192,18},'=:=',{var,{192,13},'Can1'},{var,{192,22},'Can2'}}]}]}]},
  {clause,
   {194,1},
   [{var,{194,16},'Succ0'},
    {tuple,
     {194,23},
     [{atom,{194,23},b_blk},
      {var,{194,23},'_'},
      {var,{194,33},'Is1'},
      {tuple,
       {194,42},
       [{atom,{194,42},b_br},
        {var,{194,42},'_'},
        {tuple,{194,53},[{atom,{194,53},b_var},{var,{194,53},'_'}]},
        {var,{194,42},'_'},
        {var,{194,67},'Same'}]}]},
    {var,{195,10},'Fail0'},
    {tuple,
     {195,17},
     [{atom,{195,17},b_blk},
      {var,{195,17},'_'},
      {var,{195,27},'Is2'},
      {tuple,
       {195,36},
       [{atom,{195,36},b_br},
        {var,{195,36},'_'},
        {tuple,{195,47},[{atom,{195,47},b_var},{var,{195,47},'_'}]},
        {var,{195,36},'_'},
        {var,{195,61},'Same'}]}]},
    {var,{196,10},'Blocks'}],
   [],
   [{debug_line,199,59},
    {'case',
     {199,5},
     {op,
      {199,28},
      '=:=',
      {call,{199,10},{atom,{199,10},canonical_is},[{var,{199,23},'Is1'}]},
      {call,{199,32},{atom,{199,32},canonical_is},[{var,{199,45},'Is2'}]}},
     [{clause,
       {200,9},
       [{atom,{200,9},false}],
       [],
       [{debug_line,202,60},{atom,{202,13},false}]},
      {clause,
       {203,9},
       [{atom,{203,9},true}],
       [],
       [{debug_line,208,61},
        {match,
         {208,13},
         {var,{208,13},'Sw'},
         {tuple,
          {208,18},
          [{atom,{208,18},b_switch},
           {map,{208,18},[]},
           {tuple,{208,32},[{atom,{208,32},b_var},{atom,{208,44},not_used}]},
           {var,{208,59},'Fail0'},
           {cons,
            {209,33},
            {tuple,
             {209,34},
             [{tuple,
               {209,35},
               [{atom,{209,35},b_literal},{atom,{209,35},undefined}]},
              {var,{209,48},'Succ0'}]},
            {nil,{209,54}}}]}},
        {debug_line,210,62},
        {match,
         {210,13},
         {tuple,
          {210,13},
          [{atom,{210,13},b_switch},
           {var,{210,13},'_'},
           {var,{210,13},'_'},
           {var,{210,28},'Fail'},
           {cons,
            {210,38},
            {tuple,{210,39},[{var,{210,40},'_'},{var,{210,42},'Succ'}]},
            {nil,{210,47}}}]},
         {call,
          {210,52},
          {atom,{210,52},share_switch},
          [{var,{210,65},'Sw'},{var,{210,69},'Blocks'}]}},
        {debug_line,211,63},
        {op,{211,18},'=:=',{var,{211,13},'Fail'},{var,{211,22},'Succ'}}]}]}]},
  {clause,
   {213,1},
   [{var,{213,16},'_'},
    {var,{213,19},'_'},
    {var,{213,22},'_'},
    {var,{213,25},'_'},
    {var,{213,28},'_'}],
   [],
   [{debug_line,213,64},{atom,{213,34},false}]}]}.
{function,
    {215,1},
    share_switch,2,
    [{clause,
         {215,1},
         [{var,{215,1},'_'},{var,{215,1},'_'}],
         [[{call,
               {215,1},
               {remote,
                   {215,1},
                   {atom,{215,1},fake},
                   {atom,{215,1},is_beam_bif_info}},
               []}]],
         [{debug_line,215,65},{atom,{215,1},ignore}]},
     {clause,
         {215,1},
         [{match,
              {215,14},
              {tuple,
                  {215,14},
                  [{atom,{215,14},b_switch},
                   {var,{215,14},'_'},
                   {var,{215,14},'_'},
                   {var,{215,29},'Fail0'},
                   {var,{215,40},'List0'}]},
              {var,{215,47},'Sw'}},
          {var,{215,51},'Blocks'}],
         [],
         [{debug_line,216,66},
          {match,
              {216,5},
              {var,{216,5},'Prep'},
              {call,
                  {216,12},
                  {atom,{216,12},share_prepare_sw},
                  [{block,0,
                       [{cons,
                            {216,29},
                            {tuple,
                                {216,30},
                                [{atom,{216,31},value},
                                 {var,{216,37},'Fail0'}]},
                            {var,{216,44},'List0'}}]},
                   {var,{216,52},'Blocks'},
                   {integer,{216,60},0},
                   {nil,{216,63}}]}},
          {debug_line,217,67},
          {match,
              {217,5},
              {var,{217,5},'Res'},
              {call,
                  {217,11},
                  {atom,{217,11},do_share_switch},
                  [{var,{217,27},'Prep'},
                   {var,{217,33},'Blocks'},
                   {nil,{217,41}}]}},
          {debug_line,218,68},
          {match,
              {218,5},
              {cons,
                  {218,5},
                  {tuple,{218,6},[{var,{218,7},'_'},{var,{218,9},'Fail'}]},
                  {var,{218,15},'List'}},
              {lc,{218,23},
                  {block,0,[{var,{218,24},'VL'}]},
                  [{block,0,[{atom,{218,41},true}]},
                   {generate_strict,
                       {218,37},
                       {tuple,
                           {218,30},
                           [{var,{218,31},'_'},{var,{218,33},'VL'}]},
                       {call,
                           {218,41},
                           {remote,
                               {218,41},
                               {atom,{218,41},lists},
                               {atom,{218,41},sort}},
                           [{var,{218,46},'Res'}]}}]}},
          {debug_line,219,69},
          {block,
              {219,5},
              [{match,{219,5},{var,{219,5},rec11},{var,{219,5},'Sw'}},
               {'case',
                   {219,17},
                   {var,{219,5},rec11},
                   [{clause,
                        {219,17},
                        [{tuple,
                             {219,17},
                             [{atom,{219,17},b_switch},
                              {var,{219,17},'_'},
                              {var,{219,17},'_'},
                              {var,{219,17},'_'},
                              {var,{219,17},'_'}]}],
                        [],
                        [{call,
                             {219,17},
                             {remote,
                                 {219,17},
                                 {atom,{219,17},erlang},
                                 {atom,{219,17},setelement}},
                             [{integer,{219,17},4},
                              {call,
                                  {219,27},
                                  {remote,
                                      {219,27},
                                      {atom,{219,27},erlang},
                                      {atom,{219,27},setelement}},
                                  [{integer,{219,27},5},
                                   {var,{219,5},rec11},
                                   {var,{219,32},'List'}]},
                              {var,{219,22},'Fail'}]}]},
                    {clause,
                        [{generated,true},{location,{219,17}}],
                        [{var,[{generated,true},{location,{219,17}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{219,17}}],
                             {remote,
                                 [{generated,true},{location,{219,17}}],
                                 {atom,
                                     [{generated,true},{location,{219,17}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{219,17}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{219,17}}],
                                  [{atom,
                                       [{generated,true},{location,{219,17}}],
                                       badrecord},
                                   {var,{219,5},rec11}]}]}]}]}]}]}]}.
{function,
    {221,1},
    share_prepare_sw,4,
    [{clause,
         {221,1},
         [{var,{221,1},'_'},
          {var,{221,1},'_'},
          {var,{221,1},'_'},
          {var,{221,1},'_'}],
         [[{call,
               {221,1},
               {remote,
                   {221,1},
                   {atom,{221,1},fake},
                   {atom,{221,1},is_beam_bif_info}},
               []}]],
         [{debug_line,221,70},{atom,{221,1},ignore}]},
     {clause,
         {221,1},
         [{cons,
              {221,18},
              {tuple,{221,19},[{var,{221,20},'V'},{var,{221,22},'L0'}]},
              {var,{221,26},'T'}},
          {var,{221,30},'Blocks'},
          {var,{221,38},'N'},
          {var,{221,41},'Acc'}],
         [],
         [{debug_line,222,71},
          {match,
              {222,5},
              {tuple,{222,5},[{var,{222,6},'L'},{var,{222,8},'_Blk'}]},
              {call,
                  {222,16},
                  {atom,{222,16},shortcut_nonempty_block},
                  [{var,{222,40},'L0'},{var,{222,44},'Blocks'}]}},
          {debug_line,223,72},
          {call,
              {223,5},
              {atom,{223,5},share_prepare_sw},
              [{var,{223,22},'T'},
               {var,{223,25},'Blocks'},
               {block,0,
                   [{op,{223,34},
                        '+',
                        {var,{223,33},'N'},
                        {integer,{223,35},1}}]},
               {block,0,
                   [{cons,
                        {223,38},
                        {tuple,
                            {223,39},
                            [{tuple,
                                 {223,40},
                                 [{var,{223,41},'L'},{map,{223,43},[]}]},
                             {tuple,
                                 {223,48},
                                 [{var,{223,49},'N'},
                                  {tuple,
                                      {223,51},
                                      [{var,{223,52},'V'},
                                       {var,{223,54},'L'}]}]}]},
                        {var,{223,59},'Acc'}}]}]}]},
     {clause,
         {224,1},
         [{nil,{224,18}},
          {var,{224,22},'_'},
          {var,{224,25},'_'},
          {var,{224,28},'Acc'}],
         [],
         [{debug_line,224,73},{var,{224,36},'Acc'}]}]}.
{function,
    {226,1},
    do_share_switch,3,
    [{clause,
         {226,1},
         [{var,{226,1},'_'},{var,{226,1},'_'},{var,{226,1},'_'}],
         [[{call,
               {226,1},
               {remote,
                   {226,1},
                   {atom,{226,1},fake},
                   {atom,{226,1},is_beam_bif_info}},
               []}]],
         [{debug_line,226,74},{atom,{226,1},ignore}]},
     {clause,
         {226,1},
         [{var,{226,17},'Prep'},{var,{226,23},'Blocks'},{var,{226,31},'Acc'}],
         [],
         [{debug_line,227,75},
          {match,
              {227,5},
              {var,{227,5},'Map'},
              {call,
                  {227,11},
                  {atom,{227,11},share_switch_1},
                  [{var,{227,26},'Prep'},
                   {var,{227,32},'Blocks'},
                   {block,0,[{map,{227,40},[]}]}]}},
          {debug_line,228,76},
          {call,
              {228,5},
              {atom,{228,5},share_switch_2},
              [{block,0,
                   [{call,
                        {228,20},
                        {remote,
                            {228,24},
                            {atom,{228,20},maps},
                            {atom,{228,25},values}},
                        [{var,{228,32},'Map'}]}]},
               {var,{228,38},'Blocks'},
               {var,{228,46},'Acc'}]}]}]}.
{function,
 {230,1},
 share_switch_1,3,
 [{clause,
   {230,1},
   [{var,{230,1},'_'},{var,{230,1},'_'},{var,{230,1},'_'}],
   [[{call,
      {230,1},
      {remote,{230,1},{atom,{230,1},fake},{atom,{230,1},is_beam_bif_info}},
      []}]],
   [{debug_line,230,77},{atom,{230,1},ignore}]},
  {clause,
   {230,1},
   [{cons,
     {230,16},
     {tuple,{230,17},[{var,{230,18},'Next0'},{var,{230,24},'Res'}]},
     {var,{230,29},'T'}},
    {var,{230,33},'Blocks'},
    {var,{230,41},'Map'}],
   [],
   [{debug_line,231,78},
    {match,
     {231,5},
     {tuple,{231,5},[{var,{231,6},'Can'},{var,{231,10},'Next'}]},
     {call,
      {231,18},
      {atom,{231,18},canonical_block},
      [{var,{231,34},'Next0'},{var,{231,41},'Blocks'}]}},
    {debug_line,232,79},
    {'case',
     {232,5},
     {var,{232,10},'Map'},
     [{clause,
       {233,9},
       [{map,
         {233,9},
         [{map_field_exact,
           {233,14},
           {var,{233,11},'Can'},
           {var,{233,16},'Ls'}}]}],
       [],
       [{debug_line,234,80},
        {call,
         {234,13},
         {atom,{234,13},share_switch_1},
         [{var,{234,28},'T'},
          {var,{234,31},'Blocks'},
          {block,0,
           [{map,
             {234,42},
             {var,{234,39},'Map'},
             [{map_field_exact,
               {234,47},
               {var,{234,44},'Can'},
               {cons,
                {234,49},
                {tuple,{234,50},[{var,{234,51},'Next'},{var,{234,56},'Res'}]},
                {var,{234,61},'Ls'}}}]}]}]}]},
      {clause,
       {235,9},
       [{map,{235,9},[]}],
       [],
       [{debug_line,236,81},
        {call,
         {236,13},
         {atom,{236,13},share_switch_1},
         [{var,{236,28},'T'},
          {var,{236,31},'Blocks'},
          {block,0,
           [{map,
             {236,42},
             {var,{236,39},'Map'},
             [{map_field_assoc,
               {236,47},
               {var,{236,44},'Can'},
               {cons,
                {236,49},
                {tuple,{236,50},[{var,{236,51},'Next'},{var,{236,56},'Res'}]},
                {nil,{236,60}}}}]}]}]}]}]}]},
  {clause,
   {238,1},
   [{nil,{238,16}},{var,{238,20},'_Blocks'},{var,{238,29},'Map'}],
   [],
   [{debug_line,238,82},{var,{238,37},'Map'}]}]}.
{function,
 {240,1},
 share_switch_2,3,
 [{clause,
   {240,1},
   [{var,{240,1},'_'},{var,{240,1},'_'},{var,{240,1},'_'}],
   [[{call,
      {240,1},
      {remote,{240,1},{atom,{240,1},fake},{atom,{240,1},is_beam_bif_info}},
      []}]],
   [{debug_line,240,83},{atom,{240,1},ignore}]},
  {clause,
   {240,1},
   [{cons,
     {240,16},
     {cons,
      {240,17},
      {tuple,
       {240,18},
       [{var,{240,19},'_'},
        {tuple,{240,21},[{var,{240,22},'N'},{var,{240,24},'Res'}]}]},
      {nil,{240,29}}},
     {var,{240,31},'T'}},
    {var,{240,35},'Blocks'},
    {var,{240,43},'Acc'}],
   [],
   [{debug_line,242,84},
    {call,
     {242,5},
     {atom,{242,5},share_switch_2},
     [{var,{242,20},'T'},
      {var,{242,23},'Blocks'},
      {block,0,
       [{cons,
         {242,31},
         {tuple,{242,32},[{var,{242,33},'N'},{var,{242,35},'Res'}]},
         {var,{242,40},'Acc'}}]}]}]},
  {clause,
   {243,1},
   [{cons,
     {243,16},
     {match,
      {243,17},
      {cons,
       {243,17},
       {tuple,
        {243,18},
        [{atom,{243,19},done},
         {tuple,
          {243,24},
          [{var,{243,25},'_'},
           {tuple,{243,27},[{var,{243,28},'_'},{var,{243,30},'Common'}]}]}]},
       {var,{243,40},'_'}},
      {var,{243,43},'Eqs'}},
     {var,{243,47},'T'}},
    {var,{243,51},'Blocks'},
    {var,{243,59},'Acc0'}],
   [],
   [{debug_line,248,85},
    {match,
     {248,5},
     {var,{248,5},'Acc'},
     {op,
      {248,56},
      '++',
      {lc,
       {248,11},
       {block,0,
        [{tuple,
          {248,12},
          [{var,{248,13},'N'},
           {tuple,{248,15},[{var,{248,16},'V'},{var,{248,18},'Common'}]}]}]},
       [{block,0,[{atom,{248,51},true}]},
        {generate_strict,
         {248,47},
         {tuple,
          {248,30},
          [{atom,{248,31},done},
           {tuple,
            {248,36},
            [{var,{248,37},'N'},
             {tuple,{248,39},[{var,{248,40},'V'},{var,{248,42},'_'}]}]}]},
         {var,{248,51},'Eqs'}}]},
      {var,{248,59},'Acc0'}}},
    {debug_line,249,86},
    {call,
     {249,5},
     {atom,{249,5},share_switch_2},
     [{var,{249,20},'T'},{var,{249,23},'Blocks'},{var,{249,31},'Acc'}]}]},
  {clause,
   {250,1},
   [{cons,
     {250,16},
     {match,
      {250,17},
      {cons,
       {250,17},
       {tuple,{250,18},[{var,{250,19},'_'},{var,{250,21},'_'}]},
       {var,{250,24},'_'}},
      {var,{250,27},'Prep'}},
     {var,{250,32},'T'}},
    {var,{250,36},'Blocks'},
    {var,{250,44},'Acc0'}],
   [],
   [{debug_line,254,87},
    {match,
     {254,5},
     {var,{254,5},'Acc'},
     {call,
      {254,11},
      {atom,{254,11},do_share_switch},
      [{var,{254,27},'Prep'},{var,{254,33},'Blocks'},{var,{254,41},'Acc0'}]}},
    {debug_line,255,88},
    {call,
     {255,5},
     {atom,{255,5},share_switch_2},
     [{var,{255,20},'T'},{var,{255,23},'Blocks'},{var,{255,31},'Acc'}]}]},
  {clause,
   {256,1},
   [{nil,{256,16}},{var,{256,20},'_'},{var,{256,23},'Acc'}],
   [],
   [{debug_line,256,89},{var,{256,31},'Acc'}]}]}.
{function,
    {258,1},
    canonical_block,2,
    [{clause,
         {258,1},
         [{var,{258,1},'_'},{var,{258,1},'_'}],
         [[{call,
               {258,1},
               {remote,
                   {258,1},
                   {atom,{258,1},fake},
                   {atom,{258,1},is_beam_bif_info}},
               []}]],
         [{debug_line,258,90},{atom,{258,1},ignore}]},
     {clause,
         {258,1},
         [{tuple,{258,17},[{integer,{258,19},1},{var,{258,35},'_VarMap'}]},
          {var,{258,45},'_Blocks'}],
         [],
         [{debug_line,263,91},
          {tuple,
              {263,5},
              [{tuple,{263,6},[{atom,{263,7},none},{integer,{263,13},1}]},
               {atom,{263,30},done}]}]},
     {clause,
         {264,1},
         [{tuple,{264,17},[{var,{264,18},'L'},{var,{264,20},'VarMap0'}]},
          {var,{264,30},'Blocks'}],
         [],
         [{debug_line,265,92},
          {match,
              {265,5},
              {tuple,
                  {265,5},
                  [{atom,{265,5},b_blk},
                   {var,{265,5},'_'},
                   {var,{265,15},'Is'},
                   {var,{265,23},'Last0'}]},
              {call,
                  {265,32},
                  {remote,
                      {265,32},
                      {atom,{265,32},erlang},
                      {atom,{265,32},map_get}},
                  [{var,{265,40},'L'},{var,{265,43},'Blocks'}]}},
          {debug_line,266,93},
          {'case',
              {266,5},
              {call,
                  {266,10},
                  {atom,{266,10},canonical_terminator},
                  [{var,{266,31},'L'},
                   {var,{266,34},'Last0'},
                   {var,{266,41},'Blocks'}]},
              [{clause,
                   {267,9},
                   [{atom,{267,9},none}],
                   [],
                   [{debug_line,269,94},
                    {tuple,
                        {269,13},
                        [{tuple,
                             {269,14},
                             [{atom,{269,15},none},{var,{269,20},'L'}]},
                         {atom,{269,23},done}]}]},
               {clause,
                   {270,9},
                   [{tuple,
                        {270,9},
                        [{var,{270,10},'Last'},{atom,{270,15},done}]}],
                   [],
                   [{debug_line,273,95},
                    {match,
                        {273,13},
                        {tuple,
                            {273,13},
                            [{var,{273,14},'Can'},{var,{273,18},'_VarMap'}]},
                        {call,
                            {273,29},
                            {atom,{273,29},canonical_is},
                            [{block,0,
                                 [{op,{273,45},
                                      '++',
                                      {var,{273,42},'Is'},
                                      {var,{273,48},'Last'}}]},
                             {var,{273,54},'VarMap0'},
                             {nil,{273,63}}]}},
                    {debug_line,274,96},
                    {tuple,
                        {274,13},
                        [{var,{274,14},'Can'},{atom,{274,18},done}]}]},
               {clause,
                   {275,9},
                   [{tuple,
                        {275,9},
                        [{var,{275,10},'Last'},{var,{275,15},'Next'}]}],
                   [],
                   [{debug_line,277,97},
                    {match,
                        {277,13},
                        {tuple,
                            {277,13},
                            [{var,{277,14},'Can'},{var,{277,18},'VarMap'}]},
                        {call,
                            {277,28},
                            {atom,{277,28},canonical_is},
                            [{block,0,
                                 [{op,{277,44},
                                      '++',
                                      {var,{277,41},'Is'},
                                      {var,{277,47},'Last'}}]},
                             {var,{277,53},'VarMap0'},
                             {nil,{277,62}}]}},
                    {debug_line,278,98},
                    {tuple,
                        {278,13},
                        [{var,{278,14},'Can'},
                         {tuple,
                             {278,18},
                             [{var,{278,19},'Next'},
                              {var,{278,24},'VarMap'}]}]}]}]}]}]}.
{function,{297,1},
          canonical_is,1,
          [{clause,{297,1},
                   [{var,{297,1},'_'}],
                   [[{call,{297,1},
                           {remote,{297,1},
                                   {atom,{297,1},fake},
                                   {atom,{297,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,297,99},{atom,{297,1},ignore}]},
           {clause,{297,1},
                   [{var,{297,14},'Is'}],
                   [],
                   [{debug_line,298,100},
                    {match,{298,5},
                           {tuple,{298,5},
                                  [{var,{298,6},'Can'},{var,{298,10},'_'}]},
                           {call,{298,15},
                                 {atom,{298,15},canonical_is},
                                 [{var,{298,28},'Is'},
                                  {block,0,[{map,{298,32},[]}]},
                                  {nil,{298,37}}]}},
                    {debug_line,299,101},
                    {var,{299,5},'Can'}]}]}.
{function,
 {301,1},
 canonical_is,3,
 [{clause,
   {301,1},
   [{var,{301,1},'_'},{var,{301,1},'_'},{var,{301,1},'_'}],
   [[{call,
      {301,1},
      {remote,{301,1},{atom,{301,1},fake},{atom,{301,1},is_beam_bif_info}},
      []}]],
   [{debug_line,301,102},{atom,{301,1},ignore}]},
  {clause,
   {301,1},
   [{cons,
     {301,14},
     {match,
      {301,15},
      {tuple,
       {301,15},
       [{atom,{301,15},b_set},
        {var,{301,15},'_'},
        {var,{301,32},'Dst'},
        {var,{301,25},'Op'},
        {var,{301,41},'Args0'}]},
      {var,{301,48},'I'}},
     {var,{301,50},'Is'}},
    {var,{301,55},'VarMap0'},
    {var,{301,64},'Acc'}],
   [],
   [{debug_line,302,103},
    {match,
     {302,5},
     {var,{302,5},'Args'},
     {lc,
      {302,12},
      {block,0,
       [{call,
         {302,13},
         {atom,{302,13},canonical_arg},
         [{var,{302,27},'Arg'},{var,{302,32},'VarMap0'}]}]},
      [{block,0,[{atom,{302,51},true}]},
       {generate,{302,48},{var,{302,44},'Arg'},{var,{302,51},'Args0'}}]}},
    {debug_line,303,104},
    {match,
     {303,5},
     {var,{303,5},'Var'},
     {tuple,
      {303,11},
      [{atom,{303,12},var},
       {call,
        {303,16},
        {remote,{303,16},{atom,{303,16},erlang},{atom,{303,16},map_size}},
        [{var,{303,25},'VarMap0'}]}]}},
    {debug_line,304,105},
    {match,
     {304,5},
     {var,{304,5},'VarMap'},
     {map,
      {304,21},
      {var,{304,14},'VarMap0'},
      [{map_field_assoc,{304,26},{var,{304,23},'Dst'},{var,{304,28},'Var'}}]}},
    {debug_line,305,106},
    {match,
     {305,5},
     {var,{305,5},'LineAnno'},
     {'case',
      {306,9},
      {tuple,{306,14},[{var,{306,15},'Op'},{var,{306,18},'Is'}]},
      [{clause,
        {307,13},
        [{tuple,
          {307,13},
          [{atom,{307,14},executable_line},{var,{307,31},'_'}]}],
        [],
        [{debug_line,310,107},
         {call,
          {310,17},
          {remote,{310,25},{atom,{310,17},beam_ssa},{atom,{310,26},get_anno}},
          [{atom,{310,35},location},
           {var,{310,45},'I'},
           {atom,{310,48},none}]}]},
       {clause,
        {311,13},
        [{tuple,
          {311,13},
          [{var,{311,14},'_'},
           {cons,
            {311,17},
            {tuple,
             {311,18},
             [{atom,{311,18},b_set},
              {var,{311,18},'_'},
              {var,{311,18},'_'},
              {tuple,
               {311,28},
               [{atom,{311,29},succeeded},{atom,{311,39},body}]},
              {cons,{311,50},{var,{311,51},'Dst'},{nil,{311,54}}}]},
            {var,{311,57},'_'}}]}],
        [],
        [{debug_line,314,108},
         {call,
          {314,17},
          {remote,{314,25},{atom,{314,17},beam_ssa},{atom,{314,26},get_anno}},
          [{atom,{314,35},location},
           {var,{314,45},'I'},
           {atom,{314,48},none}]}]},
       {clause,
        {315,13},
        [{tuple,{315,13},[{var,{315,14},'_'},{var,{315,17},'_'}]}],
        [],
        [{debug_line,318,109},{nil,{318,17}}]}]}},
    {debug_line,320,110},
    {call,
     {320,5},
     {atom,{320,5},canonical_is},
     [{var,{320,18},'Is'},
      {var,{320,22},'VarMap'},
      {block,0,
       [{tuple,
         {320,30},
         [{var,{320,31},'Op'},
          {var,{320,34},'LineAnno'},
          {var,{320,43},'Var'},
          {var,{320,47},'Args'},
          {var,{320,52},'Acc'}]}]}]}]},
  {clause,
   {321,1},
   [{cons,
     {321,14},
     {tuple,
      {321,15},
      [{atom,{321,15},b_ret},{var,{321,15},'_'},{var,{321,26},'Arg'}]},
     {nil,{321,30}}},
    {var,{321,33},'VarMap'},
    {var,{321,41},'Acc'}],
   [],
   [{debug_line,322,111},
    {tuple,
     {322,5},
     [{tuple,
       {322,6},
       [{atom,{322,7},ret},
        {call,
         {322,11},
         {atom,{322,11},canonical_arg},
         [{var,{322,25},'Arg'},{var,{322,30},'VarMap'}]},
        {var,{322,38},'Acc'}]},
      {var,{322,43},'VarMap'}]}]},
  {clause,
   {323,1},
   [{cons,
     {323,14},
     {tuple,
      {323,15},
      [{atom,{323,15},b_br},
       {var,{323,15},'_'},
       {match,
        {323,26},
        {tuple,{323,26},[{atom,{323,26},b_var},{var,{323,26},'_'}]},
        {var,{323,35},'Arg'}},
       {var,{323,15},'_'},
       {var,{323,44},'Fail'}]},
     {nil,{323,49}}},
    {var,{323,52},'VarMap'},
    {var,{323,60},'Acc'}],
   [],
   [{debug_line,328,112},
    {tuple,
     {328,5},
     [{tuple,
       {328,6},
       [{atom,{328,7},br},
        {call,
         {328,10},
         {atom,{328,10},canonical_arg},
         [{var,{328,24},'Arg'},{var,{328,29},'VarMap'}]},
        {atom,{328,37},succ},
        {var,{328,42},'Fail'},
        {var,{328,47},'Acc'}]},
      {var,{328,52},'VarMap'}]}]},
  {clause,
   {329,1},
   [{cons,
     {329,14},
     {tuple,
      {329,15},
      [{atom,{329,15},b_br},
       {var,{329,15},'_'},
       {var,{329,15},'_'},
       {var,{329,26},'Succ'},
       {var,{329,15},'_'}]},
     {nil,{329,31}}},
    {var,{329,34},'VarMap'},
    {var,{329,42},'Acc'}],
   [],
   [{debug_line,330,113},
    {tuple,
     {330,5},
     [{tuple,
       {330,6},
       [{atom,{330,7},br},{var,{330,10},'Succ'},{var,{330,15},'Acc'}]},
      {var,{330,20},'VarMap'}]}]},
  {clause,
   {331,1},
   [{cons,
     {331,14},
     {tuple,
      {331,15},
      [{atom,{331,16},tail_br},{var,{331,24},'Arg0'},{var,{331,29},'Ret0'}]},
     {nil,{331,34}}},
    {var,{331,37},'VarMap'},
    {var,{331,45},'Acc0'}],
   [],
   [{debug_line,332,114},
    {match,
     {332,5},
     {var,{332,5},'Arg'},
     {call,
      {332,11},
      {atom,{332,11},canonical_arg},
      [{var,{332,25},'Arg0'},{var,{332,31},'VarMap'}]}},
    {debug_line,333,115},
    {match,
     {333,5},
     {var,{333,5},'Ret'},
     {call,
      {333,11},
      {atom,{333,11},canonical_arg},
      [{var,{333,25},'Ret0'},{var,{333,31},'VarMap'}]}},
    {debug_line,334,116},
    {'case',
     {334,5},
     {var,{334,10},'Acc0'},
     [{clause,
       {335,9},
       [{tuple,
         {335,9},
         [{tuple,{335,10},[{atom,{335,11},succeeded},{atom,{335,21},body}]},
          {var,{335,27},'_'},
          {var,{335,29},'Arg'},
          {cons,{335,33},{var,{335,34},'Ret'},{nil,{335,37}}},
          {tuple,
           {335,39},
           [{atom,{335,40},call},
            {var,{335,45},'_'},
            {var,{335,47},'Ret'},
            {var,{335,51},'CallArgs'},
            {var,{335,60},'PrevAcc'}]}]}],
       [],
       [{debug_line,339,117},
        {tuple,
         {339,13},
         [{tuple,
           {339,14},
           [{atom,{339,15},tail_call},
            {var,{339,25},'Ret'},
            {var,{339,29},'CallArgs'},
            {var,{339,38},'PrevAcc'}]},
          {var,{339,47},'VarMap'}]}]},
      {clause,
       {340,9},
       [{var,{340,9},'_'}],
       [],
       [{debug_line,342,118},
        {tuple,
         {342,13},
         [{tuple,
           {342,14},
           [{atom,{342,15},br_ret},
            {var,{342,22},'Arg'},
            {var,{342,26},'Ret'},
            {var,{342,30},'Acc0'}]},
          {var,{342,36},'VarMap'}]}]}]}]},
  {clause,
   {344,1},
   [{nil,{344,14}},{var,{344,18},'VarMap'},{var,{344,26},'Acc'}],
   [],
   [{debug_line,345,119},
    {tuple,{345,5},[{var,{345,6},'Acc'},{var,{345,10},'VarMap'}]}]}]}.
{function,
    {347,1},
    canonical_terminator,3,
    [{clause,
         {347,1},
         [{var,{347,1},'_'},{var,{347,1},'_'},{var,{347,1},'_'}],
         [[{call,
               {347,1},
               {remote,
                   {347,1},
                   {atom,{347,1},fake},
                   {atom,{347,1},is_beam_bif_info}},
               []}]],
         [{debug_line,347,120},{atom,{347,1},ignore}]},
     {clause,
         {347,1},
         [{var,{347,22},'_L'},
          {match,
              {347,26},
              {tuple,
                  {347,26},
                  [{atom,{347,26},b_ret},
                   {var,{347,26},'_'},
                   {var,{347,26},'_'}]},
              {var,{347,35},'Ret'}},
          {var,{347,40},'_Blocks'}],
         [],
         [{debug_line,348,121},
          {tuple,
              {348,5},
              [{cons,{348,6},{var,{348,7},'Ret'},{nil,{348,10}}},
               {atom,{348,12},done}]}]},
     {clause,
         {349,1},
         [{var,{349,22},'L'},
          {match,
              {349,25},
              {tuple,
                  {349,25},
                  [{atom,{349,25},b_br},
                   {var,{349,25},'_'},
                   {tuple,
                       {349,36},
                       [{atom,{349,36},b_literal},{atom,{349,51},true}]},
                   {var,{349,62},'Succ'},
                   {var,{349,25},'_'}]},
              {var,{349,68},'Br'}},
          {var,{349,72},'Blocks'}],
         [],
         [{debug_line,350,122},
          {match,
              {350,5},
              {tuple,
                  {350,5},
                  [{atom,{350,5},b_blk},
                   {var,{350,5},'_'},
                   {var,{350,15},'Is'},
                   {var,{350,5},'_'}]},
              {call,
                  {350,21},
                  {remote,
                      {350,21},
                      {atom,{350,21},erlang},
                      {atom,{350,21},map_get}},
                  [{var,{350,29},'Succ'},{var,{350,35},'Blocks'}]}},
          {debug_line,351,123},
          {'case',
              {351,5},
              {call,
                  {351,10},
                  {atom,{351,10},canonical_terminator_phis},
                  [{var,{351,36},'Is'},{var,{351,40},'L'}]},
              [{clause,
                   {352,9},
                   [{nil,{352,9}}],
                   [],
                   [{debug_line,353,124},
                    {tuple,{353,13},[{nil,{353,14}},{var,{353,17},'Succ'}]}]},
               {clause,
                   {354,9},
                   [{match,
                        {354,9},
                        {cons,{354,9},{var,{354,10},'_'},{var,{354,12},'_'}},
                        {var,{354,15},'Phis'}}],
                   [],
                   [{debug_line,355,125},
                    {tuple,
                        {355,13},
                        [{op,{355,19},
                             '++',
                             {var,{355,14},'Phis'},
                             {cons,
                                 {355,22},
                                 {var,{355,23},'Br'},
                                 {nil,{355,25}}}},
                         {atom,{355,27},done}]}]}]}]},
     {clause,
         {357,1},
         [{var,{357,22},'_L'},
          {match,
              {357,26},
              {tuple,
                  {357,26},
                  [{atom,{357,26},b_br},
                   {var,{357,26},'_'},
                   {match,
                       {357,37},
                       {tuple,
                           {357,37},
                           [{atom,{357,37},b_var},{var,{357,37},'_'}]},
                       {var,{357,46},'Arg'}},
                   {var,{357,55},'Succ'},
                   {integer,{357,66},1}]},
              {var,{357,83},'Br'}},
          {var,{358,22},'Blocks'}],
         [],
         [{debug_line,359,126},
          {'case',
              {359,5},
              {var,{359,10},'Blocks'},
              [{clause,
                   {360,9},
                   [{map,
                        {360,9},
                        [{map_field_exact,
                             {360,16},
                             {var,{360,11},'Succ'},
                             {tuple,
                                 {360,19},
                                 [{atom,{360,19},b_blk},
                                  {var,{360,19},'_'},
                                  {nil,{360,29}},
                                  {tuple,
                                      {360,37},
                                      [{atom,{360,37},b_ret},
                                       {var,{360,37},'_'},
                                       {var,{360,48},'Ret'}]}]}}]}],
                   [],
                   [{debug_line,361,127},
                    {tuple,
                        {361,13},
                        [{cons,
                             {361,14},
                             {tuple,
                                 {361,15},
                                 [{atom,{361,16},tail_br},
                                  {var,{361,24},'Arg'},
                                  {var,{361,28},'Ret'}]},
                             {nil,{361,32}}},
                         {atom,{361,34},done}]}]},
               {clause,
                   {362,9},
                   [{map,{362,9},[]}],
                   [],
                   [{debug_line,363,128},
                    {tuple,
                        {363,13},
                        [{cons,{363,14},{var,{363,15},'Br'},{nil,{363,17}}},
                         {var,{363,19},'Succ'}]}]}]}]},
     {clause,
         {365,1},
         [{var,{365,22},'_L'},
          {match,
              {365,26},
              {tuple,
                  {365,26},
                  [{atom,{365,26},b_br},
                   {var,{365,26},'_'},
                   {tuple,{365,37},[{atom,{365,37},b_var},{var,{365,37},'_'}]},
                   {var,{365,51},'Succ'},
                   {var,{365,26},'_'}]},
              {var,{365,57},'Br'}},
          {var,{365,61},'_Blocks'}],
         [],
         [{debug_line,366,129},
          {tuple,
              {366,5},
              [{cons,{366,6},{var,{366,7},'Br'},{nil,{366,9}}},
               {var,{366,11},'Succ'}]}]},
     {clause,
         {367,1},
         [{var,{367,22},'_'},{var,{367,25},'_'},{var,{367,28},'_'}],
         [],
         [{debug_line,367,130},{atom,{367,34},none}]}]}.
{function,
 {369,1},
 canonical_terminator_phis,2,
 [{clause,
   {369,1},
   [{var,{369,1},'_'},{var,{369,1},'_'}],
   [[{call,
      {369,1},
      {remote,{369,1},{atom,{369,1},fake},{atom,{369,1},is_beam_bif_info}},
      []}]],
   [{debug_line,369,131},{atom,{369,1},ignore}]},
  {clause,
   {369,1},
   [{cons,
     {369,27},
     {match,
      {369,28},
      {tuple,
       {369,28},
       [{atom,{369,28},b_set},
        {var,{369,28},'_'},
        {var,{369,28},'_'},
        {atom,{369,38},phi},
        {var,{369,47},'PhiArgs'}]},
      {var,{369,56},'Phi'}},
     {var,{369,60},'Is'}},
    {var,{369,65},'L'}],
   [],
   [{debug_line,370,132},
    {match,
     {370,5},
     {tuple,{370,5},[{var,{370,6},'Value'},{var,{370,12},'L'}]},
     {call,
      {370,17},
      {remote,{370,17},{atom,{370,17},lists},{atom,{370,17},keyfind}},
      [{var,{370,25},'L'},{integer,{370,28},2},{var,{370,31},'PhiArgs'}]}},
    {debug_line,371,133},
    {cons,
     {371,5},
     {block,
      {371,6},
      [{match,
        {371,24},
        {var,{371,24},rec12},
        {cons,{371,29},{var,{371,30},'Value'},{nil,{371,35}}}},
       {match,{371,6},{var,{371,6},rec13},{var,{371,6},'Phi'}},
       {'case',
        {371,16},
        {var,{371,6},rec13},
        [{clause,
          {371,16},
          [{tuple,
            {371,16},
            [{atom,{371,16},b_set},
             {var,{371,16},'_'},
             {var,{371,16},'_'},
             {var,{371,16},'_'},
             {var,{371,16},'_'}]}],
          [],
          [{call,
            {371,16},
            {remote,
             {371,16},
             {atom,{371,16},erlang},
             {atom,{371,16},setelement}},
            [{integer,{371,16},4},
             {call,
              {371,24},
              {remote,
               {371,24},
               {atom,{371,24},erlang},
               {atom,{371,24},setelement}},
              [{integer,{371,24},5},{var,{371,6},rec13},{var,{371,24},rec12}]},
             {atom,{371,19},copy}]}]},
         {clause,
          [{generated,true},{location,{371,16}}],
          [{var,[{generated,true},{location,{371,16}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{371,16}}],
            {remote,
             [{generated,true},{location,{371,16}}],
             {atom,[{generated,true},{location,{371,16}}],erlang},
             {atom,[{generated,true},{location,{371,16}}],error}},
            [{tuple,
              [{generated,true},{location,{371,16}}],
              [{atom,[{generated,true},{location,{371,16}}],badrecord},
               {var,{371,6},rec13}]}]}]}]}]},
     {call,
      {371,38},
      {atom,{371,38},canonical_terminator_phis},
      [{var,{371,64},'Is'},{var,{371,68},'L'}]}}]},
  {clause,
   {372,1},
   [{cons,
     {372,27},
     {match,
      {372,28},
      {tuple,
       {372,28},
       [{atom,{372,28},b_set},
        {var,{372,28},'_'},
        {var,{372,28},'_'},
        {var,{372,28},'_'},
        {var,{372,28},'_'}]},
      {var,{372,37},'I'}},
     {var,{372,39},'_'}},
    {var,{372,43},'L'}],
   [],
   [{debug_line,373,134},
    {'case',
     {373,5},
     {call,
      {373,10},
      {remote,
       {373,18},
       {atom,{373,10},beam_ssa},
       {atom,{373,19},is_loop_header}},
      [{var,{373,34},'I'}]},
     [{clause,
       {374,9},
       [{atom,{374,9},true}],
       [],
       [{debug_line,378,135},
        {cons,
         {378,13},
         {block,
          {378,14},
          [{match,
            {378,30},
            {var,{378,30},rec14},
            {cons,
             {378,35},
             {tuple,{378,36},[{atom,{378,36},b_literal},{var,{378,51},'L'}]},
             {nil,{378,53}}}},
           {match,{378,14},{var,{378,14},rec15},{var,{378,14},'I'}},
           {'case',
            {378,22},
            {var,{378,14},rec15},
            [{clause,
              {378,22},
              [{tuple,
                {378,22},
                [{atom,{378,22},b_set},
                 {var,{378,22},'_'},
                 {var,{378,22},'_'},
                 {var,{378,22},'_'},
                 {var,{378,22},'_'}]}],
              [],
              [{call,
                {378,22},
                {remote,
                 {378,22},
                 {atom,{378,22},erlang},
                 {atom,{378,22},setelement}},
                [{integer,{378,22},4},
                 {call,
                  {378,30},
                  {remote,
                   {378,30},
                   {atom,{378,30},erlang},
                   {atom,{378,30},setelement}},
                  [{integer,{378,30},5},
                   {var,{378,14},rec15},
                   {var,{378,30},rec14}]},
                 {atom,{378,25},copy}]}]},
             {clause,
              [{generated,true},{location,{378,22}}],
              [{var,[{generated,true},{location,{378,22}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{378,22}}],
                {remote,
                 [{generated,true},{location,{378,22}}],
                 {atom,[{generated,true},{location,{378,22}}],erlang},
                 {atom,[{generated,true},{location,{378,22}}],error}},
                [{tuple,
                  [{generated,true},{location,{378,22}}],
                  [{atom,[{generated,true},{location,{378,22}}],badrecord},
                   {var,{378,14},rec15}]}]}]}]}]},
         {nil,{378,55}}}]},
      {clause,
       {379,9},
       [{atom,{379,9},false}],
       [],
       [{debug_line,380,136},{nil,{380,13}}]}]}]},
  {clause,
   {382,1},
   [{var,{382,27},'_'},{var,{382,30},'_'}],
   [],
   [{debug_line,382,137},{nil,{382,36}}]}]}.
{function,
    {384,1},
    canonical_arg,2,
    [{clause,
         {384,1},
         [{var,{384,1},'_'},{var,{384,1},'_'}],
         [[{call,
               {384,1},
               {remote,
                   {384,1},
                   {atom,{384,1},fake},
                   {atom,{384,1},is_beam_bif_info}},
               []}]],
         [{debug_line,384,138},{atom,{384,1},ignore}]},
     {clause,
         {384,1},
         [{match,
              {384,15},
              {tuple,{384,15},[{atom,{384,15},b_var},{var,{384,15},'_'}]},
              {var,{384,24},'Var'}},
          {var,{384,29},'VarMap'}],
         [],
         [{debug_line,385,139},
          {'case',
              {385,5},
              {var,{385,10},'VarMap'},
              [{clause,
                   {386,9},
                   [{map,
                        {386,9},
                        [{map_field_exact,
                             {386,14},
                             {var,{386,11},'Var'},
                             {var,{386,16},'CanonicalVar'}}]}],
                   [],
                   [{debug_line,387,140},{var,{387,13},'CanonicalVar'}]},
               {clause,
                   {388,9},
                   [{map,{388,9},[]}],
                   [],
                   [{debug_line,389,141},{var,{389,13},'Var'}]}]}]},
     {clause,
         {391,1},
         [{tuple,
              {391,15},
              [{atom,{391,15},b_remote},
               {var,{391,29},'Mod'},
               {var,{391,38},'Name'},
               {var,{391,15},'_'}]},
          {var,{391,45},'VarMap'}],
         [],
         [{debug_line,392,142},
          {tuple,
              {392,5},
              [{atom,{392,6},remote},
               {call,
                   {392,13},
                   {atom,{392,13},canonical_arg},
                   [{var,{392,27},'Mod'},{var,{392,32},'VarMap'}]},
               {call,
                   {393,6},
                   {atom,{393,6},canonical_arg},
                   [{var,{393,20},'Name'},{var,{393,26},'VarMap'}]}]}]},
     {clause,
         {394,1},
         [{var,{394,15},'Other'},{var,{394,22},'_VarMap'}],
         [],
         [{debug_line,394,143},{var,{394,34},'Other'}]}]}.
{function,
    {398,1},
    shortcut_nonempty_block,2,
    [{clause,
         {398,1},
         [{var,{398,1},'_'},{var,{398,1},'_'}],
         [[{call,
               {398,1},
               {remote,
                   {398,1},
                   {atom,{398,1},fake},
                   {atom,{398,1},is_beam_bif_info}},
               []}]],
         [{debug_line,398,144},{atom,{398,1},ignore}]},
     {clause,
         {398,1},
         [{var,{398,25},'L'},{var,{398,28},'Blocks'}],
         [],
         [{debug_line,399,145},
          {'case',
              {399,5},
              {call,
                  {399,10},
                  {remote,
                      {399,10},
                      {atom,{399,10},erlang},
                      {atom,{399,10},map_get}},
                  [{var,{399,18},'L'},{var,{399,21},'Blocks'}]},
              [{clause,
                   {400,9},
                   [{match,
                        {400,9},
                        {tuple,
                            {400,9},
                            [{atom,{400,9},b_blk},
                             {var,{400,9},'_'},
                             {nil,{400,19}},
                             {tuple,
                                 {400,27},
                                 [{atom,{400,27},b_br},
                                  {var,{400,27},'_'},
                                  {tuple,
                                      {400,38},
                                      [{atom,{400,38},b_literal},
                                       {atom,{400,53},true}]},
                                  {var,{400,64},'Succ'},
                                  {var,{400,27},'_'}]}]},
                        {var,{400,71},'Blk'}}],
                   [],
                   [{debug_line,402,146},
                    {'case',
                        {402,13},
                        {call,
                            {402,18},
                            {atom,{402,18},is_forbidden},
                            [{var,{402,31},'Succ'},{var,{402,37},'Blocks'}]},
                        [{clause,
                             {403,17},
                             [{atom,{403,17},false}],
                             [],
                             [{debug_line,404,147},
                              {call,
                                  {404,21},
                                  {atom,{404,21},shortcut_nonempty_block},
                                  [{var,{404,45},'Succ'},
                                   {var,{404,51},'Blocks'}]}]},
                         {clause,
                             {405,17},
                             [{atom,{405,17},true}],
                             [],
                             [{debug_line,406,148},
                              {tuple,
                                  {406,21},
                                  [{var,{406,22},'L'},
                                   {var,{406,24},'Blk'}]}]}]}]},
               {clause,
                   {408,9},
                   [{match,
                        {408,9},
                        {tuple,
                            {408,9},
                            [{atom,{408,9},b_blk},
                             {var,{408,9},'_'},
                             {var,{408,9},'_'},
                             {var,{408,9},'_'}]},
                        {var,{408,18},'Blk'}}],
                   [],
                   [{debug_line,409,149},
                    {tuple,
                        {409,13},
                        [{var,{409,14},'L'},{var,{409,16},'Blk'}]}]}]}]}]}.
{function,
    {412,1},
    is_forbidden,2,
    [{clause,
         {412,1},
         [{var,{412,1},'_'},{var,{412,1},'_'}],
         [[{call,
               {412,1},
               {remote,
                   {412,1},
                   {atom,{412,1},fake},
                   {atom,{412,1},is_beam_bif_info}},
               []}]],
         [{debug_line,412,150},{atom,{412,1},ignore}]},
     {clause,
         {412,1},
         [{var,{412,14},'L'},{var,{412,17},'Blocks'}],
         [],
         [{debug_line,413,151},
          {'case',
              {413,5},
              {call,
                  {413,10},
                  {remote,
                      {413,10},
                      {atom,{413,10},erlang},
                      {atom,{413,10},map_get}},
                  [{var,{413,18},'L'},{var,{413,21},'Blocks'}]},
              [{clause,
                   {414,9},
                   [{tuple,
                        {414,9},
                        [{atom,{414,9},b_blk},
                         {var,{414,9},'_'},
                         {cons,
                             {414,19},
                             {tuple,
                                 {414,20},
                                 [{atom,{414,20},b_set},
                                  {var,{414,20},'_'},
                                  {var,{414,20},'_'},
                                  {atom,{414,30},phi},
                                  {var,{414,20},'_'}]},
                             {var,{414,35},'_'}},
                         {var,{414,9},'_'}]}],
                   [],
                   [{debug_line,415,152},{atom,{415,13},true}]},
               {clause,
                   {416,9},
                   [{tuple,
                        {416,9},
                        [{atom,{416,9},b_blk},
                         {var,{416,9},'_'},
                         {cons,
                             {416,19},
                             {match,
                                 {416,20},
                                 {tuple,
                                     {416,20},
                                     [{atom,{416,20},b_set},
                                      {var,{416,20},'_'},
                                      {var,{416,20},'_'},
                                      {var,{416,20},'_'},
                                      {var,{416,20},'_'}]},
                                 {var,{416,29},'I'}},
                             {var,{416,31},'_'}},
                         {var,{416,9},'_'}]}],
                   [],
                   [{debug_line,417,153},
                    {call,
                        {417,13},
                        {remote,
                            {417,21},
                            {atom,{417,13},beam_ssa},
                            {atom,{417,22},is_loop_header}},
                        [{var,{417,37},'I'}]}]},
               {clause,
                   {418,9},
                   [{tuple,
                        {418,9},
                        [{atom,{418,9},b_blk},
                         {var,{418,9},'_'},
                         {var,{418,9},'_'},
                         {var,{418,9},'_'}]}],
                   [],
                   [{debug_line,418,154},{atom,{418,21},false}]}]}]}]}.
{eof,{420,1}}.
