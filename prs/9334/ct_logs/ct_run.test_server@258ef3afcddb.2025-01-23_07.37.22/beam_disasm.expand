{attribute,{1,1},file,{"beam_disasm.erl",1}}.
{attribute,{26,2},module,beam_disasm}.
{attribute,{29,2},export,[{file,1}]}.
{attribute,{30,2},export,[{function__code,1},{format_error,1}]}.
{attribute,{35,2},author,"Kostis Sagonas"}.
{attribute,{1,1},file,{"beam_opcodes.hrl",1}}.
{attribute,{38,1},file,{"beam_disasm.erl",38}}.
{attribute,{1,1},file,{"beam_disasm.hrl",1}}.
{attribute,{29,2},
           type,
           {beam_instr,{type,{29,23},
                             union,
                             [{atom,{29,23},bs_init_writable},
                              {atom,{29,44},build_stacktrace},
                              {atom,{30,23},fclearerror},
                              {atom,{30,39},if_end},
                              {atom,{30,50},raw_raise},
                              {atom,{31,23},remove_message},
                              {atom,{31,42},return},
                              {atom,{31,53},send},
                              {atom,{31,62},timeout},
                              {type,{32,23},tuple,any}]},
                       []}}.
{attribute,
    {38,2},
    record,
    {function,
        [{typed_record_field,
             {record_field,{38,20},{atom,{38,20},name}},
             {type,{38,33},atom,[]}},
         {typed_record_field,
             {record_field,{39,6},{atom,{39,6},arity}},
             {type,{39,19},byte,[]}},
         {typed_record_field,
             {record_field,{40,6},{atom,{40,6},entry}},
             {remote_type,
                 {40,19},
                 [{atom,{40,19},beam_lib},{atom,{40,28},label},[]]}},
         {typed_record_field,
             {record_field,{41,6},{atom,{41,6},code},{nil,{41,13}}},
             {type,{41,19},list,[{user_type,{41,20},beam_instr,[]}]}}]}}.
{attribute,
    {43,2},
    record,
    {beam_file,
        [{typed_record_field,
             {record_field,{43,21},{atom,{43,21},module}},
             {type,{43,45},module,[]}},
         {typed_record_field,
             {record_field,{44,7},{atom,{44,7},labeled_exports},{nil,{44,25}}},
             {type,
                 {44,31},
                 list,
                 [{remote_type,
                      {44,32},
                      [{atom,{44,32},beam_lib},
                       {atom,{44,41},labeled_entry},
                       []]}]}},
         {typed_record_field,
             {record_field,{45,7},{atom,{45,7},attributes},{nil,{45,25}}},
             {type,
                 {45,31},
                 list,
                 [{remote_type,
                      {45,32},
                      [{atom,{45,32},beam_lib},
                       {atom,{45,41},attrib_entry},
                       []]}]}},
         {typed_record_field,
             {record_field,{46,7},{atom,{46,7},compile_info},{nil,{46,25}}},
             {type,
                 {46,31},
                 list,
                 [{remote_type,
                      {46,32},
                      [{atom,{46,32},beam_lib},
                       {atom,{46,41},compinfo_entry},
                       []]}]}},
         {typed_record_field,
             {record_field,{47,7},{atom,{47,7},code},{nil,{47,25}}},
             {type,
                 {47,31},
                 list,
                 [{type,{47,32},record,[{atom,{47,33},function}]}]}}]}}.
{attribute,{39,1},file,{"beam_disasm.erl",39}}.
{attribute,{1,1},file,{"beam_asm.hrl",1}}.
{attribute,{1,1},file,{"beam_types.hrl",1}}.
{attribute,{91,2},
           type,
           {float_range,{type,{91,24},
                              union,
                              [{atom,{91,24},any},
                               {type,{91,32},
                                     tuple,
                                     [{atom,{91,33},'-inf'},
                                      {type,{91,40},float,[]}]},
                               {type,{91,51},
                                     tuple,
                                     [{type,{91,52},float,[]},
                                      {atom,{91,60},'+inf'}]}]},
                        []}}.
{attribute,
    {93,2},
    record,
    {t_atom,
        [{typed_record_field,
             {record_field,{93,18},{atom,{93,18},elements},{atom,{93,27},any}},
             {type,
                 {93,34},
                 union,
                 [{atom,{93,34},any},
                  {remote_type,
                      {93,42},
                      [{atom,{93,42},ordsets},
                       {atom,{93,50},ordset},
                       [{type,{93,57},atom,[]}]]}]}}]}}.
{attribute,
    {94,2},
    record,
    {t_bitstring,
        [{typed_record_field,
             {record_field,
                 {94,23},
                 {atom,{94,23},size_unit},
                 {integer,{94,33},1}},
             {type,{94,38},pos_integer,[]}},
         {typed_record_field,
             {record_field,
                 {99,23},
                 {atom,{99,23},appendable},
                 {atom,{99,34},false}},
             {type,{99,43},boolean,[]}}]}}.
{attribute,
    {100,2},
    record,
    {t_bs_context,
        [{typed_record_field,
             {record_field,
                 {100,24},
                 {atom,{100,24},tail_unit},
                 {integer,{100,34},1}},
             {type,{100,39},pos_integer,[]}}]}}.
{attribute,
    {101,2},
    record,
    {t_bs_matchable,
        [{typed_record_field,
             {record_field,
                 {101,26},
                 {atom,{101,26},tail_unit},
                 {integer,{101,36},1}},
             {type,{101,41},pos_integer,[]}}]}}.
{attribute,
    {102,2},
    record,
    {t_float,
        [{typed_record_field,
             {record_field,
                 {102,19},
                 {atom,{102,19},elements},
                 {atom,{102,28},any}},
             {user_type,{102,35},float_range,[]}}]}}.
{attribute,
    {103,2},
    record,
    {t_fun,
        [{typed_record_field,
             {record_field,{103,17},{atom,{103,17},arity},{atom,{103,23},any}},
             {type,
                 {103,30},
                 union,
                 [{type,{103,30},arity,[]},{atom,{103,40},any}]}},
         {typed_record_field,
             {record_field,
                 {104,17},
                 {atom,{104,17},target},
                 {atom,{104,24},any}},
             {type,
                 {104,31},
                 union,
                 [{type,
                      {104,31},
                      tuple,
                      [{type,{104,32},atom,[]},
                       {type,{104,40},non_neg_integer,[]}]},
                  {atom,{104,61},any}]}},
         {typed_record_field,
             {record_field,{105,17},{atom,{105,17},type},{atom,{105,22},any}},
             {user_type,{105,29},type,[]}}]}}.
{attribute,
    {106,2},
    record,
    {t_integer,
        [{typed_record_field,
             {record_field,
                 {106,21},
                 {atom,{106,21},elements},
                 {atom,{106,30},any}},
             {type,
                 {106,37},
                 union,
                 [{atom,{106,37},any},
                  {remote_type,
                      {106,45},
                      [{atom,{106,45},beam_bounds},
                       {atom,{106,57},range},
                       []]}]}}]}}.
{attribute,
    {107,2},
    record,
    {t_number,
        [{typed_record_field,
             {record_field,
                 {107,20},
                 {atom,{107,20},elements},
                 {atom,{107,29},any}},
             {type,
                 {107,36},
                 union,
                 [{atom,{107,36},any},
                  {remote_type,
                      {107,44},
                      [{atom,{107,44},beam_bounds},
                       {atom,{107,56},range},
                       []]}]}}]}}.
{attribute,
    {113,2},
    record,
    {t_map,
        [{typed_record_field,
             {record_field,
                 {113,17},
                 {atom,{113,17},super_key},
                 {atom,{113,27},any}},
             {user_type,{113,34},type,[]}},
         {typed_record_field,
             {record_field,
                 {114,17},
                 {atom,{114,17},super_value},
                 {atom,{114,29},any}},
             {user_type,{114,36},type,[]}}]}}.
{attribute,
    {122,2},
    record,
    {t_cons,
        [{typed_record_field,
             {record_field,{122,18},{atom,{122,18},type},{atom,{122,23},any}},
             {user_type,{122,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {122,38},
                 {atom,{122,38},terminator},
                 {atom,{122,49},any}},
             {user_type,{122,56},type,[]}}]}}.
{attribute,
    {123,2},
    record,
    {t_list,
        [{typed_record_field,
             {record_field,{123,18},{atom,{123,18},type},{atom,{123,23},any}},
             {user_type,{123,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {123,38},
                 {atom,{123,38},terminator},
                 {atom,{123,49},any}},
             {user_type,{123,56},type,[]}}]}}.
{attribute,
    {125,2},
    record,
    {t_tuple,
        [{typed_record_field,
             {record_field,{125,19},{atom,{125,19},size},{integer,{125,24},0}},
             {type,{125,29},integer,[]}},
         {typed_record_field,
             {record_field,
                 {126,19},
                 {atom,{126,19},exact},
                 {atom,{126,25},false}},
             {type,{126,34},boolean,[]}},
         {typed_record_field,
             {record_field,
                 {127,19},
                 {atom,{127,19},elements},
                 {map,{127,28},[]}},
             {user_type,{127,35},tuple_elements,[]}}]}}.
{attribute,
    {146,2},
    type,
    {tuple_elements,
        {type,
            {146,27},
            map,
            [{type,
                 {146,51},
                 map_field_assoc,
                 [{ann_type,
                      {146,30},
                      [{var,{146,30},'Key'},{type,{146,37},pos_integer,[]}]},
                  {user_type,{146,54},type,[]}]}]},
        []}}.
{attribute,{148,2},
           type,
           {normal_type,{type,{148,24},
                              union,
                              [{atom,{148,24},any},
                               {atom,{148,32},none},
                               {type,{149,24},
                                     record,
                                     [{atom,{149,25},t_number}]},
                               {type,{149,38},
                                     record,
                                     [{atom,{149,39},t_float}]},
                               {type,{149,51},
                                     record,
                                     [{atom,{149,52},t_integer}]},
                               {type,{150,24},record,[{atom,{150,25},t_atom}]},
                               {type,{151,24},
                                     record,
                                     [{atom,{151,25},t_bitstring}]},
                               {type,{151,41},
                                     record,
                                     [{atom,{151,42},t_bs_context}]},
                               {type,{151,59},
                                     record,
                                     [{atom,{151,60},t_bs_matchable}]},
                               {type,{152,24},record,[{atom,{152,25},t_fun}]},
                               {type,{153,24},record,[{atom,{153,25},t_list}]},
                               {type,{153,36},record,[{atom,{153,37},t_cons}]},
                               {atom,{153,48},nil},
                               {atom,{154,24},other},
                               {type,{155,24},record,[{atom,{155,25},t_map}]},
                               {atom,{156,24},identifier},
                               {atom,{157,24},pid},
                               {atom,{158,24},port},
                               {atom,{159,24},reference},
                               {type,{160,24},
                                     record,
                                     [{atom,{160,25},t_tuple}]}]},
                        []}}.
{attribute,{162,2},
           type,
           {other_type,{type,{162,23},
                             union,
                             [{atom,{162,23},none},
                              {type,{162,32},record,[{atom,{162,33},t_fun}]},
                              {type,{162,43},record,[{atom,{162,44},t_map}]},
                              {atom,{163,23},pid},
                              {atom,{163,31},port},
                              {atom,{163,40},reference},
                              {atom,{163,54},identifier},
                              {type,{164,23},
                                    record,
                                    [{atom,{164,24},t_bitstring}]},
                              {type,{164,40},
                                    record,
                                    [{atom,{164,41},t_bs_context}]},
                              {type,{165,23},
                                    record,
                                    [{atom,{165,24},t_bs_matchable}]}]},
                       []}}.
{attribute,
    {167,2},
    type,
    {record_key,
        {type,
            {167,23},
            tuple,
            [{ann_type,
                 {167,24},
                 [{var,{167,24},'Arity'},{type,{167,33},integer,[]}]},
             {ann_type,
                 {167,44},
                 [{var,{167,44},'Tag'},{user_type,{167,51},normal_type,[]}]}]},
        []}}.
{attribute,
    {168,2},
    type,
    {record_set,
        {remote_type,
            {168,23},
            [{atom,{168,23},ordsets},
             {atom,{168,31},ordset},
             [{type,
                  {168,38},
                  tuple,
                  [{user_type,{168,39},record_key,[]},
                   {type,{168,53},record,[{atom,{168,54},t_tuple}]}]}]]},
        []}}.
{attribute,{169,2},
           type,
           {tuple_set,{type,{169,22},
                            union,
                            [{type,{169,22},record,[{atom,{169,23},t_tuple}]},
                             {user_type,{169,35},record_set,[]}]},
                      []}}.
{attribute,
    {173,2},
    record,
    {t_union,
        [{typed_record_field,
             {record_field,{173,19},{atom,{173,19},atom},{atom,{173,24},none}},
             {type,
                 {173,32},
                 union,
                 [{atom,{173,32},none},
                  {type,{173,41},record,[{atom,{173,42},t_atom}]}]}},
         {typed_record_field,
             {record_field,{174,19},{atom,{174,19},list},{atom,{174,24},none}},
             {type,
                 {174,32},
                 union,
                 [{atom,{174,32},none},
                  {type,{174,41},record,[{atom,{174,42},t_list}]},
                  {type,{174,53},record,[{atom,{174,54},t_cons}]},
                  {atom,{174,65},nil}]}},
         {typed_record_field,
             {record_field,
                 {175,19},
                 {atom,{175,19},number},
                 {atom,{175,26},none}},
             {type,
                 {175,34},
                 union,
                 [{atom,{175,34},none},
                  {type,{175,43},record,[{atom,{175,44},t_number}]},
                  {type,{175,57},record,[{atom,{175,58},t_float}]},
                  {type,{175,70},record,[{atom,{175,71},t_integer}]}]}},
         {typed_record_field,
             {record_field,
                 {176,19},
                 {atom,{176,19},tuple_set},
                 {atom,{176,29},none}},
             {type,
                 {176,37},
                 union,
                 [{atom,{176,37},none},{user_type,{176,46},tuple_set,[]}]}},
         {typed_record_field,
             {record_field,
                 {177,19},
                 {atom,{177,19},other},
                 {atom,{177,25},none}},
             {type,
                 {177,33},
                 union,
                 [{atom,{177,33},other},
                  {user_type,{177,43},other_type,[]}]}}]}}.
{attribute,{179,2},
           type,
           {type,{type,{179,17},
                       union,
                       [{type,{179,17},record,[{atom,{179,18},t_union}]},
                        {user_type,{179,30},normal_type,[]}]},
                 []}}.
{attribute,{22,1},file,{"beam_asm.hrl",22}}.
{attribute,{23,2},
           type,
           {reg_num,{type,{23,20},
                          range,
                          [{integer,{23,20},0},{integer,{23,25},1023}]},
                    []}}.
{attribute,{25,2},
           type,
           {xreg,{type,{25,17},
                       tuple,
                       [{atom,{25,18},x},{user_type,{25,23},reg_num,[]}]},
                 []}}.
{attribute,{26,2},
           type,
           {yreg,{type,{26,17},
                       tuple,
                       [{atom,{26,18},y},{user_type,{26,23},reg_num,[]}]},
                 []}}.
{attribute,{27,2},
           type,
           {freg,{type,{27,17},
                       tuple,
                       [{atom,{27,18},fr},{user_type,{27,24},reg_num,[]}]},
                 []}}.
{attribute,{28,2},
           type,
           {zreg,{type,{28,17},
                       tuple,
                       [{atom,{28,18},z},{user_type,{28,23},reg_num,[]}]},
                 []}}.
{attribute,{30,2},
           type,
           {beam_reg,{type,{30,21},
                           union,
                           [{user_type,{30,21},xreg,[]},
                            {user_type,{30,30},yreg,[]},
                            {user_type,{30,39},freg,[]}]},
                     []}}.
{attribute,
    {32,2},
    type,
    {beam_literal,
        {type,
            {32,25},
            union,
            [{type,
                 {32,25},
                 tuple,
                 [{atom,{32,26},atom},
                  {type,
                      {32,32},
                      union,
                      [{type,{32,32},nil,[]},{type,{32,37},atom,[]}]}]},
             {type,
                 {33,25},
                 tuple,
                 [{atom,{33,26},float},
                  {type,
                      {33,33},
                      union,
                      [{type,{33,33},nil,[]},{type,{33,38},float,[]}]}]},
             {type,
                 {34,25},
                 tuple,
                 [{atom,{34,26},integer},
                  {type,
                      {34,35},
                      union,
                      [{type,{34,35},nil,[]},{type,{34,40},integer,[]}]}]},
             {type,
                 {35,25},
                 tuple,
                 [{atom,{35,26},literal},{type,{35,35},term,[]}]},
             {atom,{36,25},nil}]},
        []}}.
{attribute,{44,2},
           record,
           {tr,[{typed_record_field,{record_field,{44,14},{atom,{44,14},r}},
                                    {user_type,{44,19},beam_reg,[]}},
                {typed_record_field,{record_field,{44,31},{atom,{44,31},t}},
                                    {user_type,{44,36},type,[]}}]}}.
{attribute,{40,1},file,{"beam_disasm.erl",40}}.
{attribute,{43,2},type,{index,{type,{43,25},non_neg_integer,[]},[]}}.
{attribute,{44,2},
           type,
           {literals,{remote_type,{44,25},
                                  [{atom,{44,25},gb_trees},
                                   {atom,{44,34},tree},
                                   [{user_type,{44,39},index,[]},
                                    {type,{44,48},term,[]}]]},
                     []}}.
{attribute,{45,2},
           type,
           {types,{remote_type,{45,25},
                               [{atom,{45,25},gb_trees},
                                {atom,{45,34},tree},
                                [{user_type,{45,39},index,[]},
                                 {type,{45,48},term,[]}]]},
                  []}}.
{attribute,{46,2},
           type,
           {symbolic_tag,{type,{46,25},
                               union,
                               [{atom,{46,25},a},
                                {atom,{46,31},f},
                                {atom,{46,37},h},
                                {atom,{46,43},i},
                                {atom,{46,49},u},
                                {atom,{46,55},x},
                                {atom,{46,61},y},
                                {atom,{46,67},z}]},
                         []}}.
{attribute,{47,2},
           type,
           {disasm_tag,{type,{47,25},
                             union,
                             [{user_type,{47,25},symbolic_tag,[]},
                              {atom,{47,42},fr},
                              {atom,{47,49},atom},
                              {atom,{47,58},float},
                              {atom,{47,68},literal}]},
                       []}}.
{attribute,{48,2},
           type,
           {disasm_term,{type,{48,25},
                              union,
                              [{atom,{48,25},nil},
                               {type,{48,33},
                                     tuple,
                                     [{user_type,{48,34},disasm_tag,[]},
                                      {var,{48,48},'_'}]}]},
                        []}}.
{attribute,
    {50,2},
    type,
    {asm_form,
        {type,
            {50,21},
            tuple,
            [{type,{50,22},module,[]},
             {type,
                 {51,22},
                 list,
                 [{type,
                      {51,23},
                      tuple,
                      [{type,{51,24},atom,[]},{type,{51,32},arity,[]}]}]},
             {type,
                 {52,22},
                 list,
                 [{remote_type,
                      {52,23},
                      [{atom,{52,23},beam_lib},
                       {atom,{52,32},attrib_entry},
                       []]}]},
             {type,
                 {53,22},
                 list,
                 [{type,{53,23},record,[{atom,{53,24},function}]}]},
             {remote_type,
                 {54,22},
                 [{atom,{54,22},beam_lib},{atom,{54,31},label},[]]}]},
        []}}.
{attribute,{56,2},export_type,[{asm_form,0}]}.
{attribute,{75,2},
           spec,
           {{function__code,1},
            [{type,{75,21},
                   'fun',
                   [{type,{75,21},
                          product,
                          [{type,{75,22},record,[{atom,{75,23},function}]}]},
                    {type,{75,38},
                          list,
                          [{user_type,{75,39},beam_instr,[]}]}]}]}}.
{function,{76,1},
          function__code,1,
          [{clause,{76,1},
                   [{var,{76,1},'_'}],
                   [[{call,{76,1},
                           {remote,{76,1},
                                   {atom,{76,1},fake},
                                   {atom,{76,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,76,1},{atom,{76,1},ignore}]},
           {clause,{76,1},
                   [{tuple,{76,16},
                           [{atom,{76,16},function},
                            {var,{76,16},'_'},
                            {var,{76,16},'_'},
                            {var,{76,16},'_'},
                            {var,{76,33},'Code'}]}],
                   [],
                   [{debug_line,76,2},{var,{76,43},'Code'}]}]}.
{attribute,{78,2},
           spec,
           {{function__code_update,2},
            [{type,{78,28},
                   'fun',
                   [{type,{78,28},
                          product,
                          [{type,{78,29},record,[{atom,{78,30},function}]},
                           {type,{78,42},
                                 list,
                                 [{user_type,{78,43},beam_instr,[]}]}]},
                    {type,{78,61},record,[{atom,{78,62},function}]}]}]}}.
{function,
    {79,1},
    function__code_update,2,
    [{clause,
         {79,1},
         [{var,{79,1},'_'},{var,{79,1},'_'}],
         [[{call,
               {79,1},
               {remote,
                   {79,1},
                   {atom,{79,1},fake},
                   {atom,{79,1},is_beam_bif_info}},
               []}]],
         [{debug_line,79,3},{atom,{79,1},ignore}]},
     {clause,
         {79,1},
         [{var,{79,23},'Function'},{var,{79,33},'NewCode'}],
         [],
         [{debug_line,80,4},
          {block,
              {80,3},
              [{match,{80,3},{var,{80,3},rec0},{var,{80,3},'Function'}},
               {'case',
                   {80,21},
                   {var,{80,3},rec0},
                   [{clause,
                        {80,21},
                        [{tuple,
                             {80,21},
                             [{atom,{80,21},function},
                              {var,{80,21},'_'},
                              {var,{80,21},'_'},
                              {var,{80,21},'_'},
                              {var,{80,21},'_'}]}],
                        [],
                        [{call,
                             {80,21},
                             {remote,
                                 {80,21},
                                 {atom,{80,21},erlang},
                                 {atom,{80,21},setelement}},
                             [{integer,{80,21},5},
                              {var,{80,3},rec0},
                              {var,{80,28},'NewCode'}]}]},
                    {clause,
                        [{generated,true},{location,{80,21}}],
                        [{var,[{generated,true},{location,{80,21}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{80,21}}],
                             {remote,
                                 [{generated,true},{location,{80,21}}],
                                 {atom,
                                     [{generated,true},{location,{80,21}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{80,21}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{80,21}}],
                                  [{atom,
                                       [{generated,true},{location,{80,21}}],
                                       badrecord},
                                   {var,{80,3},rec0}]}]}]}]}]}]}]}.
{attribute,
    {85,2},
    spec,
    {{format_error,1},
     [{type,
          {85,19},
          'fun',
          [{type,
               {85,19},
               product,
               [{type,
                    {85,20},
                    union,
                    [{type,
                         {85,20},
                         tuple,
                         [{atom,{85,21},internal},{type,{85,32},term,[]}]},
                     {type,
                         {85,42},
                         tuple,
                         [{atom,{85,43},error},
                          {type,{85,51},atom,[]},
                          {type,{85,58},term,[]}]}]}]},
           {type,{85,70},string,[]}]}]}}.
{function,
    {87,1},
    format_error,1,
    [{clause,
         {87,1},
         [{var,{87,1},'_'}],
         [[{call,
               {87,1},
               {remote,
                   {87,1},
                   {atom,{87,1},fake},
                   {atom,{87,1},is_beam_bif_info}},
               []}]],
         [{debug_line,87,5},{atom,{87,1},ignore}]},
     {clause,
         {87,1},
         [{tuple,{87,14},[{atom,{87,15},internal},{var,{87,24},'Error'}]}],
         [],
         [{debug_line,88,6},
          {call,
              {88,5},
              {remote,{88,11},{atom,{88,5},io_lib},{atom,{88,12},format}},
              [{block,0,
                   [{string,
                        {88,19},
                        "~p: disassembly failed with reason ~P."}]},
               {block,0,
                   [{debug_line,89,7},
                    {cons,
                        {89,5},
                        {atom,{89,7},beam_disasm},
                        {cons,
                            {89,15},
                            {var,{89,15},'Error'},
                            {cons,
                                {89,22},
                                {integer,{89,22},25},
                                {nil,{89,24}}}}}]}]}]},
     {clause,
         {90,1},
         [{tuple,
              {90,14},
              [{atom,{90,15},error},
               {var,{90,21},'Module'},
               {var,{90,28},'Error'}]}],
         [],
         [{debug_line,91,8},
          {call,
              {91,5},
              {remote,{91,10},{atom,{91,5},lists},{atom,{91,11},flatten}},
              [{block,0,
                   [{call,
                        {91,19},
                        {remote,
                            {91,25},
                            {var,{91,19},'Module'},
                            {atom,{91,26},format_error}},
                        [{var,{91,39},'Error'}]}]}]}]}]}.
{attribute,
    {173,2},
    spec,
    {{file,1},
     [{type,
          {173,11},
          'fun',
          [{type,
               {173,11},
               product,
               [{type,
                    {173,12},
                    union,
                    [{remote_type,
                         {173,12},
                         [{atom,{173,12},file},{atom,{173,17},filename},[]]},
                     {type,{173,30},binary,[]}]}]},
           {type,
               {173,43},
               union,
               [{type,{173,43},record,[{atom,{173,44},beam_file}]},
                {type,
                    {173,58},
                    tuple,
                    [{atom,{173,59},error},
                     {type,{173,67},atom,[]},
                     {var,{173,74},'_'}]}]}]}]}}.
{function,
    {175,1},
    file,1,
    [{clause,
         {175,1},
         [{var,{175,1},'_'}],
         [[{call,
               {175,1},
               {remote,
                   {175,1},
                   {atom,{175,1},fake},
                   {atom,{175,1},is_beam_bif_info}},
               []}]],
         [{debug_line,175,9},{atom,{175,1},ignore}]},
     {clause,
         {175,1},
         [{var,{175,6},'File'}],
         [],
         [{debug_line,176,10},
          {'try',
              {176,5},
              [{call,
                   {176,9},
                   {atom,{176,9},process_chunks},
                   [{var,{176,24},'File'}]}],
              [],
              [{clause,
                   {177,11},
                   [{tuple,
                        {177,11},
                        [{atom,{177,11},error},
                         {var,{177,17},'Reason'},
                         {var,{177,24},'Stack'}]}],
                   [],
                   [{debug_line,178,11},
                    {tuple,
                        {178,13},
                        [{atom,{178,14},error},
                         {atom,{178,21},beam_disasm},
                         {tuple,
                             {178,28},
                             [{atom,{178,29},internal},
                              {tuple,
                                  {178,38},
                                  [{var,{178,39},'Reason'},
                                   {var,{178,46},'Stack'}]}]}]}]}],
              []}]}]}.
{function,
 {185,1},
 process_chunks,1,
 [{clause,
   {185,1},
   [{var,{185,1},'_'}],
   [[{call,
      {185,1},
      {remote,{185,1},{atom,{185,1},fake},{atom,{185,1},is_beam_bif_info}},
      []}]],
   [{debug_line,185,12},{atom,{185,1},ignore}]},
  {clause,
   {185,1},
   [{var,{185,16},'F'}],
   [],
   [{debug_line,186,13},
    {'case',
     {186,5},
     {call,
      {186,10},
      {remote,{186,18},{atom,{186,10},beam_lib},{atom,{186,19},chunks}},
      [{var,{186,26},'F'},
       {block,0,
        [{cons,
          {186,29},
          {atom,{186,30},atoms},
          {cons,
           {186,36},
           {string,{186,36},"Code"},
           {cons,
            {186,43},
            {string,{186,43},"StrT"},
            {cons,
             {187,9},
             {atom,{187,9},indexed_imports},
             {cons,
              {187,25},
              {atom,{187,25},labeled_exports},
              {nil,{187,40}}}}}}}]}]},
     [{clause,
       {188,2},
       [{tuple,
         {188,2},
         [{atom,{188,3},ok},
          {tuple,
           {188,6},
           [{var,{188,7},'Module'},
            {cons,
             {189,7},
             {tuple,{189,8},[{atom,{189,9},atoms},{var,{189,15},'AtomsList'}]},
             {cons,
              {189,26},
              {tuple,
               {189,26},
               [{string,{189,27},"Code"},{var,{189,34},'CodeBin'}]},
              {cons,
               {189,43},
               {tuple,
                {189,43},
                [{string,{189,44},"StrT"},{var,{189,51},'StrBin'}]},
               {cons,
                {190,8},
                {tuple,
                 {190,8},
                 [{atom,{190,9},indexed_imports},
                  {var,{190,25},'ImportsList'}]},
                {cons,
                 {190,38},
                 {tuple,
                  {190,38},
                  [{atom,{190,39},labeled_exports},{var,{190,55},'Exports'}]},
                 {nil,{190,63}}}}}}}]}]}],
       [],
       [{debug_line,191,14},
        {match,
         {191,6},
         {var,{191,6},'Atoms'},
         {call,
          {191,14},
          {atom,{191,14},mk_atoms},
          [{var,{191,23},'AtomsList'}]}},
        {debug_line,192,15},
        {match,
         {192,6},
         {var,{192,6},'LambdaBin'},
         {call,
          {192,18},
          {atom,{192,18},optional_chunk},
          [{var,{192,33},'F'},{block,0,[{string,{192,36},"FunT"}]}]}},
        {debug_line,193,16},
        {match,
         {193,6},
         {var,{193,6},'Lambdas'},
         {call,
          {193,16},
          {atom,{193,16},beam_disasm_lambdas},
          [{var,{193,36},'LambdaBin'},{var,{193,47},'Atoms'}]}},
        {debug_line,194,17},
        {match,
         {194,13},
         {var,{194,13},'Literals1'},
         {'case',
          {194,25},
          {call,
           {194,30},
           {atom,{194,30},optional_chunk},
           [{var,{194,45},'F'},{atom,{194,48},literals}]},
          [{clause,
            {195,29},
            [{atom,{195,29},none}],
            [],
            [{debug_line,195,18},{nil,{195,37}}]},
           {clause,
            {196,29},
            [{var,{196,29},'Literals0'}],
            [],
            [{debug_line,196,19},{var,{196,42},'Literals0'}]}]}},
        {debug_line,198,20},
        {match,
         {198,6},
         {var,{198,6},'Literals'},
         {call,
          {198,17},
          {remote,
           {198,25},
           {atom,{198,17},gb_trees},
           {atom,{198,26},from_orddict}},
          [{var,{198,39},'Literals1'}]}},
        {debug_line,199,21},
        {match,
         {199,6},
         {var,{199,6},'TypeBin'},
         {call,
          {199,16},
          {atom,{199,16},optional_chunk},
          [{var,{199,31},'F'},{block,0,[{string,{199,34},"Type"}]}]}},
        {debug_line,200,22},
        {match,
         {200,6},
         {var,{200,6},'Types'},
         {call,
          {200,14},
          {atom,{200,14},beam_disasm_types},
          [{var,{200,32},'TypeBin'}]}},
        {debug_line,201,23},
        {match,
         {201,6},
         {var,{201,6},'Code'},
         {call,
          {201,13},
          {atom,{201,13},beam_disasm_code},
          [{var,{201,30},'CodeBin'},
           {var,{201,39},'Atoms'},
           {block,0,
            [{call,
              {201,46},
              {atom,{201,46},mk_imports},
              [{var,{201,57},'ImportsList'}]}]},
           {var,{202,9},'StrBin'},
           {var,{202,17},'Lambdas'},
           {var,{202,26},'Literals'},
           {var,{202,36},'Types'},
           {var,{202,43},'Module'}]}},
        {debug_line,203,24},
        {match,
         {203,6},
         {var,{203,6},'Attributes'},
         {'case',
          {204,3},
          {call,
           {204,8},
           {atom,{204,8},optional_chunk},
           [{var,{204,23},'F'},{atom,{204,26},attributes}]},
          [{clause,
            {205,7},
            [{atom,{205,7},none}],
            [],
            [{debug_line,205,25},{nil,{205,15}}]},
           {clause,
            {206,7},
            [{var,{206,7},'Atts'}],
            [[{call,
               {206,17},
               {remote,
                {206,17},
                {atom,{206,17},erlang},
                {atom,{206,17},is_list}},
               [{var,{206,25},'Atts'}]}]],
            [{debug_line,206,26},{var,{206,34},'Atts'}]}]}},
        {debug_line,208,27},
        {match,
         {208,6},
         {var,{208,6},'CompInfo'},
         {'case',
          {209,3},
          {call,
           {209,8},
           {atom,{209,8},optional_chunk},
           [{var,{209,23},'F'},
            {block,0,[{debug_line,209,28},{string,{209,26},"CInf"}]}]},
          [{clause,
            {210,7},
            [{atom,{210,7},none}],
            [],
            [{debug_line,210,29},{nil,{210,15}}]},
           {clause,
            {211,7},
            [{var,{211,7},'CompInfoBin'}],
            [[{call,
               {211,24},
               {remote,
                {211,24},
                {atom,{211,24},erlang},
                {atom,{211,24},is_binary}},
               [{var,{211,34},'CompInfoBin'}]}]],
            [{debug_line,212,30},
             {call,
              {212,4},
              {remote,
               {212,4},
               {atom,{212,4},erlang},
               {atom,{212,4},binary_to_term}},
              [{var,{212,19},'CompInfoBin'}]}]}]}},
        {debug_line,214,31},
        {tuple,
         {214,6},
         [{atom,{214,6},beam_file},
          {var,{214,26},'Module'},
          {var,{215,28},'Exports'},
          {var,{216,23},'Attributes'},
          {var,{217,25},'CompInfo'},
          {var,{218,17},'Code'}]}]},
      {clause,
       {219,2},
       [{var,{219,2},'Error'}],
       [],
       [{debug_line,219,32},{var,{219,11},'Error'}]}]}]}]}.
{function,
    {226,1},
    optional_chunk,2,
    [{clause,
         {226,1},
         [{var,{226,1},'_'},{var,{226,1},'_'}],
         [[{call,
               {226,1},
               {remote,
                   {226,1},
                   {atom,{226,1},fake},
                   {atom,{226,1},is_beam_bif_info}},
               []}]],
         [{debug_line,226,33},{atom,{226,1},ignore}]},
     {clause,
         {226,1},
         [{var,{226,16},'F'},{var,{226,19},'ChunkTag'}],
         [],
         [{debug_line,227,34},
          {'case',
              {227,5},
              {call,
                  {227,10},
                  {remote,
                      {227,18},
                      {atom,{227,10},beam_lib},
                      {atom,{227,19},chunks}},
                  [{var,{227,26},'F'},
                   {block,0,
                       [{cons,
                            {227,29},
                            {var,{227,30},'ChunkTag'},
                            {nil,{227,38}}}]}]},
              [{clause,
                   {228,2},
                   [{tuple,
                        {228,2},
                        [{atom,{228,3},ok},
                         {tuple,
                             {228,6},
                             [{var,{228,7},'_Module'},
                              {cons,
                                  {228,15},
                                  {tuple,
                                      {228,16},
                                      [{var,{228,17},'ChunkTag'},
                                       {var,{228,26},'Chunk'}]},
                                  {nil,{228,32}}}]}]}],
                   [],
                   [{debug_line,228,35},{var,{228,39},'Chunk'}]},
               {clause,
                   {229,2},
                   [{tuple,
                        {229,2},
                        [{atom,{229,3},error},
                         {atom,{229,9},beam_lib},
                         {tuple,
                             {229,18},
                             [{atom,{229,19},missing_chunk},
                              {var,{229,33},'_'},
                              {var,{229,35},'_'}]}]}],
                   [],
                   [{debug_line,229,36},{atom,{229,42},none}]}]}]}]}.
{attribute,{236,2},
           type,
           {l_info,{type,{236,19},
                         tuple,
                         [{type,{236,20},non_neg_integer,[]},
                          {type,{236,39},
                                tuple,
                                [{var,{236,40},'_'},
                                 {var,{236,42},'_'},
                                 {var,{236,44},'_'},
                                 {var,{236,46},'_'},
                                 {var,{236,48},'_'},
                                 {var,{236,50},'_'}]}]},
                   []}}.
{attribute,
    {237,2},
    spec,
    {{beam_disasm_lambdas,2},
     [{type,
          {237,26},
          'fun',
          [{type,
               {237,26},
               product,
               [{type,
                    {237,27},
                    union,
                    [{atom,{237,27},none},{type,{237,36},binary,[]}]},
                {remote_type,
                    {237,46},
                    [{atom,{237,46},gb_trees},
                     {atom,{237,55},tree},
                     [{user_type,{237,60},index,[]},{var,{237,69},'_'}]]}]},
           {type,
               {238,9},
               union,
               [{atom,{238,9},none},
                {type,{238,18},list,[{user_type,{238,19},l_info,[]}]}]}]}]}}.
{function,
    {240,1},
    beam_disasm_lambdas,2,
    [{clause,
         {240,1},
         [{var,{240,1},'_'},{var,{240,1},'_'}],
         [[{call,
               {240,1},
               {remote,
                   {240,1},
                   {atom,{240,1},fake},
                   {atom,{240,1},is_beam_bif_info}},
               []}]],
         [{debug_line,240,37},{atom,{240,1},ignore}]},
     {clause,
         {240,1},
         [{atom,{240,21},none},{var,{240,27},'_'}],
         [],
         [{debug_line,240,38},{atom,{240,33},none}]},
     {clause,
         {241,1},
         [{bin,
              {241,21},
              [{bin_element,
                   {241,23},
                   {var,{241,23},'_'},
                   {integer,{241,25},32},
                   default},
               {bin_element,{241,28},{var,{241,28},'Tab'},default,[binary]}]},
          {var,{241,42},'Atoms'}],
         [],
         [{debug_line,242,39},
          {call,
              {242,5},
              {atom,{242,5},disasm_lambdas},
              [{var,{242,20},'Tab'},
               {var,{242,25},'Atoms'},
               {integer,{242,32},0}]}]}]}.
{function,
    {244,1},
    disasm_lambdas,3,
    [{clause,
         {244,1},
         [{var,{244,1},'_'},{var,{244,1},'_'},{var,{244,1},'_'}],
         [[{call,
               {244,1},
               {remote,
                   {244,1},
                   {atom,{244,1},fake},
                   {atom,{244,1},is_beam_bif_info}},
               []}]],
         [{debug_line,244,40},{atom,{244,1},ignore}]},
     {clause,
         {244,1},
         [{bin,
              {244,16},
              [{bin_element,
                   {244,18},
                   {var,{244,18},'F'},
                   {integer,{244,20},32},
                   default},
               {bin_element,
                   {244,23},
                   {var,{244,23},'A'},
                   {integer,{244,25},32},
                   default},
               {bin_element,
                   {244,28},
                   {var,{244,28},'Lbl'},
                   {integer,{244,32},32},
                   default},
               {bin_element,
                   {244,35},
                   {var,{244,35},'Index'},
                   {integer,{244,41},32},
                   default},
               {bin_element,
                   {244,44},
                   {var,{244,44},'NumFree'},
                   {integer,{244,52},32},
                   default},
               {bin_element,
                   {244,55},
                   {var,{244,55},'OldUniq'},
                   {integer,{244,63},32},
                   default},
               {bin_element,{244,66},{var,{244,66},'More'},default,[binary]}]},
          {var,{245,9},'Atoms'},
          {var,{245,16},'OldIndex'}],
         [],
         [{debug_line,246,41},
          {match,
              {246,5},
              {var,{246,5},'Info'},
              {tuple,
                  {246,12},
                  [{call,
                       {246,13},
                       {atom,{246,13},lookup},
                       [{var,{246,20},'F'},{var,{246,23},'Atoms'}]},
                   {var,{246,30},'A'},
                   {var,{246,32},'Lbl'},
                   {var,{246,36},'Index'},
                   {var,{246,42},'NumFree'},
                   {var,{246,50},'OldUniq'}]}},
          {debug_line,247,42},
          {cons,
              {247,5},
              {tuple,{247,6},[{var,{247,7},'OldIndex'},{var,{247,16},'Info'}]},
              {call,
                  {247,22},
                  {atom,{247,22},disasm_lambdas},
                  [{var,{247,37},'More'},
                   {var,{247,43},'Atoms'},
                   {block,0,
                       [{op,{247,58},
                            '+',
                            {var,{247,50},'OldIndex'},
                            {integer,{247,59},1}}]}]}}]},
     {clause,
         {248,1},
         [{bin,{248,16},[]},{var,{248,22},'_'},{var,{248,25},'_'}],
         [],
         [{debug_line,248,43},{nil,{248,31}}]}]}.
{attribute,{254,2},
           spec,
           {{beam_disasm_types,1},
            [{type,{254,24},
                   'fun',
                   [{type,{254,24},
                          product,
                          [{type,{254,25},
                                 union,
                                 [{atom,{254,25},none},
                                  {type,{254,34},binary,[]}]}]},
                    {user_type,{254,47},types,[]}]}]}}.
{function,
 {256,1},
 beam_disasm_types,1,
 [{clause,
   {256,1},
   [{var,{256,1},'_'}],
   [[{call,
      {256,1},
      {remote,{256,1},{atom,{256,1},fake},{atom,{256,1},is_beam_bif_info}},
      []}]],
   [{debug_line,256,44},{atom,{256,1},ignore}]},
  {clause,
   {256,1},
   [{atom,{256,19},none}],
   [],
   [{debug_line,257,45},
    {call,
     {257,5},
     {remote,{257,13},{atom,{257,5},gb_trees},{atom,{257,14},empty}},
     []}]},
  {clause,
   {258,1},
   [{bin,
     {258,19},
     [{bin_element,
       {258,21},
       {var,{258,21},'Version'},
       {integer,{258,29},32},
       default},
      {bin_element,
       {258,32},
       {var,{258,32},'Count'},
       {integer,{258,38},32},
       default},
      {bin_element,{258,41},{var,{258,41},'Table0'},default,[binary]}]}],
   [],
   [{debug_line,259,46},
    {'case',
     {259,5},
     {call,
      {259,10},
      {remote,{259,20},{atom,{259,10},beam_types},{atom,{259,21},convert_ext}},
      [{var,{259,33},'Version'},{var,{259,42},'Table0'}]},
     [{clause,
       {260,9},
       [{atom,{260,9},none}],
       [],
       [{debug_line,261,47},
        {call,
         {261,14},
         {remote,{261,14},{atom,{261,14},erlang},{atom,{261,14},exit}},
         [{block,0,
           [{tuple,
             {261,14},
             [{atom,{261,14},beam_disasm},
              {integer,{261,14},261},
              {tuple,
               {261,19},
               [{atom,{261,20},beam_disasm_types},
                {tuple,
                 {261,38},
                 [{atom,{261,39},unknown_type_version},
                  {var,{261,60},'Version'}]}]}]}]}]}]},
      {clause,
       {262,9},
       [{var,{262,9},'Table'}],
       [],
       [{debug_line,263,48},
        {match,
         {263,13},
         {var,{263,13},'Res'},
         {call,
          {263,19},
          {remote,
           {263,27},
           {atom,{263,19},gb_trees},
           {atom,{263,28},from_orddict}},
          [{block,0,
            [{call,
              {263,41},
              {atom,{263,41},disasm_types},
              [{var,{263,54},'Table'},{integer,{263,61},0}]}]}]}},
        {debug_line,264,49},
        {match,
         {264,13},
         {var,{264,13},'Count'},
         {call,
          {264,21},
          {remote,{264,29},{atom,{264,21},gb_trees},{atom,{264,30},size}},
          [{var,{264,35},'Res'}]}},
        {debug_line,265,50},
        {var,{265,13},'Res'}]}]}]},
  {clause,
   {267,1},
   [{bin,
     {267,19},
     [{bin_element,{267,21},{var,{267,21},'_'},default,[binary]}]}],
   [],
   [{debug_line,268,51},
    {call,
     {268,5},
     {remote,{268,13},{atom,{268,5},gb_trees},{atom,{268,14},empty}},
     []}]}]}.
{function,
    {270,1},
    disasm_types,2,
    [{clause,
         {270,1},
         [{var,{270,1},'_'},{var,{270,1},'_'}],
         [[{call,
               {270,1},
               {remote,
                   {270,1},
                   {atom,{270,1},fake},
                   {atom,{270,1},is_beam_bif_info}},
               []}]],
         [{debug_line,270,52},{atom,{270,1},ignore}]},
     {clause,
         {270,1},
         [{var,{270,14},'Types0'},{var,{270,22},'Index'}],
         [],
         [{debug_line,271,53},
          {'case',
              {271,5},
              {call,
                  {271,10},
                  {remote,
                      {271,20},
                      {atom,{271,10},beam_types},
                      {atom,{271,21},decode_ext}},
                  [{var,{271,32},'Types0'}]},
              [{clause,
                   {272,9},
                   [{atom,{272,9},done}],
                   [],
                   [{debug_line,273,54},{nil,{273,13}}]},
               {clause,
                   {274,9},
                   [{tuple,
                        {274,9},
                        [{var,{274,10},'Types'},{var,{274,16},'Rest'}]}],
                   [],
                   [{debug_line,275,55},
                    {cons,
                        {275,13},
                        {tuple,
                            {275,14},
                            [{var,{275,15},'Index'},{var,{275,21},'Types'}]},
                        {call,
                            {275,28},
                            {atom,{275,28},disasm_types},
                            [{var,{275,41},'Rest'},
                             {block,0,
                                 [{op,{275,52},
                                      '+',
                                      {var,{275,47},'Index'},
                                      {integer,{275,53},1}}]}]}}]}]}]}]}.
{function,
 {284,1},
 beam_disasm_code,8,
 [{clause,
   {284,1},
   [{var,{284,1},'_'},
    {var,{284,1},'_'},
    {var,{284,1},'_'},
    {var,{284,1},'_'},
    {var,{284,1},'_'},
    {var,{284,1},'_'},
    {var,{284,1},'_'},
    {var,{284,1},'_'}],
   [[{call,
      {284,1},
      {remote,{284,1},{atom,{284,1},fake},{atom,{284,1},is_beam_bif_info}},
      []}]],
   [{debug_line,284,56},{atom,{284,1},ignore}]},
  {clause,
   {284,1},
   [{bin,
     {284,18},
     [{bin_element,
       {284,20},
       {var,{284,20},'_SS'},
       {integer,{284,24},32},
       default},
      {bin_element,{285,5},{var,{285,5},'_IS'},{integer,{285,9},32},default},
      {bin_element,{286,5},{var,{286,5},'_OM'},{integer,{286,9},32},default},
      {bin_element,{287,5},{var,{287,5},'_L'},{integer,{287,8},32},default},
      {bin_element,{287,11},{var,{287,11},'_F'},{integer,{287,14},32},default},
      {bin_element,{288,5},{var,{288,5},'CodeBin'},default,[binary]}]},
    {var,{288,23},'Atoms'},
    {var,{288,30},'Imports'},
    {var,{289,4},'Str'},
    {var,{289,9},'Lambdas'},
    {var,{289,18},'Literals'},
    {var,{289,28},'Types'},
    {var,{289,35},'M'}],
   [],
   [{debug_line,290,57},
    {match,
     {290,5},
     {var,{290,5},'Code'},
     {call,
      {290,12},
      {remote,{290,12},{atom,{290,12},erlang},{atom,{290,12},binary_to_list}},
      [{var,{290,27},'CodeBin'}]}},
    {debug_line,291,58},
    {'try',
     {291,5},
     [{call,
       {291,9},
       {atom,{291,9},disasm_code},
       [{var,{291,21},'Code'},
        {var,{291,27},'Atoms'},
        {var,{291,34},'Literals'},
        {var,{291,44},'Types'}]}],
     [{clause,
       {292,2},
       [{var,{292,2},'DisasmCode'}],
       [],
       [{debug_line,293,59},
        {match,
         {293,6},
         {var,{293,6},'Functions'},
         {call,
          {293,18},
          {atom,{293,18},get_function_chunks},
          [{var,{293,38},'DisasmCode'}]}},
        {debug_line,294,60},
        {match,
         {294,6},
         {var,{294,6},'Labels'},
         {call,
          {294,15},
          {atom,{294,15},mk_labels},
          [{block,0,
            [{call,
              {294,25},
              {atom,{294,25},local_labels},
              [{var,{294,38},'Functions'}]}]}]}},
        {debug_line,295,61},
        {lc,
         {295,6},
         {block,0,
          [{call,
            {295,7},
            {atom,{295,7},function__code_update},
            [{var,{295,29},'Function'},
             {block,0,
              [{debug_line,296,62},
               {call,
                {296,8},
                {atom,{296,8},resolve_names},
                [{var,{296,22},'Is'},
                 {var,{296,26},'Imports'},
                 {var,{296,35},'Str'},
                 {var,{297,8},'Labels'},
                 {var,{297,16},'Lambdas'},
                 {var,{297,25},'Literals'},
                 {var,{297,35},'M'}]}]}]}]},
         [{block,0,[{debug_line,298,63},{atom,{298,44},true}]},
          {generate_strict,
           {298,40},
           {match,
            {298,10},
            {var,{298,10},'Function'},
            {tuple,
             {298,21},
             [{atom,{298,21},function},
              {var,{298,21},'_'},
              {var,{298,21},'_'},
              {var,{298,21},'_'},
              {var,{298,36},'Is'}]}},
           {var,{298,44},'Functions'}}]}]}],
     [{clause,
       {300,2},
       [{tuple,
         {300,2},
         [{atom,{300,2},error},{var,{300,8},'Rsn'},{var,{300,8},'_'}]}],
       [],
       [{debug_line,301,64},
        {atom,{301,7},ok},
        {debug_line,302,65},
        {call,
         {302,7},
         {remote,{302,7},{atom,{302,7},erlang},{atom,{302,7},exit}},
         [{block,0,
           [{tuple,
             {302,7},
             [{atom,{302,7},beam_disasm},
              {integer,{302,7},302},
              {var,{302,12},'Rsn'}]}]}]}]}],
     []}]}]}.
{function,{307,1},
          disasm_code,4,
          [{clause,{307,1},
                   [{var,{307,1},'_'},
                    {var,{307,1},'_'},
                    {var,{307,1},'_'},
                    {var,{307,1},'_'}],
                   [[{call,{307,1},
                           {remote,{307,1},
                                   {atom,{307,1},fake},
                                   {atom,{307,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,307,66},{atom,{307,1},ignore}]},
           {clause,{307,1},
                   [{cons,{307,13},{var,{307,14},'B'},{var,{307,16},'Bs'}},
                    {var,{307,21},'Atoms'},
                    {var,{307,28},'Literals'},
                    {var,{307,38},'Types'}],
                   [],
                   [{debug_line,308,67},
                    {match,{308,5},
                           {tuple,{308,5},
                                  [{var,{308,6},'Instr'},
                                   {var,{308,12},'RestBs'}]},
                           {call,{308,22},
                                 {atom,{308,22},disasm_instr},
                                 [{var,{308,35},'B'},
                                  {var,{308,38},'Bs'},
                                  {var,{308,42},'Atoms'},
                                  {var,{308,49},'Literals'},
                                  {var,{308,59},'Types'}]}},
                    {debug_line,309,68},
                    {cons,{309,5},
                          {var,{309,6},'Instr'},
                          {call,{309,12},
                                {atom,{309,12},disasm_code},
                                [{var,{309,24},'RestBs'},
                                 {var,{309,32},'Atoms'},
                                 {var,{309,39},'Literals'},
                                 {var,{309,49},'Types'}]}}]},
           {clause,{310,1},
                   [{nil,{310,13}},
                    {var,{310,17},'_'},
                    {var,{310,20},'_'},
                    {var,{310,23},'_'}],
                   [],
                   [{debug_line,311,69},{nil,{311,5}}]}]}.
{function,
    {328,1},
    get_function_chunks,1,
    [{clause,
         {328,1},
         [{var,{328,1},'_'}],
         [[{call,
               {328,1},
               {remote,
                   {328,1},
                   {atom,{328,1},fake},
                   {atom,{328,1},is_beam_bif_info}},
               []}]],
         [{debug_line,328,70},{atom,{328,1},ignore}]},
     {clause,
         {328,1},
         [{nil,{328,21}}],
         [],
         [{debug_line,329,71},
          {call,
              {329,6},
              {remote,{329,6},{atom,{329,6},erlang},{atom,{329,6},exit}},
              [{block,0,
                   [{tuple,
                        {329,6},
                        [{atom,{329,6},beam_disasm},
                         {integer,{329,6},329},
                         {atom,{329,11},empty_code_segment}]}]}]}]},
     {clause,
         {330,1},
         [{var,{330,21},'Code'}],
         [],
         [{debug_line,331,72},
          {call,
              {331,5},
              {atom,{331,5},get_funs},
              [{block,0,
                   [{call,
                        {331,14},
                        {atom,{331,14},labels_r},
                        [{var,{331,23},'Code'},{nil,{331,29}}]}]}]}]}]}.
{function,
    {333,1},
    labels_r,2,
    [{clause,
         {333,1},
         [{var,{333,1},'_'},{var,{333,1},'_'}],
         [[{call,
               {333,1},
               {remote,
                   {333,1},
                   {atom,{333,1},fake},
                   {atom,{333,1},is_beam_bif_info}},
               []}]],
         [{debug_line,333,73},{atom,{333,1},ignore}]},
     {clause,
         {333,1},
         [{nil,{333,10}},{var,{333,14},'R'}],
         [],
         [{debug_line,333,74},
          {tuple,{333,20},[{var,{333,21},'R'},{nil,{333,24}}]}]},
     {clause,
         {334,1},
         [{cons,
              {334,10},
              {match,
                  {334,11},
                  {tuple,{334,11},[{atom,{334,12},label},{var,{334,18},'_'}]},
                  {var,{334,21},'I'}},
              {var,{334,23},'Is'}},
          {var,{334,28},'R'}],
         [],
         [{debug_line,335,75},
          {call,
              {335,5},
              {atom,{335,5},labels_r},
              [{var,{335,14},'Is'},
               {block,0,
                   [{cons,
                        {335,18},
                        {var,{335,19},'I'},
                        {var,{335,21},'R'}}]}]}]},
     {clause,
         {336,1},
         [{cons,
              {336,10},
              {match,
                  {336,11},
                  {tuple,{336,11},[{atom,{336,12},line},{var,{336,17},'_'}]},
                  {var,{336,20},'I'}},
              {var,{336,22},'Is'}},
          {var,{336,27},'R'}],
         [],
         [{debug_line,337,76},
          {call,
              {337,5},
              {atom,{337,5},labels_r},
              [{var,{337,14},'Is'},
               {block,0,
                   [{cons,
                        {337,18},
                        {var,{337,19},'I'},
                        {var,{337,21},'R'}}]}]}]},
     {clause,
         {338,1},
         [{var,{338,10},'Is'},{var,{338,14},'R'}],
         [],
         [{debug_line,338,77},
          {tuple,{338,20},[{var,{338,21},'R'},{var,{338,24},'Is'}]}]}]}.
{function,
 {340,1},
 get_funs,1,
 [{clause,
   {340,1},
   [{var,{340,1},'_'}],
   [[{call,
      {340,1},
      {remote,{340,1},{atom,{340,1},fake},{atom,{340,1},is_beam_bif_info}},
      []}]],
   [{debug_line,340,78},{atom,{340,1},ignore}]},
  {clause,
   {340,1},
   [{tuple,{340,10},[{nil,{340,11}},{nil,{340,14}}]}],
   [],
   [{debug_line,340,79},{nil,{340,22}}]},
  {clause,
   {341,1},
   [{tuple,{341,10},[{var,{341,11},'_'},{nil,{341,13}}]}],
   [],
   [{debug_line,342,80},
    {call,
     {342,6},
     {remote,{342,6},{atom,{342,6},erlang},{atom,{342,6},exit}},
     [{block,0,
       [{tuple,
         {342,6},
         [{atom,{342,6},beam_disasm},
          {integer,{342,6},342},
          {atom,{342,11},no_func_info_in_code_segment}]}]}]}]},
  {clause,
   {343,1},
   [{tuple,
     {343,10},
     [{var,{343,11},'LsR0'},
      {cons,
       {343,16},
       {tuple,
        {343,17},
        [{atom,{343,18},func_info},
         {cons,
          {343,28},
          {match,
           {343,29},
           {tuple,{343,29},[{atom,{343,30},atom},{var,{343,35},'M'}]},
           {var,{343,38},'AtomM'}},
          {cons,
           {343,44},
           {match,
            {343,44},
            {tuple,{343,44},[{atom,{343,45},atom},{var,{343,50},'F'}]},
            {var,{343,53},'AtomF'}},
           {cons,{343,59},{var,{343,59},'ArityArg'},{nil,{343,67}}}}}]},
       {var,{343,70},'Code0'}}]}],
   [[{call,
      {344,8},
      {remote,{344,8},{atom,{344,8},erlang},{atom,{344,8},is_atom}},
      [{var,{344,16},'M'}]},
     {call,
      {344,20},
      {remote,{344,20},{atom,{344,20},erlang},{atom,{344,20},is_atom}},
      [{var,{344,28},'F'}]}]],
   [{debug_line,345,81},
    {match,
     {345,5},
     {var,{345,5},'Arity'},
     {call,
      {345,13},
      {atom,{345,13},resolve_arg_unsigned},
      [{var,{345,34},'ArityArg'}]}},
    {debug_line,346,82},
    {match,
     {346,5},
     {tuple,
      {346,5},
      [{var,{346,6},'LsR'},{var,{346,10},'Code'},{var,{346,15},'RestCode'}]},
     {call,
      {346,27},
      {atom,{346,27},get_fun},
      [{var,{346,35},'Code0'},{nil,{346,42}}]}},
    {debug_line,347,83},
    {match,
     {347,5},
     {cons,
      {347,5},
      {tuple,
       {347,6},
       [{atom,{347,7},label},
        {cons,
         {347,13},
         {tuple,{347,14},[{atom,{347,15},u},{var,{347,17},'Entry'}]},
         {nil,{347,23}}}]},
      {var,{347,26},'_'}},
     {var,{347,31},'Code'}},
    {debug_line,348,84},
    {cons,
     {348,5},
     {tuple,
      {348,6},
      [{atom,{348,6},function},
       {var,{348,21},'F'},
       {var,{349,15},'Arity'},
       {var,{350,15},'Entry'},
       {call,
        {351,14},
        {remote,{351,19},{atom,{351,14},lists},{atom,{351,20},reverse}},
        [{var,{351,28},'LsR0'},
         {block,0,
          [{debug_line,351,85},
           {cons,
            {351,34},
            {tuple,
             {351,35},
             [{atom,{351,36},func_info},
              {var,{351,46},'AtomM'},
              {var,{351,52},'AtomF'},
              {var,{351,58},'Arity'}]},
            {var,{351,65},'Code'}}]}]}]},
     {call,
      {352,7},
      {atom,{352,7},get_funs},
      [{block,0,
        [{debug_line,352,86},
         {tuple,
          {352,16},
          [{var,{352,17},'LsR'},{var,{352,21},'RestCode'}]}]}]}}]}]}.
{function,
    {354,1},
    get_fun,2,
    [{clause,
         {354,1},
         [{var,{354,1},'_'},{var,{354,1},'_'}],
         [[{call,
               {354,1},
               {remote,
                   {354,1},
                   {atom,{354,1},fake},
                   {atom,{354,1},is_beam_bif_info}},
               []}]],
         [{debug_line,354,87},{atom,{354,1},ignore}]},
     {clause,
         {354,1},
         [{match,
              {354,9},
              {cons,
                  {354,9},
                  {tuple,
                      {354,10},
                      [{atom,{354,11},func_info},{var,{354,21},'_'}]},
                  {var,{354,24},'_'}},
              {var,{354,27},'Is'}},
          {var,{354,31},'R0'}],
         [],
         [{debug_line,355,88},
          {match,
              {355,5},
              {tuple,{355,5},[{var,{355,6},'LsR'},{var,{355,10},'R'}]},
              {call,
                  {355,15},
                  {atom,{355,15},labels_r},
                  [{var,{355,24},'R0'},{nil,{355,28}}]}},
          {debug_line,356,89},
          {tuple,
              {356,5},
              [{var,{356,6},'LsR'},
               {call,
                   {356,10},
                   {remote,
                       {356,15},
                       {atom,{356,10},lists},
                       {atom,{356,16},reverse}},
                   [{var,{356,24},'R'}]},
               {var,{356,27},'Is'}]}]},
     {clause,
         {357,1},
         [{cons,
              {357,9},
              {tuple,{357,10},[{atom,{357,11},int_code_end},{nil,{357,24}}]},
              {nil,{357,27}}},
          {var,{357,30},'R'}],
         [],
         [{debug_line,358,90},
          {tuple,
              {358,5},
              [{nil,{358,6}},
               {call,
                   {358,9},
                   {remote,
                       {358,14},
                       {atom,{358,9},lists},
                       {atom,{358,15},reverse}},
                   [{var,{358,23},'R'}]},
               {nil,{358,26}}]}]},
     {clause,
         {359,1},
         [{cons,{359,9},{var,{359,10},'I'},{var,{359,12},'Is'}},
          {var,{359,17},'R'}],
         [],
         [{debug_line,360,91},
          {call,
              {360,5},
              {atom,{360,5},get_fun},
              [{var,{360,13},'Is'},
               {block,0,
                   [{cons,
                        {360,17},
                        {var,{360,18},'I'},
                        {var,{360,20},'R'}}]}]}]},
     {clause,
         {361,1},
         [{nil,{361,9}},{var,{361,13},'R'}],
         [],
         [{debug_line,362,92},
          {call,
              {362,6},
              {remote,{362,6},{atom,{362,6},io},{atom,{362,6},format}},
              [{atom,
                   {362,12},
                   'warning: code segment did not end with int_code_end~n'},
               {nil,{362,68}}]},
          {debug_line,363,93},
          {tuple,
              {363,5},
              [{nil,{363,6}},
               {call,
                   {363,9},
                   {remote,
                       {363,14},
                       {atom,{363,9},lists},
                       {atom,{363,15},reverse}},
                   [{var,{363,23},'R'}]},
               {nil,{363,26}}]}]}]}.
{function,
 {369,1},
 local_labels,1,
 [{clause,
   {369,1},
   [{var,{369,1},'_'}],
   [[{call,
      {369,1},
      {remote,{369,1},{atom,{369,1},fake},{atom,{369,1},is_beam_bif_info}},
      []}]],
   [{debug_line,369,94},{atom,{369,1},ignore}]},
  {clause,
   {369,1},
   [{var,{369,14},'Funs'}],
   [],
   [{debug_line,370,95},
    {call,
     {370,5},
     {remote,{370,10},{atom,{370,5},lists},{atom,{370,11},sort}},
     [{block,0,
       [{call,
         {370,16},
         {remote,{370,21},{atom,{370,16},lists},{atom,{370,22},foldl}},
         [{block,0,
           [{'fun',
             {370,28},
             {clauses,
              [{clause,
                {370,32},
                [{var,{370,33},'F'},{var,{370,36},'R'}],
                [],
                [{debug_line,371,96},
                 {call,
                  {371,8},
                  {atom,{371,8},local_labels_1},
                  [{block,0,
                    [{call,
                      {371,23},
                      {atom,{371,23},function__code},
                      [{var,{371,38},'F'}]}]},
                   {var,{371,42},'R'}]}]}]}}]},
          {nil,{372,12}},
          {var,{372,16},'Funs'}]}]}]}]}]}.
{function,
 {374,1},
 local_labels_1,2,
 [{clause,
   {374,1},
   [{var,{374,1},'_'},{var,{374,1},'_'}],
   [[{call,
      {374,1},
      {remote,{374,1},{atom,{374,1},fake},{atom,{374,1},is_beam_bif_info}},
      []}]],
   [{debug_line,374,97},{atom,{374,1},ignore}]},
  {clause,
   {374,1},
   [{var,{374,16},'Code0'},{var,{374,23},'R'}],
   [],
   [{debug_line,375,98},
    {match,
     {375,5},
     {var,{375,5},'Code1'},
     {call,
      {375,13},
      {remote,{375,18},{atom,{375,13},lists},{atom,{375,19},dropwhile}},
      [{block,0,
        [{'fun',
          {375,29},
          {clauses,
           [{clause,
             {375,32},
             [{tuple,{375,33},[{atom,{375,34},label},{var,{375,40},'_'}]}],
             [],
             [{atom,{375,47},true}]},
            {clause,
             {376,11},
             [{tuple,{376,12},[{atom,{376,13},line},{var,{376,18},'_'}]}],
             [],
             [{debug_line,376,99},{atom,{376,25},true}]},
            {clause,
             {377,11},
             [{tuple,
               {377,12},
               [{atom,{377,13},func_info},
                {var,{377,23},'_'},
                {var,{377,25},'_'},
                {var,{377,27},'_'}]}],
             [],
             [{debug_line,377,100},{atom,{377,34},false}]}]}}]},
       {var,{378,13},'Code0'}]}},
    {debug_line,379,101},
    {match,
     {379,5},
     {cons,
      {379,5},
      {tuple,
       {379,6},
       [{atom,{379,7},func_info},
        {tuple,{379,17},[{atom,{379,18},atom},{var,{379,23},'M'}]},
        {tuple,{379,26},[{atom,{379,27},atom},{var,{379,32},'F'}]},
        {var,{379,35},'A'}]},
      {var,{379,38},'Code'}},
     {var,{379,46},'Code1'}},
    {debug_line,380,102},
    {call,
     {380,5},
     {atom,{380,5},local_labels_2},
     [{var,{380,20},'Code'},
      {var,{380,26},'R'},
      {block,0,
       [{tuple,
         {380,29},
         [{var,{380,30},'M'},{var,{380,32},'F'},{var,{380,34},'A'}]}]}]}]}]}.
{function,
    {382,1},
    local_labels_2,3,
    [{clause,
         {382,1},
         [{var,{382,1},'_'},{var,{382,1},'_'},{var,{382,1},'_'}],
         [[{call,
               {382,1},
               {remote,
                   {382,1},
                   {atom,{382,1},fake},
                   {atom,{382,1},is_beam_bif_info}},
               []}]],
         [{debug_line,382,103},{atom,{382,1},ignore}]},
     {clause,
         {382,1},
         [{cons,
              {382,16},
              {tuple,
                  {382,17},
                  [{atom,{382,18},label},
                   {cons,
                       {382,24},
                       {tuple,{382,25},[{atom,{382,26},u},{var,{382,28},'L'}]},
                       {nil,{382,30}}}]},
              {var,{382,33},'Code'}},
          {var,{382,40},'R'},
          {var,{382,43},'MFA'}],
         [],
         [{debug_line,383,104},
          {call,
              {383,5},
              {atom,{383,5},local_labels_2},
              [{var,{383,20},'Code'},
               {block,0,
                   [{cons,
                        {383,26},
                        {tuple,
                            {383,27},
                            [{var,{383,28},'L'},{var,{383,30},'MFA'}]},
                        {var,{383,35},'R'}}]},
               {var,{383,39},'MFA'}]}]},
     {clause,
         {384,1},
         [{var,{384,16},'_'},{var,{384,19},'R'},{var,{384,22},'_'}],
         [],
         [{debug_line,384,105},{var,{384,28},'R'}]}]}.
{function,
 {391,1},
 disasm_instr,5,
 [{clause,
   {391,1},
   [{var,{391,1},'_'},
    {var,{391,1},'_'},
    {var,{391,1},'_'},
    {var,{391,1},'_'},
    {var,{391,1},'_'}],
   [[{call,
      {391,1},
      {remote,{391,1},{atom,{391,1},fake},{atom,{391,1},is_beam_bif_info}},
      []}]],
   [{debug_line,391,106},{atom,{391,1},ignore}]},
  {clause,
   {391,1},
   [{var,{391,14},'B'},
    {var,{391,17},'Bs'},
    {var,{391,21},'Atoms'},
    {var,{391,28},'Literals'},
    {var,{391,38},'Types'}],
   [],
   [{debug_line,392,107},
    {match,
     {392,5},
     {tuple,{392,5},[{var,{392,6},'SymOp'},{var,{392,13},'Arity'}]},
     {call,
      {392,22},
      {remote,{392,34},{atom,{392,22},beam_opcodes},{atom,{392,35},opname}},
      [{var,{392,42},'B'}]}},
    {debug_line,393,108},
    {'case',
     {393,5},
     {var,{393,10},'SymOp'},
     [{clause,
       {394,2},
       [{atom,{394,2},select_val}],
       [],
       [{debug_line,395,109},
        {call,
         {395,6},
         {atom,{395,6},disasm_select_inst},
         [{atom,{395,25},select_val},
          {var,{395,37},'Bs'},
          {var,{395,41},'Atoms'},
          {var,{395,48},'Literals'},
          {var,{395,58},'Types'}]}]},
      {clause,
       {396,2},
       [{atom,{396,2},select_tuple_arity}],
       [],
       [{debug_line,397,110},
        {call,
         {397,6},
         {atom,{397,6},disasm_select_inst},
         [{atom,{397,25},select_tuple_arity},
          {var,{397,45},'Bs'},
          {var,{397,49},'Atoms'},
          {var,{397,56},'Literals'},
          {var,{397,66},'Types'}]}]},
      {clause,
       {398,2},
       [{atom,{398,2},put_map_assoc}],
       [],
       [{debug_line,399,111},
        {call,
         {399,6},
         {atom,{399,6},disasm_map_inst},
         [{atom,{399,22},put_map_assoc},
          {var,{399,37},'Arity'},
          {var,{399,44},'Bs'},
          {var,{399,48},'Atoms'},
          {var,{399,55},'Literals'},
          {var,{399,65},'Types'}]}]},
      {clause,
       {400,2},
       [{atom,{400,2},put_map_exact}],
       [],
       [{debug_line,401,112},
        {call,
         {401,6},
         {atom,{401,6},disasm_map_inst},
         [{atom,{401,22},put_map_exact},
          {var,{401,37},'Arity'},
          {var,{401,44},'Bs'},
          {var,{401,48},'Atoms'},
          {var,{401,55},'Literals'},
          {var,{401,65},'Types'}]}]},
      {clause,
       {402,2},
       [{atom,{402,2},get_map_elements}],
       [],
       [{debug_line,403,113},
        {call,
         {403,6},
         {atom,{403,6},disasm_map_inst},
         [{atom,{403,22},get_map_elements},
          {var,{403,40},'Arity'},
          {var,{403,47},'Bs'},
          {var,{403,51},'Atoms'},
          {var,{403,58},'Literals'},
          {var,{403,68},'Types'}]}]},
      {clause,
       {404,2},
       [{atom,{404,2},has_map_fields}],
       [],
       [{debug_line,405,114},
        {call,
         {405,6},
         {atom,{405,6},disasm_map_inst},
         [{atom,{405,22},has_map_fields},
          {var,{405,38},'Arity'},
          {var,{405,45},'Bs'},
          {var,{405,49},'Atoms'},
          {var,{405,56},'Literals'},
          {var,{405,66},'Types'}]}]},
      {clause,
       {406,2},
       [{atom,{406,2},put_tuple2}],
       [],
       [{debug_line,407,115},
        {call,
         {407,6},
         {atom,{407,6},disasm_put_tuple2},
         [{var,{407,24},'Bs'},
          {var,{407,28},'Atoms'},
          {var,{407,35},'Literals'},
          {var,{407,45},'Types'}]}]},
      {clause,
       {408,2},
       [{atom,{408,2},make_fun3}],
       [],
       [{debug_line,409,116},
        {call,
         {409,6},
         {atom,{409,6},disasm_make_fun3},
         [{var,{409,23},'Bs'},
          {var,{409,27},'Atoms'},
          {var,{409,34},'Literals'},
          {var,{409,44},'Types'}]}]},
      {clause,
       {410,2},
       [{atom,{410,2},init_yregs}],
       [],
       [{debug_line,411,117},
        {call,
         {411,6},
         {atom,{411,6},disasm_init_yregs},
         [{var,{411,24},'Bs'},
          {var,{411,28},'Atoms'},
          {var,{411,35},'Literals'},
          {var,{411,45},'Types'}]}]},
      {clause,
       {412,2},
       [{atom,{412,2},bs_create_bin}],
       [],
       [{debug_line,413,118},
        {call,
         {413,6},
         {atom,{413,6},disasm_bs_create_bin},
         [{var,{413,27},'Bs'},
          {var,{413,31},'Atoms'},
          {var,{413,38},'Literals'},
          {var,{413,48},'Types'}]}]},
      {clause,
       {414,2},
       [{atom,{414,2},bs_match}],
       [],
       [{debug_line,415,119},
        {call,
         {415,6},
         {atom,{415,6},disasm_bs_match},
         [{var,{415,22},'Bs'},
          {var,{415,26},'Atoms'},
          {var,{415,33},'Literals'},
          {var,{415,43},'Types'}]}]},
      {clause,
       {416,2},
       [{atom,{416,2},update_record}],
       [],
       [{debug_line,417,120},
        {call,
         {417,6},
         {atom,{417,6},disasm_update_record},
         [{var,{417,27},'Bs'},
          {var,{417,31},'Atoms'},
          {var,{417,38},'Literals'},
          {var,{417,48},'Types'}]}]},
      {clause,
       {418,2},
       [{var,{418,2},'_'}],
       [],
       [{debug_line,419,121},
        {'try',
         {419,6},
         [{call,
           {419,10},
           {atom,{419,10},decode_n_args},
           [{var,{419,24},'Arity'},
            {var,{419,31},'Bs'},
            {var,{419,35},'Atoms'},
            {var,{419,42},'Literals'},
            {var,{419,52},'Types'}]}],
         [{clause,
           {420,3},
           [{tuple,{420,3},[{var,{420,4},'Args'},{var,{420,10},'RestBs'}]}],
           [],
           [{debug_line,421,122},
            {atom,{421,8},ok},
            {debug_line,422,123},
            {tuple,
             {422,7},
             [{tuple,{422,8},[{var,{422,9},'SymOp'},{var,{422,16},'Args'}]},
              {var,{422,23},'RestBs'}]}]}],
         [{clause,
           {424,3},
           [{tuple,
             {424,3},
             [{atom,{424,3},error},{var,{424,9},'Rsn'},{var,{424,9},'_'}]}],
           [],
           [{debug_line,425,124},
            {atom,{425,8},ok},
            {debug_line,426,125},
            {call,
             {426,8},
             {remote,{426,8},{atom,{426,8},erlang},{atom,{426,8},exit}},
             [{block,0,
               [{tuple,
                 {426,8},
                 [{atom,{426,8},beam_disasm},
                  {integer,{426,8},426},
                  {tuple,
                   {426,13},
                   [{atom,{426,14},cannot_disasm_instr},
                    {tuple,
                     {426,35},
                     [{var,{426,36},'SymOp'},
                      {var,{426,43},'Arity'},
                      {var,{426,50},'Rsn'}]}]}]}]}]}]}],
         []}]}]}]}]}.
{function,
    {439,1},
    disasm_select_inst,5,
    [{clause,
         {439,1},
         [{var,{439,1},'_'},
          {var,{439,1},'_'},
          {var,{439,1},'_'},
          {var,{439,1},'_'},
          {var,{439,1},'_'}],
         [[{call,
               {439,1},
               {remote,
                   {439,1},
                   {atom,{439,1},fake},
                   {atom,{439,1},is_beam_bif_info}},
               []}]],
         [{debug_line,439,126},{atom,{439,1},ignore}]},
     {clause,
         {439,1},
         [{var,{439,20},'Inst'},
          {var,{439,26},'Bs'},
          {var,{439,30},'Atoms'},
          {var,{439,37},'Literals'},
          {var,{439,47},'Types'}],
         [],
         [{debug_line,440,127},
          {match,
              {440,5},
              {tuple,{440,5},[{var,{440,6},'X'},{var,{440,9},'Bs1'}]},
              {call,
                  {440,16},
                  {atom,{440,16},decode_arg},
                  [{var,{440,27},'Bs'},
                   {var,{440,31},'Atoms'},
                   {var,{440,38},'Literals'},
                   {var,{440,48},'Types'}]}},
          {debug_line,441,128},
          {match,
              {441,5},
              {tuple,{441,5},[{var,{441,6},'F'},{var,{441,9},'Bs2'}]},
              {call,
                  {441,16},
                  {atom,{441,16},decode_arg},
                  [{var,{441,27},'Bs1'},
                   {var,{441,32},'Atoms'},
                   {var,{441,39},'Literals'},
                   {var,{441,49},'Types'}]}},
          {debug_line,442,129},
          {match,
              {442,5},
              {tuple,{442,5},[{var,{442,6},'Z'},{var,{442,9},'Bs3'}]},
              {call,
                  {442,16},
                  {atom,{442,16},decode_arg},
                  [{var,{442,27},'Bs2'},
                   {var,{442,32},'Atoms'},
                   {var,{442,39},'Literals'},
                   {var,{442,49},'Types'}]}},
          {debug_line,443,130},
          {match,
              {443,5},
              {tuple,{443,5},[{var,{443,6},'U'},{var,{443,9},'Bs4'}]},
              {call,
                  {443,16},
                  {atom,{443,16},decode_arg},
                  [{var,{443,27},'Bs3'},
                   {var,{443,32},'Atoms'},
                   {var,{443,39},'Literals'},
                   {var,{443,49},'Types'}]}},
          {debug_line,444,131},
          {match,
              {444,5},
              {tuple,{444,5},[{atom,{444,6},u},{var,{444,9},'Len'}]},
              {var,{444,16},'U'}},
          {debug_line,445,132},
          {match,
              {445,5},
              {tuple,{445,5},[{var,{445,6},'List'},{var,{445,12},'RestBs'}]},
              {call,
                  {445,22},
                  {atom,{445,22},decode_n_args},
                  [{var,{445,36},'Len'},
                   {var,{445,41},'Bs4'},
                   {var,{445,46},'Atoms'},
                   {var,{445,53},'Literals'},
                   {var,{445,63},'Types'}]}},
          {debug_line,446,133},
          {tuple,
              {446,5},
              [{tuple,
                   {446,6},
                   [{var,{446,7},'Inst'},
                    {cons,
                        {446,13},
                        {var,{446,14},'X'},
                        {cons,
                            {446,16},
                            {var,{446,16},'F'},
                            {cons,
                                {446,18},
                                {tuple,
                                    {446,18},
                                    [{var,{446,19},'Z'},
                                     {var,{446,21},'U'},
                                     {var,{446,23},'List'}]},
                                {nil,{446,28}}}}}]},
               {var,{446,32},'RestBs'}]}]}]}.
{function,
    {448,1},
    disasm_map_inst,6,
    [{clause,
         {448,1},
         [{var,{448,1},'_'},
          {var,{448,1},'_'},
          {var,{448,1},'_'},
          {var,{448,1},'_'},
          {var,{448,1},'_'},
          {var,{448,1},'_'}],
         [[{call,
               {448,1},
               {remote,
                   {448,1},
                   {atom,{448,1},fake},
                   {atom,{448,1},is_beam_bif_info}},
               []}]],
         [{debug_line,448,134},{atom,{448,1},ignore}]},
     {clause,
         {448,1},
         [{var,{448,17},'Inst'},
          {var,{448,23},'Arity'},
          {var,{448,30},'Bs0'},
          {var,{448,35},'Atoms'},
          {var,{448,42},'Literals'},
          {var,{448,52},'Types'}],
         [],
         [{debug_line,449,135},
          {match,
              {449,5},
              {tuple,{449,5},[{var,{449,6},'Args0'},{var,{449,12},'Bs1'}]},
              {call,
                  {449,19},
                  {atom,{449,19},decode_n_args},
                  [{var,{449,33},'Arity'},
                   {var,{449,40},'Bs0'},
                   {var,{449,45},'Atoms'},
                   {var,{449,52},'Literals'},
                   {var,{449,62},'Types'}]}},
          {debug_line,451,136},
          {match,
              {451,5},
              {cons,{451,5},{var,{451,6},'Z'},{var,{451,8},'Args1'}},
              {call,
                  {451,18},
                  {remote,
                      {451,23},
                      {atom,{451,18},lists},
                      {atom,{451,24},reverse}},
                  [{var,{451,32},'Args0'}]}},
          {debug_line,452,137},
          {match,
              {452,5},
              {var,{452,5},'Args'},
              {call,
                  {452,18},
                  {remote,
                      {452,23},
                      {atom,{452,18},lists},
                      {atom,{452,24},reverse}},
                  [{var,{452,32},'Args1'}]}},
          {debug_line,453,138},
          {match,
              {453,5},
              {tuple,{453,5},[{var,{453,6},'U'},{var,{453,9},'Bs2'}]},
              {call,
                  {453,18},
                  {atom,{453,18},decode_arg},
                  [{var,{453,29},'Bs1'},
                   {var,{453,34},'Atoms'},
                   {var,{453,41},'Literals'},
                   {var,{453,51},'Types'}]}},
          {debug_line,454,139},
          {match,
              {454,5},
              {tuple,{454,5},[{atom,{454,6},u},{var,{454,9},'Len'}]},
              {var,{454,18},'U'}},
          {debug_line,455,140},
          {match,
              {455,5},
              {tuple,{455,5},[{var,{455,6},'List'},{var,{455,12},'RestBs'}]},
              {call,
                  {455,22},
                  {atom,{455,22},decode_n_args},
                  [{var,{455,36},'Len'},
                   {var,{455,41},'Bs2'},
                   {var,{455,46},'Atoms'},
                   {var,{455,53},'Literals'},
                   {var,{455,63},'Types'}]}},
          {debug_line,456,141},
          {tuple,
              {456,5},
              [{tuple,
                   {456,6},
                   [{var,{456,7},'Inst'},
                    {op,{456,18},
                        '++',
                        {var,{456,13},'Args'},
                        {cons,
                            {456,21},
                            {tuple,
                                {456,22},
                                [{var,{456,23},'Z'},
                                 {var,{456,25},'U'},
                                 {var,{456,27},'List'}]},
                            {nil,{456,32}}}}]},
               {var,{456,36},'RestBs'}]}]}]}.
{function,
    {458,1},
    disasm_put_tuple2,4,
    [{clause,
         {458,1},
         [{var,{458,1},'_'},
          {var,{458,1},'_'},
          {var,{458,1},'_'},
          {var,{458,1},'_'}],
         [[{call,
               {458,1},
               {remote,
                   {458,1},
                   {atom,{458,1},fake},
                   {atom,{458,1},is_beam_bif_info}},
               []}]],
         [{debug_line,458,142},{atom,{458,1},ignore}]},
     {clause,
         {458,1},
         [{var,{458,19},'Bs'},
          {var,{458,23},'Atoms'},
          {var,{458,30},'Literals'},
          {var,{458,40},'Types'}],
         [],
         [{debug_line,459,143},
          {match,
              {459,5},
              {tuple,{459,5},[{var,{459,6},'X'},{var,{459,9},'Bs1'}]},
              {call,
                  {459,16},
                  {atom,{459,16},decode_arg},
                  [{var,{459,27},'Bs'},
                   {var,{459,31},'Atoms'},
                   {var,{459,38},'Literals'},
                   {var,{459,48},'Types'}]}},
          {debug_line,460,144},
          {match,
              {460,5},
              {tuple,{460,5},[{var,{460,6},'Z'},{var,{460,9},'Bs2'}]},
              {call,
                  {460,16},
                  {atom,{460,16},decode_arg},
                  [{var,{460,27},'Bs1'},
                   {var,{460,32},'Atoms'},
                   {var,{460,39},'Literals'},
                   {var,{460,49},'Types'}]}},
          {debug_line,461,145},
          {match,
              {461,5},
              {tuple,{461,5},[{var,{461,6},'U'},{var,{461,9},'Bs3'}]},
              {call,
                  {461,16},
                  {atom,{461,16},decode_arg},
                  [{var,{461,27},'Bs2'},
                   {var,{461,32},'Atoms'},
                   {var,{461,39},'Literals'},
                   {var,{461,49},'Types'}]}},
          {debug_line,462,146},
          {match,
              {462,5},
              {tuple,{462,5},[{atom,{462,6},u},{var,{462,9},'Len'}]},
              {var,{462,16},'U'}},
          {debug_line,463,147},
          {match,
              {463,5},
              {tuple,{463,5},[{var,{463,6},'List'},{var,{463,12},'RestBs'}]},
              {call,
                  {463,22},
                  {atom,{463,22},decode_n_args},
                  [{var,{463,36},'Len'},
                   {var,{463,41},'Bs3'},
                   {var,{463,46},'Atoms'},
                   {var,{463,53},'Literals'},
                   {var,{463,63},'Types'}]}},
          {debug_line,464,148},
          {tuple,
              {464,5},
              [{tuple,
                   {464,6},
                   [{atom,{464,7},put_tuple2},
                    {cons,
                        {464,19},
                        {var,{464,20},'X'},
                        {cons,
                            {464,22},
                            {tuple,
                                {464,22},
                                [{var,{464,23},'Z'},
                                 {var,{464,25},'U'},
                                 {var,{464,27},'List'}]},
                            {nil,{464,32}}}}]},
               {var,{464,36},'RestBs'}]}]}]}.
{function,
    {466,1},
    disasm_make_fun3,4,
    [{clause,
         {466,1},
         [{var,{466,1},'_'},
          {var,{466,1},'_'},
          {var,{466,1},'_'},
          {var,{466,1},'_'}],
         [[{call,
               {466,1},
               {remote,
                   {466,1},
                   {atom,{466,1},fake},
                   {atom,{466,1},is_beam_bif_info}},
               []}]],
         [{debug_line,466,149},{atom,{466,1},ignore}]},
     {clause,
         {466,1},
         [{var,{466,18},'Bs'},
          {var,{466,22},'Atoms'},
          {var,{466,29},'Literals'},
          {var,{466,39},'Types'}],
         [],
         [{debug_line,467,150},
          {match,
              {467,5},
              {tuple,{467,5},[{var,{467,6},'Fun'},{var,{467,11},'Bs1'}]},
              {call,
                  {467,18},
                  {atom,{467,18},decode_arg},
                  [{var,{467,29},'Bs'},
                   {var,{467,33},'Atoms'},
                   {var,{467,40},'Literals'},
                   {var,{467,50},'Types'}]}},
          {debug_line,468,151},
          {match,
              {468,5},
              {tuple,{468,5},[{var,{468,6},'Dst'},{var,{468,11},'Bs2'}]},
              {call,
                  {468,18},
                  {atom,{468,18},decode_arg},
                  [{var,{468,29},'Bs1'},
                   {var,{468,34},'Atoms'},
                   {var,{468,41},'Literals'},
                   {var,{468,51},'Types'}]}},
          {debug_line,469,152},
          {match,
              {469,5},
              {tuple,{469,5},[{var,{469,6},'Z'},{var,{469,9},'Bs3'}]},
              {call,
                  {469,16},
                  {atom,{469,16},decode_arg},
                  [{var,{469,27},'Bs2'},
                   {var,{469,32},'Atoms'},
                   {var,{469,39},'Literals'},
                   {var,{469,49},'Types'}]}},
          {debug_line,470,153},
          {match,
              {470,5},
              {tuple,{470,5},[{var,{470,6},'U'},{var,{470,9},'Bs4'}]},
              {call,
                  {470,16},
                  {atom,{470,16},decode_arg},
                  [{var,{470,27},'Bs3'},
                   {var,{470,32},'Atoms'},
                   {var,{470,39},'Literals'},
                   {var,{470,49},'Types'}]}},
          {debug_line,471,154},
          {match,
              {471,5},
              {tuple,{471,5},[{atom,{471,6},u},{var,{471,9},'Len'}]},
              {var,{471,16},'U'}},
          {debug_line,472,155},
          {match,
              {472,5},
              {tuple,{472,5},[{var,{472,6},'List'},{var,{472,12},'RestBs'}]},
              {call,
                  {472,22},
                  {atom,{472,22},decode_n_args},
                  [{var,{472,36},'Len'},
                   {var,{472,41},'Bs4'},
                   {var,{472,46},'Atoms'},
                   {var,{472,53},'Literals'},
                   {var,{472,63},'Types'}]}},
          {debug_line,473,156},
          {tuple,
              {473,5},
              [{tuple,
                   {473,6},
                   [{atom,{473,7},make_fun3},
                    {cons,
                        {473,18},
                        {var,{473,19},'Fun'},
                        {cons,
                            {473,23},
                            {var,{473,23},'Dst'},
                            {cons,
                                {473,27},
                                {tuple,
                                    {473,27},
                                    [{var,{473,28},'Z'},
                                     {var,{473,30},'U'},
                                     {var,{473,32},'List'}]},
                                {nil,{473,37}}}}}]},
               {var,{473,41},'RestBs'}]}]}]}.
{function,
    {475,1},
    disasm_init_yregs,4,
    [{clause,
         {475,1},
         [{var,{475,1},'_'},
          {var,{475,1},'_'},
          {var,{475,1},'_'},
          {var,{475,1},'_'}],
         [[{call,
               {475,1},
               {remote,
                   {475,1},
                   {atom,{475,1},fake},
                   {atom,{475,1},is_beam_bif_info}},
               []}]],
         [{debug_line,475,157},{atom,{475,1},ignore}]},
     {clause,
         {475,1},
         [{var,{475,19},'Bs1'},
          {var,{475,24},'Atoms'},
          {var,{475,31},'Literals'},
          {var,{475,41},'Types'}],
         [],
         [{debug_line,476,158},
          {match,
              {476,5},
              {tuple,{476,5},[{var,{476,6},'Z'},{var,{476,9},'Bs2'}]},
              {call,
                  {476,16},
                  {atom,{476,16},decode_arg},
                  [{var,{476,27},'Bs1'},
                   {var,{476,32},'Atoms'},
                   {var,{476,39},'Literals'},
                   {var,{476,49},'Types'}]}},
          {debug_line,477,159},
          {match,
              {477,5},
              {tuple,{477,5},[{var,{477,6},'U'},{var,{477,9},'Bs3'}]},
              {call,
                  {477,16},
                  {atom,{477,16},decode_arg},
                  [{var,{477,27},'Bs2'},
                   {var,{477,32},'Atoms'},
                   {var,{477,39},'Literals'},
                   {var,{477,49},'Types'}]}},
          {debug_line,478,160},
          {match,
              {478,5},
              {tuple,{478,5},[{atom,{478,6},u},{var,{478,9},'Len'}]},
              {var,{478,16},'U'}},
          {debug_line,479,161},
          {match,
              {479,5},
              {tuple,{479,5},[{var,{479,6},'List'},{var,{479,12},'RestBs'}]},
              {call,
                  {479,22},
                  {atom,{479,22},decode_n_args},
                  [{var,{479,36},'Len'},
                   {var,{479,41},'Bs3'},
                   {var,{479,46},'Atoms'},
                   {var,{479,53},'Literals'},
                   {var,{479,63},'Types'}]}},
          {debug_line,480,162},
          {tuple,
              {480,5},
              [{tuple,
                   {480,6},
                   [{atom,{480,7},init_yregs},
                    {cons,
                        {480,19},
                        {tuple,
                            {480,20},
                            [{var,{480,21},'Z'},
                             {var,{480,23},'U'},
                             {var,{480,25},'List'}]},
                        {nil,{480,30}}}]},
               {var,{480,34},'RestBs'}]}]}]}.
{function,
    {482,1},
    disasm_bs_create_bin,4,
    [{clause,
         {482,1},
         [{var,{482,1},'_'},
          {var,{482,1},'_'},
          {var,{482,1},'_'},
          {var,{482,1},'_'}],
         [[{call,
               {482,1},
               {remote,
                   {482,1},
                   {atom,{482,1},fake},
                   {atom,{482,1},is_beam_bif_info}},
               []}]],
         [{debug_line,482,163},{atom,{482,1},ignore}]},
     {clause,
         {482,1},
         [{var,{482,22},'Bs0'},
          {var,{482,27},'Atoms'},
          {var,{482,34},'Literals'},
          {var,{482,44},'Types'}],
         [],
         [{debug_line,483,164},
          {match,
              {483,5},
              {tuple,{483,5},[{var,{483,6},'A1'},{var,{483,10},'Bs1'}]},
              {call,
                  {483,17},
                  {atom,{483,17},decode_arg},
                  [{var,{483,28},'Bs0'},
                   {var,{483,33},'Atoms'},
                   {var,{483,40},'Literals'},
                   {var,{483,50},'Types'}]}},
          {debug_line,484,165},
          {match,
              {484,5},
              {tuple,{484,5},[{var,{484,6},'A2'},{var,{484,10},'Bs2'}]},
              {call,
                  {484,17},
                  {atom,{484,17},decode_arg},
                  [{var,{484,28},'Bs1'},
                   {var,{484,33},'Atoms'},
                   {var,{484,40},'Literals'},
                   {var,{484,50},'Types'}]}},
          {debug_line,485,166},
          {match,
              {485,5},
              {tuple,{485,5},[{var,{485,6},'A3'},{var,{485,10},'Bs3'}]},
              {call,
                  {485,17},
                  {atom,{485,17},decode_arg},
                  [{var,{485,28},'Bs2'},
                   {var,{485,33},'Atoms'},
                   {var,{485,40},'Literals'},
                   {var,{485,50},'Types'}]}},
          {debug_line,486,167},
          {match,
              {486,5},
              {tuple,{486,5},[{var,{486,6},'A4'},{var,{486,10},'Bs4'}]},
              {call,
                  {486,17},
                  {atom,{486,17},decode_arg},
                  [{var,{486,28},'Bs3'},
                   {var,{486,33},'Atoms'},
                   {var,{486,40},'Literals'},
                   {var,{486,50},'Types'}]}},
          {debug_line,487,168},
          {match,
              {487,5},
              {tuple,{487,5},[{var,{487,6},'A5'},{var,{487,10},'Bs5'}]},
              {call,
                  {487,17},
                  {atom,{487,17},decode_arg},
                  [{var,{487,28},'Bs4'},
                   {var,{487,33},'Atoms'},
                   {var,{487,40},'Literals'},
                   {var,{487,50},'Types'}]}},
          {debug_line,488,169},
          {match,
              {488,5},
              {tuple,{488,5},[{var,{488,6},'Z'},{var,{488,9},'Bs6'}]},
              {call,
                  {488,16},
                  {atom,{488,16},decode_arg},
                  [{var,{488,27},'Bs5'},
                   {var,{488,32},'Atoms'},
                   {var,{488,39},'Literals'},
                   {var,{488,49},'Types'}]}},
          {debug_line,489,170},
          {match,
              {489,5},
              {tuple,{489,5},[{var,{489,6},'U'},{var,{489,9},'Bs7'}]},
              {call,
                  {489,16},
                  {atom,{489,16},decode_arg},
                  [{var,{489,27},'Bs6'},
                   {var,{489,32},'Atoms'},
                   {var,{489,39},'Literals'},
                   {var,{489,49},'Types'}]}},
          {debug_line,490,171},
          {match,
              {490,5},
              {tuple,{490,5},[{atom,{490,6},u},{var,{490,9},'Len'}]},
              {var,{490,16},'U'}},
          {debug_line,491,172},
          {match,
              {491,5},
              {tuple,{491,5},[{var,{491,6},'List'},{var,{491,12},'RestBs'}]},
              {call,
                  {491,22},
                  {atom,{491,22},decode_n_args},
                  [{var,{491,36},'Len'},
                   {var,{491,41},'Bs7'},
                   {var,{491,46},'Atoms'},
                   {var,{491,53},'Literals'},
                   {var,{491,63},'Types'}]}},
          {debug_line,492,173},
          {tuple,
              {492,5},
              [{tuple,
                   {492,6},
                   [{atom,{492,7},bs_create_bin},
                    {cons,
                        {492,22},
                        {tuple,
                            {492,23},
                            [{var,{492,24},'A1'},
                             {var,{492,27},'A2'},
                             {var,{492,30},'A3'},
                             {var,{492,33},'A4'},
                             {var,{492,36},'A5'},
                             {var,{492,39},'Z'},
                             {var,{492,41},'U'},
                             {var,{492,43},'List'}]},
                        {nil,{492,48}}}]},
               {var,{492,52},'RestBs'}]}]}]}.
{function,
    {494,1},
    disasm_bs_match,4,
    [{clause,
         {494,1},
         [{var,{494,1},'_'},
          {var,{494,1},'_'},
          {var,{494,1},'_'},
          {var,{494,1},'_'}],
         [[{call,
               {494,1},
               {remote,
                   {494,1},
                   {atom,{494,1},fake},
                   {atom,{494,1},is_beam_bif_info}},
               []}]],
         [{debug_line,494,174},{atom,{494,1},ignore}]},
     {clause,
         {494,1},
         [{var,{494,17},'Bs0'},
          {var,{494,22},'Atoms'},
          {var,{494,29},'Literals'},
          {var,{494,39},'Types'}],
         [],
         [{debug_line,495,175},
          {match,
              {495,5},
              {tuple,{495,5},[{var,{495,6},'A1'},{var,{495,10},'Bs1'}]},
              {call,
                  {495,17},
                  {atom,{495,17},decode_arg},
                  [{var,{495,28},'Bs0'},
                   {var,{495,33},'Atoms'},
                   {var,{495,40},'Literals'},
                   {var,{495,50},'Types'}]}},
          {debug_line,496,176},
          {match,
              {496,5},
              {tuple,{496,5},[{var,{496,6},'A2'},{var,{496,10},'Bs2'}]},
              {call,
                  {496,17},
                  {atom,{496,17},decode_arg},
                  [{var,{496,28},'Bs1'},
                   {var,{496,33},'Atoms'},
                   {var,{496,40},'Literals'},
                   {var,{496,50},'Types'}]}},
          {debug_line,497,177},
          {match,{497,5},{var,{497,5},'Bs5'},{var,{497,11},'Bs2'}},
          {debug_line,498,178},
          {match,
              {498,5},
              {tuple,{498,5},[{var,{498,6},'Z'},{var,{498,9},'Bs6'}]},
              {call,
                  {498,16},
                  {atom,{498,16},decode_arg},
                  [{var,{498,27},'Bs5'},
                   {var,{498,32},'Atoms'},
                   {var,{498,39},'Literals'},
                   {var,{498,49},'Types'}]}},
          {debug_line,499,179},
          {match,
              {499,5},
              {tuple,{499,5},[{var,{499,6},'U'},{var,{499,9},'Bs7'}]},
              {call,
                  {499,16},
                  {atom,{499,16},decode_arg},
                  [{var,{499,27},'Bs6'},
                   {var,{499,32},'Atoms'},
                   {var,{499,39},'Literals'},
                   {var,{499,49},'Types'}]}},
          {debug_line,500,180},
          {match,
              {500,5},
              {tuple,{500,5},[{atom,{500,6},u},{var,{500,9},'Len'}]},
              {var,{500,16},'U'}},
          {debug_line,501,181},
          {match,
              {501,5},
              {tuple,{501,5},[{var,{501,6},'List'},{var,{501,12},'RestBs'}]},
              {call,
                  {501,22},
                  {atom,{501,22},decode_n_args},
                  [{var,{501,36},'Len'},
                   {var,{501,41},'Bs7'},
                   {var,{501,46},'Atoms'},
                   {var,{501,53},'Literals'},
                   {var,{501,63},'Types'}]}},
          {debug_line,502,182},
          {tuple,
              {502,5},
              [{tuple,
                   {502,6},
                   [{atom,{502,7},bs_match},
                    {cons,
                        {502,17},
                        {tuple,
                            {502,18},
                            [{var,{502,19},'A1'},
                             {var,{502,22},'A2'},
                             {var,{502,25},'Z'},
                             {var,{502,27},'U'},
                             {var,{502,29},'List'}]},
                        {nil,{502,34}}}]},
               {var,{502,38},'RestBs'}]}]}]}.
{function,
 {504,1},
 disasm_update_record,4,
 [{clause,
   {504,1},
   [{var,{504,1},'_'},{var,{504,1},'_'},{var,{504,1},'_'},{var,{504,1},'_'}],
   [[{call,
      {504,1},
      {remote,{504,1},{atom,{504,1},fake},{atom,{504,1},is_beam_bif_info}},
      []}]],
   [{debug_line,504,183},{atom,{504,1},ignore}]},
  {clause,
   {504,1},
   [{var,{504,22},'Bs1'},
    {var,{504,27},'Atoms'},
    {var,{504,34},'Literals'},
    {var,{504,44},'Types'}],
   [],
   [{debug_line,505,184},
    {match,
     {505,5},
     {tuple,{505,5},[{var,{505,6},'Hint'},{var,{505,12},'Bs2'}]},
     {call,
      {505,19},
      {atom,{505,19},decode_arg},
      [{var,{505,30},'Bs1'},
       {var,{505,35},'Atoms'},
       {var,{505,42},'Literals'},
       {var,{505,52},'Types'}]}},
    {debug_line,506,185},
    {match,
     {506,5},
     {tuple,{506,5},[{var,{506,6},'Size'},{var,{506,12},'Bs3'}]},
     {call,
      {506,19},
      {atom,{506,19},decode_arg},
      [{var,{506,30},'Bs2'},
       {var,{506,35},'Atoms'},
       {var,{506,42},'Literals'},
       {var,{506,52},'Types'}]}},
    {debug_line,507,186},
    {match,
     {507,5},
     {tuple,{507,5},[{var,{507,6},'Src'},{var,{507,11},'Bs4'}]},
     {call,
      {507,18},
      {atom,{507,18},decode_arg},
      [{var,{507,29},'Bs3'},
       {var,{507,34},'Atoms'},
       {var,{507,41},'Literals'},
       {var,{507,51},'Types'}]}},
    {debug_line,508,187},
    {match,
     {508,5},
     {tuple,{508,5},[{var,{508,6},'Dst'},{var,{508,11},'Bs6'}]},
     {call,
      {508,18},
      {atom,{508,18},decode_arg},
      [{var,{508,29},'Bs4'},
       {var,{508,34},'Atoms'},
       {var,{508,41},'Literals'},
       {var,{508,51},'Types'}]}},
    {debug_line,509,188},
    {match,
     {509,5},
     {tuple,{509,5},[{var,{509,6},'Z'},{var,{509,9},'Bs7'}]},
     {call,
      {509,16},
      {atom,{509,16},decode_arg},
      [{var,{509,27},'Bs6'},
       {var,{509,32},'Atoms'},
       {var,{509,39},'Literals'},
       {var,{509,49},'Types'}]}},
    {debug_line,510,189},
    {match,
     {510,5},
     {tuple,{510,5},[{var,{510,6},'U'},{var,{510,9},'Bs8'}]},
     {call,
      {510,16},
      {atom,{510,16},decode_arg},
      [{var,{510,27},'Bs7'},
       {var,{510,32},'Atoms'},
       {var,{510,39},'Literals'},
       {var,{510,49},'Types'}]}},
    {debug_line,511,190},
    {match,
     {511,5},
     {tuple,{511,5},[{atom,{511,6},u},{var,{511,9},'Len'}]},
     {var,{511,16},'U'}},
    {debug_line,512,191},
    {match,
     {512,5},
     {tuple,{512,5},[{var,{512,6},'List'},{var,{512,12},'RestBs'}]},
     {call,
      {512,22},
      {atom,{512,22},decode_n_args},
      [{var,{512,36},'Len'},
       {var,{512,41},'Bs8'},
       {var,{512,46},'Atoms'},
       {var,{512,53},'Literals'},
       {var,{512,63},'Types'}]}},
    {debug_line,513,192},
    {tuple,
     {513,5},
     [{tuple,
       {513,6},
       [{atom,{513,7},update_record},
        {cons,
         {513,22},
         {var,{513,23},'Hint'},
         {cons,
          {513,28},
          {var,{513,28},'Size'},
          {cons,
           {513,33},
           {var,{513,33},'Src'},
           {cons,
            {513,37},
            {var,{513,37},'Dst'},
            {cons,
             {513,41},
             {tuple,
              {513,41},
              [{tuple,
                {513,42},
                [{var,{513,43},'Z'},
                 {var,{513,45},'U'},
                 {var,{513,47},'List'}]}]},
             {nil,{513,53}}}}}}}]},
      {var,{513,57},'RestBs'}]}]}]}.
{attribute,{524,2},
           spec,
           {{decode_arg,1},
            [{type,{524,17},
                   'fun',
                   [{type,{524,17},
                          product,
                          [{type,{524,18},
                                 nonempty_list,
                                 [{type,{524,19},byte,[]}]}]},
                    {type,{524,35},
                          tuple,
                          [{type,{524,36},
                                 tuple,
                                 [{user_type,{524,37},disasm_tag,[]},
                                  {var,{524,50},'_'}]},
                           {type,{524,54},
                                 list,
                                 [{type,{524,55},byte,[]}]}]}]}]}}.
{function,
    {526,1},
    decode_arg,1,
    [{clause,
         {526,1},
         [{var,{526,1},'_'}],
         [[{call,
               {526,1},
               {remote,
                   {526,1},
                   {atom,{526,1},fake},
                   {atom,{526,1},is_beam_bif_info}},
               []}]],
         [{debug_line,526,193},{atom,{526,1},ignore}]},
     {clause,
         {526,1},
         [{cons,{526,12},{var,{526,13},'B'},{var,{526,15},'Bs'}}],
         [],
         [{debug_line,527,194},
          {match,
              {527,5},
              {var,{527,5},'Tag'},
              {call,
                  {527,11},
                  {atom,{527,11},decode_tag},
                  [{block,0,
                       [{op,{527,24},
                            'band',
                            {var,{527,22},'B'},
                            {integer,{527,29},7}}]}]}},
          {debug_line,528,195},
          {atom,{528,6},ok},
          {debug_line,529,196},
          {'case',
              {529,5},
              {var,{529,10},'Tag'},
              [{clause,
                   {530,2},
                   [{atom,{530,2},z}],
                   [],
                   [{debug_line,531,197},
                    {call,
                        {531,6},
                        {atom,{531,6},decode_z_tagged},
                        [{var,{531,22},'Tag'},
                         {var,{531,27},'B'},
                         {var,{531,30},'Bs'},
                         {atom,{531,34},no_literals},
                         {atom,{531,47},no_types}]}]},
               {clause,
                   {532,2},
                   [{var,{532,2},'_'}],
                   [],
                   [{debug_line,534,198},
                    {call,
                        {534,6},
                        {atom,{534,6},decode_int},
                        [{var,{534,17},'Tag'},
                         {var,{534,22},'B'},
                         {var,{534,25},'Bs'}]}]}]}]}]}.
{attribute,
    {537,2},
    spec,
    {{decode_arg,4},
     [{type,
          {537,17},
          'fun',
          [{type,
               {537,17},
               product,
               [{type,{537,18},nonempty_list,[{type,{537,19},byte,[]}]},
                {remote_type,
                    {538,18},
                    [{atom,{538,18},gb_trees},
                     {atom,{538,27},tree},
                     [{user_type,{538,32},index,[]},{var,{538,41},'_'}]]},
                {user_type,{538,45},literals,[]},
                {user_type,{538,57},types,[]}]},
           {type,
               {539,9},
               tuple,
               [{user_type,{539,10},disasm_term,[]},
                {type,{539,25},list,[{type,{539,26},byte,[]}]}]}]}]}}.
{function,
 {541,1},
 decode_arg,4,
 [{clause,
   {541,1},
   [{var,{541,1},'_'},{var,{541,1},'_'},{var,{541,1},'_'},{var,{541,1},'_'}],
   [[{call,
      {541,1},
      {remote,{541,1},{atom,{541,1},fake},{atom,{541,1},is_beam_bif_info}},
      []}]],
   [{debug_line,541,199},{atom,{541,1},ignore}]},
  {clause,
   {541,1},
   [{cons,{541,12},{var,{541,13},'B'},{var,{541,15},'Bs0'}},
    {var,{541,21},'Atoms'},
    {var,{541,28},'Literals'},
    {var,{541,38},'Types'}],
   [],
   [{debug_line,542,200},
    {match,
     {542,5},
     {var,{542,5},'Tag'},
     {call,
      {542,11},
      {atom,{542,11},decode_tag},
      [{block,0,
        [{op,{542,24},'band',{var,{542,22},'B'},{integer,{542,29},7}}]}]}},
    {debug_line,543,201},
    {atom,{543,6},ok},
    {debug_line,544,202},
    {'case',
     {544,5},
     {var,{544,10},'Tag'},
     [{clause,
       {545,2},
       [{atom,{545,2},z}],
       [],
       [{debug_line,546,203},
        {call,
         {546,6},
         {atom,{546,6},decode_z_tagged},
         [{var,{546,22},'Tag'},
          {var,{546,27},'B'},
          {var,{546,30},'Bs0'},
          {var,{546,35},'Literals'},
          {var,{546,45},'Types'}]}]},
      {clause,
       {547,2},
       [{atom,{547,2},a}],
       [],
       [{debug_line,549,204},
        {'case',
         {549,6},
         {call,
          {549,11},
          {atom,{549,11},decode_int},
          [{var,{549,22},'Tag'},{var,{549,27},'B'},{var,{549,30},'Bs0'}]},
         [{clause,
           {550,3},
           [{tuple,
             {550,3},
             [{tuple,{550,4},[{atom,{550,5},a},{integer,{550,7},0}]},
              {var,{550,10},'Bs'}]}],
           [],
           [{debug_line,550,205},
            {tuple,{550,17},[{atom,{550,18},nil},{var,{550,22},'Bs'}]}]},
          {clause,
           {551,3},
           [{tuple,
             {551,3},
             [{tuple,{551,4},[{atom,{551,5},a},{var,{551,7},'I'}]},
              {var,{551,10},'Bs'}]}],
           [],
           [{debug_line,551,206},
            {tuple,
             {551,17},
             [{tuple,
               {551,18},
               [{atom,{551,19},atom},
                {call,
                 {551,24},
                 {atom,{551,24},lookup},
                 [{var,{551,31},'I'},{var,{551,34},'Atoms'}]}]},
              {var,{551,42},'Bs'}]}]}]}]},
      {clause,
       {553,2},
       [{var,{553,2},'_'}],
       [],
       [{debug_line,555,207},
        {call,
         {555,6},
         {atom,{555,6},decode_int},
         [{var,{555,17},'Tag'},
          {var,{555,22},'B'},
          {var,{555,25},'Bs0'}]}]}]}]}]}.
{function,
    {572,1},
    decode_int,3,
    [{clause,
         {572,1},
         [{var,{572,1},'_'},{var,{572,1},'_'},{var,{572,1},'_'}],
         [[{call,
               {572,1},
               {remote,
                   {572,1},
                   {atom,{572,1},fake},
                   {atom,{572,1},is_beam_bif_info}},
               []}]],
         [{debug_line,572,208},{atom,{572,1},ignore}]},
     {clause,
         {572,1},
         [{var,{572,12},'Tag'},{var,{572,16},'B'},{var,{572,18},'Bs'}],
         [[{op,{572,42},
               '=:=',
               {op,{572,30},'band',{var,{572,28},'B'},{integer,{572,35},8}},
               {integer,{572,46},0}}]],
         [{debug_line,574,209},
          {match,
              {574,5},
              {var,{574,5},'N'},
              {op,{574,11},'bsr',{var,{574,9},'B'},{integer,{574,15},4}}},
          {debug_line,575,210},
          {tuple,
              {575,5},
              [{tuple,{575,6},[{var,{575,7},'Tag'},{var,{575,11},'N'}]},
               {var,{575,14},'Bs'}]}]},
     {clause,
         {576,1},
         [{var,{576,12},'Tag'},{var,{576,16},'B'},{var,{576,18},'Bs'}],
         [[{op,{576,42},
               '=:=',
               {op,{576,30},'band',{var,{576,28},'B'},{integer,{576,35},16}},
               {integer,{576,46},0}}]],
         [{debug_line,578,211},
          {match,
              {578,5},
              {cons,{578,5},{var,{578,6},'B1'},{var,{578,9},'Bs1'}},
              {var,{578,16},'Bs'}},
          {debug_line,579,212},
          {match,
              {579,5},
              {var,{579,5},'Val0'},
              {op,{579,14},'band',{var,{579,12},'B'},{integer,{579,19},224}}},
          {debug_line,580,213},
          {match,
              {580,5},
              {var,{580,5},'N'},
              {op,{580,22},
                  'bor',
                  {op,{580,15},
                      'bsl',
                      {var,{580,10},'Val0'},
                      {integer,{580,19},3}},
                  {var,{580,26},'B1'}}},
          {debug_line,581,214},
          {atom,{581,6},ok},
          {debug_line,582,215},
          {tuple,
              {582,5},
              [{tuple,{582,6},[{var,{582,7},'Tag'},{var,{582,11},'N'}]},
               {var,{582,14},'Bs1'}]}]},
     {clause,
         {583,1},
         [{var,{583,12},'Tag'},{var,{583,16},'B'},{var,{583,18},'Bs'}],
         [],
         [{debug_line,584,216},
          {match,
              {584,5},
              {tuple,{584,5},[{var,{584,6},'Len'},{var,{584,10},'Bs1'}]},
              {call,
                  {584,17},
                  {atom,{584,17},decode_int_length},
                  [{var,{584,35},'B'},{var,{584,37},'Bs'}]}},
          {debug_line,585,217},
          {match,
              {585,5},
              {tuple,{585,5},[{var,{585,6},'IntBs'},{var,{585,12},'RemBs'}]},
              {call,
                  {585,21},
                  {atom,{585,21},take_bytes},
                  [{var,{585,32},'Len'},{var,{585,36},'Bs1'}]}},
          {debug_line,586,218},
          {match,
              {586,5},
              {var,{586,5},'N'},
              {call,
                  {586,9},
                  {atom,{586,9},build_arg},
                  [{var,{586,19},'IntBs'}]}},
          {debug_line,587,219},
          {match,
              {587,5},
              {cons,{587,5},{var,{587,6},'F'},{var,{587,8},'_'}},
              {var,{587,13},'IntBs'}},
          {debug_line,588,220},
          {match,
              {588,5},
              {var,{588,5},'Num'},
              {'if',
                  {588,11},
                  [{clause,
                       {588,14},
                       [],
                       [[{op,{588,16},
                             '>',
                             {var,{588,14},'F'},
                             {integer,{588,18},127}},
                         {op,{588,27},
                             '=:=',
                             {var,{588,23},'Tag'},
                             {atom,{588,31},i}}]],
                       [{call,
                            {588,36},
                            {atom,{588,36},decode_negative},
                            [{var,{588,52},'N'},{var,{588,54},'Len'}]}]},
                   {clause,
                       {589,7},
                       [],
                       [[{atom,{589,7},true}]],
                       [{debug_line,589,221},{var,{589,15},'N'}]}]}},
          {debug_line,591,222},
          {atom,{591,6},ok},
          {debug_line,592,223},
          {tuple,
              {592,5},
              [{tuple,{592,6},[{var,{592,7},'Tag'},{var,{592,11},'Num'}]},
               {var,{592,16},'RemBs'}]}]}]}.
{attribute,{594,2},
           spec,
           {{decode_int_length,2},
            [{type,{594,24},
                   'fun',
                   [{type,{594,24},
                          product,
                          [{type,{594,25},integer,[]},
                           {type,{594,36},list,[{type,{594,37},byte,[]}]}]},
                    {type,{594,49},
                          tuple,
                          [{type,{594,50},integer,[]},
                           {type,{594,61},
                                 list,
                                 [{type,{594,62},byte,[]}]}]}]}]}}.
{function,
 {596,1},
 decode_int_length,2,
 [{clause,
   {596,1},
   [{var,{596,1},'_'},{var,{596,1},'_'}],
   [[{call,
      {596,1},
      {remote,{596,1},{atom,{596,1},fake},{atom,{596,1},is_beam_bif_info}},
      []}]],
   [{debug_line,596,224},{atom,{596,1},ignore}]},
  {clause,
   {596,1},
   [{var,{596,19},'B'},{var,{596,22},'Bs'}],
   [],
   [{debug_line,599,225},
    {'case',
     {599,5},
     {op,{599,12},'bsr',{var,{599,10},'B'},{integer,{599,16},5}},
     [{clause,
       {600,2},
       [{integer,{600,2},7}],
       [],
       [{debug_line,601,226},
        {match,
         {601,6},
         {tuple,{601,6},[{var,{601,7},'Arg'},{var,{601,11},'ArgBs'}]},
         {call,{601,20},{atom,{601,20},decode_arg},[{var,{601,31},'Bs'}]}},
        {debug_line,602,227},
        {'case',
         {602,6},
         {var,{602,11},'Arg'},
         [{clause,
           {603,3},
           [{tuple,{603,3},[{atom,{603,4},u},{var,{603,6},'L'}]}],
           [],
           [{debug_line,604,228},
            {tuple,
             {604,7},
             [{op,{604,9},'+',{var,{604,8},'L'},{integer,{604,10},9}},
              {var,{604,12},'ArgBs'}]}]},
          {clause,
           {605,3},
           [{var,{605,3},'_'}],
           [],
           [{debug_line,606,229},
            {call,
             {606,8},
             {remote,{606,8},{atom,{606,8},erlang},{atom,{606,8},exit}},
             [{block,0,
               [{tuple,
                 {606,8},
                 [{atom,{606,8},beam_disasm},
                  {integer,{606,8},606},
                  {tuple,
                   {606,13},
                   [{atom,{606,14},decode_int},
                    {atom,{606,25},weird_bignum_sublength},
                    {var,{606,48},'Arg'}]}]}]}]}]}]}]},
      {clause,
       {608,2},
       [{var,{608,2},'L'}],
       [],
       [{debug_line,609,230},
        {tuple,
         {609,6},
         [{op,{609,8},'+',{var,{609,7},'L'},{integer,{609,9},2}},
          {var,{609,11},'Bs'}]}]}]}]}]}.
{attribute,{612,2},
           spec,
           {{decode_negative,2},
            [{type,{612,22},
                   'fun',
                   [{type,{612,22},
                          product,
                          [{type,{612,23},non_neg_integer,[]},
                           {type,{612,42},non_neg_integer,[]}]},
                    {type,{612,64},neg_integer,[]}]}]}}.
{function,{614,1},
          decode_negative,2,
          [{clause,{614,1},
                   [{var,{614,1},'_'},{var,{614,1},'_'}],
                   [[{call,{614,1},
                           {remote,{614,1},
                                   {atom,{614,1},fake},
                                   {atom,{614,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,614,231},{atom,{614,1},ignore}]},
           {clause,{614,1},
                   [{var,{614,17},'N'},{var,{614,20},'Len'}],
                   [],
                   [{debug_line,615,232},
                    {op,{615,7},
                        '-',
                        {var,{615,5},'N'},
                        {op,{615,12},
                            'bsl',
                            {integer,{615,10},1},
                            {op,{615,20},
                                '*',
                                {var,{615,17},'Len'},
                                {integer,{615,21},8}}}}]}]}.
{function,
 {621,1},
 decode_z_tagged,5,
 [{clause,
   {621,1},
   [{var,{621,1},'_'},
    {var,{621,1},'_'},
    {var,{621,1},'_'},
    {var,{621,1},'_'},
    {var,{621,1},'_'}],
   [[{call,
      {621,1},
      {remote,{621,1},{atom,{621,1},fake},{atom,{621,1},is_beam_bif_info}},
      []}]],
   [{debug_line,621,233},{atom,{621,1},ignore}]},
  {clause,
   {621,1},
   [{var,{621,17},'Tag'},
    {var,{621,21},'B'},
    {var,{621,23},'Bs'},
    {var,{621,26},'Literals'},
    {var,{621,35},'Types'}],
   [[{op,
      {621,62},
      '=:=',
      {op,{621,50},'band',{var,{621,48},'B'},{integer,{621,55},8}},
      {integer,{621,66},0}}]],
   [{debug_line,622,234},
    {match,
     {622,5},
     {var,{622,5},'N'},
     {op,{622,11},'bsr',{var,{622,9},'B'},{integer,{622,15},4}}},
    {debug_line,623,235},
    {'case',
     {623,5},
     {var,{623,10},'N'},
     [{clause,
       {624,2},
       [{integer,{624,2},0}],
       [],
       [{debug_line,625,236},
        {call,{625,6},{atom,{625,6},decode_float},[{var,{625,19},'Bs'}]}]},
      {clause,
       {626,2},
       [{integer,{626,2},1}],
       [],
       [{debug_line,627,237},
        {tuple,
         {627,6},
         [{tuple,{627,7},[{var,{627,8},'Tag'},{var,{627,12},'N'}]},
          {var,{627,15},'Bs'}]}]},
      {clause,
       {628,2},
       [{integer,{628,2},2}],
       [],
       [{debug_line,629,238},
        {call,{629,6},{atom,{629,6},decode_fr},[{var,{629,16},'Bs'}]}]},
      {clause,
       {630,2},
       [{integer,{630,2},3}],
       [],
       [{debug_line,631,239},
        {call,
         {631,6},
         {atom,{631,6},decode_alloc_list},
         [{var,{631,24},'Bs'},{var,{631,28},'Literals'}]}]},
      {clause,
       {632,2},
       [{integer,{632,2},4}],
       [],
       [{debug_line,633,240},
        {match,
         {633,6},
         {tuple,
          {633,6},
          [{tuple,{633,7},[{atom,{633,8},u},{var,{633,10},'LitIndex'}]},
           {var,{633,20},'RestBs'}]},
         {call,{633,30},{atom,{633,30},decode_arg},[{var,{633,41},'Bs'}]}},
        {debug_line,634,241},
        {'case',
         {634,6},
         {call,
          {634,11},
          {remote,{634,19},{atom,{634,11},gb_trees},{atom,{634,20},get}},
          [{var,{634,24},'LitIndex'},{var,{634,34},'Literals'}]},
         [{clause,
           {635,3},
           [{var,{635,3},'Float'}],
           [[{call,
              {635,14},
              {remote,
               {635,14},
               {atom,{635,14},erlang},
               {atom,{635,14},is_float}},
              [{var,{635,23},'Float'}]}]],
           [{debug_line,636,242},
            {tuple,
             {636,7},
             [{tuple,{636,8},[{atom,{636,9},float},{var,{636,15},'Float'}]},
              {var,{636,22},'RestBs'}]}]},
          {clause,
           {637,3},
           [{var,{637,3},'Literal'}],
           [],
           [{debug_line,638,243},
            {tuple,
             {638,7},
             [{tuple,
               {638,8},
               [{atom,{638,9},literal},{var,{638,17},'Literal'}]},
              {var,{638,26},'RestBs'}]}]}]}]},
      {clause,
       {640,9},
       [{integer,{640,9},5}],
       [],
       [{debug_line,641,244},
        {call,
         {641,13},
         {atom,{641,13},decode_tr},
         [{var,{641,23},'Bs'},{var,{641,27},'Types'}]}]},
      {clause,
       {642,2},
       [{var,{642,2},'_'}],
       [],
       [{debug_line,643,245},
        {call,
         {643,7},
         {remote,{643,7},{atom,{643,7},erlang},{atom,{643,7},exit}},
         [{block,0,
           [{tuple,
             {643,7},
             [{atom,{643,7},beam_disasm},
              {integer,{643,7},643},
              {tuple,
               {643,12},
               [{atom,{643,13},decode_z_tagged},
                {tuple,
                 {643,29},
                 [{atom,{643,30},invalid_extended_tag},
                  {var,{643,51},'N'}]}]}]}]}]}]}]}]},
  {clause,
   {645,1},
   [{var,{645,17},'_'},
    {var,{645,19},'B'},
    {var,{645,21},'_'},
    {var,{645,23},'_'},
    {var,{645,25},'_'}],
   [],
   [{debug_line,646,246},
    {call,
     {646,6},
     {remote,{646,6},{atom,{646,6},erlang},{atom,{646,6},exit}},
     [{block,0,
       [{tuple,
         {646,6},
         [{atom,{646,6},beam_disasm},
          {integer,{646,6},646},
          {tuple,
           {646,11},
           [{atom,{646,12},decode_z_tagged},
            {tuple,
             {646,28},
             [{atom,{646,29},weird_value},{var,{646,41},'B'}]}]}]}]}]}]}]}.
{attribute,{648,2},
           spec,
           {{decode_float,1},
            [{type,{648,19},
                   'fun',
                   [{type,{648,19},
                          product,
                          [{type,{648,20},
                                 nonempty_list,
                                 [{type,{648,21},byte,[]}]}]},
                    {type,{648,37},
                          tuple,
                          [{type,{648,38},
                                 tuple,
                                 [{atom,{648,39},float},
                                  {type,{648,48},float,[]}]},
                           {type,{648,58},
                                 list,
                                 [{type,{648,59},byte,[]}]}]}]}]}}.
{function,
    {650,1},
    decode_float,1,
    [{clause,
         {650,1},
         [{var,{650,1},'_'}],
         [[{call,
               {650,1},
               {remote,
                   {650,1},
                   {atom,{650,1},fake},
                   {atom,{650,1},is_beam_bif_info}},
               []}]],
         [{debug_line,650,247},{atom,{650,1},ignore}]},
     {clause,
         {650,1},
         [{var,{650,14},'Bs'}],
         [],
         [{debug_line,651,248},
          {match,
              {651,5},
              {tuple,{651,5},[{var,{651,6},'FL'},{var,{651,9},'RestBs'}]},
              {call,
                  {651,19},
                  {atom,{651,19},take_bytes},
                  [{integer,{651,30},8},{var,{651,32},'Bs'}]}},
          {debug_line,652,249},
          {match,
              {652,5},
              {bin,
                  {652,5},
                  [{bin_element,
                       {652,7},
                       {var,{652,7},'Float'},
                       {integer,{652,13},64},
                       [float]}]},
              {call,
                  {652,26},
                  {remote,
                      {652,26},
                      {atom,{652,26},erlang},
                      {atom,{652,26},list_to_binary}},
                  [{var,{652,41},'FL'}]}},
          {debug_line,653,250},
          {tuple,
              {653,5},
              [{tuple,{653,6},[{atom,{653,7},float},{var,{653,13},'Float'}]},
               {var,{653,20},'RestBs'}]}]}]}.
{attribute,{655,2},
           spec,
           {{decode_tr,2},
            [{type,{655,16},
                   'fun',
                   [{type,{655,16},
                          product,
                          [{type,{655,17},
                                 nonempty_list,
                                 [{type,{655,18},byte,[]}]},
                           {type,{655,31},term,[]}]},
                    {type,{655,42},
                          tuple,
                          [{type,{655,43},record,[{atom,{655,44},tr}]},
                           {type,{655,50},
                                 list,
                                 [{type,{655,51},byte,[]}]}]}]}]}}.
{function,
    {656,1},
    decode_tr,2,
    [{clause,
         {656,1},
         [{var,{656,1},'_'},{var,{656,1},'_'}],
         [[{call,
               {656,1},
               {remote,
                   {656,1},
                   {atom,{656,1},fake},
                   {atom,{656,1},is_beam_bif_info}},
               []}]],
         [{debug_line,656,251},{atom,{656,1},ignore}]},
     {clause,
         {656,1},
         [{var,{656,11},'Bs'},{var,{656,15},'Types'}],
         [],
         [{debug_line,657,252},
          {match,
              {657,5},
              {tuple,{657,5},[{var,{657,6},'Reg'},{var,{657,11},'RestBs0'}]},
              {call,
                  {657,22},
                  {atom,{657,22},decode_arg},
                  [{var,{657,33},'Bs'}]}},
          {debug_line,658,253},
          {match,
              {658,5},
              {tuple,
                  {658,5},
                  [{tuple,{658,6},[{atom,{658,7},u},{var,{658,10},'TypeIdx'}]},
                   {var,{658,20},'RestBs'}]},
              {call,
                  {658,30},
                  {atom,{658,30},decode_arg},
                  [{var,{658,41},'RestBs0'}]}},
          {debug_line,659,254},
          {tuple,
              {659,5},
              [{tuple,
                   {659,6},
                   [{atom,{659,6},tr},
                    {var,{659,12},'Reg'},
                    {call,
                        {659,18},
                        {remote,
                            {659,26},
                            {atom,{659,18},gb_trees},
                            {atom,{659,27},get}},
                        [{var,{659,31},'TypeIdx'},{var,{659,40},'Types'}]}]},
               {var,{659,49},'RestBs'}]}]}]}.
{attribute,{661,2},
           spec,
           {{decode_fr,1},
            [{type,{661,16},
                   'fun',
                   [{type,{661,16},
                          product,
                          [{type,{661,17},
                                 nonempty_list,
                                 [{type,{661,18},byte,[]}]}]},
                    {type,{661,34},
                          tuple,
                          [{type,{661,35},
                                 tuple,
                                 [{atom,{661,36},fr},
                                  {type,{661,42},non_neg_integer,[]}]},
                           {type,{661,62},
                                 list,
                                 [{type,{661,63},byte,[]}]}]}]}]}}.
{function,
    {663,1},
    decode_fr,1,
    [{clause,
         {663,1},
         [{var,{663,1},'_'}],
         [[{call,
               {663,1},
               {remote,
                   {663,1},
                   {atom,{663,1},fake},
                   {atom,{663,1},is_beam_bif_info}},
               []}]],
         [{debug_line,663,255},{atom,{663,1},ignore}]},
     {clause,
         {663,1},
         [{var,{663,11},'Bs'}],
         [],
         [{debug_line,664,256},
          {match,
              {664,5},
              {tuple,
                  {664,5},
                  [{tuple,{664,6},[{atom,{664,7},u},{var,{664,9},'Fr'}]},
                   {var,{664,13},'RestBs'}]},
              {call,
                  {664,23},
                  {atom,{664,23},decode_arg},
                  [{var,{664,34},'Bs'}]}},
          {debug_line,665,257},
          {tuple,
              {665,5},
              [{tuple,{665,6},[{atom,{665,7},fr},{var,{665,10},'Fr'}]},
               {var,{665,14},'RestBs'}]}]}]}.
{function,
    {667,1},
    decode_alloc_list,2,
    [{clause,
         {667,1},
         [{var,{667,1},'_'},{var,{667,1},'_'}],
         [[{call,
               {667,1},
               {remote,
                   {667,1},
                   {atom,{667,1},fake},
                   {atom,{667,1},is_beam_bif_info}},
               []}]],
         [{debug_line,667,258},{atom,{667,1},ignore}]},
     {clause,
         {667,1},
         [{var,{667,19},'Bs'},{var,{667,23},'Literals'}],
         [],
         [{debug_line,668,259},
          {match,
              {668,5},
              {tuple,
                  {668,5},
                  [{tuple,{668,6},[{atom,{668,7},u},{var,{668,9},'N'}]},
                   {var,{668,12},'RestBs'}]},
              {call,
                  {668,22},
                  {atom,{668,22},decode_arg},
                  [{var,{668,33},'Bs'}]}},
          {debug_line,669,260},
          {call,
              {669,5},
              {atom,{669,5},decode_alloc_list_1},
              [{var,{669,25},'N'},
               {var,{669,28},'Literals'},
               {var,{669,38},'RestBs'},
               {nil,{669,46}}]}]}]}.
{function,
    {671,1},
    decode_alloc_list_1,4,
    [{clause,
         {671,1},
         [{var,{671,1},'_'},
          {var,{671,1},'_'},
          {var,{671,1},'_'},
          {var,{671,1},'_'}],
         [[{call,
               {671,1},
               {remote,
                   {671,1},
                   {atom,{671,1},fake},
                   {atom,{671,1},is_beam_bif_info}},
               []}]],
         [{debug_line,671,261},{atom,{671,1},ignore}]},
     {clause,
         {671,1},
         [{integer,{671,21},0},
          {var,{671,24},'_Literals'},
          {var,{671,35},'RestBs'},
          {var,{671,43},'Acc'}],
         [],
         [{debug_line,672,262},
          {tuple,
              {672,5},
              [{tuple,
                   {672,6},
                   [{atom,{672,7},u},
                    {tuple,
                        {672,9},
                        [{atom,{672,10},alloc},
                         {call,
                             {672,16},
                             {remote,
                                 {672,21},
                                 {atom,{672,16},lists},
                                 {atom,{672,22},reverse}},
                             [{var,{672,30},'Acc'}]}]}]},
               {var,{672,37},'RestBs'}]}]},
     {clause,
         {673,1},
         [{var,{673,21},'N'},
          {var,{673,24},'Literals'},
          {var,{673,34},'Bs0'},
          {var,{673,39},'Acc'}],
         [],
         [{debug_line,674,263},
          {match,
              {674,5},
              {tuple,
                  {674,5},
                  [{tuple,{674,6},[{atom,{674,7},u},{var,{674,9},'Type'}]},
                   {var,{674,15},'Bs1'}]},
              {call,
                  {674,22},
                  {atom,{674,22},decode_arg},
                  [{var,{674,33},'Bs0'}]}},
          {debug_line,675,264},
          {match,
              {675,5},
              {tuple,
                  {675,5},
                  [{tuple,{675,6},[{atom,{675,7},u},{var,{675,9},'Val'}]},
                   {var,{675,14},'Bs'}]},
              {call,
                  {675,20},
                  {atom,{675,20},decode_arg},
                  [{var,{675,31},'Bs1'}]}},
          {debug_line,676,265},
          {match,
              {676,5},
              {var,{676,5},'Res'},
              {'case',
                  {676,11},
                  {var,{676,16},'Type'},
                  [{clause,
                       {677,8},
                       [{integer,{677,8},0}],
                       [],
                       [{debug_line,677,266},
                        {tuple,
                            {677,13},
                            [{atom,{677,14},words},{var,{677,20},'Val'}]}]},
                   {clause,
                       {678,8},
                       [{integer,{678,8},1}],
                       [],
                       [{debug_line,678,267},
                        {tuple,
                            {678,13},
                            [{atom,{678,14},floats},{var,{678,21},'Val'}]}]},
                   {clause,
                       {679,15},
                       [{integer,{679,15},2}],
                       [],
                       [{debug_line,679,268},
                        {tuple,
                            {679,20},
                            [{atom,{679,21},funs},{var,{679,26},'Val'}]}]}]}},
          {debug_line,681,269},
          {call,
              {681,5},
              {atom,{681,5},decode_alloc_list_1},
              [{block,0,
                   [{op,{681,26},
                        '-',
                        {var,{681,25},'N'},
                        {integer,{681,27},1}}]},
               {var,{681,30},'Literals'},
               {var,{681,40},'Bs'},
               {block,0,
                   [{cons,
                        {681,44},
                        {var,{681,45},'Res'},
                        {var,{681,49},'Acc'}}]}]}]}]}.
{attribute,{687,2},
           spec,
           {{take_bytes,2},
            [{type,{687,17},
                   'fun',
                   [{type,{687,17},
                          product,
                          [{type,{687,18},non_neg_integer,[]},
                           {type,{687,37},list,[{type,{687,38},byte,[]}]}]},
                    {type,{687,50},
                          tuple,
                          [{type,{687,51},list,[{type,{687,52},byte,[]}]},
                           {type,{687,61},
                                 list,
                                 [{type,{687,62},byte,[]}]}]}]}]}}.
{function,{689,1},
          take_bytes,2,
          [{clause,{689,1},
                   [{var,{689,1},'_'},{var,{689,1},'_'}],
                   [[{call,{689,1},
                           {remote,{689,1},
                                   {atom,{689,1},fake},
                                   {atom,{689,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,689,270},{atom,{689,1},ignore}]},
           {clause,{689,1},
                   [{var,{689,12},'N'},{var,{689,15},'Bs'}],
                   [],
                   [{debug_line,690,271},
                    {call,{690,5},
                          {atom,{690,5},take_bytes},
                          [{var,{690,16},'N'},
                           {var,{690,19},'Bs'},
                           {nil,{690,23}}]}]}]}.
{function,
    {692,1},
    take_bytes,3,
    [{clause,
         {692,1},
         [{var,{692,1},'_'},{var,{692,1},'_'},{var,{692,1},'_'}],
         [[{call,
               {692,1},
               {remote,
                   {692,1},
                   {atom,{692,1},fake},
                   {atom,{692,1},is_beam_bif_info}},
               []}]],
         [{debug_line,692,272},{atom,{692,1},ignore}]},
     {clause,
         {692,1},
         [{var,{692,12},'N'},
          {cons,{692,15},{var,{692,16},'B'},{var,{692,18},'Bs'}},
          {var,{692,23},'Acc'}],
         [[{op,{692,35},'>',{var,{692,33},'N'},{integer,{692,37},0}}]],
         [{debug_line,693,273},
          {call,
              {693,5},
              {atom,{693,5},take_bytes},
              [{block,0,
                   [{op,{693,17},
                        '-',
                        {var,{693,16},'N'},
                        {integer,{693,18},1}}]},
               {var,{693,21},'Bs'},
               {block,0,
                   [{cons,
                        {693,25},
                        {var,{693,26},'B'},
                        {var,{693,28},'Acc'}}]}]}]},
     {clause,
         {694,1},
         [{integer,{694,12},0},{var,{694,15},'Bs'},{var,{694,19},'Acc'}],
         [],
         [{debug_line,695,274},
          {tuple,
              {695,5},
              [{call,
                   {695,6},
                   {remote,
                       {695,11},
                       {atom,{695,6},lists},
                       {atom,{695,12},reverse}},
                   [{var,{695,20},'Acc'}]},
               {var,{695,26},'Bs'}]}]}]}.
{function,{702,1},
          build_arg,1,
          [{clause,{702,1},
                   [{var,{702,1},'_'}],
                   [[{call,{702,1},
                           {remote,{702,1},
                                   {atom,{702,1},fake},
                                   {atom,{702,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,702,275},{atom,{702,1},ignore}]},
           {clause,{702,1},
                   [{var,{702,11},'Bs'}],
                   [],
                   [{debug_line,703,276},
                    {call,{703,5},
                          {atom,{703,5},build_arg},
                          [{var,{703,15},'Bs'},{integer,{703,19},0}]}]}]}.
{function,
    {705,1},
    build_arg,2,
    [{clause,
         {705,1},
         [{var,{705,1},'_'},{var,{705,1},'_'}],
         [[{call,
               {705,1},
               {remote,
                   {705,1},
                   {atom,{705,1},fake},
                   {atom,{705,1},is_beam_bif_info}},
               []}]],
         [{debug_line,705,277},{atom,{705,1},ignore}]},
     {clause,
         {705,1},
         [{cons,{705,11},{var,{705,12},'B'},{var,{705,14},'Bs'}},
          {var,{705,19},'N'}],
         [],
         [{debug_line,706,278},
          {call,
              {706,5},
              {atom,{706,5},build_arg},
              [{var,{706,15},'Bs'},
               {block,0,
                   [{op,{706,29},
                        'bor',
                        {op,{706,22},
                            'bsl',
                            {var,{706,20},'N'},
                            {integer,{706,26},8}},
                        {var,{706,33},'B'}}]}]}]},
     {clause,
         {707,1},
         [{nil,{707,11}},{var,{707,15},'N'}],
         [],
         [{debug_line,708,279},{var,{708,5},'N'}]}]}.
{function,{714,1},
          decode_n_args,5,
          [{clause,{714,1},
                   [{var,{714,1},'_'},
                    {var,{714,1},'_'},
                    {var,{714,1},'_'},
                    {var,{714,1},'_'},
                    {var,{714,1},'_'}],
                   [[{call,{714,1},
                           {remote,{714,1},
                                   {atom,{714,1},fake},
                                   {atom,{714,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,714,280},{atom,{714,1},ignore}]},
           {clause,{714,1},
                   [{var,{714,15},'N'},
                    {var,{714,18},'Bs'},
                    {var,{714,22},'Atoms'},
                    {var,{714,29},'Literals'},
                    {var,{714,39},'Types'}],
                   [[{op,{714,53},
                         '>=',
                         {var,{714,51},'N'},
                         {integer,{714,56},0}}]],
                   [{debug_line,715,281},
                    {call,{715,5},
                          {atom,{715,5},decode_n_args},
                          [{var,{715,19},'N'},
                           {nil,{715,22}},
                           {var,{715,26},'Bs'},
                           {var,{715,30},'Atoms'},
                           {var,{715,37},'Literals'},
                           {var,{715,47},'Types'}]}]}]}.
{function,
    {717,1},
    decode_n_args,6,
    [{clause,
         {717,1},
         [{var,{717,1},'_'},
          {var,{717,1},'_'},
          {var,{717,1},'_'},
          {var,{717,1},'_'},
          {var,{717,1},'_'},
          {var,{717,1},'_'}],
         [[{call,
               {717,1},
               {remote,
                   {717,1},
                   {atom,{717,1},fake},
                   {atom,{717,1},is_beam_bif_info}},
               []}]],
         [{debug_line,717,282},{atom,{717,1},ignore}]},
     {clause,
         {717,1},
         [{var,{717,15},'N'},
          {var,{717,18},'Acc'},
          {var,{717,23},'Bs0'},
          {var,{717,28},'Atoms'},
          {var,{717,35},'Literals'},
          {var,{717,45},'Types'}],
         [[{op,{717,59},'>',{var,{717,57},'N'},{integer,{717,61},0}}]],
         [{debug_line,718,283},
          {match,
              {718,5},
              {tuple,{718,5},[{var,{718,6},'A1'},{var,{718,9},'Bs'}]},
              {call,
                  {718,15},
                  {atom,{718,15},decode_arg},
                  [{var,{718,26},'Bs0'},
                   {var,{718,31},'Atoms'},
                   {var,{718,38},'Literals'},
                   {var,{718,48},'Types'}]}},
          {debug_line,719,284},
          {call,
              {719,5},
              {atom,{719,5},decode_n_args},
              [{block,0,
                   [{op,{719,20},
                        '-',
                        {var,{719,19},'N'},
                        {integer,{719,21},1}}]},
               {block,0,
                   [{cons,{719,24},{var,{719,25},'A1'},{var,{719,28},'Acc'}}]},
               {var,{719,34},'Bs'},
               {var,{719,38},'Atoms'},
               {var,{719,45},'Literals'},
               {var,{719,55},'Types'}]}]},
     {clause,
         {720,1},
         [{integer,{720,15},0},
          {var,{720,18},'Acc'},
          {var,{720,23},'Bs'},
          {var,{720,27},'_'},
          {var,{720,30},'_'},
          {var,{720,33},'_'}],
         [],
         [{debug_line,721,285},
          {tuple,
              {721,5},
              [{call,
                   {721,6},
                   {remote,
                       {721,11},
                       {atom,{721,6},lists},
                       {atom,{721,12},reverse}},
                   [{var,{721,20},'Acc'}]},
               {var,{721,25},'Bs'}]}]}]}.
{attribute,{727,2},
           spec,
           {{decode_tag,1},
            [{type,{727,17},
                   'fun',
                   [{type,{727,17},
                          product,
                          [{type,{727,18},
                                 range,
                                 [{integer,{727,18},0},
                                  {integer,{727,21},7}]}]},
                    {user_type,{727,27},symbolic_tag,[]}]}]}}.
{function,{729,1},
          decode_tag,1,
          [{clause,{729,1},
                   [{var,{729,1},'_'}],
                   [[{call,{729,1},
                           {remote,{729,1},
                                   {atom,{729,1},fake},
                                   {atom,{729,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,729,286},{atom,{729,1},ignore}]},
           {clause,{729,1},
                   [{integer,{729,13},0}],
                   [],
                   [{debug_line,729,287},{atom,{729,23},u}]},
           {clause,{730,1},
                   [{integer,{730,13},1}],
                   [],
                   [{debug_line,730,288},{atom,{730,23},i}]},
           {clause,{731,1},
                   [{integer,{731,13},2}],
                   [],
                   [{debug_line,731,289},{atom,{731,23},a}]},
           {clause,{732,1},
                   [{integer,{732,13},3}],
                   [],
                   [{debug_line,732,290},{atom,{732,23},x}]},
           {clause,{733,1},
                   [{integer,{733,13},4}],
                   [],
                   [{debug_line,733,291},{atom,{733,23},y}]},
           {clause,{734,1},
                   [{integer,{734,13},5}],
                   [],
                   [{debug_line,734,292},{atom,{734,23},f}]},
           {clause,{735,1},
                   [{integer,{735,13},6}],
                   [],
                   [{debug_line,735,293},{atom,{735,23},h}]},
           {clause,{736,1},
                   [{integer,{736,13},7}],
                   [],
                   [{debug_line,736,294},{atom,{736,23},z}]}]}.
{function,{754,1},
          resolve_names,7,
          [{clause,{754,1},
                   [{var,{754,1},'_'},
                    {var,{754,1},'_'},
                    {var,{754,1},'_'},
                    {var,{754,1},'_'},
                    {var,{754,1},'_'},
                    {var,{754,1},'_'},
                    {var,{754,1},'_'}],
                   [[{call,{754,1},
                           {remote,{754,1},
                                   {atom,{754,1},fake},
                                   {atom,{754,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,754,295},{atom,{754,1},ignore}]},
           {clause,{754,1},
                   [{var,{754,15},'Fun'},
                    {var,{754,20},'Imports'},
                    {var,{754,29},'Str'},
                    {var,{754,34},'Lbls'},
                    {var,{754,40},'Lambdas'},
                    {var,{754,49},'Literals'},
                    {var,{754,59},'M'}],
                   [],
                   [{debug_line,755,296},
                    {lc,{755,5},
                        {block,0,
                               [{call,{755,6},
                                      {atom,{755,6},resolve_inst},
                                      [{var,{755,19},'Instr'},
                                       {var,{755,26},'Imports'},
                                       {var,{755,35},'Str'},
                                       {var,{755,40},'Lbls'},
                                       {var,{755,46},'Lambdas'},
                                       {var,{755,55},'Literals'},
                                       {var,{755,65},'M'}]}]},
                        [{block,0,[{atom,{755,80},true}]},
                         {generate,{755,77},
                                   {var,{755,71},'Instr'},
                                   {var,{755,80},'Fun'}}]}]}]}.
{function,
    {767,1},
    resolve_inst,7,
    [{clause,
         {767,1},
         [{var,{767,1},'_'},
          {var,{767,1},'_'},
          {var,{767,1},'_'},
          {var,{767,1},'_'},
          {var,{767,1},'_'},
          {var,{767,1},'_'},
          {var,{767,1},'_'}],
         [[{call,
               {767,1},
               {remote,
                   {767,1},
                   {atom,{767,1},fake},
                   {atom,{767,1},is_beam_bif_info}},
               []}]],
         [{debug_line,767,297},{atom,{767,1},ignore}]},
     {clause,
         {767,1},
         [{tuple,{767,14},[{atom,{767,15},make_fun2},{var,{767,25},'Args'}]},
          {var,{767,32},'_'},
          {var,{767,35},'_'},
          {var,{767,38},'_'},
          {var,{767,41},'Lambdas'},
          {var,{767,50},'_'},
          {var,{767,53},'M'}],
         [],
         [{debug_line,768,298},
          {match,
              {768,5},
              {cons,{768,5},{var,{768,6},'OldIndex'},{nil,{768,14}}},
              {call,
                  {768,18},
                  {atom,{768,18},resolve_args},
                  [{var,{768,31},'Args'}]}},
          {debug_line,769,299},
          {match,
              {769,5},
              {tuple,
                  {769,5},
                  [{var,{769,6},'OldIndex'},
                   {tuple,
                       {769,15},
                       [{var,{769,16},'F'},
                        {var,{769,18},'A'},
                        {var,{769,20},'_Lbl'},
                        {var,{769,25},'_Index'},
                        {var,{769,32},'NumFree'},
                        {var,{769,40},'OldUniq'}]}]},
              {call,
                  {770,2},
                  {remote,{770,7},{atom,{770,2},lists},{atom,{770,8},keyfind}},
                  [{var,{770,16},'OldIndex'},
                   {integer,{770,26},1},
                   {var,{770,29},'Lambdas'}]}},
          {debug_line,771,300},
          {tuple,
              {771,5},
              [{atom,{771,6},make_fun2},
               {tuple,
                   {771,16},
                   [{var,{771,17},'M'},{var,{771,19},'F'},{var,{771,21},'A'}]},
               {var,{771,24},'OldIndex'},
               {var,{771,33},'OldUniq'},
               {var,{771,41},'NumFree'}]}]},
     {clause,
         {772,1},
         [{tuple,
              {772,14},
              [{atom,{772,15},make_fun3},
               {cons,
                   {772,25},
                   {var,{772,26},'Fun'},
                   {cons,
                       {772,30},
                       {var,{772,30},'Dst'},
                       {cons,
                           {772,34},
                           {tuple,
                               {772,34},
                               [{tuple,
                                    {772,35},
                                    [{atom,{772,36},z},{integer,{772,38},1}]},
                                {tuple,
                                    {772,41},
                                    [{atom,{772,42},u},{var,{772,44},'_'}]},
                                {var,{772,47},'Env0'}]},
                           {nil,{772,52}}}}}]},
          {var,{772,56},'_'},
          {var,{772,59},'_'},
          {var,{772,62},'_'},
          {var,{772,65},'Lambdas'},
          {var,{772,74},'_'},
          {var,{772,77},'M'}],
         [],
         [{debug_line,773,301},
          {match,
              {773,5},
              {var,{773,5},'OldIndex'},
              {call,
                  {773,16},
                  {atom,{773,16},resolve_arg},
                  [{var,{773,28},'Fun'}]}},
          {debug_line,774,302},
          {match,
              {774,5},
              {var,{774,5},'Env1'},
              {call,
                  {774,12},
                  {atom,{774,12},resolve_args},
                  [{var,{774,25},'Env0'}]}},
          {debug_line,775,303},
          {match,
              {775,5},
              {tuple,
                  {775,5},
                  [{var,{775,6},'OldIndex'},
                   {tuple,
                       {775,15},
                       [{var,{775,16},'F'},
                        {var,{775,18},'A'},
                        {var,{775,20},'_Lbl'},
                        {var,{775,25},'_Index'},
                        {var,{775,32},'_NumFree'},
                        {var,{775,41},'OldUniq'}]}]},
              {call,
                  {776,2},
                  {remote,{776,7},{atom,{776,2},lists},{atom,{776,8},keyfind}},
                  [{var,{776,16},'OldIndex'},
                   {integer,{776,26},1},
                   {var,{776,29},'Lambdas'}]}},
          {debug_line,777,304},
          {tuple,
              {777,5},
              [{atom,{777,6},make_fun3},
               {tuple,
                   {777,16},
                   [{var,{777,17},'M'},{var,{777,19},'F'},{var,{777,21},'A'}]},
               {var,{777,24},'OldIndex'},
               {var,{777,33},'OldUniq'},
               {var,{777,41},'Dst'},
               {tuple,
                   {777,45},
                   [{atom,{777,46},list},{var,{777,51},'Env1'}]}]}]},
     {clause,
         {778,1},
         [{tuple,{778,14},[{atom,{778,15},call_fun2},{var,{778,25},'Args'}]},
          {var,{778,32},'_'},
          {var,{778,35},'_'},
          {var,{778,38},'_'},
          {var,{778,41},'Lambdas'},
          {var,{778,50},'_'},
          {var,{778,53},'_'}],
         [],
         [{debug_line,779,305},
          {match,
              {779,5},
              {cons,
                  {779,5},
                  {var,{779,6},'Tag0'},
                  {cons,
                      {779,11},
                      {var,{779,11},'Arity'},
                      {cons,{779,17},{var,{779,17},'Func'},{nil,{779,21}}}}},
              {call,
                  {779,25},
                  {atom,{779,25},resolve_args},
                  [{var,{779,38},'Args'}]}},
          {debug_line,780,306},
          {match,
              {780,5},
              {var,{780,5},'Tag'},
              {'case',
                  {780,11},
                  {var,{780,16},'Tag0'},
                  [{clause,
                       {781,15},
                       [{var,{781,15},'Index'}],
                       [[{call,
                             {781,26},
                             {remote,
                                 {781,26},
                                 {atom,{781,26},erlang},
                                 {atom,{781,26},is_integer}},
                             [{var,{781,37},'Index'}]}]],
                       [{debug_line,782,307},
                        {match,
                            {782,19},
                            {tuple,
                                {782,19},
                                [{var,{782,20},'Tag0'},
                                 {tuple,
                                     {782,25},
                                     [{var,{782,26},'_F'},
                                      {var,{782,29},'_A'},
                                      {var,{782,32},'Label'},
                                      {var,{782,38},'_Index'},
                                      {var,{782,45},'_NumFree'},
                                      {var,{782,54},'_OldUniq'}]}]},
                            {call,
                                {783,23},
                                {remote,
                                    {783,28},
                                    {atom,{783,23},lists},
                                    {atom,{783,29},keyfind}},
                                [{var,{783,37},'Tag0'},
                                 {integer,{783,43},1},
                                 {var,{783,46},'Lambdas'}]}},
                        {debug_line,784,308},
                        {tuple,
                            {784,19},
                            [{atom,{784,20},f},{var,{784,22},'Label'}]}]},
                   {clause,
                       {785,15},
                       [{var,{785,15},'_'}],
                       [],
                       [{debug_line,786,309},{var,{786,19},'Tag0'}]}]}},
          {debug_line,788,310},
          {tuple,
              {788,5},
              [{atom,{788,6},call_fun2},
               {var,{788,16},'Tag'},
               {var,{788,20},'Arity'},
               {var,{788,26},'Func'}]}]},
     {clause,
         {789,1},
         [{var,{789,14},'Instr'},
          {var,{789,21},'Imports'},
          {var,{789,30},'Str'},
          {var,{789,35},'Lbls'},
          {var,{789,41},'_Lambdas'},
          {var,{789,51},'_Literals'},
          {var,{789,62},'_M'}],
         [],
         [{debug_line,791,311},
          {call,
              {791,5},
              {atom,{791,5},resolve_inst},
              [{var,{791,18},'Instr'},
               {var,{791,25},'Imports'},
               {var,{791,34},'Str'},
               {var,{791,39},'Lbls'}]}]}]}.
{function,
 {793,1},
 resolve_inst,4,
 [{clause,
   {793,1},
   [{var,{793,1},'_'},{var,{793,1},'_'},{var,{793,1},'_'},{var,{793,1},'_'}],
   [[{call,
      {793,1},
      {remote,{793,1},{atom,{793,1},fake},{atom,{793,1},is_beam_bif_info}},
      []}]],
   [{debug_line,793,312},{atom,{793,1},ignore}]},
  {clause,
   {793,1},
   [{tuple,
     {793,14},
     [{atom,{793,15},label},
      {cons,
       {793,21},
       {tuple,{793,22},[{atom,{793,23},u},{var,{793,25},'L'}]},
       {nil,{793,27}}}]},
    {var,{793,30},'_'},
    {var,{793,32},'_'},
    {var,{793,34},'_'}],
   [],
   [{debug_line,794,313},
    {tuple,{794,5},[{atom,{794,6},label},{var,{794,12},'L'}]}]},
  {clause,
   {795,1},
   [{var,{795,14},'FuncInfo'},
    {var,{795,23},'_'},
    {var,{795,25},'_'},
    {var,{795,27},'_'}],
   [[{op,
      {795,56},
      '=:=',
      {call,
       {795,35},
       {remote,{795,35},{atom,{795,35},erlang},{atom,{795,35},element}},
       [{integer,{795,43},1},{var,{795,46},'FuncInfo'}]},
      {atom,{795,60},func_info}}]],
   [{debug_line,796,314},{var,{796,5},'FuncInfo'}]},
  {clause,
   {799,1},
   [{tuple,
     {799,14},
     [{atom,{799,15},call},
      {cons,
       {799,20},
       {tuple,{799,21},[{atom,{799,22},u},{var,{799,24},'N'}]},
       {cons,
        {799,27},
        {tuple,{799,27},[{atom,{799,28},f},{var,{799,30},'L'}]},
        {nil,{799,32}}}}]},
    {var,{799,35},'_'},
    {var,{799,37},'_'},
    {var,{799,39},'Lbls'}],
   [],
   [{debug_line,800,315},
    {tuple,
     {800,5},
     [{atom,{800,6},call},
      {var,{800,11},'N'},
      {call,
       {800,13},
       {atom,{800,13},lookup},
       [{var,{800,20},'L'},{var,{800,22},'Lbls'}]}]}]},
  {clause,
   {801,1},
   [{tuple,
     {801,14},
     [{atom,{801,15},call_last},
      {cons,
       {801,25},
       {tuple,{801,26},[{atom,{801,27},u},{var,{801,29},'N'}]},
       {cons,
        {801,32},
        {tuple,{801,32},[{atom,{801,33},f},{var,{801,35},'L'}]},
        {cons,
         {801,38},
         {tuple,{801,38},[{atom,{801,39},u},{var,{801,41},'U'}]},
         {nil,{801,43}}}}}]},
    {var,{801,46},'_'},
    {var,{801,48},'_'},
    {var,{801,50},'Lbls'}],
   [],
   [{debug_line,802,316},
    {tuple,
     {802,5},
     [{atom,{802,6},call_last},
      {var,{802,16},'N'},
      {call,
       {802,18},
       {atom,{802,18},lookup},
       [{var,{802,25},'L'},{var,{802,27},'Lbls'}]},
      {var,{802,33},'U'}]}]},
  {clause,
   {803,1},
   [{tuple,
     {803,14},
     [{atom,{803,15},call_only},
      {cons,
       {803,25},
       {tuple,{803,26},[{atom,{803,27},u},{var,{803,29},'N'}]},
       {cons,
        {803,32},
        {tuple,{803,32},[{atom,{803,33},f},{var,{803,35},'L'}]},
        {nil,{803,37}}}}]},
    {var,{803,40},'_'},
    {var,{803,42},'_'},
    {var,{803,44},'Lbls'}],
   [],
   [{debug_line,804,317},
    {tuple,
     {804,5},
     [{atom,{804,6},call_only},
      {var,{804,16},'N'},
      {call,
       {804,18},
       {atom,{804,18},lookup},
       [{var,{804,25},'L'},{var,{804,27},'Lbls'}]}]}]},
  {clause,
   {805,1},
   [{tuple,
     {805,14},
     [{atom,{805,15},call_ext},
      {cons,
       {805,24},
       {tuple,{805,25},[{atom,{805,26},u},{var,{805,28},'N'}]},
       {cons,
        {805,31},
        {tuple,{805,31},[{atom,{805,32},u},{var,{805,34},'MFAix'}]},
        {nil,{805,40}}}}]},
    {var,{805,43},'Imports'},
    {var,{805,51},'_'},
    {var,{805,53},'_'}],
   [],
   [{debug_line,806,318},
    {tuple,
     {806,5},
     [{atom,{806,6},call_ext},
      {var,{806,15},'N'},
      {call,
       {806,17},
       {atom,{806,17},lookup},
       [{block,0,
         [{op,{806,29},'+',{var,{806,24},'MFAix'},{integer,{806,30},1}}]},
        {var,{806,32},'Imports'}]}]}]},
  {clause,
   {807,1},
   [{tuple,
     {807,14},
     [{atom,{807,15},call_ext_last},
      {cons,
       {807,29},
       {tuple,{807,30},[{atom,{807,31},u},{var,{807,33},'N'}]},
       {cons,
        {807,36},
        {tuple,{807,36},[{atom,{807,37},u},{var,{807,39},'MFAix'}]},
        {cons,
         {807,46},
         {tuple,{807,46},[{atom,{807,47},u},{var,{807,49},'X'}]},
         {nil,{807,51}}}}}]},
    {var,{807,54},'Imports'},
    {var,{807,62},'_'},
    {var,{807,64},'_'}],
   [],
   [{debug_line,808,319},
    {tuple,
     {808,5},
     [{atom,{808,6},call_ext_last},
      {var,{808,20},'N'},
      {call,
       {808,22},
       {atom,{808,22},lookup},
       [{block,0,
         [{op,{808,34},'+',{var,{808,29},'MFAix'},{integer,{808,35},1}}]},
        {var,{808,37},'Imports'}]},
      {var,{808,46},'X'}]}]},
  {clause,
   {809,1},
   [{tuple,{809,14},[{atom,{809,15},bif0},{var,{809,20},'Args'}]},
    {var,{809,26},'Imports'},
    {var,{809,34},'_'},
    {var,{809,36},'_'}],
   [],
   [{debug_line,810,320},
    {match,
     {810,5},
     {cons,
      {810,5},
      {var,{810,6},'Bif'},
      {cons,{810,10},{var,{810,10},'Reg'},{nil,{810,13}}}},
     {call,{810,17},{atom,{810,17},resolve_args},[{var,{810,30},'Args'}]}},
    {debug_line,811,321},
    {match,
     {811,5},
     {tuple,
      {811,5},
      [{atom,{811,6},extfunc},
       {var,{811,14},'_Mod'},
       {var,{811,19},'BifName'},
       {var,{811,27},'_Arity'}]},
     {call,
      {811,37},
      {atom,{811,37},lookup},
      [{block,0,[{op,{811,47},'+',{var,{811,44},'Bif'},{integer,{811,48},1}}]},
       {var,{811,50},'Imports'}]}},
    {debug_line,812,322},
    {tuple,
     {812,5},
     [{atom,{812,6},bif},
      {var,{812,10},'BifName'},
      {atom,{812,18},nofail},
      {nil,{812,25}},
      {var,{812,28},'Reg'}]}]},
  {clause,
   {813,1},
   [{tuple,{813,14},[{atom,{813,15},bif1},{var,{813,20},'Args'}]},
    {var,{813,26},'Imports'},
    {var,{813,34},'_'},
    {var,{813,36},'_'}],
   [],
   [{debug_line,814,323},
    {match,
     {814,5},
     {cons,
      {814,5},
      {var,{814,6},'F'},
      {cons,
       {814,8},
       {var,{814,8},'Bif'},
       {cons,
        {814,12},
        {var,{814,12},'A1'},
        {cons,{814,15},{var,{814,15},'Reg'},{nil,{814,18}}}}}},
     {call,{814,22},{atom,{814,22},resolve_args},[{var,{814,35},'Args'}]}},
    {debug_line,815,324},
    {match,
     {815,5},
     {tuple,
      {815,5},
      [{atom,{815,6},extfunc},
       {var,{815,14},'_Mod'},
       {var,{815,19},'BifName'},
       {var,{815,27},'_Arity'}]},
     {call,
      {815,37},
      {atom,{815,37},lookup},
      [{block,0,[{op,{815,47},'+',{var,{815,44},'Bif'},{integer,{815,48},1}}]},
       {var,{815,50},'Imports'}]}},
    {debug_line,816,325},
    {tuple,
     {816,5},
     [{atom,{816,6},bif},
      {var,{816,10},'BifName'},
      {var,{816,18},'F'},
      {cons,{816,20},{var,{816,21},'A1'},{nil,{816,23}}},
      {var,{816,25},'Reg'}]}]},
  {clause,
   {817,1},
   [{tuple,{817,14},[{atom,{817,15},bif2},{var,{817,20},'Args'}]},
    {var,{817,26},'Imports'},
    {var,{817,34},'_'},
    {var,{817,36},'_'}],
   [],
   [{debug_line,818,326},
    {match,
     {818,5},
     {cons,
      {818,5},
      {var,{818,6},'F'},
      {cons,
       {818,8},
       {var,{818,8},'Bif'},
       {cons,
        {818,12},
        {var,{818,12},'A1'},
        {cons,
         {818,15},
         {var,{818,15},'A2'},
         {cons,{818,18},{var,{818,18},'Reg'},{nil,{818,21}}}}}}},
     {call,{818,25},{atom,{818,25},resolve_args},[{var,{818,38},'Args'}]}},
    {debug_line,819,327},
    {match,
     {819,5},
     {tuple,
      {819,5},
      [{atom,{819,6},extfunc},
       {var,{819,14},'_Mod'},
       {var,{819,19},'BifName'},
       {var,{819,27},'_Arity'}]},
     {call,
      {819,37},
      {atom,{819,37},lookup},
      [{block,0,[{op,{819,47},'+',{var,{819,44},'Bif'},{integer,{819,48},1}}]},
       {var,{819,50},'Imports'}]}},
    {debug_line,820,328},
    {tuple,
     {820,5},
     [{atom,{820,6},bif},
      {var,{820,10},'BifName'},
      {var,{820,18},'F'},
      {cons,
       {820,20},
       {var,{820,21},'A1'},
       {cons,{820,24},{var,{820,24},'A2'},{nil,{820,26}}}},
      {var,{820,28},'Reg'}]}]},
  {clause,
   {821,1},
   [{tuple,
     {821,14},
     [{atom,{821,15},allocate},
      {cons,
       {821,24},
       {tuple,{821,25},[{atom,{821,26},u},{var,{821,28},'X0'}]},
       {cons,
        {821,32},
        {tuple,{821,32},[{atom,{821,33},u},{var,{821,35},'X1'}]},
        {nil,{821,38}}}}]},
    {var,{821,41},'_'},
    {var,{821,43},'_'},
    {var,{821,45},'_'}],
   [],
   [{debug_line,822,329},
    {tuple,
     {822,5},
     [{atom,{822,6},allocate},{var,{822,15},'X0'},{var,{822,18},'X1'}]}]},
  {clause,
   {823,1},
   [{tuple,
     {823,14},
     [{atom,{823,15},allocate_heap},
      {cons,
       {823,29},
       {tuple,{823,30},[{atom,{823,31},u},{var,{823,33},'X0'}]},
       {cons,
        {823,37},
        {tuple,{823,37},[{atom,{823,38},u},{var,{823,40},'X1'}]},
        {cons,
         {823,44},
         {tuple,{823,44},[{atom,{823,45},u},{var,{823,47},'X2'}]},
         {nil,{823,50}}}}}]},
    {var,{823,53},'_'},
    {var,{823,55},'_'},
    {var,{823,57},'_'}],
   [],
   [{debug_line,824,330},
    {tuple,
     {824,5},
     [{atom,{824,6},allocate_heap},
      {var,{824,20},'X0'},
      {var,{824,23},'X1'},
      {var,{824,26},'X2'}]}]},
  {clause,
   {825,1},
   [{tuple,
     {825,14},
     [{atom,{825,15},allocate_zero},
      {cons,
       {825,29},
       {tuple,{825,30},[{atom,{825,31},u},{var,{825,33},'X0'}]},
       {cons,
        {825,37},
        {tuple,{825,37},[{atom,{825,38},u},{var,{825,40},'X1'}]},
        {nil,{825,43}}}}]},
    {var,{825,46},'_'},
    {var,{825,48},'_'},
    {var,{825,50},'_'}],
   [],
   [{debug_line,826,331},
    {tuple,
     {826,5},
     [{atom,{826,6},allocate_zero},{var,{826,20},'X0'},{var,{826,23},'X1'}]}]},
  {clause,
   {827,1},
   [{tuple,
     {827,14},
     [{atom,{827,15},allocate_heap_zero},
      {cons,
       {827,34},
       {tuple,{827,35},[{atom,{827,36},u},{var,{827,38},'X0'}]},
       {cons,
        {827,42},
        {tuple,{827,42},[{atom,{827,43},u},{var,{827,45},'X1'}]},
        {cons,
         {827,49},
         {tuple,{827,49},[{atom,{827,50},u},{var,{827,52},'X2'}]},
         {nil,{827,55}}}}}]},
    {var,{827,58},'_'},
    {var,{827,60},'_'},
    {var,{827,62},'_'}],
   [],
   [{debug_line,828,332},
    {tuple,
     {828,5},
     [{atom,{828,6},allocate_heap_zero},
      {var,{828,25},'X0'},
      {var,{828,28},'X1'},
      {var,{828,31},'X2'}]}]},
  {clause,
   {829,1},
   [{tuple,
     {829,14},
     [{atom,{829,15},test_heap},
      {cons,
       {829,25},
       {tuple,{829,26},[{atom,{829,27},u},{var,{829,29},'X0'}]},
       {cons,
        {829,33},
        {tuple,{829,33},[{atom,{829,34},u},{var,{829,36},'X1'}]},
        {nil,{829,39}}}}]},
    {var,{829,42},'_'},
    {var,{829,44},'_'},
    {var,{829,46},'_'}],
   [],
   [{debug_line,830,333},
    {tuple,
     {830,5},
     [{atom,{830,6},test_heap},{var,{830,16},'X0'},{var,{830,19},'X1'}]}]},
  {clause,
   {831,1},
   [{tuple,
     {831,14},
     [{atom,{831,15},init},
      {cons,{831,20},{var,{831,21},'Dst'},{nil,{831,24}}}]},
    {var,{831,27},'_'},
    {var,{831,29},'_'},
    {var,{831,31},'_'}],
   [],
   [{debug_line,832,334},
    {tuple,{832,5},[{atom,{832,6},init},{var,{832,11},'Dst'}]}]},
  {clause,
   {833,1},
   [{tuple,
     {833,14},
     [{atom,{833,15},deallocate},
      {cons,
       {833,26},
       {tuple,{833,27},[{atom,{833,28},u},{var,{833,30},'L'}]},
       {nil,{833,32}}}]},
    {var,{833,35},'_'},
    {var,{833,37},'_'},
    {var,{833,39},'_'}],
   [],
   [{debug_line,834,335},
    {tuple,{834,5},[{atom,{834,6},deallocate},{var,{834,17},'L'}]}]},
  {clause,
   {835,1},
   [{tuple,{835,14},[{atom,{835,15},return},{nil,{835,22}}]},
    {var,{835,26},'_'},
    {var,{835,28},'_'},
    {var,{835,30},'_'}],
   [],
   [{debug_line,836,336},{atom,{836,5},return}]},
  {clause,
   {837,1},
   [{tuple,{837,14},[{atom,{837,15},send},{nil,{837,20}}]},
    {var,{837,24},'_'},
    {var,{837,26},'_'},
    {var,{837,28},'_'}],
   [],
   [{debug_line,838,337},{atom,{838,5},send}]},
  {clause,
   {839,1},
   [{tuple,{839,14},[{atom,{839,15},remove_message},{nil,{839,30}}]},
    {var,{839,34},'_'},
    {var,{839,36},'_'},
    {var,{839,38},'_'}],
   [],
   [{debug_line,840,338},{atom,{840,5},remove_message}]},
  {clause,
   {841,1},
   [{tuple,{841,14},[{atom,{841,15},timeout},{nil,{841,23}}]},
    {var,{841,27},'_'},
    {var,{841,29},'_'},
    {var,{841,31},'_'}],
   [],
   [{debug_line,842,339},{atom,{842,5},timeout}]},
  {clause,
   {843,1},
   [{tuple,
     {843,14},
     [{atom,{843,15},loop_rec},
      {cons,
       {843,24},
       {var,{843,25},'Lbl'},
       {cons,{843,29},{var,{843,29},'Dst'},{nil,{843,32}}}}]},
    {var,{843,35},'_'},
    {var,{843,37},'_'},
    {var,{843,39},'_'}],
   [],
   [{debug_line,844,340},
    {tuple,
     {844,5},
     [{atom,{844,6},loop_rec},{var,{844,15},'Lbl'},{var,{844,19},'Dst'}]}]},
  {clause,
   {845,1},
   [{tuple,
     {845,14},
     [{atom,{845,15},loop_rec_end},
      {cons,{845,28},{var,{845,29},'Lbl'},{nil,{845,32}}}]},
    {var,{845,35},'_'},
    {var,{845,37},'_'},
    {var,{845,39},'_'}],
   [],
   [{debug_line,846,341},
    {tuple,{846,5},[{atom,{846,6},loop_rec_end},{var,{846,19},'Lbl'}]}]},
  {clause,
   {847,1},
   [{tuple,
     {847,14},
     [{atom,{847,15},wait},
      {cons,{847,20},{var,{847,21},'Lbl'},{nil,{847,24}}}]},
    {var,{847,27},'_'},
    {var,{847,29},'_'},
    {var,{847,31},'_'}],
   [],
   [{debug_line,848,342},
    {tuple,{848,5},[{atom,{848,6},wait},{var,{848,11},'Lbl'}]}]},
  {clause,
   {849,1},
   [{tuple,
     {849,14},
     [{atom,{849,15},wait_timeout},
      {cons,
       {849,28},
       {var,{849,29},'Lbl'},
       {cons,{849,33},{var,{849,33},'Int'},{nil,{849,36}}}}]},
    {var,{849,39},'_'},
    {var,{849,41},'_'},
    {var,{849,43},'_'}],
   [],
   [{debug_line,850,343},
    {tuple,
     {850,5},
     [{atom,{850,6},wait_timeout},
      {var,{850,19},'Lbl'},
      {call,{850,23},{atom,{850,23},resolve_arg},[{var,{850,35},'Int'}]}]}]},
  {clause,
   {851,1},
   [{tuple,
     {851,14},
     [{match,{851,15},{atom,{851,15},is_lt},{var,{851,21},'I'}},
      {var,{851,23},'Args0'}]},
    {var,{851,30},'_'},
    {var,{851,32},'_'},
    {var,{851,34},'_'}],
   [],
   [{debug_line,852,344},
    {match,
     {852,5},
     {cons,{852,5},{var,{852,6},'L'},{var,{852,8},'Args'}},
     {call,{852,16},{atom,{852,16},resolve_args},[{var,{852,29},'Args0'}]}},
    {debug_line,853,345},
    {tuple,
     {853,5},
     [{atom,{853,6},test},
      {var,{853,11},'I'},
      {var,{853,13},'L'},
      {var,{853,15},'Args'}]}]},
  {clause,
   {854,1},
   [{tuple,
     {854,14},
     [{match,{854,15},{atom,{854,15},is_ge},{var,{854,21},'I'}},
      {var,{854,23},'Args0'}]},
    {var,{854,30},'_'},
    {var,{854,32},'_'},
    {var,{854,34},'_'}],
   [],
   [{debug_line,855,346},
    {match,
     {855,5},
     {cons,{855,5},{var,{855,6},'L'},{var,{855,8},'Args'}},
     {call,{855,16},{atom,{855,16},resolve_args},[{var,{855,29},'Args0'}]}},
    {debug_line,856,347},
    {tuple,
     {856,5},
     [{atom,{856,6},test},
      {var,{856,11},'I'},
      {var,{856,13},'L'},
      {var,{856,15},'Args'}]}]},
  {clause,
   {857,1},
   [{tuple,
     {857,14},
     [{match,{857,15},{atom,{857,15},is_eq},{var,{857,21},'I'}},
      {var,{857,23},'Args0'}]},
    {var,{857,30},'_'},
    {var,{857,32},'_'},
    {var,{857,34},'_'}],
   [],
   [{debug_line,858,348},
    {match,
     {858,5},
     {cons,{858,5},{var,{858,6},'L'},{var,{858,8},'Args'}},
     {call,{858,16},{atom,{858,16},resolve_args},[{var,{858,29},'Args0'}]}},
    {debug_line,859,349},
    {tuple,
     {859,5},
     [{atom,{859,6},test},
      {var,{859,11},'I'},
      {var,{859,13},'L'},
      {var,{859,15},'Args'}]}]},
  {clause,
   {860,1},
   [{tuple,
     {860,14},
     [{match,{860,15},{atom,{860,15},is_ne},{var,{860,21},'I'}},
      {var,{860,23},'Args0'}]},
    {var,{860,30},'_'},
    {var,{860,32},'_'},
    {var,{860,34},'_'}],
   [],
   [{debug_line,861,350},
    {match,
     {861,5},
     {cons,{861,5},{var,{861,6},'L'},{var,{861,8},'Args'}},
     {call,{861,16},{atom,{861,16},resolve_args},[{var,{861,29},'Args0'}]}},
    {debug_line,862,351},
    {tuple,
     {862,5},
     [{atom,{862,6},test},
      {var,{862,11},'I'},
      {var,{862,13},'L'},
      {var,{862,15},'Args'}]}]},
  {clause,
   {863,1},
   [{tuple,
     {863,14},
     [{match,{863,15},{atom,{863,15},is_eq_exact},{var,{863,27},'I'}},
      {var,{863,29},'Args0'}]},
    {var,{863,36},'_'},
    {var,{863,38},'_'},
    {var,{863,40},'_'}],
   [],
   [{debug_line,864,352},
    {match,
     {864,5},
     {cons,{864,5},{var,{864,6},'L'},{var,{864,8},'Args'}},
     {call,{864,16},{atom,{864,16},resolve_args},[{var,{864,29},'Args0'}]}},
    {debug_line,865,353},
    {tuple,
     {865,5},
     [{atom,{865,6},test},
      {var,{865,11},'I'},
      {var,{865,13},'L'},
      {var,{865,15},'Args'}]}]},
  {clause,
   {866,1},
   [{tuple,
     {866,14},
     [{match,{866,15},{atom,{866,15},is_ne_exact},{var,{866,27},'I'}},
      {var,{866,29},'Args0'}]},
    {var,{866,36},'_'},
    {var,{866,38},'_'},
    {var,{866,40},'_'}],
   [],
   [{debug_line,867,354},
    {match,
     {867,5},
     {cons,{867,5},{var,{867,6},'L'},{var,{867,8},'Args'}},
     {call,{867,16},{atom,{867,16},resolve_args},[{var,{867,29},'Args0'}]}},
    {debug_line,868,355},
    {tuple,
     {868,5},
     [{atom,{868,6},test},
      {var,{868,11},'I'},
      {var,{868,13},'L'},
      {var,{868,15},'Args'}]}]},
  {clause,
   {869,1},
   [{tuple,
     {869,14},
     [{match,{869,15},{atom,{869,15},is_integer},{var,{869,26},'I'}},
      {var,{869,28},'Args0'}]},
    {var,{869,35},'_'},
    {var,{869,37},'_'},
    {var,{869,39},'_'}],
   [],
   [{debug_line,870,356},
    {match,
     {870,5},
     {cons,{870,5},{var,{870,6},'L'},{var,{870,8},'Args'}},
     {call,{870,16},{atom,{870,16},resolve_args},[{var,{870,29},'Args0'}]}},
    {debug_line,871,357},
    {tuple,
     {871,5},
     [{atom,{871,6},test},
      {var,{871,11},'I'},
      {var,{871,13},'L'},
      {var,{871,15},'Args'}]}]},
  {clause,
   {872,1},
   [{tuple,
     {872,14},
     [{match,{872,15},{atom,{872,15},is_float},{var,{872,24},'I'}},
      {var,{872,26},'Args0'}]},
    {var,{872,33},'_'},
    {var,{872,35},'_'},
    {var,{872,37},'_'}],
   [],
   [{debug_line,873,358},
    {match,
     {873,5},
     {cons,{873,5},{var,{873,6},'L'},{var,{873,8},'Args'}},
     {call,{873,16},{atom,{873,16},resolve_args},[{var,{873,29},'Args0'}]}},
    {debug_line,874,359},
    {tuple,
     {874,5},
     [{atom,{874,6},test},
      {var,{874,11},'I'},
      {var,{874,13},'L'},
      {var,{874,15},'Args'}]}]},
  {clause,
   {875,1},
   [{tuple,
     {875,14},
     [{match,{875,15},{atom,{875,15},is_number},{var,{875,25},'I'}},
      {var,{875,27},'Args0'}]},
    {var,{875,34},'_'},
    {var,{875,36},'_'},
    {var,{875,38},'_'}],
   [],
   [{debug_line,876,360},
    {match,
     {876,5},
     {cons,{876,5},{var,{876,6},'L'},{var,{876,8},'Args'}},
     {call,{876,16},{atom,{876,16},resolve_args},[{var,{876,29},'Args0'}]}},
    {debug_line,877,361},
    {tuple,
     {877,5},
     [{atom,{877,6},test},
      {var,{877,11},'I'},
      {var,{877,13},'L'},
      {var,{877,15},'Args'}]}]},
  {clause,
   {878,1},
   [{tuple,
     {878,14},
     [{match,{878,15},{atom,{878,15},is_atom},{var,{878,23},'I'}},
      {var,{878,25},'Args0'}]},
    {var,{878,32},'_'},
    {var,{878,34},'_'},
    {var,{878,36},'_'}],
   [],
   [{debug_line,879,362},
    {match,
     {879,5},
     {cons,{879,5},{var,{879,6},'L'},{var,{879,8},'Args'}},
     {call,{879,16},{atom,{879,16},resolve_args},[{var,{879,29},'Args0'}]}},
    {debug_line,880,363},
    {tuple,
     {880,5},
     [{atom,{880,6},test},
      {var,{880,11},'I'},
      {var,{880,13},'L'},
      {var,{880,15},'Args'}]}]},
  {clause,
   {881,1},
   [{tuple,
     {881,14},
     [{match,{881,15},{atom,{881,15},is_pid},{var,{881,22},'I'}},
      {var,{881,24},'Args0'}]},
    {var,{881,31},'_'},
    {var,{881,33},'_'},
    {var,{881,35},'_'}],
   [],
   [{debug_line,882,364},
    {match,
     {882,5},
     {cons,{882,5},{var,{882,6},'L'},{var,{882,8},'Args'}},
     {call,{882,16},{atom,{882,16},resolve_args},[{var,{882,29},'Args0'}]}},
    {debug_line,883,365},
    {tuple,
     {883,5},
     [{atom,{883,6},test},
      {var,{883,11},'I'},
      {var,{883,13},'L'},
      {var,{883,15},'Args'}]}]},
  {clause,
   {884,1},
   [{tuple,
     {884,14},
     [{match,{884,15},{atom,{884,15},is_reference},{var,{884,28},'I'}},
      {var,{884,30},'Args0'}]},
    {var,{884,37},'_'},
    {var,{884,39},'_'},
    {var,{884,41},'_'}],
   [],
   [{debug_line,885,366},
    {match,
     {885,5},
     {cons,{885,5},{var,{885,6},'L'},{var,{885,8},'Args'}},
     {call,{885,16},{atom,{885,16},resolve_args},[{var,{885,29},'Args0'}]}},
    {debug_line,886,367},
    {tuple,
     {886,5},
     [{atom,{886,6},test},
      {var,{886,11},'I'},
      {var,{886,13},'L'},
      {var,{886,15},'Args'}]}]},
  {clause,
   {887,1},
   [{tuple,
     {887,14},
     [{match,{887,15},{atom,{887,15},is_port},{var,{887,23},'I'}},
      {var,{887,25},'Args0'}]},
    {var,{887,32},'_'},
    {var,{887,34},'_'},
    {var,{887,36},'_'}],
   [],
   [{debug_line,888,368},
    {match,
     {888,5},
     {cons,{888,5},{var,{888,6},'L'},{var,{888,8},'Args'}},
     {call,{888,16},{atom,{888,16},resolve_args},[{var,{888,29},'Args0'}]}},
    {debug_line,889,369},
    {tuple,
     {889,5},
     [{atom,{889,6},test},
      {var,{889,11},'I'},
      {var,{889,13},'L'},
      {var,{889,15},'Args'}]}]},
  {clause,
   {890,1},
   [{tuple,
     {890,14},
     [{match,{890,15},{atom,{890,15},is_nil},{var,{890,22},'I'}},
      {var,{890,24},'Args0'}]},
    {var,{890,31},'_'},
    {var,{890,33},'_'},
    {var,{890,35},'_'}],
   [],
   [{debug_line,891,370},
    {match,
     {891,5},
     {cons,{891,5},{var,{891,6},'L'},{var,{891,8},'Args'}},
     {call,{891,16},{atom,{891,16},resolve_args},[{var,{891,29},'Args0'}]}},
    {debug_line,892,371},
    {tuple,
     {892,5},
     [{atom,{892,6},test},
      {var,{892,11},'I'},
      {var,{892,13},'L'},
      {var,{892,15},'Args'}]}]},
  {clause,
   {893,1},
   [{tuple,
     {893,14},
     [{match,{893,15},{atom,{893,15},is_binary},{var,{893,25},'I'}},
      {var,{893,27},'Args0'}]},
    {var,{893,34},'_'},
    {var,{893,36},'_'},
    {var,{893,38},'_'}],
   [],
   [{debug_line,894,372},
    {match,
     {894,5},
     {cons,{894,5},{var,{894,6},'L'},{var,{894,8},'Args'}},
     {call,{894,16},{atom,{894,16},resolve_args},[{var,{894,29},'Args0'}]}},
    {debug_line,895,373},
    {tuple,
     {895,5},
     [{atom,{895,6},test},
      {var,{895,11},'I'},
      {var,{895,13},'L'},
      {var,{895,15},'Args'}]}]},
  {clause,
   {896,1},
   [{tuple,
     {896,14},
     [{match,{896,15},{atom,{896,15},is_list},{var,{896,23},'I'}},
      {var,{896,25},'Args0'}]},
    {var,{896,32},'_'},
    {var,{896,34},'_'},
    {var,{896,36},'_'}],
   [],
   [{debug_line,897,374},
    {match,
     {897,5},
     {cons,{897,5},{var,{897,6},'L'},{var,{897,8},'Args'}},
     {call,{897,16},{atom,{897,16},resolve_args},[{var,{897,29},'Args0'}]}},
    {debug_line,898,375},
    {tuple,
     {898,5},
     [{atom,{898,6},test},
      {var,{898,11},'I'},
      {var,{898,13},'L'},
      {var,{898,15},'Args'}]}]},
  {clause,
   {899,1},
   [{tuple,
     {899,14},
     [{match,{899,15},{atom,{899,15},is_nonempty_list},{var,{899,32},'I'}},
      {var,{899,34},'Args0'}]},
    {var,{899,41},'_'},
    {var,{899,43},'_'},
    {var,{899,45},'_'}],
   [],
   [{debug_line,900,376},
    {match,
     {900,5},
     {cons,{900,5},{var,{900,6},'L'},{var,{900,8},'Args'}},
     {call,{900,16},{atom,{900,16},resolve_args},[{var,{900,29},'Args0'}]}},
    {debug_line,901,377},
    {tuple,
     {901,5},
     [{atom,{901,6},test},
      {var,{901,11},'I'},
      {var,{901,13},'L'},
      {var,{901,15},'Args'}]}]},
  {clause,
   {902,1},
   [{tuple,
     {902,14},
     [{match,{902,15},{atom,{902,15},is_tuple},{var,{902,24},'I'}},
      {var,{902,26},'Args0'}]},
    {var,{902,33},'_'},
    {var,{902,35},'_'},
    {var,{902,37},'_'}],
   [],
   [{debug_line,903,378},
    {match,
     {903,5},
     {cons,{903,5},{var,{903,6},'L'},{var,{903,8},'Args'}},
     {call,{903,16},{atom,{903,16},resolve_args},[{var,{903,29},'Args0'}]}},
    {debug_line,904,379},
    {tuple,
     {904,5},
     [{atom,{904,6},test},
      {var,{904,11},'I'},
      {var,{904,13},'L'},
      {var,{904,15},'Args'}]}]},
  {clause,
   {905,1},
   [{tuple,
     {905,14},
     [{match,{905,15},{atom,{905,15},test_arity},{var,{905,26},'I'}},
      {var,{905,28},'Args0'}]},
    {var,{905,35},'_'},
    {var,{905,37},'_'},
    {var,{905,39},'_'}],
   [],
   [{debug_line,906,380},
    {match,
     {906,5},
     {cons,{906,5},{var,{906,6},'L'},{var,{906,8},'Args'}},
     {call,{906,16},{atom,{906,16},resolve_args},[{var,{906,29},'Args0'}]}},
    {debug_line,907,381},
    {tuple,
     {907,5},
     [{atom,{907,6},test},
      {var,{907,11},'I'},
      {var,{907,13},'L'},
      {var,{907,15},'Args'}]}]},
  {clause,
   {908,1},
   [{tuple,
     {908,14},
     [{match,{908,15},{atom,{908,15},is_tagged_tuple},{var,{908,31},'I'}},
      {var,{908,33},'Args0'}]},
    {var,{908,40},'_'},
    {var,{908,42},'_'},
    {var,{908,44},'_'}],
   [],
   [{debug_line,909,382},
    {match,
     {909,5},
     {cons,{909,5},{var,{909,6},'F'},{var,{909,8},'Args'}},
     {call,{909,16},{atom,{909,16},resolve_args},[{var,{909,29},'Args0'}]}},
    {debug_line,910,383},
    {tuple,
     {910,5},
     [{atom,{910,6},test},
      {var,{910,11},'I'},
      {var,{910,13},'F'},
      {var,{910,15},'Args'}]}]},
  {clause,
   {911,1},
   [{tuple,{911,14},[{atom,{911,15},select_val},{var,{911,26},'Args'}]},
    {var,{911,32},'_'},
    {var,{911,34},'_'},
    {var,{911,36},'_'}],
   [],
   [{debug_line,912,384},
    {match,
     {912,5},
     {cons,
      {912,5},
      {var,{912,6},'Reg'},
      {cons,
       {912,10},
       {var,{912,10},'FLbl'},
       {cons,
        {912,15},
        {tuple,
         {912,15},
         [{tuple,{912,16},[{atom,{912,17},z},{integer,{912,19},1}]},
          {tuple,{912,22},[{atom,{912,23},u},{var,{912,25},'_Len'}]},
          {var,{912,31},'List0'}]},
        {nil,{912,37}}}}},
     {var,{912,41},'Args'}},
    {debug_line,913,385},
    {match,
     {913,5},
     {var,{913,5},'List'},
     {call,{913,12},{atom,{913,12},resolve_args},[{var,{913,25},'List0'}]}},
    {debug_line,914,386},
    {tuple,
     {914,5},
     [{atom,{914,6},select_val},
      {var,{914,17},'Reg'},
      {var,{914,21},'FLbl'},
      {tuple,{914,26},[{atom,{914,27},list},{var,{914,32},'List'}]}]}]},
  {clause,
   {915,1},
   [{tuple,
     {915,14},
     [{atom,{915,15},select_tuple_arity},{var,{915,34},'Args'}]},
    {var,{915,40},'_'},
    {var,{915,42},'_'},
    {var,{915,44},'_'}],
   [],
   [{debug_line,916,387},
    {match,
     {916,5},
     {cons,
      {916,5},
      {var,{916,6},'Reg'},
      {cons,
       {916,10},
       {var,{916,10},'FLbl'},
       {cons,
        {916,15},
        {tuple,
         {916,15},
         [{tuple,{916,16},[{atom,{916,17},z},{integer,{916,19},1}]},
          {tuple,{916,22},[{atom,{916,23},u},{var,{916,25},'_Len'}]},
          {var,{916,31},'List0'}]},
        {nil,{916,37}}}}},
     {var,{916,41},'Args'}},
    {debug_line,917,388},
    {match,
     {917,5},
     {var,{917,5},'List'},
     {call,{917,12},{atom,{917,12},resolve_args},[{var,{917,25},'List0'}]}},
    {debug_line,918,389},
    {tuple,
     {918,5},
     [{atom,{918,6},select_tuple_arity},
      {var,{918,25},'Reg'},
      {var,{918,29},'FLbl'},
      {tuple,{918,34},[{atom,{918,35},list},{var,{918,40},'List'}]}]}]},
  {clause,
   {919,1},
   [{tuple,
     {919,14},
     [{atom,{919,15},jump},
      {cons,{919,20},{var,{919,21},'Lbl'},{nil,{919,24}}}]},
    {var,{919,27},'_'},
    {var,{919,29},'_'},
    {var,{919,31},'_'}],
   [],
   [{debug_line,920,390},
    {tuple,{920,5},[{atom,{920,6},jump},{var,{920,11},'Lbl'}]}]},
  {clause,
   {921,1},
   [{tuple,
     {921,14},
     [{atom,{921,15},'catch'},
      {cons,
       {921,23},
       {var,{921,24},'Dst'},
       {cons,{921,28},{var,{921,28},'Lbl'},{nil,{921,31}}}}]},
    {var,{921,34},'_'},
    {var,{921,36},'_'},
    {var,{921,38},'_'}],
   [],
   [{debug_line,922,391},
    {tuple,
     {922,5},
     [{atom,{922,6},'catch'},{var,{922,14},'Dst'},{var,{922,18},'Lbl'}]}]},
  {clause,
   {923,1},
   [{tuple,
     {923,14},
     [{atom,{923,15},catch_end},
      {cons,{923,25},{var,{923,26},'Dst'},{nil,{923,29}}}]},
    {var,{923,32},'_'},
    {var,{923,34},'_'},
    {var,{923,36},'_'}],
   [],
   [{debug_line,924,392},
    {tuple,{924,5},[{atom,{924,6},catch_end},{var,{924,16},'Dst'}]}]},
  {clause,
   {925,1},
   [{tuple,
     {925,14},
     [{atom,{925,15},move},
      {cons,
       {925,20},
       {var,{925,21},'Src'},
       {cons,{925,25},{var,{925,25},'Dst'},{nil,{925,28}}}}]},
    {var,{925,31},'_'},
    {var,{925,33},'_'},
    {var,{925,35},'_'}],
   [],
   [{debug_line,926,393},
    {tuple,
     {926,5},
     [{atom,{926,6},move},
      {call,{926,11},{atom,{926,11},resolve_arg},[{var,{926,23},'Src'}]},
      {var,{926,28},'Dst'}]}]},
  {clause,
   {927,1},
   [{tuple,
     {927,14},
     [{atom,{927,15},get_list},
      {cons,
       {927,24},
       {var,{927,25},'Src'},
       {cons,
        {927,29},
        {var,{927,29},'Dst1'},
        {cons,{927,34},{var,{927,34},'Dst2'},{nil,{927,38}}}}}]},
    {var,{927,41},'_'},
    {var,{927,43},'_'},
    {var,{927,45},'_'}],
   [],
   [{debug_line,928,394},
    {tuple,
     {928,5},
     [{atom,{928,6},get_list},
      {var,{928,15},'Src'},
      {var,{928,19},'Dst1'},
      {var,{928,24},'Dst2'}]}]},
  {clause,
   {929,1},
   [{tuple,
     {929,14},
     [{atom,{929,15},get_tuple_element},
      {cons,
       {929,33},
       {var,{929,34},'Src'},
       {cons,
        {929,38},
        {tuple,{929,38},[{atom,{929,39},u},{var,{929,41},'Off'}]},
        {cons,{929,46},{var,{929,46},'Dst'},{nil,{929,49}}}}}]},
    {var,{929,52},'_'},
    {var,{929,54},'_'},
    {var,{929,56},'_'}],
   [],
   [{debug_line,930,395},
    {tuple,
     {930,5},
     [{atom,{930,6},get_tuple_element},
      {call,{930,24},{atom,{930,24},resolve_arg},[{var,{930,36},'Src'}]},
      {var,{930,41},'Off'},
      {call,{930,45},{atom,{930,45},resolve_arg},[{var,{930,57},'Dst'}]}]}]},
  {clause,
   {931,1},
   [{tuple,
     {931,14},
     [{atom,{931,15},set_tuple_element},
      {cons,
       {931,33},
       {var,{931,34},'Src'},
       {cons,
        {931,38},
        {var,{931,38},'Dst'},
        {cons,
         {931,42},
         {tuple,{931,42},[{atom,{931,43},u},{var,{931,45},'Off'}]},
         {nil,{931,49}}}}}]},
    {var,{931,52},'_'},
    {var,{931,54},'_'},
    {var,{931,56},'_'}],
   [],
   [{debug_line,932,396},
    {tuple,
     {932,5},
     [{atom,{932,6},set_tuple_element},
      {call,{932,24},{atom,{932,24},resolve_arg},[{var,{932,36},'Src'}]},
      {call,{932,41},{atom,{932,41},resolve_arg},[{var,{932,53},'Dst'}]},
      {var,{932,58},'Off'}]}]},
  {clause,
   {933,1},
   [{tuple,
     {933,14},
     [{atom,{933,15},put_list},
      {cons,
       {933,24},
       {var,{933,25},'Src1'},
       {cons,
        {933,30},
        {var,{933,30},'Src2'},
        {cons,{933,35},{var,{933,35},'Dst'},{nil,{933,38}}}}}]},
    {var,{933,41},'_'},
    {var,{933,43},'_'},
    {var,{933,45},'_'}],
   [],
   [{debug_line,934,397},
    {tuple,
     {934,5},
     [{atom,{934,6},put_list},
      {call,{934,15},{atom,{934,15},resolve_arg},[{var,{934,27},'Src1'}]},
      {call,{934,33},{atom,{934,33},resolve_arg},[{var,{934,45},'Src2'}]},
      {var,{934,51},'Dst'}]}]},
  {clause,
   {935,1},
   [{tuple,
     {935,14},
     [{atom,{935,15},put_tuple},
      {cons,
       {935,25},
       {tuple,{935,26},[{atom,{935,27},u},{var,{935,29},'Arity'}]},
       {cons,{935,36},{var,{935,36},'Dst'},{nil,{935,39}}}}]},
    {var,{935,42},'_'},
    {var,{935,44},'_'},
    {var,{935,46},'_'}],
   [],
   [{debug_line,936,398},
    {tuple,
     {936,5},
     [{atom,{936,6},put_tuple},{var,{936,16},'Arity'},{var,{936,22},'Dst'}]}]},
  {clause,
   {937,1},
   [{tuple,
     {937,14},
     [{atom,{937,15},put},
      {cons,{937,19},{var,{937,20},'Src'},{nil,{937,23}}}]},
    {var,{937,26},'_'},
    {var,{937,28},'_'},
    {var,{937,30},'_'}],
   [],
   [{debug_line,938,399},
    {tuple,
     {938,5},
     [{atom,{938,6},put},
      {call,{938,10},{atom,{938,10},resolve_arg},[{var,{938,22},'Src'}]}]}]},
  {clause,
   {939,1},
   [{tuple,
     {939,14},
     [{atom,{939,15},badmatch},
      {cons,{939,24},{var,{939,25},'X'},{nil,{939,26}}}]},
    {var,{939,29},'_'},
    {var,{939,31},'_'},
    {var,{939,33},'_'}],
   [],
   [{debug_line,940,400},
    {tuple,
     {940,5},
     [{atom,{940,6},badmatch},
      {call,{940,15},{atom,{940,15},resolve_arg},[{var,{940,27},'X'}]}]}]},
  {clause,
   {941,1},
   [{tuple,{941,14},[{atom,{941,15},if_end},{nil,{941,22}}]},
    {var,{941,26},'_'},
    {var,{941,28},'_'},
    {var,{941,30},'_'}],
   [],
   [{debug_line,942,401},{atom,{942,5},if_end}]},
  {clause,
   {943,1},
   [{tuple,
     {943,14},
     [{atom,{943,15},case_end},
      {cons,{943,24},{var,{943,25},'X'},{nil,{943,26}}}]},
    {var,{943,29},'_'},
    {var,{943,31},'_'},
    {var,{943,33},'_'}],
   [],
   [{debug_line,944,402},
    {tuple,
     {944,5},
     [{atom,{944,6},case_end},
      {call,{944,15},{atom,{944,15},resolve_arg},[{var,{944,27},'X'}]}]}]},
  {clause,
   {945,1},
   [{tuple,
     {945,14},
     [{atom,{945,15},call_fun},
      {cons,
       {945,24},
       {tuple,{945,25},[{atom,{945,26},u},{var,{945,28},'N'}]},
       {nil,{945,30}}}]},
    {var,{945,33},'_'},
    {var,{945,35},'_'},
    {var,{945,37},'_'}],
   [],
   [{debug_line,946,403},
    {tuple,{946,5},[{atom,{946,6},call_fun},{var,{946,15},'N'}]}]},
  {clause,
   {947,1},
   [{tuple,
     {947,14},
     [{match,{947,15},{atom,{947,15},is_function},{var,{947,27},'I'}},
      {var,{947,29},'Args0'}]},
    {var,{947,36},'_'},
    {var,{947,38},'_'},
    {var,{947,40},'_'}],
   [],
   [{debug_line,948,404},
    {match,
     {948,5},
     {cons,{948,5},{var,{948,6},'L'},{var,{948,8},'Args'}},
     {call,{948,16},{atom,{948,16},resolve_args},[{var,{948,29},'Args0'}]}},
    {debug_line,949,405},
    {tuple,
     {949,5},
     [{atom,{949,6},test},
      {var,{949,11},'I'},
      {var,{949,13},'L'},
      {var,{949,15},'Args'}]}]},
  {clause,
   {950,1},
   [{tuple,
     {950,14},
     [{atom,{950,15},call_ext_only},
      {cons,
       {950,29},
       {tuple,{950,30},[{atom,{950,31},u},{var,{950,33},'N'}]},
       {cons,
        {950,36},
        {tuple,{950,36},[{atom,{950,37},u},{var,{950,39},'MFAix'}]},
        {nil,{950,45}}}}]},
    {var,{950,48},'Imports'},
    {var,{950,56},'_'},
    {var,{950,58},'_'}],
   [],
   [{debug_line,951,406},
    {tuple,
     {951,5},
     [{atom,{951,6},call_ext_only},
      {var,{951,20},'N'},
      {call,
       {951,22},
       {atom,{951,22},lookup},
       [{block,0,
         [{op,{951,34},'+',{var,{951,29},'MFAix'},{integer,{951,35},1}}]},
        {var,{951,37},'Imports'}]}]}]},
  {clause,
   {955,1},
   [{tuple,
     {955,14},
     [{atom,{955,15},bs_put_integer},
      {cons,
       {955,30},
       {var,{955,31},'Lbl'},
       {cons,
        {955,35},
        {var,{955,35},'Arg2'},
        {cons,
         {955,40},
         {tuple,{955,40},[{atom,{955,41},u},{var,{955,43},'N'}]},
         {cons,
          {955,46},
          {tuple,{955,46},[{atom,{955,47},u},{var,{955,49},'U'}]},
          {cons,{955,52},{var,{955,52},'Arg5'},{nil,{955,56}}}}}}}]},
    {var,{955,59},'_'},
    {var,{955,61},'_'},
    {var,{955,63},'_'}],
   [],
   [{debug_line,956,407},
    {match,
     {956,5},
     {cons,
      {956,5},
      {var,{956,6},'A2'},
      {cons,{956,9},{var,{956,9},'A5'},{nil,{956,11}}}},
     {call,
      {956,15},
      {atom,{956,15},resolve_args},
      [{block,0,
        [{cons,
          {956,28},
          {var,{956,29},'Arg2'},
          {cons,{956,34},{var,{956,34},'Arg5'},{nil,{956,38}}}}]}]}},
    {debug_line,957,408},
    {tuple,
     {957,5},
     [{atom,{957,6},bs_put_integer},
      {var,{957,21},'Lbl'},
      {var,{957,25},'A2'},
      {var,{957,28},'N'},
      {call,{957,30},{atom,{957,30},decode_field_flags},[{var,{957,49},'U'}]},
      {var,{957,52},'A5'}]}]},
  {clause,
   {958,1},
   [{tuple,
     {958,14},
     [{atom,{958,15},bs_put_binary},
      {cons,
       {958,29},
       {var,{958,30},'Lbl'},
       {cons,
        {958,34},
        {var,{958,34},'Arg2'},
        {cons,
         {958,39},
         {tuple,{958,39},[{atom,{958,40},u},{var,{958,42},'N'}]},
         {cons,
          {958,45},
          {tuple,{958,45},[{atom,{958,46},u},{var,{958,48},'U'}]},
          {cons,{958,51},{var,{958,51},'Arg5'},{nil,{958,55}}}}}}}]},
    {var,{958,58},'_'},
    {var,{958,60},'_'},
    {var,{958,62},'_'}],
   [],
   [{debug_line,959,409},
    {match,
     {959,5},
     {cons,
      {959,5},
      {var,{959,6},'A2'},
      {cons,{959,9},{var,{959,9},'A5'},{nil,{959,11}}}},
     {call,
      {959,15},
      {atom,{959,15},resolve_args},
      [{block,0,
        [{cons,
          {959,28},
          {var,{959,29},'Arg2'},
          {cons,{959,34},{var,{959,34},'Arg5'},{nil,{959,38}}}}]}]}},
    {debug_line,960,410},
    {tuple,
     {960,5},
     [{atom,{960,6},bs_put_binary},
      {var,{960,20},'Lbl'},
      {var,{960,24},'A2'},
      {var,{960,27},'N'},
      {call,{960,29},{atom,{960,29},decode_field_flags},[{var,{960,48},'U'}]},
      {var,{960,51},'A5'}]}]},
  {clause,
   {961,1},
   [{tuple,
     {961,14},
     [{atom,{961,15},bs_put_float},
      {cons,
       {961,28},
       {var,{961,29},'Lbl'},
       {cons,
        {961,33},
        {var,{961,33},'Arg2'},
        {cons,
         {961,38},
         {tuple,{961,38},[{atom,{961,39},u},{var,{961,41},'N'}]},
         {cons,
          {961,44},
          {tuple,{961,44},[{atom,{961,45},u},{var,{961,47},'U'}]},
          {cons,{961,50},{var,{961,50},'Arg5'},{nil,{961,54}}}}}}}]},
    {var,{961,57},'_'},
    {var,{961,59},'_'},
    {var,{961,61},'_'}],
   [],
   [{debug_line,962,411},
    {match,
     {962,5},
     {cons,
      {962,5},
      {var,{962,6},'A2'},
      {cons,{962,9},{var,{962,9},'A5'},{nil,{962,11}}}},
     {call,
      {962,15},
      {atom,{962,15},resolve_args},
      [{block,0,
        [{cons,
          {962,28},
          {var,{962,29},'Arg2'},
          {cons,{962,34},{var,{962,34},'Arg5'},{nil,{962,38}}}}]}]}},
    {debug_line,963,412},
    {tuple,
     {963,5},
     [{atom,{963,6},bs_put_float},
      {var,{963,19},'Lbl'},
      {var,{963,23},'A2'},
      {var,{963,26},'N'},
      {call,{963,28},{atom,{963,28},decode_field_flags},[{var,{963,47},'U'}]},
      {var,{963,50},'A5'}]}]},
  {clause,
   {964,1},
   [{tuple,
     {964,14},
     [{atom,{964,15},bs_put_string},
      {cons,
       {964,29},
       {tuple,{964,30},[{atom,{964,31},u},{var,{964,33},'Len'}]},
       {cons,
        {964,38},
        {tuple,{964,38},[{atom,{964,39},u},{var,{964,41},'Off'}]},
        {nil,{964,45}}}}]},
    {var,{964,48},'_'},
    {var,{964,50},'Strings'},
    {var,{964,58},'_'}],
   [],
   [{debug_line,965,413},
    {match,
     {965,5},
     {var,{965,5},'String'},
     {'if',
      {965,14},
      [{clause,
        {965,17},
        [],
        [[{op,{965,21},'>',{var,{965,17},'Len'},{integer,{965,23},0}}]],
        [{call,
          {965,28},
          {remote,
           {965,28},
           {atom,{965,28},erlang},
           {atom,{965,28},binary_to_list}},
          [{var,{965,43},'Strings'},
           {block,0,
            [{op,{965,55},'+',{var,{965,52},'Off'},{integer,{965,56},1}}]},
           {block,0,
            [{op,{965,62},'+',{var,{965,59},'Off'},{var,{965,63},'Len'}}]}]}]},
       {clause,
        {966,3},
        [],
        [[{atom,{966,3},true}]],
        [{debug_line,966,414},{string,{966,11},[]}]}]}},
    {debug_line,968,415},
    {tuple,
     {968,5},
     [{atom,{968,6},bs_put_string},
      {var,{968,20},'Len'},
      {tuple,{968,24},[{atom,{968,25},string},{var,{968,32},'String'}]}]}]},
  {clause,
   {973,1},
   [{tuple,{973,14},[{atom,{973,15},fclearerror},{nil,{973,27}}]},
    {var,{973,31},'_'},
    {var,{973,33},'_'},
    {var,{973,35},'_'}],
   [],
   [{debug_line,974,416},{atom,{974,5},fclearerror}]},
  {clause,
   {975,1},
   [{tuple,
     {975,14},
     [{atom,{975,15},fcheckerror},
      {cons,{975,27},{var,{975,28},'Arg'},{nil,{975,31}}}]},
    {var,{975,34},'_'},
    {var,{975,36},'_'},
    {var,{975,38},'_'}],
   [],
   [{debug_line,976,417},
    {tuple,
     {976,5},
     [{atom,{976,6},fcheckerror},
      {call,{976,18},{atom,{976,18},resolve_arg},[{var,{976,30},'Arg'}]}]}]},
  {clause,
   {977,1},
   [{tuple,{977,14},[{atom,{977,15},fmove},{var,{977,21},'Args'}]},
    {var,{977,27},'_'},
    {var,{977,29},'_'},
    {var,{977,31},'_'}],
   [],
   [{debug_line,978,418},
    {match,
     {978,5},
     {cons,
      {978,5},
      {var,{978,6},'FR'},
      {cons,{978,9},{var,{978,9},'Reg'},{nil,{978,12}}}},
     {call,{978,16},{atom,{978,16},resolve_args},[{var,{978,29},'Args'}]}},
    {debug_line,979,419},
    {tuple,
     {979,5},
     [{atom,{979,6},fmove},{var,{979,12},'FR'},{var,{979,15},'Reg'}]}]},
  {clause,
   {980,1},
   [{tuple,{980,14},[{atom,{980,15},fconv},{var,{980,21},'Args'}]},
    {var,{980,27},'_'},
    {var,{980,29},'_'},
    {var,{980,31},'_'}],
   [],
   [{debug_line,981,420},
    {match,
     {981,5},
     {cons,
      {981,5},
      {var,{981,6},'Reg'},
      {cons,{981,10},{var,{981,10},'FR'},{nil,{981,12}}}},
     {call,{981,16},{atom,{981,16},resolve_args},[{var,{981,29},'Args'}]}},
    {debug_line,982,421},
    {tuple,
     {982,5},
     [{atom,{982,6},fconv},{var,{982,12},'Reg'},{var,{982,16},'FR'}]}]},
  {clause,
   {983,1},
   [{tuple,
     {983,14},
     [{match,{983,15},{atom,{983,15},fadd},{var,{983,20},'I'}},
      {var,{983,22},'Args'}]},
    {var,{983,28},'_'},
    {var,{983,30},'_'},
    {var,{983,32},'_'}],
   [],
   [{debug_line,984,422},
    {match,
     {984,5},
     {cons,
      {984,5},
      {var,{984,6},'F'},
      {cons,
       {984,8},
       {var,{984,8},'A1'},
       {cons,
        {984,11},
        {var,{984,11},'A2'},
        {cons,{984,14},{var,{984,14},'Reg'},{nil,{984,17}}}}}},
     {call,{984,21},{atom,{984,21},resolve_args},[{var,{984,34},'Args'}]}},
    {debug_line,985,423},
    {tuple,
     {985,5},
     [{atom,{985,6},bif},
      {var,{985,10},'I'},
      {var,{985,12},'F'},
      {cons,
       {985,14},
       {var,{985,15},'A1'},
       {cons,{985,18},{var,{985,18},'A2'},{nil,{985,20}}}},
      {var,{985,22},'Reg'}]}]},
  {clause,
   {986,1},
   [{tuple,
     {986,14},
     [{match,{986,15},{atom,{986,15},fsub},{var,{986,20},'I'}},
      {var,{986,22},'Args'}]},
    {var,{986,28},'_'},
    {var,{986,30},'_'},
    {var,{986,32},'_'}],
   [],
   [{debug_line,987,424},
    {match,
     {987,5},
     {cons,
      {987,5},
      {var,{987,6},'F'},
      {cons,
       {987,8},
       {var,{987,8},'A1'},
       {cons,
        {987,11},
        {var,{987,11},'A2'},
        {cons,{987,14},{var,{987,14},'Reg'},{nil,{987,17}}}}}},
     {call,{987,21},{atom,{987,21},resolve_args},[{var,{987,34},'Args'}]}},
    {debug_line,988,425},
    {tuple,
     {988,5},
     [{atom,{988,6},bif},
      {var,{988,10},'I'},
      {var,{988,12},'F'},
      {cons,
       {988,14},
       {var,{988,15},'A1'},
       {cons,{988,18},{var,{988,18},'A2'},{nil,{988,20}}}},
      {var,{988,22},'Reg'}]}]},
  {clause,
   {989,1},
   [{tuple,
     {989,14},
     [{match,{989,15},{atom,{989,15},fmul},{var,{989,20},'I'}},
      {var,{989,22},'Args'}]},
    {var,{989,28},'_'},
    {var,{989,30},'_'},
    {var,{989,32},'_'}],
   [],
   [{debug_line,990,426},
    {match,
     {990,5},
     {cons,
      {990,5},
      {var,{990,6},'F'},
      {cons,
       {990,8},
       {var,{990,8},'A1'},
       {cons,
        {990,11},
        {var,{990,11},'A2'},
        {cons,{990,14},{var,{990,14},'Reg'},{nil,{990,17}}}}}},
     {call,{990,21},{atom,{990,21},resolve_args},[{var,{990,34},'Args'}]}},
    {debug_line,991,427},
    {tuple,
     {991,5},
     [{atom,{991,6},bif},
      {var,{991,10},'I'},
      {var,{991,12},'F'},
      {cons,
       {991,14},
       {var,{991,15},'A1'},
       {cons,{991,18},{var,{991,18},'A2'},{nil,{991,20}}}},
      {var,{991,22},'Reg'}]}]},
  {clause,
   {992,1},
   [{tuple,
     {992,14},
     [{match,{992,15},{atom,{992,15},fdiv},{var,{992,20},'I'}},
      {var,{992,22},'Args'}]},
    {var,{992,28},'_'},
    {var,{992,30},'_'},
    {var,{992,32},'_'}],
   [],
   [{debug_line,993,428},
    {match,
     {993,5},
     {cons,
      {993,5},
      {var,{993,6},'F'},
      {cons,
       {993,8},
       {var,{993,8},'A1'},
       {cons,
        {993,11},
        {var,{993,11},'A2'},
        {cons,{993,14},{var,{993,14},'Reg'},{nil,{993,17}}}}}},
     {call,{993,21},{atom,{993,21},resolve_args},[{var,{993,34},'Args'}]}},
    {debug_line,994,429},
    {tuple,
     {994,5},
     [{atom,{994,6},bif},
      {var,{994,10},'I'},
      {var,{994,12},'F'},
      {cons,
       {994,14},
       {var,{994,15},'A1'},
       {cons,{994,18},{var,{994,18},'A2'},{nil,{994,20}}}},
      {var,{994,22},'Reg'}]}]},
  {clause,
   {995,1},
   [{tuple,{995,14},[{atom,{995,15},fnegate},{var,{995,23},'Args'}]},
    {var,{995,29},'_'},
    {var,{995,31},'_'},
    {var,{995,33},'_'}],
   [],
   [{debug_line,996,430},
    {match,
     {996,5},
     {cons,
      {996,5},
      {var,{996,6},'F'},
      {cons,
       {996,8},
       {var,{996,8},'Arg'},
       {cons,{996,12},{var,{996,12},'Reg'},{nil,{996,15}}}}},
     {call,{996,19},{atom,{996,19},resolve_args},[{var,{996,32},'Args'}]}},
    {debug_line,997,431},
    {tuple,
     {997,5},
     [{atom,{997,6},bif},
      {atom,{997,10},fnegate},
      {var,{997,18},'F'},
      {cons,{997,20},{var,{997,21},'Arg'},{nil,{997,24}}},
      {var,{997,26},'Reg'}]}]},
  {clause,
   {1002,1},
   [{tuple,
     {1002,14},
     [{atom,{1002,15},'try'},
      {cons,
       {1002,21},
       {var,{1002,22},'Reg'},
       {cons,{1002,26},{var,{1002,26},'Lbl'},{nil,{1002,29}}}}]},
    {var,{1002,32},'_'},
    {var,{1002,34},'_'},
    {var,{1002,36},'_'}],
   [],
   [{debug_line,1003,432},
    {tuple,
     {1003,5},
     [{atom,{1003,6},'try'},{var,{1003,12},'Reg'},{var,{1003,16},'Lbl'}]}]},
  {clause,
   {1004,1},
   [{tuple,
     {1004,14},
     [{atom,{1004,15},try_end},
      {cons,{1004,23},{var,{1004,24},'Reg'},{nil,{1004,27}}}]},
    {var,{1004,30},'_'},
    {var,{1004,32},'_'},
    {var,{1004,34},'_'}],
   [],
   [{debug_line,1005,433},
    {tuple,{1005,5},[{atom,{1005,6},try_end},{var,{1005,14},'Reg'}]}]},
  {clause,
   {1006,1},
   [{tuple,
     {1006,14},
     [{atom,{1006,15},try_case},
      {cons,{1006,24},{var,{1006,25},'Reg'},{nil,{1006,28}}}]},
    {var,{1006,31},'_'},
    {var,{1006,33},'_'},
    {var,{1006,35},'_'}],
   [],
   [{debug_line,1007,434},
    {tuple,{1007,5},[{atom,{1007,6},try_case},{var,{1007,15},'Reg'}]}]},
  {clause,
   {1008,1},
   [{tuple,
     {1008,14},
     [{atom,{1008,15},try_case_end},
      {cons,{1008,28},{var,{1008,29},'Arg'},{nil,{1008,32}}}]},
    {var,{1008,35},'_'},
    {var,{1008,37},'_'},
    {var,{1008,39},'_'}],
   [],
   [{debug_line,1009,435},
    {tuple,
     {1009,5},
     [{atom,{1009,6},try_case_end},
      {call,
       {1009,19},
       {atom,{1009,19},resolve_arg},
       [{var,{1009,31},'Arg'}]}]}]},
  {clause,
   {1010,1},
   [{tuple,
     {1010,14},
     [{atom,{1010,15},raise},
      {match,
       {1010,21},
       {cons,
        {1010,21},
        {var,{1010,22},'_Reg1'},
        {cons,{1010,28},{var,{1010,28},'_Reg2'},{nil,{1010,33}}}},
       {var,{1010,35},'Regs'}}]},
    {var,{1010,41},'_'},
    {var,{1010,43},'_'},
    {var,{1010,45},'_'}],
   [],
   [{debug_line,1011,436},
    {tuple,
     {1011,5},
     [{atom,{1011,6},bif},
      {atom,{1011,10},raise},
      {tuple,{1011,16},[{atom,{1011,17},f},{integer,{1011,19},0}]},
      {var,{1011,22},'Regs'},
      {tuple,{1011,27},[{atom,{1011,28},x},{integer,{1011,30},0}]}]}]},
  {clause,
   {1016,1},
   [{tuple,
     {1016,14},
     [{atom,{1016,15},bs_init2},
      {cons,
       {1016,24},
       {var,{1016,25},'Lbl'},
       {cons,
        {1016,29},
        {var,{1016,29},'Arg2'},
        {cons,
         {1016,34},
         {tuple,{1016,34},[{atom,{1016,35},u},{var,{1016,37},'W'}]},
         {cons,
          {1016,40},
          {tuple,{1016,40},[{atom,{1016,41},u},{var,{1016,43},'R'}]},
          {cons,
           {1016,46},
           {tuple,{1016,46},[{atom,{1016,47},u},{var,{1016,49},'F'}]},
           {cons,{1016,52},{var,{1016,52},'Arg6'},{nil,{1016,56}}}}}}}}]},
    {var,{1016,59},'_'},
    {var,{1016,61},'_'},
    {var,{1016,63},'_'}],
   [],
   [{debug_line,1017,437},
    {match,
     {1017,5},
     {cons,
      {1017,5},
      {var,{1017,6},'A2'},
      {cons,{1017,9},{var,{1017,9},'A6'},{nil,{1017,11}}}},
     {call,
      {1017,15},
      {atom,{1017,15},resolve_args},
      [{block,0,
        [{cons,
          {1017,28},
          {var,{1017,29},'Arg2'},
          {cons,{1017,34},{var,{1017,34},'Arg6'},{nil,{1017,38}}}}]}]}},
    {debug_line,1018,438},
    {tuple,
     {1018,5},
     [{atom,{1018,6},bs_init2},
      {var,{1018,15},'Lbl'},
      {var,{1018,19},'A2'},
      {var,{1018,22},'W'},
      {var,{1018,24},'R'},
      {call,
       {1018,26},
       {atom,{1018,26},decode_field_flags},
       [{var,{1018,45},'F'}]},
      {var,{1018,48},'A6'}]}]},
  {clause,
   {1019,1},
   [{tuple,
     {1019,14},
     [{match,{1019,15},{atom,{1019,15},bs_add},{var,{1019,22},'I'}},
      {cons,
       {1019,24},
       {var,{1019,25},'Lbl'},
       {cons,
        {1019,29},
        {var,{1019,29},'Arg2'},
        {cons,
         {1019,34},
         {var,{1019,34},'Arg3'},
         {cons,
          {1019,39},
          {var,{1019,39},'Arg4'},
          {cons,{1019,44},{var,{1019,44},'Arg5'},{nil,{1019,48}}}}}}}]},
    {var,{1019,51},'_'},
    {var,{1019,53},'_'},
    {var,{1019,55},'_'}],
   [],
   [{debug_line,1020,439},
    {match,
     {1020,5},
     {cons,
      {1020,5},
      {var,{1020,6},'A2'},
      {cons,
       {1020,9},
       {var,{1020,9},'A3'},
       {cons,
        {1020,12},
        {var,{1020,12},'A4'},
        {cons,{1020,15},{var,{1020,15},'A5'},{nil,{1020,17}}}}}},
     {call,
      {1020,21},
      {atom,{1020,21},resolve_args},
      [{block,0,
        [{cons,
          {1020,34},
          {var,{1020,35},'Arg2'},
          {cons,
           {1020,40},
           {var,{1020,40},'Arg3'},
           {cons,
            {1020,45},
            {var,{1020,45},'Arg4'},
            {cons,{1020,50},{var,{1020,50},'Arg5'},{nil,{1020,54}}}}}}]}]}},
    {debug_line,1021,440},
    {tuple,
     {1021,5},
     [{var,{1021,6},'I'},
      {var,{1021,8},'Lbl'},
      {cons,
       {1021,12},
       {var,{1021,13},'A2'},
       {cons,
        {1021,16},
        {var,{1021,16},'A3'},
        {cons,{1021,19},{var,{1021,19},'A4'},{nil,{1021,21}}}}},
      {var,{1021,23},'A5'}]}]},
  {clause,
   {1026,1},
   [{tuple,
     {1026,14},
     [{atom,{1026,15},apply},
      {cons,
       {1026,21},
       {tuple,{1026,22},[{atom,{1026,23},u},{var,{1026,25},'Arity'}]},
       {nil,{1026,31}}}]},
    {var,{1026,34},'_'},
    {var,{1026,36},'_'},
    {var,{1026,38},'_'}],
   [],
   [{debug_line,1027,441},
    {tuple,{1027,5},[{atom,{1027,6},apply},{var,{1027,12},'Arity'}]}]},
  {clause,
   {1028,1},
   [{tuple,
     {1028,14},
     [{atom,{1028,15},apply_last},
      {cons,
       {1028,26},
       {tuple,{1028,27},[{atom,{1028,28},u},{var,{1028,30},'Arity'}]},
       {cons,
        {1028,37},
        {tuple,{1028,37},[{atom,{1028,38},u},{var,{1028,40},'D'}]},
        {nil,{1028,42}}}}]},
    {var,{1028,45},'_'},
    {var,{1028,47},'_'},
    {var,{1028,49},'_'}],
   [],
   [{debug_line,1029,442},
    {tuple,
     {1029,5},
     [{atom,{1029,6},apply_last},
      {var,{1029,17},'Arity'},
      {var,{1029,23},'D'}]}]},
  {clause,
   {1034,1},
   [{tuple,
     {1034,14},
     [{match,{1034,15},{atom,{1034,15},is_boolean},{var,{1034,26},'I'}},
      {var,{1034,28},'Args0'}]},
    {var,{1034,35},'_'},
    {var,{1034,37},'_'},
    {var,{1034,39},'_'}],
   [],
   [{debug_line,1035,443},
    {match,
     {1035,5},
     {cons,{1035,5},{var,{1035,6},'L'},{var,{1035,8},'Args'}},
     {call,{1035,16},{atom,{1035,16},resolve_args},[{var,{1035,29},'Args0'}]}},
    {debug_line,1036,444},
    {tuple,
     {1036,5},
     [{atom,{1036,6},test},
      {var,{1036,11},'I'},
      {var,{1036,13},'L'},
      {var,{1036,15},'Args'}]}]},
  {clause,
   {1041,1},
   [{tuple,
     {1041,14},
     [{match,{1041,15},{atom,{1041,15},is_function2},{var,{1041,28},'I'}},
      {var,{1041,30},'Args0'}]},
    {var,{1041,37},'_'},
    {var,{1041,39},'_'},
    {var,{1041,41},'_'}],
   [],
   [{debug_line,1042,445},
    {match,
     {1042,5},
     {cons,{1042,5},{var,{1042,6},'L'},{var,{1042,8},'Args'}},
     {call,{1042,16},{atom,{1042,16},resolve_args},[{var,{1042,29},'Args0'}]}},
    {debug_line,1043,446},
    {tuple,
     {1043,5},
     [{atom,{1043,6},test},
      {var,{1043,11},'I'},
      {var,{1043,13},'L'},
      {var,{1043,15},'Args'}]}]},
  {clause,
   {1048,1},
   [{tuple,
     {1048,14},
     [{match,{1048,15},{atom,{1048,15},bs_start_match2},{var,{1048,31},'I'}},
      {cons,
       {1048,33},
       {var,{1048,34},'F'},
       {cons,
        {1048,36},
        {var,{1048,36},'Reg'},
        {cons,
         {1048,40},
         {tuple,{1048,40},[{atom,{1048,41},u},{var,{1048,43},'Live'}]},
         {cons,
          {1048,49},
          {tuple,{1048,49},[{atom,{1048,50},u},{var,{1048,52},'Max'}]},
          {cons,{1048,57},{var,{1048,57},'Ms'},{nil,{1048,59}}}}}}}]},
    {var,{1048,62},'_'},
    {var,{1048,64},'_'},
    {var,{1048,66},'_'}],
   [],
   [{debug_line,1049,447},
    {tuple,
     {1049,5},
     [{atom,{1049,6},test},
      {var,{1049,11},'I'},
      {var,{1049,13},'F'},
      {cons,
       {1049,15},
       {var,{1049,16},'Reg'},
       {cons,
        {1049,20},
        {var,{1049,20},'Live'},
        {cons,
         {1049,25},
         {var,{1049,25},'Max'},
         {cons,{1049,29},{var,{1049,29},'Ms'},{nil,{1049,31}}}}}}]}]},
  {clause,
   {1050,1},
   [{tuple,
     {1050,14},
     [{match,{1050,15},{atom,{1050,15},bs_get_integer2},{var,{1050,31},'I'}},
      {cons,
       {1050,33},
       {var,{1050,34},'Fail'},
       {cons,
        {1050,39},
        {var,{1050,39},'Ms'},
        {cons,
         {1050,42},
         {tuple,{1050,42},[{atom,{1050,43},u},{var,{1050,45},'Live'}]},
         {cons,
          {1050,51},
          {var,{1050,51},'Size0'},
          {cons,
           {1050,57},
           {tuple,{1050,57},[{atom,{1050,58},u},{var,{1050,60},'Unit'}]},
           {cons,
            {1050,66},
            {tuple,{1050,66},[{atom,{1050,67},u},{var,{1050,69},'Flags'}]},
            {cons,{1050,76},{var,{1050,76},'Dst0'},{nil,{1050,80}}}}}}}}}]},
    {var,{1050,83},'_'},
    {var,{1050,85},'_'},
    {var,{1050,87},'_'}],
   [],
   [{debug_line,1051,448},
    {match,
     {1051,5},
     {cons,
      {1051,5},
      {var,{1051,6},'Size'},
      {cons,{1051,11},{var,{1051,11},'Dst'},{nil,{1051,14}}}},
     {call,
      {1051,18},
      {atom,{1051,18},resolve_args},
      [{block,0,
        [{cons,
          {1051,31},
          {var,{1051,32},'Size0'},
          {cons,{1051,38},{var,{1051,38},'Dst0'},{nil,{1051,42}}}}]}]}},
    {debug_line,1052,449},
    {tuple,
     {1052,5},
     [{atom,{1052,6},test},
      {var,{1052,11},'I'},
      {var,{1052,13},'Fail'},
      {var,{1052,18},'Live'},
      {cons,
       {1052,23},
       {var,{1052,24},'Ms'},
       {cons,
        {1052,27},
        {var,{1052,27},'Size'},
        {cons,
         {1052,32},
         {var,{1052,32},'Unit'},
         {cons,
          {1052,37},
          {call,
           {1052,37},
           {atom,{1052,37},decode_field_flags},
           [{var,{1052,56},'Flags'}]},
          {nil,{1052,62}}}}}},
      {var,{1052,64},'Dst'}]}]},
  {clause,
   {1053,1},
   [{tuple,
     {1053,14},
     [{match,{1053,15},{atom,{1053,15},bs_get_binary2},{var,{1053,30},'I'}},
      {cons,
       {1053,32},
       {var,{1053,33},'Fail'},
       {cons,
        {1053,38},
        {var,{1053,38},'Ms'},
        {cons,
         {1053,41},
         {tuple,{1053,41},[{atom,{1053,42},u},{var,{1053,44},'Live'}]},
         {cons,
          {1053,50},
          {var,{1053,50},'Size0'},
          {cons,
           {1053,56},
           {tuple,{1053,56},[{atom,{1053,57},u},{var,{1053,59},'Unit'}]},
           {cons,
            {1053,65},
            {tuple,{1053,65},[{atom,{1053,66},u},{var,{1053,68},'Flags'}]},
            {cons,{1053,75},{var,{1053,75},'Dst0'},{nil,{1053,79}}}}}}}}}]},
    {var,{1053,82},'_'},
    {var,{1053,84},'_'},
    {var,{1053,86},'_'}],
   [],
   [{debug_line,1054,450},
    {match,
     {1054,5},
     {cons,
      {1054,5},
      {var,{1054,6},'Size'},
      {cons,{1054,11},{var,{1054,11},'Dst'},{nil,{1054,14}}}},
     {call,
      {1054,18},
      {atom,{1054,18},resolve_args},
      [{block,0,
        [{cons,
          {1054,31},
          {var,{1054,32},'Size0'},
          {cons,{1054,38},{var,{1054,38},'Dst0'},{nil,{1054,42}}}}]}]}},
    {debug_line,1055,451},
    {tuple,
     {1055,5},
     [{atom,{1055,6},test},
      {var,{1055,11},'I'},
      {var,{1055,13},'Fail'},
      {var,{1055,18},'Live'},
      {cons,
       {1055,23},
       {var,{1055,24},'Ms'},
       {cons,
        {1055,27},
        {var,{1055,27},'Size'},
        {cons,
         {1055,32},
         {var,{1055,32},'Unit'},
         {cons,
          {1055,37},
          {call,
           {1055,37},
           {atom,{1055,37},decode_field_flags},
           [{var,{1055,56},'Flags'}]},
          {nil,{1055,62}}}}}},
      {var,{1055,64},'Dst'}]}]},
  {clause,
   {1056,1},
   [{tuple,
     {1056,14},
     [{match,{1056,15},{atom,{1056,15},bs_get_float2},{var,{1056,29},'I'}},
      {cons,
       {1056,31},
       {var,{1056,32},'Fail'},
       {cons,
        {1056,37},
        {var,{1056,37},'Ms'},
        {cons,
         {1056,40},
         {tuple,{1056,40},[{atom,{1056,41},u},{var,{1056,43},'Live'}]},
         {cons,
          {1056,49},
          {var,{1056,49},'Size0'},
          {cons,
           {1056,55},
           {tuple,{1056,55},[{atom,{1056,56},u},{var,{1056,58},'Unit'}]},
           {cons,
            {1056,64},
            {tuple,{1056,64},[{atom,{1056,65},u},{var,{1056,67},'Flags'}]},
            {cons,{1056,74},{var,{1056,74},'Dst0'},{nil,{1056,78}}}}}}}}}]},
    {var,{1056,81},'_'},
    {var,{1056,83},'_'},
    {var,{1056,85},'_'}],
   [],
   [{debug_line,1057,452},
    {match,
     {1057,5},
     {cons,
      {1057,5},
      {var,{1057,6},'Size'},
      {cons,{1057,11},{var,{1057,11},'Dst'},{nil,{1057,14}}}},
     {call,
      {1057,18},
      {atom,{1057,18},resolve_args},
      [{block,0,
        [{cons,
          {1057,31},
          {var,{1057,32},'Size0'},
          {cons,{1057,38},{var,{1057,38},'Dst0'},{nil,{1057,42}}}}]}]}},
    {debug_line,1058,453},
    {tuple,
     {1058,5},
     [{atom,{1058,6},test},
      {var,{1058,11},'I'},
      {var,{1058,13},'Fail'},
      {var,{1058,18},'Live'},
      {cons,
       {1058,23},
       {var,{1058,24},'Ms'},
       {cons,
        {1058,27},
        {var,{1058,27},'Size'},
        {cons,
         {1058,32},
         {var,{1058,32},'Unit'},
         {cons,
          {1058,37},
          {call,
           {1058,37},
           {atom,{1058,37},decode_field_flags},
           [{var,{1058,56},'Flags'}]},
          {nil,{1058,62}}}}}},
      {var,{1058,64},'Dst'}]}]},
  {clause,
   {1059,1},
   [{tuple,
     {1059,14},
     [{match,{1059,15},{atom,{1059,15},bs_skip_bits2},{var,{1059,29},'I'}},
      {cons,
       {1059,31},
       {var,{1059,32},'Lbl'},
       {cons,
        {1059,36},
        {var,{1059,36},'Ms'},
        {cons,
         {1059,39},
         {var,{1059,39},'Arg2'},
         {cons,
          {1059,44},
          {tuple,{1059,44},[{atom,{1059,45},u},{var,{1059,47},'N'}]},
          {cons,
           {1059,50},
           {tuple,{1059,50},[{atom,{1059,51},u},{var,{1059,53},'U'}]},
           {nil,{1059,55}}}}}}}]},
    {var,{1059,58},'_'},
    {var,{1059,60},'_'},
    {var,{1059,62},'_'}],
   [],
   [{debug_line,1060,454},
    {match,
     {1060,5},
     {var,{1060,5},'A2'},
     {call,{1060,10},{atom,{1060,10},resolve_arg},[{var,{1060,22},'Arg2'}]}},
    {debug_line,1061,455},
    {tuple,
     {1061,5},
     [{atom,{1061,6},test},
      {var,{1061,11},'I'},
      {var,{1061,13},'Lbl'},
      {cons,
       {1061,17},
       {var,{1061,18},'Ms'},
       {cons,
        {1061,21},
        {var,{1061,21},'A2'},
        {cons,
         {1061,24},
         {var,{1061,24},'N'},
         {cons,
          {1061,26},
          {call,
           {1061,26},
           {atom,{1061,26},decode_field_flags},
           [{var,{1061,45},'U'}]},
          {nil,{1061,47}}}}}}]}]},
  {clause,
   {1062,1},
   [{tuple,
     {1062,14},
     [{match,{1062,15},{atom,{1062,15},bs_test_tail2},{var,{1062,29},'I'}},
      {cons,
       {1062,31},
       {var,{1062,32},'F'},
       {cons,
        {1062,34},
        {var,{1062,34},'Ms'},
        {cons,
         {1062,37},
         {tuple,{1062,37},[{atom,{1062,38},u},{var,{1062,40},'N'}]},
         {nil,{1062,42}}}}}]},
    {var,{1062,45},'_'},
    {var,{1062,47},'_'},
    {var,{1062,49},'_'}],
   [],
   [{debug_line,1063,456},
    {tuple,
     {1063,5},
     [{atom,{1063,6},test},
      {var,{1063,11},'I'},
      {var,{1063,13},'F'},
      {cons,
       {1063,15},
       {var,{1063,16},'Ms'},
       {cons,{1063,19},{var,{1063,19},'N'},{nil,{1063,20}}}}]}]},
  {clause,
   {1064,1},
   [{tuple,
     {1064,14},
     [{match,{1064,15},{atom,{1064,15},bs_save2},{var,{1064,24},'I'}},
      {cons,
       {1064,26},
       {var,{1064,27},'Ms'},
       {cons,
        {1064,30},
        {tuple,{1064,30},[{atom,{1064,31},u},{var,{1064,33},'N'}]},
        {nil,{1064,35}}}}]},
    {var,{1064,38},'_'},
    {var,{1064,40},'_'},
    {var,{1064,42},'_'}],
   [],
   [{debug_line,1065,457},
    {tuple,
     {1065,5},
     [{var,{1065,6},'I'},{var,{1065,8},'Ms'},{var,{1065,11},'N'}]}]},
  {clause,
   {1066,1},
   [{tuple,
     {1066,14},
     [{match,{1066,15},{atom,{1066,15},bs_restore2},{var,{1066,27},'I'}},
      {cons,
       {1066,29},
       {var,{1066,30},'Ms'},
       {cons,
        {1066,33},
        {tuple,{1066,33},[{atom,{1066,34},u},{var,{1066,36},'N'}]},
        {nil,{1066,38}}}}]},
    {var,{1066,41},'_'},
    {var,{1066,43},'_'},
    {var,{1066,45},'_'}],
   [],
   [{debug_line,1067,458},
    {tuple,
     {1067,5},
     [{var,{1067,6},'I'},{var,{1067,8},'Ms'},{var,{1067,11},'N'}]}]},
  {clause,
   {1068,1},
   [{tuple,
     {1068,14},
     [{match,{1068,15},{atom,{1068,15},bs_save2},{var,{1068,24},'I'}},
      {cons,
       {1068,26},
       {var,{1068,27},'Ms'},
       {cons,
        {1068,30},
        {match,
         {1068,30},
         {tuple,{1068,30},[{atom,{1068,31},atom},{var,{1068,36},'_'}]},
         {var,{1068,39},'Atom'}},
        {nil,{1068,43}}}}]},
    {var,{1068,46},'_'},
    {var,{1068,48},'_'},
    {var,{1068,50},'_'}],
   [],
   [{debug_line,1070,459},
    {tuple,
     {1070,5},
     [{var,{1070,6},'I'},{var,{1070,8},'Ms'},{var,{1070,11},'Atom'}]}]},
  {clause,
   {1071,1},
   [{tuple,
     {1071,14},
     [{match,{1071,15},{atom,{1071,15},bs_restore2},{var,{1071,27},'I'}},
      {cons,
       {1071,29},
       {var,{1071,30},'Ms'},
       {cons,
        {1071,33},
        {match,
         {1071,33},
         {tuple,{1071,33},[{atom,{1071,34},atom},{var,{1071,39},'_'}]},
         {var,{1071,42},'Atom'}},
        {nil,{1071,46}}}}]},
    {var,{1071,49},'_'},
    {var,{1071,51},'_'},
    {var,{1071,53},'_'}],
   [],
   [{debug_line,1073,460},
    {tuple,
     {1073,5},
     [{var,{1073,6},'I'},{var,{1073,8},'Ms'},{var,{1073,11},'Atom'}]}]},
  {clause,
   {1078,1},
   [{tuple,{1078,14},[{atom,{1078,15},gc_bif1},{var,{1078,23},'Args'}]},
    {var,{1078,29},'Imports'},
    {var,{1078,37},'_'},
    {var,{1078,39},'_'}],
   [],
   [{debug_line,1079,461},
    {match,
     {1079,5},
     {cons,
      {1079,5},
      {var,{1079,6},'F'},
      {cons,
       {1079,8},
       {var,{1079,8},'Live'},
       {cons,
        {1079,13},
        {var,{1079,13},'Bif'},
        {cons,
         {1079,17},
         {var,{1079,17},'A1'},
         {cons,{1079,20},{var,{1079,20},'Reg'},{nil,{1079,23}}}}}}},
     {call,{1079,27},{atom,{1079,27},resolve_args},[{var,{1079,40},'Args'}]}},
    {debug_line,1080,462},
    {match,
     {1080,5},
     {tuple,
      {1080,5},
      [{atom,{1080,6},extfunc},
       {var,{1080,14},'_Mod'},
       {var,{1080,19},'BifName'},
       {var,{1080,27},'_Arity'}]},
     {call,
      {1080,37},
      {atom,{1080,37},lookup},
      [{block,0,
        [{op,{1080,47},'+',{var,{1080,44},'Bif'},{integer,{1080,48},1}}]},
       {var,{1080,50},'Imports'}]}},
    {debug_line,1081,463},
    {tuple,
     {1081,5},
     [{atom,{1081,6},gc_bif},
      {var,{1081,13},'BifName'},
      {var,{1081,21},'F'},
      {var,{1081,23},'Live'},
      {cons,{1081,28},{var,{1081,29},'A1'},{nil,{1081,31}}},
      {var,{1081,33},'Reg'}]}]},
  {clause,
   {1082,1},
   [{tuple,{1082,14},[{atom,{1082,15},gc_bif2},{var,{1082,23},'Args'}]},
    {var,{1082,29},'Imports'},
    {var,{1082,37},'_'},
    {var,{1082,39},'_'}],
   [],
   [{debug_line,1083,464},
    {match,
     {1083,5},
     {cons,
      {1083,5},
      {var,{1083,6},'F'},
      {cons,
       {1083,8},
       {var,{1083,8},'Live'},
       {cons,
        {1083,13},
        {var,{1083,13},'Bif'},
        {cons,
         {1083,17},
         {var,{1083,17},'A1'},
         {cons,
          {1083,20},
          {var,{1083,20},'A2'},
          {cons,{1083,23},{var,{1083,23},'Reg'},{nil,{1083,26}}}}}}}},
     {call,{1083,30},{atom,{1083,30},resolve_args},[{var,{1083,43},'Args'}]}},
    {debug_line,1084,465},
    {match,
     {1084,5},
     {tuple,
      {1084,5},
      [{atom,{1084,6},extfunc},
       {var,{1084,14},'_Mod'},
       {var,{1084,19},'BifName'},
       {var,{1084,27},'_Arity'}]},
     {call,
      {1084,37},
      {atom,{1084,37},lookup},
      [{block,0,
        [{op,{1084,47},'+',{var,{1084,44},'Bif'},{integer,{1084,48},1}}]},
       {var,{1084,50},'Imports'}]}},
    {debug_line,1085,466},
    {tuple,
     {1085,5},
     [{atom,{1085,6},gc_bif},
      {var,{1085,13},'BifName'},
      {var,{1085,21},'F'},
      {var,{1085,23},'Live'},
      {cons,
       {1085,28},
       {var,{1085,29},'A1'},
       {cons,{1085,32},{var,{1085,32},'A2'},{nil,{1085,34}}}},
      {var,{1085,36},'Reg'}]}]},
  {clause,
   {1090,1},
   [{tuple,{1090,14},[{atom,{1090,15},gc_bif3},{var,{1090,23},'Args'}]},
    {var,{1090,29},'Imports'},
    {var,{1090,37},'_'},
    {var,{1090,39},'_'}],
   [],
   [{debug_line,1091,467},
    {match,
     {1091,5},
     {cons,
      {1091,5},
      {var,{1091,6},'F'},
      {cons,
       {1091,8},
       {var,{1091,8},'Live'},
       {cons,
        {1091,13},
        {var,{1091,13},'Bif'},
        {cons,
         {1091,17},
         {var,{1091,17},'A1'},
         {cons,
          {1091,20},
          {var,{1091,20},'A2'},
          {cons,
           {1091,23},
           {var,{1091,23},'A3'},
           {cons,{1091,26},{var,{1091,26},'Reg'},{nil,{1091,29}}}}}}}}},
     {call,{1091,33},{atom,{1091,33},resolve_args},[{var,{1091,46},'Args'}]}},
    {debug_line,1092,468},
    {match,
     {1092,5},
     {tuple,
      {1092,5},
      [{atom,{1092,6},extfunc},
       {var,{1092,14},'_Mod'},
       {var,{1092,19},'BifName'},
       {var,{1092,27},'_Arity'}]},
     {call,
      {1092,37},
      {atom,{1092,37},lookup},
      [{block,0,
        [{op,{1092,47},'+',{var,{1092,44},'Bif'},{integer,{1092,48},1}}]},
       {var,{1092,50},'Imports'}]}},
    {debug_line,1093,469},
    {tuple,
     {1093,5},
     [{atom,{1093,6},gc_bif},
      {var,{1093,13},'BifName'},
      {var,{1093,21},'F'},
      {var,{1093,23},'Live'},
      {cons,
       {1093,28},
       {var,{1093,29},'A1'},
       {cons,
        {1093,32},
        {var,{1093,32},'A2'},
        {cons,{1093,35},{var,{1093,35},'A3'},{nil,{1093,37}}}}},
      {var,{1093,39},'Reg'}]}]},
  {clause,
   {1098,1},
   [{tuple,
     {1098,14},
     [{match,{1098,15},{atom,{1098,15},is_bitstr},{var,{1098,25},'I'}},
      {var,{1098,27},'Args0'}]},
    {var,{1098,34},'_'},
    {var,{1098,36},'_'},
    {var,{1098,38},'_'}],
   [],
   [{debug_line,1099,470},
    {match,
     {1099,5},
     {cons,{1099,5},{var,{1099,6},'L'},{var,{1099,8},'Args'}},
     {call,{1099,16},{atom,{1099,16},resolve_args},[{var,{1099,29},'Args0'}]}},
    {debug_line,1100,471},
    {tuple,
     {1100,5},
     [{atom,{1100,6},test},
      {var,{1100,11},'I'},
      {var,{1100,13},'L'},
      {var,{1100,15},'Args'}]}]},
  {clause,
   {1105,1},
   [{tuple,
     {1105,14},
     [{match,
       {1105,15},
       {atom,{1105,15},bs_context_to_binary},
       {var,{1105,36},'I'}},
      {cons,{1105,38},{var,{1105,39},'Reg0'},{nil,{1105,43}}}]},
    {var,{1105,46},'_'},
    {var,{1105,48},'_'},
    {var,{1105,50},'_'}],
   [],
   [{debug_line,1106,472},
    {match,
     {1106,5},
     {var,{1106,5},'Reg'},
     {call,{1106,11},{atom,{1106,11},resolve_arg},[{var,{1106,23},'Reg0'}]}},
    {debug_line,1107,473},
    {tuple,{1107,5},[{var,{1107,6},'I'},{var,{1107,8},'Reg'}]}]},
  {clause,
   {1108,1},
   [{tuple,
     {1108,14},
     [{match,{1108,15},{atom,{1108,15},bs_test_unit},{var,{1108,28},'I'}},
      {cons,
       {1108,30},
       {var,{1108,31},'F'},
       {cons,
        {1108,33},
        {var,{1108,33},'Ms'},
        {cons,
         {1108,36},
         {tuple,{1108,36},[{atom,{1108,37},u},{var,{1108,39},'N'}]},
         {nil,{1108,41}}}}}]},
    {var,{1108,44},'_'},
    {var,{1108,46},'_'},
    {var,{1108,48},'_'}],
   [],
   [{debug_line,1109,474},
    {tuple,
     {1109,5},
     [{atom,{1109,6},test},
      {var,{1109,11},'I'},
      {var,{1109,13},'F'},
      {cons,
       {1109,15},
       {var,{1109,16},'Ms'},
       {cons,{1109,19},{var,{1109,19},'N'},{nil,{1109,20}}}}]}]},
  {clause,
   {1110,1},
   [{tuple,
     {1110,14},
     [{match,{1110,15},{atom,{1110,15},bs_match_string},{var,{1110,31},'I'}},
      {cons,
       {1110,33},
       {var,{1110,34},'F'},
       {cons,
        {1110,36},
        {var,{1110,36},'Ms'},
        {cons,
         {1110,39},
         {tuple,{1110,39},[{atom,{1110,40},u},{var,{1110,42},'Bits'}]},
         {cons,
          {1110,48},
          {tuple,{1110,48},[{atom,{1110,49},u},{var,{1110,51},'Off'}]},
          {nil,{1110,55}}}}}}]},
    {var,{1110,58},'_'},
    {var,{1110,60},'Strings'},
    {var,{1110,68},'_'}],
   [],
   [{debug_line,1111,475},
    {match,
     {1111,5},
     {var,{1111,5},'Len'},
     {op,
      {1111,20},
      'div',
      {op,{1111,16},'+',{var,{1111,12},'Bits'},{integer,{1111,17},7}},
      {integer,{1111,24},8}}},
    {debug_line,1112,476},
    {match,
     {1112,5},
     {var,{1112,5},'String'},
     {'if',
      {1112,14},
      [{clause,
        {1113,4},
        [],
        [[{op,{1113,8},'>',{var,{1113,4},'Len'},{integer,{1113,10},0}}]],
        [{debug_line,1114,477},
         {match,
          {1114,8},
          {bin,
           {1114,8},
           [{bin_element,
             {1114,10},
             {var,{1114,10},'_'},
             {var,{1114,12},'Off'},
             [binary]},
            {bin_element,
             {1114,23},
             {var,{1114,23},'Bin'},
             {var,{1114,27},'Len'},
             [binary]},
            {bin_element,{1114,38},{var,{1114,38},'_'},default,[binary]}]},
          {var,{1114,51},'Strings'}},
         {debug_line,1115,478},
         {var,{1115,8},'Bin'}]},
       {clause,
        {1116,4},
        [],
        [[{atom,{1116,4},true}]],
        [{debug_line,1116,479},{bin,{1116,12},[]}]}]}},
    {debug_line,1118,480},
    {tuple,
     {1118,5},
     [{atom,{1118,6},test},
      {var,{1118,11},'I'},
      {var,{1118,13},'F'},
      {cons,
       {1118,15},
       {var,{1118,16},'Ms'},
       {cons,
        {1118,19},
        {var,{1118,19},'Bits'},
        {cons,
         {1118,24},
         {tuple,{1118,24},[{atom,{1118,25},string},{var,{1118,32},'String'}]},
         {nil,{1118,39}}}}}]}]},
  {clause,
   {1119,1},
   [{tuple,
     {1119,14},
     [{match,{1119,15},{atom,{1119,15},bs_init_writable},{var,{1119,32},'I'}},
      {nil,{1119,34}}]},
    {var,{1119,38},'_'},
    {var,{1119,40},'_'},
    {var,{1119,42},'_'}],
   [],
   [{debug_line,1120,481},{var,{1120,5},'I'}]},
  {clause,
   {1121,1},
   [{tuple,
     {1121,14},
     [{match,{1121,15},{atom,{1121,15},bs_append},{var,{1121,25},'I'}},
      {cons,
       {1121,27},
       {var,{1121,28},'Lbl'},
       {cons,
        {1121,32},
        {var,{1121,32},'Arg2'},
        {cons,
         {1121,37},
         {tuple,{1121,37},[{atom,{1121,38},u},{var,{1121,40},'W'}]},
         {cons,
          {1121,43},
          {tuple,{1121,43},[{atom,{1121,44},u},{var,{1121,46},'R'}]},
          {cons,
           {1121,49},
           {tuple,{1121,49},[{atom,{1121,50},u},{var,{1121,52},'U'}]},
           {cons,
            {1121,55},
            {var,{1121,55},'Arg6'},
            {cons,
             {1121,60},
             {tuple,{1121,60},[{atom,{1121,61},u},{var,{1121,63},'F'}]},
             {cons,{1121,66},{var,{1121,66},'Arg8'},{nil,{1121,70}}}}}}}}}}]},
    {var,{1121,73},'_'},
    {var,{1121,75},'_'},
    {var,{1121,77},'_'}],
   [],
   [{debug_line,1122,482},
    {match,
     {1122,5},
     {cons,
      {1122,5},
      {var,{1122,6},'A2'},
      {cons,
       {1122,9},
       {var,{1122,9},'A6'},
       {cons,{1122,12},{var,{1122,12},'A8'},{nil,{1122,14}}}}},
     {call,
      {1122,18},
      {atom,{1122,18},resolve_args},
      [{block,0,
        [{cons,
          {1122,31},
          {var,{1122,32},'Arg2'},
          {cons,
           {1122,37},
           {var,{1122,37},'Arg6'},
           {cons,{1122,42},{var,{1122,42},'Arg8'},{nil,{1122,46}}}}}]}]}},
    {debug_line,1123,483},
    {tuple,
     {1123,5},
     [{var,{1123,6},'I'},
      {var,{1123,8},'Lbl'},
      {var,{1123,12},'A2'},
      {var,{1123,15},'W'},
      {var,{1123,17},'R'},
      {var,{1123,19},'U'},
      {var,{1123,21},'A6'},
      {call,
       {1123,24},
       {atom,{1123,24},decode_field_flags},
       [{var,{1123,43},'F'}]},
      {var,{1123,46},'A8'}]}]},
  {clause,
   {1124,1},
   [{tuple,
     {1124,14},
     [{match,{1124,15},{atom,{1124,15},bs_private_append},{var,{1124,33},'I'}},
      {cons,
       {1124,35},
       {var,{1124,36},'Lbl'},
       {cons,
        {1124,40},
        {var,{1124,40},'Arg2'},
        {cons,
         {1124,45},
         {tuple,{1124,45},[{atom,{1124,46},u},{var,{1124,48},'U'}]},
         {cons,
          {1124,51},
          {var,{1124,51},'Arg4'},
          {cons,
           {1124,56},
           {tuple,{1124,56},[{atom,{1124,57},u},{var,{1124,59},'F'}]},
           {cons,{1124,62},{var,{1124,62},'Arg6'},{nil,{1124,66}}}}}}}}]},
    {var,{1124,69},'_'},
    {var,{1124,71},'_'},
    {var,{1124,73},'_'}],
   [],
   [{debug_line,1125,484},
    {match,
     {1125,5},
     {cons,
      {1125,5},
      {var,{1125,6},'A2'},
      {cons,
       {1125,9},
       {var,{1125,9},'A4'},
       {cons,{1125,12},{var,{1125,12},'A6'},{nil,{1125,14}}}}},
     {call,
      {1125,18},
      {atom,{1125,18},resolve_args},
      [{block,0,
        [{cons,
          {1125,31},
          {var,{1125,32},'Arg2'},
          {cons,
           {1125,37},
           {var,{1125,37},'Arg4'},
           {cons,{1125,42},{var,{1125,42},'Arg6'},{nil,{1125,46}}}}}]}]}},
    {debug_line,1126,485},
    {tuple,
     {1126,5},
     [{var,{1126,6},'I'},
      {var,{1126,8},'Lbl'},
      {var,{1126,12},'A2'},
      {var,{1126,15},'U'},
      {var,{1126,17},'A4'},
      {call,
       {1126,20},
       {atom,{1126,20},decode_field_flags},
       [{var,{1126,39},'F'}]},
      {var,{1126,42},'A6'}]}]},
  {clause,
   {1127,1},
   [{tuple,
     {1127,14},
     [{match,{1127,15},{atom,{1127,15},trim},{var,{1127,20},'I'}},
      {cons,
       {1127,22},
       {tuple,{1127,23},[{atom,{1127,24},u},{var,{1127,26},'N'}]},
       {cons,
        {1127,29},
        {tuple,{1127,29},[{atom,{1127,30},u},{var,{1127,32},'Remaining'}]},
        {nil,{1127,42}}}}]},
    {var,{1127,45},'_'},
    {var,{1127,47},'_'},
    {var,{1127,49},'_'}],
   [],
   [{debug_line,1128,486},
    {tuple,
     {1128,5},
     [{var,{1128,6},'I'},{var,{1128,8},'N'},{var,{1128,10},'Remaining'}]}]},
  {clause,
   {1129,1},
   [{tuple,
     {1129,14},
     [{atom,{1129,15},bs_init_bits},
      {cons,
       {1129,28},
       {var,{1129,29},'Lbl'},
       {cons,
        {1129,33},
        {var,{1129,33},'Arg2'},
        {cons,
         {1129,38},
         {tuple,{1129,38},[{atom,{1129,39},u},{var,{1129,41},'W'}]},
         {cons,
          {1129,44},
          {tuple,{1129,44},[{atom,{1129,45},u},{var,{1129,47},'R'}]},
          {cons,
           {1129,50},
           {tuple,{1129,50},[{atom,{1129,51},u},{var,{1129,53},'F'}]},
           {cons,{1129,56},{var,{1129,56},'Arg6'},{nil,{1129,60}}}}}}}}]},
    {var,{1129,63},'_'},
    {var,{1129,65},'_'},
    {var,{1129,67},'_'}],
   [],
   [{debug_line,1130,487},
    {match,
     {1130,5},
     {cons,
      {1130,5},
      {var,{1130,6},'A2'},
      {cons,{1130,9},{var,{1130,9},'A6'},{nil,{1130,11}}}},
     {call,
      {1130,15},
      {atom,{1130,15},resolve_args},
      [{block,0,
        [{cons,
          {1130,28},
          {var,{1130,29},'Arg2'},
          {cons,{1130,34},{var,{1130,34},'Arg6'},{nil,{1130,38}}}}]}]}},
    {debug_line,1131,488},
    {tuple,
     {1131,5},
     [{atom,{1131,6},bs_init_bits},
      {var,{1131,19},'Lbl'},
      {var,{1131,23},'A2'},
      {var,{1131,26},'W'},
      {var,{1131,28},'R'},
      {call,
       {1131,30},
       {atom,{1131,30},decode_field_flags},
       [{var,{1131,49},'F'}]},
      {var,{1131,52},'A6'}]}]},
  {clause,
   {1136,1},
   [{tuple,
     {1136,14},
     [{match,{1136,15},{atom,{1136,15},bs_get_utf8},{var,{1136,27},'I'}},
      {cons,
       {1136,29},
       {var,{1136,30},'Lbl'},
       {cons,
        {1136,34},
        {var,{1136,34},'Arg2'},
        {cons,
         {1136,39},
         {var,{1136,39},'Arg3'},
         {cons,
          {1136,44},
          {tuple,{1136,44},[{atom,{1136,45},u},{var,{1136,47},'U'}]},
          {cons,{1136,50},{var,{1136,50},'Arg4'},{nil,{1136,54}}}}}}}]},
    {var,{1136,57},'_'},
    {var,{1136,59},'_'},
    {var,{1136,61},'_'}],
   [],
   [{debug_line,1137,489},
    {match,
     {1137,5},
     {cons,
      {1137,5},
      {var,{1137,6},'A2'},
      {cons,
       {1137,9},
       {var,{1137,9},'A3'},
       {cons,{1137,12},{var,{1137,12},'A4'},{nil,{1137,14}}}}},
     {call,
      {1137,18},
      {atom,{1137,18},resolve_args},
      [{block,0,
        [{cons,
          {1137,31},
          {var,{1137,32},'Arg2'},
          {cons,
           {1137,37},
           {var,{1137,37},'Arg3'},
           {cons,{1137,42},{var,{1137,42},'Arg4'},{nil,{1137,46}}}}}]}]}},
    {debug_line,1138,490},
    {tuple,
     {1138,5},
     [{atom,{1138,6},test},
      {var,{1138,11},'I'},
      {var,{1138,13},'Lbl'},
      {cons,
       {1138,17},
       {var,{1138,18},'A2'},
       {cons,
        {1138,21},
        {var,{1138,21},'A3'},
        {cons,
         {1138,24},
         {call,
          {1138,24},
          {atom,{1138,24},decode_field_flags},
          [{var,{1138,43},'U'}]},
         {cons,{1138,46},{var,{1138,46},'A4'},{nil,{1138,48}}}}}}]}]},
  {clause,
   {1139,1},
   [{tuple,
     {1139,14},
     [{match,{1139,15},{atom,{1139,15},bs_skip_utf8},{var,{1139,28},'I'}},
      {cons,
       {1139,30},
       {var,{1139,31},'Lbl'},
       {cons,
        {1139,35},
        {var,{1139,35},'Arg2'},
        {cons,
         {1139,40},
         {var,{1139,40},'Arg3'},
         {cons,
          {1139,45},
          {tuple,{1139,45},[{atom,{1139,46},u},{var,{1139,48},'U'}]},
          {nil,{1139,50}}}}}}]},
    {var,{1139,53},'_'},
    {var,{1139,55},'_'},
    {var,{1139,57},'_'}],
   [],
   [{debug_line,1140,491},
    {match,
     {1140,5},
     {cons,
      {1140,5},
      {var,{1140,6},'A2'},
      {cons,{1140,9},{var,{1140,9},'A3'},{nil,{1140,11}}}},
     {call,
      {1140,15},
      {atom,{1140,15},resolve_args},
      [{block,0,
        [{cons,
          {1140,28},
          {var,{1140,29},'Arg2'},
          {cons,{1140,34},{var,{1140,34},'Arg3'},{nil,{1140,38}}}}]}]}},
    {debug_line,1141,492},
    {tuple,
     {1141,5},
     [{atom,{1141,6},test},
      {var,{1141,11},'I'},
      {var,{1141,13},'Lbl'},
      {cons,
       {1141,17},
       {var,{1141,18},'A2'},
       {cons,
        {1141,21},
        {var,{1141,21},'A3'},
        {cons,
         {1141,24},
         {call,
          {1141,24},
          {atom,{1141,24},decode_field_flags},
          [{var,{1141,43},'U'}]},
         {nil,{1141,45}}}}}]}]},
  {clause,
   {1142,1},
   [{tuple,
     {1142,14},
     [{match,{1142,15},{atom,{1142,15},bs_get_utf16},{var,{1142,28},'I'}},
      {cons,
       {1142,30},
       {var,{1142,31},'Lbl'},
       {cons,
        {1142,35},
        {var,{1142,35},'Arg2'},
        {cons,
         {1142,40},
         {var,{1142,40},'Arg3'},
         {cons,
          {1142,45},
          {tuple,{1142,45},[{atom,{1142,46},u},{var,{1142,48},'U'}]},
          {cons,{1142,51},{var,{1142,51},'Arg4'},{nil,{1142,55}}}}}}}]},
    {var,{1142,58},'_'},
    {var,{1142,60},'_'},
    {var,{1142,62},'_'}],
   [],
   [{debug_line,1143,493},
    {match,
     {1143,5},
     {cons,
      {1143,5},
      {var,{1143,6},'A2'},
      {cons,
       {1143,9},
       {var,{1143,9},'A3'},
       {cons,{1143,12},{var,{1143,12},'A4'},{nil,{1143,14}}}}},
     {call,
      {1143,18},
      {atom,{1143,18},resolve_args},
      [{block,0,
        [{cons,
          {1143,31},
          {var,{1143,32},'Arg2'},
          {cons,
           {1143,37},
           {var,{1143,37},'Arg3'},
           {cons,{1143,42},{var,{1143,42},'Arg4'},{nil,{1143,46}}}}}]}]}},
    {debug_line,1144,494},
    {tuple,
     {1144,5},
     [{atom,{1144,6},test},
      {var,{1144,11},'I'},
      {var,{1144,13},'Lbl'},
      {cons,
       {1144,17},
       {var,{1144,18},'A2'},
       {cons,
        {1144,21},
        {var,{1144,21},'A3'},
        {cons,
         {1144,24},
         {call,
          {1144,24},
          {atom,{1144,24},decode_field_flags},
          [{var,{1144,43},'U'}]},
         {cons,{1144,46},{var,{1144,46},'A4'},{nil,{1144,48}}}}}}]}]},
  {clause,
   {1145,1},
   [{tuple,
     {1145,14},
     [{match,{1145,15},{atom,{1145,15},bs_skip_utf16},{var,{1145,29},'I'}},
      {cons,
       {1145,31},
       {var,{1145,32},'Lbl'},
       {cons,
        {1145,36},
        {var,{1145,36},'Arg2'},
        {cons,
         {1145,41},
         {var,{1145,41},'Arg3'},
         {cons,
          {1145,46},
          {tuple,{1145,46},[{atom,{1145,47},u},{var,{1145,49},'U'}]},
          {nil,{1145,51}}}}}}]},
    {var,{1145,54},'_'},
    {var,{1145,56},'_'},
    {var,{1145,58},'_'}],
   [],
   [{debug_line,1146,495},
    {match,
     {1146,5},
     {cons,
      {1146,5},
      {var,{1146,6},'A2'},
      {cons,{1146,9},{var,{1146,9},'A3'},{nil,{1146,11}}}},
     {call,
      {1146,15},
      {atom,{1146,15},resolve_args},
      [{block,0,
        [{cons,
          {1146,28},
          {var,{1146,29},'Arg2'},
          {cons,{1146,34},{var,{1146,34},'Arg3'},{nil,{1146,38}}}}]}]}},
    {debug_line,1147,496},
    {tuple,
     {1147,5},
     [{atom,{1147,6},test},
      {var,{1147,11},'I'},
      {var,{1147,13},'Lbl'},
      {cons,
       {1147,17},
       {var,{1147,18},'A2'},
       {cons,
        {1147,21},
        {var,{1147,21},'A3'},
        {cons,
         {1147,24},
         {call,
          {1147,24},
          {atom,{1147,24},decode_field_flags},
          [{var,{1147,43},'U'}]},
         {nil,{1147,45}}}}}]}]},
  {clause,
   {1148,1},
   [{tuple,
     {1148,14},
     [{match,{1148,15},{atom,{1148,15},bs_get_utf32},{var,{1148,28},'I'}},
      {cons,
       {1148,30},
       {var,{1148,31},'Lbl'},
       {cons,
        {1148,35},
        {var,{1148,35},'Arg2'},
        {cons,
         {1148,40},
         {var,{1148,40},'Arg3'},
         {cons,
          {1148,45},
          {tuple,{1148,45},[{atom,{1148,46},u},{var,{1148,48},'U'}]},
          {cons,{1148,51},{var,{1148,51},'Arg4'},{nil,{1148,55}}}}}}}]},
    {var,{1148,58},'_'},
    {var,{1148,60},'_'},
    {var,{1148,62},'_'}],
   [],
   [{debug_line,1149,497},
    {match,
     {1149,5},
     {cons,
      {1149,5},
      {var,{1149,6},'A2'},
      {cons,
       {1149,9},
       {var,{1149,9},'A3'},
       {cons,{1149,12},{var,{1149,12},'A4'},{nil,{1149,14}}}}},
     {call,
      {1149,18},
      {atom,{1149,18},resolve_args},
      [{block,0,
        [{cons,
          {1149,31},
          {var,{1149,32},'Arg2'},
          {cons,
           {1149,37},
           {var,{1149,37},'Arg3'},
           {cons,{1149,42},{var,{1149,42},'Arg4'},{nil,{1149,46}}}}}]}]}},
    {debug_line,1150,498},
    {tuple,
     {1150,5},
     [{atom,{1150,6},test},
      {var,{1150,11},'I'},
      {var,{1150,13},'Lbl'},
      {cons,
       {1150,17},
       {var,{1150,18},'A2'},
       {cons,
        {1150,21},
        {var,{1150,21},'A3'},
        {cons,
         {1150,24},
         {call,
          {1150,24},
          {atom,{1150,24},decode_field_flags},
          [{var,{1150,43},'U'}]},
         {cons,{1150,46},{var,{1150,46},'A4'},{nil,{1150,48}}}}}}]}]},
  {clause,
   {1151,1},
   [{tuple,
     {1151,14},
     [{match,{1151,15},{atom,{1151,15},bs_skip_utf32},{var,{1151,29},'I'}},
      {cons,
       {1151,31},
       {var,{1151,32},'Lbl'},
       {cons,
        {1151,36},
        {var,{1151,36},'Arg2'},
        {cons,
         {1151,41},
         {var,{1151,41},'Arg3'},
         {cons,
          {1151,46},
          {tuple,{1151,46},[{atom,{1151,47},u},{var,{1151,49},'U'}]},
          {nil,{1151,51}}}}}}]},
    {var,{1151,54},'_'},
    {var,{1151,56},'_'},
    {var,{1151,58},'_'}],
   [],
   [{debug_line,1152,499},
    {match,
     {1152,5},
     {cons,
      {1152,5},
      {var,{1152,6},'A2'},
      {cons,{1152,9},{var,{1152,9},'A3'},{nil,{1152,11}}}},
     {call,
      {1152,15},
      {atom,{1152,15},resolve_args},
      [{block,0,
        [{cons,
          {1152,28},
          {var,{1152,29},'Arg2'},
          {cons,{1152,34},{var,{1152,34},'Arg3'},{nil,{1152,38}}}}]}]}},
    {debug_line,1153,500},
    {tuple,
     {1153,5},
     [{atom,{1153,6},test},
      {var,{1153,11},'I'},
      {var,{1153,13},'Lbl'},
      {cons,
       {1153,17},
       {var,{1153,18},'A2'},
       {cons,
        {1153,21},
        {var,{1153,21},'A3'},
        {cons,
         {1153,24},
         {call,
          {1153,24},
          {atom,{1153,24},decode_field_flags},
          [{var,{1153,43},'U'}]},
         {nil,{1153,45}}}}}]}]},
  {clause,
   {1154,1},
   [{tuple,
     {1154,14},
     [{match,{1154,15},{atom,{1154,15},bs_utf8_size},{var,{1154,28},'I'}},
      {cons,
       {1154,30},
       {var,{1154,31},'Lbl'},
       {cons,
        {1154,35},
        {var,{1154,35},'Arg2'},
        {cons,{1154,40},{var,{1154,40},'Arg3'},{nil,{1154,44}}}}}]},
    {var,{1154,47},'_'},
    {var,{1154,49},'_'},
    {var,{1154,51},'_'}],
   [],
   [{debug_line,1155,501},
    {match,
     {1155,5},
     {cons,
      {1155,5},
      {var,{1155,6},'A2'},
      {cons,{1155,9},{var,{1155,9},'A3'},{nil,{1155,11}}}},
     {call,
      {1155,15},
      {atom,{1155,15},resolve_args},
      [{block,0,
        [{cons,
          {1155,28},
          {var,{1155,29},'Arg2'},
          {cons,{1155,34},{var,{1155,34},'Arg3'},{nil,{1155,38}}}}]}]}},
    {debug_line,1156,502},
    {tuple,
     {1156,5},
     [{var,{1156,6},'I'},
      {var,{1156,8},'Lbl'},
      {var,{1156,12},'A2'},
      {var,{1156,15},'A3'}]}]},
  {clause,
   {1157,1},
   [{tuple,
     {1157,14},
     [{match,{1157,15},{atom,{1157,15},bs_put_utf8},{var,{1157,27},'I'}},
      {cons,
       {1157,29},
       {var,{1157,30},'Lbl'},
       {cons,
        {1157,34},
        {tuple,{1157,34},[{atom,{1157,35},u},{var,{1157,37},'U'}]},
        {cons,{1157,40},{var,{1157,40},'Arg3'},{nil,{1157,44}}}}}]},
    {var,{1157,47},'_'},
    {var,{1157,49},'_'},
    {var,{1157,51},'_'}],
   [],
   [{debug_line,1158,503},
    {match,
     {1158,5},
     {var,{1158,5},'A3'},
     {call,{1158,10},{atom,{1158,10},resolve_arg},[{var,{1158,22},'Arg3'}]}},
    {debug_line,1159,504},
    {tuple,
     {1159,5},
     [{var,{1159,6},'I'},
      {var,{1159,8},'Lbl'},
      {call,
       {1159,12},
       {atom,{1159,12},decode_field_flags},
       [{var,{1159,31},'U'}]},
      {var,{1159,34},'A3'}]}]},
  {clause,
   {1160,1},
   [{tuple,
     {1160,14},
     [{match,{1160,15},{atom,{1160,15},bs_utf16_size},{var,{1160,29},'I'}},
      {cons,
       {1160,31},
       {var,{1160,32},'Lbl'},
       {cons,
        {1160,36},
        {var,{1160,36},'Arg2'},
        {cons,{1160,41},{var,{1160,41},'Arg3'},{nil,{1160,45}}}}}]},
    {var,{1160,48},'_'},
    {var,{1160,50},'_'},
    {var,{1160,52},'_'}],
   [],
   [{debug_line,1161,505},
    {match,
     {1161,5},
     {cons,
      {1161,5},
      {var,{1161,6},'A2'},
      {cons,{1161,9},{var,{1161,9},'A3'},{nil,{1161,11}}}},
     {call,
      {1161,15},
      {atom,{1161,15},resolve_args},
      [{block,0,
        [{cons,
          {1161,28},
          {var,{1161,29},'Arg2'},
          {cons,{1161,34},{var,{1161,34},'Arg3'},{nil,{1161,38}}}}]}]}},
    {debug_line,1162,506},
    {tuple,
     {1162,5},
     [{var,{1162,6},'I'},
      {var,{1162,8},'Lbl'},
      {var,{1162,12},'A2'},
      {var,{1162,15},'A3'}]}]},
  {clause,
   {1163,1},
   [{tuple,
     {1163,14},
     [{match,{1163,15},{atom,{1163,15},bs_put_utf16},{var,{1163,28},'I'}},
      {cons,
       {1163,30},
       {var,{1163,31},'Lbl'},
       {cons,
        {1163,35},
        {tuple,{1163,35},[{atom,{1163,36},u},{var,{1163,38},'U'}]},
        {cons,{1163,41},{var,{1163,41},'Arg3'},{nil,{1163,45}}}}}]},
    {var,{1163,48},'_'},
    {var,{1163,50},'_'},
    {var,{1163,52},'_'}],
   [],
   [{debug_line,1164,507},
    {match,
     {1164,5},
     {var,{1164,5},'A3'},
     {call,{1164,10},{atom,{1164,10},resolve_arg},[{var,{1164,22},'Arg3'}]}},
    {debug_line,1165,508},
    {tuple,
     {1165,5},
     [{var,{1165,6},'I'},
      {var,{1165,8},'Lbl'},
      {call,
       {1165,12},
       {atom,{1165,12},decode_field_flags},
       [{var,{1165,31},'U'}]},
      {var,{1165,34},'A3'}]}]},
  {clause,
   {1166,1},
   [{tuple,
     {1166,14},
     [{match,{1166,15},{atom,{1166,15},bs_put_utf32},{var,{1166,28},'I'}},
      {cons,
       {1166,30},
       {var,{1166,31},'Lbl'},
       {cons,
        {1166,35},
        {tuple,{1166,35},[{atom,{1166,36},u},{var,{1166,38},'U'}]},
        {cons,{1166,41},{var,{1166,41},'Arg3'},{nil,{1166,45}}}}}]},
    {var,{1166,48},'_'},
    {var,{1166,50},'_'},
    {var,{1166,52},'_'}],
   [],
   [{debug_line,1167,509},
    {match,
     {1167,5},
     {var,{1167,5},'A3'},
     {call,{1167,10},{atom,{1167,10},resolve_arg},[{var,{1167,22},'Arg3'}]}},
    {debug_line,1168,510},
    {tuple,
     {1168,5},
     [{var,{1168,6},'I'},
      {var,{1168,8},'Lbl'},
      {call,
       {1168,12},
       {atom,{1168,12},decode_field_flags},
       [{var,{1168,31},'U'}]},
      {var,{1168,34},'A3'}]}]},
  {clause,
   {1173,1},
   [{tuple,{1173,14},[{atom,{1173,15},on_load},{nil,{1173,23}}]},
    {var,{1173,27},'_'},
    {var,{1173,29},'_'},
    {var,{1173,31},'_'}],
   [],
   [{debug_line,1174,511},{atom,{1174,5},on_load}]},
  {clause,
   {1179,1},
   [{tuple,
     {1179,14},
     [{atom,{1179,15},recv_mark},
      {cons,{1179,25},{var,{1179,26},'Lbl'},{nil,{1179,29}}}]},
    {var,{1179,32},'_'},
    {var,{1179,34},'_'},
    {var,{1179,36},'_'}],
   [],
   [{debug_line,1180,512},
    {tuple,{1180,5},[{atom,{1180,6},recv_mark},{var,{1180,16},'Lbl'}]}]},
  {clause,
   {1181,1},
   [{tuple,
     {1181,14},
     [{atom,{1181,15},recv_set},
      {cons,{1181,24},{var,{1181,25},'Lbl'},{nil,{1181,28}}}]},
    {var,{1181,31},'_'},
    {var,{1181,33},'_'},
    {var,{1181,35},'_'}],
   [],
   [{debug_line,1182,513},
    {tuple,{1182,5},[{atom,{1182,6},recv_set},{var,{1182,15},'Lbl'}]}]},
  {clause,
   {1187,1},
   [{tuple,
     {1187,14},
     [{atom,{1187,15},line},
      {cons,{1187,20},{var,{1187,21},'Index'},{nil,{1187,26}}}]},
    {var,{1187,29},'_'},
    {var,{1187,31},'_'},
    {var,{1187,33},'_'}],
   [],
   [{debug_line,1188,514},
    {tuple,
     {1188,5},
     [{atom,{1188,6},line},
      {call,
       {1188,11},
       {atom,{1188,11},resolve_arg},
       [{var,{1188,23},'Index'}]}]}]},
  {clause,
   {1193,1},
   [{tuple,{1193,14},[{atom,{1193,15},put_map_assoc},{var,{1193,29},'Args'}]},
    {var,{1193,35},'_'},
    {var,{1193,37},'_'},
    {var,{1193,39},'_'}],
   [],
   [{debug_line,1194,515},
    {match,
     {1194,5},
     {cons,
      {1194,5},
      {var,{1194,6},'FLbl'},
      {cons,
       {1194,11},
       {var,{1194,11},'Src'},
       {cons,
        {1194,15},
        {var,{1194,15},'Dst'},
        {cons,
         {1194,19},
         {tuple,{1194,19},[{atom,{1194,20},u},{var,{1194,22},'N'}]},
         {cons,
          {1194,25},
          {tuple,
           {1194,25},
           [{tuple,{1194,26},[{atom,{1194,27},z},{integer,{1194,29},1}]},
            {tuple,{1194,32},[{atom,{1194,33},u},{var,{1194,35},'_Len'}]},
            {var,{1194,41},'List0'}]},
          {nil,{1194,47}}}}}}},
     {var,{1194,51},'Args'}},
    {debug_line,1195,516},
    {match,
     {1195,5},
     {var,{1195,5},'List'},
     {call,{1195,12},{atom,{1195,12},resolve_args},[{var,{1195,25},'List0'}]}},
    {debug_line,1196,517},
    {tuple,
     {1196,5},
     [{atom,{1196,6},put_map_assoc},
      {var,{1196,20},'FLbl'},
      {var,{1196,25},'Src'},
      {var,{1196,29},'Dst'},
      {var,{1196,33},'N'},
      {tuple,{1196,35},[{atom,{1196,36},list},{var,{1196,41},'List'}]}]}]},
  {clause,
   {1197,1},
   [{tuple,{1197,14},[{atom,{1197,15},put_map_exact},{var,{1197,29},'Args'}]},
    {var,{1197,35},'_'},
    {var,{1197,37},'_'},
    {var,{1197,39},'_'}],
   [],
   [{debug_line,1198,518},
    {match,
     {1198,5},
     {cons,
      {1198,5},
      {var,{1198,6},'FLbl'},
      {cons,
       {1198,11},
       {var,{1198,11},'Src'},
       {cons,
        {1198,15},
        {var,{1198,15},'Dst'},
        {cons,
         {1198,19},
         {tuple,{1198,19},[{atom,{1198,20},u},{var,{1198,22},'N'}]},
         {cons,
          {1198,25},
          {tuple,
           {1198,25},
           [{tuple,{1198,26},[{atom,{1198,27},z},{integer,{1198,29},1}]},
            {tuple,{1198,32},[{atom,{1198,33},u},{var,{1198,35},'_Len'}]},
            {var,{1198,41},'List0'}]},
          {nil,{1198,47}}}}}}},
     {var,{1198,51},'Args'}},
    {debug_line,1199,519},
    {match,
     {1199,5},
     {var,{1199,5},'List'},
     {call,{1199,12},{atom,{1199,12},resolve_args},[{var,{1199,25},'List0'}]}},
    {debug_line,1200,520},
    {tuple,
     {1200,5},
     [{atom,{1200,6},put_map_exact},
      {var,{1200,20},'FLbl'},
      {var,{1200,25},'Src'},
      {var,{1200,29},'Dst'},
      {var,{1200,33},'N'},
      {tuple,{1200,35},[{atom,{1200,36},list},{var,{1200,41},'List'}]}]}]},
  {clause,
   {1201,1},
   [{tuple,
     {1201,14},
     [{match,{1201,15},{atom,{1201,15},is_map},{var,{1201,22},'I'}},
      {var,{1201,24},'Args0'}]},
    {var,{1201,31},'_'},
    {var,{1201,33},'_'},
    {var,{1201,35},'_'}],
   [],
   [{debug_line,1202,521},
    {match,
     {1202,5},
     {cons,{1202,5},{var,{1202,6},'FLbl'},{var,{1202,11},'Args'}},
     {call,{1202,19},{atom,{1202,19},resolve_args},[{var,{1202,32},'Args0'}]}},
    {debug_line,1203,522},
    {tuple,
     {1203,5},
     [{atom,{1203,6},test},
      {var,{1203,11},'I'},
      {var,{1203,13},'FLbl'},
      {var,{1203,18},'Args'}]}]},
  {clause,
   {1204,1},
   [{tuple,
     {1204,14},
     [{atom,{1204,15},has_map_fields},{var,{1204,30},'Args0'}]},
    {var,{1204,37},'_'},
    {var,{1204,39},'_'},
    {var,{1204,41},'_'}],
   [],
   [{debug_line,1205,523},
    {match,
     {1205,5},
     {cons,
      {1205,5},
      {var,{1205,6},'FLbl'},
      {cons,
       {1205,11},
       {var,{1205,11},'Src'},
       {cons,
        {1205,15},
        {tuple,
         {1205,15},
         [{tuple,{1205,16},[{atom,{1205,17},z},{integer,{1205,19},1}]},
          {tuple,{1205,22},[{atom,{1205,23},u},{var,{1205,25},'_Len'}]},
          {var,{1205,31},'List0'}]},
        {nil,{1205,37}}}}},
     {var,{1205,41},'Args0'}},
    {debug_line,1206,524},
    {match,
     {1206,5},
     {var,{1206,5},'List'},
     {call,{1206,12},{atom,{1206,12},resolve_args},[{var,{1206,25},'List0'}]}},
    {debug_line,1207,525},
    {tuple,
     {1207,5},
     [{atom,{1207,6},test},
      {atom,{1207,11},has_map_fields},
      {var,{1207,26},'FLbl'},
      {var,{1207,31},'Src'},
      {tuple,{1207,35},[{atom,{1207,36},list},{var,{1207,41},'List'}]}]}]},
  {clause,
   {1208,1},
   [{tuple,
     {1208,14},
     [{atom,{1208,15},get_map_elements},{var,{1208,32},'Args0'}]},
    {var,{1208,39},'_'},
    {var,{1208,41},'_'},
    {var,{1208,43},'_'}],
   [],
   [{debug_line,1209,526},
    {match,
     {1209,5},
     {cons,
      {1209,5},
      {var,{1209,6},'FLbl'},
      {cons,
       {1209,11},
       {var,{1209,11},'Src'},
       {cons,
        {1209,15},
        {tuple,
         {1209,15},
         [{tuple,{1209,16},[{atom,{1209,17},z},{integer,{1209,19},1}]},
          {tuple,{1209,22},[{atom,{1209,23},u},{var,{1209,25},'_Len'}]},
          {var,{1209,31},'List0'}]},
        {nil,{1209,37}}}}},
     {var,{1209,41},'Args0'}},
    {debug_line,1210,527},
    {match,
     {1210,5},
     {var,{1210,5},'List'},
     {call,{1210,12},{atom,{1210,12},resolve_args},[{var,{1210,25},'List0'}]}},
    {debug_line,1211,528},
    {tuple,
     {1211,5},
     [{atom,{1211,6},get_map_elements},
      {var,{1211,23},'FLbl'},
      {var,{1211,28},'Src'},
      {tuple,{1211,32},[{atom,{1211,33},list},{var,{1211,38},'List'}]}]}]},
  {clause,
   {1217,1},
   [{tuple,{1217,14},[{atom,{1217,15},build_stacktrace},{nil,{1217,32}}]},
    {var,{1217,36},'_'},
    {var,{1217,38},'_'},
    {var,{1217,40},'_'}],
   [],
   [{debug_line,1218,529},{atom,{1218,5},build_stacktrace}]},
  {clause,
   {1219,1},
   [{tuple,{1219,14},[{atom,{1219,15},raw_raise},{nil,{1219,25}}]},
    {var,{1219,29},'_'},
    {var,{1219,31},'_'},
    {var,{1219,33},'_'}],
   [],
   [{debug_line,1220,530},{atom,{1220,5},raw_raise}]},
  {clause,
   {1221,1},
   [{tuple,
     {1221,14},
     [{atom,{1221,15},get_hd},
      {cons,
       {1221,22},
       {var,{1221,23},'Src'},
       {cons,{1221,27},{var,{1221,27},'Dst'},{nil,{1221,30}}}}]},
    {var,{1221,33},'_'},
    {var,{1221,35},'_'},
    {var,{1221,37},'_'}],
   [],
   [{debug_line,1222,531},
    {tuple,
     {1222,5},
     [{atom,{1222,6},get_hd},{var,{1222,13},'Src'},{var,{1222,17},'Dst'}]}]},
  {clause,
   {1223,1},
   [{tuple,
     {1223,14},
     [{atom,{1223,15},get_tl},
      {cons,
       {1223,22},
       {var,{1223,23},'Src'},
       {cons,{1223,27},{var,{1223,27},'Dst'},{nil,{1223,30}}}}]},
    {var,{1223,33},'_'},
    {var,{1223,35},'_'},
    {var,{1223,37},'_'}],
   [],
   [{debug_line,1224,532},
    {tuple,
     {1224,5},
     [{atom,{1224,6},get_tl},{var,{1224,13},'Src'},{var,{1224,17},'Dst'}]}]},
  {clause,
   {1230,1},
   [{tuple,
     {1230,14},
     [{atom,{1230,15},put_tuple2},
      {cons,
       {1230,26},
       {var,{1230,27},'Dst'},
       {cons,
        {1230,31},
        {tuple,
         {1230,31},
         [{tuple,{1230,32},[{atom,{1230,33},z},{integer,{1230,35},1}]},
          {tuple,{1230,38},[{atom,{1230,39},u},{var,{1230,41},'_'}]},
          {var,{1230,44},'List0'}]},
        {nil,{1230,50}}}}]},
    {var,{1230,53},'_'},
    {var,{1230,55},'_'},
    {var,{1230,57},'_'}],
   [],
   [{debug_line,1231,533},
    {match,
     {1231,5},
     {var,{1231,5},'List'},
     {call,{1231,12},{atom,{1231,12},resolve_args},[{var,{1231,25},'List0'}]}},
    {debug_line,1232,534},
    {tuple,
     {1232,5},
     [{atom,{1232,6},put_tuple2},
      {var,{1232,17},'Dst'},
      {tuple,{1232,21},[{atom,{1232,22},list},{var,{1232,27},'List'}]}]}]},
  {clause,
   {1233,1},
   [{tuple,
     {1233,14},
     [{match,{1233,15},{atom,{1233,15},bs_start_match3},{var,{1233,31},'I'}},
      {cons,
       {1233,33},
       {var,{1233,34},'Fail'},
       {cons,
        {1233,39},
        {var,{1233,39},'Bin'},
        {cons,
         {1233,43},
         {tuple,{1233,43},[{atom,{1233,44},u},{var,{1233,46},'Live'}]},
         {cons,{1233,52},{var,{1233,52},'Dst'},{nil,{1233,55}}}}}}]},
    {var,{1233,58},'_'},
    {var,{1233,60},'_'},
    {var,{1233,62},'_'}],
   [],
   [{debug_line,1234,535},
    {tuple,
     {1234,5},
     [{atom,{1234,6},test},
      {var,{1234,11},'I'},
      {var,{1234,13},'Fail'},
      {var,{1234,18},'Live'},
      {cons,{1234,23},{var,{1234,24},'Bin'},{nil,{1234,27}}},
      {var,{1234,29},'Dst'}]}]},
  {clause,
   {1235,1},
   [{tuple,
     {1235,14},
     [{atom,{1235,15},bs_get_tail},
      {cons,
       {1235,27},
       {var,{1235,28},'Src'},
       {cons,
        {1235,32},
        {var,{1235,32},'Dst'},
        {cons,
         {1235,36},
         {tuple,{1235,36},[{atom,{1235,37},u},{var,{1235,39},'Live'}]},
         {nil,{1235,44}}}}}]},
    {var,{1235,47},'_'},
    {var,{1235,49},'_'},
    {var,{1235,51},'_'}],
   [],
   [{debug_line,1236,536},
    {tuple,
     {1236,5},
     [{atom,{1236,6},bs_get_tail},
      {var,{1236,18},'Src'},
      {var,{1236,22},'Dst'},
      {var,{1236,26},'Live'}]}]},
  {clause,
   {1237,1},
   [{tuple,
     {1237,14},
     [{atom,{1237,15},bs_get_position},
      {cons,
       {1237,31},
       {var,{1237,32},'Src'},
       {cons,
        {1237,36},
        {var,{1237,36},'Dst'},
        {cons,
         {1237,40},
         {tuple,{1237,40},[{atom,{1237,41},u},{var,{1237,43},'Live'}]},
         {nil,{1237,48}}}}}]},
    {var,{1237,51},'_'},
    {var,{1237,53},'_'},
    {var,{1237,55},'_'}],
   [],
   [{debug_line,1238,537},
    {tuple,
     {1238,5},
     [{atom,{1238,6},bs_get_position},
      {var,{1238,22},'Src'},
      {var,{1238,26},'Dst'},
      {var,{1238,30},'Live'}]}]},
  {clause,
   {1239,1},
   [{tuple,
     {1239,14},
     [{atom,{1239,15},bs_set_position},
      {cons,
       {1239,31},
       {var,{1239,32},'Src'},
       {cons,{1239,36},{var,{1239,36},'Dst'},{nil,{1239,39}}}}]},
    {var,{1239,42},'_'},
    {var,{1239,44},'_'},
    {var,{1239,46},'_'}],
   [],
   [{debug_line,1240,538},
    {tuple,
     {1240,5},
     [{atom,{1240,6},bs_set_position},
      {var,{1240,22},'Src'},
      {var,{1240,26},'Dst'}]}]},
  {clause,
   {1246,1},
   [{tuple,
     {1246,14},
     [{atom,{1246,15},bs_start_match4},
      {cons,
       {1246,31},
       {var,{1246,32},'Fail'},
       {cons,
        {1246,37},
        {tuple,{1246,37},[{atom,{1246,38},u},{var,{1246,40},'Live'}]},
        {cons,
         {1246,46},
         {var,{1246,46},'Src'},
         {cons,{1246,50},{var,{1246,50},'Dst'},{nil,{1246,53}}}}}}]},
    {var,{1246,56},'_'},
    {var,{1246,58},'_'},
    {var,{1246,60},'_'}],
   [],
   [{debug_line,1247,539},
    {tuple,
     {1247,5},
     [{atom,{1247,6},bs_start_match4},
      {var,{1247,22},'Fail'},
      {var,{1247,27},'Live'},
      {var,{1247,32},'Src'},
      {var,{1247,36},'Dst'}]}]},
  {clause,
   {1248,1},
   [{tuple,
     {1248,14},
     [{atom,{1248,15},swap},
      {match,
       {1248,20},
       {cons,
        {1248,20},
        {var,{1248,21},'_'},
        {cons,{1248,23},{var,{1248,23},'_'},{nil,{1248,24}}}},
       {var,{1248,26},'List'}}]},
    {var,{1248,32},'_'},
    {var,{1248,34},'_'},
    {var,{1248,36},'_'}],
   [],
   [{debug_line,1249,540},
    {match,
     {1249,5},
     {cons,
      {1249,5},
      {var,{1249,6},'R1'},
      {cons,{1249,9},{var,{1249,9},'R2'},{nil,{1249,11}}}},
     {call,{1249,15},{atom,{1249,15},resolve_args},[{var,{1249,28},'List'}]}},
    {debug_line,1250,541},
    {tuple,
     {1250,5},
     [{atom,{1250,6},swap},{var,{1250,11},'R1'},{var,{1250,14},'R2'}]}]},
  {clause,
   {1256,1},
   [{tuple,
     {1256,14},
     [{atom,{1256,15},init_yregs},
      {cons,
       {1256,26},
       {tuple,
        {1256,27},
        [{tuple,{1256,28},[{atom,{1256,29},z},{integer,{1256,31},1}]},
         {tuple,{1256,34},[{atom,{1256,35},u},{var,{1256,37},'_'}]},
         {var,{1256,40},'List0'}]},
       {nil,{1256,46}}}]},
    {var,{1256,49},'_'},
    {var,{1256,51},'_'},
    {var,{1256,53},'_'}],
   [],
   [{debug_line,1257,542},
    {match,
     {1257,5},
     {var,{1257,5},'List'},
     {call,{1257,12},{atom,{1257,12},resolve_args},[{var,{1257,25},'List0'}]}},
    {debug_line,1258,543},
    {tuple,
     {1258,5},
     [{atom,{1258,6},init_yregs},
      {tuple,{1258,17},[{atom,{1258,18},list},{var,{1258,23},'List'}]}]}]},
  {clause,
   {1259,1},
   [{tuple,
     {1259,14},
     [{atom,{1259,15},recv_marker_bind},
      {cons,
       {1259,32},
       {var,{1259,33},'Mark'},
       {cons,{1259,38},{var,{1259,38},'Ref'},{nil,{1259,41}}}}]},
    {var,{1259,44},'_'},
    {var,{1259,46},'_'},
    {var,{1259,48},'_'}],
   [],
   [{debug_line,1260,544},
    {tuple,
     {1260,5},
     [{atom,{1260,6},recv_marker_bind},
      {var,{1260,23},'Mark'},
      {var,{1260,28},'Ref'}]}]},
  {clause,
   {1261,1},
   [{tuple,
     {1261,14},
     [{atom,{1261,15},recv_marker_clear},
      {cons,{1261,33},{var,{1261,34},'Reg'},{nil,{1261,37}}}]},
    {var,{1261,40},'_'},
    {var,{1261,42},'_'},
    {var,{1261,44},'_'}],
   [],
   [{debug_line,1262,545},
    {tuple,
     {1262,5},
     [{atom,{1262,6},recv_marker_clear},{var,{1262,24},'Reg'}]}]},
  {clause,
   {1263,1},
   [{tuple,
     {1263,14},
     [{atom,{1263,15},recv_marker_reserve},
      {cons,{1263,35},{var,{1263,36},'Reg'},{nil,{1263,39}}}]},
    {var,{1263,42},'_'},
    {var,{1263,44},'_'},
    {var,{1263,46},'_'}],
   [],
   [{debug_line,1264,546},
    {tuple,
     {1264,5},
     [{atom,{1264,6},recv_marker_reserve},{var,{1264,26},'Reg'}]}]},
  {clause,
   {1265,1},
   [{tuple,
     {1265,14},
     [{atom,{1265,15},recv_marker_use},
      {cons,{1265,31},{var,{1265,32},'Reg'},{nil,{1265,35}}}]},
    {var,{1265,38},'_'},
    {var,{1265,40},'_'},
    {var,{1265,42},'_'}],
   [],
   [{debug_line,1266,547},
    {tuple,{1266,5},[{atom,{1266,6},recv_marker_use},{var,{1266,22},'Reg'}]}]},
  {clause,
   {1272,1},
   [{tuple,
     {1272,14},
     [{atom,{1272,15},bs_create_bin},
      {cons,
       {1273,15},
       {tuple,
        {1273,16},
        [{var,{1273,17},'Fail'},
         {tuple,{1273,22},[{atom,{1273,23},u},{var,{1273,25},'Heap'}]},
         {tuple,{1273,31},[{atom,{1273,32},u},{var,{1273,34},'Live'}]},
         {tuple,{1273,40},[{atom,{1273,41},u},{var,{1273,43},'Unit'}]},
         {var,{1273,49},'Dst'},
         {tuple,{1273,53},[{atom,{1273,54},z},{integer,{1273,56},1}]},
         {tuple,{1273,59},[{atom,{1273,60},u},{var,{1273,62},'_'}]},
         {var,{1273,65},'List0'}]},
       {nil,{1273,71}}}]},
    {var,{1274,14},'_'},
    {var,{1274,17},'Strings'},
    {var,{1274,26},'_'}],
   [],
   [{debug_line,1275,548},
    {match,
     {1275,5},
     {var,{1275,5},'List'},
     {call,
      {1275,12},
      {atom,{1275,12},resolve_bs_create_bin_list},
      [{var,{1275,39},'List0'},{var,{1275,46},'Strings'}]}},
    {debug_line,1276,549},
    {tuple,
     {1276,5},
     [{atom,{1276,6},bs_create_bin},
      {var,{1276,20},'Fail'},
      {var,{1276,25},'Heap'},
      {var,{1276,30},'Live'},
      {var,{1276,35},'Unit'},
      {var,{1276,40},'Dst'},
      {tuple,{1276,44},[{atom,{1276,45},list},{var,{1276,50},'List'}]}]}]},
  {clause,
   {1277,1},
   [{tuple,{1277,14},[{atom,{1277,15},nif_start},{nil,{1277,25}}]},
    {var,{1277,29},'_'},
    {var,{1277,31},'_'},
    {var,{1277,33},'_'}],
   [],
   [{debug_line,1278,550},{atom,{1278,5},nif_start}]},
  {clause,
   {1279,1},
   [{tuple,
     {1279,14},
     [{atom,{1279,15},badrecord},
      {cons,{1279,25},{var,{1279,26},'Arg'},{nil,{1279,29}}}]},
    {var,{1279,32},'_'},
    {var,{1279,34},'_'},
    {var,{1279,36},'_'}],
   [],
   [{debug_line,1280,551},
    {tuple,
     {1280,5},
     [{atom,{1280,6},badrecord},
      {call,
       {1280,16},
       {atom,{1280,16},resolve_arg},
       [{var,{1280,28},'Arg'}]}]}]},
  {clause,
   {1286,1},
   [{tuple,
     {1286,14},
     [{atom,{1286,15},update_record},
      {cons,
       {1287,15},
       {var,{1287,16},'Hint'},
       {cons,
        {1287,21},
        {tuple,{1287,21},[{atom,{1287,22},u},{var,{1287,24},'Size'}]},
        {cons,
         {1287,30},
         {var,{1287,30},'Src'},
         {cons,
          {1287,34},
          {var,{1287,34},'Dst'},
          {cons,
           {1287,38},
           {tuple,
            {1287,38},
            [{tuple,
              {1287,39},
              [{tuple,{1287,40},[{atom,{1287,41},z},{integer,{1287,43},1}]},
               {tuple,{1287,46},[{atom,{1287,47},u},{var,{1287,49},'_'}]},
               {var,{1287,52},'List0'}]}]},
           {nil,{1287,59}}}}}}}]},
    {var,{1287,62},'_'},
    {var,{1287,64},'_'},
    {var,{1287,66},'_'}],
   [],
   [{debug_line,1288,552},
    {match,
     {1288,5},
     {var,{1288,5},'List'},
     {call,{1288,12},{atom,{1288,12},resolve_args},[{var,{1288,25},'List0'}]}},
    {debug_line,1289,553},
    {tuple,
     {1289,5},
     [{atom,{1289,6},update_record},
      {var,{1289,20},'Hint'},
      {var,{1289,25},'Size'},
      {var,{1289,30},'Src'},
      {var,{1289,34},'Dst'},
      {tuple,{1289,38},[{atom,{1289,39},list},{var,{1289,44},'List'}]}]}]},
  {clause,
   {1290,1},
   [{tuple,
     {1290,14},
     [{atom,{1290,15},bs_match},
      {cons,
       {1290,24},
       {tuple,
        {1290,25},
        [{var,{1290,26},'Fail'},
         {var,{1290,31},'Ctx'},
         {tuple,{1290,35},[{atom,{1290,36},z},{integer,{1290,38},1}]},
         {tuple,{1290,41},[{atom,{1290,42},u},{var,{1290,44},'_'}]},
         {var,{1290,47},'Args'}]},
       {nil,{1290,52}}}]},
    {var,{1290,55},'_'},
    {var,{1290,57},'_'},
    {var,{1290,59},'_'}],
   [],
   [{debug_line,1291,554},
    {match,
     {1291,5},
     {var,{1291,5},'List'},
     {call,{1291,12},{atom,{1291,12},resolve_args},[{var,{1291,25},'Args'}]}},
    {debug_line,1292,555},
    {match,
     {1292,5},
     {var,{1292,5},'Commands'},
     {call,
      {1292,16},
      {atom,{1292,16},resolve_bs_match_commands},
      [{var,{1292,42},'List'}]}},
    {debug_line,1293,556},
    {tuple,
     {1293,5},
     [{atom,{1293,6},bs_match},
      {var,{1293,15},'Fail'},
      {var,{1293,20},'Ctx'},
      {tuple,
       {1293,24},
       [{atom,{1293,25},commands},{var,{1293,34},'Commands'}]}]}]},
  {clause,
   {1299,1},
   [{tuple,
     {1299,14},
     [{atom,{1299,15},executable_line},
      {cons,
       {1299,31},
       {var,{1299,32},'Location'},
       {cons,{1299,41},{var,{1299,41},'Index'},{nil,{1299,46}}}}]},
    {var,{1299,49},'_'},
    {var,{1299,51},'_'},
    {var,{1299,53},'_'}],
   [],
   [{debug_line,1300,557},
    {tuple,
     {1300,5},
     [{atom,{1300,6},executable_line},
      {call,
       {1300,22},
       {atom,{1300,22},resolve_arg},
       [{var,{1300,34},'Location'}]},
      {call,
       {1300,44},
       {atom,{1300,44},resolve_arg},
       [{var,{1300,56},'Index'}]}]}]},
  {clause,
   {1306,1},
   [{tuple,
     {1306,14},
     [{atom,{1306,15},debug_line},
      {cons,
       {1306,26},
       {var,{1306,27},'Location'},
       {cons,
        {1306,36},
        {var,{1306,36},'Index'},
        {cons,{1306,42},{var,{1306,42},'Live'},{nil,{1306,46}}}}}]},
    {var,{1306,49},'_'},
    {var,{1306,51},'_'},
    {var,{1306,53},'_'}],
   [],
   [{debug_line,1307,558},
    {tuple,
     {1307,5},
     [{atom,{1307,6},debug_line},
      {call,
       {1307,17},
       {atom,{1307,17},resolve_arg},
       [{var,{1307,29},'Location'}]},
      {call,{1307,39},{atom,{1307,39},resolve_arg},[{var,{1307,51},'Index'}]},
      {call,
       {1307,58},
       {atom,{1307,58},resolve_arg},
       [{var,{1307,70},'Live'}]}]}]},
  {clause,
   {1312,1},
   [{var,{1312,14},'X'},
    {var,{1312,16},'_'},
    {var,{1312,18},'_'},
    {var,{1312,20},'_'}],
   [],
   [{debug_line,1312,559},
    {call,
     {1312,27},
     {remote,{1312,27},{atom,{1312,27},erlang},{atom,{1312,27},exit}},
     [{block,0,
       [{tuple,
         {1312,27},
         [{atom,{1312,27},beam_disasm},
          {integer,{1312,27},1312},
          {tuple,
           {1312,32},
           [{atom,{1312,33},resolve_inst},{var,{1312,46},'X'}]}]}]}]}]}]}.
{function,{1318,1},
          resolve_args,1,
          [{clause,{1318,1},
                   [{var,{1318,1},'_'}],
                   [[{call,{1318,1},
                           {remote,{1318,1},
                                   {atom,{1318,1},fake},
                                   {atom,{1318,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1318,560},{atom,{1318,1},ignore}]},
           {clause,{1318,1},
                   [{var,{1318,14},'Args'}],
                   [],
                   [{debug_line,1318,561},
                    {lc,{1318,23},
                        {block,0,
                               [{call,{1318,24},
                                      {atom,{1318,24},resolve_arg},
                                      [{var,{1318,36},'A'}]}]},
                        [{block,0,[{atom,{1318,47},true}]},
                         {generate,{1318,44},
                                   {var,{1318,42},'A'},
                                   {var,{1318,47},'Args'}}]}]}]}.
{function,{1320,1},
          resolve_arg,1,
          [{clause,{1320,1},
                   [{var,{1320,1},'_'}],
                   [[{call,{1320,1},
                           {remote,{1320,1},
                                   {atom,{1320,1},fake},
                                   {atom,{1320,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1320,562},{atom,{1320,1},ignore}]},
           {clause,{1320,1},
                   [{match,{1320,13},
                           {tuple,{1320,13},
                                  [{atom,{1320,13},tr},
                                   {var,{1320,19},'Reg'},
                                   {var,{1320,13},'_'}]},
                           {var,{1320,26},'Arg'}}],
                   [],
                   [{debug_line,1320,563},
                    {match,{1320,34},
                           {var,{1320,34},'_'},
                           {call,{1320,38},
                                 {atom,{1320,38},resolve_arg},
                                 [{var,{1320,50},'Reg'}]}},
                    {var,{1320,56},'Arg'}]},
           {clause,{1321,1},
                   [{match,{1321,13},
                           {tuple,{1321,13},
                                  [{atom,{1321,14},x},{var,{1321,16},'N'}]},
                           {var,{1321,21},'Arg'}}],
                   [[{call,{1321,31},
                           {remote,{1321,31},
                                   {atom,{1321,31},erlang},
                                   {atom,{1321,31},is_integer}},
                           [{var,{1321,42},'N'}]},
                     {op,{1321,48},
                         '>=',
                         {var,{1321,46},'N'},
                         {integer,{1321,51},0}}]],
                   [{debug_line,1321,565},{var,{1321,56},'Arg'}]},
           {clause,{1322,1},
                   [{match,{1322,13},
                           {tuple,{1322,13},
                                  [{atom,{1322,14},y},{var,{1322,16},'N'}]},
                           {var,{1322,21},'Arg'}}],
                   [[{call,{1322,31},
                           {remote,{1322,31},
                                   {atom,{1322,31},erlang},
                                   {atom,{1322,31},is_integer}},
                           [{var,{1322,42},'N'}]},
                     {op,{1322,48},
                         '>=',
                         {var,{1322,46},'N'},
                         {integer,{1322,51},0}}]],
                   [{debug_line,1322,566},{var,{1322,56},'Arg'}]},
           {clause,{1323,1},
                   [{match,{1323,13},
                           {tuple,{1323,13},
                                  [{atom,{1323,14},fr},{var,{1323,17},'N'}]},
                           {var,{1323,22},'Arg'}}],
                   [[{call,{1323,32},
                           {remote,{1323,32},
                                   {atom,{1323,32},erlang},
                                   {atom,{1323,32},is_integer}},
                           [{var,{1323,43},'N'}]},
                     {op,{1323,49},
                         '>=',
                         {var,{1323,47},'N'},
                         {integer,{1323,52},0}}]],
                   [{debug_line,1323,567},{var,{1323,57},'Arg'}]},
           {clause,{1324,1},
                   [{match,{1324,13},
                           {tuple,{1324,13},
                                  [{atom,{1324,14},f},{var,{1324,16},'N'}]},
                           {var,{1324,21},'Arg'}}],
                   [[{call,{1324,31},
                           {remote,{1324,31},
                                   {atom,{1324,31},erlang},
                                   {atom,{1324,31},is_integer}},
                           [{var,{1324,42},'N'}]},
                     {op,{1324,48},
                         '>=',
                         {var,{1324,46},'N'},
                         {integer,{1324,51},0}}]],
                   [{debug_line,1324,568},{var,{1324,56},'Arg'}]},
           {clause,{1325,1},
                   [{match,{1325,13},
                           {tuple,{1325,13},
                                  [{atom,{1325,14},u},{var,{1325,16},'_'}]},
                           {var,{1325,21},'Arg'}}],
                   [],
                   [{debug_line,1325,569},
                    {call,{1325,29},
                          {atom,{1325,29},resolve_arg_unsigned},
                          [{var,{1325,50},'Arg'}]}]},
           {clause,{1326,1},
                   [{match,{1326,13},
                           {tuple,{1326,13},
                                  [{atom,{1326,14},i},{var,{1326,16},'_'}]},
                           {var,{1326,21},'Arg'}}],
                   [],
                   [{debug_line,1326,570},
                    {call,{1326,29},
                          {atom,{1326,29},resolve_arg_integer},
                          [{var,{1326,49},'Arg'}]}]},
           {clause,{1327,1},
                   [{match,{1327,13},
                           {tuple,{1327,13},
                                  [{atom,{1327,14},atom},
                                   {var,{1327,19},'Atom'}]},
                           {var,{1327,27},'Arg'}}],
                   [[{call,{1327,37},
                           {remote,{1327,37},
                                   {atom,{1327,37},erlang},
                                   {atom,{1327,37},is_atom}},
                           [{var,{1327,45},'Atom'}]}]],
                   [{debug_line,1327,571},{var,{1327,54},'Arg'}]},
           {clause,{1328,1},
                   [{match,{1328,13},
                           {tuple,{1328,13},
                                  [{atom,{1328,14},float},
                                   {var,{1328,20},'F'}]},
                           {var,{1328,25},'Arg'}}],
                   [[{call,{1328,35},
                           {remote,{1328,35},
                                   {atom,{1328,35},erlang},
                                   {atom,{1328,35},is_float}},
                           [{var,{1328,44},'F'}]}]],
                   [{debug_line,1328,572},{var,{1328,50},'Arg'}]},
           {clause,{1329,1},
                   [{match,{1329,13},
                           {tuple,{1329,13},
                                  [{atom,{1329,14},literal},
                                   {var,{1329,22},'_'}]},
                           {var,{1329,27},'Arg'}}],
                   [],
                   [{debug_line,1329,573},{var,{1329,35},'Arg'}]},
           {clause,{1330,1},
                   [{atom,{1330,13},nil}],
                   [],
                   [{debug_line,1330,574},{atom,{1330,21},nil}]}]}.
{function,{1332,1},
          resolve_arg_unsigned,1,
          [{clause,{1332,1},
                   [{var,{1332,1},'_'}],
                   [[{call,{1332,1},
                           {remote,{1332,1},
                                   {atom,{1332,1},fake},
                                   {atom,{1332,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1332,575},{atom,{1332,1},ignore}]},
           {clause,{1332,1},
                   [{tuple,{1332,22},
                           [{atom,{1332,23},u},{var,{1332,25},'N'}]}],
                   [[{call,{1332,34},
                           {remote,{1332,34},
                                   {atom,{1332,34},erlang},
                                   {atom,{1332,34},is_integer}},
                           [{var,{1332,45},'N'}]},
                     {op,{1332,51},
                         '>=',
                         {var,{1332,49},'N'},
                         {integer,{1332,54},0}}]],
                   [{debug_line,1332,576},{var,{1332,59},'N'}]}]}.
{function,{1334,1},
          resolve_arg_integer,1,
          [{clause,{1334,1},
                   [{var,{1334,1},'_'}],
                   [[{call,{1334,1},
                           {remote,{1334,1},
                                   {atom,{1334,1},fake},
                                   {atom,{1334,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1334,577},{atom,{1334,1},ignore}]},
           {clause,{1334,1},
                   [{tuple,{1334,21},
                           [{atom,{1334,22},i},{var,{1334,24},'N'}]}],
                   [[{call,{1334,33},
                           {remote,{1334,33},
                                   {atom,{1334,33},erlang},
                                   {atom,{1334,33},is_integer}},
                           [{var,{1334,44},'N'}]}]],
                   [{debug_line,1334,578},
                    {tuple,{1334,50},
                           [{atom,{1334,51},integer},{var,{1334,59},'N'}]}]}]}.
{function,
 {1340,1},
 resolve_bs_create_bin_list,2,
 [{clause,
   {1340,1},
   [{var,{1340,1},'_'},{var,{1340,1},'_'}],
   [[{call,
      {1340,1},
      {remote,{1340,1},{atom,{1340,1},fake},{atom,{1340,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1340,579},{atom,{1340,1},ignore}]},
  {clause,
   {1340,1},
   [{cons,
     {1341,3},
     {match,
      {1341,4},
      {tuple,{1341,4},[{atom,{1341,5},atom},{atom,{1341,10},string}]},
      {var,{1341,18},'Type'}},
     {cons,
      {1341,23},
      {var,{1341,23},'Seg0'},
      {cons,
       {1341,28},
       {var,{1341,28},'Unit0'},
       {cons,
        {1341,34},
        {var,{1341,34},'Flags'},
        {cons,
         {1341,40},
         {var,{1341,40},'Offset0'},
         {cons,{1341,48},{var,{1341,48},'Size0'},{var,{1341,54},'Rest'}}}}}}},
    {var,{1341,61},'Strings'}],
   [],
   [{debug_line,1342,580},
    {match,
     {1342,5},
     {cons,
      {1342,5},
      {var,{1342,6},'Seg'},
      {cons,
       {1342,10},
       {var,{1342,10},'Unit'},
       {cons,
        {1342,15},
        {var,{1342,15},'Offset'},
        {cons,
         {1342,22},
         {match,
          {1342,22},
          {tuple,{1342,22},[{atom,{1342,23},integer},{var,{1342,31},'Len'}]},
          {var,{1342,36},'Size'}},
         {nil,{1342,40}}}}}},
     {call,
      {1343,9},
      {atom,{1343,9},resolve_args},
      [{block,0,
        [{debug_line,1343,581},
         {cons,
          {1343,22},
          {var,{1343,23},'Seg0'},
          {cons,
           {1343,28},
           {var,{1343,28},'Unit0'},
           {cons,
            {1343,34},
            {var,{1343,34},'Offset0'},
            {cons,{1343,42},{var,{1343,42},'Size0'},{nil,{1343,47}}}}}}]}]}},
    {debug_line,1344,582},
    {match,
     {1344,5},
     {bin,
      {1344,5},
      [{bin_element,
        {1344,7},
        {var,{1344,7},'_'},
        {var,{1344,9},'Offset'},
        [binary]},
       {bin_element,
        {1344,23},
        {var,{1344,23},'Bin'},
        {var,{1344,27},'Len'},
        [binary]},
       {bin_element,{1344,38},{var,{1344,38},'_'},default,[binary]}]},
     {var,{1344,51},'Strings'}},
    {debug_line,1345,583},
    {cons,
     {1345,5},
     {var,{1345,6},'Type'},
     {cons,
      {1345,11},
      {var,{1345,11},'Seg'},
      {cons,
       {1345,15},
       {var,{1345,15},'Unit'},
       {cons,
        {1345,20},
        {var,{1345,20},'Flags'},
        {cons,
         {1345,26},
         {tuple,{1345,26},[{atom,{1345,27},string},{var,{1345,34},'Bin'}]},
         {cons,
          {1345,39},
          {var,{1345,39},'Size'},
          {call,
           {1346,6},
           {atom,{1346,6},resolve_bs_create_bin_list},
           [{var,{1346,33},'Rest'},{var,{1346,39},'Strings'}]}}}}}}}]},
  {clause,
   {1347,1},
   [{cons,
     {1347,28},
     {var,{1347,29},'Type'},
     {cons,
      {1347,34},
      {var,{1347,34},'Seg0'},
      {cons,
       {1347,39},
       {var,{1347,39},'Unit0'},
       {cons,
        {1347,45},
        {var,{1347,45},'Flags'},
        {cons,
         {1347,51},
         {var,{1347,51},'Val0'},
         {cons,{1347,56},{var,{1347,56},'Size0'},{var,{1347,62},'Rest'}}}}}}},
    {var,{1347,69},'Strings'}],
   [],
   [{debug_line,1348,584},
    {match,
     {1348,5},
     {cons,
      {1348,5},
      {var,{1348,6},'Seg'},
      {cons,
       {1348,10},
       {var,{1348,10},'Unit'},
       {cons,
        {1348,15},
        {var,{1348,15},'Val'},
        {cons,{1348,19},{var,{1348,19},'Size'},{nil,{1348,23}}}}}},
     {call,
      {1348,27},
      {atom,{1348,27},resolve_args},
      [{block,0,
        [{cons,
          {1348,40},
          {var,{1348,41},'Seg0'},
          {cons,
           {1348,46},
           {var,{1348,46},'Unit0'},
           {cons,
            {1348,52},
            {var,{1348,52},'Val0'},
            {cons,{1348,57},{var,{1348,57},'Size0'},{nil,{1348,62}}}}}}]}]}},
    {debug_line,1349,585},
    {cons,
     {1349,5},
     {var,{1349,6},'Type'},
     {cons,
      {1349,11},
      {var,{1349,11},'Seg'},
      {cons,
       {1349,15},
       {var,{1349,15},'Unit'},
       {cons,
        {1349,20},
        {var,{1349,20},'Flags'},
        {cons,
         {1349,26},
         {var,{1349,26},'Val'},
         {cons,
          {1349,30},
          {var,{1349,30},'Size'},
          {call,
           {1350,6},
           {atom,{1350,6},resolve_bs_create_bin_list},
           [{var,{1350,33},'Rest'},{var,{1350,39},'Strings'}]}}}}}}}]},
  {clause,
   {1351,1},
   [{nil,{1351,28}},{var,{1351,32},'_Str'}],
   [],
   [{debug_line,1352,586},{nil,{1352,5}}]}]}.
{function,
    {1358,1},
    resolve_bs_match_commands,1,
    [{clause,
         {1358,1},
         [{var,{1358,1},'_'}],
         [[{call,
               {1358,1},
               {remote,
                   {1358,1},
                   {atom,{1358,1},fake},
                   {atom,{1358,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1358,587},{atom,{1358,1},ignore}]},
     {clause,
         {1358,1},
         [{cons,
              {1358,27},
              {tuple,
                  {1358,28},
                  [{atom,{1358,29},atom},{atom,{1358,34},ensure_at_least}]},
              {cons,
                  {1358,51},
                  {var,{1358,51},'Size'},
                  {cons,
                      {1358,56},
                      {var,{1358,56},'Unit'},
                      {var,{1358,61},'Rest'}}}}],
         [],
         [{debug_line,1359,588},
          {cons,
              {1359,5},
              {tuple,
                  {1359,6},
                  [{atom,{1359,7},ensure_at_least},
                   {var,{1359,23},'Size'},
                   {var,{1359,28},'Unit'}]},
              {call,
                  {1359,36},
                  {atom,{1359,36},resolve_bs_match_commands},
                  [{var,{1359,62},'Rest'}]}}]},
     {clause,
         {1360,1},
         [{cons,
              {1360,27},
              {tuple,
                  {1360,28},
                  [{atom,{1360,29},atom},{atom,{1360,34},ensure_exactly}]},
              {cons,
                  {1360,50},
                  {var,{1360,50},'Stride'},
                  {var,{1360,57},'Rest'}}}],
         [],
         [{debug_line,1361,589},
          {cons,
              {1361,5},
              {tuple,
                  {1361,6},
                  [{atom,{1361,7},ensure_exactly},{var,{1361,22},'Stride'}]},
              {call,
                  {1361,32},
                  {atom,{1361,32},resolve_bs_match_commands},
                  [{var,{1361,58},'Rest'}]}}]},
     {clause,
         {1362,1},
         [{cons,
              {1362,27},
              {tuple,
                  {1362,28},
                  [{atom,{1362,29},atom},{atom,{1362,34},integer}]},
              {cons,
                  {1362,43},
                  {var,{1362,43},'Live'},
                  {cons,
                      {1362,48},
                      {var,{1362,48},'Flags0'},
                      {cons,
                          {1362,55},
                          {var,{1362,55},'Size'},
                          {cons,
                              {1362,60},
                              {var,{1362,60},'Unit'},
                              {cons,
                                  {1362,65},
                                  {var,{1362,65},'Dst'},
                                  {var,{1362,69},'Rest'}}}}}}}],
         [],
         [{debug_line,1363,590},
          {match,
              {1363,5},
              {var,{1363,5},'Flags'},
              {call,
                  {1363,13},
                  {atom,{1363,13},resolve_bs_match_flags},
                  [{var,{1363,36},'Flags0'}]}},
          {debug_line,1364,591},
          {cons,
              {1364,5},
              {tuple,
                  {1364,6},
                  [{atom,{1364,7},integer},
                   {var,{1364,15},'Live'},
                   {var,{1364,20},'Flags'},
                   {var,{1364,26},'Size'},
                   {var,{1364,31},'Unit'},
                   {var,{1364,36},'Dst'}]},
              {call,
                  {1365,6},
                  {atom,{1365,6},resolve_bs_match_commands},
                  [{var,{1365,32},'Rest'}]}}]},
     {clause,
         {1366,1},
         [{cons,
              {1366,27},
              {tuple,
                  {1366,28},
                  [{atom,{1366,29},atom},{atom,{1366,34},binary}]},
              {cons,
                  {1366,42},
                  {var,{1366,42},'Live'},
                  {cons,
                      {1366,47},
                      {var,{1366,47},'Flags0'},
                      {cons,
                          {1366,54},
                          {var,{1366,54},'Size'},
                          {cons,
                              {1366,59},
                              {var,{1366,59},'Unit'},
                              {cons,
                                  {1366,64},
                                  {var,{1366,64},'Dst'},
                                  {var,{1366,68},'Rest'}}}}}}}],
         [],
         [{debug_line,1367,592},
          {match,
              {1367,5},
              {var,{1367,5},'Flags'},
              {call,
                  {1367,13},
                  {atom,{1367,13},resolve_bs_match_flags},
                  [{var,{1367,36},'Flags0'}]}},
          {debug_line,1368,593},
          {cons,
              {1368,5},
              {tuple,
                  {1368,6},
                  [{atom,{1368,7},binary},
                   {var,{1368,14},'Live'},
                   {var,{1368,19},'Flags'},
                   {var,{1368,25},'Size'},
                   {var,{1368,30},'Unit'},
                   {var,{1368,35},'Dst'}]},
              {call,
                  {1369,6},
                  {atom,{1369,6},resolve_bs_match_commands},
                  [{var,{1369,32},'Rest'}]}}]},
     {clause,
         {1370,1},
         [{cons,
              {1370,27},
              {tuple,{1370,28},[{atom,{1370,29},atom},{atom,{1370,34},'=:='}]},
              {cons,
                  {1370,41},
                  {atom,{1370,41},nil},
                  {cons,
                      {1370,45},
                      {var,{1370,45},'Bits'},
                      {cons,
                          {1370,50},
                          {var,{1370,50},'Value'},
                          {var,{1370,56},'Rest'}}}}}],
         [],
         [{debug_line,1371,594},
          {cons,
              {1371,5},
              {tuple,
                  {1371,6},
                  [{atom,{1371,7},'=:='},
                   {atom,{1371,13},nil},
                   {var,{1371,17},'Bits'},
                   {var,{1371,22},'Value'}]},
              {call,
                  {1371,31},
                  {atom,{1371,31},resolve_bs_match_commands},
                  [{var,{1371,57},'Rest'}]}}]},
     {clause,
         {1372,1},
         [{cons,
              {1372,27},
              {tuple,{1372,28},[{atom,{1372,29},atom},{atom,{1372,34},skip}]},
              {cons,
                  {1372,40},
                  {var,{1372,40},'Stride'},
                  {var,{1372,47},'Rest'}}}],
         [],
         [{debug_line,1373,595},
          {cons,
              {1373,5},
              {tuple,{1373,6},[{atom,{1373,7},skip},{var,{1373,12},'Stride'}]},
              {call,
                  {1373,22},
                  {atom,{1373,22},resolve_bs_match_commands},
                  [{var,{1373,48},'Rest'}]}}]},
     {clause,
         {1374,1},
         [{cons,
              {1374,27},
              {tuple,
                  {1374,28},
                  [{atom,{1374,29},atom},{atom,{1374,34},get_tail}]},
              {cons,
                  {1374,44},
                  {var,{1374,44},'Live'},
                  {cons,
                      {1374,49},
                      {var,{1374,49},'Src'},
                      {cons,
                          {1374,53},
                          {var,{1374,53},'Dst'},
                          {var,{1374,57},'Rest'}}}}}],
         [],
         [{debug_line,1375,596},
          {cons,
              {1375,5},
              {tuple,
                  {1375,6},
                  [{atom,{1375,7},get_tail},
                   {var,{1375,16},'Live'},
                   {var,{1375,21},'Src'},
                   {var,{1375,25},'Dst'}]},
              {call,
                  {1375,32},
                  {atom,{1375,32},resolve_bs_match_commands},
                  [{var,{1375,58},'Rest'}]}}]},
     {clause,
         {1376,1},
         [{nil,{1376,27}}],
         [],
         [{debug_line,1377,597},{nil,{1377,5}}]}]}.
{function,
    {1379,1},
    resolve_bs_match_flags,1,
    [{clause,
         {1379,1},
         [{var,{1379,1},'_'}],
         [[{call,
               {1379,1},
               {remote,
                   {1379,1},
                   {atom,{1379,1},fake},
                   {atom,{1379,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1379,598},{atom,{1379,1},ignore}]},
     {clause,
         {1379,1},
         [{atom,{1379,24},nil}],
         [],
         [{debug_line,1379,599},
          {tuple,{1379,32},[{atom,{1379,33},literal},{nil,{1379,41}}]}]},
     {clause,
         {1380,1},
         [{match,
              {1380,24},
              {tuple,
                  {1380,24},
                  [{atom,{1380,25},literal},
                   {cons,{1380,33},{var,{1380,34},'_'},{var,{1380,36},'_'}}]},
              {var,{1380,40},'Flags'}}],
         [],
         [{debug_line,1380,600},{var,{1380,50},'Flags'}]}]}.
{function,
 {1392,1},
 decode_field_flags,1,
 [{clause,
   {1392,1},
   [{var,{1392,1},'_'}],
   [[{call,
      {1392,1},
      {remote,{1392,1},{atom,{1392,1},fake},{atom,{1392,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1392,601},{atom,{1392,1},ignore}]},
  {clause,
   {1392,1},
   [{integer,{1392,20},0}],
   [],
   [{debug_line,1393,602},
    {tuple,{1393,5},[{atom,{1393,6},field_flags},{nil,{1393,18}}]}]},
  {clause,
   {1394,1},
   [{var,{1394,20},'FieldFlags'}],
   [[{call,
      {1394,37},
      {remote,{1394,37},{atom,{1394,37},erlang},{atom,{1394,37},is_integer}},
      [{var,{1394,48},'FieldFlags'}]}]],
   [{debug_line,1395,603},
    {match,
     {1395,5},
     {var,{1395,5},'FF'},
     {call,
      {1395,10},
      {remote,{1395,15},{atom,{1395,10},lists},{atom,{1395,16},filter}},
      [{block,0,
        [{debug_line,1396,604},
         {'fun',
          {1396,12},
          {clauses,
           [{clause,
             {1397,16},
             [{atom,{1397,17},little}],
             [],
             [{debug_line,1397,605},
              {op,
               {1397,52},
               '==',
               {op,
                {1397,40},
                'band',
                {var,{1397,29},'FieldFlags'},
                {integer,{1397,45},2}},
               {integer,{1397,55},2}}]},
            {clause,
             {1398,16},
             [{atom,{1398,17},signed}],
             [],
             [{debug_line,1398,606},
              {op,
               {1398,52},
               '==',
               {op,
                {1398,40},
                'band',
                {var,{1398,29},'FieldFlags'},
                {integer,{1398,45},4}},
               {integer,{1398,55},4}}]},
            {clause,
             {1399,16},
             [{atom,{1399,17},native}],
             [],
             [{debug_line,1399,607},
              {op,
               {1399,52},
               '==',
               {op,
                {1399,40},
                'band',
                {var,{1399,29},'FieldFlags'},
                {integer,{1399,45},16}},
               {integer,{1399,55},16}}]}]}}]},
       {block,0,
        [{debug_line,1400,608},
         {cons,
          {1400,17},
          {atom,{1400,18},little},
          {cons,
           {1400,26},
           {atom,{1400,26},signed},
           {cons,{1400,34},{atom,{1400,34},native},{nil,{1400,40}}}}}]}]}},
    {debug_line,1401,609},
    {tuple,{1401,5},[{atom,{1401,6},field_flags},{var,{1401,18},'FF'}]}]}]}.
{function,
    {1407,1},
    mk_imports,1,
    [{clause,
         {1407,1},
         [{var,{1407,1},'_'}],
         [[{call,
               {1407,1},
               {remote,
                   {1407,1},
                   {atom,{1407,1},fake},
                   {atom,{1407,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1407,610},{atom,{1407,1},ignore}]},
     {clause,
         {1407,1},
         [{var,{1407,12},'ImportList'}],
         [],
         [{debug_line,1408,611},
          {call,
              {1408,5},
              {remote,
                  {1408,13},
                  {atom,{1408,5},gb_trees},
                  {atom,{1408,14},from_orddict}},
              [{block,0,
                   [{lc,{1408,27},
                        {block,0,
                            [{tuple,
                                 {1408,28},
                                 [{var,{1408,29},'I'},
                                  {tuple,
                                      {1408,31},
                                      [{atom,{1408,32},extfunc},
                                       {var,{1408,40},'M'},
                                       {var,{1408,42},'F'},
                                       {var,{1408,44},'A'}]}]}]},
                        [{block,0,
                             [{debug_line,1409,612},{atom,{1409,45},true}]},
                         {generate_strict,
                             {1409,41},
                             {tuple,
                                 {1409,31},
                                 [{var,{1409,32},'I'},
                                  {var,{1409,34},'M'},
                                  {var,{1409,36},'F'},
                                  {var,{1409,38},'A'}]},
                             {var,{1409,45},'ImportList'}}]}]}]}]}]}.
{function,{1411,1},
          mk_atoms,1,
          [{clause,{1411,1},
                   [{var,{1411,1},'_'}],
                   [[{call,{1411,1},
                           {remote,{1411,1},
                                   {atom,{1411,1},fake},
                                   {atom,{1411,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1411,613},{atom,{1411,1},ignore}]},
           {clause,{1411,1},
                   [{var,{1411,10},'AtomList'}],
                   [],
                   [{debug_line,1412,614},
                    {call,{1412,5},
                          {remote,{1412,13},
                                  {atom,{1412,5},gb_trees},
                                  {atom,{1412,14},from_orddict}},
                          [{var,{1412,27},'AtomList'}]}]}]}.
{function,{1414,1},
          mk_labels,1,
          [{clause,{1414,1},
                   [{var,{1414,1},'_'}],
                   [[{call,{1414,1},
                           {remote,{1414,1},
                                   {atom,{1414,1},fake},
                                   {atom,{1414,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1414,615},{atom,{1414,1},ignore}]},
           {clause,{1414,1},
                   [{var,{1414,11},'LabelList'}],
                   [],
                   [{debug_line,1415,616},
                    {call,{1415,5},
                          {remote,{1415,13},
                                  {atom,{1415,5},gb_trees},
                                  {atom,{1415,14},from_orddict}},
                          [{var,{1415,27},'LabelList'}]}]}]}.
{function,{1417,1},
          lookup,2,
          [{clause,{1417,1},
                   [{var,{1417,1},'_'},{var,{1417,1},'_'}],
                   [[{call,{1417,1},
                           {remote,{1417,1},
                                   {atom,{1417,1},fake},
                                   {atom,{1417,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1417,617},{atom,{1417,1},ignore}]},
           {clause,{1417,1},
                   [{var,{1417,8},'I'},{var,{1417,11},'Imports'}],
                   [],
                   [{debug_line,1418,618},
                    {call,{1418,5},
                          {remote,{1418,13},
                                  {atom,{1418,5},gb_trees},
                                  {atom,{1418,14},get}},
                          [{var,{1418,18},'I'},{var,{1418,21},'Imports'}]}]}]}.
{eof,{1419,1}}.
