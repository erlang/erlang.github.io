module map_SUITE.
exports [{all,0},
         {cover_beam_trim,1},
         {coverage,1},
         {end_per_group,2},
         {end_per_suite,1},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {map_aliases,1},
         {module_info,0},
         {module_info,1},
         {shared_key_tuples,1},
         {suite,0},
         {t_bad_update,1},
         {t_bif_map_find,1},
         {t_build_and_match_aliasing,1},
         {t_build_and_match_empty_val,1},
         {t_build_and_match_literals,1},
         {t_build_and_match_literals_large,1},
         {t_build_and_match_nil,1},
         {t_build_and_match_over_alloc,1},
         {t_build_and_match_structure,1},
         {t_build_and_match_val,1},
         {t_build_and_match_variables,1},
         {t_conflicting_destinations,1},
         {t_cse_assoc,1},
         {t_duplicate_keys,1},
         {t_expand_map_update,1},
         {t_export,1},
         {t_fold_3,1},
         {t_frequency_table,1},
         {t_from_keys,1},
         {t_guard_bifs,1},
         {t_guard_fun,1},
         {t_guard_receive,1},
         {t_guard_receive_large,1},
         {t_guard_sequence,1},
         {t_guard_sequence_large,1},
         {t_guard_sequence_mixed,1},
         {t_guard_sequence_variables,1},
         {t_guard_update,1},
         {t_guard_update_large,1},
         {t_guard_update_variables,1},
         {t_is_map,1},
         {t_key_expressions,1},
         {t_list_comprehension,1},
         {t_map_2,1},
         {t_map_get,1},
         {t_map_size,1},
         {t_map_sort_literals,1},
         {t_maps_take_2,1},
         {t_match_and_update_literals,1},
         {t_match_and_update_literals_large,1},
         {t_mixed_clause,1},
         {t_nested_pattern_expressions,1},
         {t_register_corruption,1},
         {t_reused_key_variable,1},
         {t_update_assoc,1},
         {t_update_assoc_large,1},
         {t_update_assoc_variables,1},
         {t_update_exact,1},
         {t_update_exact_large,1},
         {t_update_exact_variables,1},
         {t_update_literals,1},
         {t_update_literals_large,1},
         {t_update_map_expressions,1},
         {t_update_values,1},
         {t_update_with_3,1},
         {t_update_with_4,1},
         {t_warn_pair_key_overloaded,1},
         {t_warn_useless_build,1},
         {t_with_2,1}].
attributes [].

%% map_SUITE.erl:100
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% map_SUITE.erl:102
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list(atom())
  ret `[t_build_and_match_literals,t_build_and_match_literals_large,
  t_update_literals,t_update_literals_large,t_match_and_update_literals,
  t_match_and_update_literals_large,t_update_map_expressions,t_update_assoc,
  t_update_assoc_large,t_update_exact,t_update_exact_large,t_guard_bifs,
  t_guard_sequence,t_guard_sequence_large,t_guard_update,t_guard_update_large,
  t_guard_receive,t_guard_receive_large,t_guard_fun,t_list_comprehension,
  t_map_sort_literals,t_map_size,t_map_get,t_build_and_match_aliasing,
  t_is_map,t_build_and_match_variables,t_update_assoc_variables,
  t_update_exact_variables,t_nested_pattern_expressions,
  t_guard_update_variables,t_guard_sequence_variables,t_guard_sequence_mixed,
  t_frequency_table,t_warn_useless_build,t_warn_pair_key_overloaded,
  t_build_and_match_over_alloc,t_build_and_match_empty_val,
  t_build_and_match_val,t_build_and_match_nil,t_build_and_match_structure,
  t_update_values,t_expand_map_update,t_export,t_register_corruption,
  t_bad_update,t_reused_key_variable,t_mixed_clause,cover_beam_trim,
  t_duplicate_keys,t_key_expressions,t_bif_map_find,t_fold_3,t_from_keys,
  t_map_2,t_maps_take_2,t_update_with_3,t_update_with_4,t_with_2,
  t_conflicting_destinations,t_cse_assoc,shared_key_tuples,map_aliases,
  coverage]`
}

%% map_SUITE.erl:173
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`groups`() {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% map_SUITE.erl:175
%% Counter = 6
%% bs_ensure_opt: true
function `map_SUITE`:`init_per_suite`(_0) {
0:
  %% map_SUITE.erl:176
  _2 = call (`test_lib`:`recompile`/1), `map_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% map_SUITE.erl:179
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% map_SUITE.erl:182
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% map_SUITE.erl:183
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% map_SUITE.erl:187
%% Counter = 781
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_literals`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _232 = bif:is_list _0
  br _232, ^232, ^231

232:
  %% map_SUITE.erl:188
  _76 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _76
  _233 = succeeded:body _76
  br _233, ^233, ^1

233:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _675 = bif:is_map _76
  br _675, ^675, ^235

675:
  %% map_SUITE.erl:189
  _77 = call (`id`/1), `#{1 => a}`

  %% Aliased:
  %%    _77
  _236 = succeeded:body _77
  br _236, ^236, ^1

236:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _673 = bif:is_map _77
  br _673, ^673, ^238

673:
  %% Argument types:
  %%    _77 => map()
  %% Aliased:
  %%    _77
  _78 = get_map_element _77, `1`

  %% Aliased:
  %%    _78
  _239 = succeeded:guard _78
  br _239, ^239, ^238

239:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _672 = bif:'=:=' _78, `a`
  br _672, ^671, ^238

671:
  %% map_SUITE.erl:190
  _79 = call (`id`/1), `#{1 => a,2 => b}`

  %% Aliased:
  %%    _79
  _240 = succeeded:body _79
  br _240, ^240, ^1

240:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _669 = bif:is_map _79
  br _669, ^669, ^242

669:
  %% Argument types:
  %%    _79 => map()
  %% Aliased:
  %%    _79
  _81 = get_map_element _79, `1`

  %% Aliased:
  %%    _81
  _243 = succeeded:guard _81
  br _243, ^243, ^242

243:
  %% Argument types:
  %%    _79 => map()
  %% Aliased:
  %%    _79
  _80 = get_map_element _79, `2`

  %% Aliased:
  %%    _80
  _244 = succeeded:guard _80
  br _244, ^244, ^242

244:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _668 = bif:'=:=' _81, `a`
  br _668, ^667, ^242

667:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _666 = bif:'=:=' _80, `b`
  br _666, ^665, ^242

665:
  %% map_SUITE.erl:191
  _82 = call (`id`/1), `#{1 => a,2 => b,3 => "c"}`

  %% Aliased:
  %%    _82
  _245 = succeeded:body _82
  br _245, ^245, ^1

245:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _663 = bif:is_map _82
  br _663, ^663, ^247

663:
  %% Argument types:
  %%    _82 => map()
  %% Aliased:
  %%    _82
  _85 = get_map_element _82, `1`

  %% Aliased:
  %%    _85
  _248 = succeeded:guard _85
  br _248, ^248, ^247

248:
  %% Argument types:
  %%    _82 => map()
  %% Aliased:
  %%    _82
  _84 = get_map_element _82, `2`

  %% Aliased:
  %%    _84
  _249 = succeeded:guard _84
  br _249, ^249, ^247

249:
  %% Argument types:
  %%    _82 => map()
  %% Aliased:
  %%    _82
  _83 = get_map_element _82, `3`

  %% Aliased:
  %%    _83
  _250 = succeeded:guard _83
  br _250, ^250, ^247

250:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _662 = bif:'=:=' _85, `a`
  br _662, ^661, ^247

661:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _660 = bif:'=:=' _84, `b`
  br _660, ^659, ^247

659:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _658 = bif:'=:=' _83, `"c"`
  br _658, ^658, ^247

658:
  %% map_SUITE.erl:192
  _86 = call (`id`/1), `#{1 => a,2 => b,3 => "c","4" => "d"}`

  %% Aliased:
  %%    _86
  _251 = succeeded:body _86
  br _251, ^251, ^1

251:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _656 = bif:is_map _86
  br _656, ^656, ^253

656:
  %% Argument types:
  %%    _86 => map()
  %% Aliased:
  %%    _86
  _90 = get_map_element _86, `1`

  %% Aliased:
  %%    _90
  _254 = succeeded:guard _90
  br _254, ^254, ^253

254:
  %% Argument types:
  %%    _86 => map()
  %% Aliased:
  %%    _86
  _89 = get_map_element _86, `2`

  %% Aliased:
  %%    _89
  _255 = succeeded:guard _89
  br _255, ^255, ^253

255:
  %% Argument types:
  %%    _86 => map()
  %% Aliased:
  %%    _86
  _88 = get_map_element _86, `3`

  %% Aliased:
  %%    _88
  _256 = succeeded:guard _88
  br _256, ^256, ^253

256:
  %% Argument types:
  %%    _86 => map()
  %% Aliased:
  %%    _86
  _87 = get_map_element _86, `"4"`

  %% Aliased:
  %%    _87
  _257 = succeeded:guard _87
  br _257, ^257, ^253

257:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _655 = bif:'=:=' _90, `a`
  br _655, ^654, ^253

654:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _653 = bif:'=:=' _89, `b`
  br _653, ^652, ^253

652:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _651 = bif:'=:=' _88, `"c"`
  br _651, ^651, ^253

651:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _650 = bif:'=:=' _87, `"d"`
  br _650, ^650, ^253

650:
  %% map_SUITE.erl:194
  _91 = call (`id`/1), `#{1 => a,2 => b,3 => "c","4" => "d",<<"5">> => <<"e">>}`

  %% Aliased:
  %%    _91
  _258 = succeeded:body _91
  br _258, ^258, ^1

258:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _648 = bif:is_map _91
  br _648, ^648, ^260

648:
  %% Argument types:
  %%    _91 => map()
  %% Aliased:
  %%    _91
  _96 = get_map_element _91, `1`

  %% Aliased:
  %%    _96
  _261 = succeeded:guard _96
  br _261, ^261, ^260

261:
  %% Argument types:
  %%    _91 => map()
  %% Aliased:
  %%    _91
  _95 = get_map_element _91, `2`

  %% Aliased:
  %%    _95
  _262 = succeeded:guard _95
  br _262, ^262, ^260

262:
  %% Argument types:
  %%    _91 => map()
  %% Aliased:
  %%    _91
  _94 = get_map_element _91, `3`

  %% Aliased:
  %%    _94
  _263 = succeeded:guard _94
  br _263, ^263, ^260

263:
  %% Argument types:
  %%    _91 => map()
  %% Aliased:
  %%    _91
  _93 = get_map_element _91, `"4"`

  %% Aliased:
  %%    _93
  _264 = succeeded:guard _93
  br _264, ^264, ^260

264:
  %% Argument types:
  %%    _91 => map()
  %% Aliased:
  %%    _91
  _92 = get_map_element _91, `<<"5">>`

  %% Aliased:
  %%    _92
  _265 = succeeded:guard _92
  br _265, ^265, ^260

265:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _647 = bif:'=:=' _96, `a`
  br _647, ^646, ^260

646:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _645 = bif:'=:=' _95, `b`
  br _645, ^644, ^260

644:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _643 = bif:'=:=' _94, `"c"`
  br _643, ^643, ^260

643:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _642 = bif:'=:=' _93, `"d"`
  br _642, ^642, ^260

642:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _641 = bif:'=:=' _92, `<<"e">>`
  br _641, ^641, ^260

641:
  %% map_SUITE.erl:196
  _97 = call (`id`/1), `#{1 => a,2 => b,3 => "c",{"6",7} => "f","4" => "d",<<"5">> => <<"e">>}`

  %% Aliased:
  %%    _97
  _266 = succeeded:body _97
  br _266, ^266, ^1

266:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _639 = bif:is_map _97
  br _639, ^639, ^268

639:
  %% Argument types:
  %%    _97 => map()
  %% Aliased:
  %%    _97
  _103 = get_map_element _97, `1`

  %% Aliased:
  %%    _103
  _269 = succeeded:guard _103
  br _269, ^269, ^268

269:
  %% Argument types:
  %%    _97 => map()
  %% Aliased:
  %%    _97
  _102 = get_map_element _97, `2`

  %% Aliased:
  %%    _102
  _270 = succeeded:guard _102
  br _270, ^270, ^268

270:
  %% Argument types:
  %%    _97 => map()
  %% Aliased:
  %%    _97
  _101 = get_map_element _97, `3`

  %% Aliased:
  %%    _101
  _271 = succeeded:guard _101
  br _271, ^271, ^268

271:
  %% Argument types:
  %%    _97 => map()
  %% Aliased:
  %%    _97
  _100 = get_map_element _97, `{"6",7}`

  %% Aliased:
  %%    _100
  _272 = succeeded:guard _100
  br _272, ^272, ^268

272:
  %% Argument types:
  %%    _97 => map()
  %% Aliased:
  %%    _97
  _99 = get_map_element _97, `"4"`

  %% Aliased:
  %%    _99
  _273 = succeeded:guard _99
  br _273, ^273, ^268

273:
  %% Argument types:
  %%    _97 => map()
  %% Aliased:
  %%    _97
  _98 = get_map_element _97, `<<"5">>`

  %% Aliased:
  %%    _98
  _274 = succeeded:guard _98
  br _274, ^274, ^268

274:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _638 = bif:'=:=' _103, `a`
  br _638, ^637, ^268

637:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _636 = bif:'=:=' _102, `b`
  br _636, ^635, ^268

635:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _634 = bif:'=:=' _101, `"c"`
  br _634, ^634, ^268

634:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _633 = bif:'=:=' _100, `"f"`
  br _633, ^633, ^268

633:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _632 = bif:'=:=' _99, `"d"`
  br _632, ^632, ^268

632:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _631 = bif:'=:=' _98, `<<"e">>`
  br _631, ^631, ^268

631:
  %% map_SUITE.erl:198
  _104 = call (`id`/1), `#{1 => a,2 => b,3 => "c",8 => g,{"6",7} => "f","4" => "d",<<"5">> => <<"e">>}`

  %% Aliased:
  %%    _104
  _275 = succeeded:body _104
  br _275, ^275, ^1

275:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _629 = bif:is_map _104
  br _629, ^629, ^277

629:
  %% Argument types:
  %%    _104 => map()
  %% Aliased:
  %%    _104
  _111 = get_map_element _104, `1`

  %% Aliased:
  %%    _111
  _278 = succeeded:guard _111
  br _278, ^278, ^277

278:
  %% Argument types:
  %%    _104 => map()
  %% Aliased:
  %%    _104
  _110 = get_map_element _104, `2`

  %% Aliased:
  %%    _110
  _279 = succeeded:guard _110
  br _279, ^279, ^277

279:
  %% Argument types:
  %%    _104 => map()
  %% Aliased:
  %%    _104
  _109 = get_map_element _104, `3`

  %% Aliased:
  %%    _109
  _280 = succeeded:guard _109
  br _280, ^280, ^277

280:
  %% Argument types:
  %%    _104 => map()
  %% Aliased:
  %%    _104
  _108 = get_map_element _104, `8`

  %% Aliased:
  %%    _108
  _281 = succeeded:guard _108
  br _281, ^281, ^277

281:
  %% Argument types:
  %%    _104 => map()
  %% Aliased:
  %%    _104
  _107 = get_map_element _104, `{"6",7}`

  %% Aliased:
  %%    _107
  _282 = succeeded:guard _107
  br _282, ^282, ^277

282:
  %% Argument types:
  %%    _104 => map()
  %% Aliased:
  %%    _104
  _106 = get_map_element _104, `"4"`

  %% Aliased:
  %%    _106
  _283 = succeeded:guard _106
  br _283, ^283, ^277

283:
  %% Argument types:
  %%    _104 => map()
  %% Aliased:
  %%    _104
  _105 = get_map_element _104, `<<"5">>`

  %% Aliased:
  %%    _105
  _284 = succeeded:guard _105
  br _284, ^284, ^277

284:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _628 = bif:'=:=' _111, `a`
  br _628, ^627, ^277

627:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _626 = bif:'=:=' _110, `b`
  br _626, ^625, ^277

625:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _624 = bif:'=:=' _109, `"c"`
  br _624, ^624, ^277

624:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _623 = bif:'=:=' _108, `g`
  br _623, ^622, ^277

622:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _621 = bif:'=:=' _107, `"f"`
  br _621, ^621, ^277

621:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _106
  _620 = bif:'=:=' _106, `"d"`
  br _620, ^620, ^277

620:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _619 = bif:'=:=' _105, `<<"e">>`
  br _619, ^619, ^277

619:
  %% map_SUITE.erl:200
  _112 = call (`id`/1), `#{<<"hi all">> => 1}`

  %% Aliased:
  %%    _112
  _285 = succeeded:body _112
  br _285, ^285, ^1

285:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _617 = bif:is_map _112
  br _617, ^617, ^287

617:
  %% Argument types:
  %%    _112 => map()
  %% Aliased:
  %%    _112
  _113 = get_map_element _112, `<<"hi all">>`

  %% Aliased:
  %%    _113
  _288 = succeeded:guard _113
  br _288, ^288, ^287

288:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _616 = bif:'=:=' _113, `1`
  br _616, ^615, ^287

615:
  %% map_SUITE.erl:202
  _114 = call (`id`/1), `#{a => 3,b => 4}`

  %% Aliased:
  %%    _114
  _289 = succeeded:body _114
  br _289, ^289, ^1

289:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _613 = bif:is_map _114
  br _613, ^613, ^291

613:
  %% Argument types:
  %%    _114 => map()
  %% Aliased:
  %%    _114
  _116 = get_map_element _114, `a`

  %% Aliased:
  %%    _116
  _292 = succeeded:guard _116
  br _292, ^292, ^291

292:
  %% Argument types:
  %%    _114 => map()
  %% Aliased:
  %%    _114
  _115 = get_map_element _114, `b`

  %% Aliased:
  %%    _115
  _293 = succeeded:guard _115
  br _293, ^293, ^291

293:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _612 = bif:'=:=' _116, `3`
  br _612, ^611, ^291

611:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _115
  _610 = bif:'=:=' _115, `4`
  br _610, ^609, ^291

609:
  %% map_SUITE.erl:205
  _117 = call (`id`/1), `#{a => #{b => #{b => second,c => third}},b => first}`

  %% Aliased:
  %%    _117
  _294 = succeeded:body _117
  br _294, ^294, ^1

294:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _607 = bif:is_map _117
  br _607, ^607, ^296

607:
  %% Argument types:
  %%    _117 => map()
  %% Aliased:
  %%    _117
  _119 = get_map_element _117, `a`

  %% Aliased:
  %%    _119
  _297 = succeeded:guard _119
  br _297, ^297, ^296

297:
  %% Argument types:
  %%    _117 => map()
  %% Aliased:
  %%    _117
  _118 = get_map_element _117, `b`

  %% Aliased:
  %%    _118
  _298 = succeeded:guard _118
  br _298, ^298, ^296

298:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _606 = bif:is_map _119
  br _606, ^606, ^296

606:
  %% Argument types:
  %%    _119 => map()
  %% Aliased:
  %%    _119
  _120 = get_map_element _119, `b`

  %% Aliased:
  %%    _120
  _299 = succeeded:guard _120
  br _299, ^299, ^296

299:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _605 = bif:is_map _120
  br _605, ^605, ^296

605:
  %% Argument types:
  %%    _120 => map()
  %% Aliased:
  %%    _120
  _122 = get_map_element _120, `b`

  %% Aliased:
  %%    _122
  _300 = succeeded:guard _122
  br _300, ^300, ^296

300:
  %% Argument types:
  %%    _120 => map()
  %% Aliased:
  %%    _120
  _121 = get_map_element _120, `c`

  %% Aliased:
  %%    _121
  _301 = succeeded:guard _121
  br _301, ^301, ^296

301:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _604 = bif:'=:=' _122, `second`
  br _604, ^603, ^296

603:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _602 = bif:'=:=' _121, `third`
  br _602, ^601, ^296

601:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _600 = bif:'=:=' _118, `first`
  br _600, ^599, ^296

599:
  %% map_SUITE.erl:209
  _13 = call (`id`/1), `#{map_1 => #{map_2 => #{value_3 => third},value_2 => second},
   value_1 => first}`

  %% Aliased:
  %%    _13
  _302 = succeeded:body _13
  br _302, ^302, ^1

302:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _597 = bif:is_map _13
  br _597, ^597, ^304

597:
  %% Argument types:
  %%    _13 => map()
  %% Aliased:
  %%    _13
  _124 = get_map_element _13, `map_1`

  %% Aliased:
  %%    _124
  _305 = succeeded:guard _124
  br _305, ^305, ^304

305:
  %% Argument types:
  %%    _13 => map()
  %% Aliased:
  %%    _13
  _123 = get_map_element _13, `value_1`

  %% Aliased:
  %%    _123
  _306 = succeeded:guard _123
  br _306, ^306, ^304

306:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _124
  _596 = bif:is_map _124
  br _596, ^596, ^304

596:
  %% Argument types:
  %%    _124 => map()
  %% Aliased:
  %%    _124
  _126 = get_map_element _124, `map_2`

  %% Aliased:
  %%    _126
  _307 = succeeded:guard _126
  br _307, ^307, ^304

307:
  %% Argument types:
  %%    _124 => map()
  %% Aliased:
  %%    _124
  _125 = get_map_element _124, `value_2`

  %% Aliased:
  %%    _125
  _308 = succeeded:guard _125
  br _308, ^308, ^304

308:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _126
  _595 = bif:is_map _126
  br _595, ^595, ^304

595:
  %% Argument types:
  %%    _126 => map()
  %% Aliased:
  %%    _126
  _127 = get_map_element _126, `value_3`

  %% Aliased:
  %%    _127
  _309 = succeeded:guard _127
  br _309, ^309, ^304

309:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _594 = bif:'=:=' _127, `third`
  br _594, ^593, ^304

593:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _592 = bif:'=:=' _125, `second`
  br _592, ^591, ^304

591:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _590 = bif:'=:=' _123, `first`
  br _590, ^589, ^304

589:
  %% Argument types:
  %%    _13 => map()
  %% Aliased:
  %%    _13
  _312 = bif:'=:=' _13, `#{map_1 => #{map_2 => #{value_3 => third},value_2 => second},
   value_1 => first}`
  br _312, ^312, ^311

312:
  %% map_SUITE.erl:212
  _128 = call (`id`/1), `#{#{} => 42}`

  %% Aliased:
  %%    _128
  _313 = succeeded:body _128
  br _313, ^313, ^1

313:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _128
  _586 = bif:is_map _128
  br _586, ^586, ^315

586:
  %% Argument types:
  %%    _128 => map()
  %% Aliased:
  %%    _128
  _129 = get_map_element _128, `#{}`

  %% Aliased:
  %%    _129
  _316 = succeeded:guard _129
  br _316, ^316, ^315

316:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _585 = bif:'=:=' _129, `42`
  br _585, ^584, ^315

584:
  %% map_SUITE.erl:213
  _130 = call (`id`/1), `#{#{"a" => 3} => 42}`

  %% Aliased:
  %%    _130
  _317 = succeeded:body _130
  br _317, ^317, ^1

317:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _582 = bif:is_map _130
  br _582, ^582, ^319

582:
  %% Argument types:
  %%    _130 => map()
  %% Aliased:
  %%    _130
  _131 = get_map_element _130, `#{"a" => 3}`

  %% Aliased:
  %%    _131
  _320 = succeeded:guard _131
  br _320, ^320, ^319

320:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _581 = bif:'=:=' _131, `42`
  br _581, ^580, ^319

580:
  %% map_SUITE.erl:216
  _132 = call (`id`/1), `#{1 => 2,[] => ok}`

  %% Aliased:
  %%    _132
  _321 = succeeded:body _132
  br _321, ^321, ^1

321:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _132
  _578 = bif:is_map _132
  br _578, ^578, ^323

578:
  %% Argument types:
  %%    _132 => map()
  %% Aliased:
  %%    _132
  _134 = get_map_element _132, `1`

  %% Aliased:
  %%    _134
  _324 = succeeded:guard _134
  br _324, ^324, ^323

324:
  %% Argument types:
  %%    _132 => map()
  %% Aliased:
  %%    _132
  _133 = get_map_element _132, `[]`

  %% Aliased:
  %%    _133
  _325 = succeeded:guard _133
  br _325, ^325, ^323

325:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _134
  _577 = bif:'=:=' _134, `2`
  br _577, ^576, ^323

576:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _133
  _575 = bif:'=:=' _133, `ok`
  br _575, ^574, ^323

574:
  %% map_SUITE.erl:217
  _135 = call (`id`/1), `#{1 => 2,[] => ok}`

  %% Aliased:
  %%    _135
  _326 = succeeded:body _135
  br _326, ^326, ^1

326:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _572 = bif:is_map _135
  br _572, ^572, ^328

572:
  %% Argument types:
  %%    _135 => map()
  %% Aliased:
  %%    _135
  _137 = get_map_element _135, `1`

  %% Aliased:
  %%    _137
  _329 = succeeded:guard _137
  br _329, ^329, ^328

329:
  %% Argument types:
  %%    _135 => map()
  %% Aliased:
  %%    _135
  _136 = get_map_element _135, `[]`

  %% Aliased:
  %%    _136
  _330 = succeeded:guard _136
  br _330, ^330, ^328

330:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _571 = bif:'=:=' _137, `2`
  br _571, ^570, ^328

570:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _136
  _569 = bif:'=:=' _136, `ok`
  br _569, ^568, ^328

568:
  %% map_SUITE.erl:220
  _138 = call (`id`/1), `#{-3 => yep}`

  %% Aliased:
  %%    _138
  _331 = succeeded:body _138
  br _331, ^331, ^1

331:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _138
  _566 = bif:is_map _138
  br _566, ^566, ^333

566:
  %% Argument types:
  %%    _138 => map()
  %% Aliased:
  %%    _138
  _139 = get_map_element _138, `-3`

  %% Aliased:
  %%    _139
  _334 = succeeded:guard _139
  br _334, ^334, ^333

334:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _565 = bif:'=:=' _139, `yep`
  br _565, ^564, ^333

564:
  %% map_SUITE.erl:221
  %% Argument types:
  %%    
  %% Anno: #{unit => 2}
  _23 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `358`

  %% Aliased:
  %%    _23
  _335 = succeeded:body _23
  br _335, ^335, ^1

335:
  %% map_SUITE.erl:221
  %% Aliased:
  %%    _23
  _24 = put_map `assoc`, `#{}`, _23, `"three"`

  %% map_SUITE.erl:221
  %% Aliased:
  %%    _24
  _64 = call (`id`/1), _24

  %% Aliased:
  %%    _64
  _336 = succeeded:body _64
  br _336, ^336, ^1

336:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _562 = bif:is_map _64
  br _562, ^562, ^140

562:
  %% map_SUITE.erl:221
  %% Argument types:
  %%    
  %% Anno: #{unit => 2}
  _185 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `358`

  %% Aliased:
  %%    _185
  _342 = succeeded:guard _185
  br _342, ^559, ^140

559:
  %% Argument types:
  %%    _64 => map()
  %%    _185 => bitstring(2)
  %% Aliased:
  %%    _64, 
  %%    _185
  _142 = get_map_element _64, _185

  %% Aliased:
  %%    _142
  _347 = succeeded:guard _142
  br _347, ^347, ^140

347:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _142
  _558 = bif:'=:=' _142, `"three"`
  br _558, ^769, ^140

769:
  br ^775

775:
  _351 = new_try_tag `'catch'`
  br _351, ^349, ^350

349:
  %% map_SUITE.erl:224
  _27 = call (`id`/1), `#{x => 3}`

  %% Aliased:
  %%    _27
  _353 = succeeded:body _27
  br _353, ^353, ^350

353:
  %% map_SUITE.erl:224
  %% Aliased:
  %%    _27
  _187 = match_fail `badmatch`, _27

  %% Unique:
  %%    _187
  _354 = succeeded:body _187
  br ^350

350:
  %% Unique:
  %%    _351
  _357 = landingpad `'catch'`, _351

  %% Aliased:
  %%    _357
  _355 = extract _357, `0`
  br ^348

348:
  %% Aliased:
  %%    _355
  %% Unique:
  %%    _351
  _28 = catch_end _351, _355

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _554 = is_tagged_tuple _28, `2`, `'EXIT'`
  br _554, ^551, ^360

551:
  %% Argument types:
  %%    _28 => {''EXIT'', any()}
  %% Aliased:
  %%    _28
  _143 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _548 = bif:is_tuple _143
  br _548, ^548, ^360

548:
  %% Argument types:
  %%    _143 => {...}
  %% Aliased:
  %%    _143
  _549 = bif:tuple_size _143

  %% Argument types:
  %%    _549 => 0..16777215
  %% Unique:
  %%    _549
  _550 = bif:'=:=' _549, `2`
  br _550, ^547, ^360

547:
  %% Argument types:
  %%    _143 => {any(), any()}
  %% Aliased:
  %%    _143
  _146 = get_tuple_element _143, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _146
  _544 = is_tagged_tuple _146, `2`, `badmatch`
  br _544, ^770, ^360

770:
  br ^776

776:
  _364 = new_try_tag `'catch'`
  br _364, ^362, ^363

362:
  %% map_SUITE.erl:225
  _49 = call (`id`/1), `#{x => 3}`

  %% Aliased:
  %%    _49
  _366 = succeeded:body _49
  br _366, ^366, ^363

366:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _372 = bif:is_map _49
  br _372, ^372, ^368

372:
  %% Argument types:
  %%    _49 => map()
  %% Aliased:
  %%    _49
  _149 = get_map_element _49, `x`

  %% Aliased:
  %%    _149
  _369 = succeeded:guard _149
  br _369, ^369, ^368

369:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _149
  _371 = bif:'=:=' _149, `2`
  br _371, ^370, ^368

370:
  br ^361

368:
  %% map_SUITE.erl:225
  %% Aliased:
  %%    _49
  _190 = match_fail `badmatch`, _49

  %% Unique:
  %%    _190
  _373 = succeeded:body _190
  br ^363

363:
  %% Unique:
  %%    _364
  _376 = landingpad `'catch'`, _364

  %% Aliased:
  %%    _376
  _374 = extract _376, `0`
  br ^361

361:
  _377 = phi { _374, ^363 }, { _49, ^370 }

  %% Aliased:
  %%    _377
  %% Unique:
  %%    _364
  _31 = catch_end _364, _377

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _537 = is_tagged_tuple _31, `2`, `'EXIT'`
  br _537, ^534, ^379

534:
  %% Argument types:
  %%    _31 => {''EXIT'', any()}
  %% Aliased:
  %%    _31
  _150 = get_tuple_element _31, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _150
  _531 = bif:is_tuple _150
  br _531, ^531, ^379

531:
  %% Argument types:
  %%    _150 => {...}
  %% Aliased:
  %%    _150
  _532 = bif:tuple_size _150

  %% Argument types:
  %%    _532 => 0..16777215
  %% Unique:
  %%    _532
  _533 = bif:'=:=' _532, `2`
  br _533, ^530, ^379

530:
  %% Argument types:
  %%    _150 => {any(), any()}
  %% Aliased:
  %%    _150
  _153 = get_tuple_element _150, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _527 = is_tagged_tuple _153, `2`, `badmatch`
  br _527, ^771, ^379

771:
  br ^777

777:
  _383 = new_try_tag `'catch'`
  br _383, ^381, ^382

381:
  %% map_SUITE.erl:226
  _52 = call (`id`/1), `{a,b,c}`

  %% Aliased:
  %%    _52
  _385 = succeeded:body _52
  br _385, ^385, ^382

385:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _391 = bif:is_map _52
  br _391, ^391, ^387

391:
  %% Argument types:
  %%    _52 => map()
  %% Aliased:
  %%    _52
  _156 = get_map_element _52, `x`

  %% Aliased:
  %%    _156
  _388 = succeeded:guard _156
  br _388, ^388, ^387

388:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _156
  _390 = bif:'=:=' _156, `3`
  br _390, ^389, ^387

389:
  br ^380

387:
  %% map_SUITE.erl:226
  %% Aliased:
  %%    _52
  _193 = match_fail `badmatch`, _52

  %% Unique:
  %%    _193
  _392 = succeeded:body _193
  br ^382

382:
  %% Unique:
  %%    _383
  _395 = landingpad `'catch'`, _383

  %% Aliased:
  %%    _395
  _393 = extract _395, `0`
  br ^380

380:
  _396 = phi { _393, ^382 }, { _52, ^389 }

  %% Aliased:
  %%    _396
  %% Unique:
  %%    _383
  _34 = catch_end _383, _396

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _520 = is_tagged_tuple _34, `2`, `'EXIT'`
  br _520, ^517, ^398

517:
  %% Argument types:
  %%    _34 => {''EXIT'', any()}
  %% Aliased:
  %%    _34
  _157 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _514 = bif:is_tuple _157
  br _514, ^514, ^398

514:
  %% Argument types:
  %%    _157 => {...}
  %% Aliased:
  %%    _157
  _515 = bif:tuple_size _157

  %% Argument types:
  %%    _515 => 0..16777215
  %% Unique:
  %%    _515
  _516 = bif:'=:=' _515, `2`
  br _516, ^513, ^398

513:
  %% Argument types:
  %%    _157 => {any(), any()}
  %% Aliased:
  %%    _157
  _160 = get_tuple_element _157, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _160
  _510 = is_tagged_tuple _160, `2`, `badmatch`
  br _510, ^772, ^398

772:
  br ^778

778:
  _402 = new_try_tag `'catch'`
  br _402, ^400, ^401

400:
  %% map_SUITE.erl:227
  _55 = call (`id`/1), `#{y => 3}`

  %% Aliased:
  %%    _55
  _404 = succeeded:body _55
  br _404, ^404, ^401

404:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _410 = bif:is_map _55
  br _410, ^410, ^406

410:
  %% Argument types:
  %%    _55 => map()
  %% Aliased:
  %%    _55
  _163 = get_map_element _55, `x`

  %% Aliased:
  %%    _163
  _407 = succeeded:guard _163
  br _407, ^407, ^406

407:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _163
  _409 = bif:'=:=' _163, `3`
  br _409, ^408, ^406

408:
  br ^399

406:
  %% map_SUITE.erl:227
  %% Aliased:
  %%    _55
  _196 = match_fail `badmatch`, _55

  %% Unique:
  %%    _196
  _411 = succeeded:body _196
  br ^401

401:
  %% Unique:
  %%    _402
  _414 = landingpad `'catch'`, _402

  %% Aliased:
  %%    _414
  _412 = extract _414, `0`
  br ^399

399:
  _415 = phi { _412, ^401 }, { _55, ^408 }

  %% Aliased:
  %%    _415
  %% Unique:
  %%    _402
  _37 = catch_end _402, _415

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _503 = is_tagged_tuple _37, `2`, `'EXIT'`
  br _503, ^500, ^417

500:
  %% Argument types:
  %%    _37 => {''EXIT'', any()}
  %% Aliased:
  %%    _37
  _164 = get_tuple_element _37, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _164
  _497 = bif:is_tuple _164
  br _497, ^497, ^417

497:
  %% Argument types:
  %%    _164 => {...}
  %% Aliased:
  %%    _164
  _498 = bif:tuple_size _164

  %% Argument types:
  %%    _498 => 0..16777215
  %% Unique:
  %%    _498
  _499 = bif:'=:=' _498, `2`
  br _499, ^496, ^417

496:
  %% Argument types:
  %%    _164 => {any(), any()}
  %% Aliased:
  %%    _164
  _167 = get_tuple_element _164, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _493 = is_tagged_tuple _167, `2`, `badmatch`
  br _493, ^773, ^417

773:
  br ^779

779:
  _421 = new_try_tag `'catch'`
  br _421, ^419, ^420

419:
  %% map_SUITE.erl:228
  _58 = call (`id`/1), `#{x => "three"}`

  %% Aliased:
  %%    _58
  _423 = succeeded:body _58
  br _423, ^423, ^420

423:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _429 = bif:is_map _58
  br _429, ^429, ^425

429:
  %% Argument types:
  %%    _58 => map()
  %% Aliased:
  %%    _58
  _170 = get_map_element _58, `x`

  %% Aliased:
  %%    _170
  _426 = succeeded:guard _170
  br _426, ^426, ^425

426:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _170
  _428 = bif:'=:=' _170, `3`
  br _428, ^427, ^425

427:
  br ^418

425:
  %% map_SUITE.erl:228
  %% Aliased:
  %%    _58
  _199 = match_fail `badmatch`, _58

  %% Unique:
  %%    _199
  _430 = succeeded:body _199
  br ^420

420:
  %% Unique:
  %%    _421
  _433 = landingpad `'catch'`, _421

  %% Aliased:
  %%    _433
  _431 = extract _433, `0`
  br ^418

418:
  _434 = phi { _431, ^420 }, { _58, ^427 }

  %% Aliased:
  %%    _434
  %% Unique:
  %%    _421
  _40 = catch_end _421, _434

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _486 = is_tagged_tuple _40, `2`, `'EXIT'`
  br _486, ^483, ^436

483:
  %% Argument types:
  %%    _40 => {''EXIT'', any()}
  %% Aliased:
  %%    _40
  _171 = get_tuple_element _40, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _171
  _480 = bif:is_tuple _171
  br _480, ^480, ^436

480:
  %% Argument types:
  %%    _171 => {...}
  %% Aliased:
  %%    _171
  _481 = bif:tuple_size _171

  %% Argument types:
  %%    _481 => 0..16777215
  %% Unique:
  %%    _481
  _482 = bif:'=:=' _481, `2`
  br _482, ^479, ^436

479:
  %% Argument types:
  %%    _171 => {any(), any()}
  %% Aliased:
  %%    _171
  _174 = get_tuple_element _171, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _174
  _476 = is_tagged_tuple _174, `2`, `badmatch`
  br _476, ^774, ^436

774:
  br ^780

780:
  _440 = new_try_tag `'catch'`
  br _440, ^438, ^439

438:
  %% map_SUITE.erl:229
  _61 = call (`id`/1), `#{#{"a" => 3} => 42}`

  %% Aliased:
  %%    _61
  _442 = succeeded:body _61
  br _442, ^442, ^439

442:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _448 = bif:is_map _61
  br _448, ^448, ^444

448:
  %% Argument types:
  %%    _61 => map()
  %% Aliased:
  %%    _61
  _177 = get_map_element _61, `#{"a" => 42}`

  %% Aliased:
  %%    _177
  _445 = succeeded:guard _177
  br _445, ^445, ^444

445:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _177
  _447 = bif:'=:=' _177, `3`
  br _447, ^446, ^444

446:
  br ^437

444:
  %% map_SUITE.erl:229
  %% Aliased:
  %%    _61
  _202 = match_fail `badmatch`, _61

  %% Unique:
  %%    _202
  _449 = succeeded:body _202
  br ^439

439:
  %% Unique:
  %%    _440
  _452 = landingpad `'catch'`, _440

  %% Aliased:
  %%    _452
  _450 = extract _452, `0`
  br ^437

437:
  _453 = phi { _450, ^439 }, { _61, ^446 }

  %% Aliased:
  %%    _453
  %% Unique:
  %%    _440
  _43 = catch_end _440, _453

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _469 = is_tagged_tuple _43, `2`, `'EXIT'`
  br _469, ^466, ^455

466:
  %% Argument types:
  %%    _43 => {''EXIT'', any()}
  %% Aliased:
  %%    _43
  _178 = get_tuple_element _43, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _178
  _463 = bif:is_tuple _178
  br _463, ^463, ^455

463:
  %% Argument types:
  %%    _178 => {...}
  %% Aliased:
  %%    _178
  _464 = bif:tuple_size _178

  %% Argument types:
  %%    _464 => 0..16777215
  %% Unique:
  %%    _464
  _465 = bif:'=:=' _464, `2`
  br _465, ^462, ^455

462:
  %% Argument types:
  %%    _178 => {any(), any()}
  %% Aliased:
  %%    _178
  _181 = get_tuple_element _178, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _181
  _459 = is_tagged_tuple _181, `2`, `badmatch`
  br _459, ^456, ^455

456:
  %% Result type:
  %%    'ok'
  ret `ok`

455:
  %% map_SUITE.erl:229
  %% Aliased:
  %%    _43
  _203 = match_fail `badmatch`, _43

  %% Unique:
  %%    _203
  _472 = succeeded:body _203
  br ^1

436:
  %% map_SUITE.erl:228
  %% Aliased:
  %%    _40
  _204 = match_fail `badmatch`, _40

  %% Unique:
  %%    _204
  _489 = succeeded:body _204
  br ^1

417:
  %% map_SUITE.erl:227
  %% Aliased:
  %%    _37
  _205 = match_fail `badmatch`, _37

  %% Unique:
  %%    _205
  _506 = succeeded:body _205
  br ^1

398:
  %% map_SUITE.erl:226
  %% Aliased:
  %%    _34
  _206 = match_fail `badmatch`, _34

  %% Unique:
  %%    _206
  _523 = succeeded:body _206
  br ^1

379:
  %% map_SUITE.erl:225
  %% Aliased:
  %%    _31
  _207 = match_fail `badmatch`, _31

  %% Unique:
  %%    _207
  _540 = succeeded:body _207
  br ^1

360:
  %% map_SUITE.erl:224
  %% Aliased:
  %%    _28
  _208 = match_fail `badmatch`, _28

  %% Unique:
  %%    _208
  _557 = succeeded:body _208
  br ^1

140:
  %% map_SUITE.erl:221
  %% Aliased:
  %%    _64
  _209 = match_fail `badmatch`, _64

  %% Unique:
  %%    _209
  _563 = succeeded:body _209
  br ^1

333:
  %% map_SUITE.erl:220
  %% Aliased:
  %%    _138
  _210 = match_fail `badmatch`, _138

  %% Unique:
  %%    _210
  _567 = succeeded:body _210
  br ^1

328:
  %% map_SUITE.erl:217
  %% Aliased:
  %%    _135
  _211 = match_fail `badmatch`, _135

  %% Unique:
  %%    _211
  _573 = succeeded:body _211
  br ^1

323:
  %% map_SUITE.erl:216
  %% Aliased:
  %%    _132
  _212 = match_fail `badmatch`, _132

  %% Unique:
  %%    _212
  _579 = succeeded:body _212
  br ^1

319:
  %% map_SUITE.erl:213
  %% Aliased:
  %%    _130
  _213 = match_fail `badmatch`, _130

  %% Unique:
  %%    _213
  _583 = succeeded:body _213
  br ^1

315:
  %% map_SUITE.erl:212
  %% Aliased:
  %%    _128
  _214 = match_fail `badmatch`, _128

  %% Unique:
  %%    _214
  _587 = succeeded:body _214
  br ^1

311:
  %% map_SUITE.erl:208
  %% Aliased:
  %%    _13
  _215 = match_fail `badmatch`, _13

  %% Unique:
  %%    _215
  _588 = succeeded:body _215
  br ^1

304:
  %% map_SUITE.erl:208
  %% Aliased:
  %%    _13
  _216 = match_fail `badmatch`, _13

  %% Unique:
  %%    _216
  _598 = succeeded:body _216
  br ^1

296:
  %% map_SUITE.erl:204
  %% Aliased:
  %%    _117
  _217 = match_fail `badmatch`, _117

  %% Unique:
  %%    _217
  _608 = succeeded:body _217
  br ^1

291:
  %% map_SUITE.erl:202
  %% Aliased:
  %%    _114
  _218 = match_fail `badmatch`, _114

  %% Unique:
  %%    _218
  _614 = succeeded:body _218
  br ^1

287:
  %% map_SUITE.erl:200
  %% Aliased:
  %%    _112
  _219 = match_fail `badmatch`, _112

  %% Unique:
  %%    _219
  _618 = succeeded:body _219
  br ^1

277:
  %% map_SUITE.erl:197
  %% Aliased:
  %%    _104
  _220 = match_fail `badmatch`, _104

  %% Unique:
  %%    _220
  _630 = succeeded:body _220
  br ^1

268:
  %% map_SUITE.erl:195
  %% Aliased:
  %%    _97
  _221 = match_fail `badmatch`, _97

  %% Unique:
  %%    _221
  _640 = succeeded:body _221
  br ^1

260:
  %% map_SUITE.erl:193
  %% Aliased:
  %%    _91
  _222 = match_fail `badmatch`, _91

  %% Unique:
  %%    _222
  _649 = succeeded:body _222
  br ^1

253:
  %% map_SUITE.erl:192
  %% Aliased:
  %%    _86
  _223 = match_fail `badmatch`, _86

  %% Unique:
  %%    _223
  _657 = succeeded:body _223
  br ^1

247:
  %% map_SUITE.erl:191
  %% Aliased:
  %%    _82
  _224 = match_fail `badmatch`, _82

  %% Unique:
  %%    _224
  _664 = succeeded:body _224
  br ^1

242:
  %% map_SUITE.erl:190
  %% Aliased:
  %%    _79
  _225 = match_fail `badmatch`, _79

  %% Unique:
  %%    _225
  _670 = succeeded:body _225
  br ^1

238:
  %% map_SUITE.erl:189
  %% Aliased:
  %%    _77
  _226 = match_fail `badmatch`, _77

  %% Unique:
  %%    _226
  _674 = succeeded:body _226
  br ^1

235:
  %% map_SUITE.erl:188
  %% Aliased:
  %%    _76
  _227 = match_fail `badmatch`, _76

  %% Unique:
  %%    _227
  _676 = succeeded:body _227
  br ^1

231:
  %% map_SUITE.erl:187
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_literals/1-',1}}
  _228 = match_fail `function_clause`, _0

  %% Unique:
  %%    _228
  _677 = succeeded:body _228
  br ^1

1:
  _229 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _229
}

%% map_SUITE.erl:232
%% Counter = 3655
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_literals_large`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _1157 = bif:is_list _0
  br _1157, ^1157, ^1156

1157:
  %% map_SUITE.erl:234
  M0 = call (`id`/1), `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M0
  _1158 = succeeded:body M0
  br _1158, ^1158, ^1

1158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _3651 = bif:is_map M0
  br _3651, ^3651, ^1160

3651:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _216 = get_map_element M0, `10`

  %% Aliased:
  %%    _216
  _1161 = succeeded:guard _216
  br _1161, ^1161, ^1160

1161:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _215 = get_map_element M0, `20`

  %% Aliased:
  %%    _215
  _1162 = succeeded:guard _215
  br _1162, ^1162, ^1160

1162:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _214 = get_map_element M0, `30`

  %% Aliased:
  %%    _214
  _1163 = succeeded:guard _214
  br _1163, ^1163, ^1160

1163:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _213 = get_map_element M0, `{["00"]}`

  %% Aliased:
  %%    _213
  _1164 = succeeded:guard _213
  br _1164, ^1164, ^1160

1164:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _212 = get_map_element M0, `"40"`

  %% Aliased:
  %%    _212
  _1165 = succeeded:guard _212
  br _1165, ^1165, ^1160

1165:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _211 = get_map_element M0, `<<"50">>`

  %% Aliased:
  %%    _211
  _1166 = succeeded:guard _211
  br _1166, ^1166, ^1160

1166:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _216
  _3650 = bif:'=:=' _216, `a0`
  br _3650, ^3649, ^1160

3649:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _215
  _3648 = bif:'=:=' _215, `b0`
  br _3648, ^3647, ^1160

3647:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _214
  _3646 = bif:'=:=' _214, `"c0"`
  br _3646, ^3646, ^1160

3646:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _213
  _3645 = bif:'=:=' _213, `"10"`
  br _3645, ^3645, ^1160

3645:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _212
  _3644 = bif:'=:=' _212, `"d0"`
  br _3644, ^3644, ^1160

3644:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _211
  _3643 = bif:'=:=' _211, `"e0"`
  br _3643, ^3641, ^1160

3641:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _222 = get_map_element M0, `11`

  %% Aliased:
  %%    _222
  _1169 = succeeded:guard _222
  br _1169, ^1169, ^1168

1169:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _221 = get_map_element M0, `21`

  %% Aliased:
  %%    _221
  _1170 = succeeded:guard _221
  br _1170, ^1170, ^1168

1170:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _220 = get_map_element M0, `31`

  %% Aliased:
  %%    _220
  _1171 = succeeded:guard _220
  br _1171, ^1171, ^1168

1171:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _219 = get_map_element M0, `{["01"]}`

  %% Aliased:
  %%    _219
  _1172 = succeeded:guard _219
  br _1172, ^1172, ^1168

1172:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _218 = get_map_element M0, `"41"`

  %% Aliased:
  %%    _218
  _1173 = succeeded:guard _218
  br _1173, ^1173, ^1168

1173:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _217 = get_map_element M0, `<<"51">>`

  %% Aliased:
  %%    _217
  _1174 = succeeded:guard _217
  br _1174, ^1174, ^1168

1174:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _222
  _3640 = bif:'=:=' _222, `a1`
  br _3640, ^3639, ^1168

3639:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _221
  _3638 = bif:'=:=' _221, `b1`
  br _3638, ^3637, ^1168

3637:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _220
  _3636 = bif:'=:=' _220, `"c1"`
  br _3636, ^3636, ^1168

3636:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _219
  _3635 = bif:'=:=' _219, `"11"`
  br _3635, ^3635, ^1168

3635:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _218
  _3634 = bif:'=:=' _218, `"d1"`
  br _3634, ^3634, ^1168

3634:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _217
  _3633 = bif:'=:=' _217, `"e1"`
  br _3633, ^3631, ^1168

3631:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _228 = get_map_element M0, `12`

  %% Aliased:
  %%    _228
  _1177 = succeeded:guard _228
  br _1177, ^1177, ^1176

1177:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _227 = get_map_element M0, `22`

  %% Aliased:
  %%    _227
  _1178 = succeeded:guard _227
  br _1178, ^1178, ^1176

1178:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _226 = get_map_element M0, `32`

  %% Aliased:
  %%    _226
  _1179 = succeeded:guard _226
  br _1179, ^1179, ^1176

1179:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _225 = get_map_element M0, `{["02"]}`

  %% Aliased:
  %%    _225
  _1180 = succeeded:guard _225
  br _1180, ^1180, ^1176

1180:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _224 = get_map_element M0, `"42"`

  %% Aliased:
  %%    _224
  _1181 = succeeded:guard _224
  br _1181, ^1181, ^1176

1181:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _223 = get_map_element M0, `<<"52">>`

  %% Aliased:
  %%    _223
  _1182 = succeeded:guard _223
  br _1182, ^1182, ^1176

1182:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _228
  _3630 = bif:'=:=' _228, `a2`
  br _3630, ^3629, ^1176

3629:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _227
  _3628 = bif:'=:=' _227, `b2`
  br _3628, ^3627, ^1176

3627:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _226
  _3626 = bif:'=:=' _226, `"c2"`
  br _3626, ^3626, ^1176

3626:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _225
  _3625 = bif:'=:=' _225, `"12"`
  br _3625, ^3625, ^1176

3625:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _224
  _3624 = bif:'=:=' _224, `"d2"`
  br _3624, ^3624, ^1176

3624:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _223
  _3623 = bif:'=:=' _223, `"e2"`
  br _3623, ^3621, ^1176

3621:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _234 = get_map_element M0, `13`

  %% Aliased:
  %%    _234
  _1185 = succeeded:guard _234
  br _1185, ^1185, ^1184

1185:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _233 = get_map_element M0, `23`

  %% Aliased:
  %%    _233
  _1186 = succeeded:guard _233
  br _1186, ^1186, ^1184

1186:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _232 = get_map_element M0, `33`

  %% Aliased:
  %%    _232
  _1187 = succeeded:guard _232
  br _1187, ^1187, ^1184

1187:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _231 = get_map_element M0, `{["03"]}`

  %% Aliased:
  %%    _231
  _1188 = succeeded:guard _231
  br _1188, ^1188, ^1184

1188:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _230 = get_map_element M0, `"43"`

  %% Aliased:
  %%    _230
  _1189 = succeeded:guard _230
  br _1189, ^1189, ^1184

1189:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _229 = get_map_element M0, `<<"53">>`

  %% Aliased:
  %%    _229
  _1190 = succeeded:guard _229
  br _1190, ^1190, ^1184

1190:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _234
  _3620 = bif:'=:=' _234, `a3`
  br _3620, ^3619, ^1184

3619:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _233
  _3618 = bif:'=:=' _233, `b3`
  br _3618, ^3617, ^1184

3617:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _232
  _3616 = bif:'=:=' _232, `"c3"`
  br _3616, ^3616, ^1184

3616:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _3615 = bif:'=:=' _231, `"13"`
  br _3615, ^3615, ^1184

3615:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _230
  _3614 = bif:'=:=' _230, `"d3"`
  br _3614, ^3614, ^1184

3614:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _229
  _3613 = bif:'=:=' _229, `"e3"`
  br _3613, ^3611, ^1184

3611:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _240 = get_map_element M0, `14`

  %% Aliased:
  %%    _240
  _1193 = succeeded:guard _240
  br _1193, ^1193, ^1192

1193:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _239 = get_map_element M0, `24`

  %% Aliased:
  %%    _239
  _1194 = succeeded:guard _239
  br _1194, ^1194, ^1192

1194:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _238 = get_map_element M0, `34`

  %% Aliased:
  %%    _238
  _1195 = succeeded:guard _238
  br _1195, ^1195, ^1192

1195:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _237 = get_map_element M0, `{["04"]}`

  %% Aliased:
  %%    _237
  _1196 = succeeded:guard _237
  br _1196, ^1196, ^1192

1196:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _236 = get_map_element M0, `"44"`

  %% Aliased:
  %%    _236
  _1197 = succeeded:guard _236
  br _1197, ^1197, ^1192

1197:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _235 = get_map_element M0, `<<"54">>`

  %% Aliased:
  %%    _235
  _1198 = succeeded:guard _235
  br _1198, ^1198, ^1192

1198:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _240
  _3610 = bif:'=:=' _240, `a4`
  br _3610, ^3609, ^1192

3609:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _239
  _3608 = bif:'=:=' _239, `b4`
  br _3608, ^3607, ^1192

3607:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _238
  _3606 = bif:'=:=' _238, `"c4"`
  br _3606, ^3606, ^1192

3606:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _237
  _3605 = bif:'=:=' _237, `"14"`
  br _3605, ^3605, ^1192

3605:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _236
  _3604 = bif:'=:=' _236, `"d4"`
  br _3604, ^3604, ^1192

3604:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _235
  _3603 = bif:'=:=' _235, `"e4"`
  br _3603, ^3601, ^1192

3601:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _246 = get_map_element M0, `15`

  %% Aliased:
  %%    _246
  _1201 = succeeded:guard _246
  br _1201, ^1201, ^1200

1201:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _245 = get_map_element M0, `25`

  %% Aliased:
  %%    _245
  _1202 = succeeded:guard _245
  br _1202, ^1202, ^1200

1202:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _244 = get_map_element M0, `35`

  %% Aliased:
  %%    _244
  _1203 = succeeded:guard _244
  br _1203, ^1203, ^1200

1203:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _243 = get_map_element M0, `{["05"]}`

  %% Aliased:
  %%    _243
  _1204 = succeeded:guard _243
  br _1204, ^1204, ^1200

1204:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _242 = get_map_element M0, `"45"`

  %% Aliased:
  %%    _242
  _1205 = succeeded:guard _242
  br _1205, ^1205, ^1200

1205:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _241 = get_map_element M0, `<<"55">>`

  %% Aliased:
  %%    _241
  _1206 = succeeded:guard _241
  br _1206, ^1206, ^1200

1206:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _246
  _3600 = bif:'=:=' _246, `a5`
  br _3600, ^3599, ^1200

3599:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _3598 = bif:'=:=' _245, `b5`
  br _3598, ^3597, ^1200

3597:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _244
  _3596 = bif:'=:=' _244, `"c5"`
  br _3596, ^3596, ^1200

3596:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _243
  _3595 = bif:'=:=' _243, `"15"`
  br _3595, ^3595, ^1200

3595:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _242
  _3594 = bif:'=:=' _242, `"d5"`
  br _3594, ^3594, ^1200

3594:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _241
  _3593 = bif:'=:=' _241, `"e5"`
  br _3593, ^3591, ^1200

3591:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _252 = get_map_element M0, `16`

  %% Aliased:
  %%    _252
  _1209 = succeeded:guard _252
  br _1209, ^1209, ^1208

1209:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _251 = get_map_element M0, `26`

  %% Aliased:
  %%    _251
  _1210 = succeeded:guard _251
  br _1210, ^1210, ^1208

1210:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _250 = get_map_element M0, `36`

  %% Aliased:
  %%    _250
  _1211 = succeeded:guard _250
  br _1211, ^1211, ^1208

1211:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _249 = get_map_element M0, `{["06"]}`

  %% Aliased:
  %%    _249
  _1212 = succeeded:guard _249
  br _1212, ^1212, ^1208

1212:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _248 = get_map_element M0, `"46"`

  %% Aliased:
  %%    _248
  _1213 = succeeded:guard _248
  br _1213, ^1213, ^1208

1213:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _247 = get_map_element M0, `<<"56">>`

  %% Aliased:
  %%    _247
  _1214 = succeeded:guard _247
  br _1214, ^1214, ^1208

1214:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _252
  _3590 = bif:'=:=' _252, `a6`
  br _3590, ^3589, ^1208

3589:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _251
  _3588 = bif:'=:=' _251, `b6`
  br _3588, ^3587, ^1208

3587:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _250
  _3586 = bif:'=:=' _250, `"c6"`
  br _3586, ^3586, ^1208

3586:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _249
  _3585 = bif:'=:=' _249, `"16"`
  br _3585, ^3585, ^1208

3585:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _248
  _3584 = bif:'=:=' _248, `"d6"`
  br _3584, ^3584, ^1208

3584:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _247
  _3583 = bif:'=:=' _247, `"e6"`
  br _3583, ^3581, ^1208

3581:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _258 = get_map_element M0, `17`

  %% Aliased:
  %%    _258
  _1217 = succeeded:guard _258
  br _1217, ^1217, ^1216

1217:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _257 = get_map_element M0, `27`

  %% Aliased:
  %%    _257
  _1218 = succeeded:guard _257
  br _1218, ^1218, ^1216

1218:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _256 = get_map_element M0, `37`

  %% Aliased:
  %%    _256
  _1219 = succeeded:guard _256
  br _1219, ^1219, ^1216

1219:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _255 = get_map_element M0, `{["07"]}`

  %% Aliased:
  %%    _255
  _1220 = succeeded:guard _255
  br _1220, ^1220, ^1216

1220:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _254 = get_map_element M0, `"47"`

  %% Aliased:
  %%    _254
  _1221 = succeeded:guard _254
  br _1221, ^1221, ^1216

1221:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _253 = get_map_element M0, `<<"57">>`

  %% Aliased:
  %%    _253
  _1222 = succeeded:guard _253
  br _1222, ^1222, ^1216

1222:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _258
  _3580 = bif:'=:=' _258, `a7`
  br _3580, ^3579, ^1216

3579:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _257
  _3578 = bif:'=:=' _257, `b7`
  br _3578, ^3577, ^1216

3577:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _256
  _3576 = bif:'=:=' _256, `"c7"`
  br _3576, ^3576, ^1216

3576:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _255
  _3575 = bif:'=:=' _255, `"17"`
  br _3575, ^3575, ^1216

3575:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _254
  _3574 = bif:'=:=' _254, `"d7"`
  br _3574, ^3574, ^1216

3574:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _253
  _3573 = bif:'=:=' _253, `"e7"`
  br _3573, ^3571, ^1216

3571:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _264 = get_map_element M0, `18`

  %% Aliased:
  %%    _264
  _1225 = succeeded:guard _264
  br _1225, ^1225, ^1224

1225:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _263 = get_map_element M0, `28`

  %% Aliased:
  %%    _263
  _1226 = succeeded:guard _263
  br _1226, ^1226, ^1224

1226:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _262 = get_map_element M0, `38`

  %% Aliased:
  %%    _262
  _1227 = succeeded:guard _262
  br _1227, ^1227, ^1224

1227:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _261 = get_map_element M0, `{["08"]}`

  %% Aliased:
  %%    _261
  _1228 = succeeded:guard _261
  br _1228, ^1228, ^1224

1228:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _260 = get_map_element M0, `"48"`

  %% Aliased:
  %%    _260
  _1229 = succeeded:guard _260
  br _1229, ^1229, ^1224

1229:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _259 = get_map_element M0, `<<"58">>`

  %% Aliased:
  %%    _259
  _1230 = succeeded:guard _259
  br _1230, ^1230, ^1224

1230:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _264
  _3570 = bif:'=:=' _264, `a8`
  br _3570, ^3569, ^1224

3569:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _263
  _3568 = bif:'=:=' _263, `b8`
  br _3568, ^3567, ^1224

3567:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _262
  _3566 = bif:'=:=' _262, `"c8"`
  br _3566, ^3566, ^1224

3566:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _261
  _3565 = bif:'=:=' _261, `"18"`
  br _3565, ^3565, ^1224

3565:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _260
  _3564 = bif:'=:=' _260, `"d8"`
  br _3564, ^3564, ^1224

3564:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _259
  _3563 = bif:'=:=' _259, `"e8"`
  br _3563, ^3561, ^1224

3561:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _270 = get_map_element M0, `19`

  %% Aliased:
  %%    _270
  _1233 = succeeded:guard _270
  br _1233, ^1233, ^1232

1233:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _269 = get_map_element M0, `29`

  %% Aliased:
  %%    _269
  _1234 = succeeded:guard _269
  br _1234, ^1234, ^1232

1234:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _268 = get_map_element M0, `39`

  %% Aliased:
  %%    _268
  _1235 = succeeded:guard _268
  br _1235, ^1235, ^1232

1235:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _267 = get_map_element M0, `{["09"]}`

  %% Aliased:
  %%    _267
  _1236 = succeeded:guard _267
  br _1236, ^1236, ^1232

1236:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _266 = get_map_element M0, `"49"`

  %% Aliased:
  %%    _266
  _1237 = succeeded:guard _266
  br _1237, ^1237, ^1232

1237:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _265 = get_map_element M0, `<<"59">>`

  %% Aliased:
  %%    _265
  _1238 = succeeded:guard _265
  br _1238, ^1238, ^1232

1238:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _270
  _3560 = bif:'=:=' _270, `a9`
  br _3560, ^3559, ^1232

3559:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _269
  _3558 = bif:'=:=' _269, `b9`
  br _3558, ^3557, ^1232

3557:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _268
  _3556 = bif:'=:=' _268, `"c9"`
  br _3556, ^3556, ^1232

3556:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _3555 = bif:'=:=' _267, `"19"`
  br _3555, ^3555, ^1232

3555:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _266
  _3554 = bif:'=:=' _266, `"d9"`
  br _3554, ^3554, ^1232

3554:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _265
  _3553 = bif:'=:=' _265, `"e9"`
  br _3553, ^3553, ^1232

3553:
  %% map_SUITE.erl:258
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _271 = bif:map_size M0

  %% Argument types:
  %%    _271 => 0..288230376151711743
  %% Unique:
  %%    _271
  _3551 = bif:'=:=' _271, `60`
  br _3551, ^3547, ^1241

3547:
  %% map_SUITE.erl:262
  M1 = call (`id`/1), `#{10 => na0,11 => na1,12 => na2,13 => na3,14 => na4,15 => a5,16 => a6,
   17 => a7,18 => a8,19 => a9,20 => nb0,21 => nb1,22 => nb2,23 => nb3,
   24 => nb4,25 => b5,26 => b6,27 => b7,28 => b8,29 => b9,30 => "nc0",
   31 => "nc1",32 => "nc2",33 => "nc3",34 => "nc4",35 => "c5",36 => "c6",
   37 => "c7",38 => "c8",39 => "c9",
   {["00"]} => "n10",
   {["01"]} => "n11",
   {["02"]} => "n12",
   {["03"]} => "n13",
   {["04"]} => "n14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "nd0","41" => "nd1","42" => "nd2","43" => "nd3","44" => "nd4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "ne0",<<"51">> => "ne1",<<"52">> => "ne2",<<"53">> => "ne3",
   <<"54">> => "ne4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M1
  _1245 = succeeded:body M1
  br _1245, ^1245, ^1

1245:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M1
  _3545 = bif:is_map M1
  br _3545, ^3545, ^1247

3545:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _278 = get_map_element M1, `10`

  %% Aliased:
  %%    _278
  _1248 = succeeded:guard _278
  br _1248, ^1248, ^1247

1248:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _277 = get_map_element M1, `20`

  %% Aliased:
  %%    _277
  _1249 = succeeded:guard _277
  br _1249, ^1249, ^1247

1249:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _276 = get_map_element M1, `30`

  %% Aliased:
  %%    _276
  _1250 = succeeded:guard _276
  br _1250, ^1250, ^1247

1250:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _275 = get_map_element M1, `{["00"]}`

  %% Aliased:
  %%    _275
  _1251 = succeeded:guard _275
  br _1251, ^1251, ^1247

1251:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _274 = get_map_element M1, `"40"`

  %% Aliased:
  %%    _274
  _1252 = succeeded:guard _274
  br _1252, ^1252, ^1247

1252:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _273 = get_map_element M1, `<<"50">>`

  %% Aliased:
  %%    _273
  _1253 = succeeded:guard _273
  br _1253, ^1253, ^1247

1253:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _278
  _3544 = bif:'=:=' _278, `na0`
  br _3544, ^3543, ^1247

3543:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _277
  _3542 = bif:'=:=' _277, `nb0`
  br _3542, ^3541, ^1247

3541:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _276
  _3540 = bif:'=:=' _276, `"nc0"`
  br _3540, ^3540, ^1247

3540:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _275
  _3539 = bif:'=:=' _275, `"n10"`
  br _3539, ^3539, ^1247

3539:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _274
  _3538 = bif:'=:=' _274, `"nd0"`
  br _3538, ^3538, ^1247

3538:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _273
  _3537 = bif:'=:=' _273, `"ne0"`
  br _3537, ^3535, ^1247

3535:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _284 = get_map_element M1, `11`

  %% Aliased:
  %%    _284
  _1256 = succeeded:guard _284
  br _1256, ^1256, ^1255

1256:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _283 = get_map_element M1, `21`

  %% Aliased:
  %%    _283
  _1257 = succeeded:guard _283
  br _1257, ^1257, ^1255

1257:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _282 = get_map_element M1, `31`

  %% Aliased:
  %%    _282
  _1258 = succeeded:guard _282
  br _1258, ^1258, ^1255

1258:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _281 = get_map_element M1, `{["01"]}`

  %% Aliased:
  %%    _281
  _1259 = succeeded:guard _281
  br _1259, ^1259, ^1255

1259:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _280 = get_map_element M1, `"41"`

  %% Aliased:
  %%    _280
  _1260 = succeeded:guard _280
  br _1260, ^1260, ^1255

1260:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _279 = get_map_element M1, `<<"51">>`

  %% Aliased:
  %%    _279
  _1261 = succeeded:guard _279
  br _1261, ^1261, ^1255

1261:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _284
  _3534 = bif:'=:=' _284, `na1`
  br _3534, ^3533, ^1255

3533:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _283
  _3532 = bif:'=:=' _283, `nb1`
  br _3532, ^3531, ^1255

3531:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _282
  _3530 = bif:'=:=' _282, `"nc1"`
  br _3530, ^3530, ^1255

3530:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _281
  _3529 = bif:'=:=' _281, `"n11"`
  br _3529, ^3529, ^1255

3529:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _280
  _3528 = bif:'=:=' _280, `"nd1"`
  br _3528, ^3528, ^1255

3528:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _279
  _3527 = bif:'=:=' _279, `"ne1"`
  br _3527, ^3525, ^1255

3525:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _290 = get_map_element M1, `12`

  %% Aliased:
  %%    _290
  _1264 = succeeded:guard _290
  br _1264, ^1264, ^1263

1264:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _289 = get_map_element M1, `22`

  %% Aliased:
  %%    _289
  _1265 = succeeded:guard _289
  br _1265, ^1265, ^1263

1265:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _288 = get_map_element M1, `32`

  %% Aliased:
  %%    _288
  _1266 = succeeded:guard _288
  br _1266, ^1266, ^1263

1266:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _287 = get_map_element M1, `{["02"]}`

  %% Aliased:
  %%    _287
  _1267 = succeeded:guard _287
  br _1267, ^1267, ^1263

1267:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _286 = get_map_element M1, `"42"`

  %% Aliased:
  %%    _286
  _1268 = succeeded:guard _286
  br _1268, ^1268, ^1263

1268:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _285 = get_map_element M1, `<<"52">>`

  %% Aliased:
  %%    _285
  _1269 = succeeded:guard _285
  br _1269, ^1269, ^1263

1269:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _290
  _3524 = bif:'=:=' _290, `na2`
  br _3524, ^3523, ^1263

3523:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _289
  _3522 = bif:'=:=' _289, `nb2`
  br _3522, ^3521, ^1263

3521:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _288
  _3520 = bif:'=:=' _288, `"nc2"`
  br _3520, ^3520, ^1263

3520:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _287
  _3519 = bif:'=:=' _287, `"n12"`
  br _3519, ^3519, ^1263

3519:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _286
  _3518 = bif:'=:=' _286, `"nd2"`
  br _3518, ^3518, ^1263

3518:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _285
  _3517 = bif:'=:=' _285, `"ne2"`
  br _3517, ^3515, ^1263

3515:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _296 = get_map_element M1, `13`

  %% Aliased:
  %%    _296
  _1272 = succeeded:guard _296
  br _1272, ^1272, ^1271

1272:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _295 = get_map_element M1, `23`

  %% Aliased:
  %%    _295
  _1273 = succeeded:guard _295
  br _1273, ^1273, ^1271

1273:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _294 = get_map_element M1, `33`

  %% Aliased:
  %%    _294
  _1274 = succeeded:guard _294
  br _1274, ^1274, ^1271

1274:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _293 = get_map_element M1, `{["03"]}`

  %% Aliased:
  %%    _293
  _1275 = succeeded:guard _293
  br _1275, ^1275, ^1271

1275:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _292 = get_map_element M1, `"43"`

  %% Aliased:
  %%    _292
  _1276 = succeeded:guard _292
  br _1276, ^1276, ^1271

1276:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _291 = get_map_element M1, `<<"53">>`

  %% Aliased:
  %%    _291
  _1277 = succeeded:guard _291
  br _1277, ^1277, ^1271

1277:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _296
  _3514 = bif:'=:=' _296, `na3`
  br _3514, ^3513, ^1271

3513:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _295
  _3512 = bif:'=:=' _295, `nb3`
  br _3512, ^3511, ^1271

3511:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _294
  _3510 = bif:'=:=' _294, `"nc3"`
  br _3510, ^3510, ^1271

3510:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _293
  _3509 = bif:'=:=' _293, `"n13"`
  br _3509, ^3509, ^1271

3509:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _292
  _3508 = bif:'=:=' _292, `"nd3"`
  br _3508, ^3508, ^1271

3508:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _291
  _3507 = bif:'=:=' _291, `"ne3"`
  br _3507, ^3505, ^1271

3505:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _302 = get_map_element M1, `14`

  %% Aliased:
  %%    _302
  _1280 = succeeded:guard _302
  br _1280, ^1280, ^1279

1280:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _301 = get_map_element M1, `24`

  %% Aliased:
  %%    _301
  _1281 = succeeded:guard _301
  br _1281, ^1281, ^1279

1281:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _300 = get_map_element M1, `34`

  %% Aliased:
  %%    _300
  _1282 = succeeded:guard _300
  br _1282, ^1282, ^1279

1282:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _299 = get_map_element M1, `{["04"]}`

  %% Aliased:
  %%    _299
  _1283 = succeeded:guard _299
  br _1283, ^1283, ^1279

1283:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _298 = get_map_element M1, `"44"`

  %% Aliased:
  %%    _298
  _1284 = succeeded:guard _298
  br _1284, ^1284, ^1279

1284:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _297 = get_map_element M1, `<<"54">>`

  %% Aliased:
  %%    _297
  _1285 = succeeded:guard _297
  br _1285, ^1285, ^1279

1285:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _302
  _3504 = bif:'=:=' _302, `na4`
  br _3504, ^3503, ^1279

3503:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _301
  _3502 = bif:'=:=' _301, `nb4`
  br _3502, ^3501, ^1279

3501:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _300
  _3500 = bif:'=:=' _300, `"nc4"`
  br _3500, ^3500, ^1279

3500:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _299
  _3499 = bif:'=:=' _299, `"n14"`
  br _3499, ^3499, ^1279

3499:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _298
  _3498 = bif:'=:=' _298, `"nd4"`
  br _3498, ^3498, ^1279

3498:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _297
  _3497 = bif:'=:=' _297, `"ne4"`
  br _3497, ^3495, ^1279

3495:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _308 = get_map_element M1, `15`

  %% Aliased:
  %%    _308
  _1288 = succeeded:guard _308
  br _1288, ^1288, ^1287

1288:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _307 = get_map_element M1, `25`

  %% Aliased:
  %%    _307
  _1289 = succeeded:guard _307
  br _1289, ^1289, ^1287

1289:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _306 = get_map_element M1, `35`

  %% Aliased:
  %%    _306
  _1290 = succeeded:guard _306
  br _1290, ^1290, ^1287

1290:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _305 = get_map_element M1, `{["05"]}`

  %% Aliased:
  %%    _305
  _1291 = succeeded:guard _305
  br _1291, ^1291, ^1287

1291:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _304 = get_map_element M1, `"45"`

  %% Aliased:
  %%    _304
  _1292 = succeeded:guard _304
  br _1292, ^1292, ^1287

1292:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _303 = get_map_element M1, `<<"55">>`

  %% Aliased:
  %%    _303
  _1293 = succeeded:guard _303
  br _1293, ^1293, ^1287

1293:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _308
  _3494 = bif:'=:=' _308, `a5`
  br _3494, ^3493, ^1287

3493:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _307
  _3492 = bif:'=:=' _307, `b5`
  br _3492, ^3491, ^1287

3491:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _306
  _3490 = bif:'=:=' _306, `"c5"`
  br _3490, ^3490, ^1287

3490:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _305
  _3489 = bif:'=:=' _305, `"15"`
  br _3489, ^3489, ^1287

3489:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _304
  _3488 = bif:'=:=' _304, `"d5"`
  br _3488, ^3488, ^1287

3488:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _303
  _3487 = bif:'=:=' _303, `"e5"`
  br _3487, ^3485, ^1287

3485:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _314 = get_map_element M1, `16`

  %% Aliased:
  %%    _314
  _1296 = succeeded:guard _314
  br _1296, ^1296, ^1295

1296:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _313 = get_map_element M1, `26`

  %% Aliased:
  %%    _313
  _1297 = succeeded:guard _313
  br _1297, ^1297, ^1295

1297:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _312 = get_map_element M1, `36`

  %% Aliased:
  %%    _312
  _1298 = succeeded:guard _312
  br _1298, ^1298, ^1295

1298:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _311 = get_map_element M1, `{["06"]}`

  %% Aliased:
  %%    _311
  _1299 = succeeded:guard _311
  br _1299, ^1299, ^1295

1299:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _310 = get_map_element M1, `"46"`

  %% Aliased:
  %%    _310
  _1300 = succeeded:guard _310
  br _1300, ^1300, ^1295

1300:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _309 = get_map_element M1, `<<"56">>`

  %% Aliased:
  %%    _309
  _1301 = succeeded:guard _309
  br _1301, ^1301, ^1295

1301:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _314
  _3484 = bif:'=:=' _314, `a6`
  br _3484, ^3483, ^1295

3483:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _313
  _3482 = bif:'=:=' _313, `b6`
  br _3482, ^3481, ^1295

3481:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _312
  _3480 = bif:'=:=' _312, `"c6"`
  br _3480, ^3480, ^1295

3480:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _311
  _3479 = bif:'=:=' _311, `"16"`
  br _3479, ^3479, ^1295

3479:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _310
  _3478 = bif:'=:=' _310, `"d6"`
  br _3478, ^3478, ^1295

3478:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _309
  _3477 = bif:'=:=' _309, `"e6"`
  br _3477, ^3475, ^1295

3475:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _320 = get_map_element M1, `17`

  %% Aliased:
  %%    _320
  _1304 = succeeded:guard _320
  br _1304, ^1304, ^1303

1304:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _319 = get_map_element M1, `27`

  %% Aliased:
  %%    _319
  _1305 = succeeded:guard _319
  br _1305, ^1305, ^1303

1305:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _318 = get_map_element M1, `37`

  %% Aliased:
  %%    _318
  _1306 = succeeded:guard _318
  br _1306, ^1306, ^1303

1306:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _317 = get_map_element M1, `{["07"]}`

  %% Aliased:
  %%    _317
  _1307 = succeeded:guard _317
  br _1307, ^1307, ^1303

1307:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _316 = get_map_element M1, `"47"`

  %% Aliased:
  %%    _316
  _1308 = succeeded:guard _316
  br _1308, ^1308, ^1303

1308:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _315 = get_map_element M1, `<<"57">>`

  %% Aliased:
  %%    _315
  _1309 = succeeded:guard _315
  br _1309, ^1309, ^1303

1309:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _320
  _3474 = bif:'=:=' _320, `a7`
  br _3474, ^3473, ^1303

3473:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _319
  _3472 = bif:'=:=' _319, `b7`
  br _3472, ^3471, ^1303

3471:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _318
  _3470 = bif:'=:=' _318, `"c7"`
  br _3470, ^3470, ^1303

3470:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _317
  _3469 = bif:'=:=' _317, `"17"`
  br _3469, ^3469, ^1303

3469:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _316
  _3468 = bif:'=:=' _316, `"d7"`
  br _3468, ^3468, ^1303

3468:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _315
  _3467 = bif:'=:=' _315, `"e7"`
  br _3467, ^3465, ^1303

3465:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _326 = get_map_element M1, `18`

  %% Aliased:
  %%    _326
  _1312 = succeeded:guard _326
  br _1312, ^1312, ^1311

1312:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _325 = get_map_element M1, `28`

  %% Aliased:
  %%    _325
  _1313 = succeeded:guard _325
  br _1313, ^1313, ^1311

1313:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _324 = get_map_element M1, `38`

  %% Aliased:
  %%    _324
  _1314 = succeeded:guard _324
  br _1314, ^1314, ^1311

1314:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _323 = get_map_element M1, `{["08"]}`

  %% Aliased:
  %%    _323
  _1315 = succeeded:guard _323
  br _1315, ^1315, ^1311

1315:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _322 = get_map_element M1, `"48"`

  %% Aliased:
  %%    _322
  _1316 = succeeded:guard _322
  br _1316, ^1316, ^1311

1316:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _321 = get_map_element M1, `<<"58">>`

  %% Aliased:
  %%    _321
  _1317 = succeeded:guard _321
  br _1317, ^1317, ^1311

1317:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _326
  _3464 = bif:'=:=' _326, `a8`
  br _3464, ^3463, ^1311

3463:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _325
  _3462 = bif:'=:=' _325, `b8`
  br _3462, ^3461, ^1311

3461:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _324
  _3460 = bif:'=:=' _324, `"c8"`
  br _3460, ^3460, ^1311

3460:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _323
  _3459 = bif:'=:=' _323, `"18"`
  br _3459, ^3459, ^1311

3459:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _322
  _3458 = bif:'=:=' _322, `"d8"`
  br _3458, ^3458, ^1311

3458:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _321
  _3457 = bif:'=:=' _321, `"e8"`
  br _3457, ^3455, ^1311

3455:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _332 = get_map_element M1, `19`

  %% Aliased:
  %%    _332
  _1320 = succeeded:guard _332
  br _1320, ^1320, ^1319

1320:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _331 = get_map_element M1, `29`

  %% Aliased:
  %%    _331
  _1321 = succeeded:guard _331
  br _1321, ^1321, ^1319

1321:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _330 = get_map_element M1, `39`

  %% Aliased:
  %%    _330
  _1322 = succeeded:guard _330
  br _1322, ^1322, ^1319

1322:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _329 = get_map_element M1, `{["09"]}`

  %% Aliased:
  %%    _329
  _1323 = succeeded:guard _329
  br _1323, ^1323, ^1319

1323:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _328 = get_map_element M1, `"49"`

  %% Aliased:
  %%    _328
  _1324 = succeeded:guard _328
  br _1324, ^1324, ^1319

1324:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _327 = get_map_element M1, `<<"59">>`

  %% Aliased:
  %%    _327
  _1325 = succeeded:guard _327
  br _1325, ^1325, ^1319

1325:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _332
  _3454 = bif:'=:=' _332, `a9`
  br _3454, ^3453, ^1319

3453:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _331
  _3452 = bif:'=:=' _331, `b9`
  br _3452, ^3451, ^1319

3451:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _330
  _3450 = bif:'=:=' _330, `"c9"`
  br _3450, ^3450, ^1319

3450:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _329
  _3449 = bif:'=:=' _329, `"19"`
  br _3449, ^3449, ^1319

3449:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _328
  _3448 = bif:'=:=' _328, `"d9"`
  br _3448, ^3448, ^1319

3448:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _327
  _3447 = bif:'=:=' _327, `"e9"`
  br _3447, ^3447, ^1319

3447:
  %% map_SUITE.erl:294
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _333 = bif:map_size M1

  %% Argument types:
  %%    _333 => 0..288230376151711743
  %% Unique:
  %%    _333
  _3445 = bif:'=:=' _333, `60`
  br _3445, ^3441, ^1328

3441:
  %% map_SUITE.erl:299
  M2 = call (`id`/1), `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",10.0 => fa0,11.0 => fa1,12.0 => fa2,13.0 => fa3,14.0 => fa4,
   15.0 => fa5,16.0 => fa6,17.0 => fa7,18.0 => fa8,19.0 => fa9,20.0 => fb0,
   21.0 => fb1,22.0 => fb2,23.0 => fb3,24.0 => fb4,25.0 => fb5,26.0 => fb6,
   27.0 => fb7,28.0 => fb8,29.0 => fb9,30.0 => "fc0",31.0 => "fc1",
   32.0 => "fc2",33.0 => "fc3",34.0 => "fc4",35.0 => "fc5",36.0 => "fc6",
   37.0 => "fc7",38.0 => "fc8",39.0 => "fc9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M2
  _1332 = succeeded:body M2
  br _1332, ^1332, ^1

1332:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M2
  _3439 = bif:is_map M2
  br _3439, ^3439, ^1334

3439:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _340 = get_map_element M2, `10`

  %% Aliased:
  %%    _340
  _1335 = succeeded:guard _340
  br _1335, ^1335, ^1334

1335:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _339 = get_map_element M2, `20`

  %% Aliased:
  %%    _339
  _1336 = succeeded:guard _339
  br _1336, ^1336, ^1334

1336:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _338 = get_map_element M2, `30`

  %% Aliased:
  %%    _338
  _1337 = succeeded:guard _338
  br _1337, ^1337, ^1334

1337:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _337 = get_map_element M2, `{["00"]}`

  %% Aliased:
  %%    _337
  _1338 = succeeded:guard _337
  br _1338, ^1338, ^1334

1338:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _336 = get_map_element M2, `"40"`

  %% Aliased:
  %%    _336
  _1339 = succeeded:guard _336
  br _1339, ^1339, ^1334

1339:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _335 = get_map_element M2, `<<"50">>`

  %% Aliased:
  %%    _335
  _1340 = succeeded:guard _335
  br _1340, ^1340, ^1334

1340:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _340
  _3438 = bif:'=:=' _340, `a0`
  br _3438, ^3437, ^1334

3437:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _339
  _3436 = bif:'=:=' _339, `b0`
  br _3436, ^3435, ^1334

3435:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _338
  _3434 = bif:'=:=' _338, `"c0"`
  br _3434, ^3434, ^1334

3434:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _337
  _3433 = bif:'=:=' _337, `"10"`
  br _3433, ^3433, ^1334

3433:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _336
  _3432 = bif:'=:=' _336, `"d0"`
  br _3432, ^3432, ^1334

3432:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _335
  _3431 = bif:'=:=' _335, `"e0"`
  br _3431, ^3429, ^1334

3429:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _346 = get_map_element M2, `11`

  %% Aliased:
  %%    _346
  _1343 = succeeded:guard _346
  br _1343, ^1343, ^1342

1343:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _345 = get_map_element M2, `21`

  %% Aliased:
  %%    _345
  _1344 = succeeded:guard _345
  br _1344, ^1344, ^1342

1344:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _344 = get_map_element M2, `31`

  %% Aliased:
  %%    _344
  _1345 = succeeded:guard _344
  br _1345, ^1345, ^1342

1345:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _343 = get_map_element M2, `{["01"]}`

  %% Aliased:
  %%    _343
  _1346 = succeeded:guard _343
  br _1346, ^1346, ^1342

1346:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _342 = get_map_element M2, `"41"`

  %% Aliased:
  %%    _342
  _1347 = succeeded:guard _342
  br _1347, ^1347, ^1342

1347:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _341 = get_map_element M2, `<<"51">>`

  %% Aliased:
  %%    _341
  _1348 = succeeded:guard _341
  br _1348, ^1348, ^1342

1348:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _346
  _3428 = bif:'=:=' _346, `a1`
  br _3428, ^3427, ^1342

3427:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _345
  _3426 = bif:'=:=' _345, `b1`
  br _3426, ^3425, ^1342

3425:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _344
  _3424 = bif:'=:=' _344, `"c1"`
  br _3424, ^3424, ^1342

3424:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _343
  _3423 = bif:'=:=' _343, `"11"`
  br _3423, ^3423, ^1342

3423:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _342
  _3422 = bif:'=:=' _342, `"d1"`
  br _3422, ^3422, ^1342

3422:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _341
  _3421 = bif:'=:=' _341, `"e1"`
  br _3421, ^3419, ^1342

3419:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _352 = get_map_element M2, `12`

  %% Aliased:
  %%    _352
  _1351 = succeeded:guard _352
  br _1351, ^1351, ^1350

1351:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _351 = get_map_element M2, `22`

  %% Aliased:
  %%    _351
  _1352 = succeeded:guard _351
  br _1352, ^1352, ^1350

1352:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _350 = get_map_element M2, `32`

  %% Aliased:
  %%    _350
  _1353 = succeeded:guard _350
  br _1353, ^1353, ^1350

1353:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _349 = get_map_element M2, `{["02"]}`

  %% Aliased:
  %%    _349
  _1354 = succeeded:guard _349
  br _1354, ^1354, ^1350

1354:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _348 = get_map_element M2, `"42"`

  %% Aliased:
  %%    _348
  _1355 = succeeded:guard _348
  br _1355, ^1355, ^1350

1355:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _347 = get_map_element M2, `<<"52">>`

  %% Aliased:
  %%    _347
  _1356 = succeeded:guard _347
  br _1356, ^1356, ^1350

1356:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _352
  _3418 = bif:'=:=' _352, `a2`
  br _3418, ^3417, ^1350

3417:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _351
  _3416 = bif:'=:=' _351, `b2`
  br _3416, ^3415, ^1350

3415:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _350
  _3414 = bif:'=:=' _350, `"c2"`
  br _3414, ^3414, ^1350

3414:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _349
  _3413 = bif:'=:=' _349, `"12"`
  br _3413, ^3413, ^1350

3413:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _348
  _3412 = bif:'=:=' _348, `"d2"`
  br _3412, ^3412, ^1350

3412:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _347
  _3411 = bif:'=:=' _347, `"e2"`
  br _3411, ^3409, ^1350

3409:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _358 = get_map_element M2, `13`

  %% Aliased:
  %%    _358
  _1359 = succeeded:guard _358
  br _1359, ^1359, ^1358

1359:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _357 = get_map_element M2, `23`

  %% Aliased:
  %%    _357
  _1360 = succeeded:guard _357
  br _1360, ^1360, ^1358

1360:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _356 = get_map_element M2, `33`

  %% Aliased:
  %%    _356
  _1361 = succeeded:guard _356
  br _1361, ^1361, ^1358

1361:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _355 = get_map_element M2, `{["03"]}`

  %% Aliased:
  %%    _355
  _1362 = succeeded:guard _355
  br _1362, ^1362, ^1358

1362:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _354 = get_map_element M2, `"43"`

  %% Aliased:
  %%    _354
  _1363 = succeeded:guard _354
  br _1363, ^1363, ^1358

1363:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _353 = get_map_element M2, `<<"53">>`

  %% Aliased:
  %%    _353
  _1364 = succeeded:guard _353
  br _1364, ^1364, ^1358

1364:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _358
  _3408 = bif:'=:=' _358, `a3`
  br _3408, ^3407, ^1358

3407:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _357
  _3406 = bif:'=:=' _357, `b3`
  br _3406, ^3405, ^1358

3405:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _356
  _3404 = bif:'=:=' _356, `"c3"`
  br _3404, ^3404, ^1358

3404:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _355
  _3403 = bif:'=:=' _355, `"13"`
  br _3403, ^3403, ^1358

3403:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _354
  _3402 = bif:'=:=' _354, `"d3"`
  br _3402, ^3402, ^1358

3402:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _353
  _3401 = bif:'=:=' _353, `"e3"`
  br _3401, ^3399, ^1358

3399:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _364 = get_map_element M2, `14`

  %% Aliased:
  %%    _364
  _1367 = succeeded:guard _364
  br _1367, ^1367, ^1366

1367:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _363 = get_map_element M2, `24`

  %% Aliased:
  %%    _363
  _1368 = succeeded:guard _363
  br _1368, ^1368, ^1366

1368:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _362 = get_map_element M2, `34`

  %% Aliased:
  %%    _362
  _1369 = succeeded:guard _362
  br _1369, ^1369, ^1366

1369:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _361 = get_map_element M2, `{["04"]}`

  %% Aliased:
  %%    _361
  _1370 = succeeded:guard _361
  br _1370, ^1370, ^1366

1370:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _360 = get_map_element M2, `"44"`

  %% Aliased:
  %%    _360
  _1371 = succeeded:guard _360
  br _1371, ^1371, ^1366

1371:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _359 = get_map_element M2, `<<"54">>`

  %% Aliased:
  %%    _359
  _1372 = succeeded:guard _359
  br _1372, ^1372, ^1366

1372:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _364
  _3398 = bif:'=:=' _364, `a4`
  br _3398, ^3397, ^1366

3397:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _363
  _3396 = bif:'=:=' _363, `b4`
  br _3396, ^3395, ^1366

3395:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _362
  _3394 = bif:'=:=' _362, `"c4"`
  br _3394, ^3394, ^1366

3394:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _361
  _3393 = bif:'=:=' _361, `"14"`
  br _3393, ^3393, ^1366

3393:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _360
  _3392 = bif:'=:=' _360, `"d4"`
  br _3392, ^3392, ^1366

3392:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _359
  _3391 = bif:'=:=' _359, `"e4"`
  br _3391, ^3389, ^1366

3389:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _370 = get_map_element M2, `15`

  %% Aliased:
  %%    _370
  _1375 = succeeded:guard _370
  br _1375, ^1375, ^1374

1375:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _369 = get_map_element M2, `25`

  %% Aliased:
  %%    _369
  _1376 = succeeded:guard _369
  br _1376, ^1376, ^1374

1376:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _368 = get_map_element M2, `35`

  %% Aliased:
  %%    _368
  _1377 = succeeded:guard _368
  br _1377, ^1377, ^1374

1377:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _367 = get_map_element M2, `{["05"]}`

  %% Aliased:
  %%    _367
  _1378 = succeeded:guard _367
  br _1378, ^1378, ^1374

1378:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _366 = get_map_element M2, `"45"`

  %% Aliased:
  %%    _366
  _1379 = succeeded:guard _366
  br _1379, ^1379, ^1374

1379:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _365 = get_map_element M2, `<<"55">>`

  %% Aliased:
  %%    _365
  _1380 = succeeded:guard _365
  br _1380, ^1380, ^1374

1380:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _370
  _3388 = bif:'=:=' _370, `a5`
  br _3388, ^3387, ^1374

3387:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _369
  _3386 = bif:'=:=' _369, `b5`
  br _3386, ^3385, ^1374

3385:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _368
  _3384 = bif:'=:=' _368, `"c5"`
  br _3384, ^3384, ^1374

3384:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _367
  _3383 = bif:'=:=' _367, `"15"`
  br _3383, ^3383, ^1374

3383:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _366
  _3382 = bif:'=:=' _366, `"d5"`
  br _3382, ^3382, ^1374

3382:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _365
  _3381 = bif:'=:=' _365, `"e5"`
  br _3381, ^3379, ^1374

3379:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _376 = get_map_element M2, `16`

  %% Aliased:
  %%    _376
  _1383 = succeeded:guard _376
  br _1383, ^1383, ^1382

1383:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _375 = get_map_element M2, `26`

  %% Aliased:
  %%    _375
  _1384 = succeeded:guard _375
  br _1384, ^1384, ^1382

1384:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _374 = get_map_element M2, `36`

  %% Aliased:
  %%    _374
  _1385 = succeeded:guard _374
  br _1385, ^1385, ^1382

1385:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _373 = get_map_element M2, `{["06"]}`

  %% Aliased:
  %%    _373
  _1386 = succeeded:guard _373
  br _1386, ^1386, ^1382

1386:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _372 = get_map_element M2, `"46"`

  %% Aliased:
  %%    _372
  _1387 = succeeded:guard _372
  br _1387, ^1387, ^1382

1387:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _371 = get_map_element M2, `<<"56">>`

  %% Aliased:
  %%    _371
  _1388 = succeeded:guard _371
  br _1388, ^1388, ^1382

1388:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _376
  _3378 = bif:'=:=' _376, `a6`
  br _3378, ^3377, ^1382

3377:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _375
  _3376 = bif:'=:=' _375, `b6`
  br _3376, ^3375, ^1382

3375:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _374
  _3374 = bif:'=:=' _374, `"c6"`
  br _3374, ^3374, ^1382

3374:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _373
  _3373 = bif:'=:=' _373, `"16"`
  br _3373, ^3373, ^1382

3373:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _372
  _3372 = bif:'=:=' _372, `"d6"`
  br _3372, ^3372, ^1382

3372:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _371
  _3371 = bif:'=:=' _371, `"e6"`
  br _3371, ^3369, ^1382

3369:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _382 = get_map_element M2, `17`

  %% Aliased:
  %%    _382
  _1391 = succeeded:guard _382
  br _1391, ^1391, ^1390

1391:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _381 = get_map_element M2, `27`

  %% Aliased:
  %%    _381
  _1392 = succeeded:guard _381
  br _1392, ^1392, ^1390

1392:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _380 = get_map_element M2, `37`

  %% Aliased:
  %%    _380
  _1393 = succeeded:guard _380
  br _1393, ^1393, ^1390

1393:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _379 = get_map_element M2, `{["07"]}`

  %% Aliased:
  %%    _379
  _1394 = succeeded:guard _379
  br _1394, ^1394, ^1390

1394:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _378 = get_map_element M2, `"47"`

  %% Aliased:
  %%    _378
  _1395 = succeeded:guard _378
  br _1395, ^1395, ^1390

1395:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _377 = get_map_element M2, `<<"57">>`

  %% Aliased:
  %%    _377
  _1396 = succeeded:guard _377
  br _1396, ^1396, ^1390

1396:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _382
  _3368 = bif:'=:=' _382, `a7`
  br _3368, ^3367, ^1390

3367:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _381
  _3366 = bif:'=:=' _381, `b7`
  br _3366, ^3365, ^1390

3365:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _380
  _3364 = bif:'=:=' _380, `"c7"`
  br _3364, ^3364, ^1390

3364:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _379
  _3363 = bif:'=:=' _379, `"17"`
  br _3363, ^3363, ^1390

3363:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _378
  _3362 = bif:'=:=' _378, `"d7"`
  br _3362, ^3362, ^1390

3362:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _377
  _3361 = bif:'=:=' _377, `"e7"`
  br _3361, ^3359, ^1390

3359:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _388 = get_map_element M2, `18`

  %% Aliased:
  %%    _388
  _1399 = succeeded:guard _388
  br _1399, ^1399, ^1398

1399:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _387 = get_map_element M2, `28`

  %% Aliased:
  %%    _387
  _1400 = succeeded:guard _387
  br _1400, ^1400, ^1398

1400:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _386 = get_map_element M2, `38`

  %% Aliased:
  %%    _386
  _1401 = succeeded:guard _386
  br _1401, ^1401, ^1398

1401:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _385 = get_map_element M2, `{["08"]}`

  %% Aliased:
  %%    _385
  _1402 = succeeded:guard _385
  br _1402, ^1402, ^1398

1402:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _384 = get_map_element M2, `"48"`

  %% Aliased:
  %%    _384
  _1403 = succeeded:guard _384
  br _1403, ^1403, ^1398

1403:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _383 = get_map_element M2, `<<"58">>`

  %% Aliased:
  %%    _383
  _1404 = succeeded:guard _383
  br _1404, ^1404, ^1398

1404:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _388
  _3358 = bif:'=:=' _388, `a8`
  br _3358, ^3357, ^1398

3357:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _387
  _3356 = bif:'=:=' _387, `b8`
  br _3356, ^3355, ^1398

3355:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _386
  _3354 = bif:'=:=' _386, `"c8"`
  br _3354, ^3354, ^1398

3354:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _385
  _3353 = bif:'=:=' _385, `"18"`
  br _3353, ^3353, ^1398

3353:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _384
  _3352 = bif:'=:=' _384, `"d8"`
  br _3352, ^3352, ^1398

3352:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _383
  _3351 = bif:'=:=' _383, `"e8"`
  br _3351, ^3349, ^1398

3349:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _394 = get_map_element M2, `19`

  %% Aliased:
  %%    _394
  _1407 = succeeded:guard _394
  br _1407, ^1407, ^1406

1407:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _393 = get_map_element M2, `29`

  %% Aliased:
  %%    _393
  _1408 = succeeded:guard _393
  br _1408, ^1408, ^1406

1408:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _392 = get_map_element M2, `39`

  %% Aliased:
  %%    _392
  _1409 = succeeded:guard _392
  br _1409, ^1409, ^1406

1409:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _391 = get_map_element M2, `{["09"]}`

  %% Aliased:
  %%    _391
  _1410 = succeeded:guard _391
  br _1410, ^1410, ^1406

1410:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _390 = get_map_element M2, `"49"`

  %% Aliased:
  %%    _390
  _1411 = succeeded:guard _390
  br _1411, ^1411, ^1406

1411:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _389 = get_map_element M2, `<<"59">>`

  %% Aliased:
  %%    _389
  _1412 = succeeded:guard _389
  br _1412, ^1412, ^1406

1412:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _394
  _3348 = bif:'=:=' _394, `a9`
  br _3348, ^3347, ^1406

3347:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _393
  _3346 = bif:'=:=' _393, `b9`
  br _3346, ^3345, ^1406

3345:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _392
  _3344 = bif:'=:=' _392, `"c9"`
  br _3344, ^3344, ^1406

3344:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _391
  _3343 = bif:'=:=' _391, `"19"`
  br _3343, ^3343, ^1406

3343:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _390
  _3342 = bif:'=:=' _390, `"d9"`
  br _3342, ^3342, ^1406

3342:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _389
  _3341 = bif:'=:=' _389, `"e9"`
  br _3341, ^3339, ^1406

3339:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _400 = get_map_element M2, `10.0`

  %% Aliased:
  %%    _400
  _1415 = succeeded:guard _400
  br _1415, ^1415, ^1414

1415:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _399 = get_map_element M2, `20.0`

  %% Aliased:
  %%    _399
  _1416 = succeeded:guard _399
  br _1416, ^1416, ^1414

1416:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _398 = get_map_element M2, `30.0`

  %% Aliased:
  %%    _398
  _1417 = succeeded:guard _398
  br _1417, ^1420, ^1414

1420:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _400
  _3338 = bif:'=:=' _400, `fa0`
  br _3338, ^3337, ^1414

3337:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _399
  _3336 = bif:'=:=' _399, `fb0`
  br _3336, ^3335, ^1414

3335:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _398
  _3334 = bif:'=:=' _398, `"fc0"`
  br _3334, ^3329, ^1414

3329:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _406 = get_map_element M2, `11.0`

  %% Aliased:
  %%    _406
  _1423 = succeeded:guard _406
  br _1423, ^1423, ^1422

1423:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _405 = get_map_element M2, `21.0`

  %% Aliased:
  %%    _405
  _1424 = succeeded:guard _405
  br _1424, ^1424, ^1422

1424:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _404 = get_map_element M2, `31.0`

  %% Aliased:
  %%    _404
  _1425 = succeeded:guard _404
  br _1425, ^1428, ^1422

1428:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _406
  _3328 = bif:'=:=' _406, `fa1`
  br _3328, ^3327, ^1422

3327:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _405
  _3326 = bif:'=:=' _405, `fb1`
  br _3326, ^3325, ^1422

3325:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _404
  _3324 = bif:'=:=' _404, `"fc1"`
  br _3324, ^3319, ^1422

3319:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _412 = get_map_element M2, `12.0`

  %% Aliased:
  %%    _412
  _1431 = succeeded:guard _412
  br _1431, ^1431, ^1430

1431:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _411 = get_map_element M2, `22.0`

  %% Aliased:
  %%    _411
  _1432 = succeeded:guard _411
  br _1432, ^1432, ^1430

1432:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _410 = get_map_element M2, `32.0`

  %% Aliased:
  %%    _410
  _1433 = succeeded:guard _410
  br _1433, ^1436, ^1430

1436:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _412
  _3318 = bif:'=:=' _412, `fa2`
  br _3318, ^3317, ^1430

3317:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _411
  _3316 = bif:'=:=' _411, `fb2`
  br _3316, ^3315, ^1430

3315:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _410
  _3314 = bif:'=:=' _410, `"fc2"`
  br _3314, ^3309, ^1430

3309:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _418 = get_map_element M2, `13.0`

  %% Aliased:
  %%    _418
  _1439 = succeeded:guard _418
  br _1439, ^1439, ^1438

1439:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _417 = get_map_element M2, `23.0`

  %% Aliased:
  %%    _417
  _1440 = succeeded:guard _417
  br _1440, ^1440, ^1438

1440:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _416 = get_map_element M2, `33.0`

  %% Aliased:
  %%    _416
  _1441 = succeeded:guard _416
  br _1441, ^1444, ^1438

1444:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _418
  _3308 = bif:'=:=' _418, `fa3`
  br _3308, ^3307, ^1438

3307:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _417
  _3306 = bif:'=:=' _417, `fb3`
  br _3306, ^3305, ^1438

3305:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _416
  _3304 = bif:'=:=' _416, `"fc3"`
  br _3304, ^3299, ^1438

3299:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _424 = get_map_element M2, `14.0`

  %% Aliased:
  %%    _424
  _1447 = succeeded:guard _424
  br _1447, ^1447, ^1446

1447:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _423 = get_map_element M2, `24.0`

  %% Aliased:
  %%    _423
  _1448 = succeeded:guard _423
  br _1448, ^1448, ^1446

1448:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _422 = get_map_element M2, `34.0`

  %% Aliased:
  %%    _422
  _1449 = succeeded:guard _422
  br _1449, ^1452, ^1446

1452:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _424
  _3298 = bif:'=:=' _424, `fa4`
  br _3298, ^3297, ^1446

3297:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _423
  _3296 = bif:'=:=' _423, `fb4`
  br _3296, ^3295, ^1446

3295:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _422
  _3294 = bif:'=:=' _422, `"fc4"`
  br _3294, ^3289, ^1446

3289:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _430 = get_map_element M2, `15.0`

  %% Aliased:
  %%    _430
  _1455 = succeeded:guard _430
  br _1455, ^1455, ^1454

1455:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _429 = get_map_element M2, `25.0`

  %% Aliased:
  %%    _429
  _1456 = succeeded:guard _429
  br _1456, ^1456, ^1454

1456:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _428 = get_map_element M2, `35.0`

  %% Aliased:
  %%    _428
  _1457 = succeeded:guard _428
  br _1457, ^1460, ^1454

1460:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _430
  _3288 = bif:'=:=' _430, `fa5`
  br _3288, ^3287, ^1454

3287:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _429
  _3286 = bif:'=:=' _429, `fb5`
  br _3286, ^3285, ^1454

3285:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _428
  _3284 = bif:'=:=' _428, `"fc5"`
  br _3284, ^3279, ^1454

3279:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _436 = get_map_element M2, `16.0`

  %% Aliased:
  %%    _436
  _1463 = succeeded:guard _436
  br _1463, ^1463, ^1462

1463:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _435 = get_map_element M2, `26.0`

  %% Aliased:
  %%    _435
  _1464 = succeeded:guard _435
  br _1464, ^1464, ^1462

1464:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _434 = get_map_element M2, `36.0`

  %% Aliased:
  %%    _434
  _1465 = succeeded:guard _434
  br _1465, ^1468, ^1462

1468:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _436
  _3278 = bif:'=:=' _436, `fa6`
  br _3278, ^3277, ^1462

3277:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _435
  _3276 = bif:'=:=' _435, `fb6`
  br _3276, ^3275, ^1462

3275:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _434
  _3274 = bif:'=:=' _434, `"fc6"`
  br _3274, ^3269, ^1462

3269:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _442 = get_map_element M2, `17.0`

  %% Aliased:
  %%    _442
  _1471 = succeeded:guard _442
  br _1471, ^1471, ^1470

1471:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _441 = get_map_element M2, `27.0`

  %% Aliased:
  %%    _441
  _1472 = succeeded:guard _441
  br _1472, ^1472, ^1470

1472:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _440 = get_map_element M2, `37.0`

  %% Aliased:
  %%    _440
  _1473 = succeeded:guard _440
  br _1473, ^1476, ^1470

1476:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _442
  _3268 = bif:'=:=' _442, `fa7`
  br _3268, ^3267, ^1470

3267:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _441
  _3266 = bif:'=:=' _441, `fb7`
  br _3266, ^3265, ^1470

3265:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _440
  _3264 = bif:'=:=' _440, `"fc7"`
  br _3264, ^3259, ^1470

3259:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _448 = get_map_element M2, `18.0`

  %% Aliased:
  %%    _448
  _1479 = succeeded:guard _448
  br _1479, ^1479, ^1478

1479:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _447 = get_map_element M2, `28.0`

  %% Aliased:
  %%    _447
  _1480 = succeeded:guard _447
  br _1480, ^1480, ^1478

1480:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _446 = get_map_element M2, `38.0`

  %% Aliased:
  %%    _446
  _1481 = succeeded:guard _446
  br _1481, ^1484, ^1478

1484:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _448
  _3258 = bif:'=:=' _448, `fa8`
  br _3258, ^3257, ^1478

3257:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _447
  _3256 = bif:'=:=' _447, `fb8`
  br _3256, ^3255, ^1478

3255:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _446
  _3254 = bif:'=:=' _446, `"fc8"`
  br _3254, ^3249, ^1478

3249:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _454 = get_map_element M2, `19.0`

  %% Aliased:
  %%    _454
  _1487 = succeeded:guard _454
  br _1487, ^1487, ^1486

1487:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _453 = get_map_element M2, `29.0`

  %% Aliased:
  %%    _453
  _1488 = succeeded:guard _453
  br _1488, ^1488, ^1486

1488:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _452 = get_map_element M2, `39.0`

  %% Aliased:
  %%    _452
  _1489 = succeeded:guard _452
  br _1489, ^1492, ^1486

1492:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _454
  _3248 = bif:'=:=' _454, `fa9`
  br _3248, ^3247, ^1486

3247:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _453
  _3246 = bif:'=:=' _453, `fb9`
  br _3246, ^3245, ^1486

3245:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _452
  _3244 = bif:'=:=' _452, `"fc9"`
  br _3244, ^3241, ^1486

3241:
  %% map_SUITE.erl:347
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _455 = bif:map_size M2

  %% Argument types:
  %%    _455 => 0..288230376151711743
  %% Unique:
  %%    _455
  _3239 = bif:'=:=' _455, `90`
  br _3239, ^3235, ^1495

3235:
  %% map_SUITE.erl:351
  M3 = call (`id`/1), `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",67108863 => big8,4294967295 => big7,4294967296 => big5,
   8589934592 => big6,18446744073709551616 => big4,
   36893488147419103232 => big1,73786976294838206464 => big2,
   147573952589676412928 => big3,10.0 => fa0,11.0 => fa1,12.0 => fa2,
   13.0 => fa3,14.0 => fa4,15.0 => fa5,16.0 => fa6,17.0 => fa7,18.0 => fa8,
   19.0 => fa9,20.0 => fb0,21.0 => fb1,22.0 => fb2,23.0 => fb3,24.0 => fb4,
   25.0 => fb5,26.0 => fb6,27.0 => fb7,28.0 => fb8,29.0 => fb9,30.0 => "fc0",
   31.0 => "fc1",32.0 => "fc2",33.0 => "fc3",34.0 => "fc4",35.0 => "fc5",
   36.0 => "fc6",37.0 => "fc7",38.0 => "fc8",39.0 => "fc9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M3
  _1499 = succeeded:body M3
  br _1499, ^1499, ^1

1499:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M3
  _3233 = bif:is_map M3
  br _3233, ^3233, ^1501

3233:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _462 = get_map_element M3, `10`

  %% Aliased:
  %%    _462
  _1502 = succeeded:guard _462
  br _1502, ^1502, ^1501

1502:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _461 = get_map_element M3, `20`

  %% Aliased:
  %%    _461
  _1503 = succeeded:guard _461
  br _1503, ^1503, ^1501

1503:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _460 = get_map_element M3, `30`

  %% Aliased:
  %%    _460
  _1504 = succeeded:guard _460
  br _1504, ^1504, ^1501

1504:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _459 = get_map_element M3, `{["00"]}`

  %% Aliased:
  %%    _459
  _1505 = succeeded:guard _459
  br _1505, ^1505, ^1501

1505:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _458 = get_map_element M3, `"40"`

  %% Aliased:
  %%    _458
  _1506 = succeeded:guard _458
  br _1506, ^1506, ^1501

1506:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _457 = get_map_element M3, `<<"50">>`

  %% Aliased:
  %%    _457
  _1507 = succeeded:guard _457
  br _1507, ^1507, ^1501

1507:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _462
  _3232 = bif:'=:=' _462, `a0`
  br _3232, ^3231, ^1501

3231:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _461
  _3230 = bif:'=:=' _461, `b0`
  br _3230, ^3229, ^1501

3229:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _460
  _3228 = bif:'=:=' _460, `"c0"`
  br _3228, ^3228, ^1501

3228:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _459
  _3227 = bif:'=:=' _459, `"10"`
  br _3227, ^3227, ^1501

3227:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _458
  _3226 = bif:'=:=' _458, `"d0"`
  br _3226, ^3226, ^1501

3226:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _457
  _3225 = bif:'=:=' _457, `"e0"`
  br _3225, ^3223, ^1501

3223:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _468 = get_map_element M3, `11`

  %% Aliased:
  %%    _468
  _1510 = succeeded:guard _468
  br _1510, ^1510, ^1509

1510:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _467 = get_map_element M3, `21`

  %% Aliased:
  %%    _467
  _1511 = succeeded:guard _467
  br _1511, ^1511, ^1509

1511:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _466 = get_map_element M3, `31`

  %% Aliased:
  %%    _466
  _1512 = succeeded:guard _466
  br _1512, ^1512, ^1509

1512:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _465 = get_map_element M3, `{["01"]}`

  %% Aliased:
  %%    _465
  _1513 = succeeded:guard _465
  br _1513, ^1513, ^1509

1513:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _464 = get_map_element M3, `"41"`

  %% Aliased:
  %%    _464
  _1514 = succeeded:guard _464
  br _1514, ^1514, ^1509

1514:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _463 = get_map_element M3, `<<"51">>`

  %% Aliased:
  %%    _463
  _1515 = succeeded:guard _463
  br _1515, ^1515, ^1509

1515:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _468
  _3222 = bif:'=:=' _468, `a1`
  br _3222, ^3221, ^1509

3221:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _467
  _3220 = bif:'=:=' _467, `b1`
  br _3220, ^3219, ^1509

3219:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _466
  _3218 = bif:'=:=' _466, `"c1"`
  br _3218, ^3218, ^1509

3218:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _465
  _3217 = bif:'=:=' _465, `"11"`
  br _3217, ^3217, ^1509

3217:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _464
  _3216 = bif:'=:=' _464, `"d1"`
  br _3216, ^3216, ^1509

3216:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _463
  _3215 = bif:'=:=' _463, `"e1"`
  br _3215, ^3213, ^1509

3213:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _474 = get_map_element M3, `12`

  %% Aliased:
  %%    _474
  _1518 = succeeded:guard _474
  br _1518, ^1518, ^1517

1518:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _473 = get_map_element M3, `22`

  %% Aliased:
  %%    _473
  _1519 = succeeded:guard _473
  br _1519, ^1519, ^1517

1519:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _472 = get_map_element M3, `32`

  %% Aliased:
  %%    _472
  _1520 = succeeded:guard _472
  br _1520, ^1520, ^1517

1520:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _471 = get_map_element M3, `{["02"]}`

  %% Aliased:
  %%    _471
  _1521 = succeeded:guard _471
  br _1521, ^1521, ^1517

1521:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _470 = get_map_element M3, `"42"`

  %% Aliased:
  %%    _470
  _1522 = succeeded:guard _470
  br _1522, ^1522, ^1517

1522:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _469 = get_map_element M3, `<<"52">>`

  %% Aliased:
  %%    _469
  _1523 = succeeded:guard _469
  br _1523, ^1523, ^1517

1523:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _474
  _3212 = bif:'=:=' _474, `a2`
  br _3212, ^3211, ^1517

3211:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _473
  _3210 = bif:'=:=' _473, `b2`
  br _3210, ^3209, ^1517

3209:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _472
  _3208 = bif:'=:=' _472, `"c2"`
  br _3208, ^3208, ^1517

3208:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _471
  _3207 = bif:'=:=' _471, `"12"`
  br _3207, ^3207, ^1517

3207:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _470
  _3206 = bif:'=:=' _470, `"d2"`
  br _3206, ^3206, ^1517

3206:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _469
  _3205 = bif:'=:=' _469, `"e2"`
  br _3205, ^3203, ^1517

3203:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _480 = get_map_element M3, `13`

  %% Aliased:
  %%    _480
  _1526 = succeeded:guard _480
  br _1526, ^1526, ^1525

1526:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _479 = get_map_element M3, `23`

  %% Aliased:
  %%    _479
  _1527 = succeeded:guard _479
  br _1527, ^1527, ^1525

1527:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _478 = get_map_element M3, `33`

  %% Aliased:
  %%    _478
  _1528 = succeeded:guard _478
  br _1528, ^1528, ^1525

1528:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _477 = get_map_element M3, `{["03"]}`

  %% Aliased:
  %%    _477
  _1529 = succeeded:guard _477
  br _1529, ^1529, ^1525

1529:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _476 = get_map_element M3, `"43"`

  %% Aliased:
  %%    _476
  _1530 = succeeded:guard _476
  br _1530, ^1530, ^1525

1530:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _475 = get_map_element M3, `<<"53">>`

  %% Aliased:
  %%    _475
  _1531 = succeeded:guard _475
  br _1531, ^1531, ^1525

1531:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _480
  _3202 = bif:'=:=' _480, `a3`
  br _3202, ^3201, ^1525

3201:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _479
  _3200 = bif:'=:=' _479, `b3`
  br _3200, ^3199, ^1525

3199:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _478
  _3198 = bif:'=:=' _478, `"c3"`
  br _3198, ^3198, ^1525

3198:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _477
  _3197 = bif:'=:=' _477, `"13"`
  br _3197, ^3197, ^1525

3197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _476
  _3196 = bif:'=:=' _476, `"d3"`
  br _3196, ^3196, ^1525

3196:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _475
  _3195 = bif:'=:=' _475, `"e3"`
  br _3195, ^3193, ^1525

3193:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _486 = get_map_element M3, `14`

  %% Aliased:
  %%    _486
  _1534 = succeeded:guard _486
  br _1534, ^1534, ^1533

1534:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _485 = get_map_element M3, `24`

  %% Aliased:
  %%    _485
  _1535 = succeeded:guard _485
  br _1535, ^1535, ^1533

1535:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _484 = get_map_element M3, `34`

  %% Aliased:
  %%    _484
  _1536 = succeeded:guard _484
  br _1536, ^1536, ^1533

1536:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _483 = get_map_element M3, `{["04"]}`

  %% Aliased:
  %%    _483
  _1537 = succeeded:guard _483
  br _1537, ^1537, ^1533

1537:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _482 = get_map_element M3, `"44"`

  %% Aliased:
  %%    _482
  _1538 = succeeded:guard _482
  br _1538, ^1538, ^1533

1538:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _481 = get_map_element M3, `<<"54">>`

  %% Aliased:
  %%    _481
  _1539 = succeeded:guard _481
  br _1539, ^1539, ^1533

1539:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _486
  _3192 = bif:'=:=' _486, `a4`
  br _3192, ^3191, ^1533

3191:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _485
  _3190 = bif:'=:=' _485, `b4`
  br _3190, ^3189, ^1533

3189:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _484
  _3188 = bif:'=:=' _484, `"c4"`
  br _3188, ^3188, ^1533

3188:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _483
  _3187 = bif:'=:=' _483, `"14"`
  br _3187, ^3187, ^1533

3187:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _482
  _3186 = bif:'=:=' _482, `"d4"`
  br _3186, ^3186, ^1533

3186:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _481
  _3185 = bif:'=:=' _481, `"e4"`
  br _3185, ^3183, ^1533

3183:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _492 = get_map_element M3, `15`

  %% Aliased:
  %%    _492
  _1542 = succeeded:guard _492
  br _1542, ^1542, ^1541

1542:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _491 = get_map_element M3, `25`

  %% Aliased:
  %%    _491
  _1543 = succeeded:guard _491
  br _1543, ^1543, ^1541

1543:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _490 = get_map_element M3, `35`

  %% Aliased:
  %%    _490
  _1544 = succeeded:guard _490
  br _1544, ^1544, ^1541

1544:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _489 = get_map_element M3, `{["05"]}`

  %% Aliased:
  %%    _489
  _1545 = succeeded:guard _489
  br _1545, ^1545, ^1541

1545:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _488 = get_map_element M3, `"45"`

  %% Aliased:
  %%    _488
  _1546 = succeeded:guard _488
  br _1546, ^1546, ^1541

1546:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _487 = get_map_element M3, `<<"55">>`

  %% Aliased:
  %%    _487
  _1547 = succeeded:guard _487
  br _1547, ^1547, ^1541

1547:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _492
  _3182 = bif:'=:=' _492, `a5`
  br _3182, ^3181, ^1541

3181:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _491
  _3180 = bif:'=:=' _491, `b5`
  br _3180, ^3179, ^1541

3179:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _490
  _3178 = bif:'=:=' _490, `"c5"`
  br _3178, ^3178, ^1541

3178:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _489
  _3177 = bif:'=:=' _489, `"15"`
  br _3177, ^3177, ^1541

3177:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _488
  _3176 = bif:'=:=' _488, `"d5"`
  br _3176, ^3176, ^1541

3176:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _487
  _3175 = bif:'=:=' _487, `"e5"`
  br _3175, ^3173, ^1541

3173:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _498 = get_map_element M3, `16`

  %% Aliased:
  %%    _498
  _1550 = succeeded:guard _498
  br _1550, ^1550, ^1549

1550:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _497 = get_map_element M3, `26`

  %% Aliased:
  %%    _497
  _1551 = succeeded:guard _497
  br _1551, ^1551, ^1549

1551:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _496 = get_map_element M3, `36`

  %% Aliased:
  %%    _496
  _1552 = succeeded:guard _496
  br _1552, ^1552, ^1549

1552:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _495 = get_map_element M3, `{["06"]}`

  %% Aliased:
  %%    _495
  _1553 = succeeded:guard _495
  br _1553, ^1553, ^1549

1553:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _494 = get_map_element M3, `"46"`

  %% Aliased:
  %%    _494
  _1554 = succeeded:guard _494
  br _1554, ^1554, ^1549

1554:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _493 = get_map_element M3, `<<"56">>`

  %% Aliased:
  %%    _493
  _1555 = succeeded:guard _493
  br _1555, ^1555, ^1549

1555:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _498
  _3172 = bif:'=:=' _498, `a6`
  br _3172, ^3171, ^1549

3171:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _497
  _3170 = bif:'=:=' _497, `b6`
  br _3170, ^3169, ^1549

3169:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _496
  _3168 = bif:'=:=' _496, `"c6"`
  br _3168, ^3168, ^1549

3168:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _495
  _3167 = bif:'=:=' _495, `"16"`
  br _3167, ^3167, ^1549

3167:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _494
  _3166 = bif:'=:=' _494, `"d6"`
  br _3166, ^3166, ^1549

3166:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _493
  _3165 = bif:'=:=' _493, `"e6"`
  br _3165, ^3163, ^1549

3163:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _504 = get_map_element M3, `17`

  %% Aliased:
  %%    _504
  _1558 = succeeded:guard _504
  br _1558, ^1558, ^1557

1558:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _503 = get_map_element M3, `27`

  %% Aliased:
  %%    _503
  _1559 = succeeded:guard _503
  br _1559, ^1559, ^1557

1559:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _502 = get_map_element M3, `37`

  %% Aliased:
  %%    _502
  _1560 = succeeded:guard _502
  br _1560, ^1560, ^1557

1560:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _501 = get_map_element M3, `{["07"]}`

  %% Aliased:
  %%    _501
  _1561 = succeeded:guard _501
  br _1561, ^1561, ^1557

1561:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _500 = get_map_element M3, `"47"`

  %% Aliased:
  %%    _500
  _1562 = succeeded:guard _500
  br _1562, ^1562, ^1557

1562:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _499 = get_map_element M3, `<<"57">>`

  %% Aliased:
  %%    _499
  _1563 = succeeded:guard _499
  br _1563, ^1563, ^1557

1563:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _504
  _3162 = bif:'=:=' _504, `a7`
  br _3162, ^3161, ^1557

3161:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _503
  _3160 = bif:'=:=' _503, `b7`
  br _3160, ^3159, ^1557

3159:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _502
  _3158 = bif:'=:=' _502, `"c7"`
  br _3158, ^3158, ^1557

3158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _501
  _3157 = bif:'=:=' _501, `"17"`
  br _3157, ^3157, ^1557

3157:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _500
  _3156 = bif:'=:=' _500, `"d7"`
  br _3156, ^3156, ^1557

3156:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _499
  _3155 = bif:'=:=' _499, `"e7"`
  br _3155, ^3153, ^1557

3153:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _510 = get_map_element M3, `18`

  %% Aliased:
  %%    _510
  _1566 = succeeded:guard _510
  br _1566, ^1566, ^1565

1566:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _509 = get_map_element M3, `28`

  %% Aliased:
  %%    _509
  _1567 = succeeded:guard _509
  br _1567, ^1567, ^1565

1567:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _508 = get_map_element M3, `38`

  %% Aliased:
  %%    _508
  _1568 = succeeded:guard _508
  br _1568, ^1568, ^1565

1568:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _507 = get_map_element M3, `{["08"]}`

  %% Aliased:
  %%    _507
  _1569 = succeeded:guard _507
  br _1569, ^1569, ^1565

1569:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _506 = get_map_element M3, `"48"`

  %% Aliased:
  %%    _506
  _1570 = succeeded:guard _506
  br _1570, ^1570, ^1565

1570:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _505 = get_map_element M3, `<<"58">>`

  %% Aliased:
  %%    _505
  _1571 = succeeded:guard _505
  br _1571, ^1571, ^1565

1571:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _510
  _3152 = bif:'=:=' _510, `a8`
  br _3152, ^3151, ^1565

3151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _509
  _3150 = bif:'=:=' _509, `b8`
  br _3150, ^3149, ^1565

3149:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _508
  _3148 = bif:'=:=' _508, `"c8"`
  br _3148, ^3148, ^1565

3148:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _507
  _3147 = bif:'=:=' _507, `"18"`
  br _3147, ^3147, ^1565

3147:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _506
  _3146 = bif:'=:=' _506, `"d8"`
  br _3146, ^3146, ^1565

3146:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _505
  _3145 = bif:'=:=' _505, `"e8"`
  br _3145, ^3143, ^1565

3143:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _516 = get_map_element M3, `19`

  %% Aliased:
  %%    _516
  _1574 = succeeded:guard _516
  br _1574, ^1574, ^1573

1574:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _515 = get_map_element M3, `29`

  %% Aliased:
  %%    _515
  _1575 = succeeded:guard _515
  br _1575, ^1575, ^1573

1575:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _514 = get_map_element M3, `39`

  %% Aliased:
  %%    _514
  _1576 = succeeded:guard _514
  br _1576, ^1576, ^1573

1576:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _513 = get_map_element M3, `{["09"]}`

  %% Aliased:
  %%    _513
  _1577 = succeeded:guard _513
  br _1577, ^1577, ^1573

1577:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _512 = get_map_element M3, `"49"`

  %% Aliased:
  %%    _512
  _1578 = succeeded:guard _512
  br _1578, ^1578, ^1573

1578:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _511 = get_map_element M3, `<<"59">>`

  %% Aliased:
  %%    _511
  _1579 = succeeded:guard _511
  br _1579, ^1579, ^1573

1579:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _516
  _3142 = bif:'=:=' _516, `a9`
  br _3142, ^3141, ^1573

3141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _515
  _3140 = bif:'=:=' _515, `b9`
  br _3140, ^3139, ^1573

3139:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _514
  _3138 = bif:'=:=' _514, `"c9"`
  br _3138, ^3138, ^1573

3138:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _513
  _3137 = bif:'=:=' _513, `"19"`
  br _3137, ^3137, ^1573

3137:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _512
  _3136 = bif:'=:=' _512, `"d9"`
  br _3136, ^3136, ^1573

3136:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _511
  _3135 = bif:'=:=' _511, `"e9"`
  br _3135, ^3133, ^1573

3133:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _522 = get_map_element M3, `10.0`

  %% Aliased:
  %%    _522
  _1582 = succeeded:guard _522
  br _1582, ^1582, ^1581

1582:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _521 = get_map_element M3, `20.0`

  %% Aliased:
  %%    _521
  _1583 = succeeded:guard _521
  br _1583, ^1583, ^1581

1583:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _520 = get_map_element M3, `30.0`

  %% Aliased:
  %%    _520
  _1584 = succeeded:guard _520
  br _1584, ^1587, ^1581

1587:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _522
  _3132 = bif:'=:=' _522, `fa0`
  br _3132, ^3131, ^1581

3131:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _521
  _3130 = bif:'=:=' _521, `fb0`
  br _3130, ^3129, ^1581

3129:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _520
  _3128 = bif:'=:=' _520, `"fc0"`
  br _3128, ^3123, ^1581

3123:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _528 = get_map_element M3, `11.0`

  %% Aliased:
  %%    _528
  _1590 = succeeded:guard _528
  br _1590, ^1590, ^1589

1590:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _527 = get_map_element M3, `21.0`

  %% Aliased:
  %%    _527
  _1591 = succeeded:guard _527
  br _1591, ^1591, ^1589

1591:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _526 = get_map_element M3, `31.0`

  %% Aliased:
  %%    _526
  _1592 = succeeded:guard _526
  br _1592, ^1595, ^1589

1595:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _528
  _3122 = bif:'=:=' _528, `fa1`
  br _3122, ^3121, ^1589

3121:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _527
  _3120 = bif:'=:=' _527, `fb1`
  br _3120, ^3119, ^1589

3119:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _526
  _3118 = bif:'=:=' _526, `"fc1"`
  br _3118, ^3113, ^1589

3113:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _534 = get_map_element M3, `12.0`

  %% Aliased:
  %%    _534
  _1598 = succeeded:guard _534
  br _1598, ^1598, ^1597

1598:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _533 = get_map_element M3, `22.0`

  %% Aliased:
  %%    _533
  _1599 = succeeded:guard _533
  br _1599, ^1599, ^1597

1599:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _532 = get_map_element M3, `32.0`

  %% Aliased:
  %%    _532
  _1600 = succeeded:guard _532
  br _1600, ^1603, ^1597

1603:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _534
  _3112 = bif:'=:=' _534, `fa2`
  br _3112, ^3111, ^1597

3111:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _533
  _3110 = bif:'=:=' _533, `fb2`
  br _3110, ^3109, ^1597

3109:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _532
  _3108 = bif:'=:=' _532, `"fc2"`
  br _3108, ^3103, ^1597

3103:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _540 = get_map_element M3, `13.0`

  %% Aliased:
  %%    _540
  _1606 = succeeded:guard _540
  br _1606, ^1606, ^1605

1606:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _539 = get_map_element M3, `23.0`

  %% Aliased:
  %%    _539
  _1607 = succeeded:guard _539
  br _1607, ^1607, ^1605

1607:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _538 = get_map_element M3, `33.0`

  %% Aliased:
  %%    _538
  _1608 = succeeded:guard _538
  br _1608, ^1611, ^1605

1611:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _540
  _3102 = bif:'=:=' _540, `fa3`
  br _3102, ^3101, ^1605

3101:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _539
  _3100 = bif:'=:=' _539, `fb3`
  br _3100, ^3099, ^1605

3099:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _538
  _3098 = bif:'=:=' _538, `"fc3"`
  br _3098, ^3093, ^1605

3093:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _546 = get_map_element M3, `14.0`

  %% Aliased:
  %%    _546
  _1614 = succeeded:guard _546
  br _1614, ^1614, ^1613

1614:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _545 = get_map_element M3, `24.0`

  %% Aliased:
  %%    _545
  _1615 = succeeded:guard _545
  br _1615, ^1615, ^1613

1615:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _544 = get_map_element M3, `34.0`

  %% Aliased:
  %%    _544
  _1616 = succeeded:guard _544
  br _1616, ^1619, ^1613

1619:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _546
  _3092 = bif:'=:=' _546, `fa4`
  br _3092, ^3091, ^1613

3091:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _545
  _3090 = bif:'=:=' _545, `fb4`
  br _3090, ^3089, ^1613

3089:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _544
  _3088 = bif:'=:=' _544, `"fc4"`
  br _3088, ^3083, ^1613

3083:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _552 = get_map_element M3, `15.0`

  %% Aliased:
  %%    _552
  _1622 = succeeded:guard _552
  br _1622, ^1622, ^1621

1622:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _551 = get_map_element M3, `25.0`

  %% Aliased:
  %%    _551
  _1623 = succeeded:guard _551
  br _1623, ^1623, ^1621

1623:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _550 = get_map_element M3, `35.0`

  %% Aliased:
  %%    _550
  _1624 = succeeded:guard _550
  br _1624, ^1627, ^1621

1627:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _552
  _3082 = bif:'=:=' _552, `fa5`
  br _3082, ^3081, ^1621

3081:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _551
  _3080 = bif:'=:=' _551, `fb5`
  br _3080, ^3079, ^1621

3079:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _550
  _3078 = bif:'=:=' _550, `"fc5"`
  br _3078, ^3073, ^1621

3073:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _558 = get_map_element M3, `16.0`

  %% Aliased:
  %%    _558
  _1630 = succeeded:guard _558
  br _1630, ^1630, ^1629

1630:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _557 = get_map_element M3, `26.0`

  %% Aliased:
  %%    _557
  _1631 = succeeded:guard _557
  br _1631, ^1631, ^1629

1631:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _556 = get_map_element M3, `36.0`

  %% Aliased:
  %%    _556
  _1632 = succeeded:guard _556
  br _1632, ^1635, ^1629

1635:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _558
  _3072 = bif:'=:=' _558, `fa6`
  br _3072, ^3071, ^1629

3071:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _557
  _3070 = bif:'=:=' _557, `fb6`
  br _3070, ^3069, ^1629

3069:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _556
  _3068 = bif:'=:=' _556, `"fc6"`
  br _3068, ^3063, ^1629

3063:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _564 = get_map_element M3, `17.0`

  %% Aliased:
  %%    _564
  _1638 = succeeded:guard _564
  br _1638, ^1638, ^1637

1638:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _563 = get_map_element M3, `27.0`

  %% Aliased:
  %%    _563
  _1639 = succeeded:guard _563
  br _1639, ^1639, ^1637

1639:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _562 = get_map_element M3, `37.0`

  %% Aliased:
  %%    _562
  _1640 = succeeded:guard _562
  br _1640, ^1643, ^1637

1643:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _564
  _3062 = bif:'=:=' _564, `fa7`
  br _3062, ^3061, ^1637

3061:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _563
  _3060 = bif:'=:=' _563, `fb7`
  br _3060, ^3059, ^1637

3059:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _562
  _3058 = bif:'=:=' _562, `"fc7"`
  br _3058, ^3053, ^1637

3053:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _570 = get_map_element M3, `18.0`

  %% Aliased:
  %%    _570
  _1646 = succeeded:guard _570
  br _1646, ^1646, ^1645

1646:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _569 = get_map_element M3, `28.0`

  %% Aliased:
  %%    _569
  _1647 = succeeded:guard _569
  br _1647, ^1647, ^1645

1647:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _568 = get_map_element M3, `38.0`

  %% Aliased:
  %%    _568
  _1648 = succeeded:guard _568
  br _1648, ^1651, ^1645

1651:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _570
  _3052 = bif:'=:=' _570, `fa8`
  br _3052, ^3051, ^1645

3051:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _569
  _3050 = bif:'=:=' _569, `fb8`
  br _3050, ^3049, ^1645

3049:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _568
  _3048 = bif:'=:=' _568, `"fc8"`
  br _3048, ^3043, ^1645

3043:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _576 = get_map_element M3, `19.0`

  %% Aliased:
  %%    _576
  _1654 = succeeded:guard _576
  br _1654, ^1654, ^1653

1654:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _575 = get_map_element M3, `29.0`

  %% Aliased:
  %%    _575
  _1655 = succeeded:guard _575
  br _1655, ^1655, ^1653

1655:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _574 = get_map_element M3, `39.0`

  %% Aliased:
  %%    _574
  _1656 = succeeded:guard _574
  br _1656, ^1659, ^1653

1659:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _576
  _3042 = bif:'=:=' _576, `fa9`
  br _3042, ^3041, ^1653

3041:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _575
  _3040 = bif:'=:=' _575, `fb9`
  br _3040, ^3039, ^1653

3039:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _574
  _3038 = bif:'=:=' _574, `"fc9"`
  br _3038, ^3033, ^1653

3033:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _581 = get_map_element M3, `67108863`

  %% Aliased:
  %%    _581
  _1662 = succeeded:guard _581
  br _1662, ^1662, ^1661

1662:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _580 = get_map_element M3, `36893488147419103232`

  %% Aliased:
  %%    _580
  _1663 = succeeded:guard _580
  br _1663, ^1666, ^1661

1666:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _581
  _3032 = bif:'=:=' _581, `big8`
  br _3032, ^3031, ^1661

3031:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _580
  _3030 = bif:'=:=' _580, `big1`
  br _3030, ^3024, ^1661

3024:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _586 = get_map_element M3, `8589934592`

  %% Aliased:
  %%    _586
  _1669 = succeeded:guard _586
  br _1669, ^1669, ^1668

1669:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _585 = get_map_element M3, `147573952589676412928`

  %% Aliased:
  %%    _585
  _1670 = succeeded:guard _585
  br _1670, ^1673, ^1668

1673:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _586
  _3023 = bif:'=:=' _586, `big6`
  br _3023, ^3022, ^1668

3022:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _585
  _3021 = bif:'=:=' _585, `big3`
  br _3021, ^3015, ^1668

3015:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _591 = get_map_element M3, `4294967296`

  %% Aliased:
  %%    _591
  _1676 = succeeded:guard _591
  br _1676, ^1676, ^1675

1676:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _590 = get_map_element M3, `18446744073709551616`

  %% Aliased:
  %%    _590
  _1677 = succeeded:guard _590
  br _1677, ^1680, ^1675

1680:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _591
  _3014 = bif:'=:=' _591, `big5`
  br _3014, ^3013, ^1675

3013:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _590
  _3012 = bif:'=:=' _590, `big4`
  br _3012, ^3006, ^1675

3006:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _596 = get_map_element M3, `4294967295`

  %% Aliased:
  %%    _596
  _1683 = succeeded:guard _596
  br _1683, ^1683, ^1682

1683:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _595 = get_map_element M3, `73786976294838206464`

  %% Aliased:
  %%    _595
  _1684 = succeeded:guard _595
  br _1684, ^1687, ^1682

1687:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _596
  _3005 = bif:'=:=' _596, `big7`
  br _3005, ^3004, ^1682

3004:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _595
  _3003 = bif:'=:=' _595, `big2`
  br _3003, ^2999, ^1682

2999:
  %% map_SUITE.erl:410
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _597 = bif:map_size M3

  %% Argument types:
  %%    _597 => 0..288230376151711743
  %% Unique:
  %%    _597
  _2997 = bif:'=:=' _597, `98`
  br _2997, ^2993, ^1690

2993:
  %% map_SUITE.erl:415
  M4 = call (`id`/1), `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",10.0 => fa0,11.0 => fa1,12.0 => fa2,13.0 => fa3,14.0 => fa4,
   15.0 => fa5,16.0 => fa6,17.0 => fa7,18.0 => fa8,19.0 => fa9,20.0 => fb0,
   21.0 => fb1,22.0 => fb2,23.0 => fb3,24.0 => fb4,25.0 => fb5,26.0 => fb6,
   27.0 => fb7,28.0 => fb8,29.0 => fb9,30.0 => "fc0",31.0 => "fc1",
   32.0 => "fc2",33.0 => "fc3",34.0 => "fc4",35.0 => "fc5",36.0 => "fc6",
   37.0 => "fc7",38.0 => "fc8",39.0 => "fc9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   #{map => key,one => small} => "small map key 1",
   #{map => key,third => small} => "small map key 3",
   #{map => key,second => small} => "small map key 2",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
     18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
     26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
     33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
     39 => "c9",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 1",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
     19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
     28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
     35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
     k36 => "c6",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 2",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M4
  _1694 = succeeded:body M4
  br _1694, ^1694, ^1

1694:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M4
  _2991 = bif:is_map M4
  br _2991, ^2991, ^1696

2991:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _604 = get_map_element M4, `10`

  %% Aliased:
  %%    _604
  _1697 = succeeded:guard _604
  br _1697, ^1697, ^1696

1697:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _603 = get_map_element M4, `20`

  %% Aliased:
  %%    _603
  _1698 = succeeded:guard _603
  br _1698, ^1698, ^1696

1698:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _602 = get_map_element M4, `30`

  %% Aliased:
  %%    _602
  _1699 = succeeded:guard _602
  br _1699, ^1699, ^1696

1699:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _601 = get_map_element M4, `{["00"]}`

  %% Aliased:
  %%    _601
  _1700 = succeeded:guard _601
  br _1700, ^1700, ^1696

1700:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _600 = get_map_element M4, `"40"`

  %% Aliased:
  %%    _600
  _1701 = succeeded:guard _600
  br _1701, ^1701, ^1696

1701:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _599 = get_map_element M4, `<<"50">>`

  %% Aliased:
  %%    _599
  _1702 = succeeded:guard _599
  br _1702, ^1702, ^1696

1702:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _604
  _2990 = bif:'=:=' _604, `a0`
  br _2990, ^2989, ^1696

2989:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _603
  _2988 = bif:'=:=' _603, `b0`
  br _2988, ^2987, ^1696

2987:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _602
  _2986 = bif:'=:=' _602, `"c0"`
  br _2986, ^2986, ^1696

2986:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _601
  _2985 = bif:'=:=' _601, `"10"`
  br _2985, ^2985, ^1696

2985:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _600
  _2984 = bif:'=:=' _600, `"d0"`
  br _2984, ^2984, ^1696

2984:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _599
  _2983 = bif:'=:=' _599, `"e0"`
  br _2983, ^2981, ^1696

2981:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _610 = get_map_element M4, `11`

  %% Aliased:
  %%    _610
  _1705 = succeeded:guard _610
  br _1705, ^1705, ^1704

1705:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _609 = get_map_element M4, `21`

  %% Aliased:
  %%    _609
  _1706 = succeeded:guard _609
  br _1706, ^1706, ^1704

1706:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _608 = get_map_element M4, `31`

  %% Aliased:
  %%    _608
  _1707 = succeeded:guard _608
  br _1707, ^1707, ^1704

1707:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _607 = get_map_element M4, `{["01"]}`

  %% Aliased:
  %%    _607
  _1708 = succeeded:guard _607
  br _1708, ^1708, ^1704

1708:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _606 = get_map_element M4, `"41"`

  %% Aliased:
  %%    _606
  _1709 = succeeded:guard _606
  br _1709, ^1709, ^1704

1709:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _605 = get_map_element M4, `<<"51">>`

  %% Aliased:
  %%    _605
  _1710 = succeeded:guard _605
  br _1710, ^1710, ^1704

1710:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _610
  _2980 = bif:'=:=' _610, `a1`
  br _2980, ^2979, ^1704

2979:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _609
  _2978 = bif:'=:=' _609, `b1`
  br _2978, ^2977, ^1704

2977:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _608
  _2976 = bif:'=:=' _608, `"c1"`
  br _2976, ^2976, ^1704

2976:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _607
  _2975 = bif:'=:=' _607, `"11"`
  br _2975, ^2975, ^1704

2975:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _606
  _2974 = bif:'=:=' _606, `"d1"`
  br _2974, ^2974, ^1704

2974:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _605
  _2973 = bif:'=:=' _605, `"e1"`
  br _2973, ^2971, ^1704

2971:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _616 = get_map_element M4, `12`

  %% Aliased:
  %%    _616
  _1713 = succeeded:guard _616
  br _1713, ^1713, ^1712

1713:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _615 = get_map_element M4, `22`

  %% Aliased:
  %%    _615
  _1714 = succeeded:guard _615
  br _1714, ^1714, ^1712

1714:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _614 = get_map_element M4, `32`

  %% Aliased:
  %%    _614
  _1715 = succeeded:guard _614
  br _1715, ^1715, ^1712

1715:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _613 = get_map_element M4, `{["02"]}`

  %% Aliased:
  %%    _613
  _1716 = succeeded:guard _613
  br _1716, ^1716, ^1712

1716:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _612 = get_map_element M4, `"42"`

  %% Aliased:
  %%    _612
  _1717 = succeeded:guard _612
  br _1717, ^1717, ^1712

1717:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _611 = get_map_element M4, `<<"52">>`

  %% Aliased:
  %%    _611
  _1718 = succeeded:guard _611
  br _1718, ^1718, ^1712

1718:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _616
  _2970 = bif:'=:=' _616, `a2`
  br _2970, ^2969, ^1712

2969:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _615
  _2968 = bif:'=:=' _615, `b2`
  br _2968, ^2967, ^1712

2967:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _614
  _2966 = bif:'=:=' _614, `"c2"`
  br _2966, ^2966, ^1712

2966:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _613
  _2965 = bif:'=:=' _613, `"12"`
  br _2965, ^2965, ^1712

2965:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _612
  _2964 = bif:'=:=' _612, `"d2"`
  br _2964, ^2964, ^1712

2964:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _611
  _2963 = bif:'=:=' _611, `"e2"`
  br _2963, ^2961, ^1712

2961:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _622 = get_map_element M4, `13`

  %% Aliased:
  %%    _622
  _1721 = succeeded:guard _622
  br _1721, ^1721, ^1720

1721:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _621 = get_map_element M4, `23`

  %% Aliased:
  %%    _621
  _1722 = succeeded:guard _621
  br _1722, ^1722, ^1720

1722:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _620 = get_map_element M4, `33`

  %% Aliased:
  %%    _620
  _1723 = succeeded:guard _620
  br _1723, ^1723, ^1720

1723:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _619 = get_map_element M4, `{["03"]}`

  %% Aliased:
  %%    _619
  _1724 = succeeded:guard _619
  br _1724, ^1724, ^1720

1724:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _618 = get_map_element M4, `"43"`

  %% Aliased:
  %%    _618
  _1725 = succeeded:guard _618
  br _1725, ^1725, ^1720

1725:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _617 = get_map_element M4, `<<"53">>`

  %% Aliased:
  %%    _617
  _1726 = succeeded:guard _617
  br _1726, ^1726, ^1720

1726:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _622
  _2960 = bif:'=:=' _622, `a3`
  br _2960, ^2959, ^1720

2959:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _621
  _2958 = bif:'=:=' _621, `b3`
  br _2958, ^2957, ^1720

2957:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _620
  _2956 = bif:'=:=' _620, `"c3"`
  br _2956, ^2956, ^1720

2956:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _619
  _2955 = bif:'=:=' _619, `"13"`
  br _2955, ^2955, ^1720

2955:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _618
  _2954 = bif:'=:=' _618, `"d3"`
  br _2954, ^2954, ^1720

2954:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _617
  _2953 = bif:'=:=' _617, `"e3"`
  br _2953, ^2951, ^1720

2951:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _628 = get_map_element M4, `14`

  %% Aliased:
  %%    _628
  _1729 = succeeded:guard _628
  br _1729, ^1729, ^1728

1729:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _627 = get_map_element M4, `24`

  %% Aliased:
  %%    _627
  _1730 = succeeded:guard _627
  br _1730, ^1730, ^1728

1730:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _626 = get_map_element M4, `34`

  %% Aliased:
  %%    _626
  _1731 = succeeded:guard _626
  br _1731, ^1731, ^1728

1731:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _625 = get_map_element M4, `{["04"]}`

  %% Aliased:
  %%    _625
  _1732 = succeeded:guard _625
  br _1732, ^1732, ^1728

1732:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _624 = get_map_element M4, `"44"`

  %% Aliased:
  %%    _624
  _1733 = succeeded:guard _624
  br _1733, ^1733, ^1728

1733:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _623 = get_map_element M4, `<<"54">>`

  %% Aliased:
  %%    _623
  _1734 = succeeded:guard _623
  br _1734, ^1734, ^1728

1734:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _628
  _2950 = bif:'=:=' _628, `a4`
  br _2950, ^2949, ^1728

2949:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _627
  _2948 = bif:'=:=' _627, `b4`
  br _2948, ^2947, ^1728

2947:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _626
  _2946 = bif:'=:=' _626, `"c4"`
  br _2946, ^2946, ^1728

2946:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _625
  _2945 = bif:'=:=' _625, `"14"`
  br _2945, ^2945, ^1728

2945:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _624
  _2944 = bif:'=:=' _624, `"d4"`
  br _2944, ^2944, ^1728

2944:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _623
  _2943 = bif:'=:=' _623, `"e4"`
  br _2943, ^2941, ^1728

2941:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _634 = get_map_element M4, `15`

  %% Aliased:
  %%    _634
  _1737 = succeeded:guard _634
  br _1737, ^1737, ^1736

1737:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _633 = get_map_element M4, `25`

  %% Aliased:
  %%    _633
  _1738 = succeeded:guard _633
  br _1738, ^1738, ^1736

1738:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _632 = get_map_element M4, `35`

  %% Aliased:
  %%    _632
  _1739 = succeeded:guard _632
  br _1739, ^1739, ^1736

1739:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _631 = get_map_element M4, `{["05"]}`

  %% Aliased:
  %%    _631
  _1740 = succeeded:guard _631
  br _1740, ^1740, ^1736

1740:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _630 = get_map_element M4, `"45"`

  %% Aliased:
  %%    _630
  _1741 = succeeded:guard _630
  br _1741, ^1741, ^1736

1741:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _629 = get_map_element M4, `<<"55">>`

  %% Aliased:
  %%    _629
  _1742 = succeeded:guard _629
  br _1742, ^1742, ^1736

1742:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _634
  _2940 = bif:'=:=' _634, `a5`
  br _2940, ^2939, ^1736

2939:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _633
  _2938 = bif:'=:=' _633, `b5`
  br _2938, ^2937, ^1736

2937:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _632
  _2936 = bif:'=:=' _632, `"c5"`
  br _2936, ^2936, ^1736

2936:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _631
  _2935 = bif:'=:=' _631, `"15"`
  br _2935, ^2935, ^1736

2935:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _630
  _2934 = bif:'=:=' _630, `"d5"`
  br _2934, ^2934, ^1736

2934:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _629
  _2933 = bif:'=:=' _629, `"e5"`
  br _2933, ^2931, ^1736

2931:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _640 = get_map_element M4, `16`

  %% Aliased:
  %%    _640
  _1745 = succeeded:guard _640
  br _1745, ^1745, ^1744

1745:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _639 = get_map_element M4, `26`

  %% Aliased:
  %%    _639
  _1746 = succeeded:guard _639
  br _1746, ^1746, ^1744

1746:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _638 = get_map_element M4, `36`

  %% Aliased:
  %%    _638
  _1747 = succeeded:guard _638
  br _1747, ^1747, ^1744

1747:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _637 = get_map_element M4, `{["06"]}`

  %% Aliased:
  %%    _637
  _1748 = succeeded:guard _637
  br _1748, ^1748, ^1744

1748:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _636 = get_map_element M4, `"46"`

  %% Aliased:
  %%    _636
  _1749 = succeeded:guard _636
  br _1749, ^1749, ^1744

1749:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _635 = get_map_element M4, `<<"56">>`

  %% Aliased:
  %%    _635
  _1750 = succeeded:guard _635
  br _1750, ^1750, ^1744

1750:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _640
  _2930 = bif:'=:=' _640, `a6`
  br _2930, ^2929, ^1744

2929:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _639
  _2928 = bif:'=:=' _639, `b6`
  br _2928, ^2927, ^1744

2927:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _638
  _2926 = bif:'=:=' _638, `"c6"`
  br _2926, ^2926, ^1744

2926:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _637
  _2925 = bif:'=:=' _637, `"16"`
  br _2925, ^2925, ^1744

2925:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _636
  _2924 = bif:'=:=' _636, `"d6"`
  br _2924, ^2924, ^1744

2924:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _635
  _2923 = bif:'=:=' _635, `"e6"`
  br _2923, ^2921, ^1744

2921:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _646 = get_map_element M4, `17`

  %% Aliased:
  %%    _646
  _1753 = succeeded:guard _646
  br _1753, ^1753, ^1752

1753:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _645 = get_map_element M4, `27`

  %% Aliased:
  %%    _645
  _1754 = succeeded:guard _645
  br _1754, ^1754, ^1752

1754:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _644 = get_map_element M4, `37`

  %% Aliased:
  %%    _644
  _1755 = succeeded:guard _644
  br _1755, ^1755, ^1752

1755:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _643 = get_map_element M4, `{["07"]}`

  %% Aliased:
  %%    _643
  _1756 = succeeded:guard _643
  br _1756, ^1756, ^1752

1756:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _642 = get_map_element M4, `"47"`

  %% Aliased:
  %%    _642
  _1757 = succeeded:guard _642
  br _1757, ^1757, ^1752

1757:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _641 = get_map_element M4, `<<"57">>`

  %% Aliased:
  %%    _641
  _1758 = succeeded:guard _641
  br _1758, ^1758, ^1752

1758:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _646
  _2920 = bif:'=:=' _646, `a7`
  br _2920, ^2919, ^1752

2919:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _645
  _2918 = bif:'=:=' _645, `b7`
  br _2918, ^2917, ^1752

2917:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _644
  _2916 = bif:'=:=' _644, `"c7"`
  br _2916, ^2916, ^1752

2916:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _643
  _2915 = bif:'=:=' _643, `"17"`
  br _2915, ^2915, ^1752

2915:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _642
  _2914 = bif:'=:=' _642, `"d7"`
  br _2914, ^2914, ^1752

2914:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _641
  _2913 = bif:'=:=' _641, `"e7"`
  br _2913, ^2911, ^1752

2911:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _652 = get_map_element M4, `18`

  %% Aliased:
  %%    _652
  _1761 = succeeded:guard _652
  br _1761, ^1761, ^1760

1761:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _651 = get_map_element M4, `28`

  %% Aliased:
  %%    _651
  _1762 = succeeded:guard _651
  br _1762, ^1762, ^1760

1762:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _650 = get_map_element M4, `38`

  %% Aliased:
  %%    _650
  _1763 = succeeded:guard _650
  br _1763, ^1763, ^1760

1763:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _649 = get_map_element M4, `{["08"]}`

  %% Aliased:
  %%    _649
  _1764 = succeeded:guard _649
  br _1764, ^1764, ^1760

1764:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _648 = get_map_element M4, `"48"`

  %% Aliased:
  %%    _648
  _1765 = succeeded:guard _648
  br _1765, ^1765, ^1760

1765:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _647 = get_map_element M4, `<<"58">>`

  %% Aliased:
  %%    _647
  _1766 = succeeded:guard _647
  br _1766, ^1766, ^1760

1766:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _652
  _2910 = bif:'=:=' _652, `a8`
  br _2910, ^2909, ^1760

2909:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _651
  _2908 = bif:'=:=' _651, `b8`
  br _2908, ^2907, ^1760

2907:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _650
  _2906 = bif:'=:=' _650, `"c8"`
  br _2906, ^2906, ^1760

2906:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _649
  _2905 = bif:'=:=' _649, `"18"`
  br _2905, ^2905, ^1760

2905:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _648
  _2904 = bif:'=:=' _648, `"d8"`
  br _2904, ^2904, ^1760

2904:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _647
  _2903 = bif:'=:=' _647, `"e8"`
  br _2903, ^2901, ^1760

2901:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _658 = get_map_element M4, `19`

  %% Aliased:
  %%    _658
  _1769 = succeeded:guard _658
  br _1769, ^1769, ^1768

1769:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _657 = get_map_element M4, `29`

  %% Aliased:
  %%    _657
  _1770 = succeeded:guard _657
  br _1770, ^1770, ^1768

1770:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _656 = get_map_element M4, `39`

  %% Aliased:
  %%    _656
  _1771 = succeeded:guard _656
  br _1771, ^1771, ^1768

1771:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _655 = get_map_element M4, `{["09"]}`

  %% Aliased:
  %%    _655
  _1772 = succeeded:guard _655
  br _1772, ^1772, ^1768

1772:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _654 = get_map_element M4, `"49"`

  %% Aliased:
  %%    _654
  _1773 = succeeded:guard _654
  br _1773, ^1773, ^1768

1773:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _653 = get_map_element M4, `<<"59">>`

  %% Aliased:
  %%    _653
  _1774 = succeeded:guard _653
  br _1774, ^1774, ^1768

1774:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _658
  _2900 = bif:'=:=' _658, `a9`
  br _2900, ^2899, ^1768

2899:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _657
  _2898 = bif:'=:=' _657, `b9`
  br _2898, ^2897, ^1768

2897:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _656
  _2896 = bif:'=:=' _656, `"c9"`
  br _2896, ^2896, ^1768

2896:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _655
  _2895 = bif:'=:=' _655, `"19"`
  br _2895, ^2895, ^1768

2895:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _654
  _2894 = bif:'=:=' _654, `"d9"`
  br _2894, ^2894, ^1768

2894:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _653
  _2893 = bif:'=:=' _653, `"e9"`
  br _2893, ^2891, ^1768

2891:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _661 = get_map_element M4, `#{map => key,one => small}`

  %% Aliased:
  %%    _661
  _1777 = succeeded:guard _661
  br _1777, ^1777, ^1776

1777:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _660 = get_map_element M4, `#{map => key,third => small}`

  %% Aliased:
  %%    _660
  _1778 = succeeded:guard _660
  br _1778, ^1778, ^1776

1778:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _659 = get_map_element M4, `#{map => key,second => small}`

  %% Aliased:
  %%    _659
  _1779 = succeeded:guard _659
  br _1779, ^1779, ^1776

1779:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _661
  _2890 = bif:'=:=' _661, `"small map key 1"`
  br _2890, ^2890, ^1776

2890:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _660
  _2889 = bif:'=:=' _660, `"small map key 3"`
  br _2889, ^2889, ^1776

2889:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _659
  _2888 = bif:'=:=' _659, `"small map key 2"`
  br _2888, ^2886, ^1776

2886:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _663 = get_map_element M4, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    _663
  _1782 = succeeded:guard _663
  br _1782, ^1782, ^1781

1782:
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _662 = get_map_element M4, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
   19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
   28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
   35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
   k36 => "c6",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    _662
  _1783 = succeeded:guard _662
  br _1783, ^1783, ^1781

1783:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _663
  _2885 = bif:'=:=' _663, `"large map key 1"`
  br _2885, ^2885, ^1781

2885:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _662
  _2884 = bif:'=:=' _662, `"large map key 2"`
  br _2884, ^2865, ^1781

2865:
  %% map_SUITE.erl:530
  %% Argument types:
  %%    M4 => map()
  %% Aliased:
  %%    M4
  _674 = bif:map_size M4

  %% Argument types:
  %%    _674 => 0..288230376151711743
  %% Unique:
  %%    _674
  _2863 = bif:'=:=' _674, `95`
  br _2863, ^2859, ^1808

2859:
  %% map_SUITE.erl:535
  _98 = call (`id`/1), `a0`

  %% Aliased:
  %%    _98
  _1812 = succeeded:body _98
  br _1812, ^1812, ^1

1812:
  %% map_SUITE.erl:535
  _99 = call (`id`/1), `"c0"`

  %% Aliased:
  %%    _99
  _1813 = succeeded:body _99
  br _1813, ^1813, ^1

1813:
  %% map_SUITE.erl:535
  _100 = call (`id`/1), `"e0"`

  %% Aliased:
  %%    _100
  _1814 = succeeded:body _100
  br _1814, ^1814, ^1

1814:
  %% map_SUITE.erl:536
  _101 = call (`id`/1), `a1`

  %% Aliased:
  %%    _101
  _1815 = succeeded:body _101
  br _1815, ^1815, ^1

1815:
  %% map_SUITE.erl:536
  _102 = call (`id`/1), `"c1"`

  %% Aliased:
  %%    _102
  _1816 = succeeded:body _102
  br _1816, ^1816, ^1

1816:
  %% map_SUITE.erl:536
  _103 = call (`id`/1), `"e1"`

  %% Aliased:
  %%    _103
  _1817 = succeeded:body _103
  br _1817, ^1817, ^1

1817:
  %% map_SUITE.erl:537
  _104 = call (`id`/1), `a2`

  %% Aliased:
  %%    _104
  _1818 = succeeded:body _104
  br _1818, ^1818, ^1

1818:
  %% map_SUITE.erl:537
  _105 = call (`id`/1), `"c2"`

  %% Aliased:
  %%    _105
  _1819 = succeeded:body _105
  br _1819, ^1819, ^1

1819:
  %% map_SUITE.erl:537
  _106 = call (`id`/1), `"e2"`

  %% Aliased:
  %%    _106
  _1820 = succeeded:body _106
  br _1820, ^1820, ^1

1820:
  %% map_SUITE.erl:538
  _107 = call (`id`/1), `a3`

  %% Aliased:
  %%    _107
  _1821 = succeeded:body _107
  br _1821, ^1821, ^1

1821:
  %% map_SUITE.erl:538
  _108 = call (`id`/1), `"c3"`

  %% Aliased:
  %%    _108
  _1822 = succeeded:body _108
  br _1822, ^1822, ^1

1822:
  %% map_SUITE.erl:538
  _109 = call (`id`/1), `"e3"`

  %% Aliased:
  %%    _109
  _1823 = succeeded:body _109
  br _1823, ^1823, ^1

1823:
  %% map_SUITE.erl:539
  _110 = call (`id`/1), `a4`

  %% Aliased:
  %%    _110
  _1824 = succeeded:body _110
  br _1824, ^1824, ^1

1824:
  %% map_SUITE.erl:539
  _111 = call (`id`/1), `"c4"`

  %% Aliased:
  %%    _111
  _1825 = succeeded:body _111
  br _1825, ^1825, ^1

1825:
  %% map_SUITE.erl:539
  _112 = call (`id`/1), `"e4"`

  %% Aliased:
  %%    _112
  _1826 = succeeded:body _112
  br _1826, ^1826, ^1

1826:
  %% map_SUITE.erl:541
  _113 = call (`id`/1), `a5`

  %% Aliased:
  %%    _113
  _1827 = succeeded:body _113
  br _1827, ^1827, ^1

1827:
  %% map_SUITE.erl:541
  _114 = call (`id`/1), `"c5"`

  %% Aliased:
  %%    _114
  _1828 = succeeded:body _114
  br _1828, ^1828, ^1

1828:
  %% map_SUITE.erl:541
  _115 = call (`id`/1), `"e5"`

  %% Aliased:
  %%    _115
  _1829 = succeeded:body _115
  br _1829, ^1829, ^1

1829:
  %% map_SUITE.erl:542
  _116 = call (`id`/1), `a6`

  %% Aliased:
  %%    _116
  _1830 = succeeded:body _116
  br _1830, ^1830, ^1

1830:
  %% map_SUITE.erl:542
  _117 = call (`id`/1), `"c6"`

  %% Aliased:
  %%    _117
  _1831 = succeeded:body _117
  br _1831, ^1831, ^1

1831:
  %% map_SUITE.erl:542
  _118 = call (`id`/1), `"e6"`

  %% Aliased:
  %%    _118
  _1832 = succeeded:body _118
  br _1832, ^1832, ^1

1832:
  %% map_SUITE.erl:543
  _119 = call (`id`/1), `a7`

  %% Aliased:
  %%    _119
  _1833 = succeeded:body _119
  br _1833, ^1833, ^1

1833:
  %% map_SUITE.erl:543
  _120 = call (`id`/1), `"c7"`

  %% Aliased:
  %%    _120
  _1834 = succeeded:body _120
  br _1834, ^1834, ^1

1834:
  %% map_SUITE.erl:543
  _121 = call (`id`/1), `"e7"`

  %% Aliased:
  %%    _121
  _1835 = succeeded:body _121
  br _1835, ^1835, ^1

1835:
  %% map_SUITE.erl:544
  _122 = call (`id`/1), `a8`

  %% Aliased:
  %%    _122
  _1836 = succeeded:body _122
  br _1836, ^1836, ^1

1836:
  %% map_SUITE.erl:544
  _123 = call (`id`/1), `"c8"`

  %% Aliased:
  %%    _123
  _1837 = succeeded:body _123
  br _1837, ^1837, ^1

1837:
  %% map_SUITE.erl:544
  _124 = call (`id`/1), `"e8"`

  %% Aliased:
  %%    _124
  _1838 = succeeded:body _124
  br _1838, ^1838, ^1

1838:
  %% map_SUITE.erl:545
  _125 = call (`id`/1), `a9`

  %% Aliased:
  %%    _125
  _1839 = succeeded:body _125
  br _1839, ^1839, ^1

1839:
  %% map_SUITE.erl:545
  _126 = call (`id`/1), `"c9"`

  %% Aliased:
  %%    _126
  _1840 = succeeded:body _126
  br _1840, ^1840, ^1

1840:
  %% map_SUITE.erl:545
  _127 = call (`id`/1), `"e9"`

  %% Aliased:
  %%    _127
  _1841 = succeeded:body _127
  br _1841, ^1841, ^1

1841:
  %% map_SUITE.erl:547
  _128 = call (`id`/1), `fb0`

  %% Aliased:
  %%    _128
  _1842 = succeeded:body _128
  br _1842, ^1842, ^1

1842:
  %% map_SUITE.erl:547
  _129 = call (`id`/1), `"fc0"`

  %% Aliased:
  %%    _129
  _1843 = succeeded:body _129
  br _1843, ^1843, ^1

1843:
  %% map_SUITE.erl:548
  _130 = call (`id`/1), `fb1`

  %% Aliased:
  %%    _130
  _1844 = succeeded:body _130
  br _1844, ^1844, ^1

1844:
  %% map_SUITE.erl:548
  _131 = call (`id`/1), `"fc1"`

  %% Aliased:
  %%    _131
  _1845 = succeeded:body _131
  br _1845, ^1845, ^1

1845:
  %% map_SUITE.erl:549
  _132 = call (`id`/1), `fb2`

  %% Aliased:
  %%    _132
  _1846 = succeeded:body _132
  br _1846, ^1846, ^1

1846:
  %% map_SUITE.erl:549
  _133 = call (`id`/1), `"fc2"`

  %% Aliased:
  %%    _133
  _1847 = succeeded:body _133
  br _1847, ^1847, ^1

1847:
  %% map_SUITE.erl:550
  _134 = call (`id`/1), `fb3`

  %% Aliased:
  %%    _134
  _1848 = succeeded:body _134
  br _1848, ^1848, ^1

1848:
  %% map_SUITE.erl:550
  _135 = call (`id`/1), `"fc3"`

  %% Aliased:
  %%    _135
  _1849 = succeeded:body _135
  br _1849, ^1849, ^1

1849:
  %% map_SUITE.erl:551
  _136 = call (`id`/1), `fb4`

  %% Aliased:
  %%    _136
  _1850 = succeeded:body _136
  br _1850, ^1850, ^1

1850:
  %% map_SUITE.erl:551
  _137 = call (`id`/1), `"fc4"`

  %% Aliased:
  %%    _137
  _1851 = succeeded:body _137
  br _1851, ^1851, ^1

1851:
  %% map_SUITE.erl:553
  _138 = call (`id`/1), `fb5`

  %% Aliased:
  %%    _138
  _1852 = succeeded:body _138
  br _1852, ^1852, ^1

1852:
  %% map_SUITE.erl:553
  _139 = call (`id`/1), `"fc5"`

  %% Aliased:
  %%    _139
  _1853 = succeeded:body _139
  br _1853, ^1853, ^1

1853:
  %% map_SUITE.erl:554
  _140 = call (`id`/1), `fb6`

  %% Aliased:
  %%    _140
  _1854 = succeeded:body _140
  br _1854, ^1854, ^1

1854:
  %% map_SUITE.erl:554
  _141 = call (`id`/1), `"fc6"`

  %% Aliased:
  %%    _141
  _1855 = succeeded:body _141
  br _1855, ^1855, ^1

1855:
  %% map_SUITE.erl:555
  _142 = call (`id`/1), `fb7`

  %% Aliased:
  %%    _142
  _1856 = succeeded:body _142
  br _1856, ^1856, ^1

1856:
  %% map_SUITE.erl:555
  _143 = call (`id`/1), `"fc7"`

  %% Aliased:
  %%    _143
  _1857 = succeeded:body _143
  br _1857, ^1857, ^1

1857:
  %% map_SUITE.erl:556
  _144 = call (`id`/1), `fb8`

  %% Aliased:
  %%    _144
  _1858 = succeeded:body _144
  br _1858, ^1858, ^1

1858:
  %% map_SUITE.erl:556
  _145 = call (`id`/1), `"fc8"`

  %% Aliased:
  %%    _145
  _1859 = succeeded:body _145
  br _1859, ^1859, ^1

1859:
  %% map_SUITE.erl:557
  _146 = call (`id`/1), `fb9`

  %% Aliased:
  %%    _146
  _1860 = succeeded:body _146
  br _1860, ^1860, ^1

1860:
  %% map_SUITE.erl:557
  _147 = call (`id`/1), `"fc9"`

  %% Aliased:
  %%    _147
  _1861 = succeeded:body _147
  br _1861, ^1861, ^1

1861:
  %% map_SUITE.erl:559
  _148 = call (`id`/1), `"small map key 1"`

  %% Aliased:
  %%    _148
  _1862 = succeeded:body _148
  br _1862, ^1862, ^1

1862:
  %% map_SUITE.erl:585
  _149 = call (`id`/1), `"large map key 2"`

  %% Aliased:
  %%    _149
  _1863 = succeeded:body _149
  br _1863, ^1863, ^1

1863:
  %% map_SUITE.erl:535
  %% Aliased:
  %%    _98, 
  %%    _99, 
  %%    _100, 
  %%    _101, 
  %%    _102, 
  %%    _103, 
  %%    _104, 
  %%    _105, 
  %%    _106, 
  %%    _107, 
  %%    _108, 
  %%    _109, 
  %%    _110, 
  %%    _111, 
  %%    _112, 
  %%    _113, 
  %%    _114, 
  %%    _115, 
  %%    _116, 
  %%    _117, 
  %%    _118, 
  %%    _119, 
  %%    _120, 
  %%    _121, 
  %%    _122, 
  %%    _123, 
  %%    _124, 
  %%    _125, 
  %%    _126, 
  %%    _127, 
  %%    _128, 
  %%    _129, 
  %%    _130, 
  %%    _131, 
  %%    _132, 
  %%    _133, 
  %%    _134, 
  %%    _135, 
  %%    _136, 
  %%    _137, 
  %%    _138, 
  %%    _139, 
  %%    _140, 
  %%    _141, 
  %%    _142, 
  %%    _143, 
  %%    _144, 
  %%    _145, 
  %%    _146, 
  %%    _147, 
  %%    _148, 
  %%    _149
  _150 = put_map `assoc`, `#{}`, `10.0`, `fa0`, `10`, _98, `11.0`, `fa1`, `11`, _101, `12.0`, `fa2`, `12`, _104, `13.0`, `fa3`, `13`, _107, `14.0`, `fa4`, `14`, _110, `15.0`, `fa5`, `15`, _113, `16.0`, `fa6`, `16`, _116, `17.0`, `fa7`, `17`, _119, `18.0`, `fa8`, `18`, _122, `19.0`, `fa9`, `19`, _125, `20`, `b0`, `20.0`, _128, `21`, `b1`, `21.0`, _130, `22`, `b2`, `22.0`, _132, `23`, `b3`, `23.0`, _134, `24`, `b4`, `24.0`, _136, `25`, `b5`, `25.0`, _138, `26`, `b6`, `26.0`, _140, `27`, `b7`, `27.0`, _142, `28`, `b8`, `28.0`, _144, `29`, `b9`, `29.0`, _146, `30`, _99, `30.0`, _129, `31`, _102, `31.0`, _131, `32`, _105, `32.0`, _133, `33`, _108, `33.0`, _135, `34`, _111, `34.0`, _137, `35`, _114, `35.0`, _139, `36`, _117, `36.0`, _141, `37`, _120, `37.0`, _143, `38`, _123, `38.0`, _145, `39`, _126, `39.0`, _147, `{["00"]}`, `"10"`, `{["01"]}`, `"11"`, `{["02"]}`, `"12"`, `{["03"]}`, `"13"`, `{["04"]}`, `"14"`, `{["05"]}`, `"15"`, `{["06"]}`, `"16"`, `{["07"]}`, `"17"`, `{["08"]}`, `"18"`, `{["09"]}`, `"19"`, `#{map => key,one => small}`, _148, `#{map => key,second => small}`, `"small map key 2"`, `#{map => key,third => small}`, `"small map key 3"`, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`, `"large map key 1"`, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
   19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
   28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
   35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
   k36 => "c6",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`, _149, `"40"`, `"d0"`, `"41"`, `"d1"`, `"42"`, `"d2"`, `"43"`, `"d3"`, `"44"`, `"d4"`, `"45"`, `"d5"`, `"46"`, `"d6"`, `"47"`, `"d7"`, `"48"`, `"d8"`, `"49"`, `"d9"`, `<<"50">>`, _100, `<<"51">>`, _103, `<<"52">>`, _106, `<<"53">>`, _109, `<<"54">>`, _112, `<<"55">>`, _115, `<<"56">>`, _118, `<<"57">>`, _121, `<<"58">>`, _124, `<<"59">>`, _127

  %% map_SUITE.erl:535
  %% Aliased:
  %%    _150
  M5 = call (`id`/1), _150

  %% Aliased:
  %%    M5
  _1864 = succeeded:body M5
  br _1864, ^1864, ^1

1864:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M5
  _2857 = bif:is_map M5
  br _2857, ^2857, ^1866

2857:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _681 = get_map_element M5, `10`

  %% Aliased:
  %%    _681
  _1867 = succeeded:guard _681
  br _1867, ^1867, ^1866

1867:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _680 = get_map_element M5, `20`

  %% Aliased:
  %%    _680
  _1868 = succeeded:guard _680
  br _1868, ^1868, ^1866

1868:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _679 = get_map_element M5, `30`

  %% Aliased:
  %%    _679
  _1869 = succeeded:guard _679
  br _1869, ^1869, ^1866

1869:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _678 = get_map_element M5, `{["00"]}`

  %% Aliased:
  %%    _678
  _1870 = succeeded:guard _678
  br _1870, ^1870, ^1866

1870:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _677 = get_map_element M5, `"40"`

  %% Aliased:
  %%    _677
  _1871 = succeeded:guard _677
  br _1871, ^1871, ^1866

1871:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _676 = get_map_element M5, `<<"50">>`

  %% Aliased:
  %%    _676
  _1872 = succeeded:guard _676
  br _1872, ^1872, ^1866

1872:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _681
  _2856 = bif:'=:=' _681, `a0`
  br _2856, ^2855, ^1866

2855:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _680
  _2854 = bif:'=:=' _680, `b0`
  br _2854, ^2853, ^1866

2853:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _679
  _2852 = bif:'=:=' _679, `"c0"`
  br _2852, ^2852, ^1866

2852:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _678
  _2851 = bif:'=:=' _678, `"10"`
  br _2851, ^2851, ^1866

2851:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _677
  _2850 = bif:'=:=' _677, `"d0"`
  br _2850, ^2850, ^1866

2850:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _676
  _2849 = bif:'=:=' _676, `"e0"`
  br _2849, ^2847, ^1866

2847:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _687 = get_map_element M5, `11`

  %% Aliased:
  %%    _687
  _1875 = succeeded:guard _687
  br _1875, ^1875, ^1874

1875:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _686 = get_map_element M5, `21`

  %% Aliased:
  %%    _686
  _1876 = succeeded:guard _686
  br _1876, ^1876, ^1874

1876:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _685 = get_map_element M5, `31`

  %% Aliased:
  %%    _685
  _1877 = succeeded:guard _685
  br _1877, ^1877, ^1874

1877:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _684 = get_map_element M5, `{["01"]}`

  %% Aliased:
  %%    _684
  _1878 = succeeded:guard _684
  br _1878, ^1878, ^1874

1878:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _683 = get_map_element M5, `"41"`

  %% Aliased:
  %%    _683
  _1879 = succeeded:guard _683
  br _1879, ^1879, ^1874

1879:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _682 = get_map_element M5, `<<"51">>`

  %% Aliased:
  %%    _682
  _1880 = succeeded:guard _682
  br _1880, ^1880, ^1874

1880:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _687
  _2846 = bif:'=:=' _687, `a1`
  br _2846, ^2845, ^1874

2845:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _686
  _2844 = bif:'=:=' _686, `b1`
  br _2844, ^2843, ^1874

2843:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _685
  _2842 = bif:'=:=' _685, `"c1"`
  br _2842, ^2842, ^1874

2842:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _684
  _2841 = bif:'=:=' _684, `"11"`
  br _2841, ^2841, ^1874

2841:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _683
  _2840 = bif:'=:=' _683, `"d1"`
  br _2840, ^2840, ^1874

2840:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _682
  _2839 = bif:'=:=' _682, `"e1"`
  br _2839, ^2837, ^1874

2837:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _693 = get_map_element M5, `12`

  %% Aliased:
  %%    _693
  _1883 = succeeded:guard _693
  br _1883, ^1883, ^1882

1883:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _692 = get_map_element M5, `22`

  %% Aliased:
  %%    _692
  _1884 = succeeded:guard _692
  br _1884, ^1884, ^1882

1884:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _691 = get_map_element M5, `32`

  %% Aliased:
  %%    _691
  _1885 = succeeded:guard _691
  br _1885, ^1885, ^1882

1885:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _690 = get_map_element M5, `{["02"]}`

  %% Aliased:
  %%    _690
  _1886 = succeeded:guard _690
  br _1886, ^1886, ^1882

1886:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _689 = get_map_element M5, `"42"`

  %% Aliased:
  %%    _689
  _1887 = succeeded:guard _689
  br _1887, ^1887, ^1882

1887:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _688 = get_map_element M5, `<<"52">>`

  %% Aliased:
  %%    _688
  _1888 = succeeded:guard _688
  br _1888, ^1888, ^1882

1888:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _693
  _2836 = bif:'=:=' _693, `a2`
  br _2836, ^2835, ^1882

2835:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _692
  _2834 = bif:'=:=' _692, `b2`
  br _2834, ^2833, ^1882

2833:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _691
  _2832 = bif:'=:=' _691, `"c2"`
  br _2832, ^2832, ^1882

2832:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _690
  _2831 = bif:'=:=' _690, `"12"`
  br _2831, ^2831, ^1882

2831:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _689
  _2830 = bif:'=:=' _689, `"d2"`
  br _2830, ^2830, ^1882

2830:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _688
  _2829 = bif:'=:=' _688, `"e2"`
  br _2829, ^2827, ^1882

2827:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _699 = get_map_element M5, `13`

  %% Aliased:
  %%    _699
  _1891 = succeeded:guard _699
  br _1891, ^1891, ^1890

1891:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _698 = get_map_element M5, `23`

  %% Aliased:
  %%    _698
  _1892 = succeeded:guard _698
  br _1892, ^1892, ^1890

1892:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _697 = get_map_element M5, `33`

  %% Aliased:
  %%    _697
  _1893 = succeeded:guard _697
  br _1893, ^1893, ^1890

1893:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _696 = get_map_element M5, `{["03"]}`

  %% Aliased:
  %%    _696
  _1894 = succeeded:guard _696
  br _1894, ^1894, ^1890

1894:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _695 = get_map_element M5, `"43"`

  %% Aliased:
  %%    _695
  _1895 = succeeded:guard _695
  br _1895, ^1895, ^1890

1895:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _694 = get_map_element M5, `<<"53">>`

  %% Aliased:
  %%    _694
  _1896 = succeeded:guard _694
  br _1896, ^1896, ^1890

1896:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _699
  _2826 = bif:'=:=' _699, `a3`
  br _2826, ^2825, ^1890

2825:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _698
  _2824 = bif:'=:=' _698, `b3`
  br _2824, ^2823, ^1890

2823:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _697
  _2822 = bif:'=:=' _697, `"c3"`
  br _2822, ^2822, ^1890

2822:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _696
  _2821 = bif:'=:=' _696, `"13"`
  br _2821, ^2821, ^1890

2821:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _695
  _2820 = bif:'=:=' _695, `"d3"`
  br _2820, ^2820, ^1890

2820:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _694
  _2819 = bif:'=:=' _694, `"e3"`
  br _2819, ^2817, ^1890

2817:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _705 = get_map_element M5, `14`

  %% Aliased:
  %%    _705
  _1899 = succeeded:guard _705
  br _1899, ^1899, ^1898

1899:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _704 = get_map_element M5, `24`

  %% Aliased:
  %%    _704
  _1900 = succeeded:guard _704
  br _1900, ^1900, ^1898

1900:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _703 = get_map_element M5, `34`

  %% Aliased:
  %%    _703
  _1901 = succeeded:guard _703
  br _1901, ^1901, ^1898

1901:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _702 = get_map_element M5, `{["04"]}`

  %% Aliased:
  %%    _702
  _1902 = succeeded:guard _702
  br _1902, ^1902, ^1898

1902:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _701 = get_map_element M5, `"44"`

  %% Aliased:
  %%    _701
  _1903 = succeeded:guard _701
  br _1903, ^1903, ^1898

1903:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _700 = get_map_element M5, `<<"54">>`

  %% Aliased:
  %%    _700
  _1904 = succeeded:guard _700
  br _1904, ^1904, ^1898

1904:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _705
  _2816 = bif:'=:=' _705, `a4`
  br _2816, ^2815, ^1898

2815:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _704
  _2814 = bif:'=:=' _704, `b4`
  br _2814, ^2813, ^1898

2813:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _703
  _2812 = bif:'=:=' _703, `"c4"`
  br _2812, ^2812, ^1898

2812:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _702
  _2811 = bif:'=:=' _702, `"14"`
  br _2811, ^2811, ^1898

2811:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _701
  _2810 = bif:'=:=' _701, `"d4"`
  br _2810, ^2810, ^1898

2810:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _700
  _2809 = bif:'=:=' _700, `"e4"`
  br _2809, ^2807, ^1898

2807:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _711 = get_map_element M5, `15`

  %% Aliased:
  %%    _711
  _1907 = succeeded:guard _711
  br _1907, ^1907, ^1906

1907:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _710 = get_map_element M5, `25`

  %% Aliased:
  %%    _710
  _1908 = succeeded:guard _710
  br _1908, ^1908, ^1906

1908:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _709 = get_map_element M5, `35`

  %% Aliased:
  %%    _709
  _1909 = succeeded:guard _709
  br _1909, ^1909, ^1906

1909:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _708 = get_map_element M5, `{["05"]}`

  %% Aliased:
  %%    _708
  _1910 = succeeded:guard _708
  br _1910, ^1910, ^1906

1910:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _707 = get_map_element M5, `"45"`

  %% Aliased:
  %%    _707
  _1911 = succeeded:guard _707
  br _1911, ^1911, ^1906

1911:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _706 = get_map_element M5, `<<"55">>`

  %% Aliased:
  %%    _706
  _1912 = succeeded:guard _706
  br _1912, ^1912, ^1906

1912:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _711
  _2806 = bif:'=:=' _711, `a5`
  br _2806, ^2805, ^1906

2805:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _710
  _2804 = bif:'=:=' _710, `b5`
  br _2804, ^2803, ^1906

2803:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _709
  _2802 = bif:'=:=' _709, `"c5"`
  br _2802, ^2802, ^1906

2802:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _708
  _2801 = bif:'=:=' _708, `"15"`
  br _2801, ^2801, ^1906

2801:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _707
  _2800 = bif:'=:=' _707, `"d5"`
  br _2800, ^2800, ^1906

2800:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _706
  _2799 = bif:'=:=' _706, `"e5"`
  br _2799, ^2797, ^1906

2797:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _717 = get_map_element M5, `16`

  %% Aliased:
  %%    _717
  _1915 = succeeded:guard _717
  br _1915, ^1915, ^1914

1915:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _716 = get_map_element M5, `26`

  %% Aliased:
  %%    _716
  _1916 = succeeded:guard _716
  br _1916, ^1916, ^1914

1916:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _715 = get_map_element M5, `36`

  %% Aliased:
  %%    _715
  _1917 = succeeded:guard _715
  br _1917, ^1917, ^1914

1917:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _714 = get_map_element M5, `{["06"]}`

  %% Aliased:
  %%    _714
  _1918 = succeeded:guard _714
  br _1918, ^1918, ^1914

1918:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _713 = get_map_element M5, `"46"`

  %% Aliased:
  %%    _713
  _1919 = succeeded:guard _713
  br _1919, ^1919, ^1914

1919:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _712 = get_map_element M5, `<<"56">>`

  %% Aliased:
  %%    _712
  _1920 = succeeded:guard _712
  br _1920, ^1920, ^1914

1920:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _717
  _2796 = bif:'=:=' _717, `a6`
  br _2796, ^2795, ^1914

2795:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _716
  _2794 = bif:'=:=' _716, `b6`
  br _2794, ^2793, ^1914

2793:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _715
  _2792 = bif:'=:=' _715, `"c6"`
  br _2792, ^2792, ^1914

2792:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _714
  _2791 = bif:'=:=' _714, `"16"`
  br _2791, ^2791, ^1914

2791:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _713
  _2790 = bif:'=:=' _713, `"d6"`
  br _2790, ^2790, ^1914

2790:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _712
  _2789 = bif:'=:=' _712, `"e6"`
  br _2789, ^2787, ^1914

2787:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _723 = get_map_element M5, `17`

  %% Aliased:
  %%    _723
  _1923 = succeeded:guard _723
  br _1923, ^1923, ^1922

1923:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _722 = get_map_element M5, `27`

  %% Aliased:
  %%    _722
  _1924 = succeeded:guard _722
  br _1924, ^1924, ^1922

1924:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _721 = get_map_element M5, `37`

  %% Aliased:
  %%    _721
  _1925 = succeeded:guard _721
  br _1925, ^1925, ^1922

1925:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _720 = get_map_element M5, `{["07"]}`

  %% Aliased:
  %%    _720
  _1926 = succeeded:guard _720
  br _1926, ^1926, ^1922

1926:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _719 = get_map_element M5, `"47"`

  %% Aliased:
  %%    _719
  _1927 = succeeded:guard _719
  br _1927, ^1927, ^1922

1927:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _718 = get_map_element M5, `<<"57">>`

  %% Aliased:
  %%    _718
  _1928 = succeeded:guard _718
  br _1928, ^1928, ^1922

1928:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _723
  _2786 = bif:'=:=' _723, `a7`
  br _2786, ^2785, ^1922

2785:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _722
  _2784 = bif:'=:=' _722, `b7`
  br _2784, ^2783, ^1922

2783:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _721
  _2782 = bif:'=:=' _721, `"c7"`
  br _2782, ^2782, ^1922

2782:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _720
  _2781 = bif:'=:=' _720, `"17"`
  br _2781, ^2781, ^1922

2781:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _719
  _2780 = bif:'=:=' _719, `"d7"`
  br _2780, ^2780, ^1922

2780:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _718
  _2779 = bif:'=:=' _718, `"e7"`
  br _2779, ^2777, ^1922

2777:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _729 = get_map_element M5, `18`

  %% Aliased:
  %%    _729
  _1931 = succeeded:guard _729
  br _1931, ^1931, ^1930

1931:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _728 = get_map_element M5, `28`

  %% Aliased:
  %%    _728
  _1932 = succeeded:guard _728
  br _1932, ^1932, ^1930

1932:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _727 = get_map_element M5, `38`

  %% Aliased:
  %%    _727
  _1933 = succeeded:guard _727
  br _1933, ^1933, ^1930

1933:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _726 = get_map_element M5, `{["08"]}`

  %% Aliased:
  %%    _726
  _1934 = succeeded:guard _726
  br _1934, ^1934, ^1930

1934:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _725 = get_map_element M5, `"48"`

  %% Aliased:
  %%    _725
  _1935 = succeeded:guard _725
  br _1935, ^1935, ^1930

1935:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _724 = get_map_element M5, `<<"58">>`

  %% Aliased:
  %%    _724
  _1936 = succeeded:guard _724
  br _1936, ^1936, ^1930

1936:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _729
  _2776 = bif:'=:=' _729, `a8`
  br _2776, ^2775, ^1930

2775:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _728
  _2774 = bif:'=:=' _728, `b8`
  br _2774, ^2773, ^1930

2773:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _727
  _2772 = bif:'=:=' _727, `"c8"`
  br _2772, ^2772, ^1930

2772:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _726
  _2771 = bif:'=:=' _726, `"18"`
  br _2771, ^2771, ^1930

2771:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _725
  _2770 = bif:'=:=' _725, `"d8"`
  br _2770, ^2770, ^1930

2770:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _724
  _2769 = bif:'=:=' _724, `"e8"`
  br _2769, ^2767, ^1930

2767:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _735 = get_map_element M5, `19`

  %% Aliased:
  %%    _735
  _1939 = succeeded:guard _735
  br _1939, ^1939, ^1938

1939:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _734 = get_map_element M5, `29`

  %% Aliased:
  %%    _734
  _1940 = succeeded:guard _734
  br _1940, ^1940, ^1938

1940:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _733 = get_map_element M5, `39`

  %% Aliased:
  %%    _733
  _1941 = succeeded:guard _733
  br _1941, ^1941, ^1938

1941:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _732 = get_map_element M5, `{["09"]}`

  %% Aliased:
  %%    _732
  _1942 = succeeded:guard _732
  br _1942, ^1942, ^1938

1942:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _731 = get_map_element M5, `"49"`

  %% Aliased:
  %%    _731
  _1943 = succeeded:guard _731
  br _1943, ^1943, ^1938

1943:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _730 = get_map_element M5, `<<"59">>`

  %% Aliased:
  %%    _730
  _1944 = succeeded:guard _730
  br _1944, ^1944, ^1938

1944:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _735
  _2766 = bif:'=:=' _735, `a9`
  br _2766, ^2765, ^1938

2765:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _734
  _2764 = bif:'=:=' _734, `b9`
  br _2764, ^2763, ^1938

2763:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _733
  _2762 = bif:'=:=' _733, `"c9"`
  br _2762, ^2762, ^1938

2762:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _732
  _2761 = bif:'=:=' _732, `"19"`
  br _2761, ^2761, ^1938

2761:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _731
  _2760 = bif:'=:=' _731, `"d9"`
  br _2760, ^2760, ^1938

2760:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _730
  _2759 = bif:'=:=' _730, `"e9"`
  br _2759, ^2757, ^1938

2757:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _738 = get_map_element M5, `#{map => key,one => small}`

  %% Aliased:
  %%    _738
  _1947 = succeeded:guard _738
  br _1947, ^1947, ^1946

1947:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _737 = get_map_element M5, `#{map => key,third => small}`

  %% Aliased:
  %%    _737
  _1948 = succeeded:guard _737
  br _1948, ^1948, ^1946

1948:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _736 = get_map_element M5, `#{map => key,second => small}`

  %% Aliased:
  %%    _736
  _1949 = succeeded:guard _736
  br _1949, ^1949, ^1946

1949:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _738
  _2756 = bif:'=:=' _738, `"small map key 1"`
  br _2756, ^2756, ^1946

2756:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _737
  _2755 = bif:'=:=' _737, `"small map key 3"`
  br _2755, ^2755, ^1946

2755:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _736
  _2754 = bif:'=:=' _736, `"small map key 2"`
  br _2754, ^2752, ^1946

2752:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _740 = get_map_element M5, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    _740
  _1952 = succeeded:guard _740
  br _1952, ^1952, ^1951

1952:
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _739 = get_map_element M5, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
   19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
   28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
   35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
   k36 => "c6",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    _739
  _1953 = succeeded:guard _739
  br _1953, ^1953, ^1951

1953:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _740
  _2751 = bif:'=:=' _740, `"large map key 1"`
  br _2751, ^2751, ^1951

2751:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _739
  _2750 = bif:'=:=' _739, `"large map key 2"`
  br _2750, ^2750, ^1951

2750:
  %% map_SUITE.erl:627
  %% Argument types:
  %%    M5 => map()
  %% Aliased:
  %%    M5
  _741 = bif:map_size M5

  %% Argument types:
  %%    _741 => 0..288230376151711743
  %% Unique:
  %%    _741
  _2748 = bif:'=:=' _741, `95`
  br _2748, ^2742, ^1956

2742:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _748 = get_map_element M0, `10`

  %% Aliased:
  %%    _748
  _1962 = succeeded:guard _748
  br _1962, ^1962, ^1961

1962:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _747 = get_map_element M0, `20`

  %% Aliased:
  %%    _747
  _1963 = succeeded:guard _747
  br _1963, ^1963, ^1961

1963:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _746 = get_map_element M0, `30`

  %% Aliased:
  %%    _746
  _1964 = succeeded:guard _746
  br _1964, ^1964, ^1961

1964:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _745 = get_map_element M0, `{["00"]}`

  %% Aliased:
  %%    _745
  _1965 = succeeded:guard _745
  br _1965, ^1965, ^1961

1965:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _744 = get_map_element M0, `"40"`

  %% Aliased:
  %%    _744
  _1966 = succeeded:guard _744
  br _1966, ^1966, ^1961

1966:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _743 = get_map_element M0, `<<"50">>`

  %% Aliased:
  %%    _743
  _1967 = succeeded:guard _743
  br _1967, ^1967, ^1961

1967:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _748
  _2741 = bif:'=:=' _748, `a0`
  br _2741, ^2740, ^1961

2740:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _747
  _2739 = bif:'=:=' _747, `b0`
  br _2739, ^2738, ^1961

2738:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _746
  _2737 = bif:'=:=' _746, `"c0"`
  br _2737, ^2737, ^1961

2737:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _745
  _2736 = bif:'=:=' _745, `"10"`
  br _2736, ^2736, ^1961

2736:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _744
  _2735 = bif:'=:=' _744, `"d0"`
  br _2735, ^2735, ^1961

2735:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _743
  _2734 = bif:'=:=' _743, `"e0"`
  br _2734, ^2732, ^1961

2732:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _754 = get_map_element M0, `11`

  %% Aliased:
  %%    _754
  _1970 = succeeded:guard _754
  br _1970, ^1970, ^1969

1970:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _753 = get_map_element M0, `21`

  %% Aliased:
  %%    _753
  _1971 = succeeded:guard _753
  br _1971, ^1971, ^1969

1971:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _752 = get_map_element M0, `31`

  %% Aliased:
  %%    _752
  _1972 = succeeded:guard _752
  br _1972, ^1972, ^1969

1972:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _751 = get_map_element M0, `{["01"]}`

  %% Aliased:
  %%    _751
  _1973 = succeeded:guard _751
  br _1973, ^1973, ^1969

1973:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _750 = get_map_element M0, `"41"`

  %% Aliased:
  %%    _750
  _1974 = succeeded:guard _750
  br _1974, ^1974, ^1969

1974:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _749 = get_map_element M0, `<<"51">>`

  %% Aliased:
  %%    _749
  _1975 = succeeded:guard _749
  br _1975, ^1975, ^1969

1975:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _754
  _2731 = bif:'=:=' _754, `a1`
  br _2731, ^2730, ^1969

2730:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _753
  _2729 = bif:'=:=' _753, `b1`
  br _2729, ^2728, ^1969

2728:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _752
  _2727 = bif:'=:=' _752, `"c1"`
  br _2727, ^2727, ^1969

2727:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _751
  _2726 = bif:'=:=' _751, `"11"`
  br _2726, ^2726, ^1969

2726:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _750
  _2725 = bif:'=:=' _750, `"d1"`
  br _2725, ^2725, ^1969

2725:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _749
  _2724 = bif:'=:=' _749, `"e1"`
  br _2724, ^2722, ^1969

2722:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _760 = get_map_element M0, `12`

  %% Aliased:
  %%    _760
  _1978 = succeeded:guard _760
  br _1978, ^1978, ^1977

1978:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _759 = get_map_element M0, `22`

  %% Aliased:
  %%    _759
  _1979 = succeeded:guard _759
  br _1979, ^1979, ^1977

1979:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _758 = get_map_element M0, `32`

  %% Aliased:
  %%    _758
  _1980 = succeeded:guard _758
  br _1980, ^1980, ^1977

1980:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _757 = get_map_element M0, `{["02"]}`

  %% Aliased:
  %%    _757
  _1981 = succeeded:guard _757
  br _1981, ^1981, ^1977

1981:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _756 = get_map_element M0, `"42"`

  %% Aliased:
  %%    _756
  _1982 = succeeded:guard _756
  br _1982, ^1982, ^1977

1982:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _755 = get_map_element M0, `<<"52">>`

  %% Aliased:
  %%    _755
  _1983 = succeeded:guard _755
  br _1983, ^1983, ^1977

1983:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _760
  _2721 = bif:'=:=' _760, `a2`
  br _2721, ^2720, ^1977

2720:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _759
  _2719 = bif:'=:=' _759, `b2`
  br _2719, ^2718, ^1977

2718:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _758
  _2717 = bif:'=:=' _758, `"c2"`
  br _2717, ^2717, ^1977

2717:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _757
  _2716 = bif:'=:=' _757, `"12"`
  br _2716, ^2716, ^1977

2716:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _756
  _2715 = bif:'=:=' _756, `"d2"`
  br _2715, ^2715, ^1977

2715:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _755
  _2714 = bif:'=:=' _755, `"e2"`
  br _2714, ^2712, ^1977

2712:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _766 = get_map_element M0, `13`

  %% Aliased:
  %%    _766
  _1986 = succeeded:guard _766
  br _1986, ^1986, ^1985

1986:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _765 = get_map_element M0, `23`

  %% Aliased:
  %%    _765
  _1987 = succeeded:guard _765
  br _1987, ^1987, ^1985

1987:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _764 = get_map_element M0, `33`

  %% Aliased:
  %%    _764
  _1988 = succeeded:guard _764
  br _1988, ^1988, ^1985

1988:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _763 = get_map_element M0, `{["03"]}`

  %% Aliased:
  %%    _763
  _1989 = succeeded:guard _763
  br _1989, ^1989, ^1985

1989:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _762 = get_map_element M0, `"43"`

  %% Aliased:
  %%    _762
  _1990 = succeeded:guard _762
  br _1990, ^1990, ^1985

1990:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _761 = get_map_element M0, `<<"53">>`

  %% Aliased:
  %%    _761
  _1991 = succeeded:guard _761
  br _1991, ^1991, ^1985

1991:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _766
  _2711 = bif:'=:=' _766, `a3`
  br _2711, ^2710, ^1985

2710:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _765
  _2709 = bif:'=:=' _765, `b3`
  br _2709, ^2708, ^1985

2708:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _764
  _2707 = bif:'=:=' _764, `"c3"`
  br _2707, ^2707, ^1985

2707:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _763
  _2706 = bif:'=:=' _763, `"13"`
  br _2706, ^2706, ^1985

2706:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _762
  _2705 = bif:'=:=' _762, `"d3"`
  br _2705, ^2705, ^1985

2705:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _761
  _2704 = bif:'=:=' _761, `"e3"`
  br _2704, ^2702, ^1985

2702:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _772 = get_map_element M0, `14`

  %% Aliased:
  %%    _772
  _1994 = succeeded:guard _772
  br _1994, ^1994, ^1993

1994:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _771 = get_map_element M0, `24`

  %% Aliased:
  %%    _771
  _1995 = succeeded:guard _771
  br _1995, ^1995, ^1993

1995:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _770 = get_map_element M0, `34`

  %% Aliased:
  %%    _770
  _1996 = succeeded:guard _770
  br _1996, ^1996, ^1993

1996:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _769 = get_map_element M0, `{["04"]}`

  %% Aliased:
  %%    _769
  _1997 = succeeded:guard _769
  br _1997, ^1997, ^1993

1997:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _768 = get_map_element M0, `"44"`

  %% Aliased:
  %%    _768
  _1998 = succeeded:guard _768
  br _1998, ^1998, ^1993

1998:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _767 = get_map_element M0, `<<"54">>`

  %% Aliased:
  %%    _767
  _1999 = succeeded:guard _767
  br _1999, ^1999, ^1993

1999:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _772
  _2701 = bif:'=:=' _772, `a4`
  br _2701, ^2700, ^1993

2700:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _771
  _2699 = bif:'=:=' _771, `b4`
  br _2699, ^2698, ^1993

2698:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _770
  _2697 = bif:'=:=' _770, `"c4"`
  br _2697, ^2697, ^1993

2697:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _769
  _2696 = bif:'=:=' _769, `"14"`
  br _2696, ^2696, ^1993

2696:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _768
  _2695 = bif:'=:=' _768, `"d4"`
  br _2695, ^2695, ^1993

2695:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _767
  _2694 = bif:'=:=' _767, `"e4"`
  br _2694, ^2692, ^1993

2692:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _778 = get_map_element M1, `10`

  %% Aliased:
  %%    _778
  _2002 = succeeded:guard _778
  br _2002, ^2002, ^2001

2002:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _777 = get_map_element M1, `20`

  %% Aliased:
  %%    _777
  _2003 = succeeded:guard _777
  br _2003, ^2003, ^2001

2003:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _776 = get_map_element M1, `30`

  %% Aliased:
  %%    _776
  _2004 = succeeded:guard _776
  br _2004, ^2004, ^2001

2004:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _775 = get_map_element M1, `{["00"]}`

  %% Aliased:
  %%    _775
  _2005 = succeeded:guard _775
  br _2005, ^2005, ^2001

2005:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _774 = get_map_element M1, `"40"`

  %% Aliased:
  %%    _774
  _2006 = succeeded:guard _774
  br _2006, ^2006, ^2001

2006:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _773 = get_map_element M1, `<<"50">>`

  %% Aliased:
  %%    _773
  _2007 = succeeded:guard _773
  br _2007, ^2007, ^2001

2007:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _778
  _2691 = bif:'=:=' _778, `na0`
  br _2691, ^2690, ^2001

2690:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _777
  _2689 = bif:'=:=' _777, `nb0`
  br _2689, ^2688, ^2001

2688:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _776
  _2687 = bif:'=:=' _776, `"nc0"`
  br _2687, ^2687, ^2001

2687:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _775
  _2686 = bif:'=:=' _775, `"n10"`
  br _2686, ^2686, ^2001

2686:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _774
  _2685 = bif:'=:=' _774, `"nd0"`
  br _2685, ^2685, ^2001

2685:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _773
  _2684 = bif:'=:=' _773, `"ne0"`
  br _2684, ^2682, ^2001

2682:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _784 = get_map_element M1, `11`

  %% Aliased:
  %%    _784
  _2010 = succeeded:guard _784
  br _2010, ^2010, ^2009

2010:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _783 = get_map_element M1, `21`

  %% Aliased:
  %%    _783
  _2011 = succeeded:guard _783
  br _2011, ^2011, ^2009

2011:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _782 = get_map_element M1, `31`

  %% Aliased:
  %%    _782
  _2012 = succeeded:guard _782
  br _2012, ^2012, ^2009

2012:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _781 = get_map_element M1, `{["01"]}`

  %% Aliased:
  %%    _781
  _2013 = succeeded:guard _781
  br _2013, ^2013, ^2009

2013:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _780 = get_map_element M1, `"41"`

  %% Aliased:
  %%    _780
  _2014 = succeeded:guard _780
  br _2014, ^2014, ^2009

2014:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _779 = get_map_element M1, `<<"51">>`

  %% Aliased:
  %%    _779
  _2015 = succeeded:guard _779
  br _2015, ^2015, ^2009

2015:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _784
  _2681 = bif:'=:=' _784, `na1`
  br _2681, ^2680, ^2009

2680:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _783
  _2679 = bif:'=:=' _783, `nb1`
  br _2679, ^2678, ^2009

2678:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _782
  _2677 = bif:'=:=' _782, `"nc1"`
  br _2677, ^2677, ^2009

2677:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _781
  _2676 = bif:'=:=' _781, `"n11"`
  br _2676, ^2676, ^2009

2676:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _780
  _2675 = bif:'=:=' _780, `"nd1"`
  br _2675, ^2675, ^2009

2675:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _779
  _2674 = bif:'=:=' _779, `"ne1"`
  br _2674, ^2672, ^2009

2672:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _790 = get_map_element M1, `12`

  %% Aliased:
  %%    _790
  _2018 = succeeded:guard _790
  br _2018, ^2018, ^2017

2018:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _789 = get_map_element M1, `22`

  %% Aliased:
  %%    _789
  _2019 = succeeded:guard _789
  br _2019, ^2019, ^2017

2019:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _788 = get_map_element M1, `32`

  %% Aliased:
  %%    _788
  _2020 = succeeded:guard _788
  br _2020, ^2020, ^2017

2020:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _787 = get_map_element M1, `{["02"]}`

  %% Aliased:
  %%    _787
  _2021 = succeeded:guard _787
  br _2021, ^2021, ^2017

2021:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _786 = get_map_element M1, `"42"`

  %% Aliased:
  %%    _786
  _2022 = succeeded:guard _786
  br _2022, ^2022, ^2017

2022:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _785 = get_map_element M1, `<<"52">>`

  %% Aliased:
  %%    _785
  _2023 = succeeded:guard _785
  br _2023, ^2023, ^2017

2023:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _790
  _2671 = bif:'=:=' _790, `na2`
  br _2671, ^2670, ^2017

2670:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _789
  _2669 = bif:'=:=' _789, `nb2`
  br _2669, ^2668, ^2017

2668:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _788
  _2667 = bif:'=:=' _788, `"nc2"`
  br _2667, ^2667, ^2017

2667:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _787
  _2666 = bif:'=:=' _787, `"n12"`
  br _2666, ^2666, ^2017

2666:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _786
  _2665 = bif:'=:=' _786, `"nd2"`
  br _2665, ^2665, ^2017

2665:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _785
  _2664 = bif:'=:=' _785, `"ne2"`
  br _2664, ^2662, ^2017

2662:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _796 = get_map_element M1, `13`

  %% Aliased:
  %%    _796
  _2026 = succeeded:guard _796
  br _2026, ^2026, ^2025

2026:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _795 = get_map_element M1, `23`

  %% Aliased:
  %%    _795
  _2027 = succeeded:guard _795
  br _2027, ^2027, ^2025

2027:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _794 = get_map_element M1, `33`

  %% Aliased:
  %%    _794
  _2028 = succeeded:guard _794
  br _2028, ^2028, ^2025

2028:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _793 = get_map_element M1, `{["03"]}`

  %% Aliased:
  %%    _793
  _2029 = succeeded:guard _793
  br _2029, ^2029, ^2025

2029:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _792 = get_map_element M1, `"43"`

  %% Aliased:
  %%    _792
  _2030 = succeeded:guard _792
  br _2030, ^2030, ^2025

2030:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _791 = get_map_element M1, `<<"53">>`

  %% Aliased:
  %%    _791
  _2031 = succeeded:guard _791
  br _2031, ^2031, ^2025

2031:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _796
  _2661 = bif:'=:=' _796, `na3`
  br _2661, ^2660, ^2025

2660:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _795
  _2659 = bif:'=:=' _795, `nb3`
  br _2659, ^2658, ^2025

2658:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _794
  _2657 = bif:'=:=' _794, `"nc3"`
  br _2657, ^2657, ^2025

2657:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _793
  _2656 = bif:'=:=' _793, `"n13"`
  br _2656, ^2656, ^2025

2656:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _792
  _2655 = bif:'=:=' _792, `"nd3"`
  br _2655, ^2655, ^2025

2655:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _791
  _2654 = bif:'=:=' _791, `"ne3"`
  br _2654, ^2652, ^2025

2652:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _802 = get_map_element M1, `14`

  %% Aliased:
  %%    _802
  _2034 = succeeded:guard _802
  br _2034, ^2034, ^2033

2034:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _801 = get_map_element M1, `24`

  %% Aliased:
  %%    _801
  _2035 = succeeded:guard _801
  br _2035, ^2035, ^2033

2035:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _800 = get_map_element M1, `34`

  %% Aliased:
  %%    _800
  _2036 = succeeded:guard _800
  br _2036, ^2036, ^2033

2036:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _799 = get_map_element M1, `{["04"]}`

  %% Aliased:
  %%    _799
  _2037 = succeeded:guard _799
  br _2037, ^2037, ^2033

2037:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _798 = get_map_element M1, `"44"`

  %% Aliased:
  %%    _798
  _2038 = succeeded:guard _798
  br _2038, ^2038, ^2033

2038:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _797 = get_map_element M1, `<<"54">>`

  %% Aliased:
  %%    _797
  _2039 = succeeded:guard _797
  br _2039, ^2039, ^2033

2039:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _802
  _2651 = bif:'=:=' _802, `na4`
  br _2651, ^2650, ^2033

2650:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _801
  _2649 = bif:'=:=' _801, `nb4`
  br _2649, ^2648, ^2033

2648:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _800
  _2647 = bif:'=:=' _800, `"nc4"`
  br _2647, ^2647, ^2033

2647:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _799
  _2646 = bif:'=:=' _799, `"n14"`
  br _2646, ^2646, ^2033

2646:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _798
  _2645 = bif:'=:=' _798, `"nd4"`
  br _2645, ^2645, ^2033

2645:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _797
  _2644 = bif:'=:=' _797, `"ne4"`
  br _2644, ^2642, ^2033

2642:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _808 = get_map_element M1, `15`

  %% Aliased:
  %%    _808
  _2042 = succeeded:guard _808
  br _2042, ^2042, ^2041

2042:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _807 = get_map_element M1, `25`

  %% Aliased:
  %%    _807
  _2043 = succeeded:guard _807
  br _2043, ^2043, ^2041

2043:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _806 = get_map_element M1, `35`

  %% Aliased:
  %%    _806
  _2044 = succeeded:guard _806
  br _2044, ^2044, ^2041

2044:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _805 = get_map_element M1, `{["05"]}`

  %% Aliased:
  %%    _805
  _2045 = succeeded:guard _805
  br _2045, ^2045, ^2041

2045:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _804 = get_map_element M1, `"45"`

  %% Aliased:
  %%    _804
  _2046 = succeeded:guard _804
  br _2046, ^2046, ^2041

2046:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _803 = get_map_element M1, `<<"55">>`

  %% Aliased:
  %%    _803
  _2047 = succeeded:guard _803
  br _2047, ^2047, ^2041

2047:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _808
  _2641 = bif:'=:=' _808, `a5`
  br _2641, ^2640, ^2041

2640:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _807
  _2639 = bif:'=:=' _807, `b5`
  br _2639, ^2638, ^2041

2638:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _806
  _2637 = bif:'=:=' _806, `"c5"`
  br _2637, ^2637, ^2041

2637:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _805
  _2636 = bif:'=:=' _805, `"15"`
  br _2636, ^2636, ^2041

2636:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _804
  _2635 = bif:'=:=' _804, `"d5"`
  br _2635, ^2635, ^2041

2635:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _803
  _2634 = bif:'=:=' _803, `"e5"`
  br _2634, ^2632, ^2041

2632:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _814 = get_map_element M1, `16`

  %% Aliased:
  %%    _814
  _2050 = succeeded:guard _814
  br _2050, ^2050, ^2049

2050:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _813 = get_map_element M1, `26`

  %% Aliased:
  %%    _813
  _2051 = succeeded:guard _813
  br _2051, ^2051, ^2049

2051:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _812 = get_map_element M1, `36`

  %% Aliased:
  %%    _812
  _2052 = succeeded:guard _812
  br _2052, ^2052, ^2049

2052:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _811 = get_map_element M1, `{["06"]}`

  %% Aliased:
  %%    _811
  _2053 = succeeded:guard _811
  br _2053, ^2053, ^2049

2053:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _810 = get_map_element M1, `"46"`

  %% Aliased:
  %%    _810
  _2054 = succeeded:guard _810
  br _2054, ^2054, ^2049

2054:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _809 = get_map_element M1, `<<"56">>`

  %% Aliased:
  %%    _809
  _2055 = succeeded:guard _809
  br _2055, ^2055, ^2049

2055:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _814
  _2631 = bif:'=:=' _814, `a6`
  br _2631, ^2630, ^2049

2630:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _813
  _2629 = bif:'=:=' _813, `b6`
  br _2629, ^2628, ^2049

2628:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _812
  _2627 = bif:'=:=' _812, `"c6"`
  br _2627, ^2627, ^2049

2627:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _811
  _2626 = bif:'=:=' _811, `"16"`
  br _2626, ^2626, ^2049

2626:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _810
  _2625 = bif:'=:=' _810, `"d6"`
  br _2625, ^2625, ^2049

2625:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _809
  _2624 = bif:'=:=' _809, `"e6"`
  br _2624, ^2622, ^2049

2622:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _820 = get_map_element M1, `17`

  %% Aliased:
  %%    _820
  _2058 = succeeded:guard _820
  br _2058, ^2058, ^2057

2058:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _819 = get_map_element M1, `27`

  %% Aliased:
  %%    _819
  _2059 = succeeded:guard _819
  br _2059, ^2059, ^2057

2059:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _818 = get_map_element M1, `37`

  %% Aliased:
  %%    _818
  _2060 = succeeded:guard _818
  br _2060, ^2060, ^2057

2060:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _817 = get_map_element M1, `{["07"]}`

  %% Aliased:
  %%    _817
  _2061 = succeeded:guard _817
  br _2061, ^2061, ^2057

2061:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _816 = get_map_element M1, `"47"`

  %% Aliased:
  %%    _816
  _2062 = succeeded:guard _816
  br _2062, ^2062, ^2057

2062:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _815 = get_map_element M1, `<<"57">>`

  %% Aliased:
  %%    _815
  _2063 = succeeded:guard _815
  br _2063, ^2063, ^2057

2063:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _820
  _2621 = bif:'=:=' _820, `a7`
  br _2621, ^2620, ^2057

2620:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _819
  _2619 = bif:'=:=' _819, `b7`
  br _2619, ^2618, ^2057

2618:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _818
  _2617 = bif:'=:=' _818, `"c7"`
  br _2617, ^2617, ^2057

2617:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _817
  _2616 = bif:'=:=' _817, `"17"`
  br _2616, ^2616, ^2057

2616:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _816
  _2615 = bif:'=:=' _816, `"d7"`
  br _2615, ^2615, ^2057

2615:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _815
  _2614 = bif:'=:=' _815, `"e7"`
  br _2614, ^2612, ^2057

2612:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _826 = get_map_element M1, `18`

  %% Aliased:
  %%    _826
  _2066 = succeeded:guard _826
  br _2066, ^2066, ^2065

2066:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _825 = get_map_element M1, `28`

  %% Aliased:
  %%    _825
  _2067 = succeeded:guard _825
  br _2067, ^2067, ^2065

2067:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _824 = get_map_element M1, `38`

  %% Aliased:
  %%    _824
  _2068 = succeeded:guard _824
  br _2068, ^2068, ^2065

2068:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _823 = get_map_element M1, `{["08"]}`

  %% Aliased:
  %%    _823
  _2069 = succeeded:guard _823
  br _2069, ^2069, ^2065

2069:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _822 = get_map_element M1, `"48"`

  %% Aliased:
  %%    _822
  _2070 = succeeded:guard _822
  br _2070, ^2070, ^2065

2070:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _821 = get_map_element M1, `<<"58">>`

  %% Aliased:
  %%    _821
  _2071 = succeeded:guard _821
  br _2071, ^2071, ^2065

2071:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _826
  _2611 = bif:'=:=' _826, `a8`
  br _2611, ^2610, ^2065

2610:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _825
  _2609 = bif:'=:=' _825, `b8`
  br _2609, ^2608, ^2065

2608:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _824
  _2607 = bif:'=:=' _824, `"c8"`
  br _2607, ^2607, ^2065

2607:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _823
  _2606 = bif:'=:=' _823, `"18"`
  br _2606, ^2606, ^2065

2606:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _822
  _2605 = bif:'=:=' _822, `"d8"`
  br _2605, ^2605, ^2065

2605:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _821
  _2604 = bif:'=:=' _821, `"e8"`
  br _2604, ^2602, ^2065

2602:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _832 = get_map_element M1, `19`

  %% Aliased:
  %%    _832
  _2074 = succeeded:guard _832
  br _2074, ^2074, ^2073

2074:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _831 = get_map_element M1, `29`

  %% Aliased:
  %%    _831
  _2075 = succeeded:guard _831
  br _2075, ^2075, ^2073

2075:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _830 = get_map_element M1, `39`

  %% Aliased:
  %%    _830
  _2076 = succeeded:guard _830
  br _2076, ^2076, ^2073

2076:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _829 = get_map_element M1, `{["09"]}`

  %% Aliased:
  %%    _829
  _2077 = succeeded:guard _829
  br _2077, ^2077, ^2073

2077:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _828 = get_map_element M1, `"49"`

  %% Aliased:
  %%    _828
  _2078 = succeeded:guard _828
  br _2078, ^2078, ^2073

2078:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _827 = get_map_element M1, `<<"59">>`

  %% Aliased:
  %%    _827
  _2079 = succeeded:guard _827
  br _2079, ^2079, ^2073

2079:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _832
  _2601 = bif:'=:=' _832, `a9`
  br _2601, ^2600, ^2073

2600:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _831
  _2599 = bif:'=:=' _831, `b9`
  br _2599, ^2598, ^2073

2598:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _830
  _2597 = bif:'=:=' _830, `"c9"`
  br _2597, ^2597, ^2073

2597:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _829
  _2596 = bif:'=:=' _829, `"19"`
  br _2596, ^2596, ^2073

2596:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _828
  _2595 = bif:'=:=' _828, `"d9"`
  br _2595, ^2595, ^2073

2595:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _827
  _2594 = bif:'=:=' _827, `"e9"`
  br _2594, ^2592, ^2073

2592:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _838 = get_map_element M2, `15`

  %% Aliased:
  %%    _838
  _2082 = succeeded:guard _838
  br _2082, ^2082, ^2081

2082:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _837 = get_map_element M2, `25`

  %% Aliased:
  %%    _837
  _2083 = succeeded:guard _837
  br _2083, ^2083, ^2081

2083:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _836 = get_map_element M2, `35`

  %% Aliased:
  %%    _836
  _2084 = succeeded:guard _836
  br _2084, ^2084, ^2081

2084:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _835 = get_map_element M2, `{["05"]}`

  %% Aliased:
  %%    _835
  _2085 = succeeded:guard _835
  br _2085, ^2085, ^2081

2085:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _834 = get_map_element M2, `"45"`

  %% Aliased:
  %%    _834
  _2086 = succeeded:guard _834
  br _2086, ^2086, ^2081

2086:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _833 = get_map_element M2, `<<"55">>`

  %% Aliased:
  %%    _833
  _2087 = succeeded:guard _833
  br _2087, ^2087, ^2081

2087:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _838
  _2591 = bif:'=:=' _838, `a5`
  br _2591, ^2590, ^2081

2590:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _837
  _2589 = bif:'=:=' _837, `b5`
  br _2589, ^2588, ^2081

2588:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _836
  _2587 = bif:'=:=' _836, `"c5"`
  br _2587, ^2587, ^2081

2587:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _835
  _2586 = bif:'=:=' _835, `"15"`
  br _2586, ^2586, ^2081

2586:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _834
  _2585 = bif:'=:=' _834, `"d5"`
  br _2585, ^2585, ^2081

2585:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _833
  _2584 = bif:'=:=' _833, `"e5"`
  br _2584, ^2582, ^2081

2582:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _844 = get_map_element M2, `16`

  %% Aliased:
  %%    _844
  _2090 = succeeded:guard _844
  br _2090, ^2090, ^2089

2090:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _843 = get_map_element M2, `26`

  %% Aliased:
  %%    _843
  _2091 = succeeded:guard _843
  br _2091, ^2091, ^2089

2091:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _842 = get_map_element M2, `36`

  %% Aliased:
  %%    _842
  _2092 = succeeded:guard _842
  br _2092, ^2092, ^2089

2092:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _841 = get_map_element M2, `{["06"]}`

  %% Aliased:
  %%    _841
  _2093 = succeeded:guard _841
  br _2093, ^2093, ^2089

2093:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _840 = get_map_element M2, `"46"`

  %% Aliased:
  %%    _840
  _2094 = succeeded:guard _840
  br _2094, ^2094, ^2089

2094:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _839 = get_map_element M2, `<<"56">>`

  %% Aliased:
  %%    _839
  _2095 = succeeded:guard _839
  br _2095, ^2095, ^2089

2095:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _844
  _2581 = bif:'=:=' _844, `a6`
  br _2581, ^2580, ^2089

2580:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _843
  _2579 = bif:'=:=' _843, `b6`
  br _2579, ^2578, ^2089

2578:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _842
  _2577 = bif:'=:=' _842, `"c6"`
  br _2577, ^2577, ^2089

2577:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _841
  _2576 = bif:'=:=' _841, `"16"`
  br _2576, ^2576, ^2089

2576:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _840
  _2575 = bif:'=:=' _840, `"d6"`
  br _2575, ^2575, ^2089

2575:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _839
  _2574 = bif:'=:=' _839, `"e6"`
  br _2574, ^2572, ^2089

2572:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _850 = get_map_element M2, `17`

  %% Aliased:
  %%    _850
  _2098 = succeeded:guard _850
  br _2098, ^2098, ^2097

2098:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _849 = get_map_element M2, `27`

  %% Aliased:
  %%    _849
  _2099 = succeeded:guard _849
  br _2099, ^2099, ^2097

2099:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _848 = get_map_element M2, `37`

  %% Aliased:
  %%    _848
  _2100 = succeeded:guard _848
  br _2100, ^2100, ^2097

2100:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _847 = get_map_element M2, `{["07"]}`

  %% Aliased:
  %%    _847
  _2101 = succeeded:guard _847
  br _2101, ^2101, ^2097

2101:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _846 = get_map_element M2, `"47"`

  %% Aliased:
  %%    _846
  _2102 = succeeded:guard _846
  br _2102, ^2102, ^2097

2102:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _845 = get_map_element M2, `<<"57">>`

  %% Aliased:
  %%    _845
  _2103 = succeeded:guard _845
  br _2103, ^2103, ^2097

2103:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _850
  _2571 = bif:'=:=' _850, `a7`
  br _2571, ^2570, ^2097

2570:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _849
  _2569 = bif:'=:=' _849, `b7`
  br _2569, ^2568, ^2097

2568:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _848
  _2567 = bif:'=:=' _848, `"c7"`
  br _2567, ^2567, ^2097

2567:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _847
  _2566 = bif:'=:=' _847, `"17"`
  br _2566, ^2566, ^2097

2566:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _846
  _2565 = bif:'=:=' _846, `"d7"`
  br _2565, ^2565, ^2097

2565:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _845
  _2564 = bif:'=:=' _845, `"e7"`
  br _2564, ^2562, ^2097

2562:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _856 = get_map_element M2, `18`

  %% Aliased:
  %%    _856
  _2106 = succeeded:guard _856
  br _2106, ^2106, ^2105

2106:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _855 = get_map_element M2, `28`

  %% Aliased:
  %%    _855
  _2107 = succeeded:guard _855
  br _2107, ^2107, ^2105

2107:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _854 = get_map_element M2, `38`

  %% Aliased:
  %%    _854
  _2108 = succeeded:guard _854
  br _2108, ^2108, ^2105

2108:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _853 = get_map_element M2, `{["08"]}`

  %% Aliased:
  %%    _853
  _2109 = succeeded:guard _853
  br _2109, ^2109, ^2105

2109:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _852 = get_map_element M2, `"48"`

  %% Aliased:
  %%    _852
  _2110 = succeeded:guard _852
  br _2110, ^2110, ^2105

2110:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _851 = get_map_element M2, `<<"58">>`

  %% Aliased:
  %%    _851
  _2111 = succeeded:guard _851
  br _2111, ^2111, ^2105

2111:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _856
  _2561 = bif:'=:=' _856, `a8`
  br _2561, ^2560, ^2105

2560:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _855
  _2559 = bif:'=:=' _855, `b8`
  br _2559, ^2558, ^2105

2558:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _854
  _2557 = bif:'=:=' _854, `"c8"`
  br _2557, ^2557, ^2105

2557:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _853
  _2556 = bif:'=:=' _853, `"18"`
  br _2556, ^2556, ^2105

2556:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _852
  _2555 = bif:'=:=' _852, `"d8"`
  br _2555, ^2555, ^2105

2555:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _851
  _2554 = bif:'=:=' _851, `"e8"`
  br _2554, ^2552, ^2105

2552:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _862 = get_map_element M2, `19`

  %% Aliased:
  %%    _862
  _2114 = succeeded:guard _862
  br _2114, ^2114, ^2113

2114:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _861 = get_map_element M2, `29`

  %% Aliased:
  %%    _861
  _2115 = succeeded:guard _861
  br _2115, ^2115, ^2113

2115:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _860 = get_map_element M2, `39`

  %% Aliased:
  %%    _860
  _2116 = succeeded:guard _860
  br _2116, ^2116, ^2113

2116:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _859 = get_map_element M2, `{["09"]}`

  %% Aliased:
  %%    _859
  _2117 = succeeded:guard _859
  br _2117, ^2117, ^2113

2117:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _858 = get_map_element M2, `"49"`

  %% Aliased:
  %%    _858
  _2118 = succeeded:guard _858
  br _2118, ^2118, ^2113

2118:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _857 = get_map_element M2, `<<"59">>`

  %% Aliased:
  %%    _857
  _2119 = succeeded:guard _857
  br _2119, ^2119, ^2113

2119:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _862
  _2551 = bif:'=:=' _862, `a9`
  br _2551, ^2550, ^2113

2550:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _861
  _2549 = bif:'=:=' _861, `b9`
  br _2549, ^2548, ^2113

2548:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _860
  _2547 = bif:'=:=' _860, `"c9"`
  br _2547, ^2547, ^2113

2547:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _859
  _2546 = bif:'=:=' _859, `"19"`
  br _2546, ^2546, ^2113

2546:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _858
  _2545 = bif:'=:=' _858, `"d9"`
  br _2545, ^2545, ^2113

2545:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _857
  _2544 = bif:'=:=' _857, `"e9"`
  br _2544, ^2542, ^2113

2542:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _868 = get_map_element M2, `10.0`

  %% Aliased:
  %%    _868
  _2122 = succeeded:guard _868
  br _2122, ^2122, ^2121

2122:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _867 = get_map_element M2, `20.0`

  %% Aliased:
  %%    _867
  _2123 = succeeded:guard _867
  br _2123, ^2123, ^2121

2123:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _866 = get_map_element M2, `30.0`

  %% Aliased:
  %%    _866
  _2124 = succeeded:guard _866
  br _2124, ^2124, ^2121

2124:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _865 = get_map_element M2, `{["00"]}`

  %% Aliased:
  %%    _865
  _2125 = succeeded:guard _865
  br _2125, ^2125, ^2121

2125:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _864 = get_map_element M2, `"40"`

  %% Aliased:
  %%    _864
  _2126 = succeeded:guard _864
  br _2126, ^2126, ^2121

2126:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _863 = get_map_element M2, `<<"50">>`

  %% Aliased:
  %%    _863
  _2127 = succeeded:guard _863
  br _2127, ^2127, ^2121

2127:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _868
  _2541 = bif:'=:=' _868, `fa0`
  br _2541, ^2540, ^2121

2540:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _867
  _2539 = bif:'=:=' _867, `fb0`
  br _2539, ^2538, ^2121

2538:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _866
  _2537 = bif:'=:=' _866, `"fc0"`
  br _2537, ^2537, ^2121

2537:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _865
  _2536 = bif:'=:=' _865, `"10"`
  br _2536, ^2536, ^2121

2536:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _864
  _2535 = bif:'=:=' _864, `"d0"`
  br _2535, ^2535, ^2121

2535:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _863
  _2534 = bif:'=:=' _863, `"e0"`
  br _2534, ^2532, ^2121

2532:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _874 = get_map_element M2, `11.0`

  %% Aliased:
  %%    _874
  _2130 = succeeded:guard _874
  br _2130, ^2130, ^2129

2130:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _873 = get_map_element M2, `21.0`

  %% Aliased:
  %%    _873
  _2131 = succeeded:guard _873
  br _2131, ^2131, ^2129

2131:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _872 = get_map_element M2, `31.0`

  %% Aliased:
  %%    _872
  _2132 = succeeded:guard _872
  br _2132, ^2132, ^2129

2132:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _871 = get_map_element M2, `{["01"]}`

  %% Aliased:
  %%    _871
  _2133 = succeeded:guard _871
  br _2133, ^2133, ^2129

2133:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _870 = get_map_element M2, `"41"`

  %% Aliased:
  %%    _870
  _2134 = succeeded:guard _870
  br _2134, ^2134, ^2129

2134:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _869 = get_map_element M2, `<<"51">>`

  %% Aliased:
  %%    _869
  _2135 = succeeded:guard _869
  br _2135, ^2135, ^2129

2135:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _874
  _2531 = bif:'=:=' _874, `fa1`
  br _2531, ^2530, ^2129

2530:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _873
  _2529 = bif:'=:=' _873, `fb1`
  br _2529, ^2528, ^2129

2528:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _872
  _2527 = bif:'=:=' _872, `"fc1"`
  br _2527, ^2527, ^2129

2527:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _871
  _2526 = bif:'=:=' _871, `"11"`
  br _2526, ^2526, ^2129

2526:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _870
  _2525 = bif:'=:=' _870, `"d1"`
  br _2525, ^2525, ^2129

2525:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _869
  _2524 = bif:'=:=' _869, `"e1"`
  br _2524, ^2522, ^2129

2522:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _880 = get_map_element M2, `12.0`

  %% Aliased:
  %%    _880
  _2138 = succeeded:guard _880
  br _2138, ^2138, ^2137

2138:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _879 = get_map_element M2, `22.0`

  %% Aliased:
  %%    _879
  _2139 = succeeded:guard _879
  br _2139, ^2139, ^2137

2139:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _878 = get_map_element M2, `32.0`

  %% Aliased:
  %%    _878
  _2140 = succeeded:guard _878
  br _2140, ^2140, ^2137

2140:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _877 = get_map_element M2, `{["02"]}`

  %% Aliased:
  %%    _877
  _2141 = succeeded:guard _877
  br _2141, ^2141, ^2137

2141:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _876 = get_map_element M2, `"42"`

  %% Aliased:
  %%    _876
  _2142 = succeeded:guard _876
  br _2142, ^2142, ^2137

2142:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _875 = get_map_element M2, `<<"52">>`

  %% Aliased:
  %%    _875
  _2143 = succeeded:guard _875
  br _2143, ^2143, ^2137

2143:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _880
  _2521 = bif:'=:=' _880, `fa2`
  br _2521, ^2520, ^2137

2520:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _879
  _2519 = bif:'=:=' _879, `fb2`
  br _2519, ^2518, ^2137

2518:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _878
  _2517 = bif:'=:=' _878, `"fc2"`
  br _2517, ^2517, ^2137

2517:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _877
  _2516 = bif:'=:=' _877, `"12"`
  br _2516, ^2516, ^2137

2516:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _876
  _2515 = bif:'=:=' _876, `"d2"`
  br _2515, ^2515, ^2137

2515:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _875
  _2514 = bif:'=:=' _875, `"e2"`
  br _2514, ^2512, ^2137

2512:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _886 = get_map_element M2, `13.0`

  %% Aliased:
  %%    _886
  _2146 = succeeded:guard _886
  br _2146, ^2146, ^2145

2146:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _885 = get_map_element M2, `23.0`

  %% Aliased:
  %%    _885
  _2147 = succeeded:guard _885
  br _2147, ^2147, ^2145

2147:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _884 = get_map_element M2, `33.0`

  %% Aliased:
  %%    _884
  _2148 = succeeded:guard _884
  br _2148, ^2148, ^2145

2148:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _883 = get_map_element M2, `{["03"]}`

  %% Aliased:
  %%    _883
  _2149 = succeeded:guard _883
  br _2149, ^2149, ^2145

2149:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _882 = get_map_element M2, `"43"`

  %% Aliased:
  %%    _882
  _2150 = succeeded:guard _882
  br _2150, ^2150, ^2145

2150:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _881 = get_map_element M2, `<<"53">>`

  %% Aliased:
  %%    _881
  _2151 = succeeded:guard _881
  br _2151, ^2151, ^2145

2151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _886
  _2511 = bif:'=:=' _886, `fa3`
  br _2511, ^2510, ^2145

2510:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _885
  _2509 = bif:'=:=' _885, `fb3`
  br _2509, ^2508, ^2145

2508:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _884
  _2507 = bif:'=:=' _884, `"fc3"`
  br _2507, ^2507, ^2145

2507:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _883
  _2506 = bif:'=:=' _883, `"13"`
  br _2506, ^2506, ^2145

2506:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _882
  _2505 = bif:'=:=' _882, `"d3"`
  br _2505, ^2505, ^2145

2505:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _881
  _2504 = bif:'=:=' _881, `"e3"`
  br _2504, ^2502, ^2145

2502:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _892 = get_map_element M2, `14.0`

  %% Aliased:
  %%    _892
  _2154 = succeeded:guard _892
  br _2154, ^2154, ^2153

2154:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _891 = get_map_element M2, `24.0`

  %% Aliased:
  %%    _891
  _2155 = succeeded:guard _891
  br _2155, ^2155, ^2153

2155:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _890 = get_map_element M2, `34.0`

  %% Aliased:
  %%    _890
  _2156 = succeeded:guard _890
  br _2156, ^2156, ^2153

2156:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _889 = get_map_element M2, `{["04"]}`

  %% Aliased:
  %%    _889
  _2157 = succeeded:guard _889
  br _2157, ^2157, ^2153

2157:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _888 = get_map_element M2, `"44"`

  %% Aliased:
  %%    _888
  _2158 = succeeded:guard _888
  br _2158, ^2158, ^2153

2158:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _887 = get_map_element M2, `<<"54">>`

  %% Aliased:
  %%    _887
  _2159 = succeeded:guard _887
  br _2159, ^2159, ^2153

2159:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _892
  _2501 = bif:'=:=' _892, `fa4`
  br _2501, ^2500, ^2153

2500:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _891
  _2499 = bif:'=:=' _891, `fb4`
  br _2499, ^2498, ^2153

2498:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _890
  _2497 = bif:'=:=' _890, `"fc4"`
  br _2497, ^2497, ^2153

2497:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _889
  _2496 = bif:'=:=' _889, `"14"`
  br _2496, ^2496, ^2153

2496:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _888
  _2495 = bif:'=:=' _888, `"d4"`
  br _2495, ^2495, ^2153

2495:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _887
  _2494 = bif:'=:=' _887, `"e4"`
  br _2494, ^2492, ^2153

2492:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _898 = get_map_element M3, `15`

  %% Aliased:
  %%    _898
  _2162 = succeeded:guard _898
  br _2162, ^2162, ^2161

2162:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _897 = get_map_element M3, `25`

  %% Aliased:
  %%    _897
  _2163 = succeeded:guard _897
  br _2163, ^2163, ^2161

2163:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _896 = get_map_element M3, `35`

  %% Aliased:
  %%    _896
  _2164 = succeeded:guard _896
  br _2164, ^2164, ^2161

2164:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _895 = get_map_element M3, `{["05"]}`

  %% Aliased:
  %%    _895
  _2165 = succeeded:guard _895
  br _2165, ^2165, ^2161

2165:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _894 = get_map_element M3, `"45"`

  %% Aliased:
  %%    _894
  _2166 = succeeded:guard _894
  br _2166, ^2166, ^2161

2166:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _893 = get_map_element M3, `<<"55">>`

  %% Aliased:
  %%    _893
  _2167 = succeeded:guard _893
  br _2167, ^2167, ^2161

2167:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _898
  _2491 = bif:'=:=' _898, `a5`
  br _2491, ^2490, ^2161

2490:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _897
  _2489 = bif:'=:=' _897, `b5`
  br _2489, ^2488, ^2161

2488:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _896
  _2487 = bif:'=:=' _896, `"c5"`
  br _2487, ^2487, ^2161

2487:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _895
  _2486 = bif:'=:=' _895, `"15"`
  br _2486, ^2486, ^2161

2486:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _894
  _2485 = bif:'=:=' _894, `"d5"`
  br _2485, ^2485, ^2161

2485:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _893
  _2484 = bif:'=:=' _893, `"e5"`
  br _2484, ^2482, ^2161

2482:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _904 = get_map_element M3, `16`

  %% Aliased:
  %%    _904
  _2170 = succeeded:guard _904
  br _2170, ^2170, ^2169

2170:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _903 = get_map_element M3, `26`

  %% Aliased:
  %%    _903
  _2171 = succeeded:guard _903
  br _2171, ^2171, ^2169

2171:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _902 = get_map_element M3, `36`

  %% Aliased:
  %%    _902
  _2172 = succeeded:guard _902
  br _2172, ^2172, ^2169

2172:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _901 = get_map_element M3, `{["06"]}`

  %% Aliased:
  %%    _901
  _2173 = succeeded:guard _901
  br _2173, ^2173, ^2169

2173:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _900 = get_map_element M3, `"46"`

  %% Aliased:
  %%    _900
  _2174 = succeeded:guard _900
  br _2174, ^2174, ^2169

2174:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _899 = get_map_element M3, `<<"56">>`

  %% Aliased:
  %%    _899
  _2175 = succeeded:guard _899
  br _2175, ^2175, ^2169

2175:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _904
  _2481 = bif:'=:=' _904, `a6`
  br _2481, ^2480, ^2169

2480:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _903
  _2479 = bif:'=:=' _903, `b6`
  br _2479, ^2478, ^2169

2478:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _902
  _2477 = bif:'=:=' _902, `"c6"`
  br _2477, ^2477, ^2169

2477:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _901
  _2476 = bif:'=:=' _901, `"16"`
  br _2476, ^2476, ^2169

2476:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _900
  _2475 = bif:'=:=' _900, `"d6"`
  br _2475, ^2475, ^2169

2475:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _899
  _2474 = bif:'=:=' _899, `"e6"`
  br _2474, ^2472, ^2169

2472:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _910 = get_map_element M3, `17`

  %% Aliased:
  %%    _910
  _2178 = succeeded:guard _910
  br _2178, ^2178, ^2177

2178:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _909 = get_map_element M3, `27`

  %% Aliased:
  %%    _909
  _2179 = succeeded:guard _909
  br _2179, ^2179, ^2177

2179:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _908 = get_map_element M3, `37`

  %% Aliased:
  %%    _908
  _2180 = succeeded:guard _908
  br _2180, ^2180, ^2177

2180:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _907 = get_map_element M3, `{["07"]}`

  %% Aliased:
  %%    _907
  _2181 = succeeded:guard _907
  br _2181, ^2181, ^2177

2181:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _906 = get_map_element M3, `"47"`

  %% Aliased:
  %%    _906
  _2182 = succeeded:guard _906
  br _2182, ^2182, ^2177

2182:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _905 = get_map_element M3, `<<"57">>`

  %% Aliased:
  %%    _905
  _2183 = succeeded:guard _905
  br _2183, ^2183, ^2177

2183:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _910
  _2471 = bif:'=:=' _910, `a7`
  br _2471, ^2470, ^2177

2470:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _909
  _2469 = bif:'=:=' _909, `b7`
  br _2469, ^2468, ^2177

2468:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _908
  _2467 = bif:'=:=' _908, `"c7"`
  br _2467, ^2467, ^2177

2467:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _907
  _2466 = bif:'=:=' _907, `"17"`
  br _2466, ^2466, ^2177

2466:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _906
  _2465 = bif:'=:=' _906, `"d7"`
  br _2465, ^2465, ^2177

2465:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _905
  _2464 = bif:'=:=' _905, `"e7"`
  br _2464, ^2462, ^2177

2462:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _916 = get_map_element M3, `18`

  %% Aliased:
  %%    _916
  _2186 = succeeded:guard _916
  br _2186, ^2186, ^2185

2186:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _915 = get_map_element M3, `28`

  %% Aliased:
  %%    _915
  _2187 = succeeded:guard _915
  br _2187, ^2187, ^2185

2187:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _914 = get_map_element M3, `38`

  %% Aliased:
  %%    _914
  _2188 = succeeded:guard _914
  br _2188, ^2188, ^2185

2188:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _913 = get_map_element M3, `{["08"]}`

  %% Aliased:
  %%    _913
  _2189 = succeeded:guard _913
  br _2189, ^2189, ^2185

2189:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _912 = get_map_element M3, `"48"`

  %% Aliased:
  %%    _912
  _2190 = succeeded:guard _912
  br _2190, ^2190, ^2185

2190:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _911 = get_map_element M3, `<<"58">>`

  %% Aliased:
  %%    _911
  _2191 = succeeded:guard _911
  br _2191, ^2191, ^2185

2191:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _916
  _2461 = bif:'=:=' _916, `a8`
  br _2461, ^2460, ^2185

2460:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _915
  _2459 = bif:'=:=' _915, `b8`
  br _2459, ^2458, ^2185

2458:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _914
  _2457 = bif:'=:=' _914, `"c8"`
  br _2457, ^2457, ^2185

2457:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _913
  _2456 = bif:'=:=' _913, `"18"`
  br _2456, ^2456, ^2185

2456:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _912
  _2455 = bif:'=:=' _912, `"d8"`
  br _2455, ^2455, ^2185

2455:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _911
  _2454 = bif:'=:=' _911, `"e8"`
  br _2454, ^2452, ^2185

2452:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _922 = get_map_element M3, `19`

  %% Aliased:
  %%    _922
  _2194 = succeeded:guard _922
  br _2194, ^2194, ^2193

2194:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _921 = get_map_element M3, `29`

  %% Aliased:
  %%    _921
  _2195 = succeeded:guard _921
  br _2195, ^2195, ^2193

2195:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _920 = get_map_element M3, `39`

  %% Aliased:
  %%    _920
  _2196 = succeeded:guard _920
  br _2196, ^2196, ^2193

2196:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _919 = get_map_element M3, `{["09"]}`

  %% Aliased:
  %%    _919
  _2197 = succeeded:guard _919
  br _2197, ^2197, ^2193

2197:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _918 = get_map_element M3, `"49"`

  %% Aliased:
  %%    _918
  _2198 = succeeded:guard _918
  br _2198, ^2198, ^2193

2198:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _917 = get_map_element M3, `<<"59">>`

  %% Aliased:
  %%    _917
  _2199 = succeeded:guard _917
  br _2199, ^2199, ^2193

2199:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _922
  _2451 = bif:'=:=' _922, `a9`
  br _2451, ^2450, ^2193

2450:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _921
  _2449 = bif:'=:=' _921, `b9`
  br _2449, ^2448, ^2193

2448:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _920
  _2447 = bif:'=:=' _920, `"c9"`
  br _2447, ^2447, ^2193

2447:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _919
  _2446 = bif:'=:=' _919, `"19"`
  br _2446, ^2446, ^2193

2446:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _918
  _2445 = bif:'=:=' _918, `"d9"`
  br _2445, ^2445, ^2193

2445:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _917
  _2444 = bif:'=:=' _917, `"e9"`
  br _2444, ^2442, ^2193

2442:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _928 = get_map_element M3, `10.0`

  %% Aliased:
  %%    _928
  _2202 = succeeded:guard _928
  br _2202, ^2202, ^2201

2202:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _927 = get_map_element M3, `20.0`

  %% Aliased:
  %%    _927
  _2203 = succeeded:guard _927
  br _2203, ^2203, ^2201

2203:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _926 = get_map_element M3, `30.0`

  %% Aliased:
  %%    _926
  _2204 = succeeded:guard _926
  br _2204, ^2204, ^2201

2204:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _925 = get_map_element M3, `{["00"]}`

  %% Aliased:
  %%    _925
  _2205 = succeeded:guard _925
  br _2205, ^2205, ^2201

2205:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _924 = get_map_element M3, `"40"`

  %% Aliased:
  %%    _924
  _2206 = succeeded:guard _924
  br _2206, ^2206, ^2201

2206:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _923 = get_map_element M3, `<<"50">>`

  %% Aliased:
  %%    _923
  _2207 = succeeded:guard _923
  br _2207, ^2207, ^2201

2207:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _928
  _2441 = bif:'=:=' _928, `fa0`
  br _2441, ^2440, ^2201

2440:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _927
  _2439 = bif:'=:=' _927, `fb0`
  br _2439, ^2438, ^2201

2438:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _926
  _2437 = bif:'=:=' _926, `"fc0"`
  br _2437, ^2437, ^2201

2437:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _925
  _2436 = bif:'=:=' _925, `"10"`
  br _2436, ^2436, ^2201

2436:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _924
  _2435 = bif:'=:=' _924, `"d0"`
  br _2435, ^2435, ^2201

2435:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _923
  _2434 = bif:'=:=' _923, `"e0"`
  br _2434, ^2432, ^2201

2432:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _934 = get_map_element M3, `11.0`

  %% Aliased:
  %%    _934
  _2210 = succeeded:guard _934
  br _2210, ^2210, ^2209

2210:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _933 = get_map_element M3, `21.0`

  %% Aliased:
  %%    _933
  _2211 = succeeded:guard _933
  br _2211, ^2211, ^2209

2211:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _932 = get_map_element M3, `31.0`

  %% Aliased:
  %%    _932
  _2212 = succeeded:guard _932
  br _2212, ^2212, ^2209

2212:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _931 = get_map_element M3, `{["01"]}`

  %% Aliased:
  %%    _931
  _2213 = succeeded:guard _931
  br _2213, ^2213, ^2209

2213:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _930 = get_map_element M3, `"41"`

  %% Aliased:
  %%    _930
  _2214 = succeeded:guard _930
  br _2214, ^2214, ^2209

2214:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _929 = get_map_element M3, `<<"51">>`

  %% Aliased:
  %%    _929
  _2215 = succeeded:guard _929
  br _2215, ^2215, ^2209

2215:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _934
  _2431 = bif:'=:=' _934, `fa1`
  br _2431, ^2430, ^2209

2430:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _933
  _2429 = bif:'=:=' _933, `fb1`
  br _2429, ^2428, ^2209

2428:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _932
  _2427 = bif:'=:=' _932, `"fc1"`
  br _2427, ^2427, ^2209

2427:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _931
  _2426 = bif:'=:=' _931, `"11"`
  br _2426, ^2426, ^2209

2426:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _930
  _2425 = bif:'=:=' _930, `"d1"`
  br _2425, ^2425, ^2209

2425:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _929
  _2424 = bif:'=:=' _929, `"e1"`
  br _2424, ^2422, ^2209

2422:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _940 = get_map_element M3, `12.0`

  %% Aliased:
  %%    _940
  _2218 = succeeded:guard _940
  br _2218, ^2218, ^2217

2218:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _939 = get_map_element M3, `22.0`

  %% Aliased:
  %%    _939
  _2219 = succeeded:guard _939
  br _2219, ^2219, ^2217

2219:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _938 = get_map_element M3, `32.0`

  %% Aliased:
  %%    _938
  _2220 = succeeded:guard _938
  br _2220, ^2220, ^2217

2220:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _937 = get_map_element M3, `{["02"]}`

  %% Aliased:
  %%    _937
  _2221 = succeeded:guard _937
  br _2221, ^2221, ^2217

2221:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _936 = get_map_element M3, `"42"`

  %% Aliased:
  %%    _936
  _2222 = succeeded:guard _936
  br _2222, ^2222, ^2217

2222:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _935 = get_map_element M3, `<<"52">>`

  %% Aliased:
  %%    _935
  _2223 = succeeded:guard _935
  br _2223, ^2223, ^2217

2223:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _940
  _2421 = bif:'=:=' _940, `fa2`
  br _2421, ^2420, ^2217

2420:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _939
  _2419 = bif:'=:=' _939, `fb2`
  br _2419, ^2418, ^2217

2418:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _938
  _2417 = bif:'=:=' _938, `"fc2"`
  br _2417, ^2417, ^2217

2417:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _937
  _2416 = bif:'=:=' _937, `"12"`
  br _2416, ^2416, ^2217

2416:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _936
  _2415 = bif:'=:=' _936, `"d2"`
  br _2415, ^2415, ^2217

2415:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _935
  _2414 = bif:'=:=' _935, `"e2"`
  br _2414, ^2412, ^2217

2412:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _946 = get_map_element M3, `13.0`

  %% Aliased:
  %%    _946
  _2226 = succeeded:guard _946
  br _2226, ^2226, ^2225

2226:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _945 = get_map_element M3, `23.0`

  %% Aliased:
  %%    _945
  _2227 = succeeded:guard _945
  br _2227, ^2227, ^2225

2227:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _944 = get_map_element M3, `33.0`

  %% Aliased:
  %%    _944
  _2228 = succeeded:guard _944
  br _2228, ^2228, ^2225

2228:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _943 = get_map_element M3, `{["03"]}`

  %% Aliased:
  %%    _943
  _2229 = succeeded:guard _943
  br _2229, ^2229, ^2225

2229:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _942 = get_map_element M3, `"43"`

  %% Aliased:
  %%    _942
  _2230 = succeeded:guard _942
  br _2230, ^2230, ^2225

2230:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _941 = get_map_element M3, `<<"53">>`

  %% Aliased:
  %%    _941
  _2231 = succeeded:guard _941
  br _2231, ^2231, ^2225

2231:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _946
  _2411 = bif:'=:=' _946, `fa3`
  br _2411, ^2410, ^2225

2410:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _945
  _2409 = bif:'=:=' _945, `fb3`
  br _2409, ^2408, ^2225

2408:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _944
  _2407 = bif:'=:=' _944, `"fc3"`
  br _2407, ^2407, ^2225

2407:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _943
  _2406 = bif:'=:=' _943, `"13"`
  br _2406, ^2406, ^2225

2406:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _942
  _2405 = bif:'=:=' _942, `"d3"`
  br _2405, ^2405, ^2225

2405:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _941
  _2404 = bif:'=:=' _941, `"e3"`
  br _2404, ^2402, ^2225

2402:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _952 = get_map_element M3, `14.0`

  %% Aliased:
  %%    _952
  _2234 = succeeded:guard _952
  br _2234, ^2234, ^2233

2234:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _951 = get_map_element M3, `24.0`

  %% Aliased:
  %%    _951
  _2235 = succeeded:guard _951
  br _2235, ^2235, ^2233

2235:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _950 = get_map_element M3, `34.0`

  %% Aliased:
  %%    _950
  _2236 = succeeded:guard _950
  br _2236, ^2236, ^2233

2236:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _949 = get_map_element M3, `{["04"]}`

  %% Aliased:
  %%    _949
  _2237 = succeeded:guard _949
  br _2237, ^2237, ^2233

2237:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _948 = get_map_element M3, `"44"`

  %% Aliased:
  %%    _948
  _2238 = succeeded:guard _948
  br _2238, ^2238, ^2233

2238:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _947 = get_map_element M3, `<<"54">>`

  %% Aliased:
  %%    _947
  _2239 = succeeded:guard _947
  br _2239, ^2239, ^2233

2239:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _952
  _2401 = bif:'=:=' _952, `fa4`
  br _2401, ^2400, ^2233

2400:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _951
  _2399 = bif:'=:=' _951, `fb4`
  br _2399, ^2398, ^2233

2398:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _950
  _2397 = bif:'=:=' _950, `"fc4"`
  br _2397, ^2397, ^2233

2397:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _949
  _2396 = bif:'=:=' _949, `"14"`
  br _2396, ^2396, ^2233

2396:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _948
  _2395 = bif:'=:=' _948, `"d4"`
  br _2395, ^2395, ^2233

2395:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _947
  _2394 = bif:'=:=' _947, `"e4"`
  br _2394, ^2392, ^2233

2392:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _958 = get_map_element M3, `15.0`

  %% Aliased:
  %%    _958
  _2242 = succeeded:guard _958
  br _2242, ^2242, ^2241

2242:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _957 = get_map_element M3, `25.0`

  %% Aliased:
  %%    _957
  _2243 = succeeded:guard _957
  br _2243, ^2243, ^2241

2243:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _956 = get_map_element M3, `35.0`

  %% Aliased:
  %%    _956
  _2244 = succeeded:guard _956
  br _2244, ^2247, ^2241

2247:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _958
  _2391 = bif:'=:=' _958, `fa5`
  br _2391, ^2390, ^2241

2390:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _957
  _2389 = bif:'=:=' _957, `fb5`
  br _2389, ^2388, ^2241

2388:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _956
  _2387 = bif:'=:=' _956, `"fc5"`
  br _2387, ^2382, ^2241

2382:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _964 = get_map_element M3, `16.0`

  %% Aliased:
  %%    _964
  _2250 = succeeded:guard _964
  br _2250, ^2250, ^2249

2250:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _963 = get_map_element M3, `26.0`

  %% Aliased:
  %%    _963
  _2251 = succeeded:guard _963
  br _2251, ^2251, ^2249

2251:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _962 = get_map_element M3, `36.0`

  %% Aliased:
  %%    _962
  _2252 = succeeded:guard _962
  br _2252, ^2255, ^2249

2255:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _964
  _2381 = bif:'=:=' _964, `fa6`
  br _2381, ^2380, ^2249

2380:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _963
  _2379 = bif:'=:=' _963, `fb6`
  br _2379, ^2378, ^2249

2378:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _962
  _2377 = bif:'=:=' _962, `"fc6"`
  br _2377, ^2372, ^2249

2372:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _970 = get_map_element M3, `17.0`

  %% Aliased:
  %%    _970
  _2258 = succeeded:guard _970
  br _2258, ^2258, ^2257

2258:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _969 = get_map_element M3, `27.0`

  %% Aliased:
  %%    _969
  _2259 = succeeded:guard _969
  br _2259, ^2259, ^2257

2259:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _968 = get_map_element M3, `37.0`

  %% Aliased:
  %%    _968
  _2260 = succeeded:guard _968
  br _2260, ^2263, ^2257

2263:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _970
  _2371 = bif:'=:=' _970, `fa7`
  br _2371, ^2370, ^2257

2370:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _969
  _2369 = bif:'=:=' _969, `fb7`
  br _2369, ^2368, ^2257

2368:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _968
  _2367 = bif:'=:=' _968, `"fc7"`
  br _2367, ^2362, ^2257

2362:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _976 = get_map_element M3, `18.0`

  %% Aliased:
  %%    _976
  _2266 = succeeded:guard _976
  br _2266, ^2266, ^2265

2266:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _975 = get_map_element M3, `28.0`

  %% Aliased:
  %%    _975
  _2267 = succeeded:guard _975
  br _2267, ^2267, ^2265

2267:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _974 = get_map_element M3, `38.0`

  %% Aliased:
  %%    _974
  _2268 = succeeded:guard _974
  br _2268, ^2271, ^2265

2271:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _976
  _2361 = bif:'=:=' _976, `fa8`
  br _2361, ^2360, ^2265

2360:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _975
  _2359 = bif:'=:=' _975, `fb8`
  br _2359, ^2358, ^2265

2358:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _974
  _2357 = bif:'=:=' _974, `"fc8"`
  br _2357, ^2352, ^2265

2352:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _982 = get_map_element M3, `19.0`

  %% Aliased:
  %%    _982
  _2274 = succeeded:guard _982
  br _2274, ^2274, ^2273

2274:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _981 = get_map_element M3, `29.0`

  %% Aliased:
  %%    _981
  _2275 = succeeded:guard _981
  br _2275, ^2275, ^2273

2275:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _980 = get_map_element M3, `39.0`

  %% Aliased:
  %%    _980
  _2276 = succeeded:guard _980
  br _2276, ^2279, ^2273

2279:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _982
  _2351 = bif:'=:=' _982, `fa9`
  br _2351, ^2350, ^2273

2350:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _981
  _2349 = bif:'=:=' _981, `fb9`
  br _2349, ^2348, ^2273

2348:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _980
  _2347 = bif:'=:=' _980, `"fc9"`
  br _2347, ^2342, ^2273

2342:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _987 = get_map_element M3, `67108863`

  %% Aliased:
  %%    _987
  _2282 = succeeded:guard _987
  br _2282, ^2282, ^2281

2282:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _986 = get_map_element M3, `36893488147419103232`

  %% Aliased:
  %%    _986
  _2283 = succeeded:guard _986
  br _2283, ^2286, ^2281

2286:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _987
  _2341 = bif:'=:=' _987, `big8`
  br _2341, ^2340, ^2281

2340:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _986
  _2339 = bif:'=:=' _986, `big1`
  br _2339, ^2333, ^2281

2333:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _992 = get_map_element M3, `8589934592`

  %% Aliased:
  %%    _992
  _2289 = succeeded:guard _992
  br _2289, ^2289, ^2288

2289:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _991 = get_map_element M3, `147573952589676412928`

  %% Aliased:
  %%    _991
  _2290 = succeeded:guard _991
  br _2290, ^2293, ^2288

2293:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _992
  _2332 = bif:'=:=' _992, `big6`
  br _2332, ^2331, ^2288

2331:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _991
  _2330 = bif:'=:=' _991, `big3`
  br _2330, ^2324, ^2288

2324:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _997 = get_map_element M3, `4294967296`

  %% Aliased:
  %%    _997
  _2296 = succeeded:guard _997
  br _2296, ^2296, ^2295

2296:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _996 = get_map_element M3, `18446744073709551616`

  %% Aliased:
  %%    _996
  _2297 = succeeded:guard _996
  br _2297, ^2300, ^2295

2300:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _997
  _2323 = bif:'=:=' _997, `big5`
  br _2323, ^2322, ^2295

2322:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _996
  _2321 = bif:'=:=' _996, `big4`
  br _2321, ^2315, ^2295

2315:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _1002 = get_map_element M3, `4294967295`

  %% Aliased:
  %%    _1002
  _2303 = succeeded:guard _1002
  br _2303, ^2303, ^2302

2303:
  %% Argument types:
  %%    M3 => map()
  %% Aliased:
  %%    M3
  _1001 = get_map_element M3, `73786976294838206464`

  %% Aliased:
  %%    _1001
  _2304 = succeeded:guard _1001
  br _2304, ^2307, ^2302

2307:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1002
  _2314 = bif:'=:=' _1002, `big7`
  br _2314, ^2313, ^2302

2313:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1001
  _2312 = bif:'=:=' _1001, `big2`
  br _2312, ^2308, ^2302

2308:
  %% Result type:
  %%    'ok'
  ret `ok`

2302:
  %% map_SUITE.erl:683
  %% Aliased:
  %%    M3
  _1003 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1003
  _2316 = succeeded:body _1003
  br ^1

2295:
  %% map_SUITE.erl:682
  %% Aliased:
  %%    M3
  _1004 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1004
  _2325 = succeeded:body _1004
  br ^1

2288:
  %% map_SUITE.erl:681
  %% Aliased:
  %%    M3
  _1005 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1005
  _2334 = succeeded:body _1005
  br ^1

2281:
  %% map_SUITE.erl:680
  %% Aliased:
  %%    M3
  _1006 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1006
  _2343 = succeeded:body _1006
  br ^1

2273:
  %% map_SUITE.erl:678
  %% Aliased:
  %%    M3
  _1007 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1007
  _2353 = succeeded:body _1007
  br ^1

2265:
  %% map_SUITE.erl:677
  %% Aliased:
  %%    M3
  _1008 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1008
  _2363 = succeeded:body _1008
  br ^1

2257:
  %% map_SUITE.erl:676
  %% Aliased:
  %%    M3
  _1009 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1009
  _2373 = succeeded:body _1009
  br ^1

2249:
  %% map_SUITE.erl:675
  %% Aliased:
  %%    M3
  _1010 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1010
  _2383 = succeeded:body _1010
  br ^1

2241:
  %% map_SUITE.erl:674
  %% Aliased:
  %%    M3
  _1011 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1011
  _2393 = succeeded:body _1011
  br ^1

2233:
  %% map_SUITE.erl:672
  %% Aliased:
  %%    M3
  _1012 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1012
  _2403 = succeeded:body _1012
  br ^1

2225:
  %% map_SUITE.erl:671
  %% Aliased:
  %%    M3
  _1013 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1013
  _2413 = succeeded:body _1013
  br ^1

2217:
  %% map_SUITE.erl:670
  %% Aliased:
  %%    M3
  _1014 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1014
  _2423 = succeeded:body _1014
  br ^1

2209:
  %% map_SUITE.erl:669
  %% Aliased:
  %%    M3
  _1015 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1015
  _2433 = succeeded:body _1015
  br ^1

2201:
  %% map_SUITE.erl:668
  %% Aliased:
  %%    M3
  _1016 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1016
  _2443 = succeeded:body _1016
  br ^1

2193:
  %% map_SUITE.erl:666
  %% Aliased:
  %%    M3
  _1017 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1017
  _2453 = succeeded:body _1017
  br ^1

2185:
  %% map_SUITE.erl:665
  %% Aliased:
  %%    M3
  _1018 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1018
  _2463 = succeeded:body _1018
  br ^1

2177:
  %% map_SUITE.erl:664
  %% Aliased:
  %%    M3
  _1019 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1019
  _2473 = succeeded:body _1019
  br ^1

2169:
  %% map_SUITE.erl:663
  %% Aliased:
  %%    M3
  _1020 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1020
  _2483 = succeeded:body _1020
  br ^1

2161:
  %% map_SUITE.erl:662
  %% Aliased:
  %%    M3
  _1021 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1021
  _2493 = succeeded:body _1021
  br ^1

2153:
  %% map_SUITE.erl:660
  %% Aliased:
  %%    M2
  _1022 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1022
  _2503 = succeeded:body _1022
  br ^1

2145:
  %% map_SUITE.erl:659
  %% Aliased:
  %%    M2
  _1023 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1023
  _2513 = succeeded:body _1023
  br ^1

2137:
  %% map_SUITE.erl:658
  %% Aliased:
  %%    M2
  _1024 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1024
  _2523 = succeeded:body _1024
  br ^1

2129:
  %% map_SUITE.erl:657
  %% Aliased:
  %%    M2
  _1025 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1025
  _2533 = succeeded:body _1025
  br ^1

2121:
  %% map_SUITE.erl:656
  %% Aliased:
  %%    M2
  _1026 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1026
  _2543 = succeeded:body _1026
  br ^1

2113:
  %% map_SUITE.erl:654
  %% Aliased:
  %%    M2
  _1027 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1027
  _2553 = succeeded:body _1027
  br ^1

2105:
  %% map_SUITE.erl:653
  %% Aliased:
  %%    M2
  _1028 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1028
  _2563 = succeeded:body _1028
  br ^1

2097:
  %% map_SUITE.erl:652
  %% Aliased:
  %%    M2
  _1029 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1029
  _2573 = succeeded:body _1029
  br ^1

2089:
  %% map_SUITE.erl:651
  %% Aliased:
  %%    M2
  _1030 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1030
  _2583 = succeeded:body _1030
  br ^1

2081:
  %% map_SUITE.erl:650
  %% Aliased:
  %%    M2
  _1031 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1031
  _2593 = succeeded:body _1031
  br ^1

2073:
  %% map_SUITE.erl:648
  %% Aliased:
  %%    M1
  _1032 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1032
  _2603 = succeeded:body _1032
  br ^1

2065:
  %% map_SUITE.erl:647
  %% Aliased:
  %%    M1
  _1033 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1033
  _2613 = succeeded:body _1033
  br ^1

2057:
  %% map_SUITE.erl:646
  %% Aliased:
  %%    M1
  _1034 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1034
  _2623 = succeeded:body _1034
  br ^1

2049:
  %% map_SUITE.erl:645
  %% Aliased:
  %%    M1
  _1035 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1035
  _2633 = succeeded:body _1035
  br ^1

2041:
  %% map_SUITE.erl:644
  %% Aliased:
  %%    M1
  _1036 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1036
  _2643 = succeeded:body _1036
  br ^1

2033:
  %% map_SUITE.erl:642
  %% Aliased:
  %%    M1
  _1037 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1037
  _2653 = succeeded:body _1037
  br ^1

2025:
  %% map_SUITE.erl:641
  %% Aliased:
  %%    M1
  _1038 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1038
  _2663 = succeeded:body _1038
  br ^1

2017:
  %% map_SUITE.erl:640
  %% Aliased:
  %%    M1
  _1039 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1039
  _2673 = succeeded:body _1039
  br ^1

2009:
  %% map_SUITE.erl:639
  %% Aliased:
  %%    M1
  _1040 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1040
  _2683 = succeeded:body _1040
  br ^1

2001:
  %% map_SUITE.erl:638
  %% Aliased:
  %%    M1
  _1041 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1041
  _2693 = succeeded:body _1041
  br ^1

1993:
  %% map_SUITE.erl:636
  %% Aliased:
  %%    M0
  _1042 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1042
  _2703 = succeeded:body _1042
  br ^1

1985:
  %% map_SUITE.erl:635
  %% Aliased:
  %%    M0
  _1043 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1043
  _2713 = succeeded:body _1043
  br ^1

1977:
  %% map_SUITE.erl:634
  %% Aliased:
  %%    M0
  _1044 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1044
  _2723 = succeeded:body _1044
  br ^1

1969:
  %% map_SUITE.erl:633
  %% Aliased:
  %%    M0
  _1045 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1045
  _2733 = succeeded:body _1045
  br ^1

1961:
  %% map_SUITE.erl:632
  %% Aliased:
  %%    M0
  _1046 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1046
  _2743 = succeeded:body _1046
  br ^1

1956:
  %% map_SUITE.erl:627
  %% Unique:
  %%    _741
  _1048 = match_fail `badmatch`, _741

  %% Unique:
  %%    _1048
  _2749 = succeeded:body _1048
  br ^1

1951:
  %% map_SUITE.erl:603
  %% Aliased:
  %%    M5
  _1049 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1049
  _2753 = succeeded:body _1049
  br ^1

1946:
  %% map_SUITE.erl:599
  %% Aliased:
  %%    M5
  _1050 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1050
  _2758 = succeeded:body _1050
  br ^1

1938:
  %% map_SUITE.erl:597
  %% Aliased:
  %%    M5
  _1051 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1051
  _2768 = succeeded:body _1051
  br ^1

1930:
  %% map_SUITE.erl:596
  %% Aliased:
  %%    M5
  _1052 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1052
  _2778 = succeeded:body _1052
  br ^1

1922:
  %% map_SUITE.erl:595
  %% Aliased:
  %%    M5
  _1053 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1053
  _2788 = succeeded:body _1053
  br ^1

1914:
  %% map_SUITE.erl:594
  %% Aliased:
  %%    M5
  _1054 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1054
  _2798 = succeeded:body _1054
  br ^1

1906:
  %% map_SUITE.erl:593
  %% Aliased:
  %%    M5
  _1055 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1055
  _2808 = succeeded:body _1055
  br ^1

1898:
  %% map_SUITE.erl:591
  %% Aliased:
  %%    M5
  _1056 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1056
  _2818 = succeeded:body _1056
  br ^1

1890:
  %% map_SUITE.erl:590
  %% Aliased:
  %%    M5
  _1057 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1057
  _2828 = succeeded:body _1057
  br ^1

1882:
  %% map_SUITE.erl:589
  %% Aliased:
  %%    M5
  _1058 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1058
  _2838 = succeeded:body _1058
  br ^1

1874:
  %% map_SUITE.erl:588
  %% Aliased:
  %%    M5
  _1059 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1059
  _2848 = succeeded:body _1059
  br ^1

1866:
  %% map_SUITE.erl:587
  %% Aliased:
  %%    M5
  _1060 = match_fail `badmatch`, M5

  %% Unique:
  %%    _1060
  _2858 = succeeded:body _1060
  br ^1

1808:
  %% map_SUITE.erl:530
  %% Unique:
  %%    _674
  _1062 = match_fail `badmatch`, _674

  %% Unique:
  %%    _1062
  _2864 = succeeded:body _1062
  br ^1

1781:
  %% map_SUITE.erl:483
  %% Aliased:
  %%    M4
  _1069 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1069
  _2887 = succeeded:body _1069
  br ^1

1776:
  %% map_SUITE.erl:479
  %% Aliased:
  %%    M4
  _1070 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1070
  _2892 = succeeded:body _1070
  br ^1

1768:
  %% map_SUITE.erl:477
  %% Aliased:
  %%    M4
  _1071 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1071
  _2902 = succeeded:body _1071
  br ^1

1760:
  %% map_SUITE.erl:476
  %% Aliased:
  %%    M4
  _1072 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1072
  _2912 = succeeded:body _1072
  br ^1

1752:
  %% map_SUITE.erl:475
  %% Aliased:
  %%    M4
  _1073 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1073
  _2922 = succeeded:body _1073
  br ^1

1744:
  %% map_SUITE.erl:474
  %% Aliased:
  %%    M4
  _1074 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1074
  _2932 = succeeded:body _1074
  br ^1

1736:
  %% map_SUITE.erl:473
  %% Aliased:
  %%    M4
  _1075 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1075
  _2942 = succeeded:body _1075
  br ^1

1728:
  %% map_SUITE.erl:471
  %% Aliased:
  %%    M4
  _1076 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1076
  _2952 = succeeded:body _1076
  br ^1

1720:
  %% map_SUITE.erl:470
  %% Aliased:
  %%    M4
  _1077 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1077
  _2962 = succeeded:body _1077
  br ^1

1712:
  %% map_SUITE.erl:469
  %% Aliased:
  %%    M4
  _1078 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1078
  _2972 = succeeded:body _1078
  br ^1

1704:
  %% map_SUITE.erl:468
  %% Aliased:
  %%    M4
  _1079 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1079
  _2982 = succeeded:body _1079
  br ^1

1696:
  %% map_SUITE.erl:467
  %% Aliased:
  %%    M4
  _1080 = match_fail `badmatch`, M4

  %% Unique:
  %%    _1080
  _2992 = succeeded:body _1080
  br ^1

1690:
  %% map_SUITE.erl:410
  %% Unique:
  %%    _597
  _1082 = match_fail `badmatch`, _597

  %% Unique:
  %%    _1082
  _2998 = succeeded:body _1082
  br ^1

1682:
  %% map_SUITE.erl:408
  %% Aliased:
  %%    M3
  _1083 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1083
  _3007 = succeeded:body _1083
  br ^1

1675:
  %% map_SUITE.erl:407
  %% Aliased:
  %%    M3
  _1084 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1084
  _3016 = succeeded:body _1084
  br ^1

1668:
  %% map_SUITE.erl:406
  %% Aliased:
  %%    M3
  _1085 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1085
  _3025 = succeeded:body _1085
  br ^1

1661:
  %% map_SUITE.erl:405
  %% Aliased:
  %%    M3
  _1086 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1086
  _3034 = succeeded:body _1086
  br ^1

1653:
  %% map_SUITE.erl:403
  %% Aliased:
  %%    M3
  _1087 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1087
  _3044 = succeeded:body _1087
  br ^1

1645:
  %% map_SUITE.erl:402
  %% Aliased:
  %%    M3
  _1088 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1088
  _3054 = succeeded:body _1088
  br ^1

1637:
  %% map_SUITE.erl:401
  %% Aliased:
  %%    M3
  _1089 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1089
  _3064 = succeeded:body _1089
  br ^1

1629:
  %% map_SUITE.erl:400
  %% Aliased:
  %%    M3
  _1090 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1090
  _3074 = succeeded:body _1090
  br ^1

1621:
  %% map_SUITE.erl:399
  %% Aliased:
  %%    M3
  _1091 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1091
  _3084 = succeeded:body _1091
  br ^1

1613:
  %% map_SUITE.erl:397
  %% Aliased:
  %%    M3
  _1092 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1092
  _3094 = succeeded:body _1092
  br ^1

1605:
  %% map_SUITE.erl:396
  %% Aliased:
  %%    M3
  _1093 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1093
  _3104 = succeeded:body _1093
  br ^1

1597:
  %% map_SUITE.erl:395
  %% Aliased:
  %%    M3
  _1094 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1094
  _3114 = succeeded:body _1094
  br ^1

1589:
  %% map_SUITE.erl:394
  %% Aliased:
  %%    M3
  _1095 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1095
  _3124 = succeeded:body _1095
  br ^1

1581:
  %% map_SUITE.erl:393
  %% Aliased:
  %%    M3
  _1096 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1096
  _3134 = succeeded:body _1096
  br ^1

1573:
  %% map_SUITE.erl:391
  %% Aliased:
  %%    M3
  _1097 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1097
  _3144 = succeeded:body _1097
  br ^1

1565:
  %% map_SUITE.erl:390
  %% Aliased:
  %%    M3
  _1098 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1098
  _3154 = succeeded:body _1098
  br ^1

1557:
  %% map_SUITE.erl:389
  %% Aliased:
  %%    M3
  _1099 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1099
  _3164 = succeeded:body _1099
  br ^1

1549:
  %% map_SUITE.erl:388
  %% Aliased:
  %%    M3
  _1100 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1100
  _3174 = succeeded:body _1100
  br ^1

1541:
  %% map_SUITE.erl:387
  %% Aliased:
  %%    M3
  _1101 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1101
  _3184 = succeeded:body _1101
  br ^1

1533:
  %% map_SUITE.erl:385
  %% Aliased:
  %%    M3
  _1102 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1102
  _3194 = succeeded:body _1102
  br ^1

1525:
  %% map_SUITE.erl:384
  %% Aliased:
  %%    M3
  _1103 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1103
  _3204 = succeeded:body _1103
  br ^1

1517:
  %% map_SUITE.erl:383
  %% Aliased:
  %%    M3
  _1104 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1104
  _3214 = succeeded:body _1104
  br ^1

1509:
  %% map_SUITE.erl:382
  %% Aliased:
  %%    M3
  _1105 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1105
  _3224 = succeeded:body _1105
  br ^1

1501:
  %% map_SUITE.erl:381
  %% Aliased:
  %%    M3
  _1106 = match_fail `badmatch`, M3

  %% Unique:
  %%    _1106
  _3234 = succeeded:body _1106
  br ^1

1495:
  %% map_SUITE.erl:347
  %% Unique:
  %%    _455
  _1108 = match_fail `badmatch`, _455

  %% Unique:
  %%    _1108
  _3240 = succeeded:body _1108
  br ^1

1486:
  %% map_SUITE.erl:345
  %% Aliased:
  %%    M2
  _1109 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1109
  _3250 = succeeded:body _1109
  br ^1

1478:
  %% map_SUITE.erl:344
  %% Aliased:
  %%    M2
  _1110 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1110
  _3260 = succeeded:body _1110
  br ^1

1470:
  %% map_SUITE.erl:343
  %% Aliased:
  %%    M2
  _1111 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1111
  _3270 = succeeded:body _1111
  br ^1

1462:
  %% map_SUITE.erl:342
  %% Aliased:
  %%    M2
  _1112 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1112
  _3280 = succeeded:body _1112
  br ^1

1454:
  %% map_SUITE.erl:341
  %% Aliased:
  %%    M2
  _1113 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1113
  _3290 = succeeded:body _1113
  br ^1

1446:
  %% map_SUITE.erl:339
  %% Aliased:
  %%    M2
  _1114 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1114
  _3300 = succeeded:body _1114
  br ^1

1438:
  %% map_SUITE.erl:338
  %% Aliased:
  %%    M2
  _1115 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1115
  _3310 = succeeded:body _1115
  br ^1

1430:
  %% map_SUITE.erl:337
  %% Aliased:
  %%    M2
  _1116 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1116
  _3320 = succeeded:body _1116
  br ^1

1422:
  %% map_SUITE.erl:336
  %% Aliased:
  %%    M2
  _1117 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1117
  _3330 = succeeded:body _1117
  br ^1

1414:
  %% map_SUITE.erl:335
  %% Aliased:
  %%    M2
  _1118 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1118
  _3340 = succeeded:body _1118
  br ^1

1406:
  %% map_SUITE.erl:333
  %% Aliased:
  %%    M2
  _1119 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1119
  _3350 = succeeded:body _1119
  br ^1

1398:
  %% map_SUITE.erl:332
  %% Aliased:
  %%    M2
  _1120 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1120
  _3360 = succeeded:body _1120
  br ^1

1390:
  %% map_SUITE.erl:331
  %% Aliased:
  %%    M2
  _1121 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1121
  _3370 = succeeded:body _1121
  br ^1

1382:
  %% map_SUITE.erl:330
  %% Aliased:
  %%    M2
  _1122 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1122
  _3380 = succeeded:body _1122
  br ^1

1374:
  %% map_SUITE.erl:329
  %% Aliased:
  %%    M2
  _1123 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1123
  _3390 = succeeded:body _1123
  br ^1

1366:
  %% map_SUITE.erl:327
  %% Aliased:
  %%    M2
  _1124 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1124
  _3400 = succeeded:body _1124
  br ^1

1358:
  %% map_SUITE.erl:326
  %% Aliased:
  %%    M2
  _1125 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1125
  _3410 = succeeded:body _1125
  br ^1

1350:
  %% map_SUITE.erl:325
  %% Aliased:
  %%    M2
  _1126 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1126
  _3420 = succeeded:body _1126
  br ^1

1342:
  %% map_SUITE.erl:324
  %% Aliased:
  %%    M2
  _1127 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1127
  _3430 = succeeded:body _1127
  br ^1

1334:
  %% map_SUITE.erl:323
  %% Aliased:
  %%    M2
  _1128 = match_fail `badmatch`, M2

  %% Unique:
  %%    _1128
  _3440 = succeeded:body _1128
  br ^1

1328:
  %% map_SUITE.erl:294
  %% Unique:
  %%    _333
  _1130 = match_fail `badmatch`, _333

  %% Unique:
  %%    _1130
  _3446 = succeeded:body _1130
  br ^1

1319:
  %% map_SUITE.erl:292
  %% Aliased:
  %%    M1
  _1131 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1131
  _3456 = succeeded:body _1131
  br ^1

1311:
  %% map_SUITE.erl:291
  %% Aliased:
  %%    M1
  _1132 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1132
  _3466 = succeeded:body _1132
  br ^1

1303:
  %% map_SUITE.erl:290
  %% Aliased:
  %%    M1
  _1133 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1133
  _3476 = succeeded:body _1133
  br ^1

1295:
  %% map_SUITE.erl:289
  %% Aliased:
  %%    M1
  _1134 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1134
  _3486 = succeeded:body _1134
  br ^1

1287:
  %% map_SUITE.erl:288
  %% Aliased:
  %%    M1
  _1135 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1135
  _3496 = succeeded:body _1135
  br ^1

1279:
  %% map_SUITE.erl:286
  %% Aliased:
  %%    M1
  _1136 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1136
  _3506 = succeeded:body _1136
  br ^1

1271:
  %% map_SUITE.erl:285
  %% Aliased:
  %%    M1
  _1137 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1137
  _3516 = succeeded:body _1137
  br ^1

1263:
  %% map_SUITE.erl:284
  %% Aliased:
  %%    M1
  _1138 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1138
  _3526 = succeeded:body _1138
  br ^1

1255:
  %% map_SUITE.erl:283
  %% Aliased:
  %%    M1
  _1139 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1139
  _3536 = succeeded:body _1139
  br ^1

1247:
  %% map_SUITE.erl:282
  %% Aliased:
  %%    M1
  _1140 = match_fail `badmatch`, M1

  %% Unique:
  %%    _1140
  _3546 = succeeded:body _1140
  br ^1

1241:
  %% map_SUITE.erl:258
  %% Unique:
  %%    _271
  _1142 = match_fail `badmatch`, _271

  %% Unique:
  %%    _1142
  _3552 = succeeded:body _1142
  br ^1

1232:
  %% map_SUITE.erl:256
  %% Aliased:
  %%    M0
  _1143 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1143
  _3562 = succeeded:body _1143
  br ^1

1224:
  %% map_SUITE.erl:255
  %% Aliased:
  %%    M0
  _1144 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1144
  _3572 = succeeded:body _1144
  br ^1

1216:
  %% map_SUITE.erl:254
  %% Aliased:
  %%    M0
  _1145 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1145
  _3582 = succeeded:body _1145
  br ^1

1208:
  %% map_SUITE.erl:253
  %% Aliased:
  %%    M0
  _1146 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1146
  _3592 = succeeded:body _1146
  br ^1

1200:
  %% map_SUITE.erl:252
  %% Aliased:
  %%    M0
  _1147 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1147
  _3602 = succeeded:body _1147
  br ^1

1192:
  %% map_SUITE.erl:250
  %% Aliased:
  %%    M0
  _1148 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1148
  _3612 = succeeded:body _1148
  br ^1

1184:
  %% map_SUITE.erl:249
  %% Aliased:
  %%    M0
  _1149 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1149
  _3622 = succeeded:body _1149
  br ^1

1176:
  %% map_SUITE.erl:248
  %% Aliased:
  %%    M0
  _1150 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1150
  _3632 = succeeded:body _1150
  br ^1

1168:
  %% map_SUITE.erl:247
  %% Aliased:
  %%    M0
  _1151 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1151
  _3642 = succeeded:body _1151
  br ^1

1160:
  %% map_SUITE.erl:246
  %% Aliased:
  %%    M0
  _1152 = match_fail `badmatch`, M0

  %% Unique:
  %%    _1152
  _3652 = succeeded:body _1152
  br ^1

1156:
  %% map_SUITE.erl:232
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_literals_large/1-',1}}
  _1153 = match_fail `function_clause`, _0

  %% Unique:
  %%    _1153
  _3653 = succeeded:body _1153
  br ^1

1:
  _1154 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1154
}

%% map_SUITE.erl:688
%% Counter = 836
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_aliasing`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _389 = bif:is_list _0
  br _389, ^389, ^388

389:
  %% map_SUITE.erl:689
  M1 = call (`id`/1), `#{a => 1,b => 2,c => 3,d => 4}`

  %% Aliased:
  %%    M1
  _390 = succeeded:body M1
  br _390, ^390, ^1

390:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M1
  _798 = bif:is_map M1
  br _798, ^798, ^392

798:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _235 = get_map_element M1, `c`

  %% Aliased:
  %%    _235
  _393 = succeeded:guard _235
  br _393, ^793, ^392

793:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _238 = get_map_element M1, `a`

  %% Aliased:
  %%    _238
  _398 = succeeded:guard _238
  br _398, ^398, ^397

398:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _237 = get_map_element M1, `b`

  %% Aliased:
  %%    _237
  _399 = succeeded:guard _237
  br _399, ^403, ^397

403:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _237
  _790 = bif:'=:=' _237, `2`
  br _790, ^409, ^401

409:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _238
  _786 = bif:'=:=' _238, `1`
  br _786, ^414, ^407

414:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _235
  _780 = bif:'=:=' _235, `3`
  br _780, ^775, ^413

775:
  %% map_SUITE.erl:698
  M2 = call (`id`/1), `#{"a" => 1,"b" => 2,"c" => 3,"d" => 4}`

  %% Aliased:
  %%    M2
  _420 = succeeded:body M2
  br _420, ^420, ^1

420:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M2
  _773 = bif:is_map M2
  br _773, ^773, ^422

773:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _249 = get_map_element M2, `"a"`

  %% Aliased:
  %%    _249
  _423 = succeeded:guard _249
  br _423, ^423, ^422

423:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _248 = get_map_element M2, `"b"`

  %% Aliased:
  %%    _248
  _424 = succeeded:guard _248
  br _424, ^424, ^422

424:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _248
  _772 = bif:'=:=' _248, `2`
  br _772, ^765, ^422

765:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _431 = has_map_field M1, `a`
  br _431, ^431, ^430

431:
  %% Argument types:
  %%    M1 => map()
  %% Aliased:
  %%    M1
  _252 = get_map_element M1, `b`

  %% Aliased:
  %%    _252
  _432 = succeeded:guard _252
  br _432, ^432, ^430

432:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _252
  _764 = bif:'=:=' _252, `2`
  br _764, ^453, ^430

453:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _262 = get_map_element M2, `"d"`

  %% Aliased:
  %%    _262
  _454 = succeeded:guard _262
  br _454, ^454, ^452

454:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _262
  _750 = bif:'=:=' _262, `4`
  br _750, ^467, ^452

467:
  %% Argument types:
  %%    M2 => map()
  %% Aliased:
  %%    M2
  _269 = get_map_element M2, `"c"`

  %% Aliased:
  %%    _269
  _468 = succeeded:guard _269
  br _468, ^469, ^465

469:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _249
  _742 = bif:'=:=' _249, `1`
  br _742, ^739, ^465

739:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _269
  _738 = bif:'=:=' _269, `3`
  br _738, ^505, ^465

505:
  %% map_SUITE.erl:709
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _29 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\f">>`, `all`

  %% Aliased:
  %%    _29
  _506 = succeeded:body _29
  br _506, ^506, ^1

506:
  %% map_SUITE.erl:709
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _30 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\r">>`, `all`

  %% Aliased:
  %%    _30
  _507 = succeeded:body _30
  br _507, ^507, ^1

507:
  %% map_SUITE.erl:709
  %% Aliased:
  %%    _29
  _291 = put_map `assoc`, `#{}`, _29, `1`

  %% map_SUITE.erl:709
  %% Aliased:
  %%    _30, 
  %%    _291
  _31 = put_map `assoc`, _291, _30, `2`

  %% map_SUITE.erl:709
  %% Aliased:
  %%    _31
  M3 = call (`id`/1), _31

  %% Aliased:
  %%    M3
  _508 = succeeded:body M3
  br _508, ^508, ^1

508:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M3
  _697 = bif:is_map M3
  br _697, ^697, ^292

697:
  %% map_SUITE.erl:710
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _330 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\r">>`, `all`

  %% Aliased:
  %%    _330
  _514 = succeeded:guard _330
  br _514, ^694, ^292

694:
  %% Argument types:
  %%    M3 => map()
  %%    _330 => bitstring(4)
  %% Aliased:
  %%    _330, 
  %%    M3
  _295 = get_map_element M3, _330

  %% Aliased:
  %%    _295
  _522 = succeeded:guard _295
  br _522, ^522, ^292

522:
  %% map_SUITE.erl:710
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _332 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\f">>`, `all`

  %% Aliased:
  %%    _332
  _525 = succeeded:guard _332
  br _525, ^691, ^292

691:
  %% Argument types:
  %%    M3 => map()
  %%    _332 => bitstring(4)
  %% Aliased:
  %%    _332, 
  %%    M3
  _297 = get_map_element M3, _332

  %% Aliased:
  %%    _297
  _530 = succeeded:guard _297
  br _530, ^689, ^292

689:
  %% map_SUITE.erl:710
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _334 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\f">>`, `all`

  %% Aliased:
  %%    _334
  _536 = succeeded:guard _334
  br _536, ^686, ^298

686:
  %% Argument types:
  %%    M3 => map()
  %%    _334 => bitstring(4)
  %% Aliased:
  %%    _334, 
  %%    M3
  _301 = get_map_element M3, _334

  %% Aliased:
  %%    _301
  _544 = succeeded:guard _301
  br _544, ^544, ^298

544:
  %% map_SUITE.erl:710
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _336 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\r">>`, `all`

  %% Aliased:
  %%    _336
  _547 = succeeded:guard _336
  br _547, ^683, ^298

683:
  %% Argument types:
  %%    M3 => map()
  %%    _336 => bitstring(4)
  %% Aliased:
  %%    _336, 
  %%    M3
  _303 = get_map_element M3, _336

  %% Aliased:
  %%    _303
  _552 = succeeded:guard _303
  br _552, ^552, ^298

552:
  %% map_SUITE.erl:710
  %% Argument types:
  %%    
  %% Aliased:
  %%    _297, 
  %%    _301
  _79 = bif:'=:=' _301, _297
  br _79, ^803, ^298

803:
  %% map_SUITE.erl:710
  %% Argument types:
  %%    
  %% Aliased:
  %%    _295, 
  %%    _303
  _80 = bif:'=:=' _303, _295
  br _80, ^681, ^298

681:
  %% map_SUITE.erl:711
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _338 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\r">>`, `all`

  %% Aliased:
  %%    _338
  _560 = succeeded:guard _338
  br _560, ^678, ^305

678:
  %% Argument types:
  %%    M3 => map()
  %%    _338 => bitstring(4)
  %% Aliased:
  %%    _338, 
  %%    M3
  _568 = has_map_field M3, _338
  br _568, ^568, ^305

568:
  %% map_SUITE.erl:711
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _340 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\f">>`, `all`

  %% Aliased:
  %%    _340
  _571 = succeeded:guard _340
  br _571, ^675, ^305

675:
  %% Argument types:
  %%    M3 => map()
  %%    _340 => bitstring(4)
  %% Aliased:
  %%    _340, 
  %%    M3
  _576 = has_map_field M3, _340
  br _576, ^673, ^305

673:
  %% map_SUITE.erl:711
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _342 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\f">>`, `all`

  %% Aliased:
  %%    _342
  _582 = succeeded:guard _342
  br _582, ^670, ^311

670:
  %% Argument types:
  %%    M3 => map()
  %%    _342 => bitstring(4)
  %% Aliased:
  %%    _342, 
  %%    M3
  _314 = get_map_element M3, _342

  %% Aliased:
  %%    _314
  _590 = succeeded:guard _314
  br _590, ^590, ^311

590:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _314
  _669 = bif:'=:=' _314, `1`
  br _669, ^668, ^311

668:
  %% map_SUITE.erl:711
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _344 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\r">>`, `all`

  %% Aliased:
  %%    _344
  _593 = succeeded:guard _344
  br _593, ^665, ^311

665:
  %% Argument types:
  %%    M3 => map()
  %%    _344 => bitstring(4)
  %% Aliased:
  %%    _344, 
  %%    M3
  _316 = get_map_element M3, _344

  %% Aliased:
  %%    _316
  _598 = succeeded:guard _316
  br _598, ^598, ^311

598:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _316
  _664 = bif:'=:=' _316, `2`
  br _664, ^661, ^311

661:
  %% map_SUITE.erl:712
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _346 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\f">>`, `all`

  %% Aliased:
  %%    _346
  _604 = succeeded:guard _346
  br _604, ^658, ^317

658:
  %% Argument types:
  %%    M3 => map()
  %%    _346 => bitstring(4)
  %% Aliased:
  %%    _346, 
  %%    M3
  _320 = get_map_element M3, _346

  %% Aliased:
  %%    _320
  _612 = succeeded:guard _320
  br _612, ^612, ^317

612:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _320
  _657 = bif:'=:=' _320, `1`
  br _657, ^656, ^317

656:
  %% map_SUITE.erl:712
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _348 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\r">>`, `all`

  %% Aliased:
  %%    _348
  _615 = succeeded:guard _348
  br _615, ^653, ^317

653:
  %% Argument types:
  %%    M3 => map()
  %%    _348 => bitstring(4)
  %% Aliased:
  %%    _348, 
  %%    M3
  _322 = get_map_element M3, _348

  %% Aliased:
  %%    _322
  _620 = succeeded:guard _322
  br _620, ^620, ^317

620:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _322
  _652 = bif:'=:=' _322, `2`
  br _652, ^649, ^317

649:
  %% map_SUITE.erl:712
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _350 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\r">>`, `all`

  %% Aliased:
  %%    _350
  _626 = succeeded:guard _350
  br _626, ^646, ^323

646:
  %% Argument types:
  %%    M3 => map()
  %%    _350 => bitstring(4)
  %% Aliased:
  %%    _350, 
  %%    M3
  _634 = has_map_field M3, _350
  br _634, ^634, ^323

634:
  %% map_SUITE.erl:712
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _352 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `292`, `binary`, `[1]`, `<<"\f">>`, `all`

  %% Aliased:
  %%    _352
  _637 = succeeded:guard _352
  br _637, ^643, ^323

643:
  %% Argument types:
  %%    M3 => map()
  %%    _352 => bitstring(4)
  %% Aliased:
  %%    _352, 
  %%    M3
  _642 = has_map_field M3, _352
  br _642, ^642, ^323

642:
  %% Result type:
  %%    'ok'
  ret `ok`

323:
  %% map_SUITE.erl:712
  %% Aliased:
  %%    M3
  _353 = match_fail `badmatch`, M3

  %% Unique:
  %%    _353
  _650 = succeeded:body _353
  br ^1

317:
  %% map_SUITE.erl:712
  %% Aliased:
  %%    M3
  _354 = match_fail `badmatch`, M3

  %% Unique:
  %%    _354
  _662 = succeeded:body _354
  br ^1

311:
  %% map_SUITE.erl:711
  %% Aliased:
  %%    M3
  _355 = match_fail `badmatch`, M3

  %% Unique:
  %%    _355
  _674 = succeeded:body _355
  br ^1

305:
  %% map_SUITE.erl:711
  %% Aliased:
  %%    M3
  _356 = match_fail `badmatch`, M3

  %% Unique:
  %%    _356
  _682 = succeeded:body _356
  br ^1

298:
  %% map_SUITE.erl:710
  %% Aliased:
  %%    M3
  _357 = match_fail `badmatch`, M3

  %% Unique:
  %%    _357
  _690 = succeeded:body _357
  br ^1

292:
  %% map_SUITE.erl:710
  %% Aliased:
  %%    M3
  _358 = match_fail `badmatch`, M3

  %% Unique:
  %%    _358
  _698 = succeeded:body _358
  br ^1

465:
  %% map_SUITE.erl:705
  %% Aliased:
  %%    M2
  _367 = match_fail `badmatch`, M2

  %% Unique:
  %%    _367
  _744 = succeeded:body _367
  br ^1

452:
  %% map_SUITE.erl:705
  %% Aliased:
  %%    M2
  _370 = match_fail `badmatch`, M2

  %% Unique:
  %%    _370
  _752 = succeeded:body _370
  br ^1

430:
  %% map_SUITE.erl:702
  %% Aliased:
  %%    M1
  _375 = match_fail `badmatch`, M1

  %% Unique:
  %%    _375
  _766 = succeeded:body _375
  br ^1

422:
  %% map_SUITE.erl:699
  %% Aliased:
  %%    M2
  _377 = match_fail `badmatch`, M2

  %% Unique:
  %%    _377
  _774 = succeeded:body _377
  br ^1

413:
  %% map_SUITE.erl:695
  %% Aliased:
  %%    M1
  _379 = match_fail `badmatch`, M1

  %% Unique:
  %%    _379
  _782 = succeeded:body _379
  br ^1

407:
  %% map_SUITE.erl:694
  %% Aliased:
  %%    M1
  _380 = match_fail `badmatch`, M1

  %% Unique:
  %%    _380
  _788 = succeeded:body _380
  br ^1

401:
  %% map_SUITE.erl:693
  %% Aliased:
  %%    M1
  _381 = match_fail `badmatch`, M1

  %% Unique:
  %%    _381
  _792 = succeeded:body _381
  br ^1

397:
  %% map_SUITE.erl:692
  %% Aliased:
  %%    M1
  _382 = match_fail `badmatch`, M1

  %% Unique:
  %%    _382
  _794 = succeeded:body _382
  br ^1

392:
  %% map_SUITE.erl:690
  %% Aliased:
  %%    M1
  _384 = match_fail `badmatch`, M1

  %% Unique:
  %%    _384
  _799 = succeeded:body _384
  br ^1

388:
  %% map_SUITE.erl:688
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_aliasing/1-',1}}
  _385 = match_fail `function_clause`, _0

  %% Unique:
  %%    _385
  _800 = succeeded:body _385
  br ^1

1:
  _386 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _386
}

%% map_SUITE.erl:716
%% Counter = 273
%% bs_ensure_opt: true
function `map_SUITE`:`t_map_size`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _77 = bif:is_list _0
  br _77, ^77, ^76

77:
  %% map_SUITE.erl:717
  _1 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _1
  _78 = succeeded:body _1
  br _78, ^78, ^1

78:
  %% map_SUITE.erl:717
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _30 = bif:map_size _1

  %% Unique:
  %%    _30
  _79 = succeeded:body _30
  br _79, ^79, ^1

79:
  %% Argument types:
  %%    _30 => 0..288230376151711743
  %% Unique:
  %%    _30
  _219 = bif:'=:=' _30, `0`
  br _219, ^218, ^81

218:
  %% map_SUITE.erl:718
  _3 = call (`id`/1), `#{a => 1}`

  %% Aliased:
  %%    _3
  _82 = succeeded:body _3
  br _82, ^82, ^1

82:
  %% map_SUITE.erl:718
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _31 = bif:map_size _3

  %% Unique:
  %%    _31
  _83 = succeeded:body _31
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _31 => 0..288230376151711743
  %% Unique:
  %%    _31
  _216 = bif:'=:=' _31, `1`
  br _216, ^215, ^85

215:
  %% map_SUITE.erl:719
  _5 = call (`id`/1), `#{a => "wat"}`

  %% Aliased:
  %%    _5
  _86 = succeeded:body _5
  br _86, ^86, ^1

86:
  %% map_SUITE.erl:719
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _32 = bif:map_size _5

  %% Unique:
  %%    _32
  _87 = succeeded:body _32
  br _87, ^87, ^1

87:
  %% Argument types:
  %%    _32 => 0..288230376151711743
  %% Unique:
  %%    _32
  _213 = bif:'=:=' _32, `1`
  br _213, ^212, ^89

212:
  %% map_SUITE.erl:720
  _7 = call (`id`/1), `#{a => 1,b => 2}`

  %% Aliased:
  %%    _7
  _90 = succeeded:body _7
  br _90, ^90, ^1

90:
  %% map_SUITE.erl:720
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _33 = bif:map_size _7

  %% Unique:
  %%    _33
  _91 = succeeded:body _33
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    _33 => 0..288230376151711743
  %% Unique:
  %%    _33
  _210 = bif:'=:=' _33, `2`
  br _210, ^209, ^93

209:
  %% map_SUITE.erl:721
  _9 = call (`id`/1), `#{a => 1,b => "3","33" => <<"n">>}`

  %% Aliased:
  %%    _9
  _94 = succeeded:body _9
  br _94, ^94, ^1

94:
  %% map_SUITE.erl:721
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _34 = bif:map_size _9

  %% Unique:
  %%    _34
  _95 = succeeded:body _34
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    _34 => 0..288230376151711743
  %% Unique:
  %%    _34
  _207 = bif:'=:=' _34, `3`
  br _207, ^206, ^97

206:
  %% map_SUITE.erl:723
  %% Result type:
  %%    'false' | 'true'
  _35 = call (`map_is_size`/2), `#{a => 1}`, `1`

  %% Unique:
  %%    _35
  _98 = succeeded:body _35
  br _98, ^98, ^1

98:
  br _35, ^203, ^100

203:
  %% map_SUITE.erl:724
  %% Result type:
  %%    'false' | 'true'
  _36 = call (`map_is_size`/2), `#{a => 2}`, `1`

  %% Unique:
  %%    _36
  _101 = succeeded:body _36
  br _101, ^101, ^1

101:
  br _36, ^200, ^103

200:
  %% map_SUITE.erl:726
  %% Result type:
  %%    'false' | 'true'
  _37 = call (`map_is_size`/2), `#{"a" => 1,"b" => 2}`, `2`

  %% Unique:
  %%    _37
  _104 = succeeded:body _37
  br _104, ^104, ^1

104:
  br _37, ^197, ^106

197:
  %% map_SUITE.erl:727
  %% Result type:
  %%    'false' | 'true'
  _38 = call (`map_is_size`/2), `#{"a" => 1,"b" => 2}`, `3`

  %% Unique:
  %%    _38
  _107 = succeeded:body _38
  br _107, ^107, ^1

107:
  br _38, ^109, ^194

109:
  %% map_SUITE.erl:727
  _64 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _64
  _196 = succeeded:body _64
  br ^1

194:
  %% map_SUITE.erl:728
  %% Result type:
  %%    'false' | 'true'
  _39 = call (`map_is_size`/2), `#{"a" => 2,"b" => 2}`, `2`

  %% Unique:
  %%    _39
  _110 = succeeded:body _39
  br _110, ^110, ^1

110:
  br _39, ^191, ^112

191:
  %% map_SUITE.erl:729
  %% Result type:
  %%    'false' | 'true'
  _40 = call (`map_is_size`/2), `#{"a" => 1,"b" => 2,"c" => 2}`, `2`

  %% Unique:
  %%    _40
  _113 = succeeded:body _40
  br _113, ^113, ^1

113:
  br _40, ^115, ^267

115:
  %% map_SUITE.erl:729
  _62 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _62
  _190 = succeeded:body _62
  br ^1

267:
  br ^270

270:
  _119 = new_try_tag `'catch'`
  br _119, ^117, ^118

117:
  %% map_SUITE.erl:732
  %% Argument types:
  %%    
  _54 = bif:map_size `[]`

  %% Unique:
  %%    _54
  _121 = succeeded:body _54
  br ^118

118:
  %% Unique:
  %%    _119
  _124 = landingpad `'catch'`, _119

  %% Aliased:
  %%    _124
  _122 = extract _124, `0`
  br ^116

116:
  %% Aliased:
  %%    _122
  %% Unique:
  %%    _119
  _20 = catch_end _119, _122

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _184 = is_tagged_tuple _20, `2`, `'EXIT'`
  br _184, ^181, ^127

181:
  %% Argument types:
  %%    _20 => {''EXIT'', any()}
  %% Aliased:
  %%    _20
  _41 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _178 = bif:is_tuple _41
  br _178, ^178, ^127

178:
  %% Argument types:
  %%    _41 => {...}
  %% Aliased:
  %%    _41
  _179 = bif:tuple_size _41

  %% Argument types:
  %%    _179 => 0..16777215
  %% Unique:
  %%    _179
  _180 = bif:'=:=' _179, `2`
  br _180, ^177, ^127

177:
  %% Argument types:
  %%    _41 => {any(), any()}
  %% Aliased:
  %%    _41
  _44 = get_tuple_element _41, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _176 = bif:'=:=' _44, `{badmap,[]}`
  br _176, ^268, ^127

268:
  br ^271

271:
  _131 = new_try_tag `'catch'`
  br _131, ^129, ^130

129:
  %% map_SUITE.erl:733
  %% Argument types:
  %%    
  _56 = bif:map_size `<<1,2,3>>`

  %% Unique:
  %%    _56
  _133 = succeeded:body _56
  br ^130

130:
  %% Unique:
  %%    _131
  _136 = landingpad `'catch'`, _131

  %% Aliased:
  %%    _136
  _134 = extract _136, `0`
  br ^128

128:
  %% Aliased:
  %%    _134
  %% Unique:
  %%    _131
  _22 = catch_end _131, _134

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _172 = is_tagged_tuple _22, `2`, `'EXIT'`
  br _172, ^169, ^139

169:
  %% Argument types:
  %%    _22 => {''EXIT'', any()}
  %% Aliased:
  %%    _22
  _45 = get_tuple_element _22, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _166 = bif:is_tuple _45
  br _166, ^166, ^139

166:
  %% Argument types:
  %%    _45 => {...}
  %% Aliased:
  %%    _45
  _167 = bif:tuple_size _45

  %% Argument types:
  %%    _167 => 0..16777215
  %% Unique:
  %%    _167
  _168 = bif:'=:=' _167, `2`
  br _168, ^165, ^139

165:
  %% Argument types:
  %%    _45 => {any(), any()}
  %% Aliased:
  %%    _45
  _48 = get_tuple_element _45, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _164 = bif:'=:=' _48, `{badmap,<<1,2,3>>}`
  br _164, ^269, ^139

269:
  br ^272

272:
  _143 = new_try_tag `'catch'`
  br _143, ^141, ^142

141:
  %% map_SUITE.erl:734
  %% Argument types:
  %%    
  _58 = bif:map_size `1`

  %% Unique:
  %%    _58
  _145 = succeeded:body _58
  br ^142

142:
  %% Unique:
  %%    _143
  _148 = landingpad `'catch'`, _143

  %% Aliased:
  %%    _148
  _146 = extract _148, `0`
  br ^140

140:
  %% Aliased:
  %%    _146
  %% Unique:
  %%    _143
  _24 = catch_end _143, _146

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _160 = is_tagged_tuple _24, `2`, `'EXIT'`
  br _160, ^157, ^151

157:
  %% Argument types:
  %%    _24 => {''EXIT'', any()}
  %% Aliased:
  %%    _24
  _49 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _154 = bif:is_tuple _49
  br _154, ^154, ^151

154:
  %% Argument types:
  %%    _49 => {...}
  %% Aliased:
  %%    _49
  _155 = bif:tuple_size _49

  %% Argument types:
  %%    _155 => 0..16777215
  %% Unique:
  %%    _155
  _156 = bif:'=:=' _155, `2`
  br _156, ^153, ^151

153:
  %% Argument types:
  %%    _49 => {any(), any()}
  %% Aliased:
  %%    _49
  _52 = get_tuple_element _49, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _152 = bif:'=:=' _52, `{badmap,1}`
  br _152, ^152, ^151

152:
  %% Result type:
  %%    'ok'
  ret `ok`

151:
  %% map_SUITE.erl:734
  %% Aliased:
  %%    _24
  _59 = match_fail `badmatch`, _24

  %% Unique:
  %%    _59
  _163 = succeeded:body _59
  br ^1

139:
  %% map_SUITE.erl:733
  %% Aliased:
  %%    _22
  _60 = match_fail `badmatch`, _22

  %% Unique:
  %%    _60
  _175 = succeeded:body _60
  br ^1

127:
  %% map_SUITE.erl:732
  %% Aliased:
  %%    _20
  _61 = match_fail `badmatch`, _20

  %% Unique:
  %%    _61
  _187 = succeeded:body _61
  br ^1

112:
  %% map_SUITE.erl:728
  _63 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _63
  _193 = succeeded:body _63
  br ^1

106:
  %% map_SUITE.erl:726
  _65 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _65
  _199 = succeeded:body _65
  br ^1

103:
  %% map_SUITE.erl:724
  _66 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _66
  _202 = succeeded:body _66
  br ^1

100:
  %% map_SUITE.erl:723
  _67 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _67
  _205 = succeeded:body _67
  br ^1

97:
  %% map_SUITE.erl:721
  %% Unique:
  %%    _34
  _68 = match_fail `badmatch`, _34

  %% Unique:
  %%    _68
  _208 = succeeded:body _68
  br ^1

93:
  %% map_SUITE.erl:720
  %% Unique:
  %%    _33
  _69 = match_fail `badmatch`, _33

  %% Unique:
  %%    _69
  _211 = succeeded:body _69
  br ^1

89:
  %% map_SUITE.erl:719
  %% Unique:
  %%    _32
  _70 = match_fail `badmatch`, _32

  %% Unique:
  %%    _70
  _214 = succeeded:body _70
  br ^1

85:
  %% map_SUITE.erl:718
  %% Unique:
  %%    _31
  _71 = match_fail `badmatch`, _31

  %% Unique:
  %%    _71
  _217 = succeeded:body _71
  br ^1

81:
  %% map_SUITE.erl:717
  %% Unique:
  %%    _30
  _72 = match_fail `badmatch`, _30

  %% Unique:
  %%    _72
  _220 = succeeded:body _72
  br ^1

76:
  %% map_SUITE.erl:716
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_map_size/1-',1}}
  _73 = match_fail `function_clause`, _0

  %% Unique:
  %%    _73
  _221 = succeeded:body _73
  br ^1

1:
  _74 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _74
}

%% map_SUITE.erl:737
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'a' | nonempty_list(97..99)=>1..2}
%%    _1 =>
%%     1..3
function `map_SUITE`:`map_is_size`(_0, _1) {
0:
  %% map_SUITE.erl:737
  %% Argument types:
  %%    _0 => #{'a' | nonempty_list(97..99)=>1..2}
  %% Unique:
  %%    _0
  _2 = bif:map_size _0

  %% Argument types:
  %%    _2 => 0..288230376151711743
  %%    _1 => 1..3
  %% Unique:
  %%    _1, 
  %%    _2
  _12 = bif:'=:=' _2, _1
  ret _12
}

%% map_SUITE.erl:740
%% Counter = 342
%% bs_ensure_opt: true
function `map_SUITE`:`t_map_get`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _85 = bif:is_list _0
  br _85, ^85, ^84

85:
  %% map_SUITE.erl:741
  _1 = call (`id`/1), `#{a => 1}`

  %% Aliased:
  %%    _1
  _86 = succeeded:body _1
  br _86, ^86, ^1

86:
  %% map_SUITE.erl:741
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _30 = bif:map_get `a`, _1

  %% Aliased:
  %%    _30
  _87 = succeeded:body _30
  br _87, ^87, ^1

87:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _254 = bif:'=:=' _30, `1`
  br _254, ^332, ^89

332:
  br ^337

337:
  _93 = new_try_tag `'catch'`
  br _93, ^91, ^92

91:
  %% map_SUITE.erl:743
  %% Argument types:
  %%    
  _58 = bif:map_get `a`, `#{}`

  %% Aliased:
  %%    _58
  _95 = succeeded:body _58
  br ^92

92:
  %% Unique:
  %%    _93
  _98 = landingpad `'catch'`, _93

  %% Aliased:
  %%    _98
  _96 = extract _98, `0`
  br ^90

90:
  %% Aliased:
  %%    _96
  %% Unique:
  %%    _93
  _3 = catch_end _93, _96

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _249 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _249, ^246, ^101

246:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _31 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _243 = bif:is_tuple _31
  br _243, ^243, ^101

243:
  %% Argument types:
  %%    _31 => {...}
  %% Aliased:
  %%    _31
  _244 = bif:tuple_size _31

  %% Argument types:
  %%    _244 => 0..16777215
  %% Unique:
  %%    _244
  _245 = bif:'=:=' _244, `2`
  br _245, ^242, ^101

242:
  %% Argument types:
  %%    _31 => {any(), any()}
  %% Aliased:
  %%    _31
  _34 = get_tuple_element _31, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _241 = bif:'=:=' _34, `{badkey,a}`
  br _241, ^333, ^101

333:
  br ^338

338:
  _105 = new_try_tag `'catch'`
  br _105, ^103, ^104

103:
  %% map_SUITE.erl:744
  %% Argument types:
  %%    
  _60 = bif:map_get `a`, `#{b => 1}`

  %% Aliased:
  %%    _60
  _107 = succeeded:body _60
  br ^104

104:
  %% Unique:
  %%    _105
  _110 = landingpad `'catch'`, _105

  %% Aliased:
  %%    _110
  _108 = extract _110, `0`
  br ^102

102:
  %% Aliased:
  %%    _108
  %% Unique:
  %%    _105
  _5 = catch_end _105, _108

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _237 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _237, ^234, ^113

234:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _35 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _231 = bif:is_tuple _35
  br _231, ^231, ^113

231:
  %% Argument types:
  %%    _35 => {...}
  %% Aliased:
  %%    _35
  _232 = bif:tuple_size _35

  %% Argument types:
  %%    _232 => 0..16777215
  %% Unique:
  %%    _232
  _233 = bif:'=:=' _232, `2`
  br _233, ^230, ^113

230:
  %% Argument types:
  %%    _35 => {any(), any()}
  %% Aliased:
  %%    _35
  _38 = get_tuple_element _35, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _229 = bif:'=:=' _38, `{badkey,a}`
  br _229, ^229, ^113

229:
  %% map_SUITE.erl:747
  %% Result type:
  %%    'false' | 'true'
  _39 = call (`check_map_value`/3), `#{"a" => 1,"b" => 2}`, `"a"`, `1`

  %% Unique:
  %%    _39
  _114 = succeeded:body _39
  br _114, ^114, ^1

114:
  br _39, ^226, ^116

226:
  %% map_SUITE.erl:748
  %% Result type:
  %%    'false' | 'true'
  _40 = call (`check_map_value`/3), `#{"a" => 1,"b" => 2}`, `"b"`, `1`

  %% Unique:
  %%    _40
  _117 = succeeded:body _40
  br _117, ^117, ^1

117:
  br _40, ^119, ^223

119:
  %% map_SUITE.erl:748
  _76 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _76
  _225 = succeeded:body _76
  br ^1

223:
  %% map_SUITE.erl:749
  %% Result type:
  %%    'false' | 'true'
  _41 = call (`check_map_value`/3), `#{"a" => 1,"b" => 2,"c" => 2}`, `"c"`, `2`

  %% Unique:
  %%    _41
  _120 = succeeded:body _41
  br _120, ^120, ^1

120:
  br _41, ^220, ^122

220:
  %% map_SUITE.erl:750
  %% Result type:
  %%    'false' | 'true'
  _42 = call (`check_map_value`/3), `#{"a" => 5,"b" => 2}`, `"a"`, `1`

  %% Unique:
  %%    _42
  _123 = succeeded:body _42
  br _123, ^123, ^1

123:
  br _42, ^125, ^334

125:
  %% map_SUITE.erl:750
  _74 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _74
  _219 = succeeded:body _74
  br ^1

334:
  br ^339

339:
  _129 = new_try_tag `'catch'`
  br _129, ^127, ^128

127:
  %% map_SUITE.erl:752
  %% Argument types:
  %%    
  _62 = bif:map_get `a`, `[]`

  %% Unique:
  %%    _62
  _131 = succeeded:body _62
  br ^128

128:
  %% Unique:
  %%    _129
  _134 = landingpad `'catch'`, _129

  %% Aliased:
  %%    _134
  _132 = extract _134, `0`
  br ^126

126:
  %% Aliased:
  %%    _132
  %% Unique:
  %%    _129
  _14 = catch_end _129, _132

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _213 = is_tagged_tuple _14, `2`, `'EXIT'`
  br _213, ^210, ^137

210:
  %% Argument types:
  %%    _14 => {''EXIT'', any()}
  %% Aliased:
  %%    _14
  _43 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _207 = bif:is_tuple _43
  br _207, ^207, ^137

207:
  %% Argument types:
  %%    _43 => {...}
  %% Aliased:
  %%    _43
  _208 = bif:tuple_size _43

  %% Argument types:
  %%    _208 => 0..16777215
  %% Unique:
  %%    _208
  _209 = bif:'=:=' _208, `2`
  br _209, ^206, ^137

206:
  %% Argument types:
  %%    _43 => {any(), any()}
  %% Aliased:
  %%    _43
  _46 = get_tuple_element _43, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _205 = bif:'=:=' _46, `{badmap,[]}`
  br _205, ^335, ^137

335:
  br ^340

340:
  _141 = new_try_tag `'catch'`
  br _141, ^139, ^140

139:
  %% map_SUITE.erl:753
  %% Argument types:
  %%    
  _64 = bif:map_get `a`, `<<1,2,3>>`

  %% Unique:
  %%    _64
  _143 = succeeded:body _64
  br ^140

140:
  %% Unique:
  %%    _141
  _146 = landingpad `'catch'`, _141

  %% Aliased:
  %%    _146
  _144 = extract _146, `0`
  br ^138

138:
  %% Aliased:
  %%    _144
  %% Unique:
  %%    _141
  _16 = catch_end _141, _144

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _201 = is_tagged_tuple _16, `2`, `'EXIT'`
  br _201, ^198, ^149

198:
  %% Argument types:
  %%    _16 => {''EXIT'', any()}
  %% Aliased:
  %%    _16
  _47 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _195 = bif:is_tuple _47
  br _195, ^195, ^149

195:
  %% Argument types:
  %%    _47 => {...}
  %% Aliased:
  %%    _47
  _196 = bif:tuple_size _47

  %% Argument types:
  %%    _196 => 0..16777215
  %% Unique:
  %%    _196
  _197 = bif:'=:=' _196, `2`
  br _197, ^194, ^149

194:
  %% Argument types:
  %%    _47 => {any(), any()}
  %% Aliased:
  %%    _47
  _50 = get_tuple_element _47, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _193 = bif:'=:=' _50, `{badmap,<<1,2,3>>}`
  br _193, ^336, ^149

336:
  br ^341

341:
  _153 = new_try_tag `'catch'`
  br _153, ^151, ^152

151:
  %% map_SUITE.erl:754
  %% Argument types:
  %%    
  _66 = bif:map_get `a`, `1`

  %% Unique:
  %%    _66
  _155 = succeeded:body _66
  br ^152

152:
  %% Unique:
  %%    _153
  _158 = landingpad `'catch'`, _153

  %% Aliased:
  %%    _158
  _156 = extract _158, `0`
  br ^150

150:
  %% Aliased:
  %%    _156
  %% Unique:
  %%    _153
  _18 = catch_end _153, _156

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _189 = is_tagged_tuple _18, `2`, `'EXIT'`
  br _189, ^186, ^161

186:
  %% Argument types:
  %%    _18 => {''EXIT'', any()}
  %% Aliased:
  %%    _18
  _51 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _183 = bif:is_tuple _51
  br _183, ^183, ^161

183:
  %% Argument types:
  %%    _51 => {...}
  %% Aliased:
  %%    _51
  _184 = bif:tuple_size _51

  %% Argument types:
  %%    _184 => 0..16777215
  %% Unique:
  %%    _184
  _185 = bif:'=:=' _184, `2`
  br _185, ^182, ^161

182:
  %% Argument types:
  %%    _51 => {any(), any()}
  %% Aliased:
  %%    _51
  _54 = get_tuple_element _51, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _181 = bif:'=:=' _54, `{badmap,1}`
  br _181, ^181, ^161

181:
  %% map_SUITE.erl:758
  NewMap = call (`id`/1), `#{a => b}`

  %% Aliased:
  %%    NewMap
  _162 = succeeded:body NewMap
  br _162, ^162, ^1

162:
  %% map_SUITE.erl:759
  %% Argument types:
  %%    
  %% Aliased:
  %%    NewMap
  _55 = bif:map_get `a`, NewMap

  %% Aliased:
  %%    _55
  _163 = succeeded:body _55
  br _163, ^163, ^1

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _179 = bif:'=:=' _55, `b`
  br _179, ^168, ^165

168:
  %% map_SUITE.erl:760
  %% Aliased:
  %%    NewMap
  _67 = put_map `exact`, NewMap, `a`, `z`

  %% Aliased:
  %%    _67
  _169 = succeeded:body _67
  br _169, ^174, ^1

174:
  %% Result type:
  %%    'ok'
  ret `ok`

165:
  %% map_SUITE.erl:759
  %% Aliased:
  %%    _55
  _70 = match_fail `badmatch`, _55

  %% Unique:
  %%    _70
  _180 = succeeded:body _70
  br ^1

161:
  %% map_SUITE.erl:754
  %% Aliased:
  %%    _18
  _71 = match_fail `badmatch`, _18

  %% Unique:
  %%    _71
  _192 = succeeded:body _71
  br ^1

149:
  %% map_SUITE.erl:753
  %% Aliased:
  %%    _16
  _72 = match_fail `badmatch`, _16

  %% Unique:
  %%    _72
  _204 = succeeded:body _72
  br ^1

137:
  %% map_SUITE.erl:752
  %% Aliased:
  %%    _14
  _73 = match_fail `badmatch`, _14

  %% Unique:
  %%    _73
  _216 = succeeded:body _73
  br ^1

122:
  %% map_SUITE.erl:749
  _75 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _75
  _222 = succeeded:body _75
  br ^1

116:
  %% map_SUITE.erl:747
  _77 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _77
  _228 = succeeded:body _77
  br ^1

113:
  %% map_SUITE.erl:744
  %% Aliased:
  %%    _5
  _78 = match_fail `badmatch`, _5

  %% Unique:
  %%    _78
  _240 = succeeded:body _78
  br ^1

101:
  %% map_SUITE.erl:743
  %% Aliased:
  %%    _3
  _79 = match_fail `badmatch`, _3

  %% Unique:
  %%    _79
  _252 = succeeded:body _79
  br ^1

89:
  %% map_SUITE.erl:741
  %% Aliased:
  %%    _30
  _80 = match_fail `badmatch`, _30

  %% Unique:
  %%    _80
  _255 = succeeded:body _80
  br ^1

84:
  %% map_SUITE.erl:740
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_map_get/1-',1}}
  _81 = match_fail `function_clause`, _0

  %% Unique:
  %%    _81
  _256 = succeeded:body _81
  br ^1

1:
  _82 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _82
}

%% map_SUITE.erl:763
%% Counter = 16
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{nonempty_list(97..99)=>1..5}
%%    _1 =>
%%     nonempty_list(97..99)
%%    _2 =>
%%     1..2
function `map_SUITE`:`check_map_value`(_0, _1, _2) {
0:
  %% map_SUITE.erl:763
  %% Argument types:
  %%    _1 => nonempty_list(97..99)
  %%    _0 => #{nonempty_list(97..99)=>1..5}
  %% Unique:
  %%    _0, 
  %%    _1
  _3 = bif:map_get _1, _0

  %% Unique:
  %%    _3
  _14 = succeeded:guard _3
  br _14, ^14, ^12

14:
  %% Argument types:
  %%    _3 => 1..5
  %%    _2 => 1..2
  %% Unique:
  %%    _2, 
  %%    _3
  _15 = bif:'=:=' _3, _2
  ret _15

12:
  %% Result type:
  %%    'false'
  ret `false`
}

%% map_SUITE.erl:766
%% Counter = 59
%% bs_ensure_opt: true
function `map_SUITE`:`t_is_map`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _27 = bif:is_list _0
  br _27, ^27, ^26

27:
  %% map_SUITE.erl:776
  %% Result type:
  %%    'error' | 'ok'
  _13 = call (`do_t_is_map`/2), `map`, `#{}`

  %% Unique:
  %%    _13
  _28 = succeeded:body _13
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _13 => 'error' | 'ok'
  %% Unique:
  %%    _13
  _56 = bif:'=:=' _13, `ok`
  br _56, ^55, ^30

55:
  %% map_SUITE.erl:777
  %% Result type:
  %%    'error'
  _14 = call (`do_t_is_map`/2), `map`, `{a,b,c}`

  %% Unique:
  %%    _14
  _31 = succeeded:body _14
  br _31, ^52, ^1

52:
  %% map_SUITE.erl:778
  %% Result type:
  %%    'error' | 'ok'
  _15 = call (`do_t_is_map`/2), `number`, `42`

  %% Unique:
  %%    _15
  _34 = succeeded:body _15
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _15 => 'error' | 'ok'
  %% Unique:
  %%    _15
  _50 = bif:'=:=' _15, `ok`
  br _50, ^49, ^36

49:
  %% map_SUITE.erl:779
  %% Result type:
  %%    'error' | 'ok'
  _16 = call (`do_t_is_map`/2), `number`, `42.0`

  %% Unique:
  %%    _16
  _37 = succeeded:body _16
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    _16 => 'error' | 'ok'
  %% Unique:
  %%    _16
  _47 = bif:'=:=' _16, `ok`
  br _47, ^46, ^39

46:
  %% map_SUITE.erl:780
  %% Result type:
  %%    'error'
  _17 = call (`do_t_is_map`/2), `number`, `{a,b,c}`

  %% Unique:
  %%    _17
  _40 = succeeded:body _17
  br _40, ^43, ^1

43:
  %% Result type:
  %%    'ok'
  ret `ok`

39:
  %% map_SUITE.erl:779
  _19 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _19
  _48 = succeeded:body _19
  br ^1

36:
  %% map_SUITE.erl:778
  _20 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _20
  _51 = succeeded:body _20
  br ^1

30:
  %% map_SUITE.erl:776
  _22 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _22
  _57 = succeeded:body _22
  br ^1

26:
  %% map_SUITE.erl:766
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_is_map/1-',1}}
  _23 = match_fail `function_clause`, _0

  %% Unique:
  %%    _23
  _58 = succeeded:body _23
  br ^1

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% map_SUITE.erl:783
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'map' | 'number'
%%    _1 =>
%%     number(42) | {'a', 'b', 'c'} | #{}
function `map_SUITE`:`do_t_is_map`(_0, _1) {
0:
  %% Unique:
  %%    _0
  _22 = bif:'=:=' _0, `number`
  br _22, ^15, ^14

15:
  %% map_SUITE.erl:790
  %% Argument types:
  %%    _1 => number(42) | {'a', 'b', 'c'} | #{}
  %% Unique:
  %%    _1
  _6 = bif:is_number _1
  br _6, ^20, ^19

14:
  %% map_SUITE.erl:788
  %% Argument types:
  %%    _1 => number(42) | {'a', 'b', 'c'} | #{}
  %% Unique:
  %%    _1
  _7 = bif:is_map _1
  br _7, ^20, ^19

20:
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  %% Result type:
  %%    'error'
  ret `error`
}

%% map_SUITE.erl:798
%% Counter = 23
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_literals`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _12 = bif:is_list _0
  br _12, ^12, ^11

12:
  %% map_SUITE.erl:800
  _4 = call (`loop_update_literals_x_q`/2), `#{q => 4,x => 1,y => 2,z => 3}`, `[{"a","1"},{"b","2"},{"c","3"},{"d","4"}]`

  %% Aliased:
  %%    _4
  _13 = succeeded:body _4
  br _13, ^13, ^1

13:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _20 = bif:is_map _4
  br _20, ^20, ^15

20:
  %% Argument types:
  %%    _4 => map()
  %% Aliased:
  %%    _4
  _6 = get_map_element _4, `q`

  %% Aliased:
  %%    _6
  _16 = succeeded:guard _6
  br _16, ^16, ^15

16:
  %% Argument types:
  %%    _4 => map()
  %% Aliased:
  %%    _4
  _5 = get_map_element _4, `x`

  %% Aliased:
  %%    _5
  _17 = succeeded:guard _5
  br _17, ^17, ^15

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _19 = bif:'=:=' _6, `"4"`
  br _19, ^19, ^15

19:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _18 = bif:'=:=' _5, `"d"`
  br _18, ^18, ^15

18:
  %% Result type:
  %%    'ok'
  ret `ok`

15:
  %% map_SUITE.erl:800
  %% Aliased:
  %%    _4
  _7 = match_fail `badmatch`, _4

  %% Unique:
  %%    _7
  _21 = succeeded:body _7
  br ^1

11:
  %% map_SUITE.erl:798
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_literals/1-',1}}
  _8 = match_fail `function_clause`, _0

  %% Unique:
  %%    _8
  _22 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% map_SUITE.erl:805
%% Counter = 130
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_literals_large`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _65 = bif:is_list _0
  br _65, ^65, ^64

65:
  %% map_SUITE.erl:806
  _1 = call (`id`/1), `a0`

  %% Aliased:
  %%    _1
  _66 = succeeded:body _1
  br _66, ^66, ^1

66:
  %% map_SUITE.erl:806
  _2 = call (`id`/1), `"c0"`

  %% Aliased:
  %%    _2
  _67 = succeeded:body _2
  br _67, ^67, ^1

67:
  %% map_SUITE.erl:806
  _3 = call (`id`/1), `"e0"`

  %% Aliased:
  %%    _3
  _68 = succeeded:body _3
  br _68, ^68, ^1

68:
  %% map_SUITE.erl:807
  _4 = call (`id`/1), `a1`

  %% Aliased:
  %%    _4
  _69 = succeeded:body _4
  br _69, ^69, ^1

69:
  %% map_SUITE.erl:807
  _5 = call (`id`/1), `"c1"`

  %% Aliased:
  %%    _5
  _70 = succeeded:body _5
  br _70, ^70, ^1

70:
  %% map_SUITE.erl:807
  _6 = call (`id`/1), `"e1"`

  %% Aliased:
  %%    _6
  _71 = succeeded:body _6
  br _71, ^71, ^1

71:
  %% map_SUITE.erl:808
  _7 = call (`id`/1), `a2`

  %% Aliased:
  %%    _7
  _72 = succeeded:body _7
  br _72, ^72, ^1

72:
  %% map_SUITE.erl:808
  _8 = call (`id`/1), `"c2"`

  %% Aliased:
  %%    _8
  _73 = succeeded:body _8
  br _73, ^73, ^1

73:
  %% map_SUITE.erl:808
  _9 = call (`id`/1), `"e2"`

  %% Aliased:
  %%    _9
  _74 = succeeded:body _9
  br _74, ^74, ^1

74:
  %% map_SUITE.erl:809
  _10 = call (`id`/1), `a3`

  %% Aliased:
  %%    _10
  _75 = succeeded:body _10
  br _75, ^75, ^1

75:
  %% map_SUITE.erl:809
  _11 = call (`id`/1), `"c3"`

  %% Aliased:
  %%    _11
  _76 = succeeded:body _11
  br _76, ^76, ^1

76:
  %% map_SUITE.erl:809
  _12 = call (`id`/1), `"e3"`

  %% Aliased:
  %%    _12
  _77 = succeeded:body _12
  br _77, ^77, ^1

77:
  %% map_SUITE.erl:810
  _13 = call (`id`/1), `a4`

  %% Aliased:
  %%    _13
  _78 = succeeded:body _13
  br _78, ^78, ^1

78:
  %% map_SUITE.erl:810
  _14 = call (`id`/1), `"c4"`

  %% Aliased:
  %%    _14
  _79 = succeeded:body _14
  br _79, ^79, ^1

79:
  %% map_SUITE.erl:810
  _15 = call (`id`/1), `"e4"`

  %% Aliased:
  %%    _15
  _80 = succeeded:body _15
  br _80, ^80, ^1

80:
  %% map_SUITE.erl:812
  _16 = call (`id`/1), `a5`

  %% Aliased:
  %%    _16
  _81 = succeeded:body _16
  br _81, ^81, ^1

81:
  %% map_SUITE.erl:812
  _17 = call (`id`/1), `"c5"`

  %% Aliased:
  %%    _17
  _82 = succeeded:body _17
  br _82, ^82, ^1

82:
  %% map_SUITE.erl:812
  _18 = call (`id`/1), `"e5"`

  %% Aliased:
  %%    _18
  _83 = succeeded:body _18
  br _83, ^83, ^1

83:
  %% map_SUITE.erl:813
  _19 = call (`id`/1), `a6`

  %% Aliased:
  %%    _19
  _84 = succeeded:body _19
  br _84, ^84, ^1

84:
  %% map_SUITE.erl:813
  _20 = call (`id`/1), `"c6"`

  %% Aliased:
  %%    _20
  _85 = succeeded:body _20
  br _85, ^85, ^1

85:
  %% map_SUITE.erl:813
  _21 = call (`id`/1), `"e6"`

  %% Aliased:
  %%    _21
  _86 = succeeded:body _21
  br _86, ^86, ^1

86:
  %% map_SUITE.erl:814
  _22 = call (`id`/1), `a7`

  %% Aliased:
  %%    _22
  _87 = succeeded:body _22
  br _87, ^87, ^1

87:
  %% map_SUITE.erl:814
  _23 = call (`id`/1), `"c7"`

  %% Aliased:
  %%    _23
  _88 = succeeded:body _23
  br _88, ^88, ^1

88:
  %% map_SUITE.erl:814
  _24 = call (`id`/1), `"e7"`

  %% Aliased:
  %%    _24
  _89 = succeeded:body _24
  br _89, ^89, ^1

89:
  %% map_SUITE.erl:815
  _25 = call (`id`/1), `a8`

  %% Aliased:
  %%    _25
  _90 = succeeded:body _25
  br _90, ^90, ^1

90:
  %% map_SUITE.erl:815
  _26 = call (`id`/1), `"c8"`

  %% Aliased:
  %%    _26
  _91 = succeeded:body _26
  br _91, ^91, ^1

91:
  %% map_SUITE.erl:815
  _27 = call (`id`/1), `"e8"`

  %% Aliased:
  %%    _27
  _92 = succeeded:body _27
  br _92, ^92, ^1

92:
  %% map_SUITE.erl:816
  _28 = call (`id`/1), `a9`

  %% Aliased:
  %%    _28
  _93 = succeeded:body _28
  br _93, ^93, ^1

93:
  %% map_SUITE.erl:816
  _29 = call (`id`/1), `"c9"`

  %% Aliased:
  %%    _29
  _94 = succeeded:body _29
  br _94, ^94, ^1

94:
  %% map_SUITE.erl:816
  _30 = call (`id`/1), `"e9"`

  %% Aliased:
  %%    _30
  _95 = succeeded:body _30
  br _95, ^95, ^1

95:
  %% map_SUITE.erl:818
  _31 = call (`id`/1), `fb0`

  %% Aliased:
  %%    _31
  _96 = succeeded:body _31
  br _96, ^96, ^1

96:
  %% map_SUITE.erl:818
  _32 = call (`id`/1), `"fc0"`

  %% Aliased:
  %%    _32
  _97 = succeeded:body _32
  br _97, ^97, ^1

97:
  %% map_SUITE.erl:819
  _33 = call (`id`/1), `fb1`

  %% Aliased:
  %%    _33
  _98 = succeeded:body _33
  br _98, ^98, ^1

98:
  %% map_SUITE.erl:819
  _34 = call (`id`/1), `"fc1"`

  %% Aliased:
  %%    _34
  _99 = succeeded:body _34
  br _99, ^99, ^1

99:
  %% map_SUITE.erl:820
  _35 = call (`id`/1), `fb2`

  %% Aliased:
  %%    _35
  _100 = succeeded:body _35
  br _100, ^100, ^1

100:
  %% map_SUITE.erl:820
  _36 = call (`id`/1), `"fc2"`

  %% Aliased:
  %%    _36
  _101 = succeeded:body _36
  br _101, ^101, ^1

101:
  %% map_SUITE.erl:821
  _37 = call (`id`/1), `fb3`

  %% Aliased:
  %%    _37
  _102 = succeeded:body _37
  br _102, ^102, ^1

102:
  %% map_SUITE.erl:821
  _38 = call (`id`/1), `"fc3"`

  %% Aliased:
  %%    _38
  _103 = succeeded:body _38
  br _103, ^103, ^1

103:
  %% map_SUITE.erl:822
  _39 = call (`id`/1), `fb4`

  %% Aliased:
  %%    _39
  _104 = succeeded:body _39
  br _104, ^104, ^1

104:
  %% map_SUITE.erl:822
  _40 = call (`id`/1), `"fc4"`

  %% Aliased:
  %%    _40
  _105 = succeeded:body _40
  br _105, ^105, ^1

105:
  %% map_SUITE.erl:824
  _41 = call (`id`/1), `fb5`

  %% Aliased:
  %%    _41
  _106 = succeeded:body _41
  br _106, ^106, ^1

106:
  %% map_SUITE.erl:824
  _42 = call (`id`/1), `"fc5"`

  %% Aliased:
  %%    _42
  _107 = succeeded:body _42
  br _107, ^107, ^1

107:
  %% map_SUITE.erl:825
  _43 = call (`id`/1), `fb6`

  %% Aliased:
  %%    _43
  _108 = succeeded:body _43
  br _108, ^108, ^1

108:
  %% map_SUITE.erl:825
  _44 = call (`id`/1), `"fc6"`

  %% Aliased:
  %%    _44
  _109 = succeeded:body _44
  br _109, ^109, ^1

109:
  %% map_SUITE.erl:826
  _45 = call (`id`/1), `fb7`

  %% Aliased:
  %%    _45
  _110 = succeeded:body _45
  br _110, ^110, ^1

110:
  %% map_SUITE.erl:826
  _46 = call (`id`/1), `"fc7"`

  %% Aliased:
  %%    _46
  _111 = succeeded:body _46
  br _111, ^111, ^1

111:
  %% map_SUITE.erl:827
  _47 = call (`id`/1), `fb8`

  %% Aliased:
  %%    _47
  _112 = succeeded:body _47
  br _112, ^112, ^1

112:
  %% map_SUITE.erl:827
  _48 = call (`id`/1), `"fc8"`

  %% Aliased:
  %%    _48
  _113 = succeeded:body _48
  br _113, ^113, ^1

113:
  %% map_SUITE.erl:828
  _49 = call (`id`/1), `fb9`

  %% Aliased:
  %%    _49
  _114 = succeeded:body _49
  br _114, ^114, ^1

114:
  %% map_SUITE.erl:828
  _50 = call (`id`/1), `"fc9"`

  %% Aliased:
  %%    _50
  _115 = succeeded:body _50
  br _115, ^115, ^1

115:
  %% map_SUITE.erl:830
  _51 = call (`id`/1), `"small map key 1"`

  %% Aliased:
  %%    _51
  _116 = succeeded:body _51
  br _116, ^116, ^1

116:
  %% map_SUITE.erl:856
  _52 = call (`id`/1), `"large map key 2"`

  %% Aliased:
  %%    _52
  _117 = succeeded:body _52
  br _117, ^117, ^1

117:
  %% map_SUITE.erl:806
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3, 
  %%    _4, 
  %%    _5, 
  %%    _6, 
  %%    _7, 
  %%    _8, 
  %%    _9, 
  %%    _10, 
  %%    _11, 
  %%    _12, 
  %%    _13, 
  %%    _14, 
  %%    _15, 
  %%    _16, 
  %%    _17, 
  %%    _18, 
  %%    _19, 
  %%    _20, 
  %%    _21, 
  %%    _22, 
  %%    _23, 
  %%    _24, 
  %%    _25, 
  %%    _26, 
  %%    _27, 
  %%    _28, 
  %%    _29, 
  %%    _30, 
  %%    _31, 
  %%    _32, 
  %%    _33, 
  %%    _34, 
  %%    _35, 
  %%    _36, 
  %%    _37, 
  %%    _38, 
  %%    _39, 
  %%    _40, 
  %%    _41, 
  %%    _42, 
  %%    _43, 
  %%    _44, 
  %%    _45, 
  %%    _46, 
  %%    _47, 
  %%    _48, 
  %%    _49, 
  %%    _50, 
  %%    _51, 
  %%    _52
  _53 = put_map `assoc`, `#{}`, `10.0`, `fa0`, `10`, _1, `11.0`, `fa1`, `11`, _4, `12.0`, `fa2`, `12`, _7, `13.0`, `fa3`, `13`, _10, `14.0`, `fa4`, `14`, _13, `15.0`, `fa5`, `15`, _16, `16.0`, `fa6`, `16`, _19, `17.0`, `fa7`, `17`, _22, `18.0`, `fa8`, `18`, _25, `19.0`, `fa9`, `19`, _28, `20`, `b0`, `20.0`, _31, `21`, `b1`, `21.0`, _33, `22`, `b2`, `22.0`, _35, `23`, `b3`, `23.0`, _37, `24`, `b4`, `24.0`, _39, `25`, `b5`, `25.0`, _41, `26`, `b6`, `26.0`, _43, `27`, `b7`, `27.0`, _45, `28`, `b8`, `28.0`, _47, `29`, `b9`, `29.0`, _49, `30`, _2, `30.0`, _32, `31`, _5, `31.0`, _34, `32`, _8, `32.0`, _36, `33`, _11, `33.0`, _38, `34`, _14, `34.0`, _40, `35`, _17, `35.0`, _42, `36`, _20, `36.0`, _44, `37`, _23, `37.0`, _46, `38`, _26, `38.0`, _48, `39`, _29, `39.0`, _50, `{["00"]}`, `"10"`, `{["01"]}`, `"11"`, `{["02"]}`, `"12"`, `{["03"]}`, `"13"`, `{["04"]}`, `"14"`, `{["05"]}`, `"15"`, `{["06"]}`, `"16"`, `{["07"]}`, `"17"`, `{["08"]}`, `"18"`, `{["09"]}`, `"19"`, `#{map => key,one => small}`, _51, `#{map => key,second => small}`, `"small map key 2"`, `#{map => key,third => small}`, `"small map key 3"`, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`, `"large map key 1"`, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
   19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
   28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
   35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
   k36 => "c6",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`, _52, `"40"`, `"d0"`, `"41"`, `"d1"`, `"42"`, `"d2"`, `"43"`, `"d3"`, `"44"`, `"d4"`, `"45"`, `"d5"`, `"46"`, `"d6"`, `"47"`, `"d7"`, `"48"`, `"d8"`, `"49"`, `"d9"`, `<<"50">>`, _3, `<<"51">>`, _6, `<<"52">>`, _9, `<<"53">>`, _12, `<<"54">>`, _15, `<<"55">>`, _18, `<<"56">>`, _21, `<<"57">>`, _24, `<<"58">>`, _27, `<<"59">>`, _30

  %% map_SUITE.erl:806
  %% Aliased:
  %%    _53
  Map = call (`id`/1), _53

  %% Aliased:
  %%    Map
  _118 = succeeded:body Map
  br _118, ^118, ^1

118:
  %% map_SUITE.erl:858
  %% Aliased:
  %%    Map
  _57 = call (`loop_update_literals_x_q`/2), Map, `[{"a","1"},{"b","2"},{"c","3"},{"d","4"}]`

  %% Aliased:
  %%    _57
  _119 = succeeded:body _57
  br _119, ^119, ^1

119:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _126 = bif:is_map _57
  br _126, ^126, ^121

126:
  %% Argument types:
  %%    _57 => map()
  %% Aliased:
  %%    _57
  _59 = get_map_element _57, `q`

  %% Aliased:
  %%    _59
  _122 = succeeded:guard _59
  br _122, ^122, ^121

122:
  %% Argument types:
  %%    _57 => map()
  %% Aliased:
  %%    _57
  _58 = get_map_element _57, `x`

  %% Aliased:
  %%    _58
  _123 = succeeded:guard _58
  br _123, ^123, ^121

123:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _125 = bif:'=:=' _59, `"4"`
  br _125, ^125, ^121

125:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _124 = bif:'=:=' _58, `"d"`
  br _124, ^124, ^121

124:
  %% Result type:
  %%    'ok'
  ret `ok`

121:
  %% map_SUITE.erl:858
  %% Aliased:
  %%    _57
  _60 = match_fail `badmatch`, _57

  %% Unique:
  %%    _60
  _127 = succeeded:body _60
  br ^1

64:
  %% map_SUITE.erl:805
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_literals_large/1-',1}}
  _61 = match_fail `function_clause`, _0

  %% Unique:
  %%    _61
  _128 = succeeded:body _61
  br ^1

1:
  _62 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _62
}

%% map_SUITE.erl:865
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     list({nonempty_list(97..100), nonempty_list(49..52)})
function `map_SUITE`:`loop_update_literals_x_q`(_0, _1) {
0:
  %% Unique:
  %%    _1
  _27 = is_nonempty_list _1
  br _27, ^27, ^28

27:
  %% Argument types:
  %%    _1 => nonempty_list({nonempty_list(97..100), nonempty_list(49..52)})
  %% Unique:
  %%    _1
  _7 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_list({nonempty_list(97..100), nonempty_list(49..52)})
  %% Unique:
  %%    _1
  _6 = get_tl _1

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _20 = bif:is_map _0
  br _20, ^20, ^19

20:
  %% Argument types:
  %%    _7 => {nonempty_list(97..100), nonempty_list(49..52)}
  %% Unique:
  %%    _7
  _9 = get_tuple_element _7, `0`

  %% Argument types:
  %%    _7 => {nonempty_list(97..100), nonempty_list(49..52)}
  %% Unique:
  %%    _7
  _8 = get_tuple_element _7, `1`

  %% map_SUITE.erl:867
  %% Aliased:
  %%    _0, 
  %%    _8, 
  %%    _9
  _10 = put_map `assoc`, _0, `q`, _8, `x`, _9

  %% map_SUITE.erl:867
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _6
  _12 = call (`loop_update_literals_x_q`/2), _10, _6

  %% Aliased:
  %%    _12
  _22 = succeeded:body _12
  br _22, ^22, ^1

22:
  %% Aliased:
  %%    _12
  ret _12

19:
  %% map_SUITE.erl:867
  %% Aliased:
  %%    _0
  _11 = match_fail `badmap`, _0

  %% Unique:
  %%    _11
  _21 = succeeded:body _11
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14

28:
  %% Aliased:
  %%    _0
  ret _0
}

%% map_SUITE.erl:870
%% Counter = 71
%% bs_ensure_opt: true
function `map_SUITE`:`t_match_and_update_literals`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _30 = bif:is_list _0
  br _30, ^30, ^29

30:
  %% map_SUITE.erl:874
  _12 = call (`loop_match_and_update_literals_x_q`/2), `#{q => 1,x => 0,y => "untouched",z => "also untouched",
   #{map => key,"one" => small} => "small map key 1"}`, `[{1,2},{3,4},{5,6},{7,8}]`

  %% Aliased:
  %%    _12
  _31 = succeeded:body _12
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _68 = bif:is_map _12
  br _68, ^68, ^33

68:
  %% Argument types:
  %%    _12 => map()
  %% Aliased:
  %%    _12
  _16 = get_map_element _12, `q`

  %% Aliased:
  %%    _16
  _34 = succeeded:guard _16
  br _34, ^34, ^33

34:
  %% Argument types:
  %%    _12 => map()
  %% Aliased:
  %%    _12
  _15 = get_map_element _12, `x`

  %% Aliased:
  %%    _15
  _35 = succeeded:guard _15
  br _35, ^35, ^33

35:
  %% Argument types:
  %%    _12 => map()
  %% Aliased:
  %%    _12
  _14 = get_map_element _12, `y`

  %% Aliased:
  %%    _14
  _36 = succeeded:guard _14
  br _36, ^36, ^33

36:
  %% Argument types:
  %%    _12 => map()
  %% Aliased:
  %%    _12
  _13 = get_map_element _12, `z`

  %% Aliased:
  %%    _13
  _37 = succeeded:guard _13
  br _37, ^37, ^33

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _67 = bif:'=:=' _16, `21`
  br _67, ^66, ^33

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _65 = bif:'=:=' _15, `16`
  br _65, ^64, ^33

64:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _63 = bif:'=:=' _14, `"untouched"`
  br _63, ^63, ^33

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _62 = bif:'=:=' _13, `"also untouched"`
  br _62, ^62, ^33

62:
  %% map_SUITE.erl:877
  M0 = call (`id`/1), `#{4 => number,18446744073709551629 => wat,int => 3,"hi" => "hello",
   <<"key">> => <<"value">>}`

  %% Aliased:
  %%    M0
  _38 = succeeded:body M0
  br _38, ^38, ^1

38:
  %% map_SUITE.erl:879
  M1 = call (`id`/1), `#{}`

  %% Aliased:
  %%    M1
  _39 = succeeded:body M1
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M1
  _42 = bif:is_map M1
  br _42, ^42, ^41

42:
  %% map_SUITE.erl:880
  %% Aliased:
  %%    M1
  _19 = put_map `assoc`, M1, `4`, `number`, `18446744073709551629`, `wat`, `int`, `3`, `"hi"`, `"hello"`, `<<"key">>`, `<<"value">>`

  %% Argument types:
  %%    _19 => map()
  %% Aliased:
  %%    _19, 
  %%    M0
  _46 = bif:'=:=' _19, M0
  br _46, ^55, ^45

55:
  %% Result type:
  %%    'ok'
  ret `ok`

45:
  %% map_SUITE.erl:882
  %% Aliased:
  %%    _19
  _24 = match_fail `badmatch`, _19

  %% Unique:
  %%    _24
  _61 = succeeded:body _24
  br ^1

41:
  %% map_SUITE.erl:880
  %% Aliased:
  %%    M1
  _20 = match_fail `badmap`, M1

  %% Unique:
  %%    _20
  _43 = succeeded:body _20
  br ^1

33:
  %% map_SUITE.erl:874
  %% Aliased:
  %%    _12
  _25 = match_fail `badmatch`, _12

  %% Unique:
  %%    _25
  _69 = succeeded:body _25
  br ^1

29:
  %% map_SUITE.erl:870
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_match_and_update_literals/1-',1}}
  _26 = match_fail `function_clause`, _0

  %% Unique:
  %%    _26
  _70 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% map_SUITE.erl:887
%% Counter = 193
%% bs_ensure_opt: true
function `map_SUITE`:`t_match_and_update_literals_large`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _88 = bif:is_list _0
  br _88, ^88, ^87

88:
  %% map_SUITE.erl:888
  _1 = call (`id`/1), `a0`

  %% Aliased:
  %%    _1
  _89 = succeeded:body _1
  br _89, ^89, ^1

89:
  %% map_SUITE.erl:888
  _2 = call (`id`/1), `"c0"`

  %% Aliased:
  %%    _2
  _90 = succeeded:body _2
  br _90, ^90, ^1

90:
  %% map_SUITE.erl:888
  _3 = call (`id`/1), `"e0"`

  %% Aliased:
  %%    _3
  _91 = succeeded:body _3
  br _91, ^91, ^1

91:
  %% map_SUITE.erl:889
  _4 = call (`id`/1), `a1`

  %% Aliased:
  %%    _4
  _92 = succeeded:body _4
  br _92, ^92, ^1

92:
  %% map_SUITE.erl:889
  _5 = call (`id`/1), `"c1"`

  %% Aliased:
  %%    _5
  _93 = succeeded:body _5
  br _93, ^93, ^1

93:
  %% map_SUITE.erl:889
  _6 = call (`id`/1), `"e1"`

  %% Aliased:
  %%    _6
  _94 = succeeded:body _6
  br _94, ^94, ^1

94:
  %% map_SUITE.erl:890
  _7 = call (`id`/1), `a2`

  %% Aliased:
  %%    _7
  _95 = succeeded:body _7
  br _95, ^95, ^1

95:
  %% map_SUITE.erl:890
  _8 = call (`id`/1), `"c2"`

  %% Aliased:
  %%    _8
  _96 = succeeded:body _8
  br _96, ^96, ^1

96:
  %% map_SUITE.erl:890
  _9 = call (`id`/1), `"e2"`

  %% Aliased:
  %%    _9
  _97 = succeeded:body _9
  br _97, ^97, ^1

97:
  %% map_SUITE.erl:891
  _10 = call (`id`/1), `a3`

  %% Aliased:
  %%    _10
  _98 = succeeded:body _10
  br _98, ^98, ^1

98:
  %% map_SUITE.erl:891
  _11 = call (`id`/1), `"c3"`

  %% Aliased:
  %%    _11
  _99 = succeeded:body _11
  br _99, ^99, ^1

99:
  %% map_SUITE.erl:891
  _12 = call (`id`/1), `"e3"`

  %% Aliased:
  %%    _12
  _100 = succeeded:body _12
  br _100, ^100, ^1

100:
  %% map_SUITE.erl:892
  _13 = call (`id`/1), `a4`

  %% Aliased:
  %%    _13
  _101 = succeeded:body _13
  br _101, ^101, ^1

101:
  %% map_SUITE.erl:892
  _14 = call (`id`/1), `"c4"`

  %% Aliased:
  %%    _14
  _102 = succeeded:body _14
  br _102, ^102, ^1

102:
  %% map_SUITE.erl:892
  _15 = call (`id`/1), `"e4"`

  %% Aliased:
  %%    _15
  _103 = succeeded:body _15
  br _103, ^103, ^1

103:
  %% map_SUITE.erl:894
  _16 = call (`id`/1), `a5`

  %% Aliased:
  %%    _16
  _104 = succeeded:body _16
  br _104, ^104, ^1

104:
  %% map_SUITE.erl:894
  _17 = call (`id`/1), `"c5"`

  %% Aliased:
  %%    _17
  _105 = succeeded:body _17
  br _105, ^105, ^1

105:
  %% map_SUITE.erl:894
  _18 = call (`id`/1), `"e5"`

  %% Aliased:
  %%    _18
  _106 = succeeded:body _18
  br _106, ^106, ^1

106:
  %% map_SUITE.erl:895
  _19 = call (`id`/1), `a6`

  %% Aliased:
  %%    _19
  _107 = succeeded:body _19
  br _107, ^107, ^1

107:
  %% map_SUITE.erl:895
  _20 = call (`id`/1), `"c6"`

  %% Aliased:
  %%    _20
  _108 = succeeded:body _20
  br _108, ^108, ^1

108:
  %% map_SUITE.erl:895
  _21 = call (`id`/1), `"e6"`

  %% Aliased:
  %%    _21
  _109 = succeeded:body _21
  br _109, ^109, ^1

109:
  %% map_SUITE.erl:896
  _22 = call (`id`/1), `a7`

  %% Aliased:
  %%    _22
  _110 = succeeded:body _22
  br _110, ^110, ^1

110:
  %% map_SUITE.erl:896
  _23 = call (`id`/1), `"c7"`

  %% Aliased:
  %%    _23
  _111 = succeeded:body _23
  br _111, ^111, ^1

111:
  %% map_SUITE.erl:896
  _24 = call (`id`/1), `"e7"`

  %% Aliased:
  %%    _24
  _112 = succeeded:body _24
  br _112, ^112, ^1

112:
  %% map_SUITE.erl:897
  _25 = call (`id`/1), `a8`

  %% Aliased:
  %%    _25
  _113 = succeeded:body _25
  br _113, ^113, ^1

113:
  %% map_SUITE.erl:897
  _26 = call (`id`/1), `"c8"`

  %% Aliased:
  %%    _26
  _114 = succeeded:body _26
  br _114, ^114, ^1

114:
  %% map_SUITE.erl:897
  _27 = call (`id`/1), `"e8"`

  %% Aliased:
  %%    _27
  _115 = succeeded:body _27
  br _115, ^115, ^1

115:
  %% map_SUITE.erl:898
  _28 = call (`id`/1), `a9`

  %% Aliased:
  %%    _28
  _116 = succeeded:body _28
  br _116, ^116, ^1

116:
  %% map_SUITE.erl:898
  _29 = call (`id`/1), `"c9"`

  %% Aliased:
  %%    _29
  _117 = succeeded:body _29
  br _117, ^117, ^1

117:
  %% map_SUITE.erl:898
  _30 = call (`id`/1), `"e9"`

  %% Aliased:
  %%    _30
  _118 = succeeded:body _30
  br _118, ^118, ^1

118:
  %% map_SUITE.erl:900
  _31 = call (`id`/1), `fb0`

  %% Aliased:
  %%    _31
  _119 = succeeded:body _31
  br _119, ^119, ^1

119:
  %% map_SUITE.erl:900
  _32 = call (`id`/1), `"fc0"`

  %% Aliased:
  %%    _32
  _120 = succeeded:body _32
  br _120, ^120, ^1

120:
  %% map_SUITE.erl:901
  _33 = call (`id`/1), `fb1`

  %% Aliased:
  %%    _33
  _121 = succeeded:body _33
  br _121, ^121, ^1

121:
  %% map_SUITE.erl:901
  _34 = call (`id`/1), `"fc1"`

  %% Aliased:
  %%    _34
  _122 = succeeded:body _34
  br _122, ^122, ^1

122:
  %% map_SUITE.erl:902
  _35 = call (`id`/1), `fb2`

  %% Aliased:
  %%    _35
  _123 = succeeded:body _35
  br _123, ^123, ^1

123:
  %% map_SUITE.erl:902
  _36 = call (`id`/1), `"fc2"`

  %% Aliased:
  %%    _36
  _124 = succeeded:body _36
  br _124, ^124, ^1

124:
  %% map_SUITE.erl:903
  _37 = call (`id`/1), `fb3`

  %% Aliased:
  %%    _37
  _125 = succeeded:body _37
  br _125, ^125, ^1

125:
  %% map_SUITE.erl:903
  _38 = call (`id`/1), `"fc3"`

  %% Aliased:
  %%    _38
  _126 = succeeded:body _38
  br _126, ^126, ^1

126:
  %% map_SUITE.erl:904
  _39 = call (`id`/1), `fb4`

  %% Aliased:
  %%    _39
  _127 = succeeded:body _39
  br _127, ^127, ^1

127:
  %% map_SUITE.erl:904
  _40 = call (`id`/1), `"fc4"`

  %% Aliased:
  %%    _40
  _128 = succeeded:body _40
  br _128, ^128, ^1

128:
  %% map_SUITE.erl:906
  _41 = call (`id`/1), `fb5`

  %% Aliased:
  %%    _41
  _129 = succeeded:body _41
  br _129, ^129, ^1

129:
  %% map_SUITE.erl:906
  _42 = call (`id`/1), `"fc5"`

  %% Aliased:
  %%    _42
  _130 = succeeded:body _42
  br _130, ^130, ^1

130:
  %% map_SUITE.erl:907
  _43 = call (`id`/1), `fb6`

  %% Aliased:
  %%    _43
  _131 = succeeded:body _43
  br _131, ^131, ^1

131:
  %% map_SUITE.erl:907
  _44 = call (`id`/1), `"fc6"`

  %% Aliased:
  %%    _44
  _132 = succeeded:body _44
  br _132, ^132, ^1

132:
  %% map_SUITE.erl:908
  _45 = call (`id`/1), `fb7`

  %% Aliased:
  %%    _45
  _133 = succeeded:body _45
  br _133, ^133, ^1

133:
  %% map_SUITE.erl:908
  _46 = call (`id`/1), `"fc7"`

  %% Aliased:
  %%    _46
  _134 = succeeded:body _46
  br _134, ^134, ^1

134:
  %% map_SUITE.erl:909
  _47 = call (`id`/1), `fb8`

  %% Aliased:
  %%    _47
  _135 = succeeded:body _47
  br _135, ^135, ^1

135:
  %% map_SUITE.erl:909
  _48 = call (`id`/1), `"fc8"`

  %% Aliased:
  %%    _48
  _136 = succeeded:body _48
  br _136, ^136, ^1

136:
  %% map_SUITE.erl:910
  _49 = call (`id`/1), `fb9`

  %% Aliased:
  %%    _49
  _137 = succeeded:body _49
  br _137, ^137, ^1

137:
  %% map_SUITE.erl:910
  _50 = call (`id`/1), `"fc9"`

  %% Aliased:
  %%    _50
  _138 = succeeded:body _50
  br _138, ^138, ^1

138:
  %% map_SUITE.erl:914
  _51 = call (`id`/1), `"small map key 1"`

  %% Aliased:
  %%    _51
  _139 = succeeded:body _51
  br _139, ^139, ^1

139:
  %% map_SUITE.erl:940
  _52 = call (`id`/1), `"large map key 2"`

  %% Aliased:
  %%    _52
  _140 = succeeded:body _52
  br _140, ^140, ^1

140:
  %% map_SUITE.erl:888
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3, 
  %%    _4, 
  %%    _5, 
  %%    _6, 
  %%    _7, 
  %%    _8, 
  %%    _9, 
  %%    _10, 
  %%    _11, 
  %%    _12, 
  %%    _13, 
  %%    _14, 
  %%    _15, 
  %%    _16, 
  %%    _17, 
  %%    _18, 
  %%    _19, 
  %%    _20, 
  %%    _21, 
  %%    _22, 
  %%    _23, 
  %%    _24, 
  %%    _25, 
  %%    _26, 
  %%    _27, 
  %%    _28, 
  %%    _29, 
  %%    _30, 
  %%    _31, 
  %%    _32, 
  %%    _33, 
  %%    _34, 
  %%    _35, 
  %%    _36, 
  %%    _37, 
  %%    _38, 
  %%    _39, 
  %%    _40, 
  %%    _41, 
  %%    _42, 
  %%    _43, 
  %%    _44, 
  %%    _45, 
  %%    _46, 
  %%    _47, 
  %%    _48, 
  %%    _49, 
  %%    _50, 
  %%    _51, 
  %%    _52
  _53 = put_map `assoc`, `#{}`, `10.0`, `fa0`, `10`, _1, `11.0`, `fa1`, `11`, _4, `12.0`, `fa2`, `12`, _7, `13.0`, `fa3`, `13`, _10, `14.0`, `fa4`, `14`, _13, `15.0`, `fa5`, `15`, _16, `16.0`, `fa6`, `16`, _19, `17.0`, `fa7`, `17`, _22, `18.0`, `fa8`, `18`, _25, `19.0`, `fa9`, `19`, _28, `20`, `b0`, `20.0`, _31, `21`, `b1`, `21.0`, _33, `22`, `b2`, `22.0`, _35, `23`, `b3`, `23.0`, _37, `24`, `b4`, `24.0`, _39, `25`, `b5`, `25.0`, _41, `26`, `b6`, `26.0`, _43, `27`, `b7`, `27.0`, _45, `28`, `b8`, `28.0`, _47, `29`, `b9`, `29.0`, _49, `30`, _2, `30.0`, _32, `31`, _5, `31.0`, _34, `32`, _8, `32.0`, _36, `33`, _11, `33.0`, _38, `34`, _14, `34.0`, _40, `35`, _17, `35.0`, _42, `36`, _20, `36.0`, _44, `37`, _23, `37.0`, _46, `38`, _26, `38.0`, _48, `39`, _29, `39.0`, _50, `q`, `1`, `x`, `0`, `y`, `"untouched"`, `z`, `"also untouched"`, `{["00"]}`, `"10"`, `{["01"]}`, `"11"`, `{["02"]}`, `"12"`, `{["03"]}`, `"13"`, `{["04"]}`, `"14"`, `{["05"]}`, `"15"`, `{["06"]}`, `"16"`, `{["07"]}`, `"17"`, `{["08"]}`, `"18"`, `{["09"]}`, `"19"`, `#{map => key,second => small}`, `"small map key 2"`, `#{map => key,third => small}`, `"small map key 3"`, `#{map => key,"one" => small}`, _51, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`, `"large map key 1"`, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
   19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
   28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
   35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
   k36 => "c6",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`, _52, `"40"`, `"d0"`, `"41"`, `"d1"`, `"42"`, `"d2"`, `"43"`, `"d3"`, `"44"`, `"d4"`, `"45"`, `"d5"`, `"46"`, `"d6"`, `"47"`, `"d7"`, `"48"`, `"d8"`, `"49"`, `"d9"`, `<<"50">>`, _3, `<<"51">>`, _6, `<<"52">>`, _9, `<<"53">>`, _12, `<<"54">>`, _15, `<<"55">>`, _18, `<<"56">>`, _21, `<<"57">>`, _24, `<<"58">>`, _27, `<<"59">>`, _30

  %% map_SUITE.erl:888
  %% Aliased:
  %%    _53
  Map = call (`id`/1), _53

  %% Aliased:
  %%    Map
  _141 = succeeded:body Map
  br _141, ^141, ^1

141:
  %% map_SUITE.erl:942
  %% Aliased:
  %%    Map
  _67 = call (`loop_match_and_update_literals_x_q`/2), Map, `[{1,2},{3,4},{5,6},{7,8}]`

  %% Aliased:
  %%    _67
  _142 = succeeded:body _67
  br _142, ^142, ^1

142:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _187 = bif:is_map _67
  br _187, ^187, ^144

187:
  %% Argument types:
  %%    _67 => map()
  %% Aliased:
  %%    _67
  _71 = get_map_element _67, `q`

  %% Aliased:
  %%    _71
  _145 = succeeded:guard _71
  br _145, ^145, ^144

145:
  %% Argument types:
  %%    _67 => map()
  %% Aliased:
  %%    _67
  _70 = get_map_element _67, `x`

  %% Aliased:
  %%    _70
  _146 = succeeded:guard _70
  br _146, ^146, ^144

146:
  %% Argument types:
  %%    _67 => map()
  %% Aliased:
  %%    _67
  _69 = get_map_element _67, `y`

  %% Aliased:
  %%    _69
  _147 = succeeded:guard _69
  br _147, ^147, ^144

147:
  %% Argument types:
  %%    _67 => map()
  %% Aliased:
  %%    _67
  _68 = get_map_element _67, `z`

  %% Aliased:
  %%    _68
  _148 = succeeded:guard _68
  br _148, ^148, ^144

148:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _186 = bif:'=:=' _71, `21`
  br _186, ^185, ^144

185:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _184 = bif:'=:=' _70, `16`
  br _184, ^183, ^144

183:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _182 = bif:'=:=' _69, `"untouched"`
  br _182, ^182, ^144

182:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _181 = bif:'=:=' _68, `"also untouched"`
  br _181, ^181, ^144

181:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Map
  _151 = bif:is_map Map
  br _151, ^151, ^150

151:
  %% map_SUITE.erl:945
  %% Aliased:
  %%    Map
  _74 = put_map `assoc`, Map, `4`, `number`, `18446744073709551629`, `wat`, `int`, `3`, `"hi"`, `"hello"`, `<<"key">>`, `<<"value">>`

  %% map_SUITE.erl:945
  %% Aliased:
  %%    _74
  M0 = call (`id`/1), _74

  %% Aliased:
  %%    M0
  _153 = succeeded:body M0
  br _153, ^192, ^1

192:
  %% map_SUITE.erl:947
  %% Aliased:
  %%    Map
  M1 = call (`id`/1), Map

  %% Aliased:
  %%    M1
  _158 = succeeded:body M1
  br _158, ^158, ^1

158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M1
  _161 = bif:is_map M1
  br _161, ^161, ^160

161:
  %% map_SUITE.erl:948
  %% Aliased:
  %%    M1
  _77 = put_map `assoc`, M1, `4`, `number`, `18446744073709551629`, `wat`, `int`, `3`, `"hi"`, `"hello"`, `<<"key">>`, `<<"value">>`

  %% Argument types:
  %%    _77 => map()
  %% Aliased:
  %%    _77, 
  %%    M0
  _165 = bif:'=:=' _77, M0
  br _165, ^174, ^164

174:
  %% Result type:
  %%    'ok'
  ret `ok`

164:
  %% map_SUITE.erl:950
  %% Aliased:
  %%    _77
  _82 = match_fail `badmatch`, _77

  %% Unique:
  %%    _82
  _180 = succeeded:body _82
  br ^1

160:
  %% map_SUITE.erl:948
  %% Aliased:
  %%    M1
  _78 = match_fail `badmap`, M1

  %% Unique:
  %%    _78
  _162 = succeeded:body _78
  br ^1

150:
  %% map_SUITE.erl:945
  %% Aliased:
  %%    Map
  _75 = match_fail `badmap`, Map

  %% Unique:
  %%    _75
  _152 = succeeded:body _75
  br ^1

144:
  %% map_SUITE.erl:942
  %% Aliased:
  %%    _67
  _83 = match_fail `badmatch`, _67

  %% Unique:
  %%    _83
  _188 = succeeded:body _83
  br ^1

87:
  %% map_SUITE.erl:887
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_match_and_update_literals_large/1-',1}}
  _84 = match_fail `function_clause`, _0

  %% Unique:
  %%    _84
  _189 = succeeded:body _84
  br ^1

1:
  _85 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _85
}

%% map_SUITE.erl:955
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     list({1, 2} | {3, 4} | {5, 6} | {7, 8})
function `map_SUITE`:`loop_match_and_update_literals_x_q`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => list({1, 2} | {3, 4} | {5, 6} | {7, 8})
  %% Unique:
  %%    _1
  _22 = bif:'=:=' _1, `[]`
  br _22, ^22, ^21

22:
  %% Aliased:
  %%    _0
  ret _0

21:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _40 = bif:is_map _0
  br _40, ^40, ^23

40:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _10 = get_map_element _0, `q`

  %% Aliased:
  %%    _10
  _24 = succeeded:guard _10
  br _24, ^24, ^23

24:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _9 = get_map_element _0, `x`

  %% Aliased:
  %%    _9
  _25 = succeeded:guard _9
  br _25, ^25, ^23

25:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _8 = get_map_element _0, `#{map => key,"one" => small}`

  %% Aliased:
  %%    _8
  _26 = succeeded:guard _8
  br _26, ^26, ^23

26:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _39 = bif:'=:=' _8, `"small map key 1"`
  br _39, ^38, ^23

38:
  %% Argument types:
  %%    _1 => nonempty_list({1, 2} | {3, 4} | {5, 6} | {7, 8})
  %% Unique:
  %%    _1
  _12 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_list({1, 2} | {3, 4} | {5, 6} | {7, 8})
  %% Unique:
  %%    _1
  _11 = get_tl _1

  %% Argument types:
  %%    _12 => {1, 2} | {3, 4} | {5, 6} | {7, 8}
  %% Unique:
  %%    _12
  _13 = get_tuple_element _12, `1`

  %% map_SUITE.erl:958
  %% Argument types:
  %%    _13 => 2..8
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _13
  _2 = bif:'+' _10, _13

  %% Unique:
  %%    _2
  _27 = succeeded:body _2
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    _12 => {1, 2} | {3, 4} | {5, 6} | {7, 8}
  %% Unique:
  %%    _12
  _14 = get_tuple_element _12, `0`

  %% map_SUITE.erl:958
  %% Argument types:
  %%    _14 => 1..7
  %% Aliased:
  %%    _9
  %% Unique:
  %%    _14
  _3 = bif:'+' _9, _14

  %% Unique:
  %%    _3
  _28 = succeeded:body _3
  br _28, ^31, ^1

31:
  %% map_SUITE.erl:958
  %% Aliased:
  %%    _0, 
  %%    _2, 
  %%    _3
  _15 = put_map `assoc`, _0, `q`, _2, `x`, _3

  %% map_SUITE.erl:958
  %% Aliased:
  %%    _15
  %% Unique:
  %%    _11
  _17 = call (`loop_match_and_update_literals_x_q`/2), _15, _11

  %% Aliased:
  %%    _17
  _33 = succeeded:body _17
  br _33, ^33, ^1

33:
  %% Aliased:
  %%    _17
  ret _17

23:
  %% map_SUITE.erl:955
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-loop_match_and_update_literals_x_q/2-',2}}
  _18 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _18
  _41 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% map_SUITE.erl:961
%% Counter = 318
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_map_expressions`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _103 = bif:is_list _0
  br _103, ^103, ^102

103:
  %% map_SUITE.erl:963
  X = call (`id`/1), `fondue`

  %% Aliased:
  %%    X
  _104 = succeeded:body X
  br _104, ^264, ^1

264:
  %% Argument types:
  %%    
  _107 = has_map_field `#{a => 1}`, `a`
  br _107, ^262, ^106

262:
  %% Argument types:
  %%    
  %% Aliased:
  %%    X
  _39 = put_tuple X

  %% map_SUITE.erl:965
  %% Unique:
  %%    _39
  _40 = put_map `assoc`, `#{a => 1}`, `b`, _39

  %% map_SUITE.erl:965
  %% Aliased:
  %%    _40
  _6 = put_map `exact`, _40, `a`, `1`

  %% Aliased:
  %%    _6
  _108 = succeeded:body _6
  br _108, ^260, ^1

260:
  %% Argument types:
  %%    _6 => #{'a' | 'b'=>1 | {any()}}
  %% Aliased:
  %%    _6
  _41 = get_map_element _6, `b`

  %% Aliased:
  %%    _41
  _111 = succeeded:guard _41
  br _111, ^111, ^110

111:
  %% Argument types:
  %%    _41 => 1 | {any()}
  %% Aliased:
  %%    _41
  _257 = bif:is_tuple _41
  br _257, ^256, ^110

256:
  %% Argument types:
  %%    _41 => {any()}
  %% Aliased:
  %%    _41
  _42 = get_tuple_element _41, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42, 
  %%    X
  _112 = bif:'=:=' _42, X
  br _112, ^254, ^110

254:
  %% Argument types:
  %%    
  _115 = has_map_field `#{b => 2}`, `b`
  br _115, ^252, ^114

252:
  %% map_SUITE.erl:969
  _11 = call (`maps`:`from_list`/1), `[{a,1},{b,2},{c,3}]`

  %% Aliased:
  %%    _11
  _116 = succeeded:body _11
  br _116, ^119, ^1

119:
  %% map_SUITE.erl:969
  %% Aliased:
  %%    _11
  _71 = put_map `exact`, _11, `a`, `42`, `b`, `42`, `c`, `42`

  %% Aliased:
  %%    _71
  _120 = succeeded:body _71
  br _120, ^244, ^1

244:
  %% map_SUITE.erl:970
  _14 = call (`maps`:`from_list`/1), `[{"a",1},{"b",2}]`

  %% Aliased:
  %%    _14
  _127 = succeeded:body _14
  br _127, ^130, ^1

130:
  %% map_SUITE.erl:970
  %% Aliased:
  %%    _14
  _48 = put_map `assoc`, _14, `"c"`, `42`

  %% map_SUITE.erl:970
  %% Aliased:
  %%    _48
  _73 = put_map `exact`, _48, `"b"`, `42`

  %% Aliased:
  %%    _73
  _131 = succeeded:body _73
  br _131, ^242, ^1

242:
  %% Argument types:
  %%    _73 => #{nonempty_list(97..99)=>1..42}
  %% Aliased:
  %%    _73
  _51 = get_map_element _73, `"a"`

  %% Aliased:
  %%    _51
  _135 = succeeded:guard _51
  br _135, ^136, ^134

136:
  %% Argument types:
  %%    _73 => #{nonempty_list(97..99)=>1..42}
  %% Aliased:
  %%    _73
  _49 = get_map_element _73, `"c"`

  %% Aliased:
  %%    _49
  _137 = succeeded:guard _49
  br _137, ^137, ^134

137:
  %% Argument types:
  %%    _51 => 1..42
  %% Unique:
  %%    _51
  _241 = bif:'=:=' _51, `1`
  br _241, ^238, ^134

238:
  %% Argument types:
  %%    _49 => 1..42
  %% Unique:
  %%    _49
  _237 = bif:'=:=' _49, `42`
  br _237, ^267, ^134

267:
  %% map_SUITE.erl:981
  %% Result type:
  %%    map()
  %% Argument types:
  %%    (`'-t_update_map_expressions/1-fun-0-'`/0) => fun(() -> map())
  _53 = call (`'-t_update_map_expressions/1-fun-0-'`/0)

  %% Aliased:
  %%    _53
  _138 = succeeded:body _53
  br _138, ^234, ^1

234:
  %% Argument types:
  %%    _53 => map()
  %% Aliased:
  %%    _53
  _54 = get_map_element _53, `"a"`

  %% Aliased:
  %%    _54
  _141 = succeeded:guard _54
  br _141, ^141, ^140

141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _233 = bif:'=:=' _54, `b`
  br _233, ^313, ^140

313:
  br ^316

316:
  _145 = new_try_tag `'catch'`
  br _145, ^143, ^144

143:
  %% map_SUITE.erl:984
  _21 = call (`id`/1), `<<>>`

  %% Aliased:
  %%    _21
  _147 = succeeded:body _21
  br _147, ^147, ^144

147:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _150 = bif:is_map _21
  br _150, ^150, ^149

150:
  %% map_SUITE.erl:984
  %% Aliased:
  %%    _21
  _55 = put_map `assoc`, _21, `b`, `2`

  %% map_SUITE.erl:984
  %% Aliased:
  %%    _55
  _80 = put_map `exact`, _55, `a`, `42`

  %% Aliased:
  %%    _80
  _151 = succeeded:body _80
  br _151, ^151, ^144

151:
  br ^142

149:
  %% map_SUITE.erl:984
  %% Aliased:
  %%    _21
  _81 = match_fail `badmap`, _21

  %% Unique:
  %%    _81
  _152 = succeeded:body _81
  br ^144

144:
  %% Unique:
  %%    _145
  _155 = landingpad `'catch'`, _145

  %% Aliased:
  %%    _155
  _153 = extract _155, `0`
  br ^142

142:
  _156 = phi { _153, ^144 }, { _80, ^151 }

  %% Aliased:
  %%    _156
  %% Unique:
  %%    _145
  _22 = catch_end _145, _156

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _228 = is_tagged_tuple _22, `2`, `'EXIT'`
  br _228, ^225, ^158

225:
  %% Argument types:
  %%    _22 => {''EXIT'', any()}
  %% Aliased:
  %%    _22
  _56 = get_tuple_element _22, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _222 = bif:is_tuple _56
  br _222, ^222, ^158

222:
  %% Argument types:
  %%    _56 => {...}
  %% Aliased:
  %%    _56
  _223 = bif:tuple_size _56

  %% Argument types:
  %%    _223 => 0..16777215
  %% Unique:
  %%    _223
  _224 = bif:'=:=' _223, `2`
  br _224, ^221, ^158

221:
  %% Argument types:
  %%    _56 => {any(), any()}
  %% Aliased:
  %%    _56
  _59 = get_tuple_element _56, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _220 = bif:'=:=' _59, `{badmap,<<>>}`
  br _220, ^314, ^158

314:
  br ^317

317:
  _162 = new_try_tag `'catch'`
  br _162, ^160, ^161

160:
  %% map_SUITE.erl:985
  _24 = call (`id`/1), `[]`

  %% Aliased:
  %%    _24
  _164 = succeeded:body _24
  br _164, ^164, ^161

164:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _167 = bif:is_map _24
  br _167, ^167, ^166

167:
  %% map_SUITE.erl:985
  %% Aliased:
  %%    _24
  _60 = put_map `assoc`, _24, `b`, `2`

  %% map_SUITE.erl:985
  %% Aliased:
  %%    _60
  _84 = put_map `exact`, _60, `a`, `42`

  %% Aliased:
  %%    _84
  _168 = succeeded:body _84
  br _168, ^168, ^161

168:
  br ^159

166:
  %% map_SUITE.erl:985
  %% Aliased:
  %%    _24
  _85 = match_fail `badmap`, _24

  %% Unique:
  %%    _85
  _169 = succeeded:body _85
  br ^161

161:
  %% Unique:
  %%    _162
  _172 = landingpad `'catch'`, _162

  %% Aliased:
  %%    _172
  _170 = extract _172, `0`
  br ^159

159:
  _173 = phi { _170, ^161 }, { _84, ^168 }

  %% Aliased:
  %%    _173
  %% Unique:
  %%    _162
  _25 = catch_end _162, _173

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _216 = is_tagged_tuple _25, `2`, `'EXIT'`
  br _216, ^213, ^175

213:
  %% Argument types:
  %%    _25 => {''EXIT'', any()}
  %% Aliased:
  %%    _25
  _61 = get_tuple_element _25, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _210 = bif:is_tuple _61
  br _210, ^210, ^175

210:
  %% Argument types:
  %%    _61 => {...}
  %% Aliased:
  %%    _61
  _211 = bif:tuple_size _61

  %% Argument types:
  %%    _211 => 0..16777215
  %% Unique:
  %%    _211
  _212 = bif:'=:=' _211, `2`
  br _212, ^209, ^175

209:
  %% Argument types:
  %%    _61 => {any(), any()}
  %% Aliased:
  %%    _61
  _64 = get_tuple_element _61, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _208 = bif:'=:=' _64, `{badmap,[]}`
  br _208, ^208, ^175

208:
  %% Result type:
  %%    'ok'
  _27 = make_fun (`t_update_map_expressions`/1)
  _179 = new_try_tag `'catch'`
  br _179, ^182, ^178

182:
  %% map_SUITE.erl:987
  %% Aliased:
  %%    _27
  _89 = match_fail `badmap`, _27

  %% Unique:
  %%    _89
  _184 = succeeded:body _89
  br ^178

178:
  %% Unique:
  %%    _179
  _187 = landingpad `'catch'`, _179

  %% Aliased:
  %%    _187
  _185 = extract _187, `0`
  br ^176

176:
  %% Aliased:
  %%    _185
  %% Unique:
  %%    _179
  _28 = catch_end _179, _185

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _204 = is_tagged_tuple _28, `2`, `'EXIT'`
  br _204, ^201, ^190

201:
  %% Argument types:
  %%    _28 => {''EXIT'', any()}
  %% Aliased:
  %%    _28
  _65 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _198 = bif:is_tuple _65
  br _198, ^198, ^190

198:
  %% Argument types:
  %%    _65 => {...}
  %% Aliased:
  %%    _65
  _199 = bif:tuple_size _65

  %% Argument types:
  %%    _199 => 0..16777215
  %% Unique:
  %%    _199
  _200 = bif:'=:=' _199, `2`
  br _200, ^197, ^190

197:
  %% Argument types:
  %%    _65 => {any(), any()}
  %% Aliased:
  %%    _65
  _68 = get_tuple_element _65, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _194 = is_tagged_tuple _68, `2`, `badmap`
  br _194, ^191, ^190

191:
  %% Result type:
  %%    'ok'
  ret `ok`

190:
  %% map_SUITE.erl:986
  %% Aliased:
  %%    _28
  _90 = match_fail `badmatch`, _28

  %% Unique:
  %%    _90
  _207 = succeeded:body _90
  br ^1

175:
  %% map_SUITE.erl:985
  %% Aliased:
  %%    _25
  _91 = match_fail `badmatch`, _25

  %% Unique:
  %%    _91
  _219 = succeeded:body _91
  br ^1

158:
  %% map_SUITE.erl:984
  %% Aliased:
  %%    _22
  _92 = match_fail `badmatch`, _22

  %% Unique:
  %%    _92
  _231 = succeeded:body _92
  br ^1

140:
  %% map_SUITE.erl:981
  %% Aliased:
  %%    _53
  _93 = match_fail `badmatch`, _53

  %% Unique:
  %%    _93
  _235 = succeeded:body _93
  br ^1

134:
  %% map_SUITE.erl:970
  %% Aliased:
  %%    _73
  _94 = match_fail `badmatch`, _73

  %% Unique:
  %%    _94
  _243 = succeeded:body _94
  br ^1

114:
  %% map_SUITE.erl:967
  _96 = match_fail `badmatch`, `#{b => 2}`

  %% Unique:
  %%    _96
  _255 = succeeded:body _96
  br ^1

110:
  %% map_SUITE.erl:965
  %% Aliased:
  %%    _6
  _97 = match_fail `badmatch`, _6

  %% Unique:
  %%    _97
  _261 = succeeded:body _97
  br ^1

106:
  %% map_SUITE.erl:964
  _98 = match_fail `badmatch`, `#{a => 1}`

  %% Unique:
  %%    _98
  _265 = succeeded:body _98
  br ^1

102:
  %% map_SUITE.erl:961
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_map_expressions/1-',1}}
  _99 = match_fail `function_clause`, _0

  %% Unique:
  %%    _99
  _266 = succeeded:body _99
  br ^1

1:
  _100 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _100
}

%% map_SUITE.erl:992
%% Counter = 455
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_assoc`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _130 = bif:is_list _0
  br _130, ^130, ^129

130:
  %% map_SUITE.erl:993
  M0 = call (`id`/1), `#{1 => a,2 => b,4 => d,5 => e,3.0 => c}`

  %% Aliased:
  %%    M0
  _131 = succeeded:body M0
  br _131, ^131, ^1

131:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _134 = bif:is_map M0
  br _134, ^134, ^133

134:
  %% map_SUITE.erl:995
  %% Aliased:
  %%    M0
  _92 = put_map `assoc`, M0, `1`, `42`, `2`, `100`, `4`, `[a,b,c]`

  %% Argument types:
  %%    _92 => map()
  %% Aliased:
  %%    _92
  _50 = get_map_element _92, `5`

  %% Aliased:
  %%    _50
  _141 = succeeded:guard _50
  br _141, ^141, ^137

141:
  %% Argument types:
  %%    _92 => map()
  %% Aliased:
  %%    _92
  _49 = get_map_element _92, `3.0`

  %% Aliased:
  %%    _49
  _142 = succeeded:guard _49
  br _142, ^360, ^137

360:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _359 = bif:'=:=' _50, `e`
  br _359, ^358, ^137

358:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _357 = bif:'=:=' _49, `c`
  br _357, ^145, ^137

145:
  %% map_SUITE.erl:997
  %% Aliased:
  %%    M0
  _54 = put_map `assoc`, M0, `1.0`, `float`, `2.0`, `100`, `4.0`, `[a,b,c]`

  %% map_SUITE.erl:997
  %% Aliased:
  %%    _54
  _94 = put_map `exact`, _54, `1`, `42`

  %% Aliased:
  %%    _94
  _146 = succeeded:body _94
  br _146, ^150, ^1

150:
  %% Argument types:
  %%    _94 => map()
  %% Aliased:
  %%    _94
  _60 = get_map_element _94, `2`

  %% Aliased:
  %%    _60
  _151 = succeeded:guard _60
  br _151, ^151, ^149

151:
  %% Argument types:
  %%    _94 => map()
  %% Aliased:
  %%    _94
  _59 = get_map_element _94, `4`

  %% Aliased:
  %%    _59
  _152 = succeeded:guard _59
  br _152, ^152, ^149

152:
  %% Argument types:
  %%    _94 => map()
  %% Aliased:
  %%    _94
  _58 = get_map_element _94, `5`

  %% Aliased:
  %%    _58
  _153 = succeeded:guard _58
  br _153, ^153, ^149

153:
  %% Argument types:
  %%    _94 => map()
  %% Aliased:
  %%    _94
  _57 = get_map_element _94, `2.0`

  %% Aliased:
  %%    _57
  _154 = succeeded:guard _57
  br _154, ^154, ^149

154:
  %% Argument types:
  %%    _94 => map()
  %% Aliased:
  %%    _94
  _56 = get_map_element _94, `3.0`

  %% Aliased:
  %%    _56
  _155 = succeeded:guard _56
  br _155, ^155, ^149

155:
  %% Argument types:
  %%    _94 => map()
  %% Aliased:
  %%    _94
  _55 = get_map_element _94, `4.0`

  %% Aliased:
  %%    _55
  _156 = succeeded:guard _55
  br _156, ^352, ^149

352:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _351 = bif:'=:=' _60, `b`
  br _351, ^350, ^149

350:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _349 = bif:'=:=' _59, `d`
  br _349, ^348, ^149

348:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _347 = bif:'=:=' _58, `e`
  br _347, ^346, ^149

346:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _345 = bif:'=:=' _57, `100`
  br _345, ^344, ^149

344:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _343 = bif:'=:=' _56, `c`
  br _343, ^342, ^149

342:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _341 = bif:'=:=' _55, `[a,b,c]`
  br _341, ^159, ^149

159:
  %% map_SUITE.erl:999
  %% Aliased:
  %%    M0
  _96 = put_map `assoc`, M0, `3.0`, `new`

  %% Argument types:
  %%    _96 => map()
  %% Aliased:
  %%    _96
  _66 = get_map_element _96, `1`

  %% Aliased:
  %%    _66
  _163 = succeeded:guard _66
  br _163, ^163, ^162

163:
  %% Argument types:
  %%    _96 => map()
  %% Aliased:
  %%    _96
  _65 = get_map_element _96, `2`

  %% Aliased:
  %%    _65
  _164 = succeeded:guard _65
  br _164, ^164, ^162

164:
  %% Argument types:
  %%    _96 => map()
  %% Aliased:
  %%    _96
  _64 = get_map_element _96, `4`

  %% Aliased:
  %%    _64
  _165 = succeeded:guard _64
  br _165, ^165, ^162

165:
  %% Argument types:
  %%    _96 => map()
  %% Aliased:
  %%    _96
  _63 = get_map_element _96, `5`

  %% Aliased:
  %%    _63
  _166 = succeeded:guard _63
  br _166, ^167, ^162

167:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _338 = bif:'=:=' _66, `a`
  br _338, ^337, ^162

337:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _336 = bif:'=:=' _65, `b`
  br _336, ^335, ^162

335:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _334 = bif:'=:=' _64, `d`
  br _334, ^333, ^162

333:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _332 = bif:'=:=' _63, `e`
  br _332, ^170, ^162

170:
  %% map_SUITE.erl:1001
  %% Aliased:
  %%    M0
  _98 = put_map `exact`, M0, `3.0`, `new`

  %% Aliased:
  %%    _98
  _171 = succeeded:body _98
  br _171, ^168, ^1

168:
  %% Argument types:
  %%    _98 => map()
  %%    _96 => map()
  %% Aliased:
  %%    _96, 
  %%    _98
  _175 = bif:'=:=' _98, _96
  br _175, ^175, ^174

175:
  %% map_SUITE.erl:1004
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  Bin = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `257`

  %% Aliased:
  %%    Bin
  _176 = succeeded:body Bin
  br _176, ^176, ^1

176:
  %% map_SUITE.erl:1005
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _13 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `257`

  %% Aliased:
  %%    _13
  _177 = succeeded:body _13
  br _177, ^180, ^1

180:
  %% map_SUITE.erl:1005
  %% Aliased:
  %%    _13, 
  %%    M0
  _100 = put_map `assoc`, M0, _13, `val`

  %% map_SUITE.erl:1005
  %% Aliased:
  %%    _100
  _67 = call (`id`/1), _100

  %% Aliased:
  %%    _67
  _182 = succeeded:body _67
  br _182, ^182, ^1

182:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _326 = bif:is_map _67
  br _326, ^326, ^184

326:
  %% Argument types:
  %%    _67 => map()
  %%    Bin => bitstring(1)
  %% Aliased:
  %%    _67, 
  %%    Bin
  _68 = get_map_element _67, Bin

  %% Aliased:
  %%    _68
  _185 = succeeded:guard _68
  br _185, ^185, ^184

185:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _325 = bif:'=:=' _68, `val`
  br _325, ^324, ^184

324:
  %% map_SUITE.erl:1008
  BadMap = call (`id`/1), `badmap`

  %% Aliased:
  %%    BadMap
  _186 = succeeded:body BadMap
  br _186, ^445, ^1

445:
  br ^450

450:
  _190 = new_try_tag `'catch'`
  br _190, ^188, ^189

188:
  %% Argument types:
  %%    
  %% Aliased:
  %%    BadMap
  _194 = bif:is_map BadMap
  br _194, ^194, ^193

194:
  %% map_SUITE.erl:1009
  %% Aliased:
  %%    BadMap
  _104 = put_map `assoc`, BadMap, `nonexisting`, `val`
  br ^187

193:
  %% map_SUITE.erl:1009
  %% Aliased:
  %%    BadMap
  _105 = match_fail `badmap`, BadMap

  %% Unique:
  %%    _105
  _195 = succeeded:body _105
  br ^189

189:
  %% Unique:
  %%    _190
  _198 = landingpad `'catch'`, _190

  %% Aliased:
  %%    _198
  _196 = extract _198, `0`
  br ^187

187:
  _199 = phi { _196, ^189 }, { _104, ^194 }

  %% Aliased:
  %%    _199
  %% Unique:
  %%    _190
  _17 = catch_end _190, _199

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _320 = is_tagged_tuple _17, `2`, `'EXIT'`
  br _320, ^317, ^201

317:
  %% Argument types:
  %%    _17 => {''EXIT'', any()}
  %% Aliased:
  %%    _17
  _69 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _314 = bif:is_tuple _69
  br _314, ^314, ^201

314:
  %% Argument types:
  %%    _69 => {...}
  %% Aliased:
  %%    _69
  _315 = bif:tuple_size _69

  %% Argument types:
  %%    _315 => 0..16777215
  %% Unique:
  %%    _315
  _316 = bif:'=:=' _315, `2`
  br _316, ^313, ^201

313:
  %% Argument types:
  %%    _69 => {any(), any()}
  %% Aliased:
  %%    _69
  _72 = get_tuple_element _69, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _310 = is_tagged_tuple _72, `2`, `badmap`
  br _310, ^307, ^201

307:
  %% Argument types:
  %%    _72 => {'badmap', any()}
  %% Aliased:
  %%    _72
  _73 = get_tuple_element _72, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _73, 
  %%    BadMap
  _202 = bif:'=:=' _73, BadMap
  br _202, ^446, ^201

446:
  br ^451

451:
  _206 = new_try_tag `'catch'`
  br _206, ^204, ^205

204:
  %% map_SUITE.erl:1010
  _107 = match_fail `badmap`, `<<>>`

  %% Unique:
  %%    _107
  _208 = succeeded:body _107
  br ^205

205:
  %% Unique:
  %%    _206
  _211 = landingpad `'catch'`, _206

  %% Aliased:
  %%    _211
  _209 = extract _211, `0`
  br ^203

203:
  %% Aliased:
  %%    _209
  %% Unique:
  %%    _206
  _20 = catch_end _206, _209

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _303 = is_tagged_tuple _20, `2`, `'EXIT'`
  br _303, ^300, ^214

300:
  %% Argument types:
  %%    _20 => {''EXIT'', any()}
  %% Aliased:
  %%    _20
  _75 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _297 = bif:is_tuple _75
  br _297, ^297, ^214

297:
  %% Argument types:
  %%    _75 => {...}
  %% Aliased:
  %%    _75
  _298 = bif:tuple_size _75

  %% Argument types:
  %%    _298 => 0..16777215
  %% Unique:
  %%    _298
  _299 = bif:'=:=' _298, `2`
  br _299, ^296, ^214

296:
  %% Argument types:
  %%    _75 => {any(), any()}
  %% Aliased:
  %%    _75
  _78 = get_tuple_element _75, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _295 = bif:'=:=' _78, `{badmap,<<>>}`
  br _295, ^447, ^214

447:
  br ^452

452:
  _218 = new_try_tag `'catch'`
  br _218, ^216, ^217

216:
  %% map_SUITE.erl:1015
  %% Result type:
  %%    none()
  %% Argument types:
  %%    (`'-t_update_assoc/1-fun-0-'`/0) => fun(() -> none())
  _110 = call (`'-t_update_assoc/1-fun-0-'`/0)

  %% Aliased:
  %%    _110
  _220 = succeeded:body _110
  br ^217

217:
  %% Unique:
  %%    _218
  _223 = landingpad `'catch'`, _218

  %% Aliased:
  %%    _223
  _221 = extract _223, `0`
  br ^215

215:
  %% Aliased:
  %%    _221
  %% Unique:
  %%    _218
  _26 = catch_end _218, _221

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _291 = is_tagged_tuple _26, `2`, `'EXIT'`
  br _291, ^288, ^226

288:
  %% Argument types:
  %%    _26 => {''EXIT'', any()}
  %% Aliased:
  %%    _26
  _79 = get_tuple_element _26, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _285 = bif:is_tuple _79
  br _285, ^285, ^226

285:
  %% Argument types:
  %%    _79 => {...}
  %% Aliased:
  %%    _79
  _286 = bif:tuple_size _79

  %% Argument types:
  %%    _286 => 0..16777215
  %% Unique:
  %%    _286
  _287 = bif:'=:=' _286, `2`
  br _287, ^284, ^226

284:
  %% Argument types:
  %%    _79 => {any(), any()}
  %% Aliased:
  %%    _79
  _82 = get_tuple_element _79, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _283 = bif:'=:=' _82, `{badmap,0}`
  br _283, ^369, ^226

369:
  %% map_SUITE.erl:1028
  %% Result type:
  %%    42
  %% Argument types:
  %%    (`'-t_update_assoc/1-fun-1-'`/0) => fun(() -> 42)
  _83 = call (`'-t_update_assoc/1-fun-1-'`/0)

  %% Unique:
  %%    _83
  _227 = succeeded:body _83
  br _227, ^448, ^1

448:
  br ^453

453:
  _233 = new_try_tag `'catch'`
  br _233, ^231, ^232

231:
  %% map_SUITE.erl:1032
  _112 = call (`erlang`:`error`/1), `blurf`

  %% Aliased:
  %%    _112
  _235 = succeeded:body _112
  br ^232

232:
  %% Unique:
  %%    _233
  _238 = landingpad `'catch'`, _233

  %% Aliased:
  %%    _238
  _236 = extract _238, `0`
  br ^230

230:
  %% Aliased:
  %%    _236
  %% Unique:
  %%    _233
  _35 = catch_end _233, _236

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _276 = is_tagged_tuple _35, `2`, `'EXIT'`
  br _276, ^273, ^241

273:
  %% Argument types:
  %%    _35 => {''EXIT'', any()}
  %% Aliased:
  %%    _35
  _84 = get_tuple_element _35, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _270 = is_tagged_tuple _84, `2`, `blurf`
  br _270, ^449, ^241

449:
  br ^454

454:
  _245 = new_try_tag `'catch'`
  br _245, ^243, ^244

243:
  %% map_SUITE.erl:1034
  _114 = call (`erlang`:`error`/1), `blurf`

  %% Aliased:
  %%    _114
  _247 = succeeded:body _114
  br ^244

244:
  %% Unique:
  %%    _245
  _250 = landingpad `'catch'`, _245

  %% Aliased:
  %%    _250
  _248 = extract _250, `0`
  br ^242

242:
  %% Aliased:
  %%    _248
  %% Unique:
  %%    _245
  _39 = catch_end _245, _248

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _263 = is_tagged_tuple _39, `2`, `'EXIT'`
  br _263, ^260, ^253

260:
  %% Argument types:
  %%    _39 => {''EXIT'', any()}
  %% Aliased:
  %%    _39
  _88 = get_tuple_element _39, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _257 = is_tagged_tuple _88, `2`, `blurf`
  br _257, ^254, ^253

254:
  %% Result type:
  %%    'ok'
  ret `ok`

253:
  %% map_SUITE.erl:1033
  %% Aliased:
  %%    _39
  _115 = match_fail `badmatch`, _39

  %% Unique:
  %%    _115
  _266 = succeeded:body _115
  br ^1

241:
  %% map_SUITE.erl:1031
  %% Aliased:
  %%    _35
  _116 = match_fail `badmatch`, _35

  %% Unique:
  %%    _116
  _279 = succeeded:body _116
  br ^1

226:
  %% map_SUITE.erl:1015
  %% Aliased:
  %%    _26
  _118 = match_fail `badmatch`, _26

  %% Unique:
  %%    _118
  _294 = succeeded:body _118
  br ^1

214:
  %% map_SUITE.erl:1010
  %% Aliased:
  %%    _20
  _119 = match_fail `badmatch`, _20

  %% Unique:
  %%    _119
  _306 = succeeded:body _119
  br ^1

201:
  %% map_SUITE.erl:1009
  %% Aliased:
  %%    _17
  _120 = match_fail `badmatch`, _17

  %% Unique:
  %%    _120
  _323 = succeeded:body _120
  br ^1

184:
  %% map_SUITE.erl:1005
  %% Aliased:
  %%    _67
  _121 = match_fail `badmatch`, _67

  %% Unique:
  %%    _121
  _327 = succeeded:body _121
  br ^1

174:
  %% map_SUITE.erl:1001
  %% Aliased:
  %%    _98
  _122 = match_fail `badmatch`, _98

  %% Unique:
  %%    _122
  _328 = succeeded:body _122
  br ^1

162:
  %% map_SUITE.erl:1000
  %% Aliased:
  %%    _96
  _123 = match_fail `badmatch`, _96

  %% Unique:
  %%    _123
  _340 = succeeded:body _123
  br ^1

149:
  %% map_SUITE.erl:997
  %% Aliased:
  %%    _94
  _124 = match_fail `badmatch`, _94

  %% Unique:
  %%    _124
  _355 = succeeded:body _124
  br ^1

137:
  %% map_SUITE.erl:996
  %% Aliased:
  %%    _92
  _125 = match_fail `badmatch`, _92

  %% Unique:
  %%    _125
  _366 = succeeded:body _125
  br ^1

133:
  %% map_SUITE.erl:995
  %% Aliased:
  %%    M0
  _93 = match_fail `badmap`, M0

  %% Unique:
  %%    _93
  _135 = succeeded:body _93
  br ^1

129:
  %% map_SUITE.erl:992
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_assoc/1-',1}}
  _126 = match_fail `function_clause`, _0

  %% Unique:
  %%    _126
  _367 = succeeded:body _126
  br ^1

1:
  _127 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _127
}

%% map_SUITE.erl:1037
%% Counter = 198
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_assoc_large`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _64 = bif:is_list _0
  br _64, ^64, ^63

64:
  %% map_SUITE.erl:1038
  M0 = call (`id`/1), `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",10.0 => fa0,11.0 => fa1,12.0 => fa2,13.0 => fa3,14.0 => fa4,
   15.0 => fa5,16.0 => fa6,17.0 => fa7,18.0 => fa8,19.0 => fa9,20.0 => fb0,
   21.0 => fb1,22.0 => fb2,23.0 => fb3,24.0 => fb4,25.0 => fb5,26.0 => fb6,
   27.0 => fb7,28.0 => fb8,29.0 => fb9,30.0 => "fc0",31.0 => "fc1",
   32.0 => "fc2",33.0 => "fc3",34.0 => "fc4",35.0 => "fc5",36.0 => "fc6",
   37.0 => "fc7",38.0 => "fc8",39.0 => "fc9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   #{map => key,one => small} => "small map key 1",
   #{map => key,third => small} => "small map key 3",
   #{map => key,second => small} => "small map key 2",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
     18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
     26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
     33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
     39 => "c9",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 1",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
     19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
     28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
     35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
     k36 => "c6",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 2",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M0
  _65 = succeeded:body M0
  br _65, ^65, ^1

65:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _68 = bif:is_map M0
  br _68, ^68, ^67

68:
  %% map_SUITE.erl:1091
  %% Aliased:
  %%    M0
  _43 = put_map `assoc`, M0, `1`, `42`, `2`, `100`, `4`, `[a,b,c]`

  %% Argument types:
  %%    _43 => map()
  %% Aliased:
  %%    _43
  _20 = get_map_element _43, `25`

  %% Aliased:
  %%    _20
  _75 = succeeded:guard _20
  br _75, ^75, ^71

75:
  %% Argument types:
  %%    _43 => map()
  %% Aliased:
  %%    _43
  _19 = get_map_element _43, `10.0`

  %% Aliased:
  %%    _19
  _76 = succeeded:guard _19
  br _76, ^173, ^71

173:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _172 = bif:'=:=' _20, `b5`
  br _172, ^171, ^71

171:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _170 = bif:'=:=' _19, `fa0`
  br _170, ^79, ^71

79:
  %% map_SUITE.erl:1094
  %% Aliased:
  %%    M0
  _24 = put_map `assoc`, M0, `1.0`, `float`, `2.0`, `100`, `4.0`, `[a,b,c]`

  %% map_SUITE.erl:1094
  %% Aliased:
  %%    _24
  _45 = put_map `exact`, _24, `10`, `43`

  %% Aliased:
  %%    _45
  _80 = succeeded:body _45
  br _80, ^84, ^1

84:
  %% Argument types:
  %%    _45 => map()
  %% Aliased:
  %%    _45
  _30 = get_map_element _45, `15`

  %% Aliased:
  %%    _30
  _85 = succeeded:guard _30
  br _85, ^85, ^83

85:
  %% Argument types:
  %%    _45 => map()
  %% Aliased:
  %%    _45
  _29 = get_map_element _45, `24`

  %% Aliased:
  %%    _29
  _86 = succeeded:guard _29
  br _86, ^86, ^83

86:
  %% Argument types:
  %%    _45 => map()
  %% Aliased:
  %%    _45
  _28 = get_map_element _45, `35`

  %% Aliased:
  %%    _28
  _87 = succeeded:guard _28
  br _87, ^87, ^83

87:
  %% Argument types:
  %%    _45 => map()
  %% Aliased:
  %%    _45
  _27 = get_map_element _45, `2.0`

  %% Aliased:
  %%    _27
  _88 = succeeded:guard _27
  br _88, ^88, ^83

88:
  %% Argument types:
  %%    _45 => map()
  %% Aliased:
  %%    _45
  _26 = get_map_element _45, `4.0`

  %% Aliased:
  %%    _26
  _89 = succeeded:guard _26
  br _89, ^89, ^83

89:
  %% Argument types:
  %%    _45 => map()
  %% Aliased:
  %%    _45
  _25 = get_map_element _45, `13.0`

  %% Aliased:
  %%    _25
  _90 = succeeded:guard _25
  br _90, ^165, ^83

165:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _164 = bif:'=:=' _30, `a5`
  br _164, ^163, ^83

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _162 = bif:'=:=' _29, `b4`
  br _162, ^161, ^83

161:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _160 = bif:'=:=' _28, `"c5"`
  br _160, ^160, ^83

160:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _159 = bif:'=:=' _27, `100`
  br _159, ^158, ^83

158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _157 = bif:'=:=' _26, `[a,b,c]`
  br _157, ^157, ^83

157:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _156 = bif:'=:=' _25, `fa3`
  br _156, ^93, ^83

93:
  %% map_SUITE.erl:1096
  %% Aliased:
  %%    M0
  _47 = put_map `assoc`, M0, `13.0`, `new`

  %% Argument types:
  %%    _47 => map()
  %% Aliased:
  %%    _47
  _36 = get_map_element _47, `10`

  %% Aliased:
  %%    _36
  _97 = succeeded:guard _36
  br _97, ^97, ^96

97:
  %% Argument types:
  %%    _47 => map()
  %% Aliased:
  %%    _47
  _35 = get_map_element _47, `20`

  %% Aliased:
  %%    _35
  _98 = succeeded:guard _35
  br _98, ^99, ^96

99:
  %% Argument types:
  %%    _47 => map()
  %% Aliased:
  %%    _47
  _33 = get_map_element _47, `"40"`

  %% Aliased:
  %%    _33
  _100 = succeeded:guard _33
  br _100, ^100, ^96

100:
  %% Argument types:
  %%    _47 => map()
  %% Aliased:
  %%    _47
  _32 = get_map_element _47, `<<"50">>`

  %% Aliased:
  %%    _32
  _101 = succeeded:guard _32
  br _101, ^101, ^96

101:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _152 = bif:'=:=' _36, `a0`
  br _152, ^151, ^96

151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _150 = bif:'=:=' _35, `b0`
  br _150, ^147, ^96

147:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _146 = bif:'=:=' _33, `"d0"`
  br _146, ^146, ^96

146:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _145 = bif:'=:=' _32, `"e0"`
  br _145, ^104, ^96

104:
  %% map_SUITE.erl:1098
  %% Aliased:
  %%    M0
  _49 = put_map `exact`, M0, `13.0`, `new`

  %% Aliased:
  %%    _49
  _105 = succeeded:body _49
  br _105, ^102, ^1

102:
  %% Argument types:
  %%    _49 => map()
  %%    _47 => map()
  %% Aliased:
  %%    _47, 
  %%    _49
  _109 = bif:'=:=' _49, _47
  br _109, ^109, ^108

109:
  %% map_SUITE.erl:1101
  BadMap = call (`id`/1), `{no,map}`

  %% Aliased:
  %%    BadMap
  _110 = succeeded:body BadMap
  br _110, ^196, ^1

196:
  br ^197

197:
  _114 = new_try_tag `'catch'`
  br _114, ^112, ^113

112:
  %% Argument types:
  %%    
  %% Aliased:
  %%    BadMap
  _118 = bif:is_map BadMap
  br _118, ^118, ^117

118:
  %% map_SUITE.erl:1102
  %% Aliased:
  %%    BadMap, 
  %%    M0
  _53 = put_map `assoc`, BadMap, `nonexisting`, M0
  br ^111

117:
  %% map_SUITE.erl:1102
  %% Aliased:
  %%    BadMap
  _54 = match_fail `badmap`, BadMap

  %% Unique:
  %%    _54
  _119 = succeeded:body _54
  br ^113

113:
  %% Unique:
  %%    _114
  _122 = landingpad `'catch'`, _114

  %% Aliased:
  %%    _122
  _120 = extract _122, `0`
  br ^111

111:
  _123 = phi { _120, ^113 }, { _53, ^118 }

  %% Aliased:
  %%    _123
  %% Unique:
  %%    _114
  _13 = catch_end _114, _123

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _140 = is_tagged_tuple _13, `2`, `'EXIT'`
  br _140, ^137, ^125

137:
  %% Argument types:
  %%    _13 => {''EXIT'', any()}
  %% Aliased:
  %%    _13
  _37 = get_tuple_element _13, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _134 = bif:is_tuple _37
  br _134, ^134, ^125

134:
  %% Argument types:
  %%    _37 => {...}
  %% Aliased:
  %%    _37
  _135 = bif:tuple_size _37

  %% Argument types:
  %%    _135 => 0..16777215
  %% Unique:
  %%    _135
  _136 = bif:'=:=' _135, `2`
  br _136, ^133, ^125

133:
  %% Argument types:
  %%    _37 => {any(), any()}
  %% Aliased:
  %%    _37
  _40 = get_tuple_element _37, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _130 = is_tagged_tuple _40, `2`, `badmap`
  br _130, ^127, ^125

127:
  %% Argument types:
  %%    _40 => {'badmap', any()}
  %% Aliased:
  %%    _40
  _41 = get_tuple_element _40, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41, 
  %%    BadMap
  _126 = bif:'=:=' _41, BadMap
  br _126, ^126, ^125

126:
  %% Result type:
  %%    'ok'
  ret `ok`

125:
  %% map_SUITE.erl:1102
  %% Aliased:
  %%    _13
  _55 = match_fail `badmatch`, _13

  %% Unique:
  %%    _55
  _143 = succeeded:body _55
  br ^1

108:
  %% map_SUITE.erl:1098
  %% Aliased:
  %%    _49
  _56 = match_fail `badmatch`, _49

  %% Unique:
  %%    _56
  _144 = succeeded:body _56
  br ^1

96:
  %% map_SUITE.erl:1097
  %% Aliased:
  %%    _47
  _57 = match_fail `badmatch`, _47

  %% Unique:
  %%    _57
  _154 = succeeded:body _57
  br ^1

83:
  %% map_SUITE.erl:1093
  %% Aliased:
  %%    _45
  _58 = match_fail `badmatch`, _45

  %% Unique:
  %%    _58
  _168 = succeeded:body _58
  br ^1

71:
  %% map_SUITE.erl:1092
  %% Aliased:
  %%    _43
  _59 = match_fail `badmatch`, _43

  %% Unique:
  %%    _59
  _179 = succeeded:body _59
  br ^1

67:
  %% map_SUITE.erl:1091
  %% Aliased:
  %%    M0
  _44 = match_fail `badmap`, M0

  %% Unique:
  %%    _44
  _69 = succeeded:body _44
  br ^1

63:
  %% map_SUITE.erl:1037
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_assoc_large/1-',1}}
  _60 = match_fail `function_clause`, _0

  %% Unique:
  %%    _60
  _180 = succeeded:body _60
  br ^1

1:
  _61 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _61
}

%% map_SUITE.erl:1107
%% Counter = 958
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_exact`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _247 = bif:is_list _0
  br _247, ^247, ^246

247:
  %% map_SUITE.erl:1108
  M0 = call (`id`/1), `#{1 => a,2 => b,4 => d,5 => e,3.0 => c}`

  %% Aliased:
  %%    M0
  _248 = succeeded:body M0
  br _248, ^248, ^1

248:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _251 = bif:is_map M0
  br _251, ^251, ^250

251:
  %% map_SUITE.erl:1110
  %% Aliased:
  %%    M0
  _167 = put_map `exact`, M0, `1`, `42`, `2`, `100`, `4`, `[a,b,c]`

  %% Aliased:
  %%    _167
  _252 = succeeded:body _167
  br _252, ^258, ^1

258:
  %% Argument types:
  %%    _167 => map()
  %% Aliased:
  %%    _167
  _74 = get_map_element _167, `5`

  %% Aliased:
  %%    _74
  _259 = succeeded:guard _74
  br _259, ^259, ^255

259:
  %% Argument types:
  %%    _167 => map()
  %% Aliased:
  %%    _167
  _73 = get_map_element _167, `3.0`

  %% Aliased:
  %%    _73
  _260 = succeeded:guard _73
  br _260, ^728, ^255

728:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _727 = bif:'=:=' _74, `e`
  br _727, ^726, ^255

726:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _725 = bif:'=:=' _73, `c`
  br _725, ^263, ^255

263:
  %% map_SUITE.erl:1112
  %% Aliased:
  %%    M0
  _78 = put_map `assoc`, M0, `2`, `100`

  %% map_SUITE.erl:1112
  %% Aliased:
  %%    _78
  _169 = put_map `exact`, _78, `1`, `42`, `4`, `[a,b,c]`

  %% Aliased:
  %%    _169
  _264 = succeeded:body _169
  br _264, ^261, ^1

261:
  %% Argument types:
  %%    _169 => map()
  %%    _167 => map()
  %% Aliased:
  %%    _167, 
  %%    _169
  _268 = bif:'=:=' _169, _167
  br _268, ^271, ^267

271:
  %% map_SUITE.erl:1114
  %% Aliased:
  %%    M0
  _171 = put_map `exact`, M0, `3.0`, `new`

  %% Aliased:
  %%    _171
  _272 = succeeded:body _171
  br _272, ^721, ^1

721:
  %% Argument types:
  %%    _171 => map()
  %% Aliased:
  %%    _171
  _83 = get_map_element _171, `1`

  %% Aliased:
  %%    _83
  _276 = succeeded:guard _83
  br _276, ^276, ^275

276:
  %% Argument types:
  %%    _171 => map()
  %% Aliased:
  %%    _171
  _82 = get_map_element _171, `2`

  %% Aliased:
  %%    _82
  _277 = succeeded:guard _82
  br _277, ^277, ^275

277:
  %% Argument types:
  %%    _171 => map()
  %% Aliased:
  %%    _171
  _81 = get_map_element _171, `4`

  %% Aliased:
  %%    _81
  _278 = succeeded:guard _81
  br _278, ^278, ^275

278:
  %% Argument types:
  %%    _171 => map()
  %% Aliased:
  %%    _171
  _80 = get_map_element _171, `5`

  %% Aliased:
  %%    _80
  _279 = succeeded:guard _80
  br _279, ^280, ^275

280:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _720 = bif:'=:=' _83, `a`
  br _720, ^719, ^275

719:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _718 = bif:'=:=' _82, `b`
  br _718, ^717, ^275

717:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _716 = bif:'=:=' _81, `d`
  br _716, ^715, ^275

715:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _714 = bif:'=:=' _80, `e`
  br _714, ^283, ^275

283:
  %% map_SUITE.erl:1116
  %% Aliased:
  %%    M0
  _173 = put_map `assoc`, M0, `3.0`, `new`

  %% Argument types:
  %%    _173 => map()
  %%    _171 => map()
  %% Aliased:
  %%    _171, 
  %%    _173
  _287 = bif:'=:=' _173, _171
  br _287, ^290, ^286

290:
  %% map_SUITE.erl:1117
  %% Aliased:
  %%    M0
  _84 = put_map `assoc`, M0, `3`, `right`

  %% map_SUITE.erl:1117
  %% Aliased:
  %%    _84
  _175 = put_map `exact`, _84, `3.0`, `new`

  %% Aliased:
  %%    _175
  _291 = succeeded:body _175
  br _291, ^288, ^1

288:
  %% map_SUITE.erl:1117
  %% Argument types:
  %%    _171 => map()
  %%    _175 => map()
  %% Aliased:
  %%    _171, 
  %%    _175
  _85 = bif:'=:=' _171, _175
  br _85, ^294, ^705

294:
  %% map_SUITE.erl:1117
  _238 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _238
  _709 = succeeded:body _238
  br ^1

705:
  %% Argument types:
  %%    _175 => map()
  %% Aliased:
  %%    _175
  _88 = get_map_element _175, `3`

  %% Aliased:
  %%    _88
  _302 = succeeded:guard _88
  br _302, ^303, ^301

303:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _704 = bif:'=:=' _88, `right`
  br _704, ^701, ^301

701:
  %% map_SUITE.erl:1120
  M3 = call (`id`/1), `#{1 => val}`

  %% Aliased:
  %%    M3
  _304 = succeeded:body M3
  br _304, ^304, ^1

304:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M3
  _307 = bif:is_map M3
  br _307, ^307, ^306

307:
  %% map_SUITE.erl:1121
  %% Aliased:
  %%    M3
  _89 = put_map `assoc`, M3, `1.0`, `new_val4`

  %% map_SUITE.erl:1121
  %% Aliased:
  %%    _89
  _179 = put_map `exact`, _89, `1`, `update2`

  %% Aliased:
  %%    _179
  _308 = succeeded:body _179
  br _308, ^312, ^1

312:
  %% Argument types:
  %%    _179 => map()
  %% Aliased:
  %%    _179
  _90 = get_map_element _179, `1.0`

  %% Aliased:
  %%    _90
  _313 = succeeded:guard _90
  br _313, ^697, ^311

697:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _696 = bif:'=:=' _90, `new_val4`
  br _696, ^933, ^311

933:
  br ^946

946:
  _317 = new_try_tag `'catch'`
  br _317, ^315, ^316

315:
  %% map_SUITE.erl:1127
  _19 = call (`id`/1), `nil`

  %% Aliased:
  %%    _19
  _319 = succeeded:body _19
  br _319, ^319, ^316

319:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _322 = bif:is_map _19
  br _322, ^322, ^321

322:
  %% map_SUITE.erl:1127
  %% Aliased:
  %%    _19
  _183 = put_map `exact`, _19, `a`, `b`

  %% Aliased:
  %%    _183
  _323 = succeeded:body _183
  br _323, ^323, ^316

323:
  br ^314

321:
  %% map_SUITE.erl:1127
  %% Aliased:
  %%    _19
  _184 = match_fail `badmap`, _19

  %% Unique:
  %%    _184
  _324 = succeeded:body _184
  br ^316

316:
  %% Unique:
  %%    _317
  _327 = landingpad `'catch'`, _317

  %% Aliased:
  %%    _327
  _325 = extract _327, `0`
  br ^314

314:
  _328 = phi { _325, ^316 }, { _183, ^323 }

  %% Aliased:
  %%    _328
  %% Unique:
  %%    _317
  _20 = catch_end _317, _328

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _691 = is_tagged_tuple _20, `2`, `'EXIT'`
  br _691, ^688, ^330

688:
  %% Argument types:
  %%    _20 => {''EXIT'', any()}
  %% Aliased:
  %%    _20
  _92 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _685 = bif:is_tuple _92
  br _685, ^685, ^330

685:
  %% Argument types:
  %%    _92 => {...}
  %% Aliased:
  %%    _92
  _686 = bif:tuple_size _92

  %% Argument types:
  %%    _686 => 0..16777215
  %% Unique:
  %%    _686
  _687 = bif:'=:=' _686, `2`
  br _687, ^684, ^330

684:
  %% Argument types:
  %%    _92 => {any(), any()}
  %% Aliased:
  %%    _92
  _95 = get_tuple_element _92, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _683 = bif:'=:=' _95, `{badmap,nil}`
  br _683, ^934, ^330

934:
  br ^947

947:
  _334 = new_try_tag `'catch'`
  br _334, ^338, ^333

338:
  %% map_SUITE.erl:1128
  %% Aliased:
  %%    M0
  _187 = put_map `exact`, M0, `nonexisting`, `val`

  %% Aliased:
  %%    _187
  _339 = succeeded:body _187
  br _339, ^339, ^333

339:
  br ^331

333:
  %% Unique:
  %%    _334
  _343 = landingpad `'catch'`, _334

  %% Aliased:
  %%    _343
  _341 = extract _343, `0`
  br ^331

331:
  _344 = phi { _341, ^333 }, { _187, ^339 }

  %% Aliased:
  %%    _344
  %% Unique:
  %%    _334
  _22 = catch_end _334, _344

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _679 = is_tagged_tuple _22, `2`, `'EXIT'`
  br _679, ^676, ^346

676:
  %% Argument types:
  %%    _22 => {''EXIT'', any()}
  %% Aliased:
  %%    _22
  _96 = get_tuple_element _22, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _673 = bif:is_tuple _96
  br _673, ^673, ^346

673:
  %% Argument types:
  %%    _96 => {...}
  %% Aliased:
  %%    _96
  _674 = bif:tuple_size _96

  %% Argument types:
  %%    _674 => 0..16777215
  %% Unique:
  %%    _674
  _675 = bif:'=:=' _674, `2`
  br _675, ^672, ^346

672:
  %% Argument types:
  %%    _96 => {any(), any()}
  %% Aliased:
  %%    _96
  _99 = get_tuple_element _96, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _671 = bif:'=:=' _99, `{badkey,nonexisting}`
  br _671, ^935, ^346

935:
  br ^948

948:
  _350 = new_try_tag `'catch'`
  br _350, ^354, ^349

354:
  %% map_SUITE.erl:1129
  %% Aliased:
  %%    M0
  _191 = put_map `exact`, M0, `1.0`, `v2`

  %% Aliased:
  %%    _191
  _355 = succeeded:body _191
  br _355, ^355, ^349

355:
  br ^347

349:
  %% Unique:
  %%    _350
  _359 = landingpad `'catch'`, _350

  %% Aliased:
  %%    _359
  _357 = extract _359, `0`
  br ^347

347:
  _360 = phi { _357, ^349 }, { _191, ^355 }

  %% Aliased:
  %%    _360
  %% Unique:
  %%    _350
  _24 = catch_end _350, _360

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _667 = is_tagged_tuple _24, `2`, `'EXIT'`
  br _667, ^664, ^362

664:
  %% Argument types:
  %%    _24 => {''EXIT'', any()}
  %% Aliased:
  %%    _24
  _100 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _661 = bif:is_tuple _100
  br _661, ^661, ^362

661:
  %% Argument types:
  %%    _100 => {...}
  %% Aliased:
  %%    _100
  _662 = bif:tuple_size _100

  %% Argument types:
  %%    _662 => 0..16777215
  %% Unique:
  %%    _662
  _663 = bif:'=:=' _662, `2`
  br _663, ^660, ^362

660:
  %% Argument types:
  %%    _100 => {any(), any()}
  %% Aliased:
  %%    _100
  _103 = get_tuple_element _100, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _659 = bif:'=:=' _103, `{badkey,1.0}`
  br _659, ^936, ^362

936:
  br ^949

949:
  _366 = new_try_tag `'catch'`
  br _366, ^370, ^365

370:
  %% map_SUITE.erl:1130
  %% Aliased:
  %%    M0
  _195 = put_map `exact`, M0, `42.0`, `v`, `42`, `v2`

  %% Aliased:
  %%    _195
  _371 = succeeded:body _195
  br _371, ^371, ^365

371:
  br ^363

365:
  %% Unique:
  %%    _366
  _375 = landingpad `'catch'`, _366

  %% Aliased:
  %%    _375
  _373 = extract _375, `0`
  br ^363

363:
  _376 = phi { _373, ^365 }, { _195, ^371 }

  %% Aliased:
  %%    _376
  %% Unique:
  %%    _366
  _26 = catch_end _366, _376

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _655 = is_tagged_tuple _26, `2`, `'EXIT'`
  br _655, ^652, ^378

652:
  %% Argument types:
  %%    _26 => {''EXIT'', any()}
  %% Aliased:
  %%    _26
  _104 = get_tuple_element _26, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _649 = bif:is_tuple _104
  br _649, ^649, ^378

649:
  %% Argument types:
  %%    _104 => {...}
  %% Aliased:
  %%    _104
  _650 = bif:tuple_size _104

  %% Argument types:
  %%    _650 => 0..16777215
  %% Unique:
  %%    _650
  _651 = bif:'=:=' _650, `2`
  br _651, ^648, ^378

648:
  %% Argument types:
  %%    _104 => {any(), any()}
  %% Aliased:
  %%    _104
  _107 = get_tuple_element _104, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _647 = bif:'=:=' _107, `{badkey,42}`
  br _647, ^647, ^378

647:
  %% map_SUITE.erl:1131
  %% Aliased:
  %%    M0
  _108 = put_map `assoc`, M0, `42`, `v3`
  _382 = new_try_tag `'catch'`
  br _382, ^386, ^381

386:
  %% map_SUITE.erl:1131
  %% Aliased:
  %%    _108
  _199 = put_map `exact`, _108, `42.0`, `v2`

  %% Aliased:
  %%    _199
  _387 = succeeded:body _199
  br _387, ^387, ^381

387:
  br ^379

381:
  %% Unique:
  %%    _382
  _391 = landingpad `'catch'`, _382

  %% Aliased:
  %%    _391
  _389 = extract _391, `0`
  br ^379

379:
  _392 = phi { _389, ^381 }, { _199, ^387 }

  %% Aliased:
  %%    _392
  %% Unique:
  %%    _382
  _28 = catch_end _382, _392

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _643 = is_tagged_tuple _28, `2`, `'EXIT'`
  br _643, ^640, ^394

640:
  %% Argument types:
  %%    _28 => {''EXIT'', any()}
  %% Aliased:
  %%    _28
  _109 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _637 = bif:is_tuple _109
  br _637, ^637, ^394

637:
  %% Argument types:
  %%    _109 => {...}
  %% Aliased:
  %%    _109
  _638 = bif:tuple_size _109

  %% Argument types:
  %%    _638 => 0..16777215
  %% Unique:
  %%    _638
  _639 = bif:'=:=' _638, `2`
  br _639, ^636, ^394

636:
  %% Argument types:
  %%    _109 => {any(), any()}
  %% Aliased:
  %%    _109
  _112 = get_tuple_element _109, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _635 = bif:'=:=' _112, `{badkey,42.0}`
  br _635, ^938, ^394

938:
  br ^950

950:
  _398 = new_try_tag `'catch'`
  br _398, ^396, ^397

396:
  %% map_SUITE.erl:1132
  _202 = match_fail `badmap`, `<<>>`

  %% Unique:
  %%    _202
  _400 = succeeded:body _202
  br ^397

397:
  %% Unique:
  %%    _398
  _403 = landingpad `'catch'`, _398

  %% Aliased:
  %%    _403
  _401 = extract _403, `0`
  br ^395

395:
  %% Aliased:
  %%    _401
  %% Unique:
  %%    _398
  _31 = catch_end _398, _401

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _631 = is_tagged_tuple _31, `2`, `'EXIT'`
  br _631, ^628, ^406

628:
  %% Argument types:
  %%    _31 => {''EXIT'', any()}
  %% Aliased:
  %%    _31
  _113 = get_tuple_element _31, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _625 = bif:is_tuple _113
  br _625, ^625, ^406

625:
  %% Argument types:
  %%    _113 => {...}
  %% Aliased:
  %%    _113
  _626 = bif:tuple_size _113

  %% Argument types:
  %%    _626 => 0..16777215
  %% Unique:
  %%    _626
  _627 = bif:'=:=' _626, `2`
  br _627, ^624, ^406

624:
  %% Argument types:
  %%    _113 => {any(), any()}
  %% Aliased:
  %%    _113
  _116 = get_tuple_element _113, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _623 = bif:'=:=' _116, `{badmap,<<>>}`
  br _623, ^939, ^406

939:
  br ^951

951:
  _410 = new_try_tag `'catch'`
  br _410, ^408, ^409

408:
  %% map_SUITE.erl:1134
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _33 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `257`

  %% Aliased:
  %%    _33
  _412 = succeeded:body _33
  br _412, ^415, ^409

415:
  %% map_SUITE.erl:1134
  %% Aliased:
  %%    _33, 
  %%    M0
  _205 = put_map `exact`, M0, _33, `val`

  %% Aliased:
  %%    _205
  _416 = succeeded:body _205
  br _416, ^416, ^409

416:
  br ^407

409:
  %% Unique:
  %%    _410
  _420 = landingpad `'catch'`, _410

  %% Aliased:
  %%    _420
  _418 = extract _420, `0`
  br ^407

407:
  _421 = phi { _418, ^409 }, { _205, ^416 }

  %% Aliased:
  %%    _421
  %% Unique:
  %%    _410
  _34 = catch_end _410, _421

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _619 = is_tagged_tuple _34, `2`, `'EXIT'`
  br _619, ^616, ^423

616:
  %% Argument types:
  %%    _34 => {''EXIT'', any()}
  %% Aliased:
  %%    _34
  _117 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _613 = bif:is_tuple _117
  br _613, ^613, ^423

613:
  %% Argument types:
  %%    _117 => {...}
  %% Aliased:
  %%    _117
  _614 = bif:tuple_size _117

  %% Argument types:
  %%    _614 => 0..16777215
  %% Unique:
  %%    _614
  _615 = bif:'=:=' _614, `2`
  br _615, ^612, ^423

612:
  %% Argument types:
  %%    _117 => {any(), any()}
  %% Aliased:
  %%    _117
  _120 = get_tuple_element _117, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _609 = is_tagged_tuple _120, `2`, `badkey`
  br _609, ^606, ^423

606:
  %% Argument types:
  %%    _120 => {'badkey', any()}
  %% Aliased:
  %%    _120
  _121 = get_tuple_element _120, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _123 = bs_start_match `new`, _121

  %% Aliased:
  %%    _123
  _605 = succeeded:guard _123
  br _605, ^605, ^423

605:
  %% Argument types:
  %%    _123 => bs_context(1)
  %% Aliased:
  %%    _123
  _140 = bs_match `string`, _123, `<<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0:1>>`

  %% Aliased:
  %%    _140
  _440 = succeeded:guard _140
  br _440, ^440, ^423

440:
  %% Aliased:
  %%    _140
  _604 = bs_test_tail _140, `0`
  br _604, ^940, ^423

940:
  br ^952

952:
  _444 = new_try_tag `'catch'`
  br _444, ^442, ^443

442:
  %% map_SUITE.erl:1137
  _36 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _36
  _446 = succeeded:body _36
  br _446, ^446, ^443

446:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _449 = bif:is_map _36
  br _449, ^449, ^448

449:
  %% map_SUITE.erl:1137
  %% Aliased:
  %%    _36
  _209 = put_map `exact`, _36, `a`, `1`

  %% Aliased:
  %%    _209
  _450 = succeeded:body _209
  br _450, ^450, ^443

450:
  br ^441

448:
  %% map_SUITE.erl:1137
  %% Aliased:
  %%    _36
  _210 = match_fail `badmap`, _36

  %% Unique:
  %%    _210
  _451 = succeeded:body _210
  br ^443

443:
  %% Unique:
  %%    _444
  _454 = landingpad `'catch'`, _444

  %% Aliased:
  %%    _454
  _452 = extract _454, `0`
  br ^441

441:
  _455 = phi { _452, ^443 }, { _209, ^450 }

  %% Aliased:
  %%    _455
  %% Unique:
  %%    _444
  _37 = catch_end _444, _455

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _600 = is_tagged_tuple _37, `2`, `'EXIT'`
  br _600, ^597, ^457

597:
  %% Argument types:
  %%    _37 => {''EXIT'', any()}
  %% Aliased:
  %%    _37
  _141 = get_tuple_element _37, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _594 = bif:is_tuple _141
  br _594, ^594, ^457

594:
  %% Argument types:
  %%    _141 => {...}
  %% Aliased:
  %%    _141
  _595 = bif:tuple_size _141

  %% Argument types:
  %%    _595 => 0..16777215
  %% Unique:
  %%    _595
  _596 = bif:'=:=' _595, `2`
  br _596, ^593, ^457

593:
  %% Argument types:
  %%    _141 => {any(), any()}
  %% Aliased:
  %%    _141
  _144 = get_tuple_element _141, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _144
  _592 = bif:'=:=' _144, `{badkey,a}`
  br _592, ^941, ^457

941:
  br ^953

953:
  _461 = new_try_tag `'catch'`
  br _461, ^459, ^460

459:
  %% map_SUITE.erl:1138
  _212 = put_map `exact`, `#{}`, `a`, `1`

  %% Aliased:
  %%    _212
  _463 = succeeded:body _212
  br _463, ^463, ^460

463:
  br ^458

460:
  %% Unique:
  %%    _461
  _466 = landingpad `'catch'`, _461

  %% Aliased:
  %%    _466
  _464 = extract _466, `0`
  br ^458

458:
  _467 = phi { _464, ^460 }, { _212, ^463 }

  %% Aliased:
  %%    _467
  %% Unique:
  %%    _461
  _39 = catch_end _461, _467

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _588 = is_tagged_tuple _39, `2`, `'EXIT'`
  br _588, ^585, ^469

585:
  %% Argument types:
  %%    _39 => {''EXIT'', any()}
  %% Aliased:
  %%    _39
  _145 = get_tuple_element _39, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _582 = bif:is_tuple _145
  br _582, ^582, ^469

582:
  %% Argument types:
  %%    _145 => {...}
  %% Aliased:
  %%    _145
  _583 = bif:tuple_size _145

  %% Argument types:
  %%    _583 => 0..16777215
  %% Unique:
  %%    _583
  _584 = bif:'=:=' _583, `2`
  br _584, ^581, ^469

581:
  %% Argument types:
  %%    _145 => {any(), any()}
  %% Aliased:
  %%    _145
  _148 = get_tuple_element _145, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _580 = bif:'=:=' _148, `{badkey,a}`
  br _580, ^942, ^469

942:
  br ^954

954:
  _473 = new_try_tag `'catch'`
  br _473, ^471, ^472

471:
  %% map_SUITE.erl:1140
  _214 = put_map `exact`, `#{}`, `a`, `1`

  %% Aliased:
  %%    _214
  _475 = succeeded:body _214
  br _475, ^475, ^472

475:
  br ^470

472:
  %% Unique:
  %%    _473
  _478 = landingpad `'catch'`, _473

  %% Aliased:
  %%    _478
  _476 = extract _478, `0`
  br ^470

470:
  _479 = phi { _476, ^472 }, { _214, ^475 }

  %% Aliased:
  %%    _479
  %% Unique:
  %%    _473
  _42 = catch_end _473, _479

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _576 = is_tagged_tuple _42, `2`, `'EXIT'`
  br _576, ^573, ^481

573:
  %% Argument types:
  %%    _42 => {''EXIT'', any()}
  %% Aliased:
  %%    _42
  _149 = get_tuple_element _42, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _149
  _570 = bif:is_tuple _149
  br _570, ^570, ^481

570:
  %% Argument types:
  %%    _149 => {...}
  %% Aliased:
  %%    _149
  _571 = bif:tuple_size _149

  %% Argument types:
  %%    _571 => 0..16777215
  %% Unique:
  %%    _571
  _572 = bif:'=:=' _571, `2`
  br _572, ^569, ^481

569:
  %% Argument types:
  %%    _149 => {any(), any()}
  %% Aliased:
  %%    _149
  _152 = get_tuple_element _149, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _152
  _568 = bif:'=:=' _152, `{badkey,a}`
  br _568, ^568, ^481

568:
  %% map_SUITE.erl:1143
  BadMap = call (`id`/1), `[no,map]`

  %% Aliased:
  %%    BadMap
  _482 = succeeded:body BadMap
  br _482, ^943, ^1

943:
  br ^955

955:
  _486 = new_try_tag `'catch'`
  br _486, ^484, ^485

484:
  %% map_SUITE.erl:1145
  _216 = call (`erlang`:`error`/1), `blurf`

  %% Aliased:
  %%    _216
  _488 = succeeded:body _216
  br ^485

485:
  %% Unique:
  %%    _486
  _491 = landingpad `'catch'`, _486

  %% Aliased:
  %%    _491
  _489 = extract _491, `0`
  br ^483

483:
  %% Aliased:
  %%    _489
  %% Unique:
  %%    _486
  _47 = catch_end _486, _489

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _564 = is_tagged_tuple _47, `2`, `'EXIT'`
  br _564, ^561, ^494

561:
  %% Argument types:
  %%    _47 => {''EXIT'', any()}
  %% Aliased:
  %%    _47
  _153 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _558 = is_tagged_tuple _153, `2`, `blurf`
  br _558, ^944, ^494

944:
  br ^956

956:
  _498 = new_try_tag `'catch'`
  br _498, ^496, ^497

496:
  %% map_SUITE.erl:1147
  _218 = call (`erlang`:`error`/1), `blurf`

  %% Aliased:
  %%    _218
  _500 = succeeded:body _218
  br ^497

497:
  %% Unique:
  %%    _498
  _503 = landingpad `'catch'`, _498

  %% Aliased:
  %%    _503
  _501 = extract _503, `0`
  br ^495

495:
  %% Aliased:
  %%    _501
  %% Unique:
  %%    _498
  _51 = catch_end _498, _501

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _551 = is_tagged_tuple _51, `2`, `'EXIT'`
  br _551, ^548, ^506

548:
  %% Argument types:
  %%    _51 => {''EXIT'', any()}
  %% Aliased:
  %%    _51
  _157 = get_tuple_element _51, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _545 = is_tagged_tuple _157, `2`, `blurf`
  br _545, ^945, ^506

945:
  br ^957

957:
  _510 = new_try_tag `'catch'`
  br _510, ^508, ^509

508:
  %% map_SUITE.erl:1149
  _53 = call (`id`/1), `nonexisting`

  %% Aliased:
  %%    _53
  _512 = succeeded:body _53
  br _512, ^512, ^509

512:
  %% Argument types:
  %%    
  %% Aliased:
  %%    BadMap
  _515 = bif:is_map BadMap
  br _515, ^515, ^514

515:
  %% map_SUITE.erl:1149
  %% Aliased:
  %%    _53, 
  %%    BadMap
  _221 = put_map `exact`, BadMap, _53, `whatever`

  %% Aliased:
  %%    _221
  _516 = succeeded:body _221
  br _516, ^516, ^509

516:
  br ^507

514:
  %% map_SUITE.erl:1149
  %% Aliased:
  %%    BadMap
  _222 = match_fail `badmap`, BadMap

  %% Unique:
  %%    _222
  _517 = succeeded:body _222
  br ^509

509:
  %% Unique:
  %%    _510
  _520 = landingpad `'catch'`, _510

  %% Aliased:
  %%    _520
  _518 = extract _520, `0`
  br ^507

507:
  _521 = phi { _518, ^509 }, { _221, ^516 }

  %% Aliased:
  %%    _521
  %% Unique:
  %%    _510
  _54 = catch_end _510, _521

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _538 = is_tagged_tuple _54, `2`, `'EXIT'`
  br _538, ^535, ^523

535:
  %% Argument types:
  %%    _54 => {''EXIT'', any()}
  %% Aliased:
  %%    _54
  _161 = get_tuple_element _54, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _532 = bif:is_tuple _161
  br _532, ^532, ^523

532:
  %% Argument types:
  %%    _161 => {...}
  %% Aliased:
  %%    _161
  _533 = bif:tuple_size _161

  %% Argument types:
  %%    _533 => 0..16777215
  %% Unique:
  %%    _533
  _534 = bif:'=:=' _533, `2`
  br _534, ^531, ^523

531:
  %% Argument types:
  %%    _161 => {any(), any()}
  %% Aliased:
  %%    _161
  _164 = get_tuple_element _161, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _164
  _528 = is_tagged_tuple _164, `2`, `badmap`
  br _528, ^525, ^523

525:
  %% Argument types:
  %%    _164 => {'badmap', any()}
  %% Aliased:
  %%    _164
  _165 = get_tuple_element _164, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _165, 
  %%    BadMap
  _524 = bif:'=:=' _165, BadMap
  br _524, ^524, ^523

524:
  %% Result type:
  %%    'ok'
  ret `ok`

523:
  %% map_SUITE.erl:1148
  %% Aliased:
  %%    _54
  _223 = match_fail `badmatch`, _54

  %% Unique:
  %%    _223
  _541 = succeeded:body _223
  br ^1

506:
  %% map_SUITE.erl:1146
  %% Aliased:
  %%    _51
  _224 = match_fail `badmatch`, _51

  %% Unique:
  %%    _224
  _554 = succeeded:body _224
  br ^1

494:
  %% map_SUITE.erl:1144
  %% Aliased:
  %%    _47
  _225 = match_fail `badmatch`, _47

  %% Unique:
  %%    _225
  _567 = succeeded:body _225
  br ^1

481:
  %% map_SUITE.erl:1140
  %% Aliased:
  %%    _42
  _226 = match_fail `badmatch`, _42

  %% Unique:
  %%    _226
  _579 = succeeded:body _226
  br ^1

469:
  %% map_SUITE.erl:1138
  %% Aliased:
  %%    _39
  _227 = match_fail `badmatch`, _39

  %% Unique:
  %%    _227
  _591 = succeeded:body _227
  br ^1

457:
  %% map_SUITE.erl:1137
  %% Aliased:
  %%    _37
  _228 = match_fail `badmatch`, _37

  %% Unique:
  %%    _228
  _603 = succeeded:body _228
  br ^1

423:
  %% map_SUITE.erl:1133
  %% Aliased:
  %%    _34
  _229 = match_fail `badmatch`, _34

  %% Unique:
  %%    _229
  _622 = succeeded:body _229
  br ^1

406:
  %% map_SUITE.erl:1132
  %% Aliased:
  %%    _31
  _230 = match_fail `badmatch`, _31

  %% Unique:
  %%    _230
  _634 = succeeded:body _230
  br ^1

394:
  %% map_SUITE.erl:1131
  %% Aliased:
  %%    _28
  _231 = match_fail `badmatch`, _28

  %% Unique:
  %%    _231
  _646 = succeeded:body _231
  br ^1

378:
  %% map_SUITE.erl:1130
  %% Aliased:
  %%    _26
  _232 = match_fail `badmatch`, _26

  %% Unique:
  %%    _232
  _658 = succeeded:body _232
  br ^1

362:
  %% map_SUITE.erl:1129
  %% Aliased:
  %%    _24
  _233 = match_fail `badmatch`, _24

  %% Unique:
  %%    _233
  _670 = succeeded:body _233
  br ^1

346:
  %% map_SUITE.erl:1128
  %% Aliased:
  %%    _22
  _234 = match_fail `badmatch`, _22

  %% Unique:
  %%    _234
  _682 = succeeded:body _234
  br ^1

330:
  %% map_SUITE.erl:1127
  %% Aliased:
  %%    _20
  _235 = match_fail `badmatch`, _20

  %% Unique:
  %%    _235
  _694 = succeeded:body _235
  br ^1

311:
  %% map_SUITE.erl:1121
  %% Aliased:
  %%    _179
  _236 = match_fail `badmatch`, _179

  %% Unique:
  %%    _236
  _700 = succeeded:body _236
  br ^1

306:
  %% map_SUITE.erl:1121
  %% Aliased:
  %%    M3
  _180 = match_fail `badmap`, M3

  %% Unique:
  %%    _180
  _309 = succeeded:body _180
  br ^1

301:
  %% map_SUITE.erl:1118
  %% Aliased:
  %%    _175
  _237 = match_fail `badmatch`, _175

  %% Unique:
  %%    _237
  _706 = succeeded:body _237
  br ^1

286:
  %% map_SUITE.erl:1116
  %% Aliased:
  %%    _173
  _239 = match_fail `badmatch`, _173

  %% Unique:
  %%    _239
  _710 = succeeded:body _239
  br ^1

275:
  %% map_SUITE.erl:1115
  %% Aliased:
  %%    _171
  _240 = match_fail `badmatch`, _171

  %% Unique:
  %%    _240
  _722 = succeeded:body _240
  br ^1

267:
  %% map_SUITE.erl:1112
  %% Aliased:
  %%    _169
  _241 = match_fail `badmatch`, _169

  %% Unique:
  %%    _241
  _723 = succeeded:body _241
  br ^1

255:
  %% map_SUITE.erl:1111
  %% Aliased:
  %%    _167
  _242 = match_fail `badmatch`, _167

  %% Unique:
  %%    _242
  _734 = succeeded:body _242
  br ^1

250:
  %% map_SUITE.erl:1110
  %% Aliased:
  %%    M0
  _168 = match_fail `badmap`, M0

  %% Unique:
  %%    _168
  _253 = succeeded:body _168
  br ^1

246:
  %% map_SUITE.erl:1107
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_exact/1-',1}}
  _243 = match_fail `function_clause`, _0

  %% Unique:
  %%    _243
  _735 = succeeded:body _243
  br ^1

1:
  _244 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _244
}

%% map_SUITE.erl:1152
%% Counter = 327
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_exact_large`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _89 = bif:is_list _0
  br _89, ^89, ^88

89:
  %% map_SUITE.erl:1153
  M0 = call (`id`/1), `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",10.0 => fa0,11.0 => fa1,12.0 => fa2,13.0 => fa3,14.0 => fa4,
   15.0 => fa5,16.0 => fa6,17.0 => fa7,18.0 => fa8,19.0 => fa9,20.0 => fb0,
   21.0 => fb1,22.0 => fb2,23.0 => fb3,24.0 => fb4,25.0 => fb5,26.0 => fb6,
   27.0 => fb7,28.0 => fb8,29.0 => fb9,30.0 => "fc0",31.0 => "fc1",
   32.0 => "fc2",33.0 => "fc3",34.0 => "fc4",35.0 => "fc5",36.0 => "fc6",
   37.0 => "fc7",38.0 => "fc8",39.0 => "fc9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   #{map => key,one => small} => "small map key 1",
   #{map => key,third => small} => "small map key 3",
   #{map => key,second => small} => "small map key 2",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
     18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
     26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
     33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
     39 => "c9",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 1",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
     19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
     28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
     35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
     k36 => "c6",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 2",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M0
  _90 = succeeded:body M0
  br _90, ^90, ^1

90:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _93 = bif:is_map M0
  br _93, ^93, ^92

93:
  %% map_SUITE.erl:1206
  %% Aliased:
  %%    M0
  _53 = put_map `exact`, M0, `10`, `42`, `10.0`, `[a,b,c]`, `<<"55">>`, `100`

  %% Aliased:
  %%    _53
  _94 = succeeded:body _53
  br _94, ^99, ^1

99:
  %% Argument types:
  %%    _53 => map()
  %% Aliased:
  %%    _53
  _29 = get_map_element _53, `{["05"]}`

  %% Aliased:
  %%    _29
  _100 = succeeded:guard _29
  br _100, ^100, ^97

100:
  %% Argument types:
  %%    _53 => map()
  %% Aliased:
  %%    _53
  _28 = get_map_element _53, `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",
   {["00"]} => "10",
   {["01"]} => "11",
   {["02"]} => "12",
   {["03"]} => "13",
   {["04"]} => "14",
   {["05"]} => "15",
   {["06"]} => "16",
   {["07"]} => "17",
   {["08"]} => "18",
   {["09"]} => "19",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    _28
  _101 = succeeded:guard _28
  br _101, ^254, ^97

254:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _253 = bif:'=:=' _29, `"15"`
  br _253, ^253, ^97

253:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _252 = bif:'=:=' _28, `"large map key 1"`
  br _252, ^105, ^97

105:
  %% map_SUITE.erl:1220
  %% Aliased:
  %%    M0
  _32 = put_map `assoc`, M0, `<<"55">>`, `100`

  %% map_SUITE.erl:1220
  %% Aliased:
  %%    _32
  _55 = put_map `exact`, _32, `10`, `42`, `10.0`, `[a,b,c]`

  %% Aliased:
  %%    _55
  _106 = succeeded:body _55
  br _106, ^103, ^1

103:
  %% Argument types:
  %%    _55 => map()
  %%    _53 => map()
  %% Aliased:
  %%    _53, 
  %%    _55
  _110 = bif:'=:=' _55, _53
  br _110, ^113, ^109

113:
  %% map_SUITE.erl:1222
  %% Aliased:
  %%    M0
  _57 = put_map `exact`, M0, `13.0`, `new`

  %% Aliased:
  %%    _57
  _114 = succeeded:body _57
  br _114, ^247, ^1

247:
  %% Argument types:
  %%    _57 => map()
  %% Aliased:
  %%    _57
  _35 = get_map_element _57, `10`

  %% Aliased:
  %%    _35
  _118 = succeeded:guard _35
  br _118, ^118, ^117

118:
  %% Argument types:
  %%    _57 => map()
  %% Aliased:
  %%    _57
  _34 = get_map_element _57, `20`

  %% Aliased:
  %%    _34
  _119 = succeeded:guard _34
  br _119, ^120, ^117

120:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _246 = bif:'=:=' _35, `a0`
  br _246, ^245, ^117

245:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _244 = bif:'=:=' _34, `b0`
  br _244, ^123, ^117

123:
  %% map_SUITE.erl:1224
  %% Aliased:
  %%    M0
  _59 = put_map `assoc`, M0, `13.0`, `new`

  %% Argument types:
  %%    _59 => map()
  %%    _57 => map()
  %% Aliased:
  %%    _57, 
  %%    _59
  _127 = bif:'=:=' _59, _57
  br _127, ^320, ^126

320:
  br ^324

324:
  _131 = new_try_tag `'catch'`
  br _131, ^135, ^130

135:
  %% map_SUITE.erl:1227
  %% Aliased:
  %%    M0
  _63 = put_map `exact`, M0, `nonexisting`, `val`

  %% Aliased:
  %%    _63
  _136 = succeeded:body _63
  br _136, ^136, ^130

136:
  br ^128

130:
  %% Unique:
  %%    _131
  _140 = landingpad `'catch'`, _131

  %% Aliased:
  %%    _140
  _138 = extract _140, `0`
  br ^128

128:
  _141 = phi { _138, ^130 }, { _63, ^136 }

  %% Aliased:
  %%    _141
  %% Unique:
  %%    _131
  _12 = catch_end _131, _141

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _236 = is_tagged_tuple _12, `2`, `'EXIT'`
  br _236, ^233, ^143

233:
  %% Argument types:
  %%    _12 => {''EXIT'', any()}
  %% Aliased:
  %%    _12
  _36 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _230 = bif:is_tuple _36
  br _230, ^230, ^143

230:
  %% Argument types:
  %%    _36 => {...}
  %% Aliased:
  %%    _36
  _231 = bif:tuple_size _36

  %% Argument types:
  %%    _231 => 0..16777215
  %% Unique:
  %%    _231
  _232 = bif:'=:=' _231, `2`
  br _232, ^229, ^143

229:
  %% Argument types:
  %%    _36 => {any(), any()}
  %% Aliased:
  %%    _36
  _39 = get_tuple_element _36, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _228 = bif:'=:=' _39, `{badkey,nonexisting}`
  br _228, ^321, ^143

321:
  br ^325

325:
  _147 = new_try_tag `'catch'`
  br _147, ^151, ^146

151:
  %% map_SUITE.erl:1228
  %% Aliased:
  %%    M0
  _67 = put_map `exact`, M0, `1.0`, `v2`

  %% Aliased:
  %%    _67
  _152 = succeeded:body _67
  br _152, ^152, ^146

152:
  br ^144

146:
  %% Unique:
  %%    _147
  _156 = landingpad `'catch'`, _147

  %% Aliased:
  %%    _156
  _154 = extract _156, `0`
  br ^144

144:
  _157 = phi { _154, ^146 }, { _67, ^152 }

  %% Aliased:
  %%    _157
  %% Unique:
  %%    _147
  _14 = catch_end _147, _157

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _224 = is_tagged_tuple _14, `2`, `'EXIT'`
  br _224, ^221, ^159

221:
  %% Argument types:
  %%    _14 => {''EXIT'', any()}
  %% Aliased:
  %%    _14
  _40 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _218 = bif:is_tuple _40
  br _218, ^218, ^159

218:
  %% Argument types:
  %%    _40 => {...}
  %% Aliased:
  %%    _40
  _219 = bif:tuple_size _40

  %% Argument types:
  %%    _219 => 0..16777215
  %% Unique:
  %%    _219
  _220 = bif:'=:=' _219, `2`
  br _220, ^217, ^159

217:
  %% Argument types:
  %%    _40 => {any(), any()}
  %% Aliased:
  %%    _40
  _43 = get_tuple_element _40, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _216 = bif:'=:=' _43, `{badkey,1.0}`
  br _216, ^322, ^159

322:
  br ^326

326:
  _163 = new_try_tag `'catch'`
  br _163, ^167, ^162

167:
  %% map_SUITE.erl:1229
  %% Aliased:
  %%    M0
  _71 = put_map `exact`, M0, `42.0`, `v`, `42`, `v2`

  %% Aliased:
  %%    _71
  _168 = succeeded:body _71
  br _168, ^168, ^162

168:
  br ^160

162:
  %% Unique:
  %%    _163
  _172 = landingpad `'catch'`, _163

  %% Aliased:
  %%    _172
  _170 = extract _172, `0`
  br ^160

160:
  _173 = phi { _170, ^162 }, { _71, ^168 }

  %% Aliased:
  %%    _173
  %% Unique:
  %%    _163
  _16 = catch_end _163, _173

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _212 = is_tagged_tuple _16, `2`, `'EXIT'`
  br _212, ^209, ^175

209:
  %% Argument types:
  %%    _16 => {''EXIT'', any()}
  %% Aliased:
  %%    _16
  _44 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _206 = bif:is_tuple _44
  br _206, ^206, ^175

206:
  %% Argument types:
  %%    _44 => {...}
  %% Aliased:
  %%    _44
  _207 = bif:tuple_size _44

  %% Argument types:
  %%    _207 => 0..16777215
  %% Unique:
  %%    _207
  _208 = bif:'=:=' _207, `2`
  br _208, ^205, ^175

205:
  %% Argument types:
  %%    _44 => {any(), any()}
  %% Aliased:
  %%    _44
  _47 = get_tuple_element _44, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _204 = bif:'=:=' _47, `{badkey,42}`
  br _204, ^204, ^175

204:
  %% map_SUITE.erl:1230
  %% Aliased:
  %%    M0
  _48 = put_map `assoc`, M0, `42`, `v3`
  _179 = new_try_tag `'catch'`
  br _179, ^183, ^178

183:
  %% map_SUITE.erl:1230
  %% Aliased:
  %%    _48
  _75 = put_map `exact`, _48, `42.0`, `v2`

  %% Aliased:
  %%    _75
  _184 = succeeded:body _75
  br _184, ^184, ^178

184:
  br ^176

178:
  %% Unique:
  %%    _179
  _188 = landingpad `'catch'`, _179

  %% Aliased:
  %%    _188
  _186 = extract _188, `0`
  br ^176

176:
  _189 = phi { _186, ^178 }, { _75, ^184 }

  %% Aliased:
  %%    _189
  %% Unique:
  %%    _179
  _18 = catch_end _179, _189

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _200 = is_tagged_tuple _18, `2`, `'EXIT'`
  br _200, ^197, ^191

197:
  %% Argument types:
  %%    _18 => {''EXIT'', any()}
  %% Aliased:
  %%    _18
  _49 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _194 = bif:is_tuple _49
  br _194, ^194, ^191

194:
  %% Argument types:
  %%    _49 => {...}
  %% Aliased:
  %%    _49
  _195 = bif:tuple_size _49

  %% Argument types:
  %%    _195 => 0..16777215
  %% Unique:
  %%    _195
  _196 = bif:'=:=' _195, `2`
  br _196, ^193, ^191

193:
  %% Argument types:
  %%    _49 => {any(), any()}
  %% Aliased:
  %%    _49
  _52 = get_tuple_element _49, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _192 = bif:'=:=' _52, `{badkey,42.0}`
  br _192, ^192, ^191

192:
  %% Result type:
  %%    'ok'
  ret `ok`

191:
  %% map_SUITE.erl:1230
  %% Aliased:
  %%    _18
  _77 = match_fail `badmatch`, _18

  %% Unique:
  %%    _77
  _203 = succeeded:body _77
  br ^1

175:
  %% map_SUITE.erl:1229
  %% Aliased:
  %%    _16
  _78 = match_fail `badmatch`, _16

  %% Unique:
  %%    _78
  _215 = succeeded:body _78
  br ^1

159:
  %% map_SUITE.erl:1228
  %% Aliased:
  %%    _14
  _79 = match_fail `badmatch`, _14

  %% Unique:
  %%    _79
  _227 = succeeded:body _79
  br ^1

143:
  %% map_SUITE.erl:1227
  %% Aliased:
  %%    _12
  _80 = match_fail `badmatch`, _12

  %% Unique:
  %%    _80
  _239 = succeeded:body _80
  br ^1

126:
  %% map_SUITE.erl:1224
  %% Aliased:
  %%    _59
  _81 = match_fail `badmatch`, _59

  %% Unique:
  %%    _81
  _240 = succeeded:body _81
  br ^1

117:
  %% map_SUITE.erl:1223
  %% Aliased:
  %%    _57
  _82 = match_fail `badmatch`, _57

  %% Unique:
  %%    _82
  _248 = succeeded:body _82
  br ^1

109:
  %% map_SUITE.erl:1220
  %% Aliased:
  %%    _55
  _83 = match_fail `badmatch`, _55

  %% Unique:
  %%    _83
  _249 = succeeded:body _83
  br ^1

97:
  %% map_SUITE.erl:1207
  %% Aliased:
  %%    _53
  _84 = match_fail `badmatch`, _53

  %% Unique:
  %%    _84
  _258 = succeeded:body _84
  br ^1

92:
  %% map_SUITE.erl:1206
  %% Aliased:
  %%    M0
  _54 = match_fail `badmap`, M0

  %% Unique:
  %%    _54
  _95 = succeeded:body _54
  br ^1

88:
  %% map_SUITE.erl:1152
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_exact_large/1-',1}}
  _85 = match_fail `function_clause`, _0

  %% Unique:
  %%    _85
  _259 = succeeded:body _85
  br ^1

1:
  _86 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _86
}

%% map_SUITE.erl:1234
%% Counter = 186
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_values`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _111 = bif:is_list _0
  br _111, ^111, ^110

111:
  %% map_SUITE.erl:1235
  V0 = call (`id`/1), `1337`

  %% Aliased:
  %%    V0
  _112 = succeeded:body V0
  br _112, ^112, ^1

112:
  %% map_SUITE.erl:1236
  %% Aliased:
  %%    V0
  M0 = put_map `assoc`, `#{}`, `a`, `1`, `val`, V0

  %% map_SUITE.erl:1237
  %% Aliased:
  %%    M0
  V1 = call (`get_val`/1), M0

  %% Aliased:
  %%    V1
  _113 = succeeded:body V1
  br _113, ^116, ^1

116:
  %% Argument types:
  %%    
  %% Aliased:
  %%    V1
  _45 = put_list V1, `[]`

  %% Argument types:
  %%    _45 => nonempty_list(any())
  %% Aliased:
  %%    _45, 
  %%    V0
  _46 = put_list V0, _45

  %% map_SUITE.erl:1238
  %% Aliased:
  %%    M0
  _47 = put_map `assoc`, M0, `"wazzup"`, `42`

  %% map_SUITE.erl:1238
  %% Aliased:
  %%    _46, 
  %%    _47
  _92 = put_map `exact`, _47, `val`, _46

  %% Aliased:
  %%    _92
  _117 = succeeded:body _92
  br _117, ^183, ^1

183:
  %% map_SUITE.erl:1238
  %% Aliased:
  %%    _92
  M1 = call (`id`/1), _92

  %% Aliased:
  %%    M1
  _119 = succeeded:body M1
  br _119, ^119, ^1

119:
  %% map_SUITE.erl:1239
  %% Aliased:
  %%    M1
  _48 = call (`get_val`/1), M1

  %% Aliased:
  %%    _48
  _120 = succeeded:body _48
  br _120, ^120, ^1

120:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _173 = bif:'=:=' _48, `[1337,{some_val,1337}]`
  br _173, ^173, ^122

173:
  %% map_SUITE.erl:1240
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _7 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `325`, `binary`, `[1]`, `<<"*">>`, `all`

  %% Aliased:
  %%    _7
  _123 = succeeded:body _7
  br _123, ^123, ^1

123:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M1
  _126 = bif:is_map M1
  br _126, ^126, ^125

126:
  %% map_SUITE.erl:1240
  %% Aliased:
  %%    _7, 
  %%    M1
  _94 = put_map `assoc`, M1, _7, `1337`

  %% map_SUITE.erl:1240
  %% Aliased:
  %%    _94
  M2 = call (`id`/1), _94

  %% Aliased:
  %%    M2
  _128 = succeeded:body M2
  br _128, ^128, ^1

128:
  %% map_SUITE.erl:1241
  %% Aliased:
  %%    M2
  _49 = call (`get_val`/1), M2

  %% Aliased:
  %%    _49
  _129 = succeeded:body _49
  br _129, ^129, ^1

129:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _171 = bif:'=:=' _49, `{bin_key,1337}`
  br _171, ^171, ^131

171:
  %% map_SUITE.erl:1244
  _14 = call (`lists`:`seq`/2), `1`, `110`

  %% Aliased:
  %%    _14
  _132 = succeeded:body _14
  br _132, ^132, ^1

132:
  %% map_SUITE.erl:1244
  %% Result type:
  %%    list({nonempty_list(any()), {1, 2, 3, nonempty_list(97..119), any()}})
  %% Aliased:
  %%    _14
  _18 = call (`'-t_update_values/1-lc$^0/1-0-'`/1), _14

  %% Unique:
  %%    _18
  _133 = succeeded:body _18
  br _133, ^133, ^1

133:
  %% Result type:
  %%    {any(), any(), map()}
  _29 = make_fun (`'-t_update_values/1-fun-1-'`/2)

  %% map_SUITE.erl:1246
  %% Aliased:
  %%    _29
  %% Unique:
  %%    _18
  _70 = call (`lists`:`foldl`/3), _29, `{none,none,#{val1 => none,val2 => none}}`, _18

  %% Aliased:
  %%    _70
  _134 = succeeded:body _70
  br _134, ^165, ^1

165:
  %% Argument types:
  %%    _70 => {any(), any(), map()}
  %% Aliased:
  %%    _70
  _71 = get_tuple_element _70, `2`

  %% Argument types:
  %%    _71 => map()
  %% Aliased:
  %%    _71
  _75 = get_map_element _71, `val1`

  %% Aliased:
  %%    _75
  _137 = succeeded:guard _75
  br _137, ^137, ^136

137:
  %% Argument types:
  %%    _71 => map()
  %% Aliased:
  %%    _71
  _74 = get_map_element _71, `val2`

  %% Aliased:
  %%    _74
  _138 = succeeded:guard _74
  br _138, ^138, ^136

138:
  %% Aliased:
  %%    _75
  _164 = is_nonempty_list _75
  br _164, ^164, ^136

164:
  %% Argument types:
  %%    _75 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _75
  _77 = get_hd _75

  %% Argument types:
  %%    _75 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _75
  _76 = get_tl _75

  %% Aliased:
  %%    _76
  _163 = is_nonempty_list _76
  br _163, ^163, ^136

163:
  %% Argument types:
  %%    _76 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _76
  _79 = get_hd _76

  %% Argument types:
  %%    _76 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _76
  _78 = get_tl _76

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _162 = bif:'=:=' _79, `1`
  br _162, ^161, ^136

161:
  %% Aliased:
  %%    _78
  _160 = is_nonempty_list _78
  br _160, ^160, ^136

160:
  %% Argument types:
  %%    _78 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _78
  _81 = get_hd _78

  %% Argument types:
  %%    _78 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _78
  _80 = get_tl _78

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _159 = bif:'=:=' _81, `2`
  br _159, ^158, ^136

158:
  %% Aliased:
  %%    _80
  _157 = is_nonempty_list _80
  br _157, ^157, ^136

157:
  %% Argument types:
  %%    _80 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _80
  _83 = get_hd _80

  %% Argument types:
  %%    _80 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _80
  _82 = get_tl _80

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _156 = bif:'=:=' _83, `3`
  br _156, ^155, ^136

155:
  %% Aliased:
  %%    _82
  _154 = is_nonempty_list _82
  br _154, ^154, ^136

154:
  %% Argument types:
  %%    _82 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _82
  _85 = get_hd _82

  %% Argument types:
  %%    _82 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _82
  _84 = get_tl _82

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _153 = bif:'=:=' _84, `[]`
  br _153, ^153, ^136

153:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _150 = bif:is_tuple _74
  br _150, ^150, ^136

150:
  %% Argument types:
  %%    _74 => {...}
  %% Aliased:
  %%    _74
  _151 = bif:tuple_size _74

  %% Argument types:
  %%    _151 => 0..16777215
  %% Unique:
  %%    _151
  _152 = bif:'=:=' _151, `5`
  br _152, ^149, ^136

149:
  %% Argument types:
  %%    _74 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _74
  _90 = get_tuple_element _74, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _148 = bif:'=:=' _90, `1`
  br _148, ^147, ^136

147:
  %% Argument types:
  %%    _74 => {1, any(), any(), any(), any()}
  %% Aliased:
  %%    _74
  _89 = get_tuple_element _74, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _146 = bif:'=:=' _89, `2`
  br _146, ^145, ^136

145:
  %% Argument types:
  %%    _74 => {1, 2, any(), any(), any()}
  %% Aliased:
  %%    _74
  _88 = get_tuple_element _74, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _144 = bif:'=:=' _88, `3`
  br _144, ^143, ^136

143:
  %% Argument types:
  %%    _74 => {1, 2, 3, any(), any()}
  %% Aliased:
  %%    _74
  _87 = get_tuple_element _74, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _142 = bif:'=:=' _87, `"wat"`
  br _142, ^142, ^136

142:
  %% map_SUITE.erl:1246
  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _43 = bif:'=:=' _77, `110`
  br _43, ^179, ^136

179:
  %% map_SUITE.erl:1246
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _41 = bif:'=:=' _85, `110`
  br _41, ^180, ^136

180:
  %% Argument types:
  %%    _74 => {1, 2, 3, nonempty_list(97..119), any()}
  %% Aliased:
  %%    _74
  _86 = get_tuple_element _74, `4`

  %% map_SUITE.erl:1246
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _42 = bif:'=:=' _86, `110`
  br _42, ^141, ^136

141:
  %% Result type:
  %%    'ok'
  ret `ok`

136:
  %% map_SUITE.erl:1246
  %% Aliased:
  %%    _70
  _104 = match_fail `badmatch`, _70

  %% Unique:
  %%    _104
  _170 = succeeded:body _104
  br ^1

131:
  %% map_SUITE.erl:1241
  %% Aliased:
  %%    _49
  _105 = match_fail `badmatch`, _49

  %% Unique:
  %%    _105
  _172 = succeeded:body _105
  br ^1

125:
  %% map_SUITE.erl:1240
  %% Aliased:
  %%    M1
  _95 = match_fail `badmap`, M1

  %% Unique:
  %%    _95
  _127 = succeeded:body _95
  br ^1

122:
  %% map_SUITE.erl:1239
  %% Aliased:
  %%    _48
  _106 = match_fail `badmatch`, _48

  %% Unique:
  %%    _106
  _174 = succeeded:body _106
  br ^1

110:
  %% map_SUITE.erl:1234
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_values/1-',1}}
  _107 = match_fail `function_clause`, _0

  %% Unique:
  %%    _107
  _175 = succeeded:body _107
  br ^1

1:
  _108 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _108
}

%% map_SUITE.erl:1254
%% Counter = 20
%% bs_ensure_opt: true
function `map_SUITE`:`t_expand_map_update`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _12 = bif:is_list _0
  br _12, ^17, ^11

17:
  %% Argument types:
  %%    
  _6 = get_map_element `#{<<"hello">> => <<"les gens">>}`, `<<"hello">>`

  %% Aliased:
  %%    _6
  _15 = succeeded:guard _6
  br _15, ^15, ^14

15:
  %% Argument types:
  %%    _6 => bitstring(64)
  %% Aliased:
  %%    _6
  _16 = bif:'=:=' _6, `<<"les gens">>`
  br _16, ^16, ^14

16:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% map_SUITE.erl:1256
  _7 = match_fail `badmatch`, `#{<<"hello">> => <<"les gens">>}`

  %% Unique:
  %%    _7
  _18 = succeeded:body _7
  br ^1

11:
  %% map_SUITE.erl:1254
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_expand_map_update/1-',1}}
  _8 = match_fail `function_clause`, _0

  %% Unique:
  %%    _8
  _19 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% map_SUITE.erl:1259
%% Counter = 25
%% bs_ensure_opt: true
function `map_SUITE`:`t_export`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _14 = bif:is_list _0
  br _14, ^14, ^13

14:
  %% map_SUITE.erl:1260
  Raclette = call (`id`/1), `#{}`

  %% Aliased:
  %%    Raclette
  _15 = succeeded:body Raclette
  br _15, ^15, ^1

15:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Raclette
  _18 = bif:is_map Raclette
  br _18, ^22, ^17

22:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% map_SUITE.erl:1262
  %% Aliased:
  %%    Raclette
  _8 = match_fail `badmap`, Raclette

  %% Unique:
  %%    _8
  _19 = succeeded:body _8
  br ^1

13:
  %% map_SUITE.erl:1259
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_export/1-',1}}
  _10 = match_fail `function_clause`, _0

  %% Unique:
  %%    _10
  _24 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% map_SUITE.erl:1265
%% Counter = 27
%% bs_ensure_opt: true
function `map_SUITE`:`check_val`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _21 = bif:is_map _0
  br _21, ^21, ^16

21:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _11 = get_map_element _0, `val1`

  %% Aliased:
  %%    _11
  _17 = succeeded:guard _11
  br _17, ^17, ^16

17:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _10 = get_map_element _0, `val2`

  %% Aliased:
  %%    _10
  _18 = succeeded:guard _10
  br _18, ^18, ^16

18:
  %% map_SUITE.erl:1265
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _11
  _8 = bif:'=:=' _1, _11
  br _8, ^25, ^16

25:
  %% map_SUITE.erl:1265
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _10
  _9 = bif:'=:=' _2, _10
  br _9, ^20, ^16

20:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% map_SUITE.erl:1265
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-check_val/3-',3}}
  _13 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _13
  _22 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% map_SUITE.erl:1267
%% Counter = 50
%% bs_ensure_opt: true
function `map_SUITE`:`get_val`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _41 = bif:is_map _0
  br _41, ^41, ^43

41:
  %% map_SUITE.erl:1267
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _21 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `325`, `binary`, `[1]`, `<<"*">>`, `all`

  %% Aliased:
  %%    _21
  _32 = succeeded:guard _21
  br _32, ^38, ^48

38:
  %% Argument types:
  %%    _0 => map()
  %%    _21 => bitstring(1)
  %% Aliased:
  %%    _0, 
  %%    _21
  _15 = get_map_element _0, _21

  %% Aliased:
  %%    _15
  _37 = succeeded:guard _15
  br _37, ^37, ^48

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _22 = put_tuple `bin_key`, _15
  %% Result type:
  %%    {'bin_key', any()}
  %% Unique:
  %%    _22
  ret _22

48:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _18 = get_map_element _0, `val`

  %% Aliased:
  %%    _18
  _44 = succeeded:guard _18
  br _44, ^47, ^43

47:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _46 = has_map_field _0, `"wazzup"`
  br _46, ^46, ^45

46:
  %% Aliased:
  %%    _18
  ret _18

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _23 = put_tuple `some_val`, _18
  %% Result type:
  %%    {'some_val', any()}
  %% Unique:
  %%    _23
  ret _23

43:
  %% map_SUITE.erl:1267
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-get_val/1-',1}}
  _24 = match_fail `function_clause`, _0

  %% Unique:
  %%    _24
  _49 = succeeded:body _24
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% map_SUITE.erl:1271
%% Counter = 760
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_bifs`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _225 = bif:is_list _0
  br _225, ^225, ^224

225:
  %% map_SUITE.erl:1272
  %% Result type:
  %%    'true'
  _80 = call (`map_guard_empty`/0)

  %% Unique:
  %%    _80
  _226 = succeeded:body _80
  br _226, ^671, ^1

671:
  %% map_SUITE.erl:1273
  %% Result type:
  %%    'true'
  _81 = call (`map_guard_empty_2`/0)

  %% Unique:
  %%    _81
  _229 = succeeded:body _81
  br _229, ^668, ^1

668:
  %% map_SUITE.erl:1274
  %% Result type:
  %%    'true'
  _82 = call (`map_guard_head`/1), `#{a => 1}`

  %% Unique:
  %%    _82
  _232 = succeeded:body _82
  br _232, ^665, ^1

665:
  %% map_SUITE.erl:1275
  %% Result type:
  %%    'false'
  _83 = call (`map_guard_head`/1), `[]`

  %% Unique:
  %%    _83
  _235 = succeeded:body _83
  br _235, ^662, ^1

662:
  %% map_SUITE.erl:1277
  %% Result type:
  %%    'false' | 'true'
  _84 = call (`map_get_head`/1), `#{a => 1}`

  %% Unique:
  %%    _84
  _238 = succeeded:body _84
  br _238, ^238, ^1

238:
  br _84, ^659, ^240

659:
  %% map_SUITE.erl:1278
  %% Result type:
  %%    'false' | 'true'
  _85 = call (`map_get_head`/1), `#{}`

  %% Unique:
  %%    _85
  _241 = succeeded:body _85
  br _241, ^241, ^1

241:
  br _85, ^243, ^656

243:
  %% map_SUITE.erl:1278
  _215 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _215
  _658 = succeeded:body _215
  br ^1

656:
  %% map_SUITE.erl:1279
  %% Result type:
  %%    'false'
  _86 = call (`map_get_head`/1), `[]`

  %% Unique:
  %%    _86
  _244 = succeeded:body _86
  br _244, ^653, ^1

653:
  %% map_SUITE.erl:1281
  %% Result type:
  %%    'false' | 'true'
  _87 = call (`map_get_head_not`/1), `#{a => false}`

  %% Unique:
  %%    _87
  _247 = succeeded:body _87
  br _247, ^247, ^1

247:
  br _87, ^650, ^249

650:
  %% map_SUITE.erl:1282
  %% Result type:
  %%    'false' | 'true'
  _88 = call (`map_get_head_not`/1), `#{a => true}`

  %% Unique:
  %%    _88
  _250 = succeeded:body _88
  br _250, ^250, ^1

250:
  br _88, ^252, ^647

252:
  %% map_SUITE.erl:1282
  _212 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _212
  _649 = succeeded:body _212
  br ^1

647:
  %% map_SUITE.erl:1283
  %% Result type:
  %%    'false' | 'true'
  _89 = call (`map_get_head`/1), `#{}`

  %% Unique:
  %%    _89
  _253 = succeeded:body _89
  br _253, ^253, ^1

253:
  br _89, ^255, ^644

255:
  %% map_SUITE.erl:1283
  _211 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _211
  _646 = succeeded:body _211
  br ^1

644:
  %% map_SUITE.erl:1284
  %% Result type:
  %%    'false'
  _90 = call (`map_get_head`/1), `[]`

  %% Unique:
  %%    _90
  _256 = succeeded:body _90
  br _256, ^641, ^1

641:
  %% map_SUITE.erl:1286
  %% Result type:
  %%    'false' | 'true'
  _91 = call (`map_is_key_head`/1), `#{a => 1}`

  %% Unique:
  %%    _91
  _259 = succeeded:body _91
  br _259, ^259, ^1

259:
  br _91, ^638, ^261

638:
  %% map_SUITE.erl:1287
  %% Result type:
  %%    'false' | 'true'
  _92 = call (`map_is_key_head`/1), `#{}`

  %% Unique:
  %%    _92
  _262 = succeeded:body _92
  br _262, ^262, ^1

262:
  br _92, ^264, ^635

264:
  %% map_SUITE.erl:1287
  _208 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _208
  _637 = succeeded:body _208
  br ^1

635:
  %% map_SUITE.erl:1288
  %% Result type:
  %%    'false'
  _93 = call (`map_is_key_head`/1), `not_a_map`

  %% Unique:
  %%    _93
  _265 = succeeded:body _93
  br _265, ^632, ^1

632:
  %% map_SUITE.erl:1290
  %% Result type:
  %%    'false' | 'true'
  _94 = call (`map_is_key_head_not`/1), `#{a => 1}`

  %% Unique:
  %%    _94
  _268 = succeeded:body _94
  br _268, ^268, ^1

268:
  br _94, ^270, ^629

270:
  %% map_SUITE.erl:1290
  _206 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _206
  _631 = succeeded:body _206
  br ^1

629:
  %% map_SUITE.erl:1291
  %% Result type:
  %%    'false' | 'true'
  _95 = call (`map_is_key_head_not`/1), `#{b => 1}`

  %% Unique:
  %%    _95
  _271 = succeeded:body _95
  br _271, ^271, ^1

271:
  br _95, ^626, ^273

626:
  %% map_SUITE.erl:1292
  %% Result type:
  %%    'false' | 'true'
  _96 = call (`map_is_key_head_not`/1), `#{}`

  %% Unique:
  %%    _96
  _274 = succeeded:body _96
  br _274, ^274, ^1

274:
  br _96, ^623, ^276

623:
  %% map_SUITE.erl:1293
  %% Result type:
  %%    'false'
  _97 = call (`map_is_key_head_not`/1), `not_a_map`

  %% Unique:
  %%    _97
  _277 = succeeded:body _97
  br _277, ^620, ^1

620:
  %% map_SUITE.erl:1295
  %% Result type:
  %%    'b'
  _98 = call (`map_get_head_badmap1`/0)

  %% Unique:
  %%    _98
  _280 = succeeded:body _98
  br _280, ^617, ^1

617:
  %% map_SUITE.erl:1296
  %% Result type:
  %%    'b'
  _99 = call (`map_get_head_badmap2`/0)

  %% Unique:
  %%    _99
  _283 = succeeded:body _99
  br _283, ^614, ^1

614:
  %% map_SUITE.erl:1297
  %% Result type:
  %%    'b'
  _100 = call (`map_get_head_badmap3`/0)

  %% Unique:
  %%    _100
  _286 = succeeded:body _100
  br _286, ^611, ^1

611:
  %% map_SUITE.erl:1299
  %% Result type:
  %%    'false' | 'true'
  _101 = call (`map_guard_body`/1), `#{a => 1}`

  %% Unique:
  %%    _101
  _289 = succeeded:body _101
  br _289, ^289, ^1

289:
  br _101, ^608, ^291

608:
  %% map_SUITE.erl:1300
  %% Result type:
  %%    'false' | 'true'
  _102 = call (`map_guard_body`/1), `{}`

  %% Unique:
  %%    _102
  _292 = succeeded:body _102
  br _292, ^292, ^1

292:
  br _102, ^294, ^605

294:
  %% map_SUITE.erl:1300
  _198 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _198
  _607 = succeeded:body _198
  br ^1

605:
  %% map_SUITE.erl:1301
  %% Result type:
  %%    'true'
  _103 = call (`map_guard_pattern`/1), `#{a => 1,<<"hi">> => "hi"}`

  %% Unique:
  %%    _103
  _295 = succeeded:body _103
  br _295, ^602, ^1

602:
  %% map_SUITE.erl:1302
  %% Result type:
  %%    'false'
  _104 = call (`map_guard_pattern`/1), `"list"`

  %% Unique:
  %%    _104
  _298 = succeeded:body _104
  br _298, ^599, ^1

599:
  %% map_SUITE.erl:1303
  %% Result type:
  %%    'true'
  _105 = call (`map_guard_tautology`/0)

  %% Unique:
  %%    _105
  _301 = succeeded:body _105
  br _301, ^596, ^1

596:
  %% map_SUITE.erl:1304
  %% Result type:
  %%    'true'
  _106 = call (`map_guard_ill_map_size`/0)

  %% Unique:
  %%    _106
  _304 = succeeded:body _106
  br _304, ^593, ^1

593:
  %% map_SUITE.erl:1305
  %% Result type:
  %%    'false' | 'true'
  _107 = call (`map_field_check_sequence`/1), `#{a => 1}`

  %% Unique:
  %%    _107
  _307 = succeeded:body _107
  br _307, ^307, ^1

307:
  br _107, ^590, ^309

590:
  %% map_SUITE.erl:1306
  %% Result type:
  %%    'false' | 'true'
  _108 = call (`map_field_check_sequence`/1), `#{}`

  %% Unique:
  %%    _108
  _310 = succeeded:body _108
  br _310, ^310, ^1

310:
  br _108, ^312, ^587

312:
  %% map_SUITE.erl:1306
  _192 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _192
  _589 = succeeded:body _192
  br ^1

587:
  %% map_SUITE.erl:1310
  _30 = call (`id`/1), `#{a => v}`

  %% Aliased:
  %%    _30
  _313 = succeeded:body _30
  br _313, ^313, ^1

313:
  %% map_SUITE.erl:1310
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _109 = bif:map_get `a`, _30

  %% Aliased:
  %%    _109
  _314 = succeeded:body _109
  br _314, ^314, ^1

314:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _585 = bif:'=:=' _109, `v`
  br _585, ^750, ^316

750:
  br ^755

755:
  _320 = new_try_tag `'catch'`
  br _320, ^318, ^319

318:
  %% map_SUITE.erl:1312
  _32 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _32
  _322 = succeeded:body _32
  br _322, ^322, ^319

322:
  %% map_SUITE.erl:1312
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _153 = bif:map_get `a`, _32

  %% Aliased:
  %%    _153
  _323 = succeeded:body _153
  br _323, ^323, ^319

323:
  br ^317

319:
  %% Unique:
  %%    _320
  _326 = landingpad `'catch'`, _320

  %% Aliased:
  %%    _326
  _324 = extract _326, `0`
  br ^317

317:
  _327 = phi { _324, ^319 }, { _153, ^323 }

  %% Aliased:
  %%    _327
  %% Unique:
  %%    _320
  _33 = catch_end _320, _327

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _580 = is_tagged_tuple _33, `2`, `'EXIT'`
  br _580, ^577, ^329

577:
  %% Argument types:
  %%    _33 => {''EXIT'', any()}
  %% Aliased:
  %%    _33
  _110 = get_tuple_element _33, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _574 = bif:is_tuple _110
  br _574, ^574, ^329

574:
  %% Argument types:
  %%    _110 => {...}
  %% Aliased:
  %%    _110
  _575 = bif:tuple_size _110

  %% Argument types:
  %%    _575 => 0..16777215
  %% Unique:
  %%    _575
  _576 = bif:'=:=' _575, `2`
  br _576, ^573, ^329

573:
  %% Argument types:
  %%    _110 => {any(), any()}
  %% Aliased:
  %%    _110
  _113 = get_tuple_element _110, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _572 = bif:'=:=' _113, `{badkey,a}`
  br _572, ^751, ^329

751:
  br ^756

756:
  _333 = new_try_tag `'catch'`
  br _333, ^331, ^332

331:
  %% map_SUITE.erl:1314
  _35 = call (`id`/1), `not_a_map`

  %% Aliased:
  %%    _35
  _335 = succeeded:body _35
  br _335, ^335, ^332

335:
  %% map_SUITE.erl:1314
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _155 = bif:map_get `a`, _35

  %% Aliased:
  %%    _155
  _336 = succeeded:body _155
  br _336, ^336, ^332

336:
  br ^330

332:
  %% Unique:
  %%    _333
  _339 = landingpad `'catch'`, _333

  %% Aliased:
  %%    _339
  _337 = extract _339, `0`
  br ^330

330:
  _340 = phi { _337, ^332 }, { _155, ^336 }

  %% Aliased:
  %%    _340
  %% Unique:
  %%    _333
  _36 = catch_end _333, _340

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _568 = is_tagged_tuple _36, `2`, `'EXIT'`
  br _568, ^565, ^342

565:
  %% Argument types:
  %%    _36 => {''EXIT'', any()}
  %% Aliased:
  %%    _36
  _114 = get_tuple_element _36, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _562 = bif:is_tuple _114
  br _562, ^562, ^342

562:
  %% Argument types:
  %%    _114 => {...}
  %% Aliased:
  %%    _114
  _563 = bif:tuple_size _114

  %% Argument types:
  %%    _563 => 0..16777215
  %% Unique:
  %%    _563
  _564 = bif:'=:=' _563, `2`
  br _564, ^561, ^342

561:
  %% Argument types:
  %%    _114 => {any(), any()}
  %% Aliased:
  %%    _114
  _117 = get_tuple_element _114, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _560 = bif:'=:=' _117, `{badmap,not_a_map}`
  br _560, ^560, ^342

560:
  %% map_SUITE.erl:1316
  _38 = call (`id`/1), `#{a => 1}`

  %% Aliased:
  %%    _38
  _343 = succeeded:body _38
  br _343, ^343, ^1

343:
  %% map_SUITE.erl:1316
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _118 = bif:is_map_key `a`, _38

  %% Unique:
  %%    _118
  _344 = succeeded:body _118
  br _344, ^344, ^1

344:
  br _118, ^557, ^346

557:
  %% map_SUITE.erl:1317
  _40 = call (`id`/1), `#{a => 1}`

  %% Aliased:
  %%    _40
  _347 = succeeded:body _40
  br _347, ^347, ^1

347:
  %% map_SUITE.erl:1317
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _119 = bif:is_map_key `b`, _40

  %% Unique:
  %%    _119
  _348 = succeeded:body _119
  br _348, ^348, ^1

348:
  br _119, ^350, ^554

350:
  %% map_SUITE.erl:1317
  _187 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _187
  _556 = succeeded:body _187
  br ^1

554:
  %% map_SUITE.erl:1318
  _42 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _42
  _351 = succeeded:body _42
  br _351, ^351, ^1

351:
  %% map_SUITE.erl:1318
  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _120 = bif:is_map_key `b`, _42

  %% Unique:
  %%    _120
  _352 = succeeded:body _120
  br _352, ^352, ^1

352:
  br _120, ^354, ^752

354:
  %% map_SUITE.erl:1318
  _186 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _186
  _553 = succeeded:body _186
  br ^1

752:
  br ^757

757:
  _358 = new_try_tag `'catch'`
  br _358, ^356, ^357

356:
  %% map_SUITE.erl:1320
  _44 = call (`id`/1), `not_a_map`

  %% Aliased:
  %%    _44
  _360 = succeeded:body _44
  br _360, ^360, ^357

360:
  %% map_SUITE.erl:1320
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _157 = bif:is_map_key `b`, _44

  %% Unique:
  %%    _157
  _361 = succeeded:body _157
  br _361, ^361, ^357

361:
  br ^355

357:
  %% Unique:
  %%    _358
  _364 = landingpad `'catch'`, _358

  %% Aliased:
  %%    _364
  _362 = extract _364, `0`
  br ^355

355:
  _365 = phi { _362, ^357 }, { _157, ^361 }

  %% Aliased:
  %%    _365
  %% Unique:
  %%    _358
  _45 = catch_end _358, _365

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _547 = is_tagged_tuple _45, `2`, `'EXIT'`
  br _547, ^544, ^367

544:
  %% Argument types:
  %%    _45 => {''EXIT'', any()}
  %% Aliased:
  %%    _45
  _121 = get_tuple_element _45, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _541 = bif:is_tuple _121
  br _541, ^541, ^367

541:
  %% Argument types:
  %%    _121 => {...}
  %% Aliased:
  %%    _121
  _542 = bif:tuple_size _121

  %% Argument types:
  %%    _542 => 0..16777215
  %% Unique:
  %%    _542
  _543 = bif:'=:=' _542, `2`
  br _543, ^540, ^367

540:
  %% Argument types:
  %%    _121 => {any(), any()}
  %% Aliased:
  %%    _121
  _124 = get_tuple_element _121, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _124
  _539 = bif:'=:=' _124, `{badmap,not_a_map}`
  br _539, ^539, ^367

539:
  %% map_SUITE.erl:1322
  %% Result type:
  %%    {'false' | 'true', 'v'}
  _125 = call (`erl_699`/1), `#{k => v}`

  %% Unique:
  %%    _125
  _368 = succeeded:body _125
  br _368, ^368, ^1

368:
  %% Argument types:
  %%    _125 => {'false' | 'true', 'v'}
  %% Unique:
  %%    _125
  _537 = bif:'=:=' _125, `{true,v}`
  br _537, ^753, ^370

753:
  br ^758

758:
  _374 = new_try_tag `'catch'`
  br _374, ^372, ^373

372:
  %% map_SUITE.erl:1323
  %% Result type:
  %%    {'false' | 'true', 'v'}
  _159 = call (`erl_699`/1), `#{}`

  %% Unique:
  %%    _159
  _376 = succeeded:body _159
  br _376, ^376, ^373

376:
  br ^371

373:
  %% Unique:
  %%    _374
  _379 = landingpad `'catch'`, _374

  %% Aliased:
  %%    _379
  _377 = extract _379, `0`
  br ^371

371:
  _380 = phi { _377, ^373 }, { _159, ^376 }

  %% Aliased:
  %%    _380
  %% Unique:
  %%    _374
  _48 = catch_end _374, _380

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _533 = is_tagged_tuple _48, `2`, `'EXIT'`
  br _533, ^530, ^382

530:
  %% Argument types:
  %%    _48 => {''EXIT'', any()}
  %% Aliased:
  %%    _48
  _126 = get_tuple_element _48, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _126
  _527 = bif:is_tuple _126
  br _527, ^527, ^382

527:
  %% Argument types:
  %%    _126 => {...}
  %% Aliased:
  %%    _126
  _528 = bif:tuple_size _126

  %% Argument types:
  %%    _528 => 0..16777215
  %% Unique:
  %%    _528
  _529 = bif:'=:=' _528, `2`
  br _529, ^526, ^382

526:
  %% Argument types:
  %%    _126 => {any(), any()}
  %% Aliased:
  %%    _126
  _129 = get_tuple_element _126, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _525 = bif:'=:=' _129, `{badkey,k}`
  br _525, ^754, ^382

754:
  br ^759

759:
  _386 = new_try_tag `'catch'`
  br _386, ^384, ^385

384:
  %% map_SUITE.erl:1324
  %% Result type:
  %%    none()
  _161 = call (`erl_699`/1), `not_a_map`

  %% Aliased:
  %%    _161
  _388 = succeeded:body _161
  br ^385

385:
  %% Unique:
  %%    _386
  _391 = landingpad `'catch'`, _386

  %% Aliased:
  %%    _391
  _389 = extract _391, `0`
  br ^383

383:
  %% Aliased:
  %%    _389
  %% Unique:
  %%    _386
  _50 = catch_end _386, _389

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _521 = is_tagged_tuple _50, `2`, `'EXIT'`
  br _521, ^518, ^394

518:
  %% Argument types:
  %%    _50 => {''EXIT'', any()}
  %% Aliased:
  %%    _50
  _130 = get_tuple_element _50, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _515 = bif:is_tuple _130
  br _515, ^515, ^394

515:
  %% Argument types:
  %%    _130 => {...}
  %% Aliased:
  %%    _130
  _516 = bif:tuple_size _130

  %% Argument types:
  %%    _516 => 0..16777215
  %% Unique:
  %%    _516
  _517 = bif:'=:=' _516, `2`
  br _517, ^514, ^394

514:
  %% Argument types:
  %%    _130 => {any(), any()}
  %% Aliased:
  %%    _130
  _133 = get_tuple_element _130, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _133
  _513 = bif:'=:=' _133, `{badmap,not_a_map}`
  br _513, ^513, ^394

513:
  %% map_SUITE.erl:1328
  %% Result type:
  %%    'error' | 'ok'
  _134 = call (`beam_dead_1`/1), `#{a => any,k => true}`

  %% Unique:
  %%    _134
  _395 = succeeded:body _134
  br _395, ^395, ^1

395:
  %% Argument types:
  %%    _134 => 'error' | 'ok'
  %% Unique:
  %%    _134
  _511 = bif:'=:=' _134, `ok`
  br _511, ^510, ^397

510:
  %% map_SUITE.erl:1329
  %% Result type:
  %%    'error' | 'ok'
  _135 = call (`beam_dead_1`/1), `#{a => any,k => false}`

  %% Unique:
  %%    _135
  _398 = succeeded:body _135
  br _398, ^398, ^1

398:
  %% Argument types:
  %%    _135 => 'error' | 'ok'
  %% Unique:
  %%    _135
  _508 = bif:'=:=' _135, `error`
  br _508, ^507, ^400

507:
  %% map_SUITE.erl:1330
  %% Result type:
  %%    'error' | 'ok'
  _136 = call (`beam_dead_1`/1), `#{a => any}`

  %% Unique:
  %%    _136
  _401 = succeeded:body _136
  br _401, ^401, ^1

401:
  %% Argument types:
  %%    _136 => 'error' | 'ok'
  %% Unique:
  %%    _136
  _505 = bif:'=:=' _136, `error`
  br _505, ^504, ^403

504:
  %% map_SUITE.erl:1331
  %% Result type:
  %%    'error' | 'ok'
  _137 = call (`beam_dead_1`/1), `#{}`

  %% Unique:
  %%    _137
  _404 = succeeded:body _137
  br _404, ^404, ^1

404:
  %% Argument types:
  %%    _137 => 'error' | 'ok'
  %% Unique:
  %%    _137
  _502 = bif:'=:=' _137, `error`
  br _502, ^501, ^406

501:
  %% map_SUITE.erl:1333
  %% Result type:
  %%    'error' | 'ok'
  _138 = call (`beam_dead_2`/1), `#{a => any,k => true}`

  %% Unique:
  %%    _138
  _407 = succeeded:body _138
  br _407, ^407, ^1

407:
  %% Argument types:
  %%    _138 => 'error' | 'ok'
  %% Unique:
  %%    _138
  _499 = bif:'=:=' _138, `ok`
  br _499, ^498, ^409

498:
  %% map_SUITE.erl:1334
  %% Result type:
  %%    'error' | 'ok'
  _139 = call (`beam_dead_2`/1), `#{a => any,k => false}`

  %% Unique:
  %%    _139
  _410 = succeeded:body _139
  br _410, ^410, ^1

410:
  %% Argument types:
  %%    _139 => 'error' | 'ok'
  %% Unique:
  %%    _139
  _496 = bif:'=:=' _139, `error`
  br _496, ^495, ^412

495:
  %% map_SUITE.erl:1335
  %% Result type:
  %%    'error' | 'ok'
  _140 = call (`beam_dead_2`/1), `#{a => any}`

  %% Unique:
  %%    _140
  _413 = succeeded:body _140
  br _413, ^413, ^1

413:
  %% Argument types:
  %%    _140 => 'error' | 'ok'
  %% Unique:
  %%    _140
  _493 = bif:'=:=' _140, `error`
  br _493, ^492, ^415

492:
  %% map_SUITE.erl:1336
  %% Result type:
  %%    'error' | 'ok'
  _141 = call (`beam_dead_2`/1), `#{}`

  %% Unique:
  %%    _141
  _416 = succeeded:body _141
  br _416, ^416, ^1

416:
  %% Argument types:
  %%    _141 => 'error' | 'ok'
  %% Unique:
  %%    _141
  _490 = bif:'=:=' _141, `error`
  br _490, ^489, ^418

489:
  %% map_SUITE.erl:1338
  %% Result type:
  %%    'error' | 'ok'
  _142 = call (`beam_dead_3`/1), `#{k => true}`

  %% Unique:
  %%    _142
  _419 = succeeded:body _142
  br _419, ^419, ^1

419:
  %% Argument types:
  %%    _142 => 'error' | 'ok'
  %% Unique:
  %%    _142
  _487 = bif:'=:=' _142, `ok`
  br _487, ^486, ^421

486:
  %% map_SUITE.erl:1339
  %% Result type:
  %%    'error' | 'ok'
  _143 = call (`beam_dead_3`/1), `#{k => false}`

  %% Unique:
  %%    _143
  _422 = succeeded:body _143
  br _422, ^422, ^1

422:
  %% Argument types:
  %%    _143 => 'error' | 'ok'
  %% Unique:
  %%    _143
  _484 = bif:'=:=' _143, `error`
  br _484, ^483, ^424

483:
  %% map_SUITE.erl:1340
  %% Result type:
  %%    'error' | 'ok'
  _144 = call (`beam_dead_3`/1), `#{}`

  %% Unique:
  %%    _144
  _425 = succeeded:body _144
  br _425, ^425, ^1

425:
  %% Argument types:
  %%    _144 => 'error' | 'ok'
  %% Unique:
  %%    _144
  _481 = bif:'=:=' _144, `error`
  br _481, ^480, ^427

480:
  %% map_SUITE.erl:1342
  %% Result type:
  %%    'error' | 'ok'
  _145 = call (`beam_dead_4`/1), `#{k => true}`

  %% Unique:
  %%    _145
  _428 = succeeded:body _145
  br _428, ^428, ^1

428:
  %% Argument types:
  %%    _145 => 'error' | 'ok'
  %% Unique:
  %%    _145
  _478 = bif:'=:=' _145, `ok`
  br _478, ^477, ^430

477:
  %% map_SUITE.erl:1343
  %% Result type:
  %%    'error' | 'ok'
  _146 = call (`beam_dead_4`/1), `#{k => false}`

  %% Unique:
  %%    _146
  _431 = succeeded:body _146
  br _431, ^431, ^1

431:
  %% Argument types:
  %%    _146 => 'error' | 'ok'
  %% Unique:
  %%    _146
  _475 = bif:'=:=' _146, `error`
  br _475, ^474, ^433

474:
  %% map_SUITE.erl:1344
  %% Result type:
  %%    'error' | 'ok'
  _147 = call (`beam_dead_4`/1), `#{}`

  %% Unique:
  %%    _147
  _434 = succeeded:body _147
  br _434, ^434, ^1

434:
  %% Argument types:
  %%    _147 => 'error' | 'ok'
  %% Unique:
  %%    _147
  _472 = bif:'=:=' _147, `error`
  br _472, ^471, ^436

471:
  %% map_SUITE.erl:1345
  %% Result type:
  %%    'error'
  _148 = call (`beam_dead_4`/1), `not_a_map`

  %% Unique:
  %%    _148
  _437 = succeeded:body _148
  br _437, ^468, ^1

468:
  %% map_SUITE.erl:1347
  %% Result type:
  %%    'error' | 'ok'
  _149 = call (`beam_dead_5`/1), `#{k => true}`

  %% Unique:
  %%    _149
  _440 = succeeded:body _149
  br _440, ^440, ^1

440:
  %% Argument types:
  %%    _149 => 'error' | 'ok'
  %% Unique:
  %%    _149
  _466 = bif:'=:=' _149, `ok`
  br _466, ^465, ^442

465:
  %% map_SUITE.erl:1348
  %% Result type:
  %%    'error' | 'ok'
  _150 = call (`beam_dead_5`/1), `#{k => false}`

  %% Unique:
  %%    _150
  _443 = succeeded:body _150
  br _443, ^443, ^1

443:
  %% Argument types:
  %%    _150 => 'error' | 'ok'
  %% Unique:
  %%    _150
  _463 = bif:'=:=' _150, `error`
  br _463, ^462, ^445

462:
  %% map_SUITE.erl:1349
  %% Result type:
  %%    'error' | 'ok'
  _151 = call (`beam_dead_3`/1), `#{}`

  %% Unique:
  %%    _151
  _446 = succeeded:body _151
  br _446, ^446, ^1

446:
  %% Argument types:
  %%    _151 => 'error' | 'ok'
  %% Unique:
  %%    _151
  _460 = bif:'=:=' _151, `error`
  br _460, ^459, ^448

459:
  %% map_SUITE.erl:1353
  %% Result type:
  %%    #{'other' | 'var'=>'dead' | 'live' | 'value'}
  Used0 = call (`map_usage`/2), `var`, `#{other => value}`

  %% Unique:
  %%    Used0
  _449 = succeeded:body Used0
  br _449, ^449, ^1

449:
  %% Argument types:
  %%    Used0 => #{'other' | 'var'=>'dead' | 'live' | 'value'}
  %% Unique:
  %%    Used0
  _452 = bif:'=:=' Used0, `#{other => value,var => dead}`
  br _452, ^452, ^451

452:
  %% map_SUITE.erl:1355
  %% Result type:
  %%    #{'other' | 'var'=>'dead' | 'live' | 'value'}
  Used1 = call (`map_usage`/2), `var`, `#{var => live}`

  %% Unique:
  %%    Used1
  _453 = succeeded:body Used1
  br _453, ^453, ^1

453:
  %% Argument types:
  %%    Used1 => #{'other' | 'var'=>'dead' | 'live' | 'value'}
  %% Unique:
  %%    Used1
  _456 = bif:'=:=' Used1, `#{var => live}`
  br _456, ^456, ^455

456:
  %% Result type:
  %%    'ok'
  ret `ok`

455:
  %% map_SUITE.erl:1356
  _162 = match_fail `badmatch`, `#{var => live}`

  %% Unique:
  %%    _162
  _457 = succeeded:body _162
  br ^1

451:
  %% map_SUITE.erl:1354
  _163 = match_fail `badmatch`, `#{other => value,var => dead}`

  %% Unique:
  %%    _163
  _458 = succeeded:body _163
  br ^1

448:
  %% map_SUITE.erl:1349
  _164 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _164
  _461 = succeeded:body _164
  br ^1

445:
  %% map_SUITE.erl:1348
  _165 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _165
  _464 = succeeded:body _165
  br ^1

442:
  %% map_SUITE.erl:1347
  _166 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _166
  _467 = succeeded:body _166
  br ^1

436:
  %% map_SUITE.erl:1344
  _168 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _168
  _473 = succeeded:body _168
  br ^1

433:
  %% map_SUITE.erl:1343
  _169 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _169
  _476 = succeeded:body _169
  br ^1

430:
  %% map_SUITE.erl:1342
  _170 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _170
  _479 = succeeded:body _170
  br ^1

427:
  %% map_SUITE.erl:1340
  _171 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _171
  _482 = succeeded:body _171
  br ^1

424:
  %% map_SUITE.erl:1339
  _172 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _172
  _485 = succeeded:body _172
  br ^1

421:
  %% map_SUITE.erl:1338
  _173 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _173
  _488 = succeeded:body _173
  br ^1

418:
  %% map_SUITE.erl:1336
  _174 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _174
  _491 = succeeded:body _174
  br ^1

415:
  %% map_SUITE.erl:1335
  _175 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _175
  _494 = succeeded:body _175
  br ^1

412:
  %% map_SUITE.erl:1334
  _176 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _176
  _497 = succeeded:body _176
  br ^1

409:
  %% map_SUITE.erl:1333
  _177 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _177
  _500 = succeeded:body _177
  br ^1

406:
  %% map_SUITE.erl:1331
  _178 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _178
  _503 = succeeded:body _178
  br ^1

403:
  %% map_SUITE.erl:1330
  _179 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _179
  _506 = succeeded:body _179
  br ^1

400:
  %% map_SUITE.erl:1329
  _180 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _180
  _509 = succeeded:body _180
  br ^1

397:
  %% map_SUITE.erl:1328
  _181 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _181
  _512 = succeeded:body _181
  br ^1

394:
  %% map_SUITE.erl:1324
  %% Aliased:
  %%    _50
  _182 = match_fail `badmatch`, _50

  %% Unique:
  %%    _182
  _524 = succeeded:body _182
  br ^1

382:
  %% map_SUITE.erl:1323
  %% Aliased:
  %%    _48
  _183 = match_fail `badmatch`, _48

  %% Unique:
  %%    _183
  _536 = succeeded:body _183
  br ^1

370:
  %% map_SUITE.erl:1322
  %% Unique:
  %%    _125
  _184 = match_fail `badmatch`, _125

  %% Unique:
  %%    _184
  _538 = succeeded:body _184
  br ^1

367:
  %% map_SUITE.erl:1319
  %% Aliased:
  %%    _45
  _185 = match_fail `badmatch`, _45

  %% Unique:
  %%    _185
  _550 = succeeded:body _185
  br ^1

346:
  %% map_SUITE.erl:1316
  _188 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _188
  _559 = succeeded:body _188
  br ^1

342:
  %% map_SUITE.erl:1313
  %% Aliased:
  %%    _36
  _189 = match_fail `badmatch`, _36

  %% Unique:
  %%    _189
  _571 = succeeded:body _189
  br ^1

329:
  %% map_SUITE.erl:1311
  %% Aliased:
  %%    _33
  _190 = match_fail `badmatch`, _33

  %% Unique:
  %%    _190
  _583 = succeeded:body _190
  br ^1

316:
  %% map_SUITE.erl:1310
  %% Aliased:
  %%    _109
  _191 = match_fail `badmatch`, _109

  %% Unique:
  %%    _191
  _586 = succeeded:body _191
  br ^1

309:
  %% map_SUITE.erl:1305
  _193 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _193
  _592 = succeeded:body _193
  br ^1

291:
  %% map_SUITE.erl:1299
  _199 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _199
  _610 = succeeded:body _199
  br ^1

276:
  %% map_SUITE.erl:1292
  _204 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _204
  _625 = succeeded:body _204
  br ^1

273:
  %% map_SUITE.erl:1291
  _205 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _205
  _628 = succeeded:body _205
  br ^1

261:
  %% map_SUITE.erl:1286
  _209 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _209
  _640 = succeeded:body _209
  br ^1

249:
  %% map_SUITE.erl:1281
  _213 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _213
  _652 = succeeded:body _213
  br ^1

240:
  %% map_SUITE.erl:1277
  _216 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _216
  _661 = succeeded:body _216
  br ^1

224:
  %% map_SUITE.erl:1271
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_bifs/1-',1}}
  _221 = match_fail `function_clause`, _0

  %% Unique:
  %%    _221
  _674 = succeeded:body _221
  br ^1

1:
  _222 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _222
}

%% map_SUITE.erl:1360
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`map_guard_empty`() {
0:
  %% Result type:
  %%    'true'
  ret `true`
}

%% map_SUITE.erl:1362
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`map_guard_empty_2`() {
0:
  %% Result type:
  %%    'true'
  ret `true`
}

%% map_SUITE.erl:1364
%% Counter = 7
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nil() | #{'a'=>1}
function `map_SUITE`:`map_guard_head`(_0) {
0:
  %% Argument types:
  %%    _0 => nil() | #{'a'=>1}
  %% Unique:
  %%    _0
  _6 = bif:is_map _0
  ret _6
}

%% map_SUITE.erl:1367
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nil() | #{'a'=>1}
function `map_SUITE`:`map_get_head`(_0) {
0:
  %% map_SUITE.erl:1367
  %% Argument types:
  %%    _0 => nil() | #{'a'=>1}
  %% Unique:
  %%    _0
  _1 = bif:map_get `a`, _0

  %% Unique:
  %%    _1
  _8 = succeeded:guard _1
  br _8, ^7, ^6

7:
  %% Result type:
  %%    'true'
  ret `true`

6:
  %% Result type:
  %%    'false'
  ret `false`
}

%% map_SUITE.erl:1370
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'a'=>'false' | 'true'}
function `map_SUITE`:`map_get_head_not`(_0) {
0:
  %% map_SUITE.erl:1370
  %% Argument types:
  %%    _0 => #{'a'=>'false' | 'true'}
  %% Unique:
  %%    _0
  _1 = bif:map_get `a`, _0

  %% Unique:
  %%    _1
  _9 = succeeded:guard _1
  br _9, ^9, ^7

9:
  br _1, ^7, ^8

8:
  %% Result type:
  %%    'true'
  ret `true`

7:
  %% Result type:
  %%    'false'
  ret `false`
}

%% map_SUITE.erl:1373
%% Counter = 10
%% bs_ensure_opt: true
function `map_SUITE`:`map_get_head_badmap1`() {
0:
  %% Result type:
  %%    'b'
  ret `b`
}

%% map_SUITE.erl:1376
%% Counter = 10
%% bs_ensure_opt: true
function `map_SUITE`:`map_get_head_badmap2`() {
0:
  %% Result type:
  %%    'b'
  ret `b`
}

%% map_SUITE.erl:1379
%% Counter = 8
%% bs_ensure_opt: true
function `map_SUITE`:`map_get_head_badmap3`() {
0:
  %% Result type:
  %%    'b'
  ret `b`
}

%% map_SUITE.erl:1382
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_a_map' | #{'a'=>1}
function `map_SUITE`:`map_is_key_head`(_0) {
0:
  %% map_SUITE.erl:1382
  %% Argument types:
  %%    _0 => 'not_a_map' | #{'a'=>1}
  %% Unique:
  %%    _0
  _1 = bif:is_map_key `a`, _0

  %% Unique:
  %%    _1
  _8 = succeeded:guard _1
  br _8, ^8, ^6

8:
  ret _1

6:
  %% Result type:
  %%    'false'
  ret `false`
}

%% map_SUITE.erl:1385
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_a_map' | #{'a' | 'b'=>1}
function `map_SUITE`:`map_is_key_head_not`(_0) {
0:
  %% map_SUITE.erl:1385
  %% Argument types:
  %%    _0 => 'not_a_map' | #{'a' | 'b'=>1}
  %% Unique:
  %%    _0
  _1 = bif:is_map_key `a`, _0

  %% Unique:
  %%    _1
  _9 = succeeded:guard _1
  br _9, ^9, ^7

9:
  br _1, ^7, ^8

8:
  %% Result type:
  %%    'true'
  ret `true`

7:
  %% Result type:
  %%    'false'
  ret `false`
}

%% map_SUITE.erl:1388
%% Counter = 5
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {} | #{'a'=>1}
function `map_SUITE`:`map_guard_body`(_0) {
0:
  %% map_SUITE.erl:1388
  %% Argument types:
  %%    _0 => {} | #{'a'=>1}
  %% Unique:
  %%    _0
  _2 = bif:is_map _0
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _2
  ret _2
}

%% map_SUITE.erl:1390
%% Counter = 7
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(105..116) | #{'a' | bitstring(16)=>nonempty_list(104..105) | 1}
function `map_SUITE`:`map_guard_pattern`(_0) {
0:
  %% Argument types:
  %%    _0 => nonempty_list(105..116) | #{'a' | bitstring(16)=>nonempty_list(104..105) | 1}
  %% Unique:
  %%    _0
  _6 = bif:is_map _0
  ret _6
}

%% map_SUITE.erl:1393
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`map_guard_tautology`() {
0:
  %% Result type:
  %%    'true'
  ret `true`
}

%% map_SUITE.erl:1395
%% Counter = 15
%% bs_ensure_opt: true
function `map_SUITE`:`map_guard_ill_map_size`() {
0:
  %% Result type:
  %%    'true'
  ret `true`
}

%% map_SUITE.erl:1397
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'a'=>1}
function `map_SUITE`:`map_field_check_sequence`(_0) {
0:
  %% map_SUITE.erl:1398
  %% Argument types:
  %%    _0 => #{'a'=>1}
  %% Unique:
  %%    _0
  _11 = has_map_field _0, `a`
  br _11, ^28, ^19

28:
  %% map_SUITE.erl:1398
  %% Argument types:
  %%    _0 => #{'a'=>1}
  %% Unique:
  %%    _0
  _3 = bif:map_get `a`, _0

  %% Unique:
  %%    _3
  _26 = succeeded:guard _3
  br _26, ^31, ^19

31:
  %% Result type:
  %%    'true'
  ret `true`

19:
  %% Result type:
  %%    'false'
  ret `false`
}

%% map_SUITE.erl:1403
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_a_map' | #{'k'=>'v'}
function `map_SUITE`:`erl_699`(_0) {
0:
  %% map_SUITE.erl:1405
  %% Argument types:
  %%    _0 => 'not_a_map' | #{'k'=>'v'}
  %% Unique:
  %%    _0
  _2 = bif:is_map_key `k`, _0

  %% Unique:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% map_SUITE.erl:1405
  %% Argument types:
  %%    _0 => #{'k'=>'v'}
  %% Unique:
  %%    _0
  _1 = bif:map_get `k`, _0

  %% Unique:
  %%    _1
  _7 = succeeded:body _1
  br _7, ^7, ^1

7:
  %% Argument types:
  %%    _2 => 'false' | 'true'
  %% Unique:
  %%    _2
  _3 = put_tuple _2, `v`
  %% Result type:
  %%    {'false' | 'true', 'v'}
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% map_SUITE.erl:1407
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'a' | 'k'=>'any' | 'false' | 'true'}
function `map_SUITE`:`beam_dead_1`(_0) {
0:
  %% Argument types:
  %%    _0 => #{'a' | 'k'=>'any' | 'false' | 'true'}
  %% Unique:
  %%    _0
  _12 = has_map_field _0, `a`
  br _12, ^12, ^11

12:
  %% Argument types:
  %%    _0 => #{'a' | 'k'=>'any' | 'false' | 'true'}
  %% Unique:
  %%    _0
  _5 = get_map_element _0, `k`

  %% Unique:
  %%    _5
  _13 = succeeded:guard _5
  br _13, ^15, ^11

15:
  %% Argument types:
  %%    _5 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _5
  _16 = bif:'=:=' _5, `true`
  br _16, ^16, ^11

16:
  %% Result type:
  %%    'ok'
  ret `ok`

11:
  %% Result type:
  %%    'error'
  ret `error`
}

%% map_SUITE.erl:1412
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'a' | 'k'=>'any' | 'false' | 'true'}
function `map_SUITE`:`beam_dead_2`(_0) {
0:
  %% Argument types:
  %%    _0 => #{'a' | 'k'=>'any' | 'false' | 'true'}
  %% Unique:
  %%    _0
  _13 = has_map_field _0, `a`
  br _13, ^13, ^12

13:
  %% Argument types:
  %%    _0 => #{'a' | 'k'=>'any' | 'false' | 'true'}
  %% Unique:
  %%    _0
  _6 = get_map_element _0, `k`

  %% Unique:
  %%    _6
  _14 = succeeded:guard _6
  br _14, ^16, ^12

16:
  %% Argument types:
  %%    _6 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _6
  _17 = bif:'=:=' _6, `true`
  br _17, ^17, ^12

17:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% Result type:
  %%    'error'
  ret `error`
}

%% map_SUITE.erl:1420
%% Counter = 17
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'k'=>'false' | 'true'}
function `map_SUITE`:`beam_dead_3`(_0) {
0:
  %% Argument types:
  %%    _0 => #{'k'=>'false' | 'true'}
  %% Unique:
  %%    _0
  _5 = get_map_element _0, `k`

  %% Unique:
  %%    _5
  _11 = succeeded:guard _5
  br _11, ^13, ^10

13:
  br _5, ^14, ^10

14:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% Result type:
  %%    'error'
  ret `error`
}

%% map_SUITE.erl:1428
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_a_map' | #{'k'=>'false' | 'true'}
function `map_SUITE`:`beam_dead_4`(_0) {
0:
  %% Argument types:
  %%    _0 => 'not_a_map' | #{'k'=>'false' | 'true'}
  %% Unique:
  %%    _0
  _11 = bif:is_map _0
  br _11, ^11, ^7

11:
  %% map_SUITE.erl:1430
  %% Argument types:
  %%    _0 => #{'k'=>'false' | 'true'}
  %% Unique:
  %%    _0
  _1 = bif:map_get `k`, _0

  %% Unique:
  %%    _1
  _9 = succeeded:guard _1
  br _9, ^9, ^7

9:
  br _1, ^10, ^7

10:
  %% Result type:
  %%    'ok'
  ret `ok`

7:
  %% Result type:
  %%    'error'
  ret `error`
}

%% map_SUITE.erl:1436
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'k'=>'false' | 'true'}
function `map_SUITE`:`beam_dead_5`(_0) {
0:
  %% map_SUITE.erl:1436
  %% Argument types:
  %%    _0 => #{'k'=>'false' | 'true'}
  %% Unique:
  %%    _0
  _1 = bif:map_get `k`, _0

  %% Unique:
  %%    _1
  _9 = succeeded:guard _1
  br _9, ^9, ^7

9:
  br _1, ^10, ^7

10:
  %% Result type:
  %%    'ok'
  ret `ok`

7:
  %% Result type:
  %%    'error'
  ret `error`
}

%% map_SUITE.erl:1442
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'var'
%%    _1 =>
%%     #{'other' | 'var'=>'live' | 'value'}
function `map_SUITE`:`map_usage`(_0, _1) {
0:
  %% map_SUITE.erl:1443
  %% Argument types:
  %%    _1 => #{'other' | 'var'=>'live' | 'value'}
  %% Unique:
  %%    _1
  _3 = has_map_field _1, `var`
  br _3, ^16, ^14

16:
  %% Result type:
  %%    #{'other' | 'var'=>'live' | 'value'}
  %% Unique:
  %%    _1
  ret _1

14:
  %% map_SUITE.erl:1445
  %% Unique:
  %%    _1
  _4 = put_map `assoc`, _1, `var`, `dead`
  %% Result type:
  %%    #{'other' | 'var'=>'dead' | 'live' | 'value'}
  %% Unique:
  %%    _4
  ret _4
}

%% map_SUITE.erl:1449
%% Counter = 291
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_sequence`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _98 = bif:is_list _0
  br _98, ^98, ^97

98:
  %% map_SUITE.erl:1450
  _1 = call (`id`/1), `"a"`

  %% Aliased:
  %%    _1
  _99 = succeeded:body _1
  br _99, ^99, ^1

99:
  %% map_SUITE.erl:1450
  %% Aliased:
  %%    _1
  _2 = put_map `assoc`, `#{}`, `seq`, `1`, `val`, _1

  %% map_SUITE.erl:1450
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _2
  _45 = call (`map_guard_sequence_1`/1), _2

  %% Unique:
  %%    _45
  _100 = succeeded:body _45
  br _100, ^100, ^1

100:
  %% Argument types:
  %%    _45 => {1..5, any()}
  %% Unique:
  %%    _45
  _248 = bif:'=:=' _45, `{1,"a"}`
  br _248, ^248, ^102

248:
  %% map_SUITE.erl:1451
  _4 = call (`id`/1), `"b"`

  %% Aliased:
  %%    _4
  _103 = succeeded:body _4
  br _103, ^103, ^1

103:
  %% map_SUITE.erl:1451
  %% Aliased:
  %%    _4
  _5 = put_map `assoc`, `#{}`, `seq`, `2`, `val`, _4

  %% map_SUITE.erl:1451
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _5
  _46 = call (`map_guard_sequence_1`/1), _5

  %% Unique:
  %%    _46
  _104 = succeeded:body _46
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    _46 => {1..5, any()}
  %% Unique:
  %%    _46
  _246 = bif:'=:=' _46, `{2,"b"}`
  br _246, ^246, ^106

246:
  %% map_SUITE.erl:1452
  _7 = call (`id`/1), `"c"`

  %% Aliased:
  %%    _7
  _107 = succeeded:body _7
  br _107, ^107, ^1

107:
  %% map_SUITE.erl:1452
  %% Aliased:
  %%    _7
  _8 = put_map `assoc`, `#{}`, `seq`, `3`, `val`, _7

  %% map_SUITE.erl:1452
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _8
  _47 = call (`map_guard_sequence_1`/1), _8

  %% Unique:
  %%    _47
  _108 = succeeded:body _47
  br _108, ^108, ^1

108:
  %% Argument types:
  %%    _47 => {1..5, any()}
  %% Unique:
  %%    _47
  _244 = bif:'=:=' _47, `{3,"c"}`
  br _244, ^244, ^110

244:
  %% map_SUITE.erl:1453
  _10 = call (`id`/1), `"d"`

  %% Aliased:
  %%    _10
  _111 = succeeded:body _10
  br _111, ^111, ^1

111:
  %% map_SUITE.erl:1453
  %% Aliased:
  %%    _10
  _11 = put_map `assoc`, `#{}`, `seq`, `4`, `val`, _10

  %% map_SUITE.erl:1453
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _11
  _48 = call (`map_guard_sequence_1`/1), _11

  %% Unique:
  %%    _48
  _112 = succeeded:body _48
  br _112, ^112, ^1

112:
  %% Argument types:
  %%    _48 => {1..5, any()}
  %% Unique:
  %%    _48
  _242 = bif:'=:=' _48, `{4,"d"}`
  br _242, ^242, ^114

242:
  %% map_SUITE.erl:1454
  _13 = call (`id`/1), `"e"`

  %% Aliased:
  %%    _13
  _115 = succeeded:body _13
  br _115, ^115, ^1

115:
  %% map_SUITE.erl:1454
  %% Aliased:
  %%    _13
  _14 = put_map `assoc`, `#{}`, `seq`, `5`, `val`, _13

  %% map_SUITE.erl:1454
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _14
  _49 = call (`map_guard_sequence_1`/1), _14

  %% Unique:
  %%    _49
  _116 = succeeded:body _49
  br _116, ^116, ^1

116:
  %% Argument types:
  %%    _49 => {1..5, any()}
  %% Unique:
  %%    _49
  _240 = bif:'=:=' _49, `{5,"e"}`
  br _240, ^240, ^118

240:
  %% map_SUITE.erl:1456
  _17 = call (`id`/1), `#{a => 3}`

  %% Aliased:
  %%    _17
  _119 = succeeded:body _17
  br _119, ^119, ^1

119:
  %% map_SUITE.erl:1456
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _17
  _50 = call (`map_guard_sequence_2`/1), _17

  %% Unique:
  %%    _50
  _120 = succeeded:body _50
  br _120, ^236, ^1

236:
  %% Argument types:
  %%    _50 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _50
  _237 = bif:tuple_size _50

  %% Argument types:
  %%    _237 => 2..16777215
  %% Unique:
  %%    _237
  _238 = bif:'=:=' _237, `2`
  br _238, ^235, ^122

235:
  %% Argument types:
  %%    _50 => {1, map()} | {2, map()}
  %% Unique:
  %%    _50
  _52 = get_tuple_element _50, `0`

  %% Argument types:
  %%    _52 => 1..2
  %% Unique:
  %%    _52
  _234 = bif:'=:=' _52, `1`
  br _234, ^233, ^122

233:
  %% Argument types:
  %%    _50 => {1, map()}
  %% Unique:
  %%    _50
  _51 = get_tuple_element _50, `1`

  %% Argument types:
  %%    _51 => map()
  %% Aliased:
  %%    _17, 
  %%    _51
  _123 = bif:'=:=' _51, _17
  br _123, ^123, ^122

123:
  %% map_SUITE.erl:1457
  _20 = call (`id`/1), `#{a => 4,b => 4}`

  %% Aliased:
  %%    _20
  _124 = succeeded:body _20
  br _124, ^124, ^1

124:
  %% map_SUITE.erl:1457
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _20
  _53 = call (`map_guard_sequence_2`/1), _20

  %% Unique:
  %%    _53
  _125 = succeeded:body _53
  br _125, ^229, ^1

229:
  %% Argument types:
  %%    _53 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _53
  _230 = bif:tuple_size _53

  %% Argument types:
  %%    _230 => 2..16777215
  %% Unique:
  %%    _230
  _231 = bif:'=:=' _230, `2`
  br _231, ^228, ^127

228:
  %% Argument types:
  %%    _53 => {1, map()} | {2, map()}
  %% Unique:
  %%    _53
  _55 = get_tuple_element _53, `0`

  %% Argument types:
  %%    _55 => 1..2
  %% Unique:
  %%    _55
  _227 = bif:'=:=' _55, `2`
  br _227, ^226, ^127

226:
  %% Argument types:
  %%    _53 => {2, map()}
  %% Unique:
  %%    _53
  _54 = get_tuple_element _53, `1`

  %% Argument types:
  %%    _54 => map()
  %% Aliased:
  %%    _20, 
  %%    _54
  _128 = bif:'=:=' _54, _20
  br _128, ^128, ^127

128:
  %% map_SUITE.erl:1458
  _23 = call (`id`/1), `#{a => gg,b => 4}`

  %% Aliased:
  %%    _23
  _129 = succeeded:body _23
  br _129, ^129, ^1

129:
  %% map_SUITE.erl:1458
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _23
  _56 = call (`map_guard_sequence_2`/1), _23

  %% Unique:
  %%    _56
  _130 = succeeded:body _56
  br _130, ^222, ^1

222:
  %% Argument types:
  %%    _56 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _56
  _223 = bif:tuple_size _56

  %% Argument types:
  %%    _223 => 2..16777215
  %% Unique:
  %%    _223
  _224 = bif:'=:=' _223, `3`
  br _224, ^219, ^132

219:
  %% Argument types:
  %%    _56 => {3, any(), map()}
  %% Unique:
  %%    _56
  _58 = get_tuple_element _56, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _218 = bif:'=:=' _58, `gg`
  br _218, ^217, ^132

217:
  %% Argument types:
  %%    _56 => {3, 'gg', map()}
  %% Unique:
  %%    _56
  _57 = get_tuple_element _56, `2`

  %% Argument types:
  %%    _57 => map()
  %% Aliased:
  %%    _23, 
  %%    _57
  _133 = bif:'=:=' _57, _23
  br _133, ^133, ^132

133:
  %% map_SUITE.erl:1459
  _26 = call (`id`/1), `#{a => sc,b => 3,c => sc2}`

  %% Aliased:
  %%    _26
  _134 = succeeded:body _26
  br _134, ^134, ^1

134:
  %% map_SUITE.erl:1459
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _26
  _60 = call (`map_guard_sequence_2`/1), _26

  %% Unique:
  %%    _60
  _135 = succeeded:body _60
  br _135, ^213, ^1

213:
  %% Argument types:
  %%    _60 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _60
  _214 = bif:tuple_size _60

  %% Argument types:
  %%    _214 => 2..16777215
  %% Unique:
  %%    _214
  _215 = bif:'=:=' _214, `4`
  br _215, ^212, ^137

212:
  %% Argument types:
  %%    _60 => {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _60
  _64 = get_tuple_element _60, `0`

  %% Argument types:
  %%    _64 => 4..5
  %% Unique:
  %%    _64
  _211 = bif:'=:=' _64, `4`
  br _211, ^210, ^137

210:
  %% Argument types:
  %%    _60 => {4, any(), any(), map()}
  %% Unique:
  %%    _60
  _63 = get_tuple_element _60, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _209 = bif:'=:=' _63, `sc`
  br _209, ^208, ^137

208:
  %% Argument types:
  %%    _60 => {4, 'sc', any(), map()}
  %% Unique:
  %%    _60
  _62 = get_tuple_element _60, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _207 = bif:'=:=' _62, `sc`
  br _207, ^206, ^137

206:
  %% Argument types:
  %%    _60 => {4, 'sc', 'sc', map()}
  %% Unique:
  %%    _60
  _61 = get_tuple_element _60, `3`

  %% Argument types:
  %%    _61 => map()
  %% Aliased:
  %%    _26, 
  %%    _61
  _138 = bif:'=:=' _61, _26
  br _138, ^138, ^137

138:
  %% map_SUITE.erl:1460
  _29 = call (`id`/1), `#{a => kk,b => other,c => sc2}`

  %% Aliased:
  %%    _29
  _139 = succeeded:body _29
  br _139, ^139, ^1

139:
  %% map_SUITE.erl:1460
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _29
  _65 = call (`map_guard_sequence_2`/1), _29

  %% Unique:
  %%    _65
  _140 = succeeded:body _65
  br _140, ^202, ^1

202:
  %% Argument types:
  %%    _65 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _65
  _203 = bif:tuple_size _65

  %% Argument types:
  %%    _203 => 2..16777215
  %% Unique:
  %%    _203
  _204 = bif:'=:=' _203, `4`
  br _204, ^201, ^142

201:
  %% Argument types:
  %%    _65 => {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _65
  _69 = get_tuple_element _65, `0`

  %% Argument types:
  %%    _69 => 4..5
  %% Unique:
  %%    _69
  _200 = bif:'=:=' _69, `5`
  br _200, ^199, ^142

199:
  %% Argument types:
  %%    _65 => {5, any(), any(), map()}
  %% Unique:
  %%    _65
  _68 = get_tuple_element _65, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _198 = bif:'=:=' _68, `kk`
  br _198, ^197, ^142

197:
  %% Argument types:
  %%    _65 => {5, 'kk', any(), map()}
  %% Unique:
  %%    _65
  _67 = get_tuple_element _65, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _196 = bif:'=:=' _67, `kk`
  br _196, ^195, ^142

195:
  %% Argument types:
  %%    _65 => {5, 'kk', 'kk', map()}
  %% Unique:
  %%    _65
  _66 = get_tuple_element _65, `3`

  %% Argument types:
  %%    _66 => map()
  %% Aliased:
  %%    _29, 
  %%    _66
  _143 = bif:'=:=' _66, _29
  br _143, ^287, ^142

287:
  br ^289

289:
  _147 = new_try_tag `'catch'`
  br _147, ^145, ^146

145:
  %% map_SUITE.erl:1463
  _31 = call (`id`/1), `"e"`

  %% Aliased:
  %%    _31
  _149 = succeeded:body _31
  br _149, ^149, ^146

149:
  %% map_SUITE.erl:1463
  %% Aliased:
  %%    _31
  _32 = put_map `assoc`, `#{}`, `seq`, `6`, `val`, _31

  %% map_SUITE.erl:1463
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _32
  _79 = call (`map_guard_sequence_1`/1), _32

  %% Unique:
  %%    _79
  _150 = succeeded:body _79
  br _150, ^150, ^146

150:
  br ^144

146:
  %% Unique:
  %%    _147
  _153 = landingpad `'catch'`, _147

  %% Aliased:
  %%    _153
  _151 = extract _153, `0`
  br ^144

144:
  _154 = phi { _151, ^146 }, { _79, ^150 }

  %% Aliased:
  %%    _154
  %% Unique:
  %%    _147
  _33 = catch_end _147, _154

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _191 = is_tagged_tuple _33, `2`, `'EXIT'`
  br _191, ^188, ^156

188:
  %% Argument types:
  %%    _33 => {''EXIT'', any()}
  %% Aliased:
  %%    _33
  _70 = get_tuple_element _33, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _185 = is_tagged_tuple _70, `2`, `function_clause`
  br _185, ^288, ^156

288:
  br ^290

290:
  _160 = new_try_tag `'catch'`
  br _160, ^158, ^159

158:
  %% map_SUITE.erl:1464
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  _81 = call (`map_guard_sequence_2`/1), `#{b => 5}`

  %% Unique:
  %%    _81
  _162 = succeeded:body _81
  br _162, ^162, ^159

162:
  br ^157

159:
  %% Unique:
  %%    _160
  _165 = landingpad `'catch'`, _160

  %% Aliased:
  %%    _165
  _163 = extract _165, `0`
  br ^157

157:
  _166 = phi { _163, ^159 }, { _81, ^162 }

  %% Aliased:
  %%    _166
  %% Unique:
  %%    _160
  _35 = catch_end _160, _166

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _178 = is_tagged_tuple _35, `2`, `'EXIT'`
  br _178, ^175, ^168

175:
  %% Argument types:
  %%    _35 => {''EXIT'', any()}
  %% Aliased:
  %%    _35
  _74 = get_tuple_element _35, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _172 = is_tagged_tuple _74, `2`, `function_clause`
  br _172, ^169, ^168

169:
  %% Result type:
  %%    'ok'
  ret `ok`

168:
  %% map_SUITE.erl:1464
  %% Aliased:
  %%    _35
  _82 = match_fail `badmatch`, _35

  %% Unique:
  %%    _82
  _181 = succeeded:body _82
  br ^1

156:
  %% map_SUITE.erl:1463
  %% Aliased:
  %%    _33
  _83 = match_fail `badmatch`, _33

  %% Unique:
  %%    _83
  _194 = succeeded:body _83
  br ^1

142:
  %% map_SUITE.erl:1460
  %% Unique:
  %%    _65
  _84 = match_fail `badmatch`, _65

  %% Unique:
  %%    _84
  _205 = succeeded:body _84
  br ^1

137:
  %% map_SUITE.erl:1459
  %% Unique:
  %%    _60
  _85 = match_fail `badmatch`, _60

  %% Unique:
  %%    _85
  _216 = succeeded:body _85
  br ^1

132:
  %% map_SUITE.erl:1458
  %% Unique:
  %%    _56
  _86 = match_fail `badmatch`, _56

  %% Unique:
  %%    _86
  _225 = succeeded:body _86
  br ^1

127:
  %% map_SUITE.erl:1457
  %% Unique:
  %%    _53
  _87 = match_fail `badmatch`, _53

  %% Unique:
  %%    _87
  _232 = succeeded:body _87
  br ^1

122:
  %% map_SUITE.erl:1456
  %% Unique:
  %%    _50
  _88 = match_fail `badmatch`, _50

  %% Unique:
  %%    _88
  _239 = succeeded:body _88
  br ^1

118:
  %% map_SUITE.erl:1454
  %% Unique:
  %%    _49
  _89 = match_fail `badmatch`, _49

  %% Unique:
  %%    _89
  _241 = succeeded:body _89
  br ^1

114:
  %% map_SUITE.erl:1453
  %% Unique:
  %%    _48
  _90 = match_fail `badmatch`, _48

  %% Unique:
  %%    _90
  _243 = succeeded:body _90
  br ^1

110:
  %% map_SUITE.erl:1452
  %% Unique:
  %%    _47
  _91 = match_fail `badmatch`, _47

  %% Unique:
  %%    _91
  _245 = succeeded:body _91
  br ^1

106:
  %% map_SUITE.erl:1451
  %% Unique:
  %%    _46
  _92 = match_fail `badmatch`, _46

  %% Unique:
  %%    _92
  _247 = succeeded:body _92
  br ^1

102:
  %% map_SUITE.erl:1450
  %% Unique:
  %%    _45
  _93 = match_fail `badmatch`, _45

  %% Unique:
  %%    _93
  _249 = succeeded:body _93
  br ^1

97:
  %% map_SUITE.erl:1449
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_sequence/1-',1}}
  _94 = match_fail `function_clause`, _0

  %% Unique:
  %%    _94
  _250 = succeeded:body _94
  br ^1

1:
  _95 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _95
}

%% map_SUITE.erl:1467
%% Counter = 376
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_sequence_large`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _129 = bif:is_list _0
  br _129, ^129, ^128

129:
  %% map_SUITE.erl:1468
  M0 = call (`id`/1), `#{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
   18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
   26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
   33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
   39 => "c9",10.0 => fa0,11.0 => fa1,12.0 => fa2,13.0 => fa3,14.0 => fa4,
   15.0 => fa5,16.0 => fa6,17.0 => fa7,18.0 => fa8,19.0 => fa9,20.0 => fb0,
   21.0 => fb1,22.0 => fb2,23.0 => fb3,24.0 => fb4,25.0 => fb5,26.0 => fb6,
   27.0 => fb7,28.0 => fb8,29.0 => fb9,30.0 => "fc0",31.0 => "fc1",
   32.0 => "fc2",33.0 => "fc3",34.0 => "fc4",35.0 => "fc5",36.0 => "fc6",
   37.0 => "fc7",38.0 => "fc8",39.0 => "fc9",
   {["00",3]} => "10",
   {["01",3]} => "11",
   {["02",3]} => "12",
   {["03",3]} => "13",
   {["04",3]} => "14",
   {["05",3]} => "15",
   {["06",3]} => "16",
   {["07",3]} => "17",
   {["08",3]} => "18",
   {["09",3]} => "19",
   #{map => key,one => small} => "small map key 1",
   #{map => key,third => small} => "small map key 3",
   #{map => key,second => small} => "small map key 2",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
     18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
     26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
     33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
     39 => "c9",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 1",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
     19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
     28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
     35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
     k36 => "c6",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 2",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M0
  _130 = succeeded:body M0
  br _130, ^130, ^1

130:
  %% map_SUITE.erl:1520
  _2 = call (`id`/1), `"a"`

  %% Aliased:
  %%    _2
  _131 = succeeded:body _2
  br _131, ^131, ^1

131:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _134 = bif:is_map M0
  br _134, ^134, ^133

134:
  %% map_SUITE.erl:1520
  %% Aliased:
  %%    _2, 
  %%    M0
  _85 = put_map `assoc`, M0, `seq`, `1`, `val`, _2

  %% map_SUITE.erl:1520
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _85
  _52 = call (`map_guard_sequence_1`/1), _85

  %% Unique:
  %%    _52
  _136 = succeeded:body _52
  br _136, ^136, ^1

136:
  %% Argument types:
  %%    _52 => {1..5, any()}
  %% Unique:
  %%    _52
  _328 = bif:'=:=' _52, `{1,"a"}`
  br _328, ^328, ^138

328:
  %% map_SUITE.erl:1521
  _5 = call (`id`/1), `"b"`

  %% Aliased:
  %%    _5
  _139 = succeeded:body _5
  br _139, ^142, ^1

142:
  %% map_SUITE.erl:1521
  %% Aliased:
  %%    _5, 
  %%    M0
  _87 = put_map `assoc`, M0, `seq`, `2`, `val`, _5

  %% map_SUITE.erl:1521
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _87
  _53 = call (`map_guard_sequence_1`/1), _87

  %% Unique:
  %%    _53
  _144 = succeeded:body _53
  br _144, ^144, ^1

144:
  %% Argument types:
  %%    _53 => {1..5, any()}
  %% Unique:
  %%    _53
  _326 = bif:'=:=' _53, `{2,"b"}`
  br _326, ^326, ^146

326:
  %% map_SUITE.erl:1522
  _8 = call (`id`/1), `"c"`

  %% Aliased:
  %%    _8
  _147 = succeeded:body _8
  br _147, ^150, ^1

150:
  %% map_SUITE.erl:1522
  %% Aliased:
  %%    _8, 
  %%    M0
  _89 = put_map `assoc`, M0, `seq`, `3`, `val`, _8

  %% map_SUITE.erl:1522
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _89
  _54 = call (`map_guard_sequence_1`/1), _89

  %% Unique:
  %%    _54
  _152 = succeeded:body _54
  br _152, ^152, ^1

152:
  %% Argument types:
  %%    _54 => {1..5, any()}
  %% Unique:
  %%    _54
  _324 = bif:'=:=' _54, `{3,"c"}`
  br _324, ^324, ^154

324:
  %% map_SUITE.erl:1523
  _11 = call (`id`/1), `"d"`

  %% Aliased:
  %%    _11
  _155 = succeeded:body _11
  br _155, ^158, ^1

158:
  %% map_SUITE.erl:1523
  %% Aliased:
  %%    _11, 
  %%    M0
  _91 = put_map `assoc`, M0, `seq`, `4`, `val`, _11

  %% map_SUITE.erl:1523
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _91
  _55 = call (`map_guard_sequence_1`/1), _91

  %% Unique:
  %%    _55
  _160 = succeeded:body _55
  br _160, ^160, ^1

160:
  %% Argument types:
  %%    _55 => {1..5, any()}
  %% Unique:
  %%    _55
  _322 = bif:'=:=' _55, `{4,"d"}`
  br _322, ^322, ^162

322:
  %% map_SUITE.erl:1524
  _14 = call (`id`/1), `"e"`

  %% Aliased:
  %%    _14
  _163 = succeeded:body _14
  br _163, ^166, ^1

166:
  %% map_SUITE.erl:1524
  %% Aliased:
  %%    _14, 
  %%    M0
  _93 = put_map `assoc`, M0, `seq`, `5`, `val`, _14

  %% map_SUITE.erl:1524
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _93
  _56 = call (`map_guard_sequence_1`/1), _93

  %% Unique:
  %%    _56
  _168 = succeeded:body _56
  br _168, ^168, ^1

168:
  %% Argument types:
  %%    _56 => {1..5, any()}
  %% Unique:
  %%    _56
  _320 = bif:'=:=' _56, `{5,"e"}`
  br _320, ^173, ^170

173:
  %% map_SUITE.erl:1526
  %% Aliased:
  %%    M0
  _95 = put_map `assoc`, M0, `a`, `3`

  %% map_SUITE.erl:1526
  %% Aliased:
  %%    _95
  _19 = call (`id`/1), _95

  %% Aliased:
  %%    _19
  _175 = succeeded:body _19
  br _175, ^175, ^1

175:
  %% map_SUITE.erl:1526
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _19
  _57 = call (`map_guard_sequence_2`/1), _19

  %% Unique:
  %%    _57
  _176 = succeeded:body _57
  br _176, ^316, ^1

316:
  %% Argument types:
  %%    _57 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _57
  _317 = bif:tuple_size _57

  %% Argument types:
  %%    _317 => 2..16777215
  %% Unique:
  %%    _317
  _318 = bif:'=:=' _317, `2`
  br _318, ^315, ^178

315:
  %% Argument types:
  %%    _57 => {1, map()} | {2, map()}
  %% Unique:
  %%    _57
  _59 = get_tuple_element _57, `0`

  %% Argument types:
  %%    _59 => 1..2
  %% Unique:
  %%    _59
  _314 = bif:'=:=' _59, `1`
  br _314, ^313, ^178

313:
  %% Argument types:
  %%    _57 => {1, map()}
  %% Unique:
  %%    _57
  _58 = get_tuple_element _57, `1`

  %% Argument types:
  %%    _58 => map()
  %% Aliased:
  %%    _19, 
  %%    _58
  _179 = bif:'=:=' _58, _19
  br _179, ^182, ^178

182:
  %% map_SUITE.erl:1527
  %% Aliased:
  %%    M0
  _97 = put_map `assoc`, M0, `a`, `4`, `b`, `4`

  %% map_SUITE.erl:1527
  %% Aliased:
  %%    _97
  _23 = call (`id`/1), _97

  %% Aliased:
  %%    _23
  _184 = succeeded:body _23
  br _184, ^184, ^1

184:
  %% map_SUITE.erl:1527
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _23
  _60 = call (`map_guard_sequence_2`/1), _23

  %% Unique:
  %%    _60
  _185 = succeeded:body _60
  br _185, ^309, ^1

309:
  %% Argument types:
  %%    _60 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _60
  _310 = bif:tuple_size _60

  %% Argument types:
  %%    _310 => 2..16777215
  %% Unique:
  %%    _310
  _311 = bif:'=:=' _310, `2`
  br _311, ^308, ^187

308:
  %% Argument types:
  %%    _60 => {1, map()} | {2, map()}
  %% Unique:
  %%    _60
  _62 = get_tuple_element _60, `0`

  %% Argument types:
  %%    _62 => 1..2
  %% Unique:
  %%    _62
  _307 = bif:'=:=' _62, `2`
  br _307, ^306, ^187

306:
  %% Argument types:
  %%    _60 => {2, map()}
  %% Unique:
  %%    _60
  _61 = get_tuple_element _60, `1`

  %% Argument types:
  %%    _61 => map()
  %% Aliased:
  %%    _23, 
  %%    _61
  _188 = bif:'=:=' _61, _23
  br _188, ^191, ^187

191:
  %% map_SUITE.erl:1528
  %% Aliased:
  %%    M0
  _99 = put_map `assoc`, M0, `a`, `gg`, `b`, `4`

  %% map_SUITE.erl:1528
  %% Aliased:
  %%    _99
  _27 = call (`id`/1), _99

  %% Aliased:
  %%    _27
  _193 = succeeded:body _27
  br _193, ^193, ^1

193:
  %% map_SUITE.erl:1528
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _27
  _63 = call (`map_guard_sequence_2`/1), _27

  %% Unique:
  %%    _63
  _194 = succeeded:body _63
  br _194, ^302, ^1

302:
  %% Argument types:
  %%    _63 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _63
  _303 = bif:tuple_size _63

  %% Argument types:
  %%    _303 => 2..16777215
  %% Unique:
  %%    _303
  _304 = bif:'=:=' _303, `3`
  br _304, ^299, ^196

299:
  %% Argument types:
  %%    _63 => {3, any(), map()}
  %% Unique:
  %%    _63
  _65 = get_tuple_element _63, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _298 = bif:'=:=' _65, `gg`
  br _298, ^297, ^196

297:
  %% Argument types:
  %%    _63 => {3, 'gg', map()}
  %% Unique:
  %%    _63
  _64 = get_tuple_element _63, `2`

  %% Argument types:
  %%    _64 => map()
  %% Aliased:
  %%    _27, 
  %%    _64
  _197 = bif:'=:=' _64, _27
  br _197, ^200, ^196

200:
  %% map_SUITE.erl:1529
  %% Aliased:
  %%    M0
  _101 = put_map `assoc`, M0, `a`, `sc`, `b`, `3`, `c`, `sc2`

  %% map_SUITE.erl:1529
  %% Aliased:
  %%    _101
  _31 = call (`id`/1), _101

  %% Aliased:
  %%    _31
  _202 = succeeded:body _31
  br _202, ^202, ^1

202:
  %% map_SUITE.erl:1529
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _31
  _67 = call (`map_guard_sequence_2`/1), _31

  %% Unique:
  %%    _67
  _203 = succeeded:body _67
  br _203, ^293, ^1

293:
  %% Argument types:
  %%    _67 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _67
  _294 = bif:tuple_size _67

  %% Argument types:
  %%    _294 => 2..16777215
  %% Unique:
  %%    _294
  _295 = bif:'=:=' _294, `4`
  br _295, ^292, ^205

292:
  %% Argument types:
  %%    _67 => {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _67
  _71 = get_tuple_element _67, `0`

  %% Argument types:
  %%    _71 => 4..5
  %% Unique:
  %%    _71
  _291 = bif:'=:=' _71, `4`
  br _291, ^290, ^205

290:
  %% Argument types:
  %%    _67 => {4, any(), any(), map()}
  %% Unique:
  %%    _67
  _70 = get_tuple_element _67, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _289 = bif:'=:=' _70, `sc`
  br _289, ^288, ^205

288:
  %% Argument types:
  %%    _67 => {4, 'sc', any(), map()}
  %% Unique:
  %%    _67
  _69 = get_tuple_element _67, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _287 = bif:'=:=' _69, `sc`
  br _287, ^286, ^205

286:
  %% Argument types:
  %%    _67 => {4, 'sc', 'sc', map()}
  %% Unique:
  %%    _67
  _68 = get_tuple_element _67, `3`

  %% Argument types:
  %%    _68 => map()
  %% Aliased:
  %%    _31, 
  %%    _68
  _206 = bif:'=:=' _68, _31
  br _206, ^209, ^205

209:
  %% map_SUITE.erl:1530
  %% Aliased:
  %%    M0
  _103 = put_map `assoc`, M0, `a`, `kk`, `b`, `other`, `c`, `sc2`

  %% map_SUITE.erl:1530
  %% Aliased:
  %%    _103
  _35 = call (`id`/1), _103

  %% Aliased:
  %%    _35
  _211 = succeeded:body _35
  br _211, ^211, ^1

211:
  %% map_SUITE.erl:1530
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _35
  _72 = call (`map_guard_sequence_2`/1), _35

  %% Unique:
  %%    _72
  _212 = succeeded:body _72
  br _212, ^282, ^1

282:
  %% Argument types:
  %%    _72 => {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _72
  _283 = bif:tuple_size _72

  %% Argument types:
  %%    _283 => 2..16777215
  %% Unique:
  %%    _283
  _284 = bif:'=:=' _283, `4`
  br _284, ^281, ^214

281:
  %% Argument types:
  %%    _72 => {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Unique:
  %%    _72
  _76 = get_tuple_element _72, `0`

  %% Argument types:
  %%    _76 => 4..5
  %% Unique:
  %%    _76
  _280 = bif:'=:=' _76, `5`
  br _280, ^279, ^214

279:
  %% Argument types:
  %%    _72 => {5, any(), any(), map()}
  %% Unique:
  %%    _72
  _75 = get_tuple_element _72, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _278 = bif:'=:=' _75, `kk`
  br _278, ^277, ^214

277:
  %% Argument types:
  %%    _72 => {5, 'kk', any(), map()}
  %% Unique:
  %%    _72
  _74 = get_tuple_element _72, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _276 = bif:'=:=' _74, `kk`
  br _276, ^275, ^214

275:
  %% Argument types:
  %%    _72 => {5, 'kk', 'kk', map()}
  %% Unique:
  %%    _72
  _73 = get_tuple_element _72, `3`

  %% Argument types:
  %%    _73 => map()
  %% Aliased:
  %%    _35, 
  %%    _73
  _215 = bif:'=:=' _73, _35
  br _215, ^373, ^214

373:
  br ^375

375:
  _219 = new_try_tag `'catch'`
  br _219, ^217, ^218

217:
  %% map_SUITE.erl:1532
  _37 = call (`id`/1), `"e"`

  %% Aliased:
  %%    _37
  _221 = succeeded:body _37
  br _221, ^224, ^218

224:
  %% map_SUITE.erl:1532
  %% Aliased:
  %%    _37, 
  %%    M0
  _106 = put_map `assoc`, M0, `seq`, `6`, `val`, _37

  %% map_SUITE.erl:1532
  %% Result type:
  %%    {1..5, any()}
  %% Aliased:
  %%    _106
  _108 = call (`map_guard_sequence_1`/1), _106

  %% Unique:
  %%    _108
  _226 = succeeded:body _108
  br _226, ^226, ^218

226:
  br ^216

218:
  %% Unique:
  %%    _219
  _229 = landingpad `'catch'`, _219

  %% Aliased:
  %%    _229
  _227 = extract _229, `0`
  br ^216

216:
  _230 = phi { _227, ^218 }, { _108, ^226 }

  %% Aliased:
  %%    _230
  %% Unique:
  %%    _219
  _39 = catch_end _219, _230

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _271 = is_tagged_tuple _39, `2`, `'EXIT'`
  br _271, ^268, ^232

268:
  %% Argument types:
  %%    _39 => {''EXIT'', any()}
  %% Aliased:
  %%    _39
  _77 = get_tuple_element _39, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _265 = is_tagged_tuple _77, `2`, `function_clause`
  br _265, ^262, ^232

262:
  %% map_SUITE.erl:1533
  %% Aliased:
  %%    M0
  _110 = put_map `assoc`, M0, `b`, `5`
  _236 = new_try_tag `'catch'`
  br _236, ^342, ^235

342:
  %% map_SUITE.erl:1533
  %% Result type:
  %%    {1, map()} | {2, map()} | {3, any(), map()} | {4, any(), any(), map()} | {5, any(), any(), map()}
  %% Aliased:
  %%    _110
  _112 = call (`map_guard_sequence_2`/1), _110

  %% Unique:
  %%    _112
  _242 = succeeded:body _112
  br _242, ^242, ^235

242:
  br ^233

235:
  %% Unique:
  %%    _236
  _245 = landingpad `'catch'`, _236

  %% Aliased:
  %%    _245
  _243 = extract _245, `0`
  br ^233

233:
  _246 = phi { _243, ^235 }, { _112, ^242 }

  %% Aliased:
  %%    _246
  %% Unique:
  %%    _236
  _42 = catch_end _236, _246

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _258 = is_tagged_tuple _42, `2`, `'EXIT'`
  br _258, ^255, ^248

255:
  %% Argument types:
  %%    _42 => {''EXIT'', any()}
  %% Aliased:
  %%    _42
  _81 = get_tuple_element _42, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _252 = is_tagged_tuple _81, `2`, `function_clause`
  br _252, ^249, ^248

249:
  %% Result type:
  %%    'ok'
  ret `ok`

248:
  %% map_SUITE.erl:1533
  %% Aliased:
  %%    _42
  _113 = match_fail `badmatch`, _42

  %% Unique:
  %%    _113
  _261 = succeeded:body _113
  br ^1

232:
  %% map_SUITE.erl:1532
  %% Aliased:
  %%    _39
  _114 = match_fail `badmatch`, _39

  %% Unique:
  %%    _114
  _274 = succeeded:body _114
  br ^1

214:
  %% map_SUITE.erl:1530
  %% Unique:
  %%    _72
  _115 = match_fail `badmatch`, _72

  %% Unique:
  %%    _115
  _285 = succeeded:body _115
  br ^1

205:
  %% map_SUITE.erl:1529
  %% Unique:
  %%    _67
  _116 = match_fail `badmatch`, _67

  %% Unique:
  %%    _116
  _296 = succeeded:body _116
  br ^1

196:
  %% map_SUITE.erl:1528
  %% Unique:
  %%    _63
  _117 = match_fail `badmatch`, _63

  %% Unique:
  %%    _117
  _305 = succeeded:body _117
  br ^1

187:
  %% map_SUITE.erl:1527
  %% Unique:
  %%    _60
  _118 = match_fail `badmatch`, _60

  %% Unique:
  %%    _118
  _312 = succeeded:body _118
  br ^1

178:
  %% map_SUITE.erl:1526
  %% Unique:
  %%    _57
  _119 = match_fail `badmatch`, _57

  %% Unique:
  %%    _119
  _319 = succeeded:body _119
  br ^1

170:
  %% map_SUITE.erl:1524
  %% Unique:
  %%    _56
  _120 = match_fail `badmatch`, _56

  %% Unique:
  %%    _120
  _321 = succeeded:body _120
  br ^1

162:
  %% map_SUITE.erl:1523
  %% Unique:
  %%    _55
  _121 = match_fail `badmatch`, _55

  %% Unique:
  %%    _121
  _323 = succeeded:body _121
  br ^1

154:
  %% map_SUITE.erl:1522
  %% Unique:
  %%    _54
  _122 = match_fail `badmatch`, _54

  %% Unique:
  %%    _122
  _325 = succeeded:body _122
  br ^1

146:
  %% map_SUITE.erl:1521
  %% Unique:
  %%    _53
  _123 = match_fail `badmatch`, _53

  %% Unique:
  %%    _123
  _327 = succeeded:body _123
  br ^1

138:
  %% map_SUITE.erl:1520
  %% Unique:
  %%    _52
  _124 = match_fail `badmatch`, _52

  %% Unique:
  %%    _124
  _329 = succeeded:body _124
  br ^1

133:
  %% map_SUITE.erl:1520
  %% Aliased:
  %%    M0
  _86 = match_fail `badmap`, M0

  %% Unique:
  %%    _86
  _135 = succeeded:body _86
  br ^1

128:
  %% map_SUITE.erl:1467
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_sequence_large/1-',1}}
  _125 = match_fail `function_clause`, _0

  %% Unique:
  %%    _125
  _330 = succeeded:body _125
  br ^1

1:
  _126 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _126
}

%% map_SUITE.erl:1536
%% Counter = 30
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     map()
function `map_SUITE`:`map_guard_sequence_1`(_0) {
0:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _11 = get_map_element _0, `seq`

  %% Aliased:
  %%    _11
  _21 = succeeded:guard _11
  br _21, ^21, ^20

21:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _10 = get_map_element _0, `val`

  %% Aliased:
  %%    _10
  _22 = succeeded:guard _10
  br _22, ^22, ^20

22:
  switch _11, ^20, [
    { `1`, ^27 },
    { `2`, ^27 },
    { `3`, ^27 },
    { `4`, ^27 },
    { `5`, ^27 }
  ]

27:
  %% Argument types:
  %%    _11 => 1..5
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _11
  _16 = put_tuple _11, _10
  %% Result type:
  %%    {1..5, any()}
  %% Unique:
  %%    _16
  ret _16

20:
  %% map_SUITE.erl:1536
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-map_guard_sequence_1/1-',1}}
  _17 = match_fail `function_clause`, _0

  %% Unique:
  %%    _17
  _29 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% map_SUITE.erl:1542
%% Counter = 35
%% bs_ensure_opt: true
function `map_SUITE`:`map_guard_sequence_2`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _33 = bif:is_map _0
  br _33, ^33, ^19

33:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _9 = get_map_element _0, `a`

  %% Aliased:
  %%    _9
  _20 = succeeded:guard _9
  br _20, ^20, ^19

20:
  switch _9, ^32, [
    { `3`, ^22 },
    { `4`, ^23 }
  ]

23:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _11 = put_tuple `2`, _0
  %% Result type:
  %%    {2, map()}
  %% Unique:
  %%    _11
  ret _11

22:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _12 = put_tuple `1`, _0
  %% Result type:
  %%    {1, map()}
  %% Unique:
  %%    _12
  ret _12

32:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _10 = get_map_element _0, `b`

  %% Aliased:
  %%    _10
  _27 = succeeded:guard _10
  br _27, ^27, ^31

27:
  switch _10, ^31, [
    { `3`, ^28 },
    { `4`, ^29 }
  ]

29:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0, 
  %%    _9
  _15 = put_tuple `3`, _9, _0
  %% Result type:
  %%    {3, any(), map()}
  %% Unique:
  %%    _15
  ret _15

28:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0, 
  %%    _9
  _14 = put_tuple `4`, _9, _9, _0
  %% Result type:
  %%    {4, any(), any(), map()}
  %% Unique:
  %%    _14
  ret _14

31:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0, 
  %%    _9
  _13 = put_tuple `5`, _9, _9, _0
  %% Result type:
  %%    {5, any(), any(), map()}
  %% Unique:
  %%    _13
  ret _13

19:
  %% map_SUITE.erl:1542
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-map_guard_sequence_2/1-',1}}
  _16 = match_fail `function_clause`, _0

  %% Unique:
  %%    _16
  _34 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% map_SUITE.erl:1549
%% Counter = 47
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_update`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _19 = bif:is_list _0
  br _19, ^19, ^18

19:
  %% map_SUITE.erl:1550
  %% Result type:
  %%    'error' | 'first' | 'second' | 'third'
  _6 = call (`map_guard_update`/2), `#{}`, `#{}`

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br _20, ^20, ^1

20:
  %% Argument types:
  %%    _6 => 'error' | 'first' | 'second' | 'third'
  %% Unique:
  %%    _6
  _43 = bif:'=:=' _6, `error`
  br _43, ^42, ^22

42:
  %% map_SUITE.erl:1551
  %% Result type:
  %%    'error' | 'first' | 'second' | 'third'
  _7 = call (`map_guard_update`/2), `#{}`, `#{x => first}`

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    _7 => 'error' | 'first' | 'second' | 'third'
  %% Unique:
  %%    _7
  _40 = bif:'=:=' _7, `first`
  br _40, ^39, ^25

39:
  %% map_SUITE.erl:1552
  %% Result type:
  %%    'error' | 'first' | 'second' | 'third'
  _8 = call (`map_guard_update`/2), `#{y => old}`, `#{x => second,y => old}`

  %% Unique:
  %%    _8
  _26 = succeeded:body _8
  br _26, ^26, ^1

26:
  %% Argument types:
  %%    _8 => 'error' | 'first' | 'second' | 'third'
  %% Unique:
  %%    _8
  _37 = bif:'=:=' _8, `second`
  br _37, ^36, ^28

36:
  %% map_SUITE.erl:1553
  %% Result type:
  %%    'error' | 'first' | 'second' | 'third'
  _9 = call (`map_guard_update`/2), `#{x => old,y => old}`, `#{x => third,y => old}`

  %% Unique:
  %%    _9
  _29 = succeeded:body _9
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    _9 => 'error' | 'first' | 'second' | 'third'
  %% Unique:
  %%    _9
  _34 = bif:'=:=' _9, `third`
  br _34, ^33, ^31

33:
  %% map_SUITE.erl:1554
  %% Result type:
  %%    'ok'
  _10 = call (`bad_map_guard_update`/0)

  %% Unique:
  %%    _10
  _32 = succeeded:body _10
  br _32, ^46, ^1

46:
  ret _10

31:
  %% map_SUITE.erl:1553
  %% Unique:
  %%    _9
  _11 = match_fail `badmatch`, _9

  %% Unique:
  %%    _11
  _35 = succeeded:body _11
  br ^1

28:
  %% map_SUITE.erl:1552
  %% Unique:
  %%    _8
  _12 = match_fail `badmatch`, _8

  %% Unique:
  %%    _12
  _38 = succeeded:body _12
  br ^1

25:
  %% map_SUITE.erl:1551
  %% Unique:
  %%    _7
  _13 = match_fail `badmatch`, _7

  %% Unique:
  %%    _13
  _41 = succeeded:body _13
  br ^1

22:
  %% map_SUITE.erl:1550
  %% Unique:
  %%    _6
  _14 = match_fail `badmatch`, _6

  %% Unique:
  %%    _14
  _44 = succeeded:body _14
  br ^1

18:
  %% map_SUITE.erl:1549
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_update/1-',1}}
  _15 = match_fail `function_clause`, _0

  %% Unique:
  %%    _15
  _45 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% map_SUITE.erl:1557
%% Counter = 79
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_update_large`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _31 = bif:is_list _0
  br _31, ^31, ^30

31:
  %% map_SUITE.erl:1558
  M0 = call (`id`/1), `#{70 => a0,71 => a1,72 => a2,73 => a3,74 => a4,75 => a5,76 => a6,77 => a7,
   78 => a8,79 => a9,80 => b0,81 => b1,82 => b2,83 => b3,84 => b4,85 => b5,
   86 => b6,87 => b7,88 => b8,89 => b9,90 => "c0",91 => "c1",92 => "c2",
   93 => "c3",94 => "c4",95 => "c5",96 => "c6",97 => "c7",98 => "c8",
   99 => "c9",70.0 => fa0,71.0 => fa1,72.0 => fa2,73.0 => fa3,74.0 => fa4,
   75.0 => fa5,76.0 => fa6,77.0 => fa7,78.0 => fa8,79.0 => fa9,80.0 => fb0,
   81.0 => fb1,82.0 => fb2,83.0 => fb3,84.0 => fb4,85.0 => fb5,86.0 => fb6,
   87.0 => fb7,88.0 => fb8,89.0 => fb9,90.0 => "fc0",91.0 => "fc1",
   92.0 => "fc2",93.0 => "fc3",94.0 => "fc4",95.0 => "fc5",96.0 => "fc6",
   97.0 => "fc7",98.0 => "fc8",99.0 => "fc9",
   {["00",3]} => "10",
   {["01",3]} => "11",
   {["02",3]} => "12",
   {["03",3]} => "13",
   {["04",3]} => "14",
   {["05",3]} => "15",
   {["06",3]} => "16",
   {["07",3]} => "17",
   {["08",3]} => "18",
   {["09",3]} => "19",
   #{map => key,one => small} => "small map key 1",
   #{map => key,third => small} => "small map key 3",
   #{map => key,second => small} => "small map key 2",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,16 => a6,17 => a7,
     18 => a8,19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,
     26 => b6,27 => b7,28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",
     33 => "c3",34 => "c4",35 => "c5",36 => "c6",37 => "c7",38 => "c8",
     39 => "c9",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 1",
   #{10 => a0,11 => a1,12 => a2,13 => a3,14 => a4,15 => a5,17 => a7,18 => a8,
     19 => a9,20 => b0,21 => b1,22 => b2,23 => b3,24 => b4,25 => b5,27 => b7,
     28 => b8,29 => b9,30 => "c0",31 => "c1",32 => "c2",33 => "c3",34 => "c4",
     35 => "c5",37 => "c7",38 => "c8",39 => "c9",k16 => a6,k26 => b6,
     k36 => "c6",
     {["00"]} => "10",
     {["01"]} => "11",
     {["02"]} => "12",
     {["03"]} => "13",
     {["04"]} => "14",
     {["05"]} => "15",
     {["06"]} => "16",
     {["07"]} => "17",
     {["08"]} => "18",
     {["09"]} => "19",
     "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
     "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
     <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
     <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
     <<"58">> => "e8",<<"59">> => "e9"} =>
       "large map key 2",
   "40" => "d0","41" => "d1","42" => "d2","43" => "d3","44" => "d4",
   "45" => "d5","46" => "d6","47" => "d7","48" => "d8","49" => "d9",
   <<"50">> => "e0",<<"51">> => "e1",<<"52">> => "e2",<<"53">> => "e3",
   <<"54">> => "e4",<<"55">> => "e5",<<"56">> => "e6",<<"57">> => "e7",
   <<"58">> => "e8",<<"59">> => "e9"}`

  %% Aliased:
  %%    M0
  _32 = succeeded:body M0
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _35 = bif:is_map M0
  br _35, ^76, ^34

76:
  %% map_SUITE.erl:1611
  %% Result type:
  %%    'error' | 'first' | 'second' | 'third'
  %% Aliased:
  %%    M0
  _12 = call (`map_guard_update`/2), M0, M0

  %% Unique:
  %%    _12
  _41 = succeeded:body _12
  br _41, ^41, ^1

41:
  %% Argument types:
  %%    _12 => 'error' | 'first' | 'second' | 'third'
  %% Unique:
  %%    _12
  _73 = bif:'=:=' _12, `error`
  br _73, ^50, ^43

50:
  %% map_SUITE.erl:1612
  %% Aliased:
  %%    M0
  _18 = put_map `assoc`, M0, `x`, `first`

  %% map_SUITE.erl:1612
  %% Result type:
  %%    'error' | 'first' | 'second' | 'third'
  %% Aliased:
  %%    _18, 
  %%    M0
  _13 = call (`map_guard_update`/2), M0, _18

  %% Unique:
  %%    _13
  _52 = succeeded:body _13
  br _52, ^52, ^1

52:
  %% Argument types:
  %%    _13 => 'error' | 'first' | 'second' | 'third'
  %% Unique:
  %%    _13
  _70 = bif:'=:=' _13, `first`
  br _70, ^57, ^54

57:
  %% map_SUITE.erl:1613
  %% Aliased:
  %%    M0
  _20 = put_map `assoc`, M0, `y`, `old`

  %% map_SUITE.erl:1613
  %% Aliased:
  %%    M0
  _22 = put_map `assoc`, M0, `x`, `second`, `y`, `old`

  %% map_SUITE.erl:1613
  %% Result type:
  %%    'error' | 'first' | 'second' | 'third'
  %% Aliased:
  %%    _20, 
  %%    _22
  _14 = call (`map_guard_update`/2), _20, _22

  %% Unique:
  %%    _14
  _63 = succeeded:body _14
  br _63, ^63, ^1

63:
  %% Argument types:
  %%    _14 => 'error' | 'first' | 'second' | 'third'
  %% Unique:
  %%    _14
  _67 = bif:'=:=' _14, `second`
  br _67, ^66, ^65

66:
  %% Result type:
  %%    'ok'
  ret `ok`

65:
  %% map_SUITE.erl:1613
  %% Unique:
  %%    _14
  _24 = match_fail `badmatch`, _14

  %% Unique:
  %%    _24
  _68 = succeeded:body _24
  br ^1

54:
  %% map_SUITE.erl:1612
  %% Unique:
  %%    _13
  _25 = match_fail `badmatch`, _13

  %% Unique:
  %%    _25
  _71 = succeeded:body _25
  br ^1

43:
  %% map_SUITE.erl:1611
  %% Unique:
  %%    _12
  _26 = match_fail `badmatch`, _12

  %% Unique:
  %%    _26
  _74 = succeeded:body _26
  br ^1

34:
  %% map_SUITE.erl:1611
  %% Aliased:
  %%    M0
  _15 = match_fail `badmap`, M0

  %% Unique:
  %%    _15
  _36 = succeeded:body _15
  br ^1

30:
  %% map_SUITE.erl:1557
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_update_large/1-',1}}
  _27 = match_fail `function_clause`, _0

  %% Unique:
  %%    _27
  _75 = succeeded:body _27
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% map_SUITE.erl:1616
%% Counter = 49
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     map()
%%    _1 =>
%%     map()
function `map_SUITE`:`map_guard_update`(_0, _1) {
0:
  %% map_SUITE.erl:1616
  %% Aliased:
  %%    _0
  _23 = put_map `assoc`, _0, `x`, `first`

  %% Argument types:
  %%    _23 => map()
  %%    _1 => map()
  %% Aliased:
  %%    _1, 
  %%    _23
  _34 = bif:'=:=' _23, _1
  br _34, ^34, ^39

34:
  %% Result type:
  %%    'first'
  ret `first`

39:
  %% map_SUITE.erl:1617
  %% Aliased:
  %%    _0
  _21 = put_map `assoc`, _0, `x`, `second`

  %% Argument types:
  %%    _21 => map()
  %%    _1 => map()
  %% Aliased:
  %%    _1, 
  %%    _21
  _41 = bif:'=:=' _21, _1
  br _41, ^41, ^45

41:
  %% Result type:
  %%    'second'
  ret `second`

45:
  %% map_SUITE.erl:1618
  %% Aliased:
  %%    _0
  _19 = put_map `exact`, _0, `x`, `third`

  %% Aliased:
  %%    _19
  _46 = succeeded:guard _19
  br _46, ^43, ^27

43:
  %% Argument types:
  %%    _19 => map()
  %%    _1 => map()
  %% Aliased:
  %%    _1, 
  %%    _19
  _48 = bif:'=:=' _19, _1
  br _48, ^48, ^27

48:
  %% Result type:
  %%    'third'
  ret `third`

27:
  %% Result type:
  %%    'error'
  ret `error`
}

%% map_SUITE.erl:1621
%% Counter = 11
%% bs_ensure_opt: true
function `map_SUITE`:`bad_map_guard_update`() {
0:
  %% Result type:
  %%    none()
  _0 = make_fun (`burns`/1)

  %% map_SUITE.erl:1622
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`do_bad_map_guard_update`/1), _0

  %% Unique:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% Result type:
  %%    none()
  _1 = make_fun (`turns`/1)

  %% map_SUITE.erl:1623
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _1
  _3 = call (`do_bad_map_guard_update`/1), _1

  %% Unique:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^10, ^1

10:
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% map_SUITE.erl:1626
%% Counter = 9
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_) -> none())
function `map_SUITE`:`do_bad_map_guard_update`(_0) {
0:
  %% map_SUITE.erl:1627
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`do_bad_map_guard_update_1`/2), _0, `#{}`

  %% Unique:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% map_SUITE.erl:1628
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _3 = call (`do_bad_map_guard_update_1`/2), _0, `#{true => 1}`

  %% Unique:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^8, ^1

8:
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% map_SUITE.erl:1631
%% Counter = 58
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_) -> none())
%%    _1 =>
%%     #{'true'=>1}
function `map_SUITE`:`do_bad_map_guard_update_1`(_0, _1) {
0:
  br ^57

57:
  _19 = new_try_tag `'catch'`
  br _19, ^17, ^18

17:
  %% map_SUITE.erl:1635
  %% Result type:
  %%    none()
  %% Argument types:
  %%    _0 => fun((_) -> none())
  %%    _1 => #{'true'=>1}
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  _12 = call _0, _1

  %% Aliased:
  %%    _12
  _21 = succeeded:body _12
  br ^18

18:
  %% Unique:
  %%    _19
  _24 = landingpad `'catch'`, _19

  %% Aliased:
  %%    _24
  _22 = extract _24, `0`
  br ^16

16:
  %% Aliased:
  %%    _22
  %% Unique:
  %%    _19
  _2 = catch_end _19, _22

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _37 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _37, ^34, ^27

34:
  %% Argument types:
  %%    _2 => {''EXIT'', any()}
  %% Aliased:
  %%    _2
  _7 = get_tuple_element _2, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _31 = is_tagged_tuple _7, `2`, `function_clause`
  br _31, ^28, ^27

28:
  %% Result type:
  %%    'ok'
  ret `ok`

27:
  %% map_SUITE.erl:1635
  %% Aliased:
  %%    _2
  _13 = match_fail `badmatch`, _2

  %% Unique:
  %%    _13
  _40 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% map_SUITE.erl:1638
%% Counter = 41
%% bs_ensure_opt: true
function `map_SUITE`:`burns`(_0) {
0:
  %% map_SUITE.erl:1638
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-burns/1-',1}}
  _12 = match_fail `function_clause`, _0

  %% Unique:
  %%    _12
  _25 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% map_SUITE.erl:1641
%% Counter = 38
%% bs_ensure_opt: true
function `map_SUITE`:`turns`(_0) {
0:
  %% map_SUITE.erl:1641
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-turns/1-',1}}
  _12 = match_fail `function_clause`, _0

  %% Unique:
  %%    _12
  _24 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% map_SUITE.erl:1644
%% Counter = 247
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_receive`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _102 = bif:is_list _0
  br _102, ^102, ^101

102:
  _2 = make_fun (`'-t_guard_receive/1-fun-0-'`/0)

  %% map_SUITE.erl:1646
  %% Aliased:
  %%    _2
  Pid = call (`erlang`:`spawn_link`/1), _2

  %% Aliased:
  %%    Pid
  _103 = succeeded:body Pid
  br _103, ^103, ^1

103:
  %% map_SUITE.erl:1652
  %% Aliased:
  %%    Pid
  _10 = call (`call`/2), Pid, `#{id => 0,in => {36893488147419103232,3},op => sub}`

  %% Aliased:
  %%    _10
  _104 = succeeded:body _10
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _235 = bif:is_map _10
  br _235, ^235, ^106

235:
  %% Argument types:
  %%    _10 => map()
  %% Aliased:
  %%    _10
  _50 = get_map_element _10, `id`

  %% Aliased:
  %%    _50
  _107 = succeeded:guard _50
  br _107, ^107, ^106

107:
  %% Argument types:
  %%    _10 => map()
  %% Aliased:
  %%    _10
  _49 = get_map_element _10, `res`

  %% Aliased:
  %%    _49
  _108 = succeeded:guard _49
  br _108, ^108, ^106

108:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _234 = bif:'=:=' _50, `1`
  br _234, ^233, ^106

233:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _109 = bif:'=:=' _49, `36893488147419103229`
  br _109, ^112, ^106

112:
  %% map_SUITE.erl:1653
  %% Aliased:
  %%    _10
  _72 = put_map `assoc`, _10, `in`, `{53,2}`, `op`, `idiv`

  %% map_SUITE.erl:1653
  %% Aliased:
  %%    _72, 
  %%    Pid
  _14 = call (`call`/2), Pid, _72

  %% Aliased:
  %%    _14
  _114 = succeeded:body _14
  br _114, ^114, ^1

114:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _231 = bif:is_map _14
  br _231, ^231, ^116

231:
  %% Argument types:
  %%    _14 => map()
  %% Aliased:
  %%    _14
  _52 = get_map_element _14, `id`

  %% Aliased:
  %%    _52
  _117 = succeeded:guard _52
  br _117, ^117, ^116

117:
  %% Argument types:
  %%    _14 => map()
  %% Aliased:
  %%    _14
  _51 = get_map_element _14, `res`

  %% Aliased:
  %%    _51
  _118 = succeeded:guard _51
  br _118, ^118, ^116

118:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _230 = bif:'=:=' _52, `2`
  br _230, ^229, ^116

229:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _228 = bif:'=:=' _51, `26`
  br _228, ^121, ^116

121:
  %% map_SUITE.erl:1654
  %% Aliased:
  %%    _14
  _74 = put_map `assoc`, _14, `in`, `{26,32}`, `op`, `imul`

  %% map_SUITE.erl:1654
  %% Aliased:
  %%    _74, 
  %%    Pid
  _18 = call (`call`/2), Pid, _74

  %% Aliased:
  %%    _18
  _123 = succeeded:body _18
  br _123, ^123, ^1

123:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _225 = bif:is_map _18
  br _225, ^225, ^125

225:
  %% Argument types:
  %%    _18 => map()
  %% Aliased:
  %%    _18
  _54 = get_map_element _18, `id`

  %% Aliased:
  %%    _54
  _126 = succeeded:guard _54
  br _126, ^126, ^125

126:
  %% Argument types:
  %%    _18 => map()
  %% Aliased:
  %%    _18
  _53 = get_map_element _18, `res`

  %% Aliased:
  %%    _53
  _127 = succeeded:guard _53
  br _127, ^127, ^125

127:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _224 = bif:'=:=' _54, `3`
  br _224, ^223, ^125

223:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _222 = bif:'=:=' _53, `832`
  br _222, ^130, ^125

130:
  %% map_SUITE.erl:1655
  %% Aliased:
  %%    _18
  _76 = put_map `assoc`, _18, `in`, `{1,3}`, `op`, `add`

  %% map_SUITE.erl:1655
  %% Aliased:
  %%    _76, 
  %%    Pid
  _22 = call (`call`/2), Pid, _76

  %% Aliased:
  %%    _22
  _132 = succeeded:body _22
  br _132, ^132, ^1

132:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _219 = bif:is_map _22
  br _219, ^219, ^134

219:
  %% Argument types:
  %%    _22 => map()
  %% Aliased:
  %%    _22
  _56 = get_map_element _22, `id`

  %% Aliased:
  %%    _56
  _135 = succeeded:guard _56
  br _135, ^135, ^134

135:
  %% Argument types:
  %%    _22 => map()
  %% Aliased:
  %%    _22
  _55 = get_map_element _22, `res`

  %% Aliased:
  %%    _55
  _136 = succeeded:guard _55
  br _136, ^136, ^134

136:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _218 = bif:'=:=' _56, `4`
  br _218, ^217, ^134

217:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _216 = bif:'=:=' _55, `4`
  br _216, ^139, ^134

139:
  %% map_SUITE.erl:1656
  %% Aliased:
  %%    _22
  _78 = put_map `assoc`, _22, `in`, `{36893488147419103232,3}`, `op`, `sub`

  %% map_SUITE.erl:1656
  %% Aliased:
  %%    _78, 
  %%    Pid
  _27 = call (`call`/2), Pid, _78

  %% Aliased:
  %%    _27
  _141 = succeeded:body _27
  br _141, ^141, ^1

141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _213 = bif:is_map _27
  br _213, ^213, ^143

213:
  %% Argument types:
  %%    _27 => map()
  %% Aliased:
  %%    _27
  _58 = get_map_element _27, `id`

  %% Aliased:
  %%    _58
  _144 = succeeded:guard _58
  br _144, ^144, ^143

144:
  %% Argument types:
  %%    _27 => map()
  %% Aliased:
  %%    _27
  _57 = get_map_element _27, `res`

  %% Aliased:
  %%    _57
  _145 = succeeded:guard _57
  br _145, ^145, ^143

145:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _212 = bif:'=:=' _58, `5`
  br _212, ^211, ^143

211:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _146 = bif:'=:=' _57, `36893488147419103229`
  br _146, ^149, ^143

149:
  %% map_SUITE.erl:1657
  %% Aliased:
  %%    _27
  _80 = put_map `assoc`, _27, `in`, `{<<"some text">>,<<"was appended">>}`, `op`, `"append"`

  %% map_SUITE.erl:1657
  %% Aliased:
  %%    _80, 
  %%    Pid
  _31 = call (`call`/2), Pid, _80

  %% Aliased:
  %%    _31
  _151 = succeeded:body _31
  br _151, ^151, ^1

151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _209 = bif:is_map _31
  br _209, ^209, ^153

209:
  %% Argument types:
  %%    _31 => map()
  %% Aliased:
  %%    _31
  _60 = get_map_element _31, `id`

  %% Aliased:
  %%    _60
  _154 = succeeded:guard _60
  br _154, ^154, ^153

154:
  %% Argument types:
  %%    _31 => map()
  %% Aliased:
  %%    _31
  _59 = get_map_element _31, `res`

  %% Aliased:
  %%    _59
  _155 = succeeded:guard _59
  br _155, ^155, ^153

155:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _208 = bif:'=:=' _60, `6`
  br _208, ^207, ^153

207:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _156 = bif:'=:=' _59, `<<"some textwas appended">>`
  br _156, ^159, ^153

159:
  %% map_SUITE.erl:1658
  %% Aliased:
  %%    _31
  _82 = put_map `assoc`, _31, `in`, `{1,3}`, `op`, `add`

  %% map_SUITE.erl:1658
  %% Aliased:
  %%    _82, 
  %%    Pid
  _61 = call (`call`/2), Pid, _82

  %% Aliased:
  %%    _61
  _161 = succeeded:body _61
  br _161, ^161, ^1

161:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _205 = bif:is_map _61
  br _205, ^205, ^163

205:
  %% Argument types:
  %%    _61 => map()
  %% Aliased:
  %%    _61
  _63 = get_map_element _61, `id`

  %% Aliased:
  %%    _63
  _164 = succeeded:guard _63
  br _164, ^164, ^163

164:
  %% Argument types:
  %%    _61 => map()
  %% Aliased:
  %%    _61
  _62 = get_map_element _61, `res`

  %% Aliased:
  %%    _62
  _165 = succeeded:guard _62
  br _165, ^165, ^163

165:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _204 = bif:'=:=' _63, `7`
  br _204, ^203, ^163

203:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _202 = bif:'=:=' _62, `4`
  br _202, ^168, ^163

168:
  %% map_SUITE.erl:1662
  %% Aliased:
  %%    _10
  _84 = put_map `assoc`, _10, `in`, `{<<"some text">>,<<"was appended">>}`, `op`, `"append"`

  %% map_SUITE.erl:1662
  %% Aliased:
  %%    _84, 
  %%    Pid
  _64 = call (`call`/2), Pid, _84

  %% Aliased:
  %%    _64
  _170 = succeeded:body _64
  br _170, ^170, ^1

170:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _199 = bif:is_map _64
  br _199, ^199, ^172

199:
  %% Argument types:
  %%    _64 => map()
  %% Aliased:
  %%    _64
  _66 = get_map_element _64, `id`

  %% Aliased:
  %%    _66
  _173 = succeeded:guard _66
  br _173, ^173, ^172

173:
  %% Argument types:
  %%    _64 => map()
  %% Aliased:
  %%    _64
  _65 = get_map_element _64, `res`

  %% Aliased:
  %%    _65
  _174 = succeeded:guard _65
  br _174, ^174, ^172

174:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _198 = bif:'=:=' _66, `2`
  br _198, ^197, ^172

197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _175 = bif:'=:=' _65, `<<"some textwas appended">>`
  br _175, ^178, ^172

178:
  %% map_SUITE.erl:1663
  %% Aliased:
  %%    _22
  _86 = put_map `assoc`, _22, `in`, `{33,66}`, `op`, `add`

  %% map_SUITE.erl:1663
  %% Aliased:
  %%    _86, 
  %%    Pid
  _67 = call (`call`/2), Pid, _86

  %% Aliased:
  %%    _67
  _180 = succeeded:body _67
  br _180, ^180, ^1

180:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _195 = bif:is_map _67
  br _195, ^195, ^182

195:
  %% Argument types:
  %%    _67 => map()
  %% Aliased:
  %%    _67
  _69 = get_map_element _67, `id`

  %% Aliased:
  %%    _69
  _183 = succeeded:guard _69
  br _183, ^183, ^182

183:
  %% Argument types:
  %%    _67 => map()
  %% Aliased:
  %%    _67
  _68 = get_map_element _67, `res`

  %% Aliased:
  %%    _68
  _184 = succeeded:guard _68
  br _184, ^184, ^182

184:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _194 = bif:'=:=' _69, `5`
  br _194, ^193, ^182

193:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _192 = bif:'=:=' _68, `99`
  br _192, ^191, ^182

191:
  %% map_SUITE.erl:1666
  %% Aliased:
  %%    Pid
  _70 = call (`call`/2), Pid, `done`

  %% Aliased:
  %%    _70
  _185 = succeeded:body _70
  br _185, ^185, ^1

185:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _189 = bif:'=:=' _70, `done`
  br _189, ^188, ^187

188:
  %% Result type:
  %%    'ok'
  ret `ok`

187:
  %% map_SUITE.erl:1666
  %% Aliased:
  %%    _70
  _88 = match_fail `badmatch`, _70

  %% Unique:
  %%    _88
  _190 = succeeded:body _88
  br ^1

182:
  %% map_SUITE.erl:1663
  %% Aliased:
  %%    _67
  _89 = match_fail `badmatch`, _67

  %% Unique:
  %%    _89
  _196 = succeeded:body _89
  br ^1

172:
  %% map_SUITE.erl:1662
  %% Aliased:
  %%    _64
  _90 = match_fail `badmatch`, _64

  %% Unique:
  %%    _90
  _200 = succeeded:body _90
  br ^1

163:
  %% map_SUITE.erl:1658
  %% Aliased:
  %%    _61
  _91 = match_fail `badmatch`, _61

  %% Unique:
  %%    _91
  _206 = succeeded:body _91
  br ^1

153:
  %% map_SUITE.erl:1657
  %% Aliased:
  %%    _31
  _92 = match_fail `badmatch`, _31

  %% Unique:
  %%    _92
  _210 = succeeded:body _92
  br ^1

143:
  %% map_SUITE.erl:1656
  %% Aliased:
  %%    _27
  _93 = match_fail `badmatch`, _27

  %% Unique:
  %%    _93
  _214 = succeeded:body _93
  br ^1

134:
  %% map_SUITE.erl:1655
  %% Aliased:
  %%    _22
  _94 = match_fail `badmatch`, _22

  %% Unique:
  %%    _94
  _220 = succeeded:body _94
  br ^1

125:
  %% map_SUITE.erl:1654
  %% Aliased:
  %%    _18
  _95 = match_fail `badmatch`, _18

  %% Unique:
  %%    _95
  _226 = succeeded:body _95
  br ^1

116:
  %% map_SUITE.erl:1653
  %% Aliased:
  %%    _14
  _96 = match_fail `badmatch`, _14

  %% Unique:
  %%    _96
  _232 = succeeded:body _96
  br ^1

106:
  %% map_SUITE.erl:1652
  %% Aliased:
  %%    _10
  _97 = match_fail `badmatch`, _10

  %% Unique:
  %%    _97
  _236 = succeeded:body _97
  br ^1

101:
  %% map_SUITE.erl:1644
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_receive/1-',1}}
  _98 = match_fail `function_clause`, _0

  %% Unique:
  %%    _98
  _237 = succeeded:body _98
  br ^1

1:
  _99 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _99
}

%% map_SUITE.erl:1671
%% Counter = 52
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_receive_large`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _37 = bif:is_list _0
  br _37, ^37, ^36

37:
  %% Result type:
  %%    map()
  _9 = make_fun (`'-t_guard_receive_large/1-fun-1-'`/2)

  %% map_SUITE.erl:1674
  _1 = call (`lists`:`seq`/2), `1`, `1500`

  %% Aliased:
  %%    _1
  _38 = succeeded:body _1
  br _38, ^38, ^1

38:
  %% map_SUITE.erl:1672
  %% Aliased:
  %%    _1, 
  %%    _9
  _21 = call (`lists`:`foldl`/3), _9, `#{done => 0,procs => #{}}`, _1

  %% Aliased:
  %%    _21
  _39 = succeeded:body _21
  br _39, ^39, ^1

39:
  _16 = make_fun (`'-t_guard_receive_large/1-fun-2-'`/1)

  %% map_SUITE.erl:1677
  %% Argument types:
  %%    _21 => map()
  %% Aliased:
  %%    _21
  _11 = bif:map_get `procs`, _21

  %% Aliased:
  %%    _11
  _40 = succeeded:body _11
  br _40, ^40, ^1

40:
  %% map_SUITE.erl:1677
  %% Aliased:
  %%    _11
  _12 = call (`maps`:`keys`/1), _11

  %% Aliased:
  %%    _12
  _41 = succeeded:body _12
  br _41, ^41, ^1

41:
  %% map_SUITE.erl:1675
  %% Aliased:
  %%    _12, 
  %%    _16
  _31 = call (`lists`:`foreach`/2), _16, _12

  %% Aliased:
  %%    _31
  _42 = succeeded:body _31
  br _42, ^42, ^1

42:
  %% map_SUITE.erl:1678
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _21
  _23 = call (`guard_receive_large_loop`/1), _21

  %% Unique:
  %%    _23
  _43 = succeeded:body _23
  br _43, ^51, ^1

51:
  ret _23

36:
  %% map_SUITE.erl:1671
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_receive_large/1-',1}}
  _33 = match_fail `function_clause`, _0

  %% Unique:
  %%    _33
  _49 = succeeded:body _33
  br ^1

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _34
}

%% map_SUITE.erl:1681
%% Counter = 98
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     map()
function `map_SUITE`:`guard_receive_large_loop`(_0) {
0:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _22 = get_map_element _0, `done`

  %% Aliased:
  %%    _22
  _39 = succeeded:guard _22
  br _39, ^39, ^38

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _41 = bif:'=:=' _22, `1500`
  br _41, ^40, ^38

40:
  %% Result type:
  %%    'ok'
  ret `ok`

38:
  br ^13

13:
  %% map_SUITE.erl:1684
  _10 = peek_message `none`

  %% Aliased:
  %%    _10
  _93 = succeeded:guard _10
  br _93, ^91, ^92

91:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _85 = bif:is_map _10
  br _85, ^85, ^46

85:
  %% Argument types:
  %%    _10 => map()
  %% Aliased:
  %%    _10
  _15 = get_map_element _10, `msg`

  %% Aliased:
  %%    _15
  _47 = succeeded:guard _15
  br _47, ^47, ^46

47:
  %% Argument types:
  %%    _10 => map()
  %% Aliased:
  %%    _10
  _14 = get_map_element _10, `pid`

  %% Aliased:
  %%    _14
  _48 = succeeded:guard _14
  br _48, ^48, ^46

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _84 = bif:'=:=' _15, `hello`
  br _84, ^83, ^46

83:
  _23 = remove_message

  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _17 = get_map_element _0, `procs`

  %% Aliased:
  %%    _17
  _51 = succeeded:guard _17
  br _51, ^51, ^50

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _80 = bif:is_map _17
  br _80, ^80, ^50

80:
  %% Argument types:
  %%    _17 => map()
  %% Aliased:
  %%    _14, 
  %%    _17
  _18 = get_map_element _17, _14

  %% Aliased:
  %%    _18
  _52 = succeeded:guard _18
  br _52, ^52, ^50

52:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _65 = bif:'=:=' _18, `150`
  br _65, ^63, ^79

63:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _20 = get_map_element _0, `done`

  %% Aliased:
  %%    _20
  _54 = succeeded:guard _20
  br _54, ^54, ^79

54:
  %% map_SUITE.erl:1688
  %% Argument types:
  %%    
  _1 = bif:self

  %% Argument types:
  %%    _1 => pid()
  %% Unique:
  %%    _1
  _21 = put_tuple _1, `done`

  %% map_SUITE.erl:1688
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _21
  _24 = call (`erlang`:`'!'`/2), _14, _21

  %% Aliased:
  %%    _24
  _55 = succeeded:body _24
  br _55, ^55, ^1

55:
  %% map_SUITE.erl:1689
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _2 = bif:'+' _20, `1`

  %% Unique:
  %%    _2
  _56 = succeeded:body _2
  br _56, ^59, ^1

59:
  %% map_SUITE.erl:1689
  %% Aliased:
  %%    _0, 
  %%    _2
  _25 = put_map `exact`, _0, `done`, _2

  %% Aliased:
  %%    _25
  _60 = succeeded:body _25
  br _60, ^95, ^1

95:
  %% map_SUITE.erl:1689
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _25
  _27 = call (`guard_receive_large_loop`/1), _25

  %% Unique:
  %%    _27
  _62 = succeeded:body _27
  br _62, ^62, ^1

62:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _27
  ret _27

79:
  %% map_SUITE.erl:1691
  %% Argument types:
  %%    
  _4 = bif:self

  %% Argument types:
  %%    _4 => pid()
  %% Unique:
  %%    _4
  _19 = put_tuple _4, `hello`

  %% map_SUITE.erl:1691
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _19
  _28 = call (`erlang`:`'!'`/2), _14, _19

  %% Aliased:
  %%    _28
  _66 = succeeded:body _28
  br _66, ^66, ^1

66:
  %% map_SUITE.erl:1692
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _5 = bif:'+' _18, `1`

  %% Unique:
  %%    _5
  _67 = succeeded:body _5
  br _67, ^70, ^1

70:
  %% map_SUITE.erl:1692
  %% Aliased:
  %%    _5, 
  %%    _14, 
  %%    _17
  _29 = put_map `exact`, _17, _14, _5

  %% Aliased:
  %%    _29
  _71 = succeeded:body _29
  br _71, ^75, ^1

75:
  %% map_SUITE.erl:1692
  %% Aliased:
  %%    _0, 
  %%    _29
  _31 = put_map `exact`, _0, `procs`, _29

  %% Aliased:
  %%    _31
  _76 = succeeded:body _31
  br _76, ^97, ^1

97:
  %% map_SUITE.erl:1692
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _31
  _33 = call (`guard_receive_large_loop`/1), _31

  %% Unique:
  %%    _33
  _78 = succeeded:body _33
  br _78, ^78, ^1

78:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _33
  ret _33

50:
  %% map_SUITE.erl:1686
  %% Aliased:
  %%    _0
  _34 = match_fail `case_clause`, _0

  %% Unique:
  %%    _34
  _82 = succeeded:body _34
  br ^1

46:
  _35 = recv_next
  br ^13

92:
  _86 = wait_timeout `infinity`

  %% Unique:
  %%    _86
  _87 = succeeded:body _86
  br _87, ^90, ^1

90:
  br ^13

1:
  _36 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _36
}

%% map_SUITE.erl:1696
%% Counter = 37
%% bs_ensure_opt: true
function `map_SUITE`:`grecv_loop`() {
0:
  br ^6

6:
  %% map_SUITE.erl:1697
  _3 = peek_message `none`

  %% Aliased:
  %%    _3
  _35 = succeeded:guard _3
  br _35, ^33, ^34

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _25 = bif:is_tuple _3
  br _25, ^25, ^19

25:
  %% Argument types:
  %%    _3 => {...}
  %% Aliased:
  %%    _3
  _26 = bif:tuple_size _3

  %% Argument types:
  %%    _26 => 0..16777215
  %% Unique:
  %%    _26
  _27 = bif:'=:=' _26, `2`
  br _27, ^24, ^19

24:
  %% Argument types:
  %%    _3 => {any(), any()}
  %% Aliased:
  %%    _3
  _7 = get_tuple_element _3, `1`
  switch _7, ^19, [
    { `done`, ^23 },
    { `hello`, ^22 }
  ]

22:
  _9 = remove_message

  %% map_SUITE.erl:1701
  %% Argument types:
  %%    
  _0 = bif:self

  %% map_SUITE.erl:1701
  %% Unique:
  %%    _0
  _1 = put_map `assoc`, `#{}`, `msg`, `hello`, `pid`, _0

  %% Argument types:
  %%    _3 => {any(), 'hello'}
  %% Aliased:
  %%    _3
  _8 = get_tuple_element _3, `0`

  %% map_SUITE.erl:1701
  %% Aliased:
  %%    _1, 
  %%    _8
  _10 = call (`erlang`:`'!'`/2), _8, _1

  %% Aliased:
  %%    _10
  _20 = succeeded:body _10
  br _20, ^20, ^1

20:
  %% map_SUITE.erl:1702
  %% Result type:
  %%    'ok'
  _11 = call (`grecv_loop`/0)

  %% Unique:
  %%    _11
  _21 = succeeded:body _11
  br _21, ^21, ^1

21:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _11
  ret _11

23:
  _12 = remove_message
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  _13 = recv_next
  br ^6

34:
  _28 = wait_timeout `infinity`

  %% Unique:
  %%    _28
  _29 = succeeded:body _28
  br _29, ^32, ^1

32:
  br ^6

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% map_SUITE.erl:1706
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     pid()
%%    _1 =>
%%     'done' | map()
function `map_SUITE`:`call`(_0, _1) {
0:
  %% map_SUITE.erl:1707
  %% Argument types:
  %%    
  _2 = bif:self

  %% Argument types:
  %%    _2 => pid()
  %%    _1 => 'done' | map()
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _2
  _9 = put_tuple _2, _1

  %% map_SUITE.erl:1707
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _9
  _13 = call (`erlang`:`'!'`/2), _0, _9

  %% Aliased:
  %%    _13
  _18 = succeeded:body _13
  br _18, ^18, ^1

18:
  br ^10

10:
  %% map_SUITE.erl:1707
  _6 = peek_message `none`

  %% Aliased:
  %%    _6
  _35 = succeeded:guard _6
  br _35, ^33, ^34

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _25 = bif:is_tuple _6
  br _25, ^25, ^22

25:
  %% Argument types:
  %%    _6 => {...}
  %% Aliased:
  %%    _6
  _26 = bif:tuple_size _6

  %% Argument types:
  %%    _26 => 0..16777215
  %% Unique:
  %%    _26
  _27 = bif:'=:=' _26, `2`
  br _27, ^24, ^22

24:
  %% Argument types:
  %%    _6 => {any(), any()}
  %% Aliased:
  %%    _6
  _12 = get_tuple_element _6, `0`

  %% Argument types:
  %%    _0 => pid()
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _0
  _23 = bif:'=:=' _12, _0
  br _23, ^23, ^22

23:
  %% Argument types:
  %%    _6 => {pid(), any()}
  %% Aliased:
  %%    _6
  _11 = get_tuple_element _6, `1`
  _14 = remove_message
  %% Aliased:
  %%    _11
  ret _11

22:
  _15 = recv_next
  br ^10

34:
  _28 = wait_timeout `infinity`

  %% Unique:
  %%    _28
  _29 = succeeded:body _28
  br _29, ^32, ^1

32:
  br ^10

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% map_SUITE.erl:1709
%% Counter = 181
%% bs_ensure_opt: true
function `map_SUITE`:`guard_receive_loop`() {
0:
  br ^26

26:
  %% map_SUITE.erl:1710
  _23 = peek_message `none`

  %% Aliased:
  %%    _23
  _169 = succeeded:guard _23
  br _169, ^167, ^168

167:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _159 = bif:is_tuple _23
  br _159, ^159, ^98

159:
  %% Argument types:
  %%    _23 => {...}
  %% Aliased:
  %%    _23
  _160 = bif:tuple_size _23

  %% Argument types:
  %%    _160 => 0..16777215
  %% Unique:
  %%    _160
  _161 = bif:'=:=' _160, `2`
  br _161, ^158, ^98

158:
  %% Argument types:
  %%    _23 => {any(), any()}
  %% Aliased:
  %%    _23
  _50 = get_tuple_element _23, `0`

  %% Argument types:
  %%    _23 => {any(), any()}
  %% Aliased:
  %%    _23
  _49 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _152 = bif:is_map _49
  br _152, ^152, ^100

152:
  %% Argument types:
  %%    _49 => map()
  %% Aliased:
  %%    _49
  _54 = get_map_element _49, `id`

  %% Aliased:
  %%    _54
  _101 = succeeded:guard _54
  br _101, ^101, ^99

101:
  %% Argument types:
  %%    _49 => map()
  %% Aliased:
  %%    _49
  _53 = get_map_element _49, `in`

  %% Aliased:
  %%    _53
  _102 = succeeded:guard _53
  br _102, ^102, ^99

102:
  %% Argument types:
  %%    _49 => map()
  %% Aliased:
  %%    _49
  _52 = get_map_element _49, `op`

  %% Aliased:
  %%    _52
  _103 = succeeded:guard _52
  br _103, ^103, ^99

103:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _149 = bif:is_tuple _53
  br _149, ^149, ^99

149:
  %% Argument types:
  %%    _53 => {...}
  %% Aliased:
  %%    _53
  _150 = bif:tuple_size _53

  %% Argument types:
  %%    _150 => 0..16777215
  %% Unique:
  %%    _150
  _151 = bif:'=:=' _150, `2`
  br _151, ^148, ^99

148:
  %% Argument types:
  %%    _53 => {any(), any()}
  %% Aliased:
  %%    _53
  _56 = get_tuple_element _53, `0`

  %% Argument types:
  %%    _53 => {any(), any()}
  %% Aliased:
  %%    _53
  _55 = get_tuple_element _53, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _115 = bif:'=:=' _52, `"append"`
  br _115, ^115, ^104

115:
  %% map_SUITE.erl:1711
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _0 = bif:is_binary _56
  br _0, ^172, ^99

172:
  %% map_SUITE.erl:1711
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _1 = bif:is_binary _55
  br _1, ^106, ^99

106:
  _84 = remove_message

  %% map_SUITE.erl:1712
  %% Argument types:
  %%    
  _5 = bif:self

  %% map_SUITE.erl:1712
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _2 = bif:'+' _54, `1`

  %% Unique:
  %%    _2
  _107 = succeeded:body _2
  br _107, ^107, ^1

107:
  %% map_SUITE.erl:1712
  %% Argument types:
  %%    _56 => bitstring(8)
  %%    _55 => bitstring(8)
  %% Aliased:
  %%    _55, 
  %%    _56
  %% Anno: #{first_fragment_dies => true,unit => 8}
  _3 = bs_create_bin `append`, `[8,{segment,1}]`, _56, `all`, `binary`, `[8,{segment,2}]`, _55, `all`

  %% Aliased:
  %%    _3
  _108 = succeeded:body _3
  br _108, ^111, ^1

111:
  %% map_SUITE.erl:1712
  %% Aliased:
  %%    _2, 
  %%    _3, 
  %%    _49
  _85 = put_map `assoc`, _49, `id`, _2, `res`, _3

  %% Argument types:
  %%    _5 => pid()
  %%    _85 => map()
  %% Aliased:
  %%    _85
  %% Unique:
  %%    _5
  _58 = put_tuple _5, _85

  %% map_SUITE.erl:1712
  %% Aliased:
  %%    _50
  %% Unique:
  %%    _58
  _87 = call (`erlang`:`'!'`/2), _50, _58

  %% Aliased:
  %%    _87
  _113 = succeeded:body _87
  br _113, ^113, ^1

113:
  %% map_SUITE.erl:1713
  _88 = call (`guard_receive_loop`/0)

  %% Aliased:
  %%    _88
  _114 = succeeded:body _88
  br _114, ^114, ^1

114:
  %% Aliased:
  %%    _88
  ret _88

104:
  switch _52, ^99, [
    { `add`, ^147 },
    { `idiv`, ^145 },
    { `imul`, ^144 },
    { `sub`, ^146 }
  ]

146:
  _76 = remove_message

  %% map_SUITE.erl:1718
  %% Argument types:
  %%    
  _13 = bif:self

  %% map_SUITE.erl:1718
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _10 = bif:'+' _54, `1`

  %% Unique:
  %%    _10
  _120 = succeeded:body _10
  br _120, ^120, ^1

120:
  %% map_SUITE.erl:1718
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55, 
  %%    _56
  _11 = bif:'-' _56, _55

  %% Unique:
  %%    _11
  _121 = succeeded:body _11
  br _121, ^124, ^1

124:
  %% map_SUITE.erl:1718
  %% Aliased:
  %%    _10, 
  %%    _11, 
  %%    _49
  _77 = put_map `assoc`, _49, `id`, _10, `res`, _11

  %% Argument types:
  %%    _13 => pid()
  %%    _77 => map()
  %% Aliased:
  %%    _77
  %% Unique:
  %%    _13
  _60 = put_tuple _13, _77

  %% map_SUITE.erl:1718
  %% Aliased:
  %%    _50
  %% Unique:
  %%    _60
  _79 = call (`erlang`:`'!'`/2), _50, _60

  %% Aliased:
  %%    _79
  _126 = succeeded:body _79
  br _126, ^126, ^1

126:
  %% map_SUITE.erl:1719
  _80 = call (`guard_receive_loop`/0)

  %% Aliased:
  %%    _80
  _127 = succeeded:body _80
  br _127, ^127, ^1

127:
  %% Aliased:
  %%    _80
  ret _80

144:
  _66 = remove_message

  %% map_SUITE.erl:1724
  %% Argument types:
  %%    
  _21 = bif:self

  %% map_SUITE.erl:1724
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _18 = bif:'+' _54, `1`

  %% Unique:
  %%    _18
  _136 = succeeded:body _18
  br _136, ^136, ^1

136:
  %% map_SUITE.erl:1724
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55, 
  %%    _56
  _19 = bif:'*' _56, _55

  %% Unique:
  %%    _19
  _137 = succeeded:body _19
  br _137, ^140, ^1

140:
  %% map_SUITE.erl:1724
  %% Aliased:
  %%    _18, 
  %%    _19, 
  %%    _49
  _67 = put_map `assoc`, _49, `id`, _18, `res`, _19

  %% Argument types:
  %%    _21 => pid()
  %%    _67 => map()
  %% Aliased:
  %%    _67
  %% Unique:
  %%    _21
  _62 = put_tuple _21, _67

  %% map_SUITE.erl:1724
  %% Aliased:
  %%    _50
  %% Unique:
  %%    _62
  _69 = call (`erlang`:`'!'`/2), _50, _62

  %% Aliased:
  %%    _69
  _142 = succeeded:body _69
  br _142, ^142, ^1

142:
  %% map_SUITE.erl:1725
  _70 = call (`guard_receive_loop`/0)

  %% Aliased:
  %%    _70
  _143 = succeeded:body _70
  br _143, ^143, ^1

143:
  %% Aliased:
  %%    _70
  ret _70

145:
  _71 = remove_message

  %% map_SUITE.erl:1721
  %% Argument types:
  %%    
  _17 = bif:self

  %% map_SUITE.erl:1721
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _14 = bif:'+' _54, `1`

  %% Unique:
  %%    _14
  _128 = succeeded:body _14
  br _128, ^128, ^1

128:
  %% map_SUITE.erl:1721
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55, 
  %%    _56
  _15 = bif:'div' _56, _55

  %% Unique:
  %%    _15
  _129 = succeeded:body _15
  br _129, ^132, ^1

132:
  %% map_SUITE.erl:1721
  %% Aliased:
  %%    _14, 
  %%    _15, 
  %%    _49
  _72 = put_map `assoc`, _49, `id`, _14, `res`, _15

  %% Argument types:
  %%    _17 => pid()
  %%    _72 => map()
  %% Aliased:
  %%    _72
  %% Unique:
  %%    _17
  _61 = put_tuple _17, _72

  %% map_SUITE.erl:1721
  %% Aliased:
  %%    _50
  %% Unique:
  %%    _61
  _74 = call (`erlang`:`'!'`/2), _50, _61

  %% Aliased:
  %%    _74
  _134 = succeeded:body _74
  br _134, ^134, ^1

134:
  %% map_SUITE.erl:1722
  _75 = call (`guard_receive_loop`/0)

  %% Aliased:
  %%    _75
  _135 = succeeded:body _75
  br _135, ^135, ^1

135:
  %% Aliased:
  %%    _75
  ret _75

147:
  _81 = remove_message

  %% map_SUITE.erl:1715
  %% Argument types:
  %%    
  _9 = bif:self

  %% map_SUITE.erl:1715
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _6 = bif:'+' _54, `1`

  %% Unique:
  %%    _6
  _116 = succeeded:body _6
  br _116, ^116, ^1

116:
  %% map_SUITE.erl:1715
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55, 
  %%    _56
  _7 = bif:'+' _56, _55

  %% Unique:
  %%    _7
  _117 = succeeded:body _7
  br _117, ^117, ^1

117:
  %% map_SUITE.erl:1715
  %% Unique:
  %%    _6, 
  %%    _7
  _8 = put_map `assoc`, `#{}`, `id`, _6, `res`, _7

  %% Argument types:
  %%    _9 => pid()
  %%    _8 => #{'id' | 'res'=>number()}
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _9
  _59 = put_tuple _9, _8

  %% map_SUITE.erl:1715
  %% Aliased:
  %%    _50
  %% Unique:
  %%    _59
  _82 = call (`erlang`:`'!'`/2), _50, _59

  %% Aliased:
  %%    _82
  _118 = succeeded:body _82
  br _118, ^118, ^1

118:
  %% map_SUITE.erl:1716
  _83 = call (`guard_receive_loop`/0)

  %% Aliased:
  %%    _83
  _119 = succeeded:body _83
  br _119, ^119, ^1

119:
  %% Aliased:
  %%    _83
  ret _83

100:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _155 = bif:'=:=' _49, `done`
  br _155, ^154, ^99

154:
  _64 = remove_message

  %% map_SUITE.erl:1727
  %% Argument types:
  %%    
  _22 = bif:self

  %% Argument types:
  %%    _22 => pid()
  %% Unique:
  %%    _22
  _63 = put_tuple _22, `done`

  %% map_SUITE.erl:1727
  %% Aliased:
  %%    _50
  %% Unique:
  %%    _63
  _65 = call (`erlang`:`'!'`/2), _50, _63

  %% Aliased:
  %%    _65
  _153 = succeeded:body _65
  br _153, ^153, ^1

153:
  %% Aliased:
  %%    _65
  ret _65

99:
  _89 = remove_message

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _51 = put_tuple `error`, _49

  %% map_SUITE.erl:1729
  %% Aliased:
  %%    _50
  %% Unique:
  %%    _51
  _90 = call (`erlang`:`'!'`/2), _50, _51

  %% Aliased:
  %%    _90
  _156 = succeeded:body _90
  br _156, ^156, ^1

156:
  %% map_SUITE.erl:1730
  _91 = call (`guard_receive_loop`/0)

  %% Aliased:
  %%    _91
  _157 = succeeded:body _91
  br _157, ^157, ^1

157:
  %% Aliased:
  %%    _91
  ret _91

98:
  _92 = recv_next
  br ^26

168:
  _162 = wait_timeout `infinity`

  %% Unique:
  %%    _162
  _163 = succeeded:body _162
  br _163, ^166, ^1

166:
  br ^26

1:
  _93 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _93
}

%% map_SUITE.erl:1734
%% Counter = 330
%% bs_ensure_opt: true
function `map_SUITE`:`t_list_comprehension`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _203 = bif:is_list _0
  br _203, ^203, ^202

203:
  %% map_SUITE.erl:1735
  %% Result type:
  %%    nonempty_list(#{'k'=>1..3})
  _7 = call (`'-t_list_comprehension/1-lc$^0/1-0-'`/1), `[1,2,3]`

  %% Unique:
  %%    _7
  _204 = succeeded:body _7
  br _204, ^204, ^1

204:
  %% map_SUITE.erl:1735
  %% Unique:
  %%    _7
  _104 = call (`id`/1), _7

  %% Aliased:
  %%    _104
  _205 = succeeded:body _104
  br _205, ^205, ^1

205:
  %% Aliased:
  %%    _104
  _327 = is_nonempty_list _104
  br _327, ^327, ^207

327:
  %% Argument types:
  %%    _104 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _104
  _106 = get_hd _104

  %% Argument types:
  %%    _104 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _104
  _105 = get_tl _104

  %% Argument types:
  %%    
  %% Aliased:
  %%    _106
  _326 = bif:is_map _106
  br _326, ^326, ^207

326:
  %% Argument types:
  %%    _106 => map()
  %% Aliased:
  %%    _106
  _107 = get_map_element _106, `k`

  %% Aliased:
  %%    _107
  _208 = succeeded:guard _107
  br _208, ^208, ^207

208:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _325 = bif:'=:=' _107, `1`
  br _325, ^324, ^207

324:
  %% Aliased:
  %%    _105
  _323 = is_nonempty_list _105
  br _323, ^323, ^207

323:
  %% Argument types:
  %%    _105 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _105
  _109 = get_hd _105

  %% Argument types:
  %%    _105 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _105
  _108 = get_tl _105

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _322 = bif:is_map _109
  br _322, ^322, ^207

322:
  %% Argument types:
  %%    _109 => map()
  %% Aliased:
  %%    _109
  _110 = get_map_element _109, `k`

  %% Aliased:
  %%    _110
  _209 = succeeded:guard _110
  br _209, ^209, ^207

209:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _321 = bif:'=:=' _110, `2`
  br _321, ^320, ^207

320:
  %% Aliased:
  %%    _108
  _319 = is_nonempty_list _108
  br _319, ^319, ^207

319:
  %% Argument types:
  %%    _108 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _108
  _112 = get_hd _108

  %% Argument types:
  %%    _108 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _108
  _111 = get_tl _108

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _318 = bif:is_map _112
  br _318, ^318, ^207

318:
  %% Argument types:
  %%    _112 => map()
  %% Aliased:
  %%    _112
  _113 = get_map_element _112, `k`

  %% Aliased:
  %%    _113
  _210 = succeeded:guard _113
  br _210, ^210, ^207

210:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _317 = bif:'=:=' _113, `3`
  br _317, ^316, ^207

316:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _315 = bif:'=:=' _111, `[]`
  br _315, ^315, ^207

315:
  %% map_SUITE.erl:1736
  %% Result type:
  %%    nonempty_list(#{nonempty_list(97..119) | bitstring(1)=>1..'+inf'})
  _17 = call (`'-t_list_comprehension/1-lc$^1/1-1-'`/1), `[1,2,3]`

  %% Unique:
  %%    _17
  _211 = succeeded:body _17
  br _211, ^211, ^1

211:
  %% map_SUITE.erl:1736
  %% Unique:
  %%    _17
  Ls = call (`id`/1), _17

  %% Aliased:
  %%    Ls
  _212 = succeeded:body Ls
  br _212, ^212, ^1

212:
  %% Aliased:
  %%    Ls
  _313 = is_nonempty_list Ls
  br _313, ^313, ^120

313:
  %% Argument types:
  %%    Ls => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    Ls
  _123 = get_hd Ls

  %% Argument types:
  %%    Ls => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    Ls
  _122 = get_tl Ls

  %% Aliased:
  %%    _122
  _312 = is_nonempty_list _122
  br _312, ^312, ^120

312:
  %% Argument types:
  %%    _122 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _122
  _126 = get_hd _122

  %% Argument types:
  %%    _122 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _122
  _125 = get_tl _122

  %% Aliased:
  %%    _125
  _311 = is_nonempty_list _125
  br _311, ^311, ^120

311:
  %% Argument types:
  %%    _125 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _125
  _128 = get_hd _125

  %% Argument types:
  %%    _125 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _125
  _127 = get_tl _125

  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _310 = bif:'=:=' _127, `[]`
  br _310, ^310, ^120

310:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _128
  _309 = bif:is_map _128
  br _309, ^309, ^120

309:
  %% Argument types:
  %%    _128 => map()
  %% Aliased:
  %%    _128
  _129 = get_map_element _128, `"wat"`

  %% Aliased:
  %%    _129
  _224 = succeeded:guard _129
  br _224, ^224, ^120

224:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _308 = bif:'=:=' _129, `4`
  br _308, ^307, ^120

307:
  %% map_SUITE.erl:1737
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _179 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _179
  _227 = succeeded:guard _179
  br _227, ^304, ^120

304:
  %% Argument types:
  %%    _128 => map()
  %%    _179 => bitstring(1)
  %% Aliased:
  %%    _128, 
  %%    _179
  _131 = get_map_element _128, _179

  %% Aliased:
  %%    _131
  _232 = succeeded:guard _131
  br _232, ^232, ^120

232:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _303 = bif:'=:=' _131, `3`
  br _303, ^302, ^120

302:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _126
  _301 = bif:is_map _126
  br _301, ^301, ^120

301:
  %% Argument types:
  %%    _126 => map()
  %% Aliased:
  %%    _126
  _132 = get_map_element _126, `"wat"`

  %% Aliased:
  %%    _132
  _235 = succeeded:guard _132
  br _235, ^235, ^120

235:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _132
  _300 = bif:'=:=' _132, `3`
  br _300, ^299, ^120

299:
  %% map_SUITE.erl:1737
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _181 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _181
  _238 = succeeded:guard _181
  br _238, ^296, ^120

296:
  %% Argument types:
  %%    _126 => map()
  %%    _181 => bitstring(1)
  %% Aliased:
  %%    _126, 
  %%    _181
  _134 = get_map_element _126, _181

  %% Aliased:
  %%    _134
  _243 = succeeded:guard _134
  br _243, ^243, ^120

243:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _134
  _295 = bif:'=:=' _134, `2`
  br _295, ^294, ^120

294:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _293 = bif:is_map _123
  br _293, ^293, ^120

293:
  %% Argument types:
  %%    _123 => map()
  %% Aliased:
  %%    _123
  _135 = get_map_element _123, `"wat"`

  %% Aliased:
  %%    _135
  _246 = succeeded:guard _135
  br _246, ^246, ^120

246:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _292 = bif:'=:=' _135, `2`
  br _292, ^291, ^120

291:
  %% map_SUITE.erl:1737
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _183 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _183
  _249 = succeeded:guard _183
  br _249, ^288, ^120

288:
  %% Argument types:
  %%    _123 => map()
  %%    _183 => bitstring(1)
  %% Aliased:
  %%    _123, 
  %%    _183
  _137 = get_map_element _123, _183

  %% Aliased:
  %%    _137
  _254 = succeeded:guard _137
  br _254, ^254, ^120

254:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _287 = bif:'=:=' _137, `1`
  br _287, ^286, ^120

286:
  %% map_SUITE.erl:1738
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    Ls
  _25 = call (`'-t_list_comprehension/1-lc$^2/1-2-'`/1), Ls

  %% Unique:
  %%    _25
  _255 = succeeded:body _25
  br _255, ^255, ^1

255:
  %% map_SUITE.erl:1738
  %% Unique:
  %%    _25
  _149 = call (`id`/1), _25

  %% Aliased:
  %%    _149
  _256 = succeeded:body _149
  br _256, ^256, ^1

256:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _149
  _284 = bif:'=:=' _149, `[{1,2},{2,3},{3,4}]`
  br _284, ^284, ^258

284:
  %% map_SUITE.erl:1740
  Ks = call (`lists`:`seq`/2), `97`, `122`

  %% Aliased:
  %%    Ks
  _259 = succeeded:body Ks
  br _259, ^259, ^1

259:
  %% map_SUITE.erl:1741
  %% Result type:
  %%    list(#{nonempty_list(any())=>{any(), any()}})
  %% Aliased:
  %%    Ks
  _38 = call (`'-t_list_comprehension/1-lc$^3/1-3-'`/2), Ks, Ks

  %% Unique:
  %%    _38
  _260 = succeeded:body _38
  br _260, ^260, ^1

260:
  %% Unique:
  %%    _38
  _282 = is_nonempty_list _38
  br _282, ^282, ^262

282:
  %% Argument types:
  %%    _38 => nonempty_list(#{nonempty_list(any())=>{any(), any()}})
  %% Unique:
  %%    _38
  _162 = get_hd _38

  %% Argument types:
  %%    _38 => nonempty_list(#{nonempty_list(any())=>{any(), any()}})
  %% Unique:
  %%    _38
  _161 = get_tl _38

  %% Argument types:
  %%    _162 => #{nonempty_list(any())=>{any(), any()}}
  %% Aliased:
  %%    _162
  _163 = get_map_element _162, `"aa"`

  %% Aliased:
  %%    _163
  _263 = succeeded:guard _163
  br _263, ^263, ^262

263:
  %% Argument types:
  %%    _163 => {any(), any()}
  %% Aliased:
  %%    _163
  _280 = bif:'=:=' _163, `{97,97}`
  br _280, ^280, ^262

280:
  %% Unique:
  %%    _161
  _279 = is_nonempty_list _161
  br _279, ^279, ^262

279:
  %% Argument types:
  %%    _161 => nonempty_list(#{nonempty_list(any())=>{any(), any()}})
  %% Unique:
  %%    _161
  _165 = get_hd _161

  %% Argument types:
  %%    _165 => #{nonempty_list(any())=>{any(), any()}}
  %% Aliased:
  %%    _165
  _166 = get_map_element _165, `"ab"`

  %% Aliased:
  %%    _166
  _264 = succeeded:guard _166
  br _264, ^264, ^262

264:
  %% Argument types:
  %%    _166 => {any(), any()}
  %% Aliased:
  %%    _166
  _277 = bif:'=:=' _166, `{97,98}`
  br _277, ^277, ^262

277:
  %% map_SUITE.erl:1743
  %% Unique:
  %%    _38
  _167 = call (`lists`:`reverse`/1), _38

  %% Aliased:
  %%    _167
  _265 = succeeded:body _167
  br _265, ^275, ^1

275:
  %% Argument types:
  %%    _167 => nonempty_list(#{nonempty_list(any())=>{any(), any()}})
  %% Aliased:
  %%    _167
  _169 = get_hd _167

  %% Argument types:
  %%    _167 => nonempty_list(#{nonempty_list(any())=>{any(), any()}})
  %% Aliased:
  %%    _167
  _168 = get_tl _167

  %% Argument types:
  %%    _169 => #{nonempty_list(any())=>{any(), any()}}
  %% Aliased:
  %%    _169
  _170 = get_map_element _169, `"zz"`

  %% Aliased:
  %%    _170
  _268 = succeeded:guard _170
  br _268, ^268, ^267

268:
  %% Argument types:
  %%    _170 => {any(), any()}
  %% Aliased:
  %%    _170
  _273 = bif:'=:=' _170, `{122,122}`
  br _273, ^273, ^267

273:
  %% Aliased:
  %%    _168
  _272 = is_nonempty_list _168
  br _272, ^272, ^267

272:
  %% Argument types:
  %%    _168 => nonempty_list(#{nonempty_list(any())=>{any(), any()}})
  %% Aliased:
  %%    _168
  _172 = get_hd _168

  %% Argument types:
  %%    _172 => #{nonempty_list(any())=>{any(), any()}}
  %% Aliased:
  %%    _172
  _173 = get_map_element _172, `"zy"`

  %% Aliased:
  %%    _173
  _269 = succeeded:guard _173
  br _269, ^269, ^267

269:
  %% Argument types:
  %%    _173 => {any(), any()}
  %% Aliased:
  %%    _173
  _270 = bif:'=:=' _173, `{122,121}`
  br _270, ^270, ^267

270:
  %% Result type:
  %%    'ok'
  ret `ok`

267:
  %% map_SUITE.erl:1743
  %% Aliased:
  %%    _167
  _194 = match_fail `badmatch`, _167

  %% Unique:
  %%    _194
  _276 = succeeded:body _194
  br ^1

262:
  %% map_SUITE.erl:1742
  %% Unique:
  %%    _38
  _195 = match_fail `badmatch`, _38

  %% Unique:
  %%    _195
  _283 = succeeded:body _195
  br ^1

258:
  %% map_SUITE.erl:1738
  %% Aliased:
  %%    _149
  _196 = match_fail `badmatch`, _149

  %% Unique:
  %%    _196
  _285 = succeeded:body _196
  br ^1

120:
  %% map_SUITE.erl:1737
  %% Aliased:
  %%    Ls
  _197 = match_fail `badmatch`, Ls

  %% Unique:
  %%    _197
  _314 = succeeded:body _197
  br ^1

207:
  %% map_SUITE.erl:1735
  %% Aliased:
  %%    _104
  _198 = match_fail `badmatch`, _104

  %% Unique:
  %%    _198
  _328 = succeeded:body _198
  br ^1

202:
  %% map_SUITE.erl:1734
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_list_comprehension/1-',1}}
  _199 = match_fail `function_clause`, _0

  %% Unique:
  %%    _199
  _329 = succeeded:body _199
  br ^1

1:
  _200 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _200
}

%% map_SUITE.erl:1746
%% Counter = 253
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_fun`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _117 = bif:is_list _0
  br _117, ^234, ^116

234:
  %% map_SUITE.erl:1760
  %% Result type:
  %%    {'l', any()} | {'t', any()} | {'v', any()}
  %% Argument types:
  %%    (`'-t_guard_fun/1-fun-0-'`/1) => fun((_) -> {'l', any()} | {'t', any()} | {'v', any()})
  _61 = call (`'-t_guard_fun/1-fun-0-'`/1), `#{s => v,v => <<"hi">>}`

  %% Unique:
  %%    _61
  _118 = succeeded:body _61
  br _118, ^118, ^1

118:
  %% Argument types:
  %%    _61 => {'l', any()} | {'t', any()} | {'v', any()}
  %% Unique:
  %%    _61
  _228 = is_tagged_tuple _61, `2`, `v`
  br _228, ^225, ^120

225:
  %% Argument types:
  %%    _61 => {'v', any()}
  %% Unique:
  %%    _61
  _62 = get_tuple_element _61, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _121 = bif:'=:=' _62, `<<"hi">>`
  br _121, ^121, ^120

121:
  %% map_SUITE.erl:1761
  %% Result type:
  %%    {'l', any()} | {'t', any()} | {'v', any()}
  %% Argument types:
  %%    (`'-t_guard_fun/1-fun-0-'`/1) => fun((_) -> {'l', any()} | {'t', any()} | {'v', any()})
  _64 = call (`'-t_guard_fun/1-fun-0-'`/1), `#{s => t,v => {<<"hi">>,<<"hi">>}}`

  %% Unique:
  %%    _64
  _122 = succeeded:body _64
  br _122, ^122, ^1

122:
  %% Argument types:
  %%    _64 => {'l', any()} | {'t', any()} | {'v', any()}
  %% Unique:
  %%    _64
  _221 = is_tagged_tuple _64, `2`, `t`
  br _221, ^218, ^124

218:
  %% Argument types:
  %%    _64 => {'t', any()}
  %% Unique:
  %%    _64
  _65 = get_tuple_element _64, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _125 = bif:'=:=' _65, `<<"hi">>`
  br _125, ^125, ^124

125:
  %% map_SUITE.erl:1762
  %% Result type:
  %%    {'l', any()} | {'t', any()} | {'v', any()}
  %% Argument types:
  %%    (`'-t_guard_fun/1-fun-0-'`/1) => fun((_) -> {'l', any()} | {'t', any()} | {'v', any()})
  _67 = call (`'-t_guard_fun/1-fun-0-'`/1), `#{s => l,v => [<<"hi">>,<<"hi">>]}`

  %% Unique:
  %%    _67
  _126 = succeeded:body _67
  br _126, ^126, ^1

126:
  %% Argument types:
  %%    _67 => {'l', any()} | {'t', any()} | {'v', any()}
  %% Unique:
  %%    _67
  _214 = is_tagged_tuple _67, `2`, `l`
  br _214, ^211, ^128

211:
  %% Argument types:
  %%    _67 => {'l', any()}
  %% Unique:
  %%    _67
  _68 = get_tuple_element _67, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _129 = bif:'=:=' _68, `<<"hi">>`
  br _129, ^129, ^128

129:
  %% map_SUITE.erl:1764
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-t_guard_fun/1-fun-1-'`/1) => fun((_) -> {any(), any()})
  _70 = call (`'-t_guard_fun/1-fun-1-'`/1), `#{s => v,v => <<"hi">>}`

  %% Unique:
  %%    _70
  _130 = succeeded:body _70
  br _130, ^130, ^1

130:
  %% Argument types:
  %%    _70 => {any(), any()}
  %% Unique:
  %%    _70
  _207 = is_tagged_tuple _70, `2`, `v`
  br _207, ^204, ^132

204:
  %% Argument types:
  %%    _70 => {'v', any()}
  %% Unique:
  %%    _70
  _71 = get_tuple_element _70, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _133 = bif:'=:=' _71, `<<"hi">>`
  br _133, ^133, ^132

133:
  %% map_SUITE.erl:1765
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-t_guard_fun/1-fun-1-'`/1) => fun((_) -> {any(), any()})
  _73 = call (`'-t_guard_fun/1-fun-1-'`/1), `#{s => t,v => {<<"hi">>,<<"hi">>}}`

  %% Unique:
  %%    _73
  _134 = succeeded:body _73
  br _134, ^134, ^1

134:
  %% Argument types:
  %%    _73 => {any(), any()}
  %% Unique:
  %%    _73
  _200 = is_tagged_tuple _73, `2`, `t`
  br _200, ^197, ^136

197:
  %% Argument types:
  %%    _73 => {'t', any()}
  %% Unique:
  %%    _73
  _74 = get_tuple_element _73, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _137 = bif:'=:=' _74, `<<"hi">>`
  br _137, ^137, ^136

137:
  %% map_SUITE.erl:1766
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-t_guard_fun/1-fun-1-'`/1) => fun((_) -> {any(), any()})
  _76 = call (`'-t_guard_fun/1-fun-1-'`/1), `#{s => l,v => [<<"hi">>,<<"hi">>]}`

  %% Unique:
  %%    _76
  _138 = succeeded:body _76
  br _138, ^138, ^1

138:
  %% Argument types:
  %%    _76 => {any(), any()}
  %% Unique:
  %%    _76
  _193 = is_tagged_tuple _76, `2`, `l`
  br _193, ^190, ^140

190:
  %% Argument types:
  %%    _76 => {'l', any()}
  %% Unique:
  %%    _76
  _77 = get_tuple_element _76, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _141 = bif:'=:=' _77, `<<"hi">>`
  br _141, ^251, ^140

251:
  br ^252

252:
  _145 = new_try_tag `'catch'`
  br _145, ^143, ^144

143:
  %% map_SUITE.erl:1769
  %% Result type:
  %%    {'l', any()} | {'t', any()} | {'v', any()}
  %% Argument types:
  %%    (`'-t_guard_fun/1-fun-0-'`/1) => fun((_) -> {'l', any()} | {'t', any()} | {'v', any()})
  _105 = call (`'-t_guard_fun/1-fun-0-'`/1), `#{s => none,v => none}`

  %% Unique:
  %%    _105
  _147 = succeeded:body _105
  br _147, ^147, ^144

147:
  br ^142

144:
  %% Unique:
  %%    _145
  _150 = landingpad `'catch'`, _145

  %% Aliased:
  %%    _150
  _148 = extract _150, `0`
  br ^142

142:
  _151 = phi { _148, ^144 }, { _105, ^147 }

  %% Aliased:
  %%    _151
  %% Unique:
  %%    _145
  _20 = catch_end _145, _151

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _186 = is_tagged_tuple _20, `2`, `'EXIT'`
  br _186, ^183, ^153

183:
  %% Argument types:
  %%    _20 => {''EXIT'', any()}
  %% Aliased:
  %%    _20
  _80 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _180 = bif:is_tuple _80
  br _180, ^180, ^153

180:
  %% Argument types:
  %%    _80 => {...}
  %% Aliased:
  %%    _80
  _181 = bif:tuple_size _80

  %% Argument types:
  %%    _181 => 0..16777215
  %% Unique:
  %%    _181
  _182 = bif:'=:=' _181, `2`
  br _182, ^179, ^153

179:
  %% Argument types:
  %%    _80 => {any(), any()}
  %% Aliased:
  %%    _80
  _83 = get_tuple_element _80, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _158 = bif:is_tuple _83
  br _158, ^158, ^154

158:
  %% Argument types:
  %%    _83 => {...}
  %% Aliased:
  %%    _83
  _160 = is_tagged_tuple _83, `2`, `case_clause`
  br _160, ^155, ^153

155:
  %% Result type:
  %%    {'comment', 'inlined'}
  ret `{comment,inlined}`

154:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _178 = bif:'=:=' _83, `function_clause`
  br _178, ^177, ^153

177:
  %% Argument types:
  %%    _80 => {'function_clause', any()}
  %% Aliased:
  %%    _80
  _82 = get_tuple_element _80, `1`

  %% Aliased:
  %%    _82
  _176 = is_nonempty_list _82
  br _176, ^176, ^153

176:
  %% Argument types:
  %%    _82 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _82
  _87 = get_hd _82

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _173 = is_tagged_tuple _87, `4`, `map_SUITE`
  br _173, ^170, ^153

170:
  %% Argument types:
  %%    _87 => {'map_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _87
  _89 = get_tuple_element _87, `2`

  %% Aliased:
  %%    _89
  _169 = is_nonempty_list _89
  br _169, ^169, ^153

169:
  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _93 = get_hd _89

  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _92 = get_tl _89

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _168 = bif:is_map _93
  br _168, ^168, ^153

168:
  %% Argument types:
  %%    _93 => map()
  %% Aliased:
  %%    _93
  _95 = get_map_element _93, `s`

  %% Aliased:
  %%    _95
  _161 = succeeded:guard _95
  br _161, ^161, ^153

161:
  %% Argument types:
  %%    _93 => map()
  %% Aliased:
  %%    _93
  _94 = get_map_element _93, `v`

  %% Aliased:
  %%    _94
  _162 = succeeded:guard _94
  br _162, ^162, ^153

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _167 = bif:'=:=' _95, `none`
  br _167, ^166, ^153

166:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _165 = bif:'=:=' _94, `none`
  br _165, ^164, ^153

164:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _163 = bif:'=:=' _92, `[]`
  br _163, ^163, ^153

163:
  %% Result type:
  %%    'ok'
  ret `ok`

153:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _79 = put_tuple `no_match`, _20

  %% map_SUITE.erl:1773
  %% Unique:
  %%    _79
  _106 = call (`ct`:`fail`/1), _79

  %% Aliased:
  %%    _106
  _189 = succeeded:body _106
  br _189, ^189, ^1

189:
  %% Aliased:
  %%    _106
  ret _106

140:
  %% map_SUITE.erl:1766
  %% Unique:
  %%    _76
  _107 = match_fail `badmatch`, _76

  %% Unique:
  %%    _107
  _196 = succeeded:body _107
  br ^1

136:
  %% map_SUITE.erl:1765
  %% Unique:
  %%    _73
  _108 = match_fail `badmatch`, _73

  %% Unique:
  %%    _108
  _203 = succeeded:body _108
  br ^1

132:
  %% map_SUITE.erl:1764
  %% Unique:
  %%    _70
  _109 = match_fail `badmatch`, _70

  %% Unique:
  %%    _109
  _210 = succeeded:body _109
  br ^1

128:
  %% map_SUITE.erl:1762
  %% Unique:
  %%    _67
  _110 = match_fail `badmatch`, _67

  %% Unique:
  %%    _110
  _217 = succeeded:body _110
  br ^1

124:
  %% map_SUITE.erl:1761
  %% Unique:
  %%    _64
  _111 = match_fail `badmatch`, _64

  %% Unique:
  %%    _111
  _224 = succeeded:body _111
  br ^1

120:
  %% map_SUITE.erl:1760
  %% Unique:
  %%    _61
  _112 = match_fail `badmatch`, _61

  %% Unique:
  %%    _112
  _231 = succeeded:body _112
  br ^1

116:
  %% map_SUITE.erl:1746
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_fun/1-',1}}
  _113 = match_fail `function_clause`, _0

  %% Unique:
  %%    _113
  _232 = succeeded:body _113
  br ^1

1:
  _114 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _114
}

%% map_SUITE.erl:1777
%% Counter = 351
%% bs_ensure_opt: true
function `map_SUITE`:`t_map_sort_literals`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _135 = bif:is_list _0
  br _135, ^135, ^134

135:
  %% map_SUITE.erl:1781
  _1 = call (`id`/1), `#{a => 1,b => 1,c => 1}`

  %% Aliased:
  %%    _1
  _136 = succeeded:body _1
  br _136, ^136, ^1

136:
  %% map_SUITE.erl:1781
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _55 = bif:'<' `#{a => 1,b => 2}`, _1
  br _55, ^325, ^138

325:
  %% map_SUITE.erl:1782
  _3 = call (`id`/1), `#{a => 1,b => 1,c => 1}`

  %% Aliased:
  %%    _3
  _139 = succeeded:body _3
  br _139, ^139, ^1

139:
  %% map_SUITE.erl:1782
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _56 = bif:'<' `#{a => 1,b => 1}`, _3
  br _56, ^322, ^141

322:
  %% map_SUITE.erl:1783
  _5 = call (`id`/1), `#{a => 1,c => 1}`

  %% Aliased:
  %%    _5
  _142 = succeeded:body _5
  br _142, ^142, ^1

142:
  %% map_SUITE.erl:1783
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _57 = bif:'<' `#{a => 1,b => 1,c => 1}`, _5
  br _57, ^144, ^319

144:
  %% map_SUITE.erl:1783
  _128 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _128
  _321 = succeeded:body _128
  br ^1

319:
  %% map_SUITE.erl:1786
  _8 = call (`id`/1), `#{a => 1}`

  %% Aliased:
  %%    _8
  _145 = succeeded:body _8
  br _145, ^145, ^1

145:
  %% map_SUITE.erl:1786
  _7 = call (`id`/1), `#{b => 1}`

  %% Aliased:
  %%    _7
  _146 = succeeded:body _7
  br _146, ^146, ^1

146:
  %% map_SUITE.erl:1786
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7, 
  %%    _8
  _58 = bif:'<' _8, _7
  br _58, ^316, ^148

316:
  %% map_SUITE.erl:1787
  _11 = call (`id`/1), `#{b => 1}`

  %% Aliased:
  %%    _11
  _149 = succeeded:body _11
  br _149, ^149, ^1

149:
  %% map_SUITE.erl:1787
  _10 = call (`id`/1), `#{a => 1}`

  %% Aliased:
  %%    _10
  _150 = succeeded:body _10
  br _150, ^150, ^1

150:
  %% map_SUITE.erl:1787
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10, 
  %%    _11
  _59 = bif:'<' _11, _10
  br _59, ^152, ^313

152:
  %% map_SUITE.erl:1787
  _126 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _126
  _315 = succeeded:body _126
  br ^1

313:
  %% map_SUITE.erl:1788
  _14 = call (`id`/1), `#{a => 1,b => 1,c => 1}`

  %% Aliased:
  %%    _14
  _153 = succeeded:body _14
  br _153, ^153, ^1

153:
  %% map_SUITE.erl:1788
  _13 = call (`id`/1), `#{b => 1,c => 1,d => 1}`

  %% Aliased:
  %%    _13
  _154 = succeeded:body _13
  br _154, ^154, ^1

154:
  %% map_SUITE.erl:1788
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13, 
  %%    _14
  _60 = bif:'<' _14, _13
  br _60, ^310, ^156

310:
  %% map_SUITE.erl:1789
  _17 = call (`id`/1), `#{b => 1,c => 1,d => 1}`

  %% Aliased:
  %%    _17
  _157 = succeeded:body _17
  br _157, ^157, ^1

157:
  %% map_SUITE.erl:1789
  _16 = call (`id`/1), `#{a => 1,b => 1,c => 1}`

  %% Aliased:
  %%    _16
  _158 = succeeded:body _16
  br _158, ^158, ^1

158:
  %% map_SUITE.erl:1789
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16, 
  %%    _17
  _61 = bif:'>' _17, _16
  br _61, ^307, ^160

307:
  %% map_SUITE.erl:1790
  _20 = call (`id`/1), `#{a => 1,b => 1,c => 1}`

  %% Aliased:
  %%    _20
  _161 = succeeded:body _20
  br _161, ^161, ^1

161:
  %% map_SUITE.erl:1790
  _19 = call (`id`/1), `#{b => 1,c => 1,d => 1}`

  %% Aliased:
  %%    _19
  _162 = succeeded:body _19
  br _162, ^162, ^1

162:
  %% map_SUITE.erl:1790
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19, 
  %%    _20
  _62 = bif:'<' _20, _19
  br _62, ^304, ^164

304:
  %% map_SUITE.erl:1791
  _23 = call (`id`/1), `#{"a" => 1}`

  %% Aliased:
  %%    _23
  _165 = succeeded:body _23
  br _165, ^165, ^1

165:
  %% map_SUITE.erl:1791
  _22 = call (`id`/1), `#{<<"a">> => 1}`

  %% Aliased:
  %%    _22
  _166 = succeeded:body _22
  br _166, ^166, ^1

166:
  %% map_SUITE.erl:1791
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22, 
  %%    _23
  _63 = bif:'<' _23, _22
  br _63, ^301, ^168

301:
  %% map_SUITE.erl:1792
  _26 = call (`id`/1), `#{<<"a">> => 1}`

  %% Aliased:
  %%    _26
  _169 = succeeded:body _26
  br _169, ^169, ^1

169:
  %% map_SUITE.erl:1792
  _25 = call (`id`/1), `#{"a" => 1}`

  %% Aliased:
  %%    _25
  _170 = succeeded:body _25
  br _170, ^170, ^1

170:
  %% map_SUITE.erl:1792
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25, 
  %%    _26
  _64 = bif:'<' _26, _25
  br _64, ^172, ^298

172:
  %% map_SUITE.erl:1792
  _121 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _121
  _300 = succeeded:body _121
  br ^1

298:
  %% map_SUITE.erl:1793
  _29 = call (`id`/1), `#{1 => 1}`

  %% Aliased:
  %%    _29
  _173 = succeeded:body _29
  br _173, ^173, ^1

173:
  %% map_SUITE.erl:1793
  _28 = call (`id`/1), `#{1.0 => 1}`

  %% Aliased:
  %%    _28
  _174 = succeeded:body _28
  br _174, ^174, ^1

174:
  %% map_SUITE.erl:1793
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28, 
  %%    _29
  _65 = bif:'<' _29, _28
  br _65, ^295, ^176

295:
  %% map_SUITE.erl:1794
  _32 = call (`id`/1), `#{1.0 => 1}`

  %% Aliased:
  %%    _32
  _177 = succeeded:body _32
  br _177, ^177, ^1

177:
  %% map_SUITE.erl:1794
  _31 = call (`id`/1), `#{1 => 1}`

  %% Aliased:
  %%    _31
  _178 = succeeded:body _31
  br _178, ^178, ^1

178:
  %% map_SUITE.erl:1794
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31, 
  %%    _32
  _66 = bif:'<' _32, _31
  br _66, ^180, ^292

180:
  %% map_SUITE.erl:1794
  _119 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _119
  _294 = succeeded:body _119
  br ^1

292:
  %% map_SUITE.erl:1797
  _35 = call (`id`/1), `#{a => 1}`

  %% Aliased:
  %%    _35
  _181 = succeeded:body _35
  br _181, ^181, ^1

181:
  %% map_SUITE.erl:1797
  _34 = call (`id`/1), `#{a => 2}`

  %% Aliased:
  %%    _34
  _182 = succeeded:body _34
  br _182, ^182, ^1

182:
  %% map_SUITE.erl:1797
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34, 
  %%    _35
  _67 = bif:'<' _35, _34
  br _67, ^289, ^184

289:
  %% map_SUITE.erl:1798
  _38 = call (`id`/1), `#{a => 2}`

  %% Aliased:
  %%    _38
  _185 = succeeded:body _38
  br _185, ^185, ^1

185:
  %% map_SUITE.erl:1798
  _37 = call (`id`/1), `#{a => 1}`

  %% Aliased:
  %%    _37
  _186 = succeeded:body _37
  br _186, ^186, ^1

186:
  %% map_SUITE.erl:1798
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37, 
  %%    _38
  _68 = bif:'<' _38, _37
  br _68, ^188, ^286

188:
  %% map_SUITE.erl:1798
  _117 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _117
  _288 = succeeded:body _117
  br ^1

286:
  %% map_SUITE.erl:1799
  _41 = call (`id`/1), `#{a => 2,b => 1}`

  %% Aliased:
  %%    _41
  _189 = succeeded:body _41
  br _189, ^189, ^1

189:
  %% map_SUITE.erl:1799
  _40 = call (`id`/1), `#{a => 1,b => 3}`

  %% Aliased:
  %%    _40
  _190 = succeeded:body _40
  br _190, ^190, ^1

190:
  %% map_SUITE.erl:1799
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40, 
  %%    _41
  _69 = bif:'<' _41, _40
  br _69, ^192, ^283

192:
  %% map_SUITE.erl:1799
  _116 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _116
  _285 = succeeded:body _116
  br ^1

283:
  %% map_SUITE.erl:1800
  _44 = call (`id`/1), `#{a => 1,b => 1}`

  %% Aliased:
  %%    _44
  _193 = succeeded:body _44
  br _193, ^193, ^1

193:
  %% map_SUITE.erl:1800
  _43 = call (`id`/1), `#{a => 1,b => 3}`

  %% Aliased:
  %%    _43
  _194 = succeeded:body _43
  br _194, ^194, ^1

194:
  %% map_SUITE.erl:1800
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43, 
  %%    _44
  _70 = bif:'<' _44, _43
  br _70, ^280, ^196

280:
  %% map_SUITE.erl:1802
  _47 = call (`id`/1), `#{b => 134,"a" => "hi"}`

  %% Aliased:
  %%    _47
  _197 = succeeded:body _47
  br _197, ^197, ^1

197:
  %% map_SUITE.erl:1802
  _46 = call (`id`/1), `#{b => 134,"a" => "hi"}`

  %% Aliased:
  %%    _46
  _198 = succeeded:body _46
  br _198, ^198, ^1

198:
  %% map_SUITE.erl:1802
  %% Argument types:
  %%    
  %% Aliased:
  %%    _46, 
  %%    _47
  _71 = bif:'==' _47, _46
  br _71, ^277, ^200

277:
  %% map_SUITE.erl:1807
  _72 = call (`lists`:`sort`/1), `[#{"a" => ok},#{a => ok},#{1 => ok},#{<<"a">> => ok}]`

  %% Aliased:
  %%    _72
  _201 = succeeded:body _72
  br _201, ^275, ^1

275:
  %% Argument types:
  %%    _72 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _72
  _74 = get_hd _72

  %% Argument types:
  %%    _72 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _72
  _73 = get_tl _72

  %% Argument types:
  %%    _74 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'}
  %% Aliased:
  %%    _74
  _204 = has_map_field _74, `1`
  br _204, ^272, ^203

272:
  %% Aliased:
  %%    _73
  _271 = is_nonempty_list _73
  br _271, ^271, ^203

271:
  %% Argument types:
  %%    _73 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _73
  _77 = get_hd _73

  %% Argument types:
  %%    _73 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _73
  _76 = get_tl _73

  %% Argument types:
  %%    _77 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'}
  %% Aliased:
  %%    _77
  _205 = has_map_field _77, `a`
  br _205, ^268, ^203

268:
  %% Aliased:
  %%    _76
  _267 = is_nonempty_list _76
  br _267, ^267, ^203

267:
  %% Argument types:
  %%    _76 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _76
  _80 = get_hd _76

  %% Argument types:
  %%    _76 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _76
  _79 = get_tl _76

  %% Argument types:
  %%    _80 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'}
  %% Aliased:
  %%    _80
  _206 = has_map_field _80, `"a"`
  br _206, ^264, ^203

264:
  %% Aliased:
  %%    _79
  _263 = is_nonempty_list _79
  br _263, ^263, ^203

263:
  %% Argument types:
  %%    _79 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _79
  _83 = get_hd _79

  %% Argument types:
  %%    _79 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _79
  _82 = get_tl _79

  %% Argument types:
  %%    _83 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'}
  %% Aliased:
  %%    _83
  _207 = has_map_field _83, `<<"a">>`
  br _207, ^260, ^203

260:
  %% Argument types:
  %%    _82 => list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>'ok'})
  %% Aliased:
  %%    _82
  _259 = bif:'=:=' _82, `[]`
  br _259, ^259, ^203

259:
  %% map_SUITE.erl:1808
  _85 = call (`lists`:`sort`/1), `[#{"a" => 1},#{a => 2},#{1 => 3},#{<<"a">> => 4}]`

  %% Aliased:
  %%    _85
  _208 = succeeded:body _85
  br _208, ^257, ^1

257:
  %% Argument types:
  %%    _85 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _85
  _87 = get_hd _85

  %% Argument types:
  %%    _85 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _85
  _86 = get_tl _85

  %% Argument types:
  %%    _87 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4}
  %% Aliased:
  %%    _87
  _88 = get_map_element _87, `1`

  %% Aliased:
  %%    _88
  _211 = succeeded:guard _88
  br _211, ^211, ^210

211:
  %% Argument types:
  %%    _88 => 1..4
  %% Unique:
  %%    _88
  _255 = bif:'=:=' _88, `3`
  br _255, ^254, ^210

254:
  %% Aliased:
  %%    _86
  _253 = is_nonempty_list _86
  br _253, ^253, ^210

253:
  %% Argument types:
  %%    _86 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _86
  _90 = get_hd _86

  %% Argument types:
  %%    _86 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _86
  _89 = get_tl _86

  %% Argument types:
  %%    _90 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4}
  %% Aliased:
  %%    _90
  _91 = get_map_element _90, `a`

  %% Aliased:
  %%    _91
  _212 = succeeded:guard _91
  br _212, ^212, ^210

212:
  %% Argument types:
  %%    _91 => 1..4
  %% Unique:
  %%    _91
  _251 = bif:'=:=' _91, `2`
  br _251, ^250, ^210

250:
  %% Aliased:
  %%    _89
  _249 = is_nonempty_list _89
  br _249, ^249, ^210

249:
  %% Argument types:
  %%    _89 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _89
  _93 = get_hd _89

  %% Argument types:
  %%    _89 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _89
  _92 = get_tl _89

  %% Argument types:
  %%    _93 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4}
  %% Aliased:
  %%    _93
  _94 = get_map_element _93, `"a"`

  %% Aliased:
  %%    _94
  _213 = succeeded:guard _94
  br _213, ^213, ^210

213:
  %% Argument types:
  %%    _94 => 1..4
  %% Unique:
  %%    _94
  _247 = bif:'=:=' _94, `1`
  br _247, ^246, ^210

246:
  %% Aliased:
  %%    _92
  _245 = is_nonempty_list _92
  br _245, ^245, ^210

245:
  %% Argument types:
  %%    _92 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _92
  _96 = get_hd _92

  %% Argument types:
  %%    _92 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _92
  _95 = get_tl _92

  %% Argument types:
  %%    _96 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4}
  %% Aliased:
  %%    _96
  _97 = get_map_element _96, `<<"a">>`

  %% Aliased:
  %%    _97
  _214 = succeeded:guard _97
  br _214, ^214, ^210

214:
  %% Argument types:
  %%    _97 => 1..4
  %% Unique:
  %%    _97
  _243 = bif:'=:=' _97, `4`
  br _243, ^242, ^210

242:
  %% Argument types:
  %%    _95 => list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _95
  _241 = bif:'=:=' _95, `[]`
  br _241, ^241, ^210

241:
  %% map_SUITE.erl:1809
  _52 = call (`lists`:`reverse`/1), `[#{"a" => 1},#{a => 2},#{1 => 3},#{<<"a">> => 4}]`

  %% Aliased:
  %%    _52
  _215 = succeeded:body _52
  br _215, ^215, ^1

215:
  %% map_SUITE.erl:1809
  %% Aliased:
  %%    _52
  _98 = call (`lists`:`sort`/1), _52

  %% Aliased:
  %%    _98
  _216 = succeeded:body _98
  br _216, ^239, ^1

239:
  %% Argument types:
  %%    _98 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _98
  _100 = get_hd _98

  %% Argument types:
  %%    _98 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _98
  _99 = get_tl _98

  %% Argument types:
  %%    _100 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4}
  %% Aliased:
  %%    _100
  _101 = get_map_element _100, `1`

  %% Aliased:
  %%    _101
  _219 = succeeded:guard _101
  br _219, ^219, ^218

219:
  %% Argument types:
  %%    _101 => 1..4
  %% Unique:
  %%    _101
  _237 = bif:'=:=' _101, `3`
  br _237, ^236, ^218

236:
  %% Aliased:
  %%    _99
  _235 = is_nonempty_list _99
  br _235, ^235, ^218

235:
  %% Argument types:
  %%    _99 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _99
  _103 = get_hd _99

  %% Argument types:
  %%    _99 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _99
  _102 = get_tl _99

  %% Argument types:
  %%    _103 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4}
  %% Aliased:
  %%    _103
  _104 = get_map_element _103, `a`

  %% Aliased:
  %%    _104
  _220 = succeeded:guard _104
  br _220, ^220, ^218

220:
  %% Argument types:
  %%    _104 => 1..4
  %% Unique:
  %%    _104
  _233 = bif:'=:=' _104, `2`
  br _233, ^232, ^218

232:
  %% Aliased:
  %%    _102
  _231 = is_nonempty_list _102
  br _231, ^231, ^218

231:
  %% Argument types:
  %%    _102 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _102
  _106 = get_hd _102

  %% Argument types:
  %%    _102 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _102
  _105 = get_tl _102

  %% Argument types:
  %%    _106 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4}
  %% Aliased:
  %%    _106
  _107 = get_map_element _106, `"a"`

  %% Aliased:
  %%    _107
  _221 = succeeded:guard _107
  br _221, ^221, ^218

221:
  %% Argument types:
  %%    _107 => 1..4
  %% Unique:
  %%    _107
  _229 = bif:'=:=' _107, `1`
  br _229, ^228, ^218

228:
  %% Aliased:
  %%    _105
  _227 = is_nonempty_list _105
  br _227, ^227, ^218

227:
  %% Argument types:
  %%    _105 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _105
  _109 = get_hd _105

  %% Argument types:
  %%    _105 => nonempty_list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _105
  _108 = get_tl _105

  %% Argument types:
  %%    _109 => #{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4}
  %% Aliased:
  %%    _109
  _110 = get_map_element _109, `<<"a">>`

  %% Aliased:
  %%    _110
  _222 = succeeded:guard _110
  br _222, ^222, ^218

222:
  %% Argument types:
  %%    _110 => 1..4
  %% Unique:
  %%    _110
  _225 = bif:'=:=' _110, `4`
  br _225, ^224, ^218

224:
  %% Argument types:
  %%    _108 => list(#{'a' | nonempty_list(97) | 1 | bitstring(8)=>1..4})
  %% Aliased:
  %%    _108
  _223 = bif:'=:=' _108, `[]`
  br _223, ^223, ^218

223:
  %% Result type:
  %%    'ok'
  ret `ok`

218:
  %% map_SUITE.erl:1809
  %% Aliased:
  %%    _98
  _111 = match_fail `badmatch`, _98

  %% Unique:
  %%    _111
  _240 = succeeded:body _111
  br ^1

210:
  %% map_SUITE.erl:1808
  %% Aliased:
  %%    _85
  _112 = match_fail `badmatch`, _85

  %% Unique:
  %%    _112
  _258 = succeeded:body _112
  br ^1

203:
  %% map_SUITE.erl:1807
  %% Aliased:
  %%    _72
  _113 = match_fail `badmatch`, _72

  %% Unique:
  %%    _113
  _276 = succeeded:body _113
  br ^1

200:
  %% map_SUITE.erl:1802
  _114 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _114
  _279 = succeeded:body _114
  br ^1

196:
  %% map_SUITE.erl:1800
  _115 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _115
  _282 = succeeded:body _115
  br ^1

184:
  %% map_SUITE.erl:1797
  _118 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _118
  _291 = succeeded:body _118
  br ^1

176:
  %% map_SUITE.erl:1793
  _120 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _120
  _297 = succeeded:body _120
  br ^1

168:
  %% map_SUITE.erl:1791
  _122 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _122
  _303 = succeeded:body _122
  br ^1

164:
  %% map_SUITE.erl:1790
  _123 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _123
  _306 = succeeded:body _123
  br ^1

160:
  %% map_SUITE.erl:1789
  _124 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _124
  _309 = succeeded:body _124
  br ^1

156:
  %% map_SUITE.erl:1788
  _125 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _125
  _312 = succeeded:body _125
  br ^1

148:
  %% map_SUITE.erl:1786
  _127 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _127
  _318 = succeeded:body _127
  br ^1

141:
  %% map_SUITE.erl:1782
  _129 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _129
  _324 = succeeded:body _129
  br ^1

138:
  %% map_SUITE.erl:1781
  _130 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _130
  _327 = succeeded:body _130
  br ^1

134:
  %% map_SUITE.erl:1777
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_map_sort_literals/1-',1}}
  _131 = match_fail `function_clause`, _0

  %% Unique:
  %%    _131
  _328 = succeeded:body _131
  br ^1

1:
  _132 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _132
}

%% map_SUITE.erl:1813
%% Counter = 60
%% bs_ensure_opt: true
function `map_SUITE`:`t_warn_pair_key_overloaded`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _32 = bif:is_list _0
  br _32, ^32, ^31

32:
  %% map_SUITE.erl:1814
  _20 = call (`id`/1), `#{"hi1" => 42}`

  %% Aliased:
  %%    _20
  _33 = succeeded:body _20
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _55 = bif:is_map _20
  br _55, ^55, ^35

55:
  %% Argument types:
  %%    _20 => map()
  %% Aliased:
  %%    _20
  _21 = get_map_element _20, `"hi1"`

  %% Aliased:
  %%    _21
  _36 = succeeded:guard _21
  br _36, ^36, ^35

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _54 = bif:'=:=' _21, `42`
  br _54, ^53, ^35

53:
  %% map_SUITE.erl:1821
  %% Argument types:
  %%    
  _6 = bif:self

  %% map_SUITE.erl:1821
  %% Unique:
  %%    _6
  _7 = call (`erlang`:`pid_to_list`/1), _6

  %% Aliased:
  %%    _7
  _37 = succeeded:body _7
  br _37, ^37, ^1

37:
  %% map_SUITE.erl:1826
  _12 = call (`erlang`:`phash`/2), `{1,2}`, `33`

  %% Aliased:
  %%    _12
  _38 = succeeded:body _12
  br _38, ^38, ^1

38:
  %% map_SUITE.erl:1827
  _13 = call (`erlang`:`phash2`/2), `{1,2}`, `34`

  %% Aliased:
  %%    _13
  _39 = succeeded:body _13
  br _39, ^39, ^1

39:
  %% map_SUITE.erl:1816
  _17 = put_map `assoc`, `#{}`, `"hi1"`, `1337`, `"hi2"`, `[2]`, `"hi3"`, `3`, `"hi4"`, `<<"3.14159999999999994813e+00">>`

  %% map_SUITE.erl:1816
  %% Aliased:
  %%    _17
  _22 = call (`id`/1), _17

  %% Aliased:
  %%    _22
  _40 = succeeded:body _22
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _51 = bif:is_map _22
  br _51, ^51, ^42

51:
  %% Argument types:
  %%    _22 => map()
  %% Aliased:
  %%    _22
  _25 = get_map_element _22, `"hi1"`

  %% Aliased:
  %%    _25
  _43 = succeeded:guard _25
  br _43, ^43, ^42

43:
  %% Argument types:
  %%    _22 => map()
  %% Aliased:
  %%    _22
  _24 = get_map_element _22, `"hi2"`

  %% Aliased:
  %%    _24
  _44 = succeeded:guard _24
  br _44, ^44, ^42

44:
  %% Argument types:
  %%    _22 => map()
  %% Aliased:
  %%    _22
  _23 = get_map_element _22, `"hi3"`

  %% Aliased:
  %%    _23
  _45 = succeeded:guard _23
  br _45, ^45, ^42

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _50 = bif:'=:=' _25, `1337`
  br _50, ^49, ^42

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _48 = bif:'=:=' _24, `[2]`
  br _48, ^48, ^42

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _47 = bif:'=:=' _23, `3`
  br _47, ^46, ^42

46:
  %% Result type:
  %%    'ok'
  ret `ok`

42:
  %% map_SUITE.erl:1816
  %% Aliased:
  %%    _22
  _26 = match_fail `badmatch`, _22

  %% Unique:
  %%    _26
  _52 = succeeded:body _26
  br ^1

35:
  %% map_SUITE.erl:1814
  %% Aliased:
  %%    _20
  _27 = match_fail `badmatch`, _20

  %% Unique:
  %%    _27
  _56 = succeeded:body _27
  br ^1

31:
  %% map_SUITE.erl:1813
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_warn_pair_key_overloaded/1-',1}}
  _28 = match_fail `function_clause`, _0

  %% Unique:
  %%    _28
  _57 = succeeded:body _28
  br ^1

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% map_SUITE.erl:1834
%% Counter = 24
%% bs_ensure_opt: true
function `map_SUITE`:`t_warn_useless_build`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _21 = bif:is_list _0
  br _21, ^21, ^20

21:
  %% map_SUITE.erl:1835
  %% Result type:
  %%    nil()
  _16 = call (`'-t_warn_useless_build/1-lc$^0/1-0-'`/1), `[1,2,3]`

  %% Unique:
  %%    _16
  _22 = succeeded:body _16
  br _22, ^22, ^1

22:
  %% Result type:
  %%    'ok'
  ret `ok`

20:
  %% map_SUITE.erl:1834
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_warn_useless_build/1-',1}}
  _17 = match_fail `function_clause`, _0

  %% Unique:
  %%    _17
  _23 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% map_SUITE.erl:1838
%% Counter = 51
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_over_alloc`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _26 = bif:is_list _0
  br _26, ^26, ^25

26:
  %% map_SUITE.erl:1839
  Ls = call (`id`/1), `[1,2,3]`

  %% Aliased:
  %%    Ls
  _27 = succeeded:body Ls
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Ls
  V0 = put_list `a`, Ls

  %% map_SUITE.erl:1841
  %% Unique:
  %%    V0
  _3 = put_map `assoc`, `#{}`, `"a"`, V0

  %% map_SUITE.erl:1841
  %% Aliased:
  %%    _3
  _12 = call (`id`/1), _3

  %% Aliased:
  %%    _12
  _28 = succeeded:body _12
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _44 = bif:is_map _12
  br _44, ^44, ^30

44:
  %% Argument types:
  %%    _12 => map()
  %% Aliased:
  %%    _12
  _13 = get_map_element _12, `"a"`

  %% Aliased:
  %%    _13
  _31 = succeeded:guard _13
  br _31, ^31, ^30

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Ls
  _14 = put_list `c`, Ls

  %% map_SUITE.erl:1843
  %% Unique:
  %%    _14
  V2 = call (`id`/1), _14

  %% Aliased:
  %%    V2
  _32 = succeeded:body V2
  br _32, ^32, ^1

32:
  %% map_SUITE.erl:1844
  %% Aliased:
  %%    V2
  _7 = put_map `assoc`, `#{}`, `"a"`, V2

  %% map_SUITE.erl:1844
  %% Aliased:
  %%    _7
  _15 = call (`id`/1), _7

  %% Aliased:
  %%    _15
  _33 = succeeded:body _15
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _42 = bif:is_map _15
  br _42, ^42, ^35

42:
  %% Argument types:
  %%    _15 => map()
  %% Aliased:
  %%    _15
  _16 = get_map_element _15, `"a"`

  %% Aliased:
  %%    _16
  _36 = succeeded:guard _16
  br _36, ^36, ^35

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13, 
  %%    _16
  _17 = put_tuple _13, _16

  %% map_SUITE.erl:1846
  %% Unique:
  %%    _17
  _18 = call (`id`/1), _17

  %% Aliased:
  %%    _18
  _37 = succeeded:body _18
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _40 = bif:'=:=' _18, `{[a,1,2,3],[c,1,2,3]}`
  br _40, ^40, ^39

40:
  %% Result type:
  %%    'ok'
  ret `ok`

39:
  %% map_SUITE.erl:1846
  %% Aliased:
  %%    _18
  _19 = match_fail `badmatch`, _18

  %% Unique:
  %%    _19
  _41 = succeeded:body _19
  br ^1

35:
  %% map_SUITE.erl:1845
  %% Aliased:
  %%    _15
  _20 = match_fail `badmatch`, _15

  %% Unique:
  %%    _20
  _43 = succeeded:body _20
  br ^1

30:
  %% map_SUITE.erl:1842
  %% Aliased:
  %%    _12
  _21 = match_fail `badmatch`, _12

  %% Unique:
  %%    _21
  _45 = succeeded:body _21
  br ^1

25:
  %% map_SUITE.erl:1838
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_over_alloc/1-',1}}
  _22 = match_fail `function_clause`, _0

  %% Unique:
  %%    _22
  _46 = succeeded:body _22
  br ^1

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% map_SUITE.erl:1849
%% Counter = 97
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_empty_val`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _36 = bif:is_list _0
  br _36, ^78, ^35

78:
  %% map_SUITE.erl:1851
  _4 = call (`id`/1), `#{1337 => ok,{1,2} => ok,"hi" => ok}`

  %% Aliased:
  %%    _4
  _37 = succeeded:body _4
  br _37, ^37, ^1

37:
  %% map_SUITE.erl:1851
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-t_build_and_match_empty_val/1-fun-0-'`/1) => fun((_) -> 'ok')
  %% Aliased:
  %%    _4
  _19 = call (`'-t_build_and_match_empty_val/1-fun-0-'`/1), _4

  %% Unique:
  %%    _19
  _38 = succeeded:body _19
  br _38, ^95, ^1

95:
  br ^96

96:
  _44 = new_try_tag `'catch'`
  br _44, ^42, ^43

42:
  %% map_SUITE.erl:1854
  _6 = call (`id`/1), `#{"hi" => ok}`

  %% Aliased:
  %%    _6
  _46 = succeeded:body _6
  br _46, ^46, ^43

46:
  %% map_SUITE.erl:1854
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-t_build_and_match_empty_val/1-fun-0-'`/1) => fun((_) -> 'ok')
  %% Aliased:
  %%    _6
  _29 = call (`'-t_build_and_match_empty_val/1-fun-0-'`/1), _6

  %% Unique:
  %%    _29
  _47 = succeeded:body _29
  br _47, ^47, ^43

47:
  br ^41

43:
  %% Unique:
  %%    _44
  _50 = landingpad `'catch'`, _44

  %% Aliased:
  %%    _50
  _48 = extract _50, `0`
  br ^41

41:
  _51 = phi { _48, ^43 }, { `ok`, ^47 }

  %% Aliased:
  %%    _51
  %% Unique:
  %%    _44
  _7 = catch_end _44, _51

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _70 = is_tagged_tuple _7, `2`, `'EXIT'`
  br _70, ^67, ^53

67:
  %% Argument types:
  %%    _7 => {''EXIT'', any()}
  %% Aliased:
  %%    _7
  _21 = get_tuple_element _7, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _64 = bif:is_tuple _21
  br _64, ^64, ^53

64:
  %% Argument types:
  %%    _21 => {...}
  %% Aliased:
  %%    _21
  _65 = bif:tuple_size _21

  %% Argument types:
  %%    _65 => 0..16777215
  %% Unique:
  %%    _65
  _66 = bif:'=:=' _65, `2`
  br _66, ^63, ^53

63:
  %% Argument types:
  %%    _21 => {any(), any()}
  %% Aliased:
  %%    _21
  _24 = get_tuple_element _21, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _58 = bif:is_tuple _24
  br _58, ^58, ^54

58:
  %% Argument types:
  %%    _24 => {...}
  %% Aliased:
  %%    _24
  _60 = is_tagged_tuple _24, `2`, `case_clause`
  br _60, ^55, ^53

55:
  %% Result type:
  %%    {'comment', 'inlined'}
  ret `{comment,inlined}`

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _62 = bif:'=:=' _24, `function_clause`
  br _62, ^61, ^53

61:
  %% Result type:
  %%    'ok'
  ret `ok`

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _20 = put_tuple `no_match`, _7

  %% map_SUITE.erl:1858
  %% Unique:
  %%    _20
  _30 = call (`ct`:`fail`/1), _20

  %% Aliased:
  %%    _30
  _73 = succeeded:body _30
  br _73, ^73, ^1

73:
  %% Aliased:
  %%    _30
  ret _30

35:
  %% map_SUITE.erl:1849
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_empty_val/1-',1}}
  _32 = match_fail `function_clause`, _0

  %% Unique:
  %%    _32
  _77 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% map_SUITE.erl:1861
%% Counter = 105
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_val`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _39 = bif:is_list _0
  br _39, ^86, ^38

86:
  %% map_SUITE.erl:1868
  _4 = call (`id`/1), `#{v => "hello","hi" => first}`

  %% Aliased:
  %%    _4
  _40 = succeeded:body _4
  br _40, ^40, ^1

40:
  %% map_SUITE.erl:1868
  %% Result type:
  %%    {1, any()} | {2, any()}
  %% Argument types:
  %%    (`'-t_build_and_match_val/1-fun-0-'`/1) => fun((_) -> {1, any()} | {2, any()})
  %% Aliased:
  %%    _4
  _18 = call (`'-t_build_and_match_val/1-fun-0-'`/1), _4

  %% Unique:
  %%    _18
  _41 = succeeded:body _18
  br _41, ^41, ^1

41:
  %% Argument types:
  %%    _18 => {1, any()} | {2, any()}
  %% Unique:
  %%    _18
  _83 = bif:'=:=' _18, `{1,"hello"}`
  br _83, ^83, ^43

83:
  %% map_SUITE.erl:1869
  _6 = call (`id`/1), `#{v => "second","hi" => second}`

  %% Aliased:
  %%    _6
  _44 = succeeded:body _6
  br _44, ^44, ^1

44:
  %% map_SUITE.erl:1869
  %% Result type:
  %%    {1, any()} | {2, any()}
  %% Argument types:
  %%    (`'-t_build_and_match_val/1-fun-0-'`/1) => fun((_) -> {1, any()} | {2, any()})
  %% Aliased:
  %%    _6
  _19 = call (`'-t_build_and_match_val/1-fun-0-'`/1), _6

  %% Unique:
  %%    _19
  _45 = succeeded:body _19
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    _19 => {1, any()} | {2, any()}
  %% Unique:
  %%    _19
  _81 = bif:'=:=' _19, `{2,"second"}`
  br _81, ^103, ^47

103:
  br ^104

104:
  _51 = new_try_tag `'catch'`
  br _51, ^49, ^50

49:
  %% map_SUITE.erl:1872
  _8 = call (`id`/1), `#{"hi" => ok}`

  %% Aliased:
  %%    _8
  _53 = succeeded:body _8
  br _53, ^53, ^50

53:
  %% map_SUITE.erl:1872
  %% Result type:
  %%    {1, any()} | {2, any()}
  %% Argument types:
  %%    (`'-t_build_and_match_val/1-fun-0-'`/1) => fun((_) -> {1, any()} | {2, any()})
  %% Aliased:
  %%    _8
  _31 = call (`'-t_build_and_match_val/1-fun-0-'`/1), _8

  %% Unique:
  %%    _31
  _54 = succeeded:body _31
  br _54, ^54, ^50

54:
  br ^48

50:
  %% Unique:
  %%    _51
  _57 = landingpad `'catch'`, _51

  %% Aliased:
  %%    _57
  _55 = extract _57, `0`
  br ^48

48:
  _58 = phi { _55, ^50 }, { _31, ^54 }

  %% Aliased:
  %%    _58
  %% Unique:
  %%    _51
  _9 = catch_end _51, _58

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _77 = is_tagged_tuple _9, `2`, `'EXIT'`
  br _77, ^74, ^60

74:
  %% Argument types:
  %%    _9 => {''EXIT'', any()}
  %% Aliased:
  %%    _9
  _21 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _71 = bif:is_tuple _21
  br _71, ^71, ^60

71:
  %% Argument types:
  %%    _21 => {...}
  %% Aliased:
  %%    _21
  _72 = bif:tuple_size _21

  %% Argument types:
  %%    _72 => 0..16777215
  %% Unique:
  %%    _72
  _73 = bif:'=:=' _72, `2`
  br _73, ^70, ^60

70:
  %% Argument types:
  %%    _21 => {any(), any()}
  %% Aliased:
  %%    _21
  _24 = get_tuple_element _21, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _65 = bif:is_tuple _24
  br _65, ^65, ^61

65:
  %% Argument types:
  %%    _24 => {...}
  %% Aliased:
  %%    _24
  _67 = is_tagged_tuple _24, `2`, `case_clause`
  br _67, ^62, ^60

62:
  %% Result type:
  %%    {'comment', 'inlined'}
  ret `{comment,inlined}`

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _69 = bif:'=:=' _24, `function_clause`
  br _69, ^68, ^60

68:
  %% Result type:
  %%    'ok'
  ret `ok`

60:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _20 = put_tuple `no_match`, _9

  %% map_SUITE.erl:1876
  %% Unique:
  %%    _20
  _32 = call (`ct`:`fail`/1), _20

  %% Aliased:
  %%    _32
  _80 = succeeded:body _32
  br _80, ^80, ^1

80:
  %% Aliased:
  %%    _32
  ret _32

47:
  %% map_SUITE.erl:1869
  %% Unique:
  %%    _19
  _33 = match_fail `badmatch`, _19

  %% Unique:
  %%    _33
  _82 = succeeded:body _33
  br ^1

43:
  %% map_SUITE.erl:1868
  %% Unique:
  %%    _18
  _34 = match_fail `badmatch`, _18

  %% Unique:
  %%    _34
  _84 = succeeded:body _34
  br ^1

38:
  %% map_SUITE.erl:1861
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_val/1-',1}}
  _35 = match_fail `function_clause`, _0

  %% Unique:
  %%    _35
  _85 = succeeded:body _35
  br ^1

1:
  _36 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _36
}

%% map_SUITE.erl:1879
%% Counter = 86
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_nil`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _41 = bif:is_list _0
  br _41, ^41, ^40

41:
  %% map_SUITE.erl:1881
  V1 = call (`id`/1), `cookie`

  %% Aliased:
  %%    V1
  _42 = succeeded:body V1
  br _42, ^42, ^1

42:
  %% map_SUITE.erl:1882
  V2 = call (`id`/1), `cake`

  %% Aliased:
  %%    V2
  _43 = succeeded:body V2
  br _43, ^43, ^1

43:
  %% map_SUITE.erl:1883
  V3 = call (`id`/1), `crisps`

  %% Aliased:
  %%    V3
  _44 = succeeded:body V3
  br _44, ^44, ^1

44:
  %% map_SUITE.erl:1885
  %% Aliased:
  %%    V1, 
  %%    V2, 
  %%    V3
  _4 = put_map `assoc`, `#{}`, `{your,treat}`, V3, `[]`, V1, `"treat"`, V2

  %% map_SUITE.erl:1885
  %% Aliased:
  %%    _4
  _23 = call (`id`/1), _4

  %% Aliased:
  %%    _23
  _45 = succeeded:body _23
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _70 = bif:is_map _23
  br _70, ^70, ^47

70:
  %% Argument types:
  %%    _23 => map()
  %% Aliased:
  %%    _23
  _26 = get_map_element _23, `{your,treat}`

  %% Aliased:
  %%    _26
  _48 = succeeded:guard _26
  br _48, ^48, ^47

48:
  %% Argument types:
  %%    _23 => map()
  %% Aliased:
  %%    _23
  _25 = get_map_element _23, `[]`

  %% Aliased:
  %%    _25
  _49 = succeeded:guard _25
  br _49, ^49, ^47

49:
  %% Argument types:
  %%    _23 => map()
  %% Aliased:
  %%    _23
  _24 = get_map_element _23, `"treat"`

  %% Aliased:
  %%    _24
  _50 = succeeded:guard _24
  br _50, ^50, ^47

50:
  %% map_SUITE.erl:1885
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26, 
  %%    V3
  _16 = bif:'=:=' _26, V3
  br _16, ^80, ^47

80:
  %% map_SUITE.erl:1885
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25, 
  %%    V1
  _14 = bif:'=:=' _25, V1
  br _14, ^81, ^47

81:
  %% map_SUITE.erl:1885
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24, 
  %%    V2
  _15 = bif:'=:=' _24, V2
  br _15, ^53, ^47

53:
  %% map_SUITE.erl:1889
  %% Aliased:
  %%    V3
  _6 = put_map `assoc`, `#{}`, `[]`, V3

  %% map_SUITE.erl:1889
  %% Aliased:
  %%    _6
  _28 = call (`id`/1), _6

  %% Aliased:
  %%    _28
  _54 = succeeded:body _28
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _68 = bif:is_map _28
  br _68, ^68, ^56

68:
  %% Argument types:
  %%    _28 => map()
  %% Aliased:
  %%    _28
  _29 = get_map_element _28, `[]`

  %% Aliased:
  %%    _29
  _57 = succeeded:guard _29
  br _57, ^57, ^56

57:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29, 
  %%    V3
  _58 = bif:'=:=' _29, V3
  br _58, ^58, ^56

58:
  %% map_SUITE.erl:1890
  %% Aliased:
  %%    V1, 
  %%    V3
  _8 = put_map `assoc`, `#{}`, `[]`, V1, `<<1>>`, V3

  %% map_SUITE.erl:1890
  %% Aliased:
  %%    _8
  _30 = call (`id`/1), _8

  %% Aliased:
  %%    _30
  _59 = succeeded:body _30
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _66 = bif:is_map _30
  br _66, ^66, ^61

66:
  %% Argument types:
  %%    _30 => map()
  %% Aliased:
  %%    _30
  _32 = get_map_element _30, `[]`

  %% Aliased:
  %%    _32
  _62 = succeeded:guard _32
  br _62, ^62, ^61

62:
  %% Argument types:
  %%    _30 => map()
  %% Aliased:
  %%    _30
  _31 = get_map_element _30, `<<1>>`

  %% Aliased:
  %%    _31
  _63 = succeeded:guard _31
  br _63, ^63, ^61

63:
  %% map_SUITE.erl:1890
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32, 
  %%    V1
  _21 = bif:'=:=' _32, V1
  br _21, ^75, ^61

75:
  %% map_SUITE.erl:1890
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31, 
  %%    V3
  _22 = bif:'=:=' _31, V3
  br _22, ^65, ^61

65:
  %% Result type:
  %%    'ok'
  ret `ok`

61:
  %% map_SUITE.erl:1890
  %% Aliased:
  %%    _30
  _34 = match_fail `badmatch`, _30

  %% Unique:
  %%    _34
  _67 = succeeded:body _34
  br ^1

56:
  %% map_SUITE.erl:1889
  %% Aliased:
  %%    _28
  _35 = match_fail `badmatch`, _28

  %% Unique:
  %%    _35
  _69 = succeeded:body _35
  br ^1

47:
  %% map_SUITE.erl:1885
  %% Aliased:
  %%    _23
  _36 = match_fail `badmatch`, _23

  %% Unique:
  %%    _36
  _71 = succeeded:body _36
  br ^1

40:
  %% map_SUITE.erl:1879
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_nil/1-',1}}
  _37 = match_fail `function_clause`, _0

  %% Unique:
  %%    _37
  _72 = succeeded:body _37
  br ^1

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _38
}

%% map_SUITE.erl:1893
%% Counter = 114
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_structure`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _55 = bif:is_list _0
  br _55, ^55, ^54

55:
  %% map_SUITE.erl:1894
  V2 = call (`id`/1), `"it"`

  %% Aliased:
  %%    V2
  _56 = succeeded:body V2
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    V2
  _16 = put_list `95`, V2

  %% Argument types:
  %%    _16 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _16
  _17 = put_list `116`, _16

  %% Argument types:
  %%    _17 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _17
  _18 = put_list `101`, _17

  %% Argument types:
  %%    _18 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _18
  _2 = put_list `103`, _18

  %% map_SUITE.erl:1895
  %% Unique:
  %%    _2
  _3 = put_map `assoc`, `#{}`, `any`, `any`, `val`, _2, `"a"`, `42`

  %% Argument types:
  %%    _3 => #{'any' | 'val' | nonempty_list(97)=>'any' | nonempty_improper_list(any(), any()) | 42}
  %% Aliased:
  %%    _3
  _19 = put_tuple `"hi"`, `"=)"`, _3

  %% Argument types:
  %%    _19 => {nonempty_list(104..105), nonempty_list(41..61), #{'any' | 'val' | nonempty_list(97)=>'any' | nonempty_improper_list(any(), any()) | 42}}
  %% Unique:
  %%    _19
  _20 = put_list _19, `[]`

  %% Argument types:
  %%    _20 => nonempty_list({nonempty_list(104..105), nonempty_list(41..61), #{'any' | 'val' | nonempty_list(97)=>'any' | nonempty_improper_list(any(), any()) | 42}})
  %% Unique:
  %%    _20
  _21 = put_list `42`, _20

  %% map_SUITE.erl:1895
  %% Unique:
  %%    _21
  S = call (`id`/1), _21

  %% Aliased:
  %%    S
  _57 = succeeded:body S
  br _57, ^57, ^1

57:
  %% Aliased:
  %%    S
  _87 = is_nonempty_list S
  br _87, ^87, ^59

87:
  %% Argument types:
  %%    S => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    S
  _23 = get_hd S

  %% Argument types:
  %%    S => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    S
  _22 = get_tl S

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _86 = bif:'=:=' _23, `42`
  br _86, ^85, ^59

85:
  %% Aliased:
  %%    _22
  _84 = is_nonempty_list _22
  br _84, ^84, ^59

84:
  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _25 = get_hd _22

  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _24 = get_tl _22

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _81 = bif:is_tuple _25
  br _81, ^81, ^59

81:
  %% Argument types:
  %%    _25 => {...}
  %% Aliased:
  %%    _25
  _82 = bif:tuple_size _25

  %% Argument types:
  %%    _82 => 0..16777215
  %% Unique:
  %%    _82
  _83 = bif:'=:=' _82, `3`
  br _83, ^80, ^59

80:
  %% Argument types:
  %%    _25 => {any(), any(), any()}
  %% Aliased:
  %%    _25
  _28 = get_tuple_element _25, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _79 = bif:'=:=' _28, `"hi"`
  br _79, ^79, ^59

79:
  %% Argument types:
  %%    _25 => {nonempty_list(104..105), any(), any()}
  %% Aliased:
  %%    _25
  _26 = get_tuple_element _25, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _78 = bif:is_map _26
  br _78, ^78, ^59

78:
  %% Argument types:
  %%    _26 => map()
  %% Aliased:
  %%    _26
  _60 = has_map_field _26, `any`
  br _60, ^60, ^59

60:
  %% Argument types:
  %%    _26 => map()
  %% Aliased:
  %%    _26
  _30 = get_map_element _26, `val`

  %% Aliased:
  %%    _30
  _61 = succeeded:guard _30
  br _61, ^61, ^59

61:
  %% Argument types:
  %%    _26 => map()
  %% Aliased:
  %%    _26
  _29 = get_map_element _26, `"a"`

  %% Aliased:
  %%    _29
  _62 = succeeded:guard _29
  br _62, ^62, ^59

62:
  %% Aliased:
  %%    _30
  _77 = is_nonempty_list _30
  br _77, ^77, ^59

77:
  %% Argument types:
  %%    _30 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _30
  _33 = get_hd _30

  %% Argument types:
  %%    _30 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _30
  _32 = get_tl _30

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _76 = bif:'=:=' _33, `103`
  br _76, ^75, ^59

75:
  %% Aliased:
  %%    _32
  _74 = is_nonempty_list _32
  br _74, ^74, ^59

74:
  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _35 = get_hd _32

  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _34 = get_tl _32

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _73 = bif:'=:=' _35, `101`
  br _73, ^72, ^59

72:
  %% Aliased:
  %%    _34
  _71 = is_nonempty_list _34
  br _71, ^71, ^59

71:
  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _37 = get_hd _34

  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _36 = get_tl _34

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _70 = bif:'=:=' _37, `116`
  br _70, ^69, ^59

69:
  %% Aliased:
  %%    _36
  _68 = is_nonempty_list _36
  br _68, ^68, ^59

68:
  %% Argument types:
  %%    _36 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _36
  _39 = get_hd _36

  %% Argument types:
  %%    _36 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _36
  _38 = get_tl _36

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _67 = bif:'=:=' _39, `95`
  br _67, ^66, ^59

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _65 = bif:'=:=' _29, `42`
  br _65, ^64, ^59

64:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _63 = bif:'=:=' _24, `[]`
  br _63, ^58, ^59

58:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38, 
  %%    V2
  _91 = bif:'=:=' _38, V2
  br _91, ^108, ^90

108:
  %% Result type:
  %%    'ok'
  ret `ok`

90:
  %% map_SUITE.erl:1898
  %% Aliased:
  %%    _38
  _50 = match_fail `badmatch`, _38

  %% Unique:
  %%    _50
  _111 = succeeded:body _50
  br ^1

59:
  %% map_SUITE.erl:1898
  %% Aliased:
  %%    S
  _47 = match_fail `case_clause`, S

  %% Unique:
  %%    _47
  _88 = succeeded:body _47
  br ^1

54:
  %% map_SUITE.erl:1893
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_structure/1-',1}}
  _51 = match_fail `function_clause`, _0

  %% Unique:
  %%    _51
  _112 = succeeded:body _51
  br ^1

1:
  _52 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _52
}

%% map_SUITE.erl:1908
%% Counter = 969
%% bs_ensure_opt: true
function `map_SUITE`:`t_build_and_match_variables`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _364 = bif:is_list _0
  br _364, ^364, ^363

364:
  %% map_SUITE.erl:1909
  K0 = call (`id`/1), `#{}`

  %% Aliased:
  %%    K0
  _365 = succeeded:body K0
  br _365, ^365, ^1

365:
  %% map_SUITE.erl:1910
  K1 = call (`id`/1), `1`

  %% Aliased:
  %%    K1
  _366 = succeeded:body K1
  br _366, ^366, ^1

366:
  %% map_SUITE.erl:1910
  V1 = call (`id`/1), `a`

  %% Aliased:
  %%    V1
  _367 = succeeded:body V1
  br _367, ^367, ^1

367:
  %% map_SUITE.erl:1911
  K2 = call (`id`/1), `2`

  %% Aliased:
  %%    K2
  _368 = succeeded:body K2
  br _368, ^368, ^1

368:
  %% map_SUITE.erl:1911
  V2 = call (`id`/1), `b`

  %% Aliased:
  %%    V2
  _369 = succeeded:body V2
  br _369, ^369, ^1

369:
  %% map_SUITE.erl:1912
  K3 = call (`id`/1), `3`

  %% Aliased:
  %%    K3
  _370 = succeeded:body K3
  br _370, ^370, ^1

370:
  %% map_SUITE.erl:1912
  V3 = call (`id`/1), `"c"`

  %% Aliased:
  %%    V3
  _371 = succeeded:body V3
  br _371, ^371, ^1

371:
  %% map_SUITE.erl:1913
  K4 = call (`id`/1), `"4"`

  %% Aliased:
  %%    K4
  _372 = succeeded:body K4
  br _372, ^372, ^1

372:
  %% map_SUITE.erl:1913
  V4 = call (`id`/1), `"d"`

  %% Aliased:
  %%    V4
  _373 = succeeded:body V4
  br _373, ^373, ^1

373:
  %% map_SUITE.erl:1914
  K5 = call (`id`/1), `<<"5">>`

  %% Aliased:
  %%    K5
  _374 = succeeded:body K5
  br _374, ^374, ^1

374:
  %% map_SUITE.erl:1914
  V5 = call (`id`/1), `<<"e">>`

  %% Aliased:
  %%    V5
  _375 = succeeded:body V5
  br _375, ^375, ^1

375:
  %% map_SUITE.erl:1915
  K6 = call (`id`/1), `{"6",7}`

  %% Aliased:
  %%    K6
  _376 = succeeded:body K6
  br _376, ^376, ^1

376:
  %% map_SUITE.erl:1915
  V6 = call (`id`/1), `"f"`

  %% Aliased:
  %%    V6
  _377 = succeeded:body V6
  br _377, ^377, ^1

377:
  %% map_SUITE.erl:1916
  K7 = call (`id`/1), `#{"a" => 3}`

  %% Aliased:
  %%    K7
  _378 = succeeded:body K7
  br _378, ^378, ^1

378:
  %% map_SUITE.erl:1917
  %% Aliased:
  %%    K1, 
  %%    V1
  _15 = put_map `assoc`, `#{}`, K1, V1

  %% map_SUITE.erl:1917
  %% Aliased:
  %%    _15
  _174 = call (`id`/1), _15

  %% Aliased:
  %%    _174
  _379 = succeeded:body _174
  br _379, ^379, ^1

379:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _174
  _790 = bif:is_map _174
  br _790, ^790, ^381

790:
  %% Argument types:
  %%    _174 => map()
  %% Aliased:
  %%    _174, 
  %%    K1
  _175 = get_map_element _174, K1

  %% Aliased:
  %%    _175
  _382 = succeeded:guard _175
  br _382, ^382, ^381

382:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _175, 
  %%    V1
  _383 = bif:'=:=' _175, V1
  br _383, ^383, ^381

383:
  %% map_SUITE.erl:1918
  %% Aliased:
  %%    K1, 
  %%    V1
  _176 = put_map `assoc`, `#{}`, K1, V1

  %% map_SUITE.erl:1918
  %% Aliased:
  %%    _176, 
  %%    K2, 
  %%    V2
  _17 = put_map `assoc`, _176, K2, V2

  %% map_SUITE.erl:1918
  %% Aliased:
  %%    _17
  _177 = call (`id`/1), _17

  %% Aliased:
  %%    _177
  _384 = succeeded:body _177
  br _384, ^384, ^1

384:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _177
  _788 = bif:is_map _177
  br _788, ^788, ^386

788:
  %% Argument types:
  %%    _177 => map()
  %% Aliased:
  %%    _177, 
  %%    K1
  _179 = get_map_element _177, K1

  %% Aliased:
  %%    _179
  _387 = succeeded:guard _179
  br _387, ^387, ^386

387:
  %% Argument types:
  %%    _177 => map()
  %% Aliased:
  %%    _177, 
  %%    K2
  _178 = get_map_element _177, K2

  %% Aliased:
  %%    _178
  _388 = succeeded:guard _178
  br _388, ^388, ^386

388:
  %% map_SUITE.erl:1918
  %% Argument types:
  %%    
  %% Aliased:
  %%    _179, 
  %%    V1
  _84 = bif:'=:=' _179, V1
  br _84, ^849, ^386

849:
  %% map_SUITE.erl:1918
  %% Argument types:
  %%    
  %% Aliased:
  %%    _178, 
  %%    V2
  _85 = bif:'=:=' _178, V2
  br _85, ^390, ^386

390:
  %% map_SUITE.erl:1919
  %% Aliased:
  %%    K1, 
  %%    V1
  _181 = put_map `assoc`, `#{}`, K1, V1

  %% map_SUITE.erl:1919
  %% Aliased:
  %%    _181, 
  %%    K2, 
  %%    V2
  _182 = put_map `assoc`, _181, K2, V2

  %% map_SUITE.erl:1919
  %% Aliased:
  %%    _182, 
  %%    K3, 
  %%    V3
  _19 = put_map `assoc`, _182, K3, V3

  %% map_SUITE.erl:1919
  %% Aliased:
  %%    _19
  _183 = call (`id`/1), _19

  %% Aliased:
  %%    _183
  _391 = succeeded:body _183
  br _391, ^391, ^1

391:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _183
  _786 = bif:is_map _183
  br _786, ^786, ^393

786:
  %% Argument types:
  %%    _183 => map()
  %% Aliased:
  %%    _183, 
  %%    K1
  _186 = get_map_element _183, K1

  %% Aliased:
  %%    _186
  _394 = succeeded:guard _186
  br _394, ^394, ^393

394:
  %% Argument types:
  %%    _183 => map()
  %% Aliased:
  %%    _183, 
  %%    K2
  _185 = get_map_element _183, K2

  %% Aliased:
  %%    _185
  _395 = succeeded:guard _185
  br _395, ^395, ^393

395:
  %% Argument types:
  %%    _183 => map()
  %% Aliased:
  %%    _183, 
  %%    K3
  _184 = get_map_element _183, K3

  %% Aliased:
  %%    _184
  _396 = succeeded:guard _184
  br _396, ^396, ^393

396:
  %% map_SUITE.erl:1919
  %% Argument types:
  %%    
  %% Aliased:
  %%    _186, 
  %%    V1
  _91 = bif:'=:=' _186, V1
  br _91, ^844, ^393

844:
  %% map_SUITE.erl:1919
  %% Argument types:
  %%    
  %% Aliased:
  %%    _185, 
  %%    V2
  _89 = bif:'=:=' _185, V2
  br _89, ^845, ^393

845:
  %% map_SUITE.erl:1919
  %% Argument types:
  %%    
  %% Aliased:
  %%    _184, 
  %%    V3
  _90 = bif:'=:=' _184, V3
  br _90, ^399, ^393

399:
  %% map_SUITE.erl:1920
  %% Aliased:
  %%    K1, 
  %%    V1
  _188 = put_map `assoc`, `#{}`, K1, V1

  %% map_SUITE.erl:1920
  %% Aliased:
  %%    _188, 
  %%    K2, 
  %%    V2
  _189 = put_map `assoc`, _188, K2, V2

  %% map_SUITE.erl:1920
  %% Aliased:
  %%    _189, 
  %%    K3, 
  %%    V3
  _190 = put_map `assoc`, _189, K3, V3

  %% map_SUITE.erl:1920
  %% Aliased:
  %%    _190, 
  %%    K4, 
  %%    V4
  _21 = put_map `assoc`, _190, K4, V4

  %% map_SUITE.erl:1920
  %% Aliased:
  %%    _21
  _191 = call (`id`/1), _21

  %% Aliased:
  %%    _191
  _400 = succeeded:body _191
  br _400, ^400, ^1

400:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _191
  _784 = bif:is_map _191
  br _784, ^784, ^402

784:
  %% Argument types:
  %%    _191 => map()
  %% Aliased:
  %%    _191, 
  %%    K1
  _195 = get_map_element _191, K1

  %% Aliased:
  %%    _195
  _403 = succeeded:guard _195
  br _403, ^403, ^402

403:
  %% Argument types:
  %%    _191 => map()
  %% Aliased:
  %%    _191, 
  %%    K2
  _194 = get_map_element _191, K2

  %% Aliased:
  %%    _194
  _404 = succeeded:guard _194
  br _404, ^404, ^402

404:
  %% Argument types:
  %%    _191 => map()
  %% Aliased:
  %%    _191, 
  %%    K3
  _193 = get_map_element _191, K3

  %% Aliased:
  %%    _193
  _405 = succeeded:guard _193
  br _405, ^405, ^402

405:
  %% Argument types:
  %%    _191 => map()
  %% Aliased:
  %%    _191, 
  %%    K4
  _192 = get_map_element _191, K4

  %% Aliased:
  %%    _192
  _406 = succeeded:guard _192
  br _406, ^406, ^402

406:
  %% map_SUITE.erl:1920
  %% Argument types:
  %%    
  %% Aliased:
  %%    _195, 
  %%    V1
  _101 = bif:'=:=' _195, V1
  br _101, ^837, ^402

837:
  %% map_SUITE.erl:1920
  %% Argument types:
  %%    
  %% Aliased:
  %%    _194, 
  %%    V2
  _99 = bif:'=:=' _194, V2
  br _99, ^838, ^402

838:
  %% map_SUITE.erl:1920
  %% Argument types:
  %%    
  %% Aliased:
  %%    _193, 
  %%    V3
  _97 = bif:'=:=' _193, V3
  br _97, ^839, ^402

839:
  %% map_SUITE.erl:1920
  %% Argument types:
  %%    
  %% Aliased:
  %%    _192, 
  %%    V4
  _98 = bif:'=:=' _192, V4
  br _98, ^410, ^402

410:
  %% map_SUITE.erl:1921
  %% Aliased:
  %%    K1, 
  %%    V1
  _197 = put_map `assoc`, `#{}`, K1, V1

  %% map_SUITE.erl:1921
  %% Aliased:
  %%    _197, 
  %%    K2, 
  %%    V2
  _198 = put_map `assoc`, _197, K2, V2

  %% map_SUITE.erl:1921
  %% Aliased:
  %%    _198, 
  %%    K3, 
  %%    V3
  _199 = put_map `assoc`, _198, K3, V3

  %% map_SUITE.erl:1921
  %% Aliased:
  %%    _199, 
  %%    K4, 
  %%    V4
  _200 = put_map `assoc`, _199, K4, V4

  %% map_SUITE.erl:1921
  %% Aliased:
  %%    _200, 
  %%    K5, 
  %%    V5
  _23 = put_map `assoc`, _200, K5, V5

  %% map_SUITE.erl:1921
  %% Aliased:
  %%    _23
  _201 = call (`id`/1), _23

  %% Aliased:
  %%    _201
  _411 = succeeded:body _201
  br _411, ^411, ^1

411:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _201
  _782 = bif:is_map _201
  br _782, ^782, ^413

782:
  %% Argument types:
  %%    _201 => map()
  %% Aliased:
  %%    _201, 
  %%    K1
  _206 = get_map_element _201, K1

  %% Aliased:
  %%    _206
  _414 = succeeded:guard _206
  br _414, ^414, ^413

414:
  %% Argument types:
  %%    _201 => map()
  %% Aliased:
  %%    _201, 
  %%    K2
  _205 = get_map_element _201, K2

  %% Aliased:
  %%    _205
  _415 = succeeded:guard _205
  br _415, ^415, ^413

415:
  %% Argument types:
  %%    _201 => map()
  %% Aliased:
  %%    _201, 
  %%    K3
  _204 = get_map_element _201, K3

  %% Aliased:
  %%    _204
  _416 = succeeded:guard _204
  br _416, ^416, ^413

416:
  %% Argument types:
  %%    _201 => map()
  %% Aliased:
  %%    _201, 
  %%    K4
  _203 = get_map_element _201, K4

  %% Aliased:
  %%    _203
  _417 = succeeded:guard _203
  br _417, ^417, ^413

417:
  %% Argument types:
  %%    _201 => map()
  %% Aliased:
  %%    _201, 
  %%    K5
  _202 = get_map_element _201, K5

  %% Aliased:
  %%    _202
  _418 = succeeded:guard _202
  br _418, ^418, ^413

418:
  %% map_SUITE.erl:1921
  %% Argument types:
  %%    
  %% Aliased:
  %%    _206, 
  %%    V1
  _114 = bif:'=:=' _206, V1
  br _114, ^828, ^413

828:
  %% map_SUITE.erl:1921
  %% Argument types:
  %%    
  %% Aliased:
  %%    _205, 
  %%    V2
  _112 = bif:'=:=' _205, V2
  br _112, ^829, ^413

829:
  %% map_SUITE.erl:1921
  %% Argument types:
  %%    
  %% Aliased:
  %%    _204, 
  %%    V3
  _110 = bif:'=:=' _204, V3
  br _110, ^830, ^413

830:
  %% map_SUITE.erl:1921
  %% Argument types:
  %%    
  %% Aliased:
  %%    _203, 
  %%    V4
  _108 = bif:'=:=' _203, V4
  br _108, ^831, ^413

831:
  %% map_SUITE.erl:1921
  %% Argument types:
  %%    
  %% Aliased:
  %%    _202, 
  %%    V5
  _109 = bif:'=:=' _202, V5
  br _109, ^423, ^413

423:
  %% map_SUITE.erl:1922
  %% Aliased:
  %%    K1, 
  %%    V1
  _208 = put_map `assoc`, `#{}`, K1, V1

  %% map_SUITE.erl:1922
  %% Aliased:
  %%    _208, 
  %%    K2, 
  %%    V2
  _209 = put_map `assoc`, _208, K2, V2

  %% map_SUITE.erl:1922
  %% Aliased:
  %%    _209, 
  %%    K3, 
  %%    V3
  _210 = put_map `assoc`, _209, K3, V3

  %% map_SUITE.erl:1922
  %% Aliased:
  %%    _210, 
  %%    K4, 
  %%    V4
  _211 = put_map `assoc`, _210, K4, V4

  %% map_SUITE.erl:1922
  %% Aliased:
  %%    _211, 
  %%    K5, 
  %%    V5
  _212 = put_map `assoc`, _211, K5, V5

  %% map_SUITE.erl:1922
  %% Aliased:
  %%    _212, 
  %%    K6, 
  %%    V6
  _25 = put_map `assoc`, _212, K6, V6

  %% map_SUITE.erl:1922
  %% Aliased:
  %%    _25
  _213 = call (`id`/1), _25

  %% Aliased:
  %%    _213
  _424 = succeeded:body _213
  br _424, ^424, ^1

424:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _213
  _780 = bif:is_map _213
  br _780, ^780, ^426

780:
  %% Argument types:
  %%    _213 => map()
  %% Aliased:
  %%    _213, 
  %%    K1
  _219 = get_map_element _213, K1

  %% Aliased:
  %%    _219
  _427 = succeeded:guard _219
  br _427, ^427, ^426

427:
  %% Argument types:
  %%    _213 => map()
  %% Aliased:
  %%    _213, 
  %%    K2
  _218 = get_map_element _213, K2

  %% Aliased:
  %%    _218
  _428 = succeeded:guard _218
  br _428, ^428, ^426

428:
  %% Argument types:
  %%    _213 => map()
  %% Aliased:
  %%    _213, 
  %%    K3
  _217 = get_map_element _213, K3

  %% Aliased:
  %%    _217
  _429 = succeeded:guard _217
  br _429, ^429, ^426

429:
  %% Argument types:
  %%    _213 => map()
  %% Aliased:
  %%    _213, 
  %%    K4
  _216 = get_map_element _213, K4

  %% Aliased:
  %%    _216
  _430 = succeeded:guard _216
  br _430, ^430, ^426

430:
  %% Argument types:
  %%    _213 => map()
  %% Aliased:
  %%    _213, 
  %%    K5
  _215 = get_map_element _213, K5

  %% Aliased:
  %%    _215
  _431 = succeeded:guard _215
  br _431, ^431, ^426

431:
  %% Argument types:
  %%    _213 => map()
  %% Aliased:
  %%    _213, 
  %%    K6
  _214 = get_map_element _213, K6

  %% Aliased:
  %%    _214
  _432 = succeeded:guard _214
  br _432, ^432, ^426

432:
  %% map_SUITE.erl:1922
  %% Argument types:
  %%    
  %% Aliased:
  %%    _219, 
  %%    V1
  _130 = bif:'=:=' _219, V1
  br _130, ^817, ^426

817:
  %% map_SUITE.erl:1922
  %% Argument types:
  %%    
  %% Aliased:
  %%    _218, 
  %%    V2
  _128 = bif:'=:=' _218, V2
  br _128, ^818, ^426

818:
  %% map_SUITE.erl:1922
  %% Argument types:
  %%    
  %% Aliased:
  %%    _217, 
  %%    V3
  _126 = bif:'=:=' _217, V3
  br _126, ^819, ^426

819:
  %% map_SUITE.erl:1922
  %% Argument types:
  %%    
  %% Aliased:
  %%    _216, 
  %%    V4
  _124 = bif:'=:=' _216, V4
  br _124, ^820, ^426

820:
  %% map_SUITE.erl:1922
  %% Argument types:
  %%    
  %% Aliased:
  %%    _215, 
  %%    V5
  _122 = bif:'=:=' _215, V5
  br _122, ^821, ^426

821:
  %% map_SUITE.erl:1922
  %% Argument types:
  %%    
  %% Aliased:
  %%    _214, 
  %%    V6
  _123 = bif:'=:=' _214, V6
  br _123, ^438, ^426

438:
  %% map_SUITE.erl:1924
  %% Aliased:
  %%    K5
  _221 = put_map `assoc`, `#{}`, K5, `3`

  %% map_SUITE.erl:1924
  %% Aliased:
  %%    _221, 
  %%    K4
  _27 = put_map `assoc`, _221, K4, `4`

  %% map_SUITE.erl:1924
  %% Aliased:
  %%    _27
  _222 = call (`id`/1), _27

  %% Aliased:
  %%    _222
  _439 = succeeded:body _222
  br _439, ^439, ^1

439:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _222
  _778 = bif:is_map _222
  br _778, ^778, ^441

778:
  %% Argument types:
  %%    _222 => map()
  %% Aliased:
  %%    _222, 
  %%    K4
  _224 = get_map_element _222, K4

  %% Aliased:
  %%    _224
  _442 = succeeded:guard _224
  br _442, ^442, ^441

442:
  %% Argument types:
  %%    _222 => map()
  %% Aliased:
  %%    _222, 
  %%    K5
  _223 = get_map_element _222, K5

  %% Aliased:
  %%    _223
  _443 = succeeded:guard _223
  br _443, ^443, ^441

443:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _224
  _777 = bif:'=:=' _224, `4`
  br _777, ^776, ^441

776:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _223
  _775 = bif:'=:=' _223, `3`
  br _775, ^774, ^441

774:
  %% map_SUITE.erl:1925
  %% Aliased:
  %%    K5
  _225 = put_map `assoc`, `#{}`, K5, `3`

  %% map_SUITE.erl:1925
  %% Aliased:
  %%    _225, 
  %%    K4
  _29 = put_map `assoc`, _225, K4, `4`

  %% map_SUITE.erl:1925
  %% Aliased:
  %%    _29
  _226 = call (`id`/1), _29

  %% Aliased:
  %%    _226
  _444 = succeeded:body _226
  br _444, ^444, ^1

444:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _226
  _772 = bif:is_map _226
  br _772, ^772, ^446

772:
  %% Argument types:
  %%    _226 => map()
  %% Aliased:
  %%    _226
  _229 = get_map_element _226, `<<"5">>`

  %% Aliased:
  %%    _229
  _447 = succeeded:guard _229
  br _447, ^447, ^446

447:
  %% Argument types:
  %%    _226 => map()
  %% Aliased:
  %%    _226, 
  %%    K4
  _228 = get_map_element _226, K4

  %% Aliased:
  %%    _228
  _448 = succeeded:guard _228
  br _448, ^448, ^446

448:
  %% Argument types:
  %%    _226 => map()
  %% Aliased:
  %%    _226, 
  %%    K5
  _227 = get_map_element _226, K5

  %% Aliased:
  %%    _227
  _449 = succeeded:guard _227
  br _449, ^449, ^446

449:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _229
  _771 = bif:'=:=' _229, `3`
  br _771, ^770, ^446

770:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _228
  _769 = bif:'=:=' _228, `4`
  br _769, ^809, ^446

809:
  %% map_SUITE.erl:1925
  %% Argument types:
  %%    
  %% Aliased:
  %%    _227
  _135 = bif:'=:=' _227, `3`
  br _135, ^451, ^446

451:
  %% map_SUITE.erl:1926
  _231 = put_map `assoc`, `#{}`, `<<"5">>`, `3`

  %% map_SUITE.erl:1926
  %% Aliased:
  %%    _231, 
  %%    K4
  _31 = put_map `assoc`, _231, K4, `4`

  %% map_SUITE.erl:1926
  %% Aliased:
  %%    _31
  _232 = call (`id`/1), _31

  %% Aliased:
  %%    _232
  _452 = succeeded:body _232
  br _452, ^452, ^1

452:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _232
  _766 = bif:is_map _232
  br _766, ^766, ^454

766:
  %% Argument types:
  %%    _232 => map()
  %% Aliased:
  %%    _232
  _235 = get_map_element _232, `<<"5">>`

  %% Aliased:
  %%    _235
  _455 = succeeded:guard _235
  br _455, ^455, ^454

455:
  %% Argument types:
  %%    _232 => map()
  %% Aliased:
  %%    _232, 
  %%    K4
  _234 = get_map_element _232, K4

  %% Aliased:
  %%    _234
  _456 = succeeded:guard _234
  br _456, ^456, ^454

456:
  %% Argument types:
  %%    _232 => map()
  %% Aliased:
  %%    _232, 
  %%    K5
  _233 = get_map_element _232, K5

  %% Aliased:
  %%    _233
  _457 = succeeded:guard _233
  br _457, ^457, ^454

457:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _235
  _765 = bif:'=:=' _235, `3`
  br _765, ^764, ^454

764:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _234
  _763 = bif:'=:=' _234, `4`
  br _763, ^805, ^454

805:
  %% map_SUITE.erl:1926
  %% Argument types:
  %%    
  %% Aliased:
  %%    _233
  _139 = bif:'=:=' _233, `3`
  br _139, ^459, ^454

459:
  %% map_SUITE.erl:1929
  %% Aliased:
  %%    K2, 
  %%    V2
  _237 = put_map `assoc`, `#{}`, K2, V2

  %% map_SUITE.erl:1929
  %% Aliased:
  %%    _237, 
  %%    K1, 
  %%    V1
  _33 = put_map `assoc`, _237, K1, V1

  %% map_SUITE.erl:1929
  %% Aliased:
  %%    _33, 
  %%    K3
  _34 = put_map `assoc`, `#{}`, K3, _33

  %% map_SUITE.erl:1929
  %% Aliased:
  %%    K5, 
  %%    V5
  _238 = put_map `assoc`, `#{}`, K5, V5

  %% map_SUITE.erl:1929
  %% Aliased:
  %%    _34, 
  %%    _238, 
  %%    K4
  _35 = put_map `assoc`, _238, K4, _34

  %% map_SUITE.erl:1929
  %% Aliased:
  %%    _35
  _239 = call (`id`/1), _35

  %% Aliased:
  %%    _239
  _460 = succeeded:body _239
  br _460, ^460, ^1

460:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _239
  _760 = bif:is_map _239
  br _760, ^760, ^462

760:
  %% Argument types:
  %%    _239 => map()
  %% Aliased:
  %%    _239, 
  %%    K4
  _241 = get_map_element _239, K4

  %% Aliased:
  %%    _241
  _463 = succeeded:guard _241
  br _463, ^463, ^462

463:
  %% Argument types:
  %%    _239 => map()
  %% Aliased:
  %%    _239, 
  %%    K5
  _240 = get_map_element _239, K5

  %% Aliased:
  %%    _240
  _464 = succeeded:guard _240
  br _464, ^464, ^462

464:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _241
  _759 = bif:is_map _241
  br _759, ^759, ^462

759:
  %% Argument types:
  %%    _241 => map()
  %% Aliased:
  %%    _241, 
  %%    K3
  _242 = get_map_element _241, K3

  %% Aliased:
  %%    _242
  _465 = succeeded:guard _242
  br _465, ^465, ^462

465:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _242
  _758 = bif:is_map _242
  br _758, ^758, ^462

758:
  %% Argument types:
  %%    _242 => map()
  %% Aliased:
  %%    _242, 
  %%    K1
  _244 = get_map_element _242, K1

  %% Aliased:
  %%    _244
  _466 = succeeded:guard _244
  br _466, ^466, ^462

466:
  %% Argument types:
  %%    _242 => map()
  %% Aliased:
  %%    _242, 
  %%    K2
  _243 = get_map_element _242, K2

  %% Aliased:
  %%    _243
  _467 = succeeded:guard _243
  br _467, ^467, ^462

467:
  %% map_SUITE.erl:1928
  %% Argument types:
  %%    
  %% Aliased:
  %%    _244, 
  %%    V1
  _145 = bif:'=:=' _244, V1
  br _145, ^800, ^462

800:
  %% map_SUITE.erl:1928
  %% Argument types:
  %%    
  %% Aliased:
  %%    _243, 
  %%    V2
  _143 = bif:'=:=' _243, V2
  br _143, ^801, ^462

801:
  %% map_SUITE.erl:1928
  %% Argument types:
  %%    
  %% Aliased:
  %%    _240, 
  %%    V5
  _144 = bif:'=:=' _240, V5
  br _144, ^470, ^462

470:
  %% map_SUITE.erl:1930
  %% Aliased:
  %%    K5
  _37 = put_map `assoc`, `#{}`, K5, `99`

  %% map_SUITE.erl:1930
  %% Aliased:
  %%    _37, 
  %%    K4
  _246 = put_map `assoc`, `#{}`, K4, _37

  %% map_SUITE.erl:1930
  %% Aliased:
  %%    _246, 
  %%    K6
  _38 = put_map `assoc`, _246, K6, `99`

  %% map_SUITE.erl:1930
  %% Aliased:
  %%    _38
  _247 = call (`id`/1), _38

  %% Aliased:
  %%    _247
  _471 = succeeded:body _247
  br _471, ^471, ^1

471:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _247
  _756 = bif:is_map _247
  br _756, ^756, ^473

756:
  %% Argument types:
  %%    _247 => map()
  %% Aliased:
  %%    _247, 
  %%    K4
  _249 = get_map_element _247, K4

  %% Aliased:
  %%    _249
  _474 = succeeded:guard _249
  br _474, ^474, ^473

474:
  %% Argument types:
  %%    _247 => map()
  %% Aliased:
  %%    _247, 
  %%    K6
  _248 = get_map_element _247, K6

  %% Aliased:
  %%    _248
  _475 = succeeded:guard _248
  br _475, ^475, ^473

475:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _249
  _755 = bif:is_map _249
  br _755, ^755, ^473

755:
  %% Argument types:
  %%    _249 => map()
  %% Aliased:
  %%    _249, 
  %%    K5
  _250 = get_map_element _249, K5

  %% Aliased:
  %%    _250
  _476 = succeeded:guard _250
  br _476, ^476, ^473

476:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _248, 
  %%    _250
  _477 = bif:'=:=' _248, _250
  br _477, ^477, ^473

477:
  %% map_SUITE.erl:1934
  _251 = put_map `assoc`, `#{}`, `a`, `1`, `b`, `1`

  %% map_SUITE.erl:1934
  %% Aliased:
  %%    _251, 
  %%    K1, 
  %%    V1
  _252 = put_map `assoc`, _251, K1, V1

  %% map_SUITE.erl:1934
  %% Aliased:
  %%    _252, 
  %%    K2, 
  %%    V2
  _253 = put_map `assoc`, _252, K2, V2

  %% map_SUITE.erl:1934
  %% Aliased:
  %%    _253, 
  %%    K3, 
  %%    V3
  _254 = put_map `assoc`, _253, K3, V3

  %% map_SUITE.erl:1934
  %% Aliased:
  %%    _254, 
  %%    K4
  _255 = put_map `assoc`, _254, K4, `"nope"`

  %% map_SUITE.erl:1934
  %% Aliased:
  %%    _255
  _40 = put_map `assoc`, _255, `"4"`, `"ok"`

  %% map_SUITE.erl:1934
  %% Aliased:
  %%    _40
  _256 = call (`id`/1), _40

  %% Aliased:
  %%    _256
  _478 = succeeded:body _256
  br _478, ^478, ^1

478:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _256
  _753 = bif:is_map _256
  br _753, ^753, ^480

753:
  %% Argument types:
  %%    _256 => map()
  %% Aliased:
  %%    _256
  _481 = has_map_field _256, `a`
  br _481, ^481, ^480

481:
  %% Argument types:
  %%    _256 => map()
  %% Aliased:
  %%    _256
  _482 = has_map_field _256, `b`
  br _482, ^482, ^480

482:
  %% Argument types:
  %%    _256 => map()
  %% Aliased:
  %%    _256
  _261 = get_map_element _256, `"4"`

  %% Aliased:
  %%    _261
  _483 = succeeded:guard _261
  br _483, ^483, ^480

483:
  %% Argument types:
  %%    _256 => map()
  %% Aliased:
  %%    _256, 
  %%    K1
  _484 = has_map_field _256, K1
  br _484, ^484, ^480

484:
  %% Argument types:
  %%    _256 => map()
  %% Aliased:
  %%    _256, 
  %%    K2
  _485 = has_map_field _256, K2
  br _485, ^485, ^480

485:
  %% Argument types:
  %%    _256 => map()
  %% Aliased:
  %%    _256, 
  %%    K3
  _258 = get_map_element _256, K3

  %% Aliased:
  %%    _258
  _486 = succeeded:guard _258
  br _486, ^486, ^480

486:
  %% Argument types:
  %%    _256 => map()
  %% Aliased:
  %%    _256, 
  %%    K4
  _257 = get_map_element _256, K4

  %% Aliased:
  %%    _257
  _487 = succeeded:guard _257
  br _487, ^487, ^480

487:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _261
  _752 = bif:'=:=' _261, `"ok"`
  br _752, ^752, ^480

752:
  %% map_SUITE.erl:1933
  %% Argument types:
  %%    
  %% Aliased:
  %%    _258, 
  %%    V3
  _154 = bif:'=:=' _258, V3
  br _154, ^795, ^480

795:
  %% map_SUITE.erl:1933
  %% Argument types:
  %%    _261 => nonempty_list(107..111)
  %% Aliased:
  %%    _257, 
  %%    _261
  _155 = bif:'=:=' _257, _261
  br _155, ^489, ^480

489:
  %% map_SUITE.erl:1937
  %% Result type:
  %%    'ok'
  _265 = call (`match_function_map_neg_keys`/1), `#{-3 => c,-2 => b,-1 => a}`

  %% Unique:
  %%    _265
  _490 = succeeded:body _265
  br _490, ^749, ^1

749:
  %% map_SUITE.erl:1940
  %% Aliased:
  %%    K0
  _47 = put_map `assoc`, `#{}`, K0, `42`

  %% map_SUITE.erl:1940
  %% Aliased:
  %%    _47
  _266 = call (`id`/1), _47

  %% Aliased:
  %%    _266
  _493 = succeeded:body _266
  br _493, ^493, ^1

493:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _266
  _747 = bif:is_map _266
  br _747, ^747, ^495

747:
  %% Argument types:
  %%    _266 => map()
  %% Aliased:
  %%    _266, 
  %%    K0
  _267 = get_map_element _266, K0

  %% Aliased:
  %%    _267
  _496 = succeeded:guard _267
  br _496, ^496, ^495

496:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _746 = bif:'=:=' _267, `42`
  br _746, ^745, ^495

745:
  %% map_SUITE.erl:1941
  %% Aliased:
  %%    K7
  _49 = put_map `assoc`, `#{}`, K7, `42`

  %% map_SUITE.erl:1941
  %% Aliased:
  %%    _49
  _268 = call (`id`/1), _49

  %% Aliased:
  %%    _268
  _497 = succeeded:body _268
  br _497, ^497, ^1

497:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _268
  _743 = bif:is_map _268
  br _743, ^743, ^499

743:
  %% Argument types:
  %%    _268 => map()
  %% Aliased:
  %%    _268, 
  %%    K7
  _269 = get_map_element _268, K7

  %% Aliased:
  %%    _269
  _500 = succeeded:guard _269
  br _500, ^500, ^499

500:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _269
  _742 = bif:'=:=' _269, `42`
  br _742, ^741, ^499

741:
  %% map_SUITE.erl:1944
  KNIL = call (`id`/1), `[]`

  %% Aliased:
  %%    KNIL
  _501 = succeeded:body KNIL
  br _501, ^501, ^1

501:
  %% map_SUITE.erl:1945
  %% Aliased:
  %%    KNIL
  _270 = put_map `assoc`, `#{}`, KNIL, `ok`

  %% map_SUITE.erl:1945
  %% Aliased:
  %%    _270
  _52 = put_map `assoc`, _270, `1`, `2`

  %% map_SUITE.erl:1945
  %% Aliased:
  %%    _52
  _271 = call (`id`/1), _52

  %% Aliased:
  %%    _271
  _502 = succeeded:body _271
  br _502, ^502, ^1

502:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _271
  _739 = bif:is_map _271
  br _739, ^739, ^504

739:
  %% Argument types:
  %%    _271 => map()
  %% Aliased:
  %%    _271
  _273 = get_map_element _271, `1`

  %% Aliased:
  %%    _273
  _505 = succeeded:guard _273
  br _505, ^505, ^504

505:
  %% Argument types:
  %%    _271 => map()
  %% Aliased:
  %%    _271, 
  %%    KNIL
  _272 = get_map_element _271, KNIL

  %% Aliased:
  %%    _272
  _506 = succeeded:guard _272
  br _506, ^506, ^504

506:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _273
  _738 = bif:'=:=' _273, `2`
  br _738, ^737, ^504

737:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _272
  _736 = bif:'=:=' _272, `ok`
  br _736, ^735, ^504

735:
  %% map_SUITE.erl:1947
  %% Argument types:
  %%    
  %% Anno: #{unit => 2}
  Bin = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `258`

  %% Aliased:
  %%    Bin
  _507 = succeeded:body Bin
  br _507, ^507, ^1

507:
  %% map_SUITE.erl:1948
  %% Argument types:
  %%    
  %% Anno: #{unit => 2}
  _55 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `258`

  %% Aliased:
  %%    _55
  _508 = succeeded:body _55
  br _508, ^508, ^1

508:
  %% map_SUITE.erl:1948
  %% Aliased:
  %%    _55
  _56 = put_map `assoc`, `#{}`, _55, `"three"`

  %% map_SUITE.erl:1948
  %% Aliased:
  %%    _56
  _274 = call (`id`/1), _56

  %% Aliased:
  %%    _274
  _509 = succeeded:body _274
  br _509, ^509, ^1

509:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _274
  _733 = bif:is_map _274
  br _733, ^733, ^511

733:
  %% Argument types:
  %%    _274 => map()
  %%    Bin => bitstring(2)
  %% Aliased:
  %%    _274, 
  %%    Bin
  _275 = get_map_element _274, Bin

  %% Aliased:
  %%    _275
  _512 = succeeded:guard _275
  br _512, ^512, ^511

512:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _275
  _732 = bif:'=:=' _275, `"three"`
  br _732, ^732, ^511

732:
  %% map_SUITE.erl:1951
  %% Aliased:
  %%    K5
  _58 = put_map `assoc`, `#{}`, K5, `3`
  _516 = new_try_tag `'catch'`
  br _516, ^867, ^515

867:
  %% map_SUITE.erl:1951
  %% Aliased:
  %%    _58
  _156 = call (`id`/1), _58

  %% Aliased:
  %%    _156
  _518 = succeeded:body _156
  br _518, ^518, ^515

518:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _156
  _527 = bif:is_map _156
  br _527, ^527, ^520

527:
  %% Argument types:
  %%    _156 => map()
  %% Aliased:
  %%    _156
  _277 = get_map_element _156, `x`

  %% Aliased:
  %%    _277
  _521 = succeeded:guard _277
  br _521, ^521, ^520

521:
  %% Argument types:
  %%    _156 => map()
  %% Aliased:
  %%    _156, 
  %%    K5
  _276 = get_map_element _156, K5

  %% Aliased:
  %%    _276
  _522 = succeeded:guard _276
  br _522, ^522, ^520

522:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _277
  _526 = bif:'=:=' _277, `2`
  br _526, ^525, ^520

525:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _276
  _524 = bif:'=:=' _276, `3`
  br _524, ^523, ^520

523:
  br ^513

520:
  %% map_SUITE.erl:1951
  %% Aliased:
  %%    _156
  _321 = match_fail `badmatch`, _156

  %% Unique:
  %%    _321
  _528 = succeeded:body _321
  br ^515

515:
  %% Unique:
  %%    _516
  _531 = landingpad `'catch'`, _516

  %% Aliased:
  %%    _531
  _529 = extract _531, `0`
  br ^513

513:
  _532 = phi { _529, ^515 }, { _156, ^523 }

  %% Aliased:
  %%    _532
  %% Unique:
  %%    _516
  _60 = catch_end _516, _532

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _728 = is_tagged_tuple _60, `2`, `'EXIT'`
  br _728, ^725, ^534

725:
  %% Argument types:
  %%    _60 => {''EXIT'', any()}
  %% Aliased:
  %%    _60
  _278 = get_tuple_element _60, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _278
  _722 = bif:is_tuple _278
  br _722, ^722, ^534

722:
  %% Argument types:
  %%    _278 => {...}
  %% Aliased:
  %%    _278
  _723 = bif:tuple_size _278

  %% Argument types:
  %%    _723 => 0..16777215
  %% Unique:
  %%    _723
  _724 = bif:'=:=' _723, `2`
  br _724, ^721, ^534

721:
  %% Argument types:
  %%    _278 => {any(), any()}
  %% Aliased:
  %%    _278
  _281 = get_tuple_element _278, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _281
  _718 = is_tagged_tuple _281, `2`, `badmatch`
  br _718, ^715, ^534

715:
  %% map_SUITE.erl:1952
  %% Aliased:
  %%    K5
  _62 = put_map `assoc`, `#{}`, K5, `3`
  _538 = new_try_tag `'catch'`
  br _538, ^868, ^537

868:
  %% map_SUITE.erl:1952
  %% Aliased:
  %%    _62
  _159 = call (`id`/1), _62

  %% Aliased:
  %%    _159
  _540 = succeeded:body _159
  br _540, ^540, ^537

540:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _546 = bif:is_map _159
  br _546, ^546, ^542

546:
  %% Argument types:
  %%    _159 => map()
  %% Aliased:
  %%    _159, 
  %%    K5
  _284 = get_map_element _159, K5

  %% Aliased:
  %%    _284
  _543 = succeeded:guard _284
  br _543, ^543, ^542

543:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _284
  _545 = bif:'=:=' _284, `2`
  br _545, ^544, ^542

544:
  br ^535

542:
  %% map_SUITE.erl:1952
  %% Aliased:
  %%    _159
  _324 = match_fail `badmatch`, _159

  %% Unique:
  %%    _324
  _547 = succeeded:body _324
  br ^537

537:
  %% Unique:
  %%    _538
  _550 = landingpad `'catch'`, _538

  %% Aliased:
  %%    _550
  _548 = extract _550, `0`
  br ^535

535:
  _551 = phi { _548, ^537 }, { _159, ^544 }

  %% Aliased:
  %%    _551
  %% Unique:
  %%    _538
  _64 = catch_end _538, _551

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _711 = is_tagged_tuple _64, `2`, `'EXIT'`
  br _711, ^708, ^553

708:
  %% Argument types:
  %%    _64 => {''EXIT'', any()}
  %% Aliased:
  %%    _64
  _285 = get_tuple_element _64, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _285
  _705 = bif:is_tuple _285
  br _705, ^705, ^553

705:
  %% Argument types:
  %%    _285 => {...}
  %% Aliased:
  %%    _285
  _706 = bif:tuple_size _285

  %% Argument types:
  %%    _706 => 0..16777215
  %% Unique:
  %%    _706
  _707 = bif:'=:=' _706, `2`
  br _707, ^704, ^553

704:
  %% Argument types:
  %%    _285 => {any(), any()}
  %% Aliased:
  %%    _285
  _288 = get_tuple_element _285, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _288
  _701 = is_tagged_tuple _288, `2`, `badmatch`
  br _701, ^963, ^553

963:
  br ^967

967:
  _557 = new_try_tag `'catch'`
  br _557, ^555, ^556

555:
  %% map_SUITE.erl:1953
  _162 = call (`id`/1), `{a,b,c}`

  %% Aliased:
  %%    _162
  _559 = succeeded:body _162
  br _559, ^559, ^556

559:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _162
  _565 = bif:is_map _162
  br _565, ^565, ^561

565:
  %% Argument types:
  %%    _162 => map()
  %% Aliased:
  %%    _162, 
  %%    K5
  _291 = get_map_element _162, K5

  %% Aliased:
  %%    _291
  _562 = succeeded:guard _291
  br _562, ^562, ^561

562:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _291
  _564 = bif:'=:=' _291, `3`
  br _564, ^563, ^561

563:
  br ^554

561:
  %% map_SUITE.erl:1953
  %% Aliased:
  %%    _162
  _327 = match_fail `badmatch`, _162

  %% Unique:
  %%    _327
  _566 = succeeded:body _327
  br ^556

556:
  %% Unique:
  %%    _557
  _569 = landingpad `'catch'`, _557

  %% Aliased:
  %%    _569
  _567 = extract _569, `0`
  br ^554

554:
  _570 = phi { _567, ^556 }, { _162, ^563 }

  %% Aliased:
  %%    _570
  %% Unique:
  %%    _557
  _67 = catch_end _557, _570

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _694 = is_tagged_tuple _67, `2`, `'EXIT'`
  br _694, ^691, ^572

691:
  %% Argument types:
  %%    _67 => {''EXIT'', any()}
  %% Aliased:
  %%    _67
  _292 = get_tuple_element _67, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _292
  _688 = bif:is_tuple _292
  br _688, ^688, ^572

688:
  %% Argument types:
  %%    _292 => {...}
  %% Aliased:
  %%    _292
  _689 = bif:tuple_size _292

  %% Argument types:
  %%    _689 => 0..16777215
  %% Unique:
  %%    _689
  _690 = bif:'=:=' _689, `2`
  br _690, ^687, ^572

687:
  %% Argument types:
  %%    _292 => {any(), any()}
  %% Aliased:
  %%    _292
  _295 = get_tuple_element _292, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _295
  _684 = is_tagged_tuple _295, `2`, `badmatch`
  br _684, ^681, ^572

681:
  %% map_SUITE.erl:1954
  %% Aliased:
  %%    K6
  _69 = put_map `assoc`, `#{}`, K6, `3`
  _576 = new_try_tag `'catch'`
  br _576, ^869, ^575

869:
  %% map_SUITE.erl:1954
  %% Aliased:
  %%    _69
  _165 = call (`id`/1), _69

  %% Aliased:
  %%    _165
  _578 = succeeded:body _165
  br _578, ^578, ^575

578:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _165
  _584 = bif:is_map _165
  br _584, ^584, ^580

584:
  %% Argument types:
  %%    _165 => map()
  %% Aliased:
  %%    _165, 
  %%    K5
  _298 = get_map_element _165, K5

  %% Aliased:
  %%    _298
  _581 = succeeded:guard _298
  br _581, ^581, ^580

581:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _298
  _583 = bif:'=:=' _298, `3`
  br _583, ^582, ^580

582:
  br ^573

580:
  %% map_SUITE.erl:1954
  %% Aliased:
  %%    _165
  _330 = match_fail `badmatch`, _165

  %% Unique:
  %%    _330
  _585 = succeeded:body _330
  br ^575

575:
  %% Unique:
  %%    _576
  _588 = landingpad `'catch'`, _576

  %% Aliased:
  %%    _588
  _586 = extract _588, `0`
  br ^573

573:
  _589 = phi { _586, ^575 }, { _165, ^582 }

  %% Aliased:
  %%    _589
  %% Unique:
  %%    _576
  _71 = catch_end _576, _589

  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _677 = is_tagged_tuple _71, `2`, `'EXIT'`
  br _677, ^674, ^591

674:
  %% Argument types:
  %%    _71 => {''EXIT'', any()}
  %% Aliased:
  %%    _71
  _299 = get_tuple_element _71, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _299
  _671 = bif:is_tuple _299
  br _671, ^671, ^591

671:
  %% Argument types:
  %%    _299 => {...}
  %% Aliased:
  %%    _299
  _672 = bif:tuple_size _299

  %% Argument types:
  %%    _672 => 0..16777215
  %% Unique:
  %%    _672
  _673 = bif:'=:=' _672, `2`
  br _673, ^670, ^591

670:
  %% Argument types:
  %%    _299 => {any(), any()}
  %% Aliased:
  %%    _299
  _302 = get_tuple_element _299, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _302
  _667 = is_tagged_tuple _302, `2`, `badmatch`
  br _667, ^965, ^591

965:
  br ^968

968:
  _595 = new_try_tag `'catch'`
  br _595, ^593, ^594

593:
  %% map_SUITE.erl:1955
  %% Aliased:
  %%    K7
  _168 = call (`id`/1), K7

  %% Aliased:
  %%    _168
  _597 = succeeded:body _168
  br _597, ^597, ^594

597:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _168
  _603 = bif:is_map _168
  br _603, ^603, ^599

603:
  %% Argument types:
  %%    _168 => map()
  %% Aliased:
  %%    _168, 
  %%    K5
  _305 = get_map_element _168, K5

  %% Aliased:
  %%    _305
  _600 = succeeded:guard _305
  br _600, ^600, ^599

600:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _305
  _602 = bif:'=:=' _305, `3`
  br _602, ^601, ^599

601:
  br ^592

599:
  %% map_SUITE.erl:1955
  %% Aliased:
  %%    _168
  _333 = match_fail `badmatch`, _168

  %% Unique:
  %%    _333
  _604 = succeeded:body _333
  br ^594

594:
  %% Unique:
  %%    _595
  _607 = landingpad `'catch'`, _595

  %% Aliased:
  %%    _607
  _605 = extract _607, `0`
  br ^592

592:
  _608 = phi { _605, ^594 }, { _168, ^601 }

  %% Aliased:
  %%    _608
  %% Unique:
  %%    _595
  _74 = catch_end _595, _608

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _660 = is_tagged_tuple _74, `2`, `'EXIT'`
  br _660, ^657, ^610

657:
  %% Argument types:
  %%    _74 => {''EXIT'', any()}
  %% Aliased:
  %%    _74
  _306 = get_tuple_element _74, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _306
  _654 = bif:is_tuple _306
  br _654, ^654, ^610

654:
  %% Argument types:
  %%    _306 => {...}
  %% Aliased:
  %%    _306
  _655 = bif:tuple_size _306

  %% Argument types:
  %%    _655 => 0..16777215
  %% Unique:
  %%    _655
  _656 = bif:'=:=' _655, `2`
  br _656, ^653, ^610

653:
  %% Argument types:
  %%    _306 => {any(), any()}
  %% Aliased:
  %%    _306
  _309 = get_tuple_element _306, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _309
  _650 = is_tagged_tuple _309, `2`, `badmatch`
  br _650, ^647, ^610

647:
  %% map_SUITE.erl:1956
  %% Aliased:
  %%    K7
  _76 = put_map `assoc`, `#{}`, K7, `42`
  _614 = new_try_tag `'catch'`
  br _614, ^870, ^613

870:
  %% map_SUITE.erl:1956
  %% Aliased:
  %%    _76
  _171 = call (`id`/1), _76

  %% Aliased:
  %%    _171
  _616 = succeeded:body _171
  br _616, ^616, ^613

616:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _171
  _622 = bif:is_map _171
  br _622, ^622, ^618

622:
  %% Argument types:
  %%    _171 => map()
  %% Aliased:
  %%    _171, 
  %%    K7
  _312 = get_map_element _171, K7

  %% Aliased:
  %%    _312
  _619 = succeeded:guard _312
  br _619, ^619, ^618

619:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _312
  _621 = bif:'=:=' _312, `3`
  br _621, ^620, ^618

620:
  br ^611

618:
  %% map_SUITE.erl:1956
  %% Aliased:
  %%    _171
  _336 = match_fail `badmatch`, _171

  %% Unique:
  %%    _336
  _623 = succeeded:body _336
  br ^613

613:
  %% Unique:
  %%    _614
  _626 = landingpad `'catch'`, _614

  %% Aliased:
  %%    _626
  _624 = extract _626, `0`
  br ^611

611:
  _627 = phi { _624, ^613 }, { _171, ^620 }

  %% Aliased:
  %%    _627
  %% Unique:
  %%    _614
  _78 = catch_end _614, _627

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _643 = is_tagged_tuple _78, `2`, `'EXIT'`
  br _643, ^640, ^629

640:
  %% Argument types:
  %%    _78 => {''EXIT'', any()}
  %% Aliased:
  %%    _78
  _313 = get_tuple_element _78, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _313
  _637 = bif:is_tuple _313
  br _637, ^637, ^629

637:
  %% Argument types:
  %%    _313 => {...}
  %% Aliased:
  %%    _313
  _638 = bif:tuple_size _313

  %% Argument types:
  %%    _638 => 0..16777215
  %% Unique:
  %%    _638
  _639 = bif:'=:=' _638, `2`
  br _639, ^636, ^629

636:
  %% Argument types:
  %%    _313 => {any(), any()}
  %% Aliased:
  %%    _313
  _316 = get_tuple_element _313, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _316
  _633 = is_tagged_tuple _316, `2`, `badmatch`
  br _633, ^630, ^629

630:
  %% Result type:
  %%    'ok'
  ret `ok`

629:
  %% map_SUITE.erl:1956
  %% Aliased:
  %%    _78
  _337 = match_fail `badmatch`, _78

  %% Unique:
  %%    _337
  _646 = succeeded:body _337
  br ^1

610:
  %% map_SUITE.erl:1955
  %% Aliased:
  %%    _74
  _338 = match_fail `badmatch`, _74

  %% Unique:
  %%    _338
  _663 = succeeded:body _338
  br ^1

591:
  %% map_SUITE.erl:1954
  %% Aliased:
  %%    _71
  _339 = match_fail `badmatch`, _71

  %% Unique:
  %%    _339
  _680 = succeeded:body _339
  br ^1

572:
  %% map_SUITE.erl:1953
  %% Aliased:
  %%    _67
  _340 = match_fail `badmatch`, _67

  %% Unique:
  %%    _340
  _697 = succeeded:body _340
  br ^1

553:
  %% map_SUITE.erl:1952
  %% Aliased:
  %%    _64
  _341 = match_fail `badmatch`, _64

  %% Unique:
  %%    _341
  _714 = succeeded:body _341
  br ^1

534:
  %% map_SUITE.erl:1951
  %% Aliased:
  %%    _60
  _342 = match_fail `badmatch`, _60

  %% Unique:
  %%    _342
  _731 = succeeded:body _342
  br ^1

511:
  %% map_SUITE.erl:1948
  %% Aliased:
  %%    _274
  _343 = match_fail `badmatch`, _274

  %% Unique:
  %%    _343
  _734 = succeeded:body _343
  br ^1

504:
  %% map_SUITE.erl:1945
  %% Aliased:
  %%    _271
  _344 = match_fail `badmatch`, _271

  %% Unique:
  %%    _344
  _740 = succeeded:body _344
  br ^1

499:
  %% map_SUITE.erl:1941
  %% Aliased:
  %%    _268
  _345 = match_fail `badmatch`, _268

  %% Unique:
  %%    _345
  _744 = succeeded:body _345
  br ^1

495:
  %% map_SUITE.erl:1940
  %% Aliased:
  %%    _266
  _346 = match_fail `badmatch`, _266

  %% Unique:
  %%    _346
  _748 = succeeded:body _346
  br ^1

480:
  %% map_SUITE.erl:1933
  %% Aliased:
  %%    _256
  _348 = match_fail `badmatch`, _256

  %% Unique:
  %%    _348
  _754 = succeeded:body _348
  br ^1

473:
  %% map_SUITE.erl:1930
  %% Aliased:
  %%    _247
  _349 = match_fail `badmatch`, _247

  %% Unique:
  %%    _349
  _757 = succeeded:body _349
  br ^1

462:
  %% map_SUITE.erl:1928
  %% Aliased:
  %%    _239
  _350 = match_fail `badmatch`, _239

  %% Unique:
  %%    _350
  _761 = succeeded:body _350
  br ^1

454:
  %% map_SUITE.erl:1926
  %% Aliased:
  %%    _232
  _351 = match_fail `badmatch`, _232

  %% Unique:
  %%    _351
  _767 = succeeded:body _351
  br ^1

446:
  %% map_SUITE.erl:1925
  %% Aliased:
  %%    _226
  _352 = match_fail `badmatch`, _226

  %% Unique:
  %%    _352
  _773 = succeeded:body _352
  br ^1

441:
  %% map_SUITE.erl:1924
  %% Aliased:
  %%    _222
  _353 = match_fail `badmatch`, _222

  %% Unique:
  %%    _353
  _779 = succeeded:body _353
  br ^1

426:
  %% map_SUITE.erl:1922
  %% Aliased:
  %%    _213
  _354 = match_fail `badmatch`, _213

  %% Unique:
  %%    _354
  _781 = succeeded:body _354
  br ^1

413:
  %% map_SUITE.erl:1921
  %% Aliased:
  %%    _201
  _355 = match_fail `badmatch`, _201

  %% Unique:
  %%    _355
  _783 = succeeded:body _355
  br ^1

402:
  %% map_SUITE.erl:1920
  %% Aliased:
  %%    _191
  _356 = match_fail `badmatch`, _191

  %% Unique:
  %%    _356
  _785 = succeeded:body _356
  br ^1

393:
  %% map_SUITE.erl:1919
  %% Aliased:
  %%    _183
  _357 = match_fail `badmatch`, _183

  %% Unique:
  %%    _357
  _787 = succeeded:body _357
  br ^1

386:
  %% map_SUITE.erl:1918
  %% Aliased:
  %%    _177
  _358 = match_fail `badmatch`, _177

  %% Unique:
  %%    _358
  _789 = succeeded:body _358
  br ^1

381:
  %% map_SUITE.erl:1917
  %% Aliased:
  %%    _174
  _359 = match_fail `badmatch`, _174

  %% Unique:
  %%    _359
  _791 = succeeded:body _359
  br ^1

363:
  %% map_SUITE.erl:1908
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_build_and_match_variables/1-',1}}
  _360 = match_fail `function_clause`, _0

  %% Unique:
  %%    _360
  _792 = succeeded:body _360
  br ^1

1:
  _361 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _361
}

%% map_SUITE.erl:1960
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{-3..-1=>'a' | 'b' | 'c'}
function `map_SUITE`:`match_function_map_neg_keys`(_0) {
0:
  %% Argument types:
  %%    _0 => #{-3..-1=>'a' | 'b' | 'c'}
  %% Aliased:
  %%    _0
  _4 = get_map_element _0, `-3`

  %% Aliased:
  %%    _4
  _9 = succeeded:guard _4
  br _9, ^9, ^8

9:
  %% Argument types:
  %%    _0 => #{-3..-1=>'a' | 'b' | 'c'}
  %% Aliased:
  %%    _0
  _3 = get_map_element _0, `-2`

  %% Aliased:
  %%    _3
  _10 = succeeded:guard _3
  br _10, ^10, ^8

10:
  %% Argument types:
  %%    _0 => #{-3..-1=>'a' | 'b' | 'c'}
  %% Aliased:
  %%    _0
  _2 = get_map_element _0, `-1`

  %% Aliased:
  %%    _2
  _11 = succeeded:guard _2
  br _11, ^11, ^8

11:
  %% Argument types:
  %%    _4 => 'a' | 'b' | 'c'
  %% Unique:
  %%    _4
  _17 = bif:'=:=' _4, `c`
  br _17, ^16, ^8

16:
  %% Argument types:
  %%    _3 => 'a' | 'b' | 'c'
  %% Unique:
  %%    _3
  _15 = bif:'=:=' _3, `b`
  br _15, ^14, ^8

14:
  %% Argument types:
  %%    _2 => 'a' | 'b' | 'c'
  %% Unique:
  %%    _2
  _13 = bif:'=:=' _2, `a`
  br _13, ^12, ^8

12:
  %% Result type:
  %%    'ok'
  ret `ok`

8:
  %% map_SUITE.erl:1960
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-match_function_map_neg_keys/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _19 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% map_SUITE.erl:1962
%% Counter = 321
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_assoc_variables`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _113 = bif:is_list _0
  br _113, ^113, ^112

113:
  %% map_SUITE.erl:1963
  K1 = call (`id`/1), `1`

  %% Aliased:
  %%    K1
  _114 = succeeded:body K1
  br _114, ^114, ^1

114:
  %% map_SUITE.erl:1964
  K2 = call (`id`/1), `2`

  %% Aliased:
  %%    K2
  _115 = succeeded:body K2
  br _115, ^115, ^1

115:
  %% map_SUITE.erl:1965
  K3 = call (`id`/1), `3.0`

  %% Aliased:
  %%    K3
  _116 = succeeded:body K3
  br _116, ^116, ^1

116:
  %% map_SUITE.erl:1966
  K4 = call (`id`/1), `4`

  %% Aliased:
  %%    K4
  _117 = succeeded:body K4
  br _117, ^117, ^1

117:
  %% map_SUITE.erl:1967
  K5 = call (`id`/1), `5`

  %% Aliased:
  %%    K5
  _118 = succeeded:body K5
  br _118, ^118, ^1

118:
  %% map_SUITE.erl:1968
  K6 = call (`id`/1), `2.0`

  %% Aliased:
  %%    K6
  _119 = succeeded:body K6
  br _119, ^119, ^1

119:
  %% map_SUITE.erl:1970
  %% Aliased:
  %%    K1
  _44 = put_map `assoc`, `#{}`, K1, `a`

  %% map_SUITE.erl:1970
  %% Aliased:
  %%    _44, 
  %%    K2
  _45 = put_map `assoc`, _44, K2, `b`

  %% map_SUITE.erl:1970
  %% Aliased:
  %%    _45, 
  %%    K3
  _46 = put_map `assoc`, _45, K3, `c`

  %% map_SUITE.erl:1970
  %% Aliased:
  %%    _46, 
  %%    K4
  _47 = put_map `assoc`, _46, K4, `d`

  %% map_SUITE.erl:1970
  %% Aliased:
  %%    _47, 
  %%    K5
  M0 = put_map `assoc`, _47, K5, `e`

  %% map_SUITE.erl:1972
  %% Aliased:
  %%    K1, 
  %%    M0
  _48 = put_map `assoc`, M0, K1, `42`

  %% map_SUITE.erl:1972
  %% Aliased:
  %%    _48, 
  %%    K2
  _49 = put_map `assoc`, _48, K2, `100`

  %% map_SUITE.erl:1972
  %% Aliased:
  %%    _49, 
  %%    K4
  _84 = put_map `assoc`, _49, K4, `[a,b,c]`

  %% Argument types:
  %%    _84 => #{any()=>'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _84
  _54 = get_map_element _84, `1`

  %% Aliased:
  %%    _54
  _126 = succeeded:guard _54
  br _126, ^126, ^125

126:
  %% Argument types:
  %%    _84 => #{any()=>'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _84
  _53 = get_map_element _84, `2`

  %% Aliased:
  %%    _53
  _127 = succeeded:guard _53
  br _127, ^127, ^125

127:
  %% Argument types:
  %%    _84 => #{any()=>'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _84
  _52 = get_map_element _84, `4`

  %% Aliased:
  %%    _52
  _128 = succeeded:guard _52
  br _128, ^128, ^125

128:
  %% Argument types:
  %%    _84 => #{any()=>'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _84
  _51 = get_map_element _84, `5`

  %% Aliased:
  %%    _51
  _129 = succeeded:guard _51
  br _129, ^129, ^125

129:
  %% Argument types:
  %%    _84 => #{any()=>'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _84
  _50 = get_map_element _84, `3.0`

  %% Aliased:
  %%    _50
  _130 = succeeded:guard _50
  br _130, ^130, ^125

130:
  %% Argument types:
  %%    _54 => 'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _54
  _282 = bif:'=:=' _54, `42`
  br _282, ^281, ^125

281:
  %% Argument types:
  %%    _53 => 'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _53
  _280 = bif:'=:=' _53, `100`
  br _280, ^279, ^125

279:
  %% Argument types:
  %%    _52 => 'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _52
  _278 = bif:'=:=' _52, `[a,b,c]`
  br _278, ^278, ^125

278:
  %% Argument types:
  %%    _51 => 'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _51
  _277 = bif:'=:=' _51, `e`
  br _277, ^276, ^125

276:
  %% Argument types:
  %%    _50 => 'a' | 'b' | 'c' | 'd' | 'e' | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _50
  _275 = bif:'=:=' _50, `c`
  br _275, ^133, ^125

133:
  %% map_SUITE.erl:1974
  %% Aliased:
  %%    M0
  _55 = put_map `assoc`, M0, `1.0`, `float`, `2.0`, `wrong`

  %% map_SUITE.erl:1974
  %% Aliased:
  %%    _55
  _56 = put_map `exact`, _55, `1`, `42`

  %% Aliased:
  %%    _56
  _134 = succeeded:body _56
  br _134, ^134, ^1

134:
  %% map_SUITE.erl:1974
  %% Aliased:
  %%    _56, 
  %%    K6
  _57 = put_map `assoc`, _56, K6, `100`

  %% map_SUITE.erl:1974
  %% Aliased:
  %%    _57
  _86 = put_map `assoc`, _57, `4.0`, `[a,b,c]`

  %% Argument types:
  %%    _86 => #{any()=>atom() | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _86
  _64 = get_map_element _86, `1`

  %% Aliased:
  %%    _64
  _138 = succeeded:guard _64
  br _138, ^138, ^137

138:
  %% Argument types:
  %%    _86 => #{any()=>atom() | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _86
  _63 = get_map_element _86, `2`

  %% Aliased:
  %%    _63
  _139 = succeeded:guard _63
  br _139, ^139, ^137

139:
  %% Argument types:
  %%    _86 => #{any()=>atom() | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _86
  _62 = get_map_element _86, `4`

  %% Aliased:
  %%    _62
  _140 = succeeded:guard _62
  br _140, ^140, ^137

140:
  %% Argument types:
  %%    _86 => #{any()=>atom() | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _86
  _61 = get_map_element _86, `5`

  %% Aliased:
  %%    _61
  _141 = succeeded:guard _61
  br _141, ^141, ^137

141:
  %% Argument types:
  %%    _86 => #{any()=>atom() | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _86
  _60 = get_map_element _86, `2.0`

  %% Aliased:
  %%    _60
  _142 = succeeded:guard _60
  br _142, ^143, ^137

143:
  %% Argument types:
  %%    _86 => #{any()=>atom() | nonempty_list('a' | 'b' | 'c') | 42..100}
  %% Aliased:
  %%    _86, 
  %%    K3
  _58 = get_map_element _86, K3

  %% Aliased:
  %%    _58
  _144 = succeeded:guard _58
  br _144, ^144, ^137

144:
  %% Argument types:
  %%    _64 => atom() | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _64
  _271 = bif:'=:=' _64, `42`
  br _271, ^270, ^137

270:
  %% Argument types:
  %%    _63 => atom() | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _63
  _269 = bif:'=:=' _63, `b`
  br _269, ^268, ^137

268:
  %% Argument types:
  %%    _62 => atom() | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _62
  _267 = bif:'=:=' _62, `d`
  br _267, ^266, ^137

266:
  %% Argument types:
  %%    _61 => atom() | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _61
  _265 = bif:'=:=' _61, `e`
  br _265, ^264, ^137

264:
  %% Argument types:
  %%    _60 => atom() | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _60
  _263 = bif:'=:=' _60, `100`
  br _263, ^261, ^137

261:
  %% Argument types:
  %%    _58 => atom() | nonempty_list('a' | 'b' | 'c') | 42..100
  %% Aliased:
  %%    _58
  _260 = bif:'=:=' _58, `c`
  br _260, ^147, ^137

147:
  %% map_SUITE.erl:1976
  %% Aliased:
  %%    K3, 
  %%    M0
  _88 = put_map `assoc`, M0, K3, `new`

  %% Argument types:
  %%    _88 => #{any()=>atom()}
  %% Aliased:
  %%    _88
  _69 = get_map_element _88, `1`

  %% Aliased:
  %%    _69
  _151 = succeeded:guard _69
  br _151, ^151, ^150

151:
  %% Argument types:
  %%    _88 => #{any()=>atom()}
  %% Aliased:
  %%    _88
  _68 = get_map_element _88, `2`

  %% Aliased:
  %%    _68
  _152 = succeeded:guard _68
  br _152, ^152, ^150

152:
  %% Argument types:
  %%    _88 => #{any()=>atom()}
  %% Aliased:
  %%    _88
  _67 = get_map_element _88, `4`

  %% Aliased:
  %%    _67
  _153 = succeeded:guard _67
  br _153, ^153, ^150

153:
  %% Argument types:
  %%    _88 => #{any()=>atom()}
  %% Aliased:
  %%    _88
  _66 = get_map_element _88, `5`

  %% Aliased:
  %%    _66
  _154 = succeeded:guard _66
  br _154, ^155, ^150

155:
  %% Argument types:
  %%    _69 => atom()
  %% Unique:
  %%    _69
  _256 = bif:'=:=' _69, `a`
  br _256, ^255, ^150

255:
  %% Argument types:
  %%    _68 => atom()
  %% Unique:
  %%    _68
  _254 = bif:'=:=' _68, `b`
  br _254, ^253, ^150

253:
  %% Argument types:
  %%    _67 => atom()
  %% Unique:
  %%    _67
  _252 = bif:'=:=' _67, `d`
  br _252, ^251, ^150

251:
  %% Argument types:
  %%    _66 => atom()
  %% Unique:
  %%    _66
  _250 = bif:'=:=' _66, `e`
  br _250, ^158, ^150

158:
  %% map_SUITE.erl:1978
  %% Aliased:
  %%    M0
  _70 = put_map `exact`, M0, `3.0`, `wrong`

  %% Aliased:
  %%    _70
  _159 = succeeded:body _70
  br _159, ^159, ^1

159:
  %% map_SUITE.erl:1978
  %% Aliased:
  %%    _70, 
  %%    K3
  _90 = put_map `assoc`, _70, K3, `new`

  %% Argument types:
  %%    _90 => #{any()=>atom()}
  %%    _88 => #{any()=>atom()}
  %% Aliased:
  %%    _88, 
  %%    _90
  _163 = bif:'=:=' _90, _88
  br _163, ^163, ^162

163:
  %% map_SUITE.erl:1980
  %% Argument types:
  %%    
  %% Anno: #{unit => 2}
  _18 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `258`

  %% Aliased:
  %%    _18
  _164 = succeeded:body _18
  br _164, ^167, ^1

167:
  %% map_SUITE.erl:1980
  %% Aliased:
  %%    _18, 
  %%    M0
  _92 = put_map `assoc`, M0, _18, `val`

  %% map_SUITE.erl:1980
  %% Aliased:
  %%    _92
  _32 = call (`id`/1), _92

  %% Aliased:
  %%    _32
  _169 = succeeded:body _32
  br _169, ^169, ^1

169:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _244 = bif:is_map _32
  br _244, ^244, ^71

244:
  %% map_SUITE.erl:1980
  %% Argument types:
  %%    
  %% Anno: #{unit => 2}
  _95 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `258`

  %% Aliased:
  %%    _95
  _175 = succeeded:guard _95
  br _175, ^241, ^71

241:
  %% Argument types:
  %%    _32 => map()
  %%    _95 => bitstring(2)
  %% Aliased:
  %%    _32, 
  %%    _95
  _73 = get_map_element _32, _95

  %% Aliased:
  %%    _73
  _180 = succeeded:guard _73
  br _180, ^180, ^71

180:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _240 = bif:'=:=' _73, `val`
  br _240, ^239, ^71

239:
  %% map_SUITE.erl:1983
  BadMap = call (`id`/1), `badmap`

  %% Aliased:
  %%    BadMap
  _181 = succeeded:body BadMap
  br _181, ^317, ^1

317:
  br ^319

319:
  _185 = new_try_tag `'catch'`
  br _185, ^183, ^184

183:
  %% Argument types:
  %%    
  %% Aliased:
  %%    BadMap
  _189 = bif:is_map BadMap
  br _189, ^189, ^188

189:
  %% map_SUITE.erl:1984
  %% Aliased:
  %%    BadMap
  _98 = put_map `assoc`, BadMap, `nonexisting`, `val`
  br ^182

188:
  %% map_SUITE.erl:1984
  %% Aliased:
  %%    BadMap
  _99 = match_fail `badmap`, BadMap

  %% Unique:
  %%    _99
  _190 = succeeded:body _99
  br ^184

184:
  %% Unique:
  %%    _185
  _193 = landingpad `'catch'`, _185

  %% Aliased:
  %%    _193
  _191 = extract _193, `0`
  br ^182

182:
  _194 = phi { _191, ^184 }, { _98, ^189 }

  %% Aliased:
  %%    _194
  %% Unique:
  %%    _185
  _22 = catch_end _185, _194

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _235 = is_tagged_tuple _22, `2`, `'EXIT'`
  br _235, ^232, ^196

232:
  %% Argument types:
  %%    _22 => {''EXIT'', any()}
  %% Aliased:
  %%    _22
  _74 = get_tuple_element _22, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _229 = bif:is_tuple _74
  br _229, ^229, ^196

229:
  %% Argument types:
  %%    _74 => {...}
  %% Aliased:
  %%    _74
  _230 = bif:tuple_size _74

  %% Argument types:
  %%    _230 => 0..16777215
  %% Unique:
  %%    _230
  _231 = bif:'=:=' _230, `2`
  br _231, ^228, ^196

228:
  %% Argument types:
  %%    _74 => {any(), any()}
  %% Aliased:
  %%    _74
  _77 = get_tuple_element _74, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _225 = is_tagged_tuple _77, `2`, `badmap`
  br _225, ^222, ^196

222:
  %% Argument types:
  %%    _77 => {'badmap', any()}
  %% Aliased:
  %%    _77
  _78 = get_tuple_element _77, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78, 
  %%    BadMap
  _197 = bif:'=:=' _78, BadMap
  br _197, ^318, ^196

318:
  br ^320

320:
  _201 = new_try_tag `'catch'`
  br _201, ^199, ^200

199:
  %% map_SUITE.erl:1985
  _101 = match_fail `badmap`, `<<>>`

  %% Unique:
  %%    _101
  _203 = succeeded:body _101
  br ^200

200:
  %% Unique:
  %%    _201
  _206 = landingpad `'catch'`, _201

  %% Aliased:
  %%    _206
  _204 = extract _206, `0`
  br ^198

198:
  %% Aliased:
  %%    _204
  %% Unique:
  %%    _201
  _25 = catch_end _201, _204

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _218 = is_tagged_tuple _25, `2`, `'EXIT'`
  br _218, ^215, ^209

215:
  %% Argument types:
  %%    _25 => {''EXIT'', any()}
  %% Aliased:
  %%    _25
  _80 = get_tuple_element _25, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _212 = bif:is_tuple _80
  br _212, ^212, ^209

212:
  %% Argument types:
  %%    _80 => {...}
  %% Aliased:
  %%    _80
  _213 = bif:tuple_size _80

  %% Argument types:
  %%    _213 => 0..16777215
  %% Unique:
  %%    _213
  _214 = bif:'=:=' _213, `2`
  br _214, ^211, ^209

211:
  %% Argument types:
  %%    _80 => {any(), any()}
  %% Aliased:
  %%    _80
  _83 = get_tuple_element _80, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _210 = bif:'=:=' _83, `{badmap,<<>>}`
  br _210, ^210, ^209

210:
  %% Result type:
  %%    'ok'
  ret `ok`

209:
  %% map_SUITE.erl:1985
  %% Aliased:
  %%    _25
  _102 = match_fail `badmatch`, _25

  %% Unique:
  %%    _102
  _221 = succeeded:body _102
  br ^1

196:
  %% map_SUITE.erl:1984
  %% Aliased:
  %%    _22
  _103 = match_fail `badmatch`, _22

  %% Unique:
  %%    _103
  _238 = succeeded:body _103
  br ^1

71:
  %% map_SUITE.erl:1980
  %% Aliased:
  %%    _32
  _104 = match_fail `badmatch`, _32

  %% Unique:
  %%    _104
  _245 = succeeded:body _104
  br ^1

162:
  %% map_SUITE.erl:1978
  %% Aliased:
  %%    _90
  _105 = match_fail `badmatch`, _90

  %% Unique:
  %%    _105
  _246 = succeeded:body _105
  br ^1

150:
  %% map_SUITE.erl:1977
  %% Aliased:
  %%    _88
  _106 = match_fail `badmatch`, _88

  %% Unique:
  %%    _106
  _258 = succeeded:body _106
  br ^1

137:
  %% map_SUITE.erl:1974
  %% Aliased:
  %%    _86
  _107 = match_fail `badmatch`, _86

  %% Unique:
  %%    _107
  _273 = succeeded:body _107
  br ^1

125:
  %% map_SUITE.erl:1973
  %% Aliased:
  %%    _84
  _108 = match_fail `badmatch`, _84

  %% Unique:
  %%    _108
  _284 = succeeded:body _108
  br ^1

112:
  %% map_SUITE.erl:1962
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_assoc_variables/1-',1}}
  _109 = match_fail `function_clause`, _0

  %% Unique:
  %%    _109
  _285 = succeeded:body _109
  br ^1

1:
  _110 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _110
}

%% map_SUITE.erl:1988
%% Counter = 673
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_exact_variables`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _197 = bif:is_list _0
  br _197, ^197, ^196

197:
  %% map_SUITE.erl:1989
  K1 = call (`id`/1), `1`

  %% Aliased:
  %%    K1
  _198 = succeeded:body K1
  br _198, ^198, ^1

198:
  %% map_SUITE.erl:1990
  K2 = call (`id`/1), `2`

  %% Aliased:
  %%    K2
  _199 = succeeded:body K2
  br _199, ^199, ^1

199:
  %% map_SUITE.erl:1991
  K3 = call (`id`/1), `3.0`

  %% Aliased:
  %%    K3
  _200 = succeeded:body K3
  br _200, ^200, ^1

200:
  %% map_SUITE.erl:1992
  K4 = call (`id`/1), `4`

  %% Aliased:
  %%    K4
  _201 = succeeded:body K4
  br _201, ^201, ^1

201:
  %% map_SUITE.erl:1994
  M0 = call (`id`/1), `#{1 => a,2 => b,4 => d,5 => e,3.0 => c}`

  %% Aliased:
  %%    M0
  _202 = succeeded:body M0
  br _202, ^202, ^1

202:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _205 = bif:is_map M0
  br _205, ^205, ^204

205:
  %% map_SUITE.erl:1996
  %% Aliased:
  %%    K1, 
  %%    M0
  _53 = put_map `exact`, M0, K1, `42`

  %% Aliased:
  %%    _53
  _206 = succeeded:body _53
  br _206, ^206, ^1

206:
  %% map_SUITE.erl:1996
  %% Aliased:
  %%    _53, 
  %%    K2
  _54 = put_map `exact`, _53, K2, `100`

  %% Aliased:
  %%    _54
  _207 = succeeded:body _54
  br _207, ^207, ^1

207:
  %% map_SUITE.erl:1996
  %% Aliased:
  %%    _54, 
  %%    K4
  _136 = put_map `exact`, _54, K4, `[a,b,c]`

  %% Aliased:
  %%    _136
  _208 = succeeded:body _136
  br _208, ^549, ^1

549:
  %% Argument types:
  %%    _136 => map()
  %% Aliased:
  %%    _136
  _59 = get_map_element _136, `1`

  %% Aliased:
  %%    _59
  _212 = succeeded:guard _59
  br _212, ^212, ^211

212:
  %% Argument types:
  %%    _136 => map()
  %% Aliased:
  %%    _136
  _58 = get_map_element _136, `2`

  %% Aliased:
  %%    _58
  _213 = succeeded:guard _58
  br _213, ^213, ^211

213:
  %% Argument types:
  %%    _136 => map()
  %% Aliased:
  %%    _136
  _57 = get_map_element _136, `5`

  %% Aliased:
  %%    _57
  _214 = succeeded:guard _57
  br _214, ^214, ^211

214:
  %% Argument types:
  %%    _136 => map()
  %% Aliased:
  %%    _136
  _56 = get_map_element _136, `3.0`

  %% Aliased:
  %%    _56
  _215 = succeeded:guard _56
  br _215, ^216, ^211

216:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _548 = bif:'=:=' _59, `42`
  br _548, ^547, ^211

547:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _546 = bif:'=:=' _58, `100`
  br _546, ^545, ^211

545:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _544 = bif:'=:=' _57, `e`
  br _544, ^543, ^211

543:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _542 = bif:'=:=' _56, `c`
  br _542, ^219, ^211

219:
  %% map_SUITE.erl:1998
  %% Aliased:
  %%    K1, 
  %%    M0
  _60 = put_map `exact`, M0, K1, `wrong`

  %% Aliased:
  %%    _60
  _220 = succeeded:body _60
  br _220, ^220, ^1

220:
  %% map_SUITE.erl:1998
  %% Aliased:
  %%    _60
  _61 = put_map `exact`, _60, `1`, `also_wrong`

  %% Aliased:
  %%    _61
  _221 = succeeded:body _61
  br _221, ^221, ^1

221:
  %% map_SUITE.erl:1998
  %% Aliased:
  %%    _61, 
  %%    K1
  _62 = put_map `assoc`, _61, K1, `42`

  %% map_SUITE.erl:1998
  %% Aliased:
  %%    _62
  _63 = put_map `assoc`, _62, `2`, `wrong`

  %% map_SUITE.erl:1998
  %% Aliased:
  %%    _63, 
  %%    K2
  _64 = put_map `exact`, _63, K2, `100`

  %% Aliased:
  %%    _64
  _222 = succeeded:body _64
  br _222, ^222, ^1

222:
  %% map_SUITE.erl:1998
  %% Aliased:
  %%    _64
  _138 = put_map `exact`, _64, `4`, `[a,b,c]`

  %% Aliased:
  %%    _138
  _223 = succeeded:body _138
  br _223, ^217, ^1

217:
  %% Argument types:
  %%    _138 => map()
  %%    _136 => map()
  %% Aliased:
  %%    _136, 
  %%    _138
  _227 = bif:'=:=' _138, _136
  br _227, ^230, ^226

230:
  %% map_SUITE.erl:2000
  %% Aliased:
  %%    K3, 
  %%    M0
  _140 = put_map `exact`, M0, K3, `new`

  %% Aliased:
  %%    _140
  _231 = succeeded:body _140
  br _231, ^537, ^1

537:
  %% Argument types:
  %%    _140 => map()
  %% Aliased:
  %%    _140
  _69 = get_map_element _140, `1`

  %% Aliased:
  %%    _69
  _235 = succeeded:guard _69
  br _235, ^235, ^234

235:
  %% Argument types:
  %%    _140 => map()
  %% Aliased:
  %%    _140
  _68 = get_map_element _140, `5`

  %% Aliased:
  %%    _68
  _236 = succeeded:guard _68
  br _236, ^236, ^234

236:
  %% Argument types:
  %%    _140 => map()
  %% Aliased:
  %%    _140
  _67 = get_map_element _140, `3.0`

  %% Aliased:
  %%    _67
  _237 = succeeded:guard _67
  br _237, ^237, ^234

237:
  %% Argument types:
  %%    _140 => map()
  %% Aliased:
  %%    _140, 
  %%    K2
  _66 = get_map_element _140, K2

  %% Aliased:
  %%    _66
  _238 = succeeded:guard _66
  br _238, ^238, ^234

238:
  %% Argument types:
  %%    _140 => map()
  %% Aliased:
  %%    _140, 
  %%    K4
  _65 = get_map_element _140, K4

  %% Aliased:
  %%    _65
  _239 = succeeded:guard _65
  br _239, ^239, ^234

239:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _536 = bif:'=:=' _69, `a`
  br _536, ^535, ^234

535:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _534 = bif:'=:=' _68, `e`
  br _534, ^533, ^234

533:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _532 = bif:'=:=' _67, `new`
  br _532, ^531, ^234

531:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _530 = bif:'=:=' _66, `b`
  br _530, ^529, ^234

529:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _528 = bif:'=:=' _65, `d`
  br _528, ^242, ^234

242:
  %% map_SUITE.erl:2002
  %% Aliased:
  %%    M0
  _70 = put_map `assoc`, M0, `3.0`, `wrong`

  %% map_SUITE.erl:2002
  %% Aliased:
  %%    _70, 
  %%    K3
  _142 = put_map `exact`, _70, K3, `new`

  %% Aliased:
  %%    _142
  _243 = succeeded:body _142
  br _243, ^240, ^1

240:
  %% Argument types:
  %%    _142 => map()
  %%    _140 => map()
  %% Aliased:
  %%    _140, 
  %%    _142
  _247 = bif:'=:=' _142, _140
  br _247, ^250, ^246

250:
  %% map_SUITE.erl:2003
  %% Aliased:
  %%    M0
  _71 = put_map `assoc`, M0, `3`, `right`

  %% map_SUITE.erl:2003
  %% Aliased:
  %%    _71
  _144 = put_map `exact`, _71, `3.0`, `new`

  %% Aliased:
  %%    _144
  _251 = succeeded:body _144
  br _251, ^248, ^1

248:
  %% map_SUITE.erl:2003
  %% Argument types:
  %%    _140 => map()
  %%    _144 => map()
  %% Aliased:
  %%    _140, 
  %%    _144
  _72 = bif:'=:=' _140, _144
  br _72, ^254, ^257

254:
  %% map_SUITE.erl:2003
  _188 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _188
  _525 = succeeded:body _188
  br ^1

257:
  %% map_SUITE.erl:2004
  %% Aliased:
  %%    _71, 
  %%    K3
  _146 = put_map `exact`, _71, K3, `new`

  %% Aliased:
  %%    _146
  _258 = succeeded:body _146
  br _258, ^521, ^1

521:
  %% Argument types:
  %%    _146 => map()
  %% Aliased:
  %%    _146
  _75 = get_map_element _146, `3`

  %% Aliased:
  %%    _75
  _262 = succeeded:guard _75
  br _262, ^262, ^261

262:
  %% Argument types:
  %%    _146 => map()
  %% Aliased:
  %%    _146
  _74 = get_map_element _146, `3.0`

  %% Aliased:
  %%    _74
  _263 = succeeded:guard _74
  br _263, ^263, ^261

263:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _520 = bif:'=:=' _75, `right`
  br _520, ^519, ^261

519:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _518 = bif:'=:=' _74, `new`
  br _518, ^517, ^261

517:
  %% map_SUITE.erl:2006
  M3 = call (`id`/1), `#{1 => val}`

  %% Aliased:
  %%    M3
  _264 = succeeded:body M3
  br _264, ^264, ^1

264:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M3
  _267 = bif:is_map M3
  br _267, ^267, ^266

267:
  %% map_SUITE.erl:2007
  %% Aliased:
  %%    M3
  _76 = put_map `assoc`, M3, `1.0`, `new_val1`

  %% map_SUITE.erl:2007
  %% Aliased:
  %%    _76, 
  %%    K1
  _77 = put_map `exact`, _76, K1, `update`

  %% Aliased:
  %%    _77
  _268 = succeeded:body _77
  br _268, ^268, ^1

268:
  %% map_SUITE.erl:2007
  %% Aliased:
  %%    _77, 
  %%    K1
  _78 = put_map `assoc`, _77, K1, `update3`

  %% map_SUITE.erl:2007
  %% Aliased:
  %%    _78, 
  %%    K1
  _79 = put_map `exact`, _78, K1, `update2`

  %% Aliased:
  %%    _79
  _269 = succeeded:body _79
  br _269, ^269, ^1

269:
  %% map_SUITE.erl:2007
  %% Aliased:
  %%    _79
  _148 = put_map `exact`, _79, `1.0`, `new_val4`

  %% Aliased:
  %%    _148
  _270 = succeeded:body _148
  br _270, ^515, ^1

515:
  %% Argument types:
  %%    _148 => map()
  %% Aliased:
  %%    _148
  _81 = get_map_element _148, `1`

  %% Aliased:
  %%    _81
  _274 = succeeded:guard _81
  br _274, ^275, ^273

275:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _514 = bif:'=:=' _81, `update2`
  br _514, ^511, ^273

511:
  %% map_SUITE.erl:2012
  _82 = put_map `assoc`, `#{}`, `"wat"`, `1`

  %% map_SUITE.erl:2012
  %% Aliased:
  %%    _82, 
  %%    K2
  _23 = put_map `assoc`, _82, K2, `2`

  %% map_SUITE.erl:2012
  %% Aliased:
  %%    _23, 
  %%    K2
  _83 = put_map `exact`, _23, K2, `a`

  %% Aliased:
  %%    _83
  _279 = succeeded:body _83
  br _279, ^279, ^1

279:
  %% map_SUITE.erl:2012
  %% Aliased:
  %%    _83
  _150 = put_map `exact`, _83, `"wat"`, `3`

  %% Aliased:
  %%    _150
  _280 = succeeded:body _150
  br _280, ^554, ^1

554:
  %% map_SUITE.erl:2012
  %% Aliased:
  %%    _150
  _84 = call (`id`/1), _150

  %% Aliased:
  %%    _84
  _282 = succeeded:body _84
  br _282, ^282, ^1

282:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _509 = bif:is_map _84
  br _509, ^509, ^284

509:
  %% Argument types:
  %%    _84 => map()
  %% Aliased:
  %%    _84
  _86 = get_map_element _84, `2`

  %% Aliased:
  %%    _86
  _285 = succeeded:guard _86
  br _285, ^285, ^284

285:
  %% Argument types:
  %%    _84 => map()
  %% Aliased:
  %%    _84
  _85 = get_map_element _84, `"wat"`

  %% Aliased:
  %%    _85
  _286 = succeeded:guard _85
  br _286, ^286, ^284

286:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _508 = bif:'=:=' _86, `a`
  br _508, ^507, ^284

507:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _506 = bif:'=:=' _85, `3`
  br _506, ^660, ^284

660:
  br ^667

667:
  _290 = new_try_tag `'catch'`
  br _290, ^288, ^289

288:
  %% map_SUITE.erl:2015
  _26 = call (`id`/1), `nil`

  %% Aliased:
  %%    _26
  _292 = succeeded:body _26
  br _292, ^292, ^289

292:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _295 = bif:is_map _26
  br _295, ^295, ^294

295:
  %% map_SUITE.erl:2015
  %% Aliased:
  %%    _26
  _154 = put_map `exact`, _26, `a`, `b`

  %% Aliased:
  %%    _154
  _296 = succeeded:body _154
  br _296, ^296, ^289

296:
  br ^287

294:
  %% map_SUITE.erl:2015
  %% Aliased:
  %%    _26
  _155 = match_fail `badmap`, _26

  %% Unique:
  %%    _155
  _297 = succeeded:body _155
  br ^289

289:
  %% Unique:
  %%    _290
  _300 = landingpad `'catch'`, _290

  %% Aliased:
  %%    _300
  _298 = extract _300, `0`
  br ^287

287:
  _301 = phi { _298, ^289 }, { _154, ^296 }

  %% Aliased:
  %%    _301
  %% Unique:
  %%    _290
  _27 = catch_end _290, _301

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _501 = is_tagged_tuple _27, `2`, `'EXIT'`
  br _501, ^498, ^303

498:
  %% Argument types:
  %%    _27 => {''EXIT'', any()}
  %% Aliased:
  %%    _27
  _87 = get_tuple_element _27, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _495 = bif:is_tuple _87
  br _495, ^495, ^303

495:
  %% Argument types:
  %%    _87 => {...}
  %% Aliased:
  %%    _87
  _496 = bif:tuple_size _87

  %% Argument types:
  %%    _496 => 0..16777215
  %% Unique:
  %%    _496
  _497 = bif:'=:=' _496, `2`
  br _497, ^494, ^303

494:
  %% Argument types:
  %%    _87 => {any(), any()}
  %% Aliased:
  %%    _87
  _90 = get_tuple_element _87, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _493 = bif:'=:=' _90, `{badmap,nil}`
  br _493, ^661, ^303

661:
  br ^668

668:
  _307 = new_try_tag `'catch'`
  br _307, ^311, ^306

311:
  %% map_SUITE.erl:2016
  %% Aliased:
  %%    M0
  _158 = put_map `exact`, M0, `nonexisting`, `val`

  %% Aliased:
  %%    _158
  _312 = succeeded:body _158
  br _312, ^312, ^306

312:
  br ^304

306:
  %% Unique:
  %%    _307
  _316 = landingpad `'catch'`, _307

  %% Aliased:
  %%    _316
  _314 = extract _316, `0`
  br ^304

304:
  _317 = phi { _314, ^306 }, { _158, ^312 }

  %% Aliased:
  %%    _317
  %% Unique:
  %%    _307
  _29 = catch_end _307, _317

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _489 = is_tagged_tuple _29, `2`, `'EXIT'`
  br _489, ^486, ^319

486:
  %% Argument types:
  %%    _29 => {''EXIT'', any()}
  %% Aliased:
  %%    _29
  _91 = get_tuple_element _29, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _483 = bif:is_tuple _91
  br _483, ^483, ^319

483:
  %% Argument types:
  %%    _91 => {...}
  %% Aliased:
  %%    _91
  _484 = bif:tuple_size _91

  %% Argument types:
  %%    _484 => 0..16777215
  %% Unique:
  %%    _484
  _485 = bif:'=:=' _484, `2`
  br _485, ^482, ^319

482:
  %% Argument types:
  %%    _91 => {any(), any()}
  %% Aliased:
  %%    _91
  _94 = get_tuple_element _91, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _481 = bif:'=:=' _94, `{badkey,nonexisting}`
  br _481, ^662, ^319

662:
  br ^669

669:
  _323 = new_try_tag `'catch'`
  br _323, ^327, ^322

327:
  %% map_SUITE.erl:2017
  %% Aliased:
  %%    M0
  _162 = put_map `exact`, M0, `1.0`, `v2`

  %% Aliased:
  %%    _162
  _328 = succeeded:body _162
  br _328, ^328, ^322

328:
  br ^320

322:
  %% Unique:
  %%    _323
  _332 = landingpad `'catch'`, _323

  %% Aliased:
  %%    _332
  _330 = extract _332, `0`
  br ^320

320:
  _333 = phi { _330, ^322 }, { _162, ^328 }

  %% Aliased:
  %%    _333
  %% Unique:
  %%    _323
  _31 = catch_end _323, _333

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _477 = is_tagged_tuple _31, `2`, `'EXIT'`
  br _477, ^474, ^335

474:
  %% Argument types:
  %%    _31 => {''EXIT'', any()}
  %% Aliased:
  %%    _31
  _95 = get_tuple_element _31, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _471 = bif:is_tuple _95
  br _471, ^471, ^335

471:
  %% Argument types:
  %%    _95 => {...}
  %% Aliased:
  %%    _95
  _472 = bif:tuple_size _95

  %% Argument types:
  %%    _472 => 0..16777215
  %% Unique:
  %%    _472
  _473 = bif:'=:=' _472, `2`
  br _473, ^470, ^335

470:
  %% Argument types:
  %%    _95 => {any(), any()}
  %% Aliased:
  %%    _95
  _98 = get_tuple_element _95, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _469 = bif:'=:=' _98, `{badkey,1.0}`
  br _469, ^663, ^335

663:
  br ^670

670:
  _339 = new_try_tag `'catch'`
  br _339, ^343, ^338

343:
  %% map_SUITE.erl:2018
  %% Aliased:
  %%    M0
  _166 = put_map `exact`, M0, `42.0`, `v`, `42`, `v2`

  %% Aliased:
  %%    _166
  _344 = succeeded:body _166
  br _344, ^344, ^338

344:
  br ^336

338:
  %% Unique:
  %%    _339
  _348 = landingpad `'catch'`, _339

  %% Aliased:
  %%    _348
  _346 = extract _348, `0`
  br ^336

336:
  _349 = phi { _346, ^338 }, { _166, ^344 }

  %% Aliased:
  %%    _349
  %% Unique:
  %%    _339
  _33 = catch_end _339, _349

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _465 = is_tagged_tuple _33, `2`, `'EXIT'`
  br _465, ^462, ^351

462:
  %% Argument types:
  %%    _33 => {''EXIT'', any()}
  %% Aliased:
  %%    _33
  _99 = get_tuple_element _33, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _459 = bif:is_tuple _99
  br _459, ^459, ^351

459:
  %% Argument types:
  %%    _99 => {...}
  %% Aliased:
  %%    _99
  _460 = bif:tuple_size _99

  %% Argument types:
  %%    _460 => 0..16777215
  %% Unique:
  %%    _460
  _461 = bif:'=:=' _460, `2`
  br _461, ^458, ^351

458:
  %% Argument types:
  %%    _99 => {any(), any()}
  %% Aliased:
  %%    _99
  _102 = get_tuple_element _99, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _457 = bif:'=:=' _102, `{badkey,42}`
  br _457, ^457, ^351

457:
  %% map_SUITE.erl:2019
  %% Aliased:
  %%    M0
  _103 = put_map `assoc`, M0, `42`, `v3`
  _355 = new_try_tag `'catch'`
  br _355, ^359, ^354

359:
  %% map_SUITE.erl:2019
  %% Aliased:
  %%    _103
  _170 = put_map `exact`, _103, `42.0`, `v2`

  %% Aliased:
  %%    _170
  _360 = succeeded:body _170
  br _360, ^360, ^354

360:
  br ^352

354:
  %% Unique:
  %%    _355
  _364 = landingpad `'catch'`, _355

  %% Aliased:
  %%    _364
  _362 = extract _364, `0`
  br ^352

352:
  _365 = phi { _362, ^354 }, { _170, ^360 }

  %% Aliased:
  %%    _365
  %% Unique:
  %%    _355
  _35 = catch_end _355, _365

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _453 = is_tagged_tuple _35, `2`, `'EXIT'`
  br _453, ^450, ^367

450:
  %% Argument types:
  %%    _35 => {''EXIT'', any()}
  %% Aliased:
  %%    _35
  _104 = get_tuple_element _35, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _447 = bif:is_tuple _104
  br _447, ^447, ^367

447:
  %% Argument types:
  %%    _104 => {...}
  %% Aliased:
  %%    _104
  _448 = bif:tuple_size _104

  %% Argument types:
  %%    _448 => 0..16777215
  %% Unique:
  %%    _448
  _449 = bif:'=:=' _448, `2`
  br _449, ^446, ^367

446:
  %% Argument types:
  %%    _104 => {any(), any()}
  %% Aliased:
  %%    _104
  _107 = get_tuple_element _104, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _445 = bif:'=:=' _107, `{badkey,42.0}`
  br _445, ^665, ^367

665:
  br ^671

671:
  _371 = new_try_tag `'catch'`
  br _371, ^369, ^370

369:
  %% map_SUITE.erl:2020
  _173 = match_fail `badmap`, `<<>>`

  %% Unique:
  %%    _173
  _373 = succeeded:body _173
  br ^370

370:
  %% Unique:
  %%    _371
  _376 = landingpad `'catch'`, _371

  %% Aliased:
  %%    _376
  _374 = extract _376, `0`
  br ^368

368:
  %% Aliased:
  %%    _374
  %% Unique:
  %%    _371
  _38 = catch_end _371, _374

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _441 = is_tagged_tuple _38, `2`, `'EXIT'`
  br _441, ^438, ^379

438:
  %% Argument types:
  %%    _38 => {''EXIT'', any()}
  %% Aliased:
  %%    _38
  _108 = get_tuple_element _38, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _435 = bif:is_tuple _108
  br _435, ^435, ^379

435:
  %% Argument types:
  %%    _108 => {...}
  %% Aliased:
  %%    _108
  _436 = bif:tuple_size _108

  %% Argument types:
  %%    _436 => 0..16777215
  %% Unique:
  %%    _436
  _437 = bif:'=:=' _436, `2`
  br _437, ^434, ^379

434:
  %% Argument types:
  %%    _108 => {any(), any()}
  %% Aliased:
  %%    _108
  _111 = get_tuple_element _108, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _433 = bif:'=:=' _111, `{badmap,<<>>}`
  br _433, ^666, ^379

666:
  br ^672

672:
  _383 = new_try_tag `'catch'`
  br _383, ^381, ^382

381:
  %% map_SUITE.erl:2022
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _40 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `257`

  %% Aliased:
  %%    _40
  _385 = succeeded:body _40
  br _385, ^388, ^382

388:
  %% map_SUITE.erl:2022
  %% Aliased:
  %%    _40, 
  %%    M0
  _176 = put_map `exact`, M0, _40, `val`

  %% Aliased:
  %%    _176
  _389 = succeeded:body _176
  br _389, ^389, ^382

389:
  br ^380

382:
  %% Unique:
  %%    _383
  _393 = landingpad `'catch'`, _383

  %% Aliased:
  %%    _393
  _391 = extract _393, `0`
  br ^380

380:
  _394 = phi { _391, ^382 }, { _176, ^389 }

  %% Aliased:
  %%    _394
  %% Unique:
  %%    _383
  _41 = catch_end _383, _394

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _429 = is_tagged_tuple _41, `2`, `'EXIT'`
  br _429, ^426, ^396

426:
  %% Argument types:
  %%    _41 => {''EXIT'', any()}
  %% Aliased:
  %%    _41
  _112 = get_tuple_element _41, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _423 = bif:is_tuple _112
  br _423, ^423, ^396

423:
  %% Argument types:
  %%    _112 => {...}
  %% Aliased:
  %%    _112
  _424 = bif:tuple_size _112

  %% Argument types:
  %%    _424 => 0..16777215
  %% Unique:
  %%    _424
  _425 = bif:'=:=' _424, `2`
  br _425, ^422, ^396

422:
  %% Argument types:
  %%    _112 => {any(), any()}
  %% Aliased:
  %%    _112
  _115 = get_tuple_element _112, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _115
  _419 = is_tagged_tuple _115, `2`, `badkey`
  br _419, ^416, ^396

416:
  %% Argument types:
  %%    _115 => {'badkey', any()}
  %% Aliased:
  %%    _115
  _116 = get_tuple_element _115, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _118 = bs_start_match `new`, _116

  %% Aliased:
  %%    _118
  _415 = succeeded:guard _118
  br _415, ^415, ^396

415:
  %% Argument types:
  %%    _118 => bs_context(1)
  %% Aliased:
  %%    _118
  _135 = bs_match `string`, _118, `<<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0:1>>`

  %% Aliased:
  %%    _135
  _413 = succeeded:guard _135
  br _413, ^413, ^396

413:
  %% Aliased:
  %%    _135
  _414 = bs_test_tail _135, `0`
  br _414, ^414, ^396

414:
  %% Result type:
  %%    'ok'
  ret `ok`

396:
  %% map_SUITE.erl:2021
  %% Aliased:
  %%    _41
  _178 = match_fail `badmatch`, _41

  %% Unique:
  %%    _178
  _432 = succeeded:body _178
  br ^1

379:
  %% map_SUITE.erl:2020
  %% Aliased:
  %%    _38
  _179 = match_fail `badmatch`, _38

  %% Unique:
  %%    _179
  _444 = succeeded:body _179
  br ^1

367:
  %% map_SUITE.erl:2019
  %% Aliased:
  %%    _35
  _180 = match_fail `badmatch`, _35

  %% Unique:
  %%    _180
  _456 = succeeded:body _180
  br ^1

351:
  %% map_SUITE.erl:2018
  %% Aliased:
  %%    _33
  _181 = match_fail `badmatch`, _33

  %% Unique:
  %%    _181
  _468 = succeeded:body _181
  br ^1

335:
  %% map_SUITE.erl:2017
  %% Aliased:
  %%    _31
  _182 = match_fail `badmatch`, _31

  %% Unique:
  %%    _182
  _480 = succeeded:body _182
  br ^1

319:
  %% map_SUITE.erl:2016
  %% Aliased:
  %%    _29
  _183 = match_fail `badmatch`, _29

  %% Unique:
  %%    _183
  _492 = succeeded:body _183
  br ^1

303:
  %% map_SUITE.erl:2015
  %% Aliased:
  %%    _27
  _184 = match_fail `badmatch`, _27

  %% Unique:
  %%    _184
  _504 = succeeded:body _184
  br ^1

284:
  %% map_SUITE.erl:2012
  %% Aliased:
  %%    _84
  _185 = match_fail `badmatch`, _84

  %% Unique:
  %%    _185
  _510 = succeeded:body _185
  br ^1

273:
  %% map_SUITE.erl:2007
  %% Aliased:
  %%    _148
  _186 = match_fail `badmatch`, _148

  %% Unique:
  %%    _186
  _516 = succeeded:body _186
  br ^1

266:
  %% map_SUITE.erl:2007
  %% Aliased:
  %%    M3
  _149 = match_fail `badmap`, M3

  %% Unique:
  %%    _149
  _271 = succeeded:body _149
  br ^1

261:
  %% map_SUITE.erl:2004
  %% Aliased:
  %%    _146
  _187 = match_fail `badmatch`, _146

  %% Unique:
  %%    _187
  _522 = succeeded:body _187
  br ^1

246:
  %% map_SUITE.erl:2002
  %% Aliased:
  %%    _142
  _189 = match_fail `badmatch`, _142

  %% Unique:
  %%    _189
  _526 = succeeded:body _189
  br ^1

234:
  %% map_SUITE.erl:2001
  %% Aliased:
  %%    _140
  _190 = match_fail `badmatch`, _140

  %% Unique:
  %%    _190
  _538 = succeeded:body _190
  br ^1

226:
  %% map_SUITE.erl:1998
  %% Aliased:
  %%    _138
  _191 = match_fail `badmatch`, _138

  %% Unique:
  %%    _191
  _539 = succeeded:body _191
  br ^1

211:
  %% map_SUITE.erl:1997
  %% Aliased:
  %%    _136
  _192 = match_fail `badmatch`, _136

  %% Unique:
  %%    _192
  _550 = succeeded:body _192
  br ^1

204:
  %% map_SUITE.erl:1996
  %% Aliased:
  %%    M0
  _137 = match_fail `badmap`, M0

  %% Unique:
  %%    _137
  _209 = succeeded:body _137
  br ^1

196:
  %% map_SUITE.erl:1988
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_exact_variables/1-',1}}
  _193 = match_fail `function_clause`, _0

  %% Unique:
  %%    _193
  _551 = succeeded:body _193
  br ^1

1:
  _194 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _194
}

%% map_SUITE.erl:2025
%% Counter = 237
%% bs_ensure_opt: true
function `map_SUITE`:`t_nested_pattern_expressions`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _127 = bif:is_list _0
  br _127, ^127, ^126

127:
  %% map_SUITE.erl:2026
  K1 = call (`id`/1), `"hello"`

  %% Aliased:
  %%    K1
  _128 = succeeded:body K1
  br _128, ^128, ^1

128:
  %% map_SUITE.erl:2028
  _61 = put_map `assoc`, `#{}`, `<<"hi">>`, `wat`

  %% map_SUITE.erl:2028
  %% Aliased:
  %%    _61, 
  %%    K1
  _2 = put_map `assoc`, _61, K1, `42`

  %% Argument types:
  %%    _2 => #{any()=>'wat' | 42}
  %% Aliased:
  %%    _2
  _62 = put_list _2, `[]`

  %% Argument types:
  %%    _62 => nonempty_list(#{any()=>'wat' | 42})
  %% Unique:
  %%    _62
  _63 = put_list `k`, _62

  %% Argument types:
  %%    _63 => nonempty_list('k' | #{any()=>'wat' | 42})
  %% Unique:
  %%    _63
  _64 = put_list `k`, _63

  %% map_SUITE.erl:2028
  %% Unique:
  %%    _64
  _65 = call (`id`/1), _64

  %% Aliased:
  %%    _65
  _129 = succeeded:body _65
  br _129, ^129, ^1

129:
  %% Aliased:
  %%    _65
  _230 = is_nonempty_list _65
  br _230, ^230, ^131

230:
  %% Argument types:
  %%    _65 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _65
  _66 = get_tl _65

  %% Aliased:
  %%    _66
  _229 = is_nonempty_list _66
  br _229, ^229, ^131

229:
  %% Argument types:
  %%    _66 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _66
  _68 = get_tl _66

  %% Aliased:
  %%    _68
  _228 = is_nonempty_list _68
  br _228, ^228, ^131

228:
  %% Argument types:
  %%    _68 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _68
  _71 = get_hd _68

  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _227 = bif:is_map _71
  br _227, ^227, ^131

227:
  %% Argument types:
  %%    _71 => map()
  %% Aliased:
  %%    _71
  _73 = get_map_element _71, `<<"hi">>`

  %% Aliased:
  %%    _73
  _132 = succeeded:guard _73
  br _132, ^132, ^131

132:
  %% Argument types:
  %%    _71 => map()
  %% Aliased:
  %%    _71, 
  %%    K1
  _72 = get_map_element _71, K1

  %% Aliased:
  %%    _72
  _133 = succeeded:guard _72
  br _133, ^133, ^131

133:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _226 = bif:'=:=' _73, `wat`
  br _226, ^225, ^131

225:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _224 = bif:'=:=' _72, `42`
  br _224, ^223, ^131

223:
  %% map_SUITE.erl:2029
  _74 = put_map `assoc`, `#{}`, `-1`, `wat`

  %% map_SUITE.erl:2029
  %% Aliased:
  %%    _74, 
  %%    K1
  _5 = put_map `assoc`, _74, K1, `42`

  %% Argument types:
  %%    _5 => #{any()=>'wat' | 42}
  %% Aliased:
  %%    _5
  _75 = put_list _5, `[]`

  %% Argument types:
  %%    _75 => nonempty_list(#{any()=>'wat' | 42})
  %% Unique:
  %%    _75
  _76 = put_list `k`, _75

  %% Argument types:
  %%    _76 => nonempty_list('k' | #{any()=>'wat' | 42})
  %% Unique:
  %%    _76
  _77 = put_list `k`, _76

  %% map_SUITE.erl:2029
  %% Unique:
  %%    _77
  _78 = call (`id`/1), _77

  %% Aliased:
  %%    _78
  _134 = succeeded:body _78
  br _134, ^134, ^1

134:
  %% Aliased:
  %%    _78
  _221 = is_nonempty_list _78
  br _221, ^221, ^136

221:
  %% Argument types:
  %%    _78 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _78
  _79 = get_tl _78

  %% Aliased:
  %%    _79
  _220 = is_nonempty_list _79
  br _220, ^220, ^136

220:
  %% Argument types:
  %%    _79 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _79
  _81 = get_tl _79

  %% Aliased:
  %%    _81
  _219 = is_nonempty_list _81
  br _219, ^219, ^136

219:
  %% Argument types:
  %%    _81 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _81
  _84 = get_hd _81

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _218 = bif:is_map _84
  br _218, ^218, ^136

218:
  %% Argument types:
  %%    _84 => map()
  %% Aliased:
  %%    _84
  _86 = get_map_element _84, `-1`

  %% Aliased:
  %%    _86
  _137 = succeeded:guard _86
  br _137, ^137, ^136

137:
  %% Argument types:
  %%    _84 => map()
  %% Aliased:
  %%    _84, 
  %%    K1
  _85 = get_map_element _84, K1

  %% Aliased:
  %%    _85
  _138 = succeeded:guard _85
  br _138, ^138, ^136

138:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _217 = bif:'=:=' _86, `wat`
  br _217, ^216, ^136

216:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _215 = bif:'=:=' _85, `42`
  br _215, ^214, ^136

214:
  %% map_SUITE.erl:2030
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _8 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `300`

  %% Aliased:
  %%    _8
  _139 = succeeded:body _8
  br _139, ^139, ^1

139:
  %% Argument types:
  %%    _8 => bitstring(4)
  %% Aliased:
  %%    _8
  _87 = put_tuple `-3`, _8

  %% map_SUITE.erl:2030
  %% Unique:
  %%    _87
  _10 = put_map `assoc`, `#{}`, _87, `"hi"`

  %% map_SUITE.erl:2030
  %% Aliased:
  %%    _10
  _88 = put_map `assoc`, `#{}`, `-1`, _10

  %% map_SUITE.erl:2030
  %% Aliased:
  %%    _88, 
  %%    K1
  _11 = put_map `assoc`, _88, K1, `42`

  %% Argument types:
  %%    _11 => #{any()=>42 | #{{-3, bitstring(4)}=>nonempty_list(104..105)}}
  %% Aliased:
  %%    _11
  _89 = put_tuple _11, `3`

  %% Argument types:
  %%    _89 => {#{any()=>42 | #{{-3, bitstring(4)}=>nonempty_list(104..105)}}, 3}
  %% Unique:
  %%    _89
  _90 = put_list _89, `[]`

  %% Argument types:
  %%    _90 => nonempty_list({#{any()=>42 | #{{-3, bitstring(4)}=>nonempty_list(104..105)}}, 3})
  %% Unique:
  %%    _90
  _91 = put_list `k`, _90

  %% Argument types:
  %%    _91 => nonempty_list('k' | {#{any()=>42 | #{{-3, bitstring(4)}=>nonempty_list(104..105)}}, 3})
  %% Unique:
  %%    _91
  _92 = put_list `k`, _91

  %% map_SUITE.erl:2030
  %% Unique:
  %%    _92
  _39 = call (`id`/1), _92

  %% Aliased:
  %%    _39
  _140 = succeeded:body _39
  br _140, ^140, ^1

140:
  %% Aliased:
  %%    _39
  _212 = is_nonempty_list _39
  br _212, ^212, ^93

212:
  %% Argument types:
  %%    _39 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _39
  _94 = get_tl _39

  %% Aliased:
  %%    _94
  _211 = is_nonempty_list _94
  br _211, ^211, ^93

211:
  %% Argument types:
  %%    _94 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _94
  _96 = get_tl _94

  %% Aliased:
  %%    _96
  _210 = is_nonempty_list _96
  br _210, ^210, ^93

210:
  %% Argument types:
  %%    _96 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _96
  _99 = get_hd _96

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _207 = bif:is_tuple _99
  br _207, ^207, ^93

207:
  %% Argument types:
  %%    _99 => {...}
  %% Aliased:
  %%    _99
  _208 = bif:tuple_size _99

  %% Argument types:
  %%    _208 => 0..16777215
  %% Unique:
  %%    _208
  _209 = bif:'=:=' _208, `2`
  br _209, ^206, ^93

206:
  %% Argument types:
  %%    _99 => {any(), any()}
  %% Aliased:
  %%    _99
  _100 = get_tuple_element _99, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _205 = bif:'=:=' _100, `3`
  br _205, ^204, ^93

204:
  %% Argument types:
  %%    _99 => {any(), 3}
  %% Aliased:
  %%    _99
  _101 = get_tuple_element _99, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _203 = bif:is_map _101
  br _203, ^203, ^93

203:
  %% Argument types:
  %%    _101 => map()
  %% Aliased:
  %%    _101
  _103 = get_map_element _101, `-1`

  %% Aliased:
  %%    _103
  _152 = succeeded:guard _103
  br _152, ^152, ^93

152:
  %% Argument types:
  %%    _101 => map()
  %% Aliased:
  %%    _101, 
  %%    K1
  _102 = get_map_element _101, K1

  %% Aliased:
  %%    _102
  _153 = succeeded:guard _102
  br _153, ^153, ^93

153:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _202 = bif:'=:=' _102, `42`
  br _202, ^201, ^93

201:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _200 = bif:is_map _103
  br _200, ^200, ^93

200:
  %% map_SUITE.erl:2030
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _13 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `300`

  %% Aliased:
  %%    _13
  _158 = succeeded:guard _13
  br _158, ^158, ^93

158:
  %% Argument types:
  %%    _13 => bitstring(4)
  %% Aliased:
  %%    _13
  _115 = put_tuple `-3`, _13

  %% Argument types:
  %%    _103 => map()
  %%    _115 => {-3, bitstring(4)}
  %% Aliased:
  %%    _103
  %% Unique:
  %%    _115
  _105 = get_map_element _103, _115

  %% Aliased:
  %%    _105
  _163 = succeeded:guard _105
  br _163, ^163, ^93

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _195 = bif:'=:=' _105, `"hi"`
  br _195, ^195, ^165

195:
  %% map_SUITE.erl:2035
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _16 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `325`, `binary`, `[1]`, `<<"!">>`, `all`

  %% Aliased:
  %%    _16
  _166 = succeeded:body _16
  br _166, ^166, ^1

166:
  %% map_SUITE.erl:2035
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _17 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `317`, `binary`, `[1]`, `<<1,76>>`, `all`

  %% Aliased:
  %%    _17
  _167 = succeeded:body _17
  br _167, ^167, ^1

167:
  %% map_SUITE.erl:2035
  %% Aliased:
  %%    _16
  _106 = put_map `assoc`, `#{}`, _16, `1`

  %% map_SUITE.erl:2035
  %% Aliased:
  %%    _17, 
  %%    _106
  _107 = put_map `assoc`, _106, _17, `ok`

  %% map_SUITE.erl:2035
  %% Aliased:
  %%    _107
  _18 = put_map `assoc`, _107, `a`, `ok`, `wat`, `yep`, `watzor`, `ok`

  %% map_SUITE.erl:2035
  %% Aliased:
  %%    _18
  M0 = call (`id`/1), _18

  %% Aliased:
  %%    M0
  _168 = succeeded:body M0
  br _168, ^168, ^1

168:
  %% map_SUITE.erl:2036
  %% Result type:
  %%    fun((_) -> fun((_) -> fun((_) -> {any(), any()})))
  %% Aliased:
  %%    M0
  F0 = call (`map_nested_pattern_funs`/1), M0

  %% Aliased:
  %%    F0
  _169 = succeeded:body F0
  br _169, ^169, ^1

169:
  %% map_SUITE.erl:2037
  %% Result type:
  %%    fun((_) -> fun((_) -> {any(), any()}))
  %% Argument types:
  %%    F0 => fun((_) -> fun((_) -> fun((_) -> {any(), any()})))
  %% Aliased:
  %%    F0
  F1 = call F0, `wat`

  %% Aliased:
  %%    F1
  _170 = succeeded:body F1
  br _170, ^170, ^1

170:
  %% map_SUITE.erl:2038
  %% Result type:
  %%    fun((_) -> {any(), any()})
  %% Argument types:
  %%    F1 => fun((_) -> fun((_) -> {any(), any()}))
  %% Aliased:
  %%    F1
  F2 = call F1, `watzor`

  %% Aliased:
  %%    F2
  _171 = succeeded:body F2
  br _171, ^171, ^1

171:
  %% map_SUITE.erl:2039
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    F2 => fun((_) -> {any(), any()})
  %% Aliased:
  %%    F2, 
  %%    M0
  _108 = call F2, M0

  %% Aliased:
  %%    _108
  _172 = succeeded:body _108
  br _172, ^172, ^1

172:
  %% Argument types:
  %%    _108 => {any(), any()}
  %% Aliased:
  %%    _108
  _193 = bif:'=:=' _108, `{yep,ok}`
  br _193, ^193, ^174

193:
  %% map_SUITE.erl:2043
  %% Result type:
  %%    #{bitstring(16)=>#{bitstring(8)=>bitstring(8)}}
  _109 = call (`nested_map`/0)

  %% Aliased:
  %%    _109
  _175 = succeeded:body _109
  br _175, ^191, ^1

191:
  %% Argument types:
  %%    _109 => #{bitstring(16)=>#{bitstring(8)=>bitstring(8)}}
  %% Aliased:
  %%    _109
  _110 = get_map_element _109, `<<"result">>`

  %% Aliased:
  %%    _110
  _178 = succeeded:guard _110
  br _178, ^190, ^177

190:
  %% Argument types:
  %%    _110 => #{bitstring(8)=>bitstring(8)}
  %% Aliased:
  %%    _110
  _111 = get_map_element _110, `<<"foo">>`

  %% Aliased:
  %%    _111
  _179 = succeeded:guard _111
  br _179, ^179, ^177

179:
  %% Argument types:
  %%    _111 => bitstring(8)
  %% Aliased:
  %%    _111
  _189 = bif:'=:=' _111, `<<"6">>`
  br _189, ^189, ^177

189:
  %% map_SUITE.erl:2045
  _25 = call (`id`/1), `{a,value}`

  %% Aliased:
  %%    _25
  _180 = succeeded:body _25
  br _180, ^180, ^1

180:
  %% map_SUITE.erl:2045
  %% Aliased:
  %%    _25
  InnerMap = put_map `assoc`, `#{}`, `a`, _25

  %% map_SUITE.erl:2046
  %% Aliased:
  %%    InnerMap
  OuterMap = put_map `assoc`, `#{}`, `inner_map`, InnerMap

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _185 = bif:'=:=' _25, `{a,value}`
  br _185, ^185, ^182

185:
  %% Result type:
  %%    'ok'
  ret `ok`

182:
  %% map_SUITE.erl:2047
  %% Aliased:
  %%    OuterMap
  _116 = match_fail `badmatch`, OuterMap

  %% Unique:
  %%    _116
  _188 = succeeded:body _116
  br ^1

177:
  %% map_SUITE.erl:2042
  %% Aliased:
  %%    _109
  _117 = match_fail `badmatch`, _109

  %% Unique:
  %%    _117
  _192 = succeeded:body _117
  br ^1

174:
  %% map_SUITE.erl:2039
  %% Aliased:
  %%    _108
  _118 = match_fail `badmatch`, _108

  %% Unique:
  %%    _118
  _194 = succeeded:body _118
  br ^1

165:
  %% map_SUITE.erl:2031
  %% Aliased:
  %%    _105
  _119 = match_fail `badmatch`, _105

  %% Unique:
  %%    _119
  _196 = succeeded:body _119
  br ^1

93:
  %% map_SUITE.erl:2030
  %% Aliased:
  %%    _39
  _120 = match_fail `badmatch`, _39

  %% Unique:
  %%    _120
  _213 = succeeded:body _120
  br ^1

136:
  %% map_SUITE.erl:2029
  %% Aliased:
  %%    _78
  _121 = match_fail `badmatch`, _78

  %% Unique:
  %%    _121
  _222 = succeeded:body _121
  br ^1

131:
  %% map_SUITE.erl:2028
  %% Aliased:
  %%    _65
  _122 = match_fail `badmatch`, _65

  %% Unique:
  %%    _122
  _231 = succeeded:body _122
  br ^1

126:
  %% map_SUITE.erl:2025
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_nested_pattern_expressions/1-',1}}
  _123 = match_fail `function_clause`, _0

  %% Unique:
  %%    _123
  _232 = succeeded:body _123
  br ^1

1:
  _124 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _124
}

%% map_SUITE.erl:2051
%% Counter = 75
%% bs_ensure_opt: true
function `map_SUITE`:`map_nested_pattern_funs`(_0) {
0:
  %% map_SUITE.erl:2052
  K0 = call (`id`/1), `a`

  %% Aliased:
  %%    K0
  _74 = succeeded:body K0
  br _74, ^74, ^1

74:
  %% Result type:
  %%    fun((_) -> fun((_) -> {any(), any()}))
  %% Aliased:
  %%    _0, 
  %%    K0
  _59 = make_fun (`'-map_nested_pattern_funs/1-fun-2-'`/3), _0, K0
  %% Result type:
  %%    fun((_) -> fun((_) -> fun((_) -> {any(), any()})))
  %% Aliased:
  %%    _59
  ret _59

1:
  _72 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _72
}

%% map_SUITE.erl:2068
%% Counter = 16
%% bs_ensure_opt: true
function `map_SUITE`:`nested_map`() {
0:
  %% Argument types:
  %%    
  _3 = get_map_element `#{<<"result">> => #{<<"foo">> => <<"6">>}}`, `<<"result">>`

  %% Aliased:
  %%    _3
  _10 = succeeded:guard _3
  br _10, ^13, ^9

13:
  %% Argument types:
  %%    _3 => #{bitstring(8)=>bitstring(8)}
  %% Aliased:
  %%    _3
  _4 = get_map_element _3, `<<"foo">>`

  %% Aliased:
  %%    _4
  _11 = succeeded:guard _4
  br _11, ^11, ^9

11:
  %% Argument types:
  %%    _4 => bitstring(8)
  %% Aliased:
  %%    _4
  _12 = bif:'=:=' _4, `<<"6">>`
  br _12, ^12, ^9

12:
  %% Result type:
  %%    #{bitstring(16)=>#{bitstring(8)=>bitstring(8)}}
  ret `#{<<"result">> => #{<<"foo">> => <<"6">>}}`

9:
  %% map_SUITE.erl:2069
  _5 = match_fail `badmatch`, `#{<<"result">> => #{<<"foo">> => <<"6">>}}`

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% map_SUITE.erl:2072
%% Counter = 53
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_update_variables`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _21 = bif:is_list _0
  br _21, ^21, ^20

21:
  %% map_SUITE.erl:2073
  %% Result type:
  %%    'error' | 'first' | 'fourth' | 'second' | 'third'
  _7 = call (`map_guard_update_variables`/3), `n`, `#{}`, `#{}`

  %% Unique:
  %%    _7
  _22 = succeeded:body _7
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    _7 => 'error' | 'first' | 'fourth' | 'second' | 'third'
  %% Unique:
  %%    _7
  _50 = bif:'=:=' _7, `error`
  br _50, ^49, ^24

49:
  %% map_SUITE.erl:2074
  %% Result type:
  %%    'error' | 'first' | 'fourth' | 'second' | 'third'
  _8 = call (`map_guard_update_variables`/3), `x`, `#{}`, `#{x => first}`

  %% Unique:
  %%    _8
  _25 = succeeded:body _8
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    _8 => 'error' | 'first' | 'fourth' | 'second' | 'third'
  %% Unique:
  %%    _8
  _47 = bif:'=:=' _8, `first`
  br _47, ^46, ^27

46:
  %% map_SUITE.erl:2075
  %% Result type:
  %%    'error' | 'first' | 'fourth' | 'second' | 'third'
  _9 = call (`map_guard_update_variables`/3), `x`, `#{y => old}`, `#{x => second,y => old}`

  %% Unique:
  %%    _9
  _28 = succeeded:body _9
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _9 => 'error' | 'first' | 'fourth' | 'second' | 'third'
  %% Unique:
  %%    _9
  _44 = bif:'=:=' _9, `second`
  br _44, ^43, ^30

43:
  %% map_SUITE.erl:2076
  %% Result type:
  %%    'error' | 'first' | 'fourth' | 'second' | 'third'
  _10 = call (`map_guard_update_variables`/3), `x`, `#{x => old,y => old}`, `#{x => third,y => old}`

  %% Unique:
  %%    _10
  _31 = succeeded:body _10
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    _10 => 'error' | 'first' | 'fourth' | 'second' | 'third'
  %% Unique:
  %%    _10
  _41 = bif:'=:=' _10, `third`
  br _41, ^40, ^33

40:
  %% map_SUITE.erl:2077
  %% Result type:
  %%    'error' | 'first' | 'fourth' | 'second' | 'third'
  _11 = call (`map_guard_update_variables`/3), `x`, `#{x => old,y => old}`, `#{x => 4,y => new}`

  %% Unique:
  %%    _11
  _34 = succeeded:body _11
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _11 => 'error' | 'first' | 'fourth' | 'second' | 'third'
  %% Unique:
  %%    _11
  _38 = bif:'=:=' _11, `fourth`
  br _38, ^37, ^36

37:
  %% Result type:
  %%    'ok'
  ret `ok`

36:
  %% map_SUITE.erl:2077
  %% Unique:
  %%    _11
  _12 = match_fail `badmatch`, _11

  %% Unique:
  %%    _12
  _39 = succeeded:body _12
  br ^1

33:
  %% map_SUITE.erl:2076
  %% Unique:
  %%    _10
  _13 = match_fail `badmatch`, _10

  %% Unique:
  %%    _13
  _42 = succeeded:body _13
  br ^1

30:
  %% map_SUITE.erl:2075
  %% Unique:
  %%    _9
  _14 = match_fail `badmatch`, _9

  %% Unique:
  %%    _14
  _45 = succeeded:body _14
  br ^1

27:
  %% map_SUITE.erl:2074
  %% Unique:
  %%    _8
  _15 = match_fail `badmatch`, _8

  %% Unique:
  %%    _15
  _48 = succeeded:body _15
  br ^1

24:
  %% map_SUITE.erl:2073
  %% Unique:
  %%    _7
  _16 = match_fail `badmatch`, _7

  %% Unique:
  %%    _16
  _51 = succeeded:body _16
  br ^1

20:
  %% map_SUITE.erl:2072
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_update_variables/1-',1}}
  _17 = match_fail `function_clause`, _0

  %% Unique:
  %%    _17
  _52 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% map_SUITE.erl:2080
%% Counter = 72
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'n' | 'x'
%%    _1 =>
%%     #{'x' | 'y'=>'old'}
%%    _2 =>
%%     #{'x' | 'y'=>'first' | 'new' | 'old' | 'second' | 'third' | 4}
function `map_SUITE`:`map_guard_update_variables`(_0, _1, _2) {
0:
  %% map_SUITE.erl:2080
  %% Aliased:
  %%    _0, 
  %%    _1
  _38 = put_map `assoc`, _1, _0, `first`

  %% Argument types:
  %%    _38 => #{'n' | 'x' | 'y'=>'first' | 'old'}
  %%    _2 => #{'x' | 'y'=>'first' | 'new' | 'old' | 'second' | 'third' | 4}
  %% Aliased:
  %%    _38
  %% Unique:
  %%    _2
  _49 = bif:'=:=' _38, _2
  br _49, ^49, ^54

49:
  %% Result type:
  %%    'first'
  ret `first`

54:
  %% map_SUITE.erl:2081
  %% Aliased:
  %%    _0, 
  %%    _1
  _36 = put_map `assoc`, _1, _0, `second`

  %% Argument types:
  %%    _36 => #{'n' | 'x' | 'y'=>'old' | 'second'}
  %%    _2 => #{'x' | 'y'=>'first' | 'new' | 'old' | 'second' | 'third' | 4}
  %% Aliased:
  %%    _36
  %% Unique:
  %%    _2
  _56 = bif:'=:=' _36, _2
  br _56, ^56, ^61

56:
  %% Result type:
  %%    'second'
  ret `second`

61:
  %% map_SUITE.erl:2082
  %% Aliased:
  %%    _0, 
  %%    _1
  _34 = put_map `exact`, _1, _0, `third`

  %% Aliased:
  %%    _34
  _62 = succeeded:guard _34
  br _62, ^59, ^68

59:
  %% Argument types:
  %%    _34 => #{'n' | 'x' | 'y'=>'old' | 'third'}
  %%    _2 => #{'x' | 'y'=>'first' | 'new' | 'old' | 'second' | 'third' | 4}
  %% Aliased:
  %%    _34
  %% Unique:
  %%    _2
  _64 = bif:'=:=' _34, _2
  br _64, ^64, ^68

64:
  %% Result type:
  %%    'third'
  ret `third`

68:
  %% map_SUITE.erl:2083
  %% Aliased:
  %%    _0, 
  %%    _1
  _28 = put_map `exact`, _1, _0, `4`

  %% Aliased:
  %%    _28
  _69 = succeeded:guard _28
  br _69, ^69, ^42

69:
  %% map_SUITE.erl:2083
  %% Aliased:
  %%    _28
  _32 = put_map `assoc`, _28, `y`, `new`

  %% Argument types:
  %%    _32 => #{'n' | 'x' | 'y'=>'new' | 'old' | 4}
  %%    _2 => #{'x' | 'y'=>'first' | 'new' | 'old' | 'second' | 'third' | 4}
  %% Aliased:
  %%    _32
  %% Unique:
  %%    _2
  _71 = bif:'=:=' _32, _2
  br _71, ^71, ^42

71:
  %% Result type:
  %%    'fourth'
  ret `fourth`

42:
  %% Result type:
  %%    'error'
  ret `error`
}

%% map_SUITE.erl:2086
%% Counter = 151
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_sequence_variables`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _54 = bif:is_list _0
  br _54, ^54, ^53

54:
  %% map_SUITE.erl:2087
  _1 = call (`id`/1), `"a"`

  %% Aliased:
  %%    _1
  _55 = succeeded:body _1
  br _55, ^55, ^1

55:
  %% map_SUITE.erl:2087
  %% Aliased:
  %%    _1
  _2 = put_map `assoc`, `#{}`, `a`, _1, `b`, `no`, `seq`, `1`

  %% map_SUITE.erl:2087
  %% Result type:
  %%    {1..5, any(), ...}
  %% Aliased:
  %%    _2
  _27 = call (`map_guard_sequence_var_1`/2), `a`, _2

  %% Unique:
  %%    _27
  _56 = succeeded:body _27
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    _27 => {1..5, any(), ...}
  %% Unique:
  %%    _27
  _124 = bif:'=:=' _27, `{1,"a"}`
  br _124, ^124, ^58

124:
  %% map_SUITE.erl:2088
  _4 = call (`id`/1), `"b"`

  %% Aliased:
  %%    _4
  _59 = succeeded:body _4
  br _59, ^59, ^1

59:
  %% map_SUITE.erl:2088
  %% Aliased:
  %%    _4
  _5 = put_map `assoc`, `#{}`, `a`, `no`, `b`, _4, `seq`, `2`

  %% map_SUITE.erl:2088
  %% Result type:
  %%    {1..5, any(), ...}
  %% Aliased:
  %%    _5
  _28 = call (`map_guard_sequence_var_1`/2), `b`, _5

  %% Unique:
  %%    _28
  _60 = succeeded:body _28
  br _60, ^60, ^1

60:
  %% Argument types:
  %%    _28 => {1..5, any(), ...}
  %% Unique:
  %%    _28
  _122 = bif:'=:=' _28, `{2,"b"}`
  br _122, ^122, ^62

122:
  %% map_SUITE.erl:2089
  _7 = call (`id`/1), `"c"`

  %% Aliased:
  %%    _7
  _63 = succeeded:body _7
  br _63, ^63, ^1

63:
  %% map_SUITE.erl:2089
  %% Aliased:
  %%    _7
  _8 = put_map `assoc`, `#{}`, `a`, _7, `b`, `no`, `seq`, `3`

  %% map_SUITE.erl:2089
  %% Result type:
  %%    {1..5, any(), ...}
  %% Aliased:
  %%    _8
  _29 = call (`map_guard_sequence_var_1`/2), `a`, _8

  %% Unique:
  %%    _29
  _64 = succeeded:body _29
  br _64, ^64, ^1

64:
  %% Argument types:
  %%    _29 => {1..5, any(), ...}
  %% Unique:
  %%    _29
  _120 = bif:'=:=' _29, `{3,"c"}`
  br _120, ^120, ^66

120:
  %% map_SUITE.erl:2090
  _10 = call (`id`/1), `"d"`

  %% Aliased:
  %%    _10
  _67 = succeeded:body _10
  br _67, ^67, ^1

67:
  %% map_SUITE.erl:2090
  %% Aliased:
  %%    _10
  _11 = put_map `assoc`, `#{}`, `a`, `no`, `b`, _10, `seq`, `4`

  %% map_SUITE.erl:2090
  %% Result type:
  %%    {1..5, any(), ...}
  %% Aliased:
  %%    _11
  _30 = call (`map_guard_sequence_var_1`/2), `b`, _11

  %% Unique:
  %%    _30
  _68 = succeeded:body _30
  br _68, ^68, ^1

68:
  %% Argument types:
  %%    _30 => {1..5, any(), ...}
  %% Unique:
  %%    _30
  _118 = bif:'=:=' _30, `{4,"d"}`
  br _118, ^118, ^70

118:
  %% map_SUITE.erl:2091
  %% Result type:
  %%    {1..5, any(), ...}
  _31 = call (`map_guard_sequence_var_1`/2), `seq`, `#{seq => 4}`

  %% Unique:
  %%    _31
  _71 = succeeded:body _31
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    _31 => {1..5, any(), ...}
  %% Unique:
  %%    _31
  _116 = bif:'=:=' _31, `{4,4}`
  br _116, ^116, ^73

116:
  %% map_SUITE.erl:2092
  _14 = call (`id`/1), `"d"`

  %% Aliased:
  %%    _14
  _74 = succeeded:body _14
  br _74, ^74, ^1

74:
  %% map_SUITE.erl:2092
  %% Aliased:
  %%    _14
  _15 = put_map `assoc`, `#{}`, `a`, `y`, `b`, _14, `seq`, `4`

  %% map_SUITE.erl:2092
  %% Result type:
  %%    {1..5, any(), ...}
  %% Aliased:
  %%    _15
  _32 = call (`map_guard_sequence_var_1`/2), `seq`, _15

  %% Unique:
  %%    _32
  _75 = succeeded:body _32
  br _75, ^75, ^1

75:
  %% Argument types:
  %%    _32 => {1..5, any(), ...}
  %% Unique:
  %%    _32
  _114 = bif:'=:=' _32, `{4,4,y}`
  br _114, ^114, ^77

114:
  %% map_SUITE.erl:2093
  _17 = call (`id`/1), `"d"`

  %% Aliased:
  %%    _17
  _78 = succeeded:body _17
  br _78, ^78, ^1

78:
  %% map_SUITE.erl:2093
  %% Aliased:
  %%    _17
  _18 = put_map `assoc`, `#{}`, `a`, `y`, `b`, _17, `seq`, `5`

  %% map_SUITE.erl:2093
  %% Result type:
  %%    {1..5, any(), ...}
  %% Aliased:
  %%    _18
  _33 = call (`map_guard_sequence_var_1`/2), `b`, _18

  %% Unique:
  %%    _33
  _79 = succeeded:body _33
  br _79, ^79, ^1

79:
  %% Argument types:
  %%    _33 => {1..5, any(), ...}
  %% Unique:
  %%    _33
  _112 = bif:'=:=' _33, `{5,"d"}`
  br _112, ^149, ^81

149:
  br ^150

150:
  _85 = new_try_tag `'catch'`
  br _85, ^83, ^84

83:
  %% map_SUITE.erl:2096
  _20 = call (`id`/1), `"e"`

  %% Aliased:
  %%    _20
  _87 = succeeded:body _20
  br _87, ^87, ^84

87:
  %% map_SUITE.erl:2096
  %% Aliased:
  %%    _20
  _21 = put_map `assoc`, `#{}`, `seq`, `4`, `val`, _20

  %% map_SUITE.erl:2096
  %% Result type:
  %%    {1..5, any(), ...}
  %% Aliased:
  %%    _21
  _41 = call (`map_guard_sequence_var_1`/2), `"a"`, _21

  %% Unique:
  %%    _41
  _88 = succeeded:body _41
  br _88, ^88, ^84

88:
  br ^82

84:
  %% Unique:
  %%    _85
  _91 = landingpad `'catch'`, _85

  %% Aliased:
  %%    _91
  _89 = extract _91, `0`
  br ^82

82:
  _92 = phi { _89, ^84 }, { _41, ^88 }

  %% Aliased:
  %%    _92
  %% Unique:
  %%    _85
  _22 = catch_end _85, _92

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _108 = is_tagged_tuple _22, `2`, `'EXIT'`
  br _108, ^105, ^94

105:
  %% Argument types:
  %%    _22 => {''EXIT'', any()}
  %% Aliased:
  %%    _22
  _34 = get_tuple_element _22, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _102 = bif:is_tuple _34
  br _102, ^102, ^94

102:
  %% Argument types:
  %%    _34 => {...}
  %% Aliased:
  %%    _34
  _103 = bif:tuple_size _34

  %% Argument types:
  %%    _103 => 0..16777215
  %% Unique:
  %%    _103
  _104 = bif:'=:=' _103, `2`
  br _104, ^101, ^94

101:
  %% Argument types:
  %%    _34 => {any(), any()}
  %% Aliased:
  %%    _34
  _37 = get_tuple_element _34, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _98 = is_tagged_tuple _37, `2`, `case_clause`
  br _98, ^95, ^94

95:
  %% Result type:
  %%    'ok'
  ret `ok`

94:
  %% map_SUITE.erl:2096
  %% Aliased:
  %%    _22
  _42 = match_fail `badmatch`, _22

  %% Unique:
  %%    _42
  _111 = succeeded:body _42
  br ^1

81:
  %% map_SUITE.erl:2093
  %% Unique:
  %%    _33
  _43 = match_fail `badmatch`, _33

  %% Unique:
  %%    _43
  _113 = succeeded:body _43
  br ^1

77:
  %% map_SUITE.erl:2092
  %% Unique:
  %%    _32
  _44 = match_fail `badmatch`, _32

  %% Unique:
  %%    _44
  _115 = succeeded:body _44
  br ^1

73:
  %% map_SUITE.erl:2091
  %% Unique:
  %%    _31
  _45 = match_fail `badmatch`, _31

  %% Unique:
  %%    _45
  _117 = succeeded:body _45
  br ^1

70:
  %% map_SUITE.erl:2090
  %% Unique:
  %%    _30
  _46 = match_fail `badmatch`, _30

  %% Unique:
  %%    _46
  _119 = succeeded:body _46
  br ^1

66:
  %% map_SUITE.erl:2089
  %% Unique:
  %%    _29
  _47 = match_fail `badmatch`, _29

  %% Unique:
  %%    _47
  _121 = succeeded:body _47
  br ^1

62:
  %% map_SUITE.erl:2088
  %% Unique:
  %%    _28
  _48 = match_fail `badmatch`, _28

  %% Unique:
  %%    _48
  _123 = succeeded:body _48
  br ^1

58:
  %% map_SUITE.erl:2087
  %% Unique:
  %%    _27
  _49 = match_fail `badmatch`, _27

  %% Unique:
  %%    _49
  _125 = succeeded:body _49
  br ^1

53:
  %% map_SUITE.erl:2086
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_sequence_variables/1-',1}}
  _50 = match_fail `function_clause`, _0

  %% Unique:
  %%    _50
  _126 = succeeded:body _50
  br ^1

1:
  _51 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _51
}

%% map_SUITE.erl:2100
%% Counter = 57
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | 'seq' | nonempty_list(97)
%%    _1 =>
%%     #{'a' | 'b' | 'seq' | 'val'=>any()}
function `map_SUITE`:`map_guard_sequence_var_1`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => #{'a' | 'b' | 'seq' | 'val'=>any()}
  %%    _0 => 'a' | 'b' | 'seq' | nonempty_list(97)
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _0
  _14 = get_map_element _1, _0

  %% Aliased:
  %%    _14
  _30 = succeeded:guard _14
  br _30, ^36, ^29

36:
  %% Argument types:
  %%    _1 => #{'a' | 'b' | 'seq' | 'val'=>any()}
  %% Aliased:
  %%    _1
  _18 = get_map_element _1, `seq`

  %% Aliased:
  %%    _18
  _32 = succeeded:guard _18
  br _32, ^32, ^31

32:
  switch _18, ^31, [
    { `1`, ^35 },
    { `2`, ^35 },
    { `3`, ^35 }
  ]

35:
  %% Argument types:
  %%    _18 => 1..3
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _18
  _21 = put_tuple _18, _14
  %% Result type:
  %%    {1..3, any()}
  %% Unique:
  %%    _21
  ret _21

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _41 = bif:'=:=' _14, `4`
  br _41, ^39, ^46

39:
  %% Argument types:
  %%    _1 => #{'a' | 'b' | 'seq' | 'val'=>any()}
  %% Aliased:
  %%    _1
  _17 = get_map_element _1, `a`

  %% Aliased:
  %%    _17
  _38 = succeeded:guard _17
  br _38, ^38, ^46

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _22 = put_tuple `4`, `4`, _17
  %% Result type:
  %%    {4, 4, any()}
  %% Unique:
  %%    _22
  ret _22

46:
  %% Argument types:
  %%    _1 => #{'a' | 'b' | 'seq' | 'val'=>any()}
  %% Aliased:
  %%    _1
  _16 = get_map_element _1, `seq`

  %% Aliased:
  %%    _16
  _43 = succeeded:guard _16
  br _43, ^43, ^42

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _45 = bif:'=:=' _16, `4`
  br _45, ^44, ^42

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _23 = put_tuple `4`, _14
  %% Result type:
  %%    {4, any()}
  %% Unique:
  %%    _23
  ret _23

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _50 = bif:'=:=' _14, `4`
  br _50, ^48, ^54

48:
  %% Result type:
  %%    {4, 4}
  ret `{4,4}`

54:
  %% Argument types:
  %%    _1 => #{'a' | 'b' | 'seq' | 'val'=>any()}
  %% Aliased:
  %%    _1
  _15 = get_map_element _1, `seq`

  %% Aliased:
  %%    _15
  _51 = succeeded:guard _15
  br _51, ^51, ^29

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _53 = bif:'=:=' _15, `5`
  br _53, ^52, ^29

52:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _25 = put_tuple `5`, _14
  %% Result type:
  %%    {5, any()}
  %% Unique:
  %%    _25
  ret _25

29:
  %% map_SUITE.erl:2101
  %% Aliased:
  %%    _1
  _26 = match_fail `case_clause`, _1

  %% Unique:
  %%    _26
  _56 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% map_SUITE.erl:2112
%% Counter = 189
%% bs_ensure_opt: true
function `map_SUITE`:`t_guard_sequence_mixed`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _62 = bif:is_list _0
  br _62, ^62, ^61

62:
  %% map_SUITE.erl:2113
  M0 = call (`id`/1), `#{a => 1,b => 1,c => 1,d => 1,e => 1,f => 1,g => 1,h => 1}`

  %% Aliased:
  %%    M0
  _63 = succeeded:body M0
  br _63, ^63, ^1

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _66 = bif:is_map M0
  br _66, ^66, ^65

66:
  %% map_SUITE.erl:2114
  %% Aliased:
  %%    M0
  _37 = put_map `exact`, M0, `d`, `3`

  %% Aliased:
  %%    _37
  _67 = succeeded:body _37
  br _67, ^166, ^1

166:
  %% map_SUITE.erl:2114
  %% Aliased:
  %%    _37
  M1 = call (`id`/1), _37

  %% Aliased:
  %%    M1
  _69 = succeeded:body M1
  br _69, ^69, ^1

69:
  %% map_SUITE.erl:2115
  %% Result type:
  %%    1..6
  %% Aliased:
  %%    M1
  _25 = call (`map_guard_sequence_mixed`/3), `a`, `d`, M1

  %% Unique:
  %%    _25
  _70 = succeeded:body _25
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    _25 => 1..6
  %% Unique:
  %%    _25
  _163 = bif:'=:=' _25, `1`
  br _163, ^162, ^72

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M1
  _75 = bif:is_map M1
  br _75, ^75, ^74

75:
  %% map_SUITE.erl:2116
  %% Aliased:
  %%    M1
  _39 = put_map `exact`, M1, `b`, `2`, `d`, `4`, `h`, `2`

  %% Aliased:
  %%    _39
  _76 = succeeded:body _39
  br _76, ^167, ^1

167:
  %% map_SUITE.erl:2116
  %% Aliased:
  %%    _39
  M2 = call (`id`/1), _39

  %% Aliased:
  %%    M2
  _78 = succeeded:body M2
  br _78, ^78, ^1

78:
  %% map_SUITE.erl:2117
  %% Result type:
  %%    1..6
  %% Aliased:
  %%    M2
  _26 = call (`map_guard_sequence_mixed`/3), `a`, `d`, M2

  %% Unique:
  %%    _26
  _79 = succeeded:body _26
  br _79, ^79, ^1

79:
  %% Argument types:
  %%    _26 => 1..6
  %% Unique:
  %%    _26
  _160 = bif:'=:=' _26, `2`
  br _160, ^159, ^81

159:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M2
  _84 = bif:is_map M2
  br _84, ^84, ^83

84:
  %% map_SUITE.erl:2118
  %% Aliased:
  %%    M2
  _41 = put_map `exact`, M2, `b`, `3`, `e`, `5`, `g`, `3`

  %% Aliased:
  %%    _41
  _85 = succeeded:body _41
  br _85, ^168, ^1

168:
  %% map_SUITE.erl:2118
  %% Aliased:
  %%    _41
  M3 = call (`id`/1), _41

  %% Aliased:
  %%    M3
  _87 = succeeded:body M3
  br _87, ^87, ^1

87:
  %% map_SUITE.erl:2119
  %% Result type:
  %%    1..6
  %% Aliased:
  %%    M3
  _27 = call (`map_guard_sequence_mixed`/3), `a`, `e`, M3

  %% Unique:
  %%    _27
  _88 = succeeded:body _27
  br _88, ^88, ^1

88:
  %% Argument types:
  %%    _27 => 1..6
  %% Unique:
  %%    _27
  _157 = bif:'=:=' _27, `3`
  br _157, ^156, ^90

156:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M3
  _93 = bif:is_map M3
  br _93, ^93, ^92

93:
  %% map_SUITE.erl:2120
  %% Aliased:
  %%    M3
  _43 = put_map `exact`, M3, `c`, `4`, `e`, `6`, `h`, `1`

  %% Aliased:
  %%    _43
  _94 = succeeded:body _43
  br _94, ^169, ^1

169:
  %% map_SUITE.erl:2120
  %% Aliased:
  %%    _43
  M4 = call (`id`/1), _43

  %% Aliased:
  %%    M4
  _96 = succeeded:body M4
  br _96, ^96, ^1

96:
  %% map_SUITE.erl:2121
  %% Result type:
  %%    1..6
  %% Aliased:
  %%    M4
  _28 = call (`map_guard_sequence_mixed`/3), `a`, `e`, M4

  %% Unique:
  %%    _28
  _97 = succeeded:body _28
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    _28 => 1..6
  %% Unique:
  %%    _28
  _154 = bif:'=:=' _28, `4`
  br _154, ^153, ^99

153:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M4
  _102 = bif:is_map M4
  br _102, ^102, ^101

102:
  %% map_SUITE.erl:2122
  %% Aliased:
  %%    M4
  _45 = put_map `exact`, M4, `c`, `5`, `f`, `7`, `g`, `2`

  %% Aliased:
  %%    _45
  _103 = succeeded:body _45
  br _103, ^170, ^1

170:
  %% map_SUITE.erl:2122
  %% Aliased:
  %%    _45
  M5 = call (`id`/1), _45

  %% Aliased:
  %%    M5
  _105 = succeeded:body M5
  br _105, ^105, ^1

105:
  %% map_SUITE.erl:2123
  %% Result type:
  %%    1..6
  %% Aliased:
  %%    M5
  _29 = call (`map_guard_sequence_mixed`/3), `a`, `f`, M5

  %% Unique:
  %%    _29
  _106 = succeeded:body _29
  br _106, ^106, ^1

106:
  %% Argument types:
  %%    _29 => 1..6
  %% Unique:
  %%    _29
  _151 = bif:'=:=' _29, `5`
  br _151, ^150, ^108

150:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M5
  _111 = bif:is_map M5
  br _111, ^111, ^110

111:
  %% map_SUITE.erl:2124
  %% Aliased:
  %%    M5
  _47 = put_map `exact`, M5, `c`, `6`, `f`, `8`, `h`, `3`

  %% Aliased:
  %%    _47
  _112 = succeeded:body _47
  br _112, ^171, ^1

171:
  %% map_SUITE.erl:2124
  %% Aliased:
  %%    _47
  M6 = call (`id`/1), _47

  %% Aliased:
  %%    M6
  _114 = succeeded:body M6
  br _114, ^114, ^1

114:
  %% map_SUITE.erl:2125
  %% Result type:
  %%    1..6
  %% Aliased:
  %%    M6
  _30 = call (`map_guard_sequence_mixed`/3), `a`, `f`, M6

  %% Unique:
  %%    _30
  _115 = succeeded:body _30
  br _115, ^115, ^1

115:
  %% Argument types:
  %%    _30 => 1..6
  %% Unique:
  %%    _30
  _148 = bif:'=:=' _30, `6`
  br _148, ^187, ^117

187:
  br ^188

188:
  _121 = new_try_tag `'catch'`
  br _121, ^119, ^120

119:
  %% map_SUITE.erl:2128
  %% Result type:
  %%    1..6
  %% Aliased:
  %%    M0
  _50 = call (`map_guard_sequence_mixed`/3), `a`, `b`, M0

  %% Unique:
  %%    _50
  _123 = succeeded:body _50
  br _123, ^123, ^120

123:
  br ^118

120:
  %% Unique:
  %%    _121
  _126 = landingpad `'catch'`, _121

  %% Aliased:
  %%    _126
  _124 = extract _126, `0`
  br ^118

118:
  _127 = phi { _124, ^120 }, { _50, ^123 }

  %% Aliased:
  %%    _127
  %% Unique:
  %%    _121
  _20 = catch_end _121, _127

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _143 = is_tagged_tuple _20, `2`, `'EXIT'`
  br _143, ^140, ^129

140:
  %% Argument types:
  %%    _20 => {''EXIT'', any()}
  %% Aliased:
  %%    _20
  _31 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _137 = bif:is_tuple _31
  br _137, ^137, ^129

137:
  %% Argument types:
  %%    _31 => {...}
  %% Aliased:
  %%    _31
  _138 = bif:tuple_size _31

  %% Argument types:
  %%    _138 => 0..16777215
  %% Unique:
  %%    _138
  _139 = bif:'=:=' _138, `2`
  br _139, ^136, ^129

136:
  %% Argument types:
  %%    _31 => {any(), any()}
  %% Aliased:
  %%    _31
  _34 = get_tuple_element _31, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _133 = is_tagged_tuple _34, `2`, `case_clause`
  br _133, ^130, ^129

130:
  %% Result type:
  %%    'ok'
  ret `ok`

129:
  %% map_SUITE.erl:2128
  %% Aliased:
  %%    _20
  _51 = match_fail `badmatch`, _20

  %% Unique:
  %%    _51
  _146 = succeeded:body _51
  br ^1

117:
  %% map_SUITE.erl:2125
  %% Unique:
  %%    _30
  _52 = match_fail `badmatch`, _30

  %% Unique:
  %%    _52
  _149 = succeeded:body _52
  br ^1

110:
  %% map_SUITE.erl:2124
  %% Aliased:
  %%    M5
  _48 = match_fail `badmap`, M5

  %% Unique:
  %%    _48
  _113 = succeeded:body _48
  br ^1

108:
  %% map_SUITE.erl:2123
  %% Unique:
  %%    _29
  _53 = match_fail `badmatch`, _29

  %% Unique:
  %%    _53
  _152 = succeeded:body _53
  br ^1

101:
  %% map_SUITE.erl:2122
  %% Aliased:
  %%    M4
  _46 = match_fail `badmap`, M4

  %% Unique:
  %%    _46
  _104 = succeeded:body _46
  br ^1

99:
  %% map_SUITE.erl:2121
  %% Unique:
  %%    _28
  _54 = match_fail `badmatch`, _28

  %% Unique:
  %%    _54
  _155 = succeeded:body _54
  br ^1

92:
  %% map_SUITE.erl:2120
  %% Aliased:
  %%    M3
  _44 = match_fail `badmap`, M3

  %% Unique:
  %%    _44
  _95 = succeeded:body _44
  br ^1

90:
  %% map_SUITE.erl:2119
  %% Unique:
  %%    _27
  _55 = match_fail `badmatch`, _27

  %% Unique:
  %%    _55
  _158 = succeeded:body _55
  br ^1

83:
  %% map_SUITE.erl:2118
  %% Aliased:
  %%    M2
  _42 = match_fail `badmap`, M2

  %% Unique:
  %%    _42
  _86 = succeeded:body _42
  br ^1

81:
  %% map_SUITE.erl:2117
  %% Unique:
  %%    _26
  _56 = match_fail `badmatch`, _26

  %% Unique:
  %%    _56
  _161 = succeeded:body _56
  br ^1

74:
  %% map_SUITE.erl:2116
  %% Aliased:
  %%    M1
  _40 = match_fail `badmap`, M1

  %% Unique:
  %%    _40
  _77 = succeeded:body _40
  br ^1

72:
  %% map_SUITE.erl:2115
  %% Unique:
  %%    _25
  _57 = match_fail `badmatch`, _25

  %% Unique:
  %%    _57
  _164 = succeeded:body _57
  br ^1

65:
  %% map_SUITE.erl:2114
  %% Aliased:
  %%    M0
  _38 = match_fail `badmap`, M0

  %% Unique:
  %%    _38
  _68 = succeeded:body _38
  br ^1

61:
  %% map_SUITE.erl:2112
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_guard_sequence_mixed/1-',1}}
  _58 = match_fail `function_clause`, _0

  %% Unique:
  %%    _58
  _165 = succeeded:body _58
  br ^1

1:
  _59 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _59
}

%% map_SUITE.erl:2131
%% Counter = 76
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'b' | 'd' | 'e' | 'f'
function `map_SUITE`:`map_guard_sequence_mixed`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _74 = bif:is_map _2
  br _74, ^74, ^21

74:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _5 = get_map_element _2, `a`

  %% Aliased:
  %%    _5
  _22 = succeeded:guard _5
  br _22, ^22, ^21

22:
  %% Argument types:
  %%    _2 => map()
  %%    _1 => 'b' | 'd' | 'e' | 'f'
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _1
  _4 = get_map_element _2, _1

  %% Aliased:
  %%    _4
  _23 = succeeded:guard _4
  br _23, ^23, ^21

23:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _73 = bif:'=:=' _5, `1`
  br _73, ^72, ^21

72:
  switch _4, ^21, [
    { `3`, ^30 },
    { `4`, ^37 },
    { `5`, ^44 },
    { `6`, ^51 },
    { `7`, ^58 },
    { `8`, ^65 }
  ]

65:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _17 = get_map_element _2, `c`

  %% Aliased:
  %%    _17
  _59 = succeeded:guard _17
  br _59, ^59, ^21

59:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _16 = get_map_element _2, `h`

  %% Aliased:
  %%    _16
  _60 = succeeded:guard _16
  br _60, ^60, ^21

60:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _64 = bif:'=:=' _17, `6`
  br _64, ^63, ^21

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _62 = bif:'=:=' _16, `3`
  br _62, ^61, ^21

61:
  %% Result type:
  %%    6
  ret `6`

58:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _15 = get_map_element _2, `c`

  %% Aliased:
  %%    _15
  _52 = succeeded:guard _15
  br _52, ^52, ^21

52:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _14 = get_map_element _2, `g`

  %% Aliased:
  %%    _14
  _53 = succeeded:guard _14
  br _53, ^53, ^21

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _57 = bif:'=:=' _15, `5`
  br _57, ^56, ^21

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _55 = bif:'=:=' _14, `2`
  br _55, ^54, ^21

54:
  %% Result type:
  %%    5
  ret `5`

51:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _13 = get_map_element _2, `c`

  %% Aliased:
  %%    _13
  _45 = succeeded:guard _13
  br _45, ^45, ^21

45:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _12 = get_map_element _2, `h`

  %% Aliased:
  %%    _12
  _46 = succeeded:guard _12
  br _46, ^46, ^21

46:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _50 = bif:'=:=' _13, `4`
  br _50, ^49, ^21

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _48 = bif:'=:=' _12, `1`
  br _48, ^47, ^21

47:
  %% Result type:
  %%    4
  ret `4`

44:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _11 = get_map_element _2, `b`

  %% Aliased:
  %%    _11
  _38 = succeeded:guard _11
  br _38, ^38, ^21

38:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _10 = get_map_element _2, `g`

  %% Aliased:
  %%    _10
  _39 = succeeded:guard _10
  br _39, ^39, ^21

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _43 = bif:'=:=' _11, `3`
  br _43, ^42, ^21

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _41 = bif:'=:=' _10, `3`
  br _41, ^40, ^21

40:
  %% Result type:
  %%    3
  ret `3`

37:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _9 = get_map_element _2, `b`

  %% Aliased:
  %%    _9
  _31 = succeeded:guard _9
  br _31, ^31, ^21

31:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _8 = get_map_element _2, `h`

  %% Aliased:
  %%    _8
  _32 = succeeded:guard _8
  br _32, ^32, ^21

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _36 = bif:'=:=' _9, `2`
  br _36, ^35, ^21

35:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _34 = bif:'=:=' _8, `2`
  br _34, ^33, ^21

33:
  %% Result type:
  %%    2
  ret `2`

30:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _7 = get_map_element _2, `b`

  %% Aliased:
  %%    _7
  _24 = succeeded:guard _7
  br _24, ^24, ^21

24:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2
  _6 = get_map_element _2, `g`

  %% Aliased:
  %%    _6
  _25 = succeeded:guard _6
  br _25, ^25, ^21

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _29 = bif:'=:=' _7, `1`
  br _29, ^28, ^21

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _27 = bif:'=:=' _6, `1`
  br _27, ^26, ^21

26:
  %% Result type:
  %%    1
  ret `1`

21:
  %% map_SUITE.erl:2132
  %% Aliased:
  %%    _2
  _18 = match_fail `case_clause`, _2

  %% Unique:
  %%    _18
  _75 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% map_SUITE.erl:2163
%% Counter = 25
%% bs_ensure_opt: true
function `map_SUITE`:`t_register_corruption`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _13 = bif:is_list _0
  br _13, ^13, ^12

13:
  %% map_SUITE.erl:2165
  %% Result type:
  %%    {3, 'wanted', 3 | bitstring(8)}
  _5 = call (`register_corruption_bar`/2), `#{a => <<"value">>,c => 3}`, `wanted`

  %% Unique:
  %%    _5
  _14 = succeeded:body _5
  br _14, ^14, ^1

14:
  %% Argument types:
  %%    _5 => {3, 'wanted', 3 | bitstring(8)}
  %% Unique:
  %%    _5
  _22 = bif:'=:=' _5, `{3,wanted,<<"value">>}`
  br _22, ^22, ^16

22:
  %% map_SUITE.erl:2166
  %% Result type:
  %%    {3, 'wanted', 3 | bitstring(8)}
  _6 = call (`register_corruption_foo`/2), `wanted`, `#{a => <<"value">>,c => 3}`

  %% Unique:
  %%    _6
  _17 = succeeded:body _6
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    _6 => {3, 'wanted', 3 | bitstring(8)}
  %% Unique:
  %%    _6
  _20 = bif:'=:=' _6, `{3,wanted,<<"value">>}`
  br _20, ^20, ^19

20:
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  %% map_SUITE.erl:2166
  %% Unique:
  %%    _6
  _7 = match_fail `badmatch`, _6

  %% Unique:
  %%    _7
  _21 = succeeded:body _7
  br ^1

16:
  %% map_SUITE.erl:2165
  %% Unique:
  %%    _5
  _8 = match_fail `badmatch`, _5

  %% Unique:
  %%    _8
  _23 = succeeded:body _8
  br ^1

12:
  %% map_SUITE.erl:2163
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_register_corruption/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _24 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% map_SUITE.erl:2169
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'wanted'
%%    _1 =>
%%     #{'a' | 'c'=>3 | bitstring(8)}
function `map_SUITE`:`register_corruption_foo`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => #{'a' | 'c'=>3 | bitstring(8)}
  %% Aliased:
  %%    _1
  _10 = get_map_element _1, `a`

  %% Aliased:
  %%    _10
  _25 = succeeded:guard _10
  br _25, ^25, ^17

25:
  %% map_SUITE.erl:2174
  %% Result type:
  %%    {3, 'wanted', 3 | bitstring(8)}
  %% Aliased:
  %%    _10
  _11 = call (`register_corruption_dummy_call`/3), `3`, `wanted`, _10

  %% Unique:
  %%    _11
  _26 = succeeded:body _11
  br _26, ^26, ^1

26:
  %% Result type:
  %%    {3, 'wanted', 3 | bitstring(8)}
  %% Unique:
  %%    _11
  ret _11

17:
  %% map_SUITE.erl:2169
  %% Aliased:
  %%    _1
  %% Anno: #{inlined => {'-inlined-register_corruption_foo/2-',2}}
  _14 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _14
  _28 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% map_SUITE.erl:2176
%% Counter = 26
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'a' | 'c'=>3 | bitstring(8)}
%%    _1 =>
%%     'wanted'
function `map_SUITE`:`register_corruption_bar`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => #{'a' | 'c'=>3 | bitstring(8)}
  %% Aliased:
  %%    _0
  _7 = get_map_element _0, `a`

  %% Aliased:
  %%    _7
  _22 = succeeded:guard _7
  br _22, ^22, ^14

22:
  %% map_SUITE.erl:2183
  %% Result type:
  %%    {3, 'wanted', 3 | bitstring(8)}
  %% Aliased:
  %%    _7
  _8 = call (`register_corruption_dummy_call`/3), `3`, _1, _7

  %% Unique:
  %%    _8
  _23 = succeeded:body _8
  br _23, ^23, ^1

23:
  %% Result type:
  %%    {3, 'wanted', 3 | bitstring(8)}
  %% Unique:
  %%    _8
  ret _8

14:
  %% map_SUITE.erl:2177
  %% Aliased:
  %%    _0
  _11 = match_fail `case_clause`, _0

  %% Unique:
  %%    _11
  _25 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% map_SUITE.erl:2187
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     3
%%    _1 =>
%%     'wanted'
%%    _2 =>
%%     3 | bitstring(8)
function `map_SUITE`:`register_corruption_dummy_call`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _2 => 3 | bitstring(8)
  %% Aliased:
  %%    _2
  _3 = put_tuple `3`, `wanted`, _2
  %% Result type:
  %%    {3, 'wanted', 3 | bitstring(8)}
  %% Unique:
  %%    _3
  ret _3
}

%% map_SUITE.erl:2190
%% Counter = 36
%% bs_ensure_opt: true
function `map_SUITE`:`t_frequency_table`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _18 = bif:is_list _0
  br _18, ^18, ^17

18:
  %% map_SUITE.erl:2191
  _11 = call (`rand`:`seed`/2), `exsplus`, `{13,1337,54}`

  %% Aliased:
  %%    _11
  _19 = succeeded:body _11
  br _19, ^19, ^1

19:
  %% map_SUITE.erl:2193
  %% Result type:
  %%    nonempty_list(any())
  Ts = call (`rand_terms`/1), `100000`

  %% Aliased:
  %%    Ts
  _20 = succeeded:body Ts
  br _20, ^20, ^1

20:
  %% map_SUITE.erl:2194
  %% Result type:
  %%    #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    Ts
  _7 = call (`frequency_table`/2), Ts, `#{n => 0,tf => #{}}`

  %% Aliased:
  %%    _7
  _21 = succeeded:body _7
  br _21, ^33, ^1

33:
  %% Argument types:
  %%    _7 => #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _7
  _9 = get_map_element _7, `n`

  %% Aliased:
  %%    _9
  _24 = succeeded:guard _9
  br _24, ^24, ^23

24:
  %% Argument types:
  %%    _7 => #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _7
  _8 = get_map_element _7, `tf`

  %% Aliased:
  %%    _8
  _25 = succeeded:guard _8
  br _25, ^25, ^23

25:
  %% Argument types:
  %%    _9 => 0..'+inf' | #{any()=>1..'+inf'}
  %% Aliased:
  %%    _9
  _26 = bif:'=:=' _9, `100000`
  br _26, ^26, ^23

26:
  %% map_SUITE.erl:2195
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _8, 
  %%    Ts
  _10 = call (`check_frequency`/2), Ts, _8

  %% Unique:
  %%    _10
  _27 = succeeded:body _10
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %% Unique:
  %%    _10
  _31 = bif:'=:=' _10, `ok`
  br _31, ^30, ^29

30:
  %% Result type:
  %%    'ok'
  ret `ok`

29:
  %% map_SUITE.erl:2195
  _12 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _12
  _32 = succeeded:body _12
  br ^1

23:
  %% map_SUITE.erl:2194
  %% Aliased:
  %%    _7
  _13 = match_fail `badmatch`, _7

  %% Unique:
  %%    _13
  _34 = succeeded:body _13
  br ^1

17:
  %% map_SUITE.erl:2190
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_frequency_table/1-',1}}
  _14 = match_fail `function_clause`, _0

  %% Unique:
  %%    _14
  _35 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% map_SUITE.erl:2199
%% Counter = 74
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(any())
%%    _1 =>
%%     #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
function `map_SUITE`:`frequency_table`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _69 = is_nonempty_list _0
  br _69, ^69, ^70

69:
  %% Argument types:
  %%    _0 => nonempty_list(any())
  %% Aliased:
  %%    _0
  _14 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(any())
  %% Aliased:
  %%    _0
  _13 = get_tl _0

  %% Argument types:
  %%    _1 => #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _1
  _18 = get_map_element _1, `n`

  %% Aliased:
  %%    _18
  _38 = succeeded:guard _18
  br _38, ^38, ^37

38:
  %% Argument types:
  %%    _1 => #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _1
  _17 = get_map_element _1, `tf`

  %% Aliased:
  %%    _17
  _39 = succeeded:guard _17
  br _39, ^39, ^37

39:
  %% Argument types:
  %%    _17 => 0..'+inf' | #{any()=>1..'+inf'}
  %% Aliased:
  %%    _17
  _55 = bif:is_map _17
  br _55, ^55, ^40

55:
  %% Argument types:
  %%    _17 => #{any()=>1..'+inf'}
  %% Aliased:
  %%    _14, 
  %%    _17
  _19 = get_map_element _17, _14

  %% Aliased:
  %%    _19
  _41 = succeeded:guard _19
  br _41, ^41, ^40

41:
  %% map_SUITE.erl:2202
  %% Argument types:
  %%    _18 => 0..'+inf' | #{any()=>1..'+inf'}
  %% Aliased:
  %%    _18
  _2 = bif:'+' _18, `1`

  %% Unique:
  %%    _2
  _42 = succeeded:body _2
  br _42, ^42, ^1

42:
  %% map_SUITE.erl:2202
  %% Argument types:
  %%    _19 => 1..'+inf'
  %% Unique:
  %%    _19
  _3 = bif:'+' _19, `1`

  %% Unique:
  %%    _3
  _43 = succeeded:body _3
  br _43, ^46, ^1

46:
  %% map_SUITE.erl:2202
  %% Aliased:
  %%    _3, 
  %%    _14, 
  %%    _17
  _20 = put_map `exact`, _17, _14, _3

  %% Aliased:
  %%    _20
  _47 = succeeded:body _20
  br _47, ^51, ^1

51:
  %% map_SUITE.erl:2202
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _20
  _22 = put_map `exact`, _1, `n`, _2, `tf`, _20

  %% Aliased:
  %%    _22
  _52 = succeeded:body _22
  br _52, ^72, ^1

72:
  %% map_SUITE.erl:2202
  %% Result type:
  %%    #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _13, 
  %%    _22
  _24 = call (`frequency_table`/2), _13, _22

  %% Aliased:
  %%    _24
  _54 = succeeded:body _24
  br _54, ^54, ^1

54:
  %% Result type:
  %%    #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _24
  ret _24

40:
  %% map_SUITE.erl:2204
  %% Argument types:
  %%    _18 => 0..'+inf' | #{any()=>1..'+inf'}
  %% Aliased:
  %%    _18
  _6 = bif:'+' _18, `1`

  %% Unique:
  %%    _6
  _56 = succeeded:body _6
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    _17 => 0..'+inf' | #{any()=>1..'+inf'}
  %% Aliased:
  %%    _17
  _59 = bif:is_map _17
  br _59, ^59, ^58

59:
  %% map_SUITE.erl:2204
  %% Aliased:
  %%    _14, 
  %%    _17
  _25 = put_map `assoc`, _17, _14, `1`

  %% map_SUITE.erl:2204
  %% Aliased:
  %%    _1, 
  %%    _6, 
  %%    _25
  _27 = put_map `exact`, _1, `n`, _6, `tf`, _25

  %% Aliased:
  %%    _27
  _64 = succeeded:body _27
  br _64, ^73, ^1

73:
  %% map_SUITE.erl:2204
  %% Result type:
  %%    #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _13, 
  %%    _27
  _29 = call (`frequency_table`/2), _13, _27

  %% Aliased:
  %%    _29
  _66 = succeeded:body _29
  br _66, ^66, ^1

66:
  %% Result type:
  %%    #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _29
  ret _29

58:
  %% map_SUITE.erl:2204
  %% Aliased:
  %%    _17
  _26 = match_fail `badmap`, _17

  %% Unique:
  %%    _26
  _60 = succeeded:body _26
  br ^1

37:
  %% map_SUITE.erl:2200
  %% Aliased:
  %%    _1
  _30 = match_fail `case_clause`, _1

  %% Unique:
  %%    _30
  _68 = succeeded:body _30
  br ^1

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32

70:
  %% Result type:
  %%    #{'n' | 'tf'=>0..'+inf' | #{any()=>1..'+inf'}}
  %% Aliased:
  %%    _1
  ret _1
}

%% map_SUITE.erl:2209
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(any())
%%    _1 =>
%%     0..'+inf' | #{any()=>1..'+inf'}
function `map_SUITE`:`check_frequency`(_0, _1) {
0:
  %% map_SUITE.erl:2210
  _2 = call (`dict`:`new`/0)

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% map_SUITE.erl:2210
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  _3 = call (`check_frequency`/3), _0, _1, _2

  %% Unique:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^7, ^1

7:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% map_SUITE.erl:2212
%% Counter = 51
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(any())
%%    _1 =>
%%     0..'+inf' | #{any()=>1..'+inf'}
function `map_SUITE`:`check_frequency`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _0
  _45 = is_nonempty_list _0
  br _45, ^45, ^48

45:
  %% Argument types:
  %%    _0 => nonempty_list(any())
  %% Aliased:
  %%    _0
  _14 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(any())
  %% Aliased:
  %%    _0
  _13 = get_tl _0

  %% map_SUITE.erl:2213
  %% Aliased:
  %%    _2, 
  %%    _14
  _15 = call (`dict`:`find`/2), _14, _2

  %% Aliased:
  %%    _15
  _27 = succeeded:body _15
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _37 = bif:is_tuple _15
  br _37, ^37, ^30

37:
  %% Argument types:
  %%    _15 => {...}
  %% Aliased:
  %%    _15
  _39 = is_tagged_tuple _15, `2`, `ok`
  br _39, ^34, ^29

34:
  %% Argument types:
  %%    _15 => {'ok', any()}
  %% Aliased:
  %%    _15
  _16 = get_tuple_element _15, `1`

  %% map_SUITE.erl:2215
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _4 = bif:'+' _16, `1`

  %% Unique:
  %%    _4
  _31 = succeeded:body _4
  br _31, ^31, ^1

31:
  %% map_SUITE.erl:2215
  %% Aliased:
  %%    _2, 
  %%    _14
  %% Unique:
  %%    _4
  _5 = call (`dict`:`store`/3), _14, _4, _2

  %% Aliased:
  %%    _5
  _32 = succeeded:body _5
  br _32, ^32, ^1

32:
  %% map_SUITE.erl:2215
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _5, 
  %%    _13
  _20 = call (`check_frequency`/3), _13, _1, _5

  %% Unique:
  %%    _20
  _33 = succeeded:body _20
  br _33, ^33, ^1

33:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _20
  ret _20

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _43 = bif:'=:=' _15, `error`
  br _43, ^42, ^29

42:
  %% map_SUITE.erl:2214
  %% Aliased:
  %%    _2, 
  %%    _14
  _3 = call (`dict`:`store`/3), _14, `1`, _2

  %% Aliased:
  %%    _3
  _40 = succeeded:body _3
  br _40, ^40, ^1

40:
  %% map_SUITE.erl:2214
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _3, 
  %%    _13
  _19 = call (`check_frequency`/3), _13, _1, _3

  %% Unique:
  %%    _19
  _41 = succeeded:body _19
  br _41, ^41, ^1

41:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _19
  ret _19

29:
  %% map_SUITE.erl:2213
  %% Aliased:
  %%    _15
  _21 = match_fail `case_clause`, _15

  %% Unique:
  %%    _21
  _44 = succeeded:body _21
  br ^1

48:
  %% map_SUITE.erl:2218
  %% Aliased:
  %%    _2
  _7 = call (`dict`:`to_list`/1), _2

  %% Aliased:
  %%    _7
  _46 = succeeded:body _7
  br _46, ^46, ^1

46:
  %% map_SUITE.erl:2218
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _7
  _18 = call (`validate_frequency`/2), _7, _1

  %% Unique:
  %%    _18
  _47 = succeeded:body _18
  br _47, ^47, ^1

47:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _18
  ret _18

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% map_SUITE.erl:2220
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     0..'+inf' | #{any()=>1..'+inf'}
function `map_SUITE`:`validate_frequency`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _29 = is_nonempty_list _0
  br _29, ^29, ^18

29:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _9 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _8 = get_tl _0

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _26 = bif:is_tuple _9
  br _26, ^26, ^17

26:
  %% Argument types:
  %%    _9 => {...}
  %% Aliased:
  %%    _9
  _27 = bif:tuple_size _9

  %% Argument types:
  %%    _27 => 0..16777215
  %% Unique:
  %%    _27
  _28 = bif:'=:=' _27, `2`
  br _28, ^25, ^17

25:
  %% Argument types:
  %%    _1 => 0..'+inf' | #{any()=>1..'+inf'}
  %% Aliased:
  %%    _1
  _24 = bif:is_map _1
  br _24, ^24, ^20

24:
  %% Argument types:
  %%    _9 => {any(), any()}
  %% Aliased:
  %%    _9
  _11 = get_tuple_element _9, `0`

  %% Argument types:
  %%    _1 => #{any()=>1..'+inf'}
  %% Aliased:
  %%    _1, 
  %%    _11
  _12 = get_map_element _1, _11

  %% Aliased:
  %%    _12
  _21 = succeeded:guard _12
  br _21, ^21, ^20

21:
  %% Argument types:
  %%    _9 => {any(), any()}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `1`

  %% Argument types:
  %%    _12 => 1..'+inf'
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _12
  _22 = bif:'=:=' _12, _10
  br _22, ^22, ^20

22:
  %% map_SUITE.erl:2222
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _8
  _13 = call (`validate_frequency`/2), _8, _1

  %% Unique:
  %%    _13
  _23 = succeeded:body _13
  br _23, ^23, ^1

23:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _13
  ret _13

20:
  %% Result type:
  %%    'error'
  ret `error`

18:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _30 = bif:'=:=' _0, `[]`
  br _30, ^30, ^17

30:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% map_SUITE.erl:2220
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-validate_frequency/2-',2}}
  _14 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _14
  _31 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% map_SUITE.erl:2228
%% Counter = 89
%% bs_ensure_opt: true
function `map_SUITE`:`t_bad_update`(_0) {
0:
  %% map_SUITE.erl:2229
  %% Result type:
  %%    {#{0.0=>fun((_))}, #{}}
  _8 = call (`properly`/1), `#{}`

  %% Unique:
  %%    _8
  _26 = succeeded:body _8
  br _26, ^66, ^1

66:
  %% Argument types:
  %%    _8 => {#{0.0=>fun((_))}, #{}}
  %% Unique:
  %%    _8
  _10 = get_tuple_element _8, `0`

  %% Argument types:
  %%    _10 => #{0.0=>fun((_))}
  %% Aliased:
  %%    _10
  _29 = has_map_field _10, `0.0`
  br _29, ^65, ^28

65:
  %% map_SUITE.erl:2230
  %% Argument types:
  %%    (`id`/1) => fun((_))
  _12 = call (`id`/1), `42`

  %% Aliased:
  %%    _12
  _30 = succeeded:body _12
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _63 = bif:'=:=' _12, `42`
  br _63, ^87, ^32

87:
  br ^88

88:
  _36 = new_try_tag `'catch'`
  br _36, ^34, ^35

34:
  %% map_SUITE.erl:2231
  _20 = call (`increase`/1), `0`

  %% Aliased:
  %%    _20
  _38 = succeeded:body _20
  br _38, ^38, ^35

38:
  br ^33

35:
  %% Unique:
  %%    _36
  _41 = landingpad `'catch'`, _36

  %% Aliased:
  %%    _41
  _39 = extract _41, `0`
  br ^33

33:
  _42 = phi { _39, ^35 }, { _20, ^38 }

  %% Aliased:
  %%    _42
  %% Unique:
  %%    _36
  _3 = catch_end _36, _42

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _58 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _58, ^55, ^44

55:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _13 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _52 = bif:is_tuple _13
  br _52, ^52, ^44

52:
  %% Argument types:
  %%    _13 => {...}
  %% Aliased:
  %%    _13
  _53 = bif:tuple_size _13

  %% Argument types:
  %%    _53 => 0..16777215
  %% Unique:
  %%    _53
  _54 = bif:'=:=' _53, `2`
  br _54, ^51, ^44

51:
  %% Argument types:
  %%    _13 => {any(), any()}
  %% Aliased:
  %%    _13
  _16 = get_tuple_element _13, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _48 = is_tagged_tuple _16, `2`, `badmap`
  br _48, ^45, ^44

45:
  %% Result type:
  %%    'ok'
  ret `ok`

44:
  %% map_SUITE.erl:2231
  %% Aliased:
  %%    _3
  _21 = match_fail `badmatch`, _3

  %% Unique:
  %%    _21
  _61 = succeeded:body _21
  br ^1

32:
  %% map_SUITE.erl:2230
  %% Aliased:
  %%    _12
  _22 = match_fail `badmatch`, _12

  %% Unique:
  %%    _22
  _64 = succeeded:body _22
  br ^1

28:
  %% map_SUITE.erl:2229
  %% Unique:
  %%    _8
  _23 = match_fail `badmatch`, _8

  %% Unique:
  %%    _23
  _71 = succeeded:body _23
  br ^1

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% map_SUITE.erl:2234
%% Counter = 14
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{}
function `map_SUITE`:`properly`(_0) {
0:
  _1 = make_fun (`id`/1)

  %% map_SUITE.erl:2235
  %% Aliased:
  %%    _1
  _3 = put_map `assoc`, `#{}`, `0.0`, _1

  %% Argument types:
  %%    _3 => #{0.0=>fun((_))}
  %% Aliased:
  %%    _3
  _12 = put_tuple _3, `#{}`
  %% Result type:
  %%    {#{0.0=>fun((_))}, #{}}
  %% Unique:
  %%    _12
  ret _12
}

%% map_SUITE.erl:2237
%% Counter = 41
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0
function `map_SUITE`:`increase`(_0) {
0:
  %% Result type:
  %%    0
  _1 = make_fun (`'-increase/1-fun-0-'`/1), `0`
  _14 = new_try_tag `'catch'`
  br _14, ^18, ^13

18:
  %% map_SUITE.erl:2238
  %% Aliased:
  %%    _1
  _8 = match_fail `badmap`, _1

  %% Unique:
  %%    _8
  _20 = succeeded:body _8
  br ^13

13:
  %% Unique:
  %%    _14
  _23 = landingpad `'catch'`, _14

  %% Aliased:
  %%    _23
  _21 = extract _23, `0`
  br ^11

11:
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _14
  _4 = catch_end _14, _21
  %% Aliased:
  %%    _4
  ret _4
}

%% map_SUITE.erl:2240
%% Counter = 33
%% bs_ensure_opt: true
function `map_SUITE`:`t_reused_key_variable`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _18 = bif:is_list _0
  br _18, ^18, ^17

18:
  %% map_SUITE.erl:2241
  Key = call (`id`/1), `key`

  %% Aliased:
  %%    Key
  _19 = succeeded:body Key
  br _19, ^19, ^1

19:
  %% map_SUITE.erl:2242
  %% Aliased:
  %%    _0, 
  %%    Key
  _2 = put_map `assoc`, `#{}`, Key, _0

  %% map_SUITE.erl:2242
  %% Aliased:
  %%    _2
  Map1 = call (`id`/1), _2

  %% Aliased:
  %%    Map1
  _20 = succeeded:body Map1
  br _20, ^20, ^1

20:
  %% map_SUITE.erl:2243
  %% Aliased:
  %%    _0, 
  %%    Key
  _4 = put_map `assoc`, `#{}`, Key, _0

  %% map_SUITE.erl:2243
  %% Aliased:
  %%    _4
  Map2 = call (`id`/1), _4

  %% Aliased:
  %%    Map2
  _21 = succeeded:body Map2
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Map1
  _28 = bif:is_map Map1
  br _28, ^28, ^23

28:
  %% Argument types:
  %%    Map1 => map()
  %% Aliased:
  %%    Key, 
  %%    Map1
  _11 = get_map_element Map1, Key

  %% Aliased:
  %%    _11
  _24 = succeeded:guard _11
  br _24, ^24, ^23

24:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Map2
  _27 = bif:is_map Map2
  br _27, ^27, ^23

27:
  %% Argument types:
  %%    Map2 => map()
  %% Aliased:
  %%    Key, 
  %%    Map2
  _12 = get_map_element Map2, Key

  %% Aliased:
  %%    _12
  _25 = succeeded:guard _12
  br _25, ^25, ^23

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11, 
  %%    _12
  _26 = bif:'=:=' _12, _11
  br _26, ^26, ^23

26:
  %% Result type:
  %%    'ok'
  ret `ok`

23:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Map1, 
  %%    Map2
  _6 = put_tuple Map1, Map2

  %% map_SUITE.erl:2244
  %% Unique:
  %%    _6
  _13 = match_fail `case_clause`, _6

  %% Unique:
  %%    _13
  _29 = succeeded:body _13
  br ^1

17:
  %% map_SUITE.erl:2240
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_reused_key_variable/1-',1}}
  _14 = match_fail `function_clause`, _0

  %% Unique:
  %%    _14
  _30 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% map_SUITE.erl:2251
%% Counter = 57
%% bs_ensure_opt: true
function `map_SUITE`:`t_mixed_clause`(_0) {
0:
  %% map_SUITE.erl:2252
  _21 = call (`erlang`:`put`/2), `fool_inliner`, `x`

  %% Aliased:
  %%    _21
  _31 = succeeded:body _21
  br _31, ^31, ^1

31:
  %% map_SUITE.erl:2253
  %% Argument types:
  %%    
  K = bif:get `fool_inliner`

  %% map_SUITE.erl:2254
  %% Aliased:
  %%    K
  _10 = put_map `assoc`, `#{}`, K, `42`

  %% map_SUITE.erl:2254
  %% Aliased:
  %%    _10
  _11 = put_map `assoc`, _10, `y`, `100`

  %% Argument types:
  %%    _11 => #{any()=>42..100}
  %% Aliased:
  %%    _11
  _13 = get_map_element _11, `x`

  %% Aliased:
  %%    _13
  _34 = succeeded:guard _13
  br _34, ^35, ^33

35:
  %% Argument types:
  %%    _13 => 42..100
  %% Unique:
  %%    _13
  _14 = put_tuple _13, `100`

  %% Argument types:
  %%    _14 => {42..100, 100}
  %% Unique:
  %%    _14
  _55 = bif:'=:=' _14, `{42,100}`
  br _55, ^52, ^39

52:
  %% Result type:
  %%    'ok'
  ret `ok`

39:
  %% map_SUITE.erl:2254
  %% Unique:
  %%    _14
  _28 = match_fail `badmatch`, _14

  %% Unique:
  %%    _28
  _56 = succeeded:body _28
  br ^1

33:
  %% map_SUITE.erl:2254
  %% Aliased:
  %%    _11
  _24 = match_fail `case_clause`, _11

  %% Unique:
  %%    _24
  _37 = succeeded:body _24
  br ^1

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% map_SUITE.erl:2266
%% Counter = 12
%% bs_ensure_opt: true
function `map_SUITE`:`cover_beam_trim`(_0) {
0:
  %% map_SUITE.erl:2267
  _2 = call (`do_cover_beam_trim`/5), `id`, `max`, `max`, `id`, `#{id => val}`

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _10 = bif:'=:=' _2, `val`
  br _10, ^9, ^8

9:
  %% Result type:
  %%    'ok'
  ret `ok`

8:
  %% map_SUITE.erl:2267
  %% Aliased:
  %%    _2
  _3 = match_fail `badmatch`, _2

  %% Unique:
  %%    _3
  _11 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% map_SUITE.erl:2270
%% Counter = 36
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'id'
%%    _1 =>
%%     'max'
%%    _2 =>
%%     'max'
%%    _3 =>
%%     'id'
%%    _4 =>
%%     #{'id'=>'val'}
function `map_SUITE`:`do_cover_beam_trim`(_0, _1, _2, _3, _4) {
0:
  %% map_SUITE.erl:2271
  _14 = call (`id`/1), `max`

  %% Aliased:
  %%    _14
  _24 = succeeded:body _14
  br _24, ^24, ^1

24:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _27 = bif:'=:=' _14, `max`
  br _27, ^27, ^26

27:
  %% map_SUITE.erl:2272
  %% Unique:
  %%    _4
  _15 = call (`id`/1), _4

  %% Aliased:
  %%    _15
  _28 = succeeded:body _15
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _32 = bif:is_map _15
  br _32, ^32, ^30

32:
  %% Argument types:
  %%    _15 => map()
  %% Aliased:
  %%    _15
  _16 = get_map_element _15, `id`

  %% Aliased:
  %%    _16
  _31 = succeeded:guard _16
  br _31, ^31, ^30

31:
  %% Aliased:
  %%    _16
  ret _16

30:
  %% map_SUITE.erl:2272
  %% Aliased:
  %%    _15
  _17 = match_fail `badmatch`, _15

  %% Unique:
  %%    _17
  _33 = succeeded:body _17
  br ^1

26:
  %% map_SUITE.erl:2271
  %% Aliased:
  %%    _14
  _18 = match_fail `badmatch`, _14

  %% Unique:
  %%    _18
  _34 = succeeded:body _18
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% map_SUITE.erl:2275
%% Counter = 559
%% bs_ensure_opt: true
function `map_SUITE`:`t_key_expressions`(_0) {
0:
  %% map_SUITE.erl:2276
  Int = call (`id`/1), `42`

  %% Aliased:
  %%    Int
  _341 = succeeded:body Int
  br _341, ^341, ^1

341:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Int
  _201 = put_tuple `tag`, Int

  %% map_SUITE.erl:2277
  %% Unique:
  %%    _201
  _2 = put_map `assoc`, `#{}`, _201, `42`

  %% map_SUITE.erl:2277
  %% Aliased:
  %%    _2
  _167 = call (`id`/1), _2

  %% Aliased:
  %%    _167
  _342 = succeeded:body _167
  br _342, ^342, ^1

342:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _513 = bif:is_map _167
  br _513, ^513, ^202

513:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Int
  _169 = put_tuple `tag`, Int

  %% Argument types:
  %%    _167 => map()
  %%    _169 => {'tag', any()}
  %% Aliased:
  %%    _167
  %% Unique:
  %%    _169
  _203 = get_map_element _167, _169

  %% Aliased:
  %%    _203
  _348 = succeeded:guard _203
  br _348, ^348, ^202

348:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _203
  _511 = bif:'=:=' _203, `42`
  br _511, ^510, ^202

510:
  %% map_SUITE.erl:2278
  %% Argument types:
  %%    
  %% Aliased:
  %%    Int
  _4 = bif:'+' Int, `1`

  %% Unique:
  %%    _4
  _349 = succeeded:body _4
  br _349, ^349, ^1

349:
  %% Argument types:
  %%    _4 => number()
  %% Unique:
  %%    _4
  _204 = put_tuple `tag`, _4

  %% map_SUITE.erl:2278
  %% Unique:
  %%    _204
  _5 = put_map `assoc`, `#{}`, _204, `42`

  %% map_SUITE.erl:2278
  %% Aliased:
  %%    _5
  _158 = call (`id`/1), _5

  %% Aliased:
  %%    _158
  _350 = succeeded:body _158
  br _350, ^350, ^1

350:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _158
  _508 = bif:is_map _158
  br _508, ^508, ^205

508:
  %% map_SUITE.erl:2278
  %% Argument types:
  %%    Int => number()
  %% Unique:
  %%    Int
  _7 = bif:'+' Int, `1`

  %% Unique:
  %%    _7
  _356 = succeeded:guard _7
  br _356, ^356, ^205

356:
  %% Argument types:
  %%    _7 => number()
  %% Unique:
  %%    _7
  _276 = put_tuple `tag`, _7

  %% Argument types:
  %%    _158 => map()
  %%    _276 => {'tag', number()}
  %% Aliased:
  %%    _158
  %% Unique:
  %%    _276
  _207 = get_map_element _158, _276

  %% Aliased:
  %%    _207
  _361 = succeeded:guard _207
  br _361, ^361, ^205

361:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _207
  _504 = bif:'=:=' _207, `42`
  br _504, ^503, ^205

503:
  %% Argument types:
  %%    Int => number()
  %% Unique:
  %%    Int
  _208 = put_tuple `tag`, Int

  %% map_SUITE.erl:2280
  _209 = put_map `assoc`, `#{}`, `{a,b}`, `x`

  %% map_SUITE.erl:2280
  %% Aliased:
  %%    _208, 
  %%    _209
  _210 = put_map `assoc`, _209, _208, `42`

  %% map_SUITE.erl:2280
  %% Aliased:
  %%    _210, 
  %%    Int
  _8 = put_map `assoc`, _210, Int, `0`

  %% map_SUITE.erl:2280
  %% Aliased:
  %%    _8
  _153 = call (`id`/1), _8

  %% Aliased:
  %%    _153
  _362 = succeeded:body _153
  br _362, ^362, ^1

362:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _501 = bif:is_map _153
  br _501, ^501, ^211

501:
  %% Argument types:
  %%    _153 => map()
  %% Aliased:
  %%    _153
  _213 = get_map_element _153, `{a,b}`

  %% Aliased:
  %%    _213
  _366 = succeeded:guard _213
  br _366, ^366, ^211

366:
  %% Argument types:
  %%    _153 => map()
  %%    Int => number()
  %% Aliased:
  %%    _153
  %% Unique:
  %%    Int
  _212 = get_map_element _153, Int

  %% Aliased:
  %%    _212
  _367 = succeeded:guard _212
  br _367, ^367, ^211

367:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _213
  _500 = bif:'=:=' _213, `x`
  br _500, ^499, ^211

499:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _212
  _498 = bif:'=:=' _212, `0`
  br _498, ^497, ^211

497:
  %% Argument types:
  %%    Int => number()
  %% Unique:
  %%    Int
  _155 = put_tuple `tag`, Int

  %% Argument types:
  %%    _153 => map()
  %%    _155 => {'tag', number()}
  %% Aliased:
  %%    _153
  %% Unique:
  %%    _155
  _214 = get_map_element _153, _155

  %% Aliased:
  %%    _214
  _370 = succeeded:guard _214
  br _370, ^370, ^211

370:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _214
  _495 = bif:'=:=' _214, `42`
  br _495, ^518, ^211

518:
  %% map_SUITE.erl:2283
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-0-'`/2) => fun((_))
  %% Aliased:
  %%    Int
  _218 = call (`'-t_key_expressions/1-fun-0-'`/2), `#{43 => val}`, Int

  %% Aliased:
  %%    _218
  _371 = succeeded:body _218
  br _371, ^371, ^1

371:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _218
  _492 = bif:'=:=' _218, `val`
  br _492, ^555, ^373

555:
  br ^557

557:
  _377 = new_try_tag `'catch'`
  br _377, ^375, ^376

375:
  %% map_SUITE.erl:2284
  %% Result type:
  %%    none()
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-0-'`/2) => fun((_))
  %% Aliased:
  %%    Int
  _281 = call (`'-t_key_expressions/1-fun-0-'`/2), `a`, Int

  %% Aliased:
  %%    _281
  _379 = succeeded:body _281
  br ^376

376:
  %% Unique:
  %%    _377
  _382 = landingpad `'catch'`, _377

  %% Aliased:
  %%    _382
  _380 = extract _382, `0`
  br ^374

374:
  %% Aliased:
  %%    _380
  %% Unique:
  %%    _377
  _14 = catch_end _377, _380

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _487 = is_tagged_tuple _14, `2`, `'EXIT'`
  br _487, ^519, ^385

519:
  %% map_SUITE.erl:2296
  %% Result type:
  %%    'not_found' | bitstring(8)
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-1-'`/3) => fun((_, _, _) -> 'not_found' | number() | bitstring(8))
  _235 = call (`'-t_key_expressions/1-fun-1-'`/3), `#{b => <<0,3,120,121,122>>}`, `2`, `{a,b,c}`

  %% Aliased:
  %%    _235
  _386 = succeeded:body _235
  br _386, ^386, ^1

386:
  %% Argument types:
  %%    _235 => 'not_found' | bitstring(8)
  %% Aliased:
  %%    _235
  _482 = bif:'=:=' _235, `<<"xyz">>`
  br _482, ^482, ^388

482:
  %% map_SUITE.erl:2297
  %% Result type:
  %%    'not_found' | bitstring(8)
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-1-'`/3) => fun((_, _, _) -> 'not_found' | number() | bitstring(8))
  _236 = call (`'-t_key_expressions/1-fun-1-'`/3), `#{b => <<0,3,120,121,122>>}`, `999`, `{a,b,c}`

  %% Aliased:
  %%    _236
  _389 = succeeded:body _236
  br _389, ^389, ^1

389:
  %% Argument types:
  %%    _236 => 'not_found' | bitstring(8)
  %% Aliased:
  %%    _236
  _480 = bif:'=:=' _236, `not_found`
  br _480, ^479, ^391

479:
  %% map_SUITE.erl:2298
  %% Result type:
  %%    number()
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-1-'`/3) => fun((_, _, _) -> 'not_found' | number() | bitstring(8))
  _237 = call (`'-t_key_expressions/1-fun-1-'`/3), `{6,7}`, `1`, `2`

  %% Unique:
  %%    _237
  _392 = succeeded:body _237
  br _392, ^392, ^1

392:
  %% Argument types:
  %%    _237 => number()
  %% Unique:
  %%    _237
  _477 = bif:'=:=' _237, `13`
  br _477, ^476, ^394

476:
  %% map_SUITE.erl:2300
  _238 = call (`id`/1), `#{<<208,161,208,191,209,131,209,130,208,189,208,184,208,186>> => 1}`

  %% Aliased:
  %%    _238
  _395 = succeeded:body _238
  br _395, ^395, ^1

395:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _238
  _474 = bif:is_map _238
  br _474, ^474, ^397

474:
  %% Argument types:
  %%    _238 => map()
  %% Aliased:
  %%    _238
  _239 = get_map_element _238, `<<208,161,208,191,209,131,209,130,208,189,208,184,208,186>>`

  %% Aliased:
  %%    _239
  _398 = succeeded:guard _239
  br _398, ^398, ^397

398:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _239
  _473 = bif:'=:=' _239, `1`
  br _473, ^520, ^397

520:
  %% map_SUITE.erl:2313
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-3-'`/2) => fun((_))
  %% Aliased:
  %%    Int
  _246 = call (`'-t_key_expressions/1-fun-3-'`/2), `{7,3}`, Int

  %% Aliased:
  %%    _246
  _399 = succeeded:body _246
  br _399, ^399, ^1

399:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _246
  _470 = bif:'=:=' _246, `10`
  br _470, ^469, ^401

469:
  %% map_SUITE.erl:2314
  %% Argument types:
  %%    Int => number()
  %% Unique:
  %%    Int
  %% Anno: #{unit => 2}
  _38 = bs_create_bin `integer`, `[1,{segment,1}]`, Int, `42`

  %% Aliased:
  %%    _38
  _402 = succeeded:body _38
  br _402, ^402, ^1

402:
  %% Argument types:
  %%    _38 => bitstring(2)
  %% Aliased:
  %%    _38
  _247 = put_tuple `tag`, _38

  %% map_SUITE.erl:2314
  %% Unique:
  %%    _247
  _39 = put_map `assoc`, `#{}`, _247, `whatever`

  %% map_SUITE.erl:2314
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-3-'`/2) => fun((_))
  %%    _39 => #{{'tag', bitstring(2)}=>'whatever'}
  %% Aliased:
  %%    _39, 
  %%    Int
  _248 = call (`'-t_key_expressions/1-fun-3-'`/2), _39, Int

  %% Aliased:
  %%    _248
  _403 = succeeded:body _248
  br _403, ^403, ^1

403:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _248
  _467 = bif:'=:=' _248, `whatever`
  br _467, ^522, ^405

522:
  %% map_SUITE.erl:2322
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-4-'`/3) => fun((_, _, _))
  _252 = call (`'-t_key_expressions/1-fun-4-'`/3), `42`, `21`, `#{2 => value}`

  %% Unique:
  %%    _252
  _406 = succeeded:body _252
  br _406, ^406, ^1

406:
  %% Argument types:
  %%    
  %% Unique:
  %%    _252
  _464 = bif:'=:=' _252, `value`
  br _464, ^463, ^408

463:
  %% map_SUITE.erl:2323
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-4-'`/3) => fun((_, _, _))
  _253 = call (`'-t_key_expressions/1-fun-4-'`/3), `42`, `21`, `#{}`

  %% Unique:
  %%    _253
  _409 = succeeded:body _253
  br _409, ^409, ^1

409:
  %% Argument types:
  %%    
  %% Unique:
  %%    _253
  _461 = bif:'=:=' _253, `no_match`
  br _461, ^460, ^411

460:
  %% map_SUITE.erl:2324
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-4-'`/3) => fun((_, _, _))
  _254 = call (`'-t_key_expressions/1-fun-4-'`/3), `42`, `0`, `#{2 => value}`

  %% Unique:
  %%    _254
  _412 = succeeded:body _254
  br _412, ^412, ^1

412:
  %% Argument types:
  %%    
  %% Unique:
  %%    _254
  _458 = bif:'=:=' _254, `no_match`
  br _458, ^457, ^414

457:
  %% map_SUITE.erl:2325
  %% Result type:
  %%    'no_match'
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-4-'`/3) => fun((_, _, _))
  _255 = call (`'-t_key_expressions/1-fun-4-'`/3), `42`, `a`, `#{2 => value}`

  %% Unique:
  %%    _255
  _415 = succeeded:body _255
  br _415, ^523, ^1

523:
  %% map_SUITE.erl:2336
  %% Result type:
  %%    'error'
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-5-'`/1) => fun((_) -> 'error')
  _260 = call (`'-t_key_expressions/1-fun-5-'`/1), `0.5`

  %% Unique:
  %%    _260
  _418 = succeeded:body _260
  br _418, ^524, ^1

524:
  %% map_SUITE.erl:2345
  %% Result type:
  %%    {'error', any()}
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-6-'`/1) => fun((_) -> {'error', any()})
  _265 = call (`'-t_key_expressions/1-fun-6-'`/1), `any`

  %% Unique:
  %%    _265
  _421 = succeeded:body _265
  br _421, ^421, ^1

421:
  %% Argument types:
  %%    _265 => {'error', any()}
  %% Unique:
  %%    _265
  _449 = bif:'=:=' _265, `{error,any}`
  br _449, ^556, ^423

556:
  br ^558

558:
  _427 = new_try_tag `'catch'`
  br _427, ^425, ^426

425:
  %% map_SUITE.erl:2357
  %% Argument types:
  %%    (`'-t_key_expressions/1-fun-7-'`/1) => fun((_))
  _320 = call (`'-t_key_expressions/1-fun-7-'`/1), `whatever`

  %% Aliased:
  %%    _320
  _429 = succeeded:body _320
  br _429, ^429, ^426

429:
  br ^424

426:
  %% Unique:
  %%    _427
  _432 = landingpad `'catch'`, _427

  %% Aliased:
  %%    _432
  _430 = extract _432, `0`
  br ^424

424:
  _433 = phi { _430, ^426 }, { _320, ^429 }

  %% Aliased:
  %%    _433
  %% Unique:
  %%    _427
  _74 = catch_end _427, _433

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _445 = is_tagged_tuple _74, `2`, `'EXIT'`
  br _445, ^442, ^435

442:
  %% Argument types:
  %%    _74 => {''EXIT'', any()}
  %% Aliased:
  %%    _74
  _271 = get_tuple_element _74, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _271
  _439 = is_tagged_tuple _271, `2`, `badarg`
  br _439, ^436, ^435

436:
  %% Result type:
  %%    'ok'
  ret `ok`

435:
  %% map_SUITE.erl:2357
  %% Aliased:
  %%    _74
  _321 = match_fail `badmatch`, _74

  %% Unique:
  %%    _321
  _448 = succeeded:body _321
  br ^1

423:
  %% map_SUITE.erl:2345
  %% Unique:
  %%    _265
  _322 = match_fail `badmatch`, _265

  %% Unique:
  %%    _322
  _450 = succeeded:body _322
  br ^1

414:
  %% map_SUITE.erl:2324
  %% Unique:
  %%    _254
  _325 = match_fail `badmatch`, _254

  %% Unique:
  %%    _325
  _459 = succeeded:body _325
  br ^1

411:
  %% map_SUITE.erl:2323
  %% Unique:
  %%    _253
  _326 = match_fail `badmatch`, _253

  %% Unique:
  %%    _326
  _462 = succeeded:body _326
  br ^1

408:
  %% map_SUITE.erl:2322
  %% Unique:
  %%    _252
  _327 = match_fail `badmatch`, _252

  %% Unique:
  %%    _327
  _465 = succeeded:body _327
  br ^1

405:
  %% map_SUITE.erl:2314
  %% Aliased:
  %%    _248
  _328 = match_fail `badmatch`, _248

  %% Unique:
  %%    _328
  _468 = succeeded:body _328
  br ^1

401:
  %% map_SUITE.erl:2313
  %% Aliased:
  %%    _246
  _329 = match_fail `badmatch`, _246

  %% Unique:
  %%    _329
  _471 = succeeded:body _329
  br ^1

397:
  %% map_SUITE.erl:2300
  %% Aliased:
  %%    _238
  _330 = match_fail `badmatch`, _238

  %% Unique:
  %%    _330
  _475 = succeeded:body _330
  br ^1

394:
  %% map_SUITE.erl:2298
  %% Unique:
  %%    _237
  _331 = match_fail `badmatch`, _237

  %% Unique:
  %%    _331
  _478 = succeeded:body _331
  br ^1

391:
  %% map_SUITE.erl:2297
  %% Aliased:
  %%    _236
  _332 = match_fail `badmatch`, _236

  %% Unique:
  %%    _332
  _481 = succeeded:body _332
  br ^1

388:
  %% map_SUITE.erl:2296
  %% Aliased:
  %%    _235
  _333 = match_fail `badmatch`, _235

  %% Unique:
  %%    _333
  _483 = succeeded:body _333
  br ^1

385:
  %% map_SUITE.erl:2284
  %% Aliased:
  %%    _14
  _334 = match_fail `badmatch`, _14

  %% Unique:
  %%    _334
  _490 = succeeded:body _334
  br ^1

373:
  %% map_SUITE.erl:2283
  %% Aliased:
  %%    _218
  _335 = match_fail `badmatch`, _218

  %% Unique:
  %%    _335
  _493 = succeeded:body _335
  br ^1

211:
  %% map_SUITE.erl:2279
  %% Aliased:
  %%    _153
  _336 = match_fail `badmatch`, _153

  %% Unique:
  %%    _336
  _502 = succeeded:body _336
  br ^1

205:
  %% map_SUITE.erl:2278
  %% Aliased:
  %%    _158
  _337 = match_fail `badmatch`, _158

  %% Unique:
  %%    _337
  _509 = succeeded:body _337
  br ^1

202:
  %% map_SUITE.erl:2277
  %% Aliased:
  %%    _167
  _338 = match_fail `badmatch`, _167

  %% Unique:
  %%    _338
  _514 = succeeded:body _338
  br ^1

1:
  _339 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _339
}

%% map_SUITE.erl:2361
%% Counter = 29
%% bs_ensure_opt: true
function `map_SUITE`:`t_duplicate_keys`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _15 = bif:is_list _0
  br _15, ^15, ^14

15:
  %% map_SUITE.erl:2363
  _2 = call (`id`/1), `#{gurka => gaffel}`

  %% Aliased:
  %%    _2
  _16 = succeeded:body _2
  br _16, ^16, ^1

16:
  %% map_SUITE.erl:2363
  %% Aliased:
  %%    _2
  _7 = call (`dup_keys_1`/1), _2

  %% Aliased:
  %%    _7
  _17 = succeeded:body _7
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _20 = bif:'=:=' _7, `#{gurka => gaffel}`
  br _20, ^20, ^19

20:
  %% map_SUITE.erl:2365
  _8 = call (`dup_keys_1`/1), `#{'__struct__' => ok}`

  %% Aliased:
  %%    _8
  _21 = succeeded:body _8
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _25 = bif:'=:=' _8, `ok`
  br _25, ^24, ^23

24:
  %% Result type:
  %%    'ok'
  ret `ok`

23:
  %% map_SUITE.erl:2365
  %% Aliased:
  %%    _8
  _9 = match_fail `badmatch`, _8

  %% Unique:
  %%    _9
  _26 = succeeded:body _9
  br ^1

19:
  %% map_SUITE.erl:2363
  %% Aliased:
  %%    _7
  _10 = match_fail `badmatch`, _7

  %% Unique:
  %%    _10
  _27 = succeeded:body _10
  br ^1

14:
  %% map_SUITE.erl:2361
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_duplicate_keys/1-',1}}
  _11 = match_fail `function_clause`, _0

  %% Unique:
  %%    _11
  _28 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% map_SUITE.erl:2369
%% Counter = 17
%% bs_ensure_opt: true
function `map_SUITE`:`dup_keys_1`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _16 = bif:is_map _0
  br _16, ^16, ^10

16:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _11 = has_map_field _0, `'__struct__'`
  br _11, ^14, ^10

14:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% Aliased:
  %%    _0
  ret _0
}

%% map_SUITE.erl:2382
%% Counter = 261
%% bs_ensure_opt: true
function `map_SUITE`:`t_fold_3`(_0) {
0:
  %% map_SUITE.erl:2383
  Vs = call (`lists`:`seq`/2), `1`, `200`

  %% Aliased:
  %%    Vs
  _115 = succeeded:body Vs
  br _115, ^115, ^1

115:
  %% map_SUITE.erl:2384
  %% Result type:
  %%    list({{'k', any()}, any()})
  %% Aliased:
  %%    Vs
  _7 = call (`'-t_fold_3/1-lc$^0/1-0-'`/1), Vs

  %% Unique:
  %%    _7
  _116 = succeeded:body _7
  br _116, ^116, ^1

116:
  %% map_SUITE.erl:2384
  %% Unique:
  %%    _7
  M0 = call (`maps`:`from_list`/1), _7

  %% Aliased:
  %%    M0
  _117 = succeeded:body M0
  br _117, ^219, ^1

219:
  %% Argument types:
  %%    M0 => #{{'k', any()}=>any()}
  %% Aliased:
  %%    M0
  _61 = get_map_element M0, `{k,1}`

  %% Aliased:
  %%    _61
  _120 = succeeded:guard _61
  br _120, ^120, ^119

120:
  %% Argument types:
  %%    M0 => #{{'k', any()}=>any()}
  %% Aliased:
  %%    M0
  _60 = get_map_element M0, `{k,200}`

  %% Aliased:
  %%    _60
  _121 = succeeded:guard _60
  br _121, ^121, ^119

121:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _218 = bif:'=:=' _61, `1`
  br _218, ^217, ^119

217:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _216 = bif:'=:=' _60, `200`
  br _216, ^215, ^119

215:
  %% map_SUITE.erl:2386
  %% Aliased:
  %%    Vs
  Tot0 = call (`lists`:`sum`/1), Vs

  %% Aliased:
  %%    Tot0
  _122 = succeeded:body Tot0
  br _122, ^122, ^1

122:
  %% Result type:
  %%    number()
  _17 = make_fun (`'-t_fold_3/1-fun-1-'`/3)

  %% map_SUITE.erl:2387
  %% Aliased:
  %%    _17, 
  %%    M0
  Tot1 = call (`maps`:`fold`/3), _17, `0`, M0

  %% Aliased:
  %%    Tot1
  _123 = succeeded:body Tot1
  br _123, ^123, ^1

123:
  %% map_SUITE.erl:2388
  %% Argument types:
  %%    Tot1 => number()
  %% Aliased:
  %%    Tot0
  %% Unique:
  %%    Tot1
  _64 = bif:'=:=' Tot0, Tot1
  br _64, ^212, ^125

212:
  %% Result type:
  %%    number()
  _27 = make_fun (`'-t_fold_3/1-fun-2-'`/3)

  %% map_SUITE.erl:2389
  %% Aliased:
  %%    M0
  _20 = call (`maps`:`iterator`/1), M0

  %% Aliased:
  %%    _20
  _126 = succeeded:body _20
  br _126, ^126, ^1

126:
  %% map_SUITE.erl:2389
  %% Aliased:
  %%    _20, 
  %%    _27
  Tot2 = call (`maps`:`fold`/3), _27, `0`, _20

  %% Aliased:
  %%    Tot2
  _127 = succeeded:body Tot2
  br _127, ^127, ^1

127:
  %% map_SUITE.erl:2390
  %% Argument types:
  %%    Tot0 => number()
  %%    Tot2 => number()
  %% Unique:
  %%    Tot0, 
  %%    Tot2
  _69 = bif:'=:=' Tot0, Tot2
  br _69, ^209, ^129

209:
  %% Result type:
  %%    'ok'
  _37 = make_fun (`'-t_fold_3/1-fun-3-'`/3)
  _133 = new_try_tag `'catch'`
  br _133, ^227, ^132

227:
  %% map_SUITE.erl:2393
  _30 = call (`id`/1), `a`

  %% Aliased:
  %%    _30
  _135 = succeeded:body _30
  br _135, ^135, ^132

135:
  %% map_SUITE.erl:2393
  %% Aliased:
  %%    _30, 
  %%    _37
  _105 = call (`maps`:`fold`/3), _37, `0`, _30

  %% Aliased:
  %%    _105
  _136 = succeeded:body _105
  br _136, ^136, ^132

136:
  br ^130

132:
  %% Unique:
  %%    _133
  _139 = landingpad `'catch'`, _133

  %% Aliased:
  %%    _139
  _137 = extract _139, `0`
  br ^130

130:
  _140 = phi { _137, ^132 }, { _105, ^136 }

  %% Aliased:
  %%    _140
  %% Unique:
  %%    _133
  _38 = catch_end _133, _140

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _205 = is_tagged_tuple _38, `2`, `'EXIT'`
  br _205, ^202, ^142

202:
  %% Argument types:
  %%    _38 => {''EXIT'', any()}
  %% Aliased:
  %%    _38
  _70 = get_tuple_element _38, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _199 = bif:is_tuple _70
  br _199, ^199, ^142

199:
  %% Argument types:
  %%    _70 => {...}
  %% Aliased:
  %%    _70
  _200 = bif:tuple_size _70

  %% Argument types:
  %%    _200 => 0..16777215
  %% Unique:
  %%    _200
  _201 = bif:'=:=' _200, `2`
  br _201, ^198, ^142

198:
  %% Argument types:
  %%    _70 => {any(), any()}
  %% Aliased:
  %%    _70
  _73 = get_tuple_element _70, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _197 = bif:'=:=' _73, `{badmap,a}`
  br _197, ^197, ^142

197:
  %% Argument types:
  %%    _70 => {{'badmap', 'a'}, any()}
  %% Aliased:
  %%    _70
  _72 = get_tuple_element _70, `1`

  %% Aliased:
  %%    _72
  _196 = is_nonempty_list _72
  br _196, ^196, ^142

196:
  %% Argument types:
  %%    _72 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _72
  _75 = get_hd _72

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _193 = is_tagged_tuple _75, `4`, `maps`
  br _193, ^190, ^142

190:
  %% Argument types:
  %%    _75 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _75
  _78 = get_tuple_element _75, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _189 = bif:'=:=' _78, `fold`
  br _189, ^188, ^142

188:
  %% Argument types:
  %%    _75 => {'maps', 'fold', any(), any()}
  %% Aliased:
  %%    _75
  _77 = get_tuple_element _75, `2`

  %% Aliased:
  %%    _77
  _187 = is_nonempty_list _77
  br _187, ^187, ^142

187:
  %% Argument types:
  %%    _77 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _77
  _80 = get_tl _77

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _186 = bif:'=:=' _80, `[0,a]`
  br _186, ^259, ^142

259:
  br ^260

260:
  _146 = new_try_tag `'catch'`
  br _146, ^144, ^145

144:
  %% map_SUITE.erl:2394
  _40 = call (`id`/1), `<<>>`

  %% Aliased:
  %%    _40
  _148 = succeeded:body _40
  br _148, ^148, ^145

148:
  %% map_SUITE.erl:2394
  %% Aliased:
  %%    _40
  _107 = call (`maps`:`fold`/3), _40, `0`, `#{}`

  %% Aliased:
  %%    _107
  _149 = succeeded:body _107
  br _149, ^149, ^145

149:
  br ^143

145:
  %% Unique:
  %%    _146
  _152 = landingpad `'catch'`, _146

  %% Aliased:
  %%    _152
  _150 = extract _152, `0`
  br ^143

143:
  _153 = phi { _150, ^145 }, { _107, ^149 }

  %% Aliased:
  %%    _153
  %% Unique:
  %%    _146
  _41 = catch_end _146, _153

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _182 = is_tagged_tuple _41, `2`, `'EXIT'`
  br _182, ^179, ^155

179:
  %% Argument types:
  %%    _41 => {''EXIT'', any()}
  %% Aliased:
  %%    _41
  _82 = get_tuple_element _41, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _176 = is_tagged_tuple _82, `2`, `badarg`
  br _176, ^173, ^155

173:
  %% Argument types:
  %%    _82 => {'badarg', any()}
  %% Aliased:
  %%    _82
  _84 = get_tuple_element _82, `1`

  %% Aliased:
  %%    _84
  _172 = is_nonempty_list _84
  br _172, ^172, ^155

172:
  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _87 = get_hd _84

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _169 = is_tagged_tuple _87, `4`, `maps`
  br _169, ^166, ^155

166:
  %% Argument types:
  %%    _87 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _87
  _90 = get_tuple_element _87, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _165 = bif:'=:=' _90, `fold`
  br _165, ^164, ^155

164:
  %% Argument types:
  %%    _87 => {'maps', 'fold', any(), any()}
  %% Aliased:
  %%    _87
  _89 = get_tuple_element _87, `2`

  %% Aliased:
  %%    _89
  _163 = is_nonempty_list _89
  br _163, ^163, ^155

163:
  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _93 = get_hd _89

  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _92 = get_tl _89

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _162 = bif:'=:=' _93, `<<>>`
  br _162, ^162, ^155

162:
  %% Aliased:
  %%    _92
  _161 = is_nonempty_list _92
  br _161, ^161, ^155

161:
  %% Argument types:
  %%    _92 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _92
  _95 = get_hd _92

  %% Argument types:
  %%    _92 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _92
  _94 = get_tl _92

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _160 = bif:'=:=' _95, `0`
  br _160, ^159, ^155

159:
  %% Aliased:
  %%    _94
  _158 = is_nonempty_list _94
  br _158, ^158, ^155

158:
  %% Argument types:
  %%    _94 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _94
  _97 = get_hd _94

  %% Argument types:
  %%    _94 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _94
  _96 = get_tl _94

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _157 = bif:is_map _97
  br _157, ^157, ^155

157:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _156 = bif:'=:=' _96, `[]`
  br _156, ^156, ^155

156:
  %% Result type:
  %%    'ok'
  ret `ok`

155:
  %% map_SUITE.erl:2394
  %% Aliased:
  %%    _41
  _108 = match_fail `badmatch`, _41

  %% Unique:
  %%    _108
  _185 = succeeded:body _108
  br ^1

142:
  %% map_SUITE.erl:2393
  %% Aliased:
  %%    _38
  _109 = match_fail `badmatch`, _38

  %% Unique:
  %%    _109
  _208 = succeeded:body _109
  br ^1

129:
  %% map_SUITE.erl:2390
  _110 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _110
  _211 = succeeded:body _110
  br ^1

125:
  %% map_SUITE.erl:2388
  _111 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _111
  _214 = succeeded:body _111
  br ^1

119:
  %% map_SUITE.erl:2385
  %% Aliased:
  %%    M0
  _112 = match_fail `badmatch`, M0

  %% Unique:
  %%    _112
  _220 = succeeded:body _112
  br ^1

1:
  _113 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _113
}

%% map_SUITE.erl:2397
%% Counter = 205
%% bs_ensure_opt: true
function `map_SUITE`:`t_from_keys`(_0) {
0:
  %% map_SUITE.erl:2398
  Map0 = call (`maps`:`from_keys`/2), `["a",2,{three}]`, `value`

  %% Aliased:
  %%    Map0
  _59 = succeeded:body Map0
  br _59, ^59, ^1

59:
  %% map_SUITE.erl:2399
  %% Argument types:
  %%    Map0 => #{nonempty_list(97) | 2 | {'three'}=>'value'}
  %% Aliased:
  %%    Map0
  _18 = bif:map_size Map0

  %% Argument types:
  %%    _18 => 0..288230376151711743
  %% Unique:
  %%    _18
  _169 = bif:'=:=' _18, `3`
  br _169, ^166, ^62

166:
  %% Argument types:
  %%    Map0 => #{nonempty_list(97) | 2 | {'three'}=>'value'}
  %% Aliased:
  %%    Map0
  _65 = has_map_field Map0, `2`
  br _65, ^65, ^64

65:
  %% Argument types:
  %%    Map0 => #{nonempty_list(97) | 2 | {'three'}=>'value'}
  %% Aliased:
  %%    Map0
  _66 = has_map_field Map0, `{three}`
  br _66, ^66, ^64

66:
  %% Argument types:
  %%    Map0 => #{nonempty_list(97) | 2 | {'three'}=>'value'}
  %% Aliased:
  %%    Map0
  _67 = has_map_field Map0, `"a"`
  br _67, ^160, ^64

160:
  %% map_SUITE.erl:2402
  Map1 = call (`maps`:`from_keys`/2), `[1,2,2]`, `{complex,value}`

  %% Aliased:
  %%    Map1
  _68 = succeeded:body Map1
  br _68, ^68, ^1

68:
  %% map_SUITE.erl:2403
  %% Argument types:
  %%    Map1 => #{1..2=>{'complex', 'value'}}
  %% Aliased:
  %%    Map1
  _22 = bif:map_size Map1

  %% Argument types:
  %%    _22 => 0..288230376151711743
  %% Unique:
  %%    _22
  _158 = bif:'=:=' _22, `2`
  br _158, ^155, ^71

155:
  %% Argument types:
  %%    Map1 => #{1..2=>{'complex', 'value'}}
  %% Aliased:
  %%    Map1
  _74 = has_map_field Map1, `1`
  br _74, ^74, ^73

74:
  %% Argument types:
  %%    Map1 => #{1..2=>{'complex', 'value'}}
  %% Aliased:
  %%    Map1
  _75 = has_map_field Map1, `2`
  br _75, ^153, ^73

153:
  %% map_SUITE.erl:2406
  Map2 = call (`maps`:`from_keys`/2), `[]`, `value`

  %% Aliased:
  %%    Map2
  _76 = succeeded:body Map2
  br _76, ^76, ^1

76:
  %% map_SUITE.erl:2407
  %% Argument types:
  %%    
  _25 = bif:map_size `#{}`

  %% Argument types:
  %%    _25 => 0..288230376151711743
  %% Unique:
  %%    _25
  _151 = bif:'=:=' _25, `0`
  br _151, ^201, ^79

201:
  br ^203

203:
  _83 = new_try_tag `'catch'`
  br _83, ^81, ^82

81:
  %% map_SUITE.erl:2409
  _47 = call (`maps`:`from_keys`/2), `[a|b]`, `value`

  %% Aliased:
  %%    _47
  _85 = succeeded:body _47
  br ^82

82:
  %% Unique:
  %%    _83
  _88 = landingpad `'catch'`, _83

  %% Aliased:
  %%    _88
  _86 = extract _88, `0`
  br ^80

80:
  %% Aliased:
  %%    _86
  %% Unique:
  %%    _83
  _9 = catch_end _83, _86

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _146 = is_tagged_tuple _9, `2`, `'EXIT'`
  br _146, ^143, ^91

143:
  %% Argument types:
  %%    _9 => {''EXIT'', any()}
  %% Aliased:
  %%    _9
  _26 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _140 = is_tagged_tuple _26, `2`, `badarg`
  br _140, ^137, ^91

137:
  %% Argument types:
  %%    _26 => {'badarg', any()}
  %% Aliased:
  %%    _26
  _28 = get_tuple_element _26, `1`

  %% Aliased:
  %%    _28
  _136 = is_nonempty_list _28
  br _136, ^136, ^91

136:
  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _31 = get_hd _28

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _133 = is_tagged_tuple _31, `4`, `maps`
  br _133, ^130, ^91

130:
  %% Argument types:
  %%    _31 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _31
  _34 = get_tuple_element _31, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _129 = bif:'=:=' _34, `from_keys`
  br _129, ^128, ^91

128:
  %% Argument types:
  %%    _31 => {'maps', 'from_keys', any(), any()}
  %% Aliased:
  %%    _31
  _33 = get_tuple_element _31, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _127 = bif:'=:=' _33, `[[a|b],value]`
  br _127, ^202, ^91

202:
  br ^204

204:
  _95 = new_try_tag `'catch'`
  br _95, ^93, ^94

93:
  %% map_SUITE.erl:2410
  _49 = call (`maps`:`from_keys`/2), `not_list`, `value`

  %% Aliased:
  %%    _49
  _97 = succeeded:body _49
  br ^94

94:
  %% Unique:
  %%    _95
  _100 = landingpad `'catch'`, _95

  %% Aliased:
  %%    _100
  _98 = extract _100, `0`
  br ^92

92:
  %% Aliased:
  %%    _98
  %% Unique:
  %%    _95
  _11 = catch_end _95, _98

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _123 = is_tagged_tuple _11, `2`, `'EXIT'`
  br _123, ^120, ^103

120:
  %% Argument types:
  %%    _11 => {''EXIT'', any()}
  %% Aliased:
  %%    _11
  _36 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _117 = is_tagged_tuple _36, `2`, `badarg`
  br _117, ^114, ^103

114:
  %% Argument types:
  %%    _36 => {'badarg', any()}
  %% Aliased:
  %%    _36
  _38 = get_tuple_element _36, `1`

  %% Aliased:
  %%    _38
  _113 = is_nonempty_list _38
  br _113, ^113, ^103

113:
  %% Argument types:
  %%    _38 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _38
  _41 = get_hd _38

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _110 = is_tagged_tuple _41, `4`, `maps`
  br _110, ^107, ^103

107:
  %% Argument types:
  %%    _41 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _41
  _44 = get_tuple_element _41, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _106 = bif:'=:=' _44, `from_keys`
  br _106, ^105, ^103

105:
  %% Argument types:
  %%    _41 => {'maps', 'from_keys', any(), any()}
  %% Aliased:
  %%    _41
  _43 = get_tuple_element _41, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _104 = bif:'=:=' _43, `[not_list,value]`
  br _104, ^104, ^103

104:
  %% Result type:
  %%    'ok'
  ret `ok`

103:
  %% map_SUITE.erl:2410
  %% Aliased:
  %%    _11
  _50 = match_fail `badmatch`, _11

  %% Unique:
  %%    _50
  _126 = succeeded:body _50
  br ^1

91:
  %% map_SUITE.erl:2409
  %% Aliased:
  %%    _9
  _51 = match_fail `badmatch`, _9

  %% Unique:
  %%    _51
  _149 = succeeded:body _51
  br ^1

79:
  %% map_SUITE.erl:2407
  %% Unique:
  %%    _25
  _52 = match_fail `badmatch`, _25

  %% Unique:
  %%    _52
  _152 = succeeded:body _52
  br ^1

73:
  %% map_SUITE.erl:2404
  %% Aliased:
  %%    Map1
  _53 = match_fail `badmatch`, Map1

  %% Unique:
  %%    _53
  _156 = succeeded:body _53
  br ^1

71:
  %% map_SUITE.erl:2403
  %% Unique:
  %%    _22
  _54 = match_fail `badmatch`, _22

  %% Unique:
  %%    _54
  _159 = succeeded:body _54
  br ^1

64:
  %% map_SUITE.erl:2400
  %% Aliased:
  %%    Map0
  _55 = match_fail `badmatch`, Map0

  %% Unique:
  %%    _55
  _167 = succeeded:body _55
  br ^1

62:
  %% map_SUITE.erl:2399
  %% Unique:
  %%    _18
  _56 = match_fail `badmatch`, _18

  %% Unique:
  %%    _56
  _170 = succeeded:body _56
  br ^1

1:
  _57 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _57
}

%% map_SUITE.erl:2413
%% Counter = 256
%% bs_ensure_opt: true
function `map_SUITE`:`t_map_2`(_0) {
0:
  %% map_SUITE.erl:2414
  Vs = call (`lists`:`seq`/2), `1`, `200`

  %% Aliased:
  %%    Vs
  _108 = succeeded:body Vs
  br _108, ^108, ^1

108:
  %% map_SUITE.erl:2415
  %% Result type:
  %%    list({{'k', any()}, any()})
  %% Aliased:
  %%    Vs
  _7 = call (`'-t_map_2/1-lc$^0/1-0-'`/1), Vs

  %% Unique:
  %%    _7
  _109 = succeeded:body _7
  br _109, ^109, ^1

109:
  %% map_SUITE.erl:2415
  %% Unique:
  %%    _7
  M0 = call (`maps`:`from_list`/1), _7

  %% Aliased:
  %%    M0
  _110 = succeeded:body M0
  br _110, ^218, ^1

218:
  %% Argument types:
  %%    M0 => #{{'k', any()}=>any()}
  %% Aliased:
  %%    M0
  _53 = get_map_element M0, `{k,1}`

  %% Aliased:
  %%    _53
  _113 = succeeded:guard _53
  br _113, ^113, ^112

113:
  %% Argument types:
  %%    M0 => #{{'k', any()}=>any()}
  %% Aliased:
  %%    M0
  _52 = get_map_element M0, `{k,200}`

  %% Aliased:
  %%    _52
  _114 = succeeded:guard _52
  br _114, ^114, ^112

114:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _217 = bif:'=:=' _53, `1`
  br _217, ^216, ^112

216:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _215 = bif:'=:=' _52, `200`
  br _215, ^214, ^112

214:
  %% Result type:
  %%    number()
  _14 = make_fun (`'-t_map_2/1-fun-1-'`/2)

  %% map_SUITE.erl:2417
  %% Aliased:
  %%    _14, 
  %%    M0
  _56 = call (`maps`:`map`/2), _14, M0

  %% Aliased:
  %%    _56
  _115 = succeeded:body _56
  br _115, ^212, ^1

212:
  %% Argument types:
  %%    _56 => #{{'k', any()}=>any()}
  %% Aliased:
  %%    _56
  _58 = get_map_element _56, `{k,1}`

  %% Aliased:
  %%    _58
  _118 = succeeded:guard _58
  br _118, ^118, ^117

118:
  %% Argument types:
  %%    _56 => #{{'k', any()}=>any()}
  %% Aliased:
  %%    _56
  _57 = get_map_element _56, `{k,200}`

  %% Aliased:
  %%    _57
  _119 = succeeded:guard _57
  br _119, ^119, ^117

119:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _211 = bif:'=:=' _58, `43`
  br _211, ^210, ^117

210:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _209 = bif:'=:=' _57, `242`
  br _209, ^208, ^117

208:
  %% Result type:
  %%    number()
  _22 = make_fun (`'-t_map_2/1-fun-2-'`/2)

  %% map_SUITE.erl:2419
  %% Aliased:
  %%    M0
  _17 = call (`maps`:`iterator`/1), M0

  %% Aliased:
  %%    _17
  _120 = succeeded:body _17
  br _120, ^120, ^1

120:
  %% map_SUITE.erl:2419
  %% Aliased:
  %%    _17, 
  %%    _22
  _62 = call (`maps`:`map`/2), _22, _17

  %% Aliased:
  %%    _62
  _121 = succeeded:body _62
  br _121, ^206, ^1

206:
  %% Argument types:
  %%    _62 => map()
  %% Aliased:
  %%    _62
  _64 = get_map_element _62, `{k,1}`

  %% Aliased:
  %%    _64
  _124 = succeeded:guard _64
  br _124, ^124, ^123

124:
  %% Argument types:
  %%    _62 => map()
  %% Aliased:
  %%    _62
  _63 = get_map_element _62, `{k,200}`

  %% Aliased:
  %%    _63
  _125 = succeeded:guard _63
  br _125, ^125, ^123

125:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _205 = bif:'=:=' _64, `43`
  br _205, ^204, ^123

204:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _203 = bif:'=:=' _63, `242`
  br _203, ^202, ^123

202:
  %% Result type:
  %%    'ok'
  _30 = make_fun (`'-t_map_2/1-fun-3-'`/2)
  _129 = new_try_tag `'catch'`
  br _129, ^222, ^128

222:
  %% map_SUITE.erl:2423
  _25 = call (`id`/1), `a`

  %% Aliased:
  %%    _25
  _131 = succeeded:body _25
  br _131, ^131, ^128

131:
  %% map_SUITE.erl:2423
  %% Aliased:
  %%    _25, 
  %%    _30
  _98 = call (`maps`:`map`/2), _30, _25

  %% Aliased:
  %%    _98
  _132 = succeeded:body _98
  br _132, ^132, ^128

132:
  br ^126

128:
  %% Unique:
  %%    _129
  _135 = landingpad `'catch'`, _129

  %% Aliased:
  %%    _135
  _133 = extract _135, `0`
  br ^126

126:
  _136 = phi { _133, ^128 }, { _98, ^132 }

  %% Aliased:
  %%    _136
  %% Unique:
  %%    _129
  _31 = catch_end _129, _136

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _198 = is_tagged_tuple _31, `2`, `'EXIT'`
  br _198, ^195, ^138

195:
  %% Argument types:
  %%    _31 => {''EXIT'', any()}
  %% Aliased:
  %%    _31
  _65 = get_tuple_element _31, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _192 = bif:is_tuple _65
  br _192, ^192, ^138

192:
  %% Argument types:
  %%    _65 => {...}
  %% Aliased:
  %%    _65
  _193 = bif:tuple_size _65

  %% Argument types:
  %%    _193 => 0..16777215
  %% Unique:
  %%    _193
  _194 = bif:'=:=' _193, `2`
  br _194, ^191, ^138

191:
  %% Argument types:
  %%    _65 => {any(), any()}
  %% Aliased:
  %%    _65
  _68 = get_tuple_element _65, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _190 = bif:'=:=' _68, `{badmap,a}`
  br _190, ^190, ^138

190:
  %% Argument types:
  %%    _65 => {{'badmap', 'a'}, any()}
  %% Aliased:
  %%    _65
  _67 = get_tuple_element _65, `1`

  %% Aliased:
  %%    _67
  _189 = is_nonempty_list _67
  br _189, ^189, ^138

189:
  %% Argument types:
  %%    _67 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _67
  _70 = get_hd _67

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _186 = is_tagged_tuple _70, `4`, `maps`
  br _186, ^183, ^138

183:
  %% Argument types:
  %%    _70 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _70
  _73 = get_tuple_element _70, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _182 = bif:'=:=' _73, `map`
  br _182, ^181, ^138

181:
  %% Argument types:
  %%    _70 => {'maps', 'map', any(), any()}
  %% Aliased:
  %%    _70
  _72 = get_tuple_element _70, `2`

  %% Aliased:
  %%    _72
  _180 = is_nonempty_list _72
  br _180, ^180, ^138

180:
  %% Argument types:
  %%    _72 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _72
  _75 = get_tl _72

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _179 = bif:'=:=' _75, `[a]`
  br _179, ^254, ^138

254:
  br ^255

255:
  _142 = new_try_tag `'catch'`
  br _142, ^140, ^141

140:
  %% map_SUITE.erl:2424
  _33 = call (`id`/1), `<<>>`

  %% Aliased:
  %%    _33
  _144 = succeeded:body _33
  br _144, ^144, ^141

144:
  %% map_SUITE.erl:2424
  %% Aliased:
  %%    _33
  _100 = call (`maps`:`map`/2), _33, `#{}`

  %% Aliased:
  %%    _100
  _145 = succeeded:body _100
  br _145, ^145, ^141

145:
  br ^139

141:
  %% Unique:
  %%    _142
  _148 = landingpad `'catch'`, _142

  %% Aliased:
  %%    _148
  _146 = extract _148, `0`
  br ^139

139:
  _149 = phi { _146, ^141 }, { _100, ^145 }

  %% Aliased:
  %%    _149
  %% Unique:
  %%    _142
  _34 = catch_end _142, _149

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _175 = is_tagged_tuple _34, `2`, `'EXIT'`
  br _175, ^172, ^151

172:
  %% Argument types:
  %%    _34 => {''EXIT'', any()}
  %% Aliased:
  %%    _34
  _77 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _169 = is_tagged_tuple _77, `2`, `badarg`
  br _169, ^166, ^151

166:
  %% Argument types:
  %%    _77 => {'badarg', any()}
  %% Aliased:
  %%    _77
  _79 = get_tuple_element _77, `1`

  %% Aliased:
  %%    _79
  _165 = is_nonempty_list _79
  br _165, ^165, ^151

165:
  %% Argument types:
  %%    _79 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _79
  _82 = get_hd _79

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _162 = is_tagged_tuple _82, `4`, `maps`
  br _162, ^159, ^151

159:
  %% Argument types:
  %%    _82 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _82
  _85 = get_tuple_element _82, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _158 = bif:'=:=' _85, `map`
  br _158, ^157, ^151

157:
  %% Argument types:
  %%    _82 => {'maps', 'map', any(), any()}
  %% Aliased:
  %%    _82
  _84 = get_tuple_element _82, `2`

  %% Aliased:
  %%    _84
  _156 = is_nonempty_list _84
  br _156, ^156, ^151

156:
  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _88 = get_hd _84

  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _87 = get_tl _84

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _155 = bif:'=:=' _88, `<<>>`
  br _155, ^155, ^151

155:
  %% Aliased:
  %%    _87
  _154 = is_nonempty_list _87
  br _154, ^154, ^151

154:
  %% Argument types:
  %%    _87 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _87
  _90 = get_hd _87

  %% Argument types:
  %%    _87 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _87
  _89 = get_tl _87

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _153 = bif:is_map _90
  br _153, ^153, ^151

153:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _152 = bif:'=:=' _89, `[]`
  br _152, ^152, ^151

152:
  %% Result type:
  %%    'ok'
  ret `ok`

151:
  %% map_SUITE.erl:2424
  %% Aliased:
  %%    _34
  _101 = match_fail `badmatch`, _34

  %% Unique:
  %%    _101
  _178 = succeeded:body _101
  br ^1

138:
  %% map_SUITE.erl:2423
  %% Aliased:
  %%    _31
  _102 = match_fail `badmatch`, _31

  %% Unique:
  %%    _102
  _201 = succeeded:body _102
  br ^1

123:
  %% map_SUITE.erl:2420
  %% Aliased:
  %%    _62
  _103 = match_fail `badmatch`, _62

  %% Unique:
  %%    _103
  _207 = succeeded:body _103
  br ^1

117:
  %% map_SUITE.erl:2418
  %% Aliased:
  %%    _56
  _104 = match_fail `badmatch`, _56

  %% Unique:
  %%    _104
  _213 = succeeded:body _104
  br ^1

112:
  %% map_SUITE.erl:2416
  %% Aliased:
  %%    M0
  _105 = match_fail `badmatch`, M0

  %% Unique:
  %%    _105
  _219 = succeeded:body _105
  br ^1

1:
  _106 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _106
}

%% map_SUITE.erl:2427
%% Counter = 92
%% bs_ensure_opt: true
function `map_SUITE`:`t_maps_take_2`(_0) {
0:
  %% map_SUITE.erl:2428
  _9 = call (`maps`:`take`/2), `a`, `#{a => yes,b => no}`

  %% Aliased:
  %%    _9
  _27 = succeeded:body _9
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    _9 => 'error' | {'no' | 'yes', #{'a' | 'b'=>'no' | 'yes'}}
  %% Aliased:
  %%    _9
  _69 = is_tagged_tuple _9, `2`, `yes`
  br _69, ^66, ^29

66:
  %% Argument types:
  %%    _9 => {'yes', #{'a' | 'b'=>'no' | 'yes'}}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `1`

  %% map_SUITE.erl:2429
  %% Argument types:
  %%    _10 => #{'a' | 'b'=>'no' | 'yes'}
  %% Aliased:
  %%    _10
  _12 = bif:'=:=' _10, `#{b => no}`
  br _12, ^63, ^31

63:
  %% map_SUITE.erl:2431
  _13 = call (`maps`:`take`/2), `a`, `#{b => no}`

  %% Aliased:
  %%    _13
  _32 = succeeded:body _13
  br _32, ^60, ^1

60:
  %% map_SUITE.erl:2433
  %% Result type:
  %%    'b'
  _18 = call (`not_map`/1), `b`

  %% Unique:
  %%    _18
  _35 = succeeded:body _18
  br _35, ^90, ^1

90:
  br ^91

91:
  _39 = new_try_tag `'catch'`
  br _39, ^37, ^38

37:
  %% map_SUITE.erl:2434
  _20 = call (`maps`:`take`/2), `a`, `b`

  %% Aliased:
  %%    _20
  _41 = succeeded:body _20
  br ^38

38:
  %% Unique:
  %%    _39
  _44 = landingpad `'catch'`, _39

  %% Aliased:
  %%    _44
  _42 = extract _44, `0`
  br ^36

36:
  %% Aliased:
  %%    _42
  %% Unique:
  %%    _39
  _5 = catch_end _39, _42

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _56 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _56, ^53, ^47

53:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _14 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _50 = bif:is_tuple _14
  br _50, ^50, ^47

50:
  %% Argument types:
  %%    _14 => {...}
  %% Aliased:
  %%    _14
  _51 = bif:tuple_size _14

  %% Argument types:
  %%    _51 => 0..16777215
  %% Unique:
  %%    _51
  _52 = bif:'=:=' _51, `2`
  br _52, ^49, ^47

49:
  %% Argument types:
  %%    _14 => {any(), any()}
  %% Aliased:
  %%    _14
  _17 = get_tuple_element _14, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _48 = bif:'=:=' _17, `{badmap,b}`
  br _48, ^48, ^47

48:
  %% Result type:
  %%    'ok'
  ret `ok`

47:
  %% map_SUITE.erl:2434
  %% Aliased:
  %%    _5
  _21 = match_fail `badmatch`, _5

  %% Unique:
  %%    _21
  _59 = succeeded:body _21
  br ^1

31:
  %% map_SUITE.erl:2429
  _23 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _23
  _65 = succeeded:body _23
  br ^1

29:
  %% map_SUITE.erl:2428
  %% Aliased:
  %%    _9
  _24 = match_fail `badmatch`, _9

  %% Unique:
  %%    _24
  _72 = succeeded:body _24
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% map_SUITE.erl:2438
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'b'
function `map_SUITE`:`not_map`(_0) {
0:
  %% Result type:
  %%    'b'
  %% Unique:
  %%    _0
  ret _0
}

%% map_SUITE.erl:2440
%% Counter = 402
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_with_3`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _152 = bif:is_list _0
  br _152, ^152, ^151

152:
  %% Result type:
  %%    nonempty_list(any())
  Fun = make_fun (`'-t_update_with_3/1-fun-0-'`/1)

  %% map_SUITE.erl:2447
  %% Aliased:
  %%    Fun
  _60 = call (`maps`:`update_with`/3), `key1`, Fun, `#{key1 => value1,key2 => <<"value2">>,"key3" => "value3"}`

  %% Aliased:
  %%    _60
  _153 = succeeded:body _60
  br _153, ^323, ^1

323:
  %% Argument types:
  %%    _60 => #{'key1' | 'key2' | nonempty_list(51..121)=>'value1' | nonempty_list(any()) | bitstring(16)}
  %% Aliased:
  %%    _60
  _61 = get_map_element _60, `key1`

  %% Aliased:
  %%    _61
  _156 = succeeded:guard _61
  br _156, ^156, ^155

156:
  %% Aliased:
  %%    _61
  _322 = is_nonempty_list _61
  br _322, ^322, ^155

322:
  %% Argument types:
  %%    _61 => nonempty_list(any())
  %% Aliased:
  %%    _61
  _63 = get_hd _61

  %% Argument types:
  %%    _61 => nonempty_list(any())
  %% Aliased:
  %%    _61
  _62 = get_tl _61

  %% Aliased:
  %%    _62
  _321 = is_nonempty_list _62
  br _321, ^321, ^155

321:
  %% Argument types:
  %%    _62 => nonempty_list(any())
  %% Aliased:
  %%    _62
  _65 = get_hd _62

  %% Argument types:
  %%    _62 => nonempty_list(any())
  %% Aliased:
  %%    _62
  _64 = get_tl _62

  %% Aliased:
  %%    _64
  _320 = is_nonempty_list _64
  br _320, ^320, ^155

320:
  %% Argument types:
  %%    _64 => nonempty_list(any())
  %% Aliased:
  %%    _64
  _67 = get_hd _64

  %% Argument types:
  %%    _64 => nonempty_list(any())
  %% Aliased:
  %%    _64
  _66 = get_tl _64

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _317 = bif:is_tuple _67
  br _317, ^317, ^155

317:
  %% Argument types:
  %%    _67 => {...}
  %% Aliased:
  %%    _67
  _318 = bif:tuple_size _67

  %% Argument types:
  %%    _318 => 0..16777215
  %% Unique:
  %%    _318
  _319 = bif:'=:=' _318, `2`
  br _319, ^316, ^155

316:
  %% Argument types:
  %%    _66 => list(any())
  %% Aliased:
  %%    _66
  _315 = bif:'=:=' _66, `[]`
  br _315, ^315, ^155

315:
  %% map_SUITE.erl:2447
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _28 = bif:'=:=' _63, `value1`
  br _28, ^346, ^155

346:
  %% map_SUITE.erl:2447
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _26 = bif:'=:=' _65, `value1`
  br _26, ^347, ^155

347:
  %% Argument types:
  %%    _67 => {any(), any()}
  %% Aliased:
  %%    _67
  _69 = get_tuple_element _67, `0`

  %% map_SUITE.erl:2447
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _24 = bif:'=:=' _69, `value1`
  br _24, ^348, ^155

348:
  %% Argument types:
  %%    _67 => {'value1', any()}
  %% Aliased:
  %%    _67
  _68 = get_tuple_element _67, `1`

  %% map_SUITE.erl:2447
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _25 = bif:'=:=' _68, `value1`
  br _25, ^160, ^155

160:
  %% map_SUITE.erl:2448
  %% Aliased:
  %%    Fun
  _71 = call (`maps`:`update_with`/3), `key2`, Fun, `#{key1 => value1,key2 => <<"value2">>,"key3" => "value3"}`

  %% Aliased:
  %%    _71
  _161 = succeeded:body _71
  br _161, ^313, ^1

313:
  %% Argument types:
  %%    _71 => #{'key1' | 'key2' | nonempty_list(51..121)=>'value1' | nonempty_list(any()) | bitstring(16)}
  %% Aliased:
  %%    _71
  _72 = get_map_element _71, `key2`

  %% Aliased:
  %%    _72
  _164 = succeeded:guard _72
  br _164, ^164, ^163

164:
  %% Aliased:
  %%    _72
  _312 = is_nonempty_list _72
  br _312, ^312, ^163

312:
  %% Argument types:
  %%    _72 => nonempty_list(any())
  %% Aliased:
  %%    _72
  _74 = get_hd _72

  %% Argument types:
  %%    _72 => nonempty_list(any())
  %% Aliased:
  %%    _72
  _73 = get_tl _72

  %% Aliased:
  %%    _73
  _311 = is_nonempty_list _73
  br _311, ^311, ^163

311:
  %% Argument types:
  %%    _73 => nonempty_list(any())
  %% Aliased:
  %%    _73
  _76 = get_hd _73

  %% Argument types:
  %%    _73 => nonempty_list(any())
  %% Aliased:
  %%    _73
  _75 = get_tl _73

  %% Aliased:
  %%    _75
  _310 = is_nonempty_list _75
  br _310, ^310, ^163

310:
  %% Argument types:
  %%    _75 => nonempty_list(any())
  %% Aliased:
  %%    _75
  _78 = get_hd _75

  %% Argument types:
  %%    _75 => nonempty_list(any())
  %% Aliased:
  %%    _75
  _77 = get_tl _75

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _307 = bif:is_tuple _78
  br _307, ^307, ^163

307:
  %% Argument types:
  %%    _78 => {...}
  %% Aliased:
  %%    _78
  _308 = bif:tuple_size _78

  %% Argument types:
  %%    _308 => 0..16777215
  %% Unique:
  %%    _308
  _309 = bif:'=:=' _308, `2`
  br _309, ^306, ^163

306:
  %% Argument types:
  %%    _77 => list(any())
  %% Aliased:
  %%    _77
  _305 = bif:'=:=' _77, `[]`
  br _305, ^305, ^163

305:
  %% map_SUITE.erl:2448
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _38 = bif:'=:=' _74, `<<"value2">>`
  br _38, ^338, ^163

338:
  %% map_SUITE.erl:2448
  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _36 = bif:'=:=' _76, `<<"value2">>`
  br _36, ^339, ^163

339:
  %% Argument types:
  %%    _78 => {any(), any()}
  %% Aliased:
  %%    _78
  _80 = get_tuple_element _78, `0`

  %% map_SUITE.erl:2448
  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _34 = bif:'=:=' _80, `<<"value2">>`
  br _34, ^340, ^163

340:
  %% Argument types:
  %%    _78 => {bitstring(16), any()}
  %% Aliased:
  %%    _78
  _79 = get_tuple_element _78, `1`

  %% map_SUITE.erl:2448
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _35 = bif:'=:=' _79, `<<"value2">>`
  br _35, ^168, ^163

168:
  %% map_SUITE.erl:2449
  %% Aliased:
  %%    Fun
  _82 = call (`maps`:`update_with`/3), `"key3"`, Fun, `#{key1 => value1,key2 => <<"value2">>,"key3" => "value3"}`

  %% Aliased:
  %%    _82
  _169 = succeeded:body _82
  br _169, ^303, ^1

303:
  %% Argument types:
  %%    _82 => #{'key1' | 'key2' | nonempty_list(51..121)=>'value1' | nonempty_list(any()) | bitstring(16)}
  %% Aliased:
  %%    _82
  _83 = get_map_element _82, `"key3"`

  %% Aliased:
  %%    _83
  _172 = succeeded:guard _83
  br _172, ^172, ^171

172:
  %% Aliased:
  %%    _83
  _302 = is_nonempty_list _83
  br _302, ^302, ^171

302:
  %% Argument types:
  %%    _83 => nonempty_list(any())
  %% Aliased:
  %%    _83
  _85 = get_hd _83

  %% Argument types:
  %%    _83 => nonempty_list(any())
  %% Aliased:
  %%    _83
  _84 = get_tl _83

  %% Aliased:
  %%    _84
  _301 = is_nonempty_list _84
  br _301, ^301, ^171

301:
  %% Argument types:
  %%    _84 => nonempty_list(any())
  %% Aliased:
  %%    _84
  _87 = get_hd _84

  %% Argument types:
  %%    _84 => nonempty_list(any())
  %% Aliased:
  %%    _84
  _86 = get_tl _84

  %% Aliased:
  %%    _86
  _300 = is_nonempty_list _86
  br _300, ^300, ^171

300:
  %% Argument types:
  %%    _86 => nonempty_list(any())
  %% Aliased:
  %%    _86
  _89 = get_hd _86

  %% Argument types:
  %%    _86 => nonempty_list(any())
  %% Aliased:
  %%    _86
  _88 = get_tl _86

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _297 = bif:is_tuple _89
  br _297, ^297, ^171

297:
  %% Argument types:
  %%    _89 => {...}
  %% Aliased:
  %%    _89
  _298 = bif:tuple_size _89

  %% Argument types:
  %%    _298 => 0..16777215
  %% Unique:
  %%    _298
  _299 = bif:'=:=' _298, `2`
  br _299, ^296, ^171

296:
  %% Argument types:
  %%    _88 => list(any())
  %% Aliased:
  %%    _88
  _295 = bif:'=:=' _88, `[]`
  br _295, ^295, ^171

295:
  %% map_SUITE.erl:2449
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _48 = bif:'=:=' _85, `"value3"`
  br _48, ^330, ^171

330:
  %% map_SUITE.erl:2449
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _46 = bif:'=:=' _87, `"value3"`
  br _46, ^331, ^171

331:
  %% Argument types:
  %%    _89 => {any(), any()}
  %% Aliased:
  %%    _89
  _91 = get_tuple_element _89, `0`

  %% map_SUITE.erl:2449
  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _44 = bif:'=:=' _91, `"value3"`
  br _44, ^332, ^171

332:
  %% Argument types:
  %%    _89 => {nonempty_list(51..118), any()}
  %% Aliased:
  %%    _89
  _90 = get_tuple_element _89, `1`

  %% map_SUITE.erl:2449
  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _45 = bif:'=:=' _90, `"value3"`
  br _45, ^396, ^171

396:
  br ^399

399:
  _180 = new_try_tag `'catch'`
  br _180, ^178, ^179

178:
  %% map_SUITE.erl:2452
  _11 = call (`id`/1), `a`

  %% Aliased:
  %%    _11
  _182 = succeeded:body _11
  br _182, ^182, ^179

182:
  %% map_SUITE.erl:2452
  %% Aliased:
  %%    _11
  _137 = call (`maps`:`update_with`/3), `[a,b]`, _11, `b`

  %% Aliased:
  %%    _137
  _183 = succeeded:body _137
  br ^179

179:
  %% Unique:
  %%    _180
  _186 = landingpad `'catch'`, _180

  %% Aliased:
  %%    _186
  _184 = extract _186, `0`
  br ^177

177:
  %% Aliased:
  %%    _184
  %% Unique:
  %%    _180
  _12 = catch_end _180, _184

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _291 = is_tagged_tuple _12, `2`, `'EXIT'`
  br _291, ^288, ^189

288:
  %% Argument types:
  %%    _12 => {''EXIT'', any()}
  %% Aliased:
  %%    _12
  _93 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _285 = bif:is_tuple _93
  br _285, ^285, ^189

285:
  %% Argument types:
  %%    _93 => {...}
  %% Aliased:
  %%    _93
  _286 = bif:tuple_size _93

  %% Argument types:
  %%    _286 => 0..16777215
  %% Unique:
  %%    _286
  _287 = bif:'=:=' _286, `2`
  br _287, ^284, ^189

284:
  %% Argument types:
  %%    _93 => {any(), any()}
  %% Aliased:
  %%    _93
  _96 = get_tuple_element _93, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _283 = bif:'=:=' _96, `{badmap,b}`
  br _283, ^283, ^189

283:
  %% Argument types:
  %%    _93 => {{'badmap', 'b'}, any()}
  %% Aliased:
  %%    _93
  _95 = get_tuple_element _93, `1`

  %% Aliased:
  %%    _95
  _282 = is_nonempty_list _95
  br _282, ^282, ^189

282:
  %% Argument types:
  %%    _95 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _95
  _98 = get_hd _95

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _279 = is_tagged_tuple _98, `4`, `maps`
  br _279, ^276, ^189

276:
  %% Argument types:
  %%    _98 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _98
  _101 = get_tuple_element _98, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _275 = bif:'=:=' _101, `update_with`
  br _275, ^274, ^189

274:
  %% Argument types:
  %%    _98 => {'maps', 'update_with', any(), any()}
  %% Aliased:
  %%    _98
  _100 = get_tuple_element _98, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _273 = bif:'=:=' _100, `[[a,b],a,b]`
  br _273, ^397, ^189

397:
  br ^400

400:
  _193 = new_try_tag `'catch'`
  br _193, ^191, ^192

191:
  %% map_SUITE.erl:2453
  _14 = call (`id`/1), `a`

  %% Aliased:
  %%    _14
  _195 = succeeded:body _14
  br _195, ^195, ^192

195:
  %% map_SUITE.erl:2453
  %% Aliased:
  %%    _14
  _139 = call (`maps`:`update_with`/3), `[a,b]`, _14, `#{}`

  %% Aliased:
  %%    _139
  _196 = succeeded:body _139
  br _196, ^196, ^192

196:
  br ^190

192:
  %% Unique:
  %%    _193
  _199 = landingpad `'catch'`, _193

  %% Aliased:
  %%    _199
  _197 = extract _199, `0`
  br ^190

190:
  _200 = phi { _197, ^192 }, { _139, ^196 }

  %% Aliased:
  %%    _200
  %% Unique:
  %%    _193
  _15 = catch_end _193, _200

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _269 = is_tagged_tuple _15, `2`, `'EXIT'`
  br _269, ^266, ^202

266:
  %% Argument types:
  %%    _15 => {''EXIT'', any()}
  %% Aliased:
  %%    _15
  _103 = get_tuple_element _15, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _263 = is_tagged_tuple _103, `2`, `badarg`
  br _263, ^260, ^202

260:
  %% Argument types:
  %%    _103 => {'badarg', any()}
  %% Aliased:
  %%    _103
  _105 = get_tuple_element _103, `1`

  %% Aliased:
  %%    _105
  _259 = is_nonempty_list _105
  br _259, ^259, ^202

259:
  %% Argument types:
  %%    _105 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _105
  _108 = get_hd _105

  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _256 = is_tagged_tuple _108, `4`, `maps`
  br _256, ^253, ^202

253:
  %% Argument types:
  %%    _108 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _108
  _111 = get_tuple_element _108, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _252 = bif:'=:=' _111, `update_with`
  br _252, ^251, ^202

251:
  %% Argument types:
  %%    _108 => {'maps', 'update_with', any(), any()}
  %% Aliased:
  %%    _108
  _110 = get_tuple_element _108, `2`

  %% Aliased:
  %%    _110
  _250 = is_nonempty_list _110
  br _250, ^250, ^202

250:
  %% Argument types:
  %%    _110 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _110
  _114 = get_hd _110

  %% Argument types:
  %%    _110 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _110
  _113 = get_tl _110

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _249 = bif:'=:=' _114, `[a,b]`
  br _249, ^249, ^202

249:
  %% Aliased:
  %%    _113
  _248 = is_nonempty_list _113
  br _248, ^248, ^202

248:
  %% Argument types:
  %%    _113 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _113
  _116 = get_hd _113

  %% Argument types:
  %%    _113 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _113
  _115 = get_tl _113

  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _247 = bif:'=:=' _116, `a`
  br _247, ^246, ^202

246:
  %% Aliased:
  %%    _115
  _245 = is_nonempty_list _115
  br _245, ^245, ^202

245:
  %% Argument types:
  %%    _115 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _115
  _118 = get_hd _115

  %% Argument types:
  %%    _115 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _115
  _117 = get_tl _115

  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _244 = bif:is_map _118
  br _244, ^244, ^202

244:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _243 = bif:'=:=' _117, `[]`
  br _243, ^398, ^202

398:
  br ^401

401:
  _206 = new_try_tag `'catch'`
  br _206, ^204, ^205

204:
  %% map_SUITE.erl:2454
  %% Aliased:
  %%    Fun
  _141 = call (`maps`:`update_with`/3), `[a,b]`, Fun, `#{}`

  %% Aliased:
  %%    _141
  _208 = succeeded:body _141
  br _208, ^208, ^205

208:
  br ^203

205:
  %% Unique:
  %%    _206
  _211 = landingpad `'catch'`, _206

  %% Aliased:
  %%    _211
  _209 = extract _211, `0`
  br ^203

203:
  _212 = phi { _209, ^205 }, { _141, ^208 }

  %% Aliased:
  %%    _212
  %% Unique:
  %%    _206
  _17 = catch_end _206, _212

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _239 = is_tagged_tuple _17, `2`, `'EXIT'`
  br _239, ^236, ^214

236:
  %% Argument types:
  %%    _17 => {''EXIT'', any()}
  %% Aliased:
  %%    _17
  _119 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _233 = bif:is_tuple _119
  br _233, ^233, ^214

233:
  %% Argument types:
  %%    _119 => {...}
  %% Aliased:
  %%    _119
  _234 = bif:tuple_size _119

  %% Argument types:
  %%    _234 => 0..16777215
  %% Unique:
  %%    _234
  _235 = bif:'=:=' _234, `2`
  br _235, ^232, ^214

232:
  %% Argument types:
  %%    _119 => {any(), any()}
  %% Aliased:
  %%    _119
  _122 = get_tuple_element _119, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _231 = bif:'=:=' _122, `{badkey,[a,b]}`
  br _231, ^231, ^214

231:
  %% Argument types:
  %%    _119 => {{'badkey', nonempty_list('a' | 'b')}, any()}
  %% Aliased:
  %%    _119
  _121 = get_tuple_element _119, `1`

  %% Aliased:
  %%    _121
  _230 = is_nonempty_list _121
  br _230, ^230, ^214

230:
  %% Argument types:
  %%    _121 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _121
  _124 = get_hd _121

  %% Argument types:
  %%    
  %% Aliased:
  %%    _124
  _227 = is_tagged_tuple _124, `4`, `maps`
  br _227, ^224, ^214

224:
  %% Argument types:
  %%    _124 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _124
  _127 = get_tuple_element _124, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _223 = bif:'=:=' _127, `update_with`
  br _223, ^222, ^214

222:
  %% Argument types:
  %%    _124 => {'maps', 'update_with', any(), any()}
  %% Aliased:
  %%    _124
  _126 = get_tuple_element _124, `2`

  %% Aliased:
  %%    _126
  _221 = is_nonempty_list _126
  br _221, ^221, ^214

221:
  %% Argument types:
  %%    _126 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _126
  _130 = get_hd _126

  %% Argument types:
  %%    _126 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _126
  _129 = get_tl _126

  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _220 = bif:'=:=' _130, `[a,b]`
  br _220, ^220, ^214

220:
  %% Aliased:
  %%    _129
  _219 = is_nonempty_list _129
  br _219, ^219, ^214

219:
  %% Argument types:
  %%    _129 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _129
  _132 = get_hd _129

  %% Argument types:
  %%    _129 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _129
  _131 = get_tl _129

  %% Aliased:
  %%    _131
  _218 = is_nonempty_list _131
  br _218, ^218, ^214

218:
  %% Argument types:
  %%    _131 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _131
  _134 = get_hd _131

  %% Argument types:
  %%    _131 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _131
  _133 = get_tl _131

  %% Argument types:
  %%    
  %% Aliased:
  %%    _134
  _217 = bif:is_map _134
  br _217, ^217, ^214

217:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _133
  _216 = bif:'=:=' _133, `[]`
  br _216, ^216, ^214

216:
  %% Argument types:
  %%    Fun => fun((_) -> nonempty_list(any()))
  %% Aliased:
  %%    _132, 
  %%    Fun
  _215 = bif:'=:=' _132, Fun
  br _215, ^215, ^214

215:
  %% Result type:
  %%    'ok'
  ret `ok`

214:
  %% map_SUITE.erl:2454
  %% Aliased:
  %%    _17
  _142 = match_fail `badmatch`, _17

  %% Unique:
  %%    _142
  _242 = succeeded:body _142
  br ^1

202:
  %% map_SUITE.erl:2453
  %% Aliased:
  %%    _15
  _143 = match_fail `badmatch`, _15

  %% Unique:
  %%    _143
  _272 = succeeded:body _143
  br ^1

189:
  %% map_SUITE.erl:2452
  %% Aliased:
  %%    _12
  _144 = match_fail `badmatch`, _12

  %% Unique:
  %%    _144
  _294 = succeeded:body _144
  br ^1

171:
  %% map_SUITE.erl:2449
  %% Aliased:
  %%    _82
  _145 = match_fail `badmatch`, _82

  %% Unique:
  %%    _145
  _304 = succeeded:body _145
  br ^1

163:
  %% map_SUITE.erl:2448
  %% Aliased:
  %%    _71
  _146 = match_fail `badmatch`, _71

  %% Unique:
  %%    _146
  _314 = succeeded:body _146
  br ^1

155:
  %% map_SUITE.erl:2447
  %% Aliased:
  %%    _60
  _147 = match_fail `badmatch`, _60

  %% Unique:
  %%    _147
  _324 = succeeded:body _147
  br ^1

151:
  %% map_SUITE.erl:2440
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_with_3/1-',1}}
  _148 = match_fail `function_clause`, _0

  %% Unique:
  %%    _148
  _325 = succeeded:body _148
  br ^1

1:
  _149 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _149
}

%% map_SUITE.erl:2457
%% Counter = 334
%% bs_ensure_opt: true
function `map_SUITE`:`t_update_with_4`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _134 = bif:is_list _0
  br _134, ^134, ^133

134:
  %% Result type:
  %%    nonempty_list(any())
  Fun = make_fun (`'-t_update_with_4/1-fun-0-'`/1)

  %% map_SUITE.erl:2465
  %% Aliased:
  %%    Fun
  _58 = call (`maps`:`update_with`/4), `key1`, Fun, `3`, `#{key1 => value1,key2 => <<"value2">>,"key3" => "value3"}`

  %% Aliased:
  %%    _58
  _135 = succeeded:body _58
  br _135, ^135, ^1

135:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _272 = bif:is_map _58
  br _272, ^272, ^137

272:
  %% Argument types:
  %%    _58 => map()
  %% Aliased:
  %%    _58
  _59 = get_map_element _58, `key1`

  %% Aliased:
  %%    _59
  _138 = succeeded:guard _59
  br _138, ^138, ^137

138:
  %% Aliased:
  %%    _59
  _271 = is_nonempty_list _59
  br _271, ^271, ^137

271:
  %% Argument types:
  %%    _59 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _59
  _61 = get_hd _59

  %% Argument types:
  %%    _59 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _59
  _60 = get_tl _59

  %% Aliased:
  %%    _60
  _270 = is_nonempty_list _60
  br _270, ^270, ^137

270:
  %% Argument types:
  %%    _60 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _60
  _63 = get_hd _60

  %% Argument types:
  %%    _60 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _60
  _62 = get_tl _60

  %% Aliased:
  %%    _62
  _269 = is_nonempty_list _62
  br _269, ^269, ^137

269:
  %% Argument types:
  %%    _62 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _62
  _65 = get_hd _62

  %% Argument types:
  %%    _62 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _62
  _64 = get_tl _62

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _266 = bif:is_tuple _65
  br _266, ^266, ^137

266:
  %% Argument types:
  %%    _65 => {...}
  %% Aliased:
  %%    _65
  _267 = bif:tuple_size _65

  %% Argument types:
  %%    _267 => 0..16777215
  %% Unique:
  %%    _267
  _268 = bif:'=:=' _267, `2`
  br _268, ^265, ^137

265:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _264 = bif:'=:=' _64, `[]`
  br _264, ^264, ^137

264:
  %% map_SUITE.erl:2465
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _28 = bif:'=:=' _61, `value1`
  br _28, ^295, ^137

295:
  %% map_SUITE.erl:2465
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _26 = bif:'=:=' _63, `value1`
  br _26, ^296, ^137

296:
  %% Argument types:
  %%    _65 => {any(), any()}
  %% Aliased:
  %%    _65
  _67 = get_tuple_element _65, `0`

  %% map_SUITE.erl:2465
  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _24 = bif:'=:=' _67, `value1`
  br _24, ^297, ^137

297:
  %% Argument types:
  %%    _65 => {'value1', any()}
  %% Aliased:
  %%    _65
  _66 = get_tuple_element _65, `1`

  %% map_SUITE.erl:2465
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _25 = bif:'=:=' _66, `value1`
  br _25, ^142, ^137

142:
  %% map_SUITE.erl:2466
  %% Aliased:
  %%    Fun
  _69 = call (`maps`:`update_with`/4), `key2`, Fun, `3`, `#{key1 => value1,key2 => <<"value2">>,"key3" => "value3"}`

  %% Aliased:
  %%    _69
  _143 = succeeded:body _69
  br _143, ^143, ^1

143:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _262 = bif:is_map _69
  br _262, ^262, ^145

262:
  %% Argument types:
  %%    _69 => map()
  %% Aliased:
  %%    _69
  _70 = get_map_element _69, `key2`

  %% Aliased:
  %%    _70
  _146 = succeeded:guard _70
  br _146, ^146, ^145

146:
  %% Aliased:
  %%    _70
  _261 = is_nonempty_list _70
  br _261, ^261, ^145

261:
  %% Argument types:
  %%    _70 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _70
  _72 = get_hd _70

  %% Argument types:
  %%    _70 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _70
  _71 = get_tl _70

  %% Aliased:
  %%    _71
  _260 = is_nonempty_list _71
  br _260, ^260, ^145

260:
  %% Argument types:
  %%    _71 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _71
  _74 = get_hd _71

  %% Argument types:
  %%    _71 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _71
  _73 = get_tl _71

  %% Aliased:
  %%    _73
  _259 = is_nonempty_list _73
  br _259, ^259, ^145

259:
  %% Argument types:
  %%    _73 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _73
  _76 = get_hd _73

  %% Argument types:
  %%    _73 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _73
  _75 = get_tl _73

  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _256 = bif:is_tuple _76
  br _256, ^256, ^145

256:
  %% Argument types:
  %%    _76 => {...}
  %% Aliased:
  %%    _76
  _257 = bif:tuple_size _76

  %% Argument types:
  %%    _257 => 0..16777215
  %% Unique:
  %%    _257
  _258 = bif:'=:=' _257, `2`
  br _258, ^255, ^145

255:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _254 = bif:'=:=' _75, `[]`
  br _254, ^254, ^145

254:
  %% map_SUITE.erl:2466
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _38 = bif:'=:=' _72, `<<"value2">>`
  br _38, ^287, ^145

287:
  %% map_SUITE.erl:2466
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _36 = bif:'=:=' _74, `<<"value2">>`
  br _36, ^288, ^145

288:
  %% Argument types:
  %%    _76 => {any(), any()}
  %% Aliased:
  %%    _76
  _78 = get_tuple_element _76, `0`

  %% map_SUITE.erl:2466
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _34 = bif:'=:=' _78, `<<"value2">>`
  br _34, ^289, ^145

289:
  %% Argument types:
  %%    _76 => {bitstring(16), any()}
  %% Aliased:
  %%    _76
  _77 = get_tuple_element _76, `1`

  %% map_SUITE.erl:2466
  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _35 = bif:'=:=' _77, `<<"value2">>`
  br _35, ^150, ^145

150:
  %% map_SUITE.erl:2467
  %% Aliased:
  %%    Fun
  _80 = call (`maps`:`update_with`/4), `"key3"`, Fun, `3`, `#{key1 => value1,key2 => <<"value2">>,"key3" => "value3"}`

  %% Aliased:
  %%    _80
  _151 = succeeded:body _80
  br _151, ^151, ^1

151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _252 = bif:is_map _80
  br _252, ^252, ^153

252:
  %% Argument types:
  %%    _80 => map()
  %% Aliased:
  %%    _80
  _81 = get_map_element _80, `"key3"`

  %% Aliased:
  %%    _81
  _154 = succeeded:guard _81
  br _154, ^154, ^153

154:
  %% Aliased:
  %%    _81
  _251 = is_nonempty_list _81
  br _251, ^251, ^153

251:
  %% Argument types:
  %%    _81 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _81
  _83 = get_hd _81

  %% Argument types:
  %%    _81 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _81
  _82 = get_tl _81

  %% Aliased:
  %%    _82
  _250 = is_nonempty_list _82
  br _250, ^250, ^153

250:
  %% Argument types:
  %%    _82 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _82
  _85 = get_hd _82

  %% Argument types:
  %%    _82 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _82
  _84 = get_tl _82

  %% Aliased:
  %%    _84
  _249 = is_nonempty_list _84
  br _249, ^249, ^153

249:
  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _87 = get_hd _84

  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _86 = get_tl _84

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _246 = bif:is_tuple _87
  br _246, ^246, ^153

246:
  %% Argument types:
  %%    _87 => {...}
  %% Aliased:
  %%    _87
  _247 = bif:tuple_size _87

  %% Argument types:
  %%    _247 => 0..16777215
  %% Unique:
  %%    _247
  _248 = bif:'=:=' _247, `2`
  br _248, ^245, ^153

245:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _244 = bif:'=:=' _86, `[]`
  br _244, ^244, ^153

244:
  %% map_SUITE.erl:2467
  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _48 = bif:'=:=' _83, `"value3"`
  br _48, ^279, ^153

279:
  %% map_SUITE.erl:2467
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _46 = bif:'=:=' _85, `"value3"`
  br _46, ^280, ^153

280:
  %% Argument types:
  %%    _87 => {any(), any()}
  %% Aliased:
  %%    _87
  _89 = get_tuple_element _87, `0`

  %% map_SUITE.erl:2467
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _44 = bif:'=:=' _89, `"value3"`
  br _44, ^281, ^153

281:
  %% Argument types:
  %%    _87 => {nonempty_list(51..118), any()}
  %% Aliased:
  %%    _87
  _88 = get_tuple_element _87, `1`

  %% map_SUITE.erl:2467
  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _45 = bif:'=:=' _88, `"value3"`
  br _45, ^158, ^153

158:
  %% map_SUITE.erl:2469
  %% Aliased:
  %%    Fun
  _91 = call (`maps`:`update_with`/4), `key3`, Fun, `3`, `#{key1 => value1,key2 => <<"value2">>,"key3" => "value3"}`

  %% Aliased:
  %%    _91
  _159 = succeeded:body _91
  br _159, ^159, ^1

159:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _242 = bif:is_map _91
  br _242, ^242, ^161

242:
  %% Argument types:
  %%    _91 => map()
  %% Aliased:
  %%    _91
  _92 = get_map_element _91, `key3`

  %% Aliased:
  %%    _92
  _162 = succeeded:guard _92
  br _162, ^162, ^161

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _163 = bif:'=:=' _92, `3`
  br _163, ^330, ^161

330:
  br ^332

332:
  _167 = new_try_tag `'catch'`
  br _167, ^165, ^166

165:
  %% map_SUITE.erl:2472
  _13 = call (`id`/1), `a`

  %% Aliased:
  %%    _13
  _169 = succeeded:body _13
  br _169, ^169, ^166

169:
  %% map_SUITE.erl:2472
  %% Aliased:
  %%    _13
  _121 = call (`maps`:`update_with`/3), `[a,b]`, _13, `b`

  %% Aliased:
  %%    _121
  _170 = succeeded:body _121
  br ^166

166:
  %% Unique:
  %%    _167
  _173 = landingpad `'catch'`, _167

  %% Aliased:
  %%    _173
  _171 = extract _173, `0`
  br ^164

164:
  %% Aliased:
  %%    _171
  %% Unique:
  %%    _167
  _14 = catch_end _167, _171

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _238 = is_tagged_tuple _14, `2`, `'EXIT'`
  br _238, ^235, ^176

235:
  %% Argument types:
  %%    _14 => {''EXIT'', any()}
  %% Aliased:
  %%    _14
  _93 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _232 = bif:is_tuple _93
  br _232, ^232, ^176

232:
  %% Argument types:
  %%    _93 => {...}
  %% Aliased:
  %%    _93
  _233 = bif:tuple_size _93

  %% Argument types:
  %%    _233 => 0..16777215
  %% Unique:
  %%    _233
  _234 = bif:'=:=' _233, `2`
  br _234, ^231, ^176

231:
  %% Argument types:
  %%    _93 => {any(), any()}
  %% Aliased:
  %%    _93
  _96 = get_tuple_element _93, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _230 = bif:'=:=' _96, `{badmap,b}`
  br _230, ^230, ^176

230:
  %% Argument types:
  %%    _93 => {{'badmap', 'b'}, any()}
  %% Aliased:
  %%    _93
  _95 = get_tuple_element _93, `1`

  %% Aliased:
  %%    _95
  _229 = is_nonempty_list _95
  br _229, ^229, ^176

229:
  %% Argument types:
  %%    _95 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _95
  _98 = get_hd _95

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _226 = is_tagged_tuple _98, `4`, `maps`
  br _226, ^223, ^176

223:
  %% Argument types:
  %%    _98 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _98
  _101 = get_tuple_element _98, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _222 = bif:'=:=' _101, `update_with`
  br _222, ^221, ^176

221:
  %% Argument types:
  %%    _98 => {'maps', 'update_with', any(), any()}
  %% Aliased:
  %%    _98
  _100 = get_tuple_element _98, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _220 = bif:'=:=' _100, `[[a,b],a,b]`
  br _220, ^331, ^176

331:
  br ^333

333:
  _180 = new_try_tag `'catch'`
  br _180, ^178, ^179

178:
  %% map_SUITE.erl:2473
  _16 = call (`id`/1), `a`

  %% Aliased:
  %%    _16
  _182 = succeeded:body _16
  br _182, ^182, ^179

182:
  %% map_SUITE.erl:2473
  %% Aliased:
  %%    _16
  _123 = call (`maps`:`update_with`/3), `[a,b]`, _16, `#{}`

  %% Aliased:
  %%    _123
  _183 = succeeded:body _123
  br _183, ^183, ^179

183:
  br ^177

179:
  %% Unique:
  %%    _180
  _186 = landingpad `'catch'`, _180

  %% Aliased:
  %%    _186
  _184 = extract _186, `0`
  br ^177

177:
  _187 = phi { _184, ^179 }, { _123, ^183 }

  %% Aliased:
  %%    _187
  %% Unique:
  %%    _180
  _17 = catch_end _180, _187

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _216 = is_tagged_tuple _17, `2`, `'EXIT'`
  br _216, ^213, ^189

213:
  %% Argument types:
  %%    _17 => {''EXIT'', any()}
  %% Aliased:
  %%    _17
  _103 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _210 = is_tagged_tuple _103, `2`, `badarg`
  br _210, ^207, ^189

207:
  %% Argument types:
  %%    _103 => {'badarg', any()}
  %% Aliased:
  %%    _103
  _105 = get_tuple_element _103, `1`

  %% Aliased:
  %%    _105
  _206 = is_nonempty_list _105
  br _206, ^206, ^189

206:
  %% Argument types:
  %%    _105 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _105
  _108 = get_hd _105

  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _203 = is_tagged_tuple _108, `4`, `maps`
  br _203, ^200, ^189

200:
  %% Argument types:
  %%    _108 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _108
  _111 = get_tuple_element _108, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _199 = bif:'=:=' _111, `update_with`
  br _199, ^198, ^189

198:
  %% Argument types:
  %%    _108 => {'maps', 'update_with', any(), any()}
  %% Aliased:
  %%    _108
  _110 = get_tuple_element _108, `2`

  %% Aliased:
  %%    _110
  _197 = is_nonempty_list _110
  br _197, ^197, ^189

197:
  %% Argument types:
  %%    _110 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _110
  _114 = get_hd _110

  %% Argument types:
  %%    _110 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _110
  _113 = get_tl _110

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _196 = bif:'=:=' _114, `[a,b]`
  br _196, ^196, ^189

196:
  %% Aliased:
  %%    _113
  _195 = is_nonempty_list _113
  br _195, ^195, ^189

195:
  %% Argument types:
  %%    _113 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _113
  _116 = get_hd _113

  %% Argument types:
  %%    _113 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _113
  _115 = get_tl _113

  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _194 = bif:'=:=' _116, `a`
  br _194, ^193, ^189

193:
  %% Aliased:
  %%    _115
  _192 = is_nonempty_list _115
  br _192, ^192, ^189

192:
  %% Argument types:
  %%    _115 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _115
  _118 = get_hd _115

  %% Argument types:
  %%    _115 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _115
  _117 = get_tl _115

  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _191 = bif:is_map _118
  br _191, ^191, ^189

191:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _190 = bif:'=:=' _117, `[]`
  br _190, ^190, ^189

190:
  %% Result type:
  %%    'ok'
  ret `ok`

189:
  %% map_SUITE.erl:2473
  %% Aliased:
  %%    _17
  _124 = match_fail `badmatch`, _17

  %% Unique:
  %%    _124
  _219 = succeeded:body _124
  br ^1

176:
  %% map_SUITE.erl:2472
  %% Aliased:
  %%    _14
  _125 = match_fail `badmatch`, _14

  %% Unique:
  %%    _125
  _241 = succeeded:body _125
  br ^1

161:
  %% map_SUITE.erl:2469
  %% Aliased:
  %%    _91
  _126 = match_fail `badmatch`, _91

  %% Unique:
  %%    _126
  _243 = succeeded:body _126
  br ^1

153:
  %% map_SUITE.erl:2467
  %% Aliased:
  %%    _80
  _127 = match_fail `badmatch`, _80

  %% Unique:
  %%    _127
  _253 = succeeded:body _127
  br ^1

145:
  %% map_SUITE.erl:2466
  %% Aliased:
  %%    _69
  _128 = match_fail `badmatch`, _69

  %% Unique:
  %%    _128
  _263 = succeeded:body _128
  br ^1

137:
  %% map_SUITE.erl:2465
  %% Aliased:
  %%    _58
  _129 = match_fail `badmatch`, _58

  %% Unique:
  %%    _129
  _273 = succeeded:body _129
  br ^1

133:
  %% map_SUITE.erl:2457
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_update_with_4/1-',1}}
  _130 = match_fail `function_clause`, _0

  %% Unique:
  %%    _130
  _274 = succeeded:body _130
  br ^1

1:
  _131 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _131
}

%% map_SUITE.erl:2476
%% Counter = 424
%% bs_ensure_opt: true
function `map_SUITE`:`t_with_2`(_0) {
0:
  %% map_SUITE.erl:2478
  _4 = call (`lists`:`seq`/2), `1`, `100`

  %% Aliased:
  %%    _4
  _150 = succeeded:body _4
  br _150, ^150, ^1

150:
  %% map_SUITE.erl:2478
  %% Result type:
  %%    list({{'k', any()}, {'v', any()}})
  %% Aliased:
  %%    _4
  _8 = call (`'-t_with_2/1-lc$^0/1-0-'`/1), _4

  %% Unique:
  %%    _8
  _151 = succeeded:body _8
  br _151, ^151, ^1

151:
  %% map_SUITE.erl:2478
  %% Unique:
  %%    _8
  M0 = call (`maps`:`from_list`/1), _8

  %% Aliased:
  %%    M0
  _152 = succeeded:body M0
  br _152, ^152, ^1

152:
  %% map_SUITE.erl:2479
  %% Result type:
  %%    nonempty_list({{'k', 11..99}, {'v', 11..99}})
  _15 = call (`'-t_with_2/1-lc$^1/1-1-'`/1), `[11,22,33,44,55,66,77,88,99]`

  %% Unique:
  %%    _15
  _153 = succeeded:body _15
  br _153, ^153, ^1

153:
  %% map_SUITE.erl:2479
  %% Unique:
  %%    _15
  M1 = call (`maps`:`from_list`/1), _15

  %% Aliased:
  %%    M1
  _154 = succeeded:body M1
  br _154, ^154, ^1

154:
  %% map_SUITE.erl:2480
  %% Result type:
  %%    nonempty_list({'k', 11..99})
  _22 = call (`'-t_with_2/1-lc$^2/1-2-'`/1), `[11,22,33,44,55,66,77,88,99]`

  %% Unique:
  %%    _22
  _155 = succeeded:body _22
  br _155, ^155, ^1

155:
  %% map_SUITE.erl:2480
  %% Aliased:
  %%    M0
  %% Unique:
  %%    _22
  _71 = call (`maps`:`with`/2), _22, M0

  %% Aliased:
  %%    _71
  _156 = succeeded:body _71
  br _156, ^156, ^1

156:
  %% Argument types:
  %%    _71 => #{{'k', 11..99}=>{'v', any()}}
  %%    M1 => #{{'k', 11..99}=>{'v', 11..99}}
  %% Aliased:
  %%    _71, 
  %%    M1
  _159 = bif:'=:=' _71, M1
  br _159, ^414, ^158

414:
  br ^419

419:
  _163 = new_try_tag `'catch'`
  br _163, ^161, ^162

161:
  %% map_SUITE.erl:2483
  _24 = call (`id`/1), `a`

  %% Aliased:
  %%    _24
  _165 = succeeded:body _24
  br _165, ^165, ^162

165:
  %% map_SUITE.erl:2483
  %% Aliased:
  %%    _24
  _133 = call (`maps`:`with`/2), `[a,b]`, _24

  %% Aliased:
  %%    _133
  _166 = succeeded:body _133
  br _166, ^166, ^162

166:
  br ^160

162:
  %% Unique:
  %%    _163
  _169 = landingpad `'catch'`, _163

  %% Aliased:
  %%    _169
  _167 = extract _169, `0`
  br ^160

160:
  _170 = phi { _167, ^162 }, { _133, ^166 }

  %% Aliased:
  %%    _170
  %% Unique:
  %%    _163
  _25 = catch_end _163, _170

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _334 = is_tagged_tuple _25, `2`, `'EXIT'`
  br _334, ^331, ^172

331:
  %% Argument types:
  %%    _25 => {''EXIT'', any()}
  %% Aliased:
  %%    _25
  _72 = get_tuple_element _25, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _328 = bif:is_tuple _72
  br _328, ^328, ^172

328:
  %% Argument types:
  %%    _72 => {...}
  %% Aliased:
  %%    _72
  _329 = bif:tuple_size _72

  %% Argument types:
  %%    _329 => 0..16777215
  %% Unique:
  %%    _329
  _330 = bif:'=:=' _329, `2`
  br _330, ^327, ^172

327:
  %% Argument types:
  %%    _72 => {any(), any()}
  %% Aliased:
  %%    _72
  _75 = get_tuple_element _72, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _326 = bif:'=:=' _75, `{badmap,a}`
  br _326, ^326, ^172

326:
  %% Argument types:
  %%    _72 => {{'badmap', 'a'}, any()}
  %% Aliased:
  %%    _72
  _74 = get_tuple_element _72, `1`

  %% Aliased:
  %%    _74
  _325 = is_nonempty_list _74
  br _325, ^325, ^172

325:
  %% Argument types:
  %%    _74 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _74
  _77 = get_hd _74

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _322 = is_tagged_tuple _77, `4`, `maps`
  br _322, ^319, ^172

319:
  %% Argument types:
  %%    _77 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _77
  _80 = get_tuple_element _77, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _318 = bif:'=:=' _80, `with`
  br _318, ^317, ^172

317:
  %% Argument types:
  %%    _77 => {'maps', 'with', any(), any()}
  %% Aliased:
  %%    _77
  _79 = get_tuple_element _77, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _316 = bif:'=:=' _79, `[[a,b],a]`
  br _316, ^415, ^172

415:
  br ^420

420:
  _176 = new_try_tag `'catch'`
  br _176, ^174, ^175

174:
  %% map_SUITE.erl:2484
  _27 = call (`id`/1), `a`

  %% Aliased:
  %%    _27
  _178 = succeeded:body _27
  br _178, ^178, ^175

178:
  %% map_SUITE.erl:2484
  %% Aliased:
  %%    _27
  _135 = call (`maps`:`with`/2), `{a,b}`, _27

  %% Aliased:
  %%    _135
  _179 = succeeded:body _135
  br ^175

175:
  %% Unique:
  %%    _176
  _182 = landingpad `'catch'`, _176

  %% Aliased:
  %%    _182
  _180 = extract _182, `0`
  br ^173

173:
  %% Aliased:
  %%    _180
  %% Unique:
  %%    _176
  _28 = catch_end _176, _180

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _312 = is_tagged_tuple _28, `2`, `'EXIT'`
  br _312, ^309, ^185

309:
  %% Argument types:
  %%    _28 => {''EXIT'', any()}
  %% Aliased:
  %%    _28
  _82 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _306 = bif:is_tuple _82
  br _306, ^306, ^185

306:
  %% Argument types:
  %%    _82 => {...}
  %% Aliased:
  %%    _82
  _307 = bif:tuple_size _82

  %% Argument types:
  %%    _307 => 0..16777215
  %% Unique:
  %%    _307
  _308 = bif:'=:=' _307, `2`
  br _308, ^305, ^185

305:
  %% Argument types:
  %%    _82 => {any(), any()}
  %% Aliased:
  %%    _82
  _85 = get_tuple_element _82, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _304 = bif:'=:=' _85, `{badmap,a}`
  br _304, ^304, ^185

304:
  %% Argument types:
  %%    _82 => {{'badmap', 'a'}, any()}
  %% Aliased:
  %%    _82
  _84 = get_tuple_element _82, `1`

  %% Aliased:
  %%    _84
  _303 = is_nonempty_list _84
  br _303, ^303, ^185

303:
  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _87 = get_hd _84

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _300 = is_tagged_tuple _87, `4`, `maps`
  br _300, ^297, ^185

297:
  %% Argument types:
  %%    _87 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _87
  _90 = get_tuple_element _87, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _296 = bif:'=:=' _90, `with`
  br _296, ^295, ^185

295:
  %% Argument types:
  %%    _87 => {'maps', 'with', any(), any()}
  %% Aliased:
  %%    _87
  _89 = get_tuple_element _87, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _294 = bif:'=:=' _89, `[{a,b},a]`
  br _294, ^416, ^185

416:
  br ^421

421:
  _189 = new_try_tag `'catch'`
  br _189, ^187, ^188

187:
  %% map_SUITE.erl:2485
  _137 = call (`maps`:`with`/2), `[]`, `{0,<<>>,97}`

  %% Aliased:
  %%    _137
  _191 = succeeded:body _137
  br ^188

188:
  %% Unique:
  %%    _189
  _194 = landingpad `'catch'`, _189

  %% Aliased:
  %%    _194
  _192 = extract _194, `0`
  br ^186

186:
  %% Aliased:
  %%    _192
  %% Unique:
  %%    _189
  _30 = catch_end _189, _192

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _290 = is_tagged_tuple _30, `2`, `'EXIT'`
  br _290, ^287, ^197

287:
  %% Argument types:
  %%    _30 => {''EXIT'', any()}
  %% Aliased:
  %%    _30
  _92 = get_tuple_element _30, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _284 = bif:is_tuple _92
  br _284, ^284, ^197

284:
  %% Argument types:
  %%    _92 => {...}
  %% Aliased:
  %%    _92
  _285 = bif:tuple_size _92

  %% Argument types:
  %%    _285 => 0..16777215
  %% Unique:
  %%    _285
  _286 = bif:'=:=' _285, `2`
  br _286, ^283, ^197

283:
  %% Argument types:
  %%    _92 => {any(), any()}
  %% Aliased:
  %%    _92
  _95 = get_tuple_element _92, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _282 = bif:'=:=' _95, `{badmap,{0,<<>>,97}}`
  br _282, ^282, ^197

282:
  %% Argument types:
  %%    _92 => {{'badmap', {0, bitstring(256,appendable), 97}}, any()}
  %% Aliased:
  %%    _92
  _94 = get_tuple_element _92, `1`

  %% Aliased:
  %%    _94
  _281 = is_nonempty_list _94
  br _281, ^281, ^197

281:
  %% Argument types:
  %%    _94 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _94
  _97 = get_hd _94

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _278 = is_tagged_tuple _97, `4`, `maps`
  br _278, ^275, ^197

275:
  %% Argument types:
  %%    _97 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _97
  _100 = get_tuple_element _97, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _274 = bif:'=:=' _100, `with`
  br _274, ^273, ^197

273:
  %% Argument types:
  %%    _97 => {'maps', 'with', any(), any()}
  %% Aliased:
  %%    _97
  _99 = get_tuple_element _97, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _272 = bif:'=:=' _99, `[[],{0,<<>>,97}]`
  br _272, ^417, ^197

417:
  br ^422

422:
  _201 = new_try_tag `'catch'`
  br _201, ^199, ^200

199:
  %% map_SUITE.erl:2486
  _139 = call (`maps`:`with`/2), `[false,-20,-8]`, `{0,<<>>,97}`

  %% Aliased:
  %%    _139
  _203 = succeeded:body _139
  br ^200

200:
  %% Unique:
  %%    _201
  _206 = landingpad `'catch'`, _201

  %% Aliased:
  %%    _206
  _204 = extract _206, `0`
  br ^198

198:
  %% Aliased:
  %%    _204
  %% Unique:
  %%    _201
  _34 = catch_end _201, _204

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _268 = is_tagged_tuple _34, `2`, `'EXIT'`
  br _268, ^265, ^209

265:
  %% Argument types:
  %%    _34 => {''EXIT'', any()}
  %% Aliased:
  %%    _34
  _102 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _262 = bif:is_tuple _102
  br _262, ^262, ^209

262:
  %% Argument types:
  %%    _102 => {...}
  %% Aliased:
  %%    _102
  _263 = bif:tuple_size _102

  %% Argument types:
  %%    _263 => 0..16777215
  %% Unique:
  %%    _263
  _264 = bif:'=:=' _263, `2`
  br _264, ^261, ^209

261:
  %% Argument types:
  %%    _102 => {any(), any()}
  %% Aliased:
  %%    _102
  _105 = get_tuple_element _102, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _260 = bif:'=:=' _105, `{badmap,{0,<<>>,97}}`
  br _260, ^260, ^209

260:
  %% Argument types:
  %%    _102 => {{'badmap', {0, bitstring(256,appendable), 97}}, any()}
  %% Aliased:
  %%    _102
  _104 = get_tuple_element _102, `1`

  %% Aliased:
  %%    _104
  _259 = is_nonempty_list _104
  br _259, ^259, ^209

259:
  %% Argument types:
  %%    _104 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _104
  _107 = get_hd _104

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _256 = is_tagged_tuple _107, `4`, `maps`
  br _256, ^253, ^209

253:
  %% Argument types:
  %%    _107 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _107
  _110 = get_tuple_element _107, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _252 = bif:'=:=' _110, `with`
  br _252, ^251, ^209

251:
  %% Argument types:
  %%    _107 => {'maps', 'with', any(), any()}
  %% Aliased:
  %%    _107
  _109 = get_tuple_element _107, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _250 = bif:'=:=' _109, `[[false,-20,-8],{0,<<>>,97}]`
  br _250, ^418, ^209

418:
  br ^423

423:
  _213 = new_try_tag `'catch'`
  br _213, ^211, ^212

211:
  %% map_SUITE.erl:2487
  _141 = call (`maps`:`with`/2), `a`, `#{}`

  %% Aliased:
  %%    _141
  _215 = succeeded:body _141
  br ^212

212:
  %% Unique:
  %%    _213
  _218 = landingpad `'catch'`, _213

  %% Aliased:
  %%    _218
  _216 = extract _218, `0`
  br ^210

210:
  %% Aliased:
  %%    _216
  %% Unique:
  %%    _213
  _36 = catch_end _213, _216

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _246 = is_tagged_tuple _36, `2`, `'EXIT'`
  br _246, ^243, ^221

243:
  %% Argument types:
  %%    _36 => {''EXIT'', any()}
  %% Aliased:
  %%    _36
  _112 = get_tuple_element _36, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _240 = is_tagged_tuple _112, `2`, `badarg`
  br _240, ^237, ^221

237:
  %% Argument types:
  %%    _112 => {'badarg', any()}
  %% Aliased:
  %%    _112
  _114 = get_tuple_element _112, `1`

  %% Aliased:
  %%    _114
  _236 = is_nonempty_list _114
  br _236, ^236, ^221

236:
  %% Argument types:
  %%    _114 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _114
  _117 = get_hd _114

  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _233 = is_tagged_tuple _117, `4`, `maps`
  br _233, ^230, ^221

230:
  %% Argument types:
  %%    _117 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _117
  _120 = get_tuple_element _117, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _229 = bif:'=:=' _120, `with`
  br _229, ^228, ^221

228:
  %% Argument types:
  %%    _117 => {'maps', 'with', any(), any()}
  %% Aliased:
  %%    _117
  _119 = get_tuple_element _117, `2`

  %% Aliased:
  %%    _119
  _227 = is_nonempty_list _119
  br _227, ^227, ^221

227:
  %% Argument types:
  %%    _119 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _119
  _123 = get_hd _119

  %% Argument types:
  %%    _119 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _119
  _122 = get_tl _119

  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _226 = bif:'=:=' _123, `a`
  br _226, ^225, ^221

225:
  %% Aliased:
  %%    _122
  _224 = is_nonempty_list _122
  br _224, ^224, ^221

224:
  %% Argument types:
  %%    _122 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _122
  _125 = get_hd _122

  %% Argument types:
  %%    _122 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _122
  _124 = get_tl _122

  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _223 = bif:is_map _125
  br _223, ^223, ^221

223:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _124
  _222 = bif:'=:=' _124, `[]`
  br _222, ^222, ^221

222:
  %% Result type:
  %%    'ok'
  ret `ok`

221:
  %% map_SUITE.erl:2487
  %% Aliased:
  %%    _36
  _142 = match_fail `badmatch`, _36

  %% Unique:
  %%    _142
  _249 = succeeded:body _142
  br ^1

209:
  %% map_SUITE.erl:2486
  %% Aliased:
  %%    _34
  _143 = match_fail `badmatch`, _34

  %% Unique:
  %%    _143
  _271 = succeeded:body _143
  br ^1

197:
  %% map_SUITE.erl:2485
  %% Aliased:
  %%    _30
  _144 = match_fail `badmatch`, _30

  %% Unique:
  %%    _144
  _293 = succeeded:body _144
  br ^1

185:
  %% map_SUITE.erl:2484
  %% Aliased:
  %%    _28
  _145 = match_fail `badmatch`, _28

  %% Unique:
  %%    _145
  _315 = succeeded:body _145
  br ^1

172:
  %% map_SUITE.erl:2483
  %% Aliased:
  %%    _25
  _146 = match_fail `badmatch`, _25

  %% Unique:
  %%    _146
  _337 = succeeded:body _146
  br ^1

158:
  %% map_SUITE.erl:2480
  %% Aliased:
  %%    _71
  _147 = match_fail `badmatch`, _71

  %% Unique:
  %%    _147
  _338 = succeeded:body _147
  br ^1

1:
  _148 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _148
}

%% map_SUITE.erl:2490
%% Counter = 146
%% bs_ensure_opt: true
function `map_SUITE`:`t_bif_map_find`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _71 = bif:is_list _0
  br _71, ^71, ^70

71:
  %% map_SUITE.erl:2491
  _25 = call (`maps`:`find`/2), `a`, `#{a => 1}`

  %% Aliased:
  %%    _25
  _72 = succeeded:body _25
  br _72, ^72, ^1

72:
  %% Argument types:
  %%    _25 => 'error' | {'ok', 1}
  %% Aliased:
  %%    _25
  _141 = bif:'=:=' _25, `{ok,1}`
  br _141, ^141, ^74

141:
  %% map_SUITE.erl:2492
  _26 = call (`maps`:`find`/2), `b`, `#{a => 1,b => 2}`

  %% Aliased:
  %%    _26
  _75 = succeeded:body _26
  br _75, ^75, ^1

75:
  %% Argument types:
  %%    _26 => 'error' | {'ok', 1..2}
  %% Aliased:
  %%    _26
  _139 = bif:'=:=' _26, `{ok,2}`
  br _139, ^139, ^77

139:
  %% map_SUITE.erl:2493
  _27 = call (`maps`:`find`/2), `1`, `#{1 => "int"}`

  %% Aliased:
  %%    _27
  _78 = succeeded:body _27
  br _78, ^78, ^1

78:
  %% Argument types:
  %%    _27 => 'error' | {'ok', nonempty_list(105..116)}
  %% Aliased:
  %%    _27
  _137 = bif:'=:=' _27, `{ok,"int"}`
  br _137, ^137, ^80

137:
  %% map_SUITE.erl:2494
  _28 = call (`maps`:`find`/2), `1.0`, `#{1.0 => "float"}`

  %% Aliased:
  %%    _28
  _81 = succeeded:body _28
  br _81, ^81, ^1

81:
  %% Argument types:
  %%    _28 => 'error' | {'ok', nonempty_list(97..116)}
  %% Aliased:
  %%    _28
  _135 = bif:'=:=' _28, `{ok,"float"}`
  br _135, ^135, ^83

135:
  %% map_SUITE.erl:2496
  _29 = call (`maps`:`find`/2), `"hello"`, `#{a => 1,"hello" => "hi"}`

  %% Aliased:
  %%    _29
  _84 = succeeded:body _29
  br _84, ^84, ^1

84:
  %% Argument types:
  %%    _29 => 'error' | {'ok', nonempty_list(104..105) | 1}
  %% Aliased:
  %%    _29
  _133 = bif:'=:=' _29, `{ok,"hi"}`
  br _133, ^133, ^86

133:
  %% map_SUITE.erl:2497
  _30 = call (`maps`:`find`/2), `{1,1.0}`, `#{a => a,{1,1.0} => "tuple hi"}`

  %% Aliased:
  %%    _30
  _87 = succeeded:body _30
  br _87, ^87, ^1

87:
  %% Argument types:
  %%    _30 => 'error' | {'ok', 'a' | nonempty_list(32..117)}
  %% Aliased:
  %%    _30
  _131 = bif:'=:=' _30, `{ok,"tuple hi"}`
  br _131, ^131, ^89

131:
  %% map_SUITE.erl:2499
  M0 = call (`id`/1), `#{k1 => "v1",<<"k2">> => <<"v3">>}`

  %% Aliased:
  %%    M0
  _90 = succeeded:body M0
  br _90, ^90, ^1

90:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _93 = bif:is_map M0
  br _93, ^93, ^92

93:
  %% map_SUITE.erl:2500
  %% Aliased:
  %%    M0
  _49 = put_map `assoc`, M0, `<<"k2">>`, `"v4"`

  %% map_SUITE.erl:2500
  %% Aliased:
  %%    _49
  _31 = call (`maps`:`find`/2), `<<"k2">>`, _49

  %% Aliased:
  %%    _31
  _95 = succeeded:body _31
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    _31 => 'error' | {'ok', any()}
  %% Aliased:
  %%    _31
  _129 = bif:'=:=' _31, `{ok,"v4"}`
  br _129, ^129, ^97

129:
  %% map_SUITE.erl:2504
  _32 = call (`maps`:`find`/2), `a`, `#{}`

  %% Aliased:
  %%    _32
  _98 = succeeded:body _32
  br _98, ^126, ^1

126:
  %% map_SUITE.erl:2505
  _33 = call (`maps`:`find`/2), `a`, `#{b => 1,c => 2}`

  %% Aliased:
  %%    _33
  _101 = succeeded:body _33
  br _101, ^123, ^1

123:
  %% map_SUITE.erl:2506
  _34 = call (`maps`:`find`/2), `1.0`, `#{1 => "int"}`

  %% Aliased:
  %%    _34
  _104 = succeeded:body _34
  br _104, ^120, ^1

120:
  %% map_SUITE.erl:2507
  _35 = call (`maps`:`find`/2), `1`, `#{1.0 => "float"}`

  %% Aliased:
  %%    _35
  _107 = succeeded:body _35
  br _107, ^117, ^1

117:
  %% map_SUITE.erl:2508
  _36 = call (`maps`:`find`/2), `{1.0,1}`, `#{a => a,{1,1.0} => "tuple hi"}`

  %% Aliased:
  %%    _36
  _110 = succeeded:body _36
  br _110, ^114, ^1

114:
  %% Result type:
  %%    {''EXIT'', any()}
  _19 = make_fun (`'-t_bif_map_find/1-fun-0-'`/1)

  %% map_SUITE.erl:2510
  %% Result type:
  %%    nonempty_list({''EXIT'', any()})
  %% Aliased:
  %%    _19
  _54 = call (`do_badmap`/1), _19

  %% Unique:
  %%    _54
  _113 = succeeded:body _54
  br _113, ^113, ^1

113:
  %% Result type:
  %%    'ok'
  ret `ok`

97:
  %% map_SUITE.erl:2500
  %% Aliased:
  %%    _31
  _60 = match_fail `badmatch`, _31

  %% Unique:
  %%    _60
  _130 = succeeded:body _60
  br ^1

92:
  %% map_SUITE.erl:2500
  %% Aliased:
  %%    M0
  _50 = match_fail `badmap`, M0

  %% Unique:
  %%    _50
  _94 = succeeded:body _50
  br ^1

89:
  %% map_SUITE.erl:2497
  %% Aliased:
  %%    _30
  _61 = match_fail `badmatch`, _30

  %% Unique:
  %%    _61
  _132 = succeeded:body _61
  br ^1

86:
  %% map_SUITE.erl:2496
  %% Aliased:
  %%    _29
  _62 = match_fail `badmatch`, _29

  %% Unique:
  %%    _62
  _134 = succeeded:body _62
  br ^1

83:
  %% map_SUITE.erl:2494
  %% Aliased:
  %%    _28
  _63 = match_fail `badmatch`, _28

  %% Unique:
  %%    _63
  _136 = succeeded:body _63
  br ^1

80:
  %% map_SUITE.erl:2493
  %% Aliased:
  %%    _27
  _64 = match_fail `badmatch`, _27

  %% Unique:
  %%    _64
  _138 = succeeded:body _64
  br ^1

77:
  %% map_SUITE.erl:2492
  %% Aliased:
  %%    _26
  _65 = match_fail `badmatch`, _26

  %% Unique:
  %%    _65
  _140 = succeeded:body _65
  br ^1

74:
  %% map_SUITE.erl:2491
  _66 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _66
  _142 = succeeded:body _66
  br ^1

70:
  %% map_SUITE.erl:2490
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_bif_map_find/1-',1}}
  _67 = match_fail `function_clause`, _0

  %% Unique:
  %%    _67
  _143 = succeeded:body _67
  br ^1

1:
  _68 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _68
}

%% map_SUITE.erl:2516
%% Counter = 160
%% bs_ensure_opt: true
function `map_SUITE`:`t_conflicting_destinations`(_0) {
0:
  br ^157

157:
  _37 = new_try_tag `'catch'`
  br _37, ^35, ^36

35:
  %% map_SUITE.erl:2518
  %% Result type:
  %%    none()
  _24 = call (`do_conflicts`/1), `#{{tag,whatever} => true}`
  _39 = succeeded:body _24
  br ^36

36:
  %% Unique:
  %%    _37
  _42 = landingpad `'catch'`, _37

  %% Aliased:
  %%    _42
  _40 = extract _42, `0`
  br ^34

34:
  %% Aliased:
  %%    _40
  %% Unique:
  %%    _37
  _1 = catch_end _37, _40

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _105 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _105, ^102, ^45

102:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _11 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _99 = is_tagged_tuple _11, `2`, `function_clause`
  br _99, ^155, ^45

155:
  br ^158

158:
  _49 = new_try_tag `'catch'`
  br _49, ^47, ^48

47:
  %% map_SUITE.erl:2520
  %% Result type:
  %%    none()
  _26 = call (`do_conflicts`/1), `#{[something] => 42}`
  _51 = succeeded:body _26
  br ^48

48:
  %% Unique:
  %%    _49
  _54 = landingpad `'catch'`, _49

  %% Aliased:
  %%    _54
  _52 = extract _54, `0`
  br ^46

46:
  %% Aliased:
  %%    _52
  %% Unique:
  %%    _49
  _3 = catch_end _49, _52

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _92 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _92, ^89, ^57

89:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _15 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _86 = is_tagged_tuple _15, `2`, `function_clause`
  br _86, ^156, ^57

156:
  br ^159

159:
  _61 = new_try_tag `'catch'`
  br _61, ^59, ^60

59:
  %% map_SUITE.erl:2522
  %% Result type:
  %%    none()
  _28 = call (`do_conflicts`/1), `#{{tag,whatever} => true,#{} => <<0>>,[something] => 42}`
  _63 = succeeded:body _28
  br ^60

60:
  %% Unique:
  %%    _61
  _66 = landingpad `'catch'`, _61

  %% Aliased:
  %%    _66
  _64 = extract _66, `0`
  br ^58

58:
  %% Aliased:
  %%    _64
  %% Unique:
  %%    _61
  _5 = catch_end _61, _64

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _79 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _79, ^76, ^69

76:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _19 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _73 = is_tagged_tuple _19, `2`, `function_clause`
  br _73, ^70, ^69

70:
  %% Result type:
  %%    'ok'
  ret `ok`

69:
  %% map_SUITE.erl:2521
  %% Aliased:
  %%    _5
  _29 = match_fail `badmatch`, _5

  %% Unique:
  %%    _29
  _82 = succeeded:body _29
  br ^1

57:
  %% map_SUITE.erl:2519
  %% Aliased:
  %%    _3
  _30 = match_fail `badmatch`, _3

  %% Unique:
  %%    _30
  _95 = succeeded:body _30
  br ^1

45:
  %% map_SUITE.erl:2517
  %% Aliased:
  %%    _1
  _31 = match_fail `badmatch`, _1

  %% Unique:
  %%    _31
  _108 = succeeded:body _31
  br ^1

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32
}

%% map_SUITE.erl:2527
%% Counter = 30
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{nonempty_list('something') | {'tag', 'whatever'} | #{}=>'true' | 42 | bitstring(8)}
function `map_SUITE`:`do_conflicts`(_0) {
0:
  %% map_SUITE.erl:2527
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-do_conflicts/1-',1}}
  _15 = match_fail `function_clause`, _0

  %% Unique:
  %%    _15
  _29 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% map_SUITE.erl:2532
%% Counter = 149
%% bs_ensure_opt: true
function `map_SUITE`:`t_cse_assoc`(_0) {
0:
  br ^147

147:
  _41 = new_try_tag `'catch'`
  br _41, ^39, ^40

39:
  %% map_SUITE.erl:2533
  _1 = call (`id`/1), `any`

  %% Aliased:
  %%    _1
  _43 = succeeded:body _1
  br _43, ^43, ^40

43:
  %% map_SUITE.erl:2533
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _1
  _30 = call (`do_cse_assoc`/1), _1

  %% Aliased:
  %%    _30
  _44 = succeeded:body _30
  br ^40

40:
  %% Unique:
  %%    _41
  _47 = landingpad `'catch'`, _41

  %% Aliased:
  %%    _47
  _45 = extract _47, `0`
  br ^38

38:
  %% Aliased:
  %%    _45
  %% Unique:
  %%    _41
  _2 = catch_end _41, _45

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _111 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _111, ^108, ^50

108:
  %% Argument types:
  %%    _2 => {''EXIT'', any()}
  %% Aliased:
  %%    _2
  _14 = get_tuple_element _2, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _105 = bif:is_tuple _14
  br _105, ^105, ^50

105:
  %% Argument types:
  %%    _14 => {...}
  %% Aliased:
  %%    _14
  _106 = bif:tuple_size _14

  %% Argument types:
  %%    _106 => 0..16777215
  %% Unique:
  %%    _106
  _107 = bif:'=:=' _106, `2`
  br _107, ^104, ^50

104:
  %% Argument types:
  %%    _14 => {any(), any()}
  %% Aliased:
  %%    _14
  _17 = get_tuple_element _14, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _101 = is_tagged_tuple _17, `2`, `case_clause`
  br _101, ^98, ^50

98:
  %% Argument types:
  %%    _17 => {'case_clause', any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _97 = bif:is_map _18
  br _97, ^97, ^50

97:
  %% Argument types:
  %%    _18 => map()
  %% Aliased:
  %%    _18
  _20 = get_map_element _18, `key`

  %% Aliased:
  %%    _20
  _51 = succeeded:guard _20
  br _51, ^51, ^50

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _96 = bif:'=:=' _20, `any`
  br _96, ^146, ^50

146:
  br ^148

148:
  _55 = new_try_tag `'catch'`
  br _55, ^53, ^54

53:
  %% map_SUITE.erl:2535
  _5 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _5
  _57 = succeeded:body _5
  br _57, ^57, ^54

57:
  %% map_SUITE.erl:2535
  _4 = call (`id`/1), `value`

  %% Aliased:
  %%    _4
  _58 = succeeded:body _4
  br _58, ^58, ^54

58:
  %% map_SUITE.erl:2535
  %% Aliased:
  %%    _4, 
  %%    _5
  _32 = call (`do_cse_assoc`/2), _5, _4

  %% Aliased:
  %%    _32
  _59 = succeeded:body _32
  br _59, ^59, ^54

59:
  br ^52

54:
  %% Unique:
  %%    _55
  _62 = landingpad `'catch'`, _55

  %% Aliased:
  %%    _62
  _60 = extract _62, `0`
  br ^52

52:
  _63 = phi { _60, ^54 }, { _32, ^59 }

  %% Aliased:
  %%    _63
  %% Unique:
  %%    _55
  _6 = catch_end _55, _63

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _91 = is_tagged_tuple _6, `2`, `'EXIT'`
  br _91, ^88, ^65

88:
  %% Argument types:
  %%    _6 => {''EXIT'', any()}
  %% Aliased:
  %%    _6
  _21 = get_tuple_element _6, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _85 = bif:is_tuple _21
  br _85, ^85, ^65

85:
  %% Argument types:
  %%    _21 => {...}
  %% Aliased:
  %%    _21
  _86 = bif:tuple_size _21

  %% Argument types:
  %%    _86 => 0..16777215
  %% Unique:
  %%    _86
  _87 = bif:'=:=' _86, `2`
  br _87, ^84, ^65

84:
  %% Argument types:
  %%    _21 => {any(), any()}
  %% Aliased:
  %%    _21
  _24 = get_tuple_element _21, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _81 = is_tagged_tuple _24, `2`, `case_clause`
  br _81, ^78, ^65

78:
  %% Argument types:
  %%    _24 => {'case_clause', any()}
  %% Aliased:
  %%    _24
  _25 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _77 = bif:is_map _25
  br _77, ^77, ^65

77:
  %% Argument types:
  %%    _25 => map()
  %% Aliased:
  %%    _25
  _27 = get_map_element _25, `key`

  %% Aliased:
  %%    _27
  _66 = succeeded:guard _27
  br _66, ^66, ^65

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _76 = bif:'=:=' _27, `value`
  br _76, ^75, ^65

75:
  %% map_SUITE.erl:2536
  _9 = call (`id`/1), `#{assoc => 42}`

  %% Aliased:
  %%    _9
  _67 = succeeded:body _9
  br _67, ^67, ^1

67:
  %% map_SUITE.erl:2536
  _8 = call (`id`/1), `any`

  %% Aliased:
  %%    _8
  _68 = succeeded:body _8
  br _68, ^68, ^1

68:
  %% map_SUITE.erl:2536
  %% Aliased:
  %%    _8, 
  %%    _9
  _28 = call (`do_cse_assoc`/2), _9, _8

  %% Aliased:
  %%    _28
  _69 = succeeded:body _28
  br _69, ^69, ^1

69:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _73 = bif:'=:=' _28, `42`
  br _73, ^72, ^71

72:
  %% Result type:
  %%    'ok'
  ret `ok`

71:
  %% map_SUITE.erl:2536
  %% Aliased:
  %%    _28
  _33 = match_fail `badmatch`, _28

  %% Unique:
  %%    _33
  _74 = succeeded:body _33
  br ^1

65:
  %% map_SUITE.erl:2535
  %% Aliased:
  %%    _6
  _34 = match_fail `badmatch`, _6

  %% Unique:
  %%    _34
  _94 = succeeded:body _34
  br ^1

50:
  %% map_SUITE.erl:2533
  %% Aliased:
  %%    _2
  _35 = match_fail `badmatch`, _2

  %% Unique:
  %%    _35
  _114 = succeeded:body _35
  br ^1

1:
  _36 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _36
}

%% map_SUITE.erl:2540
%% Counter = 12
%% bs_ensure_opt: true
function `map_SUITE`:`do_cse_assoc`(_0) {
0:
  %% map_SUITE.erl:2541
  %% Aliased:
  %%    _0
  _2 = put_map `assoc`, `#{}`, `key`, _0

  %% map_SUITE.erl:2541
  %% Aliased:
  %%    _2
  _4 = match_fail `case_clause`, _2

  %% Unique:
  %%    _4
  _11 = succeeded:body _4
  br ^1

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% map_SUITE.erl:2549
%% Counter = 19
%% bs_ensure_opt: true
function `map_SUITE`:`do_cse_assoc`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _12 = bif:is_map _0
  br _12, ^12, ^11

12:
  %% map_SUITE.erl:2550
  %% Aliased:
  %%    _0, 
  %%    _1
  _5 = put_map `assoc`, _0, `key`, _1

  %% Argument types:
  %%    _5 => map()
  %% Aliased:
  %%    _5
  _4 = get_map_element _5, `assoc`

  %% Aliased:
  %%    _4
  _16 = succeeded:guard _4
  br _16, ^16, ^15

16:
  %% Aliased:
  %%    _4
  ret _4

15:
  %% map_SUITE.erl:2550
  %% Aliased:
  %%    _5
  _7 = match_fail `case_clause`, _5

  %% Unique:
  %%    _7
  _18 = succeeded:body _7
  br ^1

11:
  %% map_SUITE.erl:2550
  %% Aliased:
  %%    _0
  _6 = match_fail `badmap`, _0

  %% Unique:
  %%    _6
  _13 = succeeded:body _6
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% map_SUITE.erl:2555
%% Counter = 20
%% bs_ensure_opt: true
function `map_SUITE`:`shared_key_tuples`(_0) {
0:
  %% map_SUITE.erl:2556
  %% Result type:
  %%    #{'exp' | 'int' | 'type'=>'decimal' | 0..1}
  A = call (`decimal`/1), `0`

  %% Aliased:
  %%    A
  _10 = succeeded:body A
  br _10, ^10, ^1

10:
  %% map_SUITE.erl:2557
  %% Result type:
  %%    #{'exp' | 'int' | 'type'=>'decimal' | 0..1}
  B = call (`decimal`/1), `1`

  %% Aliased:
  %%    B
  _11 = succeeded:body B
  br _11, ^11, ^1

11:
  %% map_SUITE.erl:2566
  %% Aliased:
  %%    A
  _4 = call (`erts_internal`:`map_to_tuple_keys`/1), A

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% map_SUITE.erl:2567
  %% Aliased:
  %%    B
  _3 = call (`erts_internal`:`map_to_tuple_keys`/1), B

  %% Aliased:
  %%    _3
  _13 = succeeded:body _3
  br _13, ^13, ^1

13:
  %% map_SUITE.erl:2566
  %% Aliased:
  %%    _3, 
  %%    _4
  _6 = call (`erts_debug`:`same`/2), _4, _3

  %% Aliased:
  %%    _6
  _14 = succeeded:body _6
  br _14, ^14, ^1

14:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _18 = bif:'=:=' _6, `true`
  br _18, ^15, ^16

15:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% map_SUITE.erl:2566
  %% Aliased:
  %%    _6
  _7 = match_fail `badmatch`, _6

  %% Unique:
  %%    _7
  _19 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% map_SUITE.erl:2571
%% Counter = 5
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0..1
function `map_SUITE`:`decimal`(_0) {
0:
  %% map_SUITE.erl:2572
  %% Unique:
  %%    _0
  _2 = put_map `assoc`, `#{}`, `exp`, `0`, `int`, _0, `type`, `decimal`
  %% Result type:
  %%    #{'exp' | 'int' | 'type'=>'decimal' | 0..1}
  %% Aliased:
  %%    _2
  ret _2
}

%% map_SUITE.erl:2575
%% Counter = 312
%% bs_ensure_opt: true
function `map_SUITE`:`map_aliases`(_0) {
0:
  %% map_SUITE.erl:2580
  _6 = call (`id`/1), `#{k => {a,key},key => value}`

  %% Aliased:
  %%    _6
  _127 = succeeded:body _6
  br _127, ^127, ^1

127:
  %% map_SUITE.erl:2580
  %% Argument types:
  %%    (`'-map_aliases/1-fun-0-'`/1) => fun((_))
  %% Aliased:
  %%    _6
  _63 = call (`'-map_aliases/1-fun-0-'`/1), _6

  %% Aliased:
  %%    _63
  _128 = succeeded:body _63
  br _128, ^128, ^1

128:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _254 = bif:'=:=' _63, `value`
  br _254, ^257, ^130

257:
  %% map_SUITE.erl:2583
  _11 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _11
  _131 = succeeded:body _11
  br _131, ^131, ^1

131:
  %% map_SUITE.erl:2583
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-map_aliases/1-fun-1-'`/1) => fun((_) -> 'ok')
  %% Aliased:
  %%    _11
  _64 = call (`'-map_aliases/1-fun-1-'`/1), _11

  %% Unique:
  %%    _64
  _132 = succeeded:body _64
  br _132, ^250, ^1

250:
  %% map_SUITE.erl:2584
  _13 = call (`id`/1), `#{key => whatever}`

  %% Aliased:
  %%    _13
  _135 = succeeded:body _13
  br _135, ^135, ^1

135:
  %% map_SUITE.erl:2584
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-map_aliases/1-fun-1-'`/1) => fun((_) -> 'ok')
  %% Aliased:
  %%    _13
  _65 = call (`'-map_aliases/1-fun-1-'`/1), _13

  %% Unique:
  %%    _65
  _136 = succeeded:body _65
  br _136, ^258, ^1

258:
  %% map_SUITE.erl:2587
  _18 = call (`id`/1), `#{a => {a,b,c}}`

  %% Aliased:
  %%    _18
  _139 = succeeded:body _18
  br _139, ^139, ^1

139:
  %% map_SUITE.erl:2587
  %% Argument types:
  %%    (`'-map_aliases/1-fun-2-'`/1) => fun((_))
  %% Aliased:
  %%    _18
  _68 = call (`'-map_aliases/1-fun-2-'`/1), _18

  %% Aliased:
  %%    _68
  _140 = succeeded:body _68
  br _140, ^140, ^1

140:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _245 = bif:'=:=' _68, `{a,b,c}`
  br _245, ^259, ^142

259:
  %% map_SUITE.erl:2593
  %% Argument types:
  %%    (`'-map_aliases/1-fun-3-'`/1) => fun((_))
  _74 = call (`'-map_aliases/1-fun-3-'`/1), `[#{foo => bar}|foo]`

  %% Aliased:
  %%    _74
  _143 = succeeded:body _74
  br _143, ^143, ^1

143:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _243 = bif:'=:=' _74, `bar`
  br _243, ^260, ^145

260:
  %% map_SUITE.erl:2599
  %% Argument types:
  %%    (`'-map_aliases/1-fun-4-'`/1) => fun((_))
  _82 = call (`'-map_aliases/1-fun-4-'`/1), `{#{frotz => light},frotz}`

  %% Aliased:
  %%    _82
  _146 = succeeded:body _82
  br _146, ^146, ^1

146:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _240 = bif:'=:=' _82, `light`
  br _240, ^306, ^148

306:
  br ^309

309:
  _152 = new_try_tag `'catch'`
  br _152, ^150, ^151

150:
  %% map_SUITE.erl:2604
  _40 = call (`id`/1), `0`

  %% Aliased:
  %%    _40
  _154 = succeeded:body _40
  br _154, ^154, ^151

154:
  %% map_SUITE.erl:2604
  %% Result type:
  %%    map()
  %% Argument types:
  %%    (`'-map_aliases/1-fun-5-'`/1) => fun((_) -> map())
  %% Aliased:
  %%    _40
  _111 = call (`'-map_aliases/1-fun-5-'`/1), _40

  %% Aliased:
  %%    _111
  _155 = succeeded:body _111
  br _155, ^155, ^151

155:
  br ^149

151:
  %% Unique:
  %%    _152
  _158 = landingpad `'catch'`, _152

  %% Aliased:
  %%    _158
  _156 = extract _158, `0`
  br ^149

149:
  _159 = phi { _156, ^151 }, { _111, ^155 }

  %% Aliased:
  %%    _159
  %% Unique:
  %%    _152
  _41 = catch_end _152, _159

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _235 = is_tagged_tuple _41, `2`, `'EXIT'`
  br _235, ^232, ^161

232:
  %% Argument types:
  %%    _41 => {''EXIT'', any()}
  %% Aliased:
  %%    _41
  _84 = get_tuple_element _41, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _229 = bif:is_tuple _84
  br _229, ^229, ^161

229:
  %% Argument types:
  %%    _84 => {...}
  %% Aliased:
  %%    _84
  _230 = bif:tuple_size _84

  %% Argument types:
  %%    _230 => 0..16777215
  %% Unique:
  %%    _230
  _231 = bif:'=:=' _230, `2`
  br _231, ^228, ^161

228:
  %% Argument types:
  %%    _84 => {any(), any()}
  %% Aliased:
  %%    _84
  _87 = get_tuple_element _84, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _227 = bif:'=:=' _87, `{badmatch,0}`
  br _227, ^307, ^161

307:
  br ^310

310:
  _165 = new_try_tag `'catch'`
  br _165, ^163, ^164

163:
  %% map_SUITE.erl:2605
  _43 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _43
  _167 = succeeded:body _43
  br _167, ^167, ^164

167:
  %% map_SUITE.erl:2605
  %% Result type:
  %%    map()
  %% Argument types:
  %%    (`'-map_aliases/1-fun-5-'`/1) => fun((_) -> map())
  %% Aliased:
  %%    _43
  _113 = call (`'-map_aliases/1-fun-5-'`/1), _43

  %% Aliased:
  %%    _113
  _168 = succeeded:body _113
  br _168, ^168, ^164

168:
  br ^162

164:
  %% Unique:
  %%    _165
  _171 = landingpad `'catch'`, _165

  %% Aliased:
  %%    _171
  _169 = extract _171, `0`
  br ^162

162:
  _172 = phi { _169, ^164 }, { _113, ^168 }

  %% Aliased:
  %%    _172
  %% Unique:
  %%    _165
  _44 = catch_end _165, _172

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _223 = is_tagged_tuple _44, `2`, `'EXIT'`
  br _223, ^220, ^174

220:
  %% Argument types:
  %%    _44 => {''EXIT'', any()}
  %% Aliased:
  %%    _44
  _88 = get_tuple_element _44, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _217 = bif:is_tuple _88
  br _217, ^217, ^174

217:
  %% Argument types:
  %%    _88 => {...}
  %% Aliased:
  %%    _88
  _218 = bif:tuple_size _88

  %% Argument types:
  %%    _218 => 0..16777215
  %% Unique:
  %%    _218
  _219 = bif:'=:=' _218, `2`
  br _219, ^216, ^174

216:
  %% Argument types:
  %%    _88 => {any(), any()}
  %% Aliased:
  %%    _88
  _91 = get_tuple_element _88, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _213 = is_tagged_tuple _91, `2`, `badmatch`
  br _213, ^210, ^174

210:
  %% Argument types:
  %%    _91 => {'badmatch', any()}
  %% Aliased:
  %%    _91
  _92 = get_tuple_element _91, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _209 = bif:is_map _92
  br _209, ^308, ^174

308:
  br ^311

311:
  _178 = new_try_tag `'catch'`
  br _178, ^176, ^177

176:
  %% map_SUITE.erl:2606
  _46 = call (`id`/1), `#{key => value}`

  %% Aliased:
  %%    _46
  _180 = succeeded:body _46
  br _180, ^180, ^177

180:
  %% map_SUITE.erl:2606
  %% Result type:
  %%    map()
  %% Argument types:
  %%    (`'-map_aliases/1-fun-5-'`/1) => fun((_) -> map())
  %% Aliased:
  %%    _46
  _115 = call (`'-map_aliases/1-fun-5-'`/1), _46

  %% Aliased:
  %%    _115
  _181 = succeeded:body _115
  br _181, ^181, ^177

181:
  br ^175

177:
  %% Unique:
  %%    _178
  _184 = landingpad `'catch'`, _178

  %% Aliased:
  %%    _184
  _182 = extract _184, `0`
  br ^175

175:
  _185 = phi { _182, ^177 }, { _115, ^181 }

  %% Aliased:
  %%    _185
  %% Unique:
  %%    _178
  _47 = catch_end _178, _185

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _205 = is_tagged_tuple _47, `2`, `'EXIT'`
  br _205, ^202, ^187

202:
  %% Argument types:
  %%    _47 => {''EXIT'', any()}
  %% Aliased:
  %%    _47
  _94 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _199 = bif:is_tuple _94
  br _199, ^199, ^187

199:
  %% Argument types:
  %%    _94 => {...}
  %% Aliased:
  %%    _94
  _200 = bif:tuple_size _94

  %% Argument types:
  %%    _200 => 0..16777215
  %% Unique:
  %%    _200
  _201 = bif:'=:=' _200, `2`
  br _201, ^198, ^187

198:
  %% Argument types:
  %%    _94 => {any(), any()}
  %% Aliased:
  %%    _94
  _97 = get_tuple_element _94, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _195 = is_tagged_tuple _97, `2`, `badmatch`
  br _195, ^192, ^187

192:
  %% Argument types:
  %%    _97 => {'badmatch', any()}
  %% Aliased:
  %%    _97
  _98 = get_tuple_element _97, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _191 = bif:is_map _98
  br _191, ^191, ^187

191:
  %% Argument types:
  %%    _98 => map()
  %% Aliased:
  %%    _98
  _100 = get_map_element _98, `key`

  %% Aliased:
  %%    _100
  _188 = succeeded:guard _100
  br _188, ^188, ^187

188:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _190 = bif:'=:=' _100, `value`
  br _190, ^189, ^187

189:
  %% Result type:
  %%    'ok'
  ret `ok`

187:
  %% map_SUITE.erl:2606
  %% Aliased:
  %%    _47
  _116 = match_fail `badmatch`, _47

  %% Unique:
  %%    _116
  _208 = succeeded:body _116
  br ^1

174:
  %% map_SUITE.erl:2605
  %% Aliased:
  %%    _44
  _117 = match_fail `badmatch`, _44

  %% Unique:
  %%    _117
  _226 = succeeded:body _117
  br ^1

161:
  %% map_SUITE.erl:2604
  %% Aliased:
  %%    _41
  _118 = match_fail `badmatch`, _41

  %% Unique:
  %%    _118
  _238 = succeeded:body _118
  br ^1

148:
  %% map_SUITE.erl:2599
  %% Aliased:
  %%    _82
  _119 = match_fail `badmatch`, _82

  %% Unique:
  %%    _119
  _241 = succeeded:body _119
  br ^1

145:
  %% map_SUITE.erl:2593
  %% Aliased:
  %%    _74
  _120 = match_fail `badmatch`, _74

  %% Unique:
  %%    _120
  _244 = succeeded:body _120
  br ^1

142:
  %% map_SUITE.erl:2587
  %% Aliased:
  %%    _68
  _121 = match_fail `badmatch`, _68

  %% Unique:
  %%    _121
  _246 = succeeded:body _121
  br ^1

130:
  %% map_SUITE.erl:2580
  %% Aliased:
  %%    _63
  _124 = match_fail `badmatch`, _63

  %% Unique:
  %%    _124
  _255 = succeeded:body _124
  br ^1

1:
  _125 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _125
}

%% map_SUITE.erl:2610
%% Counter = 55
%% bs_ensure_opt: true
function `map_SUITE`:`coverage`(_0) {
0:
  br ^54

54:
  _17 = new_try_tag `'catch'`
  br _17, ^15, ^16

15:
  %% map_SUITE.erl:2611
  %% Result type:
  %%    none()
  _10 = call (`coverage_1`/0)

  %% Aliased:
  %%    _10
  _19 = succeeded:body _10
  br ^16

16:
  %% Unique:
  %%    _17
  _22 = landingpad `'catch'`, _17

  %% Aliased:
  %%    _22
  _20 = extract _22, `0`
  br ^14

14:
  %% Aliased:
  %%    _20
  %% Unique:
  %%    _17
  _1 = catch_end _17, _20

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _34 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _34, ^31, ^25

31:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _5 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _28 = bif:is_tuple _5
  br _28, ^28, ^25

28:
  %% Argument types:
  %%    _5 => {...}
  %% Aliased:
  %%    _5
  _29 = bif:tuple_size _5

  %% Argument types:
  %%    _29 => 0..16777215
  %% Unique:
  %%    _29
  _30 = bif:'=:=' _29, `2`
  br _30, ^27, ^25

27:
  %% Argument types:
  %%    _5 => {any(), any()}
  %% Aliased:
  %%    _5
  _8 = get_tuple_element _5, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _26 = bif:'=:=' _8, `{badmatch,ok}`
  br _26, ^26, ^25

26:
  %% Result type:
  %%    'ok'
  ret `ok`

25:
  %% map_SUITE.erl:2611
  %% Aliased:
  %%    _1
  _11 = match_fail `badmatch`, _1

  %% Unique:
  %%    _11
  _37 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% map_SUITE.erl:2615
%% Counter = 120
%% bs_ensure_opt: true
function `map_SUITE`:`coverage_1`() {
0:
  br ^118

118:
  _53 = new_try_tag `'try'`
  br _53, ^117, ^50

117:
  br ^119

119:
  _58 = new_try_tag `'try'`
  br _58, ^61, ^55

61:
  %% map_SUITE.erl:2618
  _42 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _42
  _64 = succeeded:body _42
  br ^55

55:
  %% Unique:
  %%    _58
  _75 = landingpad `'try'`, _58

  %% Aliased:
  %%    _75
  _9 = extract _75, `1`

  %% Aliased:
  %%    _75
  _8 = extract _75, `2`

  %% Unique:
  %%    _58
  _76 = kill_try_tag _58

  %% Aliased:
  %%    _8, 
  %%    _9
  _45 = resume _8, _9

  %% Unique:
  %%    _45
  _74 = succeeded:body _45
  br ^50

50:
  %% Unique:
  %%    _53
  _79 = landingpad `'try'`, _53

  %% Aliased:
  %%    _79
  _14 = extract _79, `1`

  %% Aliased:
  %%    _79
  _13 = extract _79, `2`

  %% Unique:
  %%    _53
  _80 = kill_try_tag _53

  %% Aliased:
  %%    _13, 
  %%    _14
  _46 = resume _13, _14

  %% Unique:
  %%    _46
  _78 = succeeded:body _46
  br ^1

1:
  _47 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _47
}

%% map_SUITE.erl:2627
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..100000
function `map_SUITE`:`rand_terms`(_0) {
0:
  %% Argument types:
  %%    _0 => '-inf'..100000
  %% Unique:
  %%    _0
  _9 = bif:'=:=' _0, `0`
  br _9, ^8, ^7

8:
  %% Result type:
  %%    nil()
  ret `[]`

7:
  %% map_SUITE.erl:2628
  _3 = call (`rand_term`/0)

  %% Aliased:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% map_SUITE.erl:2628
  %% Argument types:
  %%    _0 => '-inf'..100000
  %% Unique:
  %%    _0
  _1 = bif:'-' _0, `1`

  %% Unique:
  %%    _1
  _11 = succeeded:body _1
  br _11, ^11, ^1

11:
  %% map_SUITE.erl:2628
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _1
  _2 = call (`rand_terms`/1), _1

  %% Unique:
  %%    _2
  _12 = succeeded:body _2
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    _2 => list(any())
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _2
  _4 = put_list _3, _2
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _4
  ret _4

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% map_SUITE.erl:2630
%% Counter = 28
%% bs_ensure_opt: true
function `map_SUITE`:`rand_term`() {
0:
  %% map_SUITE.erl:2631
  _2 = call (`rand`:`uniform`/1), `6`

  %% Aliased:
  %%    _2
  _12 = succeeded:body _2
  br _12, ^12, ^1

12:
  switch _2, ^14, [
    { `1`, ^21 },
    { `2`, ^22 },
    { `3`, ^23 },
    { `4`, ^24 },
    { `5`, ^25 },
    { `6`, ^26 }
  ]

26:
  %% map_SUITE.erl:2637
  %% Result type:
  %%    #{'hi' | 'other' | 'wat' | 'yet_anoter'=>any()}
  _3 = call (`rand_map`/0)

  %% Aliased:
  %%    _3
  _20 = succeeded:body _3
  br _20, ^20, ^1

20:
  %% Result type:
  %%    #{'hi' | 'other' | 'wat' | 'yet_anoter'=>any()}
  %% Aliased:
  %%    _3
  ret _3

25:
  %% map_SUITE.erl:2636
  %% Result type:
  %%    nonempty_improper_list(any(), 'list' | nil())
  _4 = call (`rand_list`/0)

  %% Unique:
  %%    _4
  _19 = succeeded:body _4
  br _19, ^19, ^1

19:
  %% Result type:
  %%    nonempty_improper_list(any(), 'list' | nil())
  %% Unique:
  %%    _4
  ret _4

24:
  %% map_SUITE.erl:2635
  %% Result type:
  %%    {'ok' | 1 | bitstring(8), any(), ...}
  _5 = call (`rand_tuple`/0)

  %% Unique:
  %%    _5
  _18 = succeeded:body _5
  br _18, ^18, ^1

18:
  %% Result type:
  %%    {'ok' | 1 | bitstring(8), any(), ...}
  %% Unique:
  %%    _5
  ret _5

23:
  %% map_SUITE.erl:2634
  %% Result type:
  %%    'hi' | 'some_atom' | 'some_other_atom'
  _6 = call (`rand_atom`/0)

  %% Unique:
  %%    _6
  _17 = succeeded:body _6
  br _17, ^17, ^1

17:
  %% Result type:
  %%    'hi' | 'some_atom' | 'some_other_atom'
  %% Unique:
  %%    _6
  ret _6

22:
  %% map_SUITE.erl:2633
  _7 = call (`rand_number`/0)

  %% Aliased:
  %%    _7
  _16 = succeeded:body _7
  br _16, ^16, ^1

16:
  %% Aliased:
  %%    _7
  ret _7

21:
  %% map_SUITE.erl:2632
  %% Result type:
  %%    bitstring(16)
  _8 = call (`rand_binary`/0)

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Result type:
  %%    bitstring(16)
  %% Unique:
  %%    _8
  ret _8

14:
  %% map_SUITE.erl:2631
  %% Aliased:
  %%    _2
  _9 = match_fail `case_clause`, _2

  %% Unique:
  %%    _9
  _27 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% map_SUITE.erl:2640
%% Counter = 13
%% bs_ensure_opt: true
function `map_SUITE`:`rand_binary`() {
0:
  %% map_SUITE.erl:2641
  _2 = call (`rand`:`uniform`/1), `3`

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  switch _2, ^8, [
    { `1`, ^9 },
    { `2`, ^10 },
    { `3`, ^11 }
  ]

11:
  %% Result type:
  %%    bitstring(16)
  ret `<<"message text larger than 64 bytes. yep, message text larger than 64 bytes.">>`

10:
  %% Result type:
  %%    bitstring(16)
  ret `<<"hi">>`

9:
  %% Result type:
  %%    bitstring(256,appendable)
  ret `<<>>`

8:
  %% map_SUITE.erl:2641
  %% Aliased:
  %%    _2
  _3 = match_fail `case_clause`, _2

  %% Unique:
  %%    _3
  _12 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% map_SUITE.erl:2647
%% Counter = 24
%% bs_ensure_opt: true
function `map_SUITE`:`rand_number`() {
0:
  %% map_SUITE.erl:2648
  _4 = call (`rand`:`uniform`/1), `3`

  %% Aliased:
  %%    _4
  _11 = succeeded:body _4
  br _11, ^11, ^1

11:
  switch _4, ^13, [
    { `1`, ^20 },
    { `2`, ^21 },
    { `3`, ^22 }
  ]

22:
  %% map_SUITE.erl:2651
  _1 = call (`rand`:`uniform`/1), `3`

  %% Aliased:
  %%    _1
  _17 = succeeded:body _1
  br _17, ^17, ^1

17:
  %% map_SUITE.erl:2651
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _2 = bif:'+' _1, `63`

  %% Unique:
  %%    _2
  _18 = succeeded:body _2
  br _18, ^18, ^1

18:
  %% map_SUITE.erl:2651
  %% Argument types:
  %%    _2 => number()
  %% Unique:
  %%    _2
  _5 = bif:'bsl' `1`, _2

  %% Unique:
  %%    _5
  _19 = succeeded:body _5
  br _19, ^19, ^1

19:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _5
  ret _5

21:
  %% map_SUITE.erl:2650
  _0 = call (`rand`:`uniform`/1), `5`

  %% Aliased:
  %%    _0
  _15 = succeeded:body _0
  br _15, ^15, ^1

15:
  %% map_SUITE.erl:2650
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _6 = bif:float _0

  %% Unique:
  %%    _6
  _16 = succeeded:body _6
  br _16, ^16, ^1

16:
  %% Result type:
  %%    float()
  %% Unique:
  %%    _6
  ret _6

20:
  %% map_SUITE.erl:2649
  _7 = call (`rand`:`uniform`/1), `5`

  %% Aliased:
  %%    _7
  _14 = succeeded:body _7
  br _14, ^14, ^1

14:
  %% Aliased:
  %%    _7
  ret _7

13:
  %% map_SUITE.erl:2648
  %% Aliased:
  %%    _4
  _8 = match_fail `case_clause`, _4

  %% Unique:
  %%    _8
  _23 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% map_SUITE.erl:2654
%% Counter = 13
%% bs_ensure_opt: true
function `map_SUITE`:`rand_atom`() {
0:
  %% map_SUITE.erl:2655
  _2 = call (`rand`:`uniform`/1), `3`

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  switch _2, ^8, [
    { `1`, ^9 },
    { `2`, ^10 },
    { `3`, ^11 }
  ]

11:
  %% Result type:
  %%    'some_other_atom'
  ret `some_other_atom`

10:
  %% Result type:
  %%    'some_atom'
  ret `some_atom`

9:
  %% Result type:
  %%    'hi'
  ret `hi`

8:
  %% map_SUITE.erl:2655
  %% Aliased:
  %%    _2
  _3 = match_fail `case_clause`, _2

  %% Unique:
  %%    _3
  _12 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% map_SUITE.erl:2662
%% Counter = 15
%% bs_ensure_opt: true
function `map_SUITE`:`rand_tuple`() {
0:
  %% map_SUITE.erl:2663
  _2 = call (`rand`:`uniform`/1), `3`

  %% Aliased:
  %%    _2
  _7 = succeeded:body _2
  br _7, ^7, ^1

7:
  switch _2, ^9, [
    { `1`, ^13 },
    { `2`, ^12 },
    { `3`, ^11 }
  ]

11:
  %% Result type:
  %%    {bitstring(8), 1337}
  ret `{<<"yep">>,1337}`

12:
  %% Result type:
  %%    {1, 2, 3}
  ret `{1,2,3}`

13:
  %% map_SUITE.erl:2664
  _0 = call (`rand_term`/0)

  %% Aliased:
  %%    _0
  _10 = succeeded:body _0
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _3 = put_tuple `ok`, _0
  %% Result type:
  %%    {'ok', any()}
  %% Unique:
  %%    _3
  ret _3

9:
  %% map_SUITE.erl:2663
  %% Aliased:
  %%    _2
  _4 = match_fail `case_clause`, _2

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% map_SUITE.erl:2669
%% Counter = 16
%% bs_ensure_opt: true
function `map_SUITE`:`rand_list`() {
0:
  %% map_SUITE.erl:2670
  _2 = call (`rand`:`uniform`/1), `3`

  %% Aliased:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  switch _2, ^10, [
    { `1`, ^12 },
    { `2`, ^14 },
    { `3`, ^13 }
  ]

13:
  %% Result type:
  %%    nonempty_improper_list('improper', 'list')
  ret `[improper|list]`

14:
  %% map_SUITE.erl:2672
  _0 = call (`rand_term`/0)

  %% Aliased:
  %%    _0
  _11 = succeeded:body _0
  br _11, ^11, ^1

11:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _3 = put_list _0, `[]`

  %% Argument types:
  %%    _3 => nonempty_list(any())
  %% Unique:
  %%    _3
  _4 = put_list `1`, _3
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _4
  ret _4

12:
  %% Result type:
  %%    nonempty_list(104..105)
  ret `"hi"`

10:
  %% map_SUITE.erl:2670
  %% Aliased:
  %%    _2
  _5 = match_fail `case_clause`, _2

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% map_SUITE.erl:2676
%% Counter = 15
%% bs_ensure_opt: true
function `map_SUITE`:`rand_map`() {
0:
  %% map_SUITE.erl:2677
  _2 = call (`rand`:`uniform`/1), `3`

  %% Aliased:
  %%    _2
  _7 = succeeded:body _2
  br _7, ^7, ^1

7:
  switch _2, ^9, [
    { `1`, ^11 },
    { `2`, ^13 },
    { `3`, ^12 }
  ]

12:
  %% Result type:
  %%    #{'hi' | 'other' | 'yet_anoter'=>42..1337}
  ret `#{hi => 42,other => 42,yet_anoter => 1337}`

13:
  %% map_SUITE.erl:2679
  _0 = call (`rand_term`/0)

  %% Aliased:
  %%    _0
  _10 = succeeded:body _0
  br _10, ^10, ^1

10:
  %% map_SUITE.erl:2679
  %% Aliased:
  %%    _0
  _3 = put_map `assoc`, `#{}`, `other`, `3`, `wat`, _0
  %% Result type:
  %%    #{'other' | 'wat'=>any()}
  %% Aliased:
  %%    _3
  ret _3

11:
  %% Result type:
  %%    #{'hi'=>3}
  ret `#{hi => 3}`

9:
  %% map_SUITE.erl:2677
  %% Aliased:
  %%    _2
  _4 = match_fail `case_clause`, _2

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% map_SUITE.erl:2683
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_) -> {''EXIT'', any()})
function `map_SUITE`:`do_badmap`(_0) {
0:
  %% map_SUITE.erl:2684
  _8 = call (`erlang`:`make_ref`/0)

  %% map_SUITE.erl:2684
  %% Argument types:
  %%    
  _7 = bif:self

  %% map_SUITE.erl:2684
  _5 = call (`id`/1), `-1`

  %% Aliased:
  %%    _5
  _32 = succeeded:body _5
  br _32, ^32, ^1

32:
  %% map_SUITE.erl:2684
  _38 = float:put `0.0`

  %% map_SUITE.erl:2684
  %% Aliased:
  %%    _5
  _39 = float:convert _5

  %% Unique:
  %%    _39
  _44 = succeeded:body _39
  br _44, ^44, ^1

44:
  %% map_SUITE.erl:2684
  %% Unique:
  %%    _38, 
  %%    _39
  _40 = float:'/' _38, _39

  %% Unique:
  %%    _40
  _33 = succeeded:body _40
  br _33, ^41, ^1

41:
  %% Unique:
  %%    _40
  _6 = float:get _40

  %% map_SUITE.erl:2685
  %% Argument types:
  %%    
  %% Anno: #{unit => 256}
  _3 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `1024`

  %% Aliased:
  %%    _3
  _34 = succeeded:body _3
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _3 => bitstring(256)
  %% Aliased:
  %%    _3
  _17 = put_list _3, `[<<1:1>>,<<>>,<<1,2,3>>,[],{a,b,c},[a,b],atom,10.0,42,36893488147419103235]`

  %% Argument types:
  %%    _6 => float()
  %%    _17 => nonempty_list('atom' | list('a' | 'b') | number(10, 36893488147419103235) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _6, 
  %%    _17
  _18 = put_list _6, _17

  %% Argument types:
  %%    _7 => pid()
  %%    _18 => nonempty_list('atom' | list('a' | 'b') | number() | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _7, 
  %%    _18
  _19 = put_list _7, _18

  %% Argument types:
  %%    _8 => reference()
  %%    _19 => nonempty_list('atom' | list('a' | 'b') | number() | {'a', 'b', 'c'} | other())
  %% Unique:
  %%    _8, 
  %%    _19
  _20 = put_list _8, _19

  %% Argument types:
  %%    _20 => nonempty_list('atom' | list('a' | 'b') | number() | {'a', 'b', 'c'} | other())
  %% Unique:
  %%    _20
  _21 = put_list `fun erlang:abs/1`, _20

  %% Argument types:
  %%    _0 => fun((_) -> {''EXIT'', any()})
  %%    _21 => nonempty_list('atom' | list('a' | 'b') | number() | {'a', 'b', 'c'} | other())
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _21
  Terms = put_list _0, _21

  %% map_SUITE.erl:2687
  %% Result type:
  %%    nonempty_list({''EXIT'', any()})
  %% Aliased:
  %%    _0
  %% Unique:
  %%    Terms
  _28 = call (`'-do_badmap/1-lc$^0/1-0-'`/2), Terms, _0

  %% Unique:
  %%    _28
  _35 = succeeded:body _28
  br _35, ^35, ^1

35:
  %% Result type:
  %%    nonempty_list({''EXIT'', any()})
  %% Unique:
  %%    _28
  ret _28

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% map_SUITE.erl:2690
%% Counter = 4
%% bs_ensure_opt: true
function `map_SUITE`:`id`(_0) {
0:
  %% Aliased:
  %%    _0
  ret _0
}

%% Counter = 6
%% bs_ensure_opt: true
function `map_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `map_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `map_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `map_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% map_SUITE.erl:2687
%% Counter = 39
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_) -> {''EXIT'', any()})
%%    _13 =>
%%     list('atom' | list('a' | 'b') | number() | {'a', 'b', 'c'} | other())
function `map_SUITE`:`'-do_badmap/1-lc$^0/1-0-'`(_13, _0) {
0:
  %% Unique:
  %%    _13
  _34 = is_nonempty_list _13
  br _34, ^34, ^35

34:
  %% Argument types:
  %%    _13 => nonempty_list('atom' | list('a' | 'b') | number() | {'a', 'b', 'c'} | other())
  %% Unique:
  %%    _13
  _25 = get_hd _13

  %% Argument types:
  %%    _13 => nonempty_list('atom' | list('a' | 'b') | number() | {'a', 'b', 'c'} | other())
  %% Unique:
  %%    _13
  _24 = get_tl _13

  %% map_SUITE.erl:2687
  %% Result type:
  %%    {''EXIT'', any()}
  %% Argument types:
  %%    (`'-t_bif_map_find/1-fun-0-'`/1) => fun((_) -> {''EXIT'', any()})
  %%    _25 => 'atom' | list('a' | 'b') | number() | {'a', 'b', 'c'} | other()
  %% Aliased:
  %%    _25
  _15 = call (`'-t_bif_map_find/1-fun-0-'`/1), _25

  %% Aliased:
  %%    _15
  _32 = succeeded:body _15
  br _32, ^32, ^1

32:
  %% map_SUITE.erl:2687
  %% Result type:
  %%    list({''EXIT'', any()})
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _24
  _16 = call (`'-do_badmap/1-lc$^0/1-0-'`/2), _24, _0

  %% Unique:
  %%    _16
  _33 = succeeded:body _16
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    _15 => {''EXIT'', any()}
  %%    _16 => list({''EXIT'', any()})
  %% Aliased:
  %%    _15
  %% Unique:
  %%    _16
  _26 = put_list _15, _16
  %% Result type:
  %%    nonempty_list({''EXIT'', any()})
  %% Unique:
  %%    _26
  ret _26

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28

35:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% map_SUITE.erl:2601
%% Counter = 116
%% bs_ensure_opt: true
function `map_SUITE`:`'-map_aliases/1-fun-5-'`(_37) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _114 = bif:is_map _37
  br _114, ^114, ^112

114:
  %% Argument types:
  %%    _37 => map()
  %%    _37 => map()
  %% Aliased:
  %%    _37
  _113 = has_map_field _37, _37
  br _113, ^113, ^112

113:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _37
  ret _37

112:
  %% map_SUITE.erl:2602
  %% Aliased:
  %%    _37
  _109 = match_fail `badmatch`, _37

  %% Unique:
  %%    _109
  _115 = succeeded:body _109
  br ^1

1:
  _110 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _110
}

%% map_SUITE.erl:2595
%% Counter = 128
%% bs_ensure_opt: true
function `map_SUITE`:`'-map_aliases/1-fun-4-'`(_30) {
0:
  %% map_SUITE.erl:2596
  %% Unique:
  %%    _30
  _27 = call (`id`/1), _30

  %% Aliased:
  %%    _27
  _111 = succeeded:body _27
  br _111, ^111, ^1

111:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _124 = bif:is_tuple _27
  br _124, ^124, ^113

124:
  %% Argument types:
  %%    _27 => {...}
  %% Aliased:
  %%    _27
  _125 = bif:tuple_size _27

  %% Argument types:
  %%    _125 => 0..16777215
  %% Unique:
  %%    _125
  _126 = bif:'=:=' _125, `2`
  br _126, ^118, ^113

118:
  %% Argument types:
  %%    _27 => {any(), any()}
  %% Aliased:
  %%    _27
  _80 = get_tuple_element _27, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _117 = bif:is_map _80
  br _117, ^117, ^115

117:
  %% Argument types:
  %%    _27 => {any(), any()}
  %% Aliased:
  %%    _27
  _76 = get_tuple_element _27, `1`

  %% Argument types:
  %%    _80 => map()
  %% Aliased:
  %%    _76, 
  %%    _80
  _81 = get_map_element _80, _76

  %% Aliased:
  %%    _81
  _116 = succeeded:guard _81
  br _116, ^116, ^115

116:
  %% Aliased:
  %%    _81
  ret _81

115:
  %% map_SUITE.erl:2596
  %% Aliased:
  %%    _27
  _107 = match_fail `badmatch`, _27

  %% Unique:
  %%    _107
  _122 = succeeded:body _107
  br ^1

113:
  %% map_SUITE.erl:2596
  %% Aliased:
  %%    _27
  _108 = match_fail `badmatch`, _27

  %% Unique:
  %%    _108
  _127 = succeeded:body _108
  br ^1

1:
  _109 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _109
}

%% map_SUITE.erl:2589
%% Counter = 120
%% bs_ensure_opt: true
function `map_SUITE`:`'-map_aliases/1-fun-3-'`(_23) {
0:
  %% map_SUITE.erl:2590
  %% Unique:
  %%    _23
  _20 = call (`id`/1), _23

  %% Aliased:
  %%    _20
  _109 = succeeded:body _20
  br _109, ^109, ^1

109:
  %% Aliased:
  %%    _20
  _118 = is_nonempty_list _20
  br _118, ^118, ^111

118:
  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _70 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _69 = get_tl _20

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _115 = bif:is_map _70
  br _115, ^115, ^113

115:
  %% Argument types:
  %%    _70 => map()
  %% Aliased:
  %%    _69, 
  %%    _70
  _73 = get_map_element _70, _69

  %% Aliased:
  %%    _73
  _114 = succeeded:guard _73
  br _114, ^114, ^113

114:
  %% Aliased:
  %%    _73
  ret _73

113:
  %% map_SUITE.erl:2590
  %% Aliased:
  %%    _20
  _105 = match_fail `badmatch`, _20

  %% Unique:
  %%    _105
  _117 = succeeded:body _105
  br ^1

111:
  %% map_SUITE.erl:2590
  %% Aliased:
  %%    _20
  _106 = match_fail `badmatch`, _20

  %% Unique:
  %%    _106
  _119 = succeeded:body _106
  br ^1

1:
  _107 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _107
}

%% map_SUITE.erl:2586
%% Counter = 111
%% bs_ensure_opt: true
function `map_SUITE`:`'-map_aliases/1-fun-2-'`(_15) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _109 = bif:is_map _15
  br _109, ^109, ^107

109:
  %% Argument types:
  %%    _15 => map()
  %% Aliased:
  %%    _15
  _67 = get_map_element _15, `a`

  %% Aliased:
  %%    _67
  _108 = succeeded:guard _67
  br _108, ^108, ^107

108:
  %% Aliased:
  %%    _67
  ret _67

107:
  %% map_SUITE.erl:2586
  %% Aliased:
  %%    _15
  %% Anno: #{inlined => {'-map_aliases/1-inlined-1-',1}}
  _104 = match_fail `function_clause`, _15

  %% Unique:
  %%    _104
  _110 = succeeded:body _104
  br ^1

1:
  _105 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _105
}

%% map_SUITE.erl:2582
%% Counter = 109
%% bs_ensure_opt: true
function `map_SUITE`:`'-map_aliases/1-fun-1-'`(_8) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _107 = bif:is_map _8
  br _107, ^107, ^106

107:
  %% Result type:
  %%    'ok'
  ret `ok`

106:
  %% map_SUITE.erl:2582
  %% Aliased:
  %%    _8
  %% Anno: #{inlined => {'-map_aliases/1-inlined-0-',1}}
  _103 = match_fail `function_clause`, _8

  %% Unique:
  %%    _103
  _108 = succeeded:body _103
  br ^1

1:
  _104 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _104
}

%% map_SUITE.erl:2576
%% Counter = 120
%% bs_ensure_opt: true
function `map_SUITE`:`'-map_aliases/1-fun-0-'`(_3) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _118 = bif:is_map _3
  br _118, ^118, ^105

118:
  %% Argument types:
  %%    _3 => map()
  %% Aliased:
  %%    _3
  _59 = get_map_element _3, `k`

  %% Aliased:
  %%    _59
  _106 = succeeded:guard _59
  br _106, ^106, ^105

106:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _115 = is_tagged_tuple _59, `2`, `a`
  br _115, ^110, ^105

110:
  %% Argument types:
  %%    _59 => {'a', any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `1`

  %% Argument types:
  %%    _3 => map()
  %% Aliased:
  %%    _3, 
  %%    _60
  _62 = get_map_element _3, _60

  %% Aliased:
  %%    _62
  _109 = succeeded:guard _62
  br _109, ^109, ^108

109:
  %% Aliased:
  %%    _62
  ret _62

108:
  %% map_SUITE.erl:2577
  %% Aliased:
  %%    _3
  _101 = match_fail `badmatch`, _3

  %% Unique:
  %%    _101
  _111 = succeeded:body _101
  br ^1

105:
  %% map_SUITE.erl:2577
  %% Aliased:
  %%    _3
  _102 = match_fail `badmatch`, _3

  %% Unique:
  %%    _102
  _119 = succeeded:body _102
  br ^1

1:
  _103 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _103
}

%% map_SUITE.erl:2510
%% Counter = 112
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_bif_map_find/1-fun-0-'`(_17) {
0:
  br ^111

111:
  _59 = new_try_tag `'catch'`
  br _59, ^57, ^58

57:
  %% map_SUITE.erl:2512
  %% Aliased:
  %%    _17
  _52 = call (`maps`:`find`/2), `a`, _17

  %% Aliased:
  %%    _52
  _61 = succeeded:body _52
  br _61, ^61, ^58

61:
  br ^56

58:
  %% Unique:
  %%    _59
  _64 = landingpad `'catch'`, _59

  %% Aliased:
  %%    _64
  _62 = extract _64, `0`
  br ^56

56:
  _65 = phi { _62, ^58 }, { _52, ^61 }

  %% Aliased:
  %%    _65
  %% Unique:
  %%    _59
  _15 = catch_end _59, _65

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _91 = is_tagged_tuple _15, `2`, `'EXIT'`
  br _91, ^88, ^67

88:
  %% Argument types:
  %%    _15 => {''EXIT'', any()}
  %% Aliased:
  %%    _15
  _37 = get_tuple_element _15, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _85 = bif:is_tuple _37
  br _85, ^85, ^67

85:
  %% Argument types:
  %%    _37 => {...}
  %% Aliased:
  %%    _37
  _86 = bif:tuple_size _37

  %% Argument types:
  %%    _86 => 0..16777215
  %% Unique:
  %%    _86
  _87 = bif:'=:=' _86, `2`
  br _87, ^84, ^67

84:
  %% Argument types:
  %%    _37 => {any(), any()}
  %% Aliased:
  %%    _37
  _40 = get_tuple_element _37, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _81 = is_tagged_tuple _40, `2`, `badmap`
  br _81, ^78, ^67

78:
  %% Argument types:
  %%    _37 => {any(), any()}
  %% Aliased:
  %%    _37
  _39 = get_tuple_element _37, `1`

  %% Aliased:
  %%    _39
  _77 = is_nonempty_list _39
  br _77, ^77, ^67

77:
  %% Argument types:
  %%    _39 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _39
  _44 = get_hd _39

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _74 = is_tagged_tuple _44, `4`, `maps`
  br _74, ^71, ^67

71:
  %% Argument types:
  %%    _44 => {'maps', any(), any(), any()}
  %% Aliased:
  %%    _44
  _47 = get_tuple_element _44, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _70 = bif:'=:=' _47, `find`
  br _70, ^69, ^67

69:
  %% Argument types:
  %%    _40 => {'badmap', any()}
  %% Aliased:
  %%    _40
  _41 = get_tuple_element _40, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17, 
  %%    _41
  _68 = bif:'=:=' _41, _17
  br _68, ^68, ^67

68:
  %% Result type:
  %%    {''EXIT'', any()}
  %% Aliased:
  %%    _15
  ret _15

67:
  %% map_SUITE.erl:2511
  %% Aliased:
  %%    _15
  _53 = match_fail `badmatch`, _15

  %% Unique:
  %%    _53
  _94 = succeeded:body _53
  br ^1

1:
  _54 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _54
}

%% map_SUITE.erl:2480
%% Counter = 142
%% bs_ensure_opt: true
%% Parameters
%%    _19 =>
%%     list(11..99)
function `map_SUITE`:`'-t_with_2/1-lc$^2/1-2-'`(_19) {
0:
  %% Unique:
  %%    _19
  _137 = is_nonempty_list _19
  br _137, ^137, ^138

137:
  %% Argument types:
  %%    _19 => nonempty_list(11..99)
  %% Unique:
  %%    _19
  _69 = get_hd _19

  %% Argument types:
  %%    _19 => nonempty_list(11..99)
  %% Unique:
  %%    _19
  _68 = get_tl _19

  %% map_SUITE.erl:2480
  %% Result type:
  %%    list({'k', 11..99})
  %% Unique:
  %%    _68
  _21 = call (`'-t_with_2/1-lc$^2/1-2-'`/1), _68

  %% Unique:
  %%    _21
  _136 = succeeded:body _21
  br _136, ^136, ^1

136:
  %% Argument types:
  %%    _69 => 11..99
  %% Unique:
  %%    _69
  _70 = put_tuple `k`, _69

  %% Argument types:
  %%    _70 => {'k', 11..99}
  %%    _21 => list({'k', 11..99})
  %% Unique:
  %%    _21, 
  %%    _70
  _130 = put_list _70, _21
  %% Result type:
  %%    nonempty_list({'k', 11..99})
  %% Unique:
  %%    _130
  ret _130

1:
  _132 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _132

138:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% map_SUITE.erl:2479
%% Counter = 140
%% bs_ensure_opt: true
%% Parameters
%%    _12 =>
%%     list(11..99)
function `map_SUITE`:`'-t_with_2/1-lc$^1/1-1-'`(_12) {
0:
  %% Unique:
  %%    _12
  _135 = is_nonempty_list _12
  br _135, ^135, ^136

135:
  %% Argument types:
  %%    _12 => nonempty_list(11..99)
  %% Unique:
  %%    _12
  _61 = get_hd _12

  %% Argument types:
  %%    _12 => nonempty_list(11..99)
  %% Unique:
  %%    _12
  _60 = get_tl _12

  %% map_SUITE.erl:2479
  %% Result type:
  %%    list({{'k', 11..99}, {'v', 11..99}})
  %% Unique:
  %%    _60
  _14 = call (`'-t_with_2/1-lc$^1/1-1-'`/1), _60

  %% Unique:
  %%    _14
  _134 = succeeded:body _14
  br _134, ^134, ^1

134:
  %% Argument types:
  %%    _61 => 11..99
  %% Unique:
  %%    _61
  _63 = put_tuple `k`, _61

  %% Argument types:
  %%    _61 => 11..99
  %% Unique:
  %%    _61
  _62 = put_tuple `v`, _61

  %% Argument types:
  %%    _63 => {'k', 11..99}
  %%    _62 => {'v', 11..99}
  %% Unique:
  %%    _62, 
  %%    _63
  _64 = put_tuple _63, _62

  %% Argument types:
  %%    _64 => {{'k', 11..99}, {'v', 11..99}}
  %%    _14 => list({{'k', 11..99}, {'v', 11..99}})
  %% Unique:
  %%    _14, 
  %%    _64
  _128 = put_list _64, _14
  %% Result type:
  %%    nonempty_list({{'k', 11..99}, {'v', 11..99}})
  %% Unique:
  %%    _128
  ret _128

1:
  _130 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _130

136:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% map_SUITE.erl:2478
%% Counter = 138
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_with_2/1-lc$^0/1-0-'`(_5) {
0:
  %% Aliased:
  %%    _5
  _133 = is_nonempty_list _5
  br _133, ^133, ^131

133:
  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _53 = get_hd _5

  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _52 = get_tl _5

  %% map_SUITE.erl:2478
  %% Result type:
  %%    list({{'k', any()}, {'v', any()}})
  %% Aliased:
  %%    _52
  _7 = call (`'-t_with_2/1-lc$^0/1-0-'`/1), _52

  %% Unique:
  %%    _7
  _132 = succeeded:body _7
  br _132, ^132, ^1

132:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _55 = put_tuple `k`, _53

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _54 = put_tuple `v`, _53

  %% Argument types:
  %%    _55 => {'k', any()}
  %%    _54 => {'v', any()}
  %% Unique:
  %%    _54, 
  %%    _55
  _56 = put_tuple _55, _54

  %% Argument types:
  %%    _56 => {{'k', any()}, {'v', any()}}
  %%    _7 => list({{'k', any()}, {'v', any()}})
  %% Unique:
  %%    _7, 
  %%    _56
  _126 = put_list _56, _7
  %% Result type:
  %%    nonempty_list({{'k', any()}, {'v', any()}})
  %% Unique:
  %%    _126
  ret _126

131:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _134 = bif:'=:=' _5, `[]`
  br _134, ^134, ^130

134:
  %% Result type:
  %%    nil()
  ret `[]`

130:
  %% Argument types:
  %%    _5 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _5
  _51 = put_tuple `bad_generator`, _5

  %% map_SUITE.erl:2478
  %% Unique:
  %%    _51
  _127 = call (`erlang`:`error`/1), _51

  %% Aliased:
  %%    _127
  _135 = succeeded:body _127
  br ^1

1:
  _128 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _128
}

%% map_SUITE.erl:2462
%% Counter = 122
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_update_with_4/1-fun-0-'`(_5) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _55 = put_tuple _5, _5

  %% Argument types:
  %%    _55 => {any(), any()}
  %% Unique:
  %%    _55
  _56 = put_list _55, `[]`

  %% Argument types:
  %%    _56 => nonempty_list({any(), any()})
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _56
  _57 = put_list _5, _56

  %% Argument types:
  %%    _57 => nonempty_list(any())
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _57
  _119 = put_list _5, _57
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _119
  ret _119
}

%% map_SUITE.erl:2445
%% Counter = 138
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_update_with_3/1-fun-0-'`(_5) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _57 = put_tuple _5, _5

  %% Argument types:
  %%    _57 => {any(), any()}
  %% Unique:
  %%    _57
  _58 = put_list _57, `[]`

  %% Argument types:
  %%    _58 => nonempty_list({any(), any()})
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _58
  _59 = put_list _5, _58

  %% Argument types:
  %%    _59 => nonempty_list(any())
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _59
  _135 = put_list _5, _59
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _135
  ret _135
}

%% map_SUITE.erl:2423
%% Counter = 100
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_map_2/1-fun-3-'`(_27, _26) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% map_SUITE.erl:2419
%% Counter = 108
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_map_2/1-fun-2-'`(_19, _18) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _104 = is_tagged_tuple _19, `2`, `k`
  br _104, ^101, ^99

101:
  %% map_SUITE.erl:2419
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _95 = bif:'+' _18, `42`

  %% Unique:
  %%    _95
  _100 = succeeded:body _95
  br _100, ^100, ^1

100:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _95
  ret _95

99:
  %% map_SUITE.erl:2419
  %% Aliased:
  %%    _18, 
  %%    _19
  %% Anno: #{inlined => {'-t_map_2/1-inlined-2-',2}}
  _96 = match_fail `function_clause`, _19, _18

  %% Unique:
  %%    _96
  _107 = succeeded:body _96
  br ^1

1:
  _97 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _97
}

%% map_SUITE.erl:2417
%% Counter = 106
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_map_2/1-fun-1-'`(_11, _10) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _102 = is_tagged_tuple _11, `2`, `k`
  br _102, ^99, ^97

99:
  %% map_SUITE.erl:2417
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _93 = bif:'+' _10, `42`

  %% Unique:
  %%    _93
  _98 = succeeded:body _93
  br _98, ^98, ^1

98:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _93
  ret _93

97:
  %% map_SUITE.erl:2417
  %% Aliased:
  %%    _10, 
  %%    _11
  %% Anno: #{inlined => {'-t_map_2/1-inlined-1-',2}}
  _94 = match_fail `function_clause`, _11, _10

  %% Unique:
  %%    _94
  _105 = succeeded:body _94
  br ^1

1:
  _95 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _95
}

%% map_SUITE.erl:2415
%% Counter = 103
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_map_2/1-lc$^0/1-0-'`(_4) {
0:
  %% Aliased:
  %%    _4
  _98 = is_nonempty_list _4
  br _98, ^98, ^96

98:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _49 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _48 = get_tl _4

  %% map_SUITE.erl:2415
  %% Result type:
  %%    list({{'k', any()}, any()})
  %% Aliased:
  %%    _48
  _6 = call (`'-t_map_2/1-lc$^0/1-0-'`/1), _48

  %% Unique:
  %%    _6
  _97 = succeeded:body _6
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _50 = put_tuple `k`, _49

  %% Argument types:
  %%    _50 => {'k', any()}
  %% Aliased:
  %%    _49
  %% Unique:
  %%    _50
  _51 = put_tuple _50, _49

  %% Argument types:
  %%    _51 => {{'k', any()}, any()}
  %%    _6 => list({{'k', any()}, any()})
  %% Unique:
  %%    _6, 
  %%    _51
  _91 = put_list _51, _6
  %% Result type:
  %%    nonempty_list({{'k', any()}, any()})
  %% Unique:
  %%    _91
  ret _91

96:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _99 = bif:'=:=' _4, `[]`
  br _99, ^99, ^95

99:
  %% Result type:
  %%    nil()
  ret `[]`

95:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _47 = put_tuple `bad_generator`, _4

  %% map_SUITE.erl:2415
  %% Unique:
  %%    _47
  _92 = call (`erlang`:`error`/1), _47

  %% Aliased:
  %%    _92
  _100 = succeeded:body _92
  br ^1

1:
  _93 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _93
}

%% map_SUITE.erl:2393
%% Counter = 107
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_fold_3/1-fun-3-'`(_33, _32, _31) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% map_SUITE.erl:2389
%% Counter = 115
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_fold_3/1-fun-2-'`(_23, _22, _21) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _111 = is_tagged_tuple _23, `2`, `k`
  br _111, ^108, ^106

108:
  %% map_SUITE.erl:2389
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21, 
  %%    _22
  _102 = bif:'+' _21, _22

  %% Unique:
  %%    _102
  _107 = succeeded:body _102
  br _107, ^107, ^1

107:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _102
  ret _102

106:
  %% map_SUITE.erl:2389
  %% Aliased:
  %%    _21, 
  %%    _22, 
  %%    _23
  %% Anno: #{inlined => {'-t_fold_3/1-inlined-2-',3}}
  _103 = match_fail `function_clause`, _23, _22, _21

  %% Unique:
  %%    _103
  _114 = succeeded:body _103
  br ^1

1:
  _104 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _104
}

%% map_SUITE.erl:2387
%% Counter = 113
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_fold_3/1-fun-1-'`(_13, _12, _11) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _109 = is_tagged_tuple _13, `2`, `k`
  br _109, ^106, ^104

106:
  %% map_SUITE.erl:2387
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11, 
  %%    _12
  _100 = bif:'+' _11, _12

  %% Unique:
  %%    _100
  _105 = succeeded:body _100
  br _105, ^105, ^1

105:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _100
  ret _100

104:
  %% map_SUITE.erl:2387
  %% Aliased:
  %%    _11, 
  %%    _12, 
  %%    _13
  %% Anno: #{inlined => {'-t_fold_3/1-inlined-1-',3}}
  _101 = match_fail `function_clause`, _13, _12, _11

  %% Unique:
  %%    _101
  _112 = succeeded:body _101
  br ^1

1:
  _102 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _102
}

%% map_SUITE.erl:2384
%% Counter = 110
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_fold_3/1-lc$^0/1-0-'`(_4) {
0:
  %% Aliased:
  %%    _4
  _105 = is_nonempty_list _4
  br _105, ^105, ^103

105:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _57 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _56 = get_tl _4

  %% map_SUITE.erl:2384
  %% Result type:
  %%    list({{'k', any()}, any()})
  %% Aliased:
  %%    _56
  _6 = call (`'-t_fold_3/1-lc$^0/1-0-'`/1), _56

  %% Unique:
  %%    _6
  _104 = succeeded:body _6
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _58 = put_tuple `k`, _57

  %% Argument types:
  %%    _58 => {'k', any()}
  %% Aliased:
  %%    _57
  %% Unique:
  %%    _58
  _59 = put_tuple _58, _57

  %% Argument types:
  %%    _59 => {{'k', any()}, any()}
  %%    _6 => list({{'k', any()}, any()})
  %% Unique:
  %%    _6, 
  %%    _59
  _98 = put_list _59, _6
  %% Result type:
  %%    nonempty_list({{'k', any()}, any()})
  %% Unique:
  %%    _98
  ret _98

103:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _106 = bif:'=:=' _4, `[]`
  br _106, ^106, ^102

106:
  %% Result type:
  %%    nil()
  ret `[]`

102:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _55 = put_tuple `bad_generator`, _4

  %% map_SUITE.erl:2384
  %% Unique:
  %%    _55
  _99 = call (`erlang`:`error`/1), _55

  %% Aliased:
  %%    _99
  _107 = succeeded:body _99
  br ^1

1:
  _100 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _100
}

%% map_SUITE.erl:2347
%% Counter = 371
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_key_expressions/1-fun-7-'`(_71) {
0:
  %% map_SUITE.erl:2348
  %% Argument types:
  %%    
  _66 = bif:self

  %% map_SUITE.erl:2348
  %% Unique:
  %%    _66, 
  %%    _71
  _308 = call (`erlang`:`'!'`/2), _66, _71

  %% Aliased:
  %%    _308
  _321 = succeeded:body _308
  br _321, ^321, ^1

321:
  %% map_SUITE.erl:2349
  _70 = call (`map_SUITE`:`all`/0)

  %% Aliased:
  %%    _70
  _322 = succeeded:body _70
  br _322, ^369, ^1

369:
  br ^370

370:
  _326 = new_try_tag `'catch'`
  br _326, ^324, ^325

324:
  br ^266

266:
  %% map_SUITE.erl:2350
  _143 = peek_message `none`

  %% Aliased:
  %%    _143
  _346 = succeeded:guard _143
  br _346, ^267, ^345

267:
  _317 = remove_message
  br ^323

345:
  _339 = wait_timeout `infinity`

  %% Unique:
  %%    _339
  _340 = succeeded:body _339
  br _340, ^343, ^325

343:
  br ^266

325:
  %% Unique:
  %%    _326
  _349 = landingpad `'catch'`, _326

  %% Aliased:
  %%    _349
  _347 = extract _349, `0`
  br ^323

323:
  _350 = phi { _347, ^325 }, { _143, ^267 }

  %% Aliased:
  %%    _350
  %% Unique:
  %%    _326
  _69 = catch_end _326, _350

  %% map_SUITE.erl:2349
  %% Aliased:
  %%    _69
  _318 = call (_70:`a`/1), _69

  %% Aliased:
  %%    _318
  _351 = succeeded:body _318
  br _351, ^351, ^1

351:
  %% Aliased:
  %%    _318
  ret _318

1:
  _319 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _319
}

%% map_SUITE.erl:2338
%% Counter = 337
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_key_expressions/1-fun-6-'`(_62) {
0:
  %% map_SUITE.erl:2339
  %% Argument types:
  %%    
  _61 = bif:self

  %% map_SUITE.erl:2339
  %% Unique:
  %%    _61, 
  %%    _62
  _302 = call (`erlang`:`'!'`/2), _61, _62

  %% Aliased:
  %%    _302
  _310 = succeeded:body _302
  br _310, ^310, ^1

310:
  br ^261

261:
  %% map_SUITE.erl:2340
  _132 = peek_message `none`

  %% Aliased:
  %%    _132
  _335 = succeeded:guard _132
  br _335, ^262, ^334

262:
  _306 = remove_message

  %% Argument types:
  %%    
  %% Aliased:
  %%    _132
  _307 = put_tuple `error`, _132
  %% Result type:
  %%    {'error', any()}
  %% Unique:
  %%    _307
  ret _307

334:
  _328 = wait_timeout `infinity`

  %% Unique:
  %%    _328
  _329 = succeeded:body _328
  br _329, ^332, ^1

332:
  br ^261

1:
  _308 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _308
}

%% map_SUITE.erl:2327
%% Counter = 334
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_key_expressions/1-fun-5-'`(_57) {
0:
  %% map_SUITE.erl:2328
  %% Argument types:
  %%    
  _53 = bif:self

  %% map_SUITE.erl:2328
  %% Unique:
  %%    _53, 
  %%    _57
  _296 = call (`erlang`:`'!'`/2), _53, _57

  %% Aliased:
  %%    _296
  _304 = succeeded:body _296
  br _304, ^304, ^1

304:
  br ^256

256:
  %% map_SUITE.erl:2329
  _121 = peek_message `none`

  %% Aliased:
  %%    _121
  _332 = succeeded:guard _121
  br _332, ^257, ^331

257:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _324 = bif:'=:=' _121, `0.5`
  br _324, ^323, ^322

323:
  _300 = remove_message
  %% Result type:
  %%    'error'
  ret `error`

322:
  _301 = recv_next
  br ^256

331:
  _325 = wait_timeout `infinity`

  %% Unique:
  %%    _325
  _326 = succeeded:body _325
  br _326, ^329, ^1

329:
  br ^256

1:
  _302 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _302
}

%% map_SUITE.erl:2316
%% Counter = 317
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_key_expressions/1-fun-4-'`(_44, _43, _42) {
0:
  %% Argument types:
  %%    
  %% Unique:
  %%    _42
  _312 = bif:is_map _42
  br _312, ^312, ^314

312:
  %% map_SUITE.erl:2318
  %% Argument types:
  %%    
  %% Unique:
  %%    _43, 
  %%    _44
  _294 = bif:'div' _44, _43

  %% Unique:
  %%    _294
  _303 = succeeded:guard _294
  br _303, ^309, ^315

309:
  %% Argument types:
  %%    _42 => map()
  %%    _294 => integer()
  %% Unique:
  %%    _42, 
  %%    _294
  _251 = get_map_element _42, _294

  %% Unique:
  %%    _251
  _308 = succeeded:guard _251
  br _308, ^308, ^315

308:
  %% Unique:
  %%    _251
  ret _251

315:
  %% Result type:
  %%    'no_match'
  ret `no_match`

314:
  %% map_SUITE.erl:2317
  %% Unique:
  %%    _42
  _295 = match_fail `case_clause`, _42

  %% Unique:
  %%    _295
  _316 = succeeded:body _295
  br ^1

1:
  _296 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _296
}

%% map_SUITE.erl:2302
%% Counter = 326
%% bs_ensure_opt: true
%% Parameters
%%    Int =>
%%     number()
function `map_SUITE`:`'-t_key_expressions/1-fun-3-'`(_34, Int) {
0:
  %% map_SUITE.erl:2303
  _286 = call (`erlang`:`erase`/1), `once`

  %% Aliased:
  %%    _286
  _295 = succeeded:body _286
  br _295, ^295, ^1

295:
  %% map_SUITE.erl:2305
  _240 = call (`erlang`:`put`/2), `once`, `twice`

  %% Aliased:
  %%    _240
  _296 = succeeded:body _240
  br _296, ^296, ^1

296:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _240
  _301 = bif:'=:=' _240, `undefined`
  br _301, ^300, ^298

300:
  %% map_SUITE.erl:2306
  %% Aliased:
  %%    _34
  _287 = call (`id`/1), _34

  %% Aliased:
  %%    _287
  _299 = succeeded:body _287
  br _299, ^297, ^1

297:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _287
  _317 = bif:is_map _287
  br _317, ^317, ^241

317:
  %% map_SUITE.erl:2309
  %% Argument types:
  %%    Int => number()
  %% Unique:
  %%    Int
  %% Anno: #{unit => 2}
  _32 = bs_create_bin `integer`, `[1,{segment,1}]`, Int, `42`

  %% Aliased:
  %%    _32
  _308 = succeeded:guard _32
  br _308, ^308, ^241

308:
  %% Argument types:
  %%    _32 => bitstring(2)
  %% Aliased:
  %%    _32
  _290 = put_tuple `tag`, _32

  %% Argument types:
  %%    _287 => map()
  %%    _290 => {'tag', bitstring(2)}
  %% Aliased:
  %%    _287
  %% Unique:
  %%    _290
  _243 = get_map_element _287, _290

  %% Aliased:
  %%    _243
  _313 = succeeded:guard _243
  br _313, ^313, ^241

313:
  %% Aliased:
  %%    _243
  ret _243

241:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _287
  _322 = bif:is_tuple _287
  br _322, ^322, ^319

322:
  %% Argument types:
  %%    _287 => {...}
  %% Aliased:
  %%    _287
  _323 = bif:tuple_size _287

  %% Argument types:
  %%    _323 => 0..16777215
  %% Unique:
  %%    _323
  _324 = bif:'=:=' _323, `2`
  br _324, ^321, ^319

321:
  %% Argument types:
  %%    _287 => {any(), any()}
  %% Aliased:
  %%    _287
  _245 = get_tuple_element _287, `0`

  %% Argument types:
  %%    _287 => {any(), any()}
  %% Aliased:
  %%    _287
  _244 = get_tuple_element _287, `1`

  %% map_SUITE.erl:2310
  %% Argument types:
  %%    
  %% Aliased:
  %%    _244, 
  %%    _245
  _291 = bif:'+' _245, _244

  %% Unique:
  %%    _291
  _320 = succeeded:body _291
  br _320, ^320, ^1

320:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _291
  ret _291

319:
  %% map_SUITE.erl:2308
  %% Aliased:
  %%    _287
  _292 = match_fail `case_clause`, _287

  %% Unique:
  %%    _292
  _325 = succeeded:body _292
  br ^1

298:
  %% map_SUITE.erl:2305
  %% Aliased:
  %%    _240
  _288 = match_fail `badmatch`, _240

  %% Unique:
  %%    _288
  _302 = succeeded:body _288
  br ^1

1:
  _293 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _293
}

%% map_SUITE.erl:2286
%% Counter = 329
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_key_expressions/1-fun-1-'`(_19, _18, _17) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _315 = bif:is_map _19
  br _315, ^315, ^221

315:
  %% map_SUITE.erl:2288
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  %% Unique:
  %%    _18
  _283 = bif:element _18, _17

  %% Aliased:
  %%    _283
  _293 = succeeded:guard _283
  br _293, ^312, ^221

312:
  %% Argument types:
  %%    _19 => map()
  %% Aliased:
  %%    _19, 
  %%    _283
  _224 = get_map_element _19, _283

  %% Aliased:
  %%    _224
  _301 = succeeded:guard _224
  br _301, ^301, ^221

301:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _224
  _225 = bs_start_match `new`, _224

  %% Aliased:
  %%    _225
  _311 = succeeded:guard _225
  br _311, ^311, ^221

311:
  _327 = bs_ensure _225, `16`, `1`
  _328 = succeeded:guard _327
  br _328, ^326, ^221

326:
  %% map_SUITE.erl:2288
  %% Argument types:
  %%    _327 => bs_context(1)
  %% Aliased:
  %%    _225
  %% Anno: #{ensured => true}
  _226 = bs_match `integer`, _327, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _226
  _304 = succeeded:guard _226
  br _304, ^304, ^221

304:
  %% Aliased:
  %%    _226
  _227 = bs_extract _226

  %% map_SUITE.erl:2288
  %% Argument types:
  %%    _226 => bs_context(1)
  %%    _227 => 0..65535
  %% Aliased:
  %%    _226
  %% Unique:
  %%    _227
  _231 = bs_match `binary`, _226, `[unsigned,big]`, _227, `8`

  %% Aliased:
  %%    _231
  _308 = succeeded:guard _231
  br _308, ^308, ^221

308:
  %% Aliased:
  %%    _231
  _232 = bs_extract _231

  %% Aliased:
  %%    _231
  _309 = bs_test_tail _231, `0`
  br _309, ^309, ^221

309:
  %% Result type:
  %%    bitstring(8)
  %% Aliased:
  %%    _232
  ret _232

221:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _321 = bif:is_tuple _19
  br _321, ^321, ^318

321:
  %% Argument types:
  %%    _19 => {...}
  %% Aliased:
  %%    _19
  _322 = bif:tuple_size _19

  %% Argument types:
  %%    _322 => 0..16777215
  %% Unique:
  %%    _322
  _323 = bif:'=:=' _322, `2`
  br _323, ^320, ^317

320:
  %% Argument types:
  %%    _19 => {any(), any()}
  %% Aliased:
  %%    _19
  _234 = get_tuple_element _19, `0`

  %% Argument types:
  %%    _19 => {any(), any()}
  %% Aliased:
  %%    _19
  _233 = get_tuple_element _19, `1`

  %% map_SUITE.erl:2293
  %% Argument types:
  %%    
  %% Aliased:
  %%    _233, 
  %%    _234
  _284 = bif:'+' _234, _233

  %% Unique:
  %%    _284
  _319 = succeeded:body _284
  br _319, ^319, ^1

319:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _284
  ret _284

318:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _324 = bif:is_map _19
  br _324, ^324, ^317

324:
  %% Result type:
  %%    'not_found'
  ret `not_found`

317:
  %% map_SUITE.erl:2287
  %% Aliased:
  %%    _19
  _285 = match_fail `case_clause`, _19

  %% Unique:
  %%    _285
  _325 = succeeded:body _285
  br ^1

1:
  _286 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _286
}

%% map_SUITE.erl:2282
%% Counter = 298
%% bs_ensure_opt: true
%% Parameters
%%    Int =>
%%     number()
function `map_SUITE`:`'-t_key_expressions/1-fun-0-'`(_10, Int) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _296 = bif:is_map _10
  br _296, ^296, ^215

296:
  %% map_SUITE.erl:2282
  %% Argument types:
  %%    Int => number()
  %% Unique:
  %%    Int
  _278 = bif:'+' Int, `1`

  %% Unique:
  %%    _278
  _287 = succeeded:guard _278
  br _287, ^293, ^215

293:
  %% Argument types:
  %%    _10 => map()
  %%    _278 => number()
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _278
  _217 = get_map_element _10, _278

  %% Aliased:
  %%    _217
  _292 = succeeded:guard _217
  br _292, ^292, ^215

292:
  %% Aliased:
  %%    _217
  ret _217

215:
  %% map_SUITE.erl:2282
  %% Aliased:
  %%    _10
  %% Anno: #{inlined => {'-t_key_expressions/1-inlined-0-',1}}
  _279 = match_fail `function_clause`, _10

  %% Unique:
  %%    _279
  _297 = succeeded:body _279
  br ^1

1:
  _280 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _280
}

%% map_SUITE.erl:2238
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0
function `map_SUITE`:`'-increase/1-fun-0-'`(_0) {
0:
  %% Result type:
  %%    0
  %% Aliased:
  %%    _0
  ret _0
}

%% map_SUITE.erl:2053
%% Counter = 98
%% bs_ensure_opt: true
function `map_SUITE`:`'-map_nested_pattern_funs/1-fun-2-'`(_8, _0, K0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _96 = bif:is_map _0
  br _96, ^96, ^44

96:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0, 
  %%    _8
  _46 = get_map_element _0, _8

  %% Aliased:
  %%    _46
  _77 = succeeded:guard _46
  br _77, ^77, ^44

77:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0, 
  %%    K0
  _45 = get_map_element _0, K0

  %% Aliased:
  %%    _45
  _78 = succeeded:guard _45
  br _78, ^78, ^44

78:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _95 = bif:'=:=' _46, `yep`
  br _95, ^94, ^44

94:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _93 = bif:'=:=' _45, `ok`
  br _93, ^92, ^44

92:
  %% map_SUITE.erl:2055
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _61 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `325`, `binary`, `[1]`, `<<"!">>`, `all`

  %% Aliased:
  %%    _61
  _81 = succeeded:guard _61
  br _81, ^89, ^44

89:
  %% Argument types:
  %%    _0 => map()
  %%    _61 => bitstring(1)
  %% Aliased:
  %%    _0, 
  %%    _61
  _48 = get_map_element _0, _61

  %% Aliased:
  %%    _48
  _86 = succeeded:guard _48
  br _86, ^86, ^44

86:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _88 = bif:'=:=' _48, `1`
  br _88, ^87, ^44

87:
  %% Result type:
  %%    fun((_) -> {any(), any()})
  %% Aliased:
  %%    _0, 
  %%    _8
  _62 = make_fun (`'-map_nested_pattern_funs/1-fun-1-'`/3), _0, _8
  %% Result type:
  %%    fun((_) -> fun((_) -> {any(), any()}))
  %% Aliased:
  %%    _62
  ret _62

44:
  %% map_SUITE.erl:2054
  %% Aliased:
  %%    _0
  _71 = match_fail `case_clause`, _0

  %% Unique:
  %%    _71
  _97 = succeeded:body _71
  br ^1

1:
  _72 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _72
}

%% map_SUITE.erl:2056
%% Counter = 97
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     map()
function `map_SUITE`:`'-map_nested_pattern_funs/1-fun-1-'`(_5, _0, _8) {
0:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0, 
  %%    _5
  _51 = get_map_element _0, _5

  %% Aliased:
  %%    _51
  _76 = succeeded:guard _51
  br _76, ^76, ^49

76:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0, 
  %%    _8
  _50 = get_map_element _0, _8

  %% Aliased:
  %%    _50
  _77 = succeeded:guard _50
  br _77, ^77, ^49

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _94 = bif:'=:=' _51, `ok`
  br _94, ^93, ^49

93:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _92 = bif:'=:=' _50, `yep`
  br _92, ^91, ^49

91:
  %% map_SUITE.erl:2058
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _64 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `325`, `binary`, `[1]`, `<<"!">>`, `all`

  %% Aliased:
  %%    _64
  _80 = succeeded:guard _64
  br _80, ^88, ^49

88:
  %% Argument types:
  %%    _0 => map()
  %%    _64 => bitstring(1)
  %% Aliased:
  %%    _0, 
  %%    _64
  _53 = get_map_element _0, _64

  %% Aliased:
  %%    _53
  _85 = succeeded:guard _53
  br _85, ^85, ^49

85:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _87 = bif:'=:=' _53, `1`
  br _87, ^86, ^49

86:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _5, 
  %%    _8
  _65 = make_fun (`'-map_nested_pattern_funs/1-fun-0-'`/3), _5, _8
  %% Result type:
  %%    fun((_) -> {any(), any()})
  %% Aliased:
  %%    _65
  ret _65

49:
  %% map_SUITE.erl:2057
  %% Aliased:
  %%    _0
  _70 = match_fail `case_clause`, _0

  %% Unique:
  %%    _70
  _96 = succeeded:body _70
  br ^1

1:
  _71 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _71
}

%% map_SUITE.erl:2059
%% Counter = 92
%% bs_ensure_opt: true
function `map_SUITE`:`'-map_nested_pattern_funs/1-fun-0-'`(_2, _5, _8) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _90 = bif:is_map _2
  br _90, ^90, ^54

90:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2, 
  %%    _5
  _56 = get_map_element _2, _5

  %% Aliased:
  %%    _56
  _75 = succeeded:guard _56
  br _75, ^75, ^54

75:
  %% Argument types:
  %%    _2 => map()
  %% Aliased:
  %%    _2, 
  %%    _8
  _55 = get_map_element _2, _8

  %% Aliased:
  %%    _55
  _76 = succeeded:guard _55
  br _76, ^76, ^54

76:
  %% map_SUITE.erl:2060
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _67 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `317`, `binary`, `[1]`, `<<1,76>>`, `all`

  %% Aliased:
  %%    _67
  _79 = succeeded:guard _67
  br _79, ^87, ^54

87:
  %% Argument types:
  %%    _2 => map()
  %%    _67 => bitstring(1)
  %% Aliased:
  %%    _2, 
  %%    _67
  _58 = get_map_element _2, _67

  %% Aliased:
  %%    _58
  _84 = succeeded:guard _58
  br _84, ^84, ^54

84:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _86 = bif:'=:=' _58, `ok`
  br _86, ^85, ^54

85:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55, 
  %%    _56
  _68 = put_tuple _55, _56
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _68
  ret _68

54:
  %% map_SUITE.erl:2059
  %% Aliased:
  %%    _2
  %% Anno: #{inlined => {'-map_nested_pattern_funs/1-inlined-0-',1}}
  _69 = match_fail `function_clause`, _2

  %% Unique:
  %%    _69
  _91 = succeeded:body _69
  br ^1

1:
  _70 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _70
}

%% map_SUITE.erl:1862
%% Counter = 39
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_build_and_match_val/1-fun-0-'`(_1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _37 = bif:is_map _1
  br _37, ^37, ^32

37:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _17 = get_map_element _1, `v`

  %% Aliased:
  %%    _17
  _33 = succeeded:guard _17
  br _33, ^33, ^32

33:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _16 = get_map_element _1, `"hi"`

  %% Aliased:
  %%    _16
  _34 = succeeded:guard _16
  br _34, ^34, ^32

34:
  switch _16, ^32, [
    { `first`, ^36 },
    { `second`, ^35 }
  ]

35:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _27 = put_tuple `2`, _17
  %% Result type:
  %%    {2, any()}
  %% Unique:
  %%    _27
  ret _27

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _28 = put_tuple `1`, _17
  %% Result type:
  %%    {1, any()}
  %% Unique:
  %%    _28
  ret _28

32:
  %% map_SUITE.erl:1862
  %% Aliased:
  %%    _1
  %% Anno: #{inlined => {'-t_build_and_match_val/1-inlined-0-',1}}
  _29 = match_fail `function_clause`, _1

  %% Unique:
  %%    _29
  _38 = succeeded:body _29
  br ^1

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% map_SUITE.erl:1850
%% Counter = 36
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_build_and_match_empty_val/1-fun-0-'`(_1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _34 = bif:is_map _1
  br _34, ^34, ^30

34:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _31 = has_map_field _1, `1337`
  br _31, ^31, ^30

31:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _32 = has_map_field _1, `{1,2}`
  br _32, ^32, ^30

32:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _33 = has_map_field _1, `"hi"`
  br _33, ^33, ^30

33:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% map_SUITE.erl:1850
  %% Aliased:
  %%    _1
  %% Anno: #{inlined => {'-t_build_and_match_empty_val/1-inlined-0-',1}}
  _27 = match_fail `function_clause`, _1

  %% Unique:
  %%    _27
  _35 = succeeded:body _27
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% map_SUITE.erl:1835
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _3 =>
%%     list(1..3)
function `map_SUITE`:`'-t_warn_useless_build/1-lc$^0/1-0-'`(_3) {
0:
  %% Unique:
  %%    _3
  _22 = is_nonempty_list _3
  br _22, ^22, ^23

22:
  %% Argument types:
  %%    _3 => nonempty_list(1..3)
  %% Unique:
  %%    _3
  _12 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_list(1..3)
  %% Unique:
  %%    _3
  _11 = get_tl _3

  %% map_SUITE.erl:1835
  %% Unique:
  %%    _12
  _5 = call (`id`/1), _12

  %% Aliased:
  %%    _5
  _20 = succeeded:body _5
  br _20, ^26, ^1

26:
  %% map_SUITE.erl:1835
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _11
  _14 = call (`'-t_warn_useless_build/1-lc$^0/1-0-'`/1), _11

  %% Unique:
  %%    _14
  _21 = succeeded:body _14
  br _21, ^21, ^1

21:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _14
  ret _14

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16

23:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% map_SUITE.erl:1753
%% Counter = 122
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_guard_fun/1-fun-1-'`(_4) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _120 = bif:is_map _4
  br _120, ^120, ^106

120:
  %% Argument types:
  %%    _4 => map()
  %% Aliased:
  %%    _4
  _54 = get_map_element _4, `s`

  %% Aliased:
  %%    _54
  _107 = succeeded:guard _54
  br _107, ^107, ^106

107:
  %% Argument types:
  %%    _4 => map()
  %% Aliased:
  %%    _4
  _53 = get_map_element _4, `v`

  %% Aliased:
  %%    _53
  _108 = succeeded:guard _53
  br _108, ^108, ^106

108:
  %% Aliased:
  %%    _53
  _114 = is_nonempty_list _53
  br _114, ^114, ^110

114:
  %% Argument types:
  %%    _53 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _53
  _56 = get_hd _53

  %% Argument types:
  %%    _53 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _53
  _55 = get_tl _53

  %% Aliased:
  %%    _55
  _113 = is_nonempty_list _55
  br _113, ^113, ^109

113:
  %% Argument types:
  %%    _55 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _55
  _58 = get_hd _55

  %% Argument types:
  %%    _55 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _55
  _57 = get_tl _55

  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _112 = bif:'=:=' _57, `[]`
  br _112, ^112, ^109

112:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56, 
  %%    _58
  _111 = bif:'=:=' _58, _56
  br _111, ^111, ^109

111:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54, 
  %%    _56
  _101 = put_tuple _54, _56
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _101
  ret _101

110:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _117 = bif:is_tuple _53
  br _117, ^117, ^109

117:
  %% Argument types:
  %%    _53 => {...}
  %% Aliased:
  %%    _53
  _118 = bif:tuple_size _53

  %% Argument types:
  %%    _118 => 0..16777215
  %% Unique:
  %%    _118
  _119 = bif:'=:=' _118, `2`
  br _119, ^116, ^109

116:
  %% Argument types:
  %%    _53 => {any(), any()}
  %% Aliased:
  %%    _53
  _60 = get_tuple_element _53, `0`

  %% Argument types:
  %%    _53 => {any(), any()}
  %% Aliased:
  %%    _53
  _59 = get_tuple_element _53, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _59, 
  %%    _60
  _115 = bif:'=:=' _59, _60
  br _115, ^115, ^109

115:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54, 
  %%    _60
  _100 = put_tuple _54, _60
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _100
  ret _100

109:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53, 
  %%    _54
  _102 = put_tuple _54, _53
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _102
  ret _102

106:
  %% map_SUITE.erl:1753
  %% Aliased:
  %%    _4
  %% Anno: #{inlined => {'-t_guard_fun/1-inlined-1-',1}}
  _103 = match_fail `function_clause`, _4

  %% Unique:
  %%    _103
  _121 = succeeded:body _103
  br ^1

1:
  _104 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _104
}

%% map_SUITE.erl:1747
%% Counter = 119
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_guard_fun/1-fun-0-'`(_1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _117 = bif:is_map _1
  br _117, ^117, ^102

117:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _41 = get_map_element _1, `s`

  %% Aliased:
  %%    _41
  _103 = succeeded:guard _41
  br _103, ^103, ^102

103:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _40 = get_map_element _1, `v`

  %% Aliased:
  %%    _40
  _104 = succeeded:guard _40
  br _104, ^104, ^102

104:
  switch _41, ^102, [
    { `l`, ^116 },
    { `t`, ^115 },
    { `v`, ^114 }
  ]

114:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _98 = put_tuple `v`, _40
  %% Result type:
  %%    {'v', any()}
  %% Unique:
  %%    _98
  ret _98

115:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _107 = bif:is_tuple _40
  br _107, ^107, ^102

107:
  %% Argument types:
  %%    _40 => {...}
  %% Aliased:
  %%    _40
  _108 = bif:tuple_size _40

  %% Argument types:
  %%    _108 => 0..16777215
  %% Unique:
  %%    _108
  _109 = bif:'=:=' _108, `2`
  br _109, ^106, ^102

106:
  %% Argument types:
  %%    _40 => {any(), any()}
  %% Aliased:
  %%    _40
  _43 = get_tuple_element _40, `0`

  %% Argument types:
  %%    _40 => {any(), any()}
  %% Aliased:
  %%    _40
  _42 = get_tuple_element _40, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42, 
  %%    _43
  _105 = bif:'=:=' _42, _43
  br _105, ^105, ^102

105:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _97 = put_tuple `t`, _43
  %% Result type:
  %%    {'t', any()}
  %% Unique:
  %%    _97
  ret _97

116:
  %% Aliased:
  %%    _40
  _113 = is_nonempty_list _40
  br _113, ^113, ^102

113:
  %% Argument types:
  %%    _40 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _40
  _45 = get_hd _40

  %% Argument types:
  %%    _40 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _40
  _44 = get_tl _40

  %% Aliased:
  %%    _44
  _112 = is_nonempty_list _44
  br _112, ^112, ^102

112:
  %% Argument types:
  %%    _44 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _44
  _47 = get_hd _44

  %% Argument types:
  %%    _44 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _44
  _46 = get_tl _44

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _111 = bif:'=:=' _46, `[]`
  br _111, ^111, ^102

111:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45, 
  %%    _47
  _110 = bif:'=:=' _47, _45
  br _110, ^110, ^102

110:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _96 = put_tuple `l`, _45
  %% Result type:
  %%    {'l', any()}
  %% Unique:
  %%    _96
  ret _96

102:
  %% map_SUITE.erl:1747
  %% Aliased:
  %%    _1
  %% Anno: #{inlined => {'-t_guard_fun/1-inlined-0-',1}}
  _99 = match_fail `function_clause`, _1

  %% Unique:
  %%    _99
  _118 = succeeded:body _99
  br ^1

1:
  _100 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _100
}

%% map_SUITE.erl:1741
%% Counter = 204
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_list_comprehension/1-lc$^3/1-3-'`(_32, Ks) {
0:
  %% Aliased:
  %%    _32
  _199 = is_nonempty_list _32
  br _199, ^199, ^197

199:
  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _153 = get_hd _32

  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _152 = get_tl _32

  %% map_SUITE.erl:1741
  %% Result type:
  %%    list(#{nonempty_list(any())=>{any(), any()}})
  %% Aliased:
  %%    _152, 
  %%    _153, 
  %%    Ks
  _192 = call (`'-t_list_comprehension/1-lc$^4/1-4-'`/4), Ks, _152, _153, Ks

  %% Unique:
  %%    _192
  _198 = succeeded:body _192
  br _198, ^198, ^1

198:
  %% Result type:
  %%    list(#{nonempty_list(any())=>{any(), any()}})
  %% Unique:
  %%    _192
  ret _192

197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _200 = bif:'=:=' _32, `[]`
  br _200, ^200, ^196

200:
  %% Result type:
  %%    nil()
  ret `[]`

196:
  %% Argument types:
  %%    _32 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _32
  _151 = put_tuple `bad_generator`, _32

  %% map_SUITE.erl:1741
  %% Unique:
  %%    _151
  _193 = call (`erlang`:`error`/1), _151

  %% Aliased:
  %%    _193
  _201 = succeeded:body _193
  br ^1

1:
  _194 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _194
}

%% map_SUITE.erl:1741
%% Counter = 203
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_list_comprehension/1-lc$^4/1-4-'`(_34, _152, _153, Ks) {
0:
  %% Aliased:
  %%    _34
  _197 = is_nonempty_list _34
  br _197, ^197, ^195

197:
  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _157 = get_hd _34

  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _156 = get_tl _34

  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _158 = put_list _157, `[]`

  %% Argument types:
  %%    _158 => nonempty_list(any())
  %% Aliased:
  %%    _153
  %% Unique:
  %%    _158
  _159 = put_list _153, _158

  %% Argument types:
  %%    
  %% Aliased:
  %%    _153, 
  %%    _157
  _160 = put_tuple _153, _157

  %% map_SUITE.erl:1741
  %% Unique:
  %%    _159, 
  %%    _160
  _36 = put_map `assoc`, `#{}`, _159, _160

  %% map_SUITE.erl:1741
  %% Result type:
  %%    list(#{nonempty_list(any())=>{any(), any()}})
  %% Aliased:
  %%    _152, 
  %%    _153, 
  %%    _156, 
  %%    Ks
  _37 = call (`'-t_list_comprehension/1-lc$^4/1-4-'`/4), _156, _152, _153, Ks

  %% Unique:
  %%    _37
  _196 = succeeded:body _37
  br _196, ^196, ^1

196:
  %% Argument types:
  %%    _36 => #{nonempty_list(any())=>{any(), any()}}
  %%    _37 => list(#{nonempty_list(any())=>{any(), any()}})
  %% Aliased:
  %%    _36
  %% Unique:
  %%    _37
  _190 = put_list _36, _37
  %% Result type:
  %%    nonempty_list(#{nonempty_list(any())=>{any(), any()}})
  %% Unique:
  %%    _190
  ret _190

195:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _199 = bif:'=:=' _34, `[]`
  br _199, ^199, ^194

199:
  %% map_SUITE.erl:1741
  %% Result type:
  %%    list(#{nonempty_list(any())=>{any(), any()}})
  %% Aliased:
  %%    _152, 
  %%    Ks
  _189 = call (`'-t_list_comprehension/1-lc$^3/1-3-'`/2), _152, Ks

  %% Unique:
  %%    _189
  _198 = succeeded:body _189
  br _198, ^198, ^1

198:
  %% Result type:
  %%    list(#{nonempty_list(any())=>{any(), any()}})
  %% Unique:
  %%    _189
  ret _189

194:
  %% Argument types:
  %%    _34 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _34
  _155 = put_tuple `bad_generator`, _34

  %% map_SUITE.erl:1741
  %% Unique:
  %%    _155
  _191 = call (`erlang`:`error`/1), _155

  %% Aliased:
  %%    _191
  _200 = succeeded:body _191
  br ^1

1:
  _192 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _192
}

%% map_SUITE.erl:1738
%% Counter = 220
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_list_comprehension/1-lc$^2/1-2-'`(_22) {
0:
  %% Aliased:
  %%    _22
  _210 = is_nonempty_list _22
  br _210, ^210, ^213

210:
  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _140 = get_hd _22

  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _139 = get_tl _22

  %% Argument types:
  %%    
  %% Aliased:
  %%    _140
  _209 = bif:is_map _140
  br _209, ^209, ^218

209:
  %% Argument types:
  %%    _140 => map()
  %% Aliased:
  %%    _140
  _141 = get_map_element _140, `"wat"`

  %% Aliased:
  %%    _141
  _196 = succeeded:guard _141
  br _196, ^196, ^218

196:
  %% map_SUITE.erl:1738
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _185 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _185
  _199 = succeeded:guard _185
  br _199, ^206, ^218

206:
  %% Argument types:
  %%    _140 => map()
  %%    _185 => bitstring(1)
  %% Aliased:
  %%    _140, 
  %%    _185
  _143 = get_map_element _140, _185

  %% Aliased:
  %%    _143
  _204 = succeeded:guard _143
  br _204, ^204, ^218

204:
  %% map_SUITE.erl:1738
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _139
  _24 = call (`'-t_list_comprehension/1-lc$^2/1-2-'`/1), _139

  %% Unique:
  %%    _24
  _205 = succeeded:body _24
  br _205, ^205, ^1

205:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141, 
  %%    _143
  _144 = put_tuple _143, _141

  %% Argument types:
  %%    _144 => {any(), any()}
  %%    _24 => list({any(), any()})
  %% Unique:
  %%    _24, 
  %%    _144
  _186 = put_list _144, _24
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _186
  ret _186

218:
  %% map_SUITE.erl:1738
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _139
  _187 = call (`'-t_list_comprehension/1-lc$^2/1-2-'`/1), _139

  %% Unique:
  %%    _187
  _214 = succeeded:body _187
  br _214, ^214, ^1

214:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _187
  ret _187

213:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _216 = bif:'=:=' _22, `[]`
  br _216, ^216, ^212

216:
  %% Result type:
  %%    nil()
  ret `[]`

212:
  %% Argument types:
  %%    _22 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _22
  _146 = put_tuple `bad_generator`, _22

  %% map_SUITE.erl:1738
  %% Unique:
  %%    _146
  _188 = call (`erlang`:`error`/1), _146

  %% Aliased:
  %%    _188
  _217 = succeeded:body _188
  br ^1

1:
  _189 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _189
}

%% map_SUITE.erl:1736
%% Counter = 190
%% bs_ensure_opt: true
%% Parameters
%%    _11 =>
%%     list(1..3)
function `map_SUITE`:`'-t_list_comprehension/1-lc$^1/1-1-'`(_11) {
0:
  %% Unique:
  %%    _11
  _185 = is_nonempty_list _11
  br _185, ^185, ^186

185:
  %% Argument types:
  %%    _11 => nonempty_list(1..3)
  %% Unique:
  %%    _11
  _118 = get_hd _11

  %% Argument types:
  %%    _11 => nonempty_list(1..3)
  %% Unique:
  %%    _11
  _117 = get_tl _11

  %% map_SUITE.erl:1736
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _13 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _13
  _182 = succeeded:body _13
  br _182, ^182, ^1

182:
  %% map_SUITE.erl:1736
  %% Argument types:
  %%    _118 => 1..3
  %% Unique:
  %%    _118
  _14 = bif:'+' _118, `1`

  %% map_SUITE.erl:1736
  %% Aliased:
  %%    _13, 
  %%    _118
  _119 = put_map `assoc`, `#{}`, _13, _118

  %% map_SUITE.erl:1736
  %% Aliased:
  %%    _14, 
  %%    _119
  _15 = put_map `assoc`, _119, `"wat"`, _14

  %% map_SUITE.erl:1736
  %% Result type:
  %%    list(#{nonempty_list(97..119) | bitstring(1)=>1..'+inf'})
  %% Unique:
  %%    _117
  _16 = call (`'-t_list_comprehension/1-lc$^1/1-1-'`/1), _117

  %% Unique:
  %%    _16
  _184 = succeeded:body _16
  br _184, ^184, ^1

184:
  %% Argument types:
  %%    _15 => #{nonempty_list(97..119) | bitstring(1)=>1..'+inf'}
  %%    _16 => list(#{nonempty_list(97..119) | bitstring(1)=>1..'+inf'})
  %% Aliased:
  %%    _15
  %% Unique:
  %%    _16
  _176 = put_list _15, _16
  %% Result type:
  %%    nonempty_list(#{nonempty_list(97..119) | bitstring(1)=>1..'+inf'})
  %% Unique:
  %%    _176
  ret _176

1:
  _178 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _178

186:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% map_SUITE.erl:1735
%% Counter = 186
%% bs_ensure_opt: true
%% Parameters
%%    _3 =>
%%     list(1..3)
function `map_SUITE`:`'-t_list_comprehension/1-lc$^0/1-0-'`(_3) {
0:
  %% Unique:
  %%    _3
  _181 = is_nonempty_list _3
  br _181, ^181, ^182

181:
  %% Argument types:
  %%    _3 => nonempty_list(1..3)
  %% Unique:
  %%    _3
  _103 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_list(1..3)
  %% Unique:
  %%    _3
  _102 = get_tl _3

  %% map_SUITE.erl:1735
  %% Unique:
  %%    _103
  _5 = put_map `assoc`, `#{}`, `k`, _103

  %% map_SUITE.erl:1735
  %% Result type:
  %%    list(#{'k'=>1..3})
  %% Unique:
  %%    _102
  _6 = call (`'-t_list_comprehension/1-lc$^0/1-0-'`/1), _102

  %% Unique:
  %%    _6
  _180 = succeeded:body _6
  br _180, ^180, ^1

180:
  %% Argument types:
  %%    _5 => #{'k'=>1..3}
  %%    _6 => list(#{'k'=>1..3})
  %% Aliased:
  %%    _5
  %% Unique:
  %%    _6
  _174 = put_list _5, _6
  %% Result type:
  %%    nonempty_list(#{'k'=>1..3})
  %% Unique:
  %%    _174
  ret _174

1:
  _176 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _176

182:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% map_SUITE.erl:1675
%% Counter = 35
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_guard_receive_large/1-fun-2-'`(_14) {
0:
  %% map_SUITE.erl:1676
  %% Argument types:
  %%    
  _13 = bif:self

  %% Argument types:
  %%    _13 => pid()
  %% Unique:
  %%    _13
  _22 = put_tuple _13, `hello`

  %% map_SUITE.erl:1676
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _22
  _30 = call (`erlang`:`'!'`/2), _14, _22

  %% Aliased:
  %%    _30
  _33 = succeeded:body _30
  br _33, ^33, ^1

33:
  %% Aliased:
  %%    _30
  ret _30

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% map_SUITE.erl:1672
%% Counter = 47
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_guard_receive_large/1-fun-1-'`(_6, _5) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _44 = bif:is_map _5
  br _44, ^44, ^32

44:
  %% Argument types:
  %%    _5 => map()
  %% Aliased:
  %%    _5
  _20 = get_map_element _5, `procs`

  %% Aliased:
  %%    _20
  _33 = succeeded:guard _20
  br _33, ^33, ^32

33:
  %% Result type:
  %%    'ok'
  _2 = make_fun (`'-t_guard_receive_large/1-fun-0-'`/0)

  %% map_SUITE.erl:1673
  %% Aliased:
  %%    _2
  _3 = call (`erlang`:`spawn_link`/1), _2

  %% Aliased:
  %%    _3
  _34 = succeeded:body _3
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _37 = bif:is_map _20
  br _37, ^37, ^36

37:
  %% map_SUITE.erl:1673
  %% Aliased:
  %%    _3, 
  %%    _20
  _25 = put_map `assoc`, _20, _3, `0`

  %% map_SUITE.erl:1673
  %% Aliased:
  %%    _5, 
  %%    _25
  _27 = put_map `exact`, _5, `procs`, _25

  %% Aliased:
  %%    _27
  _42 = succeeded:body _27
  br _42, ^42, ^1

42:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _27
  ret _27

36:
  %% map_SUITE.erl:1673
  %% Aliased:
  %%    _20
  _26 = match_fail `badmap`, _20

  %% Unique:
  %%    _26
  _38 = succeeded:body _26
  br ^1

32:
  %% map_SUITE.erl:1672
  %% Aliased:
  %%    _5, 
  %%    _6
  %% Anno: #{inlined => {'-t_guard_receive_large/1-inlined-0-',2}}
  _29 = match_fail `function_clause`, _6, _5

  %% Unique:
  %%    _29
  _45 = succeeded:body _29
  br ^1

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% map_SUITE.erl:1673
%% Counter = 28
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_guard_receive_large/1-fun-0-'`() {
0:
  %% map_SUITE.erl:1673
  %% Result type:
  %%    'ok'
  _24 = call (`grecv_loop`/0)

  %% Unique:
  %%    _24
  _27 = succeeded:body _24
  br _27, ^27, ^1

27:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _24
  ret _24

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% map_SUITE.erl:1646
%% Counter = 75
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_guard_receive/1-fun-0-'`() {
0:
  %% map_SUITE.erl:1646
  _71 = call (`guard_receive_loop`/0)

  %% Aliased:
  %%    _71
  _74 = succeeded:body _71
  br _74, ^74, ^1

74:
  %% Aliased:
  %%    _71
  ret _71

1:
  _72 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _72
}

%% map_SUITE.erl:1246
%% Counter = 144
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_update_values/1-fun-1-'`(_26, _25) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _133 = bif:is_tuple _26
  br _133, ^133, ^106

133:
  %% Argument types:
  %%    _26 => {...}
  %% Aliased:
  %%    _26
  _134 = bif:tuple_size _26

  %% Argument types:
  %%    _134 => 0..16777215
  %% Unique:
  %%    _134
  _135 = bif:'=:=' _134, `2`
  br _135, ^132, ^106

132:
  %% Argument types:
  %%    _26 => {any(), any()}
  %% Aliased:
  %%    _26
  _61 = get_tuple_element _26, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _129 = bif:is_tuple _25
  br _129, ^129, ^106

129:
  %% Argument types:
  %%    _25 => {...}
  %% Aliased:
  %%    _25
  _130 = bif:tuple_size _25

  %% Argument types:
  %%    _130 => 0..16777215
  %% Unique:
  %%    _130
  _131 = bif:'=:=' _130, `3`
  br _131, ^141, ^106

141:
  %% Argument types:
  %%    _25 => {any(), any(), any()}
  %% Aliased:
  %%    _25
  _65 = get_tuple_element _25, `0`

  %% Argument types:
  %%    _25 => {any(), any(), any()}
  %% Aliased:
  %%    _25
  _64 = get_tuple_element _25, `1`

  %% Argument types:
  %%    _25 => {any(), any(), any()}
  %% Aliased:
  %%    _25
  _63 = get_tuple_element _25, `2`

  %% map_SUITE.erl:1248
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _63, 
  %%    _64, 
  %%    _65
  _66 = call (`check_val`/3), _63, _65, _64

  %% Unique:
  %%    _66
  _107 = succeeded:body _66
  br _107, ^125, ^1

125:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _123 = bif:is_map _63
  br _123, ^123, ^111

123:
  %% Argument types:
  %%    _63 => map()
  %% Aliased:
  %%    _63
  _68 = get_map_element _63, `val1`

  %% Aliased:
  %%    _68
  _112 = succeeded:guard _68
  br _112, ^112, ^111

112:
  %% Argument types:
  %%    _63 => map()
  %% Aliased:
  %%    _63
  _67 = get_map_element _63, `val2`

  %% Aliased:
  %%    _67
  _113 = succeeded:guard _67
  br _113, ^113, ^111

113:
  %% map_SUITE.erl:1249
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65, 
  %%    _68
  _34 = bif:'=:=' _68, _65
  br _34, ^139, ^111

139:
  %% map_SUITE.erl:1249
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64, 
  %%    _67
  _35 = bif:'=:=' _67, _64
  br _35, ^115, ^111

115:
  %% Argument types:
  %%    _26 => {any(), any()}
  %% Aliased:
  %%    _26
  _62 = get_tuple_element _26, `0`

  %% map_SUITE.erl:1250
  %% Aliased:
  %%    _62
  _22 = call (`id`/1), _62

  %% Aliased:
  %%    _22
  _116 = succeeded:body _22
  br _116, ^116, ^1

116:
  %% map_SUITE.erl:1250
  %% Aliased:
  %%    _61
  _23 = call (`id`/1), _61

  %% Aliased:
  %%    _23
  _117 = succeeded:body _23
  br _117, ^120, ^1

120:
  %% map_SUITE.erl:1250
  %% Aliased:
  %%    _22, 
  %%    _23, 
  %%    _63
  _98 = put_map `exact`, _63, `val1`, _22, `val2`, _23

  %% Aliased:
  %%    _98
  _121 = succeeded:body _98
  br _121, ^121, ^1

121:
  %% Argument types:
  %%    _98 => map()
  %% Aliased:
  %%    _61, 
  %%    _62, 
  %%    _98
  _142 = put_tuple _62, _61, _98
  %% Result type:
  %%    {any(), any(), map()}
  %% Unique:
  %%    _142
  ret _142

111:
  %% map_SUITE.erl:1249
  %% Aliased:
  %%    _63
  _101 = match_fail `badmatch`, _63

  %% Unique:
  %%    _101
  _124 = succeeded:body _101
  br ^1

106:
  %% map_SUITE.erl:1246
  %% Aliased:
  %%    _25, 
  %%    _26
  %% Anno: #{inlined => {'-t_update_values/1-inlined-1-',2}}
  _103 = match_fail `function_clause`, _26, _25

  %% Unique:
  %%    _103
  _136 = succeeded:body _103
  br ^1

1:
  _104 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _104
}

%% map_SUITE.erl:1244
%% Counter = 108
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_update_values/1-lc$^0/1-0-'`(_15) {
0:
  %% Aliased:
  %%    _15
  _103 = is_nonempty_list _15
  br _103, ^103, ^101

103:
  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _53 = get_hd _15

  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _52 = get_tl _15

  %% map_SUITE.erl:1244
  %% Result type:
  %%    list({nonempty_list(any()), {1, 2, 3, nonempty_list(97..119), any()}})
  %% Aliased:
  %%    _52
  _17 = call (`'-t_update_values/1-lc$^0/1-0-'`/1), _52

  %% Unique:
  %%    _17
  _102 = succeeded:body _17
  br _102, ^102, ^1

102:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _55 = put_list _53, `[]`

  %% Argument types:
  %%    _55 => nonempty_list(any())
  %% Unique:
  %%    _55
  _56 = put_list `3`, _55

  %% Argument types:
  %%    _56 => nonempty_list(any())
  %% Unique:
  %%    _56
  _57 = put_list `2`, _56

  %% Argument types:
  %%    _57 => nonempty_list(any())
  %% Unique:
  %%    _57
  _58 = put_list `1`, _57

  %% Argument types:
  %%    _58 => nonempty_list(any())
  %% Aliased:
  %%    _53
  %% Unique:
  %%    _58
  _59 = put_list _53, _58

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _54 = put_tuple `1`, `2`, `3`, `"wat"`, _53

  %% Argument types:
  %%    _59 => nonempty_list(any())
  %%    _54 => {1, 2, 3, nonempty_list(97..119), any()}
  %% Unique:
  %%    _54, 
  %%    _59
  _60 = put_tuple _59, _54

  %% Argument types:
  %%    _60 => {nonempty_list(any()), {1, 2, 3, nonempty_list(97..119), any()}}
  %%    _17 => list({nonempty_list(any()), {1, 2, 3, nonempty_list(97..119), any()}})
  %% Unique:
  %%    _17, 
  %%    _60
  _96 = put_list _60, _17
  %% Result type:
  %%    nonempty_list({nonempty_list(any()), {1, 2, 3, nonempty_list(97..119), any()}})
  %% Unique:
  %%    _96
  ret _96

101:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _104 = bif:'=:=' _15, `[]`
  br _104, ^104, ^100

104:
  %% Result type:
  %%    nil()
  ret `[]`

100:
  %% Argument types:
  %%    _15 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _15
  _51 = put_tuple `bad_generator`, _15

  %% map_SUITE.erl:1244
  %% Unique:
  %%    _51
  _97 = call (`erlang`:`error`/1), _51

  %% Aliased:
  %%    _97
  _105 = succeeded:body _97
  br ^1

1:
  _98 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _98
}

%% map_SUITE.erl:1016
%% Counter = 113
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_update_assoc/1-fun-1-'`() {
0:
  %% Result type:
  %%    42
  ret `42`
}

%% map_SUITE.erl:1011
%% Counter = 112
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_update_assoc/1-fun-0-'`() {
0:
  %% map_SUITE.erl:1012
  _108 = match_fail `badmap`, `0`

  %% Unique:
  %%    _108
  _111 = succeeded:body _108
  br ^1

1:
  _109 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _109
}

%% map_SUITE.erl:975
%% Counter = 91
%% bs_ensure_opt: true
function `map_SUITE`:`'-t_update_map_expressions/1-fun-0-'`() {
0:
  %% map_SUITE.erl:976
  M0 = call (`id`/1), `#{"a" => [1,2,3]}`

  %% Aliased:
  %%    M0
  _80 = succeeded:body M0
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    
  %% Aliased:
  %%    M0
  _89 = bif:is_map M0
  br _89, ^89, ^82

89:
  %% Argument types:
  %%    M0 => map()
  %% Aliased:
  %%    M0
  _83 = has_map_field M0, `"a"`
  br _83, ^86, ^82

86:
  %% map_SUITE.erl:978
  %% Aliased:
  %%    M0
  _75 = put_map `exact`, M0, `"a"`, `b`

  %% Aliased:
  %%    _75
  _87 = succeeded:body _75
  br _87, ^87, ^1

87:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _75
  ret _75

82:
  %% map_SUITE.erl:977
  %% Aliased:
  %%    M0
  _77 = match_fail `badmatch`, M0

  %% Unique:
  %%    _77
  _90 = succeeded:body _77
  br ^1

1:
  _78 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _78
}
