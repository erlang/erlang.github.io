{attribute,{1,1},file,{"beam_ssa_destructive_update.erl",1}}.
{attribute,{90,2},module,beam_ssa_destructive_update}.
{attribute,{93,2},export,[{opt,2}]}.
{attribute,{95,2},
           import,
           {lists,[{foldl,3},
                   {foldr,3},
                   {keysort,2},
                   {splitwith,2},
                   {reverse,1}]}}.
{attribute,{1,1},file,{"beam_ssa_opt.hrl",1}}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{22,1},file,{"beam_ssa_opt.hrl",22}}.
{attribute,
    {23,2},
    record,
    {func_info,
        [{typed_record_field,
             {record_field,
                 {25,10},
                 {atom,{25,10},in},
                 {call,
                     {25,15},
                     {remote,
                         {25,22},
                         {atom,{25,15},ordsets},
                         {atom,{25,23},new}},
                     []}},
             {remote_type,
                 {25,32},
                 [{atom,{25,32},ordsets},
                  {atom,{25,40},ordset},
                  [{user_type,{25,47},func_id,[]}]]}},
         {typed_record_field,
             {record_field,
                 {26,10},
                 {atom,{26,10},out},
                 {call,
                     {26,16},
                     {remote,
                         {26,23},
                         {atom,{26,16},ordsets},
                         {atom,{26,24},new}},
                     []}},
             {remote_type,
                 {26,33},
                 [{atom,{26,33},ordsets},
                  {atom,{26,41},ordset},
                  [{user_type,{26,48},func_id,[]}]]}},
         {typed_record_field,
             {record_field,
                 {30,10},
                 {atom,{30,10},exported},
                 {atom,{30,21},true}},
             {type,{30,29},boolean,[]}},
         {typed_record_field,
             {record_field,{39,10},{atom,{39,10},arg_types},{nil,{39,22}}},
             {type,{39,28},list,[{user_type,{39,33},arg_type_map,[]}]}},
         {typed_record_field,
             {record_field,{50,10},{atom,{50,10},succ_types},{nil,{50,23}}},
             {user_type,{50,29},success_type_set,[]}}]}}.
{attribute,
    {52,2},
    type,
    {arg_key,
        {type,
            {52,20},
            tuple,
            [{ann_type,
                 {52,21},
                 [{var,{52,21},'CallerId'},{user_type,{52,33},func_id,[]}]},
             {ann_type,
                 {53,21},
                 [{var,{53,21},'CallDst'},
                  {remote_type,
                      {53,32},
                      [{atom,{53,32},beam_ssa},{atom,{53,41},b_var},[]]}]}]},
        []}}.
{attribute,{54,2},
           type,
           {arg_type_map,{type,{54,25},
                               map,
                               [{type,{54,38},
                                      map_field_assoc,
                                      [{user_type,{54,28},arg_key,[]},
                                       {type,{54,41},term,[]}]}]},
                         []}}.
{attribute,
    {56,2},
    type,
    {call_self,
        {type,
            {56,22},
            tuple,
            [{atom,{56,23},call_self},
             {ann_type,
                 {56,34},
                 [{var,{56,34},'ArgTypes'},
                  {type,{56,46},list,[{type,{56,47},term,[]}]}]}]},
        []}}.
{attribute,
    {57,2},
    type,
    {success_type_set,
        {type,
            {57,29},
            list,
            [{type,
                 {57,30},
                 tuple,
                 [{ann_type,
                      {57,31},
                      [{var,{57,31},'ArgTypes'},
                       {type,{57,43},list,[{type,{57,44},term,[]}]}]},
                  {ann_type,
                      {58,31},
                      [{var,{58,31},'RetType'},
                       {type,
                           {58,42},
                           union,
                           [{user_type,{58,42},call_self,[]},
                            {type,{58,56},term,[]}]}]}]}]},
        []}}.
{attribute,{63,2},
           type,
           {func_id,{remote_type,{63,20},
                                 [{atom,{63,20},beam_ssa},
                                  {atom,{63,29},b_local},
                                  []]},
                    []}}.
{attribute,
    {64,2},
    type,
    {func_info_db,
        {type,
            {64,25},
            map,
            [{type,
                 {64,38},
                 map_field_assoc,
                 [{user_type,{64,28},func_id,[]},
                  {type,{64,41},record,[{atom,{64,42},func_info}]}]}]},
        []}}.
{attribute,
    {66,2},
    record,
    {opt_st,
        [{typed_record_field,
             {record_field,{66,18},{atom,{66,18},ssa}},
             {type,
                 {66,25},
                 union,
                 [{type,
                      {66,25},
                      list,
                      [{type,
                           {66,26},
                           tuple,
                           [{remote_type,
                                {66,27},
                                [{atom,{66,27},beam_ssa},
                                 {atom,{66,36},label},
                                 []]},
                            {remote_type,
                                {66,44},
                                [{atom,{66,44},beam_ssa},
                                 {atom,{66,53},b_blk},
                                 []]}]}]},
                  {remote_type,
                      {67,25},
                      [{atom,{67,25},beam_ssa},
                       {atom,{67,34},block_map},
                       []]}]}},
         {typed_record_field,
             {record_field,{68,18},{atom,{68,18},args}},
             {type,
                 {68,26},
                 list,
                 [{remote_type,
                      {68,27},
                      [{atom,{68,27},beam_ssa},{atom,{68,36},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{69,18},{atom,{69,18},cnt}},
             {remote_type,
                 {69,25},
                 [{atom,{69,25},beam_ssa},{atom,{69,34},label},[]]}},
         {typed_record_field,
             {record_field,{70,18},{atom,{70,18},anno}},
             {remote_type,
                 {70,26},
                 [{atom,{70,26},beam_ssa},{atom,{70,35},anno},[]]}}]}}.
{attribute,
    {71,2},
    type,
    {st_map,
        {type,
            {71,19},
            map,
            [{type,
                 {71,32},
                 map_field_assoc,
                 [{user_type,{71,22},func_id,[]},
                  {type,{71,35},record,[{atom,{71,36},opt_st}]}]}]},
        []}}.
{attribute,{98,1},file,{"beam_ssa_destructive_update.erl",98}}.
{attribute,{1,1},file,{"beam_types.hrl",1}}.
{attribute,{91,2},
           type,
           {float_range,{type,{91,24},
                              union,
                              [{atom,{91,24},any},
                               {type,{91,32},
                                     tuple,
                                     [{atom,{91,33},'-inf'},
                                      {type,{91,40},float,[]}]},
                               {type,{91,51},
                                     tuple,
                                     [{type,{91,52},float,[]},
                                      {atom,{91,60},'+inf'}]}]},
                        []}}.
{attribute,
    {93,2},
    record,
    {t_atom,
        [{typed_record_field,
             {record_field,{93,18},{atom,{93,18},elements},{atom,{93,27},any}},
             {type,
                 {93,34},
                 union,
                 [{atom,{93,34},any},
                  {remote_type,
                      {93,42},
                      [{atom,{93,42},ordsets},
                       {atom,{93,50},ordset},
                       [{type,{93,57},atom,[]}]]}]}}]}}.
{attribute,
    {94,2},
    record,
    {t_bitstring,
        [{typed_record_field,
             {record_field,
                 {94,23},
                 {atom,{94,23},size_unit},
                 {integer,{94,33},1}},
             {type,{94,38},pos_integer,[]}},
         {typed_record_field,
             {record_field,
                 {99,23},
                 {atom,{99,23},appendable},
                 {atom,{99,34},false}},
             {type,{99,43},boolean,[]}}]}}.
{attribute,
    {100,2},
    record,
    {t_bs_context,
        [{typed_record_field,
             {record_field,
                 {100,24},
                 {atom,{100,24},tail_unit},
                 {integer,{100,34},1}},
             {type,{100,39},pos_integer,[]}}]}}.
{attribute,
    {101,2},
    record,
    {t_bs_matchable,
        [{typed_record_field,
             {record_field,
                 {101,26},
                 {atom,{101,26},tail_unit},
                 {integer,{101,36},1}},
             {type,{101,41},pos_integer,[]}}]}}.
{attribute,
    {102,2},
    record,
    {t_float,
        [{typed_record_field,
             {record_field,
                 {102,19},
                 {atom,{102,19},elements},
                 {atom,{102,28},any}},
             {user_type,{102,35},float_range,[]}}]}}.
{attribute,
    {103,2},
    record,
    {t_fun,
        [{typed_record_field,
             {record_field,{103,17},{atom,{103,17},arity},{atom,{103,23},any}},
             {type,
                 {103,30},
                 union,
                 [{type,{103,30},arity,[]},{atom,{103,40},any}]}},
         {typed_record_field,
             {record_field,
                 {104,17},
                 {atom,{104,17},target},
                 {atom,{104,24},any}},
             {type,
                 {104,31},
                 union,
                 [{type,
                      {104,31},
                      tuple,
                      [{type,{104,32},atom,[]},
                       {type,{104,40},non_neg_integer,[]}]},
                  {atom,{104,61},any}]}},
         {typed_record_field,
             {record_field,{105,17},{atom,{105,17},type},{atom,{105,22},any}},
             {user_type,{105,29},type,[]}}]}}.
{attribute,
    {106,2},
    record,
    {t_integer,
        [{typed_record_field,
             {record_field,
                 {106,21},
                 {atom,{106,21},elements},
                 {atom,{106,30},any}},
             {type,
                 {106,37},
                 union,
                 [{atom,{106,37},any},
                  {remote_type,
                      {106,45},
                      [{atom,{106,45},beam_bounds},
                       {atom,{106,57},range},
                       []]}]}}]}}.
{attribute,
    {107,2},
    record,
    {t_number,
        [{typed_record_field,
             {record_field,
                 {107,20},
                 {atom,{107,20},elements},
                 {atom,{107,29},any}},
             {type,
                 {107,36},
                 union,
                 [{atom,{107,36},any},
                  {remote_type,
                      {107,44},
                      [{atom,{107,44},beam_bounds},
                       {atom,{107,56},range},
                       []]}]}}]}}.
{attribute,
    {113,2},
    record,
    {t_map,
        [{typed_record_field,
             {record_field,
                 {113,17},
                 {atom,{113,17},super_key},
                 {atom,{113,27},any}},
             {user_type,{113,34},type,[]}},
         {typed_record_field,
             {record_field,
                 {114,17},
                 {atom,{114,17},super_value},
                 {atom,{114,29},any}},
             {user_type,{114,36},type,[]}}]}}.
{attribute,
    {122,2},
    record,
    {t_cons,
        [{typed_record_field,
             {record_field,{122,18},{atom,{122,18},type},{atom,{122,23},any}},
             {user_type,{122,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {122,38},
                 {atom,{122,38},terminator},
                 {atom,{122,49},any}},
             {user_type,{122,56},type,[]}}]}}.
{attribute,
    {123,2},
    record,
    {t_list,
        [{typed_record_field,
             {record_field,{123,18},{atom,{123,18},type},{atom,{123,23},any}},
             {user_type,{123,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {123,38},
                 {atom,{123,38},terminator},
                 {atom,{123,49},any}},
             {user_type,{123,56},type,[]}}]}}.
{attribute,
    {125,2},
    record,
    {t_tuple,
        [{typed_record_field,
             {record_field,{125,19},{atom,{125,19},size},{integer,{125,24},0}},
             {type,{125,29},integer,[]}},
         {typed_record_field,
             {record_field,
                 {126,19},
                 {atom,{126,19},exact},
                 {atom,{126,25},false}},
             {type,{126,34},boolean,[]}},
         {typed_record_field,
             {record_field,
                 {127,19},
                 {atom,{127,19},elements},
                 {map,{127,28},[]}},
             {user_type,{127,35},tuple_elements,[]}}]}}.
{attribute,
    {146,2},
    type,
    {tuple_elements,
        {type,
            {146,27},
            map,
            [{type,
                 {146,51},
                 map_field_assoc,
                 [{ann_type,
                      {146,30},
                      [{var,{146,30},'Key'},{type,{146,37},pos_integer,[]}]},
                  {user_type,{146,54},type,[]}]}]},
        []}}.
{attribute,{148,2},
           type,
           {normal_type,{type,{148,24},
                              union,
                              [{atom,{148,24},any},
                               {atom,{148,32},none},
                               {type,{149,24},
                                     record,
                                     [{atom,{149,25},t_number}]},
                               {type,{149,38},
                                     record,
                                     [{atom,{149,39},t_float}]},
                               {type,{149,51},
                                     record,
                                     [{atom,{149,52},t_integer}]},
                               {type,{150,24},record,[{atom,{150,25},t_atom}]},
                               {type,{151,24},
                                     record,
                                     [{atom,{151,25},t_bitstring}]},
                               {type,{151,41},
                                     record,
                                     [{atom,{151,42},t_bs_context}]},
                               {type,{151,59},
                                     record,
                                     [{atom,{151,60},t_bs_matchable}]},
                               {type,{152,24},record,[{atom,{152,25},t_fun}]},
                               {type,{153,24},record,[{atom,{153,25},t_list}]},
                               {type,{153,36},record,[{atom,{153,37},t_cons}]},
                               {atom,{153,48},nil},
                               {atom,{154,24},other},
                               {type,{155,24},record,[{atom,{155,25},t_map}]},
                               {atom,{156,24},identifier},
                               {atom,{157,24},pid},
                               {atom,{158,24},port},
                               {atom,{159,24},reference},
                               {type,{160,24},
                                     record,
                                     [{atom,{160,25},t_tuple}]}]},
                        []}}.
{attribute,{162,2},
           type,
           {other_type,{type,{162,23},
                             union,
                             [{atom,{162,23},none},
                              {type,{162,32},record,[{atom,{162,33},t_fun}]},
                              {type,{162,43},record,[{atom,{162,44},t_map}]},
                              {atom,{163,23},pid},
                              {atom,{163,31},port},
                              {atom,{163,40},reference},
                              {atom,{163,54},identifier},
                              {type,{164,23},
                                    record,
                                    [{atom,{164,24},t_bitstring}]},
                              {type,{164,40},
                                    record,
                                    [{atom,{164,41},t_bs_context}]},
                              {type,{165,23},
                                    record,
                                    [{atom,{165,24},t_bs_matchable}]}]},
                       []}}.
{attribute,
    {167,2},
    type,
    {record_key,
        {type,
            {167,23},
            tuple,
            [{ann_type,
                 {167,24},
                 [{var,{167,24},'Arity'},{type,{167,33},integer,[]}]},
             {ann_type,
                 {167,44},
                 [{var,{167,44},'Tag'},{user_type,{167,51},normal_type,[]}]}]},
        []}}.
{attribute,
    {168,2},
    type,
    {record_set,
        {remote_type,
            {168,23},
            [{atom,{168,23},ordsets},
             {atom,{168,31},ordset},
             [{type,
                  {168,38},
                  tuple,
                  [{user_type,{168,39},record_key,[]},
                   {type,{168,53},record,[{atom,{168,54},t_tuple}]}]}]]},
        []}}.
{attribute,{169,2},
           type,
           {tuple_set,{type,{169,22},
                            union,
                            [{type,{169,22},record,[{atom,{169,23},t_tuple}]},
                             {user_type,{169,35},record_set,[]}]},
                      []}}.
{attribute,
    {173,2},
    record,
    {t_union,
        [{typed_record_field,
             {record_field,{173,19},{atom,{173,19},atom},{atom,{173,24},none}},
             {type,
                 {173,32},
                 union,
                 [{atom,{173,32},none},
                  {type,{173,41},record,[{atom,{173,42},t_atom}]}]}},
         {typed_record_field,
             {record_field,{174,19},{atom,{174,19},list},{atom,{174,24},none}},
             {type,
                 {174,32},
                 union,
                 [{atom,{174,32},none},
                  {type,{174,41},record,[{atom,{174,42},t_list}]},
                  {type,{174,53},record,[{atom,{174,54},t_cons}]},
                  {atom,{174,65},nil}]}},
         {typed_record_field,
             {record_field,
                 {175,19},
                 {atom,{175,19},number},
                 {atom,{175,26},none}},
             {type,
                 {175,34},
                 union,
                 [{atom,{175,34},none},
                  {type,{175,43},record,[{atom,{175,44},t_number}]},
                  {type,{175,57},record,[{atom,{175,58},t_float}]},
                  {type,{175,70},record,[{atom,{175,71},t_integer}]}]}},
         {typed_record_field,
             {record_field,
                 {176,19},
                 {atom,{176,19},tuple_set},
                 {atom,{176,29},none}},
             {type,
                 {176,37},
                 union,
                 [{atom,{176,37},none},{user_type,{176,46},tuple_set,[]}]}},
         {typed_record_field,
             {record_field,
                 {177,19},
                 {atom,{177,19},other},
                 {atom,{177,25},none}},
             {type,
                 {177,33},
                 union,
                 [{atom,{177,33},other},
                  {user_type,{177,43},other_type,[]}]}}]}}.
{attribute,{179,2},
           type,
           {type,{type,{179,17},
                       union,
                       [{type,{179,17},record,[{atom,{179,18},t_union}]},
                        {user_type,{179,30},normal_type,[]}]},
                 []}}.
{attribute,{99,1},file,{"beam_ssa_destructive_update.erl",99}}.
{attribute,{116,2},
           spec,
           {{opt,2},
            [{type,{116,10},
                   'fun',
                   [{type,{116,10},
                          product,
                          [{user_type,{116,11},st_map,[]},
                           {user_type,{116,21},func_info_db,[]}]},
                    {type,{116,40},
                          tuple,
                          [{user_type,{116,41},st_map,[]},
                           {user_type,{116,51},func_info_db,[]}]}]}]}}.
{function,
    {117,1},
    opt,2,
    [{clause,
         {117,1},
         [{var,{117,1},'_'},{var,{117,1},'_'}],
         [[{call,
               {117,1},
               {remote,
                   {117,1},
                   {atom,{117,1},fake},
                   {atom,{117,1},is_beam_bif_info}},
               []}]],
         [{debug_line,117,1},{atom,{117,1},ignore}]},
     {clause,
         {117,1},
         [{var,{117,5},'StMap'},{var,{117,12},'FuncDb'}],
         [],
         [{debug_line,120,2},
          {match,
              {120,5},
              {var,{120,5},'Funs'},
              {lc,{120,12},
                  {block,0,[{var,{120,14},'F'}]},
                  [{block,0,[{atom,{120,24},true}]},
                   {generate,
                       {120,21},
                       {var,{120,19},'F'},
                       {call,
                           {120,24},
                           {remote,
                               {120,28},
                               {atom,{120,24},maps},
                               {atom,{120,29},keys}},
                           [{var,{120,34},'StMap'}]}},
                   {block,0,[{atom,{120,42},true}]},
                   {call,
                       {120,42},
                       {remote,
                           {120,42},
                           {atom,{120,42},erlang},
                           {atom,{120,42},is_map_key}},
                       [{var,{120,53},'F'},{var,{120,56},'FuncDb'}]}]}},
          {debug_line,124,3},
          {match,
              {124,5},
              {tuple,
                  {124,5},
                  [{var,{124,6},'Applicable'},{var,{124,17},'ValuesToTrack'}]},
              {call,
                  {124,34},
                  {atom,{124,34},find_applicable_instructions},
                  [{var,{124,63},'Funs'},{var,{124,69},'StMap'}]}},
          {debug_line,125,4},
          {atom,{125,6},skip},
          {debug_line,131,5},
          {atom,{131,6},skip},
          {debug_line,135,6},
          {'try',
              {135,5},
              [{debug_line,137,7},
               {match,
                   {137,9},
                   {tuple,
                       {137,9},
                       [{var,{137,10},'InitialsToPatch'},
                        {var,{137,26},'ForceCopy'}]},
                   {call,
                       {137,39},
                       {atom,{137,39},find_initial_values},
                       [{var,{137,59},'ValuesToTrack'},
                        {var,{137,74},'StMap'},
                        {var,{137,81},'FuncDb'}]}},
               {debug_line,139,8},
               {call,
                   {139,9},
                   {atom,{139,9},patch_instructions},
                   [{var,{139,28},'Applicable'},
                    {var,{139,40},'InitialsToPatch'},
                    {var,{140,28},'ForceCopy'},
                    {var,{140,39},'StMap'},
                    {var,{140,46},'FuncDb'}]}],
              [],
              [{clause,
                   {142,9},
                   [{tuple,
                        {142,9},
                        [{atom,{142,9},throw},
                         {atom,{142,15},too_deep},
                         {var,{142,15},'_'}]}],
                   [],
                   [{debug_line,144,9},
                    {tuple,
                        {144,13},
                        [{var,{144,14},'StMap'},{var,{144,20},'FuncDb'}]}]}],
              []}]}]}.
{function,{147,1},
          find_applicable_instructions,2,
          [{clause,{147,1},
                   [{var,{147,1},'_'},{var,{147,1},'_'}],
                   [[{call,{147,1},
                           {remote,{147,1},
                                   {atom,{147,1},fake},
                                   {atom,{147,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,147,10},{atom,{147,1},ignore}]},
           {clause,{147,1},
                   [{var,{147,30},'Funs'},{var,{147,36},'StMap'}],
                   [],
                   [{debug_line,148,11},
                    {call,{148,5},
                          {atom,{148,5},fai},
                          [{var,{148,9},'Funs'},
                           {block,0,[{map,{148,15},[]}]},
                           {nil,{148,20}},
                           {var,{148,24},'StMap'}]}]}]}.
{function,
    {150,1},
    fai,4,
    [{clause,
         {150,1},
         [{var,{150,1},'_'},
          {var,{150,1},'_'},
          {var,{150,1},'_'},
          {var,{150,1},'_'}],
         [[{call,
               {150,1},
               {remote,
                   {150,1},
                   {atom,{150,1},fake},
                   {atom,{150,1},is_beam_bif_info}},
               []}]],
         [{debug_line,150,12},{atom,{150,1},ignore}]},
     {clause,
         {150,1},
         [{cons,{150,5},{var,{150,6},'F'},{var,{150,8},'Funs'}},
          {var,{150,15},'Instructions0'},
          {var,{150,30},'Values0'},
          {var,{150,39},'StMap'}],
         [],
         [{debug_line,151,13},
          {match,
              {151,5},
              {tuple,
                  {151,5},
                  [{atom,{151,5},opt_st},
                   {var,{151,17},'Linear'},
                   {var,{151,5},'_'},
                   {var,{151,5},'_'},
                   {var,{151,5},'_'}]},
              {call,
                  {151,27},
                  {remote,
                      {151,27},
                      {atom,{151,27},erlang},
                      {atom,{151,27},map_get}},
                  [{var,{151,35},'F'},{var,{151,38},'StMap'}]}},
          {debug_line,152,14},
          {match,
              {152,5},
              {tuple,
                  {152,5},
                  [{var,{152,6},'Instructions'},{var,{152,19},'Values'}]},
              {call,
                  {152,29},
                  {atom,{152,29},fai_blk},
                  [{var,{152,37},'Linear'},
                   {var,{152,45},'F'},
                   {var,{152,48},'Instructions0'},
                   {var,{152,63},'Values0'}]}},
          {debug_line,153,15},
          {call,
              {153,5},
              {atom,{153,5},fai},
              [{var,{153,9},'Funs'},
               {var,{153,15},'Instructions'},
               {var,{153,29},'Values'},
               {var,{153,37},'StMap'}]}]},
     {clause,
         {154,1},
         [{nil,{154,5}},
          {var,{154,9},'Instructions'},
          {var,{154,23},'Values'},
          {var,{154,31},'_StMap'}],
         [],
         [{debug_line,155,16},
          {tuple,
              {155,5},
              [{var,{155,6},'Instructions'},{var,{155,19},'Values'}]}]}]}.
{function,
    {157,1},
    fai_blk,4,
    [{clause,
         {157,1},
         [{var,{157,1},'_'},
          {var,{157,1},'_'},
          {var,{157,1},'_'},
          {var,{157,1},'_'}],
         [[{call,
               {157,1},
               {remote,
                   {157,1},
                   {atom,{157,1},fake},
                   {atom,{157,1},is_beam_bif_info}},
               []}]],
         [{debug_line,157,17},{atom,{157,1},ignore}]},
     {clause,
         {157,1},
         [{cons,
              {157,9},
              {tuple,
                  {157,10},
                  [{var,{157,11},'_Lbl'},
                   {tuple,
                       {157,16},
                       [{atom,{157,16},b_blk},
                        {var,{157,16},'_'},
                        {var,{157,26},'Is'},
                        {var,{157,16},'_'}]}]},
              {var,{157,31},'Linear'}},
          {var,{157,40},'F'},
          {var,{157,43},'Instructions0'},
          {var,{157,58},'Values0'}],
         [],
         [{debug_line,158,18},
          {match,
              {158,5},
              {tuple,
                  {158,5},
                  [{var,{158,6},'Instructions'},{var,{158,19},'Values'}]},
              {call,
                  {158,29},
                  {atom,{158,29},fai_is},
                  [{var,{158,36},'Is'},
                   {var,{158,40},'F'},
                   {var,{158,43},'Instructions0'},
                   {var,{158,58},'Values0'}]}},
          {debug_line,159,19},
          {call,
              {159,5},
              {atom,{159,5},fai_blk},
              [{var,{159,13},'Linear'},
               {var,{159,21},'F'},
               {var,{159,24},'Instructions'},
               {var,{159,38},'Values'}]}]},
     {clause,
         {160,1},
         [{nil,{160,9}},
          {var,{160,13},'_'},
          {var,{160,16},'Instructions'},
          {var,{160,30},'Values'}],
         [],
         [{debug_line,161,20},
          {tuple,
              {161,5},
              [{var,{161,6},'Instructions'},{var,{161,19},'Values'}]}]}]}.
{function,{163,1},
          fai_is,4,
          [{clause,{163,1},
                   [{var,{163,1},'_'},
                    {var,{163,1},'_'},
                    {var,{163,1},'_'},
                    {var,{163,1},'_'}],
                   [[{call,{163,1},
                           {remote,{163,1},
                                   {atom,{163,1},fake},
                                   {atom,{163,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,163,21},{atom,{163,1},ignore}]},
           {clause,{163,1},
                   [{cons,{163,8},{var,{163,9},'I'},{var,{163,11},'Is'}},
                    {var,{163,16},'F'},
                    {var,{163,19},'Instructions0'},
                    {var,{163,34},'Values0'}],
                   [],
                   [{debug_line,164,22},
                    {match,{164,5},
                           {tuple,{164,5},
                                  [{var,{164,6},'Instructions'},
                                   {var,{164,19},'Values'}]},
                           {call,{164,29},
                                 {atom,{164,29},fai_i},
                                 [{var,{164,35},'I'},
                                  {var,{164,38},'F'},
                                  {var,{164,41},'Instructions0'},
                                  {var,{164,56},'Values0'}]}},
                    {debug_line,165,23},
                    {call,{165,5},
                          {atom,{165,5},fai_is},
                          [{var,{165,12},'Is'},
                           {var,{165,16},'F'},
                           {var,{165,19},'Instructions'},
                           {var,{165,33},'Values'}]}]},
           {clause,{166,1},
                   [{nil,{166,8}},
                    {var,{166,12},'_F'},
                    {var,{166,16},'Instructions'},
                    {var,{166,30},'Values'}],
                   [],
                   [{debug_line,167,24},
                    {tuple,{167,5},
                           [{var,{167,6},'Instructions'},
                            {var,{167,19},'Values'}]}]}]}.
{function,
    {169,1},
    fai_i,4,
    [{clause,
         {169,1},
         [{var,{169,1},'_'},
          {var,{169,1},'_'},
          {var,{169,1},'_'},
          {var,{169,1},'_'}],
         [[{call,
               {169,1},
               {remote,
                   {169,1},
                   {atom,{169,1},fake},
                   {atom,{169,1},is_beam_bif_info}},
               []}]],
         [{debug_line,169,25},{atom,{169,1},ignore}]},
     {clause,
         {169,1},
         [{tuple,
              {169,7},
              [{atom,{169,7},b_set},
               {var,{169,7},'_'},
               {var,{169,18},'Dst'},
               {atom,{169,26},bs_create_bin},
               {cons,
                   {170,19},
                   {tuple,
                       {170,20},
                       [{atom,{170,20},b_literal},{atom,{170,35},append}]},
                   {cons,
                       {171,20},
                       {var,{171,20},'_'},
                       {cons,
                           {172,20},
                           {match,
                               {172,20},
                               {var,{172,20},'Lit'},
                               {tuple,
                                   {172,24},
                                   [{atom,{172,24},b_literal},
                                    {bin,{172,40},[]}]}},
                           {var,{172,46},'_'}}}}]},
          {var,{173,7},'F'},
          {var,{173,10},'Instructions0'},
          {var,{173,25},'Values'}],
         [],
         [{debug_line,177,26},
          {match,
              {177,5},
              {var,{177,5},'Instructions'},
              {call,
                  {178,9},
                  {atom,{178,9},add_applicable_instruction},
                  [{var,{178,36},'Dst'},
                   {block,0,
                       [{debug_line,179,27},
                        {tuple,
                            {179,36},
                            [{atom,{179,37},appendable_binary},
                             {var,{179,55},'Dst'},
                             {var,{179,59},'Lit'}]}]},
                   {var,{180,36},'F'},
                   {var,{180,39},'Instructions0'}]}},
          {debug_line,181,28},
          {tuple,
              {181,5},
              [{var,{181,6},'Instructions'},{var,{181,19},'Values'}]}]},
     {clause,
         {182,1},
         [{tuple,
              {182,7},
              [{atom,{182,7},b_set},
               {match,
                   {184,19},
                   {map,
                       {184,19},
                       [{map_field_exact,
                            {184,40},
                            {atom,{184,21},first_fragment_dies},
                            {atom,{184,42},true}}]},
                   {var,{184,48},'Anno'}},
               {var,{182,18},'Dst'},
               {atom,{182,26},bs_create_bin},
               {cons,
                   {183,19},
                   {tuple,
                       {183,20},
                       [{atom,{183,20},b_literal},{atom,{183,35},append}]},
                   {cons,
                       {183,43},
                       {var,{183,43},'SegmentInfo'},
                       {cons,
                           {183,55},
                           {var,{183,55},'Var'},
                           {var,{183,59},'_'}}}}]},
          {var,{185,7},'F'},
          {var,{185,10},'Instructions0'},
          {var,{185,25},'Values0'}],
         [],
         [{debug_line,186,29},
          {'case',
              {186,5},
              {'case',
                  {186,10},
                  {call,
                      {186,10},
                      {atom,{186,10},is_unique},
                      [{var,{186,20},'Var'},{var,{186,25},'Anno'}]},
                  [{clause,
                       {186,10},
                       [{atom,{186,10},true}],
                       [],
                       [{call,
                            {186,39},
                            {atom,{186,39},is_appendable},
                            [{var,{186,53},'Anno'},
                             {var,{186,59},'SegmentInfo'}]}]},
                   {clause,
                       {186,10},
                       [{atom,{186,10},false}],
                       [],
                       [{atom,{186,10},false}]},
                   {clause,
                       [{generated,true},{location,{186,10}}],
                       [{var,{186,10},cov1}],
                       [],
                       [{call,
                            {186,10},
                            {remote,
                                {186,10},
                                {atom,{186,10},erlang},
                                {atom,{186,10},error}},
                            [{block,0,
                                 [{tuple,
                                      {186,10},
                                      [{atom,{186,10},badarg},
                                       {var,{186,10},cov1}]}]}]}]}]},
              [{clause,
                   {187,9},
                   [{atom,{187,9},true}],
                   [],
                   [{debug_line,188,30},
                    {match,
                        {188,13},
                        {var,{188,13},'Instructions'},
                        {call,
                            {189,17},
                            {atom,{189,17},add_applicable_instruction},
                            [{var,{189,44},'Dst'},
                             {block,0,
                                 [{debug_line,190,31},
                                  {tuple,
                                      {190,44},
                                      [{atom,{190,45},appendable_binary},
                                       {var,{190,63},'Dst'},
                                       {var,{190,67},'Var'}]}]},
                             {var,{191,44},'F'},
                             {var,{191,47},'Instructions0'}]}},
                    {debug_line,192,32},
                    {match,
                        {192,13},
                        {var,{192,13},'Values'},
                        {call,
                            {192,22},
                            {atom,{192,22},add_tracked_var},
                            [{var,{192,38},'Var'},
                             {atom,{192,43},init_writable},
                             {var,{192,58},'F'},
                             {var,{192,61},'Values0'}]}},
                    {debug_line,193,33},
                    {tuple,
                        {193,13},
                        [{var,{193,14},'Instructions'},
                         {var,{193,27},'Values'}]}]},
               {clause,
                   {194,9},
                   [{atom,{194,9},false}],
                   [],
                   [{debug_line,195,34},
                    {tuple,
                        {195,13},
                        [{var,{195,14},'Instructions0'},
                         {var,{195,28},'Values0'}]}]}]}]},
     {clause,
         {197,1},
         [{tuple,
              {197,7},
              [{atom,{197,7},b_set},
               {match,
                   {199,19},
                   {map,
                       {199,19},
                       [{map_field_exact,
                            {199,32},
                            {atom,{199,21},source_dies},
                            {atom,{199,34},true}}]},
                   {var,{199,40},'Anno'}},
               {var,{197,18},'Dst'},
               {atom,{197,25},update_record},
               {cons,
                   {198,19},
                   {var,{198,20},'_Hint'},
                   {cons,
                       {198,26},
                       {var,{198,26},'_Size'},
                       {cons,
                           {198,32},
                           {var,{198,32},'Src'},
                           {var,{198,36},'_Updates'}}}}]},
          {var,{200,7},'F'},
          {var,{200,10},'Instructions0'},
          {var,{200,25},'Values0'}],
         [],
         [{debug_line,201,35},
          {'case',
              {201,5},
              {call,
                  {201,10},
                  {atom,{201,10},is_unique},
                  [{var,{201,20},'Src'},{var,{201,25},'Anno'}]},
              [{clause,
                   {202,9},
                   [{atom,{202,9},true}],
                   [],
                   [{debug_line,203,36},
                    {match,
                        {203,13},
                        {var,{203,13},'Instructions'},
                        {call,
                            {204,17},
                            {atom,{204,17},add_applicable_instruction},
                            [{var,{204,44},'Dst'},
                             {block,0,
                                 [{debug_line,205,37},
                                  {tuple,
                                      {205,44},
                                      [{atom,{205,45},tuple_update},
                                       {var,{205,58},'Dst'},
                                       {var,{205,62},'Src'}]}]},
                             {var,{206,44},'F'},
                             {var,{206,47},'Instructions0'}]}},
                    {debug_line,207,38},
                    {match,
                        {207,13},
                        {var,{207,13},'Values'},
                        {call,
                            {207,22},
                            {atom,{207,22},add_tracked_var},
                            [{var,{207,38},'Src'},
                             {atom,{207,43},heap_tuple},
                             {var,{207,55},'F'},
                             {var,{207,58},'Values0'}]}},
                    {debug_line,208,39},
                    {tuple,
                        {208,13},
                        [{var,{208,14},'Instructions'},
                         {var,{208,27},'Values'}]}]},
               {clause,
                   {209,9},
                   [{atom,{209,9},false}],
                   [],
                   [{debug_line,210,40},
                    {tuple,
                        {210,13},
                        [{var,{210,14},'Instructions0'},
                         {var,{210,28},'Values0'}]}]}]}]},
     {clause,
         {212,1},
         [{var,{212,7},'_I'},
          {var,{212,11},'_F'},
          {var,{212,15},'Instructions'},
          {var,{212,29},'Values'}],
         [],
         [{debug_line,213,41},
          {tuple,
              {213,5},
              [{var,{213,6},'Instructions'},{var,{213,19},'Values'}]}]}]}.
{function,
    {215,1},
    add_applicable_instruction,4,
    [{clause,
         {215,1},
         [{var,{215,1},'_'},
          {var,{215,1},'_'},
          {var,{215,1},'_'},
          {var,{215,1},'_'}],
         [[{call,
               {215,1},
               {remote,
                   {215,1},
                   {atom,{215,1},fake},
                   {atom,{215,1},is_beam_bif_info}},
               []}]],
         [{debug_line,215,42},{atom,{215,1},ignore}]},
     {clause,
         {215,1},
         [{var,{215,28},'Instr'},
          {var,{215,35},'Info'},
          {var,{215,41},'F'},
          {var,{215,44},'Instructions0'}],
         [],
         [{debug_line,216,43},
          {match,
              {216,5},
              {var,{216,5},'PerFun0'},
              {call,
                  {216,15},
                  {remote,{216,19},{atom,{216,15},maps},{atom,{216,20},get}},
                  [{var,{216,24},'F'},
                   {var,{216,27},'Instructions0'},
                   {block,0,[{map,{216,42},[]}]}]}},
          {debug_line,217,44},
          {match,
              {217,5},
              {var,{217,5},'PerInstruction'},
              {call,
                  {217,22},
                  {remote,{217,26},{atom,{217,22},maps},{atom,{217,27},get}},
                  [{var,{217,31},'Instr'},
                   {var,{217,38},'PerFun0'},
                   {nil,{217,47}}]}},
          {debug_line,218,45},
          {match,
              {218,5},
              {var,{218,5},'PerFun'},
              {map,
                  {218,21},
                  {var,{218,14},'PerFun0'},
                  [{map_field_assoc,
                       {218,28},
                       {var,{218,23},'Instr'},
                       {cons,
                           {218,30},
                           {var,{218,31},'Info'},
                           {var,{218,36},'PerInstruction'}}}]}},
          {debug_line,219,46},
          {map,
              {219,18},
              {var,{219,5},'Instructions0'},
              [{map_field_assoc,
                   {219,21},
                   {var,{219,20},'F'},
                   {var,{219,23},'PerFun'}}]}]}]}.
{function,{221,1},
          add_tracked_var,4,
          [{clause,{221,1},
                   [{var,{221,1},'_'},
                    {var,{221,1},'_'},
                    {var,{221,1},'_'},
                    {var,{221,1},'_'}],
                   [[{call,{221,1},
                           {remote,{221,1},
                                   {atom,{221,1},fake},
                                   {atom,{221,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,221,47},{atom,{221,1},ignore}]},
           {clause,{221,1},
                   [{var,{221,17},'Var'},
                    {var,{221,22},'Info'},
                    {var,{221,28},'F'},
                    {var,{221,31},'Vars'}],
                   [],
                   [{debug_line,222,48},
                    {cons,{222,5},
                          {tuple,{222,6},
                                 [{var,{222,7},'F'},
                                  {var,{222,9},'Var'},
                                  {var,{222,13},'Info'}]},
                          {var,{222,19},'Vars'}}]}]}.
{attribute,{224,2},
           record,
           {fiv_st,[{record_field,{226,10},{atom,{226,10},funcdb}},
                    {record_field,{227,10},{atom,{227,10},stmap}},
                    {record_field,{228,10},
                                  {atom,{228,10},defsdb},
                                  {map,{228,19},[]}},
                    {record_field,{229,10},
                                  {atom,{229,10},literals},
                                  {map,{229,21},[]}},
                    {record_field,{230,10},
                                  {atom,{230,10},valuesdb},
                                  {map,{230,21},[]}},
                    {record_field,{231,10},
                                  {atom,{231,10},force_copy},
                                  {map,{231,23},[]}}]}}.
{function,
    {234,1},
    find_initial_values,3,
    [{clause,
         {234,1},
         [{var,{234,1},'_'},{var,{234,1},'_'},{var,{234,1},'_'}],
         [[{call,
               {234,1},
               {remote,
                   {234,1},
                   {atom,{234,1},fake},
                   {atom,{234,1},is_beam_bif_info}},
               []}]],
         [{debug_line,234,49},{atom,{234,1},ignore}]},
     {clause,
         {234,1},
         [{var,{234,21},'ValuesToTrack'},
          {var,{234,36},'StMap'},
          {var,{234,43},'FuncDb'}],
         [],
         [{debug_line,235,50},
          {call,
              {235,5},
              {atom,{235,5},fiv},
              [{var,{235,9},'ValuesToTrack'},
               {block,0,
                   [{tuple,
                        {235,24},
                        [{atom,{235,24},fiv_st},
                         {var,{235,39},'FuncDb'},
                         {var,{235,52},'StMap'},
                         {map,{235,24},[]},
                         {map,{235,24},[]},
                         {map,{235,24},[]},
                         {map,{235,24},[]}]}]}]}]}]}.
{function,
    {237,1},
    fiv,2,
    [{clause,
         {237,1},
         [{var,{237,1},'_'},{var,{237,1},'_'}],
         [[{call,
               {237,1},
               {remote,
                   {237,1},
                   {atom,{237,1},fake},
                   {atom,{237,1},is_beam_bif_info}},
               []}]],
         [{debug_line,237,51},{atom,{237,1},ignore}]},
     {clause,
         {237,1},
         [{cons,
              {237,5},
              {tuple,
                  {237,6},
                  [{var,{237,7},'Fun'},
                   {var,{237,11},'Dst'},
                   {var,{237,15},'Kind'}]},
              {var,{237,21},'Work'}},
          {match,
              {237,28},
              {var,{237,28},'FivSt0'},
              {tuple,
                  {237,35},
                  [{atom,{237,35},fiv_st},
                   {var,{237,35},'_'},
                   {var,{237,49},'StMap'},
                   {var,{237,35},'_'},
                   {var,{237,35},'_'},
                   {var,{237,35},'_'},
                   {var,{237,35},'_'}]}}],
         [],
         [{debug_line,238,52},
          {match,
              {238,5},
              {map,
                  {238,5},
                  [{map_field_exact,
                       {238,10},
                       {var,{238,7},'Fun'},
                       {tuple,
                           {238,12},
                           [{atom,{238,12},opt_st},
                            {var,{238,24},'SSA'},
                            {var,{238,33},'Args'},
                            {var,{238,12},'_'},
                            {var,{238,12},'_'}]}}]},
              {var,{238,42},'StMap'}},
          {debug_line,239,53},
          {match,
              {239,5},
              {tuple,
                  {239,5},
                  [{var,{239,6},'DefsInFun'},{var,{239,16},'FivSt'}]},
              {call,
                  {239,25},
                  {atom,{239,25},fiv_defs_in_fun},
                  [{var,{239,41},'Fun'},
                   {var,{239,46},'Args'},
                   {var,{239,52},'SSA'},
                   {var,{239,57},'FivSt0'}]}},
          {debug_line,240,54},
          {match,
              {240,5},
              {var,{240,5},'ValuesInFun'},
              {call,
                  {240,19},
                  {atom,{240,19},fiv_values_in_fun},
                  [{var,{240,37},'Fun'},{var,{240,42},'FivSt'}]}},
          {debug_line,241,55},
          {atom,{241,6},skip},
          {debug_line,242,56},
          {call,
              {242,5},
              {atom,{242,5},fiv_track_value_in_fun},
              [{block,0,
                   [{cons,
                        {242,28},
                        {tuple,
                            {242,29},
                            [{var,{242,30},'Dst'},
                             {tuple,
                                 {242,34},
                                 [{atom,{242,35},self},
                                  {var,{242,40},'Kind'}]}]},
                        {nil,{242,46}}}]},
               {var,{242,49},'Fun'},
               {var,{242,54},'Work'},
               {var,{243,28},'DefsInFun'},
               {var,{243,39},'ValuesInFun'},
               {var,{243,52},'FivSt'}]}]},
     {clause,
         {244,1},
         [{cons,
              {244,5},
              {tuple,
                  {244,6},
                  [{var,{244,7},'Fun'},
                   {tuple,
                       {244,11},
                       [{atom,{244,12},track_call_argument},
                        {var,{244,32},'Callee'},
                        {var,{244,39},'Element'},
                        {var,{244,47},'Idx'}]}]},
              {var,{244,53},'Work'}},
          {match,
              {245,5},
              {var,{245,5},'FivSt0'},
              {tuple,
                  {245,12},
                  [{atom,{245,12},fiv_st},
                   {var,{245,12},'_'},
                   {var,{245,26},'StMap'},
                   {var,{245,12},'_'},
                   {var,{245,12},'_'},
                   {var,{245,12},'_'},
                   {var,{245,12},'_'}]}}],
         [],
         [{debug_line,246,57},
          {match,
              {246,5},
              {map,
                  {246,5},
                  [{map_field_exact,
                       {246,10},
                       {var,{246,7},'Fun'},
                       {tuple,
                           {246,12},
                           [{atom,{246,12},opt_st},
                            {var,{246,24},'SSA'},
                            {var,{246,33},'Args'},
                            {var,{246,12},'_'},
                            {var,{246,12},'_'}]}}]},
              {var,{246,42},'StMap'}},
          {debug_line,247,58},
          {atom,{247,6},skip},
          {debug_line,249,59},
          {match,
              {249,5},
              {tuple,
                  {249,5},
                  [{var,{249,6},'DefsInFun'},{var,{249,16},'FivSt1'}]},
              {call,
                  {249,26},
                  {atom,{249,26},fiv_defs_in_fun},
                  [{var,{249,42},'Fun'},
                   {var,{249,47},'Args'},
                   {var,{249,53},'SSA'},
                   {var,{249,58},'FivSt0'}]}},
          {debug_line,250,60},
          {match,
              {250,5},
              {var,{250,5},'ValuesInFun'},
              {call,
                  {250,19},
                  {atom,{250,19},fiv_values_in_fun},
                  [{var,{250,37},'Fun'},{var,{250,42},'FivSt1'}]}},
          {debug_line,251,61},
          {match,
              {251,5},
              {tuple,{251,5},[{var,{251,6},'Vars'},{var,{251,11},'FivSt'}]},
              {call,
                  {252,9},
                  {atom,{252,9},fiv_get_call_arguments},
                  [{var,{252,32},'Callee'},
                   {var,{252,40},'Element'},
                   {var,{252,49},'Idx'},
                   {var,{252,54},'DefsInFun'},
                   {var,{252,65},'Fun'},
                   {var,{252,70},'FivSt1'}]}},
          {debug_line,253,62},
          {atom,{253,6},skip},
          {debug_line,254,63},
          {call,
              {254,5},
              {atom,{254,5},fiv_track_value_in_fun},
              [{var,{254,28},'Vars'},
               {var,{254,34},'Fun'},
               {var,{254,39},'Work'},
               {var,{254,45},'DefsInFun'},
               {var,{254,56},'ValuesInFun'},
               {var,{254,69},'FivSt'}]}]},
     {clause,
         {255,1},
         [{cons,
              {255,5},
              {tuple,
                  {255,6},
                  [{var,{255,7},'Fun'},
                   {tuple,
                       {255,11},
                       [{atom,{255,12},track_result},
                        {var,{255,25},'Element'}]}]},
              {var,{255,35},'Work'}},
          {match,
              {255,42},
              {var,{255,42},'FivSt0'},
              {tuple,
                  {255,49},
                  [{atom,{255,49},fiv_st},
                   {var,{255,49},'_'},
                   {var,{255,63},'StMap'},
                   {var,{255,49},'_'},
                   {var,{255,49},'_'},
                   {var,{255,49},'_'},
                   {var,{255,49},'_'}]}}],
         [],
         [{debug_line,256,64},
          {match,
              {256,5},
              {map,
                  {256,5},
                  [{map_field_exact,
                       {256,10},
                       {var,{256,7},'Fun'},
                       {tuple,
                           {256,12},
                           [{atom,{256,12},opt_st},
                            {var,{256,24},'SSA'},
                            {var,{256,33},'Args'},
                            {var,{256,12},'_'},
                            {var,{256,12},'_'}]}}]},
              {var,{256,42},'StMap'}},
          {debug_line,257,65},
          {match,
              {257,5},
              {tuple,
                  {257,5},
                  [{var,{257,6},'DefsInFun'},{var,{257,16},'FivSt1'}]},
              {call,
                  {257,26},
                  {atom,{257,26},fiv_defs_in_fun},
                  [{var,{257,42},'Fun'},
                   {var,{257,47},'Args'},
                   {var,{257,53},'SSA'},
                   {var,{257,58},'FivSt0'}]}},
          {debug_line,258,66},
          {match,
              {258,5},
              {var,{258,5},'ValuesInFun'},
              {call,
                  {258,19},
                  {atom,{258,19},fiv_values_in_fun},
                  [{var,{258,37},'Fun'},{var,{258,42},'FivSt0'}]}},
          {debug_line,259,67},
          {atom,{259,6},skip},
          {debug_line,260,68},
          {match,
              {260,5},
              {tuple,{260,5},[{var,{260,6},'Results'},{var,{260,14},'FivSt'}]},
              {call,
                  {260,23},
                  {atom,{260,23},fiv_get_results},
                  [{var,{260,39},'SSA'},
                   {var,{260,44},'Element'},
                   {var,{260,53},'Fun'},
                   {var,{260,58},'FivSt1'}]}},
          {debug_line,261,69},
          {atom,{261,6},skip},
          {debug_line,262,70},
          {call,
              {262,5},
              {atom,{262,5},fiv_track_value_in_fun},
              [{var,{262,28},'Results'},
               {var,{262,37},'Fun'},
               {var,{262,42},'Work'},
               {var,{262,48},'DefsInFun'},
               {var,{262,59},'ValuesInFun'},
               {var,{262,72},'FivSt'}]}]},
     {clause,
         {263,1},
         [{nil,{263,5}},{var,{263,9},'FivSt'}],
         [],
         [{debug_line,264,71},
          {tuple,
              {264,5},
              [{'case',
                   {264,6},
                   {var,{264,6},'FivSt'},
                   [{clause,
                        [{generated,true},{location,{264,6}}],
                        [{tuple,
                             [{generated,true},{location,{264,6}}],
                             [{atom,{264,6},fiv_st},
                              {var,{264,6},'_'},
                              {var,{264,6},'_'},
                              {var,{264,6},'_'},
                              {var,{264,6},rec0},
                              {var,{264,6},'_'},
                              {var,{264,6},'_'}]}],
                        [],
                        [{var,{264,6},rec0}]},
                    {clause,
                        [{generated,true},{location,{264,6}}],
                        [{var,{264,6},rec0}],
                        [],
                        [{call,
                             [{generated,true},{location,{264,6}}],
                             {remote,
                                 [{generated,true},{location,{264,6}}],
                                 {atom,
                                     [{generated,true},{location,{264,6}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{264,6}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{264,6}}],
                                  [{atom,
                                       [{generated,true},{location,{264,6}}],
                                       badrecord},
                                   {var,{264,6},rec0}]}]}]}]},
               {'case',
                   {264,28},
                   {var,{264,28},'FivSt'},
                   [{clause,
                        [{generated,true},{location,{264,28}}],
                        [{tuple,
                             [{generated,true},{location,{264,28}}],
                             [{atom,{264,28},fiv_st},
                              {var,{264,28},'_'},
                              {var,{264,28},'_'},
                              {var,{264,28},'_'},
                              {var,{264,28},'_'},
                              {var,{264,28},'_'},
                              {var,{264,28},rec1}]}],
                        [],
                        [{var,{264,28},rec1}]},
                    {clause,
                        [{generated,true},{location,{264,28}}],
                        [{var,{264,28},rec1}],
                        [],
                        [{call,
                             [{generated,true},{location,{264,28}}],
                             {remote,
                                 [{generated,true},{location,{264,28}}],
                                 {atom,
                                     [{generated,true},{location,{264,28}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{264,28}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{264,28}}],
                                  [{atom,
                                       [{generated,true},{location,{264,28}}],
                                       badrecord},
                                   {var,{264,28},rec1}]}]}]}]}]}]}]}.
{function,
 {266,1},
 patch_instructions,5,
 [{clause,
   {266,1},
   [{var,{266,1},'_'},
    {var,{266,1},'_'},
    {var,{266,1},'_'},
    {var,{266,1},'_'},
    {var,{266,1},'_'}],
   [[{call,
      {266,1},
      {remote,{266,1},{atom,{266,1},fake},{atom,{266,1},is_beam_bif_info}},
      []}]],
   [{debug_line,266,72},{atom,{266,1},ignore}]},
  {clause,
   {266,1},
   [{var,{266,20},'Applicable'},
    {var,{266,32},'InitialsToPatch'},
    {var,{266,49},'ForceCopy'},
    {var,{266,60},'StMap0'},
    {var,{266,68},'FuncDb'}],
   [],
   [{debug_line,267,73},
    {atom,{267,6},skip},
    {debug_line,268,74},
    {atom,{268,6},skip},
    {debug_line,269,75},
    {atom,{269,6},skip},
    {debug_line,272,76},
    {match,
     {272,5},
     {var,{272,5},'Merge'},
     {'fun',
      {273,9},
      {clauses,
       [{clause,
         {273,12},
         [{var,{273,13},'A'},{var,{273,16},'B'}],
         [],
         [{debug_line,274,77},
          {call,
           {274,17},
           {remote,{274,21},{atom,{274,17},maps},{atom,{274,22},fold}},
           [{block,0,
             [{'fun',
               {274,27},
               {clauses,
                [{clause,
                  {274,30},
                  [{var,{274,31},'VarOrLbl'},
                   {var,{274,41},'Info0'},
                   {var,{274,48},'Acc'}],
                  [],
                  [{debug_line,275,78},
                   {match,
                    {275,35},
                    {var,{275,35},'Info'},
                    {op,
                     {275,47},
                     '++',
                     {var,{275,42},'Info0'},
                     {call,
                      {275,49},
                      {remote,
                       {275,53},
                       {atom,{275,49},maps},
                       {atom,{275,54},get}},
                      [{var,{275,58},'VarOrLbl'},
                       {var,{275,68},'Acc'},
                       {nil,{275,73}}]}}},
                   {debug_line,276,79},
                   {map,
                    {276,38},
                    {var,{276,35},'Acc'},
                    [{map_field_assoc,
                      {276,49},
                      {var,{276,40},'VarOrLbl'},
                      {var,{276,52},'Info'}}]}]}]}}]},
            {var,{277,32},'A'},
            {var,{277,35},'B'}]}]}]}}},
    {debug_line,279,80},
    {match,
     {279,5},
     {var,{279,5},'Patches0'},
     {call,
      {279,16},
      {remote,{279,20},{atom,{279,16},maps},{atom,{279,21},fold}},
      [{block,0,
        [{'fun',
          {279,26},
          {clauses,
           [{clause,
             {279,29},
             [{var,{279,30},'Fun'},
              {var,{279,35},'Initials'},
              {var,{279,45},'Acc'}],
             [],
             [{debug_line,280,81},
              {match,
               {280,34},
               {var,{280,34},'InitialsInFun'},
               {call,
                {280,50},
                {var,{280,50},'Merge'},
                [{var,{280,56},'Initials'},
                 {block,0,
                  [{debug_line,281,82},
                   {call,
                    {281,56},
                    {remote,{281,60},{atom,{281,56},maps},{atom,{281,61},get}},
                    [{var,{281,65},'Fun'},
                     {var,{281,70},'Acc'},
                     {block,0,[{map,{281,75},[]}]}]}]}]}},
              {debug_line,282,83},
              {map,
               {282,37},
               {var,{282,34},'Acc'},
               [{map_field_assoc,
                 {282,43},
                 {var,{282,39},'Fun'},
                 {var,{282,46},'InitialsInFun'}}]}]}]}}]},
       {var,{283,31},'Applicable'},
       {var,{283,43},'InitialsToPatch'}]}},
    {debug_line,284,84},
    {match,
     {284,5},
     {var,{284,5},'Patches'},
     {call,
      {284,15},
      {remote,{284,19},{atom,{284,15},maps},{atom,{284,20},fold}},
      [{block,0,
        [{'fun',
          {284,25},
          {clauses,
           [{clause,
             {284,28},
             [{var,{284,29},'Fun'},
              {var,{284,34},'Initials'},
              {var,{284,44},'Acc'}],
             [],
             [{debug_line,285,85},
              {match,
               {285,33},
               {var,{285,33},'InitialsInFun'},
               {call,
                {285,49},
                {var,{285,49},'Merge'},
                [{var,{285,55},'Initials'},
                 {block,0,
                  [{debug_line,286,86},
                   {call,
                    {286,55},
                    {remote,{286,59},{atom,{286,55},maps},{atom,{286,60},get}},
                    [{var,{286,64},'Fun'},
                     {var,{286,69},'Acc'},
                     {block,0,[{map,{286,74},[]}]}]}]}]}},
              {debug_line,287,87},
              {map,
               {287,36},
               {var,{287,33},'Acc'},
               [{map_field_assoc,
                 {287,42},
                 {var,{287,38},'Fun'},
                 {var,{287,45},'InitialsInFun'}}]}]}]}}]},
       {var,{288,30},'Patches0'},
       {var,{288,40},'ForceCopy'}]}},
    {debug_line,289,88},
    {atom,{289,6},skip},
    {debug_line,290,89},
    {match,
     {290,5},
     {var,{290,5},'StMap'},
     {call,
      {290,13},
      {remote,{290,17},{atom,{290,13},maps},{atom,{290,18},fold}},
      [{block,0,
        [{'fun',
          {290,23},
          {clauses,
           [{clause,
             {290,26},
             [{var,{290,27},'Fun'},
              {var,{290,32},'Ps'},
              {var,{290,36},'StMapAcc'}],
             [],
             [{debug_line,291,90},
              {match,
               {291,31},
               {var,{291,31},'OptSt'},
               {match,
                {291,37},
                {tuple,
                 {291,37},
                 [{atom,{291,37},opt_st},
                  {var,{291,49},'SSA0'},
                  {var,{291,37},'_'},
                  {var,{291,58},'Cnt0'},
                  {var,{291,37},'_'}]},
                {call,
                 {292,35},
                 {remote,
                  {292,35},
                  {atom,{292,35},erlang},
                  {atom,{292,35},map_get}},
                 [{var,{292,43},'Fun'},{var,{292,48},'StMapAcc'}]}}},
              {debug_line,293,91},
              {match,
               {293,31},
               {tuple,{293,31},[{var,{293,32},'SSA'},{var,{293,36},'Cnt'}]},
               {call,
                {293,43},
                {atom,{293,43},patch_f},
                [{var,{293,51},'SSA0'},
                 {var,{293,57},'Cnt0'},
                 {var,{293,63},'Ps'}]}},
              {debug_line,294,92},
              {map,
               {294,39},
               {var,{294,31},'StMapAcc'},
               [{map_field_assoc,
                 {294,45},
                 {var,{294,41},'Fun'},
                 {block,
                  {294,48},
                  [{match,{294,48},{var,{294,48},rec2},{var,{294,48},'OptSt'}},
                   {'case',
                    {294,61},
                    {var,{294,48},rec2},
                    [{clause,
                      {294,61},
                      [{tuple,
                        {294,61},
                        [{atom,{294,61},opt_st},
                         {var,{294,61},'_'},
                         {var,{294,61},'_'},
                         {var,{294,61},'_'},
                         {var,{294,61},'_'}]}],
                      [],
                      [{call,
                        {294,61},
                        {remote,
                         {294,61},
                         {atom,{294,61},erlang},
                         {atom,{294,61},setelement}},
                        [{integer,{294,61},2},
                         {call,
                          {294,69},
                          {remote,
                           {294,69},
                           {atom,{294,69},erlang},
                           {atom,{294,69},setelement}},
                          [{integer,{294,69},4},
                           {var,{294,48},rec2},
                           {var,{294,73},'Cnt'}]},
                         {var,{294,65},'SSA'}]}]},
                     {clause,
                      [{generated,true},{location,{294,61}}],
                      [{var,[{generated,true},{location,{294,61}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{294,61}}],
                        {remote,
                         [{generated,true},{location,{294,61}}],
                         {atom,[{generated,true},{location,{294,61}}],erlang},
                         {atom,[{generated,true},{location,{294,61}}],error}},
                        [{tuple,
                          [{generated,true},{location,{294,61}}],
                          [{atom,
                            [{generated,true},{location,{294,61}}],
                            badrecord},
                           {var,{294,48},rec2}]}]}]}]}]}}]}]}]}}]},
       {var,{295,28},'StMap0'},
       {var,{295,36},'Patches'}]}},
    {debug_line,296,93},
    {tuple,{296,5},[{var,{296,6},'StMap'},{var,{296,13},'FuncDb'}]}]}]}.
{function,
    {298,1},
    is_unique,2,
    [{clause,
         {298,1},
         [{var,{298,1},'_'},{var,{298,1},'_'}],
         [[{call,
               {298,1},
               {remote,
                   {298,1},
                   {atom,{298,1},fake},
                   {atom,{298,1},is_beam_bif_info}},
               []}]],
         [{debug_line,298,94},{atom,{298,1},ignore}]},
     {clause,
         {298,1},
         [{var,{298,11},'Var'},{var,{298,16},'Anno'}],
         [],
         [{debug_line,299,95},
          {call,
              {299,5},
              {remote,
                  {299,12},
                  {atom,{299,5},ordsets},
                  {atom,{299,13},is_element}},
              [{var,{299,24},'Var'},
               {block,0,
                   [{call,
                        {299,29},
                        {remote,
                            {299,33},
                            {atom,{299,29},maps},
                            {atom,{299,34},get}},
                        [{atom,{299,38},unique},
                         {var,{299,46},'Anno'},
                         {nil,{299,52}}]}]}]}]}]}.
{function,
 {301,1},
 is_appendable,2,
 [{clause,
   {301,1},
   [{var,{301,1},'_'},{var,{301,1},'_'}],
   [[{call,
      {301,1},
      {remote,{301,1},{atom,{301,1},fake},{atom,{301,1},is_beam_bif_info}},
      []}]],
   [{debug_line,301,96},{atom,{301,1},ignore}]},
  {clause,
   {301,1},
   [{var,{301,15},'Anno'},
    {tuple,
     {301,21},
     [{atom,{301,21},b_literal},
      {cons,{301,36},{var,{301,37},'SegmentUnit'},{var,{301,49},'_'}}]}],
   [[{call,
      {302,8},
      {remote,{302,8},{atom,{302,8},erlang},{atom,{302,8},is_integer}},
      [{var,{302,19},'SegmentUnit'}]}]],
   [{debug_line,303,97},
    {'case',
     {303,5},
     {var,{303,10},'Anno'},
     [{clause,
       {304,9},
       [{map,
         {304,9},
         [{map_field_exact,
           {304,20},
           {atom,{304,11},arg_types},
           {map,
            {304,22},
            [{map_field_exact,
              {304,25},
              {integer,{304,24},2},
              {tuple,
               {304,27},
               [{atom,{304,27},t_bitstring},
                {var,{304,66},'SizeUnit'},
                {atom,{304,51},true}]}}]}}]}],
       [],
       [{debug_line,305,98},
        {op,
         {305,38},
         '==',
         {op,
          {305,22},
          'rem',
          {var,{305,13},'SizeUnit'},
          {var,{305,26},'SegmentUnit'}},
         {integer,{305,41},0}}]},
      {clause,
       {306,9},
       [{var,{306,9},'_'}],
       [],
       [{debug_line,307,99},{atom,{307,13},false}]}]}]}]}.
{function,{311,1},
          fiv_get_results,4,
          [{clause,{311,1},
                   [{var,{311,1},'_'},
                    {var,{311,1},'_'},
                    {var,{311,1},'_'},
                    {var,{311,1},'_'}],
                   [[{call,{311,1},
                           {remote,{311,1},
                                   {atom,{311,1},fake},
                                   {atom,{311,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,311,100},{atom,{311,1},ignore}]},
           {clause,{311,1},
                   [{var,{311,17},'SSA'},
                    {var,{311,22},'Element'},
                    {var,{311,31},'Fun'},
                    {var,{311,36},'FivSt'}],
                   [],
                   [{debug_line,312,101},
                    {call,{312,5},
                          {atom,{312,5},fiv_get_results},
                          [{var,{312,21},'SSA'},
                           {nil,{312,26}},
                           {var,{312,30},'Element'},
                           {var,{312,39},'Fun'},
                           {var,{312,44},'FivSt'}]}]}]}.
{function,
    {314,1},
    fiv_get_results,5,
    [{clause,
         {314,1},
         [{var,{314,1},'_'},
          {var,{314,1},'_'},
          {var,{314,1},'_'},
          {var,{314,1},'_'},
          {var,{314,1},'_'}],
         [[{call,
               {314,1},
               {remote,
                   {314,1},
                   {atom,{314,1},fake},
                   {atom,{314,1},is_beam_bif_info}},
               []}]],
         [{debug_line,314,102},{atom,{314,1},ignore}]},
     {clause,
         {314,1},
         [{cons,
              {314,17},
              {tuple,
                  {314,18},
                  [{var,{314,19},'_'},
                   {tuple,
                       {314,21},
                       [{atom,{314,21},b_blk},
                        {var,{314,21},'_'},
                        {var,{314,21},'_'},
                        {tuple,
                            {314,33},
                            [{atom,{314,33},b_ret},
                             {var,{314,33},'_'},
                             {match,
                                 {314,44},
                                 {tuple,
                                     {314,44},
                                     [{atom,{314,44},b_var},
                                      {var,{314,44},'_'}]},
                                 {var,{314,53},'V'}}]}]}]},
              {var,{314,58},'Rest'}},
          {var,{315,17},'Acc'},
          {var,{315,22},'Element'},
          {var,{315,31},'Fun'},
          {var,{315,36},'FivSt'}],
         [],
         [{debug_line,316,103},
          {call,
              {316,5},
              {atom,{316,5},fiv_get_results},
              [{var,{316,21},'Rest'},
               {block,0,
                   [{cons,
                        {316,27},
                        {tuple,
                            {316,28},
                            [{var,{316,29},'V'},{var,{316,31},'Element'}]},
                        {var,{316,40},'Acc'}}]},
               {var,{316,46},'Element'},
               {var,{316,55},'Fun'},
               {var,{316,60},'FivSt'}]}]},
     {clause,
         {317,1},
         [{cons,
              {317,17},
              {tuple,
                  {317,18},
                  [{var,{317,19},'Lbl'},
                   {tuple,
                       {317,23},
                       [{atom,{317,23},b_blk},
                        {var,{317,23},'_'},
                        {var,{317,23},'_'},
                        {tuple,
                            {317,35},
                            [{atom,{317,35},b_ret},
                             {var,{317,35},'_'},
                             {tuple,
                                 {317,46},
                                 [{atom,{317,46},b_literal},
                                  {var,{317,61},'Lit'}]}]}]}]},
              {var,{317,69},'Rest'}},
          {var,{318,17},'Acc'},
          {var,{318,22},'Element'},
          {var,{318,31},'Fun'},
          {var,{318,36},'FivSt0'}],
         [],
         [{debug_line,319,104},
          {match,
              {319,5},
              {var,{319,5},'FivSt'},
              {call,
                  {319,13},
                  {atom,{319,13},fiv_add_literal},
                  [{var,{319,29},'Lit'},
                   {var,{319,34},'Element'},
                   {var,{319,43},'Fun'},
                   {block,0,
                       [{tuple,
                            {319,48},
                            [{atom,{319,49},ret},
                             {var,{319,53},'Lbl'},
                             {var,{319,57},'Element'}]}]},
                   {var,{319,67},'FivSt0'}]}},
          {debug_line,320,105},
          {call,
              {320,5},
              {atom,{320,5},fiv_get_results},
              [{var,{320,21},'Rest'},
               {var,{320,27},'Acc'},
               {var,{320,32},'Element'},
               {var,{320,41},'Fun'},
               {var,{320,46},'FivSt'}]}]},
     {clause,
         {321,1},
         [{cons,{321,17},{var,{321,18},'_'},{var,{321,20},'Rest'}},
          {var,{321,27},'Acc'},
          {var,{321,32},'Element'},
          {var,{321,41},'Fun'},
          {var,{321,46},'FivSt'}],
         [],
         [{debug_line,322,106},
          {call,
              {322,5},
              {atom,{322,5},fiv_get_results},
              [{var,{322,21},'Rest'},
               {var,{322,27},'Acc'},
               {var,{322,32},'Element'},
               {var,{322,41},'Fun'},
               {var,{322,46},'FivSt'}]}]},
     {clause,
         {323,1},
         [{nil,{323,17}},
          {var,{323,21},'Acc'},
          {var,{323,26},'_'},
          {var,{323,29},'_Fun'},
          {var,{323,35},'FivSt'}],
         [],
         [{debug_line,324,107},
          {tuple,{324,5},[{var,{324,6},'Acc'},{var,{324,11},'FivSt'}]}]}]}.
{function,
 {326,1},
 fiv_track_value_in_fun,6,
 [{clause,
   {326,1},
   [{var,{326,1},'_'},
    {var,{326,1},'_'},
    {var,{326,1},'_'},
    {var,{326,1},'_'},
    {var,{326,1},'_'},
    {var,{326,1},'_'}],
   [[{call,
      {326,1},
      {remote,{326,1},{atom,{326,1},fake},{atom,{326,1},is_beam_bif_info}},
      []}]],
   [{debug_line,326,108},{atom,{326,1},ignore}]},
  {clause,
   {326,1},
   [{cons,
     {326,24},
     {tuple,
      {326,25},
      [{match,
        {326,26},
        {tuple,{326,26},[{atom,{326,26},b_var},{var,{326,26},'_'}]},
        {var,{326,35},'V'}},
       {var,{326,37},'Element'}]},
     {var,{326,46},'Rest'}},
    {var,{326,53},'Fun'},
    {var,{326,58},'Work'},
    {var,{327,24},'Defs'},
    {var,{327,30},'ValuesInFun'},
    {var,{327,43},'FivSt0'}],
   [[{call,
      {328,8},
      {remote,{328,8},{atom,{328,8},erlang},{atom,{328,8},is_map_key}},
      [{tuple,{328,19},[{var,{328,20},'V'},{var,{328,22},'Element'}]},
       {var,{328,32},'ValuesInFun'}]}]],
   [{debug_line,330,109},
    {atom,{330,6},skip},
    {debug_line,331,110},
    {call,
     {331,5},
     {atom,{331,5},fiv_track_value_in_fun},
     [{var,{331,28},'Rest'},
      {var,{331,34},'Fun'},
      {var,{331,39},'Work'},
      {var,{331,45},'Defs'},
      {var,{331,51},'ValuesInFun'},
      {var,{331,64},'FivSt0'}]}]},
  {clause,
   {332,1},
   [{cons,
     {332,24},
     {tuple,
      {332,25},
      [{match,
        {332,26},
        {tuple,{332,26},[{atom,{332,26},b_var},{var,{332,26},'_'}]},
        {var,{332,35},'V'}},
       {var,{332,37},'Element'}]},
     {var,{332,46},'Rest'}},
    {var,{332,53},'Fun'},
    {var,{332,58},'Work0'},
    {var,{332,65},'Defs'},
    {var,{333,24},'ValuesInFun0'},
    {match,
     {333,38},
     {var,{333,38},'FivSt0'},
     {tuple,
      {333,45},
      [{atom,{333,45},fiv_st},
       {var,{333,45},'_'},
       {var,{333,45},'_'},
       {var,{333,45},'_'},
       {var,{333,45},'_'},
       {var,{333,45},'_'},
       {var,{333,45},'_'}]}}],
   [],
   [{debug_line,334,111},
    {atom,{334,6},skip},
    {debug_line,335,112},
    {match,
     {335,5},
     {var,{335,5},'ValuesInFun'},
     {map,
      {335,31},
      {var,{335,19},'ValuesInFun0'},
      [{map_field_assoc,
        {335,44},
        {tuple,{335,33},[{var,{335,34},'V'},{var,{335,36},'Element'}]},
        {atom,{335,46},visited}}]}},
    {debug_line,336,113},
    {'case',
     {336,5},
     {var,{336,10},'Defs'},
     [{clause,
       {337,9},
       [{map,
         {337,9},
         [{map_field_exact,
           {337,12},
           {var,{337,11},'V'},
           {tuple,
            {337,14},
            [{atom,{337,14},b_set},
             {var,{337,48},'Anno'},
             {var,{337,25},'V'},
             {var,{337,30},'Op'},
             {var,{337,38},'Args'}]}}]}],
       [],
       [{debug_line,338,114},
        {'case',
         {338,13},
         {tuple,
          {338,18},
          [{var,{338,19},'Op'},
           {var,{338,22},'Args'},
           {var,{338,27},'Element'}]},
         [{clause,
           {339,17},
           [{tuple,
             {339,17},
             [{atom,{339,18},bs_create_bin},
              {cons,
               {339,32},
               {tuple,
                {339,33},
                [{atom,{339,33},b_literal},{atom,{339,48},append}]},
               {cons,
                {339,56},
                {var,{339,56},'_'},
                {cons,{339,58},{var,{339,58},'Arg'},{var,{339,62},'_'}}}},
              {tuple,
               {340,18},
               [{atom,{340,19},self},{atom,{340,24},init_writable}]}]}],
           [],
           [{debug_line,341,115},
            {atom,{341,22},skip},
            {debug_line,343,116},
            {call,
             {343,21},
             {atom,{343,21},fiv_track_value_in_fun},
             [{block,0,
               [{cons,
                 {343,44},
                 {tuple,
                  {343,45},
                  [{var,{343,46},'Arg'},{var,{343,50},'Element'}]},
                 {var,{343,59},'Rest'}}]},
              {var,{343,66},'Fun'},
              {var,{343,71},'Work0'},
              {var,{344,44},'Defs'},
              {var,{344,50},'ValuesInFun'},
              {var,{344,63},'FivSt0'}]}]},
          {clause,
           {345,17},
           [{tuple,
             {345,17},
             [{atom,{345,18},bs_create_bin},
              {cons,
               {345,32},
               {tuple,
                {345,33},
                [{atom,{345,33},b_literal},{atom,{345,48},private_append}]},
               {cons,
                {345,64},
                {var,{345,64},'_'},
                {cons,{345,66},{var,{345,66},'_'},{var,{345,68},'_'}}}},
              {tuple,
               {346,18},
               [{atom,{346,19},self},{atom,{346,24},init_writable}]}]}],
           [],
           [{debug_line,347,117},
            {atom,{347,22},skip},
            {debug_line,352,118},
            {call,
             {352,21},
             {atom,{352,21},fiv_track_value_in_fun},
             [{var,{352,44},'Rest'},
              {var,{352,50},'Fun'},
              {var,{352,55},'Work0'},
              {var,{353,44},'Defs'},
              {var,{353,50},'ValuesInFun'},
              {var,{353,63},'FivSt0'}]}]},
          {clause,
           {354,17},
           [{tuple,
             {354,17},
             [{atom,{354,18},bs_init_writable},
              {var,{354,35},'_'},
              {tuple,
               {354,37},
               [{atom,{354,38},self},{atom,{354,43},init_writable}]}]}],
           [],
           [{debug_line,355,119},
            {atom,{355,22},skip},
            {debug_line,358,120},
            {call,
             {358,21},
             {atom,{358,21},fiv_track_value_in_fun},
             [{var,{358,44},'Rest'},
              {var,{358,50},'Fun'},
              {var,{358,55},'Work0'},
              {var,{359,44},'Defs'},
              {var,{359,50},'ValuesInFun'},
              {var,{359,63},'FivSt0'}]}]},
          {clause,
           {360,17},
           [{tuple,
             {360,17},
             [{atom,{360,18},call},
              {cons,
               {360,23},
               {match,
                {360,24},
                {tuple,
                 {360,24},
                 [{atom,{360,24},b_local},
                  {var,{360,24},'_'},
                  {var,{360,24},'_'}]},
                {var,{360,35},'Callee'}},
               {var,{360,42},'_Args'}},
              {var,{360,49},'_'}]}],
           [],
           [{debug_line,361,121},
            {atom,{361,22},skip},
            {debug_line,363,122},
            {call,
             {363,21},
             {atom,{363,21},fiv_track_value_into_call},
             [{var,{363,47},'Callee'},
              {var,{363,55},'Element'},
              {var,{363,64},'Fun'},
              {var,{363,69},'Rest'},
              {var,{363,75},'Work0'},
              {var,{364,47},'Defs'},
              {var,{364,53},'ValuesInFun'},
              {var,{364,66},'FivSt0'}]}]},
          {clause,
           {365,17},
           [{tuple,
             {365,17},
             [{atom,{365,18},call},
              {cons,
               {365,23},
               {tuple,
                {365,24},
                [{atom,{365,24},b_remote},
                 {tuple,
                  {365,38},
                  [{atom,{365,38},b_literal},{atom,{365,53},erlang}]},
                 {tuple,
                  {366,39},
                  [{atom,{366,39},b_literal},{atom,{366,54},error}]},
                 {integer,{367,40},1}]},
               {var,{367,43},'_Args'}},
              {var,{367,50},'_'}]}],
           [],
           [{debug_line,368,123},
            {atom,{368,22},skip},
            {debug_line,371,124},
            {call,
             {371,21},
             {atom,{371,21},fiv_track_value_in_fun},
             [{var,{371,44},'Rest'},
              {var,{371,50},'Fun'},
              {var,{371,55},'Work0'},
              {var,{372,44},'Defs'},
              {var,{372,50},'ValuesInFun'},
              {var,{372,63},'FivSt0'}]}]},
          {clause,
           {373,17},
           [{tuple,
             {373,17},
             [{atom,{373,18},get_hd},
              {cons,{373,25},{var,{373,26},'List'},{nil,{373,30}}},
              {var,{373,32},'_'}]}],
           [],
           [{debug_line,388,125},
            {match,
             {388,21},
             {map,
              {388,21},
              [{map_field_exact,
                {388,32},
                {atom,{388,23},arg_types},
                {map,
                 {388,34},
                 [{map_field_exact,
                   {388,37},
                   {integer,{388,36},0},
                   {tuple,
                    {388,39},
                    [{atom,{388,39},t_cons},
                     {var,{388,52},'Type'},
                     {var,{388,39},'_'}]}}]}}]},
             {var,{388,62},'Anno'}},
            {debug_line,389,126},
            {match,
             {389,21},
             {var,{389,21},'IsComp'},
             {call,
              {389,30},
              {atom,{389,30},fiv_elem_is_compatible},
              [{var,{389,53},'Element'},{var,{389,62},'Type'}]}},
            {debug_line,390,127},
            {atom,{390,22},skip},
            {debug_line,394,128},
            {'case',
             {394,21},
             {var,{394,26},'IsComp'},
             [{clause,
               {395,25},
               [{atom,{395,25},true}],
               [],
               [{debug_line,396,129},
                {match,
                 {396,29},
                 {var,{396,29},'Depth'},
                 {call,
                  {396,37},
                  {atom,{396,37},fiv_get_new_depth},
                  [{var,{396,55},'Element'}]}},
                {debug_line,397,130},
                {atom,{397,30},skip},
                {debug_line,399,131},
                {call,
                 {399,29},
                 {atom,{399,29},fiv_track_value_in_fun},
                 [{block,0,
                   [{debug_line,400,132},
                    {cons,
                     {400,31},
                     {tuple,
                      {400,32},
                      [{var,{400,33},'List'},
                       {tuple,
                        {400,38},
                        [{atom,{400,39},hd},
                         {var,{400,42},'Element'},
                         {var,{400,50},'Depth'}]}]},
                     {var,{400,58},'Rest'}}]},
                  {var,{400,65},'Fun'},
                  {var,{400,70},'Work0'},
                  {var,{401,31},'Defs'},
                  {var,{401,37},'ValuesInFun'},
                  {var,{401,50},'FivSt0'}]}]},
              {clause,
               {402,25},
               [{atom,{402,25},false}],
               [],
               [{debug_line,403,133},
                {atom,{403,30},skip},
                {debug_line,404,134},
                {call,
                 {404,29},
                 {atom,{404,29},fiv_track_value_in_fun},
                 [{var,{405,31},'Rest'},
                  {var,{405,37},'Fun'},
                  {var,{405,42},'Work0'},
                  {var,{405,49},'Defs'},
                  {var,{405,55},'ValuesInFun'},
                  {var,{405,68},'FivSt0'}]}]}]}]},
          {clause,
           {407,17},
           [{tuple,
             {407,17},
             [{atom,{407,18},get_tuple_element},
              {cons,
               {407,36},
               {match,
                {407,37},
                {tuple,{407,37},[{atom,{407,37},b_var},{var,{407,37},'_'}]},
                {var,{407,46},'Tuple'}},
               {cons,
                {407,52},
                {tuple,
                 {407,52},
                 [{atom,{407,52},b_literal},{var,{407,67},'Idx'}]},
                {nil,{407,71}}}},
              {var,{407,73},'_'}]}],
           [],
           [{debug_line,412,135},
            {match,
             {412,21},
             {map,
              {412,21},
              [{map_field_exact,
                {412,32},
                {atom,{412,23},arg_types},
                {map,
                 {412,34},
                 [{map_field_exact,
                   {412,37},
                   {integer,{412,36},0},
                   {var,{412,39},'TupleType'}}]}}]},
             {var,{412,53},'Anno'}},
            {debug_line,413,136},
            {atom,{413,22},skip},
            {debug_line,414,137},
            {atom,{414,22},skip},
            {debug_line,415,138},
            {atom,{415,22},skip},
            {debug_line,416,139},
            {match,
             {416,21},
             {var,{416,21},'Type'},
             {'case',
              {417,25},
              {var,{417,30},'TupleType'},
              [{clause,
                {418,29},
                [{tuple,
                  {418,29},
                  [{atom,{418,29},t_tuple},
                   {var,{418,29},'_'},
                   {var,{418,29},'_'},
                   {var,{418,47},'Es'}]}],
                [],
                [{debug_line,419,140},
                 {match,
                  {419,33},
                  {var,{419,33},'T'},
                  {call,
                   {419,37},
                   {remote,{419,41},{atom,{419,37},maps},{atom,{419,42},get}},
                   [{block,0,
                     [{op,
                       {419,50},
                       '+',
                       {var,{419,46},'Idx'},
                       {integer,{419,52},1}}]},
                    {var,{419,55},'Es'},
                    {atom,{419,59},any}]}},
                 {debug_line,420,141},
                 {atom,{420,34},skip},
                 {debug_line,421,142},
                 {var,{421,33},'T'}]},
               {clause,
                {422,29},
                [{tuple,
                  {422,29},
                  [{atom,{422,29},t_union},
                   {var,{422,29},'_'},
                   {var,{422,29},'_'},
                   {var,{422,29},'_'},
                   {var,{422,48},'TS'},
                   {var,{422,29},'_'}]}],
                [],
                [{debug_line,423,143},
                 {atom,{423,34},skip},
                 {debug_line,424,144},
                 {match,
                  {424,33},
                  {var,{424,33},'JointType'},
                  {call,
                   {425,37},
                   {atom,{425,37},fiv_get_effective_tuple_set_type},
                   [{var,{425,70},'Idx'},{var,{425,75},'TS'}]}},
                 {debug_line,426,145},
                 {atom,{426,34},skip},
                 {debug_line,427,146},
                 {var,{427,33},'JointType'}]}]}},
            {debug_line,429,147},
            {match,
             {429,21},
             {var,{429,21},'IsComp'},
             {call,
              {429,30},
              {atom,{429,30},fiv_elem_is_compatible},
              [{var,{429,53},'Element'},{var,{429,62},'Type'}]}},
            {debug_line,430,148},
            {atom,{430,22},skip},
            {debug_line,434,149},
            {'case',
             {434,21},
             {var,{434,26},'IsComp'},
             [{clause,
               {435,25},
               [{atom,{435,25},true}],
               [],
               [{debug_line,436,150},
                {match,
                 {436,29},
                 {var,{436,29},'Depth'},
                 {call,
                  {436,37},
                  {atom,{436,37},fiv_get_new_depth},
                  [{var,{436,55},'Element'}]}},
                {debug_line,437,151},
                {atom,{437,30},skip},
                {debug_line,440,152},
                {call,
                 {440,29},
                 {atom,{440,29},fiv_track_value_in_fun},
                 [{block,0,
                   [{debug_line,441,153},
                    {cons,
                     {441,31},
                     {tuple,
                      {441,32},
                      [{var,{441,33},'Tuple'},
                       {tuple,
                        {441,39},
                        [{atom,{441,40},tuple_element},
                         {var,{441,54},'Idx'},
                         {var,{441,58},'Element'},
                         {var,{441,66},'Depth'}]}]},
                     {var,{441,74},'Rest'}}]},
                  {var,{442,31},'Fun'},
                  {var,{442,36},'Work0'},
                  {var,{443,31},'Defs'},
                  {var,{443,37},'ValuesInFun'},
                  {var,{443,50},'FivSt0'}]}]},
              {clause,
               {444,25},
               [{atom,{444,25},false}],
               [],
               [{debug_line,445,154},
                {atom,{445,30},skip},
                {debug_line,446,155},
                {call,
                 {446,29},
                 {atom,{446,29},fiv_track_value_in_fun},
                 [{var,{447,31},'Rest'},
                  {var,{447,37},'Fun'},
                  {var,{447,42},'Work0'},
                  {var,{447,49},'Defs'},
                  {var,{447,55},'ValuesInFun'},
                  {var,{447,68},'FivSt0'}]}]}]}]},
          {clause,
           {449,17},
           [{tuple,
             {449,17},
             [{atom,{449,18},phi},{var,{449,22},'_'},{var,{449,24},'_'}]}],
           [],
           [{debug_line,450,156},
            {atom,{450,22},skip},
            {debug_line,451,157},
            {match,
             {451,21},
             {tuple,
              {451,21},
              [{var,{451,22},'ToExplore'},{var,{451,32},'FivSt'}]},
             {call,
              {451,41},
              {atom,{451,41},fiv_handle_phi},
              [{var,{451,56},'Fun'},
               {var,{451,61},'V'},
               {var,{451,64},'Args'},
               {var,{452,56},'Element'},
               {var,{452,65},'FivSt0'}]}},
            {debug_line,453,158},
            {call,
             {453,21},
             {atom,{453,21},fiv_track_value_in_fun},
             [{block,0,
               [{op,
                 {453,54},
                 '++',
                 {var,{453,44},'ToExplore'},
                 {var,{453,57},'Rest'}}]},
              {var,{453,63},'Fun'},
              {var,{453,68},'Work0'},
              {var,{454,44},'Defs'},
              {var,{454,50},'ValuesInFun'},
              {var,{454,63},'FivSt'}]}]},
          {clause,
           {455,17},
           [{tuple,
             {455,17},
             [{atom,{455,18},put_tuple},
              {var,{455,28},'_'},
              {var,{455,30},'_'}]}],
           [],
           [{debug_line,456,159},
            {atom,{456,22},skip},
            {debug_line,457,160},
            {call,
             {457,21},
             {atom,{457,21},fiv_track_put_tuple},
             [{var,{457,41},'Args'},
              {var,{457,47},'Element'},
              {var,{457,56},'Rest'},
              {var,{457,62},'Fun'},
              {var,{457,67},'V'},
              {var,{457,70},'Work0'},
              {var,{458,41},'Defs'},
              {var,{458,47},'ValuesInFun'},
              {var,{458,60},'FivSt0'}]}]},
          {clause,
           {459,17},
           [{tuple,
             {459,17},
             [{atom,{459,18},put_list},
              {var,{459,27},'_'},
              {var,{459,29},'_'}]}],
           [],
           [{debug_line,460,161},
            {atom,{460,22},skip},
            {debug_line,461,162},
            {call,
             {461,21},
             {atom,{461,21},fiv_track_put_list},
             [{var,{461,40},'Args'},
              {var,{461,46},'Element'},
              {var,{461,55},'Rest'},
              {var,{461,61},'Fun'},
              {var,{461,66},'V'},
              {var,{461,69},'Work0'},
              {var,{462,40},'Defs'},
              {var,{462,46},'ValuesInFun'},
              {var,{462,59},'FivSt0'}]}]},
          {clause,
           {463,17},
           [{tuple,
             {463,17},
             [{atom,{463,18},update_record},
              {var,{463,32},'_'},
              {var,{463,34},'_'}]}],
           [],
           [{debug_line,464,163},
            {atom,{464,22},skip},
            {debug_line,465,164},
            {call,
             {465,21},
             {atom,{465,21},fiv_track_update_record},
             [{var,{465,45},'Args'},
              {var,{465,51},'Element'},
              {var,{465,60},'Rest'},
              {var,{465,66},'Fun'},
              {var,{465,71},'V'},
              {var,{465,74},'Work0'},
              {var,{466,45},'Defs'},
              {var,{466,51},'ValuesInFun'},
              {var,{466,64},'FivSt0'}]}]},
          {clause,
           {467,17},
           [{tuple,
             {467,17},
             [{var,{467,18},'_'},{var,{467,20},'_'},{var,{467,22},'_'}]}],
           [],
           [{debug_line,481,165},
            {atom,{481,22},skip},
            {debug_line,482,166},
            {call,
             {482,21},
             {atom,{482,21},fiv_track_value_in_fun},
             [{var,{482,44},'Rest'},
              {var,{482,50},'Fun'},
              {var,{482,55},'Work0'},
              {var,{483,44},'Defs'},
              {var,{483,50},'ValuesInFun'},
              {var,{483,63},'FivSt0'}]}]}]}]},
      {clause,
       {485,9},
       [{map,
         {485,9},
         [{map_field_exact,
           {485,12},
           {var,{485,11},'V'},
           {tuple,{485,14},[{atom,{485,15},arg},{var,{485,19},'Idx'}]}}]}],
       [],
       [{debug_line,486,167},
        {atom,{486,14},skip},
        {debug_line,487,168},
        {call,
         {487,13},
         {atom,{487,13},fiv_track_value_into_caller},
         [{var,{487,41},'Element'},
          {var,{487,50},'Idx'},
          {var,{487,55},'Rest'},
          {var,{487,61},'Fun'},
          {var,{487,66},'Work0'},
          {var,{487,73},'Defs'},
          {var,{488,41},'ValuesInFun'},
          {var,{488,54},'FivSt0'}]}]}]}]},
  {clause,
   {490,1},
   [{cons,
     {490,24},
     {tuple,
      {490,25},
      [{tuple,{490,26},[{atom,{490,26},b_literal},{var,{490,26},'_'}]},
       {var,{490,39},'_'}]},
     {var,{490,42},'Rest'}},
    {var,{490,49},'Fun'},
    {var,{490,54},'Work'},
    {var,{491,24},'Defs'},
    {var,{491,30},'ValuesInFun'},
    {var,{491,43},'FivSt'}],
   [],
   [{debug_line,492,169},
    {call,
     {492,5},
     {atom,{492,5},fiv_track_value_in_fun},
     [{var,{492,28},'Rest'},
      {var,{492,34},'Fun'},
      {var,{492,39},'Work'},
      {var,{492,45},'Defs'},
      {var,{492,51},'ValuesInFun'},
      {var,{492,64},'FivSt'}]}]},
  {clause,
   {493,1},
   [{nil,{493,24}},
    {var,{493,28},'Fun'},
    {var,{493,33},'Work'},
    {var,{493,39},'_Defs'},
    {var,{493,46},'ValuesInFun'},
    {match,
     {494,24},
     {var,{494,24},'FivSt0'},
     {tuple,
      {494,31},
      [{atom,{494,31},fiv_st},
       {var,{494,31},'_'},
       {var,{494,31},'_'},
       {var,{494,31},'_'},
       {var,{494,31},'_'},
       {var,{494,48},'ValuesDb0'},
       {var,{494,31},'_'}]}}],
   [],
   [{debug_line,497,170},
    {match,
     {497,5},
     {var,{497,5},'FivSt'},
     {block,
      {497,13},
      [{match,
        {497,27},
        {var,{497,27},rec3},
        {map,
         {497,45},
         {var,{497,36},'ValuesDb0'},
         [{map_field_assoc,
           {497,50},
           {var,{497,47},'Fun'},
           {var,{497,52},'ValuesInFun'}}]}},
       {match,{497,13},{var,{497,13},rec4},{var,{497,13},'FivSt0'}},
       {'case',
        {497,27},
        {var,{497,13},rec4},
        [{clause,
          {497,27},
          [{tuple,
            {497,27},
            [{atom,{497,27},fiv_st},
             {var,{497,27},'_'},
             {var,{497,27},'_'},
             {var,{497,27},'_'},
             {var,{497,27},'_'},
             {var,{497,27},'_'},
             {var,{497,27},'_'}]}],
          [],
          [{call,
            {497,27},
            {remote,
             {497,27},
             {atom,{497,27},erlang},
             {atom,{497,27},setelement}},
            [{integer,{497,27},6},{var,{497,13},rec4},{var,{497,27},rec3}]}]},
         {clause,
          [{generated,true},{location,{497,27}}],
          [{var,[{generated,true},{location,{497,27}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{497,27}}],
            {remote,
             [{generated,true},{location,{497,27}}],
             {atom,[{generated,true},{location,{497,27}}],erlang},
             {atom,[{generated,true},{location,{497,27}}],error}},
            [{tuple,
              [{generated,true},{location,{497,27}}],
              [{atom,[{generated,true},{location,{497,27}}],badrecord},
               {var,{497,13},rec4}]}]}]}]}]}},
    {debug_line,498,171},
    {call,
     {498,5},
     {atom,{498,5},fiv},
     [{var,{498,9},'Work'},{var,{498,15},'FivSt'}]}]}]}.
{function,
    {500,1},
    fiv_track_value_into_call,8,
    [{clause,
         {500,1},
         [{var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'}],
         [[{call,
               {500,1},
               {remote,
                   {500,1},
                   {atom,{500,1},fake},
                   {atom,{500,1},is_beam_bif_info}},
               []}]],
         [{debug_line,500,172},{atom,{500,1},ignore}]},
     {clause,
         {500,1},
         [{var,{500,27},'Callee'},
          {var,{500,35},'Element'},
          {var,{500,44},'CallerFun'},
          {var,{500,55},'CallerWork'},
          {var,{500,67},'GlobalWork0'},
          {var,{501,27},'CallerDefs'},
          {var,{501,39},'CallerValuesInFun'},
          {var,{501,58},'FivSt0'}],
         [],
         [{debug_line,502,173},
          {match,
              {502,5},
              {var,{502,5},'GlobalWork'},
              {cons,
                  {502,18},
                  {tuple,
                      {502,19},
                      [{var,{502,20},'Callee'},
                       {tuple,
                           {502,28},
                           [{atom,{502,29},track_result},
                            {var,{502,43},'Element'}]}]},
                  {var,{502,53},'GlobalWork0'}}},
          {debug_line,503,174},
          {call,
              {503,5},
              {atom,{503,5},fiv_track_value_in_fun},
              [{var,{503,28},'CallerWork'},
               {var,{503,40},'CallerFun'},
               {var,{503,51},'GlobalWork'},
               {var,{504,28},'CallerDefs'},
               {var,{504,40},'CallerValuesInFun'},
               {var,{504,59},'FivSt0'}]}]}]}.
{function,
    {506,1},
    fiv_track_value_into_caller,8,
    [{clause,
         {506,1},
         [{var,{506,1},'_'},
          {var,{506,1},'_'},
          {var,{506,1},'_'},
          {var,{506,1},'_'},
          {var,{506,1},'_'},
          {var,{506,1},'_'},
          {var,{506,1},'_'},
          {var,{506,1},'_'}],
         [[{call,
               {506,1},
               {remote,
                   {506,1},
                   {atom,{506,1},fake},
                   {atom,{506,1},is_beam_bif_info}},
               []}]],
         [{debug_line,506,175},{atom,{506,1},ignore}]},
     {clause,
         {506,1},
         [{var,{506,29},'Element'},
          {var,{506,38},'ArgIdx'},
          {var,{507,29},'CalledFunWorklist'},
          {var,{507,48},'CalledFun'},
          {var,{508,29},'GlobalWorklist0'},
          {var,{509,29},'CalledFunDefs'},
          {var,{509,44},'CalledFunValues'},
          {match,
              {510,29},
              {var,{510,29},'FivSt0'},
              {tuple,
                  {510,36},
                  [{atom,{510,36},fiv_st},
                   {var,{510,51},'FuncDb'},
                   {var,{510,64},'StMap'},
                   {var,{510,36},'_'},
                   {var,{510,36},'_'},
                   {var,{510,36},'_'},
                   {var,{510,36},'_'}]}}],
         [],
         [{debug_line,511,176},
          {match,
              {511,5},
              {tuple,
                  {511,5},
                  [{atom,{511,5},func_info},
                   {var,{511,19},'Callers'},
                   {var,{511,5},'_'},
                   {var,{511,5},'_'},
                   {var,{511,5},'_'},
                   {var,{511,5},'_'}]},
              {call,
                  {511,30},
                  {remote,
                      {511,30},
                      {atom,{511,30},erlang},
                      {atom,{511,30},map_get}},
                  [{var,{511,38},'CalledFun'},{var,{511,49},'FuncDb'}]}},
          {debug_line,512,177},
          {atom,{512,6},skip},
          {debug_line,520,178},
          {match,
              {520,5},
              {var,{520,5},'Work'},
              {lc,{520,12},
                  {block,0,
                      [{tuple,
                           {520,13},
                           [{var,{520,14},'Caller'},
                            {tuple,
                                {520,21},
                                [{atom,{520,22},track_call_argument},
                                 {var,{520,42},'CalledFun'},
                                 {var,{520,52},'Element'},
                                 {var,{520,60},'ArgIdx'}]}]}]},
                  [{block,0,[{debug_line,521,179},{atom,{521,26},true}]},
                   {generate,
                       {521,23},
                       {var,{521,16},'Caller'},
                       {var,{521,26},'Callers'}},
                   {block,0,[{atom,{521,35},true}]},
                   {call,
                       {521,35},
                       {remote,
                           {521,35},
                           {atom,{521,35},erlang},
                           {atom,{521,35},is_map_key}},
                       [{var,{521,46},'Caller'},{var,{521,54},'StMap'}]}]}},
          {debug_line,522,180},
          {match,
              {522,5},
              {var,{522,5},'GlobalWorklist'},
              {op,{522,27},
                  '++',
                  {var,{522,22},'Work'},
                  {var,{522,30},'GlobalWorklist0'}}},
          {debug_line,523,181},
          {call,
              {523,5},
              {atom,{523,5},fiv_track_value_in_fun},
              [{var,{523,28},'CalledFunWorklist'},
               {var,{523,47},'CalledFun'},
               {var,{523,58},'GlobalWorklist'},
               {var,{524,28},'CalledFunDefs'},
               {var,{524,43},'CalledFunValues'},
               {var,{524,60},'FivSt0'}]}]}]}.
{function,
    {526,1},
    fiv_track_put_tuple,9,
    [{clause,
         {526,1},
         [{var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'},
          {var,{526,1},'_'}],
         [[{call,
               {526,1},
               {remote,
                   {526,1},
                   {atom,{526,1},fake},
                   {atom,{526,1},is_beam_bif_info}},
               []}]],
         [{debug_line,526,182},{atom,{526,1},ignore}]},
     {clause,
         {526,1},
         [{var,{526,21},'FieldVars'},
          {tuple,
              {526,32},
              [{atom,{526,33},tuple_element},
               {var,{526,47},'Idx'},
               {var,{526,51},'_'},
               {var,{526,53},'_'}]},
          {var,{527,21},'Work'},
          {var,{527,27},'Fun'},
          {var,{527,32},'_Dst'},
          {var,{527,38},'GlobalWork'},
          {var,{528,21},'Defs'},
          {var,{528,27},'ValuesInFun'},
          {var,{528,40},'FivSt'}],
         [[{op,{528,70},
               '=<',
               {call,
                   {528,52},
                   {remote,
                       {528,52},
                       {atom,{528,52},erlang},
                       {atom,{528,52},length}},
                   [{var,{528,59},'FieldVars'}]},
               {var,{528,73},'Idx'}}]],
         [{debug_line,531,183},
          {atom,{531,6},skip},
          {debug_line,532,184},
          {call,
              {532,5},
              {atom,{532,5},fiv_track_value_in_fun},
              [{var,{532,28},'Work'},
               {var,{532,34},'Fun'},
               {var,{532,39},'GlobalWork'},
               {var,{533,28},'Defs'},
               {var,{533,34},'ValuesInFun'},
               {var,{533,47},'FivSt'}]}]},
     {clause,
         {534,1},
         [{var,{534,21},'FieldVars'},
          {tuple,
              {534,32},
              [{atom,{534,33},tuple_element},
               {var,{534,47},'Idx'},
               {var,{534,51},'Element'},
               {var,{534,59},'_'}]},
          {var,{535,21},'Work'},
          {var,{535,27},'Fun'},
          {var,{535,32},'Dst'},
          {var,{535,37},'GlobalWork'},
          {var,{536,21},'Defs'},
          {var,{536,27},'ValuesInFun'},
          {var,{536,40},'FivSt0'}],
         [],
         [{debug_line,539,185},
          {'case',
              {539,5},
              {call,
                  {539,10},
                  {remote,{539,15},{atom,{539,10},lists},{atom,{539,16},nth}},
                  [{block,0,
                       [{op,{539,24},
                            '+',
                            {var,{539,20},'Idx'},
                            {integer,{539,26},1}}]},
                   {var,{539,29},'FieldVars'}]},
              [{clause,
                   {540,9},
                   [{match,
                        {540,9},
                        {var,{540,9},'ToTrack'},
                        {tuple,
                            {540,19},
                            [{atom,{540,19},b_var},{var,{540,19},'_'}]}}],
                   [],
                   [{debug_line,541,186},
                    {atom,{541,14},skip},
                    {debug_line,543,187},
                    {call,
                        {543,13},
                        {atom,{543,13},fiv_track_value_in_fun},
                        [{block,0,
                             [{cons,
                                  {543,36},
                                  {tuple,
                                      {543,37},
                                      [{var,{543,38},'ToTrack'},
                                       {var,{543,46},'Element'}]},
                                  {var,{543,55},'Work'}}]},
                         {var,{543,62},'Fun'},
                         {var,{543,67},'GlobalWork'},
                         {var,{544,36},'Defs'},
                         {var,{544,42},'ValuesInFun'},
                         {var,{544,55},'FivSt0'}]}]},
               {clause,
                   {545,9},
                   [{tuple,
                        {545,9},
                        [{atom,{545,9},b_literal},{var,{545,24},'Lit'}]}],
                   [],
                   [{debug_line,546,188},
                    {match,
                        {546,13},
                        {var,{546,13},'LitInfo'},
                        {tuple,
                            {546,23},
                            [{atom,{546,24},opargs},
                             {var,{546,31},'Dst'},
                             {var,{546,35},'Idx'},
                             {var,{546,39},'Lit'},
                             {var,{546,43},'Element'}]}},
                    {debug_line,547,189},
                    {match,
                        {547,13},
                        {var,{547,13},'FivSt'},
                        {call,
                            {547,21},
                            {atom,{547,21},fiv_add_literal},
                            [{var,{547,37},'Lit'},
                             {var,{547,42},'Element'},
                             {var,{547,51},'Fun'},
                             {var,{547,56},'LitInfo'},
                             {var,{547,65},'FivSt0'}]}},
                    {debug_line,548,190},
                    {atom,{548,14},skip},
                    {debug_line,549,191},
                    {call,
                        {549,13},
                        {atom,{549,13},fiv_track_value_in_fun},
                        [{var,{549,36},'Work'},
                         {var,{549,42},'Fun'},
                         {var,{549,47},'GlobalWork'},
                         {var,{550,36},'Defs'},
                         {var,{550,42},'ValuesInFun'},
                         {var,{550,55},'FivSt'}]}]}]}]},
     {clause,
         {552,1},
         [{var,{552,21},'_FieldVars'},
          {var,{552,33},'_'},
          {var,{553,21},'Work'},
          {var,{553,27},'Fun'},
          {var,{553,32},'_Dst'},
          {var,{553,38},'GlobalWork'},
          {var,{554,21},'Defs'},
          {var,{554,27},'ValuesInFun'},
          {var,{554,40},'DefSt'}],
         [],
         [{debug_line,557,192},
          {atom,{557,6},skip},
          {debug_line,558,193},
          {call,
              {558,5},
              {atom,{558,5},fiv_track_value_in_fun},
              [{var,{558,28},'Work'},
               {var,{558,34},'Fun'},
               {var,{558,39},'GlobalWork'},
               {var,{559,28},'Defs'},
               {var,{559,34},'ValuesInFun'},
               {var,{559,47},'DefSt'}]}]}]}.
{function,
 {561,1},
 fiv_track_update_record,9,
 [{clause,
   {561,1},
   [{var,{561,1},'_'},
    {var,{561,1},'_'},
    {var,{561,1},'_'},
    {var,{561,1},'_'},
    {var,{561,1},'_'},
    {var,{561,1},'_'},
    {var,{561,1},'_'},
    {var,{561,1},'_'},
    {var,{561,1},'_'}],
   [[{call,
      {561,1},
      {remote,{561,1},{atom,{561,1},fake},{atom,{561,1},is_beam_bif_info}},
      []}]],
   [{debug_line,561,194},{atom,{561,1},ignore}]},
  {clause,
   {561,1},
   [{cons,
     {561,25},
     {tuple,{561,26},[{atom,{561,26},b_literal},{atom,{561,41},copy}]},
     {var,{561,47},'_'}},
    {tuple,{562,25},[{atom,{562,26},self},{atom,{562,31},heap_tuple}]},
    {var,{563,25},'Work'},
    {var,{563,31},'Fun'},
    {var,{563,36},'_Dst'},
    {var,{563,42},'GlobalWork'},
    {var,{564,25},'Defs'},
    {var,{564,31},'ValuesInFun'},
    {var,{564,44},'FivSt'}],
   [],
   [{debug_line,567,195},
    {atom,{567,6},skip},
    {debug_line,568,196},
    {call,
     {568,5},
     {atom,{568,5},fiv_track_value_in_fun},
     [{var,{568,28},'Work'},
      {var,{568,34},'Fun'},
      {var,{568,39},'GlobalWork'},
      {var,{569,28},'Defs'},
      {var,{569,34},'ValuesInFun'},
      {var,{569,47},'FivSt'}]}]},
  {clause,
   {570,1},
   [{cons,
     {570,25},
     {tuple,{570,26},[{atom,{570,26},b_literal},{atom,{570,41},reuse}]},
     {var,{570,48},'_'}},
    {tuple,{571,25},[{atom,{571,26},self},{atom,{571,31},heap_tuple}]},
    {var,{572,25},'Work'},
    {var,{572,31},'Fun'},
    {var,{572,36},'Dst'},
    {var,{572,41},'GlobalWork'},
    {var,{573,25},'Defs'},
    {var,{573,31},'ValuesInFun'},
    {match,
     {573,44},
     {tuple,
      {573,44},
      [{atom,{573,44},fiv_st},
       {var,{573,44},'_'},
       {var,{573,44},'_'},
       {var,{573,44},'_'},
       {var,{573,44},'_'},
       {var,{573,44},'_'},
       {var,{573,63},'FC0'}]},
     {var,{573,68},'FivSt0'}}],
   [],
   [{debug_line,578,197},
    {atom,{578,6},skip},
    {debug_line,579,198},
    {match,
     {579,5},
     {var,{579,5},'FunFC0'},
     {call,
      {579,14},
      {remote,{579,18},{atom,{579,14},maps},{atom,{579,19},get}},
      [{var,{579,23},'Fun'},
       {var,{579,28},'FC0'},
       {block,0,[{map,{579,33},[]}]}]}},
    {debug_line,580,199},
    {match,
     {580,5},
     {var,{580,5},'ThisDst0'},
     {call,
      {580,17},
      {remote,{580,21},{atom,{580,17},maps},{atom,{580,22},get}},
      [{var,{580,26},'Dst'},{var,{580,31},'FunFC0'},{nil,{580,39}}]}},
    {debug_line,581,200},
    {match,
     {581,5},
     {var,{581,5},'ThisDst'},
     {call,
      {581,15},
      {remote,{581,22},{atom,{581,15},ordsets},{atom,{581,23},add_element}},
      [{block,0,
        [{tuple,{581,35},[{atom,{581,36},force_copy},{var,{581,47},'Dst'}]}]},
       {var,{581,53},'ThisDst0'}]}},
    {debug_line,582,201},
    {match,
     {582,5},
     {var,{582,5},'FunFC'},
     {map,
      {582,19},
      {var,{582,13},'FunFC0'},
      [{map_field_assoc,
        {582,24},
        {var,{582,21},'Dst'},
        {var,{582,26},'ThisDst'}}]}},
    {debug_line,583,202},
    {match,
     {583,5},
     {var,{583,5},'FC'},
     {map,
      {583,13},
      {var,{583,10},'FC0'},
      [{map_field_assoc,
        {583,18},
        {var,{583,15},'Fun'},
        {var,{583,20},'FunFC'}}]}},
    {debug_line,584,203},
    {match,
     {584,5},
     {var,{584,5},'FivSt'},
     {block,
      {584,13},
      [{match,{584,13},{var,{584,13},rec5},{var,{584,13},'FivSt0'}},
       {'case',
        {584,27},
        {var,{584,13},rec5},
        [{clause,
          {584,27},
          [{tuple,
            {584,27},
            [{atom,{584,27},fiv_st},
             {var,{584,27},'_'},
             {var,{584,27},'_'},
             {var,{584,27},'_'},
             {var,{584,27},'_'},
             {var,{584,27},'_'},
             {var,{584,27},'_'}]}],
          [],
          [{call,
            {584,27},
            {remote,
             {584,27},
             {atom,{584,27},erlang},
             {atom,{584,27},setelement}},
            [{integer,{584,27},7},{var,{584,13},rec5},{var,{584,38},'FC'}]}]},
         {clause,
          [{generated,true},{location,{584,27}}],
          [{var,[{generated,true},{location,{584,27}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{584,27}}],
            {remote,
             [{generated,true},{location,{584,27}}],
             {atom,[{generated,true},{location,{584,27}}],erlang},
             {atom,[{generated,true},{location,{584,27}}],error}},
            [{tuple,
              [{generated,true},{location,{584,27}}],
              [{atom,[{generated,true},{location,{584,27}}],badrecord},
               {var,{584,13},rec5}]}]}]}]}]}},
    {debug_line,585,204},
    {call,
     {585,5},
     {atom,{585,5},fiv_track_value_in_fun},
     [{var,{585,28},'Work'},
      {var,{585,34},'Fun'},
      {var,{585,39},'GlobalWork'},
      {var,{586,28},'Defs'},
      {var,{586,34},'ValuesInFun'},
      {var,{586,47},'FivSt'}]}]},
  {clause,
   {587,1},
   [{cons,
     {587,25},
     {var,{587,26},'_Hint'},
     {cons,
      {587,32},
      {var,{587,32},'_Size'},
      {cons,{587,38},{var,{587,38},'Src'},{var,{587,42},'Updates'}}}},
    {match,
     {588,25},
     {tuple,
      {588,25},
      [{atom,{588,26},tuple_element},
       {var,{588,40},'Idx'},
       {var,{588,44},'Element'},
       {var,{588,52},'_'}]},
     {var,{588,55},'What'}},
    {var,{589,25},'Work'},
    {var,{589,31},'Fun'},
    {var,{589,36},'Dst'},
    {var,{589,41},'GlobalWork'},
    {var,{590,25},'Defs'},
    {var,{590,31},'ValuesInFun'},
    {var,{590,44},'FivSt0'}],
   [],
   [{debug_line,591,205},
    {atom,{591,6},skip},
    {debug_line,592,206},
    {'case',
     {592,5},
     {call,
      {592,10},
      {atom,{592,10},fiv_get_update},
      [{block,0,[{op,{592,28},'+',{var,{592,25},'Idx'},{integer,{592,29},1}}]},
       {var,{592,32},'Updates'}]},
     [{clause,
       {593,9},
       [{tuple,
         {593,9},
         [{match,
           {593,10},
           {tuple,{593,10},[{atom,{593,10},b_var},{var,{593,10},'_'}]},
           {var,{593,19},'ToTrack'}},
          {var,{593,27},'_'}]}],
       [],
       [{debug_line,594,207},
        {atom,{594,14},skip},
        {debug_line,595,208},
        {call,
         {595,13},
         {atom,{595,13},fiv_track_value_in_fun},
         [{block,0,
           [{cons,
             {595,36},
             {tuple,
              {595,37},
              [{var,{595,38},'ToTrack'},{var,{595,46},'Element'}]},
             {var,{595,55},'Work'}}]},
          {var,{595,62},'Fun'},
          {var,{595,67},'GlobalWork'},
          {var,{596,36},'Defs'},
          {var,{596,42},'ValuesInFun'},
          {var,{596,55},'FivSt0'}]}]},
      {clause,
       {597,9},
       [{tuple,
         {597,9},
         [{tuple,{597,10},[{atom,{597,10},b_literal},{var,{597,25},'Lit'}]},
          {var,{597,30},'ArgNo'}]}],
       [],
       [{debug_line,598,209},
        {atom,{598,14},skip},
        {debug_line,600,210},
        {match,
         {600,13},
         {var,{600,13},'FivSt'},
         {call,
          {600,21},
          {atom,{600,21},fiv_add_literal},
          [{var,{600,37},'Lit'},
           {var,{600,42},'Element'},
           {var,{601,37},'Fun'},
           {block,0,
            [{debug_line,601,211},
             {tuple,
              {601,42},
              [{atom,{601,43},opargs},
               {var,{601,50},'Dst'},
               {var,{601,54},'ArgNo'},
               {var,{601,60},'Lit'},
               {var,{601,64},'Element'}]}]},
           {var,{602,37},'FivSt0'}]}},
        {debug_line,603,212},
        {call,
         {603,13},
         {atom,{603,13},fiv_track_value_in_fun},
         [{var,{603,36},'Work'},
          {var,{603,42},'Fun'},
          {var,{603,47},'GlobalWork'},
          {var,{604,36},'Defs'},
          {var,{604,42},'ValuesInFun'},
          {var,{604,55},'FivSt'}]}]},
      {clause,
       {605,9},
       [{atom,{605,9},none}],
       [],
       [{debug_line,606,213},
        {atom,{606,14},skip},
        {debug_line,607,214},
        {call,
         {607,13},
         {atom,{607,13},fiv_track_value_in_fun},
         [{block,0,
           [{cons,
             {607,36},
             {tuple,{607,37},[{var,{607,38},'Src'},{var,{607,42},'What'}]},
             {var,{607,48},'Work'}}]},
          {var,{607,55},'Fun'},
          {var,{607,60},'GlobalWork'},
          {var,{608,36},'Defs'},
          {var,{608,42},'ValuesInFun'},
          {var,{608,55},'FivSt0'}]}]}]}]}]}.
{function,{611,1},
          fiv_get_update,2,
          [{clause,{611,1},
                   [{var,{611,1},'_'},{var,{611,1},'_'}],
                   [[{call,{611,1},
                           {remote,{611,1},
                                   {atom,{611,1},fake},
                                   {atom,{611,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,611,215},{atom,{611,1},ignore}]},
           {clause,{611,1},
                   [{var,{611,16},'Idx'},{var,{611,21},'Updates'}],
                   [],
                   [{debug_line,612,216},
                    {call,{612,5},
                          {atom,{612,5},fiv_get_update},
                          [{var,{612,20},'Idx'},
                           {var,{612,25},'Updates'},
                           {integer,{612,34},3}]}]}]}.
{function,
    {614,1},
    fiv_get_update,3,
    [{clause,
         {614,1},
         [{var,{614,1},'_'},{var,{614,1},'_'},{var,{614,1},'_'}],
         [[{call,
               {614,1},
               {remote,
                   {614,1},
                   {atom,{614,1},fake},
                   {atom,{614,1},is_beam_bif_info}},
               []}]],
         [{debug_line,614,217},{atom,{614,1},ignore}]},
     {clause,
         {614,1},
         [{var,{614,16},'Idx'},
          {cons,
              {614,21},
              {tuple,
                  {614,22},
                  [{atom,{614,22},b_literal},{var,{614,37},'Idx'}]},
              {cons,{614,42},{var,{614,42},'Val'},{var,{614,46},'_Updates'}}},
          {var,{614,57},'ArgNo'}],
         [],
         [{debug_line,615,218},
          {tuple,
              {615,5},
              [{var,{615,6},'Val'},
               {op,{615,15},
                   '+',
                   {var,{615,10},'ArgNo'},
                   {integer,{615,16},1}}]}]},
     {clause,
         {616,1},
         [{var,{616,16},'Idx'},
          {cons,
              {616,21},
              {tuple,{616,22},[{atom,{616,22},b_literal},{var,{616,22},'_'}]},
              {cons,{616,35},{var,{616,35},'_'},{var,{616,37},'Updates'}}},
          {var,{616,47},'ArgNo'}],
         [],
         [{debug_line,617,219},
          {call,
              {617,5},
              {atom,{617,5},fiv_get_update},
              [{var,{617,20},'Idx'},
               {var,{617,25},'Updates'},
               {block,0,
                   [{op,{617,39},
                        '+',
                        {var,{617,34},'ArgNo'},
                        {integer,{617,40},2}}]}]}]},
     {clause,
         {618,1},
         [{var,{618,16},'_'},{nil,{618,19}},{var,{618,23},'_'}],
         [],
         [{debug_line,619,220},{atom,{619,5},none}]}]}.
{function,
    {621,1},
    fiv_track_put_list,9,
    [{clause,
         {621,1},
         [{var,{621,1},'_'},
          {var,{621,1},'_'},
          {var,{621,1},'_'},
          {var,{621,1},'_'},
          {var,{621,1},'_'},
          {var,{621,1},'_'},
          {var,{621,1},'_'},
          {var,{621,1},'_'},
          {var,{621,1},'_'}],
         [[{call,
               {621,1},
               {remote,
                   {621,1},
                   {atom,{621,1},fake},
                   {atom,{621,1},is_beam_bif_info}},
               []}]],
         [{debug_line,621,221},{atom,{621,1},ignore}]},
     {clause,
         {621,1},
         [{cons,
              {621,20},
              {var,{621,21},'Hd'},
              {cons,{621,24},{var,{621,24},'_Tl'},{nil,{621,27}}}},
          {tuple,
              {621,30},
              [{atom,{621,31},hd},
               {var,{621,34},'Element'},
               {var,{621,42},'_'}]},
          {var,{622,20},'Work'},
          {var,{622,26},'Fun'},
          {var,{622,31},'Dst'},
          {var,{622,36},'GlobalWork'},
          {var,{623,20},'Defs'},
          {var,{623,26},'ValuesInFun'},
          {var,{623,39},'FivSt0'}],
         [],
         [{debug_line,631,222},
          {'case',
              {631,5},
              {var,{631,10},'Hd'},
              [{clause,
                   {632,9},
                   [{tuple,{632,9},[{atom,{632,9},b_var},{var,{632,9},'_'}]}],
                   [],
                   [{debug_line,633,223},
                    {call,
                        {633,13},
                        {atom,{633,13},fiv_track_value_in_fun},
                        [{block,0,
                             [{cons,
                                  {633,36},
                                  {tuple,
                                      {633,37},
                                      [{var,{633,38},'Hd'},
                                       {var,{633,41},'Element'}]},
                                  {var,{633,50},'Work'}}]},
                         {var,{633,57},'Fun'},
                         {var,{633,62},'GlobalWork'},
                         {var,{634,36},'Defs'},
                         {var,{634,42},'ValuesInFun'},
                         {var,{634,55},'FivSt0'}]}]},
               {clause,
                   {635,9},
                   [{tuple,
                        {635,9},
                        [{atom,{635,9},b_literal},{var,{635,24},'Lit'}]}],
                   [],
                   [{debug_line,636,224},
                    {match,
                        {636,13},
                        {var,{636,13},'FivSt'},
                        {call,
                            {636,21},
                            {atom,{636,21},fiv_add_literal},
                            [{var,{636,37},'Lit'},
                             {var,{636,42},'Element'},
                             {var,{637,37},'Fun'},
                             {block,0,
                                 [{debug_line,637,225},
                                  {tuple,
                                      {637,42},
                                      [{atom,{637,43},opargs},
                                       {var,{637,50},'Dst'},
                                       {integer,{637,54},0},
                                       {var,{637,56},'Lit'},
                                       {var,{637,60},'Element'}]}]},
                             {var,{637,70},'FivSt0'}]}},
                    {debug_line,638,226},
                    {call,
                        {638,13},
                        {atom,{638,13},fiv_track_value_in_fun},
                        [{var,{638,36},'Work'},
                         {var,{638,42},'Fun'},
                         {var,{638,47},'GlobalWork'},
                         {var,{638,59},'Defs'},
                         {var,{639,36},'ValuesInFun'},
                         {var,{639,49},'FivSt'}]}]}]}]},
     {clause,
         {641,1},
         [{cons,
              {641,20},
              {var,{641,21},'_Hd'},
              {cons,{641,25},{var,{641,25},'_Tl'},{nil,{641,28}}}},
          {var,{641,31},'_'},
          {var,{641,34},'Work'},
          {var,{641,40},'Fun'},
          {var,{641,45},'_Dst'},
          {var,{641,51},'GlobalWork'},
          {var,{642,20},'Defs'},
          {var,{642,26},'ValuesInFun'},
          {var,{642,39},'DefSt'}],
         [],
         [{debug_line,645,227},
          {call,
              {645,5},
              {atom,{645,5},fiv_track_value_in_fun},
              [{var,{645,28},'Work'},
               {var,{645,34},'Fun'},
               {var,{645,39},'GlobalWork'},
               {var,{645,51},'Defs'},
               {var,{645,57},'ValuesInFun'},
               {var,{645,70},'DefSt'}]}]}]}.
{function,
 {649,1},
 fiv_get_call_arguments,6,
 [{clause,
   {649,1},
   [{var,{649,1},'_'},
    {var,{649,1},'_'},
    {var,{649,1},'_'},
    {var,{649,1},'_'},
    {var,{649,1},'_'},
    {var,{649,1},'_'}],
   [[{call,
      {649,1},
      {remote,{649,1},{atom,{649,1},fake},{atom,{649,1},is_beam_bif_info}},
      []}]],
   [{debug_line,649,228},{atom,{649,1},ignore}]},
  {clause,
   {649,1},
   [{var,{649,24},'Callee'},
    {var,{649,32},'Element'},
    {var,{649,41},'Idx'},
    {var,{649,46},'Defs'},
    {var,{649,52},'Fun'},
    {var,{649,57},'FivSt0'}],
   [],
   [{debug_line,651,229},
    {call,
     {651,5},
     {remote,{651,9},{atom,{651,5},maps},{atom,{651,10},fold}},
     [{block,0,
       [{'fun',
         {651,15},
         {clauses,
          [{clause,
            {651,18},
            [{var,{651,19},'_'},
             {tuple,
              {651,22},
              [{atom,{651,22},b_set},
               {var,{651,22},'_'},
               {var,{651,33},'Dst'},
               {atom,{651,40},call},
               {cons,{651,50},{var,{651,51},'Target'},{var,{651,58},'Args'}}]},
             {tuple,{651,66},[{var,{651,67},'Acc'},{var,{651,71},'FivSt'}]}],
            [[{op,
               {652,33},
               '=:=',
               {var,{652,26},'Callee'},
               {var,{652,37},'Target'}}]],
            [{debug_line,653,230},
             {match,
              {653,23},
              {tuple,
               {653,23},
               [{var,{653,24},'Values'},{var,{653,31},'FivSt1'}]},
              {call,
               {654,27},
               {atom,{654,27},fiv_gca},
               [{var,{654,35},'Args'},
                {var,{654,41},'Element'},
                {var,{654,50},'Idx'},
                {var,{654,55},'Fun'},
                {var,{654,60},'Dst'},
                {var,{654,65},'FivSt'}]}},
             {debug_line,655,231},
             {tuple,
              {655,23},
              [{op,{655,31},'++',{var,{655,24},'Values'},{var,{655,34},'Acc'}},
               {var,{655,39},'FivSt1'}]}]},
           {clause,
            {656,18},
            [{var,{656,19},'_'},{var,{656,22},'_'},{var,{656,25},'Acc'}],
            [],
            [{debug_line,657,232},{var,{657,23},'Acc'}]}]}}]},
      {block,0,
       [{debug_line,658,233},
        {tuple,{658,20},[{nil,{658,21}},{var,{658,25},'FivSt0'}]}]},
      {var,{658,34},'Defs'}]}]}]}.
{function,{660,1},
          fiv_gca,6,
          [{clause,{660,1},
                   [{var,{660,1},'_'},
                    {var,{660,1},'_'},
                    {var,{660,1},'_'},
                    {var,{660,1},'_'},
                    {var,{660,1},'_'},
                    {var,{660,1},'_'}],
                   [[{call,{660,1},
                           {remote,{660,1},
                                   {atom,{660,1},fake},
                                   {atom,{660,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,660,234},{atom,{660,1},ignore}]},
           {clause,{660,1},
                   [{var,{660,9},'Args'},
                    {var,{660,15},'Element'},
                    {var,{660,24},'Idx'},
                    {var,{660,29},'Fun'},
                    {var,{660,34},'Dst'},
                    {var,{660,39},'FivSt'}],
                   [],
                   [{debug_line,661,235},
                    {call,{661,5},
                          {atom,{661,5},fiv_gca},
                          [{var,{661,13},'Args'},
                           {integer,{661,19},0},
                           {var,{661,22},'Element'},
                           {var,{661,31},'Idx'},
                           {var,{661,36},'Fun'},
                           {var,{661,41},'Dst'},
                           {var,{661,46},'FivSt'}]}]}]}.
{function,
    {663,1},
    fiv_gca,7,
    [{clause,
         {663,1},
         [{var,{663,1},'_'},
          {var,{663,1},'_'},
          {var,{663,1},'_'},
          {var,{663,1},'_'},
          {var,{663,1},'_'},
          {var,{663,1},'_'},
          {var,{663,1},'_'}],
         [[{call,
               {663,1},
               {remote,
                   {663,1},
                   {atom,{663,1},fake},
                   {atom,{663,1},is_beam_bif_info}},
               []}]],
         [{debug_line,663,236},{atom,{663,1},ignore}]},
     {clause,
         {663,1},
         [{cons,
              {663,9},
              {match,
                  {663,10},
                  {tuple,{663,10},[{atom,{663,10},b_var},{var,{663,10},'_'}]},
                  {var,{663,19},'V'}},
              {var,{663,21},'_'}},
          {var,{663,25},'I'},
          {var,{663,28},'Element'},
          {var,{663,37},'I'},
          {var,{663,40},'_Fun'},
          {var,{663,46},'_Dst'},
          {var,{663,52},'FivSt'}],
         [],
         [{debug_line,665,237},
          {tuple,
              {665,5},
              [{cons,
                   {665,6},
                   {tuple,
                       {665,7},
                       [{var,{665,8},'V'},{var,{665,10},'Element'}]},
                   {nil,{665,18}}},
               {var,{665,21},'FivSt'}]}]},
     {clause,
         {666,1},
         [{cons,
              {666,9},
              {tuple,
                  {666,10},
                  [{atom,{666,10},b_literal},{var,{666,25},'Lit'}]},
              {var,{666,30},'_'}},
          {var,{666,34},'I'},
          {var,{666,37},'Element'},
          {var,{666,46},'I'},
          {var,{666,49},'Fun'},
          {var,{666,54},'Dst'},
          {var,{666,59},'FivSt'}],
         [],
         [{debug_line,667,238},
          {tuple,
              {667,5},
              [{nil,{667,6}},
               {call,
                   {667,10},
                   {atom,{667,10},fiv_add_literal},
                   [{var,{667,26},'Lit'},
                    {var,{667,31},'Element'},
                    {var,{667,40},'Fun'},
                    {block,0,
                        [{tuple,
                             {667,45},
                             [{atom,{667,46},opargs},
                              {var,{667,53},'Dst'},
                              {op,{667,58},
                                  '+',
                                  {var,{667,57},'I'},
                                  {integer,{667,59},1}},
                              {var,{667,61},'Lit'},
                              {var,{667,65},'Element'}]}]},
                    {var,{667,75},'FivSt'}]}]}]},
     {clause,
         {668,1},
         [{cons,{668,9},{var,{668,10},'_'},{var,{668,12},'Args'}},
          {var,{668,19},'I'},
          {var,{668,22},'Element'},
          {var,{668,31},'Idx'},
          {var,{668,36},'Fun'},
          {var,{668,41},'Dst'},
          {var,{668,46},'FivSt'}],
         [],
         [{debug_line,669,239},
          {call,
              {669,5},
              {atom,{669,5},fiv_gca},
              [{var,{669,13},'Args'},
               {block,0,
                   [{op,{669,21},
                        '+',
                        {var,{669,19},'I'},
                        {integer,{669,23},1}}]},
               {var,{669,26},'Element'},
               {var,{669,35},'Idx'},
               {var,{669,40},'Fun'},
               {var,{669,45},'Dst'},
               {var,{669,50},'FivSt'}]}]}]}.
{function,
 {671,1},
 fiv_handle_phi,5,
 [{clause,
   {671,1},
   [{var,{671,1},'_'},
    {var,{671,1},'_'},
    {var,{671,1},'_'},
    {var,{671,1},'_'},
    {var,{671,1},'_'}],
   [[{call,
      {671,1},
      {remote,{671,1},{atom,{671,1},fake},{atom,{671,1},is_beam_bif_info}},
      []}]],
   [{debug_line,671,240},{atom,{671,1},ignore}]},
  {clause,
   {671,1},
   [{var,{671,16},'Fun'},
    {var,{671,21},'Dst'},
    {var,{671,26},'Args'},
    {var,{671,32},'Element'},
    {var,{671,41},'FivSt0'}],
   [],
   [{debug_line,672,241},
    {call,
     {672,5},
     {remote,{672,5},{atom,{672,5},lists},{atom,{672,5},foldl}},
     [{block,0,
       [{'fun',
         {672,11},
         {clauses,
          [{clause,
            {672,14},
            [{tuple,
              {672,15},
              [{tuple,
                {672,16},
                [{atom,{672,16},b_literal},{var,{672,31},'Lit'}]},
               {var,{672,36},'Lbl'}]},
             {tuple,
              {672,42},
              [{var,{672,43},'Acc'},{var,{672,47},'FivStAcc0'}]}],
            [],
            [{debug_line,673,242},
             {match,
              {673,19},
              {var,{673,19},'FivStAcc'},
              {call,
               {674,23},
               {atom,{674,23},fiv_add_literal},
               [{var,{674,39},'Lit'},
                {var,{674,44},'Element'},
                {var,{675,39},'Fun'},
                {block,0,
                 [{debug_line,675,243},
                  {tuple,
                   {675,44},
                   [{atom,{675,45},phi},
                    {var,{675,49},'Dst'},
                    {var,{675,53},'Lbl'},
                    {var,{675,57},'Lit'},
                    {var,{675,61},'Element'}]}]},
                {var,{676,39},'FivStAcc0'}]}},
             {debug_line,677,244},
             {tuple,
              {677,19},
              [{var,{677,20},'Acc'},{var,{677,25},'FivStAcc'}]}]},
           {clause,
            {678,14},
            [{tuple,
              {678,15},
              [{match,
                {678,16},
                {var,{678,16},'V'},
                {tuple,{678,18},[{atom,{678,18},b_var},{var,{678,18},'_'}]}},
               {var,{678,27},'_Lbl'}]},
             {tuple,
              {678,34},
              [{var,{678,35},'Acc'},{var,{678,39},'FivStAcc'}]}],
            [],
            [{debug_line,679,245},
             {atom,{679,20},skip},
             {debug_line,680,246},
             {tuple,
              {680,19},
              [{cons,
                {680,20},
                {tuple,{680,21},[{var,{680,22},'V'},{var,{680,24},'Element'}]},
                {var,{680,33},'Acc'}},
               {var,{680,38},'FivStAcc'}]}]}]}}]},
      {block,0,
       [{debug_line,681,247},
        {tuple,{681,16},[{nil,{681,17}},{var,{681,20},'FivSt0'}]}]},
      {var,{681,29},'Args'}]}]}]}.
{function,
 {684,1},
 fiv_defs_in_fun,4,
 [{clause,
   {684,1},
   [{var,{684,1},'_'},{var,{684,1},'_'},{var,{684,1},'_'},{var,{684,1},'_'}],
   [[{call,
      {684,1},
      {remote,{684,1},{atom,{684,1},fake},{atom,{684,1},is_beam_bif_info}},
      []}]],
   [{debug_line,684,248},{atom,{684,1},ignore}]},
  {clause,
   {684,1},
   [{var,{684,17},'Fun'},
    {var,{684,22},'Args'},
    {var,{684,28},'SSA'},
    {match,
     {684,33},
     {var,{684,33},'FivSt'},
     {tuple,
      {684,39},
      [{atom,{684,39},fiv_st},
       {var,{684,39},'_'},
       {var,{684,39},'_'},
       {var,{684,54},'DefsDb'},
       {var,{684,39},'_'},
       {var,{684,39},'_'},
       {var,{684,39},'_'}]}}],
   [],
   [{debug_line,685,249},
    {'case',
     {685,5},
     {var,{685,10},'DefsDb'},
     [{clause,
       {686,9},
       [{map,
         {686,9},
         [{map_field_exact,
           {686,14},
           {var,{686,11},'Fun'},
           {var,{686,16},'Defs'}}]}],
       [],
       [{debug_line,687,250},
        {tuple,{687,13},[{var,{687,14},'Defs'},{var,{687,20},'FivSt'}]}]},
      {clause,
       {688,9},
       [{map,{688,9},[]}],
       [],
       [{debug_line,689,251},
        {match,
         {689,13},
         {var,{689,13},'BlockMap'},
         {call,
          {689,24},
          {remote,{689,28},{atom,{689,24},maps},{atom,{689,29},from_list}},
          [{var,{689,39},'SSA'}]}},
        {debug_line,690,252},
        {match,
         {690,13},
         {var,{690,13},'Labels'},
         {call,
          {690,22},
          {remote,{690,26},{atom,{690,22},maps},{atom,{690,27},keys}},
          [{var,{690,32},'BlockMap'}]}},
        {debug_line,691,253},
        {match,
         {691,13},
         {var,{691,13},'Defs0'},
         {call,
          {691,21},
          {remote,
           {691,29},
           {atom,{691,21},beam_ssa},
           {atom,{691,30},definitions}},
          [{var,{691,42},'Labels'},{var,{691,50},'BlockMap'}]}},
        {debug_line,692,254},
        {match,
         {692,13},
         {tuple,{692,13},[{var,{692,14},'Defs'},{var,{692,19},'_'}]},
         {call,
          {692,24},
          {remote,{692,24},{atom,{692,24},lists},{atom,{692,24},foldl}},
          [{block,0,
            [{'fun',
              {692,30},
              {clauses,
               [{clause,
                 {692,33},
                 [{var,{692,34},'Arg'},
                  {tuple,
                   {692,39},
                   [{var,{692,40},'Acc'},{var,{692,44},'Idx'}]}],
                 [],
                 [{debug_line,693,255},
                  {tuple,
                   {693,38},
                   [{map,
                     {693,42},
                     {var,{693,39},'Acc'},
                     [{map_field_assoc,
                       {693,48},
                       {var,{693,44},'Arg'},
                       {tuple,
                        {693,51},
                        [{atom,{693,52},arg},{var,{693,56},'Idx'}]}}]},
                    {op,
                     {693,67},
                     '+',
                     {var,{693,63},'Idx'},
                     {integer,{693,69},1}}]}]}]}}]},
           {block,0,
            [{debug_line,694,256},
             {tuple,{694,35},[{var,{694,36},'Defs0'},{integer,{694,42},0}]}]},
           {var,{694,46},'Args'}]}},
        {debug_line,695,257},
        {tuple,
         {695,13},
         [{var,{695,14},'Defs'},
          {block,
           {695,20},
           [{match,
             {695,33},
             {var,{695,33},rec6},
             {map,
              {695,46},
              {var,{695,40},'DefsDb'},
              [{map_field_assoc,
                {695,51},
                {var,{695,48},'Fun'},
                {var,{695,53},'Defs'}}]}},
            {match,{695,20},{var,{695,20},rec7},{var,{695,20},'FivSt'}},
            {'case',
             {695,33},
             {var,{695,20},rec7},
             [{clause,
               {695,33},
               [{tuple,
                 {695,33},
                 [{atom,{695,33},fiv_st},
                  {var,{695,33},'_'},
                  {var,{695,33},'_'},
                  {var,{695,33},'_'},
                  {var,{695,33},'_'},
                  {var,{695,33},'_'},
                  {var,{695,33},'_'}]}],
               [],
               [{call,
                 {695,33},
                 {remote,
                  {695,33},
                  {atom,{695,33},erlang},
                  {atom,{695,33},setelement}},
                 [{integer,{695,33},4},
                  {var,{695,20},rec7},
                  {var,{695,33},rec6}]}]},
              {clause,
               [{generated,true},{location,{695,33}}],
               [{var,[{generated,true},{location,{695,33}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{695,33}}],
                 {remote,
                  [{generated,true},{location,{695,33}}],
                  {atom,[{generated,true},{location,{695,33}}],erlang},
                  {atom,[{generated,true},{location,{695,33}}],error}},
                 [{tuple,
                   [{generated,true},{location,{695,33}}],
                   [{atom,[{generated,true},{location,{695,33}}],badrecord},
                    {var,{695,20},rec7}]}]}]}]}]}]}]}]}]}]}.
{function,{699,1},
          fiv_values_in_fun,2,
          [{clause,{699,1},
                   [{var,{699,1},'_'},{var,{699,1},'_'}],
                   [[{call,{699,1},
                           {remote,{699,1},
                                   {atom,{699,1},fake},
                                   {atom,{699,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,699,258},{atom,{699,1},ignore}]},
           {clause,{699,1},
                   [{var,{699,19},'Fun'},
                    {tuple,{699,24},
                           [{atom,{699,24},fiv_st},
                            {var,{699,24},'_'},
                            {var,{699,24},'_'},
                            {var,{699,24},'_'},
                            {var,{699,24},'_'},
                            {var,{699,41},'ValuesDb'},
                            {var,{699,24},'_'}]}],
                   [],
                   [{debug_line,700,259},
                    {call,{700,5},
                          {remote,{700,9},
                                  {atom,{700,5},maps},
                                  {atom,{700,10},get}},
                          [{var,{700,14},'Fun'},
                           {var,{700,19},'ValuesDb'},
                           {block,0,[{map,{700,29},[]}]}]}]}]}.
{function,
 {710,1},
 fiv_add_literal,5,
 [{clause,
   {710,1},
   [{var,{710,1},'_'},
    {var,{710,1},'_'},
    {var,{710,1},'_'},
    {var,{710,1},'_'},
    {var,{710,1},'_'}],
   [[{call,
      {710,1},
      {remote,{710,1},{atom,{710,1},fake},{atom,{710,1},is_beam_bif_info}},
      []}]],
   [{debug_line,710,260},{atom,{710,1},ignore}]},
  {clause,
   {710,1},
   [{var,{710,17},'Lit'},
    {var,{710,22},'Element'},
    {var,{710,31},'Fun'},
    {var,{710,36},'LitInfo'},
    {match,
     {710,45},
     {var,{710,45},'FivSt'},
     {tuple,
      {710,51},
      [{atom,{710,51},fiv_st},
       {var,{710,51},'_'},
       {var,{710,51},'_'},
       {var,{710,51},'_'},
       {var,{710,68},'Ls'},
       {var,{710,51},'_'},
       {var,{710,51},'_'}]}}],
   [],
   [{debug_line,711,261},
    {'case',
     {711,5},
     {call,
      {711,10},
      {atom,{711,10},fiv_are_lit_and_element_compatible},
      [{var,{711,45},'Lit'},{var,{711,50},'Element'}]},
     [{clause,
       {712,9},
       [{atom,{712,9},true}],
       [],
       [{debug_line,713,262},
        {match,
         {713,13},
         {var,{713,13},'PerFun0'},
         {call,
          {713,23},
          {remote,{713,27},{atom,{713,23},maps},{atom,{713,28},get}},
          [{var,{713,32},'Fun'},
           {var,{713,37},'Ls'},
           {block,0,[{map,{713,41},[]}]}]}},
        {debug_line,714,263},
        {match,
         {714,13},
         {var,{714,13},'Key'},
         {call,
          {714,19},
          {remote,{714,19},{atom,{714,19},erlang},{atom,{714,19},element}},
          [{integer,{714,27},2},{var,{714,30},'LitInfo'}]}},
        {debug_line,715,264},
        {match,
         {715,13},
         {var,{715,13},'PerKey'},
         {call,
          {715,22},
          {remote,{715,26},{atom,{715,22},maps},{atom,{715,27},get}},
          [{var,{715,31},'Key'},{var,{715,36},'PerFun0'},{nil,{715,45}}]}},
        {debug_line,717,265},
        {atom,{717,14},skip},
        {debug_line,724,266},
        {match,
         {724,13},
         {var,{724,13},'PerFun'},
         {map,
          {724,29},
          {var,{724,22},'PerFun0'},
          [{map_field_assoc,
            {724,35},
            {var,{724,31},'Key'},
            {call,
             {724,38},
             {remote,
              {724,45},
              {atom,{724,38},ordsets},
              {atom,{724,46},add_element}},
             [{var,{724,58},'LitInfo'},{var,{724,67},'PerKey'}]}}]}},
        {debug_line,725,267},
        {block,
         {725,13},
         [{match,
           {725,26},
           {var,{725,26},rec8},
           {map,
            {725,37},
            {var,{725,35},'Ls'},
            [{map_field_assoc,
              {725,43},
              {var,{725,39},'Fun'},
              {var,{725,46},'PerFun'}}]}},
          {match,{725,13},{var,{725,13},rec9},{var,{725,13},'FivSt'}},
          {'case',
           {725,26},
           {var,{725,13},rec9},
           [{clause,
             {725,26},
             [{tuple,
               {725,26},
               [{atom,{725,26},fiv_st},
                {var,{725,26},'_'},
                {var,{725,26},'_'},
                {var,{725,26},'_'},
                {var,{725,26},'_'},
                {var,{725,26},'_'},
                {var,{725,26},'_'}]}],
             [],
             [{call,
               {725,26},
               {remote,
                {725,26},
                {atom,{725,26},erlang},
                {atom,{725,26},setelement}},
               [{integer,{725,26},5},
                {var,{725,13},rec9},
                {var,{725,26},rec8}]}]},
            {clause,
             [{generated,true},{location,{725,26}}],
             [{var,[{generated,true},{location,{725,26}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{725,26}}],
               {remote,
                [{generated,true},{location,{725,26}}],
                {atom,[{generated,true},{location,{725,26}}],erlang},
                {atom,[{generated,true},{location,{725,26}}],error}},
               [{tuple,
                 [{generated,true},{location,{725,26}}],
                 [{atom,[{generated,true},{location,{725,26}}],badrecord},
                  {var,{725,13},rec9}]}]}]}]}]}]},
      {clause,
       {726,9},
       [{atom,{726,9},false}],
       [],
       [{debug_line,727,268},{var,{727,13},'FivSt'}]}]}]}]}.
{function,
 {732,1},
 fiv_are_lit_and_element_compatible,2,
 [{clause,
   {732,1},
   [{var,{732,1},'_'},{var,{732,1},'_'}],
   [[{call,
      {732,1},
      {remote,{732,1},{atom,{732,1},fake},{atom,{732,1},is_beam_bif_info}},
      []}]],
   [{debug_line,732,269},{atom,{732,1},ignore}]},
  {clause,
   {732,1},
   [{var,{732,36},'Lit'},{var,{732,41},'Element'}],
   [],
   [{debug_line,733,270},
    {'case',
     {733,5},
     {var,{733,10},'Element'},
     [{clause,
       {734,9},
       [{tuple,
         {734,9},
         [{atom,{734,10},tuple_element},
          {var,{734,24},'Idx'},
          {var,{734,28},'E'},
          {var,{734,30},'_'}]}],
       [[{call,
          {735,16},
          {remote,{735,16},{atom,{735,16},erlang},{atom,{735,16},is_tuple}},
          [{var,{735,25},'Lit'}]},
         {op,
          {735,54},
          '>',
          {call,
           {735,31},
           {remote,{735,37},{atom,{735,31},erlang},{atom,{735,38},tuple_size}},
           [{var,{735,49},'Lit'}]},
          {var,{735,56},'Idx'}}]],
       [{debug_line,736,271},
        {call,
         {736,13},
         {atom,{736,13},fiv_are_lit_and_element_compatible},
         [{block,0,
           [{call,
             {736,48},
             {remote,{736,54},{atom,{736,48},erlang},{atom,{736,55},element}},
             [{block,0,
               [{op,{736,67},'+',{var,{736,63},'Idx'},{integer,{736,69},1}}]},
              {var,{736,72},'Lit'}]}]},
          {var,{736,78},'E'}]}]},
      {clause,
       {737,9},
       [{tuple,{737,9},[{atom,{737,10},self},{atom,{737,15},heap_tuple}]}],
       [],
       [{debug_line,738,272},
        {call,
         {738,13},
         {remote,{738,13},{atom,{738,13},erlang},{atom,{738,13},is_tuple}},
         [{var,{738,22},'Lit'}]}]},
      {clause,
       {739,9},
       [{tuple,{739,9},[{atom,{739,10},self},{atom,{739,15},init_writable}]}],
       [],
       [{debug_line,740,273},
        {call,
         {740,13},
         {remote,{740,13},{atom,{740,13},erlang},{atom,{740,13},is_bitstring}},
         [{var,{740,26},'Lit'}]}]},
      {clause,
       {741,9},
       [{tuple,
         {741,9},
         [{atom,{741,10},hd},{var,{741,13},'E'},{var,{741,15},'_'}]}],
       [[{call,
          {741,23},
          {remote,{741,23},{atom,{741,23},erlang},{atom,{741,23},is_list}},
          [{var,{741,31},'Lit'}]},
         {op,{741,42},'=/=',{var,{741,38},'Lit'},{nil,{741,46}}}]],
       [{debug_line,742,274},
        {match,
         {742,13},
         {cons,{742,13},{var,{742,14},'L'},{var,{742,16},'_'}},
         {var,{742,21},'Lit'}},
        {debug_line,743,275},
        {call,
         {743,13},
         {atom,{743,13},fiv_are_lit_and_element_compatible},
         [{var,{743,48},'L'},{var,{743,51},'E'}]}]},
      {clause,
       {744,9},
       [{var,{744,9},'_'}],
       [],
       [{debug_line,745,276},{atom,{745,13},false}]}]}]}]}.
{function,{748,1},
          fiv_get_new_depth,1,
          [{clause,{748,1},
                   [{var,{748,1},'_'}],
                   [[{call,{748,1},
                           {remote,{748,1},
                                   {atom,{748,1},fake},
                                   {atom,{748,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,748,277},{atom,{748,1},ignore}]},
           {clause,{748,1},
                   [{tuple,{748,19},
                           [{atom,{748,20},tuple_element},
                            {var,{748,34},'_'},
                            {var,{748,36},'_'},
                            {var,{748,38},'D'}]}],
                   [[{op,{748,49},
                         '>',
                         {var,{748,47},'D'},
                         {integer,{748,52},15}}]],
                   [{debug_line,749,278},
                    {call,{749,5},
                          {remote,{749,5},
                                  {atom,{749,5},erlang},
                                  {atom,{749,5},throw}},
                          [{atom,{749,11},too_deep}]}]},
           {clause,{750,1},
                   [{tuple,{750,19},
                           [{atom,{750,20},tuple_element},
                            {var,{750,34},'_'},
                            {var,{750,36},'_'},
                            {var,{750,38},'D'}]}],
                   [],
                   [{debug_line,751,279},
                    {op,{751,7},'+',{var,{751,5},'D'},{integer,{751,9},1}}]},
           {clause,{752,1},
                   [{tuple,{752,19},
                           [{atom,{752,20},hd},
                            {var,{752,23},'_'},
                            {var,{752,25},'D'}]}],
                   [[{op,{752,36},
                         '>',
                         {var,{752,34},'D'},
                         {integer,{752,39},15}}]],
                   [{debug_line,753,280},
                    {call,{753,5},
                          {remote,{753,5},
                                  {atom,{753,5},erlang},
                                  {atom,{753,5},throw}},
                          [{atom,{753,11},too_deep}]}]},
           {clause,{754,1},
                   [{tuple,{754,19},
                           [{atom,{754,20},hd},
                            {var,{754,23},'_'},
                            {var,{754,25},'D'}]}],
                   [],
                   [{debug_line,755,281},
                    {op,{755,7},'+',{var,{755,5},'D'},{integer,{755,9},1}}]},
           {clause,{756,1},
                   [{var,{756,19},'_'}],
                   [],
                   [{debug_line,757,282},{integer,{757,5},0}]}]}.
{function,
    {759,1},
    fiv_elem_is_compatible,2,
    [{clause,
         {759,1},
         [{var,{759,1},'_'},{var,{759,1},'_'}],
         [[{call,
               {759,1},
               {remote,
                   {759,1},
                   {atom,{759,1},fake},
                   {atom,{759,1},is_beam_bif_info}},
               []}]],
         [{debug_line,759,283},{atom,{759,1},ignore}]},
     {clause,
         {759,1},
         [{tuple,
              {759,24},
              [{atom,{759,25},tuple_element},
               {var,{759,39},'Idx'},
               {var,{759,43},'Element'},
               {var,{759,51},'_'}]},
          {tuple,
              {760,24},
              [{atom,{760,24},t_tuple},
               {var,{760,24},'_'},
               {atom,{760,39},true},
               {var,{760,53},'Types'}]}],
         [],
         [{debug_line,764,284},
          {call,
              {764,5},
              {atom,{764,5},fiv_elem_is_compatible},
              [{var,{764,28},'Element'},
               {block,0,
                   [{call,
                        {764,37},
                        {remote,
                            {764,41},
                            {atom,{764,37},maps},
                            {atom,{764,42},get}},
                        [{block,0,
                             [{op,{764,50},
                                  '+',
                                  {var,{764,46},'Idx'},
                                  {integer,{764,52},1}}]},
                         {var,{764,55},'Types'},
                         {atom,{764,62},any}]}]}]}]},
     {clause,
         {765,1},
         [{match,
              {765,24},
              {tuple,
                  {765,24},
                  [{atom,{765,25},tuple_element},
                   {var,{765,39},'_'},
                   {var,{765,41},'_'},
                   {var,{765,43},'_'}]},
              {var,{765,46},'Element'}},
          {tuple,
              {766,24},
              [{atom,{766,24},t_union},
               {var,{766,24},'_'},
               {var,{766,24},'_'},
               {var,{766,24},'_'},
               {var,{766,43},'TS'},
               {var,{766,24},'_'}]}],
         [],
         [{debug_line,767,285},
          {call,
              {767,5},
              {atom,{767,5},fiv_elem_is_compatible_with_ts},
              [{var,{767,36},'Element'},{var,{767,45},'TS'}]}]},
     {clause,
         {768,1},
         [{tuple,{768,24},[{atom,{768,25},self},{atom,{768,30},heap_tuple}]},
          {tuple,
              {768,43},
              [{atom,{768,43},t_tuple},
               {var,{768,43},'_'},
               {var,{768,43},'_'},
               {var,{768,43},'_'}]}],
         [],
         [{debug_line,769,286},{atom,{769,5},true}]},
     {clause,
         {770,1},
         [{match,
              {770,24},
              {tuple,
                  {770,24},
                  [{atom,{770,25},self},{atom,{770,30},heap_tuple}]},
              {var,{770,42},'Element'}},
          {tuple,
              {770,51},
              [{atom,{770,51},t_union},
               {var,{770,51},'_'},
               {var,{770,51},'_'},
               {var,{770,51},'_'},
               {var,{770,70},'TS'},
               {var,{770,51},'_'}]}],
         [],
         [{debug_line,771,287},
          {call,
              {771,5},
              {atom,{771,5},fiv_elem_is_compatible_with_ts},
              [{var,{771,36},'Element'},{var,{771,45},'TS'}]}]},
     {clause,
         {772,1},
         [{tuple,{772,24},[{atom,{772,25},self},{atom,{772,30},heap_tuple}]},
          {atom,{772,43},any}],
         [],
         [{debug_line,773,288},{atom,{773,5},true}]},
     {clause,
         {774,1},
         [{tuple,{774,24},[{atom,{774,25},self},{atom,{774,30},heap_tuple}]},
          {var,{774,43},'_'}],
         [],
         [{debug_line,777,289},{atom,{777,5},false}]},
     {clause,
         {778,1},
         [{tuple,
              {778,24},
              [{atom,{778,25},hd},
               {var,{778,28},'Element'},
               {var,{778,36},'_'}]},
          {tuple,
              {778,40},
              [{atom,{778,40},t_cons},{var,{778,53},'T'},{var,{778,40},'_'}]}],
         [],
         [{debug_line,779,290},
          {call,
              {779,5},
              {atom,{779,5},fiv_elem_is_compatible},
              [{var,{779,28},'Element'},{var,{779,37},'T'}]}]},
     {clause,
         {780,1},
         [{tuple,
              {780,24},
              [{atom,{780,25},hd},
               {var,{780,28},'Element'},
               {var,{780,36},'_'}]},
          {tuple,
              {780,40},
              [{atom,{780,40},t_union},
               {var,{780,40},'_'},
               {var,{780,54},'T'},
               {var,{780,40},'_'},
               {var,{780,40},'_'},
               {var,{780,40},'_'}]}],
         [],
         [{debug_line,781,291},
          {call,
              {781,5},
              {atom,{781,5},fiv_elem_is_compatible},
              [{var,{781,28},'Element'},{var,{781,37},'T'}]}]},
     {clause,
         {782,1},
         [{tuple,
              {782,24},
              [{atom,{782,25},hd},{var,{782,28},'_'},{var,{782,30},'_'}]},
          {var,{782,34},'_'}],
         [],
         [{debug_line,785,292},{atom,{785,5},false}]},
     {clause,
         {786,1},
         [{var,{786,24},'_Element'},{var,{786,34},'_Type'}],
         [],
         [{debug_line,789,293},{atom,{789,5},true}]}]}.
{function,
 {791,1},
 fiv_get_effective_tuple_set_type,2,
 [{clause,
   {791,1},
   [{var,{791,1},'_'},{var,{791,1},'_'}],
   [[{call,
      {791,1},
      {remote,{791,1},{atom,{791,1},fake},{atom,{791,1},is_beam_bif_info}},
      []}]],
   [{debug_line,791,294},{atom,{791,1},ignore}]},
  {clause,
   {791,1},
   [{var,{791,34},'TupleIdx'},{var,{791,44},'TS'}],
   [],
   [{debug_line,792,295},
    {call,
     {792,5},
     {remote,{792,15},{atom,{792,5},beam_types},{atom,{792,16},join}},
     [{block,0,
       [{lc,
         {792,21},
         {block,0,
          [{call,
            {792,22},
            {remote,{792,26},{atom,{792,22},maps},{atom,{792,27},get}},
            [{block,0,
              [{op,
                {792,40},
                '+',
                {var,{792,31},'TupleIdx'},
                {integer,{792,42},1}}]},
             {var,{792,45},'Es'},
             {atom,{792,49},any}]}]},
         [{block,0,[{debug_line,793,296},{atom,{793,54},true}]},
          {generate,
           {793,51},
           {tuple,
            {793,25},
            [{var,{793,26},'_'},
             {tuple,
              {793,28},
              [{atom,{793,28},t_tuple},
               {var,{793,28},'_'},
               {var,{793,28},'_'},
               {var,{793,46},'Es'}]}]},
           {var,{793,54},'TS'}}]}]}]}]}]}.
{function,
    {796,1},
    fiv_elem_is_compatible_with_ts,2,
    [{clause,
         {796,1},
         [{var,{796,1},'_'},{var,{796,1},'_'}],
         [[{call,
               {796,1},
               {remote,
                   {796,1},
                   {atom,{796,1},fake},
                   {atom,{796,1},is_beam_bif_info}},
               []}]],
         [{debug_line,796,297},{atom,{796,1},ignore}]},
     {clause,
         {796,1},
         [{var,{796,32},'Element'},
          {match,
              {796,41},
              {tuple,
                  {796,41},
                  [{atom,{796,41},t_tuple},
                   {var,{796,41},'_'},
                   {var,{796,41},'_'},
                   {var,{796,41},'_'}]},
              {var,{796,52},'Type'}}],
         [],
         [{debug_line,797,298},
          {call,
              {797,5},
              {atom,{797,5},fiv_elem_is_compatible},
              [{var,{797,28},'Element'},{var,{797,37},'Type'}]}]},
     {clause,
         {798,1},
         [{var,{798,32},'Element'},
          {cons,
              {798,41},
              {tuple,{798,42},[{var,{798,43},'_'},{var,{798,45},'T'}]},
              {var,{798,48},'Rest'}}],
         [],
         [{debug_line,799,299},
          {'case',
              {799,5},
              {call,
                  {799,5},
                  {atom,{799,5},fiv_elem_is_compatible},
                  [{var,{799,28},'Element'},{var,{799,37},'T'}]},
              [{clause,{799,5},[{atom,{799,5},true}],[],[{atom,{799,5},true}]},
               {clause,
                   {799,5},
                   [{atom,{799,5},false}],
                   [],
                   [{debug_line,800,300},
                    {call,
                        {800,16},
                        {atom,{800,16},fiv_elem_is_compatible_with_ts},
                        [{var,{800,47},'Element'},{var,{800,56},'Rest'}]}]},
               {clause,
                   [{generated,true},{location,{799,5}}],
                   [{var,{799,5},cov1}],
                   [],
                   [{call,
                        {799,5},
                        {remote,
                            {799,5},
                            {atom,{799,5},erlang},
                            {atom,{799,5},error}},
                        [{block,0,
                             [{tuple,
                                  {799,5},
                                  [{atom,{799,5},badarg},
                                   {var,{799,5},cov1}]}]}]}]}]}]},
     {clause,
         {801,1},
         [{var,{801,32},'_Element'},{nil,{801,42}}],
         [],
         [{debug_line,803,301},{atom,{803,5},false}]}]}.
{function,{805,1},
          patch_f,3,
          [{clause,{805,1},
                   [{var,{805,1},'_'},{var,{805,1},'_'},{var,{805,1},'_'}],
                   [[{call,{805,1},
                           {remote,{805,1},
                                   {atom,{805,1},fake},
                                   {atom,{805,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,805,302},{atom,{805,1},ignore}]},
           {clause,{805,1},
                   [{var,{805,9},'SSA0'},
                    {var,{805,15},'Cnt0'},
                    {var,{805,21},'Patches'}],
                   [],
                   [{debug_line,806,303},
                    {call,{806,5},
                          {atom,{806,5},patch_f},
                          [{var,{806,13},'SSA0'},
                           {var,{806,19},'Cnt0'},
                           {var,{806,25},'Patches'},
                           {nil,{806,34}},
                           {nil,{806,38}}]}]}]}.
{function,
 {808,1},
 patch_f,5,
 [{clause,
   {808,1},
   [{var,{808,1},'_'},
    {var,{808,1},'_'},
    {var,{808,1},'_'},
    {var,{808,1},'_'},
    {var,{808,1},'_'}],
   [[{call,
      {808,1},
      {remote,{808,1},{atom,{808,1},fake},{atom,{808,1},is_beam_bif_info}},
      []}]],
   [{debug_line,808,304},{atom,{808,1},ignore}]},
  {clause,
   {808,1},
   [{cons,
     {808,9},
     {tuple,
      {808,10},
      [{var,{808,11},'Lbl'},
       {match,
        {808,15},
        {var,{808,15},'Blk'},
        {tuple,
         {808,19},
         [{atom,{808,19},b_blk},
          {var,{808,19},'_'},
          {var,{808,29},'Is0'},
          {var,{808,38},'Last0'}]}}]},
     {var,{808,46},'Rest'}},
    {var,{809,9},'Cnt0'},
    {var,{809,15},'PD0'},
    {var,{809,20},'Acc0'},
    {var,{809,26},'BlockAdditions0'}],
   [],
   [{debug_line,810,305},
    {match,
     {810,5},
     {tuple,
      {810,5},
      [{var,{810,6},'Last'},
       {var,{810,11},'Extra'},
       {var,{810,17},'Cnt2'},
       {var,{810,22},'PD'}]},
     {'case',
      {811,9},
      {var,{811,14},'PD0'},
      [{clause,
        {812,13},
        [{map,
          {812,13},
          [{map_field_exact,
            {812,20},
            {var,{812,16},'Lbl'},
            {var,{812,23},'Patches'}}]}],
        [],
        [{debug_line,813,306},
         {match,
          {813,17},
          {tuple,
           {813,17},
           [{var,{813,18},'Last1'},
            {var,{813,24},'Extra0'},
            {var,{813,31},'Cnt1'}]},
          {call,
           {813,39},
           {atom,{813,39},patch_ret},
           [{var,{813,49},'Last0'},
            {var,{813,56},'Patches'},
            {var,{813,65},'Cnt0'}]}},
         {debug_line,814,307},
         {tuple,
          {814,17},
          [{var,{814,18},'Last1'},
           {call,
            {814,24},
            {remote,{814,24},{atom,{814,24},lists},{atom,{814,24},reverse}},
            [{var,{814,32},'Extra0'}]},
           {var,{814,40},'Cnt1'},
           {call,
            {814,45},
            {remote,{814,49},{atom,{814,45},maps},{atom,{814,50},remove}},
            [{var,{814,57},'Lbl'},{var,{814,62},'PD0'}]}]}]},
       {clause,
        {815,13},
        [{map,{815,13},[]}],
        [],
        [{debug_line,816,308},
         {tuple,
          {816,17},
          [{var,{816,18},'Last0'},
           {nil,{816,24}},
           {var,{816,27},'Cnt0'},
           {var,{816,32},'PD0'}]}]}]}},
    {debug_line,818,309},
    {match,
     {818,5},
     {tuple,
      {818,5},
      [{var,{818,6},'Is'},
       {var,{818,9},'Cnt'},
       {var,{818,13},'BlockAdditions'}]},
     {call,
      {818,31},
      {atom,{818,31},patch_is},
      [{var,{818,40},'Is0'},
       {var,{818,45},'PD'},
       {var,{818,49},'Cnt2'},
       {nil,{818,55}},
       {nil,{818,59}}]}},
    {debug_line,819,310},
    {match,
     {819,5},
     {var,{819,5},'Acc'},
     {cons,
      {819,11},
      {tuple,
       {819,12},
       [{var,{819,13},'Lbl'},
        {block,
         {819,17},
         [{match,
           {819,27},
           {var,{819,27},rec10},
           {op,{819,32},'++',{var,{819,30},'Is'},{var,{819,34},'Extra'}}},
          {match,{819,17},{var,{819,17},rec11},{var,{819,17},'Blk'}},
          {'case',
           {819,27},
           {var,{819,17},rec11},
           [{clause,
             {819,27},
             [{tuple,
               {819,27},
               [{atom,{819,27},b_blk},
                {var,{819,27},'_'},
                {var,{819,27},'_'},
                {var,{819,27},'_'}]}],
             [],
             [{call,
               {819,27},
               {remote,
                {819,27},
                {atom,{819,27},erlang},
                {atom,{819,27},setelement}},
               [{integer,{819,27},3},
                {call,
                 {819,40},
                 {remote,
                  {819,40},
                  {atom,{819,40},erlang},
                  {atom,{819,40},setelement}},
                 [{integer,{819,40},4},
                  {var,{819,17},rec11},
                  {var,{819,45},'Last'}]},
                {var,{819,27},rec10}]}]},
            {clause,
             [{generated,true},{location,{819,27}}],
             [{var,[{generated,true},{location,{819,27}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{819,27}}],
               {remote,
                [{generated,true},{location,{819,27}}],
                {atom,[{generated,true},{location,{819,27}}],erlang},
                {atom,[{generated,true},{location,{819,27}}],error}},
               [{tuple,
                 [{generated,true},{location,{819,27}}],
                 [{atom,[{generated,true},{location,{819,27}}],badrecord},
                  {var,{819,17},rec11}]}]}]}]}]}]},
      {var,{819,52},'Acc0'}}},
    {debug_line,820,311},
    {call,
     {820,5},
     {atom,{820,5},patch_f},
     [{var,{820,13},'Rest'},
      {var,{820,19},'Cnt'},
      {var,{820,24},'PD'},
      {var,{820,28},'Acc'},
      {block,0,
       [{op,
         {820,47},
         '++',
         {var,{820,33},'BlockAdditions'},
         {var,{820,49},'BlockAdditions0'}}]}]}]},
  {clause,
   {821,1},
   [{nil,{821,9}},
    {var,{821,13},'Cnt'},
    {var,{821,18},'_PD'},
    {var,{821,23},'Acc'},
    {var,{821,28},'BlockAdditions'}],
   [],
   [{debug_line,822,312},
    {atom,{822,6},skip},
    {debug_line,823,313},
    {match,
     {823,5},
     {var,{823,5},'Linear'},
     {call,
      {823,14},
      {atom,{823,14},insert_block_additions},
      [{var,{823,37},'Acc'},
       {block,0,
        [{call,
          {823,42},
          {remote,{823,46},{atom,{823,42},maps},{atom,{823,47},from_list}},
          [{var,{823,57},'BlockAdditions'}]}]},
       {nil,{823,74}}]}},
    {debug_line,824,314},
    {atom,{824,6},skip},
    {debug_line,825,315},
    {tuple,{825,5},[{var,{825,6},'Linear'},{var,{825,14},'Cnt'}]}]}]}.
{function,
 {827,1},
 patch_is,5,
 [{clause,
   {827,1},
   [{var,{827,1},'_'},
    {var,{827,1},'_'},
    {var,{827,1},'_'},
    {var,{827,1},'_'},
    {var,{827,1},'_'}],
   [[{call,
      {827,1},
      {remote,{827,1},{atom,{827,1},fake},{atom,{827,1},is_beam_bif_info}},
      []}]],
   [{debug_line,827,316},{atom,{827,1},ignore}]},
  {clause,
   {827,1},
   [{cons,
     {827,10},
     {match,
      {827,11},
      {var,{827,11},'I0'},
      {tuple,
       {827,14},
       [{atom,{827,14},b_set},
        {var,{827,14},'_'},
        {var,{827,25},'Dst'},
        {var,{827,14},'_'},
        {var,{827,14},'_'}]}},
     {var,{827,30},'Rest'}},
    {var,{827,37},'PD0'},
    {var,{827,42},'Cnt0'},
    {var,{827,48},'Acc'},
    {var,{827,53},'BlockAdditions0'}],
   [[{call,
      {828,8},
      {remote,{828,8},{atom,{828,8},erlang},{atom,{828,8},is_map_key}},
      [{var,{828,19},'Dst'},{var,{828,24},'PD0'}]}]],
   [{debug_line,829,317},
    {match,
     {829,5},
     {map,
      {829,5},
      [{map_field_exact,
        {829,12},
        {var,{829,8},'Dst'},
        {var,{829,15},'Patches'}}]},
     {var,{829,27},'PD0'}},
    {debug_line,830,318},
    {match,
     {830,5},
     {var,{830,5},'PD'},
     {call,
      {830,10},
      {remote,{830,14},{atom,{830,10},maps},{atom,{830,15},remove}},
      [{var,{830,22},'Dst'},{var,{830,27},'PD0'}]}},
    {debug_line,831,319},
    {'case',
     {831,5},
     {var,{831,10},'Patches'},
     [{clause,
       {832,9},
       [{cons,
         {832,9},
         {tuple,
          {832,10},
          [{atom,{832,11},opargs},
           {var,{832,18},'Dst'},
           {var,{832,22},'_'},
           {var,{832,24},'_'},
           {var,{832,26},'_'}]},
         {var,{832,29},'_'}}],
       [],
       [{debug_line,833,320},
        {match,
         {833,13},
         {var,{833,13},'Splitter'},
         {'fun',
          {833,24},
          {clauses,
           [{clause,
             {833,27},
             [{tuple,
               {833,28},
               [{atom,{833,29},opargs},
                {var,{833,36},'D'},
                {var,{833,38},'_Idx'},
                {var,{833,43},'_Lit'},
                {var,{833,48},'_Element'}]}],
             [],
             [{debug_line,834,321},
              {op,{834,36},'=:=',{var,{834,32},'Dst'},{var,{834,40},'D'}}]},
            {clause,
             {835,27},
             [{var,{835,28},'_'}],
             [],
             [{debug_line,836,322},{atom,{836,32},false}]}]}}},
        {debug_line,838,323},
        {match,
         {838,13},
         {tuple,{838,13},[{var,{838,14},'OpArgs0'},{var,{838,23},'Other'}]},
         {call,
          {838,32},
          {remote,{838,32},{atom,{838,32},lists},{atom,{838,32},splitwith}},
          [{var,{838,42},'Splitter'},{var,{838,52},'Patches'}]}},
        {debug_line,839,324},
        {match,
         {839,13},
         {var,{839,13},'OpArgs'},
         {lc,
          {839,22},
          {block,0,
           [{tuple,
             {839,23},
             [{var,{839,24},'Idx'},
              {var,{839,28},'Lit'},
              {var,{839,32},'Element'}]}]},
          [{block,0,[{debug_line,840,325},{atom,{840,58},true}]},
           {generate_strict,
            {840,54},
            {tuple,
             {840,26},
             [{atom,{840,27},opargs},
              {var,{840,34},'_D'},
              {var,{840,37},'Idx'},
              {var,{840,41},'Lit'},
              {var,{840,45},'Element'}]},
            {var,{840,58},'OpArgs0'}}]}},
        {debug_line,841,326},
        {match,
         {841,13},
         {tuple,{841,13},[{var,{841,14},'Is'},{var,{841,17},'Cnt'}]},
         {call,
          {841,24},
          {atom,{841,24},patch_opargs},
          [{var,{841,37},'I0'},
           {var,{841,41},'OpArgs'},
           {var,{841,49},'Cnt0'}]}},
        {debug_line,842,327},
        {call,
         {842,13},
         {atom,{842,13},patch_is},
         [{block,0,
           [{cons,
             {842,22},
             {call,
              {842,23},
              {remote,{842,23},{atom,{842,23},erlang},{atom,{842,23},hd}},
              [{var,{842,26},'Is'}]},
             {var,{842,30},'Rest'}}]},
          {block,0,
           [{map,
             {842,39},
             {var,{842,37},'PD'},
             [{map_field_assoc,
               {842,44},
               {var,{842,41},'Dst'},
               {var,{842,46},'Other'}}]}]},
          {var,{842,54},'Cnt'},
          {block,0,
           [{debug_line,843,328},
            {op,
             {843,28},
             '++',
             {call,
              {843,22},
              {remote,{843,22},{atom,{843,22},erlang},{atom,{843,22},tl}},
              [{var,{843,25},'Is'}]},
             {var,{843,30},'Acc'}}]},
          {var,{843,35},'BlockAdditions0'}]}]},
      {clause,
       {844,9},
       [{cons,
         {844,9},
         {tuple,
          {844,10},
          [{atom,{844,11},appendable_binary},
           {var,{844,29},'Dst'},
           {match,
            {844,33},
            {tuple,{844,33},[{atom,{844,33},b_literal},{bin,{844,49},[]}]},
            {var,{844,55},'Lit'}}]},
         {nil,{844,59}}}],
       [],
       [{debug_line,847,329},
        {match,
         {847,13},
         {tuple,
          {847,13},
          [{atom,{847,13},b_set},
           {var,{847,13},'_'},
           {var,{847,41},'Dst'},
           {atom,{847,23},bs_create_bin},
           {var,{847,50},'Args0'}]},
         {var,{847,57},'I0'}},
        {debug_line,848,330},
        {match,
         {848,13},
         {cons,
          {848,13},
          {tuple,{848,14},[{atom,{848,14},b_literal},{atom,{848,29},append}]},
          {cons,
           {848,37},
           {var,{848,37},'SegInfo'},
           {cons,{848,45},{var,{848,45},'Lit'},{var,{848,49},'OtherArgs'}}}},
         {var,{848,62},'Args0'}},
        {debug_line,849,331},
        {match,
         {849,13},
         {tuple,{849,13},[{var,{849,14},'V'},{var,{849,16},'Cnt'}]},
         {call,{849,23},{atom,{849,23},new_var},[{var,{849,31},'Cnt0'}]}},
        {debug_line,850,332},
        {match,
         {850,13},
         {var,{850,13},'Init'},
         {tuple,
          {850,20},
          [{atom,{850,20},b_set},
           {map,{850,20},[]},
           {var,{850,51},'V'},
           {atom,{850,30},bs_init_writable},
           {cons,
            {850,58},
            {tuple,
             {850,59},
             [{atom,{850,59},b_literal},{integer,{850,74},256}]},
            {nil,{850,78}}}]}},
        {debug_line,851,333},
        {match,
         {851,13},
         {var,{851,13},'I'},
         {block,
          {851,17},
          [{match,
            {851,26},
            {var,{851,26},rec12},
            {cons,
             {851,31},
             {tuple,
              {851,32},
              [{atom,{851,32},b_literal},{atom,{851,47},private_append}]},
             {cons,
              {852,32},
              {var,{852,32},'SegInfo'},
              {cons,{852,40},{var,{852,40},'V'},{var,{852,42},'OtherArgs'}}}}},
           {match,{851,17},{var,{851,17},rec13},{var,{851,17},'I0'}},
           {'case',
            {851,26},
            {var,{851,17},rec13},
            [{clause,
              {851,26},
              [{tuple,
                {851,26},
                [{atom,{851,26},b_set},
                 {var,{851,26},'_'},
                 {var,{851,26},'_'},
                 {var,{851,26},'_'},
                 {var,{851,26},'_'}]}],
              [],
              [{call,
                {851,26},
                {remote,
                 {851,26},
                 {atom,{851,26},erlang},
                 {atom,{851,26},setelement}},
                [{integer,{851,26},5},
                 {var,{851,17},rec13},
                 {var,{851,26},rec12}]}]},
             {clause,
              [{generated,true},{location,{851,26}}],
              [{var,[{generated,true},{location,{851,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{851,26}}],
                {remote,
                 [{generated,true},{location,{851,26}}],
                 {atom,[{generated,true},{location,{851,26}}],erlang},
                 {atom,[{generated,true},{location,{851,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{851,26}}],
                  [{atom,[{generated,true},{location,{851,26}}],badrecord},
                   {var,{851,17},rec13}]}]}]}]}]}},
        {debug_line,853,334},
        {call,
         {853,13},
         {atom,{853,13},patch_is},
         [{var,{853,22},'Rest'},
          {var,{853,28},'PD'},
          {var,{853,32},'Cnt'},
          {block,0,
           [{cons,
             {853,37},
             {var,{853,38},'I'},
             {cons,{853,40},{var,{853,40},'Init'},{var,{853,45},'Acc'}}}]},
          {var,{853,51},'BlockAdditions0'}]}]},
      {clause,
       {854,9},
       [{cons,
         {854,9},
         {tuple,
          {854,10},
          [{atom,{854,11},appendable_binary},
           {var,{854,29},'Dst'},
           {var,{854,33},'_'}]},
         {nil,{854,35}}}],
       [],
       [{debug_line,855,335},
        {match,
         {855,13},
         {tuple,
          {855,13},
          [{atom,{855,13},b_set},
           {var,{855,13},'_'},
           {var,{855,41},'Dst'},
           {atom,{855,23},bs_create_bin},
           {var,{855,50},'Args0'}]},
         {var,{855,57},'I0'}},
        {debug_line,856,336},
        {match,
         {856,13},
         {cons,
          {856,13},
          {tuple,{856,14},[{atom,{856,14},b_literal},{atom,{856,29},append}]},
          {var,{856,37},'OtherArgs'}},
         {var,{856,50},'Args0'}},
        {debug_line,857,337},
        {match,
         {857,13},
         {var,{857,13},'I'},
         {block,
          {857,17},
          [{match,
            {857,26},
            {var,{857,26},rec14},
            {cons,
             {857,31},
             {tuple,
              {857,32},
              [{atom,{857,32},b_literal},{atom,{857,47},private_append}]},
             {var,{857,63},'OtherArgs'}}},
           {match,{857,17},{var,{857,17},rec15},{var,{857,17},'I0'}},
           {'case',
            {857,26},
            {var,{857,17},rec15},
            [{clause,
              {857,26},
              [{tuple,
                {857,26},
                [{atom,{857,26},b_set},
                 {var,{857,26},'_'},
                 {var,{857,26},'_'},
                 {var,{857,26},'_'},
                 {var,{857,26},'_'}]}],
              [],
              [{call,
                {857,26},
                {remote,
                 {857,26},
                 {atom,{857,26},erlang},
                 {atom,{857,26},setelement}},
                [{integer,{857,26},5},
                 {var,{857,17},rec15},
                 {var,{857,26},rec14}]}]},
             {clause,
              [{generated,true},{location,{857,26}}],
              [{var,[{generated,true},{location,{857,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{857,26}}],
                {remote,
                 [{generated,true},{location,{857,26}}],
                 {atom,[{generated,true},{location,{857,26}}],erlang},
                 {atom,[{generated,true},{location,{857,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{857,26}}],
                  [{atom,[{generated,true},{location,{857,26}}],badrecord},
                   {var,{857,17},rec15}]}]}]}]}]}},
        {debug_line,858,338},
        {call,
         {858,13},
         {atom,{858,13},patch_is},
         [{var,{858,22},'Rest'},
          {var,{858,28},'PD'},
          {var,{858,32},'Cnt0'},
          {block,0,[{cons,{858,38},{var,{858,39},'I'},{var,{858,41},'Acc'}}]},
          {var,{858,47},'BlockAdditions0'}]}]},
      {clause,
       {859,9},
       [{cons,
         {859,9},
         {tuple,
          {859,10},
          [{atom,{859,11},phi},
           {var,{859,15},'Dst'},
           {var,{859,19},'_'},
           {var,{859,21},'_'},
           {var,{859,23},'_'}]},
         {var,{859,26},'_'}}],
       [],
       [{debug_line,860,339},
        {match,
         {860,13},
         {tuple,
          {860,13},
          [{var,{860,14},'I'},{var,{860,17},'Extra'},{var,{860,24},'Cnt'}]},
         {call,
          {860,31},
          {atom,{860,31},patch_phi},
          [{var,{860,41},'I0'},
           {var,{860,45},'Patches'},
           {var,{860,54},'Cnt0'}]}},
        {debug_line,861,340},
        {call,
         {861,13},
         {atom,{861,13},patch_is},
         [{var,{861,22},'Rest'},
          {var,{861,28},'PD'},
          {var,{861,32},'Cnt'},
          {block,0,[{cons,{861,37},{var,{861,38},'I'},{var,{861,40},'Acc'}}]},
          {block,0,
           [{op,
             {861,51},
             '++',
             {var,{861,46},'Extra'},
             {var,{861,53},'BlockAdditions0'}}]}]}]},
      {clause,
       {862,9},
       [{cons,
         {862,9},
         {tuple,
          {862,10},
          [{atom,{862,11},tuple_update},
           {var,{862,24},'Dst'},
           {var,{862,28},'_Src'}]},
         {var,{862,34},'Other'}}],
       [],
       [{debug_line,863,341},
        {match,
         {863,13},
         {var,{863,13},'I'},
         {call,{863,17},{atom,{863,17},set_inplace},[{var,{863,29},'I0'}]}},
        {debug_line,864,342},
        {call,
         {864,13},
         {atom,{864,13},patch_is},
         [{block,0,[{cons,{864,22},{var,{864,23},'I'},{var,{864,25},'Rest'}}]},
          {block,0,
           [{map,
             {864,34},
             {var,{864,32},'PD'},
             [{map_field_assoc,
               {864,39},
               {var,{864,36},'Dst'},
               {var,{864,41},'Other'}}]}]},
          {var,{864,49},'Cnt0'},
          {var,{864,55},'Acc'},
          {var,{864,60},'BlockAdditions0'}]}]},
      {clause,
       {865,9},
       [{cons,
         {865,9},
         {tuple,{865,10},[{atom,{865,11},force_copy},{var,{865,22},'Dst'}]},
         {var,{865,27},'Other'}}],
       [],
       [{debug_line,866,343},
        {call,
         {866,13},
         {atom,{866,13},patch_is},
         [{block,0,
           [{cons,
             {866,22},
             {call,{866,23},{atom,{866,23},no_reuse},[{var,{866,32},'I0'}]},
             {var,{866,36},'Rest'}}]},
          {block,0,
           [{map,
             {866,45},
             {var,{866,43},'PD'},
             [{map_field_assoc,
               {866,50},
               {var,{866,47},'Dst'},
               {var,{866,52},'Other'}}]}]},
          {var,{867,22},'Cnt0'},
          {var,{867,28},'Acc'},
          {var,{867,33},'BlockAdditions0'}]}]},
      {clause,
       {868,9},
       [{nil,{868,9}}],
       [],
       [{debug_line,869,344},
        {call,
         {869,13},
         {atom,{869,13},patch_is},
         [{var,{869,22},'Rest'},
          {var,{869,28},'PD'},
          {var,{869,32},'Cnt0'},
          {block,0,[{cons,{869,38},{var,{869,39},'I0'},{var,{869,42},'Acc'}}]},
          {var,{869,48},'BlockAdditions0'}]}]}]}]},
  {clause,
   {871,1},
   [{cons,{871,10},{var,{871,11},'I'},{var,{871,13},'Rest'}},
    {var,{871,20},'PD'},
    {var,{871,24},'Cnt'},
    {var,{871,29},'Acc'},
    {var,{871,34},'BlockAdditions'}],
   [],
   [{debug_line,872,345},
    {call,
     {872,5},
     {atom,{872,5},patch_is},
     [{var,{872,14},'Rest'},
      {var,{872,20},'PD'},
      {var,{872,24},'Cnt'},
      {block,0,[{cons,{872,29},{var,{872,30},'I'},{var,{872,32},'Acc'}}]},
      {var,{872,38},'BlockAdditions'}]}]},
  {clause,
   {873,1},
   [{nil,{873,10}},
    {var,{873,14},'_'},
    {var,{873,17},'Cnt'},
    {var,{873,22},'Acc'},
    {var,{873,27},'BlockAdditions'}],
   [],
   [{debug_line,874,346},
    {tuple,
     {874,5},
     [{call,
       {874,6},
       {remote,{874,6},{atom,{874,6},lists},{atom,{874,6},reverse}},
       [{var,{874,14},'Acc'}]},
      {var,{874,20},'Cnt'},
      {var,{874,25},'BlockAdditions'}]}]}]}.
{function,
    {876,1},
    set_inplace,1,
    [{clause,
         {876,1},
         [{var,{876,1},'_'}],
         [[{call,
               {876,1},
               {remote,
                   {876,1},
                   {atom,{876,1},fake},
                   {atom,{876,1},is_beam_bif_info}},
               []}]],
         [{debug_line,876,347},{atom,{876,1},ignore}]},
     {clause,
         {876,1},
         [{match,
              {876,13},
              {tuple,
                  {876,13},
                  [{atom,{876,13},b_set},
                   {var,{876,13},'_'},
                   {var,{876,24},'_Dst'},
                   {var,{876,13},'_'},
                   {cons,
                       {876,34},
                       {var,{876,35},'_Hint'},
                       {cons,
                           {876,41},
                           {var,{876,41},'Size'},
                           {cons,
                               {876,46},
                               {var,{876,46},'Src'},
                               {var,{876,50},'Updates'}}}}]},
              {var,{876,60},'I0'}}],
         [],
         [{debug_line,877,348},
          {atom,{877,6},skip},
          {debug_line,878,349},
          {block,
              {878,5},
              [{match,
                   {878,14},
                   {var,{878,14},rec16},
                   {cons,
                       {878,19},
                       {tuple,
                           {878,20},
                           [{atom,{878,20},b_literal},
                            {atom,{878,35},inplace}]},
                       {cons,
                           {878,44},
                           {var,{878,44},'Size'},
                           {cons,
                               {878,49},
                               {var,{878,49},'Src'},
                               {var,{878,53},'Updates'}}}}},
               {match,{878,5},{var,{878,5},rec17},{var,{878,5},'I0'}},
               {'case',
                   {878,14},
                   {var,{878,5},rec17},
                   [{clause,
                        {878,14},
                        [{tuple,
                             {878,14},
                             [{atom,{878,14},b_set},
                              {var,{878,14},'_'},
                              {var,{878,14},'_'},
                              {var,{878,14},'_'},
                              {var,{878,14},'_'}]}],
                        [],
                        [{call,
                             {878,14},
                             {remote,
                                 {878,14},
                                 {atom,{878,14},erlang},
                                 {atom,{878,14},setelement}},
                             [{integer,{878,14},5},
                              {var,{878,5},rec17},
                              {var,{878,14},rec16}]}]},
                    {clause,
                        [{generated,true},{location,{878,14}}],
                        [{var,[{generated,true},{location,{878,14}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{878,14}}],
                             {remote,
                                 [{generated,true},{location,{878,14}}],
                                 {atom,
                                     [{generated,true},{location,{878,14}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{878,14}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{878,14}}],
                                  [{atom,
                                       [{generated,true},{location,{878,14}}],
                                       badrecord},
                                   {var,{878,5},rec17}]}]}]}]}]}]}]}.
{function,
    {880,1},
    no_reuse,1,
    [{clause,
         {880,1},
         [{var,{880,1},'_'}],
         [[{call,
               {880,1},
               {remote,
                   {880,1},
                   {atom,{880,1},fake},
                   {atom,{880,1},is_beam_bif_info}},
               []}]],
         [{debug_line,880,350},{atom,{880,1},ignore}]},
     {clause,
         {880,1},
         [{match,
              {880,10},
              {tuple,
                  {880,10},
                  [{atom,{880,10},b_set},
                   {var,{880,10},'_'},
                   {var,{880,21},'_Dst'},
                   {var,{880,10},'_'},
                   {cons,
                       {880,31},
                       {tuple,
                           {880,32},
                           [{atom,{880,32},b_literal},{atom,{880,47},reuse}]},
                       {cons,
                           {880,54},
                           {var,{880,54},'Size'},
                           {cons,
                               {880,59},
                               {var,{880,59},'Src'},
                               {var,{880,63},'Updates'}}}}]},
              {var,{880,75},'I0'}}],
         [],
         [{debug_line,881,351},
          {atom,{881,6},skip},
          {debug_line,882,352},
          {block,
              {882,5},
              [{match,
                   {882,14},
                   {var,{882,14},rec18},
                   {cons,
                       {882,19},
                       {tuple,
                           {882,20},
                           [{atom,{882,20},b_literal},{atom,{882,35},copy}]},
                       {cons,
                           {882,41},
                           {var,{882,41},'Size'},
                           {cons,
                               {882,46},
                               {var,{882,46},'Src'},
                               {var,{882,50},'Updates'}}}}},
               {match,{882,5},{var,{882,5},rec19},{var,{882,5},'I0'}},
               {'case',
                   {882,14},
                   {var,{882,5},rec19},
                   [{clause,
                        {882,14},
                        [{tuple,
                             {882,14},
                             [{atom,{882,14},b_set},
                              {var,{882,14},'_'},
                              {var,{882,14},'_'},
                              {var,{882,14},'_'},
                              {var,{882,14},'_'}]}],
                        [],
                        [{call,
                             {882,14},
                             {remote,
                                 {882,14},
                                 {atom,{882,14},erlang},
                                 {atom,{882,14},setelement}},
                             [{integer,{882,14},5},
                              {var,{882,5},rec19},
                              {var,{882,14},rec18}]}]},
                    {clause,
                        [{generated,true},{location,{882,14}}],
                        [{var,[{generated,true},{location,{882,14}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{882,14}}],
                             {remote,
                                 [{generated,true},{location,{882,14}}],
                                 {atom,
                                     [{generated,true},{location,{882,14}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{882,14}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{882,14}}],
                                  [{atom,
                                       [{generated,true},{location,{882,14}}],
                                       badrecord},
                                   {var,{882,5},rec19}]}]}]}]}]}]},
     {clause,
         {883,1},
         [{var,{883,10},'I'}],
         [],
         [{debug_line,884,353},{var,{884,5},'I'}]}]}.
{function,
 {888,1},
 patch_ret,3,
 [{clause,
   {888,1},
   [{var,{888,1},'_'},{var,{888,1},'_'},{var,{888,1},'_'}],
   [[{call,
      {888,1},
      {remote,{888,1},{atom,{888,1},fake},{atom,{888,1},is_beam_bif_info}},
      []}]],
   [{debug_line,888,354},{atom,{888,1},ignore}]},
  {clause,
   {888,1},
   [{match,
     {888,11},
     {var,{888,11},'Last'},
     {tuple,
      {888,16},
      [{atom,{888,16},b_ret},
       {var,{888,16},'_'},
       {tuple,{888,27},[{atom,{888,27},b_literal},{var,{888,42},'Lit'}]}]}},
    {var,{888,49},'Patches'},
    {var,{888,58},'Cnt0'}],
   [],
   [{debug_line,889,355},
    {atom,{889,6},skip},
    {debug_line,890,356},
    {match,
     {890,5},
     {var,{890,5},'Element'},
     {call,
      {890,15},
      {atom,{890,15},aggregate_ret_patches},
      [{block,0,
        [{call,
          {890,37},
          {remote,{890,37},{atom,{890,37},lists},{atom,{890,37},keysort}},
          [{integer,{890,45},1},
           {block,0,
            [{lc,
              {890,48},
              {block,0,[{var,{890,49},'E'}]},
              [{block,0,[{atom,{890,68},true}]},
               {generate_strict,
                {890,64},
                {tuple,
                 {890,54},
                 [{atom,{890,55},ret},{var,{890,59},'_'},{var,{890,61},'E'}]},
                {var,{890,68},'Patches'}}]}]}]}]}]}},
    {debug_line,891,357},
    {atom,{891,6},skip},
    {debug_line,892,358},
    {match,
     {892,5},
     {tuple,
      {892,5},
      [{var,{892,6},'V'},{var,{892,8},'Extra'},{var,{892,14},'Cnt'}]},
     {call,
      {892,21},
      {atom,{892,21},patch_literal_term},
      [{var,{892,40},'Lit'},{var,{892,45},'Element'},{var,{892,54},'Cnt0'}]}},
    {debug_line,893,359},
    {tuple,
     {893,5},
     [{block,
       {893,6},
       [{match,{893,6},{var,{893,6},rec20},{var,{893,6},'Last'}},
        {'case',
         {893,17},
         {var,{893,6},rec20},
         [{clause,
           {893,17},
           [{tuple,
             {893,17},
             [{atom,{893,17},b_ret},{var,{893,17},'_'},{var,{893,17},'_'}]}],
           [],
           [{call,
             {893,17},
             {remote,
              {893,17},
              {atom,{893,17},erlang},
              {atom,{893,17},setelement}},
             [{integer,{893,17},3},{var,{893,6},rec20},{var,{893,21},'V'}]}]},
          {clause,
           [{generated,true},{location,{893,17}}],
           [{var,[{generated,true},{location,{893,17}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{893,17}}],
             {remote,
              [{generated,true},{location,{893,17}}],
              {atom,[{generated,true},{location,{893,17}}],erlang},
              {atom,[{generated,true},{location,{893,17}}],error}},
             [{tuple,
               [{generated,true},{location,{893,17}}],
               [{atom,[{generated,true},{location,{893,17}}],badrecord},
                {var,{893,6},rec20}]}]}]}]}]},
      {var,{893,25},'Extra'},
      {var,{893,32},'Cnt'}]}]}]}.
{function,
    {896,1},
    aggregate_ret_patches,1,
    [{clause,
         {896,1},
         [{var,{896,1},'_'}],
         [[{call,
               {896,1},
               {remote,
                   {896,1},
                   {atom,{896,1},fake},
                   {atom,{896,1},is_beam_bif_info}},
               []}]],
         [{debug_line,896,360},{atom,{896,1},ignore}]},
     {clause,
         {896,1},
         [{cons,
              {896,23},
              {match,
                  {896,24},
                  {var,{896,24},'R'},
                  {tuple,
                      {896,26},
                      [{atom,{896,27},self},{atom,{896,32},heap_tuple}]}},
              {nil,{896,43}}}],
         [],
         [{debug_line,897,361},{var,{897,5},'R'}]},
     {clause,
         {898,1},
         [{cons,
              {898,23},
              {match,
                  {898,24},
                  {var,{898,24},'R'},
                  {tuple,
                      {898,26},
                      [{atom,{898,27},self},{atom,{898,32},init_writable}]}},
              {nil,{898,46}}}],
         [],
         [{debug_line,899,362},{var,{899,5},'R'}]},
     {clause,
         {900,1},
         [{cons,
              {900,23},
              {tuple,
                  {900,24},
                  [{atom,{900,25},tuple_element},
                   {var,{900,39},'I'},
                   {var,{900,41},'E'},
                   {var,{900,43},'_'}]},
              {var,{900,46},'Rest'}}],
         [],
         [{debug_line,901,363},
          {match,
              {901,5},
              {var,{901,5},'Elements'},
              {cons,
                  {901,16},
                  {tuple,{901,17},[{var,{901,18},'I'},{var,{901,20},'E'}]},
                  {call,
                      {901,23},
                      {atom,{901,23},aggregate_ret_patches_tuple},
                      [{var,{901,51},'Rest'}]}}},
          {debug_line,902,364},
          {tuple,
              {902,5},
              [{atom,{902,6},tuple_elements},{var,{902,21},'Elements'}]}]},
     {clause,
         {903,1},
         [{cons,
              {903,23},
              {tuple,
                  {903,24},
                  [{atom,{903,25},self},{atom,{903,30},heap_tuple}]},
              {cons,
                  {903,42},
                  {match,
                      {903,42},
                      {var,{903,42},'TE'},
                      {tuple,
                          {903,45},
                          [{atom,{903,46},tuple_element},
                           {var,{903,60},'_'},
                           {var,{903,62},'_'},
                           {var,{903,64},'_'}]}},
                  {var,{903,67},'Rest'}}}],
         [],
         [{debug_line,907,365},
          {call,
              {907,5},
              {atom,{907,5},aggregate_ret_patches},
              [{block,0,
                   [{cons,
                        {907,27},
                        {var,{907,28},'TE'},
                        {var,{907,31},'Rest'}}]}]}]},
     {clause,
         {908,1},
         [{cons,
              {908,23},
              {match,
                  {908,24},
                  {var,{908,24},'R'},
                  {tuple,
                      {908,26},
                      [{atom,{908,27},hd},
                       {var,{908,30},'_'},
                       {var,{908,32},'_'}]}},
              {nil,{908,34}}}],
         [],
         [{debug_line,909,366},{var,{909,5},'R'}]}]}.
{function,{911,1},
          aggregate_ret_patches_tuple,1,
          [{clause,{911,1},
                   [{var,{911,1},'_'}],
                   [[{call,{911,1},
                           {remote,{911,1},
                                   {atom,{911,1},fake},
                                   {atom,{911,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,911,367},{atom,{911,1},ignore}]},
           {clause,{911,1},
                   [{cons,{911,29},
                          {tuple,{911,30},
                                 [{atom,{911,31},tuple_element},
                                  {var,{911,45},'I'},
                                  {var,{911,47},'E'},
                                  {var,{911,49},'_'}]},
                          {var,{911,52},'Rest'}}],
                   [],
                   [{debug_line,912,368},
                    {cons,{912,5},
                          {tuple,{912,6},
                                 [{var,{912,7},'I'},{var,{912,9},'E'}]},
                          {call,{912,12},
                                {atom,{912,12},aggregate_ret_patches_tuple},
                                [{var,{912,40},'Rest'}]}}]},
           {clause,{913,1},
                   [{nil,{913,29}}],
                   [],
                   [{debug_line,914,369},{nil,{914,5}}]}]}.
{function,
 {917,1},
 patch_opargs,3,
 [{clause,
   {917,1},
   [{var,{917,1},'_'},{var,{917,1},'_'},{var,{917,1},'_'}],
   [[{call,
      {917,1},
      {remote,{917,1},{atom,{917,1},fake},{atom,{917,1},is_beam_bif_info}},
      []}]],
   [{debug_line,917,370},{atom,{917,1},ignore}]},
  {clause,
   {917,1},
   [{match,
     {917,14},
     {var,{917,14},'I0'},
     {tuple,
      {917,17},
      [{atom,{917,17},b_set},
       {var,{917,17},'_'},
       {var,{917,17},'_'},
       {var,{917,17},'_'},
       {var,{917,29},'Args'}]}},
    {var,{917,36},'OpArgs'},
    {var,{917,44},'Cnt0'}],
   [],
   [{debug_line,918,371},
    {atom,{918,6},skip},
    {debug_line,920,372},
    {match,
     {920,5},
     {var,{920,5},'Patches'},
     {call,
      {920,15},
      {atom,{920,15},merge_arg_patches},
      [{block,0,
        [{call,
          {920,33},
          {remote,{920,33},{atom,{920,33},lists},{atom,{920,33},keysort}},
          [{integer,{920,41},1},{var,{920,44},'OpArgs'}]}]},
       {block,0,[{map,{920,53},[]}]}]}},
    {debug_line,921,373},
    {atom,{921,6},skip},
    {debug_line,922,374},
    {match,
     {922,5},
     {tuple,
      {922,5},
      [{var,{922,6},'PatchedArgs'},{var,{922,18},'Is'},{var,{922,21},'Cnt'}]},
     {call,
      {922,28},
      {atom,{922,28},patch_opargs},
      [{var,{922,41},'Args'},
       {var,{922,47},'Patches'},
       {integer,{922,56},0},
       {nil,{922,59}},
       {nil,{922,63}},
       {var,{922,67},'Cnt0'}]}},
    {debug_line,923,375},
    {tuple,
     {923,5},
     [{cons,
       {923,6},
       {block,
        {923,7},
        [{match,
          {923,16},
          {var,{923,16},rec21},
          {call,
           {923,21},
           {remote,{923,21},{atom,{923,21},lists},{atom,{923,21},reverse}},
           [{var,{923,29},'PatchedArgs'}]}},
         {match,{923,7},{var,{923,7},rec22},{var,{923,7},'I0'}},
         {'case',
          {923,16},
          {var,{923,7},rec22},
          [{clause,
            {923,16},
            [{tuple,
              {923,16},
              [{atom,{923,16},b_set},
               {var,{923,16},'_'},
               {var,{923,16},'_'},
               {var,{923,16},'_'},
               {var,{923,16},'_'}]}],
            [],
            [{call,
              {923,16},
              {remote,
               {923,16},
               {atom,{923,16},erlang},
               {atom,{923,16},setelement}},
              [{integer,{923,16},5},
               {var,{923,7},rec22},
               {var,{923,16},rec21}]}]},
           {clause,
            [{generated,true},{location,{923,16}}],
            [{var,[{generated,true},{location,{923,16}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{923,16}}],
              {remote,
               [{generated,true},{location,{923,16}}],
               {atom,[{generated,true},{location,{923,16}}],erlang},
               {atom,[{generated,true},{location,{923,16}}],error}},
              [{tuple,
                [{generated,true},{location,{923,16}}],
                [{atom,[{generated,true},{location,{923,16}}],badrecord},
                 {var,{923,7},rec22}]}]}]}]}]},
       {var,{923,43},'Is'}},
      {var,{923,48},'Cnt'}]}]}]}.
{function,
    {925,1},
    patch_opargs,6,
    [{clause,
         {925,1},
         [{var,{925,1},'_'},
          {var,{925,1},'_'},
          {var,{925,1},'_'},
          {var,{925,1},'_'},
          {var,{925,1},'_'},
          {var,{925,1},'_'}],
         [[{call,
               {925,1},
               {remote,
                   {925,1},
                   {atom,{925,1},fake},
                   {atom,{925,1},is_beam_bif_info}},
               []}]],
         [{debug_line,925,376},{atom,{925,1},ignore}]},
     {clause,
         {925,1},
         [{cons,
              {925,14},
              {tuple,
                  {925,15},
                  [{atom,{925,15},b_literal},{var,{925,30},'Lit'}]},
              {var,{925,35},'Args'}},
          {var,{925,42},'Patches'},
          {var,{926,14},'Idx'},
          {var,{926,19},'PatchedArgs'},
          {var,{926,32},'Is'},
          {var,{926,36},'Cnt0'}],
         [[{call,
               {926,47},
               {remote,
                   {926,47},
                   {atom,{926,47},erlang},
                   {atom,{926,47},is_map_key}},
               [{var,{926,58},'Idx'},{var,{926,63},'Patches'}]}]],
         [{debug_line,927,377},
          {match,
              {927,5},
              {map,
                  {927,5},
                  [{map_field_exact,
                       {927,10},
                       {var,{927,7},'Idx'},
                       {var,{927,12},'Element'}}]},
              {var,{927,23},'Patches'}},
          {debug_line,928,378},
          {atom,{928,6},skip},
          {debug_line,929,379},
          {match,
              {929,5},
              {tuple,
                  {929,5},
                  [{var,{929,6},'Arg'},
                   {var,{929,10},'Extra'},
                   {var,{929,16},'Cnt'}]},
              {call,
                  {929,23},
                  {atom,{929,23},patch_literal_term},
                  [{var,{929,42},'Lit'},
                   {var,{929,47},'Element'},
                   {var,{929,56},'Cnt0'}]}},
          {debug_line,930,380},
          {call,
              {930,5},
              {atom,{930,5},patch_opargs},
              [{var,{930,18},'Args'},
               {var,{930,24},'Patches'},
               {block,0,
                   [{op,{930,37},
                        '+',
                        {var,{930,33},'Idx'},
                        {integer,{930,39},1}}]},
               {block,0,
                   [{cons,
                        {930,42},
                        {var,{930,43},'Arg'},
                        {var,{930,47},'PatchedArgs'}}]},
               {block,0,
                   [{op,{930,66},
                        '++',
                        {var,{930,61},'Extra'},
                        {var,{930,68},'Is'}}]},
               {var,{930,72},'Cnt'}]}]},
     {clause,
         {931,1},
         [{cons,{931,14},{var,{931,15},'Arg'},{var,{931,19},'Args'}},
          {var,{931,26},'Patches'},
          {var,{931,35},'Idx'},
          {var,{931,40},'PatchedArgs'},
          {var,{931,53},'Is'},
          {var,{931,57},'Cnt'}],
         [],
         [{debug_line,932,381},
          {atom,{932,6},skip},
          {debug_line,933,382},
          {call,
              {933,5},
              {atom,{933,5},patch_opargs},
              [{var,{933,18},'Args'},
               {var,{933,24},'Patches'},
               {block,0,
                   [{op,{933,37},
                        '+',
                        {var,{933,33},'Idx'},
                        {integer,{933,39},1}}]},
               {block,0,
                   [{cons,
                        {933,42},
                        {var,{933,43},'Arg'},
                        {var,{933,47},'PatchedArgs'}}]},
               {var,{933,61},'Is'},
               {var,{933,65},'Cnt'}]}]},
     {clause,
         {934,1},
         [{nil,{934,14}},
          {var,{934,18},'_'},
          {var,{934,21},'_'},
          {var,{934,24},'PatchedArgs'},
          {var,{934,37},'Is'},
          {var,{934,41},'Cnt'}],
         [],
         [{debug_line,935,383},
          {tuple,
              {935,5},
              [{var,{935,6},'PatchedArgs'},
               {var,{935,19},'Is'},
               {var,{935,23},'Cnt'}]}]}]}.
{function,
 {940,1},
 merge_arg_patches,2,
 [{clause,
   {940,1},
   [{var,{940,1},'_'},{var,{940,1},'_'}],
   [[{call,
      {940,1},
      {remote,{940,1},{atom,{940,1},fake},{atom,{940,1},is_beam_bif_info}},
      []}]],
   [{debug_line,940,384},{atom,{940,1},ignore}]},
  {clause,
   {940,1},
   [{cons,
     {940,19},
     {tuple,
      {940,20},
      [{var,{940,21},'Idx'},{var,{940,25},'_Lit'},{var,{940,30},'E1'}]},
     {var,{940,34},'Patches'}},
    {var,{940,44},'Acc'}],
   [],
   [{debug_line,941,385},
    {'case',
     {941,5},
     {var,{941,10},'Acc'},
     [{clause,
       {942,9},
       [{map,
         {942,9},
         [{map_field_exact,
           {942,14},
           {var,{942,11},'Idx'},
           {var,{942,16},'E0'}}]}],
       [],
       [{debug_line,943,386},
        {call,
         {943,13},
         {atom,{943,13},merge_arg_patches},
         [{var,{943,31},'Patches'},
          {block,0,
           [{map,
             {943,43},
             {var,{943,40},'Acc'},
             [{map_field_assoc,
               {943,48},
               {var,{943,45},'Idx'},
               {call,
                {943,50},
                {atom,{943,50},merge_patches},
                [{var,{943,64},'E0'},{var,{943,68},'E1'}]}}]}]}]}]},
      {clause,
       {944,9},
       [{map,{944,9},[]}],
       [],
       [{debug_line,945,387},
        {call,
         {945,13},
         {atom,{945,13},merge_arg_patches},
         [{var,{945,31},'Patches'},
          {block,0,
           [{map,
             {945,43},
             {var,{945,40},'Acc'},
             [{map_field_assoc,
               {945,48},
               {var,{945,45},'Idx'},
               {var,{945,50},'E1'}}]}]}]}]}]}]},
  {clause,
   {947,1},
   [{nil,{947,19}},{var,{947,23},'Acc'}],
   [],
   [{debug_line,948,388},{var,{948,5},'Acc'}]}]}.
{function,
    {950,1},
    merge_patches,2,
    [{clause,
         {950,1},
         [{var,{950,1},'_'},{var,{950,1},'_'}],
         [[{call,
               {950,1},
               {remote,
                   {950,1},
                   {atom,{950,1},fake},
                   {atom,{950,1},is_beam_bif_info}},
               []}]],
         [{debug_line,950,389},{atom,{950,1},ignore}]},
     {clause,
         {950,1},
         [{tuple,
              {950,15},
              [{atom,{950,16},tuple_element},
               {var,{950,30},'I'},
               {var,{950,32},'E0'},
               {var,{950,35},'D0'}]},
          {tuple,
              {950,40},
              [{atom,{950,41},tuple_element},
               {var,{950,55},'I'},
               {var,{950,57},'E1'},
               {var,{950,60},'D1'}]}],
         [],
         [{debug_line,951,390},
          {tuple,
              {951,5},
              [{atom,{951,6},tuple_element},
               {var,{951,21},'I'},
               {call,
                   {951,24},
                   {atom,{951,24},merge_patches},
                   [{var,{951,38},'E0'},{var,{951,42},'E1'}]},
               {call,
                   {951,47},
                   {remote,
                       {951,47},
                       {atom,{951,47},erlang},
                       {atom,{951,47},max}},
                   [{var,{951,51},'D0'},{var,{951,54},'D1'}]}]}]},
     {clause,
         {952,1},
         [{tuple,
              {952,15},
              [{atom,{952,16},tuple_element},
               {var,{952,30},'IA'},
               {var,{952,33},'EA'},
               {var,{952,36},'_'}]},
          {tuple,
              {952,40},
              [{atom,{952,41},tuple_element},
               {var,{952,55},'IB'},
               {var,{952,58},'EB'},
               {var,{952,61},'_'}]}],
         [],
         [{debug_line,953,391},
          {tuple,
              {953,5},
              [{atom,{953,6},tuple_elements},
               {cons,
                   {953,22},
                   {tuple,{953,23},[{var,{953,24},'IA'},{var,{953,27},'EA'}]},
                   {cons,
                       {953,32},
                       {tuple,
                           {953,32},
                           [{var,{953,33},'IB'},{var,{953,36},'EB'}]},
                       {nil,{953,39}}}}]}]},
     {clause,
         {954,1},
         [{tuple,
              {954,15},
              [{atom,{954,16},tuple_element},
               {var,{954,30},'IA'},
               {var,{954,33},'EA'},
               {var,{954,36},'_'}]},
          {tuple,
              {954,40},
              [{atom,{954,41},tuple_elements},{var,{954,56},'Es'}]}],
         [],
         [{debug_line,955,392},
          {tuple,
              {955,5},
              [{atom,{955,6},tuple_elements},
               {cons,
                   {955,21},
                   {tuple,{955,22},[{var,{955,23},'IA'},{var,{955,26},'EA'}]},
                   {var,{955,30},'Es'}}]}]},
     {clause,
         {956,1},
         [{tuple,
              {956,15},
              [{atom,{956,16},tuple_elements},{var,{956,31},'Es'}]},
          {tuple,
              {956,36},
              [{atom,{956,37},tuple_element},
               {var,{956,51},'IA'},
               {var,{956,54},'EA'},
               {var,{956,57},'_'}]}],
         [],
         [{debug_line,957,393},
          {tuple,
              {957,5},
              [{atom,{957,6},tuple_elements},
               {cons,
                   {957,21},
                   {tuple,{957,22},[{var,{957,23},'IA'},{var,{957,26},'EA'}]},
                   {var,{957,30},'Es'}}]}]},
     {clause,
         {958,1},
         [{tuple,{958,15},[{atom,{958,16},self},{atom,{958,21},heap_tuple}]},
          {var,{958,34},'Other'}],
         [],
         [{debug_line,961,394},{var,{961,5},'Other'}]}]}.
{function,
 {963,1},
 patch_phi,3,
 [{clause,
   {963,1},
   [{var,{963,1},'_'},{var,{963,1},'_'},{var,{963,1},'_'}],
   [[{call,
      {963,1},
      {remote,{963,1},{atom,{963,1},fake},{atom,{963,1},is_beam_bif_info}},
      []}]],
   [{debug_line,963,395},{atom,{963,1},ignore}]},
  {clause,
   {963,1},
   [{match,
     {963,11},
     {var,{963,11},'I0'},
     {tuple,
      {963,14},
      [{atom,{963,14},b_set},
       {var,{963,14},'_'},
       {var,{963,14},'_'},
       {atom,{963,24},phi},
       {var,{963,33},'Args0'}]}},
    {var,{963,41},'Patches'},
    {var,{963,50},'Cnt0'}],
   [],
   [{debug_line,964,396},
    {atom,{964,6},skip},
    {debug_line,965,397},
    {match,
     {965,5},
     {var,{965,5},'L2P'},
     {call,
      {965,11},
      {remote,{965,11},{atom,{965,11},lists},{atom,{965,11},foldl}},
      [{block,0,[{'fun',{965,17},{function,merge_phi_patch,2}}]},
       {block,0,[{map,{965,40},[]}]},
       {var,{965,45},'Patches'}]}},
    {debug_line,966,398},
    {match,
     {966,5},
     {tuple,
      {966,5},
      [{var,{966,6},'Args'},{var,{966,12},'Extra'},{var,{966,19},'Cnt'}]},
     {call,
      {967,9},
      {remote,{967,9},{atom,{967,9},lists},{atom,{967,9},foldr}},
      [{block,0,
        [{debug_line,967,399},
         {'fun',
          {967,15},
          {clauses,
           [{clause,
             {967,18},
             [{match,
               {967,19},
               {var,{967,19},'Arg0'},
               {tuple,{967,24},[{var,{967,25},'_'},{var,{967,27},'Lbl'}]}},
              {tuple,
               {967,33},
               [{var,{967,34},'ArgsAcc'},
                {var,{967,42},'ExtraAcc'},
                {var,{967,51},'CntAcc'}]}],
             [],
             [{debug_line,968,400},
              {'case',
               {968,23},
               {var,{968,28},'L2P'},
               [{clause,
                 {969,27},
                 [{map,
                   {969,27},
                   [{map_field_exact,
                     {969,33},
                     {var,{969,29},'Lbl'},
                     {tuple,
                      {969,36},
                      [{atom,{969,37},phi},
                       {var,{969,41},'_'},
                       {var,{969,43},'Lbl'},
                       {var,{969,47},'Lit'},
                       {var,{969,51},'Element'}]}}]}],
                 [],
                 [{debug_line,970,401},
                  {match,
                   {970,31},
                   {tuple,
                    {970,31},
                    [{var,{970,32},'Arg'},
                     {var,{970,36},'Extra'},
                     {var,{970,42},'Cnt1'}]},
                   {call,
                    {971,35},
                    {atom,{971,35},patch_literal_term},
                    [{var,{971,54},'Lit'},
                     {var,{971,59},'Element'},
                     {var,{971,68},'CntAcc'}]}},
                  {debug_line,972,402},
                  {tuple,
                   {972,31},
                   [{cons,
                     {972,32},
                     {tuple,
                      {972,33},
                      [{var,{972,34},'Arg'},{var,{972,38},'Lbl'}]},
                     {var,{972,43},'ArgsAcc'}},
                    {cons,
                     {973,32},
                     {tuple,
                      {973,33},
                      [{var,{973,34},'Lbl'},{var,{973,38},'Extra'}]},
                     {var,{973,45},'ExtraAcc'}},
                    {var,{973,56},'Cnt1'}]}]},
                {clause,
                 {974,27},
                 [{var,{974,27},'_'}],
                 [],
                 [{debug_line,975,403},
                  {tuple,
                   {975,31},
                   [{cons,
                     {975,32},
                     {var,{975,33},'Arg0'},
                     {var,{975,38},'ArgsAcc'}},
                    {var,{975,48},'ExtraAcc'},
                    {var,{975,58},'CntAcc'}]}]}]}]}]}}]},
       {block,0,
        [{debug_line,977,404},
         {tuple,
          {977,20},
          [{nil,{977,21}},{nil,{977,24}},{var,{977,27},'Cnt0'}]}]},
       {var,{977,34},'Args0'}]}},
    {debug_line,978,405},
    {match,
     {978,5},
     {var,{978,5},'I'},
     {block,
      {978,9},
      [{match,{978,9},{var,{978,9},rec23},{var,{978,9},'I0'}},
       {'case',
        {978,18},
        {var,{978,9},rec23},
        [{clause,
          {978,18},
          [{tuple,
            {978,18},
            [{atom,{978,18},b_set},
             {var,{978,18},'_'},
             {var,{978,18},'_'},
             {var,{978,18},'_'},
             {var,{978,18},'_'}]}],
          [],
          [{call,
            {978,18},
            {remote,
             {978,18},
             {atom,{978,18},erlang},
             {atom,{978,18},setelement}},
            [{integer,{978,18},4},
             {call,
              {978,25},
              {remote,
               {978,25},
               {atom,{978,25},erlang},
               {atom,{978,25},setelement}},
              [{integer,{978,25},5},
               {var,{978,9},rec23},
               {var,{978,30},'Args'}]},
             {atom,{978,21},phi}]}]},
         {clause,
          [{generated,true},{location,{978,18}}],
          [{var,[{generated,true},{location,{978,18}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{978,18}}],
            {remote,
             [{generated,true},{location,{978,18}}],
             {atom,[{generated,true},{location,{978,18}}],erlang},
             {atom,[{generated,true},{location,{978,18}}],error}},
            [{tuple,
              [{generated,true},{location,{978,18}}],
              [{atom,[{generated,true},{location,{978,18}}],badrecord},
               {var,{978,9},rec23}]}]}]}]}]}},
    {debug_line,979,406},
    {tuple,
     {979,5},
     [{var,{979,6},'I'},{var,{979,9},'Extra'},{var,{979,16},'Cnt'}]}]}]}.
{function,
    {981,1},
    merge_phi_patch,2,
    [{clause,
         {981,1},
         [{var,{981,1},'_'},{var,{981,1},'_'}],
         [[{call,
               {981,1},
               {remote,
                   {981,1},
                   {atom,{981,1},fake},
                   {atom,{981,1},is_beam_bif_info}},
               []}]],
         [{debug_line,981,407},{atom,{981,1},ignore}]},
     {clause,
         {981,1},
         [{tuple,
              {981,17},
              [{atom,{981,18},phi},
               {var,{981,22},'Var'},
               {var,{981,26},'Lbl'},
               {var,{981,30},'Lit'},
               {var,{981,34},'E'}]},
          {var,{981,38},'Acc'}],
         [],
         [{debug_line,982,408},
          {'case',
              {982,5},
              {var,{982,10},'Acc'},
              [{clause,
                   {983,9},
                   [{map,
                        {983,9},
                        [{map_field_exact,
                             {983,14},
                             {var,{983,11},'Lbl'},
                             {tuple,
                                 {983,16},
                                 [{atom,{983,17},phi},
                                  {var,{983,21},'Var'},
                                  {var,{983,25},'Lbl'},
                                  {var,{983,29},'Lit'},
                                  {var,{983,33},'Old'}]}}]}],
                   [],
                   [{debug_line,984,409},
                    {map,
                        {984,16},
                        {var,{984,13},'Acc'},
                        [{map_field_assoc,
                             {984,22},
                             {var,{984,18},'Lbl'},
                             {tuple,
                                 {984,25},
                                 [{atom,{984,26},phi},
                                  {var,{984,30},'Var'},
                                  {var,{984,34},'Lbl'},
                                  {var,{984,38},'Lit'},
                                  {call,
                                      {984,42},
                                      {atom,{984,42},merge_patches},
                                      [{var,{984,56},'E'},
                                       {var,{984,59},'Old'}]}]}}]}]},
               {clause,
                   {985,9},
                   [{map,{985,9},[]}],
                   [],
                   [{debug_line,986,410},
                    {match,
                        {986,13},
                        {atom,{986,13},false},
                        {call,
                            {986,21},
                            {remote,
                                {986,21},
                                {atom,{986,21},erlang},
                                {atom,{986,21},is_map_key}},
                            [{var,{986,32},'Lbl'},{var,{986,37},'Acc'}]}},
                    {debug_line,987,411},
                    {map,
                        {987,16},
                        {var,{987,13},'Acc'},
                        [{map_field_assoc,
                             {987,22},
                             {var,{987,18},'Lbl'},
                             {tuple,
                                 {987,25},
                                 [{atom,{987,26},phi},
                                  {var,{987,30},'Var'},
                                  {var,{987,34},'Lbl'},
                                  {var,{987,38},'Lit'},
                                  {var,{987,42},'E'}]}}]}]}]}]}]}.
{function,
    {991,1},
    patch_literal_term,3,
    [{clause,
         {991,1},
         [{var,{991,1},'_'},{var,{991,1},'_'},{var,{991,1},'_'}],
         [[{call,
               {991,1},
               {remote,
                   {991,1},
                   {atom,{991,1},fake},
                   {atom,{991,1},is_beam_bif_info}},
               []}]],
         [{debug_line,991,412},{atom,{991,1},ignore}]},
     {clause,
         {991,1},
         [{var,{991,20},'Tuple'},
          {tuple,
              {991,27},
              [{atom,{991,28},tuple_elements},{var,{991,43},'Elems'}]},
          {var,{991,51},'Cnt'}],
         [],
         [{debug_line,992,413},
          {match,
              {992,5},
              {var,{992,5},'Es'},
              {lc,{992,10},
                  {block,0,
                      [{tuple,
                           {992,11},
                           [{atom,{992,12},tuple_element},
                            {var,{992,26},'I'},
                            {var,{992,28},'E'},
                            {integer,{992,30},0}]}]},
                  [{block,0,[{atom,{992,46},true}]},
                   {generate_strict,
                       {992,42},
                       {tuple,
                           {992,36},
                           [{var,{992,37},'I'},{var,{992,39},'E'}]},
                       {call,
                           {992,46},
                           {remote,
                               {992,46},
                               {atom,{992,46},lists},
                               {atom,{992,46},keysort}},
                           [{integer,{992,54},1},{var,{992,57},'Elems'}]}}]}},
          {debug_line,993,414},
          {call,
              {993,5},
              {atom,{993,5},patch_literal_tuple},
              [{var,{993,25},'Tuple'},
               {var,{993,32},'Es'},
               {var,{993,36},'Cnt'}]}]},
     {clause,
         {994,1},
         [{var,{994,20},'Tuple'},
          {match,
              {994,27},
              {var,{994,27},'E'},
              {tuple,
                  {994,29},
                  [{atom,{994,30},tuple_element},
                   {var,{994,44},'_'},
                   {var,{994,46},'_'},
                   {var,{994,48},'_'}]}},
          {var,{994,52},'Cnt'}],
         [],
         [{debug_line,995,415},
          {call,
              {995,5},
              {atom,{995,5},patch_literal_tuple},
              [{var,{995,25},'Tuple'},
               {block,0,[{cons,{995,32},{var,{995,33},'E'},{nil,{995,34}}}]},
               {var,{995,37},'Cnt'}]}]},
     {clause,
         {996,1},
         [{var,{996,20},'Tuple'},
          {tuple,{996,27},[{atom,{996,28},self},{atom,{996,33},heap_tuple}]},
          {var,{996,46},'Cnt0'}],
         [],
         [{debug_line,998,416},
          {match,
              {998,5},
              {tuple,{998,5},[{var,{998,6},'V'},{var,{998,8},'Cnt'}]},
              {call,{998,15},{atom,{998,15},new_var},[{var,{998,23},'Cnt0'}]}},
          {debug_line,999,417},
          {match,
              {999,5},
              {var,{999,5},'I'},
              {tuple,
                  {999,9},
                  [{atom,{999,9},b_set},
                   {map,{999,9},[]},
                   {var,{999,33},'V'},
                   {atom,{999,19},put_tuple},
                   {lc,{1000,21},
                       {block,0,
                           [{debug_line,1000,418},
                            {tuple,
                                {1000,22},
                                [{atom,{1000,22},b_literal},
                                 {var,{1000,37},'E'}]}]},
                       [{block,0,[{atom,{1000,48},true}]},
                        {generate,
                            {1000,45},
                            {var,{1000,43},'E'},
                            {call,
                                {1000,48},
                                {remote,
                                    {1000,48},
                                    {atom,{1000,48},erlang},
                                    {atom,{1000,48},tuple_to_list}},
                                [{var,{1000,62},'Tuple'}]}}]}]}},
          {debug_line,1001,419},
          {tuple,
              {1001,5},
              [{var,{1001,6},'V'},
               {cons,{1001,8},{var,{1001,9},'I'},{nil,{1001,10}}},
               {var,{1001,12},'Cnt'}]}]},
     {clause,
         {1002,1},
         [{bin,{1002,20},[]},
          {tuple,
              {1002,26},
              [{atom,{1002,27},self},{atom,{1002,32},init_writable}]},
          {var,{1002,48},'Cnt0'}],
         [],
         [{debug_line,1003,420},
          {match,
              {1003,5},
              {tuple,{1003,5},[{var,{1003,6},'V'},{var,{1003,8},'Cnt'}]},
              {call,
                  {1003,15},
                  {atom,{1003,15},new_var},
                  [{var,{1003,23},'Cnt0'}]}},
          {debug_line,1004,421},
          {match,
              {1004,5},
              {var,{1004,5},'I'},
              {tuple,
                  {1004,9},
                  [{atom,{1004,9},b_set},
                   {map,{1004,9},[]},
                   {var,{1004,40},'V'},
                   {atom,{1004,19},bs_init_writable},
                   {cons,
                       {1004,47},
                       {tuple,
                           {1004,48},
                           [{atom,{1004,48},b_literal},
                            {integer,{1004,63},256}]},
                       {nil,{1004,67}}}]}},
          {debug_line,1005,422},
          {tuple,
              {1005,5},
              [{var,{1005,6},'V'},
               {cons,{1005,8},{var,{1005,9},'I'},{nil,{1005,10}}},
               {var,{1005,12},'Cnt'}]}]},
     {clause,
         {1006,1},
         [{var,{1006,20},'Lst'},
          {match,
              {1006,25},
              {tuple,
                  {1006,25},
                  [{atom,{1006,26},hd},
                   {var,{1006,29},'_'},
                   {var,{1006,31},'_'}]},
              {var,{1006,34},'E'}},
          {var,{1006,37},'Cnt0'}],
         [],
         [{debug_line,1007,423},
          {call,
              {1007,5},
              {atom,{1007,5},patch_literal_list},
              [{var,{1007,24},'Lst'},
               {var,{1007,29},'E'},
               {var,{1007,32},'Cnt0'}]}]},
     {clause,
         {1008,1},
         [{var,{1008,20},'Lit'},{nil,{1008,25}},{var,{1008,29},'Cnt'}],
         [],
         [{debug_line,1009,424},
          {tuple,
              {1009,5},
              [{tuple,
                   {1009,6},
                   [{atom,{1009,6},b_literal},{var,{1009,21},'Lit'}]},
               {nil,{1009,27}},
               {var,{1009,31},'Cnt'}]}]}]}.
{function,
    {1018,1},
    patch_literal_list,3,
    [{clause,
         {1018,1},
         [{var,{1018,1},'_'},{var,{1018,1},'_'},{var,{1018,1},'_'}],
         [[{call,
               {1018,1},
               {remote,
                   {1018,1},
                   {atom,{1018,1},fake},
                   {atom,{1018,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1018,425},{atom,{1018,1},ignore}]},
     {clause,
         {1018,1},
         [{cons,{1018,20},{var,{1018,21},'H0'},{var,{1018,24},'T0'}},
          {match,
              {1018,29},
              {tuple,
                  {1018,29},
                  [{atom,{1018,30},hd},
                   {var,{1018,33},'Element'},
                   {var,{1018,41},'_'}]},
              {var,{1018,44},'E'}},
          {var,{1018,47},'Cnt0'}],
         [],
         [{debug_line,1019,426},
          {match,
              {1019,5},
              {tuple,
                  {1019,5},
                  [{var,{1019,6},'H'},
                   {var,{1019,8},'Extra2'},
                   {var,{1019,15},'Cnt1'}]},
              {call,
                  {1019,23},
                  {atom,{1019,23},patch_literal_term},
                  [{var,{1019,42},'H0'},
                   {var,{1019,46},'Element'},
                   {var,{1019,55},'Cnt0'}]}},
          {debug_line,1020,427},
          {match,
              {1020,5},
              {tuple,
                  {1020,5},
                  [{var,{1020,6},'T'},
                   {var,{1020,8},'Extra1'},
                   {var,{1020,15},'Cnt2'}]},
              {call,
                  {1020,23},
                  {atom,{1020,23},patch_literal_term},
                  [{var,{1020,42},'T0'},
                   {var,{1020,46},'E'},
                   {var,{1020,49},'Cnt1'}]}},
          {debug_line,1021,428},
          {match,
              {1021,5},
              {var,{1021,5},'Extra'},
              {op,{1021,20},
                  '++',
                  {var,{1021,13},'Extra2'},
                  {var,{1021,23},'Extra1'}}},
          {debug_line,1022,429},
          {match,
              {1022,5},
              {tuple,{1022,5},[{var,{1022,6},'Dst'},{var,{1022,10},'Cnt'}]},
              {call,
                  {1022,17},
                  {atom,{1022,17},new_var},
                  [{var,{1022,25},'Cnt2'}]}},
          {debug_line,1023,430},
          {match,
              {1023,5},
              {var,{1023,5},'I'},
              {tuple,
                  {1023,9},
                  [{atom,{1023,9},b_set},
                   {map,{1023,9},[]},
                   {var,{1023,32},'Dst'},
                   {atom,{1023,19},put_list},
                   {cons,
                       {1023,41},
                       {var,{1023,42},'H'},
                       {cons,
                           {1023,44},
                           {var,{1023,44},'T'},
                           {nil,{1023,45}}}}]}},
          {debug_line,1024,431},
          {tuple,
              {1024,5},
              [{var,{1024,6},'Dst'},
               {cons,{1024,11},{var,{1024,12},'I'},{var,{1024,14},'Extra'}},
               {var,{1024,22},'Cnt'}]}]},
     {clause,
         {1025,1},
         [{var,{1025,20},'Lit'},
          {tuple,
              {1025,25},
              [{atom,{1025,26},hd},{var,{1025,29},'_'},{var,{1025,31},'_'}]},
          {var,{1025,35},'Cnt'}],
         [],
         [{debug_line,1028,432},
          {tuple,
              {1028,5},
              [{tuple,
                   {1028,6},
                   [{atom,{1028,6},b_literal},{var,{1028,21},'Lit'}]},
               {nil,{1028,27}},
               {var,{1028,31},'Cnt'}]}]}]}.
{function,
    {1030,1},
    patch_literal_tuple,3,
    [{clause,
         {1030,1},
         [{var,{1030,1},'_'},{var,{1030,1},'_'},{var,{1030,1},'_'}],
         [[{call,
               {1030,1},
               {remote,
                   {1030,1},
                   {atom,{1030,1},fake},
                   {atom,{1030,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1030,433},{atom,{1030,1},ignore}]},
     {clause,
         {1030,1},
         [{var,{1030,21},'Tuple'},
          {var,{1030,28},'Elements0'},
          {var,{1030,39},'Cnt'}],
         [],
         [{debug_line,1031,434},
          {atom,{1031,6},skip},
          {debug_line,1033,435},
          {match,
              {1033,5},
              {var,{1033,5},'Elements'},
              {lc,{1033,16},
                  {block,0,[{var,{1033,18},'E'}]},
                  [{block,0,[{atom,{1033,51},true}]},
                   {generate_strict,
                       {1033,47},
                       {match,
                           {1033,23},
                           {tuple,
                               {1033,23},
                               [{atom,{1033,24},tuple_element},
                                {var,{1033,38},'_'},
                                {var,{1033,40},'_'},
                                {var,{1033,42},'_'}]},
                           {var,{1033,45},'E'}},
                       {var,{1033,51},'Elements0'}}]}},
          {debug_line,1034,436},
          {call,
              {1034,5},
              {atom,{1034,5},patch_literal_tuple},
              [{block,0,
                   [{call,
                        {1034,25},
                        {remote,
                            {1034,31},
                            {atom,{1034,25},erlang},
                            {atom,{1034,32},tuple_to_list}},
                        [{var,{1034,46},'Tuple'}]}]},
               {var,{1034,54},'Elements'},
               {nil,{1034,64}},
               {nil,{1034,68}},
               {integer,{1034,72},0},
               {var,{1034,75},'Cnt'}]}]}]}.
{function,
    {1036,1},
    patch_literal_tuple,6,
    [{clause,
         {1036,1},
         [{var,{1036,1},'_'},
          {var,{1036,1},'_'},
          {var,{1036,1},'_'},
          {var,{1036,1},'_'},
          {var,{1036,1},'_'},
          {var,{1036,1},'_'}],
         [[{call,
               {1036,1},
               {remote,
                   {1036,1},
                   {atom,{1036,1},fake},
                   {atom,{1036,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1036,437},{atom,{1036,1},ignore}]},
     {clause,
         {1036,1},
         [{cons,{1036,21},{var,{1036,22},'Lit'},{var,{1036,26},'LitElements'}},
          {cons,
              {1037,21},
              {tuple,
                  {1037,22},
                  [{atom,{1037,23},tuple_element},
                   {var,{1037,37},'Idx'},
                   {var,{1037,41},'Element'},
                   {var,{1037,49},'_'}]},
              {var,{1037,52},'Elements'}},
          {var,{1038,21},'Patched'},
          {var,{1038,30},'Extra'},
          {var,{1038,37},'Idx'},
          {var,{1038,42},'Cnt0'}],
         [],
         [{debug_line,1039,438},
          {atom,{1039,6},skip},
          {debug_line,1041,439},
          {match,
              {1041,5},
              {tuple,
                  {1041,5},
                  [{var,{1041,6},'V'},
                   {var,{1041,8},'Exs'},
                   {var,{1041,12},'Cnt'}]},
              {call,
                  {1041,19},
                  {atom,{1041,19},patch_literal_term},
                  [{var,{1041,38},'Lit'},
                   {var,{1041,43},'Element'},
                   {var,{1041,52},'Cnt0'}]}},
          {debug_line,1042,440},
          {call,
              {1042,5},
              {atom,{1042,5},patch_literal_tuple},
              [{var,{1042,25},'LitElements'},
               {var,{1042,38},'Elements'},
               {block,0,
                   [{cons,
                        {1042,48},
                        {var,{1042,49},'V'},
                        {var,{1042,51},'Patched'}}]},
               {block,0,
                   [{debug_line,1043,441},
                    {op,{1043,29},
                        '++',
                        {var,{1043,25},'Exs'},
                        {var,{1043,32},'Extra'}}]},
               {block,0,
                   [{op,{1043,43},
                        '+',
                        {var,{1043,39},'Idx'},
                        {integer,{1043,45},1}}]},
               {var,{1043,48},'Cnt'}]}]},
     {clause,
         {1044,1},
         [{cons,{1044,21},{var,{1044,22},'Lit'},{var,{1044,26},'LitElements'}},
          {var,{1044,40},'Patches'},
          {var,{1044,49},'Patched'},
          {var,{1044,58},'Extra'},
          {var,{1044,65},'Idx'},
          {var,{1044,70},'Cnt'}],
         [],
         [{debug_line,1045,442},
          {atom,{1045,6},skip},
          {debug_line,1047,443},
          {match,
              {1047,5},
              {tuple,
                  {1047,5},
                  [{var,{1047,6},'T'},{nil,{1047,8}},{var,{1047,11},'Cnt'}]},
              {call,
                  {1047,18},
                  {atom,{1047,18},patch_literal_term},
                  [{var,{1047,37},'Lit'},
                   {nil,{1047,42}},
                   {var,{1047,46},'Cnt'}]}},
          {debug_line,1048,444},
          {call,
              {1048,5},
              {atom,{1048,5},patch_literal_tuple},
              [{var,{1048,25},'LitElements'},
               {var,{1048,38},'Patches'},
               {block,0,
                   [{cons,
                        {1048,47},
                        {var,{1048,48},'T'},
                        {var,{1048,50},'Patched'}}]},
               {var,{1048,60},'Extra'},
               {block,0,
                   [{op,{1048,71},
                        '+',
                        {var,{1048,67},'Idx'},
                        {integer,{1048,73},1}}]},
               {var,{1048,76},'Cnt'}]}]},
     {clause,
         {1049,1},
         [{nil,{1049,21}},
          {nil,{1049,25}},
          {var,{1049,29},'Patched'},
          {var,{1049,38},'Extra'},
          {var,{1049,45},'_'},
          {var,{1049,48},'Cnt0'}],
         [],
         [{debug_line,1050,445},
          {match,
              {1050,5},
              {tuple,{1050,5},[{var,{1050,6},'V'},{var,{1050,8},'Cnt'}]},
              {call,
                  {1050,15},
                  {atom,{1050,15},new_var},
                  [{var,{1050,23},'Cnt0'}]}},
          {debug_line,1051,446},
          {match,
              {1051,5},
              {var,{1051,5},'I'},
              {tuple,
                  {1051,9},
                  [{atom,{1051,9},b_set},
                   {map,{1051,9},[]},
                   {var,{1051,33},'V'},
                   {atom,{1051,19},put_tuple},
                   {call,
                       {1051,40},
                       {remote,
                           {1051,40},
                           {atom,{1051,40},lists},
                           {atom,{1051,40},reverse}},
                       [{var,{1051,48},'Patched'}]}]}},
          {debug_line,1052,447},
          {tuple,
              {1052,5},
              [{var,{1052,6},'V'},
               {cons,{1052,8},{var,{1052,9},'I'},{var,{1052,11},'Extra'}},
               {var,{1052,18},'Cnt'}]}]}]}.
{function,{1054,1},
          new_var,1,
          [{clause,{1054,1},
                   [{var,{1054,1},'_'}],
                   [[{call,{1054,1},
                           {remote,{1054,1},
                                   {atom,{1054,1},fake},
                                   {atom,{1054,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1054,448},{atom,{1054,1},ignore}]},
           {clause,{1054,1},
                   [{var,{1054,9},'Count'}],
                   [],
                   [{debug_line,1055,449},
                    {tuple,{1055,5},
                           [{tuple,{1055,6},
                                   [{atom,{1055,6},b_var},
                                    {var,{1055,18},'Count'}]},
                            {op,{1055,30},
                                '+',
                                {var,{1055,25},'Count'},
                                {integer,{1055,31},1}}]}]}]}.
{function,
 {1059,1},
 insert_block_additions,3,
 [{clause,
   {1059,1},
   [{var,{1059,1},'_'},{var,{1059,1},'_'},{var,{1059,1},'_'}],
   [[{call,
      {1059,1},
      {remote,{1059,1},{atom,{1059,1},fake},{atom,{1059,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1059,450},{atom,{1059,1},ignore}]},
  {clause,
   {1059,1},
   [{cons,
     {1059,24},
     {match,
      {1059,25},
      {var,{1059,25},'Blk0'},
      {tuple,
       {1059,30},
       [{var,{1059,31},'L'},
        {match,
         {1059,33},
         {var,{1059,33},'B'},
         {tuple,
          {1059,35},
          [{atom,{1059,35},b_blk},
           {var,{1059,35},'_'},
           {var,{1059,45},'Is0'},
           {var,{1059,35},'_'}]}}]}},
     {var,{1059,51},'RevLinear'}},
    {var,{1060,24},'Lbl2Addition'},
    {var,{1060,38},'Acc'}],
   [],
   [{debug_line,1061,451},
    {match,
     {1061,5},
     {var,{1061,5},'Blk'},
     {'case',
      {1061,11},
      {var,{1061,16},'Lbl2Addition'},
      [{clause,
        {1062,15},
        [{map,
          {1062,15},
          [{map_field_exact,
            {1062,20},
            {var,{1062,18},'L'},
            {var,{1062,23},'Additions'}}]}],
        [],
        [{debug_line,1063,452},
         {match,
          {1063,19},
          {var,{1063,19},'Is'},
          {op,
           {1063,28},
           '++',
           {var,{1063,24},'Is0'},
           {call,
            {1063,31},
            {remote,{1063,31},{atom,{1063,31},lists},{atom,{1063,31},reverse}},
            [{var,{1063,39},'Additions'}]}}},
         {debug_line,1064,453},
         {tuple,
          {1064,19},
          [{var,{1064,20},'L'},
           {block,
            {1064,22},
            [{match,{1064,22},{var,{1064,22},rec24},{var,{1064,22},'B'}},
             {'case',
              {1064,30},
              {var,{1064,22},rec24},
              [{clause,
                {1064,30},
                [{tuple,
                  {1064,30},
                  [{atom,{1064,30},b_blk},
                   {var,{1064,30},'_'},
                   {var,{1064,30},'_'},
                   {var,{1064,30},'_'}]}],
                [],
                [{call,
                  {1064,30},
                  {remote,
                   {1064,30},
                   {atom,{1064,30},erlang},
                   {atom,{1064,30},setelement}},
                  [{integer,{1064,30},3},
                   {var,{1064,22},rec24},
                   {var,{1064,33},'Is'}]}]},
               {clause,
                [{generated,true},{location,{1064,30}}],
                [{var,[{generated,true},{location,{1064,30}}],'_'}],
                [],
                [{call,
                  [{generated,true},{location,{1064,30}}],
                  {remote,
                   [{generated,true},{location,{1064,30}}],
                   {atom,[{generated,true},{location,{1064,30}}],erlang},
                   {atom,[{generated,true},{location,{1064,30}}],error}},
                  [{tuple,
                    [{generated,true},{location,{1064,30}}],
                    [{atom,[{generated,true},{location,{1064,30}}],badrecord},
                     {var,{1064,22},rec24}]}]}]}]}]}]}]},
       {clause,
        {1065,15},
        [{var,{1065,15},'_'}],
        [],
        [{debug_line,1066,454},{var,{1066,19},'Blk0'}]}]}},
    {debug_line,1068,455},
    {call,
     {1068,5},
     {atom,{1068,5},insert_block_additions},
     [{var,{1068,28},'RevLinear'},
      {var,{1068,39},'Lbl2Addition'},
      {block,0,
       [{cons,{1068,53},{var,{1068,54},'Blk'},{var,{1068,58},'Acc'}}]}]}]},
  {clause,
   {1069,1},
   [{nil,{1069,24}},{var,{1069,28},'_'},{var,{1069,31},'Acc'}],
   [],
   [{debug_line,1070,456},{var,{1070,5},'Acc'}]}]}.
{eof,{1071,1}}.
