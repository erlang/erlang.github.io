{attribute,{1,1},file,{"sys_core_bsm.erl",1}}.
{attribute,{23,2},module,sys_core_bsm}.
{attribute,{25,2},export,[{module,2}]}.
{attribute,{1,1},file,{"core_parse.hrl",1}}.
{attribute,
    {32,2},
    record,
    {c_alias,
        [{typed_record_field,
             {record_field,{32,19},{atom,{32,19},anno},{nil,{32,24}}},
             {type,{32,30},list,[]}},
         {typed_record_field,
             {record_field,{32,38},{atom,{32,38},var}},
             {remote_type,
                 {32,45},
                 [{atom,{32,45},cerl},{atom,{32,50},cerl},[]]}},
         {typed_record_field,
             {record_field,{33,5},{atom,{33,5},pat}},
             {remote_type,
                 {33,12},
                 [{atom,{33,12},cerl},{atom,{33,17},cerl},[]]}}]}}.
{attribute,
    {35,2},
    record,
    {c_apply,
        [{typed_record_field,
             {record_field,{35,19},{atom,{35,19},anno},{nil,{35,24}}},
             {type,{35,30},list,[]}},
         {typed_record_field,
             {record_field,{35,38},{atom,{35,38},op}},
             {remote_type,
                 {35,44},
                 [{atom,{35,44},cerl},{atom,{35,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{36,5},{atom,{36,5},args}},
             {type,
                 {36,13},
                 list,
                 [{remote_type,
                      {36,14},
                      [{atom,{36,14},cerl},{atom,{36,19},cerl},[]]}]}}]}}.
{attribute,
    {38,2},
    record,
    {c_binary,
        [{typed_record_field,
             {record_field,{38,20},{atom,{38,20},anno},{nil,{38,25}}},
             {type,{38,31},list,[]}},
         {typed_record_field,
             {record_field,{38,39},{atom,{38,39},segments}},
             {type,
                 {38,51},
                 list,
                 [{remote_type,
                      {38,52},
                      [{atom,{38,52},cerl},{atom,{38,57},c_bitstr},[]]}]}}]}}.
{attribute,
    {40,2},
    record,
    {c_bitstr,
        [{typed_record_field,
             {record_field,{40,20},{atom,{40,20},anno},{nil,{40,25}}},
             {type,{40,31},list,[]}},
         {typed_record_field,
             {record_field,{40,39},{atom,{40,39},val}},
             {remote_type,
                 {40,46},
                 [{atom,{40,46},cerl},{atom,{40,51},cerl},[]]}},
         {typed_record_field,
             {record_field,{41,6},{atom,{41,6},size}},
             {remote_type,
                 {41,14},
                 [{atom,{41,14},cerl},{atom,{41,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{42,6},{atom,{42,6},unit}},
             {remote_type,
                 {42,14},
                 [{atom,{42,14},cerl},{atom,{42,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{43,6},{atom,{43,6},type}},
             {remote_type,
                 {43,14},
                 [{atom,{43,14},cerl},{atom,{43,19},cerl},[]]}},
         {typed_record_field,
             {record_field,{44,6},{atom,{44,6},flags}},
             {remote_type,
                 {44,15},
                 [{atom,{44,15},cerl},{atom,{44,20},cerl},[]]}}]}}.
{attribute,
    {46,2},
    record,
    {c_call,
        [{typed_record_field,
             {record_field,{46,18},{atom,{46,18},anno},{nil,{46,23}}},
             {type,{46,29},list,[]}},
         {typed_record_field,
             {record_field,{46,37},{atom,{46,37},module}},
             {remote_type,
                 {46,47},
                 [{atom,{46,47},cerl},{atom,{46,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{47,4},{atom,{47,4},name}},
             {remote_type,
                 {47,12},
                 [{atom,{47,12},cerl},{atom,{47,17},cerl},[]]}},
         {typed_record_field,
             {record_field,{48,4},{atom,{48,4},args}},
             {type,
                 {48,12},
                 list,
                 [{remote_type,
                      {48,13},
                      [{atom,{48,13},cerl},{atom,{48,18},cerl},[]]}]}}]}}.
{attribute,
    {50,2},
    record,
    {c_case,
        [{typed_record_field,
             {record_field,{50,18},{atom,{50,18},anno},{nil,{50,23}}},
             {type,{50,29},list,[]}},
         {typed_record_field,
             {record_field,{50,37},{atom,{50,37},arg}},
             {remote_type,
                 {50,44},
                 [{atom,{50,44},cerl},{atom,{50,49},cerl},[]]}},
         {typed_record_field,
             {record_field,{51,4},{atom,{51,4},clauses}},
             {type,
                 {51,15},
                 list,
                 [{remote_type,
                      {51,16},
                      [{atom,{51,16},cerl},{atom,{51,21},cerl},[]]}]}}]}}.
{attribute,
    {53,2},
    record,
    {c_catch,
        [{typed_record_field,
             {record_field,{53,19},{atom,{53,19},anno},{nil,{53,24}}},
             {type,{53,30},list,[]}},
         {typed_record_field,
             {record_field,{53,38},{atom,{53,38},body}},
             {remote_type,
                 {53,46},
                 [{atom,{53,46},cerl},{atom,{53,51},cerl},[]]}}]}}.
{attribute,
    {55,2},
    record,
    {c_clause,
        [{typed_record_field,
             {record_field,{55,20},{atom,{55,20},anno},{nil,{55,25}}},
             {type,{55,31},list,[]}},
         {typed_record_field,
             {record_field,{55,39},{atom,{55,39},pats}},
             {type,
                 {55,47},
                 list,
                 [{remote_type,
                      {55,48},
                      [{atom,{55,48},cerl},{atom,{55,53},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{56,6},{atom,{56,6},guard}},
             {remote_type,
                 {56,15},
                 [{atom,{56,15},cerl},{atom,{56,20},cerl},[]]}},
         {typed_record_field,
             {record_field,{57,6},{atom,{57,6},body}},
             {type,
                 {57,14},
                 union,
                 [{remote_type,
                      {57,14},
                      [{atom,{57,14},cerl},{atom,{57,19},cerl},[]]},
                  {type,{57,28},any,[]}]}}]}}.
{attribute,
    {59,2},
    record,
    {c_cons,
        [{typed_record_field,
             {record_field,{59,18},{atom,{59,18},anno},{nil,{59,23}}},
             {type,{59,29},list,[]}},
         {typed_record_field,
             {record_field,{59,37},{atom,{59,37},hd}},
             {remote_type,
                 {59,43},
                 [{atom,{59,43},cerl},{atom,{59,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{60,4},{atom,{60,4},tl}},
             {remote_type,
                 {60,10},
                 [{atom,{60,10},cerl},{atom,{60,15},cerl},[]]}}]}}.
{attribute,
    {62,2},
    record,
    {c_fun,
        [{typed_record_field,
             {record_field,{62,17},{atom,{62,17},anno},{nil,{62,22}}},
             {type,{62,28},list,[]}},
         {typed_record_field,
             {record_field,{62,36},{atom,{62,36},vars}},
             {type,
                 {62,44},
                 list,
                 [{remote_type,
                      {62,45},
                      [{atom,{62,45},cerl},{atom,{62,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{63,3},{atom,{63,3},body}},
             {remote_type,
                 {63,11},
                 [{atom,{63,11},cerl},{atom,{63,16},cerl},[]]}}]}}.
{attribute,
    {65,2},
    record,
    {c_let,
        [{typed_record_field,
             {record_field,{65,17},{atom,{65,17},anno},{nil,{65,22}}},
             {type,{65,28},list,[]}},
         {typed_record_field,
             {record_field,{65,36},{atom,{65,36},vars}},
             {type,
                 {65,44},
                 list,
                 [{remote_type,
                      {65,45},
                      [{atom,{65,45},cerl},{atom,{65,50},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{66,3},{atom,{66,3},arg}},
             {remote_type,
                 {66,10},
                 [{atom,{66,10},cerl},{atom,{66,15},cerl},[]]}},
         {typed_record_field,
             {record_field,{67,3},{atom,{67,3},body}},
             {remote_type,
                 {67,11},
                 [{atom,{67,11},cerl},{atom,{67,16},cerl},[]]}}]}}.
{attribute,
    {69,2},
    record,
    {c_letrec,
        [{typed_record_field,
             {record_field,{69,20},{atom,{69,20},anno},{nil,{69,25}}},
             {type,{69,31},list,[]}},
         {typed_record_field,
             {record_field,{70,20},{atom,{70,20},defs}},
             {type,
                 {70,28},
                 list,
                 [{type,
                      {70,29},
                      tuple,
                      [{remote_type,
                           {70,30},
                           [{atom,{70,30},cerl},{atom,{70,35},cerl},[]]},
                       {remote_type,
                           {70,43},
                           [{atom,{70,43},cerl},{atom,{70,48},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{71,6},{atom,{71,6},body}},
             {remote_type,
                 {71,14},
                 [{atom,{71,14},cerl},{atom,{71,19},cerl},[]]}}]}}.
{attribute,
    {73,2},
    record,
    {c_literal,
        [{typed_record_field,
             {record_field,{73,21},{atom,{73,21},anno},{nil,{73,26}}},
             {type,{73,32},list,[]}},
         {typed_record_field,
             {record_field,{73,40},{atom,{73,40},val}},
             {type,{73,47},any,[]}}]}}.
{attribute,
    {75,2},
    record,
    {c_map,
        [{typed_record_field,
             {record_field,{75,17},{atom,{75,17},anno},{nil,{75,22}}},
             {type,{75,28},list,[]}},
         {typed_record_field,
             {record_field,
                 {76,3},
                 {atom,{76,3},arg},
                 {record,
                     {76,7},
                     c_literal,
                     [{record_field,
                          {76,18},
                          {atom,{76,18},val},
                          {map,{76,22},[]}}]}},
             {type,
                 {76,30},
                 union,
                 [{remote_type,
                      {76,30},
                      [{atom,{76,30},cerl},{atom,{76,35},c_var},[]]},
                  {remote_type,
                      {76,45},
                      [{atom,{76,45},cerl},{atom,{76,50},c_literal},[]]}]}},
         {typed_record_field,
             {record_field,{77,3},{atom,{77,3},es}},
             {type,
                 {77,9},
                 list,
                 [{remote_type,
                      {77,10},
                      [{atom,{77,10},cerl},{atom,{77,15},c_map_pair},[]]}]}},
         {typed_record_field,
             {record_field,{78,3},{atom,{78,3},is_pat},{atom,{78,10},false}},
             {type,{78,19},boolean,[]}}]}}.
{attribute,
    {80,2},
    record,
    {c_map_pair,
        [{typed_record_field,
             {record_field,{80,22},{atom,{80,22},anno},{nil,{80,27}}},
             {type,{80,33},list,[]}},
         {typed_record_field,
             {record_field,{81,15},{atom,{81,15},op}},
             {type,
                 {81,21},
                 union,
                 [{type,
                      {81,21},
                      record,
                      [{atom,{81,22},c_literal},
                       {type,
                           {81,32},
                           field_type,
                           [{atom,{81,32},val},{atom,{81,37},assoc}]}]},
                  {type,
                      {81,48},
                      record,
                      [{atom,{81,49},c_literal},
                       {type,
                           {81,59},
                           field_type,
                           [{atom,{81,59},val},{atom,{81,64},exact}]}]}]}},
         {typed_record_field,
             {record_field,{82,8},{atom,{82,8},key}},
             {type,{82,15},any,[]}},
         {typed_record_field,
             {record_field,{83,8},{atom,{83,8},val}},
             {type,{83,15},any,[]}}]}}.
{attribute,
    {85,2},
    record,
    {c_module,
        [{typed_record_field,
             {record_field,{85,20},{atom,{85,20},anno},{nil,{85,25}}},
             {type,{85,31},list,[]}},
         {typed_record_field,
             {record_field,{85,39},{atom,{85,39},name}},
             {remote_type,
                 {85,47},
                 [{atom,{85,47},cerl},{atom,{85,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{86,6},{atom,{86,6},exports}},
             {type,
                 {86,17},
                 list,
                 [{remote_type,
                      {86,18},
                      [{atom,{86,18},cerl},{atom,{86,23},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{87,6},{atom,{87,6},attrs}},
             {type,
                 {87,15},
                 list,
                 [{type,
                      {87,16},
                      tuple,
                      [{remote_type,
                           {87,17},
                           [{atom,{87,17},cerl},{atom,{87,22},cerl},[]]},
                       {remote_type,
                           {87,30},
                           [{atom,{87,30},cerl},{atom,{87,35},cerl},[]]}]}]}},
         {typed_record_field,
             {record_field,{88,6},{atom,{88,6},defs}},
             {type,
                 {88,14},
                 list,
                 [{type,
                      {88,15},
                      tuple,
                      [{remote_type,
                           {88,16},
                           [{atom,{88,16},cerl},{atom,{88,21},cerl},[]]},
                       {remote_type,
                           {88,29},
                           [{atom,{88,29},cerl},
                            {atom,{88,34},cerl},
                            []]}]}]}}]}}.
{attribute,
    {90,2},
    record,
    {c_opaque,
        [{typed_record_field,
             {record_field,{90,20},{atom,{90,20},anno},{nil,{90,25}}},
             {type,{90,31},list,[]}},
         {typed_record_field,
             {record_field,{90,39},{atom,{90,39},val}},
             {type,{90,46},any,[]}}]}}.
{attribute,
    {92,2},
    record,
    {c_primop,
        [{typed_record_field,
             {record_field,{92,20},{atom,{92,20},anno},{nil,{92,25}}},
             {type,{92,31},list,[]}},
         {typed_record_field,
             {record_field,{92,39},{atom,{92,39},name}},
             {remote_type,
                 {92,47},
                 [{atom,{92,47},cerl},{atom,{92,52},cerl},[]]}},
         {typed_record_field,
             {record_field,{93,6},{atom,{93,6},args}},
             {type,
                 {93,14},
                 list,
                 [{remote_type,
                      {93,15},
                      [{atom,{93,15},cerl},{atom,{93,20},cerl},[]]}]}}]}}.
{attribute,
    {95,2},
    record,
    {c_receive,
        [{typed_record_field,
             {record_field,{95,21},{atom,{95,21},anno},{nil,{95,26}}},
             {type,{95,32},list,[]}},
         {typed_record_field,
             {record_field,{95,40},{atom,{95,40},clauses}},
             {type,
                 {95,51},
                 list,
                 [{remote_type,
                      {95,52},
                      [{atom,{95,52},cerl},{atom,{95,57},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{96,7},{atom,{96,7},timeout}},
             {remote_type,
                 {96,18},
                 [{atom,{96,18},cerl},{atom,{96,23},cerl},[]]}},
         {typed_record_field,
             {record_field,{97,7},{atom,{97,7},action}},
             {remote_type,
                 {97,17},
                 [{atom,{97,17},cerl},{atom,{97,22},cerl},[]]}}]}}.
{attribute,
    {99,2},
    record,
    {c_seq,
        [{typed_record_field,
             {record_field,{99,17},{atom,{99,17},anno},{nil,{99,22}}},
             {type,{99,28},list,[]}},
         {typed_record_field,
             {record_field,{99,36},{atom,{99,36},arg}},
             {type,
                 {99,43},
                 union,
                 [{remote_type,
                      {99,43},
                      [{atom,{99,43},cerl},{atom,{99,48},cerl},[]]},
                  {type,{99,57},any,[]}]}},
         {typed_record_field,
             {record_field,{100,3},{atom,{100,3},body}},
             {remote_type,
                 {100,11},
                 [{atom,{100,11},cerl},{atom,{100,16},cerl},[]]}}]}}.
{attribute,
    {102,2},
    record,
    {c_try,
        [{typed_record_field,
             {record_field,{102,17},{atom,{102,17},anno},{nil,{102,22}}},
             {type,{102,28},list,[]}},
         {typed_record_field,
             {record_field,{102,36},{atom,{102,36},arg}},
             {remote_type,
                 {102,43},
                 [{atom,{102,43},cerl},{atom,{102,48},cerl},[]]}},
         {typed_record_field,
             {record_field,{103,3},{atom,{103,3},vars}},
             {type,
                 {103,11},
                 list,
                 [{remote_type,
                      {103,12},
                      [{atom,{103,12},cerl},{atom,{103,17},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{104,3},{atom,{104,3},body}},
             {remote_type,
                 {104,11},
                 [{atom,{104,11},cerl},{atom,{104,16},cerl},[]]}},
         {typed_record_field,
             {record_field,{105,3},{atom,{105,3},evars}},
             {type,
                 {105,12},
                 list,
                 [{remote_type,
                      {105,13},
                      [{atom,{105,13},cerl},{atom,{105,18},cerl},[]]}]}},
         {typed_record_field,
             {record_field,{106,3},{atom,{106,3},handler}},
             {remote_type,
                 {106,14},
                 [{atom,{106,14},cerl},{atom,{106,19},cerl},[]]}}]}}.
{attribute,
    {108,2},
    record,
    {c_tuple,
        [{typed_record_field,
             {record_field,{108,19},{atom,{108,19},anno},{nil,{108,24}}},
             {type,{108,30},list,[]}},
         {typed_record_field,
             {record_field,{108,38},{atom,{108,38},es}},
             {type,
                 {108,44},
                 list,
                 [{remote_type,
                      {108,45},
                      [{atom,{108,45},cerl},{atom,{108,50},cerl},[]]}]}}]}}.
{attribute,
    {110,2},
    record,
    {c_values,
        [{typed_record_field,
             {record_field,{110,20},{atom,{110,20},anno},{nil,{110,25}}},
             {type,{110,31},list,[]}},
         {typed_record_field,
             {record_field,{110,39},{atom,{110,39},es}},
             {type,
                 {110,45},
                 list,
                 [{remote_type,
                      {110,46},
                      [{atom,{110,46},cerl},{atom,{110,51},cerl},[]]}]}}]}}.
{attribute,
    {112,2},
    record,
    {c_var,
        [{typed_record_field,
             {record_field,{112,17},{atom,{112,17},anno},{nil,{112,22}}},
             {type,{112,28},list,[]}},
         {typed_record_field,
             {record_field,{112,36},{atom,{112,36},name}},
             {remote_type,
                 {112,44},
                 [{atom,{112,44},cerl},{atom,{112,49},var_name},[]]}}]}}.
{attribute,{28,1},file,{"sys_core_bsm.erl",28}}.
{attribute,
    {29,2},
    spec,
    {{module,2},
     [{type,
          {29,13},
          'fun',
          [{type,
               {29,13},
               product,
               [{remote_type,
                    {29,14},
                    [{atom,{29,14},cerl},{atom,{29,19},c_module},[]]},
                {type,
                    {29,31},
                    list,
                    [{remote_type,
                         {29,32},
                         [{atom,{29,32},compile},
                          {atom,{29,40},option},
                          []]}]}]},
           {type,
               {29,54},
               tuple,
               [{atom,{29,55},ok},
                {remote_type,
                    {29,61},
                    [{atom,{29,61},cerl},{atom,{29,66},c_module},[]]}]}]}]}}.
{function,
 {31,1},
 module,2,
 [{clause,
   {31,1},
   [{var,{31,1},'_'},{var,{31,1},'_'}],
   [[{call,
      {31,1},
      {remote,{31,1},{atom,{31,1},fake},{atom,{31,1},is_beam_bif_info}},
      []}]],
   [{debug_line,31,1},{atom,{31,1},ignore}]},
  {clause,
   {31,1},
   [{match,
     {31,8},
     {tuple,
      {31,8},
      [{atom,{31,8},c_module},
       {var,{31,8},'_'},
       {var,{31,8},'_'},
       {var,{31,8},'_'},
       {var,{31,8},'_'},
       {var,{31,23},'Ds'}]},
     {var,{31,27},'Mod'}},
    {var,{31,32},'_Opts'}],
   [],
   [{debug_line,32,2},
    {tuple,
     {32,5},
     [{atom,{32,6},ok},
      {block,
       {32,9},
       [{match,
         {32,22},
         {var,{32,22},rec0},
         {call,{32,27},{atom,{32,27},function},[{var,{32,36},'Ds'}]}},
        {match,{32,9},{var,{32,9},rec1},{var,{32,9},'Mod'}},
        {'case',
         {32,22},
         {var,{32,9},rec1},
         [{clause,
           {32,22},
           [{tuple,
             {32,22},
             [{atom,{32,22},c_module},
              {var,{32,22},'_'},
              {var,{32,22},'_'},
              {var,{32,22},'_'},
              {var,{32,22},'_'},
              {var,{32,22},'_'}]}],
           [],
           [{call,
             {32,22},
             {remote,{32,22},{atom,{32,22},erlang},{atom,{32,22},setelement}},
             [{integer,{32,22},6},{var,{32,9},rec1},{var,{32,22},rec0}]}]},
          {clause,
           [{generated,true},{location,{32,22}}],
           [{var,[{generated,true},{location,{32,22}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{32,22}}],
             {remote,
              [{generated,true},{location,{32,22}}],
              {atom,[{generated,true},{location,{32,22}}],erlang},
              {atom,[{generated,true},{location,{32,22}}],error}},
             [{tuple,
               [{generated,true},{location,{32,22}}],
               [{atom,[{generated,true},{location,{32,22}}],badrecord},
                {var,{32,9},rec1}]}]}]}]}]}]}]}]}.
{function,
    {34,1},
    function,1,
    [{clause,
         {34,1},
         [{var,{34,1},'_'}],
         [[{call,
               {34,1},
               {remote,
                   {34,1},
                   {atom,{34,1},fake},
                   {atom,{34,1},is_beam_bif_info}},
               []}]],
         [{debug_line,34,3},{atom,{34,1},ignore}]},
     {clause,
         {34,1},
         [{cons,
              {34,10},
              {tuple,
                  {34,11},
                  [{match,
                       {34,12},
                       {tuple,
                           {34,12},
                           [{atom,{34,12},c_var},
                            {var,{34,12},'_'},
                            {tuple,
                                {34,24},
                                [{var,{34,25},'F'},{var,{34,27},'Arity'}]}]},
                       {var,{34,35},'Name'}},
                   {var,{34,40},'B0'}]},
              {var,{34,44},'Fs'}}],
         [],
         [{debug_line,35,4},
          {'try',
              {35,5},
              [{call,
                   {35,9},
                   {remote,
                       {35,19},
                       {atom,{35,9},cerl_trees},
                       {atom,{35,20},map}},
                   [{block,0,[{'fun',{35,24},{function,bsm_reorder,1}}]},
                    {var,{35,43},'B0'}]}],
              [{clause,
                   {36,9},
                   [{var,{36,9},'B'}],
                   [],
                   [{debug_line,36,5},
                    {cons,
                        {36,14},
                        {tuple,
                            {36,15},
                            [{var,{36,16},'Name'},{var,{36,21},'B'}]},
                        {call,
                            {36,26},
                            {atom,{36,26},function},
                            [{var,{36,35},'Fs'}]}}]}],
              [{clause,
                   {38,9},
                   [{tuple,
                        {38,9},
                        [{var,{38,9},'Class'},
                         {var,{38,15},'Error'},
                         {var,{38,21},'Stack'}]}],
                   [],
                   [{debug_line,39,6},
                    {call,
                        {39,13},
                        {remote,
                            {39,15},
                            {atom,{39,13},io},
                            {atom,{39,16},fwrite}},
                        [{block,0,[{string,{39,23},"Function: ~w/~w\n"}]},
                         {block,0,
                             [{cons,
                                  {39,44},
                                  {var,{39,45},'F'},
                                  {cons,
                                      {39,47},
                                      {var,{39,47},'Arity'},
                                      {nil,{39,52}}}}]}]},
                    {debug_line,40,7},
                    {call,
                        {40,13},
                        {remote,
                            {40,19},
                            {atom,{40,13},erlang},
                            {atom,{40,20},raise}},
                        [{var,{40,26},'Class'},
                         {var,{40,33},'Error'},
                         {var,{40,40},'Stack'}]}]}],
              []}]},
     {clause,{42,1},[{nil,{42,10}}],[],[{debug_line,43,8},{nil,{43,5}}]}]}.
{function,
    {47,1},
    bsm_reorder,1,
    [{clause,
         {47,1},
         [{var,{47,1},'_'}],
         [[{call,
               {47,1},
               {remote,
                   {47,1},
                   {atom,{47,1},fake},
                   {atom,{47,1},is_beam_bif_info}},
               []}]],
         [{debug_line,47,9},{atom,{47,1},ignore}]},
     {clause,
         {47,1},
         [{match,
              {47,13},
              {tuple,
                  {47,13},
                  [{atom,{47,13},c_case},
                   {var,{47,13},'_'},
                   {match,
                       {47,25},
                       {tuple,
                           {47,25},
                           [{atom,{47,25},c_var},
                            {var,{47,25},'_'},
                            {var,{47,25},'_'}]},
                       {var,{47,34},'V'}},
                   {var,{47,13},'_'}]},
              {var,{47,37},'Case'}}],
         [],
         [{debug_line,48,10},
          {call,
              {48,5},
              {atom,{48,5},bsm_reorder_1},
              [{block,0,[{cons,{48,19},{var,{48,20},'V'},{nil,{48,21}}}]},
               {var,{48,24},'Case'}]}]},
     {clause,
         {49,1},
         [{match,
              {49,13},
              {tuple,
                  {49,13},
                  [{atom,{49,13},c_case},
                   {var,{49,13},'_'},
                   {tuple,
                       {49,25},
                       [{atom,{49,25},c_values},
                        {var,{49,25},'_'},
                        {var,{49,38},'Es'}]},
                   {var,{49,13},'_'}]},
              {var,{49,43},'Case'}}],
         [],
         [{debug_line,50,11},
          {call,
              {50,5},
              {atom,{50,5},bsm_reorder_1},
              [{var,{50,19},'Es'},{var,{50,23},'Case'}]}]},
     {clause,
         {51,1},
         [{var,{51,13},'Core'}],
         [],
         [{debug_line,52,12},{var,{52,5},'Core'}]}]}.
{function,
 {54,1},
 bsm_reorder_1,2,
 [{clause,
   {54,1},
   [{var,{54,1},'_'},{var,{54,1},'_'}],
   [[{call,
      {54,1},
      {remote,{54,1},{atom,{54,1},fake},{atom,{54,1},is_beam_bif_info}},
      []}]],
   [{debug_line,54,13},{atom,{54,1},ignore}]},
  {clause,
   {54,1},
   [{var,{54,15},'Vs0'},
    {match,
     {54,20},
     {tuple,
      {54,20},
      [{atom,{54,20},c_case},
       {var,{54,20},'_'},
       {var,{54,20},'_'},
       {var,{54,36},'Cs0'}]},
     {var,{54,41},'Case'}}],
   [],
   [{debug_line,55,14},
    {'case',
     {55,5},
     {call,{55,10},{atom,{55,10},bsm_leftmost},[{var,{55,23},'Cs0'}]},
     [{clause,
       {56,9},
       [{var,{56,9},'Pos'}],
       [[{op,{56,22},'>',{var,{56,18},'Pos'},{integer,{56,24},0}},
         {op,{56,31},'=/=',{var,{56,27},'Pos'},{atom,{56,35},none}}]],
       [{debug_line,57,15},
        {match,
         {57,13},
         {var,{57,13},'Vs'},
         {call,
          {57,18},
          {remote,{57,26},{atom,{57,18},core_lib},{atom,{57,27},make_values}},
          [{block,0,
            [{call,
              {57,39},
              {atom,{57,39},move_from_col},
              [{var,{57,53},'Pos'},{var,{57,58},'Vs0'}]}]}]}},
        {debug_line,58,16},
        {match,
         {58,13},
         {var,{58,13},'Cs'},
         {lc,
          {58,18},
          {block,0,
           [{block,
             {58,19},
             [{match,
               {58,30},
               {var,{58,30},rec2},
               {call,
                {58,35},
                {atom,{58,35},move_from_col},
                [{var,{58,49},'Pos'},{var,{58,54},'Ps'}]}},
              {match,{58,19},{var,{58,19},rec3},{var,{58,19},'C'}},
              {'case',
               {58,30},
               {var,{58,19},rec3},
               [{clause,
                 {58,30},
                 [{tuple,
                   {58,30},
                   [{atom,{58,30},c_clause},
                    {var,{58,30},'_'},
                    {var,{58,30},'_'},
                    {var,{58,30},'_'},
                    {var,{58,30},'_'}]}],
                 [],
                 [{call,
                   {58,30},
                   {remote,
                    {58,30},
                    {atom,{58,30},erlang},
                    {atom,{58,30},setelement}},
                   [{integer,{58,30},3},
                    {var,{58,19},rec3},
                    {var,{58,30},rec2}]}]},
                {clause,
                 [{generated,true},{location,{58,30}}],
                 [{var,[{generated,true},{location,{58,30}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{58,30}}],
                   {remote,
                    [{generated,true},{location,{58,30}}],
                    {atom,[{generated,true},{location,{58,30}}],erlang},
                    {atom,[{generated,true},{location,{58,30}}],error}},
                   [{tuple,
                     [{generated,true},{location,{58,30}}],
                     [{atom,[{generated,true},{location,{58,30}}],badrecord},
                      {var,{58,19},rec3}]}]}]}]}]}]},
          [{block,0,[{debug_line,59,17},{atom,{59,47},true}]},
           {generate_strict,
            {59,43},
            {match,
             {59,22},
             {tuple,
              {59,22},
              [{atom,{59,22},c_clause},
               {var,{59,22},'_'},
               {var,{59,37},'Ps'},
               {var,{59,22},'_'},
               {var,{59,22},'_'}]},
             {var,{59,41},'C'}},
            {var,{59,47},'Cs0'}}]}},
        {debug_line,60,18},
        {block,
         {60,13},
         [{match,{60,13},{var,{60,13},rec4},{var,{60,13},'Case'}},
          {'case',
           {60,25},
           {var,{60,13},rec4},
           [{clause,
             {60,25},
             [{tuple,
               {60,25},
               [{atom,{60,25},c_case},
                {var,{60,25},'_'},
                {var,{60,25},'_'},
                {var,{60,25},'_'}]}],
             [],
             [{call,
               {60,25},
               {remote,
                {60,25},
                {atom,{60,25},erlang},
                {atom,{60,25},setelement}},
               [{integer,{60,25},3},
                {call,
                 {60,32},
                 {remote,
                  {60,32},
                  {atom,{60,32},erlang},
                  {atom,{60,32},setelement}},
                 [{integer,{60,32},4},{var,{60,13},rec4},{var,{60,40},'Cs'}]},
                {var,{60,29},'Vs'}]}]},
            {clause,
             [{generated,true},{location,{60,25}}],
             [{var,[{generated,true},{location,{60,25}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{60,25}}],
               {remote,
                [{generated,true},{location,{60,25}}],
                {atom,[{generated,true},{location,{60,25}}],erlang},
                {atom,[{generated,true},{location,{60,25}}],error}},
               [{tuple,
                 [{generated,true},{location,{60,25}}],
                 [{atom,[{generated,true},{location,{60,25}}],badrecord},
                  {var,{60,13},rec4}]}]}]}]}]}]},
      {clause,
       {61,9},
       [{var,{61,9},'_'}],
       [],
       [{debug_line,62,19},{var,{62,13},'Case'}]}]}]}]}.
{function,
    {65,1},
    move_from_col,2,
    [{clause,
         {65,1},
         [{var,{65,1},'_'},{var,{65,1},'_'}],
         [[{call,
               {65,1},
               {remote,
                   {65,1},
                   {atom,{65,1},fake},
                   {atom,{65,1},is_beam_bif_info}},
               []}]],
         [{debug_line,65,20},{atom,{65,1},ignore}]},
     {clause,
         {65,1},
         [{var,{65,15},'Pos'},{var,{65,20},'L'}],
         [],
         [{debug_line,66,21},
          {match,
              {66,5},
              {tuple,
                  {66,5},
                  [{var,{66,6},'First'},
                   {cons,{66,12},{var,{66,13},'Col'},{var,{66,17},'Rest'}}]},
              {call,
                  {66,26},
                  {remote,{66,31},{atom,{66,26},lists},{atom,{66,32},split}},
                  [{block,0,
                       [{op,{66,42},
                            '-',
                            {var,{66,38},'Pos'},
                            {integer,{66,44},1}}]},
                   {var,{66,47},'L'}]}},
          {debug_line,67,22},
          {op,{67,17},
              '++',
              {cons,{67,5},{var,{67,6},'Col'},{var,{67,10},'First'}},
              {var,{67,20},'Rest'}}]}]}.
{function,{73,1},
          bsm_leftmost,1,
          [{clause,{73,1},
                   [{var,{73,1},'_'}],
                   [[{call,{73,1},
                           {remote,{73,1},
                                   {atom,{73,1},fake},
                                   {atom,{73,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,73,23},{atom,{73,1},ignore}]},
           {clause,{73,1},
                   [{var,{73,14},'Cs'}],
                   [],
                   [{debug_line,74,24},
                    {call,{74,5},
                          {atom,{74,5},bsm_leftmost_1},
                          [{var,{74,20},'Cs'},{atom,{74,24},none}]}]}]}.
{function,{76,1},
          bsm_leftmost_1,2,
          [{clause,{76,1},
                   [{var,{76,1},'_'},{var,{76,1},'_'}],
                   [[{call,{76,1},
                           {remote,{76,1},
                                   {atom,{76,1},fake},
                                   {atom,{76,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,76,25},{atom,{76,1},ignore}]},
           {clause,{76,1},
                   [{cons,{76,16},{var,{76,17},'_'},{var,{76,19},'_'}},
                    {integer,{76,23},1}],
                   [],
                   [{debug_line,77,26},{integer,{77,5},1}]},
           {clause,{78,1},
                   [{cons,{78,16},
                          {tuple,{78,17},
                                 [{atom,{78,17},c_clause},
                                  {var,{78,17},'_'},
                                  {var,{78,32},'Ps'},
                                  {var,{78,17},'_'},
                                  {var,{78,17},'_'}]},
                          {var,{78,36},'Cs'}},
                    {var,{78,41},'Pos'}],
                   [],
                   [{debug_line,79,27},
                    {call,{79,5},
                          {atom,{79,5},bsm_leftmost_2},
                          [{var,{79,20},'Ps'},
                           {var,{79,24},'Cs'},
                           {integer,{79,28},1},
                           {var,{79,31},'Pos'}]}]},
           {clause,{80,1},
                   [{nil,{80,16}},{var,{80,20},'Pos'}],
                   [],
                   [{debug_line,80,28},{var,{80,28},'Pos'}]}]}.
{function,
    {82,1},
    bsm_leftmost_2,4,
    [{clause,
         {82,1},
         [{var,{82,1},'_'},{var,{82,1},'_'},{var,{82,1},'_'},{var,{82,1},'_'}],
         [[{call,
               {82,1},
               {remote,
                   {82,1},
                   {atom,{82,1},fake},
                   {atom,{82,1},is_beam_bif_info}},
               []}]],
         [{debug_line,82,29},{atom,{82,1},ignore}]},
     {clause,
         {82,1},
         [{var,{82,16},'_'},
          {var,{82,19},'Cs'},
          {var,{82,23},'Pos'},
          {var,{82,28},'Pos'}],
         [],
         [{debug_line,83,30},
          {call,
              {83,5},
              {atom,{83,5},bsm_leftmost_1},
              [{var,{83,20},'Cs'},{var,{83,24},'Pos'}]}]},
     {clause,
         {84,1},
         [{cons,
              {84,16},
              {tuple,
                  {84,17},
                  [{atom,{84,17},c_binary},
                   {var,{84,17},'_'},
                   {cons,{84,36},{var,{84,37},'_'},{var,{84,39},'_'}}]},
              {var,{84,43},'_'}},
          {var,{84,47},'Cs'},
          {var,{84,51},'N'},
          {var,{84,54},'_'}],
         [],
         [{debug_line,85,31},
          {call,
              {85,5},
              {atom,{85,5},bsm_leftmost_1},
              [{var,{85,20},'Cs'},{var,{85,24},'N'}]}]},
     {clause,
         {86,1},
         [{cons,{86,16},{var,{86,17},'_'},{var,{86,19},'Ps'}},
          {var,{86,24},'Cs'},
          {var,{86,28},'N'},
          {var,{86,31},'Pos'}],
         [],
         [{debug_line,87,32},
          {call,
              {87,5},
              {atom,{87,5},bsm_leftmost_2},
              [{var,{87,20},'Ps'},
               {var,{87,24},'Cs'},
               {block,0,
                   [{op,{87,29},'+',{var,{87,28},'N'},{integer,{87,30},1}}]},
               {var,{87,33},'Pos'}]}]},
     {clause,
         {88,1},
         [{nil,{88,16}},
          {var,{88,20},'Cs'},
          {var,{88,24},'_'},
          {var,{88,27},'Pos'}],
         [],
         [{debug_line,89,33},
          {call,
              {89,5},
              {atom,{89,5},bsm_leftmost_1},
              [{var,{89,20},'Cs'},{var,{89,24},'Pos'}]}]}]}.
{eof,{90,1}}.
