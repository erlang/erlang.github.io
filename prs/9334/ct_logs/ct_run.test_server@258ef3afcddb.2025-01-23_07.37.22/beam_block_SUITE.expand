{attribute,{1,1},file,{"beam_block_SUITE.erl",1}}.
{attribute,{20,2},module,beam_block_SUITE}.
{attribute,{22,2},
           export,
           [{all,0},
            {suite,0},
            {groups,0},
            {init_per_suite,1},
            {end_per_suite,1},
            {init_per_group,2},
            {end_per_group,2},
            {get_map_elements,1},
            {otp_7345,1},
            {move_opt_across_gc_bif,1},
            {erl_202,1},
            {repro,1},
            {local_cse,1},
            {second_block_pass,1},
            {coverage,1}]}.
{attribute,{30,2},export,[{encode_wildcards3,4},{find_operands,4}]}.
{function,
    {32,1},
    suite,0,
    [{clause,
         {32,1},
         [],
         [[{call,
               {32,1},
               {remote,
                   {32,1},
                   {atom,{32,1},fake},
                   {atom,{32,1},is_beam_bif_info}},
               []}]],
         [{debug_line,32,1},{atom,{32,1},ignore}]},
     {clause,
         {32,1},
         [],[],
         [{debug_line,32,2},
          {cons,
              {32,12},
              {tuple,
                  {32,13},
                  [{atom,{32,14},ct_hooks},
                   {cons,
                       {32,23},
                       {atom,{32,24},ts_install_cth},
                       {nil,{32,38}}}]},
              {nil,{32,40}}}]}]}.
{function,{34,1},
          all,0,
          [{clause,{34,1},
                   [],
                   [[{call,{34,1},
                           {remote,{34,1},
                                   {atom,{34,1},fake},
                                   {atom,{34,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,34,3},{atom,{34,1},ignore}]},
           {clause,{34,1},
                   [],[],
                   [{debug_line,35,4},
                    {cons,{35,5},
                          {tuple,{35,6},
                                 [{atom,{35,7},group},{atom,{35,13},p}]},
                          {nil,{35,15}}}]}]}.
{function,
 {37,1},
 groups,0,
 [{clause,
   {37,1},
   [],
   [[{call,
      {37,1},
      {remote,{37,1},{atom,{37,1},fake},{atom,{37,1},is_beam_bif_info}},
      []}]],
   [{debug_line,37,5},{atom,{37,1},ignore}]},
  {clause,
   {37,1},
   [],[],
   [{debug_line,38,6},
    {cons,
     {38,5},
     {tuple,
      {38,6},
      [{atom,{38,7},p},
       {cons,{38,9},{atom,{38,10},parallel},{nil,{38,18}}},
       {cons,
        {39,7},
        {atom,{39,8},get_map_elements},
        {cons,
         {40,8},
         {atom,{40,8},otp_7345},
         {cons,
          {41,8},
          {atom,{41,8},move_opt_across_gc_bif},
          {cons,
           {42,8},
           {atom,{42,8},erl_202},
           {cons,
            {43,8},
            {atom,{43,8},repro},
            {cons,
             {44,8},
             {atom,{44,8},local_cse},
             {cons,
              {45,8},
              {atom,{45,8},second_block_pass},
              {cons,{46,8},{atom,{46,8},coverage},{nil,{47,7}}}}}}}}}}]},
     {nil,{47,9}}}]}]}.
{function,{49,1},
          init_per_suite,1,
          [{clause,{49,1},
                   [{var,{49,1},'_'}],
                   [[{call,{49,1},
                           {remote,{49,1},
                                   {atom,{49,1},fake},
                                   {atom,{49,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,49,7},{atom,{49,1},ignore}]},
           {clause,{49,1},
                   [{var,{49,16},'Config'}],
                   [],
                   [{debug_line,50,8},
                    {call,{50,5},
                          {remote,{50,13},
                                  {atom,{50,5},test_lib},
                                  {atom,{50,14},recompile}},
                          [{atom,{50,25},beam_block_SUITE}]},
                    {debug_line,51,9},
                    {var,{51,5},'Config'}]}]}.
{function,{53,1},
          end_per_suite,1,
          [{clause,{53,1},
                   [{var,{53,1},'_'}],
                   [[{call,{53,1},
                           {remote,{53,1},
                                   {atom,{53,1},fake},
                                   {atom,{53,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,53,10},{atom,{53,1},ignore}]},
           {clause,{53,1},
                   [{var,{53,15},'_Config'}],
                   [],
                   [{debug_line,54,11},{atom,{54,5},ok}]}]}.
{function,{56,1},
          init_per_group,2,
          [{clause,{56,1},
                   [{var,{56,1},'_'},{var,{56,1},'_'}],
                   [[{call,{56,1},
                           {remote,{56,1},
                                   {atom,{56,1},fake},
                                   {atom,{56,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,56,12},{atom,{56,1},ignore}]},
           {clause,{56,1},
                   [{var,{56,16},'_GroupName'},{var,{56,28},'Config'}],
                   [],
                   [{debug_line,57,13},{var,{57,5},'Config'}]}]}.
{function,{59,1},
          end_per_group,2,
          [{clause,{59,1},
                   [{var,{59,1},'_'},{var,{59,1},'_'}],
                   [[{call,{59,1},
                           {remote,{59,1},
                                   {atom,{59,1},fake},
                                   {atom,{59,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,59,14},{atom,{59,1},ignore}]},
           {clause,{59,1},
                   [{var,{59,15},'_GroupName'},{var,{59,27},'Config'}],
                   [],
                   [{debug_line,60,15},{var,{60,5},'Config'}]}]}.
{function,
    {62,1},
    get_map_elements,1,
    [{clause,
         {62,1},
         [{var,{62,1},'_'}],
         [[{call,
               {62,1},
               {remote,
                   {62,1},
                   {atom,{62,1},fake},
                   {atom,{62,1},is_beam_bif_info}},
               []}]],
         [{debug_line,62,16},{atom,{62,1},ignore}]},
     {clause,
         {62,1},
         [{var,{62,18},'_Config'}],
         [],
         [{debug_line,63,17},
          {match,
              {63,5},
              {cons,
                  {63,5},
                  {tuple,{63,6},[{atom,{63,7},pred},{atom,{63,12},var}]},
                  {nil,{63,16}}},
              {call,
                  {63,20},
                  {atom,{63,20},get_map_elements},
                  [{block,0,
                       [{cons,
                            {63,37},
                            {tuple,
                                {63,38},
                                [{atom,{63,39},pred},{atom,{63,44},var}]},
                            {nil,{63,48}}}]},
                   {block,0,[{map,{63,51},[]}]},
                   {nil,{63,56}}]}},
          {debug_line,64,18},
          {match,
              {64,5},
              {cons,
                  {64,5},
                  {tuple,{64,6},[{atom,{64,7},pred},{atom,{64,12},var}]},
                  {nil,{64,16}}},
              {call,
                  {64,20},
                  {atom,{64,20},get_map_elements},
                  [{block,0,
                       [{cons,
                            {64,37},
                            {tuple,
                                {64,38},
                                [{atom,{64,39},pred},{atom,{64,44},var}]},
                            {nil,{64,48}}}]},
                   {block,0,
                       [{map,
                            {64,51},
                            [{map_field_assoc,
                                 {64,57},
                                 {atom,{64,53},pred},
                                 {nil,{64,59}}}]}]},
                   {nil,{64,64}}]}},
          {debug_line,65,19},
          {match,
              {65,5},
              {atom,{65,5},acc},
              {call,
                  {65,11},
                  {atom,{65,11},get_map_elements},
                  [{nil,{65,28}},
                   {block,0,
                       [{map,
                            {65,32},
                            [{map_field_assoc,
                                 {65,38},
                                 {atom,{65,34},pred},
                                 {nil,{65,40}}}]}]},
                   {atom,{65,45},acc}]}},
          {debug_line,66,20},
          {atom,{66,5},ok}]}]}.
{function,
 {68,1},
 get_map_elements,3,
 [{clause,
   {68,1},
   [{var,{68,1},'_'},{var,{68,1},'_'},{var,{68,1},'_'}],
   [[{call,
      {68,1},
      {remote,{68,1},{atom,{68,1},fake},{atom,{68,1},is_beam_bif_info}},
      []}]],
   [{debug_line,68,21},{atom,{68,1},ignore}]},
  {clause,
   {68,1},
   [{cons,
     {68,18},
     {tuple,{68,19},[{var,{68,20},'Pred'},{var,{68,25},'Var'}]},
     {var,{68,30},'Left'}},
    {var,{68,37},'Map'},
    {var,{68,42},'Acc'}],
   [],
   [{debug_line,69,22},
    {'case',
     {69,5},
     {var,{69,10},'Map'},
     [{clause,
       {70,9},
       [{map,
         {70,9},
         [{map_field_exact,
           {70,15},
           {var,{70,11},'Var'},
           {var,{70,18},'List'}}]}],
       [],
       [{debug_line,71,23},
        {'case',
         {71,13},
         {call,
          {71,18},
          {remote,{71,23},{atom,{71,18},lists},{atom,{71,24},keyfind}},
          [{var,{71,32},'Pred'},{integer,{71,38},1},{var,{71,41},'List'}]},
         [{clause,
           {72,17},
           [{atom,{72,17},false}],
           [],
           [{debug_line,73,24},
            {call,
             {73,21},
             {atom,{73,21},get_map_elements},
             [{var,{73,38},'Left'},
              {var,{73,44},'Map'},
              {block,0,
               [{cons,
                 {73,49},
                 {tuple,{73,50},[{var,{73,51},'Pred'},{var,{73,56},'Var'}]},
                 {var,{73,61},'Acc'}}]}]}]}]}]},
      {clause,
       {75,9},
       [{map,{75,9},[]}],
       [],
       [{debug_line,76,25},
        {call,
         {76,13},
         {atom,{76,13},get_map_elements},
         [{var,{76,30},'Left'},
          {var,{76,36},'Map'},
          {block,0,
           [{cons,
             {76,41},
             {tuple,{76,42},[{var,{76,43},'Pred'},{var,{76,48},'Var'}]},
             {var,{76,53},'Acc'}}]}]}]}]}]},
  {clause,
   {78,1},
   [{nil,{78,18}},{var,{78,22},'_Map'},{var,{78,28},'Acc'}],
   [],
   [{debug_line,79,26},{var,{79,5},'Acc'}]}]}.
{attribute,{96,2},
           record,
           {contextId,[{record_field,{96,20},{atom,{96,20},cid}},
                       {record_field,{96,24},{atom,{96,24},device_type}},
                       {record_field,{96,36},{atom,{96,36},contextRef}}]}}.
{attribute,{97,2},
           record,
           {dpRef,[{record_field,{97,16},{atom,{97,16},cid}},
                   {record_field,{97,20},{atom,{97,20},tlli}},
                   {record_field,{97,25},
                                 {atom,{97,25},ms_device_context_id}}]}}.
{attribute,
    {98,2},
    record,
    {qosProfileBssgp,
        [{record_field,{98,26},{atom,{98,26},peak_bit_rate_msb}},
         {record_field,{99,31},{atom,{99,31},peak_bit_rate_lsb}},
         {record_field,{100,31},{atom,{100,31},t_a_precedence}}]}}.
{attribute,
    {101,2},
    record,
    {llUnitdataReq,
        [{record_field,{101,24},{atom,{101,24},sapi}},
         {record_field,{102,29},{atom,{102,29},l3_pdu_length}},
         {record_field,{103,29},{atom,{103,29},pdu_life}}]}}.
{attribute,{104,2},
           record,
           {ptmsi,[{record_field,{104,16},{atom,{104,16},value}}]}}.
{function,
 {106,1},
 otp_7345,1,
 [{clause,
   {106,1},
   [{var,{106,1},'_'}],
   [[{call,
      {106,1},
      {remote,{106,1},{atom,{106,1},fake},{atom,{106,1},is_beam_bif_info}},
      []}]],
   [{debug_line,106,27},{atom,{106,1},ignore}]},
  {clause,
   {106,1},
   [{var,{106,10},'_Config'}],
   [],
   [{debug_line,107,28},
    {match,
     {107,5},
     {tuple,
      {107,5},
      [{atom,{107,5},llUnitdataReq},
       {var,{107,5},'_'},
       {integer,{107,34},3},
       {integer,{107,45},4}]},
     {call,
      {108,2},
      {atom,{108,2},otp_7345},
      [{block,0,
        [{debug_line,108,29},
         {tuple,
          {108,11},
          [{atom,{108,11},contextId},
           {atom,{108,11},undefined},
           {atom,{108,11},undefined},
           {atom,{108,11},undefined}]}]},
       {integer,{108,25},0},
       {block,0,
        [{cons,
          {108,28},
          {cons,
           {108,29},
           {integer,{108,30},1},
           {cons,
            {108,32},
            {integer,{108,32},2},
            {cons,{108,34},{integer,{108,34},3},{nil,{108,35}}}}},
          {cons,
           {108,37},
           {integer,{108,37},4},
           {cons,{108,39},{integer,{108,39},5},{nil,{108,40}}}}}]}]}}]}]}.
{function,
    {111,1},
    otp_7345,3,
    [{clause,
         {111,1},
         [{var,{111,1},'_'},{var,{111,1},'_'},{var,{111,1},'_'}],
         [[{call,
               {111,1},
               {remote,
                   {111,1},
                   {atom,{111,1},fake},
                   {atom,{111,1},is_beam_bif_info}},
               []}]],
         [{debug_line,111,30},{atom,{111,1},ignore}]},
     {clause,
         {111,1},
         [{var,{111,10},'ObjRef'},
          {var,{111,18},'_RdEnv'},
          {var,{111,26},'Args'}],
         [],
         [{debug_line,112,31},
          {match,
              {112,5},
              {var,{112,5},'Cid'},
              {'case',
                  {112,11},
                  {var,{112,11},'ObjRef'},
                  [{clause,
                       [{generated,true},{location,{112,11}}],
                       [{tuple,
                            [{generated,true},{location,{112,11}}],
                            [{atom,{112,11},contextId},
                             {var,{112,11},rec0},
                             {var,{112,11},'_'},
                             {var,{112,11},'_'}]}],
                       [],
                       [{var,{112,11},rec0}]},
                   {clause,
                       [{generated,true},{location,{112,11}}],
                       [{var,{112,11},rec0}],
                       [],
                       [{call,
                            [{generated,true},{location,{112,11}}],
                            {remote,
                                [{generated,true},{location,{112,11}}],
                                {atom,
                                    [{generated,true},{location,{112,11}}],
                                    erlang},
                                {atom,
                                    [{generated,true},{location,{112,11}}],
                                    error}},
                            [{tuple,
                                 [{generated,true},{location,{112,11}}],
                                 [{atom,
                                      [{generated,true},{location,{112,11}}],
                                      badrecord},
                                  {var,{112,11},rec0}]}]}]}]}},
          {debug_line,113,32},
          {match,
              {113,5},
              {var,{113,5},'_'},
              {tuple,
                  {113,9},
                  [{atom,{113,9},dpRef},
                   {var,{113,22},'Cid'},
                   {tuple,
                       {115,15},
                       [{atom,{115,15},ptmsi},{integer,{115,30},0}]},
                   {atom,{114,31},cid_id}]}},
          {debug_line,116,33},
          {match,
              {116,5},
              {var,{116,5},'_'},
              {tuple,
                  {116,9},
                  [{atom,{116,9},qosProfileBssgp},
                   {integer,{116,46},0},
                   {integer,{117,25},80},
                   {integer,{118,22},49}]}},
          {debug_line,119,34},
          {match,
              {119,5},
              {cons,{119,5},{var,{119,6},'Cpdu'},{var,{119,11},'_'}},
              {var,{119,16},'Args'}},
          {debug_line,120,35},
          {match,
              {120,5},
              {var,{120,5},'LlUnitdataReq'},
              {tuple,
                  {121,2},
                  [{atom,{121,2},llUnitdataReq},
                   {integer,{121,24},7},
                   {call,
                       {122,26},
                       {remote,
                           {122,26},
                           {atom,{122,26},erlang},
                           {atom,{122,26},length}},
                       [{var,{122,33},'Cpdu'}]},
                   {op,{125,10},
                       'div',
                       {call,
                           {124,10},
                           {atom,{124,10},id},
                           [{integer,{124,13},42}]},
                       {integer,{126,10},10}}]}},
          {debug_line,127,36},
          {call,{127,5},{atom,{127,5},id},[{var,{127,8},'LlUnitdataReq'}]}]}]}.
{function,
    {131,1},
    move_opt_across_gc_bif,1,
    [{clause,
         {131,1},
         [{var,{131,1},'_'}],
         [[{call,
               {131,1},
               {remote,
                   {131,1},
                   {atom,{131,1},fake},
                   {atom,{131,1},is_beam_bif_info}},
               []}]],
         [{debug_line,131,37},{atom,{131,1},ignore}]},
     {clause,
         {131,1},
         [{var,{131,24},'_Config'}],
         [],
         [{debug_line,132,38},
          {match,
              {132,5},
              {cons,
                  {132,5},
                  {integer,{132,6},0},
                  {cons,
                      {132,8},
                      {atom,{132,8},true},
                      {cons,{132,13},{integer,{132,13},1},{nil,{132,14}}}}},
              {call,
                  {132,18},
                  {atom,{132,18},positive},
                  [{atom,{132,27},speaking}]}},
          {debug_line,133,39},
          {atom,{133,5},ok}]}]}.
{function,
    {135,1},
    positive,1,
    [{clause,
         {135,1},
         [{var,{135,1},'_'}],
         [[{call,
               {135,1},
               {remote,
                   {135,1},
                   {atom,{135,1},fake},
                   {atom,{135,1},is_beam_bif_info}},
               []}]],
         [{debug_line,135,40},{atom,{135,1},ignore}]},
     {clause,
         {135,1},
         [{atom,{135,10},speaking}],
         [],
         [{debug_line,136,41},
          {'try',
              {136,5},
              [{debug_line,137,42},
               {match,{137,2},{var,{137,2},'Positive'},{integer,{137,13},0}},
               {debug_line,138,43},
               {cons,
                   {138,2},
                   {op,{138,3},'+',{var,{138,4},'Positive'}},
                   {cons,
                       {138,14},
                       {'case',
                           {138,14},
                           {var,{138,19},'Positive'},
                           [{clause,
                                {138,31},
                                [{var,{138,31},'_'}],
                                [],
                                [{atom,{138,36},true}]}]},
                       {cons,
                           {138,46},
                           {call,
                               {138,46},
                               {atom,{138,46},paris},
                               [{nil,{138,52}},{var,{138,56},'Positive'}]},
                           {nil,{138,65}}}}}],
              [],[],
              [{debug_line,140,44},{atom,{140,2},mailing}]}]}]}.
{function,{143,1},
          paris,2,
          [{clause,{143,1},
                   [{var,{143,1},'_'},{var,{143,1},'_'}],
                   [[{call,{143,1},
                           {remote,{143,1},
                                   {atom,{143,1},fake},
                                   {atom,{143,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,143,45},{atom,{143,1},ignore}]},
           {clause,{143,1},
                   [{nil,{143,7}},{var,{143,11},'P'}],
                   [],
                   [{debug_line,143,46},
                    {op,{143,19},
                        '+',
                        {var,{143,17},'P'},
                        {integer,{143,21},1}}]}]}.
{attribute,{150,2},
           record,
           {erl_202_r1,[{record_field,{150,22},{atom,{150,22},y}}]}}.
{attribute,{151,2},
           record,
           {erl_202_r2,[{record_field,{151,22},{atom,{151,22},x}}]}}.
{function,
    {153,1},
    erl_202,1,
    [{clause,
         {153,1},
         [{var,{153,1},'_'}],
         [[{call,
               {153,1},
               {remote,
                   {153,1},
                   {atom,{153,1},fake},
                   {atom,{153,1},is_beam_bif_info}},
               []}]],
         [{debug_line,153,47},{atom,{153,1},ignore}]},
     {clause,
         {153,1},
         [{var,{153,9},'_Config'}],
         [],
         [{debug_line,154,48},
          {match,
              {154,5},
              {var,{154,5},'Ref'},
              {call,
                  {154,11},
                  {remote,
                      {154,11},
                      {atom,{154,11},erlang},
                      {atom,{154,11},make_ref}},
                  []}},
          {debug_line,155,49},
          {match,
              {155,5},
              {var,{155,5},'Ref'},
              {call,
                  {155,11},
                  {atom,{155,11},erl_202},
                  [{block,0,
                       [{tuple,
                            {155,19},
                            [{tuple,
                                 {155,20},
                                 [{integer,{155,21},1},{integer,{155,23},2}]},
                             {var,{155,26},'Ref'}]}]},
                   {integer,{155,32},42}]}},
          {debug_line,157,50},
          {match,
              {157,5},
              {tuple,{157,5},[{var,{157,6},'Ref'}]},
              {call,
                  {157,13},
                  {atom,{157,13},erl_202},
                  [{block,0,
                       [{tuple,
                            {157,21},
                            [{integer,{157,22},7},{integer,{157,24},8}]}]},
                   {block,0,
                       [{tuple,
                            {157,28},
                            [{atom,{157,28},erl_202_r1},
                             {tuple,
                                 {157,42},
                                 [{atom,{157,42},erl_202_r2},
                                  {var,{157,56},'Ref'}]}]}]}]}},
          {debug_line,159,51},
          {atom,{159,5},ok}]}]}.
{function,
    {161,1},
    erl_202,2,
    [{clause,
         {161,1},
         [{var,{161,1},'_'},{var,{161,1},'_'}],
         [[{call,
               {161,1},
               {remote,
                   {161,1},
                   {atom,{161,1},fake},
                   {atom,{161,1},is_beam_bif_info}},
               []}]],
         [{debug_line,161,52},{atom,{161,1},ignore}]},
     {clause,
         {161,1},
         [{tuple,
              {161,9},
              [{tuple,{161,10},[{var,{161,11},'_'},{var,{161,14},'_'}]},
               {var,{161,17},'X'}]},
          {var,{161,21},'_'}],
         [],
         [{debug_line,162,53},{var,{162,5},'X'}]},
     {clause,
         {163,1},
         [{tuple,{163,9},[{var,{163,10},'_'},{var,{163,13},'_'}]},
          {tuple,{163,17},[{atom,{163,17},erl_202_r1},{var,{163,31},'R2'}]}],
         [],
         [{debug_line,164,54},
          {tuple,
              {164,5},
              [{'case',
                   {164,6},
                   {var,{164,6},'R2'},
                   [{clause,
                        [{generated,true},{location,{164,6}}],
                        [{tuple,
                             [{generated,true},{location,{164,6}}],
                             [{atom,{164,6},erl_202_r2},{var,{164,6},rec1}]}],
                        [],
                        [{var,{164,6},rec1}]},
                    {clause,
                        [{generated,true},{location,{164,6}}],
                        [{var,{164,6},rec1}],
                        [],
                        [{call,
                             [{generated,true},{location,{164,6}}],
                             {remote,
                                 [{generated,true},{location,{164,6}}],
                                 {atom,
                                     [{generated,true},{location,{164,6}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{164,6}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{164,6}}],
                                  [{atom,
                                       [{generated,true},{location,{164,6}}],
                                       badrecord},
                                   {var,{164,6},rec1}]}]}]}]}]}]}]}.
{function,
 {171,1},
 repro,1,
 [{clause,
   {171,1},
   [{var,{171,1},'_'}],
   [[{call,
      {171,1},
      {remote,{171,1},{atom,{171,1},fake},{atom,{171,1},is_beam_bif_info}},
      []}]],
   [{debug_line,171,55},{atom,{171,1},ignore}]},
  {clause,
   {171,1},
   [{var,{171,7},'_Config'}],
   [],
   [{debug_line,172,56},
    {match,
     {172,5},
     {nil,{172,5}},
     {call,
      {172,10},
      {remote,{172,14},{atom,{172,10},maps},{atom,{172,15},to_list}},
      [{block,0,
        [{call,
          {172,23},
          {atom,{172,23},repro},
          [{nil,{172,29}},
           {block,0,[{map,{172,33},[]}]},
           {block,0,[{map,{172,38},[]}]}]}]}]}},
    {debug_line,173,57},
    {match,
     {173,5},
     {cons,
      {173,5},
      {tuple,{173,6},[{atom,{173,7},tmp1},{atom,{173,12},n}]},
      {nil,{173,14}}},
     {call,
      {173,18},
      {remote,{173,22},{atom,{173,18},maps},{atom,{173,23},to_list}},
      [{block,0,
        [{call,
          {173,31},
          {atom,{173,31},repro},
          [{block,0,
            [{cons,
              {173,37},
              {tuple,{173,38},[{atom,{173,39},tmp1},{integer,{173,44},0}]},
              {nil,{173,46}}}]},
           {block,0,[{map,{173,49},[]}]},
           {block,0,[{map,{173,54},[]}]}]}]}]}},
    {debug_line,174,58},
    {match,
     {174,5},
     {cons,
      {174,5},
      {tuple,{174,6},[{atom,{174,7},tmp1},{atom,{174,12},name}]},
      {nil,{174,17}}},
     {call,
      {174,21},
      {remote,{174,25},{atom,{174,21},maps},{atom,{174,26},to_list}},
      [{block,0,
        [{call,
          {174,34},
          {atom,{174,34},repro},
          [{block,0,
            [{cons,
              {174,40},
              {tuple,{174,41},[{atom,{174,42},tmp1},{integer,{174,47},0}]},
              {nil,{174,49}}}]},
           {block,0,[{map,{174,52},[]}]},
           {block,0,
            [{map,
              {174,57},
              [{map_field_assoc,
                {174,60},
                {integer,{174,59},0},
                {atom,{174,62},name}}]}]}]}]}]}},
    {debug_line,175,59},
    {atom,{175,5},ok}]}]}.
{function,
    {177,1},
    repro,3,
    [{clause,
         {177,1},
         [{var,{177,1},'_'},{var,{177,1},'_'},{var,{177,1},'_'}],
         [[{call,
               {177,1},
               {remote,
                   {177,1},
                   {atom,{177,1},fake},
                   {atom,{177,1},is_beam_bif_info}},
               []}]],
         [{debug_line,177,60},{atom,{177,1},ignore}]},
     {clause,
         {177,1},
         [{nil,{177,7}},{var,{177,11},'TempNames'},{var,{177,22},'_Slots'}],
         [],
         [{debug_line,178,61},{var,{178,5},'TempNames'}]},
     {clause,
         {179,1},
         [{cons,
              {179,7},
              {tuple,{179,8},[{var,{179,9},'Temp'},{var,{179,15},'Slot'}]},
              {var,{179,21},'Xs'}},
          {var,{179,26},'TempNames'},
          {var,{179,37},'Slots0'}],
         [],
         [{debug_line,180,62},
          {match,
              {180,5},
              {tuple,{180,5},[{var,{180,6},'Name'},{var,{180,12},'Slots'}]},
              {'case',
                  {181,2},
                  {var,{181,7},'Slots0'},
                  [{clause,
                       {182,6},
                       [{map,
                            {182,6},
                            [{map_field_exact,
                                 {182,13},
                                 {var,{182,8},'Slot'},
                                 {var,{182,16},'Name0'}}]}],
                       [],
                       [{debug_line,182,63},
                        {tuple,
                            {182,26},
                            [{var,{182,27},'Name0'},
                             {var,{182,34},'Slots0'}]}]},
                   {clause,
                       {183,6},
                       [{map,{183,6},[]}],
                       [],
                       [{debug_line,183,64},
                        {tuple,
                            {183,26},
                            [{atom,{183,27},n},
                             {map,
                                 {183,40},
                                 {var,{183,34},'Slots0'},
                                 [{map_field_assoc,
                                      {183,47},
                                      {var,{183,42},'Slot'},
                                      {atom,{183,50},n}}]}]}]}]}},
          {debug_line,185,65},
          {call,
              {185,5},
              {atom,{185,5},repro},
              [{var,{185,11},'Xs'},
               {block,0,
                   [{map,
                        {185,24},
                        {var,{185,15},'TempNames'},
                        [{map_field_assoc,
                             {185,31},
                             {var,{185,26},'Temp'},
                             {var,{185,34},'Name'}}]}]},
               {var,{185,41},'Slots'}]}]}]}.
{function,
    {207,1},
    encode_wildcards3,4,
    [{clause,
         {207,1},
         [{var,{207,1},'_'},
          {var,{207,1},'_'},
          {var,{207,1},'_'},
          {var,{207,1},'_'}],
         [[{call,
               {207,1},
               {remote,
                   {207,1},
                   {atom,{207,1},fake},
                   {atom,{207,1},is_beam_bif_info}},
               []}]],
         [{debug_line,207,66},{atom,{207,1},ignore}]},
     {clause,
         {207,1},
         [{nil,{207,19}},{nil,{207,22}},{var,{207,25},'_'},{var,{207,27},'_'}],
         [],
         [{debug_line,207,67},{nil,{207,33}}]},
     {clause,
         {208,1},
         [{cons,{208,19},{var,{208,20},'Level'},{var,{208,26},'Levels'}},
          {cons,
              {208,34},
              {var,{208,35},'BitsInLevel'},
              {var,{208,47},'BitsRest'}},
          {var,{208,57},'LevelNo'},
          {var,{208,65},'TotSize'}],
         [],
         [{debug_line,209,68},
          {'case',
              {209,5},
              {'catch',
                  {209,11},
                  {call,
                      {209,18},
                      {remote,
                          {209,24},
                          {atom,{209,18},beam_block_SUITE},
                          {atom,{209,25},encode_wildcard}},
                      [{var,{209,41},'Level'},
                       {var,{209,47},'BitsInLevel'},
                       {block,0,
                           [{op,{209,66},
                                '-',
                                {var,{209,59},'TotSize'},
                                {var,{209,67},'BitsInLevel'}}]},
                       {block,0,
                           [{debug_line,210,69},
                            {call,
                                {210,6},
                                {remote,
                                    {210,6},
                                    {atom,{210,6},erlang},
                                    {atom,{210,6},length}},
                                [{var,{210,13},'Levels'}]}]}]}},
              [{clause,
                   {211,2},
                   [{tuple,
                        {211,2},
                        [{atom,{211,3},'EXIT'},
                         {tuple,
                             {211,10},
                             [{var,{211,11},'Reason'},
                              {var,{211,18},'Info'}]}]}],
                   [],
                   [{debug_line,212,70},
                    {call,
                        {212,6},
                        {remote,
                            {212,6},
                            {atom,{212,6},erlang},
                            {atom,{212,6},exit}},
                        [{block,0,
                             [{tuple,
                                  {212,11},
                                  [{var,{212,12},'Reason'},
                                   {tuple,
                                       {212,19},
                                       [{var,{212,20},'LevelNo'},
                                        {var,{212,28},'Info'}]}]}]}]}]},
               {clause,
                   {214,2},
                   [{atom,{214,2},no_wildcard}],
                   [],
                   [{debug_line,215,71},
                    {call,
                        {215,6},
                        {atom,{215,6},encode_wildcards3},
                        [{var,{215,24},'Levels'},
                         {var,{215,31},'BitsRest'},
                         {block,0,
                             [{op,{215,47},
                                  '+',
                                  {var,{215,40},'LevelNo'},
                                  {integer,{215,48},1}}]},
                         {block,0,
                             [{op,{215,57},
                                  '-',
                                  {var,{215,50},'TotSize'},
                                  {var,{215,58},'BitsInLevel'}}]}]}]},
               {clause,
                   {217,2},
                   [{tuple,{217,2},[{atom,{217,3},level},{var,{217,9},'Wl'}]}],
                   [],
                   [{debug_line,218,72},
                    {cons,
                        {218,6},
                        {var,{218,7},'Wl'},
                        {call,
                            {219,7},
                            {atom,{219,7},encode_wildcards3},
                            [{var,{219,25},'Levels'},
                             {var,{219,32},'BitsRest'},
                             {block,0,
                                 [{debug_line,219,73},
                                  {op,{219,48},
                                      '+',
                                      {var,{219,41},'LevelNo'},
                                      {integer,{219,49},1}}]},
                             {block,0,
                                 [{op,{219,58},
                                      '-',
                                      {var,{219,51},'TotSize'},
                                      {var,{219,59},'BitsInLevel'}}]}]}}]},
               {clause,
                   {221,2},
                   [{tuple,
                        {221,2},
                        [{atom,{221,3},recursive},{var,{221,13},'Wr'}]}],
                   [],
                   [{debug_line,222,74},
                    {cons,{222,6},{var,{222,7},'Wr'},{nil,{222,9}}}]}]}]}]}.
{function,
 {235,1},
 find_operands,4,
 [{clause,
   {235,1},
   [{var,{235,1},'_'},{var,{235,1},'_'},{var,{235,1},'_'},{var,{235,1},'_'}],
   [[{call,
      {235,1},
      {remote,{235,1},{atom,{235,1},fake},{atom,{235,1},is_beam_bif_info}},
      []}]],
   [{debug_line,235,75},{atom,{235,1},ignore}]},
  {clause,
   {235,1},
   [{var,{235,15},'Cfg'},
    {var,{235,19},'XsiGraph'},
    {nil,{235,28}},
    {var,{235,31},'_Count'}],
   [],
   [{debug_line,236,76},
    {tuple,{236,5},[{var,{236,6},'Cfg'},{var,{236,10},'XsiGraph'}]}]},
  {clause,
   {237,1},
   [{var,{237,15},'Cfg'},
    {var,{237,19},'XsiGraph'},
    {var,{237,28},'ActiveList'},
    {var,{237,39},'Count'}],
   [],
   [{debug_line,238,77},
    {match,
     {238,5},
     {tuple,{238,5},[{var,{238,6},'NewCfg'},{var,{238,13},'TempActiveList'}]},
     {call,
      {238,30},
      {remote,
       {238,36},
       {atom,{238,30},beam_block_SUITE},
       {atom,{238,37},find_operands_for_active_list}},
      [{var,{238,67},'Cfg'},
       {var,{238,71},'XsiGraph'},
       {var,{239,11},'ActiveList'},
       {nil,{239,22}}]}},
    {debug_line,240,78},
    {match,
     {240,5},
     {var,{240,5},'NewActiveList'},
     {call,
      {240,19},
      {remote,{240,24},{atom,{240,19},lists},{atom,{240,25},reverse}},
      [{var,{240,33},'TempActiveList'}]}},
    {debug_line,241,79},
    {cons,
     {241,5},
     {op,{241,11},'+',{var,{241,6},'Count'},{integer,{241,12},1}},
     {cons,
      {241,15},
      {call,
       {241,15},
       {remote,{241,15},{atom,{241,15},erlang},{atom,{241,15},length}},
       [{var,{241,22},'NewActiveList'}]},
      {cons,
       {241,38},
       {call,
        {241,38},
        {remote,{241,38},{atom,{241,38},erlang},{atom,{241,38},length}},
        [{block,0,
          [{call,
            {241,45},
            {remote,{241,52},{atom,{241,45},digraph},{atom,{241,53},vertices}},
            [{var,{241,62},'XsiGraph'}]}]}]},
       {nil,{241,72}}}}},
    {debug_line,242,80},
    {call,
     {242,5},
     {atom,{242,5},find_operands},
     [{var,{242,19},'NewCfg'},
      {var,{242,26},'XsiGraph'},
      {var,{242,35},'NewActiveList'},
      {block,0,
       [{op,{242,54},'+',{var,{242,49},'Count'},{integer,{242,55},1}}]}]}]}]}.
{function,
    {246,1},
    local_cse,1,
    [{clause,
         {246,1},
         [{var,{246,1},'_'}],
         [[{call,
               {246,1},
               {remote,
                   {246,1},
                   {atom,{246,1},fake},
                   {atom,{246,1},is_beam_bif_info}},
               []}]],
         [{debug_line,246,81},{atom,{246,1},ignore}]},
     {clause,
         {246,1},
         [{var,{246,11},'_Config'}],
         [],
         [{debug_line,247,82},
          {match,
              {247,5},
              {tuple,
                  {247,5},
                  [{var,{247,6},'Self'},
                   {tuple,
                       {247,11},
                       [{atom,{247,12},ok},{var,{247,15},'Self'}]}]},
              {call,{247,24},{atom,{247,24},local_cse_1},[]}},
          {debug_line,249,83},
          {call,{249,5},{atom,{249,5},local_cse_2},[{nil,{249,17}}]},
          {debug_line,250,84},
          {call,
              {250,5},
              {atom,{250,5},local_cse_2},
              [{block,0,
                   [{call,
                        {250,17},
                        {remote,
                            {250,22},
                            {atom,{250,17},lists},
                            {atom,{250,23},seq}},
                        [{integer,{250,27},1},{integer,{250,30},512}]}]}]},
          {debug_line,251,85},
          {call,
              {251,5},
              {atom,{251,5},local_cse_2},
              [{block,0,
                   [{call,
                        {251,18},
                        {remote,
                            {251,24},
                            {atom,{251,18},beam_block_SUITE},
                            {atom,{251,25},module_info}},
                        []}]}]},
          {debug_line,253,86},
          {match,
              {253,5},
              {tuple,
                  {253,5},
                  [{cons,{253,6},{atom,{253,7},b},{nil,{253,8}}},
                   {cons,
                       {253,10},
                       {atom,{253,11},a},
                       {cons,{253,13},{atom,{253,13},b},{nil,{253,14}}}}]},
              {call,
                  {253,19},
                  {atom,{253,19},local_cse_3},
                  [{atom,{253,31},a},{atom,{253,34},b}]}},
          {debug_line,255,87},
          {match,
              {255,5},
              {tuple,
                  {255,5},
                  [{integer,{255,6},2000},
                   {var,{255,11},'Self'},
                   {tuple,
                       {255,16},
                       [{var,{255,17},'Self'},{atom,{255,22},write_cache}]}]},
              {call,{255,38},{atom,{255,38},local_cse_4},[]}},
          {debug_line,257,88},
          {atom,{257,5},ok}]}]}.
{function,
    {259,1},
    local_cse_1,0,
    [{clause,
         {259,1},
         [],
         [[{call,
               {259,1},
               {remote,
                   {259,1},
                   {atom,{259,1},fake},
                   {atom,{259,1},is_beam_bif_info}},
               []}]],
         [{debug_line,259,89},{atom,{259,1},ignore}]},
     {clause,
         {259,1},
         [],[],
         [{debug_line,264,90},
          {tuple,
              {264,5},
              [{call,
                   {264,6},
                   {remote,{264,6},{atom,{264,6},erlang},{atom,{264,6},self}},
                   []},
               {tuple,
                   {264,13},
                   [{atom,{264,14},ok},
                    {call,
                        {264,17},
                        {remote,
                            {264,17},
                            {atom,{264,17},erlang},
                            {atom,{264,17},self}},
                        []}]}]}]}]}.
{function,
    {266,1},
    local_cse_2,1,
    [{clause,
         {266,1},
         [{var,{266,1},'_'}],
         [[{call,
               {266,1},
               {remote,
                   {266,1},
                   {atom,{266,1},fake},
                   {atom,{266,1},is_beam_bif_info}},
               []}]],
         [{debug_line,266,91},{atom,{266,1},ignore}]},
     {clause,
         {266,1},
         [{var,{266,13},'Term'}],
         [],
         [{debug_line,267,92},
          {'case',
              {267,5},
              {call,
                  {267,10},
                  {atom,{267,10},cse_make_binary},
                  [{var,{267,26},'Term'}]},
              [{clause,
                   {268,9},
                   [{bin,
                        {268,9},
                        [{bin_element,
                             {268,11},
                             {var,{268,11},'Size'},
                             {integer,{268,16},8},
                             default},
                         {bin_element,
                             {268,18},
                             {var,{268,18},'BinTerm'},
                             {var,{268,26},'Size'},
                             [binary]}]}],
                   [],
                   [{debug_line,269,93},
                    {match,
                        {269,13},
                        {var,{269,13},'Term'},
                        {call,
                            {269,20},
                            {remote,
                                {269,20},
                                {atom,{269,20},erlang},
                                {atom,{269,20},binary_to_term}},
                            [{var,{269,35},'BinTerm'}]}}]},
               {clause,
                   {270,9},
                   [{bin,
                        {270,9},
                        [{bin_element,
                             {270,11},
                             {var,{270,11},'Size'},
                             {integer,{270,16},8},
                             default},
                         {bin_element,
                             {270,18},
                             {var,{270,18},'SizeTerm'},
                             {var,{270,27},'Size'},
                             [binary]},
                         {bin_element,
                             {270,39},
                             {var,{270,39},'BinTerm'},
                             default,
                             [binary]}]}],
                   [],
                   [{debug_line,271,94},
                    {match,
                        {271,13},
                        {tuple,
                            {271,13},
                            [{atom,{271,14},'$size'},
                             {var,{271,22},'TermSize'}]},
                        {call,
                            {271,34},
                            {remote,
                                {271,34},
                                {atom,{271,34},erlang},
                                {atom,{271,34},binary_to_term}},
                            [{var,{271,49},'SizeTerm'}]}},
                    {debug_line,272,95},
                    {match,
                        {272,13},
                        {var,{272,13},'TermSize'},
                        {call,
                            {272,24},
                            {remote,
                                {272,24},
                                {atom,{272,24},erlang},
                                {atom,{272,24},byte_size}},
                            [{var,{272,34},'BinTerm'}]}},
                    {debug_line,273,96},
                    {match,
                        {273,13},
                        {var,{273,13},'Term'},
                        {call,
                            {273,20},
                            {remote,
                                {273,20},
                                {atom,{273,20},erlang},
                                {atom,{273,20},binary_to_term}},
                            [{var,{273,35},'BinTerm'}]}}]}]}]}]}.
{function,
    {279,1},
    cse_make_binary,1,
    [{clause,
         {279,1},
         [{var,{279,1},'_'}],
         [[{call,
               {279,1},
               {remote,
                   {279,1},
                   {atom,{279,1},fake},
                   {atom,{279,1},is_beam_bif_info}},
               []}]],
         [{debug_line,279,97},{atom,{279,1},ignore}]},
     {clause,
         {279,1},
         [{var,{279,17},'Term'}],
         [],
         [{debug_line,280,98},
          {match,
              {280,5},
              {var,{280,5},'B'},
              {call,
                  {280,9},
                  {remote,
                      {280,9},
                      {atom,{280,9},erlang},
                      {atom,{280,9},term_to_binary}},
                  [{var,{280,24},'Term'}]}},
          {debug_line,281,99},
          {match,
              {281,5},
              {var,{281,5},'SizeB'},
              {call,
                  {281,13},
                  {remote,
                      {281,13},
                      {atom,{281,13},erlang},
                      {atom,{281,13},byte_size}},
                  [{var,{281,23},'B'}]}},
          {debug_line,282,100},
          {'if',
              {282,5},
              [{clause,
                   {282,8},
                   [],
                   [[{op,{282,14},
                         '>',
                         {var,{282,8},'SizeB'},
                         {integer,{282,16},255}}]],
                   [{debug_line,283,101},
                    {match,
                        {283,13},
                        {var,{283,13},'SB'},
                        {call,
                            {283,18},
                            {remote,
                                {283,18},
                                {atom,{283,18},erlang},
                                {atom,{283,18},term_to_binary}},
                            [{block,0,
                                 [{tuple,
                                      {283,33},
                                      [{atom,{283,34},'$size'},
                                       {var,{283,42},'SizeB'}]}]}]}},
                    {debug_line,284,102},
                    {bin,
                        {284,13},
                        [{bin_element,
                             {284,16},
                             {call,
                                 {284,16},
                                 {remote,
                                     {284,16},
                                     {atom,{284,16},erlang},
                                     {atom,{284,16},byte_size}},
                                 [{var,{284,26},'SB'}]},
                             {integer,{284,31},8},
                             default},
                         {bin_element,
                             {284,34},
                             {var,{284,34},'SB'},
                             default,
                             [binary]},
                         {bin_element,
                             {284,45},
                             {var,{284,45},'B'},
                             default,
                             [binary]}]}]},
               {clause,
                   {285,8},
                   [],
                   [[{atom,{285,8},true}]],
                   [{debug_line,286,103},
                    {bin,
                        {286,13},
                        [{bin_element,
                             {286,15},
                             {var,{286,15},'SizeB'},
                             {integer,{286,21},8},
                             default},
                         {bin_element,
                             {286,24},
                             {var,{286,24},'B'},
                             default,
                             [binary]}]}]}]}]}]}.
{function,
    {289,1},
    local_cse_3,2,
    [{clause,
         {289,1},
         [{var,{289,1},'_'},{var,{289,1},'_'}],
         [[{call,
               {289,1},
               {remote,
                   {289,1},
                   {atom,{289,1},fake},
                   {atom,{289,1},is_beam_bif_info}},
               []}]],
         [{debug_line,289,104},{atom,{289,1},ignore}]},
     {clause,
         {289,1},
         [{var,{289,13},'X'},{var,{289,16},'Y'}],
         [],
         [{debug_line,293,105},
          {tuple,
              {293,5},
              [{cons,{293,6},{var,{293,7},'Y'},{nil,{293,8}}},
               {cons,
                   {293,10},
                   {var,{293,11},'X'},
                   {cons,{293,13},{var,{293,13},'Y'},{nil,{293,14}}}}]}]}]}.
{function,
    {295,1},
    local_cse_4,0,
    [{clause,
         {295,1},
         [],
         [[{call,
               {295,1},
               {remote,
                   {295,1},
                   {atom,{295,1},fake},
                   {atom,{295,1},is_beam_bif_info}},
               []}]],
         [{debug_line,295,106},{atom,{295,1},ignore}]},
     {clause,
         {295,1},
         [],[],
         [{debug_line,296,107},
          {call,
              {296,5},
              {atom,{296,5},do_local_cse_4},
              [{integer,{296,20},2000},
               {block,0,
                   [{call,
                        {296,26},
                        {remote,
                            {296,26},
                            {atom,{296,26},erlang},
                            {atom,{296,26},self}},
                        []}]},
               {block,0,
                   [{tuple,
                        {296,34},
                        [{call,
                             {296,35},
                             {remote,
                                 {296,35},
                                 {atom,{296,35},erlang},
                                 {atom,{296,35},self}},
                             []},
                         {atom,{296,43},write_cache}]}]}]}]}]}.
{function,{298,1},
          do_local_cse_4,3,
          [{clause,{298,1},
                   [{var,{298,1},'_'},{var,{298,1},'_'},{var,{298,1},'_'}],
                   [[{call,{298,1},
                           {remote,{298,1},
                                   {atom,{298,1},fake},
                                   {atom,{298,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,298,108},{atom,{298,1},ignore}]},
           {clause,{298,1},
                   [{var,{298,16},'X'},{var,{298,19},'Y'},{var,{298,22},'Z'}],
                   [],
                   [{debug_line,299,109},
                    {tuple,{299,5},
                           [{var,{299,6},'X'},
                            {var,{299,8},'Y'},
                            {var,{299,10},'Z'}]}]}]}.
{function,
    {303,1},
    second_block_pass,1,
    [{clause,
         {303,1},
         [{var,{303,1},'_'}],
         [[{call,
               {303,1},
               {remote,
                   {303,1},
                   {atom,{303,1},fake},
                   {atom,{303,1},is_beam_bif_info}},
               []}]],
         [{debug_line,303,110},{atom,{303,1},ignore}]},
     {clause,
         {303,1},
         [{var,{303,19},'_Config'}],
         [],
         [{debug_line,304,111},
          {match,
              {304,5},
              {cons,
                  {304,5},
                  {map,
                      {304,6},
                      [{map_field_exact,
                           {304,11},
                           {atom,{304,8},dts},
                           {float,{304,13},5.0}}]},
                  {nil,{304,17}}},
              {call,
                  {304,21},
                  {atom,{304,21},second_1},
                  [{block,0,
                       [{cons,
                            {304,30},
                            {map,
                                {304,31},
                                [{map_field_assoc,
                                     {304,37},
                                     {atom,{304,33},dts},
                                     {float,{304,40},10.0}}]},
                            {nil,{304,45}}}]},
                   {float,{304,48},2.0}]}},
          {debug_line,305,112},
          {atom,{305,5},ok}]}]}.
{function,
    {307,1},
    second_1,2,
    [{clause,
         {307,1},
         [{var,{307,1},'_'},{var,{307,1},'_'}],
         [[{call,
               {307,1},
               {remote,
                   {307,1},
                   {atom,{307,1},fake},
                   {atom,{307,1},is_beam_bif_info}},
               []}]],
         [{debug_line,307,113},{atom,{307,1},ignore}]},
     {clause,
         {307,1},
         [{var,{307,10},'Fs'},{var,{307,14},'TS'}],
         [],
         [{debug_line,308,114},
          {lc,{308,5},
              {block,0,
                  [{map,
                       {308,7},
                       {var,{308,6},'F'},
                       [{map_field_assoc,
                            {308,12},
                            {atom,{308,9},dts},
                            {op,{308,18},
                                '/',
                                {var,{308,14},'DTS'},
                                {var,{308,20},'TS'}}}]}]},
              [{block,0,[{atom,{308,46},true}]},
               {generate,
                   {308,43},
                   {match,
                       {308,27},
                       {map,
                           {308,27},
                           [{map_field_exact,
                                {308,32},
                                {atom,{308,29},dts},
                                {var,{308,34},'DTS'}}]},
                       {var,{308,41},'F'}},
                   {var,{308,46},'Fs'}}]}]}]}.
{function,
    {310,1},
    coverage,1,
    [{clause,
         {310,1},
         [{var,{310,1},'_'}],
         [[{call,
               {310,1},
               {remote,
                   {310,1},
                   {atom,{310,1},fake},
                   {atom,{310,1},is_beam_bif_info}},
               []}]],
         [{debug_line,310,115},{atom,{310,1},ignore}]},
     {clause,
         {310,1},
         [{var,{310,10},'Config'}],
         [],
         [{debug_line,311,116},
          {match,
              {311,5},
              {nil,{311,5}},
              {call,{311,10},{atom,{311,10},coverage_1},[]}},
          {debug_line,313,117},
          {match,
              {313,5},
              {cons,
                  {313,5},
                  {integer,{313,6},42},
                  {cons,{313,9},{var,{313,9},'Config'},{nil,{313,15}}}},
              {call,
                  {313,20},
                  {call,
                      {313,20},
                      {atom,{313,20},coverage_2},
                      [{var,{313,31},'Config'}]},
                  [{block,0,
                       [{tuple,
                            {313,40},
                            [{'fun',{313,41},{function,id,1}}]}]}]}},
          {debug_line,315,118},
          {match,
              {315,5},
              {tuple,
                  {315,5},
                  [{atom,{315,6},b},
                   {atom,{315,8},a},
                   {atom,{315,10},badarith}]},
              {call,
                  {315,22},
                  {atom,{315,22},coverage_3},
                  [{atom,{315,33},a},{atom,{315,36},b}]}},
          {debug_line,316,119},
          {match,
              {316,5},
              {atom,{316,5},ok},
              {call,
                  {316,10},
                  {atom,{316,10},coverage_3},
                  [{integer,{316,21},0},{integer,{316,24},1}]}},
          {debug_line,318,120},
          {match,
              {318,5},
              {tuple,
                  {318,5},
                  [{atom,{318,6},'EXIT'},
                   {tuple,
                       {318,13},
                       [{atom,{318,14},badarg},{var,{318,21},'_'}]}]},
              {'catch',
                  {318,27},
                  {call,
                      {318,33},
                      {atom,{318,33},coverage_4},
                      [{atom,{318,44},a},{atom,{318,47},b}]}}},
          {debug_line,320,121},
          {match,
              {320,5},
              {bin,
                  {320,5},
                  [{bin_element,
                       {320,6},
                       {string,{320,6},"true"},
                       default,
                       [utf8]}]},
              {call,
                  {320,15},
                  {atom,{320,15},coverage_5},
                  [{block,0,
                       [{call,
                            {320,26},
                            {atom,{320,26},id},
                            [{atom,{320,29},latin1}]}]},
                   {block,0,
                       [{call,
                            {320,38},
                            {atom,{320,38},id},
                            [{atom,{320,41},true}]}]}]}},
          {debug_line,321,122},
          {match,
              {321,5},
              {bin,
                  {321,5},
                  [{bin_element,
                       {321,6},
                       {string,{321,6},"true"},
                       default,
                       [utf8]}]},
              {call,
                  {321,15},
                  {atom,{321,15},coverage_5},
                  [{block,0,
                       [{call,
                            {321,26},
                            {atom,{321,26},id},
                            [{atom,{321,29},utf8}]}]},
                   {block,0,
                       [{call,
                            {321,36},
                            {atom,{321,36},id},
                            [{atom,{321,39},false}]}]}]}},
          {debug_line,322,123},
          {match,
              {322,5},
              {tuple,
                  {322,5},
                  [{atom,{322,6},'EXIT'},
                   {tuple,
                       {322,13},
                       [{atom,{322,14},badarg},{var,{322,21},'_'}]}]},
              {'catch',
                  {322,27},
                  {call,
                      {322,33},
                      {atom,{322,33},coverage_5},
                      [{block,0,
                           [{call,
                                {322,44},
                                {atom,{322,44},id},
                                [{integer,{322,47},42}]}]},
                       {block,0,
                           [{call,
                                {322,52},
                                {atom,{322,52},id},
                                [{integer,{322,55},42}]}]}]}}},
          {debug_line,324,124},
          {atom,{324,5},ok}]}]}.
{function,
    {326,1},
    coverage_1,0,
    [{clause,
         {326,1},
         [],
         [[{call,
               {326,1},
               {remote,
                   {326,1},
                   {atom,{326,1},fake},
                   {atom,{326,1},is_beam_bif_info}},
               []}]],
         [{debug_line,326,125},{atom,{326,1},ignore}]},
     {clause,
         {326,1},
         [],[],
         [{debug_line,327,126},
          {lc,{327,5},
              {block,0,
                  [{call,
                       {327,7},
                       {remote,
                           {327,17},
                           {op,{327,7},'bnot',{atom,{327,12},head}},
                           {atom,{327,18},bar}},
                       [{atom,{327,22},hdr},
                        {block,0,
                            [{'case',
                                 {327,27},
                                 {atom,{327,32},kind},
                                 [{clause,
                                      {328,31},
                                      [{nil,{328,31}}],
                                      [],
                                      [{debug_line,328,127},
                                       {atom,{328,37},whatever}]}]}]}]}]},
              [{block,0,[{debug_line,329,128},{atom,{329,40},true}]},
               {generate,{329,37},{integer,{329,35},7},{nil,{329,40}}}]}]}]}.
{function,
    {331,1},
    coverage_2,1,
    [{clause,
         {331,1},
         [{var,{331,1},'_'}],
         [[{call,
               {331,1},
               {remote,
                   {331,1},
                   {atom,{331,1},fake},
                   {atom,{331,1},is_beam_bif_info}},
               []}]],
         [{debug_line,331,129},{atom,{331,1},ignore}]},
     {clause,
         {331,1},
         [{var,{331,12},'Cmds'}],
         [],
         [{debug_line,332,130},
          {'fun',
              {332,5},
              {clauses,
                  [{clause,
                       {332,8},
                       [{tuple,{332,9},[{var,{332,10},'CollecFun'}]}],
                       [],
                       [{debug_line,333,131},
                        {cons,
                            {333,13},
                            {call,
                                {333,14},
                                {atom,{333,14},id},
                                [{integer,{333,17},42}]},
                            {cons,
                                {333,22},
                                {call,
                                    {333,22},
                                    {var,{333,22},'CollecFun'},
                                    [{var,{333,32},'Cmds'}]},
                                {nil,{333,37}}}}]}]}}]}]}.
{function,
    {336,1},
    coverage_3,2,
    [{clause,
         {336,1},
         [{var,{336,1},'_'},{var,{336,1},'_'}],
         [[{call,
               {336,1},
               {remote,
                   {336,1},
                   {atom,{336,1},fake},
                   {atom,{336,1},is_beam_bif_info}},
               []}]],
         [{debug_line,336,132},{atom,{336,1},ignore}]},
     {clause,
         {336,1},
         [{var,{336,12},'Node'},{var,{336,18},'Nodes'}],
         [],
         [{debug_line,337,133},
          {'try',
              {337,5},
              [{op,{337,18},
                   '+',
                   {call,{337,9},{atom,{337,9},id},[{var,{337,12},'Node'}]},
                   {integer,{337,20},1}}],
              [{clause,
                   {338,2},
                   [{var,{338,2},'_'}],
                   [],
                   [{debug_line,339,134},{atom,{339,13},ok}]}],
              [{clause,
                   {341,9},
                   [{tuple,
                        {341,9},
                        [{var,{341,9},'_'},
                         {var,{341,11},'Reason'},
                         {var,{341,11},'_'}]}],
                   [],
                   [{debug_line,342,135},
                    {call,
                        {342,6},
                        {atom,{342,6},coverage_3},
                        [{var,{342,17},'Nodes'},
                         {var,{342,24},'Node'},
                         {var,{342,30},'Reason'}]}]}],
              []}]}]}.
{function,
    {345,1},
    coverage_3,3,
    [{clause,
         {345,1},
         [{var,{345,1},'_'},{var,{345,1},'_'},{var,{345,1},'_'}],
         [[{call,
               {345,1},
               {remote,
                   {345,1},
                   {atom,{345,1},fake},
                   {atom,{345,1},is_beam_bif_info}},
               []}]],
         [{debug_line,345,136},{atom,{345,1},ignore}]},
     {clause,
         {345,1},
         [{var,{345,12},'A'},{var,{345,15},'B'},{var,{345,18},'C'}],
         [],
         [{debug_line,346,137},
          {call,
              {346,5},
              {atom,{346,5},id},
              [{block,0,
                   [{tuple,
                        {346,8},
                        [{var,{346,9},'A'},
                         {var,{346,11},'B'},
                         {var,{346,13},'C'}]}]}]}]}]}.
{function,
    {348,1},
    coverage_4,2,
    [{clause,
         {348,1},
         [{var,{348,1},'_'},{var,{348,1},'_'}],
         [[{call,
               {348,1},
               {remote,
                   {348,1},
                   {atom,{348,1},fake},
                   {atom,{348,1},is_beam_bif_info}},
               []}]],
         [{debug_line,348,138},{atom,{348,1},ignore}]},
     {clause,
         {348,1},
         [{var,{348,12},'A'},{var,{348,15},'B'}],
         [],
         [{debug_line,349,139},
          {op,{349,54},
              '=:=',
              {call,
                  {349,5},
                  {atom,{349,5},do_coverage_4},
                  [{atom,{349,19},ok},
                   {block,0,
                       [{map,
                            {349,34},
                            {op,{349,27},
                                'xor',
                                {atom,{349,24},ok},
                                {atom,{349,31},ok}},
                            [{map_field_exact,
                                 {349,39},
                                 {atom,{349,36},ok},
                                 {atom,{349,42},ok}}]}]},
                   {var,{349,47},'B'},
                   {atom,{349,50},ok}]},
              {var,{349,58},'A'}}]}]}.
{function,{351,1},
          do_coverage_4,4,
          [{clause,{351,1},
                   [{var,{351,1},'_'},
                    {var,{351,1},'_'},
                    {var,{351,1},'_'},
                    {var,{351,1},'_'}],
                   [[{call,{351,1},
                           {remote,{351,1},
                                   {atom,{351,1},fake},
                                   {atom,{351,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,351,140},{atom,{351,1},ignore}]},
           {clause,{351,1},
                   [{var,{351,15},'_'},
                    {var,{351,18},'_'},
                    {var,{351,21},'_'},
                    {var,{351,24},'_'}],
                   [],
                   [{debug_line,352,141},{atom,{352,5},ok}]}]}.
{function,
    {354,1},
    coverage_5,2,
    [{clause,
         {354,1},
         [{var,{354,1},'_'},{var,{354,1},'_'}],
         [[{call,
               {354,1},
               {remote,
                   {354,1},
                   {atom,{354,1},fake},
                   {atom,{354,1},is_beam_bif_info}},
               []}]],
         [{debug_line,354,142},{atom,{354,1},ignore}]},
     {clause,
         {354,1},
         [{var,{354,12},'B'},{var,{354,15},'A'}],
         [],
         [{debug_line,355,143},
          {call,
              {355,5},
              {remote,
                  {355,5},
                  {atom,{355,5},erlang},
                  {atom,{355,5},atom_to_binary}},
              [{block,0,
                   [{op,{355,29},
                        '==',
                        {op,{355,23},
                            'or',
                            {var,{355,21},'A'},
                            {var,{355,26},'A'}},
                        {var,{355,32},'A'}}]},
               {var,{355,35},'B'}]}]}]}.
{function,{361,1},
          id,1,
          [{clause,{361,1},
                   [{var,{361,1},'_'}],
                   [[{call,{361,1},
                           {remote,{361,1},
                                   {atom,{361,1},fake},
                                   {atom,{361,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,361,144},{atom,{361,1},ignore}]},
           {clause,{361,1},
                   [{var,{361,4},'I'}],
                   [],
                   [{debug_line,361,145},{var,{361,10},'I'}]}]}.
{eof,{362,1}}.
