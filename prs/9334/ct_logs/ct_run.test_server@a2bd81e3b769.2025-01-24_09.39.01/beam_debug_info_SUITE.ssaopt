module beam_debug_info_SUITE.
exports [{all,0},
         {call_in_call_args,1},
         {empty_module,1},
         {end_per_group,2},
         {end_per_suite,1},
         {fixed_bugs,1},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {missing_vars,1},
         {module_info,0},
         {module_info,1},
         {smoke,1},
         {suite,0}].
attributes [].

%% beam_debug_info_SUITE.erl:40
%% Counter = 6
function `beam_debug_info_SUITE`:`suite`() {
0:
  %% beam_debug_info_SUITE.erl:40
  %% Anno: #{alias => #{},literals => []}
  _2 = debug_line `1`

  %% beam_debug_info_SUITE.erl:40
  %% Anno: #{alias => #{},literals => []}
  _3 = debug_line `2`
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% beam_debug_info_SUITE.erl:42
%% Counter = 6
function `beam_debug_info_SUITE`:`all`() {
0:
  %% beam_debug_info_SUITE.erl:42
  %% Anno: #{alias => #{},literals => []}
  _2 = debug_line `3`

  %% beam_debug_info_SUITE.erl:43
  %% Anno: #{alias => #{},literals => []}
  _3 = debug_line `4`
  ret `[smoke,{group,p}]`
}

%% beam_debug_info_SUITE.erl:46
%% Counter = 9
function `beam_debug_info_SUITE`:`groups`() {
0:
  %% beam_debug_info_SUITE.erl:46
  %% Anno: #{alias => #{},literals => []}
  _3 = debug_line `5`

  %% beam_debug_info_SUITE.erl:47
  %% Anno: #{alias => #{},literals => []}
  _4 = debug_line `6`

  %% beam_debug_info_SUITE.erl:47
  _0 = call (`test_lib`:`parallel`/0)
  _8 = succeeded:body _0
  br _8, ^8, ^1

8:
  _2 = put_tuple `p`, _0, `[fixed_bugs,empty_module,call_in_call_args,missing_vars]`
  _5 = put_list _2, `[]`
  ret _5

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  ret _6
}

%% beam_debug_info_SUITE.erl:53
%% Counter = 12
function `beam_debug_info_SUITE`:`init_per_suite`(_0) {
0:
  %% beam_debug_info_SUITE.erl:53
  %% Anno: #{alias => #{},literals => []}
  _2 = debug_line `7`

  %% beam_debug_info_SUITE.erl:54
  %% Anno: #{alias => #{0 => ['Config']},literals => []}
  _3 = debug_line `8`

  %% beam_debug_info_SUITE.erl:54
  _4 = call (`id`/1), _0
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% beam_debug_info_SUITE.erl:55
  %% Anno: #{alias => #{0 => ['Config']},literals => []}
  _5 = debug_line `9`

  %% beam_debug_info_SUITE.erl:55
  _6 = call (`test_lib`:`recompile`/1), `beam_debug_info_SUITE`
  _11 = succeeded:body _6
  br _11, ^11, ^1

11:
  %% beam_debug_info_SUITE.erl:56
  %% Anno: #{alias => #{0 => ['Config']},literals => []}
  _7 = debug_line `10`
  ret _0

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  ret _8
}

%% beam_debug_info_SUITE.erl:58
%% Counter = 6
function `beam_debug_info_SUITE`:`end_per_suite`(_0) {
0:
  %% beam_debug_info_SUITE.erl:58
  %% Anno: #{alias => #{},literals => []}
  _2 = debug_line `11`

  %% beam_debug_info_SUITE.erl:59
  %% Anno: #{alias => #{0 => ['_Config']},literals => []}
  _3 = debug_line `12`
  ret `ok`
}

%% beam_debug_info_SUITE.erl:61
%% Counter = 8
function `beam_debug_info_SUITE`:`init_per_group`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:61
  %% Anno: #{alias => #{},literals => []}
  _4 = debug_line `13`

  %% beam_debug_info_SUITE.erl:62
  %% Anno: #{alias => #{0 => ['_GroupName'],1 => ['Config']},literals => []}
  _5 = debug_line `14`
  ret _1
}

%% beam_debug_info_SUITE.erl:64
%% Counter = 8
function `beam_debug_info_SUITE`:`end_per_group`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:64
  %% Anno: #{alias => #{},literals => []}
  _4 = debug_line `15`

  %% beam_debug_info_SUITE.erl:65
  %% Anno: #{alias => #{0 => ['_GroupName'],1 => ['Config']},literals => []}
  _5 = debug_line `16`
  ret _1
}

%% beam_debug_info_SUITE.erl:67
%% Counter = 47
function `beam_debug_info_SUITE`:`smoke`(_0) {
0:
  %% beam_debug_info_SUITE.erl:67
  %% Anno: #{alias => #{},literals => []}
  _14 = debug_line `17`

  %% beam_debug_info_SUITE.erl:68
  %% Anno: #{alias => #{0 => ['_Config']},literals => []}
  _15 = debug_line `18`

  %% beam_debug_info_SUITE.erl:68
  _10 = call (`test_server`:`start_peer`/3), `#{}`, `beam_debug_info_SUITE`, `smoke`
  _31 = succeeded:body _10
  br _31, ^31, ^1

31:
  _43 = bif:is_tuple _10
  br _43, ^43, ^33

43:
  _44 = bif:tuple_size _10
  _45 = bif:'=:=' _44, `3`
  br _45, ^42, ^33

42:
  _13 = get_tuple_element _10, `0`
  _12 = get_tuple_element _10, `1`
  _11 = get_tuple_element _10, `2`
  _41 = bif:'=:=' _13, `ok`
  br _41, ^40, ^33

40:
  %% beam_debug_info_SUITE.erl:70
  %% Anno: #{alias => #{0 => ['_Config'],11 => ['Node'],12 => ['Peer']},
             literals => []}
  _16 = debug_line `19`

  %% beam_debug_info_SUITE.erl:70
  TestBeams0 = call (`get_unique_beam_files`/0)
  _34 = succeeded:body TestBeams0
  br _34, ^34, ^1

34:
  %% beam_debug_info_SUITE.erl:71
  %% Anno: #{alias => #{0 => ['_Config'],11 => ['Node'],12 => ['Peer']},
             literals => []}
  _17 = debug_line `20`

  %% beam_debug_info_SUITE.erl:71
  _3 = call (`compiler_beams`/0)
  _35 = succeeded:body _3
  br _35, ^35, ^1

35:
  %% beam_debug_info_SUITE.erl:71
  TestBeams = call (`erlang`:`'++'`/2), _3, TestBeams0
  _36 = succeeded:body TestBeams
  br _36, ^36, ^1

36:
  %% beam_debug_info_SUITE.erl:73
  %% Anno: #{alias => #{0 => ['_Config'],11 => ['Node'],12 => ['Peer']},
             literals => []}
  _18 = debug_line `21`

  %% beam_debug_info_SUITE.erl:84
  %% Anno: #{alias => #{0 => ['_Config'],11 => ['Node'],12 => ['Peer']},
             literals =>
                 [{<<"Below, for each module, there is a list of functions with\nvariables missing in the BEAM debug info. Note that there\nwill probably never be possible to have all variables\npresent in the debug info, because some variables die before\na `debug_line` instruction is reached.\n\n** means that at least one of the missing variables is\n   significant (does not start with an underscore).\n">>,
                   'S'}]}
  _19 = debug_line `22`

  %% beam_debug_info_SUITE.erl:84
  _20 = call (`io`:`put_chars`/1), `<<"Below, for each module, there is a list of functions with\nvariables missing in the BEAM debug info. Note that there\nwill probably never be possible to have all variables\npresent in the debug info, because some variables die before\na `debug_line` instruction is reached.\n\n** means that at least one of the missing variables is\n   significant (does not start with an underscore).\n">>`
  _37 = succeeded:body _20
  br _37, ^37, ^1

37:
  %% beam_debug_info_SUITE.erl:86
  %% Anno: #{alias => #{0 => ['_Config'],11 => ['Node'],12 => ['Peer']},
             literals =>
                 [{<<"Below, for each module, there is a list of functions with\nvariables missing in the BEAM debug info. Note that there\nwill probably never be possible to have all variables\npresent in the debug info, because some variables die before\na `debug_line` instruction is reached.\n\n** means that at least one of the missing variables is\n   significant (does not start with an underscore).\n">>,
                   'S'}]}
  _21 = debug_line `23`
  _8 = make_fun (`'-smoke/1-fun-0-'`/2), _11

  %% beam_debug_info_SUITE.erl:86
  _24 = call (`test_lib`:`p_run`/2), _8, TestBeams
  _38 = succeeded:body _24
  br _38, ^38, ^1

38:
  %% beam_debug_info_SUITE.erl:90
  %% Anno: #{alias => #{0 => ['_Config'],11 => ['Node'],12 => ['Peer']},
             literals =>
                 [{<<"Below, for each module, there is a list of functions with\nvariables missing in the BEAM debug info. Note that there\nwill probably never be possible to have all variables\npresent in the debug info, because some variables die before\na `debug_line` instruction is reached.\n\n** means that at least one of the missing variables is\n   significant (does not start with an underscore).\n">>,
                   'S'}]}
  _25 = debug_line `25`

  %% beam_debug_info_SUITE.erl:90
  _26 = call (`peer`:`stop`/1), _12
  _39 = succeeded:body _26
  br _39, ^39, ^1

39:
  %% beam_debug_info_SUITE.erl:92
  %% Anno: #{alias => #{0 => ['_Config'],11 => ['Node'],12 => ['Peer']},
             literals =>
                 [{<<"Below, for each module, there is a list of functions with\nvariables missing in the BEAM debug info. Note that there\nwill probably never be possible to have all variables\npresent in the debug info, because some variables die before\na `debug_line` instruction is reached.\n\n** means that at least one of the missing variables is\n   significant (does not start with an underscore).\n">>,
                   'S'}]}
  _27 = debug_line `26`
  ret `ok`

33:
  %% beam_debug_info_SUITE.erl:68
  _28 = match_fail `badmatch`, _10
  _46 = succeeded:body _28
  br _46, ^46, ^1

46:
  ret _28

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  ret _29
}

%% beam_debug_info_SUITE.erl:95
%% Counter = 11
function `beam_debug_info_SUITE`:`compiler_beams`() {
0:
  %% beam_debug_info_SUITE.erl:95
  %% Anno: #{alias => #{},literals => []}
  _3 = debug_line `27`

  %% beam_debug_info_SUITE.erl:96
  %% Anno: #{alias => #{},literals => []}
  _4 = debug_line `28`

  %% beam_debug_info_SUITE.erl:96
  _0 = call (`code`:`lib_dir`/1), `compiler`
  _8 = succeeded:body _0
  br _8, ^8, ^1

8:
  _2 = put_list _0, `["ebin","*.beam"]`

  %% beam_debug_info_SUITE.erl:96
  _1 = call (`filename`:`join`/1), _2
  _9 = succeeded:body _1
  br _9, ^9, ^1

9:
  %% beam_debug_info_SUITE.erl:96
  _5 = call (`filelib`:`wildcard`/1), _1
  _10 = succeeded:body _5
  br _10, ^10, ^1

10:
  ret _5

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  ret _6
}

%% beam_debug_info_SUITE.erl:98
%% Counter = 320
function `beam_debug_info_SUITE`:`do_smoke`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:98
  %% Anno: #{alias => #{},literals => []}
  _117 = debug_line `29`

  %% beam_debug_info_SUITE.erl:99
  %% Anno: #{alias => #{0 => ['Beam'],1 => ['Node']},literals => []}
  _118 = debug_line `30`
  _197 = new_try_tag `'try'`
  br _197, ^196, ^194

196:
  %% beam_debug_info_SUITE.erl:100
  %% Anno: #{alias => #{0 => ['Beam'],1 => ['Node']},literals => []}
  _120 = debug_line `31`

  %% beam_debug_info_SUITE.erl:101
  %% Anno: #{alias => #{0 => ['Beam'],1 => ['Node']},literals => []}
  _121 = debug_line `32`

  %% beam_debug_info_SUITE.erl:101
  _47 = call (`beam_lib`:`chunks`/2), _0, `[abstract_code]`
  _198 = succeeded:body _47
  br _198, ^198, ^194

198:
  _297 = bif:is_tuple _47
  br _297, ^297, ^200

297:
  _298 = bif:tuple_size _47
  _299 = bif:'=:=' _298, `2`
  br _299, ^296, ^200

296:
  _49 = get_tuple_element _47, `0`
  _48 = get_tuple_element _47, `1`
  _295 = bif:'=:=' _49, `ok`
  br _295, ^294, ^200

294:
  _291 = bif:is_tuple _48
  br _291, ^291, ^200

291:
  _292 = bif:tuple_size _48
  _293 = bif:'=:=' _292, `2`
  br _293, ^290, ^200

290:
  _51 = get_tuple_element _48, `0`
  _50 = get_tuple_element _48, `1`
  _289 = is_nonempty_list _50
  br _289, ^289, ^200

289:
  _53 = get_hd _50
  _52 = get_tl _50
  _286 = bif:is_tuple _53
  br _286, ^286, ^200

286:
  _287 = bif:tuple_size _53
  _288 = bif:'=:=' _287, `2`
  br _288, ^285, ^200

285:
  _55 = get_tuple_element _53, `0`
  _54 = get_tuple_element _53, `1`
  _284 = bif:'=:=' _55, `abstract_code`
  br _284, ^283, ^200

283:
  _280 = bif:is_tuple _54
  br _280, ^280, ^200

280:
  _281 = bif:tuple_size _54
  _282 = bif:'=:=' _281, `2`
  br _282, ^279, ^200

279:
  _57 = get_tuple_element _54, `0`
  _56 = get_tuple_element _54, `1`
  _278 = bif:'=:=' _57, `raw_abstract_v1`
  br _278, ^277, ^200

277:
  _276 = bif:'=:=' _52, `[]`
  br _276, ^276, ^200

276:
  %% beam_debug_info_SUITE.erl:106
  %% Anno: #{alias =>
                 #{0 => ['Beam'],1 => ['Node'],51 => ['Mod'],56 => ['Abstr0']},
             literals => []}
  _123 = debug_line `33`

  %% beam_debug_info_SUITE.erl:107
  %% Anno: #{alias =>
                 #{0 => ['Beam'],1 => ['Node'],51 => ['Mod'],56 => ['Abstr0']},
             literals => []}
  _124 = debug_line `34`

  %% beam_debug_info_SUITE.erl:106
  _58 = call (`compile`:`forms`/2), _56, `[beam_debug_info,binary,report_errors]`
  _201 = succeeded:body _58
  br _201, ^201, ^194

201:
  _272 = bif:is_tuple _58
  br _272, ^272, ^203

272:
  _273 = bif:tuple_size _58
  _274 = bif:'=:=' _273, `3`
  br _274, ^271, ^203

271:
  _61 = get_tuple_element _58, `0`
  _60 = get_tuple_element _58, `1`
  _59 = get_tuple_element _58, `2`
  _270 = bif:'=:=' _61, `ok`
  br _270, ^269, ^203

269:
  _204 = bif:'=:=' _60, _51
  br _204, ^204, ^203

204:
  %% beam_debug_info_SUITE.erl:108
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")"},
             literals => []}
  _126 = debug_line `35`

  %% beam_debug_info_SUITE.erl:109
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")"},
             literals => []}
  _127 = debug_line `36`

  %% beam_debug_info_SUITE.erl:108
  _62 = call (`compile`:`forms`/2), _56, `[beam_debug_info,dexp,binary,report_errors]`
  _205 = succeeded:body _62
  br _205, ^205, ^194

205:
  _265 = bif:is_tuple _62
  br _265, ^265, ^207

265:
  _266 = bif:tuple_size _62
  _267 = bif:'=:=' _266, `3`
  br _267, ^264, ^207

264:
  _65 = get_tuple_element _62, `0`
  _63 = get_tuple_element _62, `2`
  _263 = bif:'=:=' _65, `ok`
  br _263, ^262, ^207

262:
  %% beam_debug_info_SUITE.erl:110
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*"},
             literals => []}
  _129 = debug_line `37`

  %% beam_debug_info_SUITE.erl:110
  SrcVars = call (`source_variables`/1), _63
  _208 = succeeded:body SrcVars
  br _208, ^208, ^194

208:
  %% beam_debug_info_SUITE.erl:111
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*"},
             literals => []}
  _130 = debug_line `38`

  %% beam_debug_info_SUITE.erl:111
  IndexToFunctionMap = call (`abstr_debug_lines`/1), _63
  _209 = succeeded:body IndexToFunctionMap
  br _209, ^209, ^194

209:
  %% beam_debug_info_SUITE.erl:114
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*"},
             literals => []}
  _131 = debug_line `39`

  %% beam_debug_info_SUITE.erl:114
  _66 = call (`get_debug_info`/2), _51, _59
  _210 = succeeded:body _66
  br _210, ^210, ^194

210:
  _258 = bif:is_tuple _66
  br _258, ^258, ^212

258:
  _259 = bif:tuple_size _66
  _260 = bif:'=:=' _259, `2`
  br _260, ^257, ^212

257:
  _68 = get_tuple_element _66, `0`
  _67 = get_tuple_element _66, `1`

  %% beam_debug_info_SUITE.erl:115
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _133 = debug_line `40`

  %% beam_debug_info_SUITE.erl:115
  _8 = call (`load_get_debug_info`/3), _1, _51, _59
  _213 = succeeded:body _8
  br _213, ^213, ^194

213:
  %% beam_debug_info_SUITE.erl:115
  DebugInfoBif = call (`lists`:`sort`/1), _8
  _214 = succeeded:body DebugInfoBif
  br _214, ^214, ^194

214:
  %% beam_debug_info_SUITE.erl:116
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _134 = debug_line `41`

  %% beam_debug_info_SUITE.erl:116
  CookedDebugInfoSorted = call (`lists`:`sort`/1), _67
  _215 = succeeded:body CookedDebugInfoSorted
  br _215, ^215, ^194

215:
  %% beam_debug_info_SUITE.erl:118
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _135 = debug_line `42`
  _218 = bif:'=:=' CookedDebugInfoSorted, DebugInfoBif
  br _218, ^218, ^217

218:
  %% beam_debug_info_SUITE.erl:120
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _136 = debug_line `43`
  br ^216

217:
  %% beam_debug_info_SUITE.erl:122
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _137 = debug_line `44`

  %% beam_debug_info_SUITE.erl:123
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _138 = debug_line `45`

  %% beam_debug_info_SUITE.erl:122
  Z0 = call (`lists`:`zip`/3), CookedDebugInfoSorted, DebugInfoBif, `{pad,{short,short}}`
  _219 = succeeded:body Z0
  br _219, ^219, ^194

219:
  %% beam_debug_info_SUITE.erl:124
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _139 = debug_line `46`
  _14 = make_fun (`'-do_smoke/2-fun-0-'`/1)

  %% beam_debug_info_SUITE.erl:124
  Z = call (`lists`:`dropwhile`/2), _14, Z0
  _220 = succeeded:body Z
  br _220, ^220, ^194

220:
  %% beam_debug_info_SUITE.erl:125
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _142 = debug_line `47`
  _71 = put_list Z, `[]`

  %% beam_debug_info_SUITE.erl:125
  _143 = call (`io`:`format`/2), `"~p\n"`, _71
  _221 = succeeded:body _143
  br _221, ^221, ^194

221:
  %% beam_debug_info_SUITE.erl:126
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _144 = debug_line `48`
  _72 = put_list CookedDebugInfoSorted, `[]`

  %% beam_debug_info_SUITE.erl:126
  _145 = call (`io`:`format`/2), `"~p\n"`, _72
  _222 = succeeded:body _145
  br _222, ^222, ^194

222:
  %% beam_debug_info_SUITE.erl:127
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _146 = debug_line `49`
  _73 = put_list DebugInfoBif, `[]`

  %% beam_debug_info_SUITE.erl:127
  _147 = call (`io`:`format`/2), `"~p\n"`, _73
  _223 = succeeded:body _147
  br _223, ^223, ^194

223:
  %% beam_debug_info_SUITE.erl:129
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _148 = debug_line `50`

  %% beam_debug_info_SUITE.erl:129
  _149 = call (`erlang`:`error`/1), `inconsistent_debug_info`
  _224 = succeeded:body _149
  br _224, ^224, ^194

224:
  br ^216

216:
  %% beam_debug_info_SUITE.erl:132
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _150 = debug_line `51`
  _234 = bif:'=:=' _51, `beam_debug_info_SUITE`
  br _234, ^233, ^226

233:
  %% beam_debug_info_SUITE.erl:135
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _151 = debug_line `52`

  %% beam_debug_info_SUITE.erl:135
  _16 = call (`code`:`get_debug_info`/1), _51
  _227 = succeeded:body _16
  br _227, ^227, ^194

227:
  %% beam_debug_info_SUITE.erl:135
  _43 = call (`lists`:`sort`/1), _16
  _228 = succeeded:body _43
  br _228, ^228, ^194

228:
  _231 = bif:'=:=' _43, CookedDebugInfoSorted
  br _231, ^231, ^230

231:
  br ^229

230:
  %% beam_debug_info_SUITE.erl:135
  _152 = match_fail `badmatch`, _43
  _232 = succeeded:body _152
  br _232, ^232, ^194

232:
  br ^229

229:
  br ^225

226:
  %% beam_debug_info_SUITE.erl:137
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => [45,'Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _153 = debug_line `53`
  br ^225

225:
  %% beam_debug_info_SUITE.erl:140
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo']},
             literals => []}
  _154 = debug_line `54`

  %% beam_debug_info_SUITE.erl:140
  _74 = call (`debug_info_vars`/2), _68, IndexToFunctionMap
  _235 = succeeded:body _74
  br _235, ^235, ^194

235:
  _253 = bif:is_tuple _74
  br _253, ^253, ^237

253:
  _254 = bif:tuple_size _74
  _255 = bif:'=:=' _254, `2`
  br _255, ^252, ^237

252:
  _76 = get_tuple_element _74, `0`
  _75 = get_tuple_element _74, `1`

  %% beam_debug_info_SUITE.erl:160
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars']},
             literals => []}
  _156 = debug_line `55`

  %% beam_debug_info_SUITE.erl:160
  _77 = call (`family_difference`/2), _76, SrcVars
  _238 = succeeded:body _77
  br _238, ^238, ^194

238:
  _250 = bif:'=:=' _77, `[]`
  br _250, ^250, ^240

250:
  %% beam_debug_info_SUITE.erl:164
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars']},
             literals => []}
  _158 = debug_line `56`

  %% beam_debug_info_SUITE.erl:164
  AllDbg = call (`family_union`/2), _76, _75
  _241 = succeeded:body AllDbg
  br _241, ^241, ^194

241:
  %% beam_debug_info_SUITE.erl:165
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars']},
             literals => []}
  _159 = debug_line `57`

  %% beam_debug_info_SUITE.erl:165
  Diff0 = call (`family_difference`/2), SrcVars, AllDbg
  _242 = succeeded:body Diff0
  br _242, ^242, ^194

242:
  %% beam_debug_info_SUITE.erl:166
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars']},
             literals => []}
  _160 = debug_line `58`

  %% beam_debug_info_SUITE.erl:173
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars']},
             literals => []}
  _161 = debug_line `64`
  br ^247

247:
  %% beam_debug_info_SUITE.erl:173
  _174 = call (`'-do_smoke/2-lc$^1/1-1-'`/1), Diff0
  _245 = succeeded:body _174
  br _245, ^245, ^194

245:
  br ^243

243:
  _33 = phi { _174, ^245 }

  %% beam_debug_info_SUITE.erl:174
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   33 => ['Diff'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars']},
             literals => [{true,78}]}
  _176 = debug_line `65`
  _98 = put_list _33, `[]`
  _99 = put_list _51, _98

  %% beam_debug_info_SUITE.erl:174
  _177 = call (`io`:`format`/2), `"~p:\n~ts"`, _99
  _249 = succeeded:body _177
  br _249, ^249, ^194

249:
  br ^239

240:
  %% beam_debug_info_SUITE.erl:160
  _178 = match_fail `badmatch`, _77
  _251 = succeeded:body _178
  br _251, ^251, ^194

251:
  br ^239

239:
  _157 = phi { _177, ^249 }, { _178, ^251 }
  br ^236

237:
  %% beam_debug_info_SUITE.erl:140
  _179 = match_fail `badmatch`, _74
  _256 = succeeded:body _179
  br _256, ^256, ^194

256:
  br ^236

236:
  _155 = phi { _157, ^239 }, { _179, ^256 }
  br ^211

212:
  %% beam_debug_info_SUITE.erl:114
  _180 = match_fail `badmatch`, _66
  _261 = succeeded:body _180
  br _261, ^261, ^194

261:
  br ^211

211:
  _132 = phi { _155, ^236 }, { _180, ^261 }
  br ^206

207:
  %% beam_debug_info_SUITE.erl:108
  _181 = match_fail `badmatch`, _62
  _268 = succeeded:body _181
  br _268, ^268, ^194

268:
  br ^206

206:
  _128 = phi { _132, ^211 }, { _181, ^268 }
  br ^202

203:
  %% beam_debug_info_SUITE.erl:106
  _182 = match_fail `badmatch`, _58
  _275 = succeeded:body _182
  br _275, ^275, ^194

275:
  br ^202

202:
  _125 = phi { _128, ^206 }, { _182, ^275 }
  br ^199

200:
  %% beam_debug_info_SUITE.erl:100
  _183 = match_fail `badmatch`, _47
  _300 = succeeded:body _183
  br _300, ^300, ^194

300:
  br ^199

199:
  _122 = phi { _125, ^202 }, { _183, ^300 }
  br ^193

193:
  _35 = phi { _122, ^199 }
  _319 = kill_try_tag _197
  ret _35

194:
  _317 = landingpad `'try'`, _197
  _38 = extract _317, `0`
  _37 = extract _317, `1`
  _36 = extract _317, `2`
  _318 = kill_try_tag _197
  _100 = put_tuple _38, _37, _36
  _314 = bif:is_tuple _100
  br _314, ^314, ^1

314:
  _315 = bif:tuple_size _100
  _316 = bif:'=:=' _315, `3`
  br _316, ^313, ^1

313:
  _108 = get_tuple_element _100, `0`
  _107 = get_tuple_element _100, `1`
  _106 = get_tuple_element _100, `2`
  _311 = bif:'=:=' _108, `throw`
  br _311, ^310, ^302

310:
  _307 = bif:is_tuple _107
  br _307, ^307, ^302

307:
  _308 = bif:tuple_size _107
  _309 = bif:'=:=' _308, `2`
  br _309, ^306, ^302

306:
  _114 = get_tuple_element _107, `0`
  _113 = get_tuple_element _107, `1`
  _305 = bif:'=:=' _114, `error`
  br _305, ^304, ^302

304:
  %% beam_debug_info_SUITE.erl:177
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   106 => ".",
                   113 => [105,'Error']},
             literals => []}
  _184 = debug_line `66`

  %% beam_debug_info_SUITE.erl:178
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   106 => ".",
                   113 => [105,'Error']},
             literals => []}
  _185 = debug_line `67`
  _115 = put_list _0, `[]`
  _116 = put_list _113, _115

  %% beam_debug_info_SUITE.erl:177
  _186 = call (`io`:`format`/2), `"*** compilation failure '~p' for file ~s\n"`, _116
  _303 = succeeded:body _186
  br _303, ^303, ^1

303:
  %% beam_debug_info_SUITE.erl:179
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   106 => ".",
                   113 => [105,'Error']},
             literals => []}
  _187 = debug_line `68`
  ret `error`

302:
  Stk = build_stacktrace _106

  %% beam_debug_info_SUITE.erl:181
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   106 => "&h",
                   107 => ['Error'],
                   108 => ['Class']},
             literals => []}
  _188 = debug_line `69`
  _109 = put_list Stk, `[]`
  _110 = put_list _107, _109
  _111 = put_list _108, _110
  _112 = put_list _0, _111

  %% beam_debug_info_SUITE.erl:181
  _189 = call (`io`:`format`/2), `"~p: ~p ~p\n~p\n"`, _112
  _312 = succeeded:body _189
  br _312, ^312, ^1

312:
  %% beam_debug_info_SUITE.erl:182
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   106 => "&h",
                   107 => ['Error'],
                   108 => ['Class']},
             literals => []}
  _190 = debug_line `70`
  ret `error`

1:
  _191 = call (`erlang`:`error`/1), `badarg`
  ret _191
}

%% beam_debug_info_SUITE.erl:185
%% Counter = 52
function `beam_debug_info_SUITE`:`format_vars`(_0) {
0:
  %% beam_debug_info_SUITE.erl:185
  %% Anno: #{alias => #{},literals => []}
  _30 = debug_line `71`

  %% beam_debug_info_SUITE.erl:186
  %% Anno: #{alias => #{0 => ['Vs']},literals => []}
  _31 = debug_line `72`
  br ^48

48:
  %% beam_debug_info_SUITE.erl:186
  _34 = call (`'-format_vars/1-lc$^0/1-0-'`/1), _0
  _46 = succeeded:body _34
  br _46, ^46, ^1

46:
  br ^44

44:
  _8 = phi { _34, ^46 }

  %% beam_debug_info_SUITE.erl:186
  Str = call (`lists`:`join`/2), `", "`, _8
  _50 = succeeded:body Str
  br _50, ^50, ^1

50:
  %% beam_debug_info_SUITE.erl:187
  %% Anno: #{alias => #{0 => ['Vs']},literals => [{true,18}]}
  _36 = debug_line `73`
  _13 = make_fun (`'-format_vars/1-fun-1-'`/1)

  %% beam_debug_info_SUITE.erl:187
  B = call (`lists`:`all`/2), _13, _0
  _51 = succeeded:body B
  br _51, ^51, ^1

51:
  %% beam_debug_info_SUITE.erl:193
  %% Anno: #{alias => #{0 => ['Vs']},literals => [{true,18}]}
  _40 = debug_line `77`
  _41 = put_tuple Str, B
  ret _41

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  ret _42
}

%% beam_debug_info_SUITE.erl:195
%% Counter = 29
function `beam_debug_info_SUITE`:`debug_info_vars`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:195
  %% Anno: #{alias => #{},literals => []}
  _10 = debug_line `78`

  %% beam_debug_info_SUITE.erl:196
  %% Anno: #{alias => #{0 => ['DebugInfo'],1 => ['IndexToFunctionMap']},
             literals => []}
  _11 = debug_line `79`

  %% beam_debug_info_SUITE.erl:196
  _7 = call (`debug_info_vars_1`/4), _0, _1, `[]`, `[]`
  _19 = succeeded:body _7
  br _19, ^19, ^1

19:
  _25 = bif:is_tuple _7
  br _25, ^25, ^21

25:
  _26 = bif:tuple_size _7
  _27 = bif:'=:=' _26, `2`
  br _27, ^24, ^21

24:
  _9 = get_tuple_element _7, `0`
  _8 = get_tuple_element _7, `1`

  %% beam_debug_info_SUITE.erl:197
  %% Anno: #{alias =>
                 #{0 => ['DebugInfo'],
                   1 => ['IndexToFunctionMap'],
                   8 => ['Literals0'],
                   9 => ['Vars0']},
             literals => []}
  _12 = debug_line `80`

  %% beam_debug_info_SUITE.erl:197
  Vars = call (`family_union`/1), _9
  _22 = succeeded:body Vars
  br _22, ^22, ^1

22:
  %% beam_debug_info_SUITE.erl:198
  %% Anno: #{alias =>
                 #{0 => ['DebugInfo'],
                   1 => ['IndexToFunctionMap'],
                   8 => ['Literals0'],
                   9 => ['Vars0']},
             literals => []}
  _13 = debug_line `81`

  %% beam_debug_info_SUITE.erl:198
  Literals = call (`family_union`/1), _8
  _23 = succeeded:body Literals
  br _23, ^23, ^1

23:
  %% beam_debug_info_SUITE.erl:199
  %% Anno: #{alias =>
                 #{0 => ['DebugInfo'],
                   1 => ['IndexToFunctionMap'],
                   8 => ['Literals0'],
                   9 => ['Vars0']},
             literals => []}
  _14 = debug_line `82`
  _15 = put_tuple Vars, Literals
  ret _15

21:
  %% beam_debug_info_SUITE.erl:196
  _16 = match_fail `badmatch`, _7
  _28 = succeeded:body _16
  br _28, ^28, ^1

28:
  ret _16

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  ret _17
}

%% beam_debug_info_SUITE.erl:201
%% Counter = 68
function `beam_debug_info_SUITE`:`debug_info_vars_1`(_0, _1, _2, _3) {
0:
  %% beam_debug_info_SUITE.erl:201
  %% Anno: #{alias => #{},literals => []}
  _26 = debug_line `83`
  _65 = is_nonempty_list _0
  br _65, ^65, ^42

65:
  _14 = get_hd _0
  _13 = get_tl _0
  _62 = bif:is_tuple _14
  br _62, ^62, ^41

62:
  _63 = bif:tuple_size _14
  _64 = bif:'=:=' _63, `2`
  br _64, ^61, ^41

61:
  _16 = get_tuple_element _14, `0`
  _15 = get_tuple_element _14, `1`
  _58 = bif:is_tuple _15
  br _58, ^58, ^41

58:
  _59 = bif:tuple_size _15
  _60 = bif:'=:=' _59, `2`
  br _60, ^57, ^41

57:
  _18 = get_tuple_element _15, `0`
  _17 = get_tuple_element _15, `1`

  %% beam_debug_info_SUITE.erl:202
  %% Anno: #{alias =>
                 #{1 => ['IndexToFunctionMap'],
                   2 => [12,'VarAcc'],
                   3 => [11,'LitAcc'],
                   13 => ['T'],
                   16 => ['I'],
                   17 => ['List'],
                   18 => ['_FrameSize']},
             literals => []}
  _29 = debug_line `84`

  %% beam_debug_info_SUITE.erl:202
  _19 = call (`debug_info_vars_2`/3), _17, `[]`, `[]`
  _43 = succeeded:body _19
  br _43, ^43, ^1

43:
  _53 = bif:is_tuple _19
  br _53, ^53, ^45

53:
  _54 = bif:tuple_size _19
  _55 = bif:'=:=' _54, `2`
  br _55, ^52, ^45

52:
  _21 = get_tuple_element _19, `0`
  _20 = get_tuple_element _19, `1`
  _49 = bif:'=:=' _21, `[]`
  br _49, ^49, ^46

49:
  _48 = bif:'=:=' _20, `[]`
  br _48, ^48, ^46

48:
  %% beam_debug_info_SUITE.erl:204
  %% Anno: #{alias =>
                 #{1 => ['IndexToFunctionMap'],
                   2 => [12,'VarAcc'],
                   3 => [11,'LitAcc'],
                   13 => ['T'],
                   16 => ['I'],
                   17 => ['List'],
                   18 => ['_FrameSize']},
             literals => []}
  _30 = debug_line `85`

  %% beam_debug_info_SUITE.erl:204
  _31 = call (`debug_info_vars_1`/4), _13, _1, _2, _3
  _47 = succeeded:body _31
  br _47, ^47, ^1

47:
  ret _31

46:
  %% beam_debug_info_SUITE.erl:206
  %% Anno: #{alias =>
                 #{1 => ['IndexToFunctionMap'],
                   2 => [12,'VarAcc'],
                   3 => [11,'LitAcc'],
                   13 => ['T'],
                   16 => ['I'],
                   17 => ['List'],
                   18 => ['_FrameSize'],
                   20 => ['Literals'],
                   21 => ['Vars']},
             literals => []}
  _32 = debug_line `86`

  %% beam_debug_info_SUITE.erl:206
  F = bif:map_get _16, _1
  _50 = succeeded:body F
  br _50, ^50, ^1

50:
  %% beam_debug_info_SUITE.erl:207
  %% Anno: #{alias =>
                 #{1 => ['IndexToFunctionMap'],
                   2 => [12,'VarAcc'],
                   3 => [11,'LitAcc'],
                   13 => ['T'],
                   16 => ['I'],
                   17 => ['List'],
                   18 => ['_FrameSize'],
                   20 => ['Literals'],
                   21 => ['Vars']},
             literals => []}
  _33 = debug_line `87`

  %% beam_debug_info_SUITE.erl:208
  %% Anno: #{alias =>
                 #{1 => ['IndexToFunctionMap'],
                   2 => [12,'VarAcc'],
                   3 => [11,'LitAcc'],
                   13 => ['T'],
                   16 => ['I'],
                   17 => ['List'],
                   18 => ['_FrameSize'],
                   20 => ['Literals'],
                   21 => ['Vars']},
             literals => []}
  _34 = debug_line `88`
  _24 = put_tuple F, _21
  _25 = put_list _24, _2
  _22 = put_tuple F, _20
  _23 = put_list _22, _3

  %% beam_debug_info_SUITE.erl:207
  _35 = call (`debug_info_vars_1`/4), _13, _1, _25, _23
  _51 = succeeded:body _35
  br _51, ^51, ^1

51:
  ret _35

45:
  %% beam_debug_info_SUITE.erl:202
  _36 = match_fail `case_clause`, _19
  _56 = succeeded:body _36
  br _56, ^56, ^1

56:
  ret _36

42:
  _66 = bif:'=:=' _0, `[]`
  br _66, ^66, ^41

66:
  %% beam_debug_info_SUITE.erl:211
  %% Anno: #{alias => #{1 => "\n",2 => ['VarAcc'],3 => ['LitAcc']},
             literals => []}
  _27 = debug_line `89`
  _28 = put_tuple _2, _3
  ret _28

41:
  %% beam_debug_info_SUITE.erl:201
  %% Anno: #{inlined => {'-inlined-debug_info_vars_1/4-',4}}
  _37 = match_fail `function_clause`, _0, _1, _2, _3
  _67 = succeeded:body _37
  br _67, ^67, ^1

67:
  ret _37

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  ret _38
}

%% beam_debug_info_SUITE.erl:213
%% Counter = 71
function `beam_debug_info_SUITE`:`debug_info_vars_2`(_0, _1, _2) {
0:
  %% beam_debug_info_SUITE.erl:213
  %% Anno: #{alias => #{},literals => []}
  _26 = debug_line `90`
  _68 = is_nonempty_list _0
  br _68, ^68, ^45

68:
  _17 = get_hd _0
  _16 = get_tl _0
  _65 = bif:is_tuple _17
  br _65, ^65, ^44

65:
  _66 = bif:tuple_size _17
  _67 = bif:'=:=' _66, `2`
  br _67, ^64, ^44

64:
  _19 = get_tuple_element _17, `0`
  _18 = get_tuple_element _17, `1`
  _47 = bif:is_integer _19
  br _47, ^47, ^46

47:
  %% beam_debug_info_SUITE.erl:214
  %% Anno: #{alias =>
                 #{1 => [14,'VarAcc'],
                   2 => [13,'LitAcc'],
                   16 => [15,'T'],
                   18 => ['_Value'],
                   19 => ['Name']},
             literals => []}
  _38 = debug_line `91`

  %% beam_debug_info_SUITE.erl:214
  _39 = call (`debug_info_vars_2`/3), _16, _1, _2
  _48 = succeeded:body _39
  br _48, ^48, ^1

48:
  ret _39

46:
  _49 = bif:is_binary _19
  br _49, ^49, ^44

49:
  %% beam_debug_info_SUITE.erl:216
  %% Anno: #{alias =>
                 #{1 => [12,'VarAcc'],
                   2 => [11,'LitAcc'],
                   16 => ['T'],
                   18 => ['Value'],
                   19 => ['Name0']},
             literals => []}
  _29 = debug_line `92`

  %% beam_debug_info_SUITE.erl:216
  _20 = call (`erlang`:`binary_to_atom`/1), _19
  _50 = succeeded:body _20
  br _50, ^50, ^1

50:
  %% beam_debug_info_SUITE.erl:217
  %% Anno: #{alias =>
                 #{1 => [12,'VarAcc'],
                   2 => [11,'LitAcc'],
                   16 => ['T'],
                   18 => ['Value'],
                   19 => ['Name0'],
                   20 => ['Name']},
             literals => []}
  _30 = debug_line `93`
  _60 = bif:is_tuple _18
  br _60, ^60, ^52

60:
  _61 = bif:tuple_size _18
  _62 = bif:'=:=' _61, `2`
  br _62, ^59, ^52

59:
  _22 = get_tuple_element _18, `0`
  switch _22, ^52, [
    { `value`, ^58 },
    { `x`, ^56 },
    { `y`, ^57 }
  ]

57:
  %% beam_debug_info_SUITE.erl:219
  %% Anno: #{alias =>
                 #{1 => [12,'VarAcc'],
                   2 => [11,'LitAcc'],
                   16 => ['T'],
                   18 => ['Value'],
                   19 => ['Name0'],
                   20 => ['Name'],
                   21 => "\t"},
             literals => []}
  _33 = debug_line `95`
  _24 = put_list _20, _1

  %% beam_debug_info_SUITE.erl:219
  _34 = call (`debug_info_vars_2`/3), _16, _24, _2
  _54 = succeeded:body _34
  br _54, ^54, ^1

54:
  ret _34

56:
  %% beam_debug_info_SUITE.erl:218
  %% Anno: #{alias =>
                 #{1 => [12,'VarAcc'],
                   2 => [11,'LitAcc'],
                   16 => ['T'],
                   18 => ['Value'],
                   19 => ['Name0'],
                   20 => ['Name'],
                   21 => "\b"},
             literals => []}
  _35 = debug_line `94`
  _23 = put_list _20, _1

  %% beam_debug_info_SUITE.erl:218
  _36 = call (`debug_info_vars_2`/3), _16, _23, _2
  _53 = succeeded:body _36
  br _53, ^53, ^1

53:
  ret _36

58:
  %% beam_debug_info_SUITE.erl:220
  %% Anno: #{alias =>
                 #{1 => [12,'VarAcc'],
                   2 => [11,'LitAcc'],
                   16 => ['T'],
                   18 => ['Value'],
                   19 => ['Name0'],
                   20 => ['Name'],
                   21 => "\n"},
             literals => []}
  _31 = debug_line `96`
  _25 = put_list _20, _2

  %% beam_debug_info_SUITE.erl:220
  _32 = call (`debug_info_vars_2`/3), _16, _1, _25
  _55 = succeeded:body _32
  br _55, ^55, ^1

55:
  ret _32

52:
  %% beam_debug_info_SUITE.erl:217
  _37 = match_fail `case_clause`, _18
  _63 = succeeded:body _37
  br _63, ^63, ^1

63:
  ret _37

45:
  _69 = bif:'=:=' _0, `[]`
  br _69, ^69, ^44

69:
  %% beam_debug_info_SUITE.erl:223
  %% Anno: #{alias => #{1 => ['VarAcc'],2 => ['LitAcc']},literals => []}
  _27 = debug_line `97`
  _28 = put_tuple _1, _2
  ret _28

44:
  %% beam_debug_info_SUITE.erl:213
  %% Anno: #{inlined => {'-inlined-debug_info_vars_2/3-',3}}
  _40 = match_fail `function_clause`, _0, _1, _2
  _70 = succeeded:body _40
  br _70, ^70, ^1

70:
  ret _40

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  ret _41
}

%% beam_debug_info_SUITE.erl:225
%% Counter = 17
function `beam_debug_info_SUITE`:`family_union`(_0) {
0:
  %% beam_debug_info_SUITE.erl:225
  %% Anno: #{alias => #{},literals => []}
  _5 = debug_line `98`

  %% beam_debug_info_SUITE.erl:226
  %% Anno: #{alias => #{0 => ['S0']},literals => []}
  _6 = debug_line `99`

  %% beam_debug_info_SUITE.erl:226
  S1 = call (`sofs`:`relation`/2), _0, `[{function,[variable]}]`
  _13 = succeeded:body S1
  br _13, ^13, ^1

13:
  %% beam_debug_info_SUITE.erl:227
  %% Anno: #{alias => #{0 => ['S0']},literals => []}
  _7 = debug_line `100`

  %% beam_debug_info_SUITE.erl:227
  S2 = call (`sofs`:`relation_to_family`/1), S1
  _14 = succeeded:body S2
  br _14, ^14, ^1

14:
  %% beam_debug_info_SUITE.erl:228
  %% Anno: #{alias => #{0 => ['S0']},literals => []}
  _8 = debug_line `101`

  %% beam_debug_info_SUITE.erl:228
  S3 = call (`sofs`:`family_union`/1), S2
  _15 = succeeded:body S3
  br _15, ^15, ^1

15:
  %% beam_debug_info_SUITE.erl:229
  %% Anno: #{alias => #{0 => ['S0']},literals => []}
  _9 = debug_line `102`

  %% beam_debug_info_SUITE.erl:229
  _10 = call (`sofs`:`to_external`/1), S3
  _16 = succeeded:body _10
  br _16, ^16, ^1

16:
  ret _10

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  ret _11
}

%% beam_debug_info_SUITE.erl:231
%% Counter = 19
function `beam_debug_info_SUITE`:`family_union`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:231
  %% Anno: #{alias => #{},literals => []}
  _7 = debug_line `103`

  %% beam_debug_info_SUITE.erl:232
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _8 = debug_line `104`

  %% beam_debug_info_SUITE.erl:232
  S0 = call (`sofs`:`relation`/2), _0, `[{function,[variable]}]`
  _15 = succeeded:body S0
  br _15, ^15, ^1

15:
  %% beam_debug_info_SUITE.erl:233
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _9 = debug_line `105`

  %% beam_debug_info_SUITE.erl:233
  S1 = call (`sofs`:`relation`/2), _1, `[{function,[variable]}]`
  _16 = succeeded:body S1
  br _16, ^16, ^1

16:
  %% beam_debug_info_SUITE.erl:234
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _10 = debug_line `106`

  %% beam_debug_info_SUITE.erl:234
  S2 = call (`sofs`:`family_union`/2), S0, S1
  _17 = succeeded:body S2
  br _17, ^17, ^1

17:
  %% beam_debug_info_SUITE.erl:235
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _11 = debug_line `107`

  %% beam_debug_info_SUITE.erl:235
  _12 = call (`sofs`:`to_external`/1), S2
  _18 = succeeded:body _12
  br _18, ^18, ^1

18:
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  ret _13
}

%% beam_debug_info_SUITE.erl:237
%% Counter = 28
function `beam_debug_info_SUITE`:`family_difference`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:237
  %% Anno: #{alias => #{},literals => []}
  _12 = debug_line `108`

  %% beam_debug_info_SUITE.erl:238
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _13 = debug_line `109`

  %% beam_debug_info_SUITE.erl:238
  S0 = call (`sofs`:`family`/2), _0, `[{function,[variable]}]`
  _23 = succeeded:body S0
  br _23, ^23, ^1

23:
  %% beam_debug_info_SUITE.erl:239
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _14 = debug_line `110`

  %% beam_debug_info_SUITE.erl:239
  S1 = call (`sofs`:`family`/2), _1, `[{function,[variable]}]`
  _24 = succeeded:body S1
  br _24, ^24, ^1

24:
  %% beam_debug_info_SUITE.erl:240
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _15 = debug_line `111`

  %% beam_debug_info_SUITE.erl:240
  S2 = call (`sofs`:`family_difference`/2), S0, S1
  _25 = succeeded:body S2
  br _25, ^25, ^1

25:
  %% beam_debug_info_SUITE.erl:241
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _16 = debug_line `112`
  SpecFun = make_fun (`'-family_difference/2-fun-0-'`/1)

  %% beam_debug_info_SUITE.erl:242
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _18 = debug_line `113`

  %% beam_debug_info_SUITE.erl:242
  S3 = call (`sofs`:`family_specification`/2), SpecFun, S2
  _26 = succeeded:body S3
  br _26, ^26, ^1

26:
  %% beam_debug_info_SUITE.erl:243
  %% Anno: #{alias => #{0 => ['F0'],1 => ['F1']},literals => []}
  _19 = debug_line `114`

  %% beam_debug_info_SUITE.erl:243
  _20 = call (`sofs`:`to_external`/1), S3
  _27 = succeeded:body _20
  br _27, ^27, ^1

27:
  ret _20

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  ret _21
}

%% beam_debug_info_SUITE.erl:246
%% Counter = 34
function `beam_debug_info_SUITE`:`load_get_debug_info`(_0, _1, _2) {
0:
  %% beam_debug_info_SUITE.erl:246
  %% Anno: #{alias => #{},literals => []}
  _19 = debug_line `115`

  %% beam_debug_info_SUITE.erl:247
  %% Anno: #{alias => #{0 => ['Node'],1 => ['Mod'],2 => ['Beam']},
             literals => []}
  _20 = debug_line `116`

  %% beam_debug_info_SUITE.erl:248
  %% Anno: #{alias => #{0 => ['Node'],1 => ['Mod'],2 => ['Beam']},
             literals => []}
  _21 = debug_line `117`
  _8 = make_fun (`'-load_get_debug_info/3-fun-0-'`/2), _1, _2

  %% beam_debug_info_SUITE.erl:247
  _30 = call (`erpc`:`call`/2), _0, _8
  _33 = succeeded:body _30
  br _33, ^33, ^1

33:
  ret _30

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  ret _31
}

%% beam_debug_info_SUITE.erl:272
%% Counter = 39
function `beam_debug_info_SUITE`:`source_variables`(_0) {
0:
  %% beam_debug_info_SUITE.erl:272
  %% Anno: #{alias => #{},literals => []}
  _23 = debug_line `125`

  %% beam_debug_info_SUITE.erl:273
  %% Anno: #{alias => #{0 => ['Abstr']},literals => []}
  _24 = debug_line `126`

  %% beam_debug_info_SUITE.erl:274
  %% Anno: #{alias => #{0 => ['Abstr']},literals => []}
  _25 = debug_line `127`
  br ^37

37:
  %% beam_debug_info_SUITE.erl:274
  _29 = call (`'-source_variables/1-lc$^0/1-0-'`/1), _0
  _35 = succeeded:body _29
  br _35, ^35, ^1

35:
  ret _29

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  ret _31
}

%% beam_debug_info_SUITE.erl:276
%% Counter = 56
function `beam_debug_info_SUITE`:`extract_src_vars`(_0) {
0:
  %% beam_debug_info_SUITE.erl:276
  %% Anno: #{alias => #{},literals => []}
  _29 = debug_line `128`

  %% beam_debug_info_SUITE.erl:277
  %% Anno: #{alias => #{0 => ['F']},literals => []}
  _30 = debug_line `129`

  %% beam_debug_info_SUITE.erl:277
  L1 = call (`extract_src_vars`/3), _0, `true`, `#{}`
  _43 = succeeded:body L1
  br _43, ^43, ^1

43:
  %% beam_debug_info_SUITE.erl:278
  %% Anno: #{alias => #{0 => ['F']},literals => []}
  _31 = debug_line `130`
  br ^53

53:
  %% beam_debug_info_SUITE.erl:278
  _26 = call (`erts_internal`:`mc_iterator`/1), L1
  _46 = succeeded:body _26
  br _46, ^46, ^1

46:
  _50 = bif:'=:=' _26, `[]`
  br _50, ^50, ^48

50:
  _28 = put_tuple `bad_generator`, L1

  %% beam_debug_info_SUITE.erl:278
  _36 = call (`erlang`:`error`/1), _28
  _49 = succeeded:body _36
  br _49, ^49, ^1

49:
  br ^47

48:
  br ^47

47:
  _3 = phi { _26, ^48 }, { _36, ^49 }

  %% beam_debug_info_SUITE.erl:278
  _37 = call (`'-extract_src_vars/1-lc$^0/1-0-'`/1), _3
  _51 = succeeded:body _37
  br _51, ^51, ^1

51:
  br ^44

44:
  _11 = phi { _37, ^51 }

  %% beam_debug_info_SUITE.erl:279
  %% Anno: #{alias => #{0 => ['F'],11 => ['L2']},literals => [{true,14}]}
  _39 = debug_line `131`

  %% beam_debug_info_SUITE.erl:279
  _40 = call (`lists`:`sort`/1), _11
  _55 = succeeded:body _40
  br _55, ^55, ^1

55:
  ret _40

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  ret _41
}

%% beam_debug_info_SUITE.erl:281
%% Counter = 565
function `beam_debug_info_SUITE`:`extract_src_vars`(_0, _1, _2) {
0:
  %% beam_debug_info_SUITE.erl:281
  %% Anno: #{alias => #{},literals => []}
  _257 = debug_line `132`
  _562 = bif:is_tuple _0
  br _562, ^562, ^382

562:
  _563 = bif:tuple_size _0
  switch _563, ^382, [
    { `2`, ^559 },
    { `3`, ^557 },
    { `4`, ^560 },
    { `5`, ^558 },
    { `6`, ^561 }
  ]

561:
  _255 = get_tuple_element _0, `0`
  _253 = get_tuple_element _0, `2`
  _252 = get_tuple_element _0, `3`
  _251 = get_tuple_element _0, `4`
  _250 = get_tuple_element _0, `5`
  _556 = bif:'=:=' _255, `'try'`
  br _556, ^555, ^382

555:
  %% beam_debug_info_SUITE.erl:397
  %% Anno: #{alias =>
                 #{1 => [94,'Lc'],
                   2 => [93,'Acc0'],
                   250 => ['As'],
                   251 => ['Ccs'],
                   252 => ['Scs'],
                   253 => ['Es'],
                   254 => [95,'_Anno']},
             literals => []}
  _258 = debug_line `196`

  %% beam_debug_info_SUITE.erl:397
  _256 = call (`extract_body`/3), _253, `false`, _2
  _551 = succeeded:body _256
  br _551, ^551, ^1

551:
  %% beam_debug_info_SUITE.erl:398
  %% Anno: #{alias =>
                 #{1 => [94,'Lc'],
                   2 => [93,'Acc0'],
                   250 => ['As'],
                   251 => ['Ccs'],
                   252 => ['Scs'],
                   253 => ['Es'],
                   254 => [95,'_Anno'],
                   256 => ['Acc1']},
             literals => []}
  _259 = debug_line `197`

  %% beam_debug_info_SUITE.erl:398
  Acc2 = call (`extract_cs`/3), _252, _1, _256
  _552 = succeeded:body Acc2
  br _552, ^552, ^1

552:
  %% beam_debug_info_SUITE.erl:399
  %% Anno: #{alias =>
                 #{1 => [94,'Lc'],
                   2 => [93,'Acc0'],
                   250 => ['As'],
                   251 => ['Ccs'],
                   252 => ['Scs'],
                   253 => ['Es'],
                   254 => [95,'_Anno'],
                   256 => ['Acc1']},
             literals => []}
  _260 = debug_line `198`

  %% beam_debug_info_SUITE.erl:399
  Acc3 = call (`extract_cs`/3), _251, _1, Acc2
  _553 = succeeded:body Acc3
  br _553, ^553, ^1

553:
  %% beam_debug_info_SUITE.erl:400
  %% Anno: #{alias =>
                 #{1 => [94,'Lc'],
                   2 => [93,'Acc0'],
                   250 => ['As'],
                   251 => ['Ccs'],
                   252 => ['Scs'],
                   253 => ['Es'],
                   254 => [95,'_Anno'],
                   256 => ['Acc1']},
             literals => []}
  _261 = debug_line `199`

  %% beam_debug_info_SUITE.erl:400
  _262 = call (`extract_body`/3), _250, _1, Acc3
  _554 = succeeded:body _262
  br _554, ^554, ^1

554:
  ret _262

558:
  _217 = get_tuple_element _0, `0`
  _215 = get_tuple_element _0, `2`
  _214 = get_tuple_element _0, `3`
  _213 = get_tuple_element _0, `4`
  switch _217, ^382, [
    { `bin_element`, ^467 },
    { `function`, ^465 },
    { `op`, ^466 },
    { `'receive'`, ^464 }
  ]

464:
  %% beam_debug_info_SUITE.erl:381
  %% Anno: #{alias =>
                 #{1 => [117,'Lc'],
                   2 => [116,'Acc0'],
                   213 => ['ToE'],
                   214 => ['_To'],
                   215 => [118,'Cs'],
                   216 => [119,'_Anno']},
             literals => []}
  _321 = debug_line `186`

  %% beam_debug_info_SUITE.erl:381
  _220 = call (`extract_cs`/3), _215, _1, _2
  _462 = succeeded:body _220
  br _462, ^462, ^1

462:
  %% beam_debug_info_SUITE.erl:382
  %% Anno: #{alias =>
                 #{1 => [117,'Lc'],
                   2 => [116,'Acc0'],
                   213 => ['ToE'],
                   214 => ['_To'],
                   215 => [118,'Cs'],
                   216 => [119,'_Anno'],
                   220 => ['Acc1']},
             literals => []}
  _322 = debug_line `187`

  %% beam_debug_info_SUITE.erl:382
  _323 = call (`extract_body`/3), _213, _1, _220
  _463 = succeeded:body _323
  br _463, ^463, ^1

463:
  ret _323

466:
  %% beam_debug_info_SUITE.erl:337
  %% Anno: #{alias =>
                 #{1 => [146,'Lc'],
                   2 => [145,'Acc0'],
                   213 => ['Rhs'],
                   214 => ['Lhs'],
                   215 => ['_Name'],
                   216 => "H"},
             literals => []}
  _329 = debug_line `167`

  %% beam_debug_info_SUITE.erl:337
  _218 = call (`extract_src_vars`/3), _214, `false`, _2
  _453 = succeeded:body _218
  br _453, ^453, ^1

453:
  %% beam_debug_info_SUITE.erl:338
  %% Anno: #{alias =>
                 #{1 => [146,'Lc'],
                   2 => [145,'Acc0'],
                   213 => ['Rhs'],
                   214 => ['Lhs'],
                   215 => ['_Name'],
                   216 => "H",
                   218 => ['Acc1']},
             literals => []}
  _330 = debug_line `168`

  %% beam_debug_info_SUITE.erl:338
  _331 = call (`extract_src_vars`/3), _213, _1, _218
  _454 = succeeded:body _331
  br _454, ^454, ^1

454:
  ret _331

465:
  %% beam_debug_info_SUITE.erl:358
  %% Anno: #{alias =>
                 #{1 => [136,'_Lc'],
                   2 => [135,'Acc0'],
                   213 => [137,'Cs'],
                   214 => "P",215 => "O",
                   216 => [138,'_Anno']},
             literals => []}
  _324 = debug_line `177`

  %% beam_debug_info_SUITE.erl:358
  _219 = call (`any_debug_line_instrs`/1), _213
  _455 = succeeded:body _219
  br _455, ^455, ^1

455:
  switch _219, ^457, [
    { `false`, ^460 },
    { `true`, ^459 }
  ]

459:
  %% beam_debug_info_SUITE.erl:360
  %% Anno: #{alias =>
                 #{1 => [136,'_Lc'],
                   2 => [135,'Acc0'],
                   213 => [137,'Cs'],
                   214 => "P",215 => "O",
                   216 => [138,'_Anno']},
             literals => []}
  _326 = debug_line `178`

  %% beam_debug_info_SUITE.erl:360
  _327 = call (`extract_cs`/3), _213, `true`, _2
  _458 = succeeded:body _327
  br _458, ^458, ^1

458:
  ret _327

460:
  %% beam_debug_info_SUITE.erl:366
  %% Anno: #{alias =>
                 #{1 => [136,'_Lc'],
                   2 => [135,'Acc0'],
                   213 => [137,'Cs'],
                   214 => "P",215 => "O",
                   216 => [138,'_Anno']},
             literals => []}
  _325 = debug_line `179`
  ret _2

457:
  %% beam_debug_info_SUITE.erl:358
  _328 = match_fail `case_clause`, _219
  _461 = succeeded:body _328
  br _461, ^461, ^1

461:
  ret _328

467:
  %% beam_debug_info_SUITE.erl:299
  %% Anno: #{alias =>
                 #{1 => [187,'_Lc'],
                   2 => [186,'Acc0'],
                   213 => "3",
                   214 => ['Size'],
                   215 => ['Val'],
                   216 => "2"},
             literals => []}
  _332 = debug_line `141`

  %% beam_debug_info_SUITE.erl:299
  Acc1 = call (`extract_src_vars`/3), _215, `false`, _2
  _447 = succeeded:body Acc1
  br _447, ^447, ^1

447:
  %% beam_debug_info_SUITE.erl:300
  %% Anno: #{alias =>
                 #{1 => [187,'_Lc'],
                   2 => [186,'Acc0'],
                   213 => "3",
                   214 => ['Size'],
                   215 => ['Val'],
                   216 => "2"},
             literals => []}
  _333 = debug_line `142`
  _451 = bif:'=:=' _214, `default`
  br _451, ^450, ^449

450:
  %% beam_debug_info_SUITE.erl:301
  %% Anno: #{alias =>
                 #{1 => [187,'_Lc'],
                   2 => [186,'Acc0'],
                   213 => "3",
                   214 => ['Size'],
                   215 => ['Val'],
                   216 => "2"},
             literals => []}
  _334 = debug_line `143`
  ret Acc1

449:
  %% beam_debug_info_SUITE.erl:302
  %% Anno: #{alias =>
                 #{1 => [187,'_Lc'],
                   2 => [186,'Acc0'],
                   213 => "3",
                   214 => [52,'Size'],
                   215 => ['Val'],
                   216 => "2"},
             literals => []}
  _335 = debug_line `144`

  %% beam_debug_info_SUITE.erl:302
  _336 = call (`extract_src_vars`/3), _214, `false`, Acc1
  _452 = succeeded:body _336
  br _452, ^452, ^1

452:
  ret _336

560:
  _226 = get_tuple_element _0, `0`
  _224 = get_tuple_element _0, `2`
  _223 = get_tuple_element _0, `3`
  switch _226, ^470, [
    { `call`, ^518 },
    { `'case'`, ^512 },
    { `cons`, ^522 },
    { `map`, ^521 },
    { `map_field_assoc`, ^520 },
    { `map_field_exact`, ^519 },
    { `match`, ^516 },
    { `'maybe'`, ^511 },
    { `maybe_match`, ^513 },
    { `named_fun`, ^514 },
    { `op`, ^515 },
    { `remote`, ^517 }
  ]

517:
  %% beam_debug_info_SUITE.erl:329
  %% Anno: #{alias =>
                 #{1 => [155,'Lc'],
                   2 => [154,'Acc0'],
                   223 => [156,'Name'],
                   224 => ['Mod'],
                   225 => "E"},
             literals => []}
  _286 = debug_line `162`

  %% beam_debug_info_SUITE.erl:329
  _239 = call (`extract_src_vars`/3), _224, _1, _2
  _481 = succeeded:body _239
  br _481, ^481, ^1

481:
  %% beam_debug_info_SUITE.erl:330
  %% Anno: #{alias =>
                 #{1 => [155,'Lc'],
                   2 => [154,'Acc0'],
                   223 => [156,'Name'],
                   224 => ['Mod'],
                   225 => "E",
                   239 => ['Acc1']},
             literals => []}
  _287 = debug_line `163`

  %% beam_debug_info_SUITE.erl:330
  _288 = call (`extract_src_vars`/3), _223, _1, _239
  _482 = succeeded:body _288
  br _482, ^482, ^1

482:
  ret _288

515:
  %% beam_debug_info_SUITE.erl:335
  %% Anno: #{alias =>
                 #{1 => [148,'Lc'],
                   2 => [147,'Acc0'],
                   223 => ['Arg'],
                   224 => [149,'_Name'],
                   225 => "G"},
             literals => []}
  _281 = debug_line `166`

  %% beam_debug_info_SUITE.erl:335
  _282 = call (`extract_src_vars`/3), _223, _1, _2
  _485 = succeeded:body _282
  br _485, ^485, ^1

485:
  ret _282

514:
  %% beam_debug_info_SUITE.erl:344
  %% Anno: #{alias =>
                 #{1 => [140,'Lc'],
                   2 => [139,'Acc0'],
                   223 => [141,'Cs'],
                   224 => ['Name'],
                   225 => "M"},
             literals => []}
  _272 = debug_line `171`

  %% beam_debug_info_SUITE.erl:344
  _241 = call (`any_debug_line_instrs`/1), _223
  _486 = succeeded:body _241
  br _486, ^486, ^1

486:
  switch _241, ^488, [
    { `false`, ^497 },
    { `true`, ^496 }
  ]

496:
  _489 = bif:'=:=' _224, `'_'`
  br _489, ^488, ^489

489:
  %% beam_debug_info_SUITE.erl:351
  %% Anno: #{alias =>
                 #{1 => [140,'Lc'],
                   2 => [139,'Acc0'],
                   223 => [141,'Cs'],
                   224 => ['Name'],
                   225 => "M"},
             literals => []}
  _273 = debug_line `173`
  _493 = bif:'=:=' _224, `'_'`
  br _493, ^492, ^491

492:
  %% beam_debug_info_SUITE.erl:352
  %% Anno: #{alias =>
                 #{1 => [140,'Lc'],
                   2 => [139,'Acc0'],
                   223 => [141,'Cs'],
                   224 => ['Name'],
                   225 => "M"},
             literals => []}
  _274 = debug_line `174`
  br ^490

491:
  %% beam_debug_info_SUITE.erl:353
  %% Anno: #{alias =>
                 #{1 => [140,'Lc'],
                   2 => [139,'Acc0'],
                   223 => [141,'Cs'],
                   224 => [78,'Name'],
                   225 => "M"},
             literals => []}
  _275 = debug_line `175`
  _242 = put_tuple `var`, `anno`, _224

  %% beam_debug_info_SUITE.erl:353
  _276 = call (`extract_src_vars`/3), _242, _1, _2
  _494 = succeeded:body _276
  br _494, ^494, ^1

494:
  br ^490

490:
  _16 = phi { _2, ^492 }, { _276, ^494 }

  %% beam_debug_info_SUITE.erl:355
  %% Anno: #{alias =>
                 #{1 => [140,'Lc'],
                   2 => [139,'Acc0'],
                   16 => "ó",
                   223 => [141,'Cs'],
                   224 => ['Name'],
                   225 => "M",
                   243 => ['Acc']},
             literals => []}
  _277 = debug_line `176`

  %% beam_debug_info_SUITE.erl:355
  _278 = call (`extract_cs`/3), _223, `true`, _16
  _495 = succeeded:body _278
  br _495, ^495, ^1

495:
  ret _278

497:
  %% beam_debug_info_SUITE.erl:349
  %% Anno: #{alias =>
                 #{1 => [140,'Lc'],
                   2 => [139,'Acc0'],
                   223 => [141,'Cs'],
                   224 => ['Name'],
                   225 => "M"},
             literals => []}
  _279 = debug_line `172`
  ret _2

488:
  %% beam_debug_info_SUITE.erl:344
  _280 = match_fail `case_clause`, _241
  _498 = succeeded:body _280
  br _498, ^498, ^1

498:
  ret _280

513:
  %% beam_debug_info_SUITE.erl:389
  %% Anno: #{alias =>
                 #{1 => [105,'Lc'],
                   2 => [104,'Acc0'],
                   223 => [106,'E'],
                   224 => [107,'P'],
                   225 => [108,'_Anno']},
             literals => []}
  _266 = debug_line `191`

  %% beam_debug_info_SUITE.erl:389
  _248 = call (`extract_src_vars`/3), _224, `false`, _2
  _507 = succeeded:body _248
  br _507, ^507, ^1

507:
  %% beam_debug_info_SUITE.erl:390
  %% Anno: #{alias =>
                 #{1 => [105,'Lc'],
                   2 => [104,'Acc0'],
                   223 => [106,'E'],
                   224 => [107,'P'],
                   225 => [108,'_Anno'],
                   248 => ['Acc1']},
             literals => []}
  _267 = debug_line `192`

  %% beam_debug_info_SUITE.erl:390
  _268 = call (`extract_src_vars`/3), _223, _1, _248
  _508 = succeeded:body _268
  br _508, ^508, ^1

508:
  ret _268

511:
  _504 = bif:is_tuple _223
  br _504, ^504, ^470

504:
  _505 = bif:tuple_size _223
  _506 = bif:'=:=' _505, `3`
  br _506, ^503, ^470

503:
  _246 = get_tuple_element _223, `0`
  _244 = get_tuple_element _223, `2`
  _502 = bif:'=:=' _246, `'else'`
  br _502, ^501, ^470

501:
  %% beam_debug_info_SUITE.erl:386
  %% Anno: #{alias =>
                 #{1 => [110,'Lc'],
                   2 => [109,'Acc0'],
                   224 => ['Body'],
                   225 => [111,'_Anno'],
                   244 => ['ElseClauses'],
                   245 => "R"},
             literals => []}
  _269 = debug_line `189`

  %% beam_debug_info_SUITE.erl:386
  _247 = call (`extract_body`/3), _224, _1, _2
  _499 = succeeded:body _247
  br _499, ^499, ^1

499:
  %% beam_debug_info_SUITE.erl:387
  %% Anno: #{alias =>
                 #{1 => [110,'Lc'],
                   2 => [109,'Acc0'],
                   224 => ['Body'],
                   225 => [111,'_Anno'],
                   244 => ['ElseClauses'],
                   245 => "R",
                   247 => ['Acc1']},
             literals => []}
  _270 = debug_line `190`

  %% beam_debug_info_SUITE.erl:387
  _271 = call (`extract_cs`/3), _244, _1, _247
  _500 = succeeded:body _271
  br _500, ^500, ^1

500:
  ret _271

516:
  %% beam_debug_info_SUITE.erl:332
  %% Anno: #{alias =>
                 #{1 => [151,'Lc'],
                   2 => [150,'Acc0'],
                   223 => [152,'E'],
                   224 => [153,'P'],
                   225 => "F"},
             literals => []}
  _283 = debug_line `164`

  %% beam_debug_info_SUITE.erl:332
  _240 = call (`extract_src_vars`/3), _224, `false`, _2
  _483 = succeeded:body _240
  br _483, ^483, ^1

483:
  %% beam_debug_info_SUITE.erl:333
  %% Anno: #{alias =>
                 #{1 => [151,'Lc'],
                   2 => [150,'Acc0'],
                   223 => [152,'E'],
                   224 => [153,'P'],
                   225 => "F",
                   240 => ['Acc1']},
             literals => []}
  _284 = debug_line `165`

  %% beam_debug_info_SUITE.erl:333
  _285 = call (`extract_src_vars`/3), _223, _1, _240
  _484 = succeeded:body _285
  br _484, ^484, ^1

484:
  ret _285

519:
  %% beam_debug_info_SUITE.erl:321
  %% Anno: #{alias =>
                 #{1 => [164,'_Lc'],
                   2 => [163,'Acc0'],
                   223 => ['V'],
                   224 => ['K'],
                   225 => "B"},
             literals => []}
  _292 = debug_line `157`

  %% beam_debug_info_SUITE.erl:321
  _237 = call (`extract_src_vars`/3), _224, `false`, _2
  _477 = succeeded:body _237
  br _477, ^477, ^1

477:
  %% beam_debug_info_SUITE.erl:322
  %% Anno: #{alias =>
                 #{1 => [164,'_Lc'],
                   2 => [163,'Acc0'],
                   223 => ['V'],
                   224 => ['K'],
                   225 => "B",
                   237 => ['Acc1']},
             literals => []}
  _293 = debug_line `158`

  %% beam_debug_info_SUITE.erl:322
  _294 = call (`extract_src_vars`/3), _223, `false`, _237
  _478 = succeeded:body _294
  br _478, ^478, ^1

478:
  ret _294

520:
  %% beam_debug_info_SUITE.erl:318
  %% Anno: #{alias =>
                 #{1 => [166,'_Lc'],
                   2 => [165,'Acc0'],
                   223 => [167,'V'],
                   224 => [168,'K'],
                   225 => "A"},
             literals => []}
  _295 = debug_line `155`

  %% beam_debug_info_SUITE.erl:318
  _236 = call (`extract_src_vars`/3), _224, `false`, _2
  _475 = succeeded:body _236
  br _475, ^475, ^1

475:
  %% beam_debug_info_SUITE.erl:319
  %% Anno: #{alias =>
                 #{1 => [166,'_Lc'],
                   2 => [165,'Acc0'],
                   223 => [167,'V'],
                   224 => [168,'K'],
                   225 => "A",
                   236 => ['Acc1']},
             literals => []}
  _296 = debug_line `156`

  %% beam_debug_info_SUITE.erl:319
  _297 = call (`extract_src_vars`/3), _223, `false`, _236
  _476 = succeeded:body _297
  br _476, ^476, ^1

476:
  ret _297

521:
  %% beam_debug_info_SUITE.erl:315
  %% Anno: #{alias =>
                 #{1 => [170,'Lc'],
                   2 => [169,'Acc0'],
                   223 => ['Fs'],
                   224 => ['M'],
                   225 => "@"},
             literals => []}
  _298 = debug_line `153`

  %% beam_debug_info_SUITE.erl:315
  _235 = call (`extract_src_vars`/3), _224, _1, _2
  _473 = succeeded:body _235
  br _473, ^473, ^1

473:
  %% beam_debug_info_SUITE.erl:316
  %% Anno: #{alias =>
                 #{1 => [170,'Lc'],
                   2 => [169,'Acc0'],
                   223 => ['Fs'],
                   224 => ['M'],
                   225 => "@",
                   235 => ['Acc1']},
             literals => []}
  _299 = debug_line `154`

  %% beam_debug_info_SUITE.erl:316
  _300 = call (`extract_args`/2), _223, _235
  _474 = succeeded:body _300
  br _474, ^474, ^1

474:
  ret _300

522:
  %% beam_debug_info_SUITE.erl:310
  %% Anno: #{alias =>
                 #{1 => [175,'Lc'],
                   2 => [174,'Acc0'],
                   223 => ['Tl'],
                   224 => ['Hd'],
                   225 => ">"},
             literals => []}
  _301 = debug_line `150`

  %% beam_debug_info_SUITE.erl:310
  _234 = call (`extract_src_vars`/3), _224, _1, _2
  _471 = succeeded:body _234
  br _471, ^471, ^1

471:
  %% beam_debug_info_SUITE.erl:311
  %% Anno: #{alias =>
                 #{1 => [175,'Lc'],
                   2 => [174,'Acc0'],
                   223 => ['Tl'],
                   224 => ['Hd'],
                   225 => ">",
                   234 => ['Acc1']},
             literals => []}
  _302 = debug_line `151`

  %% beam_debug_info_SUITE.erl:311
  _303 = call (`extract_src_vars`/3), _223, _1, _234
  _472 = succeeded:body _303
  br _472, ^472, ^1

472:
  ret _303

512:
  %% beam_debug_info_SUITE.erl:392
  %% Anno: #{alias =>
                 #{1 => [100,'Lc'],
                   2 => [99,'Acc0'],
                   223 => [101,'Cs'],
                   224 => [102,'E'],
                   225 => [103,'_Anno']},
             literals => []}
  _263 = debug_line `193`

  %% beam_debug_info_SUITE.erl:392
  _249 = call (`extract_src_vars`/3), _224, `false`, _2
  _509 = succeeded:body _249
  br _509, ^509, ^1

509:
  %% beam_debug_info_SUITE.erl:393
  %% Anno: #{alias =>
                 #{1 => [100,'Lc'],
                   2 => [99,'Acc0'],
                   223 => [101,'Cs'],
                   224 => [102,'E'],
                   225 => [103,'_Anno'],
                   249 => ['Acc1']},
             literals => []}
  _264 = debug_line `194`

  %% beam_debug_info_SUITE.erl:393
  _265 = call (`extract_cs`/3), _223, _1, _249
  _510 = succeeded:body _265
  br _510, ^510, ^1

510:
  ret _265

518:
  %% beam_debug_info_SUITE.erl:326
  %% Anno: #{alias =>
                 #{1 => [158,'Lc'],
                   2 => [157,'Acc0'],
                   223 => [159,'As'],
                   224 => ['F'],
                   225 => "D"},
             literals => []}
  _289 = debug_line `160`

  %% beam_debug_info_SUITE.erl:326
  _238 = call (`extract_src_vars`/3), _224, _1, _2
  _479 = succeeded:body _238
  br _479, ^479, ^1

479:
  %% beam_debug_info_SUITE.erl:327
  %% Anno: #{alias =>
                 #{1 => [158,'Lc'],
                   2 => [157,'Acc0'],
                   223 => [159,'As'],
                   224 => ['F'],
                   225 => "D",
                   238 => ['Acc1']},
             literals => []}
  _290 = debug_line `161`

  %% beam_debug_info_SUITE.erl:327
  _291 = call (`extract_args`/2), _223, _238
  _480 = succeeded:body _291
  br _480, ^480, ^1

480:
  ret _291

470:
  %% beam_debug_info_SUITE.erl:407
  _29 = bif:'=:=' _226, `lc`

  %% beam_debug_info_SUITE.erl:407
  _30 = bif:'=:=' _226, `bc`

  %% beam_debug_info_SUITE.erl:407
  _31 = bif:'=:=' _226, `mc`

  %% beam_debug_info_SUITE.erl:407
  _32 = bif:'or' _30, _31
  _524 = succeeded:guard _32
  br _524, ^524, ^523

524:
  %% beam_debug_info_SUITE.erl:407
  _227 = bif:'or' _29, _32
  _525 = succeeded:guard _227
  br _525, ^525, ^523

525:
  _526 = bif:'=:=' _227, `true`
  br _526, ^526, ^523

526:
  %% beam_debug_info_SUITE.erl:408
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => [86,'Acc0'],
                   223 => ['Qs0'],
                   224 => ['Build'],
                   225 => "T",
                   226 => ['C']},
             literals => []}
  _304 = debug_line `203`

  %% beam_debug_info_SUITE.erl:408
  _228 = call (`any_debug_line_instrs`/1), _224
  _527 = succeeded:body _228
  br _527, ^527, ^1

527:
  switch _228, ^529, [
    { `false`, ^540 },
    { `true`, ^541 }
  ]

541:
  %% beam_debug_info_SUITE.erl:418
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => [86,'Acc0'],
                   223 => ['Qs0'],
                   224 => ['Build'],
                   225 => "T",
                   226 => ['C']},
             literals => []}
  _305 = debug_line `208`

  %% beam_debug_info_SUITE.erl:418
  _231 = call (`extract_src_vars`/3), _224, _1, _2
  _538 = succeeded:body _231
  br _538, ^538, ^1

538:
  %% beam_debug_info_SUITE.erl:419
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => [86,'Acc0'],
                   223 => ['Qs0'],
                   224 => ['Build'],
                   225 => "T",
                   226 => ['C'],
                   231 => ['Acc1']},
             literals => []}
  _306 = debug_line `209`

  %% beam_debug_info_SUITE.erl:419
  _307 = call (`extract_args`/2), _223, _231
  _539 = succeeded:body _307
  br _539, ^539, ^1

539:
  ret _307

540:
  %% beam_debug_info_SUITE.erl:410
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => [86,'Acc0'],
                   223 => ['Qs0'],
                   224 => ['Build'],
                   225 => "T",
                   226 => ['C']},
             literals => []}
  _308 = debug_line `204`

  %% beam_debug_info_SUITE.erl:410
  _229 = call (`extract_sv_qs`/1), _223
  _530 = succeeded:body _229
  br _530, ^530, ^1

530:
  %% beam_debug_info_SUITE.erl:411
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => [86,'Acc0'],
                   223 => ['Qs0'],
                   224 => ['Build'],
                   225 => "T",
                   226 => ['C'],
                   229 => ['Qs']},
             literals => []}
  _309 = debug_line `205`

  %% beam_debug_info_SUITE.erl:411
  _230 = call (`any_debug_line_instrs`/1), _229
  _531 = succeeded:body _230
  br _531, ^531, ^1

531:
  switch _230, ^533, [
    { `false`, ^535 },
    { `true`, ^536 }
  ]

536:
  %% beam_debug_info_SUITE.erl:415
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => [86,'Acc0'],
                   223 => ['Qs0'],
                   224 => ['Build'],
                   225 => "T",
                   226 => ['C'],
                   229 => ['Qs']},
             literals => []}
  _310 = debug_line `207`

  %% beam_debug_info_SUITE.erl:415
  _311 = call (`extract_args`/2), _229, _2
  _534 = succeeded:body _311
  br _534, ^534, ^1

534:
  ret _311

535:
  %% beam_debug_info_SUITE.erl:413
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => [86,'Acc0'],
                   223 => ['Qs0'],
                   224 => ['Build'],
                   225 => "T",
                   226 => ['C'],
                   229 => ['Qs']},
             literals => []}
  _312 = debug_line `206`
  ret _2

533:
  %% beam_debug_info_SUITE.erl:411
  _313 = match_fail `case_clause`, _230
  _537 = succeeded:body _313
  br _537, ^537, ^1

537:
  ret _313

529:
  %% beam_debug_info_SUITE.erl:408
  _314 = match_fail `case_clause`, _228
  _542 = succeeded:body _314
  br _542, ^542, ^1

542:
  ret _314

523:
  %% beam_debug_info_SUITE.erl:422
  %% Anno: #{alias =>
                 #{1 => ['_Lc'],
                   2 => ['Acc0'],
                   223 => ['E'],
                   224 => ['P'],
                   225 => "U",
                   226 => ['G']},
             literals => []}
  _315 = debug_line `210`

  %% beam_debug_info_SUITE.erl:422
  _232 = call (`is_generator`/1), _226
  _543 = succeeded:body _232
  br _543, ^543, ^1

543:
  _549 = bif:'=:=' _232, `true`
  br _549, ^548, ^545

548:
  %% beam_debug_info_SUITE.erl:423
  %% Anno: #{alias =>
                 #{1 => ['_Lc'],
                   2 => ['Acc0'],
                   223 => ['E'],
                   224 => ['P'],
                   225 => "U",
                   226 => ['G']},
             literals => []}
  _316 = debug_line `211`

  %% beam_debug_info_SUITE.erl:423
  _233 = call (`extract_src_vars`/3), _224, `false`, _2
  _546 = succeeded:body _233
  br _546, ^546, ^1

546:
  %% beam_debug_info_SUITE.erl:424
  %% Anno: #{alias =>
                 #{1 => ['_Lc'],
                   2 => ['Acc0'],
                   223 => ['E'],
                   224 => ['P'],
                   225 => "U",
                   226 => ['G'],
                   233 => ['Acc1']},
             literals => []}
  _317 = debug_line `212`

  %% beam_debug_info_SUITE.erl:424
  _318 = call (`extract_src_vars`/3), _223, `false`, _233
  _547 = succeeded:body _318
  br _547, ^547, ^1

547:
  ret _318

545:
  %% beam_debug_info_SUITE.erl:422
  _319 = match_fail `badmatch`, _232
  _550 = succeeded:body _319
  br _550, ^550, ^1

550:
  ret _319

557:
  _200 = get_tuple_element _0, `0`
  _198 = get_tuple_element _0, `2`
  switch _200, ^382, [
    { `atom`, ^446 },
    { `bin`, ^445 },
    { `block`, ^436 },
    { `'catch'`, ^432 },
    { `char`, ^444 },
    { `debug_line`, ^438 },
    { `executable_line`, ^437 },
    { `float`, ^443 },
    { `'fun'`, ^430 },
    { `'if'`, ^433 },
    { `integer`, ^442 },
    { `map`, ^440 },
    { `'maybe'`, ^434 },
    { `'receive'`, ^435 },
    { `string`, ^441 },
    { `tuple`, ^439 },
    { `var`, ^429 },
    { `zip`, ^431 }
  ]

431:
  %% beam_debug_info_SUITE.erl:404
  %% Anno: #{alias =>
                 #{1 => [88,'_Lc'],
                   2 => [87,'Acc0'],
                   198 => [89,'Qs0'],
                   199 => "S"},
             literals => []}
  _337 = debug_line `201`

  %% beam_debug_info_SUITE.erl:404
  Qs = call (`extract_sv_qs`/1), _198
  _427 = succeeded:body Qs
  br _427, ^427, ^1

427:
  %% beam_debug_info_SUITE.erl:405
  %% Anno: #{alias =>
                 #{1 => [88,'_Lc'],
                   2 => [87,'Acc0'],
                   198 => [89,'Qs0'],
                   199 => "S"},
             literals => []}
  _338 = debug_line `202`

  %% beam_debug_info_SUITE.erl:405
  _339 = call (`extract_args`/2), Qs, _2
  _428 = succeeded:body _339
  br _428, ^428, ^1

428:
  ret _339

429:
  _385 = bif:'=:=' _198, `'_'`
  br _385, ^384, ^383

384:
  %% beam_debug_info_SUITE.erl:282
  %% Anno: #{alias => #{1 => [197,'_Lc'],2 => [196,'Acc'],199 => "*"},
             literals => []}
  _369 = debug_line `133`
  ret _2

383:
  %% beam_debug_info_SUITE.erl:284
  %% Anno: #{alias =>
                 #{1 => [194,'_Lc'],
                   2 => [193,'Acc0'],
                   198 => [195,'Name'],
                   199 => "+"},
             literals => []}
  _370 = debug_line `134`

  %% beam_debug_info_SUITE.erl:284
  _201 = call (`erlang`:`atom_to_binary`/1), _198
  _386 = succeeded:body _201
  br _386, ^386, ^1

386:
  _203 = bs_start_match `new`, _201
  _394 = succeeded:guard _203
  br _394, ^394, ^388

394:
  %% beam_debug_info_SUITE.erl:285
  _204 = bs_match `integer`, _203, `[unsigned,big]`, `24`, `1`
  _389 = succeeded:guard _204
  br _389, ^389, ^388

389:
  _205 = bs_extract _204
  switch _205, ^388, [
    { `6516598`, ^392 },
    { `7497059`, ^393 }
  ]

393:
  %% beam_debug_info_SUITE.erl:288
  _208 = bs_match `binary`, _204, `[unsigned,big]`, `all`, `8`
  _391 = succeeded:guard _208
  br _391, ^391, ^388

391:
  _209 = bs_extract _208

  %% beam_debug_info_SUITE.erl:290
  %% Anno: #{alias =>
                 #{1 => [194,'_Lc'],
                   2 => [193,'Acc0'],
                   198 => [195,'Name'],
                   199 => "+",209 => "-"},
             literals => []}
  _371 = debug_line `136`
  ret _2

392:
  %% beam_debug_info_SUITE.erl:285
  _206 = bs_match `binary`, _204, `[unsigned,big]`, `all`, `8`
  _390 = succeeded:guard _206
  br _390, ^390, ^388

390:
  _207 = bs_extract _206

  %% beam_debug_info_SUITE.erl:287
  %% Anno: #{alias =>
                 #{1 => [194,'_Lc'],
                   2 => [193,'Acc0'],
                   198 => [195,'Name'],
                   199 => "+",207 => ","},
             literals => []}
  _372 = debug_line `135`
  ret _2

388:
  %% beam_debug_info_SUITE.erl:292
  %% Anno: #{alias =>
                 #{1 => [194,'_Lc'],
                   2 => [193,'Acc0'],
                   198 => [195,'Name'],
                   199 => "+",201 => "."},
             literals => []}
  _373 = debug_line `137`

  %% beam_debug_info_SUITE.erl:292
  _202 = call (`beam_ssa_codegen`:`is_original_variable`/1), _198
  _395 = succeeded:body _202
  br _395, ^395, ^1

395:
  _403 = bif:'=:=' _202, `true`
  br _403, ^402, ^397

402:
  %% beam_debug_info_SUITE.erl:293
  %% Anno: #{alias =>
                 #{1 => [194,'_Lc'],
                   2 => [193,'Acc0'],
                   198 => [195,'Name'],
                   199 => "+",201 => "."},
             literals => []}
  _374 = debug_line `138`
  _400 = bif:is_map _2
  br _400, ^400, ^399

400:
  %% beam_debug_info_SUITE.erl:293
  _375 = put_map `assoc`, _2, _198, `true`
  ret _375

399:
  %% beam_debug_info_SUITE.erl:293
  _376 = match_fail `badmap`, _2
  _401 = succeeded:body _376
  br _401, ^401, ^1

401:
  ret _376

397:
  %% beam_debug_info_SUITE.erl:292
  _377 = match_fail `badmatch`, _202
  _404 = succeeded:body _377
  br _404, ^404, ^1

404:
  ret _377

439:
  %% beam_debug_info_SUITE.erl:324
  %% Anno: #{alias =>
                 #{1 => [161,'_Lc'],
                   2 => [160,'Acc'],
                   198 => [162,'Es'],
                   199 => "C"},
             literals => []}
  _358 = debug_line `159`

  %% beam_debug_info_SUITE.erl:324
  _359 = call (`extract_args`/2), _198, _2
  _407 = succeeded:body _359
  br _407, ^407, ^1

407:
  ret _359

441:
  %% beam_debug_info_SUITE.erl:308
  %% Anno: #{alias =>
                 #{1 => [177,'_Lc'],2 => [176,'Acc'],198 => "=",199 => "<"},
             literals => []}
  _362 = debug_line `149`
  ret _2

435:
  %% beam_debug_info_SUITE.erl:379
  %% Anno: #{alias =>
                 #{1 => [121,'Lc'],
                   2 => [120,'Acc0'],
                   198 => [122,'Cs'],
                   199 => [123,'_Anno']},
             literals => []}
  _346 = debug_line `185`

  %% beam_debug_info_SUITE.erl:379
  _347 = call (`extract_cs`/3), _198, _1, _2
  _423 = succeeded:body _347
  br _423, ^423, ^1

423:
  ret _347

434:
  %% beam_debug_info_SUITE.erl:384
  %% Anno: #{alias =>
                 #{1 => [113,'Lc'],
                   2 => [112,'Acc0'],
                   198 => [114,'Body'],
                   199 => [115,'_Anno']},
             literals => []}
  _344 = debug_line `188`

  %% beam_debug_info_SUITE.erl:384
  _345 = call (`extract_body`/3), _198, _1, _2
  _424 = succeeded:body _345
  br _424, ^424, ^1

424:
  ret _345

440:
  %% beam_debug_info_SUITE.erl:313
  %% Anno: #{alias =>
                 #{1 => [172,'_Lc'],
                   2 => [171,'Acc0'],
                   198 => [173,'Fs'],
                   199 => "?"},
             literals => []}
  _360 = debug_line `152`

  %% beam_debug_info_SUITE.erl:313
  _361 = call (`extract_args`/2), _198, _2
  _406 = succeeded:body _361
  br _406, ^406, ^1

406:
  ret _361

442:
  %% beam_debug_info_SUITE.erl:306
  %% Anno: #{alias =>
                 #{1 => [181,'_Lc'],2 => [180,'Acc'],198 => ":",199 => "9"},
             literals => []}
  _363 = debug_line `147`
  ret _2

433:
  %% beam_debug_info_SUITE.erl:395
  %% Anno: #{alias =>
                 #{1 => [97,'Lc'],
                   2 => [96,'Acc0'],
                   198 => ['Cs'],
                   199 => [98,'_Anno']},
             literals => []}
  _342 = debug_line `195`

  %% beam_debug_info_SUITE.erl:395
  _343 = call (`extract_cs`/3), _198, _1, _2
  _425 = succeeded:body _343
  br _425, ^425, ^1

425:
  ret _343

430:
  _419 = bif:is_tuple _198
  br _419, ^419, ^408

419:
  _420 = bif:tuple_size _198
  _421 = bif:'=:=' _420, `2`
  br _421, ^418, ^408

418:
  _211 = get_tuple_element _198, `0`
  _210 = get_tuple_element _198, `1`
  _417 = bif:'=:=' _211, `clauses`
  br _417, ^416, ^408

416:
  %% beam_debug_info_SUITE.erl:369
  %% Anno: #{alias =>
                 #{1 => [132,'_Lc'],
                   2 => [131,'Acc0'],
                   199 => [134,'_Anno'],
                   210 => [133,'Cs']},
             literals => []}
  _350 = debug_line `180`

  %% beam_debug_info_SUITE.erl:369
  _212 = call (`any_debug_line_instrs`/1), _210
  _409 = succeeded:body _212
  br _409, ^409, ^1

409:
  switch _212, ^411, [
    { `false`, ^414 },
    { `true`, ^413 }
  ]

413:
  %% beam_debug_info_SUITE.erl:371
  %% Anno: #{alias =>
                 #{1 => [132,'_Lc'],
                   2 => [131,'Acc0'],
                   199 => [134,'_Anno'],
                   210 => [133,'Cs']},
             literals => []}
  _352 = debug_line `181`

  %% beam_debug_info_SUITE.erl:371
  _353 = call (`extract_cs`/3), _210, `true`, _2
  _412 = succeeded:body _353
  br _412, ^412, ^1

412:
  ret _353

414:
  %% beam_debug_info_SUITE.erl:373
  %% Anno: #{alias =>
                 #{1 => [132,'_Lc'],
                   2 => [131,'Acc0'],
                   199 => [134,'_Anno'],
                   210 => [133,'Cs']},
             literals => []}
  _351 = debug_line `182`
  ret _2

411:
  %% beam_debug_info_SUITE.erl:369
  _354 = match_fail `case_clause`, _212
  _415 = succeeded:body _354
  br _415, ^415, ^1

415:
  ret _354

408:
  %% beam_debug_info_SUITE.erl:375
  %% Anno: #{alias =>
                 #{1 => [129,'_Lc'],
                   2 => [128,'Acc0'],
                   198 => "Q",
                   199 => [130,'_Anno']},
             literals => []}
  _355 = debug_line `183`
  ret _2

443:
  %% beam_debug_info_SUITE.erl:305
  %% Anno: #{alias =>
                 #{1 => [183,'_Lc'],2 => [182,'Acc'],198 => "8",199 => "7"},
             literals => []}
  _364 = debug_line `146`
  ret _2

437:
  %% beam_debug_info_SUITE.erl:342
  %% Anno: #{alias => #{1 => [142,'_Lc'],2 => ['Acc'],198 => "L",199 => "K"},
             literals => []}
  _356 = debug_line `170`
  ret _2

438:
  %% beam_debug_info_SUITE.erl:340
  %% Anno: #{alias =>
                 #{1 => [144,'_Lc'],2 => [143,'Acc'],198 => "J",199 => "I"},
             literals => []}
  _357 = debug_line `169`
  ret _2

444:
  %% beam_debug_info_SUITE.erl:304
  %% Anno: #{alias =>
                 #{1 => [185,'_Lc'],2 => [184,'Acc'],198 => "6",199 => "5"},
             literals => []}
  _365 = debug_line `145`
  ret _2

432:
  %% beam_debug_info_SUITE.erl:402
  %% Anno: #{alias =>
                 #{1 => [91,'Lc'],
                   2 => [90,'Acc0'],
                   198 => [92,'E'],
                   199 => ['_Anno']},
             literals => []}
  _340 = debug_line `200`

  %% beam_debug_info_SUITE.erl:402
  _341 = call (`extract_src_vars`/3), _198, _1, _2
  _426 = succeeded:body _341
  br _426, ^426, ^1

426:
  ret _341

436:
  %% beam_debug_info_SUITE.erl:377
  %% Anno: #{alias =>
                 #{1 => [125,'Lc'],
                   2 => [124,'Acc0'],
                   198 => [126,'Es'],
                   199 => [127,'_Anno']},
             literals => []}
  _348 = debug_line `184`

  %% beam_debug_info_SUITE.erl:377
  _349 = call (`extract_body`/3), _198, _1, _2
  _422 = succeeded:body _349
  br _422, ^422, ^1

422:
  ret _349

445:
  %% beam_debug_info_SUITE.erl:297
  %% Anno: #{alias =>
                 #{1 => [189,'_Lc'],
                   2 => [188,'Acc'],
                   198 => [190,'Es'],
                   199 => "1"},
             literals => []}
  _366 = debug_line `140`

  %% beam_debug_info_SUITE.erl:297
  _367 = call (`extract_args`/2), _198, _2
  _405 = succeeded:body _367
  br _405, ^405, ^1

405:
  ret _367

446:
  %% beam_debug_info_SUITE.erl:295
  %% Anno: #{alias =>
                 #{1 => [192,'_Lc'],2 => [191,'Acc'],198 => "0",199 => "/"},
             literals => []}
  _368 = debug_line `139`
  ret _2

559:
  _222 = get_tuple_element _0, `0`
  _469 = bif:'=:=' _222, `nil`
  br _469, ^468, ^382

468:
  %% beam_debug_info_SUITE.erl:307
  %% Anno: #{alias => #{1 => [179,'_Lc'],2 => [178,'Acc'],221 => ";"},
             literals => []}
  _320 = debug_line `148`
  ret _2

382:
  %% beam_debug_info_SUITE.erl:281
  %% Anno: #{inlined => {'-inlined-extract_src_vars/3-',3}}
  _378 = match_fail `function_clause`, _0, _1, _2
  _564 = succeeded:body _378
  br _564, ^564, ^1

564:
  ret _378

1:
  _379 = call (`erlang`:`error`/1), `badarg`
  ret _379
}

%% beam_debug_info_SUITE.erl:426
%% Counter = 21
function `beam_debug_info_SUITE`:`is_generator`(_0) {
0:
  %% beam_debug_info_SUITE.erl:426
  %% Anno: #{alias => #{},literals => []}
  _3 = debug_line `213`
  switch _0, ^14, [
    { `b_generate`, ^16 },
    { `b_generate_strict`, ^19 },
    { `generate`, ^15 },
    { `generate_strict`, ^18 },
    { `m_generate`, ^17 },
    { `m_generate_strict`, ^20 }
  ]

20:
  %% beam_debug_info_SUITE.erl:431
  %% Anno: #{alias => #{},literals => []}
  _4 = debug_line `219`
  ret `true`

17:
  %% beam_debug_info_SUITE.erl:428
  %% Anno: #{alias => #{},literals => []}
  _7 = debug_line `216`
  ret `true`

18:
  %% beam_debug_info_SUITE.erl:429
  %% Anno: #{alias => #{},literals => []}
  _6 = debug_line `217`
  ret `true`

15:
  %% beam_debug_info_SUITE.erl:426
  %% Anno: #{alias => #{},literals => []}
  _9 = debug_line `214`
  ret `true`

19:
  %% beam_debug_info_SUITE.erl:430
  %% Anno: #{alias => #{},literals => []}
  _5 = debug_line `218`
  ret `true`

16:
  %% beam_debug_info_SUITE.erl:427
  %% Anno: #{alias => #{},literals => []}
  _8 = debug_line `215`
  ret `true`

14:
  %% beam_debug_info_SUITE.erl:432
  %% Anno: #{alias => #{0 => [2]},literals => []}
  _10 = debug_line `220`
  ret `false`
}

%% beam_debug_info_SUITE.erl:434
%% Counter = 68
function `beam_debug_info_SUITE`:`extract_cs`(_0, _1, _2) {
0:
  %% beam_debug_info_SUITE.erl:434
  %% Anno: #{alias => #{},literals => []}
  _23 = debug_line `221`
  _65 = is_nonempty_list _0
  br _65, ^65, ^41

65:
  _16 = get_hd _0
  _15 = get_tl _0
  _62 = bif:is_tuple _16
  br _62, ^62, ^40

62:
  _63 = bif:tuple_size _16
  _64 = bif:'=:=' _63, `5`
  br _64, ^61, ^40

61:
  _21 = get_tuple_element _16, `0`
  _19 = get_tuple_element _16, `2`
  _18 = get_tuple_element _16, `3`
  _17 = get_tuple_element _16, `4`
  _60 = bif:'=:=' _21, `clause`
  br _60, ^59, ^40

59:
  %% beam_debug_info_SUITE.erl:435
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => ['Acc0'],
                   15 => ['Cs'],
                   17 => ['Body'],
                   18 => ['Gs'],
                   19 => ['Pats'],
                   20 => "\r"},
             literals => []}
  _25 = debug_line `222`
  switch _1, ^43, [
    { `false`, ^46 },
    { `true`, ^47 }
  ]

47:
  %% beam_debug_info_SUITE.erl:435
  _3 = call (`any_debug_line_instrs`/1), _17
  _44 = succeeded:body _3
  br _44, ^44, ^1

44:
  %% beam_debug_info_SUITE.erl:435
  _26 = bif:'not' _3
  _45 = succeeded:body _26
  br _45, ^45, ^1

45:
  br ^42

46:
  br ^42

43:
  _22 = put_tuple `badarg`, _1

  %% beam_debug_info_SUITE.erl:435
  _27 = call (`erlang`:`error`/1), _22
  _48 = succeeded:body _27
  br _48, ^48, ^1

48:
  br ^42

42:
  _5 = phi { _26, ^45 }, { `false`, ^46 }, { _27, ^48 }
  switch _5, ^50, [
    { `false`, ^57 },
    { `true`, ^56 }
  ]

56:
  %% beam_debug_info_SUITE.erl:437
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => ['Acc0'],
                   15 => ['Cs'],
                   17 => ['Body'],
                   18 => ['Gs'],
                   19 => ['Pats'],
                   20 => "\r"},
             literals => []}
  _33 = debug_line `223`

  %% beam_debug_info_SUITE.erl:437
  _34 = call (`extract_cs`/3), _15, _1, _2
  _51 = succeeded:body _34
  br _51, ^51, ^1

51:
  ret _34

57:
  %% beam_debug_info_SUITE.erl:439
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => ['Acc0'],
                   15 => ['Cs'],
                   17 => ['Body'],
                   18 => ['Gs'],
                   19 => ['Pats'],
                   20 => "\r"},
             literals => []}
  _28 = debug_line `224`

  %% beam_debug_info_SUITE.erl:439
  Acc1 = call (`extract_args`/2), _19, _2
  _52 = succeeded:body Acc1
  br _52, ^52, ^1

52:
  %% beam_debug_info_SUITE.erl:440
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => ['Acc0'],
                   15 => ['Cs'],
                   17 => ['Body'],
                   18 => ['Gs'],
                   19 => ['Pats'],
                   20 => "\r"},
             literals => []}
  _29 = debug_line `225`

  %% beam_debug_info_SUITE.erl:440
  Acc2 = call (`extract_guards`/2), _18, Acc1
  _53 = succeeded:body Acc2
  br _53, ^53, ^1

53:
  %% beam_debug_info_SUITE.erl:441
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => ['Acc0'],
                   15 => ['Cs'],
                   17 => ['Body'],
                   18 => ['Gs'],
                   19 => ['Pats'],
                   20 => "\r"},
             literals => []}
  _30 = debug_line `226`

  %% beam_debug_info_SUITE.erl:441
  Acc3 = call (`extract_body`/3), _17, _1, Acc2
  _54 = succeeded:body Acc3
  br _54, ^54, ^1

54:
  %% beam_debug_info_SUITE.erl:442
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => ['Acc0'],
                   15 => ['Cs'],
                   17 => ['Body'],
                   18 => ['Gs'],
                   19 => ['Pats'],
                   20 => "\r"},
             literals => []}
  _31 = debug_line `227`

  %% beam_debug_info_SUITE.erl:442
  _32 = call (`extract_cs`/3), _15, _1, Acc3
  _55 = succeeded:body _32
  br _55, ^55, ^1

55:
  ret _32

50:
  %% beam_debug_info_SUITE.erl:435
  _35 = match_fail `case_clause`, _5
  _58 = succeeded:body _35
  br _58, ^58, ^1

58:
  ret _35

41:
  _66 = bif:'=:=' _0, `[]`
  br _66, ^66, ^40

66:
  %% beam_debug_info_SUITE.erl:445
  %% Anno: #{alias => #{1 => [14],2 => ['Acc']},literals => []}
  _24 = debug_line `228`
  ret _2

40:
  %% beam_debug_info_SUITE.erl:434
  %% Anno: #{inlined => {'-inlined-extract_cs/3-',3}}
  _36 = match_fail `function_clause`, _0, _1, _2
  _67 = succeeded:body _36
  br _67, ^67, ^1

67:
  ret _36

1:
  _37 = call (`erlang`:`error`/1), `badarg`
  ret _37
}

%% beam_debug_info_SUITE.erl:447
%% Counter = 56
function `beam_debug_info_SUITE`:`extract_body`(_0, _1, _2) {
0:
  %% beam_debug_info_SUITE.erl:447
  %% Anno: #{alias => #{},literals => []}
  _18 = debug_line `229`
  _53 = is_nonempty_list _0
  br _53, ^53, ^35

53:
  _15 = get_hd _0
  _14 = get_tl _0
  _50 = bif:'=:=' _14, `[]`
  br _50, ^50, ^36

50:
  %% beam_debug_info_SUITE.erl:448
  %% Anno: #{alias => #{1 => [12,'Lc'],2 => [11,'Acc'],15 => [13,'I']},
             literals => []}
  _20 = debug_line `230`
  switch _1, ^38, [
    { `false`, ^41 },
    { `true`, ^42 }
  ]

42:
  %% beam_debug_info_SUITE.erl:448
  _3 = call (`any_debug_line_instrs`/1), _15
  _39 = succeeded:body _3
  br _39, ^39, ^1

39:
  %% beam_debug_info_SUITE.erl:448
  _21 = bif:'not' _3
  _40 = succeeded:body _21
  br _40, ^40, ^1

40:
  br ^37

41:
  br ^37

38:
  _17 = put_tuple `badarg`, _1

  %% beam_debug_info_SUITE.erl:448
  _22 = call (`erlang`:`error`/1), _17
  _43 = succeeded:body _22
  br _43, ^43, ^1

43:
  br ^37

37:
  _5 = phi { _21, ^40 }, { `false`, ^41 }, { _22, ^43 }
  switch _5, ^45, [
    { `false`, ^48 },
    { `true`, ^47 }
  ]

47:
  %% beam_debug_info_SUITE.erl:450
  %% Anno: #{alias => #{1 => [12,'Lc'],2 => [11,'Acc'],15 => [13,'I']},
             literals => []}
  _25 = debug_line `231`
  ret _2

48:
  %% beam_debug_info_SUITE.erl:452
  %% Anno: #{alias => #{1 => [12,'Lc'],2 => [11,'Acc'],15 => [13,'I']},
             literals => []}
  _23 = debug_line `232`

  %% beam_debug_info_SUITE.erl:452
  _24 = call (`extract_src_vars`/3), _15, _1, _2
  _46 = succeeded:body _24
  br _46, ^46, ^1

46:
  ret _24

45:
  %% beam_debug_info_SUITE.erl:448
  _26 = match_fail `case_clause`, _5
  _49 = succeeded:body _26
  br _49, ^49, ^1

49:
  ret _26

36:
  %% beam_debug_info_SUITE.erl:455
  %% Anno: #{alias => #{1 => ['Lc'],2 => ['Acc0'],14 => ['Is'],15 => ['I']},
             literals => []}
  _27 = debug_line `233`

  %% beam_debug_info_SUITE.erl:455
  _16 = call (`extract_src_vars`/3), _15, `false`, _2
  _51 = succeeded:body _16
  br _51, ^51, ^1

51:
  %% beam_debug_info_SUITE.erl:456
  %% Anno: #{alias =>
                 #{1 => ['Lc'],
                   2 => ['Acc0'],
                   14 => ['Is'],
                   15 => ['I'],
                   16 => ['Acc']},
             literals => []}
  _28 = debug_line `234`

  %% beam_debug_info_SUITE.erl:456
  _29 = call (`extract_body`/3), _14, _1, _16
  _52 = succeeded:body _29
  br _52, ^52, ^1

52:
  ret _29

35:
  _54 = bif:'=:=' _0, `[]`
  br _54, ^54, ^34

54:
  %% beam_debug_info_SUITE.erl:457
  %% Anno: #{alias => #{1 => ['_Lc'],2 => ['Acc']},literals => []}
  _19 = debug_line `235`
  ret _2

34:
  %% beam_debug_info_SUITE.erl:447
  %% Anno: #{inlined => {'-inlined-extract_body/3-',3}}
  _30 = match_fail `function_clause`, _0, _1, _2
  _55 = succeeded:body _30
  br _55, ^55, ^1

55:
  ret _30

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  ret _31
}

%% beam_debug_info_SUITE.erl:459
%% Counter = 23
function `beam_debug_info_SUITE`:`extract_args`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:459
  %% Anno: #{alias => #{},literals => []}
  _8 = debug_line `236`
  _20 = is_nonempty_list _0
  br _20, ^20, ^17

20:
  _7 = get_hd _0
  _6 = get_tl _0

  %% beam_debug_info_SUITE.erl:460
  %% Anno: #{alias => #{1 => [5,'Acc'],6 => ['As'],7 => ['A']},literals => []}
  _10 = debug_line `237`

  %% beam_debug_info_SUITE.erl:460
  _2 = call (`extract_src_vars`/3), _7, `false`, _1
  _18 = succeeded:body _2
  br _18, ^18, ^1

18:
  %% beam_debug_info_SUITE.erl:460
  _11 = call (`extract_args`/2), _6, _2
  _19 = succeeded:body _11
  br _19, ^19, ^1

19:
  ret _11

17:
  _21 = bif:'=:=' _0, `[]`
  br _21, ^21, ^16

21:
  %% beam_debug_info_SUITE.erl:461
  %% Anno: #{alias => #{1 => ['Acc']},literals => []}
  _9 = debug_line `238`
  ret _1

16:
  %% beam_debug_info_SUITE.erl:459
  %% Anno: #{inlined => {'-inlined-extract_args/2-',2}}
  _12 = match_fail `function_clause`, _0, _1
  _22 = succeeded:body _12
  br _22, ^22, ^1

22:
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  ret _13
}

%% beam_debug_info_SUITE.erl:463
%% Counter = 23
function `beam_debug_info_SUITE`:`extract_guards`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:463
  %% Anno: #{alias => #{},literals => []}
  _8 = debug_line `239`
  _20 = is_nonempty_list _0
  br _20, ^20, ^17

20:
  _7 = get_hd _0
  _6 = get_tl _0

  %% beam_debug_info_SUITE.erl:464
  %% Anno: #{alias => #{1 => [5,'Acc'],6 => ['As'],7 => ['A']},literals => []}
  _10 = debug_line `240`

  %% beam_debug_info_SUITE.erl:464
  _2 = call (`extract_args`/2), _7, _1
  _18 = succeeded:body _2
  br _18, ^18, ^1

18:
  %% beam_debug_info_SUITE.erl:464
  _11 = call (`extract_guards`/2), _6, _2
  _19 = succeeded:body _11
  br _19, ^19, ^1

19:
  ret _11

17:
  _21 = bif:'=:=' _0, `[]`
  br _21, ^21, ^16

21:
  %% beam_debug_info_SUITE.erl:465
  %% Anno: #{alias => #{1 => ['Acc']},literals => []}
  _9 = debug_line `241`
  ret _1

16:
  %% beam_debug_info_SUITE.erl:463
  %% Anno: #{inlined => {'-inlined-extract_guards/2-',2}}
  _12 = match_fail `function_clause`, _0, _1
  _22 = succeeded:body _12
  br _22, ^22, ^1

22:
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  ret _13
}

%% beam_debug_info_SUITE.erl:467
%% Counter = 39
function `beam_debug_info_SUITE`:`extract_sv_qs`(_0) {
0:
  %% beam_debug_info_SUITE.erl:467
  %% Anno: #{alias => #{},literals => []}
  _16 = debug_line `242`
  _38 = is_nonempty_list _0
  br _38, ^38, ^23

38:
  _6 = get_hd _0
  _5 = get_tl _0
  _35 = bif:is_tuple _6
  br _35, ^35, ^23

35:
  _36 = bif:tuple_size _6
  _37 = bif:'=:=' _36, `3`
  br _37, ^34, ^23

34:
  _9 = get_tuple_element _6, `0`
  _8 = get_tuple_element _6, `1`
  _7 = get_tuple_element _6, `2`
  _33 = bif:'=:=' _9, `block`
  br _33, ^32, ^23

32:
  _31 = is_nonempty_list _7
  br _31, ^31, ^23

31:
  _11 = get_hd _7
  _10 = get_tl _7
  _28 = bif:is_tuple _11
  br _28, ^28, ^23

28:
  _29 = bif:tuple_size _11
  _30 = bif:'=:=' _29, `3`
  br _30, ^27, ^23

27:
  _14 = get_tuple_element _11, `0`
  _26 = bif:'=:=' _14, `executable_line`
  br _26, ^25, ^23

25:
  %% beam_debug_info_SUITE.erl:470
  %% Anno: #{alias =>
                 #{5 => ['Qs1'],
                   8 => ['BlkL'],
                   10 => ['Bs'],
                   12 => [4],
                   13 => [3]},
             literals => []}
  _17 = debug_line `243`

  %% beam_debug_info_SUITE.erl:470
  _1 = call (`extract_sv_qs_1`/1), _5
  _24 = succeeded:body _1
  br _24, ^24, ^1

24:
  _15 = put_tuple `block`, _8, _10
  _18 = put_list _15, _1
  ret _18

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  ret _20

23:
  %% beam_debug_info_SUITE.erl:471
  %% Anno: #{alias => #{0 => ['Qs']},literals => []}
  _19 = debug_line `244`
  ret _0
}

%% beam_debug_info_SUITE.erl:473
%% Counter = 36
function `beam_debug_info_SUITE`:`extract_sv_qs_1`(_0) {
0:
  %% beam_debug_info_SUITE.erl:473
  %% Anno: #{alias => #{},literals => []}
  _11 = debug_line `245`
  _33 = is_nonempty_list _0
  br _33, ^33, ^24

33:
  _7 = get_hd _0
  _6 = get_tl _0

  %% beam_debug_info_SUITE.erl:474
  %% Anno: #{alias => #{6 => ['Qs'],7 => ['Q']},literals => []}
  _13 = debug_line `246`

  %% beam_debug_info_SUITE.erl:474
  _8 = call (`abstr_extract_debug_lines`/2), _6, `[]`
  _25 = succeeded:body _8
  br _25, ^25, ^1

25:
  _30 = is_nonempty_list _8
  br _30, ^30, ^28

30:
  _10 = get_hd _8
  _9 = get_tl _8

  %% beam_debug_info_SUITE.erl:478
  %% Anno: #{alias => #{6 => ['Qs'],7 => ['Q'],9 => [5],10 => [4]},
             literals => []}
  _16 = debug_line `248`

  %% beam_debug_info_SUITE.erl:478
  _1 = call (`extract_sv_qs_1`/1), _6
  _29 = succeeded:body _1
  br _29, ^29, ^1

29:
  _17 = put_list _7, _1
  ret _17

28:
  _31 = bif:'=:=' _8, `[]`
  br _31, ^31, ^27

31:
  %% beam_debug_info_SUITE.erl:476
  %% Anno: #{alias => #{6 => ['Qs'],7 => ['Q']},literals => []}
  _14 = debug_line `247`
  _15 = put_list _7, `[]`
  ret _15

27:
  %% beam_debug_info_SUITE.erl:474
  _18 = match_fail `case_clause`, _8
  _32 = succeeded:body _18
  br _32, ^32, ^1

32:
  ret _18

24:
  _34 = bif:'=:=' _0, `[]`
  br _34, ^34, ^23

34:
  %% beam_debug_info_SUITE.erl:480
  %% Anno: #{alias => #{},literals => []}
  _12 = debug_line `249`
  ret `[]`

23:
  %% beam_debug_info_SUITE.erl:473
  %% Anno: #{inlined => {'-inlined-extract_sv_qs_1/1-',1}}
  _19 = match_fail `function_clause`, _0
  _35 = succeeded:body _19
  br _35, ^35, ^1

35:
  ret _19

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  ret _20
}

%% beam_debug_info_SUITE.erl:482
%% Counter = 9
function `beam_debug_info_SUITE`:`any_debug_line_instrs`(_0) {
0:
  %% beam_debug_info_SUITE.erl:482
  %% Anno: #{alias => #{},literals => []}
  _3 = debug_line `250`

  %% beam_debug_info_SUITE.erl:483
  %% Anno: #{alias => #{0 => ['Abstr']},literals => []}
  _4 = debug_line `251`

  %% beam_debug_info_SUITE.erl:483
  _1 = call (`abstr_extract_debug_lines`/2), _0, `[]`
  _8 = succeeded:body _1
  br _8, ^8, ^1

8:
  %% beam_debug_info_SUITE.erl:483
  _5 = bif:'=/=' _1, `[]`
  ret _5

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  ret _6
}

%% beam_debug_info_SUITE.erl:488
%% Counter = 55
function `beam_debug_info_SUITE`:`abstr_debug_lines`(_0) {
0:
  %% beam_debug_info_SUITE.erl:488
  %% Anno: #{alias => #{},literals => []}
  _28 = debug_line `252`

  %% beam_debug_info_SUITE.erl:489
  %% Anno: #{alias => #{0 => ['Abstr']},literals => []}
  _29 = debug_line `253`

  %% beam_debug_info_SUITE.erl:490
  %% Anno: #{alias => #{0 => ['Abstr']},literals => []}
  _30 = debug_line `254`
  br ^48

48:
  %% beam_debug_info_SUITE.erl:490
  _34 = call (`'-abstr_debug_lines/1-lc$^0/1-0-'`/1), _0
  _46 = succeeded:body _34
  br _46, ^46, ^1

46:
  br ^44

44:
  _8 = phi { _34, ^46 }

  %% beam_debug_info_SUITE.erl:491
  %% Anno: #{alias => #{0 => ['Abstr'],8 => ['S0']},literals => [{true,16}]}
  _36 = debug_line `255`

  %% beam_debug_info_SUITE.erl:491
  S1 = call (`sofs`:`family`/2), _8, `[{function,[line]}]`
  _50 = succeeded:body S1
  br _50, ^50, ^1

50:
  %% beam_debug_info_SUITE.erl:492
  %% Anno: #{alias => #{0 => ['Abstr'],8 => ['S0']},literals => [{true,16}]}
  _37 = debug_line `256`

  %% beam_debug_info_SUITE.erl:492
  S2 = call (`sofs`:`family_to_relation`/1), S1
  _51 = succeeded:body S2
  br _51, ^51, ^1

51:
  %% beam_debug_info_SUITE.erl:493
  %% Anno: #{alias => #{0 => ['Abstr'],8 => ['S0']},literals => [{true,16}]}
  _38 = debug_line `257`

  %% beam_debug_info_SUITE.erl:493
  S3 = call (`sofs`:`converse`/1), S2
  _52 = succeeded:body S3
  br _52, ^52, ^1

52:
  %% beam_debug_info_SUITE.erl:494
  %% Anno: #{alias => #{0 => ['Abstr'],8 => ['S0']},literals => [{true,16}]}
  _39 = debug_line `258`

  %% beam_debug_info_SUITE.erl:494
  S4 = call (`sofs`:`to_external`/1), S3
  _53 = succeeded:body S4
  br _53, ^53, ^1

53:
  %% beam_debug_info_SUITE.erl:495
  %% Anno: #{alias => #{0 => ['Abstr'],8 => ['S0']},literals => [{true,16}]}
  _40 = debug_line `259`

  %% beam_debug_info_SUITE.erl:495
  _41 = call (`maps`:`from_list`/1), S4
  _54 = succeeded:body _41
  br _54, ^54, ^1

54:
  ret _41

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  ret _42
}

%% beam_debug_info_SUITE.erl:497
%% Counter = 8
function `beam_debug_info_SUITE`:`abstr_extract_debug_lines`(_0) {
0:
  %% beam_debug_info_SUITE.erl:497
  %% Anno: #{alias => #{},literals => []}
  _2 = debug_line `260`

  %% beam_debug_info_SUITE.erl:498
  %% Anno: #{alias => #{0 => ['Abstr']},literals => []}
  _3 = debug_line `261`

  %% beam_debug_info_SUITE.erl:498
  _4 = call (`abstr_extract_debug_lines`/2), _0, `[]`
  _7 = succeeded:body _4
  br _7, ^7, ^1

7:
  ret _4

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  ret _5
}

%% beam_debug_info_SUITE.erl:500
%% Counter = 42
function `beam_debug_info_SUITE`:`abstr_extract_debug_lines`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:500
  %% Anno: #{alias => #{},literals => []}
  _15 = debug_line `262`
  _31 = is_nonempty_list _0
  br _31, ^31, ^28

31:
  _11 = get_hd _0
  _10 = get_tl _0

  %% beam_debug_info_SUITE.erl:503
  %% Anno: #{alias => #{1 => [8,'Acc0'],10 => ['T'],11 => ['H']},
             literals => []}
  _18 = debug_line `264`

  %% beam_debug_info_SUITE.erl:503
  Acc1 = call (`abstr_extract_debug_lines`/2), _11, _1
  _29 = succeeded:body Acc1
  br _29, ^29, ^1

29:
  %% beam_debug_info_SUITE.erl:504
  %% Anno: #{alias => #{1 => [8,'Acc0'],10 => ['T'],11 => ['H']},
             literals => []}
  _19 = debug_line `265`

  %% beam_debug_info_SUITE.erl:504
  _20 = call (`abstr_extract_debug_lines`/2), _10, Acc1
  _30 = succeeded:body _20
  br _30, ^30, ^1

30:
  ret _20

28:
  _35 = bif:is_tuple _0
  br _35, ^35, ^27

35:
  _36 = bif:tuple_size _0
  _37 = bif:'=:=' _36, `3`
  br _37, ^34, ^27

34:
  _14 = get_tuple_element _0, `0`
  _12 = get_tuple_element _0, `2`
  _33 = bif:'=:=' _14, `debug_line`
  br _33, ^32, ^27

32:
  %% beam_debug_info_SUITE.erl:501
  %% Anno: #{alias => #{1 => [9,'Acc'],12 => ['Index'],13 => [6]},
             literals => []}
  _16 = debug_line `263`
  _17 = put_list _12, _1
  ret _17

27:
  _39 = bif:is_tuple _0
  br _39, ^39, ^38

39:
  %% beam_debug_info_SUITE.erl:506
  %% Anno: #{alias => #{0 => ['Tuple'],1 => ['Acc0']},literals => []}
  _21 = debug_line `266`

  %% beam_debug_info_SUITE.erl:506
  _3 = call (`erlang`:`tuple_to_list`/1), _0
  _40 = succeeded:body _3
  br _40, ^40, ^1

40:
  %% beam_debug_info_SUITE.erl:506
  _22 = call (`abstr_extract_debug_lines`/2), _3, _1
  _41 = succeeded:body _22
  br _41, ^41, ^1

41:
  ret _22

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  ret _24

38:
  %% beam_debug_info_SUITE.erl:507
  %% Anno: #{alias => #{0 => [7],1 => ['Acc']},literals => []}
  _23 = debug_line `267`
  ret _1
}

%% beam_debug_info_SUITE.erl:513
%% Counter = 279
function `beam_debug_info_SUITE`:`get_debug_info`(_0, _1) {
0:
  %% beam_debug_info_SUITE.erl:513
  %% Anno: #{alias => #{},literals => []}
  _125 = debug_line `268`

  %% beam_debug_info_SUITE.erl:514
  %% Anno: #{alias => #{0 => ['Mod'],1 => ['Beam']},literals => []}
  _126 = debug_line `269`

  %% beam_debug_info_SUITE.erl:516
  %% Anno: #{alias => #{0 => ['Mod'],1 => ['Beam']},literals => []}
  _127 = debug_line `270`

  %% beam_debug_info_SUITE.erl:516
  _48 = call (`beam_lib`:`chunks`/2), _1, `["DbgB",atoms,"Line"]`
  _175 = succeeded:body _48
  br _175, ^175, ^1

175:
  _275 = bif:is_tuple _48
  br _275, ^275, ^177

275:
  _276 = bif:tuple_size _48
  _277 = bif:'=:=' _276, `2`
  br _277, ^274, ^177

274:
  _50 = get_tuple_element _48, `0`
  _49 = get_tuple_element _48, `1`
  _273 = bif:'=:=' _50, `ok`
  br _273, ^272, ^177

272:
  _269 = bif:is_tuple _49
  br _269, ^269, ^177

269:
  _270 = bif:tuple_size _49
  _271 = bif:'=:=' _270, `2`
  br _271, ^268, ^177

268:
  _52 = get_tuple_element _49, `0`
  _51 = get_tuple_element _49, `1`
  _267 = is_nonempty_list _51
  br _267, ^267, ^177

267:
  _54 = get_hd _51
  _53 = get_tl _51
  _264 = bif:is_tuple _54
  br _264, ^264, ^177

264:
  _265 = bif:tuple_size _54
  _266 = bif:'=:=' _265, `2`
  br _266, ^263, ^177

263:
  _56 = get_tuple_element _54, `0`
  _55 = get_tuple_element _54, `1`
  _262 = bif:'=:=' _56, `"DbgB"`
  br _262, ^262, ^177

262:
  _261 = is_nonempty_list _53
  br _261, ^261, ^177

261:
  _58 = get_hd _53
  _57 = get_tl _53
  _258 = bif:is_tuple _58
  br _258, ^258, ^177

258:
  _259 = bif:tuple_size _58
  _260 = bif:'=:=' _259, `2`
  br _260, ^257, ^177

257:
  _60 = get_tuple_element _58, `0`
  _59 = get_tuple_element _58, `1`
  _256 = bif:'=:=' _60, `atoms`
  br _256, ^255, ^177

255:
  _254 = is_nonempty_list _57
  br _254, ^254, ^177

254:
  _62 = get_hd _57
  _61 = get_tl _57
  _251 = bif:is_tuple _62
  br _251, ^251, ^177

251:
  _252 = bif:tuple_size _62
  _253 = bif:'=:=' _252, `2`
  br _253, ^250, ^177

250:
  _64 = get_tuple_element _62, `0`
  _63 = get_tuple_element _62, `1`
  _249 = bif:'=:=' _64, `"Line"`
  br _249, ^249, ^177

249:
  _248 = bif:'=:=' _61, `[]`
  br _248, ^248, ^177

248:
  _178 = bif:'=:=' _52, _0
  br _178, ^178, ^177

178:
  %% beam_debug_info_SUITE.erl:517
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0']},
             literals => []}
  _128 = debug_line `271`

  %% beam_debug_info_SUITE.erl:517
  Atoms = call (`maps`:`from_list`/1), _59
  _179 = succeeded:body Atoms
  br _179, ^179, ^1

179:
  %% beam_debug_info_SUITE.erl:518
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0']},
             literals => []}
  _129 = debug_line `272`

  %% beam_debug_info_SUITE.erl:518
  _65 = call (`beam_lib`:`chunks`/2), _1, `["LitT"]`
  _180 = succeeded:body _65
  br _180, ^180, ^1

180:
  _202 = bif:is_tuple _65
  br _202, ^202, ^182

202:
  _203 = bif:tuple_size _65
  switch _203, ^182, [
    { `2`, ^200 },
    { `3`, ^201 }
  ]

201:
  _76 = get_tuple_element _65, `0`
  _199 = bif:'=:=' _76, `error`
  br _199, ^198, ^182

198:
  %% beam_debug_info_SUITE.erl:522
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   74 => ".",75 => "-"},
             literals => []}
  _130 = debug_line `274`
  br ^181

200:
  _67 = get_tuple_element _65, `0`
  _66 = get_tuple_element _65, `1`
  _197 = bif:'=:=' _67, `ok`
  br _197, ^196, ^182

196:
  _193 = bif:is_tuple _66
  br _193, ^193, ^182

193:
  _194 = bif:tuple_size _66
  _195 = bif:'=:=' _194, `2`
  br _195, ^192, ^182

192:
  _69 = get_tuple_element _66, `0`
  _68 = get_tuple_element _66, `1`
  _191 = is_nonempty_list _68
  br _191, ^191, ^182

191:
  _71 = get_hd _68
  _70 = get_tl _68
  _188 = bif:is_tuple _71
  br _188, ^188, ^182

188:
  _189 = bif:tuple_size _71
  _190 = bif:'=:=' _189, `2`
  br _190, ^187, ^182

187:
  _73 = get_tuple_element _71, `0`
  _72 = get_tuple_element _71, `1`
  _186 = bif:'=:=' _73, `"LitT"`
  br _186, ^186, ^182

186:
  _185 = bif:'=:=' _70, `[]`
  br _185, ^185, ^182

185:
  _183 = bif:'=:=' _69, _0
  br _183, ^183, ^182

183:
  %% beam_debug_info_SUITE.erl:520
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   69 => ",",
                   72 => ['Literals0']},
             literals => []}
  _131 = debug_line `273`

  %% beam_debug_info_SUITE.erl:520
  _132 = call (`decode_literal_table`/1), _72
  _184 = succeeded:body _132
  br _184, ^184, ^1

184:
  br ^181

182:
  %% beam_debug_info_SUITE.erl:518
  _133 = match_fail `case_clause`, _65
  _204 = succeeded:body _133
  br _204, ^204, ^1

204:
  br ^181

181:
  _5 = phi { _132, ^184 }, { `[]`, ^198 }, { _133, ^204 }

  %% beam_debug_info_SUITE.erl:524
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0']},
             literals => []}
  _134 = debug_line `275`

  %% beam_debug_info_SUITE.erl:524
  Op = call (`beam_opcodes`:`opcode`/2), `call`, `2`
  _205 = succeeded:body Op
  br _205, ^205, ^1

205:
  %% beam_debug_info_SUITE.erl:525
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0']},
             literals => []}
  _135 = debug_line `276`
  _77 = bs_start_match `new`, _55
  _246 = succeeded:guard _77
  br _246, ^246, ^207

246:
  %% beam_debug_info_SUITE.erl:525
  _78 = bs_match `integer`, _77, `[unsigned,big]`, `32`, `1`
  _208 = succeeded:guard _78
  br _208, ^208, ^207

208:
  _79 = bs_extract _78

  %% beam_debug_info_SUITE.erl:525
  _80 = bs_match `integer`, _78, `[unsigned,big]`, `32`, `1`
  _209 = succeeded:guard _80
  br _209, ^209, ^207

209:
  _81 = bs_extract _80

  %% beam_debug_info_SUITE.erl:525
  _82 = bs_match `integer`, _80, `[unsigned,big]`, `32`, `1`
  _210 = succeeded:guard _82
  br _210, ^210, ^207

210:
  _83 = bs_extract _82

  %% beam_debug_info_SUITE.erl:525
  _84 = bs_match `binary`, _82, `[unsigned,big]`, `all`, `8`
  _211 = succeeded:guard _84
  br _211, ^211, ^207

211:
  _85 = bs_extract _84

  %% beam_debug_info_SUITE.erl:529
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1']},
             literals => []}
  _136 = debug_line `277`
  _244 = bif:'=:=' _79, `0`
  br _244, ^243, ^213

243:
  %% beam_debug_info_SUITE.erl:530
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1']},
             literals => []}
  _137 = debug_line `278`

  %% beam_debug_info_SUITE.erl:530
  RawDebugInfo0 = call (`decode_debug_info`/4), _85, _5, Atoms, Op
  _214 = succeeded:body RawDebugInfo0
  br _214, ^214, ^1

214:
  %% beam_debug_info_SUITE.erl:531
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1']},
             literals => []}
  _138 = debug_line `279`

  %% beam_debug_info_SUITE.erl:531
  _11 = bif:length RawDebugInfo0
  _215 = succeeded:body _11
  br _215, ^215, ^1

215:
  %% beam_debug_info_SUITE.erl:531
  _12 = call (`lists`:`seq`/2), `1`, _11
  _216 = succeeded:body _12
  br _216, ^216, ^1

216:
  %% beam_debug_info_SUITE.erl:531
  RawDebugInfo = call (`lists`:`zip`/2), _12, RawDebugInfo0
  _217 = succeeded:body RawDebugInfo
  br _217, ^217, ^1

217:
  %% beam_debug_info_SUITE.erl:534
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1']},
             literals => []}
  _139 = debug_line `280`

  %% beam_debug_info_SUITE.erl:534
  Lines = call (`decode_line_table`/3), _63, _5, Atoms
  _218 = succeeded:body Lines
  br _218, ^218, ^1

218:
  %% beam_debug_info_SUITE.erl:535
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1']},
             literals => []}
  _140 = debug_line `281`

  %% beam_debug_info_SUITE.erl:535
  _86 = call (`beam_disasm`:`file`/1), _1
  _219 = succeeded:body _86
  br _219, ^219, ^1

219:
  _239 = bif:is_tuple _86
  br _239, ^239, ^221

239:
  _240 = bif:tuple_size _86
  _241 = bif:'=:=' _240, `6`
  br _241, ^238, ^221

238:
  _92 = get_tuple_element _86, `0`
  _91 = get_tuple_element _86, `1`
  _90 = get_tuple_element _86, `2`
  _89 = get_tuple_element _86, `3`
  _88 = get_tuple_element _86, `4`
  _87 = get_tuple_element _86, `5`
  _237 = bif:'=:=' _92, `beam_file`
  br _237, ^236, ^221

236:
  _222 = bif:'=:=' _91, _0
  br _222, ^222, ^221

222:
  %% beam_debug_info_SUITE.erl:536
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1'],
                   87 => ['Fs'],
                   88 => ['_Opts'],
                   89 => ['_Attr'],
                   90 => ['_Exp'],
                   91 => "/"},
             literals => []}
  _141 = debug_line `282`

  %% beam_debug_info_SUITE.erl:537
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1'],
                   87 => ['Fs'],
                   88 => ['_Opts'],
                   89 => ['_Attr'],
                   90 => ['_Exp'],
                   91 => "/"},
             literals => []}
  _142 = debug_line `283`
  br ^227

227:
  %% beam_debug_info_SUITE.erl:537
  _153 = call (`'-get_debug_info/2-lc$^0/1-0-'`/1), _87
  _225 = succeeded:body _153
  br _225, ^225, ^1

225:
  br ^223

223:
  _27 = phi { _153, ^225 }
  DebugMap = call (`maps`:`from_list`/1), _27
  _229 = succeeded:body DebugMap
  br _229, ^229, ^1

229:
  %% beam_debug_info_SUITE.erl:539
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1'],
                   87 => ['Fs'],
                   88 => ['_Opts'],
                   89 => ['_Attr'],
                   90 => ['_Exp'],
                   91 => "/"},
             literals => [{true,93}]}
  _155 = debug_line `285`

  %% beam_debug_info_SUITE.erl:541
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1'],
                   87 => ['Fs'],
                   88 => ['_Opts'],
                   89 => ['_Attr'],
                   90 => ['_Exp'],
                   91 => "/"},
             literals => [{true,93}]}
  _156 = debug_line `287`
  br ^234

234:
  %% beam_debug_info_SUITE.erl:541
  _165 = call (`'-get_debug_info/2-lc$^2/1-2-'`/3), RawDebugInfo, DebugMap, Lines
  _232 = succeeded:body _165
  br _232, ^232, ^1

232:
  br ^230

230:
  _39 = phi { _165, ^232 }

  %% beam_debug_info_SUITE.erl:544
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   5 => ['Literals'],
                   39 => ['CookedDebugInfo'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1'],
                   87 => ['Fs'],
                   88 => ['_Opts'],
                   89 => ['_Attr'],
                   90 => ['_Exp'],
                   91 => "/"},
             literals => [{true,93},{true,114}]}
  _167 = debug_line `289`
  _168 = put_tuple RawDebugInfo, _39
  ret _168

221:
  %% beam_debug_info_SUITE.erl:535
  _169 = match_fail `badmatch`, _86
  _242 = succeeded:body _169
  br _242, ^242, ^1

242:
  ret _169

213:
  %% beam_debug_info_SUITE.erl:529
  _170 = match_fail `badmatch`, _79
  _245 = succeeded:body _170
  br _245, ^245, ^1

245:
  ret _170

207:
  %% beam_debug_info_SUITE.erl:525
  _171 = match_fail `badmatch`, _55
  _247 = succeeded:body _171
  br _247, ^247, ^1

247:
  ret _171

177:
  %% beam_debug_info_SUITE.erl:514
  _172 = match_fail `badmatch`, _48
  _278 = succeeded:body _172
  br _278, ^278, ^1

278:
  ret _172

1:
  _173 = call (`erlang`:`error`/1), `badarg`
  ret _173
}

%% beam_debug_info_SUITE.erl:546
%% Counter = 73
function `beam_debug_info_SUITE`:`decode_line_table`(_0, _1, _2) {
0:
  %% beam_debug_info_SUITE.erl:546
  %% Anno: #{alias => #{},literals => []}
  _39 = debug_line `290`
  _17 = bs_start_match `new`, _0
  _71 = succeeded:guard _17
  br _71, ^71, ^52

71:
  _19 = bs_match `string`, _17, `<<0,0,0,0>>`
  _54 = succeeded:guard _19
  br _54, ^54, ^52

54:
  %% beam_debug_info_SUITE.erl:546
  _20 = bs_match `integer`, _19, `[unsigned,big]`, `32`, `1`
  _55 = succeeded:guard _20
  br _55, ^55, ^52

55:
  _21 = bs_extract _20

  %% beam_debug_info_SUITE.erl:546
  _22 = bs_match `integer`, _20, `[unsigned,big]`, `32`, `1`
  _56 = succeeded:guard _22
  br _56, ^56, ^52

56:
  _23 = bs_extract _22

  %% beam_debug_info_SUITE.erl:546
  _24 = bs_match `integer`, _22, `[unsigned,big]`, `32`, `1`
  _57 = succeeded:guard _24
  br _57, ^57, ^52

57:
  _25 = bs_extract _24

  %% beam_debug_info_SUITE.erl:546
  _26 = bs_match `integer`, _24, `[unsigned,big]`, `32`, `1`
  _58 = succeeded:guard _26
  br _58, ^58, ^52

58:
  _27 = bs_extract _26

  %% beam_debug_info_SUITE.erl:546
  _28 = bs_match `binary`, _26, `[unsigned,big]`, `all`, `8`
  _59 = succeeded:guard _28
  br _59, ^59, ^52

59:
  _29 = bs_extract _28

  %% beam_debug_info_SUITE.erl:549
  %% Anno: #{alias =>
                 #{1 => ['Literals'],
                   2 => ['Atoms'],
                   21 => ['_Bits'],
                   23 => ['_NumIs'],
                   25 => ['NumLines'],
                   27 => ['_NumFnames'],
                   29 => ['Lines0']},
             literals => []}
  _40 = debug_line `291`

  %% beam_debug_info_SUITE.erl:549
  Lines = call (`decode_line_tab_1`/4), _29, _1, _2, _25
  _60 = succeeded:body Lines
  br _60, ^60, ^1

60:
  %% beam_debug_info_SUITE.erl:550
  %% Anno: #{alias =>
                 #{1 => ['Literals'],
                   2 => ['Atoms'],
                   21 => ['_Bits'],
                   23 => ['_NumIs'],
                   25 => ['NumLines'],
                   27 => ['_NumFnames'],
                   29 => ['Lines0']},
             literals => []}
  _41 = debug_line `292`
  br ^68

68:
  %% beam_debug_info_SUITE.erl:550
  _6 = bif:length Lines
  _63 = succeeded:body _6
  br _63, ^63, ^1

63:
  %% beam_debug_info_SUITE.erl:550
  _7 = call (`lists`:`seq`/2), `1`, _6
  _64 = succeeded:body _7
  br _64, ^64, ^1

64:
  %% beam_debug_info_SUITE.erl:550
  _8 = call (`lists`:`zip`/2), _7, Lines
  _65 = succeeded:body _8
  br _65, ^65, ^1

65:
  %% beam_debug_info_SUITE.erl:550
  _45 = call (`'-decode_line_table/3-lc$^0/1-0-'`/1), _8
  _66 = succeeded:body _45
  br _66, ^66, ^1

66:
  br ^61

61:
  _13 = phi { _45, ^66 }
  _47 = call (`maps`:`from_list`/1), _13
  _70 = succeeded:body _47
  br _70, ^70, ^1

70:
  ret _47

52:
  %% beam_debug_info_SUITE.erl:546
  %% Anno: #{inlined => {'-inlined-decode_line_table/3-',3}}
  _48 = match_fail `function_clause`, _0, _1, _2
  _72 = succeeded:body _48
  br _72, ^72, ^1

72:
  ret _48

1:
  _49 = call (`erlang`:`error`/1), `badarg`
  ret _49
}

%% beam_debug_info_SUITE.erl:552
%% Counter = 56
function `beam_debug_info_SUITE`:`decode_line_tab_1`(_0, _1, _2, _3) {
0:
  %% beam_debug_info_SUITE.erl:552
  %% Anno: #{alias => #{},literals => []}
  _19 = debug_line `293`
  _34 = bif:'=:=' _3, `0`
  br _34, ^33, ^32

33:
  %% beam_debug_info_SUITE.erl:553
  %% Anno: #{alias => #{0 => ['_Lines'],1 => ['_Literals'],2 => ['_Atoms']},
             literals => []}
  _20 = debug_line `294`
  ret `[]`

32:
  %% beam_debug_info_SUITE.erl:555
  %% Anno: #{alias =>
                 #{0 => ['Lines0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['N']},
             literals => []}
  _21 = debug_line `295`

  %% beam_debug_info_SUITE.erl:555
  _12 = call (`decode_arg`/3), _0, _1, _2
  _35 = succeeded:body _12
  br _35, ^35, ^1

35:
  _52 = bif:is_tuple _12
  br _52, ^52, ^37

52:
  _53 = bif:tuple_size _12
  _54 = bif:'=:=' _53, `2`
  br _54, ^51, ^37

51:
  _16 = get_tuple_element _12, `0`
  _15 = get_tuple_element _12, `1`
  _45 = bif:is_tuple _16
  br _45, ^45, ^38

45:
  _46 = bif:tuple_size _16
  _47 = bif:'=:=' _46, `2`
  br _47, ^44, ^37

44:
  _18 = get_tuple_element _16, `0`
  _17 = get_tuple_element _16, `1`
  switch _18, ^37, [
    { `atom`, ^43 },
    { `integer`, ^42 }
  ]

42:
  %% beam_debug_info_SUITE.erl:559
  %% Anno: #{alias =>
                 #{0 => ['Lines0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['N'],
                   15 => [13,'Lines1'],
                   17 => ['Line']},
             literals => []}
  _24 = debug_line `297`

  %% beam_debug_info_SUITE.erl:559
  _4 = bif:'-' _3, `1`
  _40 = succeeded:body _4
  br _40, ^40, ^1

40:
  %% beam_debug_info_SUITE.erl:559
  _5 = call (`decode_line_tab_1`/4), _15, _1, _2, _4
  _41 = succeeded:body _5
  br _41, ^41, ^1

41:
  _25 = put_list _17, _5
  ret _25

43:
  %% beam_debug_info_SUITE.erl:557
  %% Anno: #{alias =>
                 #{0 => ['Lines0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['N'],
                   15 => [14,'Lines1'],
                   17 => "\v"},
             literals => []}
  _26 = debug_line `296`

  %% beam_debug_info_SUITE.erl:557
  _27 = call (`decode_line_tab_1`/4), _15, _1, _2, _3
  _39 = succeeded:body _27
  br _39, ^39, ^1

39:
  ret _27

38:
  _50 = bif:'=:=' _16, `nil`
  br _50, ^49, ^37

49:
  %% beam_debug_info_SUITE.erl:561
  %% Anno: #{alias =>
                 #{0 => ['Lines0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['N'],
                   15 => ['Lines1']},
             literals => []}
  _22 = debug_line `298`

  %% beam_debug_info_SUITE.erl:561
  _23 = call (`decode_line_tab_1`/4), _15, _1, _2, _3
  _48 = succeeded:body _23
  br _48, ^48, ^1

48:
  ret _23

37:
  %% beam_debug_info_SUITE.erl:555
  _28 = match_fail `case_clause`, _12
  _55 = succeeded:body _28
  br _55, ^55, ^1

55:
  ret _28

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  ret _29
}

%% beam_debug_info_SUITE.erl:564
%% Counter = 84
function `beam_debug_info_SUITE`:`decode_literal_table`(_0) {
0:
  %% beam_debug_info_SUITE.erl:564
  %% Anno: #{alias => #{},literals => []}
  _62 = debug_line `299`
  _22 = bs_start_match `new`, _0
  _82 = succeeded:guard _22
  br _82, ^82, ^73

82:
  _24 = bs_match `string`, _22, `<<0,0,0,0>>`
  _75 = succeeded:guard _24
  br _75, ^75, ^73

75:
  %% beam_debug_info_SUITE.erl:564
  _25 = bs_match `integer`, _24, `[unsigned,big]`, `32`, `1`
  _76 = succeeded:guard _25
  br _76, ^76, ^73

76:
  _26 = bs_extract _25

  %% beam_debug_info_SUITE.erl:564
  _27 = bs_match `binary`, _25, `[unsigned,big]`, `all`, `8`
  _77 = succeeded:guard _27
  br _77, ^77, ^73

77:
  _28 = bs_extract _27

  %% beam_debug_info_SUITE.erl:565
  %% Anno: #{alias => #{26 => ['N'],28 => ['Tab']},literals => []}
  _63 = debug_line `300`

  %% beam_debug_info_SUITE.erl:566
  %% Anno: #{alias =>
                 #{26 => ['N'],
                   28 => ['Tab'],
                   '-decode_literal_table/1-zlc$^0/2-0-' => [{'zlc$^0',2}]},
             literals => []}
  _67 = debug_line `301`

  %% beam_debug_info_SUITE.erl:566
  _3 = bif:'-' _26, `1`
  _78 = succeeded:body _3
  br _78, ^78, ^1

78:
  %% beam_debug_info_SUITE.erl:566
  _4 = call (`lists`:`seq`/2), `0`, _3
  _79 = succeeded:body _4
  br _79, ^79, ^1

79:
  %% beam_debug_info_SUITE.erl:566
  _12 = call (`'-decode_literal_table/1-zlc$^0/2-0-'`/2), _4, _28
  _80 = succeeded:body _12
  br _80, ^80, ^1

80:
  _68 = call (`maps`:`from_list`/1), _12
  _81 = succeeded:body _68
  br _81, ^81, ^1

81:
  ret _68

73:
  %% beam_debug_info_SUITE.erl:564
  %% Anno: #{inlined => {'-inlined-decode_literal_table/1-',1}}
  _69 = match_fail `function_clause`, _0
  _83 = succeeded:body _69
  br _83, ^83, ^1

83:
  ret _69

1:
  _70 = call (`erlang`:`error`/1), `badarg`
  ret _70
}

%% beam_debug_info_SUITE.erl:569
%% Counter = 88
function `beam_debug_info_SUITE`:`decode_debug_info`(_0, _1, _2, _3) {
0:
  %% beam_debug_info_SUITE.erl:569
  %% Anno: #{alias => #{},literals => []}
  _32 = debug_line `302`

  %% beam_debug_info_SUITE.erl:570
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op']},
             literals => []}
  _33 = debug_line `303`
  _18 = bs_start_match `new`, _0
  _86 = succeeded:guard _18
  br _86, ^86, ^50

86:
  %% beam_debug_info_SUITE.erl:571
  _19 = bs_match `integer`, _18, `[unsigned,big]`, `8`, `1`
  _52 = succeeded:guard _19
  br _52, ^52, ^51

52:
  _20 = bs_extract _19

  %% beam_debug_info_SUITE.erl:571
  _21 = bs_match `binary`, _19, `[unsigned,big]`, `all`, `8`
  _53 = succeeded:guard _21
  br _53, ^53, ^51

53:
  _22 = bs_extract _21
  _54 = bif:'=:=' _20, _3
  br _54, ^54, ^51

54:
  %% beam_debug_info_SUITE.erl:572
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op'],
                   20 => [16],
                   22 => ['Code1']},
             literals => []}
  _35 = debug_line `304`

  %% beam_debug_info_SUITE.erl:572
  _23 = call (`decode_arg`/3), _22, _1, _2
  _55 = succeeded:body _23
  br _55, ^55, ^1

55:
  _81 = bif:is_tuple _23
  br _81, ^81, ^57

81:
  _82 = bif:tuple_size _23
  _83 = bif:'=:=' _82, `2`
  br _83, ^80, ^57

80:
  _25 = get_tuple_element _23, `0`
  _24 = get_tuple_element _23, `1`

  %% beam_debug_info_SUITE.erl:573
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op'],
                   20 => [16],
                   22 => ['Code1'],
                   24 => ['Code2'],
                   25 => ['FrameSize0']},
             literals => []}
  _36 = debug_line `305`
  _61 = bif:'=:=' _25, `{atom,entry}`
  br _61, ^61, ^60

61:
  %% beam_debug_info_SUITE.erl:575
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op'],
                   20 => [16],
                   22 => ['Code1'],
                   24 => ['Code2'],
                   25 => ['FrameSize0']},
             literals => []}
  _38 = debug_line `307`
  br ^58

60:
  _63 = bif:'=:=' _25, `nil`
  br _63, ^62, ^59

62:
  %% beam_debug_info_SUITE.erl:574
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op'],
                   20 => [16],
                   22 => ['Code1'],
                   24 => ['Code2'],
                   25 => ['FrameSize0']},
             literals => []}
  _37 = debug_line `306`
  br ^58

59:
  %% beam_debug_info_SUITE.erl:576
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op'],
                   20 => [16],
                   22 => ['Code1'],
                   24 => ['Code2'],
                   25 => [17,'FrameSize0']},
             literals => []}
  _39 = debug_line `308`
  br ^58

58:
  _6 = phi { _25, ^59 }, { `entry`, ^61 }, { `none`, ^62 }

  %% beam_debug_info_SUITE.erl:578
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op'],
                   6 => ['FrameSize'],
                   20 => [16],
                   22 => ['Code1'],
                   24 => ['Code2'],
                   25 => ['FrameSize0']},
             literals => []}
  _40 = debug_line `309`

  %% beam_debug_info_SUITE.erl:578
  _26 = call (`decode_arg`/3), _24, _1, _2
  _64 = succeeded:body _26
  br _64, ^64, ^1

64:
  _76 = bif:is_tuple _26
  br _76, ^76, ^66

76:
  _77 = bif:tuple_size _26
  _78 = bif:'=:=' _77, `2`
  br _78, ^75, ^66

75:
  _28 = get_tuple_element _26, `0`
  _27 = get_tuple_element _26, `1`
  _72 = bif:is_tuple _28
  br _72, ^72, ^66

72:
  _73 = bif:tuple_size _28
  _74 = bif:'=:=' _73, `2`
  br _74, ^71, ^66

71:
  _30 = get_tuple_element _28, `0`
  _29 = get_tuple_element _28, `1`
  _70 = bif:'=:=' _30, `list`
  br _70, ^69, ^66

69:
  %% beam_debug_info_SUITE.erl:579
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op'],
                   6 => ['FrameSize'],
                   20 => [16],
                   22 => ['Code1'],
                   24 => ['Code2'],
                   25 => ['FrameSize0'],
                   27 => ['Code3'],
                   29 => ['List0']},
             literals => []}
  _41 = debug_line `310`

  %% beam_debug_info_SUITE.erl:579
  List = call (`decode_list`/1), _29
  _67 = succeeded:body List
  br _67, ^67, ^1

67:
  %% beam_debug_info_SUITE.erl:580
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op'],
                   6 => ['FrameSize'],
                   20 => [16],
                   22 => ['Code1'],
                   24 => ['Code2'],
                   25 => ['FrameSize0'],
                   27 => ['Code3'],
                   29 => ['List0']},
             literals => []}
  _42 = debug_line `311`

  %% beam_debug_info_SUITE.erl:580
  _10 = call (`decode_debug_info`/4), _27, _1, _2, _3
  _68 = succeeded:body _10
  br _68, ^68, ^1

68:
  _31 = put_tuple _6, List
  _43 = put_list _31, _10
  ret _43

66:
  %% beam_debug_info_SUITE.erl:578
  _44 = match_fail `badmatch`, _26
  _79 = succeeded:body _44
  br _79, ^79, ^1

79:
  ret _44

57:
  %% beam_debug_info_SUITE.erl:572
  _45 = match_fail `badmatch`, _23
  _84 = succeeded:body _45
  br _84, ^84, ^1

84:
  ret _45

51:
  _85 = bs_test_tail _18, `0`
  br _85, ^85, ^50

85:
  %% beam_debug_info_SUITE.erl:582
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   3 => ['Op']},
             literals => []}
  _34 = debug_line `312`
  ret `[]`

50:
  %% beam_debug_info_SUITE.erl:570
  _46 = match_fail `case_clause`, _0
  _87 = succeeded:body _46
  br _87, ^87, ^1

87:
  ret _46

1:
  _47 = call (`erlang`:`error`/1), `badarg`
  ret _47
}

%% beam_debug_info_SUITE.erl:585
%% Counter = 72
function `beam_debug_info_SUITE`:`decode_list`(_0) {
0:
  %% beam_debug_info_SUITE.erl:585
  %% Anno: #{alias => #{},literals => []}
  _21 = debug_line `313`
  _69 = is_nonempty_list _0
  br _69, ^69, ^43

69:
  _11 = get_hd _0
  _10 = get_tl _0
  _66 = bif:is_tuple _11
  br _66, ^66, ^42

66:
  _67 = bif:tuple_size _11
  _68 = bif:'=:=' _67, `2`
  br _68, ^65, ^42

65:
  _13 = get_tuple_element _11, `0`
  _12 = get_tuple_element _11, `1`
  switch _13, ^42, [
    { `integer`, ^63 },
    { `literal`, ^64 }
  ]

64:
  _62 = is_nonempty_list _10
  br _62, ^62, ^42

62:
  _17 = get_hd _10
  _16 = get_tl _10

  %% beam_debug_info_SUITE.erl:588
  %% Anno: #{alias => #{12 => ['Var'],16 => ['T'],17 => ['Where0']},
             literals => []}
  _23 = debug_line `315`
  _55 = bif:is_tuple _17
  br _55, ^55, ^48

55:
  _56 = bif:tuple_size _17
  _57 = bif:'=:=' _56, `2`
  br _57, ^54, ^47

54:
  _19 = get_tuple_element _17, `0`
  _18 = get_tuple_element _17, `1`
  switch _19, ^47, [
    { `atom`, ^51 },
    { `integer`, ^52 },
    { `literal`, ^53 },
    { `x`, ^49 },
    { `y`, ^50 }
  ]

50:
  %% beam_debug_info_SUITE.erl:594
  %% Anno: #{alias => #{12 => ['Var'],16 => ['T'],17 => ['Where0'],18 => [7]},
             literals => []}
  _25 = debug_line `321`
  br ^46

49:
  %% beam_debug_info_SUITE.erl:593
  %% Anno: #{alias => #{12 => ['Var'],16 => ['T'],17 => ['Where0'],18 => [6]},
             literals => []}
  _26 = debug_line `320`
  br ^46

53:
  %% beam_debug_info_SUITE.erl:589
  %% Anno: #{alias =>
                 #{12 => ['Var'],16 => ['T'],17 => ['Where0'],18 => ['Lit']},
             literals => []}
  _31 = debug_line `316`
  _32 = put_tuple `value`, _18
  br ^46

52:
  %% beam_debug_info_SUITE.erl:591
  %% Anno: #{alias =>
                 #{12 => ['Var'],16 => ['T'],17 => ['Where0'],18 => ['I']},
             literals => []}
  _27 = debug_line `318`
  _28 = put_tuple `value`, _18
  br ^46

51:
  %% beam_debug_info_SUITE.erl:590
  %% Anno: #{alias =>
                 #{12 => ['Var'],16 => ['T'],17 => ['Where0'],18 => ['A']},
             literals => []}
  _29 = debug_line `317`
  _30 = put_tuple `value`, _18
  br ^46

48:
  _59 = bif:'=:=' _17, `nil`
  br _59, ^58, ^47

58:
  %% beam_debug_info_SUITE.erl:592
  %% Anno: #{alias => #{12 => ['Var'],16 => ['T'],17 => ['Where0']},
             literals => []}
  _24 = debug_line `319`
  br ^46

47:
  %% beam_debug_info_SUITE.erl:588
  _33 = match_fail `case_clause`, _17
  _60 = succeeded:body _33
  br _60, ^60, ^1

60:
  br ^46

46:
  _2 = phi { _17, ^49 }, { _17, ^50 }, { _30, ^51 }, { _28, ^52 }, { _32, ^53 }, { `{value,[]}`, ^58 }, { _33, ^60 }

  %% beam_debug_info_SUITE.erl:596
  %% Anno: #{alias =>
                 #{2 => ['Where'],12 => ['Var'],16 => ['T'],17 => ['Where0']},
             literals => []}
  _34 = debug_line `322`

  %% beam_debug_info_SUITE.erl:596
  _4 = call (`decode_list`/1), _16
  _61 = succeeded:body _4
  br _61, ^61, ^1

61:
  _20 = put_tuple _12, _2
  _35 = put_list _20, _4
  ret _35

63:
  _44 = bif:is_integer _12
  br _44, ^44, ^42

44:
  %% beam_debug_info_SUITE.erl:586
  %% Anno: #{alias => #{10 => [9,'T'],12 => [8,'Var']},literals => []}
  _36 = debug_line `314`
  _14 = put_tuple `literal`, _12
  _15 = put_list _14, _10

  %% beam_debug_info_SUITE.erl:586
  _37 = call (`decode_list`/1), _15
  _45 = succeeded:body _37
  br _45, ^45, ^1

45:
  ret _37

43:
  _70 = bif:'=:=' _0, `[]`
  br _70, ^70, ^42

70:
  %% beam_debug_info_SUITE.erl:597
  %% Anno: #{alias => #{},literals => []}
  _22 = debug_line `323`
  ret `[]`

42:
  %% beam_debug_info_SUITE.erl:585
  %% Anno: #{inlined => {'-inlined-decode_list/1-',1}}
  _38 = match_fail `function_clause`, _0
  _71 = succeeded:body _38
  br _71, ^71, ^1

71:
  ret _38

1:
  _39 = call (`erlang`:`error`/1), `badarg`
  ret _39
}

%% beam_debug_info_SUITE.erl:599
%% Counter = 59
function `beam_debug_info_SUITE`:`decode_args`(_0, _1, _2, _3) {
0:
  %% beam_debug_info_SUITE.erl:599
  %% Anno: #{alias => #{},literals => []}
  _21 = debug_line `324`
  _36 = bif:'=:=' _0, `0`
  br _36, ^35, ^34

35:
  %% beam_debug_info_SUITE.erl:600
  %% Anno: #{alias => #{1 => ['Code'],2 => ['_Literals'],3 => ['_Atoms']},
             literals => []}
  _22 = debug_line `325`
  _23 = put_tuple `[]`, _1
  ret _23

34:
  %% beam_debug_info_SUITE.erl:601
  _4 = bif:is_integer _0

  %% beam_debug_info_SUITE.erl:601
  _5 = bif:'>' _0, `0`

  %% beam_debug_info_SUITE.erl:601
  _13 = bif:'and' _4, _5
  _39 = succeeded:guard _13
  br _39, ^39, ^37

39:
  _40 = bif:'=:=' _13, `true`
  br _40, ^40, ^37

40:
  br ^38

38:
  %% beam_debug_info_SUITE.erl:602
  %% Anno: #{alias =>
                 #{0 => ['N'],1 => ['Code0'],2 => ['Literals'],3 => ['Atoms']},
             literals => []}
  _24 = debug_line `326`

  %% beam_debug_info_SUITE.erl:602
  _14 = call (`decode_arg`/3), _1, _2, _3
  _41 = succeeded:body _14
  br _41, ^41, ^1

41:
  _54 = bif:is_tuple _14
  br _54, ^54, ^43

54:
  _55 = bif:tuple_size _14
  _56 = bif:'=:=' _55, `2`
  br _56, ^53, ^43

53:
  _16 = get_tuple_element _14, `0`
  _15 = get_tuple_element _14, `1`

  %% beam_debug_info_SUITE.erl:603
  %% Anno: #{alias =>
                 #{0 => ['N'],
                   1 => ['Code0'],
                   2 => ['Literals'],
                   3 => ['Atoms'],
                   15 => ['Code1'],
                   16 => ['Arg']},
             literals => []}
  _25 = debug_line `327`

  %% beam_debug_info_SUITE.erl:603
  _7 = bif:'-' _0, `1`
  _44 = succeeded:body _7
  br _44, ^44, ^1

44:
  %% beam_debug_info_SUITE.erl:603
  _17 = call (`decode_args`/4), _7, _15, _2, _3
  _45 = succeeded:body _17
  br _45, ^45, ^1

45:
  _49 = bif:is_tuple _17
  br _49, ^49, ^47

49:
  _50 = bif:tuple_size _17
  _51 = bif:'=:=' _50, `2`
  br _51, ^48, ^47

48:
  _19 = get_tuple_element _17, `0`
  _18 = get_tuple_element _17, `1`

  %% beam_debug_info_SUITE.erl:604
  %% Anno: #{alias =>
                 #{0 => ['N'],
                   1 => ['Code0'],
                   2 => ['Literals'],
                   3 => ['Atoms'],
                   15 => ['Code1'],
                   16 => ['Arg'],
                   18 => ['Code2'],
                   19 => ['Args']},
             literals => []}
  _26 = debug_line `328`
  _20 = put_list _16, _19
  _27 = put_tuple _20, _18
  ret _27

47:
  %% beam_debug_info_SUITE.erl:603
  _28 = match_fail `badmatch`, _17
  _52 = succeeded:body _28
  br _52, ^52, ^1

52:
  ret _28

43:
  %% beam_debug_info_SUITE.erl:602
  _29 = match_fail `badmatch`, _14
  _57 = succeeded:body _29
  br _57, ^57, ^1

57:
  ret _29

37:
  %% beam_debug_info_SUITE.erl:599
  %% Anno: #{inlined => {'-inlined-decode_args/4-',4}}
  _30 = match_fail `function_clause`, _0, _1, _2, _3
  _58 = succeeded:body _30
  br _58, ^58, ^1

58:
  ret _30

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  ret _31
}

%% beam_debug_info_SUITE.erl:606
%% Counter = 133
function `beam_debug_info_SUITE`:`decode_arg`(_0, _1, _2) {
0:
  %% beam_debug_info_SUITE.erl:606
  %% Anno: #{alias => #{},literals => []}
  _49 = debug_line `329`

  %% beam_debug_info_SUITE.erl:607
  %% Anno: #{alias => #{0 => ['Code0'],1 => ['Literals'],2 => ['Atoms']},
             literals => []}
  _50 = debug_line `330`

  %% beam_debug_info_SUITE.erl:607
  _19 = call (`decode_raw_arg`/1), _0
  _72 = succeeded:body _19
  br _72, ^72, ^1

72:
  _129 = bif:is_tuple _19
  br _129, ^129, ^74

129:
  _130 = bif:tuple_size _19
  _131 = bif:'=:=' _130, `2`
  br _131, ^128, ^74

128:
  _27 = get_tuple_element _19, `0`
  _26 = get_tuple_element _19, `1`
  _123 = bif:is_tuple _27
  br _123, ^123, ^75

123:
  _124 = bif:tuple_size _27
  _125 = bif:'=:=' _124, `2`
  br _125, ^122, ^74

122:
  _29 = get_tuple_element _27, `0`
  _28 = get_tuple_element _27, `1`
  switch _29, ^74, [
    { `atom`, ^116 },
    { `integer`, ^119 },
    { `u`, ^117 },
    { `x`, ^118 },
    { `y`, ^120 },
    { `z`, ^121 }
  ]

121:
  switch _28, ^74, [
    { `1`, ^114 },
    { `4`, ^115 }
  ]

115:
  %% beam_debug_info_SUITE.erl:621
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   26 => ['Code1']},
             literals => []}
  _52 = debug_line `340`

  %% beam_debug_info_SUITE.erl:621
  _41 = call (`decode_raw_arg`/1), _26
  _99 = succeeded:body _41
  br _99, ^99, ^1

99:
  _110 = bif:is_tuple _41
  br _110, ^110, ^101

110:
  _111 = bif:tuple_size _41
  _112 = bif:'=:=' _111, `2`
  br _112, ^109, ^101

109:
  _45 = get_tuple_element _41, `0`
  _44 = get_tuple_element _41, `1`
  _106 = bif:is_tuple _45
  br _106, ^106, ^101

106:
  _107 = bif:tuple_size _45
  _108 = bif:'=:=' _107, `2`
  br _108, ^105, ^101

105:
  _47 = get_tuple_element _45, `0`
  _46 = get_tuple_element _45, `1`
  _104 = bif:'=:=' _47, `u`
  br _104, ^103, ^101

103:
  %% beam_debug_info_SUITE.erl:622
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   26 => ['Code1'],
                   44 => [42,'Code2'],
                   46 => [43,'N']},
             literals => []}
  _53 = debug_line `341`

  %% beam_debug_info_SUITE.erl:622
  _7 = bif:map_get _46, _1
  _102 = succeeded:body _7
  br _102, ^102, ^1

102:
  _48 = put_tuple `literal`, _7
  _54 = put_tuple _48, _44
  ret _54

101:
  %% beam_debug_info_SUITE.erl:621
  _55 = match_fail `badmatch`, _41
  _113 = succeeded:body _55
  br _113, ^113, ^1

113:
  ret _55

114:
  %% beam_debug_info_SUITE.erl:617
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   26 => [20,'Code1']},
             literals => []}
  _56 = debug_line `337`

  %% beam_debug_info_SUITE.erl:617
  _31 = call (`decode_raw_arg`/1), _26
  _77 = succeeded:body _31
  br _77, ^77, ^1

77:
  _95 = bif:is_tuple _31
  br _95, ^95, ^79

95:
  _96 = bif:tuple_size _31
  _97 = bif:'=:=' _96, `2`
  br _97, ^94, ^79

94:
  _34 = get_tuple_element _31, `0`
  _33 = get_tuple_element _31, `1`
  _91 = bif:is_tuple _34
  br _91, ^91, ^79

91:
  _92 = bif:tuple_size _34
  _93 = bif:'=:=' _92, `2`
  br _93, ^90, ^79

90:
  _36 = get_tuple_element _34, `0`
  _35 = get_tuple_element _34, `1`
  _89 = bif:'=:=' _36, `u`
  br _89, ^88, ^79

88:
  %% beam_debug_info_SUITE.erl:618
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   26 => [20,'Code1'],
                   33 => ['Code2'],
                   35 => [32,'N']},
             literals => []}
  _57 = debug_line `338`

  %% beam_debug_info_SUITE.erl:618
  _37 = call (`decode_args`/4), _35, _33, _1, _2
  _80 = succeeded:body _37
  br _80, ^80, ^1

80:
  _84 = bif:is_tuple _37
  br _84, ^84, ^82

84:
  _85 = bif:tuple_size _37
  _86 = bif:'=:=' _85, `2`
  br _86, ^83, ^82

83:
  _39 = get_tuple_element _37, `0`
  _38 = get_tuple_element _37, `1`

  %% beam_debug_info_SUITE.erl:619
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   26 => [20,'Code1'],
                   33 => ['Code2'],
                   35 => [32,'N'],
                   38 => ['Code3'],
                   39 => ['List']},
             literals => []}
  _58 = debug_line `339`
  _40 = put_tuple `list`, _39
  _59 = put_tuple _40, _38
  ret _59

82:
  %% beam_debug_info_SUITE.erl:618
  _60 = match_fail `badmatch`, _37
  _87 = succeeded:body _60
  br _87, ^87, ^1

87:
  ret _60

79:
  %% beam_debug_info_SUITE.erl:617
  _61 = match_fail `badmatch`, _31
  _98 = succeeded:body _61
  br _98, ^98, ^1

98:
  ret _61

120:
  %% beam_debug_info_SUITE.erl:615
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   19 => ['Res'],
                   26 => [18],
                   28 => [17]},
             literals => []}
  _62 = debug_line `336`
  ret _19

118:
  %% beam_debug_info_SUITE.erl:614
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   19 => [21,'Res'],
                   26 => [16],
                   28 => [15]},
             literals => []}
  _63 = debug_line `335`
  ret _19

117:
  %% beam_debug_info_SUITE.erl:610
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   26 => [24,'Code1'],
                   28 => ['N']},
             literals => []}
  _67 = debug_line `332`
  _68 = put_tuple _28, _26
  ret _68

119:
  %% beam_debug_info_SUITE.erl:613
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   19 => [22,'Res'],
                   26 => [14],
                   28 => "\r"},
             literals => []}
  _64 = debug_line `334`
  ret _19

116:
  %% beam_debug_info_SUITE.erl:612
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   26 => [23,'Code1'],
                   28 => ['Index']},
             literals => []}
  _65 = debug_line `333`

  %% beam_debug_info_SUITE.erl:612
  _3 = bif:map_get _28, _2
  _76 = succeeded:body _3
  br _76, ^76, ^1

76:
  _30 = put_tuple `atom`, _3
  _66 = put_tuple _30, _26
  ret _66

75:
  _127 = bif:'=:=' _27, `nil`
  br _127, ^126, ^74

126:
  %% beam_debug_info_SUITE.erl:608
  %% Anno: #{alias =>
                 #{0 => ['Code0'],
                   1 => ['Literals'],
                   2 => ['Atoms'],
                   19 => [25,'Res'],
                   26 => "\f"},
             literals => []}
  _51 = debug_line `331`
  ret _19

74:
  %% beam_debug_info_SUITE.erl:607
  _69 = match_fail `case_clause`, _19
  _132 = succeeded:body _69
  br _132, ^132, ^1

132:
  ret _69

1:
  _70 = call (`erlang`:`error`/1), `badarg`
  ret _70
}

%% beam_debug_info_SUITE.erl:625
%% Counter = 168
function `beam_debug_info_SUITE`:`decode_raw_arg`(_0) {
0:
  %% beam_debug_info_SUITE.erl:625
  %% Anno: #{alias => #{},literals => []}
  _78 = debug_line `342`
  _19 = bs_start_match `new`, _0
  _166 = succeeded:guard _19
  br _166, ^166, ^102

166:
  %% beam_debug_info_SUITE.erl:625
  _20 = bs_match `integer`, _19, `[unsigned,big]`, `4`, `1`
  _104 = succeeded:guard _20
  br _104, ^104, ^103

104:
  _21 = bs_extract _20
  _110 = bif:'=:=' _21, `0`
  br _110, ^109, ^105

109:
  _29 = bs_match `string`, _20, `<<2:4>>`
  _107 = succeeded:guard _29
  br _107, ^107, ^105

107:
  %% beam_debug_info_SUITE.erl:625
  _30 = bs_match `binary`, _29, `[unsigned,big]`, `all`, `8`
  _108 = succeeded:guard _30
  br _108, ^108, ^105

108:
  _31 = bs_extract _30

  %% beam_debug_info_SUITE.erl:626
  %% Anno: #{alias => #{31 => [18,'Code']},literals => []}
  _94 = debug_line `343`
  _95 = put_tuple `nil`, _31
  ret _95

105:
  _22 = bs_match `string`, _20, `<<0:1>>`
  _111 = succeeded:guard _22
  br _111, ^111, ^103

111:
  %% beam_debug_info_SUITE.erl:627
  _23 = bs_match `integer`, _22, `[unsigned,big]`, `3`, `1`
  _112 = succeeded:guard _23
  br _112, ^112, ^103

112:
  _24 = bs_extract _23

  %% beam_debug_info_SUITE.erl:627
  _25 = bs_match `binary`, _23, `[unsigned,big]`, `all`, `8`
  _113 = succeeded:guard _25
  br _113, ^113, ^103

113:
  _26 = bs_extract _25

  %% beam_debug_info_SUITE.erl:628
  %% Anno: #{alias => #{21 => ['N'],24 => [17,'Tag'],26 => ['Code']},
             literals => []}
  _96 = debug_line `344`

  %% beam_debug_info_SUITE.erl:628
  _1 = call (`decode_tag`/1), _24
  _114 = succeeded:body _1
  br _114, ^114, ^1

114:
  _27 = put_tuple _1, _21
  _97 = put_tuple _27, _26
  ret _97

103:
  %% beam_debug_info_SUITE.erl:629
  _32 = bs_match `integer`, _19, `[unsigned,big]`, `3`, `1`
  _115 = succeeded:guard _32
  br _115, ^115, ^102

115:
  _33 = bs_extract _32
  _144 = bif:'=:=' _33, `7`
  br _144, ^143, ^116

143:
  _58 = bs_match `string`, _32, `<<3:2>>`
  _118 = succeeded:guard _58
  br _118, ^118, ^116

118:
  %% beam_debug_info_SUITE.erl:629
  _59 = bs_match `integer`, _58, `[unsigned,big]`, `3`, `1`
  _119 = succeeded:guard _59
  br _119, ^119, ^116

119:
  _60 = bs_extract _59

  %% beam_debug_info_SUITE.erl:629
  _61 = bs_match `binary`, _59, `[unsigned,big]`, `all`, `8`
  _120 = succeeded:guard _61
  br _120, ^120, ^116

120:
  _62 = bs_extract _61

  %% beam_debug_info_SUITE.erl:630
  %% Anno: #{alias => #{60 => [15,'Tag'],62 => [16,'Code0']},literals => []}
  _79 = debug_line `345`

  %% beam_debug_info_SUITE.erl:630
  _63 = call (`decode_raw_arg`/1), _62
  _121 = succeeded:body _63
  br _121, ^121, ^1

121:
  _139 = bif:is_tuple _63
  br _139, ^139, ^123

139:
  _140 = bif:tuple_size _63
  _141 = bif:'=:=' _140, `2`
  br _141, ^138, ^123

138:
  _67 = get_tuple_element _63, `0`
  _66 = get_tuple_element _63, `1`
  _135 = bif:is_tuple _67
  br _135, ^135, ^123

135:
  _136 = bif:tuple_size _67
  _137 = bif:'=:=' _136, `2`
  br _137, ^134, ^123

134:
  _69 = get_tuple_element _67, `0`
  _68 = get_tuple_element _67, `1`
  _133 = bif:'=:=' _69, `u`
  br _133, ^132, ^123

132:
  %% beam_debug_info_SUITE.erl:631
  %% Anno: #{alias =>
                 #{60 => [15,'Tag'],
                   62 => [16,'Code0'],
                   66 => [64,'Code1'],
                   68 => [65,'W0']},
             literals => []}
  _80 = debug_line `346`

  %% beam_debug_info_SUITE.erl:631
  _70 = bif:'+' _68, `9`
  _124 = succeeded:body _70
  br _124, ^124, ^1

124:
  %% beam_debug_info_SUITE.erl:632
  %% Anno: #{alias =>
                 #{60 => [15,'Tag'],
                   62 => [16,'Code0'],
                   66 => [64,'Code1'],
                   68 => [65,'W0'],
                   70 => ['W']},
             literals => []}
  _81 = debug_line `347`
  _72 = bs_start_match `new`, _66
  _130 = succeeded:guard _72
  br _130, ^130, ^126

130:
  %% beam_debug_info_SUITE.erl:632
  _73 = bs_match `integer`, _72, `[signed,big]`, _70, `8`
  _127 = succeeded:guard _73
  br _127, ^127, ^126

127:
  _74 = bs_extract _73

  %% beam_debug_info_SUITE.erl:632
  _75 = bs_match `binary`, _73, `[unsigned,big]`, `all`, `8`
  _128 = succeeded:guard _75
  br _128, ^128, ^126

128:
  _76 = bs_extract _75

  %% beam_debug_info_SUITE.erl:633
  %% Anno: #{alias =>
                 #{60 => [15,'Tag'],
                   62 => [16,'Code0'],
                   66 => [64,'Code1'],
                   68 => [65,'W0'],
                   70 => ['W'],
                   74 => [71,'N'],
                   76 => ['Code2']},
             literals => []}
  _82 = debug_line `348`

  %% beam_debug_info_SUITE.erl:633
  _5 = call (`decode_tag`/1), _60
  _129 = succeeded:body _5
  br _129, ^129, ^1

129:
  _77 = put_tuple _5, _74
  _83 = put_tuple _77, _76
  ret _83

126:
  %% beam_debug_info_SUITE.erl:632
  _84 = match_fail `badmatch`, _66
  _131 = succeeded:body _84
  br _131, ^131, ^1

131:
  ret _84

123:
  %% beam_debug_info_SUITE.erl:630
  _85 = match_fail `badmatch`, _63
  _142 = succeeded:body _85
  br _142, ^142, ^1

142:
  ret _85

116:
  %% beam_debug_info_SUITE.erl:634
  _34 = bs_match `integer`, _32, `[unsigned,big]`, `1`, `1`
  _145 = succeeded:guard _34
  br _145, ^145, ^102

145:
  _35 = bs_extract _34
  switch _35, ^102, [
    { `0`, ^165 },
    { `1`, ^164 }
  ]

164:
  _36 = bs_match `string`, _34, `<<1:1>>`
  _146 = succeeded:guard _36
  br _146, ^146, ^102

146:
  %% beam_debug_info_SUITE.erl:634
  _37 = bs_match `integer`, _36, `[unsigned,big]`, `3`, `1`
  _147 = succeeded:guard _37
  br _147, ^147, ^102

147:
  _38 = bs_extract _37

  %% beam_debug_info_SUITE.erl:634
  _39 = bs_match `binary`, _37, `[unsigned,big]`, `all`, `8`
  _148 = succeeded:guard _39
  br _148, ^148, ^102

148:
  _40 = bs_extract _39

  %% beam_debug_info_SUITE.erl:635
  %% Anno: #{alias => #{33 => ['W0'],38 => [13,'Tag'],40 => [14,'Code0']},
             literals => []}
  _89 = debug_line `349`

  %% beam_debug_info_SUITE.erl:635
  W = bif:'+' _33, `2`
  _149 = succeeded:body W
  br _149, ^149, ^1

149:
  %% beam_debug_info_SUITE.erl:636
  %% Anno: #{alias => #{33 => ['W0'],38 => [13,'Tag'],40 => [14,'Code0']},
             literals => []}
  _90 = debug_line `350`
  _42 = bs_start_match `new`, _40
  _155 = succeeded:guard _42
  br _155, ^155, ^151

155:
  %% beam_debug_info_SUITE.erl:636
  _43 = bs_match `integer`, _42, `[signed,big]`, W, `8`
  _152 = succeeded:guard _43
  br _152, ^152, ^151

152:
  _44 = bs_extract _43

  %% beam_debug_info_SUITE.erl:636
  _45 = bs_match `binary`, _43, `[unsigned,big]`, `all`, `8`
  _153 = succeeded:guard _45
  br _153, ^153, ^151

153:
  _46 = bs_extract _45

  %% beam_debug_info_SUITE.erl:637
  %% Anno: #{alias =>
                 #{33 => ['W0'],
                   38 => [13,'Tag'],
                   40 => [14,'Code0'],
                   44 => [41,'N'],
                   46 => ['Code1']},
             literals => []}
  _91 = debug_line `351`

  %% beam_debug_info_SUITE.erl:637
  _8 = call (`decode_tag`/1), _38
  _154 = succeeded:body _8
  br _154, ^154, ^1

154:
  _47 = put_tuple _8, _44
  _92 = put_tuple _47, _46
  ret _92

151:
  %% beam_debug_info_SUITE.erl:636
  _93 = match_fail `badmatch`, _40
  _156 = succeeded:body _93
  br _156, ^156, ^1

156:
  ret _93

165:
  _48 = bs_match `string`, _34, `<<1:1>>`
  _157 = succeeded:guard _48
  br _157, ^157, ^102

157:
  %% beam_debug_info_SUITE.erl:638
  _49 = bs_match `integer`, _48, `[unsigned,big]`, `3`, `1`
  _158 = succeeded:guard _49
  br _158, ^158, ^102

158:
  _50 = bs_extract _49

  %% beam_debug_info_SUITE.erl:638
  _51 = bs_match `integer`, _49, `[unsigned,big]`, `8`, `1`
  _159 = succeeded:guard _51
  br _159, ^159, ^102

159:
  _52 = bs_extract _51

  %% beam_debug_info_SUITE.erl:638
  _53 = bs_match `binary`, _51, `[unsigned,big]`, `all`, `8`
  _160 = succeeded:guard _53
  br _160, ^160, ^102

160:
  _54 = bs_extract _53

  %% beam_debug_info_SUITE.erl:639
  %% Anno: #{alias =>
                 #{33 => ['High'],50 => ['Tag'],52 => ['Low'],54 => ['Code0']},
             literals => []}
  _86 = debug_line `352`

  %% beam_debug_info_SUITE.erl:639
  _9 = bif:'bsl' _33, `8`
  _161 = succeeded:body _9
  br _161, ^161, ^1

161:
  %% beam_debug_info_SUITE.erl:639
  _55 = bif:'bor' _9, _52
  _162 = succeeded:body _55
  br _162, ^162, ^1

162:
  %% beam_debug_info_SUITE.erl:640
  %% Anno: #{alias =>
                 #{33 => ['High'],
                   50 => ['Tag'],
                   52 => ['Low'],
                   54 => ['Code0'],
                   55 => ['N']},
             literals => []}
  _87 = debug_line `353`

  %% beam_debug_info_SUITE.erl:640
  _11 = call (`decode_tag`/1), _50
  _163 = succeeded:body _11
  br _163, ^163, ^1

163:
  _56 = put_tuple _11, _55
  _88 = put_tuple _56, _54
  ret _88

102:
  %% beam_debug_info_SUITE.erl:625
  %% Anno: #{inlined => {'-inlined-decode_raw_arg/1-',1}}
  _98 = match_fail `function_clause`, _0
  _167 = succeeded:body _98
  br _167, ^167, ^1

167:
  ret _98

1:
  _99 = call (`erlang`:`error`/1), `badarg`
  ret _99
}

%% beam_debug_info_SUITE.erl:642
%% Counter = 21
function `beam_debug_info_SUITE`:`decode_tag`(_0) {
0:
  %% beam_debug_info_SUITE.erl:642
  %% Anno: #{alias => #{},literals => []}
  _2 = debug_line `354`
  switch _0, ^13, [
    { `0`, ^14 },
    { `1`, ^15 },
    { `2`, ^16 },
    { `3`, ^17 },
    { `4`, ^18 },
    { `7`, ^19 }
  ]

19:
  %% beam_debug_info_SUITE.erl:647
  %% Anno: #{alias => #{},literals => []}
  _3 = debug_line `360`
  ret `z`

18:
  %% beam_debug_info_SUITE.erl:646
  %% Anno: #{alias => #{},literals => []}
  _4 = debug_line `359`
  ret `y`

17:
  %% beam_debug_info_SUITE.erl:645
  %% Anno: #{alias => #{},literals => []}
  _5 = debug_line `358`
  ret `x`

16:
  %% beam_debug_info_SUITE.erl:644
  %% Anno: #{alias => #{},literals => []}
  _6 = debug_line `357`
  ret `atom`

15:
  %% beam_debug_info_SUITE.erl:643
  %% Anno: #{alias => #{},literals => []}
  _7 = debug_line `356`
  ret `integer`

14:
  %% beam_debug_info_SUITE.erl:642
  %% Anno: #{alias => #{},literals => []}
  _8 = debug_line `355`
  ret `u`

13:
  %% beam_debug_info_SUITE.erl:642
  %% Anno: #{inlined => {'-inlined-decode_tag/1-',1}}
  _9 = match_fail `function_clause`, _0
  _20 = succeeded:body _9
  br _20, ^20, ^1

20:
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% beam_debug_info_SUITE.erl:653
%% Counter = 87
function `beam_debug_info_SUITE`:`fixed_bugs`(_0) {
0:
  %% beam_debug_info_SUITE.erl:653
  %% Anno: #{alias => #{},literals => []}
  _17 = debug_line `361`

  %% beam_debug_info_SUITE.erl:654
  %% Anno: #{alias => #{0 => ['_Config']},literals => []}
  _18 = debug_line `362`

  %% beam_debug_info_SUITE.erl:654
  _12 = call (`unassigned_yreg`/1), `ok`
  _35 = succeeded:body _12
  br _35, ^35, ^1

35:
  _85 = bif:'=:=' _12, `ok`
  br _85, ^84, ^37

84:
  %% beam_debug_info_SUITE.erl:655
  %% Anno: #{alias => #{0 => ['_Config']},literals => []}
  _19 = debug_line `363`
  _41 = new_try_tag `'catch'`
  br _41, ^39, ^40

39:
  %% beam_debug_info_SUITE.erl:655
  _21 = call (`unassigned_yreg`/1), `not_ok`
  _43 = succeeded:body _21
  br _43, ^43, ^40

43:
  br ^42

42:
  _45 = phi { _21, ^43 }
  br ^38

40:
  _46 = landingpad `'catch'`, _41
  _44 = extract _46, `0`
  br ^38

38:
  _47 = phi { _44, ^40 }, { _45, ^42 }
  _2 = catch_end _41, _47
  _80 = bif:is_tuple _2
  br _80, ^80, ^49

80:
  _81 = bif:tuple_size _2
  _82 = bif:'=:=' _81, `2`
  br _82, ^79, ^49

79:
  _14 = get_tuple_element _2, `0`
  _78 = bif:'=:=' _14, `'EXIT'`
  br _78, ^77, ^49

77:
  %% beam_debug_info_SUITE.erl:657
  %% Anno: #{alias => #{0 => ['_Config'],13 => "\v"},literals => []}
  _22 = debug_line `364`

  %% beam_debug_info_SUITE.erl:657
  _4 = call (`id`/1), `<<"xyz">>`
  _50 = succeeded:body _4
  br _50, ^50, ^1

50:
  %% beam_debug_info_SUITE.erl:657
  _15 = call (`wrong_frame_size`/1), _4
  _51 = succeeded:body _15
  br _51, ^51, ^1

51:
  _75 = bif:'=:=' _15, `<<"xyz">>`
  br _75, ^75, ^53

75:
  %% beam_debug_info_SUITE.erl:658
  %% Anno: #{alias => #{0 => ['_Config'],13 => "\v"},literals => []}
  _23 = debug_line `365`
  _57 = new_try_tag `'catch'`
  br _57, ^55, ^56

55:
  %% beam_debug_info_SUITE.erl:658
  _6 = call (`id`/1), `42`
  _59 = succeeded:body _6
  br _59, ^59, ^56

59:
  %% beam_debug_info_SUITE.erl:658
  _25 = call (`wrong_frame_size`/1), _6
  _60 = succeeded:body _25
  br _60, ^60, ^56

60:
  br ^58

58:
  _62 = phi { _25, ^60 }
  br ^54

56:
  _63 = landingpad `'catch'`, _57
  _61 = extract _63, `0`
  br ^54

54:
  _64 = phi { _61, ^56 }, { _62, ^58 }
  _7 = catch_end _57, _64
  _73 = bif:'=:=' _7, `boom`
  br _73, ^72, ^66

72:
  %% beam_debug_info_SUITE.erl:660
  %% Anno: #{alias => #{0 => ['_Config'],13 => "\v"},literals => []}
  _26 = debug_line `366`

  %% beam_debug_info_SUITE.erl:660
  _16 = call (`no_function`/1), `ok`
  _67 = succeeded:body _16
  br _67, ^67, ^1

67:
  _70 = bif:'=:=' _16, `{ok,error}`
  br _70, ^70, ^69

70:
  %% beam_debug_info_SUITE.erl:662
  %% Anno: #{alias => #{0 => ['_Config'],13 => "\v"},literals => []}
  _27 = debug_line `367`
  ret `ok`

69:
  %% beam_debug_info_SUITE.erl:660
  _28 = match_fail `badmatch`, _16
  _71 = succeeded:body _28
  br _71, ^71, ^1

71:
  ret _28

66:
  %% beam_debug_info_SUITE.erl:658
  _29 = match_fail `badmatch`, _7
  _74 = succeeded:body _29
  br _74, ^74, ^1

74:
  ret _29

53:
  %% beam_debug_info_SUITE.erl:657
  _30 = match_fail `badmatch`, _15
  _76 = succeeded:body _30
  br _76, ^76, ^1

76:
  ret _30

49:
  %% beam_debug_info_SUITE.erl:655
  _31 = match_fail `badmatch`, _2
  _83 = succeeded:body _31
  br _83, ^83, ^1

83:
  ret _31

37:
  %% beam_debug_info_SUITE.erl:654
  _32 = match_fail `badmatch`, _12
  _86 = succeeded:body _32
  br _86, ^86, ^1

86:
  ret _32

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  ret _33
}

%% beam_debug_info_SUITE.erl:664
%% Counter = 48
function `beam_debug_info_SUITE`:`unassigned_yreg`(_0) {
0:
  %% beam_debug_info_SUITE.erl:664
  %% Anno: #{alias => #{},literals => []}
  _10 = debug_line `368`

  %% beam_debug_info_SUITE.erl:665
  %% Anno: #{alias => #{0 => ['V']},literals => []}
  _11 = debug_line `369`

  %% beam_debug_info_SUITE.erl:665
  _8 = call (`id`/1), _0
  _25 = succeeded:body _8
  br _25, ^25, ^1

25:
  %% beam_debug_info_SUITE.erl:667
  %% Anno: #{alias => #{0 => ['V'],8 => [7]},literals => []}
  _12 = debug_line `370`
  _29 = bif:'=:=' _0, `ok`
  br _29, ^28, ^27

28:
  br ^26

27:
  %% beam_debug_info_SUITE.erl:667
  _13 = match_fail `case_clause`, _0
  _30 = succeeded:body _13
  br _30, ^30, ^1

30:
  br ^26

26:
  %% beam_debug_info_SUITE.erl:668
  %% Anno: #{alias => #{0 => ['V'],8 => [7]},literals => []}
  _14 = debug_line `371`
  _34 = new_try_tag `'catch'`
  br _34, ^32, ^33

32:
  %% beam_debug_info_SUITE.erl:668
  _16 = call (`id`/1), `whatever`
  _36 = succeeded:body _16
  br _36, ^36, ^33

36:
  br ^35

35:
  _38 = phi { _16, ^36 }
  br ^31

33:
  _39 = landingpad `'catch'`, _34
  _37 = extract _39, `0`
  br ^31

31:
  _40 = phi { _37, ^33 }, { _38, ^35 }
  _2 = catch_end _34, _40

  %% beam_debug_info_SUITE.erl:670
  %% Anno: #{alias => #{0 => ['V'],2 => ['Y'],8 => [7]},literals => []}
  _17 = debug_line `372`

  %% beam_debug_info_SUITE.erl:670
  _9 = call (`id`/1), `true`
  _41 = succeeded:body _9
  br _41, ^41, ^1

41:
  switch _9, ^43, [
    { `false`, ^46 },
    { `true`, ^45 }
  ]

45:
  %% beam_debug_info_SUITE.erl:672
  %% Anno: #{alias => #{0 => ['V'],2 => ['Y'],8 => [7]},literals => []}
  _19 = debug_line `373`

  %% beam_debug_info_SUITE.erl:672
  _20 = call (`id`/1), _2
  _44 = succeeded:body _20
  br _44, ^44, ^1

44:
  %% beam_debug_info_SUITE.erl:673
  %% Anno: #{alias => #{0 => ['V'],2 => ['Y'],8 => [7]},literals => []}
  _21 = debug_line `374`
  ret `ok`

46:
  %% beam_debug_info_SUITE.erl:675
  %% Anno: #{alias => #{0 => ['V'],2 => ['Y'],8 => [7]},literals => []}
  _18 = debug_line `375`
  ret `ok`

43:
  %% beam_debug_info_SUITE.erl:670
  _22 = match_fail `case_clause`, _9
  _47 = succeeded:body _22
  br _47, ^47, ^1

47:
  ret _22

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  ret _23
}

%% beam_debug_info_SUITE.erl:680
%% Counter = 19
function `beam_debug_info_SUITE`:`wrong_frame_size`(_0) {
0:
  %% beam_debug_info_SUITE.erl:680
  %% Anno: #{alias => #{},literals => []}
  _4 = debug_line `376`

  %% beam_debug_info_SUITE.erl:681
  %% Anno: #{alias => #{0 => ['X']},literals => []}
  _5 = debug_line `377`

  %% beam_debug_info_SUITE.erl:681
  _6 = call (`id`/1), _0
  _13 = succeeded:body _6
  br _13, ^13, ^1

13:
  %% beam_debug_info_SUITE.erl:682
  %% Anno: #{alias => #{0 => ['X']},literals => []}
  _7 = debug_line `378`

  %% beam_debug_info_SUITE.erl:682
  _3 = call (`id`/1), _0
  _14 = succeeded:body _3
  br _14, ^14, ^1

14:
  _17 = bif:is_binary _3
  br _17, ^17, ^16

17:
  %% beam_debug_info_SUITE.erl:683
  %% Anno: #{alias => #{0 => ['X'],3 => ['Y']},literals => []}
  _8 = debug_line `379`
  ret _3

16:
  %% beam_debug_info_SUITE.erl:684
  %% Anno: #{alias => #{0 => ['X'],3 => ['_Err']},literals => []}
  _9 = debug_line `380`

  %% beam_debug_info_SUITE.erl:684
  _10 = call (`erlang`:`throw`/1), `boom`
  _18 = succeeded:body _10
  br _18, ^18, ^1

18:
  ret _10

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  ret _11
}

%% beam_debug_info_SUITE.erl:687
%% Counter = 54
function `beam_debug_info_SUITE`:`no_function`(_0) {
0:
  %% beam_debug_info_SUITE.erl:687
  %% Anno: #{alias => #{},literals => []}
  _9 = debug_line `381`

  %% beam_debug_info_SUITE.erl:688
  %% Anno: #{alias => #{0 => ['X']},literals => []}
  _10 = debug_line `382`
  _29 = new_try_tag `'catch'`
  br _29, ^27, ^28

27:
  %% beam_debug_info_SUITE.erl:688
  _12 = call (`id`/1), _0
  _31 = succeeded:body _12
  br _31, ^31, ^28

31:
  br ^30

30:
  _33 = phi { _12, ^31 }
  br ^26

28:
  _34 = landingpad `'catch'`, _29
  _32 = extract _34, `0`
  br ^26

26:
  _35 = phi { _32, ^28 }, { _33, ^30 }
  _1 = catch_end _29, _35
  _51 = bif:'=:=' _1, `ok`
  br _51, ^50, ^37

50:
  %% beam_debug_info_SUITE.erl:690
  %% Anno: #{alias => #{0 => ['X']},literals => []}
  _13 = debug_line `383`
  _41 = new_try_tag `'catch'`
  br _41, ^39, ^40

39:
  %% beam_debug_info_SUITE.erl:690
  _15 = call (`id`/1), `error`
  _43 = succeeded:body _15
  br _43, ^43, ^40

43:
  br ^42

42:
  _45 = phi { _15, ^43 }
  br ^38

40:
  _46 = landingpad `'catch'`, _41
  _44 = extract _46, `0`
  br ^38

38:
  _47 = phi { _44, ^40 }, { _45, ^42 }
  _2 = catch_end _41, _47

  %% beam_debug_info_SUITE.erl:692
  %% Anno: #{alias => #{0 => ['X'],2 => [7,'Err']},literals => []}
  _16 = debug_line `384`

  %% beam_debug_info_SUITE.erl:692
  _17 = call (`id`/1), `0`
  _48 = succeeded:body _17
  br _48, ^48, ^1

48:
  %% beam_debug_info_SUITE.erl:693
  %% Anno: #{alias => #{0 => ['X'],2 => [7,'Err']},literals => []}
  _18 = debug_line `385`
  _8 = put_tuple _0, _2

  %% beam_debug_info_SUITE.erl:693
  _19 = call (`id`/1), _8
  _49 = succeeded:body _19
  br _49, ^49, ^1

49:
  ret _19

37:
  %% beam_debug_info_SUITE.erl:696
  %% Anno: #{alias => #{0 => ['X'],1 => ['Err']},literals => []}
  _20 = debug_line `386`

  %% beam_debug_info_SUITE.erl:696
  _21 = call (`id`/1), `0`
  _52 = succeeded:body _21
  br _52, ^52, ^1

52:
  %% beam_debug_info_SUITE.erl:697
  %% Anno: #{alias => #{0 => ['X'],1 => ['Err']},literals => []}
  _22 = debug_line `387`
  _6 = put_tuple _0, _1

  %% beam_debug_info_SUITE.erl:697
  _23 = call (`id`/1), _6
  _53 = succeeded:body _23
  br _53, ^53, ^1

53:
  ret _23

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  ret _24
}

%% beam_debug_info_SUITE.erl:701
%% Counter = 42
function `beam_debug_info_SUITE`:`empty_module`(_0) {
0:
  %% beam_debug_info_SUITE.erl:701
  %% Anno: #{alias => #{},literals => []}
  _18 = debug_line `388`

  %% beam_debug_info_SUITE.erl:702
  %% Anno: #{alias => #{0 => ['_Config']},literals => []}
  _19 = debug_line `389`

  %% beam_debug_info_SUITE.erl:703
  _1 = call (`erlang`:`atom_to_list`/1), `empty_module`
  _26 = succeeded:body _1
  br _26, ^26, ^1

26:
  %% beam_debug_info_SUITE.erl:702
  _2 = call (`erlang`:`'++'`/2), `"_"`, _1
  _27 = succeeded:body _2
  br _27, ^27, ^1

27:
  %% beam_debug_info_SUITE.erl:702
  _3 = call (`erlang`:`'++'`/2), `"beam_debug_info_SUITE"`, _2
  _28 = succeeded:body _3
  br _28, ^28, ^1

28:
  %% beam_debug_info_SUITE.erl:702
  Mod = call (`erlang`:`list_to_atom`/1), _3
  _29 = succeeded:body Mod
  br _29, ^29, ^1

29:
  %% beam_debug_info_SUITE.erl:704
  %% Anno: #{alias => #{0 => ['_Config']},literals => []}
  _20 = debug_line `390`

  %% beam_debug_info_SUITE.erl:704
  _5 = call (`erlang`:`atom_to_list`/1), Mod
  _30 = succeeded:body _5
  br _30, ^30, ^1

30:
  _10 = put_tuple _5, `1`
  _11 = put_tuple `attribute`, `{1,2}`, `module`, Mod
  _12 = put_list _11, `[{eof,{3,1}}]`
  _13 = put_tuple `attribute`, `{1,1}`, `file`, _10
  Empty = put_list _13, _12

  %% beam_debug_info_SUITE.erl:707
  %% Anno: #{alias => #{0 => ['_Config']},literals => []}
  _21 = debug_line `391`

  %% beam_debug_info_SUITE.erl:707
  _14 = call (`compile`:`forms`/2), Empty, `[beam_debug_info,report]`
  _31 = succeeded:body _14
  br _31, ^31, ^1

31:
  _38 = bif:is_tuple _14
  br _38, ^38, ^33

38:
  _39 = bif:tuple_size _14
  _40 = bif:'=:=' _39, `3`
  br _40, ^37, ^33

37:
  _17 = get_tuple_element _14, `0`
  _16 = get_tuple_element _14, `1`
  _15 = get_tuple_element _14, `2`
  _36 = bif:'=:=' _17, `ok`
  br _36, ^35, ^33

35:
  _34 = bif:'=:=' _16, Mod
  br _34, ^34, ^33

34:
  %% beam_debug_info_SUITE.erl:709
  %% Anno: #{alias => #{0 => ['_Config'],15 => ['_Code'],16 => "\t"},
             literals => []}
  _22 = debug_line `392`
  ret `ok`

33:
  %% beam_debug_info_SUITE.erl:707
  _23 = match_fail `badmatch`, _14
  _41 = succeeded:body _23
  br _41, ^41, ^1

41:
  ret _23

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  ret _24
}

%% beam_debug_info_SUITE.erl:711
%% Counter = 133
function `beam_debug_info_SUITE`:`call_in_call_args`(_0) {
0:
  %% beam_debug_info_SUITE.erl:711
  %% Anno: #{alias => #{},literals => []}
  _54 = debug_line `393`

  %% beam_debug_info_SUITE.erl:712
  %% Anno: #{alias => #{0 => ['Config']},literals => []}
  _55 = debug_line `394`

  %% beam_debug_info_SUITE.erl:713
  %% Anno: #{alias => #{0 => ['Config']},
             literals => [{call_in_call_args,'M'}]}
  _56 = debug_line `395`

  %% beam_debug_info_SUITE.erl:713
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0
  _80 = succeeded:body PrivDir
  br _80, ^80, ^1

80:
  %% beam_debug_info_SUITE.erl:714
  %% Anno: #{alias => #{0 => ['Config']},
             literals => [{call_in_call_args,'M'}]}
  _57 = debug_line `396`

  %% beam_debug_info_SUITE.erl:714
  _3 = call (`erlang`:`atom_to_list`/1), `call_in_call_args`
  _81 = succeeded:body _3
  br _81, ^81, ^1

81:
  %% beam_debug_info_SUITE.erl:714
  _4 = call (`erlang`:`'++'`/2), _3, `".erl"`
  _82 = succeeded:body _4
  br _82, ^82, ^1

82:
  %% beam_debug_info_SUITE.erl:714
  SrcName = call (`filename`:`join`/2), PrivDir, _4
  _83 = succeeded:body SrcName
  br _83, ^83, ^1

83:
  %% beam_debug_info_SUITE.erl:716
  %% Anno: #{alias => #{0 => ['Config']},
             literals => [{call_in_call_args,'M'}]}
  _58 = debug_line `397`

  %% beam_debug_info_SUITE.erl:728
  %% Anno: #{alias => #{0 => ['Config']},
             literals =>
                 [{<<"-module(call_in_call_args).\n-export([f/1]).\n\nf(X) ->\n    bar:g(\n      bar:h(X),\n      id(X)\n     ).\nid(I) -> I.">>,
                   'S'},
                  {call_in_call_args,'M'}]}
  _59 = debug_line `398`

  %% beam_debug_info_SUITE.erl:728
  _29 = call (`file`:`write_file`/2), SrcName, `<<"-module(call_in_call_args).\n-export([f/1]).\n\nf(X) ->\n    bar:g(\n      bar:h(X),\n      id(X)\n     ).\nid(I) -> I.">>`
  _84 = succeeded:body _29
  br _84, ^84, ^1

84:
  _131 = bif:'=:=' _29, `ok`
  br _131, ^130, ^86

130:
  %% beam_debug_info_SUITE.erl:729
  %% Anno: #{alias => #{0 => ['Config']},
             literals =>
                 [{<<"-module(call_in_call_args).\n-export([f/1]).\n\nf(X) ->\n    bar:g(\n      bar:h(X),\n      id(X)\n     ).\nid(I) -> I.">>,
                   'S'},
                  {call_in_call_args,'M'}]}
  _60 = debug_line `399`

  %% beam_debug_info_SUITE.erl:729
  _30 = call (`compile`:`file`/2), SrcName, `[report,beam_debug_info,binary,to_asm]`
  _87 = succeeded:body _30
  br _87, ^87, ^1

87:
  _126 = bif:is_tuple _30
  br _126, ^126, ^89

126:
  _127 = bif:tuple_size _30
  _128 = bif:'=:=' _127, `3`
  br _128, ^125, ^89

125:
  _33 = get_tuple_element _30, `0`
  _32 = get_tuple_element _30, `1`
  _31 = get_tuple_element _30, `2`
  _124 = bif:'=:=' _33, `ok`
  br _124, ^123, ^89

123:
  _90 = bif:'=:=' _32, `call_in_call_args`
  br _90, ^90, ^89

90:
  %% beam_debug_info_SUITE.erl:730
  %% Anno: #{alias => #{0 => ['Config'],31 => ['Asm'],32 => [22]},
             literals =>
                 [{<<"-module(call_in_call_args).\n-export([f/1]).\n\nf(X) ->\n    bar:g(\n      bar:h(X),\n      id(X)\n     ).\nid(I) -> I.">>,
                   'S'},
                  {call_in_call_args,'M'}]}
  _61 = debug_line `400`
  _119 = bif:is_tuple _31
  br _119, ^119, ^92

119:
  _120 = bif:tuple_size _31
  _121 = bif:'=:=' _120, `5`
  br _121, ^118, ^92

118:
  _38 = get_tuple_element _31, `0`
  _35 = get_tuple_element _31, `3`
  _117 = is_nonempty_list _35
  br _117, ^117, ^92

117:
  _40 = get_hd _35
  _39 = get_tl _35
  _114 = bif:is_tuple _40
  br _114, ^114, ^92

114:
  _115 = bif:tuple_size _40
  _116 = bif:'=:=' _115, `5`
  br _116, ^113, ^92

113:
  _45 = get_tuple_element _40, `0`
  _44 = get_tuple_element _40, `1`
  _43 = get_tuple_element _40, `2`
  _41 = get_tuple_element _40, `4`
  _112 = bif:'=:=' _45, `function`
  br _112, ^111, ^92

111:
  _110 = bif:'=:=' _44, `f`
  br _110, ^109, ^92

109:
  _108 = bif:'=:=' _43, `1`
  br _108, ^107, ^92

107:
  _93 = bif:'=:=' _38, `call_in_call_args`
  br _93, ^93, ^92

93:
  %% beam_debug_info_SUITE.erl:731
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   31 => ['Asm'],
                   32 => [22],
                   34 => [28],
                   36 => [25],
                   37 => [24],
                   38 => [23],
                   39 => "\e",
                   41 => ['Is'],
                   42 => [26]},
             literals =>
                 [{<<"-module(call_in_call_args).\n-export([f/1]).\n\nf(X) ->\n    bar:g(\n      bar:h(X),\n      id(X)\n     ).\nid(I) -> I.">>,
                   'S'},
                  {call_in_call_args,'M'}]}
  _62 = debug_line `401`
  br ^98

98:
  %% beam_debug_info_SUITE.erl:731
  _68 = call (`'-call_in_call_args/1-lc$^0/1-0-'`/1), _41
  _96 = succeeded:body _68
  br _96, ^96, ^1

96:
  br ^94

94:
  _18 = phi { _68, ^96 }

  %% beam_debug_info_SUITE.erl:732
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   18 => ['DebugLines'],
                   31 => ['Asm'],
                   32 => [22],
                   34 => [28],
                   36 => [25],
                   37 => [24],
                   38 => [23],
                   39 => "\e",
                   41 => ['Is'],
                   42 => [26]},
             literals =>
                 [{true,46},
                  {<<"-module(call_in_call_args).\n-export([f/1]).\n\nf(X) ->\n    bar:g(\n      bar:h(X),\n      id(X)\n     ).\nid(I) -> I.">>,
                   'S'},
                  {call_in_call_args,'M'}]}
  _70 = debug_line `402`
  _52 = put_list _18, `[]`

  %% beam_debug_info_SUITE.erl:732
  _71 = call (`io`:`format`/2), `"~p\n"`, _52
  _100 = succeeded:body _71
  br _100, ^100, ^1

100:
  %% beam_debug_info_SUITE.erl:733
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   18 => ['DebugLines'],
                   31 => ['Asm'],
                   32 => [22],
                   34 => [28],
                   36 => [25],
                   37 => [24],
                   38 => [23],
                   39 => "\e",
                   41 => ['Is'],
                   42 => [26]},
             literals =>
                 [{true,46},
                  {<<"-module(call_in_call_args).\n-export([f/1]).\n\nf(X) ->\n    bar:g(\n      bar:h(X),\n      id(X)\n     ).\nid(I) -> I.">>,
                   'S'},
                  {call_in_call_args,'M'}]}
  _72 = debug_line `403`

  %% beam_debug_info_SUITE.erl:733
  _53 = bif:length _18
  _101 = succeeded:body _53
  br _101, ^101, ^1

101:
  _105 = bif:'=:=' _53, `4`
  br _105, ^104, ^103

104:
  %% beam_debug_info_SUITE.erl:735
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   18 => ['DebugLines'],
                   31 => ['Asm'],
                   32 => [22],
                   34 => [28],
                   36 => [25],
                   37 => [24],
                   38 => [23],
                   39 => "\e",
                   41 => ['Is'],
                   42 => [26]},
             literals =>
                 [{true,46},
                  {<<"-module(call_in_call_args).\n-export([f/1]).\n\nf(X) ->\n    bar:g(\n      bar:h(X),\n      id(X)\n     ).\nid(I) -> I.">>,
                   'S'},
                  {call_in_call_args,'M'}]}
  _73 = debug_line `404`
  ret `ok`

103:
  %% beam_debug_info_SUITE.erl:733
  _74 = match_fail `badmatch`, _53
  _106 = succeeded:body _74
  br _106, ^106, ^1

106:
  ret _74

92:
  %% beam_debug_info_SUITE.erl:730
  _75 = match_fail `badmatch`, _31
  _122 = succeeded:body _75
  br _122, ^122, ^1

122:
  ret _75

89:
  %% beam_debug_info_SUITE.erl:729
  _76 = match_fail `badmatch`, _30
  _129 = succeeded:body _76
  br _129, ^129, ^1

129:
  ret _76

86:
  %% beam_debug_info_SUITE.erl:728
  _77 = match_fail `badmatch`, _29
  _132 = succeeded:body _77
  br _132, ^132, ^1

132:
  ret _77

1:
  _78 = call (`erlang`:`error`/1), `badarg`
  ret _78
}

%% beam_debug_info_SUITE.erl:737
%% Counter = 178
function `beam_debug_info_SUITE`:`missing_vars`(_0) {
0:
  %% beam_debug_info_SUITE.erl:737
  %% Anno: #{alias => #{},literals => []}
  _93 = debug_line `405`

  %% beam_debug_info_SUITE.erl:738
  %% Anno: #{alias => #{0 => ['Config']},literals => []}
  _94 = debug_line `406`

  %% beam_debug_info_SUITE.erl:739
  %% Anno: #{alias => #{0 => ['Config']},literals => [{missing_vars,'M'}]}
  _95 = debug_line `407`

  %% beam_debug_info_SUITE.erl:739
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0
  _129 = succeeded:body PrivDir
  br _129, ^129, ^1

129:
  %% beam_debug_info_SUITE.erl:740
  %% Anno: #{alias => #{0 => ['Config']},literals => [{missing_vars,'M'}]}
  _96 = debug_line `408`

  %% beam_debug_info_SUITE.erl:740
  _3 = call (`erlang`:`atom_to_list`/1), `missing_vars`
  _130 = succeeded:body _3
  br _130, ^130, ^1

130:
  %% beam_debug_info_SUITE.erl:740
  _4 = call (`erlang`:`'++'`/2), _3, `".erl"`
  _131 = succeeded:body _4
  br _131, ^131, ^1

131:
  %% beam_debug_info_SUITE.erl:740
  SrcName = call (`filename`:`join`/2), PrivDir, _4
  _132 = succeeded:body SrcName
  br _132, ^132, ^1

132:
  %% beam_debug_info_SUITE.erl:742
  %% Anno: #{alias => #{0 => ['Config']},literals => [{missing_vars,'M'}]}
  _97 = debug_line `409`

  %% beam_debug_info_SUITE.erl:757
  %% Anno: #{alias => #{0 => ['Config']},
             literals =>
                 [{<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'}]}
  _98 = debug_line `410`

  %% beam_debug_info_SUITE.erl:757
  _43 = call (`file`:`write_file`/2), SrcName, `<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>`
  _133 = succeeded:body _43
  br _133, ^133, ^1

133:
  _176 = bif:'=:=' _43, `ok`
  br _176, ^175, ^135

175:
  %% beam_debug_info_SUITE.erl:758
  %% Anno: #{alias => #{0 => ['Config']},
             literals =>
                 [{<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'}]}
  _99 = debug_line `411`

  %% beam_debug_info_SUITE.erl:758
  _44 = call (`compile`:`file`/2), SrcName, `[report,beam_debug_info,binary,to_asm]`
  _136 = succeeded:body _44
  br _136, ^136, ^1

136:
  _171 = bif:is_tuple _44
  br _171, ^171, ^138

171:
  _172 = bif:tuple_size _44
  _173 = bif:'=:=' _172, `3`
  br _173, ^170, ^138

170:
  _47 = get_tuple_element _44, `0`
  _46 = get_tuple_element _44, `1`
  _45 = get_tuple_element _44, `2`
  _169 = bif:'=:=' _47, `ok`
  br _169, ^168, ^138

168:
  _139 = bif:'=:=' _46, `missing_vars`
  br _139, ^139, ^138

139:
  %% beam_debug_info_SUITE.erl:759
  %% Anno: #{alias => #{0 => ['Config'],45 => ['Asm'],46 => " "},
             literals =>
                 [{<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'}]}
  _100 = debug_line `412`
  _164 = bif:is_tuple _45
  br _164, ^164, ^141

164:
  _165 = bif:tuple_size _45
  _166 = bif:'=:=' _165, `5`
  br _166, ^163, ^141

163:
  _52 = get_tuple_element _45, `0`
  _49 = get_tuple_element _45, `3`
  _162 = is_nonempty_list _49
  br _162, ^162, ^141

162:
  _54 = get_hd _49
  _53 = get_tl _49
  _159 = bif:is_tuple _54
  br _159, ^159, ^141

159:
  _160 = bif:tuple_size _54
  _161 = bif:'=:=' _160, `5`
  br _161, ^158, ^141

158:
  _59 = get_tuple_element _54, `0`
  _58 = get_tuple_element _54, `1`
  _57 = get_tuple_element _54, `2`
  _55 = get_tuple_element _54, `4`
  _157 = bif:'=:=' _59, `function`
  br _157, ^156, ^141

156:
  _155 = bif:'=:=' _58, `f`
  br _155, ^154, ^141

154:
  _153 = bif:'=:=' _57, `3`
  br _153, ^152, ^141

152:
  _142 = bif:'=:=' _52, `missing_vars`
  br _142, ^142, ^141

142:
  %% beam_debug_info_SUITE.erl:760
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$"},
             literals =>
                 [{<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'}]}
  _101 = debug_line `413`

  %% beam_debug_info_SUITE.erl:763
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$"},
             literals =>
                 [{<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'}]}
  _102 = debug_line `416`
  br ^147

147:
  %% beam_debug_info_SUITE.erl:763
  _114 = call (`'-missing_vars/1-lc$^0/1-0-'`/1), _55
  _145 = succeeded:body _114
  br _145, ^145, ^1

145:
  br ^143

143:
  _24 = phi { _114, ^145 }

  %% beam_debug_info_SUITE.erl:764
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   24 => ['DebugLines0'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$"},
             literals =>
                 [{true,60},
                  {<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'}]}
  _116 = debug_line `417`

  %% beam_debug_info_SUITE.erl:764
  DebugLines = call (`lists`:`sort`/1), _24
  _149 = succeeded:body DebugLines
  br _149, ^149, ^1

149:
  %% beam_debug_info_SUITE.erl:765
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   24 => ['DebugLines0'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$"},
             literals =>
                 [{true,60},
                  {<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'}]}
  _117 = debug_line `418`
  _84 = put_list DebugLines, `[]`

  %% beam_debug_info_SUITE.erl:765
  _118 = call (`io`:`format`/2), `"~p\n"`, _84
  _150 = succeeded:body _118
  br _150, ^150, ^1

150:
  %% beam_debug_info_SUITE.erl:766
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   24 => ['DebugLines0'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$"},
             literals =>
                 [{true,60},
                  {<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'}]}
  _119 = debug_line `419`

  %% beam_debug_info_SUITE.erl:774
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   24 => ['DebugLines0'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$"},
             literals =>
                 [{true,60},
                  {<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'},
                  {[{3,entry,[{integer,1},{integer,2},{integer,3}]},
                    {4,none,['X','Y','Z0']},
                    {6,none,['X','Y','Z0']},
                    {7,none,['X','Z0','Z1']},
                    {8,1,['Z1']},
                    {10,none,['X','Y','Z0']},
                    {11,none,['Y','Z0','Z1']}],
                   'Expected'}]}
  _120 = debug_line `420`
  _30 = make_fun (`'-missing_vars/1-fun-2-'`/2), DebugLines, `[{3,entry,[{integer,1},{integer,2},{integer,3}]},
  {4,none,['X','Y','Z0']},
  {6,none,['X','Y','Z0']},
  {7,none,['X','Z0','Z1']},
  {8,1,['Z1']},
  {10,none,['X','Y','Z0']},
  {11,none,['Y','Z0','Z1']}]`

  %% beam_debug_info_SUITE.erl:774
  _122 = call _30
  _151 = succeeded:body _122
  br _151, ^151, ^1

151:
  %% beam_debug_info_SUITE.erl:776
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   24 => ['DebugLines0'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$"},
             literals =>
                 [{true,60},
                  {<<"-module(missing_vars).              %%L01\n-export([f/3]).                     %%L02\nf(X, Y, Z0) ->                      %%L03\n    case X of                       %%L04\n        false ->                    %%L05\n            Z1 = Z0#{k := Y},       %%L06\n            foo:go(X),              %%L07\n            Z1;                     %%L08\n        _ ->                        %%L09\n            Z1 = Z0#{k := X},       %%L10\n            Z1                      %%L11\n    end.                            %%L12">>,
                   'S'},
                  {missing_vars,'M'},
                  {[{3,entry,[{integer,1},{integer,2},{integer,3}]},
                    {4,none,['X','Y','Z0']},
                    {6,none,['X','Y','Z0']},
                    {7,none,['X','Z0','Z1']},
                    {8,1,['Z1']},
                    {10,none,['X','Y','Z0']},
                    {11,none,['Y','Z0','Z1']}],
                   'Expected'}]}
  _123 = debug_line `421`
  ret `ok`

141:
  %% beam_debug_info_SUITE.erl:759
  _124 = match_fail `badmatch`, _45
  _167 = succeeded:body _124
  br _167, ^167, ^1

167:
  ret _124

138:
  %% beam_debug_info_SUITE.erl:758
  _125 = match_fail `badmatch`, _44
  _174 = succeeded:body _125
  br _174, ^174, ^1

174:
  ret _125

135:
  %% beam_debug_info_SUITE.erl:757
  _126 = match_fail `badmatch`, _43
  _177 = succeeded:body _126
  br _177, ^177, ^1

177:
  ret _126

1:
  _127 = call (`erlang`:`error`/1), `badarg`
  ret _127
}

%% beam_debug_info_SUITE.erl:783
%% Counter = 23
function `beam_debug_info_SUITE`:`get_unique_beam_files`() {
0:
  %% beam_debug_info_SUITE.erl:783
  %% Anno: #{alias => #{},literals => []}
  _10 = debug_line `422`

  %% beam_debug_info_SUITE.erl:784
  %% Anno: #{alias => #{},literals => []}
  _11 = debug_line `423`
  F = make_fun (`'-get_unique_beam_files/0-IsCloned/1-0-'`/1)

  %% beam_debug_info_SUITE.erl:792
  %% Anno: #{alias => #{},literals => []}
  _18 = debug_line `429`

  %% beam_debug_info_SUITE.erl:792
  _19 = call (`test_lib`:`get_unique_files`/2), `".beam"`, F
  _22 = succeeded:body _19
  br _22, ^22, ^1

22:
  ret _19

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  ret _20
}

%% beam_debug_info_SUITE.erl:794
%% Counter = 6
function `beam_debug_info_SUITE`:`id`(_0) {
0:
  %% beam_debug_info_SUITE.erl:794
  %% Anno: #{alias => #{},literals => []}
  _2 = debug_line `430`

  %% beam_debug_info_SUITE.erl:794
  %% Anno: #{alias => #{0 => ['I']},literals => []}
  _3 = debug_line `431`
  ret _0
}

%% Counter = 6
function `beam_debug_info_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `beam_debug_info_SUITE`
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% Counter = 6
function `beam_debug_info_SUITE`:`module_info`(_0) {
0:
  _2 = call (`erlang`:`get_module_info`/2), `beam_debug_info_SUITE`, _0
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% beam_debug_info_SUITE.erl:784
%% Counter = 32
function `beam_debug_info_SUITE`:`'-get_unique_beam_files/0-IsCloned/1-0-'`(_1) {
0:
  IsCloned = make_fun (`'-get_unique_beam_files/0-IsCloned/1-0-'`/1)

  %% beam_debug_info_SUITE.erl:785
  %% Anno: #{alias =>
                 #{1 => ['ModString'],
                   '-get_unique_beam_files/0-IsCloned/1-0-' =>
                       [{'IsCloned',1}]},
             literals => []}
  _12 = debug_line `424`
  _31 = is_nonempty_list _1
  br _31, ^31, ^21

31:
  _7 = get_hd _1
  _6 = get_tl _1
  _29 = bif:'=:=' _7, `95`
  br _29, ^28, ^22

28:
  _27 = is_nonempty_list _6
  br _27, ^27, ^22

27:
  _9 = get_hd _6
  _8 = get_tl _6
  switch _9, ^22, [
    { `100`, ^25 },
    { `114`, ^26 }
  ]

26:
  _24 = bif:'=:=' _8, `"25_SUITE"`
  br _24, ^24, ^22

24:
  %% beam_debug_info_SUITE.erl:787
  %% Anno: #{alias =>
                 #{1 => ['ModString'],
                   '-get_unique_beam_files/0-IsCloned/1-0-' =>
                       [{'IsCloned',1}]},
             literals => []}
  _13 = debug_line `426`
  ret `true`

25:
  _23 = bif:'=:=' _8, `"ialyzer_SUITE"`
  br _23, ^23, ^22

23:
  %% beam_debug_info_SUITE.erl:786
  %% Anno: #{alias =>
                 #{1 => ['ModString'],
                   '-get_unique_beam_files/0-IsCloned/1-0-' =>
                       [{'IsCloned',1}]},
             literals => []}
  _14 = debug_line `425`
  ret `true`

22:
  %% beam_debug_info_SUITE.erl:788
  %% Anno: #{alias =>
                 #{1 => ['ModString'],
                   6 => ['T'],
                   7 => [4],
                   '-get_unique_beam_files/0-IsCloned/1-0-' =>
                       [{'IsCloned',1}]},
             literals => []}
  _15 = debug_line `427`

  %% beam_debug_info_SUITE.erl:788
  _16 = call IsCloned, _6
  _30 = succeeded:body _16
  br _30, ^30, ^1

30:
  ret _16

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  ret _18

21:
  %% beam_debug_info_SUITE.erl:789
  %% Anno: #{alias =>
                 #{1 => [5,'ModString'],
                   '-get_unique_beam_files/0-IsCloned/1-0-' =>
                       [{'IsCloned',1}]},
             literals => []}
  _17 = debug_line `428`
  ret `false`
}

%% beam_debug_info_SUITE.erl:774
%% Counter = 128
function `beam_debug_info_SUITE`:`'-missing_vars/1-fun-2-'`(DebugLines, Expected) {
0:
  _126 = bif:'=:=' DebugLines, Expected
  br _126, ^126, ^125

126:
  ret `ok`

125:
  _85 = put_tuple `value`, DebugLines
  _86 = put_list _85, `[]`
  _87 = put_tuple `expected`, Expected
  _88 = put_list _87, _86
  _89 = put_list `{expression,"DebugLines"}`, _88
  _90 = put_list `{line,774}`, _89
  _91 = put_list `{module,beam_debug_info_SUITE}`, _90
  _92 = put_tuple `assertEqual`, _91

  %% beam_debug_info_SUITE.erl:774
  _121 = call (`erlang`:`error`/1), _92
  _127 = succeeded:body _121
  br _127, ^127, ^1

127:
  ret _121

1:
  _122 = call (`erlang`:`error`/1), `badarg`
  ret _122
}

%% beam_debug_info_SUITE.erl:763
%% Counter = 150
function `beam_debug_info_SUITE`:`'-missing_vars/1-lc$^0/1-0-'`(_12) {
0:
  _147 = is_nonempty_list _12
  br _147, ^147, ^117

147:
  _64 = get_hd _12
  _63 = get_tl _12
  _143 = bif:is_tuple _64
  br _143, ^143, ^118

143:
  _144 = bif:tuple_size _64
  _145 = bif:'=:=' _144, `5`
  br _145, ^142, ^118

142:
  _69 = get_tuple_element _64, `0`
  _68 = get_tuple_element _64, `1`
  _65 = get_tuple_element _64, `4`
  _141 = bif:'=:=' _69, `debug_line`
  br _141, ^140, ^118

140:
  _137 = bif:is_tuple _65
  br _137, ^137, ^118

137:
  _138 = bif:tuple_size _65
  _139 = bif:'=:=' _138, `2`
  br _139, ^136, ^118

136:
  _71 = get_tuple_element _65, `0`
  _70 = get_tuple_element _65, `1`

  %% beam_debug_info_SUITE.erl:761
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$",63 => "\v=",66 => "(",67 => "'",
                   68 => ['Anno'],
                   70 => ['Vars'],
                   71 => ['FrameSz'],
                   '-missing_vars/1-lc$^0/1-0-' => [{'lc$^0',1}]},
             literals => []}
  _103 = debug_line `414`

  %% beam_debug_info_SUITE.erl:761
  _72 = call (`lists`:`keyfind`/3), `location`, `1`, _68
  _119 = succeeded:body _72
  br _119, ^119, ^1

119:
  _132 = bif:is_tuple _72
  br _132, ^132, ^121

132:
  _133 = bif:tuple_size _72
  _134 = bif:'=:=' _133, `3`
  br _134, ^131, ^121

131:
  _75 = get_tuple_element _72, `0`
  _74 = get_tuple_element _72, `1`
  _73 = get_tuple_element _72, `2`
  _130 = bif:'=:=' _75, `location`
  br _130, ^129, ^121

129:
  %% beam_debug_info_SUITE.erl:762
  %% Anno: #{alias =>
                 #{0 => ['Config'],
                   45 => ['Asm'],
                   46 => " ",48 => "&",50 => "#",51 => "\"",52 => "!",
                   53 => "%",
                   55 => ['Is'],
                   56 => "$",63 => "\v=",66 => "(",67 => "'",
                   68 => ['Anno'],
                   70 => ['Vars'],
                   71 => ['FrameSz'],
                   73 => ['Line'],
                   74 => ['_File'],
                   '-missing_vars/1-lc$^0/1-0-' => [{'lc$^0',1}]},
             literals => []}
  _104 = debug_line `415`
  br ^126

126:
  %% beam_debug_info_SUITE.erl:762
  _108 = call (`'-missing_vars/1-lc$^1/1-1-'`/1), _70
  _124 = succeeded:body _108
  br _124, ^124, ^1

124:
  br ^122

122:
  _21 = phi { _108, ^124 }

  %% beam_debug_info_SUITE.erl:763
  _22 = call (`'-missing_vars/1-lc$^0/1-0-'`/1), _63
  _128 = succeeded:body _22
  br _128, ^128, ^1

128:
  _83 = put_tuple _73, _71, _21
  _110 = put_list _83, _22
  ret _110

121:
  %% beam_debug_info_SUITE.erl:761
  _111 = match_fail `badmatch`, _72
  _135 = succeeded:body _111
  br _135, ^135, ^1

135:
  ret _111

118:
  %% beam_debug_info_SUITE.erl:763
  _112 = call (`'-missing_vars/1-lc$^0/1-0-'`/1), _63
  _146 = succeeded:body _112
  br _146, ^146, ^1

146:
  ret _112

117:
  _148 = bif:'=:=' _12, `[]`
  br _148, ^148, ^116

148:
  ret `[]`

116:
  _62 = put_tuple `bad_generator`, _12

  %% beam_debug_info_SUITE.erl:763
  _113 = call (`erlang`:`error`/1), _62
  _149 = succeeded:body _113
  br _149, ^149, ^1

149:
  ret _113

1:
  _114 = call (`erlang`:`error`/1), `badarg`
  ret _114
}

%% beam_debug_info_SUITE.erl:762
%% Counter = 122
function `beam_debug_info_SUITE`:`'-missing_vars/1-lc$^1/1-1-'`(_17) {
0:
  _119 = is_nonempty_list _17
  br _119, ^119, ^111

119:
  _80 = get_hd _17
  _79 = get_tl _17
  _115 = bif:is_tuple _80
  br _115, ^115, ^112

115:
  _116 = bif:tuple_size _80
  _117 = bif:'=:=' _116, `2`
  br _117, ^114, ^112

114:
  _82 = get_tuple_element _80, `0`

  %% beam_debug_info_SUITE.erl:762
  _19 = call (`'-missing_vars/1-lc$^1/1-1-'`/1), _79
  _113 = succeeded:body _19
  br _113, ^113, ^1

113:
  _105 = put_list _82, _19
  ret _105

112:
  %% beam_debug_info_SUITE.erl:762
  _106 = call (`'-missing_vars/1-lc$^1/1-1-'`/1), _79
  _118 = succeeded:body _106
  br _118, ^118, ^1

118:
  ret _106

111:
  _120 = bif:'=:=' _17, `[]`
  br _120, ^120, ^110

120:
  ret `[]`

110:
  _78 = put_tuple `bad_generator`, _17

  %% beam_debug_info_SUITE.erl:762
  _107 = call (`erlang`:`error`/1), _78
  _121 = succeeded:body _107
  br _121, ^121, ^1

121:
  ret _107

1:
  _108 = call (`erlang`:`error`/1), `badarg`
  ret _108
}

%% beam_debug_info_SUITE.erl:731
%% Counter = 88
function `beam_debug_info_SUITE`:`'-call_in_call_args/1-lc$^0/1-0-'`(_13) {
0:
  _85 = is_nonempty_list _13
  br _85, ^85, ^71

85:
  _50 = get_hd _13
  _49 = get_tl _13
  br ^82

82:
  %% beam_debug_info_SUITE.erl:731
  _12 = bif:element `1`, _50
  _77 = succeeded:guard _12
  br _77, ^77, ^75

77:
  _78 = bif:'=:=' _12, `debug_line`
  br _78, ^78, ^75

78:
  br ^76

76:
  %% beam_debug_info_SUITE.erl:731
  _15 = call (`'-call_in_call_args/1-lc$^0/1-0-'`/1), _49
  _79 = succeeded:body _15
  br _79, ^79, ^1

79:
  _64 = put_list _50, _15
  ret _64

75:
  %% beam_debug_info_SUITE.erl:731
  _65 = call (`'-call_in_call_args/1-lc$^0/1-0-'`/1), _49
  _80 = succeeded:body _65
  br _80, ^80, ^1

80:
  ret _65

71:
  _86 = bif:'=:=' _13, `[]`
  br _86, ^86, ^70

86:
  ret `[]`

70:
  _48 = put_tuple `bad_generator`, _13

  %% beam_debug_info_SUITE.erl:731
  _67 = call (`erlang`:`error`/1), _48
  _87 = succeeded:body _67
  br _87, ^87, ^1

87:
  ret _67

1:
  _68 = call (`erlang`:`error`/1), `badarg`
  ret _68
}

%% beam_debug_info_SUITE.erl:566
%% Counter = 101
function `beam_debug_info_SUITE`:`'-decode_literal_table/1-zlc$^0/2-0-'`(_7, _6) {
0:
  _31 = bs_start_match `new`, _6
  _83 = succeeded:guard _31
  br _83, ^83, ^72

83:
  %% beam_debug_info_SUITE.erl:565
  _32 = bs_match `integer`, _31, `[unsigned,big]`, `32`, `1`
  _73 = succeeded:guard _32
  br _73, ^73, ^72

73:
  _33 = bs_extract _32

  %% beam_debug_info_SUITE.erl:565
  _34 = bs_match `binary`, _32, `[unsigned,big]`, `all`, `1`
  _74 = succeeded:guard _34
  br _74, ^74, ^72

74:
  _35 = bs_extract _34
  _82 = is_nonempty_list _7
  br _82, ^82, ^72

82:
  _37 = get_hd _7
  _36 = get_tl _7
  _38 = bs_start_match `new`, _35
  _81 = succeeded:guard _38
  br _81, ^81, ^76

81:
  %% beam_debug_info_SUITE.erl:565
  _39 = bs_match `binary`, _38, `[unsigned,big]`, _33, `8`
  _77 = succeeded:guard _39
  br _77, ^77, ^76

77:
  _40 = bs_extract _39

  %% beam_debug_info_SUITE.erl:565
  _41 = bs_match `binary`, _39, `[unsigned,big]`, `all`, `1`
  _78 = succeeded:guard _41
  br _78, ^78, ^76

78:
  _42 = bs_extract _41

  %% beam_debug_info_SUITE.erl:565
  _10 = call (`erlang`:`binary_to_term`/1), _40
  _79 = succeeded:body _10
  br _79, ^79, ^1

79:
  %% beam_debug_info_SUITE.erl:566
  _11 = call (`'-decode_literal_table/1-zlc$^0/2-0-'`/2), _36, _42
  _80 = succeeded:body _11
  br _80, ^80, ^1

80:
  _43 = put_tuple _37, _10
  _64 = put_list _43, _11
  ret _64

76:
  br ^30

72:
  br ^30

30:
  _46 = bs_start_match `new`, _6
  _95 = succeeded:guard _46
  br _95, ^95, ^85

95:
  %% beam_debug_info_SUITE.erl:565
  _47 = bs_match `integer`, _46, `[unsigned,big]`, `32`, `1`
  _86 = succeeded:guard _47
  br _86, ^86, ^85

86:
  _48 = bs_extract _47

  %% beam_debug_info_SUITE.erl:565
  _49 = bs_match `binary`, _47, `[unsigned,big]`, `all`, `1`
  _87 = succeeded:guard _49
  br _87, ^87, ^85

87:
  _50 = bs_extract _49
  _94 = is_nonempty_list _7
  br _94, ^94, ^85

94:
  _52 = get_hd _7
  _51 = get_tl _7
  _55 = bs_start_match `new`, _50
  _93 = succeeded:guard _55
  br _93, ^93, ^89

93:
  %% beam_debug_info_SUITE.erl:565
  _56 = bs_match `binary`, _55, `[unsigned,big]`, _48, `8`
  _90 = succeeded:guard _56
  br _90, ^90, ^89

90:
  _57 = bs_extract _56

  %% beam_debug_info_SUITE.erl:565
  _58 = bs_match `binary`, _56, `[unsigned,big]`, `all`, `1`
  _91 = succeeded:guard _58
  br _91, ^91, ^89

91:
  _59 = bs_extract _58

  %% beam_debug_info_SUITE.erl:566
  _65 = call (`'-decode_literal_table/1-zlc$^0/2-0-'`/2), _51, _59
  _92 = succeeded:body _65
  br _92, ^92, ^1

92:
  ret _65

89:
  br ^29

85:
  br ^29

29:
  _99 = bif:'=:=' _7, `[]`
  br _99, ^99, ^97

99:
  _98 = bif:'=:=' _6, `<<>>`
  br _98, ^98, ^97

98:
  ret `[]`

97:
  _60 = put_tuple _7, _6
  _61 = put_tuple `bad_generators`, _60

  %% beam_debug_info_SUITE.erl:566
  _66 = call (`erlang`:`error`/1), _61
  _100 = succeeded:body _66
  br _100, ^100, ^1

100:
  ret _66

1:
  _67 = call (`erlang`:`error`/1), `badarg`
  ret _67
}

%% beam_debug_info_SUITE.erl:550
%% Counter = 59
function `beam_debug_info_SUITE`:`'-decode_line_table/3-lc$^0/1-0-'`(_9) {
0:
  _56 = is_nonempty_list _9
  br _56, ^56, ^48

56:
  _34 = get_hd _9
  _33 = get_tl _9
  _52 = bif:is_tuple _34
  br _52, ^52, ^49

52:
  _53 = bif:tuple_size _34
  _54 = bif:'=:=' _53, `2`
  br _54, ^51, ^49

51:
  _37 = get_tuple_element _34, `0`
  _36 = get_tuple_element _34, `1`

  %% beam_debug_info_SUITE.erl:550
  _11 = call (`'-decode_line_table/3-lc$^0/1-0-'`/1), _33
  _50 = succeeded:body _11
  br _50, ^50, ^1

50:
  _38 = put_tuple _37, _36
  _42 = put_list _38, _11
  ret _42

49:
  _35 = put_tuple `badmatch`, _34

  %% beam_debug_info_SUITE.erl:550
  _43 = call (`erlang`:`error`/1), _35
  _55 = succeeded:body _43
  br _55, ^55, ^1

55:
  ret _43

48:
  _57 = bif:'=:=' _9, `[]`
  br _57, ^57, ^47

57:
  ret `[]`

47:
  _32 = put_tuple `bad_generator`, _9

  %% beam_debug_info_SUITE.erl:550
  _44 = call (`erlang`:`error`/1), _32
  _58 = succeeded:body _44
  br _58, ^58, ^1

58:
  ret _44

1:
  _45 = call (`erlang`:`error`/1), `badarg`
  ret _45
}

%% beam_debug_info_SUITE.erl:541
%% Counter = 193
function `beam_debug_info_SUITE`:`'-get_debug_info/2-lc$^2/1-2-'`(_32, DebugMap, Lines) {
0:
  _190 = is_nonempty_list _32
  br _190, ^190, ^168

190:
  _119 = get_hd _32
  _118 = get_tl _32
  _186 = bif:is_tuple _119
  br _186, ^186, ^169

186:
  _187 = bif:tuple_size _119
  _188 = bif:'=:=' _187, `2`
  br _188, ^185, ^169

185:
  _122 = get_tuple_element _119, `0`
  _121 = get_tuple_element _119, `1`

  %% beam_debug_info_SUITE.erl:542
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1'],
                   87 => ['Fs'],
                   88 => ['_Opts'],
                   89 => ['_Attr'],
                   90 => ['_Exp'],
                   91 => "/",
                   118 => [30,116],
                   121 => ['Info'],
                   122 => [115,'Index'],
                   '-get_debug_info/2-lc$^2/1-2-' => [{'lc$^2',1}]},
             literals => []}
  _157 = debug_line `288`
  br ^183

183:
  %% beam_debug_info_SUITE.erl:542
  _31 = bif:is_map_key _122, DebugMap
  _175 = succeeded:guard _31
  br _175, ^175, ^173

175:
  _176 = bif:'=:=' _31, `true`
  br _176, ^176, ^173

176:
  br ^174

174:
  %% beam_debug_info_SUITE.erl:540
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1'],
                   87 => ['Fs'],
                   88 => ['_Opts'],
                   89 => ['_Attr'],
                   90 => ['_Exp'],
                   91 => "/",
                   118 => [30,116],
                   121 => ['Info'],
                   122 => [115,'Index'],
                   '-get_debug_info/2-lc$^2/1-2-' => [{'lc$^2',1}]},
             literals => [{true,123}]}
  _159 = debug_line `286`

  %% beam_debug_info_SUITE.erl:540
  _34 = bif:map_get _122, DebugMap
  _177 = succeeded:body _34
  br _177, ^177, ^1

177:
  %% beam_debug_info_SUITE.erl:540
  _35 = bif:map_get _34, Lines
  _178 = succeeded:body _35
  br _178, ^178, ^1

178:
  %% beam_debug_info_SUITE.erl:541
  _36 = call (`'-get_debug_info/2-lc$^2/1-2-'`/3), _118, DebugMap, Lines
  _179 = succeeded:body _36
  br _179, ^179, ^1

179:
  _124 = put_tuple _35, _121
  _160 = put_list _124, _36
  ret _160

173:
  %% beam_debug_info_SUITE.erl:541
  _161 = call (`'-get_debug_info/2-lc$^2/1-2-'`/3), _118, DebugMap, Lines
  _180 = succeeded:body _161
  br _180, ^180, ^1

180:
  ret _161

169:
  _120 = put_tuple `badmatch`, _119

  %% beam_debug_info_SUITE.erl:541
  _163 = call (`erlang`:`error`/1), _120
  _189 = succeeded:body _163
  br _189, ^189, ^1

189:
  ret _163

168:
  _191 = bif:'=:=' _32, `[]`
  br _191, ^191, ^167

191:
  ret `[]`

167:
  _117 = put_tuple `bad_generator`, _32

  %% beam_debug_info_SUITE.erl:541
  _164 = call (`erlang`:`error`/1), _117
  _192 = succeeded:body _164
  br _192, ^192, ^1

192:
  ret _164

1:
  _165 = call (`erlang`:`error`/1), `badarg`
  ret _165
}

%% beam_debug_info_SUITE.erl:537
%% Counter = 175
function `beam_debug_info_SUITE`:`'-get_debug_info/2-lc$^0/1-0-'`(_20) {
0:
  _172 = is_nonempty_list _20
  br _172, ^172, ^156

172:
  _97 = get_hd _20
  _96 = get_tl _20
  _168 = bif:is_tuple _97
  br _168, ^168, ^157

168:
  _169 = bif:tuple_size _97
  _170 = bif:'=:=' _169, `5`
  br _170, ^167, ^157

167:
  _103 = get_tuple_element _97, `0`
  _102 = get_tuple_element _97, `1`
  _101 = get_tuple_element _97, `2`
  _100 = get_tuple_element _97, `3`
  _99 = get_tuple_element _97, `4`
  _166 = bif:'=:=' _103, `function`
  br _166, ^165, ^157

165:
  %% beam_debug_info_SUITE.erl:538
  %% Anno: #{alias =>
                 #{0 => ['Mod'],
                   1 => ['Beam'],
                   52 => "+",
                   55 => ['DebugInfo0'],
                   59 => ['Atoms0'],
                   63 => ['Lines0'],
                   79 => ['Version'],
                   81 => ['_NumItems'],
                   83 => ['_NumVars'],
                   85 => ['DebugInfo1'],
                   87 => ['Fs'],
                   88 => ['_Opts'],
                   89 => ['_Attr'],
                   90 => ['_Exp'],
                   91 => "/",
                   96 => [17,94],
                   99 => ['Is'],
                   100 => ['_Entry'],
                   101 => ['_Arity'],
                   102 => ['_Name'],
                   '-get_debug_info/2-lc$^0/1-0-' => [{'lc$^0',1}]},
             literals => []}
  _143 = debug_line `284`
  br ^163

163:
  %% beam_debug_info_SUITE.erl:538
  _149 = call (`'-get_debug_info/2-lc$^1/1-1-'`/2), _99, _96
  _160 = succeeded:body _149
  br _160, ^160, ^1

160:
  ret _149

157:
  _98 = put_tuple `badmatch`, _97

  %% beam_debug_info_SUITE.erl:537
  _151 = call (`erlang`:`error`/1), _98
  _171 = succeeded:body _151
  br _171, ^171, ^1

171:
  ret _151

156:
  _173 = bif:'=:=' _20, `[]`
  br _173, ^173, ^155

173:
  ret `[]`

155:
  _95 = put_tuple `bad_generator`, _20

  %% beam_debug_info_SUITE.erl:537
  _152 = call (`erlang`:`error`/1), _95
  _174 = succeeded:body _152
  br _174, ^174, ^1

174:
  ret _152

1:
  _153 = call (`erlang`:`error`/1), `badarg`
  ret _153
}

%% beam_debug_info_SUITE.erl:538
%% Counter = 166
function `beam_debug_info_SUITE`:`'-get_debug_info/2-lc$^1/1-1-'`(_22, _96) {
0:
  _162 = is_nonempty_list _22
  br _162, ^162, ^152

162:
  _108 = get_hd _22
  _107 = get_tl _22
  _158 = bif:is_tuple _108
  br _158, ^158, ^153

158:
  _159 = bif:tuple_size _108
  _160 = bif:'=:=' _159, `4`
  br _160, ^157, ^153

157:
  _112 = get_tuple_element _108, `0`
  _111 = get_tuple_element _108, `1`
  _110 = get_tuple_element _108, `2`
  _109 = get_tuple_element _108, `3`
  _156 = bif:'=:=' _112, `debug_line`
  br _156, ^155, ^153

155:
  %% beam_debug_info_SUITE.erl:538
  _24 = call (`'-get_debug_info/2-lc$^1/1-1-'`/2), _107, _96
  _154 = succeeded:body _24
  br _154, ^154, ^1

154:
  _113 = put_tuple _110, _111
  _146 = put_list _113, _24
  ret _146

153:
  %% beam_debug_info_SUITE.erl:538
  _147 = call (`'-get_debug_info/2-lc$^1/1-1-'`/2), _107, _96
  _161 = succeeded:body _147
  br _161, ^161, ^1

161:
  ret _147

152:
  _164 = bif:'=:=' _22, `[]`
  br _164, ^164, ^151

164:
  %% beam_debug_info_SUITE.erl:537
  _145 = call (`'-get_debug_info/2-lc$^0/1-0-'`/1), _96
  _163 = succeeded:body _145
  br _163, ^163, ^1

163:
  ret _145

151:
  _106 = put_tuple `bad_generator`, _22

  %% beam_debug_info_SUITE.erl:538
  _148 = call (`erlang`:`error`/1), _106
  _165 = succeeded:body _148
  br _165, ^165, ^1

165:
  ret _148

1:
  _149 = call (`erlang`:`error`/1), `badarg`
  ret _149
}

%% beam_debug_info_SUITE.erl:490
%% Counter = 51
function `beam_debug_info_SUITE`:`'-abstr_debug_lines/1-lc$^0/1-0-'`(_3) {
0:
  _48 = is_nonempty_list _3
  br _48, ^48, ^37

48:
  _20 = get_hd _3
  _19 = get_tl _3
  _44 = bif:is_tuple _20
  br _44, ^44, ^38

44:
  _45 = bif:tuple_size _20
  _46 = bif:'=:=' _45, `5`
  br _46, ^43, ^38

43:
  _25 = get_tuple_element _20, `0`
  _23 = get_tuple_element _20, `2`
  _22 = get_tuple_element _20, `3`
  _21 = get_tuple_element _20, `4`
  _42 = bif:'=:=' _25, `function`
  br _42, ^41, ^38

41:
  %% beam_debug_info_SUITE.erl:489
  _5 = call (`abstr_extract_debug_lines`/1), _21
  _39 = succeeded:body _5
  br _39, ^39, ^1

39:
  %% beam_debug_info_SUITE.erl:490
  _6 = call (`'-abstr_debug_lines/1-lc$^0/1-0-'`/1), _19
  _40 = succeeded:body _6
  br _40, ^40, ^1

40:
  _26 = put_tuple _23, _22
  _27 = put_tuple _26, _5
  _31 = put_list _27, _6
  ret _31

38:
  %% beam_debug_info_SUITE.erl:490
  _32 = call (`'-abstr_debug_lines/1-lc$^0/1-0-'`/1), _19
  _47 = succeeded:body _32
  br _47, ^47, ^1

47:
  ret _32

37:
  _49 = bif:'=:=' _3, `[]`
  br _49, ^49, ^36

49:
  ret `[]`

36:
  _18 = put_tuple `bad_generator`, _3

  %% beam_debug_info_SUITE.erl:490
  _33 = call (`erlang`:`error`/1), _18
  _50 = succeeded:body _33
  br _50, ^50, ^1

50:
  ret _33

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  ret _34
}

%% beam_debug_info_SUITE.erl:278
%% Counter = 56
function `beam_debug_info_SUITE`:`'-extract_src_vars/1-lc$^0/1-0-'`(_7) {
0:
  _42 = is_nonempty_list _7
  br _42, ^42, ^39

42:
  _20 = get_hd _7
  _19 = get_tl _7
  _21 = put_list _20, _19

  %% beam_debug_info_SUITE.erl:278
  _22 = call (`erts_internal`:`mc_refill`/1), _21
  _40 = succeeded:body _22
  br _40, ^40, ^1

40:
  %% beam_debug_info_SUITE.erl:278
  _34 = call (`'-extract_src_vars/1-lc$^0/1-0-'`/1), _22
  _41 = succeeded:body _34
  br _41, ^41, ^1

41:
  ret _34

39:
  _50 = bif:is_tuple _7
  br _50, ^50, ^43

50:
  _51 = bif:tuple_size _7
  _52 = bif:'=:=' _51, `3`
  br _52, ^49, ^38

49:
  _25 = get_tuple_element _7, `0`
  _24 = get_tuple_element _7, `1`
  _23 = get_tuple_element _7, `2`
  _47 = bif:'=:=' _24, `true`
  br _47, ^46, ^44

46:
  %% beam_debug_info_SUITE.erl:278
  _9 = call (`'-extract_src_vars/1-lc$^0/1-0-'`/1), _23
  _45 = succeeded:body _9
  br _45, ^45, ^1

45:
  _32 = put_list _25, _9
  ret _32

44:
  %% beam_debug_info_SUITE.erl:278
  _33 = call (`'-extract_src_vars/1-lc$^0/1-0-'`/1), _23
  _48 = succeeded:body _33
  br _48, ^48, ^1

48:
  ret _33

43:
  _54 = bif:'=:=' _7, `none`
  br _54, ^53, ^38

53:
  ret `[]`

38:
  _18 = put_tuple `bad_generator`, _7
  _35 = call (`erlang`:`error`/1), _18
  _55 = succeeded:body _35
  br _55, ^55, ^1

55:
  ret _35

1:
  _36 = call (`erlang`:`error`/1), `badarg`
  ret _36
}

%% beam_debug_info_SUITE.erl:274
%% Counter = 46
function `beam_debug_info_SUITE`:`'-source_variables/1-lc$^0/1-0-'`(_3) {
0:
  _43 = is_nonempty_list _3
  br _43, ^43, ^32

43:
  _15 = get_hd _3
  _14 = get_tl _3
  _39 = bif:is_tuple _15
  br _39, ^39, ^33

39:
  _40 = bif:tuple_size _15
  _41 = bif:'=:=' _40, `5`
  br _41, ^38, ^33

38:
  _20 = get_tuple_element _15, `0`
  _18 = get_tuple_element _15, `2`
  _17 = get_tuple_element _15, `3`
  _37 = bif:'=:=' _20, `function`
  br _37, ^36, ^33

36:
  %% beam_debug_info_SUITE.erl:273
  _5 = call (`extract_src_vars`/1), _15
  _34 = succeeded:body _5
  br _34, ^34, ^1

34:
  %% beam_debug_info_SUITE.erl:274
  _6 = call (`'-source_variables/1-lc$^0/1-0-'`/1), _14
  _35 = succeeded:body _6
  br _35, ^35, ^1

35:
  _21 = put_tuple _18, _17
  _22 = put_tuple _21, _5
  _26 = put_list _22, _6
  ret _26

33:
  %% beam_debug_info_SUITE.erl:274
  _27 = call (`'-source_variables/1-lc$^0/1-0-'`/1), _14
  _42 = succeeded:body _27
  br _42, ^42, ^1

42:
  ret _27

32:
  _44 = bif:'=:=' _3, `[]`
  br _44, ^44, ^31

44:
  ret `[]`

31:
  _13 = put_tuple `bad_generator`, _3

  %% beam_debug_info_SUITE.erl:274
  _28 = call (`erlang`:`error`/1), _13
  _45 = succeeded:body _28
  br _45, ^45, ^1

45:
  ret _28

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  ret _29
}

%% beam_debug_info_SUITE.erl:248
%% Counter = 50
function `beam_debug_info_SUITE`:`'-load_get_debug_info/3-fun-0-'`(_1, _2) {
0:
  %% beam_debug_info_SUITE.erl:249
  %% Anno: #{alias => #{0 => ['Node'],1 => ['Mod'],2 => ['Beam']},
             literals => []}
  _22 = debug_line `118`

  %% beam_debug_info_SUITE.erl:249
  _16 = call (`code`:`load_binary`/3), _1, `[]`, _2
  _32 = succeeded:body _16
  br _32, ^32, ^1

32:
  _46 = bif:is_tuple _16
  br _46, ^46, ^34

46:
  _47 = bif:tuple_size _16
  _48 = bif:'=:=' _47, `2`
  br _48, ^45, ^34

45:
  _18 = get_tuple_element _16, `0`
  _17 = get_tuple_element _16, `1`
  _44 = bif:'=:=' _18, `module`
  br _44, ^43, ^34

43:
  _35 = bif:'=:=' _17, _1
  br _35, ^35, ^34

35:
  %% beam_debug_info_SUITE.erl:250
  %% Anno: #{alias => #{0 => ['Node'],1 => ['Mod'],2 => ['Beam'],17 => "\f"},
             literals => []}
  _23 = debug_line `119`

  %% beam_debug_info_SUITE.erl:250
  DebugInfo = call (`code`:`get_debug_info`/1), _1
  _36 = succeeded:body DebugInfo
  br _36, ^36, ^1

36:
  %% beam_debug_info_SUITE.erl:252
  %% Anno: #{alias => #{0 => ['Node'],1 => ['Mod'],2 => ['Beam'],17 => "\f"},
             literals => []}
  _24 = debug_line `120`
  _40 = bif:'=:=' _1, `beam_debug_info_SUITE`
  br _40, ^39, ^38

39:
  %% beam_debug_info_SUITE.erl:256
  %% Anno: #{alias => #{0 => ['Node'],1 => ['Mod'],2 => ['Beam'],17 => "\f"},
             literals => []}
  _25 = debug_line `121`
  br ^37

38:
  %% beam_debug_info_SUITE.erl:260
  %% Anno: #{alias =>
                 #{0 => ['Node'],1 => [13,'Mod'],2 => ['Beam'],17 => "\f"},
             literals => []}
  _26 = debug_line `122`

  %% beam_debug_info_SUITE.erl:260
  _14 = call (`code`:`delete`/1), _1
  _41 = succeeded:body _14
  br _41, ^41, ^1

41:
  %% beam_debug_info_SUITE.erl:261
  %% Anno: #{alias =>
                 #{0 => ['Node'],1 => [13,'Mod'],2 => ['Beam'],17 => "\f"},
             literals => []}
  _27 = debug_line `123`

  %% beam_debug_info_SUITE.erl:261
  _15 = call (`code`:`purge`/1), _1
  _42 = succeeded:body _15
  br _42, ^42, ^1

42:
  br ^37

37:
  %% beam_debug_info_SUITE.erl:263
  %% Anno: #{alias => #{0 => ['Node'],1 => ['Mod'],2 => ['Beam'],17 => "\f"},
             literals => []}
  _28 = debug_line `124`
  ret DebugInfo

34:
  %% beam_debug_info_SUITE.erl:249
  _29 = match_fail `badmatch`, _16
  _49 = succeeded:body _29
  br _49, ^49, ^1

49:
  ret _29

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  ret _30
}

%% beam_debug_info_SUITE.erl:241
%% Counter = 21
function `beam_debug_info_SUITE`:`'-family_difference/2-fun-0-'`(_6) {
0:
  %% beam_debug_info_SUITE.erl:241
  _5 = call (`sofs`:`no_elements`/1), _6
  _20 = succeeded:body _5
  br _20, ^20, ^1

20:
  %% beam_debug_info_SUITE.erl:241
  _17 = bif:'=/=' _5, `0`
  ret _17

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  ret _18
}

%% beam_debug_info_SUITE.erl:187
%% Counter = 48
function `beam_debug_info_SUITE`:`'-format_vars/1-fun-1-'`(_11) {
0:
  %% beam_debug_info_SUITE.erl:188
  %% Anno: #{alias => #{0 => ['Vs'],11 => [24,'V']},literals => []}
  _37 = debug_line `74`

  %% beam_debug_info_SUITE.erl:188
  _25 = call (`erlang`:`atom_to_binary`/1), _11
  _42 = succeeded:body _25
  br _42, ^42, ^1

42:
  _26 = bs_start_match `new`, _25
  _47 = succeeded:guard _26
  br _47, ^47, ^44

47:
  _27 = bs_match `string`, _26, `<<"_">>`
  _45 = succeeded:guard _27
  br _45, ^45, ^44

45:
  %% beam_debug_info_SUITE.erl:189
  _28 = bs_match `binary`, _27, `[unsigned,big]`, `all`, `8`
  _46 = succeeded:guard _28
  br _46, ^46, ^44

46:
  _29 = bs_extract _28

  %% beam_debug_info_SUITE.erl:189
  %% Anno: #{alias => #{0 => ['Vs'],11 => [24,'V'],29 => [16]},literals => []}
  _38 = debug_line `75`
  ret `true`

44:
  %% beam_debug_info_SUITE.erl:190
  %% Anno: #{alias => #{0 => ['Vs'],11 => [24,'V'],25 => [17]},literals => []}
  _39 = debug_line `76`
  ret `false`

1:
  _40 = call (`erlang`:`error`/1), `badarg`
  ret _40
}

%% beam_debug_info_SUITE.erl:186
%% Counter = 43
function `beam_debug_info_SUITE`:`'-format_vars/1-lc$^0/1-0-'`(_3) {
0:
  _40 = is_nonempty_list _3
  br _40, ^40, ^37

40:
  _22 = get_hd _3
  _21 = get_tl _3
  _23 = put_list _22, `[]`

  %% beam_debug_info_SUITE.erl:186
  _5 = call (`io_lib`:`format`/2), `"~ts"`, _23
  _38 = succeeded:body _5
  br _38, ^38, ^1

38:
  %% beam_debug_info_SUITE.erl:186
  _6 = call (`'-format_vars/1-lc$^0/1-0-'`/1), _21
  _39 = succeeded:body _6
  br _39, ^39, ^1

39:
  _32 = put_list _5, _6
  ret _32

37:
  _41 = bif:'=:=' _3, `[]`
  br _41, ^41, ^36

41:
  ret `[]`

36:
  _20 = put_tuple `bad_generator`, _3

  %% beam_debug_info_SUITE.erl:186
  _33 = call (`erlang`:`error`/1), _20
  _42 = succeeded:body _33
  br _42, ^42, ^1

42:
  ret _33

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  ret _34
}

%% beam_debug_info_SUITE.erl:173
%% Counter = 208
function `beam_debug_info_SUITE`:`'-do_smoke/2-lc$^1/1-1-'`(_25) {
0:
  _205 = is_nonempty_list _25
  br _205, ^205, ^177

205:
  _83 = get_hd _25
  _82 = get_tl _25
  _201 = bif:is_tuple _83
  br _201, ^201, ^178

201:
  _202 = bif:tuple_size _83
  _203 = bif:'=:=' _202, `2`
  br _203, ^200, ^178

200:
  _86 = get_tuple_element _83, `0`
  _85 = get_tuple_element _83, `1`
  _197 = bif:is_tuple _86
  br _197, ^197, ^178

197:
  _198 = bif:tuple_size _86
  _199 = bif:'=:=' _198, `2`
  br _199, ^196, ^178

196:
  _88 = get_tuple_element _86, `0`
  _87 = get_tuple_element _86, `1`

  %% beam_debug_info_SUITE.erl:167
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars'],
                   82 => [24,80],
                   85 => ['Vars0'],
                   87 => [79,'A'],
                   88 => ['F'],
                   '-do_smoke/2-lc$^1/1-1-' => [{'lc$^1',1}]},
             literals => []}
  _162 = debug_line `59`

  %% beam_debug_info_SUITE.erl:167
  _89 = call (`format_vars`/1), _85
  _179 = succeeded:body _89
  br _179, ^179, ^1

179:
  _192 = bif:is_tuple _89
  br _192, ^192, ^181

192:
  _193 = bif:tuple_size _89
  _194 = bif:'=:=' _193, `2`
  br _194, ^191, ^181

191:
  _92 = get_tuple_element _89, `0`
  _91 = get_tuple_element _89, `1`

  %% beam_debug_info_SUITE.erl:168
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars'],
                   82 => [24,80],
                   85 => ['Vars0'],
                   87 => [79,'A'],
                   88 => ['F'],
                   91 => [90,'B'],
                   92 => ['Vars'],
                   '-do_smoke/2-lc$^1/1-1-' => [{'lc$^1',1}]},
             literals => []}
  _163 = debug_line `60`
  _93 = put_list _92, `[]`
  _94 = put_list _87, _93
  _95 = put_list _88, _94

  %% beam_debug_info_SUITE.erl:168
  S = call (`io_lib`:`format`/2), `"~p/~p: ~ts"`, _95
  _182 = succeeded:body S
  br _182, ^182, ^1

182:
  %% beam_debug_info_SUITE.erl:169
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars'],
                   82 => [24,80],
                   85 => ['Vars0'],
                   87 => [79,'A'],
                   88 => ['F'],
                   91 => [90,'B'],
                   92 => ['Vars'],
                   '-do_smoke/2-lc$^1/1-1-' => [{'lc$^1',1}]},
             literals => []}
  _164 = debug_line `61`
  switch _91, ^184, [
    { `false`, ^188 },
    { `true`, ^187 }
  ]

187:
  %% beam_debug_info_SUITE.erl:170
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars'],
                   82 => [24,80],
                   85 => ['Vars0'],
                   87 => [79,'A'],
                   88 => ['F'],
                   91 => [90,'B'],
                   92 => ['Vars'],
                   '-do_smoke/2-lc$^1/1-1-' => [{'lc$^1',1}]},
             literals => []}
  _167 = debug_line `62`

  %% beam_debug_info_SUITE.erl:170
  _168 = call (`erlang`:`'++'`/2), `"   "`, S
  _185 = succeeded:body _168
  br _185, ^185, ^1

185:
  br ^183

188:
  %% beam_debug_info_SUITE.erl:171
  %% Anno: #{alias =>
                 #{0 => ['Beam'],
                   1 => ['Node'],
                   51 => ['Mod'],
                   56 => ['Abstr0'],
                   59 => ['Code'],
                   60 => ")",
                   63 => ['Abstr'],
                   64 => "*",
                   67 => ['CookedDebugInfo'],
                   68 => ['DebugInfo'],
                   75 => ['DbgLiterals'],
                   76 => ['DbgVars'],
                   82 => [24,80],
                   85 => ['Vars0'],
                   87 => [79,'A'],
                   88 => ['F'],
                   91 => [90,'B'],
                   92 => ['Vars'],
                   '-do_smoke/2-lc$^1/1-1-' => [{'lc$^1',1}]},
             literals => []}
  _165 = debug_line `63`

  %% beam_debug_info_SUITE.erl:171
  _166 = call (`erlang`:`'++'`/2), `"** "`, S
  _186 = succeeded:body _166
  br _186, ^186, ^1

186:
  br ^183

184:
  %% beam_debug_info_SUITE.erl:169
  _169 = match_fail `case_clause`, _91
  _189 = succeeded:body _169
  br _189, ^189, ^1

189:
  br ^183

183:
  _30 = phi { _168, ^185 }, { _166, ^186 }, { _169, ^189 }

  %% beam_debug_info_SUITE.erl:173
  _31 = call (`'-do_smoke/2-lc$^1/1-1-'`/1), _82
  _190 = succeeded:body _31
  br _190, ^190, ^1

190:
  _96 = put_list _30, `["\n"]`
  _97 = put_list `"  "`, _96
  _170 = put_list _97, _31
  ret _170

181:
  %% beam_debug_info_SUITE.erl:167
  _171 = match_fail `badmatch`, _89
  _195 = succeeded:body _171
  br _195, ^195, ^1

195:
  ret _171

178:
  _84 = put_tuple `badmatch`, _83

  %% beam_debug_info_SUITE.erl:173
  _172 = call (`erlang`:`error`/1), _84
  _204 = succeeded:body _172
  br _204, ^204, ^1

204:
  ret _172

177:
  _206 = bif:'=:=' _25, `[]`
  br _206, ^206, ^176

206:
  ret `[]`

176:
  _81 = put_tuple `bad_generator`, _25

  %% beam_debug_info_SUITE.erl:173
  _173 = call (`erlang`:`error`/1), _81
  _207 = succeeded:body _173
  br _207, ^207, ^1

207:
  ret _173

1:
  _174 = call (`erlang`:`error`/1), `badarg`
  ret _174
}

%% beam_debug_info_SUITE.erl:124
%% Counter = 150
function `beam_debug_info_SUITE`:`'-do_smoke/2-fun-0-'`(_12) {
0:
  _146 = bif:is_tuple _12
  br _146, ^146, ^144

146:
  _147 = bif:tuple_size _12
  _148 = bif:'=:=' _147, `2`
  br _148, ^145, ^144

145:
  _70 = get_tuple_element _12, `0`
  _69 = get_tuple_element _12, `1`

  %% beam_debug_info_SUITE.erl:124
  _140 = bif:'=:=' _70, _69
  ret _140

144:
  %% beam_debug_info_SUITE.erl:124
  %% Anno: #{inlined => {'-do_smoke/2-inlined-0-',1}}
  _141 = match_fail `function_clause`, _12
  _149 = succeeded:body _141
  br _149, ^149, ^1

149:
  ret _141

1:
  _142 = call (`erlang`:`error`/1), `badarg`
  ret _142
}

%% beam_debug_info_SUITE.erl:86
%% Counter = 27
function `beam_debug_info_SUITE`:`'-smoke/1-fun-0-'`(_6, _11) {
0:
  %% beam_debug_info_SUITE.erl:87
  %% Anno: #{alias =>
                 #{0 => ['_Config'],
                   6 => ['Beam'],
                   11 => ['Node'],
                   12 => ['Peer']},
             literals => []}
  _22 = debug_line `24`

  %% beam_debug_info_SUITE.erl:87
  _23 = call (`do_smoke`/2), _6, _11
  _26 = succeeded:body _23
  br _26, ^26, ^1

26:
  ret _23

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  ret _24
}
