{attribute,{1,1},file,{"beam_ssa_bool.erl",1}}.
{attribute,{117,2},module,beam_ssa_bool}.
{attribute,{119,2},export,[{module,2}]}.
{attribute,{121,2},
           import,
           {lists,[{all,2},
                   {any,2},
                   {foldl,3},
                   {keyfind,3},
                   {last,1},
                   {partition,2},
                   {reverse,1},
                   {reverse,2},
                   {sort,1}]}}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{125,1},file,{"beam_ssa_bool.erl",125}}.
{attribute,
    {126,2},
    record,
    {st,[{record_field,{126,14},{atom,{126,14},defs},{map,{126,19},[]}},
         {record_field,{127,14},{atom,{127,14},ldefs},{map,{127,20},[]}},
         {typed_record_field,
             {record_field,{128,14},{atom,{128,14},count}},
             {remote_type,
                 {128,23},
                 [{atom,{128,23},beam_ssa},{atom,{128,32},label},[]]}},
         {record_field,{129,14},{atom,{129,14},dom}},
         {record_field,{130,14},{atom,{130,14},uses}},
         {typed_record_field,
             {record_field,
                 {131,14},
                 {atom,{131,14},in_or},
                 {atom,{131,20},false}},
             {type,{131,29},boolean,[]}}]}}.
{attribute,
    {133,2},
    spec,
    {{module,2},
     [{type,
          {133,13},
          'fun',
          [{type,
               {133,13},
               product,
               [{remote_type,
                    {133,14},
                    [{atom,{133,14},beam_ssa},{atom,{133,23},b_module},[]]},
                {type,
                    {133,35},
                    list,
                    [{remote_type,
                         {133,36},
                         [{atom,{133,36},compile},
                          {atom,{133,44},option},
                          []]}]}]},
           {type,
               {134,21},
               tuple,
               [{atom,{134,22},ok},
                {remote_type,
                    {134,27},
                    [{atom,{134,27},beam_ssa},
                     {atom,{134,36},b_module},
                     []]}]}]}]}}.
{function,
 {136,1},
 module,2,
 [{clause,
   {136,1},
   [{var,{136,1},'_'},{var,{136,1},'_'}],
   [[{call,
      {136,1},
      {remote,{136,1},{atom,{136,1},fake},{atom,{136,1},is_beam_bif_info}},
      []}]],
   [{debug_line,136,1},{atom,{136,1},ignore}]},
  {clause,
   {136,1},
   [{match,
     {136,8},
     {tuple,
      {136,8},
      [{atom,{136,8},b_module},
       {var,{136,8},'_'},
       {var,{136,8},'_'},
       {var,{136,8},'_'},
       {var,{136,8},'_'},
       {var,{136,23},'Fs0'}]},
     {var,{136,28},'Module'}},
    {var,{136,36},'_Opts'}],
   [],
   [{debug_line,137,2},
    {match,
     {137,5},
     {var,{137,5},'Fs'},
     {lc,
      {137,10},
      {block,0,
       [{call,{137,11},{atom,{137,11},function},[{var,{137,20},'F'}]}]},
      [{block,0,[{atom,{137,31},true}]},
       {generate,{137,28},{var,{137,26},'F'},{var,{137,31},'Fs0'}}]}},
    {debug_line,138,3},
    {tuple,
     {138,5},
     [{atom,{138,6},ok},
      {block,
       {138,9},
       [{match,{138,9},{var,{138,9},rec0},{var,{138,9},'Module'}},
        {'case',
         {138,25},
         {var,{138,9},rec0},
         [{clause,
           {138,25},
           [{tuple,
             {138,25},
             [{atom,{138,25},b_module},
              {var,{138,25},'_'},
              {var,{138,25},'_'},
              {var,{138,25},'_'},
              {var,{138,25},'_'},
              {var,{138,25},'_'}]}],
           [],
           [{call,
             {138,25},
             {remote,
              {138,25},
              {atom,{138,25},erlang},
              {atom,{138,25},setelement}},
             [{integer,{138,25},6},{var,{138,9},rec0},{var,{138,30},'Fs'}]}]},
          {clause,
           [{generated,true},{location,{138,25}}],
           [{var,[{generated,true},{location,{138,25}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{138,25}}],
             {remote,
              [{generated,true},{location,{138,25}}],
              {atom,[{generated,true},{location,{138,25}}],erlang},
              {atom,[{generated,true},{location,{138,25}}],error}},
             [{tuple,
               [{generated,true},{location,{138,25}}],
               [{atom,[{generated,true},{location,{138,25}}],badrecord},
                {var,{138,9},rec0}]}]}]}]}]}]}]}]}.
{function,
    {140,1},
    function,1,
    [{clause,
         {140,1},
         [{var,{140,1},'_'}],
         [[{call,
               {140,1},
               {remote,
                   {140,1},
                   {atom,{140,1},fake},
                   {atom,{140,1},is_beam_bif_info}},
               []}]],
         [{debug_line,140,4},{atom,{140,1},ignore}]},
     {clause,
         {140,1},
         [{match,
              {140,10},
              {tuple,
                  {140,10},
                  [{atom,{140,10},b_function},
                   {var,{140,27},'Anno'},
                   {var,{140,10},'_'},
                   {var,{140,10},'_'},
                   {var,{140,10},'_'}]},
              {var,{140,33},'F'}}],
         [],
         [{debug_line,141,5},
          {'try',
              {141,5},
              [{debug_line,142,6},
               {call,
                   {142,9},
                   {atom,{142,9},opt_function},
                   [{var,{142,22},'F'}]}],
              [],
              [{clause,
                   {144,9},
                   [{tuple,
                        {144,9},
                        [{var,{144,9},'Class'},
                         {var,{144,15},'Error'},
                         {var,{144,21},'Stack'}]}],
                   [],
                   [{debug_line,145,7},
                    {match,
                        {145,13},
                        {map,
                            {145,13},
                            [{map_field_exact,
                                 {145,24},
                                 {atom,{145,15},func_info},
                                 {tuple,
                                     {145,26},
                                     [{var,{145,27},'_'},
                                      {var,{145,29},'Name'},
                                      {var,{145,34},'Arity'}]}}]},
                        {var,{145,44},'Anno'}},
                    {debug_line,146,8},
                    {call,
                        {146,13},
                        {remote,
                            {146,15},
                            {atom,{146,13},io},
                            {atom,{146,16},fwrite}},
                        [{block,0,[{string,{146,23},"Function: ~w/~w\n"}]},
                         {block,0,
                             [{cons,
                                  {146,44},
                                  {var,{146,45},'Name'},
                                  {cons,
                                      {146,50},
                                      {var,{146,50},'Arity'},
                                      {nil,{146,55}}}}]}]},
                    {debug_line,147,9},
                    {call,
                        {147,13},
                        {remote,
                            {147,19},
                            {atom,{147,13},erlang},
                            {atom,{147,20},raise}},
                        [{var,{147,26},'Class'},
                         {var,{147,33},'Error'},
                         {var,{147,40},'Stack'}]}]}],
              []}]}]}.
{function,
 {150,1},
 opt_function,1,
 [{clause,
   {150,1},
   [{var,{150,1},'_'}],
   [[{call,
      {150,1},
      {remote,{150,1},{atom,{150,1},fake},{atom,{150,1},is_beam_bif_info}},
      []}]],
   [{debug_line,150,10},{atom,{150,1},ignore}]},
  {clause,
   {150,1},
   [{match,
     {150,14},
     {tuple,
      {150,14},
      [{atom,{150,14},b_function},
       {var,{150,14},'_'},
       {var,{150,14},'_'},
       {var,{150,29},'Blocks0'},
       {var,{150,41},'Count0'}]},
     {var,{150,49},'F'}}],
   [],
   [{debug_line,151,11},
    {match,
     {151,5},
     {tuple,{151,5},[{var,{151,6},'Blocks1'},{var,{151,14},'Count1'}]},
     {call,
      {151,24},
      {atom,{151,24},pre_opt},
      [{var,{151,32},'Blocks0'},{var,{151,41},'Count0'}]}},
    {debug_line,152,12},
    {match,
     {152,5},
     {var,{152,5},'DefVars'},
     {call,
      {152,15},
      {atom,{152,15},interesting_defs},
      [{var,{152,32},'Blocks1'}]}},
    {debug_line,153,13},
    {'if',
     {153,5},
     [{clause,
       {154,9},
       [],
       [[{op,
          {154,27},
          '>',
          {call,
           {154,9},
           {remote,{154,9},{atom,{154,9},erlang},{atom,{154,9},map_size}},
           [{var,{154,18},'DefVars'}]},
          {integer,{154,29},1}}]],
       [{debug_line,155,14},
        {match,
         {155,13},
         {var,{155,13},'RPO'},
         {call,
          {155,19},
          {remote,{155,27},{atom,{155,19},beam_ssa},{atom,{155,28},rpo}},
          [{var,{155,32},'Blocks1'}]}},
        {debug_line,156,15},
        {match,
         {156,13},
         {var,{156,13},'Dom'},
         {call,
          {156,19},
          {remote,
           {156,27},
           {atom,{156,19},beam_ssa},
           {atom,{156,28},dominators}},
          [{var,{156,39},'RPO'},{var,{156,44},'Blocks1'}]}},
        {debug_line,157,16},
        {match,
         {157,13},
         {var,{157,13},'Uses'},
         {call,
          {157,20},
          {remote,{157,28},{atom,{157,20},beam_ssa},{atom,{157,29},uses}},
          [{var,{157,34},'RPO'},{var,{157,39},'Blocks1'}]}},
        {debug_line,158,17},
        {match,
         {158,13},
         {var,{158,13},'St0'},
         {tuple,
          {158,19},
          [{atom,{158,19},st},
           {var,{158,28},'DefVars'},
           {map,{158,19},[]},
           {var,{158,42},'Count1'},
           {var,{158,53},'Dom'},
           {var,{158,62},'Uses'},
           {atom,{158,19},false}]}},
        {debug_line,159,18},
        {match,
         {159,13},
         {tuple,{159,13},[{var,{159,14},'Blocks2'},{var,{159,22},'St'}]},
         {call,
          {159,28},
          {atom,{159,28},bool_opt},
          [{var,{159,37},'RPO'},
           {var,{159,42},'Blocks1'},
           {var,{159,51},'St0'}]}},
        {debug_line,160,19},
        {match,
         {160,13},
         {var,{160,13},'Count'},
         {'case',
          {160,21},
          {var,{160,21},'St'},
          [{clause,
            [{generated,true},{location,{160,21}}],
            [{tuple,
              [{generated,true},{location,{160,21}}],
              [{atom,{160,21},st},
               {var,{160,21},'_'},
               {var,{160,21},'_'},
               {var,{160,21},rec1},
               {var,{160,21},'_'},
               {var,{160,21},'_'},
               {var,{160,21},'_'}]}],
            [],
            [{var,{160,21},rec1}]},
           {clause,
            [{generated,true},{location,{160,21}}],
            [{var,{160,21},rec1}],
            [],
            [{call,
              [{generated,true},{location,{160,21}}],
              {remote,
               [{generated,true},{location,{160,21}}],
               {atom,[{generated,true},{location,{160,21}}],erlang},
               {atom,[{generated,true},{location,{160,21}}],error}},
              [{tuple,
                [{generated,true},{location,{160,21}}],
                [{atom,[{generated,true},{location,{160,21}}],badrecord},
                 {var,{160,21},rec1}]}]}]}]}},
        {debug_line,166,20},
        {match,
         {166,13},
         {var,{166,13},'Blocks3'},
         {call,
          {166,23},
          {remote,
           {166,31},
           {atom,{166,23},beam_ssa},
           {atom,{166,32},trim_unreachable}},
          [{var,{166,49},'Blocks2'}]}},
        {debug_line,167,21},
        {match,
         {167,13},
         {var,{167,13},'Blocks'},
         {call,
          {167,22},
          {remote,
           {167,30},
           {atom,{167,22},beam_ssa},
           {atom,{167,31},merge_blocks}},
          [{block,0,
            [{call,
              {167,44},
              {remote,{167,52},{atom,{167,44},beam_ssa},{atom,{167,53},rpo}},
              [{var,{167,57},'Blocks3'}]}]},
           {var,{167,67},'Blocks3'}]}},
        {debug_line,168,22},
        {block,
         {168,13},
         [{match,{168,13},{var,{168,13},rec2},{var,{168,13},'F'}},
          {'case',
           {168,26},
           {var,{168,13},rec2},
           [{clause,
             {168,26},
             [{tuple,
               {168,26},
               [{atom,{168,26},b_function},
                {var,{168,26},'_'},
                {var,{168,26},'_'},
                {var,{168,26},'_'},
                {var,{168,26},'_'}]}],
             [],
             [{call,
               {168,26},
               {remote,
                {168,26},
                {atom,{168,26},erlang},
                {atom,{168,26},setelement}},
               [{integer,{168,26},4},
                {call,
                 {168,36},
                 {remote,
                  {168,36},
                  {atom,{168,36},erlang},
                  {atom,{168,36},setelement}},
                 [{integer,{168,36},5},
                  {var,{168,13},rec2},
                  {var,{168,40},'Count'}]},
                {var,{168,29},'Blocks'}]}]},
            {clause,
             [{generated,true},{location,{168,26}}],
             [{var,[{generated,true},{location,{168,26}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{168,26}}],
               {remote,
                [{generated,true},{location,{168,26}}],
                {atom,[{generated,true},{location,{168,26}}],erlang},
                {atom,[{generated,true},{location,{168,26}}],error}},
               [{tuple,
                 [{generated,true},{location,{168,26}}],
                 [{atom,[{generated,true},{location,{168,26}}],badrecord},
                  {var,{168,13},rec2}]}]}]}]}]}]},
      {clause,
       {169,9},
       [],
       [[{atom,{169,9},true}]],
       [{debug_line,172,23},
        {match,
         {172,13},
         {var,{172,13},'Blocks2'},
         {call,
          {172,23},
          {remote,
           {172,31},
           {atom,{172,23},beam_ssa},
           {atom,{172,32},trim_unreachable}},
          [{var,{172,49},'Blocks1'}]}},
        {debug_line,173,24},
        {block,
         {173,13},
         [{match,{173,13},{var,{173,13},rec3},{var,{173,13},'F'}},
          {'case',
           {173,26},
           {var,{173,13},rec3},
           [{clause,
             {173,26},
             [{tuple,
               {173,26},
               [{atom,{173,26},b_function},
                {var,{173,26},'_'},
                {var,{173,26},'_'},
                {var,{173,26},'_'},
                {var,{173,26},'_'}]}],
             [],
             [{call,
               {173,26},
               {remote,
                {173,26},
                {atom,{173,26},erlang},
                {atom,{173,26},setelement}},
               [{integer,{173,26},4},
                {call,
                 {173,37},
                 {remote,
                  {173,37},
                  {atom,{173,37},erlang},
                  {atom,{173,37},setelement}},
                 [{integer,{173,37},5},
                  {var,{173,13},rec3},
                  {var,{173,41},'Count1'}]},
                {var,{173,29},'Blocks2'}]}]},
            {clause,
             [{generated,true},{location,{173,26}}],
             [{var,[{generated,true},{location,{173,26}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{173,26}}],
               {remote,
                [{generated,true},{location,{173,26}}],
                {atom,[{generated,true},{location,{173,26}}],erlang},
                {atom,[{generated,true},{location,{173,26}}],error}},
               [{tuple,
                 [{generated,true},{location,{173,26}}],
                 [{atom,[{generated,true},{location,{173,26}}],badrecord},
                  {var,{173,13},rec3}]}]}]}]}]}]}]}]}]}.
{attribute,{192,2},
           type,
           {var,{remote_type,{192,16},
                             [{atom,{192,16},beam_ssa},
                              {atom,{192,25},b_var},
                              []]},
                []}}.
{attribute,
    {197,2},
    type,
    {pre_sub_val,
        {type,
            {198,9},
            union,
            [{remote_type,
                 {198,9},
                 [{atom,{198,9},beam_ssa},{atom,{198,18},value},[]]},
             {remote_type,
                 {199,9},
                 [{atom,{199,9},beam_ssa},{atom,{199,18},b_set},[]]},
             {type,
                 {200,9},
                 tuple,
                 [{atom,{200,10},true_or_any},
                  {remote_type,
                      {200,24},
                      [{atom,{200,24},beam_ssa},{atom,{200,33},label},[]]}]},
             {atom,{201,9},'=:='}]},
        []}}.
{attribute,
    {203,2},
    type,
    {pre_sub_map,
        {type,
            {203,24},
            map,
            [{type,
                 {203,33},
                 map_field_assoc,
                 [{atom,{203,26},uses},
                  {type,
                      {203,36},
                      tuple,
                      [{atom,{203,37},uses},
                       {type,
                           {203,44},
                           list,
                           [{remote_type,
                                {203,45},
                                [{atom,{203,45},beam_ssa},
                                 {atom,{203,54},label},
                                 []]}]},
                       {type,
                           {203,63},
                           union,
                           [{remote_type,
                                {203,63},
                                [{atom,{203,63},beam_ssa},
                                 {atom,{203,72},block_map},
                                 []]},
                            {type,{203,86},list,[]}]}]}]},
             {type,
                 {204,32},
                 map_field_assoc,
                 [{user_type,{204,26},var,[]},
                  {user_type,{204,35},pre_sub_val,[]}]}]},
        []}}.
{function,
    {206,1},
    pre_opt,2,
    [{clause,
         {206,1},
         [{var,{206,1},'_'},{var,{206,1},'_'}],
         [[{call,
               {206,1},
               {remote,
                   {206,1},
                   {atom,{206,1},fake},
                   {atom,{206,1},is_beam_bif_info}},
               []}]],
         [{debug_line,206,25},{atom,{206,1},ignore}]},
     {clause,
         {206,1},
         [{var,{206,9},'Blocks'},{var,{206,17},'Count'}],
         [],
         [{debug_line,207,26},
          {match,
              {207,5},
              {var,{207,5},'Top'},
              {call,
                  {207,11},
                  {remote,
                      {207,19},
                      {atom,{207,11},beam_ssa},
                      {atom,{207,20},rpo}},
                  [{var,{207,24},'Blocks'}]}},
          {debug_line,211,27},
          {match,
              {211,5},
              {var,{211,5},'Sub0'},
              {map,
                  {211,12},
                  [{map_field_assoc,
                       {211,19},
                       {atom,{211,14},uses},
                       {tuple,
                           {211,22},
                           [{atom,{211,23},uses},
                            {var,{211,28},'Top'},
                            {var,{211,32},'Blocks'}]}}]}},
          {debug_line,212,28},
          {match,
              {212,5},
              {var,{212,5},'Sub1'},
              {call,
                  {212,12},
                  {atom,{212,12},get_phi_info},
                  [{var,{212,25},'Top'},
                   {var,{212,30},'Blocks'},
                   {var,{212,38},'Sub0'}]}},
          {debug_line,213,29},
          {match,
              {213,5},
              {var,{213,5},'Sub'},
              {call,
                  {213,11},
                  {remote,
                      {213,15},
                      {atom,{213,11},maps},
                      {atom,{213,16},remove}},
                  [{atom,{213,23},uses},{var,{213,29},'Sub1'}]}},
          {debug_line,216,30},
          {match,
              {216,5},
              {var,{216,5},'Reached'},
              {call,
                  {216,15},
                  {remote,
                      {216,19},
                      {atom,{216,15},sets},
                      {atom,{216,20},from_list}},
                  [{block,0,
                       [{cons,
                            {216,30},
                            {call,
                                {216,31},
                                {remote,
                                    {216,31},
                                    {atom,{216,31},erlang},
                                    {atom,{216,31},hd}},
                                [{var,{216,34},'Top'}]},
                            {nil,{216,38}}}]}]}},
          {debug_line,217,31},
          {call,
              {217,5},
              {atom,{217,5},pre_opt},
              [{var,{217,13},'Top'},
               {var,{217,18},'Sub'},
               {var,{217,23},'Reached'},
               {var,{217,32},'Count'},
               {var,{217,39},'Blocks'}]}]}]}.
{attribute,
    {219,2},
    spec,
    {{get_phi_info,3},
     [{type,
          {219,19},
          bounded_fun,
          [{type,
               {219,19},
               'fun',
               [{type,
                    {219,19},
                    product,
                    [{var,{219,20},'Ls'},
                     {var,{219,24},'Blocks'},
                     {var,{219,32},'Sub0'}]},
                {var,{219,41},'Sub'}]},
           [{type,
                {220,7},
                constraint,
                [{atom,{220,7},is_subtype},
                 [{var,{220,7},'Ls'},
                  {type,
                      {220,13},
                      list,
                      [{remote_type,
                           {220,14},
                           [{atom,{220,14},beam_ssa},
                            {atom,{220,23},label},
                            []]}]}]]},
            {type,
                {221,7},
                constraint,
                [{atom,{221,7},is_subtype},
                 [{var,{221,7},'Blocks'},
                  {remote_type,
                      {221,17},
                      [{atom,{221,17},beam_ssa},
                       {atom,{221,26},block_map},
                       []]}]]},
            {type,
                {222,7},
                constraint,
                [{atom,{222,7},is_subtype},
                 [{var,{222,7},'Sub0'},{user_type,{222,15},pre_sub_map,[]}]]},
            {type,
                {223,7},
                constraint,
                [{atom,{223,7},is_subtype},
                 [{var,{223,7},'Sub'},
                  {user_type,{223,14},pre_sub_map,[]}]]}]]}]}}.
{function,
    {247,1},
    get_phi_info,3,
    [{clause,
         {247,1},
         [{var,{247,1},'_'},{var,{247,1},'_'},{var,{247,1},'_'}],
         [[{call,
               {247,1},
               {remote,
                   {247,1},
                   {atom,{247,1},fake},
                   {atom,{247,1},is_beam_bif_info}},
               []}]],
         [{debug_line,247,32},{atom,{247,1},ignore}]},
     {clause,
         {247,1},
         [{cons,{247,14},{var,{247,15},'L'},{var,{247,17},'Ls'}},
          {var,{247,22},'Blocks'},
          {var,{247,30},'Sub0'}],
         [],
         [{debug_line,248,33},
          {match,
              {248,5},
              {var,{248,5},'Sub'},
              {call,
                  {248,11},
                  {atom,{248,11},get_phi_info},
                  [{var,{248,24},'Ls'},
                   {var,{248,28},'Blocks'},
                   {var,{248,36},'Sub0'}]}},
          {debug_line,249,34},
          {match,
              {249,5},
              {tuple,
                  {249,5},
                  [{atom,{249,5},b_blk},
                   {var,{249,5},'_'},
                   {var,{249,15},'Is'},
                   {var,{249,5},'_'}]},
              {call,
                  {249,21},
                  {remote,
                      {249,21},
                      {atom,{249,21},erlang},
                      {atom,{249,21},map_get}},
                  [{var,{249,29},'L'},{var,{249,32},'Blocks'}]}},
          {debug_line,250,35},
          {call,
              {250,5},
              {atom,{250,5},get_phi_info_is},
              [{var,{250,21},'Is'},{var,{250,25},'L'},{var,{250,28},'Sub'}]}]},
     {clause,
         {251,1},
         [{nil,{251,14}},{var,{251,18},'_'},{var,{251,21},'Sub'}],
         [],
         [{debug_line,251,36},{var,{251,29},'Sub'}]}]}.
{function,{253,1},
          get_phi_info_is,3,
          [{clause,{253,1},
                   [{var,{253,1},'_'},{var,{253,1},'_'},{var,{253,1},'_'}],
                   [[{call,{253,1},
                           {remote,{253,1},
                                   {atom,{253,1},fake},
                                   {atom,{253,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,253,37},{atom,{253,1},ignore}]},
           {clause,{253,1},
                   [{cons,{253,17},{var,{253,18},'I'},{var,{253,20},'Is'}},
                    {var,{253,25},'From'},
                    {var,{253,31},'Sub0'}],
                   [],
                   [{debug_line,254,38},
                    {match,{254,5},
                           {var,{254,5},'Sub'},
                           {call,{254,11},
                                 {atom,{254,11},get_phi_info_is},
                                 [{var,{254,27},'Is'},
                                  {var,{254,31},'From'},
                                  {var,{254,37},'Sub0'}]}},
                    {debug_line,255,39},
                    {call,{255,5},
                          {atom,{255,5},get_phi_info_instr},
                          [{var,{255,24},'I'},
                           {var,{255,27},'From'},
                           {var,{255,33},'Sub'}]}]},
           {clause,{256,1},
                   [{nil,{256,17}},{var,{256,21},'_'},{var,{256,24},'Sub'}],
                   [],
                   [{debug_line,256,40},{var,{256,32},'Sub'}]}]}.
{function,
 {258,1},
 get_phi_info_instr,3,
 [{clause,
   {258,1},
   [{var,{258,1},'_'},{var,{258,1},'_'},{var,{258,1},'_'}],
   [[{call,
      {258,1},
      {remote,{258,1},{atom,{258,1},fake},{atom,{258,1},is_beam_bif_info}},
      []}]],
   [{debug_line,258,41},{atom,{258,1},ignore}]},
  {clause,
   {258,1},
   [{tuple,
     {258,20},
     [{atom,{258,20},b_set},
      {var,{258,20},'_'},
      {var,{258,20},'_'},
      {tuple,{258,30},[{atom,{258,31},bif},{atom,{258,35},'=:='}]},
      {cons,
       {259,32},
       {match,
        {259,33},
        {tuple,{259,33},[{atom,{259,33},b_var},{var,{259,33},'_'}]},
        {var,{259,42},'Bool'}},
       {cons,
        {259,47},
        {tuple,{259,47},[{atom,{259,47},b_literal},{atom,{259,62},true}]},
        {nil,{259,67}}}}]},
    {var,{260,20},'_From'},
    {var,{260,27},'Sub'}],
   [],
   [{debug_line,261,42},
    {map,
     {261,8},
     {var,{261,5},'Sub'},
     [{map_field_assoc,
       {261,14},
       {var,{261,10},'Bool'},
       {atom,{261,16},'=:='}}]}]},
  {clause,
   {262,1},
   [{tuple,
     {262,20},
     [{atom,{262,20},b_set},
      {var,{262,20},'_'},
      {var,{262,38},'Dst'},
      {atom,{262,30},phi},
      {var,{262,47},'Args'}]},
    {var,{262,54},'From'},
    {var,{262,60},'Sub0'}],
   [],
   [{debug_line,263,43},
    {match,
     {263,5},
     {tuple,{263,5},[{var,{263,6},'Safe'},{var,{263,11},'Sub'}]},
     {'case',
      {264,9},
      {var,{264,14},'Sub0'},
      [{clause,
        {265,13},
        [{map,
          {265,13},
          [{map_field_exact,
            {265,18},
            {var,{265,15},'Dst'},
            {atom,{265,20},'=:='}}]}],
        [],
        [{debug_line,266,44},
         {call,
          {266,17},
          {atom,{266,17},get_phi_info_single_use},
          [{var,{266,41},'Dst'},{var,{266,46},'Sub0'}]}]},
       {clause,
        {267,13},
        [{map,
          {267,13},
          [{map_field_exact,
            {267,18},
            {var,{267,15},'Dst'},
            {tuple,
             {267,20},
             [{atom,{267,21},true_or_any},{var,{267,33},'_'}]}}]}],
        [],
        [{debug_line,268,45},
         {call,
          {268,17},
          {atom,{268,17},get_phi_info_single_use},
          [{var,{268,41},'Dst'},{var,{268,46},'Sub0'}]}]},
       {clause,
        {269,13},
        [{map,{269,13},[]}],
        [],
        [{debug_line,270,46},
         {tuple,{270,17},[{atom,{270,18},false},{var,{270,24},'Sub0'}]}]}]}},
    {debug_line,272,47},
    {'case',
     {272,5},
     {var,{272,10},'Safe'},
     [{clause,
       {273,9},
       [{atom,{273,9},true}],
       [],
       [{debug_line,274,48},
        {call,
         {274,13},
         {remote,{274,13},{atom,{274,13},lists},{atom,{274,13},foldl}},
         [{block,0,
           [{'fun',
             {274,19},
             {clauses,
              [{clause,
                {274,22},
                [{tuple,
                  {274,23},
                  [{match,
                    {274,24},
                    {tuple,
                     {274,24},
                     [{atom,{274,24},b_var},{var,{274,24},'_'}]},
                    {var,{274,33},'V'}},
                   {var,{274,35},'_'}]},
                 {var,{274,39},'A'}],
                [],
                [{debug_line,275,49},
                 {map,
                  {275,28},
                  {var,{275,27},'A'},
                  [{map_field_assoc,
                    {275,32},
                    {var,{275,30},'V'},
                    {tuple,
                     {275,35},
                     [{atom,{275,36},true_or_any},{var,{275,48},'From'}]}}]}]},
               {clause,
                {276,22},
                [{var,{276,23},'_'},{var,{276,26},'A'}],
                [],
                [{debug_line,276,50},{var,{276,32},'A'}]}]}}]},
          {var,{277,24},'Sub'},
          {var,{277,29},'Args'}]}]},
      {clause,
       {278,9},
       [{atom,{278,9},false}],
       [],
       [{debug_line,278,51},{var,{278,18},'Sub'}]}]}]},
  {clause,
   {280,1},
   [{var,{280,20},'_'},{var,{280,23},'_'},{var,{280,26},'Sub'}],
   [],
   [{debug_line,280,52},{var,{280,34},'Sub'}]}]}.
{function,
 {282,1},
 get_phi_info_single_use,2,
 [{clause,
   {282,1},
   [{var,{282,1},'_'},{var,{282,1},'_'}],
   [[{call,
      {282,1},
      {remote,{282,1},{atom,{282,1},fake},{atom,{282,1},is_beam_bif_info}},
      []}]],
   [{debug_line,282,53},{atom,{282,1},ignore}]},
  {clause,
   {282,1},
   [{var,{282,25},'Var'},{var,{282,30},'Sub'}],
   [],
   [{debug_line,283,54},
    {'case',
     {283,5},
     {call,
      {283,10},
      {remote,{283,10},{atom,{283,10},erlang},{atom,{283,10},map_get}},
      [{atom,{283,18},uses},{var,{283,24},'Sub'}]},
     [{clause,
       {284,9},
       [{var,{284,9},'Uses'}],
       [[{call,
          {284,19},
          {remote,{284,19},{atom,{284,19},erlang},{atom,{284,19},is_map}},
          [{var,{284,26},'Uses'}]}]],
       [{debug_line,285,55},
        {tuple,
         {285,13},
         [{'case',
           {285,14},
           {var,{285,19},'Uses'},
           [{clause,
             {286,18},
             [{map,
               {286,18},
               [{map_field_exact,
                 {286,23},
                 {var,{286,20},'Var'},
                 {cons,{286,25},{var,{286,26},'_'},{nil,{286,27}}}}]}],
             [],
             [{debug_line,286,56},{atom,{286,33},true}]},
            {clause,
             {287,18},
             [{map,
               {287,18},
               [{map_field_exact,
                 {287,23},
                 {var,{287,20},'Var'},
                 {cons,{287,25},{var,{287,26},'_'},{var,{287,28},'_'}}}]}],
             [],
             [{debug_line,287,57},{atom,{287,35},false}]}]},
          {var,{288,18},'Sub'}]}]},
      {clause,
       {289,9},
       [{tuple,
         {289,9},
         [{atom,{289,10},uses},{var,{289,15},'Top'},{var,{289,19},'Blocks'}]}],
       [],
       [{debug_line,290,58},
        {match,
         {290,13},
         {var,{290,13},'Uses'},
         {call,
          {290,20},
          {remote,{290,28},{atom,{290,20},beam_ssa},{atom,{290,29},uses}},
          [{var,{290,34},'Top'},{var,{290,39},'Blocks'}]}},
        {debug_line,291,59},
        {call,
         {291,13},
         {atom,{291,13},get_phi_info_single_use},
         [{var,{291,37},'Var'},
          {block,0,
           [{map,
             {291,45},
             {var,{291,42},'Sub'},
             [{map_field_assoc,
               {291,52},
               {atom,{291,47},uses},
               {var,{291,55},'Uses'}}]}]}]}]}]}]}]}.
{attribute,
    {294,2},
    spec,
    {{pre_opt,5},
     [{type,
          {294,14},
          bounded_fun,
          [{type,
               {294,14},
               'fun',
               [{type,
                    {294,14},
                    product,
                    [{var,{294,15},'Ls'},
                     {var,{294,19},'Sub'},
                     {var,{294,24},'Reached'},
                     {var,{294,33},'Count0'},
                     {var,{294,41},'Blocks0'}]},
                {type,
                    {294,53},
                    tuple,
                    [{var,{294,54},'Blocks'},{var,{294,61},'Count'}]}]},
           [{type,
                {295,7},
                constraint,
                [{atom,{295,7},is_subtype},
                 [{var,{295,7},'Ls'},
                  {type,
                      {295,13},
                      list,
                      [{remote_type,
                           {295,14},
                           [{atom,{295,14},beam_ssa},
                            {atom,{295,23},label},
                            []]}]}]]},
            {type,
                {296,7},
                constraint,
                [{atom,{296,7},is_subtype},
                 [{var,{296,7},'Reached'},
                  {remote_type,
                      {296,18},
                      [{atom,{296,18},sets},
                       {atom,{296,23},set},
                       [{remote_type,
                            {296,27},
                            [{atom,{296,27},beam_ssa},
                             {atom,{296,36},label},
                             []]}]]}]]},
            {type,
                {297,7},
                constraint,
                [{atom,{297,7},is_subtype},
                 [{var,{297,7},'Count0'},
                  {remote_type,
                      {297,17},
                      [{atom,{297,17},beam_ssa},{atom,{297,26},label},[]]}]]},
            {type,
                {298,7},
                constraint,
                [{atom,{298,7},is_subtype},
                 [{var,{298,7},'Blocks0'},
                  {remote_type,
                      {298,18},
                      [{atom,{298,18},beam_ssa},
                       {atom,{298,27},block_map},
                       []]}]]},
            {type,
                {299,7},
                constraint,
                [{atom,{299,7},is_subtype},
                 [{var,{299,7},'Sub'},{user_type,{299,14},pre_sub_map,[]}]]},
            {type,
                {300,7},
                constraint,
                [{atom,{300,7},is_subtype},
                 [{var,{300,7},'Count'},
                  {remote_type,
                      {300,16},
                      [{atom,{300,16},beam_ssa},{atom,{300,25},label},[]]}]]},
            {type,
                {301,7},
                constraint,
                [{atom,{301,7},is_subtype},
                 [{var,{301,7},'Blocks'},
                  {remote_type,
                      {301,17},
                      [{atom,{301,17},beam_ssa},
                       {atom,{301,26},block_map},
                       []]}]]}]]}]}}.
{function,
 {303,1},
 pre_opt,5,
 [{clause,
   {303,1},
   [{var,{303,1},'_'},
    {var,{303,1},'_'},
    {var,{303,1},'_'},
    {var,{303,1},'_'},
    {var,{303,1},'_'}],
   [[{call,
      {303,1},
      {remote,{303,1},{atom,{303,1},fake},{atom,{303,1},is_beam_bif_info}},
      []}]],
   [{debug_line,303,60},{atom,{303,1},ignore}]},
  {clause,
   {303,1},
   [{cons,{303,9},{var,{303,10},'L'},{var,{303,12},'Ls'}},
    {var,{303,17},'Sub0'},
    {var,{303,23},'Reached0'},
    {var,{303,33},'Count0'},
    {var,{303,41},'Blocks'}],
   [],
   [{debug_line,304,61},
    {'case',
     {304,5},
     {call,
      {304,10},
      {remote,{304,14},{atom,{304,10},sets},{atom,{304,15},is_element}},
      [{var,{304,26},'L'},{var,{304,29},'Reached0'}]},
     [{clause,
       {305,9},
       [{atom,{305,9},false}],
       [],
       [{debug_line,307,62},
        {call,
         {307,13},
         {atom,{307,13},pre_opt},
         [{var,{307,21},'Ls'},
          {var,{307,25},'Sub0'},
          {var,{307,31},'Reached0'},
          {var,{307,41},'Count0'},
          {block,0,
           [{call,
             {307,49},
             {remote,{307,53},{atom,{307,49},maps},{atom,{307,54},remove}},
             [{var,{307,61},'L'},{var,{307,64},'Blocks'}]}]}]}]},
      {clause,
       {308,9},
       [{atom,{308,9},true}],
       [],
       [{debug_line,309,63},
        {match,
         {309,13},
         {tuple,
          {309,13},
          [{atom,{309,13},b_blk},
           {var,{309,13},'_'},
           {var,{309,23},'Is0'},
           {var,{309,32},'Last0'}]},
         {match,
          {309,41},
          {var,{309,41},'Blk0'},
          {call,
           {309,48},
           {remote,{309,48},{atom,{309,48},erlang},{atom,{309,48},map_get}},
           [{var,{309,56},'L'},{var,{309,59},'Blocks'}]}}},
        {debug_line,310,64},
        {match,
         {310,13},
         {tuple,{310,13},[{var,{310,14},'Is'},{var,{310,17},'Sub'}]},
         {call,
          {310,24},
          {atom,{310,24},pre_opt_is},
          [{var,{310,35},'Is0'},
           {var,{310,40},'Reached0'},
           {var,{310,50},'Sub0'},
           {nil,{310,56}}]}},
        {debug_line,311,65},
        {'case',
         {311,13},
         {call,
          {311,18},
          {atom,{311,18},pre_opt_terminator},
          [{var,{311,37},'Last0'},
           {var,{311,44},'Sub'},
           {var,{311,49},'Blocks'}]},
         [{clause,
           {312,17},
           [{tuple,
             {312,17},
             [{match,
               {312,18},
               {tuple,
                {312,18},
                [{atom,{312,18},b_set},
                 {var,{312,18},'_'},
                 {var,{312,18},'_'},
                 {var,{312,18},'_'},
                 {var,{312,18},'_'}]},
               {var,{312,27},'Test0'}},
              {match,
               {312,33},
               {tuple,
                {312,33},
                [{atom,{312,33},b_br},
                 {var,{312,33},'_'},
                 {var,{312,33},'_'},
                 {var,{312,33},'_'},
                 {var,{312,33},'_'}]},
               {var,{312,41},'Br0'}}]}],
           [],
           [{debug_line,315,66},
            {match,
             {315,21},
             {var,{315,21},'Bool'},
             {tuple,{315,28},[{atom,{315,28},b_var},{var,{315,40},'Count0'}]}},
            {debug_line,316,67},
            {match,
             {316,21},
             {var,{316,21},'Count'},
             {op,{316,36},'+',{var,{316,29},'Count0'},{integer,{316,38},1}}},
            {debug_line,317,68},
            {match,
             {317,21},
             {var,{317,21},'Test'},
             {block,
              {317,28},
              [{match,{317,28},{var,{317,28},rec4},{var,{317,28},'Test0'}},
               {'case',
                {317,40},
                {var,{317,28},rec4},
                [{clause,
                  {317,40},
                  [{tuple,
                    {317,40},
                    [{atom,{317,40},b_set},
                     {var,{317,40},'_'},
                     {var,{317,40},'_'},
                     {var,{317,40},'_'},
                     {var,{317,40},'_'}]}],
                  [],
                  [{call,
                    {317,40},
                    {remote,
                     {317,40},
                     {atom,{317,40},erlang},
                     {atom,{317,40},setelement}},
                    [{integer,{317,40},3},
                     {var,{317,28},rec4},
                     {var,{317,44},'Bool'}]}]},
                 {clause,
                  [{generated,true},{location,{317,40}}],
                  [{var,[{generated,true},{location,{317,40}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{317,40}}],
                    {remote,
                     [{generated,true},{location,{317,40}}],
                     {atom,[{generated,true},{location,{317,40}}],erlang},
                     {atom,[{generated,true},{location,{317,40}}],error}},
                    [{tuple,
                      [{generated,true},{location,{317,40}}],
                      [{atom,[{generated,true},{location,{317,40}}],badrecord},
                       {var,{317,28},rec4}]}]}]}]}]}},
            {debug_line,318,69},
            {match,
             {318,21},
             {var,{318,21},'Br'},
             {call,
              {318,26},
              {remote,
               {318,34},
               {atom,{318,26},beam_ssa},
               {atom,{318,35},normalize}},
              [{block,0,
                [{block,
                  {318,45},
                  [{match,{318,45},{var,{318,45},rec5},{var,{318,45},'Br0'}},
                   {'case',
                    {318,54},
                    {var,{318,45},rec5},
                    [{clause,
                      {318,54},
                      [{tuple,
                        {318,54},
                        [{atom,{318,54},b_br},
                         {var,{318,54},'_'},
                         {var,{318,54},'_'},
                         {var,{318,54},'_'},
                         {var,{318,54},'_'}]}],
                      [],
                      [{call,
                        {318,54},
                        {remote,
                         {318,54},
                         {atom,{318,54},erlang},
                         {atom,{318,54},setelement}},
                        [{integer,{318,54},3},
                         {var,{318,45},rec5},
                         {var,{318,59},'Bool'}]}]},
                     {clause,
                      [{generated,true},{location,{318,54}}],
                      [{var,[{generated,true},{location,{318,54}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{318,54}}],
                        {remote,
                         [{generated,true},{location,{318,54}}],
                         {atom,[{generated,true},{location,{318,54}}],erlang},
                         {atom,[{generated,true},{location,{318,54}}],error}},
                        [{tuple,
                          [{generated,true},{location,{318,54}}],
                          [{atom,
                            [{generated,true},{location,{318,54}}],
                            badrecord},
                           {var,{318,45},rec5}]}]}]}]}]}]}]}},
            {debug_line,319,70},
            {match,
             {319,21},
             {var,{319,21},'Blk'},
             {block,
              {319,27},
              [{match,
                {319,38},
                {var,{319,38},rec6},
                {op,
                 {319,43},
                 '++',
                 {var,{319,41},'Is'},
                 {cons,{319,45},{var,{319,46},'Test'},{nil,{319,50}}}}},
               {match,{319,27},{var,{319,27},rec7},{var,{319,27},'Blk0'}},
               {'case',
                {319,38},
                {var,{319,27},rec7},
                [{clause,
                  {319,38},
                  [{tuple,
                    {319,38},
                    [{atom,{319,38},b_blk},
                     {var,{319,38},'_'},
                     {var,{319,38},'_'},
                     {var,{319,38},'_'}]}],
                  [],
                  [{call,
                    {319,38},
                    {remote,
                     {319,38},
                     {atom,{319,38},erlang},
                     {atom,{319,38},setelement}},
                    [{integer,{319,38},3},
                     {call,
                      {319,52},
                      {remote,
                       {319,52},
                       {atom,{319,52},erlang},
                       {atom,{319,52},setelement}},
                      [{integer,{319,52},4},
                       {var,{319,27},rec7},
                       {var,{319,57},'Br'}]},
                     {var,{319,38},rec6}]}]},
                 {clause,
                  [{generated,true},{location,{319,38}}],
                  [{var,[{generated,true},{location,{319,38}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{319,38}}],
                    {remote,
                     [{generated,true},{location,{319,38}}],
                     {atom,[{generated,true},{location,{319,38}}],erlang},
                     {atom,[{generated,true},{location,{319,38}}],error}},
                    [{tuple,
                      [{generated,true},{location,{319,38}}],
                      [{atom,[{generated,true},{location,{319,38}}],badrecord},
                       {var,{319,27},rec7}]}]}]}]}]}},
            {debug_line,320,71},
            {match,
             {320,21},
             {var,{320,21},'Successors'},
             {call,
              {320,34},
              {remote,
               {320,42},
               {atom,{320,34},beam_ssa},
               {atom,{320,43},successors}},
              [{var,{320,54},'Blk'}]}},
            {debug_line,321,72},
            {match,
             {321,21},
             {var,{321,21},'Reached'},
             {call,
              {321,31},
              {remote,{321,35},{atom,{321,31},sets},{atom,{321,36},union}},
              [{var,{321,42},'Reached0'},
               {block,0,
                [{debug_line,322,73},
                 {call,
                  {322,47},
                  {remote,
                   {322,51},
                   {atom,{322,47},sets},
                   {atom,{322,52},from_list}},
                  [{var,{322,62},'Successors'}]}]}]}},
            {debug_line,323,74},
            {call,
             {323,21},
             {atom,{323,21},pre_opt},
             [{var,{323,29},'Ls'},
              {var,{323,33},'Sub'},
              {var,{323,38},'Reached'},
              {var,{323,47},'Count'},
              {block,0,
               [{map,
                 {323,60},
                 {var,{323,54},'Blocks'},
                 [{map_field_exact,
                   {323,63},
                   {var,{323,62},'L'},
                   {var,{323,65},'Blk'}}]}]}]}]},
          {clause,
           {324,17},
           [{var,{324,17},'Last'}],
           [],
           [{debug_line,325,75},
            {match,
             {325,21},
             {var,{325,21},'Blk'},
             {block,
              {325,27},
              [{match,{325,27},{var,{325,27},rec8},{var,{325,27},'Blk0'}},
               {'case',
                {325,38},
                {var,{325,27},rec8},
                [{clause,
                  {325,38},
                  [{tuple,
                    {325,38},
                    [{atom,{325,38},b_blk},
                     {var,{325,38},'_'},
                     {var,{325,38},'_'},
                     {var,{325,38},'_'}]}],
                  [],
                  [{call,
                    {325,38},
                    {remote,
                     {325,38},
                     {atom,{325,38},erlang},
                     {atom,{325,38},setelement}},
                    [{integer,{325,38},3},
                     {call,
                      {325,44},
                      {remote,
                       {325,44},
                       {atom,{325,44},erlang},
                       {atom,{325,44},setelement}},
                      [{integer,{325,44},4},
                       {var,{325,27},rec8},
                       {var,{325,49},'Last'}]},
                     {var,{325,41},'Is'}]}]},
                 {clause,
                  [{generated,true},{location,{325,38}}],
                  [{var,[{generated,true},{location,{325,38}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{325,38}}],
                    {remote,
                     [{generated,true},{location,{325,38}}],
                     {atom,[{generated,true},{location,{325,38}}],erlang},
                     {atom,[{generated,true},{location,{325,38}}],error}},
                    [{tuple,
                      [{generated,true},{location,{325,38}}],
                      [{atom,[{generated,true},{location,{325,38}}],badrecord},
                       {var,{325,27},rec8}]}]}]}]}]}},
            {debug_line,326,76},
            {match,
             {326,21},
             {var,{326,21},'Successors'},
             {call,
              {326,34},
              {remote,
               {326,42},
               {atom,{326,34},beam_ssa},
               {atom,{326,43},successors}},
              [{var,{326,54},'Blk'}]}},
            {debug_line,327,77},
            {match,
             {327,21},
             {var,{327,21},'Reached'},
             {call,
              {327,31},
              {remote,{327,35},{atom,{327,31},sets},{atom,{327,36},union}},
              [{var,{327,42},'Reached0'},
               {block,0,
                [{debug_line,328,78},
                 {call,
                  {328,47},
                  {remote,
                   {328,51},
                   {atom,{328,47},sets},
                   {atom,{328,52},from_list}},
                  [{var,{328,62},'Successors'}]}]}]}},
            {debug_line,329,79},
            {call,
             {329,21},
             {atom,{329,21},pre_opt},
             [{var,{329,29},'Ls'},
              {var,{329,33},'Sub'},
              {var,{329,38},'Reached'},
              {var,{329,47},'Count0'},
              {block,0,
               [{map,
                 {329,61},
                 {var,{329,55},'Blocks'},
                 [{map_field_exact,
                   {329,64},
                   {var,{329,63},'L'},
                   {var,{329,66},'Blk'}}]}]}]}]}]}]}]}]},
  {clause,
   {332,1},
   [{nil,{332,9}},
    {var,{332,13},'_'},
    {var,{332,16},'_'},
    {var,{332,19},'Count'},
    {var,{332,26},'Blocks'}],
   [],
   [{debug_line,333,80},
    {tuple,{333,5},[{var,{333,6},'Blocks'},{var,{333,13},'Count'}]}]}]}.
{function,
 {335,1},
 pre_opt_is,4,
 [{clause,
   {335,1},
   [{var,{335,1},'_'},{var,{335,1},'_'},{var,{335,1},'_'},{var,{335,1},'_'}],
   [[{call,
      {335,1},
      {remote,{335,1},{atom,{335,1},fake},{atom,{335,1},is_beam_bif_info}},
      []}]],
   [{debug_line,335,81},{atom,{335,1},ignore}]},
  {clause,
   {335,1},
   [{cons,
     {335,12},
     {match,
      {335,13},
      {tuple,
       {335,13},
       [{atom,{335,13},b_set},
        {var,{335,13},'_'},
        {var,{335,31},'Dst'},
        {atom,{335,23},phi},
        {var,{335,40},'Args0'}]},
      {var,{335,47},'I0'}},
     {var,{335,50},'Is'}},
    {var,{335,55},'Reached'},
    {var,{335,64},'Sub0'},
    {var,{335,70},'Acc'}],
   [],
   [{debug_line,336,82},
    {match,
     {336,5},
     {var,{336,5},'Args1'},
     {lc,
      {336,13},
      {block,0,
       [{tuple,{336,14},[{var,{336,15},'Val'},{var,{336,19},'From'}]}]},
      [{block,0,[{atom,{336,43},true}]},
       {generate_strict,
        {336,39},
        {tuple,{336,28},[{var,{336,29},'Val'},{var,{336,33},'From'}]},
        {var,{336,43},'Args0'}},
       {block,0,[{debug_line,337,83},{atom,{337,28},true}]},
       {call,
        {337,28},
        {remote,{337,32},{atom,{337,28},sets},{atom,{337,33},is_element}},
        [{var,{337,44},'From'},{var,{337,50},'Reached'}]}]}},
    {debug_line,338,84},
    {match,
     {338,5},
     {var,{338,5},'Args'},
     {call,
      {338,12},
      {atom,{338,12},sub_args},
      [{var,{338,21},'Args1'},{var,{338,28},'Sub0'}]}},
    {debug_line,339,85},
    {'case',
     {339,5},
     {call,{339,10},{atom,{339,10},all_same},[{var,{339,19},'Args'}]},
     [{clause,
       {340,9},
       [{atom,{340,9},true}],
       [],
       [{debug_line,343,86},
        {match,
         {343,13},
         {tuple,{343,13},[{var,{343,14},'Arg'},{var,{343,18},'_'}]},
         {call,
          {343,23},
          {remote,{343,23},{atom,{343,23},erlang},{atom,{343,23},hd}},
          [{var,{343,26},'Args'}]}},
        {debug_line,344,87},
        {match,
         {344,13},
         {var,{344,13},'Sub'},
         {map,
          {344,23},
          {var,{344,19},'Sub0'},
          [{map_field_assoc,
            {344,28},
            {var,{344,25},'Dst'},
            {var,{344,30},'Arg'}}]}},
        {debug_line,345,88},
        {call,
         {345,13},
         {atom,{345,13},pre_opt_is},
         [{var,{345,24},'Is'},
          {var,{345,28},'Reached'},
          {var,{345,37},'Sub'},
          {var,{345,42},'Acc'}]}]},
      {clause,
       {346,9},
       [{atom,{346,9},false}],
       [],
       [{debug_line,347,89},
        {'case',
         {347,13},
         {call,
          {347,18},
          {atom,{347,18},pre_is_phi_bool},
          [{var,{347,34},'Args'},{var,{347,40},'Sub0'}]},
         [{clause,
           {348,17},
           [{atom,{348,17},true}],
           [],
           [{debug_line,352,90},
            {match,
             {352,21},
             {var,{352,21},'Anno'},
             {'case',
              {352,28},
              {var,{352,28},'I0'},
              [{clause,
                [{generated,true},{location,{352,28}}],
                [{tuple,
                  [{generated,true},{location,{352,28}}],
                  [{atom,{352,28},b_set},
                   {var,{352,28},rec9},
                   {var,{352,28},'_'},
                   {var,{352,28},'_'},
                   {var,{352,28},'_'}]}],
                [],
                [{var,{352,28},rec9}]},
               {clause,
                [{generated,true},{location,{352,28}}],
                [{var,{352,28},rec9}],
                [],
                [{call,
                  [{generated,true},{location,{352,28}}],
                  {remote,
                   [{generated,true},{location,{352,28}}],
                   {atom,[{generated,true},{location,{352,28}}],erlang},
                   {atom,[{generated,true},{location,{352,28}}],error}},
                  [{tuple,
                    [{generated,true},{location,{352,28}}],
                    [{atom,[{generated,true},{location,{352,28}}],badrecord},
                     {var,{352,28},rec9}]}]}]}]}},
            {debug_line,353,91},
            {match,
             {353,21},
             {var,{353,21},'I'},
             {block,
              {353,25},
              [{match,
                {353,44},
                {var,{353,44},rec10},
                {map,
                 {353,53},
                 {var,{353,49},'Anno'},
                 [{map_field_assoc,
                   {353,66},
                   {atom,{353,55},boolean_phi},
                   {atom,{353,68},true}}]}},
               {match,{353,25},{var,{353,25},rec11},{var,{353,25},'I0'}},
               {'case',
                {353,44},
                {var,{353,25},rec11},
                [{clause,
                  {353,44},
                  [{tuple,
                    {353,44},
                    [{atom,{353,44},b_set},
                     {var,{353,44},'_'},
                     {var,{353,44},'_'},
                     {var,{353,44},'_'},
                     {var,{353,44},'_'}]}],
                  [],
                  [{call,
                    {353,44},
                    {remote,
                     {353,44},
                     {atom,{353,44},erlang},
                     {atom,{353,44},setelement}},
                    [{integer,{353,44},2},
                     {call,
                      {353,34},
                      {remote,
                       {353,34},
                       {atom,{353,34},erlang},
                       {atom,{353,34},setelement}},
                      [{integer,{353,34},5},
                       {var,{353,25},rec11},
                       {var,{353,39},'Args'}]},
                     {var,{353,44},rec10}]}]},
                 {clause,
                  [{generated,true},{location,{353,44}}],
                  [{var,[{generated,true},{location,{353,44}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{353,44}}],
                    {remote,
                     [{generated,true},{location,{353,44}}],
                     {atom,[{generated,true},{location,{353,44}}],erlang},
                     {atom,[{generated,true},{location,{353,44}}],error}},
                    [{tuple,
                      [{generated,true},{location,{353,44}}],
                      [{atom,[{generated,true},{location,{353,44}}],badrecord},
                       {var,{353,25},rec11}]}]}]}]}]}},
            {debug_line,354,92},
            {match,
             {354,21},
             {var,{354,21},'Sub'},
             {map,
              {354,31},
              {var,{354,27},'Sub0'},
              [{map_field_assoc,
                {354,36},
                {var,{354,33},'Dst'},
                {var,{354,38},'I'}}]}},
            {debug_line,355,93},
            {call,
             {355,21},
             {atom,{355,21},pre_opt_is},
             [{var,{355,32},'Is'},
              {var,{355,36},'Reached'},
              {var,{355,45},'Sub'},
              {block,0,
               [{cons,{355,50},{var,{355,51},'I'},{var,{355,53},'Acc'}}]}]}]},
          {clause,
           {356,17},
           [{atom,{356,17},false}],
           [],
           [{debug_line,357,94},
            {match,
             {357,21},
             {var,{357,21},'I'},
             {block,
              {357,25},
              [{match,{357,25},{var,{357,25},rec12},{var,{357,25},'I0'}},
               {'case',
                {357,34},
                {var,{357,25},rec12},
                [{clause,
                  {357,34},
                  [{tuple,
                    {357,34},
                    [{atom,{357,34},b_set},
                     {var,{357,34},'_'},
                     {var,{357,34},'_'},
                     {var,{357,34},'_'},
                     {var,{357,34},'_'}]}],
                  [],
                  [{call,
                    {357,34},
                    {remote,
                     {357,34},
                     {atom,{357,34},erlang},
                     {atom,{357,34},setelement}},
                    [{integer,{357,34},5},
                     {var,{357,25},rec12},
                     {var,{357,39},'Args'}]}]},
                 {clause,
                  [{generated,true},{location,{357,34}}],
                  [{var,[{generated,true},{location,{357,34}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{357,34}}],
                    {remote,
                     [{generated,true},{location,{357,34}}],
                     {atom,[{generated,true},{location,{357,34}}],erlang},
                     {atom,[{generated,true},{location,{357,34}}],error}},
                    [{tuple,
                      [{generated,true},{location,{357,34}}],
                      [{atom,[{generated,true},{location,{357,34}}],badrecord},
                       {var,{357,25},rec12}]}]}]}]}]}},
            {debug_line,358,95},
            {call,
             {358,21},
             {atom,{358,21},pre_opt_is},
             [{var,{358,32},'Is'},
              {var,{358,36},'Reached'},
              {var,{358,45},'Sub0'},
              {block,0,
               [{cons,
                 {358,51},
                 {var,{358,52},'I'},
                 {var,{358,54},'Acc'}}]}]}]}]}]}]}]},
  {clause,
   {361,1},
   [{cons,
     {361,12},
     {match,
      {361,13},
      {tuple,
       {361,13},
       [{atom,{361,13},b_set},
        {var,{361,13},'_'},
        {var,{361,41},'Dst'},
        {tuple,{361,23},[{atom,{361,24},succeeded},{var,{361,34},'_'}]},
        {var,{361,50},'Args0'}]},
      {var,{361,57},'I0'}},
     {var,{361,60},'Is'}},
    {var,{362,12},'Reached'},
    {var,{362,21},'Sub0'},
    {var,{362,27},'Acc'}],
   [],
   [{debug_line,363,96},
    {match,
     {363,5},
     {cons,{363,5},{var,{363,6},'Arg'},{nil,{363,9}}},
     {match,
      {363,13},
      {var,{363,13},'Args'},
      {call,
       {363,20},
       {atom,{363,20},sub_args},
       [{var,{363,29},'Args0'},{var,{363,36},'Sub0'}]}}},
    {debug_line,364,97},
    {match,
     {364,5},
     {var,{364,5},'I'},
     {block,
      {364,9},
      [{match,{364,9},{var,{364,9},rec13},{var,{364,9},'I0'}},
       {'case',
        {364,18},
        {var,{364,9},rec13},
        [{clause,
          {364,18},
          [{tuple,
            {364,18},
            [{atom,{364,18},b_set},
             {var,{364,18},'_'},
             {var,{364,18},'_'},
             {var,{364,18},'_'},
             {var,{364,18},'_'}]}],
          [],
          [{call,
            {364,18},
            {remote,
             {364,18},
             {atom,{364,18},erlang},
             {atom,{364,18},setelement}},
            [{integer,{364,18},5},
             {var,{364,9},rec13},
             {var,{364,23},'Args'}]}]},
         {clause,
          [{generated,true},{location,{364,18}}],
          [{var,[{generated,true},{location,{364,18}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{364,18}}],
            {remote,
             [{generated,true},{location,{364,18}}],
             {atom,[{generated,true},{location,{364,18}}],erlang},
             {atom,[{generated,true},{location,{364,18}}],error}},
            [{tuple,
              [{generated,true},{location,{364,18}}],
              [{atom,[{generated,true},{location,{364,18}}],badrecord},
               {var,{364,9},rec13}]}]}]}]}]}},
    {debug_line,365,98},
    {'case',
     {365,5},
     {call,
      {365,10},
      {atom,{365,10},pre_is_safe_bool},
      [{var,{365,27},'Arg'},{var,{365,32},'Sub0'}]},
     [{clause,
       {366,9},
       [{atom,{366,9},true}],
       [],
       [{debug_line,369,99},
        {match,
         {369,13},
         {var,{369,13},'Sub'},
         {map,
          {369,23},
          {var,{369,19},'Sub0'},
          [{map_field_assoc,
            {369,28},
            {var,{369,25},'Dst'},
            {tuple,
             {369,30},
             [{atom,{369,30},b_literal},{atom,{369,45},true}]}}]}},
        {debug_line,370,100},
        {call,
         {370,13},
         {atom,{370,13},pre_opt_is},
         [{var,{370,24},'Is'},
          {var,{370,28},'Reached'},
          {var,{370,37},'Sub'},
          {var,{370,42},'Acc'}]}]},
      {clause,
       {371,9},
       [{atom,{371,9},false}],
       [],
       [{debug_line,374,101},
        {match,
         {374,13},
         {var,{374,13},'Sub'},
         {call,
          {374,19},
          {remote,{374,23},{atom,{374,19},maps},{atom,{374,24},remove}},
          [{var,{374,31},'Arg'},{var,{374,36},'Sub0'}]}},
        {debug_line,375,102},
        {call,
         {375,13},
         {atom,{375,13},pre_opt_is},
         [{var,{375,24},'Is'},
          {var,{375,28},'Reached'},
          {var,{375,37},'Sub'},
          {block,0,
           [{cons,{375,42},{var,{375,43},'I'},{var,{375,45},'Acc'}}]}]}]}]}]},
  {clause,
   {377,1},
   [{cons,
     {377,12},
     {match,
      {377,13},
      {tuple,
       {377,13},
       [{atom,{377,13},b_set},
        {var,{377,13},'_'},
        {var,{377,24},'Dst'},
        {var,{377,13},'_'},
        {var,{377,33},'Args0'}]},
      {var,{377,40},'I0'}},
     {var,{377,43},'Is'}},
    {var,{377,48},'Reached'},
    {var,{377,57},'Sub0'},
    {var,{377,63},'Acc'}],
   [],
   [{debug_line,378,103},
    {match,
     {378,5},
     {var,{378,5},'Args'},
     {call,
      {378,12},
      {atom,{378,12},sub_args},
      [{var,{378,21},'Args0'},{var,{378,28},'Sub0'}]}},
    {debug_line,379,104},
    {match,
     {379,5},
     {var,{379,5},'I'},
     {block,
      {379,9},
      [{match,{379,9},{var,{379,9},rec14},{var,{379,9},'I0'}},
       {'case',
        {379,18},
        {var,{379,9},rec14},
        [{clause,
          {379,18},
          [{tuple,
            {379,18},
            [{atom,{379,18},b_set},
             {var,{379,18},'_'},
             {var,{379,18},'_'},
             {var,{379,18},'_'},
             {var,{379,18},'_'}]}],
          [],
          [{call,
            {379,18},
            {remote,
             {379,18},
             {atom,{379,18},erlang},
             {atom,{379,18},setelement}},
            [{integer,{379,18},5},
             {var,{379,9},rec14},
             {var,{379,23},'Args'}]}]},
         {clause,
          [{generated,true},{location,{379,18}}],
          [{var,[{generated,true},{location,{379,18}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{379,18}}],
            {remote,
             [{generated,true},{location,{379,18}}],
             {atom,[{generated,true},{location,{379,18}}],erlang},
             {atom,[{generated,true},{location,{379,18}}],error}},
            [{tuple,
              [{generated,true},{location,{379,18}}],
              [{atom,[{generated,true},{location,{379,18}}],badrecord},
               {var,{379,9},rec14}]}]}]}]}]}},
    {debug_line,380,105},
    {'case',
     {380,5},
     {call,{380,10},{atom,{380,10},is_bool_expr},[{var,{380,23},'I'}]},
     [{clause,
       {381,9},
       [{atom,{381,9},true}],
       [],
       [{debug_line,382,106},
        {'case',
         {382,13},
         {call,
          {382,18},
          {atom,{382,18},pre_eval_op},
          [{var,{382,30},'I'},{var,{382,33},'Sub0'}]},
         [{clause,
           {383,17},
           [{atom,{383,17},none}],
           [],
           [{debug_line,384,107},
            {match,
             {384,21},
             {var,{384,21},'Sub'},
             {map,
              {384,31},
              {var,{384,27},'Sub0'},
              [{map_field_assoc,
                {384,36},
                {var,{384,33},'Dst'},
                {var,{384,38},'I'}}]}},
            {debug_line,385,108},
            {call,
             {385,21},
             {atom,{385,21},pre_opt_is},
             [{var,{385,32},'Is'},
              {var,{385,36},'Reached'},
              {var,{385,45},'Sub'},
              {block,0,
               [{cons,{385,50},{var,{385,51},'I'},{var,{385,53},'Acc'}}]}]}]},
          {clause,
           {386,17},
           [{match,
             {386,17},
             {tuple,{386,17},[{atom,{386,17},b_var},{var,{386,17},'_'}]},
             {var,{386,26},'Var'}}],
           [],
           [{debug_line,389,109},
            {match,
             {389,21},
             {cons,
              {389,21},
              {tuple,
               {389,22},
               [{atom,{389,22},b_set},
                {var,{389,22},'_'},
                {var,{389,50},'SuccDst'},
                {tuple,
                 {389,32},
                 [{atom,{389,33},succeeded},{var,{389,43},'_'}]},
                {cons,{389,63},{var,{389,64},'Dst'},{nil,{389,67}}}]},
              {nil,{389,69}}},
             {var,{389,73},'Is'}},
            {debug_line,390,110},
            {match,
             {390,21},
             {var,{390,21},'Sub'},
             {map,
              {390,31},
              {var,{390,27},'Sub0'},
              [{map_field_assoc,
                {390,36},
                {var,{390,33},'Dst'},
                {var,{390,38},'Var'}},
               {map_field_assoc,
                {390,49},
                {var,{390,42},'SuccDst'},
                {tuple,
                 {390,51},
                 [{atom,{390,51},b_literal},{atom,{390,66},true}]}}]}},
            {debug_line,391,111},
            {call,
             {391,21},
             {atom,{391,21},pre_opt_is},
             [{nil,{391,32}},
              {var,{391,36},'Reached'},
              {var,{391,45},'Sub'},
              {var,{391,50},'Acc'}]}]},
          {clause,
           {392,17},
           [{match,
             {392,17},
             {tuple,{392,17},[{atom,{392,17},b_literal},{var,{392,17},'_'}]},
             {var,{392,30},'Lit'}}],
           [],
           [{debug_line,393,112},
            {match,
             {393,21},
             {var,{393,21},'Sub'},
             {map,
              {393,31},
              {var,{393,27},'Sub0'},
              [{map_field_assoc,
                {393,36},
                {var,{393,33},'Dst'},
                {var,{393,38},'Lit'}}]}},
            {debug_line,394,113},
            {call,
             {394,21},
             {atom,{394,21},pre_opt_is},
             [{var,{394,32},'Is'},
              {var,{394,36},'Reached'},
              {var,{394,45},'Sub'},
              {var,{394,50},'Acc'}]}]}]}]},
      {clause,
       {396,9},
       [{atom,{396,9},false}],
       [],
       [{debug_line,397,114},
        {'case',
         {397,13},
         {call,
          {397,18},
          {remote,
           {397,26},
           {atom,{397,18},beam_ssa},
           {atom,{397,27},eval_instr}},
          [{var,{397,38},'I'}]},
         [{clause,
           {398,17},
           [{atom,{398,17},any}],
           [],
           [{debug_line,399,115},
            {call,
             {399,21},
             {atom,{399,21},pre_opt_is},
             [{var,{399,32},'Is'},
              {var,{399,36},'Reached'},
              {var,{399,45},'Sub0'},
              {block,0,
               [{cons,{399,51},{var,{399,52},'I'},{var,{399,54},'Acc'}}]}]}]},
          {clause,
           {400,17},
           [{atom,{400,17},failed}],
           [],
           [{debug_line,401,116},
            {'case',
             {401,21},
             {var,{401,26},'Is'},
             [{clause,
               {402,25},
               [{cons,
                 {402,25},
                 {tuple,
                  {402,26},
                  [{atom,{402,26},b_set},
                   {var,{402,26},'_'},
                   {var,{402,58},'SuccDst'},
                   {tuple,
                    {402,36},
                    [{atom,{402,37},succeeded},{atom,{402,47},guard}]},
                   {cons,{402,71},{var,{402,72},'Dst'},{nil,{402,75}}}]},
                 {nil,{402,77}}}],
               [],
               [{debug_line,411,117},
                {match,
                 {411,29},
                 {var,{411,29},'Sub'},
                 {map,
                  {411,39},
                  {var,{411,35},'Sub0'},
                  [{map_field_assoc,
                    {411,49},
                    {var,{411,41},'SuccDst'},
                    {tuple,
                     {411,52},
                     [{atom,{411,52},b_literal},{atom,{411,67},false}]}}]}},
                {debug_line,412,118},
                {tuple,
                 {412,29},
                 [{call,
                   {412,30},
                   {remote,
                    {412,30},
                    {atom,{412,30},lists},
                    {atom,{412,30},reverse}},
                   [{var,{412,38},'Acc'}]},
                  {var,{412,43},'Sub'}]}]},
              {clause,
               {413,25},
               [{var,{413,25},'_'}],
               [],
               [{debug_line,417,119},
                {call,
                 {417,29},
                 {atom,{417,29},pre_opt_is},
                 [{var,{417,40},'Is'},
                  {var,{417,44},'Reached'},
                  {var,{417,53},'Sub0'},
                  {block,0,
                   [{cons,
                     {417,59},
                     {var,{417,60},'I'},
                     {var,{417,62},'Acc'}}]}]}]}]}]},
          {clause,
           {419,17},
           [{match,
             {419,17},
             {tuple,{419,17},[{atom,{419,17},b_literal},{var,{419,17},'_'}]},
             {var,{419,30},'Lit'}}],
           [],
           [{debug_line,420,120},
            {match,
             {420,21},
             {var,{420,21},'Sub'},
             {map,
              {420,31},
              {var,{420,27},'Sub0'},
              [{map_field_assoc,
                {420,37},
                {var,{420,33},'Dst'},
                {var,{420,40},'Lit'}}]}},
            {debug_line,421,121},
            {call,
             {421,21},
             {atom,{421,21},pre_opt_is},
             [{var,{421,32},'Is'},
              {var,{421,36},'Reached'},
              {var,{421,45},'Sub'},
              {var,{421,50},'Acc'}]}]}]}]}]}]},
  {clause,
   {424,1},
   [{nil,{424,12}},
    {var,{424,16},'_Reached'},
    {var,{424,26},'Sub'},
    {var,{424,31},'Acc'}],
   [],
   [{debug_line,425,122},
    {tuple,
     {425,5},
     [{call,
       {425,6},
       {remote,{425,6},{atom,{425,6},lists},{atom,{425,6},reverse}},
       [{var,{425,14},'Acc'}]},
      {var,{425,19},'Sub'}]}]}]}.
{function,
 {427,1},
 pre_opt_terminator,3,
 [{clause,
   {427,1},
   [{var,{427,1},'_'},{var,{427,1},'_'},{var,{427,1},'_'}],
   [[{call,
      {427,1},
      {remote,{427,1},{atom,{427,1},fake},{atom,{427,1},is_beam_bif_info}},
      []}]],
   [{debug_line,427,123},{atom,{427,1},ignore}]},
  {clause,
   {427,1},
   [{match,
     {427,20},
     {tuple,
      {427,20},
      [{atom,{427,20},b_br},
       {var,{427,20},'_'},
       {tuple,{427,31},[{atom,{427,31},b_literal},{var,{427,31},'_'}]},
       {var,{427,20},'_'},
       {var,{427,20},'_'}]},
     {var,{427,45},'Br'}},
    {var,{427,49},'_Sub'},
    {var,{427,55},'_Blocks'}],
   [],
   [{debug_line,428,124},{var,{428,5},'Br'}]},
  {clause,
   {429,1},
   [{match,
     {429,20},
     {tuple,
      {429,20},
      [{atom,{429,20},b_br},
       {var,{429,20},'_'},
       {var,{429,31},'Bool'},
       {var,{429,20},'_'},
       {var,{429,20},'_'}]},
     {var,{429,37},'Br0'}},
    {var,{429,42},'Sub'},
    {var,{429,47},'Blocks'}],
   [],
   [{debug_line,430,125},
    {'case',
     {430,5},
     {call,
      {430,10},
      {remote,{430,18},{atom,{430,10},beam_ssa},{atom,{430,19},normalize}},
      [{block,0,
        [{block,
          {430,29},
          [{match,
            {430,38},
            {var,{430,38},rec15},
            {call,
             {430,43},
             {atom,{430,43},sub_arg},
             [{var,{430,51},'Bool'},{var,{430,57},'Sub'}]}},
           {match,{430,29},{var,{430,29},rec16},{var,{430,29},'Br0'}},
           {'case',
            {430,38},
            {var,{430,29},rec16},
            [{clause,
              {430,38},
              [{tuple,
                {430,38},
                [{atom,{430,38},b_br},
                 {var,{430,38},'_'},
                 {var,{430,38},'_'},
                 {var,{430,38},'_'},
                 {var,{430,38},'_'}]}],
              [],
              [{call,
                {430,38},
                {remote,
                 {430,38},
                 {atom,{430,38},erlang},
                 {atom,{430,38},setelement}},
                [{integer,{430,38},3},
                 {var,{430,29},rec16},
                 {var,{430,38},rec15}]}]},
             {clause,
              [{generated,true},{location,{430,38}}],
              [{var,[{generated,true},{location,{430,38}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{430,38}}],
                {remote,
                 [{generated,true},{location,{430,38}}],
                 {atom,[{generated,true},{location,{430,38}}],erlang},
                 {atom,[{generated,true},{location,{430,38}}],error}},
                [{tuple,
                  [{generated,true},{location,{430,38}}],
                  [{atom,[{generated,true},{location,{430,38}}],badrecord},
                   {var,{430,29},rec16}]}]}]}]}]}]}]},
     [{clause,
       {431,9},
       [{var,{431,9},'Br0'}],
       [],
       [{debug_line,432,126},{var,{432,13},'Br0'}]},
      {clause,
       {433,9},
       [{match,
         {433,9},
         {tuple,
          {433,9},
          [{atom,{433,9},b_br},
           {var,{433,9},'_'},
           {tuple,{433,20},[{atom,{433,20},b_literal},{atom,{433,35},true}]},
           {var,{433,46},'Next'},
           {var,{433,9},'_'}]},
         {var,{433,52},'Br'}}],
       [],
       [{debug_line,437,127},
        {match,
         {437,13},
         {tuple,
          {437,13},
          [{atom,{437,13},b_blk},
           {var,{437,13},'_'},
           {var,{437,23},'Is'},
           {var,{437,31},'Last'}]},
         {call,
          {437,39},
          {remote,{437,39},{atom,{437,39},erlang},{atom,{437,39},map_get}},
          [{var,{437,47},'Next'},{var,{437,53},'Blocks'}]}},
        {debug_line,438,128},
        {'case',
         {438,13},
         {tuple,{438,18},[{var,{438,19},'Is'},{var,{438,22},'Last'}]},
         [{clause,
           {439,17},
           [{tuple,
             {439,17},
             [{nil,{439,18}},
              {tuple,
               {439,21},
               [{atom,{439,21},b_switch},
                {var,{439,21},'_'},
                {var,{439,21},'_'},
                {var,{439,21},'_'},
                {var,{439,21},'_'}]}]}],
           [],
           [{debug_line,440,129},
            {call,
             {440,21},
             {atom,{440,21},pre_opt_terminator},
             [{var,{440,40},'Last'},
              {var,{440,46},'Sub'},
              {var,{440,51},'Blocks'}]}]},
          {clause,
           {441,17},
           [{tuple,{441,17},[{var,{441,18},'_'},{var,{441,20},'_'}]}],
           [],
           [{debug_line,442,130},{var,{442,21},'Br'}]}]}]}]}]},
  {clause,
   {445,1},
   [{match,
     {445,20},
     {tuple,
      {445,20},
      [{atom,{445,20},b_ret},{var,{445,20},'_'},{var,{445,31},'Arg'}]},
     {var,{445,36},'Ret'}},
    {var,{445,41},'Sub'},
    {var,{445,46},'_Blocks'}],
   [],
   [{debug_line,446,131},
    {call,
     {446,5},
     {remote,{446,13},{atom,{446,5},beam_ssa},{atom,{446,14},normalize}},
     [{block,0,
       [{block,
         {446,24},
         [{match,
           {446,34},
           {var,{446,34},rec17},
           {call,
            {446,38},
            {atom,{446,38},sub_arg},
            [{var,{446,46},'Arg'},{var,{446,51},'Sub'}]}},
          {match,{446,24},{var,{446,24},rec18},{var,{446,24},'Ret'}},
          {'case',
           {446,34},
           {var,{446,24},rec18},
           [{clause,
             {446,34},
             [{tuple,
               {446,34},
               [{atom,{446,34},b_ret},{var,{446,34},'_'},{var,{446,34},'_'}]}],
             [],
             [{call,
               {446,34},
               {remote,
                {446,34},
                {atom,{446,34},erlang},
                {atom,{446,34},setelement}},
               [{integer,{446,34},3},
                {var,{446,24},rec18},
                {var,{446,34},rec17}]}]},
            {clause,
             [{generated,true},{location,{446,34}}],
             [{var,[{generated,true},{location,{446,34}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{446,34}}],
               {remote,
                [{generated,true},{location,{446,34}}],
                {atom,[{generated,true},{location,{446,34}}],erlang},
                {atom,[{generated,true},{location,{446,34}}],error}},
               [{tuple,
                 [{generated,true},{location,{446,34}}],
                 [{atom,[{generated,true},{location,{446,34}}],badrecord},
                  {var,{446,24},rec18}]}]}]}]}]}]}]}]},
  {clause,
   {447,1},
   [{match,
     {447,20},
     {tuple,
      {447,20},
      [{atom,{447,20},b_switch},
       {var,{447,20},'_'},
       {var,{447,34},'Arg0'},
       {var,{447,20},'_'},
       {var,{447,20},'_'}]},
     {var,{447,40},'Sw0'}},
    {var,{447,45},'Sub'},
    {var,{447,50},'Blocks'}],
   [],
   [{debug_line,448,132},
    {'case',
     {448,5},
     {call,
      {448,10},
      {remote,{448,18},{atom,{448,10},beam_ssa},{atom,{448,19},normalize}},
      [{block,0,
        [{block,
          {448,29},
          [{match,
            {448,42},
            {var,{448,42},rec19},
            {call,
             {448,46},
             {atom,{448,46},sub_arg},
             [{var,{448,54},'Arg0'},{var,{448,60},'Sub'}]}},
           {match,{448,29},{var,{448,29},rec20},{var,{448,29},'Sw0'}},
           {'case',
            {448,42},
            {var,{448,29},rec20},
            [{clause,
              {448,42},
              [{tuple,
                {448,42},
                [{atom,{448,42},b_switch},
                 {var,{448,42},'_'},
                 {var,{448,42},'_'},
                 {var,{448,42},'_'},
                 {var,{448,42},'_'}]}],
              [],
              [{call,
                {448,42},
                {remote,
                 {448,42},
                 {atom,{448,42},erlang},
                 {atom,{448,42},setelement}},
                [{integer,{448,42},3},
                 {var,{448,29},rec20},
                 {var,{448,42},rec19}]}]},
             {clause,
              [{generated,true},{location,{448,42}}],
              [{var,[{generated,true},{location,{448,42}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{448,42}}],
                {remote,
                 [{generated,true},{location,{448,42}}],
                 {atom,[{generated,true},{location,{448,42}}],erlang},
                 {atom,[{generated,true},{location,{448,42}}],error}},
                [{tuple,
                  [{generated,true},{location,{448,42}}],
                  [{atom,[{generated,true},{location,{448,42}}],badrecord},
                   {var,{448,29},rec20}]}]}]}]}]}]}]},
     [{clause,
       {449,9},
       [{match,
         {449,9},
         {tuple,
          {449,9},
          [{atom,{449,9},b_switch},
           {var,{449,9},'_'},
           {var,{449,23},'Arg'},
           {var,{449,9},'_'},
           {var,{449,32},'List'}]},
         {var,{449,38},'Sw'}}],
       [],
       [{debug_line,450,133},
        {'case',
         {450,13},
         {call,
          {450,18},
          {remote,{450,18},{atom,{450,18},lists},{atom,{450,18},sort}},
          [{var,{450,23},'List'}]},
         [{clause,
           {451,17},
           [{cons,
             {451,17},
             {tuple,
              {451,18},
              [{tuple,
                {451,19},
                [{atom,{451,19},b_literal},{atom,{451,34},false}]},
               {var,{451,41},'Fail'}]},
             {cons,
              {452,18},
              {tuple,
               {452,18},
               [{tuple,
                 {452,19},
                 [{atom,{452,19},b_literal},{atom,{452,34},true}]},
                {var,{452,40},'Succ'}]},
              {nil,{452,45}}}}],
           [],
           [{debug_line,453,134},
            {'case',
             {453,21},
             {call,
              {453,26},
              {atom,{453,26},pre_is_arg_bool},
              [{var,{453,42},'Arg'},{var,{453,47},'Sub'}]},
             [{clause,
               {454,25},
               [{atom,{454,25},false}],
               [],
               [{debug_line,455,135},
                {call,
                 {455,29},
                 {atom,{455,29},pre_opt_sw},
                 [{var,{455,40},'Sw'},
                  {var,{455,44},'Fail'},
                  {var,{455,50},'Succ'},
                  {var,{455,56},'Sub'},
                  {var,{455,61},'Blocks'}]}]},
              {clause,
               {456,25},
               [{atom,{456,25},true}],
               [],
               [{debug_line,457,136},
                {call,
                 {457,29},
                 {remote,
                  {457,37},
                  {atom,{457,29},beam_ssa},
                  {atom,{457,38},normalize}},
                 [{block,0,
                   [{tuple,
                     {457,48},
                     [{atom,{457,48},b_br},
                      {map,{457,48},[]},
                      {var,{457,59},'Arg'},
                      {var,{457,68},'Succ'},
                      {var,{457,78},'Fail'}]}]}]}]}]}]},
          {clause,
           {459,17},
           [{var,{459,17},'_'}],
           [],
           [{debug_line,460,137},{var,{460,21},'Sw'}]}]}]},
      {clause,
       {462,9},
       [{var,{462,9},'Other'}],
       [],
       [{debug_line,463,138},
        {call,
         {463,13},
         {atom,{463,13},pre_opt_terminator},
         [{var,{463,32},'Other'},
          {var,{463,39},'Sub'},
          {var,{463,44},'Blocks'}]}]}]}]}]}.
{function,
 {466,1},
 pre_opt_sw,5,
 [{clause,
   {466,1},
   [{var,{466,1},'_'},
    {var,{466,1},'_'},
    {var,{466,1},'_'},
    {var,{466,1},'_'},
    {var,{466,1},'_'}],
   [[{call,
      {466,1},
      {remote,{466,1},{atom,{466,1},fake},{atom,{466,1},is_beam_bif_info}},
      []}]],
   [{debug_line,466,139},{atom,{466,1},ignore}]},
  {clause,
   {466,1},
   [{match,
     {466,12},
     {tuple,
      {466,12},
      [{atom,{466,12},b_switch},
       {var,{466,12},'_'},
       {var,{466,26},'Arg'},
       {var,{466,35},'Fail'},
       {var,{466,12},'_'}]},
     {var,{466,41},'Sw'}},
    {var,{466,45},'False'},
    {var,{466,52},'True'},
    {var,{466,58},'Sub'},
    {var,{466,63},'Blocks'}],
   [],
   [{debug_line,467,140},
    {'case',
     {467,5},
     {var,{467,10},'Sub'},
     [{clause,
       {468,9},
       [{map,
         {468,9},
         [{map_field_exact,
           {468,14},
           {var,{468,11},'Arg'},
           {tuple,
            {468,16},
            [{atom,{468,17},true_or_any},{var,{468,29},'PhiL'}]}}]}],
       [],
       [{debug_line,469,141},
        {match,
         {469,13},
         {map,
          {469,13},
          [{map_field_exact,
            {469,20},
            {var,{469,15},'Fail'},
            {var,{469,23},'FailBlk'}},
           {map_field_exact,
            {469,37},
            {var,{469,31},'False'},
            {var,{469,40},'FalseBlk'}}]},
         {var,{469,52},'Blocks'}},
        {debug_line,470,142},
        {match,
         {470,13},
         {var,{470,13},'PhiBlk'},
         {'case',
          {470,22},
          {var,{470,27},'Blocks'},
          [{clause,
            {471,26},
            [{map,
              {471,26},
              [{map_field_exact,
                {471,33},
                {var,{471,28},'PhiL'},
                {var,{471,36},'PhiBlk0'}}]}],
            [],
            [{debug_line,471,143},{var,{471,48},'PhiBlk0'}]},
           {clause,
            {472,26},
            [{map,{472,26},[]}],
            [],
            [{debug_line,472,144},{atom,{472,33},none}]}]}},
        {debug_line,474,145},
        {'case',
         {474,13},
         {tuple,
          {474,18},
          [{var,{474,19},'FailBlk'},
           {var,{474,27},'FalseBlk'},
           {var,{474,36},'PhiBlk'}]},
         [{clause,
           {475,17},
           [{tuple,
             {475,17},
             [{tuple,
               {475,18},
               [{atom,{475,18},b_blk},
                {var,{475,18},'_'},
                {nil,{475,28}},
                {tuple,
                 {475,36},
                 [{atom,{475,36},b_br},
                  {var,{475,36},'_'},
                  {var,{475,36},'_'},
                  {var,{475,47},'PhiL'},
                  {var,{475,57},'PhiL'}]}]},
              {tuple,
               {476,18},
               [{atom,{476,18},b_blk},
                {var,{476,18},'_'},
                {nil,{476,28}},
                {tuple,
                 {476,36},
                 [{atom,{476,36},b_br},
                  {var,{476,36},'_'},
                  {var,{476,36},'_'},
                  {var,{476,47},'PhiL'},
                  {var,{476,57},'PhiL'}]}]},
              {tuple,
               {477,18},
               [{atom,{477,18},b_blk},
                {var,{477,18},'_'},
                {cons,
                 {477,28},
                 {tuple,
                  {477,29},
                  [{atom,{477,29},b_set},
                   {var,{477,29},'_'},
                   {var,{477,29},'_'},
                   {atom,{477,39},phi},
                   {var,{477,48},'PhiArgs'}]},
                 {var,{477,57},'_'}},
                {var,{477,18},'_'}]}]}],
           [],
           [{debug_line,478,146},
            {'case',
             {478,21},
             {call,
              {478,26},
              {remote,{478,26},{atom,{478,26},lists},{atom,{478,26},keyfind}},
              [{var,{478,34},'False'},
               {integer,{478,41},2},
               {var,{478,44},'PhiArgs'}]},
             [{clause,
               {479,25},
               [{tuple,
                 {479,25},
                 [{tuple,
                   {479,26},
                   [{atom,{479,26},b_literal},{var,{479,41},'Bool'}]},
                  {var,{479,47},'False'}]}],
               [[{op,
                  {479,64},
                  '=/=',
                  {var,{479,59},'Bool'},
                  {atom,{479,68},true}}]],
               [{debug_line,484,147},
                {match,
                 {484,29},
                 {var,{484,29},'DummyDst'},
                 {tuple,
                  {484,40},
                  [{atom,{484,40},b_var},{integer,{484,52},0}]}},
                {debug_line,485,148},
                {match,
                 {485,29},
                 {var,{485,29},'Br0'},
                 {tuple,
                  {485,35},
                  [{atom,{485,35},b_br},
                   {map,{485,35},[]},
                   {var,{485,46},'DummyDst'},
                   {var,{485,60},'True'},
                   {var,{485,70},'False'}]}},
                {debug_line,486,149},
                {match,
                 {486,29},
                 {var,{486,29},'Br'},
                 {call,
                  {486,34},
                  {remote,
                   {486,42},
                   {atom,{486,34},beam_ssa},
                   {atom,{486,43},normalize}},
                  [{var,{486,53},'Br0'}]}},
                {debug_line,487,150},
                {tuple,
                 {487,29},
                 [{tuple,
                   {487,30},
                   [{atom,{487,30},b_set},
                    {map,{487,30},[]},
                    {var,{487,56},'DummyDst'},
                    {tuple,
                     {487,40},
                     [{atom,{487,41},bif},{atom,{487,45},'=:='}]},
                    {cons,
                     {488,42},
                     {var,{488,43},'Arg'},
                     {cons,
                      {488,47},
                      {tuple,
                       {488,47},
                       [{atom,{488,47},b_literal},{atom,{488,62},true}]},
                      {nil,{488,67}}}}]},
                  {var,{489,30},'Br'}]}]},
              {clause,
               {490,25},
               [{tuple,{490,25},[{var,{490,26},'_'},{var,{490,28},'_'}]}],
               [],
               [{debug_line,491,151},{var,{491,29},'Sw'}]}]}]},
          {clause,
           {493,17},
           [{tuple,
             {493,17},
             [{var,{493,18},'_'},{var,{493,20},'_'},{var,{493,22},'_'}]}],
           [],
           [{debug_line,494,152},{var,{494,21},'Sw'}]}]}]},
      {clause,
       {496,9},
       [{map,{496,9},[]}],
       [],
       [{debug_line,497,153},{var,{497,13},'Sw'}]}]}]}]}.
{function,
 {500,1},
 pre_eval_op,2,
 [{clause,
   {500,1},
   [{var,{500,1},'_'},{var,{500,1},'_'}],
   [[{call,
      {500,1},
      {remote,{500,1},{atom,{500,1},fake},{atom,{500,1},is_beam_bif_info}},
      []}]],
   [{debug_line,500,154},{atom,{500,1},ignore}]},
  {clause,
   {500,1},
   [{tuple,
     {500,13},
     [{atom,{500,13},b_set},
      {var,{500,13},'_'},
      {var,{500,13},'_'},
      {tuple,{500,23},[{atom,{500,24},bif},{var,{500,28},'Op'}]},
      {var,{500,37},'Args'}]},
    {var,{500,44},'Sub'}],
   [],
   [{debug_line,501,155},
    {'case',
     {501,5},
     {call,
      {501,10},
      {atom,{501,10},pre_are_args_bool},
      [{var,{501,28},'Args'},{var,{501,34},'Sub'}]},
     [{clause,
       {502,9},
       [{atom,{502,9},true}],
       [],
       [{debug_line,503,156},
        {'case',
         {503,13},
         {tuple,{503,18},[{var,{503,19},'Op'},{var,{503,22},'Args'}]},
         [{clause,
           {504,17},
           [{tuple,
             {504,17},
             [{atom,{504,18},'and'},
              {cons,
               {504,24},
               {tuple,
                {504,25},
                [{atom,{504,25},b_literal},{atom,{504,40},true}]},
               {cons,
                {504,46},
                {match,
                 {504,46},
                 {tuple,{504,46},[{atom,{504,46},b_var},{var,{504,46},'_'}]},
                 {var,{504,55},'Res'}},
                {nil,{504,58}}}}]}],
           [],
           [{debug_line,504,157},{var,{504,64},'Res'}]},
          {clause,
           {505,17},
           [{tuple,
             {505,17},
             [{atom,{505,18},'and'},
              {cons,
               {505,24},
               {match,
                {505,25},
                {tuple,
                 {505,25},
                 [{atom,{505,25},b_literal},{atom,{505,40},false}]},
                {var,{505,47},'Res'}},
               {cons,
                {505,51},
                {tuple,{505,51},[{atom,{505,51},b_var},{var,{505,51},'_'}]},
                {nil,{505,59}}}}]}],
           [],
           [{debug_line,505,158},{var,{505,65},'Res'}]},
          {clause,
           {506,17},
           [{tuple,
             {506,17},
             [{atom,{506,18},'and'},
              {cons,
               {506,24},
               {match,
                {506,25},
                {tuple,{506,25},[{atom,{506,25},b_var},{var,{506,25},'_'}]},
                {var,{506,34},'Res'}},
               {cons,
                {506,38},
                {tuple,
                 {506,38},
                 [{atom,{506,38},b_literal},{atom,{506,53},true}]},
                {nil,{506,58}}}}]}],
           [],
           [{debug_line,506,159},{var,{506,64},'Res'}]},
          {clause,
           {507,17},
           [{tuple,
             {507,17},
             [{atom,{507,18},'and'},
              {cons,
               {507,24},
               {tuple,{507,25},[{atom,{507,25},b_var},{var,{507,25},'_'}]},
               {cons,
                {507,34},
                {match,
                 {507,34},
                 {tuple,
                  {507,34},
                  [{atom,{507,34},b_literal},{atom,{507,49},false}]},
                 {var,{507,56},'Res'}},
                {nil,{507,59}}}}]}],
           [],
           [{debug_line,507,160},{var,{507,65},'Res'}]},
          {clause,
           {508,17},
           [{tuple,
             {508,17},
             [{atom,{508,18},'or'},
              {cons,
               {508,23},
               {match,
                {508,24},
                {tuple,
                 {508,24},
                 [{atom,{508,24},b_literal},{atom,{508,39},true}]},
                {var,{508,45},'Res'}},
               {cons,
                {508,49},
                {tuple,{508,49},[{atom,{508,49},b_var},{var,{508,49},'_'}]},
                {nil,{508,57}}}}]}],
           [],
           [{debug_line,508,161},{var,{508,63},'Res'}]},
          {clause,
           {509,17},
           [{tuple,
             {509,17},
             [{atom,{509,18},'or'},
              {cons,
               {509,23},
               {tuple,
                {509,24},
                [{atom,{509,24},b_literal},{atom,{509,39},false}]},
               {cons,
                {509,46},
                {match,
                 {509,46},
                 {tuple,{509,46},[{atom,{509,46},b_var},{var,{509,46},'_'}]},
                 {var,{509,55},'Res'}},
                {nil,{509,58}}}}]}],
           [],
           [{debug_line,509,162},{var,{509,64},'Res'}]},
          {clause,
           {510,17},
           [{tuple,
             {510,17},
             [{atom,{510,18},'or'},
              {cons,
               {510,23},
               {tuple,{510,24},[{atom,{510,24},b_var},{var,{510,24},'_'}]},
               {cons,
                {510,33},
                {match,
                 {510,33},
                 {tuple,
                  {510,33},
                  [{atom,{510,33},b_literal},{atom,{510,48},true}]},
                 {var,{510,54},'Res'}},
                {nil,{510,57}}}}]}],
           [],
           [{debug_line,510,163},{var,{510,63},'Res'}]},
          {clause,
           {511,17},
           [{tuple,
             {511,17},
             [{atom,{511,18},'or'},
              {cons,
               {511,23},
               {match,
                {511,24},
                {tuple,{511,24},[{atom,{511,24},b_var},{var,{511,24},'_'}]},
                {var,{511,33},'Res'}},
               {cons,
                {511,37},
                {tuple,
                 {511,37},
                 [{atom,{511,37},b_literal},{atom,{511,52},false}]},
                {nil,{511,58}}}}]}],
           [],
           [{debug_line,511,164},{var,{511,64},'Res'}]},
          {clause,
           {512,17},
           [{var,{512,17},'_'}],
           [],
           [{debug_line,512,165},{atom,{512,22},none}]}]}]},
      {clause,
       {514,9},
       [{atom,{514,9},false}],
       [],
       [{debug_line,515,166},{atom,{515,13},none}]}]}]}]}.
{function,
    {518,1},
    all_same,1,
    [{clause,
         {518,1},
         [{var,{518,1},'_'}],
         [[{call,
               {518,1},
               {remote,
                   {518,1},
                   {atom,{518,1},fake},
                   {atom,{518,1},is_beam_bif_info}},
               []}]],
         [{debug_line,518,167},{atom,{518,1},ignore}]},
     {clause,
         {518,1},
         [{cons,
              {518,10},
              {tuple,{518,11},[{var,{518,12},'H'},{var,{518,14},'_'}]},
              {var,{518,17},'T'}}],
         [],
         [{debug_line,519,168},
          {call,
              {519,5},
              {remote,{519,5},{atom,{519,5},lists},{atom,{519,5},all}},
              [{block,0,
                   [{'fun',
                        {519,9},
                        {clauses,
                            [{clause,
                                 {519,12},
                                 [{tuple,
                                      {519,13},
                                      [{var,{519,14},'E'},
                                       {var,{519,16},'_'}]}],
                                 [],
                                 [{op,{519,25},
                                      '=:=',
                                      {var,{519,23},'E'},
                                      {var,{519,29},'H'}}]}]}}]},
               {var,{519,36},'T'}]}]}]}.
{function,
    {521,1},
    pre_is_phi_bool,2,
    [{clause,
         {521,1},
         [{var,{521,1},'_'},{var,{521,1},'_'}],
         [[{call,
               {521,1},
               {remote,
                   {521,1},
                   {atom,{521,1},fake},
                   {atom,{521,1},is_beam_bif_info}},
               []}]],
         [{debug_line,521,169},{atom,{521,1},ignore}]},
     {clause,
         {521,1},
         [{cons,
              {521,17},
              {tuple,
                  {521,18},
                  [{tuple,
                       {521,19},
                       [{atom,{521,19},b_literal},{var,{521,34},'Lit'}]},
                   {var,{521,39},'_'}]},
              {var,{521,42},'As'}},
          {var,{521,47},'Sub'}],
         [],
         [{debug_line,522,170},
          {'case',
              {522,5},
              {call,
                  {522,5},
                  {remote,
                      {522,5},
                      {atom,{522,5},erlang},
                      {atom,{522,5},is_boolean}},
                  [{var,{522,16},'Lit'}]},
              [{clause,
                   {522,5},
                   [{atom,{522,5},true}],
                   [],
                   [{call,
                        {522,29},
                        {atom,{522,29},pre_is_phi_bool},
                        [{var,{522,45},'As'},{var,{522,49},'Sub'}]}]},
               {clause,
                   {522,5},
                   [{atom,{522,5},false}],
                   [],
                   [{atom,{522,5},false}]},
               {clause,
                   [{generated,true},{location,{522,5}}],
                   [{var,{522,5},cov1}],
                   [],
                   [{call,
                        {522,5},
                        {remote,
                            {522,5},
                            {atom,{522,5},erlang},
                            {atom,{522,5},error}},
                        [{block,0,
                             [{tuple,
                                  {522,5},
                                  [{atom,{522,5},badarg},
                                   {var,{522,5},cov1}]}]}]}]}]}]},
     {clause,
         {523,1},
         [{cons,
              {523,17},
              {tuple,
                  {523,18},
                  [{match,
                       {523,19},
                       {tuple,
                           {523,19},
                           [{atom,{523,19},b_var},{var,{523,19},'_'}]},
                       {var,{523,28},'A'}},
                   {var,{523,30},'_'}]},
              {var,{523,33},'As'}},
          {var,{523,38},'Sub'}],
         [],
         [{debug_line,524,171},
          {'case',
              {524,5},
              {var,{524,10},'Sub'},
              [{clause,
                   {525,9},
                   [{map,
                        {525,9},
                        [{map_field_exact,
                             {525,12},
                             {var,{525,11},'A'},
                             {tuple,
                                 {525,14},
                                 [{atom,{525,14},b_set},
                                  {var,{525,14},'_'},
                                  {var,{525,14},'_'},
                                  {var,{525,14},'_'},
                                  {var,{525,14},'_'}]}}]}],
                   [],
                   [{debug_line,526,172},
                    {call,
                        {526,13},
                        {atom,{526,13},pre_is_phi_bool},
                        [{var,{526,29},'As'},{var,{526,33},'Sub'}]}]},
               {clause,
                   {527,9},
                   [{map,{527,9},[]}],
                   [],
                   [{debug_line,528,173},{atom,{528,13},false}]}]}]},
     {clause,
         {530,1},
         [{nil,{530,17}},{var,{530,21},'_Sub'}],
         [],
         [{debug_line,530,174},{atom,{530,30},true}]}]}.
{function,
 {532,1},
 pre_is_safe_bool,2,
 [{clause,
   {532,1},
   [{var,{532,1},'_'},{var,{532,1},'_'}],
   [[{call,
      {532,1},
      {remote,{532,1},{atom,{532,1},fake},{atom,{532,1},is_beam_bif_info}},
      []}]],
   [{debug_line,532,175},{atom,{532,1},ignore}]},
  {clause,
   {532,1},
   [{tuple,{532,18},[{atom,{532,18},b_literal},{var,{532,18},'_'}]},
    {var,{532,32},'_Sub'}],
   [],
   [{debug_line,533,176},{atom,{533,5},true}]},
  {clause,
   {534,1},
   [{var,{534,18},'Var'},{var,{534,23},'Sub'}],
   [],
   [{debug_line,535,177},
    {'case',
     {535,5},
     {var,{535,10},'Sub'},
     [{clause,
       {536,9},
       [{map,
         {536,9},
         [{map_field_exact,
           {536,14},
           {var,{536,11},'Var'},
           {tuple,
            {536,16},
            [{atom,{536,16},b_set},
             {var,{536,16},'_'},
             {var,{536,16},'_'},
             {tuple,
              {536,26},
              [{atom,{536,27},bif},{atom,{536,31},is_function}]},
             {cons,
              {537,28},
              {var,{537,29},'_'},
              {cons,{537,31},{var,{537,31},'Arity'},{nil,{537,36}}}}]}}]}],
       [],
       [{debug_line,538,178},
        {'case',
         {538,13},
         {var,{538,18},'Arity'},
         [{clause,
           {539,17},
           [{tuple,{539,17},[{atom,{539,17},b_literal},{var,{539,32},'Lit'}]}],
           [],
           [{debug_line,540,179},
            {'case',
             {540,21},
             {call,
              {540,21},
              {remote,
               {540,21},
               {atom,{540,21},erlang},
               {atom,{540,21},is_integer}},
              [{var,{540,32},'Lit'}]},
             [{clause,
               {540,21},
               [{atom,{540,21},true}],
               [],
               [{op,{540,49},'>=',{var,{540,45},'Lit'},{integer,{540,52},0}}]},
              {clause,
               {540,21},
               [{atom,{540,21},false}],
               [],
               [{atom,{540,21},false}]},
              {clause,
               [{generated,true},{location,{540,21}}],
               [{var,{540,21},cov1}],
               [],
               [{call,
                 {540,21},
                 {remote,
                  {540,21},
                  {atom,{540,21},erlang},
                  {atom,{540,21},error}},
                 [{block,0,
                   [{tuple,
                     {540,21},
                     [{atom,{540,21},badarg},{var,{540,21},cov1}]}]}]}]}]}]},
          {clause,
           {541,17},
           [{tuple,{541,17},[{atom,{541,17},b_var},{var,{541,17},'_'}]}],
           [],
           [{debug_line,542,180},{atom,{542,21},false}]}]}]},
      {clause,
       {544,9},
       [{map,
         {544,9},
         [{map_field_exact,
           {544,14},
           {var,{544,11},'Var'},
           {tuple,
            {544,16},
            [{atom,{544,16},b_set},
             {var,{544,16},'_'},
             {var,{544,16},'_'},
             {tuple,{544,26},[{atom,{544,27},bif},{var,{544,31},'Op'}]},
             {var,{544,40},'Args'}]}}]}],
       [],
       [{debug_line,545,181},
        {match,
         {545,13},
         {var,{545,13},'Arity'},
         {call,
          {545,21},
          {remote,{545,21},{atom,{545,21},erlang},{atom,{545,21},length}},
          [{var,{545,28},'Args'}]}},
        {debug_line,546,182},
        {'case',
         {546,13},
         {call,
          {546,13},
          {remote,
           {546,25},
           {atom,{546,13},erl_internal},
           {atom,{546,26},bool_op}},
          [{var,{546,34},'Op'},{var,{546,38},'Arity'}]},
         [{clause,
           {546,13},
           [{atom,{546,13},true}],
           [],
           [{debug_line,547,183},
            {call,
             {547,17},
             {atom,{547,17},pre_are_args_bool},
             [{var,{547,35},'Args'},{var,{547,41},'Sub'}]}]},
          {clause,{546,13},[{atom,{546,13},false}],[],[{atom,{546,13},false}]},
          {clause,
           [{generated,true},{location,{546,13}}],
           [{var,{546,13},cov2}],
           [],
           [{call,
             {546,13},
             {remote,{546,13},{atom,{546,13},erlang},{atom,{546,13},error}},
             [{block,0,
               [{tuple,
                 {546,13},
                 [{atom,{546,13},badarg},{var,{546,13},cov2}]}]}]}]}]}]},
      {clause,
       {548,9},
       [{map,{548,9},[]}],
       [],
       [{debug_line,549,184},{atom,{549,13},false}]}]}]}]}.
{function,
    {552,1},
    pre_are_args_bool,2,
    [{clause,
         {552,1},
         [{var,{552,1},'_'},{var,{552,1},'_'}],
         [[{call,
               {552,1},
               {remote,
                   {552,1},
                   {atom,{552,1},fake},
                   {atom,{552,1},is_beam_bif_info}},
               []}]],
         [{debug_line,552,185},{atom,{552,1},ignore}]},
     {clause,
         {552,1},
         [{cons,{552,19},{var,{552,20},'A'},{var,{552,22},'As'}},
          {var,{552,27},'Sub'}],
         [],
         [{debug_line,553,186},
          {'case',
              {553,5},
              {call,
                  {553,5},
                  {atom,{553,5},pre_is_arg_bool},
                  [{var,{553,21},'A'},{var,{553,24},'Sub'}]},
              [{clause,
                   {553,5},
                   [{atom,{553,5},true}],
                   [],
                   [{call,
                        {553,37},
                        {atom,{553,37},pre_are_args_bool},
                        [{var,{553,55},'As'},{var,{553,59},'Sub'}]}]},
               {clause,
                   {553,5},
                   [{atom,{553,5},false}],
                   [],
                   [{atom,{553,5},false}]},
               {clause,
                   [{generated,true},{location,{553,5}}],
                   [{var,{553,5},cov1}],
                   [],
                   [{call,
                        {553,5},
                        {remote,
                            {553,5},
                            {atom,{553,5},erlang},
                            {atom,{553,5},error}},
                        [{block,0,
                             [{tuple,
                                  {553,5},
                                  [{atom,{553,5},badarg},
                                   {var,{553,5},cov1}]}]}]}]}]}]},
     {clause,
         {554,1},
         [{nil,{554,19}},{var,{554,23},'_Sub'}],
         [],
         [{debug_line,554,187},{atom,{554,32},true}]}]}.
{function,
    {556,1},
    pre_is_arg_bool,2,
    [{clause,
         {556,1},
         [{var,{556,1},'_'},{var,{556,1},'_'}],
         [[{call,
               {556,1},
               {remote,
                   {556,1},
                   {atom,{556,1},fake},
                   {atom,{556,1},is_beam_bif_info}},
               []}]],
         [{debug_line,556,188},{atom,{556,1},ignore}]},
     {clause,
         {556,1},
         [{tuple,{556,17},[{atom,{556,17},b_literal},{var,{556,32},'Lit'}]},
          {var,{556,38},'_Sub'}],
         [],
         [{debug_line,557,189},
          {call,
              {557,5},
              {remote,{557,5},{atom,{557,5},erlang},{atom,{557,5},is_boolean}},
              [{var,{557,16},'Lit'}]}]},
     {clause,
         {558,1},
         [{match,
              {558,17},
              {tuple,{558,17},[{atom,{558,17},b_var},{var,{558,17},'_'}]},
              {var,{558,26},'A'}},
          {var,{558,29},'Sub'}],
         [],
         [{debug_line,559,190},
          {'case',
              {559,5},
              {var,{559,10},'Sub'},
              [{clause,
                   {560,9},
                   [{map,
                        {560,9},
                        [{map_field_exact,
                             {560,12},
                             {var,{560,11},'A'},
                             {tuple,
                                 {560,14},
                                 [{atom,{560,14},b_set},
                                  {var,{560,14},'_'},
                                  {var,{560,14},'_'},
                                  {var,{560,14},'_'},
                                  {var,{560,14},'_'}]}}]}],
                   [],
                   [{debug_line,561,191},{atom,{561,13},true}]},
               {clause,
                   {562,9},
                   [{map,{562,9},[]}],
                   [],
                   [{debug_line,563,192},{atom,{563,13},false}]}]}]}]}.
{function,
    {572,1},
    interesting_defs,1,
    [{clause,
         {572,1},
         [{var,{572,1},'_'}],
         [[{call,
               {572,1},
               {remote,
                   {572,1},
                   {atom,{572,1},fake},
                   {atom,{572,1},is_beam_bif_info}},
               []}]],
         [{debug_line,572,193},{atom,{572,1},ignore}]},
     {clause,
         {572,1},
         [{var,{572,18},'Blocks'}],
         [],
         [{debug_line,573,194},
          {call,
              {573,5},
              {atom,{573,5},interesting_defs},
              [{block,0,
                   [{call,
                        {573,22},
                        {remote,
                            {573,26},
                            {atom,{573,22},maps},
                            {atom,{573,27},to_list}},
                        [{var,{573,35},'Blocks'}]}]},
               {nil,{573,44}}]}]}]}.
{function,
    {575,1},
    interesting_defs,2,
    [{clause,
         {575,1},
         [{var,{575,1},'_'},{var,{575,1},'_'}],
         [[{call,
               {575,1},
               {remote,
                   {575,1},
                   {atom,{575,1},fake},
                   {atom,{575,1},is_beam_bif_info}},
               []}]],
         [{debug_line,575,195},{atom,{575,1},ignore}]},
     {clause,
         {575,1},
         [{cons,
              {575,18},
              {tuple,
                  {575,19},
                  [{var,{575,20},'L'},
                   {tuple,
                       {575,22},
                       [{atom,{575,22},b_blk},
                        {var,{575,22},'_'},
                        {var,{575,32},'Is'},
                        {var,{575,22},'_'}]}]},
              {var,{575,37},'Bs'}},
          {var,{575,42},'Acc'}],
         [],
         [{debug_line,576,196},
          {call,
              {576,5},
              {atom,{576,5},interesting_defs},
              [{var,{576,22},'Bs'},
               {block,0,
                   [{call,
                        {576,26},
                        {atom,{576,26},interesting_defs_is},
                        [{var,{576,46},'Is'},
                         {var,{576,50},'L'},
                         {var,{576,53},'Acc'}]}]}]}]},
     {clause,
         {577,1},
         [{nil,{577,18}},{var,{577,22},'Acc'}],
         [],
         [{debug_line,578,197},
          {call,
              {578,5},
              {remote,{578,9},{atom,{578,5},maps},{atom,{578,10},from_list}},
              [{var,{578,20},'Acc'}]}]}]}.
{function,
 {580,1},
 interesting_defs_is,3,
 [{clause,
   {580,1},
   [{var,{580,1},'_'},{var,{580,1},'_'},{var,{580,1},'_'}],
   [[{call,
      {580,1},
      {remote,{580,1},{atom,{580,1},fake},{atom,{580,1},is_beam_bif_info}},
      []}]],
   [{debug_line,580,198},{atom,{580,1},ignore}]},
  {clause,
   {580,1},
   [{cons,
     {580,21},
     {match,
      {580,22},
      {tuple,
       {580,22},
       [{atom,{580,22},b_set},
        {var,{580,22},'_'},
        {var,{580,44},'V'},
        {tuple,{580,32},[{atom,{580,33},bif},{var,{580,37},'_'}]},
        {var,{580,22},'_'}]},
      {var,{580,47},'I'}},
     {var,{580,49},'Is'}},
    {var,{580,54},'L'},
    {var,{580,57},'Acc'}],
   [],
   [{debug_line,581,199},
    {'case',
     {581,5},
     {call,{581,10},{atom,{581,10},is_bool_expr},[{var,{581,23},'I'}]},
     [{clause,
       {582,9},
       [{atom,{582,9},true}],
       [],
       [{debug_line,583,200},
        {call,
         {583,13},
         {atom,{583,13},interesting_defs_is},
         [{var,{583,33},'Is'},
          {var,{583,37},'L'},
          {block,0,
           [{cons,
             {583,40},
             {tuple,
              {583,41},
              [{var,{583,42},'V'},
               {tuple,{583,44},[{var,{583,45},'L'},{var,{583,47},'I'}]}]},
             {var,{583,51},'Acc'}}]}]}]},
      {clause,
       {584,9},
       [{atom,{584,9},false}],
       [],
       [{debug_line,585,201},
        {call,
         {585,13},
         {atom,{585,13},interesting_defs_is},
         [{var,{585,33},'Is'},{var,{585,37},'L'},{var,{585,40},'Acc'}]}]}]}]},
  {clause,
   {587,1},
   [{cons,
     {587,21},
     {match,
      {587,22},
      {tuple,
       {587,22},
       [{atom,{587,22},b_set},
        {var,{587,22},'_'},
        {var,{587,40},'V'},
        {atom,{587,32},phi},
        {var,{587,22},'_'}]},
      {var,{587,43},'Set'}},
     {var,{587,47},'Is'}},
    {var,{587,52},'L'},
    {var,{587,55},'Acc'}],
   [],
   [{debug_line,588,202},
    {call,
     {588,5},
     {atom,{588,5},interesting_defs_is},
     [{var,{588,25},'Is'},
      {var,{588,29},'L'},
      {block,0,
       [{cons,
         {588,32},
         {tuple,
          {588,33},
          [{var,{588,34},'V'},
           {tuple,{588,36},[{var,{588,37},'L'},{var,{588,39},'Set'}]}]},
         {var,{588,45},'Acc'}}]}]}]},
  {clause,
   {589,1},
   [{cons,
     {589,21},
     {tuple,
      {589,22},
      [{atom,{589,22},b_set},
       {var,{589,22},'_'},
       {var,{589,22},'_'},
       {var,{589,22},'_'},
       {var,{589,22},'_'}]},
     {var,{589,31},'Is'}},
    {var,{589,36},'L'},
    {var,{589,39},'Acc'}],
   [],
   [{debug_line,590,203},
    {call,
     {590,5},
     {atom,{590,5},interesting_defs_is},
     [{var,{590,25},'Is'},{var,{590,29},'L'},{var,{590,32},'Acc'}]}]},
  {clause,
   {591,1},
   [{nil,{591,21}},{var,{591,25},'_L'},{var,{591,29},'Acc'}],
   [],
   [{debug_line,591,204},{var,{591,37},'Acc'}]}]}.
{function,
 {606,1},
 bool_opt,3,
 [{clause,
   {606,1},
   [{var,{606,1},'_'},{var,{606,1},'_'},{var,{606,1},'_'}],
   [[{call,
      {606,1},
      {remote,{606,1},{atom,{606,1},fake},{atom,{606,1},is_beam_bif_info}},
      []}]],
   [{debug_line,606,205},{atom,{606,1},ignore}]},
  {clause,
   {606,1},
   [{cons,{606,10},{var,{606,11},'L'},{var,{606,13},'Ls'}},
    {var,{606,18},'Blocks0'},
    {var,{606,27},'St0'}],
   [],
   [{debug_line,607,206},
    {match,
     {607,5},
     {tuple,{607,5},[{var,{607,6},'Blocks'},{var,{607,13},'St1'}]},
     {call,
      {607,20},
      {atom,{607,20},bool_opt},
      [{var,{607,29},'Ls'},{var,{607,33},'Blocks0'},{var,{607,42},'St0'}]}},
    {debug_line,608,207},
    {'case',
     {608,5},
     {var,{608,10},'Blocks'},
     [{clause,
       {609,9},
       [{map,
         {609,9},
         [{map_field_exact,
           {609,12},
           {var,{609,11},'L'},
           {tuple,
            {609,14},
            [{atom,{609,14},b_blk},
             {var,{609,14},'_'},
             {match,
              {609,24},
              {cons,{609,24},{var,{609,25},'_'},{var,{609,27},'_'}},
              {var,{609,30},'Is'}},
             {match,
              {609,38},
              {tuple,
               {609,38},
               [{atom,{609,38},b_br},
                {var,{609,38},'_'},
                {match,
                 {609,49},
                 {tuple,{609,49},[{atom,{609,49},b_var},{var,{609,49},'_'}]},
                 {var,{609,58},'Bool'}},
                {var,{609,38},'_'},
                {var,{609,38},'_'}]},
              {var,{609,64},'Br'}}]}}]}],
       [],
       [{debug_line,610,208},
        {'case',
         {610,13},
         {call,
          {610,18},
          {remote,{610,18},{atom,{610,18},lists},{atom,{610,18},last}},
          [{var,{610,23},'Is'}]},
         [{clause,
           {611,17},
           [{tuple,
             {611,17},
             [{atom,{611,17},b_set},
              {var,{611,17},'_'},
              {var,{611,43},'Bool'},
              {tuple,{611,27},[{atom,{611,28},bif},{atom,{611,32},'=:='}]},
              {cons,
               {612,29},
               {tuple,{612,30},[{atom,{612,30},b_var},{var,{612,30},'_'}]},
               {cons,
                {612,39},
                {tuple,
                 {612,39},
                 [{atom,{612,39},b_literal},{atom,{612,54},true}]},
                {nil,{612,59}}}}]}],
           [],
           [{debug_line,613,209},
            {'try',
             {613,21},
             [{debug_line,614,210},
              {call,
               {614,25},
               {atom,{614,25},bool_opt_rewrite},
               [{var,{614,42},'Bool'},
                {var,{614,48},'L'},
                {var,{614,51},'Br'},
                {var,{614,55},'Blocks'},
                {var,{614,63},'St1'}]}],
             [],
             [{clause,
               {616,25},
               [{tuple,
                 {616,25},
                 [{atom,{616,25},throw},
                  {atom,{616,31},not_possible},
                  {var,{616,31},'_'}]}],
               [],
               [{debug_line,617,211},
                {tuple,
                 {617,29},
                 [{var,{617,30},'Blocks'},{var,{617,37},'St1'}]}]}],
             []}]},
          {clause,
           {619,17},
           [{tuple,
             {619,17},
             [{atom,{619,17},b_set},
              {var,{619,17},'_'},
              {var,{619,17},'_'},
              {var,{619,17},'_'},
              {var,{619,17},'_'}]}],
           [],
           [{debug_line,620,212},
            {tuple,
             {620,21},
             [{var,{620,22},'Blocks'},{var,{620,29},'St1'}]}]}]}]},
      {clause,
       {622,9},
       [{map,{622,9},[]}],
       [],
       [{debug_line,626,213},
        {tuple,{626,13},[{var,{626,14},'Blocks'},{var,{626,21},'St1'}]}]}]}]},
  {clause,
   {628,1},
   [{nil,{628,10}},{var,{628,14},'Blocks'},{var,{628,22},'St'}],
   [],
   [{debug_line,629,214},
    {tuple,{629,5},[{var,{629,6},'Blocks'},{var,{629,13},'St'}]}]}]}.
{function,
 {631,1},
 bool_opt_rewrite,5,
 [{clause,
   {631,1},
   [{var,{631,1},'_'},
    {var,{631,1},'_'},
    {var,{631,1},'_'},
    {var,{631,1},'_'},
    {var,{631,1},'_'}],
   [[{call,
      {631,1},
      {remote,{631,1},{atom,{631,1},fake},{atom,{631,1},is_beam_bif_info}},
      []}]],
   [{debug_line,631,215},{atom,{631,1},ignore}]},
  {clause,
   {631,1},
   [{var,{631,18},'Bool'},
    {var,{631,24},'From'},
    {var,{631,30},'Br'},
    {var,{631,34},'Blocks0'},
    {var,{631,43},'St0'}],
   [],
   [{debug_line,632,216},
    {match,
     {632,5},
     {var,{632,5},'TreeVars'},
     {call,
      {632,16},
      {atom,{632,16},collect_bool_vars},
      [{var,{632,34},'Bool'},{var,{632,40},'St0'}]}},
    {debug_line,633,217},
    {'case',
     {633,5},
     {var,{633,10},'TreeVars'},
     [{clause,
       {634,9},
       [{cons,{634,9},{var,{634,10},'Bool'},{nil,{634,14}}}],
       [],
       [{debug_line,639,218},{call,{639,13},{atom,{639,13},not_possible},[]}]},
      {clause,
       {640,9},
       [{cons,{640,9},{var,{640,10},'_'},{var,{640,12},'_'}}],
       [],
       [{debug_line,641,219},{atom,{641,13},ok}]}]},
    {debug_line,646,220},
    {match,
     {646,5},
     {var,{646,5},'Dom'},
     {call,
      {646,11},
      {atom,{646,11},bool_opt_dom},
      [{var,{646,24},'TreeVars'},{var,{646,34},'St0'}]}},
    {debug_line,653,221},
    {match,
     {653,5},
     {tuple,{653,5},[{var,{653,6},'DomPreIs'},{var,{653,15},'Blocks1'}]},
     {call,
      {653,26},
      {atom,{653,26},split_dom_block},
      [{var,{653,42},'Dom'},{var,{653,47},'Blocks0'}]}},
    {debug_line,657,222},
    {match,
     {657,5},
     {var,{657,5},'Bs'},
     {call,
      {657,10},
      {atom,{657,10},collect_digraph_blocks},
      [{var,{657,33},'Dom'},
       {var,{657,38},'From'},
       {var,{657,44},'Br'},
       {var,{657,48},'Blocks1'}]}},
    {debug_line,660,223},
    {match,
     {660,5},
     {tuple,
      {660,5},
      [{var,{660,6},'Root'},{var,{660,11},'G0'},{var,{660,14},'St1'}]},
     {call,
      {660,21},
      {atom,{660,21},build_digraph},
      [{var,{660,35},'Bs'},{var,{660,39},'Br'},{var,{660,43},'St0'}]}},
    {debug_line,663,224},
    {match,
     {663,5},
     {var,{663,5},'LDefs'},
     {call,{663,13},{atom,{663,13},digraph_bool_def},[{var,{663,30},'G0'}]}},
    {debug_line,664,225},
    {match,
     {664,5},
     {var,{664,5},'St'},
     {block,
      {664,10},
      [{match,{664,10},{var,{664,10},rec21},{var,{664,10},'St1'}},
       {'case',
        {664,17},
        {var,{664,10},rec21},
        [{clause,
          {664,17},
          [{tuple,
            {664,17},
            [{atom,{664,17},st},
             {var,{664,17},'_'},
             {var,{664,17},'_'},
             {var,{664,17},'_'},
             {var,{664,17},'_'},
             {var,{664,17},'_'},
             {var,{664,17},'_'}]}],
          [],
          [{call,
            {664,17},
            {remote,
             {664,17},
             {atom,{664,17},erlang},
             {atom,{664,17},setelement}},
            [{integer,{664,17},3},
             {var,{664,10},rec21},
             {var,{664,23},'LDefs'}]}]},
         {clause,
          [{generated,true},{location,{664,17}}],
          [{var,[{generated,true},{location,{664,17}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{664,17}}],
            {remote,
             [{generated,true},{location,{664,17}}],
             {atom,[{generated,true},{location,{664,17}}],erlang},
             {atom,[{generated,true},{location,{664,17}}],error}},
            [{tuple,
              [{generated,true},{location,{664,17}}],
              [{atom,[{generated,true},{location,{664,17}}],badrecord},
               {var,{664,10},rec21}]}]}]}]}]}},
    {debug_line,665,226},
    {match,
     {665,5},
     {var,{665,5},'G1'},
     {call,
      {665,10},
      {atom,{665,10},opt_digraph_top},
      [{var,{665,26},'Bool'},{var,{665,32},'G0'},{var,{665,36},'St'}]}},
    {debug_line,666,227},
    {match,
     {666,5},
     {var,{666,5},'G'},
     {call,
      {666,9},
      {atom,{666,9},shortcut_branches},
      [{var,{666,27},'Root'},{var,{666,33},'G1'},{var,{666,37},'St'}]}},
    {debug_line,670,228},
    {call,
     {670,5},
     {atom,{670,5},ensure_init},
     [{var,{670,17},'Root'},{var,{670,23},'G'},{var,{670,26},'G0'}]},
    {debug_line,676,229},
    {match,
     {676,5},
     {var,{676,5},'DomBlk0'},
     {call,
      {676,15},
      {remote,{676,15},{atom,{676,15},erlang},{atom,{676,15},map_get}},
      [{var,{676,23},'Dom'},{var,{676,28},'Blocks1'}]}},
    {debug_line,677,230},
    {match,
     {677,5},
     {var,{677,5},'Blocks2'},
     {call,
      {677,15},
      {remote,{677,19},{atom,{677,15},maps},{atom,{677,20},without}},
      [{block,0,
        [{lc,
          {677,28},
          {block,0,[{var,{677,29},'L'}]},
          [{block,0,[{atom,{677,51},true}]},
           {generate_strict,
            {677,47},
            {tuple,
             {677,34},
             [{var,{677,35},'L'},
              {tuple,
               {677,37},
               [{atom,{677,37},b_blk},
                {var,{677,37},'_'},
                {var,{677,37},'_'},
                {var,{677,37},'_'}]}]},
            {var,{677,51},'Bs'}}]}]},
       {var,{677,56},'Blocks1'}]}},
    {debug_line,680,231},
    {match,
     {680,5},
     {var,{680,5},'Blocks3'},
     {call,
      {680,15},
      {atom,{680,15},digraph_to_ssa},
      [{block,0,[{cons,{680,30},{var,{680,31},'Root'},{nil,{680,35}}}]},
       {var,{680,38},'G'},
       {var,{680,41},'Blocks2'}]}},
    {debug_line,684,232},
    {match,
     {684,5},
     {var,{684,5},'DomBlk'},
     {block,
      {684,14},
      [{match,
        {684,40},
        {var,{684,40},rec22},
        {call,{684,45},{atom,{684,45},oneway_br},[{var,{684,55},'Root'}]}},
       {match,{684,14},{var,{684,14},rec23},{var,{684,14},'DomBlk0'}},
       {'case',
        {684,28},
        {var,{684,14},rec23},
        [{clause,
          {684,28},
          [{tuple,
            {684,28},
            [{atom,{684,28},b_blk},
             {var,{684,28},'_'},
             {var,{684,28},'_'},
             {var,{684,28},'_'}]}],
          [],
          [{call,
            {684,28},
            {remote,
             {684,28},
             {atom,{684,28},erlang},
             {atom,{684,28},setelement}},
            [{integer,{684,28},3},
             {call,
              {684,40},
              {remote,
               {684,40},
               {atom,{684,40},erlang},
               {atom,{684,40},setelement}},
              [{integer,{684,40},4},
               {var,{684,14},rec23},
               {var,{684,40},rec22}]},
             {var,{684,31},'DomPreIs'}]}]},
         {clause,
          [{generated,true},{location,{684,28}}],
          [{var,[{generated,true},{location,{684,28}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{684,28}}],
            {remote,
             [{generated,true},{location,{684,28}}],
             {atom,[{generated,true},{location,{684,28}}],erlang},
             {atom,[{generated,true},{location,{684,28}}],error}},
            [{tuple,
              [{generated,true},{location,{684,28}}],
              [{atom,[{generated,true},{location,{684,28}}],badrecord},
               {var,{684,14},rec23}]}]}]}]}]}},
    {debug_line,685,233},
    {match,
     {685,5},
     {var,{685,5},'Blocks'},
     {map,
      {685,21},
      {var,{685,14},'Blocks3'},
      [{map_field_assoc,
        {685,27},
        {var,{685,23},'Dom'},
        {var,{685,30},'DomBlk'}}]}},
    {debug_line,686,234},
    {tuple,
     {686,5},
     [{var,{686,6},'Blocks'},
      {block,
       {686,13},
       [{match,{686,13},{var,{686,13},rec24},{var,{686,13},'St'}},
        {'case',
         {686,19},
         {var,{686,13},rec24},
         [{clause,
           {686,19},
           [{tuple,
             {686,19},
             [{atom,{686,19},st},
              {var,{686,19},'_'},
              {var,{686,19},'_'},
              {var,{686,19},'_'},
              {var,{686,19},'_'},
              {var,{686,19},'_'},
              {var,{686,19},'_'}]}],
           [],
           [{call,
             {686,19},
             {remote,
              {686,19},
              {atom,{686,19},erlang},
              {atom,{686,19},setelement}},
             [{integer,{686,19},3},{var,{686,13},rec24},{map,{686,25},[]}]}]},
          {clause,
           [{generated,true},{location,{686,19}}],
           [{var,[{generated,true},{location,{686,19}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{686,19}}],
             {remote,
              [{generated,true},{location,{686,19}}],
              {atom,[{generated,true},{location,{686,19}}],erlang},
              {atom,[{generated,true},{location,{686,19}}],error}},
             [{tuple,
               [{generated,true},{location,{686,19}}],
               [{atom,[{generated,true},{location,{686,19}}],badrecord},
                {var,{686,13},rec24}]}]}]}]}]}]}]}]}.
{function,
    {693,1},
    collect_bool_vars,2,
    [{clause,
         {693,1},
         [{var,{693,1},'_'},{var,{693,1},'_'}],
         [[{call,
               {693,1},
               {remote,
                   {693,1},
                   {atom,{693,1},fake},
                   {atom,{693,1},is_beam_bif_info}},
               []}]],
         [{debug_line,693,235},{atom,{693,1},ignore}]},
     {clause,
         {693,1},
         [{var,{693,19},'RootBool'},{var,{693,29},'St'}],
         [],
         [{debug_line,694,236},
          {match,
              {694,5},
              {tuple,
                  {694,5},
                  [{atom,{694,5},b_set},
                   {var,{694,5},'_'},
                   {var,{694,5},'_'},
                   {var,{694,5},'_'},
                   {cons,
                       {694,17},
                       {match,
                           {694,18},
                           {tuple,
                               {694,18},
                               [{atom,{694,18},b_var},{var,{694,18},'_'}]},
                           {var,{694,27},'Var'}},
                       {cons,
                           {694,31},
                           {tuple,
                               {694,31},
                               [{atom,{694,31},b_literal},{var,{694,31},'_'}]},
                           {nil,{694,43}}}}]},
              {call,
                  {694,48},
                  {atom,{694,48},get_def},
                  [{var,{694,56},'RootBool'},{var,{694,66},'St'}]}},
          {debug_line,695,237},
          {call,
              {695,5},
              {atom,{695,5},collect_bool_vars},
              [{block,0,[{cons,{695,23},{var,{695,24},'Var'},{nil,{695,27}}}]},
               {var,{695,30},'St'},
               {block,0,
                   [{cons,
                        {695,34},
                        {var,{695,35},'RootBool'},
                        {nil,{695,43}}}]}]}]}]}.
{function,
 {697,1},
 collect_bool_vars,3,
 [{clause,
   {697,1},
   [{var,{697,1},'_'},{var,{697,1},'_'},{var,{697,1},'_'}],
   [[{call,
      {697,1},
      {remote,{697,1},{atom,{697,1},fake},{atom,{697,1},is_beam_bif_info}},
      []}]],
   [{debug_line,697,238},{atom,{697,1},ignore}]},
  {clause,
   {697,1},
   [{cons,{697,19},{var,{697,20},'V'},{var,{697,22},'Vs'}},
    {var,{697,27},'St'},
    {var,{697,31},'Acc'}],
   [],
   [{debug_line,698,239},
    {'case',
     {698,5},
     {call,
      {698,10},
      {atom,{698,10},get_def},
      [{var,{698,18},'V'},{var,{698,21},'St'}]},
     [{clause,
       {699,9},
       [{tuple,
         {699,9},
         [{atom,{699,9},b_set},
          {var,{699,28},'Anno'},
          {var,{699,9},'_'},
          {atom,{699,19},phi},
          {var,{699,38},'Args'}]}],
       [],
       [{debug_line,700,240},
        {match,
         {700,13},
         {tuple,{700,13},[{var,{700,14},'Vars'},{var,{700,19},'Ls'}]},
         {call,
          {700,25},
          {atom,{700,25},collect_phi_args},
          [{var,{700,42},'Args'},{var,{700,48},'Anno'}]}},
        {debug_line,701,241},
        {call,
         {701,13},
         {atom,{701,13},collect_bool_vars},
         [{block,0,
           [{op,{701,36},'++',{var,{701,31},'Vars'},{var,{701,39},'Vs'}}]},
          {var,{701,43},'St'},
          {block,0,
           [{op,
             {701,50},
             '++',
             {var,{701,47},'Ls'},
             {op,
              {701,58},
              '++',
              {var,{701,53},'Vars'},
              {var,{701,61},'Acc'}}}]}]}]},
      {clause,
       {702,9},
       [{match,
         {702,9},
         {tuple,
          {702,9},
          [{atom,{702,9},b_set},
           {var,{702,9},'_'},
           {var,{702,9},'_'},
           {var,{702,9},'_'},
           {var,{702,21},'Args'}]},
         {var,{702,27},'I'}}],
       [],
       [{debug_line,704,242},
        {match,
         {704,13},
         {var,{704,13},'Vars'},
         {lc,
          {704,20},
          {block,0,[{var,{704,21},'Arg'}]},
          [{block,0,[{atom,{704,44},true}]},
           {generate,
            {704,41},
            {match,
             {704,28},
             {tuple,{704,28},[{atom,{704,28},b_var},{var,{704,28},'_'}]},
             {var,{704,37},'Arg'}},
            {var,{704,44},'Args'}}]}},
        {debug_line,705,243},
        {'case',
         {705,13},
         {call,
          {705,18},
          {atom,{705,18},is_rewritable_bool_op},
          [{var,{705,40},'I'}]},
         [{clause,
           {706,17},
           [{atom,{706,17},true}],
           [],
           [{debug_line,710,244},
            {call,
             {710,21},
             {atom,{710,21},collect_bool_vars},
             [{block,0,
               [{op,{710,44},'++',{var,{710,39},'Vars'},{var,{710,47},'Vs'}}]},
              {var,{710,51},'St'},
              {block,0,
               [{cons,{710,55},{var,{710,56},'V'},{var,{710,58},'Acc'}}]}]}]},
          {clause,
           {711,17},
           [{atom,{711,17},false}],
           [],
           [{debug_line,715,245},
            {call,
             {715,21},
             {atom,{715,21},collect_bool_vars},
             [{var,{715,39},'Vs'},
              {var,{715,43},'St'},
              {block,0,
               [{cons,
                 {715,47},
                 {var,{715,48},'V'},
                 {var,{715,50},'Acc'}}]}]}]}]}]},
      {clause,
       {717,9},
       [{atom,{717,9},none}],
       [],
       [{debug_line,718,246},
        {call,
         {718,13},
         {atom,{718,13},collect_bool_vars},
         [{var,{718,31},'Vs'},{var,{718,35},'St'},{var,{718,39},'Acc'}]}]}]}]},
  {clause,
   {720,1},
   [{nil,{720,19}},{var,{720,23},'_St'},{var,{720,28},'Acc'}],
   [],
   [{debug_line,721,247},
    {call,
     {721,5},
     {remote,{721,12},{atom,{721,5},ordsets},{atom,{721,13},from_list}},
     [{var,{721,23},'Acc'}]}]}]}.
{function,{723,1},
          is_rewritable_bool_op,1,
          [{clause,{723,1},
                   [{var,{723,1},'_'}],
                   [[{call,{723,1},
                           {remote,{723,1},
                                   {atom,{723,1},fake},
                                   {atom,{723,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,723,248},{atom,{723,1},ignore}]},
           {clause,{723,1},
                   [{tuple,{723,23},
                           [{atom,{723,23},b_set},
                            {var,{723,23},'_'},
                            {var,{723,23},'_'},
                            {tuple,{723,33},
                                   [{atom,{723,34},bif},{var,{723,38},'Bif'}]},
                            {var,{723,23},'_'}]}],
                   [],
                   [{debug_line,725,249},
                    {'case',{725,5},
                            {var,{725,10},'Bif'},
                            [{clause,{726,9},
                                     [{atom,{726,9},'and'}],
                                     [],
                                     [{debug_line,726,250},
                                      {atom,{726,18},true}]},
                             {clause,{727,9},
                                     [{atom,{727,9},'or'}],
                                     [],
                                     [{debug_line,727,251},
                                      {atom,{727,17},true}]},
                             {clause,{728,9},
                                     [{atom,{728,9},'not'}],
                                     [],
                                     [{debug_line,728,252},
                                      {atom,{728,18},true}]},
                             {clause,{729,9},
                                     [{var,{729,9},'_'}],
                                     [],
                                     [{debug_line,729,253},
                                      {atom,{729,14},false}]}]}]}]}.
{function,
 {732,1},
 collect_phi_args,2,
 [{clause,
   {732,1},
   [{var,{732,1},'_'},{var,{732,1},'_'}],
   [[{call,
      {732,1},
      {remote,{732,1},{atom,{732,1},fake},{atom,{732,1},is_beam_bif_info}},
      []}]],
   [{debug_line,732,254},{atom,{732,1},ignore}]},
  {clause,
   {732,1},
   [{var,{732,18},'Args'},{var,{732,24},'Anno'}],
   [],
   [{debug_line,733,255},
    {'case',
     {733,5},
     {call,
      {733,10},
      {remote,{733,10},{atom,{733,10},erlang},{atom,{733,10},is_map_key}},
      [{atom,{733,21},boolean_phi},{var,{733,34},'Anno'}]},
     [{clause,
       {734,9},
       [{atom,{734,9},true}],
       [],
       [{debug_line,735,256},
        {match,
         {735,13},
         {var,{735,13},'Vars'},
         {lc,
          {735,20},
          {block,0,[{var,{735,21},'V'}]},
          [{block,0,[{atom,{735,44},true}]},
           {generate,
            {735,41},
            {tuple,
             {735,26},
             [{match,
               {735,27},
               {tuple,{735,27},[{atom,{735,27},b_var},{var,{735,27},'_'}]},
               {var,{735,36},'V'}},
              {var,{735,38},'_'}]},
            {var,{735,44},'Args'}}]}},
        {debug_line,736,257},
        {'case',
         {736,13},
         {var,{736,18},'Vars'},
         [{clause,
           {737,17},
           [{cons,{737,17},{var,{737,18},'_'},{var,{737,20},'_'}}],
           [],
           [{debug_line,738,258},
            {tuple,{738,21},[{var,{738,22},'Vars'},{nil,{738,27}}]}]},
          {clause,
           {739,17},
           [{nil,{739,17}}],
           [],
           [{debug_line,742,259},
            {match,
             {742,21},
             {var,{742,21},'Ls'},
             {lc,
              {742,26},
              {block,0,
               [{tuple,{742,27},[{atom,{742,28},block},{var,{742,34},'L'}]}]},
              [{block,0,[{atom,{742,50},true}]},
               {generate_strict,
                {742,46},
                {tuple,{742,40},[{var,{742,41},'_'},{var,{742,43},'L'}]},
                {var,{742,50},'Args'}}]}},
            {debug_line,743,260},
            {tuple,{743,21},[{nil,{743,22}},{var,{743,25},'Ls'}]}]}]}]},
      {clause,
       {745,9},
       [{atom,{745,9},false}],
       [],
       [{debug_line,748,261},
        {tuple,{748,13},[{nil,{748,14}},{nil,{748,17}}]}]}]}]}]}.
{function,
 {755,1},
 bool_opt_dom,2,
 [{clause,
   {755,1},
   [{var,{755,1},'_'},{var,{755,1},'_'}],
   [[{call,
      {755,1},
      {remote,{755,1},{atom,{755,1},fake},{atom,{755,1},is_beam_bif_info}},
      []}]],
   [{debug_line,755,262},{atom,{755,1},ignore}]},
  {clause,
   {755,1},
   [{var,{755,14},'TreeVars'},
    {tuple,
     {755,24},
     [{atom,{755,24},st},
      {var,{755,33},'Defs'},
      {var,{755,24},'_'},
      {var,{755,24},'_'},
      {tuple,{755,42},[{var,{755,43},'DomBy'},{var,{755,49},'Num'}]},
      {var,{755,24},'_'},
      {var,{755,24},'_'}]}],
   [],
   [{debug_line,756,263},
    {match,
     {756,5},
     {var,{756,5},'Ls0'},
     {call,
      {756,11},
      {remote,{756,11},{atom,{756,11},lists},{atom,{756,11},foldl}},
      [{block,0,
        [{'fun',
          {756,17},
          {clauses,
           [{clause,
             {756,20},
             [{tuple,{756,21},[{atom,{756,22},block},{var,{756,28},'L'}]},
              {var,{756,32},'A'}],
             [],
             [{debug_line,757,264},
              {cons,{757,25},{var,{757,26},'L'},{var,{757,28},'A'}}]},
            {clause,
             {758,20},
             [{var,{758,21},'V'},{var,{758,24},'A'}],
             [],
             [{debug_line,759,265},
              {match,
               {759,25},
               {tuple,{759,25},[{var,{759,26},'L'},{var,{759,28},'_'}]},
               {call,
                {759,33},
                {remote,
                 {759,33},
                 {atom,{759,33},erlang},
                 {atom,{759,33},map_get}},
                [{var,{759,41},'V'},{var,{759,44},'Defs'}]}},
              {debug_line,760,266},
              {cons,{760,25},{var,{760,26},'L'},{var,{760,28},'A'}}]}]}}]},
       {nil,{761,22}},
       {var,{761,26},'TreeVars'}]}},
    {debug_line,762,267},
    {match,
     {762,5},
     {var,{762,5},'Ls'},
     {call,
      {762,10},
      {remote,{762,17},{atom,{762,10},ordsets},{atom,{762,18},from_list}},
      [{var,{762,28},'Ls0'}]}},
    {debug_line,763,268},
    {match,
     {763,5},
     {cons,{763,5},{var,{763,6},'Common'},{var,{763,13},'_'}},
     {call,
      {763,18},
      {remote,
       {763,26},
       {atom,{763,18},beam_ssa},
       {atom,{763,27},common_dominators}},
      [{var,{763,45},'Ls'},{var,{763,49},'DomBy'},{var,{763,56},'Num'}]}},
    {debug_line,764,269},
    {var,{764,5},'Common'}]}]}.
{function,
 {766,1},
 split_dom_block,2,
 [{clause,
   {766,1},
   [{var,{766,1},'_'},{var,{766,1},'_'}],
   [[{call,
      {766,1},
      {remote,{766,1},{atom,{766,1},fake},{atom,{766,1},is_beam_bif_info}},
      []}]],
   [{debug_line,766,270},{atom,{766,1},ignore}]},
  {clause,
   {766,1},
   [{var,{766,17},'L'},{var,{766,20},'Blocks0'}],
   [],
   [{debug_line,767,271},
    {match,
     {767,5},
     {tuple,
      {767,5},
      [{atom,{767,5},b_blk},
       {var,{767,5},'_'},
       {var,{767,15},'Is'},
       {var,{767,5},'_'}]},
     {match,
      {767,21},
      {var,{767,21},'Blk0'},
      {call,
       {767,28},
       {remote,{767,28},{atom,{767,28},erlang},{atom,{767,28},map_get}},
       [{var,{767,36},'L'},{var,{767,39},'Blocks0'}]}}},
    {debug_line,768,272},
    {match,
     {768,5},
     {tuple,{768,5},[{var,{768,6},'PreIs'},{var,{768,12},'TailIs'}]},
     {call,
      {768,22},
      {atom,{768,22},split_dom_block_is},
      [{var,{768,41},'Is'},{nil,{768,45}}]}},
    {debug_line,769,273},
    {match,
     {769,5},
     {var,{769,5},'Blk'},
     {block,
      {769,11},
      [{match,{769,11},{var,{769,11},rec25},{var,{769,11},'Blk0'}},
       {'case',
        {769,22},
        {var,{769,11},rec25},
        [{clause,
          {769,22},
          [{tuple,
            {769,22},
            [{atom,{769,22},b_blk},
             {var,{769,22},'_'},
             {var,{769,22},'_'},
             {var,{769,22},'_'}]}],
          [],
          [{call,
            {769,22},
            {remote,
             {769,22},
             {atom,{769,22},erlang},
             {atom,{769,22},setelement}},
            [{integer,{769,22},3},
             {var,{769,11},rec25},
             {var,{769,25},'TailIs'}]}]},
         {clause,
          [{generated,true},{location,{769,22}}],
          [{var,[{generated,true},{location,{769,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{769,22}}],
            {remote,
             [{generated,true},{location,{769,22}}],
             {atom,[{generated,true},{location,{769,22}}],erlang},
             {atom,[{generated,true},{location,{769,22}}],error}},
            [{tuple,
              [{generated,true},{location,{769,22}}],
              [{atom,[{generated,true},{location,{769,22}}],badrecord},
               {var,{769,11},rec25}]}]}]}]}]}},
    {debug_line,770,274},
    {match,
     {770,5},
     {var,{770,5},'Blocks'},
     {map,
      {770,21},
      {var,{770,14},'Blocks0'},
      [{map_field_exact,{770,24},{var,{770,23},'L'},{var,{770,26},'Blk'}}]}},
    {debug_line,771,275},
    {tuple,{771,5},[{var,{771,6},'PreIs'},{var,{771,12},'Blocks'}]}]}]}.
{function,
    {773,1},
    split_dom_block_is,2,
    [{clause,
         {773,1},
         [{var,{773,1},'_'},{var,{773,1},'_'}],
         [[{call,
               {773,1},
               {remote,
                   {773,1},
                   {atom,{773,1},fake},
                   {atom,{773,1},is_beam_bif_info}},
               []}]],
         [{debug_line,773,276},{atom,{773,1},ignore}]},
     {clause,
         {773,1},
         [{match,
              {773,20},
              {cons,
                  {773,20},
                  {tuple,
                      {773,21},
                      [{atom,{773,21},b_set},
                       {var,{773,21},'_'},
                       {var,{773,21},'_'},
                       {var,{773,21},'_'},
                       {var,{773,21},'_'}]},
                  {cons,
                      {773,30},
                      {tuple,
                          {773,30},
                          [{atom,{773,30},b_set},
                           {var,{773,30},'_'},
                           {var,{773,30},'_'},
                           {tuple,
                               {773,40},
                               [{atom,{773,41},succeeded},{var,{773,51},'_'}]},
                           {var,{773,30},'_'}]},
                      {nil,{773,54}}}},
              {var,{773,56},'Is'}},
          {var,{773,60},'PreAcc'}],
         [],
         [{debug_line,774,277},
          {tuple,
              {774,5},
              [{call,
                   {774,6},
                   {remote,
                       {774,6},
                       {atom,{774,6},lists},
                       {atom,{774,6},reverse}},
                   [{var,{774,14},'PreAcc'}]},
               {var,{774,22},'Is'}]}]},
     {clause,
         {775,1},
         [{match,
              {775,20},
              {cons,
                  {775,20},
                  {match,
                      {775,21},
                      {tuple,
                          {775,21},
                          [{atom,{775,21},b_set},
                           {var,{775,21},'_'},
                           {var,{775,21},'_'},
                           {var,{775,21},'_'},
                           {var,{775,21},'_'}]},
                      {var,{775,30},'I'}},
                  {var,{775,32},'Is'}},
              {var,{775,36},'Is0'}},
          {var,{775,41},'PreAcc'}],
         [],
         [{debug_line,776,278},
          {'case',
              {776,5},
              {call,
                  {776,10},
                  {atom,{776,10},is_bool_expr},
                  [{var,{776,23},'I'}]},
              [{clause,
                   {777,9},
                   [{atom,{777,9},true}],
                   [],
                   [{debug_line,778,279},
                    {tuple,
                        {778,13},
                        [{call,
                             {778,14},
                             {remote,
                                 {778,14},
                                 {atom,{778,14},lists},
                                 {atom,{778,14},reverse}},
                             [{var,{778,22},'PreAcc'}]},
                         {var,{778,30},'Is0'}]}]},
               {clause,
                   {779,9},
                   [{atom,{779,9},false}],
                   [],
                   [{debug_line,780,280},
                    {call,
                        {780,13},
                        {atom,{780,13},split_dom_block_is},
                        [{var,{780,32},'Is'},
                         {block,0,
                             [{cons,
                                  {780,36},
                                  {var,{780,37},'I'},
                                  {var,{780,39},'PreAcc'}}]}]}]}]}]},
     {clause,
         {782,1},
         [{nil,{782,20}},{var,{782,24},'PreAcc'}],
         [],
         [{debug_line,783,281},
          {tuple,
              {783,5},
              [{call,
                   {783,6},
                   {remote,
                       {783,6},
                       {atom,{783,6},lists},
                       {atom,{783,6},reverse}},
                   [{var,{783,14},'PreAcc'}]},
               {nil,{783,22}}]}]}]}.
{function,
    {789,1},
    collect_digraph_blocks,4,
    [{clause,
         {789,1},
         [{var,{789,1},'_'},
          {var,{789,1},'_'},
          {var,{789,1},'_'},
          {var,{789,1},'_'}],
         [[{call,
               {789,1},
               {remote,
                   {789,1},
                   {atom,{789,1},fake},
                   {atom,{789,1},is_beam_bif_info}},
               []}]],
         [{debug_line,789,282},{atom,{789,1},ignore}]},
     {clause,
         {789,1},
         [{var,{789,24},'FirstL'},
          {var,{789,32},'LastL'},
          {tuple,
              {789,39},
              [{atom,{789,39},b_br},
               {var,{789,39},'_'},
               {var,{789,39},'_'},
               {var,{789,50},'Succ'},
               {var,{789,60},'Fail'}]},
          {var,{789,67},'Blocks'}],
         [],
         [{debug_line,790,283},
          {match,
              {790,5},
              {var,{790,5},'Ws'},
              {call,
                  {790,10},
                  {remote,
                      {790,17},
                      {atom,{790,10},gb_sets},
                      {atom,{790,18},singleton}},
                  [{var,{790,28},'FirstL'}]}},
          {debug_line,791,284},
          {match,
              {791,5},
              {var,{791,5},'Seen'},
              {call,
                  {791,12},
                  {remote,
                      {791,16},
                      {atom,{791,12},sets},
                      {atom,{791,17},from_list}},
                  [{block,0,
                       [{cons,
                            {791,27},
                            {var,{791,28},'Succ'},
                            {cons,
                                {791,33},
                                {var,{791,33},'Fail'},
                                {nil,{791,37}}}}]}]}},
          {debug_line,792,285},
          {call,
              {792,5},
              {atom,{792,5},collect_digraph_blocks},
              [{var,{792,28},'Ws'},
               {var,{792,32},'LastL'},
               {var,{792,39},'Blocks'},
               {var,{792,47},'Seen'},
               {nil,{792,53}}]}]}]}.
{function,
    {794,1},
    collect_digraph_blocks,5,
    [{clause,
         {794,1},
         [{var,{794,1},'_'},
          {var,{794,1},'_'},
          {var,{794,1},'_'},
          {var,{794,1},'_'},
          {var,{794,1},'_'}],
         [[{call,
               {794,1},
               {remote,
                   {794,1},
                   {atom,{794,1},fake},
                   {atom,{794,1},is_beam_bif_info}},
               []}]],
         [{debug_line,794,286},{atom,{794,1},ignore}]},
     {clause,
         {794,1},
         [{var,{794,24},'Ws0'},
          {var,{794,29},'LastL'},
          {var,{794,36},'Blocks'},
          {var,{794,44},'Seen0'},
          {var,{794,51},'Acc0'}],
         [],
         [{debug_line,795,287},
          {'case',
              {795,5},
              {call,
                  {795,10},
                  {remote,
                      {795,17},
                      {atom,{795,10},gb_sets},
                      {atom,{795,18},is_empty}},
                  [{var,{795,27},'Ws0'}]},
              [{clause,
                   {796,9},
                   [{atom,{796,9},true}],
                   [],
                   [{debug_line,797,288},{var,{797,13},'Acc0'}]},
               {clause,
                   {798,9},
                   [{atom,{798,9},false}],
                   [],
                   [{debug_line,799,289},
                    {match,
                        {799,13},
                        {tuple,
                            {799,13},
                            [{var,{799,14},'L'},{var,{799,16},'Ws1'}]},
                        {call,
                            {799,23},
                            {remote,
                                {799,30},
                                {atom,{799,23},gb_sets},
                                {atom,{799,31},take_smallest}},
                            [{var,{799,45},'Ws0'}]}},
                    {debug_line,800,290},
                    {match,
                        {800,13},
                        {var,{800,13},'Seen'},
                        {call,
                            {800,20},
                            {remote,
                                {800,24},
                                {atom,{800,20},sets},
                                {atom,{800,25},add_element}},
                            [{var,{800,37},'L'},{var,{800,40},'Seen0'}]}},
                    {debug_line,801,291},
                    {match,
                        {801,13},
                        {var,{801,13},'Blk'},
                        {call,
                            {801,19},
                            {remote,
                                {801,19},
                                {atom,{801,19},erlang},
                                {atom,{801,19},map_get}},
                            [{var,{801,27},'L'},{var,{801,30},'Blocks'}]}},
                    {debug_line,802,292},
                    {match,
                        {802,13},
                        {var,{802,13},'Acc'},
                        {cons,
                            {802,19},
                            {tuple,
                                {802,20},
                                [{var,{802,21},'L'},{var,{802,23},'Blk'}]},
                            {var,{802,28},'Acc0'}}},
                    {debug_line,803,293},
                    {match,
                        {803,13},
                        {var,{803,13},'Ws'},
                        {call,
                            {803,18},
                            {atom,{803,18},cdb_update_workset},
                            [{var,{803,37},'L'},
                             {var,{803,40},'Blk'},
                             {var,{803,45},'LastL'},
                             {var,{803,52},'Seen'},
                             {var,{803,58},'Ws1'}]}},
                    {debug_line,804,294},
                    {call,
                        {804,13},
                        {atom,{804,13},collect_digraph_blocks},
                        [{var,{804,36},'Ws'},
                         {var,{804,40},'LastL'},
                         {var,{804,47},'Blocks'},
                         {var,{804,55},'Seen'},
                         {var,{804,61},'Acc'}]}]}]}]}]}.
{function,
    {807,1},
    cdb_update_workset,5,
    [{clause,
         {807,1},
         [{var,{807,1},'_'},
          {var,{807,1},'_'},
          {var,{807,1},'_'},
          {var,{807,1},'_'},
          {var,{807,1},'_'}],
         [[{call,
               {807,1},
               {remote,
                   {807,1},
                   {atom,{807,1},fake},
                   {atom,{807,1},is_beam_bif_info}},
               []}]],
         [{debug_line,807,295},{atom,{807,1},ignore}]},
     {clause,
         {807,1},
         [{var,{807,20},'LastL'},
          {var,{807,27},'_Blk'},
          {var,{807,33},'LastL'},
          {var,{807,40},'_Seen'},
          {var,{807,47},'Ws'}],
         [],
         [{debug_line,808,296},{var,{808,5},'Ws'}]},
     {clause,
         {809,1},
         [{var,{809,20},'_L'},
          {var,{809,24},'Blk'},
          {var,{809,29},'_LastL'},
          {var,{809,37},'Seen'},
          {var,{809,43},'Ws'}],
         [],
         [{debug_line,810,297},
          {match,
              {810,5},
              {var,{810,5},'Successors'},
              {call,
                  {810,18},
                  {remote,
                      {810,26},
                      {atom,{810,18},beam_ssa},
                      {atom,{810,27},successors}},
                  [{var,{810,38},'Blk'}]}},
          {debug_line,811,298},
          {call,
              {811,5},
              {atom,{811,5},cdb_update_workset},
              [{var,{811,24},'Successors'},
               {var,{811,36},'Seen'},
               {var,{811,42},'Ws'}]}]}]}.
{function,
    {813,1},
    cdb_update_workset,3,
    [{clause,
         {813,1},
         [{var,{813,1},'_'},{var,{813,1},'_'},{var,{813,1},'_'}],
         [[{call,
               {813,1},
               {remote,
                   {813,1},
                   {atom,{813,1},fake},
                   {atom,{813,1},is_beam_bif_info}},
               []}]],
         [{debug_line,813,299},{atom,{813,1},ignore}]},
     {clause,
         {813,1},
         [{cons,{813,20},{var,{813,21},'L'},{var,{813,23},'Ls'}},
          {var,{813,28},'Seen'},
          {var,{813,34},'Ws'}],
         [],
         [{debug_line,814,300},
          {'case',
              {814,5},
              {call,
                  {814,10},
                  {remote,
                      {814,14},
                      {atom,{814,10},sets},
                      {atom,{814,15},is_element}},
                  [{var,{814,26},'L'},{var,{814,29},'Seen'}]},
              [{clause,
                   {815,9},
                   [{atom,{815,9},true}],
                   [],
                   [{debug_line,816,301},
                    {call,
                        {816,13},
                        {atom,{816,13},cdb_update_workset},
                        [{var,{816,32},'Ls'},
                         {var,{816,36},'Seen'},
                         {var,{816,42},'Ws'}]}]},
               {clause,
                   {817,9},
                   [{atom,{817,9},false}],
                   [],
                   [{debug_line,818,302},
                    {call,
                        {818,13},
                        {atom,{818,13},cdb_update_workset},
                        [{var,{818,32},'Ls'},
                         {var,{818,36},'Seen'},
                         {block,0,
                             [{call,
                                  {818,42},
                                  {remote,
                                      {818,49},
                                      {atom,{818,42},gb_sets},
                                      {atom,{818,50},add_element}},
                                  [{var,{818,62},'L'},
                                   {var,{818,65},'Ws'}]}]}]}]}]}]},
     {clause,
         {820,1},
         [{nil,{820,20}},{var,{820,24},'_Seen'},{var,{820,31},'Ws'}],
         [],
         [{debug_line,820,303},{var,{820,38},'Ws'}]}]}.
{function,
    {829,1},
    build_digraph,3,
    [{clause,
         {829,1},
         [{var,{829,1},'_'},{var,{829,1},'_'},{var,{829,1},'_'}],
         [[{call,
               {829,1},
               {remote,
                   {829,1},
                   {atom,{829,1},fake},
                   {atom,{829,1},is_beam_bif_info}},
               []}]],
         [{debug_line,829,304},{atom,{829,1},ignore}]},
     {clause,
         {829,1},
         [{var,{829,15},'Bs'},
          {tuple,
              {829,19},
              [{atom,{829,19},b_br},
               {var,{829,19},'_'},
               {var,{829,19},'_'},
               {var,{829,30},'Succ'},
               {var,{829,40},'Fail'}]},
          {var,{829,47},'St0'}],
         [],
         [{debug_line,830,305},
          {match,
              {830,5},
              {var,{830,5},'Ignore'},
              {call,
                  {830,14},
                  {remote,
                      {830,21},
                      {atom,{830,14},ordsets},
                      {atom,{830,22},from_list}},
                  [{block,0,
                       [{cons,
                            {830,32},
                            {var,{830,33},'Succ'},
                            {cons,
                                {830,38},
                                {var,{830,38},'Fail'},
                                {nil,{830,42}}}}]}]}},
          {debug_line,831,306},
          {match,
              {831,5},
              {var,{831,5},'G0'},
              {call,
                  {831,10},
                  {remote,
                      {831,22},
                      {atom,{831,10},beam_digraph},
                      {atom,{831,23},new}},
                  []}},
          {debug_line,832,307},
          {match,
              {832,5},
              {tuple,
                  {832,5},
                  [{var,{832,6},'Map0'},
                   {var,{832,11},'G1'},
                   {var,{832,14},'St1'}]},
              {call,
                  {832,21},
                  {atom,{832,21},build_mapping},
                  [{var,{832,35},'Bs'},
                   {block,0,[{map,{832,39},[]}]},
                   {var,{832,44},'G0'},
                   {var,{832,48},'St0'}]}},
          {debug_line,833,308},
          {match,
              {833,5},
              {tuple,{833,5},[{var,{833,6},'Map'},{var,{833,10},'G2'}]},
              {call,
                  {833,16},
                  {atom,{833,16},add_external_vertices},
                  [{var,{833,38},'Ignore'},
                   {var,{833,46},'Map0'},
                   {var,{833,52},'G1'}]}},
          {debug_line,834,309},
          {match,
              {834,5},
              {tuple,{834,5},[{var,{834,6},'G'},{var,{834,8},'St'}]},
              {call,
                  {834,14},
                  {atom,{834,14},build_digraph_1},
                  [{var,{834,30},'Bs'},
                   {var,{834,34},'G2'},
                   {var,{834,38},'Map'},
                   {var,{834,43},'St1'}]}},
          {debug_line,839,310},
          {match,
              {839,5},
              {cons,{839,5},{var,{839,6},'Root'},{nil,{839,10}}},
              {call,
                  {839,14},
                  {atom,{839,14},digraph_roots},
                  [{var,{839,28},'G'}]}},
          {debug_line,840,311},
          {tuple,
              {840,5},
              [{var,{840,6},'Root'},
               {var,{840,11},'G'},
               {var,{840,13},'St'}]}]}]}.
{function,
    {842,1},
    build_mapping,4,
    [{clause,
         {842,1},
         [{var,{842,1},'_'},
          {var,{842,1},'_'},
          {var,{842,1},'_'},
          {var,{842,1},'_'}],
         [[{call,
               {842,1},
               {remote,
                   {842,1},
                   {atom,{842,1},fake},
                   {atom,{842,1},is_beam_bif_info}},
               []}]],
         [{debug_line,842,312},{atom,{842,1},ignore}]},
     {clause,
         {842,1},
         [{cons,
              {842,15},
              {tuple,{842,16},[{var,{842,17},'L'},{var,{842,19},'Blk'}]},
              {var,{842,24},'Bs'}},
          {var,{842,29},'Map0'},
          {var,{842,35},'G0'},
          {var,{842,39},'St0'}],
         [],
         [{debug_line,843,313},
          {match,
              {843,5},
              {tuple,{843,5},[{var,{843,6},'Vtx'},{var,{843,10},'St'}]},
              {call,
                  {843,16},
                  {atom,{843,16},new_label},
                  [{var,{843,26},'St0'}]}},
          {debug_line,844,314},
          {match,
              {844,5},
              {var,{844,5},'Map'},
              {map,
                  {844,15},
                  {var,{844,11},'Map0'},
                  [{map_field_assoc,
                       {844,18},
                       {var,{844,17},'L'},
                       {var,{844,20},'Vtx'}}]}},
          {debug_line,845,315},
          {match,
              {845,5},
              {var,{845,5},'Label'},
              {'case',
                  {845,13},
                  {var,{845,18},'Blk'},
                  [{clause,
                       {846,17},
                       [{tuple,
                            {846,17},
                            [{atom,{846,17},b_blk},
                             {var,{846,17},'_'},
                             {nil,{846,27}},
                             {var,{846,17},'_'}]}],
                       [],
                       [{debug_line,846,316},{atom,{846,34},br}]},
                   {clause,
                       {847,17},
                       [{tuple,
                            {847,17},
                            [{atom,{847,17},b_blk},
                             {var,{847,17},'_'},
                             {var,{847,17},'_'},
                             {var,{847,17},'_'}]}],
                       [],
                       [{debug_line,847,317},{atom,{847,29},initial}]}]}},
          {debug_line,849,318},
          {match,
              {849,5},
              {var,{849,5},'G'},
              {call,
                  {849,9},
                  {remote,
                      {849,21},
                      {atom,{849,9},beam_digraph},
                      {atom,{849,22},add_vertex}},
                  [{var,{849,33},'G0'},
                   {var,{849,37},'Vtx'},
                   {var,{849,42},'Label'}]}},
          {debug_line,850,319},
          {call,
              {850,5},
              {atom,{850,5},build_mapping},
              [{var,{850,19},'Bs'},
               {var,{850,23},'Map'},
               {var,{850,28},'G'},
               {var,{850,31},'St'}]}]},
     {clause,
         {851,1},
         [{nil,{851,15}},
          {var,{851,19},'Map'},
          {var,{851,24},'G'},
          {var,{851,27},'St'}],
         [],
         [{debug_line,852,320},
          {tuple,
              {852,5},
              [{var,{852,6},'Map'},
               {var,{852,10},'G'},
               {var,{852,12},'St'}]}]}]}.
{function,
    {854,1},
    add_external_vertices,3,
    [{clause,
         {854,1},
         [{var,{854,1},'_'},{var,{854,1},'_'},{var,{854,1},'_'}],
         [[{call,
               {854,1},
               {remote,
                   {854,1},
                   {atom,{854,1},fake},
                   {atom,{854,1},is_beam_bif_info}},
               []}]],
         [{debug_line,854,321},{atom,{854,1},ignore}]},
     {clause,
         {854,1},
         [{cons,{854,23},{var,{854,24},'V'},{var,{854,26},'Vs'}},
          {var,{854,31},'Map0'},
          {var,{854,37},'G0'}],
         [],
         [{debug_line,855,322},
          {match,
              {855,5},
              {var,{855,5},'G'},
              {call,
                  {855,9},
                  {remote,
                      {855,21},
                      {atom,{855,9},beam_digraph},
                      {atom,{855,22},add_vertex}},
                  [{var,{855,33},'G0'},
                   {var,{855,37},'V'},
                   {block,0,
                       [{tuple,
                            {855,40},
                            [{atom,{855,41},external},{map,{855,50},[]}]}]}]}},
          {debug_line,856,323},
          {match,
              {856,5},
              {var,{856,5},'Map'},
              {map,
                  {856,15},
                  {var,{856,11},'Map0'},
                  [{map_field_assoc,
                       {856,18},
                       {var,{856,17},'V'},
                       {var,{856,20},'V'}}]}},
          {debug_line,857,324},
          {call,
              {857,5},
              {atom,{857,5},add_external_vertices},
              [{var,{857,27},'Vs'},{var,{857,31},'Map'},{var,{857,36},'G'}]}]},
     {clause,
         {858,1},
         [{nil,{858,23}},{var,{858,27},'Map'},{var,{858,32},'G'}],
         [],
         [{debug_line,859,325},
          {tuple,{859,5},[{var,{859,6},'Map'},{var,{859,10},'G'}]}]}]}.
{function,
    {861,1},
    build_digraph_1,4,
    [{clause,
         {861,1},
         [{var,{861,1},'_'},
          {var,{861,1},'_'},
          {var,{861,1},'_'},
          {var,{861,1},'_'}],
         [[{call,
               {861,1},
               {remote,
                   {861,1},
                   {atom,{861,1},fake},
                   {atom,{861,1},is_beam_bif_info}},
               []}]],
         [{debug_line,861,326},{atom,{861,1},ignore}]},
     {clause,
         {861,1},
         [{cons,
              {861,17},
              {tuple,{861,18},[{var,{861,19},'L'},{var,{861,21},'Blk'}]},
              {var,{861,26},'Bs'}},
          {var,{861,31},'G0'},
          {var,{861,35},'Map'},
          {var,{861,40},'St0'}],
         [],
         [{debug_line,862,327},
          {match,
              {862,5},
              {tuple,
                  {862,5},
                  [{atom,{862,5},b_blk},
                   {var,{862,5},'_'},
                   {var,{862,15},'Is'},
                   {var,{862,23},'Last'}]},
              {var,{862,31},'Blk'}},
          {debug_line,863,328},
          {match,
              {863,5},
              {var,{863,5},'Vtx'},
              {call,
                  {863,11},
                  {remote,
                      {863,11},
                      {atom,{863,11},erlang},
                      {atom,{863,11},map_get}},
                  [{var,{863,19},'L'},{var,{863,22},'Map'}]}},
          {debug_line,864,329},
          {match,
              {864,5},
              {tuple,{864,5},[{var,{864,6},'G'},{var,{864,8},'St'}]},
              {call,
                  {864,14},
                  {atom,{864,14},build_digraph_is},
                  [{var,{864,31},'Is'},
                   {var,{864,35},'Last'},
                   {var,{864,41},'Vtx'},
                   {var,{864,46},'Map'},
                   {var,{864,51},'G0'},
                   {var,{864,55},'St0'}]}},
          {debug_line,865,330},
          {call,
              {865,5},
              {atom,{865,5},build_digraph_1},
              [{var,{865,21},'Bs'},
               {var,{865,25},'G'},
               {var,{865,28},'Map'},
               {var,{865,33},'St'}]}]},
     {clause,
         {866,1},
         [{nil,{866,17}},
          {var,{866,21},'G'},
          {var,{866,24},'_Map'},
          {var,{866,30},'St'}],
         [],
         [{debug_line,867,331},
          {tuple,{867,5},[{var,{867,6},'G'},{var,{867,8},'St'}]}]}]}.
{function,
 {869,1},
 build_digraph_is,6,
 [{clause,
   {869,1},
   [{var,{869,1},'_'},
    {var,{869,1},'_'},
    {var,{869,1},'_'},
    {var,{869,1},'_'},
    {var,{869,1},'_'},
    {var,{869,1},'_'}],
   [[{call,
      {869,1},
      {remote,{869,1},{atom,{869,1},fake},{atom,{869,1},is_beam_bif_info}},
      []}]],
   [{debug_line,869,332},{atom,{869,1},ignore}]},
  {clause,
   {869,1},
   [{cons,
     {869,18},
     {match,
      {869,19},
      {tuple,
       {869,19},
       [{atom,{869,19},b_set},
        {var,{869,19},'_'},
        {var,{869,19},'_'},
        {atom,{869,29},phi},
        {var,{869,38},'Args0'}]},
      {var,{869,45},'I0'}},
     {var,{869,48},'Is'}},
    {var,{869,53},'Last'},
    {var,{869,59},'Vtx'},
    {var,{869,64},'Map'},
    {var,{869,69},'G'},
    {var,{869,72},'St'}],
   [],
   [{debug_line,870,333},
    {'case',
     {870,5},
     {var,{870,10},'Is'},
     [{clause,
       {871,9},
       [{cons,
         {871,9},
         {tuple,
          {871,10},
          [{atom,{871,10},b_set},
           {var,{871,10},'_'},
           {var,{871,10},'_'},
           {atom,{871,20},phi},
           {var,{871,10},'_'}]},
         {var,{871,25},'_'}}],
       [],
       [{debug_line,871,334},{call,{871,31},{atom,{871,31},not_possible},[]}]},
      {clause,
       {872,9},
       [{var,{872,9},'_'}],
       [],
       [{debug_line,872,335},{atom,{872,14},ok}]}]},
    {debug_line,874,336},
    {match,
     {874,5},
     {var,{874,5},'Args'},
     {lc,
      {874,12},
      {block,0,
       [{tuple,
         {874,13},
         [{var,{874,14},'V'},
          {'case',
           {874,16},
           {var,{874,21},'Map'},
           [{clause,
             {875,20},
             [{map,
               {875,20},
               [{map_field_exact,
                 {875,23},
                 {var,{875,22},'L'},
                 {var,{875,25},'Other'}}]}],
             [],
             [{debug_line,875,337},{var,{875,35},'Other'}]},
            {clause,
             {876,20},
             [{map,{876,20},[]}],
             [],
             [{debug_line,876,338},
              {call,{876,27},{atom,{876,27},not_possible},[]}]}]}]}]},
      [{block,0,[{debug_line,877,339},{atom,{877,34},true}]},
       {generate_strict,
        {877,30},
        {tuple,{877,24},[{var,{877,25},'V'},{var,{877,27},'L'}]},
        {var,{877,34},'Args0'}}]}},
    {debug_line,878,340},
    {match,
     {878,5},
     {var,{878,5},'I'},
     {block,
      {878,9},
      [{match,{878,9},{var,{878,9},rec26},{var,{878,9},'I0'}},
       {'case',
        {878,18},
        {var,{878,9},rec26},
        [{clause,
          {878,18},
          [{tuple,
            {878,18},
            [{atom,{878,18},b_set},
             {var,{878,18},'_'},
             {var,{878,18},'_'},
             {var,{878,18},'_'},
             {var,{878,18},'_'}]}],
          [],
          [{call,
            {878,18},
            {remote,
             {878,18},
             {atom,{878,18},erlang},
             {atom,{878,18},setelement}},
            [{integer,{878,18},5},
             {var,{878,9},rec26},
             {var,{878,23},'Args'}]}]},
         {clause,
          [{generated,true},{location,{878,18}}],
          [{var,[{generated,true},{location,{878,18}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{878,18}}],
            {remote,
             [{generated,true},{location,{878,18}}],
             {atom,[{generated,true},{location,{878,18}}],erlang},
             {atom,[{generated,true},{location,{878,18}}],error}},
            [{tuple,
              [{generated,true},{location,{878,18}}],
              [{atom,[{generated,true},{location,{878,18}}],badrecord},
               {var,{878,9},rec26}]}]}]}]}]}},
    {debug_line,879,341},
    {call,
     {879,5},
     {atom,{879,5},build_digraph_is_1},
     [{var,{879,24},'I'},
      {var,{879,27},'Is'},
      {var,{879,31},'Last'},
      {var,{879,37},'Vtx'},
      {var,{879,42},'Map'},
      {var,{879,47},'G'},
      {var,{879,50},'St'}]}]},
  {clause,
   {880,1},
   [{cons,
     {880,18},
     {match,
      {880,19},
      {tuple,
       {880,19},
       [{atom,{880,19},b_set},
        {var,{880,19},'_'},
        {var,{880,19},'_'},
        {var,{880,19},'_'},
        {var,{880,19},'_'}]},
      {var,{880,28},'I'}},
     {var,{880,30},'Is'}},
    {var,{880,35},'Last'},
    {var,{880,41},'Vtx'},
    {var,{880,46},'Map'},
    {var,{880,51},'G'},
    {var,{880,54},'St'}],
   [],
   [{debug_line,881,342},
    {'case',
     {881,5},
     {call,
      {881,10},
      {remote,
       {881,18},
       {atom,{881,10},beam_ssa},
       {atom,{881,19},no_side_effect}},
      [{var,{881,34},'I'}]},
     [{clause,
       {882,9},
       [{atom,{882,9},true}],
       [],
       [{debug_line,883,343},
        {call,
         {883,13},
         {atom,{883,13},build_digraph_is_1},
         [{var,{883,32},'I'},
          {var,{883,35},'Is'},
          {var,{883,39},'Last'},
          {var,{883,45},'Vtx'},
          {var,{883,50},'Map'},
          {var,{883,55},'G'},
          {var,{883,58},'St'}]}]},
      {clause,
       {884,9},
       [{atom,{884,9},false}],
       [],
       [{debug_line,885,344},
        {call,{885,13},{atom,{885,13},not_possible},[]}]}]}]},
  {clause,
   {887,1},
   [{nil,{887,18}},
    {var,{887,22},'Last'},
    {var,{887,28},'From'},
    {var,{887,34},'Map'},
    {var,{887,39},'G0'},
    {var,{887,43},'St'}],
   [],
   [{debug_line,888,345},
    {'case',
     {888,5},
     {var,{888,10},'Last'},
     [{clause,
       {889,9},
       [{tuple,
         {889,9},
         [{atom,{889,9},b_br},
          {var,{889,9},'_'},
          {tuple,{889,20},[{atom,{889,20},b_literal},{atom,{889,35},true}]},
          {var,{889,46},'To0'},
          {var,{889,55},'To0'}]}],
       [],
       [{debug_line,890,346},
        {match,
         {890,13},
         {var,{890,13},'To'},
         {call,
          {890,18},
          {remote,{890,18},{atom,{890,18},erlang},{atom,{890,18},map_get}},
          [{var,{890,26},'To0'},{var,{890,31},'Map'}]}},
        {debug_line,891,347},
        {match,
         {891,13},
         {var,{891,13},'G'},
         {call,
          {891,17},
          {remote,
           {891,29},
           {atom,{891,17},beam_digraph},
           {atom,{891,30},add_edge}},
          [{var,{891,39},'G0'},
           {var,{891,43},'From'},
           {var,{891,49},'To'},
           {atom,{891,53},next}]}},
        {debug_line,892,348},
        {tuple,{892,13},[{var,{892,14},'G'},{var,{892,16},'St'}]}]},
      {clause,
       {893,9},
       [{tuple,
         {893,9},
         [{atom,{893,9},b_br},
          {var,{893,9},'_'},
          {match,
           {893,20},
           {tuple,{893,20},[{atom,{893,20},b_var},{var,{893,20},'_'}]},
           {var,{893,29},'Bool'}},
          {var,{893,39},'Succ0'},
          {var,{893,50},'Fail0'}]}],
       [],
       [{debug_line,894,349},
        {match,
         {894,13},
         {map,
          {894,13},
          [{map_field_exact,
            {894,20},
            {var,{894,15},'Succ0'},
            {var,{894,22},'Succ'}},
           {map_field_exact,
            {894,32},
            {var,{894,27},'Fail0'},
            {var,{894,34},'Fail'}}]},
         {var,{894,42},'Map'}},
        {debug_line,895,350},
        {'case',
         {895,13},
         {call,
          {895,18},
          {remote,
           {895,30},
           {atom,{895,18},beam_digraph},
           {atom,{895,31},vertex}},
          [{var,{895,38},'G0'},{var,{895,42},'From'}]},
         [{clause,
           {896,17},
           [{tuple,
             {896,17},
             [{atom,{896,17},b_set},
              {var,{896,17},'_'},
              {var,{896,28},'Bool'},
              {var,{896,17},'_'},
              {var,{896,17},'_'}]}],
           [],
           [{debug_line,897,351},
            {match,
             {897,21},
             {var,{897,21},'G'},
             {call,
              {897,25},
              {atom,{897,25},add_succ_fail_edges},
              [{var,{897,45},'From'},
               {var,{897,51},'Succ'},
               {var,{897,57},'Fail'},
               {var,{897,63},'G0'}]}},
            {debug_line,898,352},
            {tuple,{898,21},[{var,{898,22},'G'},{var,{898,24},'St'}]}]},
          {clause,
           {899,17},
           [{tuple,
             {899,17},
             [{atom,{899,17},b_set},
              {var,{899,17},'_'},
              {var,{899,17},'_'},
              {var,{899,17},'_'},
              {var,{899,17},'_'}]}],
           [],
           [{debug_line,901,353},
            {call,{901,21},{atom,{901,21},not_possible},[]}]},
          {clause,
           {902,17},
           [{atom,{902,17},br}],
           [],
           [{debug_line,903,354},
            {match,
             {903,21},
             {var,{903,21},'G1'},
             {call,
              {903,26},
              {atom,{903,26},add_succ_fail_edges},
              [{var,{903,46},'From'},
               {var,{903,52},'Succ'},
               {var,{903,58},'Fail'},
               {var,{903,64},'G0'}]}},
            {debug_line,904,355},
            {match,
             {904,21},
             {var,{904,21},'G'},
             {call,
              {904,25},
              {remote,
               {904,37},
               {atom,{904,25},beam_digraph},
               {atom,{904,38},add_vertex}},
              [{var,{904,49},'G1'},
               {var,{904,53},'From'},
               {block,0,
                [{tuple,
                  {904,59},
                  [{atom,{904,60},br},{var,{904,63},'Bool'}]}]}]}},
            {debug_line,905,356},
            {tuple,{905,21},[{var,{905,22},'G'},{var,{905,24},'St'}]}]}]}]},
      {clause,
       {907,9},
       [{var,{907,9},'_'}],
       [],
       [{debug_line,908,357},
        {call,{908,13},{atom,{908,13},not_possible},[]}]}]}]}]}.
{function,
    {911,1},
    build_digraph_is_1,7,
    [{clause,
         {911,1},
         [{var,{911,1},'_'},
          {var,{911,1},'_'},
          {var,{911,1},'_'},
          {var,{911,1},'_'},
          {var,{911,1},'_'},
          {var,{911,1},'_'},
          {var,{911,1},'_'}],
         [[{call,
               {911,1},
               {remote,
                   {911,1},
                   {atom,{911,1},fake},
                   {atom,{911,1},is_beam_bif_info}},
               []}]],
         [{debug_line,911,358},{atom,{911,1},ignore}]},
     {clause,
         {911,1},
         [{var,{911,20},'I'},
          {var,{911,23},'Is'},
          {var,{911,27},'Last'},
          {var,{911,33},'Vtx'},
          {var,{911,38},'Map'},
          {var,{911,43},'G0'},
          {var,{911,47},'St0'}],
         [],
         [{debug_line,912,359},
          {match,
              {912,5},
              {var,{912,5},'G1'},
              {call,
                  {912,10},
                  {remote,
                      {912,22},
                      {atom,{912,10},beam_digraph},
                      {atom,{912,23},add_vertex}},
                  [{var,{912,34},'G0'},
                   {var,{912,38},'Vtx'},
                   {var,{912,43},'I'}]}},
          {debug_line,913,360},
          {'case',
              {913,5},
              {var,{913,10},'Is'},
              [{clause,
                   {914,9},
                   [{nil,{914,9}}],
                   [],
                   [{debug_line,915,361},
                    {call,
                        {915,13},
                        {atom,{915,13},build_digraph_is},
                        [{var,{915,30},'Is'},
                         {var,{915,34},'Last'},
                         {var,{915,40},'Vtx'},
                         {var,{915,45},'Map'},
                         {var,{915,50},'G1'},
                         {var,{915,54},'St0'}]}]},
               {clause,
                   {916,9},
                   [{cons,{916,9},{var,{916,10},'_'},{var,{916,12},'_'}}],
                   [],
                   [{debug_line,917,362},
                    {match,
                        {917,13},
                        {tuple,
                            {917,13},
                            [{var,{917,14},'NextVtx'},{var,{917,22},'St'}]},
                        {call,
                            {917,28},
                            {atom,{917,28},new_label},
                            [{var,{917,38},'St0'}]}},
                    {debug_line,918,363},
                    {match,
                        {918,13},
                        {var,{918,13},'G2'},
                        {call,
                            {918,18},
                            {remote,
                                {918,30},
                                {atom,{918,18},beam_digraph},
                                {atom,{918,31},add_vertex}},
                            [{var,{918,42},'G1'},
                             {var,{918,46},'NextVtx'},
                             {atom,{918,55},initial}]}},
                    {debug_line,919,364},
                    {match,
                        {919,13},
                        {var,{919,13},'G'},
                        {call,
                            {919,17},
                            {remote,
                                {919,29},
                                {atom,{919,17},beam_digraph},
                                {atom,{919,30},add_edge}},
                            [{var,{919,39},'G2'},
                             {var,{919,43},'Vtx'},
                             {var,{919,48},'NextVtx'},
                             {atom,{919,57},next}]}},
                    {debug_line,920,365},
                    {call,
                        {920,13},
                        {atom,{920,13},build_digraph_is},
                        [{var,{920,30},'Is'},
                         {var,{920,34},'Last'},
                         {var,{920,40},'NextVtx'},
                         {var,{920,49},'Map'},
                         {var,{920,54},'G'},
                         {var,{920,57},'St'}]}]}]}]}]}.
{function,
    {928,1},
    opt_digraph_top,3,
    [{clause,
         {928,1},
         [{var,{928,1},'_'},{var,{928,1},'_'},{var,{928,1},'_'}],
         [[{call,
               {928,1},
               {remote,
                   {928,1},
                   {atom,{928,1},fake},
                   {atom,{928,1},is_beam_bif_info}},
               []}]],
         [{debug_line,928,366},{atom,{928,1},ignore}]},
     {clause,
         {928,1},
         [{var,{928,17},'Arg'},{var,{928,22},'G0'},{var,{928,26},'St'}],
         [],
         [{debug_line,929,367},
          {match,
              {929,5},
              {var,{929,5},'I'},
              {call,
                  {929,9},
                  {atom,{929,9},get_def},
                  [{var,{929,17},'Arg'},
                   {var,{929,22},'G0'},
                   {var,{929,26},'St'}]}},
          {debug_line,930,368},
          {match,
              {930,5},
              {tuple,
                  {930,5},
                  [{atom,{930,5},b_set},
                   {var,{930,5},'_'},
                   {var,{930,31},'Dst'},
                   {tuple,
                       {930,15},
                       [{atom,{930,16},bif},{atom,{930,20},'=:='}]},
                   {cons,
                       {931,17},
                       {match,
                           {931,18},
                           {tuple,
                               {931,18},
                               [{atom,{931,18},b_var},{var,{931,18},'_'}]},
                           {var,{931,27},'Bool'}},
                       {cons,
                           {931,32},
                           {tuple,
                               {931,32},
                               [{atom,{931,32},b_literal},
                                {atom,{931,47},true}]},
                           {nil,{931,52}}}}]},
              {var,{931,57},'I'}},
          {debug_line,932,369},
          {match,
              {932,5},
              {tuple,
                  {932,5},
                  [{atom,{932,6},br},
                   {var,{932,9},'Succ'},
                   {var,{932,14},'Fail'}]},
              {call,
                  {932,22},
                  {atom,{932,22},get_targets},
                  [{var,{932,34},'Dst'},
                   {var,{932,39},'G0'},
                   {var,{932,43},'St'}]}},
          {debug_line,933,370},
          {match,
              {933,5},
              {var,{933,5},'G1'},
              {call,
                  {933,10},
                  {atom,{933,10},ensure_single_use},
                  [{var,{933,28},'Dst'},
                   {var,{933,33},'G0'},
                   {var,{933,37},'St'}]}},
          {debug_line,934,371},
          {match,
              {934,5},
              {var,{934,5},'G'},
              {call,
                  {934,9},
                  {atom,{934,9},convert_to_br_node},
                  [{var,{934,28},'I'},
                   {var,{934,31},'Succ'},
                   {var,{934,37},'G1'},
                   {var,{934,41},'St'}]}},
          {debug_line,935,372},
          {call,
              {935,5},
              {atom,{935,5},redirect_test},
              [{var,{935,19},'Bool'},
               {block,0,
                   [{tuple,
                        {935,25},
                        [{atom,{935,26},fail},{var,{935,31},'Fail'}]}]},
               {var,{935,38},'G'},
               {var,{935,41},'St'}]}]}]}.
{function,
 {937,1},
 do_opt_digraph,3,
 [{clause,
   {937,1},
   [{var,{937,1},'_'},{var,{937,1},'_'},{var,{937,1},'_'}],
   [[{call,
      {937,1},
      {remote,{937,1},{atom,{937,1},fake},{atom,{937,1},is_beam_bif_info}},
      []}]],
   [{debug_line,937,373},{atom,{937,1},ignore}]},
  {clause,
   {937,1},
   [{cons,{937,16},{var,{937,17},'A'},{var,{937,19},'As'}},
    {var,{937,24},'G0'},
    {var,{937,28},'St'}],
   [],
   [{debug_line,938,374},
    {match,
     {938,5},
     {var,{938,5},'I'},
     {call,
      {938,9},
      {atom,{938,9},get_def},
      [{var,{938,17},'A'},{var,{938,20},'G0'},{var,{938,24},'St'}]}},
    {debug_line,939,375},
    {'try',
     {939,5},
     [{call,
       {939,9},
       {atom,{939,9},opt_digraph_instr},
       [{var,{939,27},'I'},{var,{939,30},'G0'},{var,{939,34},'St'}]}],
     [{clause,
       {940,9},
       [{var,{940,9},'G'}],
       [],
       [{debug_line,941,376},
        {call,
         {941,13},
         {atom,{941,13},do_opt_digraph},
         [{var,{941,28},'As'},{var,{941,32},'G'},{var,{941,35},'St'}]}]}],
     [{clause,
       {943,9},
       [{tuple,
         {943,9},
         [{atom,{943,9},throw},
          {atom,{943,15},not_possible},
          {var,{943,15},'_'}]}],
       [[{op,
          {943,33},
          'not',
          {op,
           [{generated,true},{location,{943,37}}],
           'and',
           {op,
            [{generated,true},{location,{943,37}}],
            'orelse',
            {call,
             [{generated,true},{location,{943,37}}],
             {remote,
              [{generated,true},{location,{943,37}}],
              {atom,[{generated,true},{location,{943,37}}],erlang},
              {atom,[{generated,true},{location,{943,37}}],is_record}},
             [{var,{943,37},'St'},
              {atom,[{generated,true},{location,{943,37}}],st},
              {integer,[{generated,true},{location,{943,37}}],7}]},
            {atom,[{generated,true},{location,{943,37}}],fail}},
           {call,
            {943,37},
            {remote,{943,37},{atom,{943,37},erlang},{atom,{943,37},element}},
            [{integer,{943,37},7},{var,{943,37},'St'}]}}}]],
       [{debug_line,944,377},
        {call,
         {944,13},
         {atom,{944,13},do_opt_digraph},
         [{var,{944,28},'As'},{var,{944,32},'G0'},{var,{944,36},'St'}]}]}],
     []}]},
  {clause,
   {946,1},
   [{nil,{946,16}},{var,{946,20},'G'},{var,{946,23},'_St'}],
   [],
   [{debug_line,946,378},{var,{946,31},'G'}]}]}.
{function,
 {948,1},
 opt_digraph_instr,3,
 [{clause,
   {948,1},
   [{var,{948,1},'_'},{var,{948,1},'_'},{var,{948,1},'_'}],
   [[{call,
      {948,1},
      {remote,{948,1},{atom,{948,1},fake},{atom,{948,1},is_beam_bif_info}},
      []}]],
   [{debug_line,948,379},{atom,{948,1},ignore}]},
  {clause,
   {948,1},
   [{match,
     {948,19},
     {tuple,
      {948,19},
      [{atom,{948,19},b_set},
       {var,{948,19},'_'},
       {var,{948,30},'Dst'},
       {var,{948,19},'_'},
       {var,{948,19},'_'}]},
     {var,{948,35},'I'}},
    {var,{948,38},'G0'},
    {var,{948,42},'St'}],
   [],
   [{debug_line,951,380},
    {match,
     {951,5},
     {tuple,
      {951,5},
      [{atom,{951,6},br},{var,{951,9},'Succ'},{var,{951,14},'Fail'}]},
     {call,
      {951,22},
      {atom,{951,22},get_targets},
      [{var,{951,34},'Dst'},{var,{951,39},'G0'},{var,{951,43},'St'}]}},
    {debug_line,952,381},
    {match,
     {952,5},
     {var,{952,5},'G1'},
     {call,
      {952,10},
      {atom,{952,10},ensure_single_use},
      [{var,{952,28},'Dst'},{var,{952,33},'G0'},{var,{952,37},'St'}]}},
    {debug_line,953,382},
    {'case',
     {953,5},
     {var,{953,10},'I'},
     [{clause,
       {954,9},
       [{tuple,
         {954,9},
         [{atom,{954,9},b_set},
          {var,{954,9},'_'},
          {var,{954,9},'_'},
          {tuple,{954,19},[{atom,{954,20},bif},{atom,{954,24},'and'}]},
          {var,{954,36},'Args'}]}],
       [],
       [{debug_line,955,383},
        {match,
         {955,13},
         {var,{955,13},'G2'},
         {call,
          {955,18},
          {atom,{955,18},convert_to_br_node},
          [{var,{955,37},'I'},
           {var,{955,40},'Succ'},
           {var,{955,46},'G1'},
           {var,{955,50},'St'}]}},
        {debug_line,956,384},
        {match,
         {956,13},
         {tuple,{956,13},[{var,{956,14},'First'},{var,{956,20},'Second'}]},
         {call,
          {956,30},
          {atom,{956,30},order_args},
          [{var,{956,41},'Args'},{var,{956,47},'G2'},{var,{956,51},'St'}]}},
        {debug_line,957,385},
        {'case',
         {957,13},
         {var,{957,18},'St'},
         [{clause,
           {958,17},
           [{tuple,
             {958,17},
             [{atom,{958,17},st},
              {var,{958,17},'_'},
              {var,{958,17},'_'},
              {var,{958,17},'_'},
              {var,{958,17},'_'},
              {var,{958,17},'_'},
              {atom,{958,27},true}]}],
           [],
           [{debug_line,962,386},
            {call,
             {962,21},
             {atom,{962,21},ensure_no_failing_instructions},
             [{var,{962,52},'First'},
              {var,{962,59},'Second'},
              {var,{962,67},'G1'},
              {var,{962,71},'St'}]}]},
          {clause,
           {963,17},
           [{tuple,
             {963,17},
             [{atom,{963,17},st},
              {var,{963,17},'_'},
              {var,{963,17},'_'},
              {var,{963,17},'_'},
              {var,{963,17},'_'},
              {var,{963,17},'_'},
              {var,{963,17},'_'}]}],
           [],
           [{debug_line,964,387},{atom,{964,21},ok}]}]},
        {debug_line,966,388},
        {match,
         {966,13},
         {var,{966,13},'G'},
         {call,
          {966,17},
          {atom,{966,17},redirect_test},
          [{var,{966,31},'First'},
           {block,0,
            [{tuple,{966,38},[{atom,{966,39},fail},{var,{966,44},'Fail'}]}]},
           {var,{966,51},'G2'},
           {var,{966,55},'St'}]}},
        {debug_line,967,389},
        {call,
         {967,13},
         {atom,{967,13},redirect_test},
         [{var,{967,27},'Second'},
          {block,0,
           [{tuple,{967,35},[{atom,{967,36},fail},{var,{967,41},'Fail'}]}]},
          {var,{967,48},'G'},
          {var,{967,51},'St'}]}]},
      {clause,
       {968,9},
       [{tuple,
         {968,9},
         [{atom,{968,9},b_set},
          {var,{968,9},'_'},
          {var,{968,9},'_'},
          {tuple,{968,19},[{atom,{968,20},bif},{atom,{968,24},'or'}]},
          {var,{968,35},'Args'}]}],
       [],
       [{debug_line,969,390},
        {match,
         {969,13},
         {tuple,{969,13},[{var,{969,14},'First'},{var,{969,20},'Second'}]},
         {call,
          {969,30},
          {atom,{969,30},order_args},
          [{var,{969,41},'Args'},{var,{969,47},'G1'},{var,{969,51},'St'}]}},
        {debug_line,974,391},
        {call,
         {974,13},
         {atom,{974,13},ensure_no_failing_instructions},
         [{var,{974,44},'First'},
          {var,{974,51},'Second'},
          {var,{974,59},'G1'},
          {var,{974,63},'St'}]},
        {debug_line,976,392},
        {match,
         {976,13},
         {var,{976,13},'G2'},
         {call,
          {976,18},
          {atom,{976,18},convert_to_br_node},
          [{var,{976,37},'I'},
           {var,{976,40},'Succ'},
           {var,{976,46},'G1'},
           {var,{976,50},'St'}]}},
        {debug_line,983,393},
        {match,
         {983,13},
         {var,{983,13},'G'},
         {call,
          {983,17},
          {atom,{983,17},redirect_test},
          [{var,{983,31},'First'},
           {block,0,
            [{tuple,{983,38},[{atom,{983,39},succ},{var,{983,44},'Succ'}]}]},
           {var,{983,51},'G2'},
           {block,0,
            [{block,
              {983,55},
              [{match,{983,55},{var,{983,55},rec27},{var,{983,55},'St'}},
               {'case',
                {983,61},
                {var,{983,55},rec27},
                [{clause,
                  {983,61},
                  [{tuple,
                    {983,61},
                    [{atom,{983,61},st},
                     {var,{983,61},'_'},
                     {var,{983,61},'_'},
                     {var,{983,61},'_'},
                     {var,{983,61},'_'},
                     {var,{983,61},'_'},
                     {var,{983,61},'_'}]}],
                  [],
                  [{call,
                    {983,61},
                    {remote,
                     {983,61},
                     {atom,{983,61},erlang},
                     {atom,{983,61},setelement}},
                    [{integer,{983,61},7},
                     {var,{983,55},rec27},
                     {atom,{983,67},true}]}]},
                 {clause,
                  [{generated,true},{location,{983,61}}],
                  [{var,[{generated,true},{location,{983,61}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{983,61}}],
                    {remote,
                     [{generated,true},{location,{983,61}}],
                     {atom,[{generated,true},{location,{983,61}}],erlang},
                     {atom,[{generated,true},{location,{983,61}}],error}},
                    [{tuple,
                      [{generated,true},{location,{983,61}}],
                      [{atom,[{generated,true},{location,{983,61}}],badrecord},
                       {var,{983,55},rec27}]}]}]}]}]}]}]}},
        {debug_line,984,394},
        {call,
         {984,13},
         {atom,{984,13},redirect_test},
         [{var,{984,27},'Second'},
          {block,0,
           [{tuple,{984,35},[{atom,{984,36},fail},{var,{984,41},'Fail'}]}]},
          {var,{984,48},'G'},
          {var,{984,51},'St'}]}]},
      {clause,
       {985,9},
       [{tuple,
         {985,9},
         [{atom,{985,9},b_set},
          {var,{985,9},'_'},
          {var,{985,9},'_'},
          {tuple,{985,19},[{atom,{985,20},bif},{atom,{985,24},'xor'}]},
          {var,{985,9},'_'}]}],
       [],
       [{debug_line,988,395},{call,{988,13},{atom,{988,13},not_possible},[]}]},
      {clause,
       {989,9},
       [{tuple,
         {989,9},
         [{atom,{989,9},b_set},
          {var,{989,9},'_'},
          {var,{989,9},'_'},
          {tuple,{989,19},[{atom,{989,20},bif},{atom,{989,24},'not'}]},
          {var,{989,9},'_'}]}],
       [],
       [{debug_line,993,396},{call,{993,13},{atom,{993,13},not_possible},[]}]},
      {clause,
       {994,9},
       [{tuple,
         {994,9},
         [{atom,{994,9},b_set},
          {var,{994,9},'_'},
          {var,{994,27},'Bool'},
          {atom,{994,19},phi},
          {var,{994,9},'_'}]}],
       [],
       [{debug_line,995,397},
        {match,
         {995,13},
         {var,{995,13},'Vtx'},
         {call,
          {995,19},
          {atom,{995,19},get_vertex},
          [{var,{995,30},'Bool'},{var,{995,36},'St'}]}},
        {debug_line,996,398},
        {match,
         {996,13},
         {var,{996,13},'G2'},
         {call,
          {996,18},
          {atom,{996,18},del_out_edges},
          [{var,{996,32},'Vtx'},{var,{996,37},'G1'}]}},
        {debug_line,997,399},
        {match,
         {997,13},
         {var,{997,13},'G'},
         {call,
          {997,17},
          {remote,
           {997,29},
           {atom,{997,17},beam_digraph},
           {atom,{997,30},add_edge}},
          [{var,{997,39},'G2'},
           {var,{997,43},'Vtx'},
           {var,{997,48},'Succ'},
           {atom,{997,54},next}]}},
        {debug_line,998,400},
        {call,
         {998,13},
         {atom,{998,13},redirect_test},
         [{var,{998,27},'Bool'},
          {block,0,
           [{tuple,{998,33},[{atom,{998,34},fail},{var,{998,39},'Fail'}]}]},
          {var,{998,46},'G'},
          {var,{998,49},'St'}]}]},
      {clause,
       {999,9},
       [{tuple,
         {999,9},
         [{atom,{999,9},b_set},
          {var,{999,9},'_'},
          {var,{999,9},'_'},
          {var,{999,9},'_'},
          {var,{999,9},'_'}]}],
       [],
       [{debug_line,1000,401},{var,{1000,13},'G1'}]}]}]}]}.
{function,
    {1003,1},
    ensure_single_use,3,
    [{clause,
         {1003,1},
         [{var,{1003,1},'_'},{var,{1003,1},'_'},{var,{1003,1},'_'}],
         [[{call,
               {1003,1},
               {remote,
                   {1003,1},
                   {atom,{1003,1},fake},
                   {atom,{1003,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1003,402},{atom,{1003,1},ignore}]},
     {clause,
         {1003,1},
         [{var,{1003,19},'Bool'},
          {var,{1003,25},'G'},
          {match,
              {1003,28},
              {tuple,
                  {1003,28},
                  [{atom,{1003,28},st},
                   {var,{1003,28},'_'},
                   {var,{1003,28},'_'},
                   {var,{1003,28},'_'},
                   {var,{1003,28},'_'},
                   {var,{1003,37},'U'},
                   {var,{1003,28},'_'}]},
              {var,{1003,40},'St'}}],
         [],
         [{debug_line,1004,403},
          {'case',
              {1004,5},
              {call,
                  {1004,10},
                  {remote,
                      {1004,10},
                      {atom,{1004,10},erlang},
                      {atom,{1004,10},map_get}},
                  [{var,{1004,18},'Bool'},{var,{1004,24},'U'}]},
              [{clause,
                   {1005,9},
                   [{cons,{1005,9},{var,{1005,10},'_'},{nil,{1005,11}}}],
                   [],
                   [{debug_line,1006,404},{var,{1006,13},'G'}]},
               {clause,
                   {1007,9},
                   [{var,{1007,9},'Uses'}],
                   [],
                   [{debug_line,1008,405},
                    {match,
                        {1008,13},
                        {var,{1008,13},'Vtx'},
                        {call,
                            {1008,19},
                            {atom,{1008,19},get_vertex},
                            [{var,{1008,30},'Bool'},{var,{1008,36},'St'}]}},
                    {debug_line,1009,406},
                    {call,
                        {1009,13},
                        {atom,{1009,13},ensure_single_use_1},
                        [{var,{1009,33},'Bool'},
                         {var,{1009,39},'Vtx'},
                         {var,{1009,44},'Uses'},
                         {var,{1009,50},'G'}]}]}]}]}]}.
{function,
 {1012,1},
 ensure_single_use_1,4,
 [{clause,
   {1012,1},
   [{var,{1012,1},'_'},
    {var,{1012,1},'_'},
    {var,{1012,1},'_'},
    {var,{1012,1},'_'}],
   [[{call,
      {1012,1},
      {remote,{1012,1},{atom,{1012,1},fake},{atom,{1012,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1012,407},{atom,{1012,1},ignore}]},
  {clause,
   {1012,1},
   [{var,{1012,21},'Bool'},
    {var,{1012,27},'Vtx'},
    {var,{1012,32},'Uses'},
    {var,{1012,38},'G'}],
   [],
   [{debug_line,1013,408},
    {match,
     {1013,5},
     {var,{1013,5},'Fail'},
     {'case',
      {1013,12},
      {call,
       {1013,17},
       {atom,{1013,17},get_targets},
       [{var,{1013,29},'Vtx'},{var,{1013,34},'G'}]},
      [{clause,
        {1014,16},
        [{tuple,
          {1014,16},
          [{atom,{1014,17},br},{var,{1014,20},'_'},{var,{1014,22},'Fail0'}]}],
        [],
        [{debug_line,1014,409},{var,{1014,32},'Fail0'}]},
       {clause,
        {1015,16},
        [{var,{1015,16},'_'}],
        [],
        [{debug_line,1015,410},
         {call,{1015,21},{atom,{1015,21},not_possible},[]}]}]}},
    {debug_line,1017,411},
    {'case',
     {1017,5},
     {call,
      {1017,10},
      {remote,{1017,10},{atom,{1017,10},lists},{atom,{1017,10},partition}},
      [{block,0,
        [{'fun',
          {1017,20},
          {clauses,
           [{clause,
             {1017,23},
             [{tuple,
               {1017,24},
               [{var,{1017,25},'L'},
                {tuple,
                 {1017,27},
                 [{atom,{1017,27},b_set},
                  {var,{1017,27},'_'},
                  {var,{1017,27},'_'},
                  {var,{1017,27},'_'},
                  {var,{1017,27},'_'}]}]}],
             [[{op,
                {1017,45},
                '=:=',
                {var,{1017,43},'L'},
                {var,{1017,49},'Fail'}}]],
             [{atom,{1017,57},true}]},
            {clause,
             {1018,23},
             [{var,{1018,24},'_'}],
             [],
             [{debug_line,1018,412},{atom,{1018,30},false}]}]}}]},
       {var,{1019,25},'Uses'}]},
     [{clause,
       {1020,9},
       [{tuple,
         {1020,9},
         [{cons,{1020,10},{var,{1020,11},'_'},{nil,{1020,12}}},
          {cons,{1020,14},{var,{1020,15},'_'},{nil,{1020,16}}}]}],
       [],
       [{debug_line,1021,413},
        {'case',
         {1021,13},
         {tuple,
          {1021,18},
          [{call,
            {1021,19},
            {remote,
             {1021,31},
             {atom,{1021,19},beam_digraph},
             {atom,{1021,32},vertex}},
            [{var,{1021,39},'G'},{var,{1021,42},'Fail'}]},
           {call,
            {1022,19},
            {remote,
             {1022,31},
             {atom,{1022,19},beam_digraph},
             {atom,{1022,32},in_edges}},
            [{var,{1022,41},'G'},{var,{1022,44},'Fail'}]}]},
         [{clause,
           {1023,17},
           [{tuple,
             {1023,17},
             [{tuple,
               {1023,18},
               [{atom,{1023,19},external},{var,{1023,28},'Bs0'}]},
              {cons,{1023,34},{var,{1023,35},'_'},{nil,{1023,36}}}]}],
           [],
           [{debug_line,1029,414},
            {match,
             {1029,21},
             {var,{1029,21},'Bs'},
             {map,
              {1029,29},
              {var,{1029,26},'Bs0'},
              [{map_field_assoc,
                {1029,36},
                {var,{1029,31},'Bool'},
                {tuple,
                 {1029,39},
                 [{atom,{1029,39},b_literal},{atom,{1029,54},false}]}}]}},
            {debug_line,1030,415},
            {call,
             {1030,21},
             {remote,
              {1030,33},
              {atom,{1030,21},beam_digraph},
              {atom,{1030,34},add_vertex}},
             [{var,{1030,45},'G'},
              {var,{1030,48},'Fail'},
              {block,0,
               [{tuple,
                 {1030,54},
                 [{atom,{1030,55},external},{var,{1030,64},'Bs'}]}]}]}]},
          {clause,
           {1031,17},
           [{var,{1031,17},'_'}],
           [],
           [{debug_line,1032,416},
            {call,{1032,21},{atom,{1032,21},not_possible},[]}]}]}]},
      {clause,
       {1034,9},
       [{tuple,{1034,9},[{var,{1034,10},'_'},{var,{1034,12},'_'}]}],
       [],
       [{debug_line,1035,417},
        {call,{1035,13},{atom,{1035,13},not_possible},[]}]}]}]}]}.
{function,
    {1038,1},
    convert_to_br_node,4,
    [{clause,
         {1038,1},
         [{var,{1038,1},'_'},
          {var,{1038,1},'_'},
          {var,{1038,1},'_'},
          {var,{1038,1},'_'}],
         [[{call,
               {1038,1},
               {remote,
                   {1038,1},
                   {atom,{1038,1},fake},
                   {atom,{1038,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1038,418},{atom,{1038,1},ignore}]},
     {clause,
         {1038,1},
         [{var,{1038,20},'I'},
          {var,{1038,23},'Target'},
          {var,{1038,31},'G0'},
          {var,{1038,35},'St'}],
         [],
         [{debug_line,1039,419},
          {match,
              {1039,5},
              {var,{1039,5},'Vtx'},
              {call,
                  {1039,11},
                  {atom,{1039,11},get_vertex},
                  [{var,{1039,22},'I'},{var,{1039,25},'St'}]}},
          {debug_line,1040,420},
          {match,
              {1040,5},
              {var,{1040,5},'G1'},
              {call,
                  {1040,10},
                  {atom,{1040,10},del_out_edges},
                  [{var,{1040,24},'Vtx'},{var,{1040,29},'G0'}]}},
          {debug_line,1041,421},
          {match,
              {1041,5},
              {var,{1041,5},'G'},
              {call,
                  {1041,9},
                  {remote,
                      {1041,21},
                      {atom,{1041,9},beam_digraph},
                      {atom,{1041,22},add_vertex}},
                  [{var,{1041,33},'G1'},
                   {var,{1041,37},'Vtx'},
                   {atom,{1041,42},br}]}},
          {debug_line,1042,422},
          {call,
              {1042,5},
              {remote,
                  {1042,17},
                  {atom,{1042,5},beam_digraph},
                  {atom,{1042,18},add_edge}},
              [{var,{1042,27},'G'},
               {var,{1042,30},'Vtx'},
               {var,{1042,35},'Target'},
               {atom,{1042,43},next}]}]}]}.
{function,
 {1054,1},
 ensure_no_failing_instructions,4,
 [{clause,
   {1054,1},
   [{var,{1054,1},'_'},
    {var,{1054,1},'_'},
    {var,{1054,1},'_'},
    {var,{1054,1},'_'}],
   [[{call,
      {1054,1},
      {remote,{1054,1},{atom,{1054,1},fake},{atom,{1054,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1054,423},{atom,{1054,1},ignore}]},
  {clause,
   {1054,1},
   [{var,{1054,32},'First'},
    {var,{1054,39},'Second'},
    {var,{1054,47},'G'},
    {var,{1054,50},'St'}],
   [],
   [{debug_line,1055,424},
    {match,
     {1055,5},
     {var,{1055,5},'Vs'},
     {call,
      {1055,10},
      {atom,{1055,10},covered},
      [{block,0,
        [{call,
          {1055,18},
          {atom,{1055,18},get_vertex},
          [{var,{1055,29},'First'},{var,{1055,36},'St'}]}]},
       {block,0,
        [{call,
          {1055,41},
          {atom,{1055,41},get_vertex},
          [{var,{1055,52},'Second'},{var,{1055,60},'St'}]}]},
       {var,{1055,65},'G'}]}},
    {debug_line,1056,425},
    {'case',
     {1056,5},
     {call,
      {1056,10},
      {remote,{1056,10},{atom,{1056,10},lists},{atom,{1056,10},any}},
      [{block,0,
        [{'fun',
          {1056,14},
          {clauses,
           [{clause,
             {1056,17},
             [{var,{1056,18},'V'}],
             [],
             [{debug_line,1057,426},
              {'case',
               {1057,22},
               {call,
                {1057,27},
                {remote,
                 {1057,39},
                 {atom,{1057,27},beam_digraph},
                 {atom,{1057,40},vertex}},
                [{var,{1057,47},'G'},{var,{1057,50},'V'}]},
               [{clause,
                 {1058,26},
                 [{tuple,
                   {1058,26},
                   [{atom,{1058,26},b_set},
                    {var,{1058,26},'_'},
                    {var,{1058,26},'_'},
                    {var,{1058,36},'Op'},
                    {var,{1058,26},'_'}]}],
                 [],
                 [{debug_line,1059,427},
                  {call,
                   {1059,30},
                   {atom,{1059,30},can_fail},
                   [{var,{1059,39},'Op'},
                    {var,{1059,43},'V'},
                    {var,{1059,46},'G'}]}]},
                {clause,
                 {1060,26},
                 [{var,{1060,26},'_'}],
                 [],
                 [{debug_line,1061,428},{atom,{1061,30},false}]}]}]}]}}]},
       {var,{1063,19},'Vs'}]},
     [{clause,
       {1064,9},
       [{atom,{1064,9},true}],
       [],
       [{debug_line,1064,429},
        {call,{1064,17},{atom,{1064,17},not_possible},[]}]},
      {clause,
       {1065,9},
       [{atom,{1065,9},false}],
       [],
       [{debug_line,1065,430},{atom,{1065,18},ok}]}]}]}]}.
{function,
    {1068,1},
    can_fail,3,
    [{clause,
         {1068,1},
         [{var,{1068,1},'_'},{var,{1068,1},'_'},{var,{1068,1},'_'}],
         [[{call,
               {1068,1},
               {remote,
                   {1068,1},
                   {atom,{1068,1},fake},
                   {atom,{1068,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1068,431},{atom,{1068,1},ignore}]},
     {clause,
         {1068,1},
         [{tuple,{1068,10},[{atom,{1068,11},succeeded},{var,{1068,21},'_'}]},
          {var,{1068,25},'V'},
          {var,{1068,28},'G'}],
         [],
         [{debug_line,1068,432},
          {op,{1068,34},
              'not',
              {call,
                  {1068,38},
                  {atom,{1068,38},eaten_by_phi},
                  [{var,{1068,51},'V'},{var,{1068,54},'G'}]}}]},
     {clause,
         {1069,1},
         [{atom,{1069,10},put_map},{var,{1069,19},'_'},{var,{1069,22},'_'}],
         [],
         [{debug_line,1069,433},{atom,{1069,28},true}]},
     {clause,
         {1070,1},
         [{var,{1070,10},'_'},{var,{1070,13},'V'},{var,{1070,16},'G'}],
         [],
         [{debug_line,1071,434},
          {'case',
              {1071,5},
              {call,
                  {1071,10},
                  {atom,{1071,10},get_targets},
                  [{var,{1071,22},'V'},{var,{1071,25},'G'}]},
              [{clause,
                   {1072,9},
                   [{tuple,
                        {1072,9},
                        [{atom,{1072,10},br},
                         {var,{1072,13},'_Succ'},
                         {var,{1072,19},'Fail'}]}],
                   [],
                   [{debug_line,1073,435},
                    {'case',
                        {1073,13},
                        {call,
                            {1073,18},
                            {atom,{1073,18},follow_branch},
                            [{var,{1073,32},'G'},{var,{1073,35},'Fail'}]},
                        [{clause,
                             {1074,17},
                             [{tuple,
                                  {1074,17},
                                  [{atom,{1074,18},external},
                                   {var,{1074,27},'_'}]}],
                             [],
                             [{debug_line,1075,436},{atom,{1075,21},true}]},
                         {clause,
                             {1076,17},
                             [{var,{1076,17},'_'}],
                             [],
                             [{debug_line,1077,437},
                              {atom,{1077,21},false}]}]}]},
               {clause,
                   {1079,9},
                   [{var,{1079,9},'_'}],
                   [],
                   [{debug_line,1080,438},{atom,{1080,13},false}]}]}]}]}.
{function,
    {1083,1},
    eaten_by_phi,2,
    [{clause,
         {1083,1},
         [{var,{1083,1},'_'},{var,{1083,1},'_'}],
         [[{call,
               {1083,1},
               {remote,
                   {1083,1},
                   {atom,{1083,1},fake},
                   {atom,{1083,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1083,439},{atom,{1083,1},ignore}]},
     {clause,
         {1083,1},
         [{var,{1083,14},'V'},{var,{1083,17},'G'}],
         [],
         [{debug_line,1084,440},
          {match,
              {1084,5},
              {tuple,
                  {1084,5},
                  [{atom,{1084,6},br},
                   {var,{1084,9},'_'},
                   {var,{1084,11},'Fail'}]},
              {call,
                  {1084,19},
                  {atom,{1084,19},get_targets},
                  [{var,{1084,31},'V'},{var,{1084,34},'G'}]}},
          {debug_line,1085,441},
          {'case',
              {1085,5},
              {call,
                  {1085,10},
                  {atom,{1085,10},follow_branch},
                  [{var,{1085,24},'G'},{var,{1085,27},'Fail'}]},
              [{clause,
                   {1086,9},
                   [{tuple,
                        {1086,9},
                        [{atom,{1086,9},b_set},
                         {var,{1086,9},'_'},
                         {var,{1086,9},'_'},
                         {atom,{1086,19},phi},
                         {var,{1086,9},'_'}]}],
                   [],
                   [{debug_line,1087,442},{atom,{1087,13},true}]},
               {clause,
                   {1088,9},
                   [{var,{1088,9},'_'}],
                   [],
                   [{debug_line,1089,443},{atom,{1089,13},false}]}]}]}]}.
{function,
    {1092,1},
    follow_branch,2,
    [{clause,
         {1092,1},
         [{var,{1092,1},'_'},{var,{1092,1},'_'}],
         [[{call,
               {1092,1},
               {remote,
                   {1092,1},
                   {atom,{1092,1},fake},
                   {atom,{1092,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1092,444},{atom,{1092,1},ignore}]},
     {clause,
         {1092,1},
         [{var,{1092,15},'G'},{var,{1092,18},'Br'}],
         [],
         [{debug_line,1093,445},
          {'case',
              {1093,5},
              {call,
                  {1093,10},
                  {remote,
                      {1093,22},
                      {atom,{1093,10},beam_digraph},
                      {atom,{1093,23},vertex}},
                  [{var,{1093,30},'G'},{var,{1093,33},'Br'}]},
              [{clause,
                   {1094,9},
                   [{atom,{1094,9},br}],
                   [],
                   [{debug_line,1095,446},
                    {match,
                        {1095,13},
                        {cons,{1095,13},{var,{1095,14},'To'},{nil,{1095,16}}},
                        {call,
                            {1095,20},
                            {remote,
                                {1095,32},
                                {atom,{1095,20},beam_digraph},
                                {atom,{1095,33},out_neighbours}},
                            [{var,{1095,48},'G'},{var,{1095,51},'Br'}]}},
                    {debug_line,1096,447},
                    {call,
                        {1096,13},
                        {remote,
                            {1096,25},
                            {atom,{1096,13},beam_digraph},
                            {atom,{1096,26},vertex}},
                        [{var,{1096,33},'G'},{var,{1096,36},'To'}]}]},
               {clause,
                   {1097,9},
                   [{var,{1097,9},'_'}],
                   [],
                   [{debug_line,1098,448},{atom,{1098,13},none}]}]}]}]}.
{function,
    {1106,1},
    order_args,3,
    [{clause,
         {1106,1},
         [{var,{1106,1},'_'},{var,{1106,1},'_'},{var,{1106,1},'_'}],
         [[{call,
               {1106,1},
               {remote,
                   {1106,1},
                   {atom,{1106,1},fake},
                   {atom,{1106,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1106,449},{atom,{1106,1},ignore}]},
     {clause,
         {1106,1},
         [{cons,
              {1106,12},
              {match,
                  {1106,13},
                  {tuple,
                      {1106,13},
                      [{atom,{1106,13},b_var},{var,{1106,13},'_'}]},
                  {var,{1106,22},'VarA'}},
              {cons,
                  {1106,27},
                  {match,
                      {1106,27},
                      {tuple,
                          {1106,27},
                          [{atom,{1106,27},b_var},{var,{1106,27},'_'}]},
                      {var,{1106,36},'VarB'}},
                  {nil,{1106,40}}}},
          {var,{1106,43},'G'},
          {var,{1106,46},'St'}],
         [],
         [{debug_line,1107,450},
          {match,
              {1107,5},
              {tuple,{1107,5},[{var,{1107,6},'VA'},{var,{1107,9},'VB'}]},
              {tuple,
                  {1107,15},
                  [{call,
                       {1107,16},
                       {atom,{1107,16},get_vertex},
                       [{var,{1107,27},'VarA'},{var,{1107,33},'St'}]},
                   {call,
                       {1107,37},
                       {atom,{1107,37},get_vertex},
                       [{var,{1107,48},'VarB'},{var,{1107,54},'St'}]}]}},
          {debug_line,1108,451},
          {'case',
              {1108,5},
              {call,
                  {1108,10},
                  {remote,
                      {1108,22},
                      {atom,{1108,10},beam_digraph},
                      {atom,{1108,23},is_path}},
                  [{var,{1108,31},'G'},
                   {var,{1108,34},'VA'},
                   {var,{1108,38},'VB'}]},
              [{clause,
                   {1109,9},
                   [{atom,{1109,9},true}],
                   [],
                   [{debug_line,1112,452},
                    {tuple,
                        {1112,13},
                        [{var,{1112,14},'VarA'},{var,{1112,19},'VarB'}]}]},
               {clause,
                   {1113,9},
                   [{atom,{1113,9},false}],
                   [],
                   [{debug_line,1116,453},
                    {match,
                        {1116,13},
                        {atom,{1116,13},true},
                        {call,
                            {1116,20},
                            {remote,
                                {1116,32},
                                {atom,{1116,20},beam_digraph},
                                {atom,{1116,33},is_path}},
                            [{var,{1116,41},'G'},
                             {var,{1116,44},'VB'},
                             {var,{1116,48},'VA'}]}},
                    {debug_line,1117,454},
                    {tuple,
                        {1117,13},
                        [{var,{1117,14},'VarB'},{var,{1117,19},'VarB'}]}]}]}]},
     {clause,
         {1119,1},
         [{var,{1119,12},'_Args'},{var,{1119,19},'_G'},{var,{1119,23},'_St'}],
         [],
         [{debug_line,1122,455},
          {call,{1122,5},{atom,{1122,5},not_possible},[]}]}]}.
{function,
    {1124,1},
    redirect_test,4,
    [{clause,
         {1124,1},
         [{var,{1124,1},'_'},
          {var,{1124,1},'_'},
          {var,{1124,1},'_'},
          {var,{1124,1},'_'}],
         [[{call,
               {1124,1},
               {remote,
                   {1124,1},
                   {atom,{1124,1},fake},
                   {atom,{1124,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1124,456},{atom,{1124,1},ignore}]},
     {clause,
         {1124,1},
         [{var,{1124,15},'Bool'},
          {var,{1124,21},'SuccFail'},
          {var,{1124,31},'G0'},
          {var,{1124,35},'St'}],
         [],
         [{debug_line,1125,457},
          {match,
              {1125,5},
              {var,{1125,5},'V'},
              {call,
                  {1125,9},
                  {atom,{1125,9},get_vertex},
                  [{var,{1125,20},'Bool'},{var,{1125,26},'St'}]}},
          {debug_line,1126,458},
          {match,
              {1126,5},
              {var,{1126,5},'I'},
              {call,
                  {1126,9},
                  {atom,{1126,9},get_def},
                  [{var,{1126,17},'Bool'},
                   {var,{1126,23},'G0'},
                   {var,{1126,27},'St'}]}},
          {debug_line,1127,459},
          {'case',
              {1127,5},
              {var,{1127,10},'I'},
              [{clause,
                   {1128,9},
                   [{tuple,
                        {1128,9},
                        [{atom,{1128,9},b_set},
                         {var,{1128,9},'_'},
                         {var,{1128,9},'_'},
                         {atom,{1128,19},phi},
                         {var,{1128,28},'Args'}]}],
                   [],
                   [{debug_line,1129,460},
                    {match,
                        {1129,13},
                        {var,{1129,13},'G'},
                        {call,
                            {1129,17},
                            {atom,{1129,17},ensure_single_use},
                            [{var,{1129,35},'Bool'},
                             {var,{1129,41},'G0'},
                             {var,{1129,45},'St'}]}},
                    {debug_line,1130,461},
                    {call,
                        {1130,13},
                        {atom,{1130,13},redirect_phi},
                        [{var,{1130,26},'Bool'},
                         {var,{1130,32},'Args'},
                         {var,{1130,38},'SuccFail'},
                         {var,{1130,48},'G'},
                         {var,{1130,51},'St'}]}]},
               {clause,
                   {1131,9},
                   [{tuple,
                        {1131,9},
                        [{atom,{1131,9},b_set},
                         {var,{1131,9},'_'},
                         {var,{1131,9},'_'},
                         {var,{1131,9},'_'},
                         {var,{1131,9},'_'}]}],
                   [],
                   [{debug_line,1132,462},
                    {match,
                        {1132,13},
                        {var,{1132,13},'G1'},
                        {call,
                            {1132,18},
                            {atom,{1132,18},redirect_test_1},
                            [{var,{1132,34},'V'},
                             {var,{1132,37},'SuccFail'},
                             {var,{1132,47},'G0'}]}},
                    {debug_line,1133,463},
                    {match,
                        {1133,13},
                        {var,{1133,13},'G'},
                        {call,
                            {1133,17},
                            {atom,{1133,17},ensure_single_use},
                            [{var,{1133,35},'Bool'},
                             {var,{1133,41},'G1'},
                             {var,{1133,45},'St'}]}},
                    {debug_line,1134,464},
                    {call,
                        {1134,13},
                        {atom,{1134,13},do_opt_digraph},
                        [{block,0,
                             [{cons,
                                  {1134,28},
                                  {var,{1134,29},'Bool'},
                                  {nil,{1134,33}}}]},
                         {var,{1134,36},'G'},
                         {var,{1134,39},'St'}]}]}]}]}]}.
{function,
    {1137,1},
    redirect_test_1,3,
    [{clause,
         {1137,1},
         [{var,{1137,1},'_'},{var,{1137,1},'_'},{var,{1137,1},'_'}],
         [[{call,
               {1137,1},
               {remote,
                   {1137,1},
                   {atom,{1137,1},fake},
                   {atom,{1137,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1137,465},{atom,{1137,1},ignore}]},
     {clause,
         {1137,1},
         [{var,{1137,17},'V'},{var,{1137,20},'SuccFail'},{var,{1137,30},'G'}],
         [],
         [{debug_line,1138,466},
          {'case',
              {1138,5},
              {call,
                  {1138,10},
                  {atom,{1138,10},get_targets},
                  [{var,{1138,22},'V'},{var,{1138,25},'G'}]},
              [{clause,
                   {1139,9},
                   [{tuple,
                        {1139,9},
                        [{atom,{1139,10},br},
                         {var,{1139,13},'_Succ'},
                         {var,{1139,19},'Fail'}]}],
                   [],
                   [{debug_line,1144,467},
                    {'case',
                        {1144,13},
                        {var,{1144,18},'SuccFail'},
                        [{clause,
                             {1145,17},
                             [{tuple,
                                  {1145,17},
                                  [{atom,{1145,18},fail},
                                   {var,{1145,23},'Fail'}]}],
                             [],
                             [{debug_line,1145,468},{var,{1145,32},'G'}]},
                         {clause,
                             {1146,17},
                             [{tuple,
                                  {1146,17},
                                  [{atom,{1146,18},fail},
                                   {var,{1146,23},'_'}]}],
                             [],
                             [{debug_line,1146,469},
                              {call,
                                  {1146,29},
                                  {atom,{1146,29},not_possible},
                                  []}]},
                         {clause,
                             {1147,17},
                             [{tuple,
                                  {1147,17},
                                  [{atom,{1147,18},succ},
                                   {var,{1147,23},'_'}]}],
                             [],
                             [{debug_line,1147,470},
                              {call,
                                  {1147,29},
                                  {atom,{1147,29},not_possible},
                                  []}]}]}]},
               {clause,
                   {1149,9},
                   [{tuple,
                        {1149,9},
                        [{atom,{1149,10},br},{var,{1149,13},'Next'}]}],
                   [],
                   [{debug_line,1150,471},
                    {'case',
                        {1150,13},
                        {var,{1150,18},'SuccFail'},
                        [{clause,
                             {1151,17},
                             [{tuple,
                                  {1151,17},
                                  [{atom,{1151,18},succ},
                                   {var,{1151,23},'Succ'}]}],
                             [],
                             [{debug_line,1152,472},
                              {call,
                                  {1152,21},
                                  {atom,{1152,21},add_succ_fail_edges},
                                  [{var,{1152,41},'V'},
                                   {var,{1152,44},'Succ'},
                                   {var,{1152,50},'Next'},
                                   {var,{1152,56},'G'}]}]},
                         {clause,
                             {1153,17},
                             [{tuple,
                                  {1153,17},
                                  [{atom,{1153,18},fail},
                                   {var,{1153,23},'Fail'}]}],
                             [],
                             [{debug_line,1154,473},
                              {call,
                                  {1154,21},
                                  {atom,{1154,21},add_succ_fail_edges},
                                  [{var,{1154,41},'V'},
                                   {var,{1154,44},'Next'},
                                   {var,{1154,50},'Fail'},
                                   {var,{1154,56},'G'}]}]}]}]}]}]}]}.
{function,
    {1158,1},
    redirect_phi,5,
    [{clause,
         {1158,1},
         [{var,{1158,1},'_'},
          {var,{1158,1},'_'},
          {var,{1158,1},'_'},
          {var,{1158,1},'_'},
          {var,{1158,1},'_'}],
         [[{call,
               {1158,1},
               {remote,
                   {1158,1},
                   {atom,{1158,1},fake},
                   {atom,{1158,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1158,474},{atom,{1158,1},ignore}]},
     {clause,
         {1158,1},
         [{var,{1158,14},'Phi'},
          {var,{1158,19},'Args'},
          {var,{1158,25},'SuccFail'},
          {var,{1158,35},'G0'},
          {var,{1158,39},'St'}],
         [],
         [{debug_line,1159,475},
          {match,
              {1159,5},
              {var,{1159,5},'PhiVtx'},
              {call,
                  {1159,14},
                  {atom,{1159,14},get_vertex},
                  [{var,{1159,25},'Phi'},{var,{1159,30},'St'}]}},
          {debug_line,1160,476},
          {match,
              {1160,5},
              {var,{1160,5},'G'},
              {call,
                  {1160,9},
                  {remote,
                      {1160,21},
                      {atom,{1160,9},beam_digraph},
                      {atom,{1160,22},add_vertex}},
                  [{var,{1160,33},'G0'},
                   {var,{1160,37},'PhiVtx'},
                   {atom,{1160,45},br}]}},
          {debug_line,1161,477},
          {call,
              {1161,5},
              {atom,{1161,5},redirect_phi_1},
              [{var,{1161,20},'PhiVtx'},
               {block,0,
                   [{call,
                        {1161,28},
                        {remote,
                            {1161,28},
                            {atom,{1161,28},lists},
                            {atom,{1161,28},sort}},
                        [{var,{1161,33},'Args'}]}]},
               {var,{1161,40},'SuccFail'},
               {var,{1161,50},'G'},
               {var,{1161,53},'St'}]}]}]}.
{function,
    {1163,1},
    redirect_phi_1,5,
    [{clause,
         {1163,1},
         [{var,{1163,1},'_'},
          {var,{1163,1},'_'},
          {var,{1163,1},'_'},
          {var,{1163,1},'_'},
          {var,{1163,1},'_'}],
         [[{call,
               {1163,1},
               {remote,
                   {1163,1},
                   {atom,{1163,1},fake},
                   {atom,{1163,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1163,478},{atom,{1163,1},ignore}]},
     {clause,
         {1163,1},
         [{var,{1163,16},'PhiVtx'},
          {cons,
              {1163,24},
              {tuple,
                  {1163,25},
                  [{tuple,
                       {1163,26},
                       [{atom,{1163,26},b_literal},{atom,{1163,41},false}]},
                   {var,{1163,48},'FalseExit'}]},
              {cons,
                  {1164,25},
                  {tuple,
                      {1164,25},
                      [{match,
                           {1164,26},
                           {tuple,
                               {1164,26},
                               [{atom,{1164,26},b_var},{var,{1164,26},'_'}]},
                           {var,{1164,35},'SuccBool'}},
                       {var,{1164,44},'_BoolExit'}]},
                  {nil,{1164,54}}}},
          {var,{1165,14},'SuccFail'},
          {var,{1165,24},'G0'},
          {var,{1165,28},'St'}],
         [],
         [{debug_line,1167,479},
          {match,
              {1167,5},
              {var,{1167,5},'BoolVtx'},
              {call,
                  {1167,15},
                  {atom,{1167,15},get_vertex},
                  [{var,{1167,26},'SuccBool'},{var,{1167,36},'St'}]}},
          {debug_line,1218,480},
          {call,
              {1218,5},
              {atom,{1218,5},ensure_disjoint_paths},
              [{var,{1218,27},'G0'},
               {var,{1218,31},'BoolVtx'},
               {var,{1218,40},'FalseExit'}]},
          {debug_line,1220,481},
          {match,
              {1220,5},
              {cons,{1220,5},{var,{1220,6},'FalseOut'},{nil,{1220,14}}},
              {call,
                  {1220,18},
                  {remote,
                      {1220,30},
                      {atom,{1220,18},beam_digraph},
                      {atom,{1220,31},out_edges}},
                  [{var,{1220,41},'G0'},{var,{1220,45},'FalseExit'}]}},
          {debug_line,1221,482},
          {match,
              {1221,5},
              {var,{1221,5},'G1'},
              {call,
                  {1221,10},
                  {remote,
                      {1221,22},
                      {atom,{1221,10},beam_digraph},
                      {atom,{1221,23},del_edge}},
                  [{var,{1221,32},'G0'},{var,{1221,36},'FalseOut'}]}},
          {debug_line,1222,483},
          {'case',
              {1222,5},
              {var,{1222,10},'SuccFail'},
              [{clause,
                   {1223,9},
                   [{tuple,
                        {1223,9},
                        [{atom,{1223,10},fail},{var,{1223,15},'Fail'}]}],
                   [],
                   [{debug_line,1224,484},
                    {match,
                        {1224,13},
                        {var,{1224,13},'G2'},
                        {call,
                            {1224,18},
                            {remote,
                                {1224,30},
                                {atom,{1224,18},beam_digraph},
                                {atom,{1224,31},add_edge}},
                            [{var,{1224,40},'G1'},
                             {var,{1224,44},'FalseExit'},
                             {var,{1224,55},'Fail'},
                             {atom,{1224,61},next}]}},
                    {debug_line,1225,485},
                    {match,
                        {1225,13},
                        {var,{1225,13},'G'},
                        {call,
                            {1225,17},
                            {atom,{1225,17},add_succ_fail_edges},
                            [{var,{1225,37},'BoolVtx'},
                             {var,{1225,46},'PhiVtx'},
                             {var,{1225,54},'FalseExit'},
                             {var,{1225,65},'G2'}]}},
                    {debug_line,1226,486},
                    {call,
                        {1226,13},
                        {atom,{1226,13},do_opt_digraph},
                        [{block,0,
                             [{cons,
                                  {1226,28},
                                  {var,{1226,29},'SuccBool'},
                                  {nil,{1226,37}}}]},
                         {var,{1226,40},'G'},
                         {var,{1226,43},'St'}]}]},
               {clause,
                   {1227,9},
                   [{tuple,
                        {1227,9},
                        [{atom,{1227,10},succ},{var,{1227,15},'Succ'}]}],
                   [],
                   [{debug_line,1228,487},
                    {match,
                        {1228,13},
                        {var,{1228,13},'G2'},
                        {call,
                            {1228,18},
                            {remote,
                                {1228,30},
                                {atom,{1228,18},beam_digraph},
                                {atom,{1228,31},add_edge}},
                            [{var,{1228,40},'G1'},
                             {var,{1228,44},'FalseExit'},
                             {var,{1228,55},'PhiVtx'},
                             {atom,{1228,63},next}]}},
                    {debug_line,1229,488},
                    {match,
                        {1229,13},
                        {var,{1229,13},'G'},
                        {call,
                            {1229,17},
                            {atom,{1229,17},add_succ_fail_edges},
                            [{var,{1229,37},'BoolVtx'},
                             {var,{1229,46},'Succ'},
                             {var,{1229,52},'PhiVtx'},
                             {var,{1229,60},'G2'}]}},
                    {debug_line,1230,489},
                    {call,
                        {1230,13},
                        {atom,{1230,13},do_opt_digraph},
                        [{block,0,
                             [{cons,
                                  {1230,28},
                                  {var,{1230,29},'SuccBool'},
                                  {nil,{1230,37}}}]},
                         {var,{1230,40},'G'},
                         {var,{1230,43},'St'}]}]}]}]},
     {clause,
         {1232,1},
         [{var,{1232,16},'PhiVtx'},
          {cons,
              {1232,24},
              {tuple,
                  {1232,25},
                  [{tuple,
                       {1232,26},
                       [{atom,{1232,26},b_literal},{atom,{1232,41},true}]},
                   {var,{1232,47},'TrueExit'}]},
              {cons,
                  {1233,25},
                  {tuple,
                      {1233,25},
                      [{match,
                           {1233,26},
                           {tuple,
                               {1233,26},
                               [{atom,{1233,26},b_var},{var,{1233,26},'_'}]},
                           {var,{1233,35},'SuccBool'}},
                       {var,{1233,44},'_BoolExit'}]},
                  {nil,{1233,54}}}},
          {tuple,{1234,14},[{atom,{1234,15},fail},{var,{1234,20},'Fail'}]},
          {var,{1234,27},'G0'},
          {var,{1234,31},'St'}],
         [],
         [{debug_line,1236,490},
          {match,
              {1236,5},
              {var,{1236,5},'BoolVtx'},
              {call,
                  {1236,15},
                  {atom,{1236,15},get_vertex},
                  [{var,{1236,26},'SuccBool'},{var,{1236,36},'St'}]}},
          {debug_line,1240,491},
          {call,
              {1240,5},
              {atom,{1240,5},ensure_disjoint_paths},
              [{var,{1240,27},'G0'},
               {var,{1240,31},'BoolVtx'},
               {var,{1240,40},'TrueExit'}]},
          {debug_line,1242,492},
          {match,
              {1242,5},
              {cons,{1242,5},{var,{1242,6},'TrueOut'},{nil,{1242,13}}},
              {call,
                  {1242,17},
                  {remote,
                      {1242,29},
                      {atom,{1242,17},beam_digraph},
                      {atom,{1242,30},out_edges}},
                  [{var,{1242,40},'G0'},{var,{1242,44},'TrueExit'}]}},
          {debug_line,1243,493},
          {match,
              {1243,5},
              {var,{1243,5},'G1'},
              {call,
                  {1243,10},
                  {remote,
                      {1243,22},
                      {atom,{1243,10},beam_digraph},
                      {atom,{1243,23},del_edge}},
                  [{var,{1243,32},'G0'},{var,{1243,36},'TrueOut'}]}},
          {debug_line,1244,494},
          {match,
              {1244,5},
              {var,{1244,5},'G2'},
              {call,
                  {1244,10},
                  {remote,
                      {1244,22},
                      {atom,{1244,10},beam_digraph},
                      {atom,{1244,23},add_edge}},
                  [{var,{1244,32},'G1'},
                   {var,{1244,36},'TrueExit'},
                   {var,{1244,46},'PhiVtx'},
                   {atom,{1244,54},next}]}},
          {debug_line,1245,495},
          {match,
              {1245,5},
              {var,{1245,5},'G'},
              {call,
                  {1245,9},
                  {atom,{1245,9},add_succ_fail_edges},
                  [{var,{1245,29},'BoolVtx'},
                   {var,{1245,38},'PhiVtx'},
                   {var,{1245,46},'Fail'},
                   {var,{1245,52},'G2'}]}},
          {debug_line,1249,496},
          {call,
              {1249,5},
              {atom,{1249,5},do_opt_digraph},
              [{block,0,
                   [{cons,
                        {1249,20},
                        {var,{1249,21},'SuccBool'},
                        {nil,{1249,29}}}]},
               {var,{1249,32},'G'},
               {var,{1249,35},'St'}]}]},
     {clause,
         {1250,1},
         [{var,{1250,16},'_PhiVtx'},
          {cons,
              {1250,25},
              {tuple,
                  {1250,26},
                  [{tuple,
                       {1250,27},
                       [{atom,{1250,27},b_literal},{atom,{1250,42},false}]},
                   {var,{1250,49},'FalseExit'}]},
              {cons,
                  {1251,26},
                  {tuple,
                      {1251,26},
                      [{tuple,
                           {1251,27},
                           [{atom,{1251,27},b_literal},{atom,{1251,42},true}]},
                       {var,{1251,48},'TrueExit'}]},
                  {nil,{1251,57}}}},
          {var,{1252,16},'SuccFail'},
          {var,{1252,26},'G0'},
          {var,{1252,30},'_St'}],
         [],
         [{debug_line,1253,497},
          {'case',
              {1253,5},
              {var,{1253,10},'SuccFail'},
              [{clause,
                   {1254,9},
                   [{tuple,
                        {1254,9},
                        [{atom,{1254,10},fail},{var,{1254,15},'Fail'}]}],
                   [],
                   [{debug_line,1255,498},
                    {match,
                        {1255,13},
                        {cons,
                            {1255,13},
                            {var,{1255,14},'FalseOut'},
                            {nil,{1255,22}}},
                        {call,
                            {1255,26},
                            {remote,
                                {1255,38},
                                {atom,{1255,26},beam_digraph},
                                {atom,{1255,39},out_edges}},
                            [{var,{1255,49},'G0'},
                             {var,{1255,53},'FalseExit'}]}},
                    {debug_line,1256,499},
                    {match,
                        {1256,13},
                        {var,{1256,13},'G'},
                        {call,
                            {1256,17},
                            {remote,
                                {1256,29},
                                {atom,{1256,17},beam_digraph},
                                {atom,{1256,30},del_edge}},
                            [{var,{1256,39},'G0'},
                             {var,{1256,43},'FalseOut'}]}},
                    {debug_line,1257,500},
                    {call,
                        {1257,13},
                        {remote,
                            {1257,25},
                            {atom,{1257,13},beam_digraph},
                            {atom,{1257,26},add_edge}},
                        [{var,{1257,35},'G'},
                         {var,{1257,38},'FalseExit'},
                         {var,{1257,49},'Fail'},
                         {atom,{1257,55},next}]}]},
               {clause,
                   {1258,9},
                   [{tuple,
                        {1258,9},
                        [{atom,{1258,10},succ},{var,{1258,15},'Succ'}]}],
                   [],
                   [{debug_line,1259,501},
                    {match,
                        {1259,13},
                        {cons,
                            {1259,13},
                            {var,{1259,14},'TrueOut'},
                            {nil,{1259,21}}},
                        {call,
                            {1259,25},
                            {remote,
                                {1259,37},
                                {atom,{1259,25},beam_digraph},
                                {atom,{1259,38},out_edges}},
                            [{var,{1259,48},'G0'},
                             {var,{1259,52},'TrueExit'}]}},
                    {debug_line,1260,502},
                    {match,
                        {1260,13},
                        {var,{1260,13},'G'},
                        {call,
                            {1260,17},
                            {remote,
                                {1260,29},
                                {atom,{1260,17},beam_digraph},
                                {atom,{1260,30},del_edge}},
                            [{var,{1260,39},'G0'},{var,{1260,43},'TrueOut'}]}},
                    {debug_line,1261,503},
                    {call,
                        {1261,13},
                        {remote,
                            {1261,25},
                            {atom,{1261,13},beam_digraph},
                            {atom,{1261,26},add_edge}},
                        [{var,{1261,35},'G'},
                         {var,{1261,38},'TrueExit'},
                         {var,{1261,48},'Succ'},
                         {atom,{1261,54},next}]}]}]}]},
     {clause,
         {1263,1},
         [{var,{1263,16},'_PhiVtx'},
          {var,{1263,25},'_Args'},
          {var,{1263,32},'_SuccFail'},
          {var,{1263,43},'_G'},
          {var,{1263,47},'_St'}],
         [],
         [{debug_line,1264,504},
          {call,{1264,5},{atom,{1264,5},not_possible},[]}]}]}.
{function,
    {1266,1},
    digraph_bool_def,1,
    [{clause,
         {1266,1},
         [{var,{1266,1},'_'}],
         [[{call,
               {1266,1},
               {remote,
                   {1266,1},
                   {atom,{1266,1},fake},
                   {atom,{1266,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1266,505},{atom,{1266,1},ignore}]},
     {clause,
         {1266,1},
         [{var,{1266,18},'G'}],
         [],
         [{debug_line,1267,506},
          {match,
              {1267,5},
              {var,{1267,5},'Vs'},
              {call,
                  {1267,10},
                  {remote,
                      {1267,22},
                      {atom,{1267,10},beam_digraph},
                      {atom,{1267,23},vertices}},
                  [{var,{1267,32},'G'}]}},
          {debug_line,1268,507},
          {mc,{1268,5},
              {map_field_assoc,
                  {1268,11},
                  {block,0,[{var,{1268,7},'Dst'}]},
                  {block,0,[{var,{1268,14},'Vtx'}]}},
              [{block,0,[{atom,{1268,46},true}]},
               {generate,
                   {1268,43},
                   {tuple,
                       {1268,21},
                       [{var,{1268,22},'Vtx'},
                        {tuple,
                            {1268,26},
                            [{atom,{1268,26},b_set},
                             {var,{1268,26},'_'},
                             {var,{1268,37},'Dst'},
                             {var,{1268,26},'_'},
                             {var,{1268,26},'_'}]}]},
                   {var,{1268,46},'Vs'}}]}]}]}.
{function,
    {1275,1},
    ensure_disjoint_paths,3,
    [{clause,
         {1275,1},
         [{var,{1275,1},'_'},{var,{1275,1},'_'},{var,{1275,1},'_'}],
         [[{call,
               {1275,1},
               {remote,
                   {1275,1},
                   {atom,{1275,1},fake},
                   {atom,{1275,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1275,508},{atom,{1275,1},ignore}]},
     {clause,
         {1275,1},
         [{var,{1275,23},'G'},{var,{1275,26},'V1'},{var,{1275,30},'V2'}],
         [],
         [{debug_line,1276,509},
          {'case',
              {1276,5},
              {'case',
                  {1276,10},
                  {call,
                      {1276,10},
                      {remote,
                          {1276,22},
                          {atom,{1276,10},beam_digraph},
                          {atom,{1276,23},is_path}},
                      [{var,{1276,31},'G'},
                       {var,{1276,34},'V1'},
                       {var,{1276,38},'V2'}]},
                  [{clause,
                       {1276,10},
                       [{atom,{1276,10},true}],
                       [],
                       [{atom,{1276,10},true}]},
                   {clause,
                       {1276,10},
                       [{atom,{1276,10},false}],
                       [],
                       [{call,
                            {1276,49},
                            {remote,
                                {1276,61},
                                {atom,{1276,49},beam_digraph},
                                {atom,{1276,62},is_path}},
                            [{var,{1276,70},'G'},
                             {var,{1276,73},'V2'},
                             {var,{1276,77},'V1'}]}]},
                   {clause,
                       [{generated,true},{location,{1276,10}}],
                       [{var,{1276,10},cov1}],
                       [],
                       [{call,
                            {1276,10},
                            {remote,
                                {1276,10},
                                {atom,{1276,10},erlang},
                                {atom,{1276,10},error}},
                            [{block,0,
                                 [{tuple,
                                      {1276,10},
                                      [{atom,{1276,10},badarg},
                                       {var,{1276,10},cov1}]}]}]}]}]},
              [{clause,
                   {1277,9},
                   [{atom,{1277,9},true}],
                   [],
                   [{debug_line,1277,510},
                    {call,{1277,17},{atom,{1277,17},not_possible},[]}]},
               {clause,
                   {1278,9},
                   [{atom,{1278,9},false}],
                   [],
                   [{debug_line,1278,511},{atom,{1278,18},ok}]}]}]}]}.
{function,
    {1294,1},
    shortcut_branches,3,
    [{clause,
         {1294,1},
         [{var,{1294,1},'_'},{var,{1294,1},'_'},{var,{1294,1},'_'}],
         [[{call,
               {1294,1},
               {remote,
                   {1294,1},
                   {atom,{1294,1},fake},
                   {atom,{1294,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1294,512},{atom,{1294,1},ignore}]},
     {clause,
         {1294,1},
         [{var,{1294,19},'Vtx'},{var,{1294,24},'G'},{var,{1294,27},'St'}],
         [],
         [{debug_line,1295,513},
          {match,
              {1295,5},
              {var,{1295,5},'Vs'},
              {call,
                  {1295,10},
                  {remote,
                      {1295,10},
                      {atom,{1295,10},lists},
                      {atom,{1295,10},reverse}},
                  [{block,0,
                       [{call,
                            {1295,18},
                            {remote,
                                {1295,30},
                                {atom,{1295,18},beam_digraph},
                                {atom,{1295,31},reverse_postorder}},
                            [{var,{1295,49},'G'},
                             {block,0,
                                 [{cons,
                                      {1295,52},
                                      {var,{1295,53},'Vtx'},
                                      {nil,{1295,56}}}]}]}]}]}},
          {debug_line,1296,514},
          {call,
              {1296,5},
              {atom,{1296,5},do_shortcut_branches},
              [{var,{1296,26},'Vs'},
               {var,{1296,30},'G'},
               {var,{1296,33},'St'}]}]}]}.
{function,
    {1298,1},
    do_shortcut_branches,3,
    [{clause,
         {1298,1},
         [{var,{1298,1},'_'},{var,{1298,1},'_'},{var,{1298,1},'_'}],
         [[{call,
               {1298,1},
               {remote,
                   {1298,1},
                   {atom,{1298,1},fake},
                   {atom,{1298,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1298,515},{atom,{1298,1},ignore}]},
     {clause,
         {1298,1},
         [{cons,{1298,22},{var,{1298,23},'V'},{var,{1298,25},'Vs'}},
          {var,{1298,30},'G0'},
          {var,{1298,34},'St'}],
         [],
         [{debug_line,1299,516},
          {'case',
              {1299,5},
              {call,
                  {1299,10},
                  {atom,{1299,10},get_targets},
                  [{var,{1299,22},'V'},{var,{1299,25},'G0'}]},
              [{clause,
                   {1300,9},
                   [{tuple,
                        {1300,9},
                        [{atom,{1300,10},br},
                         {var,{1300,13},'Succ0'},
                         {var,{1300,19},'Fail0'}]}],
                   [],
                   [{debug_line,1301,517},
                    {match,
                        {1301,13},
                        {tuple,
                            {1301,13},
                            [{var,{1301,14},'SuccBs'},
                             {var,{1301,21},'FailBs'}]},
                        {call,
                            {1301,31},
                            {atom,{1301,31},eval_bs},
                            [{var,{1301,39},'V'},
                             {var,{1301,42},'G0'},
                             {var,{1301,46},'St'}]}},
                    {debug_line,1302,518},
                    {match,
                        {1302,13},
                        {var,{1302,13},'Succ'},
                        {call,
                            {1302,20},
                            {atom,{1302,20},eval_instr},
                            [{var,{1302,31},'Succ0'},
                             {var,{1302,38},'G0'},
                             {var,{1302,42},'SuccBs'}]}},
                    {debug_line,1303,519},
                    {match,
                        {1303,13},
                        {var,{1303,13},'G1'},
                        {call,
                            {1303,18},
                            {atom,{1303,18},redirect_edge},
                            [{var,{1303,32},'V'},
                             {var,{1303,35},'Succ0'},
                             {block,0,
                                 [{tuple,
                                      {1303,42},
                                      [{atom,{1303,43},succ},
                                       {var,{1303,48},'Succ'}]}]},
                             {var,{1303,55},'G0'}]}},
                    {debug_line,1304,520},
                    {match,
                        {1304,13},
                        {var,{1304,13},'Fail'},
                        {call,
                            {1304,20},
                            {atom,{1304,20},eval_instr},
                            [{var,{1304,31},'Fail0'},
                             {var,{1304,38},'G1'},
                             {var,{1304,42},'FailBs'}]}},
                    {debug_line,1305,521},
                    {match,
                        {1305,13},
                        {var,{1305,13},'G'},
                        {call,
                            {1305,17},
                            {atom,{1305,17},redirect_edge},
                            [{var,{1305,31},'V'},
                             {var,{1305,34},'Fail0'},
                             {block,0,
                                 [{tuple,
                                      {1305,41},
                                      [{atom,{1305,42},fail},
                                       {var,{1305,47},'Fail'}]}]},
                             {var,{1305,54},'G1'}]}},
                    {debug_line,1306,522},
                    {call,
                        {1306,13},
                        {atom,{1306,13},do_shortcut_branches},
                        [{var,{1306,34},'Vs'},
                         {var,{1306,38},'G'},
                         {var,{1306,41},'St'}]}]},
               {clause,
                   {1307,9},
                   [{tuple,
                        {1307,9},
                        [{atom,{1307,10},br},{var,{1307,13},'Next0'}]}],
                   [],
                   [{debug_line,1308,523},
                    {match,
                        {1308,13},
                        {var,{1308,13},'Next'},
                        {call,
                            {1308,20},
                            {atom,{1308,20},eval_instr},
                            [{var,{1308,31},'Next0'},
                             {var,{1308,38},'G0'},
                             {block,0,[{map,{1308,42},[]}]}]}},
                    {debug_line,1309,524},
                    {match,
                        {1309,13},
                        {var,{1309,13},'G'},
                        {call,
                            {1309,17},
                            {atom,{1309,17},redirect_edge},
                            [{var,{1309,31},'V'},
                             {var,{1309,34},'Next0'},
                             {block,0,
                                 [{tuple,
                                      {1309,41},
                                      [{atom,{1309,42},next},
                                       {var,{1309,47},'Next'}]}]},
                             {var,{1309,54},'G0'}]}},
                    {debug_line,1310,525},
                    {call,
                        {1310,13},
                        {atom,{1310,13},do_shortcut_branches},
                        [{var,{1310,34},'Vs'},
                         {var,{1310,38},'G'},
                         {var,{1310,41},'St'}]}]},
               {clause,
                   {1311,9},
                   [{atom,{1311,9},none}],
                   [],
                   [{debug_line,1313,526},
                    {call,
                        {1313,13},
                        {atom,{1313,13},do_shortcut_branches},
                        [{var,{1313,34},'Vs'},
                         {var,{1313,38},'G0'},
                         {var,{1313,42},'St'}]}]}]}]},
     {clause,
         {1315,1},
         [{nil,{1315,22}},{var,{1315,26},'G'},{var,{1315,29},'_St'}],
         [],
         [{debug_line,1315,527},{var,{1315,37},'G'}]}]}.
{function,
    {1317,1},
    redirect_edge,4,
    [{clause,
         {1317,1},
         [{var,{1317,1},'_'},
          {var,{1317,1},'_'},
          {var,{1317,1},'_'},
          {var,{1317,1},'_'}],
         [[{call,
               {1317,1},
               {remote,
                   {1317,1},
                   {atom,{1317,1},fake},
                   {atom,{1317,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1317,528},{atom,{1317,1},ignore}]},
     {clause,
         {1317,1},
         [{var,{1317,15},'_From'},
          {var,{1317,22},'To'},
          {tuple,{1317,26},[{var,{1317,27},'_Label'},{var,{1317,34},'To'}]},
          {var,{1317,39},'G'}],
         [],
         [{debug_line,1318,529},{var,{1318,5},'G'}]},
     {clause,
         {1319,1},
         [{var,{1319,15},'From'},
          {var,{1319,21},'To0'},
          {tuple,{1319,26},[{var,{1319,27},'Label'},{var,{1319,33},'To'}]},
          {var,{1319,38},'G0'}],
         [],
         [{debug_line,1320,530},
          {match,
              {1320,5},
              {var,{1320,5},'G'},
              {call,
                  {1320,9},
                  {remote,
                      {1320,21},
                      {atom,{1320,9},beam_digraph},
                      {atom,{1320,22},del_edge}},
                  [{var,{1320,31},'G0'},
                   {block,0,
                       [{tuple,
                            {1320,35},
                            [{var,{1320,36},'From'},
                             {var,{1320,41},'To0'},
                             {var,{1320,45},'Label'}]}]}]}},
          {debug_line,1321,531},
          {call,
              {1321,5},
              {remote,
                  {1321,17},
                  {atom,{1321,5},beam_digraph},
                  {atom,{1321,18},add_edge}},
              [{var,{1321,27},'G'},
               {var,{1321,30},'From'},
               {var,{1321,36},'To'},
               {var,{1321,40},'Label'}]}]}]}.
{function,
    {1323,1},
    eval_bs,3,
    [{clause,
         {1323,1},
         [{var,{1323,1},'_'},{var,{1323,1},'_'},{var,{1323,1},'_'}],
         [[{call,
               {1323,1},
               {remote,
                   {1323,1},
                   {atom,{1323,1},fake},
                   {atom,{1323,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1323,532},{atom,{1323,1},ignore}]},
     {clause,
         {1323,1},
         [{var,{1323,9},'Vtx'},{var,{1323,14},'G'},{var,{1323,17},'St'}],
         [],
         [{debug_line,1324,533},
          {'case',
              {1324,5},
              {call,
                  {1324,10},
                  {remote,
                      {1324,22},
                      {atom,{1324,10},beam_digraph},
                      {atom,{1324,23},vertex}},
                  [{var,{1324,30},'G'},{var,{1324,33},'Vtx'}]},
              [{clause,
                   {1325,9},
                   [{tuple,
                        {1325,9},
                        [{atom,{1325,9},b_set},
                         {var,{1325,9},'_'},
                         {var,{1325,9},'_'},
                         {tuple,
                             {1325,19},
                             [{atom,{1325,20},bif},{atom,{1325,24},'=:='}]},
                         {cons,
                             {1325,36},
                             {match,
                                 {1325,37},
                                 {tuple,
                                     {1325,37},
                                     [{atom,{1325,37},b_var},
                                      {var,{1325,37},'_'}]},
                                 {var,{1325,46},'Bool'}},
                             {cons,
                                 {1325,51},
                                 {tuple,
                                     {1325,51},
                                     [{atom,{1325,51},b_literal},
                                      {atom,{1325,66},true}]},
                                 {nil,{1325,71}}}}]}],
                   [],
                   [{debug_line,1326,534},
                    {'case',
                        {1326,13},
                        {call,
                            {1326,18},
                            {atom,{1326,18},get_def},
                            [{var,{1326,26},'Bool'},
                             {var,{1326,32},'G'},
                             {var,{1326,35},'St'}]},
                        [{clause,
                             {1327,17},
                             [{match,
                                  {1327,17},
                                  {tuple,
                                      {1327,17},
                                      [{atom,{1327,17},b_set},
                                       {var,{1327,17},'_'},
                                       {var,{1327,17},'_'},
                                       {atom,{1327,27},phi},
                                       {var,{1327,17},'_'}]},
                                  {var,{1327,32},'Phi'}}],
                             [],
                             [{debug_line,1328,535},
                              {call,
                                  {1328,21},
                                  {atom,{1328,21},phi_bs},
                                  [{var,{1328,28},'Phi'}]}]},
                         {clause,
                             {1329,17},
                             [{var,{1329,17},'_'}],
                             [],
                             [{debug_line,1330,536},
                              {tuple,
                                  {1330,21},
                                  [{map,{1330,22},[]},
                                   {map,{1330,26},[]}]}]}]}]},
               {clause,
                   {1332,9},
                   [{var,{1332,9},'_'}],
                   [],
                   [{debug_line,1333,537},
                    {tuple,
                        {1333,13},
                        [{map,{1333,14},[]},{map,{1333,18},[]}]}]}]}]}]}.
{function,
 {1336,1},
 phi_bs,1,
 [{clause,
   {1336,1},
   [{var,{1336,1},'_'}],
   [[{call,
      {1336,1},
      {remote,{1336,1},{atom,{1336,1},fake},{atom,{1336,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1336,538},{atom,{1336,1},ignore}]},
  {clause,
   {1336,1},
   [{tuple,
     {1336,8},
     [{atom,{1336,8},b_set},
      {var,{1336,8},'_'},
      {var,{1336,26},'PhiDst'},
      {atom,{1336,18},phi},
      {var,{1336,38},'PhiArgs'}]}],
   [],
   [{debug_line,1337,539},
    {match,
     {1337,5},
     {var,{1337,5},'Literals0'},
     {lc,
      {1337,17},
      {block,0,[{var,{1337,18},'Lit'}]},
      [{block,0,[{atom,{1337,49},true}]},
       {generate,
        {1337,46},
        {tuple,
         {1337,25},
         [{match,
           {1337,26},
           {tuple,{1337,26},[{atom,{1337,26},b_literal},{var,{1337,26},'_'}]},
           {var,{1337,39},'Lit'}},
          {var,{1337,43},'_'}]},
        {var,{1337,49},'PhiArgs'}}]}},
    {debug_line,1338,540},
    {'case',
     {1338,5},
     {op,
      {1338,28},
      '=:=',
      {call,
       {1338,10},
       {remote,{1338,10},{atom,{1338,10},erlang},{atom,{1338,10},length}},
       [{var,{1338,17},'Literals0'}]},
      {call,
       {1338,32},
       {remote,{1338,32},{atom,{1338,32},erlang},{atom,{1338,32},length}},
       [{var,{1338,39},'PhiArgs'}]}},
     [{clause,
       {1339,9},
       [{atom,{1339,9},true}],
       [],
       [{debug_line,1341,541},
        {match,
         {1341,13},
         {var,{1341,13},'Literals'},
         {call,
          {1341,24},
          {remote,
           {1341,31},
           {atom,{1341,24},ordsets},
           {atom,{1341,32},from_list}},
          [{var,{1341,42},'Literals0'}]}},
        {debug_line,1342,542},
        {'case',
         {1342,13},
         {call,
          {1342,18},
          {remote,{1342,18},{atom,{1342,18},lists},{atom,{1342,18},partition}},
          [{block,0,
            [{'fun',
              {1342,28},
              {clauses,
               [{clause,
                 {1342,31},
                 [{tuple,
                   {1342,32},
                   [{atom,{1342,32},b_literal},{var,{1342,47},'Val'}]}],
                 [],
                 [{debug_line,1343,543},
                  {op,
                   {1343,40},
                   '=:=',
                   {var,{1343,36},'Val'},
                   {atom,{1343,44},true}}]}]}}]},
           {var,{1344,33},'Literals'}]},
         [{clause,
           {1345,17},
           [{tuple,
             {1345,17},
             [{cons,{1345,18},{var,{1345,19},'True'},{nil,{1345,23}}},
              {cons,{1345,25},{var,{1345,26},'FailVal'},{nil,{1345,33}}}]}],
           [],
           [{debug_line,1349,544},
            {match,
             {1349,21},
             {var,{1349,21},'SuccBs'},
             {map,
              {1349,30},
              [{map_field_assoc,
                {1349,39},
                {var,{1349,32},'PhiDst'},
                {var,{1349,42},'True'}}]}},
            {debug_line,1350,545},
            {match,
             {1350,21},
             {var,{1350,21},'FailBs'},
             {map,
              {1350,30},
              [{map_field_assoc,
                {1350,39},
                {var,{1350,32},'PhiDst'},
                {var,{1350,42},'FailVal'}}]}},
            {debug_line,1351,546},
            {tuple,
             {1351,21},
             [{var,{1351,22},'SuccBs'},{var,{1351,29},'FailBs'}]}]},
          {clause,
           {1352,17},
           [{tuple,{1352,17},[{var,{1352,18},'_'},{var,{1352,20},'_'}]}],
           [],
           [{debug_line,1353,547},
            {tuple,{1353,21},[{map,{1353,22},[]},{map,{1353,26},[]}]}]}]}]},
      {clause,
       {1355,9},
       [{atom,{1355,9},false}],
       [],
       [{debug_line,1356,548},
        {tuple,{1356,13},[{map,{1356,14},[]},{map,{1356,18},[]}]}]}]}]}]}.
{function,
    {1359,1},
    eval_instr,3,
    [{clause,
         {1359,1},
         [{var,{1359,1},'_'},{var,{1359,1},'_'},{var,{1359,1},'_'}],
         [[{call,
               {1359,1},
               {remote,
                   {1359,1},
                   {atom,{1359,1},fake},
                   {atom,{1359,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1359,549},{atom,{1359,1},ignore}]},
     {clause,
         {1359,1},
         [{var,{1359,12},'Vtx'},{var,{1359,17},'G'},{var,{1359,20},'Bs'}],
         [],
         [{debug_line,1360,550},
          {'case',
              {1360,5},
              {call,
                  {1360,10},
                  {remote,
                      {1360,22},
                      {atom,{1360,10},beam_digraph},
                      {atom,{1360,23},vertex}},
                  [{var,{1360,30},'G'},{var,{1360,33},'Vtx'}]},
              [{clause,
                   {1361,9},
                   [{tuple,
                        {1361,9},
                        [{atom,{1361,9},b_set},
                         {var,{1361,9},'_'},
                         {var,{1361,9},'_'},
                         {var,{1361,9},'_'},
                         {var,{1361,9},'_'}]}],
                   [[{op,{1361,36},
                         '=:=',
                         {call,
                             {1361,23},
                             {remote,
                                 {1361,23},
                                 {atom,{1361,23},erlang},
                                 {atom,{1361,23},map_size}},
                             [{var,{1361,32},'Bs'}]},
                         {integer,{1361,40},0}}]],
                   [{debug_line,1367,551},{var,{1367,13},'Vtx'}]},
               {clause,
                   {1368,9},
                   [{match,
                        {1368,9},
                        {tuple,
                            {1368,9},
                            [{atom,{1368,9},b_set},
                             {var,{1368,9},'_'},
                             {var,{1368,9},'_'},
                             {var,{1368,9},'_'},
                             {var,{1368,9},'_'}]},
                        {var,{1368,18},'I'}}],
                   [],
                   [{debug_line,1369,552},
                    {'case',
                        {1369,13},
                        {call,
                            {1369,18},
                            {atom,{1369,18},is_safe_bool_expr},
                            [{var,{1369,36},'I'}]},
                        [{clause,
                             {1370,17},
                             [{atom,{1370,17},true}],
                             [],
                             [{debug_line,1370,553},
                              {call,
                                  {1370,25},
                                  {atom,{1370,25},eval_safe_bool_expr},
                                  [{var,{1370,45},'I'},
                                   {var,{1370,48},'Vtx'},
                                   {var,{1370,53},'G'},
                                   {var,{1370,56},'Bs'}]}]},
                         {clause,
                             {1371,17},
                             [{atom,{1371,17},false}],
                             [],
                             [{debug_line,1371,554},
                              {var,{1371,26},'Vtx'}]}]}]},
               {clause,
                   {1373,9},
                   [{atom,{1373,9},br}],
                   [],
                   [{debug_line,1376,555},
                    {match,
                        {1376,13},
                        {cons,
                            {1376,13},
                            {var,{1376,14},'Next'},
                            {nil,{1376,18}}},
                        {call,
                            {1376,22},
                            {remote,
                                {1376,34},
                                {atom,{1376,22},beam_digraph},
                                {atom,{1376,35},out_neighbours}},
                            [{var,{1376,50},'G'},{var,{1376,53},'Vtx'}]}},
                    {debug_line,1377,556},
                    {'case',
                        {1377,13},
                        {call,
                            {1377,18},
                            {remote,
                                {1377,30},
                                {atom,{1377,18},beam_digraph},
                                {atom,{1377,31},vertex}},
                            [{var,{1377,38},'G'},{var,{1377,41},'Next'}]},
                        [{clause,
                             {1378,17},
                             [{tuple,
                                  {1378,17},
                                  [{atom,{1378,17},b_set},
                                   {var,{1378,17},'_'},
                                   {var,{1378,17},'_'},
                                   {atom,{1378,27},phi},
                                   {var,{1378,17},'_'}]}],
                             [],
                             [{debug_line,1378,557},{var,{1378,35},'Vtx'}]},
                         {clause,
                             {1379,17},
                             [{var,{1379,17},'_'}],
                             [],
                             [{debug_line,1379,558},
                              {call,
                                  {1379,22},
                                  {atom,{1379,22},eval_instr},
                                  [{var,{1379,33},'Next'},
                                   {var,{1379,39},'G'},
                                   {var,{1379,42},'Bs'}]}]}]}]},
               {clause,
                   {1381,9},
                   [{tuple,
                        {1381,9},
                        [{atom,{1381,10},br},
                         {tuple,
                             {1381,13},
                             [{atom,{1381,13},b_var},{var,{1381,13},'_'}]}]}],
                   [],
                   [{debug_line,1382,559},{var,{1382,13},'Vtx'}]},
               {clause,
                   {1383,9},
                   [{tuple,
                        {1383,9},
                        [{atom,{1383,10},external},{var,{1383,19},'_'}]}],
                   [],
                   [{debug_line,1384,560},{var,{1384,13},'Vtx'}]}]}]}]}.
{function,
 {1387,1},
 eval_safe_bool_expr,4,
 [{clause,
   {1387,1},
   [{var,{1387,1},'_'},
    {var,{1387,1},'_'},
    {var,{1387,1},'_'},
    {var,{1387,1},'_'}],
   [[{call,
      {1387,1},
      {remote,{1387,1},{atom,{1387,1},fake},{atom,{1387,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1387,561},{atom,{1387,1},ignore}]},
  {clause,
   {1387,1},
   [{tuple,
     {1387,21},
     [{atom,{1387,21},b_set},
      {var,{1387,21},'_'},
      {var,{1387,45},'Dst'},
      {tuple,{1387,31},[{atom,{1387,32},bif},{var,{1387,36},'Bif'}]},
      {var,{1387,54},'Args0'}]},
    {var,{1387,62},'Vtx'},
    {var,{1387,67},'G'},
    {var,{1387,70},'Bs'}],
   [],
   [{debug_line,1388,562},
    {'case',
     {1388,5},
     {call,
      {1388,10},
      {atom,{1388,10},get_targets},
      [{var,{1388,22},'Vtx'},{var,{1388,27},'G'}]},
     [{clause,
       {1389,9},
       [{tuple,
         {1389,9},
         [{atom,{1389,10},br},{var,{1389,13},'Succ'},{var,{1389,18},'Fail'}]}],
       [],
       [{debug_line,1390,563},
        {match,
         {1390,13},
         {var,{1390,13},'True'},
         {tuple,{1390,20},[{atom,{1390,20},b_literal},{atom,{1390,35},true}]}},
        {debug_line,1391,564},
        {match,
         {1391,13},
         {var,{1391,13},'False'},
         {tuple,
          {1391,21},
          [{atom,{1391,21},b_literal},{atom,{1391,36},false}]}},
        {debug_line,1392,565},
        {match,
         {1392,13},
         {var,{1392,13},'Args'},
         {call,
          {1392,20},
          {atom,{1392,20},sub_args},
          [{var,{1392,29},'Args0'},{var,{1392,36},'Bs'}]}},
        {debug_line,1393,566},
        {'case',
         {1393,13},
         {call,
          {1393,18},
          {atom,{1393,18},eval_bif},
          [{var,{1393,27},'Bif'},{var,{1393,32},'Args'}]},
         [{clause,
           {1394,17},
           [{atom,{1394,17},none}],
           [],
           [{debug_line,1395,567},
            {'case',
             {1395,21},
             {tuple,
              {1395,26},
              [{call,
                {1395,27},
                {atom,{1395,27},eval_instr},
                [{var,{1395,38},'Succ'},
                 {var,{1395,44},'G'},
                 {block,0,
                  [{map,
                    {1395,49},
                    {var,{1395,47},'Bs'},
                    [{map_field_assoc,
                      {1395,54},
                      {var,{1395,51},'Dst'},
                      {var,{1395,56},'True'}}]}]}]},
               {call,
                {1396,27},
                {atom,{1396,27},eval_instr},
                [{var,{1396,38},'Fail'},
                 {var,{1396,44},'G'},
                 {block,0,
                  [{debug_line,1396,568},
                   {map,
                    {1396,49},
                    {var,{1396,47},'Bs'},
                    [{map_field_assoc,
                      {1396,54},
                      {var,{1396,51},'Dst'},
                      {var,{1396,56},'False'}}]}]}]}]},
             [{clause,
               {1397,25},
               [{tuple,
                 {1397,25},
                 [{var,{1397,26},'Same'},{var,{1397,31},'Same'}]}],
               [],
               [{debug_line,1397,569},{var,{1397,40},'Same'}]},
              {clause,
               {1398,25},
               [{tuple,{1398,25},[{var,{1398,26},'_'},{var,{1398,28},'_'}]}],
               [],
               [{debug_line,1398,570},{var,{1398,34},'Vtx'}]}]}]},
          {clause,
           {1400,17},
           [{atom,{1400,17},true}],
           [],
           [{debug_line,1401,571},
            {call,
             {1401,21},
             {atom,{1401,21},eval_instr},
             [{var,{1401,32},'Succ'},
              {var,{1401,38},'G'},
              {block,0,
               [{map,
                 {1401,43},
                 {var,{1401,41},'Bs'},
                 [{map_field_assoc,
                   {1401,48},
                   {var,{1401,45},'Dst'},
                   {var,{1401,50},'True'}}]}]}]}]},
          {clause,
           {1402,17},
           [{atom,{1402,17},false}],
           [],
           [{debug_line,1403,572},
            {call,
             {1403,21},
             {atom,{1403,21},eval_instr},
             [{var,{1403,32},'Fail'},
              {var,{1403,38},'G'},
              {block,0,
               [{map,
                 {1403,43},
                 {var,{1403,41},'Bs'},
                 [{map_field_assoc,
                   {1403,48},
                   {var,{1403,45},'Dst'},
                   {var,{1403,50},'False'}}]}]}]}]}]}]},
      {clause,
       {1405,9},
       [{tuple,{1405,9},[{atom,{1405,10},br},{var,{1405,13},'_'}]}],
       [],
       [{debug_line,1406,573},{var,{1406,13},'Vtx'}]}]}]}]}.
{function,
    {1409,1},
    eval_bif,2,
    [{clause,
         {1409,1},
         [{var,{1409,1},'_'},{var,{1409,1},'_'}],
         [[{call,
               {1409,1},
               {remote,
                   {1409,1},
                   {atom,{1409,1},fake},
                   {atom,{1409,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1409,574},{atom,{1409,1},ignore}]},
     {clause,
         {1409,1},
         [{var,{1409,10},'Bif'},{var,{1409,15},'Args0'}],
         [],
         [{debug_line,1410,575},
          {'case',
              {1410,5},
              {call,
                  {1410,10},
                  {atom,{1410,10},eval_literal_args},
                  [{var,{1410,28},'Args0'},{nil,{1410,35}}]},
              [{clause,
                   {1411,9},
                   [{atom,{1411,9},none}],
                   [],
                   [{debug_line,1412,576},{atom,{1412,13},none}]},
               {clause,
                   {1413,9},
                   [{var,{1413,9},'Args'}],
                   [],
                   [{debug_line,1416,577},
                    {call,
                        {1416,13},
                        {remote,
                            {1416,13},
                            {atom,{1416,13},erlang},
                            {atom,{1416,13},apply}},
                        [{atom,{1416,19},erlang},
                         {var,{1416,27},'Bif'},
                         {var,{1416,32},'Args'}]}]}]}]}]}.
{function,
    {1419,1},
    eval_literal_args,2,
    [{clause,
         {1419,1},
         [{var,{1419,1},'_'},{var,{1419,1},'_'}],
         [[{call,
               {1419,1},
               {remote,
                   {1419,1},
                   {atom,{1419,1},fake},
                   {atom,{1419,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1419,578},{atom,{1419,1},ignore}]},
     {clause,
         {1419,1},
         [{cons,
              {1419,19},
              {tuple,
                  {1419,20},
                  [{atom,{1419,20},b_literal},{var,{1419,35},'Val'}]},
              {var,{1419,40},'As'}},
          {var,{1419,45},'Acc'}],
         [],
         [{debug_line,1420,579},
          {call,
              {1420,5},
              {atom,{1420,5},eval_literal_args},
              [{var,{1420,23},'As'},
               {block,0,
                   [{cons,
                        {1420,27},
                        {var,{1420,28},'Val'},
                        {var,{1420,32},'Acc'}}]}]}]},
     {clause,
         {1421,1},
         [{cons,{1421,19},{var,{1421,20},'_'},{var,{1421,22},'_'}},
          {var,{1421,26},'_'}],
         [],
         [{debug_line,1422,580},{atom,{1422,5},none}]},
     {clause,
         {1423,1},
         [{nil,{1423,19}},{var,{1423,23},'Acc'}],
         [],
         [{debug_line,1424,581},
          {call,
              {1424,5},
              {remote,{1424,5},{atom,{1424,5},lists},{atom,{1424,5},reverse}},
              [{var,{1424,13},'Acc'}]}]}]}.
{function,
    {1436,1},
    ensure_init,3,
    [{clause,
         {1436,1},
         [{var,{1436,1},'_'},{var,{1436,1},'_'},{var,{1436,1},'_'}],
         [[{call,
               {1436,1},
               {remote,
                   {1436,1},
                   {atom,{1436,1},fake},
                   {atom,{1436,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1436,582},{atom,{1436,1},ignore}]},
     {clause,
         {1436,1},
         [{var,{1436,13},'Root'},{var,{1436,19},'G'},{var,{1436,22},'G0'}],
         [],
         [{debug_line,1437,583},
          {match,
              {1437,5},
              {var,{1437,5},'Vs'},
              {call,
                  {1437,10},
                  {remote,
                      {1437,22},
                      {atom,{1437,10},beam_digraph},
                      {atom,{1437,23},vertices}},
                  [{var,{1437,32},'G'}]}},
          {debug_line,1441,584},
          {match,
              {1441,5},
              {var,{1441,5},'Used'},
              {call,
                  {1441,12},
                  {atom,{1441,12},ensure_init_used},
                  [{var,{1441,29},'G0'}]}},
          {debug_line,1446,585},
          {match,
              {1446,5},
              {var,{1446,5},'Vars'},
              {mc,{1446,12},
                  {map_field_assoc,
                      {1446,18},
                      {block,0,[{var,{1446,14},'Dst'}]},
                      {block,0,[{atom,{1446,21},unset}]}},
                  [{block,0,[{atom,{1446,53},true}]},
                   {generate,
                       {1446,50},
                       {tuple,
                           {1446,30},
                           [{var,{1446,31},'_'},
                            {tuple,
                                {1446,33},
                                [{atom,{1446,33},b_set},
                                 {var,{1446,33},'_'},
                                 {var,{1446,44},'Dst'},
                                 {var,{1446,33},'_'},
                                 {var,{1446,33},'_'}]}]},
                       {var,{1446,53},'Vs'}}]}},
          {debug_line,1447,586},
          {match,
              {1447,5},
              {var,{1447,5},'RPO'},
              {call,
                  {1447,11},
                  {remote,
                      {1447,23},
                      {atom,{1447,11},beam_digraph},
                      {atom,{1447,24},reverse_postorder}},
                  [{var,{1447,42},'G'},
                   {block,0,
                       [{cons,
                            {1447,45},
                            {var,{1447,46},'Root'},
                            {nil,{1447,50}}}]}]}},
          {debug_line,1448,587},
          {call,
              {1448,5},
              {atom,{1448,5},ensure_init_1},
              [{var,{1448,19},'RPO'},
               {var,{1448,24},'Used'},
               {var,{1448,30},'G'},
               {block,0,
                   [{map,
                        {1448,33},
                        [{map_field_assoc,
                             {1448,39},
                             {var,{1448,35},'Root'},
                             {var,{1448,41},'Vars'}}]}]}]}]}]}.
{function,{1450,1},
          ensure_init_1,4,
          [{clause,{1450,1},
                   [{var,{1450,1},'_'},
                    {var,{1450,1},'_'},
                    {var,{1450,1},'_'},
                    {var,{1450,1},'_'}],
                   [[{call,{1450,1},
                           {remote,{1450,1},
                                   {atom,{1450,1},fake},
                                   {atom,{1450,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1450,588},{atom,{1450,1},ignore}]},
           {clause,{1450,1},
                   [{cons,{1450,15},{var,{1450,16},'V'},{var,{1450,18},'Vs'}},
                    {var,{1450,23},'Used'},
                    {var,{1450,29},'G'},
                    {var,{1450,32},'InitMaps0'}],
                   [],
                   [{debug_line,1451,589},
                    {match,{1451,5},
                           {var,{1451,5},'InitMaps'},
                           {call,{1451,16},
                                 {atom,{1451,16},ensure_init_instr},
                                 [{var,{1451,34},'V'},
                                  {var,{1451,37},'Used'},
                                  {var,{1451,43},'G'},
                                  {var,{1451,46},'InitMaps0'}]}},
                    {debug_line,1452,590},
                    {call,{1452,5},
                          {atom,{1452,5},ensure_init_1},
                          [{var,{1452,19},'Vs'},
                           {var,{1452,23},'Used'},
                           {var,{1452,29},'G'},
                           {var,{1452,32},'InitMaps'}]}]},
           {clause,{1453,1},
                   [{nil,{1453,15}},
                    {var,{1453,19},'_'},
                    {var,{1453,22},'_'},
                    {var,{1453,25},'_'}],
                   [],
                   [{debug_line,1453,591},{atom,{1453,31},ok}]}]}.
{function,
 {1455,1},
 ensure_init_instr,4,
 [{clause,
   {1455,1},
   [{var,{1455,1},'_'},
    {var,{1455,1},'_'},
    {var,{1455,1},'_'},
    {var,{1455,1},'_'}],
   [[{call,
      {1455,1},
      {remote,{1455,1},{atom,{1455,1},fake},{atom,{1455,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1455,592},{atom,{1455,1},ignore}]},
  {clause,
   {1455,1},
   [{var,{1455,19},'Vtx'},
    {var,{1455,24},'Used'},
    {var,{1455,30},'G'},
    {var,{1455,33},'InitMaps0'}],
   [],
   [{debug_line,1456,593},
    {match,
     {1456,5},
     {var,{1456,5},'VarMap0'},
     {call,
      {1456,15},
      {remote,{1456,15},{atom,{1456,15},erlang},{atom,{1456,15},map_get}},
      [{var,{1456,23},'Vtx'},{var,{1456,28},'InitMaps0'}]}},
    {debug_line,1457,594},
    {'case',
     {1457,5},
     {call,
      {1457,10},
      {remote,{1457,22},{atom,{1457,10},beam_digraph},{atom,{1457,23},vertex}},
      [{var,{1457,30},'G'},{var,{1457,33},'Vtx'}]},
     [{clause,
       {1458,9},
       [{match,
         {1458,9},
         {tuple,
          {1458,9},
          [{atom,{1458,9},b_set},
           {var,{1458,9},'_'},
           {var,{1458,20},'Dst'},
           {var,{1458,9},'_'},
           {var,{1458,9},'_'}]},
         {var,{1458,25},'I'}}],
       [],
       [{debug_line,1459,595},
        {call,
         {1459,13},
         {atom,{1459,13},do_ensure_init_instr},
         [{var,{1459,34},'I'},
          {var,{1459,37},'VarMap0'},
          {var,{1459,46},'InitMaps0'}]},
        {debug_line,1460,596},
        {match,
         {1460,13},
         {var,{1460,13},'OutVs'},
         {call,
          {1460,21},
          {remote,
           {1460,33},
           {atom,{1460,21},beam_digraph},
           {atom,{1460,34},out_neighbours}},
          [{var,{1460,49},'G'},{var,{1460,52},'Vtx'}]}},
        {debug_line,1461,597},
        {match,
         {1461,13},
         {var,{1461,13},'VarMap'},
         {map,
          {1461,29},
          {var,{1461,22},'VarMap0'},
          [{map_field_assoc,
            {1461,34},
            {var,{1461,31},'Dst'},
            {atom,{1461,36},set}}]}},
        {debug_line,1462,598},
        {match,
         {1462,13},
         {var,{1462,13},'InitMaps'},
         {map,
          {1462,33},
          {var,{1462,24},'InitMaps0'},
          [{map_field_exact,
            {1462,38},
            {var,{1462,35},'Vtx'},
            {var,{1462,40},'VarMap'}}]}},
        {debug_line,1463,599},
        {call,
         {1463,13},
         {atom,{1463,13},ensure_init_successors},
         [{var,{1463,36},'OutVs'},
          {var,{1463,43},'G'},
          {var,{1463,46},'VarMap'},
          {var,{1463,54},'InitMaps'}]}]},
      {clause,
       {1464,9},
       [{tuple,{1464,9},[{atom,{1464,10},external},{var,{1464,19},'_'}]}],
       [],
       [{debug_line,1470,600},
        {'case',
         {1470,13},
         {lc,
          {1470,18},
          {block,0,[{var,{1470,19},'V'}]},
          [{block,0,[{atom,{1470,38},true}]},
           {m_generate,
            {1470,35},
            {map_field_exact,
             {1470,26},
             {var,{1470,24},'V'},
             {atom,{1470,29},unset}},
            {var,{1470,38},'VarMap0'}}]},
         [{clause,
           {1471,17},
           [{nil,{1471,17}}],
           [],
           [{debug_line,1472,601},{var,{1472,21},'InitMaps0'}]},
          {clause,
           {1473,17},
           [{match,
             {1473,17},
             {cons,{1473,17},{var,{1473,18},'_'},{var,{1473,20},'_'}},
             {var,{1473,23},'Unset0'}}],
           [],
           [{debug_line,1478,602},
            {match,
             {1478,21},
             {var,{1478,21},'Unset'},
             {call,
              {1478,29},
              {remote,
               {1478,36},
               {atom,{1478,29},ordsets},
               {atom,{1478,37},from_list}},
              [{var,{1478,47},'Unset0'}]}},
            {debug_line,1479,603},
            {'case',
             {1479,21},
             {call,
              {1479,26},
              {remote,
               {1479,33},
               {atom,{1479,26},ordsets},
               {atom,{1479,34},is_subset}},
              [{var,{1479,44},'Unset'},{var,{1479,51},'Used'}]},
             [{clause,
               {1480,25},
               [{atom,{1480,25},true}],
               [],
               [{debug_line,1488,604},{var,{1488,29},'InitMaps0'}]},
              {clause,
               {1489,25},
               [{atom,{1489,25},false}],
               [],
               [{debug_line,1499,605},
                {call,{1499,29},{atom,{1499,29},not_possible},[]}]}]}]}]}]},
      {clause,
       {1502,9},
       [{var,{1502,9},'_'}],
       [],
       [{debug_line,1503,606},
        {match,
         {1503,13},
         {var,{1503,13},'OutVs'},
         {call,
          {1503,21},
          {remote,
           {1503,33},
           {atom,{1503,21},beam_digraph},
           {atom,{1503,34},out_neighbours}},
          [{var,{1503,49},'G'},{var,{1503,52},'Vtx'}]}},
        {debug_line,1504,607},
        {call,
         {1504,13},
         {atom,{1504,13},ensure_init_successors},
         [{var,{1504,36},'OutVs'},
          {var,{1504,43},'G'},
          {var,{1504,46},'VarMap0'},
          {var,{1504,55},'InitMaps0'}]}]}]}]}]}.
{function,
    {1507,1},
    ensure_init_used,1,
    [{clause,
         {1507,1},
         [{var,{1507,1},'_'}],
         [[{call,
               {1507,1},
               {remote,
                   {1507,1},
                   {atom,{1507,1},fake},
                   {atom,{1507,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1507,608},{atom,{1507,1},ignore}]},
     {clause,
         {1507,1},
         [{var,{1507,18},'G'}],
         [],
         [{debug_line,1508,609},
          {match,
              {1508,5},
              {var,{1508,5},'Vs'},
              {call,
                  {1508,10},
                  {remote,
                      {1508,22},
                      {atom,{1508,10},beam_digraph},
                      {atom,{1508,23},vertices}},
                  [{var,{1508,32},'G'}]}},
          {debug_line,1509,610},
          {call,
              {1509,5},
              {atom,{1509,5},ensure_init_used_1},
              [{var,{1509,24},'Vs'},{var,{1509,28},'G'},{nil,{1509,31}}]}]}]}.
{function,
    {1511,1},
    ensure_init_used_1,3,
    [{clause,
         {1511,1},
         [{var,{1511,1},'_'},{var,{1511,1},'_'},{var,{1511,1},'_'}],
         [[{call,
               {1511,1},
               {remote,
                   {1511,1},
                   {atom,{1511,1},fake},
                   {atom,{1511,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1511,611},{atom,{1511,1},ignore}]},
     {clause,
         {1511,1},
         [{cons,
              {1511,20},
              {tuple,
                  {1511,21},
                  [{var,{1511,22},'Vtx'},
                   {match,
                       {1511,26},
                       {tuple,
                           {1511,26},
                           [{atom,{1511,26},b_set},
                            {var,{1511,26},'_'},
                            {var,{1511,37},'Dst'},
                            {var,{1511,26},'_'},
                            {var,{1511,26},'_'}]},
                       {var,{1511,42},'I'}}]},
              {var,{1511,45},'Vs'}},
          {var,{1511,50},'G'},
          {var,{1511,53},'Acc0'}],
         [],
         [{debug_line,1512,612},
          {match,
              {1512,5},
              {var,{1512,5},'Acc1'},
              {cons,
                  {1512,12},
                  {call,
                      {1512,13},
                      {remote,
                          {1512,21},
                          {atom,{1512,13},beam_ssa},
                          {atom,{1512,22},used}},
                      [{var,{1512,27},'I'}]},
                  {var,{1512,30},'Acc0'}}},
          {debug_line,1513,613},
          {'case',
              {1513,5},
              {call,
                  {1513,10},
                  {remote,
                      {1513,22},
                      {atom,{1513,10},beam_digraph},
                      {atom,{1513,23},out_degree}},
                  [{var,{1513,34},'G'},{var,{1513,37},'Vtx'}]},
              [{clause,
                   {1514,9},
                   [{integer,{1514,9},2}],
                   [],
                   [{debug_line,1515,614},
                    {match,
                        {1515,13},
                        {var,{1515,13},'Acc'},
                        {cons,
                            {1515,19},
                            {cons,
                                {1515,20},
                                {var,{1515,21},'Dst'},
                                {nil,{1515,24}}},
                            {var,{1515,26},'Acc1'}}},
                    {debug_line,1516,615},
                    {call,
                        {1516,13},
                        {atom,{1516,13},ensure_init_used_1},
                        [{var,{1516,32},'Vs'},
                         {var,{1516,36},'G'},
                         {var,{1516,39},'Acc'}]}]},
               {clause,
                   {1517,9},
                   [{var,{1517,9},'_'}],
                   [],
                   [{debug_line,1518,616},
                    {call,
                        {1518,13},
                        {atom,{1518,13},ensure_init_used_1},
                        [{var,{1518,32},'Vs'},
                         {var,{1518,36},'G'},
                         {var,{1518,39},'Acc1'}]}]}]}]},
     {clause,
         {1520,1},
         [{cons,
              {1520,20},
              {tuple,
                  {1520,21},
                  [{var,{1520,22},'_Vtx'},
                   {tuple,
                       {1520,27},
                       [{atom,{1520,28},br},{var,{1520,31},'Bool'}]}]},
              {var,{1520,38},'Vs'}},
          {var,{1520,43},'G'},
          {var,{1520,46},'Acc'}],
         [],
         [{debug_line,1521,617},
          {call,
              {1521,5},
              {atom,{1521,5},ensure_init_used_1},
              [{var,{1521,24},'Vs'},
               {var,{1521,28},'G'},
               {block,0,
                   [{cons,
                        {1521,31},
                        {cons,
                            {1521,32},
                            {var,{1521,33},'Bool'},
                            {nil,{1521,37}}},
                        {var,{1521,39},'Acc'}}]}]}]},
     {clause,
         {1522,1},
         [{cons,{1522,20},{var,{1522,21},'_'},{var,{1522,23},'Vs'}},
          {var,{1522,28},'G'},
          {var,{1522,31},'Acc'}],
         [],
         [{debug_line,1523,618},
          {call,
              {1523,5},
              {atom,{1523,5},ensure_init_used_1},
              [{var,{1523,24},'Vs'},
               {var,{1523,28},'G'},
               {var,{1523,31},'Acc'}]}]},
     {clause,
         {1524,1},
         [{nil,{1524,20}},{var,{1524,24},'_G'},{var,{1524,28},'Acc'}],
         [],
         [{debug_line,1525,619},
          {call,
              {1525,5},
              {remote,
                  {1525,12},
                  {atom,{1525,5},ordsets},
                  {atom,{1525,13},union}},
              [{var,{1525,19},'Acc'}]}]}]}.
{function,
 {1527,1},
 do_ensure_init_instr,3,
 [{clause,
   {1527,1},
   [{var,{1527,1},'_'},{var,{1527,1},'_'},{var,{1527,1},'_'}],
   [[{call,
      {1527,1},
      {remote,{1527,1},{atom,{1527,1},fake},{atom,{1527,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1527,620},{atom,{1527,1},ignore}]},
  {clause,
   {1527,1},
   [{tuple,
     {1527,22},
     [{atom,{1527,22},b_set},
      {var,{1527,22},'_'},
      {var,{1527,22},'_'},
      {atom,{1527,32},phi},
      {var,{1527,41},'Args'}]},
    {var,{1528,22},'_VarMap'},
    {var,{1528,31},'InitMaps'}],
   [],
   [{debug_line,1529,621},
    {match,
     {1529,5},
     {var,{1529,5},'_'},
     {lc,
      {1529,9},
      {block,0,
       [{call,
         {1529,10},
         {atom,{1529,10},ensure_init_used},
         [{var,{1529,27},'Var'},
          {block,0,
           [{call,
             {1529,32},
             {remote,{1529,36},{atom,{1529,32},maps},{atom,{1529,37},get}},
             [{var,{1529,41},'From'},
              {var,{1529,47},'InitMaps'},
              {block,0,[{map,{1529,57},[]}]}]}]}]}]},
      [{block,0,[{debug_line,1530,622},{atom,{1530,36},true}]},
       {generate,
        {1530,33},
        {tuple,
         {1530,13},
         [{match,
           {1530,14},
           {tuple,{1530,14},[{atom,{1530,14},b_var},{var,{1530,14},'_'}]},
           {var,{1530,23},'Var'}},
          {var,{1530,27},'From'}]},
        {var,{1530,36},'Args'}}]}},
    {debug_line,1531,623},
    {atom,{1531,5},ok}]},
  {clause,
   {1532,1},
   [{match,
     {1532,22},
     {tuple,
      {1532,22},
      [{atom,{1532,22},b_set},
       {var,{1532,22},'_'},
       {var,{1532,22},'_'},
       {var,{1532,22},'_'},
       {var,{1532,22},'_'}]},
     {var,{1532,31},'I'}},
    {var,{1532,34},'VarMap'},
    {var,{1532,42},'_InitMaps'}],
   [],
   [{debug_line,1533,624},
    {match,
     {1533,5},
     {var,{1533,5},'Used'},
     {call,
      {1533,12},
      {remote,{1533,20},{atom,{1533,12},beam_ssa},{atom,{1533,21},used}},
      [{var,{1533,26},'I'}]}},
    {debug_line,1534,625},
    {match,
     {1534,5},
     {var,{1534,5},'_'},
     {lc,
      {1534,9},
      {block,0,
       [{call,
         {1534,10},
         {atom,{1534,10},ensure_init_used},
         [{var,{1534,27},'Var'},{var,{1534,32},'VarMap'}]}]},
      [{block,0,[{atom,{1534,50},true}]},
       {generate,{1534,47},{var,{1534,43},'Var'},{var,{1534,50},'Used'}}]}},
    {debug_line,1535,626},
    {atom,{1535,5},ok}]}]}.
{function,
    {1537,1},
    ensure_init_used,2,
    [{clause,
         {1537,1},
         [{var,{1537,1},'_'},{var,{1537,1},'_'}],
         [[{call,
               {1537,1},
               {remote,
                   {1537,1},
                   {atom,{1537,1},fake},
                   {atom,{1537,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1537,627},{atom,{1537,1},ignore}]},
     {clause,
         {1537,1},
         [{var,{1537,18},'Var'},{var,{1537,23},'VarMap'}],
         [],
         [{debug_line,1538,628},
          {'case',
              {1538,5},
              {var,{1538,10},'VarMap'},
              [{clause,
                   {1539,9},
                   [{map,
                        {1539,9},
                        [{map_field_exact,
                             {1539,14},
                             {var,{1539,11},'Var'},
                             {atom,{1539,16},unset}}]}],
                   [],
                   [{debug_line,1539,629},
                    {call,{1539,26},{atom,{1539,26},not_possible},[]}]},
               {clause,
                   {1540,9},
                   [{map,
                        {1540,9},
                        [{map_field_exact,
                             {1540,14},
                             {var,{1540,11},'Var'},
                             {atom,{1540,16},set}}]}],
                   [],
                   [{debug_line,1540,630},{atom,{1540,24},ok}]},
               {clause,
                   {1541,9},
                   [{map,{1541,9},[]}],
                   [],
                   [{debug_line,1541,631},{atom,{1541,16},ok}]}]}]}]}.
{function,
    {1544,1},
    ensure_init_successors,4,
    [{clause,
         {1544,1},
         [{var,{1544,1},'_'},
          {var,{1544,1},'_'},
          {var,{1544,1},'_'},
          {var,{1544,1},'_'}],
         [[{call,
               {1544,1},
               {remote,
                   {1544,1},
                   {atom,{1544,1},fake},
                   {atom,{1544,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1544,632},{atom,{1544,1},ignore}]},
     {clause,
         {1544,1},
         [{cons,{1544,24},{var,{1544,25},'To'},{var,{1544,28},'Vs'}},
          {var,{1544,33},'G'},
          {var,{1544,36},'Vars0'},
          {var,{1544,43},'InitMaps0'}],
         [],
         [{debug_line,1545,633},
          {'case',
              {1545,5},
              {var,{1545,10},'InitMaps0'},
              [{clause,
                   {1546,9},
                   [{map,
                        {1546,9},
                        [{map_field_exact,
                             {1546,13},
                             {var,{1546,11},'To'},
                             {var,{1546,15},'Vars1'}}]}],
                   [],
                   [{debug_line,1547,634},
                    {match,
                        {1547,13},
                        {var,{1547,13},'Vars'},
                        {call,
                            {1547,20},
                            {atom,{1547,20},join_inits},
                            [{var,{1547,31},'Vars0'},
                             {var,{1547,38},'Vars1'}]}},
                    {debug_line,1548,635},
                    {match,
                        {1548,13},
                        {var,{1548,13},'InitMaps'},
                        {map,
                            {1548,33},
                            {var,{1548,24},'InitMaps0'},
                            [{map_field_exact,
                                 {1548,37},
                                 {var,{1548,35},'To'},
                                 {var,{1548,39},'Vars'}}]}},
                    {debug_line,1549,636},
                    {call,
                        {1549,13},
                        {atom,{1549,13},ensure_init_successors},
                        [{var,{1549,36},'Vs'},
                         {var,{1549,40},'G'},
                         {var,{1549,43},'Vars0'},
                         {var,{1549,50},'InitMaps'}]}]},
               {clause,
                   {1550,9},
                   [{map,{1550,9},[]}],
                   [],
                   [{debug_line,1551,637},
                    {match,
                        {1551,13},
                        {var,{1551,13},'InitMaps'},
                        {map,
                            {1551,33},
                            {var,{1551,24},'InitMaps0'},
                            [{map_field_assoc,
                                 {1551,37},
                                 {var,{1551,35},'To'},
                                 {var,{1551,39},'Vars0'}}]}},
                    {debug_line,1552,638},
                    {call,
                        {1552,13},
                        {atom,{1552,13},ensure_init_successors},
                        [{var,{1552,36},'Vs'},
                         {var,{1552,40},'G'},
                         {var,{1552,43},'Vars0'},
                         {var,{1552,50},'InitMaps'}]}]}]}]},
     {clause,
         {1554,1},
         [{nil,{1554,24}},
          {var,{1554,28},'_'},
          {var,{1554,31},'_'},
          {var,{1554,34},'InitMaps'}],
         [],
         [{debug_line,1555,639},{var,{1555,5},'InitMaps'}]}]}.
{function,
    {1557,1},
    join_inits,2,
    [{clause,
         {1557,1},
         [{var,{1557,1},'_'},{var,{1557,1},'_'}],
         [[{call,
               {1557,1},
               {remote,
                   {1557,1},
                   {atom,{1557,1},fake},
                   {atom,{1557,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1557,640},{atom,{1557,1},ignore}]},
     {clause,
         {1557,1},
         [{var,{1557,12},'VarMap0'},{var,{1557,21},'VarMap1'}],
         [],
         [{debug_line,1558,641},
          {call,
              {1558,5},
              {atom,{1558,5},join_inits_1},
              [{block,0,
                   [{call,
                        {1558,18},
                        {remote,
                            {1558,22},
                            {atom,{1558,18},maps},
                            {atom,{1558,23},to_list}},
                        [{var,{1558,31},'VarMap0'}]}]},
               {var,{1558,41},'VarMap1'}]}]}]}.
{function,
    {1560,1},
    join_inits_1,2,
    [{clause,
         {1560,1},
         [{var,{1560,1},'_'},{var,{1560,1},'_'}],
         [[{call,
               {1560,1},
               {remote,
                   {1560,1},
                   {atom,{1560,1},fake},
                   {atom,{1560,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1560,642},{atom,{1560,1},ignore}]},
     {clause,
         {1560,1},
         [{cons,
              {1560,14},
              {tuple,{1560,15},[{var,{1560,16},'V'},{var,{1560,18},'State0'}]},
              {var,{1560,26},'Vs'}},
          {var,{1560,31},'VarMap'}],
         [],
         [{debug_line,1561,643},
          {match,
              {1561,5},
              {var,{1561,5},'State1'},
              {call,
                  {1561,14},
                  {remote,
                      {1561,14},
                      {atom,{1561,14},erlang},
                      {atom,{1561,14},map_get}},
                  [{var,{1561,22},'V'},{var,{1561,25},'VarMap'}]}},
          {debug_line,1562,644},
          {match,
              {1562,5},
              {var,{1562,5},'State'},
              {'case',
                  {1562,13},
                  {tuple,
                      {1562,18},
                      [{var,{1562,19},'State0'},{var,{1562,26},'State1'}]},
                  [{clause,
                       {1563,17},
                       [{tuple,
                            {1563,17},
                            [{atom,{1563,18},set},{atom,{1563,22},set}]}],
                       [],
                       [{debug_line,1563,645},{atom,{1563,30},set}]},
                   {clause,
                       {1564,17},
                       [{tuple,
                            {1564,17},
                            [{var,{1564,18},'_'},{var,{1564,20},'_'}]}],
                       [],
                       [{debug_line,1564,646},{atom,{1564,26},unset}]}]}},
          {debug_line,1566,647},
          {'case',
              {1566,5},
              {op,{1566,16},
                  '=:=',
                  {var,{1566,10},'State'},
                  {var,{1566,20},'State1'}},
              [{clause,
                   {1567,9},
                   [{atom,{1567,9},true}],
                   [],
                   [{debug_line,1568,648},
                    {call,
                        {1568,13},
                        {atom,{1568,13},join_inits_1},
                        [{var,{1568,26},'Vs'},{var,{1568,30},'VarMap'}]}]},
               {clause,
                   {1569,9},
                   [{atom,{1569,9},false}],
                   [],
                   [{debug_line,1570,649},
                    {call,
                        {1570,13},
                        {atom,{1570,13},join_inits_1},
                        [{var,{1570,26},'Vs'},
                         {block,0,
                             [{map,
                                  {1570,36},
                                  {var,{1570,30},'VarMap'},
                                  [{map_field_exact,
                                       {1570,39},
                                       {var,{1570,38},'V'},
                                       {var,{1570,41},'State'}}]}]}]}]}]}]},
     {clause,
         {1572,1},
         [{nil,{1572,14}},{var,{1572,18},'VarMap'}],
         [],
         [{debug_line,1573,650},{var,{1573,5},'VarMap'}]}]}.
{function,
    {1584,1},
    digraph_to_ssa,3,
    [{clause,
         {1584,1},
         [{var,{1584,1},'_'},{var,{1584,1},'_'},{var,{1584,1},'_'}],
         [[{call,
               {1584,1},
               {remote,
                   {1584,1},
                   {atom,{1584,1},fake},
                   {atom,{1584,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1584,651},{atom,{1584,1},ignore}]},
     {clause,
         {1584,1},
         [{var,{1584,16},'Ls'},{var,{1584,20},'G'},{var,{1584,23},'Blocks0'}],
         [],
         [{debug_line,1585,652},
          {match,
              {1585,5},
              {var,{1585,5},'Seen'},
              {call,
                  {1585,12},
                  {remote,
                      {1585,16},
                      {atom,{1585,12},sets},
                      {atom,{1585,17},new}},
                  []}},
          {debug_line,1586,653},
          {match,
              {1586,5},
              {tuple,{1586,5},[{var,{1586,6},'Blocks'},{var,{1586,13},'_'}]},
              {call,
                  {1586,18},
                  {atom,{1586,18},digraph_to_ssa},
                  [{var,{1586,33},'Ls'},
                   {var,{1586,37},'G'},
                   {var,{1586,40},'Blocks0'},
                   {var,{1586,49},'Seen'}]}},
          {debug_line,1587,654},
          {var,{1587,5},'Blocks'}]}]}.
{function,
    {1589,1},
    digraph_to_ssa,4,
    [{clause,
         {1589,1},
         [{var,{1589,1},'_'},
          {var,{1589,1},'_'},
          {var,{1589,1},'_'},
          {var,{1589,1},'_'}],
         [[{call,
               {1589,1},
               {remote,
                   {1589,1},
                   {atom,{1589,1},fake},
                   {atom,{1589,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1589,655},{atom,{1589,1},ignore}]},
     {clause,
         {1589,1},
         [{cons,{1589,16},{var,{1589,17},'L'},{var,{1589,19},'Ls'}},
          {var,{1589,24},'G'},
          {var,{1589,27},'Blocks0'},
          {var,{1589,36},'Seen0'}],
         [],
         [{debug_line,1590,656},
          {match,
              {1590,5},
              {var,{1590,5},'Seen1'},
              {call,
                  {1590,13},
                  {remote,
                      {1590,17},
                      {atom,{1590,13},sets},
                      {atom,{1590,18},add_element}},
                  [{var,{1590,30},'L'},{var,{1590,33},'Seen0'}]}},
          {debug_line,1591,657},
          {match,
              {1591,5},
              {tuple,
                  {1591,5},
                  [{var,{1591,6},'Blk'},{var,{1591,10},'Successors0'}]},
              {call,
                  {1591,25},
                  {atom,{1591,25},digraph_to_ssa_blk},
                  [{var,{1591,44},'L'},
                   {var,{1591,47},'G'},
                   {var,{1591,50},'Blocks0'},
                   {nil,{1591,59}}]}},
          {debug_line,1592,658},
          {match,
              {1592,5},
              {var,{1592,5},'Blocks1'},
              {map,
                  {1592,22},
                  {var,{1592,15},'Blocks0'},
                  [{map_field_assoc,
                       {1592,25},
                       {var,{1592,24},'L'},
                       {var,{1592,27},'Blk'}}]}},
          {debug_line,1593,659},
          {match,
              {1593,5},
              {var,{1593,5},'Successors'},
              {lc,{1593,18},
                  {block,0,[{var,{1593,19},'S'}]},
                  [{block,0,[{atom,{1593,29},true}]},
                   {generate,
                       {1593,26},
                       {var,{1593,24},'S'},
                       {var,{1593,29},'Successors0'}},
                   {block,0,[{debug_line,1594,660},{atom,{1594,24},true}]},
                   {op,{1594,24},
                       'not',
                       {call,
                           {1594,28},
                           {remote,
                               {1594,32},
                               {atom,{1594,28},sets},
                               {atom,{1594,33},is_element}},
                           [{var,{1594,44},'S'},{var,{1594,47},'Seen1'}]}}]}},
          {debug_line,1595,661},
          {match,
              {1595,5},
              {tuple,
                  {1595,5},
                  [{var,{1595,6},'Blocks'},{var,{1595,13},'Seen'}]},
              {call,
                  {1595,21},
                  {atom,{1595,21},digraph_to_ssa},
                  [{var,{1595,36},'Successors'},
                   {var,{1595,48},'G'},
                   {var,{1595,51},'Blocks1'},
                   {var,{1595,60},'Seen1'}]}},
          {debug_line,1596,662},
          {call,
              {1596,5},
              {atom,{1596,5},digraph_to_ssa},
              [{var,{1596,20},'Ls'},
               {var,{1596,24},'G'},
               {var,{1596,27},'Blocks'},
               {var,{1596,35},'Seen'}]}]},
     {clause,
         {1597,1},
         [{nil,{1597,16}},
          {var,{1597,20},'_G'},
          {var,{1597,24},'Blocks'},
          {var,{1597,32},'Seen'}],
         [],
         [{debug_line,1598,663},
          {tuple,
              {1598,5},
              [{var,{1598,6},'Blocks'},{var,{1598,13},'Seen'}]}]}]}.
{function,
 {1600,1},
 digraph_to_ssa_blk,4,
 [{clause,
   {1600,1},
   [{var,{1600,1},'_'},
    {var,{1600,1},'_'},
    {var,{1600,1},'_'},
    {var,{1600,1},'_'}],
   [[{call,
      {1600,1},
      {remote,{1600,1},{atom,{1600,1},fake},{atom,{1600,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1600,664},{atom,{1600,1},ignore}]},
  {clause,
   {1600,1},
   [{var,{1600,20},'From'},
    {var,{1600,26},'G'},
    {var,{1600,29},'Blocks'},
    {var,{1600,37},'Acc0'}],
   [],
   [{debug_line,1601,665},
    {'case',
     {1601,5},
     {call,
      {1601,10},
      {remote,{1601,22},{atom,{1601,10},beam_digraph},{atom,{1601,23},vertex}},
      [{var,{1601,30},'G'},{var,{1601,33},'From'}]},
     [{clause,
       {1602,9},
       [{match,
         {1602,9},
         {tuple,
          {1602,9},
          [{atom,{1602,9},b_set},
           {var,{1602,9},'_'},
           {var,{1602,20},'Dst'},
           {var,{1602,9},'_'},
           {var,{1602,9},'_'}]},
         {var,{1602,25},'I'}}],
       [],
       [{debug_line,1603,666},
        {'case',
         {1603,13},
         {call,
          {1603,18},
          {atom,{1603,18},get_targets},
          [{var,{1603,30},'From'},{var,{1603,36},'G'}]},
         [{clause,
           {1604,17},
           [{tuple,
             {1604,17},
             [{atom,{1604,18},br},
              {var,{1604,21},'Succ'},
              {var,{1604,26},'Fail'}]}],
           [],
           [{debug_line,1606,667},
            {match,
             {1606,21},
             {var,{1606,21},'Br'},
             {call,
              {1606,26},
              {remote,
               {1606,34},
               {atom,{1606,26},beam_ssa},
               {atom,{1606,35},normalize}},
              [{block,0,
                [{tuple,
                  {1606,45},
                  [{atom,{1606,45},b_br},
                   {map,{1606,45},[]},
                   {var,{1606,56},'Dst'},
                   {var,{1606,65},'Succ'},
                   {var,{1606,75},'Fail'}]}]}]}},
            {debug_line,1607,668},
            {match,
             {1607,21},
             {var,{1607,21},'Is'},
             {call,
              {1607,26},
              {remote,
               {1607,26},
               {atom,{1607,26},lists},
               {atom,{1607,26},reverse}},
              [{var,{1607,34},'Acc0'},
               {block,0,
                [{cons,{1607,40},{var,{1607,41},'I'},{nil,{1607,42}}}]}]}},
            {debug_line,1608,669},
            {match,
             {1608,21},
             {var,{1608,21},'Blk'},
             {tuple,
              {1608,27},
              [{atom,{1608,27},b_blk},
               {map,{1608,27},[]},
               {var,{1608,37},'Is'},
               {var,{1608,45},'Br'}]}},
            {debug_line,1609,670},
            {tuple,
             {1609,21},
             [{var,{1609,22},'Blk'},
              {call,
               {1609,26},
               {remote,
                {1609,34},
                {atom,{1609,26},beam_ssa},
                {atom,{1609,35},successors}},
               [{var,{1609,46},'Blk'}]}]}]},
          {clause,
           {1610,17},
           [{tuple,{1610,17},[{atom,{1610,18},br},{var,{1610,21},'Next'}]}],
           [],
           [{debug_line,1612,671},
            {match,
             {1612,21},
             {var,{1612,21},'Br'},
             {call,
              {1612,26},
              {atom,{1612,26},oneway_br},
              [{var,{1612,36},'Next'}]}},
            {debug_line,1613,672},
            {match,
             {1613,21},
             {var,{1613,21},'Is'},
             {call,
              {1613,26},
              {remote,
               {1613,26},
               {atom,{1613,26},lists},
               {atom,{1613,26},reverse}},
              [{var,{1613,34},'Acc0'},
               {block,0,
                [{cons,{1613,40},{var,{1613,41},'I'},{nil,{1613,42}}}]}]}},
            {debug_line,1614,673},
            {match,
             {1614,21},
             {var,{1614,21},'Blk'},
             {tuple,
              {1614,27},
              [{atom,{1614,27},b_blk},
               {map,{1614,27},[]},
               {var,{1614,37},'Is'},
               {var,{1614,45},'Br'}]}},
            {debug_line,1615,674},
            {tuple,
             {1615,21},
             [{var,{1615,22},'Blk'},
              {call,
               {1615,26},
               {remote,
                {1615,34},
                {atom,{1615,26},beam_ssa},
                {atom,{1615,35},successors}},
               [{var,{1615,46},'Blk'}]}]}]}]}]},
      {clause,
       {1617,9},
       [{atom,{1617,9},br}],
       [],
       [{debug_line,1619,675},
        {match,
         {1619,13},
         {tuple,{1619,13},[{atom,{1619,14},br},{var,{1619,17},'Next'}]},
         {call,
          {1619,25},
          {atom,{1619,25},get_targets},
          [{var,{1619,37},'From'},{var,{1619,43},'G'}]}},
        {debug_line,1620,676},
        {match,
         {1620,13},
         {var,{1620,13},'Blk'},
         {tuple,
          {1620,19},
          [{atom,{1620,19},b_blk},
           {map,{1620,19},[]},
           {nil,{1620,29}},
           {call,
            {1620,37},
            {atom,{1620,37},oneway_br},
            [{var,{1620,47},'Next'}]}]}},
        {debug_line,1621,677},
        {tuple,
         {1621,13},
         [{var,{1621,14},'Blk'},
          {call,
           {1621,18},
           {remote,
            {1621,26},
            {atom,{1621,18},beam_ssa},
            {atom,{1621,27},successors}},
           [{var,{1621,38},'Blk'}]}]}]},
      {clause,
       {1622,9},
       [{tuple,{1622,9},[{atom,{1622,10},br},{var,{1622,13},'Bool'}]}],
       [],
       [{debug_line,1627,678},
        {match,{1627,13},{nil,{1627,13}},{var,{1627,18},'Acc0'}},
        {debug_line,1628,679},
        {match,
         {1628,13},
         {tuple,
          {1628,13},
          [{atom,{1628,14},br},{var,{1628,17},'Succ'},{var,{1628,22},'Fail'}]},
         {call,
          {1628,30},
          {atom,{1628,30},get_targets},
          [{var,{1628,42},'From'},{var,{1628,48},'G'}]}},
        {debug_line,1629,680},
        {match,
         {1629,13},
         {var,{1629,13},'Br'},
         {call,
          {1629,18},
          {remote,
           {1629,26},
           {atom,{1629,18},beam_ssa},
           {atom,{1629,27},normalize}},
          [{block,0,
            [{tuple,
              {1629,37},
              [{atom,{1629,37},b_br},
               {map,{1629,37},[]},
               {var,{1629,48},'Bool'},
               {var,{1629,58},'Succ'},
               {var,{1629,68},'Fail'}]}]}]}},
        {debug_line,1630,681},
        {match,
         {1630,13},
         {var,{1630,13},'Blk'},
         {tuple,
          {1630,19},
          [{atom,{1630,19},b_blk},
           {map,{1630,19},[]},
           {nil,{1630,29}},
           {var,{1630,37},'Br'}]}},
        {debug_line,1631,682},
        {tuple,
         {1631,13},
         [{var,{1631,14},'Blk'},
          {call,
           {1631,18},
           {remote,
            {1631,26},
            {atom,{1631,18},beam_ssa},
            {atom,{1631,27},successors}},
           [{var,{1631,38},'Blk'}]}]}]},
      {clause,
       {1632,9},
       [{tuple,{1632,9},[{atom,{1632,10},external},{var,{1632,19},'Sub'}]}],
       [],
       [{debug_line,1633,683},
        {match,
         {1633,13},
         {tuple,
          {1633,13},
          [{atom,{1633,13},b_blk},
           {var,{1633,13},'_'},
           {var,{1633,23},'Is0'},
           {var,{1633,13},'_'}]},
         {match,
          {1633,30},
          {var,{1633,30},'Blk'},
          {call,
           {1633,36},
           {remote,{1633,36},{atom,{1633,36},erlang},{atom,{1633,36},map_get}},
           [{var,{1633,44},'From'},{var,{1633,50},'Blocks'}]}}},
        {debug_line,1634,684},
        {match,
         {1634,13},
         {var,{1634,13},'Is'},
         {lc,
          {1634,18},
          {block,0,
           [{block,
             {1634,19},
             [{match,
               {1634,27},
               {var,{1634,27},rec28},
               {call,
                {1634,32},
                {atom,{1634,32},sub_args},
                [{var,{1634,41},'Args0'},{var,{1634,48},'Sub'}]}},
              {match,{1634,19},{var,{1634,19},rec29},{var,{1634,19},'I'}},
              {'case',
               {1634,27},
               {var,{1634,19},rec29},
               [{clause,
                 {1634,27},
                 [{tuple,
                   {1634,27},
                   [{atom,{1634,27},b_set},
                    {var,{1634,27},'_'},
                    {var,{1634,27},'_'},
                    {var,{1634,27},'_'},
                    {var,{1634,27},'_'}]}],
                 [],
                 [{call,
                   {1634,27},
                   {remote,
                    {1634,27},
                    {atom,{1634,27},erlang},
                    {atom,{1634,27},setelement}},
                   [{integer,{1634,27},5},
                    {var,{1634,19},rec29},
                    {var,{1634,27},rec28}]}]},
                {clause,
                 [{generated,true},{location,{1634,27}}],
                 [{var,[{generated,true},{location,{1634,27}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1634,27}}],
                   {remote,
                    [{generated,true},{location,{1634,27}}],
                    {atom,[{generated,true},{location,{1634,27}}],erlang},
                    {atom,[{generated,true},{location,{1634,27}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1634,27}}],
                     [{atom,[{generated,true},{location,{1634,27}}],badrecord},
                      {var,{1634,19},rec29}]}]}]}]}]}]},
          [{block,0,[{debug_line,1635,685},{atom,{1635,47},true}]},
           {generate_strict,
            {1635,43},
            {match,
             {1635,22},
             {tuple,
              {1635,22},
              [{atom,{1635,22},b_set},
               {var,{1635,22},'_'},
               {var,{1635,22},'_'},
               {var,{1635,22},'_'},
               {var,{1635,34},'Args0'}]},
             {var,{1635,41},'I'}},
            {var,{1635,47},'Is0'}}]}},
        {debug_line,1636,686},
        {tuple,
         {1636,13},
         [{block,
           {1636,14},
           [{match,{1636,14},{var,{1636,14},rec30},{var,{1636,14},'Blk'}},
            {'case',
             {1636,24},
             {var,{1636,14},rec30},
             [{clause,
               {1636,24},
               [{tuple,
                 {1636,24},
                 [{atom,{1636,24},b_blk},
                  {var,{1636,24},'_'},
                  {var,{1636,24},'_'},
                  {var,{1636,24},'_'}]}],
               [],
               [{call,
                 {1636,24},
                 {remote,
                  {1636,24},
                  {atom,{1636,24},erlang},
                  {atom,{1636,24},setelement}},
                 [{integer,{1636,24},3},
                  {var,{1636,14},rec30},
                  {var,{1636,27},'Is'}]}]},
              {clause,
               [{generated,true},{location,{1636,24}}],
               [{var,[{generated,true},{location,{1636,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{1636,24}}],
                 {remote,
                  [{generated,true},{location,{1636,24}}],
                  {atom,[{generated,true},{location,{1636,24}}],erlang},
                  {atom,[{generated,true},{location,{1636,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1636,24}}],
                   [{atom,[{generated,true},{location,{1636,24}}],badrecord},
                    {var,{1636,14},rec30}]}]}]}]}]},
          {nil,{1636,31}}]}]}]}]}]}.
{function,
    {1647,1},
    get_def,2,
    [{clause,
         {1647,1},
         [{var,{1647,1},'_'},{var,{1647,1},'_'}],
         [[{call,
               {1647,1},
               {remote,
                   {1647,1},
                   {atom,{1647,1},fake},
                   {atom,{1647,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1647,687},{atom,{1647,1},ignore}]},
     {clause,
         {1647,1},
         [{match,
              {1647,9},
              {tuple,{1647,9},[{atom,{1647,9},b_var},{var,{1647,9},'_'}]},
              {var,{1647,18},'Bool'}},
          {tuple,
              {1647,24},
              [{atom,{1647,24},st},
               {var,{1647,33},'Defs'},
               {var,{1647,24},'_'},
               {var,{1647,24},'_'},
               {var,{1647,24},'_'},
               {var,{1647,24},'_'},
               {var,{1647,24},'_'}]}],
         [],
         [{debug_line,1648,688},
          {'case',
              {1648,5},
              {var,{1648,10},'Defs'},
              [{clause,
                   {1649,9},
                   [{map,
                        {1649,9},
                        [{map_field_exact,
                             {1649,15},
                             {var,{1649,11},'Bool'},
                             {tuple,
                                 {1649,17},
                                 [{var,{1649,18},'_'},
                                  {var,{1649,20},'Def'}]}}]}],
                   [],
                   [{debug_line,1650,689},{var,{1650,13},'Def'}]},
               {clause,
                   {1651,9},
                   [{map,{1651,9},[]}],
                   [],
                   [{debug_line,1652,690},{atom,{1652,13},none}]}]}]}]}.
{function,
 {1660,1},
 get_def,3,
 [{clause,
   {1660,1},
   [{var,{1660,1},'_'},{var,{1660,1},'_'},{var,{1660,1},'_'}],
   [[{call,
      {1660,1},
      {remote,{1660,1},{atom,{1660,1},fake},{atom,{1660,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1660,691},{atom,{1660,1},ignore}]},
  {clause,
   {1660,1},
   [{var,{1660,9},'Var'},
    {var,{1660,14},'G'},
    {tuple,
     {1660,17},
     [{atom,{1660,17},st},
      {var,{1660,38},'Defs'},
      {var,{1660,27},'LDefs'},
      {var,{1660,17},'_'},
      {var,{1660,17},'_'},
      {var,{1660,17},'_'},
      {var,{1660,17},'_'}]}],
   [],
   [{debug_line,1661,692},
    {'case',
     {1661,5},
     {var,{1661,10},'LDefs'},
     [{clause,
       {1662,9},
       [{map,
         {1662,9},
         [{map_field_exact,
           {1662,14},
           {var,{1662,11},'Var'},
           {var,{1662,16},'Vtx'}}]}],
       [],
       [{debug_line,1663,693},
        {call,
         {1663,13},
         {remote,
          {1663,25},
          {atom,{1663,13},beam_digraph},
          {atom,{1663,26},vertex}},
         [{var,{1663,33},'G'},{var,{1663,36},'Vtx'}]}]},
      {clause,
       {1664,9},
       [{map,{1664,9},[]}],
       [],
       [{debug_line,1667,694},
        {'case',
         {1667,13},
         {var,{1667,18},'Defs'},
         [{clause,
           {1668,17},
           [{map,
             {1668,17},
             [{map_field_exact,
               {1668,22},
               {var,{1668,19},'Var'},
               {tuple,
                {1668,24},
                [{var,{1668,25},'_'},{var,{1668,27},'Def'}]}}]}],
           [],
           [{debug_line,1668,695},{var,{1668,36},'Def'}]},
          {clause,
           {1669,17},
           [{map,{1669,17},[]}],
           [],
           [{debug_line,1669,696},{atom,{1669,24},none}]}]}]}]}]}]}.
{function,
    {1673,1},
    add_succ_fail_edges,4,
    [{clause,
         {1673,1},
         [{var,{1673,1},'_'},
          {var,{1673,1},'_'},
          {var,{1673,1},'_'},
          {var,{1673,1},'_'}],
         [[{call,
               {1673,1},
               {remote,
                   {1673,1},
                   {atom,{1673,1},fake},
                   {atom,{1673,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1673,697},{atom,{1673,1},ignore}]},
     {clause,
         {1673,1},
         [{var,{1673,21},'From'},
          {var,{1673,27},'Succ'},
          {var,{1673,33},'Fail'},
          {var,{1673,39},'G0'}],
         [],
         [{debug_line,1674,698},
          {match,
              {1674,5},
              {var,{1674,5},'G1'},
              {call,
                  {1674,10},
                  {remote,
                      {1674,22},
                      {atom,{1674,10},beam_digraph},
                      {atom,{1674,23},add_edge}},
                  [{var,{1674,32},'G0'},
                   {var,{1674,36},'From'},
                   {var,{1674,42},'Succ'},
                   {atom,{1674,48},succ}]}},
          {debug_line,1675,699},
          {match,
              {1675,5},
              {var,{1675,5},'G'},
              {call,
                  {1675,9},
                  {remote,
                      {1675,21},
                      {atom,{1675,9},beam_digraph},
                      {atom,{1675,22},add_edge}},
                  [{var,{1675,31},'G1'},
                   {var,{1675,35},'From'},
                   {var,{1675,41},'Fail'},
                   {atom,{1675,47},fail}]}},
          {debug_line,1676,700},
          {'case',
              {1676,5},
              {call,
                  {1676,10},
                  {remote,
                      {1676,22},
                      {atom,{1676,10},beam_digraph},
                      {atom,{1676,23},out_edges}},
                  [{var,{1676,33},'G0'},{var,{1676,37},'From'}]},
              [{clause,
                   {1677,9},
                   [{cons,
                        {1677,9},
                        {match,
                            {1677,10},
                            {tuple,
                                {1677,10},
                                [{var,{1677,11},'From'},
                                 {var,{1677,16},'_'},
                                 {atom,{1677,18},next}]},
                            {var,{1677,24},'E'}},
                        {nil,{1677,25}}}],
                   [],
                   [{debug_line,1677,701},
                    {call,
                        {1677,30},
                        {remote,
                            {1677,42},
                            {atom,{1677,30},beam_digraph},
                            {atom,{1677,43},del_edge}},
                        [{var,{1677,52},'G'},{var,{1677,55},'E'}]}]},
               {clause,
                   {1678,9},
                   [{nil,{1678,9}}],
                   [],
                   [{debug_line,1678,702},{var,{1678,15},'G'}]}]}]}]}.
{function,{1681,1},
          get_vertex,2,
          [{clause,{1681,1},
                   [{var,{1681,1},'_'},{var,{1681,1},'_'}],
                   [[{call,{1681,1},
                           {remote,{1681,1},
                                   {atom,{1681,1},fake},
                                   {atom,{1681,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1681,703},{atom,{1681,1},ignore}]},
           {clause,{1681,1},
                   [{tuple,{1681,12},
                           [{atom,{1681,12},b_set},
                            {var,{1681,12},'_'},
                            {var,{1681,23},'Dst'},
                            {var,{1681,12},'_'},
                            {var,{1681,12},'_'}]},
                    {var,{1681,29},'St'}],
                   [],
                   [{debug_line,1682,704},
                    {call,{1682,5},
                          {atom,{1682,5},get_vertex},
                          [{var,{1682,16},'Dst'},{var,{1682,21},'St'}]}]},
           {clause,{1683,1},
                   [{match,{1683,12},
                           {tuple,{1683,12},
                                  [{atom,{1683,12},b_var},
                                   {var,{1683,12},'_'}]},
                           {var,{1683,21},'Var'}},
                    {tuple,{1683,26},
                           [{atom,{1683,26},st},
                            {var,{1683,26},'_'},
                            {var,{1683,36},'LDefs'},
                            {var,{1683,26},'_'},
                            {var,{1683,26},'_'},
                            {var,{1683,26},'_'},
                            {var,{1683,26},'_'}]}],
                   [],
                   [{debug_line,1684,705},
                    {call,{1684,5},
                          {remote,{1684,5},
                                  {atom,{1684,5},erlang},
                                  {atom,{1684,5},map_get}},
                          [{var,{1684,13},'Var'},{var,{1684,18},'LDefs'}]}]}]}.
{function,
    {1686,1},
    get_targets,2,
    [{clause,
         {1686,1},
         [{var,{1686,1},'_'},{var,{1686,1},'_'}],
         [[{call,
               {1686,1},
               {remote,
                   {1686,1},
                   {atom,{1686,1},fake},
                   {atom,{1686,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1686,706},{atom,{1686,1},ignore}]},
     {clause,
         {1686,1},
         [{var,{1686,13},'Vtx'},{var,{1686,18},'G'}],
         [[{call,
               {1686,26},
               {remote,
                   {1686,26},
                   {atom,{1686,26},erlang},
                   {atom,{1686,26},is_integer}},
               [{var,{1686,37},'Vtx'}]}]],
         [{debug_line,1687,707},
          {'case',
              {1687,5},
              {call,
                  {1687,10},
                  {remote,
                      {1687,22},
                      {atom,{1687,10},beam_digraph},
                      {atom,{1687,23},out_edges}},
                  [{var,{1687,33},'G'},{var,{1687,36},'Vtx'}]},
              [{clause,
                   {1688,9},
                   [{cons,
                        {1688,9},
                        {tuple,
                            {1688,10},
                            [{var,{1688,11},'_'},
                             {var,{1688,13},'To'},
                             {atom,{1688,16},next}]},
                        {nil,{1688,21}}}],
                   [],
                   [{debug_line,1689,708},
                    {tuple,
                        {1689,13},
                        [{atom,{1689,14},br},{var,{1689,17},'To'}]}]},
               {clause,
                   {1690,9},
                   [{cons,
                        {1690,9},
                        {tuple,
                            {1690,10},
                            [{var,{1690,11},'_'},
                             {var,{1690,13},'Succ'},
                             {atom,{1690,18},succ}]},
                        {cons,
                            {1690,24},
                            {tuple,
                                {1690,24},
                                [{var,{1690,25},'_'},
                                 {var,{1690,27},'Fail'},
                                 {atom,{1690,32},fail}]},
                            {nil,{1690,37}}}}],
                   [],
                   [{debug_line,1691,709},
                    {tuple,
                        {1691,13},
                        [{atom,{1691,14},br},
                         {var,{1691,17},'Succ'},
                         {var,{1691,22},'Fail'}]}]},
               {clause,
                   {1692,9},
                   [{cons,
                        {1692,9},
                        {tuple,
                            {1692,10},
                            [{var,{1692,11},'_'},
                             {var,{1692,13},'Fail'},
                             {atom,{1692,18},fail}]},
                        {cons,
                            {1692,24},
                            {tuple,
                                {1692,24},
                                [{var,{1692,25},'_'},
                                 {var,{1692,27},'Succ'},
                                 {atom,{1692,32},succ}]},
                            {nil,{1692,37}}}}],
                   [],
                   [{debug_line,1693,710},
                    {tuple,
                        {1693,13},
                        [{atom,{1693,14},br},
                         {var,{1693,17},'Succ'},
                         {var,{1693,22},'Fail'}]}]},
               {clause,
                   {1694,9},
                   [{nil,{1694,9}}],
                   [],
                   [{debug_line,1695,711},{atom,{1695,13},none}]}]}]}]}.
{function,
    {1698,1},
    get_targets,3,
    [{clause,
         {1698,1},
         [{var,{1698,1},'_'},{var,{1698,1},'_'},{var,{1698,1},'_'}],
         [[{call,
               {1698,1},
               {remote,
                   {1698,1},
                   {atom,{1698,1},fake},
                   {atom,{1698,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1698,712},{atom,{1698,1},ignore}]},
     {clause,
         {1698,1},
         [{match,
              {1698,13},
              {tuple,{1698,13},[{atom,{1698,13},b_var},{var,{1698,13},'_'}]},
              {var,{1698,22},'Var'}},
          {var,{1698,27},'G'},
          {tuple,
              {1698,30},
              [{atom,{1698,30},st},
               {var,{1698,30},'_'},
               {var,{1698,40},'LDefs'},
               {var,{1698,30},'_'},
               {var,{1698,30},'_'},
               {var,{1698,30},'_'},
               {var,{1698,30},'_'}]}],
         [],
         [{debug_line,1699,713},
          {call,
              {1699,5},
              {atom,{1699,5},get_targets},
              [{block,0,
                   [{call,
                        {1699,17},
                        {remote,
                            {1699,17},
                            {atom,{1699,17},erlang},
                            {atom,{1699,17},map_get}},
                        [{var,{1699,25},'Var'},{var,{1699,30},'LDefs'}]}]},
               {var,{1699,38},'G'}]}]}]}.
{function,
    {1701,1},
    del_out_edges,2,
    [{clause,
         {1701,1},
         [{var,{1701,1},'_'},{var,{1701,1},'_'}],
         [[{call,
               {1701,1},
               {remote,
                   {1701,1},
                   {atom,{1701,1},fake},
                   {atom,{1701,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1701,714},{atom,{1701,1},ignore}]},
     {clause,
         {1701,1},
         [{var,{1701,15},'V'},{var,{1701,18},'G'}],
         [],
         [{debug_line,1702,715},
          {call,
              {1702,5},
              {remote,
                  {1702,17},
                  {atom,{1702,5},beam_digraph},
                  {atom,{1702,18},del_edges}},
              [{var,{1702,28},'G'},
               {block,0,
                   [{call,
                        {1702,31},
                        {remote,
                            {1702,43},
                            {atom,{1702,31},beam_digraph},
                            {atom,{1702,44},out_edges}},
                        [{var,{1702,54},'G'},{var,{1702,57},'V'}]}]}]}]}]}.
{function,
    {1704,1},
    covered,3,
    [{clause,
         {1704,1},
         [{var,{1704,1},'_'},{var,{1704,1},'_'},{var,{1704,1},'_'}],
         [[{call,
               {1704,1},
               {remote,
                   {1704,1},
                   {atom,{1704,1},fake},
                   {atom,{1704,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1704,716},{atom,{1704,1},ignore}]},
     {clause,
         {1704,1},
         [{var,{1704,9},'From'},{var,{1704,15},'To'},{var,{1704,19},'G'}],
         [],
         [{debug_line,1705,717},
          {match,{1705,5},{var,{1705,5},'Seen0'},{map,{1705,13},[]}},
          {debug_line,1706,718},
          {match,
              {1706,5},
              {tuple,{1706,5},[{atom,{1706,6},yes},{var,{1706,10},'Seen'}]},
              {call,
                  {1706,18},
                  {atom,{1706,18},covered_1},
                  [{var,{1706,28},'From'},
                   {var,{1706,34},'To'},
                   {var,{1706,38},'G'},
                   {var,{1706,41},'Seen0'}]}},
          {debug_line,1707,719},
          {lc,{1707,5},
              {block,0,[{var,{1707,6},'V'}]},
              [{block,0,[{atom,{1707,27},true}]},
               {m_generate,
                   {1707,24},
                   {map_field_exact,
                       {1707,13},
                       {var,{1707,11},'V'},
                       {atom,{1707,16},reached}},
                   {var,{1707,27},'Seen'}}]}]}]}.
{function,
    {1709,1},
    covered_1,4,
    [{clause,
         {1709,1},
         [{var,{1709,1},'_'},
          {var,{1709,1},'_'},
          {var,{1709,1},'_'},
          {var,{1709,1},'_'}],
         [[{call,
               {1709,1},
               {remote,
                   {1709,1},
                   {atom,{1709,1},fake},
                   {atom,{1709,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1709,720},{atom,{1709,1},ignore}]},
     {clause,
         {1709,1},
         [{var,{1709,11},'To'},
          {var,{1709,15},'To'},
          {var,{1709,19},'_G'},
          {var,{1709,23},'Seen'}],
         [],
         [{debug_line,1710,721},
          {tuple,{1710,5},[{atom,{1710,6},yes},{var,{1710,10},'Seen'}]}]},
     {clause,
         {1711,1},
         [{var,{1711,11},'From'},
          {var,{1711,17},'To'},
          {var,{1711,21},'G'},
          {var,{1711,24},'Seen'}],
         [],
         [{debug_line,1712,722},
          {match,
              {1712,5},
              {var,{1712,5},'Vs'},
              {call,
                  {1712,10},
                  {remote,
                      {1712,22},
                      {atom,{1712,10},beam_digraph},
                      {atom,{1712,23},out_neighbours}},
                  [{var,{1712,38},'G'},{var,{1712,41},'From'}]}},
          {debug_line,1713,723},
          {call,
              {1713,5},
              {atom,{1713,5},covered_list},
              [{var,{1713,18},'Vs'},
               {var,{1713,22},'To'},
               {var,{1713,26},'G'},
               {var,{1713,29},'Seen'},
               {atom,{1713,35},no}]}]}]}.
{function,
 {1715,1},
 covered_list,5,
 [{clause,
   {1715,1},
   [{var,{1715,1},'_'},
    {var,{1715,1},'_'},
    {var,{1715,1},'_'},
    {var,{1715,1},'_'},
    {var,{1715,1},'_'}],
   [[{call,
      {1715,1},
      {remote,{1715,1},{atom,{1715,1},fake},{atom,{1715,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1715,724},{atom,{1715,1},ignore}]},
  {clause,
   {1715,1},
   [{cons,{1715,14},{var,{1715,15},'V'},{var,{1715,17},'Vs'}},
    {var,{1715,22},'To'},
    {var,{1715,26},'G'},
    {var,{1715,29},'Seen0'},
    {var,{1715,36},'AnyFound'}],
   [],
   [{debug_line,1716,725},
    {'case',
     {1716,5},
     {var,{1716,10},'Seen0'},
     [{clause,
       {1717,9},
       [{map,
         {1717,9},
         [{map_field_exact,
           {1717,13},
           {var,{1717,11},'V'},
           {atom,{1717,16},reached}}]}],
       [],
       [{debug_line,1718,726},
        {call,
         {1718,13},
         {atom,{1718,13},covered_list},
         [{var,{1718,26},'Vs'},
          {var,{1718,30},'To'},
          {var,{1718,34},'G'},
          {var,{1718,37},'Seen0'},
          {atom,{1718,44},yes}]}]},
      {clause,
       {1719,9},
       [{map,
         {1719,9},
         [{map_field_exact,
           {1719,13},
           {var,{1719,11},'V'},
           {atom,{1719,16},not_reached}}]}],
       [],
       [{debug_line,1720,727},
        {call,
         {1720,13},
         {atom,{1720,13},covered_list},
         [{var,{1720,26},'Vs'},
          {var,{1720,30},'To'},
          {var,{1720,34},'G'},
          {var,{1720,37},'Seen0'},
          {var,{1720,44},'AnyFound'}]}]},
      {clause,
       {1721,9},
       [{map,{1721,9},[]}],
       [],
       [{debug_line,1722,728},
        {'case',
         {1722,13},
         {call,
          {1722,18},
          {atom,{1722,18},covered_1},
          [{var,{1722,28},'V'},
           {var,{1722,31},'To'},
           {var,{1722,35},'G'},
           {var,{1722,38},'Seen0'}]},
         [{clause,
           {1723,17},
           [{tuple,{1723,17},[{atom,{1723,18},yes},{var,{1723,22},'Seen1'}]}],
           [],
           [{debug_line,1724,729},
            {match,
             {1724,21},
             {var,{1724,21},'Seen'},
             {map,
              {1724,33},
              {var,{1724,28},'Seen1'},
              [{map_field_assoc,
                {1724,37},
                {var,{1724,35},'V'},
                {atom,{1724,40},reached}}]}},
            {debug_line,1725,730},
            {call,
             {1725,21},
             {atom,{1725,21},covered_list},
             [{var,{1725,34},'Vs'},
              {var,{1725,38},'To'},
              {var,{1725,42},'G'},
              {var,{1725,45},'Seen'},
              {atom,{1725,51},yes}]}]},
          {clause,
           {1726,17},
           [{tuple,{1726,17},[{atom,{1726,18},no},{var,{1726,21},'Seen1'}]}],
           [],
           [{debug_line,1727,731},
            {match,
             {1727,21},
             {var,{1727,21},'Seen'},
             {map,
              {1727,33},
              {var,{1727,28},'Seen1'},
              [{map_field_assoc,
                {1727,37},
                {var,{1727,35},'V'},
                {atom,{1727,40},not_reached}}]}},
            {debug_line,1728,732},
            {call,
             {1728,21},
             {atom,{1728,21},covered_list},
             [{var,{1728,34},'Vs'},
              {var,{1728,38},'To'},
              {var,{1728,42},'G'},
              {var,{1728,45},'Seen'},
              {var,{1728,51},'AnyFound'}]}]}]}]}]}]},
  {clause,
   {1731,1},
   [{nil,{1731,14}},
    {var,{1731,18},'_'},
    {var,{1731,21},'_'},
    {var,{1731,24},'Seen'},
    {var,{1731,30},'AnyFound'}],
   [],
   [{debug_line,1732,733},
    {tuple,{1732,5},[{var,{1732,6},'AnyFound'},{var,{1732,15},'Seen'}]}]}]}.
{function,
    {1734,1},
    digraph_roots,1,
    [{clause,
         {1734,1},
         [{var,{1734,1},'_'}],
         [[{call,
               {1734,1},
               {remote,
                   {1734,1},
                   {atom,{1734,1},fake},
                   {atom,{1734,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1734,734},{atom,{1734,1},ignore}]},
     {clause,
         {1734,1},
         [{var,{1734,15},'G'}],
         [],
         [{debug_line,1735,735},
          {call,
              {1735,5},
              {atom,{1735,5},digraph_roots_1},
              [{block,0,
                   [{call,
                        {1735,21},
                        {remote,
                            {1735,33},
                            {atom,{1735,21},beam_digraph},
                            {atom,{1735,34},vertices}},
                        [{var,{1735,43},'G'}]}]},
               {var,{1735,47},'G'}]}]}]}.
{function,
    {1737,1},
    digraph_roots_1,2,
    [{clause,
         {1737,1},
         [{var,{1737,1},'_'},{var,{1737,1},'_'}],
         [[{call,
               {1737,1},
               {remote,
                   {1737,1},
                   {atom,{1737,1},fake},
                   {atom,{1737,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1737,736},{atom,{1737,1},ignore}]},
     {clause,
         {1737,1},
         [{cons,
              {1737,17},
              {tuple,{1737,18},[{var,{1737,19},'V'},{var,{1737,21},'_'}]},
              {var,{1737,24},'Vs'}},
          {var,{1737,29},'G'}],
         [],
         [{debug_line,1738,737},
          {'case',
              {1738,5},
              {call,
                  {1738,10},
                  {remote,
                      {1738,22},
                      {atom,{1738,10},beam_digraph},
                      {atom,{1738,23},in_degree}},
                  [{var,{1738,33},'G'},{var,{1738,36},'V'}]},
              [{clause,
                   {1739,9},
                   [{integer,{1739,9},0}],
                   [],
                   [{debug_line,1740,738},
                    {cons,
                        {1740,13},
                        {var,{1740,14},'V'},
                        {call,
                            {1740,16},
                            {atom,{1740,16},digraph_roots_1},
                            [{var,{1740,32},'Vs'},{var,{1740,36},'G'}]}}]},
               {clause,
                   {1741,9},
                   [{var,{1741,9},'_'}],
                   [],
                   [{debug_line,1742,739},
                    {call,
                        {1742,13},
                        {atom,{1742,13},digraph_roots_1},
                        [{var,{1742,29},'Vs'},{var,{1742,33},'G'}]}]}]}]},
     {clause,
         {1744,1},
         [{nil,{1744,17}},{var,{1744,21},'_G'}],
         [],
         [{debug_line,1744,740},{nil,{1744,28}}]}]}.
{function,{1746,1},
          not_possible,0,
          [{clause,{1746,1},
                   [],
                   [[{call,{1746,1},
                           {remote,{1746,1},
                                   {atom,{1746,1},fake},
                                   {atom,{1746,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1746,741},{atom,{1746,1},ignore}]},
           {clause,{1746,1},
                   [],[],
                   [{debug_line,1747,742},
                    {call,{1747,5},
                          {remote,{1747,5},
                                  {atom,{1747,5},erlang},
                                  {atom,{1747,5},throw}},
                          [{atom,{1747,11},not_possible}]}]}]}.
{function,
 {1749,1},
 new_label,1,
 [{clause,
   {1749,1},
   [{var,{1749,1},'_'}],
   [[{call,
      {1749,1},
      {remote,{1749,1},{atom,{1749,1},fake},{atom,{1749,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1749,743},{atom,{1749,1},ignore}]},
  {clause,
   {1749,1},
   [{match,
     {1749,11},
     {tuple,
      {1749,11},
      [{atom,{1749,11},st},
       {var,{1749,11},'_'},
       {var,{1749,11},'_'},
       {var,{1749,21},'Count'},
       {var,{1749,11},'_'},
       {var,{1749,11},'_'},
       {var,{1749,11},'_'}]},
     {var,{1749,28},'St'}}],
   [],
   [{debug_line,1750,744},
    {tuple,
     {1750,5},
     [{var,{1750,6},'Count'},
      {block,
       {1750,12},
       [{match,
         {1750,18},
         {var,{1750,18},rec31},
         {op,{1750,29},'+',{var,{1750,24},'Count'},{integer,{1750,30},1}}},
        {match,{1750,12},{var,{1750,12},rec32},{var,{1750,12},'St'}},
        {'case',
         {1750,18},
         {var,{1750,12},rec32},
         [{clause,
           {1750,18},
           [{tuple,
             {1750,18},
             [{atom,{1750,18},st},
              {var,{1750,18},'_'},
              {var,{1750,18},'_'},
              {var,{1750,18},'_'},
              {var,{1750,18},'_'},
              {var,{1750,18},'_'},
              {var,{1750,18},'_'}]}],
           [],
           [{call,
             {1750,18},
             {remote,
              {1750,18},
              {atom,{1750,18},erlang},
              {atom,{1750,18},setelement}},
             [{integer,{1750,18},4},
              {var,{1750,12},rec32},
              {var,{1750,18},rec31}]}]},
          {clause,
           [{generated,true},{location,{1750,18}}],
           [{var,[{generated,true},{location,{1750,18}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1750,18}}],
             {remote,
              [{generated,true},{location,{1750,18}}],
              {atom,[{generated,true},{location,{1750,18}}],erlang},
              {atom,[{generated,true},{location,{1750,18}}],error}},
             [{tuple,
               [{generated,true},{location,{1750,18}}],
               [{atom,[{generated,true},{location,{1750,18}}],badrecord},
                {var,{1750,12},rec32}]}]}]}]}]}]}]}]}.
{function,{1752,1},
          sub_args,2,
          [{clause,{1752,1},
                   [{var,{1752,1},'_'},{var,{1752,1},'_'}],
                   [[{call,{1752,1},
                           {remote,{1752,1},
                                   {atom,{1752,1},fake},
                                   {atom,{1752,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1752,745},{atom,{1752,1},ignore}]},
           {clause,{1752,1},
                   [{var,{1752,10},'Args'},{var,{1752,16},'Sub'}],
                   [],
                   [{debug_line,1753,746},
                    {lc,{1753,5},
                        {block,0,
                               [{call,{1753,6},
                                      {atom,{1753,6},sub_arg},
                                      [{var,{1753,14},'Arg'},
                                       {var,{1753,19},'Sub'}]}]},
                        [{block,0,[{atom,{1753,34},true}]},
                         {generate,{1753,31},
                                   {var,{1753,27},'Arg'},
                                   {var,{1753,34},'Args'}}]}]}]}.
{function,
    {1755,1},
    sub_arg,2,
    [{clause,
         {1755,1},
         [{var,{1755,1},'_'},{var,{1755,1},'_'}],
         [[{call,
               {1755,1},
               {remote,
                   {1755,1},
                   {atom,{1755,1},fake},
                   {atom,{1755,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1755,747},{atom,{1755,1},ignore}]},
     {clause,
         {1755,1},
         [{tuple,
              {1755,9},
              [{match,
                   {1755,10},
                   {tuple,
                       {1755,10},
                       [{atom,{1755,10},b_var},{var,{1755,10},'_'}]},
                   {var,{1755,19},'Arg'}},
               {var,{1755,23},'From'}]},
          {var,{1755,30},'Sub'}],
         [[{call,
               {1755,40},
               {remote,
                   {1755,40},
                   {atom,{1755,40},erlang},
                   {atom,{1755,40},is_integer}},
               [{var,{1755,51},'From'}]}]],
         [{debug_line,1756,748},
          {tuple,
              {1756,5},
              [{call,
                   {1756,6},
                   {atom,{1756,6},do_sub_arg},
                   [{var,{1756,17},'Arg'},{var,{1756,22},'Sub'}]},
               {var,{1756,27},'From'}]}]},
     {clause,
         {1757,1},
         [{match,
              {1757,9},
              {tuple,{1757,9},[{atom,{1757,9},b_var},{var,{1757,9},'_'}]},
              {var,{1757,18},'Arg'}},
          {var,{1757,23},'Sub'}],
         [],
         [{debug_line,1758,749},
          {call,
              {1758,5},
              {atom,{1758,5},do_sub_arg},
              [{var,{1758,16},'Arg'},{var,{1758,21},'Sub'}]}]},
     {clause,
         {1759,1},
         [{match,
              {1759,9},
              {tuple,
                  {1759,9},
                  [{atom,{1759,9},b_remote},
                   {var,{1759,23},'Mod'},
                   {var,{1759,32},'Name'},
                   {var,{1759,9},'_'}]},
              {var,{1759,38},'Rem'}},
          {var,{1759,43},'Sub'}],
         [],
         [{debug_line,1760,750},
          {block,
              {1760,5},
              [{match,
                   {1760,18},
                   {var,{1760,18},rec33},
                   {call,
                       {1760,22},
                       {atom,{1760,22},do_sub_arg},
                       [{var,{1760,33},'Mod'},{var,{1760,38},'Sub'}]}},
               {match,
                   {1761,18},
                   {var,{1761,18},rec34},
                   {call,
                       {1761,23},
                       {atom,{1761,23},do_sub_arg},
                       [{var,{1761,34},'Name'},{var,{1761,40},'Sub'}]}},
               {match,{1760,5},{var,{1760,5},rec35},{var,{1760,5},'Rem'}},
               {'case',
                   {1760,18},
                   {var,{1760,5},rec35},
                   [{clause,
                        {1760,18},
                        [{tuple,
                             {1760,18},
                             [{atom,{1760,18},b_remote},
                              {var,{1760,18},'_'},
                              {var,{1760,18},'_'},
                              {var,{1760,18},'_'}]}],
                        [],
                        [{call,
                             {1760,18},
                             {remote,
                                 {1760,18},
                                 {atom,{1760,18},erlang},
                                 {atom,{1760,18},setelement}},
                             [{integer,{1760,18},2},
                              {call,
                                  {1761,18},
                                  {remote,
                                      {1761,18},
                                      {atom,{1761,18},erlang},
                                      {atom,{1761,18},setelement}},
                                  [{integer,{1761,18},3},
                                   {var,{1760,5},rec35},
                                   {var,{1761,18},rec34}]},
                              {var,{1760,18},rec33}]}]},
                    {clause,
                        [{generated,true},{location,{1760,18}}],
                        [{var,[{generated,true},{location,{1760,18}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{1760,18}}],
                             {remote,
                                 [{generated,true},{location,{1760,18}}],
                                 {atom,
                                     [{generated,true},{location,{1760,18}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{1760,18}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{1760,18}}],
                                  [{atom,
                                       [{generated,true},{location,{1760,18}}],
                                       badrecord},
                                   {var,{1760,5},rec35}]}]}]}]}]}]},
     {clause,
         {1762,1},
         [{var,{1762,9},'Arg'},{var,{1762,14},'_Sub'}],
         [],
         [{debug_line,1762,751},{var,{1762,23},'Arg'}]}]}.
{function,
    {1764,1},
    do_sub_arg,2,
    [{clause,
         {1764,1},
         [{var,{1764,1},'_'},{var,{1764,1},'_'}],
         [[{call,
               {1764,1},
               {remote,
                   {1764,1},
                   {atom,{1764,1},fake},
                   {atom,{1764,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1764,752},{atom,{1764,1},ignore}]},
     {clause,
         {1764,1},
         [{match,
              {1764,12},
              {tuple,{1764,12},[{atom,{1764,12},b_var},{var,{1764,12},'_'}]},
              {var,{1764,21},'Old'}},
          {var,{1764,26},'Sub'}],
         [],
         [{debug_line,1765,753},
          {'case',
              {1765,5},
              {var,{1765,10},'Sub'},
              [{clause,
                   {1766,9},
                   [{map,
                        {1766,9},
                        [{map_field_exact,
                             {1766,14},
                             {var,{1766,11},'Old'},
                             {match,
                                 {1766,16},
                                 {tuple,
                                     {1766,16},
                                     [{atom,{1766,16},b_literal},
                                      {var,{1766,16},'_'}]},
                                 {var,{1766,29},'New'}}}]}],
                   [],
                   [{debug_line,1766,754},{var,{1766,37},'New'}]},
               {clause,
                   {1767,9},
                   [{map,
                        {1767,9},
                        [{map_field_exact,
                             {1767,14},
                             {var,{1767,11},'Old'},
                             {match,
                                 {1767,16},
                                 {tuple,
                                     {1767,16},
                                     [{atom,{1767,16},b_var},
                                      {var,{1767,16},'_'}]},
                                 {var,{1767,25},'New'}}}]}],
                   [],
                   [{debug_line,1767,755},{var,{1767,33},'New'}]},
               {clause,
                   {1768,9},
                   [{map,{1768,9},[]}],
                   [],
                   [{debug_line,1768,756},{var,{1768,16},'Old'}]}]}]},
     {clause,
         {1770,1},
         [{match,
              {1770,12},
              {tuple,
                  {1770,12},
                  [{atom,{1770,12},b_literal},{var,{1770,12},'_'}]},
              {var,{1770,25},'Old'}},
          {var,{1770,30},'_Sub'}],
         [],
         [{debug_line,1770,757},{var,{1770,39},'Old'}]}]}.
{function,
 {1772,1},
 is_bool_expr,1,
 [{clause,
   {1772,1},
   [{var,{1772,1},'_'}],
   [[{call,
      {1772,1},
      {remote,{1772,1},{atom,{1772,1},fake},{atom,{1772,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1772,758},{atom,{1772,1},ignore}]},
  {clause,
   {1772,1},
   [{tuple,
     {1772,14},
     [{atom,{1772,14},b_set},
      {var,{1772,14},'_'},
      {var,{1772,14},'_'},
      {tuple,{1772,24},[{atom,{1772,25},bif},{var,{1772,29},'Op'}]},
      {var,{1772,38},'Args'}]}],
   [],
   [{debug_line,1773,759},
    {match,
     {1773,5},
     {var,{1773,5},'Arity'},
     {call,
      {1773,13},
      {remote,{1773,13},{atom,{1773,13},erlang},{atom,{1773,13},length}},
      [{var,{1773,20},'Args'}]}},
    {debug_line,1774,760},
    {'case',
     {1774,5},
     {call,
      {1774,5},
      {remote,{1774,17},{atom,{1774,5},erl_internal},{atom,{1774,18},comp_op}},
      [{var,{1774,26},'Op'},{var,{1774,30},'Arity'}]},
     [{clause,{1774,5},[{atom,{1774,5},true}],[],[{atom,{1774,5},true}]},
      {clause,
       {1774,5},
       [{atom,{1774,5},false}],
       [],
       [{debug_line,1775,761},
        {'case',
         {1775,2},
         {call,
          {1775,2},
          {remote,
           {1775,14},
           {atom,{1775,2},erl_internal},
           {atom,{1775,15},new_type_test}},
          [{var,{1775,29},'Op'},{var,{1775,33},'Arity'}]},
         [{clause,{1775,2},[{atom,{1775,2},true}],[],[{atom,{1775,2},true}]},
          {clause,
           {1775,2},
           [{atom,{1775,2},false}],
           [],
           [{debug_line,1776,762},
            {call,
             {1776,2},
             {remote,
              {1776,14},
              {atom,{1776,2},erl_internal},
              {atom,{1776,15},bool_op}},
             [{var,{1776,23},'Op'},{var,{1776,27},'Arity'}]}]},
          {clause,
           [{generated,true},{location,{1775,2}}],
           [{var,{1775,2},cov1}],
           [],
           [{call,
             {1775,2},
             {remote,{1775,2},{atom,{1775,2},erlang},{atom,{1775,2},error}},
             [{block,0,
               [{tuple,
                 {1775,2},
                 [{atom,{1775,2},badarg},{var,{1775,2},cov1}]}]}]}]}]}]},
      {clause,
       [{generated,true},{location,{1774,5}}],
       [{var,{1774,5},cov2}],
       [],
       [{call,
         {1774,5},
         {remote,{1774,5},{atom,{1774,5},erlang},{atom,{1774,5},error}},
         [{block,0,
           [{tuple,
             {1774,5},
             [{atom,{1774,5},badarg},{var,{1774,5},cov2}]}]}]}]}]}]},
  {clause,
   {1777,1},
   [{var,{1777,14},'_'}],
   [],
   [{debug_line,1777,763},{atom,{1777,20},false}]}]}.
{function,
    {1781,1},
    is_safe_bool_expr,1,
    [{clause,
         {1781,1},
         [{var,{1781,1},'_'}],
         [[{call,
               {1781,1},
               {remote,
                   {1781,1},
                   {atom,{1781,1},fake},
                   {atom,{1781,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1781,764},{atom,{1781,1},ignore}]},
     {clause,
         {1781,1},
         [{tuple,
              {1781,19},
              [{atom,{1781,19},b_set},
               {var,{1781,19},'_'},
               {var,{1781,19},'_'},
               {tuple,{1781,29},[{atom,{1781,30},bif},{var,{1781,34},'Op'}]},
               {var,{1781,43},'Args'}]}],
         [],
         [{debug_line,1782,765},
          {match,
              {1782,5},
              {var,{1782,5},'Arity'},
              {call,
                  {1782,13},
                  {remote,
                      {1782,13},
                      {atom,{1782,13},erlang},
                      {atom,{1782,13},length}},
                  [{var,{1782,20},'Args'}]}},
          {debug_line,1783,766},
          {'case',
              {1783,5},
              {call,
                  {1783,5},
                  {remote,
                      {1783,17},
                      {atom,{1783,5},erl_internal},
                      {atom,{1783,18},comp_op}},
                  [{var,{1783,26},'Op'},{var,{1783,30},'Arity'}]},
              [{clause,
                   {1783,5},
                   [{atom,{1783,5},true}],
                   [],
                   [{atom,{1783,5},true}]},
               {clause,
                   {1783,5},
                   [{atom,{1783,5},false}],
                   [],
                   [{debug_line,1784,767},
                    {call,
                        {1784,2},
                        {remote,
                            {1784,14},
                            {atom,{1784,2},erl_internal},
                            {atom,{1784,15},new_type_test}},
                        [{var,{1784,29},'Op'},{var,{1784,33},'Arity'}]}]},
               {clause,
                   [{generated,true},{location,{1783,5}}],
                   [{var,{1783,5},cov1}],
                   [],
                   [{call,
                        {1783,5},
                        {remote,
                            {1783,5},
                            {atom,{1783,5},erlang},
                            {atom,{1783,5},error}},
                        [{block,0,
                             [{tuple,
                                  {1783,5},
                                  [{atom,{1783,5},badarg},
                                   {var,{1783,5},cov1}]}]}]}]}]}]},
     {clause,
         {1785,1},
         [{tuple,
              {1785,19},
              [{atom,{1785,19},b_set},
               {var,{1785,19},'_'},
               {var,{1785,19},'_'},
               {var,{1785,19},'_'},
               {var,{1785,19},'_'}]}],
         [],
         [{debug_line,1785,768},{atom,{1785,32},false}]}]}.
{function,{1787,1},
          oneway_br,1,
          [{clause,{1787,1},
                   [{var,{1787,1},'_'}],
                   [[{call,{1787,1},
                           {remote,{1787,1},
                                   {atom,{1787,1},fake},
                                   {atom,{1787,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1787,769},{atom,{1787,1},ignore}]},
           {clause,{1787,1},
                   [{var,{1787,11},'To'}],
                   [],
                   [{debug_line,1788,770},
                    {tuple,{1788,5},
                           [{atom,{1788,5},b_br},
                            {map,{1788,5},[]},
                            {tuple,{1788,16},
                                   [{atom,{1788,16},b_literal},
                                    {atom,{1788,31},true}]},
                            {var,{1788,42},'To'},
                            {var,{1788,50},'To'}]}]}]}.
{eof,{1789,1}}.
