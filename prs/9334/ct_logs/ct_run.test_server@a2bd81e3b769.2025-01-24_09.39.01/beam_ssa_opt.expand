{attribute,{1,1},file,{"beam_ssa_opt.erl",1}}.
{attribute,{37,2},module,beam_ssa_opt}.
{attribute,{39,2},export,[{module,2}]}.
{attribute,{1,1},file,{"beam_ssa_opt.hrl",1}}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{22,1},file,{"beam_ssa_opt.hrl",22}}.
{attribute,
    {23,2},
    record,
    {func_info,
        [{typed_record_field,
             {record_field,
                 {25,10},
                 {atom,{25,10},in},
                 {call,
                     {25,15},
                     {remote,
                         {25,22},
                         {atom,{25,15},ordsets},
                         {atom,{25,23},new}},
                     []}},
             {remote_type,
                 {25,32},
                 [{atom,{25,32},ordsets},
                  {atom,{25,40},ordset},
                  [{user_type,{25,47},func_id,[]}]]}},
         {typed_record_field,
             {record_field,
                 {26,10},
                 {atom,{26,10},out},
                 {call,
                     {26,16},
                     {remote,
                         {26,23},
                         {atom,{26,16},ordsets},
                         {atom,{26,24},new}},
                     []}},
             {remote_type,
                 {26,33},
                 [{atom,{26,33},ordsets},
                  {atom,{26,41},ordset},
                  [{user_type,{26,48},func_id,[]}]]}},
         {typed_record_field,
             {record_field,
                 {30,10},
                 {atom,{30,10},exported},
                 {atom,{30,21},true}},
             {type,{30,29},boolean,[]}},
         {typed_record_field,
             {record_field,{39,10},{atom,{39,10},arg_types},{nil,{39,22}}},
             {type,{39,28},list,[{user_type,{39,33},arg_type_map,[]}]}},
         {typed_record_field,
             {record_field,{50,10},{atom,{50,10},succ_types},{nil,{50,23}}},
             {user_type,{50,29},success_type_set,[]}}]}}.
{attribute,
    {52,2},
    type,
    {arg_key,
        {type,
            {52,20},
            tuple,
            [{ann_type,
                 {52,21},
                 [{var,{52,21},'CallerId'},{user_type,{52,33},func_id,[]}]},
             {ann_type,
                 {53,21},
                 [{var,{53,21},'CallDst'},
                  {remote_type,
                      {53,32},
                      [{atom,{53,32},beam_ssa},{atom,{53,41},b_var},[]]}]}]},
        []}}.
{attribute,{54,2},
           type,
           {arg_type_map,{type,{54,25},
                               map,
                               [{type,{54,38},
                                      map_field_assoc,
                                      [{user_type,{54,28},arg_key,[]},
                                       {type,{54,41},term,[]}]}]},
                         []}}.
{attribute,
    {56,2},
    type,
    {call_self,
        {type,
            {56,22},
            tuple,
            [{atom,{56,23},call_self},
             {ann_type,
                 {56,34},
                 [{var,{56,34},'ArgTypes'},
                  {type,{56,46},list,[{type,{56,47},term,[]}]}]}]},
        []}}.
{attribute,
    {57,2},
    type,
    {success_type_set,
        {type,
            {57,29},
            list,
            [{type,
                 {57,30},
                 tuple,
                 [{ann_type,
                      {57,31},
                      [{var,{57,31},'ArgTypes'},
                       {type,{57,43},list,[{type,{57,44},term,[]}]}]},
                  {ann_type,
                      {58,31},
                      [{var,{58,31},'RetType'},
                       {type,
                           {58,42},
                           union,
                           [{user_type,{58,42},call_self,[]},
                            {type,{58,56},term,[]}]}]}]}]},
        []}}.
{attribute,{63,2},
           type,
           {func_id,{remote_type,{63,20},
                                 [{atom,{63,20},beam_ssa},
                                  {atom,{63,29},b_local},
                                  []]},
                    []}}.
{attribute,
    {64,2},
    type,
    {func_info_db,
        {type,
            {64,25},
            map,
            [{type,
                 {64,38},
                 map_field_assoc,
                 [{user_type,{64,28},func_id,[]},
                  {type,{64,41},record,[{atom,{64,42},func_info}]}]}]},
        []}}.
{attribute,
    {66,2},
    record,
    {opt_st,
        [{typed_record_field,
             {record_field,{66,18},{atom,{66,18},ssa}},
             {type,
                 {66,25},
                 union,
                 [{type,
                      {66,25},
                      list,
                      [{type,
                           {66,26},
                           tuple,
                           [{remote_type,
                                {66,27},
                                [{atom,{66,27},beam_ssa},
                                 {atom,{66,36},label},
                                 []]},
                            {remote_type,
                                {66,44},
                                [{atom,{66,44},beam_ssa},
                                 {atom,{66,53},b_blk},
                                 []]}]}]},
                  {remote_type,
                      {67,25},
                      [{atom,{67,25},beam_ssa},
                       {atom,{67,34},block_map},
                       []]}]}},
         {typed_record_field,
             {record_field,{68,18},{atom,{68,18},args}},
             {type,
                 {68,26},
                 list,
                 [{remote_type,
                      {68,27},
                      [{atom,{68,27},beam_ssa},{atom,{68,36},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{69,18},{atom,{69,18},cnt}},
             {remote_type,
                 {69,25},
                 [{atom,{69,25},beam_ssa},{atom,{69,34},label},[]]}},
         {typed_record_field,
             {record_field,{70,18},{atom,{70,18},anno}},
             {remote_type,
                 {70,26},
                 [{atom,{70,26},beam_ssa},{atom,{70,35},anno},[]]}}]}}.
{attribute,
    {71,2},
    type,
    {st_map,
        {type,
            {71,19},
            map,
            [{type,
                 {71,32},
                 map_field_assoc,
                 [{user_type,{71,22},func_id,[]},
                  {type,{71,35},record,[{atom,{71,36},opt_st}]}]}]},
        []}}.
{attribute,{42,1},file,{"beam_ssa_opt.erl",42}}.
{attribute,{43,2},
           import,
           {lists,[{all,2},
                   {append,1},
                   {droplast,1},
                   {duplicate,2},
                   {flatten,1},
                   {foldl,3},
                   {keyfind,3},
                   {last,1},
                   {mapfoldl,3},
                   {member,2},
                   {partition,2},
                   {reverse,1},
                   {reverse,2},
                   {splitwith,2},
                   {sort,1},
                   {takewhile,2},
                   {unzip,1}]}}.
{attribute,
    {50,2},
    spec,
    {{module,2},
     [{type,
          {50,13},
          'fun',
          [{type,
               {50,13},
               product,
               [{remote_type,
                    {50,14},
                    [{atom,{50,14},beam_ssa},{atom,{50,23},b_module},[]]},
                {type,
                    {50,35},
                    list,
                    [{remote_type,
                         {50,36},
                         [{atom,{50,36},compile},
                          {atom,{50,44},option},
                          []]}]}]},
           {type,
               {51,21},
               tuple,
               [{atom,{51,22},ok},
                {remote_type,
                    {51,27},
                    [{atom,{51,27},beam_ssa},
                     {atom,{51,36},b_module},
                     []]}]}]}]}}.
{function,
 {53,1},
 module,2,
 [{clause,
   {53,1},
   [{var,{53,1},'_'},{var,{53,1},'_'}],
   [[{call,
      {53,1},
      {remote,{53,1},{atom,{53,1},fake},{atom,{53,1},is_beam_bif_info}},
      []}]],
   [{debug_line,53,1},{atom,{53,1},ignore}]},
  {clause,
   {53,1},
   [{var,{53,8},'Module0'},{var,{53,17},'Opts'}],
   [],
   [{debug_line,54,2},
    {match,
     {54,5},
     {tuple,{54,5},[{var,{54,6},'Module'},{var,{54,13},'NifInfo'}]},
     {call,{54,24},{atom,{54,24},isolate_nifs},[{var,{54,37},'Module0'}]}},
    {debug_line,55,3},
    {match,
     {55,5},
     {var,{55,5},'FuncDb'},
     {'case',
      {55,14},
      {call,
       {55,19},
       {remote,{55,28},{atom,{55,19},proplists},{atom,{55,29},get_value}},
       [{atom,{55,39},no_module_opt},
        {var,{55,54},'Opts'},
        {atom,{55,60},false}]},
      [{clause,
        {56,18},
        [{atom,{56,18},false}],
        [],
        [{debug_line,56,4},
         {call,
          {56,27},
          {atom,{56,27},build_func_db},
          [{var,{56,41},'Module'}]}]},
       {clause,
        {57,18},
        [{atom,{57,18},true}],
        [],
        [{debug_line,57,5},{map,{57,26},[]}]}]}},
    {debug_line,63,6},
    {match,
     {63,5},
     {var,{63,5},'StMap0'},
     {call,{63,14},{atom,{63,14},build_st_map},[{var,{63,27},'Module'}]}},
    {debug_line,64,7},
    {match,
     {64,5},
     {var,{64,5},'Order'},
     {call,
      {64,13},
      {atom,{64,13},get_call_order_po},
      [{var,{64,31},'StMap0'},{var,{64,39},'FuncDb'}]}},
    {debug_line,66,8},
    {match,
     {66,5},
     {var,{66,5},'Phases'},
     {cons,
      {66,14},
      {tuple,
       {66,15},
       [{atom,{66,16},once},
        {var,{66,22},'Order'},
        {call,{66,29},{atom,{66,29},prologue_passes},[{var,{66,45},'Opts'}]}]},
      {cons,
       {67,15},
       {tuple,
        {67,15},
        [{atom,{67,16},module},
         {call,{67,24},{atom,{67,24},module_passes},[{var,{67,38},'Opts'}]}]},
       {cons,
        {68,15},
        {tuple,
         {68,15},
         [{atom,{68,16},fixpoint},
          {var,{68,26},'Order'},
          {call,
           {68,33},
           {atom,{68,33},repeated_passes},
           [{var,{68,49},'Opts'}]}]},
        {cons,
         {69,15},
         {tuple,
          {69,15},
          [{atom,{69,16},once},
           {var,{69,22},'Order'},
           {call,
            {69,29},
            {atom,{69,29},early_epilogue_passes},
            [{var,{69,51},'Opts'}]}]},
         {cons,
          {70,15},
          {tuple,
           {70,15},
           [{atom,{70,16},module},
            {call,
             {70,24},
             {atom,{70,24},epilogue_module_passes},
             [{var,{70,47},'Opts'}]}]},
          {cons,
           {71,15},
           {tuple,
            {71,15},
            [{atom,{71,16},once},
             {var,{71,22},'Order'},
             {call,
              {71,29},
              {atom,{71,29},late_epilogue_passes},
              [{var,{71,50},'Opts'}]}]},
           {nil,{71,56}}}}}}}}},
    {debug_line,73,9},
    {match,
     {73,5},
     {var,{73,5},'StMap'},
     {call,
      {73,13},
      {atom,{73,13},run_phases},
      [{var,{73,24},'Phases'},{var,{73,32},'StMap0'},{var,{73,40},'FuncDb'}]}},
    {debug_line,74,10},
    {tuple,
     {74,5},
     [{atom,{74,6},ok},
      {call,
       {74,10},
       {atom,{74,10},restore_nifs},
       [{block,0,
         [{call,
           {74,23},
           {atom,{74,23},finish},
           [{var,{74,30},'Module'},{var,{74,38},'StMap'}]}]},
        {var,{74,46},'NifInfo'}]}]}]}]}.
{function,
    {76,1},
    run_phases,3,
    [{clause,
         {76,1},
         [{var,{76,1},'_'},{var,{76,1},'_'},{var,{76,1},'_'}],
         [[{call,
               {76,1},
               {remote,
                   {76,1},
                   {atom,{76,1},fake},
                   {atom,{76,1},is_beam_bif_info}},
               []}]],
         [{debug_line,76,11},{atom,{76,1},ignore}]},
     {clause,
         {76,1},
         [{cons,
              {76,12},
              {tuple,{76,13},[{atom,{76,14},module},{var,{76,22},'Passes'}]},
              {var,{76,32},'Phases'}},
          {var,{76,41},'StMap0'},
          {var,{76,49},'FuncDb0'}],
         [],
         [{debug_line,77,12},
          {match,
              {77,5},
              {tuple,{77,5},[{var,{77,6},'StMap'},{var,{77,13},'FuncDb'}]},
              {call,
                  {77,23},
                  {remote,
                      {77,30},
                      {atom,{77,23},compile},
                      {atom,{77,31},run_sub_passes}},
                  [{var,{77,46},'Passes'},
                   {block,0,
                       [{tuple,
                            {77,54},
                            [{var,{77,55},'StMap0'},
                             {var,{77,63},'FuncDb0'}]}]}]}},
          {debug_line,78,13},
          {call,
              {78,5},
              {atom,{78,5},run_phases},
              [{var,{78,16},'Phases'},
               {var,{78,24},'StMap'},
               {var,{78,31},'FuncDb'}]}]},
     {clause,
         {79,1},
         [{cons,
              {79,12},
              {tuple,
                  {79,13},
                  [{atom,{79,14},once},
                   {var,{79,20},'FuncIds0'},
                   {var,{79,30},'Passes'}]},
              {var,{79,40},'Phases'}},
          {var,{79,49},'StMap0'},
          {var,{79,57},'FuncDb0'}],
         [],
         [{debug_line,80,14},
          {match,
              {80,5},
              {var,{80,5},'FuncIds'},
              {call,
                  {80,15},
                  {atom,{80,15},skip_removed},
                  [{var,{80,28},'FuncIds0'},{var,{80,38},'StMap0'}]}},
          {debug_line,81,15},
          {match,
              {81,5},
              {tuple,{81,5},[{var,{81,6},'StMap'},{var,{81,13},'FuncDb'}]},
              {call,
                  {81,23},
                  {atom,{81,23},phase},
                  [{var,{81,29},'FuncIds'},
                   {var,{81,38},'Passes'},
                   {var,{81,46},'StMap0'},
                   {var,{81,54},'FuncDb0'}]}},
          {debug_line,82,16},
          {call,
              {82,5},
              {atom,{82,5},run_phases},
              [{var,{82,16},'Phases'},
               {var,{82,24},'StMap'},
               {var,{82,31},'FuncDb'}]}]},
     {clause,
         {83,1},
         [{cons,
              {83,12},
              {tuple,
                  {83,13},
                  [{atom,{83,14},fixpoint},
                   {var,{83,24},'FuncIds0'},
                   {var,{83,34},'Passes'}]},
              {var,{83,44},'Phases'}},
          {var,{83,53},'StMap0'},
          {var,{83,61},'FuncDb0'}],
         [],
         [{debug_line,84,17},
          {match,
              {84,5},
              {var,{84,5},'FuncIds'},
              {call,
                  {84,15},
                  {atom,{84,15},skip_removed},
                  [{var,{84,28},'FuncIds0'},{var,{84,38},'StMap0'}]}},
          {debug_line,85,18},
          {match,
              {85,5},
              {var,{85,5},'RevFuncIds'},
              {call,
                  {85,18},
                  {remote,{85,18},{atom,{85,18},lists},{atom,{85,18},reverse}},
                  [{var,{85,26},'FuncIds'}]}},
          {debug_line,86,19},
          {match,
              {86,5},
              {var,{86,5},'Order'},
              {tuple,
                  {86,13},
                  [{var,{86,14},'FuncIds'},{var,{86,23},'RevFuncIds'}]}},
          {debug_line,87,20},
          {match,
              {87,5},
              {tuple,{87,5},[{var,{87,6},'StMap'},{var,{87,13},'FuncDb'}]},
              {call,
                  {87,23},
                  {atom,{87,23},fixpoint},
                  [{var,{87,32},'RevFuncIds'},
                   {var,{87,44},'Order'},
                   {var,{87,51},'Passes'},
                   {var,{88,32},'StMap0'},
                   {var,{88,40},'FuncDb0'},
                   {integer,{88,50},16}]}},
          {debug_line,89,21},
          {call,
              {89,5},
              {atom,{89,5},run_phases},
              [{var,{89,16},'Phases'},
               {var,{89,24},'StMap'},
               {var,{89,31},'FuncDb'}]}]},
     {clause,
         {90,1},
         [{nil,{90,12}},{var,{90,16},'StMap'},{var,{90,23},'_FuncDb'}],
         [],
         [{debug_line,91,22},{var,{91,5},'StMap'}]}]}.
{function,
    {93,1},
    skip_removed,2,
    [{clause,
         {93,1},
         [{var,{93,1},'_'},{var,{93,1},'_'}],
         [[{call,
               {93,1},
               {remote,
                   {93,1},
                   {atom,{93,1},fake},
                   {atom,{93,1},is_beam_bif_info}},
               []}]],
         [{debug_line,93,23},{atom,{93,1},ignore}]},
     {clause,
         {93,1},
         [{var,{93,14},'FuncIds'},{var,{93,23},'StMap'}],
         [],
         [{debug_line,94,24},
          {lc,{94,5},
              {block,0,[{var,{94,6},'F'}]},
              [{block,0,[{atom,{94,16},true}]},
               {generate,{94,13},{var,{94,11},'F'},{var,{94,16},'FuncIds'}},
               {block,0,[{atom,{94,25},true}]},
               {call,
                   {94,25},
                   {remote,
                       {94,25},
                       {atom,{94,25},erlang},
                       {atom,{94,25},is_map_key}},
                   [{var,{94,36},'F'},{var,{94,39},'StMap'}]}]}]}]}.
{function,
    {97,1},
    fixpoint,6,
    [{clause,
         {97,1},
         [{var,{97,1},'_'},
          {var,{97,1},'_'},
          {var,{97,1},'_'},
          {var,{97,1},'_'},
          {var,{97,1},'_'},
          {var,{97,1},'_'}],
         [[{call,
               {97,1},
               {remote,
                   {97,1},
                   {atom,{97,1},fake},
                   {atom,{97,1},is_beam_bif_info}},
               []}]],
         [{debug_line,97,25},{atom,{97,1},ignore}]},
     {clause,
         {97,1},
         [{var,{97,10},'_FuncIds'},
          {var,{97,20},'_Order'},
          {var,{97,28},'_Passes'},
          {var,{97,37},'StMap'},
          {var,{97,44},'FuncDb'},
          {integer,{97,52},0}],
         [],
         [{debug_line,99,26},
          {tuple,{99,5},[{var,{99,6},'StMap'},{var,{99,13},'FuncDb'}]}]},
     {clause,
         {100,1},
         [{var,{100,10},'FuncIds0'},
          {var,{100,20},'Order0'},
          {var,{100,28},'Passes'},
          {var,{100,36},'StMap0'},
          {var,{100,44},'FuncDb0'},
          {var,{100,53},'N'}],
         [[{call,
               {100,61},
               {remote,{100,61},{atom,{100,61},erlang},{atom,{100,61},is_map}},
               [{var,{100,68},'StMap0'}]}]],
         [{debug_line,101,27},
          {match,
              {101,5},
              {tuple,{101,5},[{var,{101,6},'StMap'},{var,{101,13},'FuncDb'}]},
              {call,
                  {101,23},
                  {atom,{101,23},phase},
                  [{var,{101,29},'FuncIds0'},
                   {var,{101,39},'Passes'},
                   {var,{101,47},'StMap0'},
                   {var,{101,55},'FuncDb0'}]}},
          {debug_line,102,28},
          {match,
              {102,5},
              {var,{102,5},'Repeat'},
              {call,
                  {102,14},
                  {atom,{102,14},changed},
                  [{var,{102,22},'FuncIds0'},
                   {var,{102,32},'FuncDb0'},
                   {var,{102,41},'FuncDb'},
                   {var,{102,49},'StMap0'},
                   {var,{102,57},'StMap'}]}},
          {debug_line,103,29},
          {'case',
              {103,5},
              {call,
                  {103,10},
                  {remote,
                      {103,14},
                      {atom,{103,10},sets},
                      {atom,{103,15},is_empty}},
                  [{var,{103,24},'Repeat'}]},
              [{clause,
                   {104,9},
                   [{atom,{104,9},true}],
                   [],
                   [{debug_line,106,30},
                    {tuple,
                        {106,13},
                        [{var,{106,14},'StMap'},{var,{106,21},'FuncDb'}]}]},
               {clause,
                   {107,9},
                   [{atom,{107,9},false}],
                   [],
                   [{debug_line,111,31},
                    {match,
                        {111,13},
                        {tuple,
                            {111,13},
                            [{var,{111,14},'OrderA'},{var,{111,22},'OrderB'}]},
                        {var,{111,32},'Order0'}},
                    {debug_line,112,32},
                    {match,
                        {112,13},
                        {var,{112,13},'Order'},
                        {tuple,
                            {112,21},
                            [{var,{112,22},'OrderB'},
                             {var,{112,30},'OrderA'}]}},
                    {debug_line,113,33},
                    {match,
                        {113,13},
                        {var,{113,13},'FuncIds'},
                        {lc,{113,23},
                            {block,0,[{var,{113,24},'Id'}]},
                            [{block,0,[{atom,{113,36},true}]},
                             {generate,
                                 {113,33},
                                 {var,{113,30},'Id'},
                                 {var,{113,36},'OrderA'}},
                             {block,0,[{atom,{113,44},true}]},
                             {call,
                                 {113,44},
                                 {remote,
                                     {113,48},
                                     {atom,{113,44},sets},
                                     {atom,{113,49},is_element}},
                                 [{var,{113,60},'Id'},
                                  {var,{113,64},'Repeat'}]}]}},
                    {debug_line,114,34},
                    {call,
                        {114,13},
                        {atom,{114,13},fixpoint},
                        [{var,{114,22},'FuncIds'},
                         {var,{114,31},'Order'},
                         {var,{114,38},'Passes'},
                         {var,{114,46},'StMap'},
                         {var,{114,53},'FuncDb'},
                         {block,0,
                             [{op,{114,63},
                                  '-',
                                  {var,{114,61},'N'},
                                  {integer,{114,65},1}}]}]}]}]}]}]}.
{function,
    {117,1},
    phase,4,
    [{clause,
         {117,1},
         [{var,{117,1},'_'},
          {var,{117,1},'_'},
          {var,{117,1},'_'},
          {var,{117,1},'_'}],
         [[{call,
               {117,1},
               {remote,
                   {117,1},
                   {atom,{117,1},fake},
                   {atom,{117,1},is_beam_bif_info}},
               []}]],
         [{debug_line,117,35},{atom,{117,1},ignore}]},
     {clause,
         {117,1},
         [{cons,{117,7},{var,{117,8},'FuncId'},{var,{117,17},'Ids'}},
          {var,{117,23},'Ps'},
          {var,{117,27},'StMap'},
          {var,{117,34},'FuncDb0'}],
         [],
         [{debug_line,118,36},
          {'try',
              {118,5},
              [{call,
                   {118,9},
                   {remote,
                       {118,16},
                       {atom,{118,9},compile},
                       {atom,{118,17},run_sub_passes}},
                   [{var,{118,32},'Ps'},
                    {block,0,
                        [{tuple,
                             {118,36},
                             [{call,
                                  {118,37},
                                  {remote,
                                      {118,37},
                                      {atom,{118,37},erlang},
                                      {atom,{118,37},map_get}},
                                  [{var,{118,45},'FuncId'},
                                   {var,{118,53},'StMap'}]},
                              {var,{118,61},'FuncDb0'}]}]}]}],
              [{clause,
                   {119,9},
                   [{tuple,
                        {119,9},
                        [{var,{119,10},'St'},{var,{119,14},'FuncDb'}]}],
                   [],
                   [{debug_line,120,37},
                    {call,
                        {120,13},
                        {atom,{120,13},phase},
                        [{var,{120,19},'Ids'},
                         {var,{120,24},'Ps'},
                         {block,0,
                             [{map,
                                  {120,33},
                                  {var,{120,28},'StMap'},
                                  [{map_field_assoc,
                                       {120,43},
                                       {var,{120,36},'FuncId'},
                                       {var,{120,46},'St'}}]}]},
                         {var,{120,52},'FuncDb'}]}]}],
              [{clause,
                   {122,9},
                   [{tuple,
                        {122,9},
                        [{var,{122,9},'Class'},
                         {var,{122,15},'Error'},
                         {var,{122,21},'Stack'}]}],
                   [],
                   [{debug_line,123,38},
                    {match,
                        {123,13},
                        {tuple,
                            {123,13},
                            [{atom,{123,13},b_local},
                             {tuple,
                                 {123,27},
                                 [{atom,{123,27},b_literal},
                                  {var,{123,42},'Name'}]},
                             {var,{123,54},'Arity'}]},
                        {var,{123,63},'FuncId'}},
                    {debug_line,124,39},
                    {call,
                        {124,13},
                        {remote,
                            {124,15},
                            {atom,{124,13},io},
                            {atom,{124,16},fwrite}},
                        [{block,0,[{string,{124,23},"Function: ~w/~w\n"}]},
                         {block,0,
                             [{cons,
                                  {124,44},
                                  {var,{124,45},'Name'},
                                  {cons,
                                      {124,50},
                                      {var,{124,50},'Arity'},
                                      {nil,{124,55}}}}]}]},
                    {debug_line,125,40},
                    {call,
                        {125,13},
                        {remote,
                            {125,19},
                            {atom,{125,13},erlang},
                            {atom,{125,20},raise}},
                        [{var,{125,26},'Class'},
                         {var,{125,33},'Error'},
                         {var,{125,40},'Stack'}]}]}],
              []}]},
     {clause,
         {127,1},
         [{nil,{127,7}},
          {var,{127,11},'_Ps'},
          {var,{127,16},'StMap'},
          {var,{127,23},'FuncDb'}],
         [],
         [{debug_line,128,41},
          {tuple,{128,5},[{var,{128,6},'StMap'},{var,{128,13},'FuncDb'}]}]}]}.
{function,
 {130,1},
 changed,5,
 [{clause,
   {130,1},
   [{var,{130,1},'_'},
    {var,{130,1},'_'},
    {var,{130,1},'_'},
    {var,{130,1},'_'},
    {var,{130,1},'_'}],
   [[{call,
      {130,1},
      {remote,{130,1},{atom,{130,1},fake},{atom,{130,1},is_beam_bif_info}},
      []}]],
   [{debug_line,130,42},{atom,{130,1},ignore}]},
  {clause,
   {130,1},
   [{var,{130,9},'PrevIds'},
    {var,{130,18},'FuncDb0'},
    {var,{130,27},'FuncDb'},
    {var,{130,35},'StMap0'},
    {var,{130,43},'StMap'}],
   [],
   [{debug_line,131,43},
    {match,
     {131,5},
     {var,{131,5},'EmptySet'},
     {call,
      {131,16},
      {remote,{131,20},{atom,{131,16},sets},{atom,{131,21},new}},
      [{block,0,
        [{cons,
          {131,25},
          {tuple,{131,26},[{atom,{131,27},version},{integer,{131,35},2}]},
          {nil,{131,37}}}]}]}},
    {debug_line,132,44},
    {match,
     {132,5},
     {var,{132,5},'Changed0'},
     {call,
      {132,16},
      {atom,{132,16},changed_types},
      [{var,{132,30},'PrevIds'},
       {var,{132,39},'FuncDb0'},
       {var,{132,48},'FuncDb'},
       {var,{132,56},'EmptySet'},
       {var,{132,66},'EmptySet'}]}},
    {debug_line,142,45},
    {call,
     {142,5},
     {remote,{142,5},{atom,{142,5},lists},{atom,{142,5},foldl}},
     [{block,0,
       [{'fun',
         {142,11},
         {clauses,
          [{clause,
            {142,14},
            [{var,{142,15},'Id'},{var,{142,19},'Changed'}],
            [],
            [{debug_line,143,46},
             {'case',
              {143,19},
              {call,
               {143,24},
               {remote,
                {143,28},
                {atom,{143,24},sets},
                {atom,{143,29},is_element}},
               [{var,{143,40},'Id'},{var,{143,44},'Changed'}]},
              [{clause,
                {144,23},
                [{atom,{144,23},true}],
                [],
                [{debug_line,147,47},{var,{147,27},'Changed'}]},
               {clause,
                {148,23},
                [{atom,{148,23},false}],
                [],
                [{debug_line,150,48},
                 {'case',
                  {150,27},
                  {tuple,
                   {150,32},
                   [{call,
                     {150,33},
                     {remote,
                      {150,33},
                      {atom,{150,33},erlang},
                      {atom,{150,33},map_get}},
                     [{var,{150,41},'Id'},{var,{150,45},'StMap0'}]},
                    {call,
                     {150,54},
                     {remote,
                      {150,54},
                      {atom,{150,54},erlang},
                      {atom,{150,54},map_get}},
                     [{var,{150,62},'Id'},{var,{150,66},'StMap'}]}]},
                  [{clause,
                    {151,31},
                    [{tuple,
                      {151,31},
                      [{var,{151,32},'Same'},{var,{151,38},'Same'}]}],
                    [],
                    [{debug_line,151,49},{var,{151,47},'Changed'}]},
                   {clause,
                    {152,31},
                    [{tuple,{152,31},[{var,{152,32},'_'},{var,{152,34},'_'}]}],
                    [],
                    [{debug_line,152,50},
                     {call,
                      {152,40},
                      {remote,
                       {152,44},
                       {atom,{152,40},sets},
                       {atom,{152,45},add_element}},
                      [{var,{152,57},'Id'},
                       {var,{152,61},'Changed'}]}]}]}]}]}]}]}}]},
      {var,{155,16},'Changed0'},
      {var,{155,26},'PrevIds'}]}]}]}.
{function,
 {164,1},
 changed_types,5,
 [{clause,
   {164,1},
   [{var,{164,1},'_'},
    {var,{164,1},'_'},
    {var,{164,1},'_'},
    {var,{164,1},'_'},
    {var,{164,1},'_'}],
   [[{call,
      {164,1},
      {remote,{164,1},{atom,{164,1},fake},{atom,{164,1},is_beam_bif_info}},
      []}]],
   [{debug_line,164,51},{atom,{164,1},ignore}]},
  {clause,
   {164,1},
   [{cons,{164,15},{var,{164,16},'Id'},{var,{164,21},'Ids'}},
    {var,{164,27},'Fdb0'},
    {var,{164,33},'Fdb'},
    {var,{164,38},'In0'},
    {var,{164,43},'Out0'}],
   [],
   [{debug_line,165,52},
    {'case',
     {165,5},
     {tuple,{165,10},[{var,{165,11},'Fdb0'},{var,{165,17},'Fdb'}]},
     [{clause,
       {166,9},
       [{tuple,
         {166,9},
         [{map,
           {166,10},
           [{map_field_exact,
             {166,16},
             {var,{166,13},'Id'},
             {tuple,
              {166,19},
              [{atom,{166,19},func_info},
               {var,{166,19},'_'},
               {var,{166,19},'_'},
               {var,{166,19},'_'},
               {var,{166,40},'ATs0'},
               {var,{166,56},'ST0'}]}}]},
          {map,
           {167,10},
           [{map_field_exact,
             {167,16},
             {var,{167,13},'Id'},
             {tuple,
              {167,19},
              [{atom,{167,19},func_info},
               {var,{167,19},'_'},
               {var,{167,19},'_'},
               {var,{167,19},'_'},
               {var,{167,40},'ATs'},
               {var,{167,55},'ST'}]}}]}]}],
       [],
       [{debug_line,168,53},
        {match,
         {168,13},
         {var,{168,13},'In'},
         {'case',
          {168,18},
          {op,{168,27},'=:=',{var,{168,23},'ST0'},{var,{168,31},'ST'}},
          [{clause,
            {169,22},
            [{atom,{169,22},true}],
            [],
            [{debug_line,169,54},{var,{169,30},'In0'}]},
           {clause,
            {170,22},
            [{atom,{170,22},false}],
            [],
            [{debug_line,170,55},
             {call,
              {170,31},
              {atom,{170,31},changed_types_1},
              [{block,0,[{cons,{170,47},{var,{170,48},'Id'},{nil,{170,50}}}]},
               {block,0,[{integer,{170,53},2}]},
               {var,{170,68},'Fdb'},
               {var,{170,73},'In0'}]}]}]}},
        {debug_line,172,56},
        {match,
         {172,13},
         {var,{172,13},'Out'},
         {'case',
          {172,19},
          {op,{172,29},'=:=',{var,{172,24},'ATs0'},{var,{172,33},'ATs'}},
          [{clause,
            {173,23},
            [{atom,{173,23},true}],
            [],
            [{debug_line,173,57},{var,{173,31},'Out0'}]},
           {clause,
            {174,23},
            [{atom,{174,23},false}],
            [],
            [{debug_line,174,58},
             {call,
              {174,32},
              {atom,{174,32},changed_types_1},
              [{block,0,[{cons,{174,48},{var,{174,49},'Id'},{nil,{174,51}}}]},
               {block,0,[{integer,{174,54},3}]},
               {var,{174,70},'Fdb'},
               {var,{174,75},'Out0'}]}]}]}},
        {debug_line,176,59},
        {call,
         {176,13},
         {atom,{176,13},changed_types},
         [{var,{176,27},'Ids'},
          {var,{176,32},'Fdb0'},
          {var,{176,38},'Fdb'},
          {var,{176,43},'In'},
          {var,{176,47},'Out'}]}]},
      {clause,
       {177,9},
       [{var,{177,9},'_'}],
       [],
       [{debug_line,180,60},
        {call,
         {180,13},
         {atom,{180,13},changed_types},
         [{var,{180,27},'Ids'},
          {var,{180,32},'Fdb0'},
          {var,{180,38},'Fdb'},
          {var,{180,43},'In0'},
          {var,{180,48},'Out0'}]}]}]}]},
  {clause,
   {182,1},
   [{nil,{182,15}},
    {var,{182,19},'_Fdb0'},
    {var,{182,26},'_Fdb'},
    {var,{182,32},'In'},
    {var,{182,36},'Out'}],
   [],
   [{debug_line,183,61},
    {call,
     {183,5},
     {remote,{183,9},{atom,{183,5},sets},{atom,{183,10},union}},
     [{var,{183,16},'In'},{var,{183,20},'Out'}]}]}]}.
{function,
 {185,1},
 changed_types_1,4,
 [{clause,
   {185,1},
   [{var,{185,1},'_'},{var,{185,1},'_'},{var,{185,1},'_'},{var,{185,1},'_'}],
   [[{call,
      {185,1},
      {remote,{185,1},{atom,{185,1},fake},{atom,{185,1},is_beam_bif_info}},
      []}]],
   [{debug_line,185,62},{atom,{185,1},ignore}]},
  {clause,
   {185,1},
   [{cons,{185,17},{var,{185,18},'Id'},{var,{185,23},'Ids'}},
    {var,{185,29},'Direction'},
    {var,{185,40},'Fdb'},
    {var,{185,45},'Seen0'}],
   [],
   [{debug_line,186,63},
    {'case',
     {186,5},
     {call,
      {186,10},
      {remote,{186,14},{atom,{186,10},sets},{atom,{186,15},is_element}},
      [{var,{186,26},'Id'},{var,{186,30},'Seen0'}]},
     [{clause,
       {187,9},
       [{atom,{187,9},true}],
       [],
       [{debug_line,188,64},
        {call,
         {188,13},
         {atom,{188,13},changed_types_1},
         [{var,{188,29},'Ids'},
          {var,{188,34},'Direction'},
          {var,{188,45},'Fdb'},
          {var,{188,50},'Seen0'}]}]},
      {clause,
       {189,9},
       [{atom,{189,9},false}],
       [],
       [{debug_line,190,65},
        {'case',
         {190,13},
         {var,{190,18},'Fdb'},
         [{clause,
           {191,17},
           [{map,
             {191,17},
             [{map_field_exact,
               {191,23},
               {var,{191,20},'Id'},
               {var,{191,26},'FuncInfo'}}]}],
           [],
           [{debug_line,192,66},
            {match,
             {192,21},
             {var,{192,21},'Next'},
             {call,
              {192,28},
              {remote,{192,28},{atom,{192,28},erlang},{atom,{192,28},element}},
              [{var,{192,36},'Direction'},{var,{192,47},'FuncInfo'}]}},
            {debug_line,194,67},
            {match,
             {194,21},
             {var,{194,21},'Seen1'},
             {call,
              {194,29},
              {remote,
               {194,33},
               {atom,{194,29},sets},
               {atom,{194,34},add_element}},
              [{var,{194,46},'Id'},{var,{194,50},'Seen0'}]}},
            {debug_line,195,68},
            {match,
             {195,21},
             {var,{195,21},'Seen2'},
             {call,
              {195,29},
              {atom,{195,29},changed_types_1},
              [{var,{195,45},'Next'},
               {var,{195,51},'Direction'},
               {var,{195,62},'Fdb'},
               {var,{195,67},'Seen1'}]}},
            {debug_line,196,69},
            {call,
             {196,21},
             {atom,{196,21},changed_types_1},
             [{var,{196,37},'Ids'},
              {var,{196,42},'Direction'},
              {var,{196,53},'Fdb'},
              {var,{196,58},'Seen2'}]}]},
          {clause,
           {197,17},
           [{map,{197,17},[]}],
           [],
           [{debug_line,198,70},
            {call,
             {198,21},
             {atom,{198,21},changed_types_1},
             [{var,{198,37},'Ids'},
              {var,{198,42},'Direction'},
              {var,{198,53},'Fdb'},
              {var,{198,58},'Seen0'}]}]}]}]}]}]},
  {clause,
   {201,1},
   [{nil,{201,17}},
    {var,{201,21},'_'},
    {var,{201,24},'_'},
    {var,{201,27},'Seen'}],
   [],
   [{debug_line,202,71},{var,{202,5},'Seen'}]}]}.
{function,
    {207,1},
    get_func_id,1,
    [{clause,
         {207,1},
         [{var,{207,1},'_'}],
         [[{call,
               {207,1},
               {remote,
                   {207,1},
                   {atom,{207,1},fake},
                   {atom,{207,1},is_beam_bif_info}},
               []}]],
         [{debug_line,207,72},{atom,{207,1},ignore}]},
     {clause,
         {207,1},
         [{var,{207,13},'F'}],
         [],
         [{debug_line,208,73},
          {match,
              {208,5},
              {tuple,
                  {208,5},
                  [{var,{208,6},'_Mod'},
                   {var,{208,12},'Name'},
                   {var,{208,18},'Arity'}]},
              {call,
                  {208,27},
                  {remote,
                      {208,35},
                      {atom,{208,27},beam_ssa},
                      {atom,{208,36},get_anno}},
                  [{atom,{208,45},func_info},{var,{208,56},'F'}]}},
          {debug_line,209,74},
          {tuple,
              {209,5},
              [{atom,{209,5},b_local},
               {tuple,
                   {209,19},
                   [{atom,{209,19},b_literal},{var,{209,34},'Name'}]},
               {var,{209,47},'Arity'}]}]}]}.
{attribute,{211,2},
           spec,
           {{build_st_map,1},
            [{type,{211,19},
                   'fun',
                   [{type,{211,19},
                          product,
                          [{type,{211,20},record,[{atom,{211,21},b_module}]}]},
                    {user_type,{211,36},st_map,[]}]}]}}.
{function,{212,1},
          build_st_map,1,
          [{clause,{212,1},
                   [{var,{212,1},'_'}],
                   [[{call,{212,1},
                           {remote,{212,1},
                                   {atom,{212,1},fake},
                                   {atom,{212,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,212,75},{atom,{212,1},ignore}]},
           {clause,{212,1},
                   [{tuple,{212,14},
                           [{atom,{212,14},b_module},
                            {var,{212,14},'_'},
                            {var,{212,14},'_'},
                            {var,{212,14},'_'},
                            {var,{212,14},'_'},
                            {var,{212,29},'Fs'}]}],
                   [],
                   [{debug_line,213,76},
                    {call,{213,5},
                          {atom,{213,5},build_st_map_1},
                          [{var,{213,20},'Fs'},
                           {block,0,[{map,{213,24},[]}]}]}]}]}.
{function,
    {215,1},
    build_st_map_1,2,
    [{clause,
         {215,1},
         [{var,{215,1},'_'},{var,{215,1},'_'}],
         [[{call,
               {215,1},
               {remote,
                   {215,1},
                   {atom,{215,1},fake},
                   {atom,{215,1},is_beam_bif_info}},
               []}]],
         [{debug_line,215,77},{atom,{215,1},ignore}]},
     {clause,
         {215,1},
         [{cons,{215,16},{var,{215,17},'F'},{var,{215,21},'Fs'}},
          {var,{215,26},'Map'}],
         [],
         [{debug_line,216,78},
          {match,
              {216,5},
              {tuple,
                  {216,5},
                  [{atom,{216,5},b_function},
                   {var,{216,22},'Anno'},
                   {var,{216,32},'Args'},
                   {var,{216,52},'Bs'},
                   {var,{216,41},'Counter'}]},
              {var,{216,58},'F'}},
          {debug_line,217,79},
          {match,
              {217,5},
              {var,{217,5},'St'},
              {tuple,
                  {217,10},
                  [{atom,{217,10},opt_st},
                   {var,{217,54},'Bs'},
                   {var,{217,33},'Args'},
                   {var,{217,42},'Counter'},
                   {var,{217,23},'Anno'}]}},
          {debug_line,218,80},
          {call,
              {218,5},
              {atom,{218,5},build_st_map_1},
              [{var,{218,20},'Fs'},
               {block,0,
                   [{map,
                        {218,27},
                        {var,{218,24},'Map'},
                        [{map_field_assoc,
                             {218,45},
                             {call,
                                 {218,30},
                                 {atom,{218,30},get_func_id},
                                 [{var,{218,42},'F'}]},
                             {var,{218,48},'St'}}]}]}]}]},
     {clause,
         {219,1},
         [{nil,{219,16}},{var,{219,20},'Map'}],
         [],
         [{debug_line,220,81},{var,{220,5},'Map'}]}]}.
{attribute,{222,2},
           spec,
           {{finish,2},
            [{type,{222,13},
                   'fun',
                   [{type,{222,13},
                          product,
                          [{type,{222,14},record,[{atom,{222,15},b_module}]},
                           {user_type,{222,27},st_map,[]}]},
                    {type,{222,40},record,[{atom,{222,41},b_module}]}]}]}}.
{function,
    {223,1},
    finish,2,
    [{clause,
         {223,1},
         [{var,{223,1},'_'},{var,{223,1},'_'}],
         [[{call,
               {223,1},
               {remote,
                   {223,1},
                   {atom,{223,1},fake},
                   {atom,{223,1},is_beam_bif_info}},
               []}]],
         [{debug_line,223,82},{atom,{223,1},ignore}]},
     {clause,
         {223,1},
         [{match,
              {223,8},
              {tuple,
                  {223,8},
                  [{atom,{223,8},b_module},
                   {var,{223,8},'_'},
                   {var,{223,8},'_'},
                   {var,{223,8},'_'},
                   {var,{223,8},'_'},
                   {var,{223,23},'Fs0'}]},
              {var,{223,28},'Module'}},
          {var,{223,36},'StMap'}],
         [],
         [{debug_line,224,83},
          {block,
              {224,5},
              [{match,
                   {224,21},
                   {var,{224,21},rec0},
                   {call,
                       {224,26},
                       {atom,{224,26},finish_1},
                       [{var,{224,35},'Fs0'},{var,{224,40},'StMap'}]}},
               {match,{224,5},{var,{224,5},rec1},{var,{224,5},'Module'}},
               {'case',
                   {224,21},
                   {var,{224,5},rec1},
                   [{clause,
                        {224,21},
                        [{tuple,
                             {224,21},
                             [{atom,{224,21},b_module},
                              {var,{224,21},'_'},
                              {var,{224,21},'_'},
                              {var,{224,21},'_'},
                              {var,{224,21},'_'},
                              {var,{224,21},'_'}]}],
                        [],
                        [{call,
                             {224,21},
                             {remote,
                                 {224,21},
                                 {atom,{224,21},erlang},
                                 {atom,{224,21},setelement}},
                             [{integer,{224,21},6},
                              {var,{224,5},rec1},
                              {var,{224,21},rec0}]}]},
                    {clause,
                        [{generated,true},{location,{224,21}}],
                        [{var,[{generated,true},{location,{224,21}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{224,21}}],
                             {remote,
                                 [{generated,true},{location,{224,21}}],
                                 {atom,
                                     [{generated,true},{location,{224,21}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{224,21}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{224,21}}],
                                  [{atom,
                                       [{generated,true},{location,{224,21}}],
                                       badrecord},
                                   {var,{224,5},rec1}]}]}]}]}]}]}]}.
{function,
 {226,1},
 finish_1,2,
 [{clause,
   {226,1},
   [{var,{226,1},'_'},{var,{226,1},'_'}],
   [[{call,
      {226,1},
      {remote,{226,1},{atom,{226,1},fake},{atom,{226,1},is_beam_bif_info}},
      []}]],
   [{debug_line,226,84},{atom,{226,1},ignore}]},
  {clause,
   {226,1},
   [{cons,{226,10},{var,{226,11},'F0'},{var,{226,16},'Fs'}},
    {var,{226,21},'StMap'}],
   [],
   [{debug_line,227,85},
    {match,
     {227,5},
     {var,{227,5},'FuncId'},
     {call,{227,14},{atom,{227,14},get_func_id},[{var,{227,26},'F0'}]}},
    {debug_line,228,86},
    {'case',
     {228,5},
     {var,{228,10},'StMap'},
     [{clause,
       {229,9},
       [{map,
         {229,9},
         [{map_field_exact,
           {229,19},
           {var,{229,12},'FuncId'},
           {tuple,
            {229,22},
            [{atom,{229,22},opt_st},
             {var,{229,56},'Blocks'},
             {var,{229,22},'_'},
             {var,{229,44},'Counter'},
             {var,{229,35},'Anno'}]}}]}],
       [],
       [{debug_line,230,87},
        {match,
         {230,13},
         {var,{230,13},'F'},
         {block,
          {230,17},
          [{match,{230,17},{var,{230,17},rec2},{var,{230,17},'F0'}},
           {'case',
            {230,31},
            {var,{230,17},rec2},
            [{clause,
              {230,31},
              [{tuple,
                {230,31},
                [{atom,{230,31},b_function},
                 {var,{230,31},'_'},
                 {var,{230,31},'_'},
                 {var,{230,31},'_'},
                 {var,{230,31},'_'}]}],
              [],
              [{call,
                {230,31},
                {remote,
                 {230,31},
                 {atom,{230,31},erlang},
                 {atom,{230,31},setelement}},
                [{integer,{230,31},2},
                 {call,
                  {230,41},
                  {remote,
                   {230,41},
                   {atom,{230,41},erlang},
                   {atom,{230,41},setelement}},
                  [{integer,{230,41},4},
                   {call,
                    {230,51},
                    {remote,
                     {230,51},
                     {atom,{230,51},erlang},
                     {atom,{230,51},setelement}},
                    [{integer,{230,51},5},
                     {var,{230,17},rec2},
                     {var,{230,55},'Counter'}]},
                   {var,{230,44},'Blocks'}]},
                 {var,{230,36},'Anno'}]}]},
             {clause,
              [{generated,true},{location,{230,31}}],
              [{var,[{generated,true},{location,{230,31}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{230,31}}],
                {remote,
                 [{generated,true},{location,{230,31}}],
                 {atom,[{generated,true},{location,{230,31}}],erlang},
                 {atom,[{generated,true},{location,{230,31}}],error}},
                [{tuple,
                  [{generated,true},{location,{230,31}}],
                  [{atom,[{generated,true},{location,{230,31}}],badrecord},
                   {var,{230,17},rec2}]}]}]}]}]}},
        {debug_line,231,88},
        {cons,
         {231,13},
         {var,{231,14},'F'},
         {call,
          {231,18},
          {atom,{231,18},finish_1},
          [{var,{231,27},'Fs'},{var,{231,31},'StMap'}]}}]},
      {clause,
       {232,9},
       [{map,{232,9},[]}],
       [],
       [{debug_line,233,89},
        {call,
         {233,13},
         {atom,{233,13},finish_1},
         [{var,{233,22},'Fs'},{var,{233,26},'StMap'}]}]}]}]},
  {clause,
   {235,1},
   [{nil,{235,10}},{var,{235,14},'_StMap'}],
   [],
   [{debug_line,236,90},{nil,{236,5}}]}]}.
{function,
 {242,1},
 prologue_passes,1,
 [{clause,
   {242,1},
   [{var,{242,1},'_'}],
   [[{call,
      {242,1},
      {remote,{242,1},{atom,{242,1},fake},{atom,{242,1},is_beam_bif_info}},
      []}]],
   [{debug_line,242,91},{atom,{242,1},ignore}]},
  {clause,
   {242,1},
   [{var,{242,17},'Opts'}],
   [],
   [{debug_line,243,92},
    {match,
     {243,5},
     {var,{243,5},'Ps'},
     {cons,
      {243,10},
      {tuple,
       {243,12},
       [{atom,{243,17},ssa_opt_split_blocks},
        {'fun',{243,17},{function,ssa_opt_split_blocks,1}}]},
      {cons,
       {244,12},
       {tuple,
        {244,12},
        [{atom,{244,17},ssa_opt_coalesce_phis},
         {'fun',{244,17},{function,ssa_opt_coalesce_phis,1}}]},
       {cons,
        {245,12},
        {tuple,
         {245,12},
         [{atom,{245,17},ssa_opt_tail_phis},
          {'fun',{245,17},{function,ssa_opt_tail_phis,1}}]},
        {cons,
         {246,12},
         {tuple,
          {246,12},
          [{atom,{246,17},ssa_opt_element},
           {'fun',{246,17},{function,ssa_opt_element,1}}]},
         {cons,
          {247,12},
          {tuple,
           {247,12},
           [{atom,{247,17},ssa_opt_linearize},
            {'fun',{247,17},{function,ssa_opt_linearize,1}}]},
          {cons,
           {248,12},
           {tuple,
            {248,12},
            [{atom,{248,17},ssa_opt_tuple_size},
             {'fun',{248,17},{function,ssa_opt_tuple_size,1}}]},
           {cons,
            {249,12},
            {tuple,
             {249,12},
             [{atom,{249,17},ssa_opt_record},
              {'fun',{249,17},{function,ssa_opt_record,1}}]},
            {cons,
             {250,12},
             {tuple,
              {250,12},
              [{atom,{250,17},ssa_opt_update_tuple},
               {'fun',{250,17},{function,ssa_opt_update_tuple,1}}]},
             {cons,
              {251,12},
              {tuple,
               {251,12},
               [{atom,{251,17},ssa_opt_cse},
                {'fun',{251,17},{function,ssa_opt_cse,1}}]},
              {cons,
               {252,12},
               {tuple,
                {252,12},
                [{atom,{252,17},ssa_opt_live},
                 {'fun',{252,17},{function,ssa_opt_live,1}}]},
               {nil,{252,30}}}}}}}}}}}}},
    {debug_line,253,93},
    {call,
     {253,5},
     {atom,{253,5},passes_1},
     [{var,{253,14},'Ps'},{var,{253,18},'Opts'}]}]}]}.
{function,
 {255,1},
 module_passes,1,
 [{clause,
   {255,1},
   [{var,{255,1},'_'}],
   [[{call,
      {255,1},
      {remote,{255,1},{atom,{255,1},fake},{atom,{255,1},is_beam_bif_info}},
      []}]],
   [{debug_line,255,94},{atom,{255,1},ignore}]},
  {clause,
   {255,1},
   [{var,{255,15},'Opts'}],
   [],
   [{debug_line,256,95},
    {match,
     {256,5},
     {var,{256,5},'Ps0'},
     {cons,
      {256,11},
      {tuple,
       {256,12},
       [{atom,{256,13},ssa_opt_bc_size},
        {'fun',
         {257,13},
         {clauses,
          [{clause,
            {257,16},
            [{tuple,
              {257,17},
              [{var,{257,18},'StMap'},{var,{257,25},'FuncDb'}]}],
            [],
            [{debug_line,258,96},
             {tuple,
              {258,21},
              [{call,
                {258,22},
                {remote,
                 {258,38},
                 {atom,{258,22},beam_ssa_bc_size},
                 {atom,{258,39},opt}},
                [{var,{258,43},'StMap'}]},
               {var,{258,51},'FuncDb'}]}]}]}}]},
      {cons,
       {260,12},
       {tuple,
        {260,12},
        [{atom,{260,13},ssa_opt_type_start},
         {'fun',
          {261,13},
          {clauses,
           [{clause,
             {261,16},
             [{tuple,
               {261,17},
               [{var,{261,18},'StMap'},{var,{261,25},'FuncDb'}]}],
             [],
             [{debug_line,262,97},
              {call,
               {262,21},
               {remote,
                {262,34},
                {atom,{262,21},beam_ssa_type},
                {atom,{262,35},opt_start}},
               [{var,{262,45},'StMap'},{var,{262,52},'FuncDb'}]}]}]}}]},
       {nil,{263,17}}}}},
    {debug_line,264,98},
    {call,
     {264,5},
     {atom,{264,5},passes_1},
     [{var,{264,14},'Ps0'},{var,{264,19},'Opts'}]}]}]}.
{function,
 {268,1},
 repeated_passes,1,
 [{clause,
   {268,1},
   [{var,{268,1},'_'}],
   [[{call,
      {268,1},
      {remote,{268,1},{atom,{268,1},fake},{atom,{268,1},is_beam_bif_info}},
      []}]],
   [{debug_line,268,99},{atom,{268,1},ignore}]},
  {clause,
   {268,1},
   [{var,{268,17},'Opts'}],
   [],
   [{debug_line,269,100},
    {match,
     {269,5},
     {var,{269,5},'Ps'},
     {cons,
      {269,10},
      {tuple,
       {269,12},
       [{atom,{269,17},ssa_opt_live},
        {'fun',{269,17},{function,ssa_opt_live,1}}]},
      {cons,
       {270,12},
       {tuple,
        {270,12},
        [{atom,{270,17},ssa_opt_ne},{'fun',{270,17},{function,ssa_opt_ne,1}}]},
       {cons,
        {271,12},
        {tuple,
         {271,12},
         [{atom,{271,17},ssa_opt_bs_create_bin},
          {'fun',{271,17},{function,ssa_opt_bs_create_bin,1}}]},
        {cons,
         {272,12},
         {tuple,
          {272,12},
          [{atom,{272,17},ssa_opt_dead},
           {'fun',{272,17},{function,ssa_opt_dead,1}}]},
         {cons,
          {273,12},
          {tuple,
           {273,12},
           [{atom,{273,17},ssa_opt_cse},
            {'fun',{273,17},{function,ssa_opt_cse,1}}]},
          {cons,
           {274,12},
           {tuple,
            {274,12},
            [{atom,{274,17},ssa_opt_tail_phis},
             {'fun',{274,17},{function,ssa_opt_tail_phis,1}}]},
           {cons,
            {275,12},
            {tuple,
             {275,12},
             [{atom,{275,17},ssa_opt_sink},
              {'fun',{275,17},{function,ssa_opt_sink,1}}]},
            {cons,
             {276,12},
             {tuple,
              {276,12},
              [{atom,{276,17},ssa_opt_tuple_size},
               {'fun',{276,17},{function,ssa_opt_tuple_size,1}}]},
             {cons,
              {277,12},
              {tuple,
               {277,12},
               [{atom,{277,17},ssa_opt_merge_updates},
                {'fun',{277,17},{function,ssa_opt_merge_updates,1}}]},
              {cons,
               {278,12},
               {tuple,
                {278,12},
                [{atom,{278,17},ssa_opt_record},
                 {'fun',{278,17},{function,ssa_opt_record,1}}]},
               {cons,
                {279,12},
                {tuple,
                 {279,12},
                 [{atom,{279,17},ssa_opt_try},
                  {'fun',{279,17},{function,ssa_opt_try,1}}]},
                {cons,
                 {280,12},
                 {tuple,
                  {280,12},
                  [{atom,{280,17},ssa_opt_type_continue},
                   {'fun',{280,17},{function,ssa_opt_type_continue,1}}]},
                 {nil,{280,39}}}}}}}}}}}}}}},
    {debug_line,282,101},
    {call,
     {282,5},
     {atom,{282,5},passes_1},
     [{var,{282,14},'Ps'},{var,{282,18},'Opts'}]}]}]}.
{function,
 {284,1},
 epilogue_module_passes,1,
 [{clause,
   {284,1},
   [{var,{284,1},'_'}],
   [[{call,
      {284,1},
      {remote,{284,1},{atom,{284,1},fake},{atom,{284,1},is_beam_bif_info}},
      []}]],
   [{debug_line,284,102},{atom,{284,1},ignore}]},
  {clause,
   {284,1},
   [{var,{284,24},'Opts'}],
   [],
   [{debug_line,285,103},
    {match,
     {285,5},
     {var,{285,5},'Ps0'},
     {cons,
      {285,11},
      {tuple,
       {285,12},
       [{atom,{285,13},ssa_opt_alias},
        {'fun',
         {286,13},
         {clauses,
          [{clause,
            {286,16},
            [{tuple,
              {286,17},
              [{var,{286,18},'StMap'},{var,{286,25},'FuncDb'}]}],
            [],
            [{debug_line,287,104},
             {call,
              {287,21},
              {remote,
               {287,35},
               {atom,{287,21},beam_ssa_alias},
               {atom,{287,36},opt}},
              [{var,{287,40},'StMap'},{var,{287,47},'FuncDb'}]}]}]}}]},
      {cons,
       {289,12},
       {tuple,
        {289,12},
        [{atom,{289,13},ssa_opt_destructive_update},
         {'fun',
          {290,13},
          {clauses,
           [{clause,
             {290,16},
             [{tuple,
               {290,17},
               [{var,{290,18},'StMap'},{var,{290,25},'FuncDb'}]}],
             [],
             [{debug_line,291,105},
              {call,
               {291,21},
               {remote,
                {291,48},
                {atom,{291,21},beam_ssa_destructive_update},
                {atom,{291,49},opt}},
               [{var,{291,53},'StMap'},{var,{291,60},'FuncDb'}]}]}]}}]},
       {nil,{292,17}}}}},
    {debug_line,293,106},
    {call,
     {293,5},
     {atom,{293,5},passes_1},
     [{var,{293,14},'Ps0'},{var,{293,19},'Opts'}]}]}]}.
{function,
    {295,1},
    early_epilogue_passes,1,
    [{clause,
         {295,1},
         [{var,{295,1},'_'}],
         [[{call,
               {295,1},
               {remote,
                   {295,1},
                   {atom,{295,1},fake},
                   {atom,{295,1},is_beam_bif_info}},
               []}]],
         [{debug_line,295,107},{atom,{295,1},ignore}]},
     {clause,
         {295,1},
         [{var,{295,23},'Opts'}],
         [],
         [{debug_line,296,108},
          {match,
              {296,5},
              {var,{296,5},'Ps'},
              {cons,
                  {296,10},
                  {tuple,
                      {296,12},
                      [{atom,{296,17},ssa_opt_type_finish},
                       {'fun',{296,17},{function,ssa_opt_type_finish,1}}]},
                  {cons,
                      {297,12},
                      {tuple,
                          {297,12},
                          [{atom,{297,17},ssa_opt_float},
                           {'fun',{297,17},{function,ssa_opt_float,1}}]},
                      {cons,
                          {298,12},
                          {tuple,
                              {298,12},
                              [{atom,{298,17},ssa_opt_sw},
                               {'fun',{298,17},{function,ssa_opt_sw,1}}]},
                          {cons,
                              {299,12},
                              {tuple,
                                  {299,12},
                                  [{atom,{299,17},ssa_opt_no_reuse},
                                   {'fun',
                                       {299,17},
                                       {function,ssa_opt_no_reuse,1}}]},
                              {nil,{299,34}}}}}}},
          {debug_line,300,109},
          {call,
              {300,5},
              {atom,{300,5},passes_1},
              [{var,{300,14},'Ps'},{var,{300,18},'Opts'}]}]}]}.
{function,
 {302,1},
 late_epilogue_passes,1,
 [{clause,
   {302,1},
   [{var,{302,1},'_'}],
   [[{call,
      {302,1},
      {remote,{302,1},{atom,{302,1},fake},{atom,{302,1},is_beam_bif_info}},
      []}]],
   [{debug_line,302,110},{atom,{302,1},ignore}]},
  {clause,
   {302,1},
   [{var,{302,22},'Opts'}],
   [],
   [{debug_line,303,111},
    {match,
     {303,5},
     {var,{303,5},'Ps'},
     {cons,
      {303,10},
      {tuple,
       {305,12},
       [{atom,{305,17},ssa_opt_live},
        {'fun',{305,17},{function,ssa_opt_live,1}}]},
      {cons,
       {306,12},
       {tuple,
        {306,12},
        [{atom,{306,17},ssa_opt_bsm},
         {'fun',{306,17},{function,ssa_opt_bsm,1}}]},
       {cons,
        {307,12},
        {tuple,
         {307,12},
         [{atom,{307,17},ssa_opt_bsm_shortcut},
          {'fun',{307,17},{function,ssa_opt_bsm_shortcut,1}}]},
        {cons,
         {308,12},
         {tuple,
          {308,12},
          [{atom,{308,17},ssa_opt_sink},
           {'fun',{308,17},{function,ssa_opt_sink,1}}]},
         {cons,
          {309,12},
          {tuple,
           {309,12},
           [{atom,{309,17},ssa_opt_blockify},
            {'fun',{309,17},{function,ssa_opt_blockify,1}}]},
          {cons,
           {310,12},
           {tuple,
            {310,12},
            [{atom,{310,17},ssa_opt_redundant_br},
             {'fun',{310,17},{function,ssa_opt_redundant_br,1}}]},
           {cons,
            {311,12},
            {tuple,
             {311,12},
             [{atom,{311,17},ssa_opt_merge_blocks},
              {'fun',{311,17},{function,ssa_opt_merge_blocks,1}}]},
            {cons,
             {312,12},
             {tuple,
              {312,12},
              [{atom,{312,17},ssa_opt_bs_ensure},
               {'fun',{312,17},{function,ssa_opt_bs_ensure,1}}]},
             {cons,
              {313,12},
              {tuple,
               {313,12},
               [{atom,{313,17},ssa_opt_try},
                {'fun',{313,17},{function,ssa_opt_try,1}}]},
              {cons,
               {314,12},
               {tuple,
                {314,12},
                [{atom,{314,17},ssa_opt_get_tuple_element},
                 {'fun',{314,17},{function,ssa_opt_get_tuple_element,1}}]},
               {cons,
                {315,12},
                {tuple,
                 {315,12},
                 [{atom,{315,17},ssa_opt_tail_literals},
                  {'fun',{315,17},{function,ssa_opt_tail_literals,1}}]},
                {cons,
                 {316,12},
                 {tuple,
                  {316,12},
                  [{atom,{316,17},ssa_opt_trim_unreachable},
                   {'fun',{316,17},{function,ssa_opt_trim_unreachable,1}}]},
                 {cons,
                  {317,12},
                  {tuple,
                   {317,12},
                   [{atom,{317,17},ssa_opt_unfold_literals},
                    {'fun',{317,17},{function,ssa_opt_unfold_literals,1}}]},
                  {cons,
                   {318,12},
                   {tuple,
                    {318,12},
                    [{atom,{318,17},ssa_opt_ranges},
                     {'fun',{318,17},{function,ssa_opt_ranges,1}}]},
                   {nil,{318,32}}}}}}}}}}}}}}}}},
    {debug_line,319,112},
    {call,
     {319,5},
     {atom,{319,5},passes_1},
     [{var,{319,14},'Ps'},{var,{319,18},'Opts'}]}]}]}.
{function,
 {321,1},
 passes_1,2,
 [{clause,
   {321,1},
   [{var,{321,1},'_'},{var,{321,1},'_'}],
   [[{call,
      {321,1},
      {remote,{321,1},{atom,{321,1},fake},{atom,{321,1},is_beam_bif_info}},
      []}]],
   [{debug_line,321,113},{atom,{321,1},ignore}]},
  {clause,
   {321,1},
   [{var,{321,10},'Ps'},{var,{321,14},'Opts0'}],
   [],
   [{debug_line,322,114},
    {match,
     {322,5},
     {var,{322,5},'Negations'},
     {lc,
      {322,17},
      {block,0,
       [{tuple,
         {322,18},
         [{call,
           {322,19},
           {remote,
            {322,19},
            {atom,{322,19},erlang},
            {atom,{322,19},list_to_atom}},
           [{block,0,
             [{op,
               {322,37},
               '++',
               {string,{322,32},"no_"},
               {call,
                {322,39},
                {remote,
                 {322,39},
                 {atom,{322,39},erlang},
                 {atom,{322,39},atom_to_list}},
                [{var,{322,52},'N'}]}}]}]},
          {var,{322,56},'N'}]}]},
      [{block,0,[{debug_line,323,115},{atom,{323,31},true}]},
       {generate_strict,
        {323,27},
        {tuple,{323,21},[{var,{323,22},'N'},{var,{323,24},'_'}]},
        {var,{323,31},'Ps'}}]}},
    {debug_line,324,116},
    {match,
     {324,5},
     {var,{324,5},'Expansions'},
     {cons,
      {324,18},
      {tuple,
       {324,19},
       [{atom,{324,20},no_bs_match},
        {cons,
         {324,32},
         {atom,{324,33},no_ssa_opt_bs_ensure},
         {cons,{324,54},{atom,{324,54},no_bs_match},{nil,{324,65}}}}]},
      {nil,{324,67}}}},
    {debug_line,325,117},
    {match,
     {325,5},
     {var,{325,5},'Opts'},
     {call,
      {325,12},
      {remote,{325,21},{atom,{325,12},proplists},{atom,{325,22},normalize}},
      [{var,{325,32},'Opts0'},
       {block,0,
        [{cons,
          {325,39},
          {tuple,
           {325,40},
           [{atom,{325,41},expand},{var,{325,48},'Expansions'}]},
          {cons,
           {326,40},
           {tuple,
            {326,40},
            [{atom,{326,41},negations},{var,{326,51},'Negations'}]},
           {nil,{326,61}}}}]}]}},
    {debug_line,327,118},
    {lc,
     {327,5},
     {block,0,
      [{'case',
        {327,6},
        {call,
         {327,11},
         {remote,{327,20},{atom,{327,11},proplists},{atom,{327,21},get_value}},
         [{var,{327,31},'Name'},{var,{327,37},'Opts'},{atom,{327,43},true}]},
        [{clause,
          {328,10},
          [{atom,{328,10},true}],
          [],
          [{debug_line,329,119},{var,{329,14},'P'}]},
         {clause,
          {330,10},
          [{atom,{330,10},false}],
          [],
          [{debug_line,331,120},
           {match,
            {331,14},
            {tuple,{331,14},[{var,{331,15},'NoName'},{var,{331,22},'Name'}]},
            {call,
             {331,30},
             {remote,{331,30},{atom,{331,30},lists},{atom,{331,30},keyfind}},
             [{var,{331,38},'Name'},
              {integer,{331,44},2},
              {var,{331,47},'Negations'}]}},
           {debug_line,332,121},
           {tuple,
            {332,14},
            [{var,{332,15},'NoName'},
             {'fun',
              {332,22},
              {clauses,
               [{clause,
                 {332,25},
                 [{var,{332,26},'S'}],
                 [],
                 [{var,{332,32},'S'}]}]}}]}]}]}]},
     [{block,0,[{debug_line,333,122},{atom,{333,31},true}]},
      {generate,
       {333,28},
       {match,
        {333,17},
        {tuple,{333,17},[{var,{333,18},'Name'},{var,{333,23},'_'}]},
        {var,{333,26},'P'}},
       {var,{333,31},'Ps'}}]}]}]}.
{attribute,{337,2},
           spec,
           {{build_func_db,1},
            [{type,{337,20},
                   'fun',
                   [{type,{337,20},
                          product,
                          [{type,{337,21},record,[{atom,{337,22},b_module}]}]},
                    {user_type,{337,37},func_info_db,[]}]}]}}.
{function,{338,1},
          build_func_db,1,
          [{clause,{338,1},
                   [{var,{338,1},'_'}],
                   [[{call,{338,1},
                           {remote,{338,1},
                                   {atom,{338,1},fake},
                                   {atom,{338,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,338,123},{atom,{338,1},ignore}]},
           {clause,{338,1},
                   [{tuple,{338,15},
                           [{atom,{338,15},b_module},
                            {var,{338,15},'_'},
                            {var,{338,15},'_'},
                            {var,{338,57},'Exports0'},
                            {var,{338,44},'Attr'},
                            {var,{338,30},'Fs'}]}],
                   [],
                   [{debug_line,339,124},
                    {match,{339,5},
                           {var,{339,5},'Exports'},
                           {call,{339,15},
                                 {atom,{339,15},fdb_exports},
                                 [{var,{339,27},'Attr'},
                                  {var,{339,33},'Exports0'}]}},
                    {debug_line,340,125},
                    {call,{340,5},
                          {atom,{340,5},fdb_fs},
                          [{var,{340,12},'Fs'},
                           {var,{340,16},'Exports'},
                           {block,0,[{map,{340,25},[]}]}]}]}]}.
{function,
    {342,1},
    fdb_exports,2,
    [{clause,
         {342,1},
         [{var,{342,1},'_'},{var,{342,1},'_'}],
         [[{call,
               {342,1},
               {remote,
                   {342,1},
                   {atom,{342,1},fake},
                   {atom,{342,1},is_beam_bif_info}},
               []}]],
         [{debug_line,342,126},{atom,{342,1},ignore}]},
     {clause,
         {342,1},
         [{cons,
              {342,13},
              {tuple,{342,14},[{atom,{342,15},on_load},{var,{342,24},'L'}]},
              {var,{342,29},'Attrs'}},
          {var,{342,37},'Exports'}],
         [],
         [{debug_line,345,127},
          {call,
              {345,5},
              {atom,{345,5},fdb_exports},
              [{var,{345,17},'Attrs'},
               {block,0,
                   [{op,{345,35},
                        '++',
                        {call,
                            {345,24},
                            {remote,
                                {345,24},
                                {atom,{345,24},lists},
                                {atom,{345,24},flatten}},
                            [{var,{345,32},'L'}]},
                        {var,{345,38},'Exports'}}]}]}]},
     {clause,
         {346,1},
         [{cons,{346,13},{var,{346,14},'_Attr'},{var,{346,22},'Attrs'}},
          {var,{346,30},'Exports'}],
         [],
         [{debug_line,347,128},
          {call,
              {347,5},
              {atom,{347,5},fdb_exports},
              [{var,{347,17},'Attrs'},{var,{347,24},'Exports'}]}]},
     {clause,
         {348,1},
         [{nil,{348,13}},{var,{348,17},'Exports'}],
         [],
         [{debug_line,349,129},
          {call,
              {349,5},
              {remote,
                  {349,12},
                  {atom,{349,5},gb_sets},
                  {atom,{349,13},from_list}},
              [{var,{349,23},'Exports'}]}]}]}.
{function,
 {351,1},
 fdb_fs,3,
 [{clause,
   {351,1},
   [{var,{351,1},'_'},{var,{351,1},'_'},{var,{351,1},'_'}],
   [[{call,
      {351,1},
      {remote,{351,1},{atom,{351,1},fake},{atom,{351,1},is_beam_bif_info}},
      []}]],
   [{debug_line,351,130},{atom,{351,1},ignore}]},
  {clause,
   {351,1},
   [{cons,
     {351,8},
     {match,
      {351,9},
      {tuple,
       {351,9},
       [{atom,{351,9},b_function},
        {var,{351,9},'_'},
        {var,{351,27},'Args'},
        {var,{351,35},'Bs'},
        {var,{351,9},'_'}]},
      {var,{351,40},'F'}},
     {var,{351,44},'Fs'}},
    {var,{351,49},'Exports'},
    {var,{351,58},'FuncDb0'}],
   [],
   [{debug_line,352,131},
    {match,
     {352,5},
     {var,{352,5},'Id'},
     {call,{352,10},{atom,{352,10},get_func_id},[{var,{352,22},'F'}]}},
    {debug_line,354,132},
    {match,
     {354,5},
     {tuple,
      {354,5},
      [{atom,{354,5},b_local},
       {tuple,{354,19},[{atom,{354,19},b_literal},{var,{354,34},'Name'}]},
       {var,{354,47},'Arity'}]},
     {var,{354,56},'Id'}},
    {debug_line,355,133},
    {match,
     {355,5},
     {var,{355,5},'Exported'},
     {call,
      {355,16},
      {remote,{355,23},{atom,{355,16},gb_sets},{atom,{355,24},is_element}},
      [{block,0,
        [{tuple,{355,35},[{var,{355,36},'Name'},{var,{355,42},'Arity'}]}]},
       {var,{355,50},'Exports'}]}},
    {debug_line,356,134},
    {match,
     {356,5},
     {var,{356,5},'ArgTypes'},
     {call,
      {356,16},
      {remote,{356,16},{atom,{356,16},lists},{atom,{356,16},duplicate}},
      [{block,0,
        [{call,
          {356,26},
          {remote,{356,26},{atom,{356,26},erlang},{atom,{356,26},length}},
          [{var,{356,33},'Args'}]}]},
       {block,0,[{map,{356,40},[]}]}]}},
    {debug_line,358,135},
    {match,
     {358,5},
     {var,{358,5},'FuncDb1'},
     {'case',
      {358,15},
      {var,{358,20},'FuncDb0'},
      [{clause,
        {360,19},
        [{map,
          {360,19},
          [{map_field_exact,
            {360,25},
            {var,{360,22},'Id'},
            {var,{360,28},'Info'}}]}],
        [],
        [{debug_line,361,136},
         {map,
          {361,30},
          {var,{361,23},'FuncDb0'},
          [{map_field_exact,
            {361,36},
            {var,{361,33},'Id'},
            {block,
             {361,39},
             [{match,{361,39},{var,{361,39},rec3},{var,{361,39},'Info'}},
              {'case',
               {361,55},
               {var,{361,39},rec3},
               [{clause,
                 {361,55},
                 [{tuple,
                   {361,55},
                   [{atom,{361,55},func_info},
                    {var,{361,55},'_'},
                    {var,{361,55},'_'},
                    {var,{361,55},'_'},
                    {var,{361,55},'_'},
                    {var,{361,55},'_'}]}],
                 [],
                 [{call,
                   {361,55},
                   {remote,
                    {361,55},
                    {atom,{361,55},erlang},
                    {atom,{361,55},setelement}},
                   [{integer,{361,55},4},
                    {call,
                     {362,55},
                     {remote,
                      {362,55},
                      {atom,{362,55},erlang},
                      {atom,{362,55},setelement}},
                     [{integer,{362,55},5},
                      {var,{361,39},rec3},
                      {var,{362,65},'ArgTypes'}]},
                    {var,{361,64},'Exported'}]}]},
                {clause,
                 [{generated,true},{location,{361,55}}],
                 [{var,[{generated,true},{location,{361,55}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{361,55}}],
                   {remote,
                    [{generated,true},{location,{361,55}}],
                    {atom,[{generated,true},{location,{361,55}}],erlang},
                    {atom,[{generated,true},{location,{361,55}}],error}},
                   [{tuple,
                     [{generated,true},{location,{361,55}}],
                     [{atom,[{generated,true},{location,{361,55}}],badrecord},
                      {var,{361,39},rec3}]}]}]}]}]}}]}]},
       {clause,
        {363,19},
        [{map,{363,19},[]}],
        [],
        [{debug_line,364,137},
         {map,
          {364,30},
          {var,{364,23},'FuncDb0'},
          [{map_field_assoc,
            {364,36},
            {var,{364,33},'Id'},
            {tuple,
             {364,39},
             [{atom,{364,39},func_info},
              {call,
               {364,39},
               {remote,{364,39},{atom,{364,39},ordsets},{atom,{364,39},new}},
               []},
              {call,
               {364,39},
               {remote,{364,39},{atom,{364,39},ordsets},{atom,{364,39},new}},
               []},
              {var,{364,60},'Exported'},
              {var,{365,61},'ArgTypes'},
              {nil,{364,39}}]}}]}]}]}},
    {debug_line,368,138},
    {match,
     {368,5},
     {var,{368,5},'RPO'},
     {call,
      {368,11},
      {remote,{368,19},{atom,{368,11},beam_ssa},{atom,{368,20},rpo}},
      [{var,{368,24},'Bs'}]}},
    {debug_line,369,139},
    {match,
     {369,5},
     {var,{369,5},'FuncDb'},
     {call,
      {369,14},
      {remote,{369,22},{atom,{369,14},beam_ssa},{atom,{369,23},fold_blocks}},
      [{block,0,
        [{'fun',
          {369,35},
          {clauses,
           [{clause,
             {369,38},
             [{var,{369,39},'_L'},
              {tuple,
               {369,43},
               [{atom,{369,43},b_blk},
                {var,{369,43},'_'},
                {var,{369,53},'Is'},
                {var,{369,43},'_'}]},
              {var,{369,58},'FuncDb'}],
             [],
             [{debug_line,370,140},
              {call,
               {370,40},
               {atom,{370,40},fdb_is},
               [{var,{370,47},'Is'},
                {var,{370,51},'Id'},
                {var,{370,55},'FuncDb'}]}]}]}}]},
       {var,{371,37},'RPO'},
       {var,{371,42},'FuncDb1'},
       {var,{371,51},'Bs'}]}},
    {debug_line,373,141},
    {call,
     {373,5},
     {atom,{373,5},fdb_fs},
     [{var,{373,12},'Fs'},{var,{373,16},'Exports'},{var,{373,25},'FuncDb'}]}]},
  {clause,
   {374,1},
   [{nil,{374,8}},{var,{374,12},'_Exports'},{var,{374,22},'FuncDb'}],
   [],
   [{debug_line,375,142},{var,{375,5},'FuncDb'}]}]}.
{function,
    {377,1},
    fdb_is,3,
    [{clause,
         {377,1},
         [{var,{377,1},'_'},{var,{377,1},'_'},{var,{377,1},'_'}],
         [[{call,
               {377,1},
               {remote,
                   {377,1},
                   {atom,{377,1},fake},
                   {atom,{377,1},is_beam_bif_info}},
               []}]],
         [{debug_line,377,143},{atom,{377,1},ignore}]},
     {clause,
         {377,1},
         [{cons,
              {377,8},
              {tuple,
                  {377,9},
                  [{atom,{377,9},b_set},
                   {var,{377,9},'_'},
                   {var,{377,9},'_'},
                   {atom,{377,19},call},
                   {cons,
                       {378,21},
                       {match,
                           {378,22},
                           {tuple,
                               {378,22},
                               [{atom,{378,22},b_local},
                                {var,{378,22},'_'},
                                {var,{378,22},'_'}]},
                           {var,{378,33},'Callee'}},
                       {var,{378,42},'_'}}]},
              {var,{378,48},'Is'}},
          {var,{379,8},'Caller'},
          {var,{379,16},'FuncDb'}],
         [],
         [{debug_line,380,144},
          {call,
              {380,5},
              {atom,{380,5},fdb_is},
              [{var,{380,12},'Is'},
               {var,{380,16},'Caller'},
               {block,0,
                   [{call,
                        {380,24},
                        {atom,{380,24},fdb_update},
                        [{var,{380,35},'Caller'},
                         {var,{380,43},'Callee'},
                         {var,{380,51},'FuncDb'}]}]}]}]},
     {clause,
         {381,1},
         [{cons,
              {381,8},
              {tuple,
                  {381,9},
                  [{atom,{381,9},b_set},
                   {var,{381,9},'_'},
                   {var,{381,9},'_'},
                   {atom,{381,19},make_fun},
                   {cons,
                       {381,33},
                       {match,
                           {381,34},
                           {tuple,
                               {381,34},
                               [{atom,{381,34},b_local},
                                {var,{381,34},'_'},
                                {var,{381,34},'_'}]},
                           {var,{381,45},'Callee'}},
                       {var,{381,54},'_'}}]},
              {var,{381,60},'Is'}},
          {var,{382,8},'Caller'},
          {var,{382,16},'FuncDb'}],
         [],
         [{debug_line,385,145},
          {call,
              {385,5},
              {atom,{385,5},fdb_is},
              [{var,{385,12},'Is'},
               {var,{385,16},'Caller'},
               {block,0,
                   [{call,
                        {385,24},
                        {atom,{385,24},fdb_update},
                        [{var,{385,35},'Caller'},
                         {var,{385,43},'Callee'},
                         {var,{385,51},'FuncDb'}]}]}]}]},
     {clause,
         {386,1},
         [{cons,{386,8},{var,{386,9},'_'},{var,{386,13},'Is'}},
          {var,{386,18},'Caller'},
          {var,{386,26},'FuncDb'}],
         [],
         [{debug_line,387,146},
          {call,
              {387,5},
              {atom,{387,5},fdb_is},
              [{var,{387,12},'Is'},
               {var,{387,16},'Caller'},
               {var,{387,24},'FuncDb'}]}]},
     {clause,
         {388,1},
         [{nil,{388,8}},{var,{388,12},'_Caller'},{var,{388,21},'FuncDb'}],
         [],
         [{debug_line,389,147},{var,{389,5},'FuncDb'}]}]}.
{function,
 {391,1},
 fdb_update,3,
 [{clause,
   {391,1},
   [{var,{391,1},'_'},{var,{391,1},'_'},{var,{391,1},'_'}],
   [[{call,
      {391,1},
      {remote,{391,1},{atom,{391,1},fake},{atom,{391,1},is_beam_bif_info}},
      []}]],
   [{debug_line,391,148},{atom,{391,1},ignore}]},
  {clause,
   {391,1},
   [{var,{391,12},'Caller'},{var,{391,20},'Callee'},{var,{391,28},'FuncDb'}],
   [],
   [{debug_line,392,149},
    {match,
     {392,5},
     {var,{392,5},'CallerVertex'},
     {call,
      {392,20},
      {remote,{392,24},{atom,{392,20},maps},{atom,{392,25},get}},
      [{var,{392,29},'Caller'},
       {var,{392,37},'FuncDb'},
       {block,0,
        [{tuple,
          {392,45},
          [{atom,{392,45},func_info},
           {call,
            {392,45},
            {remote,{392,45},{atom,{392,45},ordsets},{atom,{392,45},new}},
            []},
           {call,
            {392,45},
            {remote,{392,45},{atom,{392,45},ordsets},{atom,{392,45},new}},
            []},
           {atom,{392,45},true},
           {nil,{392,45}},
           {nil,{392,45}}]}]}]}},
    {debug_line,393,150},
    {match,
     {393,5},
     {var,{393,5},'CalleeVertex'},
     {call,
      {393,20},
      {remote,{393,24},{atom,{393,20},maps},{atom,{393,25},get}},
      [{var,{393,29},'Callee'},
       {var,{393,37},'FuncDb'},
       {block,0,
        [{tuple,
          {393,45},
          [{atom,{393,45},func_info},
           {call,
            {393,45},
            {remote,{393,45},{atom,{393,45},ordsets},{atom,{393,45},new}},
            []},
           {call,
            {393,45},
            {remote,{393,45},{atom,{393,45},ordsets},{atom,{393,45},new}},
            []},
           {atom,{393,45},true},
           {nil,{393,45}},
           {nil,{393,45}}]}]}]}},
    {debug_line,395,151},
    {match,
     {395,5},
     {var,{395,5},'Calls'},
     {call,
      {395,13},
      {remote,{395,20},{atom,{395,13},ordsets},{atom,{395,21},add_element}},
      [{var,{395,33},'Callee'},
       {block,0,
        [{'case',
          {395,41},
          {var,{395,41},'CallerVertex'},
          [{clause,
            [{generated,true},{location,{395,41}}],
            [{tuple,
              [{generated,true},{location,{395,41}}],
              [{atom,{395,41},func_info},
               {var,{395,41},'_'},
               {var,{395,41},rec4},
               {var,{395,41},'_'},
               {var,{395,41},'_'},
               {var,{395,41},'_'}]}],
            [],
            [{var,{395,41},rec4}]},
           {clause,
            [{generated,true},{location,{395,41}}],
            [{var,{395,41},rec4}],
            [],
            [{call,
              [{generated,true},{location,{395,41}}],
              {remote,
               [{generated,true},{location,{395,41}}],
               {atom,[{generated,true},{location,{395,41}}],erlang},
               {atom,[{generated,true},{location,{395,41}}],error}},
              [{tuple,
                [{generated,true},{location,{395,41}}],
                [{atom,[{generated,true},{location,{395,41}}],badrecord},
                 {var,{395,41},rec4}]}]}]}]}]}]}},
    {debug_line,396,152},
    {match,
     {396,5},
     {var,{396,5},'CalledBy'},
     {call,
      {396,16},
      {remote,{396,23},{atom,{396,16},ordsets},{atom,{396,24},add_element}},
      [{var,{396,36},'Caller'},
       {block,0,
        [{'case',
          {396,44},
          {var,{396,44},'CalleeVertex'},
          [{clause,
            [{generated,true},{location,{396,44}}],
            [{tuple,
              [{generated,true},{location,{396,44}}],
              [{atom,{396,44},func_info},
               {var,{396,44},rec5},
               {var,{396,44},'_'},
               {var,{396,44},'_'},
               {var,{396,44},'_'},
               {var,{396,44},'_'}]}],
            [],
            [{var,{396,44},rec5}]},
           {clause,
            [{generated,true},{location,{396,44}}],
            [{var,{396,44},rec5}],
            [],
            [{call,
              [{generated,true},{location,{396,44}}],
              {remote,
               [{generated,true},{location,{396,44}}],
               {atom,[{generated,true},{location,{396,44}}],erlang},
               {atom,[{generated,true},{location,{396,44}}],error}},
              [{tuple,
                [{generated,true},{location,{396,44}}],
                [{atom,[{generated,true},{location,{396,44}}],badrecord},
                 {var,{396,44},rec5}]}]}]}]}]}]}},
    {debug_line,398,153},
    {map,
     {398,11},
     {var,{398,5},'FuncDb'},
     [{map_field_assoc,
       {398,21},
       {var,{398,14},'Caller'},
       {block,
        {398,24},
        [{match,{398,24},{var,{398,24},rec6},{var,{398,24},'CallerVertex'}},
         {'case',
          {398,47},
          {var,{398,24},rec6},
          [{clause,
            {398,47},
            [{tuple,
              {398,47},
              [{atom,{398,47},func_info},
               {var,{398,47},'_'},
               {var,{398,47},'_'},
               {var,{398,47},'_'},
               {var,{398,47},'_'},
               {var,{398,47},'_'}]}],
            [],
            [{call,
              {398,47},
              {remote,
               {398,47},
               {atom,{398,47},erlang},
               {atom,{398,47},setelement}},
              [{integer,{398,47},3},
               {var,{398,24},rec6},
               {var,{398,51},'Calls'}]}]},
           {clause,
            [{generated,true},{location,{398,47}}],
            [{var,[{generated,true},{location,{398,47}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{398,47}}],
              {remote,
               [{generated,true},{location,{398,47}}],
               {atom,[{generated,true},{location,{398,47}}],erlang},
               {atom,[{generated,true},{location,{398,47}}],error}},
              [{tuple,
                [{generated,true},{location,{398,47}}],
                [{atom,[{generated,true},{location,{398,47}}],badrecord},
                 {var,{398,24},rec6}]}]}]}]}]}},
      {map_field_assoc,
       {399,21},
       {var,{399,14},'Callee'},
       {block,
        {399,24},
        [{match,{399,24},{var,{399,24},rec7},{var,{399,24},'CalleeVertex'}},
         {'case',
          {399,47},
          {var,{399,24},rec7},
          [{clause,
            {399,47},
            [{tuple,
              {399,47},
              [{atom,{399,47},func_info},
               {var,{399,47},'_'},
               {var,{399,47},'_'},
               {var,{399,47},'_'},
               {var,{399,47},'_'},
               {var,{399,47},'_'}]}],
            [],
            [{call,
              {399,47},
              {remote,
               {399,47},
               {atom,{399,47},erlang},
               {atom,{399,47},setelement}},
              [{integer,{399,47},2},
               {var,{399,24},rec7},
               {var,{399,50},'CalledBy'}]}]},
           {clause,
            [{generated,true},{location,{399,47}}],
            [{var,[{generated,true},{location,{399,47}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{399,47}}],
              {remote,
               [{generated,true},{location,{399,47}}],
               {atom,[{generated,true},{location,{399,47}}],erlang},
               {atom,[{generated,true},{location,{399,47}}],error}},
              [{tuple,
                [{generated,true},{location,{399,47}}],
                [{atom,[{generated,true},{location,{399,47}}],badrecord},
                 {var,{399,24},rec7}]}]}]}]}]}}]}]}]}.
{function,
 {407,1},
 get_call_order_po,2,
 [{clause,
   {407,1},
   [{var,{407,1},'_'},{var,{407,1},'_'}],
   [[{call,
      {407,1},
      {remote,{407,1},{atom,{407,1},fake},{atom,{407,1},is_beam_bif_info}},
      []}]],
   [{debug_line,407,154},{atom,{407,1},ignore}]},
  {clause,
   {407,1},
   [{var,{407,19},'StMap'},{var,{407,26},'FuncDb'}],
   [[{call,
      {407,39},
      {remote,{407,39},{atom,{407,39},erlang},{atom,{407,39},is_map}},
      [{var,{407,46},'FuncDb'}]}]],
   [{debug_line,408,155},
    {match,
     {408,5},
     {var,{408,5},'Order'},
     {call,{408,13},{atom,{408,13},gco_po},[{var,{408,20},'FuncDb'}]}},
    {debug_line,409,156},
    {op,
     {409,11},
     '++',
     {var,{409,5},'Order'},
     {call,
      {409,14},
      {remote,{409,14},{atom,{409,14},lists},{atom,{409,14},sort}},
      [{block,0,
        [{lc,
          {409,19},
          {block,0,[{var,{409,20},'K'}]},
          [{block,0,[{atom,{409,30},true}]},
           {generate,
            {409,27},
            {var,{409,25},'K'},
            {call,
             {409,30},
             {remote,{409,34},{atom,{409,30},maps},{atom,{409,35},keys}},
             [{var,{409,40},'StMap'}]}},
           {block,0,[{atom,{409,48},true}]},
           {op,
            {409,48},
            'not',
            {call,
             {409,52},
             {remote,
              {409,52},
              {atom,{409,52},erlang},
              {atom,{409,52},is_map_key}},
             [{var,{409,63},'K'},{var,{409,66},'FuncDb'}]}}]}]}]}}]}]}.
{function,
    {411,1},
    gco_po,1,
    [{clause,
         {411,1},
         [{var,{411,1},'_'}],
         [[{call,
               {411,1},
               {remote,
                   {411,1},
                   {atom,{411,1},fake},
                   {atom,{411,1},is_beam_bif_info}},
               []}]],
         [{debug_line,411,157},{atom,{411,1},ignore}]},
     {clause,
         {411,1},
         [{var,{411,8},'FuncDb'}],
         [],
         [{debug_line,412,158},
          {match,
              {412,5},
              {var,{412,5},'All'},
              {call,
                  {412,11},
                  {remote,{412,11},{atom,{412,11},lists},{atom,{412,11},sort}},
                  [{block,0,
                       [{call,
                            {412,16},
                            {remote,
                                {412,20},
                                {atom,{412,16},maps},
                                {atom,{412,21},keys}},
                            [{var,{412,26},'FuncDb'}]}]}]}},
          {debug_line,413,159},
          {match,
              {413,5},
              {tuple,{413,5},[{var,{413,6},'RPO'},{var,{413,10},'_'}]},
              {call,
                  {413,15},
                  {atom,{413,15},gco_rpo},
                  [{var,{413,23},'All'},
                   {var,{413,28},'FuncDb'},
                   {block,0,
                       [{call,
                            {413,36},
                            {remote,
                                {413,40},
                                {atom,{413,36},sets},
                                {atom,{413,41},new}},
                            []}]},
                   {nil,{413,48}}]}},
          {debug_line,414,160},
          {call,
              {414,5},
              {remote,{414,5},{atom,{414,5},lists},{atom,{414,5},reverse}},
              [{var,{414,13},'RPO'}]}]}]}.
{function,
    {416,1},
    gco_rpo,4,
    [{clause,
         {416,1},
         [{var,{416,1},'_'},
          {var,{416,1},'_'},
          {var,{416,1},'_'},
          {var,{416,1},'_'}],
         [[{call,
               {416,1},
               {remote,
                   {416,1},
                   {atom,{416,1},fake},
                   {atom,{416,1},is_beam_bif_info}},
               []}]],
         [{debug_line,416,161},{atom,{416,1},ignore}]},
     {clause,
         {416,1},
         [{cons,{416,9},{var,{416,10},'Id'},{var,{416,13},'Ids'}},
          {var,{416,19},'FuncDb'},
          {var,{416,27},'Seen0'},
          {var,{416,34},'Acc0'}],
         [],
         [{debug_line,417,162},
          {'case',
              {417,5},
              {call,
                  {417,10},
                  {remote,
                      {417,14},
                      {atom,{417,10},sets},
                      {atom,{417,15},is_element}},
                  [{var,{417,26},'Id'},{var,{417,30},'Seen0'}]},
              [{clause,
                   {418,9},
                   [{atom,{418,9},true}],
                   [],
                   [{debug_line,419,163},
                    {call,
                        {419,13},
                        {atom,{419,13},gco_rpo},
                        [{var,{419,21},'Ids'},
                         {var,{419,26},'FuncDb'},
                         {var,{419,34},'Seen0'},
                         {var,{419,41},'Acc0'}]}]},
               {clause,
                   {420,9},
                   [{atom,{420,9},false}],
                   [],
                   [{debug_line,421,164},
                    {match,
                        {421,13},
                        {tuple,
                            {421,13},
                            [{atom,{421,13},func_info},
                             {var,{421,13},'_'},
                             {var,{421,28},'Successors'},
                             {var,{421,13},'_'},
                             {var,{421,13},'_'},
                             {var,{421,13},'_'}]},
                        {call,
                            {421,42},
                            {remote,
                                {421,42},
                                {atom,{421,42},erlang},
                                {atom,{421,42},map_get}},
                            [{var,{421,50},'Id'},{var,{421,54},'FuncDb'}]}},
                    {debug_line,422,165},
                    {match,
                        {422,13},
                        {var,{422,13},'Seen1'},
                        {call,
                            {422,21},
                            {remote,
                                {422,25},
                                {atom,{422,21},sets},
                                {atom,{422,26},add_element}},
                            [{var,{422,38},'Id'},{var,{422,42},'Seen0'}]}},
                    {debug_line,423,166},
                    {match,
                        {423,13},
                        {tuple,
                            {423,13},
                            [{var,{423,14},'Acc'},{var,{423,18},'Seen'}]},
                        {call,
                            {423,26},
                            {atom,{423,26},gco_rpo},
                            [{var,{423,34},'Successors'},
                             {var,{423,46},'FuncDb'},
                             {var,{423,54},'Seen1'},
                             {var,{423,61},'Acc0'}]}},
                    {debug_line,424,167},
                    {call,
                        {424,13},
                        {atom,{424,13},gco_rpo},
                        [{var,{424,21},'Ids'},
                         {var,{424,26},'FuncDb'},
                         {var,{424,34},'Seen'},
                         {block,0,
                             [{cons,
                                  {424,40},
                                  {var,{424,41},'Id'},
                                  {var,{424,44},'Acc'}}]}]}]}]}]},
     {clause,
         {426,1},
         [{nil,{426,9}},
          {var,{426,13},'_'},
          {var,{426,16},'Seen'},
          {var,{426,22},'Acc'}],
         [],
         [{debug_line,427,168},
          {tuple,{427,5},[{var,{427,6},'Acc'},{var,{427,10},'Seen'}]}]}]}.
{function,
 {433,1},
 ssa_opt_dead,1,
 [{clause,
   {433,1},
   [{var,{433,1},'_'}],
   [[{call,
      {433,1},
      {remote,{433,1},{atom,{433,1},fake},{atom,{433,1},is_beam_bif_info}},
      []}]],
   [{debug_line,433,169},{atom,{433,1},ignore}]},
  {clause,
   {433,1},
   [{tuple,
     {433,14},
     [{match,
       {433,15},
       {tuple,
        {433,15},
        [{atom,{433,15},opt_st},
         {var,{433,27},'Linear'},
         {var,{433,15},'_'},
         {var,{433,15},'_'},
         {var,{433,15},'_'}]},
       {var,{433,35},'St'}},
      {var,{433,39},'FuncDb'}]}],
   [],
   [{debug_line,434,170},
    {tuple,
     {434,5},
     [{block,
       {434,6},
       [{match,
         {434,16},
         {var,{434,16},rec8},
         {call,
          {434,20},
          {remote,{434,33},{atom,{434,20},beam_ssa_dead},{atom,{434,34},opt}},
          [{var,{434,38},'Linear'}]}},
        {match,{434,6},{var,{434,6},rec9},{var,{434,6},'St'}},
        {'case',
         {434,16},
         {var,{434,6},rec9},
         [{clause,
           {434,16},
           [{tuple,
             {434,16},
             [{atom,{434,16},opt_st},
              {var,{434,16},'_'},
              {var,{434,16},'_'},
              {var,{434,16},'_'},
              {var,{434,16},'_'}]}],
           [],
           [{call,
             {434,16},
             {remote,
              {434,16},
              {atom,{434,16},erlang},
              {atom,{434,16},setelement}},
             [{integer,{434,16},2},{var,{434,6},rec9},{var,{434,16},rec8}]}]},
          {clause,
           [{generated,true},{location,{434,16}}],
           [{var,[{generated,true},{location,{434,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{434,16}}],
             {remote,
              [{generated,true},{location,{434,16}}],
              {atom,[{generated,true},{location,{434,16}}],erlang},
              {atom,[{generated,true},{location,{434,16}}],error}},
             [{tuple,
               [{generated,true},{location,{434,16}}],
               [{atom,[{generated,true},{location,{434,16}}],badrecord},
                {var,{434,6},rec9}]}]}]}]}]},
      {var,{434,48},'FuncDb'}]}]}]}.
{function,
 {436,1},
 ssa_opt_linearize,1,
 [{clause,
   {436,1},
   [{var,{436,1},'_'}],
   [[{call,
      {436,1},
      {remote,{436,1},{atom,{436,1},fake},{atom,{436,1},is_beam_bif_info}},
      []}]],
   [{debug_line,436,171},{atom,{436,1},ignore}]},
  {clause,
   {436,1},
   [{tuple,
     {436,19},
     [{match,
       {436,20},
       {tuple,
        {436,20},
        [{atom,{436,20},opt_st},
         {var,{436,32},'Blocks'},
         {var,{436,20},'_'},
         {var,{436,20},'_'},
         {var,{436,20},'_'}]},
       {var,{436,40},'St'}},
      {var,{436,44},'FuncDb'}]}],
   [],
   [{debug_line,437,172},
    {tuple,
     {437,5},
     [{block,
       {437,6},
       [{match,
         {437,16},
         {var,{437,16},rec10},
         {call,
          {437,20},
          {remote,{437,28},{atom,{437,20},beam_ssa},{atom,{437,29},linearize}},
          [{var,{437,39},'Blocks'}]}},
        {match,{437,6},{var,{437,6},rec11},{var,{437,6},'St'}},
        {'case',
         {437,16},
         {var,{437,6},rec11},
         [{clause,
           {437,16},
           [{tuple,
             {437,16},
             [{atom,{437,16},opt_st},
              {var,{437,16},'_'},
              {var,{437,16},'_'},
              {var,{437,16},'_'},
              {var,{437,16},'_'}]}],
           [],
           [{call,
             {437,16},
             {remote,
              {437,16},
              {atom,{437,16},erlang},
              {atom,{437,16},setelement}},
             [{integer,{437,16},2},
              {var,{437,6},rec11},
              {var,{437,16},rec10}]}]},
          {clause,
           [{generated,true},{location,{437,16}}],
           [{var,[{generated,true},{location,{437,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{437,16}}],
             {remote,
              [{generated,true},{location,{437,16}}],
              {atom,[{generated,true},{location,{437,16}}],erlang},
              {atom,[{generated,true},{location,{437,16}}],error}},
             [{tuple,
               [{generated,true},{location,{437,16}}],
               [{atom,[{generated,true},{location,{437,16}}],badrecord},
                {var,{437,6},rec11}]}]}]}]}]},
      {var,{437,49},'FuncDb'}]}]}]}.
{function,
 {439,1},
 ssa_opt_type_continue,1,
 [{clause,
   {439,1},
   [{var,{439,1},'_'}],
   [[{call,
      {439,1},
      {remote,{439,1},{atom,{439,1},fake},{atom,{439,1},is_beam_bif_info}},
      []}]],
   [{debug_line,439,173},{atom,{439,1},ignore}]},
  {clause,
   {439,1},
   [{tuple,
     {439,23},
     [{match,
       {439,24},
       {tuple,
        {439,24},
        [{atom,{439,24},opt_st},
         {var,{439,36},'Linear0'},
         {var,{439,49},'Args'},
         {var,{439,24},'_'},
         {var,{439,59},'Anno'}]},
       {var,{439,65},'St0'}},
      {var,{439,70},'FuncDb0'}]}],
   [],
   [{debug_line,440,174},
    {match,
     {440,5},
     {tuple,{440,5},[{var,{440,6},'Linear'},{var,{440,14},'FuncDb'}]},
     {call,
      {440,24},
      {remote,
       {440,37},
       {atom,{440,24},beam_ssa_type},
       {atom,{440,38},opt_continue}},
      [{var,{440,51},'Linear0'},
       {var,{440,60},'Args'},
       {var,{440,66},'Anno'},
       {var,{440,72},'FuncDb0'}]}},
    {debug_line,441,175},
    {tuple,
     {441,5},
     [{block,
       {441,6},
       [{match,{441,6},{var,{441,6},rec12},{var,{441,6},'St0'}},
        {'case',
         {441,17},
         {var,{441,6},rec12},
         [{clause,
           {441,17},
           [{tuple,
             {441,17},
             [{atom,{441,17},opt_st},
              {var,{441,17},'_'},
              {var,{441,17},'_'},
              {var,{441,17},'_'},
              {var,{441,17},'_'}]}],
           [],
           [{call,
             {441,17},
             {remote,
              {441,17},
              {atom,{441,17},erlang},
              {atom,{441,17},setelement}},
             [{integer,{441,17},2},
              {var,{441,6},rec12},
              {var,{441,21},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{441,17}}],
           [{var,[{generated,true},{location,{441,17}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{441,17}}],
             {remote,
              [{generated,true},{location,{441,17}}],
              {atom,[{generated,true},{location,{441,17}}],erlang},
              {atom,[{generated,true},{location,{441,17}}],error}},
             [{tuple,
               [{generated,true},{location,{441,17}}],
               [{atom,[{generated,true},{location,{441,17}}],badrecord},
                {var,{441,6},rec12}]}]}]}]}]},
      {var,{441,30},'FuncDb'}]}]}]}.
{function,
 {443,1},
 ssa_opt_type_finish,1,
 [{clause,
   {443,1},
   [{var,{443,1},'_'}],
   [[{call,
      {443,1},
      {remote,{443,1},{atom,{443,1},fake},{atom,{443,1},is_beam_bif_info}},
      []}]],
   [{debug_line,443,176},{atom,{443,1},ignore}]},
  {clause,
   {443,1},
   [{tuple,
     {443,21},
     [{match,
       {443,22},
       {tuple,
        {443,22},
        [{atom,{443,22},opt_st},
         {var,{443,22},'_'},
         {var,{443,35},'Args'},
         {var,{443,22},'_'},
         {var,{443,45},'Anno0'}]},
       {var,{443,52},'St0'}},
      {var,{443,57},'FuncDb0'}]}],
   [],
   [{debug_line,444,177},
    {match,
     {444,5},
     {tuple,{444,5},[{var,{444,6},'Anno'},{var,{444,12},'FuncDb'}]},
     {call,
      {444,22},
      {remote,
       {444,35},
       {atom,{444,22},beam_ssa_type},
       {atom,{444,36},opt_finish}},
      [{var,{444,47},'Args'},
       {var,{444,53},'Anno0'},
       {var,{444,60},'FuncDb0'}]}},
    {debug_line,445,178},
    {tuple,
     {445,5},
     [{block,
       {445,6},
       [{match,{445,6},{var,{445,6},rec13},{var,{445,6},'St0'}},
        {'case',
         {445,17},
         {var,{445,6},rec13},
         [{clause,
           {445,17},
           [{tuple,
             {445,17},
             [{atom,{445,17},opt_st},
              {var,{445,17},'_'},
              {var,{445,17},'_'},
              {var,{445,17},'_'},
              {var,{445,17},'_'}]}],
           [],
           [{call,
             {445,17},
             {remote,
              {445,17},
              {atom,{445,17},erlang},
              {atom,{445,17},setelement}},
             [{integer,{445,17},5},
              {var,{445,6},rec13},
              {var,{445,22},'Anno'}]}]},
          {clause,
           [{generated,true},{location,{445,17}}],
           [{var,[{generated,true},{location,{445,17}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{445,17}}],
             {remote,
              [{generated,true},{location,{445,17}}],
              {atom,[{generated,true},{location,{445,17}}],erlang},
              {atom,[{generated,true},{location,{445,17}}],error}},
             [{tuple,
               [{generated,true},{location,{445,17}}],
               [{atom,[{generated,true},{location,{445,17}}],badrecord},
                {var,{445,6},rec13}]}]}]}]}]},
      {var,{445,29},'FuncDb'}]}]}]}.
{function,
 {447,1},
 ssa_opt_blockify,1,
 [{clause,
   {447,1},
   [{var,{447,1},'_'}],
   [[{call,
      {447,1},
      {remote,{447,1},{atom,{447,1},fake},{atom,{447,1},is_beam_bif_info}},
      []}]],
   [{debug_line,447,179},{atom,{447,1},ignore}]},
  {clause,
   {447,1},
   [{tuple,
     {447,18},
     [{match,
       {447,19},
       {tuple,
        {447,19},
        [{atom,{447,19},opt_st},
         {var,{447,31},'Linear'},
         {var,{447,19},'_'},
         {var,{447,19},'_'},
         {var,{447,19},'_'}]},
       {var,{447,39},'St'}},
      {var,{447,43},'FuncDb'}]}],
   [],
   [{debug_line,448,180},
    {tuple,
     {448,5},
     [{block,
       {448,6},
       [{match,
         {448,16},
         {var,{448,16},rec14},
         {call,
          {448,20},
          {remote,{448,24},{atom,{448,20},maps},{atom,{448,25},from_list}},
          [{var,{448,35},'Linear'}]}},
        {match,{448,6},{var,{448,6},rec15},{var,{448,6},'St'}},
        {'case',
         {448,16},
         {var,{448,6},rec15},
         [{clause,
           {448,16},
           [{tuple,
             {448,16},
             [{atom,{448,16},opt_st},
              {var,{448,16},'_'},
              {var,{448,16},'_'},
              {var,{448,16},'_'},
              {var,{448,16},'_'}]}],
           [],
           [{call,
             {448,16},
             {remote,
              {448,16},
              {atom,{448,16},erlang},
              {atom,{448,16},setelement}},
             [{integer,{448,16},2},
              {var,{448,6},rec15},
              {var,{448,16},rec14}]}]},
          {clause,
           [{generated,true},{location,{448,16}}],
           [{var,[{generated,true},{location,{448,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{448,16}}],
             {remote,
              [{generated,true},{location,{448,16}}],
              {atom,[{generated,true},{location,{448,16}}],erlang},
              {atom,[{generated,true},{location,{448,16}}],error}},
             [{tuple,
               [{generated,true},{location,{448,16}}],
               [{atom,[{generated,true},{location,{448,16}}],badrecord},
                {var,{448,6},rec15}]}]}]}]}]},
      {var,{448,45},'FuncDb'}]}]}]}.
{function,
 {450,1},
 ssa_opt_trim_unreachable,1,
 [{clause,
   {450,1},
   [{var,{450,1},'_'}],
   [[{call,
      {450,1},
      {remote,{450,1},{atom,{450,1},fake},{atom,{450,1},is_beam_bif_info}},
      []}]],
   [{debug_line,450,181},{atom,{450,1},ignore}]},
  {clause,
   {450,1},
   [{tuple,
     {450,26},
     [{match,
       {450,27},
       {tuple,
        {450,27},
        [{atom,{450,27},opt_st},
         {var,{450,39},'Blocks'},
         {var,{450,27},'_'},
         {var,{450,27},'_'},
         {var,{450,27},'_'}]},
       {var,{450,47},'St'}},
      {var,{450,51},'FuncDb'}]}],
   [],
   [{debug_line,451,182},
    {tuple,
     {451,5},
     [{block,
       {451,6},
       [{match,
         {451,16},
         {var,{451,16},rec16},
         {call,
          {451,20},
          {remote,
           {451,28},
           {atom,{451,20},beam_ssa},
           {atom,{451,29},trim_unreachable}},
          [{var,{451,46},'Blocks'}]}},
        {match,{451,6},{var,{451,6},rec17},{var,{451,6},'St'}},
        {'case',
         {451,16},
         {var,{451,6},rec17},
         [{clause,
           {451,16},
           [{tuple,
             {451,16},
             [{atom,{451,16},opt_st},
              {var,{451,16},'_'},
              {var,{451,16},'_'},
              {var,{451,16},'_'},
              {var,{451,16},'_'}]}],
           [],
           [{call,
             {451,16},
             {remote,
              {451,16},
              {atom,{451,16},erlang},
              {atom,{451,16},setelement}},
             [{integer,{451,16},2},
              {var,{451,6},rec17},
              {var,{451,16},rec16}]}]},
          {clause,
           [{generated,true},{location,{451,16}}],
           [{var,[{generated,true},{location,{451,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{451,16}}],
             {remote,
              [{generated,true},{location,{451,16}}],
              {atom,[{generated,true},{location,{451,16}}],erlang},
              {atom,[{generated,true},{location,{451,16}}],error}},
             [{tuple,
               [{generated,true},{location,{451,16}}],
               [{atom,[{generated,true},{location,{451,16}}],badrecord},
                {var,{451,6},rec17}]}]}]}]}]},
      {var,{451,56},'FuncDb'}]}]}]}.
{function,
 {453,1},
 ssa_opt_merge_blocks,1,
 [{clause,
   {453,1},
   [{var,{453,1},'_'}],
   [[{call,
      {453,1},
      {remote,{453,1},{atom,{453,1},fake},{atom,{453,1},is_beam_bif_info}},
      []}]],
   [{debug_line,453,183},{atom,{453,1},ignore}]},
  {clause,
   {453,1},
   [{tuple,
     {453,22},
     [{match,
       {453,23},
       {tuple,
        {453,23},
        [{atom,{453,23},opt_st},
         {var,{453,35},'Blocks0'},
         {var,{453,23},'_'},
         {var,{453,23},'_'},
         {var,{453,23},'_'}]},
       {var,{453,44},'St'}},
      {var,{453,48},'FuncDb'}]}],
   [],
   [{debug_line,454,184},
    {match,
     {454,5},
     {var,{454,5},'RPO'},
     {call,
      {454,11},
      {remote,{454,19},{atom,{454,11},beam_ssa},{atom,{454,20},rpo}},
      [{var,{454,24},'Blocks0'}]}},
    {debug_line,455,185},
    {match,
     {455,5},
     {var,{455,5},'Blocks'},
     {call,
      {455,14},
      {remote,{455,22},{atom,{455,14},beam_ssa},{atom,{455,23},merge_blocks}},
      [{var,{455,36},'RPO'},{var,{455,41},'Blocks0'}]}},
    {debug_line,456,186},
    {tuple,
     {456,5},
     [{block,
       {456,6},
       [{match,{456,6},{var,{456,6},rec18},{var,{456,6},'St'}},
        {'case',
         {456,16},
         {var,{456,6},rec18},
         [{clause,
           {456,16},
           [{tuple,
             {456,16},
             [{atom,{456,16},opt_st},
              {var,{456,16},'_'},
              {var,{456,16},'_'},
              {var,{456,16},'_'},
              {var,{456,16},'_'}]}],
           [],
           [{call,
             {456,16},
             {remote,
              {456,16},
              {atom,{456,16},erlang},
              {atom,{456,16},setelement}},
             [{integer,{456,16},2},
              {var,{456,6},rec18},
              {var,{456,20},'Blocks'}]}]},
          {clause,
           [{generated,true},{location,{456,16}}],
           [{var,[{generated,true},{location,{456,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{456,16}}],
             {remote,
              [{generated,true},{location,{456,16}}],
              {atom,[{generated,true},{location,{456,16}}],erlang},
              {atom,[{generated,true},{location,{456,16}}],error}},
             [{tuple,
               [{generated,true},{location,{456,16}}],
               [{atom,[{generated,true},{location,{456,16}}],badrecord},
                {var,{456,6},rec18}]}]}]}]}]},
      {var,{456,29},'FuncDb'}]}]}]}.
{function,
 {458,1},
 ssa_opt_ranges,1,
 [{clause,
   {458,1},
   [{var,{458,1},'_'}],
   [[{call,
      {458,1},
      {remote,{458,1},{atom,{458,1},fake},{atom,{458,1},is_beam_bif_info}},
      []}]],
   [{debug_line,458,187},{atom,{458,1},ignore}]},
  {clause,
   {458,1},
   [{tuple,
     {458,16},
     [{match,
       {458,17},
       {tuple,
        {458,17},
        [{atom,{458,17},opt_st},
         {var,{458,29},'Blocks'},
         {var,{458,17},'_'},
         {var,{458,17},'_'},
         {var,{458,17},'_'}]},
       {var,{458,37},'St'}},
      {var,{458,41},'FuncDb'}]}],
   [],
   [{debug_line,459,188},
    {tuple,
     {459,5},
     [{block,
       {459,6},
       [{match,
         {459,16},
         {var,{459,16},rec19},
         {call,
          {459,20},
          {remote,
           {459,33},
           {atom,{459,20},beam_ssa_type},
           {atom,{459,34},opt_ranges}},
          [{var,{459,45},'Blocks'}]}},
        {match,{459,6},{var,{459,6},rec20},{var,{459,6},'St'}},
        {'case',
         {459,16},
         {var,{459,6},rec20},
         [{clause,
           {459,16},
           [{tuple,
             {459,16},
             [{atom,{459,16},opt_st},
              {var,{459,16},'_'},
              {var,{459,16},'_'},
              {var,{459,16},'_'},
              {var,{459,16},'_'}]}],
           [],
           [{call,
             {459,16},
             {remote,
              {459,16},
              {atom,{459,16},erlang},
              {atom,{459,16},setelement}},
             [{integer,{459,16},2},
              {var,{459,6},rec20},
              {var,{459,16},rec19}]}]},
          {clause,
           [{generated,true},{location,{459,16}}],
           [{var,[{generated,true},{location,{459,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{459,16}}],
             {remote,
              [{generated,true},{location,{459,16}}],
              {atom,[{generated,true},{location,{459,16}}],erlang},
              {atom,[{generated,true},{location,{459,16}}],error}},
             [{tuple,
               [{generated,true},{location,{459,16}}],
               [{atom,[{generated,true},{location,{459,16}}],badrecord},
                {var,{459,6},rec20}]}]}]}]}]},
      {var,{459,55},'FuncDb'}]}]}]}.
{function,
 {466,1},
 ssa_opt_merge_updates,1,
 [{clause,
   {466,1},
   [{var,{466,1},'_'}],
   [[{call,
      {466,1},
      {remote,{466,1},{atom,{466,1},fake},{atom,{466,1},is_beam_bif_info}},
      []}]],
   [{debug_line,466,189},{atom,{466,1},ignore}]},
  {clause,
   {466,1},
   [{tuple,
     {466,23},
     [{match,
       {466,24},
       {tuple,
        {466,24},
        [{atom,{466,24},opt_st},
         {var,{466,36},'Linear0'},
         {var,{466,24},'_'},
         {var,{466,24},'_'},
         {var,{466,24},'_'}]},
       {var,{466,45},'St'}},
      {var,{466,49},'FuncDb'}]}],
   [],
   [{debug_line,467,190},
    {match,
     {467,5},
     {var,{467,5},'Linear'},
     {call,
      {467,14},
      {atom,{467,14},merge_updates_bs},
      [{var,{467,31},'Linear0'}]}},
    {debug_line,468,191},
    {tuple,
     {468,5},
     [{block,
       {468,6},
       [{match,{468,6},{var,{468,6},rec21},{var,{468,6},'St'}},
        {'case',
         {468,16},
         {var,{468,6},rec21},
         [{clause,
           {468,16},
           [{tuple,
             {468,16},
             [{atom,{468,16},opt_st},
              {var,{468,16},'_'},
              {var,{468,16},'_'},
              {var,{468,16},'_'},
              {var,{468,16},'_'}]}],
           [],
           [{call,
             {468,16},
             {remote,
              {468,16},
              {atom,{468,16},erlang},
              {atom,{468,16},setelement}},
             [{integer,{468,16},2},
              {var,{468,6},rec21},
              {var,{468,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{468,16}}],
           [{var,[{generated,true},{location,{468,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{468,16}}],
             {remote,
              [{generated,true},{location,{468,16}}],
              {atom,[{generated,true},{location,{468,16}}],erlang},
              {atom,[{generated,true},{location,{468,16}}],error}},
             [{tuple,
               [{generated,true},{location,{468,16}}],
               [{atom,[{generated,true},{location,{468,16}}],badrecord},
                {var,{468,6},rec21}]}]}]}]}]},
      {var,{468,29},'FuncDb'}]}]}]}.
{function,
 {473,1},
 merge_updates_bs,1,
 [{clause,
   {473,1},
   [{var,{473,1},'_'}],
   [[{call,
      {473,1},
      {remote,{473,1},{atom,{473,1},fake},{atom,{473,1},is_beam_bif_info}},
      []}]],
   [{debug_line,473,192},{atom,{473,1},ignore}]},
  {clause,
   {473,1},
   [{cons,
     {473,18},
     {tuple,
      {473,19},
      [{var,{473,20},'LblA'},
       {match,
        {474,20},
        {tuple,
         {474,20},
         [{atom,{474,20},b_blk},
          {var,{474,20},'_'},
          {cons,
           {474,30},
           {tuple,
            {474,31},
            [{atom,{474,31},b_set},
             {var,{474,31},'_'},
             {var,{475,42},'DstA'},
             {atom,{474,41},update_record},
             {cons,
              {476,43},
              {var,{476,44},'SpecA'},
              {cons,
               {476,51},
               {var,{476,51},'Size'},
               {cons,{476,57},{var,{476,57},'Src'},{var,{476,63},'ListA'}}}}]},
           {nil,{476,70}}},
          {tuple,
           {477,32},
           [{atom,{477,32},b_br},
            {var,{477,32},'_'},
            {tuple,{477,43},[{atom,{477,43},b_literal},{atom,{477,58},true}]},
            {var,{478,43},'LblB'},
            {var,{477,32},'_'}]}]},
        {var,{478,50},'BlkA'}}]},
     {cons,
      {479,19},
      {tuple,
       {479,19},
       [{var,{479,20},'LblB'},
        {match,
         {480,20},
         {tuple,
          {480,20},
          [{atom,{480,20},b_blk},
           {var,{480,20},'_'},
           {cons,
            {480,30},
            {match,
             {480,31},
             {tuple,
              {480,31},
              [{atom,{480,31},b_set},
               {var,{480,31},'_'},
               {var,{480,31},'_'},
               {atom,{480,41},update_record},
               {cons,
                {481,43},
                {var,{481,44},'SpecB'},
                {cons,
                 {481,51},
                 {var,{481,51},'Size'},
                 {cons,
                  {481,57},
                  {var,{481,57},'DstA'},
                  {var,{481,64},'ListB'}}}}]},
             {var,{481,72},'Update0'}},
            {nil,{481,79}}},
           {var,{480,20},'_'}]},
         {var,{482,29},'BlkB'}}]},
      {var,{482,37},'Bs'}}}],
   [],
   [{debug_line,483,193},
    {match,
     {483,5},
     {var,{483,5},'Spec'},
     {'case',
      {483,12},
      {op,{483,23},'=:=',{var,{483,17},'SpecA'},{var,{483,27},'SpecB'}},
      [{clause,
        {484,16},
        [{atom,{484,16},true}],
        [],
        [{debug_line,484,194},{var,{484,24},'SpecA'}]},
       {clause,
        {485,16},
        [{atom,{485,16},false}],
        [],
        [{debug_line,485,195},
         {tuple,
          {485,25},
          [{atom,{485,25},b_literal},{atom,{485,40},copy}]}]}]}},
    {debug_line,487,196},
    {match,
     {487,5},
     {var,{487,5},'List'},
     {call,
      {487,12},
      {atom,{487,12},merge_update_record_lists},
      [{block,0,
        [{op,{487,44},'++',{var,{487,38},'ListA'},{var,{487,47},'ListB'}}]},
       {block,0,[{map,{487,54},[]}]}]}},
    {debug_line,488,197},
    {match,
     {488,5},
     {var,{488,5},'Update'},
     {block,
      {488,14},
      [{match,
        {488,28},
        {var,{488,28},rec22},
        {cons,
         {488,33},
         {var,{488,34},'Spec'},
         {cons,
          {488,40},
          {var,{488,40},'Size'},
          {cons,{488,46},{var,{488,46},'Src'},{var,{488,52},'List'}}}}},
       {match,{488,14},{var,{488,14},rec23},{var,{488,14},'Update0'}},
       {'case',
        {488,28},
        {var,{488,14},rec23},
        [{clause,
          {488,28},
          [{tuple,
            {488,28},
            [{atom,{488,28},b_set},
             {var,{488,28},'_'},
             {var,{488,28},'_'},
             {var,{488,28},'_'},
             {var,{488,28},'_'}]}],
          [],
          [{call,
            {488,28},
            {remote,
             {488,28},
             {atom,{488,28},erlang},
             {atom,{488,28},setelement}},
            [{integer,{488,28},5},
             {var,{488,14},rec23},
             {var,{488,28},rec22}]}]},
         {clause,
          [{generated,true},{location,{488,28}}],
          [{var,[{generated,true},{location,{488,28}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{488,28}}],
            {remote,
             [{generated,true},{location,{488,28}}],
             {atom,[{generated,true},{location,{488,28}}],erlang},
             {atom,[{generated,true},{location,{488,28}}],error}},
            [{tuple,
              [{generated,true},{location,{488,28}}],
              [{atom,[{generated,true},{location,{488,28}}],badrecord},
               {var,{488,14},rec23}]}]}]}]}]}},
    {debug_line,492,198},
    {cons,
     {492,5},
     {tuple,{492,6},[{var,{492,7},'LblA'},{var,{492,13},'BlkA'}]},
     {cons,
      {492,20},
      {tuple,
       {492,20},
       [{var,{492,21},'LblB'},
        {block,
         {492,27},
         [{match,
           {492,38},
           {var,{492,38},rec24},
           {cons,{492,41},{var,{492,42},'Update'},{nil,{492,48}}}},
          {match,{492,27},{var,{492,27},rec25},{var,{492,27},'BlkB'}},
          {'case',
           {492,38},
           {var,{492,27},rec25},
           [{clause,
             {492,38},
             [{tuple,
               {492,38},
               [{atom,{492,38},b_blk},
                {var,{492,38},'_'},
                {var,{492,38},'_'},
                {var,{492,38},'_'}]}],
             [],
             [{call,
               {492,38},
               {remote,
                {492,38},
                {atom,{492,38},erlang},
                {atom,{492,38},setelement}},
               [{integer,{492,38},3},
                {var,{492,27},rec25},
                {var,{492,38},rec24}]}]},
            {clause,
             [{generated,true},{location,{492,38}}],
             [{var,[{generated,true},{location,{492,38}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{492,38}}],
               {remote,
                [{generated,true},{location,{492,38}}],
                {atom,[{generated,true},{location,{492,38}}],erlang},
                {atom,[{generated,true},{location,{492,38}}],error}},
               [{tuple,
                 [{generated,true},{location,{492,38}}],
                 [{atom,[{generated,true},{location,{492,38}}],badrecord},
                  {var,{492,27},rec25}]}]}]}]}]}]},
      {call,
       {492,53},
       {atom,{492,53},merge_updates_bs},
       [{var,{492,70},'Bs'}]}}}]},
  {clause,
   {493,1},
   [{cons,
     {493,18},
     {tuple,
      {493,19},
      [{var,{493,20},'LblA'},
       {match,
        {494,20},
        {tuple,
         {494,20},
         [{atom,{494,20},b_blk},
          {var,{494,20},'_'},
          {match,
           {494,30},
           {cons,
            {494,30},
            {tuple,
             {494,31},
             [{atom,{494,31},b_set},
              {var,{494,31},'_'},
              {var,{494,31},'_'},
              {atom,{494,41},update_record},
              {var,{494,31},'_'}]},
            {nil,{494,55}}},
           {var,{494,57},'IsA'}},
          {tuple,
           {495,32},
           [{atom,{495,32},b_br},
            {var,{495,32},'_'},
            {tuple,{495,43},[{atom,{495,43},b_literal},{atom,{495,58},true}]},
            {var,{496,43},'LblB'},
            {var,{495,32},'_'}]}]},
        {var,{496,50},'BlkA'}}]},
     {cons,
      {497,19},
      {tuple,
       {497,19},
       [{var,{497,20},'LblB'},
        {match,
         {498,20},
         {tuple,
          {498,20},
          [{atom,{498,20},b_blk},
           {var,{498,20},'_'},
           {match,
            {498,30},
            {cons,
             {498,30},
             {tuple,
              {498,31},
              [{atom,{498,31},b_set},
               {var,{498,31},'_'},
               {var,{498,31},'_'},
               {atom,{498,41},executable_line},
               {var,{498,31},'_'}]},
             {nil,{498,57}}},
            {var,{498,59},'IsB'}},
           {var,{498,20},'_'}]},
         {var,{498,64},'BlkB'}}]},
      {var,{498,72},'Bs0'}}}],
   [],
   [{debug_line,499,199},
    {match,
     {499,5},
     {var,{499,5},'Bs'},
     {cons,
      {499,10},
      {tuple,
       {499,11},
       [{var,{499,12},'LblB'},
        {block,
         {499,17},
         [{match,{499,17},{var,{499,17},rec26},{var,{499,17},'BlkB'}},
          {'case',
           {499,28},
           {var,{499,17},rec26},
           [{clause,
             {499,28},
             [{tuple,
               {499,28},
               [{atom,{499,28},b_blk},
                {var,{499,28},'_'},
                {var,{499,28},'_'},
                {var,{499,28},'_'}]}],
             [],
             [{call,
               {499,28},
               {remote,
                {499,28},
                {atom,{499,28},erlang},
                {atom,{499,28},setelement}},
               [{integer,{499,28},3},
                {var,{499,17},rec26},
                {var,{499,31},'IsA'}]}]},
            {clause,
             [{generated,true},{location,{499,28}}],
             [{var,[{generated,true},{location,{499,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{499,28}}],
               {remote,
                [{generated,true},{location,{499,28}}],
                {atom,[{generated,true},{location,{499,28}}],erlang},
                {atom,[{generated,true},{location,{499,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{499,28}}],
                 [{atom,[{generated,true},{location,{499,28}}],badrecord},
                  {var,{499,17},rec26}]}]}]}]}]}]},
      {var,{499,39},'Bs0'}}},
    {debug_line,500,200},
    {cons,
     {500,5},
     {tuple,
      {500,6},
      [{var,{500,7},'LblA'},
       {block,
        {500,12},
        [{match,{500,12},{var,{500,12},rec27},{var,{500,12},'BlkA'}},
         {'case',
          {500,23},
          {var,{500,12},rec27},
          [{clause,
            {500,23},
            [{tuple,
              {500,23},
              [{atom,{500,23},b_blk},
               {var,{500,23},'_'},
               {var,{500,23},'_'},
               {var,{500,23},'_'}]}],
            [],
            [{call,
              {500,23},
              {remote,
               {500,23},
               {atom,{500,23},erlang},
               {atom,{500,23},setelement}},
              [{integer,{500,23},3},
               {var,{500,12},rec27},
               {var,{500,26},'IsB'}]}]},
           {clause,
            [{generated,true},{location,{500,23}}],
            [{var,[{generated,true},{location,{500,23}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{500,23}}],
              {remote,
               [{generated,true},{location,{500,23}}],
               {atom,[{generated,true},{location,{500,23}}],erlang},
               {atom,[{generated,true},{location,{500,23}}],error}},
              [{tuple,
                [{generated,true},{location,{500,23}}],
                [{atom,[{generated,true},{location,{500,23}}],badrecord},
                 {var,{500,12},rec27}]}]}]}]}]}]},
     {call,{500,34},{atom,{500,34},merge_updates_bs},[{var,{500,51},'Bs'}]}}]},
  {clause,
   {501,1},
   [{cons,
     {501,18},
     {tuple,{501,19},[{var,{501,20},'LblA'},{var,{501,26},'BlkA'}]},
     {cons,
      {501,33},
      {tuple,{501,33},[{var,{501,34},'LblB'},{var,{501,40},'BlkB'}]},
      {var,{501,48},'Bs'}}}],
   [],
   [{debug_line,503,201},
    {'maybe',
     {503,5},
     [{debug_line,506,202},
      {maybe_match,
       {506,53},
       {tuple,
        {504,9},
        [{atom,{504,9},b_blk},
         {var,{504,9},'_'},
         {cons,
          {504,19},
          {tuple,
           {504,20},
           [{atom,{504,20},b_set},
            {var,{504,20},'_'},
            {var,{505,31},'UpdateDst'},
            {atom,{504,30},update_record},
            {cons,
             {506,32},
             {var,{506,33},'_'},
             {cons,
              {506,35},
              {var,{506,35},'_'},
              {cons,
               {506,37},
               {var,{506,37},'Dst'},
               {var,{506,41},'Updates'}}}}]},
          {nil,{506,50}}},
         {var,{504,9},'_'}]},
       {var,{506,56},'BlkB'}},
      {debug_line,509,203},
      {maybe_match,
       {509,39},
       {tuple,
        {507,9},
        [{atom,{507,9},b_blk},
         {var,{507,9},'_'},
         {match,
          {507,19},
          {cons,{507,19},{var,{507,20},'_'},{var,{507,22},'_'}},
          {var,{507,25},'Is'}},
         {tuple,
          {508,21},
          [{atom,{508,21},b_br},
           {var,{508,21},'_'},
           {tuple,{508,32},[{atom,{508,32},b_literal},{atom,{508,47},true}]},
           {var,{509,32},'LblB'},
           {var,{508,21},'_'}]}]},
       {var,{509,42},'BlkA'}},
      {debug_line,510,204},
      {maybe_match,
       {510,59},
       {match,
        {510,9},
        {tuple,
         {510,9},
         [{atom,{510,9},b_set},
          {var,{510,9},'_'},
          {var,{510,33},'Dst'},
          {atom,{510,19},put_tuple},
          {var,{510,42},'Args0'}]},
        {var,{510,49},'PutTuple0'}},
       {call,
        {510,62},
        {remote,{510,62},{atom,{510,62},lists},{atom,{510,62},last}},
        [{var,{510,67},'Is'}]}},
      {debug_line,511,205},
      {match,
       {511,9},
       {var,{511,9},'Args'},
       {call,
        {511,16},
        {atom,{511,16},merge_tuple_update},
        [{var,{511,35},'Updates'},{var,{511,44},'Args0'}]}},
      {debug_line,512,206},
      {match,
       {512,9},
       {var,{512,9},'PutTuple'},
       {block,
        {512,20},
        [{match,{512,20},{var,{512,20},rec28},{var,{512,20},'PutTuple0'}},
         {'case',
          {512,36},
          {var,{512,20},rec28},
          [{clause,
            {512,36},
            [{tuple,
              {512,36},
              [{atom,{512,36},b_set},
               {var,{512,36},'_'},
               {var,{512,36},'_'},
               {var,{512,36},'_'},
               {var,{512,36},'_'}]}],
            [],
            [{call,
              {512,36},
              {remote,
               {512,36},
               {atom,{512,36},erlang},
               {atom,{512,36},setelement}},
              [{integer,{512,36},3},
               {call,
                {512,50},
                {remote,
                 {512,50},
                 {atom,{512,50},erlang},
                 {atom,{512,50},setelement}},
                [{integer,{512,50},5},
                 {var,{512,20},rec28},
                 {var,{512,55},'Args'}]},
               {var,{512,40},'UpdateDst'}]}]},
           {clause,
            [{generated,true},{location,{512,36}}],
            [{var,[{generated,true},{location,{512,36}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{512,36}}],
              {remote,
               [{generated,true},{location,{512,36}}],
               {atom,[{generated,true},{location,{512,36}}],erlang},
               {atom,[{generated,true},{location,{512,36}}],error}},
              [{tuple,
                [{generated,true},{location,{512,36}}],
                [{atom,[{generated,true},{location,{512,36}}],badrecord},
                 {var,{512,20},rec28}]}]}]}]}]}},
      {debug_line,513,207},
      {cons,
       {513,9},
       {tuple,{513,10},[{var,{513,11},'LblA'},{var,{513,17},'BlkA'}]},
       {cons,
        {513,24},
        {tuple,
         {513,24},
         [{var,{513,25},'LblB'},
          {block,
           {513,31},
           [{match,
             {513,42},
             {var,{513,42},rec29},
             {cons,{513,45},{var,{513,46},'PutTuple'},{nil,{513,54}}}},
            {match,{513,31},{var,{513,31},rec30},{var,{513,31},'BlkB'}},
            {'case',
             {513,42},
             {var,{513,31},rec30},
             [{clause,
               {513,42},
               [{tuple,
                 {513,42},
                 [{atom,{513,42},b_blk},
                  {var,{513,42},'_'},
                  {var,{513,42},'_'},
                  {var,{513,42},'_'}]}],
               [],
               [{call,
                 {513,42},
                 {remote,
                  {513,42},
                  {atom,{513,42},erlang},
                  {atom,{513,42},setelement}},
                 [{integer,{513,42},3},
                  {var,{513,31},rec30},
                  {var,{513,42},rec29}]}]},
              {clause,
               [{generated,true},{location,{513,42}}],
               [{var,[{generated,true},{location,{513,42}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{513,42}}],
                 {remote,
                  [{generated,true},{location,{513,42}}],
                  {atom,[{generated,true},{location,{513,42}}],erlang},
                  {atom,[{generated,true},{location,{513,42}}],error}},
                 [{tuple,
                   [{generated,true},{location,{513,42}}],
                   [{atom,[{generated,true},{location,{513,42}}],badrecord},
                    {var,{513,31},rec30}]}]}]}]}]}]},
        {call,
         {514,10},
         {atom,{514,10},merge_updates_bs},
         [{var,{514,27},'Bs'}]}}}],
     {'else',
      {515,5},
      [{clause,
        {516,9},
        [{var,{516,9},'_'}],
        [],
        [{debug_line,517,208},
         {cons,
          {517,13},
          {tuple,{517,14},[{var,{517,15},'LblA'},{var,{517,21},'BlkA'}]},
          {call,
           {517,29},
           {atom,{517,29},merge_updates_bs},
           [{block,0,
             [{cons,
               {517,46},
               {tuple,{517,47},[{var,{517,48},'LblB'},{var,{517,54},'BlkB'}]},
               {var,{517,62},'Bs'}}]}]}}]}]}}]},
  {clause,
   {519,1},
   [{cons,
     {519,18},
     {tuple,{519,19},[{var,{519,20},'Lbl'},{var,{519,25},'Blk'}]},
     {var,{519,32},'Bs'}}],
   [],
   [{debug_line,520,209},
    {cons,
     {520,5},
     {tuple,{520,6},[{var,{520,7},'Lbl'},{var,{520,12},'Blk'}]},
     {call,{520,19},{atom,{520,19},merge_updates_bs},[{var,{520,36},'Bs'}]}}]},
  {clause,{521,1},[{nil,{521,18}}],[],[{debug_line,522,210},{nil,{522,5}}]}]}.
{function,
 {524,1},
 merge_update_record_lists,2,
 [{clause,
   {524,1},
   [{var,{524,1},'_'},{var,{524,1},'_'}],
   [[{call,
      {524,1},
      {remote,{524,1},{atom,{524,1},fake},{atom,{524,1},is_beam_bif_info}},
      []}]],
   [{debug_line,524,211},{atom,{524,1},ignore}]},
  {clause,
   {524,1},
   [{cons,
     {524,27},
     {var,{524,28},'Index'},
     {cons,{524,35},{var,{524,35},'Value'},{var,{524,43},'List'}}},
    {var,{524,50},'Updates'}],
   [],
   [{debug_line,525,212},
    {call,
     {525,5},
     {atom,{525,5},merge_update_record_lists},
     [{var,{525,31},'List'},
      {block,0,
       [{map,
         {525,44},
         {var,{525,37},'Updates'},
         [{map_field_assoc,
           {525,53},
           {var,{525,47},'Index'},
           {var,{525,56},'Value'}}]}]}]}]},
  {clause,
   {526,1},
   [{nil,{526,27}},{var,{526,31},'Updates'}],
   [],
   [{debug_line,527,213},
    {call,
     {527,5},
     {remote,{527,9},{atom,{527,5},maps},{atom,{527,10},fold}},
     [{block,0,
       [{'fun',
         {527,15},
         {clauses,
          [{clause,
            {527,18},
            [{var,{527,19},'K'},{var,{527,22},'V'},{var,{527,25},'Acc'}],
            [],
            [{debug_line,528,214},
             {cons,
              {528,23},
              {var,{528,24},'K'},
              {cons,{528,27},{var,{528,27},'V'},{var,{528,31},'Acc'}}}]}]}}]},
      {nil,{529,20}},
      {block,0,
       [{debug_line,529,215},
        {call,
         {529,24},
         {remote,{529,28},{atom,{529,24},maps},{atom,{529,29},iterator}},
         [{var,{529,38},'Updates'},{atom,{529,47},reversed}]}]}]}]}]}.
{function,
    {531,1},
    merge_tuple_update,2,
    [{clause,
         {531,1},
         [{var,{531,1},'_'},{var,{531,1},'_'}],
         [[{call,
               {531,1},
               {remote,
                   {531,1},
                   {atom,{531,1},fake},
                   {atom,{531,1},is_beam_bif_info}},
               []}]],
         [{debug_line,531,216},{atom,{531,1},ignore}]},
     {clause,
         {531,1},
         [{var,{531,20},'Updates'},{var,{531,29},'Args'}],
         [],
         [{debug_line,532,217},
          {call,
              {532,5},
              {atom,{532,5},merge_tuple_update_1},
              [{var,{532,26},'Updates'},
               {block,0,
                   [{call,
                        {532,35},
                        {remote,
                            {532,35},
                            {atom,{532,35},erlang},
                            {atom,{532,35},list_to_tuple}},
                        [{var,{532,49},'Args'}]}]}]}]}]}.
{function,
    {534,1},
    merge_tuple_update_1,2,
    [{clause,
         {534,1},
         [{var,{534,1},'_'},{var,{534,1},'_'}],
         [[{call,
               {534,1},
               {remote,
                   {534,1},
                   {atom,{534,1},fake},
                   {atom,{534,1},is_beam_bif_info}},
               []}]],
         [{debug_line,534,218},{atom,{534,1},ignore}]},
     {clause,
         {534,1},
         [{cons,
              {534,22},
              {tuple,
                  {534,23},
                  [{atom,{534,23},b_literal},{var,{534,38},'Position'}]},
              {cons,{534,49},{var,{534,49},'Val'},{var,{534,55},'Updates'}}},
          {var,{534,65},'Tuple0'}],
         [],
         [{debug_line,535,219},
          {match,
              {535,5},
              {var,{535,5},'Tuple'},
              {call,
                  {535,13},
                  {remote,
                      {535,13},
                      {atom,{535,13},erlang},
                      {atom,{535,13},setelement}},
                  [{var,{535,24},'Position'},
                   {var,{535,34},'Tuple0'},
                   {var,{535,42},'Val'}]}},
          {debug_line,536,220},
          {call,
              {536,5},
              {atom,{536,5},merge_tuple_update_1},
              [{var,{536,26},'Updates'},{var,{536,35},'Tuple'}]}]},
     {clause,
         {537,1},
         [{nil,{537,22}},{var,{537,26},'Tuple'}],
         [],
         [{debug_line,538,221},
          {call,
              {538,5},
              {remote,
                  {538,5},
                  {atom,{538,5},erlang},
                  {atom,{538,5},tuple_to_list}},
              [{var,{538,19},'Tuple'}]}]}]}.
{function,
 {550,1},
 ssa_opt_split_blocks,1,
 [{clause,
   {550,1},
   [{var,{550,1},'_'}],
   [[{call,
      {550,1},
      {remote,{550,1},{atom,{550,1},fake},{atom,{550,1},is_beam_bif_info}},
      []}]],
   [{debug_line,550,222},{atom,{550,1},ignore}]},
  {clause,
   {550,1},
   [{tuple,
     {550,22},
     [{match,
       {550,23},
       {tuple,
        {550,23},
        [{atom,{550,23},opt_st},
         {var,{550,35},'Blocks0'},
         {var,{550,23},'_'},
         {var,{550,47},'Count0'},
         {var,{550,23},'_'}]},
       {var,{550,55},'St'}},
      {var,{550,59},'FuncDb'}]}],
   [],
   [{debug_line,551,223},
    {match,
     {551,5},
     {var,{551,5},'P'},
     {'fun',
      {551,9},
      {clauses,
       [{clause,
         {551,12},
         [{tuple,
           {551,13},
           [{atom,{551,13},b_set},
            {var,{551,13},'_'},
            {var,{551,13},'_'},
            {tuple,{551,23},[{atom,{551,24},bif},{atom,{551,28},element}]},
            {var,{551,13},'_'}]}],
         [],
         [{atom,{551,42},true}]},
        {clause,
         {552,12},
         [{tuple,
           {552,13},
           [{atom,{552,13},b_set},
            {var,{552,13},'_'},
            {var,{552,13},'_'},
            {atom,{552,23},call},
            {var,{552,13},'_'}]}],
         [],
         [{debug_line,552,224},{atom,{552,33},true}]},
        {clause,
         {553,12},
         [{tuple,
           {553,13},
           [{atom,{553,13},b_set},
            {var,{553,13},'_'},
            {var,{553,13},'_'},
            {atom,{553,23},bs_init_writable},
            {var,{553,13},'_'}]}],
         [],
         [{debug_line,553,225},{atom,{553,45},true}]},
        {clause,
         {554,12},
         [{tuple,
           {554,13},
           [{atom,{554,13},b_set},
            {var,{554,13},'_'},
            {var,{554,13},'_'},
            {atom,{554,23},make_fun},
            {var,{554,13},'_'}]}],
         [],
         [{debug_line,554,226},{atom,{554,37},true}]},
        {clause,
         {555,12},
         [{var,{555,13},'_'}],
         [],
         [{debug_line,555,227},{atom,{555,19},false}]}]}}},
    {debug_line,557,228},
    {match,
     {557,5},
     {var,{557,5},'RPO'},
     {call,
      {557,11},
      {remote,{557,19},{atom,{557,11},beam_ssa},{atom,{557,20},rpo}},
      [{var,{557,24},'Blocks0'}]}},
    {debug_line,558,229},
    {match,
     {558,5},
     {tuple,{558,5},[{var,{558,6},'Blocks'},{var,{558,13},'Count'}]},
     {call,
      {558,22},
      {remote,
       {558,30},
       {atom,{558,22},beam_ssa},
       {atom,{558,31},split_blocks_before}},
      [{var,{558,51},'RPO'},
       {var,{558,56},'P'},
       {var,{558,59},'Blocks0'},
       {var,{558,68},'Count0'}]}},
    {debug_line,559,230},
    {tuple,
     {559,5},
     [{block,
       {559,6},
       [{match,{559,6},{var,{559,6},rec31},{var,{559,6},'St'}},
        {'case',
         {559,16},
         {var,{559,6},rec31},
         [{clause,
           {559,16},
           [{tuple,
             {559,16},
             [{atom,{559,16},opt_st},
              {var,{559,16},'_'},
              {var,{559,16},'_'},
              {var,{559,16},'_'},
              {var,{559,16},'_'}]}],
           [],
           [{call,
             {559,16},
             {remote,
              {559,16},
              {atom,{559,16},erlang},
              {atom,{559,16},setelement}},
             [{integer,{559,16},2},
              {call,
               {559,27},
               {remote,
                {559,27},
                {atom,{559,27},erlang},
                {atom,{559,27},setelement}},
               [{integer,{559,27},4},
                {var,{559,6},rec31},
                {var,{559,31},'Count'}]},
              {var,{559,20},'Blocks'}]}]},
          {clause,
           [{generated,true},{location,{559,16}}],
           [{var,[{generated,true},{location,{559,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{559,16}}],
             {remote,
              [{generated,true},{location,{559,16}}],
              {atom,[{generated,true},{location,{559,16}}],erlang},
              {atom,[{generated,true},{location,{559,16}}],error}},
             [{tuple,
               [{generated,true},{location,{559,16}}],
               [{atom,[{generated,true},{location,{559,16}}],badrecord},
                {var,{559,6},rec31}]}]}]}]}]},
      {var,{559,39},'FuncDb'}]}]}]}.
{function,
 {583,1},
 ssa_opt_coalesce_phis,1,
 [{clause,
   {583,1},
   [{var,{583,1},'_'}],
   [[{call,
      {583,1},
      {remote,{583,1},{atom,{583,1},fake},{atom,{583,1},is_beam_bif_info}},
      []}]],
   [{debug_line,583,231},{atom,{583,1},ignore}]},
  {clause,
   {583,1},
   [{tuple,
     {583,23},
     [{match,
       {583,24},
       {tuple,
        {583,24},
        [{atom,{583,24},opt_st},
         {var,{583,36},'Blocks0'},
         {var,{583,24},'_'},
         {var,{583,24},'_'},
         {var,{583,24},'_'}]},
       {var,{583,45},'St'}},
      {var,{583,49},'FuncDb'}]}],
   [[{call,
      {583,63},
      {remote,{583,63},{atom,{583,63},erlang},{atom,{583,63},is_map}},
      [{var,{583,70},'Blocks0'}]}]],
   [{debug_line,584,232},
    {match,
     {584,5},
     {var,{584,5},'Ls'},
     {call,
      {584,10},
      {remote,{584,18},{atom,{584,10},beam_ssa},{atom,{584,19},rpo}},
      [{var,{584,23},'Blocks0'}]}},
    {debug_line,585,233},
    {match,
     {585,5},
     {var,{585,5},'Blocks'},
     {call,
      {585,14},
      {atom,{585,14},c_phis_1},
      [{var,{585,23},'Ls'},{var,{585,27},'Blocks0'}]}},
    {debug_line,586,234},
    {tuple,
     {586,5},
     [{block,
       {586,6},
       [{match,{586,6},{var,{586,6},rec32},{var,{586,6},'St'}},
        {'case',
         {586,16},
         {var,{586,6},rec32},
         [{clause,
           {586,16},
           [{tuple,
             {586,16},
             [{atom,{586,16},opt_st},
              {var,{586,16},'_'},
              {var,{586,16},'_'},
              {var,{586,16},'_'},
              {var,{586,16},'_'}]}],
           [],
           [{call,
             {586,16},
             {remote,
              {586,16},
              {atom,{586,16},erlang},
              {atom,{586,16},setelement}},
             [{integer,{586,16},2},
              {var,{586,6},rec32},
              {var,{586,20},'Blocks'}]}]},
          {clause,
           [{generated,true},{location,{586,16}}],
           [{var,[{generated,true},{location,{586,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{586,16}}],
             {remote,
              [{generated,true},{location,{586,16}}],
              {atom,[{generated,true},{location,{586,16}}],erlang},
              {atom,[{generated,true},{location,{586,16}}],error}},
             [{tuple,
               [{generated,true},{location,{586,16}}],
               [{atom,[{generated,true},{location,{586,16}}],badrecord},
                {var,{586,6},rec32}]}]}]}]}]},
      {var,{586,29},'FuncDb'}]}]}]}.
{function,
    {588,1},
    c_phis_1,2,
    [{clause,
         {588,1},
         [{var,{588,1},'_'},{var,{588,1},'_'}],
         [[{call,
               {588,1},
               {remote,
                   {588,1},
                   {atom,{588,1},fake},
                   {atom,{588,1},is_beam_bif_info}},
               []}]],
         [{debug_line,588,235},{atom,{588,1},ignore}]},
     {clause,
         {588,1},
         [{cons,{588,10},{var,{588,11},'L'},{var,{588,13},'Ls'}},
          {var,{588,18},'Blocks0'}],
         [],
         [{debug_line,589,236},
          {'case',
              {589,5},
              {call,
                  {589,10},
                  {remote,
                      {589,10},
                      {atom,{589,10},erlang},
                      {atom,{589,10},map_get}},
                  [{var,{589,18},'L'},{var,{589,21},'Blocks0'}]},
              [{clause,
                   {590,9},
                   [{match,
                        {590,9},
                        {tuple,
                            {590,9},
                            [{atom,{590,9},b_blk},
                             {var,{590,9},'_'},
                             {cons,
                                 {590,19},
                                 {tuple,
                                     {590,20},
                                     [{atom,{590,20},b_set},
                                      {var,{590,20},'_'},
                                      {var,{590,20},'_'},
                                      {atom,{590,30},phi},
                                      {var,{590,20},'_'}]},
                                 {var,{590,35},'_'}},
                             {var,{590,9},'_'}]},
                        {var,{590,39},'Blk'}}],
                   [],
                   [{debug_line,591,237},
                    {match,
                        {591,13},
                        {var,{591,13},'Blocks'},
                        {call,
                            {591,22},
                            {atom,{591,22},c_phis_2},
                            [{var,{591,31},'L'},
                             {var,{591,34},'Blk'},
                             {var,{591,39},'Blocks0'}]}},
                    {debug_line,592,238},
                    {call,
                        {592,13},
                        {atom,{592,13},c_phis_1},
                        [{var,{592,22},'Ls'},{var,{592,26},'Blocks'}]}]},
               {clause,
                   {593,9},
                   [{tuple,
                        {593,9},
                        [{atom,{593,9},b_blk},
                         {var,{593,9},'_'},
                         {var,{593,9},'_'},
                         {var,{593,9},'_'}]}],
                   [],
                   [{debug_line,594,239},
                    {call,
                        {594,13},
                        {atom,{594,13},c_phis_1},
                        [{var,{594,22},'Ls'},{var,{594,26},'Blocks0'}]}]}]}]},
     {clause,
         {596,1},
         [{nil,{596,10}},{var,{596,14},'Blocks'}],
         [],
         [{debug_line,596,240},{var,{596,25},'Blocks'}]}]}.
{function,
 {598,1},
 c_phis_2,3,
 [{clause,
   {598,1},
   [{var,{598,1},'_'},{var,{598,1},'_'},{var,{598,1},'_'}],
   [[{call,
      {598,1},
      {remote,{598,1},{atom,{598,1},fake},{atom,{598,1},is_beam_bif_info}},
      []}]],
   [{debug_line,598,241},{atom,{598,1},ignore}]},
  {clause,
   {598,1},
   [{var,{598,10},'L'},
    {match,
     {598,13},
     {tuple,
      {598,13},
      [{atom,{598,13},b_blk},
       {var,{598,13},'_'},
       {var,{598,23},'Is0'},
       {var,{598,13},'_'}]},
     {var,{598,28},'Blk0'}},
    {var,{598,34},'Blocks0'}],
   [],
   [{debug_line,599,242},
    {'case',
     {599,5},
     {call,
      {599,10},
      {atom,{599,10},c_phis_args},
      [{var,{599,22},'Is0'},{var,{599,27},'Blocks0'}]},
     [{clause,
       {600,9},
       [{atom,{600,9},none}],
       [],
       [{debug_line,601,243},{var,{601,13},'Blocks0'}]},
      {clause,
       {602,9},
       [{match,
         {602,9},
         {tuple,
          {602,9},
          [{var,{602,10},'_'},{var,{602,12},'_'},{var,{602,14},'Preds'}]},
         {var,{602,21},'Info'}}],
       [],
       [{debug_line,603,244},
        {match,
         {603,13},
         {var,{603,13},'Is'},
         {call,
          {603,18},
          {atom,{603,18},c_rewrite_phis},
          [{var,{603,33},'Is0'},{var,{603,38},'Info'}]}},
        {debug_line,604,245},
        {match,
         {604,13},
         {var,{604,13},'Blk'},
         {block,
          {604,19},
          [{match,{604,19},{var,{604,19},rec33},{var,{604,19},'Blk0'}},
           {'case',
            {604,30},
            {var,{604,19},rec33},
            [{clause,
              {604,30},
              [{tuple,
                {604,30},
                [{atom,{604,30},b_blk},
                 {var,{604,30},'_'},
                 {var,{604,30},'_'},
                 {var,{604,30},'_'}]}],
              [],
              [{call,
                {604,30},
                {remote,
                 {604,30},
                 {atom,{604,30},erlang},
                 {atom,{604,30},setelement}},
                [{integer,{604,30},3},
                 {var,{604,19},rec33},
                 {var,{604,33},'Is'}]}]},
             {clause,
              [{generated,true},{location,{604,30}}],
              [{var,[{generated,true},{location,{604,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{604,30}}],
                {remote,
                 [{generated,true},{location,{604,30}}],
                 {atom,[{generated,true},{location,{604,30}}],erlang},
                 {atom,[{generated,true},{location,{604,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{604,30}}],
                  [{atom,[{generated,true},{location,{604,30}}],badrecord},
                   {var,{604,19},rec33}]}]}]}]}]}},
        {debug_line,605,246},
        {match,
         {605,13},
         {var,{605,13},'Blocks'},
         {map,
          {605,29},
          {var,{605,22},'Blocks0'},
          [{map_field_exact,
            {605,32},
            {var,{605,31},'L'},
            {var,{605,34},'Blk'}}]}},
        {debug_line,606,247},
        {call,
         {606,13},
         {atom,{606,13},c_fix_branches},
         [{var,{606,28},'Preds'},
          {var,{606,35},'L'},
          {var,{606,38},'Blocks'}]}]}]}]}]}.
{function,
    {609,1},
    c_phis_args,2,
    [{clause,
         {609,1},
         [{var,{609,1},'_'},{var,{609,1},'_'}],
         [[{call,
               {609,1},
               {remote,
                   {609,1},
                   {atom,{609,1},fake},
                   {atom,{609,1},is_beam_bif_info}},
               []}]],
         [{debug_line,609,248},{atom,{609,1},ignore}]},
     {clause,
         {609,1},
         [{cons,
              {609,13},
              {tuple,
                  {609,14},
                  [{atom,{609,14},b_set},
                   {var,{609,14},'_'},
                   {var,{609,14},'_'},
                   {atom,{609,24},phi},
                   {var,{609,33},'Args0'}]},
              {var,{609,40},'Is'}},
          {var,{609,45},'Blocks'}],
         [],
         [{debug_line,610,249},
          {'case',
              {610,5},
              {call,
                  {610,10},
                  {atom,{610,10},c_phis_args_1},
                  [{var,{610,24},'Args0'},{var,{610,31},'Blocks'}]},
              [{clause,
                   {611,9},
                   [{atom,{611,9},none}],
                   [],
                   [{debug_line,612,250},
                    {call,
                        {612,13},
                        {atom,{612,13},c_phis_args},
                        [{var,{612,25},'Is'},{var,{612,29},'Blocks'}]}]},
               {clause,
                   {613,9},
                   [{var,{613,9},'Res'}],
                   [],
                   [{debug_line,614,251},{var,{614,13},'Res'}]}]}]},
     {clause,
         {616,1},
         [{var,{616,13},'_'},{var,{616,16},'_Blocks'}],
         [],
         [{debug_line,616,252},{atom,{616,28},none}]}]}.
{function,
    {618,1},
    c_phis_args_1,2,
    [{clause,
         {618,1},
         [{var,{618,1},'_'},{var,{618,1},'_'}],
         [[{call,
               {618,1},
               {remote,
                   {618,1},
                   {atom,{618,1},fake},
                   {atom,{618,1},is_beam_bif_info}},
               []}]],
         [{debug_line,618,253},{atom,{618,1},ignore}]},
     {clause,
         {618,1},
         [{cons,
              {618,15},
              {tuple,{618,16},[{var,{618,17},'Var'},{var,{618,21},'Pred'}]},
              {var,{618,27},'As'}},
          {var,{618,32},'Blocks'}],
         [],
         [{debug_line,619,254},
          {'case',
              {619,5},
              {call,
                  {619,10},
                  {atom,{619,10},c_get_pred_vars},
                  [{var,{619,26},'Var'},
                   {var,{619,31},'Pred'},
                   {var,{619,37},'Blocks'}]},
              [{clause,
                   {620,9},
                   [{atom,{620,9},none}],
                   [],
                   [{debug_line,621,255},
                    {call,
                        {621,13},
                        {atom,{621,13},c_phis_args_1},
                        [{var,{621,27},'As'},{var,{621,31},'Blocks'}]}]},
               {clause,
                   {622,9},
                   [{var,{622,9},'Result'}],
                   [],
                   [{debug_line,623,256},{var,{623,13},'Result'}]}]}]},
     {clause,
         {625,1},
         [{nil,{625,15}},{var,{625,19},'_Blocks'}],
         [],
         [{debug_line,625,257},{atom,{625,31},none}]}]}.
{function,
    {627,1},
    c_get_pred_vars,3,
    [{clause,
         {627,1},
         [{var,{627,1},'_'},{var,{627,1},'_'},{var,{627,1},'_'}],
         [[{call,
               {627,1},
               {remote,
                   {627,1},
                   {atom,{627,1},fake},
                   {atom,{627,1},is_beam_bif_info}},
               []}]],
         [{debug_line,627,258},{atom,{627,1},ignore}]},
     {clause,
         {627,1},
         [{var,{627,17},'Var'},{var,{627,22},'Pred'},{var,{627,28},'Blocks'}],
         [],
         [{debug_line,628,259},
          {'case',
              {628,5},
              {call,
                  {628,10},
                  {remote,
                      {628,10},
                      {atom,{628,10},erlang},
                      {atom,{628,10},map_get}},
                  [{var,{628,18},'Pred'},{var,{628,24},'Blocks'}]},
              [{clause,
                   {629,9},
                   [{tuple,
                        {629,9},
                        [{atom,{629,9},b_blk},
                         {var,{629,9},'_'},
                         {cons,
                             {629,19},
                             {tuple,
                                 {629,20},
                                 [{atom,{629,20},b_set},
                                  {var,{629,20},'_'},
                                  {var,{629,38},'Var'},
                                  {atom,{629,30},phi},
                                  {var,{629,47},'Args'}]},
                             {nil,{629,52}}},
                         {var,{629,9},'_'}]}],
                   [],
                   [{debug_line,630,260},
                    {tuple,
                        {630,13},
                        [{var,{630,14},'Var'},
                         {var,{630,18},'Pred'},
                         {var,{630,23},'Args'}]}]},
               {clause,
                   {631,9},
                   [{tuple,
                        {631,9},
                        [{atom,{631,9},b_blk},
                         {var,{631,9},'_'},
                         {var,{631,9},'_'},
                         {var,{631,9},'_'}]}],
                   [],
                   [{debug_line,632,261},{atom,{632,13},none}]}]}]}]}.
{function,
 {635,1},
 c_rewrite_phis,2,
 [{clause,
   {635,1},
   [{var,{635,1},'_'},{var,{635,1},'_'}],
   [[{call,
      {635,1},
      {remote,{635,1},{atom,{635,1},fake},{atom,{635,1},is_beam_bif_info}},
      []}]],
   [{debug_line,635,262},{atom,{635,1},ignore}]},
  {clause,
   {635,1},
   [{cons,
     {635,16},
     {match,
      {635,17},
      {tuple,
       {635,17},
       [{atom,{635,17},b_set},
        {var,{635,17},'_'},
        {var,{635,17},'_'},
        {atom,{635,27},phi},
        {var,{635,36},'Args0'}]},
      {var,{635,43},'I'}},
     {var,{635,45},'Is'}},
    {var,{635,50},'Info'}],
   [],
   [{debug_line,636,263},
    {match,
     {636,5},
     {var,{636,5},'Args'},
     {call,
      {636,12},
      {atom,{636,12},c_rewrite_phi},
      [{var,{636,26},'Args0'},{var,{636,33},'Info'}]}},
    {debug_line,637,264},
    {cons,
     {637,5},
     {block,
      {637,6},
      [{match,{637,6},{var,{637,6},rec34},{var,{637,6},'I'}},
       {'case',
        {637,14},
        {var,{637,6},rec34},
        [{clause,
          {637,14},
          [{tuple,
            {637,14},
            [{atom,{637,14},b_set},
             {var,{637,14},'_'},
             {var,{637,14},'_'},
             {var,{637,14},'_'},
             {var,{637,14},'_'}]}],
          [],
          [{call,
            {637,14},
            {remote,
             {637,14},
             {atom,{637,14},erlang},
             {atom,{637,14},setelement}},
            [{integer,{637,14},5},
             {var,{637,6},rec34},
             {var,{637,19},'Args'}]}]},
         {clause,
          [{generated,true},{location,{637,14}}],
          [{var,[{generated,true},{location,{637,14}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{637,14}}],
            {remote,
             [{generated,true},{location,{637,14}}],
             {atom,[{generated,true},{location,{637,14}}],erlang},
             {atom,[{generated,true},{location,{637,14}}],error}},
            [{tuple,
              [{generated,true},{location,{637,14}}],
              [{atom,[{generated,true},{location,{637,14}}],badrecord},
               {var,{637,6},rec34}]}]}]}]}]},
     {call,
      {637,25},
      {atom,{637,25},c_rewrite_phis},
      [{var,{637,40},'Is'},{var,{637,44},'Info'}]}}]},
  {clause,
   {638,1},
   [{var,{638,16},'Is'},{var,{638,20},'_Info'}],
   [],
   [{debug_line,638,265},{var,{638,30},'Is'}]}]}.
{function,
    {640,1},
    c_rewrite_phi,2,
    [{clause,
         {640,1},
         [{var,{640,1},'_'},{var,{640,1},'_'}],
         [[{call,
               {640,1},
               {remote,
                   {640,1},
                   {atom,{640,1},fake},
                   {atom,{640,1},is_beam_bif_info}},
               []}]],
         [{debug_line,640,266},{atom,{640,1},ignore}]},
     {clause,
         {640,1},
         [{cons,
              {640,15},
              {tuple,{640,16},[{var,{640,17},'Var'},{var,{640,21},'Pred'}]},
              {var,{640,27},'As'}},
          {tuple,
              {640,32},
              [{var,{640,33},'Var'},
               {var,{640,37},'Pred'},
               {var,{640,42},'Values'}]}],
         [],
         [{debug_line,641,267},
          {op,{641,12},'++',{var,{641,5},'Values'},{var,{641,15},'As'}}]},
     {clause,
         {642,1},
         [{cons,
              {642,15},
              {tuple,{642,16},[{var,{642,17},'Value'},{var,{642,23},'Pred'}]},
              {var,{642,29},'As'}},
          {tuple,
              {642,34},
              [{var,{642,35},'_'},
               {var,{642,37},'Pred'},
               {var,{642,42},'Values'}]}],
         [],
         [{debug_line,643,268},
          {op,{643,37},
              '++',
              {lc,{643,5},
                  {block,0,
                      [{tuple,
                           {643,6},
                           [{var,{643,7},'Value'},{var,{643,13},'P'}]}]},
                  [{block,0,[{atom,{643,29},true}]},
                   {generate_strict,
                       {643,25},
                       {tuple,
                           {643,19},
                           [{var,{643,20},'_'},{var,{643,22},'P'}]},
                       {var,{643,29},'Values'}}]},
              {var,{643,40},'As'}}]},
     {clause,
         {644,1},
         [{cons,{644,15},{var,{644,16},'A'},{var,{644,18},'As'}},
          {var,{644,23},'Info'}],
         [],
         [{debug_line,645,269},
          {cons,
              {645,5},
              {var,{645,6},'A'},
              {call,
                  {645,8},
                  {atom,{645,8},c_rewrite_phi},
                  [{var,{645,22},'As'},{var,{645,26},'Info'}]}}]},
     {clause,
         {646,1},
         [{nil,{646,15}},{var,{646,19},'_Info'}],
         [],
         [{debug_line,646,270},{nil,{646,29}}]}]}.
{function,
 {648,1},
 c_fix_branches,3,
 [{clause,
   {648,1},
   [{var,{648,1},'_'},{var,{648,1},'_'},{var,{648,1},'_'}],
   [[{call,
      {648,1},
      {remote,{648,1},{atom,{648,1},fake},{atom,{648,1},is_beam_bif_info}},
      []}]],
   [{debug_line,648,271},{atom,{648,1},ignore}]},
  {clause,
   {648,1},
   [{cons,
     {648,16},
     {tuple,{648,17},[{var,{648,18},'_'},{var,{648,20},'Pred'}]},
     {var,{648,26},'As'}},
    {var,{648,31},'L'},
    {var,{648,34},'Blocks0'}],
   [],
   [{debug_line,649,272},
    {match,
     {649,5},
     {tuple,
      {649,5},
      [{atom,{649,5},b_blk},
       {var,{649,5},'_'},
       {var,{649,5},'_'},
       {var,{649,17},'Last0'}]},
     {match,
      {649,26},
      {var,{649,26},'Blk0'},
      {call,
       {649,33},
       {remote,{649,33},{atom,{649,33},erlang},{atom,{649,33},map_get}},
       [{var,{649,41},'Pred'},{var,{649,47},'Blocks0'}]}}},
    {debug_line,650,273},
    {match,
     {650,5},
     {tuple,
      {650,5},
      [{atom,{650,5},b_br},
       {var,{650,5},'_'},
       {tuple,{650,16},[{atom,{650,16},b_literal},{atom,{650,31},true}]},
       {var,{650,5},'_'},
       {var,{650,5},'_'}]},
     {var,{650,40},'Last0'}},
    {debug_line,651,274},
    {match,
     {651,5},
     {var,{651,5},'Last'},
     {block,
      {651,12},
      [{match,
        {651,23},
        {var,{651,23},rec35},
        {tuple,{651,28},[{atom,{651,28},b_literal},{atom,{651,43},true}]}},
       {match,{651,12},{var,{651,12},rec36},{var,{651,12},'Last0'}},
       {'case',
        {651,23},
        {var,{651,12},rec36},
        [{clause,
          {651,23},
          [{tuple,
            {651,23},
            [{atom,{651,23},b_br},
             {var,{651,23},'_'},
             {var,{651,23},'_'},
             {var,{651,23},'_'},
             {var,{651,23},'_'}]}],
          [],
          [{call,
            {651,23},
            {remote,
             {651,23},
             {atom,{651,23},erlang},
             {atom,{651,23},setelement}},
            [{integer,{651,23},3},
             {call,
              {651,49},
              {remote,
               {651,49},
               {atom,{651,49},erlang},
               {atom,{651,49},setelement}},
              [{integer,{651,49},4},
               {call,
                {651,56},
                {remote,
                 {651,56},
                 {atom,{651,56},erlang},
                 {atom,{651,56},setelement}},
                [{integer,{651,56},5},
                 {var,{651,12},rec36},
                 {var,{651,61},'L'}]},
               {var,{651,54},'L'}]},
             {var,{651,23},rec35}]}]},
         {clause,
          [{generated,true},{location,{651,23}}],
          [{var,[{generated,true},{location,{651,23}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{651,23}}],
            {remote,
             [{generated,true},{location,{651,23}}],
             {atom,[{generated,true},{location,{651,23}}],erlang},
             {atom,[{generated,true},{location,{651,23}}],error}},
            [{tuple,
              [{generated,true},{location,{651,23}}],
              [{atom,[{generated,true},{location,{651,23}}],badrecord},
               {var,{651,12},rec36}]}]}]}]}]}},
    {debug_line,652,275},
    {match,
     {652,5},
     {var,{652,5},'Blk'},
     {block,
      {652,11},
      [{match,{652,11},{var,{652,11},rec37},{var,{652,11},'Blk0'}},
       {'case',
        {652,22},
        {var,{652,11},rec37},
        [{clause,
          {652,22},
          [{tuple,
            {652,22},
            [{atom,{652,22},b_blk},
             {var,{652,22},'_'},
             {var,{652,22},'_'},
             {var,{652,22},'_'}]}],
          [],
          [{call,
            {652,22},
            {remote,
             {652,22},
             {atom,{652,22},erlang},
             {atom,{652,22},setelement}},
            [{integer,{652,22},4},
             {var,{652,11},rec37},
             {var,{652,27},'Last'}]}]},
         {clause,
          [{generated,true},{location,{652,22}}],
          [{var,[{generated,true},{location,{652,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{652,22}}],
            {remote,
             [{generated,true},{location,{652,22}}],
             {atom,[{generated,true},{location,{652,22}}],erlang},
             {atom,[{generated,true},{location,{652,22}}],error}},
            [{tuple,
              [{generated,true},{location,{652,22}}],
              [{atom,[{generated,true},{location,{652,22}}],badrecord},
               {var,{652,11},rec37}]}]}]}]}]}},
    {debug_line,653,276},
    {match,
     {653,5},
     {var,{653,5},'Blocks'},
     {map,
      {653,21},
      {var,{653,14},'Blocks0'},
      [{map_field_exact,
        {653,27},
        {var,{653,23},'Pred'},
        {var,{653,29},'Blk'}}]}},
    {debug_line,654,277},
    {call,
     {654,5},
     {atom,{654,5},c_fix_branches},
     [{var,{654,20},'As'},{var,{654,24},'L'},{var,{654,27},'Blocks'}]}]},
  {clause,
   {655,1},
   [{nil,{655,16}},{var,{655,20},'_'},{var,{655,23},'Blocks'}],
   [],
   [{debug_line,655,278},{var,{655,34},'Blocks'}]}]}.
{function,
 {689,1},
 ssa_opt_tail_phis,1,
 [{clause,
   {689,1},
   [{var,{689,1},'_'}],
   [[{call,
      {689,1},
      {remote,{689,1},{atom,{689,1},fake},{atom,{689,1},is_beam_bif_info}},
      []}]],
   [{debug_line,689,279},{atom,{689,1},ignore}]},
  {clause,
   {689,1},
   [{tuple,
     {689,19},
     [{match,
       {689,20},
       {tuple,
        {689,20},
        [{atom,{689,20},opt_st},
         {var,{689,32},'SSA0'},
         {var,{689,20},'_'},
         {var,{689,41},'Count0'},
         {var,{689,20},'_'}]},
       {var,{689,49},'St'}},
      {var,{689,53},'FuncDb'}]}],
   [],
   [{debug_line,690,280},
    {match,
     {690,5},
     {tuple,{690,5},[{var,{690,6},'SSA'},{var,{690,10},'Count'}]},
     {call,
      {690,19},
      {atom,{690,19},opt_tail_phis},
      [{var,{690,33},'SSA0'},{var,{690,39},'Count0'}]}},
    {debug_line,691,281},
    {tuple,
     {691,5},
     [{block,
       {691,6},
       [{match,{691,6},{var,{691,6},rec38},{var,{691,6},'St'}},
        {'case',
         {691,16},
         {var,{691,6},rec38},
         [{clause,
           {691,16},
           [{tuple,
             {691,16},
             [{atom,{691,16},opt_st},
              {var,{691,16},'_'},
              {var,{691,16},'_'},
              {var,{691,16},'_'},
              {var,{691,16},'_'}]}],
           [],
           [{call,
             {691,16},
             {remote,
              {691,16},
              {atom,{691,16},erlang},
              {atom,{691,16},setelement}},
             [{integer,{691,16},2},
              {call,
               {691,24},
               {remote,
                {691,24},
                {atom,{691,24},erlang},
                {atom,{691,24},setelement}},
               [{integer,{691,24},4},
                {var,{691,6},rec38},
                {var,{691,28},'Count'}]},
              {var,{691,20},'SSA'}]}]},
          {clause,
           [{generated,true},{location,{691,16}}],
           [{var,[{generated,true},{location,{691,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{691,16}}],
             {remote,
              [{generated,true},{location,{691,16}}],
              {atom,[{generated,true},{location,{691,16}}],erlang},
              {atom,[{generated,true},{location,{691,16}}],error}},
             [{tuple,
               [{generated,true},{location,{691,16}}],
               [{atom,[{generated,true},{location,{691,16}}],badrecord},
                {var,{691,6},rec38}]}]}]}]}]},
      {var,{691,36},'FuncDb'}]}]}]}.
{function,
    {693,1},
    opt_tail_phis,2,
    [{clause,
         {693,1},
         [{var,{693,1},'_'},{var,{693,1},'_'}],
         [[{call,
               {693,1},
               {remote,
                   {693,1},
                   {atom,{693,1},fake},
                   {atom,{693,1},is_beam_bif_info}},
               []}]],
         [{debug_line,693,282},{atom,{693,1},ignore}]},
     {clause,
         {693,1},
         [{var,{693,15},'Blocks'},{var,{693,23},'Count'}],
         [[{call,
               {693,35},
               {remote,{693,35},{atom,{693,35},erlang},{atom,{693,35},is_map}},
               [{var,{693,42},'Blocks'}]}]],
         [{debug_line,694,283},
          {call,
              {694,5},
              {atom,{694,5},opt_tail_phis},
              [{block,0,
                   [{call,
                        {694,19},
                        {remote,
                            {694,23},
                            {atom,{694,19},maps},
                            {atom,{694,24},values}},
                        [{var,{694,31},'Blocks'}]}]},
               {var,{694,40},'Blocks'},
               {var,{694,48},'Count'}]}]},
     {clause,
         {695,1},
         [{var,{695,15},'Linear0'},{var,{695,24},'Count0'}],
         [[{call,
               {695,37},
               {remote,
                   {695,37},
                   {atom,{695,37},erlang},
                   {atom,{695,37},is_list}},
               [{var,{695,45},'Linear0'}]}]],
         [{debug_line,696,284},
          {match,
              {696,5},
              {var,{696,5},'Blocks0'},
              {call,
                  {696,15},
                  {remote,
                      {696,19},
                      {atom,{696,15},maps},
                      {atom,{696,20},from_list}},
                  [{var,{696,30},'Linear0'}]}},
          {debug_line,697,285},
          {match,
              {697,5},
              {tuple,{697,5},[{var,{697,6},'Blocks'},{var,{697,13},'Count'}]},
              {call,
                  {697,22},
                  {atom,{697,22},opt_tail_phis},
                  [{var,{697,36},'Blocks0'},{var,{697,45},'Count0'}]}},
          {debug_line,698,286},
          {tuple,
              {698,5},
              [{call,
                   {698,6},
                   {remote,
                       {698,14},
                       {atom,{698,6},beam_ssa},
                       {atom,{698,15},linearize}},
                   [{var,{698,25},'Blocks'}]},
               {var,{698,33},'Count'}]}]}]}.
{function,
 {700,1},
 opt_tail_phis,3,
 [{clause,
   {700,1},
   [{var,{700,1},'_'},{var,{700,1},'_'},{var,{700,1},'_'}],
   [[{call,
      {700,1},
      {remote,{700,1},{atom,{700,1},fake},{atom,{700,1},is_beam_bif_info}},
      []}]],
   [{debug_line,700,287},{atom,{700,1},ignore}]},
  {clause,
   {700,1},
   [{cons,
     {700,15},
     {tuple,
      {700,16},
      [{atom,{700,16},b_blk},
       {var,{700,16},'_'},
       {var,{700,26},'Is0'},
       {var,{700,35},'Last'}]},
     {var,{700,41},'Bs'}},
    {var,{700,46},'Blocks0'},
    {var,{700,55},'Count0'}],
   [],
   [{debug_line,701,288},
    {'case',
     {701,5},
     {tuple,{701,10},[{var,{701,11},'Is0'},{var,{701,15},'Last'}]},
     [{clause,
       {702,9},
       [{tuple,
         {702,9},
         [{cons,
           {702,10},
           {tuple,
            {702,11},
            [{atom,{702,11},b_set},
             {var,{702,11},'_'},
             {var,{702,11},'_'},
             {atom,{702,21},phi},
             {cons,
              {702,30},
              {var,{702,31},'_'},
              {cons,{702,33},{var,{702,33},'_'},{var,{702,35},'_'}}}]},
           {var,{702,39},'_'}},
          {match,
           {702,42},
           {tuple,
            {702,42},
            [{atom,{702,42},b_ret},
             {var,{702,42},'_'},
             {tuple,{702,53},[{atom,{702,53},b_var},{var,{702,53},'_'}]}]},
           {var,{702,63},'Ret'}}]}],
       [],
       [{debug_line,703,289},
        {match,
         {703,13},
         {tuple,{703,13},[{var,{703,14},'Phis'},{var,{703,19},'Is'}]},
         {call,
          {703,25},
          {remote,{703,25},{atom,{703,25},lists},{atom,{703,25},splitwith}},
          [{block,0,
            [{'fun',
              {703,35},
              {clauses,
               [{clause,
                 {703,38},
                 [{tuple,
                   {703,39},
                   [{atom,{703,39},b_set},
                    {var,{703,39},'_'},
                    {var,{703,39},'_'},
                    {var,{703,49},'Op'},
                    {var,{703,39},'_'}]}],
                 [],
                 [{op,
                   {703,60},
                   '=:=',
                   {var,{703,57},'Op'},
                   {atom,{703,64},phi}}]}]}}]},
           {var,{703,73},'Is0'}]}},
        {debug_line,704,290},
        {'case',
         {704,13},
         {call,
          {704,18},
          {atom,{704,18},suitable_tail_ops},
          [{var,{704,36},'Is'}]},
         [{clause,
           {705,17},
           [{atom,{705,17},true}],
           [],
           [{debug_line,706,291},
            {match,
             {706,21},
             {tuple,{706,21},[{var,{706,22},'Blocks'},{var,{706,29},'Count'}]},
             {call,
              {706,38},
              {atom,{706,38},opt_tail_phi},
              [{var,{706,51},'Phis'},
               {var,{706,57},'Is'},
               {var,{706,61},'Ret'},
               {var,{707,51},'Blocks0'},
               {var,{707,60},'Count0'}]}},
            {debug_line,708,292},
            {call,
             {708,21},
             {atom,{708,21},opt_tail_phis},
             [{var,{708,35},'Bs'},
              {var,{708,39},'Blocks'},
              {var,{708,47},'Count'}]}]},
          {clause,
           {709,17},
           [{atom,{709,17},false}],
           [],
           [{debug_line,710,293},
            {call,
             {710,21},
             {atom,{710,21},opt_tail_phis},
             [{var,{710,35},'Bs'},
              {var,{710,39},'Blocks0'},
              {var,{710,48},'Count0'}]}]}]}]},
      {clause,
       {712,9},
       [{tuple,{712,9},[{var,{712,10},'_'},{var,{712,12},'_'}]}],
       [],
       [{debug_line,713,294},
        {call,
         {713,13},
         {atom,{713,13},opt_tail_phis},
         [{var,{713,27},'Bs'},
          {var,{713,31},'Blocks0'},
          {var,{713,40},'Count0'}]}]}]}]},
  {clause,
   {715,1},
   [{nil,{715,15}},{var,{715,19},'Blocks'},{var,{715,27},'Count'}],
   [],
   [{debug_line,716,295},
    {tuple,{716,5},[{var,{716,6},'Blocks'},{var,{716,13},'Count'}]}]}]}.
{function,
 {718,1},
 opt_tail_phi,5,
 [{clause,
   {718,1},
   [{var,{718,1},'_'},
    {var,{718,1},'_'},
    {var,{718,1},'_'},
    {var,{718,1},'_'},
    {var,{718,1},'_'}],
   [[{call,
      {718,1},
      {remote,{718,1},{atom,{718,1},fake},{atom,{718,1},is_beam_bif_info}},
      []}]],
   [{debug_line,718,296},{atom,{718,1},ignore}]},
  {clause,
   {718,1},
   [{var,{718,14},'Phis0'},
    {var,{718,21},'Is'},
    {var,{718,25},'Ret'},
    {var,{718,30},'Blocks0'},
    {var,{718,39},'Count0'}],
   [],
   [{debug_line,719,297},
    {match,
     {719,5},
     {var,{719,5},'Phis'},
     {call,
      {719,12},
      {atom,{719,12},rel2fam},
      [{block,0,
        [{call,
          {719,20},
          {atom,{719,20},reduce_phis},
          [{var,{719,32},'Phis0'}]}]}]}},
    {debug_line,720,298},
    {match,
     {720,5},
     {tuple,
      {720,5},
      [{var,{720,6},'Blocks'},{var,{720,13},'Count'},{var,{720,19},'Cost'}]},
     {call,
      {721,9},
      {remote,{721,9},{atom,{721,9},lists},{atom,{721,9},foldl}},
      [{block,0,
        [{debug_line,721,299},
         {'fun',
          {721,15},
          {clauses,
           [{clause,
             {721,18},
             [{var,{721,19},'PhiArg'},{var,{721,27},'Acc'}],
             [],
             [{debug_line,722,300},
              {call,
               {722,23},
               {atom,{722,23},opt_tail_phi_arg},
               [{var,{722,40},'PhiArg'},
                {var,{722,48},'Is'},
                {var,{722,52},'Ret'},
                {var,{722,57},'Acc'}]}]}]}}]},
       {block,0,
        [{debug_line,723,301},
         {tuple,
          {723,20},
          [{var,{723,21},'Blocks0'},
           {var,{723,29},'Count0'},
           {integer,{723,36},0}]}]},
       {var,{723,40},'Phis'}]}},
    {debug_line,724,302},
    {match,
     {724,5},
     {var,{724,5},'MaxCost'},
     {op,
      {724,32},
      '+',
      {op,
       {724,28},
       '*',
       {call,
        {724,15},
        {remote,{724,15},{atom,{724,15},erlang},{atom,{724,15},length}},
        [{var,{724,22},'Phis'}]},
       {integer,{724,30},3}},
      {integer,{724,34},2}}},
    {debug_line,725,303},
    {'if',
     {725,5},
     [{clause,
       {726,9},
       [],
       [[{op,{726,14},'=<',{var,{726,9},'Cost'},{var,{726,17},'MaxCost'}}]],
       [{debug_line,730,304},
        {tuple,{730,13},[{var,{730,14},'Blocks'},{var,{730,21},'Count'}]}]},
      {clause,
       {731,9},
       [],
       [[{atom,{731,9},true}]],
       [{debug_line,733,305},
        {tuple,
         {733,13},
         [{var,{733,14},'Blocks0'},{var,{733,22},'Count0'}]}]}]}]}]}.
{function,
    {736,1},
    reduce_phis,1,
    [{clause,
         {736,1},
         [{var,{736,1},'_'}],
         [[{call,
               {736,1},
               {remote,
                   {736,1},
                   {atom,{736,1},fake},
                   {atom,{736,1},is_beam_bif_info}},
               []}]],
         [{debug_line,736,306},{atom,{736,1},ignore}]},
     {clause,
         {736,1},
         [{cons,
              {736,13},
              {tuple,
                  {736,14},
                  [{atom,{736,14},b_set},
                   {var,{736,14},'_'},
                   {var,{736,25},'PhiDst'},
                   {var,{736,14},'_'},
                   {var,{736,37},'PhiArgs'}]},
              {var,{736,46},'Is'}}],
         [],
         [{debug_line,737,307},
          {op,{737,47},
              '++',
              {lc,{737,5},
                  {block,0,
                      [{tuple,
                           {737,6},
                           [{var,{737,7},'L'},
                            {tuple,
                                {737,9},
                                [{var,{737,10},'PhiDst'},
                                 {var,{737,17},'Val'}]}]}]},
                  [{block,0,[{atom,{737,38},true}]},
                   {generate_strict,
                       {737,34},
                       {tuple,
                           {737,26},
                           [{var,{737,27},'Val'},{var,{737,31},'L'}]},
                       {var,{737,38},'PhiArgs'}}]},
              {call,
                  {737,50},
                  {atom,{737,50},reduce_phis},
                  [{var,{737,62},'Is'}]}}]},
     {clause,
         {738,1},
         [{nil,{738,13}}],
         [],
         [{debug_line,738,308},{nil,{738,20}}]}]}.
{function,
 {740,1},
 opt_tail_phi_arg,4,
 [{clause,
   {740,1},
   [{var,{740,1},'_'},{var,{740,1},'_'},{var,{740,1},'_'},{var,{740,1},'_'}],
   [[{call,
      {740,1},
      {remote,{740,1},{atom,{740,1},fake},{atom,{740,1},is_beam_bif_info}},
      []}]],
   [{debug_line,740,309},{atom,{740,1},ignore}]},
  {clause,
   {740,1},
   [{tuple,{740,18},[{var,{740,19},'PredL'},{var,{740,25},'Sub0'}]},
    {var,{740,32},'Is0'},
    {var,{740,37},'Ret0'},
    {tuple,
     {740,43},
     [{var,{740,44},'Blocks0'},
      {var,{740,52},'Count0'},
      {var,{740,59},'Cost0'}]}],
   [],
   [{debug_line,741,310},
    {match,
     {741,5},
     {var,{741,5},'Blk0'},
     {call,
      {741,12},
      {remote,{741,12},{atom,{741,12},erlang},{atom,{741,12},map_get}},
      [{var,{741,20},'PredL'},{var,{741,27},'Blocks0'}]}},
    {debug_line,742,311},
    {match,
     {742,5},
     {tuple,
      {742,5},
      [{atom,{742,5},b_blk},
       {var,{742,5},'_'},
       {var,{742,15},'IsPrefix'},
       {tuple,
        {742,29},
        [{atom,{742,29},b_br},
         {var,{742,29},'_'},
         {var,{742,29},'_'},
         {var,{742,40},'Next'},
         {var,{742,50},'Next'}]}]},
     {var,{742,59},'Blk0'}},
    {debug_line,743,312},
    {match,
     {743,5},
     {var,{743,5},'Sub1'},
     {call,
      {743,12},
      {remote,{743,16},{atom,{743,12},maps},{atom,{743,17},from_list}},
      [{var,{743,27},'Sub0'}]}},
    {debug_line,744,313},
    {match,
     {744,5},
     {tuple,
      {744,5},
      [{var,{744,6},'Is1'},{var,{744,10},'Count'},{var,{744,16},'Sub'}]},
     {call,
      {744,23},
      {atom,{744,23},new_names},
      [{var,{744,33},'Is0'},
       {var,{744,38},'Sub1'},
       {var,{744,44},'Count0'},
       {nil,{744,52}}]}},
    {debug_line,745,314},
    {match,
     {745,5},
     {var,{745,5},'Is2'},
     {lc,
      {745,11},
      {block,0,
       [{call,
         {745,12},
         {atom,{745,12},sub},
         [{var,{745,16},'I'},{var,{745,19},'Sub'}]}]},
      [{block,0,[{atom,{745,32},true}]},
       {generate,{745,29},{var,{745,27},'I'},{var,{745,32},'Is1'}}]}},
    {debug_line,746,315},
    {match,
     {746,5},
     {var,{746,5},'Cost'},
     {call,
      {746,12},
      {atom,{746,12},build_cost},
      [{var,{746,23},'Is2'},{var,{746,28},'Cost0'}]}},
    {debug_line,747,316},
    {match,
     {747,5},
     {var,{747,5},'Is'},
     {op,{747,19},'++',{var,{747,10},'IsPrefix'},{var,{747,22},'Is2'}}},
    {debug_line,748,317},
    {match,
     {748,5},
     {var,{748,5},'Ret'},
     {call,
      {748,11},
      {atom,{748,11},sub},
      [{var,{748,15},'Ret0'},{var,{748,21},'Sub'}]}},
    {debug_line,749,318},
    {match,
     {749,5},
     {var,{749,5},'Blk'},
     {block,
      {749,11},
      [{match,{749,11},{var,{749,11},rec39},{var,{749,11},'Blk0'}},
       {'case',
        {749,22},
        {var,{749,11},rec39},
        [{clause,
          {749,22},
          [{tuple,
            {749,22},
            [{atom,{749,22},b_blk},
             {var,{749,22},'_'},
             {var,{749,22},'_'},
             {var,{749,22},'_'}]}],
          [],
          [{call,
            {749,22},
            {remote,
             {749,22},
             {atom,{749,22},erlang},
             {atom,{749,22},setelement}},
            [{integer,{749,22},3},
             {call,
              {749,28},
              {remote,
               {749,28},
               {atom,{749,28},erlang},
               {atom,{749,28},setelement}},
              [{integer,{749,28},4},
               {var,{749,11},rec39},
               {var,{749,33},'Ret'}]},
             {var,{749,25},'Is'}]}]},
         {clause,
          [{generated,true},{location,{749,22}}],
          [{var,[{generated,true},{location,{749,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{749,22}}],
            {remote,
             [{generated,true},{location,{749,22}}],
             {atom,[{generated,true},{location,{749,22}}],erlang},
             {atom,[{generated,true},{location,{749,22}}],error}},
            [{tuple,
              [{generated,true},{location,{749,22}}],
              [{atom,[{generated,true},{location,{749,22}}],badrecord},
               {var,{749,11},rec39}]}]}]}]}]}},
    {debug_line,750,319},
    {match,
     {750,5},
     {var,{750,5},'Blocks'},
     {map,
      {750,21},
      {var,{750,14},'Blocks0'},
      [{map_field_exact,
        {750,28},
        {var,{750,23},'PredL'},
        {var,{750,30},'Blk'}}]}},
    {debug_line,751,320},
    {tuple,
     {751,5},
     [{var,{751,6},'Blocks'},
      {var,{751,13},'Count'},
      {var,{751,19},'Cost'}]}]}]}.
{function,
 {753,1},
 new_names,4,
 [{clause,
   {753,1},
   [{var,{753,1},'_'},{var,{753,1},'_'},{var,{753,1},'_'},{var,{753,1},'_'}],
   [[{call,
      {753,1},
      {remote,{753,1},{atom,{753,1},fake},{atom,{753,1},is_beam_bif_info}},
      []}]],
   [{debug_line,753,321},{atom,{753,1},ignore}]},
  {clause,
   {753,1},
   [{cons,
     {753,11},
     {match,
      {753,12},
      {tuple,
       {753,12},
       [{atom,{753,12},b_set},
        {var,{753,12},'_'},
        {var,{753,23},'Dst'},
        {var,{753,12},'_'},
        {var,{753,12},'_'}]},
      {var,{753,28},'I'}},
     {var,{753,30},'Is'}},
    {var,{753,35},'Sub0'},
    {var,{753,41},'Count0'},
    {var,{753,49},'Acc'}],
   [],
   [{debug_line,754,322},
    {match,
     {754,5},
     {tuple,{754,5},[{var,{754,6},'NewDst'},{var,{754,13},'Count'}]},
     {call,{754,22},{atom,{754,22},new_var},[{var,{754,30},'Count0'}]}},
    {debug_line,755,323},
    {match,
     {755,5},
     {var,{755,5},'Sub'},
     {map,
      {755,15},
      {var,{755,11},'Sub0'},
      [{map_field_assoc,
        {755,20},
        {var,{755,17},'Dst'},
        {var,{755,22},'NewDst'}}]}},
    {debug_line,756,324},
    {call,
     {756,5},
     {atom,{756,5},new_names},
     [{var,{756,15},'Is'},
      {var,{756,19},'Sub'},
      {var,{756,24},'Count'},
      {block,0,
       [{cons,
         {756,31},
         {block,
          {756,32},
          [{match,{756,32},{var,{756,32},rec40},{var,{756,32},'I'}},
           {'case',
            {756,40},
            {var,{756,32},rec40},
            [{clause,
              {756,40},
              [{tuple,
                {756,40},
                [{atom,{756,40},b_set},
                 {var,{756,40},'_'},
                 {var,{756,40},'_'},
                 {var,{756,40},'_'},
                 {var,{756,40},'_'}]}],
              [],
              [{call,
                {756,40},
                {remote,
                 {756,40},
                 {atom,{756,40},erlang},
                 {atom,{756,40},setelement}},
                [{integer,{756,40},3},
                 {var,{756,32},rec40},
                 {var,{756,44},'NewDst'}]}]},
             {clause,
              [{generated,true},{location,{756,40}}],
              [{var,[{generated,true},{location,{756,40}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{756,40}}],
                {remote,
                 [{generated,true},{location,{756,40}}],
                 {atom,[{generated,true},{location,{756,40}}],erlang},
                 {atom,[{generated,true},{location,{756,40}}],error}},
                [{tuple,
                  [{generated,true},{location,{756,40}}],
                  [{atom,[{generated,true},{location,{756,40}}],badrecord},
                   {var,{756,32},rec40}]}]}]}]}]},
         {var,{756,52},'Acc'}}]}]}]},
  {clause,
   {757,1},
   [{nil,{757,11}},
    {var,{757,15},'Sub'},
    {var,{757,20},'Count'},
    {var,{757,27},'Acc'}],
   [],
   [{debug_line,758,325},
    {tuple,
     {758,5},
     [{call,
       {758,6},
       {remote,{758,6},{atom,{758,6},lists},{atom,{758,6},reverse}},
       [{var,{758,14},'Acc'}]},
      {var,{758,19},'Count'},
      {var,{758,25},'Sub'}]}]}]}.
{function,
    {760,1},
    suitable_tail_ops,1,
    [{clause,
         {760,1},
         [{var,{760,1},'_'}],
         [[{call,
               {760,1},
               {remote,
                   {760,1},
                   {atom,{760,1},fake},
                   {atom,{760,1},is_beam_bif_info}},
               []}]],
         [{debug_line,760,326},{atom,{760,1},ignore}]},
     {clause,
         {760,1},
         [{var,{760,19},'Is'}],
         [],
         [{debug_line,761,327},
          {call,
              {761,5},
              {remote,{761,5},{atom,{761,5},lists},{atom,{761,5},all}},
              [{block,0,
                   [{'fun',
                        {761,9},
                        {clauses,
                            [{clause,
                                 {761,12},
                                 [{tuple,
                                      {761,13},
                                      [{atom,{761,13},b_set},
                                       {var,{761,13},'_'},
                                       {var,{761,13},'_'},
                                       {var,{761,23},'Op'},
                                       {var,{761,13},'_'}]}],
                                 [],
                                 [{debug_line,762,328},
                                  {call,
                                      {762,17},
                                      {atom,{762,17},is_suitable_tail_op},
                                      [{var,{762,37},'Op'}]}]}]}}]},
               {var,{763,14},'Is'}]}]}]}.
{function,{765,1},
          is_suitable_tail_op,1,
          [{clause,{765,1},
                   [{var,{765,1},'_'}],
                   [[{call,{765,1},
                           {remote,{765,1},
                                   {atom,{765,1},fake},
                                   {atom,{765,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,765,329},{atom,{765,1},ignore}]},
           {clause,{765,1},
                   [{tuple,{765,21},[{atom,{765,22},bif},{var,{765,26},'_'}]}],
                   [],
                   [{debug_line,765,330},{atom,{765,33},true}]},
           {clause,{766,1},
                   [{atom,{766,21},put_list}],
                   [],
                   [{debug_line,766,331},{atom,{766,34},true}]},
           {clause,{767,1},
                   [{atom,{767,21},put_tuple}],
                   [],
                   [{debug_line,767,332},{atom,{767,35},true}]},
           {clause,{768,1},
                   [{var,{768,21},'_'}],
                   [],
                   [{debug_line,768,333},{atom,{768,27},false}]}]}.
{function,
 {770,1},
 build_cost,2,
 [{clause,
   {770,1},
   [{var,{770,1},'_'},{var,{770,1},'_'}],
   [[{call,
      {770,1},
      {remote,{770,1},{atom,{770,1},fake},{atom,{770,1},is_beam_bif_info}},
      []}]],
   [{debug_line,770,334},{atom,{770,1},ignore}]},
  {clause,
   {770,1},
   [{cons,
     {770,12},
     {tuple,
      {770,13},
      [{atom,{770,13},b_set},
       {var,{770,13},'_'},
       {var,{770,13},'_'},
       {atom,{770,23},put_list},
       {var,{770,37},'Args'}]},
     {var,{770,43},'Is'}},
    {var,{770,48},'Cost'}],
   [],
   [{debug_line,771,335},
    {'case',
     {771,5},
     {call,{771,10},{atom,{771,10},are_all_literals},[{var,{771,27},'Args'}]},
     [{clause,
       {772,9},
       [{atom,{772,9},true}],
       [],
       [{debug_line,773,336},
        {call,
         {773,13},
         {atom,{773,13},build_cost},
         [{var,{773,24},'Is'},{var,{773,28},'Cost'}]}]},
      {clause,
       {774,9},
       [{atom,{774,9},false}],
       [],
       [{debug_line,775,337},
        {call,
         {775,13},
         {atom,{775,13},build_cost},
         [{var,{775,24},'Is'},
          {block,0,
           [{op,
             {775,33},
             '+',
             {var,{775,28},'Cost'},
             {integer,{775,35},1}}]}]}]}]}]},
  {clause,
   {777,1},
   [{cons,
     {777,12},
     {tuple,
      {777,13},
      [{atom,{777,13},b_set},
       {var,{777,13},'_'},
       {var,{777,13},'_'},
       {atom,{777,23},put_tuple},
       {var,{777,38},'Args'}]},
     {var,{777,44},'Is'}},
    {var,{777,49},'Cost'}],
   [],
   [{debug_line,778,338},
    {'case',
     {778,5},
     {call,{778,10},{atom,{778,10},are_all_literals},[{var,{778,27},'Args'}]},
     [{clause,
       {779,9},
       [{atom,{779,9},true}],
       [],
       [{debug_line,780,339},
        {call,
         {780,13},
         {atom,{780,13},build_cost},
         [{var,{780,24},'Is'},{var,{780,28},'Cost'}]}]},
      {clause,
       {781,9},
       [{atom,{781,9},false}],
       [],
       [{debug_line,782,340},
        {call,
         {782,13},
         {atom,{782,13},build_cost},
         [{var,{782,24},'Is'},
          {block,0,
           [{op,
             {782,48},
             '+',
             {op,
              {782,33},
              '+',
              {var,{782,28},'Cost'},
              {call,
               {782,35},
               {remote,{782,35},{atom,{782,35},erlang},{atom,{782,35},length}},
               [{var,{782,42},'Args'}]}},
             {integer,{782,50},1}}]}]}]}]}]},
  {clause,
   {784,1},
   [{cons,
     {784,12},
     {tuple,
      {784,13},
      [{atom,{784,13},b_set},
       {var,{784,13},'_'},
       {var,{784,13},'_'},
       {tuple,{784,23},[{atom,{784,24},bif},{var,{784,28},'_'}]},
       {var,{784,36},'Args'}]},
     {var,{784,42},'Is'}},
    {var,{784,47},'Cost'}],
   [],
   [{debug_line,785,341},
    {'case',
     {785,5},
     {call,{785,10},{atom,{785,10},are_all_literals},[{var,{785,27},'Args'}]},
     [{clause,
       {786,9},
       [{atom,{786,9},true}],
       [],
       [{debug_line,787,342},
        {call,
         {787,13},
         {atom,{787,13},build_cost},
         [{var,{787,24},'Is'},{var,{787,28},'Cost'}]}]},
      {clause,
       {788,9},
       [{atom,{788,9},false}],
       [],
       [{debug_line,789,343},
        {call,
         {789,13},
         {atom,{789,13},build_cost},
         [{var,{789,24},'Is'},
          {block,0,
           [{op,
             {789,33},
             '+',
             {var,{789,28},'Cost'},
             {integer,{789,35},1}}]}]}]}]}]},
  {clause,
   {791,1},
   [{nil,{791,12}},{var,{791,16},'Cost'}],
   [],
   [{debug_line,791,344},{var,{791,25},'Cost'}]}]}.
{function,
    {793,1},
    are_all_literals,1,
    [{clause,
         {793,1},
         [{var,{793,1},'_'}],
         [[{call,
               {793,1},
               {remote,
                   {793,1},
                   {atom,{793,1},fake},
                   {atom,{793,1},is_beam_bif_info}},
               []}]],
         [{debug_line,793,345},{atom,{793,1},ignore}]},
     {clause,
         {793,1},
         [{var,{793,18},'Args'}],
         [],
         [{debug_line,794,346},
          {call,
              {794,5},
              {remote,{794,5},{atom,{794,5},lists},{atom,{794,5},all}},
              [{block,0,
                   [{'fun',
                        {794,9},
                        {clauses,
                            [{clause,
                                 {794,12},
                                 [{tuple,
                                      {794,13},
                                      [{atom,{794,13},b_literal},
                                       {var,{794,13},'_'}]}],
                                 [],
                                 [{atom,{794,30},true}]},
                             {clause,
                                 {795,17},
                                 [{var,{795,18},'_'}],
                                 [],
                                 [{debug_line,795,347},
                                  {atom,{795,24},false}]}]}}]},
               {var,{796,19},'Args'}]}]}]}.
{function,
 {807,1},
 ssa_opt_element,1,
 [{clause,
   {807,1},
   [{var,{807,1},'_'}],
   [[{call,
      {807,1},
      {remote,{807,1},{atom,{807,1},fake},{atom,{807,1},is_beam_bif_info}},
      []}]],
   [{debug_line,807,348},{atom,{807,1},ignore}]},
  {clause,
   {807,1},
   [{tuple,
     {807,17},
     [{match,
       {807,18},
       {tuple,
        {807,18},
        [{atom,{807,18},opt_st},
         {var,{807,30},'Blocks'},
         {var,{807,18},'_'},
         {var,{807,18},'_'},
         {var,{807,18},'_'}]},
       {var,{807,38},'St'}},
      {var,{807,42},'FuncDb'}]}],
   [],
   [{debug_line,810,349},
    {match,
     {810,5},
     {var,{810,5},'GetEls'},
     {call,
      {810,14},
      {atom,{810,14},collect_element_calls},
      [{block,0,
        [{call,
          {810,36},
          {remote,{810,44},{atom,{810,36},beam_ssa},{atom,{810,45},linearize}},
          [{var,{810,55},'Blocks'}]}]}]}},
    {debug_line,815,350},
    {match,
     {815,5},
     {var,{815,5},'Chains'},
     {call,
      {815,14},
      {atom,{815,14},collect_chains},
      [{var,{815,29},'GetEls'},{nil,{815,37}}]}},
    {debug_line,819,351},
    {tuple,
     {819,5},
     [{block,
       {819,6},
       [{match,
         {819,16},
         {var,{819,16},rec41},
         {call,
          {819,20},
          {atom,{819,20},swap_element_calls},
          [{var,{819,39},'Chains'},{var,{819,47},'Blocks'}]}},
        {match,{819,6},{var,{819,6},rec42},{var,{819,6},'St'}},
        {'case',
         {819,16},
         {var,{819,6},rec42},
         [{clause,
           {819,16},
           [{tuple,
             {819,16},
             [{atom,{819,16},opt_st},
              {var,{819,16},'_'},
              {var,{819,16},'_'},
              {var,{819,16},'_'},
              {var,{819,16},'_'}]}],
           [],
           [{call,
             {819,16},
             {remote,
              {819,16},
              {atom,{819,16},erlang},
              {atom,{819,16},setelement}},
             [{integer,{819,16},2},
              {var,{819,6},rec42},
              {var,{819,16},rec41}]}]},
          {clause,
           [{generated,true},{location,{819,16}}],
           [{var,[{generated,true},{location,{819,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{819,16}}],
             {remote,
              [{generated,true},{location,{819,16}}],
              {atom,[{generated,true},{location,{819,16}}],erlang},
              {atom,[{generated,true},{location,{819,16}}],error}},
             [{tuple,
               [{generated,true},{location,{819,16}}],
               [{atom,[{generated,true},{location,{819,16}}],badrecord},
                {var,{819,6},rec42}]}]}]}]}]},
      {var,{819,57},'FuncDb'}]}]}]}.
{function,
 {821,1},
 collect_element_calls,1,
 [{clause,
   {821,1},
   [{var,{821,1},'_'}],
   [[{call,
      {821,1},
      {remote,{821,1},{atom,{821,1},fake},{atom,{821,1},is_beam_bif_info}},
      []}]],
   [{debug_line,821,352},{atom,{821,1},ignore}]},
  {clause,
   {821,1},
   [{cons,
     {821,23},
     {tuple,
      {821,24},
      [{var,{821,25},'L'},
       {tuple,
        {821,27},
        [{atom,{821,27},b_blk},
         {var,{821,27},'_'},
         {var,{821,37},'Is0'},
         {var,{821,46},'Last'}]}]},
     {var,{821,53},'Bs'}}],
   [],
   [{debug_line,822,353},
    {'case',
     {822,5},
     {tuple,{822,10},[{var,{822,11},'Is0'},{var,{822,15},'Last'}]},
     [{clause,
       {823,9},
       [{tuple,
         {823,9},
         [{cons,
           {823,10},
           {tuple,
            {823,11},
            [{atom,{823,11},b_set},
             {var,{823,11},'_'},
             {var,{823,39},'Element'},
             {tuple,{823,21},[{atom,{823,22},bif},{atom,{823,26},element}]},
             {cons,
              {824,23},
              {tuple,{824,24},[{atom,{824,24},b_literal},{var,{824,39},'N'}]},
              {cons,
               {824,42},
               {match,
                {824,42},
                {tuple,{824,42},[{atom,{824,42},b_var},{var,{824,42},'_'}]},
                {var,{824,51},'Tuple'}},
               {nil,{824,56}}}}]},
           {cons,
            {825,11},
            {tuple,
             {825,11},
             [{atom,{825,11},b_set},
              {var,{825,11},'_'},
              {var,{825,43},'Bool'},
              {tuple,
               {825,21},
               [{atom,{825,22},succeeded},{atom,{825,32},guard}]},
              {cons,{825,53},{var,{825,54},'Element'},{nil,{825,61}}}]},
            {nil,{825,63}}}},
          {tuple,
           {826,10},
           [{atom,{826,10},b_br},
            {var,{826,10},'_'},
            {var,{826,21},'Bool'},
            {var,{826,31},'Succ'},
            {var,{826,41},'Fail'}]}]}],
       [],
       [{debug_line,827,354},
        {match,
         {827,13},
         {var,{827,13},'Info'},
         {tuple,
          {827,20},
          [{var,{827,21},'L'},
           {var,{827,23},'Succ'},
           {tuple,{827,28},[{var,{827,29},'Tuple'},{var,{827,35},'Fail'}]},
           {var,{827,41},'N'}]}},
        {debug_line,828,355},
        {cons,
         {828,13},
         {var,{828,14},'Info'},
         {call,
          {828,19},
          {atom,{828,19},collect_element_calls},
          [{var,{828,41},'Bs'}]}}]},
      {clause,
       {829,9},
       [{tuple,{829,9},[{var,{829,10},'_'},{var,{829,12},'_'}]}],
       [],
       [{debug_line,830,356},
        {call,
         {830,13},
         {atom,{830,13},collect_element_calls},
         [{var,{830,35},'Bs'}]}]}]}]},
  {clause,{832,1},[{nil,{832,23}}],[],[{debug_line,832,357},{nil,{832,30}}]}]}.
{function,
    {834,1},
    collect_chains,2,
    [{clause,
         {834,1},
         [{var,{834,1},'_'},{var,{834,1},'_'}],
         [[{call,
               {834,1},
               {remote,
                   {834,1},
                   {atom,{834,1},fake},
                   {atom,{834,1},is_beam_bif_info}},
               []}]],
         [{debug_line,834,358},{atom,{834,1},ignore}]},
     {clause,
         {834,1},
         [{cons,
              {834,16},
              {match,
                  {834,17},
                  {tuple,
                      {834,17},
                      [{var,{834,18},'This'},
                       {var,{834,23},'_'},
                       {var,{834,25},'V'},
                       {var,{834,27},'_'}]},
                  {var,{834,30},'El'}},
              {var,{834,33},'Els'}},
          {match,
              {834,39},
              {cons,
                  {834,39},
                  {tuple,
                      {834,40},
                      [{var,{834,41},'_'},
                       {var,{834,43},'This'},
                       {var,{834,48},'V'},
                       {var,{834,50},'_'}]},
                  {var,{834,53},'_'}},
              {var,{834,56},'Chain'}}],
         [],
         [{debug_line,836,359},
          {call,
              {836,5},
              {atom,{836,5},collect_chains},
              [{var,{836,20},'Els'},
               {block,0,
                   [{cons,
                        {836,25},
                        {var,{836,26},'El'},
                        {var,{836,29},'Chain'}}]}]}]},
     {clause,
         {837,1},
         [{cons,{837,16},{var,{837,17},'El'},{var,{837,20},'Els'}},
          {match,
              {837,26},
              {cons,
                  {837,26},
                  {var,{837,27},'_'},
                  {cons,{837,29},{var,{837,29},'_'},{var,{837,31},'_'}}},
              {var,{837,34},'Chain'}}],
         [],
         [{debug_line,839,360},
          {cons,
              {839,5},
              {var,{839,6},'Chain'},
              {call,
                  {839,12},
                  {atom,{839,12},collect_chains},
                  [{var,{839,27},'Els'},
                   {block,0,
                       [{cons,
                            {839,32},
                            {var,{839,33},'El'},
                            {nil,{839,35}}}]}]}}]},
     {clause,
         {840,1},
         [{cons,{840,16},{var,{840,17},'El'},{var,{840,20},'Els'}},
          {var,{840,26},'_Chain'}],
         [],
         [{debug_line,842,361},
          {call,
              {842,5},
              {atom,{842,5},collect_chains},
              [{var,{842,20},'Els'},
               {block,0,
                   [{cons,{842,25},{var,{842,26},'El'},{nil,{842,28}}}]}]}]},
     {clause,
         {843,1},
         [{nil,{843,16}},
          {match,
              {843,20},
              {cons,
                  {843,20},
                  {var,{843,21},'_'},
                  {cons,{843,23},{var,{843,23},'_'},{var,{843,25},'_'}}},
              {var,{843,28},'Chain'}}],
         [],
         [{debug_line,845,362},
          {cons,{845,5},{var,{845,6},'Chain'},{nil,{845,11}}}]},
     {clause,
         {846,1},
         [{nil,{846,16}},{var,{846,20},'_'}],
         [],
         [{debug_line,846,363},{nil,{846,27}}]}]}.
{function,
    {848,1},
    swap_element_calls,2,
    [{clause,
         {848,1},
         [{var,{848,1},'_'},{var,{848,1},'_'}],
         [[{call,
               {848,1},
               {remote,
                   {848,1},
                   {atom,{848,1},fake},
                   {atom,{848,1},is_beam_bif_info}},
               []}]],
         [{debug_line,848,364},{atom,{848,1},ignore}]},
     {clause,
         {848,1},
         [{cons,
              {848,20},
              {match,
                  {848,21},
                  {cons,
                      {848,21},
                      {tuple,
                          {848,22},
                          [{var,{848,23},'L'},
                           {var,{848,25},'_'},
                           {var,{848,27},'_'},
                           {var,{848,29},'N'}]},
                      {var,{848,32},'_'}},
                  {var,{848,35},'Chain'}},
              {var,{848,41},'Chains'}},
          {var,{848,50},'Blocks0'}],
         [],
         [{debug_line,849,365},
          {match,
              {849,5},
              {var,{849,5},'Blocks'},
              {call,
                  {849,14},
                  {atom,{849,14},swap_element_calls_1},
                  [{var,{849,35},'Chain'},
                   {block,0,
                       [{tuple,
                            {849,42},
                            [{var,{849,43},'N'},{var,{849,45},'L'}]}]},
                   {var,{849,49},'Blocks0'}]}},
          {debug_line,850,366},
          {call,
              {850,5},
              {atom,{850,5},swap_element_calls},
              [{var,{850,24},'Chains'},{var,{850,32},'Blocks'}]}]},
     {clause,
         {851,1},
         [{nil,{851,20}},{var,{851,24},'Blocks'}],
         [],
         [{debug_line,851,367},{var,{851,35},'Blocks'}]}]}.
{function,
 {853,1},
 swap_element_calls_1,3,
 [{clause,
   {853,1},
   [{var,{853,1},'_'},{var,{853,1},'_'},{var,{853,1},'_'}],
   [[{call,
      {853,1},
      {remote,{853,1},{atom,{853,1},fake},{atom,{853,1},is_beam_bif_info}},
      []}]],
   [{debug_line,853,368},{atom,{853,1},ignore}]},
  {clause,
   {853,1},
   [{cons,
     {853,22},
     {tuple,
      {853,23},
      [{var,{853,24},'L1'},
       {var,{853,27},'_'},
       {var,{853,29},'_'},
       {var,{853,31},'N1'}]},
     {nil,{853,34}}},
    {tuple,{853,37},[{var,{853,38},'N2'},{var,{853,41},'L2'}]},
    {var,{853,46},'Blocks'}],
   [[{op,{853,62},'>',{var,{853,59},'N2'},{var,{853,64},'N1'}}]],
   [{debug_line,858,369},
    {match,
     {858,5},
     {map,
      {858,5},
      [{map_field_exact,{858,9},{var,{858,7},'L1'},{var,{858,11},'Blk1'}},
       {map_field_exact,{858,18},{var,{858,16},'L2'},{var,{858,20},'Blk2'}}]},
     {var,{858,28},'Blocks'}},
    {debug_line,859,370},
    {match,
     {859,5},
     {cons,
      {859,5},
      {match,
       {859,6},
       {tuple,
        {859,6},
        [{atom,{859,6},b_set},
         {var,{859,6},'_'},
         {var,{859,17},'Dst1'},
         {var,{859,6},'_'},
         {var,{859,6},'_'}]},
       {var,{859,23},'GetEl1'}},
      {cons,{859,30},{var,{859,30},'Succ1'},{nil,{859,35}}}},
     {'case',
      {859,39},
      {var,{859,39},'Blk1'},
      [{clause,
        [{generated,true},{location,{859,39}}],
        [{tuple,
          [{generated,true},{location,{859,39}}],
          [{atom,{859,39},b_blk},
           {var,{859,39},'_'},
           {var,{859,39},rec43},
           {var,{859,39},'_'}]}],
        [],
        [{var,{859,39},rec43}]},
       {clause,
        [{generated,true},{location,{859,39}}],
        [{var,{859,39},rec43}],
        [],
        [{call,
          [{generated,true},{location,{859,39}}],
          {remote,
           [{generated,true},{location,{859,39}}],
           {atom,[{generated,true},{location,{859,39}}],erlang},
           {atom,[{generated,true},{location,{859,39}}],error}},
          [{tuple,
            [{generated,true},{location,{859,39}}],
            [{atom,[{generated,true},{location,{859,39}}],badrecord},
             {var,{859,39},rec43}]}]}]}]}},
    {debug_line,860,371},
    {match,
     {860,5},
     {cons,
      {860,5},
      {match,
       {860,6},
       {tuple,
        {860,6},
        [{atom,{860,6},b_set},
         {var,{860,6},'_'},
         {var,{860,17},'Dst2'},
         {var,{860,6},'_'},
         {var,{860,6},'_'}]},
       {var,{860,23},'GetEl2'}},
      {cons,{860,30},{var,{860,30},'Succ2'},{nil,{860,35}}}},
     {'case',
      {860,39},
      {var,{860,39},'Blk2'},
      [{clause,
        [{generated,true},{location,{860,39}}],
        [{tuple,
          [{generated,true},{location,{860,39}}],
          [{atom,{860,39},b_blk},
           {var,{860,39},'_'},
           {var,{860,39},rec44},
           {var,{860,39},'_'}]}],
        [],
        [{var,{860,39},rec44}]},
       {clause,
        [{generated,true},{location,{860,39}}],
        [{var,{860,39},rec44}],
        [],
        [{call,
          [{generated,true},{location,{860,39}}],
          {remote,
           [{generated,true},{location,{860,39}}],
           {atom,[{generated,true},{location,{860,39}}],erlang},
           {atom,[{generated,true},{location,{860,39}}],error}},
          [{tuple,
            [{generated,true},{location,{860,39}}],
            [{atom,[{generated,true},{location,{860,39}}],badrecord},
             {var,{860,39},rec44}]}]}]}]}},
    {debug_line,861,372},
    {match,
     {861,5},
     {var,{861,5},'Is1'},
     {cons,
      {861,11},
      {var,{861,12},'GetEl2'},
      {cons,
       {861,19},
       {block,
        {861,19},
        [{match,
          {861,31},
          {var,{861,31},rec45},
          {cons,{861,36},{var,{861,37},'Dst2'},{nil,{861,41}}}},
         {match,{861,19},{var,{861,19},rec46},{var,{861,19},'Succ1'}},
         {'case',
          {861,31},
          {var,{861,19},rec46},
          [{clause,
            {861,31},
            [{tuple,
              {861,31},
              [{atom,{861,31},b_set},
               {var,{861,31},'_'},
               {var,{861,31},'_'},
               {var,{861,31},'_'},
               {var,{861,31},'_'}]}],
            [],
            [{call,
              {861,31},
              {remote,
               {861,31},
               {atom,{861,31},erlang},
               {atom,{861,31},setelement}},
              [{integer,{861,31},5},
               {var,{861,19},rec46},
               {var,{861,31},rec45}]}]},
           {clause,
            [{generated,true},{location,{861,31}}],
            [{var,[{generated,true},{location,{861,31}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{861,31}}],
              {remote,
               [{generated,true},{location,{861,31}}],
               {atom,[{generated,true},{location,{861,31}}],erlang},
               {atom,[{generated,true},{location,{861,31}}],error}},
              [{tuple,
                [{generated,true},{location,{861,31}}],
                [{atom,[{generated,true},{location,{861,31}}],badrecord},
                 {var,{861,19},rec46}]}]}]}]}]},
       {nil,{861,43}}}}},
    {debug_line,862,373},
    {match,
     {862,5},
     {var,{862,5},'Is2'},
     {cons,
      {862,11},
      {var,{862,12},'GetEl1'},
      {cons,
       {862,19},
       {block,
        {862,19},
        [{match,
          {862,31},
          {var,{862,31},rec47},
          {cons,{862,36},{var,{862,37},'Dst1'},{nil,{862,41}}}},
         {match,{862,19},{var,{862,19},rec48},{var,{862,19},'Succ2'}},
         {'case',
          {862,31},
          {var,{862,19},rec48},
          [{clause,
            {862,31},
            [{tuple,
              {862,31},
              [{atom,{862,31},b_set},
               {var,{862,31},'_'},
               {var,{862,31},'_'},
               {var,{862,31},'_'},
               {var,{862,31},'_'}]}],
            [],
            [{call,
              {862,31},
              {remote,
               {862,31},
               {atom,{862,31},erlang},
               {atom,{862,31},setelement}},
              [{integer,{862,31},5},
               {var,{862,19},rec48},
               {var,{862,31},rec47}]}]},
           {clause,
            [{generated,true},{location,{862,31}}],
            [{var,[{generated,true},{location,{862,31}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{862,31}}],
              {remote,
               [{generated,true},{location,{862,31}}],
               {atom,[{generated,true},{location,{862,31}}],erlang},
               {atom,[{generated,true},{location,{862,31}}],error}},
              [{tuple,
                [{generated,true},{location,{862,31}}],
                [{atom,[{generated,true},{location,{862,31}}],badrecord},
                 {var,{862,19},rec48}]}]}]}]}]},
       {nil,{862,43}}}}},
    {debug_line,863,374},
    {map,
     {863,11},
     {var,{863,5},'Blocks'},
     [{map_field_exact,
       {863,15},
       {var,{863,13},'L1'},
       {block,
        {863,17},
        [{match,{863,17},{var,{863,17},rec49},{var,{863,17},'Blk1'}},
         {'case',
          {863,28},
          {var,{863,17},rec49},
          [{clause,
            {863,28},
            [{tuple,
              {863,28},
              [{atom,{863,28},b_blk},
               {var,{863,28},'_'},
               {var,{863,28},'_'},
               {var,{863,28},'_'}]}],
            [],
            [{call,
              {863,28},
              {remote,
               {863,28},
               {atom,{863,28},erlang},
               {atom,{863,28},setelement}},
              [{integer,{863,28},3},
               {var,{863,17},rec49},
               {var,{863,31},'Is1'}]}]},
           {clause,
            [{generated,true},{location,{863,28}}],
            [{var,[{generated,true},{location,{863,28}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{863,28}}],
              {remote,
               [{generated,true},{location,{863,28}}],
               {atom,[{generated,true},{location,{863,28}}],erlang},
               {atom,[{generated,true},{location,{863,28}}],error}},
              [{tuple,
                [{generated,true},{location,{863,28}}],
                [{atom,[{generated,true},{location,{863,28}}],badrecord},
                 {var,{863,17},rec49}]}]}]}]}]}},
      {map_field_exact,
       {863,38},
       {var,{863,36},'L2'},
       {block,
        {863,40},
        [{match,{863,40},{var,{863,40},rec50},{var,{863,40},'Blk2'}},
         {'case',
          {863,51},
          {var,{863,40},rec50},
          [{clause,
            {863,51},
            [{tuple,
              {863,51},
              [{atom,{863,51},b_blk},
               {var,{863,51},'_'},
               {var,{863,51},'_'},
               {var,{863,51},'_'}]}],
            [],
            [{call,
              {863,51},
              {remote,
               {863,51},
               {atom,{863,51},erlang},
               {atom,{863,51},setelement}},
              [{integer,{863,51},3},
               {var,{863,40},rec50},
               {var,{863,54},'Is2'}]}]},
           {clause,
            [{generated,true},{location,{863,51}}],
            [{var,[{generated,true},{location,{863,51}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{863,51}}],
              {remote,
               [{generated,true},{location,{863,51}}],
               {atom,[{generated,true},{location,{863,51}}],erlang},
               {atom,[{generated,true},{location,{863,51}}],error}},
              [{tuple,
                [{generated,true},{location,{863,51}}],
                [{atom,[{generated,true},{location,{863,51}}],badrecord},
                 {var,{863,40},rec50}]}]}]}]}]}}]}]},
  {clause,
   {864,1},
   [{cons,
     {864,22},
     {tuple,
      {864,23},
      [{var,{864,24},'L'},
       {var,{864,26},'_'},
       {var,{864,28},'_'},
       {var,{864,30},'N1'}]},
     {var,{864,34},'Els'}},
    {tuple,{864,40},[{var,{864,41},'N2'},{var,{864,44},'_'}]},
    {var,{864,48},'Blocks'}],
   [[{op,{864,64},'>',{var,{864,61},'N1'},{var,{864,66},'N2'}}]],
   [{debug_line,865,375},
    {call,
     {865,5},
     {atom,{865,5},swap_element_calls_1},
     [{var,{865,26},'Els'},
      {block,0,[{tuple,{865,31},[{var,{865,32},'N2'},{var,{865,35},'L'}]}]},
      {var,{865,39},'Blocks'}]}]},
  {clause,
   {866,1},
   [{cons,{866,22},{var,{866,23},'_'},{var,{866,25},'Els'}},
    {var,{866,31},'Highest'},
    {var,{866,40},'Blocks'}],
   [],
   [{debug_line,867,376},
    {call,
     {867,5},
     {atom,{867,5},swap_element_calls_1},
     [{var,{867,26},'Els'},
      {var,{867,31},'Highest'},
      {var,{867,40},'Blocks'}]}]},
  {clause,
   {868,1},
   [{nil,{868,22}},{var,{868,26},'_'},{var,{868,29},'Blocks'}],
   [],
   [{debug_line,871,377},{var,{871,5},'Blocks'}]}]}.
{function,
 {880,1},
 ssa_opt_record,1,
 [{clause,
   {880,1},
   [{var,{880,1},'_'}],
   [[{call,
      {880,1},
      {remote,{880,1},{atom,{880,1},fake},{atom,{880,1},is_beam_bif_info}},
      []}]],
   [{debug_line,880,378},{atom,{880,1},ignore}]},
  {clause,
   {880,1},
   [{tuple,
     {880,16},
     [{match,
       {880,17},
       {tuple,
        {880,17},
        [{atom,{880,17},opt_st},
         {var,{880,29},'Linear'},
         {var,{880,17},'_'},
         {var,{880,17},'_'},
         {var,{880,17},'_'}]},
       {var,{880,37},'St'}},
      {var,{880,41},'FuncDb'}]}],
   [],
   [{debug_line,881,379},
    {match,
     {881,5},
     {var,{881,5},'Blocks'},
     {call,
      {881,14},
      {remote,{881,18},{atom,{881,14},maps},{atom,{881,19},from_list}},
      [{var,{881,29},'Linear'}]}},
    {debug_line,882,380},
    {tuple,
     {882,5},
     [{block,
       {882,6},
       [{match,
         {882,16},
         {var,{882,16},rec51},
         {call,
          {882,20},
          {atom,{882,20},record_opt},
          [{var,{882,31},'Linear'},{var,{882,39},'Blocks'}]}},
        {match,{882,6},{var,{882,6},rec52},{var,{882,6},'St'}},
        {'case',
         {882,16},
         {var,{882,6},rec52},
         [{clause,
           {882,16},
           [{tuple,
             {882,16},
             [{atom,{882,16},opt_st},
              {var,{882,16},'_'},
              {var,{882,16},'_'},
              {var,{882,16},'_'},
              {var,{882,16},'_'}]}],
           [],
           [{call,
             {882,16},
             {remote,
              {882,16},
              {atom,{882,16},erlang},
              {atom,{882,16},setelement}},
             [{integer,{882,16},2},
              {var,{882,6},rec52},
              {var,{882,16},rec51}]}]},
          {clause,
           [{generated,true},{location,{882,16}}],
           [{var,[{generated,true},{location,{882,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{882,16}}],
             {remote,
              [{generated,true},{location,{882,16}}],
              {atom,[{generated,true},{location,{882,16}}],erlang},
              {atom,[{generated,true},{location,{882,16}}],error}},
             [{tuple,
               [{generated,true},{location,{882,16}}],
               [{atom,[{generated,true},{location,{882,16}}],badrecord},
                {var,{882,6},rec52}]}]}]}]}]},
      {var,{882,49},'FuncDb'}]}]}]}.
{function,
 {884,1},
 record_opt,2,
 [{clause,
   {884,1},
   [{var,{884,1},'_'},{var,{884,1},'_'}],
   [[{call,
      {884,1},
      {remote,{884,1},{atom,{884,1},fake},{atom,{884,1},is_beam_bif_info}},
      []}]],
   [{debug_line,884,381},{atom,{884,1},ignore}]},
  {clause,
   {884,1},
   [{cons,
     {884,12},
     {tuple,
      {884,13},
      [{var,{884,14},'L'},
       {match,
        {884,16},
        {tuple,
         {884,16},
         [{atom,{884,16},b_blk},
          {var,{884,16},'_'},
          {var,{884,26},'Is0'},
          {var,{884,35},'Last'}]},
        {var,{884,41},'Blk0'}}]},
     {var,{884,47},'Bs'}},
    {var,{884,52},'Blocks'}],
   [],
   [{debug_line,885,382},
    {match,
     {885,5},
     {var,{885,5},'Is'},
     {call,
      {885,10},
      {atom,{885,10},record_opt_is},
      [{var,{885,24},'Is0'},{var,{885,29},'Last'},{var,{885,35},'Blocks'}]}},
    {debug_line,886,383},
    {match,
     {886,5},
     {var,{886,5},'Blk'},
     {block,
      {886,11},
      [{match,{886,11},{var,{886,11},rec53},{var,{886,11},'Blk0'}},
       {'case',
        {886,22},
        {var,{886,11},rec53},
        [{clause,
          {886,22},
          [{tuple,
            {886,22},
            [{atom,{886,22},b_blk},
             {var,{886,22},'_'},
             {var,{886,22},'_'},
             {var,{886,22},'_'}]}],
          [],
          [{call,
            {886,22},
            {remote,
             {886,22},
             {atom,{886,22},erlang},
             {atom,{886,22},setelement}},
            [{integer,{886,22},3},{var,{886,11},rec53},{var,{886,25},'Is'}]}]},
         {clause,
          [{generated,true},{location,{886,22}}],
          [{var,[{generated,true},{location,{886,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{886,22}}],
            {remote,
             [{generated,true},{location,{886,22}}],
             {atom,[{generated,true},{location,{886,22}}],erlang},
             {atom,[{generated,true},{location,{886,22}}],error}},
            [{tuple,
              [{generated,true},{location,{886,22}}],
              [{atom,[{generated,true},{location,{886,22}}],badrecord},
               {var,{886,11},rec53}]}]}]}]}]}},
    {debug_line,887,384},
    {cons,
     {887,5},
     {tuple,{887,6},[{var,{887,7},'L'},{var,{887,9},'Blk'}]},
     {call,
      {887,14},
      {atom,{887,14},record_opt},
      [{var,{887,25},'Bs'},{var,{887,29},'Blocks'}]}}]},
  {clause,
   {888,1},
   [{nil,{888,12}},{var,{888,16},'_Blocks'}],
   [],
   [{debug_line,888,385},{nil,{888,28}}]}]}.
{function,
 {890,1},
 record_opt_is,3,
 [{clause,
   {890,1},
   [{var,{890,1},'_'},{var,{890,1},'_'},{var,{890,1},'_'}],
   [[{call,
      {890,1},
      {remote,{890,1},{atom,{890,1},fake},{atom,{890,1},is_beam_bif_info}},
      []}]],
   [{debug_line,890,386},{atom,{890,1},ignore}]},
  {clause,
   {890,1},
   [{cons,
     {890,15},
     {match,
      {890,16},
      {tuple,
       {890,16},
       [{atom,{890,16},b_set},
        {var,{890,16},'_'},
        {var,{890,45},'Bool'},
        {tuple,{890,26},[{atom,{890,27},bif},{atom,{890,31},is_tuple}]},
        {cons,{890,55},{var,{890,56},'Tuple'},{nil,{890,61}}}]},
      {var,{890,64},'Set'}},
     {nil,{890,67}}},
    {var,{891,15},'Last'},
    {var,{891,21},'Blocks'}],
   [],
   [{debug_line,892,387},
    {'case',
     {892,5},
     {call,
      {892,10},
      {atom,{892,10},is_tagged_tuple},
      [{var,{892,26},'Tuple'},
       {var,{892,33},'Bool'},
       {var,{892,39},'Last'},
       {var,{892,45},'Blocks'}]},
     [{clause,
       {893,9},
       [{tuple,
         {893,9},
         [{atom,{893,10},yes},{var,{893,14},'Size'},{var,{893,19},'Tag'}]}],
       [],
       [{debug_line,894,388},
        {match,
         {894,13},
         {var,{894,13},'Args'},
         {cons,
          {894,20},
          {var,{894,21},'Tuple'},
          {cons,
           {894,27},
           {var,{894,27},'Size'},
           {cons,{894,32},{var,{894,32},'Tag'},{nil,{894,35}}}}}},
        {debug_line,895,389},
        {cons,
         {895,13},
         {block,
          {895,14},
          [{match,{895,14},{var,{895,14},rec54},{var,{895,14},'Set'}},
           {'case',
            {895,24},
            {var,{895,14},rec54},
            [{clause,
              {895,24},
              [{tuple,
                {895,24},
                [{atom,{895,24},b_set},
                 {var,{895,24},'_'},
                 {var,{895,24},'_'},
                 {var,{895,24},'_'},
                 {var,{895,24},'_'}]}],
              [],
              [{call,
                {895,24},
                {remote,
                 {895,24},
                 {atom,{895,24},erlang},
                 {atom,{895,24},setelement}},
                [{integer,{895,24},4},
                 {call,
                  {895,43},
                  {remote,
                   {895,43},
                   {atom,{895,43},erlang},
                   {atom,{895,43},setelement}},
                  [{integer,{895,43},5},
                   {var,{895,14},rec54},
                   {var,{895,48},'Args'}]},
                 {atom,{895,27},is_tagged_tuple}]}]},
             {clause,
              [{generated,true},{location,{895,24}}],
              [{var,[{generated,true},{location,{895,24}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{895,24}}],
                {remote,
                 [{generated,true},{location,{895,24}}],
                 {atom,[{generated,true},{location,{895,24}}],erlang},
                 {atom,[{generated,true},{location,{895,24}}],error}},
                [{tuple,
                  [{generated,true},{location,{895,24}}],
                  [{atom,[{generated,true},{location,{895,24}}],badrecord},
                   {var,{895,14},rec54}]}]}]}]}]},
         {nil,{895,53}}}]},
      {clause,
       {896,9},
       [{atom,{896,9},no}],
       [],
       [{debug_line,897,390},
        {cons,{897,13},{var,{897,14},'Set'},{nil,{897,17}}}]}]}]},
  {clause,
   {899,1},
   [{match,
     {899,15},
     {cons,{899,15},{var,{899,16},'I'},{var,{899,18},'Is'}},
     {var,{899,22},'Is0'}},
    {match,
     {899,27},
     {tuple,
      {899,27},
      [{atom,{899,27},b_br},
       {var,{899,27},'_'},
       {var,{899,38},'Bool'},
       {var,{899,27},'_'},
       {var,{899,27},'_'}]},
     {var,{899,44},'Last'}},
    {var,{899,50},'Blocks'}],
   [],
   [{debug_line,900,391},
    {'case',
     {900,5},
     {call,
      {900,10},
      {atom,{900,10},is_tagged_tuple_1},
      [{var,{900,28},'Is0'},{var,{900,33},'Last'},{var,{900,39},'Blocks'}]},
     [{clause,
       {901,9},
       [{tuple,
         {901,9},
         [{atom,{901,10},yes},
          {var,{901,14},'_Fail'},
          {var,{901,20},'Tuple'},
          {var,{901,26},'Arity'},
          {var,{901,32},'Tag'}]}],
       [],
       [{debug_line,902,392},
        {match,
         {902,13},
         {var,{902,13},'Args'},
         {cons,
          {902,20},
          {var,{902,21},'Tuple'},
          {cons,
           {902,27},
           {var,{902,27},'Arity'},
           {cons,{902,33},{var,{902,33},'Tag'},{nil,{902,36}}}}}},
        {debug_line,903,393},
        {cons,
         {903,13},
         {block,
          {903,14},
          [{match,{903,14},{var,{903,14},rec55},{var,{903,14},'I'}},
           {'case',
            {903,41},
            {var,{903,14},rec55},
            [{clause,
              {903,41},
              [{tuple,
                {903,41},
                [{atom,{903,41},b_set},
                 {var,{903,41},'_'},
                 {var,{903,41},'_'},
                 {var,{903,41},'_'},
                 {var,{903,41},'_'}]}],
              [],
              [{call,
                {903,41},
                {remote,
                 {903,41},
                 {atom,{903,41},erlang},
                 {atom,{903,41},setelement}},
                [{integer,{903,41},3},
                 {call,
                  {903,22},
                  {remote,
                   {903,22},
                   {atom,{903,22},erlang},
                   {atom,{903,22},setelement}},
                  [{integer,{903,22},4},
                   {call,
                    {903,50},
                    {remote,
                     {903,50},
                     {atom,{903,50},erlang},
                     {atom,{903,50},setelement}},
                    [{integer,{903,50},5},
                     {var,{903,14},rec55},
                     {var,{903,55},'Args'}]},
                   {atom,{903,25},is_tagged_tuple}]},
                 {var,{903,45},'Bool'}]}]},
             {clause,
              [{generated,true},{location,{903,41}}],
              [{var,[{generated,true},{location,{903,41}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{903,41}}],
                {remote,
                 [{generated,true},{location,{903,41}}],
                 {atom,[{generated,true},{location,{903,41}}],erlang},
                 {atom,[{generated,true},{location,{903,41}}],error}},
                [{tuple,
                  [{generated,true},{location,{903,41}}],
                  [{atom,[{generated,true},{location,{903,41}}],badrecord},
                   {var,{903,14},rec55}]}]}]}]}]},
         {nil,{903,60}}}]},
      {clause,
       {904,9},
       [{atom,{904,9},no}],
       [],
       [{debug_line,905,394},
        {cons,
         {905,13},
         {var,{905,14},'I'},
         {call,
          {905,16},
          {atom,{905,16},record_opt_is},
          [{var,{905,30},'Is'},
           {var,{905,34},'Last'},
           {var,{905,40},'Blocks'}]}}]}]}]},
  {clause,
   {907,1},
   [{cons,{907,15},{var,{907,16},'I'},{var,{907,18},'Is'}},
    {var,{907,23},'Last'},
    {var,{907,29},'Blocks'}],
   [],
   [{debug_line,908,395},
    {cons,
     {908,5},
     {var,{908,6},'I'},
     {call,
      {908,8},
      {atom,{908,8},record_opt_is},
      [{var,{908,22},'Is'},{var,{908,26},'Last'},{var,{908,32},'Blocks'}]}}]},
  {clause,
   {909,1},
   [{nil,{909,15}},{var,{909,19},'_Last'},{var,{909,26},'_Blocks'}],
   [],
   [{debug_line,909,396},{nil,{909,38}}]}]}.
{function,
    {911,1},
    is_tagged_tuple,4,
    [{clause,
         {911,1},
         [{var,{911,1},'_'},
          {var,{911,1},'_'},
          {var,{911,1},'_'},
          {var,{911,1},'_'}],
         [[{call,
               {911,1},
               {remote,
                   {911,1},
                   {atom,{911,1},fake},
                   {atom,{911,1},is_beam_bif_info}},
               []}]],
         [{debug_line,911,397},{atom,{911,1},ignore}]},
     {clause,
         {911,1},
         [{match,
              {911,17},
              {tuple,{911,17},[{atom,{911,17},b_var},{var,{911,17},'_'}]},
              {var,{911,26},'Tuple'}},
          {var,{911,33},'Bool'},
          {tuple,
              {912,17},
              [{atom,{912,17},b_br},
               {var,{912,17},'_'},
               {var,{912,28},'Bool'},
               {var,{912,38},'Succ'},
               {var,{912,48},'Fail'}]},
          {var,{913,17},'Blocks'}],
         [],
         [{debug_line,914,398},
          {match,
              {914,5},
              {tuple,
                  {914,5},
                  [{atom,{914,5},b_blk},
                   {var,{914,5},'_'},
                   {var,{914,15},'Is'},
                   {var,{914,23},'Last'}]},
              {call,
                  {914,31},
                  {remote,
                      {914,31},
                      {atom,{914,31},erlang},
                      {atom,{914,31},map_get}},
                  [{var,{914,39},'Succ'},{var,{914,45},'Blocks'}]}},
          {debug_line,915,399},
          {'case',
              {915,5},
              {call,
                  {915,10},
                  {atom,{915,10},is_tagged_tuple_1},
                  [{var,{915,28},'Is'},
                   {var,{915,32},'Last'},
                   {var,{915,38},'Blocks'}]},
              [{clause,
                   {916,9},
                   [{tuple,
                        {916,9},
                        [{atom,{916,10},yes},
                         {var,{916,14},'Fail'},
                         {var,{916,19},'Tuple'},
                         {var,{916,25},'Arity'},
                         {var,{916,31},'Tag'}]}],
                   [],
                   [{debug_line,917,400},
                    {tuple,
                        {917,13},
                        [{atom,{917,14},yes},
                         {var,{917,18},'Arity'},
                         {var,{917,24},'Tag'}]}]},
               {clause,
                   {918,9},
                   [{var,{918,9},'_'}],
                   [],
                   [{debug_line,919,401},{atom,{919,13},no}]}]}]},
     {clause,
         {921,1},
         [{var,{921,17},'_'},
          {var,{921,20},'_'},
          {var,{921,23},'_'},
          {var,{921,26},'_'}],
         [],
         [{debug_line,921,402},{atom,{921,32},no}]}]}.
{function,
 {923,1},
 is_tagged_tuple_1,3,
 [{clause,
   {923,1},
   [{var,{923,1},'_'},{var,{923,1},'_'},{var,{923,1},'_'}],
   [[{call,
      {923,1},
      {remote,{923,1},{atom,{923,1},fake},{atom,{923,1},is_beam_bif_info}},
      []}]],
   [{debug_line,923,403},{atom,{923,1},ignore}]},
  {clause,
   {923,1},
   [{var,{923,19},'Is'},{var,{923,23},'Last'},{var,{923,29},'Blocks'}],
   [],
   [{debug_line,924,404},
    {'case',
     {924,5},
     {tuple,{924,10},[{var,{924,11},'Is'},{var,{924,14},'Last'}]},
     [{clause,
       {925,9},
       [{tuple,
         {925,9},
         [{cons,
           {925,10},
           {tuple,
            {925,11},
            [{atom,{925,11},b_set},
             {var,{925,11},'_'},
             {var,{925,42},'ArityVar'},
             {tuple,{925,21},[{atom,{925,22},bif},{atom,{925,26},tuple_size}]},
             {cons,
              {926,23},
              {match,
               {926,24},
               {tuple,{926,24},[{atom,{926,24},b_var},{var,{926,24},'_'}]},
               {var,{926,33},'Tuple'}},
              {nil,{926,38}}}]},
           {cons,
            {927,11},
            {tuple,
             {927,11},
             [{atom,{927,11},b_set},
              {var,{927,11},'_'},
              {var,{928,22},'Bool'},
              {tuple,{927,21},[{atom,{927,22},bif},{atom,{927,26},'=:='}]},
              {cons,
               {929,23},
               {var,{929,24},'ArityVar'},
               {cons,
                {929,34},
                {match,
                 {929,34},
                 {tuple,
                  {929,34},
                  [{atom,{929,34},b_literal},{var,{929,49},'ArityVal'}]},
                 {var,{929,59},'Arity'}},
                {nil,{929,64}}}}]},
            {nil,{929,66}}}},
          {tuple,
           {930,10},
           [{atom,{930,10},b_br},
            {var,{930,10},'_'},
            {var,{930,21},'Bool'},
            {var,{930,31},'Succ'},
            {var,{930,41},'Fail'}]}]}],
       [[{call,
          {931,16},
          {remote,{931,16},{atom,{931,16},erlang},{atom,{931,16},is_integer}},
          [{var,{931,27},'ArityVal'}]}]],
       [{debug_line,932,405},
        {match,
         {932,13},
         {var,{932,13},'SuccBlk'},
         {call,
          {932,23},
          {remote,{932,23},{atom,{932,23},erlang},{atom,{932,23},map_get}},
          [{var,{932,31},'Succ'},{var,{932,37},'Blocks'}]}},
        {debug_line,933,406},
        {'case',
         {933,13},
         {call,
          {933,18},
          {atom,{933,18},is_tagged_tuple_2},
          [{var,{933,36},'SuccBlk'},
           {var,{933,45},'Tuple'},
           {var,{933,52},'Fail'}]},
         [{clause,
           {934,17},
           [{atom,{934,17},no}],
           [],
           [{debug_line,935,407},{atom,{935,21},no}]},
          {clause,
           {936,17},
           [{tuple,{936,17},[{atom,{936,18},yes},{var,{936,22},'Tag'}]}],
           [],
           [{debug_line,937,408},
            {tuple,
             {937,21},
             [{atom,{937,22},yes},
              {var,{937,26},'Fail'},
              {var,{937,31},'Tuple'},
              {var,{937,37},'Arity'},
              {var,{937,43},'Tag'}]}]}]}]},
      {clause,
       {939,9},
       [{var,{939,9},'_'}],
       [],
       [{debug_line,940,409},{atom,{940,13},no}]}]}]}]}.
{function,
    {943,1},
    is_tagged_tuple_2,3,
    [{clause,
         {943,1},
         [{var,{943,1},'_'},{var,{943,1},'_'},{var,{943,1},'_'}],
         [[{call,
               {943,1},
               {remote,
                   {943,1},
                   {atom,{943,1},fake},
                   {atom,{943,1},is_beam_bif_info}},
               []}]],
         [{debug_line,943,410},{atom,{943,1},ignore}]},
     {clause,
         {943,1},
         [{tuple,
              {943,19},
              [{atom,{943,19},b_blk},
               {var,{943,19},'_'},
               {var,{943,29},'Is'},
               {tuple,
                   {944,31},
                   [{atom,{944,31},b_br},
                    {var,{944,31},'_'},
                    {match,
                        {944,42},
                        {tuple,
                            {944,42},
                            [{atom,{944,42},b_var},{var,{944,42},'_'}]},
                        {var,{944,51},'Bool'}},
                    {var,{944,31},'_'},
                    {var,{944,61},'Fail'}]}]},
          {var,{945,19},'Tuple'},
          {var,{945,26},'Fail'}],
         [],
         [{debug_line,946,411},
          {call,
              {946,5},
              {atom,{946,5},is_tagged_tuple_3},
              [{var,{946,23},'Is'},
               {var,{946,27},'Bool'},
               {var,{946,33},'Tuple'}]}]},
     {clause,
         {947,1},
         [{tuple,
              {947,19},
              [{atom,{947,19},b_blk},
               {var,{947,19},'_'},
               {var,{947,19},'_'},
               {var,{947,19},'_'}]},
          {var,{947,29},'_'},
          {var,{947,32},'_'}],
         [],
         [{debug_line,947,412},{atom,{947,38},no}]}]}.
{function,
    {949,1},
    is_tagged_tuple_3,3,
    [{clause,
         {949,1},
         [{var,{949,1},'_'},{var,{949,1},'_'},{var,{949,1},'_'}],
         [[{call,
               {949,1},
               {remote,
                   {949,1},
                   {atom,{949,1},fake},
                   {atom,{949,1},is_beam_bif_info}},
               []}]],
         [{debug_line,949,413},{atom,{949,1},ignore}]},
     {clause,
         {949,1},
         [{cons,
              {949,19},
              {tuple,
                  {949,20},
                  [{atom,{949,20},b_set},
                   {var,{949,20},'_'},
                   {var,{950,31},'TagVar'},
                   {atom,{949,30},get_tuple_element},
                   {cons,
                       {951,32},
                       {match,
                           {951,33},
                           {tuple,
                               {951,33},
                               [{atom,{951,33},b_var},{var,{951,33},'_'}]},
                           {var,{951,42},'Tuple'}},
                       {cons,
                           {951,48},
                           {tuple,
                               {951,48},
                               [{atom,{951,48},b_literal},
                                {integer,{951,63},0}]},
                           {nil,{951,65}}}}]},
              {var,{951,68},'Is'}},
          {var,{952,19},'Bool'},
          {var,{952,25},'Tuple'}],
         [],
         [{debug_line,953,414},
          {call,
              {953,5},
              {atom,{953,5},is_tagged_tuple_4},
              [{var,{953,23},'Is'},
               {var,{953,27},'Bool'},
               {var,{953,33},'TagVar'}]}]},
     {clause,
         {954,1},
         [{cons,{954,19},{var,{954,20},'_'},{var,{954,22},'Is'}},
          {var,{954,27},'Bool'},
          {var,{954,33},'Tuple'}],
         [],
         [{debug_line,955,415},
          {call,
              {955,5},
              {atom,{955,5},is_tagged_tuple_3},
              [{var,{955,23},'Is'},
               {var,{955,27},'Bool'},
               {var,{955,33},'Tuple'}]}]},
     {clause,
         {956,1},
         [{nil,{956,19}},{var,{956,23},'_'},{var,{956,26},'_'}],
         [],
         [{debug_line,956,416},{atom,{956,32},no}]}]}.
{function,
    {958,1},
    is_tagged_tuple_4,3,
    [{clause,
         {958,1},
         [{var,{958,1},'_'},{var,{958,1},'_'},{var,{958,1},'_'}],
         [[{call,
               {958,1},
               {remote,
                   {958,1},
                   {atom,{958,1},fake},
                   {atom,{958,1},is_beam_bif_info}},
               []}]],
         [{debug_line,958,417},{atom,{958,1},ignore}]},
     {clause,
         {958,1},
         [{cons,
              {958,19},
              {tuple,
                  {958,20},
                  [{atom,{958,20},b_set},
                   {var,{958,20},'_'},
                   {var,{958,46},'Bool'},
                   {tuple,
                       {958,30},
                       [{atom,{958,31},bif},{atom,{958,35},'=:='}]},
                   {cons,
                       {959,32},
                       {match,
                           {959,33},
                           {tuple,
                               {959,33},
                               [{atom,{959,33},b_var},{var,{959,33},'_'}]},
                           {var,{959,42},'TagVar'}},
                       {cons,
                           {960,33},
                           {match,
                               {960,33},
                               {tuple,
                                   {960,33},
                                   [{atom,{960,33},b_literal},
                                    {var,{960,48},'TagVal'}]},
                               {var,{960,56},'Tag'}},
                           {nil,{960,59}}}}]},
              {nil,{960,61}}},
          {var,{961,18},'Bool'},
          {var,{961,24},'TagVar'}],
         [[{call,
               {961,37},
               {remote,
                   {961,37},
                   {atom,{961,37},erlang},
                   {atom,{961,37},is_atom}},
               [{var,{961,45},'TagVal'}]}]],
         [{debug_line,962,418},
          {tuple,{962,5},[{atom,{962,6},yes},{var,{962,10},'Tag'}]}]},
     {clause,
         {963,1},
         [{cons,{963,19},{var,{963,20},'_'},{var,{963,22},'Is'}},
          {var,{963,27},'Bool'},
          {var,{963,33},'TagVar'}],
         [],
         [{debug_line,964,419},
          {call,
              {964,5},
              {atom,{964,5},is_tagged_tuple_4},
              [{var,{964,23},'Is'},
               {var,{964,27},'Bool'},
               {var,{964,33},'TagVar'}]}]},
     {clause,
         {965,1},
         [{nil,{965,19}},{var,{965,23},'_'},{var,{965,26},'_'}],
         [],
         [{debug_line,965,420},{atom,{965,32},no}]}]}.
{function,
 {971,1},
 ssa_opt_update_tuple,1,
 [{clause,
   {971,1},
   [{var,{971,1},'_'}],
   [[{call,
      {971,1},
      {remote,{971,1},{atom,{971,1},fake},{atom,{971,1},is_beam_bif_info}},
      []}]],
   [{debug_line,971,421},{atom,{971,1},ignore}]},
  {clause,
   {971,1},
   [{tuple,
     {971,22},
     [{match,
       {971,23},
       {tuple,
        {971,23},
        [{atom,{971,23},opt_st},
         {var,{971,35},'Linear0'},
         {var,{971,23},'_'},
         {var,{971,23},'_'},
         {var,{971,23},'_'}]},
       {var,{971,44},'St'}},
      {var,{971,48},'FuncDb'}]}],
   [],
   [{debug_line,972,422},
    {tuple,
     {972,5},
     [{block,
       {972,6},
       [{match,
         {972,16},
         {var,{972,16},rec56},
         {call,
          {972,20},
          {atom,{972,20},update_tuple_opt},
          [{var,{972,37},'Linear0'},{block,0,[{map,{972,46},[]}]}]}},
        {match,{972,6},{var,{972,6},rec57},{var,{972,6},'St'}},
        {'case',
         {972,16},
         {var,{972,6},rec57},
         [{clause,
           {972,16},
           [{tuple,
             {972,16},
             [{atom,{972,16},opt_st},
              {var,{972,16},'_'},
              {var,{972,16},'_'},
              {var,{972,16},'_'},
              {var,{972,16},'_'}]}],
           [],
           [{call,
             {972,16},
             {remote,
              {972,16},
              {atom,{972,16},erlang},
              {atom,{972,16},setelement}},
             [{integer,{972,16},2},
              {var,{972,6},rec57},
              {var,{972,16},rec56}]}]},
          {clause,
           [{generated,true},{location,{972,16}}],
           [{var,[{generated,true},{location,{972,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{972,16}}],
             {remote,
              [{generated,true},{location,{972,16}}],
              {atom,[{generated,true},{location,{972,16}}],erlang},
              {atom,[{generated,true},{location,{972,16}}],error}},
             [{tuple,
               [{generated,true},{location,{972,16}}],
               [{atom,[{generated,true},{location,{972,16}}],badrecord},
                {var,{972,6},rec57}]}]}]}]}]},
      {var,{972,53},'FuncDb'}]}]}]}.
{function,
 {974,1},
 update_tuple_opt,2,
 [{clause,
   {974,1},
   [{var,{974,1},'_'},{var,{974,1},'_'}],
   [[{call,
      {974,1},
      {remote,{974,1},{atom,{974,1},fake},{atom,{974,1},is_beam_bif_info}},
      []}]],
   [{debug_line,974,423},{atom,{974,1},ignore}]},
  {clause,
   {974,1},
   [{cons,
     {974,18},
     {tuple,
      {974,19},
      [{var,{974,20},'L'},
       {match,
        {974,23},
        {tuple,
         {974,23},
         [{atom,{974,23},b_blk},
          {var,{974,23},'_'},
          {var,{974,33},'Is0'},
          {var,{974,23},'_'}]},
        {var,{974,38},'B'}}]},
     {var,{974,43},'Bs'}},
    {var,{974,48},'SetOps0'}],
   [],
   [{debug_line,975,424},
    {match,
     {975,5},
     {tuple,{975,5},[{var,{975,6},'Is'},{var,{975,10},'SetOps'}]},
     {call,
      {975,20},
      {atom,{975,20},update_tuple_opt_is},
      [{var,{975,40},'Is0'},{var,{975,45},'SetOps0'},{nil,{975,54}}]}},
    {debug_line,976,425},
    {cons,
     {976,5},
     {tuple,
      {976,6},
      [{var,{976,7},'L'},
       {block,
        {976,10},
        [{match,{976,10},{var,{976,10},rec58},{var,{976,10},'B'}},
         {'case',
          {976,18},
          {var,{976,10},rec58},
          [{clause,
            {976,18},
            [{tuple,
              {976,18},
              [{atom,{976,18},b_blk},
               {var,{976,18},'_'},
               {var,{976,18},'_'},
               {var,{976,18},'_'}]}],
            [],
            [{call,
              {976,18},
              {remote,
               {976,18},
               {atom,{976,18},erlang},
               {atom,{976,18},setelement}},
              [{integer,{976,18},3},
               {var,{976,10},rec58},
               {var,{976,21},'Is'}]}]},
           {clause,
            [{generated,true},{location,{976,18}}],
            [{var,[{generated,true},{location,{976,18}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{976,18}}],
              {remote,
               [{generated,true},{location,{976,18}}],
               {atom,[{generated,true},{location,{976,18}}],erlang},
               {atom,[{generated,true},{location,{976,18}}],error}},
              [{tuple,
                [{generated,true},{location,{976,18}}],
                [{atom,[{generated,true},{location,{976,18}}],badrecord},
                 {var,{976,10},rec58}]}]}]}]}]}]},
     {call,
      {976,28},
      {atom,{976,28},update_tuple_opt},
      [{var,{976,45},'Bs'},{var,{976,49},'SetOps'}]}}]},
  {clause,
   {977,1},
   [{nil,{977,18}},{var,{977,22},'_SetOps'}],
   [],
   [{debug_line,978,426},{nil,{978,5}}]}]}.
{function,
 {980,1},
 update_tuple_opt_is,3,
 [{clause,
   {980,1},
   [{var,{980,1},'_'},{var,{980,1},'_'},{var,{980,1},'_'}],
   [[{call,
      {980,1},
      {remote,{980,1},{atom,{980,1},fake},{atom,{980,1},is_beam_bif_info}},
      []}]],
   [{debug_line,980,427},{atom,{980,1},ignore}]},
  {clause,
   {980,1},
   [{cons,
     {980,21},
     {match,
      {980,22},
      {tuple,
       {980,22},
       [{atom,{980,22},b_set},
        {var,{980,22},'_'},
        {var,{981,33},'Dst'},
        {atom,{980,32},call},
        {cons,
         {982,34},
         {tuple,
          {982,35},
          [{atom,{982,35},b_remote},
           {tuple,{982,49},[{atom,{982,49},b_literal},{atom,{982,64},erlang}]},
           {tuple,
            {983,50},
            [{atom,{983,50},b_literal},{atom,{983,65},setelement}]},
           {var,{982,35},'_'}]},
         {cons,
          {984,35},
          {match,
           {984,35},
           {tuple,{984,35},[{atom,{984,35},b_literal},{var,{984,50},'N'}]},
           {var,{984,53},'Index'}},
          {cons,
           {985,35},
           {var,{985,35},'Src'},
           {cons,{986,35},{var,{986,35},'Value'},{nil,{986,40}}}}}}]},
      {var,{986,43},'I0'}},
     {var,{986,48},'Is'}},
    {var,{987,19},'SetOps0'},
    {var,{987,28},'Acc'}],
   [[{call,
      {987,38},
      {remote,{987,38},{atom,{987,38},erlang},{atom,{987,38},is_integer}},
      [{var,{987,49},'N'}]},
     {op,{987,55},'>=',{var,{987,53},'N'},{integer,{987,58},1}}]],
   [{debug_line,988,428},
    {match,
     {988,5},
     {var,{988,5},'SetOps1'},
     {map,
      {988,22},
      {var,{988,15},'SetOps0'},
      [{map_field_assoc,
        {988,29},
        {var,{988,25},'Dst'},
        {tuple,
         {988,32},
         [{var,{988,33},'Src'},
          {var,{988,38},'Index'},
          {var,{988,45},'Value'}]}}]}},
    {debug_line,989,429},
    {match,
     {989,5},
     {var,{989,5},'SetOps'},
     {call,
      {989,14},
      {remote,{989,18},{atom,{989,14},maps},{atom,{989,19},remove}},
      [{var,{989,26},'Value'},{var,{989,33},'SetOps1'}]}},
    {debug_line,991,430},
    {match,
     {991,5},
     {var,{991,5},'Args'},
     {call,
      {991,12},
      {atom,{991,12},update_tuple_merge},
      [{var,{991,31},'Src'},
       {var,{991,36},'SetOps'},
       {block,0,
        [{cons,
          {991,44},
          {var,{991,45},'Index'},
          {cons,{991,52},{var,{991,52},'Value'},{nil,{991,57}}}}]},
       {block,0,
        [{debug_line,992,431},
         {call,
          {992,31},
          {remote,{992,35},{atom,{992,31},sets},{atom,{992,36},new}},
          [{block,0,
            [{cons,
              {992,40},
              {tuple,{992,41},[{atom,{992,42},version},{integer,{992,50},2}]},
              {nil,{992,52}}}]}]}]}]}},
    {debug_line,993,432},
    {match,
     {993,5},
     {var,{993,5},'I'},
     {block,
      {993,9},
      [{match,{993,9},{var,{993,9},rec59},{var,{993,9},'I0'}},
       {'case',
        {993,34},
        {var,{993,9},rec59},
        [{clause,
          {993,34},
          [{tuple,
            {993,34},
            [{atom,{993,34},b_set},
             {var,{993,34},'_'},
             {var,{993,34},'_'},
             {var,{993,34},'_'},
             {var,{993,34},'_'}]}],
          [],
          [{call,
            {993,34},
            {remote,
             {993,34},
             {atom,{993,34},erlang},
             {atom,{993,34},setelement}},
            [{integer,{993,34},3},
             {call,
              {993,18},
              {remote,
               {993,18},
               {atom,{993,18},erlang},
               {atom,{993,18},setelement}},
              [{integer,{993,18},4},
               {call,
                {993,42},
                {remote,
                 {993,42},
                 {atom,{993,42},erlang},
                 {atom,{993,42},setelement}},
                [{integer,{993,42},5},
                 {var,{993,9},rec59},
                 {var,{993,47},'Args'}]},
               {atom,{993,21},update_tuple}]},
             {var,{993,38},'Dst'}]}]},
         {clause,
          [{generated,true},{location,{993,34}}],
          [{var,[{generated,true},{location,{993,34}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{993,34}}],
            {remote,
             [{generated,true},{location,{993,34}}],
             {atom,[{generated,true},{location,{993,34}}],erlang},
             {atom,[{generated,true},{location,{993,34}}],error}},
            [{tuple,
              [{generated,true},{location,{993,34}}],
              [{atom,[{generated,true},{location,{993,34}}],badrecord},
               {var,{993,9},rec59}]}]}]}]}]}},
    {debug_line,995,433},
    {call,
     {995,5},
     {atom,{995,5},update_tuple_opt_is},
     [{var,{995,25},'Is'},
      {var,{995,29},'SetOps'},
      {block,0,[{cons,{995,37},{var,{995,38},'I'},{var,{995,42},'Acc'}}]}]}]},
  {clause,
   {996,1},
   [{cons,
     {996,21},
     {match,
      {996,22},
      {tuple,
       {996,22},
       [{atom,{996,22},b_set},
        {var,{996,22},'_'},
        {var,{996,22},'_'},
        {var,{996,32},'Op'},
        {var,{996,22},'_'}]},
      {var,{996,36},'I'}},
     {var,{996,40},'Is'}},
    {var,{996,45},'SetOps0'},
    {var,{996,54},'Acc'}],
   [],
   [{debug_line,997,434},
    {'case',
     {997,5},
     {tuple,
      {997,10},
      [{var,{997,11},'Op'},
       {call,
        {997,15},
        {remote,
         {997,23},
         {atom,{997,15},beam_ssa},
         {atom,{997,24},clobbers_xregs}},
        [{var,{997,39},'I'}]}]},
     [{clause,
       {998,9},
       [{tuple,{998,9},[{var,{998,10},'_'},{atom,{998,13},true}]}],
       [],
       [{debug_line,1002,435},
        {call,
         {1002,13},
         {atom,{1002,13},update_tuple_opt_is},
         [{var,{1002,33},'Is'},
          {block,0,[{map,{1002,37},[]}]},
          {block,0,
           [{cons,{1002,42},{var,{1002,43},'I'},{var,{1002,47},'Acc'}}]}]}]},
      {clause,
       {1003,9},
       [{tuple,
         {1003,9},
         [{tuple,{1003,10},[{atom,{1003,11},succeeded},{var,{1003,22},'_'}]},
          {atom,{1003,26},false}]}],
       [],
       [{debug_line,1006,436},
        {call,
         {1006,13},
         {atom,{1006,13},update_tuple_opt_is},
         [{var,{1006,33},'Is'},
          {var,{1006,37},'SetOps0'},
          {block,0,
           [{cons,{1006,46},{var,{1006,47},'I'},{var,{1006,51},'Acc'}}]}]}]},
      {clause,
       {1007,9},
       [{tuple,{1007,9},[{var,{1007,10},'_'},{atom,{1007,13},false}]}],
       [],
       [{debug_line,1010,437},
        {match,
         {1010,13},
         {var,{1010,13},'SetOps'},
         {call,
          {1010,22},
          {remote,{1010,26},{atom,{1010,22},maps},{atom,{1010,27},without}},
          [{block,0,
            [{call,
              {1010,35},
              {remote,
               {1010,43},
               {atom,{1010,35},beam_ssa},
               {atom,{1010,44},used}},
              [{var,{1010,49},'I'}]}]},
           {var,{1010,53},'SetOps0'}]}},
        {debug_line,1011,438},
        {call,
         {1011,13},
         {atom,{1011,13},update_tuple_opt_is},
         [{var,{1011,33},'Is'},
          {var,{1011,37},'SetOps'},
          {block,0,
           [{cons,
             {1011,45},
             {var,{1011,46},'I'},
             {var,{1011,50},'Acc'}}]}]}]}]}]},
  {clause,
   {1013,1},
   [{nil,{1013,21}},{var,{1013,25},'SetOps'},{var,{1013,33},'Acc'}],
   [],
   [{debug_line,1014,439},
    {tuple,
     {1014,5},
     [{call,
       {1014,6},
       {remote,{1014,6},{atom,{1014,6},lists},{atom,{1014,6},reverse}},
       [{var,{1014,14},'Acc'}]},
      {var,{1014,20},'SetOps'}]}]}]}.
{function,
 {1016,1},
 update_tuple_merge,4,
 [{clause,
   {1016,1},
   [{var,{1016,1},'_'},
    {var,{1016,1},'_'},
    {var,{1016,1},'_'},
    {var,{1016,1},'_'}],
   [[{call,
      {1016,1},
      {remote,{1016,1},{atom,{1016,1},fake},{atom,{1016,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1016,440},{atom,{1016,1},ignore}]},
  {clause,
   {1016,1},
   [{var,{1016,20},'Src'},
    {var,{1016,25},'SetOps'},
    {var,{1016,33},'Updates0'},
    {var,{1016,43},'Seen0'}],
   [],
   [{debug_line,1019,441},
    {'case',
     {1019,5},
     {var,{1019,10},'SetOps'},
     [{clause,
       {1020,9},
       [{map,
         {1020,9},
         [{map_field_exact,
           {1020,16},
           {var,{1020,12},'Src'},
           {tuple,
            {1020,19},
            [{var,{1020,20},'Ancestor'},
             {var,{1020,30},'Index'},
             {var,{1020,37},'Value'}]}}]}],
       [],
       [{debug_line,1024,442},
        {match,
         {1024,13},
         {var,{1024,13},'Updates'},
         {'case',
          {1024,23},
          {call,
           {1024,28},
           {remote,
            {1024,32},
            {atom,{1024,28},sets},
            {atom,{1024,33},is_element}},
           [{var,{1024,44},'Index'},{var,{1024,51},'Seen0'}]},
          [{clause,
            {1025,27},
            [{atom,{1025,27},false}],
            [],
            [{debug_line,1025,443},
             {cons,
              {1025,36},
              {var,{1025,37},'Index'},
              {cons,
               {1025,44},
               {var,{1025,44},'Value'},
               {var,{1025,52},'Updates0'}}}]},
           {clause,
            {1026,27},
            [{atom,{1026,27},true}],
            [],
            [{debug_line,1026,444},{var,{1026,35},'Updates0'}]}]}},
        {debug_line,1028,445},
        {match,
         {1028,13},
         {var,{1028,13},'Seen'},
         {call,
          {1028,20},
          {remote,
           {1028,24},
           {atom,{1028,20},sets},
           {atom,{1028,25},add_element}},
          [{var,{1028,37},'Index'},{var,{1028,44},'Seen0'}]}},
        {debug_line,1029,446},
        {call,
         {1029,13},
         {atom,{1029,13},update_tuple_merge},
         [{var,{1029,32},'Ancestor'},
          {var,{1029,42},'SetOps'},
          {var,{1029,50},'Updates'},
          {var,{1029,59},'Seen'}]}]},
      {clause,
       {1030,9},
       [{map,{1030,9},[]}],
       [],
       [{debug_line,1031,447},
        {cons,
         {1031,13},
         {var,{1031,14},'Src'},
         {var,{1031,20},'Updates0'}}]}]}]}]}.
{function,
 {1042,1},
 ssa_opt_cse,1,
 [{clause,
   {1042,1},
   [{var,{1042,1},'_'}],
   [[{call,
      {1042,1},
      {remote,{1042,1},{atom,{1042,1},fake},{atom,{1042,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1042,448},{atom,{1042,1},ignore}]},
  {clause,
   {1042,1},
   [{tuple,
     {1042,13},
     [{match,
       {1042,14},
       {tuple,
        {1042,14},
        [{atom,{1042,14},opt_st},
         {var,{1042,26},'Linear0'},
         {var,{1042,14},'_'},
         {var,{1042,14},'_'},
         {var,{1042,14},'_'}]},
       {var,{1042,35},'St'}},
      {var,{1042,39},'FuncDb'}]}],
   [],
   [{debug_line,1043,449},
    {match,
     {1043,5},
     {var,{1043,5},'M'},
     {map,
      {1043,9},
      [{map_field_assoc,{1043,13},{integer,{1043,11},0},{map,{1043,16},[]}},
       {map_field_assoc,{1043,38},{integer,{1043,22},1},{map,{1043,41},[]}}]}},
    {debug_line,1044,450},
    {match,
     {1044,5},
     {var,{1044,5},'Linear1'},
     {call,
      {1044,15},
      {atom,{1044,15},cse},
      [{var,{1044,19},'Linear0'},
       {block,0,[{map,{1044,28},[]}]},
       {var,{1044,33},'M'}]}},
    {debug_line,1045,451},
    {match,
     {1045,5},
     {var,{1045,5},'Linear'},
     {call,
      {1045,14},
      {remote,
       {1045,22},
       {atom,{1045,14},beam_ssa},
       {atom,{1045,23},trim_unreachable}},
      [{var,{1045,40},'Linear1'}]}},
    {debug_line,1046,452},
    {tuple,
     {1046,5},
     [{block,
       {1046,6},
       [{match,{1046,6},{var,{1046,6},rec60},{var,{1046,6},'St'}},
        {'case',
         {1046,16},
         {var,{1046,6},rec60},
         [{clause,
           {1046,16},
           [{tuple,
             {1046,16},
             [{atom,{1046,16},opt_st},
              {var,{1046,16},'_'},
              {var,{1046,16},'_'},
              {var,{1046,16},'_'},
              {var,{1046,16},'_'}]}],
           [],
           [{call,
             {1046,16},
             {remote,
              {1046,16},
              {atom,{1046,16},erlang},
              {atom,{1046,16},setelement}},
             [{integer,{1046,16},2},
              {var,{1046,6},rec60},
              {var,{1046,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{1046,16}}],
           [{var,[{generated,true},{location,{1046,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1046,16}}],
             {remote,
              [{generated,true},{location,{1046,16}}],
              {atom,[{generated,true},{location,{1046,16}}],erlang},
              {atom,[{generated,true},{location,{1046,16}}],error}},
             [{tuple,
               [{generated,true},{location,{1046,16}}],
               [{atom,[{generated,true},{location,{1046,16}}],badrecord},
                {var,{1046,6},rec60}]}]}]}]}]},
      {var,{1046,29},'FuncDb'}]}]}]}.
{function,
 {1048,1},
 cse,3,
 [{clause,
   {1048,1},
   [{var,{1048,1},'_'},{var,{1048,1},'_'},{var,{1048,1},'_'}],
   [[{call,
      {1048,1},
      {remote,{1048,1},{atom,{1048,1},fake},{atom,{1048,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1048,453},{atom,{1048,1},ignore}]},
  {clause,
   {1048,1},
   [{cons,
     {1048,5},
     {tuple,
      {1048,6},
      [{var,{1048,7},'L'},
       {match,
        {1048,9},
        {tuple,
         {1048,9},
         [{atom,{1048,9},b_blk},
          {var,{1048,9},'_'},
          {var,{1048,19},'Is0'},
          {var,{1048,28},'Last0'}]},
        {var,{1048,35},'Blk0'}}]},
     {var,{1048,41},'Bs'}},
    {var,{1048,46},'Sub0'},
    {var,{1048,52},'M0'}],
   [],
   [{debug_line,1049,454},
    {'case',
     {1049,5},
     {var,{1049,10},'M0'},
     [{clause,
       {1050,9},
       [{map,
         {1050,9},
         [{map_field_exact,
           {1050,13},
           {var,{1050,11},'L'},
           {var,{1050,16},'Es0'}}]}],
       [],
       [{debug_line,1051,455},
        {match,
         {1051,13},
         {tuple,
          {1051,13},
          [{var,{1051,14},'Is1'},{var,{1051,18},'Es'},{var,{1051,21},'Sub'}]},
         {call,
          {1051,28},
          {atom,{1051,28},cse_is},
          [{var,{1051,35},'Is0'},
           {var,{1051,40},'Es0'},
           {var,{1051,45},'Sub0'},
           {nil,{1051,51}}]}},
        {debug_line,1052,456},
        {match,
         {1052,13},
         {var,{1052,13},'Last'},
         {call,
          {1052,20},
          {atom,{1052,20},sub},
          [{var,{1052,24},'Last0'},{var,{1052,31},'Sub'}]}},
        {debug_line,1053,457},
        {match,
         {1053,13},
         {var,{1053,13},'Blk'},
         {block,
          {1053,19},
          [{match,{1053,19},{var,{1053,19},rec61},{var,{1053,19},'Blk0'}},
           {'case',
            {1053,30},
            {var,{1053,19},rec61},
            [{clause,
              {1053,30},
              [{tuple,
                {1053,30},
                [{atom,{1053,30},b_blk},
                 {var,{1053,30},'_'},
                 {var,{1053,30},'_'},
                 {var,{1053,30},'_'}]}],
              [],
              [{call,
                {1053,30},
                {remote,
                 {1053,30},
                 {atom,{1053,30},erlang},
                 {atom,{1053,30},setelement}},
                [{integer,{1053,30},4},
                 {var,{1053,19},rec61},
                 {var,{1053,35},'Last'}]}]},
             {clause,
              [{generated,true},{location,{1053,30}}],
              [{var,[{generated,true},{location,{1053,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1053,30}}],
                {remote,
                 [{generated,true},{location,{1053,30}}],
                 {atom,[{generated,true},{location,{1053,30}}],erlang},
                 {atom,[{generated,true},{location,{1053,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{1053,30}}],
                  [{atom,[{generated,true},{location,{1053,30}}],badrecord},
                   {var,{1053,19},rec61}]}]}]}]}]}},
        {debug_line,1054,458},
        {match,
         {1054,13},
         {var,{1054,13},'M'},
         {call,
          {1054,17},
          {atom,{1054,17},cse_successors},
          [{var,{1054,32},'Is1'},
           {var,{1054,37},'Blk'},
           {var,{1054,42},'Es'},
           {var,{1054,46},'M0'}]}},
        {debug_line,1055,459},
        {match,
         {1055,13},
         {var,{1055,13},'Is'},
         {call,
          {1055,18},
          {remote,{1055,18},{atom,{1055,18},lists},{atom,{1055,18},reverse}},
          [{var,{1055,26},'Is1'}]}},
        {debug_line,1056,460},
        {cons,
         {1056,13},
         {tuple,
          {1056,14},
          [{var,{1056,15},'L'},
           {block,
            {1056,17},
            [{match,{1056,17},{var,{1056,17},rec62},{var,{1056,17},'Blk'}},
             {'case',
              {1056,27},
              {var,{1056,17},rec62},
              [{clause,
                {1056,27},
                [{tuple,
                  {1056,27},
                  [{atom,{1056,27},b_blk},
                   {var,{1056,27},'_'},
                   {var,{1056,27},'_'},
                   {var,{1056,27},'_'}]}],
                [],
                [{call,
                  {1056,27},
                  {remote,
                   {1056,27},
                   {atom,{1056,27},erlang},
                   {atom,{1056,27},setelement}},
                  [{integer,{1056,27},3},
                   {call,
                    {1056,33},
                    {remote,
                     {1056,33},
                     {atom,{1056,33},erlang},
                     {atom,{1056,33},setelement}},
                    [{integer,{1056,33},4},
                     {var,{1056,17},rec62},
                     {var,{1056,38},'Last'}]},
                   {var,{1056,30},'Is'}]}]},
               {clause,
                [{generated,true},{location,{1056,27}}],
                [{var,[{generated,true},{location,{1056,27}}],'_'}],
                [],
                [{call,
                  [{generated,true},{location,{1056,27}}],
                  {remote,
                   [{generated,true},{location,{1056,27}}],
                   {atom,[{generated,true},{location,{1056,27}}],erlang},
                   {atom,[{generated,true},{location,{1056,27}}],error}},
                  [{tuple,
                    [{generated,true},{location,{1056,27}}],
                    [{atom,[{generated,true},{location,{1056,27}}],badrecord},
                     {var,{1056,17},rec62}]}]}]}]}]}]},
         {call,
          {1056,45},
          {atom,{1056,45},cse},
          [{var,{1056,49},'Bs'},{var,{1056,53},'Sub'},{var,{1056,58},'M'}]}}]},
      {clause,
       {1057,9},
       [{map,{1057,9},[]}],
       [],
       [{debug_line,1059,461},
        {call,
         {1059,13},
         {atom,{1059,13},cse},
         [{var,{1059,17},'Bs'},
          {var,{1059,21},'Sub0'},
          {var,{1059,27},'M0'}]}]}]}]},
  {clause,
   {1061,1},
   [{nil,{1061,5}},{var,{1061,9},'_'},{var,{1061,12},'_'}],
   [],
   [{debug_line,1061,462},{nil,{1061,18}}]}]}.
{function,
    {1063,1},
    cse_successors,4,
    [{clause,
         {1063,1},
         [{var,{1063,1},'_'},
          {var,{1063,1},'_'},
          {var,{1063,1},'_'},
          {var,{1063,1},'_'}],
         [[{call,
               {1063,1},
               {remote,
                   {1063,1},
                   {atom,{1063,1},fake},
                   {atom,{1063,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1063,463},{atom,{1063,1},ignore}]},
     {clause,
         {1063,1},
         [{cons,
              {1063,16},
              {tuple,
                  {1063,17},
                  [{atom,{1063,17},b_set},
                   {var,{1063,17},'_'},
                   {var,{1063,17},'_'},
                   {tuple,
                       {1063,27},
                       [{atom,{1063,28},succeeded},{var,{1063,38},'_'}]},
                   {cons,{1063,46},{var,{1063,47},'Src'},{nil,{1063,50}}}]},
              {cons,{1063,53},{var,{1063,53},'Bif'},{var,{1063,57},'_'}}},
          {var,{1063,61},'Blk'},
          {var,{1063,66},'EsSucc'},
          {var,{1063,74},'M0'}],
         [],
         [{debug_line,1064,464},
          {'case',
              {1064,5},
              {call,
                  {1064,10},
                  {atom,{1064,10},cse_suitable},
                  [{var,{1064,23},'Bif'}]},
              [{clause,
                   {1065,9},
                   [{atom,{1065,9},true}],
                   [],
                   [{debug_line,1068,465},
                    {match,
                        {1068,13},
                        {tuple,
                            {1068,13},
                            [{atom,{1068,13},b_blk},
                             {var,{1068,13},'_'},
                             {var,{1068,13},'_'},
                             {tuple,
                                 {1068,25},
                                 [{atom,{1068,25},b_br},
                                  {var,{1068,25},'_'},
                                  {var,{1068,25},'_'},
                                  {var,{1068,36},'Succ'},
                                  {var,{1068,46},'Fail'}]}]},
                        {var,{1068,55},'Blk'}},
                    {debug_line,1069,466},
                    {match,
                        {1069,13},
                        {var,{1069,13},'M1'},
                        {call,
                            {1069,18},
                            {atom,{1069,18},cse_successors_1},
                            [{block,0,
                                 [{cons,
                                      {1069,35},
                                      {var,{1069,36},'Succ'},
                                      {nil,{1069,40}}}]},
                             {var,{1069,43},'EsSucc'},
                             {var,{1069,51},'M0'}]}},
                    {debug_line,1070,467},
                    {call,
                        {1070,13},
                        {atom,{1070,13},cse_successor_fail},
                        [{var,{1070,32},'Fail'},
                         {var,{1070,38},'Src'},
                         {var,{1070,43},'EsSucc'},
                         {var,{1070,51},'M1'}]}]},
               {clause,
                   {1071,9},
                   [{atom,{1071,9},false}],
                   [],
                   [{debug_line,1074,468},
                    {call,
                        {1074,13},
                        {atom,{1074,13},cse_successors_1},
                        [{block,0,
                             [{call,
                                  {1074,30},
                                  {remote,
                                      {1074,38},
                                      {atom,{1074,30},beam_ssa},
                                      {atom,{1074,39},successors}},
                                  [{var,{1074,50},'Blk'}]}]},
                         {var,{1074,56},'EsSucc'},
                         {var,{1074,64},'M0'}]}]}]}]},
     {clause,
         {1076,1},
         [{var,{1076,16},'_Is'},
          {var,{1076,21},'Blk'},
          {var,{1076,26},'Es'},
          {var,{1076,30},'M'}],
         [],
         [{debug_line,1077,469},
          {call,
              {1077,5},
              {atom,{1077,5},cse_successors_1},
              [{block,0,
                   [{call,
                        {1077,22},
                        {remote,
                            {1077,30},
                            {atom,{1077,22},beam_ssa},
                            {atom,{1077,31},successors}},
                        [{var,{1077,42},'Blk'}]}]},
               {var,{1077,48},'Es'},
               {var,{1077,52},'M'}]}]}]}.
{function,
    {1079,1},
    cse_successors_1,3,
    [{clause,
         {1079,1},
         [{var,{1079,1},'_'},{var,{1079,1},'_'},{var,{1079,1},'_'}],
         [[{call,
               {1079,1},
               {remote,
                   {1079,1},
                   {atom,{1079,1},fake},
                   {atom,{1079,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1079,470},{atom,{1079,1},ignore}]},
     {clause,
         {1079,1},
         [{cons,{1079,18},{var,{1079,19},'L'},{var,{1079,21},'Ls'}},
          {var,{1079,26},'Es0'},
          {var,{1079,31},'M'}],
         [],
         [{debug_line,1080,471},
          {'case',
              {1080,5},
              {var,{1080,10},'M'},
              [{clause,
                   {1081,9},
                   [{map,
                        {1081,9},
                        [{map_field_exact,
                             {1081,12},
                             {var,{1081,11},'L'},
                             {var,{1081,14},'Es1'}}]}],
                   [[{op,{1081,38},
                         '=:=',
                         {call,
                             {1081,24},
                             {remote,
                                 {1081,24},
                                 {atom,{1081,24},erlang},
                                 {atom,{1081,24},map_size}},
                             [{var,{1081,33},'Es1'}]},
                         {integer,{1081,42},0}}]],
                   [{debug_line,1084,472},
                    {call,
                        {1084,13},
                        {atom,{1084,13},cse_successors_1},
                        [{var,{1084,30},'Ls'},
                         {var,{1084,34},'Es0'},
                         {var,{1084,39},'M'}]}]},
               {clause,
                   {1085,9},
                   [{map,
                        {1085,9},
                        [{map_field_exact,
                             {1085,12},
                             {var,{1085,11},'L'},
                             {var,{1085,14},'Es1'}}]}],
                   [],
                   [{debug_line,1086,473},
                    {match,
                        {1086,13},
                        {var,{1086,13},'Es'},
                        {call,
                            {1086,18},
                            {atom,{1086,18},cse_intersection},
                            [{var,{1086,35},'Es0'},{var,{1086,40},'Es1'}]}},
                    {debug_line,1087,474},
                    {call,
                        {1087,13},
                        {atom,{1087,13},cse_successors_1},
                        [{var,{1087,30},'Ls'},
                         {var,{1087,34},'Es0'},
                         {block,0,
                             [{map,
                                  {1087,40},
                                  {var,{1087,39},'M'},
                                  [{map_field_exact,
                                       {1087,43},
                                       {var,{1087,42},'L'},
                                       {var,{1087,45},'Es'}}]}]}]}]},
               {clause,
                   {1088,9},
                   [{map,{1088,9},[]}],
                   [],
                   [{debug_line,1089,475},
                    {call,
                        {1089,13},
                        {atom,{1089,13},cse_successors_1},
                        [{var,{1089,30},'Ls'},
                         {var,{1089,34},'Es0'},
                         {block,0,
                             [{map,
                                  {1089,40},
                                  {var,{1089,39},'M'},
                                  [{map_field_assoc,
                                       {1089,43},
                                       {var,{1089,42},'L'},
                                       {var,{1089,45},'Es0'}}]}]}]}]}]}]},
     {clause,
         {1091,1},
         [{nil,{1091,18}},{var,{1091,22},'_'},{var,{1091,25},'M'}],
         [],
         [{debug_line,1091,476},{var,{1091,31},'M'}]}]}.
{function,
    {1093,1},
    cse_successor_fail,4,
    [{clause,
         {1093,1},
         [{var,{1093,1},'_'},
          {var,{1093,1},'_'},
          {var,{1093,1},'_'},
          {var,{1093,1},'_'}],
         [[{call,
               {1093,1},
               {remote,
                   {1093,1},
                   {atom,{1093,1},fake},
                   {atom,{1093,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1093,477},{atom,{1093,1},ignore}]},
     {clause,
         {1093,1},
         [{var,{1093,20},'Fail'},
          {var,{1093,26},'Src'},
          {var,{1093,31},'LHS0'},
          {var,{1093,37},'M'}],
         [],
         [{debug_line,1094,478},
          {'case',
              {1094,5},
              {var,{1094,10},'M'},
              [{clause,
                   {1095,9},
                   [{map,
                        {1095,9},
                        [{map_field_exact,
                             {1095,16},
                             {var,{1095,11},'Fail'},
                             {var,{1095,19},'RHS'}}]}],
                   [[{op,{1095,43},
                         '=:=',
                         {call,
                             {1095,29},
                             {remote,
                                 {1095,29},
                                 {atom,{1095,29},erlang},
                                 {atom,{1095,29},map_size}},
                             [{var,{1095,38},'RHS'}]},
                         {integer,{1095,47},0}}]],
                   [{debug_line,1096,479},{var,{1096,13},'M'}]},
               {clause,
                   {1097,9},
                   [{map,
                        {1097,9},
                        [{map_field_exact,
                             {1097,16},
                             {var,{1097,11},'Fail'},
                             {var,{1097,19},'RHS'}}]}],
                   [],
                   [{debug_line,1098,480},
                    {match,
                        {1098,13},
                        {var,{1098,13},'LHS'},
                        {mc,{1098,19},
                            {map_field_assoc,
                                {1098,25},
                                {block,0,[{var,{1098,21},'Var'}]},
                                {block,0,[{var,{1098,28},'Val'}]}},
                            [{block,0,[{atom,{1098,49},true}]},
                             {m_generate,
                                 {1098,46},
                                 {map_field_exact,
                                     {1098,39},
                                     {var,{1098,35},'Var'},
                                     {var,{1098,42},'Val'}},
                                 {var,{1098,49},'LHS0'}},
                             {block,0,
                                 [{debug_line,1099,481},
                                  {atom,{1099,35},true}]},
                             {call,
                                 {1099,35},
                                 {remote,
                                     {1099,35},
                                     {atom,{1099,35},erlang},
                                     {atom,{1099,35},is_map_key}},
                                 [{var,{1099,46},'Var'},
                                  {var,{1099,51},'RHS'}]},
                             {block,0,
                                 [{debug_line,1100,482},
                                  {atom,{1100,39},true}]},
                             {op,{1100,39},
                                 '=/=',
                                 {var,{1100,35},'Val'},
                                 {var,{1100,43},'Src'}}]}},
                    {debug_line,1101,483},
                    {map,
                        {1101,14},
                        {var,{1101,13},'M'},
                        [{map_field_exact,
                             {1101,21},
                             {var,{1101,16},'Fail'},
                             {call,
                                 {1101,24},
                                 {atom,{1101,24},cse_intersection},
                                 [{var,{1101,41},'LHS'},
                                  {var,{1101,46},'RHS'}]}}]}]},
               {clause,
                   {1102,9},
                   [{map,{1102,9},[]}],
                   [],
                   [{debug_line,1103,484},
                    {match,
                        {1103,13},
                        {var,{1103,13},'LHS'},
                        {mc,{1103,19},
                            {map_field_assoc,
                                {1103,25},
                                {block,0,[{var,{1103,21},'Var'}]},
                                {block,0,[{var,{1103,28},'Val'}]}},
                            [{block,0,[{atom,{1103,49},true}]},
                             {m_generate,
                                 {1103,46},
                                 {map_field_exact,
                                     {1103,39},
                                     {var,{1103,35},'Var'},
                                     {var,{1103,42},'Val'}},
                                 {var,{1103,49},'LHS0'}},
                             {block,0,[{atom,{1103,59},true}]},
                             {op,{1103,59},
                                 '=/=',
                                 {var,{1103,55},'Val'},
                                 {var,{1103,63},'Src'}}]}},
                    {debug_line,1104,485},
                    {map,
                        {1104,14},
                        {var,{1104,13},'M'},
                        [{map_field_assoc,
                             {1104,21},
                             {var,{1104,16},'Fail'},
                             {var,{1104,24},'LHS'}}]}]}]}]}]}.
{function,
    {1109,1},
    cse_intersection,2,
    [{clause,
         {1109,1},
         [{var,{1109,1},'_'},{var,{1109,1},'_'}],
         [[{call,
               {1109,1},
               {remote,
                   {1109,1},
                   {atom,{1109,1},fake},
                   {atom,{1109,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1109,486},{atom,{1109,1},ignore}]},
     {clause,
         {1109,1},
         [{var,{1109,18},'M1'},{var,{1109,22},'M2'}],
         [],
         [{debug_line,1110,487},
          {match,
              {1110,5},
              {var,{1110,5},'MapSize1'},
              {call,
                  {1110,16},
                  {remote,
                      {1110,16},
                      {atom,{1110,16},erlang},
                      {atom,{1110,16},map_size}},
                  [{var,{1110,25},'M1'}]}},
          {debug_line,1111,488},
          {match,
              {1111,5},
              {var,{1111,5},'MapSize2'},
              {call,
                  {1111,16},
                  {remote,
                      {1111,16},
                      {atom,{1111,16},erlang},
                      {atom,{1111,16},map_size}},
                  [{var,{1111,25},'M2'}]}},
          {debug_line,1112,489},
          {'if',
              {1112,5},
              [{clause,
                   {1113,9},
                   [],
                   [[{op,{1113,18},
                         '<',
                         {var,{1113,9},'MapSize1'},
                         {var,{1113,20},'MapSize2'}}]],
                   [{debug_line,1114,490},
                    {call,
                        {1114,13},
                        {atom,{1114,13},cse_intersection_1},
                        [{block,0,
                             [{call,
                                  {1114,32},
                                  {remote,
                                      {1114,36},
                                      {atom,{1114,32},maps},
                                      {atom,{1114,37},to_list}},
                                  [{var,{1114,45},'M1'}]}]},
                         {var,{1114,50},'M2'},
                         {var,{1114,54},'M1'}]}]},
               {clause,
                   {1115,9},
                   [],
                   [[{op,{1115,18},
                         '>',
                         {var,{1115,9},'MapSize1'},
                         {var,{1115,20},'MapSize2'}}]],
                   [{debug_line,1116,491},
                    {call,
                        {1116,13},
                        {atom,{1116,13},cse_intersection_1},
                        [{block,0,
                             [{call,
                                  {1116,32},
                                  {remote,
                                      {1116,36},
                                      {atom,{1116,32},maps},
                                      {atom,{1116,37},to_list}},
                                  [{var,{1116,45},'M2'}]}]},
                         {var,{1116,50},'M1'},
                         {var,{1116,54},'M2'}]}]},
               {clause,
                   {1117,9},
                   [],
                   [[{op,{1117,12},
                         '=:=',
                         {var,{1117,9},'M1'},
                         {var,{1117,16},'M2'}}]],
                   [{debug_line,1118,492},{var,{1118,13},'M2'}]},
               {clause,
                   {1119,9},
                   [],
                   [[{atom,{1119,9},true}]],
                   [{debug_line,1120,493},
                    {call,
                        {1120,13},
                        {atom,{1120,13},cse_intersection_1},
                        [{block,0,
                             [{call,
                                  {1120,32},
                                  {remote,
                                      {1120,36},
                                      {atom,{1120,32},maps},
                                      {atom,{1120,37},to_list}},
                                  [{var,{1120,45},'M1'}]}]},
                         {var,{1120,50},'M2'},
                         {var,{1120,54},'M1'}]}]}]}]}]}.
{function,
    {1123,1},
    cse_intersection_1,3,
    [{clause,
         {1123,1},
         [{var,{1123,1},'_'},{var,{1123,1},'_'},{var,{1123,1},'_'}],
         [[{call,
               {1123,1},
               {remote,
                   {1123,1},
                   {atom,{1123,1},fake},
                   {atom,{1123,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1123,494},{atom,{1123,1},ignore}]},
     {clause,
         {1123,1},
         [{cons,
              {1123,20},
              {tuple,
                  {1123,21},
                  [{var,{1123,22},'Key'},{var,{1123,26},'Value'}]},
              {var,{1123,33},'KVs'}},
          {var,{1123,39},'M'},
          {var,{1123,42},'Result'}],
         [],
         [{debug_line,1124,495},
          {'case',
              {1124,5},
              {var,{1124,10},'M'},
              [{clause,
                   {1125,9},
                   [{map,
                        {1125,9},
                        [{map_field_exact,
                             {1125,15},
                             {var,{1125,11},'Key'},
                             {var,{1125,18},'Value'}}]}],
                   [],
                   [{debug_line,1126,496},
                    {call,
                        {1126,13},
                        {atom,{1126,13},cse_intersection_1},
                        [{var,{1126,32},'KVs'},
                         {var,{1126,37},'M'},
                         {var,{1126,40},'Result'}]}]},
               {clause,
                   {1127,9},
                   [{map,{1127,9},[]}],
                   [],
                   [{debug_line,1128,497},
                    {call,
                        {1128,13},
                        {atom,{1128,13},cse_intersection_1},
                        [{var,{1128,32},'KVs'},
                         {var,{1128,37},'M'},
                         {block,0,
                             [{call,
                                  {1128,40},
                                  {remote,
                                      {1128,44},
                                      {atom,{1128,40},maps},
                                      {atom,{1128,45},remove}},
                                  [{var,{1128,52},'Key'},
                                   {var,{1128,57},'Result'}]}]}]}]}]}]},
     {clause,
         {1130,1},
         [{nil,{1130,20}},{var,{1130,24},'_'},{var,{1130,27},'Result'}],
         [],
         [{debug_line,1130,498},{var,{1130,38},'Result'}]}]}.
{function,
 {1132,1},
 cse_is,4,
 [{clause,
   {1132,1},
   [{var,{1132,1},'_'},
    {var,{1132,1},'_'},
    {var,{1132,1},'_'},
    {var,{1132,1},'_'}],
   [[{call,
      {1132,1},
      {remote,{1132,1},{atom,{1132,1},fake},{atom,{1132,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1132,499},{atom,{1132,1},ignore}]},
  {clause,
   {1132,1},
   [{cons,
     {1132,8},
     {match,
      {1132,9},
      {tuple,
       {1132,9},
       [{atom,{1132,9},b_set},
        {var,{1132,9},'_'},
        {var,{1132,37},'Bool'},
        {tuple,{1132,19},[{atom,{1132,20},succeeded},{var,{1132,30},'_'}]},
        {cons,{1132,47},{var,{1132,48},'Src'},{nil,{1132,51}}}]},
      {var,{1132,54},'I0'}},
     {var,{1132,57},'Is'}},
    {var,{1132,62},'Es'},
    {var,{1132,66},'Sub0'},
    {var,{1132,72},'Acc'}],
   [],
   [{debug_line,1133,500},
    {match,
     {1133,5},
     {var,{1133,5},'I'},
     {call,
      {1133,9},
      {atom,{1133,9},sub},
      [{var,{1133,13},'I0'},{var,{1133,17},'Sub0'}]}},
    {debug_line,1134,501},
    {'case',
     {1134,5},
     {var,{1134,10},'I'},
     [{clause,
       {1135,9},
       [{tuple,
         {1135,9},
         [{atom,{1135,9},b_set},
          {var,{1135,9},'_'},
          {var,{1135,9},'_'},
          {var,{1135,9},'_'},
          {cons,{1135,21},{var,{1135,22},'Src'},{nil,{1135,25}}}]}],
       [],
       [{debug_line,1136,502},
        {call,
         {1136,13},
         {atom,{1136,13},cse_is},
         [{var,{1136,20},'Is'},
          {var,{1136,24},'Es'},
          {var,{1136,28},'Sub0'},
          {block,0,
           [{cons,{1136,34},{var,{1136,35},'I'},{var,{1136,37},'Acc'}}]}]}]},
      {clause,
       {1137,9},
       [{tuple,
         {1137,9},
         [{atom,{1137,9},b_set},
          {var,{1137,9},'_'},
          {var,{1137,9},'_'},
          {var,{1137,9},'_'},
          {var,{1137,9},'_'}]}],
       [],
       [{debug_line,1140,503},
        {match,
         {1140,13},
         {var,{1140,13},'Sub'},
         {map,
          {1140,23},
          {var,{1140,19},'Sub0'},
          [{map_field_assoc,
            {1140,29},
            {var,{1140,25},'Bool'},
            {tuple,
             {1140,31},
             [{atom,{1140,31},b_literal},{atom,{1140,46},true}]}}]}},
        {debug_line,1141,504},
        {call,
         {1141,13},
         {atom,{1141,13},cse_is},
         [{var,{1141,20},'Is'},
          {var,{1141,24},'Es'},
          {var,{1141,28},'Sub'},
          {var,{1141,33},'Acc'}]}]}]}]},
  {clause,
   {1143,1},
   [{cons,
     {1143,8},
     {match,
      {1143,9},
      {tuple,
       {1143,9},
       [{atom,{1143,9},b_set},
        {var,{1143,9},'_'},
        {var,{1143,31},'Dst'},
        {atom,{1143,19},put_map},
        {cons,
         {1143,40},
         {var,{1143,41},'_Kind'},
         {cons,{1143,47},{var,{1143,47},'Map'},{var,{1143,51},'_'}}}]},
      {var,{1143,55},'I0'}},
     {var,{1143,58},'Is'}},
    {var,{1144,8},'Es0'},
    {var,{1144,13},'Sub0'},
    {var,{1144,19},'Acc'}],
   [],
   [{debug_line,1145,505},
    {match,
     {1145,5},
     {var,{1145,5},'I1'},
     {call,
      {1145,10},
      {atom,{1145,10},sub},
      [{var,{1145,14},'I0'},{var,{1145,18},'Sub0'}]}},
    {debug_line,1146,506},
    {match,
     {1146,5},
     {tuple,{1146,5},[{atom,{1146,6},ok},{var,{1146,9},'ExprKey'}]},
     {call,{1146,20},{atom,{1146,20},cse_expr},[{var,{1146,29},'I1'}]}},
    {debug_line,1147,507},
    {'case',
     {1147,5},
     {var,{1147,10},'Es0'},
     [{clause,
       {1148,9},
       [{map,
         {1148,9},
         [{map_field_exact,
           {1148,18},
           {var,{1148,11},'ExprKey'},
           {var,{1148,20},'PrevPutMap'}}]}],
       [],
       [{debug_line,1149,508},
        {match,
         {1149,13},
         {var,{1149,13},'Sub'},
         {map,
          {1149,23},
          {var,{1149,19},'Sub0'},
          [{map_field_assoc,
            {1149,28},
            {var,{1149,25},'Dst'},
            {var,{1149,30},'PrevPutMap'}}]}},
        {debug_line,1150,509},
        {call,
         {1150,13},
         {atom,{1150,13},cse_is},
         [{var,{1150,20},'Is'},
          {var,{1150,24},'Es0'},
          {var,{1150,29},'Sub'},
          {var,{1150,34},'Acc'}]}]},
      {clause,
       {1151,9},
       [{map,
         {1151,9},
         [{map_field_exact,
           {1151,14},
           {var,{1151,11},'Map'},
           {var,{1151,16},'PutMap'}}]}],
       [],
       [{debug_line,1152,510},
        {'case',
         {1152,13},
         {call,
          {1152,18},
          {atom,{1152,18},combine_put_maps},
          [{var,{1152,35},'PutMap'},{var,{1152,43},'I1'}]},
         [{clause,
           {1153,17},
           [{atom,{1153,17},none}],
           [],
           [{debug_line,1154,511},
            {match,
             {1154,21},
             {var,{1154,21},'Es1'},
             {map,
              {1154,30},
              {var,{1154,27},'Es0'},
              [{map_field_assoc,
                {1154,39},
                {var,{1154,32},'ExprKey'},
                {var,{1154,41},'Dst'}}]}},
            {debug_line,1155,512},
            {match,
             {1155,21},
             {var,{1155,21},'Es'},
             {call,
              {1155,26},
              {atom,{1155,26},cse_add_inferred_exprs},
              [{var,{1155,49},'I1'},{var,{1155,53},'Es1'}]}},
            {debug_line,1156,513},
            {call,
             {1156,21},
             {atom,{1156,21},cse_is},
             [{var,{1156,28},'Is'},
              {var,{1156,32},'Es'},
              {var,{1156,36},'Sub0'},
              {block,0,
               [{cons,
                 {1156,42},
                 {var,{1156,43},'I1'},
                 {var,{1156,46},'Acc'}}]}]}]},
          {clause,
           {1157,17},
           [{var,{1157,17},'I'}],
           [],
           [{debug_line,1158,514},
            {match,
             {1158,21},
             {var,{1158,21},'Es1'},
             {map,
              {1158,30},
              {var,{1158,27},'Es0'},
              [{map_field_assoc,
                {1158,39},
                {var,{1158,32},'ExprKey'},
                {var,{1158,41},'Dst'}}]}},
            {debug_line,1159,515},
            {match,
             {1159,21},
             {var,{1159,21},'Es'},
             {call,
              {1159,26},
              {atom,{1159,26},cse_add_inferred_exprs},
              [{var,{1159,49},'I1'},{var,{1159,53},'Es1'}]}},
            {debug_line,1160,516},
            {call,
             {1160,21},
             {atom,{1160,21},cse_is},
             [{var,{1160,28},'Is'},
              {var,{1160,32},'Es'},
              {var,{1160,36},'Sub0'},
              {block,0,
               [{cons,
                 {1160,42},
                 {var,{1160,43},'I'},
                 {var,{1160,45},'Acc'}}]}]}]}]}]},
      {clause,
       {1162,9},
       [{map,{1162,9},[]}],
       [],
       [{debug_line,1163,517},
        {match,
         {1163,13},
         {var,{1163,13},'Es1'},
         {map,
          {1163,22},
          {var,{1163,19},'Es0'},
          [{map_field_assoc,
            {1163,31},
            {var,{1163,24},'ExprKey'},
            {var,{1163,33},'Dst'}}]}},
        {debug_line,1164,518},
        {match,
         {1164,13},
         {var,{1164,13},'Es'},
         {call,
          {1164,18},
          {atom,{1164,18},cse_add_inferred_exprs},
          [{var,{1164,41},'I1'},{var,{1164,45},'Es1'}]}},
        {debug_line,1165,519},
        {call,
         {1165,13},
         {atom,{1165,13},cse_is},
         [{var,{1165,20},'Is'},
          {var,{1165,24},'Es'},
          {var,{1165,28},'Sub0'},
          {block,0,
           [{cons,
             {1165,34},
             {var,{1165,35},'I1'},
             {var,{1165,38},'Acc'}}]}]}]}]}]},
  {clause,
   {1167,1},
   [{cons,
     {1167,8},
     {match,
      {1167,9},
      {tuple,
       {1167,9},
       [{atom,{1167,9},b_set},
        {var,{1167,9},'_'},
        {var,{1167,20},'Dst'},
        {var,{1167,9},'_'},
        {var,{1167,9},'_'}]},
      {var,{1167,25},'I0'}},
     {var,{1167,28},'Is'}},
    {var,{1167,33},'Es0'},
    {var,{1167,38},'Sub0'},
    {var,{1167,44},'Acc'}],
   [],
   [{debug_line,1168,520},
    {match,
     {1168,5},
     {var,{1168,5},'I'},
     {call,
      {1168,9},
      {atom,{1168,9},sub},
      [{var,{1168,13},'I0'},{var,{1168,17},'Sub0'}]}},
    {debug_line,1169,521},
    {'case',
     {1169,5},
     {call,
      {1169,10},
      {remote,{1169,18},{atom,{1169,10},beam_ssa},{atom,{1169,19},eval_instr}},
      [{var,{1169,30},'I'}]},
     [{clause,
       {1170,9},
       [{match,
         {1170,9},
         {tuple,{1170,9},[{atom,{1170,9},b_literal},{var,{1170,9},'_'}]},
         {var,{1170,22},'Value'}}],
       [],
       [{debug_line,1171,522},
        {match,
         {1171,13},
         {var,{1171,13},'Sub'},
         {map,
          {1171,23},
          {var,{1171,19},'Sub0'},
          [{map_field_assoc,
            {1171,29},
            {var,{1171,25},'Dst'},
            {var,{1171,32},'Value'}}]}},
        {debug_line,1172,523},
        {call,
         {1172,13},
         {atom,{1172,13},cse_is},
         [{var,{1172,20},'Is'},
          {var,{1172,24},'Es0'},
          {var,{1172,29},'Sub'},
          {var,{1172,34},'Acc'}]}]},
      {clause,
       {1173,9},
       [{atom,{1173,9},failed}],
       [],
       [{debug_line,1174,524},
        {'case',
         {1174,13},
         {var,{1174,18},'Is'},
         [{clause,
           {1175,17},
           [{cons,
             {1175,17},
             {tuple,
              {1175,18},
              [{atom,{1175,18},b_set},
               {var,{1175,18},'_'},
               {var,{1175,50},'SuccDst'},
               {tuple,
                {1175,28},
                [{atom,{1175,29},succeeded},{atom,{1175,39},guard}]},
               {cons,{1175,63},{var,{1175,64},'Dst'},{nil,{1175,67}}}]},
             {nil,{1175,69}}}],
           [],
           [{debug_line,1182,525},
            {match,
             {1182,21},
             {var,{1182,21},'Sub'},
             {map,
              {1182,31},
              {var,{1182,27},'Sub0'},
              [{map_field_assoc,
                {1182,41},
                {var,{1182,33},'SuccDst'},
                {tuple,
                 {1182,44},
                 [{atom,{1182,44},b_literal},{atom,{1182,59},false}]}}]}},
            {debug_line,1183,526},
            {tuple,
             {1183,21},
             [{var,{1183,22},'Acc'},
              {var,{1183,26},'Es0'},
              {var,{1183,30},'Sub'}]}]},
          {clause,
           {1184,17},
           [{var,{1184,17},'_'}],
           [],
           [{debug_line,1188,527},
            {call,
             {1188,21},
             {atom,{1188,21},cse_instr},
             [{var,{1188,31},'I'},
              {var,{1188,34},'Is'},
              {var,{1188,38},'Es0'},
              {var,{1188,43},'Sub0'},
              {var,{1188,49},'Acc'}]}]}]}]},
      {clause,
       {1190,9},
       [{atom,{1190,9},any}],
       [],
       [{debug_line,1191,528},
        {call,
         {1191,13},
         {atom,{1191,13},cse_instr},
         [{var,{1191,23},'I'},
          {var,{1191,26},'Is'},
          {var,{1191,30},'Es0'},
          {var,{1191,35},'Sub0'},
          {var,{1191,41},'Acc'}]}]}]}]},
  {clause,
   {1193,1},
   [{nil,{1193,8}},
    {var,{1193,12},'Es'},
    {var,{1193,16},'Sub'},
    {var,{1193,21},'Acc'}],
   [],
   [{debug_line,1194,529},
    {tuple,
     {1194,5},
     [{var,{1194,6},'Acc'},{var,{1194,10},'Es'},{var,{1194,13},'Sub'}]}]}]}.
{function,
 {1196,1},
 cse_instr,5,
 [{clause,
   {1196,1},
   [{var,{1196,1},'_'},
    {var,{1196,1},'_'},
    {var,{1196,1},'_'},
    {var,{1196,1},'_'},
    {var,{1196,1},'_'}],
   [[{call,
      {1196,1},
      {remote,{1196,1},{atom,{1196,1},fake},{atom,{1196,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1196,530},{atom,{1196,1},ignore}]},
  {clause,
   {1196,1},
   [{match,
     {1196,11},
     {tuple,
      {1196,11},
      [{atom,{1196,11},b_set},
       {var,{1196,11},'_'},
       {var,{1196,22},'Dst'},
       {var,{1196,11},'_'},
       {var,{1196,11},'_'}]},
     {var,{1196,27},'I'}},
    {var,{1196,30},'Is'},
    {var,{1196,34},'Es0'},
    {var,{1196,39},'Sub0'},
    {var,{1196,45},'Acc'}],
   [],
   [{debug_line,1197,531},
    {'case',
     {1197,5},
     {call,
      {1197,10},
      {remote,
       {1197,18},
       {atom,{1197,10},beam_ssa},
       {atom,{1197,19},clobbers_xregs}},
      [{var,{1197,34},'I'}]},
     [{clause,
       {1198,9},
       [{atom,{1198,9},true}],
       [],
       [{debug_line,1204,532},
        {call,
         {1204,13},
         {atom,{1204,13},cse_is},
         [{var,{1204,20},'Is'},
          {block,0,[{map,{1204,24},[]}]},
          {var,{1204,29},'Sub0'},
          {block,0,
           [{cons,{1204,35},{var,{1204,36},'I'},{var,{1204,38},'Acc'}}]}]}]},
      {clause,
       {1205,9},
       [{atom,{1205,9},false}],
       [],
       [{debug_line,1206,533},
        {'case',
         {1206,13},
         {call,{1206,18},{atom,{1206,18},cse_expr},[{var,{1206,27},'I'}]},
         [{clause,
           {1207,17},
           [{atom,{1207,17},none}],
           [],
           [{debug_line,1209,534},
            {call,
             {1209,21},
             {atom,{1209,21},cse_is},
             [{var,{1209,28},'Is'},
              {var,{1209,32},'Es0'},
              {var,{1209,37},'Sub0'},
              {block,0,
               [{cons,
                 {1209,43},
                 {var,{1209,44},'I'},
                 {var,{1209,46},'Acc'}}]}]}]},
          {clause,
           {1210,17},
           [{tuple,{1210,17},[{atom,{1210,18},ok},{var,{1210,21},'ExprKey'}]}],
           [],
           [{debug_line,1211,535},
            {'case',
             {1211,21},
             {var,{1211,26},'Es0'},
             [{clause,
               {1212,25},
               [{map,
                 {1212,25},
                 [{map_field_exact,
                   {1212,35},
                   {var,{1212,27},'ExprKey'},
                   {var,{1212,38},'Src'}}]}],
               [],
               [{debug_line,1214,536},
                {match,
                 {1214,29},
                 {var,{1214,29},'Sub'},
                 {map,
                  {1214,39},
                  {var,{1214,35},'Sub0'},
                  [{map_field_assoc,
                    {1214,45},
                    {var,{1214,41},'Dst'},
                    {var,{1214,48},'Src'}}]}},
                {debug_line,1215,537},
                {call,
                 {1215,29},
                 {atom,{1215,29},cse_is},
                 [{var,{1215,36},'Is'},
                  {var,{1215,40},'Es0'},
                  {var,{1215,45},'Sub'},
                  {var,{1215,50},'Acc'}]}]},
              {clause,
               {1216,25},
               [{map,{1216,25},[]}],
               [],
               [{debug_line,1217,538},
                {match,
                 {1217,29},
                 {var,{1217,29},'Es1'},
                 {map,
                  {1217,38},
                  {var,{1217,35},'Es0'},
                  [{map_field_assoc,
                    {1217,48},
                    {var,{1217,40},'ExprKey'},
                    {var,{1217,51},'Dst'}}]}},
                {debug_line,1218,539},
                {match,
                 {1218,29},
                 {var,{1218,29},'Es'},
                 {call,
                  {1218,34},
                  {atom,{1218,34},cse_add_inferred_exprs},
                  [{var,{1218,57},'I'},{var,{1218,60},'Es1'}]}},
                {debug_line,1219,540},
                {call,
                 {1219,29},
                 {atom,{1219,29},cse_is},
                 [{var,{1219,36},'Is'},
                  {var,{1219,40},'Es'},
                  {var,{1219,44},'Sub0'},
                  {block,0,
                   [{cons,
                     {1219,50},
                     {var,{1219,51},'I'},
                     {var,{1219,53},'Acc'}}]}]}]}]}]}]}]}]}]}]}.
{function,
    {1224,1},
    cse_add_inferred_exprs,2,
    [{clause,
         {1224,1},
         [{var,{1224,1},'_'},{var,{1224,1},'_'}],
         [[{call,
               {1224,1},
               {remote,
                   {1224,1},
                   {atom,{1224,1},fake},
                   {atom,{1224,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1224,541},{atom,{1224,1},ignore}]},
     {clause,
         {1224,1},
         [{tuple,
              {1224,24},
              [{atom,{1224,24},b_set},
               {var,{1224,24},'_'},
               {var,{1224,47},'List'},
               {atom,{1224,34},put_list},
               {cons,
                   {1224,57},
                   {var,{1224,58},'Hd'},
                   {cons,{1224,61},{var,{1224,61},'Tl'},{nil,{1224,63}}}}]},
          {var,{1224,67},'Es'}],
         [],
         [{debug_line,1225,542},
          {map,
              {1225,7},
              {var,{1225,5},'Es'},
              [{map_field_assoc,
                   {1225,25},
                   {tuple,
                       {1225,9},
                       [{atom,{1225,10},get_hd},
                        {cons,
                            {1225,17},
                            {var,{1225,18},'List'},
                            {nil,{1225,22}}}]},
                   {var,{1225,28},'Hd'}},
               {map_field_assoc,
                   {1226,25},
                   {tuple,
                       {1226,9},
                       [{atom,{1226,10},get_tl},
                        {cons,
                            {1226,17},
                            {var,{1226,18},'List'},
                            {nil,{1226,22}}}]},
                   {var,{1226,28},'Tl'}}]}]},
     {clause,
         {1227,1},
         [{tuple,
              {1227,24},
              [{atom,{1227,24},b_set},
               {var,{1227,24},'_'},
               {var,{1227,48},'Tuple'},
               {atom,{1227,34},put_tuple},
               {cons,
                   {1227,59},
                   {var,{1227,60},'E1'},
                   {cons,
                       {1227,63},
                       {var,{1227,63},'E2'},
                       {var,{1227,66},'_'}}}]},
          {var,{1227,71},'Es'}],
         [],
         [{debug_line,1230,543},
          {map,
              {1230,7},
              {var,{1230,5},'Es'},
              [{map_field_assoc,
                   {1230,55},
                   {tuple,
                       {1230,9},
                       [{atom,{1230,10},get_tuple_element},
                        {cons,
                            {1230,28},
                            {var,{1230,29},'Tuple'},
                            {cons,
                                {1230,35},
                                {tuple,
                                    {1230,35},
                                    [{atom,{1230,35},b_literal},
                                     {integer,{1230,50},0}]},
                                {nil,{1230,52}}}}]},
                   {var,{1230,58},'E1'}},
               {map_field_assoc,
                   {1231,55},
                   {tuple,
                       {1231,9},
                       [{atom,{1231,10},get_tuple_element},
                        {cons,
                            {1231,28},
                            {var,{1231,29},'Tuple'},
                            {cons,
                                {1231,35},
                                {tuple,
                                    {1231,35},
                                    [{atom,{1231,35},b_literal},
                                     {integer,{1231,50},1}]},
                                {nil,{1231,52}}}}]},
                   {var,{1231,58},'E2'}}]}]},
     {clause,
         {1232,1},
         [{match,
              {1232,24},
              {tuple,
                  {1232,24},
                  [{atom,{1232,24},b_set},
                   {var,{1232,24},'_'},
                   {var,{1232,46},'Map'},
                   {atom,{1232,34},put_map},
                   {cons,
                       {1232,55},
                       {var,{1232,56},'_'},
                       {cons,
                           {1232,58},
                           {var,{1232,58},'_'},
                           {var,{1232,60},'Args'}}}]},
              {var,{1232,67},'I'}},
          {var,{1232,70},'Es0'}],
         [],
         [{debug_line,1233,544},
          {match,
              {1233,5},
              {var,{1233,5},'Es'},
              {call,
                  {1233,10},
                  {atom,{1233,10},cse_add_map_get},
                  [{var,{1233,26},'Args'},
                   {var,{1233,32},'Map'},
                   {var,{1233,37},'Es0'}]}},
          {debug_line,1234,545},
          {map,
              {1234,7},
              {var,{1234,5},'Es'},
              [{map_field_assoc,
                   {1234,13},
                   {var,{1234,9},'Map'},
                   {var,{1234,16},'I'}}]}]},
     {clause,
         {1235,1},
         [{var,{1235,24},'_'},{var,{1235,27},'Es'}],
         [],
         [{debug_line,1235,546},{var,{1235,34},'Es'}]}]}.
{function,
    {1237,1},
    cse_add_map_get,3,
    [{clause,
         {1237,1},
         [{var,{1237,1},'_'},{var,{1237,1},'_'},{var,{1237,1},'_'}],
         [[{call,
               {1237,1},
               {remote,
                   {1237,1},
                   {atom,{1237,1},fake},
                   {atom,{1237,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1237,547},{atom,{1237,1},ignore}]},
     {clause,
         {1237,1},
         [{cons,
              {1237,17},
              {var,{1237,18},'Key'},
              {cons,{1237,22},{var,{1237,22},'Value'},{var,{1237,28},'T'}}},
          {var,{1237,32},'Map'},
          {var,{1237,37},'Es0'}],
         [],
         [{debug_line,1238,548},
          {match,
              {1238,5},
              {var,{1238,5},'Es'},
              {map,
                  {1238,13},
                  {var,{1238,10},'Es0'},
                  [{map_field_assoc,
                       {1238,43},
                       {tuple,
                           {1238,15},
                           [{atom,{1238,16},get_map_element},
                            {cons,
                                {1238,32},
                                {var,{1238,33},'Map'},
                                {cons,
                                    {1238,37},
                                    {var,{1238,37},'Key'},
                                    {nil,{1238,40}}}}]},
                       {var,{1238,46},'Value'}}]}},
          {debug_line,1239,549},
          {call,
              {1239,5},
              {atom,{1239,5},cse_add_map_get},
              [{var,{1239,21},'T'},
               {var,{1239,24},'Map'},
               {var,{1239,29},'Es'}]}]},
     {clause,
         {1240,1},
         [{nil,{1240,17}},{var,{1240,21},'_'},{var,{1240,24},'Es'}],
         [],
         [{debug_line,1240,550},{var,{1240,31},'Es'}]}]}.
{function,
    {1242,1},
    cse_expr,1,
    [{clause,
         {1242,1},
         [{var,{1242,1},'_'}],
         [[{call,
               {1242,1},
               {remote,
                   {1242,1},
                   {atom,{1242,1},fake},
                   {atom,{1242,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1242,551},{atom,{1242,1},ignore}]},
     {clause,
         {1242,1},
         [{tuple,
              {1242,10},
              [{atom,{1242,10},b_set},
               {var,{1242,10},'_'},
               {var,{1242,10},'_'},
               {tuple,{1242,20},[{atom,{1242,21},bif},{atom,{1242,25},hd}]},
               {cons,{1242,34},{var,{1242,35},'List'},{nil,{1242,39}}}]}],
         [],
         [{debug_line,1243,552},
          {tuple,
              {1243,5},
              [{atom,{1243,6},ok},
               {tuple,
                   {1243,9},
                   [{atom,{1243,10},get_hd},
                    {cons,
                        {1243,17},
                        {var,{1243,18},'List'},
                        {nil,{1243,22}}}]}]}]},
     {clause,
         {1244,1},
         [{tuple,
              {1244,10},
              [{atom,{1244,10},b_set},
               {var,{1244,10},'_'},
               {var,{1244,10},'_'},
               {tuple,{1244,20},[{atom,{1244,21},bif},{atom,{1244,25},tl}]},
               {cons,{1244,34},{var,{1244,35},'List'},{nil,{1244,39}}}]}],
         [],
         [{debug_line,1245,553},
          {tuple,
              {1245,5},
              [{atom,{1245,6},ok},
               {tuple,
                   {1245,9},
                   [{atom,{1245,10},get_tl},
                    {cons,
                        {1245,17},
                        {var,{1245,18},'List'},
                        {nil,{1245,22}}}]}]}]},
     {clause,
         {1246,1},
         [{tuple,
              {1246,10},
              [{atom,{1246,10},b_set},
               {var,{1246,10},'_'},
               {var,{1246,10},'_'},
               {tuple,
                   {1246,20},
                   [{atom,{1246,21},bif},{atom,{1246,25},element}]},
               {cons,
                   {1246,39},
                   {tuple,
                       {1246,40},
                       [{atom,{1246,40},b_literal},{var,{1246,55},'Index'}]},
                   {cons,
                       {1246,62},
                       {var,{1246,62},'Tuple'},
                       {nil,{1246,67}}}}]}],
         [[{call,
               {1247,8},
               {remote,
                   {1247,8},
                   {atom,{1247,8},erlang},
                   {atom,{1247,8},is_integer}},
               [{var,{1247,19},'Index'}]}]],
         [{debug_line,1248,554},
          {tuple,
              {1248,5},
              [{atom,{1248,6},ok},
               {tuple,
                   {1248,9},
                   [{atom,{1248,10},get_tuple_element},
                    {cons,
                        {1248,28},
                        {var,{1248,29},'Tuple'},
                        {cons,
                            {1248,35},
                            {tuple,
                                {1248,35},
                                [{atom,{1248,35},b_literal},
                                 {op,{1248,55},
                                     '-',
                                     {var,{1248,50},'Index'},
                                     {integer,{1248,56},1}}]},
                            {nil,{1248,58}}}}]}]}]},
     {clause,
         {1249,1},
         [{tuple,
              {1249,10},
              [{atom,{1249,10},b_set},
               {var,{1249,10},'_'},
               {var,{1249,10},'_'},
               {tuple,
                   {1249,20},
                   [{atom,{1249,21},bif},{atom,{1249,25},map_get}]},
               {cons,
                   {1249,39},
                   {var,{1249,40},'Key'},
                   {cons,{1249,44},{var,{1249,44},'Map'},{nil,{1249,47}}}}]}],
         [],
         [{debug_line,1250,555},
          {tuple,
              {1250,5},
              [{atom,{1250,6},ok},
               {tuple,
                   {1250,9},
                   [{atom,{1250,10},get_map_element},
                    {cons,
                        {1250,26},
                        {var,{1250,27},'Map'},
                        {cons,
                            {1250,31},
                            {var,{1250,31},'Key'},
                            {nil,{1250,34}}}}]}]}]},
     {clause,
         {1251,1},
         [{match,
              {1251,10},
              {tuple,
                  {1251,10},
                  [{atom,{1251,10},b_set},
                   {var,{1251,10},'_'},
                   {var,{1251,10},'_'},
                   {var,{1251,20},'Op'},
                   {var,{1251,28},'Args'}]},
              {var,{1251,34},'I'}}],
         [],
         [{debug_line,1252,556},
          {'case',
              {1252,5},
              {call,
                  {1252,10},
                  {atom,{1252,10},cse_suitable},
                  [{var,{1252,23},'I'}]},
              [{clause,
                   {1253,9},
                   [{atom,{1253,9},true}],
                   [],
                   [{debug_line,1253,557},
                    {tuple,
                        {1253,17},
                        [{atom,{1253,18},ok},
                         {tuple,
                             {1253,21},
                             [{var,{1253,22},'Op'},
                              {var,{1253,25},'Args'}]}]}]},
               {clause,
                   {1254,9},
                   [{atom,{1254,9},false}],
                   [],
                   [{debug_line,1254,558},{atom,{1254,18},none}]}]}]}]}.
{function,
 {1257,1},
 cse_suitable,1,
 [{clause,
   {1257,1},
   [{var,{1257,1},'_'}],
   [[{call,
      {1257,1},
      {remote,{1257,1},{atom,{1257,1},fake},{atom,{1257,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1257,559},{atom,{1257,1},ignore}]},
  {clause,
   {1257,1},
   [{tuple,
     {1257,14},
     [{atom,{1257,14},b_set},
      {var,{1257,14},'_'},
      {var,{1257,14},'_'},
      {atom,{1257,24},get_hd},
      {var,{1257,14},'_'}]}],
   [],
   [{debug_line,1257,560},{atom,{1257,36},true}]},
  {clause,
   {1258,1},
   [{tuple,
     {1258,14},
     [{atom,{1258,14},b_set},
      {var,{1258,14},'_'},
      {var,{1258,14},'_'},
      {atom,{1258,24},get_tl},
      {var,{1258,14},'_'}]}],
   [],
   [{debug_line,1258,561},{atom,{1258,36},true}]},
  {clause,
   {1259,1},
   [{tuple,
     {1259,14},
     [{atom,{1259,14},b_set},
      {var,{1259,14},'_'},
      {var,{1259,14},'_'},
      {atom,{1259,24},put_list},
      {var,{1259,14},'_'}]}],
   [],
   [{debug_line,1259,562},{atom,{1259,38},true}]},
  {clause,
   {1260,1},
   [{tuple,
     {1260,14},
     [{atom,{1260,14},b_set},
      {var,{1260,14},'_'},
      {var,{1260,14},'_'},
      {atom,{1260,24},get_tuple_element},
      {var,{1260,14},'_'}]}],
   [],
   [{debug_line,1260,563},{atom,{1260,47},true}]},
  {clause,
   {1261,1},
   [{tuple,
     {1261,14},
     [{atom,{1261,14},b_set},
      {var,{1261,14},'_'},
      {var,{1261,14},'_'},
      {atom,{1261,24},put_tuple},
      {var,{1261,14},'_'}]}],
   [],
   [{debug_line,1261,564},{atom,{1261,39},true}]},
  {clause,
   {1262,1},
   [{tuple,
     {1262,14},
     [{atom,{1262,14},b_set},
      {var,{1262,14},'_'},
      {var,{1262,14},'_'},
      {atom,{1262,24},get_map_element},
      {var,{1262,14},'_'}]}],
   [],
   [{debug_line,1262,565},{atom,{1262,45},true}]},
  {clause,
   {1263,1},
   [{tuple,
     {1263,14},
     [{atom,{1263,14},b_set},
      {var,{1263,14},'_'},
      {var,{1263,14},'_'},
      {atom,{1263,24},put_map},
      {var,{1263,14},'_'}]}],
   [],
   [{debug_line,1263,566},{atom,{1263,37},true}]},
  {clause,
   {1264,1},
   [{tuple,
     {1264,14},
     [{atom,{1264,14},b_set},
      {var,{1264,14},'_'},
      {var,{1264,14},'_'},
      {tuple,{1264,24},[{atom,{1264,25},bif},{atom,{1264,29},tuple_size}]},
      {var,{1264,14},'_'}]}],
   [],
   [{debug_line,1270,567},{atom,{1270,5},false}]},
  {clause,
   {1271,1},
   [{tuple,
     {1271,14},
     [{atom,{1271,14},b_set},
      {var,{1271,26},'Anno'},
      {var,{1271,14},'_'},
      {tuple,{1271,34},[{atom,{1271,35},bif},{var,{1271,39},'Name'}]},
      {var,{1271,50},'Args'}]}],
   [],
   [{debug_line,1275,568},
    {match,
     {1275,5},
     {var,{1275,5},'Arity'},
     {call,
      {1275,13},
      {remote,{1275,13},{atom,{1275,13},erlang},{atom,{1275,13},length}},
      [{var,{1275,20},'Args'}]}},
    {debug_line,1276,569},
    {op,
     {1276,5},
     'not',
     {'case',
      {1276,10},
      {call,
       {1276,10},
       {remote,{1276,10},{atom,{1276,10},erlang},{atom,{1276,10},is_map_key}},
       [{atom,{1276,21},float_op},{var,{1276,31},'Anno'}]},
      [{clause,{1276,10},[{atom,{1276,10},true}],[],[{atom,{1276,10},true}]},
       {clause,
        {1276,10},
        [{atom,{1276,10},false}],
        [],
        [{debug_line,1277,570},
         {'case',
          {1277,10},
          {call,
           {1277,10},
           {remote,
            {1277,22},
            {atom,{1277,10},erl_internal},
            {atom,{1277,23},new_type_test}},
           [{var,{1277,37},'Name'},{var,{1277,43},'Arity'}]},
          [{clause,
            {1277,10},
            [{atom,{1277,10},true}],
            [],
            [{atom,{1277,10},true}]},
           {clause,
            {1277,10},
            [{atom,{1277,10},false}],
            [],
            [{debug_line,1278,571},
             {'case',
              {1278,10},
              {call,
               {1278,10},
               {remote,
                {1278,22},
                {atom,{1278,10},erl_internal},
                {atom,{1278,23},comp_op}},
               [{var,{1278,31},'Name'},{var,{1278,37},'Arity'}]},
              [{clause,
                {1278,10},
                [{atom,{1278,10},true}],
                [],
                [{atom,{1278,10},true}]},
               {clause,
                {1278,10},
                [{atom,{1278,10},false}],
                [],
                [{debug_line,1279,572},
                 {call,
                  {1279,10},
                  {remote,
                   {1279,22},
                   {atom,{1279,10},erl_internal},
                   {atom,{1279,23},bool_op}},
                  [{var,{1279,31},'Name'},{var,{1279,37},'Arity'}]}]},
               {clause,
                [{generated,true},{location,{1278,10}}],
                [{var,{1278,10},cov1}],
                [],
                [{call,
                  {1278,10},
                  {remote,
                   {1278,10},
                   {atom,{1278,10},erlang},
                   {atom,{1278,10},error}},
                  [{block,0,
                    [{tuple,
                      {1278,10},
                      [{atom,{1278,10},badarg},
                       {var,{1278,10},cov1}]}]}]}]}]}]},
           {clause,
            [{generated,true},{location,{1277,10}}],
            [{var,{1277,10},cov2}],
            [],
            [{call,
              {1277,10},
              {remote,
               {1277,10},
               {atom,{1277,10},erlang},
               {atom,{1277,10},error}},
              [{block,0,
                [{tuple,
                  {1277,10},
                  [{atom,{1277,10},badarg},{var,{1277,10},cov2}]}]}]}]}]}]},
       {clause,
        [{generated,true},{location,{1276,10}}],
        [{var,{1276,10},cov3}],
        [],
        [{call,
          {1276,10},
          {remote,{1276,10},{atom,{1276,10},erlang},{atom,{1276,10},error}},
          [{block,0,
            [{tuple,
              {1276,10},
              [{atom,{1276,10},badarg},{var,{1276,10},cov3}]}]}]}]}]}}]},
  {clause,
   {1280,1},
   [{tuple,
     {1280,14},
     [{atom,{1280,14},b_set},
      {var,{1280,14},'_'},
      {var,{1280,14},'_'},
      {var,{1280,14},'_'},
      {var,{1280,14},'_'}]}],
   [],
   [{debug_line,1280,573},{atom,{1280,27},false}]}]}.
{function,
 {1282,1},
 combine_put_maps,2,
 [{clause,
   {1282,1},
   [{var,{1282,1},'_'},{var,{1282,1},'_'}],
   [[{call,
      {1282,1},
      {remote,{1282,1},{atom,{1282,1},fake},{atom,{1282,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1282,574},{atom,{1282,1},ignore}]},
  {clause,
   {1282,1},
   [{tuple,
     {1282,18},
     [{atom,{1282,18},b_set},
      {var,{1282,18},'_'},
      {var,{1282,29},'Prev'},
      {var,{1282,18},'_'},
      {cons,
       {1282,39},
       {tuple,{1282,40},[{atom,{1282,40},b_literal},{atom,{1282,55},assoc}]},
       {cons,{1282,62},{var,{1282,62},'Map'},{var,{1282,66},'Args1'}}}]},
    {match,
     {1283,18},
     {tuple,
      {1283,18},
      [{atom,{1283,18},b_set},
       {var,{1283,18},'_'},
       {var,{1283,18},'_'},
       {var,{1283,18},'_'},
       {cons,
        {1283,30},
        {tuple,{1283,31},[{atom,{1283,31},b_literal},{atom,{1283,46},assoc}]},
        {cons,{1283,53},{var,{1283,53},'Prev'},{var,{1283,58},'Args2'}}}]},
     {var,{1283,66},'I'}}],
   [],
   [{debug_line,1284,575},
    {'case',
     {1284,5},
     {'case',
      {1284,10},
      {call,
       {1284,10},
       {atom,{1284,10},are_map_keys_literals},
       [{var,{1284,32},'Args1'}]},
      [{clause,
        {1284,10},
        [{atom,{1284,10},true}],
        [],
        [{call,
          {1284,47},
          {atom,{1284,47},are_map_keys_literals},
          [{var,{1284,69},'Args2'}]}]},
       {clause,{1284,10},[{atom,{1284,10},false}],[],[{atom,{1284,10},false}]},
       {clause,
        [{generated,true},{location,{1284,10}}],
        [{var,{1284,10},cov1}],
        [],
        [{call,
          {1284,10},
          {remote,{1284,10},{atom,{1284,10},erlang},{atom,{1284,10},error}},
          [{block,0,
            [{tuple,
              {1284,10},
              [{atom,{1284,10},badarg},{var,{1284,10},cov1}]}]}]}]}]},
     [{clause,
       {1285,9},
       [{atom,{1285,9},true}],
       [],
       [{debug_line,1286,576},
        {match,
         {1286,13},
         {var,{1286,13},'Args'},
         {call,
          {1286,20},
          {atom,{1286,20},combine_put_map_args},
          [{var,{1286,41},'Args1'},{var,{1286,48},'Args2'}]}},
        {debug_line,1287,577},
        {block,
         {1287,13},
         [{match,
           {1287,21},
           {var,{1287,21},rec63},
           {cons,
            {1287,26},
            {tuple,
             {1287,27},
             [{atom,{1287,27},b_literal},{atom,{1287,42},assoc}]},
            {cons,{1287,49},{var,{1287,49},'Map'},{var,{1287,53},'Args'}}}},
          {match,{1287,13},{var,{1287,13},rec64},{var,{1287,13},'I'}},
          {'case',
           {1287,21},
           {var,{1287,13},rec64},
           [{clause,
             {1287,21},
             [{tuple,
               {1287,21},
               [{atom,{1287,21},b_set},
                {var,{1287,21},'_'},
                {var,{1287,21},'_'},
                {var,{1287,21},'_'},
                {var,{1287,21},'_'}]}],
             [],
             [{call,
               {1287,21},
               {remote,
                {1287,21},
                {atom,{1287,21},erlang},
                {atom,{1287,21},setelement}},
               [{integer,{1287,21},5},
                {var,{1287,13},rec64},
                {var,{1287,21},rec63}]}]},
            {clause,
             [{generated,true},{location,{1287,21}}],
             [{var,[{generated,true},{location,{1287,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1287,21}}],
               {remote,
                [{generated,true},{location,{1287,21}}],
                {atom,[{generated,true},{location,{1287,21}}],erlang},
                {atom,[{generated,true},{location,{1287,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1287,21}}],
                 [{atom,[{generated,true},{location,{1287,21}}],badrecord},
                  {var,{1287,13},rec64}]}]}]}]}]}]},
      {clause,
       {1288,9},
       [{atom,{1288,9},false}],
       [],
       [{debug_line,1289,578},{atom,{1289,13},none}]}]}]},
  {clause,
   {1291,1},
   [{tuple,
     {1291,18},
     [{atom,{1291,18},b_set},
      {var,{1291,18},'_'},
      {var,{1291,18},'_'},
      {var,{1291,18},'_'},
      {var,{1291,18},'_'}]},
    {tuple,
     {1291,28},
     [{atom,{1291,28},b_set},
      {var,{1291,28},'_'},
      {var,{1291,28},'_'},
      {var,{1291,28},'_'},
      {var,{1291,28},'_'}]}],
   [],
   [{debug_line,1292,579},{atom,{1292,5},none}]}]}.
{function,
    {1294,1},
    combine_put_map_args,2,
    [{clause,
         {1294,1},
         [{var,{1294,1},'_'},{var,{1294,1},'_'}],
         [[{call,
               {1294,1},
               {remote,
                   {1294,1},
                   {atom,{1294,1},fake},
                   {atom,{1294,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1294,580},{atom,{1294,1},ignore}]},
     {clause,
         {1294,1},
         [{var,{1294,22},'Args1'},{var,{1294,29},'Args2'}],
         [],
         [{debug_line,1295,581},
          {match,
              {1295,5},
              {var,{1295,5},'Keys'},
              {call,
                  {1295,12},
                  {remote,
                      {1295,16},
                      {atom,{1295,12},sets},
                      {atom,{1295,17},from_list}},
                  [{block,0,
                       [{call,
                            {1295,27},
                            {atom,{1295,27},get_map_keys},
                            [{var,{1295,40},'Args2'}]}]},
                   {block,0,
                       [{cons,
                            {1295,48},
                            {tuple,
                                {1295,49},
                                [{atom,{1295,50},version},
                                 {integer,{1295,58},2}]},
                            {nil,{1295,60}}}]}]}},
          {debug_line,1296,582},
          {call,
              {1296,5},
              {atom,{1296,5},combine_put_map_args_1},
              [{var,{1296,28},'Args1'},
               {var,{1296,35},'Args2'},
               {var,{1296,42},'Keys'}]}]}]}.
{function,
    {1298,1},
    combine_put_map_args_1,3,
    [{clause,
         {1298,1},
         [{var,{1298,1},'_'},{var,{1298,1},'_'},{var,{1298,1},'_'}],
         [[{call,
               {1298,1},
               {remote,
                   {1298,1},
                   {atom,{1298,1},fake},
                   {atom,{1298,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1298,583},{atom,{1298,1},ignore}]},
     {clause,
         {1298,1},
         [{cons,
              {1298,24},
              {var,{1298,25},'Key'},
              {cons,{1298,29},{var,{1298,29},'Value'},{var,{1298,35},'T'}}},
          {var,{1298,39},'Tail'},
          {var,{1298,45},'Keys'}],
         [],
         [{debug_line,1299,584},
          {'case',
              {1299,5},
              {call,
                  {1299,10},
                  {remote,
                      {1299,14},
                      {atom,{1299,10},sets},
                      {atom,{1299,15},is_element}},
                  [{var,{1299,26},'Key'},{var,{1299,31},'Keys'}]},
              [{clause,
                   {1300,9},
                   [{atom,{1300,9},true}],
                   [],
                   [{debug_line,1301,585},
                    {call,
                        {1301,13},
                        {atom,{1301,13},combine_put_map_args_1},
                        [{var,{1301,36},'T'},
                         {var,{1301,39},'Tail'},
                         {var,{1301,45},'Keys'}]}]},
               {clause,
                   {1302,9},
                   [{atom,{1302,9},false}],
                   [],
                   [{debug_line,1303,586},
                    {cons,
                        {1303,13},
                        {var,{1303,14},'Key'},
                        {cons,
                            {1303,18},
                            {var,{1303,18},'Value'},
                            {call,
                                {1303,24},
                                {atom,{1303,24},combine_put_map_args_1},
                                [{var,{1303,47},'T'},
                                 {var,{1303,50},'Tail'},
                                 {var,{1303,56},'Keys'}]}}}]}]}]},
     {clause,
         {1305,1},
         [{nil,{1305,24}},{var,{1305,28},'Tail'},{var,{1305,34},'_Keys'}],
         [],
         [{debug_line,1305,587},{var,{1305,44},'Tail'}]}]}.
{function,{1307,1},
          get_map_keys,1,
          [{clause,{1307,1},
                   [{var,{1307,1},'_'}],
                   [[{call,{1307,1},
                           {remote,{1307,1},
                                   {atom,{1307,1},fake},
                                   {atom,{1307,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1307,588},{atom,{1307,1},ignore}]},
           {clause,{1307,1},
                   [{cons,{1307,14},
                          {var,{1307,15},'Key'},
                          {cons,{1307,19},
                                {var,{1307,19},'_'},
                                {var,{1307,21},'T'}}}],
                   [],
                   [{debug_line,1308,589},
                    {cons,{1308,5},
                          {var,{1308,6},'Key'},
                          {call,{1308,10},
                                {atom,{1308,10},get_map_keys},
                                [{var,{1308,23},'T'}]}}]},
           {clause,{1309,1},
                   [{nil,{1309,14}}],
                   [],
                   [{debug_line,1309,590},{nil,{1309,21}}]}]}.
{function,{1311,1},
          are_map_keys_literals,1,
          [{clause,{1311,1},
                   [{var,{1311,1},'_'}],
                   [[{call,{1311,1},
                           {remote,{1311,1},
                                   {atom,{1311,1},fake},
                                   {atom,{1311,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1311,591},{atom,{1311,1},ignore}]},
           {clause,{1311,1},
                   [{cons,{1311,23},
                          {tuple,{1311,24},
                                 [{atom,{1311,24},b_literal},
                                  {var,{1311,24},'_'}]},
                          {cons,{1311,37},
                                {var,{1311,37},'_Value'},
                                {var,{1311,44},'Args'}}}],
                   [],
                   [{debug_line,1312,592},
                    {call,{1312,5},
                          {atom,{1312,5},are_map_keys_literals},
                          [{var,{1312,27},'Args'}]}]},
           {clause,{1313,1},
                   [{cons,{1313,23},
                          {tuple,{1313,24},
                                 [{atom,{1313,24},b_var},{var,{1313,24},'_'}]},
                          {var,{1313,33},'_'}}],
                   [],
                   [{debug_line,1314,593},{atom,{1314,5},false}]},
           {clause,{1315,1},
                   [{nil,{1315,23}}],
                   [],
                   [{debug_line,1316,594},{atom,{1316,5},true}]}]}.
{attribute,{1333,2},
           type,
           {fr_status,{type,{1333,22},
                            union,
                            [{atom,{1333,22},original},{atom,{1333,35},copy}]},
                      []}}.
{attribute,
    {1334,2},
    record,
    {fs,[{typed_record_field,
             {record_field,{1335,10},{atom,{1335,10},regs},{map,{1335,15},[]}},
             {type,
                 {1335,22},
                 map,
                 [{type,
                      {1335,41},
                      map_field_exact,
                      [{remote_type,
                           {1335,24},
                           [{atom,{1335,24},beam_ssa},
                            {atom,{1335,33},b_var},
                            []]},
                       {type,
                           {1335,44},
                           tuple,
                           [{remote_type,
                                {1335,45},
                                [{atom,{1335,45},beam_ssa},
                                 {atom,{1335,54},b_var},
                                 []]},
                            {user_type,{1335,62},fr_status,[]}]}]}]}},
         {typed_record_field,
             {record_field,{1336,10},{atom,{1336,10},non_guards}},
             {remote_type,
                 {1336,24},
                 [{atom,{1336,24},gb_sets},
                  {atom,{1336,32},set},
                  [{remote_type,
                       {1336,36},
                       [{atom,{1336,36},beam_ssa},
                        {atom,{1336,45},label},
                        []]}]]}},
         {typed_record_field,
             {record_field,{1337,10},{atom,{1337,10},bs}},
             {remote_type,
                 {1337,16},
                 [{atom,{1337,16},beam_ssa},{atom,{1337,25},block_map},[]]}},
         {typed_record_field,
             {record_field,{1338,10},{atom,{1338,10},preds}},
             {type,
                 {1338,19},
                 map,
                 [{type,
                      {1338,38},
                      map_field_assoc,
                      [{remote_type,
                           {1338,21},
                           [{atom,{1338,21},beam_ssa},
                            {atom,{1338,30},label},
                            []]},
                       {type,
                           {1338,41},
                           list,
                           [{remote_type,
                                {1338,42},
                                [{atom,{1338,42},beam_ssa},
                                 {atom,{1338,51},label},
                                 []]}]}]}]}}]}}.
{function,
 {1341,1},
 ssa_opt_float,1,
 [{clause,
   {1341,1},
   [{var,{1341,1},'_'}],
   [[{call,
      {1341,1},
      {remote,{1341,1},{atom,{1341,1},fake},{atom,{1341,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1341,595},{atom,{1341,1},ignore}]},
  {clause,
   {1341,1},
   [{tuple,
     {1341,15},
     [{match,
       {1341,16},
       {tuple,
        {1341,16},
        [{atom,{1341,16},opt_st},
         {var,{1341,28},'Linear0'},
         {var,{1341,16},'_'},
         {var,{1341,40},'Count0'},
         {var,{1341,16},'_'}]},
       {var,{1341,48},'St'}},
      {var,{1341,52},'FuncDb'}]}],
   [],
   [{debug_line,1342,596},
    {match,
     {1342,5},
     {var,{1342,5},'NonGuards'},
     {call,{1342,17},{atom,{1342,17},non_guards},[{var,{1342,28},'Linear0'}]}},
    {debug_line,1343,597},
    {match,
     {1343,5},
     {var,{1343,5},'Blocks'},
     {call,
      {1343,14},
      {remote,{1343,18},{atom,{1343,14},maps},{atom,{1343,19},from_list}},
      [{var,{1343,29},'Linear0'}]}},
    {debug_line,1344,598},
    {match,
     {1344,5},
     {var,{1344,5},'Preds'},
     {call,
      {1344,13},
      {remote,
       {1344,21},
       {atom,{1344,13},beam_ssa},
       {atom,{1344,22},predecessors}},
      [{var,{1344,35},'Blocks'}]}},
    {debug_line,1345,599},
    {match,
     {1345,5},
     {var,{1345,5},'Fs'},
     {tuple,
      {1345,10},
      [{atom,{1345,10},fs},
       {map,{1345,10},[]},
       {var,{1345,25},'NonGuards'},
       {var,{1345,38},'Blocks'},
       {var,{1345,51},'Preds'}]}},
    {debug_line,1346,600},
    {match,
     {1346,5},
     {tuple,{1346,5},[{var,{1346,6},'Linear'},{var,{1346,13},'Count'}]},
     {call,
      {1346,22},
      {atom,{1346,22},float_opt},
      [{var,{1346,32},'Linear0'},
       {var,{1346,41},'Count0'},
       {var,{1346,49},'Fs'}]}},
    {debug_line,1347,601},
    {tuple,
     {1347,5},
     [{block,
       {1347,6},
       [{match,{1347,6},{var,{1347,6},rec65},{var,{1347,6},'St'}},
        {'case',
         {1347,16},
         {var,{1347,6},rec65},
         [{clause,
           {1347,16},
           [{tuple,
             {1347,16},
             [{atom,{1347,16},opt_st},
              {var,{1347,16},'_'},
              {var,{1347,16},'_'},
              {var,{1347,16},'_'},
              {var,{1347,16},'_'}]}],
           [],
           [{call,
             {1347,16},
             {remote,
              {1347,16},
              {atom,{1347,16},erlang},
              {atom,{1347,16},setelement}},
             [{integer,{1347,16},2},
              {call,
               {1347,27},
               {remote,
                {1347,27},
                {atom,{1347,27},erlang},
                {atom,{1347,27},setelement}},
               [{integer,{1347,27},4},
                {var,{1347,6},rec65},
                {var,{1347,31},'Count'}]},
              {var,{1347,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{1347,16}}],
           [{var,[{generated,true},{location,{1347,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1347,16}}],
             {remote,
              [{generated,true},{location,{1347,16}}],
              {atom,[{generated,true},{location,{1347,16}}],erlang},
              {atom,[{generated,true},{location,{1347,16}}],error}},
             [{tuple,
               [{generated,true},{location,{1347,16}}],
               [{atom,[{generated,true},{location,{1347,16}}],badrecord},
                {var,{1347,6},rec65}]}]}]}]}]},
      {var,{1347,39},'FuncDb'}]}]}]}.
{function,
    {1354,1},
    float_can_optimize_blk,2,
    [{clause,
         {1354,1},
         [{var,{1354,1},'_'},{var,{1354,1},'_'}],
         [[{call,
               {1354,1},
               {remote,
                   {1354,1},
                   {atom,{1354,1},fake},
                   {atom,{1354,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1354,602},{atom,{1354,1},ignore}]},
     {clause,
         {1354,1},
         [{tuple,
              {1354,24},
              [{atom,{1354,24},b_blk},
               {var,{1354,24},'_'},
               {var,{1354,24},'_'},
               {tuple,
                   {1354,36},
                   [{atom,{1354,36},b_br},
                    {var,{1354,36},'_'},
                    {tuple,
                        {1354,47},
                        [{atom,{1354,47},b_var},{var,{1354,47},'_'}]},
                    {var,{1354,36},'_'},
                    {var,{1354,61},'F'}]}]},
          {tuple,
              {1355,24},
              [{atom,{1355,24},fs},
               {var,{1355,24},'_'},
               {var,{1355,39},'NonGuards'},
               {var,{1355,24},'_'},
               {var,{1355,24},'_'}]}],
         [],
         [{debug_line,1356,603},
          {call,
              {1356,5},
              {remote,
                  {1356,12},
                  {atom,{1356,5},gb_sets},
                  {atom,{1356,13},is_member}},
              [{var,{1356,23},'F'},{var,{1356,26},'NonGuards'}]}]},
     {clause,
         {1357,1},
         [{tuple,
              {1357,24},
              [{atom,{1357,24},b_blk},
               {var,{1357,24},'_'},
               {var,{1357,24},'_'},
               {var,{1357,24},'_'}]},
          {tuple,
              {1357,34},
              [{atom,{1357,34},fs},
               {var,{1357,34},'_'},
               {var,{1357,34},'_'},
               {var,{1357,34},'_'},
               {var,{1357,34},'_'}]}],
         [],
         [{debug_line,1358,604},{atom,{1358,5},false}]}]}.
{function,
    {1360,1},
    float_opt,3,
    [{clause,
         {1360,1},
         [{var,{1360,1},'_'},{var,{1360,1},'_'},{var,{1360,1},'_'}],
         [[{call,
               {1360,1},
               {remote,
                   {1360,1},
                   {atom,{1360,1},fake},
                   {atom,{1360,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1360,605},{atom,{1360,1},ignore}]},
     {clause,
         {1360,1},
         [{cons,
              {1360,11},
              {tuple,{1360,12},[{var,{1360,13},'L'},{var,{1360,15},'Blk'}]},
              {var,{1360,20},'Bs0'}},
          {var,{1360,26},'Count0'},
          {var,{1360,34},'Fs'}],
         [],
         [{debug_line,1361,606},
          {'case',
              {1361,5},
              {call,
                  {1361,10},
                  {atom,{1361,10},float_can_optimize_blk},
                  [{var,{1361,33},'Blk'},{var,{1361,38},'Fs'}]},
              [{clause,
                   {1362,9},
                   [{atom,{1362,9},true}],
                   [],
                   [{debug_line,1363,607},
                    {call,
                        {1363,13},
                        {atom,{1363,13},float_opt_1},
                        [{var,{1363,25},'L'},
                         {var,{1363,28},'Blk'},
                         {var,{1363,33},'Bs0'},
                         {var,{1363,38},'Count0'},
                         {var,{1363,46},'Fs'}]}]},
               {clause,
                   {1364,9},
                   [{atom,{1364,9},false}],
                   [],
                   [{debug_line,1365,608},
                    {match,
                        {1365,13},
                        {tuple,
                            {1365,13},
                            [{var,{1365,14},'Bs'},{var,{1365,17},'Count'}]},
                        {call,
                            {1365,26},
                            {atom,{1365,26},float_opt},
                            [{var,{1365,36},'Bs0'},
                             {var,{1365,41},'Count0'},
                             {var,{1365,49},'Fs'}]}},
                    {debug_line,1366,609},
                    {tuple,
                        {1366,13},
                        [{cons,
                             {1366,14},
                             {tuple,
                                 {1366,15},
                                 [{var,{1366,16},'L'},{var,{1366,18},'Blk'}]},
                             {var,{1366,23},'Bs'}},
                         {var,{1366,27},'Count'}]}]}]}]},
     {clause,
         {1368,1},
         [{nil,{1368,11}},{var,{1368,15},'Count'},{var,{1368,22},'_Fs'}],
         [],
         [{debug_line,1369,610},
          {tuple,{1369,5},[{nil,{1369,6}},{var,{1369,9},'Count'}]}]}]}.
{function,
    {1371,1},
    float_opt_1,5,
    [{clause,
         {1371,1},
         [{var,{1371,1},'_'},
          {var,{1371,1},'_'},
          {var,{1371,1},'_'},
          {var,{1371,1},'_'},
          {var,{1371,1},'_'}],
         [[{call,
               {1371,1},
               {remote,
                   {1371,1},
                   {atom,{1371,1},fake},
                   {atom,{1371,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1371,611},{atom,{1371,1},ignore}]},
     {clause,
         {1371,1},
         [{var,{1371,13},'L'},
          {match,
              {1371,16},
              {tuple,
                  {1371,16},
                  [{atom,{1371,16},b_blk},
                   {var,{1371,16},'_'},
                   {var,{1371,26},'Is0'},
                   {var,{1371,16},'_'}]},
              {var,{1371,31},'Blk0'}},
          {var,{1371,37},'Bs0'},
          {var,{1371,42},'Count0'},
          {var,{1371,50},'Fs0'}],
         [],
         [{debug_line,1372,612},
          {'case',
              {1372,5},
              {call,
                  {1372,10},
                  {atom,{1372,10},float_opt_is},
                  [{var,{1372,23},'Is0'},
                   {var,{1372,28},'Fs0'},
                   {var,{1372,33},'Count0'},
                   {nil,{1372,41}}]},
              [{clause,
                   {1373,9},
                   [{tuple,
                        {1373,9},
                        [{var,{1373,10},'Is1'},
                         {var,{1373,14},'Fs1'},
                         {var,{1373,18},'Count1'}]}],
                   [],
                   [{debug_line,1374,613},
                    {match,
                        {1374,13},
                        {tuple,
                            {1374,13},
                            [{var,{1374,14},'Flush'},
                             {var,{1374,20},'Blk'},
                             {var,{1374,24},'Fs'},
                             {var,{1374,27},'Count2'}]},
                        {call,
                            {1374,37},
                            {atom,{1374,37},float_maybe_flush},
                            [{var,{1374,55},'Blk0'},
                             {var,{1374,61},'Fs1'},
                             {var,{1374,66},'Count1'}]}},
                    {debug_line,1375,614},
                    {match,
                        {1375,13},
                        {tuple,
                            {1375,13},
                            [{var,{1375,14},'Blks'},{var,{1375,19},'Count3'}]},
                        {call,
                            {1375,29},
                            {atom,{1375,29},float_fixup_conv},
                            [{var,{1375,46},'L'},
                             {var,{1375,49},'Is1'},
                             {var,{1375,54},'Blk'},
                             {var,{1375,59},'Count2'}]}},
                    {debug_line,1376,615},
                    {match,
                        {1376,13},
                        {tuple,
                            {1376,13},
                            [{var,{1376,14},'Bs'},{var,{1376,17},'Count'}]},
                        {call,
                            {1376,26},
                            {atom,{1376,26},float_opt},
                            [{var,{1376,36},'Bs0'},
                             {var,{1376,41},'Count3'},
                             {var,{1376,49},'Fs'}]}},
                    {debug_line,1377,616},
                    {tuple,
                        {1377,13},
                        [{op,{1377,18},
                             '++',
                             {var,{1377,14},'Blks'},
                             {op,{1377,25},
                                 '++',
                                 {var,{1377,20},'Flush'},
                                 {var,{1377,27},'Bs'}}},
                         {var,{1377,30},'Count'}]}]},
               {clause,
                   {1378,9},
                   [{atom,{1378,9},none}],
                   [],
                   [{debug_line,1379,617},
                    {match,
                        {1379,13},
                        {tuple,
                            {1379,13},
                            [{var,{1379,14},'Bs'},{var,{1379,17},'Count'}]},
                        {call,
                            {1379,26},
                            {atom,{1379,26},float_opt},
                            [{var,{1379,36},'Bs0'},
                             {var,{1379,41},'Count0'},
                             {var,{1379,49},'Fs0'}]}},
                    {debug_line,1380,618},
                    {tuple,
                        {1380,13},
                        [{cons,
                             {1380,14},
                             {tuple,
                                 {1380,15},
                                 [{var,{1380,16},'L'},{var,{1380,18},'Blk0'}]},
                             {var,{1380,24},'Bs'}},
                         {var,{1380,28},'Count'}]}]}]}]}]}.
{function,
    {1385,1},
    float_fixup_conv,4,
    [{clause,
         {1385,1},
         [{var,{1385,1},'_'},
          {var,{1385,1},'_'},
          {var,{1385,1},'_'},
          {var,{1385,1},'_'}],
         [[{call,
               {1385,1},
               {remote,
                   {1385,1},
                   {atom,{1385,1},fake},
                   {atom,{1385,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1385,619},{atom,{1385,1},ignore}]},
     {clause,
         {1385,1},
         [{var,{1385,18},'L'},
          {var,{1385,21},'Is'},
          {var,{1385,25},'Blk'},
          {var,{1385,30},'Count0'}],
         [],
         [{debug_line,1386,620},
          {match,
              {1386,5},
              {var,{1386,5},'Split'},
              {call,
                  {1386,13},
                  {atom,{1386,13},float_split_conv},
                  [{var,{1386,30},'Is'},{var,{1386,34},'Blk'}]}},
          {debug_line,1387,621},
          {match,
              {1387,5},
              {tuple,{1387,5},[{var,{1387,6},'Blks'},{var,{1387,11},'Count'}]},
              {call,
                  {1387,20},
                  {atom,{1387,20},float_number},
                  [{var,{1387,33},'Split'},
                   {var,{1387,40},'L'},
                   {var,{1387,43},'Count0'}]}},
          {debug_line,1388,622},
          {match,
              {1388,5},
              {tuple,
                  {1388,5},
                  [{atom,{1388,5},b_blk},
                   {var,{1388,5},'_'},
                   {var,{1388,5},'_'},
                   {tuple,
                       {1388,17},
                       [{atom,{1388,17},b_br},
                        {var,{1388,17},'_'},
                        {tuple,
                            {1388,28},
                            [{atom,{1388,28},b_var},{var,{1388,28},'_'}]},
                        {var,{1388,17},'_'},
                        {var,{1388,42},'Fail'}]}]},
              {var,{1388,51},'Blk'}},
          {debug_line,1389,623},
          {call,
              {1389,5},
              {atom,{1389,5},float_conv},
              [{var,{1389,16},'Blks'},
               {var,{1389,22},'Fail'},
               {var,{1389,28},'Count'}]}]}]}.
{function,
 {1392,1},
 float_split_conv,2,
 [{clause,
   {1392,1},
   [{var,{1392,1},'_'},{var,{1392,1},'_'}],
   [[{call,
      {1392,1},
      {remote,{1392,1},{atom,{1392,1},fake},{atom,{1392,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1392,624},{atom,{1392,1},ignore}]},
  {clause,
   {1392,1},
   [{var,{1392,18},'Is0'},{var,{1392,23},'Blk'}],
   [],
   [{debug_line,1393,625},
    {match,
     {1393,5},
     {var,{1393,5},'Br'},
     {tuple,
      {1393,10},
      [{atom,{1393,10},b_br},
       {map,{1393,10},[]},
       {tuple,{1393,21},[{atom,{1393,21},b_literal},{atom,{1393,36},true}]},
       {integer,{1393,47},0},
       {integer,{1393,54},0}]}},
    {debug_line,1398,626},
    {'case',
     {1398,5},
     {call,
      {1398,10},
      {remote,{1398,10},{atom,{1398,10},lists},{atom,{1398,10},splitwith}},
      [{block,0,
        [{'fun',
          {1398,20},
          {clauses,
           [{clause,
             {1398,23},
             [{tuple,
               {1398,24},
               [{atom,{1398,24},b_set},
                {var,{1398,24},'_'},
                {var,{1398,24},'_'},
                {var,{1398,34},'Op'},
                {var,{1398,24},'_'}]}],
             [],
             [{debug_line,1399,627},
              {op,
               {1399,31},
               '=/=',
               {var,{1399,28},'Op'},
               {tuple,
                {1399,35},
                [{atom,{1399,36},float},{atom,{1399,42},convert}]}}]}]}}]},
       {var,{1400,25},'Is0'}]},
     [{clause,
       {1401,9},
       [{tuple,{1401,9},[{var,{1401,10},'Is'},{nil,{1401,13}}]}],
       [],
       [{debug_line,1402,628},
        {cons,
         {1402,13},
         {block,
          {1402,14},
          [{match,{1402,14},{var,{1402,14},rec66},{var,{1402,14},'Blk'}},
           {'case',
            {1402,24},
            {var,{1402,14},rec66},
            [{clause,
              {1402,24},
              [{tuple,
                {1402,24},
                [{atom,{1402,24},b_blk},
                 {var,{1402,24},'_'},
                 {var,{1402,24},'_'},
                 {var,{1402,24},'_'}]}],
              [],
              [{call,
                {1402,24},
                {remote,
                 {1402,24},
                 {atom,{1402,24},erlang},
                 {atom,{1402,24},setelement}},
                [{integer,{1402,24},3},
                 {var,{1402,14},rec66},
                 {var,{1402,27},'Is'}]}]},
             {clause,
              [{generated,true},{location,{1402,24}}],
              [{var,[{generated,true},{location,{1402,24}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1402,24}}],
                {remote,
                 [{generated,true},{location,{1402,24}}],
                 {atom,[{generated,true},{location,{1402,24}}],erlang},
                 {atom,[{generated,true},{location,{1402,24}}],error}},
                [{tuple,
                  [{generated,true},{location,{1402,24}}],
                  [{atom,[{generated,true},{location,{1402,24}}],badrecord},
                   {var,{1402,14},rec66}]}]}]}]}]},
         {nil,{1402,30}}}]},
      {clause,
       {1403,9},
       [{tuple,
         {1403,9},
         [{match,
           {1403,10},
           {cons,{1403,10},{var,{1403,11},'_'},{var,{1403,13},'_'}},
           {var,{1403,16},'Is1'}},
          {cons,
           {1403,20},
           {match,
            {1403,21},
            {tuple,
             {1403,21},
             [{atom,{1403,21},b_set},
              {var,{1403,21},'_'},
              {var,{1403,21},'_'},
              {tuple,
               {1403,31},
               [{atom,{1403,32},float},{atom,{1403,38},convert}]},
              {var,{1403,21},'_'}]},
            {var,{1403,48},'Conv'}},
           {var,{1403,53},'Is2'}}]}],
       [],
       [{debug_line,1404,629},
        {cons,
         {1404,13},
         {tuple,
          {1404,14},
          [{atom,{1404,14},b_blk},
           {map,{1404,14},[]},
           {var,{1404,24},'Is1'},
           {var,{1404,33},'Br'}]},
         {cons,
          {1405,14},
          {tuple,
           {1405,14},
           [{atom,{1405,14},b_blk},
            {map,{1405,14},[]},
            {cons,{1405,24},{var,{1405,25},'Conv'},{nil,{1405,29}}},
            {var,{1405,36},'Br'}]},
          {call,
           {1405,40},
           {atom,{1405,40},float_split_conv},
           [{var,{1405,57},'Is2'},{var,{1405,62},'Blk'}]}}}]},
      {clause,
       {1406,9},
       [{tuple,
         {1406,9},
         [{nil,{1406,10}},
          {cons,
           {1406,13},
           {match,
            {1406,14},
            {tuple,
             {1406,14},
             [{atom,{1406,14},b_set},
              {var,{1406,14},'_'},
              {var,{1406,14},'_'},
              {tuple,
               {1406,24},
               [{atom,{1406,25},float},{atom,{1406,31},convert}]},
              {var,{1406,14},'_'}]},
            {var,{1406,41},'Conv'}},
           {var,{1406,46},'Is1'}}]}],
       [],
       [{debug_line,1407,630},
        {cons,
         {1407,13},
         {tuple,
          {1407,14},
          [{atom,{1407,14},b_blk},
           {map,{1407,14},[]},
           {cons,{1407,24},{var,{1407,25},'Conv'},{nil,{1407,29}}},
           {var,{1407,36},'Br'}]},
         {call,
          {1407,40},
          {atom,{1407,40},float_split_conv},
          [{var,{1407,57},'Is1'},{var,{1407,62},'Blk'}]}}]}]}]}]}.
{function,
    {1411,1},
    float_number,3,
    [{clause,
         {1411,1},
         [{var,{1411,1},'_'},{var,{1411,1},'_'},{var,{1411,1},'_'}],
         [[{call,
               {1411,1},
               {remote,
                   {1411,1},
                   {atom,{1411,1},fake},
                   {atom,{1411,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1411,631},{atom,{1411,1},ignore}]},
     {clause,
         {1411,1},
         [{var,{1411,14},'Bs0'},
          {var,{1411,19},'FirstL'},
          {var,{1411,27},'Count0'}],
         [],
         [{debug_line,1412,632},
          {match,
              {1412,5},
              {tuple,
                  {1412,5},
                  [{cons,
                       {1412,6},
                       {tuple,
                           {1412,7},
                           [{var,{1412,8},'_'},{var,{1412,10},'FirstBlk'}]},
                       {var,{1412,20},'Bs'}},
                   {var,{1412,24},'Count'}]},
              {call,
                  {1412,33},
                  {atom,{1412,33},float_number},
                  [{var,{1412,46},'Bs0'},{var,{1412,51},'Count0'}]}},
          {debug_line,1413,633},
          {tuple,
              {1413,5},
              [{cons,
                   {1413,6},
                   {tuple,
                       {1413,7},
                       [{var,{1413,8},'FirstL'},{var,{1413,15},'FirstBlk'}]},
                   {var,{1413,25},'Bs'}},
               {var,{1413,29},'Count'}]}]}]}.
{function,
 {1415,1},
 float_number,2,
 [{clause,
   {1415,1},
   [{var,{1415,1},'_'},{var,{1415,1},'_'}],
   [[{call,
      {1415,1},
      {remote,{1415,1},{atom,{1415,1},fake},{atom,{1415,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1415,634},{atom,{1415,1},ignore}]},
  {clause,
   {1415,1},
   [{cons,{1415,14},{var,{1415,15},'B'},{nil,{1415,16}}},
    {var,{1415,19},'Count'}],
   [],
   [{debug_line,1416,635},
    {tuple,
     {1416,5},
     [{cons,
       {1416,6},
       {tuple,{1416,7},[{var,{1416,8},'Count'},{var,{1416,14},'B'}]},
       {nil,{1416,16}}},
      {var,{1416,18},'Count'}]}]},
  {clause,
   {1417,1},
   [{cons,{1417,14},{var,{1417,15},'B'},{var,{1417,17},'Bs0'}},
    {var,{1417,23},'Count0'}],
   [],
   [{debug_line,1418,636},
    {match,
     {1418,5},
     {var,{1418,5},'Next'},
     {op,{1418,19},'+',{var,{1418,12},'Count0'},{integer,{1418,21},1}}},
    {debug_line,1419,637},
    {match,
     {1419,5},
     {tuple,{1419,5},[{var,{1419,6},'Bs'},{var,{1419,9},'Count'}]},
     {call,
      {1419,18},
      {atom,{1419,18},float_number},
      [{var,{1419,31},'Bs0'},{var,{1419,36},'Next'}]}},
    {debug_line,1420,638},
    {match,
     {1420,5},
     {var,{1420,5},'Br'},
     {tuple,
      {1420,10},
      [{atom,{1420,10},b_br},
       {map,{1420,10},[]},
       {tuple,{1420,21},[{atom,{1420,21},b_literal},{atom,{1420,36},true}]},
       {var,{1420,47},'Next'},
       {var,{1420,57},'Next'}]}},
    {debug_line,1421,639},
    {tuple,
     {1421,5},
     [{cons,
       {1421,6},
       {tuple,
        {1421,7},
        [{var,{1421,8},'Count0'},
         {block,
          {1421,15},
          [{match,{1421,15},{var,{1421,15},rec67},{var,{1421,15},'B'}},
           {'case',
            {1421,23},
            {var,{1421,15},rec67},
            [{clause,
              {1421,23},
              [{tuple,
                {1421,23},
                [{atom,{1421,23},b_blk},
                 {var,{1421,23},'_'},
                 {var,{1421,23},'_'},
                 {var,{1421,23},'_'}]}],
              [],
              [{call,
                {1421,23},
                {remote,
                 {1421,23},
                 {atom,{1421,23},erlang},
                 {atom,{1421,23},setelement}},
                [{integer,{1421,23},4},
                 {var,{1421,15},rec67},
                 {var,{1421,28},'Br'}]}]},
             {clause,
              [{generated,true},{location,{1421,23}}],
              [{var,[{generated,true},{location,{1421,23}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1421,23}}],
                {remote,
                 [{generated,true},{location,{1421,23}}],
                 {atom,[{generated,true},{location,{1421,23}}],erlang},
                 {atom,[{generated,true},{location,{1421,23}}],error}},
                [{tuple,
                  [{generated,true},{location,{1421,23}}],
                  [{atom,[{generated,true},{location,{1421,23}}],badrecord},
                   {var,{1421,15},rec67}]}]}]}]}]}]},
       {var,{1421,33},'Bs'}},
      {var,{1421,37},'Count'}]}]}]}.
{function,
 {1425,1},
 float_conv,3,
 [{clause,
   {1425,1},
   [{var,{1425,1},'_'},{var,{1425,1},'_'},{var,{1425,1},'_'}],
   [[{call,
      {1425,1},
      {remote,{1425,1},{atom,{1425,1},fake},{atom,{1425,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1425,640},{atom,{1425,1},ignore}]},
  {clause,
   {1425,1},
   [{cons,
     {1425,12},
     {tuple,
      {1425,13},
      [{var,{1425,14},'L'},
       {match,
        {1425,16},
        {tuple,
         {1425,16},
         [{atom,{1425,16},b_blk},
          {var,{1425,16},'_'},
          {var,{1425,26},'Is0'},
          {var,{1425,35},'Last'}]},
        {var,{1425,41},'Blk0'}}]},
     {var,{1425,47},'Bs0'}},
    {var,{1425,53},'Fail'},
    {var,{1425,59},'Count0'}],
   [],
   [{debug_line,1426,641},
    {'case',
     {1426,5},
     {var,{1426,10},'Is0'},
     [{clause,
       {1427,9},
       [{cons,
         {1427,9},
         {match,
          {1427,10},
          {tuple,
           {1427,10},
           [{atom,{1427,10},b_set},
            {var,{1427,10},'_'},
            {var,{1427,10},'_'},
            {tuple,
             {1427,20},
             [{atom,{1427,21},float},{atom,{1427,27},convert}]},
            {var,{1427,10},'_'}]},
          {var,{1427,37},'Conv'}},
         {nil,{1427,41}}}],
       [],
       [{debug_line,1428,642},
        {match,
         {1428,13},
         {tuple,{1428,13},[{var,{1428,14},'Bool'},{var,{1428,19},'Count1'}]},
         {call,{1428,29},{atom,{1428,29},new_var},[{var,{1428,37},'Count0'}]}},
        {debug_line,1429,643},
        {match,
         {1429,13},
         {var,{1429,13},'Succeeded'},
         {tuple,
          {1429,25},
          [{atom,{1429,25},b_set},
           {map,{1429,25},[]},
           {var,{1429,56},'Bool'},
           {tuple,
            {1429,35},
            [{atom,{1429,36},succeeded},{atom,{1429,46},body}]},
           {cons,
            {1430,37},
            {'case',
             {1430,38},
             {var,{1430,38},'Conv'},
             [{clause,
               [{generated,true},{location,{1430,38}}],
               [{tuple,
                 [{generated,true},{location,{1430,38}}],
                 [{atom,{1430,38},b_set},
                  {var,{1430,38},'_'},
                  {var,{1430,38},rec68},
                  {var,{1430,38},'_'},
                  {var,{1430,38},'_'}]}],
               [],
               [{var,{1430,38},rec68}]},
              {clause,
               [{generated,true},{location,{1430,38}}],
               [{var,{1430,38},rec68}],
               [],
               [{call,
                 [{generated,true},{location,{1430,38}}],
                 {remote,
                  [{generated,true},{location,{1430,38}}],
                  {atom,[{generated,true},{location,{1430,38}}],erlang},
                  {atom,[{generated,true},{location,{1430,38}}],error}},
                 [{tuple,
                   [{generated,true},{location,{1430,38}}],
                   [{atom,[{generated,true},{location,{1430,38}}],badrecord},
                    {var,{1430,38},rec68}]}]}]}]},
            {nil,{1430,52}}}]}},
        {debug_line,1431,644},
        {match,
         {1431,13},
         {var,{1431,13},'Is'},
         {cons,
          {1431,18},
          {var,{1431,19},'Conv'},
          {cons,{1431,24},{var,{1431,24},'Succeeded'},{nil,{1431,33}}}}},
        {debug_line,1432,645},
        {match,
         {1432,13},
         {var,{1432,13},'Br'},
         {block,
          {1432,18},
          [{match,{1432,18},{var,{1432,18},rec69},{var,{1432,18},'Last'}},
           {'case',
            {1432,28},
            {var,{1432,18},rec69},
            [{clause,
              {1432,28},
              [{tuple,
                {1432,28},
                [{atom,{1432,28},b_br},
                 {var,{1432,28},'_'},
                 {var,{1432,28},'_'},
                 {var,{1432,28},'_'},
                 {var,{1432,28},'_'}]}],
              [],
              [{call,
                {1432,28},
                {remote,
                 {1432,28},
                 {atom,{1432,28},erlang},
                 {atom,{1432,28},setelement}},
                [{integer,{1432,28},3},
                 {call,
                  {1432,38},
                  {remote,
                   {1432,38},
                   {atom,{1432,38},erlang},
                   {atom,{1432,38},setelement}},
                  [{integer,{1432,38},5},
                   {var,{1432,18},rec69},
                   {var,{1432,43},'Fail'}]},
                 {var,{1432,33},'Bool'}]}]},
             {clause,
              [{generated,true},{location,{1432,28}}],
              [{var,[{generated,true},{location,{1432,28}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1432,28}}],
                {remote,
                 [{generated,true},{location,{1432,28}}],
                 {atom,[{generated,true},{location,{1432,28}}],erlang},
                 {atom,[{generated,true},{location,{1432,28}}],error}},
                [{tuple,
                  [{generated,true},{location,{1432,28}}],
                  [{atom,[{generated,true},{location,{1432,28}}],badrecord},
                   {var,{1432,18},rec69}]}]}]}]}]}},
        {debug_line,1433,646},
        {match,
         {1433,13},
         {var,{1433,13},'Blk'},
         {block,
          {1433,19},
          [{match,{1433,19},{var,{1433,19},rec70},{var,{1433,19},'Blk0'}},
           {'case',
            {1433,30},
            {var,{1433,19},rec70},
            [{clause,
              {1433,30},
              [{tuple,
                {1433,30},
                [{atom,{1433,30},b_blk},
                 {var,{1433,30},'_'},
                 {var,{1433,30},'_'},
                 {var,{1433,30},'_'}]}],
              [],
              [{call,
                {1433,30},
                {remote,
                 {1433,30},
                 {atom,{1433,30},erlang},
                 {atom,{1433,30},setelement}},
                [{integer,{1433,30},3},
                 {call,
                  {1433,36},
                  {remote,
                   {1433,36},
                   {atom,{1433,36},erlang},
                   {atom,{1433,36},setelement}},
                  [{integer,{1433,36},4},
                   {var,{1433,19},rec70},
                   {var,{1433,41},'Br'}]},
                 {var,{1433,33},'Is'}]}]},
             {clause,
              [{generated,true},{location,{1433,30}}],
              [{var,[{generated,true},{location,{1433,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1433,30}}],
                {remote,
                 [{generated,true},{location,{1433,30}}],
                 {atom,[{generated,true},{location,{1433,30}}],erlang},
                 {atom,[{generated,true},{location,{1433,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{1433,30}}],
                  [{atom,[{generated,true},{location,{1433,30}}],badrecord},
                   {var,{1433,19},rec70}]}]}]}]}]}},
        {debug_line,1434,647},
        {match,
         {1434,13},
         {tuple,{1434,13},[{var,{1434,14},'Bs'},{var,{1434,17},'Count'}]},
         {call,
          {1434,26},
          {atom,{1434,26},float_conv},
          [{var,{1434,37},'Bs0'},
           {var,{1434,42},'Fail'},
           {var,{1434,48},'Count1'}]}},
        {debug_line,1435,648},
        {tuple,
         {1435,13},
         [{cons,
           {1435,14},
           {tuple,{1435,15},[{var,{1435,16},'L'},{var,{1435,18},'Blk'}]},
           {var,{1435,23},'Bs'}},
          {var,{1435,27},'Count'}]}]},
      {clause,
       {1436,9},
       [{cons,{1436,9},{var,{1436,10},'_'},{var,{1436,12},'_'}}],
       [],
       [{debug_line,1437,649},
        {match,
         {1437,13},
         {tuple,{1437,13},[{var,{1437,14},'Bs'},{var,{1437,17},'Count'}]},
         {call,
          {1437,26},
          {atom,{1437,26},float_conv},
          [{var,{1437,37},'Bs0'},
           {var,{1437,42},'Fail'},
           {var,{1437,48},'Count0'}]}},
        {debug_line,1438,650},
        {tuple,
         {1438,13},
         [{cons,
           {1438,14},
           {tuple,{1438,15},[{var,{1438,16},'L'},{var,{1438,18},'Blk0'}]},
           {var,{1438,24},'Bs'}},
          {var,{1438,28},'Count'}]}]}]}]},
  {clause,
   {1440,1},
   [{nil,{1440,12}},{var,{1440,16},'_'},{var,{1440,19},'Count'}],
   [],
   [{debug_line,1441,651},
    {tuple,{1441,5},[{nil,{1441,6}},{var,{1441,9},'Count'}]}]}]}.
{function,
 {1443,1},
 float_maybe_flush,3,
 [{clause,
   {1443,1},
   [{var,{1443,1},'_'},{var,{1443,1},'_'},{var,{1443,1},'_'}],
   [[{call,
      {1443,1},
      {remote,{1443,1},{atom,{1443,1},fake},{atom,{1443,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1443,652},{atom,{1443,1},ignore}]},
  {clause,
   {1443,1},
   [{var,{1443,19},'Blk0'},{var,{1443,25},'Fs0'},{var,{1443,30},'Count0'}],
   [],
   [{debug_line,1444,653},
    {match,
     {1444,5},
     {tuple,
      {1444,5},
      [{atom,{1444,5},b_blk},
       {var,{1444,5},'_'},
       {var,{1444,5},'_'},
       {match,
        {1444,17},
        {tuple,
         {1444,17},
         [{atom,{1444,17},b_br},
          {var,{1444,17},'_'},
          {tuple,{1444,28},[{atom,{1444,28},b_var},{var,{1444,28},'_'}]},
          {var,{1444,42},'Succ'},
          {var,{1444,17},'_'}]},
        {var,{1444,48},'Br'}}]},
     {var,{1444,54},'Blk0'}},
    {debug_line,1448,654},
    {'case',
     {1448,5},
     {call,
      {1448,10},
      {atom,{1448,10},float_safe_to_skip_flush},
      [{var,{1448,35},'Succ'},{var,{1448,41},'Fs0'}]},
     [{clause,
       {1449,9},
       [{atom,{1449,9},true}],
       [],
       [{debug_line,1451,655},
        {tuple,
         {1451,13},
         [{nil,{1451,14}},
          {var,{1451,17},'Blk0'},
          {var,{1451,22},'Fs0'},
          {var,{1451,26},'Count0'}]}]},
      {clause,
       {1452,9},
       [{atom,{1452,9},false}],
       [],
       [{debug_line,1454,656},
        {match,{1454,13},{var,{1454,13},'FlushL'},{var,{1454,22},'Count0'}},
        {debug_line,1455,657},
        {match,
         {1455,13},
         {var,{1455,13},'Count'},
         {op,{1455,28},'+',{var,{1455,21},'Count0'},{integer,{1455,30},1}}},
        {debug_line,1456,658},
        {match,
         {1456,13},
         {var,{1456,13},'Blk'},
         {block,
          {1456,19},
          [{match,
            {1456,30},
            {var,{1456,30},rec71},
            {block,
             {1456,35},
             [{match,{1456,35},{var,{1456,35},rec73},{var,{1456,35},'Br'}},
              {'case',
               {1456,43},
               {var,{1456,35},rec73},
               [{clause,
                 {1456,43},
                 [{tuple,
                   {1456,43},
                   [{atom,{1456,43},b_br},
                    {var,{1456,43},'_'},
                    {var,{1456,43},'_'},
                    {var,{1456,43},'_'},
                    {var,{1456,43},'_'}]}],
                 [],
                 [{call,
                   {1456,43},
                   {remote,
                    {1456,43},
                    {atom,{1456,43},erlang},
                    {atom,{1456,43},setelement}},
                   [{integer,{1456,43},4},
                    {var,{1456,35},rec73},
                    {var,{1456,48},'FlushL'}]}]},
                {clause,
                 [{generated,true},{location,{1456,43}}],
                 [{var,[{generated,true},{location,{1456,43}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1456,43}}],
                   {remote,
                    [{generated,true},{location,{1456,43}}],
                    {atom,[{generated,true},{location,{1456,43}}],erlang},
                    {atom,[{generated,true},{location,{1456,43}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1456,43}}],
                     [{atom,[{generated,true},{location,{1456,43}}],badrecord},
                      {var,{1456,35},rec73}]}]}]}]}]}},
           {match,{1456,19},{var,{1456,19},rec72},{var,{1456,19},'Blk0'}},
           {'case',
            {1456,30},
            {var,{1456,19},rec72},
            [{clause,
              {1456,30},
              [{tuple,
                {1456,30},
                [{atom,{1456,30},b_blk},
                 {var,{1456,30},'_'},
                 {var,{1456,30},'_'},
                 {var,{1456,30},'_'}]}],
              [],
              [{call,
                {1456,30},
                {remote,
                 {1456,30},
                 {atom,{1456,30},erlang},
                 {atom,{1456,30},setelement}},
                [{integer,{1456,30},4},
                 {var,{1456,19},rec72},
                 {var,{1456,30},rec71}]}]},
             {clause,
              [{generated,true},{location,{1456,30}}],
              [{var,[{generated,true},{location,{1456,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1456,30}}],
                {remote,
                 [{generated,true},{location,{1456,30}}],
                 {atom,[{generated,true},{location,{1456,30}}],erlang},
                 {atom,[{generated,true},{location,{1456,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{1456,30}}],
                  [{atom,[{generated,true},{location,{1456,30}}],badrecord},
                   {var,{1456,19},rec72}]}]}]}]}]}},
        {debug_line,1459,659},
        {match,
         {1459,13},
         {var,{1459,13},'FlushIs'},
         {call,
          {1459,23},
          {atom,{1459,23},float_flush_regs},
          [{var,{1459,40},'Fs0'}]}},
        {debug_line,1460,660},
        {match,
         {1460,13},
         {var,{1460,13},'FlushBr'},
         {tuple,
          {1460,23},
          [{atom,{1460,23},b_br},
           {map,{1460,23},[]},
           {tuple,
            {1460,34},
            [{atom,{1460,34},b_literal},{atom,{1460,49},true}]},
           {var,{1460,60},'Succ'},
           {var,{1460,70},'Succ'}]}},
        {debug_line,1461,661},
        {match,
         {1461,13},
         {var,{1461,13},'FlushBlk'},
         {tuple,
          {1461,24},
          [{atom,{1461,24},b_blk},
           {map,{1461,24},[]},
           {var,{1461,34},'FlushIs'},
           {var,{1461,47},'FlushBr'}]}},
        {debug_line,1464,662},
        {match,
         {1464,13},
         {var,{1464,13},'Fs'},
         {block,
          {1464,18},
          [{match,{1464,18},{var,{1464,18},rec74},{var,{1464,18},'Fs0'}},
           {'case',
            {1464,25},
            {var,{1464,18},rec74},
            [{clause,
              {1464,25},
              [{tuple,
                {1464,25},
                [{atom,{1464,25},fs},
                 {var,{1464,25},'_'},
                 {var,{1464,25},'_'},
                 {var,{1464,25},'_'},
                 {var,{1464,25},'_'}]}],
              [],
              [{call,
                {1464,25},
                {remote,
                 {1464,25},
                 {atom,{1464,25},erlang},
                 {atom,{1464,25},setelement}},
                [{integer,{1464,25},2},
                 {var,{1464,18},rec74},
                 {map,{1464,30},[]}]}]},
             {clause,
              [{generated,true},{location,{1464,25}}],
              [{var,[{generated,true},{location,{1464,25}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1464,25}}],
                {remote,
                 [{generated,true},{location,{1464,25}}],
                 {atom,[{generated,true},{location,{1464,25}}],erlang},
                 {atom,[{generated,true},{location,{1464,25}}],error}},
                [{tuple,
                  [{generated,true},{location,{1464,25}}],
                  [{atom,[{generated,true},{location,{1464,25}}],badrecord},
                   {var,{1464,18},rec74}]}]}]}]}]}},
        {debug_line,1465,663},
        {match,
         {1465,13},
         {var,{1465,13},'FlushBs'},
         {cons,
          {1465,23},
          {tuple,
           {1465,24},
           [{var,{1465,25},'FlushL'},{var,{1465,32},'FlushBlk'}]},
          {nil,{1465,41}}}},
        {debug_line,1466,664},
        {tuple,
         {1466,13},
         [{var,{1466,14},'FlushBs'},
          {var,{1466,22},'Blk'},
          {var,{1466,26},'Fs'},
          {var,{1466,29},'Count'}]}]}]}]}]}.
{function,
 {1469,1},
 float_safe_to_skip_flush,2,
 [{clause,
   {1469,1},
   [{var,{1469,1},'_'},{var,{1469,1},'_'}],
   [[{call,
      {1469,1},
      {remote,{1469,1},{atom,{1469,1},fake},{atom,{1469,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1469,665},{atom,{1469,1},ignore}]},
  {clause,
   {1469,1},
   [{var,{1469,26},'L'},
    {match,
     {1469,29},
     {tuple,
      {1469,29},
      [{atom,{1469,29},fs},
       {var,{1469,29},'_'},
       {var,{1469,29},'_'},
       {var,{1469,36},'Blocks'},
       {var,{1469,49},'Preds'}]},
     {var,{1469,56},'Fs'}}],
   [],
   [{debug_line,1470,666},
    {match,
     {1470,5},
     {tuple,
      {1470,5},
      [{atom,{1470,5},b_blk},
       {var,{1470,5},'_'},
       {var,{1470,15},'Is'},
       {var,{1470,5},'_'}]},
     {match,
      {1470,21},
      {var,{1470,21},'Blk'},
      {call,
       {1470,27},
       {remote,{1470,27},{atom,{1470,27},erlang},{atom,{1470,27},map_get}},
       [{var,{1470,35},'L'},{var,{1470,38},'Blocks'}]}}},
    {debug_line,1471,667},
    {'case',
     {1471,5},
     {var,{1471,10},'Preds'},
     [{clause,
       {1472,9},
       [{map,
         {1472,9},
         [{map_field_exact,
           {1472,13},
           {var,{1472,11},'L'},
           {cons,{1472,16},{var,{1472,17},'_'},{nil,{1472,18}}}}]}],
       [],
       [{debug_line,1473,668},
        {'case',
         {1473,13},
         {call,
          {1473,13},
          {atom,{1473,13},float_can_optimize_blk},
          [{var,{1473,36},'Blk'},{var,{1473,41},'Fs'}]},
         [{clause,
           {1473,13},
           [{atom,{1473,13},true}],
           [],
           [{call,
             {1473,53},
             {atom,{1473,53},float_optimizable_is},
             [{var,{1473,74},'Is'}]}]},
          {clause,
           {1473,13},
           [{atom,{1473,13},false}],
           [],
           [{atom,{1473,13},false}]},
          {clause,
           [{generated,true},{location,{1473,13}}],
           [{var,{1473,13},cov1}],
           [],
           [{call,
             {1473,13},
             {remote,{1473,13},{atom,{1473,13},erlang},{atom,{1473,13},error}},
             [{block,0,
               [{tuple,
                 {1473,13},
                 [{atom,{1473,13},badarg},{var,{1473,13},cov1}]}]}]}]}]}]},
      {clause,
       {1474,9},
       [{map,{1474,9},[]}],
       [],
       [{debug_line,1476,669},{atom,{1476,13},false}]}]}]}]}.
{function,
    {1479,1},
    float_optimizable_is,1,
    [{clause,
         {1479,1},
         [{var,{1479,1},'_'}],
         [[{call,
               {1479,1},
               {remote,
                   {1479,1},
                   {atom,{1479,1},fake},
                   {atom,{1479,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1479,670},{atom,{1479,1},ignore}]},
     {clause,
         {1479,1},
         [{cons,
              {1479,22},
              {tuple,
                  {1479,23},
                  [{atom,{1479,23},b_set},
                   {map,
                       {1479,35},
                       [{map_field_exact,
                            {1479,45},
                            {atom,{1479,37},float_op},
                            {var,{1479,47},'_'}}]},
                   {var,{1479,23},'_'},
                   {var,{1479,23},'_'},
                   {var,{1479,23},'_'}]},
              {var,{1479,51},'_'}}],
         [],
         [{debug_line,1480,671},{atom,{1480,5},true}]},
     {clause,
         {1481,1},
         [{cons,
              {1481,22},
              {tuple,
                  {1481,23},
                  [{atom,{1481,23},b_set},
                   {var,{1481,23},'_'},
                   {var,{1481,23},'_'},
                   {atom,{1481,33},get_tuple_element},
                   {var,{1481,23},'_'}]},
              {var,{1481,52},'Is'}}],
         [],
         [{debug_line,1484,672},
          {call,
              {1484,5},
              {atom,{1484,5},float_optimizable_is},
              [{var,{1484,26},'Is'}]}]},
     {clause,
         {1485,1},
         [{var,{1485,22},'_'}],
         [],
         [{debug_line,1486,673},{atom,{1486,5},false}]}]}.
{function,
 {1488,1},
 float_opt_is,4,
 [{clause,
   {1488,1},
   [{var,{1488,1},'_'},
    {var,{1488,1},'_'},
    {var,{1488,1},'_'},
    {var,{1488,1},'_'}],
   [[{call,
      {1488,1},
      {remote,{1488,1},{atom,{1488,1},fake},{atom,{1488,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1488,674},{atom,{1488,1},ignore}]},
  {clause,
   {1488,1},
   [{cons,
     {1488,14},
     {match,
      {1488,15},
      {tuple,
       {1488,15},
       [{atom,{1488,15},b_set},
        {var,{1488,15},'_'},
        {var,{1488,15},'_'},
        {tuple,{1488,25},[{atom,{1488,26},succeeded},{var,{1488,36},'_'}]},
        {cons,{1488,44},{var,{1488,45},'Src'},{nil,{1488,48}}}]},
      {var,{1488,51},'I0'}},
     {nil,{1488,53}}},
    {match,
     {1489,14},
     {tuple,
      {1489,14},
      [{atom,{1489,14},fs},
       {var,{1489,23},'Rs'},
       {var,{1489,14},'_'},
       {var,{1489,14},'_'},
       {var,{1489,14},'_'}]},
     {var,{1489,27},'Fs'}},
    {var,{1489,31},'Count'},
    {var,{1489,38},'Acc'}],
   [],
   [{debug_line,1490,675},
    {'case',
     {1490,5},
     {var,{1490,10},'Rs'},
     [{clause,
       {1491,9},
       [{map,
         {1491,9},
         [{map_field_exact,
           {1491,15},
           {var,{1491,11},'Src'},
           {tuple,{1491,18},[{var,{1491,19},'Fr'},{var,{1491,22},'_'}]}}]}],
       [],
       [{debug_line,1492,676},
        {match,
         {1492,13},
         {var,{1492,13},'I'},
         {block,
          {1492,17},
          [{match,
            {1492,26},
            {var,{1492,26},rec75},
            {cons,{1492,31},{var,{1492,32},'Fr'},{nil,{1492,34}}}},
           {match,{1492,17},{var,{1492,17},rec76},{var,{1492,17},'I0'}},
           {'case',
            {1492,26},
            {var,{1492,17},rec76},
            [{clause,
              {1492,26},
              [{tuple,
                {1492,26},
                [{atom,{1492,26},b_set},
                 {var,{1492,26},'_'},
                 {var,{1492,26},'_'},
                 {var,{1492,26},'_'},
                 {var,{1492,26},'_'}]}],
              [],
              [{call,
                {1492,26},
                {remote,
                 {1492,26},
                 {atom,{1492,26},erlang},
                 {atom,{1492,26},setelement}},
                [{integer,{1492,26},5},
                 {var,{1492,17},rec76},
                 {var,{1492,26},rec75}]}]},
             {clause,
              [{generated,true},{location,{1492,26}}],
              [{var,[{generated,true},{location,{1492,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1492,26}}],
                {remote,
                 [{generated,true},{location,{1492,26}}],
                 {atom,[{generated,true},{location,{1492,26}}],erlang},
                 {atom,[{generated,true},{location,{1492,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{1492,26}}],
                  [{atom,[{generated,true},{location,{1492,26}}],badrecord},
                   {var,{1492,17},rec76}]}]}]}]}]}},
        {debug_line,1493,677},
        {tuple,
         {1493,13},
         [{call,
           {1493,14},
           {remote,{1493,14},{atom,{1493,14},lists},{atom,{1493,14},reverse}},
           [{var,{1493,22},'Acc'},
            {block,0,[{cons,{1493,27},{var,{1493,28},'I'},{nil,{1493,29}}}]}]},
          {var,{1493,32},'Fs'},
          {var,{1493,35},'Count'}]}]},
      {clause,
       {1494,9},
       [{map,{1494,9},[]}],
       [],
       [{debug_line,1495,678},{atom,{1495,13},none}]}]}]},
  {clause,
   {1497,1},
   [{cons,
     {1497,14},
     {match,
      {1497,15},
      {tuple,
       {1497,15},
       [{atom,{1497,15},b_set},
        {var,{1497,27},'Anno0'},
        {var,{1497,15},'_'},
        {var,{1497,15},'_'},
        {var,{1497,15},'_'}]},
      {var,{1497,34},'I0'}},
     {var,{1497,37},'Is0'}},
    {var,{1497,43},'Fs0'},
    {var,{1497,48},'Count0'},
    {var,{1497,56},'Acc'}],
   [],
   [{debug_line,1498,679},
    {'case',
     {1498,5},
     {var,{1498,10},'Anno0'},
     [{clause,
       {1499,9},
       [{map,
         {1499,9},
         [{map_field_exact,
           {1499,19},
           {atom,{1499,11},float_op},
           {var,{1499,21},'FTypes'}}]}],
       [],
       [{debug_line,1500,680},
        {match,
         {1500,13},
         {var,{1500,13},'ArgTypes0'},
         {call,
          {1500,25},
          {remote,{1500,29},{atom,{1500,25},maps},{atom,{1500,30},get}},
          [{atom,{1500,34},arg_types},
           {var,{1500,45},'Anno0'},
           {block,0,[{map,{1500,52},[]}]}]}},
        {debug_line,1501,681},
        {match,
         {1501,13},
         {var,{1501,13},'ArgTypes'},
         {call,
          {1501,24},
          {atom,{1501,24},float_arg_types},
          [{var,{1501,40},'FTypes'},
           {integer,{1501,48},0},
           {var,{1501,51},'ArgTypes0'}]}},
        {debug_line,1502,682},
        {match,
         {1502,13},
         {var,{1502,13},'Anno1'},
         {call,
          {1502,21},
          {remote,{1502,25},{atom,{1502,21},maps},{atom,{1502,26},remove}},
          [{atom,{1502,33},float_op},{var,{1502,43},'Anno0'}]}},
        {debug_line,1503,683},
        {match,
         {1503,13},
         {var,{1503,13},'Anno'},
         {call,
          {1503,20},
          {remote,{1503,24},{atom,{1503,20},maps},{atom,{1503,25},remove}},
          [{atom,{1503,32},arg_types},{var,{1503,43},'Anno1'}]}},
        {debug_line,1504,684},
        {match,
         {1504,13},
         {var,{1504,13},'I1'},
         {block,
          {1504,18},
          [{match,{1504,18},{var,{1504,18},rec77},{var,{1504,18},'I0'}},
           {'case',
            {1504,27},
            {var,{1504,18},rec77},
            [{clause,
              {1504,27},
              [{tuple,
                {1504,27},
                [{atom,{1504,27},b_set},
                 {var,{1504,27},'_'},
                 {var,{1504,27},'_'},
                 {var,{1504,27},'_'},
                 {var,{1504,27},'_'}]}],
              [],
              [{call,
                {1504,27},
                {remote,
                 {1504,27},
                 {atom,{1504,27},erlang},
                 {atom,{1504,27},setelement}},
                [{integer,{1504,27},2},
                 {var,{1504,18},rec77},
                 {var,{1504,32},'Anno'}]}]},
             {clause,
              [{generated,true},{location,{1504,27}}],
              [{var,[{generated,true},{location,{1504,27}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1504,27}}],
                {remote,
                 [{generated,true},{location,{1504,27}}],
                 {atom,[{generated,true},{location,{1504,27}}],erlang},
                 {atom,[{generated,true},{location,{1504,27}}],error}},
                [{tuple,
                  [{generated,true},{location,{1504,27}}],
                  [{atom,[{generated,true},{location,{1504,27}}],badrecord},
                   {var,{1504,18},rec77}]}]}]}]}]}},
        {debug_line,1505,685},
        {match,
         {1505,13},
         {tuple,
          {1505,13},
          [{var,{1505,14},'Is'},{var,{1505,17},'Fs'},{var,{1505,20},'Count'}]},
         {call,
          {1505,29},
          {atom,{1505,29},float_make_op},
          [{var,{1505,43},'I1'},
           {var,{1505,47},'FTypes'},
           {var,{1505,55},'ArgTypes'},
           {var,{1505,65},'Fs0'},
           {var,{1505,70},'Count0'}]}},
        {debug_line,1506,686},
        {call,
         {1506,13},
         {atom,{1506,13},float_opt_is},
         [{var,{1506,26},'Is0'},
          {var,{1506,31},'Fs'},
          {var,{1506,35},'Count'},
          {block,0,
           [{call,
             {1506,42},
             {remote,
              {1506,42},
              {atom,{1506,42},lists},
              {atom,{1506,42},reverse}},
             [{var,{1506,50},'Is'},{var,{1506,54},'Acc'}]}]}]}]},
      {clause,
       {1507,9},
       [{map,{1507,9},[]}],
       [],
       [{debug_line,1508,687},
        {call,
         {1508,13},
         {atom,{1508,13},float_opt_is},
         [{var,{1508,26},'Is0'},
          {var,{1508,31},'Fs0'},
          {var,{1508,36},'Count0'},
          {block,0,
           [{cons,
             {1508,44},
             {var,{1508,45},'I0'},
             {var,{1508,48},'Acc'}}]}]}]}]}]},
  {clause,
   {1510,1},
   [{nil,{1510,14}},
    {var,{1510,18},'_Fs'},
    {var,{1510,23},'_Count'},
    {var,{1510,31},'_Acc'}],
   [],
   [{debug_line,1511,688},{atom,{1511,5},none}]}]}.
{function,
    {1513,1},
    float_arg_types,3,
    [{clause,
         {1513,1},
         [{var,{1513,1},'_'},{var,{1513,1},'_'},{var,{1513,1},'_'}],
         [[{call,
               {1513,1},
               {remote,
                   {1513,1},
                   {atom,{1513,1},fake},
                   {atom,{1513,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1513,689},{atom,{1513,1},ignore}]},
     {clause,
         {1513,1},
         [{cons,{1513,17},{var,{1513,18},'_'},{var,{1513,20},'As'}},
          {var,{1513,25},'Index'},
          {var,{1513,32},'ArgTypes'}],
         [],
         [{debug_line,1514,690},
          {'case',
              {1514,5},
              {var,{1514,10},'ArgTypes'},
              [{clause,
                   {1515,9},
                   [{map,
                        {1515,9},
                        [{map_field_exact,
                             {1515,17},
                             {var,{1515,11},'Index'},
                             {var,{1515,20},'ArgType'}}]}],
                   [],
                   [{debug_line,1516,691},
                    {cons,
                        {1516,13},
                        {var,{1516,14},'ArgType'},
                        {call,
                            {1516,22},
                            {atom,{1516,22},float_arg_types},
                            [{var,{1516,38},'As'},
                             {block,0,
                                 [{op,{1516,48},
                                      '+',
                                      {var,{1516,42},'Index'},
                                      {integer,{1516,50},1}}]},
                             {var,{1516,53},'ArgTypes'}]}}]},
               {clause,
                   {1517,9},
                   [{map,{1517,9},[]}],
                   [],
                   [{debug_line,1518,692},
                    {cons,
                        {1518,13},
                        {atom,{1518,14},any},
                        {call,
                            {1518,18},
                            {atom,{1518,18},float_arg_types},
                            [{var,{1518,34},'As'},
                             {block,0,
                                 [{op,{1518,44},
                                      '+',
                                      {var,{1518,38},'Index'},
                                      {integer,{1518,46},1}}]},
                             {var,{1518,49},'ArgTypes'}]}}]}]}]},
     {clause,
         {1520,1},
         [{nil,{1520,17}},{var,{1520,21},'_'},{var,{1520,24},'_'}],
         [],
         [{debug_line,1520,693},{nil,{1520,30}}]}]}.
{function,
 {1522,1},
 float_make_op,5,
 [{clause,
   {1522,1},
   [{var,{1522,1},'_'},
    {var,{1522,1},'_'},
    {var,{1522,1},'_'},
    {var,{1522,1},'_'},
    {var,{1522,1},'_'}],
   [[{call,
      {1522,1},
      {remote,{1522,1},{atom,{1522,1},fake},{atom,{1522,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1522,694},{atom,{1522,1},ignore}]},
  {clause,
   {1522,1},
   [{match,
     {1522,15},
     {tuple,
      {1522,15},
      [{atom,{1522,15},b_set},
       {var,{1522,56},'Anno'},
       {var,{1522,38},'Dst'},
       {tuple,{1522,25},[{atom,{1522,26},bif},{var,{1522,30},'Op'}]},
       {var,{1522,47},'As0'}]},
     {var,{1522,62},'I0'}},
    {var,{1523,15},'Ts'},
    {var,{1523,19},'ArgTypes'},
    {match,
     {1523,29},
     {tuple,
      {1523,29},
      [{atom,{1523,29},fs},
       {var,{1523,38},'Rs0'},
       {var,{1523,29},'_'},
       {var,{1523,29},'_'},
       {var,{1523,29},'_'}]},
     {var,{1523,43},'Fs'}},
    {var,{1523,47},'Count0'}],
   [],
   [{debug_line,1524,695},
    {match,
     {1524,5},
     {tuple,
      {1524,5},
      [{var,{1524,6},'As1'},{var,{1524,10},'Rs1'},{var,{1524,14},'Count1'}]},
     {call,
      {1524,24},
      {atom,{1524,24},float_load},
      [{var,{1524,35},'As0'},
       {var,{1524,40},'Ts'},
       {var,{1524,44},'ArgTypes'},
       {var,{1524,54},'Anno'},
       {var,{1524,60},'Rs0'},
       {var,{1524,65},'Count0'},
       {nil,{1524,73}}]}},
    {debug_line,1525,696},
    {match,
     {1525,5},
     {tuple,{1525,5},[{var,{1525,6},'As'},{var,{1525,9},'Is0'}]},
     {call,
      {1525,16},
      {remote,{1525,16},{atom,{1525,16},lists},{atom,{1525,16},unzip}},
      [{var,{1525,22},'As1'}]}},
    {debug_line,1526,697},
    {match,
     {1526,5},
     {tuple,{1526,5},[{var,{1526,6},'FrDst'},{var,{1526,12},'Count2'}]},
     {call,{1526,22},{atom,{1526,22},new_var},[{var,{1526,30},'Count1'}]}},
    {debug_line,1527,698},
    {match,
     {1527,5},
     {var,{1527,5},'I'},
     {block,
      {1527,9},
      [{match,
        {1527,18},
        {var,{1527,18},rec78},
        {tuple,{1527,21},[{atom,{1527,22},float},{var,{1527,28},'Op'}]}},
       {match,{1527,9},{var,{1527,9},rec79},{var,{1527,9},'I0'}},
       {'case',
        {1527,32},
        {var,{1527,9},rec79},
        [{clause,
          {1527,32},
          [{tuple,
            {1527,32},
            [{atom,{1527,32},b_set},
             {var,{1527,32},'_'},
             {var,{1527,32},'_'},
             {var,{1527,32},'_'},
             {var,{1527,32},'_'}]}],
          [],
          [{call,
            {1527,32},
            {remote,
             {1527,32},
             {atom,{1527,32},erlang},
             {atom,{1527,32},setelement}},
            [{integer,{1527,32},3},
             {call,
              {1527,18},
              {remote,
               {1527,18},
               {atom,{1527,18},erlang},
               {atom,{1527,18},setelement}},
              [{integer,{1527,18},4},
               {call,
                {1527,42},
                {remote,
                 {1527,42},
                 {atom,{1527,42},erlang},
                 {atom,{1527,42},setelement}},
                [{integer,{1527,42},5},
                 {var,{1527,9},rec79},
                 {var,{1527,47},'As'}]},
               {var,{1527,18},rec78}]},
             {var,{1527,36},'FrDst'}]}]},
         {clause,
          [{generated,true},{location,{1527,32}}],
          [{var,[{generated,true},{location,{1527,32}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1527,32}}],
            {remote,
             [{generated,true},{location,{1527,32}}],
             {atom,[{generated,true},{location,{1527,32}}],erlang},
             {atom,[{generated,true},{location,{1527,32}}],error}},
            [{tuple,
              [{generated,true},{location,{1527,32}}],
              [{atom,[{generated,true},{location,{1527,32}}],badrecord},
               {var,{1527,9},rec79}]}]}]}]}]}},
    {debug_line,1528,699},
    {match,
     {1528,5},
     {var,{1528,5},'Rs'},
     {map,
      {1528,13},
      {var,{1528,10},'Rs1'},
      [{map_field_assoc,
        {1528,19},
        {var,{1528,15},'Dst'},
        {tuple,
         {1528,22},
         [{var,{1528,23},'FrDst'},{atom,{1528,29},original}]}}]}},
    {debug_line,1529,700},
    {match,
     {1529,5},
     {var,{1529,5},'Is'},
     {op,
      {1529,22},
      '++',
      {call,
       {1529,10},
       {remote,{1529,10},{atom,{1529,10},lists},{atom,{1529,10},append}},
       [{var,{1529,17},'Is0'}]},
      {cons,{1529,25},{var,{1529,26},'I'},{nil,{1529,27}}}}},
    {debug_line,1530,701},
    {tuple,
     {1530,5},
     [{var,{1530,6},'Is'},
      {block,
       {1530,9},
       [{match,{1530,9},{var,{1530,9},rec80},{var,{1530,9},'Fs'}},
        {'case',
         {1530,15},
         {var,{1530,9},rec80},
         [{clause,
           {1530,15},
           [{tuple,
             {1530,15},
             [{atom,{1530,15},fs},
              {var,{1530,15},'_'},
              {var,{1530,15},'_'},
              {var,{1530,15},'_'},
              {var,{1530,15},'_'}]}],
           [],
           [{call,
             {1530,15},
             {remote,
              {1530,15},
              {atom,{1530,15},erlang},
              {atom,{1530,15},setelement}},
             [{integer,{1530,15},2},
              {var,{1530,9},rec80},
              {var,{1530,20},'Rs'}]}]},
          {clause,
           [{generated,true},{location,{1530,15}}],
           [{var,[{generated,true},{location,{1530,15}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1530,15}}],
             {remote,
              [{generated,true},{location,{1530,15}}],
              {atom,[{generated,true},{location,{1530,15}}],erlang},
              {atom,[{generated,true},{location,{1530,15}}],error}},
             [{tuple,
               [{generated,true},{location,{1530,15}}],
               [{atom,[{generated,true},{location,{1530,15}}],badrecord},
                {var,{1530,9},rec80}]}]}]}]}]},
      {var,{1530,24},'Count2'}]}]}]}.
{function,
    {1532,1},
    float_load,7,
    [{clause,
         {1532,1},
         [{var,{1532,1},'_'},
          {var,{1532,1},'_'},
          {var,{1532,1},'_'},
          {var,{1532,1},'_'},
          {var,{1532,1},'_'},
          {var,{1532,1},'_'},
          {var,{1532,1},'_'}],
         [[{call,
               {1532,1},
               {remote,
                   {1532,1},
                   {atom,{1532,1},fake},
                   {atom,{1532,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1532,702},{atom,{1532,1},ignore}]},
     {clause,
         {1532,1},
         [{cons,{1532,12},{var,{1532,13},'A'},{var,{1532,15},'As'}},
          {cons,{1532,20},{var,{1532,21},'T'},{var,{1532,23},'Ts'}},
          {cons,{1532,28},{var,{1532,29},'AT'},{var,{1532,32},'ATs'}},
          {var,{1532,38},'Anno'},
          {var,{1532,44},'Rs0'},
          {var,{1532,49},'Count0'},
          {var,{1532,57},'Acc'}],
         [],
         [{debug_line,1533,703},
          {match,
              {1533,5},
              {tuple,
                  {1533,5},
                  [{var,{1533,6},'Load'},
                   {var,{1533,11},'Rs'},
                   {var,{1533,14},'Count'}]},
              {call,
                  {1533,23},
                  {atom,{1533,23},float_reg_arg},
                  [{var,{1533,37},'A'},
                   {var,{1533,40},'T'},
                   {var,{1533,43},'AT'},
                   {var,{1533,47},'Anno'},
                   {var,{1533,53},'Rs0'},
                   {var,{1533,58},'Count0'}]}},
          {debug_line,1534,704},
          {call,
              {1534,5},
              {atom,{1534,5},float_load},
              [{var,{1534,16},'As'},
               {var,{1534,20},'Ts'},
               {var,{1534,24},'ATs'},
               {var,{1534,29},'Anno'},
               {var,{1534,35},'Rs'},
               {var,{1534,39},'Count'},
               {block,0,
                   [{cons,
                        {1534,46},
                        {var,{1534,47},'Load'},
                        {var,{1534,52},'Acc'}}]}]}]},
     {clause,
         {1535,1},
         [{nil,{1535,12}},
          {nil,{1535,16}},
          {nil,{1535,20}},
          {var,{1535,24},'_Anno'},
          {var,{1535,31},'Rs'},
          {var,{1535,35},'Count'},
          {var,{1535,42},'Acc'}],
         [],
         [{debug_line,1536,705},
          {tuple,
              {1536,5},
              [{call,
                   {1536,6},
                   {remote,
                       {1536,6},
                       {atom,{1536,6},lists},
                       {atom,{1536,6},reverse}},
                   [{var,{1536,14},'Acc'}]},
               {var,{1536,19},'Rs'},
               {var,{1536,22},'Count'}]}]}]}.
{function,
 {1538,1},
 float_reg_arg,6,
 [{clause,
   {1538,1},
   [{var,{1538,1},'_'},
    {var,{1538,1},'_'},
    {var,{1538,1},'_'},
    {var,{1538,1},'_'},
    {var,{1538,1},'_'},
    {var,{1538,1},'_'}],
   [[{call,
      {1538,1},
      {remote,{1538,1},{atom,{1538,1},fake},{atom,{1538,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1538,706},{atom,{1538,1},ignore}]},
  {clause,
   {1538,1},
   [{var,{1538,15},'A'},
    {var,{1538,18},'T'},
    {var,{1538,21},'AT'},
    {var,{1538,25},'Anno0'},
    {var,{1538,32},'Rs'},
    {var,{1538,36},'Count0'}],
   [],
   [{debug_line,1539,707},
    {'case',
     {1539,5},
     {var,{1539,10},'Rs'},
     [{clause,
       {1540,9},
       [{map,
         {1540,9},
         [{map_field_exact,
           {1540,13},
           {var,{1540,11},'A'},
           {tuple,{1540,16},[{var,{1540,17},'Fr'},{var,{1540,20},'_'}]}}]}],
       [],
       [{debug_line,1541,708},
        {tuple,
         {1541,13},
         [{tuple,{1541,14},[{var,{1541,15},'Fr'},{nil,{1541,18}}]},
          {var,{1541,22},'Rs'},
          {var,{1541,25},'Count0'}]}]},
      {clause,
       {1542,9},
       [{map,{1542,9},[]}],
       [],
       [{debug_line,1543,709},
        {match,
         {1543,13},
         {tuple,{1543,13},[{var,{1543,14},'Dst'},{var,{1543,18},'Count'}]},
         {call,{1543,27},{atom,{1543,27},new_var},[{var,{1543,35},'Count0'}]}},
        {debug_line,1544,710},
        {match,
         {1544,13},
         {var,{1544,13},'I0'},
         {call,
          {1544,18},
          {atom,{1544,18},float_load_reg},
          [{var,{1544,33},'T'},{var,{1544,36},'A'},{var,{1544,39},'Dst'}]}},
        {debug_line,1545,711},
        {match,
         {1545,13},
         {var,{1545,13},'Anno'},
         {'case',
          {1545,20},
          {var,{1545,25},'AT'},
          [{clause,
            {1546,24},
            [{atom,{1546,24},any}],
            [],
            [{debug_line,1546,712},{var,{1546,31},'Anno0'}]},
           {clause,
            {1547,24},
            [{var,{1547,24},'_'}],
            [],
            [{debug_line,1547,713},
             {map,
              {1547,34},
              {var,{1547,29},'Anno0'},
              [{map_field_assoc,
                {1547,46},
                {atom,{1547,36},arg_types},
                {map,
                 {1547,49},
                 [{map_field_assoc,
                   {1547,53},
                   {integer,{1547,51},0},
                   {var,{1547,56},'AT'}}]}}]}]}]}},
        {debug_line,1549,714},
        {match,
         {1549,13},
         {var,{1549,13},'I'},
         {block,
          {1549,17},
          [{match,{1549,17},{var,{1549,17},rec81},{var,{1549,17},'I0'}},
           {'case',
            {1549,26},
            {var,{1549,17},rec81},
            [{clause,
              {1549,26},
              [{tuple,
                {1549,26},
                [{atom,{1549,26},b_set},
                 {var,{1549,26},'_'},
                 {var,{1549,26},'_'},
                 {var,{1549,26},'_'},
                 {var,{1549,26},'_'}]}],
              [],
              [{call,
                {1549,26},
                {remote,
                 {1549,26},
                 {atom,{1549,26},erlang},
                 {atom,{1549,26},setelement}},
                [{integer,{1549,26},2},
                 {var,{1549,17},rec81},
                 {var,{1549,31},'Anno'}]}]},
             {clause,
              [{generated,true},{location,{1549,26}}],
              [{var,[{generated,true},{location,{1549,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1549,26}}],
                {remote,
                 [{generated,true},{location,{1549,26}}],
                 {atom,[{generated,true},{location,{1549,26}}],erlang},
                 {atom,[{generated,true},{location,{1549,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{1549,26}}],
                  [{atom,[{generated,true},{location,{1549,26}}],badrecord},
                   {var,{1549,17},rec81}]}]}]}]}]}},
        {debug_line,1550,715},
        {tuple,
         {1550,13},
         [{tuple,
           {1550,14},
           [{var,{1550,15},'Dst'},
            {cons,{1550,19},{var,{1550,20},'I'},{nil,{1550,21}}}]},
          {map,
           {1550,26},
           {var,{1550,24},'Rs'},
           [{map_field_assoc,
             {1550,30},
             {var,{1550,28},'A'},
             {tuple,
              {1550,33},
              [{var,{1550,34},'Dst'},{atom,{1550,38},copy}]}}]},
          {var,{1550,45},'Count'}]}]}]}]}]}.
{function,
    {1553,1},
    float_load_reg,3,
    [{clause,
         {1553,1},
         [{var,{1553,1},'_'},{var,{1553,1},'_'},{var,{1553,1},'_'}],
         [[{call,
               {1553,1},
               {remote,
                   {1553,1},
                   {atom,{1553,1},fake},
                   {atom,{1553,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1553,716},{atom,{1553,1},ignore}]},
     {clause,
         {1553,1},
         [{atom,{1553,16},convert},
          {match,
              {1553,25},
              {tuple,{1553,25},[{atom,{1553,25},b_var},{var,{1553,25},'_'}]},
              {var,{1553,34},'Src'}},
          {var,{1553,39},'Dst'}],
         [],
         [{debug_line,1554,717},
          {tuple,
              {1554,5},
              [{atom,{1554,5},b_set},
               {map,{1554,5},[]},
               {var,{1554,35},'Dst'},
               {tuple,
                   {1554,15},
                   [{atom,{1554,16},float},{atom,{1554,22},convert}]},
               {cons,{1554,44},{var,{1554,45},'Src'},{nil,{1554,48}}}]}]},
     {clause,
         {1555,1},
         [{atom,{1555,16},convert},
          {match,
              {1555,25},
              {tuple,
                  {1555,25},
                  [{atom,{1555,25},b_literal},{var,{1555,40},'Val'}]},
              {var,{1555,45},'Src'}},
          {var,{1555,50},'Dst'}],
         [],
         [{debug_line,1556,718},
          {'try',
              {1556,5},
              [{call,
                   {1556,9},
                   {remote,
                       {1556,9},
                       {atom,{1556,9},erlang},
                       {atom,{1556,9},float}},
                   [{var,{1556,15},'Val'}]}],
              [{clause,
                   {1557,9},
                   [{var,{1557,9},'F'}],
                   [],
                   [{debug_line,1558,719},
                    {tuple,
                        {1558,13},
                        [{atom,{1558,13},b_set},
                         {map,{1558,13},[]},
                         {var,{1558,39},'Dst'},
                         {tuple,
                             {1558,23},
                             [{atom,{1558,24},float},{atom,{1558,30},put}]},
                         {cons,
                             {1558,48},
                             {tuple,
                                 {1558,49},
                                 [{atom,{1558,49},b_literal},
                                  {var,{1558,64},'F'}]},
                             {nil,{1558,66}}}]}]}],
              [{clause,
                   {1560,9},
                   [{tuple,
                        {1560,9},
                        [{atom,{1560,9},error},
                         {var,{1560,15},'_'},
                         {var,{1560,15},'_'}]}],
                   [],
                   [{debug_line,1562,720},
                    {tuple,
                        {1562,13},
                        [{atom,{1562,13},b_set},
                         {map,{1562,13},[]},
                         {var,{1562,43},'Dst'},
                         {tuple,
                             {1562,23},
                             [{atom,{1562,24},float},
                              {atom,{1562,30},convert}]},
                         {cons,
                             {1562,52},
                             {var,{1562,53},'Src'},
                             {nil,{1562,56}}}]}]}],
              []}]},
     {clause,
         {1564,1},
         [{atom,{1564,16},float},{var,{1564,23},'Src'},{var,{1564,28},'Dst'}],
         [],
         [{debug_line,1565,721},
          {tuple,
              {1565,5},
              [{atom,{1565,5},b_set},
               {map,{1565,5},[]},
               {var,{1565,31},'Dst'},
               {tuple,{1565,15},[{atom,{1565,16},float},{atom,{1565,22},put}]},
               {cons,{1565,40},{var,{1565,41},'Src'},{nil,{1565,44}}}]}]}]}.
{function,
 {1567,1},
 float_flush_regs,1,
 [{clause,
   {1567,1},
   [{var,{1567,1},'_'}],
   [[{call,
      {1567,1},
      {remote,{1567,1},{atom,{1567,1},fake},{atom,{1567,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1567,722},{atom,{1567,1},ignore}]},
  {clause,
   {1567,1},
   [{tuple,
     {1567,18},
     [{atom,{1567,18},fs},
      {var,{1567,27},'Rs'},
      {var,{1567,18},'_'},
      {var,{1567,18},'_'},
      {var,{1567,18},'_'}]}],
   [],
   [{debug_line,1568,723},
    {call,
     {1568,5},
     {remote,{1568,9},{atom,{1568,5},maps},{atom,{1568,10},fold}},
     [{block,0,
       [{'fun',
         {1568,15},
         {clauses,
          [{clause,
            {1568,18},
            [{var,{1568,19},'_'},
             {tuple,
              {1568,22},
              [{tuple,{1568,23},[{atom,{1568,23},b_var},{var,{1568,23},'_'}]},
               {atom,{1568,32},copy}]},
             {var,{1568,39},'Acc'}],
            [],
            [{debug_line,1569,724},{var,{1569,23},'Acc'}]},
           {clause,
            {1570,18},
            [{var,{1570,19},'Dst'},
             {tuple,
              {1570,24},
              [{var,{1570,25},'Fr'},{atom,{1570,28},original}]},
             {var,{1570,39},'Acc'}],
            [],
            [{debug_line,1571,725},
             {cons,
              {1571,23},
              {tuple,
               {1571,24},
               [{atom,{1571,24},b_set},
                {map,{1571,24},[]},
                {var,{1571,50},'Dst'},
                {tuple,
                 {1571,34},
                 [{atom,{1571,35},float},{atom,{1571,41},get}]},
                {cons,{1571,59},{var,{1571,60},'Fr'},{nil,{1571,62}}}]},
              {var,{1571,65},'Acc'}}]}]}}]},
      {nil,{1572,20}},
      {var,{1572,24},'Rs'}]}]}]}.
{function,
 {1582,1},
 ssa_opt_live,1,
 [{clause,
   {1582,1},
   [{var,{1582,1},'_'}],
   [[{call,
      {1582,1},
      {remote,{1582,1},{atom,{1582,1},fake},{atom,{1582,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1582,726},{atom,{1582,1},ignore}]},
  {clause,
   {1582,1},
   [{tuple,
     {1582,14},
     [{match,
       {1582,15},
       {tuple,
        {1582,15},
        [{atom,{1582,15},opt_st},
         {var,{1582,27},'Linear0'},
         {var,{1582,15},'_'},
         {var,{1582,15},'_'},
         {var,{1582,15},'_'}]},
       {var,{1582,36},'St'}},
      {var,{1582,40},'FuncDb'}]}],
   [],
   [{debug_line,1583,727},
    {match,
     {1583,5},
     {var,{1583,5},'RevLinear'},
     {call,
      {1583,17},
      {remote,{1583,17},{atom,{1583,17},lists},{atom,{1583,17},reverse}},
      [{var,{1583,25},'Linear0'}]}},
    {debug_line,1584,728},
    {match,
     {1584,5},
     {var,{1584,5},'Blocks0'},
     {call,
      {1584,15},
      {remote,{1584,19},{atom,{1584,15},maps},{atom,{1584,20},from_list}},
      [{var,{1584,30},'RevLinear'}]}},
    {debug_line,1585,729},
    {match,
     {1585,5},
     {var,{1585,5},'Blocks'},
     {call,
      {1585,14},
      {atom,{1585,14},live_opt},
      [{var,{1585,23},'RevLinear'},
       {block,0,[{map,{1585,34},[]}]},
       {var,{1585,39},'Blocks0'}]}},
    {debug_line,1586,730},
    {match,
     {1586,5},
     {var,{1586,5},'Linear'},
     {call,
      {1586,14},
      {remote,{1586,22},{atom,{1586,14},beam_ssa},{atom,{1586,23},linearize}},
      [{var,{1586,33},'Blocks'}]}},
    {debug_line,1587,731},
    {tuple,
     {1587,5},
     [{block,
       {1587,6},
       [{match,{1587,6},{var,{1587,6},rec82},{var,{1587,6},'St'}},
        {'case',
         {1587,16},
         {var,{1587,6},rec82},
         [{clause,
           {1587,16},
           [{tuple,
             {1587,16},
             [{atom,{1587,16},opt_st},
              {var,{1587,16},'_'},
              {var,{1587,16},'_'},
              {var,{1587,16},'_'},
              {var,{1587,16},'_'}]}],
           [],
           [{call,
             {1587,16},
             {remote,
              {1587,16},
              {atom,{1587,16},erlang},
              {atom,{1587,16},setelement}},
             [{integer,{1587,16},2},
              {var,{1587,6},rec82},
              {var,{1587,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{1587,16}}],
           [{var,[{generated,true},{location,{1587,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1587,16}}],
             {remote,
              [{generated,true},{location,{1587,16}}],
              {atom,[{generated,true},{location,{1587,16}}],erlang},
              {atom,[{generated,true},{location,{1587,16}}],error}},
             [{tuple,
               [{generated,true},{location,{1587,16}}],
               [{atom,[{generated,true},{location,{1587,16}}],badrecord},
                {var,{1587,6},rec82}]}]}]}]}]},
      {var,{1587,29},'FuncDb'}]}]}]}.
{function,
 {1589,1},
 live_opt,3,
 [{clause,
   {1589,1},
   [{var,{1589,1},'_'},{var,{1589,1},'_'},{var,{1589,1},'_'}],
   [[{call,
      {1589,1},
      {remote,{1589,1},{atom,{1589,1},fake},{atom,{1589,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1589,732},{atom,{1589,1},ignore}]},
  {clause,
   {1589,1},
   [{cons,
     {1589,10},
     {tuple,{1589,11},[{var,{1589,12},'L'},{var,{1589,14},'Blk0'}]},
     {var,{1589,20},'Bs'}},
    {var,{1589,25},'LiveMap0'},
    {var,{1589,35},'Blocks'}],
   [],
   [{debug_line,1590,733},
    {match,
     {1590,5},
     {var,{1590,5},'Blk1'},
     {call,
      {1590,12},
      {remote,
       {1590,26},
       {atom,{1590,12},beam_ssa_share},
       {atom,{1590,27},block}},
      [{var,{1590,33},'Blk0'},{var,{1590,39},'Blocks'}]}},
    {debug_line,1591,734},
    {match,
     {1591,5},
     {var,{1591,5},'Successors'},
     {call,
      {1591,18},
      {remote,{1591,26},{atom,{1591,18},beam_ssa},{atom,{1591,27},successors}},
      [{var,{1591,38},'Blk1'}]}},
    {debug_line,1592,735},
    {match,
     {1592,5},
     {var,{1592,5},'Live0'},
     {call,
      {1592,13},
      {atom,{1592,13},live_opt_succ},
      [{var,{1592,27},'Successors'},
       {var,{1592,39},'L'},
       {var,{1592,42},'LiveMap0'},
       {block,0,
        [{call,
          {1592,52},
          {remote,{1592,56},{atom,{1592,52},sets},{atom,{1592,57},new}},
          []}]}]}},
    {debug_line,1593,736},
    {match,
     {1593,5},
     {tuple,{1593,5},[{var,{1593,6},'Blk'},{var,{1593,10},'Live'}]},
     {call,
      {1593,18},
      {atom,{1593,18},live_opt_blk},
      [{var,{1593,31},'Blk1'},{var,{1593,37},'Live0'}]}},
    {debug_line,1594,737},
    {match,
     {1594,5},
     {var,{1594,5},'LiveMap'},
     {call,
      {1594,15},
      {atom,{1594,15},live_opt_phis},
      [{block,0,
        [{'case',
          {1594,29},
          {var,{1594,29},'Blk'},
          [{clause,
            [{generated,true},{location,{1594,29}}],
            [{tuple,
              [{generated,true},{location,{1594,29}}],
              [{atom,{1594,29},b_blk},
               {var,{1594,29},'_'},
               {var,{1594,29},rec83},
               {var,{1594,29},'_'}]}],
            [],
            [{var,{1594,29},rec83}]},
           {clause,
            [{generated,true},{location,{1594,29}}],
            [{var,{1594,29},rec83}],
            [],
            [{call,
              [{generated,true},{location,{1594,29}}],
              {remote,
               [{generated,true},{location,{1594,29}}],
               {atom,[{generated,true},{location,{1594,29}}],erlang},
               {atom,[{generated,true},{location,{1594,29}}],error}},
              [{tuple,
                [{generated,true},{location,{1594,29}}],
                [{atom,[{generated,true},{location,{1594,29}}],badrecord},
                 {var,{1594,29},rec83}]}]}]}]}]},
       {var,{1594,43},'L'},
       {var,{1594,46},'Live'},
       {var,{1594,52},'LiveMap0'}]}},
    {debug_line,1595,738},
    {call,
     {1595,5},
     {atom,{1595,5},live_opt},
     [{var,{1595,14},'Bs'},
      {var,{1595,18},'LiveMap'},
      {block,0,
       [{map,
         {1595,33},
         {var,{1595,27},'Blocks'},
         [{map_field_exact,
           {1595,36},
           {var,{1595,35},'L'},
           {var,{1595,38},'Blk'}}]}]}]}]},
  {clause,
   {1596,1},
   [{nil,{1596,10}},{var,{1596,14},'_'},{var,{1596,17},'Acc'}],
   [],
   [{debug_line,1596,739},{var,{1596,25},'Acc'}]}]}.
{function,
    {1598,1},
    live_opt_succ,4,
    [{clause,
         {1598,1},
         [{var,{1598,1},'_'},
          {var,{1598,1},'_'},
          {var,{1598,1},'_'},
          {var,{1598,1},'_'}],
         [[{call,
               {1598,1},
               {remote,
                   {1598,1},
                   {atom,{1598,1},fake},
                   {atom,{1598,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1598,740},{atom,{1598,1},ignore}]},
     {clause,
         {1598,1},
         [{cons,{1598,15},{var,{1598,16},'S'},{var,{1598,18},'Ss'}},
          {var,{1598,23},'L'},
          {var,{1598,26},'LiveMap'},
          {var,{1598,35},'Live0'}],
         [],
         [{debug_line,1599,741},
          {'case',
              {1599,5},
              {var,{1599,10},'LiveMap'},
              [{clause,
                   {1600,9},
                   [{map,
                        {1600,9},
                        [{map_field_exact,
                             {1600,16},
                             {tuple,
                                 {1600,11},
                                 [{var,{1600,12},'S'},{var,{1600,14},'L'}]},
                             {var,{1600,18},'Live'}}]}],
                   [],
                   [{debug_line,1603,742},
                    {call,
                        {1603,13},
                        {atom,{1603,13},live_opt_succ},
                        [{var,{1603,27},'Ss'},
                         {var,{1603,31},'L'},
                         {var,{1603,34},'LiveMap'},
                         {block,0,
                             [{call,
                                  {1603,43},
                                  {remote,
                                      {1603,47},
                                      {atom,{1603,43},sets},
                                      {atom,{1603,48},union}},
                                  [{var,{1603,54},'Live0'},
                                   {var,{1603,61},'Live'}]}]}]}]},
               {clause,
                   {1604,9},
                   [{map,
                        {1604,9},
                        [{map_field_exact,
                             {1604,12},
                             {var,{1604,11},'S'},
                             {var,{1604,14},'Live'}}]}],
                   [],
                   [{debug_line,1607,743},
                    {call,
                        {1607,13},
                        {atom,{1607,13},live_opt_succ},
                        [{var,{1607,27},'Ss'},
                         {var,{1607,31},'L'},
                         {var,{1607,34},'LiveMap'},
                         {block,0,
                             [{call,
                                  {1607,43},
                                  {remote,
                                      {1607,47},
                                      {atom,{1607,43},sets},
                                      {atom,{1607,48},union}},
                                  [{var,{1607,54},'Live0'},
                                   {var,{1607,61},'Live'}]}]}]}]},
               {clause,
                   {1608,9},
                   [{map,{1608,9},[]}],
                   [],
                   [{debug_line,1610,744},
                    {call,
                        {1610,13},
                        {atom,{1610,13},live_opt_succ},
                        [{var,{1610,27},'Ss'},
                         {var,{1610,31},'L'},
                         {var,{1610,34},'LiveMap'},
                         {var,{1610,43},'Live0'}]}]}]}]},
     {clause,
         {1612,1},
         [{nil,{1612,15}},
          {var,{1612,19},'_'},
          {var,{1612,22},'_'},
          {var,{1612,25},'Acc'}],
         [],
         [{debug_line,1612,745},{var,{1612,33},'Acc'}]}]}.
{function,
 {1614,1},
 live_opt_phis,4,
 [{clause,
   {1614,1},
   [{var,{1614,1},'_'},
    {var,{1614,1},'_'},
    {var,{1614,1},'_'},
    {var,{1614,1},'_'}],
   [[{call,
      {1614,1},
      {remote,{1614,1},{atom,{1614,1},fake},{atom,{1614,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1614,746},{atom,{1614,1},ignore}]},
  {clause,
   {1614,1},
   [{var,{1614,15},'Is'},
    {var,{1614,19},'L'},
    {var,{1614,22},'Live0'},
    {var,{1614,29},'LiveMap0'}],
   [],
   [{debug_line,1615,747},
    {match,
     {1615,5},
     {var,{1615,5},'LiveMap'},
     {map,
      {1615,23},
      {var,{1615,15},'LiveMap0'},
      [{map_field_assoc,
        {1615,26},
        {var,{1615,25},'L'},
        {var,{1615,28},'Live0'}}]}},
    {debug_line,1616,748},
    {match,
     {1616,5},
     {var,{1616,5},'Phis'},
     {call,
      {1616,12},
      {remote,{1616,12},{atom,{1616,12},lists},{atom,{1616,12},takewhile}},
      [{block,0,
        [{'fun',
          {1616,22},
          {clauses,
           [{clause,
             {1616,25},
             [{tuple,
               {1616,26},
               [{atom,{1616,26},b_set},
                {var,{1616,26},'_'},
                {var,{1616,26},'_'},
                {var,{1616,36},'Op'},
                {var,{1616,26},'_'}]}],
             [],
             [{op,
               {1616,47},
               '=:=',
               {var,{1616,44},'Op'},
               {atom,{1616,51},phi}}]}]}}]},
       {var,{1616,60},'Is'}]}},
    {debug_line,1617,749},
    {'case',
     {1617,5},
     {var,{1617,10},'Phis'},
     [{clause,
       {1618,9},
       [{nil,{1618,9}}],
       [],
       [{debug_line,1619,750},{var,{1619,13},'LiveMap'}]},
      {clause,
       {1620,9},
       [{cons,{1620,9},{var,{1620,10},'_'},{var,{1620,12},'_'}}],
       [],
       [{debug_line,1621,751},
        {match,
         {1621,13},
         {var,{1621,13},'PhiArgs'},
         {call,
          {1621,23},
          {remote,{1621,23},{atom,{1621,23},lists},{atom,{1621,23},append}},
          [{block,0,
            [{lc,
              {1621,30},
              {block,0,[{var,{1621,31},'Args'}]},
              [{block,0,[{atom,{1621,61},true}]},
               {generate_strict,
                {1621,57},
                {tuple,
                 {1621,39},
                 [{atom,{1621,39},b_set},
                  {var,{1621,39},'_'},
                  {var,{1621,39},'_'},
                  {var,{1621,39},'_'},
                  {var,{1621,51},'Args'}]},
                {var,{1621,61},'Phis'}}]}]}]}},
        {debug_line,1622,752},
        {'case',
         {1622,13},
         {lc,
          {1622,18},
          {block,0,
           [{tuple,{1622,19},[{var,{1622,20},'P'},{var,{1622,22},'V'}]}]},
          [{block,0,[{atom,{1622,46},true}]},
           {generate,
            {1622,43},
            {tuple,
             {1622,28},
             [{match,
               {1622,29},
               {tuple,{1622,29},[{atom,{1622,29},b_var},{var,{1622,29},'_'}]},
               {var,{1622,38},'V'}},
              {var,{1622,40},'P'}]},
            {var,{1622,46},'PhiArgs'}}]},
         [{clause,
           {1623,17},
           [{match,
             {1623,17},
             {cons,{1623,17},{var,{1623,18},'_'},{var,{1623,20},'_'}},
             {var,{1623,23},'PhiVars'}}],
           [],
           [{debug_line,1624,753},
            {match,
             {1624,21},
             {var,{1624,21},'PhiLive0'},
             {call,
              {1624,32},
              {atom,{1624,32},rel2fam},
              [{var,{1624,40},'PhiVars'}]}},
            {debug_line,1625,754},
            {match,
             {1625,21},
             {var,{1625,21},'PhiLive'},
             {mc,
              {1625,31},
              {map_field_assoc,
               {1625,39},
               {block,0,
                [{tuple,{1625,33},[{var,{1625,34},'L'},{var,{1625,36},'P'}]}]},
               {block,0,
                [{call,
                  {1625,42},
                  {atom,{1625,42},list_set_union},
                  [{var,{1625,57},'Vs'},{var,{1625,61},'Live0'}]}]}},
              [{block,0,[{debug_line,1626,755},{atom,{1626,46},true}]},
               {generate_strict,
                {1626,42},
                {tuple,{1626,35},[{var,{1626,36},'P'},{var,{1626,38},'Vs'}]},
                {var,{1626,46},'PhiLive0'}}]}},
            {debug_line,1627,756},
            {call,
             {1627,21},
             {remote,{1627,25},{atom,{1627,21},maps},{atom,{1627,26},merge}},
             [{var,{1627,32},'LiveMap'},{var,{1627,41},'PhiLive'}]}]},
          {clause,
           {1628,17},
           [{nil,{1628,17}}],
           [],
           [{debug_line,1630,757},{var,{1630,21},'LiveMap'}]}]}]}]}]}]}.
{function,
 {1634,1},
 live_opt_blk,2,
 [{clause,
   {1634,1},
   [{var,{1634,1},'_'},{var,{1634,1},'_'}],
   [[{call,
      {1634,1},
      {remote,{1634,1},{atom,{1634,1},fake},{atom,{1634,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1634,758},{atom,{1634,1},ignore}]},
  {clause,
   {1634,1},
   [{match,
     {1634,14},
     {tuple,
      {1634,14},
      [{atom,{1634,14},b_blk},
       {var,{1634,14},'_'},
       {var,{1634,24},'Is0'},
       {var,{1634,33},'Last'}]},
     {var,{1634,39},'Blk'}},
    {var,{1634,44},'Live0'}],
   [],
   [{debug_line,1635,759},
    {match,
     {1635,5},
     {var,{1635,5},'Live1'},
     {call,
      {1635,13},
      {atom,{1635,13},list_set_union},
      [{block,0,
        [{call,
          {1635,28},
          {remote,{1635,36},{atom,{1635,28},beam_ssa},{atom,{1635,37},used}},
          [{var,{1635,42},'Last'}]}]},
       {var,{1635,49},'Live0'}]}},
    {debug_line,1636,760},
    {match,
     {1636,5},
     {tuple,{1636,5},[{var,{1636,6},'Is'},{var,{1636,9},'Live'}]},
     {call,
      {1636,17},
      {atom,{1636,17},live_opt_is},
      [{block,0,
        [{call,
          {1636,29},
          {remote,{1636,29},{atom,{1636,29},lists},{atom,{1636,29},reverse}},
          [{var,{1636,37},'Is0'}]}]},
       {var,{1636,43},'Live1'},
       {nil,{1636,50}}]}},
    {debug_line,1637,761},
    {tuple,
     {1637,5},
     [{block,
       {1637,6},
       [{match,{1637,6},{var,{1637,6},rec84},{var,{1637,6},'Blk'}},
        {'case',
         {1637,16},
         {var,{1637,6},rec84},
         [{clause,
           {1637,16},
           [{tuple,
             {1637,16},
             [{atom,{1637,16},b_blk},
              {var,{1637,16},'_'},
              {var,{1637,16},'_'},
              {var,{1637,16},'_'}]}],
           [],
           [{call,
             {1637,16},
             {remote,
              {1637,16},
              {atom,{1637,16},erlang},
              {atom,{1637,16},setelement}},
             [{integer,{1637,16},3},
              {var,{1637,6},rec84},
              {var,{1637,19},'Is'}]}]},
          {clause,
           [{generated,true},{location,{1637,16}}],
           [{var,[{generated,true},{location,{1637,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1637,16}}],
             {remote,
              [{generated,true},{location,{1637,16}}],
              {atom,[{generated,true},{location,{1637,16}}],erlang},
              {atom,[{generated,true},{location,{1637,16}}],error}},
             [{tuple,
               [{generated,true},{location,{1637,16}}],
               [{atom,[{generated,true},{location,{1637,16}}],badrecord},
                {var,{1637,6},rec84}]}]}]}]}]},
      {var,{1637,23},'Live'}]}]}]}.
{function,
 {1639,1},
 live_opt_is,3,
 [{clause,
   {1639,1},
   [{var,{1639,1},'_'},{var,{1639,1},'_'},{var,{1639,1},'_'}],
   [[{call,
      {1639,1},
      {remote,{1639,1},{atom,{1639,1},fake},{atom,{1639,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1639,762},{atom,{1639,1},ignore}]},
  {clause,
   {1639,1},
   [{cons,
     {1639,13},
     {match,
      {1639,14},
      {tuple,
       {1639,14},
       [{atom,{1639,14},b_set},
        {var,{1639,14},'_'},
        {var,{1639,32},'Dst'},
        {atom,{1639,24},phi},
        {var,{1639,14},'_'}]},
      {var,{1639,37},'I'}},
     {var,{1639,39},'Is'}},
    {var,{1639,44},'Live0'},
    {var,{1639,51},'Acc'}],
   [],
   [{debug_line,1640,763},
    {match,
     {1640,5},
     {var,{1640,5},'Live'},
     {call,
      {1640,12},
      {remote,{1640,16},{atom,{1640,12},sets},{atom,{1640,17},del_element}},
      [{var,{1640,29},'Dst'},{var,{1640,34},'Live0'}]}},
    {debug_line,1641,764},
    {'case',
     {1641,5},
     {call,
      {1641,10},
      {remote,{1641,14},{atom,{1641,10},sets},{atom,{1641,15},is_element}},
      [{var,{1641,26},'Dst'},{var,{1641,31},'Live0'}]},
     [{clause,
       {1642,9},
       [{atom,{1642,9},true}],
       [],
       [{debug_line,1643,765},
        {call,
         {1643,13},
         {atom,{1643,13},live_opt_is},
         [{var,{1643,25},'Is'},
          {var,{1643,29},'Live'},
          {block,0,
           [{cons,{1643,35},{var,{1643,36},'I'},{var,{1643,38},'Acc'}}]}]}]},
      {clause,
       {1644,9},
       [{atom,{1644,9},false}],
       [],
       [{debug_line,1645,766},
        {call,
         {1645,13},
         {atom,{1645,13},live_opt_is},
         [{var,{1645,25},'Is'},
          {var,{1645,29},'Live'},
          {var,{1645,35},'Acc'}]}]}]}]},
  {clause,
   {1647,1},
   [{cons,
     {1647,13},
     {match,
      {1647,14},
      {tuple,
       {1647,14},
       [{atom,{1647,14},b_set},
        {var,{1647,14},'_'},
        {var,{1647,46},'SuccDst'},
        {tuple,{1647,24},[{atom,{1647,25},succeeded},{atom,{1647,35},guard}]},
        {cons,{1647,59},{var,{1647,60},'Dst'},{nil,{1647,63}}}]},
      {var,{1647,66},'SuccI'}},
     {cons,
      {1648,14},
      {match,
       {1648,14},
       {tuple,
        {1648,14},
        [{atom,{1648,14},b_set},
         {var,{1648,14},'_'},
         {var,{1648,31},'Dst'},
         {var,{1648,24},'Op'},
         {var,{1648,14},'_'}]},
       {var,{1648,36},'I0'}},
      {var,{1648,39},'Is'}}},
    {var,{1649,13},'Live0'},
    {var,{1649,20},'Acc'}],
   [],
   [{debug_line,1650,767},
    {'case',
     {1650,5},
     {tuple,
      {1650,10},
      [{call,
        {1650,11},
        {remote,{1650,15},{atom,{1650,11},sets},{atom,{1650,16},is_element}},
        [{var,{1650,27},'SuccDst'},{var,{1650,36},'Live0'}]},
       {call,
        {1651,11},
        {remote,{1651,15},{atom,{1651,11},sets},{atom,{1651,16},is_element}},
        [{var,{1651,27},'Dst'},{var,{1651,32},'Live0'}]}]},
     [{clause,
       {1652,9},
       [{tuple,{1652,9},[{atom,{1652,10},true},{atom,{1652,16},true}]}],
       [],
       [{debug_line,1653,768},
        {match,
         {1653,13},
         {var,{1653,13},'Live'},
         {call,
          {1653,20},
          {remote,
           {1653,24},
           {atom,{1653,20},sets},
           {atom,{1653,25},del_element}},
          [{var,{1653,37},'SuccDst'},{var,{1653,46},'Live0'}]}},
        {debug_line,1654,769},
        {call,
         {1654,13},
         {atom,{1654,13},live_opt_is},
         [{block,0,
           [{cons,{1654,25},{var,{1654,26},'I0'},{var,{1654,29},'Is'}}]},
          {var,{1654,34},'Live'},
          {block,0,
           [{cons,
             {1654,40},
             {var,{1654,41},'SuccI'},
             {var,{1654,47},'Acc'}}]}]}]},
      {clause,
       {1655,9},
       [{tuple,{1655,9},[{atom,{1655,10},true},{atom,{1655,16},false}]}],
       [],
       [{debug_line,1658,770},
        {'case',
         {1658,13},
         {var,{1658,18},'Op'},
         [{clause,
           {1659,17},
           [{tuple,{1659,17},[{atom,{1659,18},bif},{atom,{1659,22},'not'}]}],
           [],
           [{debug_line,1660,771},
            {match,
             {1660,21},
             {var,{1660,21},'I'},
             {block,
              {1660,25},
              [{match,{1660,25},{var,{1660,25},rec85},{var,{1660,25},'I0'}},
               {'case',
                {1660,54},
                {var,{1660,25},rec85},
                [{clause,
                  {1660,54},
                  [{tuple,
                    {1660,54},
                    [{atom,{1660,54},b_set},
                     {var,{1660,54},'_'},
                     {var,{1660,54},'_'},
                     {var,{1660,54},'_'},
                     {var,{1660,54},'_'}]}],
                  [],
                  [{call,
                    {1660,54},
                    {remote,
                     {1660,54},
                     {atom,{1660,54},erlang},
                     {atom,{1660,54},setelement}},
                    [{integer,{1660,54},3},
                     {call,
                      {1660,34},
                      {remote,
                       {1660,34},
                       {atom,{1660,34},erlang},
                       {atom,{1660,34},setelement}},
                      [{integer,{1660,34},4},
                       {var,{1660,25},rec85},
                       {tuple,
                        {1660,37},
                        [{atom,{1660,38},bif},{atom,{1660,42},is_boolean}]}]},
                     {var,{1660,58},'SuccDst'}]}]},
                 {clause,
                  [{generated,true},{location,{1660,54}}],
                  [{var,[{generated,true},{location,{1660,54}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{1660,54}}],
                    {remote,
                     [{generated,true},{location,{1660,54}}],
                     {atom,[{generated,true},{location,{1660,54}}],erlang},
                     {atom,[{generated,true},{location,{1660,54}}],error}},
                    [{tuple,
                      [{generated,true},{location,{1660,54}}],
                      [{atom,
                        [{generated,true},{location,{1660,54}}],
                        badrecord},
                       {var,{1660,25},rec85}]}]}]}]}]}},
            {debug_line,1661,772},
            {call,
             {1661,21},
             {atom,{1661,21},live_opt_is},
             [{block,0,
               [{cons,{1661,33},{var,{1661,34},'I'},{var,{1661,36},'Is'}}]},
              {var,{1661,41},'Live0'},
              {var,{1661,48},'Acc'}]}]},
          {clause,
           {1662,17},
           [{tuple,
             {1662,17},
             [{atom,{1662,18},bif},{atom,{1662,22},tuple_size}]}],
           [],
           [{debug_line,1663,773},
            {match,
             {1663,21},
             {var,{1663,21},'I'},
             {block,
              {1663,25},
              [{match,{1663,25},{var,{1663,25},rec86},{var,{1663,25},'I0'}},
               {'case',
                {1663,52},
                {var,{1663,25},rec86},
                [{clause,
                  {1663,52},
                  [{tuple,
                    {1663,52},
                    [{atom,{1663,52},b_set},
                     {var,{1663,52},'_'},
                     {var,{1663,52},'_'},
                     {var,{1663,52},'_'},
                     {var,{1663,52},'_'}]}],
                  [],
                  [{call,
                    {1663,52},
                    {remote,
                     {1663,52},
                     {atom,{1663,52},erlang},
                     {atom,{1663,52},setelement}},
                    [{integer,{1663,52},3},
                     {call,
                      {1663,34},
                      {remote,
                       {1663,34},
                       {atom,{1663,34},erlang},
                       {atom,{1663,34},setelement}},
                      [{integer,{1663,34},4},
                       {var,{1663,25},rec86},
                       {tuple,
                        {1663,37},
                        [{atom,{1663,38},bif},{atom,{1663,42},is_tuple}]}]},
                     {var,{1663,56},'SuccDst'}]}]},
                 {clause,
                  [{generated,true},{location,{1663,52}}],
                  [{var,[{generated,true},{location,{1663,52}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{1663,52}}],
                    {remote,
                     [{generated,true},{location,{1663,52}}],
                     {atom,[{generated,true},{location,{1663,52}}],erlang},
                     {atom,[{generated,true},{location,{1663,52}}],error}},
                    [{tuple,
                      [{generated,true},{location,{1663,52}}],
                      [{atom,
                        [{generated,true},{location,{1663,52}}],
                        badrecord},
                       {var,{1663,25},rec86}]}]}]}]}]}},
            {debug_line,1664,774},
            {call,
             {1664,21},
             {atom,{1664,21},live_opt_is},
             [{block,0,
               [{cons,{1664,33},{var,{1664,34},'I'},{var,{1664,36},'Is'}}]},
              {var,{1664,41},'Live0'},
              {var,{1664,48},'Acc'}]}]},
          {clause,
           {1665,17},
           [{atom,{1665,17},bs_start_match}],
           [],
           [{debug_line,1668,775},
            {match,
             {1668,21},
             {cons,
              {1668,21},
              {tuple,
               {1668,22},
               [{atom,{1668,22},b_literal},{atom,{1668,37},new}]},
              {cons,{1668,42},{var,{1668,42},'Bin'},{nil,{1668,45}}}},
             {'case',
              {1668,49},
              {var,{1668,49},'I0'},
              [{clause,
                [{generated,true},{location,{1668,49}}],
                [{tuple,
                  [{generated,true},{location,{1668,49}}],
                  [{atom,{1668,49},b_set},
                   {var,{1668,49},'_'},
                   {var,{1668,49},'_'},
                   {var,{1668,49},'_'},
                   {var,{1668,49},rec87}]}],
                [],
                [{var,{1668,49},rec87}]},
               {clause,
                [{generated,true},{location,{1668,49}}],
                [{var,{1668,49},rec87}],
                [],
                [{call,
                  [{generated,true},{location,{1668,49}}],
                  {remote,
                   [{generated,true},{location,{1668,49}}],
                   {atom,[{generated,true},{location,{1668,49}}],erlang},
                   {atom,[{generated,true},{location,{1668,49}}],error}},
                  [{tuple,
                    [{generated,true},{location,{1668,49}}],
                    [{atom,[{generated,true},{location,{1668,49}}],badrecord},
                     {var,{1668,49},rec87}]}]}]}]}},
            {debug_line,1669,776},
            {match,
             {1669,21},
             {var,{1669,21},'I'},
             {block,
              {1669,25},
              [{match,
                {1669,56},
                {var,{1669,56},rec88},
                {cons,{1669,61},{var,{1669,62},'Bin'},{nil,{1669,65}}}},
               {match,{1669,25},{var,{1669,25},rec89},{var,{1669,25},'I0'}},
               {'case',
                {1669,67},
                {var,{1669,25},rec89},
                [{clause,
                  {1669,67},
                  [{tuple,
                    {1669,67},
                    [{atom,{1669,67},b_set},
                     {var,{1669,67},'_'},
                     {var,{1669,67},'_'},
                     {var,{1669,67},'_'},
                     {var,{1669,67},'_'}]}],
                  [],
                  [{call,
                    {1669,67},
                    {remote,
                     {1669,67},
                     {atom,{1669,67},erlang},
                     {atom,{1669,67},setelement}},
                    [{integer,{1669,67},3},
                     {call,
                      {1669,34},
                      {remote,
                       {1669,34},
                       {atom,{1669,34},erlang},
                       {atom,{1669,34},setelement}},
                      [{integer,{1669,34},4},
                       {call,
                        {1669,56},
                        {remote,
                         {1669,56},
                         {atom,{1669,56},erlang},
                         {atom,{1669,56},setelement}},
                        [{integer,{1669,56},5},
                         {var,{1669,25},rec89},
                         {var,{1669,56},rec88}]},
                       {tuple,
                        {1669,37},
                        [{atom,{1669,38},bif},
                         {atom,{1669,42},is_bitstring}]}]},
                     {var,{1669,71},'SuccDst'}]}]},
                 {clause,
                  [{generated,true},{location,{1669,67}}],
                  [{var,[{generated,true},{location,{1669,67}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{1669,67}}],
                    {remote,
                     [{generated,true},{location,{1669,67}}],
                     {atom,[{generated,true},{location,{1669,67}}],erlang},
                     {atom,[{generated,true},{location,{1669,67}}],error}},
                    [{tuple,
                      [{generated,true},{location,{1669,67}}],
                      [{atom,
                        [{generated,true},{location,{1669,67}}],
                        badrecord},
                       {var,{1669,25},rec89}]}]}]}]}]}},
            {debug_line,1670,777},
            {call,
             {1670,21},
             {atom,{1670,21},live_opt_is},
             [{block,0,
               [{cons,{1670,33},{var,{1670,34},'I'},{var,{1670,36},'Is'}}]},
              {var,{1670,41},'Live0'},
              {var,{1670,48},'Acc'}]}]},
          {clause,
           {1671,17},
           [{atom,{1671,17},get_map_element}],
           [],
           [{debug_line,1672,778},
            {match,
             {1672,21},
             {var,{1672,21},'I'},
             {block,
              {1672,25},
              [{match,{1672,25},{var,{1672,25},rec90},{var,{1672,25},'I0'}},
               {'case',
                {1672,51},
                {var,{1672,25},rec90},
                [{clause,
                  {1672,51},
                  [{tuple,
                    {1672,51},
                    [{atom,{1672,51},b_set},
                     {var,{1672,51},'_'},
                     {var,{1672,51},'_'},
                     {var,{1672,51},'_'},
                     {var,{1672,51},'_'}]}],
                  [],
                  [{call,
                    {1672,51},
                    {remote,
                     {1672,51},
                     {atom,{1672,51},erlang},
                     {atom,{1672,51},setelement}},
                    [{integer,{1672,51},3},
                     {call,
                      {1672,34},
                      {remote,
                       {1672,34},
                       {atom,{1672,34},erlang},
                       {atom,{1672,34},setelement}},
                      [{integer,{1672,34},4},
                       {var,{1672,25},rec90},
                       {atom,{1672,37},has_map_field}]},
                     {var,{1672,55},'SuccDst'}]}]},
                 {clause,
                  [{generated,true},{location,{1672,51}}],
                  [{var,[{generated,true},{location,{1672,51}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{1672,51}}],
                    {remote,
                     [{generated,true},{location,{1672,51}}],
                     {atom,[{generated,true},{location,{1672,51}}],erlang},
                     {atom,[{generated,true},{location,{1672,51}}],error}},
                    [{tuple,
                      [{generated,true},{location,{1672,51}}],
                      [{atom,
                        [{generated,true},{location,{1672,51}}],
                        badrecord},
                       {var,{1672,25},rec90}]}]}]}]}]}},
            {debug_line,1673,779},
            {call,
             {1673,21},
             {atom,{1673,21},live_opt_is},
             [{block,0,
               [{cons,{1673,33},{var,{1673,34},'I'},{var,{1673,36},'Is'}}]},
              {var,{1673,41},'Live0'},
              {var,{1673,48},'Acc'}]}]},
          {clause,
           {1674,17},
           [{var,{1674,17},'_'}],
           [],
           [{debug_line,1675,780},
            {match,
             {1675,21},
             {var,{1675,21},'Live1'},
             {call,
              {1675,29},
              {remote,
               {1675,33},
               {atom,{1675,29},sets},
               {atom,{1675,34},del_element}},
              [{var,{1675,46},'SuccDst'},{var,{1675,55},'Live0'}]}},
            {debug_line,1676,781},
            {match,
             {1676,21},
             {var,{1676,21},'Live'},
             {call,
              {1676,28},
              {remote,
               {1676,32},
               {atom,{1676,28},sets},
               {atom,{1676,33},add_element}},
              [{var,{1676,45},'Dst'},{var,{1676,50},'Live1'}]}},
            {debug_line,1677,782},
            {call,
             {1677,21},
             {atom,{1677,21},live_opt_is},
             [{block,0,
               [{cons,{1677,33},{var,{1677,34},'I0'},{var,{1677,37},'Is'}}]},
              {var,{1677,42},'Live'},
              {block,0,
               [{cons,
                 {1677,48},
                 {var,{1677,49},'SuccI'},
                 {var,{1677,55},'Acc'}}]}]}]}]}]},
      {clause,
       {1679,9},
       [{tuple,{1679,9},[{atom,{1679,10},false},{atom,{1679,17},true}]}],
       [],
       [{debug_line,1680,783},
        {call,
         {1680,13},
         {atom,{1680,13},live_opt_is},
         [{block,0,
           [{cons,{1680,25},{var,{1680,26},'I0'},{var,{1680,29},'Is'}}]},
          {var,{1680,34},'Live0'},
          {var,{1680,41},'Acc'}]}]},
      {clause,
       {1681,9},
       [{tuple,{1681,9},[{atom,{1681,10},false},{atom,{1681,17},false}]}],
       [],
       [{debug_line,1682,784},
        {call,
         {1682,13},
         {atom,{1682,13},live_opt_is},
         [{var,{1682,25},'Is'},
          {var,{1682,29},'Live0'},
          {var,{1682,36},'Acc'}]}]}]}]},
  {clause,
   {1684,1},
   [{cons,
     {1684,13},
     {match,
      {1684,14},
      {tuple,
       {1684,14},
       [{atom,{1684,14},b_set},
        {var,{1684,14},'_'},
        {var,{1684,25},'Dst'},
        {var,{1684,14},'_'},
        {var,{1684,14},'_'}]},
      {var,{1684,30},'I'}},
     {var,{1684,32},'Is'}},
    {var,{1684,37},'Live0'},
    {var,{1684,44},'Acc'}],
   [],
   [{debug_line,1685,785},
    {'case',
     {1685,5},
     {call,
      {1685,10},
      {remote,{1685,14},{atom,{1685,10},sets},{atom,{1685,15},is_element}},
      [{var,{1685,26},'Dst'},{var,{1685,31},'Live0'}]},
     [{clause,
       {1686,9},
       [{atom,{1686,9},true}],
       [],
       [{debug_line,1687,786},
        {match,
         {1687,13},
         {var,{1687,13},'Live1'},
         {call,
          {1687,21},
          {atom,{1687,21},list_set_union},
          [{block,0,
            [{call,
              {1687,36},
              {remote,
               {1687,44},
               {atom,{1687,36},beam_ssa},
               {atom,{1687,45},used}},
              [{var,{1687,50},'I'}]}]},
           {var,{1687,54},'Live0'}]}},
        {debug_line,1688,787},
        {match,
         {1688,13},
         {var,{1688,13},'Live'},
         {call,
          {1688,20},
          {remote,
           {1688,24},
           {atom,{1688,20},sets},
           {atom,{1688,25},del_element}},
          [{var,{1688,37},'Dst'},{var,{1688,42},'Live1'}]}},
        {debug_line,1689,788},
        {call,
         {1689,13},
         {atom,{1689,13},live_opt_is},
         [{var,{1689,25},'Is'},
          {var,{1689,29},'Live'},
          {block,0,
           [{cons,{1689,35},{var,{1689,36},'I'},{var,{1689,38},'Acc'}}]}]}]},
      {clause,
       {1690,9},
       [{atom,{1690,9},false}],
       [],
       [{debug_line,1691,789},
        {'case',
         {1691,13},
         {call,
          {1691,18},
          {remote,
           {1691,26},
           {atom,{1691,18},beam_ssa},
           {atom,{1691,27},no_side_effect}},
          [{var,{1691,42},'I'}]},
         [{clause,
           {1692,17},
           [{atom,{1692,17},true}],
           [],
           [{debug_line,1693,790},
            {call,
             {1693,21},
             {atom,{1693,21},live_opt_is},
             [{var,{1693,33},'Is'},
              {var,{1693,37},'Live0'},
              {var,{1693,44},'Acc'}]}]},
          {clause,
           {1694,17},
           [{atom,{1694,17},false}],
           [],
           [{debug_line,1695,791},
            {match,
             {1695,21},
             {var,{1695,21},'Live'},
             {call,
              {1695,28},
              {atom,{1695,28},list_set_union},
              [{block,0,
                [{call,
                  {1695,43},
                  {remote,
                   {1695,51},
                   {atom,{1695,43},beam_ssa},
                   {atom,{1695,52},used}},
                  [{var,{1695,57},'I'}]}]},
               {var,{1695,61},'Live0'}]}},
            {debug_line,1696,792},
            {call,
             {1696,21},
             {atom,{1696,21},live_opt_is},
             [{var,{1696,33},'Is'},
              {var,{1696,37},'Live'},
              {block,0,
               [{cons,
                 {1696,43},
                 {var,{1696,44},'I'},
                 {var,{1696,46},'Acc'}}]}]}]}]}]}]}]},
  {clause,
   {1699,1},
   [{nil,{1699,13}},{var,{1699,17},'Live'},{var,{1699,23},'Acc'}],
   [],
   [{debug_line,1700,793},
    {tuple,{1700,5},[{var,{1700,6},'Acc'},{var,{1700,10},'Live'}]}]}]}.
{function,
 {1710,1},
 ssa_opt_try,1,
 [{clause,
   {1710,1},
   [{var,{1710,1},'_'}],
   [[{call,
      {1710,1},
      {remote,{1710,1},{atom,{1710,1},fake},{atom,{1710,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1710,794},{atom,{1710,1},ignore}]},
  {clause,
   {1710,1},
   [{tuple,
     {1710,13},
     [{match,
       {1710,14},
       {tuple,
        {1710,14},
        [{atom,{1710,14},opt_st},
         {var,{1710,26},'SSA0'},
         {var,{1710,14},'_'},
         {var,{1710,35},'Count0'},
         {var,{1710,14},'_'}]},
       {var,{1710,43},'St'}},
      {var,{1710,47},'FuncDb'}]}],
   [],
   [{debug_line,1711,795},
    {match,
     {1711,5},
     {tuple,{1711,5},[{var,{1711,6},'Count'},{var,{1711,13},'SSA'}]},
     {call,
      {1711,20},
      {atom,{1711,20},opt_try},
      [{var,{1711,28},'SSA0'},{var,{1711,34},'Count0'}]}},
    {debug_line,1712,796},
    {tuple,
     {1712,5},
     [{block,
       {1712,6},
       [{match,{1712,6},{var,{1712,6},rec91},{var,{1712,6},'St'}},
        {'case',
         {1712,16},
         {var,{1712,6},rec91},
         [{clause,
           {1712,16},
           [{tuple,
             {1712,16},
             [{atom,{1712,16},opt_st},
              {var,{1712,16},'_'},
              {var,{1712,16},'_'},
              {var,{1712,16},'_'},
              {var,{1712,16},'_'}]}],
           [],
           [{call,
             {1712,16},
             {remote,
              {1712,16},
              {atom,{1712,16},erlang},
              {atom,{1712,16},setelement}},
             [{integer,{1712,16},2},
              {call,
               {1712,24},
               {remote,
                {1712,24},
                {atom,{1712,24},erlang},
                {atom,{1712,24},setelement}},
               [{integer,{1712,24},4},
                {var,{1712,6},rec91},
                {var,{1712,28},'Count'}]},
              {var,{1712,20},'SSA'}]}]},
          {clause,
           [{generated,true},{location,{1712,16}}],
           [{var,[{generated,true},{location,{1712,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{1712,16}}],
             {remote,
              [{generated,true},{location,{1712,16}}],
              {atom,[{generated,true},{location,{1712,16}}],erlang},
              {atom,[{generated,true},{location,{1712,16}}],error}},
             [{tuple,
               [{generated,true},{location,{1712,16}}],
               [{atom,[{generated,true},{location,{1712,16}}],badrecord},
                {var,{1712,6},rec91}]}]}]}]}]},
      {var,{1712,36},'FuncDb'}]}]}]}.
{function,
    {1714,1},
    opt_try,2,
    [{clause,
         {1714,1},
         [{var,{1714,1},'_'},{var,{1714,1},'_'}],
         [[{call,
               {1714,1},
               {remote,
                   {1714,1},
                   {atom,{1714,1},fake},
                   {atom,{1714,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1714,797},{atom,{1714,1},ignore}]},
     {clause,
         {1714,1},
         [{var,{1714,9},'Blocks'},{var,{1714,17},'Count0'}],
         [[{call,
               {1714,30},
               {remote,
                   {1714,30},
                   {atom,{1714,30},erlang},
                   {atom,{1714,30},is_map}},
               [{var,{1714,37},'Blocks'}]}]],
         [{debug_line,1715,798},
          {match,
              {1715,5},
              {tuple,
                  {1715,5},
                  [{var,{1715,6},'Count'},{var,{1715,13},'Linear'}]},
              {call,
                  {1715,23},
                  {atom,{1715,23},opt_try},
                  [{block,0,
                       [{call,
                            {1715,31},
                            {remote,
                                {1715,39},
                                {atom,{1715,31},beam_ssa},
                                {atom,{1715,40},linearize}},
                            [{var,{1715,50},'Blocks'}]}]},
                   {var,{1715,59},'Count0'}]}},
          {debug_line,1716,799},
          {tuple,
              {1716,5},
              [{var,{1716,6},'Count'},
               {call,
                   {1716,13},
                   {remote,
                       {1716,17},
                       {atom,{1716,13},maps},
                       {atom,{1716,18},from_list}},
                   [{var,{1716,28},'Linear'}]}]}]},
     {clause,
         {1717,1},
         [{var,{1717,9},'Linear'},{var,{1717,17},'Count0'}],
         [[{call,
               {1717,30},
               {remote,
                   {1717,30},
                   {atom,{1717,30},erlang},
                   {atom,{1717,30},is_list}},
               [{var,{1717,38},'Linear'}]}]],
         [{debug_line,1718,800},
          {match,
              {1718,5},
              {tuple,
                  {1718,5},
                  [{var,{1718,6},'Count'},{var,{1718,13},'Shrunk'}]},
              {call,
                  {1718,23},
                  {atom,{1718,23},shrink_try},
                  [{var,{1718,34},'Linear'},
                   {var,{1718,42},'Count0'},
                   {nil,{1718,50}}]}},
          {debug_line,1720,801},
          {match,
              {1720,5},
              {var,{1720,5},'Reduced'},
              {call,
                  {1720,15},
                  {atom,{1720,15},reduce_try},
                  [{var,{1720,26},'Shrunk'},{nil,{1720,34}}]}},
          {debug_line,1722,802},
          {match,
              {1722,5},
              {var,{1722,5},'EmptySet'},
              {call,
                  {1722,16},
                  {remote,
                      {1722,20},
                      {atom,{1722,16},sets},
                      {atom,{1722,21},new}},
                  []}},
          {debug_line,1723,803},
          {match,
              {1723,5},
              {var,{1723,5},'Trimmed'},
              {call,
                  {1723,15},
                  {atom,{1723,15},trim_try},
                  [{var,{1723,24},'Reduced'},
                   {var,{1723,33},'EmptySet'},
                   {var,{1723,43},'EmptySet'},
                   {nil,{1723,53}}]}},
          {debug_line,1725,804},
          {tuple,
              {1725,5},
              [{var,{1725,6},'Count'},{var,{1725,13},'Trimmed'}]}]}]}.
{function,
 {1738,1},
 shrink_try,3,
 [{clause,
   {1738,1},
   [{var,{1738,1},'_'},{var,{1738,1},'_'},{var,{1738,1},'_'}],
   [[{call,
      {1738,1},
      {remote,{1738,1},{atom,{1738,1},fake},{atom,{1738,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1738,805},{atom,{1738,1},ignore}]},
  {clause,
   {1738,1},
   [{cons,
     {1738,12},
     {tuple,
      {1738,13},
      [{var,{1738,14},'TryLbl0'},
       {match,
        {1738,23},
        {tuple,
         {1738,23},
         [{atom,{1738,23},b_blk},
          {var,{1738,23},'_'},
          {cons,
           {1738,33},
           {tuple,
            {1738,34},
            [{atom,{1738,34},b_set},
             {var,{1738,34},'_'},
             {var,{1738,60},'Dst'},
             {atom,{1738,44},new_try_tag},
             {var,{1738,34},'_'}]},
           {nil,{1738,64}}},
          {tuple,
           {1739,35},
           [{atom,{1739,35},b_br},
            {var,{1739,35},'_'},
            {var,{1739,46},'Dst'},
            {var,{1739,55},'SuccLbl'},
            {var,{1739,35},'_'}]}]},
        {var,{1739,65},'TryBlk'}}]},
     {cons,
      {1740,13},
      {tuple,
       {1740,13},
       [{var,{1740,14},'SuccLbl'},
        {match,
         {1740,23},
         {tuple,
          {1740,23},
          [{atom,{1740,23},b_blk},
           {var,{1740,23},'_'},
           {var,{1740,33},'SuccIs0'},
           {var,{1740,46},'SuccLast'}]},
         {var,{1740,56},'SuccBlk0'}}]},
      {var,{1740,68},'Bs'}}},
    {var,{1741,12},'Count0'},
    {var,{1741,20},'Acc0'}],
   [],
   [{debug_line,1743,806},
    {match,
     {1743,5},
     {tuple,{1743,5},[{var,{1743,6},'HoistIs'},{var,{1743,15},'SuccIs'}]},
     {call,
      {1743,25},
      {atom,{1743,25},hoist_try_is},
      [{var,{1743,38},'SuccIs0'},
       {var,{1743,47},'SuccLast'},
       {var,{1743,57},'Dst'},
       {nil,{1743,62}}]}},
    {debug_line,1745,807},
    {match,{1745,5},{var,{1745,5},'HoistLbl'},{var,{1745,16},'TryLbl0'}},
    {debug_line,1746,808},
    {match,{1746,5},{var,{1746,5},'TryLbl'},{var,{1746,14},'Count0'}},
    {debug_line,1747,809},
    {match,
     {1747,5},
     {var,{1747,5},'Count'},
     {op,{1747,20},'+',{var,{1747,13},'Count0'},{integer,{1747,22},1}}},
    {debug_line,1749,810},
    {match,
     {1749,5},
     {var,{1749,5},'HoistBlk'},
     {tuple,
      {1749,16},
      [{atom,{1749,16},b_blk},
       {map,{1749,16},[]},
       {var,{1749,26},'HoistIs'},
       {tuple,
        {1750,28},
        [{atom,{1750,28},b_br},
         {map,{1750,28},[]},
         {tuple,{1750,39},[{atom,{1750,39},b_literal},{atom,{1750,54},true}]},
         {var,{1751,39},'TryLbl'},
         {var,{1752,39},'TryLbl'}]}]}},
    {debug_line,1753,811},
    {match,
     {1753,5},
     {var,{1753,5},'SuccBlk'},
     {block,
      {1753,15},
      [{match,{1753,15},{var,{1753,15},rec92},{var,{1753,15},'SuccBlk0'}},
       {'case',
        {1753,30},
        {var,{1753,15},rec92},
        [{clause,
          {1753,30},
          [{tuple,
            {1753,30},
            [{atom,{1753,30},b_blk},
             {var,{1753,30},'_'},
             {var,{1753,30},'_'},
             {var,{1753,30},'_'}]}],
          [],
          [{call,
            {1753,30},
            {remote,
             {1753,30},
             {atom,{1753,30},erlang},
             {atom,{1753,30},setelement}},
            [{integer,{1753,30},3},
             {var,{1753,15},rec92},
             {var,{1753,33},'SuccIs'}]}]},
         {clause,
          [{generated,true},{location,{1753,30}}],
          [{var,[{generated,true},{location,{1753,30}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1753,30}}],
            {remote,
             [{generated,true},{location,{1753,30}}],
             {atom,[{generated,true},{location,{1753,30}}],erlang},
             {atom,[{generated,true},{location,{1753,30}}],error}},
            [{tuple,
              [{generated,true},{location,{1753,30}}],
              [{atom,[{generated,true},{location,{1753,30}}],badrecord},
               {var,{1753,15},rec92}]}]}]}]}]}},
    {debug_line,1755,812},
    {match,
     {1755,5},
     {var,{1755,5},'Acc'},
     {cons,
      {1755,11},
      {tuple,{1755,12},[{var,{1755,13},'TryLbl'},{var,{1755,21},'TryBlk'}]},
      {cons,
       {1756,12},
       {tuple,
        {1756,12},
        [{var,{1756,13},'HoistLbl'},{var,{1756,23},'HoistBlk'}]},
       {var,{1756,35},'Acc0'}}}},
    {debug_line,1758,813},
    {call,
     {1758,5},
     {atom,{1758,5},shrink_try},
     [{block,0,
       [{cons,
         {1758,16},
         {tuple,
          {1758,17},
          [{var,{1758,18},'SuccLbl'},{var,{1758,27},'SuccBlk'}]},
         {var,{1758,38},'Bs'}}]},
      {var,{1758,43},'Count'},
      {var,{1758,50},'Acc'}]}]},
  {clause,
   {1759,1},
   [{cons,
     {1759,12},
     {tuple,
      {1759,13},
      [{var,{1759,14},'L'},
       {match,
        {1759,17},
        {tuple,
         {1759,17},
         [{atom,{1759,17},b_blk},
          {var,{1759,17},'_'},
          {var,{1759,27},'Is'},
          {var,{1759,17},'_'}]},
        {var,{1759,31},'Blk0'}}]},
     {var,{1759,39},'Bs'}},
    {var,{1759,44},'Count'},
    {var,{1759,51},'Acc'}],
   [],
   [{debug_line,1760,814},
    {match,
     {1760,5},
     {var,{1760,5},'Blk'},
     {block,
      {1760,11},
      [{match,
        {1760,22},
        {var,{1760,22},rec93},
        {call,{1760,25},{atom,{1760,25},sink_try_is},[{var,{1760,37},'Is'}]}},
       {match,{1760,11},{var,{1760,11},rec94},{var,{1760,11},'Blk0'}},
       {'case',
        {1760,22},
        {var,{1760,11},rec94},
        [{clause,
          {1760,22},
          [{tuple,
            {1760,22},
            [{atom,{1760,22},b_blk},
             {var,{1760,22},'_'},
             {var,{1760,22},'_'},
             {var,{1760,22},'_'}]}],
          [],
          [{call,
            {1760,22},
            {remote,
             {1760,22},
             {atom,{1760,22},erlang},
             {atom,{1760,22},setelement}},
            [{integer,{1760,22},3},
             {var,{1760,11},rec94},
             {var,{1760,22},rec93}]}]},
         {clause,
          [{generated,true},{location,{1760,22}}],
          [{var,[{generated,true},{location,{1760,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1760,22}}],
            {remote,
             [{generated,true},{location,{1760,22}}],
             {atom,[{generated,true},{location,{1760,22}}],erlang},
             {atom,[{generated,true},{location,{1760,22}}],error}},
            [{tuple,
              [{generated,true},{location,{1760,22}}],
              [{atom,[{generated,true},{location,{1760,22}}],badrecord},
               {var,{1760,11},rec94}]}]}]}]}]}},
    {debug_line,1761,815},
    {call,
     {1761,5},
     {atom,{1761,5},shrink_try},
     [{var,{1761,16},'Bs'},
      {var,{1761,20},'Count'},
      {block,0,
       [{cons,
         {1761,27},
         {tuple,{1761,28},[{var,{1761,29},'L'},{var,{1761,32},'Blk'}]},
         {var,{1761,39},'Acc'}}]}]}]},
  {clause,
   {1762,1},
   [{nil,{1762,12}},{var,{1762,16},'Count'},{var,{1762,23},'Acc'}],
   [],
   [{debug_line,1763,816},
    {tuple,
     {1763,5},
     [{var,{1763,6},'Count'},
      {call,
       {1763,13},
       {remote,{1763,13},{atom,{1763,13},lists},{atom,{1763,13},reverse}},
       [{var,{1763,21},'Acc'}]}]}]}]}.
{function,
    {1765,1},
    hoist_try_is,4,
    [{clause,
         {1765,1},
         [{var,{1765,1},'_'},
          {var,{1765,1},'_'},
          {var,{1765,1},'_'},
          {var,{1765,1},'_'}],
         [[{call,
               {1765,1},
               {remote,
                   {1765,1},
                   {atom,{1765,1},fake},
                   {atom,{1765,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1765,817},{atom,{1765,1},ignore}]},
     {clause,
         {1765,1},
         [{match,
              {1765,14},
              {cons,
                  {1765,14},
                  {tuple,
                      {1765,15},
                      [{atom,{1765,15},b_set},
                       {var,{1765,15},'_'},
                       {var,{1765,26},'Dst'},
                       {var,{1765,15},'_'},
                       {var,{1765,15},'_'}]},
                  {cons,
                      {1766,15},
                      {tuple,
                          {1766,15},
                          [{atom,{1766,15},b_set},
                           {var,{1766,15},'_'},
                           {var,{1766,15},'_'},
                           {tuple,
                               {1766,25},
                               [{atom,{1766,26},succeeded},
                                {var,{1766,36},'_'}]},
                           {cons,
                               {1766,44},
                               {var,{1766,45},'Dst'},
                               {nil,{1766,48}}}]},
                      {nil,{1766,50}}}},
              {var,{1766,52},'Is'}},
          {tuple,
              {1767,14},
              [{atom,{1767,14},b_br},
               {var,{1767,14},'_'},
               {var,{1767,14},'_'},
               {var,{1767,14},'_'},
               {var,{1767,14},'_'}]},
          {var,{1767,23},'_TryTag'},
          {var,{1767,32},'HoistIs'}],
         [],
         [{debug_line,1768,818},
          {tuple,
              {1768,5},
              [{call,
                   {1768,6},
                   {remote,
                       {1768,6},
                       {atom,{1768,6},lists},
                       {atom,{1768,6},reverse}},
                   [{var,{1768,14},'HoistIs'}]},
               {var,{1768,24},'Is'}]}]},
     {clause,
         {1769,1},
         [{match,
              {1769,14},
              {cons,
                  {1769,14},
                  {tuple,
                      {1769,15},
                      [{atom,{1769,15},b_set},
                       {var,{1769,15},'_'},
                       {var,{1769,26},'Dst'},
                       {var,{1769,15},'_'},
                       {var,{1769,15},'_'}]},
                  {nil,{1769,30}}},
              {var,{1769,32},'Is'}},
          {tuple,
              {1769,36},
              [{atom,{1769,36},b_br},
               {var,{1769,36},'_'},
               {var,{1769,47},'Dst'},
               {var,{1769,36},'_'},
               {var,{1769,36},'_'}]},
          {var,{1769,53},'_TryTag'},
          {var,{1769,62},'HoistIs'}],
         [],
         [{debug_line,1770,819},
          {tuple,
              {1770,5},
              [{call,
                   {1770,6},
                   {remote,
                       {1770,6},
                       {atom,{1770,6},lists},
                       {atom,{1770,6},reverse}},
                   [{var,{1770,14},'HoistIs'}]},
               {var,{1770,24},'Is'}]}]},
     {clause,
         {1771,1},
         [{cons,
              {1771,14},
              {match,
                  {1771,15},
                  {tuple,
                      {1771,15},
                      [{atom,{1771,15},b_set},
                       {var,{1771,15},'_'},
                       {var,{1771,15},'_'},
                       {atom,{1771,25},kill_try_tag},
                       {cons,
                           {1771,43},
                           {var,{1771,44},'TryTag'},
                           {nil,{1771,50}}}]},
                  {var,{1771,53},'Kill'}},
              {var,{1771,60},'Rest'}},
          {var,{1772,14},'Last'},
          {var,{1772,20},'TryTag'},
          {var,{1772,28},'HoistIs0'}],
         [],
         [{debug_line,1776,820},
          {match,
              {1776,5},
              {tuple,{1776,5},[{var,{1776,6},'HoistIs'},{var,{1776,15},'Is'}]},
              {call,
                  {1776,21},
                  {atom,{1776,21},hoist_try_is},
                  [{var,{1776,34},'Rest'},
                   {var,{1776,40},'Last'},
                   {var,{1776,46},'TryTag'},
                   {nil,{1776,54}}]}},
          {debug_line,1777,821},
          {tuple,
              {1777,5},
              [{call,
                   {1777,6},
                   {remote,
                       {1777,6},
                       {atom,{1777,6},lists},
                       {atom,{1777,6},reverse}},
                   [{var,{1777,14},'HoistIs0'},{var,{1777,24},'HoistIs'}]},
               {cons,
                   {1777,34},
                   {var,{1777,35},'Kill'},
                   {var,{1777,42},'Is'}}]}]},
     {clause,
         {1778,1},
         [{cons,
              {1778,14},
              {match,
                  {1778,15},
                  {tuple,
                      {1778,15},
                      [{atom,{1778,15},b_set},
                       {var,{1778,15},'_'},
                       {var,{1778,15},'_'},
                       {var,{1778,15},'_'},
                       {var,{1778,15},'_'}]},
                  {var,{1778,24},'I'}},
              {var,{1778,28},'Is'}},
          {var,{1778,33},'Last'},
          {var,{1778,39},'TryTag'},
          {var,{1778,47},'HoistIs'}],
         [],
         [{debug_line,1782,822},
          {call,
              {1782,5},
              {atom,{1782,5},hoist_try_is},
              [{var,{1782,18},'Is'},
               {var,{1782,22},'Last'},
               {var,{1782,28},'TryTag'},
               {block,0,
                   [{cons,
                        {1782,36},
                        {var,{1782,37},'I'},
                        {var,{1782,41},'HoistIs'}}]}]}]},
     {clause,
         {1783,1},
         [{nil,{1783,14}},
          {var,{1783,18},'_Last'},
          {var,{1783,25},'_TryTag'},
          {var,{1783,34},'HoistIs'}],
         [],
         [{debug_line,1784,823},
          {tuple,
              {1784,5},
              [{call,
                   {1784,6},
                   {remote,
                       {1784,6},
                       {atom,{1784,6},lists},
                       {atom,{1784,6},reverse}},
                   [{var,{1784,14},'HoistIs'}]},
               {nil,{1784,24}}]}]}]}.
{function,
    {1787,1},
    sink_try_is,1,
    [{clause,
         {1787,1},
         [{var,{1787,1},'_'}],
         [[{call,
               {1787,1},
               {remote,
                   {1787,1},
                   {atom,{1787,1},fake},
                   {atom,{1787,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1787,824},{atom,{1787,1},ignore}]},
     {clause,
         {1787,1},
         [{match,
              {1787,13},
              {cons,
                  {1787,13},
                  {tuple,
                      {1787,14},
                      [{atom,{1787,14},b_set},
                       {var,{1787,14},'_'},
                       {var,{1787,14},'_'},
                       {atom,{1787,24},landingpad},
                       {var,{1787,14},'_'}]},
                  {var,{1787,38},'_'}},
              {var,{1787,41},'Is'}}],
         [],
         [{debug_line,1788,825},{var,{1788,5},'Is'}]},
     {clause,
         {1789,1},
         [{cons,
              {1789,13},
              {match,
                  {1789,14},
                  {tuple,
                      {1789,14},
                      [{atom,{1789,14},b_set},
                       {var,{1789,14},'_'},
                       {var,{1789,14},'_'},
                       {atom,{1789,24},phi},
                       {var,{1789,14},'_'}]},
                  {var,{1789,29},'Phi'}},
              {var,{1789,35},'Is'}}],
         [],
         [{debug_line,1790,826},
          {cons,
              {1790,5},
              {var,{1790,6},'Phi'},
              {call,
                  {1790,12},
                  {atom,{1790,12},sink_try_is},
                  [{var,{1790,24},'Is'}]}}]},
     {clause,
         {1791,1},
         [{var,{1791,13},'Is'}],
         [],
         [{debug_line,1792,827},
          {call,
              {1792,5},
              {atom,{1792,5},sink_try_is_1},
              [{var,{1792,19},'Is'},{nil,{1792,23}}]}]}]}.
{function,
    {1794,1},
    sink_try_is_1,2,
    [{clause,
         {1794,1},
         [{var,{1794,1},'_'},{var,{1794,1},'_'}],
         [[{call,
               {1794,1},
               {remote,
                   {1794,1},
                   {atom,{1794,1},fake},
                   {atom,{1794,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1794,828},{atom,{1794,1},ignore}]},
     {clause,
         {1794,1},
         [{cons,
              {1794,15},
              {match,
                  {1794,16},
                  {tuple,
                      {1794,16},
                      [{atom,{1794,16},b_set},
                       {var,{1794,16},'_'},
                       {var,{1794,16},'_'},
                       {atom,{1794,26},kill_try_tag},
                       {var,{1794,16},'_'}]},
                  {var,{1794,40},'Kill'}},
              {var,{1794,47},'Is'}},
          {var,{1794,52},'Acc'}],
         [],
         [{debug_line,1795,829},
          {cons,
              {1795,5},
              {var,{1795,6},'Kill'},
              {call,
                  {1795,13},
                  {remote,
                      {1795,13},
                      {atom,{1795,13},lists},
                      {atom,{1795,13},reverse}},
                  [{var,{1795,21},'Acc'},{var,{1795,26},'Is'}]}}]},
     {clause,
         {1796,1},
         [{cons,{1796,15},{var,{1796,16},'I'},{var,{1796,20},'Is'}},
          {var,{1796,25},'Acc'}],
         [],
         [{debug_line,1797,830},
          {'case',
              {1797,5},
              {call,
                  {1797,10},
                  {atom,{1797,10},is_safe_sink_try},
                  [{var,{1797,27},'I'}]},
              [{clause,
                   {1798,9},
                   [{atom,{1798,9},true}],
                   [],
                   [{debug_line,1798,831},
                    {call,
                        {1798,17},
                        {atom,{1798,17},sink_try_is_1},
                        [{var,{1798,31},'Is'},
                         {block,0,
                             [{cons,
                                  {1798,35},
                                  {var,{1798,36},'I'},
                                  {var,{1798,40},'Acc'}}]}]}]},
               {clause,
                   {1799,9},
                   [{atom,{1799,9},false}],
                   [],
                   [{debug_line,1799,832},
                    {call,
                        {1799,18},
                        {remote,
                            {1799,18},
                            {atom,{1799,18},lists},
                            {atom,{1799,18},reverse}},
                        [{var,{1799,26},'Acc'},
                         {block,0,
                             [{cons,
                                  {1799,31},
                                  {var,{1799,32},'I'},
                                  {var,{1799,36},'Is'}}]}]}]}]}]},
     {clause,
         {1801,1},
         [{nil,{1801,15}},{var,{1801,19},'Acc'}],
         [],
         [{debug_line,1802,833},
          {call,
              {1802,5},
              {remote,{1802,5},{atom,{1802,5},lists},{atom,{1802,5},reverse}},
              [{var,{1802,13},'Acc'}]}]}]}.
{function,
    {1804,1},
    is_safe_sink_try,1,
    [{clause,
         {1804,1},
         [{var,{1804,1},'_'}],
         [[{call,
               {1804,1},
               {remote,
                   {1804,1},
                   {atom,{1804,1},fake},
                   {atom,{1804,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1804,834},{atom,{1804,1},ignore}]},
     {clause,
         {1804,1},
         [{match,
              {1804,18},
              {tuple,
                  {1804,18},
                  [{atom,{1804,18},b_set},
                   {var,{1804,18},'_'},
                   {var,{1804,18},'_'},
                   {var,{1804,28},'Op'},
                   {var,{1804,18},'_'}]},
              {var,{1804,32},'I'}}],
         [],
         [{debug_line,1805,835},
          {'case',
              {1805,5},
              {var,{1805,10},'Op'},
              [{clause,
                   {1806,9},
                   [{atom,{1806,9},bs_extract}],
                   [],
                   [{debug_line,1806,836},{atom,{1806,23},false}]},
               {clause,
                   {1807,9},
                   [{var,{1807,9},'_'}],
                   [],
                   [{debug_line,1807,837},
                    {call,
                        {1807,14},
                        {remote,
                            {1807,22},
                            {atom,{1807,14},beam_ssa},
                            {atom,{1807,23},no_side_effect}},
                        [{var,{1807,38},'I'}]}]}]}]}]}.
{function,
 {1825,1},
 reduce_try,2,
 [{clause,
   {1825,1},
   [{var,{1825,1},'_'},{var,{1825,1},'_'}],
   [[{call,
      {1825,1},
      {remote,{1825,1},{atom,{1825,1},fake},{atom,{1825,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1825,838},{atom,{1825,1},ignore}]},
  {clause,
   {1825,1},
   [{cons,
     {1825,12},
     {tuple,
      {1825,13},
      [{var,{1825,14},'L'},
       {match,
        {1825,16},
        {tuple,
         {1825,16},
         [{atom,{1825,16},b_blk},
          {var,{1825,16},'_'},
          {cons,
           {1825,26},
           {tuple,
            {1825,27},
            [{atom,{1825,27},b_set},
             {var,{1825,27},'_'},
             {var,{1825,27},'_'},
             {atom,{1825,37},new_try_tag},
             {var,{1825,27},'_'}]},
           {nil,{1825,49}}},
          {var,{1826,28},'Last'}]},
        {var,{1826,34},'Blk0'}}]},
     {var,{1826,42},'Bs0'}},
    {var,{1826,48},'Acc'}],
   [],
   [{debug_line,1827,839},
    {match,
     {1827,5},
     {tuple,
      {1827,5},
      [{atom,{1827,5},b_br},
       {var,{1827,5},'_'},
       {var,{1827,5},'_'},
       {var,{1827,16},'Succ'},
       {var,{1827,26},'Fail'}]},
     {var,{1827,34},'Last'}},
    {debug_line,1828,840},
    {match,
     {1828,5},
     {var,{1828,5},'Ws'},
     {call,
      {1828,10},
      {remote,{1828,14},{atom,{1828,10},sets},{atom,{1828,15},from_list}},
      [{block,0,
        [{cons,
          {1828,25},
          {var,{1828,26},'Succ'},
          {cons,{1828,31},{var,{1828,31},'Fail'},{nil,{1828,35}}}}]}]}},
    {debug_line,1829,841},
    {'try',
     {1829,5},
     [{call,
       {1829,9},
       {atom,{1829,9},do_reduce_try},
       [{var,{1829,23},'Bs0'},{var,{1829,28},'Ws'}]}],
     [{clause,
       {1830,9},
       [{var,{1830,9},'Bs'}],
       [],
       [{debug_line,1831,842},
        {match,
         {1831,13},
         {var,{1831,13},'Blk'},
         {block,
          {1831,19},
          [{match,
            {1832,30},
            {var,{1832,30},rec95},
            {tuple,
             {1832,35},
             [{atom,{1832,35},b_br},
              {map,{1832,35},[]},
              {tuple,
               {1832,46},
               [{atom,{1832,46},b_literal},{atom,{1832,61},true}]},
              {var,{1833,46},'Succ'},
              {var,{1833,56},'Succ'}]}},
           {match,{1831,19},{var,{1831,19},rec96},{var,{1831,19},'Blk0'}},
           {'case',
            {1831,30},
            {var,{1831,19},rec96},
            [{clause,
              {1831,30},
              [{tuple,
                {1831,30},
                [{atom,{1831,30},b_blk},
                 {var,{1831,30},'_'},
                 {var,{1831,30},'_'},
                 {var,{1831,30},'_'}]}],
              [],
              [{call,
                {1831,30},
                {remote,
                 {1831,30},
                 {atom,{1831,30},erlang},
                 {atom,{1831,30},setelement}},
                [{integer,{1831,30},3},
                 {call,
                  {1832,30},
                  {remote,
                   {1832,30},
                   {atom,{1832,30},erlang},
                   {atom,{1832,30},setelement}},
                  [{integer,{1832,30},4},
                   {var,{1831,19},rec96},
                   {var,{1832,30},rec95}]},
                 {nil,{1831,33}}]}]},
             {clause,
              [{generated,true},{location,{1831,30}}],
              [{var,[{generated,true},{location,{1831,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1831,30}}],
                {remote,
                 [{generated,true},{location,{1831,30}}],
                 {atom,[{generated,true},{location,{1831,30}}],erlang},
                 {atom,[{generated,true},{location,{1831,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{1831,30}}],
                  [{atom,[{generated,true},{location,{1831,30}}],badrecord},
                   {var,{1831,19},rec96}]}]}]}]}]}},
        {debug_line,1834,843},
        {call,
         {1834,13},
         {atom,{1834,13},reduce_try},
         [{var,{1834,24},'Bs'},
          {block,0,
           [{cons,
             {1834,28},
             {tuple,{1834,29},[{var,{1834,30},'L'},{var,{1834,33},'Blk'}]},
             {var,{1834,40},'Acc'}}]}]}]}],
     [{clause,
       {1836,9},
       [{tuple,
         {1836,9},
         [{atom,{1836,9},throw},
          {atom,{1836,15},not_possible},
          {var,{1836,15},'_'}]}],
       [],
       [{debug_line,1837,844},
        {call,
         {1837,13},
         {atom,{1837,13},reduce_try},
         [{var,{1837,24},'Bs0'},
          {block,0,
           [{cons,
             {1837,29},
             {tuple,{1837,30},[{var,{1837,31},'L'},{var,{1837,34},'Blk0'}]},
             {var,{1837,42},'Acc'}}]}]}]}],
     []}]},
  {clause,
   {1839,1},
   [{cons,
     {1839,12},
     {tuple,{1839,13},[{var,{1839,14},'L'},{var,{1839,17},'Blk'}]},
     {var,{1839,24},'Bs'}},
    {var,{1839,29},'Acc'}],
   [],
   [{debug_line,1840,845},
    {call,
     {1840,5},
     {atom,{1840,5},reduce_try},
     [{var,{1840,16},'Bs'},
      {block,0,
       [{cons,
         {1840,20},
         {tuple,{1840,21},[{var,{1840,22},'L'},{var,{1840,25},'Blk'}]},
         {var,{1840,32},'Acc'}}]}]}]},
  {clause,
   {1841,1},
   [{nil,{1841,12}},{var,{1841,16},'Acc'}],
   [],
   [{debug_line,1842,846},{var,{1842,5},'Acc'}]}]}.
{function,
 {1844,1},
 do_reduce_try,2,
 [{clause,
   {1844,1},
   [{var,{1844,1},'_'},{var,{1844,1},'_'}],
   [[{call,
      {1844,1},
      {remote,{1844,1},{atom,{1844,1},fake},{atom,{1844,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1844,847},{atom,{1844,1},ignore}]},
  {clause,
   {1844,1},
   [{match,
     {1844,15},
     {cons,
      {1844,15},
      {tuple,{1844,16},[{var,{1844,17},'L'},{var,{1844,20},'Blk'}]},
      {var,{1844,27},'Bs'}},
     {var,{1844,31},'Bs0'}},
    {var,{1844,36},'Ws0'}],
   [],
   [{debug_line,1845,848},
    {'case',
     {1845,5},
     {call,
      {1845,10},
      {remote,{1845,14},{atom,{1845,10},sets},{atom,{1845,15},is_element}},
      [{var,{1845,26},'L'},{var,{1845,29},'Ws0'}]},
     [{clause,
       {1846,9},
       [{atom,{1846,9},false}],
       [],
       [{debug_line,1850,849},
        {'case',
         {1850,13},
         {call,
          {1850,18},
          {remote,{1850,22},{atom,{1850,18},sets},{atom,{1850,23},is_empty}},
          [{var,{1850,32},'Ws0'}]},
         [{clause,
           {1851,17},
           [{atom,{1851,17},true}],
           [],
           [{debug_line,1851,850},{var,{1851,25},'Bs0'}]},
          {clause,
           {1852,17},
           [{atom,{1852,17},false}],
           [],
           [{debug_line,1852,851},
            {cons,
             {1852,26},
             {tuple,{1852,27},[{var,{1852,28},'L'},{var,{1852,31},'Blk'}]},
             {call,
              {1852,38},
              {atom,{1852,38},do_reduce_try},
              [{var,{1852,52},'Bs'},{var,{1852,56},'Ws0'}]}}]}]}]},
      {clause,
       {1854,9},
       [{atom,{1854,9},true}],
       [],
       [{debug_line,1855,852},
        {match,
         {1855,13},
         {var,{1855,13},'Ws1'},
         {call,
          {1855,19},
          {remote,
           {1855,23},
           {atom,{1855,19},sets},
           {atom,{1855,24},del_element}},
          [{var,{1855,36},'L'},{var,{1855,39},'Ws0'}]}},
        {debug_line,1856,853},
        {match,
         {1856,13},
         {tuple,
          {1856,13},
          [{atom,{1856,13},b_blk},
           {var,{1856,13},'_'},
           {var,{1856,23},'Is0'},
           {var,{1856,13},'_'}]},
         {var,{1856,30},'Blk'}},
        {debug_line,1857,854},
        {'case',
         {1857,13},
         {call,
          {1857,18},
          {atom,{1857,18},reduce_try_is},
          [{var,{1857,32},'Is0'},{nil,{1857,37}}]},
         [{clause,
           {1858,17},
           [{tuple,{1858,17},[{atom,{1858,18},safe},{var,{1858,23},'Is'}]}],
           [],
           [{debug_line,1861,855},
            {match,
             {1861,21},
             {var,{1861,21},'Successors'},
             {call,
              {1861,34},
              {remote,
               {1861,42},
               {atom,{1861,34},beam_ssa},
               {atom,{1861,43},successors}},
              [{var,{1861,54},'Blk'}]}},
            {debug_line,1862,856},
            {match,
             {1862,21},
             {var,{1862,21},'Ws'},
             {call,
              {1862,26},
              {atom,{1862,26},list_set_union},
              [{var,{1862,41},'Successors'},{var,{1862,53},'Ws1'}]}},
            {debug_line,1863,857},
            {cons,
             {1863,21},
             {tuple,
              {1863,22},
              [{var,{1863,23},'L'},
               {block,
                {1863,26},
                [{match,{1863,26},{var,{1863,26},rec97},{var,{1863,26},'Blk'}},
                 {'case',
                  {1863,36},
                  {var,{1863,26},rec97},
                  [{clause,
                    {1863,36},
                    [{tuple,
                      {1863,36},
                      [{atom,{1863,36},b_blk},
                       {var,{1863,36},'_'},
                       {var,{1863,36},'_'},
                       {var,{1863,36},'_'}]}],
                    [],
                    [{call,
                      {1863,36},
                      {remote,
                       {1863,36},
                       {atom,{1863,36},erlang},
                       {atom,{1863,36},setelement}},
                      [{integer,{1863,36},3},
                       {var,{1863,26},rec97},
                       {var,{1863,39},'Is'}]}]},
                   {clause,
                    [{generated,true},{location,{1863,36}}],
                    [{var,[{generated,true},{location,{1863,36}}],'_'}],
                    [],
                    [{call,
                      [{generated,true},{location,{1863,36}}],
                      {remote,
                       [{generated,true},{location,{1863,36}}],
                       {atom,[{generated,true},{location,{1863,36}}],erlang},
                       {atom,[{generated,true},{location,{1863,36}}],error}},
                      [{tuple,
                        [{generated,true},{location,{1863,36}}],
                        [{atom,
                          [{generated,true},{location,{1863,36}}],
                          badrecord},
                         {var,{1863,26},rec97}]}]}]}]}]}]},
             {call,
              {1863,46},
              {atom,{1863,46},do_reduce_try},
              [{var,{1863,60},'Bs'},{var,{1863,64},'Ws'}]}}]},
          {clause,
           {1864,17},
           [{atom,{1864,17},unsafe}],
           [],
           [{debug_line,1868,858},
            {call,
             {1868,21},
             {remote,{1868,21},{atom,{1868,21},erlang},{atom,{1868,21},throw}},
             [{atom,{1868,27},not_possible}]}]},
          {clause,
           {1869,17},
           [{tuple,{1869,17},[{atom,{1869,18},done},{var,{1869,23},'Is'}]}],
           [],
           [{debug_line,1873,859},
            {cons,
             {1873,21},
             {tuple,
              {1873,22},
              [{var,{1873,23},'L'},
               {block,
                {1873,26},
                [{match,{1873,26},{var,{1873,26},rec98},{var,{1873,26},'Blk'}},
                 {'case',
                  {1873,36},
                  {var,{1873,26},rec98},
                  [{clause,
                    {1873,36},
                    [{tuple,
                      {1873,36},
                      [{atom,{1873,36},b_blk},
                       {var,{1873,36},'_'},
                       {var,{1873,36},'_'},
                       {var,{1873,36},'_'}]}],
                    [],
                    [{call,
                      {1873,36},
                      {remote,
                       {1873,36},
                       {atom,{1873,36},erlang},
                       {atom,{1873,36},setelement}},
                      [{integer,{1873,36},3},
                       {var,{1873,26},rec98},
                       {var,{1873,39},'Is'}]}]},
                   {clause,
                    [{generated,true},{location,{1873,36}}],
                    [{var,[{generated,true},{location,{1873,36}}],'_'}],
                    [],
                    [{call,
                      [{generated,true},{location,{1873,36}}],
                      {remote,
                       [{generated,true},{location,{1873,36}}],
                       {atom,[{generated,true},{location,{1873,36}}],erlang},
                       {atom,[{generated,true},{location,{1873,36}}],error}},
                      [{tuple,
                        [{generated,true},{location,{1873,36}}],
                        [{atom,
                          [{generated,true},{location,{1873,36}}],
                          badrecord},
                         {var,{1873,26},rec98}]}]}]}]}]}]},
             {call,
              {1873,46},
              {atom,{1873,46},do_reduce_try},
              [{var,{1873,60},'Bs'},{var,{1873,64},'Ws1'}]}}]}]}]}]}]},
  {clause,
   {1876,1},
   [{nil,{1876,15}},{var,{1876,19},'Ws'}],
   [],
   [{debug_line,1877,860},
    {match,
     {1877,5},
     {atom,{1877,5},true},
     {call,
      {1877,12},
      {remote,{1877,16},{atom,{1877,12},sets},{atom,{1877,17},is_empty}},
      [{var,{1877,26},'Ws'}]}},
    {debug_line,1878,861},
    {nil,{1878,5}}]}]}.
{function,
 {1880,1},
 reduce_try_is,2,
 [{clause,
   {1880,1},
   [{var,{1880,1},'_'},{var,{1880,1},'_'}],
   [[{call,
      {1880,1},
      {remote,{1880,1},{atom,{1880,1},fake},{atom,{1880,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1880,862},{atom,{1880,1},ignore}]},
  {clause,
   {1880,1},
   [{cons,
     {1880,15},
     {tuple,
      {1880,16},
      [{atom,{1880,16},b_set},
       {var,{1880,16},'_'},
       {var,{1880,16},'_'},
       {atom,{1880,26},kill_try_tag},
       {var,{1880,16},'_'}]},
     {var,{1880,40},'Is'}},
    {var,{1880,45},'Acc'}],
   [],
   [{debug_line,1884,863},
    {tuple,
     {1884,5},
     [{atom,{1884,6},done},
      {call,
       {1884,11},
       {remote,{1884,11},{atom,{1884,11},lists},{atom,{1884,11},reverse}},
       [{var,{1884,19},'Acc'},{var,{1884,24},'Is'}]}]}]},
  {clause,
   {1885,1},
   [{cons,
     {1885,15},
     {tuple,
      {1885,16},
      [{atom,{1885,16},b_set},
       {var,{1885,16},'_'},
       {var,{1885,16},'_'},
       {atom,{1885,26},extract},
       {var,{1885,16},'_'}]},
     {var,{1885,35},'_'}},
    {var,{1885,39},'_Acc'}],
   [],
   [{debug_line,1887,864},{atom,{1887,5},unsafe}]},
  {clause,
   {1888,1},
   [{cons,
     {1888,15},
     {tuple,
      {1888,16},
      [{atom,{1888,16},b_set},
       {var,{1888,16},'_'},
       {var,{1888,16},'_'},
       {atom,{1888,26},landingpad},
       {var,{1888,16},'_'}]},
     {var,{1888,38},'Is'}},
    {var,{1888,43},'Acc'}],
   [],
   [{debug_line,1889,865},
    {call,
     {1889,5},
     {atom,{1889,5},reduce_try_is},
     [{var,{1889,19},'Is'},{var,{1889,23},'Acc'}]}]},
  {clause,
   {1890,1},
   [{cons,
     {1890,15},
     {match,
      {1890,16},
      {tuple,
       {1890,16},
       [{atom,{1890,16},b_set},
        {var,{1890,16},'_'},
        {var,{1890,16},'_'},
        {tuple,{1890,26},[{atom,{1890,27},succeeded},{atom,{1890,37},body}]},
        {var,{1890,16},'_'}]},
      {var,{1890,44},'I0'}},
     {var,{1890,47},'Is'}},
    {var,{1890,52},'Acc'}],
   [],
   [{debug_line,1894,866},
    {match,
     {1894,5},
     {var,{1894,5},'I'},
     {block,
      {1894,9},
      [{match,{1894,9},{var,{1894,9},rec99},{var,{1894,9},'I0'}},
       {'case',
        {1894,18},
        {var,{1894,9},rec99},
        [{clause,
          {1894,18},
          [{tuple,
            {1894,18},
            [{atom,{1894,18},b_set},
             {var,{1894,18},'_'},
             {var,{1894,18},'_'},
             {var,{1894,18},'_'},
             {var,{1894,18},'_'}]}],
          [],
          [{call,
            {1894,18},
            {remote,
             {1894,18},
             {atom,{1894,18},erlang},
             {atom,{1894,18},setelement}},
            [{integer,{1894,18},4},
             {var,{1894,9},rec99},
             {tuple,
              {1894,21},
              [{atom,{1894,22},succeeded},{atom,{1894,32},guard}]}]}]},
         {clause,
          [{generated,true},{location,{1894,18}}],
          [{var,[{generated,true},{location,{1894,18}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1894,18}}],
            {remote,
             [{generated,true},{location,{1894,18}}],
             {atom,[{generated,true},{location,{1894,18}}],erlang},
             {atom,[{generated,true},{location,{1894,18}}],error}},
            [{tuple,
              [{generated,true},{location,{1894,18}}],
              [{atom,[{generated,true},{location,{1894,18}}],badrecord},
               {var,{1894,9},rec99}]}]}]}]}]}},
    {debug_line,1895,867},
    {call,
     {1895,5},
     {atom,{1895,5},reduce_try_is},
     [{var,{1895,19},'Is'},
      {block,0,
       [{cons,{1895,23},{var,{1895,24},'I'},{var,{1895,26},'Acc'}}]}]}]},
  {clause,
   {1896,1},
   [{cons,
     {1896,15},
     {match,
      {1896,16},
      {tuple,
       {1896,16},
       [{atom,{1896,16},b_set},
        {var,{1896,16},'_'},
        {var,{1896,16},'_'},
        {atom,{1896,26},call},
        {cons,
         {1896,36},
         {match,
          {1896,37},
          {tuple,
           {1896,37},
           [{atom,{1896,37},b_remote},
            {tuple,{1896,51},[{atom,{1896,51},b_literal},{var,{1896,66},'M'}]},
            {tuple,{1897,52},[{atom,{1897,52},b_literal},{var,{1897,67},'F'}]},
            {var,{1898,53},'A'}]},
          {var,{1898,56},'R0'}},
         {var,{1898,59},'Args0'}}]},
      {var,{1898,67},'I0'}},
     {var,{1898,70},'Is'}},
    {var,{1899,15},'Acc'}],
   [],
   [{debug_line,1901,868},
    {match,
     {1901,5},
     {tuple,{1901,5},[{var,{1901,6},'I1'},{var,{1901,10},'Args1'}]},
     {'if',
      {1901,19},
      [{clause,
        {1901,22},
        [],
        [[{op,
           {1901,64},
           'orelse',
           {op,
            {1901,32},
            '=:=',
            {tuple,
             {1901,22},
             [{var,{1901,23},'M'},{var,{1901,26},'F'},{var,{1901,29},'A'}]},
            {tuple,
             {1901,36},
             [{atom,{1901,37},erlang},
              {atom,{1901,45},binary_to_atom},
              {integer,{1901,61},1}]}},
           {op,
            {1902,32},
            '=:=',
            {tuple,
             {1902,22},
             [{var,{1902,23},'M'},{var,{1902,26},'F'},{var,{1902,29},'A'}]},
            {tuple,
             {1902,36},
             [{atom,{1902,37},erlang},
              {atom,{1902,45},binary_to_existing_atom},
              {integer,{1902,70},1}]}}}]],
        [{debug_line,1903,869},
         {match,
          {1903,27},
          {var,{1903,27},'Args'},
          {op,
           {1903,39},
           '++',
           {var,{1903,34},'Args0'},
           {cons,
            {1903,41},
            {tuple,
             {1903,42},
             [{atom,{1903,42},b_literal},{atom,{1903,57},utf8}]},
            {nil,{1903,62}}}}},
         {debug_line,1904,870},
         {tuple,
          {1904,27},
          [{block,
            {1904,28},
            [{match,
              {1904,37},
              {var,{1904,37},rec100},
              {cons,
               {1904,42},
               {block,
                {1904,43},
                [{match,{1904,43},{var,{1904,43},rec102},{var,{1904,43},'R0'}},
                 {'case',
                  {1904,55},
                  {var,{1904,43},rec102},
                  [{clause,
                    {1904,55},
                    [{tuple,
                      {1904,55},
                      [{atom,{1904,55},b_remote},
                       {var,{1904,55},'_'},
                       {var,{1904,55},'_'},
                       {var,{1904,55},'_'}]}],
                    [],
                    [{call,
                      {1904,55},
                      {remote,
                       {1904,55},
                       {atom,{1904,55},erlang},
                       {atom,{1904,55},setelement}},
                      [{integer,{1904,55},4},
                       {var,{1904,43},rec102},
                       {integer,{1904,61},2}]}]},
                   {clause,
                    [{generated,true},{location,{1904,55}}],
                    [{var,[{generated,true},{location,{1904,55}}],'_'}],
                    [],
                    [{call,
                      [{generated,true},{location,{1904,55}}],
                      {remote,
                       [{generated,true},{location,{1904,55}}],
                       {atom,[{generated,true},{location,{1904,55}}],erlang},
                       {atom,[{generated,true},{location,{1904,55}}],error}},
                      [{tuple,
                        [{generated,true},{location,{1904,55}}],
                        [{atom,
                          [{generated,true},{location,{1904,55}}],
                          badrecord},
                         {var,{1904,43},rec102}]}]}]}]}]},
               {var,{1904,64},'Args'}}},
             {match,{1904,28},{var,{1904,28},rec101},{var,{1904,28},'I0'}},
             {'case',
              {1904,37},
              {var,{1904,28},rec101},
              [{clause,
                {1904,37},
                [{tuple,
                  {1904,37},
                  [{atom,{1904,37},b_set},
                   {var,{1904,37},'_'},
                   {var,{1904,37},'_'},
                   {var,{1904,37},'_'},
                   {var,{1904,37},'_'}]}],
                [],
                [{call,
                  {1904,37},
                  {remote,
                   {1904,37},
                   {atom,{1904,37},erlang},
                   {atom,{1904,37},setelement}},
                  [{integer,{1904,37},5},
                   {var,{1904,28},rec101},
                   {var,{1904,37},rec100}]}]},
               {clause,
                [{generated,true},{location,{1904,37}}],
                [{var,[{generated,true},{location,{1904,37}}],'_'}],
                [],
                [{call,
                  [{generated,true},{location,{1904,37}}],
                  {remote,
                   [{generated,true},{location,{1904,37}}],
                   {atom,[{generated,true},{location,{1904,37}}],erlang},
                   {atom,[{generated,true},{location,{1904,37}}],error}},
                  [{tuple,
                    [{generated,true},{location,{1904,37}}],
                    [{atom,[{generated,true},{location,{1904,37}}],badrecord},
                     {var,{1904,28},rec101}]}]}]}]}]},
           {var,{1904,71},'Args'}]}]},
       {clause,
        {1905,22},
        [],
        [[{atom,{1905,22},true}]],
        [{debug_line,1905,871},
         {tuple,{1905,30},[{var,{1905,31},'I0'},{var,{1905,35},'Args0'}]}]}]}},
    {debug_line,1908,872},
    {'case',
     {1908,5},
     {call,
      {1908,10},
      {remote,
       {1908,18},
       {atom,{1908,10},beam_ssa},
       {atom,{1908,19},can_be_guard_bif}},
      [{var,{1908,36},'M'},{var,{1908,39},'F'},{var,{1908,42},'A'}]},
     [{clause,
       {1909,9},
       [{atom,{1909,9},true}],
       [],
       [{debug_line,1910,873},
        {match,
         {1910,13},
         {var,{1910,13},'I'},
         {block,
          {1910,17},
          [{match,
            {1910,26},
            {var,{1910,26},rec103},
            {tuple,{1910,29},[{atom,{1910,30},bif},{var,{1910,34},'F'}]}},
           {match,{1910,17},{var,{1910,17},rec104},{var,{1910,17},'I1'}},
           {'case',
            {1910,26},
            {var,{1910,17},rec104},
            [{clause,
              {1910,26},
              [{tuple,
                {1910,26},
                [{atom,{1910,26},b_set},
                 {var,{1910,26},'_'},
                 {var,{1910,26},'_'},
                 {var,{1910,26},'_'},
                 {var,{1910,26},'_'}]}],
              [],
              [{call,
                {1910,26},
                {remote,
                 {1910,26},
                 {atom,{1910,26},erlang},
                 {atom,{1910,26},setelement}},
                [{integer,{1910,26},4},
                 {call,
                  {1910,37},
                  {remote,
                   {1910,37},
                   {atom,{1910,37},erlang},
                   {atom,{1910,37},setelement}},
                  [{integer,{1910,37},5},
                   {var,{1910,17},rec104},
                   {var,{1910,42},'Args1'}]},
                 {var,{1910,26},rec103}]}]},
             {clause,
              [{generated,true},{location,{1910,26}}],
              [{var,[{generated,true},{location,{1910,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1910,26}}],
                {remote,
                 [{generated,true},{location,{1910,26}}],
                 {atom,[{generated,true},{location,{1910,26}}],erlang},
                 {atom,[{generated,true},{location,{1910,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{1910,26}}],
                  [{atom,[{generated,true},{location,{1910,26}}],badrecord},
                   {var,{1910,17},rec104}]}]}]}]}]}},
        {debug_line,1911,874},
        {call,
         {1911,13},
         {atom,{1911,13},reduce_try_is},
         [{var,{1911,27},'Is'},
          {block,0,
           [{cons,{1911,31},{var,{1911,32},'I'},{var,{1911,34},'Acc'}}]}]}]},
      {clause,
       {1912,9},
       [{atom,{1912,9},false}],
       [],
       [{debug_line,1912,875},{atom,{1912,18},unsafe}]}]}]},
  {clause,
   {1914,1},
   [{cons,
     {1914,15},
     {match,
      {1914,16},
      {tuple,
       {1914,16},
       [{atom,{1914,16},b_set},
        {var,{1914,16},'_'},
        {var,{1914,16},'_'},
        {var,{1914,26},'Op'},
        {var,{1914,16},'_'}]},
      {var,{1914,30},'I'}},
     {var,{1914,32},'Is'}},
    {var,{1914,37},'Acc'}],
   [],
   [{debug_line,1915,876},
    {match,
     {1915,5},
     {var,{1915,5},'IsSafe'},
     {'case',
      {1915,14},
      {var,{1915,19},'Op'},
      [{clause,
        {1916,18},
        [{atom,{1916,18},phi}],
        [],
        [{debug_line,1916,877},{atom,{1916,25},true}]},
       {clause,
        {1917,18},
        [{var,{1917,18},'_'}],
        [],
        [{debug_line,1917,878},
         {call,
          {1917,23},
          {remote,
           {1917,31},
           {atom,{1917,23},beam_ssa},
           {atom,{1917,32},no_side_effect}},
          [{var,{1917,47},'I'}]}]}]}},
    {debug_line,1919,879},
    {'case',
     {1919,5},
     {var,{1919,10},'IsSafe'},
     [{clause,
       {1920,9},
       [{atom,{1920,9},true}],
       [],
       [{debug_line,1920,880},
        {call,
         {1920,17},
         {atom,{1920,17},reduce_try_is},
         [{var,{1920,31},'Is'},
          {block,0,
           [{cons,{1920,35},{var,{1920,36},'I'},{var,{1920,38},'Acc'}}]}]}]},
      {clause,
       {1921,9},
       [{atom,{1921,9},false}],
       [],
       [{debug_line,1921,881},{atom,{1921,18},unsafe}]}]}]},
  {clause,
   {1923,1},
   [{nil,{1923,15}},{var,{1923,19},'Acc'}],
   [],
   [{debug_line,1924,882},
    {tuple,
     {1924,5},
     [{atom,{1924,6},safe},
      {call,
       {1924,11},
       {remote,{1924,11},{atom,{1924,11},lists},{atom,{1924,11},reverse}},
       [{var,{1924,19},'Acc'}]}]}]}]}.
{function,
 {1932,1},
 trim_try,4,
 [{clause,
   {1932,1},
   [{var,{1932,1},'_'},
    {var,{1932,1},'_'},
    {var,{1932,1},'_'},
    {var,{1932,1},'_'}],
   [[{call,
      {1932,1},
      {remote,{1932,1},{atom,{1932,1},fake},{atom,{1932,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1932,883},{atom,{1932,1},ignore}]},
  {clause,
   {1932,1},
   [{cons,
     {1932,10},
     {tuple,
      {1932,11},
      [{var,{1932,12},'L'},
       {match,
        {1932,15},
        {tuple,
         {1932,15},
         [{atom,{1932,15},b_blk},
          {var,{1932,15},'_'},
          {cons,
           {1932,25},
           {tuple,
            {1932,26},
            [{atom,{1932,26},b_set},
             {var,{1932,26},'_'},
             {var,{1932,26},'_'},
             {atom,{1932,36},landingpad},
             {var,{1932,26},'_'}]},
           {var,{1932,50},'_'}},
          {var,{1932,15},'_'}]},
        {var,{1932,54},'Blk'}}]},
     {var,{1932,60},'Bs'}},
    {var,{1933,10},'Unreachable0'},
    {var,{1933,24},'Killed'},
    {var,{1933,32},'Acc'}],
   [],
   [{debug_line,1934,884},
    {match,
     {1934,5},
     {var,{1934,5},'Unreachable1'},
     {call,
      {1934,20},
      {remote,{1934,24},{atom,{1934,20},sets},{atom,{1934,25},add_element}},
      [{var,{1934,37},'L'},{var,{1934,40},'Unreachable0'}]}},
    {debug_line,1935,885},
    {match,
     {1935,5},
     {var,{1935,5},'Successors'},
     {call,
      {1935,18},
      {remote,{1935,22},{atom,{1935,18},sets},{atom,{1935,23},from_list}},
      [{block,0,
        [{call,
          {1935,33},
          {remote,
           {1935,41},
           {atom,{1935,33},beam_ssa},
           {atom,{1935,42},successors}},
          [{var,{1935,53},'Blk'}]}]}]}},
    {debug_line,1936,886},
    {match,
     {1936,5},
     {var,{1936,5},'Unreachable'},
     {call,
      {1936,19},
      {remote,{1936,23},{atom,{1936,19},sets},{atom,{1936,24},subtract}},
      [{var,{1936,33},'Unreachable1'},{var,{1936,47},'Successors'}]}},
    {debug_line,1937,887},
    {call,
     {1937,5},
     {atom,{1937,5},trim_try},
     [{var,{1937,14},'Bs'},
      {var,{1937,18},'Unreachable'},
      {var,{1937,31},'Killed'},
      {block,0,
       [{cons,
         {1937,39},
         {tuple,{1937,40},[{var,{1937,41},'L'},{var,{1937,44},'Blk'}]},
         {var,{1937,51},'Acc'}}]}]}]},
  {clause,
   {1938,1},
   [{cons,
     {1938,10},
     {tuple,
      {1938,11},
      [{var,{1938,12},'L'},
       {match,
        {1938,15},
        {tuple,
         {1938,15},
         [{atom,{1938,15},b_blk},
          {var,{1938,15},'_'},
          {var,{1938,15},'_'},
          {tuple,
           {1938,27},
           [{atom,{1938,27},b_ret},{var,{1938,27},'_'},{var,{1938,27},'_'}]}]},
        {var,{1938,37},'Blk'}}]},
     {var,{1938,44},'Bs'}},
    {var,{1938,49},'Unreachable'},
    {var,{1938,62},'Killed'},
    {var,{1938,70},'Acc'}],
   [],
   [{debug_line,1940,888},
    {call,
     {1940,5},
     {atom,{1940,5},trim_try},
     [{var,{1940,14},'Bs'},
      {var,{1940,18},'Unreachable'},
      {var,{1940,31},'Killed'},
      {block,0,
       [{cons,
         {1940,39},
         {tuple,{1940,40},[{var,{1940,41},'L'},{var,{1940,43},'Blk'}]},
         {var,{1940,48},'Acc'}}]}]}]},
  {clause,
   {1941,1},
   [{cons,
     {1941,10},
     {tuple,{1941,11},[{var,{1941,12},'L'},{var,{1941,15},'Blk0'}]},
     {var,{1941,23},'Bs'}},
    {var,{1941,28},'Unreachable0'},
    {var,{1941,42},'Killed0'},
    {var,{1941,51},'Acc'}],
   [],
   [{debug_line,1942,889},
    {'case',
     {1942,5},
     {call,
      {1942,10},
      {remote,{1942,14},{atom,{1942,10},sets},{atom,{1942,15},is_empty}},
      [{var,{1942,24},'Unreachable0'}]},
     [{clause,
       {1943,9},
       [{atom,{1943,9},true}],
       [],
       [{debug_line,1945,890},
        {call,
         {1945,13},
         {atom,{1945,13},trim_try},
         [{var,{1945,22},'Bs'},
          {var,{1945,26},'Unreachable0'},
          {var,{1945,40},'Killed0'},
          {block,0,
           [{cons,
             {1945,49},
             {tuple,{1945,50},[{var,{1945,51},'L'},{var,{1945,53},'Blk0'}]},
             {var,{1945,59},'Acc'}}]}]}]},
      {clause,
       {1946,9},
       [{atom,{1946,9},false}],
       [],
       [{debug_line,1947,891},
        {match,
         {1947,13},
         {tuple,
          {1947,13},
          [{atom,{1947,13},b_blk},
           {var,{1947,13},'_'},
           {var,{1947,23},'Is0'},
           {var,{1947,32},'Last0'}]},
         {var,{1947,41},'Blk0'}},
        {debug_line,1948,892},
        {'case',
         {1948,13},
         {call,
          {1948,18},
          {remote,{1948,18},{atom,{1948,18},lists},{atom,{1948,18},reverse}},
          [{var,{1948,26},'Is0'}]},
         [{clause,
           {1949,17},
           [{cons,
             {1949,17},
             {tuple,
              {1949,18},
              [{atom,{1949,18},b_set},
               {var,{1949,18},'_'},
               {var,{1949,44},'Tag'},
               {atom,{1949,28},new_try_tag},
               {var,{1949,18},'_'}]},
             {var,{1949,49},'Is'}}],
           [],
           [{debug_line,1950,893},
            {match,
             {1950,21},
             {tuple,
              {1950,21},
              [{atom,{1950,21},b_br},
               {var,{1950,21},'_'},
               {var,{1950,21},'_'},
               {var,{1950,32},'SuccLbl'},
               {var,{1950,45},'PadLbl'}]},
             {var,{1950,55},'Last0'}},
            {debug_line,1951,894},
            {match,
             {1951,21},
             {var,{1951,21},'Unreachable'},
             {call,
              {1951,35},
              {remote,
               {1951,39},
               {atom,{1951,35},sets},
               {atom,{1951,40},del_element}},
              [{var,{1951,52},'PadLbl'},{var,{1951,60},'Unreachable0'}]}},
            {debug_line,1952,895},
            {'case',
             {1952,21},
             {call,
              {1952,26},
              {remote,
               {1952,30},
               {atom,{1952,26},sets},
               {atom,{1952,31},is_element}},
              [{var,{1952,42},'PadLbl'},{var,{1952,50},'Unreachable0'}]},
             [{clause,
               {1953,25},
               [{atom,{1953,25},true}],
               [],
               [{debug_line,1956,896},
                {match,
                 {1956,29},
                 {var,{1956,29},'Blk'},
                 {block,
                  {1956,35},
                  [{match,
                    {1956,46},
                    {var,{1956,46},rec105},
                    {call,
                     {1956,49},
                     {remote,
                      {1956,49},
                      {atom,{1956,49},lists},
                      {atom,{1956,49},reverse}},
                     [{var,{1956,57},'Is'}]}},
                   {match,
                    {1957,46},
                    {var,{1957,46},rec106},
                    {tuple,
                     {1957,51},
                     [{atom,{1957,51},b_br},
                      {map,{1957,51},[]},
                      {tuple,
                       {1957,62},
                       [{atom,{1957,62},b_literal},{atom,{1957,77},true}]},
                      {var,{1958,62},'SuccLbl'},
                      {var,{1958,75},'SuccLbl'}]}},
                   {match,
                    {1956,35},
                    {var,{1956,35},rec107},
                    {var,{1956,35},'Blk0'}},
                   {'case',
                    {1956,46},
                    {var,{1956,35},rec107},
                    [{clause,
                      {1956,46},
                      [{tuple,
                        {1956,46},
                        [{atom,{1956,46},b_blk},
                         {var,{1956,46},'_'},
                         {var,{1956,46},'_'},
                         {var,{1956,46},'_'}]}],
                      [],
                      [{call,
                        {1956,46},
                        {remote,
                         {1956,46},
                         {atom,{1956,46},erlang},
                         {atom,{1956,46},setelement}},
                        [{integer,{1956,46},3},
                         {call,
                          {1957,46},
                          {remote,
                           {1957,46},
                           {atom,{1957,46},erlang},
                           {atom,{1957,46},setelement}},
                          [{integer,{1957,46},4},
                           {var,{1956,35},rec107},
                           {var,{1957,46},rec106}]},
                         {var,{1956,46},rec105}]}]},
                     {clause,
                      [{generated,true},{location,{1956,46}}],
                      [{var,[{generated,true},{location,{1956,46}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{1956,46}}],
                        {remote,
                         [{generated,true},{location,{1956,46}}],
                         {atom,[{generated,true},{location,{1956,46}}],erlang},
                         {atom,[{generated,true},{location,{1956,46}}],error}},
                        [{tuple,
                          [{generated,true},{location,{1956,46}}],
                          [{atom,
                            [{generated,true},{location,{1956,46}}],
                            badrecord},
                           {var,{1956,35},rec107}]}]}]}]}]}},
                {debug_line,1959,897},
                {match,
                 {1959,29},
                 {var,{1959,29},'Killed'},
                 {call,
                  {1959,38},
                  {remote,
                   {1959,42},
                   {atom,{1959,38},sets},
                   {atom,{1959,43},add_element}},
                  [{var,{1959,55},'Tag'},{var,{1959,60},'Killed0'}]}},
                {debug_line,1960,898},
                {call,
                 {1960,29},
                 {atom,{1960,29},trim_try},
                 [{var,{1960,38},'Bs'},
                  {var,{1960,42},'Unreachable'},
                  {var,{1960,55},'Killed'},
                  {block,0,
                   [{cons,
                     {1960,63},
                     {tuple,
                      {1960,64},
                      [{var,{1960,65},'L'},{var,{1960,67},'Blk'}]},
                     {var,{1960,72},'Acc'}}]}]}]},
              {clause,
               {1961,25},
               [{atom,{1961,25},false}],
               [],
               [{debug_line,1962,899},
                {call,
                 {1962,29},
                 {atom,{1962,29},trim_try},
                 [{var,{1962,38},'Bs'},
                  {var,{1962,42},'Unreachable'},
                  {var,{1962,55},'Killed0'},
                  {block,0,
                   [{cons,
                     {1962,64},
                     {tuple,
                      {1962,65},
                      [{var,{1962,66},'L'},{var,{1962,68},'Blk0'}]},
                     {var,{1962,74},'Acc'}}]}]}]}]}]},
          {clause,
           {1964,17},
           [{var,{1964,17},'_'}],
           [],
           [{debug_line,1966,900},
            {match,
             {1966,21},
             {var,{1966,21},'Successors'},
             {call,
              {1966,34},
              {remote,
               {1966,38},
               {atom,{1966,34},sets},
               {atom,{1966,39},from_list}},
              [{block,0,
                [{call,
                  {1966,49},
                  {remote,
                   {1966,57},
                   {atom,{1966,49},beam_ssa},
                   {atom,{1966,58},successors}},
                  [{var,{1966,69},'Blk0'}]}]}]}},
            {debug_line,1967,901},
            {match,
             {1967,21},
             {var,{1967,21},'Unreachable'},
             {call,
              {1967,35},
              {remote,
               {1967,39},
               {atom,{1967,35},sets},
               {atom,{1967,40},subtract}},
              [{var,{1967,49},'Unreachable0'},{var,{1967,63},'Successors'}]}},
            {debug_line,1968,902},
            {call,
             {1968,21},
             {atom,{1968,21},trim_try},
             [{var,{1968,30},'Bs'},
              {var,{1968,34},'Unreachable'},
              {var,{1968,47},'Killed0'},
              {block,0,
               [{cons,
                 {1968,56},
                 {tuple,
                  {1968,57},
                  [{var,{1968,58},'L'},{var,{1968,60},'Blk0'}]},
                 {var,{1968,66},'Acc'}}]}]}]}]}]}]}]},
  {clause,
   {1971,1},
   [{nil,{1971,10}},
    {var,{1971,14},'_Unreachable'},
    {var,{1971,28},'Killed'},
    {var,{1971,36},'Acc0'}],
   [],
   [{debug_line,1972,903},
    {'case',
     {1972,5},
     {call,
      {1972,10},
      {remote,{1972,14},{atom,{1972,10},sets},{atom,{1972,15},is_empty}},
      [{var,{1972,24},'Killed'}]},
     [{clause,
       {1973,9},
       [{atom,{1973,9},true}],
       [],
       [{debug_line,1974,904},{var,{1974,13},'Acc0'}]},
      {clause,
       {1975,9},
       [{atom,{1975,9},false}],
       [],
       [{debug_line,1978,905},
        {lc,
         {1978,13},
         {block,0,
          [{tuple,
            {1978,14},
            [{var,{1978,15},'L'},
             {block,
              {1978,18},
              [{match,
                {1978,28},
                {var,{1978,28},rec108},
                {call,
                 {1978,31},
                 {atom,{1978,31},trim_try_is},
                 [{var,{1978,43},'Is0'},{var,{1978,48},'Killed'}]}},
               {match,{1978,18},{var,{1978,18},rec109},{var,{1978,18},'Blk'}},
               {'case',
                {1978,28},
                {var,{1978,18},rec109},
                [{clause,
                  {1978,28},
                  [{tuple,
                    {1978,28},
                    [{atom,{1978,28},b_blk},
                     {var,{1978,28},'_'},
                     {var,{1978,28},'_'},
                     {var,{1978,28},'_'}]}],
                  [],
                  [{call,
                    {1978,28},
                    {remote,
                     {1978,28},
                     {atom,{1978,28},erlang},
                     {atom,{1978,28},setelement}},
                    [{integer,{1978,28},3},
                     {var,{1978,18},rec109},
                     {var,{1978,28},rec108}]}]},
                 {clause,
                  [{generated,true},{location,{1978,28}}],
                  [{var,[{generated,true},{location,{1978,28}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{1978,28}}],
                    {remote,
                     [{generated,true},{location,{1978,28}}],
                     {atom,[{generated,true},{location,{1978,28}}],erlang},
                     {atom,[{generated,true},{location,{1978,28}}],error}},
                    [{tuple,
                      [{generated,true},{location,{1978,28}}],
                      [{atom,
                        [{generated,true},{location,{1978,28}}],
                        badrecord},
                       {var,{1978,18},rec109}]}]}]}]}]}]}]},
         [{block,0,[{debug_line,1979,906},{atom,{1979,45},true}]},
          {generate_strict,
           {1979,41},
           {tuple,
            {1979,17},
            [{var,{1979,18},'L'},
             {match,
              {1979,21},
              {tuple,
               {1979,21},
               [{atom,{1979,21},b_blk},
                {var,{1979,21},'_'},
                {var,{1979,31},'Is0'},
                {var,{1979,21},'_'}]},
              {var,{1979,36},'Blk'}}]},
           {var,{1979,45},'Acc0'}}]}]}]}]}]}.
{function,
 {1982,1},
 trim_try_is,2,
 [{clause,
   {1982,1},
   [{var,{1982,1},'_'},{var,{1982,1},'_'}],
   [[{call,
      {1982,1},
      {remote,{1982,1},{atom,{1982,1},fake},{atom,{1982,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1982,907},{atom,{1982,1},ignore}]},
  {clause,
   {1982,1},
   [{cons,
     {1982,13},
     {match,
      {1982,14},
      {tuple,
       {1982,14},
       [{atom,{1982,14},b_set},
        {var,{1982,14},'_'},
        {var,{1982,32},'CatchEndVal'},
        {atom,{1982,24},phi},
        {var,{1982,14},'_'}]},
      {var,{1982,45},'Phi'}},
     {cons,
      {1983,14},
      {match,
       {1983,14},
       {tuple,
        {1983,14},
        [{atom,{1983,14},b_set},
         {var,{1983,14},'_'},
         {var,{1983,38},'Dst'},
         {atom,{1983,24},catch_end},
         {cons,
          {1983,47},
          {var,{1983,48},'Tag'},
          {cons,{1983,52},{var,{1983,52},'CatchEndVal'},{nil,{1983,63}}}}]},
       {var,{1983,66},'Catch'}},
      {var,{1983,74},'Is'}}},
    {var,{1984,13},'Killed'}],
   [],
   [{debug_line,1985,908},
    {'case',
     {1985,5},
     {call,
      {1985,10},
      {remote,{1985,14},{atom,{1985,10},sets},{atom,{1985,15},is_element}},
      [{var,{1985,26},'Tag'},{var,{1985,31},'Killed'}]},
     [{clause,
       {1986,9},
       [{atom,{1986,9},true}],
       [],
       [{debug_line,1986,909},
        {cons,
         {1986,17},
         {block,
          {1986,18},
          [{match,{1986,18},{var,{1986,18},rec110},{var,{1986,18},'Phi'}},
           {'case',
            {1986,28},
            {var,{1986,18},rec110},
            [{clause,
              {1986,28},
              [{tuple,
                {1986,28},
                [{atom,{1986,28},b_set},
                 {var,{1986,28},'_'},
                 {var,{1986,28},'_'},
                 {var,{1986,28},'_'},
                 {var,{1986,28},'_'}]}],
              [],
              [{call,
                {1986,28},
                {remote,
                 {1986,28},
                 {atom,{1986,28},erlang},
                 {atom,{1986,28},setelement}},
                [{integer,{1986,28},3},
                 {var,{1986,18},rec110},
                 {var,{1986,32},'Dst'}]}]},
             {clause,
              [{generated,true},{location,{1986,28}}],
              [{var,[{generated,true},{location,{1986,28}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1986,28}}],
                {remote,
                 [{generated,true},{location,{1986,28}}],
                 {atom,[{generated,true},{location,{1986,28}}],erlang},
                 {atom,[{generated,true},{location,{1986,28}}],error}},
                [{tuple,
                  [{generated,true},{location,{1986,28}}],
                  [{atom,[{generated,true},{location,{1986,28}}],badrecord},
                   {var,{1986,18},rec110}]}]}]}]}]},
         {call,
          {1986,39},
          {atom,{1986,39},trim_try_is},
          [{var,{1986,51},'Is'},{var,{1986,55},'Killed'}]}}]},
      {clause,
       {1987,9},
       [{atom,{1987,9},false}],
       [],
       [{debug_line,1987,910},
        {cons,
         {1987,18},
         {var,{1987,19},'Phi'},
         {cons,
          {1987,24},
          {var,{1987,24},'Catch'},
          {call,
           {1987,32},
           {atom,{1987,32},trim_try_is},
           [{var,{1987,44},'Is'},{var,{1987,48},'Killed'}]}}}]}]}]},
  {clause,
   {1989,1},
   [{cons,
     {1989,13},
     {match,
      {1989,14},
      {tuple,
       {1989,14},
       [{atom,{1989,14},b_set},
        {var,{1989,14},'_'},
        {var,{1989,14},'_'},
        {atom,{1989,24},kill_try_tag},
        {cons,{1989,42},{var,{1989,43},'Tag'},{nil,{1989,46}}}]},
      {var,{1989,49},'I'}},
     {var,{1989,53},'Is'}},
    {var,{1989,58},'Killed'}],
   [],
   [{debug_line,1990,911},
    {'case',
     {1990,5},
     {call,
      {1990,10},
      {remote,{1990,14},{atom,{1990,10},sets},{atom,{1990,15},is_element}},
      [{var,{1990,26},'Tag'},{var,{1990,31},'Killed'}]},
     [{clause,
       {1991,9},
       [{atom,{1991,9},true}],
       [],
       [{debug_line,1991,912},
        {call,
         {1991,17},
         {atom,{1991,17},trim_try_is},
         [{var,{1991,29},'Is'},{var,{1991,33},'Killed'}]}]},
      {clause,
       {1992,9},
       [{atom,{1992,9},false}],
       [],
       [{debug_line,1992,913},
        {cons,
         {1992,18},
         {var,{1992,19},'I'},
         {call,
          {1992,23},
          {atom,{1992,23},trim_try_is},
          [{var,{1992,35},'Is'},{var,{1992,39},'Killed'}]}}]}]}]},
  {clause,
   {1994,1},
   [{cons,{1994,13},{var,{1994,14},'I'},{var,{1994,18},'Is'}},
    {var,{1994,23},'Killed'}],
   [],
   [{debug_line,1995,914},
    {cons,
     {1995,5},
     {var,{1995,6},'I'},
     {call,
      {1995,10},
      {atom,{1995,10},trim_try_is},
      [{var,{1995,22},'Is'},{var,{1995,26},'Killed'}]}}]},
  {clause,
   {1996,1},
   [{nil,{1996,13}},{var,{1996,17},'_Killed'}],
   [],
   [{debug_line,1997,915},{nil,{1997,5}}]}]}.
{function,
 {2009,1},
 ssa_opt_bsm,1,
 [{clause,
   {2009,1},
   [{var,{2009,1},'_'}],
   [[{call,
      {2009,1},
      {remote,{2009,1},{atom,{2009,1},fake},{atom,{2009,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2009,916},{atom,{2009,1},ignore}]},
  {clause,
   {2009,1},
   [{tuple,
     {2009,13},
     [{match,
       {2009,14},
       {tuple,
        {2009,14},
        [{atom,{2009,14},opt_st},
         {var,{2009,26},'Linear0'},
         {var,{2009,14},'_'},
         {var,{2009,14},'_'},
         {var,{2009,14},'_'}]},
       {var,{2009,35},'St'}},
      {var,{2009,39},'FuncDb'}]}],
   [],
   [{debug_line,2010,917},
    {match,
     {2010,5},
     {var,{2010,5},'Extracted0'},
     {call,
      {2010,18},
      {atom,{2010,18},bsm_extracted},
      [{var,{2010,32},'Linear0'}]}},
    {debug_line,2011,918},
    {match,
     {2011,5},
     {var,{2011,5},'Extracted'},
     {call,
      {2011,17},
      {remote,{2011,21},{atom,{2011,17},sets},{atom,{2011,22},from_list}},
      [{var,{2011,32},'Extracted0'}]}},
    {debug_line,2012,919},
    {match,
     {2012,5},
     {var,{2012,5},'Linear1'},
     {call,
      {2012,15},
      {atom,{2012,15},bsm_skip},
      [{var,{2012,24},'Linear0'},{var,{2012,33},'Extracted'}]}},
    {debug_line,2013,920},
    {match,
     {2013,5},
     {var,{2013,5},'Linear'},
     {call,
      {2013,14},
      {atom,{2013,14},bsm_coalesce_skips},
      [{var,{2013,33},'Linear1'},{block,0,[{map,{2013,42},[]}]}]}},
    {debug_line,2014,921},
    {tuple,
     {2014,5},
     [{block,
       {2014,6},
       [{match,{2014,6},{var,{2014,6},rec111},{var,{2014,6},'St'}},
        {'case',
         {2014,16},
         {var,{2014,6},rec111},
         [{clause,
           {2014,16},
           [{tuple,
             {2014,16},
             [{atom,{2014,16},opt_st},
              {var,{2014,16},'_'},
              {var,{2014,16},'_'},
              {var,{2014,16},'_'},
              {var,{2014,16},'_'}]}],
           [],
           [{call,
             {2014,16},
             {remote,
              {2014,16},
              {atom,{2014,16},erlang},
              {atom,{2014,16},setelement}},
             [{integer,{2014,16},2},
              {var,{2014,6},rec111},
              {var,{2014,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{2014,16}}],
           [{var,[{generated,true},{location,{2014,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2014,16}}],
             {remote,
              [{generated,true},{location,{2014,16}}],
              {atom,[{generated,true},{location,{2014,16}}],erlang},
              {atom,[{generated,true},{location,{2014,16}}],error}},
             [{tuple,
               [{generated,true},{location,{2014,16}}],
               [{atom,[{generated,true},{location,{2014,16}}],badrecord},
                {var,{2014,6},rec111}]}]}]}]}]},
      {var,{2014,29},'FuncDb'}]}]}]}.
{function,
 {2016,1},
 bsm_skip,2,
 [{clause,
   {2016,1},
   [{var,{2016,1},'_'},{var,{2016,1},'_'}],
   [[{call,
      {2016,1},
      {remote,{2016,1},{atom,{2016,1},fake},{atom,{2016,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2016,922},{atom,{2016,1},ignore}]},
  {clause,
   {2016,1},
   [{cons,
     {2016,10},
     {tuple,
      {2016,11},
      [{var,{2016,12},'L'},
       {match,
        {2016,14},
        {tuple,
         {2016,14},
         [{atom,{2016,14},b_blk},
          {var,{2016,14},'_'},
          {var,{2016,24},'Is0'},
          {var,{2016,14},'_'}]},
        {var,{2016,29},'Blk'}}]},
     {var,{2016,34},'Bs0'}},
    {var,{2016,40},'Extracted'}],
   [],
   [{debug_line,2017,923},
    {match,
     {2017,5},
     {var,{2017,5},'Bs'},
     {call,
      {2017,10},
      {atom,{2017,10},bsm_skip},
      [{var,{2017,19},'Bs0'},{var,{2017,24},'Extracted'}]}},
    {debug_line,2018,924},
    {match,
     {2018,5},
     {var,{2018,5},'Is'},
     {call,
      {2018,10},
      {atom,{2018,10},bsm_skip_is},
      [{var,{2018,22},'Is0'},{var,{2018,27},'Extracted'}]}},
    {debug_line,2019,925},
    {cons,
     {2019,5},
     {tuple,
      {2019,6},
      [{var,{2019,7},'L'},
       {block,
        {2019,9},
        [{match,{2019,9},{var,{2019,9},rec112},{var,{2019,9},'Blk'}},
         {'case',
          {2019,19},
          {var,{2019,9},rec112},
          [{clause,
            {2019,19},
            [{tuple,
              {2019,19},
              [{atom,{2019,19},b_blk},
               {var,{2019,19},'_'},
               {var,{2019,19},'_'},
               {var,{2019,19},'_'}]}],
            [],
            [{call,
              {2019,19},
              {remote,
               {2019,19},
               {atom,{2019,19},erlang},
               {atom,{2019,19},setelement}},
              [{integer,{2019,19},3},
               {var,{2019,9},rec112},
               {var,{2019,22},'Is'}]}]},
           {clause,
            [{generated,true},{location,{2019,19}}],
            [{var,[{generated,true},{location,{2019,19}}],'_'}],
            [],
            [{call,
              [{generated,true},{location,{2019,19}}],
              {remote,
               [{generated,true},{location,{2019,19}}],
               {atom,[{generated,true},{location,{2019,19}}],erlang},
               {atom,[{generated,true},{location,{2019,19}}],error}},
              [{tuple,
                [{generated,true},{location,{2019,19}}],
                [{atom,[{generated,true},{location,{2019,19}}],badrecord},
                 {var,{2019,9},rec112}]}]}]}]}]}]},
     {var,{2019,27},'Bs'}}]},
  {clause,
   {2020,1},
   [{nil,{2020,10}},{var,{2020,14},'_'}],
   [],
   [{debug_line,2020,926},{nil,{2020,20}}]}]}.
{function,
 {2022,1},
 bsm_skip_is,2,
 [{clause,
   {2022,1},
   [{var,{2022,1},'_'},{var,{2022,1},'_'}],
   [[{call,
      {2022,1},
      {remote,{2022,1},{atom,{2022,1},fake},{atom,{2022,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2022,927},{atom,{2022,1},ignore}]},
  {clause,
   {2022,1},
   [{cons,{2022,13},{var,{2022,14},'I0'},{var,{2022,17},'Is'}},
    {var,{2022,22},'Extracted'}],
   [],
   [{debug_line,2023,928},
    {'case',
     {2023,5},
     {var,{2023,10},'I0'},
     [{clause,
       {2024,9},
       [{tuple,
         {2024,9},
         [{atom,{2024,9},b_set},
          {var,{2024,21},'Anno0'},
          {var,{2026,20},'Ctx'},
          {atom,{2025,19},bs_match},
          {cons,
           {2027,21},
           {match,
            {2027,22},
            {tuple,{2027,22},[{atom,{2027,22},b_literal},{var,{2027,37},'T'}]},
            {var,{2027,40},'Type'}},
           {cons,
            {2027,45},
            {var,{2027,45},'PrevCtx'},
            {var,{2027,53},'Args0'}}}]}],
       [[{op,{2028,18},'=/=',{var,{2028,16},'T'},{atom,{2028,22},float}},
         {op,{2028,31},'=/=',{var,{2028,29},'T'},{atom,{2028,35},string}},
         {op,{2028,45},'=/=',{var,{2028,43},'T'},{atom,{2028,49},skip}}]],
       [{debug_line,2031,929},
        {match,
         {2031,13},
         {var,{2031,13},'I'},
         {'case',
          {2031,17},
          {call,
           {2031,22},
           {remote,
            {2031,26},
            {atom,{2031,22},sets},
            {atom,{2031,27},is_element}},
           [{var,{2031,38},'Ctx'},{var,{2031,43},'Extracted'}]},
          [{clause,
            {2032,21},
            [{atom,{2032,21},true}],
            [],
            [{debug_line,2033,930},{var,{2033,25},'I0'}]},
           {clause,
            {2034,21},
            [{atom,{2034,21},false}],
            [],
            [{debug_line,2036,931},
             {match,
              {2036,25},
              {var,{2036,25},'Args'},
              {cons,
               {2036,32},
               {tuple,
                {2036,33},
                [{atom,{2036,33},b_literal},{atom,{2036,48},skip}]},
               {cons,
                {2036,54},
                {var,{2036,54},'PrevCtx'},
                {cons,
                 {2036,62},
                 {var,{2036,62},'Type'},
                 {var,{2036,67},'Args0'}}}}},
             {debug_line,2037,932},
             {match,
              {2037,25},
              {var,{2037,25},'Anno'},
              {call,
               {2037,32},
               {remote,
                {2037,36},
                {atom,{2037,32},maps},
                {atom,{2037,37},remove}},
               [{atom,{2037,44},arg_types},{var,{2037,55},'Anno0'}]}},
             {debug_line,2038,933},
             {block,
              {2038,25},
              [{match,{2038,25},{var,{2038,25},rec113},{var,{2038,25},'I0'}},
               {'case',
                {2038,34},
                {var,{2038,25},rec113},
                [{clause,
                  {2038,34},
                  [{tuple,
                    {2038,34},
                    [{atom,{2038,34},b_set},
                     {var,{2038,34},'_'},
                     {var,{2038,34},'_'},
                     {var,{2038,34},'_'},
                     {var,{2038,34},'_'}]}],
                  [],
                  [{call,
                    {2038,34},
                    {remote,
                     {2038,34},
                     {atom,{2038,34},erlang},
                     {atom,{2038,34},setelement}},
                    [{integer,{2038,34},2},
                     {call,
                      {2038,44},
                      {remote,
                       {2038,44},
                       {atom,{2038,44},erlang},
                       {atom,{2038,44},setelement}},
                      [{integer,{2038,44},5},
                       {var,{2038,25},rec113},
                       {var,{2038,49},'Args'}]},
                     {var,{2038,39},'Anno'}]}]},
                 {clause,
                  [{generated,true},{location,{2038,34}}],
                  [{var,[{generated,true},{location,{2038,34}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2038,34}}],
                    {remote,
                     [{generated,true},{location,{2038,34}}],
                     {atom,[{generated,true},{location,{2038,34}}],erlang},
                     {atom,[{generated,true},{location,{2038,34}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2038,34}}],
                      [{atom,
                        [{generated,true},{location,{2038,34}}],
                        badrecord},
                       {var,{2038,25},rec113}]}]}]}]}]}]}]}},
        {debug_line,2040,934},
        {cons,{2040,13},{var,{2040,14},'I'},{var,{2040,16},'Is'}}]},
      {clause,
       {2041,9},
       [{tuple,
         {2041,9},
         [{atom,{2041,9},b_set},
          {var,{2041,9},'_'},
          {var,{2041,9},'_'},
          {var,{2041,9},'_'},
          {var,{2041,9},'_'}]}],
       [],
       [{debug_line,2042,935},
        {cons,
         {2042,13},
         {var,{2042,14},'I0'},
         {call,
          {2042,17},
          {atom,{2042,17},bsm_skip_is},
          [{var,{2042,29},'Is'},{var,{2042,33},'Extracted'}]}}]}]}]},
  {clause,
   {2044,1},
   [{nil,{2044,13}},{var,{2044,17},'_'}],
   [],
   [{debug_line,2044,936},{nil,{2044,23}}]}]}.
{function,
    {2046,1},
    bsm_extracted,1,
    [{clause,
         {2046,1},
         [{var,{2046,1},'_'}],
         [[{call,
               {2046,1},
               {remote,
                   {2046,1},
                   {atom,{2046,1},fake},
                   {atom,{2046,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2046,937},{atom,{2046,1},ignore}]},
     {clause,
         {2046,1},
         [{cons,
              {2046,15},
              {tuple,
                  {2046,16},
                  [{var,{2046,17},'_'},
                   {tuple,
                       {2046,19},
                       [{atom,{2046,19},b_blk},
                        {var,{2046,19},'_'},
                        {var,{2046,29},'Is'},
                        {var,{2046,19},'_'}]}]},
              {var,{2046,34},'Bs'}}],
         [],
         [{debug_line,2047,938},
          {'case',
              {2047,5},
              {var,{2047,10},'Is'},
              [{clause,
                   {2048,9},
                   [{cons,
                        {2048,9},
                        {tuple,
                            {2048,10},
                            [{atom,{2048,10},b_set},
                             {var,{2048,10},'_'},
                             {var,{2048,10},'_'},
                             {atom,{2048,20},bs_extract},
                             {cons,
                                 {2048,36},
                                 {var,{2048,37},'Ctx'},
                                 {nil,{2048,40}}}]},
                        {var,{2048,43},'_'}}],
                   [],
                   [{debug_line,2049,939},
                    {cons,
                        {2049,13},
                        {var,{2049,14},'Ctx'},
                        {call,
                            {2049,18},
                            {atom,{2049,18},bsm_extracted},
                            [{var,{2049,32},'Bs'}]}}]},
               {clause,
                   {2050,9},
                   [{var,{2050,9},'_'}],
                   [],
                   [{debug_line,2051,940},
                    {call,
                        {2051,13},
                        {atom,{2051,13},bsm_extracted},
                        [{var,{2051,27},'Bs'}]}]}]}]},
     {clause,
         {2053,1},
         [{nil,{2053,15}}],
         [],
         [{debug_line,2053,941},{nil,{2053,22}}]}]}.
{function,
    {2055,1},
    bsm_coalesce_skips,2,
    [{clause,
         {2055,1},
         [{var,{2055,1},'_'},{var,{2055,1},'_'}],
         [[{call,
               {2055,1},
               {remote,
                   {2055,1},
                   {atom,{2055,1},fake},
                   {atom,{2055,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2055,942},{atom,{2055,1},ignore}]},
     {clause,
         {2055,1},
         [{cons,
              {2055,20},
              {tuple,{2055,21},[{var,{2055,22},'L'},{var,{2055,24},'Blk0'}]},
              {var,{2055,30},'Bs0'}},
          {var,{2055,36},'Renames0'}],
         [],
         [{debug_line,2056,943},
          {'case',
              {2056,5},
              {call,
                  {2056,10},
                  {atom,{2056,10},coalesce_skips},
                  [{block,0,
                       [{tuple,
                            {2056,25},
                            [{var,{2056,26},'L'},{var,{2056,28},'Blk0'}]}]},
                   {var,{2056,35},'Bs0'},
                   {var,{2056,40},'Renames0'}]},
              [{clause,
                   {2057,9},
                   [{atom,{2057,9},not_possible}],
                   [],
                   [{debug_line,2058,944},
                    {cons,
                        {2058,13},
                        {tuple,
                            {2058,14},
                            [{var,{2058,15},'L'},{var,{2058,17},'Blk0'}]},
                        {call,
                            {2058,23},
                            {atom,{2058,23},bsm_coalesce_skips},
                            [{var,{2058,42},'Bs0'},
                             {var,{2058,47},'Renames0'}]}}]},
               {clause,
                   {2059,9},
                   [{tuple,
                        {2059,9},
                        [{var,{2059,10},'Bs'},{var,{2059,13},'Renames'}]}],
                   [],
                   [{debug_line,2060,945},
                    {call,
                        {2060,13},
                        {atom,{2060,13},bsm_coalesce_skips},
                        [{var,{2060,32},'Bs'},
                         {var,{2060,36},'Renames'}]}]}]}]},
     {clause,
         {2062,1},
         [{nil,{2062,20}},{var,{2062,24},'_Renames'}],
         [],
         [{debug_line,2062,946},{nil,{2062,37}}]}]}.
{function,
 {2064,1},
 coalesce_skips,3,
 [{clause,
   {2064,1},
   [{var,{2064,1},'_'},{var,{2064,1},'_'},{var,{2064,1},'_'}],
   [[{call,
      {2064,1},
      {remote,{2064,1},{atom,{2064,1},fake},{atom,{2064,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2064,947},{atom,{2064,1},ignore}]},
  {clause,
   {2064,1},
   [{tuple,
     {2064,16},
     [{var,{2064,17},'L'},
      {match,
       {2064,19},
       {tuple,
        {2064,19},
        [{atom,{2064,19},b_blk},
         {var,{2064,19},'_'},
         {cons,
          {2064,29},
          {match,
           {2064,30},
           {tuple,
            {2064,30},
            [{atom,{2064,30},b_set},
             {var,{2064,30},'_'},
             {var,{2064,30},'_'},
             {atom,{2064,40},bs_extract},
             {var,{2064,30},'_'}]},
           {var,{2064,52},'Extract'}},
          {var,{2064,60},'Is0'}},
         {var,{2065,31},'Last0'}]},
       {var,{2065,38},'Blk0'}}]},
    {var,{2065,45},'Bs0'},
    {var,{2065,50},'Renames0'}],
   [],
   [{debug_line,2066,948},
    {'case',
     {2066,5},
     {call,
      {2066,10},
      {atom,{2066,10},coalesce_skips_is},
      [{var,{2066,28},'Is0'},
       {var,{2066,33},'Last0'},
       {var,{2066,40},'Bs0'},
       {var,{2066,45},'Renames0'}]},
     [{clause,
       {2067,9},
       [{atom,{2067,9},not_possible}],
       [],
       [{debug_line,2068,949},{atom,{2068,13},not_possible}]},
      {clause,
       {2069,9},
       [{tuple,
         {2069,9},
         [{var,{2069,10},'Is'},
          {var,{2069,13},'Last'},
          {var,{2069,18},'Bs'},
          {var,{2069,21},'Renames'}]}],
       [],
       [{debug_line,2070,950},
        {match,
         {2070,13},
         {var,{2070,13},'Blk'},
         {block,
          {2070,19},
          [{match,
            {2070,30},
            {var,{2070,30},rec114},
            {cons,{2070,33},{var,{2070,34},'Extract'},{var,{2070,42},'Is'}}},
           {match,{2070,19},{var,{2070,19},rec115},{var,{2070,19},'Blk0'}},
           {'case',
            {2070,30},
            {var,{2070,19},rec115},
            [{clause,
              {2070,30},
              [{tuple,
                {2070,30},
                [{atom,{2070,30},b_blk},
                 {var,{2070,30},'_'},
                 {var,{2070,30},'_'},
                 {var,{2070,30},'_'}]}],
              [],
              [{call,
                {2070,30},
                {remote,
                 {2070,30},
                 {atom,{2070,30},erlang},
                 {atom,{2070,30},setelement}},
                [{integer,{2070,30},3},
                 {call,
                  {2070,46},
                  {remote,
                   {2070,46},
                   {atom,{2070,46},erlang},
                   {atom,{2070,46},setelement}},
                  [{integer,{2070,46},4},
                   {var,{2070,19},rec115},
                   {var,{2070,51},'Last'}]},
                 {var,{2070,30},rec114}]}]},
             {clause,
              [{generated,true},{location,{2070,30}}],
              [{var,[{generated,true},{location,{2070,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2070,30}}],
                {remote,
                 [{generated,true},{location,{2070,30}}],
                 {atom,[{generated,true},{location,{2070,30}}],erlang},
                 {atom,[{generated,true},{location,{2070,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{2070,30}}],
                  [{atom,[{generated,true},{location,{2070,30}}],badrecord},
                   {var,{2070,19},rec115}]}]}]}]}]}},
        {debug_line,2071,951},
        {tuple,
         {2071,13},
         [{cons,
           {2071,14},
           {tuple,{2071,15},[{var,{2071,16},'L'},{var,{2071,18},'Blk'}]},
           {var,{2071,23},'Bs'}},
          {var,{2071,27},'Renames'}]}]}]}]},
  {clause,
   {2073,1},
   [{tuple,
     {2073,16},
     [{var,{2073,17},'L'},
      {match,
       {2073,19},
       {tuple,
        {2073,19},
        [{atom,{2073,19},b_blk},
         {var,{2073,19},'_'},
         {var,{2073,29},'Is0'},
         {var,{2073,38},'Last0'}]},
       {var,{2073,45},'Blk0'}}]},
    {var,{2073,52},'Bs0'},
    {var,{2073,57},'Renames0'}],
   [],
   [{debug_line,2074,952},
    {'case',
     {2074,5},
     {call,
      {2074,10},
      {atom,{2074,10},coalesce_skips_is},
      [{var,{2074,28},'Is0'},
       {var,{2074,33},'Last0'},
       {var,{2074,40},'Bs0'},
       {var,{2074,45},'Renames0'}]},
     [{clause,
       {2075,9},
       [{atom,{2075,9},not_possible}],
       [],
       [{debug_line,2076,953},{atom,{2076,13},not_possible}]},
      {clause,
       {2077,9},
       [{tuple,
         {2077,9},
         [{var,{2077,10},'Is'},
          {var,{2077,13},'Last'},
          {var,{2077,18},'Bs'},
          {var,{2077,21},'Renames'}]}],
       [],
       [{debug_line,2078,954},
        {match,
         {2078,13},
         {var,{2078,13},'Blk'},
         {block,
          {2078,19},
          [{match,{2078,19},{var,{2078,19},rec116},{var,{2078,19},'Blk0'}},
           {'case',
            {2078,30},
            {var,{2078,19},rec116},
            [{clause,
              {2078,30},
              [{tuple,
                {2078,30},
                [{atom,{2078,30},b_blk},
                 {var,{2078,30},'_'},
                 {var,{2078,30},'_'},
                 {var,{2078,30},'_'}]}],
              [],
              [{call,
                {2078,30},
                {remote,
                 {2078,30},
                 {atom,{2078,30},erlang},
                 {atom,{2078,30},setelement}},
                [{integer,{2078,30},3},
                 {call,
                  {2078,36},
                  {remote,
                   {2078,36},
                   {atom,{2078,36},erlang},
                   {atom,{2078,36},setelement}},
                  [{integer,{2078,36},4},
                   {var,{2078,19},rec116},
                   {var,{2078,41},'Last'}]},
                 {var,{2078,33},'Is'}]}]},
             {clause,
              [{generated,true},{location,{2078,30}}],
              [{var,[{generated,true},{location,{2078,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2078,30}}],
                {remote,
                 [{generated,true},{location,{2078,30}}],
                 {atom,[{generated,true},{location,{2078,30}}],erlang},
                 {atom,[{generated,true},{location,{2078,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{2078,30}}],
                  [{atom,[{generated,true},{location,{2078,30}}],badrecord},
                   {var,{2078,19},rec116}]}]}]}]}]}},
        {debug_line,2079,955},
        {tuple,
         {2079,13},
         [{cons,
           {2079,14},
           {tuple,{2079,15},[{var,{2079,16},'L'},{var,{2079,18},'Blk'}]},
           {var,{2079,23},'Bs'}},
          {var,{2079,27},'Renames'}]}]}]}]}]}.
{function,
 {2082,1},
 coalesce_skips_is,4,
 [{clause,
   {2082,1},
   [{var,{2082,1},'_'},
    {var,{2082,1},'_'},
    {var,{2082,1},'_'},
    {var,{2082,1},'_'}],
   [[{call,
      {2082,1},
      {remote,{2082,1},{atom,{2082,1},fake},{atom,{2082,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2082,956},{atom,{2082,1},ignore}]},
  {clause,
   {2082,1},
   [{cons,
     {2082,19},
     {match,
      {2082,20},
      {tuple,
       {2082,20},
       [{atom,{2082,20},b_set},
        {var,{2082,20},'_'},
        {var,{2087,31},'PrevCtx'},
        {atom,{2082,30},bs_match},
        {cons,
         {2083,32},
         {tuple,{2083,33},[{atom,{2083,33},b_literal},{atom,{2083,48},skip}]},
         {cons,
          {2084,33},
          {var,{2084,33},'Ctx0'},
          {cons,
           {2084,38},
           {var,{2084,38},'Type'},
           {cons,
            {2084,43},
            {var,{2084,43},'Flags'},
            {cons,
             {2085,33},
             {tuple,
              {2085,33},
              [{atom,{2085,33},b_literal},{var,{2085,48},'Size0'}]},
             {cons,
              {2086,33},
              {tuple,
               {2086,33},
               [{atom,{2086,33},b_literal},{var,{2086,48},'Unit0'}]},
              {nil,{2086,54}}}}}}}}]},
      {var,{2087,40},'Skip0'}},
     {cons,
      {2088,20},
      {tuple,
       {2088,20},
       [{atom,{2088,20},b_set},
        {var,{2088,20},'_'},
        {var,{2088,20},'_'},
        {tuple,{2088,30},[{atom,{2088,31},succeeded},{atom,{2088,41},guard}]},
        {var,{2088,20},'_'}]},
      {nil,{2088,48}}}},
    {match,
     {2089,19},
     {tuple,
      {2089,19},
      [{atom,{2089,19},b_br},
       {var,{2089,19},'_'},
       {var,{2089,19},'_'},
       {var,{2089,30},'L2'},
       {var,{2089,38},'Fail'}]},
     {var,{2089,44},'Br0'}},
    {var,{2090,19},'Bs0'},
    {var,{2091,19},'Renames0'}],
   [[{call,
      {2091,34},
      {remote,{2091,34},{atom,{2091,34},erlang},{atom,{2091,34},is_integer}},
      [{var,{2091,45},'Size0'}]}]],
   [{debug_line,2092,957},
    {'case',
     {2092,5},
     {var,{2092,10},'Bs0'},
     [{clause,
       {2093,9},
       [{cons,
         {2093,9},
         {tuple,
          {2093,10},
          [{var,{2093,11},'L2'},
           {tuple,
            {2093,14},
            [{atom,{2093,14},b_blk},
             {var,{2093,14},'_'},
             {cons,
              {2093,24},
              {tuple,
               {2093,25},
               [{atom,{2093,25},b_set},
                {var,{2093,25},'_'},
                {var,{2094,36},'SkipDst'},
                {atom,{2093,35},bs_match},
                {cons,
                 {2095,37},
                 {tuple,
                  {2095,38},
                  [{atom,{2095,38},b_literal},{atom,{2095,53},skip}]},
                 {cons,
                  {2095,59},
                  {var,{2095,59},'PrevCtx'},
                  {cons,
                   {2095,67},
                   {var,{2095,67},'_'},
                   {cons,
                    {2095,69},
                    {var,{2095,69},'_'},
                    {cons,
                     {2096,38},
                     {tuple,
                      {2096,38},
                      [{atom,{2096,38},b_literal},{var,{2096,53},'Size1'}]},
                     {cons,
                      {2097,38},
                      {tuple,
                       {2097,38},
                       [{atom,{2097,38},b_literal},{var,{2097,53},'Unit1'}]},
                      {nil,{2097,59}}}}}}}}]},
              {cons,
               {2098,25},
               {match,
                {2098,25},
                {tuple,
                 {2098,25},
                 [{atom,{2098,25},b_set},
                  {var,{2098,25},'_'},
                  {var,{2098,25},'_'},
                  {tuple,
                   {2098,35},
                   [{atom,{2098,36},succeeded},{atom,{2098,46},guard}]},
                  {var,{2098,25},'_'}]},
                {var,{2098,54},'Succeeded'}},
               {nil,{2098,63}}}},
             {match,
              {2099,26},
              {tuple,
               {2099,26},
               [{atom,{2099,26},b_br},
                {var,{2099,26},'_'},
                {var,{2099,26},'_'},
                {var,{2099,26},'_'},
                {var,{2099,37},'Fail'}]},
              {var,{2099,43},'Br'}}]}]},
         {var,{2099,48},'Bs'}}],
       [[{call,
          {2099,57},
          {remote,
           {2099,57},
           {atom,{2099,57},erlang},
           {atom,{2099,57},is_integer}},
          [{var,{2099,68},'Size1'}]}]],
       [{debug_line,2100,958},
        {match,
         {2100,13},
         {var,{2100,13},'OldCtx'},
         {call,
          {2100,22},
          {remote,{2100,26},{atom,{2100,22},maps},{atom,{2100,27},get}},
          [{var,{2100,31},'Ctx0'},
           {var,{2100,37},'Renames0'},
           {var,{2100,47},'Ctx0'}]}},
        {debug_line,2101,959},
        {match,
         {2101,13},
         {var,{2101,13},'SkipBits'},
         {op,
          {2101,38},
          '+',
          {op,{2101,30},'*',{var,{2101,24},'Size0'},{var,{2101,32},'Unit0'}},
          {op,{2101,46},'*',{var,{2101,40},'Size1'},{var,{2101,48},'Unit1'}}}},
        {debug_line,2102,960},
        {match,
         {2102,13},
         {var,{2102,13},'Skip'},
         {block,
          {2102,20},
          [{match,
            {2103,32},
            {var,{2103,32},rec117},
            {cons,
             {2103,37},
             {tuple,
              {2103,38},
              [{atom,{2103,38},b_literal},{atom,{2103,53},skip}]},
             {cons,
              {2103,59},
              {var,{2103,59},'OldCtx'},
              {cons,
               {2104,38},
               {var,{2104,38},'Type'},
               {cons,
                {2104,43},
                {var,{2104,43},'Flags'},
                {cons,
                 {2105,38},
                 {tuple,
                  {2105,38},
                  [{atom,{2105,38},b_literal},{var,{2105,53},'SkipBits'}]},
                 {cons,
                  {2106,38},
                  {tuple,
                   {2106,38},
                   [{atom,{2106,38},b_literal},{integer,{2106,53},1}]},
                  {nil,{2106,55}}}}}}}}},
           {match,{2102,20},{var,{2102,20},rec118},{var,{2102,20},'Skip0'}},
           {'case',
            {2102,32},
            {var,{2102,20},rec118},
            [{clause,
              {2102,32},
              [{tuple,
                {2102,32},
                [{atom,{2102,32},b_set},
                 {var,{2102,32},'_'},
                 {var,{2102,32},'_'},
                 {var,{2102,32},'_'},
                 {var,{2102,32},'_'}]}],
              [],
              [{call,
                {2102,32},
                {remote,
                 {2102,32},
                 {atom,{2102,32},erlang},
                 {atom,{2102,32},setelement}},
                [{integer,{2102,32},3},
                 {call,
                  {2103,32},
                  {remote,
                   {2103,32},
                   {atom,{2103,32},erlang},
                   {atom,{2103,32},setelement}},
                  [{integer,{2103,32},5},
                   {var,{2102,20},rec118},
                   {var,{2103,32},rec117}]},
                 {var,{2102,36},'SkipDst'}]}]},
             {clause,
              [{generated,true},{location,{2102,32}}],
              [{var,[{generated,true},{location,{2102,32}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2102,32}}],
                {remote,
                 [{generated,true},{location,{2102,32}}],
                 {atom,[{generated,true},{location,{2102,32}}],erlang},
                 {atom,[{generated,true},{location,{2102,32}}],error}},
                [{tuple,
                  [{generated,true},{location,{2102,32}}],
                  [{atom,[{generated,true},{location,{2102,32}}],badrecord},
                   {var,{2102,20},rec118}]}]}]}]}]}},
        {debug_line,2107,961},
        {match,
         {2107,13},
         {var,{2107,13},'Is'},
         {cons,
          {2107,18},
          {var,{2107,19},'Skip'},
          {cons,{2107,24},{var,{2107,24},'Succeeded'},{nil,{2107,33}}}}},
        {debug_line,2108,962},
        {match,
         {2108,13},
         {var,{2108,13},'Renames'},
         {map,
          {2108,31},
          {var,{2108,23},'Renames0'},
          [{map_field_assoc,
            {2108,41},
            {var,{2108,33},'PrevCtx'},
            {var,{2108,44},'Ctx0'}}]}},
        {debug_line,2109,963},
        {tuple,
         {2109,13},
         [{var,{2109,14},'Is'},
          {var,{2109,17},'Br'},
          {var,{2109,20},'Bs'},
          {var,{2109,23},'Renames'}]}]},
      {clause,
       {2110,9},
       [{cons,
         {2110,9},
         {tuple,
          {2110,10},
          [{var,{2110,11},'L2'},
           {tuple,
            {2110,14},
            [{atom,{2110,14},b_blk},
             {var,{2110,14},'_'},
             {cons,
              {2110,24},
              {tuple,
               {2110,25},
               [{atom,{2110,25},b_set},
                {var,{2110,25},'_'},
                {var,{2110,25},'_'},
                {atom,{2110,35},bs_test_tail},
                {cons,
                 {2111,37},
                 {var,{2111,38},'PrevCtx'},
                 {cons,
                  {2111,46},
                  {tuple,
                   {2111,46},
                   [{atom,{2111,46},b_literal},{var,{2111,61},'TailSkip'}]},
                  {nil,{2111,70}}}}]},
              {nil,{2111,72}}},
             {tuple,
              {2112,26},
              [{atom,{2112,26},b_br},
               {var,{2112,26},'_'},
               {var,{2112,26},'_'},
               {var,{2112,37},'NextSucc'},
               {var,{2112,51},'Fail'}]}]}]},
         {var,{2112,59},'Bs'}}],
       [],
       [{debug_line,2113,964},
        {match,
         {2113,13},
         {var,{2113,13},'OldCtx'},
         {call,
          {2113,22},
          {remote,{2113,26},{atom,{2113,22},maps},{atom,{2113,27},get}},
          [{var,{2113,31},'Ctx0'},
           {var,{2113,37},'Renames0'},
           {var,{2113,47},'Ctx0'}]}},
        {debug_line,2114,965},
        {match,
         {2114,13},
         {var,{2114,13},'SkipBits'},
         {op,{2114,30},'*',{var,{2114,24},'Size0'},{var,{2114,32},'Unit0'}}},
        {debug_line,2115,966},
        {match,
         {2115,13},
         {var,{2115,13},'TestTail'},
         {block,
          {2115,24},
          [{match,
            {2116,36},
            {var,{2116,36},rec119},
            {cons,
             {2116,41},
             {var,{2116,42},'OldCtx'},
             {cons,
              {2116,49},
              {tuple,
               {2116,49},
               [{atom,{2116,49},b_literal},
                {op,
                 {2116,72},
                 '+',
                 {var,{2116,64},'SkipBits'},
                 {var,{2116,73},'TailSkip'}}]},
              {nil,{2116,82}}}}},
           {match,{2115,24},{var,{2115,24},rec120},{var,{2115,24},'Skip0'}},
           {'case',
            {2115,36},
            {var,{2115,24},rec120},
            [{clause,
              {2115,36},
              [{tuple,
                {2115,36},
                [{atom,{2115,36},b_set},
                 {var,{2115,36},'_'},
                 {var,{2115,36},'_'},
                 {var,{2115,36},'_'},
                 {var,{2115,36},'_'}]}],
              [],
              [{call,
                {2115,36},
                {remote,
                 {2115,36},
                 {atom,{2115,36},erlang},
                 {atom,{2115,36},setelement}},
                [{integer,{2115,36},4},
                 {call,
                  {2116,36},
                  {remote,
                   {2116,36},
                   {atom,{2116,36},erlang},
                   {atom,{2116,36},setelement}},
                  [{integer,{2116,36},5},
                   {var,{2115,24},rec120},
                   {var,{2116,36},rec119}]},
                 {atom,{2115,39},bs_test_tail}]}]},
             {clause,
              [{generated,true},{location,{2115,36}}],
              [{var,[{generated,true},{location,{2115,36}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2115,36}}],
                {remote,
                 [{generated,true},{location,{2115,36}}],
                 {atom,[{generated,true},{location,{2115,36}}],erlang},
                 {atom,[{generated,true},{location,{2115,36}}],error}},
                [{tuple,
                  [{generated,true},{location,{2115,36}}],
                  [{atom,[{generated,true},{location,{2115,36}}],badrecord},
                   {var,{2115,24},rec120}]}]}]}]}]}},
        {debug_line,2117,967},
        {match,
         {2117,13},
         {var,{2117,13},'Br'},
         {block,
          {2117,18},
          [{match,
            {2117,27},
            {var,{2117,27},rec121},
            {'case',
             {2117,32},
             {var,{2117,32},'TestTail'},
             [{clause,
               [{generated,true},{location,{2117,32}}],
               [{tuple,
                 [{generated,true},{location,{2117,32}}],
                 [{atom,{2117,32},b_set},
                  {var,{2117,32},'_'},
                  {var,{2117,32},rec123},
                  {var,{2117,32},'_'},
                  {var,{2117,32},'_'}]}],
               [],
               [{var,{2117,32},rec123}]},
              {clause,
               [{generated,true},{location,{2117,32}}],
               [{var,{2117,32},rec123}],
               [],
               [{call,
                 [{generated,true},{location,{2117,32}}],
                 {remote,
                  [{generated,true},{location,{2117,32}}],
                  {atom,[{generated,true},{location,{2117,32}}],erlang},
                  {atom,[{generated,true},{location,{2117,32}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2117,32}}],
                   [{atom,[{generated,true},{location,{2117,32}}],badrecord},
                    {var,{2117,32},rec123}]}]}]}]}},
           {match,{2117,18},{var,{2117,18},rec122},{var,{2117,18},'Br0'}},
           {'case',
            {2117,27},
            {var,{2117,18},rec122},
            [{clause,
              {2117,27},
              [{tuple,
                {2117,27},
                [{atom,{2117,27},b_br},
                 {var,{2117,27},'_'},
                 {var,{2117,27},'_'},
                 {var,{2117,27},'_'},
                 {var,{2117,27},'_'}]}],
              [],
              [{call,
                {2117,27},
                {remote,
                 {2117,27},
                 {atom,{2117,27},erlang},
                 {atom,{2117,27},setelement}},
                [{integer,{2117,27},3},
                 {call,
                  {2117,51},
                  {remote,
                   {2117,51},
                   {atom,{2117,51},erlang},
                   {atom,{2117,51},setelement}},
                  [{integer,{2117,51},4},
                   {var,{2117,18},rec122},
                   {var,{2117,56},'NextSucc'}]},
                 {var,{2117,27},rec121}]}]},
             {clause,
              [{generated,true},{location,{2117,27}}],
              [{var,[{generated,true},{location,{2117,27}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2117,27}}],
                {remote,
                 [{generated,true},{location,{2117,27}}],
                 {atom,[{generated,true},{location,{2117,27}}],erlang},
                 {atom,[{generated,true},{location,{2117,27}}],error}},
                [{tuple,
                  [{generated,true},{location,{2117,27}}],
                  [{atom,[{generated,true},{location,{2117,27}}],badrecord},
                   {var,{2117,18},rec122}]}]}]}]}]}},
        {debug_line,2118,968},
        {match,
         {2118,13},
         {var,{2118,13},'Is'},
         {cons,{2118,18},{var,{2118,19},'TestTail'},{nil,{2118,27}}}},
        {debug_line,2119,969},
        {match,
         {2119,13},
         {var,{2119,13},'Renames'},
         {map,
          {2119,31},
          {var,{2119,23},'Renames0'},
          [{map_field_assoc,
            {2119,41},
            {var,{2119,33},'PrevCtx'},
            {var,{2119,44},'Ctx0'}}]}},
        {debug_line,2120,970},
        {tuple,
         {2120,13},
         [{var,{2120,14},'Is'},
          {var,{2120,17},'Br'},
          {var,{2120,20},'Bs'},
          {var,{2120,23},'Renames'}]}]},
      {clause,
       {2121,9},
       [{var,{2121,9},'_'}],
       [],
       [{debug_line,2122,971},{atom,{2122,13},not_possible}]}]}]},
  {clause,
   {2124,1},
   [{var,{2124,19},'_'},
    {var,{2124,22},'_'},
    {var,{2124,25},'_'},
    {var,{2124,28},'_'}],
   [],
   [{debug_line,2125,972},{atom,{2125,5},not_possible}]}]}.
{function,
 {2131,1},
 ssa_opt_bsm_shortcut,1,
 [{clause,
   {2131,1},
   [{var,{2131,1},'_'}],
   [[{call,
      {2131,1},
      {remote,{2131,1},{atom,{2131,1},fake},{atom,{2131,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2131,973},{atom,{2131,1},ignore}]},
  {clause,
   {2131,1},
   [{tuple,
     {2131,22},
     [{match,
       {2131,23},
       {tuple,
        {2131,23},
        [{atom,{2131,23},opt_st},
         {var,{2131,35},'Linear0'},
         {var,{2131,23},'_'},
         {var,{2131,23},'_'},
         {var,{2131,23},'_'}]},
       {var,{2131,44},'St'}},
      {var,{2131,48},'FuncDb'}]}],
   [],
   [{debug_line,2132,974},
    {match,
     {2132,5},
     {var,{2132,5},'Positions'},
     {call,
      {2132,17},
      {atom,{2132,17},bsm_positions},
      [{var,{2132,31},'Linear0'},{block,0,[{map,{2132,40},[]}]}]}},
    {debug_line,2133,975},
    {'case',
     {2133,5},
     {call,
      {2133,10},
      {remote,{2133,10},{atom,{2133,10},erlang},{atom,{2133,10},map_size}},
      [{var,{2133,19},'Positions'}]},
     [{clause,
       {2134,9},
       [{integer,{2134,9},0}],
       [],
       [{debug_line,2136,976},
        {tuple,{2136,13},[{var,{2136,14},'St'},{var,{2136,18},'FuncDb'}]}]},
      {clause,
       {2137,9},
       [{var,{2137,9},'_'}],
       [],
       [{debug_line,2138,977},
        {match,
         {2138,13},
         {var,{2138,13},'Linear1'},
         {call,
          {2138,23},
          {atom,{2138,23},bsm_shortcut},
          [{var,{2138,36},'Linear0'},{var,{2138,45},'Positions'}]}},
        {debug_line,2139,978},
        {match,
         {2139,13},
         {var,{2139,13},'Linear'},
         {call,
          {2139,22},
          {atom,{2139,22},bsm_tail},
          [{var,{2139,31},'Linear1'},{block,0,[{map,{2139,40},[]}]}]}},
        {debug_line,2140,979},
        {call,
         {2140,13},
         {atom,{2140,13},ssa_opt_live},
         [{block,0,
           [{tuple,
             {2140,26},
             [{block,
               {2140,27},
               [{match,{2140,27},{var,{2140,27},rec124},{var,{2140,27},'St'}},
                {'case',
                 {2140,37},
                 {var,{2140,27},rec124},
                 [{clause,
                   {2140,37},
                   [{tuple,
                     {2140,37},
                     [{atom,{2140,37},opt_st},
                      {var,{2140,37},'_'},
                      {var,{2140,37},'_'},
                      {var,{2140,37},'_'},
                      {var,{2140,37},'_'}]}],
                   [],
                   [{call,
                     {2140,37},
                     {remote,
                      {2140,37},
                      {atom,{2140,37},erlang},
                      {atom,{2140,37},setelement}},
                     [{integer,{2140,37},2},
                      {var,{2140,27},rec124},
                      {var,{2140,41},'Linear'}]}]},
                  {clause,
                   [{generated,true},{location,{2140,37}}],
                   [{var,[{generated,true},{location,{2140,37}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{2140,37}}],
                     {remote,
                      [{generated,true},{location,{2140,37}}],
                      {atom,[{generated,true},{location,{2140,37}}],erlang},
                      {atom,[{generated,true},{location,{2140,37}}],error}},
                     [{tuple,
                       [{generated,true},{location,{2140,37}}],
                       [{atom,
                         [{generated,true},{location,{2140,37}}],
                         badrecord},
                        {var,{2140,27},rec124}]}]}]}]}]},
              {var,{2140,50},'FuncDb'}]}]}]}]}]}]}]}.
{function,
 {2143,1},
 bsm_positions,2,
 [{clause,
   {2143,1},
   [{var,{2143,1},'_'},{var,{2143,1},'_'}],
   [[{call,
      {2143,1},
      {remote,{2143,1},{atom,{2143,1},fake},{atom,{2143,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2143,980},{atom,{2143,1},ignore}]},
  {clause,
   {2143,1},
   [{cons,
     {2143,15},
     {tuple,
      {2143,16},
      [{var,{2143,17},'L'},
       {tuple,
        {2143,19},
        [{atom,{2143,19},b_blk},
         {var,{2143,19},'_'},
         {var,{2143,29},'Is'},
         {var,{2143,37},'Last'}]}]},
     {var,{2143,44},'Bs'}},
    {var,{2143,49},'PosMap0'}],
   [],
   [{debug_line,2144,981},
    {match,
     {2144,5},
     {var,{2144,5},'PosMap'},
     {call,
      {2144,14},
      {atom,{2144,14},bsm_positions_is},
      [{var,{2144,31},'Is'},{var,{2144,35},'PosMap0'}]}},
    {debug_line,2145,982},
    {'case',
     {2145,5},
     {tuple,{2145,10},[{var,{2145,11},'Is'},{var,{2145,14},'Last'}]},
     [{clause,
       {2146,9},
       [{tuple,
         {2146,9},
         [{cons,
           {2146,10},
           {tuple,
            {2146,11},
            [{atom,{2146,11},b_set},
             {var,{2146,11},'_'},
             {var,{2146,38},'Bool'},
             {atom,{2146,21},bs_test_tail},
             {cons,
              {2146,48},
              {var,{2146,49},'Ctx'},
              {cons,
               {2146,53},
               {tuple,
                {2146,53},
                [{atom,{2146,53},b_literal},{var,{2146,68},'Bits0'}]},
               {nil,{2146,74}}}}]},
           {nil,{2146,76}}},
          {tuple,
           {2147,10},
           [{atom,{2147,10},b_br},
            {var,{2147,10},'_'},
            {var,{2147,21},'Bool'},
            {var,{2147,10},'_'},
            {var,{2147,31},'Fail'}]}]}],
       [],
       [{debug_line,2148,983},
        {match,
         {2148,13},
         {var,{2148,13},'Bits'},
         {op,
          {2148,26},
          '+',
          {var,{2148,20},'Bits0'},
          {call,
           {2148,28},
           {remote,{2148,28},{atom,{2148,28},erlang},{atom,{2148,28},map_get}},
           [{var,{2148,36},'Ctx'},{var,{2148,41},'PosMap0'}]}}},
        {debug_line,2149,984},
        {call,
         {2149,13},
         {atom,{2149,13},bsm_positions},
         [{var,{2149,27},'Bs'},
          {block,0,
           [{map,
             {2149,37},
             {var,{2149,31},'PosMap'},
             [{map_field_assoc,
               {2149,40},
               {var,{2149,39},'L'},
               {tuple,
                {2149,42},
                [{var,{2149,43},'Bits'},{var,{2149,48},'Fail'}]}}]}]}]}]},
      {clause,
       {2150,9},
       [{tuple,{2150,9},[{var,{2150,10},'_'},{var,{2150,12},'_'}]}],
       [],
       [{debug_line,2151,985},
        {call,
         {2151,13},
         {atom,{2151,13},bsm_positions},
         [{var,{2151,27},'Bs'},{var,{2151,31},'PosMap'}]}]}]}]},
  {clause,
   {2153,1},
   [{nil,{2153,15}},{var,{2153,19},'PosMap'}],
   [],
   [{debug_line,2153,986},{var,{2153,30},'PosMap'}]}]}.
{function,
    {2155,1},
    bsm_positions_is,2,
    [{clause,
         {2155,1},
         [{var,{2155,1},'_'},{var,{2155,1},'_'}],
         [[{call,
               {2155,1},
               {remote,
                   {2155,1},
                   {atom,{2155,1},fake},
                   {atom,{2155,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2155,987},{atom,{2155,1},ignore}]},
     {clause,
         {2155,1},
         [{cons,
              {2155,18},
              {tuple,
                  {2155,19},
                  [{atom,{2155,19},b_set},
                   {var,{2155,19},'_'},
                   {var,{2155,48},'New'},
                   {atom,{2155,29},bs_start_match},
                   {var,{2155,19},'_'}]},
              {var,{2155,53},'Is'}},
          {var,{2155,58},'PosMap0'}],
         [],
         [{debug_line,2156,988},
          {match,
              {2156,5},
              {var,{2156,5},'PosMap'},
              {map,
                  {2156,21},
                  {var,{2156,14},'PosMap0'},
                  [{map_field_assoc,
                       {2156,26},
                       {var,{2156,23},'New'},
                       {integer,{2156,28},0}}]}},
          {debug_line,2157,989},
          {call,
              {2157,5},
              {atom,{2157,5},bsm_positions_is},
              [{var,{2157,22},'Is'},{var,{2157,26},'PosMap'}]}]},
     {clause,
         {2158,1},
         [{cons,
              {2158,18},
              {tuple,
                  {2158,19},
                  [{atom,{2158,19},b_set},
                   {var,{2158,19},'_'},
                   {var,{2158,42},'New'},
                   {atom,{2158,29},bs_match},
                   {var,{2158,51},'Args'}]},
              {var,{2158,57},'Is'}},
          {var,{2158,62},'PosMap0'}],
         [],
         [{debug_line,2159,990},
          {match,
              {2159,5},
              {cons,
                  {2159,5},
                  {var,{2159,6},'_'},
                  {cons,{2159,8},{var,{2159,8},'Old'},{var,{2159,12},'_'}}},
              {var,{2159,17},'Args'}},
          {debug_line,2160,991},
          {match,
              {2160,5},
              {map,
                  {2160,5},
                  [{map_field_exact,
                       {2160,10},
                       {var,{2160,7},'Old'},
                       {var,{2160,12},'Bits0'}}]},
              {var,{2160,21},'PosMap0'}},
          {debug_line,2161,992},
          {match,
              {2161,5},
              {var,{2161,5},'Bits'},
              {call,
                  {2161,12},
                  {atom,{2161,12},bsm_update_bits},
                  [{var,{2161,28},'Args'},{var,{2161,34},'Bits0'}]}},
          {debug_line,2162,993},
          {match,
              {2162,5},
              {var,{2162,5},'PosMap'},
              {map,
                  {2162,21},
                  {var,{2162,14},'PosMap0'},
                  [{map_field_assoc,
                       {2162,26},
                       {var,{2162,23},'New'},
                       {var,{2162,28},'Bits'}}]}},
          {debug_line,2163,994},
          {call,
              {2163,5},
              {atom,{2163,5},bsm_positions_is},
              [{var,{2163,22},'Is'},{var,{2163,26},'PosMap'}]}]},
     {clause,
         {2164,1},
         [{cons,{2164,18},{var,{2164,19},'_'},{var,{2164,21},'Is'}},
          {var,{2164,26},'PosMap'}],
         [],
         [{debug_line,2165,995},
          {call,
              {2165,5},
              {atom,{2165,5},bsm_positions_is},
              [{var,{2165,22},'Is'},{var,{2165,26},'PosMap'}]}]},
     {clause,
         {2166,1},
         [{nil,{2166,18}},{var,{2166,22},'PosMap'}],
         [],
         [{debug_line,2166,996},{var,{2166,33},'PosMap'}]}]}.
{function,
    {2168,1},
    bsm_update_bits,2,
    [{clause,
         {2168,1},
         [{var,{2168,1},'_'},{var,{2168,1},'_'}],
         [[{call,
               {2168,1},
               {remote,
                   {2168,1},
                   {atom,{2168,1},fake},
                   {atom,{2168,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2168,997},{atom,{2168,1},ignore}]},
     {clause,
         {2168,1},
         [{cons,
              {2168,17},
              {tuple,
                  {2168,18},
                  [{atom,{2168,18},b_literal},{atom,{2168,33},string}]},
              {cons,
                  {2168,41},
                  {var,{2168,41},'_'},
                  {cons,
                      {2168,43},
                      {tuple,
                          {2168,43},
                          [{atom,{2168,43},b_literal},
                           {var,{2168,58},'String'}]},
                      {nil,{2168,65}}}}},
          {var,{2168,68},'Bits'}],
         [],
         [{debug_line,2169,998},
          {op,{2169,10},
              '+',
              {var,{2169,5},'Bits'},
              {call,
                  {2169,12},
                  {remote,
                      {2169,12},
                      {atom,{2169,12},erlang},
                      {atom,{2169,12},bit_size}},
                  [{var,{2169,21},'String'}]}}]},
     {clause,
         {2170,1},
         [{cons,
              {2170,17},
              {tuple,
                  {2170,18},
                  [{atom,{2170,18},b_literal},{atom,{2170,33},utf8}]},
              {var,{2170,39},'_'}},
          {var,{2170,43},'Bits'}],
         [],
         [{debug_line,2171,999},
          {op,{2171,10},'+',{var,{2171,5},'Bits'},{integer,{2171,12},8}}]},
     {clause,
         {2172,1},
         [{cons,
              {2172,17},
              {tuple,
                  {2172,18},
                  [{atom,{2172,18},b_literal},{atom,{2172,33},utf16}]},
              {var,{2172,40},'_'}},
          {var,{2172,44},'Bits'}],
         [],
         [{debug_line,2173,1000},
          {op,{2173,10},'+',{var,{2173,5},'Bits'},{integer,{2173,12},16}}]},
     {clause,
         {2174,1},
         [{cons,
              {2174,17},
              {tuple,
                  {2174,18},
                  [{atom,{2174,18},b_literal},{atom,{2174,33},utf32}]},
              {var,{2174,40},'_'}},
          {var,{2174,44},'Bits'}],
         [],
         [{debug_line,2175,1001},
          {op,{2175,10},'+',{var,{2175,5},'Bits'},{integer,{2175,12},32}}]},
     {clause,
         {2176,1},
         [{cons,
              {2176,17},
              {var,{2176,18},'_'},
              {cons,
                  {2176,20},
                  {var,{2176,20},'_'},
                  {cons,
                      {2176,22},
                      {var,{2176,22},'_'},
                      {cons,
                          {2176,24},
                          {tuple,
                              {2176,24},
                              [{atom,{2176,24},b_literal},
                               {var,{2176,39},'Sz'}]},
                          {cons,
                              {2176,43},
                              {tuple,
                                  {2176,43},
                                  [{atom,{2176,43},b_literal},
                                   {var,{2176,58},'U'}]},
                              {nil,{2176,60}}}}}}},
          {var,{2176,63},'Bits'}],
         [[{call,
               {2177,8},
               {remote,
                   {2177,8},
                   {atom,{2177,8},erlang},
                   {atom,{2177,8},is_integer}},
               [{var,{2177,19},'Sz'}]}]],
         [{debug_line,2178,1002},
          {op,{2178,10},
              '+',
              {var,{2178,5},'Bits'},
              {op,{2178,14},'*',{var,{2178,12},'Sz'},{var,{2178,15},'U'}}}]},
     {clause,
         {2179,1},
         [{var,{2179,17},'_'},{var,{2179,20},'Bits'}],
         [],
         [{debug_line,2179,1003},{var,{2179,29},'Bits'}]}]}.
{function,
 {2181,1},
 bsm_shortcut,2,
 [{clause,
   {2181,1},
   [{var,{2181,1},'_'},{var,{2181,1},'_'}],
   [[{call,
      {2181,1},
      {remote,{2181,1},{atom,{2181,1},fake},{atom,{2181,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2181,1004},{atom,{2181,1},ignore}]},
  {clause,
   {2181,1},
   [{cons,
     {2181,14},
     {tuple,
      {2181,15},
      [{var,{2181,16},'L'},
       {match,
        {2181,18},
        {tuple,
         {2181,18},
         [{atom,{2181,18},b_blk},
          {var,{2181,18},'_'},
          {var,{2181,28},'Is'},
          {var,{2181,36},'Last0'}]},
        {var,{2181,43},'Blk'}}]},
     {var,{2181,48},'Bs'}},
    {var,{2181,53},'PosMap0'}],
   [],
   [{debug_line,2182,1005},
    {'case',
     {2182,5},
     {tuple,{2182,10},[{var,{2182,11},'Is'},{var,{2182,14},'Last0'}]},
     [{clause,
       {2183,9},
       [{tuple,
         {2183,9},
         [{cons,
           {2183,10},
           {tuple,
            {2183,11},
            [{atom,{2183,11},b_set},
             {var,{2183,11},'_'},
             {var,{2183,34},'New'},
             {atom,{2183,21},bs_match},
             {cons,
              {2183,43},
              {var,{2183,44},'_'},
              {cons,{2183,46},{var,{2183,46},'Old'},{var,{2183,50},'_'}}}]},
           {cons,
            {2184,11},
            {tuple,
             {2184,11},
             [{atom,{2184,11},b_set},
              {var,{2184,11},'_'},
              {var,{2184,43},'Bool'},
              {tuple,
               {2184,21},
               [{atom,{2184,22},succeeded},{atom,{2184,32},guard}]},
              {cons,{2184,53},{var,{2184,54},'New'},{nil,{2184,57}}}]},
            {nil,{2184,59}}}},
          {tuple,
           {2185,10},
           [{atom,{2185,10},b_br},
            {var,{2185,10},'_'},
            {var,{2185,21},'Bool'},
            {var,{2185,10},'_'},
            {var,{2185,31},'Fail'}]}]}],
       [],
       [{debug_line,2186,1006},
        {'case',
         {2186,13},
         {var,{2186,18},'PosMap0'},
         [{clause,
           {2187,17},
           [{map,
             {2187,17},
             [{map_field_exact,
               {2187,23},
               {var,{2187,19},'Old'},
               {var,{2187,26},'Bits'}},
              {map_field_exact,
               {2187,36},
               {var,{2187,31},'Fail'},
               {tuple,
                {2187,39},
                [{var,{2187,40},'TailBits'},{var,{2187,49},'NextFail'}]}}]}],
           [[{op,
              {2187,70},
              '>',
              {var,{2187,65},'Bits'},
              {var,{2187,72},'TailBits'}}]],
           [{debug_line,2188,1007},
            {match,
             {2188,21},
             {var,{2188,21},'Last'},
             {block,
              {2188,28},
              [{match,
                {2188,28},
                {var,{2188,28},rec125},
                {var,{2188,28},'Last0'}},
               {'case',
                {2188,39},
                {var,{2188,28},rec125},
                [{clause,
                  {2188,39},
                  [{tuple,
                    {2188,39},
                    [{atom,{2188,39},b_br},
                     {var,{2188,39},'_'},
                     {var,{2188,39},'_'},
                     {var,{2188,39},'_'},
                     {var,{2188,39},'_'}]}],
                  [],
                  [{call,
                    {2188,39},
                    {remote,
                     {2188,39},
                     {atom,{2188,39},erlang},
                     {atom,{2188,39},setelement}},
                    [{integer,{2188,39},5},
                     {var,{2188,28},rec125},
                     {var,{2188,44},'NextFail'}]}]},
                 {clause,
                  [{generated,true},{location,{2188,39}}],
                  [{var,[{generated,true},{location,{2188,39}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2188,39}}],
                    {remote,
                     [{generated,true},{location,{2188,39}}],
                     {atom,[{generated,true},{location,{2188,39}}],erlang},
                     {atom,[{generated,true},{location,{2188,39}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2188,39}}],
                      [{atom,
                        [{generated,true},{location,{2188,39}}],
                        badrecord},
                       {var,{2188,28},rec125}]}]}]}]}]}},
            {debug_line,2189,1008},
            {cons,
             {2189,21},
             {tuple,
              {2189,22},
              [{var,{2189,23},'L'},
               {block,
                {2189,25},
                [{match,
                  {2189,25},
                  {var,{2189,25},rec126},
                  {var,{2189,25},'Blk'}},
                 {'case',
                  {2189,35},
                  {var,{2189,25},rec126},
                  [{clause,
                    {2189,35},
                    [{tuple,
                      {2189,35},
                      [{atom,{2189,35},b_blk},
                       {var,{2189,35},'_'},
                       {var,{2189,35},'_'},
                       {var,{2189,35},'_'}]}],
                    [],
                    [{call,
                      {2189,35},
                      {remote,
                       {2189,35},
                       {atom,{2189,35},erlang},
                       {atom,{2189,35},setelement}},
                      [{integer,{2189,35},4},
                       {var,{2189,25},rec126},
                       {var,{2189,40},'Last'}]}]},
                   {clause,
                    [{generated,true},{location,{2189,35}}],
                    [{var,[{generated,true},{location,{2189,35}}],'_'}],
                    [],
                    [{call,
                      [{generated,true},{location,{2189,35}}],
                      {remote,
                       [{generated,true},{location,{2189,35}}],
                       {atom,[{generated,true},{location,{2189,35}}],erlang},
                       {atom,[{generated,true},{location,{2189,35}}],error}},
                      [{tuple,
                        [{generated,true},{location,{2189,35}}],
                        [{atom,
                          [{generated,true},{location,{2189,35}}],
                          badrecord},
                         {var,{2189,25},rec126}]}]}]}]}]}]},
             {call,
              {2189,47},
              {atom,{2189,47},bsm_shortcut},
              [{var,{2189,60},'Bs'},{var,{2189,64},'PosMap0'}]}}]},
          {clause,
           {2190,17},
           [{map,{2190,17},[]}],
           [],
           [{debug_line,2191,1009},
            {cons,
             {2191,21},
             {tuple,{2191,22},[{var,{2191,23},'L'},{var,{2191,25},'Blk'}]},
             {call,
              {2191,30},
              {atom,{2191,30},bsm_shortcut},
              [{var,{2191,43},'Bs'},{var,{2191,47},'PosMap0'}]}}]}]}]},
      {clause,
       {2193,9},
       [{tuple,
         {2193,9},
         [{cons,
           {2193,10},
           {tuple,
            {2193,11},
            [{atom,{2193,11},b_set},
             {var,{2193,11},'_'},
             {var,{2193,38},'Bool'},
             {atom,{2193,21},bs_test_tail},
             {cons,
              {2193,48},
              {var,{2193,49},'Old'},
              {cons,
               {2193,53},
               {tuple,
                {2193,53},
                [{atom,{2193,53},b_literal},{var,{2193,68},'TailBits'}]},
               {nil,{2193,77}}}}]},
           {nil,{2193,79}}},
          {tuple,
           {2194,10},
           [{atom,{2194,10},b_br},
            {var,{2194,10},'_'},
            {var,{2194,21},'Bool'},
            {var,{2194,31},'Succ'},
            {var,{2194,41},'Fail'}]}]}],
       [],
       [{debug_line,2195,1010},
        {'case',
         {2195,13},
         {var,{2195,18},'PosMap0'},
         [{clause,
           {2196,17},
           [{map,
             {2196,17},
             [{map_field_exact,
               {2196,40},
               {tuple,
                {2196,19},
                [{atom,{2196,20},bs_test_tail},
                 {var,{2196,33},'Old'},
                 {var,{2196,37},'L'}]},
               {var,{2196,43},'ActualTailBits'}}]}],
           [],
           [{debug_line,2197,1011},
            {match,
             {2197,21},
             {var,{2197,21},'Last1'},
             {'if',
              {2197,29},
              [{clause,
                {2198,33},
                [],
                [[{op,
                   {2198,42},
                   '=:=',
                   {var,{2198,33},'TailBits'},
                   {var,{2198,46},'ActualTailBits'}}]],
                [{debug_line,2199,1012},
                 {block,
                  {2199,37},
                  [{match,
                    {2199,37},
                    {var,{2199,37},rec127},
                    {var,{2199,37},'Last0'}},
                   {'case',
                    {2199,48},
                    {var,{2199,37},rec127},
                    [{clause,
                      {2199,48},
                      [{tuple,
                        {2199,48},
                        [{atom,{2199,48},b_br},
                         {var,{2199,48},'_'},
                         {var,{2199,48},'_'},
                         {var,{2199,48},'_'},
                         {var,{2199,48},'_'}]}],
                      [],
                      [{call,
                        {2199,48},
                        {remote,
                         {2199,48},
                         {atom,{2199,48},erlang},
                         {atom,{2199,48},setelement}},
                        [{integer,{2199,48},5},
                         {var,{2199,37},rec127},
                         {var,{2199,53},'Succ'}]}]},
                     {clause,
                      [{generated,true},{location,{2199,48}}],
                      [{var,[{generated,true},{location,{2199,48}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{2199,48}}],
                        {remote,
                         [{generated,true},{location,{2199,48}}],
                         {atom,[{generated,true},{location,{2199,48}}],erlang},
                         {atom,[{generated,true},{location,{2199,48}}],error}},
                        [{tuple,
                          [{generated,true},{location,{2199,48}}],
                          [{atom,
                            [{generated,true},{location,{2199,48}}],
                            badrecord},
                           {var,{2199,37},rec127}]}]}]}]}]}]},
               {clause,
                {2200,33},
                [],
                [[{atom,{2200,33},true}]],
                [{debug_line,2201,1013},
                 {block,
                  {2201,37},
                  [{match,
                    {2201,37},
                    {var,{2201,37},rec128},
                    {var,{2201,37},'Last0'}},
                   {'case',
                    {2201,48},
                    {var,{2201,37},rec128},
                    [{clause,
                      {2201,48},
                      [{tuple,
                        {2201,48},
                        [{atom,{2201,48},b_br},
                         {var,{2201,48},'_'},
                         {var,{2201,48},'_'},
                         {var,{2201,48},'_'},
                         {var,{2201,48},'_'}]}],
                      [],
                      [{call,
                        {2201,48},
                        {remote,
                         {2201,48},
                         {atom,{2201,48},erlang},
                         {atom,{2201,48},setelement}},
                        [{integer,{2201,48},4},
                         {var,{2201,37},rec128},
                         {var,{2201,53},'Fail'}]}]},
                     {clause,
                      [{generated,true},{location,{2201,48}}],
                      [{var,[{generated,true},{location,{2201,48}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{2201,48}}],
                        {remote,
                         [{generated,true},{location,{2201,48}}],
                         {atom,[{generated,true},{location,{2201,48}}],erlang},
                         {atom,[{generated,true},{location,{2201,48}}],error}},
                        [{tuple,
                          [{generated,true},{location,{2201,48}}],
                          [{atom,
                            [{generated,true},{location,{2201,48}}],
                            badrecord},
                           {var,{2201,37},rec128}]}]}]}]}]}]}]}},
            {debug_line,2203,1014},
            {match,
             {2203,21},
             {var,{2203,21},'Last'},
             {call,
              {2203,28},
              {remote,
               {2203,36},
               {atom,{2203,28},beam_ssa},
               {atom,{2203,37},normalize}},
              [{var,{2203,47},'Last1'}]}},
            {debug_line,2204,1015},
            {cons,
             {2204,21},
             {tuple,
              {2204,22},
              [{var,{2204,23},'L'},
               {block,
                {2204,25},
                [{match,
                  {2204,25},
                  {var,{2204,25},rec129},
                  {var,{2204,25},'Blk'}},
                 {'case',
                  {2204,35},
                  {var,{2204,25},rec129},
                  [{clause,
                    {2204,35},
                    [{tuple,
                      {2204,35},
                      [{atom,{2204,35},b_blk},
                       {var,{2204,35},'_'},
                       {var,{2204,35},'_'},
                       {var,{2204,35},'_'}]}],
                    [],
                    [{call,
                      {2204,35},
                      {remote,
                       {2204,35},
                       {atom,{2204,35},erlang},
                       {atom,{2204,35},setelement}},
                      [{integer,{2204,35},4},
                       {var,{2204,25},rec129},
                       {var,{2204,40},'Last'}]}]},
                   {clause,
                    [{generated,true},{location,{2204,35}}],
                    [{var,[{generated,true},{location,{2204,35}}],'_'}],
                    [],
                    [{call,
                      [{generated,true},{location,{2204,35}}],
                      {remote,
                       [{generated,true},{location,{2204,35}}],
                       {atom,[{generated,true},{location,{2204,35}}],erlang},
                       {atom,[{generated,true},{location,{2204,35}}],error}},
                      [{tuple,
                        [{generated,true},{location,{2204,35}}],
                        [{atom,
                          [{generated,true},{location,{2204,35}}],
                          badrecord},
                         {var,{2204,25},rec129}]}]}]}]}]}]},
             {call,
              {2204,47},
              {atom,{2204,47},bsm_shortcut},
              [{var,{2204,60},'Bs'},{var,{2204,64},'PosMap0'}]}}]},
          {clause,
           {2205,17},
           [{map,{2205,17},[]}],
           [],
           [{debug_line,2206,1016},
            {match,
             {2206,21},
             {var,{2206,21},'PosMap'},
             {map,
              {2206,37},
              {var,{2206,30},'PosMap0'},
              [{map_field_assoc,
                {2206,63},
                {tuple,
                 {2206,39},
                 [{atom,{2206,40},bs_test_tail},
                  {var,{2206,53},'Old'},
                  {var,{2206,57},'Succ'}]},
                {var,{2206,66},'TailBits'}}]}},
            {debug_line,2207,1017},
            {cons,
             {2207,21},
             {tuple,{2207,22},[{var,{2207,23},'L'},{var,{2207,25},'Blk'}]},
             {call,
              {2207,30},
              {atom,{2207,30},bsm_shortcut},
              [{var,{2207,43},'Bs'},{var,{2207,47},'PosMap'}]}}]}]}]},
      {clause,
       {2209,9},
       [{tuple,{2209,9},[{var,{2209,10},'_'},{var,{2209,12},'_'}]}],
       [],
       [{debug_line,2210,1018},
        {cons,
         {2210,13},
         {tuple,{2210,14},[{var,{2210,15},'L'},{var,{2210,17},'Blk'}]},
         {call,
          {2210,22},
          {atom,{2210,22},bsm_shortcut},
          [{var,{2210,35},'Bs'},{var,{2210,39},'PosMap0'}]}}]}]}]},
  {clause,
   {2212,1},
   [{nil,{2212,14}},{var,{2212,18},'_PosMap'}],
   [],
   [{debug_line,2212,1019},{nil,{2212,30}}]}]}.
{function,
 {2225,1},
 bsm_tail,2,
 [{clause,
   {2225,1},
   [{var,{2225,1},'_'},{var,{2225,1},'_'}],
   [[{call,
      {2225,1},
      {remote,{2225,1},{atom,{2225,1},fake},{atom,{2225,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2225,1020},{atom,{2225,1},ignore}]},
  {clause,
   {2225,1},
   [{cons,
     {2225,10},
     {tuple,
      {2225,11},
      [{var,{2225,12},'L'},
       {match,
        {2225,14},
        {tuple,
         {2225,14},
         [{atom,{2225,14},b_blk},
          {var,{2225,14},'_'},
          {var,{2225,24},'Is0'},
          {var,{2225,33},'Last0'}]},
        {var,{2225,40},'Blk0'}}]},
     {var,{2225,46},'Bs'}},
    {var,{2225,51},'Map0'}],
   [],
   [{debug_line,2226,1021},
    {match,
     {2226,5},
     {tuple,
      {2226,5},
      [{var,{2226,6},'Is'},{var,{2226,9},'Last'},{var,{2226,14},'Map'}]},
     {call,
      {2226,21},
      {atom,{2226,21},bsm_tail_is},
      [{var,{2226,33},'Is0'},
       {var,{2226,38},'Last0'},
       {var,{2226,45},'L'},
       {var,{2226,48},'Map0'},
       {nil,{2226,54}}]}},
    {debug_line,2227,1022},
    {match,
     {2227,5},
     {var,{2227,5},'Blk'},
     {block,
      {2227,11},
      [{match,{2227,11},{var,{2227,11},rec130},{var,{2227,11},'Blk0'}},
       {'case',
        {2227,22},
        {var,{2227,11},rec130},
        [{clause,
          {2227,22},
          [{tuple,
            {2227,22},
            [{atom,{2227,22},b_blk},
             {var,{2227,22},'_'},
             {var,{2227,22},'_'},
             {var,{2227,22},'_'}]}],
          [],
          [{call,
            {2227,22},
            {remote,
             {2227,22},
             {atom,{2227,22},erlang},
             {atom,{2227,22},setelement}},
            [{integer,{2227,22},3},
             {call,
              {2227,28},
              {remote,
               {2227,28},
               {atom,{2227,28},erlang},
               {atom,{2227,28},setelement}},
              [{integer,{2227,28},4},
               {var,{2227,11},rec130},
               {var,{2227,33},'Last'}]},
             {var,{2227,25},'Is'}]}]},
         {clause,
          [{generated,true},{location,{2227,22}}],
          [{var,[{generated,true},{location,{2227,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2227,22}}],
            {remote,
             [{generated,true},{location,{2227,22}}],
             {atom,[{generated,true},{location,{2227,22}}],erlang},
             {atom,[{generated,true},{location,{2227,22}}],error}},
            [{tuple,
              [{generated,true},{location,{2227,22}}],
              [{atom,[{generated,true},{location,{2227,22}}],badrecord},
               {var,{2227,11},rec130}]}]}]}]}]}},
    {debug_line,2228,1023},
    {cons,
     {2228,5},
     {tuple,{2228,6},[{var,{2228,7},'L'},{var,{2228,9},'Blk'}]},
     {call,
      {2228,14},
      {atom,{2228,14},bsm_tail},
      [{var,{2228,23},'Bs'},{var,{2228,27},'Map'}]}}]},
  {clause,
   {2229,1},
   [{nil,{2229,10}},{var,{2229,14},'_Map'}],
   [],
   [{debug_line,2230,1024},{nil,{2230,5}}]}]}.
{function,
 {2232,1},
 bsm_tail_is,5,
 [{clause,
   {2232,1},
   [{var,{2232,1},'_'},
    {var,{2232,1},'_'},
    {var,{2232,1},'_'},
    {var,{2232,1},'_'},
    {var,{2232,1},'_'}],
   [[{call,
      {2232,1},
      {remote,{2232,1},{atom,{2232,1},fake},{atom,{2232,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2232,1025},{atom,{2232,1},ignore}]},
  {clause,
   {2232,1},
   [{cons,
     {2232,13},
     {match,
      {2232,14},
      {tuple,
       {2232,14},
       [{atom,{2232,14},b_set},
        {var,{2232,44},'Anno'},
        {var,{2232,53},'Dst'},
        {atom,{2232,24},bs_start_match},
        {var,{2232,14},'_'}]},
      {var,{2232,58},'I'}},
     {var,{2232,60},'Is'}},
    {var,{2232,65},'Last'},
    {var,{2232,71},'L'},
    {var,{2232,74},'Map0'},
    {var,{2232,80},'Acc'}],
   [],
   [{debug_line,2233,1026},
    {'case',
     {2233,5},
     {var,{2233,10},'Anno'},
     [{clause,
       {2234,9},
       [{map,
         {2234,9},
         [{map_field_exact,
           {2234,21},
           {atom,{2234,11},arg_types},
           {map,
            {2234,24},
            [{map_field_exact,
              {2234,28},
              {integer,{2234,26},1},
              {var,{2234,31},'Type'}}]}}]}],
       [],
       [{debug_line,2235,1027},
        {'case',
         {2235,13},
         {call,
          {2235,18},
          {remote,
           {2235,28},
           {atom,{2235,18},beam_types},
           {atom,{2235,29},get_bs_matchable_unit}},
          [{var,{2235,51},'Type'}]},
         [{clause,
           {2236,17},
           [{atom,{2236,17},error}],
           [],
           [{debug_line,2237,1028},
            {call,
             {2237,21},
             {atom,{2237,21},bsm_tail_is},
             [{var,{2237,33},'Is'},
              {var,{2237,37},'Last'},
              {var,{2237,43},'L'},
              {var,{2237,46},'Map0'},
              {block,0,
               [{cons,
                 {2237,52},
                 {var,{2237,53},'I'},
                 {var,{2237,55},'Acc'}}]}]}]},
          {clause,
           {2238,17},
           [{var,{2238,17},'Unit'}],
           [[{call,
              {2238,27},
              {remote,
               {2238,27},
               {atom,{2238,27},erlang},
               {atom,{2238,27},is_integer}},
              [{var,{2238,38},'Unit'}]}]],
           [{debug_line,2239,1029},
            {match,
             {2239,21},
             {var,{2239,21},'Map'},
             {map,
              {2239,31},
              {var,{2239,27},'Map0'},
              [{map_field_assoc,
                {2239,37},
                {var,{2239,33},'Dst'},
                {var,{2239,40},'Unit'}}]}},
            {debug_line,2240,1030},
            {call,
             {2240,21},
             {atom,{2240,21},bsm_tail_is},
             [{var,{2240,33},'Is'},
              {var,{2240,37},'Last'},
              {var,{2240,43},'L'},
              {var,{2240,46},'Map'},
              {block,0,
               [{cons,
                 {2240,51},
                 {var,{2240,52},'I'},
                 {var,{2240,54},'Acc'}}]}]}]}]}]},
      {clause,
       {2242,9},
       [{map,{2242,9},[]}],
       [],
       [{debug_line,2243,1031},
        {call,
         {2243,13},
         {atom,{2243,13},bsm_tail_is},
         [{var,{2243,25},'Is'},
          {var,{2243,29},'Last'},
          {var,{2243,35},'L'},
          {var,{2243,38},'Map0'},
          {block,0,
           [{cons,
             {2243,44},
             {var,{2243,45},'I'},
             {var,{2243,47},'Acc'}}]}]}]}]}]},
  {clause,
   {2245,1},
   [{match,
     {2245,13},
     {cons,
      {2245,13},
      {tuple,
       {2245,14},
       [{atom,{2245,14},b_set},
        {var,{2245,14},'_'},
        {var,{2245,37},'Dst'},
        {atom,{2245,24},bs_match},
        {var,{2245,46},'Args'}]},
      {cons,
       {2246,14},
       {tuple,
        {2246,14},
        [{atom,{2246,14},b_set},
         {var,{2246,14},'_'},
         {var,{2246,46},'SuccDst'},
         {tuple,{2246,24},[{atom,{2246,25},succeeded},{atom,{2246,35},guard}]},
         {cons,{2246,59},{var,{2246,60},'Dst'},{nil,{2246,63}}}]},
       {var,{2246,66},'_'}}},
     {var,{2246,69},'Is'}},
    {match,
     {2247,13},
     {tuple,
      {2247,13},
      [{atom,{2247,13},b_br},
       {var,{2247,13},'_'},
       {var,{2247,24},'SuccDst'},
       {var,{2247,13},'_'},
       {var,{2247,37},'Fail'}]},
     {var,{2247,43},'Last'}},
    {var,{2248,13},'_L'},
    {var,{2248,17},'Map0'},
    {var,{2248,23},'Acc'}],
   [],
   [{debug_line,2249,1032},
    {'case',
     {2249,5},
     {call,
      {2249,10},
      {atom,{2249,10},bsm_tail_num_matched},
      [{var,{2249,31},'Args'},{var,{2249,37},'Map0'}]},
     [{clause,
       {2250,9},
       [{atom,{2250,9},unknown}],
       [],
       [{debug_line,2253,1033},
        {match,
         {2253,13},
         {var,{2253,13},'Map'},
         {map,
          {2253,23},
          {var,{2253,19},'Map0'},
          [{map_field_assoc,
            {2253,30},
            {var,{2253,25},'Fail'},
            {atom,{2253,33},unknown}}]}},
        {debug_line,2254,1034},
        {tuple,
         {2254,13},
         [{call,
           {2254,14},
           {remote,{2254,14},{atom,{2254,14},lists},{atom,{2254,14},reverse}},
           [{var,{2254,22},'Acc'},{var,{2254,27},'Is'}]},
          {var,{2254,31},'Last'},
          {var,{2254,36},'Map'}]}]},
      {clause,
       {2255,9},
       [{var,{2255,9},'Bits'}],
       [[{call,
          {2255,19},
          {remote,
           {2255,19},
           {atom,{2255,19},erlang},
           {atom,{2255,19},is_integer}},
          [{var,{2255,30},'Bits'}]}]],
       [{debug_line,2256,1035},
        {'case',
         {2256,13},
         {var,{2256,18},'Map0'},
         [{clause,
           {2257,17},
           [{map,
             {2257,17},
             [{map_field_exact,
               {2257,24},
               {var,{2257,19},'Fail'},
               {var,{2257,27},'Bits'}}]}],
           [],
           [{debug_line,2258,1036},
            {tuple,
             {2258,21},
             [{call,
               {2258,22},
               {remote,
                {2258,22},
                {atom,{2258,22},lists},
                {atom,{2258,22},reverse}},
               [{var,{2258,30},'Acc'},{var,{2258,35},'Is'}]},
              {var,{2258,39},'Last'},
              {var,{2258,44},'Map0'}]}]},
          {clause,
           {2259,17},
           [{map,
             {2259,17},
             [{map_field_exact,
               {2259,24},
               {var,{2259,19},'Fail'},
               {var,{2259,27},'_'}}]}],
           [],
           [{debug_line,2260,1037},
            {match,
             {2260,21},
             {var,{2260,21},'Map'},
             {map,
              {2260,31},
              {var,{2260,27},'Map0'},
              [{map_field_assoc,
                {2260,38},
                {var,{2260,33},'Fail'},
                {atom,{2260,41},unknown}}]}},
            {debug_line,2261,1038},
            {tuple,
             {2261,21},
             [{call,
               {2261,22},
               {remote,
                {2261,22},
                {atom,{2261,22},lists},
                {atom,{2261,22},reverse}},
               [{var,{2261,30},'Acc'},{var,{2261,35},'Is'}]},
              {var,{2261,39},'Last'},
              {var,{2261,44},'Map'}]}]},
          {clause,
           {2262,17},
           [{map,{2262,17},[]}],
           [],
           [{debug_line,2263,1039},
            {match,
             {2263,21},
             {var,{2263,21},'Map'},
             {map,
              {2263,31},
              {var,{2263,27},'Map0'},
              [{map_field_assoc,
                {2263,38},
                {var,{2263,33},'Fail'},
                {var,{2263,41},'Bits'}}]}},
            {debug_line,2264,1040},
            {tuple,
             {2264,21},
             [{call,
               {2264,22},
               {remote,
                {2264,22},
                {atom,{2264,22},lists},
                {atom,{2264,22},reverse}},
               [{var,{2264,30},'Acc'},{var,{2264,35},'Is'}]},
              {var,{2264,39},'Last'},
              {var,{2264,44},'Map'}]}]}]}]}]}]},
  {clause,
   {2267,1},
   [{match,
     {2267,13},
     {cons,
      {2267,13},
      {tuple,
       {2267,14},
       [{atom,{2267,14},b_set},
        {var,{2267,14},'_'},
        {var,{2267,68},'Dst'},
        {atom,{2267,24},bs_test_tail},
        {cons,
         {2267,42},
         {var,{2267,43},'_'},
         {cons,
          {2267,45},
          {tuple,{2267,45},[{atom,{2267,45},b_literal},{integer,{2267,60},0}]},
          {nil,{2267,62}}}}]},
      {nil,{2267,72}}},
     {var,{2267,74},'Is'}},
    {match,
     {2268,13},
     {tuple,
      {2268,13},
      [{atom,{2268,13},b_br},
       {var,{2268,13},'_'},
       {var,{2268,24},'Dst'},
       {var,{2268,33},'Succ'},
       {var,{2268,13},'_'}]},
     {var,{2268,39},'Last0'}},
    {var,{2268,46},'L'},
    {var,{2268,49},'Map0'},
    {var,{2268,55},'Acc'}],
   [],
   [{debug_line,2269,1041},
    {'case',
     {2269,5},
     {var,{2269,10},'Map0'},
     [{clause,
       {2270,9},
       [{map,
         {2270,9},
         [{map_field_exact,
           {2270,13},
           {var,{2270,11},'L'},
           {var,{2270,16},'Bits'}}]}],
       [[{call,
          {2270,27},
          {remote,
           {2270,27},
           {atom,{2270,27},erlang},
           {atom,{2270,27},is_integer}},
          [{var,{2270,38},'Bits'}]}]],
       [{debug_line,2274,1042},
        {match,
         {2274,13},
         {var,{2274,13},'Last'},
         {call,
          {2274,20},
          {remote,
           {2274,28},
           {atom,{2274,20},beam_ssa},
           {atom,{2274,29},normalize}},
          [{block,0,
            [{block,
              {2274,39},
              [{match,
                {2274,39},
                {var,{2274,39},rec131},
                {var,{2274,39},'Last0'}},
               {'case',
                {2274,50},
                {var,{2274,39},rec131},
                [{clause,
                  {2274,50},
                  [{tuple,
                    {2274,50},
                    [{atom,{2274,50},b_br},
                     {var,{2274,50},'_'},
                     {var,{2274,50},'_'},
                     {var,{2274,50},'_'},
                     {var,{2274,50},'_'}]}],
                  [],
                  [{call,
                    {2274,50},
                    {remote,
                     {2274,50},
                     {atom,{2274,50},erlang},
                     {atom,{2274,50},setelement}},
                    [{integer,{2274,50},5},
                     {var,{2274,39},rec131},
                     {var,{2274,55},'Succ'}]}]},
                 {clause,
                  [{generated,true},{location,{2274,50}}],
                  [{var,[{generated,true},{location,{2274,50}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2274,50}}],
                    {remote,
                     [{generated,true},{location,{2274,50}}],
                     {atom,[{generated,true},{location,{2274,50}}],erlang},
                     {atom,[{generated,true},{location,{2274,50}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2274,50}}],
                      [{atom,
                        [{generated,true},{location,{2274,50}}],
                        badrecord},
                       {var,{2274,39},rec131}]}]}]}]}]}]}]}},
        {debug_line,2275,1043},
        {tuple,
         {2275,13},
         [{call,
           {2275,14},
           {remote,{2275,14},{atom,{2275,14},lists},{atom,{2275,14},reverse}},
           [{var,{2275,22},'Acc'},{var,{2275,27},'Is'}]},
          {var,{2275,31},'Last'},
          {var,{2275,36},'Map0'}]}]},
      {clause,
       {2276,9},
       [{map,{2276,9},[]}],
       [],
       [{debug_line,2277,1044},
        {tuple,
         {2277,13},
         [{call,
           {2277,14},
           {remote,{2277,14},{atom,{2277,14},lists},{atom,{2277,14},reverse}},
           [{var,{2277,22},'Acc'},{var,{2277,27},'Is'}]},
          {var,{2277,31},'Last0'},
          {var,{2277,37},'Map0'}]}]}]}]},
  {clause,
   {2279,1},
   [{cons,
     {2279,13},
     {match,
      {2279,14},
      {tuple,
       {2279,14},
       [{atom,{2279,14},b_set},
        {var,{2279,14},'_'},
        {var,{2279,14},'_'},
        {var,{2279,14},'_'},
        {var,{2279,14},'_'}]},
      {var,{2279,23},'I'}},
     {var,{2279,25},'Is'}},
    {var,{2279,30},'Last'},
    {var,{2279,36},'L'},
    {var,{2279,39},'Map'},
    {var,{2279,44},'Acc'}],
   [],
   [{debug_line,2280,1045},
    {call,
     {2280,5},
     {atom,{2280,5},bsm_tail_is},
     [{var,{2280,17},'Is'},
      {var,{2280,21},'Last'},
      {var,{2280,27},'L'},
      {var,{2280,30},'Map'},
      {block,0,
       [{cons,{2280,35},{var,{2280,36},'I'},{var,{2280,38},'Acc'}}]}]}]},
  {clause,
   {2281,1},
   [{nil,{2281,13}},
    {var,{2281,17},'Last'},
    {var,{2281,23},'_L'},
    {var,{2281,27},'Map0'},
    {var,{2281,33},'Acc'}],
   [],
   [{debug_line,2282,1046},
    {match,
     {2282,5},
     {var,{2282,5},'Map'},
     {call,
      {2282,11},
      {remote,{2282,11},{atom,{2282,11},lists},{atom,{2282,11},foldl}},
      [{block,0,
        [{'fun',
          {2282,17},
          {clauses,
           [{clause,
             {2282,20},
             [{var,{2282,21},'F'},{var,{2282,24},'A'}],
             [],
             [{debug_line,2283,1047},
              {map,
               {2283,26},
               {var,{2283,25},'A'},
               [{map_field_assoc,
                 {2283,30},
                 {var,{2283,28},'F'},
                 {atom,{2283,33},unknown}}]}]}]}}]},
       {var,{2284,22},'Map0'},
       {block,0,
        [{debug_line,2284,1048},
         {call,
          {2284,28},
          {remote,
           {2284,36},
           {atom,{2284,28},beam_ssa},
           {atom,{2284,37},successors}},
          [{block,0,
            [{tuple,
              {2284,48},
              [{atom,{2284,48},b_blk},
               {map,{2284,48},[]},
               {nil,{2284,58}},
               {var,{2284,66},'Last'}]}]}]}]}]}},
    {debug_line,2285,1049},
    {tuple,
     {2285,5},
     [{call,
       {2285,6},
       {remote,{2285,6},{atom,{2285,6},lists},{atom,{2285,6},reverse}},
       [{var,{2285,14},'Acc'}]},
      {var,{2285,19},'Last'},
      {var,{2285,24},'Map'}]}]}]}.
{function,
 {2287,1},
 bsm_tail_num_matched,2,
 [{clause,
   {2287,1},
   [{var,{2287,1},'_'},{var,{2287,1},'_'}],
   [[{call,
      {2287,1},
      {remote,{2287,1},{atom,{2287,1},fake},{atom,{2287,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2287,1050},{atom,{2287,1},ignore}]},
  {clause,
   {2287,1},
   [{cons,
     {2287,22},
     {tuple,{2287,23},[{atom,{2287,23},b_literal},{atom,{2287,38},skip}]},
     {cons,
      {2287,44},
      {var,{2287,44},'Ctx'},
      {cons,
       {2287,48},
       {var,{2287,48},'Type'},
       {cons,
        {2287,53},
        {var,{2287,53},'Flags'},
        {cons,
         {2287,59},
         {var,{2287,59},'Size'},
         {cons,{2287,64},{var,{2287,64},'Unit'},{nil,{2287,68}}}}}}}},
    {var,{2287,71},'Map'}],
   [],
   [{debug_line,2288,1051},
    {call,
     {2288,5},
     {atom,{2288,5},bsm_tail_num_matched},
     [{block,0,
       [{cons,
         {2288,26},
         {var,{2288,27},'Type'},
         {cons,
          {2288,32},
          {var,{2288,32},'Ctx'},
          {cons,
           {2288,36},
           {var,{2288,36},'Flags'},
           {cons,
            {2288,42},
            {var,{2288,42},'Size'},
            {cons,{2288,47},{var,{2288,47},'Unit'},{nil,{2288,51}}}}}}}]},
      {var,{2288,54},'Map'}]}]},
  {clause,
   {2289,1},
   [{cons,
     {2289,22},
     {tuple,{2289,23},[{atom,{2289,23},b_literal},{var,{2289,38},'Type'}]},
     {cons,
      {2289,44},
      {var,{2289,44},'Ctx'},
      {cons,
       {2289,48},
       {tuple,{2289,48},[{atom,{2289,48},b_literal},{var,{2289,48},'_'}]},
       {cons,
        {2290,23},
        {tuple,{2290,23},[{atom,{2290,23},b_literal},{var,{2290,38},'Size'}]},
        {cons,
         {2290,44},
         {tuple,{2290,44},[{atom,{2290,44},b_literal},{var,{2290,59},'Unit'}]},
         {nil,{2290,64}}}}}}},
    {var,{2290,67},'Map'}],
   [[{op,
      {2291,26},
      'orelse',
      {op,{2291,14},'=:=',{var,{2291,9},'Type'},{atom,{2291,18},integer}},
      {op,{2291,38},'=:=',{var,{2291,33},'Type'},{atom,{2291,42},binary}}},
     {call,
      {2292,8},
      {remote,{2292,8},{atom,{2292,8},erlang},{atom,{2292,8},is_integer}},
      [{var,{2292,19},'Size'}]},
     {call,
      {2292,26},
      {remote,{2292,26},{atom,{2292,26},erlang},{atom,{2292,26},is_integer}},
      [{var,{2292,37},'Unit'}]}]],
   [{debug_line,2293,1052},
    {match,
     {2293,5},
     {var,{2293,5},'Bits'},
     {op,{2293,17},'*',{var,{2293,12},'Size'},{var,{2293,19},'Unit'}}},
    {debug_line,2294,1053},
    {'case',
     {2294,5},
     {var,{2294,10},'Map'},
     [{clause,
       {2295,9},
       [{map,
         {2295,9},
         [{map_field_exact,
           {2295,15},
           {var,{2295,11},'Ctx'},
           {var,{2295,18},'Bits'}}]}],
       [[{call,
          {2295,29},
          {remote,
           {2295,29},
           {atom,{2295,29},erlang},
           {atom,{2295,29},is_integer}},
          [{var,{2295,40},'Bits'}]}]],
       [{debug_line,2296,1054},{var,{2296,13},'Bits'}]},
      {clause,
       {2297,9},
       [{map,{2297,9},[]}],
       [],
       [{debug_line,2298,1055},{atom,{2298,13},unknown}]}]}]},
  {clause,
   {2300,1},
   [{var,{2300,22},'_Args'},{var,{2300,29},'_Map'}],
   [],
   [{debug_line,2301,1056},{atom,{2301,5},unknown}]}]}.
{function,
 {2312,1},
 ssa_opt_bs_create_bin,1,
 [{clause,
   {2312,1},
   [{var,{2312,1},'_'}],
   [[{call,
      {2312,1},
      {remote,{2312,1},{atom,{2312,1},fake},{atom,{2312,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2312,1057},{atom,{2312,1},ignore}]},
  {clause,
   {2312,1},
   [{tuple,
     {2312,23},
     [{match,
       {2312,24},
       {tuple,
        {2312,24},
        [{atom,{2312,24},opt_st},
         {var,{2312,36},'Linear0'},
         {var,{2312,24},'_'},
         {var,{2312,24},'_'},
         {var,{2312,24},'_'}]},
       {var,{2312,45},'St'}},
      {var,{2312,49},'FuncDb'}]}],
   [],
   [{debug_line,2313,1058},
    {match,
     {2313,5},
     {var,{2313,5},'Linear'},
     {call,
      {2313,14},
      {atom,{2313,14},opt_create_bin_fs},
      [{var,{2313,32},'Linear0'}]}},
    {debug_line,2314,1059},
    {tuple,
     {2314,5},
     [{block,
       {2314,6},
       [{match,{2314,6},{var,{2314,6},rec132},{var,{2314,6},'St'}},
        {'case',
         {2314,16},
         {var,{2314,6},rec132},
         [{clause,
           {2314,16},
           [{tuple,
             {2314,16},
             [{atom,{2314,16},opt_st},
              {var,{2314,16},'_'},
              {var,{2314,16},'_'},
              {var,{2314,16},'_'},
              {var,{2314,16},'_'}]}],
           [],
           [{call,
             {2314,16},
             {remote,
              {2314,16},
              {atom,{2314,16},erlang},
              {atom,{2314,16},setelement}},
             [{integer,{2314,16},2},
              {var,{2314,6},rec132},
              {var,{2314,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{2314,16}}],
           [{var,[{generated,true},{location,{2314,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2314,16}}],
             {remote,
              [{generated,true},{location,{2314,16}}],
              {atom,[{generated,true},{location,{2314,16}}],erlang},
              {atom,[{generated,true},{location,{2314,16}}],error}},
             [{tuple,
               [{generated,true},{location,{2314,16}}],
               [{atom,[{generated,true},{location,{2314,16}}],badrecord},
                {var,{2314,6},rec132}]}]}]}]}]},
      {var,{2314,29},'FuncDb'}]}]}]}.
{function,
 {2316,1},
 opt_create_bin_fs,1,
 [{clause,
   {2316,1},
   [{var,{2316,1},'_'}],
   [[{call,
      {2316,1},
      {remote,{2316,1},{atom,{2316,1},fake},{atom,{2316,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2316,1060},{atom,{2316,1},ignore}]},
  {clause,
   {2316,1},
   [{cons,
     {2316,19},
     {tuple,
      {2316,20},
      [{var,{2316,21},'L'},
       {match,
        {2316,23},
        {tuple,
         {2316,23},
         [{atom,{2316,23},b_blk},
          {var,{2316,23},'_'},
          {var,{2316,33},'Is0'},
          {var,{2316,23},'_'}]},
        {var,{2316,38},'Blk0'}}]},
     {var,{2316,44},'Bs'}}],
   [],
   [{debug_line,2317,1061},
    {match,
     {2317,5},
     {var,{2317,5},'Is'},
     {call,
      {2317,10},
      {atom,{2317,10},opt_create_bin_is},
      [{var,{2317,28},'Is0'}]}},
    {debug_line,2318,1062},
    {match,
     {2318,5},
     {var,{2318,5},'Blk'},
     {block,
      {2318,11},
      [{match,{2318,11},{var,{2318,11},rec133},{var,{2318,11},'Blk0'}},
       {'case',
        {2318,22},
        {var,{2318,11},rec133},
        [{clause,
          {2318,22},
          [{tuple,
            {2318,22},
            [{atom,{2318,22},b_blk},
             {var,{2318,22},'_'},
             {var,{2318,22},'_'},
             {var,{2318,22},'_'}]}],
          [],
          [{call,
            {2318,22},
            {remote,
             {2318,22},
             {atom,{2318,22},erlang},
             {atom,{2318,22},setelement}},
            [{integer,{2318,22},3},
             {var,{2318,11},rec133},
             {var,{2318,25},'Is'}]}]},
         {clause,
          [{generated,true},{location,{2318,22}}],
          [{var,[{generated,true},{location,{2318,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2318,22}}],
            {remote,
             [{generated,true},{location,{2318,22}}],
             {atom,[{generated,true},{location,{2318,22}}],erlang},
             {atom,[{generated,true},{location,{2318,22}}],error}},
            [{tuple,
              [{generated,true},{location,{2318,22}}],
              [{atom,[{generated,true},{location,{2318,22}}],badrecord},
               {var,{2318,11},rec133}]}]}]}]}]}},
    {debug_line,2319,1063},
    {cons,
     {2319,5},
     {tuple,{2319,6},[{var,{2319,7},'L'},{var,{2319,9},'Blk'}]},
     {call,
      {2319,14},
      {atom,{2319,14},opt_create_bin_fs},
      [{var,{2319,32},'Bs'}]}}]},
  {clause,
   {2320,1},
   [{nil,{2320,19}}],
   [],
   [{debug_line,2320,1064},{nil,{2320,26}}]}]}.
{function,
 {2322,1},
 opt_create_bin_is,1,
 [{clause,
   {2322,1},
   [{var,{2322,1},'_'}],
   [[{call,
      {2322,1},
      {remote,{2322,1},{atom,{2322,1},fake},{atom,{2322,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2322,1065},{atom,{2322,1},ignore}]},
  {clause,
   {2322,1},
   [{cons,
     {2322,19},
     {match,
      {2322,20},
      {tuple,
       {2322,20},
       [{atom,{2322,20},b_set},
        {var,{2322,20},'_'},
        {var,{2322,20},'_'},
        {atom,{2322,30},bs_create_bin},
        {var,{2322,49},'Args0'}]},
      {var,{2322,56},'I0'}},
     {var,{2322,59},'Is'}}],
   [],
   [{debug_line,2323,1066},
    {match,
     {2323,5},
     {var,{2323,5},'Args'},
     {call,
      {2323,12},
      {atom,{2323,12},opt_create_bin_args},
      [{var,{2323,32},'Args0'}]}},
    {debug_line,2324,1067},
    {match,
     {2324,5},
     {var,{2324,5},'I'},
     {block,
      {2324,9},
      [{match,{2324,9},{var,{2324,9},rec134},{var,{2324,9},'I0'}},
       {'case',
        {2324,18},
        {var,{2324,9},rec134},
        [{clause,
          {2324,18},
          [{tuple,
            {2324,18},
            [{atom,{2324,18},b_set},
             {var,{2324,18},'_'},
             {var,{2324,18},'_'},
             {var,{2324,18},'_'},
             {var,{2324,18},'_'}]}],
          [],
          [{call,
            {2324,18},
            {remote,
             {2324,18},
             {atom,{2324,18},erlang},
             {atom,{2324,18},setelement}},
            [{integer,{2324,18},5},
             {var,{2324,9},rec134},
             {var,{2324,23},'Args'}]}]},
         {clause,
          [{generated,true},{location,{2324,18}}],
          [{var,[{generated,true},{location,{2324,18}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{2324,18}}],
            {remote,
             [{generated,true},{location,{2324,18}}],
             {atom,[{generated,true},{location,{2324,18}}],erlang},
             {atom,[{generated,true},{location,{2324,18}}],error}},
            [{tuple,
              [{generated,true},{location,{2324,18}}],
              [{atom,[{generated,true},{location,{2324,18}}],badrecord},
               {var,{2324,9},rec134}]}]}]}]}]}},
    {debug_line,2325,1068},
    {cons,
     {2325,5},
     {var,{2325,6},'I'},
     {call,
      {2325,8},
      {atom,{2325,8},opt_create_bin_is},
      [{var,{2325,26},'Is'}]}}]},
  {clause,
   {2326,1},
   [{cons,{2326,19},{var,{2326,20},'I'},{var,{2326,22},'Is'}}],
   [],
   [{debug_line,2327,1069},
    {cons,
     {2327,5},
     {var,{2327,6},'I'},
     {call,
      {2327,8},
      {atom,{2327,8},opt_create_bin_is},
      [{var,{2327,26},'Is'}]}}]},
  {clause,
   {2328,1},
   [{nil,{2328,19}}],
   [],
   [{debug_line,2328,1070},{nil,{2328,26}}]}]}.
{function,
 {2330,1},
 opt_create_bin_args,1,
 [{clause,
   {2330,1},
   [{var,{2330,1},'_'}],
   [[{call,
      {2330,1},
      {remote,{2330,1},{atom,{2330,1},fake},{atom,{2330,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2330,1071},{atom,{2330,1},ignore}]},
  {clause,
   {2330,1},
   [{cons,
     {2330,21},
     {tuple,{2330,22},[{atom,{2330,22},b_literal},{atom,{2330,37},binary}]},
     {cons,
      {2330,45},
      {tuple,
       {2330,45},
       [{atom,{2330,45},b_literal},
        {cons,{2330,60},{integer,{2330,61},1},{var,{2330,63},'_'}}]},
      {cons,
       {2331,22},
       {tuple,{2331,22},[{atom,{2331,22},b_literal},{var,{2331,37},'Bin0'}]},
       {cons,
        {2331,43},
        {tuple,{2331,43},[{atom,{2331,43},b_literal},{atom,{2331,58},all}]},
        {cons,
         {2332,22},
         {tuple,
          {2332,22},
          [{atom,{2332,22},b_literal},{atom,{2332,37},binary}]},
         {cons,
          {2332,45},
          {tuple,
           {2332,45},
           [{atom,{2332,45},b_literal},
            {cons,{2332,60},{integer,{2332,61},1},{var,{2332,63},'_'}}]},
          {cons,
           {2333,22},
           {tuple,
            {2333,22},
            [{atom,{2333,22},b_literal},{var,{2333,37},'Bin1'}]},
           {cons,
            {2333,43},
            {tuple,
             {2333,43},
             [{atom,{2333,43},b_literal},{atom,{2333,58},all}]},
            {var,{2333,63},'Args0'}}}}}}}}}],
   [[{call,
      {2334,8},
      {remote,{2334,8},{atom,{2334,8},erlang},{atom,{2334,8},is_bitstring}},
      [{var,{2334,21},'Bin0'}]},
     {call,
      {2334,28},
      {remote,{2334,28},{atom,{2334,28},erlang},{atom,{2334,28},is_bitstring}},
      [{var,{2334,41},'Bin1'}]}]],
   [{debug_line,2336,1072},
    {match,
     {2336,5},
     {var,{2336,5},'Bin'},
     {bin,
      {2336,11},
      [{bin_element,{2336,13},{var,{2336,13},'Bin0'},default,[bitstring]},
       {bin_element,{2336,28},{var,{2336,28},'Bin1'},default,[bitstring]}]}},
    {debug_line,2337,1073},
    {match,
     {2337,5},
     {var,{2337,5},'Args'},
     {cons,
      {2337,12},
      {tuple,{2337,13},[{atom,{2337,13},b_literal},{atom,{2337,28},binary}]},
      {cons,
       {2337,36},
       {tuple,
        {2337,36},
        [{atom,{2337,36},b_literal},
         {cons,{2337,51},{integer,{2337,52},1},{nil,{2337,53}}}]},
       {cons,
        {2338,13},
        {tuple,{2338,13},[{atom,{2338,13},b_literal},{var,{2338,28},'Bin'}]},
        {cons,
         {2338,33},
         {tuple,{2338,33},[{atom,{2338,33},b_literal},{atom,{2338,48},all}]},
         {var,{2338,53},'Args0'}}}}}},
    {debug_line,2339,1074},
    {call,
     {2339,5},
     {atom,{2339,5},opt_create_bin_args},
     [{var,{2339,25},'Args'}]}]},
  {clause,
   {2340,1},
   [{cons,
     {2340,21},
     {match,
      {2340,22},
      {tuple,{2340,22},[{atom,{2340,22},b_literal},{var,{2340,37},'Type'}]},
      {var,{2340,43},'Type0'}},
     {cons,
      {2340,49},
      {match,
       {2340,49},
       {tuple,{2340,49},[{atom,{2340,49},b_literal},{var,{2340,64},'UFs'}]},
       {var,{2340,69},'UFs0'}},
      {cons,
       {2340,74},
       {var,{2340,74},'Val'},
       {cons,{2340,78},{var,{2340,78},'Size'},{var,{2340,83},'Args0'}}}}}],
   [],
   [{debug_line,2341,1075},
    {match,
     {2341,5},
     {cons,{2341,5},{var,{2341,6},'Unit'},{var,{2341,11},'Flags'}},
     {var,{2341,20},'UFs'}},
    {debug_line,2342,1076},
    {'case',
     {2342,5},
     {call,
      {2342,10},
      {atom,{2342,10},opt_create_bin_arg},
      [{var,{2342,29},'Type'},
       {var,{2342,35},'Unit'},
       {var,{2342,41},'UFs'},
       {var,{2342,46},'Val'},
       {var,{2342,51},'Size'}]},
     [{clause,
       {2343,9},
       [{atom,{2343,9},not_possible}],
       [],
       [{debug_line,2344,1077},
        {cons,
         {2344,13},
         {var,{2344,14},'Type0'},
         {cons,
          {2344,20},
          {var,{2344,20},'UFs0'},
          {cons,
           {2344,25},
           {var,{2344,25},'Val'},
           {cons,
            {2344,29},
            {var,{2344,29},'Size'},
            {call,
             {2344,34},
             {atom,{2344,34},opt_create_bin_args},
             [{var,{2344,54},'Args0'}]}}}}}]},
      {clause,
       {2345,9},
       [{cons,{2345,9},{var,{2345,10},'Bin'},{nil,{2345,13}}}],
       [[{call,
          {2345,20},
          {remote,
           {2345,20},
           {atom,{2345,20},erlang},
           {atom,{2345,20},is_bitstring}},
          [{var,{2345,33},'Bin'}]}]],
       [{debug_line,2346,1078},
        {match,
         {2346,13},
         {var,{2346,13},'Args'},
         {cons,
          {2346,20},
          {tuple,
           {2346,21},
           [{atom,{2346,21},b_literal},{atom,{2346,36},binary}]},
          {cons,
           {2346,44},
           {tuple,
            {2346,44},
            [{atom,{2346,44},b_literal},
             {cons,{2346,59},{integer,{2346,60},1},{nil,{2346,61}}}]},
           {cons,
            {2347,21},
            {tuple,
             {2347,21},
             [{atom,{2347,21},b_literal},{var,{2347,36},'Bin'}]},
            {cons,
             {2347,41},
             {tuple,
              {2347,41},
              [{atom,{2347,41},b_literal},{atom,{2347,56},all}]},
             {var,{2347,61},'Args0'}}}}}},
        {debug_line,2348,1079},
        {call,
         {2348,13},
         {atom,{2348,13},opt_create_bin_args},
         [{var,{2348,33},'Args'}]}]},
      {clause,
       {2349,9},
       [{cons,
         {2349,9},
         {tuple,
          {2349,10},
          [{atom,{2349,11},int},
           {var,{2349,15},'Int'},
           {var,{2349,19},'IntSize'}]},
         {cons,{2349,28},{var,{2349,28},'Bin'},{nil,{2349,31}}}}],
       [[{call,
          {2349,38},
          {remote,
           {2349,38},
           {atom,{2349,38},erlang},
           {atom,{2349,38},is_bitstring}},
          [{var,{2349,51},'Bin'}]}]],
       [{debug_line,2350,1080},
        {match,
         {2350,13},
         {var,{2350,13},'Args'},
         {cons,
          {2350,20},
          {tuple,
           {2350,21},
           [{atom,{2350,21},b_literal},{atom,{2350,36},integer}]},
          {cons,
           {2350,45},
           {tuple,
            {2350,45},
            [{atom,{2350,45},b_literal},
             {cons,{2350,60},{integer,{2350,61},1},{var,{2350,63},'Flags'}}]},
           {cons,
            {2351,21},
            {tuple,
             {2351,21},
             [{atom,{2351,21},b_literal},{var,{2351,36},'Int'}]},
            {cons,
             {2351,41},
             {tuple,
              {2351,41},
              [{atom,{2351,41},b_literal},{var,{2351,56},'IntSize'}]},
             {cons,
              {2352,21},
              {tuple,
               {2352,21},
               [{atom,{2352,21},b_literal},{atom,{2352,36},binary}]},
              {cons,
               {2352,44},
               {tuple,
                {2352,44},
                [{atom,{2352,44},b_literal},
                 {cons,{2352,59},{integer,{2352,60},1},{nil,{2352,61}}}]},
               {cons,
                {2353,21},
                {tuple,
                 {2353,21},
                 [{atom,{2353,21},b_literal},{var,{2353,36},'Bin'}]},
                {cons,
                 {2353,41},
                 {tuple,
                  {2353,41},
                  [{atom,{2353,41},b_literal},{atom,{2353,56},all}]},
                 {var,{2353,61},'Args0'}}}}}}}}}},
        {debug_line,2354,1081},
        {call,
         {2354,13},
         {atom,{2354,13},opt_create_bin_args},
         [{var,{2354,33},'Args'}]}]}]}]},
  {clause,
   {2356,1},
   [{nil,{2356,21}}],
   [],
   [{debug_line,2356,1082},{nil,{2356,28}}]}]}.
{function,
 {2358,1},
 opt_create_bin_arg,5,
 [{clause,
   {2358,1},
   [{var,{2358,1},'_'},
    {var,{2358,1},'_'},
    {var,{2358,1},'_'},
    {var,{2358,1},'_'},
    {var,{2358,1},'_'}],
   [[{call,
      {2358,1},
      {remote,{2358,1},{atom,{2358,1},fake},{atom,{2358,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2358,1083},{atom,{2358,1},ignore}]},
  {clause,
   {2358,1},
   [{atom,{2358,20},binary},
    {var,{2358,28},'Unit'},
    {var,{2358,34},'_Flags'},
    {tuple,{2358,42},[{atom,{2358,42},b_literal},{var,{2358,57},'Val'}]},
    {tuple,{2358,63},[{atom,{2358,63},b_literal},{atom,{2358,78},all}]}],
   [[{op,{2359,13},'=/=',{var,{2359,8},'Unit'},{integer,{2359,17},1}},
     {op,
      {2359,43},
      '=:=',
      {op,
       {2359,34},
       'rem',
       {call,
        {2359,20},
        {remote,{2359,20},{atom,{2359,20},erlang},{atom,{2359,20},bit_size}},
        [{var,{2359,29},'Val'}]},
       {var,{2359,38},'Unit'}},
      {integer,{2359,47},0}}]],
   [{debug_line,2360,1084},
    {cons,{2360,5},{var,{2360,6},'Val'},{nil,{2360,9}}}]},
  {clause,
   {2361,1},
   [{var,{2361,20},'Type'},
    {var,{2361,26},'Unit'},
    {var,{2361,32},'Flags'},
    {tuple,{2361,39},[{atom,{2361,39},b_literal},{var,{2361,54},'Val'}]},
    {tuple,{2361,60},[{atom,{2361,60},b_literal},{var,{2361,75},'Size'}]}],
   [[{call,
      {2362,8},
      {remote,{2362,8},{atom,{2362,8},erlang},{atom,{2362,8},is_integer}},
      [{var,{2362,19},'Size'}]},
     {call,
      {2362,26},
      {remote,{2362,26},{atom,{2362,26},erlang},{atom,{2362,26},is_integer}},
      [{var,{2362,37},'Unit'}]}]],
   [{debug_line,2363,1085},
    {match,
     {2363,5},
     {var,{2363,5},'EffectiveSize'},
     {op,{2363,26},'*',{var,{2363,21},'Size'},{var,{2363,28},'Unit'}}},
    {debug_line,2364,1086},
    {'if',
     {2364,5},
     [{clause,
       {2365,9},
       [],
       [[{op,
          {2365,23},
          '>',
          {var,{2365,9},'EffectiveSize'},
          {op,{2365,28},'bsl',{integer,{2365,26},1},{integer,{2365,32},24}}}]],
       [{debug_line,2372,1087},{atom,{2372,13},not_possible}]},
      {clause,
       {2373,9},
       [],
       [[{op,
          {2373,23},
          '>',
          {var,{2373,9},'EffectiveSize'},
          {integer,{2373,25},0}},
         {op,
          {2373,42},
          '=<',
          {var,{2373,28},'EffectiveSize'},
          {op,{2373,48},'bsl',{integer,{2373,46},1},{integer,{2373,52},24}}}]],
       [{debug_line,2374,1088},
        {'case',
         {2374,13},
         {tuple,
          {2374,18},
          [{var,{2374,19},'Type'},
           {call,
            {2374,24},
            {atom,{2374,24},opt_create_bin_endian},
            [{var,{2374,46},'Flags'}]}]},
         [{clause,
           {2375,17},
           [{tuple,{2375,17},[{atom,{2375,18},integer},{atom,{2375,26},big}]}],
           [[{call,
              {2375,36},
              {remote,
               {2375,36},
               {atom,{2375,36},erlang},
               {atom,{2375,36},is_integer}},
              [{var,{2375,47},'Val'}]}]],
           [{debug_line,2376,1089},
            {'if',
             {2376,21},
             [{clause,
               {2377,25},
               [],
               [[{op,
                  {2377,39},
                  '<',
                  {var,{2377,25},'EffectiveSize'},
                  {integer,{2377,41},64}}]],
               [{debug_line,2378,1090},
                {cons,
                 {2378,29},
                 {bin,
                  {2378,30},
                  [{bin_element,
                    {2378,32},
                    {var,{2378,32},'Val'},
                    {var,{2378,36},'EffectiveSize'},
                    default}]},
                 {nil,{2378,51}}}]},
              {clause,
               {2379,25},
               [],
               [[{atom,{2379,25},true}]],
               [{debug_line,2380,1091},
                {call,
                 {2380,29},
                 {atom,{2380,29},opt_bs_put_split_int},
                 [{var,{2380,50},'Val'},
                  {var,{2380,55},'EffectiveSize'}]}]}]}]},
          {clause,
           {2382,17},
           [{tuple,
             {2382,17},
             [{atom,{2382,18},integer},{atom,{2382,26},little}]}],
           [[{call,
              {2382,39},
              {remote,
               {2382,39},
               {atom,{2382,39},erlang},
               {atom,{2382,39},is_integer}},
              [{var,{2382,50},'Val'}]},
             {op,
              {2382,70},
              '<',
              {var,{2382,56},'EffectiveSize'},
              {integer,{2382,72},128}}]],
           [{debug_line,2385,1092},
            {match,
             {2385,21},
             {bin,
              {2385,21},
              [{bin_element,
                {2385,23},
                {var,{2385,23},'Int'},
                {var,{2385,27},'EffectiveSize'},
                default}]},
             {bin,
              {2385,45},
              [{bin_element,
                {2385,47},
                {var,{2385,47},'Val'},
                {var,{2385,51},'EffectiveSize'},
                [little]}]}},
            {debug_line,2386,1093},
            {call,
             {2386,21},
             {atom,{2386,21},opt_create_bin_arg},
             [{var,{2386,40},'Type'},
              {integer,{2386,46},1},
              {nil,{2386,49}},
              {block,0,
               [{tuple,
                 {2386,53},
                 [{atom,{2386,53},b_literal},{var,{2386,68},'Int'}]}]},
              {block,0,
               [{debug_line,2387,1094},
                {tuple,
                 {2387,40},
                 [{atom,{2387,40},b_literal},
                  {var,{2387,55},'EffectiveSize'}]}]}]}]},
          {clause,
           {2388,17},
           [{tuple,{2388,17},[{atom,{2388,18},binary},{var,{2388,25},'_'}]}],
           [[{call,
              {2388,33},
              {remote,
               {2388,33},
               {atom,{2388,33},erlang},
               {atom,{2388,33},is_bitstring}},
              [{var,{2388,46},'Val'}]}]],
           [{debug_line,2389,1095},
            {'case',
             {2389,21},
             {var,{2389,26},'Val'},
             [{clause,
               {2390,25},
               [{bin,
                 {2390,25},
                 [{bin_element,
                   {2390,27},
                   {var,{2390,27},'Bitstring'},
                   {var,{2390,37},'EffectiveSize'},
                   [bits]},
                  {bin_element,
                   {2390,56},
                   {var,{2390,56},'_'},
                   default,
                   [bits]}]}],
               [],
               [{debug_line,2391,1096},
                {cons,{2391,29},{var,{2391,30},'Bitstring'},{nil,{2391,39}}}]},
              {clause,
               {2392,25},
               [{var,{2392,25},'_'}],
               [],
               [{debug_line,2394,1097},{atom,{2394,29},not_possible}]}]}]},
          {clause,
           {2396,17},
           [{tuple,
             {2396,17},
             [{atom,{2396,18},float},{var,{2396,24},'Endian'}]}],
           [],
           [{debug_line,2397,1098},
            {'try',
             {2397,21},
             [{debug_line,2398,1099},
              {'case',
               {2398,25},
               {var,{2398,30},'Endian'},
               [{clause,
                 {2399,29},
                 [{atom,{2399,29},big}],
                 [],
                 [{debug_line,2400,1100},
                  {cons,
                   {2400,33},
                   {bin,
                    {2400,34},
                    [{bin_element,
                      {2400,36},
                      {var,{2400,36},'Val'},
                      {var,{2400,40},'EffectiveSize'},
                      [big,float,{unit,1}]}]},
                   {nil,{2400,72}}}]},
                {clause,
                 {2401,29},
                 [{atom,{2401,29},little}],
                 [],
                 [{debug_line,2402,1101},
                  {cons,
                   {2402,33},
                   {bin,
                    {2402,34},
                    [{bin_element,
                      {2402,36},
                      {var,{2402,36},'Val'},
                      {var,{2402,40},'EffectiveSize'},
                      [little,float,{unit,1}]}]},
                   {nil,{2402,75}}}]}]}],
             [],
             [{clause,
               {2405,25},
               [{tuple,
                 {2405,25},
                 [{atom,{2405,25},error},
                  {var,{2405,31},'_'},
                  {var,{2405,31},'_'}]}],
               [],
               [{debug_line,2406,1102},{atom,{2406,29},not_possible}]}],
             []}]},
          {clause,
           {2408,17},
           [{tuple,{2408,17},[{var,{2408,18},'_'},{var,{2408,20},'_'}]}],
           [],
           [{debug_line,2409,1103},{atom,{2409,21},not_possible}]}]}]},
      {clause,
       {2411,9},
       [],
       [[{atom,{2411,9},true}]],
       [{debug_line,2412,1104},{atom,{2412,13},not_possible}]}]}]},
  {clause,
   {2414,1},
   [{var,{2414,20},'_'},
    {var,{2414,23},'_'},
    {var,{2414,26},'_'},
    {var,{2414,29},'_'},
    {var,{2414,32},'_'}],
   [],
   [{debug_line,2414,1105},{atom,{2414,38},not_possible}]}]}.
{function,{2416,1},
          opt_create_bin_endian,1,
          [{clause,{2416,1},
                   [{var,{2416,1},'_'}],
                   [[{call,{2416,1},
                           {remote,{2416,1},
                                   {atom,{2416,1},fake},
                                   {atom,{2416,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2416,1106},{atom,{2416,1},ignore}]},
           {clause,{2416,1},
                   [{cons,{2416,23},
                          {match,{2416,24},
                                 {atom,{2416,24},little},
                                 {var,{2416,31},'E'}},
                          {var,{2416,33},'_'}}],
                   [],
                   [{debug_line,2416,1107},{var,{2416,40},'E'}]},
           {clause,{2417,1},
                   [{cons,{2417,23},
                          {match,{2417,24},
                                 {atom,{2417,24},native},
                                 {var,{2417,31},'E'}},
                          {var,{2417,33},'_'}}],
                   [],
                   [{debug_line,2417,1108},{var,{2417,40},'E'}]},
           {clause,{2418,1},
                   [{cons,{2418,23},{var,{2418,24},'_'},{var,{2418,26},'Fs'}}],
                   [],
                   [{debug_line,2418,1109},
                    {call,{2418,34},
                          {atom,{2418,34},opt_create_bin_endian},
                          [{var,{2418,56},'Fs'}]}]},
           {clause,{2419,1},
                   [{nil,{2419,23}}],
                   [],
                   [{debug_line,2419,1110},{atom,{2419,30},big}]}]}.
{function,
    {2421,1},
    opt_bs_put_split_int,2,
    [{clause,
         {2421,1},
         [{var,{2421,1},'_'},{var,{2421,1},'_'}],
         [[{call,
               {2421,1},
               {remote,
                   {2421,1},
                   {atom,{2421,1},fake},
                   {atom,{2421,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2421,1111},{atom,{2421,1},ignore}]},
     {clause,
         {2421,1},
         [{var,{2421,22},'Int'},{var,{2421,27},'Size'}],
         [],
         [{debug_line,2422,1112},
          {match,
              {2422,5},
              {var,{2422,5},'Pos'},
              {call,
                  {2422,11},
                  {atom,{2422,11},opt_bs_put_split_int_1},
                  [{var,{2422,34},'Int'},
                   {integer,{2422,39},0},
                   {block,0,
                       [{op,{2422,47},
                            '-',
                            {var,{2422,42},'Size'},
                            {integer,{2422,49},1}}]}]}},
          {debug_line,2423,1113},
          {match,
              {2423,5},
              {var,{2423,5},'UpperSize'},
              {op,{2423,22},'-',{var,{2423,17},'Size'},{var,{2423,24},'Pos'}}},
          {debug_line,2424,1114},
          {'if',
              {2424,5},
              [{clause,
                   {2425,9},
                   [],
                   [[{op,{2425,13},
                         '=:=',
                         {var,{2425,9},'Pos'},
                         {integer,{2425,17},0}}]],
                   [{debug_line,2427,1115},{atom,{2427,13},not_possible}]},
               {clause,
                   {2428,9},
                   [],
                   [[{op,{2428,19},
                         '<',
                         {var,{2428,9},'UpperSize'},
                         {integer,{2428,21},64}}]],
                   [{debug_line,2430,1116},
                    {cons,
                        {2430,13},
                        {bin,
                            {2430,14},
                            [{bin_element,
                                 {2430,16},
                                 {var,{2430,16},'Int'},
                                 {var,{2430,20},'Size'},
                                 default}]},
                        {nil,{2430,26}}}]},
               {clause,
                   {2431,9},
                   [],
                   [[{atom,{2431,9},true}]],
                   [{debug_line,2435,1117},
                    {cons,
                        {2435,13},
                        {tuple,
                            {2435,14},
                            [{atom,{2435,15},int},
                             {op,{2435,23},
                                 'bsr',
                                 {var,{2435,19},'Int'},
                                 {var,{2435,27},'Pos'}},
                             {var,{2435,31},'UpperSize'}]},
                        {cons,
                            {2435,42},
                            {bin,
                                {2435,42},
                                [{bin_element,
                                     {2435,44},
                                     {var,{2435,44},'Int'},
                                     {var,{2435,48},'Pos'},
                                     default}]},
                            {nil,{2435,53}}}}]}]}]}]}.
{function,
    {2438,1},
    opt_bs_put_split_int_1,3,
    [{clause,
         {2438,1},
         [{var,{2438,1},'_'},{var,{2438,1},'_'},{var,{2438,1},'_'}],
         [[{call,
               {2438,1},
               {remote,
                   {2438,1},
                   {atom,{2438,1},fake},
                   {atom,{2438,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2438,1118},{atom,{2438,1},ignore}]},
     {clause,
         {2438,1},
         [{var,{2438,24},'_Int'},{var,{2438,30},'L'},{var,{2438,33},'R'}],
         [[{op,{2438,43},'>',{var,{2438,41},'L'},{var,{2438,45},'R'}}]],
         [{debug_line,2439,1119},
          {op,{2439,7},
              '*',
              {integer,{2439,5},8},
              {op,{2439,18},
                  'div',
                  {op,{2439,13},'+',{var,{2439,11},'L'},{integer,{2439,15},7}},
                  {integer,{2439,22},8}}}]},
     {clause,
         {2440,1},
         [{var,{2440,24},'Int'},{var,{2440,29},'L'},{var,{2440,32},'R'}],
         [],
         [{debug_line,2441,1120},
          {match,
              {2441,5},
              {var,{2441,5},'Mid'},
              {op,{2441,19},
                  'div',
                  {op,{2441,14},'+',{var,{2441,12},'L'},{var,{2441,16},'R'}},
                  {integer,{2441,23},2}}},
          {debug_line,2442,1121},
          {'case',
              {2442,5},
              {op,{2442,14},'bsr',{var,{2442,10},'Int'},{var,{2442,18},'Mid'}},
              [{clause,
                   {2443,9},
                   [{var,{2443,9},'Upper'}],
                   [[{op,{2443,26},
                         '=:=',
                         {var,{2443,20},'Upper'},
                         {integer,{2443,30},0}}],
                    [{op,{2443,39},
                         '=:=',
                         {var,{2443,33},'Upper'},
                         {op,{2443,43},'-',{integer,{2443,44},1}}}]],
                   [{debug_line,2444,1122},
                    {call,
                        {2444,13},
                        {atom,{2444,13},opt_bs_put_split_int_1},
                        [{var,{2444,36},'Int'},
                         {var,{2444,41},'L'},
                         {block,0,
                             [{op,{2444,48},
                                  '-',
                                  {var,{2444,44},'Mid'},
                                  {integer,{2444,50},1}}]}]}]},
               {clause,
                   {2445,9},
                   [{var,{2445,9},'_'}],
                   [],
                   [{debug_line,2446,1123},
                    {call,
                        {2446,13},
                        {atom,{2446,13},opt_bs_put_split_int_1},
                        [{var,{2446,36},'Int'},
                         {block,0,
                             [{op,{2446,45},
                                  '+',
                                  {var,{2446,41},'Mid'},
                                  {integer,{2446,47},1}}]},
                         {var,{2446,50},'R'}]}]}]}]}]}.
{function,
 {2509,1},
 ssa_opt_tuple_size,1,
 [{clause,
   {2509,1},
   [{var,{2509,1},'_'}],
   [[{call,
      {2509,1},
      {remote,{2509,1},{atom,{2509,1},fake},{atom,{2509,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2509,1124},{atom,{2509,1},ignore}]},
  {clause,
   {2509,1},
   [{tuple,
     {2509,20},
     [{match,
       {2509,21},
       {tuple,
        {2509,21},
        [{atom,{2509,21},opt_st},
         {var,{2509,33},'Linear0'},
         {var,{2509,21},'_'},
         {var,{2509,45},'Count0'},
         {var,{2509,21},'_'}]},
       {var,{2509,53},'St'}},
      {var,{2509,57},'FuncDb'}]}],
   [],
   [{debug_line,2512,1125},
    {match,
     {2512,5},
     {var,{2512,5},'NonGuards'},
     {call,{2512,17},{atom,{2512,17},non_guards},[{var,{2512,28},'Linear0'}]}},
    {debug_line,2513,1126},
    {match,
     {2513,5},
     {tuple,{2513,5},[{var,{2513,6},'Linear'},{var,{2513,13},'Count'}]},
     {call,
      {2513,22},
      {atom,{2513,22},opt_tup_size},
      [{var,{2513,35},'Linear0'},
       {var,{2513,44},'NonGuards'},
       {var,{2513,55},'Count0'},
       {nil,{2513,63}}]}},
    {debug_line,2514,1127},
    {tuple,
     {2514,5},
     [{block,
       {2514,6},
       [{match,{2514,6},{var,{2514,6},rec135},{var,{2514,6},'St'}},
        {'case',
         {2514,16},
         {var,{2514,6},rec135},
         [{clause,
           {2514,16},
           [{tuple,
             {2514,16},
             [{atom,{2514,16},opt_st},
              {var,{2514,16},'_'},
              {var,{2514,16},'_'},
              {var,{2514,16},'_'},
              {var,{2514,16},'_'}]}],
           [],
           [{call,
             {2514,16},
             {remote,
              {2514,16},
              {atom,{2514,16},erlang},
              {atom,{2514,16},setelement}},
             [{integer,{2514,16},2},
              {call,
               {2514,27},
               {remote,
                {2514,27},
                {atom,{2514,27},erlang},
                {atom,{2514,27},setelement}},
               [{integer,{2514,27},4},
                {var,{2514,6},rec135},
                {var,{2514,31},'Count'}]},
              {var,{2514,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{2514,16}}],
           [{var,[{generated,true},{location,{2514,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2514,16}}],
             {remote,
              [{generated,true},{location,{2514,16}}],
              {atom,[{generated,true},{location,{2514,16}}],erlang},
              {atom,[{generated,true},{location,{2514,16}}],error}},
             [{tuple,
               [{generated,true},{location,{2514,16}}],
               [{atom,[{generated,true},{location,{2514,16}}],badrecord},
                {var,{2514,6},rec135}]}]}]}]}]},
      {var,{2514,39},'FuncDb'}]}]}]}.
{function,
 {2516,1},
 opt_tup_size,4,
 [{clause,
   {2516,1},
   [{var,{2516,1},'_'},
    {var,{2516,1},'_'},
    {var,{2516,1},'_'},
    {var,{2516,1},'_'}],
   [[{call,
      {2516,1},
      {remote,{2516,1},{atom,{2516,1},fake},{atom,{2516,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2516,1128},{atom,{2516,1},ignore}]},
  {clause,
   {2516,1},
   [{cons,
     {2516,14},
     {tuple,
      {2516,15},
      [{var,{2516,16},'L'},
       {match,
        {2516,18},
        {tuple,
         {2516,18},
         [{atom,{2516,18},b_blk},
          {var,{2516,18},'_'},
          {var,{2516,28},'Is'},
          {var,{2516,36},'Last'}]},
        {var,{2516,42},'Blk'}}]},
     {var,{2516,47},'Bs'}},
    {var,{2516,52},'NonGuards'},
    {var,{2516,63},'Count0'},
    {var,{2516,71},'Acc0'}],
   [],
   [{debug_line,2517,1129},
    {'case',
     {2517,5},
     {tuple,{2517,10},[{var,{2517,11},'Is'},{var,{2517,14},'Last'}]},
     [{clause,
       {2518,9},
       [{tuple,
         {2518,9},
         [{cons,
           {2518,10},
           {tuple,
            {2518,11},
            [{atom,{2518,11},b_set},
             {var,{2518,11},'_'},
             {var,{2518,37},'Bool'},
             {tuple,{2518,21},[{atom,{2518,22},bif},{atom,{2518,26},'=:='}]},
             {cons,
              {2518,47},
              {match,
               {2518,48},
               {tuple,{2518,48},[{atom,{2518,48},b_var},{var,{2518,48},'_'}]},
               {var,{2518,57},'Tup'}},
              {cons,
               {2518,61},
               {tuple,
                {2518,61},
                [{atom,{2518,61},b_literal},{var,{2518,76},'Arity'}]},
               {nil,{2518,82}}}}]},
           {nil,{2518,84}}},
          {tuple,
           {2519,10},
           [{atom,{2519,10},b_br},
            {var,{2519,10},'_'},
            {var,{2519,21},'Bool'},
            {var,{2519,10},'_'},
            {var,{2519,10},'_'}]}]}],
       [[{call,
          {2519,33},
          {remote,
           {2519,33},
           {atom,{2519,33},erlang},
           {atom,{2519,33},is_integer}},
          [{var,{2519,44},'Arity'}]},
         {op,{2519,58},'>=',{var,{2519,52},'Arity'},{integer,{2519,61},0}}]],
       [{debug_line,2520,1130},
        {match,
         {2520,13},
         {tuple,{2520,13},[{var,{2520,14},'Acc'},{var,{2520,18},'Count'}]},
         {call,
          {2520,27},
          {atom,{2520,27},opt_tup_size_1},
          [{var,{2520,42},'Tup'},
           {var,{2520,47},'L'},
           {var,{2520,50},'NonGuards'},
           {var,{2520,61},'Count0'},
           {var,{2520,69},'Acc0'}]}},
        {debug_line,2521,1131},
        {call,
         {2521,13},
         {atom,{2521,13},opt_tup_size},
         [{var,{2521,26},'Bs'},
          {var,{2521,30},'NonGuards'},
          {var,{2521,41},'Count'},
          {block,0,
           [{cons,
             {2521,48},
             {tuple,{2521,49},[{var,{2521,50},'L'},{var,{2521,52},'Blk'}]},
             {var,{2521,57},'Acc'}}]}]}]},
      {clause,
       {2522,9},
       [{tuple,{2522,9},[{var,{2522,10},'_'},{var,{2522,12},'_'}]}],
       [],
       [{debug_line,2523,1132},
        {call,
         {2523,13},
         {atom,{2523,13},opt_tup_size},
         [{var,{2523,26},'Bs'},
          {var,{2523,30},'NonGuards'},
          {var,{2523,41},'Count0'},
          {block,0,
           [{cons,
             {2523,49},
             {tuple,{2523,50},[{var,{2523,51},'L'},{var,{2523,53},'Blk'}]},
             {var,{2523,58},'Acc0'}}]}]}]}]}]},
  {clause,
   {2525,1},
   [{nil,{2525,14}},
    {var,{2525,18},'_NonGuards'},
    {var,{2525,30},'Count'},
    {var,{2525,37},'Acc'}],
   [],
   [{debug_line,2526,1133},
    {tuple,
     {2526,5},
     [{call,
       {2526,6},
       {remote,{2526,6},{atom,{2526,6},lists},{atom,{2526,6},reverse}},
       [{var,{2526,14},'Acc'}]},
      {var,{2526,19},'Count'}]}]}]}.
{function,
 {2528,1},
 opt_tup_size_1,5,
 [{clause,
   {2528,1},
   [{var,{2528,1},'_'},
    {var,{2528,1},'_'},
    {var,{2528,1},'_'},
    {var,{2528,1},'_'},
    {var,{2528,1},'_'}],
   [[{call,
      {2528,1},
      {remote,{2528,1},{atom,{2528,1},fake},{atom,{2528,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2528,1134},{atom,{2528,1},ignore}]},
  {clause,
   {2528,1},
   [{var,{2528,16},'Size'},
    {var,{2528,22},'EqL'},
    {var,{2528,27},'NonGuards'},
    {var,{2528,38},'Count0'},
    {cons,
     {2528,46},
     {tuple,{2528,47},[{var,{2528,48},'L'},{var,{2528,50},'Blk0'}]},
     {var,{2528,56},'Acc'}}],
   [],
   [{debug_line,2529,1135},
    {match,
     {2529,5},
     {tuple,
      {2529,5},
      [{atom,{2529,5},b_blk},
       {var,{2529,5},'_'},
       {var,{2529,15},'Is0'},
       {var,{2529,24},'Last'}]},
     {var,{2529,32},'Blk0'}},
    {debug_line,2530,1136},
    {'case',
     {2530,5},
     {var,{2530,10},'Last'},
     [{clause,
       {2531,9},
       [{tuple,
         {2531,9},
         [{atom,{2531,9},b_br},
          {var,{2531,9},'_'},
          {var,{2531,20},'Bool'},
          {var,{2531,30},'EqL'},
          {var,{2531,39},'Fail'}]}],
       [],
       [{debug_line,2532,1137},
        {'case',
         {2532,13},
         {call,
          {2532,18},
          {remote,
           {2532,25},
           {atom,{2532,18},gb_sets},
           {atom,{2532,26},is_member}},
          [{var,{2532,36},'Fail'},{var,{2532,42},'NonGuards'}]},
         [{clause,
           {2533,17},
           [{atom,{2533,17},true}],
           [],
           [{debug_line,2534,1138},
            {tuple,
             {2534,21},
             [{cons,
               {2534,22},
               {tuple,{2534,23},[{var,{2534,24},'L'},{var,{2534,26},'Blk0'}]},
               {var,{2534,32},'Acc'}},
              {var,{2534,37},'Count0'}]}]},
          {clause,
           {2535,17},
           [{atom,{2535,17},false}],
           [],
           [{debug_line,2536,1139},
            {'case',
             {2536,21},
             {call,
              {2536,26},
              {atom,{2536,26},opt_tup_size_is},
              [{var,{2536,42},'Is0'},
               {var,{2536,47},'Bool'},
               {var,{2536,53},'Size'},
               {nil,{2536,59}}]},
             [{clause,
               {2537,25},
               [{atom,{2537,25},none}],
               [],
               [{debug_line,2538,1140},
                {tuple,
                 {2538,29},
                 [{cons,
                   {2538,30},
                   {tuple,
                    {2538,31},
                    [{var,{2538,32},'L'},{var,{2538,34},'Blk0'}]},
                   {var,{2538,40},'Acc'}},
                  {var,{2538,45},'Count0'}]}]},
              {clause,
               {2539,25},
               [{tuple,
                 {2539,25},
                 [{var,{2539,26},'PreIs'},
                  {var,{2539,32},'TupleSizeIs'},
                  {var,{2539,44},'Tuple'}]}],
               [],
               [{debug_line,2540,1141},
                {call,
                 {2540,29},
                 {atom,{2540,29},opt_tup_size_2},
                 [{var,{2540,44},'PreIs'},
                  {var,{2540,51},'TupleSizeIs'},
                  {var,{2540,64},'L'},
                  {var,{2540,67},'EqL'},
                  {var,{2541,44},'Tuple'},
                  {var,{2541,51},'Fail'},
                  {var,{2541,57},'Count0'},
                  {var,{2541,65},'Acc'}]}]}]}]}]}]},
      {clause,
       {2544,9},
       [{var,{2544,9},'_'}],
       [],
       [{debug_line,2545,1142},
        {tuple,
         {2545,13},
         [{cons,
           {2545,14},
           {tuple,{2545,15},[{var,{2545,16},'L'},{var,{2545,18},'Blk0'}]},
           {var,{2545,24},'Acc'}},
          {var,{2545,29},'Count0'}]}]}]}]},
  {clause,
   {2547,1},
   [{var,{2547,16},'_'},
    {var,{2547,19},'_'},
    {var,{2547,22},'_'},
    {var,{2547,25},'Count'},
    {var,{2547,32},'Acc'}],
   [],
   [{debug_line,2548,1143},
    {tuple,{2548,5},[{var,{2548,6},'Acc'},{var,{2548,10},'Count'}]}]}]}.
{function,
    {2550,1},
    opt_tup_size_2,8,
    [{clause,
         {2550,1},
         [{var,{2550,1},'_'},
          {var,{2550,1},'_'},
          {var,{2550,1},'_'},
          {var,{2550,1},'_'},
          {var,{2550,1},'_'},
          {var,{2550,1},'_'},
          {var,{2550,1},'_'},
          {var,{2550,1},'_'}],
         [[{call,
               {2550,1},
               {remote,
                   {2550,1},
                   {atom,{2550,1},fake},
                   {atom,{2550,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2550,1144},{atom,{2550,1},ignore}]},
     {clause,
         {2550,1},
         [{var,{2550,16},'PreIs'},
          {var,{2550,23},'TupleSizeIs'},
          {var,{2550,36},'PreL'},
          {var,{2550,42},'EqL'},
          {var,{2550,47},'Tuple'},
          {var,{2550,54},'Fail'},
          {var,{2550,60},'Count0'},
          {var,{2550,68},'Acc'}],
         [],
         [{debug_line,2551,1145},
          {match,{2551,5},{var,{2551,5},'IsTupleL'},{var,{2551,16},'Count0'}},
          {debug_line,2552,1146},
          {match,
              {2552,5},
              {var,{2552,5},'TupleSizeL'},
              {op,{2552,25},
                  '+',
                  {var,{2552,18},'Count0'},
                  {integer,{2552,27},1}}},
          {debug_line,2553,1147},
          {match,
              {2553,5},
              {var,{2553,5},'Bool'},
              {tuple,
                  {2553,12},
                  [{atom,{2553,12},b_var},
                   {op,{2553,30},
                       '+',
                       {var,{2553,24},'Count0'},
                       {integer,{2553,31},2}}]}},
          {debug_line,2554,1148},
          {match,
              {2554,5},
              {var,{2554,5},'Count'},
              {op,{2554,20},
                  '+',
                  {var,{2554,13},'Count0'},
                  {integer,{2554,22},3}}},
          {debug_line,2556,1149},
          {match,
              {2556,5},
              {var,{2556,5},'True'},
              {tuple,
                  {2556,12},
                  [{atom,{2556,12},b_literal},{atom,{2556,27},true}]}},
          {debug_line,2557,1150},
          {match,
              {2557,5},
              {var,{2557,5},'PreBr'},
              {tuple,
                  {2557,13},
                  [{atom,{2557,13},b_br},
                   {map,{2557,13},[]},
                   {var,{2557,24},'True'},
                   {var,{2557,34},'IsTupleL'},
                   {var,{2557,48},'IsTupleL'}]}},
          {debug_line,2558,1151},
          {match,
              {2558,5},
              {var,{2558,5},'PreBlk'},
              {tuple,
                  {2558,14},
                  [{atom,{2558,14},b_blk},
                   {map,{2558,14},[]},
                   {var,{2558,24},'PreIs'},
                   {var,{2558,35},'PreBr'}]}},
          {debug_line,2560,1152},
          {match,
              {2560,5},
              {var,{2560,5},'IsTupleIs'},
              {cons,
                  {2560,17},
                  {tuple,
                      {2560,18},
                      [{atom,{2560,18},b_set},
                       {map,{2560,18},[]},
                       {var,{2560,47},'Bool'},
                       {tuple,
                           {2560,28},
                           [{atom,{2560,29},bif},{atom,{2560,33},is_tuple}]},
                       {cons,
                           {2560,57},
                           {var,{2560,58},'Tuple'},
                           {nil,{2560,63}}}]},
                  {nil,{2560,65}}}},
          {debug_line,2561,1153},
          {match,
              {2561,5},
              {var,{2561,5},'IsTupleBr'},
              {tuple,
                  {2561,17},
                  [{atom,{2561,17},b_br},
                   {map,{2561,17},[]},
                   {var,{2561,28},'Bool'},
                   {var,{2561,38},'TupleSizeL'},
                   {var,{2561,54},'Fail'}]}},
          {debug_line,2562,1154},
          {match,
              {2562,5},
              {var,{2562,5},'IsTupleBlk'},
              {tuple,
                  {2562,18},
                  [{atom,{2562,18},b_blk},
                   {map,{2562,18},[]},
                   {var,{2562,28},'IsTupleIs'},
                   {var,{2562,43},'IsTupleBr'}]}},
          {debug_line,2564,1155},
          {match,
              {2564,5},
              {var,{2564,5},'TupleSizeBr'},
              {tuple,
                  {2564,19},
                  [{atom,{2564,19},b_br},
                   {map,{2564,19},[]},
                   {var,{2564,30},'True'},
                   {var,{2564,40},'EqL'},
                   {var,{2564,49},'EqL'}]}},
          {debug_line,2565,1156},
          {match,
              {2565,5},
              {var,{2565,5},'TupleSizeBlk'},
              {tuple,
                  {2565,20},
                  [{atom,{2565,20},b_blk},
                   {map,{2565,20},[]},
                   {var,{2565,30},'TupleSizeIs'},
                   {var,{2565,47},'TupleSizeBr'}]}},
          {debug_line,2566,1157},
          {tuple,
              {2566,5},
              [{cons,
                   {2566,6},
                   {tuple,
                       {2566,7},
                       [{var,{2566,8},'TupleSizeL'},
                        {var,{2566,19},'TupleSizeBlk'}]},
                   {cons,
                       {2567,7},
                       {tuple,
                           {2567,7},
                           [{var,{2567,8},'IsTupleL'},
                            {var,{2567,17},'IsTupleBlk'}]},
                       {cons,
                           {2568,7},
                           {tuple,
                               {2568,7},
                               [{var,{2568,8},'PreL'},
                                {var,{2568,13},'PreBlk'}]},
                           {var,{2568,21},'Acc'}}}},
               {var,{2568,26},'Count'}]}]}]}.
{function,
    {2570,1},
    opt_tup_size_is,4,
    [{clause,
         {2570,1},
         [{var,{2570,1},'_'},
          {var,{2570,1},'_'},
          {var,{2570,1},'_'},
          {var,{2570,1},'_'}],
         [[{call,
               {2570,1},
               {remote,
                   {2570,1},
                   {atom,{2570,1},fake},
                   {atom,{2570,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2570,1158},{atom,{2570,1},ignore}]},
     {clause,
         {2570,1},
         [{cons,
              {2570,17},
              {match,
                  {2570,18},
                  {tuple,
                      {2570,18},
                      [{atom,{2570,18},b_set},
                       {var,{2570,18},'_'},
                       {var,{2570,49},'Size'},
                       {tuple,
                           {2570,28},
                           [{atom,{2570,29},bif},{atom,{2570,33},tuple_size}]},
                       {cons,
                           {2570,59},
                           {var,{2570,60},'Tuple'},
                           {nil,{2570,65}}}]},
                  {var,{2570,68},'I'}},
              {cons,
                  {2571,18},
                  {tuple,
                      {2571,18},
                      [{atom,{2571,18},b_set},
                       {var,{2571,18},'_'},
                       {var,{2571,46},'Bool'},
                       {tuple,
                           {2571,28},
                           [{atom,{2571,29},succeeded},{var,{2571,39},'_'}]},
                       {cons,
                           {2571,56},
                           {var,{2571,57},'Size'},
                           {nil,{2571,61}}}]},
                  {nil,{2571,63}}}},
          {var,{2572,17},'Bool'},
          {var,{2572,23},'Size'},
          {var,{2572,29},'Acc'}],
         [],
         [{debug_line,2573,1159},
          {tuple,
              {2573,5},
              [{call,
                   {2573,6},
                   {remote,
                       {2573,6},
                       {atom,{2573,6},lists},
                       {atom,{2573,6},reverse}},
                   [{var,{2573,14},'Acc'}]},
               {cons,{2573,19},{var,{2573,20},'I'},{nil,{2573,21}}},
               {var,{2573,23},'Tuple'}]}]},
     {clause,
         {2574,1},
         [{cons,{2574,17},{var,{2574,18},'I'},{var,{2574,20},'Is'}},
          {var,{2574,25},'Bool'},
          {var,{2574,31},'Size'},
          {var,{2574,37},'Acc'}],
         [],
         [{debug_line,2575,1160},
          {call,
              {2575,5},
              {atom,{2575,5},opt_tup_size_is},
              [{var,{2575,21},'Is'},
               {var,{2575,25},'Bool'},
               {var,{2575,31},'Size'},
               {block,0,
                   [{cons,
                        {2575,37},
                        {var,{2575,38},'I'},
                        {var,{2575,40},'Acc'}}]}]}]},
     {clause,
         {2576,1},
         [{nil,{2576,17}},
          {var,{2576,21},'_'},
          {var,{2576,24},'_'},
          {var,{2576,27},'_Acc'}],
         [],
         [{debug_line,2576,1161},{atom,{2576,36},none}]}]}.
{function,
 {2586,1},
 ssa_opt_sw,1,
 [{clause,
   {2586,1},
   [{var,{2586,1},'_'}],
   [[{call,
      {2586,1},
      {remote,{2586,1},{atom,{2586,1},fake},{atom,{2586,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2586,1162},{atom,{2586,1},ignore}]},
  {clause,
   {2586,1},
   [{tuple,
     {2586,12},
     [{match,
       {2586,13},
       {tuple,
        {2586,13},
        [{atom,{2586,13},opt_st},
         {var,{2586,25},'Linear0'},
         {var,{2586,13},'_'},
         {var,{2586,37},'Count0'},
         {var,{2586,13},'_'}]},
       {var,{2586,45},'St'}},
      {var,{2586,49},'FuncDb'}]}],
   [],
   [{debug_line,2587,1163},
    {match,
     {2587,5},
     {tuple,{2587,5},[{var,{2587,6},'Linear'},{var,{2587,13},'Count'}]},
     {call,
      {2587,22},
      {atom,{2587,22},opt_sw},
      [{var,{2587,29},'Linear0'},{var,{2587,38},'Count0'},{nil,{2587,46}}]}},
    {debug_line,2588,1164},
    {tuple,
     {2588,5},
     [{block,
       {2588,6},
       [{match,{2588,6},{var,{2588,6},rec136},{var,{2588,6},'St'}},
        {'case',
         {2588,16},
         {var,{2588,6},rec136},
         [{clause,
           {2588,16},
           [{tuple,
             {2588,16},
             [{atom,{2588,16},opt_st},
              {var,{2588,16},'_'},
              {var,{2588,16},'_'},
              {var,{2588,16},'_'},
              {var,{2588,16},'_'}]}],
           [],
           [{call,
             {2588,16},
             {remote,
              {2588,16},
              {atom,{2588,16},erlang},
              {atom,{2588,16},setelement}},
             [{integer,{2588,16},2},
              {call,
               {2588,27},
               {remote,
                {2588,27},
                {atom,{2588,27},erlang},
                {atom,{2588,27},setelement}},
               [{integer,{2588,27},4},
                {var,{2588,6},rec136},
                {var,{2588,31},'Count'}]},
              {var,{2588,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{2588,16}}],
           [{var,[{generated,true},{location,{2588,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2588,16}}],
             {remote,
              [{generated,true},{location,{2588,16}}],
              {atom,[{generated,true},{location,{2588,16}}],erlang},
              {atom,[{generated,true},{location,{2588,16}}],error}},
             [{tuple,
               [{generated,true},{location,{2588,16}}],
               [{atom,[{generated,true},{location,{2588,16}}],badrecord},
                {var,{2588,6},rec136}]}]}]}]}]},
      {var,{2588,39},'FuncDb'}]}]}]}.
{function,
 {2590,1},
 opt_sw,3,
 [{clause,
   {2590,1},
   [{var,{2590,1},'_'},{var,{2590,1},'_'},{var,{2590,1},'_'}],
   [[{call,
      {2590,1},
      {remote,{2590,1},{atom,{2590,1},fake},{atom,{2590,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2590,1165},{atom,{2590,1},ignore}]},
  {clause,
   {2590,1},
   [{cons,
     {2590,8},
     {tuple,
      {2590,9},
      [{var,{2590,10},'L'},
       {match,
        {2590,12},
        {tuple,
         {2590,12},
         [{atom,{2590,12},b_blk},
          {var,{2590,12},'_'},
          {var,{2590,22},'Is'},
          {match,
           {2590,30},
           {tuple,
            {2590,30},
            [{atom,{2590,30},b_switch},
             {var,{2590,30},'_'},
             {var,{2590,30},'_'},
             {var,{2590,30},'_'},
             {var,{2590,30},'_'}]},
           {var,{2590,42},'Sw0'}}]},
        {var,{2590,47},'Blk0'}}]},
     {var,{2590,53},'Bs'}},
    {var,{2590,58},'Count0'},
    {var,{2590,66},'Acc'}],
   [],
   [{debug_line,2591,1166},
    {'case',
     {2591,5},
     {var,{2591,10},'Sw0'},
     [{clause,
       {2592,9},
       [{tuple,
         {2592,9},
         [{atom,{2592,9},b_switch},
          {var,{2592,9},'_'},
          {var,{2592,23},'Arg'},
          {var,{2592,32},'Fail'},
          {cons,
           {2592,42},
           {tuple,{2592,43},[{var,{2592,44},'Lit'},{var,{2592,48},'Lbl'}]},
           {nil,{2592,52}}}]}],
       [],
       [{debug_line,2594,1167},
        {match,
         {2594,13},
         {tuple,{2594,13},[{var,{2594,14},'Bool'},{var,{2594,19},'Count'}]},
         {call,{2594,28},{atom,{2594,28},new_var},[{var,{2594,36},'Count0'}]}},
        {debug_line,2595,1168},
        {match,
         {2595,13},
         {var,{2595,13},'IsEq'},
         {tuple,
          {2595,20},
          [{atom,{2595,20},b_set},
           {map,{2595,20},[]},
           {var,{2595,46},'Bool'},
           {tuple,{2595,30},[{atom,{2595,31},bif},{atom,{2595,35},'=:='}]},
           {cons,
            {2595,56},
            {var,{2595,57},'Arg'},
            {cons,{2595,61},{var,{2595,61},'Lit'},{nil,{2595,64}}}}]}},
        {debug_line,2596,1169},
        {match,
         {2596,13},
         {var,{2596,13},'Br'},
         {tuple,
          {2596,18},
          [{atom,{2596,18},b_br},
           {map,{2596,18},[]},
           {var,{2596,29},'Bool'},
           {var,{2596,39},'Lbl'},
           {var,{2596,48},'Fail'}]}},
        {debug_line,2597,1170},
        {match,
         {2597,13},
         {var,{2597,13},'Blk'},
         {block,
          {2597,19},
          [{match,
            {2597,30},
            {var,{2597,30},rec137},
            {op,
             {2597,35},
             '++',
             {var,{2597,33},'Is'},
             {cons,{2597,37},{var,{2597,38},'IsEq'},{nil,{2597,42}}}}},
           {match,{2597,19},{var,{2597,19},rec138},{var,{2597,19},'Blk0'}},
           {'case',
            {2597,30},
            {var,{2597,19},rec138},
            [{clause,
              {2597,30},
              [{tuple,
                {2597,30},
                [{atom,{2597,30},b_blk},
                 {var,{2597,30},'_'},
                 {var,{2597,30},'_'},
                 {var,{2597,30},'_'}]}],
              [],
              [{call,
                {2597,30},
                {remote,
                 {2597,30},
                 {atom,{2597,30},erlang},
                 {atom,{2597,30},setelement}},
                [{integer,{2597,30},3},
                 {call,
                  {2597,44},
                  {remote,
                   {2597,44},
                   {atom,{2597,44},erlang},
                   {atom,{2597,44},setelement}},
                  [{integer,{2597,44},4},
                   {var,{2597,19},rec138},
                   {var,{2597,49},'Br'}]},
                 {var,{2597,30},rec137}]}]},
             {clause,
              [{generated,true},{location,{2597,30}}],
              [{var,[{generated,true},{location,{2597,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2597,30}}],
                {remote,
                 [{generated,true},{location,{2597,30}}],
                 {atom,[{generated,true},{location,{2597,30}}],erlang},
                 {atom,[{generated,true},{location,{2597,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{2597,30}}],
                  [{atom,[{generated,true},{location,{2597,30}}],badrecord},
                   {var,{2597,19},rec138}]}]}]}]}]}},
        {debug_line,2598,1171},
        {call,
         {2598,13},
         {atom,{2598,13},opt_sw},
         [{var,{2598,20},'Bs'},
          {var,{2598,24},'Count'},
          {block,0,
           [{cons,
             {2598,31},
             {tuple,{2598,32},[{var,{2598,33},'L'},{var,{2598,35},'Blk'}]},
             {var,{2598,40},'Acc'}}]}]}]},
      {clause,
       {2599,9},
       [{tuple,
         {2599,9},
         [{atom,{2599,9},b_switch},
          {var,{2599,9},'_'},
          {var,{2599,23},'Arg'},
          {var,{2599,32},'Fail'},
          {cons,
           {2600,24},
           {tuple,
            {2600,25},
            [{tuple,
              {2600,26},
              [{atom,{2600,26},b_literal},{var,{2600,41},'B1'}]},
             {var,{2600,45},'Lbl'}]},
           {cons,
            {2600,50},
            {tuple,
             {2600,50},
             [{tuple,
               {2600,51},
               [{atom,{2600,51},b_literal},{var,{2600,66},'B2'}]},
              {var,{2600,70},'Lbl'}]},
            {nil,{2600,74}}}}]}],
       [[{op,
          {2601,19},
          '=:=',
          {var,{2601,16},'B1'},
          {op,{2601,23},'not',{var,{2601,27},'B2'}}}]],
       [{debug_line,2603,1172},
        {match,
         {2603,13},
         {tuple,{2603,13},[{var,{2603,14},'Bool'},{var,{2603,19},'Count'}]},
         {call,{2603,28},{atom,{2603,28},new_var},[{var,{2603,36},'Count0'}]}},
        {debug_line,2604,1173},
        {match,
         {2604,13},
         {var,{2604,13},'IsBool'},
         {tuple,
          {2604,22},
          [{atom,{2604,22},b_set},
           {map,{2604,22},[]},
           {var,{2604,53},'Bool'},
           {tuple,
            {2604,32},
            [{atom,{2604,33},bif},{atom,{2604,37},is_boolean}]},
           {cons,{2604,63},{var,{2604,64},'Arg'},{nil,{2604,67}}}]}},
        {debug_line,2605,1174},
        {match,
         {2605,13},
         {var,{2605,13},'Br'},
         {tuple,
          {2605,18},
          [{atom,{2605,18},b_br},
           {map,{2605,18},[]},
           {var,{2605,29},'Bool'},
           {var,{2605,39},'Lbl'},
           {var,{2605,48},'Fail'}]}},
        {debug_line,2606,1175},
        {match,
         {2606,13},
         {var,{2606,13},'Blk'},
         {block,
          {2606,19},
          [{match,
            {2606,30},
            {var,{2606,30},rec139},
            {op,
             {2606,35},
             '++',
             {var,{2606,33},'Is'},
             {cons,{2606,37},{var,{2606,38},'IsBool'},{nil,{2606,44}}}}},
           {match,{2606,19},{var,{2606,19},rec140},{var,{2606,19},'Blk0'}},
           {'case',
            {2606,30},
            {var,{2606,19},rec140},
            [{clause,
              {2606,30},
              [{tuple,
                {2606,30},
                [{atom,{2606,30},b_blk},
                 {var,{2606,30},'_'},
                 {var,{2606,30},'_'},
                 {var,{2606,30},'_'}]}],
              [],
              [{call,
                {2606,30},
                {remote,
                 {2606,30},
                 {atom,{2606,30},erlang},
                 {atom,{2606,30},setelement}},
                [{integer,{2606,30},3},
                 {call,
                  {2606,46},
                  {remote,
                   {2606,46},
                   {atom,{2606,46},erlang},
                   {atom,{2606,46},setelement}},
                  [{integer,{2606,46},4},
                   {var,{2606,19},rec140},
                   {var,{2606,51},'Br'}]},
                 {var,{2606,30},rec139}]}]},
             {clause,
              [{generated,true},{location,{2606,30}}],
              [{var,[{generated,true},{location,{2606,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2606,30}}],
                {remote,
                 [{generated,true},{location,{2606,30}}],
                 {atom,[{generated,true},{location,{2606,30}}],erlang},
                 {atom,[{generated,true},{location,{2606,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{2606,30}}],
                  [{atom,[{generated,true},{location,{2606,30}}],badrecord},
                   {var,{2606,19},rec140}]}]}]}]}]}},
        {debug_line,2607,1176},
        {call,
         {2607,13},
         {atom,{2607,13},opt_sw},
         [{var,{2607,20},'Bs'},
          {var,{2607,24},'Count'},
          {block,0,
           [{cons,
             {2607,31},
             {tuple,{2607,32},[{var,{2607,33},'L'},{var,{2607,35},'Blk'}]},
             {var,{2607,40},'Acc'}}]}]}]},
      {clause,
       {2608,9},
       [{var,{2608,9},'_'}],
       [],
       [{debug_line,2609,1177},
        {call,
         {2609,13},
         {atom,{2609,13},opt_sw},
         [{var,{2609,20},'Bs'},
          {var,{2609,24},'Count0'},
          {block,0,
           [{cons,
             {2609,32},
             {tuple,{2609,33},[{var,{2609,34},'L'},{var,{2609,36},'Blk0'}]},
             {var,{2609,42},'Acc'}}]}]}]}]}]},
  {clause,
   {2611,1},
   [{cons,
     {2611,8},
     {tuple,
      {2611,9},
      [{var,{2611,10},'L'},
       {match,
        {2611,12},
        {tuple,
         {2611,12},
         [{atom,{2611,12},b_blk},
          {var,{2611,12},'_'},
          {var,{2611,12},'_'},
          {var,{2611,12},'_'}]},
        {var,{2611,21},'Blk'}}]},
     {var,{2611,26},'Bs'}},
    {var,{2611,31},'Count'},
    {var,{2611,38},'Acc'}],
   [],
   [{debug_line,2612,1178},
    {call,
     {2612,5},
     {atom,{2612,5},opt_sw},
     [{var,{2612,12},'Bs'},
      {var,{2612,16},'Count'},
      {block,0,
       [{cons,
         {2612,23},
         {tuple,{2612,24},[{var,{2612,25},'L'},{var,{2612,27},'Blk'}]},
         {var,{2612,32},'Acc'}}]}]}]},
  {clause,
   {2613,1},
   [{nil,{2613,8}},{var,{2613,12},'Count'},{var,{2613,19},'Acc'}],
   [],
   [{debug_line,2614,1179},
    {tuple,
     {2614,5},
     [{call,
       {2614,6},
       {remote,{2614,6},{atom,{2614,6},lists},{atom,{2614,6},reverse}},
       [{var,{2614,14},'Acc'}]},
      {var,{2614,19},'Count'}]}]}]}.
{function,
 {2635,1},
 ssa_opt_ne,1,
 [{clause,
   {2635,1},
   [{var,{2635,1},'_'}],
   [[{call,
      {2635,1},
      {remote,{2635,1},{atom,{2635,1},fake},{atom,{2635,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2635,1180},{atom,{2635,1},ignore}]},
  {clause,
   {2635,1},
   [{tuple,
     {2635,12},
     [{match,
       {2635,13},
       {tuple,
        {2635,13},
        [{atom,{2635,13},opt_st},
         {var,{2635,25},'Linear0'},
         {var,{2635,13},'_'},
         {var,{2635,13},'_'},
         {var,{2635,13},'_'}]},
       {var,{2635,34},'St'}},
      {var,{2635,38},'FuncDb'}]}],
   [],
   [{debug_line,2636,1181},
    {match,
     {2636,5},
     {var,{2636,5},'Linear'},
     {call,
      {2636,14},
      {atom,{2636,14},opt_ne},
      [{var,{2636,21},'Linear0'},
       {block,0,
        [{tuple,
          {2636,30},
          [{atom,{2636,31},uses},{var,{2636,36},'Linear0'}]}]}]}},
    {debug_line,2637,1182},
    {tuple,
     {2637,5},
     [{block,
       {2637,6},
       [{match,{2637,6},{var,{2637,6},rec141},{var,{2637,6},'St'}},
        {'case',
         {2637,16},
         {var,{2637,6},rec141},
         [{clause,
           {2637,16},
           [{tuple,
             {2637,16},
             [{atom,{2637,16},opt_st},
              {var,{2637,16},'_'},
              {var,{2637,16},'_'},
              {var,{2637,16},'_'},
              {var,{2637,16},'_'}]}],
           [],
           [{call,
             {2637,16},
             {remote,
              {2637,16},
              {atom,{2637,16},erlang},
              {atom,{2637,16},setelement}},
             [{integer,{2637,16},2},
              {var,{2637,6},rec141},
              {var,{2637,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{2637,16}}],
           [{var,[{generated,true},{location,{2637,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{2637,16}}],
             {remote,
              [{generated,true},{location,{2637,16}}],
              {atom,[{generated,true},{location,{2637,16}}],erlang},
              {atom,[{generated,true},{location,{2637,16}}],error}},
             [{tuple,
               [{generated,true},{location,{2637,16}}],
               [{atom,[{generated,true},{location,{2637,16}}],badrecord},
                {var,{2637,6},rec141}]}]}]}]}]},
      {var,{2637,29},'FuncDb'}]}]}]}.
{function,
 {2639,1},
 opt_ne,2,
 [{clause,
   {2639,1},
   [{var,{2639,1},'_'},{var,{2639,1},'_'}],
   [[{call,
      {2639,1},
      {remote,{2639,1},{atom,{2639,1},fake},{atom,{2639,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2639,1183},{atom,{2639,1},ignore}]},
  {clause,
   {2639,1},
   [{cons,
     {2639,8},
     {tuple,
      {2639,9},
      [{var,{2639,10},'L'},
       {match,
        {2639,12},
        {tuple,
         {2639,12},
         [{atom,{2639,12},b_blk},
          {var,{2639,12},'_'},
          {match,
           {2639,22},
           {cons,{2639,22},{var,{2639,23},'_'},{var,{2639,25},'_'}},
           {var,{2639,28},'Is0'}},
          {tuple,
           {2639,37},
           [{atom,{2639,37},b_br},
            {var,{2639,37},'_'},
            {match,
             {2639,48},
             {tuple,{2639,48},[{atom,{2639,48},b_var},{var,{2639,48},'_'}]},
             {var,{2639,57},'Bool'}},
            {var,{2639,37},'_'},
            {var,{2639,37},'_'}]}]},
        {var,{2639,64},'Blk0'}}]},
     {var,{2639,70},'Bs'}},
    {var,{2639,75},'Uses0'}],
   [],
   [{debug_line,2640,1184},
    {'case',
     {2640,5},
     {call,
      {2640,10},
      {remote,{2640,10},{atom,{2640,10},lists},{atom,{2640,10},last}},
      [{var,{2640,15},'Is0'}]},
     [{clause,
       {2641,9},
       [{match,
         {2641,9},
         {tuple,
          {2641,9},
          [{atom,{2641,9},b_set},
           {var,{2641,9},'_'},
           {var,{2641,35},'Bool'},
           {tuple,{2641,19},[{atom,{2641,20},bif},{atom,{2641,24},'=/='}]},
           {var,{2641,9},'_'}]},
         {var,{2641,41},'I0'}}],
       [],
       [{debug_line,2642,1185},
        {match,
         {2642,13},
         {var,{2642,13},'I'},
         {block,
          {2642,17},
          [{match,{2642,17},{var,{2642,17},rec142},{var,{2642,17},'I0'}},
           {'case',
            {2642,26},
            {var,{2642,17},rec142},
            [{clause,
              {2642,26},
              [{tuple,
                {2642,26},
                [{atom,{2642,26},b_set},
                 {var,{2642,26},'_'},
                 {var,{2642,26},'_'},
                 {var,{2642,26},'_'},
                 {var,{2642,26},'_'}]}],
              [],
              [{call,
                {2642,26},
                {remote,
                 {2642,26},
                 {atom,{2642,26},erlang},
                 {atom,{2642,26},setelement}},
                [{integer,{2642,26},4},
                 {var,{2642,17},rec142},
                 {tuple,
                  {2642,29},
                  [{atom,{2642,30},bif},{atom,{2642,34},'=:='}]}]}]},
             {clause,
              [{generated,true},{location,{2642,26}}],
              [{var,[{generated,true},{location,{2642,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2642,26}}],
                {remote,
                 [{generated,true},{location,{2642,26}}],
                 {atom,[{generated,true},{location,{2642,26}}],erlang},
                 {atom,[{generated,true},{location,{2642,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{2642,26}}],
                  [{atom,[{generated,true},{location,{2642,26}}],badrecord},
                   {var,{2642,17},rec142}]}]}]}]}]}},
        {debug_line,2643,1186},
        {match,
         {2643,13},
         {tuple,{2643,13},[{var,{2643,14},'Blk'},{var,{2643,18},'Uses'}]},
         {call,
          {2643,26},
          {atom,{2643,26},opt_ne_replace},
          [{var,{2643,41},'I'},
           {var,{2643,44},'Blk0'},
           {var,{2643,50},'Uses0'}]}},
        {debug_line,2644,1187},
        {cons,
         {2644,13},
         {tuple,{2644,14},[{var,{2644,15},'L'},{var,{2644,17},'Blk'}]},
         {call,
          {2644,22},
          {atom,{2644,22},opt_ne},
          [{var,{2644,29},'Bs'},{var,{2644,33},'Uses'}]}}]},
      {clause,
       {2645,9},
       [{match,
         {2645,9},
         {tuple,
          {2645,9},
          [{atom,{2645,9},b_set},
           {var,{2645,9},'_'},
           {var,{2645,34},'Bool'},
           {tuple,{2645,19},[{atom,{2645,20},bif},{atom,{2645,24},'/='}]},
           {var,{2645,9},'_'}]},
         {var,{2645,40},'I0'}}],
       [],
       [{debug_line,2646,1188},
        {match,
         {2646,13},
         {var,{2646,13},'I'},
         {block,
          {2646,17},
          [{match,{2646,17},{var,{2646,17},rec143},{var,{2646,17},'I0'}},
           {'case',
            {2646,26},
            {var,{2646,17},rec143},
            [{clause,
              {2646,26},
              [{tuple,
                {2646,26},
                [{atom,{2646,26},b_set},
                 {var,{2646,26},'_'},
                 {var,{2646,26},'_'},
                 {var,{2646,26},'_'},
                 {var,{2646,26},'_'}]}],
              [],
              [{call,
                {2646,26},
                {remote,
                 {2646,26},
                 {atom,{2646,26},erlang},
                 {atom,{2646,26},setelement}},
                [{integer,{2646,26},4},
                 {var,{2646,17},rec143},
                 {tuple,
                  {2646,29},
                  [{atom,{2646,30},bif},{atom,{2646,34},'=='}]}]}]},
             {clause,
              [{generated,true},{location,{2646,26}}],
              [{var,[{generated,true},{location,{2646,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2646,26}}],
                {remote,
                 [{generated,true},{location,{2646,26}}],
                 {atom,[{generated,true},{location,{2646,26}}],erlang},
                 {atom,[{generated,true},{location,{2646,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{2646,26}}],
                  [{atom,[{generated,true},{location,{2646,26}}],badrecord},
                   {var,{2646,17},rec143}]}]}]}]}]}},
        {debug_line,2647,1189},
        {match,
         {2647,13},
         {tuple,{2647,13},[{var,{2647,14},'Blk'},{var,{2647,18},'Uses'}]},
         {call,
          {2647,26},
          {atom,{2647,26},opt_ne_replace},
          [{var,{2647,41},'I'},
           {var,{2647,44},'Blk0'},
           {var,{2647,50},'Uses0'}]}},
        {debug_line,2648,1190},
        {cons,
         {2648,13},
         {tuple,{2648,14},[{var,{2648,15},'L'},{var,{2648,17},'Blk'}]},
         {call,
          {2648,22},
          {atom,{2648,22},opt_ne},
          [{var,{2648,29},'Bs'},{var,{2648,33},'Uses'}]}}]},
      {clause,
       {2649,9},
       [{var,{2649,9},'_'}],
       [],
       [{debug_line,2650,1191},
        {cons,
         {2650,13},
         {tuple,{2650,14},[{var,{2650,15},'L'},{var,{2650,17},'Blk0'}]},
         {call,
          {2650,23},
          {atom,{2650,23},opt_ne},
          [{var,{2650,30},'Bs'},{var,{2650,34},'Uses0'}]}}]}]}]},
  {clause,
   {2652,1},
   [{cons,
     {2652,8},
     {tuple,{2652,9},[{var,{2652,10},'L'},{var,{2652,12},'Blk'}]},
     {var,{2652,17},'Bs'}},
    {var,{2652,22},'Uses'}],
   [],
   [{debug_line,2653,1192},
    {cons,
     {2653,5},
     {tuple,{2653,6},[{var,{2653,7},'L'},{var,{2653,9},'Blk'}]},
     {call,
      {2653,14},
      {atom,{2653,14},opt_ne},
      [{var,{2653,21},'Bs'},{var,{2653,25},'Uses'}]}}]},
  {clause,
   {2654,1},
   [{nil,{2654,8}},{var,{2654,12},'_Uses'}],
   [],
   [{debug_line,2654,1193},{nil,{2654,22}}]}]}.
{function,
 {2656,1},
 opt_ne_replace,3,
 [{clause,
   {2656,1},
   [{var,{2656,1},'_'},{var,{2656,1},'_'},{var,{2656,1},'_'}],
   [[{call,
      {2656,1},
      {remote,{2656,1},{atom,{2656,1},fake},{atom,{2656,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2656,1194},{atom,{2656,1},ignore}]},
  {clause,
   {2656,1},
   [{match,
     {2656,16},
     {tuple,
      {2656,16},
      [{atom,{2656,16},b_set},
       {var,{2656,16},'_'},
       {var,{2656,27},'Bool'},
       {var,{2656,16},'_'},
       {var,{2656,16},'_'}]},
     {var,{2656,33},'I'}},
    {match,
     {2657,16},
     {tuple,
      {2657,16},
      [{atom,{2657,16},b_blk},
       {var,{2657,16},'_'},
       {var,{2657,26},'Is0'},
       {match,
        {2657,35},
        {tuple,
         {2657,35},
         [{atom,{2657,35},b_br},
          {var,{2657,35},'_'},
          {var,{2657,35},'_'},
          {var,{2657,46},'Succ'},
          {var,{2657,56},'Fail'}]},
        {var,{2657,62},'Br0'}}]},
     {var,{2657,67},'Blk'}},
    {var,{2658,16},'Uses0'}],
   [],
   [{debug_line,2659,1195},
    {'case',
     {2659,5},
     {call,
      {2659,10},
      {atom,{2659,10},opt_ne_single_use},
      [{var,{2659,28},'Bool'},{var,{2659,34},'Uses0'}]},
     [{clause,
       {2660,9},
       [{tuple,{2660,9},[{atom,{2660,10},true},{var,{2660,15},'Uses'}]}],
       [],
       [{debug_line,2661,1196},
        {match,
         {2661,13},
         {var,{2661,13},'Is'},
         {call,
          {2661,18},
          {atom,{2661,18},replace_last},
          [{var,{2661,31},'Is0'},{var,{2661,36},'I'}]}},
        {debug_line,2662,1197},
        {match,
         {2662,13},
         {var,{2662,13},'Br'},
         {block,
          {2662,18},
          [{match,{2662,18},{var,{2662,18},rec144},{var,{2662,18},'Br0'}},
           {'case',
            {2662,27},
            {var,{2662,18},rec144},
            [{clause,
              {2662,27},
              [{tuple,
                {2662,27},
                [{atom,{2662,27},b_br},
                 {var,{2662,27},'_'},
                 {var,{2662,27},'_'},
                 {var,{2662,27},'_'},
                 {var,{2662,27},'_'}]}],
              [],
              [{call,
                {2662,27},
                {remote,
                 {2662,27},
                 {atom,{2662,27},erlang},
                 {atom,{2662,27},setelement}},
                [{integer,{2662,27},4},
                 {call,
                  {2662,37},
                  {remote,
                   {2662,37},
                   {atom,{2662,37},erlang},
                   {atom,{2662,37},setelement}},
                  [{integer,{2662,37},5},
                   {var,{2662,18},rec144},
                   {var,{2662,42},'Succ'}]},
                 {var,{2662,32},'Fail'}]}]},
             {clause,
              [{generated,true},{location,{2662,27}}],
              [{var,[{generated,true},{location,{2662,27}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2662,27}}],
                {remote,
                 [{generated,true},{location,{2662,27}}],
                 {atom,[{generated,true},{location,{2662,27}}],erlang},
                 {atom,[{generated,true},{location,{2662,27}}],error}},
                [{tuple,
                  [{generated,true},{location,{2662,27}}],
                  [{atom,[{generated,true},{location,{2662,27}}],badrecord},
                   {var,{2662,18},rec144}]}]}]}]}]}},
        {debug_line,2663,1198},
        {tuple,
         {2663,13},
         [{block,
           {2663,14},
           [{match,{2663,14},{var,{2663,14},rec145},{var,{2663,14},'Blk'}},
            {'case',
             {2663,24},
             {var,{2663,14},rec145},
             [{clause,
               {2663,24},
               [{tuple,
                 {2663,24},
                 [{atom,{2663,24},b_blk},
                  {var,{2663,24},'_'},
                  {var,{2663,24},'_'},
                  {var,{2663,24},'_'}]}],
               [],
               [{call,
                 {2663,24},
                 {remote,
                  {2663,24},
                  {atom,{2663,24},erlang},
                  {atom,{2663,24},setelement}},
                 [{integer,{2663,24},3},
                  {call,
                   {2663,30},
                   {remote,
                    {2663,30},
                    {atom,{2663,30},erlang},
                    {atom,{2663,30},setelement}},
                   [{integer,{2663,30},4},
                    {var,{2663,14},rec145},
                    {var,{2663,35},'Br'}]},
                  {var,{2663,27},'Is'}]}]},
              {clause,
               [{generated,true},{location,{2663,24}}],
               [{var,[{generated,true},{location,{2663,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2663,24}}],
                 {remote,
                  [{generated,true},{location,{2663,24}}],
                  {atom,[{generated,true},{location,{2663,24}}],erlang},
                  {atom,[{generated,true},{location,{2663,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2663,24}}],
                   [{atom,[{generated,true},{location,{2663,24}}],badrecord},
                    {var,{2663,14},rec145}]}]}]}]}]},
          {var,{2663,39},'Uses'}]}]},
      {clause,
       {2664,9},
       [{tuple,{2664,9},[{atom,{2664,10},false},{var,{2664,16},'Uses'}]}],
       [],
       [{debug_line,2666,1199},
        {tuple,
         {2666,13},
         [{var,{2666,14},'Blk'},{var,{2666,18},'Uses'}]}]}]}]}]}.
{function,{2669,1},
          replace_last,2,
          [{clause,{2669,1},
                   [{var,{2669,1},'_'},{var,{2669,1},'_'}],
                   [[{call,{2669,1},
                           {remote,{2669,1},
                                   {atom,{2669,1},fake},
                                   {atom,{2669,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2669,1200},{atom,{2669,1},ignore}]},
           {clause,{2669,1},
                   [{cons,{2669,14},{var,{2669,15},'_'},{nil,{2669,16}}},
                    {var,{2669,19},'Repl'}],
                   [],
                   [{debug_line,2669,1201},
                    {cons,{2669,28},{var,{2669,29},'Repl'},{nil,{2669,33}}}]},
           {clause,{2670,1},
                   [{cons,{2670,14},{var,{2670,15},'I'},{var,{2670,17},'Is'}},
                    {var,{2670,22},'Repl'}],
                   [],
                   [{debug_line,2670,1202},
                    {cons,{2670,31},
                          {var,{2670,32},'I'},
                          {call,{2670,34},
                                {atom,{2670,34},replace_last},
                                [{var,{2670,47},'Is'},
                                 {var,{2670,51},'Repl'}]}}]}]}.
{function,
    {2672,1},
    opt_ne_single_use,2,
    [{clause,
         {2672,1},
         [{var,{2672,1},'_'},{var,{2672,1},'_'}],
         [[{call,
               {2672,1},
               {remote,
                   {2672,1},
                   {atom,{2672,1},fake},
                   {atom,{2672,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2672,1203},{atom,{2672,1},ignore}]},
     {clause,
         {2672,1},
         [{var,{2672,19},'Var'},
          {tuple,{2672,24},[{atom,{2672,25},uses},{var,{2672,30},'Linear'}]}],
         [],
         [{debug_line,2673,1204},
          {match,
              {2673,5},
              {var,{2673,5},'Blocks'},
              {call,
                  {2673,14},
                  {remote,
                      {2673,18},
                      {atom,{2673,14},maps},
                      {atom,{2673,19},from_list}},
                  [{var,{2673,29},'Linear'}]}},
          {debug_line,2674,1205},
          {match,
              {2674,5},
              {var,{2674,5},'RPO'},
              {call,
                  {2674,11},
                  {remote,
                      {2674,19},
                      {atom,{2674,11},beam_ssa},
                      {atom,{2674,20},rpo}},
                  [{var,{2674,24},'Blocks'}]}},
          {debug_line,2675,1206},
          {match,
              {2675,5},
              {var,{2675,5},'Uses'},
              {call,
                  {2675,12},
                  {remote,
                      {2675,20},
                      {atom,{2675,12},beam_ssa},
                      {atom,{2675,21},uses}},
                  [{var,{2675,26},'RPO'},{var,{2675,31},'Blocks'}]}},
          {debug_line,2676,1207},
          {call,
              {2676,5},
              {atom,{2676,5},opt_ne_single_use},
              [{var,{2676,23},'Var'},{var,{2676,28},'Uses'}]}]},
     {clause,
         {2677,1},
         [{var,{2677,19},'Var'},{var,{2677,24},'Uses'}],
         [[{call,
               {2677,35},
               {remote,
                   {2677,35},
                   {atom,{2677,35},erlang},
                   {atom,{2677,35},is_map}},
               [{var,{2677,42},'Uses'}]}]],
         [{debug_line,2678,1208},
          {tuple,
              {2678,5},
              [{'case',
                   {2678,6},
                   {var,{2678,11},'Uses'},
                   [{clause,
                        {2679,10},
                        [{map,
                             {2679,10},
                             [{map_field_exact,
                                  {2679,15},
                                  {var,{2679,12},'Var'},
                                  {cons,
                                      {2679,17},
                                      {var,{2679,18},'_'},
                                      {nil,{2679,19}}}}]}],
                        [],
                        [{debug_line,2679,1209},{atom,{2679,25},true}]},
                    {clause,
                        {2680,10},
                        [{map,
                             {2680,10},
                             [{map_field_exact,
                                  {2680,15},
                                  {var,{2680,12},'Var'},
                                  {cons,
                                      {2680,17},
                                      {var,{2680,18},'_'},
                                      {var,{2680,20},'_'}}}]}],
                        [],
                        [{debug_line,2680,1210},{atom,{2680,27},false}]}]},
               {var,{2681,10},'Uses'}]}]}]}.
{function,
    {2743,1},
    ssa_opt_sink,1,
    [{clause,
         {2743,1},
         [{var,{2743,1},'_'}],
         [[{call,
               {2743,1},
               {remote,
                   {2743,1},
                   {atom,{2743,1},fake},
                   {atom,{2743,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2743,1211},{atom,{2743,1},ignore}]},
     {clause,
         {2743,1},
         [{tuple,
              {2743,14},
              [{match,
                   {2743,15},
                   {tuple,
                       {2743,15},
                       [{atom,{2743,15},opt_st},
                        {var,{2743,27},'Linear'},
                        {var,{2743,15},'_'},
                        {var,{2743,15},'_'},
                        {var,{2743,15},'_'}]},
                   {var,{2743,35},'St'}},
               {var,{2743,39},'FuncDb'}]}],
         [],
         [{debug_line,2747,1212},
          {'case',
              {2747,5},
              {call,
                  {2747,10},
                  {atom,{2747,10},def_blocks},
                  [{var,{2747,21},'Linear'}]},
              [{clause,
                   {2748,9},
                   [{nil,{2748,9}}],
                   [],
                   [{debug_line,2750,1213},
                    {tuple,
                        {2750,13},
                        [{var,{2750,14},'St'},{var,{2750,18},'FuncDb'}]}]},
               {clause,
                   {2751,9},
                   [{match,
                        {2751,9},
                        {cons,
                            {2751,9},
                            {var,{2751,10},'_'},
                            {var,{2751,12},'_'}},
                        {var,{2751,15},'Defs0'}}],
                   [],
                   [{debug_line,2752,1214},
                    {match,
                        {2752,13},
                        {var,{2752,13},'Defs'},
                        {call,
                            {2752,20},
                            {remote,
                                {2752,24},
                                {atom,{2752,20},maps},
                                {atom,{2752,25},from_list}},
                            [{var,{2752,35},'Defs0'}]}},
                    {debug_line,2753,1215},
                    {tuple,
                        {2753,13},
                        [{call,
                             {2753,14},
                             {atom,{2753,14},do_ssa_opt_sink},
                             [{var,{2753,30},'Defs'},{var,{2753,36},'St'}]},
                         {var,{2753,41},'FuncDb'}]}]}]}]}]}.
{function,
 {2756,1},
 do_ssa_opt_sink,2,
 [{clause,
   {2756,1},
   [{var,{2756,1},'_'},{var,{2756,1},'_'}],
   [[{call,
      {2756,1},
      {remote,{2756,1},{atom,{2756,1},fake},{atom,{2756,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2756,1216},{atom,{2756,1},ignore}]},
  {clause,
   {2756,1},
   [{var,{2756,17},'Defs'},
    {match,
     {2756,23},
     {tuple,
      {2756,23},
      [{atom,{2756,23},opt_st},
       {var,{2756,35},'Linear'},
       {var,{2756,23},'_'},
       {var,{2756,23},'_'},
       {var,{2756,23},'_'}]},
     {var,{2756,43},'St'}}],
   [[{call,
      {2756,52},
      {remote,{2756,52},{atom,{2756,52},erlang},{atom,{2756,52},is_map}},
      [{var,{2756,59},'Defs'}]}]],
   [{debug_line,2759,1217},
    {match,
     {2759,5},
     {var,{2759,5},'Used'},
     {call,
      {2759,12},
      {atom,{2759,12},used_blocks},
      [{var,{2759,24},'Linear'},{var,{2759,32},'Defs'},{nil,{2759,38}}]}},
    {debug_line,2762,1218},
    {match,
     {2762,5},
     {var,{2762,5},'Blocks0'},
     {call,
      {2762,15},
      {remote,{2762,19},{atom,{2762,15},maps},{atom,{2762,20},from_list}},
      [{var,{2762,30},'Linear'}]}},
    {debug_line,2763,1219},
    {match,
     {2763,5},
     {var,{2763,5},'RPO'},
     {call,
      {2763,11},
      {remote,{2763,19},{atom,{2763,11},beam_ssa},{atom,{2763,20},rpo}},
      [{var,{2763,24},'Blocks0'}]}},
    {debug_line,2764,1220},
    {match,
     {2764,5},
     {var,{2764,5},'Preds'},
     {call,
      {2764,13},
      {remote,
       {2764,21},
       {atom,{2764,13},beam_ssa},
       {atom,{2764,22},predecessors}},
      [{var,{2764,35},'Blocks0'}]}},
    {debug_line,2765,1221},
    {match,
     {2765,5},
     {tuple,{2765,5},[{var,{2765,6},'Dom'},{var,{2765,11},'Numbering'}]},
     {call,
      {2765,24},
      {remote,
       {2765,32},
       {atom,{2765,24},beam_ssa},
       {atom,{2765,33},dominators_from_predecessors}},
      [{var,{2765,62},'RPO'},{var,{2765,67},'Preds'}]}},
    {debug_line,2770,1222},
    {match,
     {2770,5},
     {var,{2770,5},'Unsuitable'},
     {call,
      {2770,18},
      {atom,{2770,18},unsuitable},
      [{var,{2770,29},'Linear'},
       {var,{2770,37},'Blocks0'},
       {var,{2770,46},'Preds'}]}},
    {debug_line,2774,1223},
    {match,
     {2774,5},
     {var,{2774,5},'DefLocs0'},
     {call,
      {2774,16},
      {atom,{2774,16},new_def_locations},
      [{var,{2774,34},'Used'},
       {var,{2774,40},'Defs'},
       {var,{2774,46},'Dom'},
       {var,{2774,51},'Numbering'},
       {var,{2774,62},'Unsuitable'}]}},
    {debug_line,2780,1224},
    {match,
     {2780,5},
     {var,{2780,5},'Ps'},
     {call,
      {2780,10},
      {atom,{2780,10},partition_deflocs},
      [{var,{2780,28},'DefLocs0'},
       {var,{2780,38},'Defs'},
       {var,{2780,44},'Blocks0'}]}},
    {debug_line,2781,1225},
    {match,
     {2781,5},
     {var,{2781,5},'DefLocs1'},
     {call,
      {2781,16},
      {atom,{2781,16},filter_deflocs},
      [{var,{2781,31},'Ps'},
       {var,{2781,35},'Preds'},
       {var,{2781,42},'Blocks0'}]}},
    {debug_line,2782,1226},
    {match,
     {2782,5},
     {var,{2782,5},'DefLocs'},
     {call,
      {2782,15},
      {remote,{2782,15},{atom,{2782,15},lists},{atom,{2782,15},sort}},
      [{var,{2782,20},'DefLocs1'}]}},
    {debug_line,2786,1227},
    {match,
     {2786,5},
     {var,{2786,5},'Blocks'},
     {call,
      {2786,14},
      {remote,{2786,14},{atom,{2786,14},lists},{atom,{2786,14},foldl}},
      [{block,0,
        [{'fun',
          {2786,20},
          {clauses,
           [{clause,
             {2786,23},
             [{tuple,
               {2786,24},
               [{var,{2786,25},'V'},
                {tuple,
                 {2786,27},
                 [{var,{2786,28},'From'},{var,{2786,33},'To'}]}]},
              {var,{2786,39},'A'}],
             [],
             [{debug_line,2787,1228},
              {call,
               {2787,28},
               {atom,{2787,28},move_defs},
               [{var,{2787,38},'V'},
                {var,{2787,41},'From'},
                {var,{2787,47},'To'},
                {var,{2787,51},'A'}]}]}]}}]},
       {var,{2788,25},'Blocks0'},
       {var,{2788,34},'DefLocs'}]}},
    {debug_line,2790,1229},
    {block,
     {2790,5},
     [{match,
       {2790,15},
       {var,{2790,15},rec146},
       {call,
        {2790,19},
        {remote,
         {2790,27},
         {atom,{2790,19},beam_ssa},
         {atom,{2790,28},linearize}},
        [{var,{2790,38},'Blocks'}]}},
      {match,{2790,5},{var,{2790,5},rec147},{var,{2790,5},'St'}},
      {'case',
       {2790,15},
       {var,{2790,5},rec147},
       [{clause,
         {2790,15},
         [{tuple,
           {2790,15},
           [{atom,{2790,15},opt_st},
            {var,{2790,15},'_'},
            {var,{2790,15},'_'},
            {var,{2790,15},'_'},
            {var,{2790,15},'_'}]}],
         [],
         [{call,
           {2790,15},
           {remote,
            {2790,15},
            {atom,{2790,15},erlang},
            {atom,{2790,15},setelement}},
           [{integer,{2790,15},2},
            {var,{2790,5},rec147},
            {var,{2790,15},rec146}]}]},
        {clause,
         [{generated,true},{location,{2790,15}}],
         [{var,[{generated,true},{location,{2790,15}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{2790,15}}],
           {remote,
            [{generated,true},{location,{2790,15}}],
            {atom,[{generated,true},{location,{2790,15}}],erlang},
            {atom,[{generated,true},{location,{2790,15}}],error}},
           [{tuple,
             [{generated,true},{location,{2790,15}}],
             [{atom,[{generated,true},{location,{2790,15}}],badrecord},
              {var,{2790,5},rec147}]}]}]}]}]}]}]}.
{function,
    {2792,1},
    def_blocks,1,
    [{clause,
         {2792,1},
         [{var,{2792,1},'_'}],
         [[{call,
               {2792,1},
               {remote,
                   {2792,1},
                   {atom,{2792,1},fake},
                   {atom,{2792,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2792,1230},{atom,{2792,1},ignore}]},
     {clause,
         {2792,1},
         [{cons,
              {2792,12},
              {tuple,
                  {2792,13},
                  [{var,{2792,14},'L'},
                   {tuple,
                       {2792,16},
                       [{atom,{2792,16},b_blk},
                        {var,{2792,16},'_'},
                        {var,{2792,26},'Is'},
                        {var,{2792,16},'_'}]}]},
              {var,{2792,31},'Bs'}}],
         [],
         [{debug_line,2793,1231},
          {call,
              {2793,5},
              {atom,{2793,5},def_blocks_is},
              [{var,{2793,19},'Is'},
               {var,{2793,23},'L'},
               {block,0,
                   [{call,
                        {2793,26},
                        {atom,{2793,26},def_blocks},
                        [{var,{2793,37},'Bs'}]}]}]}]},
     {clause,
         {2794,1},
         [{nil,{2794,12}}],
         [],
         [{debug_line,2794,1232},{nil,{2794,19}}]}]}.
{function,
    {2796,1},
    def_blocks_is,3,
    [{clause,
         {2796,1},
         [{var,{2796,1},'_'},{var,{2796,1},'_'},{var,{2796,1},'_'}],
         [[{call,
               {2796,1},
               {remote,
                   {2796,1},
                   {atom,{2796,1},fake},
                   {atom,{2796,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2796,1233},{atom,{2796,1},ignore}]},
     {clause,
         {2796,1},
         [{cons,
              {2796,15},
              {tuple,
                  {2796,16},
                  [{atom,{2796,16},b_set},
                   {var,{2796,16},'_'},
                   {var,{2796,63},'Dst'},
                   {atom,{2796,26},get_tuple_element},
                   {cons,
                       {2796,49},
                       {var,{2796,50},'Tuple'},
                       {cons,{2796,56},{var,{2796,56},'_'},{nil,{2796,57}}}}]},
              {var,{2796,68},'Is'}},
          {var,{2796,73},'L'},
          {var,{2796,76},'Acc'}],
         [],
         [{debug_line,2797,1234},
          {call,
              {2797,5},
              {atom,{2797,5},def_blocks_is},
              [{var,{2797,19},'Is'},
               {var,{2797,23},'L'},
               {block,0,
                   [{cons,
                        {2797,26},
                        {tuple,
                            {2797,27},
                            [{var,{2797,28},'Dst'},
                             {tuple,
                                 {2797,32},
                                 [{var,{2797,33},'L'},
                                  {var,{2797,35},'Tuple'}]}]},
                        {var,{2797,43},'Acc'}}]}]}]},
     {clause,
         {2798,1},
         [{cons,{2798,15},{var,{2798,16},'_'},{var,{2798,18},'Is'}},
          {var,{2798,23},'L'},
          {var,{2798,26},'Acc'}],
         [],
         [{debug_line,2799,1235},
          {call,
              {2799,5},
              {atom,{2799,5},def_blocks_is},
              [{var,{2799,19},'Is'},
               {var,{2799,23},'L'},
               {var,{2799,26},'Acc'}]}]},
     {clause,
         {2800,1},
         [{nil,{2800,15}},{var,{2800,19},'_'},{var,{2800,22},'Acc'}],
         [],
         [{debug_line,2800,1236},{var,{2800,30},'Acc'}]}]}.
{function,
    {2802,1},
    used_blocks,3,
    [{clause,
         {2802,1},
         [{var,{2802,1},'_'},{var,{2802,1},'_'},{var,{2802,1},'_'}],
         [[{call,
               {2802,1},
               {remote,
                   {2802,1},
                   {atom,{2802,1},fake},
                   {atom,{2802,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2802,1237},{atom,{2802,1},ignore}]},
     {clause,
         {2802,1},
         [{cons,
              {2802,13},
              {tuple,{2802,14},[{var,{2802,15},'L'},{var,{2802,17},'Blk'}]},
              {var,{2802,22},'Bs'}},
          {var,{2802,27},'Def'},
          {var,{2802,32},'Acc0'}],
         [],
         [{debug_line,2803,1238},
          {match,
              {2803,5},
              {var,{2803,5},'Used'},
              {call,
                  {2803,12},
                  {remote,
                      {2803,20},
                      {atom,{2803,12},beam_ssa},
                      {atom,{2803,21},used}},
                  [{var,{2803,26},'Blk'}]}},
          {debug_line,2804,1239},
          {match,
              {2804,5},
              {var,{2804,5},'Acc'},
              {op,{2804,53},
                  '++',
                  {lc,{2804,11},
                      {block,0,
                          [{tuple,
                               {2804,12},
                               [{var,{2804,13},'V'},{var,{2804,15},'L'}]}]},
                      [{block,0,[{atom,{2804,26},true}]},
                       {generate,
                           {2804,23},
                           {var,{2804,21},'V'},
                           {var,{2804,26},'Used'}},
                       {block,0,[{atom,{2804,32},true}]},
                       {call,
                           {2804,32},
                           {remote,
                               {2804,36},
                               {atom,{2804,32},maps},
                               {atom,{2804,37},is_key}},
                           [{var,{2804,44},'V'},{var,{2804,47},'Def'}]}]},
                  {var,{2804,56},'Acc0'}}},
          {debug_line,2805,1240},
          {call,
              {2805,5},
              {atom,{2805,5},used_blocks},
              [{var,{2805,17},'Bs'},
               {var,{2805,21},'Def'},
               {var,{2805,26},'Acc'}]}]},
     {clause,
         {2806,1},
         [{nil,{2806,13}},{var,{2806,17},'_Def'},{var,{2806,23},'Acc'}],
         [],
         [{debug_line,2807,1241},
          {call,{2807,5},{atom,{2807,5},rel2fam},[{var,{2807,13},'Acc'}]}]}]}.
{function,
 {2812,1},
 partition_deflocs,3,
 [{clause,
   {2812,1},
   [{var,{2812,1},'_'},{var,{2812,1},'_'},{var,{2812,1},'_'}],
   [[{call,
      {2812,1},
      {remote,{2812,1},{atom,{2812,1},fake},{atom,{2812,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2812,1242},{atom,{2812,1},ignore}]},
  {clause,
   {2812,1},
   [{var,{2812,19},'DefLoc'},{var,{2812,27},'_Defs'},{var,{2812,34},'Blocks'}],
   [],
   [{debug_line,2813,1243},
    {match,
     {2813,5},
     {tuple,{2813,5},[{var,{2813,6},'BlkNums0'},{var,{2813,15},'_'}]},
     {call,
      {2813,20},
      {remote,{2813,20},{atom,{2813,20},lists},{atom,{2813,20},mapfoldl}},
      [{block,0,
        [{'fun',
          {2813,29},
          {clauses,
           [{clause,
             {2813,32},
             [{var,{2813,33},'L'},{var,{2813,36},'N'}],
             [],
             [{tuple,
               {2813,42},
               [{tuple,{2813,43},[{var,{2813,44},'L'},{var,{2813,46},'N'}]},
                {op,
                 {2813,50},
                 '+',
                 {var,{2813,49},'N'},
                 {integer,{2813,51},1}}]}]}]}}]},
       {integer,{2813,59},0},
       {block,0,
        [{call,
          {2813,62},
          {remote,{2813,70},{atom,{2813,62},beam_ssa},{atom,{2813,71},rpo}},
          [{var,{2813,75},'Blocks'}]}]}]}},
    {debug_line,2814,1244},
    {match,
     {2814,5},
     {var,{2814,5},'BlkNums'},
     {call,
      {2814,15},
      {remote,{2814,19},{atom,{2814,15},maps},{atom,{2814,20},from_list}},
      [{var,{2814,30},'BlkNums0'}]}},
    {debug_line,2815,1245},
    {match,
     {2815,5},
     {var,{2815,5},'S'},
     {lc,
      {2815,9},
      {block,0,
       [{tuple,
         {2815,10},
         [{var,{2815,11},'Tuple'},
          {tuple,
           {2815,17},
           [{call,
             {2815,18},
             {remote,
              {2815,18},
              {atom,{2815,18},erlang},
              {atom,{2815,18},map_get}},
             [{var,{2815,26},'To'},{var,{2815,30},'BlkNums'}]},
            {tuple,
             {2815,39},
             [{var,{2815,40},'V'},
              {tuple,
               {2815,42},
               [{var,{2815,43},'From'},{var,{2815,48},'To'}]}]}]}]}]},
      [{block,0,[{debug_line,2816,1246},{atom,{2816,37},true}]},
       {generate_strict,
        {2816,33},
        {tuple,
         {2816,13},
         [{var,{2816,14},'V'},
          {var,{2816,16},'Tuple'},
          {tuple,{2816,22},[{var,{2816,23},'From'},{var,{2816,28},'To'}]}]},
        {var,{2816,37},'DefLoc'}}]}},
    {debug_line,2817,1247},
    {match,
     {2817,5},
     {var,{2817,5},'F'},
     {call,{2817,9},{atom,{2817,9},rel2fam},[{var,{2817,17},'S'}]}},
    {debug_line,2818,1248},
    {call,
     {2818,5},
     {atom,{2818,5},partition_deflocs_1},
     [{var,{2818,25},'F'},{var,{2818,28},'Blocks'}]}]}]}.
{function,
    {2820,1},
    partition_deflocs_1,2,
    [{clause,
         {2820,1},
         [{var,{2820,1},'_'},{var,{2820,1},'_'}],
         [[{call,
               {2820,1},
               {remote,
                   {2820,1},
                   {atom,{2820,1},fake},
                   {atom,{2820,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2820,1249},{atom,{2820,1},ignore}]},
     {clause,
         {2820,1},
         [{cons,
              {2820,21},
              {tuple,
                  {2820,22},
                  [{var,{2820,23},'Tuple'},{var,{2820,29},'DefLocs0'}]},
              {var,{2820,39},'T'}},
          {var,{2820,43},'Blocks'}],
         [],
         [{debug_line,2821,1250},
          {match,
              {2821,5},
              {var,{2821,5},'DefLocs1'},
              {lc,{2821,16},
                  {block,0,[{var,{2821,17},'DL'}]},
                  [{block,0,[{atom,{2821,34},true}]},
                   {generate_strict,
                       {2821,30},
                       {tuple,
                           {2821,23},
                           [{var,{2821,24},'_'},{var,{2821,26},'DL'}]},
                       {var,{2821,34},'DefLocs0'}}]}},
          {debug_line,2822,1251},
          {match,
              {2822,5},
              {var,{2822,5},'DefLocs'},
              {call,
                  {2822,15},
                  {atom,{2822,15},partition_dl},
                  [{var,{2822,28},'DefLocs1'},{var,{2822,38},'Blocks'}]}},
          {debug_line,2823,1252},
          {op,{2823,35},
              '++',
              {lc,{2823,5},
                  {block,0,
                      [{tuple,
                           {2823,6},
                           [{var,{2823,7},'Tuple'},{var,{2823,13},'DL'}]}]},
                  [{block,0,[{atom,{2823,26},true}]},
                   {generate,
                       {2823,23},
                       {var,{2823,20},'DL'},
                       {var,{2823,26},'DefLocs'}}]},
              {call,
                  {2823,38},
                  {atom,{2823,38},partition_deflocs_1},
                  [{var,{2823,58},'T'},{var,{2823,61},'Blocks'}]}}]},
     {clause,
         {2824,1},
         [{nil,{2824,21}},{var,{2824,25},'_'}],
         [],
         [{debug_line,2824,1253},{nil,{2824,31}}]}]}.
{function,
    {2826,1},
    partition_dl,2,
    [{clause,
         {2826,1},
         [{var,{2826,1},'_'},{var,{2826,1},'_'}],
         [[{call,
               {2826,1},
               {remote,
                   {2826,1},
                   {atom,{2826,1},fake},
                   {atom,{2826,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2826,1254},{atom,{2826,1},ignore}]},
     {clause,
         {2826,1},
         [{match,
              {2826,14},
              {cons,{2826,14},{var,{2826,15},'_'},{nil,{2826,16}}},
              {var,{2826,18},'DefLoc'}},
          {var,{2826,26},'_Blocks'}],
         [],
         [{debug_line,2827,1255},
          {cons,{2827,5},{var,{2827,6},'DefLoc'},{nil,{2827,12}}}]},
     {clause,
         {2828,1},
         [{match,
              {2828,14},
              {cons,
                  {2828,14},
                  {tuple,
                      {2828,15},
                      [{var,{2828,16},'_'},
                       {tuple,
                           {2828,18},
                           [{var,{2828,19},'_'},{var,{2828,21},'First'}]}]},
                  {var,{2828,29},'_'}},
              {var,{2828,32},'DefLoc0'}},
          {var,{2828,41},'Blocks'}],
         [],
         [{debug_line,2829,1256},
          {match,
              {2829,5},
              {var,{2829,5},'RPO'},
              {call,
                  {2829,11},
                  {remote,
                      {2829,19},
                      {atom,{2829,11},beam_ssa},
                      {atom,{2829,20},rpo}},
                  [{block,0,
                       [{cons,
                            {2829,24},
                            {var,{2829,25},'First'},
                            {nil,{2829,30}}}]},
                   {var,{2829,33},'Blocks'}]}},
          {debug_line,2830,1257},
          {match,
              {2830,5},
              {tuple,{2830,5},[{var,{2830,6},'P'},{var,{2830,8},'DefLoc'}]},
              {call,
                  {2830,18},
                  {atom,{2830,18},partition_dl_1},
                  [{var,{2830,33},'DefLoc0'},
                   {var,{2830,42},'RPO'},
                   {nil,{2830,47}}]}},
          {debug_line,2831,1258},
          {cons,
              {2831,5},
              {var,{2831,6},'P'},
              {call,
                  {2831,8},
                  {atom,{2831,8},partition_dl},
                  [{var,{2831,21},'DefLoc'},{var,{2831,29},'Blocks'}]}}]},
     {clause,
         {2832,1},
         [{nil,{2832,14}},{var,{2832,18},'_Blocks'}],
         [],
         [{debug_line,2832,1259},{nil,{2832,30}}]}]}.
{function,
    {2834,1},
    partition_dl_1,3,
    [{clause,
         {2834,1},
         [{var,{2834,1},'_'},{var,{2834,1},'_'},{var,{2834,1},'_'}],
         [[{call,
               {2834,1},
               {remote,
                   {2834,1},
                   {atom,{2834,1},fake},
                   {atom,{2834,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2834,1260},{atom,{2834,1},ignore}]},
     {clause,
         {2834,1},
         [{cons,
              {2834,16},
              {match,
                  {2834,17},
                  {tuple,
                      {2834,17},
                      [{var,{2834,18},'_'},
                       {tuple,
                           {2834,20},
                           [{var,{2834,21},'_'},{var,{2834,23},'L'}]}]},
                  {var,{2834,27},'DL'}},
              {var,{2834,30},'DLs'}},
          {match,
              {2834,36},
              {cons,{2834,36},{var,{2834,37},'L'},{var,{2834,39},'_'}},
              {var,{2834,42},'Ls'}},
          {var,{2834,46},'Acc'}],
         [],
         [{debug_line,2835,1261},
          {call,
              {2835,5},
              {atom,{2835,5},partition_dl_1},
              [{var,{2835,20},'DLs'},
               {var,{2835,25},'Ls'},
               {block,0,
                   [{cons,
                        {2835,29},
                        {var,{2835,30},'DL'},
                        {var,{2835,33},'Acc'}}]}]}]},
     {clause,
         {2836,1},
         [{match,
              {2836,16},
              {cons,{2836,16},{var,{2836,17},'_'},{var,{2836,19},'_'}},
              {var,{2836,22},'DLs'}},
          {cons,{2836,27},{var,{2836,28},'_'},{var,{2836,30},'Ls'}},
          {var,{2836,35},'Acc'}],
         [],
         [{debug_line,2837,1262},
          {call,
              {2837,5},
              {atom,{2837,5},partition_dl_1},
              [{var,{2837,20},'DLs'},
               {var,{2837,25},'Ls'},
               {var,{2837,29},'Acc'}]}]},
     {clause,
         {2838,1},
         [{nil,{2838,16}},{var,{2838,20},'_'},{var,{2838,23},'Acc'}],
         [],
         [{debug_line,2839,1263},
          {tuple,
              {2839,5},
              [{call,
                   {2839,6},
                   {remote,
                       {2839,6},
                       {atom,{2839,6},lists},
                       {atom,{2839,6},reverse}},
                   [{var,{2839,14},'Acc'}]},
               {nil,{2839,19}}]}]},
     {clause,
         {2840,1},
         [{match,
              {2840,16},
              {cons,{2840,16},{var,{2840,17},'_'},{var,{2840,19},'_'}},
              {var,{2840,22},'DLs'}},
          {nil,{2840,27}},
          {var,{2840,31},'Acc'}],
         [],
         [{debug_line,2841,1264},
          {tuple,
              {2841,5},
              [{call,
                   {2841,6},
                   {remote,
                       {2841,6},
                       {atom,{2841,6},lists},
                       {atom,{2841,6},reverse}},
                   [{var,{2841,14},'Acc'}]},
               {var,{2841,19},'DLs'}]}]}]}.
{function,
 {2843,1},
 filter_deflocs,3,
 [{clause,
   {2843,1},
   [{var,{2843,1},'_'},{var,{2843,1},'_'},{var,{2843,1},'_'}],
   [[{call,
      {2843,1},
      {remote,{2843,1},{atom,{2843,1},fake},{atom,{2843,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2843,1265},{atom,{2843,1},ignore}]},
  {clause,
   {2843,1},
   [{cons,
     {2843,16},
     {tuple,{2843,17},[{var,{2843,18},'Tuple'},{var,{2843,24},'DefLoc0'}]},
     {var,{2843,33},'DLs'}},
    {var,{2843,39},'Preds'},
    {var,{2843,46},'Blocks'}],
   [],
   [{debug_line,2846,1266},
    {match,
     {2846,5},
     {cons,
      {2846,5},
      {tuple,
       {2846,6},
       [{var,{2846,7},'_'},
        {tuple,{2846,9},[{var,{2846,10},'_'},{var,{2846,12},'First'}]}]},
      {var,{2846,20},'_'}},
     {var,{2846,25},'DefLoc0'}},
    {debug_line,2847,1267},
    {match,
     {2847,5},
     {var,{2847,5},'Paths'},
     {call,
      {2847,13},
      {atom,{2847,13},find_paths_to_check},
      [{var,{2847,33},'DefLoc0'},{var,{2847,42},'First'}]}},
    {debug_line,2848,1268},
    {match,
     {2848,5},
     {var,{2848,5},'WillGC0'},
     {call,
      {2848,15},
      {remote,{2848,22},{atom,{2848,15},ordsets},{atom,{2848,23},from_list}},
      [{block,0,
        [{lc,
          {2848,33},
          {block,0,[{var,{2848,34},'FromTo'}]},
          [{block,0,[{atom,{2848,65},true}]},
           {generate_strict,
            {2848,61},
            {tuple,
             {2848,44},
             [{match,
               {2848,45},
               {tuple,{2848,45},[{var,{2848,46},'_'},{var,{2848,48},'_'}]},
               {var,{2848,51},'FromTo'}},
              {var,{2848,58},'_'}]},
            {var,{2848,65},'Paths'}}]}]}]}},
    {debug_line,2849,1269},
    {match,
     {2849,5},
     {var,{2849,5},'WillGC'},
     {mc,
      {2849,14},
      {map_field_assoc,
       {2849,26},
       {block,0,
        [{tuple,{2849,16},[{var,{2849,17},'From'},{var,{2849,22},'To'}]}]},
       {block,0,
        [{call,
          {2849,29},
          {atom,{2849,29},will_gc},
          [{var,{2849,37},'From'},
           {var,{2849,43},'To'},
           {var,{2849,47},'Preds'},
           {var,{2849,54},'Blocks'},
           {atom,{2849,62},true}]}]}},
      [{block,0,[{debug_line,2850,1270},{atom,{2850,32},true}]},
       {generate_strict,
        {2850,28},
        {tuple,{2850,18},[{var,{2850,19},'From'},{var,{2850,24},'To'}]},
        {var,{2850,32},'WillGC0'}}]}},
    {debug_line,2854,1271},
    {match,
     {2854,5},
     {tuple,
      {2854,5},
      [{var,{2854,6},'DefLocGC0'},{var,{2854,16},'DefLocNoGC'}]},
     {call,
      {2855,9},
      {remote,{2855,9},{atom,{2855,9},lists},{atom,{2855,9},partition}},
      [{block,0,
        [{debug_line,2855,1272},
         {'fun',
          {2855,19},
          {clauses,
           [{clause,
             {2855,22},
             [{tuple,
               {2855,23},
               [{match,
                 {2855,24},
                 {tuple,{2855,24},[{var,{2855,25},'_'},{var,{2855,27},'_'}]},
                 {var,{2855,30},'FromTo'}},
                {var,{2855,37},'_'}]}],
             [],
             [{debug_line,2856,1273},
              {call,
               {2856,27},
               {remote,
                {2856,27},
                {atom,{2856,27},erlang},
                {atom,{2856,27},map_get}},
               [{var,{2856,35},'FromTo'},{var,{2856,43},'WillGC'}]}]}]}}]},
       {var,{2857,24},'Paths'}]}},
    {debug_line,2860,1274},
    {match,
     {2860,5},
     {var,{2860,5},'DefLocGC'},
     {call,
      {2860,16},
      {atom,{2860,16},filter_gc_deflocs},
      [{var,{2860,34},'DefLocGC0'},
       {var,{2860,45},'Tuple'},
       {var,{2860,52},'First'},
       {var,{2860,59},'Preds'},
       {var,{2860,66},'Blocks'}]}},
    {debug_line,2863,1275},
    {match,
     {2863,5},
     {var,{2863,5},'DefLoc1'},
     {op,
      {2863,24},
      '++',
      {var,{2863,15},'DefLocGC'},
      {var,{2863,27},'DefLocNoGC'}}},
    {debug_line,2864,1276},
    {op,
     {2864,59},
     '++',
     {lc,
      {2864,5},
      {block,0,[{var,{2864,6},'DL'}]},
      [{block,0,[{atom,{2864,37},true}]},
       {generate_strict,
        {2864,33},
        {tuple,
         {2864,12},
         [{var,{2864,13},'_'},
          {match,
           {2864,15},
           {tuple,
            {2864,15},
            [{var,{2864,16},'_'},
             {tuple,{2864,18},[{var,{2864,19},'From'},{var,{2864,24},'To'}]}]},
           {var,{2864,29},'DL'}}]},
        {var,{2864,37},'DefLoc1'}},
       {block,0,[{atom,{2864,51},true}]},
       {op,{2864,51},'=/=',{var,{2864,46},'From'},{var,{2864,55},'To'}}]},
     {call,
      {2865,9},
      {atom,{2865,9},filter_deflocs},
      [{var,{2865,24},'DLs'},
       {var,{2865,29},'Preds'},
       {var,{2865,36},'Blocks'}]}}]},
  {clause,
   {2866,1},
   [{nil,{2866,16}},{var,{2866,20},'_'},{var,{2866,23},'_'}],
   [],
   [{debug_line,2866,1277},{nil,{2866,29}}]}]}.
{function,
    {2870,1},
    filter_gc_deflocs,5,
    [{clause,
         {2870,1},
         [{var,{2870,1},'_'},
          {var,{2870,1},'_'},
          {var,{2870,1},'_'},
          {var,{2870,1},'_'},
          {var,{2870,1},'_'}],
         [[{call,
               {2870,1},
               {remote,
                   {2870,1},
                   {atom,{2870,1},fake},
                   {atom,{2870,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2870,1278},{atom,{2870,1},ignore}]},
     {clause,
         {2870,1},
         [{var,{2870,19},'DefLocGC'},
          {var,{2870,29},'Tuple'},
          {var,{2870,36},'First'},
          {var,{2870,43},'Preds'},
          {var,{2870,50},'Blocks'}],
         [],
         [{debug_line,2871,1279},
          {'case',
              {2871,5},
              {var,{2871,10},'DefLocGC'},
              [{clause,
                   {2872,9},
                   [{nil,{2872,9}}],
                   [],
                   [{debug_line,2873,1280},{nil,{2873,13}}]},
               {clause,
                   {2874,9},
                   [{cons,
                        {2874,9},
                        {tuple,
                            {2874,10},
                            [{var,{2874,11},'_'},
                             {tuple,
                                 {2874,13},
                                 [{var,{2874,14},'_'},
                                  {tuple,
                                      {2874,16},
                                      [{var,{2874,17},'From'},
                                       {var,{2874,22},'To'}]}]}]},
                        {nil,{2874,27}}}],
                   [],
                   [{debug_line,2878,1281},
                    {'case',
                        {2878,13},
                        {call,
                            {2878,18},
                            {atom,{2878,18},is_on_stack},
                            [{var,{2878,30},'First'},
                             {var,{2878,37},'Tuple'},
                             {var,{2878,44},'Blocks'}]},
                        [{clause,
                             {2879,17},
                             [{atom,{2879,17},true}],
                             [],
                             [{debug_line,2884,1282},
                              {var,{2884,21},'DefLocGC'}]},
                         {clause,
                             {2885,17},
                             [{atom,{2885,17},false}],
                             [],
                             [{debug_line,2886,1283},
                              {'case',
                                  {2886,21},
                                  {call,
                                      {2886,26},
                                      {atom,{2886,26},will_gc},
                                      [{var,{2886,34},'From'},
                                       {var,{2886,40},'To'},
                                       {var,{2886,44},'Preds'},
                                       {var,{2886,51},'Blocks'},
                                       {atom,{2886,59},false}]},
                                  [{clause,
                                       {2887,25},
                                       [{atom,{2887,25},false}],
                                       [],
                                       [{debug_line,2896,1284},
                                        {var,{2896,29},'DefLocGC'}]},
                                   {clause,
                                       {2897,25},
                                       [{atom,{2897,25},true}],
                                       [],
                                       [{debug_line,2902,1285},
                                        {nil,{2902,29}}]}]}]}]}]},
               {clause,
                   {2905,9},
                   [{cons,
                        {2905,9},
                        {var,{2905,10},'_'},
                        {cons,
                            {2905,12},
                            {var,{2905,12},'_'},
                            {var,{2905,14},'_'}}}],
                   [],
                   [{debug_line,2909,1286},{var,{2909,13},'DefLocGC'}]}]}]}]}.
{function,
    {2912,1},
    find_paths_to_check,2,
    [{clause,
         {2912,1},
         [{var,{2912,1},'_'},{var,{2912,1},'_'}],
         [[{call,
               {2912,1},
               {remote,
                   {2912,1},
                   {atom,{2912,1},fake},
                   {atom,{2912,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2912,1287},{atom,{2912,1},ignore}]},
     {clause,
         {2912,1},
         [{cons,
              {2912,21},
              {match,
                  {2912,22},
                  {tuple,
                      {2912,22},
                      [{var,{2912,23},'_'},
                       {tuple,
                           {2912,25},
                           [{var,{2912,26},'_'},{var,{2912,28},'To'}]}]},
                  {var,{2912,33},'Move'}},
              {var,{2912,38},'T'}},
          {var,{2912,42},'First'}],
         [],
         [{debug_line,2913,1288},
          {cons,
              {2913,5},
              {tuple,
                  {2913,6},
                  [{tuple,
                       {2913,7},
                       [{var,{2913,8},'First'},{var,{2913,14},'To'}]},
                   {var,{2913,18},'Move'}]},
              {call,
                  {2913,24},
                  {atom,{2913,24},find_paths_to_check},
                  [{var,{2913,44},'T'},{var,{2913,47},'First'}]}}]},
     {clause,
         {2914,1},
         [{nil,{2914,21}},{var,{2914,25},'_First'}],
         [],
         [{debug_line,2914,1289},{nil,{2914,36}}]}]}.
{function,
    {2916,1},
    will_gc,5,
    [{clause,
         {2916,1},
         [{var,{2916,1},'_'},
          {var,{2916,1},'_'},
          {var,{2916,1},'_'},
          {var,{2916,1},'_'},
          {var,{2916,1},'_'}],
         [[{call,
               {2916,1},
               {remote,
                   {2916,1},
                   {atom,{2916,1},fake},
                   {atom,{2916,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2916,1290},{atom,{2916,1},ignore}]},
     {clause,
         {2916,1},
         [{var,{2916,9},'From'},
          {var,{2916,15},'To'},
          {var,{2916,19},'Preds'},
          {var,{2916,26},'Blocks'},
          {var,{2916,34},'All'}],
         [],
         [{debug_line,2917,1291},
          {match,
              {2917,5},
              {var,{2917,5},'Between'},
              {call,
                  {2917,15},
                  {remote,
                      {2917,23},
                      {atom,{2917,15},beam_ssa},
                      {atom,{2917,24},between}},
                  [{var,{2917,32},'From'},
                   {var,{2917,38},'To'},
                   {var,{2917,42},'Preds'},
                   {var,{2917,49},'Blocks'}]}},
          {debug_line,2918,1292},
          {call,
              {2918,5},
              {atom,{2918,5},will_gc_1},
              [{var,{2918,15},'Between'},
               {var,{2918,24},'To'},
               {var,{2918,28},'Blocks'},
               {var,{2918,36},'All'},
               {block,0,
                   [{map,
                        {2918,41},
                        [{map_field_assoc,
                             {2918,48},
                             {var,{2918,43},'From'},
                             {atom,{2918,51},false}}]}]}]}]}]}.
{function,
    {2920,1},
    will_gc_1,5,
    [{clause,
         {2920,1},
         [{var,{2920,1},'_'},
          {var,{2920,1},'_'},
          {var,{2920,1},'_'},
          {var,{2920,1},'_'},
          {var,{2920,1},'_'}],
         [[{call,
               {2920,1},
               {remote,
                   {2920,1},
                   {atom,{2920,1},fake},
                   {atom,{2920,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2920,1293},{atom,{2920,1},ignore}]},
     {clause,
         {2920,1},
         [{cons,{2920,11},{var,{2920,12},'To'},{var,{2920,15},'_'}},
          {var,{2920,19},'To'},
          {var,{2920,23},'_Blocks'},
          {var,{2920,32},'_All'},
          {var,{2920,38},'WillGC'}],
         [],
         [{debug_line,2921,1294},
          {call,
              {2921,5},
              {remote,{2921,5},{atom,{2921,5},erlang},{atom,{2921,5},map_get}},
              [{var,{2921,13},'To'},{var,{2921,17},'WillGC'}]}]},
     {clause,
         {2922,1},
         [{cons,{2922,11},{var,{2922,12},'L'},{var,{2922,14},'Ls'}},
          {var,{2922,19},'To'},
          {var,{2922,23},'Blocks'},
          {var,{2922,31},'All'},
          {var,{2922,36},'WillGC0'}],
         [],
         [{debug_line,2923,1295},
          {match,
              {2923,5},
              {tuple,
                  {2923,5},
                  [{atom,{2923,5},b_blk},
                   {var,{2923,5},'_'},
                   {var,{2923,15},'Is'},
                   {var,{2923,5},'_'}]},
              {match,
                  {2923,21},
                  {var,{2923,21},'Blk'},
                  {call,
                      {2923,27},
                      {remote,
                          {2923,27},
                          {atom,{2923,27},erlang},
                          {atom,{2923,27},map_get}},
                      [{var,{2923,35},'L'},{var,{2923,38},'Blocks'}]}}},
          {debug_line,2924,1296},
          {match,
              {2924,5},
              {var,{2924,5},'GC'},
              {'case',
                  {2924,10},
                  {call,
                      {2924,10},
                      {remote,
                          {2924,10},
                          {atom,{2924,10},erlang},
                          {atom,{2924,10},map_get}},
                      [{var,{2924,18},'L'},{var,{2924,21},'WillGC0'}]},
                  [{clause,
                       {2924,10},
                       [{atom,{2924,10},true}],
                       [],
                       [{atom,{2924,10},true}]},
                   {clause,
                       {2924,10},
                       [{atom,{2924,10},false}],
                       [],
                       [{call,
                            {2924,37},
                            {atom,{2924,37},will_gc_is},
                            [{var,{2924,48},'Is'},{var,{2924,52},'All'}]}]},
                   {clause,
                       [{generated,true},{location,{2924,10}}],
                       [{var,{2924,10},cov1}],
                       [],
                       [{call,
                            {2924,10},
                            {remote,
                                {2924,10},
                                {atom,{2924,10},erlang},
                                {atom,{2924,10},error}},
                            [{block,0,
                                 [{tuple,
                                      {2924,10},
                                      [{atom,{2924,10},badarg},
                                       {var,{2924,10},cov1}]}]}]}]}]}},
          {debug_line,2925,1297},
          {match,
              {2925,5},
              {var,{2925,5},'WillGC'},
              {call,
                  {2925,14},
                  {atom,{2925,14},gc_update_successors},
                  [{var,{2925,35},'Blk'},
                   {var,{2925,40},'GC'},
                   {var,{2925,44},'WillGC0'}]}},
          {debug_line,2926,1298},
          {call,
              {2926,5},
              {atom,{2926,5},will_gc_1},
              [{var,{2926,15},'Ls'},
               {var,{2926,19},'To'},
               {var,{2926,23},'Blocks'},
               {var,{2926,31},'All'},
               {var,{2926,36},'WillGC'}]}]}]}.
{function,
    {2928,1},
    will_gc_is,2,
    [{clause,
         {2928,1},
         [{var,{2928,1},'_'},{var,{2928,1},'_'}],
         [[{call,
               {2928,1},
               {remote,
                   {2928,1},
                   {atom,{2928,1},fake},
                   {atom,{2928,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2928,1299},{atom,{2928,1},ignore}]},
     {clause,
         {2928,1},
         [{cons,
              {2928,12},
              {tuple,
                  {2928,13},
                  [{atom,{2928,13},b_set},
                   {var,{2928,13},'_'},
                   {var,{2928,13},'_'},
                   {atom,{2928,23},call},
                   {var,{2928,33},'Args'}]},
              {var,{2928,39},'Is'}},
          {atom,{2928,44},false}],
         [],
         [{debug_line,2929,1300},
          {'case',
              {2929,5},
              {var,{2929,10},'Args'},
              [{clause,
                   {2930,9},
                   [{cons,
                        {2930,9},
                        {tuple,
                            {2930,10},
                            [{atom,{2930,10},b_remote},
                             {tuple,
                                 {2930,24},
                                 [{atom,{2930,24},b_literal},
                                  {atom,{2930,39},erlang}]},
                             {var,{2930,10},'_'},
                             {var,{2930,10},'_'}]},
                        {var,{2930,48},'_'}}],
                   [],
                   [{debug_line,2933,1301},
                    {call,
                        {2933,13},
                        {atom,{2933,13},will_gc_is},
                        [{var,{2933,24},'Is'},{atom,{2933,28},false}]}]},
               {clause,
                   {2934,9},
                   [{cons,{2934,9},{var,{2934,10},'_'},{var,{2934,12},'_'}}],
                   [],
                   [{debug_line,2935,1302},{atom,{2935,13},true}]}]}]},
     {clause,
         {2937,1},
         [{cons,{2937,12},{var,{2937,13},'_'},{var,{2937,15},'Is'}},
          {atom,{2937,20},false}],
         [],
         [{debug_line,2940,1303},
          {call,
              {2940,5},
              {atom,{2940,5},will_gc_is},
              [{var,{2940,16},'Is'},{atom,{2940,20},false}]}]},
     {clause,
         {2941,1},
         [{cons,{2941,12},{var,{2941,13},'I'},{var,{2941,15},'Is'}},
          {var,{2941,20},'All'}],
         [],
         [{debug_line,2942,1304},
          {'case',
              {2942,5},
              {call,
                  {2942,5},
                  {remote,
                      {2942,13},
                      {atom,{2942,5},beam_ssa},
                      {atom,{2942,14},clobbers_xregs}},
                  [{var,{2942,29},'I'}]},
              [{clause,
                   {2942,5},
                   [{atom,{2942,5},true}],
                   [],
                   [{atom,{2942,5},true}]},
               {clause,
                   {2942,5},
                   [{atom,{2942,5},false}],
                   [],
                   [{call,
                        {2942,39},
                        {atom,{2942,39},will_gc_is},
                        [{var,{2942,50},'Is'},{var,{2942,54},'All'}]}]},
               {clause,
                   [{generated,true},{location,{2942,5}}],
                   [{var,{2942,5},cov1}],
                   [],
                   [{call,
                        {2942,5},
                        {remote,
                            {2942,5},
                            {atom,{2942,5},erlang},
                            {atom,{2942,5},error}},
                        [{block,0,
                             [{tuple,
                                  {2942,5},
                                  [{atom,{2942,5},badarg},
                                   {var,{2942,5},cov1}]}]}]}]}]}]},
     {clause,
         {2943,1},
         [{nil,{2943,12}},{var,{2943,16},'_All'}],
         [],
         [{debug_line,2943,1305},{atom,{2943,25},false}]}]}.
{function,
    {2945,1},
    is_on_stack,3,
    [{clause,
         {2945,1},
         [{var,{2945,1},'_'},{var,{2945,1},'_'},{var,{2945,1},'_'}],
         [[{call,
               {2945,1},
               {remote,
                   {2945,1},
                   {atom,{2945,1},fake},
                   {atom,{2945,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2945,1306},{atom,{2945,1},ignore}]},
     {clause,
         {2945,1},
         [{var,{2945,13},'From'},
          {var,{2945,19},'Var'},
          {var,{2945,24},'Blocks'}],
         [],
         [{debug_line,2946,1307},
          {call,
              {2946,5},
              {atom,{2946,5},is_on_stack},
              [{block,0,
                   [{call,
                        {2946,17},
                        {remote,
                            {2946,25},
                            {atom,{2946,17},beam_ssa},
                            {atom,{2946,26},rpo}},
                        [{block,0,
                             [{cons,
                                  {2946,30},
                                  {var,{2946,31},'From'},
                                  {nil,{2946,35}}}]},
                         {var,{2946,38},'Blocks'}]}]},
               {var,{2946,47},'Var'},
               {var,{2946,52},'Blocks'},
               {block,0,
                   [{map,
                        {2946,60},
                        [{map_field_assoc,
                             {2946,67},
                             {var,{2946,62},'From'},
                             {atom,{2946,70},false}}]}]}]}]}]}.
{function,
    {2948,1},
    is_on_stack,4,
    [{clause,
         {2948,1},
         [{var,{2948,1},'_'},
          {var,{2948,1},'_'},
          {var,{2948,1},'_'},
          {var,{2948,1},'_'}],
         [[{call,
               {2948,1},
               {remote,
                   {2948,1},
                   {atom,{2948,1},fake},
                   {atom,{2948,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2948,1308},{atom,{2948,1},ignore}]},
     {clause,
         {2948,1},
         [{cons,{2948,13},{var,{2948,14},'L'},{var,{2948,16},'Ls'}},
          {var,{2948,21},'Var'},
          {var,{2948,26},'Blocks'},
          {var,{2948,34},'WillGC0'}],
         [],
         [{debug_line,2949,1309},
          {match,
              {2949,5},
              {tuple,
                  {2949,5},
                  [{atom,{2949,5},b_blk},
                   {var,{2949,5},'_'},
                   {var,{2949,15},'Is'},
                   {var,{2949,5},'_'}]},
              {match,
                  {2949,21},
                  {var,{2949,21},'Blk'},
                  {call,
                      {2949,27},
                      {remote,
                          {2949,27},
                          {atom,{2949,27},erlang},
                          {atom,{2949,27},map_get}},
                      [{var,{2949,35},'L'},{var,{2949,38},'Blocks'}]}}},
          {debug_line,2950,1310},
          {match,
              {2950,5},
              {var,{2950,5},'GC0'},
              {call,
                  {2950,11},
                  {remote,
                      {2950,11},
                      {atom,{2950,11},erlang},
                      {atom,{2950,11},map_get}},
                  [{var,{2950,19},'L'},{var,{2950,22},'WillGC0'}]}},
          {debug_line,2951,1311},
          {'case',
              {2951,5},
              {call,
                  {2951,10},
                  {atom,{2951,10},is_on_stack_is},
                  [{var,{2951,25},'Is'},
                   {var,{2951,29},'Var'},
                   {var,{2951,34},'GC0'}]},
              [{clause,
                   {2952,9},
                   [{tuple,
                        {2952,9},
                        [{atom,{2952,10},done},{var,{2952,15},'GC'}]}],
                   [],
                   [{debug_line,2953,1312},{var,{2953,13},'GC'}]},
               {clause,
                   {2954,9},
                   [{var,{2954,9},'GC'}],
                   [],
                   [{debug_line,2955,1313},
                    {match,
                        {2955,13},
                        {var,{2955,13},'WillGC'},
                        {call,
                            {2955,22},
                            {atom,{2955,22},gc_update_successors},
                            [{var,{2955,43},'Blk'},
                             {var,{2955,48},'GC'},
                             {var,{2955,52},'WillGC0'}]}},
                    {debug_line,2956,1314},
                    {call,
                        {2956,13},
                        {atom,{2956,13},is_on_stack},
                        [{var,{2956,25},'Ls'},
                         {var,{2956,29},'Var'},
                         {var,{2956,34},'Blocks'},
                         {var,{2956,42},'WillGC'}]}]}]}]},
     {clause,
         {2958,1},
         [{nil,{2958,13}},
          {var,{2958,17},'_Var'},
          {var,{2958,23},'_'},
          {var,{2958,26},'_'}],
         [],
         [{debug_line,2958,1315},{atom,{2958,32},false}]}]}.
{function,
 {2960,1},
 is_on_stack_is,3,
 [{clause,
   {2960,1},
   [{var,{2960,1},'_'},{var,{2960,1},'_'},{var,{2960,1},'_'}],
   [[{call,
      {2960,1},
      {remote,{2960,1},{atom,{2960,1},fake},{atom,{2960,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2960,1316},{atom,{2960,1},ignore}]},
  {clause,
   {2960,1},
   [{cons,
     {2960,16},
     {tuple,
      {2960,17},
      [{atom,{2960,17},b_set},
       {var,{2960,17},'_'},
       {var,{2960,17},'_'},
       {atom,{2960,27},get_tuple_element},
       {var,{2960,17},'_'}]},
     {var,{2960,46},'Is'}},
    {var,{2960,51},'Var'},
    {var,{2960,56},'GC'}],
   [],
   [{debug_line,2961,1317},
    {call,
     {2961,5},
     {atom,{2961,5},is_on_stack_is},
     [{var,{2961,20},'Is'},{var,{2961,24},'Var'},{var,{2961,29},'GC'}]}]},
  {clause,
   {2962,1},
   [{cons,{2962,16},{var,{2962,17},'I'},{var,{2962,19},'Is'}},
    {var,{2962,24},'Var'},
    {var,{2962,29},'GC0'}],
   [],
   [{debug_line,2963,1318},
    {'case',
     {2963,5},
     {'case',
      {2963,10},
      {var,{2963,10},'GC0'},
      [{clause,
        {2963,10},
        [{atom,{2963,10},true}],
        [],
        [{call,
          {2963,22},
          {remote,{2963,22},{atom,{2963,22},lists},{atom,{2963,22},member}},
          [{var,{2963,29},'Var'},
           {block,0,
            [{call,
              {2963,34},
              {remote,
               {2963,42},
               {atom,{2963,34},beam_ssa},
               {atom,{2963,43},used}},
              [{var,{2963,48},'I'}]}]}]}]},
       {clause,{2963,10},[{atom,{2963,10},false}],[],[{atom,{2963,10},false}]},
       {clause,
        [{generated,true},{location,{2963,10}}],
        [{var,{2963,10},cov1}],
        [],
        [{call,
          {2963,10},
          {remote,{2963,10},{atom,{2963,10},erlang},{atom,{2963,10},error}},
          [{block,0,
            [{tuple,
              {2963,10},
              [{atom,{2963,10},badarg},{var,{2963,10},cov1}]}]}]}]}]},
     [{clause,
       {2964,9},
       [{atom,{2964,9},true}],
       [],
       [{debug_line,2965,1319},
        {tuple,{2965,13},[{atom,{2965,14},done},{var,{2965,19},'GC0'}]}]},
      {clause,
       {2966,9},
       [{atom,{2966,9},false}],
       [],
       [{debug_line,2967,1320},
        {match,
         {2967,13},
         {var,{2967,13},'GC'},
         {'case',
          {2967,18},
          {var,{2967,18},'GC0'},
          [{clause,
            {2967,18},
            [{atom,{2967,18},true}],
            [],
            [{atom,{2967,18},true}]},
           {clause,
            {2967,18},
            [{atom,{2967,18},false}],
            [],
            [{call,
              {2967,29},
              {remote,
               {2967,37},
               {atom,{2967,29},beam_ssa},
               {atom,{2967,38},clobbers_xregs}},
              [{var,{2967,53},'I'}]}]},
           {clause,
            [{generated,true},{location,{2967,18}}],
            [{var,{2967,18},cov2}],
            [],
            [{call,
              {2967,18},
              {remote,
               {2967,18},
               {atom,{2967,18},erlang},
               {atom,{2967,18},error}},
              [{block,0,
                [{tuple,
                  {2967,18},
                  [{atom,{2967,18},badarg},{var,{2967,18},cov2}]}]}]}]}]}},
        {debug_line,2968,1321},
        {call,
         {2968,13},
         {atom,{2968,13},is_on_stack_is},
         [{var,{2968,28},'Is'},
          {var,{2968,32},'Var'},
          {var,{2968,37},'GC'}]}]}]}]},
  {clause,
   {2970,1},
   [{nil,{2970,16}},{var,{2970,20},'_'},{var,{2970,23},'GC'}],
   [],
   [{debug_line,2970,1322},{var,{2970,30},'GC'}]}]}.
{function,
 {2972,1},
 gc_update_successors,3,
 [{clause,
   {2972,1},
   [{var,{2972,1},'_'},{var,{2972,1},'_'},{var,{2972,1},'_'}],
   [[{call,
      {2972,1},
      {remote,{2972,1},{atom,{2972,1},fake},{atom,{2972,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2972,1323},{atom,{2972,1},ignore}]},
  {clause,
   {2972,1},
   [{var,{2972,22},'Blk'},{var,{2972,27},'GC'},{var,{2972,31},'WillGC'}],
   [],
   [{debug_line,2973,1324},
    {call,
     {2973,5},
     {remote,{2973,5},{atom,{2973,5},lists},{atom,{2973,5},foldl}},
     [{block,0,
       [{'fun',
         {2973,11},
         {clauses,
          [{clause,
            {2973,14},
            [{var,{2973,15},'L'},{var,{2973,18},'Acc'}],
            [],
            [{debug_line,2974,1325},
             {'case',
              {2974,19},
              {var,{2974,24},'Acc'},
              [{clause,
                {2975,23},
                [{map,
                  {2975,23},
                  [{map_field_exact,
                    {2975,27},
                    {var,{2975,25},'L'},
                    {atom,{2975,30},true}}]}],
                [],
                [{debug_line,2975,1326},{var,{2975,39},'Acc'}]},
               {clause,
                {2976,23},
                [{map,
                  {2976,23},
                  [{map_field_exact,
                    {2976,27},
                    {var,{2976,25},'L'},
                    {atom,{2976,30},false}}]}],
                [[{op,
                   {2976,45},
                   '=:=',
                   {var,{2976,42},'GC'},
                   {atom,{2976,49},false}}]],
                [{debug_line,2976,1327},{var,{2976,58},'Acc'}]},
               {clause,
                {2977,23},
                [{map,{2977,23},[]}],
                [],
                [{debug_line,2977,1328},
                 {map,
                  {2977,33},
                  {var,{2977,30},'Acc'},
                  [{map_field_assoc,
                    {2977,37},
                    {var,{2977,35},'L'},
                    {var,{2977,40},'GC'}}]}]}]}]}]}}]},
      {var,{2979,16},'WillGC'},
      {block,0,
       [{debug_line,2979,1329},
        {call,
         {2979,24},
         {remote,
          {2979,32},
          {atom,{2979,24},beam_ssa},
          {atom,{2979,33},successors}},
         [{var,{2979,44},'Blk'}]}]}]}]}]}.
{function,
    {2985,1},
    unsuitable,3,
    [{clause,
         {2985,1},
         [{var,{2985,1},'_'},{var,{2985,1},'_'},{var,{2985,1},'_'}],
         [[{call,
               {2985,1},
               {remote,
                   {2985,1},
                   {atom,{2985,1},fake},
                   {atom,{2985,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2985,1330},{atom,{2985,1},ignore}]},
     {clause,
         {2985,1},
         [{var,{2985,12},'Linear'},
          {var,{2985,20},'Blocks'},
          {var,{2985,28},'Predecessors'}],
         [[{call,
               {2985,47},
               {remote,
                   {2985,47},
                   {atom,{2985,47},erlang},
                   {atom,{2985,47},is_map}},
               [{var,{2985,54},'Blocks'}]},
           {call,
               {2985,63},
               {remote,
                   {2985,63},
                   {atom,{2985,63},erlang},
                   {atom,{2985,63},is_map}},
               [{var,{2985,70},'Predecessors'}]}]],
         [{debug_line,2986,1331},
          {match,
              {2986,5},
              {var,{2986,5},'Unsuitable0'},
              {call,
                  {2986,19},
                  {atom,{2986,19},unsuitable_1},
                  [{var,{2986,32},'Linear'}]}},
          {debug_line,2987,1332},
          {match,
              {2987,5},
              {var,{2987,5},'Unsuitable1'},
              {call,
                  {2987,19},
                  {atom,{2987,19},unsuitable_recv},
                  [{var,{2987,35},'Linear'},
                   {var,{2987,43},'Blocks'},
                   {var,{2987,51},'Predecessors'}]}},
          {debug_line,2988,1333},
          {call,
              {2988,5},
              {remote,
                  {2988,12},
                  {atom,{2988,5},gb_sets},
                  {atom,{2988,13},from_list}},
              [{block,0,
                   [{op,{2988,35},
                        '++',
                        {var,{2988,23},'Unsuitable0'},
                        {var,{2988,38},'Unsuitable1'}}]}]}]}]}.
{function,
    {2990,1},
    unsuitable_1,1,
    [{clause,
         {2990,1},
         [{var,{2990,1},'_'}],
         [[{call,
               {2990,1},
               {remote,
                   {2990,1},
                   {atom,{2990,1},fake},
                   {atom,{2990,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2990,1334},{atom,{2990,1},ignore}]},
     {clause,
         {2990,1},
         [{cons,
              {2990,14},
              {tuple,
                  {2990,15},
                  [{var,{2990,16},'L'},
                   {tuple,
                       {2990,18},
                       [{atom,{2990,18},b_blk},
                        {var,{2990,18},'_'},
                        {cons,
                            {2990,28},
                            {match,
                                {2990,29},
                                {tuple,
                                    {2990,29},
                                    [{atom,{2990,29},b_set},
                                     {var,{2990,29},'_'},
                                     {var,{2990,29},'_'},
                                     {var,{2990,39},'Op'},
                                     {var,{2990,29},'_'}]},
                                {var,{2990,43},'I'}},
                            {var,{2990,45},'_'}},
                        {var,{2990,18},'_'}]}]},
              {var,{2990,50},'Bs'}}],
         [],
         [{debug_line,2991,1335},
          {match,
              {2991,5},
              {var,{2991,5},'Unsuitable'},
              {'case',
                  {2991,18},
                  {var,{2991,23},'Op'},
                  [{clause,
                       {2992,22},
                       [{atom,{2992,22},bs_extract}],
                       [],
                       [{debug_line,2992,1336},{atom,{2992,36},true}]},
                   {clause,
                       {2993,22},
                       [{atom,{2993,22},bs_match}],
                       [],
                       [{debug_line,2993,1337},{atom,{2993,34},true}]},
                   {clause,
                       {2994,22},
                       [{tuple,
                            {2994,22},
                            [{atom,{2994,23},float},{var,{2994,29},'_'}]}],
                       [],
                       [{debug_line,2994,1338},{atom,{2994,35},true}]},
                   {clause,
                       {2995,22},
                       [{atom,{2995,22},landingpad}],
                       [],
                       [{debug_line,2995,1339},{atom,{2995,36},true}]},
                   {clause,
                       {2996,22},
                       [{var,{2996,22},'_'}],
                       [],
                       [{debug_line,2996,1340},
                        {call,
                            {2996,27},
                            {remote,
                                {2996,35},
                                {atom,{2996,27},beam_ssa},
                                {atom,{2996,36},is_loop_header}},
                            [{var,{2996,51},'I'}]}]}]}},
          {debug_line,2998,1341},
          {'case',
              {2998,5},
              {var,{2998,10},'Unsuitable'},
              [{clause,
                   {2999,9},
                   [{atom,{2999,9},true}],
                   [],
                   [{debug_line,3000,1342},
                    {cons,
                        {3000,13},
                        {var,{3000,14},'L'},
                        {call,
                            {3000,16},
                            {atom,{3000,16},unsuitable_1},
                            [{var,{3000,29},'Bs'}]}}]},
               {clause,
                   {3001,9},
                   [{atom,{3001,9},false}],
                   [],
                   [{debug_line,3002,1343},
                    {call,
                        {3002,13},
                        {atom,{3002,13},unsuitable_1},
                        [{var,{3002,26},'Bs'}]}]}]}]},
     {clause,
         {3004,1},
         [{cons,
              {3004,14},
              {tuple,
                  {3004,15},
                  [{var,{3004,16},'_'},
                   {tuple,
                       {3004,18},
                       [{atom,{3004,18},b_blk},
                        {var,{3004,18},'_'},
                        {var,{3004,18},'_'},
                        {var,{3004,18},'_'}]}]},
              {var,{3004,28},'Bs'}}],
         [],
         [{debug_line,3005,1344},
          {call,
              {3005,5},
              {atom,{3005,5},unsuitable_1},
              [{var,{3005,18},'Bs'}]}]},
     {clause,
         {3006,1},
         [{nil,{3006,14}}],
         [],
         [{debug_line,3006,1345},{nil,{3006,21}}]}]}.
{function,
    {3008,1},
    unsuitable_recv,3,
    [{clause,
         {3008,1},
         [{var,{3008,1},'_'},{var,{3008,1},'_'},{var,{3008,1},'_'}],
         [[{call,
               {3008,1},
               {remote,
                   {3008,1},
                   {atom,{3008,1},fake},
                   {atom,{3008,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3008,1346},{atom,{3008,1},ignore}]},
     {clause,
         {3008,1},
         [{cons,
              {3008,17},
              {tuple,
                  {3008,18},
                  [{var,{3008,19},'L'},
                   {tuple,
                       {3008,21},
                       [{atom,{3008,21},b_blk},
                        {var,{3008,21},'_'},
                        {cons,
                            {3008,31},
                            {tuple,
                                {3008,32},
                                [{atom,{3008,32},b_set},
                                 {var,{3008,32},'_'},
                                 {var,{3008,32},'_'},
                                 {var,{3008,42},'Op'},
                                 {var,{3008,32},'_'}]},
                            {var,{3008,46},'_'}},
                        {var,{3008,21},'_'}]}]},
              {var,{3008,51},'Bs'}},
          {var,{3008,56},'Blocks'},
          {var,{3008,64},'Predecessors'}],
         [],
         [{debug_line,3009,1347},
          {match,
              {3009,5},
              {var,{3009,5},'Ls'},
              {'case',
                  {3009,10},
                  {var,{3009,15},'Op'},
                  [{clause,
                       {3010,14},
                       [{atom,{3010,14},remove_message}],
                       [],
                       [{debug_line,3011,1348},
                        {call,
                            {3011,18},
                            {atom,{3011,18},unsuitable_loop},
                            [{var,{3011,34},'L'},
                             {var,{3011,37},'Blocks'},
                             {var,{3011,45},'Predecessors'}]}]},
                   {clause,
                       {3012,14},
                       [{atom,{3012,14},recv_next}],
                       [],
                       [{debug_line,3013,1349},
                        {call,
                            {3013,18},
                            {atom,{3013,18},unsuitable_loop},
                            [{var,{3013,34},'L'},
                             {var,{3013,37},'Blocks'},
                             {var,{3013,45},'Predecessors'}]}]},
                   {clause,
                       {3014,14},
                       [{var,{3014,14},'_'}],
                       [],
                       [{debug_line,3015,1350},{nil,{3015,18}}]}]}},
          {debug_line,3017,1351},
          {op,{3017,8},
              '++',
              {var,{3017,5},'Ls'},
              {call,
                  {3017,11},
                  {atom,{3017,11},unsuitable_recv},
                  [{var,{3017,27},'Bs'},
                   {var,{3017,31},'Blocks'},
                   {var,{3017,39},'Predecessors'}]}}]},
     {clause,
         {3018,1},
         [{cons,{3018,17},{var,{3018,18},'_'},{var,{3018,20},'Bs'}},
          {var,{3018,25},'Blocks'},
          {var,{3018,33},'Predecessors'}],
         [],
         [{debug_line,3019,1352},
          {call,
              {3019,5},
              {atom,{3019,5},unsuitable_recv},
              [{var,{3019,21},'Bs'},
               {var,{3019,25},'Blocks'},
               {var,{3019,33},'Predecessors'}]}]},
     {clause,
         {3020,1},
         [{nil,{3020,17}},{var,{3020,21},'_'},{var,{3020,24},'_'}],
         [],
         [{debug_line,3020,1353},{nil,{3020,30}}]}]}.
{function,{3022,1},
          unsuitable_loop,3,
          [{clause,{3022,1},
                   [{var,{3022,1},'_'},{var,{3022,1},'_'},{var,{3022,1},'_'}],
                   [[{call,{3022,1},
                           {remote,{3022,1},
                                   {atom,{3022,1},fake},
                                   {atom,{3022,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3022,1354},{atom,{3022,1},ignore}]},
           {clause,{3022,1},
                   [{var,{3022,17},'L'},
                    {var,{3022,20},'Blocks'},
                    {var,{3022,28},'Predecessors'}],
                   [],
                   [{debug_line,3023,1355},
                    {call,{3023,5},
                          {atom,{3023,5},unsuitable_loop},
                          [{var,{3023,21},'L'},
                           {var,{3023,24},'Blocks'},
                           {var,{3023,32},'Predecessors'},
                           {nil,{3023,46}}]}]}]}.
{function,
    {3025,1},
    unsuitable_loop,4,
    [{clause,
         {3025,1},
         [{var,{3025,1},'_'},
          {var,{3025,1},'_'},
          {var,{3025,1},'_'},
          {var,{3025,1},'_'}],
         [[{call,
               {3025,1},
               {remote,
                   {3025,1},
                   {atom,{3025,1},fake},
                   {atom,{3025,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3025,1356},{atom,{3025,1},ignore}]},
     {clause,
         {3025,1},
         [{var,{3025,17},'L'},
          {var,{3025,20},'Blocks'},
          {var,{3025,28},'Predecessors'},
          {var,{3025,42},'Acc'}],
         [],
         [{debug_line,3026,1357},
          {match,
              {3026,5},
              {var,{3026,5},'Ps'},
              {call,
                  {3026,10},
                  {remote,
                      {3026,10},
                      {atom,{3026,10},erlang},
                      {atom,{3026,10},map_get}},
                  [{var,{3026,18},'L'},{var,{3026,21},'Predecessors'}]}},
          {debug_line,3027,1358},
          {call,
              {3027,5},
              {atom,{3027,5},unsuitable_loop_1},
              [{var,{3027,23},'Ps'},
               {var,{3027,27},'Blocks'},
               {var,{3027,35},'Predecessors'},
               {var,{3027,49},'Acc'}]}]}]}.
{function,
 {3029,1},
 unsuitable_loop_1,4,
 [{clause,
   {3029,1},
   [{var,{3029,1},'_'},
    {var,{3029,1},'_'},
    {var,{3029,1},'_'},
    {var,{3029,1},'_'}],
   [[{call,
      {3029,1},
      {remote,{3029,1},{atom,{3029,1},fake},{atom,{3029,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3029,1359},{atom,{3029,1},ignore}]},
  {clause,
   {3029,1},
   [{cons,{3029,19},{var,{3029,20},'P'},{var,{3029,22},'Ps'}},
    {var,{3029,27},'Blocks'},
    {var,{3029,35},'Predecessors'},
    {var,{3029,49},'Acc0'}],
   [],
   [{debug_line,3030,1360},
    {'case',
     {3030,5},
     {call,
      {3030,10},
      {atom,{3030,10},is_loop_header},
      [{var,{3030,25},'P'},{var,{3030,28},'Blocks'}]},
     [{clause,
       {3031,9},
       [{atom,{3031,9},true}],
       [],
       [{debug_line,3032,1361},
        {call,
         {3032,13},
         {atom,{3032,13},unsuitable_loop_1},
         [{var,{3032,31},'Ps'},
          {var,{3032,35},'Blocks'},
          {var,{3032,43},'Predecessors'},
          {var,{3032,57},'Acc0'}]}]},
      {clause,
       {3033,9},
       [{atom,{3033,9},false}],
       [],
       [{debug_line,3034,1362},
        {'case',
         {3034,13},
         {call,
          {3034,18},
          {remote,
           {3034,25},
           {atom,{3034,18},ordsets},
           {atom,{3034,26},is_element}},
          [{var,{3034,37},'P'},{var,{3034,40},'Acc0'}]},
         [{clause,
           {3035,17},
           [{atom,{3035,17},false}],
           [],
           [{debug_line,3036,1363},
            {match,
             {3036,21},
             {var,{3036,21},'Acc1'},
             {call,
              {3036,28},
              {remote,
               {3036,35},
               {atom,{3036,28},ordsets},
               {atom,{3036,36},add_element}},
              [{var,{3036,48},'P'},{var,{3036,51},'Acc0'}]}},
            {debug_line,3037,1364},
            {match,
             {3037,21},
             {var,{3037,21},'Acc'},
             {call,
              {3037,27},
              {atom,{3037,27},unsuitable_loop},
              [{var,{3037,43},'P'},
               {var,{3037,46},'Blocks'},
               {var,{3037,54},'Predecessors'},
               {var,{3037,68},'Acc1'}]}},
            {debug_line,3038,1365},
            {call,
             {3038,21},
             {atom,{3038,21},unsuitable_loop_1},
             [{var,{3038,39},'Ps'},
              {var,{3038,43},'Blocks'},
              {var,{3038,51},'Predecessors'},
              {var,{3038,65},'Acc'}]}]},
          {clause,
           {3039,17},
           [{atom,{3039,17},true}],
           [],
           [{debug_line,3040,1366},
            {call,
             {3040,21},
             {atom,{3040,21},unsuitable_loop_1},
             [{var,{3040,39},'Ps'},
              {var,{3040,43},'Blocks'},
              {var,{3040,51},'Predecessors'},
              {var,{3040,65},'Acc0'}]}]}]}]}]}]},
  {clause,
   {3043,1},
   [{nil,{3043,19}},
    {var,{3043,23},'_'},
    {var,{3043,26},'_'},
    {var,{3043,29},'Acc'}],
   [],
   [{debug_line,3043,1367},{var,{3043,37},'Acc'}]}]}.
{function,
    {3045,1},
    is_loop_header,2,
    [{clause,
         {3045,1},
         [{var,{3045,1},'_'},{var,{3045,1},'_'}],
         [[{call,
               {3045,1},
               {remote,
                   {3045,1},
                   {atom,{3045,1},fake},
                   {atom,{3045,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3045,1368},{atom,{3045,1},ignore}]},
     {clause,
         {3045,1},
         [{var,{3045,16},'L'},{var,{3045,19},'Blocks'}],
         [],
         [{debug_line,3046,1369},
          {'case',
              {3046,5},
              {call,
                  {3046,10},
                  {remote,
                      {3046,10},
                      {atom,{3046,10},erlang},
                      {atom,{3046,10},map_get}},
                  [{var,{3046,18},'L'},{var,{3046,21},'Blocks'}]},
              [{clause,
                   {3047,9},
                   [{tuple,
                        {3047,9},
                        [{atom,{3047,9},b_blk},
                         {var,{3047,9},'_'},
                         {cons,
                             {3047,19},
                             {var,{3047,20},'I'},
                             {var,{3047,22},'_'}},
                         {var,{3047,9},'_'}]}],
                   [],
                   [{debug_line,3048,1370},
                    {call,
                        {3048,13},
                        {remote,
                            {3048,21},
                            {atom,{3048,13},beam_ssa},
                            {atom,{3048,22},is_loop_header}},
                        [{var,{3048,37},'I'}]}]},
               {clause,
                   {3049,9},
                   [{tuple,
                        {3049,9},
                        [{atom,{3049,9},b_blk},
                         {var,{3049,9},'_'},
                         {var,{3049,9},'_'},
                         {var,{3049,9},'_'}]}],
                   [],
                   [{debug_line,3050,1371},{atom,{3050,13},false}]}]}]}]}.
{function,
    {3061,1},
    new_def_locations,5,
    [{clause,
         {3061,1},
         [{var,{3061,1},'_'},
          {var,{3061,1},'_'},
          {var,{3061,1},'_'},
          {var,{3061,1},'_'},
          {var,{3061,1},'_'}],
         [[{call,
               {3061,1},
               {remote,
                   {3061,1},
                   {atom,{3061,1},fake},
                   {atom,{3061,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3061,1372},{atom,{3061,1},ignore}]},
     {clause,
         {3061,1},
         [{cons,
              {3061,19},
              {tuple,{3061,20},[{var,{3061,21},'V'},{var,{3061,23},'UsedIn'}]},
              {var,{3061,31},'Vs'}},
          {var,{3061,36},'Defs'},
          {var,{3061,42},'Dom'},
          {var,{3061,47},'Numbering'},
          {var,{3061,58},'Unsuitable'}],
         [],
         [{debug_line,3062,1373},
          {match,
              {3062,5},
              {tuple,
                  {3062,5},
                  [{var,{3062,6},'DefIn'},{var,{3062,12},'Tuple'}]},
              {call,
                  {3062,21},
                  {remote,
                      {3062,21},
                      {atom,{3062,21},erlang},
                      {atom,{3062,21},map_get}},
                  [{var,{3062,29},'V'},{var,{3062,32},'Defs'}]}},
          {debug_line,3063,1374},
          {match,
              {3063,5},
              {var,{3063,5},'Common'},
              {call,
                  {3063,14},
                  {atom,{3063,14},common_dominator},
                  [{var,{3063,31},'UsedIn'},
                   {var,{3063,39},'Dom'},
                   {var,{3063,44},'Numbering'},
                   {var,{3063,55},'Unsuitable'}]}},
          {debug_line,3064,1375},
          {match,
              {3064,5},
              {var,{3064,5},'Sink'},
              {'case',
                  {3064,12},
                  {call,
                      {3064,17},
                      {remote,
                          {3064,17},
                          {atom,{3064,17},lists},
                          {atom,{3064,17},member}},
                      [{var,{3064,24},'Common'},
                       {block,0,
                           [{call,
                                {3064,32},
                                {remote,
                                    {3064,32},
                                    {atom,{3064,32},erlang},
                                    {atom,{3064,32},map_get}},
                                [{var,{3064,40},'DefIn'},
                                 {var,{3064,47},'Dom'}]}]}]},
                  [{clause,
                       {3065,16},
                       [{atom,{3065,16},true}],
                       [],
                       [{debug_line,3070,1376},
                        {tuple,
                            {3070,20},
                            [{var,{3070,21},'V'},
                             {var,{3070,23},'Tuple'},
                             {tuple,
                                 {3070,29},
                                 [{var,{3070,30},'DefIn'},
                                  {var,{3070,36},'DefIn'}]}]}]},
                   {clause,
                       {3071,16},
                       [{atom,{3071,16},false}],
                       [],
                       [{debug_line,3075,1377},
                        {tuple,
                            {3075,20},
                            [{var,{3075,21},'V'},
                             {var,{3075,23},'Tuple'},
                             {tuple,
                                 {3075,29},
                                 [{var,{3075,30},'DefIn'},
                                  {var,{3075,36},'Common'}]}]}]}]}},
          {debug_line,3077,1378},
          {cons,
              {3077,5},
              {var,{3077,6},'Sink'},
              {call,
                  {3077,11},
                  {atom,{3077,11},new_def_locations},
                  [{var,{3077,29},'Vs'},
                   {var,{3077,33},'Defs'},
                   {var,{3077,39},'Dom'},
                   {var,{3077,44},'Numbering'},
                   {var,{3077,55},'Unsuitable'}]}}]},
     {clause,
         {3078,1},
         [{nil,{3078,19}},
          {var,{3078,23},'_'},
          {var,{3078,26},'_'},
          {var,{3078,29},'_'},
          {var,{3078,32},'_'}],
         [],
         [{debug_line,3078,1379},{nil,{3078,38}}]}]}.
{function,
    {3080,1},
    common_dominator,4,
    [{clause,
         {3080,1},
         [{var,{3080,1},'_'},
          {var,{3080,1},'_'},
          {var,{3080,1},'_'},
          {var,{3080,1},'_'}],
         [[{call,
               {3080,1},
               {remote,
                   {3080,1},
                   {atom,{3080,1},fake},
                   {atom,{3080,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3080,1380},{atom,{3080,1},ignore}]},
     {clause,
         {3080,1},
         [{var,{3080,18},'Ls0'},
          {var,{3080,23},'Dom'},
          {var,{3080,28},'Numbering'},
          {var,{3080,39},'Unsuitable'}],
         [],
         [{debug_line,3081,1381},
          {match,
              {3081,5},
              {cons,{3081,5},{var,{3081,6},'Common'},{var,{3081,13},'_'}},
              {call,
                  {3081,18},
                  {remote,
                      {3081,26},
                      {atom,{3081,18},beam_ssa},
                      {atom,{3081,27},common_dominators}},
                  [{var,{3081,45},'Ls0'},
                   {var,{3081,50},'Dom'},
                   {var,{3081,55},'Numbering'}]}},
          {debug_line,3082,1382},
          {'case',
              {3082,5},
              {call,
                  {3082,10},
                  {remote,
                      {3082,17},
                      {atom,{3082,10},gb_sets},
                      {atom,{3082,18},is_member}},
                  [{var,{3082,28},'Common'},{var,{3082,36},'Unsuitable'}]},
              [{clause,
                   {3083,9},
                   [{atom,{3083,9},true}],
                   [],
                   [{debug_line,3087,1383},
                    {match,
                        {3087,13},
                        {cons,
                            {3087,13},
                            {var,{3087,14},'Common'},
                            {cons,
                                {3087,21},
                                {var,{3087,21},'OneUp'},
                                {var,{3087,27},'_'}}},
                        {call,
                            {3087,32},
                            {remote,
                                {3087,32},
                                {atom,{3087,32},erlang},
                                {atom,{3087,32},map_get}},
                            [{var,{3087,40},'Common'},{var,{3087,48},'Dom'}]}},
                    {debug_line,3088,1384},
                    {call,
                        {3088,13},
                        {atom,{3088,13},common_dominator},
                        [{block,0,
                             [{cons,
                                  {3088,30},
                                  {var,{3088,31},'OneUp'},
                                  {nil,{3088,36}}}]},
                         {var,{3088,39},'Dom'},
                         {var,{3088,44},'Numbering'},
                         {var,{3088,55},'Unsuitable'}]}]},
               {clause,
                   {3089,9},
                   [{atom,{3089,9},false}],
                   [],
                   [{debug_line,3090,1385},{var,{3090,13},'Common'}]}]}]}]}.
{function,
    {3095,1},
    move_defs,4,
    [{clause,
         {3095,1},
         [{var,{3095,1},'_'},
          {var,{3095,1},'_'},
          {var,{3095,1},'_'},
          {var,{3095,1},'_'}],
         [[{call,
               {3095,1},
               {remote,
                   {3095,1},
                   {atom,{3095,1},fake},
                   {atom,{3095,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3095,1386},{atom,{3095,1},ignore}]},
     {clause,
         {3095,1},
         [{var,{3095,11},'V'},
          {var,{3095,14},'From'},
          {var,{3095,20},'To'},
          {var,{3095,24},'Blocks'}],
         [],
         [{debug_line,3096,1387},
          {match,
              {3096,5},
              {map,
                  {3096,5},
                  [{map_field_exact,
                       {3096,11},
                       {var,{3096,7},'From'},
                       {var,{3096,13},'FromBlk0'}},
                   {map_field_exact,
                       {3096,24},
                       {var,{3096,22},'To'},
                       {var,{3096,26},'ToBlk0'}}]},
              {var,{3096,36},'Blocks'}},
          {debug_line,3097,1388},
          {match,
              {3097,5},
              {tuple,
                  {3097,5},
                  [{var,{3097,6},'Def'},{var,{3097,10},'FromBlk'}]},
              {call,
                  {3097,21},
                  {atom,{3097,21},remove_def},
                  [{var,{3097,32},'V'},{var,{3097,35},'FromBlk0'}]}},
          {debug_line,3098,1389},
          {'try',
              {3098,5},
              [{call,
                   {3098,9},
                   {atom,{3098,9},insert_def},
                   [{var,{3098,20},'V'},
                    {var,{3098,23},'Def'},
                    {var,{3098,28},'ToBlk0'}]}],
              [{clause,
                   {3099,9},
                   [{var,{3099,9},'ToBlk'}],
                   [],
                   [{debug_line,3100,1390},
                    {map,
                        {3100,19},
                        {var,{3100,13},'Blocks'},
                        [{map_field_exact,
                             {3100,25},
                             {var,{3100,21},'From'},
                             {var,{3100,27},'FromBlk'}},
                         {map_field_exact,
                             {3100,37},
                             {var,{3100,35},'To'},
                             {var,{3100,39},'ToBlk'}}]}]}],
              [{clause,
                   {3102,9},
                   [{tuple,
                        {3102,9},
                        [{atom,{3102,9},throw},
                         {atom,{3102,15},not_possible},
                         {var,{3102,15},'_'}]}],
                   [],
                   [{debug_line,3103,1391},{var,{3103,13},'Blocks'}]}],
              []}]}]}.
{function,
 {3106,1},
 remove_def,2,
 [{clause,
   {3106,1},
   [{var,{3106,1},'_'},{var,{3106,1},'_'}],
   [[{call,
      {3106,1},
      {remote,{3106,1},{atom,{3106,1},fake},{atom,{3106,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3106,1392},{atom,{3106,1},ignore}]},
  {clause,
   {3106,1},
   [{var,{3106,12},'V'},
    {match,
     {3106,15},
     {tuple,
      {3106,15},
      [{atom,{3106,15},b_blk},
       {var,{3106,15},'_'},
       {var,{3106,25},'Is0'},
       {var,{3106,15},'_'}]},
     {var,{3106,30},'Blk'}}],
   [],
   [{debug_line,3107,1393},
    {match,
     {3107,5},
     {tuple,{3107,5},[{var,{3107,6},'Def'},{var,{3107,10},'Is'}]},
     {call,
      {3107,16},
      {atom,{3107,16},remove_def_is},
      [{var,{3107,30},'Is0'},{var,{3107,35},'V'},{nil,{3107,38}}]}},
    {debug_line,3108,1394},
    {tuple,
     {3108,5},
     [{var,{3108,6},'Def'},
      {block,
       {3108,10},
       [{match,{3108,10},{var,{3108,10},rec148},{var,{3108,10},'Blk'}},
        {'case',
         {3108,20},
         {var,{3108,10},rec148},
         [{clause,
           {3108,20},
           [{tuple,
             {3108,20},
             [{atom,{3108,20},b_blk},
              {var,{3108,20},'_'},
              {var,{3108,20},'_'},
              {var,{3108,20},'_'}]}],
           [],
           [{call,
             {3108,20},
             {remote,
              {3108,20},
              {atom,{3108,20},erlang},
              {atom,{3108,20},setelement}},
             [{integer,{3108,20},3},
              {var,{3108,10},rec148},
              {var,{3108,23},'Is'}]}]},
          {clause,
           [{generated,true},{location,{3108,20}}],
           [{var,[{generated,true},{location,{3108,20}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{3108,20}}],
             {remote,
              [{generated,true},{location,{3108,20}}],
              {atom,[{generated,true},{location,{3108,20}}],erlang},
              {atom,[{generated,true},{location,{3108,20}}],error}},
             [{tuple,
               [{generated,true},{location,{3108,20}}],
               [{atom,[{generated,true},{location,{3108,20}}],badrecord},
                {var,{3108,10},rec148}]}]}]}]}]}]}]}]}.
{function,
    {3110,1},
    remove_def_is,3,
    [{clause,
         {3110,1},
         [{var,{3110,1},'_'},{var,{3110,1},'_'},{var,{3110,1},'_'}],
         [[{call,
               {3110,1},
               {remote,
                   {3110,1},
                   {atom,{3110,1},fake},
                   {atom,{3110,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3110,1395},{atom,{3110,1},ignore}]},
     {clause,
         {3110,1},
         [{cons,
              {3110,15},
              {match,
                  {3110,16},
                  {tuple,
                      {3110,16},
                      [{atom,{3110,16},b_set},
                       {var,{3110,16},'_'},
                       {var,{3110,27},'Dst'},
                       {var,{3110,16},'_'},
                       {var,{3110,16},'_'}]},
                  {var,{3110,32},'Def'}},
              {var,{3110,36},'Is'}},
          {var,{3110,41},'Dst'},
          {var,{3110,46},'Acc'}],
         [],
         [{debug_line,3111,1396},
          {tuple,
              {3111,5},
              [{var,{3111,6},'Def'},
               {call,
                   {3111,10},
                   {remote,
                       {3111,10},
                       {atom,{3111,10},lists},
                       {atom,{3111,10},reverse}},
                   [{var,{3111,18},'Acc'},{var,{3111,23},'Is'}]}]}]},
     {clause,
         {3112,1},
         [{cons,{3112,15},{var,{3112,16},'I'},{var,{3112,18},'Is'}},
          {var,{3112,23},'Dst'},
          {var,{3112,28},'Acc'}],
         [],
         [{debug_line,3113,1397},
          {call,
              {3113,5},
              {atom,{3113,5},remove_def_is},
              [{var,{3113,19},'Is'},
               {var,{3113,23},'Dst'},
               {block,0,
                   [{cons,
                        {3113,28},
                        {var,{3113,29},'I'},
                        {var,{3113,31},'Acc'}}]}]}]}]}.
{function,
    {3115,1},
    insert_def,3,
    [{clause,
         {3115,1},
         [{var,{3115,1},'_'},{var,{3115,1},'_'},{var,{3115,1},'_'}],
         [[{call,
               {3115,1},
               {remote,
                   {3115,1},
                   {atom,{3115,1},fake},
                   {atom,{3115,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3115,1398},{atom,{3115,1},ignore}]},
     {clause,
         {3115,1},
         [{var,{3115,12},'V'},
          {var,{3115,15},'Def'},
          {match,
              {3115,20},
              {tuple,
                  {3115,20},
                  [{atom,{3115,20},b_blk},
                   {var,{3115,20},'_'},
                   {var,{3115,30},'Is0'},
                   {var,{3115,20},'_'}]},
              {var,{3115,35},'Blk'}}],
         [],
         [{debug_line,3116,1399},
          {match,
              {3116,5},
              {var,{3116,5},'Is'},
              {call,
                  {3116,10},
                  {atom,{3116,10},insert_def_is},
                  [{var,{3116,24},'Is0'},
                   {var,{3116,29},'V'},
                   {var,{3116,32},'Def'}]}},
          {debug_line,3117,1400},
          {block,
              {3117,5},
              [{match,{3117,5},{var,{3117,5},rec149},{var,{3117,5},'Blk'}},
               {'case',
                   {3117,15},
                   {var,{3117,5},rec149},
                   [{clause,
                        {3117,15},
                        [{tuple,
                             {3117,15},
                             [{atom,{3117,15},b_blk},
                              {var,{3117,15},'_'},
                              {var,{3117,15},'_'},
                              {var,{3117,15},'_'}]}],
                        [],
                        [{call,
                             {3117,15},
                             {remote,
                                 {3117,15},
                                 {atom,{3117,15},erlang},
                                 {atom,{3117,15},setelement}},
                             [{integer,{3117,15},3},
                              {var,{3117,5},rec149},
                              {var,{3117,18},'Is'}]}]},
                    {clause,
                        [{generated,true},{location,{3117,15}}],
                        [{var,[{generated,true},{location,{3117,15}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3117,15}}],
                             {remote,
                                 [{generated,true},{location,{3117,15}}],
                                 {atom,
                                     [{generated,true},{location,{3117,15}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3117,15}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3117,15}}],
                                  [{atom,
                                       [{generated,true},{location,{3117,15}}],
                                       badrecord},
                                   {var,{3117,5},rec149}]}]}]}]}]}]}]}.
{function,
 {3119,1},
 insert_def_is,3,
 [{clause,
   {3119,1},
   [{var,{3119,1},'_'},{var,{3119,1},'_'},{var,{3119,1},'_'}],
   [[{call,
      {3119,1},
      {remote,{3119,1},{atom,{3119,1},fake},{atom,{3119,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3119,1401},{atom,{3119,1},ignore}]},
  {clause,
   {3119,1},
   [{cons,
     {3119,15},
     {match,
      {3119,16},
      {tuple,
       {3119,16},
       [{atom,{3119,16},b_set},
        {var,{3119,16},'_'},
        {var,{3119,16},'_'},
        {atom,{3119,26},phi},
        {var,{3119,16},'_'}]},
      {var,{3119,31},'I'}},
     {var,{3119,33},'Is'}},
    {var,{3119,38},'V'},
    {var,{3119,41},'Def'}],
   [],
   [{debug_line,3120,1402},
    {'case',
     {3120,5},
     {call,
      {3120,10},
      {remote,{3120,10},{atom,{3120,10},lists},{atom,{3120,10},member}},
      [{var,{3120,17},'V'},
       {block,0,
        [{call,
          {3120,20},
          {remote,{3120,28},{atom,{3120,20},beam_ssa},{atom,{3120,29},used}},
          [{var,{3120,34},'I'}]}]}]},
     [{clause,
       {3121,9},
       [{atom,{3121,9},true}],
       [],
       [{debug_line,3122,1403},
        {call,
         {3122,13},
         {remote,{3122,13},{atom,{3122,13},erlang},{atom,{3122,13},throw}},
         [{atom,{3122,19},not_possible}]}]},
      {clause,
       {3123,9},
       [{atom,{3123,9},false}],
       [],
       [{debug_line,3124,1404},
        {cons,
         {3124,13},
         {var,{3124,14},'I'},
         {call,
          {3124,16},
          {atom,{3124,16},insert_def_is},
          [{var,{3124,30},'Is'},
           {var,{3124,34},'V'},
           {var,{3124,37},'Def'}]}}]}]}]},
  {clause,
   {3126,1},
   [{match,
     {3126,15},
     {cons,
      {3126,15},
      {match,
       {3126,16},
       {tuple,
        {3126,16},
        [{atom,{3126,16},b_set},
         {var,{3126,16},'_'},
         {var,{3126,16},'_'},
         {var,{3126,26},'Op'},
         {var,{3126,16},'_'}]},
       {var,{3126,30},'I'}},
      {var,{3126,32},'Is'}},
     {var,{3126,36},'Is0'}},
    {var,{3126,41},'V'},
    {var,{3126,44},'Def'}],
   [],
   [{debug_line,3127,1405},
    {match,
     {3127,5},
     {var,{3127,5},'Action0'},
     {'case',
      {3127,15},
      {var,{3127,20},'Op'},
      [{clause,
        {3128,19},
        [{atom,{3128,19},call}],
        [],
        [{debug_line,3128,1406},{atom,{3128,27},beyond}]},
       {clause,
        {3129,19},
        [{atom,{3129,19},catch_end}],
        [],
        [{debug_line,3129,1407},{atom,{3129,34},beyond}]},
       {clause,
        {3130,19},
        [{atom,{3130,19},wait_timeout}],
        [],
        [{debug_line,3130,1408},{atom,{3130,35},beyond}]},
       {clause,
        {3131,19},
        [{var,{3131,19},'_'}],
        [],
        [{debug_line,3131,1409},{atom,{3131,24},here}]}]}},
    {debug_line,3133,1410},
    {match,
     {3133,5},
     {var,{3133,5},'Action'},
     {'case',
      {3133,14},
      {var,{3133,19},'Is'},
      [{clause,
        {3134,18},
        [{cons,
          {3134,18},
          {tuple,
           {3134,19},
           [{atom,{3134,19},b_set},
            {var,{3134,19},'_'},
            {var,{3134,19},'_'},
            {tuple,{3134,29},[{atom,{3134,30},succeeded},{var,{3134,40},'_'}]},
            {var,{3134,19},'_'}]},
          {var,{3134,44},'_'}}],
        [],
        [{debug_line,3134,1411},{atom,{3134,50},here}]},
       {clause,
        {3135,18},
        [{var,{3135,18},'_'}],
        [],
        [{debug_line,3135,1412},{var,{3135,23},'Action0'}]}]}},
    {debug_line,3137,1413},
    {'case',
     {3137,5},
     {var,{3137,10},'Action'},
     [{clause,
       {3138,9},
       [{atom,{3138,9},beyond}],
       [],
       [{debug_line,3139,1414},
        {'case',
         {3139,13},
         {call,
          {3139,18},
          {remote,{3139,18},{atom,{3139,18},lists},{atom,{3139,18},member}},
          [{var,{3139,25},'V'},
           {block,0,
            [{call,
              {3139,28},
              {remote,
               {3139,36},
               {atom,{3139,28},beam_ssa},
               {atom,{3139,37},used}},
              [{var,{3139,42},'I'}]}]}]},
         [{clause,
           {3140,17},
           [{atom,{3140,17},true}],
           [],
           [{debug_line,3143,1415},
            {cons,{3143,21},{var,{3143,22},'Def'},{var,{3143,26},'Is0'}}]},
          {clause,
           {3144,17},
           [{atom,{3144,17},false}],
           [],
           [{debug_line,3146,1416},
            {cons,
             {3146,21},
             {var,{3146,22},'I'},
             {call,
              {3146,24},
              {atom,{3146,24},insert_def_is},
              [{var,{3146,38},'Is'},
               {var,{3146,42},'V'},
               {var,{3146,45},'Def'}]}}]}]}]},
      {clause,
       {3148,9},
       [{atom,{3148,9},here}],
       [],
       [{debug_line,3149,1417},
        {cons,{3149,13},{var,{3149,14},'Def'},{var,{3149,18},'Is0'}}]}]}]},
  {clause,
   {3151,1},
   [{nil,{3151,15}},{var,{3151,19},'_V'},{var,{3151,23},'Def'}],
   [],
   [{debug_line,3152,1418},
    {cons,{3152,5},{var,{3152,6},'Def'},{nil,{3152,9}}}]}]}.
{function,
 {3160,1},
 ssa_opt_get_tuple_element,1,
 [{clause,
   {3160,1},
   [{var,{3160,1},'_'}],
   [[{call,
      {3160,1},
      {remote,{3160,1},{atom,{3160,1},fake},{atom,{3160,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3160,1419},{atom,{3160,1},ignore}]},
  {clause,
   {3160,1},
   [{tuple,
     {3160,27},
     [{match,
       {3160,28},
       {tuple,
        {3160,28},
        [{atom,{3160,28},opt_st},
         {var,{3160,40},'Blocks0'},
         {var,{3160,28},'_'},
         {var,{3160,28},'_'},
         {var,{3160,28},'_'}]},
       {var,{3160,49},'St'}},
      {var,{3160,53},'FuncDb'}]}],
   [],
   [{debug_line,3161,1420},
    {match,
     {3161,5},
     {var,{3161,5},'Blocks'},
     {call,
      {3161,14},
      {atom,{3161,14},opt_get_tuple_element},
      [{block,0,
        [{call,
          {3161,36},
          {remote,{3161,40},{atom,{3161,36},maps},{atom,{3161,41},to_list}},
          [{var,{3161,49},'Blocks0'}]}]},
       {var,{3161,59},'Blocks0'}]}},
    {debug_line,3162,1421},
    {tuple,
     {3162,5},
     [{block,
       {3162,6},
       [{match,{3162,6},{var,{3162,6},rec150},{var,{3162,6},'St'}},
        {'case',
         {3162,16},
         {var,{3162,6},rec150},
         [{clause,
           {3162,16},
           [{tuple,
             {3162,16},
             [{atom,{3162,16},opt_st},
              {var,{3162,16},'_'},
              {var,{3162,16},'_'},
              {var,{3162,16},'_'},
              {var,{3162,16},'_'}]}],
           [],
           [{call,
             {3162,16},
             {remote,
              {3162,16},
              {atom,{3162,16},erlang},
              {atom,{3162,16},setelement}},
             [{integer,{3162,16},2},
              {var,{3162,6},rec150},
              {var,{3162,20},'Blocks'}]}]},
          {clause,
           [{generated,true},{location,{3162,16}}],
           [{var,[{generated,true},{location,{3162,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{3162,16}}],
             {remote,
              [{generated,true},{location,{3162,16}}],
              {atom,[{generated,true},{location,{3162,16}}],erlang},
              {atom,[{generated,true},{location,{3162,16}}],error}},
             [{tuple,
               [{generated,true},{location,{3162,16}}],
               [{atom,[{generated,true},{location,{3162,16}}],badrecord},
                {var,{3162,6},rec150}]}]}]}]}]},
      {var,{3162,29},'FuncDb'}]}]}]}.
{function,
 {3164,1},
 opt_get_tuple_element,2,
 [{clause,
   {3164,1},
   [{var,{3164,1},'_'},{var,{3164,1},'_'}],
   [[{call,
      {3164,1},
      {remote,{3164,1},{atom,{3164,1},fake},{atom,{3164,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3164,1422},{atom,{3164,1},ignore}]},
  {clause,
   {3164,1},
   [{cons,
     {3164,23},
     {tuple,
      {3164,24},
      [{var,{3164,25},'L'},
       {match,
        {3164,27},
        {tuple,
         {3164,27},
         [{atom,{3164,27},b_blk},
          {var,{3164,27},'_'},
          {var,{3164,37},'Is0'},
          {var,{3164,27},'_'}]},
        {var,{3164,42},'Blk0'}}]},
     {var,{3164,48},'Bs'}},
    {var,{3164,53},'Blocks'}],
   [],
   [{debug_line,3165,1423},
    {'case',
     {3165,5},
     {call,
      {3165,10},
      {atom,{3165,10},opt_get_tuple_element_is},
      [{var,{3165,35},'Is0'},{atom,{3165,40},false},{nil,{3165,47}}]},
     [{clause,
       {3166,9},
       [{tuple,{3166,9},[{atom,{3166,10},yes},{var,{3166,14},'Is'}]}],
       [],
       [{debug_line,3167,1424},
        {match,
         {3167,13},
         {var,{3167,13},'Blk'},
         {block,
          {3167,19},
          [{match,{3167,19},{var,{3167,19},rec151},{var,{3167,19},'Blk0'}},
           {'case',
            {3167,30},
            {var,{3167,19},rec151},
            [{clause,
              {3167,30},
              [{tuple,
                {3167,30},
                [{atom,{3167,30},b_blk},
                 {var,{3167,30},'_'},
                 {var,{3167,30},'_'},
                 {var,{3167,30},'_'}]}],
              [],
              [{call,
                {3167,30},
                {remote,
                 {3167,30},
                 {atom,{3167,30},erlang},
                 {atom,{3167,30},setelement}},
                [{integer,{3167,30},3},
                 {var,{3167,19},rec151},
                 {var,{3167,33},'Is'}]}]},
             {clause,
              [{generated,true},{location,{3167,30}}],
              [{var,[{generated,true},{location,{3167,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{3167,30}}],
                {remote,
                 [{generated,true},{location,{3167,30}}],
                 {atom,[{generated,true},{location,{3167,30}}],erlang},
                 {atom,[{generated,true},{location,{3167,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{3167,30}}],
                  [{atom,[{generated,true},{location,{3167,30}}],badrecord},
                   {var,{3167,19},rec151}]}]}]}]}]}},
        {debug_line,3168,1425},
        {call,
         {3168,13},
         {atom,{3168,13},opt_get_tuple_element},
         [{var,{3168,35},'Bs'},
          {block,0,
           [{map,
             {3168,45},
             {var,{3168,39},'Blocks'},
             [{map_field_exact,
               {3168,48},
               {var,{3168,47},'L'},
               {var,{3168,50},'Blk'}}]}]}]}]},
      {clause,
       {3169,9},
       [{atom,{3169,9},no}],
       [],
       [{debug_line,3170,1426},
        {call,
         {3170,13},
         {atom,{3170,13},opt_get_tuple_element},
         [{var,{3170,35},'Bs'},{var,{3170,39},'Blocks'}]}]}]}]},
  {clause,
   {3172,1},
   [{nil,{3172,23}},{var,{3172,27},'Blocks'}],
   [],
   [{debug_line,3172,1427},{var,{3172,38},'Blocks'}]}]}.
{function,
 {3174,1},
 opt_get_tuple_element_is,3,
 [{clause,
   {3174,1},
   [{var,{3174,1},'_'},{var,{3174,1},'_'},{var,{3174,1},'_'}],
   [[{call,
      {3174,1},
      {remote,{3174,1},{atom,{3174,1},fake},{atom,{3174,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3174,1428},{atom,{3174,1},ignore}]},
  {clause,
   {3174,1},
   [{cons,
     {3174,26},
     {match,
      {3174,27},
      {tuple,
       {3174,27},
       [{atom,{3174,27},b_set},
        {var,{3174,27},'_'},
        {var,{3174,27},'_'},
        {atom,{3174,37},get_tuple_element},
        {cons,
         {3175,39},
         {match,
          {3175,40},
          {tuple,{3175,40},[{atom,{3175,40},b_var},{var,{3175,40},'_'}]},
          {var,{3175,49},'Src'}},
         {cons,{3175,53},{var,{3175,53},'_'},{nil,{3175,54}}}}]},
      {var,{3175,57},'I0'}},
     {var,{3175,60},'Is0'}},
    {var,{3176,26},'_AnyChange'},
    {var,{3176,38},'Acc'}],
   [],
   [{debug_line,3177,1429},
    {match,
     {3177,5},
     {tuple,{3177,5},[{var,{3177,6},'GetIs0'},{var,{3177,13},'Is'}]},
     {call,
      {3177,19},
      {atom,{3177,19},collect_get_tuple_element},
      [{var,{3177,45},'Is0'},
       {var,{3177,50},'Src'},
       {block,0,[{cons,{3177,55},{var,{3177,56},'I0'},{nil,{3177,58}}}]}]}},
    {debug_line,3178,1430},
    {match,
     {3178,5},
     {var,{3178,5},'GetIs1'},
     {call,
      {3178,14},
      {remote,{3178,14},{atom,{3178,14},lists},{atom,{3178,14},sort}},
      [{block,0,
        [{lc,
          {3178,19},
          {block,0,
           [{tuple,{3178,20},[{var,{3178,21},'Pos'},{var,{3178,25},'I'}]}]},
          [{block,0,[{atom,{3178,58},true}]},
           {generate_strict,
            {3178,54},
            {match,
             {3178,31},
             {tuple,
              {3178,31},
              [{atom,{3178,31},b_set},
               {var,{3178,31},'_'},
               {var,{3178,31},'_'},
               {var,{3178,31},'_'},
               {cons,
                {3178,43},
                {var,{3178,44},'_'},
                {cons,{3178,46},{var,{3178,46},'Pos'},{nil,{3178,49}}}}]},
             {var,{3178,52},'I'}},
            {var,{3178,58},'GetIs0'}}]}]}]}},
    {debug_line,3179,1431},
    {match,
     {3179,5},
     {var,{3179,5},'GetIs'},
     {lc,
      {3179,13},
      {block,0,[{var,{3179,14},'I'}]},
      [{block,0,[{atom,{3179,29},true}]},
       {generate_strict,
        {3179,25},
        {tuple,{3179,19},[{var,{3179,20},'_'},{var,{3179,22},'I'}]},
        {var,{3179,29},'GetIs1'}}]}},
    {debug_line,3180,1432},
    {call,
     {3180,5},
     {atom,{3180,5},opt_get_tuple_element_is},
     [{var,{3180,30},'Is'},
      {atom,{3180,34},true},
      {block,0,
       [{call,
         {3180,40},
         {remote,{3180,40},{atom,{3180,40},lists},{atom,{3180,40},reverse}},
         [{var,{3180,48},'GetIs'},{var,{3180,55},'Acc'}]}]}]}]},
  {clause,
   {3181,1},
   [{cons,{3181,26},{var,{3181,27},'I'},{var,{3181,29},'Is'}},
    {var,{3181,34},'AnyChange'},
    {var,{3181,45},'Acc'}],
   [],
   [{debug_line,3182,1433},
    {call,
     {3182,5},
     {atom,{3182,5},opt_get_tuple_element_is},
     [{var,{3182,30},'Is'},
      {var,{3182,34},'AnyChange'},
      {block,0,
       [{cons,{3182,45},{var,{3182,46},'I'},{var,{3182,48},'Acc'}}]}]}]},
  {clause,
   {3183,1},
   [{nil,{3183,26}},{var,{3183,30},'AnyChange'},{var,{3183,41},'Acc'}],
   [],
   [{debug_line,3184,1434},
    {'case',
     {3184,5},
     {var,{3184,10},'AnyChange'},
     [{clause,
       {3185,9},
       [{atom,{3185,9},true}],
       [],
       [{debug_line,3185,1435},
        {tuple,
         {3185,17},
         [{atom,{3185,18},yes},
          {call,
           {3185,22},
           {remote,{3185,22},{atom,{3185,22},lists},{atom,{3185,22},reverse}},
           [{var,{3185,30},'Acc'}]}]}]},
      {clause,
       {3186,9},
       [{atom,{3186,9},false}],
       [],
       [{debug_line,3186,1436},{atom,{3186,18},no}]}]}]}]}.
{function,
    {3189,1},
    collect_get_tuple_element,3,
    [{clause,
         {3189,1},
         [{var,{3189,1},'_'},{var,{3189,1},'_'},{var,{3189,1},'_'}],
         [[{call,
               {3189,1},
               {remote,
                   {3189,1},
                   {atom,{3189,1},fake},
                   {atom,{3189,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3189,1437},{atom,{3189,1},ignore}]},
     {clause,
         {3189,1},
         [{cons,
              {3189,27},
              {match,
                  {3189,28},
                  {tuple,
                      {3189,28},
                      [{atom,{3189,28},b_set},
                       {var,{3189,28},'_'},
                       {var,{3189,28},'_'},
                       {atom,{3189,38},get_tuple_element},
                       {cons,
                           {3190,40},
                           {var,{3190,41},'Src'},
                           {cons,
                               {3190,45},
                               {var,{3190,45},'_'},
                               {nil,{3190,46}}}}]},
                  {var,{3190,49},'I'}},
              {var,{3190,51},'Is'}},
          {var,{3190,56},'Src'},
          {var,{3190,61},'Acc'}],
         [],
         [{debug_line,3191,1438},
          {call,
              {3191,5},
              {atom,{3191,5},collect_get_tuple_element},
              [{var,{3191,31},'Is'},
               {var,{3191,35},'Src'},
               {block,0,
                   [{cons,
                        {3191,40},
                        {var,{3191,41},'I'},
                        {var,{3191,43},'Acc'}}]}]}]},
     {clause,
         {3192,1},
         [{var,{3192,27},'Is'},{var,{3192,31},'_Src'},{var,{3192,37},'Acc'}],
         [],
         [{debug_line,3193,1439},
          {tuple,{3193,5},[{var,{3193,6},'Acc'},{var,{3193,10},'Is'}]}]}]}.
{function,
 {3223,1},
 ssa_opt_unfold_literals,1,
 [{clause,
   {3223,1},
   [{var,{3223,1},'_'}],
   [[{call,
      {3223,1},
      {remote,{3223,1},{atom,{3223,1},fake},{atom,{3223,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3223,1440},{atom,{3223,1},ignore}]},
  {clause,
   {3223,1},
   [{tuple,{3223,25},[{var,{3223,26},'St'},{var,{3223,29},'FuncDb'}]}],
   [],
   [{debug_line,3224,1441},
    {match,
     {3224,5},
     {tuple,
      {3224,5},
      [{atom,{3224,5},opt_st},
       {var,{3224,17},'Blocks0'},
       {var,{3224,30},'Args'},
       {var,{3224,5},'_'},
       {var,{3224,40},'Anno'}]},
     {var,{3224,48},'St'}},
    {debug_line,3225,1442},
    {match,
     {3225,5},
     {atom,{3225,5},true},
     {call,
      {3225,12},
      {remote,{3225,12},{atom,{3225,12},erlang},{atom,{3225,12},is_map}},
      [{var,{3225,19},'Blocks0'}]}},
    {debug_line,3226,1443},
    {match,
     {3226,5},
     {var,{3226,5},'ParamInfo'},
     {call,
      {3226,17},
      {remote,{3226,21},{atom,{3226,17},maps},{atom,{3226,22},get}},
      [{atom,{3226,26},parameter_info},
       {var,{3226,42},'Anno'},
       {block,0,[{map,{3226,48},[]}]}]}},
    {debug_line,3227,1444},
    {match,
     {3227,5},
     {var,{3227,5},'LitMap'},
     {call,
      {3227,14},
      {atom,{3227,14},collect_arg_literals},
      [{var,{3227,35},'Args'},
       {var,{3227,41},'ParamInfo'},
       {integer,{3227,52},0},
       {block,0,[{map,{3227,55},[]}]}]}},
    {debug_line,3228,1445},
    {'case',
     {3228,5},
     {call,
      {3228,10},
      {remote,{3228,10},{atom,{3228,10},erlang},{atom,{3228,10},map_size}},
      [{var,{3228,19},'LitMap'}]},
     [{clause,
       {3229,9},
       [{integer,{3229,9},0}],
       [],
       [{debug_line,3232,1446},
        {tuple,{3232,13},[{var,{3232,14},'St'},{var,{3232,18},'FuncDb'}]}]},
      {clause,
       {3233,9},
       [{var,{3233,9},'_'}],
       [],
       [{debug_line,3234,1447},
        {match,
         {3234,13},
         {var,{3234,13},'SafeMap'},
         {map,
          {3234,23},
          [{map_field_assoc,
            {3234,27},
            {integer,{3234,25},0},
            {atom,{3234,30},true}}]}},
        {debug_line,3235,1448},
        {match,
         {3235,13},
         {var,{3235,13},'Blocks'},
         {call,
          {3235,22},
          {atom,{3235,22},unfold_literals},
          [{block,0,
            [{call,
              {3235,38},
              {remote,
               {3235,46},
               {atom,{3235,38},beam_ssa},
               {atom,{3235,47},rpo}},
              [{var,{3235,51},'Blocks0'}]}]},
           {var,{3236,38},'LitMap'},
           {var,{3236,46},'SafeMap'},
           {var,{3236,55},'Blocks0'}]}},
        {debug_line,3237,1449},
        {tuple,
         {3237,13},
         [{block,
           {3237,14},
           [{match,{3237,14},{var,{3237,14},rec152},{var,{3237,14},'St'}},
            {'case',
             {3237,24},
             {var,{3237,14},rec152},
             [{clause,
               {3237,24},
               [{tuple,
                 {3237,24},
                 [{atom,{3237,24},opt_st},
                  {var,{3237,24},'_'},
                  {var,{3237,24},'_'},
                  {var,{3237,24},'_'},
                  {var,{3237,24},'_'}]}],
               [],
               [{call,
                 {3237,24},
                 {remote,
                  {3237,24},
                  {atom,{3237,24},erlang},
                  {atom,{3237,24},setelement}},
                 [{integer,{3237,24},2},
                  {var,{3237,14},rec152},
                  {var,{3237,28},'Blocks'}]}]},
              {clause,
               [{generated,true},{location,{3237,24}}],
               [{var,[{generated,true},{location,{3237,24}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{3237,24}}],
                 {remote,
                  [{generated,true},{location,{3237,24}}],
                  {atom,[{generated,true},{location,{3237,24}}],erlang},
                  {atom,[{generated,true},{location,{3237,24}}],error}},
                 [{tuple,
                   [{generated,true},{location,{3237,24}}],
                   [{atom,[{generated,true},{location,{3237,24}}],badrecord},
                    {var,{3237,14},rec152}]}]}]}]}]},
          {var,{3237,37},'FuncDb'}]}]}]}]}]}.
{function,
 {3240,1},
 collect_arg_literals,4,
 [{clause,
   {3240,1},
   [{var,{3240,1},'_'},
    {var,{3240,1},'_'},
    {var,{3240,1},'_'},
    {var,{3240,1},'_'}],
   [[{call,
      {3240,1},
      {remote,{3240,1},{atom,{3240,1},fake},{atom,{3240,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3240,1450},{atom,{3240,1},ignore}]},
  {clause,
   {3240,1},
   [{cons,{3240,22},{var,{3240,23},'V'},{var,{3240,25},'Vs'}},
    {var,{3240,30},'Info'},
    {var,{3240,36},'X'},
    {var,{3240,39},'Acc0'}],
   [],
   [{debug_line,3241,1451},
    {'case',
     {3241,5},
     {var,{3241,10},'Info'},
     [{clause,
       {3242,9},
       [{map,
         {3242,9},
         [{map_field_exact,
           {3242,12},
           {var,{3242,11},'V'},
           {var,{3242,14},'VarInfo'}}]}],
       [],
       [{debug_line,3243,1452},
        {match,
         {3243,13},
         {var,{3243,13},'Type'},
         {call,
          {3243,20},
          {remote,
           {3243,29},
           {atom,{3243,20},proplists},
           {atom,{3243,30},get_value}},
          [{atom,{3243,40},type},
           {var,{3243,46},'VarInfo'},
           {atom,{3243,55},any}]}},
        {debug_line,3244,1453},
        {'case',
         {3244,13},
         {call,
          {3244,18},
          {remote,
           {3244,28},
           {atom,{3244,18},beam_types},
           {atom,{3244,29},get_singleton_value}},
          [{var,{3244,49},'Type'}]},
         [{clause,
           {3245,17},
           [{tuple,{3245,17},[{atom,{3245,18},ok},{var,{3245,21},'Val'}]}],
           [],
           [{debug_line,3246,1454},
            {match,
             {3246,21},
             {var,{3246,21},'F'},
             {'fun',
              {3246,25},
              {clauses,
               [{clause,
                 {3246,28},
                 [{var,{3246,29},'Vars'}],
                 [],
                 [{cons,
                   {3246,38},
                   {tuple,{3246,39},[{var,{3246,40},'X'},{var,{3246,42},'V'}]},
                   {var,{3246,45},'Vars'}}]}]}}},
            {debug_line,3247,1455},
            {match,
             {3247,21},
             {var,{3247,21},'Acc'},
             {call,
              {3247,27},
              {remote,
               {3247,31},
               {atom,{3247,27},maps},
               {atom,{3247,32},update_with}},
              [{var,{3247,44},'Val'},
               {var,{3247,49},'F'},
               {block,0,
                [{cons,
                  {3247,52},
                  {tuple,{3247,53},[{var,{3247,54},'X'},{var,{3247,56},'V'}]},
                  {nil,{3247,58}}}]},
               {var,{3247,61},'Acc0'}]}},
            {debug_line,3248,1456},
            {call,
             {3248,21},
             {atom,{3248,21},collect_arg_literals},
             [{var,{3248,42},'Vs'},
              {var,{3248,46},'Info'},
              {block,0,
               [{op,{3248,54},'+',{var,{3248,52},'X'},{integer,{3248,56},1}}]},
              {var,{3248,59},'Acc'}]}]},
          {clause,
           {3249,17},
           [{atom,{3249,17},error}],
           [],
           [{debug_line,3250,1457},
            {call,
             {3250,21},
             {atom,{3250,21},collect_arg_literals},
             [{var,{3250,42},'Vs'},
              {var,{3250,46},'Info'},
              {block,0,
               [{op,{3250,54},'+',{var,{3250,52},'X'},{integer,{3250,56},1}}]},
              {var,{3250,59},'Acc0'}]}]}]}]},
      {clause,
       {3252,9},
       [{map,{3252,9},[]}],
       [],
       [{debug_line,3253,1458},
        {call,
         {3253,13},
         {atom,{3253,13},collect_arg_literals},
         [{var,{3253,34},'Vs'},
          {var,{3253,38},'Info'},
          {block,0,
           [{op,{3253,46},'+',{var,{3253,44},'X'},{integer,{3253,48},1}}]},
          {var,{3253,51},'Acc0'}]}]}]}]},
  {clause,
   {3255,1},
   [{nil,{3255,22}},
    {var,{3255,26},'_Info'},
    {var,{3255,33},'_X'},
    {var,{3255,37},'Acc'}],
   [],
   [{debug_line,3256,1459},{var,{3256,5},'Acc'}]}]}.
{function,
 {3258,1},
 unfold_literals,4,
 [{clause,
   {3258,1},
   [{var,{3258,1},'_'},
    {var,{3258,1},'_'},
    {var,{3258,1},'_'},
    {var,{3258,1},'_'}],
   [[{call,
      {3258,1},
      {remote,{3258,1},{atom,{3258,1},fake},{atom,{3258,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3258,1460},{atom,{3258,1},ignore}]},
  {clause,
   {3258,1},
   [{cons,{3258,17},{integer,{3258,19},1},{var,{3258,35},'Ls'}},
    {var,{3258,40},'LitMap'},
    {var,{3258,48},'SafeMap'},
    {var,{3258,57},'Blocks'}],
   [],
   [{debug_line,3259,1461},
    {call,
     {3259,5},
     {atom,{3259,5},unfold_literals},
     [{var,{3259,21},'Ls'},
      {var,{3259,25},'LitMap'},
      {var,{3259,33},'SafeMap'},
      {var,{3259,41},'Blocks'}]}]},
  {clause,
   {3260,1},
   [{cons,{3260,17},{var,{3260,18},'L'},{var,{3260,20},'Ls'}},
    {var,{3260,25},'LitMap'},
    {var,{3260,33},'SafeMap0'},
    {var,{3260,43},'Blocks0'}],
   [],
   [{debug_line,3261,1462},
    {match,
     {3261,5},
     {tuple,{3261,5},[{var,{3261,6},'Blocks'},{var,{3261,13},'Safe'}]},
     {'case',
      {3262,9},
      {call,
       {3262,14},
       {remote,{3262,14},{atom,{3262,14},erlang},{atom,{3262,14},map_get}},
       [{var,{3262,22},'L'},{var,{3262,25},'SafeMap0'}]},
      [{clause,
        {3263,13},
        [{atom,{3263,13},false}],
        [],
        [{debug_line,3269,1463},
         {tuple,
          {3269,17},
          [{var,{3269,18},'Blocks0'},{atom,{3269,26},false}]}]},
       {clause,
        {3270,13},
        [{atom,{3270,13},true}],
        [],
        [{debug_line,3275,1464},
         {match,
          {3275,17},
          {tuple,
           {3275,17},
           [{atom,{3275,17},b_blk},
            {var,{3275,17},'_'},
            {var,{3275,27},'Is0'},
            {var,{3275,17},'_'}]},
          {match,
           {3275,34},
           {var,{3275,34},'Blk'},
           {call,
            {3275,40},
            {remote,
             {3275,40},
             {atom,{3275,40},erlang},
             {atom,{3275,40},map_get}},
            [{var,{3275,48},'L'},{var,{3275,51},'Blocks0'}]}}},
         {debug_line,3276,1465},
         {match,
          {3276,17},
          {tuple,{3276,17},[{var,{3276,18},'Is'},{var,{3276,22},'Safe0'}]},
          {call,
           {3276,31},
           {atom,{3276,31},unfold_lit_is},
           [{var,{3276,45},'Is0'},{var,{3276,50},'LitMap'},{nil,{3276,58}}]}},
         {debug_line,3277,1466},
         {tuple,
          {3277,17},
          [{map,
            {3277,25},
            {var,{3277,18},'Blocks0'},
            [{map_field_exact,
              {3277,30},
              {var,{3277,28},'L'},
              {block,
               {3277,33},
               [{match,{3277,33},{var,{3277,33},rec153},{var,{3277,33},'Blk'}},
                {'case',
                 {3277,43},
                 {var,{3277,33},rec153},
                 [{clause,
                   {3277,43},
                   [{tuple,
                     {3277,43},
                     [{atom,{3277,43},b_blk},
                      {var,{3277,43},'_'},
                      {var,{3277,43},'_'},
                      {var,{3277,43},'_'}]}],
                   [],
                   [{call,
                     {3277,43},
                     {remote,
                      {3277,43},
                      {atom,{3277,43},erlang},
                      {atom,{3277,43},setelement}},
                     [{integer,{3277,43},3},
                      {var,{3277,33},rec153},
                      {var,{3277,46},'Is'}]}]},
                  {clause,
                   [{generated,true},{location,{3277,43}}],
                   [{var,[{generated,true},{location,{3277,43}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{3277,43}}],
                     {remote,
                      [{generated,true},{location,{3277,43}}],
                      {atom,[{generated,true},{location,{3277,43}}],erlang},
                      {atom,[{generated,true},{location,{3277,43}}],error}},
                     [{tuple,
                       [{generated,true},{location,{3277,43}}],
                       [{atom,
                         [{generated,true},{location,{3277,43}}],
                         badrecord},
                        {var,{3277,33},rec153}]}]}]}]}]}}]},
           {var,{3277,53},'Safe0'}]}]}]}},
    {debug_line,3280,1467},
    {match,
     {3280,5},
     {var,{3280,5},'Successors'},
     {call,
      {3280,18},
      {remote,{3280,26},{atom,{3280,18},beam_ssa},{atom,{3280,27},successors}},
      [{var,{3280,38},'L'},{var,{3280,41},'Blocks'}]}},
    {debug_line,3281,1468},
    {match,
     {3281,5},
     {var,{3281,5},'SafeMap'},
     {call,
      {3281,15},
      {atom,{3281,15},unfold_update_succ},
      [{var,{3281,34},'Successors'},
       {var,{3281,46},'Safe'},
       {var,{3281,52},'SafeMap0'}]}},
    {debug_line,3282,1469},
    {call,
     {3282,5},
     {atom,{3282,5},unfold_literals},
     [{var,{3282,21},'Ls'},
      {var,{3282,25},'LitMap'},
      {var,{3282,33},'SafeMap'},
      {var,{3282,41},'Blocks'}]}]},
  {clause,
   {3283,1},
   [{nil,{3283,17}},
    {var,{3283,21},'_'},
    {var,{3283,24},'_'},
    {var,{3283,27},'Blocks'}],
   [],
   [{debug_line,3284,1470},{var,{3284,5},'Blocks'}]}]}.
{function,
    {3286,1},
    unfold_update_succ,3,
    [{clause,
         {3286,1},
         [{var,{3286,1},'_'},{var,{3286,1},'_'},{var,{3286,1},'_'}],
         [[{call,
               {3286,1},
               {remote,
                   {3286,1},
                   {atom,{3286,1},fake},
                   {atom,{3286,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3286,1471},{atom,{3286,1},ignore}]},
     {clause,
         {3286,1},
         [{cons,{3286,20},{var,{3286,21},'S'},{var,{3286,23},'Ss'}},
          {var,{3286,28},'Safe'},
          {var,{3286,34},'SafeMap0'}],
         [],
         [{debug_line,3287,1472},
          {match,
              {3287,5},
              {var,{3287,5},'F'},
              {'fun',
                  {3287,9},
                  {clauses,
                      [{clause,
                           {3287,12},
                           [{var,{3287,13},'Prev'}],
                           [],
                           [{op,{3287,27},
                                'and',
                                {var,{3287,22},'Prev'},
                                {var,{3287,31},'Safe'}}]}]}}},
          {debug_line,3288,1473},
          {match,
              {3288,5},
              {var,{3288,5},'SafeMap'},
              {call,
                  {3288,15},
                  {remote,
                      {3288,19},
                      {atom,{3288,15},maps},
                      {atom,{3288,20},update_with}},
                  [{var,{3288,32},'S'},
                   {var,{3288,35},'F'},
                   {var,{3288,38},'Safe'},
                   {var,{3288,44},'SafeMap0'}]}},
          {debug_line,3289,1474},
          {call,
              {3289,5},
              {atom,{3289,5},unfold_update_succ},
              [{var,{3289,24},'Ss'},
               {var,{3289,28},'Safe'},
               {var,{3289,34},'SafeMap'}]}]},
     {clause,
         {3290,1},
         [{nil,{3290,20}},{var,{3290,24},'_'},{var,{3290,27},'SafeMap'}],
         [],
         [{debug_line,3291,1475},{var,{3291,5},'SafeMap'}]}]}.
{function,
 {3293,1},
 unfold_lit_is,3,
 [{clause,
   {3293,1},
   [{var,{3293,1},'_'},{var,{3293,1},'_'},{var,{3293,1},'_'}],
   [[{call,
      {3293,1},
      {remote,{3293,1},{atom,{3293,1},fake},{atom,{3293,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3293,1476},{atom,{3293,1},ignore}]},
  {clause,
   {3293,1},
   [{cons,
     {3293,15},
     {match,
      {3293,16},
      {tuple,
       {3293,16},
       [{atom,{3293,16},b_set},
        {var,{3293,16},'_'},
        {var,{3293,16},'_'},
        {atom,{3293,26},match_fail},
        {cons,
         {3294,28},
         {tuple,
          {3294,29},
          [{atom,{3294,29},b_literal},{atom,{3294,44},function_clause}]},
         {var,{3294,63},'Args0'}}]},
      {var,{3294,71},'I0'}},
     {var,{3294,76},'Is'}},
    {var,{3295,15},'LitMap'},
    {var,{3295,23},'Acc'}],
   [],
   [{debug_line,3298,1477},
    {match,
     {3298,5},
     {var,{3298,5},'Args'},
     {call,
      {3298,12},
      {atom,{3298,12},unfold_call_args},
      [{var,{3298,29},'Args0'},
       {var,{3298,36},'LitMap'},
       {integer,{3298,44},0}]}},
    {debug_line,3299,1478},
    {match,
     {3299,5},
     {var,{3299,5},'I'},
     {block,
      {3299,9},
      [{match,
        {3299,18},
        {var,{3299,18},rec154},
        {cons,
         {3299,23},
         {tuple,
          {3299,24},
          [{atom,{3299,24},b_literal},{atom,{3299,39},function_clause}]},
         {var,{3299,58},'Args'}}},
       {match,{3299,9},{var,{3299,9},rec155},{var,{3299,9},'I0'}},
       {'case',
        {3299,18},
        {var,{3299,9},rec155},
        [{clause,
          {3299,18},
          [{tuple,
            {3299,18},
            [{atom,{3299,18},b_set},
             {var,{3299,18},'_'},
             {var,{3299,18},'_'},
             {var,{3299,18},'_'},
             {var,{3299,18},'_'}]}],
          [],
          [{call,
            {3299,18},
            {remote,
             {3299,18},
             {atom,{3299,18},erlang},
             {atom,{3299,18},setelement}},
            [{integer,{3299,18},5},
             {var,{3299,9},rec155},
             {var,{3299,18},rec154}]}]},
         {clause,
          [{generated,true},{location,{3299,18}}],
          [{var,[{generated,true},{location,{3299,18}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3299,18}}],
            {remote,
             [{generated,true},{location,{3299,18}}],
             {atom,[{generated,true},{location,{3299,18}}],erlang},
             {atom,[{generated,true},{location,{3299,18}}],error}},
            [{tuple,
              [{generated,true},{location,{3299,18}}],
              [{atom,[{generated,true},{location,{3299,18}}],badrecord},
               {var,{3299,9},rec155}]}]}]}]}]}},
    {debug_line,3300,1479},
    {tuple,
     {3300,5},
     [{call,
       {3300,6},
       {remote,{3300,6},{atom,{3300,6},lists},{atom,{3300,6},reverse}},
       [{var,{3300,14},'Acc'},
        {block,0,
         [{cons,{3300,19},{var,{3300,20},'I'},{var,{3300,24},'Is'}}]}]},
      {atom,{3300,30},false}]}]},
  {clause,
   {3301,1},
   [{cons,
     {3301,15},
     {match,
      {3301,16},
      {tuple,
       {3301,16},
       [{atom,{3301,16},b_set},
        {var,{3301,16},'_'},
        {var,{3301,16},'_'},
        {var,{3301,26},'Op'},
        {var,{3301,34},'Args0'}]},
      {var,{3301,41},'I0'}},
     {var,{3301,44},'Is'}},
    {var,{3301,49},'LitMap'},
    {var,{3301,57},'Acc'}],
   [],
   [{debug_line,3305,1480},
    {match,
     {3305,5},
     {var,{3305,5},'Unfold'},
     {'case',
      {3305,14},
      {var,{3305,19},'Op'},
      [{clause,
        {3306,18},
        [{atom,{3306,18},call}],
        [],
        [{debug_line,3306,1481},{atom,{3306,26},true}]},
       {clause,
        {3307,18},
        [{var,{3307,18},'_'}],
        [],
        [{debug_line,3307,1482},{atom,{3307,23},false}]}]}},
    {debug_line,3309,1483},
    {match,
     {3309,5},
     {var,{3309,5},'I'},
     {'case',
      {3309,9},
      {var,{3309,14},'Unfold'},
      [{clause,
        {3310,13},
        [{atom,{3310,13},true}],
        [],
        [{debug_line,3311,1484},
         {match,
          {3311,17},
          {var,{3311,17},'Args'},
          {call,
           {3311,24},
           {atom,{3311,24},unfold_call_args},
           [{var,{3311,41},'Args0'},
            {var,{3311,48},'LitMap'},
            {block,0,[{op,{3311,56},'-',{integer,{3311,57},1}}]}]}},
         {debug_line,3312,1485},
         {block,
          {3312,17},
          [{match,{3312,17},{var,{3312,17},rec156},{var,{3312,17},'I0'}},
           {'case',
            {3312,26},
            {var,{3312,17},rec156},
            [{clause,
              {3312,26},
              [{tuple,
                {3312,26},
                [{atom,{3312,26},b_set},
                 {var,{3312,26},'_'},
                 {var,{3312,26},'_'},
                 {var,{3312,26},'_'},
                 {var,{3312,26},'_'}]}],
              [],
              [{call,
                {3312,26},
                {remote,
                 {3312,26},
                 {atom,{3312,26},erlang},
                 {atom,{3312,26},setelement}},
                [{integer,{3312,26},5},
                 {var,{3312,17},rec156},
                 {var,{3312,31},'Args'}]}]},
             {clause,
              [{generated,true},{location,{3312,26}}],
              [{var,[{generated,true},{location,{3312,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{3312,26}}],
                {remote,
                 [{generated,true},{location,{3312,26}}],
                 {atom,[{generated,true},{location,{3312,26}}],erlang},
                 {atom,[{generated,true},{location,{3312,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{3312,26}}],
                  [{atom,[{generated,true},{location,{3312,26}}],badrecord},
                   {var,{3312,17},rec156}]}]}]}]}]}]},
       {clause,
        {3313,13},
        [{atom,{3313,13},false}],
        [],
        [{debug_line,3314,1486},{var,{3314,17},'I0'}]}]}},
    {debug_line,3316,1487},
    {'case',
     {3316,5},
     {call,
      {3316,10},
      {remote,
       {3316,18},
       {atom,{3316,10},beam_ssa},
       {atom,{3316,19},clobbers_xregs}},
      [{var,{3316,34},'I'}]},
     [{clause,
       {3317,9},
       [{atom,{3317,9},true}],
       [],
       [{debug_line,3321,1488},
        {tuple,
         {3321,13},
         [{call,
           {3321,14},
           {remote,{3321,14},{atom,{3321,14},lists},{atom,{3321,14},reverse}},
           [{var,{3321,22},'Acc'},
            {block,0,
             [{cons,{3321,27},{var,{3321,28},'I'},{var,{3321,30},'Is'}}]}]},
          {atom,{3321,36},false}]}]},
      {clause,
       {3322,9},
       [{atom,{3322,9},false}],
       [],
       [{debug_line,3323,1489},
        {call,
         {3323,13},
         {atom,{3323,13},unfold_lit_is},
         [{var,{3323,27},'Is'},
          {var,{3323,31},'LitMap'},
          {block,0,
           [{cons,
             {3323,39},
             {var,{3323,40},'I'},
             {var,{3323,42},'Acc'}}]}]}]}]}]},
  {clause,
   {3325,1},
   [{nil,{3325,15}},{var,{3325,19},'_LitMap'},{var,{3325,28},'Acc'}],
   [],
   [{debug_line,3326,1490},
    {tuple,
     {3326,5},
     [{call,
       {3326,6},
       {remote,{3326,6},{atom,{3326,6},lists},{atom,{3326,6},reverse}},
       [{var,{3326,14},'Acc'}]},
      {atom,{3326,20},true}]}]}]}.
{function,
    {3328,1},
    unfold_call_args,3,
    [{clause,
         {3328,1},
         [{var,{3328,1},'_'},{var,{3328,1},'_'},{var,{3328,1},'_'}],
         [[{call,
               {3328,1},
               {remote,
                   {3328,1},
                   {atom,{3328,1},fake},
                   {atom,{3328,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3328,1491},{atom,{3328,1},ignore}]},
     {clause,
         {3328,1},
         [{cons,{3328,18},{var,{3328,19},'A0'},{var,{3328,22},'As'}},
          {var,{3328,27},'LitMap'},
          {var,{3328,35},'X'}],
         [],
         [{debug_line,3329,1492},
          {match,
              {3329,5},
              {var,{3329,5},'A'},
              {call,
                  {3329,9},
                  {atom,{3329,9},unfold_arg},
                  [{var,{3329,20},'A0'},
                   {var,{3329,24},'LitMap'},
                   {var,{3329,32},'X'}]}},
          {debug_line,3330,1493},
          {cons,
              {3330,5},
              {var,{3330,6},'A'},
              {call,
                  {3330,10},
                  {atom,{3330,10},unfold_call_args},
                  [{var,{3330,27},'As'},
                   {var,{3330,31},'LitMap'},
                   {block,0,
                       [{op,{3330,41},
                            '+',
                            {var,{3330,39},'X'},
                            {integer,{3330,43},1}}]}]}}]},
     {clause,
         {3331,1},
         [{nil,{3331,18}},{var,{3331,22},'_'},{var,{3331,25},'_'}],
         [],
         [{debug_line,3332,1494},{nil,{3332,5}}]}]}.
{function,
    {3334,1},
    unfold_arg,3,
    [{clause,
         {3334,1},
         [{var,{3334,1},'_'},{var,{3334,1},'_'},{var,{3334,1},'_'}],
         [[{call,
               {3334,1},
               {remote,
                   {3334,1},
                   {atom,{3334,1},fake},
                   {atom,{3334,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3334,1495},{atom,{3334,1},ignore}]},
     {clause,
         {3334,1},
         [{match,
              {3334,12},
              {tuple,
                  {3334,12},
                  [{atom,{3334,12},b_literal},{var,{3334,27},'Val'}]},
              {var,{3334,32},'Lit'}},
          {var,{3334,37},'LitMap'},
          {var,{3334,45},'X'}],
         [],
         [{debug_line,3335,1496},
          {'case',
              {3335,5},
              {var,{3335,10},'LitMap'},
              [{clause,
                   {3336,9},
                   [{map,
                        {3336,9},
                        [{map_field_exact,
                             {3336,14},
                             {var,{3336,11},'Val'},
                             {var,{3336,16},'Vars'}}]}],
                   [],
                   [{debug_line,3342,1497},
                    {'case',
                        {3342,13},
                        {call,
                            {3342,18},
                            {remote,
                                {3342,18},
                                {atom,{3342,18},lists},
                                {atom,{3342,18},keyfind}},
                            [{var,{3342,26},'X'},
                             {integer,{3342,29},1},
                             {var,{3342,32},'Vars'}]},
                        [{clause,
                             {3343,17},
                             [{atom,{3343,17},false}],
                             [],
                             [{debug_line,3343,1498},{var,{3343,26},'Lit'}]},
                         {clause,
                             {3344,17},
                             [{tuple,
                                  {3344,17},
                                  [{var,{3344,18},'X'},
                                   {var,{3344,20},'Var'}]}],
                             [],
                             [{debug_line,3344,1499},
                              {var,{3344,28},'Var'}]}]}]},
               {clause,
                   {3346,9},
                   [{map,{3346,9},[]}],
                   [],
                   [{debug_line,3346,1500},{var,{3346,16},'Lit'}]}]}]},
     {clause,
         {3348,1},
         [{var,{3348,12},'Expr'},
          {var,{3348,18},'_LitMap'},
          {var,{3348,27},'_X'}],
         [],
         [{debug_line,3349,1501},{var,{3349,5},'Expr'}]}]}.
{function,
 {3389,1},
 ssa_opt_tail_literals,1,
 [{clause,
   {3389,1},
   [{var,{3389,1},'_'}],
   [[{call,
      {3389,1},
      {remote,{3389,1},{atom,{3389,1},fake},{atom,{3389,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3389,1502},{atom,{3389,1},ignore}]},
  {clause,
   {3389,1},
   [{tuple,{3389,23},[{var,{3389,24},'St'},{var,{3389,27},'FuncDb'}]}],
   [],
   [{debug_line,3390,1503},
    {match,
     {3390,5},
     {tuple,
      {3390,5},
      [{atom,{3390,5},opt_st},
       {var,{3390,28},'Blocks0'},
       {var,{3390,5},'_'},
       {var,{3390,17},'Count0'},
       {var,{3390,5},'_'}]},
     {var,{3390,39},'St'}},
    {debug_line,3391,1504},
    {match,
     {3391,5},
     {atom,{3391,5},true},
     {call,
      {3391,12},
      {remote,{3391,12},{atom,{3391,12},erlang},{atom,{3391,12},is_map}},
      [{var,{3391,19},'Blocks0'}]}},
    {debug_line,3392,1505},
    {match,
     {3392,5},
     {tuple,{3392,5},[{var,{3392,6},'Count'},{var,{3392,13},'Blocks'}]},
     {call,
      {3392,23},
      {atom,{3392,23},opt_tail_literals},
      [{block,0,
        [{call,
          {3392,41},
          {remote,{3392,49},{atom,{3392,41},beam_ssa},{atom,{3392,50},rpo}},
          [{var,{3392,54},'Blocks0'}]}]},
       {var,{3392,64},'Count0'},
       {var,{3392,72},'Blocks0'}]}},
    {debug_line,3393,1506},
    {tuple,
     {3393,5},
     [{block,
       {3393,6},
       [{match,{3393,6},{var,{3393,6},rec157},{var,{3393,6},'St'}},
        {'case',
         {3393,26},
         {var,{3393,6},rec157},
         [{clause,
           {3393,26},
           [{tuple,
             {3393,26},
             [{atom,{3393,26},opt_st},
              {var,{3393,26},'_'},
              {var,{3393,26},'_'},
              {var,{3393,26},'_'},
              {var,{3393,26},'_'}]}],
           [],
           [{call,
             {3393,26},
             {remote,
              {3393,26},
              {atom,{3393,26},erlang},
              {atom,{3393,26},setelement}},
             [{integer,{3393,26},2},
              {call,
               {3393,16},
               {remote,
                {3393,16},
                {atom,{3393,16},erlang},
                {atom,{3393,16},setelement}},
               [{integer,{3393,16},4},
                {var,{3393,6},rec157},
                {var,{3393,20},'Count'}]},
              {var,{3393,30},'Blocks'}]}]},
          {clause,
           [{generated,true},{location,{3393,26}}],
           [{var,[{generated,true},{location,{3393,26}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{3393,26}}],
             {remote,
              [{generated,true},{location,{3393,26}}],
              {atom,[{generated,true},{location,{3393,26}}],erlang},
              {atom,[{generated,true},{location,{3393,26}}],error}},
             [{tuple,
               [{generated,true},{location,{3393,26}}],
               [{atom,[{generated,true},{location,{3393,26}}],badrecord},
                {var,{3393,6},rec157}]}]}]}]}]},
      {var,{3393,38},'FuncDb'}]}]}]}.
{function,
 {3395,1},
 opt_tail_literals,3,
 [{clause,
   {3395,1},
   [{var,{3395,1},'_'},{var,{3395,1},'_'},{var,{3395,1},'_'}],
   [[{call,
      {3395,1},
      {remote,{3395,1},{atom,{3395,1},fake},{atom,{3395,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3395,1507},{atom,{3395,1},ignore}]},
  {clause,
   {3395,1},
   [{cons,{3395,19},{var,{3395,20},'L'},{var,{3395,24},'Ls'}},
    {var,{3395,29},'Count'},
    {var,{3395,36},'Blocks0'}],
   [],
   [{debug_line,3396,1508},
    {match,
     {3396,5},
     {tuple,
      {3396,5},
      [{atom,{3396,5},b_blk},
       {var,{3396,5},'_'},
       {var,{3396,15},'Is0'},
       {var,{3396,24},'Last'}]},
     {match,
      {3396,32},
      {var,{3396,32},'Blk0'},
      {call,
       {3396,39},
       {remote,{3396,39},{atom,{3396,39},erlang},{atom,{3396,39},map_get}},
       [{var,{3396,47},'L'},{var,{3396,50},'Blocks0'}]}}},
    {debug_line,3398,1509},
    {'case',
     {3398,5},
     {call,
      {3398,10},
      {atom,{3398,10},is_tail_literal},
      [{var,{3398,26},'Is0'},
       {var,{3398,31},'Last'},
       {var,{3398,37},'Blocks0'}]},
     [{clause,
       {3399,9},
       [{tuple,{3399,9},[{atom,{3399,10},yes},{var,{3399,15},'Var'}]}],
       [],
       [{debug_line,3404,1510},
        {match,
         {3404,13},
         {var,{3404,13},'RetBlk'},
         {tuple,
          {3404,22},
          [{atom,{3404,22},b_blk},
           {map,{3404,22},[]},
           {nil,{3404,32}},
           {tuple,
            {3404,40},
            [{atom,{3404,40},b_ret},
             {map,{3404,40},[]},
             {var,{3404,51},'Var'}]}]}},
        {debug_line,3405,1511},
        {match,{3405,13},{var,{3405,13},'RetLbl'},{var,{3405,22},'Count'}},
        {debug_line,3407,1512},
        {match,
         {3407,13},
         {var,{3407,13},'Blk'},
         {block,
          {3407,19},
          [{match,
            {3407,30},
            {var,{3407,30},rec158},
            {block,
             {3407,35},
             [{match,{3407,35},{var,{3407,35},rec160},{var,{3407,35},'Last'}},
              {'case',
               {3407,45},
               {var,{3407,35},rec160},
               [{clause,
                 {3407,45},
                 [{tuple,
                   {3407,45},
                   [{atom,{3407,45},b_br},
                    {var,{3407,45},'_'},
                    {var,{3407,45},'_'},
                    {var,{3407,45},'_'},
                    {var,{3407,45},'_'}]}],
                 [],
                 [{call,
                   {3407,45},
                   {remote,
                    {3407,45},
                    {atom,{3407,45},erlang},
                    {atom,{3407,45},setelement}},
                   [{integer,{3407,45},4},
                    {var,{3407,35},rec160},
                    {var,{3407,50},'RetLbl'}]}]},
                {clause,
                 [{generated,true},{location,{3407,45}}],
                 [{var,[{generated,true},{location,{3407,45}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{3407,45}}],
                   {remote,
                    [{generated,true},{location,{3407,45}}],
                    {atom,[{generated,true},{location,{3407,45}}],erlang},
                    {atom,[{generated,true},{location,{3407,45}}],error}},
                   [{tuple,
                     [{generated,true},{location,{3407,45}}],
                     [{atom,[{generated,true},{location,{3407,45}}],badrecord},
                      {var,{3407,35},rec160}]}]}]}]}]}},
           {match,{3407,19},{var,{3407,19},rec159},{var,{3407,19},'Blk0'}},
           {'case',
            {3407,30},
            {var,{3407,19},rec159},
            [{clause,
              {3407,30},
              [{tuple,
                {3407,30},
                [{atom,{3407,30},b_blk},
                 {var,{3407,30},'_'},
                 {var,{3407,30},'_'},
                 {var,{3407,30},'_'}]}],
              [],
              [{call,
                {3407,30},
                {remote,
                 {3407,30},
                 {atom,{3407,30},erlang},
                 {atom,{3407,30},setelement}},
                [{integer,{3407,30},4},
                 {var,{3407,19},rec159},
                 {var,{3407,30},rec158}]}]},
             {clause,
              [{generated,true},{location,{3407,30}}],
              [{var,[{generated,true},{location,{3407,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{3407,30}}],
                {remote,
                 [{generated,true},{location,{3407,30}}],
                 {atom,[{generated,true},{location,{3407,30}}],erlang},
                 {atom,[{generated,true},{location,{3407,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{3407,30}}],
                  [{atom,[{generated,true},{location,{3407,30}}],badrecord},
                   {var,{3407,19},rec159}]}]}]}]}]}},
        {debug_line,3409,1513},
        {match,
         {3409,13},
         {var,{3409,13},'Blocks'},
         {map,
          {3409,29},
          {var,{3409,22},'Blocks0'},
          [{map_field_exact,
            {3409,34},
            {var,{3409,32},'L'},
            {var,{3409,37},'Blk'}},
           {map_field_assoc,
            {3409,49},
            {var,{3409,42},'RetLbl'},
            {var,{3409,52},'RetBlk'}}]}},
        {debug_line,3410,1514},
        {call,
         {3410,13},
         {atom,{3410,13},opt_tail_literals},
         [{var,{3410,31},'Ls'},
          {block,0,
           [{op,{3410,41},'+',{var,{3410,35},'Count'},{integer,{3410,43},1}}]},
          {var,{3410,46},'Blocks'}]}]},
      {clause,
       {3411,9},
       [{atom,{3411,9},no}],
       [],
       [{debug_line,3412,1515},
        {call,
         {3412,13},
         {atom,{3412,13},opt_tail_literals},
         [{var,{3412,31},'Ls'},
          {var,{3412,35},'Count'},
          {var,{3412,42},'Blocks0'}]}]}]}]},
  {clause,
   {3414,1},
   [{nil,{3414,19}},{var,{3414,23},'Count'},{var,{3414,30},'Blocks'}],
   [],
   [{debug_line,3415,1516},
    {tuple,{3415,5},[{var,{3415,6},'Count'},{var,{3415,13},'Blocks'}]}]}]}.
{function,
 {3417,1},
 is_tail_literal,3,
 [{clause,
   {3417,1},
   [{var,{3417,1},'_'},{var,{3417,1},'_'},{var,{3417,1},'_'}],
   [[{call,
      {3417,1},
      {remote,{3417,1},{atom,{3417,1},fake},{atom,{3417,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3417,1517},{atom,{3417,1},ignore}]},
  {clause,
   {3417,1},
   [{cons,
     {3417,17},
     {match,
      {3417,18},
      {tuple,
       {3417,18},
       [{atom,{3417,18},b_set},
        {var,{3417,18},'_'},
        {var,{3417,37},'Dst'},
        {atom,{3417,28},call},
        {var,{3417,18},'_'}]},
      {var,{3417,42},'Call'}},
     {cons,
      {3418,18},
      {tuple,
       {3418,18},
       [{atom,{3418,18},b_set},
        {var,{3418,18},'_'},
        {var,{3418,49},'Bool'},
        {tuple,{3418,28},[{atom,{3418,29},succeeded},{atom,{3418,39},body}]},
        {var,{3418,18},'_'}]},
      {nil,{3418,54}}}},
    {tuple,
     {3419,17},
     [{atom,{3419,17},b_br},
      {var,{3419,17},'_'},
      {match,
       {3419,28},
       {tuple,{3419,28},[{atom,{3419,28},b_var},{var,{3419,28},'_'}]},
       {var,{3419,37},'Bool'}},
      {var,{3419,47},'Succ'},
      {var,{3419,17},'_'}]},
    {var,{3419,54},'Blocks'}],
   [],
   [{debug_line,3420,1518},
    {'case',
     {3420,5},
     {var,{3420,10},'Blocks'},
     [{clause,
       {3421,9},
       [{map,
         {3421,9},
         [{map_field_exact,
           {3421,17},
           {var,{3421,12},'Succ'},
           {tuple,
            {3421,20},
            [{atom,{3421,20},b_blk},
             {var,{3421,20},'_'},
             {nil,{3421,30}},
             {tuple,
              {3421,38},
              [{atom,{3421,38},b_ret},
               {var,{3421,38},'_'},
               {tuple,
                {3421,49},
                [{atom,{3421,49},b_literal},{var,{3421,64},'Val'}]}]}]}}]}],
       [],
       [{debug_line,3425,1519},
        {match,
         {3425,13},
         {var,{3425,13},'Type'},
         {call,
          {3425,20},
          {remote,
           {3425,28},
           {atom,{3425,20},beam_ssa},
           {atom,{3425,29},get_anno}},
          [{atom,{3425,38},result_type},
           {var,{3425,51},'Call'},
           {atom,{3425,57},any}]}},
        {debug_line,3426,1520},
        {'case',
         {3426,13},
         {call,
          {3426,18},
          {remote,
           {3426,28},
           {atom,{3426,18},beam_types},
           {atom,{3426,29},get_singleton_value}},
          [{var,{3426,49},'Type'}]},
         [{clause,
           {3427,17},
           [{tuple,{3427,17},[{atom,{3427,18},ok},{var,{3427,22},'Val'}]}],
           [],
           [{debug_line,3427,1521},
            {tuple,{3427,30},[{atom,{3427,31},yes},{var,{3427,36},'Dst'}]}]},
          {clause,
           {3428,17},
           [{var,{3428,17},'_'}],
           [],
           [{debug_line,3428,1522},{atom,{3428,22},no}]}]}]},
      {clause,
       {3430,9},
       [{map,{3430,9},[]}],
       [],
       [{debug_line,3431,1523},{atom,{3431,13},no}]}]}]},
  {clause,
   {3433,1},
   [{cons,{3433,17},{var,{3433,18},'_'},{var,{3433,22},'Is'}},
    {match,
     {3433,27},
     {tuple,
      {3433,27},
      [{atom,{3433,27},b_br},
       {var,{3433,27},'_'},
       {var,{3433,27},'_'},
       {var,{3433,27},'_'},
       {var,{3433,27},'_'}]},
     {var,{3433,35},'Last'}},
    {var,{3433,41},'Blocks'}],
   [],
   [{debug_line,3434,1524},
    {call,
     {3434,5},
     {atom,{3434,5},is_tail_literal},
     [{var,{3434,21},'Is'},{var,{3434,25},'Last'},{var,{3434,31},'Blocks'}]}]},
  {clause,
   {3435,1},
   [{var,{3435,17},'_Is'},{var,{3435,22},'_Last'},{var,{3435,29},'_Blocks'}],
   [],
   [{debug_line,3436,1525},{atom,{3436,5},no}]}]}.
{function,
 {3476,1},
 ssa_opt_redundant_br,1,
 [{clause,
   {3476,1},
   [{var,{3476,1},'_'}],
   [[{call,
      {3476,1},
      {remote,{3476,1},{atom,{3476,1},fake},{atom,{3476,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3476,1526},{atom,{3476,1},ignore}]},
  {clause,
   {3476,1},
   [{tuple,
     {3476,22},
     [{match,
       {3476,23},
       {tuple,
        {3476,23},
        [{atom,{3476,23},opt_st},
         {var,{3476,35},'Blocks0'},
         {var,{3476,23},'_'},
         {var,{3476,23},'_'},
         {var,{3476,23},'_'}]},
       {var,{3476,44},'St'}},
      {var,{3476,48},'FuncDb'}]}],
   [[{call,
      {3476,62},
      {remote,{3476,62},{atom,{3476,62},erlang},{atom,{3476,62},is_map}},
      [{var,{3476,69},'Blocks0'}]}]],
   [{debug_line,3477,1527},
    {match,
     {3477,5},
     {var,{3477,5},'Blocks'},
     {call,
      {3477,14},
      {atom,{3477,14},redundant_br},
      [{block,0,
        [{call,
          {3477,27},
          {remote,{3477,35},{atom,{3477,27},beam_ssa},{atom,{3477,36},rpo}},
          [{var,{3477,40},'Blocks0'}]}]},
       {var,{3477,50},'Blocks0'}]}},
    {debug_line,3478,1528},
    {tuple,
     {3478,5},
     [{block,
       {3478,6},
       [{match,{3478,6},{var,{3478,6},rec161},{var,{3478,6},'St'}},
        {'case',
         {3478,16},
         {var,{3478,6},rec161},
         [{clause,
           {3478,16},
           [{tuple,
             {3478,16},
             [{atom,{3478,16},opt_st},
              {var,{3478,16},'_'},
              {var,{3478,16},'_'},
              {var,{3478,16},'_'},
              {var,{3478,16},'_'}]}],
           [],
           [{call,
             {3478,16},
             {remote,
              {3478,16},
              {atom,{3478,16},erlang},
              {atom,{3478,16},setelement}},
             [{integer,{3478,16},2},
              {var,{3478,6},rec161},
              {var,{3478,20},'Blocks'}]}]},
          {clause,
           [{generated,true},{location,{3478,16}}],
           [{var,[{generated,true},{location,{3478,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{3478,16}}],
             {remote,
              [{generated,true},{location,{3478,16}}],
              {atom,[{generated,true},{location,{3478,16}}],erlang},
              {atom,[{generated,true},{location,{3478,16}}],error}},
             [{tuple,
               [{generated,true},{location,{3478,16}}],
               [{atom,[{generated,true},{location,{3478,16}}],badrecord},
                {var,{3478,6},rec161}]}]}]}]}]},
      {var,{3478,29},'FuncDb'}]}]}]}.
{function,
 {3480,1},
 redundant_br,2,
 [{clause,
   {3480,1},
   [{var,{3480,1},'_'},{var,{3480,1},'_'}],
   [[{call,
      {3480,1},
      {remote,{3480,1},{atom,{3480,1},fake},{atom,{3480,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3480,1529},{atom,{3480,1},ignore}]},
  {clause,
   {3480,1},
   [{cons,{3480,14},{var,{3480,15},'L'},{var,{3480,17},'Ls'}},
    {var,{3480,22},'Blocks0'}],
   [],
   [{debug_line,3481,1530},
    {match,
     {3481,5},
     {var,{3481,5},'Blk0'},
     {call,
      {3481,12},
      {remote,{3481,12},{atom,{3481,12},erlang},{atom,{3481,12},map_get}},
      [{var,{3481,20},'L'},{var,{3481,23},'Blocks0'}]}},
    {debug_line,3482,1531},
    {'case',
     {3482,5},
     {var,{3482,10},'Blk0'},
     [{clause,
       {3483,9},
       [{tuple,
         {3483,9},
         [{atom,{3483,9},b_blk},
          {var,{3483,9},'_'},
          {var,{3483,19},'Is'},
          {tuple,
           {3484,21},
           [{atom,{3484,21},b_br},
            {var,{3484,21},'_'},
            {match,
             {3484,32},
             {tuple,{3484,32},[{atom,{3484,32},b_var},{var,{3484,32},'_'}]},
             {var,{3484,41},'Bool'}},
            {var,{3485,32},'Succ'},
            {var,{3486,32},'Fail'}]}]}],
       [],
       [{debug_line,3487,1532},
        {'case',
         {3487,13},
         {var,{3487,18},'Blocks0'},
         [{clause,
           {3488,17},
           [{map,
             {3488,17},
             [{map_field_exact,
               {3488,24},
               {var,{3488,19},'Succ'},
               {tuple,
                {3488,27},
                [{atom,{3488,27},b_blk},
                 {var,{3488,27},'_'},
                 {nil,{3488,37}},
                 {tuple,
                  {3488,45},
                  [{atom,{3488,45},b_ret},
                   {var,{3488,45},'_'},
                   {tuple,
                    {3488,56},
                    [{atom,{3488,56},b_literal},{atom,{3488,71},true}]}]}]}},
              {map_field_exact,
               {3489,24},
               {var,{3489,19},'Fail'},
               {tuple,
                {3489,27},
                [{atom,{3489,27},b_blk},
                 {var,{3489,27},'_'},
                 {nil,{3489,37}},
                 {tuple,
                  {3489,45},
                  [{atom,{3489,45},b_ret},
                   {var,{3489,45},'_'},
                   {tuple,
                    {3489,56},
                    [{atom,{3489,56},b_literal},
                     {atom,{3489,71},false}]}]}]}}]}],
           [],
           [{debug_line,3490,1533},
            {'case',
             {3490,21},
             {call,
              {3490,26},
              {atom,{3490,26},redundant_br_safe_bool},
              [{var,{3490,49},'Is'},{var,{3490,53},'Bool'}]},
             [{clause,
               {3491,25},
               [{atom,{3491,25},true}],
               [],
               [{debug_line,3492,1534},
                {match,
                 {3492,29},
                 {var,{3492,29},'Blk'},
                 {block,
                  {3492,35},
                  [{match,
                    {3492,46},
                    {var,{3492,46},rec162},
                    {tuple,
                     {3492,51},
                     [{atom,{3492,51},b_ret},
                      {map,{3492,51},[]},
                      {var,{3492,62},'Bool'}]}},
                   {match,
                    {3492,35},
                    {var,{3492,35},rec163},
                    {var,{3492,35},'Blk0'}},
                   {'case',
                    {3492,46},
                    {var,{3492,35},rec163},
                    [{clause,
                      {3492,46},
                      [{tuple,
                        {3492,46},
                        [{atom,{3492,46},b_blk},
                         {var,{3492,46},'_'},
                         {var,{3492,46},'_'},
                         {var,{3492,46},'_'}]}],
                      [],
                      [{call,
                        {3492,46},
                        {remote,
                         {3492,46},
                         {atom,{3492,46},erlang},
                         {atom,{3492,46},setelement}},
                        [{integer,{3492,46},4},
                         {var,{3492,35},rec163},
                         {var,{3492,46},rec162}]}]},
                     {clause,
                      [{generated,true},{location,{3492,46}}],
                      [{var,[{generated,true},{location,{3492,46}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{3492,46}}],
                        {remote,
                         [{generated,true},{location,{3492,46}}],
                         {atom,[{generated,true},{location,{3492,46}}],erlang},
                         {atom,[{generated,true},{location,{3492,46}}],error}},
                        [{tuple,
                          [{generated,true},{location,{3492,46}}],
                          [{atom,
                            [{generated,true},{location,{3492,46}}],
                            badrecord},
                           {var,{3492,35},rec163}]}]}]}]}]}},
                {debug_line,3493,1535},
                {match,
                 {3493,29},
                 {var,{3493,29},'Blocks'},
                 {map,
                  {3493,45},
                  {var,{3493,38},'Blocks0'},
                  [{map_field_assoc,
                    {3493,49},
                    {var,{3493,47},'L'},
                    {var,{3493,52},'Blk'}}]}},
                {debug_line,3494,1536},
                {call,
                 {3494,29},
                 {atom,{3494,29},redundant_br},
                 [{var,{3494,42},'Ls'},{var,{3494,46},'Blocks'}]}]},
              {clause,
               {3495,25},
               [{atom,{3495,25},false}],
               [],
               [{debug_line,3496,1537},
                {call,
                 {3496,29},
                 {atom,{3496,29},redundant_br},
                 [{var,{3496,42},'Ls'},{var,{3496,46},'Blocks0'}]}]}]}]},
          {clause,
           {3498,17},
           [{map,
             {3498,17},
             [{map_field_exact,
               {3498,24},
               {var,{3498,19},'Succ'},
               {tuple,
                {3498,27},
                [{atom,{3498,27},b_blk},
                 {var,{3498,27},'_'},
                 {nil,{3498,37}},
                 {tuple,
                  {3498,45},
                  [{atom,{3498,45},b_br},
                   {var,{3498,45},'_'},
                   {var,{3498,45},'_'},
                   {var,{3498,56},'PhiL'},
                   {var,{3498,66},'PhiL'}]}]}},
              {map_field_exact,
               {3499,24},
               {var,{3499,19},'Fail'},
               {tuple,
                {3499,27},
                [{atom,{3499,27},b_blk},
                 {var,{3499,27},'_'},
                 {nil,{3499,37}},
                 {tuple,
                  {3499,45},
                  [{atom,{3499,45},b_br},
                   {var,{3499,45},'_'},
                   {var,{3499,45},'_'},
                   {var,{3499,56},'PhiL'},
                   {var,{3499,66},'PhiL'}]}]}}]}],
           [],
           [{debug_line,3500,1538},
            {'case',
             {3500,21},
             {call,
              {3500,26},
              {atom,{3500,26},redundant_br_safe_bool},
              [{var,{3500,49},'Is'},{var,{3500,53},'Bool'}]},
             [{clause,
               {3501,25},
               [{atom,{3501,25},true}],
               [],
               [{debug_line,3502,1539},
                {match,
                 {3502,29},
                 {var,{3502,29},'Blocks'},
                 {call,
                  {3502,38},
                  {atom,{3502,38},redundant_br_phi},
                  [{var,{3502,55},'L'},
                   {var,{3502,58},'Blk0'},
                   {var,{3502,64},'PhiL'},
                   {var,{3502,70},'Blocks0'}]}},
                {debug_line,3503,1540},
                {call,
                 {3503,29},
                 {atom,{3503,29},redundant_br},
                 [{var,{3503,42},'Ls'},{var,{3503,46},'Blocks'}]}]},
              {clause,
               {3504,25},
               [{atom,{3504,25},false}],
               [],
               [{debug_line,3505,1541},
                {call,
                 {3505,29},
                 {atom,{3505,29},redundant_br},
                 [{var,{3505,42},'Ls'},{var,{3505,46},'Blocks0'}]}]}]}]},
          {clause,
           {3507,17},
           [{map,
             {3507,17},
             [{map_field_exact,
               {3507,24},
               {var,{3507,19},'Succ'},
               {tuple,
                {3507,27},
                [{atom,{3507,27},b_blk},
                 {var,{3507,27},'_'},
                 {nil,{3507,37}},
                 {tuple,
                  {3507,45},
                  [{atom,{3507,45},b_ret},
                   {var,{3507,45},'_'},
                   {var,{3507,56},'Other'}]}]}},
              {map_field_exact,
               {3508,24},
               {var,{3508,19},'Fail'},
               {tuple,
                {3508,27},
                [{atom,{3508,27},b_blk},
                 {var,{3508,27},'_'},
                 {nil,{3508,37}},
                 {tuple,
                  {3508,45},
                  [{atom,{3508,45},b_ret},
                   {var,{3508,45},'_'},
                   {var,{3508,56},'Var'}]}]}}]}],
           [[{op,{3508,71},'=/=',{var,{3508,68},'Is'},{nil,{3508,75}}}]],
           [{debug_line,3509,1542},
            {'case',
             {3509,21},
             {call,
              {3509,26},
              {remote,{3509,26},{atom,{3509,26},lists},{atom,{3509,26},last}},
              [{var,{3509,31},'Is'}]},
             [{clause,
               {3510,25},
               [{tuple,
                 {3510,25},
                 [{atom,{3510,25},b_set},
                  {var,{3510,25},'_'},
                  {var,{3510,25},'_'},
                  {tuple,
                   {3510,35},
                   [{atom,{3510,36},bif},{atom,{3510,40},'=:='}]},
                  {cons,
                   {3510,52},
                   {var,{3510,53},'Var'},
                   {cons,
                    {3510,57},
                    {var,{3510,57},'Other'},
                    {nil,{3510,62}}}}]}],
               [],
               [{debug_line,3511,1543},
                {match,
                 {3511,29},
                 {var,{3511,29},'Blk'},
                 {block,
                  {3511,35},
                  [{match,
                    {3511,46},
                    {var,{3511,46},rec164},
                    {call,
                     {3511,49},
                     {remote,
                      {3511,49},
                      {atom,{3511,49},lists},
                      {atom,{3511,49},droplast}},
                     [{var,{3511,58},'Is'}]}},
                   {match,
                    {3512,46},
                    {var,{3512,46},rec165},
                    {tuple,
                     {3512,51},
                     [{atom,{3512,51},b_ret},
                      {map,{3512,51},[]},
                      {var,{3512,62},'Var'}]}},
                   {match,
                    {3511,35},
                    {var,{3511,35},rec166},
                    {var,{3511,35},'Blk0'}},
                   {'case',
                    {3511,46},
                    {var,{3511,35},rec166},
                    [{clause,
                      {3511,46},
                      [{tuple,
                        {3511,46},
                        [{atom,{3511,46},b_blk},
                         {var,{3511,46},'_'},
                         {var,{3511,46},'_'},
                         {var,{3511,46},'_'}]}],
                      [],
                      [{call,
                        {3511,46},
                        {remote,
                         {3511,46},
                         {atom,{3511,46},erlang},
                         {atom,{3511,46},setelement}},
                        [{integer,{3511,46},3},
                         {call,
                          {3512,46},
                          {remote,
                           {3512,46},
                           {atom,{3512,46},erlang},
                           {atom,{3512,46},setelement}},
                          [{integer,{3512,46},4},
                           {var,{3511,35},rec166},
                           {var,{3512,46},rec165}]},
                         {var,{3511,46},rec164}]}]},
                     {clause,
                      [{generated,true},{location,{3511,46}}],
                      [{var,[{generated,true},{location,{3511,46}}],'_'}],
                      [],
                      [{call,
                        [{generated,true},{location,{3511,46}}],
                        {remote,
                         [{generated,true},{location,{3511,46}}],
                         {atom,[{generated,true},{location,{3511,46}}],erlang},
                         {atom,[{generated,true},{location,{3511,46}}],error}},
                        [{tuple,
                          [{generated,true},{location,{3511,46}}],
                          [{atom,
                            [{generated,true},{location,{3511,46}}],
                            badrecord},
                           {var,{3511,35},rec166}]}]}]}]}]}},
                {debug_line,3513,1544},
                {match,
                 {3513,29},
                 {var,{3513,29},'Blocks'},
                 {map,
                  {3513,45},
                  {var,{3513,38},'Blocks0'},
                  [{map_field_assoc,
                    {3513,49},
                    {var,{3513,47},'L'},
                    {var,{3513,52},'Blk'}}]}},
                {debug_line,3514,1545},
                {call,
                 {3514,29},
                 {atom,{3514,29},redundant_br},
                 [{var,{3514,42},'Ls'},{var,{3514,46},'Blocks'}]}]},
              {clause,
               {3515,25},
               [{tuple,
                 {3515,25},
                 [{atom,{3515,25},b_set},
                  {var,{3515,25},'_'},
                  {var,{3515,25},'_'},
                  {var,{3515,25},'_'},
                  {var,{3515,25},'_'}]}],
               [],
               [{debug_line,3516,1546},
                {call,
                 {3516,29},
                 {atom,{3516,29},redundant_br},
                 [{var,{3516,42},'Ls'},{var,{3516,46},'Blocks0'}]}]}]}]},
          {clause,
           {3518,17},
           [{map,{3518,17},[]}],
           [],
           [{debug_line,3519,1547},
            {call,
             {3519,21},
             {atom,{3519,21},redundant_br},
             [{var,{3519,34},'Ls'},{var,{3519,38},'Blocks0'}]}]}]}]},
      {clause,
       {3521,9},
       [{var,{3521,9},'_'}],
       [],
       [{debug_line,3522,1548},
        {call,
         {3522,13},
         {atom,{3522,13},redundant_br},
         [{var,{3522,26},'Ls'},{var,{3522,30},'Blocks0'}]}]}]}]},
  {clause,
   {3524,1},
   [{nil,{3524,14}},{var,{3524,18},'Blocks'}],
   [],
   [{debug_line,3524,1549},{var,{3524,29},'Blocks'}]}]}.
{function,
 {3526,1},
 redundant_br_phi,4,
 [{clause,
   {3526,1},
   [{var,{3526,1},'_'},
    {var,{3526,1},'_'},
    {var,{3526,1},'_'},
    {var,{3526,1},'_'}],
   [[{call,
      {3526,1},
      {remote,{3526,1},{atom,{3526,1},fake},{atom,{3526,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3526,1550},{atom,{3526,1},ignore}]},
  {clause,
   {3526,1},
   [{var,{3526,18},'L'},
    {var,{3526,21},'Blk0'},
    {var,{3526,27},'PhiL'},
    {var,{3526,33},'Blocks'}],
   [],
   [{debug_line,3527,1551},
    {match,
     {3527,5},
     {tuple,
      {3527,5},
      [{atom,{3527,5},b_blk},
       {var,{3527,5},'_'},
       {var,{3527,15},'Is0'},
       {var,{3527,5},'_'}]},
     {match,
      {3527,22},
      {var,{3527,22},'PhiBlk0'},
      {call,
       {3527,32},
       {remote,{3527,32},{atom,{3527,32},erlang},{atom,{3527,32},map_get}},
       [{var,{3527,40},'PhiL'},{var,{3527,46},'Blocks'}]}}},
    {debug_line,3528,1552},
    {'case',
     {3528,5},
     {var,{3528,10},'Is0'},
     [{clause,
       {3529,9},
       [{cons,
         {3529,9},
         {tuple,
          {3529,10},
          [{atom,{3529,10},b_set},
           {var,{3529,10},'_'},
           {var,{3529,10},'_'},
           {atom,{3529,20},phi},
           {var,{3529,10},'_'}]},
         {cons,
          {3529,25},
          {tuple,
           {3529,25},
           [{atom,{3529,25},b_set},
            {var,{3529,25},'_'},
            {var,{3529,25},'_'},
            {atom,{3529,35},phi},
            {var,{3529,25},'_'}]},
          {var,{3529,40},'_'}}}],
       [],
       [{debug_line,3530,1553},{var,{3530,13},'Blocks'}]},
      {clause,
       {3531,9},
       [{cons,
         {3531,9},
         {match,
          {3531,10},
          {tuple,
           {3531,10},
           [{atom,{3531,10},b_set},
            {var,{3531,10},'_'},
            {var,{3531,10},'_'},
            {atom,{3531,20},phi},
            {var,{3531,29},'PhiArgs0'}]},
          {var,{3531,39},'I0'}},
         {var,{3531,42},'Is'}}],
       [],
       [{debug_line,3532,1554},
        {match,
         {3532,13},
         {tuple,
          {3532,13},
          [{atom,{3532,13},b_blk},
           {var,{3532,13},'_'},
           {var,{3532,13},'_'},
           {tuple,
            {3532,25},
            [{atom,{3532,25},b_br},
             {var,{3532,25},'_'},
             {var,{3532,25},'_'},
             {var,{3532,36},'Succ'},
             {var,{3532,46},'Fail'}]}]},
         {var,{3532,55},'Blk0'}},
        {debug_line,3533,1555},
        {match,
         {3533,13},
         {var,{3533,13},'BoolPhiArgs'},
         {cons,
          {3533,27},
          {tuple,
           {3533,28},
           [{tuple,
             {3533,29},
             [{atom,{3533,29},b_literal},{atom,{3533,44},false}]},
            {var,{3533,51},'Fail'}]},
          {cons,
           {3534,28},
           {tuple,
            {3534,28},
            [{tuple,
              {3534,29},
              [{atom,{3534,29},b_literal},{atom,{3534,44},true}]},
             {var,{3534,50},'Succ'}]},
           {nil,{3534,55}}}}},
        {debug_line,3535,1556},
        {match,
         {3535,13},
         {var,{3535,13},'PhiArgs1'},
         {call,
          {3535,24},
          {remote,
           {3535,31},
           {atom,{3535,24},ordsets},
           {atom,{3535,32},from_list}},
          [{var,{3535,42},'PhiArgs0'}]}},
        {debug_line,3536,1557},
        {'case',
         {3536,13},
         {call,
          {3536,18},
          {remote,
           {3536,25},
           {atom,{3536,18},ordsets},
           {atom,{3536,26},is_subset}},
          [{var,{3536,36},'BoolPhiArgs'},{var,{3536,49},'PhiArgs1'}]},
         [{clause,
           {3537,17},
           [{atom,{3537,17},true}],
           [],
           [{debug_line,3538,1558},
            {match,
             {3538,21},
             {tuple,
              {3538,21},
              [{atom,{3538,21},b_blk},
               {var,{3538,21},'_'},
               {var,{3538,21},'_'},
               {tuple,
                {3538,33},
                [{atom,{3538,33},b_br},
                 {var,{3538,33},'_'},
                 {var,{3538,44},'Bool'},
                 {var,{3538,33},'_'},
                 {var,{3538,33},'_'}]}]},
             {var,{3538,53},'Blk0'}},
            {debug_line,3539,1559},
            {match,
             {3539,21},
             {var,{3539,21},'PhiArgs'},
             {call,
              {3539,31},
              {remote,
               {3539,38},
               {atom,{3539,31},ordsets},
               {atom,{3539,39},add_element}},
              [{block,0,
                [{tuple,
                  {3539,51},
                  [{var,{3539,52},'Bool'},{var,{3539,57},'L'}]}]},
               {var,{3539,61},'PhiArgs1'}]}},
            {debug_line,3540,1560},
            {match,
             {3540,21},
             {var,{3540,21},'I'},
             {block,
              {3540,25},
              [{match,{3540,25},{var,{3540,25},rec167},{var,{3540,25},'I0'}},
               {'case',
                {3540,34},
                {var,{3540,25},rec167},
                [{clause,
                  {3540,34},
                  [{tuple,
                    {3540,34},
                    [{atom,{3540,34},b_set},
                     {var,{3540,34},'_'},
                     {var,{3540,34},'_'},
                     {var,{3540,34},'_'},
                     {var,{3540,34},'_'}]}],
                  [],
                  [{call,
                    {3540,34},
                    {remote,
                     {3540,34},
                     {atom,{3540,34},erlang},
                     {atom,{3540,34},setelement}},
                    [{integer,{3540,34},5},
                     {var,{3540,25},rec167},
                     {var,{3540,39},'PhiArgs'}]}]},
                 {clause,
                  [{generated,true},{location,{3540,34}}],
                  [{var,[{generated,true},{location,{3540,34}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{3540,34}}],
                    {remote,
                     [{generated,true},{location,{3540,34}}],
                     {atom,[{generated,true},{location,{3540,34}}],erlang},
                     {atom,[{generated,true},{location,{3540,34}}],error}},
                    [{tuple,
                      [{generated,true},{location,{3540,34}}],
                      [{atom,
                        [{generated,true},{location,{3540,34}}],
                        badrecord},
                       {var,{3540,25},rec167}]}]}]}]}]}},
            {debug_line,3541,1561},
            {match,
             {3541,21},
             {var,{3541,21},'PhiBlk'},
             {block,
              {3541,30},
              [{match,
                {3541,44},
                {var,{3541,44},rec168},
                {cons,{3541,47},{var,{3541,48},'I'},{var,{3541,50},'Is'}}},
               {match,
                {3541,30},
                {var,{3541,30},rec169},
                {var,{3541,30},'PhiBlk0'}},
               {'case',
                {3541,44},
                {var,{3541,30},rec169},
                [{clause,
                  {3541,44},
                  [{tuple,
                    {3541,44},
                    [{atom,{3541,44},b_blk},
                     {var,{3541,44},'_'},
                     {var,{3541,44},'_'},
                     {var,{3541,44},'_'}]}],
                  [],
                  [{call,
                    {3541,44},
                    {remote,
                     {3541,44},
                     {atom,{3541,44},erlang},
                     {atom,{3541,44},setelement}},
                    [{integer,{3541,44},3},
                     {var,{3541,30},rec169},
                     {var,{3541,44},rec168}]}]},
                 {clause,
                  [{generated,true},{location,{3541,44}}],
                  [{var,[{generated,true},{location,{3541,44}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{3541,44}}],
                    {remote,
                     [{generated,true},{location,{3541,44}}],
                     {atom,[{generated,true},{location,{3541,44}}],erlang},
                     {atom,[{generated,true},{location,{3541,44}}],error}},
                    [{tuple,
                      [{generated,true},{location,{3541,44}}],
                      [{atom,
                        [{generated,true},{location,{3541,44}}],
                        badrecord},
                       {var,{3541,30},rec169}]}]}]}]}]}},
            {debug_line,3542,1562},
            {match,
             {3542,21},
             {var,{3542,21},'Br'},
             {tuple,
              {3542,26},
              [{atom,{3542,26},b_br},
               {map,{3542,26},[]},
               {tuple,
                {3542,37},
                [{atom,{3542,37},b_literal},{atom,{3542,52},true}]},
               {var,{3542,63},'PhiL'},
               {var,{3542,73},'PhiL'}]}},
            {debug_line,3543,1563},
            {match,
             {3543,21},
             {var,{3543,21},'Blk'},
             {block,
              {3543,27},
              [{match,{3543,27},{var,{3543,27},rec170},{var,{3543,27},'Blk0'}},
               {'case',
                {3543,38},
                {var,{3543,27},rec170},
                [{clause,
                  {3543,38},
                  [{tuple,
                    {3543,38},
                    [{atom,{3543,38},b_blk},
                     {var,{3543,38},'_'},
                     {var,{3543,38},'_'},
                     {var,{3543,38},'_'}]}],
                  [],
                  [{call,
                    {3543,38},
                    {remote,
                     {3543,38},
                     {atom,{3543,38},erlang},
                     {atom,{3543,38},setelement}},
                    [{integer,{3543,38},4},
                     {var,{3543,27},rec170},
                     {var,{3543,43},'Br'}]}]},
                 {clause,
                  [{generated,true},{location,{3543,38}}],
                  [{var,[{generated,true},{location,{3543,38}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{3543,38}}],
                    {remote,
                     [{generated,true},{location,{3543,38}}],
                     {atom,[{generated,true},{location,{3543,38}}],erlang},
                     {atom,[{generated,true},{location,{3543,38}}],error}},
                    [{tuple,
                      [{generated,true},{location,{3543,38}}],
                      [{atom,
                        [{generated,true},{location,{3543,38}}],
                        badrecord},
                       {var,{3543,27},rec170}]}]}]}]}]}},
            {debug_line,3544,1564},
            {map,
             {3544,27},
             {var,{3544,21},'Blocks'},
             [{map_field_exact,
               {3544,31},
               {var,{3544,29},'L'},
               {var,{3544,34},'Blk'}},
              {map_field_exact,
               {3544,44},
               {var,{3544,39},'PhiL'},
               {var,{3544,47},'PhiBlk'}}]}]},
          {clause,
           {3545,17},
           [{atom,{3545,17},false}],
           [],
           [{debug_line,3546,1565},{var,{3546,21},'Blocks'}]}]}]}]}]}]}.
{function,
    {3550,1},
    redundant_br_safe_bool,2,
    [{clause,
         {3550,1},
         [{var,{3550,1},'_'},{var,{3550,1},'_'}],
         [[{call,
               {3550,1},
               {remote,
                   {3550,1},
                   {atom,{3550,1},fake},
                   {atom,{3550,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3550,1566},{atom,{3550,1},ignore}]},
     {clause,
         {3550,1},
         [{nil,{3550,24}},{var,{3550,28},'_Bool'}],
         [],
         [{debug_line,3551,1567},{atom,{3551,5},true}]},
     {clause,
         {3552,1},
         [{var,{3552,24},'Is'},{var,{3552,28},'Bool'}],
         [],
         [{debug_line,3553,1568},
          {'case',
              {3553,5},
              {call,
                  {3553,10},
                  {remote,
                      {3553,10},
                      {atom,{3553,10},lists},
                      {atom,{3553,10},last}},
                  [{var,{3553,15},'Is'}]},
              [{clause,
                   {3554,9},
                   [{tuple,
                        {3554,9},
                        [{atom,{3554,9},b_set},
                         {var,{3554,9},'_'},
                         {var,{3554,9},'_'},
                         {tuple,
                             {3554,19},
                             [{atom,{3554,20},bif},{var,{3554,24},'_'}]},
                         {var,{3554,9},'_'}]}],
                   [],
                   [{debug_line,3554,1569},{atom,{3554,31},true}]},
               {clause,
                   {3555,9},
                   [{tuple,
                        {3555,9},
                        [{atom,{3555,9},b_set},
                         {var,{3555,9},'_'},
                         {var,{3555,9},'_'},
                         {atom,{3555,19},has_map_field},
                         {var,{3555,9},'_'}]}],
                   [],
                   [{debug_line,3555,1570},{atom,{3555,37},true}]},
               {clause,
                   {3556,9},
                   [{tuple,
                        {3556,9},
                        [{atom,{3556,9},b_set},
                         {var,{3556,9},'_'},
                         {var,{3556,20},'Dst'},
                         {var,{3556,9},'_'},
                         {var,{3556,9},'_'}]}],
                   [],
                   [{debug_line,3556,1571},
                    {op,{3556,32},
                        '=/=',
                        {var,{3556,28},'Dst'},
                        {var,{3556,36},'Bool'}}]}]}]}]}.
{function,
 {3578,1},
 ssa_opt_bs_ensure,1,
 [{clause,
   {3578,1},
   [{var,{3578,1},'_'}],
   [[{call,
      {3578,1},
      {remote,{3578,1},{atom,{3578,1},fake},{atom,{3578,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3578,1572},{atom,{3578,1},ignore}]},
  {clause,
   {3578,1},
   [{tuple,
     {3578,19},
     [{match,
       {3578,20},
       {tuple,
        {3578,20},
        [{atom,{3578,20},opt_st},
         {var,{3578,32},'Blocks0'},
         {var,{3578,20},'_'},
         {var,{3578,44},'Count0'},
         {var,{3578,56},'Anno0'}]},
       {var,{3578,63},'St'}},
      {var,{3578,67},'FuncDb'}]}],
   [[{call,
      {3579,8},
      {remote,{3579,8},{atom,{3579,8},erlang},{atom,{3579,8},is_map}},
      [{var,{3579,15},'Blocks0'}]}]],
   [{debug_line,3580,1573},
    {match,
     {3580,5},
     {var,{3580,5},'RPO'},
     {call,
      {3580,11},
      {remote,{3580,19},{atom,{3580,11},beam_ssa},{atom,{3580,20},rpo}},
      [{var,{3580,24},'Blocks0'}]}},
    {debug_line,3581,1574},
    {match,
     {3581,5},
     {var,{3581,5},'Seen'},
     {call,
      {3581,12},
      {remote,{3581,16},{atom,{3581,12},sets},{atom,{3581,17},new}},
      [{block,0,
        [{cons,
          {3581,21},
          {tuple,{3581,22},[{atom,{3581,23},version},{integer,{3581,31},2}]},
          {nil,{3581,33}}}]}]}},
    {debug_line,3582,1575},
    {match,
     {3582,5},
     {tuple,{3582,5},[{var,{3582,6},'Blocks'},{var,{3582,13},'Count'}]},
     {call,
      {3582,22},
      {atom,{3582,22},ssa_opt_bs_ensure},
      [{var,{3582,40},'RPO'},
       {var,{3582,45},'Seen'},
       {var,{3582,51},'Count0'},
       {var,{3582,59},'Blocks0'}]}},
    {debug_line,3583,1576},
    {match,
     {3583,5},
     {var,{3583,5},'Anno'},
     {map,
      {3583,17},
      {var,{3583,12},'Anno0'},
      [{map_field_assoc,
        {3583,33},
        {atom,{3583,19},bs_ensure_opt},
        {atom,{3583,36},true}}]}},
    {debug_line,3584,1577},
    {tuple,
     {3584,5},
     [{block,
       {3584,6},
       [{match,{3584,6},{var,{3584,6},rec171},{var,{3584,6},'St'}},
        {'case',
         {3584,16},
         {var,{3584,6},rec171},
         [{clause,
           {3584,16},
           [{tuple,
             {3584,16},
             [{atom,{3584,16},opt_st},
              {var,{3584,16},'_'},
              {var,{3584,16},'_'},
              {var,{3584,16},'_'},
              {var,{3584,16},'_'}]}],
           [],
           [{call,
             {3584,16},
             {remote,
              {3584,16},
              {atom,{3584,16},erlang},
              {atom,{3584,16},setelement}},
             [{integer,{3584,16},2},
              {call,
               {3584,27},
               {remote,
                {3584,27},
                {atom,{3584,27},erlang},
                {atom,{3584,27},setelement}},
               [{integer,{3584,27},4},
                {call,
                 {3584,37},
                 {remote,
                  {3584,37},
                  {atom,{3584,37},erlang},
                  {atom,{3584,37},setelement}},
                 [{integer,{3584,37},5},
                  {var,{3584,6},rec171},
                  {var,{3584,42},'Anno'}]},
                {var,{3584,31},'Count'}]},
              {var,{3584,20},'Blocks'}]}]},
          {clause,
           [{generated,true},{location,{3584,16}}],
           [{var,[{generated,true},{location,{3584,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{3584,16}}],
             {remote,
              [{generated,true},{location,{3584,16}}],
              {atom,[{generated,true},{location,{3584,16}}],erlang},
              {atom,[{generated,true},{location,{3584,16}}],error}},
             [{tuple,
               [{generated,true},{location,{3584,16}}],
               [{atom,[{generated,true},{location,{3584,16}}],badrecord},
                {var,{3584,6},rec171}]}]}]}]}]},
      {var,{3584,49},'FuncDb'}]}]}]}.
{function,
 {3586,1},
 ssa_opt_bs_ensure,4,
 [{clause,
   {3586,1},
   [{var,{3586,1},'_'},
    {var,{3586,1},'_'},
    {var,{3586,1},'_'},
    {var,{3586,1},'_'}],
   [[{call,
      {3586,1},
      {remote,{3586,1},{atom,{3586,1},fake},{atom,{3586,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3586,1578},{atom,{3586,1},ignore}]},
  {clause,
   {3586,1},
   [{cons,{3586,19},{var,{3586,20},'L'},{var,{3586,22},'Ls'}},
    {var,{3586,27},'Seen0'},
    {var,{3586,34},'Count0'},
    {var,{3586,42},'Blocks0'}],
   [],
   [{debug_line,3587,1579},
    {'case',
     {3587,5},
     {call,
      {3587,10},
      {remote,{3587,14},{atom,{3587,10},sets},{atom,{3587,15},is_element}},
      [{var,{3587,26},'L'},{var,{3587,29},'Seen0'}]},
     [{clause,
       {3588,9},
       [{atom,{3588,9},true}],
       [],
       [{debug_line,3591,1580},
        {call,
         {3591,13},
         {atom,{3591,13},ssa_opt_bs_ensure},
         [{var,{3591,31},'Ls'},
          {var,{3591,35},'Seen0'},
          {var,{3591,42},'Count0'},
          {var,{3591,50},'Blocks0'}]}]},
      {clause,
       {3592,9},
       [{atom,{3592,9},false}],
       [],
       [{debug_line,3593,1581},
        {'case',
         {3593,13},
         {call,
          {3593,18},
          {atom,{3593,18},is_bs_match_blk},
          [{var,{3593,34},'L'},{var,{3593,37},'Blocks0'}]},
         [{clause,
           {3594,17},
           [{atom,{3594,17},no}],
           [],
           [{debug_line,3595,1582},
            {call,
             {3595,21},
             {atom,{3595,21},ssa_opt_bs_ensure},
             [{var,{3595,39},'Ls'},
              {var,{3595,43},'Seen0'},
              {var,{3595,50},'Count0'},
              {var,{3595,58},'Blocks0'}]}]},
          {clause,
           {3596,17},
           [{tuple,
             {3596,17},
             [{atom,{3596,18},yes},
              {var,{3596,22},'Size0'},
              {tuple,
               {3596,28},
               [{atom,{3596,28},b_br},
                {var,{3596,28},'_'},
                {var,{3596,28},'_'},
                {var,{3596,39},'Succ'},
                {var,{3596,49},'Fail'}]}]}],
           [],
           [{debug_line,3597,1583},
            {match,
             {3597,21},
             {tuple,
              {3597,21},
              [{var,{3597,22},'Size'},
               {var,{3597,27},'Blocks1'},
               {var,{3597,35},'Seen'}]},
             {call,
              {3598,25},
              {atom,{3598,25},ssa_opt_bs_ensure_collect},
              [{var,{3598,51},'Succ'},
               {var,{3598,57},'Fail'},
               {var,{3599,51},'Blocks0'},
               {var,{3599,60},'Seen0'},
               {var,{3599,67},'Size0'}]}},
            {debug_line,3600,1584},
            {match,
             {3600,21},
             {var,{3600,21},'Blocks2'},
             {call,
              {3600,31},
              {atom,{3600,31},annotate_match},
              [{var,{3600,46},'L'},{var,{3600,49},'Blocks1'}]}},
            {debug_line,3601,1585},
            {match,
             {3601,21},
             {tuple,
              {3601,21},
              [{var,{3601,22},'Blocks'},{var,{3601,29},'Count'}]},
             {call,
              {3601,38},
              {atom,{3601,38},build_bs_ensure_match},
              [{var,{3601,60},'L'},
               {var,{3601,63},'Size'},
               {var,{3601,69},'Count0'},
               {var,{3601,77},'Blocks2'}]}},
            {debug_line,3602,1586},
            {call,
             {3602,21},
             {atom,{3602,21},ssa_opt_bs_ensure},
             [{var,{3602,39},'Ls'},
              {var,{3602,43},'Seen'},
              {var,{3602,49},'Count'},
              {var,{3602,56},'Blocks'}]}]}]}]}]}]},
  {clause,
   {3605,1},
   [{nil,{3605,19}},
    {var,{3605,23},'_Seen'},
    {var,{3605,30},'Count'},
    {var,{3605,37},'Blocks'}],
   [],
   [{debug_line,3606,1587},
    {tuple,{3606,5},[{var,{3606,6},'Blocks'},{var,{3606,13},'Count'}]}]}]}.
{function,
 {3608,1},
 ssa_opt_bs_ensure_collect,5,
 [{clause,
   {3608,1},
   [{var,{3608,1},'_'},
    {var,{3608,1},'_'},
    {var,{3608,1},'_'},
    {var,{3608,1},'_'},
    {var,{3608,1},'_'}],
   [[{call,
      {3608,1},
      {remote,{3608,1},{atom,{3608,1},fake},{atom,{3608,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3608,1588},{atom,{3608,1},ignore}]},
  {clause,
   {3608,1},
   [{var,{3608,27},'L'},
    {var,{3608,30},'Fail'},
    {var,{3608,36},'Blocks0'},
    {var,{3608,45},'Seen0'},
    {var,{3608,52},'Acc0'}],
   [],
   [{debug_line,3609,1589},
    {'case',
     {3609,5},
     {call,
      {3609,10},
      {atom,{3609,10},is_bs_match_blk},
      [{var,{3609,26},'L'},{var,{3609,29},'Blocks0'}]},
     [{clause,
       {3610,9},
       [{atom,{3610,9},no}],
       [],
       [{debug_line,3611,1590},
        {tuple,
         {3611,13},
         [{var,{3611,14},'Acc0'},
          {var,{3611,19},'Blocks0'},
          {var,{3611,27},'Seen0'}]}]},
      {clause,
       {3612,9},
       [{tuple,
         {3612,9},
         [{atom,{3612,10},yes},
          {var,{3612,14},'Size'},
          {tuple,
           {3612,19},
           [{atom,{3612,19},b_br},
            {var,{3612,19},'_'},
            {var,{3612,19},'_'},
            {var,{3612,30},'Succ'},
            {var,{3612,40},'Fail'}]}]}],
       [],
       [{debug_line,3613,1591},
        {'case',
         {3613,13},
         {call,
          {3613,18},
          {atom,{3613,18},update_size},
          [{var,{3613,30},'Size'},{var,{3613,36},'Acc0'}]},
         [{clause,
           {3614,17},
           [{atom,{3614,17},no}],
           [],
           [{debug_line,3615,1592},
            {tuple,
             {3615,21},
             [{var,{3615,22},'Acc0'},
              {var,{3615,27},'Blocks0'},
              {var,{3615,35},'Seen0'}]}]},
          {clause,
           {3616,17},
           [{var,{3616,17},'Acc'}],
           [],
           [{debug_line,3617,1593},
            {match,
             {3617,21},
             {var,{3617,21},'Seen'},
             {call,
              {3617,28},
              {remote,
               {3617,32},
               {atom,{3617,28},sets},
               {atom,{3617,33},add_element}},
              [{var,{3617,45},'L'},{var,{3617,48},'Seen0'}]}},
            {debug_line,3618,1594},
            {match,
             {3618,21},
             {var,{3618,21},'Blocks'},
             {call,
              {3618,30},
              {atom,{3618,30},annotate_match},
              [{var,{3618,45},'L'},{var,{3618,48},'Blocks0'}]}},
            {debug_line,3619,1595},
            {call,
             {3619,21},
             {atom,{3619,21},ssa_opt_bs_ensure_collect},
             [{var,{3619,47},'Succ'},
              {var,{3619,53},'Fail'},
              {var,{3619,59},'Blocks'},
              {var,{3619,67},'Seen'},
              {var,{3619,73},'Acc'}]}]}]}]},
      {clause,
       {3621,9},
       [{tuple,
         {3621,9},
         [{atom,{3621,10},yes},{var,{3621,14},'_'},{var,{3621,16},'_'}]}],
       [],
       [{debug_line,3622,1596},
        {tuple,
         {3622,13},
         [{var,{3622,14},'Acc0'},
          {var,{3622,19},'Blocks0'},
          {var,{3622,27},'Seen0'}]}]}]}]}]}.
{function,
 {3625,1},
 annotate_match,2,
 [{clause,
   {3625,1},
   [{var,{3625,1},'_'},{var,{3625,1},'_'}],
   [[{call,
      {3625,1},
      {remote,{3625,1},{atom,{3625,1},fake},{atom,{3625,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3625,1597},{atom,{3625,1},ignore}]},
  {clause,
   {3625,1},
   [{var,{3625,16},'L'},{var,{3625,19},'Blocks'}],
   [],
   [{debug_line,3626,1598},
    {match,
     {3626,5},
     {tuple,
      {3626,5},
      [{atom,{3626,5},b_blk},
       {var,{3626,5},'_'},
       {var,{3626,15},'Is0'},
       {var,{3626,5},'_'}]},
     {match,
      {3626,22},
      {var,{3626,22},'Blk0'},
      {call,
       {3626,29},
       {remote,{3626,29},{atom,{3626,29},erlang},{atom,{3626,29},map_get}},
       [{var,{3626,37},'L'},{var,{3626,40},'Blocks'}]}}},
    {debug_line,3627,1599},
    {match,
     {3627,5},
     {var,{3627,5},'Is'},
     {lc,
      {3627,10},
      {block,0,
       [{'case',
         {3627,11},
         {var,{3627,16},'I'},
         [{clause,
           {3628,15},
           [{tuple,
             {3628,15},
             [{atom,{3628,15},b_set},
              {var,{3628,15},'_'},
              {var,{3628,15},'_'},
              {atom,{3628,25},bs_match},
              {var,{3628,15},'_'}]}],
           [],
           [{debug_line,3629,1600},
            {call,
             {3629,19},
             {remote,
              {3629,27},
              {atom,{3629,19},beam_ssa},
              {atom,{3629,28},add_anno}},
             [{atom,{3629,37},ensured},
              {atom,{3629,46},true},
              {var,{3629,52},'I'}]}]},
          {clause,
           {3630,15},
           [{tuple,
             {3630,15},
             [{atom,{3630,15},b_set},
              {var,{3630,15},'_'},
              {var,{3630,15},'_'},
              {var,{3630,15},'_'},
              {var,{3630,15},'_'}]}],
           [],
           [{debug_line,3631,1601},{var,{3631,19},'I'}]}]}]},
      [{block,0,[{debug_line,3632,1602},{atom,{3632,23},true}]},
       {generate,{3632,20},{var,{3632,18},'I'},{var,{3632,23},'Is0'}}]}},
    {debug_line,3633,1603},
    {match,
     {3633,5},
     {var,{3633,5},'Blk'},
     {block,
      {3633,11},
      [{match,{3633,11},{var,{3633,11},rec172},{var,{3633,11},'Blk0'}},
       {'case',
        {3633,22},
        {var,{3633,11},rec172},
        [{clause,
          {3633,22},
          [{tuple,
            {3633,22},
            [{atom,{3633,22},b_blk},
             {var,{3633,22},'_'},
             {var,{3633,22},'_'},
             {var,{3633,22},'_'}]}],
          [],
          [{call,
            {3633,22},
            {remote,
             {3633,22},
             {atom,{3633,22},erlang},
             {atom,{3633,22},setelement}},
            [{integer,{3633,22},3},
             {var,{3633,11},rec172},
             {var,{3633,25},'Is'}]}]},
         {clause,
          [{generated,true},{location,{3633,22}}],
          [{var,[{generated,true},{location,{3633,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3633,22}}],
            {remote,
             [{generated,true},{location,{3633,22}}],
             {atom,[{generated,true},{location,{3633,22}}],erlang},
             {atom,[{generated,true},{location,{3633,22}}],error}},
            [{tuple,
              [{generated,true},{location,{3633,22}}],
              [{atom,[{generated,true},{location,{3633,22}}],badrecord},
               {var,{3633,11},rec172}]}]}]}]}]}},
    {debug_line,3634,1604},
    {map,
     {3634,11},
     {var,{3634,5},'Blocks'},
     [{map_field_exact,
       {3634,15},
       {var,{3634,13},'L'},
       {var,{3634,18},'Blk'}}]}]}]}.
{function,
    {3636,1},
    update_size,2,
    [{clause,
         {3636,1},
         [{var,{3636,1},'_'},{var,{3636,1},'_'}],
         [[{call,
               {3636,1},
               {remote,
                   {3636,1},
                   {atom,{3636,1},fake},
                   {atom,{3636,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3636,1605},{atom,{3636,1},ignore}]},
     {clause,
         {3636,1},
         [{tuple,
              {3636,13},
              [{tuple,
                   {3636,14},
                   [{var,{3636,15},'PrevCtx'},{var,{3636,23},'NewCtx'}]},
               {var,{3636,31},'Size'},
               {var,{3636,36},'Unit'}]},
          {tuple,
              {3636,43},
              [{tuple,
                   {3636,44},
                   [{var,{3636,45},'_'},{var,{3636,47},'PrevCtx'}]},
               {var,{3636,56},'Sum'},
               {var,{3636,60},'Unit0'}]}],
         [],
         [{debug_line,3637,1606},
          {tuple,
              {3637,5},
              [{tuple,
                   {3637,6},
                   [{var,{3637,7},'PrevCtx'},{var,{3637,15},'NewCtx'}]},
               {op,{3637,27},'+',{var,{3637,23},'Sum'},{var,{3637,29},'Size'}},
               {call,
                   {3637,34},
                   {remote,
                       {3637,34},
                       {atom,{3637,34},erlang},
                       {atom,{3637,34},max}},
                   [{var,{3637,38},'Unit'},{var,{3637,44},'Unit0'}]}]}]},
     {clause,
         {3638,1},
         [{var,{3638,13},'_'},{var,{3638,16},'_'}],
         [],
         [{debug_line,3639,1607},{atom,{3639,5},no}]}]}.
{function,
    {3641,1},
    is_bs_match_blk,2,
    [{clause,
         {3641,1},
         [{var,{3641,1},'_'},{var,{3641,1},'_'}],
         [[{call,
               {3641,1},
               {remote,
                   {3641,1},
                   {atom,{3641,1},fake},
                   {atom,{3641,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3641,1608},{atom,{3641,1},ignore}]},
     {clause,
         {3641,1},
         [{var,{3641,17},'L'},{var,{3641,20},'Blocks'}],
         [],
         [{debug_line,3642,1609},
          {match,
              {3642,5},
              {var,{3642,5},'Blk'},
              {call,
                  {3642,11},
                  {remote,
                      {3642,11},
                      {atom,{3642,11},erlang},
                      {atom,{3642,11},map_get}},
                  [{var,{3642,19},'L'},{var,{3642,22},'Blocks'}]}},
          {debug_line,3643,1610},
          {'case',
              {3643,5},
              {var,{3643,10},'Blk'},
              [{clause,
                   {3644,9},
                   [{tuple,
                        {3644,9},
                        [{atom,{3644,9},b_blk},
                         {var,{3644,9},'_'},
                         {var,{3644,19},'Is'},
                         {match,
                             {3644,27},
                             {tuple,
                                 {3644,27},
                                 [{atom,{3644,27},b_br},
                                  {var,{3644,27},'_'},
                                  {tuple,
                                      {3644,38},
                                      [{atom,{3644,38},b_var},
                                       {var,{3644,38},'_'}]},
                                  {var,{3644,27},'_'},
                                  {var,{3644,27},'_'}]},
                             {var,{3644,48},'Last'}}]}],
                   [],
                   [{debug_line,3645,1611},
                    {'case',
                        {3645,13},
                        {call,
                            {3645,18},
                            {atom,{3645,18},is_bs_match_is},
                            [{var,{3645,33},'Is'},{atom,{3645,37},true}]},
                        [{clause,
                             {3646,17},
                             [{atom,{3646,17},no}],
                             [],
                             [{debug_line,3647,1612},{atom,{3647,21},no}]},
                         {clause,
                             {3648,17},
                             [{tuple,
                                  {3648,17},
                                  [{atom,{3648,18},yes},
                                   {var,{3648,22},'CtxSizeUnit'}]}],
                             [],
                             [{debug_line,3649,1613},
                              {tuple,
                                  {3649,21},
                                  [{atom,{3649,22},yes},
                                   {var,{3649,26},'CtxSizeUnit'},
                                   {var,{3649,38},'Last'}]}]}]}]},
               {clause,
                   {3651,9},
                   [{tuple,
                        {3651,9},
                        [{atom,{3651,9},b_blk},
                         {var,{3651,9},'_'},
                         {var,{3651,9},'_'},
                         {var,{3651,9},'_'}]}],
                   [],
                   [{debug_line,3652,1614},{atom,{3652,13},no}]}]}]}]}.
{function,
 {3655,1},
 is_bs_match_is,2,
 [{clause,
   {3655,1},
   [{var,{3655,1},'_'},{var,{3655,1},'_'}],
   [[{call,
      {3655,1},
      {remote,{3655,1},{atom,{3655,1},fake},{atom,{3655,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3655,1615},{atom,{3655,1},ignore}]},
  {clause,
   {3655,1},
   [{cons,
     {3655,16},
     {match,
      {3655,17},
      {tuple,
       {3655,17},
       [{atom,{3655,17},b_set},
        {var,{3655,17},'_'},
        {var,{3655,40},'Dst'},
        {atom,{3655,27},bs_match},
        {var,{3655,17},'_'}]},
      {var,{3655,45},'I'}},
     {cons,
      {3656,17},
      {tuple,
       {3656,17},
       [{atom,{3656,17},b_set},
        {var,{3656,17},'_'},
        {var,{3656,17},'_'},
        {tuple,{3656,27},[{atom,{3656,28},succeeded},{atom,{3656,38},guard}]},
        {cons,{3656,50},{var,{3656,51},'Dst'},{nil,{3656,54}}}]},
      {nil,{3656,56}}}},
    {var,{3656,59},'Safe'}],
   [],
   [{debug_line,3657,1616},
    {'case',
     {3657,5},
     {var,{3657,10},'Safe'},
     [{clause,
       {3658,9},
       [{atom,{3658,9},false}],
       [],
       [{debug_line,3663,1617},{atom,{3663,13},no}]},
      {clause,
       {3664,9},
       [{atom,{3664,9},true}],
       [],
       [{debug_line,3665,1618},
        {'case',
         {3665,13},
         {call,
          {3665,18},
          {atom,{3665,18},is_viable_match},
          [{var,{3665,34},'I'}]},
         [{clause,
           {3666,17},
           [{atom,{3666,17},no}],
           [],
           [{debug_line,3667,1619},{atom,{3667,21},no}]},
          {clause,
           {3668,17},
           [{tuple,
             {3668,17},
             [{atom,{3668,18},yes},
              {tuple,
               {3668,22},
               [{var,{3668,23},'Ctx'},
                {var,{3668,27},'Size'},
                {var,{3668,32},'Unit'}]}]}],
           [[{op,
              {3668,56},
              '=:=',
              {op,
               {3668,49},
               'bsr',
               {var,{3668,44},'Size'},
               {integer,{3668,53},24}},
              {integer,{3668,60},0}}]],
           [{debug_line,3670,1620},
            {tuple,
             {3670,21},
             [{atom,{3670,22},yes},
              {tuple,
               {3670,26},
               [{tuple,
                 {3670,27},
                 [{var,{3670,28},'Ctx'},{var,{3670,32},'Dst'}]},
                {var,{3670,37},'Size'},
                {var,{3670,42},'Unit'}]}]}]},
          {clause,
           {3671,17},
           [{tuple,{3671,17},[{atom,{3671,18},yes},{var,{3671,22},'_'}]}],
           [],
           [{debug_line,3673,1621},{atom,{3673,21},no}]}]}]}]}]},
  {clause,
   {3676,1},
   [{cons,
     {3676,16},
     {tuple,
      {3676,17},
      [{atom,{3676,17},b_set},
       {var,{3676,17},'_'},
       {var,{3676,17},'_'},
       {atom,{3676,27},bs_extract},
       {var,{3676,17},'_'}]},
     {var,{3676,39},'Is'}},
    {var,{3676,44},'Safe'}],
   [],
   [{debug_line,3677,1622},
    {call,
     {3677,5},
     {atom,{3677,5},is_bs_match_is},
     [{var,{3677,20},'Is'},{var,{3677,24},'Safe'}]}]},
  {clause,
   {3678,1},
   [{cons,
     {3678,16},
     {tuple,
      {3678,17},
      [{atom,{3678,17},b_set},
       {var,{3678,17},'_'},
       {var,{3678,17},'_'},
       {atom,{3678,27},bs_start_match},
       {var,{3678,17},'_'}]},
     {var,{3678,43},'Is'}},
    {var,{3678,48},'_Safe'}],
   [],
   [{debug_line,3679,1623},
    {call,
     {3679,5},
     {atom,{3679,5},is_bs_match_is},
     [{var,{3679,20},'Is'},{atom,{3679,24},true}]}]},
  {clause,
   {3680,1},
   [{cons,{3680,16},{var,{3680,17},'_'},{var,{3680,19},'Is'}},
    {var,{3680,24},'_Safe'}],
   [],
   [{debug_line,3681,1624},
    {call,
     {3681,5},
     {atom,{3681,5},is_bs_match_is},
     [{var,{3681,20},'Is'},{atom,{3681,24},false}]}]},
  {clause,
   {3682,1},
   [{nil,{3682,16}},{var,{3682,20},'_Safe'}],
   [],
   [{debug_line,3682,1625},{atom,{3682,30},no}]}]}.
{function,
 {3684,1},
 is_viable_match,1,
 [{clause,
   {3684,1},
   [{var,{3684,1},'_'}],
   [[{call,
      {3684,1},
      {remote,{3684,1},{atom,{3684,1},fake},{atom,{3684,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3684,1626},{atom,{3684,1},ignore}]},
  {clause,
   {3684,1},
   [{tuple,
     {3684,17},
     [{atom,{3684,17},b_set},
      {var,{3684,17},'_'},
      {var,{3684,17},'_'},
      {atom,{3684,27},bs_match},
      {var,{3684,41},'Args'}]}],
   [],
   [{debug_line,3685,1627},
    {'case',
     {3685,5},
     {var,{3685,10},'Args'},
     [{clause,
       {3686,9},
       [{cons,
         {3686,9},
         {tuple,
          {3686,10},
          [{atom,{3686,10},b_literal},{atom,{3686,25},binary}]},
         {cons,
          {3686,33},
          {var,{3686,33},'Ctx'},
          {cons,
           {3686,37},
           {var,{3686,37},'_'},
           {cons,
            {3686,39},
            {tuple,
             {3686,39},
             [{atom,{3686,39},b_literal},{atom,{3686,54},all}]},
            {cons,
             {3686,59},
             {tuple,
              {3686,59},
              [{atom,{3686,59},b_literal},{var,{3686,74},'U'}]},
             {nil,{3686,76}}}}}}}],
       [[{call,
          {3687,16},
          {remote,
           {3687,16},
           {atom,{3687,16},erlang},
           {atom,{3687,16},is_integer}},
          [{var,{3687,27},'U'}]},
         {op,{3687,33},'=<',{integer,{3687,31},1},{var,{3687,36},'U'}},
         {op,{3687,41},'=<',{var,{3687,39},'U'},{integer,{3687,44},256}}]],
       [{debug_line,3688,1628},
        {tuple,
         {3688,13},
         [{atom,{3688,14},yes},
          {tuple,
           {3688,18},
           [{var,{3688,19},'Ctx'},
            {integer,{3688,23},0},
            {var,{3688,25},'U'}]}]}]},
      {clause,
       {3689,9},
       [{cons,
         {3689,9},
         {tuple,
          {3689,10},
          [{atom,{3689,10},b_literal},{atom,{3689,25},binary}]},
         {cons,
          {3689,33},
          {var,{3689,33},'Ctx'},
          {cons,
           {3689,37},
           {var,{3689,37},'_'},
           {cons,
            {3689,39},
            {tuple,
             {3689,39},
             [{atom,{3689,39},b_literal},{var,{3689,54},'Size'}]},
            {cons,
             {3689,60},
             {tuple,
              {3689,60},
              [{atom,{3689,60},b_literal},{var,{3689,75},'U'}]},
             {nil,{3689,77}}}}}}}],
       [[{call,
          {3690,16},
          {remote,
           {3690,16},
           {atom,{3690,16},erlang},
           {atom,{3690,16},is_integer}},
          [{var,{3690,27},'Size'}]}]],
       [{debug_line,3691,1629},
        {tuple,
         {3691,13},
         [{atom,{3691,14},yes},
          {tuple,
           {3691,18},
           [{var,{3691,19},'Ctx'},
            {op,{3691,27},'*',{var,{3691,23},'Size'},{var,{3691,28},'U'}},
            {integer,{3691,30},1}]}]}]},
      {clause,
       {3692,9},
       [{cons,
         {3692,9},
         {tuple,
          {3692,10},
          [{atom,{3692,10},b_literal},{atom,{3692,25},integer}]},
         {cons,
          {3692,34},
          {var,{3692,34},'Ctx'},
          {cons,
           {3692,38},
           {var,{3692,38},'_'},
           {cons,
            {3692,40},
            {tuple,
             {3692,40},
             [{atom,{3692,40},b_literal},{var,{3692,55},'Size'}]},
            {cons,
             {3692,61},
             {tuple,
              {3692,61},
              [{atom,{3692,61},b_literal},{var,{3692,76},'U'}]},
             {nil,{3692,78}}}}}}}],
       [[{call,
          {3693,16},
          {remote,
           {3693,16},
           {atom,{3693,16},erlang},
           {atom,{3693,16},is_integer}},
          [{var,{3693,27},'Size'}]}]],
       [{debug_line,3694,1630},
        {tuple,
         {3694,13},
         [{atom,{3694,14},yes},
          {tuple,
           {3694,18},
           [{var,{3694,19},'Ctx'},
            {op,{3694,27},'*',{var,{3694,23},'Size'},{var,{3694,28},'U'}},
            {integer,{3694,30},1}]}]}]},
      {clause,
       {3695,9},
       [{cons,
         {3695,9},
         {tuple,{3695,10},[{atom,{3695,10},b_literal},{atom,{3695,25},skip}]},
         {cons,
          {3695,31},
          {var,{3695,31},'Ctx'},
          {cons,
           {3695,35},
           {var,{3695,35},'_'},
           {cons,
            {3695,37},
            {var,{3695,37},'_'},
            {cons,
             {3695,39},
             {tuple,
              {3695,39},
              [{atom,{3695,39},b_literal},{atom,{3695,54},all}]},
             {cons,
              {3695,59},
              {tuple,
               {3695,59},
               [{atom,{3695,59},b_literal},{var,{3695,74},'U'}]},
              {nil,{3695,76}}}}}}}}],
       [],
       [{debug_line,3696,1631},
        {tuple,
         {3696,13},
         [{atom,{3696,14},yes},
          {tuple,
           {3696,18},
           [{var,{3696,19},'Ctx'},
            {integer,{3696,23},0},
            {var,{3696,25},'U'}]}]}]},
      {clause,
       {3697,9},
       [{cons,
         {3697,9},
         {tuple,{3697,10},[{atom,{3697,10},b_literal},{atom,{3697,25},skip}]},
         {cons,
          {3697,31},
          {var,{3697,31},'Ctx'},
          {cons,
           {3697,35},
           {var,{3697,35},'_'},
           {cons,
            {3697,37},
            {var,{3697,37},'_'},
            {cons,
             {3697,39},
             {tuple,
              {3697,39},
              [{atom,{3697,39},b_literal},{var,{3697,54},'Size'}]},
             {cons,
              {3697,60},
              {tuple,
               {3697,60},
               [{atom,{3697,60},b_literal},{var,{3697,75},'U'}]},
              {nil,{3697,77}}}}}}}}],
       [[{call,
          {3698,16},
          {remote,
           {3698,16},
           {atom,{3698,16},erlang},
           {atom,{3698,16},is_integer}},
          [{var,{3698,27},'Size'}]}]],
       [{debug_line,3699,1632},
        {tuple,
         {3699,13},
         [{atom,{3699,14},yes},
          {tuple,
           {3699,18},
           [{var,{3699,19},'Ctx'},
            {op,{3699,27},'*',{var,{3699,23},'Size'},{var,{3699,28},'U'}},
            {integer,{3699,30},1}]}]}]},
      {clause,
       {3700,9},
       [{cons,
         {3700,9},
         {tuple,
          {3700,10},
          [{atom,{3700,10},b_literal},{atom,{3700,25},string}]},
         {cons,
          {3700,33},
          {var,{3700,33},'Ctx'},
          {cons,
           {3700,37},
           {tuple,
            {3700,37},
            [{atom,{3700,37},b_literal},{var,{3700,52},'Str'}]},
           {nil,{3700,56}}}}}],
       [[{op,
          {3700,77},
          '=<',
          {call,
           {3700,63},
           {remote,
            {3700,63},
            {atom,{3700,63},erlang},
            {atom,{3700,63},bit_size}},
           [{var,{3700,72},'Str'}]},
          {integer,{3700,80},64}}]],
       [{debug_line,3701,1633},
        {tuple,
         {3701,13},
         [{atom,{3701,14},yes},
          {tuple,
           {3701,18},
           [{var,{3701,19},'Ctx'},
            {call,
             {3701,23},
             {remote,
              {3701,23},
              {atom,{3701,23},erlang},
              {atom,{3701,23},bit_size}},
             [{var,{3701,32},'Str'}]},
            {integer,{3701,37},1}]}]}]},
      {clause,
       {3702,9},
       [{var,{3702,9},'_'}],
       [],
       [{debug_line,3703,1634},{atom,{3703,13},no}]}]}]}]}.
{function,
 {3706,1},
 build_bs_ensure_match,4,
 [{clause,
   {3706,1},
   [{var,{3706,1},'_'},
    {var,{3706,1},'_'},
    {var,{3706,1},'_'},
    {var,{3706,1},'_'}],
   [[{call,
      {3706,1},
      {remote,{3706,1},{atom,{3706,1},fake},{atom,{3706,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3706,1635},{atom,{3706,1},ignore}]},
  {clause,
   {3706,1},
   [{var,{3706,23},'L'},
    {tuple,
     {3706,26},
     [{var,{3706,27},'_'},{var,{3706,29},'Size'},{var,{3706,34},'Unit'}]},
    {var,{3706,41},'Count0'},
    {var,{3706,49},'Blocks0'}],
   [],
   [{debug_line,3707,1636},
    {match,{3707,5},{var,{3707,5},'BsMatchL'},{var,{3707,16},'Count0'}},
    {debug_line,3708,1637},
    {match,
     {3708,5},
     {var,{3708,5},'Count1'},
     {op,{3708,21},'+',{var,{3708,14},'Count0'},{integer,{3708,23},1}}},
    {debug_line,3709,1638},
    {match,
     {3709,5},
     {tuple,{3709,5},[{var,{3709,6},'NewCtx'},{var,{3709,13},'Count2'}]},
     {call,{3709,23},{atom,{3709,23},new_var},[{var,{3709,31},'Count1'}]}},
    {debug_line,3710,1639},
    {match,
     {3710,5},
     {tuple,{3710,5},[{var,{3710,6},'SuccBool'},{var,{3710,15},'Count'}]},
     {call,{3710,24},{atom,{3710,24},new_var},[{var,{3710,32},'Count2'}]}},
    {debug_line,3712,1640},
    {match,
     {3712,5},
     {var,{3712,5},'BsMatchBlk0'},
     {call,
      {3712,19},
      {remote,{3712,19},{atom,{3712,19},erlang},{atom,{3712,19},map_get}},
      [{var,{3712,27},'L'},{var,{3712,30},'Blocks0'}]}},
    {debug_line,3714,1641},
    {match,
     {3714,5},
     {tuple,
      {3714,5},
      [{atom,{3714,5},b_blk},
       {var,{3714,5},'_'},
       {var,{3714,15},'MatchIs'},
       {tuple,
        {3714,28},
        [{atom,{3714,28},b_br},
         {var,{3714,28},'_'},
         {var,{3714,28},'_'},
         {var,{3714,28},'_'},
         {var,{3714,39},'Fail'}]}]},
     {var,{3714,48},'BsMatchBlk0'}},
    {debug_line,3715,1642},
    {match,
     {3715,5},
     {tuple,{3715,5},[{var,{3715,6},'Prefix'},{var,{3715,13},'Suffix0'}]},
     {call,
      {3715,24},
      {remote,{3715,24},{atom,{3715,24},lists},{atom,{3715,24},splitwith}},
      [{block,0,
        [{'fun',
          {3715,34},
          {clauses,
           [{clause,
             {3715,37},
             [{tuple,
               {3715,38},
               [{atom,{3715,38},b_set},
                {var,{3715,38},'_'},
                {var,{3715,38},'_'},
                {var,{3715,48},'Op'},
                {var,{3715,38},'_'}]}],
             [],
             [{op,
               {3715,59},
               '=/=',
               {var,{3715,56},'Op'},
               {atom,{3715,63},bs_match}}]}]}}]},
       {var,{3715,77},'MatchIs'}]}},
    {debug_line,3716,1643},
    {match,
     {3716,5},
     {cons,{3716,5},{var,{3716,6},'BsMatch0'},{var,{3716,15},'Suffix1'}},
     {var,{3716,26},'Suffix0'}},
    {debug_line,3717,1644},
    {match,
     {3717,5},
     {tuple,
      {3717,5},
      [{atom,{3717,5},b_set},
       {var,{3717,5},'_'},
       {var,{3717,5},'_'},
       {var,{3717,5},'_'},
       {cons,
        {3717,17},
        {var,{3717,18},'Type'},
        {cons,{3717,23},{var,{3717,23},'_Ctx'},{var,{3717,28},'Args'}}}]},
     {var,{3717,37},'BsMatch0'}},
    {debug_line,3718,1645},
    {match,
     {3718,5},
     {var,{3718,5},'BsMatch'},
     {block,
      {3718,15},
      [{match,
        {3718,30},
        {var,{3718,30},rec173},
        {cons,
         {3718,35},
         {var,{3718,36},'Type'},
         {cons,{3718,41},{var,{3718,41},'NewCtx'},{var,{3718,48},'Args'}}}},
       {match,{3718,15},{var,{3718,15},rec174},{var,{3718,15},'BsMatch0'}},
       {'case',
        {3718,30},
        {var,{3718,15},rec174},
        [{clause,
          {3718,30},
          [{tuple,
            {3718,30},
            [{atom,{3718,30},b_set},
             {var,{3718,30},'_'},
             {var,{3718,30},'_'},
             {var,{3718,30},'_'},
             {var,{3718,30},'_'}]}],
          [],
          [{call,
            {3718,30},
            {remote,
             {3718,30},
             {atom,{3718,30},erlang},
             {atom,{3718,30},setelement}},
            [{integer,{3718,30},5},
             {var,{3718,15},rec174},
             {var,{3718,30},rec173}]}]},
         {clause,
          [{generated,true},{location,{3718,30}}],
          [{var,[{generated,true},{location,{3718,30}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3718,30}}],
            {remote,
             [{generated,true},{location,{3718,30}}],
             {atom,[{generated,true},{location,{3718,30}}],erlang},
             {atom,[{generated,true},{location,{3718,30}}],error}},
            [{tuple,
              [{generated,true},{location,{3718,30}}],
              [{atom,[{generated,true},{location,{3718,30}}],badrecord},
               {var,{3718,15},rec174}]}]}]}]}]}},
    {debug_line,3719,1646},
    {match,
     {3719,5},
     {var,{3719,5},'Suffix'},
     {cons,{3719,14},{var,{3719,15},'BsMatch'},{var,{3719,23},'Suffix1'}}},
    {debug_line,3720,1647},
    {match,
     {3720,5},
     {var,{3720,5},'BsMatchBlk'},
     {block,
      {3720,18},
      [{match,{3720,18},{var,{3720,18},rec175},{var,{3720,18},'BsMatchBlk0'}},
       {'case',
        {3720,36},
        {var,{3720,18},rec175},
        [{clause,
          {3720,36},
          [{tuple,
            {3720,36},
            [{atom,{3720,36},b_blk},
             {var,{3720,36},'_'},
             {var,{3720,36},'_'},
             {var,{3720,36},'_'}]}],
          [],
          [{call,
            {3720,36},
            {remote,
             {3720,36},
             {atom,{3720,36},erlang},
             {atom,{3720,36},setelement}},
            [{integer,{3720,36},3},
             {var,{3720,18},rec175},
             {var,{3720,39},'Suffix'}]}]},
         {clause,
          [{generated,true},{location,{3720,36}}],
          [{var,[{generated,true},{location,{3720,36}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3720,36}}],
            {remote,
             [{generated,true},{location,{3720,36}}],
             {atom,[{generated,true},{location,{3720,36}}],erlang},
             {atom,[{generated,true},{location,{3720,36}}],error}},
            [{tuple,
              [{generated,true},{location,{3720,36}}],
              [{atom,[{generated,true},{location,{3720,36}}],badrecord},
               {var,{3720,18},rec175}]}]}]}]}]}},
    {debug_line,3722,1648},
    {match,
     {3722,5},
     {tuple,
      {3722,5},
      [{atom,{3722,5},b_set},
       {var,{3722,5},'_'},
       {var,{3722,5},'_'},
       {var,{3722,5},'_'},
       {cons,
        {3722,17},
        {var,{3722,18},'_'},
        {cons,{3722,20},{var,{3722,20},'Ctx'},{var,{3722,24},'_'}}}]},
     {call,
      {3722,30},
      {remote,{3722,30},{atom,{3722,30},lists},{atom,{3722,30},keyfind}},
      [{atom,{3722,38},bs_match},
       {block,0,[{integer,{3722,48},4}]},
       {var,{3722,59},'MatchIs'}]}},
    {debug_line,3723,1649},
    {match,
     {3723,5},
     {var,{3723,5},'Is'},
     {op,
      {3723,17},
      '++',
      {var,{3723,10},'Prefix'},
      {cons,
       {3723,20},
       {tuple,
        {3723,21},
        [{atom,{3723,21},b_set},
         {map,{3723,21},[]},
         {var,{3724,32},'NewCtx'},
         {atom,{3723,31},bs_ensure},
         {cons,
          {3725,33},
          {var,{3725,34},'Ctx'},
          {cons,
           {3725,38},
           {tuple,
            {3725,38},
            [{atom,{3725,38},b_literal},{var,{3725,53},'Size'}]},
           {cons,
            {3725,59},
            {tuple,
             {3725,59},
             [{atom,{3725,59},b_literal},{var,{3725,74},'Unit'}]},
            {nil,{3725,79}}}}}]},
       {cons,
        {3726,21},
        {tuple,
         {3726,21},
         [{atom,{3726,21},b_set},
          {map,{3726,21},[]},
          {var,{3726,53},'SuccBool'},
          {tuple,
           {3726,31},
           [{atom,{3726,32},succeeded},{atom,{3726,42},guard}]},
          {cons,{3726,67},{var,{3726,68},'NewCtx'},{nil,{3726,74}}}]},
        {nil,{3726,76}}}}}},
    {debug_line,3727,1650},
    {match,
     {3727,5},
     {var,{3727,5},'Blk'},
     {tuple,
      {3727,11},
      [{atom,{3727,11},b_blk},
       {map,{3727,11},[]},
       {var,{3727,21},'Is'},
       {tuple,
        {3727,29},
        [{atom,{3727,29},b_br},
         {map,{3727,29},[]},
         {var,{3727,40},'SuccBool'},
         {var,{3727,54},'BsMatchL'},
         {var,{3727,68},'Fail'}]}]}},
    {debug_line,3729,1651},
    {match,
     {3729,5},
     {var,{3729,5},'Blocks'},
     {map,
      {3729,21},
      {var,{3729,14},'Blocks0'},
      [{map_field_exact,{3729,25},{var,{3729,23},'L'},{var,{3729,28},'Blk'}},
       {map_field_assoc,
        {3729,42},
        {var,{3729,33},'BsMatchL'},
        {var,{3729,45},'BsMatchBlk'}}]}},
    {debug_line,3731,1652},
    {tuple,{3731,5},[{var,{3731,6},'Blocks'},{var,{3731,13},'Count'}]}]}]}.
{function,
 {3738,1},
 ssa_opt_no_reuse,1,
 [{clause,
   {3738,1},
   [{var,{3738,1},'_'}],
   [[{call,
      {3738,1},
      {remote,{3738,1},{atom,{3738,1},fake},{atom,{3738,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3738,1653},{atom,{3738,1},ignore}]},
  {clause,
   {3738,1},
   [{tuple,
     {3738,18},
     [{match,
       {3738,19},
       {tuple,
        {3738,19},
        [{atom,{3738,19},opt_st},
         {var,{3738,31},'Linear0'},
         {var,{3738,19},'_'},
         {var,{3738,19},'_'},
         {var,{3738,19},'_'}]},
       {var,{3738,40},'St'}},
      {var,{3738,44},'FuncDb'}]}],
   [[{call,
      {3738,58},
      {remote,{3738,58},{atom,{3738,58},erlang},{atom,{3738,58},is_list}},
      [{var,{3738,66},'Linear0'}]}]],
   [{debug_line,3739,1654},
    {match,
     {3739,5},
     {var,{3739,5},'New'},
     {call,
      {3739,11},
      {remote,{3739,15},{atom,{3739,11},sets},{atom,{3739,16},new}},
      [{block,0,
        [{cons,
          {3739,20},
          {tuple,{3739,21},[{atom,{3739,22},version},{integer,{3739,30},2}]},
          {nil,{3739,32}}}]}]}},
    {debug_line,3740,1655},
    {match,
     {3740,5},
     {var,{3740,5},'Linear'},
     {call,
      {3740,14},
      {atom,{3740,14},ssa_opt_no_reuse_blks},
      [{var,{3740,36},'Linear0'},{var,{3740,45},'New'}]}},
    {debug_line,3741,1656},
    {tuple,
     {3741,5},
     [{block,
       {3741,6},
       [{match,{3741,6},{var,{3741,6},rec176},{var,{3741,6},'St'}},
        {'case',
         {3741,16},
         {var,{3741,6},rec176},
         [{clause,
           {3741,16},
           [{tuple,
             {3741,16},
             [{atom,{3741,16},opt_st},
              {var,{3741,16},'_'},
              {var,{3741,16},'_'},
              {var,{3741,16},'_'},
              {var,{3741,16},'_'}]}],
           [],
           [{call,
             {3741,16},
             {remote,
              {3741,16},
              {atom,{3741,16},erlang},
              {atom,{3741,16},setelement}},
             [{integer,{3741,16},2},
              {var,{3741,6},rec176},
              {var,{3741,20},'Linear'}]}]},
          {clause,
           [{generated,true},{location,{3741,16}}],
           [{var,[{generated,true},{location,{3741,16}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{3741,16}}],
             {remote,
              [{generated,true},{location,{3741,16}}],
              {atom,[{generated,true},{location,{3741,16}}],erlang},
              {atom,[{generated,true},{location,{3741,16}}],error}},
             [{tuple,
               [{generated,true},{location,{3741,16}}],
               [{atom,[{generated,true},{location,{3741,16}}],badrecord},
                {var,{3741,6},rec176}]}]}]}]}]},
      {var,{3741,29},'FuncDb'}]}]}]}.
{function,
 {3743,1},
 ssa_opt_no_reuse_blks,2,
 [{clause,
   {3743,1},
   [{var,{3743,1},'_'},{var,{3743,1},'_'}],
   [[{call,
      {3743,1},
      {remote,{3743,1},{atom,{3743,1},fake},{atom,{3743,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3743,1657},{atom,{3743,1},ignore}]},
  {clause,
   {3743,1},
   [{cons,
     {3743,23},
     {tuple,
      {3743,24},
      [{var,{3743,25},'L'},
       {match,
        {3743,27},
        {tuple,
         {3743,27},
         [{atom,{3743,27},b_blk},
          {var,{3743,27},'_'},
          {var,{3743,37},'Is0'},
          {var,{3743,27},'_'}]},
        {var,{3743,42},'Blk0'}}]},
     {var,{3743,48},'Bs'}},
    {var,{3743,53},'New0'}],
   [],
   [{debug_line,3744,1658},
    {match,
     {3744,5},
     {tuple,{3744,5},[{var,{3744,6},'Is'},{var,{3744,9},'New'}]},
     {call,
      {3744,16},
      {atom,{3744,16},ssa_opt_no_reuse_is},
      [{var,{3744,36},'Is0'},{var,{3744,41},'New0'},{nil,{3744,47}}]}},
    {debug_line,3745,1659},
    {match,
     {3745,5},
     {var,{3745,5},'Blk'},
     {block,
      {3745,11},
      [{match,{3745,11},{var,{3745,11},rec177},{var,{3745,11},'Blk0'}},
       {'case',
        {3745,22},
        {var,{3745,11},rec177},
        [{clause,
          {3745,22},
          [{tuple,
            {3745,22},
            [{atom,{3745,22},b_blk},
             {var,{3745,22},'_'},
             {var,{3745,22},'_'},
             {var,{3745,22},'_'}]}],
          [],
          [{call,
            {3745,22},
            {remote,
             {3745,22},
             {atom,{3745,22},erlang},
             {atom,{3745,22},setelement}},
            [{integer,{3745,22},3},
             {var,{3745,11},rec177},
             {var,{3745,25},'Is'}]}]},
         {clause,
          [{generated,true},{location,{3745,22}}],
          [{var,[{generated,true},{location,{3745,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{3745,22}}],
            {remote,
             [{generated,true},{location,{3745,22}}],
             {atom,[{generated,true},{location,{3745,22}}],erlang},
             {atom,[{generated,true},{location,{3745,22}}],error}},
            [{tuple,
              [{generated,true},{location,{3745,22}}],
              [{atom,[{generated,true},{location,{3745,22}}],badrecord},
               {var,{3745,11},rec177}]}]}]}]}]}},
    {debug_line,3746,1660},
    {cons,
     {3746,5},
     {tuple,{3746,6},[{var,{3746,7},'L'},{var,{3746,9},'Blk'}]},
     {call,
      {3746,14},
      {atom,{3746,14},ssa_opt_no_reuse_blks},
      [{var,{3746,36},'Bs'},{var,{3746,40},'New'}]}}]},
  {clause,
   {3747,1},
   [{nil,{3747,23}},{var,{3747,27},'_'}],
   [],
   [{debug_line,3748,1661},{nil,{3748,5}}]}]}.
{function,
 {3750,1},
 ssa_opt_no_reuse_is,3,
 [{clause,
   {3750,1},
   [{var,{3750,1},'_'},{var,{3750,1},'_'},{var,{3750,1},'_'}],
   [[{call,
      {3750,1},
      {remote,{3750,1},{atom,{3750,1},fake},{atom,{3750,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3750,1662},{atom,{3750,1},ignore}]},
  {clause,
   {3750,1},
   [{cons,
     {3750,21},
     {match,
      {3750,22},
      {tuple,
       {3750,22},
       [{atom,{3750,22},b_set},
        {var,{3750,22},'_'},
        {var,{3750,22},'_'},
        {atom,{3750,32},update_record},
        {var,{3750,51},'Args'}]},
      {var,{3750,57},'I0'}},
     {var,{3750,60},'Is'}},
    {var,{3750,65},'New'},
    {var,{3750,70},'Acc'}],
   [],
   [{debug_line,3751,1663},
    {match,
     {3751,5},
     {cons,
      {3751,5},
      {var,{3751,6},'_'},
      {cons,
       {3751,8},
       {var,{3751,8},'_'},
       {cons,{3751,10},{var,{3751,10},'_'},{var,{3751,12},'Updates'}}}},
     {var,{3751,23},'Args'}},
    {debug_line,3752,1664},
    {'case',
     {3752,5},
     {call,
      {3752,10},
      {atom,{3752,10},cannot_reuse},
      [{var,{3752,23},'Updates'},{var,{3752,32},'New'}]},
     [{clause,
       {3753,9},
       [{atom,{3753,9},true}],
       [],
       [{debug_line,3754,1665},
        {match,
         {3754,13},
         {var,{3754,13},'I'},
         {block,
          {3754,17},
          [{match,
            {3754,26},
            {var,{3754,26},rec178},
            {cons,
             {3754,31},
             {tuple,
              {3754,32},
              [{atom,{3754,32},b_literal},{atom,{3754,47},copy}]},
             {call,
              {3754,53},
              {remote,{3754,53},{atom,{3754,53},erlang},{atom,{3754,53},tl}},
              [{var,{3754,56},'Args'}]}}},
           {match,{3754,17},{var,{3754,17},rec179},{var,{3754,17},'I0'}},
           {'case',
            {3754,26},
            {var,{3754,17},rec179},
            [{clause,
              {3754,26},
              [{tuple,
                {3754,26},
                [{atom,{3754,26},b_set},
                 {var,{3754,26},'_'},
                 {var,{3754,26},'_'},
                 {var,{3754,26},'_'},
                 {var,{3754,26},'_'}]}],
              [],
              [{call,
                {3754,26},
                {remote,
                 {3754,26},
                 {atom,{3754,26},erlang},
                 {atom,{3754,26},setelement}},
                [{integer,{3754,26},5},
                 {var,{3754,17},rec179},
                 {var,{3754,26},rec178}]}]},
             {clause,
              [{generated,true},{location,{3754,26}}],
              [{var,[{generated,true},{location,{3754,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{3754,26}}],
                {remote,
                 [{generated,true},{location,{3754,26}}],
                 {atom,[{generated,true},{location,{3754,26}}],erlang},
                 {atom,[{generated,true},{location,{3754,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{3754,26}}],
                  [{atom,[{generated,true},{location,{3754,26}}],badrecord},
                   {var,{3754,17},rec179}]}]}]}]}]}},
        {debug_line,3755,1666},
        {call,
         {3755,13},
         {atom,{3755,13},ssa_opt_no_reuse_is},
         [{var,{3755,33},'Is'},
          {var,{3755,37},'New'},
          {block,0,
           [{cons,{3755,42},{var,{3755,43},'I'},{var,{3755,45},'Acc'}}]}]}]},
      {clause,
       {3756,9},
       [{atom,{3756,9},false}],
       [],
       [{debug_line,3757,1667},
        {call,
         {3757,13},
         {atom,{3757,13},ssa_opt_no_reuse_is},
         [{var,{3757,33},'Is'},
          {var,{3757,37},'New'},
          {block,0,
           [{cons,
             {3757,42},
             {var,{3757,43},'I0'},
             {var,{3757,46},'Acc'}}]}]}]}]}]},
  {clause,
   {3759,1},
   [{cons,
     {3759,21},
     {match,
      {3759,22},
      {tuple,
       {3759,22},
       [{atom,{3759,22},b_set},
        {var,{3759,22},'_'},
        {var,{3759,33},'Dst'},
        {var,{3759,22},'_'},
        {var,{3759,22},'_'}]},
      {var,{3759,38},'I'}},
     {var,{3759,40},'Is'}},
    {var,{3759,45},'New0'},
    {var,{3759,51},'Acc'}],
   [],
   [{debug_line,3760,1668},
    {'case',
     {3760,5},
     {call,
      {3760,10},
      {atom,{3760,10},inhibits_reuse},
      [{var,{3760,25},'I'},{var,{3760,28},'New0'}]},
     [{clause,
       {3761,9},
       [{atom,{3761,9},true}],
       [],
       [{debug_line,3762,1669},
        {match,
         {3762,13},
         {var,{3762,13},'New'},
         {call,
          {3762,19},
          {remote,
           {3762,23},
           {atom,{3762,19},sets},
           {atom,{3762,24},add_element}},
          [{var,{3762,36},'Dst'},{var,{3762,41},'New0'}]}},
        {debug_line,3763,1670},
        {call,
         {3763,13},
         {atom,{3763,13},ssa_opt_no_reuse_is},
         [{var,{3763,33},'Is'},
          {var,{3763,37},'New'},
          {block,0,
           [{cons,{3763,42},{var,{3763,43},'I'},{var,{3763,45},'Acc'}}]}]}]},
      {clause,
       {3764,9},
       [{atom,{3764,9},false}],
       [],
       [{debug_line,3765,1671},
        {call,
         {3765,13},
         {atom,{3765,13},ssa_opt_no_reuse_is},
         [{var,{3765,33},'Is'},
          {var,{3765,37},'New0'},
          {block,0,
           [{cons,
             {3765,43},
             {var,{3765,44},'I'},
             {var,{3765,46},'Acc'}}]}]}]}]}]},
  {clause,
   {3767,1},
   [{nil,{3767,21}},{var,{3767,25},'New'},{var,{3767,30},'Acc'}],
   [],
   [{debug_line,3768,1672},
    {tuple,
     {3768,5},
     [{call,
       {3768,6},
       {remote,{3768,6},{atom,{3768,6},lists},{atom,{3768,6},reverse}},
       [{var,{3768,14},'Acc'}]},
      {var,{3768,19},'New'}]}]}]}.
{function,
 {3770,1},
 inhibits_reuse,2,
 [{clause,
   {3770,1},
   [{var,{3770,1},'_'},{var,{3770,1},'_'}],
   [[{call,
      {3770,1},
      {remote,{3770,1},{atom,{3770,1},fake},{atom,{3770,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3770,1673},{atom,{3770,1},ignore}]},
  {clause,
   {3770,1},
   [{tuple,
     {3770,16},
     [{atom,{3770,16},b_set},
      {var,{3770,16},'_'},
      {var,{3770,16},'_'},
      {atom,{3770,26},phi},
      {var,{3770,35},'Args'}]},
    {var,{3770,42},'New'}],
   [],
   [{debug_line,3771,1674},
    {call,
     {3771,5},
     {remote,{3771,5},{atom,{3771,5},lists},{atom,{3771,5},all}},
     [{block,0,
       [{'fun',
         {3771,9},
         {clauses,
          [{clause,
            {3771,12},
            [{tuple,{3771,13},[{var,{3771,14},'Value'},{var,{3771,20},'_'}]}],
            [],
            [{debug_line,3772,1675},
             {call,
              {3772,20},
              {remote,
               {3772,24},
               {atom,{3772,20},sets},
               {atom,{3772,25},is_element}},
              [{var,{3772,36},'Value'},{var,{3772,43},'New'}]}]}]}}]},
      {var,{3773,17},'Args'}]}]},
  {clause,
   {3774,1},
   [{tuple,
     {3774,16},
     [{atom,{3774,16},b_set},
      {var,{3774,16},'_'},
      {var,{3774,16},'_'},
      {atom,{3774,26},put_map},
      {cons,{3774,39},{var,{3774,40},'_'},{var,{3774,42},'Args'}}]},
    {var,{3774,50},'New'}],
   [],
   [{debug_line,3775,1676},
    {call,
     {3775,5},
     {atom,{3775,5},cannot_reuse},
     [{var,{3775,18},'Args'},{var,{3775,24},'New'}]}]},
  {clause,
   {3776,1},
   [{tuple,
     {3776,16},
     [{atom,{3776,16},b_set},
      {var,{3776,16},'_'},
      {var,{3776,16},'_'},
      {atom,{3776,26},call},
      {cons,
       {3777,28},
       {tuple,
        {3777,29},
        [{atom,{3777,29},b_remote},
         {tuple,
          {3777,43},
          [{atom,{3777,43},b_literal},{atom,{3777,58},erlang}]},
         {tuple,{3778,44},[{atom,{3778,44},b_literal},{var,{3778,59},'Name'}]},
         {var,{3777,29},'_'}]},
       {var,{3778,66},'_'}}]},
    {var,{3779,16},'_New'}],
   [],
   [{debug_line,3780,1677},
    {'case',
     {3780,5},
     {var,{3780,10},'Name'},
     [{clause,
       {3781,9},
       [{atom,{3781,9},'++'}],
       [],
       [{debug_line,3781,1678},{atom,{3781,17},true}]},
      {clause,
       {3782,9},
       [{atom,{3782,9},'--'}],
       [],
       [{debug_line,3782,1679},{atom,{3782,17},true}]},
      {clause,
       {3783,9},
       [{atom,{3783,9},atom_to_list}],
       [],
       [{debug_line,3783,1680},{atom,{3783,25},true}]},
      {clause,
       {3784,9},
       [{atom,{3784,9},atom_to_binary}],
       [],
       [{debug_line,3784,1681},{atom,{3784,27},true}]},
      {clause,
       {3785,9},
       [{atom,{3785,9},list_to_tuple}],
       [],
       [{debug_line,3785,1682},{atom,{3785,26},true}]},
      {clause,
       {3786,9},
       [{atom,{3786,9},make_ref}],
       [],
       [{debug_line,3786,1683},{atom,{3786,21},true}]},
      {clause,
       {3787,9},
       [{atom,{3787,9},monitor}],
       [],
       [{debug_line,3787,1684},{atom,{3787,20},true}]},
      {clause,
       {3788,9},
       [{atom,{3788,9},setelement}],
       [],
       [{debug_line,3788,1685},{atom,{3788,23},true}]},
      {clause,
       {3789,9},
       [{atom,{3789,9},send_after}],
       [],
       [{debug_line,3789,1686},{atom,{3789,23},true}]},
      {clause,
       {3790,9},
       [{atom,{3790,9},spawn}],
       [],
       [{debug_line,3790,1687},{atom,{3790,18},true}]},
      {clause,
       {3791,9},
       [{atom,{3791,9},spawn_link}],
       [],
       [{debug_line,3791,1688},{atom,{3791,23},true}]},
      {clause,
       {3792,9},
       [{atom,{3792,9},spawn_monitor}],
       [],
       [{debug_line,3792,1689},{atom,{3792,26},true}]},
      {clause,
       {3793,9},
       [{atom,{3793,9},tuple_to_list}],
       [],
       [{debug_line,3793,1690},{atom,{3793,26},true}]},
      {clause,
       {3794,9},
       [{var,{3794,9},'_'}],
       [],
       [{debug_line,3794,1691},{atom,{3794,14},false}]}]}]},
  {clause,
   {3796,1},
   [{tuple,
     {3796,16},
     [{atom,{3796,16},b_set},
      {var,{3796,16},'_'},
      {var,{3796,16},'_'},
      {tuple,{3796,26},[{atom,{3796,27},bif},{var,{3796,31},'Arith'}]},
      {cons,
       {3796,43},
       {tuple,{3796,44},[{atom,{3796,44},b_var},{var,{3796,44},'_'}]},
       {cons,
        {3796,53},
        {tuple,{3796,53},[{atom,{3796,53},b_literal},{var,{3796,53},'_'}]},
        {nil,{3796,65}}}}]},
    {var,{3796,69},'_New'}],
   [[{op,{3797,14},'=:=',{var,{3797,8},'Arith'},{atom,{3797,18},'+'}}],
    [{op,{3797,29},'=:=',{var,{3797,23},'Arith'},{atom,{3797,33},'-'}}]],
   [{debug_line,3800,1692},{atom,{3800,5},true}]},
  {clause,
   {3801,1},
   [{tuple,
     {3801,16},
     [{atom,{3801,16},b_set},
      {var,{3801,16},'_'},
      {var,{3801,16},'_'},
      {var,{3801,26},'Op'},
      {var,{3801,16},'_'}]},
    {var,{3801,31},'_New'}],
   [],
   [{debug_line,3802,1693},
    {'case',
     {3802,5},
     {var,{3802,10},'Op'},
     [{clause,
       {3803,9},
       [{atom,{3803,9},bs_create_bin}],
       [],
       [{debug_line,3803,1694},{atom,{3803,26},true}]},
      {clause,
       {3804,9},
       [{atom,{3804,9},bs_get_tail}],
       [],
       [{debug_line,3804,1695},{atom,{3804,24},true}]},
      {clause,
       {3805,9},
       [{atom,{3805,9},make_fun}],
       [],
       [{debug_line,3805,1696},{atom,{3805,21},true}]},
      {clause,
       {3806,9},
       [{atom,{3806,9},put_list}],
       [],
       [{debug_line,3806,1697},{atom,{3806,21},true}]},
      {clause,
       {3807,9},
       [{atom,{3807,9},put_tuple}],
       [],
       [{debug_line,3807,1698},{atom,{3807,22},true}]},
      {clause,
       {3808,9},
       [{var,{3808,9},'_'}],
       [],
       [{debug_line,3808,1699},{atom,{3808,14},false}]}]}]}]}.
{function,
    {3811,1},
    cannot_reuse,2,
    [{clause,
         {3811,1},
         [{var,{3811,1},'_'},{var,{3811,1},'_'}],
         [[{call,
               {3811,1},
               {remote,
                   {3811,1},
                   {atom,{3811,1},fake},
                   {atom,{3811,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3811,1700},{atom,{3811,1},ignore}]},
     {clause,
         {3811,1},
         [{cons,{3811,14},{var,{3811,15},'V'},{var,{3811,17},'Values'}},
          {var,{3811,26},'New'}],
         [],
         [{debug_line,3812,1701},
          {'case',
              {3812,5},
              {call,
                  {3812,5},
                  {remote,
                      {3812,9},
                      {atom,{3812,5},sets},
                      {atom,{3812,10},is_element}},
                  [{var,{3812,21},'V'},{var,{3812,24},'New'}]},
              [{clause,
                   {3812,5},
                   [{atom,{3812,5},true}],
                   [],
                   [{atom,{3812,5},true}]},
               {clause,
                   {3812,5},
                   [{atom,{3812,5},false}],
                   [],
                   [{call,
                        {3812,36},
                        {atom,{3812,36},cannot_reuse},
                        [{var,{3812,49},'Values'},{var,{3812,57},'New'}]}]},
               {clause,
                   [{generated,true},{location,{3812,5}}],
                   [{var,{3812,5},cov1}],
                   [],
                   [{call,
                        {3812,5},
                        {remote,
                            {3812,5},
                            {atom,{3812,5},erlang},
                            {atom,{3812,5},error}},
                        [{block,0,
                             [{tuple,
                                  {3812,5},
                                  [{atom,{3812,5},badarg},
                                   {var,{3812,5},cov1}]}]}]}]}]}]},
     {clause,
         {3813,1},
         [{nil,{3813,14}},{var,{3813,18},'_New'}],
         [],
         [{debug_line,3814,1702},{atom,{3814,5},false}]}]}.
{function,
    {3820,1},
    list_set_union,2,
    [{clause,
         {3820,1},
         [{var,{3820,1},'_'},{var,{3820,1},'_'}],
         [[{call,
               {3820,1},
               {remote,
                   {3820,1},
                   {atom,{3820,1},fake},
                   {atom,{3820,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3820,1703},{atom,{3820,1},ignore}]},
     {clause,
         {3820,1},
         [{nil,{3820,16}},{var,{3820,20},'Set'}],
         [],
         [{debug_line,3821,1704},{var,{3821,5},'Set'}]},
     {clause,
         {3822,1},
         [{cons,{3822,16},{var,{3822,17},'E'},{nil,{3822,18}}},
          {var,{3822,21},'Set'}],
         [],
         [{debug_line,3823,1705},
          {call,
              {3823,5},
              {remote,
                  {3823,9},
                  {atom,{3823,5},sets},
                  {atom,{3823,10},add_element}},
              [{var,{3823,22},'E'},{var,{3823,25},'Set'}]}]},
     {clause,
         {3824,1},
         [{var,{3824,16},'List'},{var,{3824,22},'Set'}],
         [],
         [{debug_line,3825,1706},
          {call,
              {3825,5},
              {remote,{3825,9},{atom,{3825,5},sets},{atom,{3825,10},union}},
              [{block,0,
                   [{call,
                        {3825,16},
                        {remote,
                            {3825,20},
                            {atom,{3825,16},sets},
                            {atom,{3825,21},from_list}},
                        [{var,{3825,31},'List'}]}]},
               {var,{3825,38},'Set'}]}]}]}.
{function,
    {3827,1},
    non_guards,1,
    [{clause,
         {3827,1},
         [{var,{3827,1},'_'}],
         [[{call,
               {3827,1},
               {remote,
                   {3827,1},
                   {atom,{3827,1},fake},
                   {atom,{3827,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3827,1707},{atom,{3827,1},ignore}]},
     {clause,
         {3827,1},
         [{var,{3827,12},'Linear'}],
         [],
         [{debug_line,3828,1708},
          {call,
              {3828,5},
              {remote,
                  {3828,12},
                  {atom,{3828,5},gb_sets},
                  {atom,{3828,13},from_list}},
              [{block,0,
                   [{call,
                        {3828,23},
                        {atom,{3828,23},non_guards_1},
                        [{var,{3828,36},'Linear'}]}]}]}]}]}.
{function,
    {3830,1},
    non_guards_1,1,
    [{clause,
         {3830,1},
         [{var,{3830,1},'_'}],
         [[{call,
               {3830,1},
               {remote,
                   {3830,1},
                   {atom,{3830,1},fake},
                   {atom,{3830,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3830,1709},{atom,{3830,1},ignore}]},
     {clause,
         {3830,1},
         [{cons,
              {3830,14},
              {tuple,
                  {3830,15},
                  [{var,{3830,16},'L'},
                   {tuple,
                       {3830,18},
                       [{atom,{3830,18},b_blk},
                        {var,{3830,18},'_'},
                        {var,{3830,28},'Is'},
                        {var,{3830,18},'_'}]}]},
              {var,{3830,33},'Bs'}}],
         [],
         [{debug_line,3831,1710},
          {'case',
              {3831,5},
              {var,{3831,10},'Is'},
              [{clause,
                   {3832,9},
                   [{cons,
                        {3832,9},
                        {tuple,
                            {3832,10},
                            [{atom,{3832,10},b_set},
                             {var,{3832,10},'_'},
                             {var,{3832,10},'_'},
                             {atom,{3832,20},landingpad},
                             {var,{3832,10},'_'}]},
                        {var,{3832,32},'_'}}],
                   [],
                   [{debug_line,3833,1711},
                    {cons,
                        {3833,13},
                        {var,{3833,14},'L'},
                        {call,
                            {3833,18},
                            {atom,{3833,18},non_guards_1},
                            [{var,{3833,31},'Bs'}]}}]},
               {clause,
                   {3834,9},
                   [{var,{3834,9},'_'}],
                   [],
                   [{debug_line,3835,1712},
                    {call,
                        {3835,13},
                        {atom,{3835,13},non_guards_1},
                        [{var,{3835,26},'Bs'}]}]}]}]},
     {clause,
         {3837,1},
         [{nil,{3837,14}}],
         [],
         [{debug_line,3838,1713},
          {cons,{3838,5},{integer,{3838,7},1},{nil,{3838,22}}}]}]}.
{function,
    {3840,1},
    rel2fam,1,
    [{clause,
         {3840,1},
         [{var,{3840,1},'_'}],
         [[{call,
               {3840,1},
               {remote,
                   {3840,1},
                   {atom,{3840,1},fake},
                   {atom,{3840,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3840,1714},{atom,{3840,1},ignore}]},
     {clause,
         {3840,1},
         [{var,{3840,9},'S0'}],
         [],
         [{debug_line,3841,1715},
          {match,
              {3841,5},
              {var,{3841,5},'S1'},
              {call,
                  {3841,10},
                  {remote,
                      {3841,14},
                      {atom,{3841,10},sofs},
                      {atom,{3841,15},relation}},
                  [{var,{3841,24},'S0'}]}},
          {debug_line,3842,1716},
          {match,
              {3842,5},
              {var,{3842,5},'S'},
              {call,
                  {3842,9},
                  {remote,
                      {3842,13},
                      {atom,{3842,9},sofs},
                      {atom,{3842,14},rel2fam}},
                  [{var,{3842,22},'S1'}]}},
          {debug_line,3843,1717},
          {call,
              {3843,5},
              {remote,
                  {3843,9},
                  {atom,{3843,5},sofs},
                  {atom,{3843,10},to_external}},
              [{var,{3843,22},'S'}]}]}]}.
{function,
    {3845,1},
    sub,2,
    [{clause,
         {3845,1},
         [{var,{3845,1},'_'},{var,{3845,1},'_'}],
         [[{call,
               {3845,1},
               {remote,
                   {3845,1},
                   {atom,{3845,1},fake},
                   {atom,{3845,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3845,1718},{atom,{3845,1},ignore}]},
     {clause,
         {3845,1},
         [{var,{3845,5},'I'},{var,{3845,8},'Sub'}],
         [],
         [{debug_line,3846,1719},
          {call,
              {3846,5},
              {remote,
                  {3846,13},
                  {atom,{3846,5},beam_ssa},
                  {atom,{3846,14},normalize}},
              [{block,0,
                   [{call,
                        {3846,24},
                        {atom,{3846,24},sub_1},
                        [{var,{3846,30},'I'},{var,{3846,33},'Sub'}]}]}]}]}]}.
{function,
    {3848,1},
    sub_1,2,
    [{clause,
         {3848,1},
         [{var,{3848,1},'_'},{var,{3848,1},'_'}],
         [[{call,
               {3848,1},
               {remote,
                   {3848,1},
                   {atom,{3848,1},fake},
                   {atom,{3848,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3848,1720},{atom,{3848,1},ignore}]},
     {clause,
         {3848,1},
         [{match,
              {3848,7},
              {tuple,
                  {3848,7},
                  [{atom,{3848,7},b_set},
                   {var,{3848,7},'_'},
                   {var,{3848,7},'_'},
                   {atom,{3848,17},phi},
                   {var,{3848,26},'Args'}]},
              {var,{3848,32},'I'}},
          {var,{3848,35},'Sub'}],
         [],
         [{debug_line,3849,1721},
          {block,
              {3849,5},
              [{match,
                   {3849,13},
                   {var,{3849,13},rec180},
                   {lc,{3849,18},
                       {block,0,
                           [{tuple,
                                {3849,19},
                                [{call,
                                     {3849,20},
                                     {atom,{3849,20},sub_arg},
                                     [{var,{3849,28},'A'},
                                      {var,{3849,31},'Sub'}]},
                                 {var,{3849,36},'P'}]}]},
                       [{block,0,[{atom,{3849,52},true}]},
                        {generate_strict,
                            {3849,48},
                            {tuple,
                                {3849,42},
                                [{var,{3849,43},'A'},{var,{3849,45},'P'}]},
                            {var,{3849,52},'Args'}}]}},
               {match,{3849,5},{var,{3849,5},rec181},{var,{3849,5},'I'}},
               {'case',
                   {3849,13},
                   {var,{3849,5},rec181},
                   [{clause,
                        {3849,13},
                        [{tuple,
                             {3849,13},
                             [{atom,{3849,13},b_set},
                              {var,{3849,13},'_'},
                              {var,{3849,13},'_'},
                              {var,{3849,13},'_'},
                              {var,{3849,13},'_'}]}],
                        [],
                        [{call,
                             {3849,13},
                             {remote,
                                 {3849,13},
                                 {atom,{3849,13},erlang},
                                 {atom,{3849,13},setelement}},
                             [{integer,{3849,13},5},
                              {var,{3849,5},rec181},
                              {var,{3849,13},rec180}]}]},
                    {clause,
                        [{generated,true},{location,{3849,13}}],
                        [{var,[{generated,true},{location,{3849,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3849,13}}],
                             {remote,
                                 [{generated,true},{location,{3849,13}}],
                                 {atom,
                                     [{generated,true},{location,{3849,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3849,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3849,13}}],
                                  [{atom,
                                       [{generated,true},{location,{3849,13}}],
                                       badrecord},
                                   {var,{3849,5},rec181}]}]}]}]}]}]},
     {clause,
         {3850,1},
         [{match,
              {3850,7},
              {tuple,
                  {3850,7},
                  [{atom,{3850,7},b_set},
                   {var,{3850,7},'_'},
                   {var,{3850,7},'_'},
                   {var,{3850,7},'_'},
                   {var,{3850,19},'Args'}]},
              {var,{3850,25},'I'}},
          {var,{3850,28},'Sub'}],
         [],
         [{debug_line,3851,1722},
          {block,
              {3851,5},
              [{match,
                   {3851,13},
                   {var,{3851,13},rec182},
                   {lc,{3851,18},
                       {block,0,
                           [{call,
                                {3851,19},
                                {atom,{3851,19},sub_arg},
                                [{var,{3851,27},'A'},{var,{3851,30},'Sub'}]}]},
                       [{block,0,[{atom,{3851,43},true}]},
                        {generate,
                            {3851,40},
                            {var,{3851,38},'A'},
                            {var,{3851,43},'Args'}}]}},
               {match,{3851,5},{var,{3851,5},rec183},{var,{3851,5},'I'}},
               {'case',
                   {3851,13},
                   {var,{3851,5},rec183},
                   [{clause,
                        {3851,13},
                        [{tuple,
                             {3851,13},
                             [{atom,{3851,13},b_set},
                              {var,{3851,13},'_'},
                              {var,{3851,13},'_'},
                              {var,{3851,13},'_'},
                              {var,{3851,13},'_'}]}],
                        [],
                        [{call,
                             {3851,13},
                             {remote,
                                 {3851,13},
                                 {atom,{3851,13},erlang},
                                 {atom,{3851,13},setelement}},
                             [{integer,{3851,13},5},
                              {var,{3851,5},rec183},
                              {var,{3851,13},rec182}]}]},
                    {clause,
                        [{generated,true},{location,{3851,13}}],
                        [{var,[{generated,true},{location,{3851,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3851,13}}],
                             {remote,
                                 [{generated,true},{location,{3851,13}}],
                                 {atom,
                                     [{generated,true},{location,{3851,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3851,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3851,13}}],
                                  [{atom,
                                       [{generated,true},{location,{3851,13}}],
                                       badrecord},
                                   {var,{3851,5},rec183}]}]}]}]}]}]},
     {clause,
         {3852,1},
         [{match,
              {3852,7},
              {tuple,
                  {3852,7},
                  [{atom,{3852,7},b_br},
                   {var,{3852,7},'_'},
                   {match,
                       {3852,18},
                       {tuple,
                           {3852,18},
                           [{atom,{3852,18},b_var},{var,{3852,18},'_'}]},
                       {var,{3852,27},'Old'}},
                   {var,{3852,7},'_'},
                   {var,{3852,7},'_'}]},
              {var,{3852,32},'Br'}},
          {var,{3852,36},'Sub'}],
         [],
         [{debug_line,3853,1723},
          {match,
              {3853,5},
              {var,{3853,5},'New'},
              {call,
                  {3853,11},
                  {atom,{3853,11},sub_arg},
                  [{var,{3853,19},'Old'},{var,{3853,24},'Sub'}]}},
          {debug_line,3854,1724},
          {block,
              {3854,5},
              [{match,{3854,5},{var,{3854,5},rec184},{var,{3854,5},'Br'}},
               {'case',
                   {3854,13},
                   {var,{3854,5},rec184},
                   [{clause,
                        {3854,13},
                        [{tuple,
                             {3854,13},
                             [{atom,{3854,13},b_br},
                              {var,{3854,13},'_'},
                              {var,{3854,13},'_'},
                              {var,{3854,13},'_'},
                              {var,{3854,13},'_'}]}],
                        [],
                        [{call,
                             {3854,13},
                             {remote,
                                 {3854,13},
                                 {atom,{3854,13},erlang},
                                 {atom,{3854,13},setelement}},
                             [{integer,{3854,13},3},
                              {var,{3854,5},rec184},
                              {var,{3854,18},'New'}]}]},
                    {clause,
                        [{generated,true},{location,{3854,13}}],
                        [{var,[{generated,true},{location,{3854,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3854,13}}],
                             {remote,
                                 [{generated,true},{location,{3854,13}}],
                                 {atom,
                                     [{generated,true},{location,{3854,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3854,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3854,13}}],
                                  [{atom,
                                       [{generated,true},{location,{3854,13}}],
                                       badrecord},
                                   {var,{3854,5},rec184}]}]}]}]}]}]},
     {clause,
         {3855,1},
         [{match,
              {3855,7},
              {tuple,
                  {3855,7},
                  [{atom,{3855,7},b_switch},
                   {var,{3855,7},'_'},
                   {match,
                       {3855,21},
                       {tuple,
                           {3855,21},
                           [{atom,{3855,21},b_var},{var,{3855,21},'_'}]},
                       {var,{3855,30},'Old'}},
                   {var,{3855,7},'_'},
                   {var,{3855,7},'_'}]},
              {var,{3855,35},'Sw'}},
          {var,{3855,39},'Sub'}],
         [],
         [{debug_line,3856,1725},
          {match,
              {3856,5},
              {var,{3856,5},'New'},
              {call,
                  {3856,11},
                  {atom,{3856,11},sub_arg},
                  [{var,{3856,19},'Old'},{var,{3856,24},'Sub'}]}},
          {debug_line,3857,1726},
          {block,
              {3857,5},
              [{match,{3857,5},{var,{3857,5},rec185},{var,{3857,5},'Sw'}},
               {'case',
                   {3857,17},
                   {var,{3857,5},rec185},
                   [{clause,
                        {3857,17},
                        [{tuple,
                             {3857,17},
                             [{atom,{3857,17},b_switch},
                              {var,{3857,17},'_'},
                              {var,{3857,17},'_'},
                              {var,{3857,17},'_'},
                              {var,{3857,17},'_'}]}],
                        [],
                        [{call,
                             {3857,17},
                             {remote,
                                 {3857,17},
                                 {atom,{3857,17},erlang},
                                 {atom,{3857,17},setelement}},
                             [{integer,{3857,17},3},
                              {var,{3857,5},rec185},
                              {var,{3857,21},'New'}]}]},
                    {clause,
                        [{generated,true},{location,{3857,17}}],
                        [{var,[{generated,true},{location,{3857,17}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3857,17}}],
                             {remote,
                                 [{generated,true},{location,{3857,17}}],
                                 {atom,
                                     [{generated,true},{location,{3857,17}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3857,17}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3857,17}}],
                                  [{atom,
                                       [{generated,true},{location,{3857,17}}],
                                       badrecord},
                                   {var,{3857,5},rec185}]}]}]}]}]}]},
     {clause,
         {3858,1},
         [{match,
              {3858,7},
              {tuple,
                  {3858,7},
                  [{atom,{3858,7},b_ret},
                   {var,{3858,7},'_'},
                   {match,
                       {3858,18},
                       {tuple,
                           {3858,18},
                           [{atom,{3858,18},b_var},{var,{3858,18},'_'}]},
                       {var,{3858,27},'Old'}}]},
              {var,{3858,32},'Ret'}},
          {var,{3858,37},'Sub'}],
         [],
         [{debug_line,3859,1727},
          {match,
              {3859,5},
              {var,{3859,5},'New'},
              {call,
                  {3859,11},
                  {atom,{3859,11},sub_arg},
                  [{var,{3859,19},'Old'},{var,{3859,24},'Sub'}]}},
          {debug_line,3860,1728},
          {block,
              {3860,5},
              [{match,{3860,5},{var,{3860,5},rec186},{var,{3860,5},'Ret'}},
               {'case',
                   {3860,15},
                   {var,{3860,5},rec186},
                   [{clause,
                        {3860,15},
                        [{tuple,
                             {3860,15},
                             [{atom,{3860,15},b_ret},
                              {var,{3860,15},'_'},
                              {var,{3860,15},'_'}]}],
                        [],
                        [{call,
                             {3860,15},
                             {remote,
                                 {3860,15},
                                 {atom,{3860,15},erlang},
                                 {atom,{3860,15},setelement}},
                             [{integer,{3860,15},3},
                              {var,{3860,5},rec186},
                              {var,{3860,19},'New'}]}]},
                    {clause,
                        [{generated,true},{location,{3860,15}}],
                        [{var,[{generated,true},{location,{3860,15}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3860,15}}],
                             {remote,
                                 [{generated,true},{location,{3860,15}}],
                                 {atom,
                                     [{generated,true},{location,{3860,15}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3860,15}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3860,15}}],
                                  [{atom,
                                       [{generated,true},{location,{3860,15}}],
                                       badrecord},
                                   {var,{3860,5},rec186}]}]}]}]}]}]},
     {clause,
         {3861,1},
         [{var,{3861,7},'Last'},{var,{3861,13},'_'}],
         [],
         [{debug_line,3861,1729},{var,{3861,19},'Last'}]}]}.
{function,
    {3863,1},
    sub_arg,2,
    [{clause,
         {3863,1},
         [{var,{3863,1},'_'},{var,{3863,1},'_'}],
         [[{call,
               {3863,1},
               {remote,
                   {3863,1},
                   {atom,{3863,1},fake},
                   {atom,{3863,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3863,1730},{atom,{3863,1},ignore}]},
     {clause,
         {3863,1},
         [{match,
              {3863,9},
              {tuple,
                  {3863,9},
                  [{atom,{3863,9},b_remote},
                   {var,{3863,23},'Mod'},
                   {var,{3863,32},'Name'},
                   {var,{3863,9},'_'}]},
              {var,{3863,38},'Rem'}},
          {var,{3863,43},'Sub'}],
         [],
         [{debug_line,3864,1731},
          {block,
              {3864,5},
              [{match,
                   {3864,18},
                   {var,{3864,18},rec187},
                   {call,
                       {3864,22},
                       {atom,{3864,22},sub_arg},
                       [{var,{3864,30},'Mod'},{var,{3864,35},'Sub'}]}},
               {match,
                   {3864,40},
                   {var,{3864,40},rec188},
                   {call,
                       {3864,45},
                       {atom,{3864,45},sub_arg},
                       [{var,{3864,53},'Name'},{var,{3864,59},'Sub'}]}},
               {match,{3864,5},{var,{3864,5},rec189},{var,{3864,5},'Rem'}},
               {'case',
                   {3864,18},
                   {var,{3864,5},rec189},
                   [{clause,
                        {3864,18},
                        [{tuple,
                             {3864,18},
                             [{atom,{3864,18},b_remote},
                              {var,{3864,18},'_'},
                              {var,{3864,18},'_'},
                              {var,{3864,18},'_'}]}],
                        [],
                        [{call,
                             {3864,18},
                             {remote,
                                 {3864,18},
                                 {atom,{3864,18},erlang},
                                 {atom,{3864,18},setelement}},
                             [{integer,{3864,18},2},
                              {call,
                                  {3864,40},
                                  {remote,
                                      {3864,40},
                                      {atom,{3864,40},erlang},
                                      {atom,{3864,40},setelement}},
                                  [{integer,{3864,40},3},
                                   {var,{3864,5},rec189},
                                   {var,{3864,40},rec188}]},
                              {var,{3864,18},rec187}]}]},
                    {clause,
                        [{generated,true},{location,{3864,18}}],
                        [{var,[{generated,true},{location,{3864,18}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3864,18}}],
                             {remote,
                                 [{generated,true},{location,{3864,18}}],
                                 {atom,
                                     [{generated,true},{location,{3864,18}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3864,18}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3864,18}}],
                                  [{atom,
                                       [{generated,true},{location,{3864,18}}],
                                       badrecord},
                                   {var,{3864,5},rec189}]}]}]}]}]}]},
     {clause,
         {3865,1},
         [{var,{3865,9},'Old'},{var,{3865,14},'Sub'}],
         [],
         [{debug_line,3866,1732},
          {'case',
              {3866,5},
              {var,{3866,10},'Sub'},
              [{clause,
                   {3867,9},
                   [{map,
                        {3867,9},
                        [{map_field_exact,
                             {3867,14},
                             {var,{3867,11},'Old'},
                             {var,{3867,16},'New'}}]}],
                   [],
                   [{debug_line,3867,1733},{var,{3867,24},'New'}]},
               {clause,
                   {3868,9},
                   [{map,{3868,9},[]}],
                   [],
                   [{debug_line,3868,1734},{var,{3868,16},'Old'}]}]}]}]}.
{function,{3871,1},
          new_var,1,
          [{clause,{3871,1},
                   [{var,{3871,1},'_'}],
                   [[{call,{3871,1},
                           {remote,{3871,1},
                                   {atom,{3871,1},fake},
                                   {atom,{3871,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3871,1735},{atom,{3871,1},ignore}]},
           {clause,{3871,1},
                   [{var,{3871,9},'Count'}],
                   [],
                   [{debug_line,3872,1736},
                    {tuple,{3872,5},
                           [{tuple,{3872,6},
                                   [{atom,{3872,6},b_var},
                                    {var,{3872,18},'Count'}]},
                            {op,{3872,30},
                                '+',
                                {var,{3872,25},'Count'},
                                {integer,{3872,31},1}}]}]}]}.
{function,
 {3907,1},
 isolate_nifs,1,
 [{clause,
   {3907,1},
   [{var,{3907,1},'_'}],
   [[{call,
      {3907,1},
      {remote,{3907,1},{atom,{3907,1},fake},{atom,{3907,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3907,1737},{atom,{3907,1},ignore}]},
  {clause,
   {3907,1},
   [{match,
     {3907,14},
     {tuple,
      {3907,14},
      [{atom,{3907,14},b_module},
       {var,{3907,14},'_'},
       {var,{3907,14},'_'},
       {var,{3907,44},'Exports0'},
       {var,{3907,14},'_'},
       {var,{3907,29},'Body0'}]},
     {var,{3907,54},'Module0'}}],
   [],
   [{debug_line,3909,1738},
    {match,
     {3909,5},
     {var,{3909,5},'NIFs'},
     {call,
      {3909,12},
      {remote,{3909,12},{atom,{3909,12},lists},{atom,{3909,12},foldl}},
      [{block,0,
        [{'fun',
          {3909,18},
          {clauses,
           [{clause,
             {3909,21},
             [{match,
               {3909,22},
               {tuple,
                {3909,22},
                [{atom,{3909,22},b_function},
                 {var,{3909,22},'_'},
                 {var,{3909,22},'_'},
                 {var,{3909,22},'_'},
                 {var,{3909,22},'_'}]},
               {var,{3909,36},'F'}},
              {var,{3909,39},'Acc'}],
             [],
             [{debug_line,3910,1739},
              {'case',
               {3910,26},
               {call,{3910,31},{atom,{3910,31},is_nif},[{var,{3910,38},'F'}]},
               [{clause,
                 {3911,30},
                 [{atom,{3911,30},true}],
                 [],
                 [{debug_line,3912,1740},
                  {call,
                   {3912,34},
                   {remote,
                    {3912,38},
                    {atom,{3912,34},sets},
                    {atom,{3912,39},add_element}},
                   [{block,0,
                     [{call,
                       {3912,51},
                       {atom,{3912,51},get_func_id},
                       [{var,{3912,63},'F'}]}]},
                    {var,{3912,67},'Acc'}]}]},
                {clause,
                 {3913,30},
                 [{atom,{3913,30},false}],
                 [],
                 [{debug_line,3914,1741},{var,{3914,34},'Acc'}]}]}]}]}}]},
       {block,0,
        [{debug_line,3916,1742},
         {call,
          {3916,23},
          {remote,{3916,27},{atom,{3916,23},sets},{atom,{3916,28},new}},
          [{block,0,
            [{cons,
              {3916,32},
              {tuple,
               {3916,33},
               [{atom,{3916,34},version},{integer,{3916,42},2}]},
              {nil,{3916,44}}}]}]}]},
       {var,{3916,48},'Body0'}]}},
    {debug_line,3920,1743},
    {match,
     {3920,5},
     {var,{3920,5},'ExportsSet'},
     {call,
      {3920,18},
      {remote,{3920,18},{atom,{3920,18},lists},{atom,{3920,18},foldl}},
      [{block,0,
        [{'fun',
          {3920,24},
          {clauses,
           [{clause,
             {3920,27},
             [{tuple,{3920,28},[{var,{3920,29},'N'},{var,{3920,31},'A'}]},
              {var,{3920,35},'Acc'}],
             [],
             [{debug_line,3921,1744},
              {match,
               {3921,32},
               {var,{3921,32},'FA'},
               {tuple,
                {3921,37},
                [{atom,{3921,37},b_local},
                 {tuple,
                  {3921,51},
                  [{atom,{3921,51},b_literal},{var,{3921,66},'N'}]},
                 {var,{3921,75},'A'}]}},
              {debug_line,3922,1745},
              {call,
               {3922,32},
               {remote,
                {3922,36},
                {atom,{3922,32},sets},
                {atom,{3922,37},add_element}},
               [{var,{3922,49},'FA'},{var,{3922,53},'Acc'}]}]}]}}]},
       {block,0,
        [{debug_line,3923,1746},
         {call,
          {3923,29},
          {remote,{3923,33},{atom,{3923,29},sets},{atom,{3923,34},new}},
          [{block,0,
            [{cons,
              {3923,38},
              {tuple,
               {3923,39},
               [{atom,{3923,40},version},{integer,{3923,48},2}]},
              {nil,{3923,50}}}]}]}]},
       {var,{3923,54},'Exports0'}]}},
    {debug_line,3924,1747},
    {match,
     {3924,5},
     {var,{3924,5},'NIFsToExport'},
     {call,
      {3924,20},
      {remote,{3924,24},{atom,{3924,20},sets},{atom,{3924,25},subtract}},
      [{var,{3924,34},'NIFs'},{var,{3924,40},'ExportsSet'}]}},
    {debug_line,3925,1748},
    {match,
     {3925,5},
     {var,{3925,5},'Exports'},
     {op,
      {3925,24},
      '++',
      {var,{3925,15},'Exports0'},
      {lc,
       {3925,27},
       {block,0,[{tuple,{3925,28},[{var,{3925,29},'N'},{var,{3925,31},'A'}]}]},
       [{block,0,[{debug_line,3927,1749},{atom,{3927,38},true}]},
        {generate,
         {3927,35},
         {tuple,
          {3926,31},
          [{atom,{3926,31},b_local},
           {tuple,{3926,45},[{atom,{3926,45},b_literal},{var,{3926,60},'N'}]},
           {var,{3926,69},'A'}]},
         {call,
          {3927,38},
          {remote,{3927,42},{atom,{3927,38},sets},{atom,{3927,43},to_list}},
          [{var,{3927,51},'NIFsToExport'}]}}]}}},
    {debug_line,3932,1750},
    {match,
     {3932,5},
     {var,{3932,5},'CallReplacer'},
     {'fun',
      {3933,9},
      {clauses,
       [{clause,
         {3933,12},
         [{match,
           {3933,13},
           {tuple,
            {3933,13},
            [{atom,{3933,13},b_set},
             {var,{3933,13},'_'},
             {var,{3933,13},'_'},
             {atom,{3933,23},call},
             {cons,
              {3933,33},
              {match,
               {3933,34},
               {tuple,
                {3933,34},
                [{atom,{3933,34},b_local},
                 {var,{3933,48},'N'},
                 {var,{3933,56},'A'}]},
               {var,{3933,59},'Callee'}},
              {var,{3933,66},'Rest'}}]},
           {var,{3933,73},'I'}}],
         [],
         [{debug_line,3934,1751},
          {'case',
           {3934,17},
           {call,
            {3934,22},
            {remote,
             {3934,26},
             {atom,{3934,22},sets},
             {atom,{3934,27},is_element}},
            [{var,{3934,38},'Callee'},{var,{3934,46},'NIFs'}]},
           [{clause,
             {3935,21},
             [{atom,{3935,21},true}],
             [],
             [{debug_line,3936,1752},
              {match,
               {3936,25},
               {var,{3936,25},'Args'},
               {cons,
                {3936,32},
                {tuple,
                 {3936,33},
                 [{atom,{3936,33},b_remote},
                  {tuple,
                   {3936,48},
                   [{atom,{3936,48},b_literal},{atom,{3936,48},'\nnifs'}]},
                  {var,{3937,48},'N'},
                  {var,{3937,56},'A'}]},
                {var,{3937,59},'Rest'}}},
              {debug_line,3938,1753},
              {block,
               {3938,25},
               [{match,{3938,25},{var,{3938,25},rec190},{var,{3938,25},'I'}},
                {'case',
                 {3938,33},
                 {var,{3938,25},rec190},
                 [{clause,
                   {3938,33},
                   [{tuple,
                     {3938,33},
                     [{atom,{3938,33},b_set},
                      {var,{3938,33},'_'},
                      {var,{3938,33},'_'},
                      {var,{3938,33},'_'},
                      {var,{3938,33},'_'}]}],
                   [],
                   [{call,
                     {3938,33},
                     {remote,
                      {3938,33},
                      {atom,{3938,33},erlang},
                      {atom,{3938,33},setelement}},
                     [{integer,{3938,33},5},
                      {var,{3938,25},rec190},
                      {var,{3938,38},'Args'}]}]},
                  {clause,
                   [{generated,true},{location,{3938,33}}],
                   [{var,[{generated,true},{location,{3938,33}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{3938,33}}],
                     {remote,
                      [{generated,true},{location,{3938,33}}],
                      {atom,[{generated,true},{location,{3938,33}}],erlang},
                      {atom,[{generated,true},{location,{3938,33}}],error}},
                     [{tuple,
                       [{generated,true},{location,{3938,33}}],
                       [{atom,
                         [{generated,true},{location,{3938,33}}],
                         badrecord},
                        {var,{3938,25},rec190}]}]}]}]}]}]},
            {clause,
             {3939,21},
             [{atom,{3939,21},false}],
             [],
             [{debug_line,3940,1754},{var,{3940,25},'I'}]}]}]},
        {clause,
         {3942,12},
         [{var,{3942,13},'I'}],
         [],
         [{debug_line,3943,1755},{var,{3943,17},'I'}]}]}}},
    {debug_line,3945,1756},
    {match,
     {3945,5},
     {tuple,
      {3945,5},
      [{atom,{3945,5},b_module},
       {var,{3945,5},'_'},
       {var,{3945,5},'_'},
       {var,{3945,5},'_'},
       {var,{3945,5},'_'},
       {var,{3945,20},'Body'}]},
     {call,
      {3945,28},
      {atom,{3945,28},map_module_instrs},
      [{var,{3945,46},'CallReplacer'},{var,{3945,60},'Module0'}]}},
    {debug_line,3946,1757},
    {match,
     {3946,5},
     {var,{3946,5},'NIFsAsExternal'},
     {call,
      {3946,22},
      {remote,{3946,26},{atom,{3946,22},sets},{atom,{3946,27},fold}},
      [{block,0,
        [{'fun',
          {3946,32},
          {clauses,
           [{clause,
             {3946,35},
             [{tuple,
               {3946,36},
               [{atom,{3946,36},b_local},
                {var,{3946,50},'N'},
                {var,{3946,58},'A'}]},
              {var,{3946,62},'Acc'}],
             [],
             [{debug_line,3947,1758},
              {match,
               {3947,40},
               {var,{3947,40},'R'},
               {tuple,
                {3947,44},
                [{atom,{3947,44},b_remote},
                 {tuple,
                  {3947,59},
                  [{atom,{3947,59},b_literal},{atom,{3947,59},'\nnifs'}]},
                 {var,{3948,59},'N'},
                 {var,{3948,67},'A'}]}},
              {debug_line,3949,1759},
              {call,
               {3949,40},
               {remote,
                {3949,44},
                {atom,{3949,40},sets},
                {atom,{3949,45},add_element}},
               [{var,{3949,57},'R'},{var,{3949,60},'Acc'}]}]}]}}]},
       {block,0,
        [{debug_line,3950,1760},
         {call,
          {3950,37},
          {remote,{3950,41},{atom,{3950,37},sets},{atom,{3950,42},new}},
          [{block,0,
            [{cons,
              {3950,46},
              {tuple,
               {3950,47},
               [{atom,{3950,48},version},{integer,{3950,56},2}]},
              {nil,{3950,58}}}]}]}]},
       {var,{3950,62},'NIFs'}]}},
    {debug_line,3951,1761},
    {tuple,
     {3951,5},
     [{block,
       {3951,6},
       [{match,{3951,6},{var,{3951,6},rec191},{var,{3951,6},'Module0'}},
        {'case',
         {3951,23},
         {var,{3951,6},rec191},
         [{clause,
           {3951,23},
           [{tuple,
             {3951,23},
             [{atom,{3951,23},b_module},
              {var,{3951,23},'_'},
              {var,{3951,23},'_'},
              {var,{3951,23},'_'},
              {var,{3951,23},'_'},
              {var,{3951,23},'_'}]}],
           [],
           [{call,
             {3951,23},
             {remote,
              {3951,23},
              {atom,{3951,23},erlang},
              {atom,{3951,23},setelement}},
             [{integer,{3951,23},4},
              {call,
               {3951,39},
               {remote,
                {3951,39},
                {atom,{3951,39},erlang},
                {atom,{3951,39},setelement}},
               [{integer,{3951,39},6},
                {var,{3951,6},rec191},
                {var,{3951,44},'Body'}]},
              {var,{3951,31},'Exports'}]}]},
          {clause,
           [{generated,true},{location,{3951,23}}],
           [{var,[{generated,true},{location,{3951,23}}],'_'}],
           [],
           [{call,
             [{generated,true},{location,{3951,23}}],
             {remote,
              [{generated,true},{location,{3951,23}}],
              {atom,[{generated,true},{location,{3951,23}}],erlang},
              {atom,[{generated,true},{location,{3951,23}}],error}},
             [{tuple,
               [{generated,true},{location,{3951,23}}],
               [{atom,[{generated,true},{location,{3951,23}}],badrecord},
                {var,{3951,6},rec191}]}]}]}]}]},
      {tuple,
       {3952,6},
       [{var,{3952,7},'NIFsToExport'},{var,{3952,21},'NIFsAsExternal'}]}]}]}]}.
{function,
    {3954,1},
    map_module_instrs,2,
    [{clause,
         {3954,1},
         [{var,{3954,1},'_'},{var,{3954,1},'_'}],
         [[{call,
               {3954,1},
               {remote,
                   {3954,1},
                   {atom,{3954,1},fake},
                   {atom,{3954,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3954,1762},{atom,{3954,1},ignore}]},
     {clause,
         {3954,1},
         [{var,{3954,19},'Fun'},
          {match,
              {3954,24},
              {tuple,
                  {3954,24},
                  [{atom,{3954,24},b_module},
                   {var,{3954,24},'_'},
                   {var,{3954,24},'_'},
                   {var,{3954,24},'_'},
                   {var,{3954,24},'_'},
                   {var,{3954,39},'Body'}]},
              {var,{3954,45},'Module'}}],
         [],
         [{debug_line,3955,1763},
          {block,
              {3955,5},
              [{match,
                   {3955,21},
                   {var,{3955,21},rec192},
                   {lc,{3955,26},
                       {block,0,
                           [{call,
                                {3955,27},
                                {atom,{3955,27},map_module_instrs_f},
                                [{var,{3955,47},'Fun'},{var,{3955,52},'F'}]}]},
                       [{block,0,[{atom,{3955,63},true}]},
                        {generate,
                            {3955,60},
                            {var,{3955,58},'F'},
                            {var,{3955,63},'Body'}}]}},
               {match,{3955,5},{var,{3955,5},rec193},{var,{3955,5},'Module'}},
               {'case',
                   {3955,21},
                   {var,{3955,5},rec193},
                   [{clause,
                        {3955,21},
                        [{tuple,
                             {3955,21},
                             [{atom,{3955,21},b_module},
                              {var,{3955,21},'_'},
                              {var,{3955,21},'_'},
                              {var,{3955,21},'_'},
                              {var,{3955,21},'_'},
                              {var,{3955,21},'_'}]}],
                        [],
                        [{call,
                             {3955,21},
                             {remote,
                                 {3955,21},
                                 {atom,{3955,21},erlang},
                                 {atom,{3955,21},setelement}},
                             [{integer,{3955,21},6},
                              {var,{3955,5},rec193},
                              {var,{3955,21},rec192}]}]},
                    {clause,
                        [{generated,true},{location,{3955,21}}],
                        [{var,[{generated,true},{location,{3955,21}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3955,21}}],
                             {remote,
                                 [{generated,true},{location,{3955,21}}],
                                 {atom,
                                     [{generated,true},{location,{3955,21}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3955,21}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3955,21}}],
                                  [{atom,
                                       [{generated,true},{location,{3955,21}}],
                                       badrecord},
                                   {var,{3955,5},rec193}]}]}]}]}]}]}]}.
{function,
    {3957,1},
    map_module_instrs_f,2,
    [{clause,
         {3957,1},
         [{var,{3957,1},'_'},{var,{3957,1},'_'}],
         [[{call,
               {3957,1},
               {remote,
                   {3957,1},
                   {atom,{3957,1},fake},
                   {atom,{3957,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3957,1764},{atom,{3957,1},ignore}]},
     {clause,
         {3957,1},
         [{var,{3957,21},'Fun'},
          {match,
              {3957,26},
              {tuple,
                  {3957,26},
                  [{atom,{3957,26},b_function},
                   {var,{3957,26},'_'},
                   {var,{3957,26},'_'},
                   {var,{3957,41},'Bs'},
                   {var,{3957,26},'_'}]},
              {var,{3957,45},'F'}}],
         [],
         [{debug_line,3958,1765},
          {block,
              {3958,5},
              [{match,
                   {3958,18},
                   {var,{3958,18},rec194},
                   {mc,{3958,21},
                       {map_field_assoc,
                           {3958,27},
                           {block,0,[{var,{3958,23},'Lbl'}]},
                           {block,0,
                               [{call,
                                    {3958,30},
                                    {atom,{3958,30},map_module_instrs_b},
                                    [{var,{3958,50},'Fun'},
                                     {var,{3958,55},'Blk'}]}]}},
                       [{block,0,[{atom,{3958,75},true}]},
                        {m_generate,
                            {3958,72},
                            {map_field_exact,
                                {3958,66},
                                {var,{3958,63},'Lbl'},
                                {var,{3958,68},'Blk'}},
                            {var,{3958,75},'Bs'}}]}},
               {match,{3958,5},{var,{3958,5},rec195},{var,{3958,5},'F'}},
               {'case',
                   {3958,18},
                   {var,{3958,5},rec195},
                   [{clause,
                        {3958,18},
                        [{tuple,
                             {3958,18},
                             [{atom,{3958,18},b_function},
                              {var,{3958,18},'_'},
                              {var,{3958,18},'_'},
                              {var,{3958,18},'_'},
                              {var,{3958,18},'_'}]}],
                        [],
                        [{call,
                             {3958,18},
                             {remote,
                                 {3958,18},
                                 {atom,{3958,18},erlang},
                                 {atom,{3958,18},setelement}},
                             [{integer,{3958,18},4},
                              {var,{3958,5},rec195},
                              {var,{3958,18},rec194}]}]},
                    {clause,
                        [{generated,true},{location,{3958,18}}],
                        [{var,[{generated,true},{location,{3958,18}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3958,18}}],
                             {remote,
                                 [{generated,true},{location,{3958,18}}],
                                 {atom,
                                     [{generated,true},{location,{3958,18}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3958,18}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3958,18}}],
                                  [{atom,
                                       [{generated,true},{location,{3958,18}}],
                                       badrecord},
                                   {var,{3958,5},rec195}]}]}]}]}]}]}]}.
{function,
    {3960,1},
    map_module_instrs_b,2,
    [{clause,
         {3960,1},
         [{var,{3960,1},'_'},{var,{3960,1},'_'}],
         [[{call,
               {3960,1},
               {remote,
                   {3960,1},
                   {atom,{3960,1},fake},
                   {atom,{3960,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3960,1766},{atom,{3960,1},ignore}]},
     {clause,
         {3960,1},
         [{var,{3960,21},'Fun'},
          {match,
              {3960,26},
              {tuple,
                  {3960,26},
                  [{atom,{3960,26},b_blk},
                   {var,{3960,26},'_'},
                   {var,{3960,36},'Is'},
                   {var,{3960,26},'_'}]},
              {var,{3960,40},'Blk'}}],
         [],
         [{debug_line,3961,1767},
          {block,
              {3961,5},
              [{match,
                   {3961,15},
                   {var,{3961,15},rec196},
                   {lc,{3961,18},
                       {block,0,
                           [{call,
                                {3961,19},
                                {var,{3961,19},'Fun'},
                                [{var,{3961,23},'I'}]}]},
                       [{block,0,[{atom,{3961,34},true}]},
                        {generate,
                            {3961,31},
                            {var,{3961,29},'I'},
                            {var,{3961,34},'Is'}}]}},
               {match,{3961,5},{var,{3961,5},rec197},{var,{3961,5},'Blk'}},
               {'case',
                   {3961,15},
                   {var,{3961,5},rec197},
                   [{clause,
                        {3961,15},
                        [{tuple,
                             {3961,15},
                             [{atom,{3961,15},b_blk},
                              {var,{3961,15},'_'},
                              {var,{3961,15},'_'},
                              {var,{3961,15},'_'}]}],
                        [],
                        [{call,
                             {3961,15},
                             {remote,
                                 {3961,15},
                                 {atom,{3961,15},erlang},
                                 {atom,{3961,15},setelement}},
                             [{integer,{3961,15},3},
                              {var,{3961,5},rec197},
                              {var,{3961,15},rec196}]}]},
                    {clause,
                        [{generated,true},{location,{3961,15}}],
                        [{var,[{generated,true},{location,{3961,15}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{3961,15}}],
                             {remote,
                                 [{generated,true},{location,{3961,15}}],
                                 {atom,
                                     [{generated,true},{location,{3961,15}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{3961,15}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{3961,15}}],
                                  [{atom,
                                       [{generated,true},{location,{3961,15}}],
                                       badrecord},
                                   {var,{3961,5},rec197}]}]}]}]}]}]}]}.
{function,
 {3963,1},
 restore_nifs,2,
 [{clause,
   {3963,1},
   [{var,{3963,1},'_'},{var,{3963,1},'_'}],
   [[{call,
      {3963,1},
      {remote,{3963,1},{atom,{3963,1},fake},{atom,{3963,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3963,1768},{atom,{3963,1},ignore}]},
  {clause,
   {3963,1},
   [{match,
     {3963,14},
     {tuple,
      {3963,14},
      [{atom,{3963,14},b_module},
       {var,{3963,14},'_'},
       {var,{3963,14},'_'},
       {var,{3963,32},'Exports0'},
       {var,{3963,14},'_'},
       {var,{3963,14},'_'}]},
     {var,{3963,42},'Module0'}},
    {tuple,{3963,51},[{var,{3963,52},'NIFsToExport'},{var,{3963,66},'NIFs'}]}],
   [],
   [{debug_line,3966,1769},
    {match,
     {3966,5},
     {var,{3966,5},'Exports'},
     {lc,
      {3966,15},
      {block,0,[{var,{3966,16},'E'}]},
      [{block,0,[{debug_line,3967,1770},{atom,{3967,31},true}]},
       {generate_strict,
        {3967,27},
        {match,
         {3967,19},
         {tuple,{3967,19},[{var,{3967,20},'N'},{var,{3967,22},'A'}]},
         {var,{3967,25},'E'}},
        {var,{3967,31},'Exports0'}},
       {op,
        {3968,19},
        'not',
        {call,
         {3968,23},
         {remote,{3968,27},{atom,{3968,23},sets},{atom,{3968,28},is_element}},
         [{block,0,
           [{debug_line,3968,1771},
            {tuple,
             {3968,39},
             [{atom,{3968,39},b_local},
              {tuple,
               {3968,53},
               [{atom,{3968,53},b_literal},{var,{3968,68},'N'}]},
              {var,{3969,54},'A'}]}]},
          {var,{3969,58},'NIFsToExport'}]}}]}},
    {debug_line,3974,1772},
    {match,
     {3974,5},
     {var,{3974,5},'CallRestorer'},
     {'fun',
      {3975,9},
      {clauses,
       [{clause,
         {3975,12},
         [{match,
           {3975,13},
           {tuple,
            {3975,13},
            [{atom,{3975,13},b_set},
             {var,{3975,13},'_'},
             {var,{3975,13},'_'},
             {atom,{3975,23},call},
             {cons,
              {3975,33},
              {match,
               {3975,34},
               {tuple,
                {3975,34},
                [{atom,{3975,34},b_remote},
                 {var,{3975,34},'_'},
                 {var,{3975,49},'N'},
                 {var,{3975,57},'A'}]},
               {var,{3975,60},'Callee'}},
              {var,{3975,67},'Rest'}}]},
           {var,{3975,74},'I'}}],
         [],
         [{debug_line,3976,1773},
          {'case',
           {3976,17},
           {call,
            {3976,22},
            {remote,
             {3976,26},
             {atom,{3976,22},sets},
             {atom,{3976,27},is_element}},
            [{var,{3976,38},'Callee'},{var,{3976,46},'NIFs'}]},
           [{clause,
             {3977,21},
             [{atom,{3977,21},true}],
             [],
             [{debug_line,3978,1774},
              {block,
               {3978,25},
               [{match,
                 {3978,33},
                 {var,{3978,33},rec198},
                 {cons,
                  {3978,38},
                  {tuple,
                   {3978,39},
                   [{atom,{3978,39},b_local},
                    {var,{3978,53},'N'},
                    {var,{3978,61},'A'}]},
                  {var,{3978,64},'Rest'}}},
                {match,{3978,25},{var,{3978,25},rec199},{var,{3978,25},'I'}},
                {'case',
                 {3978,33},
                 {var,{3978,25},rec199},
                 [{clause,
                   {3978,33},
                   [{tuple,
                     {3978,33},
                     [{atom,{3978,33},b_set},
                      {var,{3978,33},'_'},
                      {var,{3978,33},'_'},
                      {var,{3978,33},'_'},
                      {var,{3978,33},'_'}]}],
                   [],
                   [{call,
                     {3978,33},
                     {remote,
                      {3978,33},
                      {atom,{3978,33},erlang},
                      {atom,{3978,33},setelement}},
                     [{integer,{3978,33},5},
                      {var,{3978,25},rec199},
                      {var,{3978,33},rec198}]}]},
                  {clause,
                   [{generated,true},{location,{3978,33}}],
                   [{var,[{generated,true},{location,{3978,33}}],'_'}],
                   [],
                   [{call,
                     [{generated,true},{location,{3978,33}}],
                     {remote,
                      [{generated,true},{location,{3978,33}}],
                      {atom,[{generated,true},{location,{3978,33}}],erlang},
                      {atom,[{generated,true},{location,{3978,33}}],error}},
                     [{tuple,
                       [{generated,true},{location,{3978,33}}],
                       [{atom,
                         [{generated,true},{location,{3978,33}}],
                         badrecord},
                        {var,{3978,25},rec199}]}]}]}]}]}]},
            {clause,
             {3979,21},
             [{atom,{3979,21},false}],
             [],
             [{debug_line,3980,1775},{var,{3980,25},'I'}]}]}]},
        {clause,
         {3982,12},
         [{var,{3982,13},'I'}],
         [],
         [{debug_line,3983,1776},{var,{3983,17},'I'}]}]}}},
    {debug_line,3985,1777},
    {match,
     {3985,5},
     {tuple,
      {3985,5},
      [{atom,{3985,5},b_module},
       {var,{3985,5},'_'},
       {var,{3985,5},'_'},
       {var,{3985,5},'_'},
       {var,{3985,5},'_'},
       {var,{3985,20},'Body'}]},
     {call,
      {3985,28},
      {atom,{3985,28},map_module_instrs},
      [{var,{3985,46},'CallRestorer'},{var,{3985,60},'Module0'}]}},
    {debug_line,3986,1778},
    {block,
     {3986,5},
     [{match,{3986,5},{var,{3986,5},rec200},{var,{3986,5},'Module0'}},
      {'case',
       {3986,22},
       {var,{3986,5},rec200},
       [{clause,
         {3986,22},
         [{tuple,
           {3986,22},
           [{atom,{3986,22},b_module},
            {var,{3986,22},'_'},
            {var,{3986,22},'_'},
            {var,{3986,22},'_'},
            {var,{3986,22},'_'},
            {var,{3986,22},'_'}]}],
         [],
         [{call,
           {3986,22},
           {remote,
            {3986,22},
            {atom,{3986,22},erlang},
            {atom,{3986,22},setelement}},
           [{integer,{3986,22},4},
            {call,
             {3986,38},
             {remote,
              {3986,38},
              {atom,{3986,38},erlang},
              {atom,{3986,38},setelement}},
             [{integer,{3986,38},6},
              {var,{3986,5},rec200},
              {var,{3986,43},'Body'}]},
            {var,{3986,30},'Exports'}]}]},
        {clause,
         [{generated,true},{location,{3986,22}}],
         [{var,[{generated,true},{location,{3986,22}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{3986,22}}],
           {remote,
            [{generated,true},{location,{3986,22}}],
            {atom,[{generated,true},{location,{3986,22}}],erlang},
            {atom,[{generated,true},{location,{3986,22}}],error}},
           [{tuple,
             [{generated,true},{location,{3986,22}}],
             [{atom,[{generated,true},{location,{3986,22}}],badrecord},
              {var,{3986,5},rec200}]}]}]}]}]}]}]}.
{function,
    {3991,1},
    is_nif,1,
    [{clause,
         {3991,1},
         [{var,{3991,1},'_'}],
         [[{call,
               {3991,1},
               {remote,
                   {3991,1},
                   {atom,{3991,1},fake},
                   {atom,{3991,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3991,1779},{atom,{3991,1},ignore}]},
     {clause,
         {3991,1},
         [{tuple,
              {3991,8},
              [{atom,{3991,8},b_function},
               {var,{3991,8},'_'},
               {var,{3991,8},'_'},
               {map,
                   {3991,23},
                   [{map_field_exact,
                        {3991,26},
                        {integer,{3991,25},0},
                        {tuple,
                            {3991,28},
                            [{atom,{3991,28},b_blk},
                             {var,{3991,28},'_'},
                             {cons,
                                 {3991,38},
                                 {tuple,
                                     {3991,39},
                                     [{atom,{3991,39},b_set},
                                      {var,{3991,39},'_'},
                                      {var,{3991,39},'_'},
                                      {atom,{3991,49},nif_start},
                                      {var,{3991,39},'_'}]},
                                 {var,{3991,60},'_'}},
                             {var,{3991,28},'_'}]}}]},
               {var,{3991,8},'_'}]}],
         [],
         [{debug_line,3992,1780},{atom,{3992,5},true}]},
     {clause,
         {3993,1},
         [{var,{3993,8},'_'}],
         [],
         [{debug_line,3994,1781},{atom,{3994,5},false}]}]}.
{eof,{3995,1}}.
