{attribute,{1,1},file,{"core_alias_SUITE.erl",1}}.
{attribute,{20,2},module,core_alias_SUITE}.
{attribute,{22,2},
           export,
           [{all,0},
            {suite,0},
            {groups,0},
            {init_per_suite,1},
            {end_per_suite,1},
            {init_per_group,2},
            {end_per_group,2},
            {tuples,1},
            {cons,1},
            {catastrophic_runtime,1},
            {coverage,1}]}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,99,111,109,109,
             111,110,95,116,101,115,116,45,49,46,50,55,46,54,47,105,110,99,
             108,117,100,101,47,99,116,46,104,114,108],
            1}}.
{attribute,{28,1},file,{"core_alias_SUITE.erl",28}}.
{function,
    {29,1},
    suite,0,
    [{clause,
         {29,1},
         [],
         [[{call,
               {29,1},
               {remote,
                   {29,1},
                   {atom,{29,1},fake},
                   {atom,{29,1},is_beam_bif_info}},
               []}]],
         [{debug_line,29,1},{atom,{29,1},ignore}]},
     {clause,
         {29,1},
         [],[],
         [{debug_line,29,2},
          {cons,
              {29,12},
              {tuple,
                  {29,13},
                  [{atom,{29,14},ct_hooks},
                   {cons,
                       {29,23},
                       {atom,{29,24},ts_install_cth},
                       {nil,{29,38}}}]},
              {nil,{29,40}}}]}]}.
{function,{31,1},
          all,0,
          [{clause,{31,1},
                   [],
                   [[{call,{31,1},
                           {remote,{31,1},
                                   {atom,{31,1},fake},
                                   {atom,{31,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,31,3},{atom,{31,1},ignore}]},
           {clause,{31,1},
                   [],[],
                   [{debug_line,32,4},
                    {cons,{32,5},
                          {tuple,{32,6},
                                 [{atom,{32,7},group},{atom,{32,13},p}]},
                          {nil,{32,15}}}]}]}.
{function,
    {34,1},
    groups,0,
    [{clause,
         {34,1},
         [],
         [[{call,
               {34,1},
               {remote,
                   {34,1},
                   {atom,{34,1},fake},
                   {atom,{34,1},is_beam_bif_info}},
               []}]],
         [{debug_line,34,5},{atom,{34,1},ignore}]},
     {clause,
         {34,1},
         [],[],
         [{debug_line,35,6},
          {cons,
              {35,5},
              {tuple,
                  {35,6},
                  [{atom,{35,7},p},
                   {cons,{35,9},{atom,{35,10},parallel},{nil,{35,18}}},
                   {cons,
                       {36,7},
                       {atom,{36,8},tuples},
                       {cons,
                           {36,16},
                           {atom,{36,16},cons},
                           {cons,
                               {36,22},
                               {atom,{36,22},catastrophic_runtime},
                               {cons,
                                   {36,44},
                                   {atom,{36,44},coverage},
                                   {nil,{36,52}}}}}}]},
              {nil,{36,54}}}]}]}.
{function,{38,1},
          init_per_suite,1,
          [{clause,{38,1},
                   [{var,{38,1},'_'}],
                   [[{call,{38,1},
                           {remote,{38,1},
                                   {atom,{38,1},fake},
                                   {atom,{38,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,38,7},{atom,{38,1},ignore}]},
           {clause,{38,1},
                   [{var,{38,16},'Config'}],
                   [],
                   [{debug_line,39,8},
                    {call,{39,5},
                          {remote,{39,13},
                                  {atom,{39,5},test_lib},
                                  {atom,{39,14},recompile}},
                          [{atom,{39,25},core_alias_SUITE}]},
                    {debug_line,40,9},
                    {var,{40,5},'Config'}]}]}.
{function,{42,1},
          end_per_suite,1,
          [{clause,{42,1},
                   [{var,{42,1},'_'}],
                   [[{call,{42,1},
                           {remote,{42,1},
                                   {atom,{42,1},fake},
                                   {atom,{42,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,42,10},{atom,{42,1},ignore}]},
           {clause,{42,1},
                   [{var,{42,15},'_Config'}],
                   [],
                   [{debug_line,43,11},{atom,{43,5},ok}]}]}.
{function,{45,1},
          init_per_group,2,
          [{clause,{45,1},
                   [{var,{45,1},'_'},{var,{45,1},'_'}],
                   [[{call,{45,1},
                           {remote,{45,1},
                                   {atom,{45,1},fake},
                                   {atom,{45,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,45,12},{atom,{45,1},ignore}]},
           {clause,{45,1},
                   [{var,{45,16},'_GroupName'},{var,{45,28},'Config'}],
                   [],
                   [{debug_line,46,13},{var,{46,5},'Config'}]}]}.
{function,{48,1},
          end_per_group,2,
          [{clause,{48,1},
                   [{var,{48,1},'_'},{var,{48,1},'_'}],
                   [[{call,{48,1},
                           {remote,{48,1},
                                   {atom,{48,1},fake},
                                   {atom,{48,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,48,14},{atom,{48,1},ignore}]},
           {clause,{48,1},
                   [{var,{48,15},'_GroupName'},{var,{48,27},'Config'}],
                   [],
                   [{debug_line,49,15},{var,{49,5},'Config'}]}]}.
{function,{51,1},
          id,1,
          [{clause,{51,1},
                   [{var,{51,1},'_'}],
                   [[{call,{51,1},
                           {remote,{51,1},
                                   {atom,{51,1},fake},
                                   {atom,{51,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,51,16},{atom,{51,1},ignore}]},
           {clause,{51,1},
                   [{var,{51,4},'X'}],
                   [],
                   [{debug_line,51,17},{var,{51,10},'X'}]}]}.
{function,
 {53,1},
 tuples,1,
 [{clause,
   {53,1},
   [{var,{53,1},'_'}],
   [[{call,
      {53,1},
      {remote,{53,1},{atom,{53,1},fake},{atom,{53,1},is_beam_bif_info}},
      []}]],
   [{debug_line,53,18},{atom,{53,1},ignore}]},
  {clause,
   {53,1},
   [{var,{53,8},'Config'}],
   [[{call,
      {53,21},
      {remote,{53,21},{atom,{53,21},erlang},{atom,{53,21},is_list}},
      [{var,{53,29},'Config'}]}]],
   [{debug_line,54,19},
    {match,
     {54,5},
     {var,{54,5},'Tuple'},
     {call,
      {54,13},
      {atom,{54,13},id},
      [{block,0,
        [{tuple,
          {54,16},
          [{atom,{54,17},ok},
           {call,{54,20},{atom,{54,20},id},[{atom,{54,23},value}]}]}]}]}},
    {debug_line,56,20},
    {match,
     {56,5},
     {atom,{56,5},true},
     {call,
      {56,12},
      {remote,{56,22},{atom,{56,12},erts_debug},{atom,{56,23},same}},
      [{var,{56,28},'Tuple'},
       {block,0,
        [{call,
          {56,35},
          {atom,{56,35},simple_tuple},
          [{var,{56,48},'Tuple'}]}]}]}},
    {debug_line,57,21},
    {match,
     {57,5},
     {atom,{57,5},true},
     {call,
      {57,12},
      {remote,{57,22},{atom,{57,12},erts_debug},{atom,{57,23},same}},
      [{var,{57,28},'Tuple'},
       {block,0,
        [{call,
          {57,35},
          {atom,{57,35},simple_tuple_in_map},
          [{block,0,
            [{map,
              {57,55},
              [{map_field_assoc,
                {57,63},
                {atom,{57,57},hello},
                {var,{57,66},'Tuple'}}]}]}]}]}]}},
    {debug_line,58,22},
    {match,
     {58,5},
     {atom,{58,5},true},
     {call,
      {58,12},
      {remote,{58,22},{atom,{58,12},erts_debug},{atom,{58,23},same}},
      [{var,{58,28},'Tuple'},
       {block,0,
        [{call,
          {58,35},
          {atom,{58,35},simple_tuple_case_repeated},
          [{var,{58,62},'Tuple'},{var,{58,69},'Tuple'}]}]}]}},
    {debug_line,59,23},
    {match,
     {59,5},
     {atom,{59,5},true},
     {call,
      {59,12},
      {remote,{59,22},{atom,{59,12},erts_debug},{atom,{59,23},same}},
      [{var,{59,28},'Tuple'},
       {block,0,
        [{call,
          {59,35},
          {atom,{59,35},simple_tuple_fun_repeated},
          [{var,{59,61},'Tuple'},{var,{59,68},'Tuple'}]}]}]}},
    {debug_line,60,24},
    {match,
     {60,5},
     {atom,{60,5},true},
     {call,
      {60,12},
      {remote,{60,22},{atom,{60,12},erts_debug},{atom,{60,23},same}},
      [{var,{60,28},'Tuple'},
       {block,0,
        [{call,
          {60,35},
          {atom,{60,35},simple_tuple_twice_head},
          [{var,{60,59},'Tuple'},{var,{60,66},'Tuple'}]}]}]}},
    {debug_line,62,25},
    {match,
     {62,5},
     {tuple,{62,5},[{var,{62,6},'Tuple1'},{var,{62,14},'Tuple2'}]},
     {call,
      {62,24},
      {atom,{62,24},id},
      [{block,0,
        [{call,
          {62,27},
          {atom,{62,27},simple_tuple_twice_body},
          [{var,{62,51},'Tuple'}]}]}]}},
    {debug_line,63,26},
    {match,
     {63,5},
     {atom,{63,5},true},
     {call,
      {63,12},
      {remote,{63,22},{atom,{63,12},erts_debug},{atom,{63,23},same}},
      [{var,{63,28},'Tuple'},{var,{63,35},'Tuple1'}]}},
    {debug_line,64,27},
    {match,
     {64,5},
     {atom,{64,5},true},
     {call,
      {64,12},
      {remote,{64,22},{atom,{64,12},erts_debug},{atom,{64,23},same}},
      [{var,{64,28},'Tuple'},{var,{64,35},'Tuple2'}]}},
    {debug_line,66,28},
    {match,
     {66,5},
     {var,{66,5},'Nested'},
     {call,
      {66,14},
      {atom,{66,14},id},
      [{block,0,
        [{tuple,{66,17},[{atom,{66,18},nested},{var,{66,25},'Tuple'}]}]}]}},
    {debug_line,67,29},
    {match,
     {67,5},
     {atom,{67,5},true},
     {call,
      {67,12},
      {remote,{67,22},{atom,{67,12},erts_debug},{atom,{67,23},same}},
      [{var,{67,28},'Tuple'},
       {block,0,
        [{call,
          {67,35},
          {atom,{67,35},nested_tuple_part},
          [{var,{67,53},'Nested'}]}]}]}},
    {debug_line,68,30},
    {match,
     {68,5},
     {atom,{68,5},true},
     {call,
      {68,12},
      {remote,{68,22},{atom,{68,12},erts_debug},{atom,{68,23},same}},
      [{var,{68,28},'Nested'},
       {block,0,
        [{call,
          {68,36},
          {atom,{68,36},nested_tuple_whole},
          [{var,{68,55},'Nested'}]}]}]}},
    {debug_line,69,31},
    {match,
     {69,5},
     {atom,{69,5},true},
     {call,
      {69,12},
      {remote,{69,22},{atom,{69,12},erts_debug},{atom,{69,23},same}},
      [{var,{69,28},'Nested'},
       {block,0,
        [{call,
          {69,36},
          {atom,{69,36},nested_tuple_with_alias},
          [{var,{69,60},'Nested'}]}]}]}},
    {debug_line,71,32},
    {match,
     {71,5},
     {atom,{71,5},true},
     {call,
      {71,12},
      {remote,{71,22},{atom,{71,12},erts_debug},{atom,{71,23},same}},
      [{var,{71,28},'Tuple'},
       {block,0,
        [{call,
          {71,35},
          {atom,{71,35},tuple_rebinding_after},
          [{var,{71,57},'Tuple'}]}]}]}},
    {debug_line,73,33},
    {match,
     {73,5},
     {var,{73,5},'Tuple'},
     {call,
      {73,13},
      {atom,{73,13},id},
      [{block,0,
        [{call,
          {73,16},
          {atom,{73,16},unaliased_tuple_rebinding_before},
          [{var,{73,49},'Tuple'}]}]}]}},
    {debug_line,74,34},
    {match,
     {74,5},
     {atom,{74,5},false},
     {call,
      {74,13},
      {remote,{74,23},{atom,{74,13},erts_debug},{atom,{74,24},same}},
      [{var,{74,29},'Tuple'},
       {block,0,
        [{call,
          {74,36},
          {atom,{74,36},unaliased_tuple_rebinding_before},
          [{var,{74,69},'Tuple'}]}]}]}},
    {debug_line,75,35},
    {match,
     {75,5},
     {var,{75,5},'Nested'},
     {call,
      {75,14},
      {atom,{75,14},id},
      [{block,0,
        [{call,
          {75,17},
          {atom,{75,17},unaliased_literal_tuple_head},
          [{var,{75,46},'Nested'}]}]}]}},
    {debug_line,76,36},
    {match,
     {76,5},
     {atom,{76,5},false},
     {call,
      {76,13},
      {remote,{76,23},{atom,{76,13},erts_debug},{atom,{76,24},same}},
      [{var,{76,29},'Nested'},
       {block,0,
        [{call,
          {76,37},
          {atom,{76,37},unaliased_literal_tuple_head},
          [{var,{76,66},'Nested'}]}]}]}},
    {debug_line,77,37},
    {match,
     {77,5},
     {var,{77,5},'Nested'},
     {call,
      {77,14},
      {atom,{77,14},id},
      [{block,0,
        [{call,
          {77,17},
          {atom,{77,17},unaliased_literal_tuple_body},
          [{var,{77,46},'Nested'}]}]}]}},
    {debug_line,78,38},
    {match,
     {78,5},
     {atom,{78,5},false},
     {call,
      {78,13},
      {remote,{78,23},{atom,{78,13},erts_debug},{atom,{78,24},same}},
      [{var,{78,29},'Nested'},
       {block,0,
        [{call,
          {78,37},
          {atom,{78,37},unaliased_literal_tuple_body},
          [{var,{78,66},'Nested'}]}]}]}},
    {debug_line,79,39},
    {match,
     {79,5},
     {var,{79,5},'Nested'},
     {call,
      {79,14},
      {atom,{79,14},id},
      [{block,0,
        [{call,
          {79,17},
          {atom,{79,17},unaliased_different_var_tuple},
          [{var,{79,47},'Nested'},{var,{79,55},'Tuple'}]}]}]}},
    {debug_line,80,40},
    {match,
     {80,5},
     {atom,{80,5},false},
     {call,
      {80,13},
      {remote,{80,23},{atom,{80,13},erts_debug},{atom,{80,24},same}},
      [{var,{80,29},'Nested'},
       {block,0,
        [{call,
          {80,37},
          {atom,{80,37},unaliased_different_var_tuple},
          [{var,{80,67},'Nested'},{var,{80,75},'Tuple'}]}]}]}}]}]}.
{function,{82,1},
          simple_tuple,1,
          [{clause,{82,1},
                   [{var,{82,1},'_'}],
                   [[{call,{82,1},
                           {remote,{82,1},
                                   {atom,{82,1},fake},
                                   {atom,{82,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,82,41},{atom,{82,1},ignore}]},
           {clause,{82,1},
                   [{tuple,{82,14},[{atom,{82,15},ok},{var,{82,18},'X'}]}],
                   [],
                   [{debug_line,83,42},
                    {tuple,{83,5},[{atom,{83,6},ok},{var,{83,9},'X'}]}]}]}.
{function,{84,1},
          simple_tuple_twice_head,2,
          [{clause,{84,1},
                   [{var,{84,1},'_'},{var,{84,1},'_'}],
                   [[{call,{84,1},
                           {remote,{84,1},
                                   {atom,{84,1},fake},
                                   {atom,{84,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,84,43},{atom,{84,1},ignore}]},
           {clause,{84,1},
                   [{tuple,{84,25},[{atom,{84,26},ok},{var,{84,29},'X'}]},
                    {tuple,{84,33},[{atom,{84,34},ok},{var,{84,37},'X'}]}],
                   [],
                   [{debug_line,85,44},
                    {tuple,{85,5},[{atom,{85,6},ok},{var,{85,9},'X'}]}]}]}.
{function,{86,1},
          simple_tuple_twice_body,1,
          [{clause,{86,1},
                   [{var,{86,1},'_'}],
                   [[{call,{86,1},
                           {remote,{86,1},
                                   {atom,{86,1},fake},
                                   {atom,{86,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,86,45},{atom,{86,1},ignore}]},
           {clause,{86,1},
                   [{tuple,{86,25},[{atom,{86,26},ok},{var,{86,29},'X'}]}],
                   [],
                   [{debug_line,87,46},
                    {tuple,{87,5},
                           [{tuple,{87,6},
                                   [{atom,{87,7},ok},{var,{87,10},'X'}]},
                            {tuple,{87,13},
                                   [{atom,{87,14},ok},
                                    {var,{87,17},'X'}]}]}]}]}.
{function,
    {88,1},
    simple_tuple_in_map,1,
    [{clause,
         {88,1},
         [{var,{88,1},'_'}],
         [[{call,
               {88,1},
               {remote,
                   {88,1},
                   {atom,{88,1},fake},
                   {atom,{88,1},is_beam_bif_info}},
               []}]],
         [{debug_line,88,47},{atom,{88,1},ignore}]},
     {clause,
         {88,1},
         [{map,
              {88,21},
              [{map_field_exact,
                   {88,29},
                   {atom,{88,23},hello},
                   {tuple,{88,32},[{atom,{88,33},ok},{var,{88,36},'X'}]}}]}],
         [],
         [{debug_line,89,48},
          {tuple,{89,5},[{atom,{89,6},ok},{var,{89,9},'X'}]}]}]}.
{function,
    {90,1},
    simple_tuple_fun_repeated,2,
    [{clause,
         {90,1},
         [{var,{90,1},'_'},{var,{90,1},'_'}],
         [[{call,
               {90,1},
               {remote,
                   {90,1},
                   {atom,{90,1},fake},
                   {atom,{90,1},is_beam_bif_info}},
               []}]],
         [{debug_line,90,49},{atom,{90,1},ignore}]},
     {clause,
         {90,1},
         [{tuple,{90,27},[{atom,{90,28},ok},{var,{90,31},'X'}]},
          {var,{90,35},'Y'}],
         [],
         [{debug_line,91,50},
          {call,
              {91,5},
              {remote,{91,7},{atom,{91,5},io},{atom,{91,8},format}},
              [{block,0,[{string,{91,15},"~p~n"}]},
               {block,0,[{cons,{91,23},{var,{91,24},'X'},{nil,{91,25}}}]}]},
          {debug_line,92,51},
          {call,
              {92,6},
              {'fun',
                  {92,6},
                  {clauses,
                      [{clause,
                           {92,9},
                           [{tuple,
                                {92,10},
                                [{atom,{92,11},ok},{var,{92,14},'X'}]}],
                           [],
                           [{tuple,
                                {92,21},
                                [{atom,{92,22},ok},{var,{92,25},'X'}]}]}]}},
              [{var,{92,33},'Y'}]}]}]}.
{function,
    {93,1},
    simple_tuple_case_repeated,2,
    [{clause,
         {93,1},
         [{var,{93,1},'_'},{var,{93,1},'_'}],
         [[{call,
               {93,1},
               {remote,
                   {93,1},
                   {atom,{93,1},fake},
                   {atom,{93,1},is_beam_bif_info}},
               []}]],
         [{debug_line,93,52},{atom,{93,1},ignore}]},
     {clause,
         {93,1},
         [{tuple,{93,28},[{atom,{93,29},ok},{var,{93,32},'X'}]},
          {var,{93,36},'Y'}],
         [],
         [{debug_line,94,53},
          {call,
              {94,5},
              {remote,{94,7},{atom,{94,5},io},{atom,{94,8},format}},
              [{block,0,[{string,{94,15},"~p~n"}]},
               {block,0,[{cons,{94,23},{var,{94,24},'X'},{nil,{94,25}}}]}]},
          {debug_line,95,54},
          {'case',
              {95,5},
              {var,{95,10},'Y'},
              [{clause,
                   {95,15},
                   [{tuple,{95,15},[{atom,{95,16},ok},{var,{95,19},'X'}]}],
                   [],
                   [{tuple,
                        {95,25},
                        [{atom,{95,26},ok},{var,{95,29},'X'}]}]}]}]}]}.
{function,{97,1},
          nested_tuple_part,1,
          [{clause,{97,1},
                   [{var,{97,1},'_'}],
                   [[{call,{97,1},
                           {remote,{97,1},
                                   {atom,{97,1},fake},
                                   {atom,{97,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,97,55},{atom,{97,1},ignore}]},
           {clause,{97,1},
                   [{tuple,{97,19},
                           [{atom,{97,20},nested},
                            {tuple,{97,27},
                                   [{atom,{97,28},ok},{var,{97,31},'X'}]}]}],
                   [],
                   [{debug_line,98,56},
                    {tuple,{98,5},[{atom,{98,6},ok},{var,{98,9},'X'}]}]}]}.
{function,{99,1},
          nested_tuple_whole,1,
          [{clause,{99,1},
                   [{var,{99,1},'_'}],
                   [[{call,{99,1},
                           {remote,{99,1},
                                   {atom,{99,1},fake},
                                   {atom,{99,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,99,57},{atom,{99,1},ignore}]},
           {clause,{99,1},
                   [{tuple,{99,20},
                           [{atom,{99,21},nested},
                            {tuple,{99,28},
                                   [{atom,{99,29},ok},{var,{99,32},'X'}]}]}],
                   [],
                   [{debug_line,100,58},
                    {tuple,{100,5},
                           [{atom,{100,6},nested},
                            {tuple,{100,13},
                                   [{atom,{100,14},ok},
                                    {var,{100,17},'X'}]}]}]}]}.
{function,
    {101,1},
    nested_tuple_with_alias,1,
    [{clause,
         {101,1},
         [{var,{101,1},'_'}],
         [[{call,
               {101,1},
               {remote,
                   {101,1},
                   {atom,{101,1},fake},
                   {atom,{101,1},is_beam_bif_info}},
               []}]],
         [{debug_line,101,59},{atom,{101,1},ignore}]},
     {clause,
         {101,1},
         [{tuple,
              {101,25},
              [{atom,{101,26},nested},
               {match,
                   {101,33},
                   {tuple,{101,33},[{atom,{101,34},ok},{var,{101,37},'_'}]},
                   {var,{101,40},'Y'}}]}],
         [],
         [{debug_line,102,60},
          {tuple,{102,5},[{atom,{102,6},nested},{var,{102,13},'Y'}]}]}]}.
{function,
    {104,1},
    tuple_rebinding_after,1,
    [{clause,
         {104,1},
         [{var,{104,1},'_'}],
         [[{call,
               {104,1},
               {remote,
                   {104,1},
                   {atom,{104,1},fake},
                   {atom,{104,1},is_beam_bif_info}},
               []}]],
         [{debug_line,104,61},{atom,{104,1},ignore}]},
     {clause,
         {104,1},
         [{var,{104,23},'Y'}],
         [],
         [{debug_line,105,62},
          {call,
              {105,6},
              {'fun',
                  {105,6},
                  {clauses,
                      [{clause,
                           {105,9},
                           [{var,{105,10},'X'}],
                           [],
                           [{tuple,
                                {105,16},
                                [{atom,{105,17},ok},{var,{105,20},'X'}]}]}]}},
              [{var,{105,28},'Y'}]},
          {debug_line,106,63},
          {'case',
              {106,5},
              {var,{106,10},'Y'},
              [{clause,
                   {106,15},
                   [{tuple,{106,15},[{atom,{106,16},ok},{var,{106,19},'X'}]}],
                   [],
                   [{tuple,
                        {106,25},
                        [{atom,{106,26},ok},{var,{106,29},'X'}]}]}]}]}]}.
{function,
    {107,1},
    unaliased_tuple_rebinding_before,1,
    [{clause,
         {107,1},
         [{var,{107,1},'_'}],
         [[{call,
               {107,1},
               {remote,
                   {107,1},
                   {atom,{107,1},fake},
                   {atom,{107,1},is_beam_bif_info}},
               []}]],
         [{debug_line,107,64},{atom,{107,1},ignore}]},
     {clause,
         {107,1},
         [{tuple,{107,34},[{atom,{107,35},ok},{var,{107,38},'X'}]}],
         [],
         [{debug_line,108,65},
          {call,
              {108,5},
              {remote,{108,7},{atom,{108,5},io},{atom,{108,8},format}},
              [{block,0,[{string,{108,15},"~p~n"}]},
               {block,0,[{cons,{108,23},{var,{108,24},'X'},{nil,{108,25}}}]}]},
          {debug_line,109,66},
          {call,
              {109,6},
              {'fun',
                  {109,6},
                  {clauses,
                      [{clause,
                           {109,9},
                           [{var,{109,10},'X'}],
                           [],
                           [{tuple,
                                {109,16},
                                [{atom,{109,17},ok},{var,{109,20},'X'}]}]}]}},
              [{atom,{109,28},value}]}]}]}.
{function,
    {110,1},
    unaliased_literal_tuple_head,1,
    [{clause,
         {110,1},
         [{var,{110,1},'_'}],
         [[{call,
               {110,1},
               {remote,
                   {110,1},
                   {atom,{110,1},fake},
                   {atom,{110,1},is_beam_bif_info}},
               []}]],
         [{debug_line,110,67},{atom,{110,1},ignore}]},
     {clause,
         {110,1},
         [{tuple,
              {110,30},
              [{atom,{110,31},nested},
               {match,
                   {110,38},
                   {tuple,{110,38},[{atom,{110,39},ok},{atom,{110,42},value}]},
                   {var,{110,49},'X'}}]}],
         [],
         [{debug_line,111,68},
          {call,
              {111,5},
              {remote,{111,7},{atom,{111,5},io},{atom,{111,8},format}},
              [{block,0,[{string,{111,15},"~p~n"}]},
               {block,0,[{cons,{111,23},{var,{111,24},'X'},{nil,{111,25}}}]}]},
          {debug_line,112,69},
          {tuple,
              {112,5},
              [{atom,{112,6},nested},
               {tuple,
                   {112,13},
                   [{atom,{112,14},ok},{atom,{112,17},value}]}]}]}]}.
{function,
    {113,1},
    unaliased_literal_tuple_body,1,
    [{clause,
         {113,1},
         [{var,{113,1},'_'}],
         [[{call,
               {113,1},
               {remote,
                   {113,1},
                   {atom,{113,1},fake},
                   {atom,{113,1},is_beam_bif_info}},
               []}]],
         [{debug_line,113,70},{atom,{113,1},ignore}]},
     {clause,
         {113,1},
         [{tuple,
              {113,30},
              [{atom,{113,31},nested},
               {match,
                   {113,38},
                   {tuple,{113,38},[{atom,{113,39},ok},{atom,{113,42},value}]},
                   {var,{113,49},'X'}}]}],
         [],
         [{debug_line,114,71},
          {match,
              {114,5},
              {var,{114,5},'Res'},
              {tuple,
                  {114,11},
                  [{atom,{114,12},nested},
                   {match,
                       {114,19},
                       {var,{114,19},'Y'},
                       {tuple,
                           {114,21},
                           [{atom,{114,22},ok},{atom,{114,25},value}]}}]}},
          {debug_line,115,72},
          {call,
              {115,5},
              {remote,{115,7},{atom,{115,5},io},{atom,{115,8},format}},
              [{block,0,[{string,{115,15},"~p~n"}]},
               {block,0,
                   [{cons,
                        {115,23},
                        {cons,
                            {115,24},
                            {var,{115,25},'X'},
                            {cons,{115,27},{var,{115,27},'Y'},{nil,{115,28}}}},
                        {nil,{115,29}}}]}]},
          {debug_line,116,73},
          {var,{116,5},'Res'}]}]}.
{function,
    {117,1},
    unaliased_different_var_tuple,2,
    [{clause,
         {117,1},
         [{var,{117,1},'_'},{var,{117,1},'_'}],
         [[{call,
               {117,1},
               {remote,
                   {117,1},
                   {atom,{117,1},fake},
                   {atom,{117,1},is_beam_bif_info}},
               []}]],
         [{debug_line,117,74},{atom,{117,1},ignore}]},
     {clause,
         {117,1},
         [{tuple,
              {117,31},
              [{atom,{117,32},nested},
               {match,
                   {117,39},
                   {tuple,{117,39},[{atom,{117,40},ok},{atom,{117,43},value}]},
                   {var,{117,50},'X'}}]},
          {var,{117,54},'Y'}],
         [],
         [{debug_line,118,75},
          {call,
              {118,5},
              {remote,{118,7},{atom,{118,5},io},{atom,{118,8},format}},
              [{block,0,[{string,{118,15},"~p~n"}]},
               {block,0,[{cons,{118,23},{var,{118,24},'X'},{nil,{118,25}}}]}]},
          {debug_line,119,76},
          {tuple,{119,5},[{atom,{119,6},nested},{var,{119,13},'Y'}]}]}]}.
{function,
 {121,1},
 cons,1,
 [{clause,
   {121,1},
   [{var,{121,1},'_'}],
   [[{call,
      {121,1},
      {remote,{121,1},{atom,{121,1},fake},{atom,{121,1},is_beam_bif_info}},
      []}]],
   [{debug_line,121,77},{atom,{121,1},ignore}]},
  {clause,
   {121,1},
   [{var,{121,6},'Config'}],
   [[{call,
      {121,19},
      {remote,{121,19},{atom,{121,19},erlang},{atom,{121,19},is_list}},
      [{var,{121,27},'Config'}]}]],
   [{debug_line,122,78},
    {match,
     {122,5},
     {var,{122,5},'Cons'},
     {call,
      {122,12},
      {atom,{122,12},id},
      [{block,0,
        [{cons,
          {122,15},
          {atom,{122,16},ok},
          {call,{122,19},{atom,{122,19},id},[{atom,{122,22},value}]}}]}]}},
    {debug_line,124,79},
    {match,
     {124,5},
     {atom,{124,5},true},
     {call,
      {124,12},
      {remote,{124,22},{atom,{124,12},erts_debug},{atom,{124,23},same}},
      [{var,{124,28},'Cons'},
       {block,0,
        [{call,
          {124,34},
          {atom,{124,34},simple_cons},
          [{var,{124,46},'Cons'}]}]}]}},
    {debug_line,125,80},
    {match,
     {125,5},
     {atom,{125,5},true},
     {call,
      {125,12},
      {remote,{125,22},{atom,{125,12},erts_debug},{atom,{125,23},same}},
      [{var,{125,28},'Cons'},
       {block,0,
        [{call,
          {125,34},
          {atom,{125,34},simple_cons_in_map},
          [{block,0,
            [{map,
              {125,53},
              [{map_field_assoc,
                {125,61},
                {atom,{125,55},hello},
                {var,{125,64},'Cons'}}]}]}]}]}]}},
    {debug_line,126,81},
    {match,
     {126,5},
     {atom,{126,5},true},
     {call,
      {126,12},
      {remote,{126,22},{atom,{126,12},erts_debug},{atom,{126,23},same}},
      [{var,{126,28},'Cons'},
       {block,0,
        [{call,
          {126,34},
          {atom,{126,34},simple_cons_case_repeated},
          [{var,{126,60},'Cons'},{var,{126,66},'Cons'}]}]}]}},
    {debug_line,127,82},
    {match,
     {127,5},
     {atom,{127,5},true},
     {call,
      {127,12},
      {remote,{127,22},{atom,{127,12},erts_debug},{atom,{127,23},same}},
      [{var,{127,28},'Cons'},
       {block,0,
        [{call,
          {127,34},
          {atom,{127,34},simple_cons_fun_repeated},
          [{var,{127,59},'Cons'},{var,{127,65},'Cons'}]}]}]}},
    {debug_line,128,83},
    {match,
     {128,5},
     {atom,{128,5},true},
     {call,
      {128,12},
      {remote,{128,22},{atom,{128,12},erts_debug},{atom,{128,23},same}},
      [{var,{128,28},'Cons'},
       {block,0,
        [{call,
          {128,34},
          {atom,{128,34},simple_cons_twice_head},
          [{var,{128,57},'Cons'},{var,{128,63},'Cons'}]}]}]}},
    {debug_line,130,84},
    {match,
     {130,5},
     {tuple,{130,5},[{var,{130,6},'Cons1'},{var,{130,12},'Cons2'}]},
     {call,
      {130,21},
      {atom,{130,21},id},
      [{block,0,
        [{call,
          {130,24},
          {atom,{130,24},simple_cons_twice_body},
          [{var,{130,47},'Cons'}]}]}]}},
    {debug_line,131,85},
    {match,
     {131,5},
     {atom,{131,5},true},
     {call,
      {131,12},
      {remote,{131,22},{atom,{131,12},erts_debug},{atom,{131,23},same}},
      [{var,{131,28},'Cons'},{var,{131,34},'Cons1'}]}},
    {debug_line,132,86},
    {match,
     {132,5},
     {atom,{132,5},true},
     {call,
      {132,12},
      {remote,{132,22},{atom,{132,12},erts_debug},{atom,{132,23},same}},
      [{var,{132,28},'Cons'},{var,{132,34},'Cons2'}]}},
    {debug_line,134,87},
    {match,
     {134,5},
     {var,{134,5},'Nested'},
     {call,
      {134,14},
      {atom,{134,14},id},
      [{block,0,
        [{cons,
          {134,17},
          {atom,{134,18},nested},
          {cons,{134,25},{var,{134,25},'Cons'},{nil,{134,29}}}}]}]}},
    {debug_line,135,88},
    {match,
     {135,5},
     {atom,{135,5},true},
     {call,
      {135,12},
      {remote,{135,22},{atom,{135,12},erts_debug},{atom,{135,23},same}},
      [{var,{135,28},'Cons'},
       {block,0,
        [{call,
          {135,34},
          {atom,{135,34},nested_cons_part},
          [{var,{135,51},'Nested'}]}]}]}},
    {debug_line,136,89},
    {match,
     {136,5},
     {atom,{136,5},true},
     {call,
      {136,12},
      {remote,{136,22},{atom,{136,12},erts_debug},{atom,{136,23},same}},
      [{var,{136,28},'Nested'},
       {block,0,
        [{call,
          {136,36},
          {atom,{136,36},nested_cons_whole},
          [{var,{136,54},'Nested'}]}]}]}},
    {debug_line,137,90},
    {match,
     {137,5},
     {atom,{137,5},true},
     {call,
      {137,12},
      {remote,{137,22},{atom,{137,12},erts_debug},{atom,{137,23},same}},
      [{var,{137,28},'Nested'},
       {block,0,
        [{call,
          {137,36},
          {atom,{137,36},nested_cons_with_alias},
          [{var,{137,59},'Nested'}]}]}]}},
    {debug_line,138,91},
    {match,
     {138,5},
     {atom,{138,5},true},
     {call,
      {138,12},
      {remote,{138,22},{atom,{138,12},erts_debug},{atom,{138,23},same}},
      [{var,{138,28},'Cons'},
       {block,0,
        [{call,
          {138,34},
          {atom,{138,34},cons_rebinding_after},
          [{var,{138,55},'Cons'}]}]}]}},
    {debug_line,140,92},
    {match,
     {140,5},
     {var,{140,5},'Unstripped'},
     {call,
      {140,18},
      {atom,{140,18},id},
      [{block,0,
        [{cons,
          {140,21},
          {atom,{140,22},a},
          {cons,{140,24},{atom,{140,24},b},{nil,{140,25}}}}]}]}},
    {debug_line,141,93},
    {match,
     {141,5},
     {var,{141,5},'Stripped'},
     {call,
      {141,16},
      {atom,{141,16},id},
      [{block,0,
        [{call,
          {141,19},
          {atom,{141,19},cons_with_binary},
          [{block,0,
            [{cons,
              {141,36},
              {bin,{141,37},[]},
              {var,{141,42},'Unstripped'}}]}]}]}]}},
    {debug_line,142,94},
    {match,
     {142,5},
     {atom,{142,5},true},
     {call,
      {142,12},
      {remote,{142,22},{atom,{142,12},erts_debug},{atom,{142,23},same}},
      [{var,{142,28},'Unstripped'},{var,{142,40},'Stripped'}]}},
    {debug_line,144,95},
    {match,
     {144,5},
     {var,{144,5},'Cons'},
     {call,
      {144,12},
      {atom,{144,12},id},
      [{block,0,
        [{call,
          {144,15},
          {atom,{144,15},unaliased_cons_rebinding_before},
          [{var,{144,47},'Cons'}]}]}]}},
    {debug_line,145,96},
    {match,
     {145,5},
     {atom,{145,5},false},
     {call,
      {145,13},
      {remote,{145,23},{atom,{145,13},erts_debug},{atom,{145,24},same}},
      [{var,{145,29},'Cons'},
       {block,0,
        [{call,
          {145,35},
          {atom,{145,35},unaliased_cons_rebinding_before},
          [{var,{145,67},'Cons'}]}]}]}},
    {debug_line,146,97},
    {match,
     {146,5},
     {var,{146,5},'Nested'},
     {call,
      {146,14},
      {atom,{146,14},id},
      [{block,0,
        [{call,
          {146,17},
          {atom,{146,17},unaliased_literal_cons_head},
          [{var,{146,45},'Nested'}]}]}]}},
    {debug_line,147,98},
    {match,
     {147,5},
     {atom,{147,5},false},
     {call,
      {147,13},
      {remote,{147,23},{atom,{147,13},erts_debug},{atom,{147,24},same}},
      [{var,{147,29},'Nested'},
       {block,0,
        [{call,
          {147,37},
          {atom,{147,37},unaliased_literal_cons_head},
          [{var,{147,65},'Nested'}]}]}]}},
    {debug_line,148,99},
    {match,
     {148,5},
     {var,{148,5},'Nested'},
     {call,
      {148,14},
      {atom,{148,14},id},
      [{block,0,
        [{call,
          {148,17},
          {atom,{148,17},unaliased_literal_cons_body},
          [{var,{148,45},'Nested'}]}]}]}},
    {debug_line,149,100},
    {match,
     {149,5},
     {atom,{149,5},false},
     {call,
      {149,13},
      {remote,{149,23},{atom,{149,13},erts_debug},{atom,{149,24},same}},
      [{var,{149,29},'Nested'},
       {block,0,
        [{call,
          {149,37},
          {atom,{149,37},unaliased_literal_cons_body},
          [{var,{149,65},'Nested'}]}]}]}},
    {debug_line,150,101},
    {match,
     {150,5},
     {var,{150,5},'Nested'},
     {call,
      {150,14},
      {atom,{150,14},id},
      [{block,0,
        [{call,
          {150,17},
          {atom,{150,17},unaliased_different_var_cons},
          [{var,{150,46},'Nested'},{var,{150,54},'Cons'}]}]}]}},
    {debug_line,151,102},
    {match,
     {151,5},
     {atom,{151,5},false},
     {call,
      {151,13},
      {remote,{151,23},{atom,{151,13},erts_debug},{atom,{151,24},same}},
      [{var,{151,29},'Nested'},
       {block,0,
        [{call,
          {151,37},
          {atom,{151,37},unaliased_different_var_cons},
          [{var,{151,66},'Nested'},{var,{151,74},'Cons'}]}]}]}}]}]}.
{function,{153,1},
          simple_cons,1,
          [{clause,{153,1},
                   [{var,{153,1},'_'}],
                   [[{call,{153,1},
                           {remote,{153,1},
                                   {atom,{153,1},fake},
                                   {atom,{153,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,153,103},{atom,{153,1},ignore}]},
           {clause,{153,1},
                   [{cons,{153,13},{atom,{153,14},ok},{var,{153,17},'X'}}],
                   [],
                   [{debug_line,154,104},
                    {cons,{154,5},{atom,{154,6},ok},{var,{154,9},'X'}}]}]}.
{function,{155,1},
          simple_cons_twice_head,2,
          [{clause,{155,1},
                   [{var,{155,1},'_'},{var,{155,1},'_'}],
                   [[{call,{155,1},
                           {remote,{155,1},
                                   {atom,{155,1},fake},
                                   {atom,{155,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,155,105},{atom,{155,1},ignore}]},
           {clause,{155,1},
                   [{cons,{155,24},{atom,{155,25},ok},{var,{155,28},'X'}},
                    {cons,{155,32},{atom,{155,33},ok},{var,{155,36},'X'}}],
                   [],
                   [{debug_line,156,106},
                    {cons,{156,5},{atom,{156,6},ok},{var,{156,9},'X'}}]}]}.
{function,{157,1},
          simple_cons_twice_body,1,
          [{clause,{157,1},
                   [{var,{157,1},'_'}],
                   [[{call,{157,1},
                           {remote,{157,1},
                                   {atom,{157,1},fake},
                                   {atom,{157,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,157,107},{atom,{157,1},ignore}]},
           {clause,{157,1},
                   [{cons,{157,24},{atom,{157,25},ok},{var,{157,28},'X'}}],
                   [],
                   [{debug_line,158,108},
                    {tuple,{158,5},
                           [{cons,{158,6},
                                  {atom,{158,7},ok},
                                  {var,{158,10},'X'}},
                            {cons,{158,13},
                                  {atom,{158,14},ok},
                                  {var,{158,17},'X'}}]}]}]}.
{function,
    {159,1},
    simple_cons_in_map,1,
    [{clause,
         {159,1},
         [{var,{159,1},'_'}],
         [[{call,
               {159,1},
               {remote,
                   {159,1},
                   {atom,{159,1},fake},
                   {atom,{159,1},is_beam_bif_info}},
               []}]],
         [{debug_line,159,109},{atom,{159,1},ignore}]},
     {clause,
         {159,1},
         [{map,
              {159,20},
              [{map_field_exact,
                   {159,28},
                   {atom,{159,22},hello},
                   {cons,{159,31},{atom,{159,32},ok},{var,{159,35},'X'}}}]}],
         [],
         [{debug_line,160,110},
          {cons,{160,5},{atom,{160,6},ok},{var,{160,9},'X'}}]}]}.
{function,
    {161,1},
    simple_cons_fun_repeated,2,
    [{clause,
         {161,1},
         [{var,{161,1},'_'},{var,{161,1},'_'}],
         [[{call,
               {161,1},
               {remote,
                   {161,1},
                   {atom,{161,1},fake},
                   {atom,{161,1},is_beam_bif_info}},
               []}]],
         [{debug_line,161,111},{atom,{161,1},ignore}]},
     {clause,
         {161,1},
         [{cons,{161,26},{atom,{161,27},ok},{var,{161,30},'X'}},
          {var,{161,34},'Y'}],
         [],
         [{debug_line,162,112},
          {call,
              {162,5},
              {remote,{162,7},{atom,{162,5},io},{atom,{162,8},format}},
              [{block,0,[{string,{162,15},"~p~n"}]},
               {block,0,[{cons,{162,23},{var,{162,24},'X'},{nil,{162,25}}}]}]},
          {debug_line,163,113},
          {call,
              {163,6},
              {'fun',
                  {163,6},
                  {clauses,
                      [{clause,
                           {163,9},
                           [{cons,
                                {163,10},
                                {atom,{163,11},ok},
                                {var,{163,14},'X'}}],
                           [],
                           [{cons,
                                {163,21},
                                {atom,{163,22},ok},
                                {var,{163,25},'X'}}]}]}},
              [{var,{163,33},'Y'}]}]}]}.
{function,
    {164,1},
    simple_cons_case_repeated,2,
    [{clause,
         {164,1},
         [{var,{164,1},'_'},{var,{164,1},'_'}],
         [[{call,
               {164,1},
               {remote,
                   {164,1},
                   {atom,{164,1},fake},
                   {atom,{164,1},is_beam_bif_info}},
               []}]],
         [{debug_line,164,114},{atom,{164,1},ignore}]},
     {clause,
         {164,1},
         [{cons,{164,27},{atom,{164,28},ok},{var,{164,31},'X'}},
          {var,{164,35},'Y'}],
         [],
         [{debug_line,165,115},
          {call,
              {165,5},
              {remote,{165,7},{atom,{165,5},io},{atom,{165,8},format}},
              [{block,0,[{string,{165,15},"~p~n"}]},
               {block,0,[{cons,{165,23},{var,{165,24},'X'},{nil,{165,25}}}]}]},
          {debug_line,166,116},
          {'case',
              {166,5},
              {var,{166,10},'Y'},
              [{clause,
                   {166,15},
                   [{cons,{166,15},{atom,{166,16},ok},{var,{166,19},'X'}}],
                   [],
                   [{cons,
                        {166,25},
                        {atom,{166,26},ok},
                        {var,{166,29},'X'}}]}]}]}]}.
{function,{168,1},
          nested_cons_part,1,
          [{clause,{168,1},
                   [{var,{168,1},'_'}],
                   [[{call,{168,1},
                           {remote,{168,1},
                                   {atom,{168,1},fake},
                                   {atom,{168,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,168,117},{atom,{168,1},ignore}]},
           {clause,{168,1},
                   [{cons,{168,18},
                          {atom,{168,19},nested},
                          {cons,{168,26},
                                {cons,{168,26},
                                      {atom,{168,27},ok},
                                      {var,{168,30},'X'}},
                                {nil,{168,32}}}}],
                   [],
                   [{debug_line,169,118},
                    {cons,{169,5},{atom,{169,6},ok},{var,{169,9},'X'}}]}]}.
{function,{170,1},
          nested_cons_whole,1,
          [{clause,{170,1},
                   [{var,{170,1},'_'}],
                   [[{call,{170,1},
                           {remote,{170,1},
                                   {atom,{170,1},fake},
                                   {atom,{170,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,170,119},{atom,{170,1},ignore}]},
           {clause,{170,1},
                   [{cons,{170,19},
                          {atom,{170,20},nested},
                          {cons,{170,27},
                                {cons,{170,27},
                                      {atom,{170,28},ok},
                                      {var,{170,31},'X'}},
                                {nil,{170,33}}}}],
                   [],
                   [{debug_line,171,120},
                    {cons,{171,5},
                          {atom,{171,6},nested},
                          {cons,{171,13},
                                {cons,{171,13},
                                      {atom,{171,14},ok},
                                      {var,{171,17},'X'}},
                                {nil,{171,19}}}}]}]}.
{function,
    {172,1},
    nested_cons_with_alias,1,
    [{clause,
         {172,1},
         [{var,{172,1},'_'}],
         [[{call,
               {172,1},
               {remote,
                   {172,1},
                   {atom,{172,1},fake},
                   {atom,{172,1},is_beam_bif_info}},
               []}]],
         [{debug_line,172,121},{atom,{172,1},ignore}]},
     {clause,
         {172,1},
         [{cons,
              {172,24},
              {atom,{172,25},nested},
              {cons,
                  {172,32},
                  {match,
                      {172,32},
                      {cons,{172,32},{atom,{172,33},ok},{var,{172,36},'_'}},
                      {var,{172,39},'Y'}},
                  {nil,{172,40}}}}],
         [],
         [{debug_line,173,122},
          {cons,
              {173,5},
              {atom,{173,6},nested},
              {cons,{173,13},{var,{173,13},'Y'},{nil,{173,14}}}}]}]}.
{function,
    {175,1},
    cons_with_binary,1,
    [{clause,
         {175,1},
         [{var,{175,1},'_'}],
         [[{call,
               {175,1},
               {remote,
                   {175,1},
                   {atom,{175,1},fake},
                   {atom,{175,1},is_beam_bif_info}},
               []}]],
         [{debug_line,175,123},{atom,{175,1},ignore}]},
     {clause,
         {175,1},
         [{cons,
              {175,18},
              {bin,{175,19},[]},
              {cons,{175,24},{var,{175,24},'X'},{var,{175,26},'Y'}}}],
         [],
         [{debug_line,176,124},
          {call,
              {176,5},
              {atom,{176,5},cons_with_binary},
              [{block,0,
                   [{cons,
                        {176,22},
                        {var,{176,23},'X'},
                        {var,{176,25},'Y'}}]}]}]},
     {clause,
         {177,1},
         [{var,{177,18},'A'}],
         [],
         [{debug_line,178,125},{var,{178,5},'A'}]}]}.
{function,
    {180,1},
    cons_rebinding_after,1,
    [{clause,
         {180,1},
         [{var,{180,1},'_'}],
         [[{call,
               {180,1},
               {remote,
                   {180,1},
                   {atom,{180,1},fake},
                   {atom,{180,1},is_beam_bif_info}},
               []}]],
         [{debug_line,180,126},{atom,{180,1},ignore}]},
     {clause,
         {180,1},
         [{var,{180,22},'Y'}],
         [],
         [{debug_line,181,127},
          {call,
              {181,6},
              {'fun',
                  {181,6},
                  {clauses,
                      [{clause,
                           {181,9},
                           [{var,{181,10},'X'}],
                           [],
                           [{cons,
                                {181,16},
                                {atom,{181,17},ok},
                                {var,{181,20},'X'}}]}]}},
              [{var,{181,28},'Y'}]},
          {debug_line,182,128},
          {'case',
              {182,5},
              {var,{182,10},'Y'},
              [{clause,
                   {182,15},
                   [{cons,{182,15},{atom,{182,16},ok},{var,{182,19},'X'}}],
                   [],
                   [{cons,
                        {182,25},
                        {atom,{182,26},ok},
                        {var,{182,29},'X'}}]}]}]}]}.
{function,
    {183,1},
    unaliased_cons_rebinding_before,1,
    [{clause,
         {183,1},
         [{var,{183,1},'_'}],
         [[{call,
               {183,1},
               {remote,
                   {183,1},
                   {atom,{183,1},fake},
                   {atom,{183,1},is_beam_bif_info}},
               []}]],
         [{debug_line,183,129},{atom,{183,1},ignore}]},
     {clause,
         {183,1},
         [{cons,{183,33},{atom,{183,34},ok},{var,{183,37},'X'}}],
         [],
         [{debug_line,184,130},
          {call,
              {184,5},
              {remote,{184,7},{atom,{184,5},io},{atom,{184,8},format}},
              [{block,0,[{string,{184,15},"~p~n"}]},
               {block,0,[{cons,{184,23},{var,{184,24},'X'},{nil,{184,25}}}]}]},
          {debug_line,185,131},
          {call,
              {185,6},
              {'fun',
                  {185,6},
                  {clauses,
                      [{clause,
                           {185,9},
                           [{var,{185,10},'X'}],
                           [],
                           [{cons,
                                {185,16},
                                {atom,{185,17},ok},
                                {var,{185,20},'X'}}]}]}},
              [{atom,{185,28},value}]}]}]}.
{function,
    {186,1},
    unaliased_literal_cons_head,1,
    [{clause,
         {186,1},
         [{var,{186,1},'_'}],
         [[{call,
               {186,1},
               {remote,
                   {186,1},
                   {atom,{186,1},fake},
                   {atom,{186,1},is_beam_bif_info}},
               []}]],
         [{debug_line,186,132},{atom,{186,1},ignore}]},
     {clause,
         {186,1},
         [{cons,
              {186,29},
              {atom,{186,30},nested},
              {cons,
                  {186,37},
                  {match,
                      {186,37},
                      {cons,{186,37},{atom,{186,38},ok},{atom,{186,41},value}},
                      {var,{186,48},'X'}},
                  {nil,{186,49}}}}],
         [],
         [{debug_line,187,133},
          {call,
              {187,5},
              {remote,{187,7},{atom,{187,5},io},{atom,{187,8},format}},
              [{block,0,[{string,{187,15},"~p~n"}]},
               {block,0,[{cons,{187,23},{var,{187,24},'X'},{nil,{187,25}}}]}]},
          {debug_line,188,134},
          {cons,
              {188,5},
              {atom,{188,6},nested},
              {cons,
                  {188,13},
                  {cons,{188,13},{atom,{188,14},ok},{atom,{188,17},value}},
                  {nil,{188,23}}}}]}]}.
{function,
    {189,1},
    unaliased_literal_cons_body,1,
    [{clause,
         {189,1},
         [{var,{189,1},'_'}],
         [[{call,
               {189,1},
               {remote,
                   {189,1},
                   {atom,{189,1},fake},
                   {atom,{189,1},is_beam_bif_info}},
               []}]],
         [{debug_line,189,135},{atom,{189,1},ignore}]},
     {clause,
         {189,1},
         [{cons,
              {189,29},
              {atom,{189,30},nested},
              {cons,
                  {189,37},
                  {match,
                      {189,37},
                      {cons,{189,37},{atom,{189,38},ok},{atom,{189,41},value}},
                      {var,{189,48},'X'}},
                  {nil,{189,49}}}}],
         [],
         [{debug_line,190,136},
          {match,
              {190,5},
              {var,{190,5},'Res'},
              {cons,
                  {190,11},
                  {atom,{190,12},nested},
                  {cons,
                      {190,19},
                      {match,
                          {190,19},
                          {var,{190,19},'Y'},
                          {cons,
                              {190,21},
                              {atom,{190,22},ok},
                              {atom,{190,25},value}}},
                      {nil,{190,31}}}}},
          {debug_line,191,137},
          {call,
              {191,5},
              {remote,{191,7},{atom,{191,5},io},{atom,{191,8},format}},
              [{block,0,[{string,{191,15},"~p~n"}]},
               {block,0,
                   [{cons,
                        {191,23},
                        {cons,
                            {191,24},
                            {var,{191,25},'X'},
                            {cons,{191,28},{var,{191,28},'Y'},{nil,{191,29}}}},
                        {nil,{191,30}}}]}]},
          {debug_line,192,138},
          {var,{192,5},'Res'}]}]}.
{function,
    {193,1},
    unaliased_different_var_cons,2,
    [{clause,
         {193,1},
         [{var,{193,1},'_'},{var,{193,1},'_'}],
         [[{call,
               {193,1},
               {remote,
                   {193,1},
                   {atom,{193,1},fake},
                   {atom,{193,1},is_beam_bif_info}},
               []}]],
         [{debug_line,193,139},{atom,{193,1},ignore}]},
     {clause,
         {193,1},
         [{cons,
              {193,30},
              {atom,{193,31},nested},
              {cons,
                  {193,38},
                  {match,
                      {193,38},
                      {cons,{193,38},{atom,{193,39},ok},{atom,{193,42},value}},
                      {var,{193,49},'X'}},
                  {nil,{193,50}}}},
          {var,{193,53},'Y'}],
         [],
         [{debug_line,194,140},
          {call,
              {194,5},
              {remote,{194,7},{atom,{194,5},io},{atom,{194,8},format}},
              [{block,0,[{string,{194,15},"~p~n"}]},
               {block,0,[{cons,{194,23},{var,{194,24},'X'},{nil,{194,25}}}]}]},
          {debug_line,195,141},
          {cons,
              {195,5},
              {atom,{195,6},nested},
              {cons,{195,13},{var,{195,13},'Y'},{nil,{195,14}}}}]}]}.
{function,
    {197,1},
    catastrophic_runtime,1,
    [{clause,
         {197,1},
         [{var,{197,1},'_'}],
         [[{call,
               {197,1},
               {remote,
                   {197,1},
                   {atom,{197,1},fake},
                   {atom,{197,1},is_beam_bif_info}},
               []}]],
         [{debug_line,197,142},{atom,{197,1},ignore}]},
     {clause,
         {197,1},
         [{var,{197,22},'Config'}],
         [],
         [{debug_line,198,143},
          {call,
              {198,5},
              {remote,{198,7},{atom,{198,5},ct},{atom,{198,8},timetrap}},
              [{block,0,
                   [{tuple,
                        {198,17},
                        [{atom,{198,18},minutes},{integer,{198,27},6}]}]}]},
          {debug_line,199,144},
          {match,{199,5},{var,{199,5},'Depth'},{integer,{199,13},16000}},
          {debug_line,201,145},
          {match,
              {201,5},
              {var,{201,5},'PrivDir'},
              {call,
                  {201,15},
                  {remote,
                      {201,24},
                      {atom,{201,15},proplists},
                      {atom,{201,25},get_value}},
                  [{atom,{201,35},priv_dir},{var,{201,44},'Config'}]}},
          {debug_line,202,146},
          {match,
              {202,5},
              {var,{202,5},'Path'},
              {call,
                  {202,12},
                  {remote,
                      {202,20},
                      {atom,{202,12},filename},
                      {atom,{202,21},join}},
                  [{var,{202,26},'PrivDir'},
                   {block,0,[{string,{202,35},"catastrophic_runtime.erl"}]}]}},
          {debug_line,204,147},
          {match,
              {204,5},
              {var,{204,5},'Term'},
              {call,
                  {204,12},
                  {atom,{204,12},catastrophic_runtime_1},
                  [{var,{204,35},'Depth'}]}},
          {debug_line,205,148},
          {match,
              {205,5},
              {var,{205,5},'Source'},
              {cons,
                  {205,14},
                  {string,
                      {205,15},
                      "-module(catastrophic_runtime). t(Value) -> "},
                  {cons,
                      {205,62},
                      {var,{205,62},'Term'},
                      {cons,{205,68},{string,{205,68},"."},{nil,{205,71}}}}}},
          {debug_line,206,149},
          {match,
              {206,5},
              {atom,{206,5},ok},
              {call,
                  {206,10},
                  {remote,
                      {206,14},
                      {atom,{206,10},file},
                      {atom,{206,15},write_file}},
                  [{var,{206,26},'Path'},{var,{206,32},'Source'}]}},
          {debug_line,208,150},
          {match,
              {208,5},
              {tuple,
                  {208,5},
                  [{atom,{208,6},ok},{atom,{208,10},catastrophic_runtime}]},
              {call,
                  {208,34},
                  {remote,
                      {208,41},
                      {atom,{208,34},compile},
                      {atom,{208,42},file}},
                  [{var,{208,47},'Path'},
                   {block,0,
                       [{cons,
                            {208,53},
                            {atom,{208,54},return_error},
                            {nil,{208,66}}}]}]}},
          {debug_line,209,151},
          {call,
              {209,5},
              {remote,{209,9},{atom,{209,5},file},{atom,{209,10},delete}},
              [{var,{209,17},'Path'}]},
          {debug_line,211,152},
          {atom,{211,5},ok}]}]}.
{function,
    {213,1},
    catastrophic_runtime_1,1,
    [{clause,
         {213,1},
         [{var,{213,1},'_'}],
         [[{call,
               {213,1},
               {remote,
                   {213,1},
                   {atom,{213,1},fake},
                   {atom,{213,1},is_beam_bif_info}},
               []}]],
         [{debug_line,213,153},{atom,{213,1},ignore}]},
     {clause,
         {213,1},
         [{integer,{213,24},0}],
         [],
         [{debug_line,214,154},
          {bin,
              {214,5},
              [{bin_element,
                   {214,7},
                   {string,{214,7},"Value"},
                   default,default}]}]},
     {clause,
         {215,1},
         [{var,{215,24},'N'}],
         [],
         [{debug_line,216,155},
          {match,
              {216,5},
              {var,{216,5},'Nested'},
              {call,
                  {216,14},
                  {atom,{216,14},catastrophic_runtime_1},
                  [{block,0,
                       [{op,{216,39},
                            '-',
                            {var,{216,37},'N'},
                            {integer,{216,41},1}}]}]}},
          {debug_line,217,156},
          {match,
              {217,5},
              {var,{217,5},'Integer'},
              {call,
                  {217,15},
                  {remote,
                      {217,15},
                      {atom,{217,15},erlang},
                      {atom,{217,15},integer_to_binary}},
                  [{var,{217,33},'N'}]}},
          {debug_line,218,157},
          {match,
              {218,5},
              {var,{218,5},'Eq'},
              {cons,
                  {218,10},
                  {bin,
                      {218,11},
                      [{bin_element,
                           {218,13},
                           {string,
                               {218,13},
                               "{{'.',[],[erlang,'=:=']},[],[Value, \""},
                           default,default}]},
                  {cons,
                      {218,57},
                      {var,{218,57},'Integer'},
                      {cons,
                          {218,66},
                          {bin,
                              {218,66},
                              [{bin_element,
                                   {218,68},
                                   {string,{218,68},"\"]}"},
                                   default,default}]},
                          {nil,{218,76}}}}}},
          {debug_line,219,158},
          {cons,
              {219,5},
              {bin,
                  {219,6},
                  [{bin_element,
                       {219,8},
                       {string,{219,8},"{{'.',[],[erlang,atom]},[],["},
                       default,default}]},
              {cons,
                  {219,42},
                  {var,{219,42},'Nested'},
                  {cons,
                      {219,50},
                      {bin,
                          {219,50},
                          [{bin_element,
                               {219,52},
                               {string,{219,52},","},
                               default,default}]},
                      {cons,
                          {219,59},
                          {var,{219,59},'Eq'},
                          {cons,
                              {219,63},
                              {bin,
                                  {219,63},
                                  [{bin_element,
                                       {219,65},
                                       {string,{219,65},"]}"},
                                       default,default}]},
                              {nil,{219,71}}}}}}}]}]}.
{function,
    {221,1},
    coverage,1,
    [{clause,
         {221,1},
         [{var,{221,1},'_'}],
         [[{call,
               {221,1},
               {remote,
                   {221,1},
                   {atom,{221,1},fake},
                   {atom,{221,1},is_beam_bif_info}},
               []}]],
         [{debug_line,221,159},{atom,{221,1},ignore}]},
     {clause,
         {221,1},
         [{var,{221,10},'_Config'}],
         [],
         [{debug_line,222,160},
          {match,
              {222,5},
              {var,{222,5},'State'},
              {call,
                  {222,13},
                  {atom,{222,13},id},
                  [{block,0,
                       [{tuple,
                            {222,16},
                            [{atom,{222,17},undefined},
                             {atom,{222,27},undefined}]}]}]}},
          {debug_line,223,161},
          {match,
              {223,5},
              {tuple,
                  {223,5},
                  [{var,{223,6},'State'},
                   {string,
                       {223,13},
                       "Can't detect character encoding due to lack of indata"}]},
              {call,{224,9},{atom,{224,9},too_deep},[{var,{224,18},'State'}]}},
          {debug_line,225,162},
          {atom,{225,5},ok}]}]}.
{function,{227,1},
          too_deep,1,
          [{clause,{227,1},
                   [{var,{227,1},'_'}],
                   [[{call,{227,1},
                           {remote,{227,1},
                                   {atom,{227,1},fake},
                                   {atom,{227,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,227,163},{atom,{227,1},ignore}]},
           {clause,{227,1},
                   [{match,{227,10},
                           {tuple,{227,10},
                                  [{var,{227,11},'_'},
                                   {atom,{227,13},undefined}]},
                           {var,{227,26},'State'}}],
                   [],
                   [{debug_line,228,164},
                    {tuple,{228,5},
                           [{var,{228,6},'State'},
                            {string,{228,13},
                                    "Can't detect character encoding due to lack of indata"}]}]}]}.
{eof,{230,1}}.
