{attribute,{1,1},file,{"apply_SUITE.erl",1}}.
{attribute,{20,2},module,apply_SUITE}.
{attribute,{22,2},
           export,
           [{all,0},
            {suite,0},
            {groups,0},
            {init_per_suite,1},
            {end_per_suite,1},
            {init_per_group,2},
            {end_per_group,2},
            {mfa,1},
            {fun_apply,1},
            {involved,1}]}.
{attribute,{26,2},export,[{foo,0},{bar,1},{baz,2}]}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,99,111,109,109,
             111,110,95,116,101,115,116,45,49,46,50,55,46,54,47,105,110,99,
             108,117,100,101,47,99,116,46,104,114,108],
            1}}.
{attribute,{29,1},file,{"apply_SUITE.erl",29}}.
{function,
    {30,1},
    suite,0,
    [{clause,
         {30,1},
         [],
         [[{call,
               {30,1},
               {remote,
                   {30,1},
                   {atom,{30,1},fake},
                   {atom,{30,1},is_beam_bif_info}},
               []}]],
         [{debug_line,30,1},{atom,{30,1},ignore}]},
     {clause,
         {30,1},
         [],[],
         [{debug_line,30,2},
          {cons,
              {30,12},
              {tuple,
                  {30,13},
                  [{atom,{30,14},ct_hooks},
                   {cons,
                       {30,23},
                       {atom,{30,24},ts_install_cth},
                       {nil,{30,38}}}]},
              {nil,{30,40}}}]}]}.
{function,{32,1},
          all,0,
          [{clause,{32,1},
                   [],
                   [[{call,{32,1},
                           {remote,{32,1},
                                   {atom,{32,1},fake},
                                   {atom,{32,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,32,3},{atom,{32,1},ignore}]},
           {clause,{32,1},
                   [],[],
                   [{debug_line,33,4},
                    {cons,{33,5},
                          {tuple,{33,6},
                                 [{atom,{33,7},group},{atom,{33,13},p}]},
                          {nil,{33,15}}}]}]}.
{function,
    {35,1},
    groups,0,
    [{clause,
         {35,1},
         [],
         [[{call,
               {35,1},
               {remote,
                   {35,1},
                   {atom,{35,1},fake},
                   {atom,{35,1},is_beam_bif_info}},
               []}]],
         [{debug_line,35,5},{atom,{35,1},ignore}]},
     {clause,
         {35,1},
         [],[],
         [{debug_line,36,6},
          {cons,
              {36,5},
              {tuple,
                  {36,6},
                  [{atom,{36,7},p},
                   {call,
                       {36,9},
                       {remote,
                           {36,17},
                           {atom,{36,9},test_lib},
                           {atom,{36,18},parallel}},
                       []},
                   {cons,
                       {37,7},
                       {atom,{37,8},mfa},
                       {cons,
                           {38,8},
                           {atom,{38,8},fun_apply},
                           {cons,
                               {39,8},
                               {atom,{39,8},involved},
                               {nil,{40,7}}}}}]},
              {nil,{40,9}}}]}]}.
{function,{42,1},
          init_per_suite,1,
          [{clause,{42,1},
                   [{var,{42,1},'_'}],
                   [[{call,{42,1},
                           {remote,{42,1},
                                   {atom,{42,1},fake},
                                   {atom,{42,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,42,7},{atom,{42,1},ignore}]},
           {clause,{42,1},
                   [{var,{42,16},'Config'}],
                   [],
                   [{debug_line,43,8},
                    {call,{43,5},
                          {remote,{43,13},
                                  {atom,{43,5},test_lib},
                                  {atom,{43,14},recompile}},
                          [{atom,{43,25},apply_SUITE}]},
                    {debug_line,44,9},
                    {var,{44,5},'Config'}]}]}.
{function,{46,1},
          end_per_suite,1,
          [{clause,{46,1},
                   [{var,{46,1},'_'}],
                   [[{call,{46,1},
                           {remote,{46,1},
                                   {atom,{46,1},fake},
                                   {atom,{46,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,46,10},{atom,{46,1},ignore}]},
           {clause,{46,1},
                   [{var,{46,15},'_Config'}],
                   [],
                   [{debug_line,47,11},{atom,{47,5},ok}]}]}.
{function,{49,1},
          init_per_group,2,
          [{clause,{49,1},
                   [{var,{49,1},'_'},{var,{49,1},'_'}],
                   [[{call,{49,1},
                           {remote,{49,1},
                                   {atom,{49,1},fake},
                                   {atom,{49,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,49,12},{atom,{49,1},ignore}]},
           {clause,{49,1},
                   [{var,{49,16},'_GroupName'},{var,{49,28},'Config'}],
                   [],
                   [{debug_line,50,13},{var,{50,5},'Config'}]}]}.
{function,{52,1},
          end_per_group,2,
          [{clause,{52,1},
                   [{var,{52,1},'_'},{var,{52,1},'_'}],
                   [[{call,{52,1},
                           {remote,{52,1},
                                   {atom,{52,1},fake},
                                   {atom,{52,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,52,14},{atom,{52,1},ignore}]},
           {clause,{52,1},
                   [{var,{52,15},'_GroupName'},{var,{52,27},'Config'}],
                   [],
                   [{debug_line,53,15},{var,{53,5},'Config'}]}]}.
{function,
 {60,1},
 mfa,1,
 [{clause,
   {60,1},
   [{var,{60,1},'_'}],
   [[{call,
      {60,1},
      {remote,{60,1},{atom,{60,1},fake},{atom,{60,1},is_beam_bif_info}},
      []}]],
   [{debug_line,60,16},{atom,{60,1},ignore}]},
  {clause,
   {60,1},
   [{var,{60,5},'Config'}],
   [[{call,
      {60,18},
      {remote,{60,18},{atom,{60,18},erlang},{atom,{60,18},is_list}},
      [{var,{60,26},'Config'}]}]],
   [{debug_line,61,17},
    {match,
     {61,5},
     {atom,{61,5},ok},
     {call,
      {61,11},
      {'fun',
       {61,11},
       {clauses,
        [{clause,
          {61,11},
          [{var,{61,11},'Res'}],
          [],
          [{match,
            {61,11},
            {var,{61,11},'Res'},
            {call,
             {61,19},
             {remote,{61,19},{atom,{61,19},apply_SUITE},{atom,{61,27},foo}},
             []}}]}]}},
      [{block,0,
        [{call,
          {61,27},
          {remote,{61,27},{atom,{61,27},erlang},{atom,{61,27},apply}},
          [{atom,{61,19},apply_SUITE},{atom,{61,27},foo},{nil,{61,27}}]}]}]}},
    {debug_line,62,18},
    {match,
     {62,5},
     {tuple,
      {62,5},
      [{cons,
        {62,6},
        {atom,{62,7},a},
        {cons,{62,9},{atom,{62,9},b},{nil,{62,10}}}}]},
     {call,
      {62,16},
      {'fun',
       {62,16},
       {clauses,
        [{clause,
          {62,16},
          [{var,{62,16},'Res'}],
          [],
          [{match,
            {62,16},
            {var,{62,16},'Res'},
            {call,
             {62,24},
             {remote,{62,24},{atom,{62,24},apply_SUITE},{atom,{62,32},bar}},
             [{block,0,
               [{cons,
                 {62,37},
                 {atom,{62,38},a},
                 {cons,{62,40},{atom,{62,40},b},{nil,{62,41}}}}]}]}}]}]}},
      [{block,0,
        [{call,
          {62,41},
          {remote,{62,41},{atom,{62,41},erlang},{atom,{62,41},apply}},
          [{atom,{62,24},apply_SUITE},
           {atom,{62,32},bar},
           {block,0,
            [{cons,
              {62,32},
              {cons,
               {62,37},
               {atom,{62,38},a},
               {cons,{62,40},{atom,{62,40},b},{nil,{62,41}}}},
              {nil,{62,41}}}]}]}]}]}},
    {debug_line,63,19},
    {match,
     {63,5},
     {tuple,{63,5},[{integer,{63,6},39},{tuple,{63,9},[{atom,{63,10},a}]}]},
     {call,
      {63,17},
      {'fun',
       {63,17},
       {clauses,
        [{clause,
          {63,17},
          [{var,{63,17},'Res'}],
          [],
          [{match,
            {63,17},
            {var,{63,17},'Res'},
            {call,
             {63,25},
             {remote,{63,25},{atom,{63,25},apply_SUITE},{atom,{63,33},baz}},
             [{integer,{63,38},39},
              {block,0,[{tuple,{63,42},[{atom,{63,43},a}]}]}]}}]}]}},
      [{block,0,
        [{call,
          {63,44},
          {remote,{63,44},{atom,{63,44},erlang},{atom,{63,44},apply}},
          [{atom,{63,25},apply_SUITE},
           {atom,{63,33},baz},
           {block,0,
            [{cons,
              {63,33},
              {integer,{63,38},39},
              {cons,
               {63,42},
               {tuple,{63,42},[{atom,{63,43},a}]},
               {nil,{63,44}}}}]}]}]}]}},
    {debug_line,65,20},
    {match,
     {65,5},
     {var,{65,5},'Mod'},
     {call,{65,11},{atom,{65,11},id},[{atom,{65,15},apply_SUITE}]}},
    {debug_line,66,21},
    {match,
     {66,5},
     {atom,{66,5},ok},
     {call,
      {66,11},
      {'fun',
       {66,11},
       {clauses,
        [{clause,
          {66,11},
          [{var,{66,11},'Res'}],
          [],
          [{match,
            {66,11},
            {var,{66,11},'Res'},
            {call,
             {66,18},
             {remote,{66,18},{var,{66,18},'Mod'},{atom,{66,23},foo}},
             []}}]}]}},
      [{block,0,
        [{call,
          {66,23},
          {remote,{66,23},{atom,{66,23},erlang},{atom,{66,23},apply}},
          [{var,{66,18},'Mod'},{atom,{66,23},foo},{nil,{66,23}}]}]}]}},
    {debug_line,67,22},
    {match,
     {67,5},
     {tuple,
      {67,5},
      [{cons,
        {67,6},
        {atom,{67,7},a},
        {cons,{67,9},{atom,{67,9},b},{nil,{67,10}}}}]},
     {call,
      {67,16},
      {'fun',
       {67,16},
       {clauses,
        [{clause,
          {67,16},
          [{var,{67,16},'Res'}],
          [],
          [{match,
            {67,16},
            {var,{67,16},'Res'},
            {call,
             {67,23},
             {remote,{67,23},{var,{67,23},'Mod'},{atom,{67,28},bar}},
             [{block,0,
               [{cons,
                 {67,33},
                 {atom,{67,34},a},
                 {cons,{67,36},{atom,{67,36},b},{nil,{67,37}}}}]}]}}]}]}},
      [{block,0,
        [{call,
          {67,37},
          {remote,{67,37},{atom,{67,37},erlang},{atom,{67,37},apply}},
          [{var,{67,23},'Mod'},
           {atom,{67,28},bar},
           {block,0,
            [{cons,
              {67,28},
              {cons,
               {67,33},
               {atom,{67,34},a},
               {cons,{67,36},{atom,{67,36},b},{nil,{67,37}}}},
              {nil,{67,37}}}]}]}]}]}},
    {debug_line,68,23},
    {match,
     {68,5},
     {tuple,{68,5},[{integer,{68,6},39},{tuple,{68,9},[{atom,{68,10},a}]}]},
     {call,
      {68,17},
      {'fun',
       {68,17},
       {clauses,
        [{clause,
          {68,17},
          [{var,{68,17},'Res'}],
          [],
          [{match,
            {68,17},
            {var,{68,17},'Res'},
            {call,
             {68,24},
             {remote,{68,24},{var,{68,24},'Mod'},{atom,{68,29},baz}},
             [{integer,{68,34},39},
              {block,0,[{tuple,{68,38},[{atom,{68,39},a}]}]}]}}]}]}},
      [{block,0,
        [{call,
          {68,40},
          {remote,{68,40},{atom,{68,40},erlang},{atom,{68,40},apply}},
          [{var,{68,24},'Mod'},
           {atom,{68,29},baz},
           {block,0,
            [{cons,
              {68,29},
              {integer,{68,34},39},
              {cons,
               {68,38},
               {tuple,{68,38},[{atom,{68,39},a}]},
               {nil,{68,40}}}}]}]}]}]}},
    {debug_line,70,24},
    {match,
     {70,5},
     {atom,{70,5},ok},
     {call,
      {70,11},
      {'fun',
       {70,11},
       {clauses,
        [{clause,
          {70,11},
          [{var,{70,11},'Res'}],
          [],
          [{match,
            {70,11},
            {var,{70,11},'Res'},
            {call,
             {70,19},
             {remote,
              {70,19},
              {atom,{70,19},apply_SUITE},
              {call,{70,28},{atom,{70,28},id},[{atom,{70,31},foo}]}},
             []}}]}]}},
      [{block,0,
        [{call,
          {70,35},
          {remote,{70,35},{atom,{70,35},erlang},{atom,{70,35},apply}},
          [{atom,{70,19},apply_SUITE},
           {block,0,[{call,{70,28},{atom,{70,28},id},[{atom,{70,31},foo}]}]},
           {nil,{70,35}}]}]}]}},
    {debug_line,71,25},
    {match,
     {71,5},
     {tuple,
      {71,5},
      [{cons,
        {71,6},
        {atom,{71,7},a},
        {cons,{71,9},{atom,{71,9},b},{nil,{71,10}}}}]},
     {call,
      {71,16},
      {'fun',
       {71,16},
       {clauses,
        [{clause,
          {71,16},
          [{var,{71,16},'Res'}],
          [],
          [{match,
            {71,16},
            {var,{71,16},'Res'},
            {call,
             {71,24},
             {remote,
              {71,24},
              {atom,{71,24},apply_SUITE},
              {call,{71,33},{atom,{71,33},id},[{atom,{71,36},bar}]}},
             [{block,0,
               [{cons,
                 {71,43},
                 {atom,{71,44},a},
                 {cons,{71,46},{atom,{71,46},b},{nil,{71,47}}}}]}]}}]}]}},
      [{block,0,
        [{call,
          {71,47},
          {remote,{71,47},{atom,{71,47},erlang},{atom,{71,47},apply}},
          [{atom,{71,24},apply_SUITE},
           {block,0,[{call,{71,33},{atom,{71,33},id},[{atom,{71,36},bar}]}]},
           {block,0,
            [{cons,
              {71,40},
              {cons,
               {71,43},
               {atom,{71,44},a},
               {cons,{71,46},{atom,{71,46},b},{nil,{71,47}}}},
              {nil,{71,47}}}]}]}]}]}},
    {debug_line,72,26},
    {match,
     {72,5},
     {tuple,{72,5},[{integer,{72,6},39},{tuple,{72,9},[{atom,{72,10},a}]}]},
     {call,
      {72,17},
      {'fun',
       {72,17},
       {clauses,
        [{clause,
          {72,17},
          [{var,{72,17},'Res'}],
          [],
          [{match,
            {72,17},
            {var,{72,17},'Res'},
            {call,
             {72,25},
             {remote,
              {72,25},
              {atom,{72,25},apply_SUITE},
              {call,{72,34},{atom,{72,34},id},[{atom,{72,37},baz}]}},
             [{integer,{72,44},39},
              {block,0,[{tuple,{72,48},[{atom,{72,49},a}]}]}]}}]}]}},
      [{block,0,
        [{call,
          {72,50},
          {remote,{72,50},{atom,{72,50},erlang},{atom,{72,50},apply}},
          [{atom,{72,25},apply_SUITE},
           {block,0,[{call,{72,34},{atom,{72,34},id},[{atom,{72,37},baz}]}]},
           {block,0,
            [{cons,
              {72,41},
              {integer,{72,44},39},
              {cons,
               {72,48},
               {tuple,{72,48},[{atom,{72,49},a}]},
               {nil,{72,50}}}}]}]}]}]}},
    {debug_line,74,27},
    {match,
     {74,5},
     {atom,{74,5},ok},
     {call,
      {74,11},
      {'fun',
       {74,11},
       {clauses,
        [{clause,
          {74,11},
          [{var,{74,11},'Res'}],
          [],
          [{match,
            {74,11},
            {var,{74,11},'Res'},
            {call,
             {74,18},
             {remote,
              {74,18},
              {var,{74,18},'Mod'},
              {call,{74,24},{atom,{74,24},id},[{atom,{74,27},foo}]}},
             []}}]}]}},
      [{block,0,
        [{call,
          {74,31},
          {remote,{74,31},{atom,{74,31},erlang},{atom,{74,31},apply}},
          [{var,{74,18},'Mod'},
           {block,0,[{call,{74,24},{atom,{74,24},id},[{atom,{74,27},foo}]}]},
           {nil,{74,31}}]}]}]}},
    {debug_line,75,28},
    {match,
     {75,5},
     {tuple,
      {75,5},
      [{cons,
        {75,6},
        {atom,{75,7},a},
        {cons,{75,9},{atom,{75,9},b},{nil,{75,10}}}}]},
     {call,
      {75,16},
      {'fun',
       {75,16},
       {clauses,
        [{clause,
          {75,16},
          [{var,{75,16},'Res'}],
          [],
          [{match,
            {75,16},
            {var,{75,16},'Res'},
            {call,
             {75,23},
             {remote,
              {75,23},
              {var,{75,23},'Mod'},
              {call,{75,29},{atom,{75,29},id},[{atom,{75,32},bar}]}},
             [{block,0,
               [{cons,
                 {75,39},
                 {atom,{75,40},a},
                 {cons,{75,42},{atom,{75,42},b},{nil,{75,43}}}}]}]}}]}]}},
      [{block,0,
        [{call,
          {75,43},
          {remote,{75,43},{atom,{75,43},erlang},{atom,{75,43},apply}},
          [{var,{75,23},'Mod'},
           {block,0,[{call,{75,29},{atom,{75,29},id},[{atom,{75,32},bar}]}]},
           {block,0,
            [{cons,
              {75,36},
              {cons,
               {75,39},
               {atom,{75,40},a},
               {cons,{75,42},{atom,{75,42},b},{nil,{75,43}}}},
              {nil,{75,43}}}]}]}]}]}},
    {debug_line,76,29},
    {match,
     {76,5},
     {tuple,{76,5},[{integer,{76,6},39},{tuple,{76,9},[{atom,{76,10},a}]}]},
     {call,
      {76,17},
      {'fun',
       {76,17},
       {clauses,
        [{clause,
          {76,17},
          [{var,{76,17},'Res'}],
          [],
          [{match,
            {76,17},
            {var,{76,17},'Res'},
            {call,
             {76,24},
             {remote,
              {76,24},
              {var,{76,24},'Mod'},
              {call,{76,30},{atom,{76,30},id},[{atom,{76,33},baz}]}},
             [{integer,{76,40},39},
              {block,0,[{tuple,{76,44},[{atom,{76,45},a}]}]}]}}]}]}},
      [{block,0,
        [{call,
          {76,46},
          {remote,{76,46},{atom,{76,46},erlang},{atom,{76,46},apply}},
          [{var,{76,24},'Mod'},
           {block,0,[{call,{76,30},{atom,{76,30},id},[{atom,{76,33},baz}]}]},
           {block,0,
            [{cons,
              {76,37},
              {integer,{76,40},39},
              {cons,
               {76,44},
               {tuple,{76,44},[{atom,{76,45},a}]},
               {nil,{76,46}}}}]}]}]}]}},
    {debug_line,78,30},
    {match,
     {78,5},
     {tuple,{78,5},[{atom,{78,6},'EXIT'},{var,{78,13},'_'}]},
     {'catch',
      {78,19},
      {call,
       {78,26},
       {'fun',
        {78,26},
        {clauses,
         [{clause,
           {78,26},
           [{var,{78,26},'Res'}],
           [],
           [{match,
             {78,26},
             {var,{78,26},'Res'},
             {call,
              {78,33},
              {remote,
               {78,33},
               {var,{78,33},'Mod'},
               {call,{78,39},{atom,{78,39},id},[{atom,{78,42},bazzzzzz}]}},
              [{atom,{78,54},a},{atom,{78,57},b}]}}]}]}},
       [{block,0,
         [{call,
           {78,57},
           {remote,{78,57},{atom,{78,57},erlang},{atom,{78,57},apply}},
           [{var,{78,33},'Mod'},
            {block,0,
             [{call,{78,39},{atom,{78,39},id},[{atom,{78,42},bazzzzzz}]}]},
            {block,0,
             [{cons,
               {78,51},
               {atom,{78,54},a},
               {cons,{78,57},{atom,{78,57},b},{nil,{78,57}}}}]}]}]}]}}},
    {debug_line,79,31},
    {match,
     {79,5},
     {tuple,{79,5},[{atom,{79,6},'EXIT'},{var,{79,13},'_'}]},
     {'catch',
      {79,19},
      {call,
       {79,26},
       {'fun',
        {79,26},
        {clauses,
         [{clause,
           {79,26},
           [{var,{79,26},'Res'}],
           [],
           [{match,
             {79,26},
             {var,{79,26},'Res'},
             {call,
              {79,33},
              {remote,{79,34},{tuple,{79,33},[]},{atom,{79,37},baz}},
              [{atom,{79,42},a},{atom,{79,45},b}]}}]}]}},
       [{block,0,
         [{call,
           {79,45},
           {remote,{79,45},{atom,{79,45},erlang},{atom,{79,45},apply}},
           [{block,0,[{tuple,{79,33},[]}]},
            {atom,{79,37},baz},
            {block,0,
             [{cons,
               {79,37},
               {atom,{79,42},a},
               {cons,{79,45},{atom,{79,45},b},{nil,{79,45}}}}]}]}]}]}}},
    {debug_line,80,32},
    {match,
     {80,5},
     {tuple,{80,5},[{atom,{80,6},'EXIT'},{var,{80,13},'_'}]},
     {'catch',
      {80,19},
      {call,
       {80,26},
       {'fun',
        {80,26},
        {clauses,
         [{clause,
           {80,26},
           [{var,{80,26},'Res'}],
           [],
           [{match,
             {80,26},
             {var,{80,26},'Res'},
             {call,
              {80,34},
              {remote,{80,34},{atom,{80,34},apply_SUITE},{nil,{80,42}}},
              [{atom,{80,46},a},{atom,{80,49},b}]}}]}]}},
       [{block,0,
         [{call,
           {80,49},
           {remote,{80,49},{atom,{80,49},erlang},{atom,{80,49},apply}},
           [{atom,{80,34},apply_SUITE},
            {nil,{80,42}},
            {block,0,
             [{cons,
               {80,43},
               {atom,{80,46},a},
               {cons,{80,49},{atom,{80,49},b},{nil,{80,49}}}}]}]}]}]}}},
    {debug_line,81,33},
    {match,
     {81,5},
     {tuple,{81,5},[{atom,{81,6},'EXIT'},{var,{81,13},'_'}]},
     {'catch',
      {81,19},
      {call,{81,25},{atom,{81,25},bad_literal_call},[{integer,{81,42},1}]}}},
    {debug_line,83,34},
    {match,
     {83,5},
     {atom,{83,5},ok},
     {call,
      {83,10},
      {remote,{83,10},{atom,{83,10},erlang},{atom,{83,10},apply}},
      [{var,{83,16},'Mod'},
       {atom,{83,21},foo},
       {block,0,[{call,{83,26},{atom,{83,26},id},[{nil,{83,29}}]}]}]}},
    {debug_line,84,35},
    {match,
     {84,5},
     {tuple,
      {84,5},
      [{cons,
        {84,6},
        {atom,{84,7},a},
        {cons,{84,9},{atom,{84,9},b},{atom,{84,11},c}}}]},
     {call,
      {84,17},
      {remote,{84,17},{atom,{84,17},erlang},{atom,{84,17},apply}},
      [{var,{84,23},'Mod'},
       {atom,{84,28},bar},
       {block,0,
        [{call,
          {84,33},
          {atom,{84,33},id},
          [{block,0,
            [{cons,
              {84,36},
              {cons,
               {84,37},
               {atom,{84,38},a},
               {cons,{84,40},{atom,{84,40},b},{atom,{84,42},c}}},
              {nil,{84,44}}}]}]}]}]}},
    {debug_line,85,36},
    {match,
     {85,5},
     {tuple,
      {85,5},
      [{cons,{85,6},{atom,{85,7},xx},{nil,{85,9}}},
       {tuple,{85,11},[{atom,{85,12},a}]}]},
     {call,
      {85,18},
      {remote,{85,18},{atom,{85,18},erlang},{atom,{85,18},apply}},
      [{atom,{85,25},apply_SUITE},
       {atom,{85,33},baz},
       {block,0,
        [{call,
          {85,38},
          {atom,{85,38},id},
          [{block,0,
            [{cons,
              {85,41},
              {cons,{85,42},{atom,{85,43},xx},{nil,{85,45}}},
              {cons,
               {85,47},
               {tuple,{85,47},[{atom,{85,48},a}]},
               {nil,{85,50}}}}]}]}]}]}},
    {debug_line,87,37},
    {match,
     {87,5},
     {var,{87,5},'Erlang'},
     {call,{87,14},{atom,{87,14},id},[{atom,{87,17},erlang}]}},
    {debug_line,88,38},
    {match,
     {88,5},
     {var,{88,5},'Self'},
     {call,
      {88,12},
      {remote,{88,12},{atom,{88,12},erlang},{atom,{88,12},self}},
      []}},
    {debug_line,89,39},
    {match,
     {89,5},
     {var,{89,5},'Self'},
     {call,
      {89,13},
      {'fun',
       {89,13},
       {clauses,
        [{clause,
          {89,13},
          [{var,{89,13},'Res'}],
          [],
          [{match,
            {89,13},
            {var,{89,13},'Res'},
            {call,
             {89,20},
             {remote,{89,20},{var,{89,20},'Erlang'},{atom,{89,28},self}},
             []}}]}]}},
      [{block,0,
        [{call,
          {89,28},
          {remote,{89,28},{atom,{89,28},erlang},{atom,{89,28},apply}},
          [{var,{89,20},'Erlang'},{atom,{89,28},self},{nil,{89,28}}]}]}]}},
    {debug_line,90,40},
    {match,
     {90,5},
     {float,{90,5},42.0},
     {call,
      {90,13},
      {'fun',
       {90,13},
       {clauses,
        [{clause,
          {90,13},
          [{var,{90,13},'Res'}],
          [],
          [{match,
            {90,13},
            {var,{90,13},'Res'},
            {call,
             {90,20},
             {remote,{90,20},{var,{90,20},'Erlang'},{atom,{90,28},abs}},
             [{block,0,[{op,{90,33},'-',{float,{90,34},42.0}}]}]}}]}]}},
      [{block,0,
        [{call,
          {90,34},
          {remote,{90,34},{atom,{90,34},erlang},{atom,{90,34},apply}},
          [{var,{90,20},'Erlang'},
           {atom,{90,28},abs},
           {block,0,
            [{cons,
              {90,28},
              {op,{90,33},'-',{float,{90,34},42.0}},
              {nil,{90,34}}}]}]}]}]}},
    {debug_line,91,41},
    {match,
     {91,5},
     {atom,{91,5},b},
     {call,
      {91,10},
      {'fun',
       {91,10},
       {clauses,
        [{clause,
          {91,10},
          [{var,{91,10},'Res'}],
          [],
          [{match,
            {91,10},
            {var,{91,10},'Res'},
            {call,
             {91,17},
             {remote,{91,17},{var,{91,17},'Erlang'},{atom,{91,25},element}},
             [{integer,{91,34},2},
              {block,0,
               [{tuple,
                 {91,37},
                 [{atom,{91,38},a},
                  {atom,{91,40},b},
                  {atom,{91,42},c}]}]}]}}]}]}},
      [{block,0,
        [{call,
          {91,43},
          {remote,{91,43},{atom,{91,43},erlang},{atom,{91,43},apply}},
          [{var,{91,17},'Erlang'},
           {atom,{91,25},element},
           {block,0,
            [{cons,
              {91,25},
              {integer,{91,34},2},
              {cons,
               {91,37},
               {tuple,
                {91,37},
                [{atom,{91,38},a},{atom,{91,40},b},{atom,{91,42},c}]},
               {nil,{91,43}}}}]}]}]}]}},
    {debug_line,92,42},
    {match,
     {92,5},
     {atom,{92,5},true},
     {call,
      {92,13},
      {'fun',
       {92,13},
       {clauses,
        [{clause,
          {92,13},
          [{var,{92,13},'Res'}],
          [],
          [{match,
            {92,13},
            {var,{92,13},'Res'},
            {call,
             {92,20},
             {remote,
              {92,20},
              {var,{92,20},'Erlang'},
              {atom,{92,28},is_function}},
             [{block,0,
               [{'fun',
                 {92,41},
                 {function,
                  {atom,{92,45},erlang},
                  {atom,{92,52},list_to_binary},
                  {integer,{92,67},1}}}]}]}}]}]}},
      [{block,0,
        [{call,
          {92,67},
          {remote,{92,67},{atom,{92,67},erlang},{atom,{92,67},apply}},
          [{var,{92,20},'Erlang'},
           {atom,{92,28},is_function},
           {block,0,
            [{cons,
              {92,28},
              {'fun',
               {92,41},
               {function,
                {atom,{92,45},erlang},
                {atom,{92,52},list_to_binary},
                {integer,{92,67},1}}},
              {nil,{92,67}}}]}]}]}]}},
    {debug_line,93,43},
    {match,
     {93,5},
     {atom,{93,5},true},
     {call,
      {93,13},
      {'fun',
       {93,13},
       {clauses,
        [{clause,
          {93,13},
          [{var,{93,13},'Res'}],
          [],
          [{match,
            {93,13},
            {var,{93,13},'Res'},
            {call,
             {93,20},
             {remote,
              {93,20},
              {var,{93,20},'Erlang'},
              {atom,{93,28},is_function}},
             [{block,0,
               [{'fun',
                 {93,41},
                 {clauses,
                  [{clause,{93,44},[],[],[{atom,{93,50},ok}]}]}}]}]}}]}]}},
      [{block,0,
        [{call,
          {93,53},
          {remote,{93,53},{atom,{93,53},erlang},{atom,{93,53},apply}},
          [{var,{93,20},'Erlang'},
           {atom,{93,28},is_function},
           {block,0,
            [{cons,
              {93,28},
              {'fun',
               {93,41},
               {clauses,[{clause,{93,44},[],[],[{atom,{93,50},ok}]}]}},
              {nil,{93,53}}}]}]}]}]}},
    {debug_line,94,44},
    {match,
     {94,5},
     {atom,{94,5},false},
     {call,
      {94,14},
      {'fun',
       {94,14},
       {clauses,
        [{clause,
          {94,14},
          [{var,{94,14},'Res'}],
          [],
          [{match,
            {94,14},
            {var,{94,14},'Res'},
            {call,
             {94,21},
             {remote,
              {94,21},
              {var,{94,21},'Erlang'},
              {atom,{94,29},is_function}},
             [{atom,{94,42},blurf}]}}]}]}},
      [{block,0,
        [{call,
          {94,42},
          {remote,{94,42},{atom,{94,42},erlang},{atom,{94,42},apply}},
          [{var,{94,21},'Erlang'},
           {atom,{94,29},is_function},
           {block,0,
            [{cons,{94,29},{atom,{94,42},blurf},{nil,{94,42}}}]}]}]}]}},
    {debug_line,95,45},
    {match,
     {95,5},
     {atom,{95,5},true},
     {call,
      {95,13},
      {'fun',
       {95,13},
       {clauses,
        [{clause,
          {95,13},
          [{var,{95,13},'Res'}],
          [],
          [{match,
            {95,13},
            {var,{95,13},'Res'},
            {call,
             {95,20},
             {remote,
              {95,20},
              {var,{95,20},'Erlang'},
              {atom,{95,28},is_function}},
             [{block,0,
               [{'fun',
                 {95,41},
                 {function,
                  {atom,{95,45},erlang},
                  {atom,{95,52},list_to_binary},
                  {integer,{95,67},1}}}]},
              {integer,{95,70},1}]}}]}]}},
      [{block,0,
        [{call,
          {95,70},
          {remote,{95,70},{atom,{95,70},erlang},{atom,{95,70},apply}},
          [{var,{95,20},'Erlang'},
           {atom,{95,28},is_function},
           {block,0,
            [{cons,
              {95,28},
              {'fun',
               {95,41},
               {function,
                {atom,{95,45},erlang},
                {atom,{95,52},list_to_binary},
                {integer,{95,67},1}}},
              {cons,{95,70},{integer,{95,70},1},{nil,{95,70}}}}]}]}]}]}},
    {debug_line,96,46},
    {match,
     {96,5},
     {atom,{96,5},true},
     {call,
      {96,13},
      {'fun',
       {96,13},
       {clauses,
        [{clause,
          {96,13},
          [{var,{96,13},'Res'}],
          [],
          [{match,
            {96,13},
            {var,{96,13},'Res'},
            {call,
             {96,20},
             {remote,
              {96,20},
              {var,{96,20},'Erlang'},
              {atom,{96,28},is_function}},
             [{block,0,
               [{'fun',
                 {96,41},
                 {clauses,[{clause,{96,44},[],[],[{atom,{96,50},ok}]}]}}]},
              {integer,{96,58},0}]}}]}]}},
      [{block,0,
        [{call,
          {96,58},
          {remote,{96,58},{atom,{96,58},erlang},{atom,{96,58},apply}},
          [{var,{96,20},'Erlang'},
           {atom,{96,28},is_function},
           {block,0,
            [{cons,
              {96,28},
              {'fun',
               {96,41},
               {clauses,[{clause,{96,44},[],[],[{atom,{96,50},ok}]}]}},
              {cons,{96,58},{integer,{96,58},0},{nil,{96,58}}}}]}]}]}]}},
    {debug_line,97,47},
    {match,
     {97,5},
     {atom,{97,5},false},
     {call,
      {97,14},
      {'fun',
       {97,14},
       {clauses,
        [{clause,
          {97,14},
          [{var,{97,14},'Res'}],
          [],
          [{match,
            {97,14},
            {var,{97,14},'Res'},
            {call,
             {97,21},
             {remote,
              {97,21},
              {var,{97,21},'Erlang'},
              {atom,{97,29},is_function}},
             [{atom,{97,42},blurf},{integer,{97,49},0}]}}]}]}},
      [{block,0,
        [{call,
          {97,49},
          {remote,{97,49},{atom,{97,49},erlang},{atom,{97,49},apply}},
          [{var,{97,21},'Erlang'},
           {atom,{97,29},is_function},
           {block,0,
            [{cons,
              {97,29},
              {atom,{97,42},blurf},
              {cons,{97,49},{integer,{97,49},0},{nil,{97,49}}}}]}]}]}]}},
    {debug_line,99,48},
    {call,
     {99,5},
     {remote,{99,5},{atom,{99,5},erlang},{atom,{99,5},apply}},
     [{var,{99,11},'Mod'},{atom,{99,16},foo},{nil,{99,21}}]}]}]}.
{function,{105,1},
          bad_literal_call,1,
          [{clause,{105,1},
                   [{var,{105,1},'_'}],
                   [[{call,{105,1},
                           {remote,{105,1},
                                   {atom,{105,1},fake},
                                   {atom,{105,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,105,49},{atom,{105,1},ignore}]},
           {clause,{105,1},
                   [{var,{105,18},'I'}],
                   [],
                   [{debug_line,106,50},
                    {call,{106,5},
                          {remote,{106,6},
                                  {var,{106,5},'I'},
                                  {atom,{106,7},foo}},
                          []}]}]}.
{function,{108,1},
          foo,0,
          [{clause,{108,1},
                   [],
                   [[{call,{108,1},
                           {remote,{108,1},
                                   {atom,{108,1},fake},
                                   {atom,{108,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,108,51},{atom,{108,1},ignore}]},
           {clause,{108,1},[],[],[{debug_line,109,52},{atom,{109,5},ok}]}]}.
{function,{111,1},
          bar,1,
          [{clause,{111,1},
                   [{var,{111,1},'_'}],
                   [[{call,{111,1},
                           {remote,{111,1},
                                   {atom,{111,1},fake},
                                   {atom,{111,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,111,53},{atom,{111,1},ignore}]},
           {clause,{111,1},
                   [{var,{111,5},'A'}],
                   [],
                   [{debug_line,112,54},
                    {tuple,{112,5},[{var,{112,6},'A'}]}]}]}.
{function,{114,1},
          baz,2,
          [{clause,{114,1},
                   [{var,{114,1},'_'},{var,{114,1},'_'}],
                   [[{call,{114,1},
                           {remote,{114,1},
                                   {atom,{114,1},fake},
                                   {atom,{114,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,114,55},{atom,{114,1},ignore}]},
           {clause,{114,1},
                   [{var,{114,5},'A'},{var,{114,8},'B'}],
                   [],
                   [{debug_line,115,56},
                    {tuple,{115,5},[{var,{115,6},'A'},{var,{115,8},'B'}]}]}]}.
{function,
 {121,1},
 fun_apply,1,
 [{clause,
   {121,1},
   [{var,{121,1},'_'}],
   [[{call,
      {121,1},
      {remote,{121,1},{atom,{121,1},fake},{atom,{121,1},is_beam_bif_info}},
      []}]],
   [{debug_line,121,57},{atom,{121,1},ignore}]},
  {clause,
   {121,1},
   [{var,{121,11},'Config'}],
   [[{call,
      {121,24},
      {remote,{121,24},{atom,{121,24},erlang},{atom,{121,24},is_list}},
      [{var,{121,32},'Config'}]}]],
   [{debug_line,122,58},
    {match,
     {122,5},
     {var,{122,5},'Self'},
     {call,
      {122,12},
      {remote,{122,12},{atom,{122,12},erlang},{atom,{122,12},self}},
      []}},
    {debug_line,124,59},
    {match,
     {124,5},
     {var,{124,5},'Self'},
     {call,
      {124,13},
      {'fun',
       {124,13},
       {clauses,
        [{clause,
          {124,13},
          [{var,{124,13},'Res'}],
          [],
          [{match,
            {124,13},
            {var,{124,13},'Res'},
            {call,
             {124,23},
             {'fun',
              {124,23},
              {clauses,
               [{clause,
                 {124,26},
                 [],[],
                 [{call,
                   {124,32},
                   {remote,
                    {124,32},
                    {atom,{124,32},erlang},
                    {atom,{124,32},self}},
                   []}]}]}},
             []}}]}]}},
      [{block,0,
        [{call,
          {124,39},
          {remote,{124,39},{atom,{124,39},erlang},{atom,{124,39},apply}},
          [{block,0,
            [{'fun',
              {124,23},
              {clauses,
               [{clause,
                 {124,26},
                 [],[],
                 [{call,
                   {124,32},
                   {remote,
                    {124,32},
                    {atom,{124,32},erlang},
                    {atom,{124,32},self}},
                   []}]}]}}]},
           {nil,{124,39}}]}]}]}},
    {debug_line,125,60},
    {match,
     {125,5},
     {var,{125,5},'Self'},
     {call,
      {125,13},
      {'fun',
       {125,13},
       {clauses,
        [{clause,
          {125,13},
          [{var,{125,13},'Res'}],
          [],
          [{match,
            {125,13},
            {var,{125,13},'Res'},
            {call,
             {125,24},
             {call,
              {125,24},
              {atom,{125,24},id},
              [{block,0,
                [{'fun',
                  {125,27},
                  {clauses,
                   [{clause,
                     {125,30},
                     [],[],
                     [{call,
                       {125,36},
                       {remote,
                        {125,36},
                        {atom,{125,36},erlang},
                        {atom,{125,36},self}},
                       []}]}]}}]}]},
             []}}]}]}},
      [{block,0,
        [{call,
          {125,47},
          {remote,{125,47},{atom,{125,47},erlang},{atom,{125,47},apply}},
          [{block,0,
            [{call,
              {125,24},
              {atom,{125,24},id},
              [{block,0,
                [{'fun',
                  {125,27},
                  {clauses,
                   [{clause,
                     {125,30},
                     [],[],
                     [{call,
                       {125,36},
                       {remote,
                        {125,36},
                        {atom,{125,36},erlang},
                        {atom,{125,36},self}},
                       []}]}]}}]}]}]},
           {nil,{125,47}}]}]}]}},
    {debug_line,126,61},
    {match,
     {126,5},
     {atom,{126,5},ok},
     {call,
      {126,11},
      {'fun',
       {126,11},
       {clauses,
        [{clause,
          {126,11},
          [{var,{126,11},'Res'}],
          [],
          [{match,
            {126,11},
            {var,{126,11},'Res'},
            {call,
             {126,21},
             {'fun',
              {126,21},
              {function,
               {atom,{126,26},apply_SUITE},
               {atom,{126,33},foo},
               {integer,{126,37},0}}},
             []}}]}]}},
      [{block,0,
        [{call,
          {126,37},
          {remote,{126,37},{atom,{126,37},erlang},{atom,{126,37},apply}},
          [{block,0,
            [{'fun',
              {126,21},
              {function,
               {atom,{126,26},apply_SUITE},
               {atom,{126,33},foo},
               {integer,{126,37},0}}}]},
           {nil,{126,37}}]}]}]}},
    {debug_line,127,62},
    {match,
     {127,5},
     {atom,{127,5},ok},
     {call,
      {127,11},
      {'fun',
       {127,11},
       {clauses,
        [{clause,
          {127,11},
          [{var,{127,11},'Res'}],
          [],
          [{match,
            {127,11},
            {var,{127,11},'Res'},
            {call,
             {127,22},
             {call,
              {127,22},
              {atom,{127,22},id},
              [{block,0,
                [{'fun',
                  {127,25},
                  {function,
                   {atom,{127,30},apply_SUITE},
                   {atom,{127,37},foo},
                   {integer,{127,41},0}}}]}]},
             []}}]}]}},
      [{block,0,
        [{call,
          {127,43},
          {remote,{127,43},{atom,{127,43},erlang},{atom,{127,43},apply}},
          [{block,0,
            [{call,
              {127,22},
              {atom,{127,22},id},
              [{block,0,
                [{'fun',
                  {127,25},
                  {function,
                   {atom,{127,30},apply_SUITE},
                   {atom,{127,37},foo},
                   {integer,{127,41},0}}}]}]}]},
           {nil,{127,43}}]}]}]}},
    {debug_line,129,63},
    {match,
     {129,5},
     {op,{129,5},'-',{integer,{129,6},42}},
     {call,
      {129,12},
      {'fun',
       {129,12},
       {clauses,
        [{clause,
          {129,12},
          [{var,{129,12},'Res'}],
          [],
          [{match,
            {129,12},
            {var,{129,12},'Res'},
            {call,
             {129,22},
             {'fun',
              {129,22},
              {clauses,
               [{clause,
                 {129,25},
                 [{var,{129,26},'A'}],
                 [],
                 [{op,{129,32},'-',{var,{129,33},'A'}}]}]}},
             [{integer,{129,40},42}]}}]}]}},
      [{block,0,
        [{call,
          {129,40},
          {remote,{129,40},{atom,{129,40},erlang},{atom,{129,40},apply}},
          [{block,0,
            [{'fun',
              {129,22},
              {clauses,
               [{clause,
                 {129,25},
                 [{var,{129,26},'A'}],
                 [],
                 [{op,{129,32},'-',{var,{129,33},'A'}}]}]}}]},
           {block,0,
            [{cons,{129,35},{integer,{129,40},42},{nil,{129,40}}}]}]}]}]}},
    {debug_line,130,64},
    {match,
     {130,5},
     {cons,
      {130,5},
      {atom,{130,6},x},
      {cons,{130,8},{atom,{130,8},yy},{nil,{130,10}}}},
     {call,
      {130,15},
      {'fun',
       {130,15},
       {clauses,
        [{clause,
          {130,15},
          [{var,{130,15},'Res'}],
          [],
          [{match,
            {130,15},
            {var,{130,15},'Res'},
            {call,
             {130,26},
             {call,
              {130,26},
              {atom,{130,26},id},
              [{block,0,
                [{'fun',
                  {130,29},
                  {clauses,
                   [{clause,
                     {130,32},
                     [{var,{130,33},'T'}],
                     [],
                     [{cons,
                       {130,39},
                       {atom,{130,40},x},
                       {var,{130,42},'T'}}]}]}}]}]},
             [{block,0,
               [{cons,{130,52},{atom,{130,53},yy},{nil,{130,55}}}]}]}}]}]}},
      [{block,0,
        [{call,
          {130,55},
          {remote,{130,55},{atom,{130,55},erlang},{atom,{130,55},apply}},
          [{block,0,
            [{call,
              {130,26},
              {atom,{130,26},id},
              [{block,0,
                [{'fun',
                  {130,29},
                  {clauses,
                   [{clause,
                     {130,32},
                     [{var,{130,33},'T'}],
                     [],
                     [{cons,
                       {130,39},
                       {atom,{130,40},x},
                       {var,{130,42},'T'}}]}]}}]}]}]},
           {block,0,
            [{cons,
              {130,49},
              {cons,{130,52},{atom,{130,53},yy},{nil,{130,55}}},
              {nil,{130,55}}}]}]}]}]}},
    {debug_line,131,65},
    {match,
     {131,5},
     {tuple,{131,5},[{cons,{131,6},{atom,{131,7},a},{atom,{131,9},b}}]},
     {call,
      {131,16},
      {'fun',
       {131,16},
       {clauses,
        [{clause,
          {131,16},
          [{var,{131,16},'Res'}],
          [],
          [{match,
            {131,16},
            {var,{131,16},'Res'},
            {call,
             {131,26},
             {'fun',
              {131,26},
              {function,
               {atom,{131,31},apply_SUITE},
               {atom,{131,38},bar},
               {integer,{131,42},1}}},
             [{block,0,
               [{cons,{131,45},{atom,{131,46},a},{atom,{131,48},b}}]}]}}]}]}},
      [{block,0,
        [{call,
          {131,49},
          {remote,{131,49},{atom,{131,49},erlang},{atom,{131,49},apply}},
          [{block,0,
            [{'fun',
              {131,26},
              {function,
               {atom,{131,31},apply_SUITE},
               {atom,{131,38},bar},
               {integer,{131,42},1}}}]},
           {block,0,
            [{cons,
              {131,42},
              {cons,{131,45},{atom,{131,46},a},{atom,{131,48},b}},
              {nil,{131,49}}}]}]}]}]}},
    {debug_line,132,66},
    {match,
     {132,5},
     {tuple,{132,5},[{cons,{132,6},{atom,{132,7},a},{atom,{132,9},b}}]},
     {call,
      {132,16},
      {'fun',
       {132,16},
       {clauses,
        [{clause,
          {132,16},
          [{var,{132,16},'Res'}],
          [],
          [{match,
            {132,16},
            {var,{132,16},'Res'},
            {call,
             {132,27},
             {call,
              {132,27},
              {atom,{132,27},id},
              [{block,0,
                [{'fun',
                  {132,30},
                  {function,
                   {atom,{132,35},apply_SUITE},
                   {atom,{132,42},bar},
                   {integer,{132,46},1}}}]}]},
             [{block,0,
               [{cons,{132,51},{atom,{132,52},a},{atom,{132,54},b}}]}]}}]}]}},
      [{block,0,
        [{call,
          {132,55},
          {remote,{132,55},{atom,{132,55},erlang},{atom,{132,55},apply}},
          [{block,0,
            [{call,
              {132,27},
              {atom,{132,27},id},
              [{block,0,
                [{'fun',
                  {132,30},
                  {function,
                   {atom,{132,35},apply_SUITE},
                   {atom,{132,42},bar},
                   {integer,{132,46},1}}}]}]}]},
           {block,0,
            [{cons,
              {132,48},
              {cons,{132,51},{atom,{132,52},a},{atom,{132,54},b}},
              {nil,{132,55}}}]}]}]}]}},
    {debug_line,134,67},
    {match,
     {134,5},
     {tuple,{134,5},[{atom,{134,6},a},{atom,{134,8},b}]},
     {call,
      {134,14},
      {'fun',
       {134,14},
       {clauses,
        [{clause,
          {134,14},
          [{var,{134,14},'Res'}],
          [],
          [{match,
            {134,14},
            {var,{134,14},'Res'},
            {call,
             {134,24},
             {'fun',
              {134,24},
              {clauses,
               [{clause,
                 {134,27},
                 [{var,{134,28},'A'},{var,{134,31},'B'}],
                 [],
                 [{tuple,
                   {134,37},
                   [{var,{134,38},'A'},{var,{134,40},'B'}]}]}]}},
             [{atom,{134,48},a},{atom,{134,51},b}]}}]}]}},
      [{block,0,
        [{call,
          {134,51},
          {remote,{134,51},{atom,{134,51},erlang},{atom,{134,51},apply}},
          [{block,0,
            [{'fun',
              {134,24},
              {clauses,
               [{clause,
                 {134,27},
                 [{var,{134,28},'A'},{var,{134,31},'B'}],
                 [],
                 [{tuple,
                   {134,37},
                   [{var,{134,38},'A'},{var,{134,40},'B'}]}]}]}}]},
           {block,0,
            [{cons,
              {134,43},
              {atom,{134,48},a},
              {cons,{134,51},{atom,{134,51},b},{nil,{134,51}}}}]}]}]}]}},
    {debug_line,135,68},
    {match,
     {135,5},
     {tuple,
      {135,5},
      [{atom,{135,6},a},{cons,{135,8},{atom,{135,9},b},{nil,{135,10}}}]},
     {call,
      {135,16},
      {'fun',
       {135,16},
       {clauses,
        [{clause,
          {135,16},
          [{var,{135,16},'Res'}],
          [],
          [{match,
            {135,16},
            {var,{135,16},'Res'},
            {call,
             {135,27},
             {call,
              {135,27},
              {atom,{135,27},id},
              [{block,0,
                [{'fun',
                  {135,30},
                  {clauses,
                   [{clause,
                     {135,33},
                     [{var,{135,34},'A'},{var,{135,37},'B'}],
                     [],
                     [{tuple,
                       {135,43},
                       [{var,{135,44},'A'},{var,{135,46},'B'}]}]}]}}]}]},
             [{atom,{135,56},a},
              {block,0,
               [{cons,{135,59},{atom,{135,60},b},{nil,{135,61}}}]}]}}]}]}},
      [{block,0,
        [{call,
          {135,61},
          {remote,{135,61},{atom,{135,61},erlang},{atom,{135,61},apply}},
          [{block,0,
            [{call,
              {135,27},
              {atom,{135,27},id},
              [{block,0,
                [{'fun',
                  {135,30},
                  {clauses,
                   [{clause,
                     {135,33},
                     [{var,{135,34},'A'},{var,{135,37},'B'}],
                     [],
                     [{tuple,
                       {135,43},
                       [{var,{135,44},'A'},{var,{135,46},'B'}]}]}]}}]}]}]},
           {block,0,
            [{cons,
              {135,53},
              {atom,{135,56},a},
              {cons,
               {135,59},
               {cons,{135,59},{atom,{135,60},b},{nil,{135,61}}},
               {nil,{135,61}}}}]}]}]}]}},
    {debug_line,136,69},
    {match,
     {136,5},
     {tuple,
      {136,5},
      [{integer,{136,6},42},{tuple,{136,9},[{atom,{136,10},a}]}]},
     {call,
      {136,17},
      {'fun',
       {136,17},
       {clauses,
        [{clause,
          {136,17},
          [{var,{136,17},'Res'}],
          [],
          [{match,
            {136,17},
            {var,{136,17},'Res'},
            {call,
             {136,28},
             {call,
              {136,28},
              {atom,{136,28},id},
              [{block,0,
                [{'fun',
                  {136,31},
                  {function,
                   {atom,{136,36},apply_SUITE},
                   {atom,{136,43},baz},
                   {integer,{136,47},2}}}]}]},
             [{integer,{136,52},42},
              {block,0,[{tuple,{136,56},[{atom,{136,57},a}]}]}]}}]}]}},
      [{block,0,
        [{call,
          {136,58},
          {remote,{136,58},{atom,{136,58},erlang},{atom,{136,58},apply}},
          [{block,0,
            [{call,
              {136,28},
              {atom,{136,28},id},
              [{block,0,
                [{'fun',
                  {136,31},
                  {function,
                   {atom,{136,36},apply_SUITE},
                   {atom,{136,43},baz},
                   {integer,{136,47},2}}}]}]}]},
           {block,0,
            [{cons,
              {136,49},
              {integer,{136,52},42},
              {cons,
               {136,56},
               {tuple,{136,56},[{atom,{136,57},a}]},
               {nil,{136,58}}}}]}]}]}]}},
    {debug_line,138,70},
    {atom,{138,5},ok}]}]}.
{function,{140,1},
          involved,1,
          [{clause,{140,1},
                   [{var,{140,1},'_'}],
                   [[{call,{140,1},
                           {remote,{140,1},
                                   {atom,{140,1},fake},
                                   {atom,{140,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,140,71},{atom,{140,1},ignore}]},
           {clause,{140,1},
                   [{var,{140,10},'_Config'}],
                   [],
                   [{debug_line,141,72},
                    {op,{141,12},
                        '!',
                        {call,{141,5},
                              {remote,{141,5},
                                      {atom,{141,5},erlang},
                                      {atom,{141,5},self}},
                              []},
                        {atom,{141,14},message}},
                    {debug_line,142,73},
                    {match,{142,5},
                           {atom,{142,5},ok},
                           {call,{142,10},{atom,{142,10},involved_1},[]}},
                    {debug_line,144,74},
                    {op,{144,12},
                        '!',
                        {call,{144,5},
                              {remote,{144,5},
                                      {atom,{144,5},erlang},
                                      {atom,{144,5},self}},
                              []},
                        {atom,{144,14},message}},
                    {debug_line,145,75},
                    {match,{145,5},
                           {atom,{145,5},error},
                           {call,{145,13},{atom,{145,13},involved_2},[]}},
                    {debug_line,146,76},
                    {atom,{146,5},ok}]}]}.
{function,
    {148,1},
    involved_1,0,
    [{clause,
         {148,1},
         [],
         [[{call,
               {148,1},
               {remote,
                   {148,1},
                   {atom,{148,1},fake},
                   {atom,{148,1},is_beam_bif_info}},
               []}]],
         [{debug_line,148,77},{atom,{148,1},ignore}]},
     {clause,
         {148,1},
         [],[],
         [{debug_line,149,78},
          {'try',
              {149,5},
              [{debug_line,150,79},
               {'receive',
                   {150,9},
                   [{clause,
                        {151,13},
                        [{var,{151,13},'_'}],
                        [],
                        [{debug_line,152,80},
                         {call,
                             {152,17},
                             {'fun',
                                 {152,17},
                                 {function,
                                     {atom,{152,21},erlang},
                                     {atom,{152,28},atom_to_list},
                                     {integer,{152,41},1}}},
                             [{atom,{152,43},''}]}]}]}],
              [{clause,
                   {155,9},
                   [{nil,{155,9}}],
                   [],
                   [{debug_line,156,81},{atom,{156,13},ok}]}],
              [{clause,
                   {158,9},
                   [{tuple,
                        {158,9},
                        [{var,{158,9},'_'},
                         {var,{158,11},'_'},
                         {var,{158,11},'_'}]}],
                   [],
                   [{debug_line,159,82},{atom,{159,13},error}]}],
              []}]}]}.
{function,
    {162,1},
    involved_2,0,
    [{clause,
         {162,1},
         [],
         [[{call,
               {162,1},
               {remote,
                   {162,1},
                   {atom,{162,1},fake},
                   {atom,{162,1},is_beam_bif_info}},
               []}]],
         [{debug_line,162,83},{atom,{162,1},ignore}]},
     {clause,
         {162,1},
         [],[],
         [{debug_line,163,84},
          {'try',
              {163,5},
              [{debug_line,164,85},
               {'receive',
                   {164,9},
                   [{clause,
                        {165,13},
                        [{var,{165,13},'_'}],
                        [],
                        [{debug_line,166,86},
                         {call,
                             {166,17},
                             {'fun',
                                 {166,17},
                                 {function,
                                     {atom,{166,21},erlang},
                                     {atom,{166,28},atom_to_list},
                                     {integer,{166,41},1}}},
                             []}]}]}],
              [{clause,
                   {169,9},
                   [{nil,{169,9}}],
                   [],
                   [{debug_line,170,87},{atom,{170,13},ok}]}],
              [{clause,
                   {172,9},
                   [{tuple,
                        {172,9},
                        [{var,{172,9},'_'},
                         {var,{172,11},'_'},
                         {var,{172,11},'_'}]}],
                   [],
                   [{debug_line,173,88},{atom,{173,13},error}]}],
              []}]}]}.
{function,{176,1},
          id,1,
          [{clause,{176,1},
                   [{var,{176,1},'_'}],
                   [[{call,{176,1},
                           {remote,{176,1},
                                   {atom,{176,1},fake},
                                   {atom,{176,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,176,89},{atom,{176,1},ignore}]},
           {clause,{176,1},
                   [{var,{176,4},'I'}],
                   [],
                   [{debug_line,176,90},{var,{176,10},'I'}]}]}.
{eof,{177,1}}.
