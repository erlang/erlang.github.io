{attribute,{1,1},file,{"core_scan.erl",1}}.
{attribute,{46,2},module,core_scan}.
{attribute,{49,2},compile,nowarn_deprecated_catch}.
{attribute,{51,2},export,[{string,1},{string,2},{format_error,1}]}.
{attribute,{53,2},import,{lists,[{reverse,1}]}}.
{attribute,{55,2},type,{location,{type,{55,21},integer,[]},[]}}.
{attribute,{56,2},type,{category,{type,{56,21},atom,[]},[]}}.
{attribute,{57,2},
           type,
           {symbol,{type,{57,19},
                         union,
                         [{type,{57,19},atom,[]},
                          {type,{57,28},float,[]},
                          {type,{57,38},integer,[]},
                          {type,{57,50},string,[]}]},
                   []}}.
{attribute,
    {58,2},
    type,
    {token,
        {type,
            {58,18},
            union,
            [{type,
                 {58,18},
                 tuple,
                 [{user_type,{58,19},category,[]},
                  {ann_type,
                      {58,31},
                      [{var,{58,31},'Anno'},{user_type,{58,39},location,[]}]},
                  {user_type,{58,51},symbol,[]}]},
             {type,
                 {59,18},
                 tuple,
                 [{user_type,{59,19},category,[]},
                  {ann_type,
                      {59,31},
                      [{var,{59,31},'Anno'},
                       {user_type,{59,39},location,[]}]}]}]},
        []}}.
{attribute,{60,2},
           type,
           {tokens,{type,{60,19},list,[{user_type,{60,20},token,[]}]},[]}}.
{attribute,{61,2},type,{error_description,{type,{61,30},term,[]},[]}}.
{attribute,
    {62,2},
    type,
    {error_info,
        {type,
            {62,23},
            tuple,
            [{remote_type,
                 {62,24},
                 [{atom,{62,24},erl_anno},{atom,{62,33},location},[]]},
             {type,{62,45},module,[]},
             {user_type,{62,55},error_description,[]}]},
        []}}.
{attribute,
    {75,2},
    spec,
    {{string,1},
     [{type,
          {75,13},
          bounded_fun,
          [{type,
               {75,13},
               'fun',
               [{type,{75,13},product,[{var,{75,14},'String'}]},
                {var,{75,25},'Return'}]},
           [{type,
                {76,7},
                constraint,
                [{atom,{76,7},is_subtype},
                 [{var,{76,7},'String'},{type,{76,17},string,[]}]]},
            {type,
                {77,7},
                constraint,
                [{atom,{77,7},is_subtype},
                 [{var,{77,7},'Return'},
                  {type,
                      {77,17},
                      union,
                      [{type,
                           {77,17},
                           tuple,
                           [{atom,{77,18},ok},
                            {ann_type,
                                {77,24},
                                [{var,{77,24},'Tokens'},
                                 {user_type,{77,34},tokens,[]}]},
                            {var,{77,44},'EndLocation'}]},
                       {type,
                           {78,17},
                           tuple,
                           [{atom,{78,18},error},
                            {ann_type,
                                {78,27},
                                [{var,{78,27},'ErrorInfo'},
                                 {user_type,{78,40},error_info,[]}]},
                            {var,{78,54},'ErrorLocation'}]}]}]]},
            {type,
                {79,7},
                constraint,
                [{atom,{79,7},is_subtype},
                 [{var,{79,7},'EndLocation'},
                  {user_type,{79,22},location,[]}]]},
            {type,
                {80,7},
                constraint,
                [{atom,{80,7},is_subtype},
                 [{var,{80,7},'ErrorLocation'},
                  {user_type,{80,24},location,[]}]]}]]}]}}.
{function,{82,1},
          string,1,
          [{clause,{82,1},
                   [{var,{82,1},'_'}],
                   [[{call,{82,1},
                           {remote,{82,1},
                                   {atom,{82,1},fake},
                                   {atom,{82,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,82,1},{atom,{82,1},ignore}]},
           {clause,{82,1},
                   [{var,{82,8},'Cs'}],
                   [],
                   [{debug_line,82,2},
                    {call,{82,15},
                          {atom,{82,15},string},
                          [{var,{82,22},'Cs'},{integer,{82,26},1}]}]}]}.
{attribute,
    {84,2},
    spec,
    {{string,2},
     [{type,
          {84,13},
          bounded_fun,
          [{type,
               {84,13},
               'fun',
               [{type,
                    {84,13},
                    product,
                    [{var,{84,14},'String'},{var,{84,22},'StartLocation'}]},
                {var,{84,40},'Return'}]},
           [{type,
                {85,7},
                constraint,
                [{atom,{85,7},is_subtype},
                 [{var,{85,7},'String'},{type,{85,17},string,[]}]]},
            {type,
                {86,7},
                constraint,
                [{atom,{86,7},is_subtype},
                 [{var,{86,7},'Return'},
                  {type,
                      {86,17},
                      union,
                      [{type,
                           {86,17},
                           tuple,
                           [{atom,{86,18},ok},
                            {ann_type,
                                {86,24},
                                [{var,{86,24},'Tokens'},
                                 {user_type,{86,34},tokens,[]}]},
                            {var,{86,44},'EndLocation'}]},
                       {type,
                           {87,17},
                           tuple,
                           [{atom,{87,18},error},
                            {ann_type,
                                {87,27},
                                [{var,{87,27},'ErrorInfo'},
                                 {user_type,{87,40},error_info,[]}]},
                            {var,{87,54},'ErrorLocation'}]}]}]]},
            {type,
                {88,7},
                constraint,
                [{atom,{88,7},is_subtype},
                 [{var,{88,7},'StartLocation'},
                  {user_type,{88,24},location,[]}]]},
            {type,
                {89,7},
                constraint,
                [{atom,{89,7},is_subtype},
                 [{var,{89,7},'EndLocation'},
                  {user_type,{89,22},location,[]}]]},
            {type,
                {90,7},
                constraint,
                [{atom,{90,7},is_subtype},
                 [{var,{90,7},'ErrorLocation'},
                  {user_type,{90,24},location,[]}]]}]]}]}}.
{function,
 {92,1},
 string,2,
 [{clause,
   {92,1},
   [{var,{92,1},'_'},{var,{92,1},'_'}],
   [[{call,
      {92,1},
      {remote,{92,1},{atom,{92,1},fake},{atom,{92,1},is_beam_bif_info}},
      []}]],
   [{debug_line,92,3},{atom,{92,1},ignore}]},
  {clause,
   {92,1},
   [{var,{92,8},'Cs'},{var,{92,12},'Sp'}],
   [],
   [{debug_line,94,4},
    {'case',
     {94,5},
     {call,
      {94,10},
      {atom,{94,10},string_pre_scan},
      [{var,{94,26},'Cs'},{nil,{94,30}},{var,{94,34},'Sp'}]},
     [{clause,
       {95,2},
       [{tuple,
         {95,2},
         [{atom,{95,3},done},
          {var,{95,8},'_'},
          {var,{95,10},'SoFar'},
          {var,{95,16},'Ep'}]}],
       [],
       [{debug_line,96,5},
        {'case',
         {96,6},
         {call,
          {96,11},
          {atom,{96,11},scan},
          [{block,0,
            [{call,
              {96,16},
              {remote,{96,16},{atom,{96,16},lists},{atom,{96,16},reverse}},
              [{var,{96,24},'SoFar'}]}]},
           {var,{96,32},'Sp'}]},
         [{clause,
           {97,3},
           [{tuple,{97,3},[{atom,{97,4},ok},{var,{97,7},'Toks'}]}],
           [],
           [{debug_line,97,6},
            {tuple,
             {97,16},
             [{atom,{97,17},ok},{var,{97,20},'Toks'},{var,{97,25},'Ep'}]}]},
          {clause,
           {98,3},
           [{tuple,{98,3},[{atom,{98,4},error},{var,{98,10},'E'}]}],
           [],
           [{debug_line,98,7},
            {tuple,
             {98,16},
             [{atom,{98,17},error},
              {var,{98,23},'E'},
              {var,{98,25},'Ep'}]}]}]}]},
      {clause,
       {100,2},
       [{var,{100,2},'Other'}],
       [],
       [{debug_line,100,8},{var,{100,11},'Other'}]}]}]}]}.
{function,
    {106,1},
    string_pre_scan,3,
    [{clause,
         {106,1},
         [{var,{106,1},'_'},{var,{106,1},'_'},{var,{106,1},'_'}],
         [[{call,
               {106,1},
               {remote,
                   {106,1},
                   {atom,{106,1},fake},
                   {atom,{106,1},is_beam_bif_info}},
               []}]],
         [{debug_line,106,9},{atom,{106,1},ignore}]},
     {clause,
         {106,1},
         [{var,{106,17},'Cs'},{var,{106,21},'SoFar0'},{var,{106,29},'Sp'}],
         [],
         [{debug_line,107,10},
          {'case',
              {107,5},
              {call,
                  {107,10},
                  {atom,{107,10},pre_scan},
                  [{var,{107,19},'Cs'},
                   {var,{107,23},'SoFar0'},
                   {var,{107,31},'Sp'}]},
              [{clause,
                   {108,2},
                   [{tuple,
                        {108,2},
                        [{atom,{108,3},done},
                         {var,{108,8},'Rest'},
                         {var,{108,13},'SoFar1'},
                         {var,{108,20},'Ep'}]}],
                   [],
                   [{debug_line,109,11},
                    {tuple,
                        {109,6},
                        [{atom,{109,7},done},
                         {var,{109,12},'Rest'},
                         {var,{109,17},'SoFar1'},
                         {var,{109,24},'Ep'}]}]},
               {clause,
                   {110,2},
                   [{tuple,
                        {110,2},
                        [{atom,{110,3},more},
                         {var,{110,8},'Rest'},
                         {var,{110,13},'SoFar1'},
                         {var,{110,20},'Ep'}]}],
                   [],
                   [{debug_line,111,12},
                    {call,
                        {111,6},
                        {atom,{111,6},string_pre_scan},
                        [{block,0,
                             [{op,{111,27},
                                  '++',
                                  {var,{111,22},'Rest'},
                                  {atom,{111,30},eof}}]},
                         {var,{111,35},'SoFar1'},
                         {var,{111,43},'Ep'}]}]},
               {clause,
                   {112,2},
                   [{var,{112,2},'Other'}],
                   [],
                   [{debug_line,112,13},{var,{112,11},'Other'}]}]}]}]}.
{attribute,{118,2},
           spec,
           {{format_error,1},
            [{type,{118,19},
                   'fun',
                   [{type,{118,19},product,[{type,{118,20},term,[]}]},
                    {type,{118,31},iolist,[]}]}]}}.
{function,
    {120,1},
    format_error,1,
    [{clause,
         {120,1},
         [{var,{120,1},'_'}],
         [[{call,
               {120,1},
               {remote,
                   {120,1},
                   {atom,{120,1},fake},
                   {atom,{120,1},is_beam_bif_info}},
               []}]],
         [{debug_line,120,14},{atom,{120,1},ignore}]},
     {clause,
         {120,1},
         [{tuple,
              {120,14},
              [{atom,{120,15},string},
               {var,{120,22},'Quote'},
               {var,{120,28},'Head'}]}],
         [],
         [{debug_line,121,15},
          {cons,
              {121,5},
              {op,{121,22},
                  '++',
                  {string,{121,6},"unterminated "},
                  {op,{121,45},
                      '++',
                      {call,
                          {121,25},
                          {atom,{121,25},string_thing},
                          [{var,{121,38},'Quote'}]},
                      {op,{122,24},
                          '++',
                          {string,{122,6}," starting with "},
                          {call,
                              {122,27},
                              {remote,
                                  {122,33},
                                  {atom,{122,27},io_lib},
                                  {atom,{122,34},write_string}},
                              [{var,{122,47},'Head'},
                               {var,{122,52},'Quote'}]}}}},
              {nil,{122,58}}}]},
     {clause,
         {123,1},
         [{tuple,{123,14},[{atom,{123,15},illegal},{var,{123,23},'Type'}]}],
         [],
         [{debug_line,123,16},
          {call,
              {123,33},
              {remote,{123,39},{atom,{123,33},io_lib},{atom,{123,40},fwrite}},
              [{block,0,[{string,{123,47},"illegal ~w"}]},
               {block,0,
                   [{cons,{123,61},{var,{123,62},'Type'},{nil,{123,66}}}]}]}]},
     {clause,
         {124,1},
         [{atom,{124,14},char}],
         [],
         [{debug_line,124,17},{string,{124,23},"unterminated character"}]},
     {clause,
         {125,1},
         [{atom,{125,14},scan}],
         [],
         [{debug_line,125,18},{string,{125,23},"premature end"}]},
     {clause,
         {126,1},
         [{tuple,{126,14},[{atom,{126,15},base},{var,{126,20},'Base'}]}],
         [],
         [{debug_line,126,19},
          {call,
              {126,30},
              {remote,{126,36},{atom,{126,30},io_lib},{atom,{126,37},fwrite}},
              [{block,0,[{string,{126,44},"illegal base '~w'"}]},
               {block,0,
                   [{cons,{126,65},{var,{126,66},'Base'},{nil,{126,70}}}]}]}]},
     {clause,
         {127,1},
         [{atom,{127,14},float}],
         [],
         [{debug_line,127,20},{string,{127,24},"bad float"}]},
     {clause,
         {128,1},
         [{var,{128,14},'Other'}],
         [],
         [{debug_line,128,21},
          {call,
              {128,24},
              {remote,{128,30},{atom,{128,24},io_lib},{atom,{128,31},write}},
              [{var,{128,37},'Other'}]}]}]}.
{function,{130,1},
          string_thing,1,
          [{clause,{130,1},
                   [{var,{130,1},'_'}],
                   [[{call,{130,1},
                           {remote,{130,1},
                                   {atom,{130,1},fake},
                                   {atom,{130,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,130,22},{atom,{130,1},ignore}]},
           {clause,{130,1},
                   [{char,{130,14},39}],
                   [],
                   [{debug_line,130,23},{string,{130,21},"atom"}]},
           {clause,{131,1},
                   [{char,{131,14},34}],
                   [],
                   [{debug_line,131,24},{string,{131,21},"string"}]}]}.
{function,{154,1},
          pre_scan,3,
          [{clause,{154,1},
                   [{var,{154,1},'_'},{var,{154,1},'_'},{var,{154,1},'_'}],
                   [[{call,{154,1},
                           {remote,{154,1},
                                   {atom,{154,1},fake},
                                   {atom,{154,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,154,25},{atom,{154,1},ignore}]},
           {clause,{154,1},
                   [{cons,{154,10},{var,{154,11},'C'},{var,{154,13},'Cs'}},
                    {var,{154,18},'SoFar'},
                    {var,{154,25},'Pos'}],
                   [],
                   [{debug_line,155,26},
                    {call,{155,5},
                          {atom,{155,5},pre_scan},
                          [{var,{155,14},'C'},
                           {var,{155,17},'Cs'},
                           {var,{155,21},'SoFar'},
                           {var,{155,28},'Pos'}]}]},
           {clause,{156,1},
                   [{nil,{156,10}},
                    {var,{156,14},'SoFar'},
                    {var,{156,21},'Pos'}],
                   [],
                   [{debug_line,157,27},
                    {tuple,{157,5},
                           [{atom,{157,6},more},
                            {nil,{157,11}},
                            {var,{157,14},'SoFar'},
                            {var,{157,20},'Pos'}]}]},
           {clause,{158,1},
                   [{atom,{158,10},eof},
                    {var,{158,15},'SoFar'},
                    {var,{158,22},'Pos'}],
                   [],
                   [{debug_line,159,28},
                    {tuple,{159,5},
                           [{atom,{159,6},done},
                            {atom,{159,11},eof},
                            {var,{159,15},'SoFar'},
                            {var,{159,21},'Pos'}]}]}]}.
{function,
    {163,1},
    pre_scan,4,
    [{clause,
         {163,1},
         [{var,{163,1},'_'},
          {var,{163,1},'_'},
          {var,{163,1},'_'},
          {var,{163,1},'_'}],
         [[{call,
               {163,1},
               {remote,
                   {163,1},
                   {atom,{163,1},fake},
                   {atom,{163,1},is_beam_bif_info}},
               []}]],
         [{debug_line,163,29},{atom,{163,1},ignore}]},
     {clause,
         {163,1},
         [{char,{163,10},36},
          {var,{163,14},'Cs0'},
          {var,{163,19},'SoFar0'},
          {var,{163,27},'Pos'}],
         [],
         [{debug_line,164,30},
          {'case',
              {164,5},
              {call,
                  {164,10},
                  {atom,{164,10},pre_char},
                  [{var,{164,19},'Cs0'},
                   {block,0,
                       [{cons,
                            {164,24},
                            {char,{164,25},36},
                            {var,{164,28},'SoFar0'}}]}]},
              [{clause,
                   {165,2},
                   [{tuple,
                        {165,2},
                        [{var,{165,3},'Cs'},{var,{165,6},'SoFar'}]}],
                   [],
                   [{debug_line,166,31},
                    {call,
                        {166,6},
                        {atom,{166,6},pre_scan},
                        [{var,{166,15},'Cs'},
                         {var,{166,19},'SoFar'},
                         {var,{166,26},'Pos'}]}]},
               {clause,
                   {167,2},
                   [{atom,{167,2},more}],
                   [],
                   [{debug_line,168,32},
                    {tuple,
                        {168,6},
                        [{atom,{168,7},more},
                         {cons,
                             {168,12},
                             {char,{168,13},36},
                             {var,{168,16},'Cs0'}},
                         {var,{168,21},'SoFar0'},
                         {var,{168,29},'Pos'}]}]},
               {clause,
                   {169,2},
                   [{atom,{169,2},error}],
                   [],
                   [{debug_line,170,33},
                    {call,
                        {170,6},
                        {atom,{170,6},pre_error},
                        [{atom,{170,16},char},
                         {var,{170,22},'Pos'},
                         {var,{170,27},'Pos'}]}]}]}]},
     {clause,
         {172,1},
         [{char,{172,10},39},
          {var,{172,14},'Cs'},
          {var,{172,18},'SoFar'},
          {var,{172,25},'Pos'}],
         [],
         [{debug_line,173,34},
          {call,
              {173,5},
              {atom,{173,5},pre_string},
              [{var,{173,16},'Cs'},
               {block,0,[{char,{173,20},39}]},
               {atom,{173,24},'\''},
               {var,{173,30},'Pos'},
               {block,0,
                   [{cons,
                        {173,35},
                        {char,{173,36},39},
                        {var,{173,39},'SoFar'}}]},
               {var,{173,47},'Pos'}]}]},
     {clause,
         {174,1},
         [{tuple,{174,10},[{atom,{174,11},'\''},{var,{174,16},'Sp'}]},
          {var,{174,21},'Cs'},
          {var,{174,25},'SoFar'},
          {var,{174,32},'Pos'}],
         [],
         [{debug_line,175,35},
          {call,
              {175,5},
              {atom,{175,5},pre_string},
              [{var,{175,16},'Cs'},
               {block,0,[{char,{175,20},39}]},
               {atom,{175,24},'\''},
               {var,{175,30},'Sp'},
               {var,{175,34},'SoFar'},
               {var,{175,41},'Pos'}]}]},
     {clause,
         {176,1},
         [{char,{176,10},34},
          {var,{176,14},'Cs'},
          {var,{176,18},'SoFar'},
          {var,{176,25},'Pos'}],
         [],
         [{debug_line,177,36},
          {call,
              {177,5},
              {atom,{177,5},pre_string},
              [{var,{177,16},'Cs'},
               {block,0,[{char,{177,20},34}]},
               {atom,{177,24},'"'},
               {var,{177,29},'Pos'},
               {block,0,
                   [{cons,
                        {177,34},
                        {char,{177,35},34},
                        {var,{177,38},'SoFar'}}]},
               {var,{177,46},'Pos'}]}]},
     {clause,
         {178,1},
         [{tuple,{178,10},[{atom,{178,11},'"'},{var,{178,15},'Sp'}]},
          {var,{178,20},'Cs'},
          {var,{178,24},'SoFar'},
          {var,{178,31},'Pos'}],
         [],
         [{debug_line,179,37},
          {call,
              {179,5},
              {atom,{179,5},pre_string},
              [{var,{179,16},'Cs'},
               {block,0,[{char,{179,20},34}]},
               {atom,{179,24},'"'},
               {var,{179,29},'Sp'},
               {var,{179,33},'SoFar'},
               {var,{179,40},'Pos'}]}]},
     {clause,
         {180,1},
         [{char,{180,10},37},
          {var,{180,14},'Cs'},
          {var,{180,18},'SoFar'},
          {var,{180,25},'Pos'}],
         [],
         [{debug_line,181,38},
          {call,
              {181,5},
              {atom,{181,5},pre_comment},
              [{var,{181,17},'Cs'},
               {var,{181,21},'SoFar'},
               {var,{181,28},'Pos'}]}]},
     {clause,
         {182,1},
         [{atom,{182,10},'%'},
          {var,{182,15},'Cs'},
          {var,{182,19},'SoFar'},
          {var,{182,26},'Pos'}],
         [],
         [{debug_line,183,39},
          {call,
              {183,5},
              {atom,{183,5},pre_comment},
              [{var,{183,17},'Cs'},
               {var,{183,21},'SoFar'},
               {var,{183,28},'Pos'}]}]},
     {clause,
         {184,1},
         [{char,{184,10},10},
          {var,{184,15},'Cs'},
          {var,{184,19},'SoFar'},
          {var,{184,26},'Pos'}],
         [],
         [{debug_line,185,40},
          {call,
              {185,5},
              {atom,{185,5},pre_scan},
              [{var,{185,14},'Cs'},
               {block,0,
                   [{cons,
                        {185,18},
                        {char,{185,19},10},
                        {var,{185,23},'SoFar'}}]},
               {block,0,
                   [{op,{185,34},
                        '+',
                        {var,{185,31},'Pos'},
                        {integer,{185,35},1}}]}]}]},
     {clause,
         {186,1},
         [{var,{186,10},'C'},
          {var,{186,13},'Cs'},
          {var,{186,17},'SoFar'},
          {var,{186,24},'Pos'}],
         [],
         [{debug_line,187,41},
          {call,
              {187,5},
              {atom,{187,5},pre_scan},
              [{var,{187,14},'Cs'},
               {block,0,
                   [{cons,
                        {187,18},
                        {var,{187,19},'C'},
                        {var,{187,21},'SoFar'}}]},
               {var,{187,29},'Pos'}]}]}]}.
{function,
    {191,1},
    pre_string,6,
    [{clause,
         {191,1},
         [{var,{191,1},'_'},
          {var,{191,1},'_'},
          {var,{191,1},'_'},
          {var,{191,1},'_'},
          {var,{191,1},'_'},
          {var,{191,1},'_'}],
         [[{call,
               {191,1},
               {remote,
                   {191,1},
                   {atom,{191,1},fake},
                   {atom,{191,1},is_beam_bif_info}},
               []}]],
         [{debug_line,191,42},{atom,{191,1},ignore}]},
     {clause,
         {191,1},
         [{cons,{191,12},{var,{191,13},'Q'},{var,{191,15},'Cs'}},
          {var,{191,20},'Q'},
          {var,{191,23},'_'},
          {var,{191,26},'_'},
          {var,{191,29},'SoFar'},
          {var,{191,36},'Pos'}],
         [],
         [{debug_line,192,43},
          {call,
              {192,5},
              {atom,{192,5},pre_scan},
              [{var,{192,14},'Cs'},
               {block,0,
                   [{cons,
                        {192,18},
                        {var,{192,19},'Q'},
                        {var,{192,21},'SoFar'}}]},
               {var,{192,29},'Pos'}]}]},
     {clause,
         {193,1},
         [{cons,{193,12},{char,{193,13},10},{var,{193,17},'Cs'}},
          {var,{193,22},'Q'},
          {var,{193,25},'Reent'},
          {var,{193,32},'Sp'},
          {var,{193,36},'SoFar'},
          {var,{193,43},'Pos'}],
         [],
         [{debug_line,194,44},
          {call,
              {194,5},
              {atom,{194,5},pre_string},
              [{var,{194,16},'Cs'},
               {var,{194,20},'Q'},
               {var,{194,23},'Reent'},
               {var,{194,30},'Sp'},
               {block,0,
                   [{cons,
                        {194,34},
                        {char,{194,35},10},
                        {var,{194,39},'SoFar'}}]},
               {block,0,
                   [{op,{194,50},
                        '+',
                        {var,{194,47},'Pos'},
                        {integer,{194,51},1}}]}]}]},
     {clause,
         {195,1},
         [{cons,{195,12},{char,{195,13},92},{var,{195,17},'Cs0'}},
          {var,{195,23},'Q'},
          {var,{195,26},'Reent'},
          {var,{195,33},'Sp'},
          {var,{195,37},'SoFar0'},
          {var,{195,45},'Pos'}],
         [],
         [{debug_line,196,45},
          {'case',
              {196,5},
              {call,
                  {196,10},
                  {atom,{196,10},pre_escape},
                  [{var,{196,21},'Cs0'},{var,{196,26},'SoFar0'}]},
              [{clause,
                   {197,2},
                   [{tuple,
                        {197,2},
                        [{var,{197,3},'Cs'},{var,{197,6},'SoFar'}]}],
                   [],
                   [{debug_line,198,46},
                    {call,
                        {198,6},
                        {atom,{198,6},pre_string},
                        [{var,{198,17},'Cs'},
                         {var,{198,21},'Q'},
                         {var,{198,24},'Reent'},
                         {var,{198,31},'Sp'},
                         {var,{198,35},'SoFar'},
                         {var,{198,42},'Pos'}]}]},
               {clause,
                   {199,2},
                   [{atom,{199,2},more}],
                   [],
                   [{debug_line,200,47},
                    {tuple,
                        {200,6},
                        [{atom,{200,7},more},
                         {cons,
                             {200,12},
                             {tuple,
                                 {200,13},
                                 [{var,{200,14},'Reent'},{var,{200,20},'Sp'}]},
                             {cons,
                                 {200,24},
                                 {char,{200,24},92},
                                 {var,{200,28},'Cs0'}}},
                         {var,{200,33},'SoFar0'},
                         {var,{200,40},'Pos'}]}]},
               {clause,
                   {201,2},
                   [{atom,{201,2},error}],
                   [],
                   [{debug_line,202,48},
                    {call,
                        {202,6},
                        {atom,{202,6},pre_string_error},
                        [{var,{202,23},'Q'},
                         {var,{202,26},'Sp'},
                         {var,{202,30},'SoFar0'},
                         {var,{202,38},'Pos'}]}]}]}]},
     {clause,
         {204,1},
         [{cons,{204,12},{var,{204,13},'C'},{var,{204,15},'Cs'}},
          {var,{204,20},'Q'},
          {var,{204,23},'Reent'},
          {var,{204,30},'Sp'},
          {var,{204,34},'SoFar'},
          {var,{204,41},'Pos'}],
         [],
         [{debug_line,205,49},
          {call,
              {205,5},
              {atom,{205,5},pre_string},
              [{var,{205,16},'Cs'},
               {var,{205,20},'Q'},
               {var,{205,23},'Reent'},
               {var,{205,30},'Sp'},
               {block,0,
                   [{cons,
                        {205,34},
                        {var,{205,35},'C'},
                        {var,{205,37},'SoFar'}}]},
               {var,{205,45},'Pos'}]}]},
     {clause,
         {206,1},
         [{nil,{206,12}},
          {var,{206,16},'_'},
          {var,{206,19},'Reent'},
          {var,{206,26},'Sp'},
          {var,{206,30},'SoFar'},
          {var,{206,37},'Pos'}],
         [],
         [{debug_line,207,50},
          {tuple,
              {207,5},
              [{atom,{207,6},more},
               {cons,
                   {207,11},
                   {tuple,
                       {207,12},
                       [{var,{207,13},'Reent'},{var,{207,19},'Sp'}]},
                   {nil,{207,22}}},
               {var,{207,24},'SoFar'},
               {var,{207,30},'Pos'}]}]},
     {clause,
         {208,1},
         [{atom,{208,12},eof},
          {var,{208,17},'Q'},
          {var,{208,20},'_'},
          {var,{208,23},'Sp'},
          {var,{208,27},'SoFar'},
          {var,{208,34},'Pos'}],
         [],
         [{debug_line,209,51},
          {call,
              {209,5},
              {atom,{209,5},pre_string_error},
              [{var,{209,22},'Q'},
               {var,{209,25},'Sp'},
               {var,{209,29},'SoFar'},
               {var,{209,36},'Pos'}]}]}]}.
{function,
 {211,1},
 pre_string_error,4,
 [{clause,
   {211,1},
   [{var,{211,1},'_'},{var,{211,1},'_'},{var,{211,1},'_'},{var,{211,1},'_'}],
   [[{call,
      {211,1},
      {remote,{211,1},{atom,{211,1},fake},{atom,{211,1},is_beam_bif_info}},
      []}]],
   [{debug_line,211,52},{atom,{211,1},ignore}]},
  {clause,
   {211,1},
   [{var,{211,18},'Q'},
    {var,{211,21},'Sp'},
    {var,{211,25},'SoFar'},
    {var,{211,32},'Pos'}],
   [],
   [{debug_line,212,53},
    {match,
     {212,5},
     {cons,
      {212,5},
      {var,{212,6},'S'},
      {cons,{212,8},{var,{212,8},'_'},{nil,{212,9}}}},
     {call,
      {212,13},
      {remote,{212,19},{atom,{212,13},string},{atom,{212,20},split}},
      [{var,{212,26},'SoFar'},
       {block,0,[{cons,{212,33},{var,{212,34},'Q'},{nil,{212,35}}}]}]}},
    {debug_line,213,54},
    {call,
     {213,5},
     {atom,{213,5},pre_error},
     [{block,0,
       [{tuple,
         {213,15},
         [{atom,{213,16},string},
          {var,{213,23},'Q'},
          {call,
           {213,25},
           {remote,{213,31},{atom,{213,25},string},{atom,{213,32},slice}},
           [{block,0,
             [{call,
               {213,38},
               {remote,
                {213,44},
                {atom,{213,38},string},
                {atom,{213,45},reverse}},
               [{var,{213,53},'S'}]}]},
            {integer,{213,57},0},
            {integer,{213,60},16}]}]}]},
      {var,{213,66},'Sp'},
      {var,{213,70},'Pos'}]}]}]}.
{function,{215,1},
          pre_char,2,
          [{clause,{215,1},
                   [{var,{215,1},'_'},{var,{215,1},'_'}],
                   [[{call,{215,1},
                           {remote,{215,1},
                                   {atom,{215,1},fake},
                                   {atom,{215,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,215,55},{atom,{215,1},ignore}]},
           {clause,{215,1},
                   [{cons,{215,10},{var,{215,11},'C'},{var,{215,13},'Cs'}},
                    {var,{215,18},'SoFar'}],
                   [],
                   [{debug_line,215,56},
                    {call,{215,28},
                          {atom,{215,28},pre_char},
                          [{var,{215,37},'C'},
                           {var,{215,40},'Cs'},
                           {var,{215,44},'SoFar'}]}]},
           {clause,{216,1},
                   [{nil,{216,10}},{var,{216,14},'_'}],
                   [],
                   [{debug_line,216,57},{atom,{216,20},more}]},
           {clause,{217,1},
                   [{atom,{217,10},eof},{var,{217,15},'_'}],
                   [],
                   [{debug_line,217,58},{atom,{217,21},error}]}]}.
{function,{219,1},
          pre_char,3,
          [{clause,{219,1},
                   [{var,{219,1},'_'},{var,{219,1},'_'},{var,{219,1},'_'}],
                   [[{call,{219,1},
                           {remote,{219,1},
                                   {atom,{219,1},fake},
                                   {atom,{219,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,219,59},{atom,{219,1},ignore}]},
           {clause,{219,1},
                   [{char,{219,10},92},
                    {var,{219,15},'Cs'},
                    {var,{219,19},'SoFar'}],
                   [],
                   [{debug_line,220,60},
                    {call,{220,5},
                          {atom,{220,5},pre_escape},
                          [{var,{220,16},'Cs'},{var,{220,20},'SoFar'}]}]},
           {clause,{221,1},
                   [{var,{221,10},'C'},
                    {var,{221,13},'Cs'},
                    {var,{221,17},'SoFar'}],
                   [],
                   [{debug_line,222,61},
                    {tuple,{222,5},
                           [{var,{222,6},'Cs'},
                            {cons,{222,9},
                                  {var,{222,10},'C'},
                                  {var,{222,12},'SoFar'}}]}]}]}.
{function,
    {224,1},
    pre_escape,2,
    [{clause,
         {224,1},
         [{var,{224,1},'_'},{var,{224,1},'_'}],
         [[{call,
               {224,1},
               {remote,
                   {224,1},
                   {atom,{224,1},fake},
                   {atom,{224,1},is_beam_bif_info}},
               []}]],
         [{debug_line,224,62},{atom,{224,1},ignore}]},
     {clause,
         {224,1},
         [{cons,{224,12},{char,{224,13},94},{var,{224,16},'Cs0'}},
          {var,{224,22},'SoFar'}],
         [],
         [{debug_line,225,63},
          {'case',
              {225,5},
              {var,{225,10},'Cs0'},
              [{clause,
                   {226,2},
                   [{cons,{226,2},{var,{226,3},'C3'},{var,{226,6},'Cs'}}],
                   [],
                   [{debug_line,227,64},
                    {tuple,
                        {227,6},
                        [{var,{227,7},'Cs'},
                         {cons,
                             {227,10},
                             {var,{227,11},'C3'},
                             {cons,
                                 {227,14},
                                 {char,{227,14},94},
                                 {cons,
                                     {227,17},
                                     {char,{227,17},92},
                                     {var,{227,21},'SoFar'}}}}]}]},
               {clause,
                   {228,2},
                   [{nil,{228,2}}],
                   [],
                   [{debug_line,228,65},{atom,{228,8},more}]},
               {clause,
                   {229,2},
                   [{atom,{229,2},eof}],
                   [],
                   [{debug_line,229,66},{atom,{229,9},error}]}]}]},
     {clause,
         {231,1},
         [{cons,{231,12},{var,{231,13},'C'},{var,{231,15},'Cs'}},
          {var,{231,20},'SoFar'}],
         [],
         [{debug_line,232,67},
          {tuple,
              {232,5},
              [{var,{232,6},'Cs'},
               {cons,
                   {232,9},
                   {var,{232,10},'C'},
                   {cons,
                       {232,12},
                       {char,{232,12},92},
                       {var,{232,16},'SoFar'}}}]}]},
     {clause,
         {233,1},
         [{nil,{233,12}},{var,{233,16},'_'}],
         [],
         [{debug_line,233,68},{atom,{233,22},more}]},
     {clause,
         {234,1},
         [{atom,{234,12},eof},{var,{234,17},'_'}],
         [],
         [{debug_line,234,69},{atom,{234,23},error}]}]}.
{function,
    {239,1},
    pre_comment,3,
    [{clause,
         {239,1},
         [{var,{239,1},'_'},{var,{239,1},'_'},{var,{239,1},'_'}],
         [[{call,
               {239,1},
               {remote,
                   {239,1},
                   {atom,{239,1},fake},
                   {atom,{239,1},is_beam_bif_info}},
               []}]],
         [{debug_line,239,70},{atom,{239,1},ignore}]},
     {clause,
         {239,1},
         [{cons,{239,13},{char,{239,14},10},{var,{239,18},'Cs'}},
          {var,{239,23},'SoFar'},
          {var,{239,30},'Pos'}],
         [],
         [{debug_line,240,71},
          {call,
              {240,5},
              {atom,{240,5},pre_scan},
              [{var,{240,14},'Cs'},
               {block,0,
                   [{cons,
                        {240,18},
                        {char,{240,19},10},
                        {cons,
                            {240,23},
                            {char,{240,23},32},
                            {var,{240,27},'SoFar'}}}]},
               {block,0,
                   [{op,{240,38},
                        '+',
                        {var,{240,35},'Pos'},
                        {integer,{240,39},1}}]}]}]},
     {clause,
         {241,1},
         [{cons,{241,13},{var,{241,14},'_'},{var,{241,16},'Cs'}},
          {var,{241,21},'SoFar'},
          {var,{241,28},'Pos'}],
         [],
         [{debug_line,242,72},
          {call,
              {242,5},
              {atom,{242,5},pre_comment},
              [{var,{242,17},'Cs'},
               {var,{242,21},'SoFar'},
               {var,{242,28},'Pos'}]}]},
     {clause,
         {243,1},
         [{nil,{243,13}},{var,{243,17},'SoFar'},{var,{243,24},'Pos'}],
         [],
         [{debug_line,244,73},
          {tuple,
              {244,5},
              [{atom,{244,6},more},
               {cons,{244,11},{atom,{244,12},'%'},{nil,{244,15}}},
               {var,{244,17},'SoFar'},
               {var,{244,23},'Pos'}]}]},
     {clause,
         {245,1},
         [{atom,{245,13},eof},{var,{245,18},'Sofar'},{var,{245,25},'Pos'}],
         [],
         [{debug_line,246,74},
          {call,
              {246,5},
              {atom,{246,5},pre_scan},
              [{atom,{246,14},eof},
               {block,0,
                   [{cons,
                        {246,19},
                        {char,{246,20},32},
                        {var,{246,24},'Sofar'}}]},
               {var,{246,32},'Pos'}]}]}]}.
{function,{248,1},
          pre_error,3,
          [{clause,{248,1},
                   [{var,{248,1},'_'},{var,{248,1},'_'},{var,{248,1},'_'}],
                   [[{call,{248,1},
                           {remote,{248,1},
                                   {atom,{248,1},fake},
                                   {atom,{248,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,248,75},{atom,{248,1},ignore}]},
           {clause,{248,1},
                   [{var,{248,11},'E'},
                    {var,{248,14},'Epos'},
                    {var,{248,20},'Pos'}],
                   [],
                   [{debug_line,249,76},
                    {tuple,{249,5},
                           [{atom,{249,6},error},
                            {tuple,{249,12},
                                   [{var,{249,13},'Epos'},
                                    {atom,{249,18},core_scan},
                                    {var,{249,28},'E'}]},
                            {var,{249,32},'Pos'}]}]}]}.
{function,{262,1},
          scan,2,
          [{clause,{262,1},
                   [{var,{262,1},'_'},{var,{262,1},'_'}],
                   [[{call,{262,1},
                           {remote,{262,1},
                                   {atom,{262,1},fake},
                                   {atom,{262,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,262,77},{atom,{262,1},ignore}]},
           {clause,{262,1},
                   [{var,{262,6},'Cs'},{var,{262,10},'Pos'}],
                   [],
                   [{debug_line,263,78},
                    {call,{263,5},
                          {atom,{263,5},scan1},
                          [{var,{263,11},'Cs'},
                           {nil,{263,15}},
                           {var,{263,19},'Pos'}]}]}]}.
{function,
    {268,1},
    scan1,3,
    [{clause,
         {268,1},
         [{var,{268,1},'_'},{var,{268,1},'_'},{var,{268,1},'_'}],
         [[{call,
               {268,1},
               {remote,
                   {268,1},
                   {atom,{268,1},fake},
                   {atom,{268,1},is_beam_bif_info}},
               []}]],
         [{debug_line,268,79},{atom,{268,1},ignore}]},
     {clause,
         {268,1},
         [{cons,{268,7},{var,{268,8},'C'},{var,{268,10},'_s'}},
          {var,{268,15},'_Toks'},
          {var,{268,22},'_Pos'}],
         [[{op,{268,33},
               'not',
               {op,{268,49},
                   'andalso',
                   {call,
                       {268,38},
                       {remote,
                           {268,38},
                           {atom,{268,38},erlang},
                           {atom,{268,38},is_integer}},
                       [{var,{268,49},'C'}]},
                   {op,{268,49},
                       'orelse',
                       {op,{268,49},
                           'andalso',
                           {op,{268,49},
                               '>=',
                               {var,{268,49},'C'},
                               {integer,{268,49},0}},
                           {op,{268,49},
                               '<',
                               {var,{268,49},'C'},
                               {integer,{268,49},55296}}},
                       {op,{268,49},
                           'orelse',
                           {op,{268,49},
                               'andalso',
                               {op,{268,49},
                                   '>',
                                   {var,{268,49},'C'},
                                   {integer,{268,49},57343}},
                               {op,{268,49},
                                   '<',
                                   {var,{268,49},'C'},
                                   {integer,{268,49},65534}}},
                           {op,{268,49},
                               'andalso',
                               {op,{268,49},
                                   '>',
                                   {var,{268,49},'C'},
                                   {integer,{268,49},65535}},
                               {op,{268,49},
                                   '=<',
                                   {var,{268,49},'C'},
                                   {integer,{268,49},1114111}}}}}}}]],
         [{debug_line,269,80},
          {call,
              {269,5},
              {remote,{269,5},{atom,{269,5},erlang},{atom,{269,5},error}},
              [{block,0,
                   [{tuple,
                        {269,11},
                        [{atom,{269,12},badchar},{var,{269,20},'C'}]}]}]}]},
     {clause,
         {270,1},
         [{cons,{270,7},{char,{270,8},10},{var,{270,12},'Cs'}},
          {var,{270,17},'Toks'},
          {var,{270,23},'Pos'}],
         [],
         [{debug_line,271,81},
          {call,
              {271,5},
              {atom,{271,5},scan1},
              [{var,{271,11},'Cs'},
               {var,{271,15},'Toks'},
               {block,0,
                   [{op,{271,24},
                        '+',
                        {var,{271,21},'Pos'},
                        {integer,{271,25},1}}]}]}]},
     {clause,
         {272,1},
         [{cons,{272,7},{var,{272,8},'C'},{var,{272,10},'Cs'}},
          {var,{272,15},'Toks'},
          {var,{272,21},'Pos'}],
         [[{op,{272,33},'>=',{var,{272,31},'C'},{char,{272,36},0}},
           {op,{272,45},'=<',{var,{272,43},'C'},{char,{272,48},32}}]],
         [{debug_line,273,82},
          {call,
              {273,5},
              {atom,{273,5},scan1},
              [{var,{273,11},'Cs'},
               {var,{273,15},'Toks'},
               {var,{273,21},'Pos'}]}]},
     {clause,
         {274,1},
         [{cons,{274,7},{var,{274,8},'C'},{var,{274,10},'Cs'}},
          {var,{274,15},'Toks'},
          {var,{274,21},'Pos'}],
         [[{op,{274,33},'>=',{var,{274,31},'C'},{char,{274,36},128}},
           {op,{274,45},'=<',{var,{274,43},'C'},{char,{274,48},160}}]],
         [{debug_line,275,83},
          {call,
              {275,5},
              {atom,{275,5},scan1},
              [{var,{275,11},'Cs'},
               {var,{275,15},'Toks'},
               {var,{275,21},'Pos'}]}]},
     {clause,
         {276,1},
         [{cons,{276,7},{var,{276,8},'C'},{var,{276,10},'Cs'}},
          {var,{276,15},'Toks'},
          {var,{276,21},'Pos'}],
         [[{op,{276,33},'>=',{var,{276,31},'C'},{char,{276,36},97}},
           {op,{276,42},'=<',{var,{276,40},'C'},{char,{276,45},122}}]],
         [{debug_line,277,84},
          {call,
              {277,5},
              {atom,{277,5},scan_key_word},
              [{var,{277,19},'C'},
               {var,{277,22},'Cs'},
               {var,{277,26},'Toks'},
               {var,{277,32},'Pos'}]}]},
     {clause,
         {278,1},
         [{cons,{278,7},{var,{278,8},'C'},{var,{278,10},'Cs'}},
          {var,{278,15},'Toks'},
          {var,{278,21},'Pos'}],
         [[{op,{278,33},'>=',{var,{278,31},'C'},{char,{278,36},223}},
           {op,{278,42},'=<',{var,{278,40},'C'},{char,{278,45},255}},
           {op,{278,51},'/=',{var,{278,49},'C'},{char,{278,54},247}}]],
         [{debug_line,279,85},
          {call,
              {279,5},
              {atom,{279,5},scan_key_word},
              [{var,{279,19},'C'},
               {var,{279,22},'Cs'},
               {var,{279,26},'Toks'},
               {var,{279,32},'Pos'}]}]},
     {clause,
         {280,1},
         [{cons,{280,7},{var,{280,8},'C'},{var,{280,10},'Cs'}},
          {var,{280,15},'Toks'},
          {var,{280,21},'Pos'}],
         [[{op,{280,33},'>=',{var,{280,31},'C'},{char,{280,36},65}},
           {op,{280,42},'=<',{var,{280,40},'C'},{char,{280,45},90}}]],
         [{debug_line,281,86},
          {call,
              {281,5},
              {atom,{281,5},scan_variable},
              [{var,{281,19},'C'},
               {var,{281,22},'Cs'},
               {var,{281,26},'Toks'},
               {var,{281,32},'Pos'}]}]},
     {clause,
         {282,1},
         [{cons,{282,7},{var,{282,8},'C'},{var,{282,10},'Cs'}},
          {var,{282,15},'Toks'},
          {var,{282,21},'Pos'}],
         [[{op,{282,33},'>=',{var,{282,31},'C'},{char,{282,36},192}},
           {op,{282,42},'=<',{var,{282,40},'C'},{char,{282,45},222}},
           {op,{282,51},'/=',{var,{282,49},'C'},{char,{282,54},215}}]],
         [{debug_line,283,87},
          {call,
              {283,5},
              {atom,{283,5},scan_variable},
              [{var,{283,19},'C'},
               {var,{283,22},'Cs'},
               {var,{283,26},'Toks'},
               {var,{283,32},'Pos'}]}]},
     {clause,
         {284,1},
         [{cons,{284,7},{var,{284,8},'C'},{var,{284,10},'Cs'}},
          {var,{284,15},'Toks'},
          {var,{284,21},'Pos'}],
         [[{op,{284,33},'>=',{var,{284,31},'C'},{char,{284,36},48}},
           {op,{284,42},'=<',{var,{284,40},'C'},{char,{284,45},57}}]],
         [{debug_line,285,88},
          {call,
              {285,5},
              {atom,{285,5},scan_number},
              [{var,{285,17},'C'},
               {var,{285,20},'Cs'},
               {var,{285,24},'Toks'},
               {var,{285,30},'Pos'}]}]},
     {clause,
         {286,1},
         [{cons,
              {286,7},
              {char,{286,8},45},
              {cons,{286,11},{var,{286,11},'C'},{var,{286,13},'Cs'}}},
          {var,{286,18},'Toks'},
          {var,{286,24},'Pos'}],
         [[{call,
               {286,34},
               {remote,
                   {286,34},
                   {atom,{286,34},erlang},
                   {atom,{286,34},is_integer}},
               [{var,{286,45},'C'}]},
           {op,{286,51},'>=',{var,{286,49},'C'},{char,{286,54},48}},
           {op,{286,60},'=<',{var,{286,58},'C'},{char,{286,63},57}}]],
         [{debug_line,287,89},
          {call,
              {287,5},
              {atom,{287,5},scan_signed_number},
              [{block,0,[{char,{287,24},45}]},
               {var,{287,28},'C'},
               {var,{287,31},'Cs'},
               {var,{287,35},'Toks'},
               {var,{287,41},'Pos'}]}]},
     {clause,
         {288,1},
         [{cons,
              {288,7},
              {char,{288,8},43},
              {cons,{288,11},{var,{288,11},'C'},{var,{288,13},'Cs'}}},
          {var,{288,18},'Toks'},
          {var,{288,24},'Pos'}],
         [[{call,
               {288,34},
               {remote,
                   {288,34},
                   {atom,{288,34},erlang},
                   {atom,{288,34},is_integer}},
               [{var,{288,45},'C'}]},
           {op,{288,51},'>=',{var,{288,49},'C'},{char,{288,54},48}},
           {op,{288,60},'=<',{var,{288,58},'C'},{char,{288,63},57}}]],
         [{debug_line,289,90},
          {call,
              {289,5},
              {atom,{289,5},scan_signed_number},
              [{block,0,[{char,{289,24},43}]},
               {var,{289,28},'C'},
               {var,{289,31},'Cs'},
               {var,{289,35},'Toks'},
               {var,{289,41},'Pos'}]}]},
     {clause,
         {290,1},
         [{cons,{290,7},{char,{290,8},95},{var,{290,11},'Cs'}},
          {var,{290,16},'Toks'},
          {var,{290,22},'Pos'}],
         [],
         [{debug_line,291,91},
          {call,
              {291,5},
              {atom,{291,5},scan_variable},
              [{block,0,[{char,{291,19},95}]},
               {var,{291,23},'Cs'},
               {var,{291,27},'Toks'},
               {var,{291,33},'Pos'}]}]},
     {clause,
         {292,1},
         [{cons,{292,7},{char,{292,8},36},{var,{292,11},'Cs0'}},
          {var,{292,17},'Toks'},
          {var,{292,23},'Pos'}],
         [],
         [{debug_line,293,92},
          {match,
              {293,5},
              {tuple,
                  {293,5},
                  [{var,{293,6},'C'},
                   {var,{293,8},'Cs'},
                   {var,{293,11},'Pos1'}]},
              {call,
                  {293,19},
                  {atom,{293,19},scan_char},
                  [{var,{293,29},'Cs0'},{var,{293,34},'Pos'}]}},
          {debug_line,294,93},
          {call,
              {294,5},
              {atom,{294,5},scan1},
              [{var,{294,11},'Cs'},
               {block,0,
                   [{cons,
                        {294,15},
                        {tuple,
                            {294,16},
                            [{atom,{294,17},char},
                             {var,{294,22},'Pos'},
                             {var,{294,26},'C'}]},
                        {var,{294,29},'Toks'}}]},
               {var,{294,36},'Pos1'}]}]},
     {clause,
         {295,1},
         [{cons,{295,7},{char,{295,8},39},{var,{295,11},'Cs0'}},
          {var,{295,17},'Toks'},
          {var,{295,23},'Pos'}],
         [],
         [{debug_line,296,94},
          {match,
              {296,5},
              {tuple,
                  {296,5},
                  [{var,{296,6},'S'},
                   {var,{296,8},'Cs1'},
                   {var,{296,12},'Pos1'}]},
              {call,
                  {296,20},
                  {atom,{296,20},scan_string},
                  [{var,{296,32},'Cs0'},
                   {block,0,[{char,{296,37},39}]},
                   {var,{296,41},'Pos'}]}},
          {debug_line,297,95},
          {'try',
              {297,5},
              [{call,
                   {297,9},
                   {remote,
                       {297,9},
                       {atom,{297,9},erlang},
                       {atom,{297,9},binary_to_atom}},
                   [{block,0,
                        [{call,
                             {297,24},
                             {remote,
                                 {297,24},
                                 {atom,{297,24},erlang},
                                 {atom,{297,24},list_to_binary}},
                             [{var,{297,39},'S'}]}]},
                    {atom,{297,43},utf8}]}],
              [{clause,
                   {298,2},
                   [{var,{298,2},'A'}],
                   [[{call,
                         {298,9},
                         {remote,
                             {298,9},
                             {atom,{298,9},erlang},
                             {atom,{298,9},is_atom}},
                         [{var,{298,17},'A'}]}]],
                   [{debug_line,299,96},
                    {call,
                        {299,6},
                        {atom,{299,6},scan1},
                        [{var,{299,12},'Cs1'},
                         {block,0,
                             [{cons,
                                  {299,17},
                                  {tuple,
                                      {299,18},
                                      [{atom,{299,19},atom},
                                       {var,{299,24},'Pos'},
                                       {var,{299,28},'A'}]},
                                  {var,{299,31},'Toks'}}]},
                         {var,{299,38},'Pos1'}]}]}],
              [{clause,
                   {301,9},
                   [{tuple,
                        {301,9},
                        [{atom,{301,9},error},
                         {var,{301,15},'_'},
                         {var,{301,15},'_'}]}],
                   [],
                   [{debug_line,302,97},
                    {call,
                        {302,13},
                        {atom,{302,13},scan_error},
                        [{block,0,
                             [{tuple,
                                  {302,24},
                                  [{atom,{302,25},illegal},
                                   {atom,{302,33},atom}]}]},
                         {var,{302,40},'Pos'}]}]}],
              []}]},
     {clause,
         {304,1},
         [{cons,{304,7},{char,{304,8},34},{var,{304,11},'Cs0'}},
          {var,{304,17},'Toks'},
          {var,{304,23},'Pos'}],
         [],
         [{debug_line,305,98},
          {match,
              {305,5},
              {tuple,
                  {305,5},
                  [{var,{305,6},'S'},
                   {var,{305,8},'Cs1'},
                   {var,{305,12},'Pos1'}]},
              {call,
                  {305,20},
                  {atom,{305,20},scan_string},
                  [{var,{305,32},'Cs0'},
                   {block,0,[{char,{305,37},34}]},
                   {var,{305,41},'Pos'}]}},
          {debug_line,306,99},
          {call,
              {306,5},
              {atom,{306,5},scan1},
              [{var,{306,11},'Cs1'},
               {block,0,
                   [{cons,
                        {306,16},
                        {tuple,
                            {306,17},
                            [{atom,{306,18},string},
                             {var,{306,25},'Pos'},
                             {var,{306,29},'S'}]},
                        {var,{306,32},'Toks'}}]},
               {var,{306,39},'Pos1'}]}]},
     {clause,
         {308,1},
         [{op,{308,12},'++',{string,{308,7},"->"},{var,{308,15},'Cs'}},
          {var,{308,19},'Toks'},
          {var,{308,25},'Pos'}],
         [],
         [{debug_line,309,100},
          {call,
              {309,5},
              {atom,{309,5},scan1},
              [{var,{309,11},'Cs'},
               {block,0,
                   [{cons,
                        {309,15},
                        {tuple,
                            {309,16},
                            [{atom,{309,17},'->'},{var,{309,22},'Pos'}]},
                        {var,{309,27},'Toks'}}]},
               {var,{309,34},'Pos'}]}]},
     {clause,
         {310,1},
         [{op,{310,12},'++',{string,{310,7},"-|"},{var,{310,15},'Cs'}},
          {var,{310,19},'Toks'},
          {var,{310,25},'Pos'}],
         [],
         [{debug_line,311,101},
          {call,
              {311,5},
              {atom,{311,5},scan1},
              [{var,{311,11},'Cs'},
               {block,0,
                   [{cons,
                        {311,15},
                        {tuple,
                            {311,16},
                            [{atom,{311,17},'-|'},{var,{311,22},'Pos'}]},
                        {var,{311,27},'Toks'}}]},
               {var,{311,34},'Pos'}]}]},
     {clause,
         {312,1},
         [{op,{312,12},'++',{string,{312,7},":="},{var,{312,15},'Cs'}},
          {var,{312,19},'Toks'},
          {var,{312,25},'Pos'}],
         [],
         [{debug_line,313,102},
          {call,
              {313,5},
              {atom,{313,5},scan1},
              [{var,{313,11},'Cs'},
               {block,0,
                   [{cons,
                        {313,15},
                        {tuple,
                            {313,16},
                            [{atom,{313,17},':='},{var,{313,22},'Pos'}]},
                        {var,{313,27},'Toks'}}]},
               {var,{313,34},'Pos'}]}]},
     {clause,
         {314,1},
         [{op,{314,12},'++',{string,{314,7},"=>"},{var,{314,15},'Cs'}},
          {var,{314,19},'Toks'},
          {var,{314,25},'Pos'}],
         [],
         [{debug_line,315,103},
          {call,
              {315,5},
              {atom,{315,5},scan1},
              [{var,{315,11},'Cs'},
               {block,0,
                   [{cons,
                        {315,15},
                        {tuple,
                            {315,16},
                            [{atom,{315,17},'=>'},{var,{315,22},'Pos'}]},
                        {var,{315,27},'Toks'}}]},
               {var,{315,34},'Pos'}]}]},
     {clause,
         {316,1},
         [{cons,{316,7},{var,{316,8},'C'},{var,{316,10},'Cs'}},
          {var,{316,15},'Toks'},
          {var,{316,21},'Pos'}],
         [],
         [{debug_line,317,104},
          {match,
              {317,5},
              {var,{317,5},'P'},
              {call,
                  {317,9},
                  {remote,
                      {317,9},
                      {atom,{317,9},erlang},
                      {atom,{317,9},list_to_atom}},
                  [{block,0,
                       [{cons,{317,22},{var,{317,23},'C'},{nil,{317,24}}}]}]}},
          {debug_line,318,105},
          {call,
              {318,5},
              {atom,{318,5},scan1},
              [{var,{318,11},'Cs'},
               {block,0,
                   [{cons,
                        {318,15},
                        {tuple,
                            {318,16},
                            [{var,{318,17},'P'},{var,{318,19},'Pos'}]},
                        {var,{318,24},'Toks'}}]},
               {var,{318,31},'Pos'}]}]},
     {clause,
         {319,1},
         [{nil,{319,7}},{var,{319,11},'Toks0'},{var,{319,18},'_'}],
         [],
         [{debug_line,320,106},
          {match,
              {320,5},
              {var,{320,5},'Toks'},
              {call,
                  {320,12},
                  {remote,
                      {320,12},
                      {atom,{320,12},lists},
                      {atom,{320,12},reverse}},
                  [{var,{320,20},'Toks0'}]}},
          {debug_line,321,107},
          {tuple,{321,5},[{atom,{321,6},ok},{var,{321,9},'Toks'}]}]}]}.
{function,
 {326,1},
 scan_key_word,4,
 [{clause,
   {326,1},
   [{var,{326,1},'_'},{var,{326,1},'_'},{var,{326,1},'_'},{var,{326,1},'_'}],
   [[{call,
      {326,1},
      {remote,{326,1},{atom,{326,1},fake},{atom,{326,1},is_beam_bif_info}},
      []}]],
   [{debug_line,326,108},{atom,{326,1},ignore}]},
  {clause,
   {326,1},
   [{var,{326,15},'C'},
    {var,{326,18},'Cs0'},
    {var,{326,23},'Toks'},
    {var,{326,29},'Pos'}],
   [],
   [{debug_line,327,109},
    {match,
     {327,5},
     {tuple,{327,5},[{var,{327,6},'Wcs'},{var,{327,10},'Cs'}]},
     {call,
      {327,16},
      {atom,{327,16},scan_name},
      [{var,{327,26},'Cs0'},{nil,{327,31}}]}},
    {debug_line,328,110},
    {'case',
     {328,5},
     {'catch',
      {328,10},
      {call,
       {328,16},
       {remote,{328,16},{atom,{328,16},erlang},{atom,{328,16},list_to_atom}},
       [{block,0,
         [{cons,
           {328,29},
           {var,{328,30},'C'},
           {call,
            {328,32},
            {remote,{328,32},{atom,{328,32},lists},{atom,{328,32},reverse}},
            [{var,{328,40},'Wcs'}]}}]}]}},
     [{clause,
       {329,2},
       [{var,{329,2},'Name'}],
       [[{call,
          {329,12},
          {remote,{329,12},{atom,{329,12},erlang},{atom,{329,12},is_atom}},
          [{var,{329,20},'Name'}]}]],
       [{debug_line,330,111},
        {call,
         {330,6},
         {atom,{330,6},scan1},
         [{var,{330,12},'Cs'},
          {block,0,
           [{cons,
             {330,16},
             {tuple,{330,17},[{var,{330,18},'Name'},{var,{330,23},'Pos'}]},
             {var,{330,28},'Toks'}}]},
          {var,{330,35},'Pos'}]}]},
      {clause,
       {331,2},
       [{var,{331,2},'_Error'}],
       [],
       [{debug_line,331,112},
        {call,
         {331,12},
         {atom,{331,12},scan_error},
         [{block,0,
           [{tuple,{331,23},[{atom,{331,24},illegal},{atom,{331,32},atom}]}]},
          {var,{331,39},'Pos'}]}]}]}]}]}.
{function,
 {334,1},
 scan_variable,4,
 [{clause,
   {334,1},
   [{var,{334,1},'_'},{var,{334,1},'_'},{var,{334,1},'_'},{var,{334,1},'_'}],
   [[{call,
      {334,1},
      {remote,{334,1},{atom,{334,1},fake},{atom,{334,1},is_beam_bif_info}},
      []}]],
   [{debug_line,334,113},{atom,{334,1},ignore}]},
  {clause,
   {334,1},
   [{var,{334,15},'C'},
    {var,{334,18},'Cs0'},
    {var,{334,23},'Toks'},
    {var,{334,29},'Pos'}],
   [],
   [{debug_line,335,114},
    {match,
     {335,5},
     {tuple,{335,5},[{var,{335,6},'Wcs'},{var,{335,10},'Cs'}]},
     {call,
      {335,16},
      {atom,{335,16},scan_name},
      [{var,{335,26},'Cs0'},{nil,{335,31}}]}},
    {debug_line,336,115},
    {'case',
     {336,5},
     {'catch',
      {336,10},
      {call,
       {336,16},
       {remote,{336,16},{atom,{336,16},erlang},{atom,{336,16},list_to_atom}},
       [{block,0,
         [{cons,
           {336,29},
           {var,{336,30},'C'},
           {call,
            {336,32},
            {remote,{336,32},{atom,{336,32},lists},{atom,{336,32},reverse}},
            [{var,{336,40},'Wcs'}]}}]}]}},
     [{clause,
       {337,2},
       [{var,{337,2},'Name'}],
       [[{call,
          {337,12},
          {remote,{337,12},{atom,{337,12},erlang},{atom,{337,12},is_atom}},
          [{var,{337,20},'Name'}]}]],
       [{debug_line,338,116},
        {call,
         {338,6},
         {atom,{338,6},scan1},
         [{var,{338,12},'Cs'},
          {block,0,
           [{cons,
             {338,16},
             {tuple,
              {338,17},
              [{atom,{338,18},var},
               {var,{338,22},'Pos'},
               {var,{338,26},'Name'}]},
             {var,{338,32},'Toks'}}]},
          {var,{338,39},'Pos'}]}]},
      {clause,
       {339,2},
       [{var,{339,2},'_Error'}],
       [],
       [{debug_line,339,117},
        {call,
         {339,12},
         {atom,{339,12},scan_error},
         [{block,0,
           [{tuple,{339,23},[{atom,{339,24},illegal},{atom,{339,32},var}]}]},
          {var,{339,38},'Pos'}]}]}]}]}]}.
{function,
    {344,1},
    scan_name,2,
    [{clause,
         {344,1},
         [{var,{344,1},'_'},{var,{344,1},'_'}],
         [[{call,
               {344,1},
               {remote,
                   {344,1},
                   {atom,{344,1},fake},
                   {atom,{344,1},is_beam_bif_info}},
               []}]],
         [{debug_line,344,118},{atom,{344,1},ignore}]},
     {clause,
         {344,1},
         [{cons,{344,11},{var,{344,12},'C'},{var,{344,14},'Cs'}},
          {var,{344,19},'Ncs'}],
         [],
         [{debug_line,345,119},
          {'case',
              {345,5},
              {call,{345,10},{atom,{345,10},name_char},[{var,{345,20},'C'}]},
              [{clause,
                   {346,2},
                   [{atom,{346,2},true}],
                   [],
                   [{debug_line,346,120},
                    {call,
                        {346,10},
                        {atom,{346,10},scan_name},
                        [{var,{346,20},'Cs'},
                         {block,0,
                             [{cons,
                                  {346,24},
                                  {var,{346,25},'C'},
                                  {var,{346,27},'Ncs'}}]}]}]},
               {clause,
                   {347,2},
                   [{atom,{347,2},false}],
                   [],
                   [{debug_line,347,121},
                    {tuple,
                        {347,11},
                        [{var,{347,12},'Ncs'},
                         {cons,
                             {347,16},
                             {var,{347,17},'C'},
                             {var,{347,19},'Cs'}}]}]}]}]},
     {clause,
         {349,1},
         [{nil,{349,11}},{var,{349,15},'Ncs'}],
         [],
         [{debug_line,350,122},
          {tuple,{350,5},[{var,{350,6},'Ncs'},{nil,{350,10}}]}]}]}.
{function,
    {352,1},
    name_char,1,
    [{clause,
         {352,1},
         [{var,{352,1},'_'}],
         [[{call,
               {352,1},
               {remote,
                   {352,1},
                   {atom,{352,1},fake},
                   {atom,{352,1},is_beam_bif_info}},
               []}]],
         [{debug_line,352,123},{atom,{352,1},ignore}]},
     {clause,
         {352,1},
         [{var,{352,11},'C'}],
         [[{op,{352,19},
               'not',
               {op,{352,35},
                   'andalso',
                   {call,
                       {352,24},
                       {remote,
                           {352,24},
                           {atom,{352,24},erlang},
                           {atom,{352,24},is_integer}},
                       [{var,{352,35},'C'}]},
                   {op,{352,35},
                       'orelse',
                       {op,{352,35},
                           'andalso',
                           {op,{352,35},
                               '>=',
                               {var,{352,35},'C'},
                               {integer,{352,35},0}},
                           {op,{352,35},
                               '<',
                               {var,{352,35},'C'},
                               {integer,{352,35},55296}}},
                       {op,{352,35},
                           'orelse',
                           {op,{352,35},
                               'andalso',
                               {op,{352,35},
                                   '>',
                                   {var,{352,35},'C'},
                                   {integer,{352,35},57343}},
                               {op,{352,35},
                                   '<',
                                   {var,{352,35},'C'},
                                   {integer,{352,35},65534}}},
                           {op,{352,35},
                               'andalso',
                               {op,{352,35},
                                   '>',
                                   {var,{352,35},'C'},
                                   {integer,{352,35},65535}},
                               {op,{352,35},
                                   '=<',
                                   {var,{352,35},'C'},
                                   {integer,{352,35},1114111}}}}}}}]],
         [{debug_line,353,124},
          {call,
              {353,5},
              {remote,{353,5},{atom,{353,5},erlang},{atom,{353,5},error}},
              [{block,0,
                   [{tuple,
                        {353,11},
                        [{atom,{353,12},badchar},{var,{353,20},'C'}]}]}]}]},
     {clause,
         {354,1},
         [{var,{354,11},'C'}],
         [[{op,{354,21},'>=',{var,{354,19},'C'},{char,{354,24},97}},
           {op,{354,30},'=<',{var,{354,28},'C'},{char,{354,33},122}}]],
         [{debug_line,354,125},{atom,{354,39},true}]},
     {clause,
         {355,1},
         [{var,{355,11},'C'}],
         [[{op,{355,21},'>=',{var,{355,19},'C'},{char,{355,24},223}},
           {op,{355,30},'=<',{var,{355,28},'C'},{char,{355,33},255}},
           {op,{355,39},'/=',{var,{355,37},'C'},{char,{355,42},247}}]],
         [{debug_line,355,126},{atom,{355,48},true}]},
     {clause,
         {356,1},
         [{var,{356,11},'C'}],
         [[{op,{356,21},'>=',{var,{356,19},'C'},{char,{356,24},65}},
           {op,{356,30},'=<',{var,{356,28},'C'},{char,{356,33},90}}]],
         [{debug_line,356,127},{atom,{356,39},true}]},
     {clause,
         {357,1},
         [{var,{357,11},'C'}],
         [[{op,{357,21},'>=',{var,{357,19},'C'},{char,{357,24},192}},
           {op,{357,30},'=<',{var,{357,28},'C'},{char,{357,33},222}},
           {op,{357,39},'/=',{var,{357,37},'C'},{char,{357,42},215}}]],
         [{debug_line,357,128},{atom,{357,48},true}]},
     {clause,
         {358,1},
         [{var,{358,11},'C'}],
         [[{op,{358,21},'>=',{var,{358,19},'C'},{char,{358,24},48}},
           {op,{358,30},'=<',{var,{358,28},'C'},{char,{358,33},57}}]],
         [{debug_line,358,129},{atom,{358,39},true}]},
     {clause,
         {359,1},
         [{char,{359,11},95}],
         [],
         [{debug_line,359,130},{atom,{359,18},true}]},
     {clause,
         {360,1},
         [{char,{360,11},64}],
         [],
         [{debug_line,360,131},{atom,{360,18},true}]},
     {clause,
         {361,1},
         [{var,{361,11},'_'}],
         [],
         [{debug_line,361,132},{atom,{361,17},false}]}]}.
{function,{365,1},
          scan_string,3,
          [{clause,{365,1},
                   [{var,{365,1},'_'},{var,{365,1},'_'},{var,{365,1},'_'}],
                   [[{call,{365,1},
                           {remote,{365,1},
                                   {atom,{365,1},fake},
                                   {atom,{365,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,365,133},{atom,{365,1},ignore}]},
           {clause,{365,1},
                   [{var,{365,13},'Cs'},
                    {var,{365,17},'Q'},
                    {var,{365,20},'Pos'}],
                   [],
                   [{debug_line,366,134},
                    {call,{366,5},
                          {atom,{366,5},scan_string},
                          [{var,{366,17},'Cs'},
                           {nil,{366,21}},
                           {var,{366,25},'Q'},
                           {var,{366,28},'Pos'}]}]}]}.
{function,
    {368,1},
    scan_string,4,
    [{clause,
         {368,1},
         [{var,{368,1},'_'},
          {var,{368,1},'_'},
          {var,{368,1},'_'},
          {var,{368,1},'_'}],
         [[{call,
               {368,1},
               {remote,
                   {368,1},
                   {atom,{368,1},fake},
                   {atom,{368,1},is_beam_bif_info}},
               []}]],
         [{debug_line,368,135},{atom,{368,1},ignore}]},
     {clause,
         {368,1},
         [{cons,{368,13},{var,{368,14},'Q'},{var,{368,16},'Cs'}},
          {var,{368,21},'Scs'},
          {var,{368,26},'Q'},
          {var,{368,29},'Pos'}],
         [],
         [{debug_line,369,136},
          {tuple,
              {369,5},
              [{call,
                   {369,6},
                   {remote,
                       {369,6},
                       {atom,{369,6},lists},
                       {atom,{369,6},reverse}},
                   [{var,{369,14},'Scs'}]},
               {var,{369,19},'Cs'},
               {var,{369,22},'Pos'}]}]},
     {clause,
         {370,1},
         [{cons,{370,13},{char,{370,14},10},{var,{370,18},'Cs'}},
          {var,{370,23},'Scs'},
          {var,{370,28},'Q'},
          {var,{370,31},'Pos'}],
         [],
         [{debug_line,371,137},
          {call,
              {371,5},
              {atom,{371,5},scan_string},
              [{var,{371,17},'Cs'},
               {block,0,
                   [{cons,{371,21},{char,{371,22},10},{var,{371,26},'Scs'}}]},
               {var,{371,32},'Q'},
               {block,0,
                   [{op,{371,38},
                        '+',
                        {var,{371,35},'Pos'},
                        {integer,{371,39},1}}]}]}]},
     {clause,
         {372,1},
         [{cons,{372,13},{char,{372,14},92},{var,{372,18},'Cs0'}},
          {var,{372,24},'Scs'},
          {var,{372,29},'Q'},
          {var,{372,32},'Pos'}],
         [],
         [{debug_line,373,138},
          {match,
              {373,5},
              {tuple,
                  {373,5},
                  [{var,{373,6},'C'},
                   {var,{373,8},'Cs'},
                   {var,{373,11},'Pos1'}]},
              {call,
                  {373,19},
                  {atom,{373,19},scan_escape},
                  [{var,{373,31},'Cs0'},{var,{373,36},'Pos'}]}},
          {debug_line,374,139},
          {call,
              {374,5},
              {atom,{374,5},scan_string},
              [{var,{374,17},'Cs'},
               {block,0,
                   [{cons,{374,21},{var,{374,22},'C'},{var,{374,24},'Scs'}}]},
               {var,{374,30},'Q'},
               {var,{374,33},'Pos1'}]}]},
     {clause,
         {375,1},
         [{cons,{375,13},{var,{375,14},'C'},{var,{375,16},'Cs'}},
          {var,{375,21},'Scs'},
          {var,{375,26},'Q'},
          {var,{375,29},'Pos'}],
         [],
         [{debug_line,376,140},
          {call,
              {376,5},
              {atom,{376,5},scan_string},
              [{var,{376,17},'Cs'},
               {block,0,
                   [{cons,{376,21},{var,{376,22},'C'},{var,{376,24},'Scs'}}]},
               {var,{376,30},'Q'},
               {var,{376,33},'Pos'}]}]}]}.
{function,{382,1},
          scan_char,2,
          [{clause,{382,1},
                   [{var,{382,1},'_'},{var,{382,1},'_'}],
                   [[{call,{382,1},
                           {remote,{382,1},
                                   {atom,{382,1},fake},
                                   {atom,{382,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,382,141},{atom,{382,1},ignore}]},
           {clause,{382,1},
                   [{cons,{382,11},{char,{382,12},92},{var,{382,16},'Cs'}},
                    {var,{382,21},'Pos'}],
                   [],
                   [{debug_line,383,142},
                    {call,{383,5},
                          {atom,{383,5},scan_escape},
                          [{var,{383,17},'Cs'},{var,{383,21},'Pos'}]}]},
           {clause,{384,1},
                   [{cons,{384,11},{char,{384,12},10},{var,{384,16},'Cs'}},
                    {var,{384,21},'Pos'}],
                   [],
                   [{debug_line,385,143},
                    {tuple,{385,5},
                           [{char,{385,6},10},
                            {var,{385,10},'Cs'},
                            {op,{385,16},
                                '+',
                                {var,{385,13},'Pos'},
                                {integer,{385,17},1}}]}]},
           {clause,{386,1},
                   [{cons,{386,11},{var,{386,12},'C'},{var,{386,14},'Cs'}},
                    {var,{386,19},'Pos'}],
                   [],
                   [{debug_line,387,144},
                    {tuple,{387,5},
                           [{var,{387,6},'C'},
                            {var,{387,8},'Cs'},
                            {var,{387,11},'Pos'}]}]}]}.
{function,
    {389,1},
    scan_escape,2,
    [{clause,
         {389,1},
         [{var,{389,1},'_'},{var,{389,1},'_'}],
         [[{call,
               {389,1},
               {remote,
                   {389,1},
                   {atom,{389,1},fake},
                   {atom,{389,1},is_beam_bif_info}},
               []}]],
         [{debug_line,389,145},{atom,{389,1},ignore}]},
     {clause,
         {389,1},
         [{cons,
              {389,13},
              {var,{389,14},'O1'},
              {cons,
                  {389,17},
                  {var,{389,17},'O2'},
                  {cons,{389,20},{var,{389,20},'O3'},{var,{389,23},'Cs'}}}},
          {var,{389,28},'Pos'}],
         [[{call,
               {390,7},
               {remote,
                   {390,7},
                   {atom,{390,7},erlang},
                   {atom,{390,7},is_integer}},
               [{var,{390,18},'O1'}]},
           {op,{390,26},'>=',{var,{390,23},'O1'},{char,{390,29},48}},
           {op,{390,36},'=<',{var,{390,33},'O1'},{char,{390,39},55}},
           {call,
               {391,7},
               {remote,
                   {391,7},
                   {atom,{391,7},erlang},
                   {atom,{391,7},is_integer}},
               [{var,{391,18},'O2'}]},
           {op,{391,26},'>=',{var,{391,23},'O2'},{char,{391,29},48}},
           {op,{391,36},'=<',{var,{391,33},'O2'},{char,{391,39},55}},
           {call,
               {392,7},
               {remote,
                   {392,7},
                   {atom,{392,7},erlang},
                   {atom,{392,7},is_integer}},
               [{var,{392,18},'O3'}]},
           {op,{392,26},'>=',{var,{392,23},'O3'},{char,{392,29},48}},
           {op,{392,36},'=<',{var,{392,33},'O3'},{char,{392,39},55}}]],
         [{debug_line,393,146},
          {match,
              {393,5},
              {var,{393,5},'Val'},
              {op,{393,30},
                  '-',
                  {op,{393,25},
                      '+',
                      {op,{393,22},
                          '*',
                          {op,{393,17},
                              '+',
                              {op,{393,14},
                                  '*',
                                  {var,{393,12},'O1'},
                                  {integer,{393,15},8}},
                              {var,{393,19},'O2'}},
                          {integer,{393,23},8}},
                      {var,{393,27},'O3'}},
                  {op,{393,34},'*',{integer,{393,32},73},{char,{393,35},48}}}},
          {debug_line,394,147},
          {tuple,
              {394,5},
              [{var,{394,6},'Val'},
               {var,{394,10},'Cs'},
               {var,{394,13},'Pos'}]}]},
     {clause,
         {395,1},
         [{cons,
              {395,13},
              {var,{395,14},'O1'},
              {cons,{395,17},{var,{395,17},'O2'},{var,{395,20},'Cs'}}},
          {var,{395,25},'Pos'}],
         [[{call,
               {396,7},
               {remote,
                   {396,7},
                   {atom,{396,7},erlang},
                   {atom,{396,7},is_integer}},
               [{var,{396,18},'O1'}]},
           {op,{396,26},'>=',{var,{396,23},'O1'},{char,{396,29},48}},
           {op,{396,36},'=<',{var,{396,33},'O1'},{char,{396,39},55}},
           {call,
               {397,7},
               {remote,
                   {397,7},
                   {atom,{397,7},erlang},
                   {atom,{397,7},is_integer}},
               [{var,{397,18},'O2'}]},
           {op,{397,26},'>=',{var,{397,23},'O2'},{char,{397,29},48}},
           {op,{397,36},'=<',{var,{397,33},'O2'},{char,{397,39},55}}]],
         [{debug_line,398,148},
          {match,
              {398,5},
              {var,{398,5},'Val'},
              {op,{398,23},
                  '-',
                  {op,{398,17},
                      '+',
                      {op,{398,14},
                          '*',
                          {var,{398,12},'O1'},
                          {integer,{398,15},8}},
                      {var,{398,19},'O2'}},
                  {op,{398,26},'*',{integer,{398,25},9},{char,{398,27},48}}}},
          {debug_line,399,149},
          {tuple,
              {399,5},
              [{var,{399,6},'Val'},
               {var,{399,10},'Cs'},
               {var,{399,13},'Pos'}]}]},
     {clause,
         {400,1},
         [{cons,{400,13},{var,{400,14},'O1'},{var,{400,17},'Cs'}},
          {var,{400,22},'Pos'}],
         [[{call,
               {401,7},
               {remote,
                   {401,7},
                   {atom,{401,7},erlang},
                   {atom,{401,7},is_integer}},
               [{var,{401,18},'O1'}]},
           {op,{401,26},'>=',{var,{401,23},'O1'},{char,{401,29},48}},
           {op,{401,36},'=<',{var,{401,33},'O1'},{char,{401,39},55}}]],
         [{debug_line,402,150},
          {tuple,
              {402,5},
              [{op,{402,9},'-',{var,{402,6},'O1'},{char,{402,11},48}},
               {var,{402,14},'Cs'},
               {var,{402,17},'Pos'}]}]},
     {clause,
         {403,1},
         [{cons,
              {403,13},
              {char,{403,14},94},
              {cons,{403,17},{var,{403,17},'C'},{var,{403,19},'Cs'}}},
          {var,{403,24},'Pos'}],
         [],
         [{debug_line,404,151},
          {match,
              {404,5},
              {var,{404,5},'Val'},
              {op,{404,13},'band',{var,{404,11},'C'},{integer,{404,18},31}}},
          {debug_line,405,152},
          {tuple,
              {405,5},
              [{var,{405,6},'Val'},
               {var,{405,10},'Cs'},
               {var,{405,13},'Pos'}]}]},
     {clause,
         {410,1},
         [{cons,{410,13},{char,{410,14},10},{var,{410,18},'Cs'}},
          {var,{410,22},'Pos'}],
         [],
         [{debug_line,411,153},
          {tuple,
              {411,5},
              [{char,{411,6},10},
               {var,{411,10},'Cs'},
               {op,{411,16},'+',{var,{411,13},'Pos'},{integer,{411,17},1}}]}]},
     {clause,
         {412,1},
         [{cons,{412,13},{var,{412,14},'C0'},{var,{412,17},'Cs'}},
          {var,{412,21},'Pos'}],
         [],
         [{debug_line,413,154},
          {match,
              {413,5},
              {var,{413,5},'C'},
              {call,{413,9},{atom,{413,9},escape_char},[{var,{413,21},'C0'}]}},
          {debug_line,414,155},
          {tuple,
              {414,5},
              [{var,{414,6},'C'},{var,{414,8},'Cs'},{var,{414,11},'Pos'}]}]}]}.
{function,{416,1},
          escape_char,1,
          [{clause,{416,1},
                   [{var,{416,1},'_'}],
                   [[{call,{416,1},
                           {remote,{416,1},
                                   {atom,{416,1},fake},
                                   {atom,{416,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,416,156},{atom,{416,1},ignore}]},
           {clause,{416,1},
                   [{char,{416,13},110}],
                   [],
                   [{debug_line,416,157},{char,{416,20},10}]},
           {clause,{417,1},
                   [{char,{417,13},114}],
                   [],
                   [{debug_line,417,158},{char,{417,20},13}]},
           {clause,{418,1},
                   [{char,{418,13},116}],
                   [],
                   [{debug_line,418,159},{char,{418,20},9}]},
           {clause,{419,1},
                   [{char,{419,13},118}],
                   [],
                   [{debug_line,419,160},{char,{419,20},11}]},
           {clause,{420,1},
                   [{char,{420,13},98}],
                   [],
                   [{debug_line,420,161},{char,{420,20},8}]},
           {clause,{421,1},
                   [{char,{421,13},102}],
                   [],
                   [{debug_line,421,162},{char,{421,20},12}]},
           {clause,{422,1},
                   [{char,{422,13},101}],
                   [],
                   [{debug_line,422,163},{char,{422,20},27}]},
           {clause,{423,1},
                   [{char,{423,13},115}],
                   [],
                   [{debug_line,423,164},{char,{423,20},32}]},
           {clause,{424,1},
                   [{char,{424,13},100}],
                   [],
                   [{debug_line,424,165},{char,{424,20},127}]},
           {clause,{425,1},
                   [{var,{425,13},'C'}],
                   [],
                   [{debug_line,425,166},{var,{425,19},'C'}]}]}.
{function,
    {441,1},
    scan_number,4,
    [{clause,
         {441,1},
         [{var,{441,1},'_'},
          {var,{441,1},'_'},
          {var,{441,1},'_'},
          {var,{441,1},'_'}],
         [[{call,
               {441,1},
               {remote,
                   {441,1},
                   {atom,{441,1},fake},
                   {atom,{441,1},is_beam_bif_info}},
               []}]],
         [{debug_line,441,167},{atom,{441,1},ignore}]},
     {clause,
         {441,1},
         [{var,{441,13},'C'},
          {var,{441,16},'Cs0'},
          {var,{441,21},'Toks'},
          {var,{441,27},'Pos'}],
         [[{call,
               {442,7},
               {remote,
                   {442,7},
                   {atom,{442,7},erlang},
                   {atom,{442,7},is_integer}},
               [{var,{442,18},'C'}]},
           {op,{442,24},'>=',{var,{442,22},'C'},{char,{442,27},48}},
           {op,{442,33},'=<',{var,{442,31},'C'},{char,{442,36},57}}]],
         [{debug_line,443,168},
          {match,
              {443,5},
              {tuple,
                  {443,5},
                  [{var,{443,6},'Ncs'},
                   {var,{443,10},'Cs'},
                   {var,{443,13},'Pos1'}]},
              {call,
                  {443,21},
                  {atom,{443,21},scan_integer},
                  [{var,{443,34},'Cs0'},
                   {block,0,
                       [{cons,{443,39},{var,{443,40},'C'},{nil,{443,41}}}]},
                   {var,{443,44},'Pos'}]}},
          {debug_line,444,169},
          {call,
              {444,5},
              {atom,{444,5},scan_after_int},
              [{var,{444,20},'Cs'},
               {var,{444,24},'Ncs'},
               {var,{444,29},'Toks'},
               {var,{444,35},'Pos'},
               {var,{444,40},'Pos1'}]}]}]}.
{function,
    {446,1},
    scan_signed_number,5,
    [{clause,
         {446,1},
         [{var,{446,1},'_'},
          {var,{446,1},'_'},
          {var,{446,1},'_'},
          {var,{446,1},'_'},
          {var,{446,1},'_'}],
         [[{call,
               {446,1},
               {remote,
                   {446,1},
                   {atom,{446,1},fake},
                   {atom,{446,1},is_beam_bif_info}},
               []}]],
         [{debug_line,446,170},{atom,{446,1},ignore}]},
     {clause,
         {446,1},
         [{var,{446,20},'S'},
          {var,{446,23},'C'},
          {var,{446,26},'Cs0'},
          {var,{446,31},'Toks'},
          {var,{446,37},'Pos'}],
         [],
         [{debug_line,447,171},
          {match,
              {447,5},
              {tuple,
                  {447,5},
                  [{var,{447,6},'Ncs'},
                   {var,{447,10},'Cs'},
                   {var,{447,13},'Pos1'}]},
              {call,
                  {447,21},
                  {atom,{447,21},scan_integer},
                  [{var,{447,34},'Cs0'},
                   {block,0,
                       [{cons,
                            {447,39},
                            {var,{447,40},'C'},
                            {cons,
                                {447,42},
                                {var,{447,42},'S'},
                                {nil,{447,43}}}}]},
                   {var,{447,46},'Pos'}]}},
          {debug_line,448,172},
          {call,
              {448,5},
              {atom,{448,5},scan_after_int},
              [{var,{448,20},'Cs'},
               {var,{448,24},'Ncs'},
               {var,{448,29},'Toks'},
               {var,{448,35},'Pos'},
               {var,{448,40},'Pos1'}]}]}]}.
{function,
    {450,1},
    scan_integer,3,
    [{clause,
         {450,1},
         [{var,{450,1},'_'},{var,{450,1},'_'},{var,{450,1},'_'}],
         [[{call,
               {450,1},
               {remote,
                   {450,1},
                   {atom,{450,1},fake},
                   {atom,{450,1},is_beam_bif_info}},
               []}]],
         [{debug_line,450,173},{atom,{450,1},ignore}]},
     {clause,
         {450,1},
         [{cons,{450,14},{var,{450,15},'C'},{var,{450,17},'Cs'}},
          {var,{450,22},'Stack'},
          {var,{450,29},'Pos'}],
         [[{call,
               {451,7},
               {remote,
                   {451,7},
                   {atom,{451,7},erlang},
                   {atom,{451,7},is_integer}},
               [{var,{451,18},'C'}]},
           {op,{451,24},'>=',{var,{451,22},'C'},{char,{451,27},48}},
           {op,{451,33},'=<',{var,{451,31},'C'},{char,{451,36},57}}]],
         [{debug_line,452,174},
          {call,
              {452,5},
              {atom,{452,5},scan_integer},
              [{var,{452,18},'Cs'},
               {block,0,
                   [{cons,
                        {452,22},
                        {var,{452,23},'C'},
                        {var,{452,25},'Stack'}}]},
               {var,{452,33},'Pos'}]}]},
     {clause,
         {453,1},
         [{var,{453,14},'Cs'},{var,{453,18},'Stack'},{var,{453,25},'Pos'}],
         [],
         [{debug_line,454,175},
          {tuple,
              {454,5},
              [{var,{454,6},'Stack'},
               {var,{454,12},'Cs'},
               {var,{454,15},'Pos'}]}]}]}.
{function,
    {456,1},
    scan_after_int,5,
    [{clause,
         {456,1},
         [{var,{456,1},'_'},
          {var,{456,1},'_'},
          {var,{456,1},'_'},
          {var,{456,1},'_'},
          {var,{456,1},'_'}],
         [[{call,
               {456,1},
               {remote,
                   {456,1},
                   {atom,{456,1},fake},
                   {atom,{456,1},is_beam_bif_info}},
               []}]],
         [{debug_line,456,176},{atom,{456,1},ignore}]},
     {clause,
         {456,1},
         [{cons,
              {456,16},
              {char,{456,17},46},
              {cons,{456,20},{var,{456,20},'C'},{var,{456,22},'Cs0'}}},
          {var,{456,28},'Ncs0'},
          {var,{456,34},'Toks'},
          {var,{456,40},'SPos'},
          {var,{456,46},'CPos'}],
         [[{call,
               {457,7},
               {remote,
                   {457,7},
                   {atom,{457,7},erlang},
                   {atom,{457,7},is_integer}},
               [{var,{457,18},'C'}]},
           {op,{457,24},'>=',{var,{457,22},'C'},{char,{457,27},48}},
           {op,{457,33},'=<',{var,{457,31},'C'},{char,{457,36},57}}]],
         [{debug_line,458,177},
          {match,
              {458,5},
              {tuple,
                  {458,5},
                  [{var,{458,6},'Ncs'},
                   {var,{458,10},'Cs'},
                   {var,{458,13},'CPos1'}]},
              {call,
                  {458,22},
                  {atom,{458,22},scan_integer},
                  [{var,{458,35},'Cs0'},
                   {block,0,
                       [{cons,
                            {458,40},
                            {var,{458,41},'C'},
                            {cons,
                                {458,43},
                                {char,{458,43},46},
                                {var,{458,46},'Ncs0'}}}]},
                   {var,{458,53},'CPos'}]}},
          {debug_line,459,178},
          {call,
              {459,5},
              {atom,{459,5},scan_after_fraction},
              [{var,{459,25},'Cs'},
               {var,{459,29},'Ncs'},
               {var,{459,34},'Toks'},
               {var,{459,40},'SPos'},
               {var,{459,46},'CPos1'}]}]},
     {clause,
         {460,1},
         [{cons,{460,16},{char,{460,17},35},{var,{460,20},'Cs'}},
          {var,{460,25},'Ncs'},
          {var,{460,30},'Toks'},
          {var,{460,36},'SPos'},
          {var,{460,42},'CPos'}],
         [],
         [{debug_line,461,179},
          {'case',
              {461,5},
              {call,
                  {461,10},
                  {remote,
                      {461,10},
                      {atom,{461,10},erlang},
                      {atom,{461,10},list_to_integer}},
                  [{block,0,
                       [{call,
                            {461,26},
                            {remote,
                                {461,26},
                                {atom,{461,26},lists},
                                {atom,{461,26},reverse}},
                            [{var,{461,34},'Ncs'}]}]}]},
              [{clause,
                   {462,2},
                   [{var,{462,2},'Base'}],
                   [[{call,
                         {462,12},
                         {remote,
                             {462,12},
                             {atom,{462,12},erlang},
                             {atom,{462,12},is_integer}},
                         [{var,{462,23},'Base'}]},
                     {op,{462,35},
                         '>=',
                         {var,{462,30},'Base'},
                         {integer,{462,38},2}},
                     {op,{462,46},
                         '=<',
                         {var,{462,41},'Base'},
                         {integer,{462,49},16}}]],
                   [{debug_line,463,180},
                    {call,
                        {463,6},
                        {atom,{463,6},scan_based_int},
                        [{var,{463,21},'Cs'},
                         {integer,{463,25},0},
                         {var,{463,28},'Base'},
                         {var,{463,34},'Toks'},
                         {var,{463,40},'SPos'},
                         {var,{463,46},'CPos'}]}]},
               {clause,
                   {464,2},
                   [{var,{464,2},'Base'}],
                   [],
                   [{debug_line,465,181},
                    {call,
                        {465,6},
                        {atom,{465,6},scan_error},
                        [{block,0,
                             [{tuple,
                                  {465,17},
                                  [{atom,{465,18},base},
                                   {var,{465,23},'Base'}]}]},
                         {var,{465,30},'CPos'}]}]}]}]},
     {clause,
         {467,1},
         [{var,{467,16},'Cs'},
          {var,{467,20},'Ncs'},
          {var,{467,25},'Toks'},
          {var,{467,31},'SPos'},
          {var,{467,37},'CPos'}],
         [],
         [{debug_line,468,182},
          {match,
              {468,5},
              {var,{468,5},'N'},
              {call,
                  {468,9},
                  {remote,
                      {468,9},
                      {atom,{468,9},erlang},
                      {atom,{468,9},list_to_integer}},
                  [{block,0,
                       [{call,
                            {468,25},
                            {remote,
                                {468,25},
                                {atom,{468,25},lists},
                                {atom,{468,25},reverse}},
                            [{var,{468,33},'Ncs'}]}]}]}},
          {debug_line,469,183},
          {call,
              {469,5},
              {atom,{469,5},scan1},
              [{var,{469,11},'Cs'},
               {block,0,
                   [{cons,
                        {469,15},
                        {tuple,
                            {469,16},
                            [{atom,{469,17},integer},
                             {var,{469,25},'SPos'},
                             {var,{469,30},'N'}]},
                        {var,{469,33},'Toks'}}]},
               {var,{469,40},'CPos'}]}]}]}.
{function,
    {471,1},
    scan_based_int,6,
    [{clause,
         {471,1},
         [{var,{471,1},'_'},
          {var,{471,1},'_'},
          {var,{471,1},'_'},
          {var,{471,1},'_'},
          {var,{471,1},'_'},
          {var,{471,1},'_'}],
         [[{call,
               {471,1},
               {remote,
                   {471,1},
                   {atom,{471,1},fake},
                   {atom,{471,1},is_beam_bif_info}},
               []}]],
         [{debug_line,471,184},{atom,{471,1},ignore}]},
     {clause,
         {471,1},
         [{cons,{471,16},{var,{471,17},'C'},{var,{471,19},'Cs'}},
          {var,{471,24},'SoFar'},
          {var,{471,31},'Base'},
          {var,{471,37},'Toks'},
          {var,{471,43},'SPos'},
          {var,{471,49},'CPos'}],
         [[{call,
               {472,7},
               {remote,
                   {472,7},
                   {atom,{472,7},erlang},
                   {atom,{472,7},is_integer}},
               [{var,{472,18},'C'}]},
           {op,{472,24},'>=',{var,{472,22},'C'},{char,{472,27},48}},
           {op,{472,33},'=<',{var,{472,31},'C'},{char,{472,36},57}},
           {op,{472,42},
               '<',
               {var,{472,40},'C'},
               {op,{472,49},'+',{var,{472,44},'Base'},{char,{472,51},48}}}]],
         [{debug_line,473,185},
          {match,
              {473,5},
              {var,{473,5},'Next'},
              {op,{473,25},
                  '+',
                  {op,{473,18},
                      '*',
                      {var,{473,12},'SoFar'},
                      {var,{473,20},'Base'}},
                  {op,{473,30},'-',{var,{473,28},'C'},{char,{473,32},48}}}},
          {debug_line,474,186},
          {call,
              {474,5},
              {atom,{474,5},scan_based_int},
              [{var,{474,20},'Cs'},
               {var,{474,24},'Next'},
               {var,{474,30},'Base'},
               {var,{474,36},'Toks'},
               {var,{474,42},'SPos'},
               {var,{474,48},'CPos'}]}]},
     {clause,
         {475,1},
         [{cons,{475,16},{var,{475,17},'C'},{var,{475,19},'Cs'}},
          {var,{475,24},'SoFar'},
          {var,{475,31},'Base'},
          {var,{475,37},'Toks'},
          {var,{475,43},'SPos'},
          {var,{475,49},'CPos'}],
         [[{call,
               {476,7},
               {remote,
                   {476,7},
                   {atom,{476,7},erlang},
                   {atom,{476,7},is_integer}},
               [{var,{476,18},'C'}]},
           {op,{476,24},'>=',{var,{476,22},'C'},{char,{476,27},97}},
           {op,{476,33},'=<',{var,{476,31},'C'},{char,{476,36},102}},
           {op,{476,42},
               '<',
               {var,{476,40},'C'},
               {op,{476,54},
                   '-',
                   {op,{476,49},'+',{var,{476,44},'Base'},{char,{476,51},97}},
                   {integer,{476,56},10}}}]],
         [{debug_line,477,187},
          {match,
              {477,5},
              {var,{477,5},'Next'},
              {op,{477,25},
                  '+',
                  {op,{477,18},
                      '*',
                      {var,{477,12},'SoFar'},
                      {var,{477,20},'Base'}},
                  {op,{477,35},
                      '+',
                      {op,{477,30},'-',{var,{477,28},'C'},{char,{477,32},97}},
                      {integer,{477,37},10}}}},
          {debug_line,478,188},
          {call,
              {478,5},
              {atom,{478,5},scan_based_int},
              [{var,{478,20},'Cs'},
               {var,{478,24},'Next'},
               {var,{478,30},'Base'},
               {var,{478,36},'Toks'},
               {var,{478,42},'SPos'},
               {var,{478,48},'CPos'}]}]},
     {clause,
         {479,1},
         [{cons,{479,16},{var,{479,17},'C'},{var,{479,19},'Cs'}},
          {var,{479,24},'SoFar'},
          {var,{479,31},'Base'},
          {var,{479,37},'Toks'},
          {var,{479,43},'SPos'},
          {var,{479,49},'CPos'}],
         [[{call,
               {480,7},
               {remote,
                   {480,7},
                   {atom,{480,7},erlang},
                   {atom,{480,7},is_integer}},
               [{var,{480,18},'C'}]},
           {op,{480,24},'>=',{var,{480,22},'C'},{char,{480,27},65}},
           {op,{480,33},'=<',{var,{480,31},'C'},{char,{480,36},70}},
           {op,{480,42},
               '<',
               {var,{480,40},'C'},
               {op,{480,54},
                   '-',
                   {op,{480,49},'+',{var,{480,44},'Base'},{char,{480,51},65}},
                   {integer,{480,56},10}}}]],
         [{debug_line,481,189},
          {match,
              {481,5},
              {var,{481,5},'Next'},
              {op,{481,25},
                  '+',
                  {op,{481,18},
                      '*',
                      {var,{481,12},'SoFar'},
                      {var,{481,20},'Base'}},
                  {op,{481,35},
                      '+',
                      {op,{481,30},'-',{var,{481,28},'C'},{char,{481,32},65}},
                      {integer,{481,37},10}}}},
          {debug_line,482,190},
          {call,
              {482,5},
              {atom,{482,5},scan_based_int},
              [{var,{482,20},'Cs'},
               {var,{482,24},'Next'},
               {var,{482,30},'Base'},
               {var,{482,36},'Toks'},
               {var,{482,42},'SPos'},
               {var,{482,48},'CPos'}]}]},
     {clause,
         {483,1},
         [{var,{483,16},'Cs'},
          {var,{483,20},'SoFar'},
          {var,{483,27},'_'},
          {var,{483,30},'Toks'},
          {var,{483,36},'SPos'},
          {var,{483,42},'CPos'}],
         [],
         [{debug_line,484,191},
          {call,
              {484,5},
              {atom,{484,5},scan1},
              [{var,{484,11},'Cs'},
               {block,0,
                   [{cons,
                        {484,15},
                        {tuple,
                            {484,16},
                            [{atom,{484,17},integer},
                             {var,{484,25},'SPos'},
                             {var,{484,30},'SoFar'}]},
                        {var,{484,37},'Toks'}}]},
               {var,{484,44},'CPos'}]}]}]}.
{function,
    {486,1},
    scan_after_fraction,5,
    [{clause,
         {486,1},
         [{var,{486,1},'_'},
          {var,{486,1},'_'},
          {var,{486,1},'_'},
          {var,{486,1},'_'},
          {var,{486,1},'_'}],
         [[{call,
               {486,1},
               {remote,
                   {486,1},
                   {atom,{486,1},fake},
                   {atom,{486,1},is_beam_bif_info}},
               []}]],
         [{debug_line,486,192},{atom,{486,1},ignore}]},
     {clause,
         {486,1},
         [{cons,{486,21},{char,{486,22},69},{var,{486,25},'Cs'}},
          {var,{486,30},'Ncs'},
          {var,{486,35},'Toks'},
          {var,{486,41},'SPos'},
          {var,{486,47},'CPos'}],
         [],
         [{debug_line,487,193},
          {call,
              {487,5},
              {atom,{487,5},scan_exponent},
              [{var,{487,19},'Cs'},
               {block,0,
                   [{cons,{487,23},{char,{487,24},69},{var,{487,27},'Ncs'}}]},
               {var,{487,33},'Toks'},
               {var,{487,39},'SPos'},
               {var,{487,45},'CPos'}]}]},
     {clause,
         {488,1},
         [{cons,{488,21},{char,{488,22},101},{var,{488,25},'Cs'}},
          {var,{488,30},'Ncs'},
          {var,{488,35},'Toks'},
          {var,{488,41},'SPos'},
          {var,{488,47},'CPos'}],
         [],
         [{debug_line,489,194},
          {call,
              {489,5},
              {atom,{489,5},scan_exponent},
              [{var,{489,19},'Cs'},
               {block,0,
                   [{cons,{489,23},{char,{489,24},69},{var,{489,27},'Ncs'}}]},
               {var,{489,33},'Toks'},
               {var,{489,39},'SPos'},
               {var,{489,45},'CPos'}]}]},
     {clause,
         {490,1},
         [{var,{490,21},'Cs'},
          {var,{490,25},'Ncs'},
          {var,{490,30},'Toks'},
          {var,{490,36},'SPos'},
          {var,{490,42},'CPos'}],
         [],
         [{debug_line,491,195},
          {'case',
              {491,5},
              {'catch',
                  {491,10},
                  {call,
                      {491,16},
                      {remote,
                          {491,16},
                          {atom,{491,16},erlang},
                          {atom,{491,16},list_to_float}},
                      [{block,0,
                           [{call,
                                {491,30},
                                {remote,
                                    {491,30},
                                    {atom,{491,30},lists},
                                    {atom,{491,30},reverse}},
                                [{var,{491,38},'Ncs'}]}]}]}},
              [{clause,
                   {492,2},
                   [{var,{492,2},'N'}],
                   [[{call,
                         {492,9},
                         {remote,
                             {492,9},
                             {atom,{492,9},erlang},
                             {atom,{492,9},is_float}},
                         [{var,{492,18},'N'}]}]],
                   [{debug_line,493,196},
                    {call,
                        {493,6},
                        {atom,{493,6},scan1},
                        [{var,{493,12},'Cs'},
                         {block,0,
                             [{cons,
                                  {493,16},
                                  {tuple,
                                      {493,17},
                                      [{atom,{493,18},float},
                                       {var,{493,24},'SPos'},
                                       {var,{493,29},'N'}]},
                                  {var,{493,32},'Toks'}}]},
                         {var,{493,39},'CPos'}]}]},
               {clause,
                   {494,2},
                   [{var,{494,2},'_Error'}],
                   [],
                   [{debug_line,494,197},
                    {call,
                        {494,12},
                        {atom,{494,12},scan_error},
                        [{block,0,
                             [{tuple,
                                  {494,23},
                                  [{atom,{494,24},illegal},
                                   {atom,{494,32},float}]}]},
                         {var,{494,40},'SPos'}]}]}]}]}]}.
{function,
    {500,1},
    scan_exponent,5,
    [{clause,
         {500,1},
         [{var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'},
          {var,{500,1},'_'}],
         [[{call,
               {500,1},
               {remote,
                   {500,1},
                   {atom,{500,1},fake},
                   {atom,{500,1},is_beam_bif_info}},
               []}]],
         [{debug_line,500,198},{atom,{500,1},ignore}]},
     {clause,
         {500,1},
         [{cons,{500,15},{char,{500,16},43},{var,{500,19},'Cs'}},
          {var,{500,24},'Ncs'},
          {var,{500,29},'Toks'},
          {var,{500,35},'SPos'},
          {var,{500,41},'CPos'}],
         [],
         [{debug_line,501,199},
          {call,
              {501,5},
              {atom,{501,5},scan_exponent1},
              [{var,{501,20},'Cs'},
               {block,0,
                   [{cons,{501,24},{char,{501,25},43},{var,{501,28},'Ncs'}}]},
               {var,{501,34},'Toks'},
               {var,{501,40},'SPos'},
               {var,{501,46},'CPos'}]}]},
     {clause,
         {502,1},
         [{cons,{502,15},{char,{502,16},45},{var,{502,19},'Cs'}},
          {var,{502,24},'Ncs'},
          {var,{502,29},'Toks'},
          {var,{502,35},'SPos'},
          {var,{502,41},'CPos'}],
         [],
         [{debug_line,503,200},
          {call,
              {503,5},
              {atom,{503,5},scan_exponent1},
              [{var,{503,20},'Cs'},
               {block,0,
                   [{cons,{503,24},{char,{503,25},45},{var,{503,28},'Ncs'}}]},
               {var,{503,34},'Toks'},
               {var,{503,40},'SPos'},
               {var,{503,46},'CPos'}]}]},
     {clause,
         {504,1},
         [{var,{504,15},'Cs'},
          {var,{504,19},'Ncs'},
          {var,{504,24},'Toks'},
          {var,{504,30},'SPos'},
          {var,{504,36},'CPos'}],
         [],
         [{debug_line,505,201},
          {call,
              {505,5},
              {atom,{505,5},scan_exponent1},
              [{var,{505,20},'Cs'},
               {var,{505,24},'Ncs'},
               {var,{505,29},'Toks'},
               {var,{505,35},'SPos'},
               {var,{505,41},'CPos'}]}]}]}.
{function,
    {507,1},
    scan_exponent1,5,
    [{clause,
         {507,1},
         [{var,{507,1},'_'},
          {var,{507,1},'_'},
          {var,{507,1},'_'},
          {var,{507,1},'_'},
          {var,{507,1},'_'}],
         [[{call,
               {507,1},
               {remote,
                   {507,1},
                   {atom,{507,1},fake},
                   {atom,{507,1},is_beam_bif_info}},
               []}]],
         [{debug_line,507,202},{atom,{507,1},ignore}]},
     {clause,
         {507,1},
         [{cons,{507,16},{var,{507,17},'C'},{var,{507,19},'Cs0'}},
          {var,{507,25},'Ncs0'},
          {var,{507,31},'Toks'},
          {var,{507,37},'SPos'},
          {var,{507,43},'CPos'}],
         [[{call,
               {508,7},
               {remote,
                   {508,7},
                   {atom,{508,7},erlang},
                   {atom,{508,7},is_integer}},
               [{var,{508,18},'C'}]},
           {op,{508,24},'>=',{var,{508,22},'C'},{char,{508,27},48}},
           {op,{508,33},'=<',{var,{508,31},'C'},{char,{508,36},57}}]],
         [{debug_line,509,203},
          {match,
              {509,5},
              {tuple,
                  {509,5},
                  [{var,{509,6},'Ncs'},
                   {var,{509,10},'Cs'},
                   {var,{509,13},'CPos1'}]},
              {call,
                  {509,22},
                  {atom,{509,22},scan_integer},
                  [{var,{509,35},'Cs0'},
                   {block,0,
                       [{cons,
                            {509,40},
                            {var,{509,41},'C'},
                            {var,{509,43},'Ncs0'}}]},
                   {var,{509,50},'CPos'}]}},
          {debug_line,510,204},
          {'case',
              {510,5},
              {'catch',
                  {510,10},
                  {call,
                      {510,16},
                      {remote,
                          {510,16},
                          {atom,{510,16},erlang},
                          {atom,{510,16},list_to_float}},
                      [{block,0,
                           [{call,
                                {510,30},
                                {remote,
                                    {510,30},
                                    {atom,{510,30},lists},
                                    {atom,{510,30},reverse}},
                                [{var,{510,38},'Ncs'}]}]}]}},
              [{clause,
                   {511,2},
                   [{var,{511,2},'N'}],
                   [[{call,
                         {511,9},
                         {remote,
                             {511,9},
                             {atom,{511,9},erlang},
                             {atom,{511,9},is_float}},
                         [{var,{511,18},'N'}]}]],
                   [{debug_line,512,205},
                    {call,
                        {512,6},
                        {atom,{512,6},scan1},
                        [{var,{512,12},'Cs'},
                         {block,0,
                             [{cons,
                                  {512,16},
                                  {tuple,
                                      {512,17},
                                      [{atom,{512,18},float},
                                       {var,{512,24},'SPos'},
                                       {var,{512,29},'N'}]},
                                  {var,{512,32},'Toks'}}]},
                         {var,{512,39},'CPos1'}]}]},
               {clause,
                   {513,2},
                   [{var,{513,2},'_Error'}],
                   [],
                   [{debug_line,513,206},
                    {call,
                        {513,12},
                        {atom,{513,12},scan_error},
                        [{block,0,
                             [{tuple,
                                  {513,23},
                                  [{atom,{513,24},illegal},
                                   {atom,{513,32},float}]}]},
                         {var,{513,40},'SPos'}]}]}]}]},
     {clause,
         {515,1},
         [{var,{515,16},'_'},
          {var,{515,19},'_'},
          {var,{515,22},'_'},
          {var,{515,25},'_'},
          {var,{515,28},'CPos'}],
         [],
         [{debug_line,516,207},
          {call,
              {516,5},
              {atom,{516,5},scan_error},
              [{atom,{516,16},float},{var,{516,23},'CPos'}]}]}]}.
{function,{518,1},
          scan_error,2,
          [{clause,{518,1},
                   [{var,{518,1},'_'},{var,{518,1},'_'}],
                   [[{call,{518,1},
                           {remote,{518,1},
                                   {atom,{518,1},fake},
                                   {atom,{518,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,518,208},{atom,{518,1},ignore}]},
           {clause,{518,1},
                   [{var,{518,12},'In'},{var,{518,16},'Pos'}],
                   [],
                   [{debug_line,519,209},
                    {tuple,{519,5},
                           [{atom,{519,6},error},
                            {tuple,{519,12},
                                   [{var,{519,13},'Pos'},
                                    {atom,{519,17},core_scan},
                                    {var,{519,27},'In'}]}]}]}]}.
{eof,{520,1}}.
