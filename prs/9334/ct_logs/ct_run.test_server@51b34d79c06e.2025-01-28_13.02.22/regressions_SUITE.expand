{attribute,{1,1},file,{"regressions_SUITE.erl",1}}.
{attribute,{21,2},module,regressions_SUITE}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,99,111,109,109,
             111,110,95,116,101,115,116,45,49,46,50,55,46,54,47,105,110,99,
             108,117,100,101,47,99,116,46,104,114,108],
            1}}.
{attribute,{23,1},file,{"regressions_SUITE.erl",23}}.
{attribute,{24,2},
           export,
           [{all,0},
            {groups,0},
            {init_per_testcase,2},
            {end_per_testcase,2},
            {init_per_group,2},
            {end_per_group,2},
            {init_per_suite,1},
            {end_per_suite,1},
            {suite,0}]}.
{attribute,{28,2},export,[{maps,1}]}.
{function,
    {30,1},
    groups,0,
    [{clause,
         {30,1},
         [],
         [[{call,
               {30,1},
               {remote,
                   {30,1},
                   {atom,{30,1},fake},
                   {atom,{30,1},is_beam_bif_info}},
               []}]],
         [{debug_line,30,1},{atom,{30,1},ignore}]},
     {clause,
         {30,1},
         [],[],
         [{debug_line,31,2},
          {cons,
              {31,5},
              {tuple,
                  {31,6},
                  [{atom,{31,7},p},
                   {call,
                       {31,9},
                       {remote,
                           {31,17},
                           {atom,{31,9},test_lib},
                           {atom,{31,18},parallel}},
                       []},
                   {cons,{32,7},{atom,{32,8},maps},{nil,{32,12}}}]},
              {nil,{32,14}}}]}]}.
{function,{34,1},
          init_per_suite,1,
          [{clause,{34,1},
                   [{var,{34,1},'_'}],
                   [[{call,{34,1},
                           {remote,{34,1},
                                   {atom,{34,1},fake},
                                   {atom,{34,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,34,3},{atom,{34,1},ignore}]},
           {clause,{34,1},
                   [{var,{34,16},'Config'}],
                   [],
                   [{debug_line,35,4},
                    {call,{35,5},
                          {remote,{35,13},
                                  {atom,{35,5},test_lib},
                                  {atom,{35,14},recompile}},
                          [{atom,{35,25},regressions_SUITE}]},
                    {debug_line,36,5},
                    {var,{36,5},'Config'}]}]}.
{function,{38,1},
          end_per_suite,1,
          [{clause,{38,1},
                   [{var,{38,1},'_'}],
                   [[{call,{38,1},
                           {remote,{38,1},
                                   {atom,{38,1},fake},
                                   {atom,{38,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,38,6},{atom,{38,1},ignore}]},
           {clause,{38,1},
                   [{var,{38,15},'_Config'}],
                   [],
                   [{debug_line,39,7},{atom,{39,5},ok}]}]}.
{function,{41,1},
          init_per_group,2,
          [{clause,{41,1},
                   [{var,{41,1},'_'},{var,{41,1},'_'}],
                   [[{call,{41,1},
                           {remote,{41,1},
                                   {atom,{41,1},fake},
                                   {atom,{41,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,41,8},{atom,{41,1},ignore}]},
           {clause,{41,1},
                   [{var,{41,16},'_GroupName'},{var,{41,28},'Config'}],
                   [],
                   [{debug_line,42,9},{var,{42,5},'Config'}]}]}.
{function,{44,1},
          end_per_group,2,
          [{clause,{44,1},
                   [{var,{44,1},'_'},{var,{44,1},'_'}],
                   [[{call,{44,1},
                           {remote,{44,1},
                                   {atom,{44,1},fake},
                                   {atom,{44,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,44,10},{atom,{44,1},ignore}]},
           {clause,{44,1},
                   [{var,{44,15},'_GroupName'},{var,{44,27},'Config'}],
                   [],
                   [{debug_line,45,11},{var,{45,5},'Config'}]}]}.
{function,{47,1},
          init_per_testcase,2,
          [{clause,{47,1},
                   [{var,{47,1},'_'},{var,{47,1},'_'}],
                   [[{call,{47,1},
                           {remote,{47,1},
                                   {atom,{47,1},fake},
                                   {atom,{47,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,47,12},{atom,{47,1},ignore}]},
           {clause,{47,1},
                   [{var,{47,19},'_Case'},{var,{47,26},'Config'}],
                   [],
                   [{debug_line,48,13},{var,{48,5},'Config'}]}]}.
{function,{50,1},
          end_per_testcase,2,
          [{clause,{50,1},
                   [{var,{50,1},'_'},{var,{50,1},'_'}],
                   [[{call,{50,1},
                           {remote,{50,1},
                                   {atom,{50,1},fake},
                                   {atom,{50,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,50,14},{atom,{50,1},ignore}]},
           {clause,{50,1},
                   [{var,{50,18},'_Case'},{var,{50,25},'_Config'}],
                   [],
                   [{debug_line,51,15},{atom,{51,5},ok}]}]}.
{function,
    {53,1},
    suite,0,
    [{clause,
         {53,1},
         [],
         [[{call,
               {53,1},
               {remote,
                   {53,1},
                   {atom,{53,1},fake},
                   {atom,{53,1},is_beam_bif_info}},
               []}]],
         [{debug_line,53,16},{atom,{53,1},ignore}]},
     {clause,
         {53,1},
         [],[],
         [{debug_line,54,17},
          {cons,
              {54,5},
              {tuple,
                  {54,6},
                  [{atom,{54,7},ct_hooks},
                   {cons,
                       {54,16},
                       {atom,{54,17},ts_install_cth},
                       {nil,{54,31}}}]},
              {cons,
                  {55,6},
                  {tuple,
                      {55,6},
                      [{atom,{55,7},timetrap},
                       {tuple,
                           {55,16},
                           [{atom,{55,17},minutes},{integer,{55,25},2}]}]},
                  {nil,{55,28}}}}]}]}.
{function,{57,1},
          all,0,
          [{clause,{57,1},
                   [],
                   [[{call,{57,1},
                           {remote,{57,1},
                                   {atom,{57,1},fake},
                                   {atom,{57,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,57,18},{atom,{57,1},ignore}]},
           {clause,{57,1},
                   [],[],
                   [{debug_line,58,19},
                    {cons,{58,5},
                          {tuple,{58,6},
                                 [{atom,{58,7},group},{atom,{58,13},p}]},
                          {nil,{58,15}}}]}]}.
{function,
 {62,1},
 maps,1,
 [{clause,
   {62,1},
   [{var,{62,1},'_'}],
   [[{call,
      {62,1},
      {remote,{62,1},{atom,{62,1},fake},{atom,{62,1},is_beam_bif_info}},
      []}]],
   [{debug_line,62,20},{atom,{62,1},ignore}]},
  {clause,
   {62,1},
   [{var,{62,6},'Config'}],
   [[{call,
      {62,19},
      {remote,{62,19},{atom,{62,19},erlang},{atom,{62,19},is_list}},
      [{var,{62,27},'Config'}]}]],
   [{debug_line,63,21},
    {match,
     {63,5},
     {var,{63,5},'Ts'},
     {cons,
      {63,10},
      {tuple,
       {63,11},
       [{atom,{63,12},beam_bool_get_elements},
        {bin,
         {64,12},
         [{bin_element,
           {64,14},
           {string,
            {64,14},
            "century(#{ron := operator}, _century) ->\n                  if 0.0; _century, _century, _century -> _century end.\n           "},
           default,default}]}]},
      {cons,
       {67,11},
       {tuple,
        {67,11},
        [{atom,{67,12},empty_map_clauses},
         {bin,
          {68,12},
          [{bin_element,
            {68,14},
            {string,
             {68,14},
             "politics(#{}, researchers) -> concerned;\n              politics(#{[] := _}, workers) -> dot;\n              politics(#{[] := ct}, counsel) -> calls.\n             "},
            default,default}]}]},
       {cons,
        {72,11},
        {tuple,
         {72,11},
         [{atom,{72,12},empty_map_clauses_variable},
          {bin,
           {73,12},
           [{bin_element,
             {73,14},
             {string,
              {73,14},
              "georgia(#{a := effectively}, ratio, is, eventually) -> teens;\n              georgia(#{a := government}, knowledge, poker, partly) -> signed;\n              georgia(#{}, recording, bring, vital) -> divided;\n              georgia(#{0 := 0}, articles, brought, #{true := true, a := There}) -> There.\n             "},
             default,default}]}]},
        {nil,{77,18}}}}}},
    {debug_line,78,22},
    {match,
     {78,5},
     {atom,{78,5},ok},
     {call,
      {78,10},
      {atom,{78,10},run},
      [{var,{78,14},'Config'},{var,{78,22},'Ts'}]}},
    {debug_line,79,23},
    {atom,{79,5},ok}]}]}.
{function,
 {83,1},
 run,2,
 [{clause,
   {83,1},
   [{var,{83,1},'_'},{var,{83,1},'_'}],
   [[{call,
      {83,1},
      {remote,{83,1},{atom,{83,1},fake},{atom,{83,1},is_beam_bif_info}},
      []}]],
   [{debug_line,83,24},{atom,{83,1},ignore}]},
  {clause,
   {83,1},
   [{var,{83,5},'Config'},{var,{83,13},'Tests'}],
   [],
   [{debug_line,84,25},
    {match,
     {84,5},
     {var,{84,5},'F'},
     {'fun',
      {84,9},
      {clauses,
       [{clause,
         {84,12},
         [{tuple,{84,13},[{var,{84,14},'N'},{var,{84,16},'P'}]}],
         [],
         [{debug_line,85,26},
          {call,
           {85,17},
           {remote,{85,19},{atom,{85,17},io},{atom,{85,20},format}},
           [{block,0,[{string,{85,27},"Compiling test for: ~w~n"}]},
            {block,0,[{cons,{85,55},{var,{85,56},'N'},{nil,{85,57}}}]}]},
          {debug_line,86,27},
          {'case',
           {86,17},
           {'catch',
            {86,22},
            {call,
             {86,28},
             {atom,{86,28},run_test},
             [{var,{86,37},'Config'},{var,{86,45},'P'}]}},
           [{clause,
             {87,21},
             [{tuple,{87,21},[{atom,{87,22},'EXIT'},{var,{87,30},'Reason'}]}],
             [],
             [{debug_line,88,28},
              {call,
               {88,25},
               {remote,{88,27},{atom,{88,25},io},{atom,{88,28},format}},
               [{block,0,[{string,{88,35},"~nTest ~p failed.~nReason: ~p~n"}]},
                {block,0,
                 [{debug_line,89,29},
                  {cons,
                   {89,7},
                   {var,{89,8},'N'},
                   {cons,{89,11},{var,{89,11},'Reason'},{nil,{89,17}}}}]}]},
              {debug_line,90,30},
              {call,{90,25},{atom,{90,25},fail},[]}]},
            {clause,
             {91,21},
             [{var,{91,21},'_'}],
             [],
             [{debug_line,91,31},{atom,{91,26},ok}]}]}]}]}}},
    {debug_line,94,32},
    {call,
     {94,5},
     {remote,{94,10},{atom,{94,5},lists},{atom,{94,11},foreach}},
     [{var,{94,19},'F'},{var,{94,22},'Tests'}]}]}]}.
{function,
 {97,1},
 run_test,2,
 [{clause,
   {97,1},
   [{var,{97,1},'_'},{var,{97,1},'_'}],
   [[{call,
      {97,1},
      {remote,{97,1},{atom,{97,1},fake},{atom,{97,1},is_beam_bif_info}},
      []}]],
   [{debug_line,97,33},{atom,{97,1},ignore}]},
  {clause,
   {97,1},
   [{var,{97,10},'Conf'},{var,{97,16},'Test0'}],
   [],
   [{debug_line,98,34},
    {match,
     {98,5},
     {var,{98,5},'Module'},
     {op,
      {98,28},
      '++',
      {string,{98,14},"regressions_"},
      {call,
       {98,30},
       {remote,{98,38},{atom,{98,30},test_lib},{atom,{98,39},uniq}},
       []}}},
    {debug_line,99,35},
    {match,
     {99,5},
     {var,{99,5},'Filename'},
     {op,{99,23},'++',{var,{99,16},'Module'},{string,{99,26},".erl"}}},
    {debug_line,100,36},
    {match,
     {100,5},
     {var,{100,5},'DataDir'},
     {call,
      {100,15},
      {remote,{100,24},{atom,{100,15},proplists},{atom,{100,25},get_value}},
      [{atom,{100,35},priv_dir},{var,{100,45},'Conf'}]}},
    {debug_line,101,37},
    {match,
     {101,5},
     {var,{101,5},'Test'},
     {cons,
      {101,12},
      {string,{101,13},"-module("},
      {cons,
       {101,25},
       {var,{101,25},'Module'},
       {cons,
        {101,33},
        {string,{101,33},"). "},
        {cons,{101,40},{var,{101,40},'Test0'},{nil,{101,45}}}}}}},
    {debug_line,102,38},
    {match,
     {102,5},
     {var,{102,5},'File'},
     {call,
      {102,12},
      {remote,{102,20},{atom,{102,12},filename},{atom,{102,21},join}},
      [{var,{102,26},'DataDir'},{var,{102,35},'Filename'}]}},
    {debug_line,103,39},
    {match,
     {103,5},
     {var,{103,5},'Def'},
     {cons,
      {103,11},
      {atom,{103,12},binary},
      {cons,
       {103,19},
       {atom,{103,19},export_all},
       {cons,{103,30},{atom,{103,30},return},{nil,{103,36}}}}}},
    {debug_line,104,40},
    {match,
     {104,5},
     {var,{104,5},'Opts'},
     {lc,
      {104,12},
      {block,0,[{op,{104,18},'++',{var,{104,14},'Opt'},{var,{104,21},'Def'}}]},
      [{block,0,[{debug_line,105,41},{atom,{105,21},true}]},
       {generate,
        {105,18},
        {var,{105,14},'Opt'},
        {cons,
         {105,21},
         {cons,{105,23},{atom,{105,24},no_postopt},{nil,{105,34}}},
         {cons,
          {106,23},
          {cons,{106,23},{atom,{106,24},no_copt},{nil,{106,31}}},
          {cons,
           {107,23},
           {cons,
            {107,23},
            {atom,{107,24},no_postopt},
            {cons,{107,35},{atom,{107,35},no_copt},{nil,{107,42}}}},
           {cons,
            {108,23},
            {cons,{108,23},{atom,{108,24},inline},{nil,{108,30}}},
            {cons,
             {109,23},
             {cons,
              {109,23},
              {atom,{109,24},inline},
              {cons,{109,31},{atom,{109,31},no_postopt},{nil,{109,41}}}},
             {cons,{110,23},{nil,{110,23}},{nil,{111,21}}}}}}}}}]}},
    {debug_line,112,42},
    {match,
     {112,5},
     {atom,{112,5},ok},
     {call,
      {112,10},
      {remote,{112,14},{atom,{112,10},file},{atom,{112,15},write_file}},
      [{var,{112,26},'File'},{var,{112,32},'Test'}]}},
    {debug_line,113,43},
    {call,
     {113,5},
     {remote,{113,10},{atom,{113,5},lists},{atom,{113,11},foreach}},
     [{block,0,
       [{'fun',
         {113,19},
         {clauses,
          [{clause,
            {113,22},
            [{var,{113,23},'Opt'}],
            [],
            [{debug_line,114,44},
             {call,
              {114,27},
              {remote,{114,29},{atom,{114,27},io},{atom,{114,30},format}},
              [{block,0,[{string,{114,37},"  - compiling with ~p~n"}]},
               {block,0,
                [{cons,{114,64},{var,{114,65},'Opt'},{nil,{114,68}}}]}]},
             {debug_line,115,45},
             {match,
              {115,27},
              {tuple,
               {115,27},
               [{atom,{115,28},ok},
                {var,{115,31},'_M'},
                {var,{115,34},'_Bin'},
                {var,{115,39},'_'}]},
              {call,
               {115,44},
               {remote,{115,51},{atom,{115,44},compile},{atom,{115,52},file}},
               [{var,{115,57},'File'},{var,{115,62},'Opt'}]}}]}]}}]},
      {var,{116,24},'Opts'}]},
    {debug_line,117,46},
    {call,
     {117,5},
     {remote,{117,9},{atom,{117,5},file},{atom,{117,10},delete}},
     [{var,{117,17},'File'}]},
    {debug_line,118,47},
    {atom,{118,5},ok}]}]}.
{function,{120,1},
          fail,0,
          [{clause,{120,1},
                   [],
                   [[{call,{120,1},
                           {remote,{120,1},
                                   {atom,{120,1},fake},
                                   {atom,{120,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,120,48},{atom,{120,1},ignore}]},
           {clause,{120,1},
                   [],[],
                   [{debug_line,121,49},
                    {call,{121,5},
                          {remote,{121,7},
                                  {atom,{121,5},ct},
                                  {atom,{121,8},fail}},
                          [{atom,{121,13},failed}]}]}]}.
{eof,{122,1}}.
